{"globalvars": ["av_camellia_size", "ff_celt_qn_exp2", "ff_celt_mean_energy", "ff_sbr_noise_table", "ff_asink_abuffer", "ff_silk_model_pulse_count", "ff_flac_parser", "ff_vsrc_buffer", "av_cast5_size", "ff_mpeg12_mbAddrIncrTable", "ff_alac_channel_layout_offsets", "avpriv_mpa_bitrate_tab", "ff_h263_intra_MCBPC_code", "ff_cos_8192", "ff_sine_128", "ff_cos_64_fixed", "ff_h263_inter_MCBPC_bits", "ff_silk_model_pitch_contour_mbwb10ms", "ff_aac_decoder", "ff_ac3_fast_decay_tab", "ff_silk_lsf_weight_sel_wb", "ff_celt_static_alloc", "ff_mp3adu_decoder", "ff_pcm_s32le_demuxer", "ff_sine_32", "ff_aac_eld_window_512_fixed", "ff_sine_512_fixed", "ff_silk_model_excitation_lsb", "ff_aac_spectral_sizes", "ff_xwma_demuxer", "ff_aac_spectral_codes", "ff_aac_kbd_long_1024", "ff_silk_model_pitch_contour_mbwb20ms", "ff_silk_lsf_weight_sel_nbmb", "ff_sine_64_fixed", "ff_sine_8192_fixed", "ff_celt_beta_coef", "ff_mp3adufloat_decoder", "ff_rl_mpeg2", "ff_aac_num_swb_1024", "ff_sine_2048", "ff_riff_info_conv", "ff_silk_pitch_offset_nb20ms", "ff_modified_quant_tab", "ff_pow_0_75", "ff_pcm_f32le_decoder", "ff_old_flac_codec", "ff_h263_intra_MCBPC_vlc", "ff_ogm_video_codec", "ff_mp2_decoder", "ff_swb_offset_960", "ff_silk_model_pulse_location", "ff_sine_32_fixed", "ff_id3v2_tags", "ff_av1_profiles", "ff_mba_max", "ff_sln_demuxer", "ff_pcm_f64le_demuxer", "ff_wav_demuxer", "ff_sqrt_tab", "ff_cos_tabs", "ff_cos_32768", "ff_sine_1024_fixed", "ff_vf_fifo", "ff_id3v2_picture_types", "ff_pcm_u16le_demuxer", "ff_silk_model_lsf_s1", "ff_silk_model_ltp_filter1_sel", "ff_cos_65536", "ff_celt_freq_range", "ff_file_protocol", "ff_mpeg12_mbMotionVectorTable", "ff_silk_model_ltp_filter0_sel", "av_codec_ffversion", "ff_celt_window2", "ff_vp9_profiles", "ff_pcm_s24be_demuxer", "ff_crop_tab", "ff_celt_codec", "ff_caf_demuxer", "ff_h263_decoder", "ff_cos_512_fixed", "ff_cbrt_tab_fixed", "ff_af_anequalizer", "ff_pcm_s8_planar_decoder", "ff_af_treble", "ff_celt_band_end", "ff_ac3_db_per_bit_tab", "ff_silk_lsf_ordering_wb", "ff_aac_num_swb_480", "ff_interleaved_se_golomb_vlc_code", "ff_ac3_floor_tab", "ff_daala_codec", "ff_mpeg1_dc_scale_table", "ff_codec_wav_guids", "ff_silk_lsf_codebook_wb", "ff_silk_model_ltp_filter2_sel", "ff_mbincr_vlc", "ff_pcm_s32be_decoder", "ff_sine_4096_fixed", "ff_h263_mbtype_b_tab", "ff_mpeg4_studio_dc_luma", "ff_mp4_obj_type", "ff_mpeg1_aspect", "ff_aac_num_swb_128", "ff_ue_golomb_vlc_code", "ff_pcm_s24le_decoder", "ff_cos_512", "ff_rl_intra_aic", "av_util_ffversion", "ff_pcm_s32le_decoder", "ff_h263_pixel_aspect", "ff_mp1_decoder", "ff_pcm_mulaw_decoder", "ff_aac_kbd_long_960", "ff_pcm_alaw_demuxer", "ff_mpegps_demuxer", "ff_mpeg2_frame_rate_tab", "ff_mpeg1_default_non_intra_matrix", "ff_mp3on4float_decoder", "ff_aiff_demuxer", "ff_mpeg4_intra_run", "ff_pcm_s24le_planar_decoder", "ff_af_alimiter", "ff_wma_hgain_huffbits", "ff_mb_ptype_vlc", "ff_asf_metadata_conv", "ff_inverse", "ff_theora_codec", "ff_aic_dc_scale_table", "ff_ac3_log_add_tab", "ff_asf_jfif_media", "ff_swb_offset_512", "ff_cos_1024_fixed", "ff_asf_data_header", "ff_silk_pitch_scale", "ff_cos_2048_fixed", "ff_celt_pvq_u_row", "ff_asf_codec_comment1_header", "ff_vorbis_decoder", "ff_silk_model_exc_rate", "ff_mpeg4video_parser", "ff_cos_4096", "ff_aac_scalefactor_bits", "ff_sbc_profiles", "ff_swb_offset_128", "ff_silk_model_pitch_lowbits_mb", "ff_mpeg4_DCtab_chrom", "ff_dc_chroma_vlc", "av_tree_node_size", "ff_mpeg4_rl_intra", "ff_ac3_channels_tab", "ff_h263_loop_filter_strength", "ff_opus_default_coupled_streams", "ff_pcm_u32le_decoder", "ff_pcm_f64le_decoder", "ff_asf_header", "ff_vorbis_vwin", "ff_asf_mutex_language", "ff_silk_ltp_filter1_taps", "ff_mpa_synth_window_float", "ff_aac_pow2sf_tab", "ff_cos_131072_fixed", "ff_cos_8192_fixed", "ff_mpeg12_frame_rate_tab", "ff_pcm_f64be_decoder", "ff_silk_model_lcg_seed", "ff_pcm_u24be_decoder", "ff_pcm_s16le_planar_decoder", "ff_silk_model_pitch_highbits", "ff_mpegts_demuxer", "ff_mpeg4_y_dc_scale_table", "ff_pcm_s16be_decoder", "ff_amr_demuxer", "ff_pcm_u16be_demuxer", "ff_vsink_buffer", "ff_codec_movaudio_tags", "ff_asf_group_mutual_exclusion_object", "ff_celt_alpha_coef", "ff_fc_2pulses_9bits_track2_gray", "ff_silk_model_mid_only", "ff_dca_profiles", "ff_raw_pix_fmt_tags", "ff_speex_codec", "ff_img_tags", "ff_sine_4096", "ff_mpa_synth_window_fixed", "ff_wmav1_decoder", "ff_pcm_s64be_decoder", "ff_aac_num_swb_512", "ff_avio_class", "ff_silk_model_frame_type_inactive", "ff_asf_head1_guid", "ff_wmavoice_decoder", "ff_pcm_s32le_planar_decoder", "ff_pcm_f32be_demuxer", "ff_silk_pitch_offset_mbwb10ms", "ff_aac_fixed_decoder", "ff_fc_2pulses_9bits_track1_gray", "ff_mpeg4_resync_prefix", "ff_ac3_dec_channel_map", "ff_mpa_alloc_tables", "ff_asf_stream_header", "ff_aac_parser", "ff_flac_blocksize_table", "ff_pow_0_55", "ff_mpeg12_vlc_dc_chroma_bits", "ff_jpeg2000_profiles", "av_md5_size", "ff_mpeg4audio_channels", "ff_silk_stereo_interp_len", "ff_celt_model_tapset", "ff_silk_model_lsf_interpolation_offset", "ff_pcm_lxf_decoder", "ff_id3v2_34_metadata_conv", "ff_ogm_text_codec", "ff_h263_cbpy_vlc", "swr_ffversion", "ff_interleaved_ue_golomb_vlc_code", "ff_aac_scalefactor_code", "ff_mba_length", "ff_eac3_default_chmap", "ff_mpeg12_static_rl_table_store", "ff_mb_btype_vlc", "ff_cos_128", "ff_h263p_decoder", "ff_aac_codebook_vectors", "ff_silk_model_gain_lowbits", "ff_pcm_u24le_demuxer", "ff_sine_64", "ff_inter_run", "ff_h263_rl_inter", "ff_silk_model_pitch_contour_nb20ms", "ff_cos_16384", "ff_asf_ext_stream_embed_stream_header", "ff_pcm_s16be_planar_decoder", "ff_silk_pitch_offset_mbwb20ms", "ff_h263_hwaccel_pixfmt_list_420", "ff_mpa_quant_steps", "ff_mv_vlc", "ff_silk_lsf_pred_weights_wb", "ff_asf_video_conceal_none", "ff_cos_128_fixed", "swri_resampler", "ff_dc_lum_vlc", "av_twofish_size", "ff_celt_freq_bands", "ff_celt_cache_index", "av_ripemd_size", "ff_id3v2_mime_tags", "ff_asf_ext_stream_header", "ff_asf_comment_header", "ff_swb_offset_1024", "ff_h263_inter_MCBPC_vlc", "ff_mpeg4_dc_threshold", "ff_aac_pow34sf_tab", "ff_pow_0_7", "ff_h263_inter_MCBPC_code", "ff_silk_shell_blocks", "ff_old_dirac_codec", "ff_pcm_u16be_decoder", "ff_alternate_horizontal_scan", "ff_silk_model_pitch_contour_nb10ms", "ff_celt_cache_bits", "ff_mpeg4_video_profiles", "ff_ac3_bap_tab", "ff_mpeg12_mbPatTable", "ff_default_chroma_qscale_table", "ff_pcm_s8_demuxer", "ff_mpeg4_c_dc_scale_table", "ff_wma_hgain_huffcodes", "ff_silk_model_stereo_s3", "ff_asf_file_header", "ff_vorbis_channel_layouts", "ff_swb_offset_120", "ff_cos_2048", "ff_rvlc_rl_intra", "ff_celt_tf_select", "ff_pcm_alaw_decoder", "av_aes_size", "ff_pcm_u32le_demuxer", "ff_codec_movvideo_tags", "ff_tns_max_bands_128", "ff_aac_demuxer", "ff_aac_kbd_long_1024_fixed", "ff_mpeg12_vlc_dc_chroma_code", "av_sha512_size", "ff_rl_mpeg1", "ff_celt_static_caps", "ff_h263_cbpy_tab", "ff_silk_model_ltp_scale_index", "ff_flac_demuxer", "ff_sine_8192", "ff_aac_codebook_vector_vals", "ff_mpeg4_intra_vlc", "av_tea_size", "ff_wmalossless_decoder", "avpriv_mpeg4audio_sample_rates", "ff_celt_coarse_energy_dist", "ff_log2_tab", "ff_alternate_vertical_scan", "ff_alac_decoder", "ff_ac3_rematrix_band_tab", "ff_af_aresample", "ff_aac_profiles", "ff_pcm_s24be_decoder", "ff_silk_ltp_filter0_taps", "av_format_ffversion", "ff_pcm_s16le_demuxer", "ff_cos_16_fixed", "ff_pcm_bluray_decoder", "ff_id3v2_4_metadata_conv", "ff_af_afifo", "ff_asf_codec_comment_header", "ff_silk_lsf_codebook_nbmb", "ff_pcm_f32le_demuxer", "ff_aac_kbd_short_128", "ff_silk_lsf_min_spacing_wb", "ff_flac_decoder", "ff_interleaved_golomb_vlc_len", "ff_mp3_decoder", "ff_pcm_f32be_decoder", "ff_cos_32768_fixed", "ff_aac_kbd_short_120", "ff_ogm_audio_codec", "ff_ac3_slow_gain_tab", "ff_mpegvideo_parser", "ff_cos_4096_fixed", "ff_list_bsf", "ff_aac_kbd_short_128_fixed", "ff_codec_caf_tags", "ff_celt_bit_deinterleave", "ff_wmav2_decoder", "ff_sine_windows_fixed", "ff_h263_static_rl_table_store", "ff_data_protocol", "ff_mpeg4_static_rl_table_store", "ff_silk_lsf_s2_model_sel_nbmb", "ff_silk_model_ltp_filter", "ff_asf_simple_index_header", "ff_mpa_quant_bits", "av_sha_size", "ff_sine_windows", "ff_id3v2_3_tags", "ff_hevc_profiles", "ff_cos_64", "ff_cos_16", "ff_mb_type_b_tab", "ff_interleaved_dirac_golomb_vlc_code", "ff_pcm_f64be_demuxer", "ff_cbrt_tab", "ff_tns_max_bands_1024", "ff_h264_profiles", "ff_silk_lsf_ordering_nbmb", "ff_silk_lsf_pred_weights_nbmb", "ff_aac_latm_parser", "ff_af_asetnsamples", "ff_silk_lsf_min_spacing_nbmb", "ff_rawvideo_options", "ff_h263_chroma_qscale_table", "ff_mp2float_decoder", "ff_hls_demuxer", "ff_cos_32", "ff_mp3_demuxer", "avpriv_pix_fmt_bps_avi", "ff_silk_ltp_scale_factor", "ff_vorbis_codec", "ff_asf_marker_header", "avpriv_pix_fmt_bps_mov", "ff_asf_ext_stream_audio_stream", "ff_mpeg4_DCtab_lum", "ff_pcm_u24be_demuxer", "ff_celt_postfilter_taps", "ff_aac_latm_decoder", "ff_mpegvideo_demuxer", "ff_square_tab", "ff_cos_32_fixed", "ff_mpeg4_intra_level", "ff_silk_cosine", "ff_id3v1_genre_str", "ff_pcm_s8_decoder", "ff_ac3_fast_gain_tab", "ff_pcm_s16be_demuxer", "ff_h263_intra_MCBPC_bits", "ff_h263_format", "ff_pcm_s24le_demuxer", "ff_sine_960", "ff_mdct_win_float", "ff_asrc_abuffer", "ff_mpeg4_default_intra_matrix", "ff_asf_head2_guid", "ff_pipe_protocol", "ff_mpeg2_video_profiles", "ff_mpeg4_studio_intra", "avpriv_vga16_font", "ff_silk_pitch_max_lag", "ff_reverse", "ff_fc_4pulses_8bits_tracks_13", "ff_alac_channel_elements", "ff_mpeg2_aspect", "ff_pcm_s24daud_decoder", "ff_b60_sinc", "ff_sprite_trajectory_tab", "ff_celt_hadamard_order", "ff_mov_demuxer", "ff_pcm_u8_decoder", "ff_asf_command_stream", "ff_opus_decoder", "ff_aac_eld_window_512", "ff_vp8_codec", "ff_ogg_demuxer", "ff_pcm_u32be_demuxer", "ff_fft_offsets_lut", "ff_asf_video_stream", "ff_log2_run", "ff_ogm_old_codec", "ff_silk_model_pitch_lowbits_nb", "ff_sine_256_fixed", "ff_silk_model_gain_highbits", "ff_silk_model_excitation_sign", "ff_asf_metadata_library_header", "ff_acelp_interp_filter", "ffurl_context_class", "ff_wma_critical_freqs", "ff_pcm_mulaw_demuxer", "ff_rvlc_rl_inter", "ff_sine_128_fixed", "ff_wmapro_decoder", "ff_ue_golomb_len", "ff_mpa_sblimit_table", "ff_zigzag_direct", "ff_af_volume", "ff_dirac_codec", "ff_mpegtsraw_demuxer", "ff_asf_ext_content_encryption", "ff_alac_channel_layouts", "ff_pcm_u16le_decoder", "ff_vorbiscomment_metadata_conv", "ff_silk_model_lsf_s2", "ff_silk_pitch_min_lag", "av_filter_ffversion", "ff_cbpc_b_tab", "avpriv_ac3_channel_layout_tab", "ff_mpeg12_vlc_dc_lum_bits", "ff_asf_my_guid", "ff_aac_codebook_vector_idx", "ff_mpeg12_vlc_dc_lum_code", "ff_cos_256_fixed", "avfilter_all_channel_layouts", "ff_silk_model_lsf_s2_ext", "ff_mpeg4_studio_dc_chroma", "ff_mpegaudio_parser", "ff_opus_codec", "ff_af_aformat", "ff_silk_model_pitch_lowbits_wb", "ff_sine_256", "ff_celt_log_freq_range", "ff_celt_log2_frac", "ff_mpeg4_decoder", "ff_m4v_demuxer", "ff_pcm_s16le_decoder", "ff_cos_65536_fixed", "ff_cos_256", "ff_pcm_u8_demuxer", "ff_vorbis_encoding_channel_layout_offsets", "ff_celt_model_spread", "ff_vorbis_floor1_inverse_db_table", "ff_mpeg2_dc_scale_table", "ff_golomb_vlc_len", "ff_asf_metadata_header", "ff_asf_audio_conceal_none", "ff_codec_bmp_tags", "ff_mpeg2_non_linear_qscale", "ff_silk_model_frame_type_active", "ff_flac_codec", "ff_sine_512", "ff_fc_4pulses_8bits_track_4", "ff_silk_model_gain_delta", "ff_opus_parser", "ff_pcm_u24le_decoder", "ff_ac3_hearing_threshold_tab", "ff_id3v2_4_tags", "ff_mp3on4_decoder", "ff_ac3_sample_rate_tab", "ff_cos_tabs_fixed", "ff_asf_reserved_4", "ff_xma2_decoder", "ff_celt_pvq_u", "ff_asf_extended_content_header", "ff_pcm_dvd_decoder", "ff_sine_2048_fixed", "ff_mvtab", "ff_cos_1024", "ff_ac3_frame_size_tab", "avpriv_cga_font", "ff_ac3_window", "ff_asf_digital_signature", "ff_aac_pred_sfb_max", "ff_celt_bit_interleave", "ff_xma1_decoder", "ff_silk_pitch_offset_nb10ms", "ff_aac_num_swb_120", "ff_zigzag_scan", "ff_aac_spectral_bits", "ff_mpa_enwindow", "ff_silk_model_stereo_s2", "ff_ac3_enc_channel_map", "ff_se_golomb_vlc_code", "ff_wma_lsp_codebook", "ff_sbr_noise_table_fixed", "ff_dnxhd_profiles", "ff_pcm_zork_decoder", "ff_inter_level", "ff_mp1float_decoder", "ff_ac3_slow_decay_tab", "avpriv_mpa_freq_tab", "ff_pcm_s32be_demuxer", "ff_tns_max_bands_480", "ff_ac3_bitrate_tab", "ff_cos_131072", "ff_flac_sample_rate_table", "ff_aac_eld_window_480_fixed", "ff_null_bsf", "ff_asf_audio_stream", "ff_pcm_s64le_decoder", "ff_silk_ltp_filter2_taps", "ff_mpeg1_default_intra_matrix", "ff_asf_extended_stream_properties_object", "ff_pcm_f24le_decoder", "ff_codec_wav_tags", "ff_vc1_profiles", "ff_celt_model_energy_small", "ff_pcm_f16le_decoder", "ff_w_tab_sr", "ff_fc_2pulses_9bits_track1", "ff_vorbis_channel_layout_offsets", "ff_tns_max_bands_512", "ff_mpeg4_default_non_intra_matrix", "ff_mp3float_decoder", "ff_sine_120", "ff_skeleton_codec", "ff_asf_audio_conceal_spread", "ff_inter_vlc", "ff_aac_eld_window_480", "ff_swb_offset_480", "ff_celt_model_alloc_trim", "ff_mdct_win_fixed", "ff_silk_model_stereo_s1", "ff_silk_lsf_s2_model_sel_wb", "ff_mb_pat_vlc", "ff_sine_1024", "ff_asf_language_guid", "ff_eac3_default_cpl_band_struct", "ff_silk_quant_offset", "ff_asf_demuxer", "ff_celt_window", "ff_pcm_u32be_decoder", "ff_silk_stereo_weights", "ff_asf_content_encryption", "ff_silk_model_pitch_delta", "ff_cos_16384_fixed", "ff_aac_num_swb_960", "ff_af_bass", "ff_codec_movsubtitle_tags"], "importedglobals": ["__sF"], "importedfunctions": ["sinf", "access", "open", "bsearch", "atoi", "strlen", "log", "strspn", "cosh", "opendir", "atof", "closedir", "gettimeofday", "mmap", "strncmp", "hypot", "strcpy", "posix_memalign", "strtoll", "gmtime_r", "strtol", "fstat", "expf", "mkstemp", "fabs", "fputc", "lstat", "acos", "strncpy", "readdir", "cbrtf", "abort", "ioctl", "sysconf", "lrint", "frexp", "atanf", "lseek64", "munmap", "strtod", "cos", "snprintf", "read", "cosf", "sem_wait", "memchr", "cbrt", "fdopen", "localtime_r", "strrchr", "sscanf", "asin", "lrintf", "exp", "clock_gettime", "memcmp", "ldexp", "strerror_r", "atan2f", "strcmp", "nanosleep", "fputs", "sem_init", "isatty", "memset", "getenv", "memcpy", "strcspn", "exp2", "strftime", "__assert2", "pow", "powf", "fcntl", "memmove", "write", "rmdir", "unlink", "atan2", "strtoul", "free", "log10", "log10f", "close", "log2f", "strchr", "sin", "mktime", "tanh", "llrintf", "atan", "sinh", "exp2f", "round", "__errno", "sem_post", "strstr", "fwrite", "poll", "arc4random", "llrint", "tan", "fprintf", "vsnprintf", "rename", "realloc", "sem_destroy"], "exportedfunctions": ["swr_convert_frame", "av_codec_is_decoder", "av_ripemd_update", "ffio_open_whitelist", "av_register_all", "ff_mp4_read_descr_len", "ff_framequeue_global_init", "ff_get_wav_header", "ff_simple_idct_put_int16_10bit", "av_get_alt_sample_fmt", "av_thread_message_queue_alloc", "avpriv_register_devices", "avformat_get_class", "ff_filter_graph_run_once", "swri_noise_shaping_int32", "avio_open_dyn_buf", "ff_draw_color", "av_filter_iterate", "av_frame_get_channel_layout", "ff_combine_frame", "av_default_get_category", "av_packet_shrink_side_data", "ff_update_cur_dts", "av_frame_ref", "av_stristart", "av_spherical_tile_bounds", "av_thread_message_queue_set_free_func", "avio_wb64", "ff_mpeg4_decode_video_packet_header", "ff_default_get_audio_buffer", "av_opt_child_class_next", "av_format_set_audio_codec", "ff_interleave_packet_per_dts", "av_free", "av_aes_ctr_set_iv", "ff_draw_rectangle", "avfilter_pad_get_type", "ff_id3v2_parse_chapters", "av_chroma_location_from_name", "avcodec_get_subtitle_rect_class", "avio_close_dir", "av_frame_get_decode_error_flags", "av_codec_set_pkt_timebase", "av_sha512_alloc", "av_frame_get_pkt_pos", "av_bsf_list_alloc", "av_i2int", "ff_v4l2_m2m_codec_end", "av_vorbis_parse_reset", "av_url_split", "ff_avg_qpel16_mc32_old_c", "av_int2i", "ffio_init_checksum", "av_buffersink_set_frame_size", "ff_decode_bsfs_uninit", "av_hwaccel_next", "av_dv_codec_profile2", "av_twofish_crypt", "ff_update_link_current_pts", "swr_build_matrix", "av_bsf_free", "av_timecode_adjust_ntsc_framenum2", "av_init_packet", "av_hash_final_bin", "av_bsf_init", "ff_id3v2_read_dict", "ff_amrwb_lsp2lpc", "ff_flac_parse_picture", "ff_vorbisdsp_init", "av_d2q", "av_hash_final_hex", "ffurl_open_whitelist", "ff_bsf_get_packet_ref", "avcodec_register_all", "avformat_write_header", "avcodec_get_class", "av_opt_set_defaults2", "av_bprint_finalize", "ff_put_qpel16_mc12_old_c", "av_spherical_from_name", "ff_mpv_export_qp_table", "ff_frame_pool_uninit", "ff_acelp_weighted_vector_sum", "ff_bprint_to_codecpar_extradata", "ff_parse_creation_time_metadata", "ff_insert_pad", "av_frame_copy", "av_frame_set_pkt_size", "avio_open2", "ff_acelp_high_pass_filter", "av_strtod", "avpriv_tempfile", "av_get_bits_per_pixel", "avfilter_next", "ff_vorbiscomment_length", "av_packet_move_ref", "av_strnstr", "swr_free", "avfilter_graph_queue_command", "av_aes_ctr_free", "av_hwframe_transfer_get_formats", "ff_query_formats_all_layouts", "av_frame_make_writable", "av_index_search_timestamp", "av_write_trailer", "av_image_copy", "ff_init_mpadsp_tabs_fixed", "av_thread_message_flush", "av_dv_frame_profile", "ff_configure_buffers_for_index", "avcodec_default_get_format", "ff_id3v2_tag_len", "ff_crc04C11DB7_update", "avcodec_parameters_to_context", "av_des_alloc", "av_bsf_list_parse_str", "ff_mpa_decode_header", "av_dirname", "avio_pause", "avio_get_str16le", "avpriv_slicethread_free", "ff_put_pixels8x8_c", "avio_wb16", "ff_acelp_lp_decode", "av_tree_enumerate", "ff_mpeg_update_thread_context", "ffurl_size", "ff_decode_frame_props", "ff_mpeg4_decode_studio_slice_header", "av_get_codec_tag_string", "ff_check_alignment", "av_hash_get_name", "av_get_audio_frame_duration", "ff_avg_pixels8x8_c", "ff_draw_supported_pixel_formats", "ff_mpeg4videodec_static_init", "av_log2_i", "avpriv_get_gamma_from_trc", "av_oformat_next", "ff_tilt_compensation", "ff_packet_list_get", "ffio_read_size", "avcodec_dct_alloc", "av_pix_fmt_desc_next", "av_hwdevice_find_type_by_name", "ff_jref_idct_put", "ff_avg_qpel16_mc13_old_c", "av_bprintf", "avio_r8", "ff_update_picture_tables", "swri_dither_init", "ff_thread_get_format", "av_write_uncoded_frame_query", "ff_opus_rc_dec_uint_tri", "avio_enum_protocols", "avpriv_mpegts_parse_close", "av_frame_set_metadata", "ff_ps_apply", "av_strdup", "av_base64_encode", "avcodec_encode_subtitle", "av_vorbis_parse_init", "ff_mdct15_uninit", "av_get_profile_name", "av_frame_set_channels", "ff_imdct_half_c_fixed_32", "swr_alloc_set_opts", "av_opt_set_defaults", "av_format_get_video_codec", "ff_celt_free", "ffio_geturlcontext", "swr_next_pts", "av_parse_cpu_caps", "av_xtea_crypt", "avcodec_send_frame", "ff_get_format", "av_frame_apply_cropping", "ff_mjpegenc_huffman_compute_bits", "ff_simple_idct_put_int16_12bit", "av_image_copy_plane", "ff_add_param_change", "ff_ps_init_fixed", "avio_rl16", "av_guess_format", "av_stream_get_parser", "av_get_frame_filename2", "av_buffersink_get_samples", "av_samples_fill_arrays", "ff_free_stream", "ff_set_qscale", "ff_mpa_synth_filter_float", "av_rdft_end", "av_get_channel_name", "avpriv_io_delete", "av_packet_unpack_dictionary", "ff_get_v_length", "av_mdct_end", "ff_me_cmp_init", "avpriv_init_lls", "ff_id3v2_parse_priv_dict", "ff_fft_init_fixed_32", "avcodec_get_name", "ff_flac_get_max_frame_size", "ff_mdct15_init", "avio_w8", "ff_imdct36_blocks_fixed", "av_encryption_info_alloc", "av_div_q", "ff_vorbis_len2vlc", "av_jni_set_java_vm", "av_vorbis_parse_frame", "av_get_extended_channel_layout", "av_default_item_name", "ff_blockdsp_init", "ff_thread_finish_setup", "av_aes_ctr_increment_iv", "avpriv_slicethread_create", "ff_put_qpel16_mc31_old_c", "av_match_name", "av_buffersink_get_frame_flags", "ff_dct_init", "av_bsf_receive_packet", "av_xtea_le_init", "ff_celp_lp_synthesis_filterf", "av_stream_set_r_frame_rate", "avio_rb32", "ff_read_line_to_bprint", "av_stream_new_side_data", "avfilter_graph_parse2", "ff_simple_idct48_add", "av_xtea_init", "ff_celt_quant_bands", "av_bprint_channel_layout", "ff_mpeg4_workaround_bugs", "ff_find_stream_index", "av_get_channel_description", "av_frame_new_side_data_from_buf", "ff_simple_idct44_add", "ff_v4l2_context_enqueue_frame", "av_stereo3d_from_name", "ff_flacdsp_init", "av_buffersink_get_type", "av_sha512_update", "ff_opus_rc_enc_uint_tri", "ff_codec_get_id", "ff_outlink_get_status", "ff_opus_rc_enc_uint_step", "avio_free_directory_entry", "ff_read_frame_flush", "avio_rb24", "ff_scale_vector_to_given_sum_of_squares", "ff_add_index_entry", "ff_h263_resync", "ff_acelp_interpolatef", "ff_sort_nearly_sorted_floats", "av_frame_get_pkt_size", "avformat_license", "av_cast5_crypt2", "ffurl_open", "ff_avg_qpel16_mc33_old_c", "av_sha_update", "avio_read", "avcodec_encode_video2", "avcodec_default_execute", "ff_set_cmp", "ff_mpeg_unref_picture", "ffio_fdopen", "av_fft_calc", "ff_rdft_end", "ff_mpeg12_init_vlcs", "av_ac3_parse_header", "av_register_hwaccel", "av_cpu_count", "ff_v4l2_m2m_create_context", "av_encryption_info_free", "ff_id3v2_parse_priv", "av_codec_get_seek_preroll", "av_realloc", "av_image_check_size2", "av_frame_get_colorspace", "avfilter_make_format64_list", "av_hmac_update", "ff_graph_thread_init", "ff_mov_lang_to_iso639", "ff_add_cpb_side_data", "av_frame_set_best_effort_timestamp", "av_timecode_init_from_string", "av_grow_packet", "av_color_transfer_from_name", "av_hash_names", "avpriv_bprint_to_extradata", "av_opt_get_double", "avcodec_send_packet", "ff_inlink_consume_frame", "ff_inlink_process_commands", "avcodec_get_pix_fmt_loss", "avpriv_put_string", "ff_jpeg_fdct_islow_8", "ff_h263_decode_mb", "av_blowfish_init", "avcodec_flush_buffers", "ff_put_qpel8_mc31_old_c", "av_mul_i", "avfilter_pad_get_name", "ff_parse_pixel_format", "av_tea_alloc", "av_opt_free", "av_stream_add_side_data", "avformat_alloc_context", "ff_inlink_evaluate_timeline_at_frame", "av_murmur3_init", "ff_read_packet", "swresample_license", "av_audio_fifo_write", "av_codec_is_encoder", "avcodec_parameters_from_context", "ff_rl_free", "av_fifo_alloc_array", "av_adts_header_parse", "av_bprint_clear", "av_md5_update", "av_sha_final", "ff_dct32_float", "av_read_pause", "av_opt_set_int", "ff_qpeldsp_init", "av_buffersink_get_w", "ff_framequeue_init", "avformat_close_input", "av_hwframe_ctx_create_derived", "av_image_fill_linesizes", "avformat_seek_file", "avfilter_graph_set_auto_convert", "ffurl_connect", "ff_put_no_rnd_qpel16_mc12_old_c", "ff_psdsp_init", "av_get_standard_channel_layout", "ff_faanidct_put", "av_read_image_line", "av_packet_merge_side_data", "av_buffersink_get_sample_rate", "ff_mdct_calc_c_fixed", "ff_copy_whiteblacklists", "ff_aac_sbr_ctx_init", "ff_faanidct_add", "ff_mpeg1_decode_block_intra", "av_q2intfloat", "av_encryption_info_get_side_data", "ff_replaygain_export", "ff_bsf_get_packet", "ff_er_add_slice", "avcodec_find_decoder", "av_opt_set_sample_fmt", "av_display_matrix_flip", "av_display_rotation_set", "ff_framequeue_add", "avio_rl24", "ff_decode_sbr_extension", "av_opt_set_from_string", "avfilter_init_dict", "av_murmur3_update", "ff_init_ff_cos_tabs_fixed", "avcodec_decode_audio4", "av_gcd", "ff_urlcontext_child_class_next", "av_rescale_q", "av_vorbis_parse_frame_flags", "av_fifo_free", "ffurl_read", "avio_open_dir", "av_copy_packet", "ff_alloc_dir_entry", "av_get_channel_layout_nb_channels", "av_new_packet", "ff_h263_update_motion_val", "ff_faandct248", "ff_llauddsp_init", "av_crc_init", "av_md5_alloc", "avcodec_copy_context", "av_frame_get_plane_buffer", "av_chroma_location_name", "av_set_options_string", "av_bprint_escape", "ff_index_search_timestamp", "ff_simple_idct84_add", "av_vbprintf", "avcodec_decode_video2", "av_fifo_size", "av_timecode_make_smpte_tc_string", "av_get_pcm_codec", "av_tempfile", "av_audio_fifo_drain", "av_expr_parse_and_eval", "av_bitstream_filter_init", "avio_context_free", "av_get_cpu_flags", "av_opt_eval_q", "avio_printf", "ff_get_video_buffer", "ff_choose_chroma_location", "av_dict_free", "av_opt_serialize", "ff_kbd_window_init", "ff_side_data_update_matrix_encoding", "av_hash_update", "av_rescale_delta", "ff_fdct248_islow_8", "av_opt_set", "ff_mpeg4_decode_picture_header", "av_packet_make_refcounted", "ff_clean_intra_table_entries", "av_packet_free_side_data", "ff_poll_frame", "ff_aac_sbr_ctx_init_fixed", "ff_color_frame", "ff_init_ff_cos_tabs_fixed_32", "av_dct_end", "av_parse_video_rate", "ff_acelp_lsp2lpc", "av_md5_final", "av_get_sample_fmt_string", "av_frame_get_color_range", "ff_put_no_rnd_qpel16_mc31_old_c", "ff_frame_pool_get_audio_config", "av_hwframe_ctx_alloc", "ff_inlink_acknowledge_status", "av_strlcpy", "ff_put_qpel8_mc13_old_c", "av_codec_get_tag2", "ff_opus_rc_enc_end", "ff_opus_parse_extradata", "av_md5_init", "ff_avg_qpel16_mc11_old_c", "av_bsf_get_class", "avfilter_register_all", "av_shr_i", "ff_check_pixfmt_descriptors", "ff_v4l2_context_release", "ff_mdct_end_fixed_32", "av_frame_side_data_name", "av_strndup", "av_stream_get_codec_timebase", "ff_format_set_url", "av_packet_from_data", "av_spherical_alloc", "ff_put_pixels16x16_c", "ff_filter_activate", "av_codec_iterate", "av_aes_ctr_alloc", "av_stream_get_side_data", "av_read_frame", "ff_alloc_a53_sei", "ff_silk_free", "av_murmur3_alloc", "avcodec_parameters_free", "ff_command_queue_pop", "ff_id3v1_read", "av_sub_i", "ff_inlink_make_frame_writable", "avcodec_find_encoder", "av_image_alloc", "ff_h263_decode_mba", "ff_ape_parse_tag", "ff_opus_rc_enc_init", "ffio_init_context", "av_rc4_init", "av_get_token", "ff_get_extradata", "av_opt_child_next", "av_sha512_final", "ff_mpeg_ref_picture", "ff_mpeg12_common_init", "ff_h263_decode_end", "av_buffer_get_ref_count", "av_parser_close", "av_aes_ctr_set_random_iv", "avcodec_descriptor_get_by_name", "av_register_input_format", "av_parser_iterate", "ff_celt_bitalloc", "ff_vorbis_nth_root", "av_packet_pack_dictionary", "av_picture_copy", "avio_wl16", "ff_sbrdsp_init_fixed", "ff_adts_header_parse", "ff_celt_decode_frame", "av_opt_set_channel_layout", "ff_sbr_apply", "av_format_get_probe_score", "ff_videodsp_init", "ff_opus_rc_dec_init", "swr_inject_silence", "ff_inlink_set_status", "ff_decode_sbr_extension_fixed", "ff_parse_key_value", "ffurl_accept", "av_des_mac", "ff_mpeg4_init_direct_mv", "av_get_picture_type_char", "av_timecode_get_smpte_from_framenum", "av_get_random_seed", "avcodec_dct_get_class", "ff_get_packet_palette", "ff_opus_rc_dec_uint", "av_image_fill_black", "av_hmac_init", "av_color_space_name", "ff_faandct", "av_rescale_rnd", "ff_draw_init", "ff_mdct_calc_c", "av_stream_get_r_frame_rate", "av_content_light_metadata_alloc", "ff_sbrdsp_init", "av_dct_calc", "av_hmac_calc", "ff_thread_report_progress2", "ff_acelp_interpolate", "ff_pcm_read_seek", "av_twofish_alloc", "av_get_audio_frame_duration2", "ff_mjpeg_encode_huffman_close", "swri_noise_shaping_double", "av_opt_flag_is_set", "av_fifo_generic_peek_at", "ff_h263_loop_filter", "swr_set_compensation", "av_demuxer_iterate", "ff_vorbis_floor1_render_list", "av_stereo3d_create_side_data", "av_d3d11va_alloc_context", "av_pix_fmt_desc_get_id", "av_codec_get_tag", "av_hwdevice_ctx_create", "ff_crcEDB88320_update", "av_abuffersink_params_alloc", "av_stream_get_end_pts", "avio_size", "ffio_limit", "ff_avg_qpel16_mc12_old_c", "av_tea_crypt", "ff_parse_close", "avpriv_request_sample", "av_log_set_flags", "avformat_get_mov_video_tags", "ff_channel_layouts_changeref", "av_get_channel_layout_string", "swr_alloc", "av_buffersink_params_alloc", "av_log_get_level", "ff_simple_idct_add_int16_10bit", "av_opt_set_double", "av_buffer_make_writable", "av_packet_make_writable", "av_hwdevice_ctx_init", "av_format_set_data_codec", "av_audio_fifo_read", "avio_closep", "ff_mov_read_stsd_entries", "av_write_image_line", "ff_rl_init_vlc", "av_buffersink_get_sample_aspect_ratio", "ff_idctdsp_init", "avcodec_get_type", "ff_mov_get_channel_layout", "av_pix_fmt_count_planes", "ff_codec_get_tag", "ff_ps_ctx_init", "ff_formats_changeref", "avcodec_find_best_pix_fmt_of_2", "av_adler32_update", "av_bprint_get_buffer", "ff_attach_decode_data", "ffurl_write", "ff_put_no_rnd_qpel8_mc32_old_c", "ff_mdct_end_fixed", "ff_get_guid", "ff_mpv_common_defaults", "av_thread_message_queue_send", "avpriv_strtod", "ff_mpv_common_end", "ff_thread_report_progress", "avio_get_dyn_buf", "av_malloc_array", "av_rdft_calc", "av_codec_set_lowres", "ff_ps_read_data", "ff_mpeg4_frame_end", "ff_alloc_packet2", "av_packet_get_side_data", "swri_audio_convert", "ffio_open_dyn_packet_buf", "av_rc4_crypt", "av_samples_get_buffer_size", "ff_opus_rc_put_raw", "av_frame_set_qp_table", "ff_v4l2_context_set_status", "av_force_cpu_flags", "av_iformat_next", "ff_simple_idct_put_int16_8bit", "ffurl_close", "av_encryption_init_info_get_side_data", "avsubtitle_free", "avfilter_graph_create_filter", "ff_set_dimensions", "av_cmp_i", "av_hwdevice_ctx_alloc", "av_max_alloc", "swri_resample_dsp_init", "av_display_rotation_get", "ff_frame_pool_video_init", "av_buffersink_get_h", "av_opt_is_set_to_default", "av_buffer_allocz", "avcodec_descriptor_get", "av_opt_show2", "ff_put_v", "ff_avfilter_link_set_in_status", "ff_mpeg_er_frame_start", "av_packet_clone", "av_frame_new_side_data", "ff_check_interrupt", "ff_read_line_to_bprint_overwrite", "av_frame_get_buffer", "av_opt_query_ranges_default", "avpicture_layout", "av_expr_eval", "ff_lock_avformat", "ff_put_qpel8_mc33_old_c", "ff_ps_ctx_init_fixed", "av_gettime", "av_strtok", "avfilter_link_set_closed", "avpicture_alloc", "avformat_queue_attached_pictures", "av_des_init", "avpriv_mpegts_parse_packet", "ff_thread_init", "avformat_get_mov_audio_tags", "av_bsf_list_append", "av_aes_ctr_init", "av_get_pix_fmt_string", "avpriv_mpeg4audio_get_config", "av_fifo_drain", "av_opt_get_pixel_fmt", "av_lfg_init_from_data", "ff_cbrt_tableinit", "ff_opus_rc_enc_laplace", "ff_v4l2_context_dequeue_frame", "av_camellia_init", "av_murmur3_init_seeded", "av_format_set_metadata_header_padding", "ff_mpa_l2_select_table", "avpicture_fill", "av_guess_sample_aspect_ratio", "av_compare_ts", "av_buffersink_get_frame", "av_opt_get", "avfilter_graph_parse", "ff_mpv_decode_init", "av_opt_next", "ff_codec_open2_recursive", "av_buffersrc_write_frame", "ff_thread_await_progress2", "ff_set_min_dist_lsf", "ff_wma_get_frame_len_bits", "av_buffer_ref", "ffurl_shutdown", "swri_audio_convert_alloc", "av_twofish_init", "av_frame_set_sample_rate", "av_mediacodec_release_buffer", "ff_set_sar", "av_aes_ctr_crypt", "av_packet_ref", "ff_er_frame_end", "ff_make_absolute_url", "avcodec_open2", "av_buffersink_get_hw_frames_ctx", "av_stream_set_recommended_encoder_configuration", "ff_id3v2_parse_apic", "av_get_packed_sample_fmt", "ff_reget_buffer", "ff_standardize_creation_time", "ff_filter_set_ready", "ff_lsp2polyf", "avutil_configuration", "avpriv_float_dsp_alloc", "av_dct_init", "avpriv_toupper4", "ff_read_riff_info", "av_frame_get_qp_table", "ff_filter_graph_remove_filter", "av_buffer_pool_init", "ff_filter_alloc", "ff_v4l2_m2m_codec_reinit", "ff_acelp_lsf2lspd", "av_guess_codec", "av_opt_set_dict", "ff_raw_data_read_header", "avcodec_close", "av_frame_set_decode_error_flags", "swr_config_frame", "avfilter_get_matrix", "ff_mpeg4_find_frame_end", "av_audio_fifo_space", "av_mediacodec_default_free", "avfilter_inout_alloc", "ff_put_pixels_clamped_c", "ffio_open_null_buf", "ff_v4l2_m2m_codec_full_reinit", "av_muxer_iterate", "avio_wb32", "ff_sine_window_init_fixed", "ff_wma_init", "ff_imdct36_blocks_float", "av_fifo_freep", "av_expr_parse", "avformat_open_input", "ffurl_closep", "av_imdct_calc", "av_dirac_parse_sequence_header", "ff_mdct_end", "av_format_set_opaque", "av_fifo_generic_write", "ff_put_no_rnd_qpel8_mc13_old_c", "ff_mp4_read_descr", "avformat_find_stream_info", "av_append_packet", "av_asprintf", "av_probe_input_format3", "avfilter_pad_count", "ff_blend_mask", "ff_mpeg1_clean_buffers", "ff_opus_rc_enc_cdf", "av_buffer_pool_get", "ff_opus_parse_packet", "av_opt_set_image_size", "ff_mpeg12_find_best_frame_rate", "ff_silk_decode_superframe", "ff_silk_init", "ff_interleave_add_packet", "avformat_init_output", "av_fifo_space", "av_opt_eval_int", "av_find_default_stream_index", "av_fft_end", "avfilter_free", "av_qsv_alloc_context", "av_opt_get_image_size", "avcodec_receive_frame", "ff_find_unused_picture", "av_dv_codec_profile", "av_encryption_init_info_add_side_data", "ff_mov_read_esds", "av_base64_decode", "ff_mpv_motion", "swri_rematrix", "ff_simple_idct_put_int32_10bit", "av_hwframe_map", "ff_ape_write_tag", "ff_mov_get_channel_layout_tag", "ff_formats_unref", "av_samples_set_silence", "av_hwdevice_hwconfig_alloc", "av_opt_is_set_to_default_by_name", "avformat_query_codec", "ff_merge_samplerates", "av_dict_count", "av_aes_ctr_set_full_iv", "av_assert0_fpu", "ff_put_no_rnd_qpel8_mc31_old_c", "av_fast_realloc", "ff_silk_flush", "ff_fft_end", "ff_acelp_apply_order_2_transfer_function", "avformat_flush", "ff_add_channel_layout", "avfilter_add_matrix", "av_find_best_pix_fmt_of_2", "av_pix_fmt_desc_get", "ff_aac_sbr_init_fixed", "ff_h263_decode_picture_header", "avio_seek", "avpriv_find_pix_fmt", "av_rescale_q_rnd", "ff_get_bmp_header", "avpriv_new_chapter", "ff_mjpeg_encode_huffman_init", "ff_put_qpel16_mc32_old_c", "ff_framequeue_peek", "av_set_cpu_flags_mask", "avcodec_configuration", "av_frame_get_sample_rate", "avio_feof", "ff_side_data_set_encoder_stats", "av_blowfish_crypt_ecb", "ff_match_2uint16", "av_opt_query_ranges", "avio_rl64", "av_hash_final", "av_probe_input_format2", "av_encryption_init_info_free", "ff_weighted_vector_sumf", "av_thread_message_queue_set_err_recv", "av_hash_init", "av_murmur3_final", "ff_get_qtpalette", "av_aes_alloc", "av_ripemd_final", "avfilter_register", "av_gettime_relative", "ff_metadata_conv", "av_crc", "ff_print_debug_info2", "avfilter_graph_request_oldest", "ff_hwframe_map_create", "ff_v4l2_context_set_format", "ff_get_chomp_line", "av_log_set_level", "av_image_fill_pointers", "av_mediacodec_default_init", "ff_set_common_formats", "swr_drop_output", "ff_j_rev_dct1", "ff_aac_ac3_parse", "ff_fft_init", "av_mastering_display_metadata_alloc", "av_reallocp_array", "av_opt_set_video_rate", "ff_flac_is_extradata_valid", "avformat_free_context", "av_timecode_make_string", "av_write_uncoded_frame", "av_tree_node_alloc", "av_get_pix_fmt_name", "avfilter_graph_get_filter", "ff_mpv_report_decode_progress", "ff_copy_rectangle", "av_add_i", "av_samples_alloc", "avformat_get_riff_video_tags", "av_dup_packet", "av_get_sample_fmt_name", "av_log_format_line2", "ff_ntp_time", "av_packet_free", "ff_h263_decode_motion", "av_find_program_from_stream", "ff_h263_decode_init", "av_d2str", "ff_imdct_calc_c_fixed_32", "ff_imdct_half_c_fixed", "av_realloc_array", "ff_aac_sbr_ctx_close", "av_parse_video_size", "ff_planar_sample_fmts", "av_get_output_timestamp", "avcodec_pix_fmt_to_codec_tag", "av_mdct_calc", "swr_is_initialized", "av_get_channel_layout", "ff_mov_read_chan", "av_find_best_stream", "av_buffersrc_get_nb_failed_requests", "av_get_packet", "avcodec_parameters_copy", "avpriv_split_xiph_headers", "ff_stream_encode_params_copy", "ff_put_no_rnd_qpel16_mc33_old_c", "ffurl_handshake", "avpriv_open", "av_frame_get_metadata", "av_opt_eval_int64", "ffio_open2_wrapper", "swr_close", "ff_put_no_rnd_qpel16_mc13_old_c", "av_find_nearest_q_idx", "av_opt_get_video_rate", "ff_formats_ref", "avpriv_solve_lls", "ff_opus_rc_enc_uint", "avcodec_license", "av_format_set_control_message_cb", "ff_crcA001_update", "ff_graph_thread_free", "av_buffer_pool_init2", "ff_channel_layouts_unref", "ff_sine_window_init", "av_hash_freep", "av_write_frame", "av_frame_get_side_data", "ff_put_no_rnd_qpel16_mc11_old_c", "av_codec_get_chroma_intra_matrix", "av_demuxer_open", "ff_mpa_synth_init_fixed", "ff_avg_qpel16_mc31_old_c", "avcodec_dct_init", "av_buffer_create", "av_hwdevice_get_type_name", "ff_init_2d_vlc_rl", "ff_reset_entries", "ff_put_qpel8_mc11_old_c", "av_bprint_strftime", "av_fifo_alloc", "avfilter_graph_free", "avio_rb64", "av_fast_malloc", "ff_mdct_init_fixed", "ff_fill_rgba_map", "av_get_default_channel_layout", "av_sdp_create", "ff_rdft_init", "ff_emulated_edge_mc_8", "ff_v4l2_context_get_format", "ff_celt_init", "av_mediacodec_alloc_context", "av_memdup", "avio_put_str16le", "ff_fdctdsp_init", "ff_rfps_add_frame", "av_filename_number_test", "ffio_rewind_with_probe_data", "ff_opus_rc_dec_uint_step", "av_frame_set_pkt_duration", "av_frame_get_pkt_duration", "avio_wl24", "avfilter_graph_dump", "ff_url_join", "av_jni_get_java_vm", "avpriv_scalarproduct_float_c", "av_interleaved_write_uncoded_frame", "ff_init_vlc_sparse", "ff_psdsp_init_fixed", "ff_tlog_ref", "av_image_copy_to_buffer", "avformat_network_init", "av_audio_fifo_alloc", "ff_stream_add_bitstream_filter", "av_log", "av_buffer_pool_uninit", "ff_mpv_common_frame_size_change", "av_hmac_final", "av_hex_dump_log", "ff_sbr_apply_fixed", "av_content_light_metadata_create_side_data", "av_escape", "av_opt_get_key_value", "avpicture_free", "ff_kbd_window_init_fixed", "ff_set_common_samplerates", "av_codec_set_chroma_intra_matrix", "ff_h263_decode_init_vlc", "ff_fetch_timestamp", "av_cast5_alloc", "ff_init_mpadsp_tabs_float", "avio_read_to_bprint", "av_codec_get_id", "avformat_alloc_output_context2", "ff_alacdsp_init", "ff_mpv_reconstruct_mb", "av_buffer_get_opaque", "ff_id3v2_read", "avfilter_transform", "ffio_read_varlen", "ffurl_get_file_handle", "av_samples_alloc_array_and_samples", "av_fft_permute", "ff_sdp_write_media", "av_basename", "ff_v4l2_format_avfmt_to_v4l2", "ff_request_frame", "av_timecode_check_frame_rate", "av_mdct_init", "av_log_default_callback", "av_memcpy_backptr", "ff_packet_list_free", "swr_get_out_samples", "av_log2_16bit", "av_apply_bitstream_filters", "av_frame_is_writable", "ff_guess_image2_codec", "av_match_list", "swri_rematrix_free", "ff_parse_channel_layout", "av_parse_color", "ff_thread_release_buffer", "avfilter_process_command", "ff_put_no_rnd_qpel8_mc12_old_c", "av_blowfish_crypt", "ff_put_qpel8_mc32_old_c", "ff_opus_rc_dec_cdf", "av_mastering_display_metadata_create_side_data", "av_bsf_list_append2", "av_strstart", "av_timegm", "avfilter_init_str", "ff_print_debug_info", "av_find_info_tag", "av_fmt_ctx_get_duration_estimation_method", "av_hwdevice_ctx_create_derived", "av_cast5_crypt", "avformat_new_stream", "av_stereo3d_alloc", "av_get_pix_fmt", "av_read_play", "ff_add_pixels_clamped_c", "av_mallocz", "avformat_version", "av_packet_new_side_data", "ff_compute_frame_duration", "av_dict_copy", "av_ripemd_alloc", "av_buffersrc_close", "avpriv_codec_get_cap_skip_frame_fill_param", "swri_rematrix_init", "av_encryption_info_add_side_data", "av_format_get_metadata_header_padding", "avpriv_copy_bits", "avio_seek_time", "av_buffer_is_writable", "swr_init", "ff_wma_get_large_val", "avpriv_io_move", "ff_unlock_avformat", "avcodec_register", "ff_mpv_frame_start", "av_fast_padded_mallocz", "av_thread_message_queue_free", "ff_data_to_hex", "ff_j_rev_dct4", "ff_mpadsp_apply_window_float", "ff_all_samplerates", "ff_gmc_c", "ff_default_query_formats", "av_parser_parse2", "av_register_output_format", "avfilter_link_free", "av_pkt_dump_log2", "ff_celp_circ_addf", "swr_set_matrix", "ff_v4l2_format_avcodec_to_v4l2", "ff_init_ff_sine_windows", "avcodec_profile_name", "swri_noise_shaping_float", "ff_mpadsp_init", "ff_er_frame_start", "ff_parse_time_base", "ff_default_get_video_buffer", "av_sha_alloc", "av_format_get_control_message_cb", "av_sha512_init", "ff_id3v2_match", "avpriv_alloc_fixed_dsp", "ffurl_get_multi_file_handle", "avformat_transfer_internal_stream_timing_info", "ff_make_formatu64_list", "av_dict_set", "av_image_check_sar", "ff_decode_get_packet", "av_bsf_send_packet", "ff_wma_total_gain_to_bits", "av_stristr", "ff_avg_qpel8_mc33_old_c", "av_format_get_subtitle_codec", "ff_format_output_open", "swri_audio_convert_free", "avpriv_get_raw_pix_fmt_tags", "ff_fft_end_fixed_32", "ff_flac_set_channel_layout", "ff_acelp_reorder_lsf", "ff_alloc_picture", "ff_mov_write_chan", "ff_fmt_is_in", "av_opt_ptr", "ff_v4l2_buffer_buf_to_avframe", "av_color_range_from_name", "avfilter_graph_send_command", "av_gettime_relative_is_monotonic", "ff_imdct_half_c", "av_append_path_component", "ff_mpa_synth_filter_fixed", "av_frame_get_best_effort_timestamp", "av_log_get_flags", "ffurl_get_short_seek", "av_shrink_packet", "ff_avg_qpel8_mc12_old_c", "av_xtea_alloc", "av_buffersink_get_format", "ff_simple_idct_int16_12bit", "av_format_set_video_codec", "av_get_known_color_name", "ff_inlink_check_available_frame", "ff_acelp_fc_pulse_per_track", "ff_fdct_ifast", "ff_guess_coded_bitrate", "ffurl_get_protocols", "av_find_input_format", "av_bprint_chars", "ff_packet_list_put", "av_guess_frame_rate", "av_vorbis_parse_free", "ff_parse_sample_rate", "ff_parse_mpeg2_descriptor", "av_buffersink_get_time_base", "av_expr_free", "avfilter_graph_parse_ptr", "av_get_time_base_q", "ff_mpeg4_set_direct_mv", "ff_v4l2_buffer_enqueue", "av_picture_pad", "ff_imdct_calc_c", "ff_filter_frame", "av_audio_fifo_free", "avio_wb24", "av_camellia_crypt", "av_get_planar_sample_fmt", "ffio_fill", "avfilter_get_class", "av_get_colorspace_name", "av_fopen_utf8", "ff_frame_pool_get", "av_buffersink_get_channels", "ff_alloc_extradata", "ff_celp_convolve_circ", "av_bprint_init", "ff_avg_qpel8_mc32_old_c", "av_codec_get_codec_descriptor", "avcodec_is_open", "ff_seek_frame_binary", "ff_fft_lut_init", "avutil_license", "av_audio_fifo_peek_at", "ff_gen_search", "av_new_program", "ff_init_scantable_permutation", "ff_cbrt_tableinit_fixed", "avpriv_mpegts_parse_open", "avcodec_default_get_buffer2", "ff_find_last_ts", "avpriv_set_pts_info", "av_utf8_decode", "av_channel_layout_extract_channel", "ff_avg_qpel8_mc31_old_c", "avpriv_mpegaudio_decode_header", "ff_thread_ref_frame", "ff_v4l2_context_enqueue_packet", "ff_v4l2_buffer_buf_to_avpkt", "av_strerror", "ff_framequeue_skip_samples", "avcodec_free_context", "ff_prores_idct", "avcodec_alloc_context3", "av_fft_init", "avio_flush", "av_codec_set_codec_descriptor", "av_cpu_max_align", "av_pix_fmt_get_chroma_sub_sample", "av_dict_set_int", "ffurl_read_complete", "av_free_packet", "ff_simple_idct_int16_10bit", "avfilter_configuration", "av_pixelutils_get_sad_fn", "ffurl_seek", "av_realloc_f", "av_fast_mallocz", "av_mallocz_array", "av_frame_free", "av_buffersrc_add_frame", "avcodec_default_execute2", "ff_avfilter_link_set_out_status", "ff_dv_frame_profile", "av_log2", "swr_set_channel_mapping", "av_frame_alloc", "ff_blend_rectangle", "ff_ps_read_data_fixed", "ff_fill_line_with_color", "ff_alloc_entries", "ff_h263_show_pict_info", "ff_vorbis_ready_floor1_list", "av_packet_copy_props", "avio_read_dir", "av_opt_set_dict2", "ff_v4l2_context_dequeue_packet", "ff_tlog_link", "ff_get_audio_buffer", "av_image_copy_uc_from", "ff_put_no_rnd_qpel8_mc33_old_c", "avio_close_dyn_buf", "av_program_add_stream_index", "swresample_configuration", "ff_acelp_lsf2lsp", "av_frame_set_colorspace", "av_color_primaries_name", "av_hmac_free", "avfilter_version", "avio_handshake", "ff_j_rev_dct2", "av_packet_rescale_ts", "ff_h263_decode_frame", "avfilter_get_by_name", "ff_draw_round_to_sub", "av_codec_next", "av_codec_get_lowres", "av_opt_set_bin", "av_get_bytes_per_sample", "av_hash_alloc", "av_copy_packet_side_data", "ff_mpeg_draw_horiz_band", "ff_mp4_read_dec_config_descr", "ff_parse_sample_format", "av_log_format_line", "avio_find_protocol_name", "avio_wl32", "av_frame_move_ref", "av_bprint_append_data", "ff_vorbis_inverse_coupling", "avcodec_receive_packet", "av_strlcat", "av_opt_eval_double", "av_bsf_get_by_name", "ff_set_common_channel_layouts", "avcodec_align_dimensions", "ff_mp4_parse_es_descr", "av_spherical_projection_name", "ff_put_qpel16_mc11_old_c", "ff_write_chained", "av_tree_find", "ff_emulated_edge_mc_16", "av_format_get_audio_codec", "avcodec_find_decoder_by_name", "ff_channel_layouts_ref", "av_encryption_info_clone", "swresample_version", "av_strncasecmp", "avcodec_find_best_pix_fmt_of_list", "ff_h263_pred_dc", "avio_get_str16be", "ff_h263_pred_motion", "av_parser_change", "ff_is_http_proto", "av_interleaved_write_frame", "av_buffer_alloc", "avio_read_partial", "av_pix_fmt_swap_endianness", "ffio_free_dyn_buf", "ff_raw_read_partial_packet", "ff_make_format_list", "avfilter_sub_matrix", "avfilter_graph_config", "avio_rl32", "avcodec_find_best_pix_fmt2", "ff_dct32_fixed", "av_fifo_realloc2", "avcodec_encode_audio2", "av_probe_input_buffer2", "ff_mpeg4_decode_partitions", "av_add_stable", "ff_copy_rectangle2", "ff_opus_rc_dec_log", "ff_all_channel_layouts", "ff_aac_sbr_ctx_close_fixed", "ff_ps_apply_fixed", "ffurl_alloc", "av_rescale", "avcodec_descriptor_next", "av_audio_fifo_size", "av_frame_clone", "av_buffersrc_parameters_alloc", "ff_flac_decode_frame_header", "avio_check", "av_hwframe_get_buffer", "ff_v4l2_context_init", "av_timecode_make_mpeg_tc_string", "ff_decode_10_pulses_35bits", "avfilter_insert_filter", "ff_adaptive_gain_control", "av_packet_side_data_name", "avformat_match_stream_specifier", "av_format_set_open_cb", "ff_celp_lp_zero_synthesis_filterf", "av_reduce", "ff_init_scantable", "swr_get_class", "av_opt_eval_float", "ff_celt_flush", "av_buffersrc_parameters_set", "av_frame_set_channel_layout", "av_thread_message_queue_set_err_send", "av_calloc", "av_codec_get_pkt_timebase", "av_audio_fifo_reset", "av_frame_unref", "ff_j_rev_dct", "avcodec_align_dimensions2", "av_buffersink_get_channel_layout", "av_hwframe_transfer_data", "av_probe_input_format", "ff_frame_pool_audio_init", "avpriv_get_trc_function_from_trc", "avcodec_get_frame_class", "ff_convert_lang_to", "av_get_frame_filename", "av_stereo3d_type_name", "ff_choose_timebase", "av_hwdevice_iterate_types", "av_bsf_list_free", "avpicture_get_size", "ff_rl_init", "av_buffer_default_free", "ff_frame_pool_get_video_config", "av_lfg_init", "avcodec_get_context_defaults3", "ff_acelp_vectors_init", "av_format_set_subtitle_codec", "av_rdft_init", "ff_null_get_audio_buffer", "av_hmac_alloc", "av_opt_get_sample_fmt", "av_pkt_dump2", "av_md5_sum", "ff_jpeg_fdct_islow_10", "av_bmg_get", "ff_h263_pred_acdc", "ff_put_pixels8_l2_8", "av_audio_fifo_peek", "av_opt_set_dict_val", "ffio_set_buf_size", "ff_mpeg4_clean_buffers", "av_opt_get_channel_layout", "swri_realloc_audio", "avcodec_find_encoder_by_name", "av_vlog", "ff_mpeg_flush", "avio_put_str", "ff_mpegvideodsp_init", "ff_fdct248_islow_10", "ff_v4l2_m2m_codec_init", "avfilter_link", "av_bsf_iterate", "av_image_check_size", "av_crc_get_table", "av_nearer_q", "ff_v4l2_buffer_avpkt_to_buf", "av_packet_alloc", "ff_merge_channel_layouts", "av_aes_init", "ff_avg_qpel8_mc13_old_c", "ff_avg_qpel8_mc11_old_c", "av_sha_init", "av_ripemd_init", "avpriv_ac3_parse_header", "av_codec_get_max_lowres", "ff_ps_init", "ff_framequeue_free", "avcodec_parameters_alloc", "av_image_fill_arrays", "av_version_info", "av_format_get_open_cb", "av_opt_get_dict_val", "av_audio_fifo_realloc", "avcodec_chroma_pos_to_enum", "ff_v4l2_buffer_initialize", "ff_inlink_check_available_samples", "avio_put_str16be", "ff_mpeg_framesize_alloc", "ff_opus_rc_dec_laplace", "av_get_channel_layout_channel_index", "avcodec_version", "av_dict_get", "av_parse_cpu_flags", "ff_mov_iso639_to_lang", "avfilter_license", "ff_bsf_child_class_next", "av_hash_get_size", "ff_init_ff_cos_tabs", "swr_get_delay", "ff_filter_get_nb_threads", "ffio_read_indirect", "ff_opus_rc_enc_log", "av_bsf_get_null_filter", "ff_clear_fixed_vector", "av_format_get_data_codec", "av_sample_fmt_is_planar", "av_buffersrc_add_frame_flags", "av_get_media_type_string", "ff_vorbiscomment_write", "av_bsf_alloc", "av_thread_message_queue_recv", "av_opt_set_pixel_fmt", "ff_put_qpel8_mc12_old_c", "ff_init_block_index", "av_seek_frame", "av_bitstream_filter_next", "av_packet_split_side_data", "av_codec_get_codec_properties", "ff_h263dsp_init", "ff_inlink_consume_samples", "av_fifo_generic_read", "ff_decode_get_hw_frames_ctx", "av_reallocp", "ff_mpa_synth_init_float", "av_color_range_name", "av_fourcc_make_string", "av_compare_mod", "av_mod_i", "av_aes_ctr_get_iv", "ff_merge_formats", "ff_mpv_decode_defaults", "ff_all_formats", "ff_acelp_filter_init", "av_tree_destroy", "avio_write", "av_buffersink_get_frame_rate", "ff_fdct_ifast248", "av_file_unmap", "ff_mpeg4_pred_ac", "avio_alloc_context", "ffio_close_null_buf", "av_stream_get_recommended_encoder_configuration", "ff_add_format", "av_packet_unref", "ff_get_pcm_codec_id", "ff_celp_lp_synthesis_filter", "ff_acelp_lspd2lpc", "avpriv_align_put_bits", "ff_hpeldsp_init", "avcodec_enum_to_chroma_pos", "ff_mpeg4audio_get_config_gb", "avio_accept", "avio_close", "ff_faanidct", "av_int_list_length_for_size", "av_opt_eval_flags", "av_dump_format", "av_get_sample_fmt", "ff_opus_rc_dec_raw_init", "av_encryption_init_info_alloc", "avcodec_get_chroma_sub_sample", "av_opt_copy", "ff_mdct_calcw_c", "av_register_codec_parser", "ff_alloc_packet", "avfilter_mul_matrix", "ff_mpv_common_init", "ff_reduce_index", "ff_simple_idct_add_int16_12bit", "ff_mdct_init_fixed_32", "ff_inlink_request_frame", "ff_put_qpel16_mc33_old_c", "ff_rfps_calculate", "ff_simple_idct_int16_8bit", "ff_mpeg4_get_video_packet_prefix_length", "av_hwframe_ctx_init", "av_buffer_realloc", "ff_all_channel_counts", "av_opt_freep_ranges", "av_color_transfer_name", "avpriv_slicethread_execute", "avpriv_find_start_code", "avutil_version", "ff_flac_parse_streaminfo", "avio_open", "ff_mpeg4video_split", "av_div_i", "av_frame_set_pkt_pos", "av_bsf_next", "av_image_fill_max_pixsteps", "ff_init_ff_sine_windows_fixed", "av_add_q", "av_probe_input_buffer", "ff_fft_init_fixed", "ff_v4l2_buffer_avframe_to_buf", "av_parse_time", "avcodec_decode_subtitle2", "av_opt_set_q", "av_downmix_info_update_side_data", "av_hwdevice_get_hwframe_constraints", "av_small_strptime", "av_xiphlacing", "av_samples_copy", "ff_framequeue_take", "av_dict_parse_string", "ff_pcm_read_packet", "avpriv_report_missing_feature", "ff_asfcrypt_dec", "ff_wav_codec_get_id", "ff_vorbis_stream_comment", "ff_free_vlc", "ff_jref_idct_add", "av_frame_remove_side_data", "ff_put_no_rnd_qpel16_mc32_old_c", "av_register_bitstream_filter", "ff_raw_video_read_header", "ff_v4l2_format_v4l2_to_avfmt", "ff_free_picture_tables", "ff_fill_rectangle", "avio_wl64", "ff_format_io_close", "ff_set_fixed_vector", "swri_noise_shaping_int16", "av_fifo_reset", "ff_filter_init_hw_frames", "av_tea_init", "av_fifo_generic_peek", "av_picture_crop", "av_log_set_callback", "ff_thread_get_buffer", "avfilter_inout_free", "av_codec_set_seek_preroll", "ff_raw_audio_read_header", "ffio_get_checksum", "av_xtea_le_crypt", "ff_mpadsp_apply_window_fixed", "av_image_get_buffer_size", "avcodec_string", "ff_avg_pixels16x16_c", "av_dynarray_add_nofree", "av_usleep", "av_aes_crypt", "ff_null_get_video_buffer", "av_packet_add_side_data", "av_bsf_list_finalize", "swr_convert", "av_mul_q", "ff_mdct_init", "av_buffer_unref", "ff_id3v2_free_extra_meta", "av_sub_q", "av_get_padded_bits_per_pixel", "ff_avfilter_graph_update_heap", "av_freep", "avcodec_get_hw_config", "av_opt_find", "av_bprint_init_for_buffer", "ff_codec_guid_get_id", "ff_get_line", "av_malloc", "ff_metadata_conv_ctx", "ff_vorbis_comment", "av_color_space_from_name", "av_camellia_alloc", "av_blowfish_alloc", "av_frame_set_color_range", "av_tree_insert", "avformat_network_deinit", "ff_replaygain_export_raw", "ff_simple_idct248_put", "ff_fft_end_fixed", "ff_brktimegm", "avformat_configuration", "av_cast5_init", "ff_wma_end", "ff_put_no_rnd_qpel8_mc11_old_c", "av_dict_get_string", "ff_imdct_calc_c_fixed", "av_bitstream_filter_filter", "av_cpb_properties_alloc", "swri_get_dither", "av_timecode_init", "av_match_ext", "av_hwframe_constraints_free", "av_fast_padded_malloc", "ff_put_qpel16_mc13_old_c", "avformat_get_riff_audio_tags", "av_strlcatf", "avfilter_link_get_channels", "ff_update_duplicate_context", "av_des_crypt", "av_imdct_half", "ff_thread_await_progress", "av_opt_find2", "ff_simple_idct_add_int16_8bit", "av_color_primaries_from_name", "av_get_pix_fmt_loss", "av_parser_next", "ff_get_buffer", "av_get_bits_per_sample", "ff_celt_pvq_init", "avfilter_config_links", "ff_mpeg1_find_frame_end", "av_get_exact_bits_per_sample", "ff_h264chroma_init", "avio_skip", "ff_aac_sbr_init", "av_opt_get_int", "avpriv_dict_set_timestamp", "ff_mpv_idct_init", "av_rc4_alloc", "ff_wma_run_level_decode", "avio_get_str", "av_hash_final_b64", "ff_dct_end", "avcodec_fill_audio_frame", "ff_draw_horiz_band", "ffio_ensure_seekback", "avcodec_get_hw_frames_parameters", "av_lockmgr_register", "av_format_inject_global_side_data", "av_frame_get_channels", "avfilter_graph_alloc", "av_dynarray2_add", "ff_pixblockdsp_init", "ff_mpeg_er_init", "av_frame_copy_props", "av_parse_ratio", "av_format_get_opaque", "av_strcasecmp", "av_add_index_entry", "ff_mpv_frame_end", "ff_generate_avci_extradata", "ff_thread_can_start_frame", "av_dynarray_add", "ff_opus_rc_get_raw", "avio_write_marker", "avio_rb16", "av_strireplace", "av_parser_init", "ff_celp_filter_init", "av_image_get_linesize", "ff_celt_pvq_uninit", "avfilter_graph_alloc_filter", "av_fifo_grow", "av_bitstream_filter_close", "av_file_map", "ff_hex_to_data", "ff_mdct_calc_c_fixed_32", "ff_interleaved_peek", "av_hex_dump", "avpriv_set_systematic_pal2", "av_opt_get_q"], "allstrings": ["3333", "6666666666666666\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", "raw ADTS AAC (Advanced Audio Coding)", "audio/aac,audio/aacp,audio/x-aac", "aiff", "Audio IFF", "title", "author", "copyright", "comment", "file is not seekable\n", "qcelp without wave chunk, assuming full rate\n", "could not find COMM tag or invalid block_align value\n", "exp %d is out of range\n", "unknown or unsupported codec tag: %s", "block_align not set\n", "3GPP AMR", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "WM/AlbumArtist", "album_artist", "WM/AlbumTitle", "album", "Author", "artist", "Description", "WM/Composer", "composer", "WM/EncodedBy", "encoded_by", "WM/EncodingSettings", "encoder", "WM/Genre", "genre", "WM/Language", "language", "WM/OriginalFilename", "filename", "WM/PartOfSet", "disc", "WM/Publisher", "publisher", "WM/Tool", "WM/TrackNumber", "track", "WM/MediaStationCallSign", "service_provider", "WM/MediaStationName", "service_name", "ASF (Advanced / Active Streaming Format)", "asf demuxer", "no_resync_search", "Don't try to resynchronize by looking for a certain optional start code", "export_xmp", "Export full XMP metadata", "DRM protected stream detected, decoding will likely fail!\n", "Secret data:\n", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "Ext DRM protected stream detected, decoding will likely fail!\n", "encryption", "ASF Extended Content Encryption", "Digital signature detected!\n", "gpos mismatch our pos=%lu, end=%ld\n", "i=%d, st->codecpar->codec_type:%d, asf->dar %d:%d sar=%d:%d\n", "too many streams\n", "AspectRatioX", "AspectRatioY", "%d stream %d name_len %2d type %d len %4d <%s>\n", "Payload extension %x %d\n", "WM/Picture", "Unsupported byte array in tag %s.\n", "Unsupported GUID value in tag %s.\n", "Unsupported value type %d in tag %s.\n", "Invalid attached picture size: %d.\n", "Unknown attached picture type: %d.\n", "Unknown attached picture mimetype: %s.\n", "Invalid attached picture data size: %d >= %d.\n", "src/libavformat/asfdec_f.c", "int asf_read_packet(AVFormatContext *, AVPacket *)", "asf->packet_size_left < FRAME_HEADER_SIZE || asf->packet_segments < 1", "Skip due to FRAME_HEADER_SIZE\n", "int asf_parse_packet(AVFormatContext *, AVIOContext *, AVPacket *)", "ret >= 0", "ff asf skip %d (unknown stream)\n", "Assertion %s failed at %s:%d\n", "asf_st", "skipping asf data pkt with fragment offset for stream:%d, expected:%d but got %d from pkt)\n", "freeing incomplete packet size %d, new %d\n", "Cannot append palette to packet\n", "new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n", "READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n", "packet fragment position invalid %u,%u not in %u\n", "discarding ms fart\n", "pkt.size != ds_packet_size * ds_span (%d %d %d)\n", "offset + asf_st->ds_chunk_size <= asf_st->pkt.size", "idx + 1 <= asf_st->pkt.size / asf_st->ds_chunk_size", "key:%d stream:%d seq:%d offset:%d replic_size:%d num:%X packet_property %X\n", "packet_replic_size %d is invalid\n", "packet_obj_size %d invalid\n", "too long payload\n", "unexpected packet_replic_size of %d\n", "packet_replic_size is invalid\n", "packet_frag_size is invalid (%d>%d-%d+%d)\n", "ff asf bad header %x  at:%ld\n", "ff asf bad non zero\n", "Invalid ECC byte", "invalid packet_length %u at:%ld\n", "invalid padsize %u at:%ld\n", "invalid packet header length %d for pktlen %u-%u at %ld\n", "packet: size=%d padsize=%d  left=%d\n", "SEEKTO: %ld\n", "itime:0x%lx, pct:%d, ict:%d\n", "pktnum:%d, pktct:%d  pts: %ld\n", "asf_read_pts failed\n", "URLContext", "protocol_whitelist", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void*)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "src/libavformat/avio.c", "protocol_blacklist", "!(e=av_dict_get(*options, \"protocol_blacklist\", ((void*)0), 0)) || (uc->protocol_blacklist && !strcmp(uc->protocol_blacklist, e->value))", "Protocol '%s' not on whitelist '%s'!\n", "Protocol '%s' on blacklist '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "file", "https:", "tls:", "https protocol not found, recompile FFmpeg with openssl, gnutls or securetransport enabled.\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void*)0), 0)) || !strcmp(whitelist, e->value)", "!blacklist || !(e=av_dict_get(*options, \"protocol_blacklist\", ((void*)0), 0)) || !strcmp(blacklist, e->value)", "NULL", "List of protocols that are allowed to be used", "List of protocols that are not allowed to be used", "rw_timeout", "Timeout for IO operations (in microseconds)", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "start", "Key '%s' not found.\n", "Error parsing options string %s\n", "AVIOContext", "!s->write_flag", "src/libavformat/aviobuf.c", "Statistics: %d seeks, %d writeouts\n", "Statistics: %ld bytes read, %d seeks\n", "Invalid UTF8 sequence in avio_put_str16%s\n", "Failed to decrease buffer size\n", "len >= s->orig_buffer_size", "Invalid return value 0 for stream protocol\n", "Apple CAF (Core Audio Format)", "desc chunk not present\n", "skipping CAF chunk: %08X (%s), size %ld\n", "Overflow during bit rate calculation %d * 8 * %ld\n", "Missing packet table. It is required when block size or frame size are variable.\n", "invalid AAC magic cookie\n", "invalid ALAC magic cookie\n", "failed to read preamble\n", "frmaalac", "failed to read kuki header\n", "failed to read new kuki header\n", "multichannel Opus in CAF", "error reading packet table\n", "data", "data:", "No ',' delimiter in URI\n", "Invalid content-type '%.*s'\n", "Content-type: %.*s\n", "base64", "Ignoring option '%.*s'\n", "Invalid base64 in URI\n", "%s #%d, %s, %s '%s':\n", "Output", "Input", "from", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%s%d.%06d", ", bitrate: ", "%ld kb/s", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "    ", "name", "  Program %d %s\n", "  No Program\n", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "%sMetadata:\n", "%s  %-16s: ", "\n%s  %-16s: ", "dump_separator", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ": %s", ", SAR %d:%d DAR %d:%d", "fps, ", "tbr, ", "tbn, ", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", " (descriptions)", " (dependent)", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "H.263 macroblock info", "replaygain: ", "displaymatrix: rotation of %.2f degrees", "stereo3d: ", "audio service type: ", "quality factor: %d, pict_type: %c", "cpb: ", "spherical: ", "unknown side data type %d (%d bytes)", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "invalid data", "track gain", "track peak", "album gain", "album peak", "%s - ", "unknown", " (inverted)", "main", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "bitrate max/min/avg: %d/%d/%d buffer size: %d vbv_delay: %ld", "Mastering Display Metadata, has_primaries:%d has_luminance:%d r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f) min_luminance=%f, max_luminance=%f", "(%f/%f/%f) ", "[%zu, %zu, %zu, %zu] ", "[pad %u] ", "Content Light Level Metadata, MaxCLL=%d, MaxFALL=%d", "file,crypto", "pipe", "crypto", "file:", "truncate", "truncate existing files on write", "blocksize", "set I/O operation maximum block size", "follow", "Follow a file as it is being written", "pipe:", "Invalid picture type: %d.\n", "Could not read mimetype from an attached picture.\n", "Error reading attached picture description.\n", "Error reading attached picture data.\n", "flac", "raw FLAC", "fLaC", "Error parsing attached picture.\n", "error parsing VorbisComment metadata\n", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\n", "segment", "ssegment", "image2", "Probing %s score:%d size:%d\n", "Probing %s score:%d increased to %d due to MIME type\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "hls,applehttp", "Apple HTTP Live Streaming", "live_start_index", "segment index to start live streams at (negative values are from the end)", "allowed_extensions", "List of file extensions that hls is allowed to access", "3gp,aac,avi,flac,mkv,m3u8,m4a,m4s,m4v,mpg,mov,mp2,mp3,mp4,mpeg,mpegts,ogg,ogv,oga,ts,vob,wav", "max_reload", "Maximum number of times a insufficient list is attempted to be reloaded", "http_persistent", "Use persistent HTTP connections", "http_multiple", "Use multiple HTTP connections for fetching segments", "#EXTM3U", "#EXT-X-STREAM-INF:", "#EXT-X-TARGETDURATION:", "#EXT-X-MEDIA-SEQUENCE:", "user_agent", "cookies", "headers", "http_proxy", "seekable", "Empty playlist\n", "variant_bitrate", "Error when loading first segment '%s'\n", "No expected HTTP requests have been made\n", "http", "keepalive request failed for '%s', retrying with new connection: %s\n", "multiple_requests", "location", "#EXT-X-KEY:", "AES-128", "SAMPLE-AES", "#EXT-X-MEDIA:", "#EXT-X-PLAYLIST-TYPE:", "EVENT", "#EXT-X-MAP:", "#EXT-X-ENDLIST", "#EXTINF:", "#EXT-X-BYTERANGE:", "BANDWIDTH=", "AUDIO=", "VIDEO=", "SUBTITLES=", "METHOD=", "URI=", "TYPE=", "GROUP-ID=", "LANGUAGE=", "ASSOC-LANGUAGE=", "NAME=", "DEFAULT=", "FORCED=", "CHARACTERISTICS=", "AUDIO", "VIDEO", "SUBTITLES", "public.accessibility.describes-music-and-sound", "public.accessibility.describes-video", "BYTERANGE=", "user-agent", "referer", "No longer receiving playlist %d\n", "Failed to reload playlist %d\n", "skipping %d segments ahead, expired from playlists\n", "Failed to open segment %d of playlist %d\n", "http_version", "Failed to open an initialization section in playlist %d\n", "Downloading an initialization section of size %ld\n", "offset", "end_offset", "HLS request for url '%s', offset %ld, playlist %d\n", "Unable to read key file %s\n", "Unable to open key file %s\n", "crypto+%s", "crypto:%s", "SAMPLE-AES encryption is not supported yet\n", "Unable to seek to offset %ld of HLS segment '%s'\n", "Filename extension of '%s' is not a common multimedia extension, blocked for security reasons.\nIf you wish to override this adjust allowed_extensions, you can set it to 'ALL' to allow all\n", "file,", "Could not read complete segment.\n", "Too large HLS ID3 tag (%d > %ld bytes)\n", "Stripped %d HLS ID3 bytes\n", "Stripped additional %d HLS ID3 bytes\n", "!pls->id3_deferred_extra", "src/libavformat/hls.c", "Changing ID3 metadata in HLS audio elementary stream", "PRIV", "HLS ID3 audio timestamp %ld\n", "Invalid HLS ID3 audio timestamp %ld\n", "APIC", "A HLS playlist item '%s' referred to an external file '%s'. Opening this file was forbidden for security reasons\n", "stream index inconsistency: index %d, %d main streams, %d subdemuxer streams\n", "Now receiving playlist %d, segment %d\n", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Jazz", "Metal", "New Age", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Gangsta", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Ballad", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "date", "TALB", "TCOM", "TCON", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "performer", "TPOS", "TPUB", "TRCK", "TSSE", "USLT", "lyrics", "TCMP", "compilation", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "CHAP", "id3v2_priv.%s", "\\x%02x", "id3v2 ver:%d flags:%02X len:%d\n", "compression", "COMM", "version", "invalid extended header length", "extended header too long.", "Invalid empty frame %s, skipping.\n", "encrypted", "compressed", "encrypted and compressed", "Skipping %s ID3v2 frame %s.\n", "Failed to alloc %d bytes\n", "Failed to read tag data\n", "invalid frame id, assuming padding\n", "ID3v2.%d tag skipped, cannot handle %s\n", "Error reading frame %s, skipped\n", "(%d)", "TXXX", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "lyrics-%s%s%s", "Error reading lyrics, skipped\n", "Error reading comment frame, skipped\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "GEOB", "Failed to alloc %zu bytes\n", "Error reading GEOB frame, data truncated.\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "jpeg", "ljpg", "pgmyuv", "mpg1-img", "mpg2-img", "mpg4-img", "tiff", "pict", "im24", "im32", "sunras", "svgz", "yuv10", "webp", "xface", "MPEG-4 description: tag=0x%02x len=%d\n", "esds object type id 0x%02x\n", "Specific MPEG-4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "raw MPEG-4 video", "m4v demuxer", "c->fc->nb_streams >= 1", "src/libavformat/mov.c", "invalid size %ld in stsd\n", "size=%ld 4CC=%s codec_type=%d\n", "Invalid sample rate %d\n", "reached eof, corrupted STSD atom\n", "mov,mp4,m4a,3gp,3g2,mj2", "QuickTime / MOV", "multiple fourcc not supported\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "compatible_brands", "audio channels %d\n", "version =%d, isom =%d\n", "qt  ", "ignoring multiple glbl\n", "reel_name", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type:'%s' parent:'%s' sz: %ld %ld %ld\n", "overread end of atom '%.4s' by %ld bytes\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unable to add atom to extradata\n", "aclr not decoded - unexpected size %ld\n", "truncated extradata\n", "Duplicated STCO atom\n", "reached eof, corrupted STCO atom\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "track[%u].ctts.entries = %u\n", "ignoring CTTS entry with count=%d duration=%d\n", "count=%d, duration=%d\n", "CTTS invalid\n", "reached eof, corrupted CTTS atom\n", "dts shift %d\n", "mov_update_dts_shift(): dts_shift set to %d\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x%08x size %u\n", "Invalid edit list entry_count: %d for elst atom of size: %ld bytes.\n", "ELST atom of %ld bytes, bigger than %d entries.", "Duplicated ELST atom\n", "track[%u].edit_count = %i\n", "duration=%ld time=%ld rate=%f\n", "Track %d, edit %d: Invalid edit list media time=%ld\n", "enda %d\n", "Unknown MOV field order 0x%04x\n", "[aax] file checksum == ", "%02x", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "ctype=%s\n", "stype=%s\n", "handler_name", "Multiple mdhd?\n", "Version %d", "Invalid mdhd time scale %d, defaulting to 1\n", "creation_time is not representable\n", "stream has moof boxes, will look for a mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %lx\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "failed to seek back after looking for mfra\n", "found tfra\n", "Found duplicated MOOV Atom. Skipped it\n", "Invalid mvhd time scale %d, defaulting to 1\n", "time scale = %i\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "sidx version %u", "could not find corresponding track id %d\n", "Invalid sidx timescale 1/%d\n", "sidx reference_type 1", "Duplicated STPS atom\n", "reached eof, corrupted STPS atom\n", "track[%u].stsc.entries = %u\n", "Duplicated STSC atom\n", "STSC entry %d is invalid (first=%d count=%d id=%d)\n", "sc->stsc_data[i+1].first >= 2", "reached eof, corrupted STSC atom\n", "invalid STSD entries %d\n", "Duplicate stsd found in this track.\n", "keyframe_count = %u\n", "Duplicated STSS atom\n", "reached eof, corrupted STSS atom\n", "sample_size = %u sample_count = %u\n", "Invalid sample field size %u\n", "Duplicated STSZ atom\n", "reached eof, corrupted STSZ atom\n", "track[%u].stts.entries = %u\n", "Duplicated STTS atom\n", "sample_count=%d, sample_duration=%d\n", "reached eof, corrupted STTS atom\n", "rotate", "could not find corresponding track id %u\n", "could not find corresponding trex\n", "frag flags 0x%x\n", "stream %d, missing mandatory atoms, broken header\n", "stream %d, contradictionary STSC and STCO\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "stream %d, timescale not set\n", "multiple edit list entries, Use -advanced_editlist to correctly decode otherwise a/v desync might occur\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "Sample size %u is too large\n", "AVIndex stream %d, sample %u, offset %lx, dts %ld, size %u, distance %u, keyframe %d\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "chunk count %u\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %u\n", "AVIndex stream %d, chunk %u, offset %lx, dts %ld, size %u, duration %u\n", "Cannot allocate index ranges buffer\n", "Shifting DTS by %d because of negative CTTS.\n", "Processing st: %d, edit list %ld - media time: %ld, duration: %ld\n", "st: %d edit list: %ld Missing key frame while searching for timestamp: %ld\n", "st: %d edit list %ld Cannot find an index entry before timestamp: %ld.\n", "stts: %ld ctts: %ld, ctts_index: %ld, ctts_count: %ld\n", "Cannot add CTTS entry %ld - {%ld, %d}\n", "skip %d audio samples from curr_cts: %ld\n", "drop a frame at curr_cts: %ld @ %ld\n", "Cannot reallocate frame duration buffer\n", "Cannot add index entry\n", "Offset DTS by %ld to make first pts zero.\n", "Support for mvhd.timescale = 0 with editlists", "index", "ctts_index", "ctts_sample", "end_index >= 0 && end_index <= st->nb_index_entries", "Setting codecpar->delay to %d for stream st: %d\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "flags 0x%x entries %u\n", "found mfra time %ld, using it for pts\n", "found sidx time %ld, using it for pts\n", "found tfdt time %ld, using it for dts\n", "found track end time %ld, using it for dts\n", "first sample flags 0x%x\n", "Failed to add index entry\n", "pts %ld calculated dts %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\n", "AVIndex stream %d, sample %d, offset %lx, dts %ld, size %u, distance %d, keyframe %d\n", "reached eof, corrupted TRUN atom\n", "Unsupported DTS audio channel layout", "get_wav_header failed\n", "this file requires zlib support compiled in\n", "Duplicated SBGP atom\n", "reached eof, corrupted SBGP atom\n", "systemBitrate=\"", "Invalid spherical metadata found\n", "<GSpherical:StitchingSoftware>", "<GSpherical:Spherical>", "true", "<GSpherical:Stitched>", "<GSpherical:ProjectionType>", "equirectangular", "<GSpherical:StereoMode>", "left-right", "top-bottom", "<GSpherical:InitialViewHeadingDegrees>", "<GSpherical:InitialViewPitchDegrees>", "<GSpherical:InitialViewRollDegrees>", "iTunSMPB", "%*X %X %X %X", "cdec", "Unhandled or malformed custom metadata of size %ld\n", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "duplicate senc atom\n", "senc atom size %ld invalid\n", "failed to read the auxiliary info", "duplicate saiz atom\n", "saiz atom auxiliary_info_sizes size %ld invalid\n", "failed to read the auxiliary info sizes", "STREAMINFO must be first FLACMetadataBlock\n", "non-STREAMINFO FLACMetadataBlock(s) ignored\n", "Empty stereoscopic video box\n", "Unknown st3d mode value %d\n", "Empty spherical video box\n", "Missing spherical video header\n", "Unknown spherical version %d\n", "Missing projection box\n", "Missing projection header box\n", "Unsupported cubemap layout %d\n", "Invalid bounding rectangle coordinates %u,%u,%u,%u\n", "Unknown projection type: %s\n", "unsupported OpusSpecificBox version\n", "Empty Mastering Display Metadata box\n", "Unsupported Mastering Display Metadata box version %d\n", "Empty Content Light Level box\n", "Unsupported Content Light Level box version %d\n", "Empty VP Codec Configuration box\n", "Unsupported VP Codec Configuration box version %d\n", "Invalid Mastering Display Color Volume box\n", "Empty Content Light Level Info box\n", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "firmware", "hd_video", "keywords", "synopsis", "make", "model", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "original_artist", "performers", "playback_requirements", "original_source", "subtitle", "warning", "Error parsing cover art.\n", "The index of 'data' is out of range: %d < 1 or >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the number (%d) in string.\n", "Failed to store the number (%u) in string.\n", "Failed to store the float32 number (%f) in string.\n", "%s-%s", "HandBrake %d.%d.%d", "%d/%d", "loci too short\n", "place name too long\n", "loci too short (%u bytes left, need at least %d)\n", "%+08.4f%+09.4f", "Unknown cover type: 0x%x.\n", "The 'keys' atom with the invalid key count: %u\n", "The key# %u in meta has invalid size:%u\n", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "Ignore the edit list atom.", "advanced_editlist", "Modify the AVIndex according to the editlists. Use this option to decode in the order specified by the edits.", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "auto", "export_all", "Export unrecognized metadata entries", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "decryption_key", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%ld\n", "timecode", "Forcing full parsing for mp3 stream\n", "Overflow during bit rate calculation %ld * 8 * %d\n", "Referenced QT chapter track not found\n", "Failed to retrieve first frame\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "%02d:%02d:%02d%c%02d", "size: %dx%d\n", "palette: ", "%06x%s", "stream %d, offset 0x%lx: partial file\n", "Nonkey frame from stream %d discarded due to AVDISCARD_NONKEY\n", "stream %d, sample %d, dts %ld\n", "root atom offset 0x%lx: partial file\n", "read fragments, offset 0x%lx\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "current sample %ld greater than the number of auxiliary info sample sizes %zu\n", "auxiliary info offset %zu greater than auxiliary info size %zu\n", "stream %d, timestamp %ld, sample %d\n", "stream %d, found sample %d\n", "next == (int)next", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "MP2/3 (MPEG audio layer 2/3)", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "Skipping %d bytes of junk at %ld.\n", "Invalid frame size (%d): Could not seek to %ld.\n", "Failed to read frame size: Could not seek to %ld.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "pad %d %d\n", "Cannot determine file size, skipping TOC table.\n", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "Could not seek to %ld.\n", "mpeg", "MPEG-PS (MPEG-2 Program Stream)", "IMKH", "Sofdec", "%d: pts=%0.3f dts=%0.3f size=%d\n", "ofdec", "Further flags set but no bytes left\n", "pes_ext %X is invalid\n", "none (ret=%d)\n", "pos=0x%lx dts=0x%lx %0.3f\n", "tag: 0x%02x len=%d\n", "src/libavformat/mpegts.c", "DVB subtitles with multiple languages", "reg_desc=%.4s\n", "Opus in MPEG-TS - channel_config_code > 0x8", "mpegts", "MPEG-TS (MPEG-2 Transport Stream)", "mpegtsraw", "raw MPEG-TS (MPEG-2 Transport Stream)", "Filter: pid=0x%x type=%d\n", "pid %x is not PES\n", "Tag %x length violation new length %d bytes remaining %d\n", "Maximum MP4 descriptor level exceeded\n", "Found tag %x expected %x\n", "Predefined SLConfigDescriptor", "SDT:\n", "PAT:\n", "sid=0x%x pid=0x%x\n", "PMT: len %i\n", "sid=0x%x sec_num=%d/%d version=%d tid=%d\n", "pcr_pid=0x%x\n", "program tag: 0x%02x len=%d\n", "pid=%x pes_code=%#x\n", "pid=%x stream_type=%x probing\n", "PES packet size mismatch\n", "cannot set stream info, internal codec is open\n", "stream=%d stream_type=%x pid=%x prog_reg_desc=%.4s\n", "Continuity check failed for pid %d expected %d got %d\n", "Packet had TEI flag set; marking as corrupt\n", "pos >= 188", "All programs have pmt, headers found\n", "mpegts demuxer", "resync_size", "set size limit for looking up a new synchronization", "fix_teletext_pts", "try to fix pts values of dvb teletext streams", "ts_packetsize", "output option carrying the raw packet size", "scan_all_pmts", "scan and combine all PMTs", "skip_changes", "skip changing / adding streams / programs", "skip_clear", "skip clearing programs", "Failed to allocate buffers for seekback\n", "Could not detect TS packet size, defaulting to non-FEC/DVHS\n", "tuning done\n", "invalid pcr pair %ld >= %ld\n", "start=%0.3f pcr=%0.3f incr=%d\n", "score: %d, dvhs_score: %d, fec_score: %d \n", "Unable to seek back to the start\n", "Skipping after seek\n", "max resync size reached, could not find sync byte\n", "changing packet size to %d\n", "mpegtsraw demuxer", "compute_pcr", "compute exact PCR for each transport stream packet", "mpegvideo", "raw MPEG video", "mpegvideo demuxer", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Out of memory\n", "pkt->size == ((-0x7fffffff-1) / 3 * 2 + (int)sizeof(AVFrame))", "src/libavformat/mux.c", "Delay between the first packet and last packet in the muxing queue is %ld > %ld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "The AVFormatContext is not in set to bitexact mode, only the AVCodecContext. If this is not intended, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec to pass codec parameters to muxers is deprecated, use AVStream.codecpar instead.\n", "sample rate not set\n", "dimensions not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s incompatible with output codec id '%d' (%s)\n", "Lavf58.12.100", "encoder-", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "Failed to send packet to filter %s for stream %d\n", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %ld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "NOPTS", "OggS", "found headers\n", "Header parsing failed for stream %d\n", "Headers mismatch for stream %d: expected %d received %d.\n", "ogg_packet: curidx=%i\n", "ogg_packet: idx=%d pstart=%d psize=%d segp=%d nsegs=%d\n", "Codec not found\n", "Page at %ld is missing granule\n", "Header processing failed: %s\n", "Packet processing failed: %s\n", "cannot find sync word\n", "ogg page, unsupported version\n", "failed to create or replace stream\n", "Cannot identify new stream\n", "Changing stream parameters in multistream ogg", "New streams are not supposed to be added in between Ogg context save/restore operations.\n", "invalid pts %ld\n", "Broken file, %skeyframe not correctly marked.\n", "non-", "stream_index < ogg->nstreams", "src/libavformat/oggdec.c", "CELT    ", "Daala", "Invalid timebase, assuming 30 FPS\n", "Too large gpshift %d (>= 32).\n", "Invalid number of planes %d in daala pixel format map.\n", "Unsupported pixel format - %i %i\n", "Unknown header type %X\n", "buf_size >= 0", "src/libavcodec/bytestream.h", "KW-DIRAC", "Invalid timing values.\n", "OpusHead", "Opus", "OpusTags", "Unsupported huge granule pos %ld\n", "Last packet was truncated to %d due to end trimming.\n", "fishead", "Unknown skeleton version %d.%d\n", "fisbone", "Serial number in fisbone doesn't match any stream\n", "Multiple fisbone for the same stream\n", "Speex   ", "speex packet too small\n", "invalid channel count. Speex must be mono or stereo.\n", "invalid packet_size, frames_per_packet %d %d\n", "Too old or unsupported Theora (%x)\n", "Invalid time base in theora stream, assuming 25 FPS\n", "METADATA_BLOCK_PICTURE", "out-of-memory error. Skipping cover art block.\n", "Failed to parse cover art block.\n", "%td bytes of comment header remain\n", "truncated comment header, %i comments not found\n", "CHAPTER%03d", "%02d:%02d:%02d.%03d", "NAME", "Channel change is not supported\n", "OVP80", "Invalid OggVP8 header packet", "Unknown OggVP8 version %d.%d\n", "Unknown VP8 header type 0x%02X\n", "Opening '%s' for %s\n", "writing", "reading", "AVFormatContext", "avioflags", "direct", "reduce buffering", "probesize", "set probing size", "formatprobesize", "number of bytes to probe file format", "packetsize", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "deprecated, does nothing", "fastseek", "fast but inaccurate seeks", "latm", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "bitexact", "do not write random/volatile data", "shortest", "stop muxing with the shortest stream", "autobsf", "add needed bsfs automatically", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "print specific debug info", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "buffer", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "strict", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "format_whitelist", "List of demuxers that are allowed to be used", "max_streams", "maximum number of streams", "f64be", "PCM 64-bit floating-point big-endian", "f64le", "PCM 64-bit floating-point little-endian", "f32be", "PCM 32-bit floating-point big-endian", "f32le", "PCM 32-bit floating-point little-endian", "s32be", "PCM signed 32-bit big-endian", "s32le", "PCM signed 32-bit little-endian", "s24be", "PCM signed 24-bit big-endian", "s24le", "PCM signed 24-bit little-endian", "s16be", "PCM signed 16-bit big-endian", "s16le", "PCM signed 16-bit little-endian", "audio/L16", "PCM signed 8-bit", "u32be", "PCM unsigned 32-bit big-endian", "u32le", "PCM unsigned 32-bit little-endian", "u24be", "PCM unsigned 24-bit big-endian", "u24le", "PCM unsigned 24-bit little-endian", "u16be", "PCM unsigned 16-bit big-endian", "u16le", "PCM unsigned 16-bit little-endian", "PCM unsigned 8-bit", "alaw", "PCM A-law", "mulaw", "PCM mu-law", "Asterisk raw pcm", "f64be demuxer", "sample_rate", "channels", " rate=%d", " channels=%d", "Invalid sample_rate found in mime_type \"%s\"\n", "st->codecpar->bits_per_coded_sample > 0", "src/libavformat/pcmdec.c", "f64le demuxer", "f32be demuxer", "f32le demuxer", "s32be demuxer", "s32le demuxer", "s24be demuxer", "s24le demuxer", "s16be demuxer", "s16le demuxer", "s8 demuxer", "u32be demuxer", "u32le demuxer", "u24be demuxer", "u24le demuxer", "u16be demuxer", "u16le demuxer", "u8 demuxer", "alaw demuxer", "mulaw demuxer", "sln demuxer", "framerate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "wav header size < 14", "WAVEFORMATEX support for RIFX files", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "%s://", "--prefix=/Users/harleybuild/dmengine-externals-v3/Android-x86_64-ndk-r17b/build/ffmpeg-4.0.2/ffmpeg --enable-static --disable-shared --incdir=/Users/harleybuild/dmengine-externals-v3/Android-x86_64-ndk-r17b/include --enable-runtime-cpudetect --disable-programs --disable-doc --disable-avdevice --disable-postproc --disable-network --disable-swscale --disable-pthreads --disable-pixelutils --disable-audiotoolbox --disable-cuvid --disable-cuda --disable-d3d11va --disable-dxva2 --disable-nvenc --disable-vaapi --disable-vdpau --disable-encoders --disable-hwaccels --disable-muxers --disable-bsfs --disable-devices --disable-iconv --disable-bzlib --disable-zlib --disable-asm --disable-decoders --enable-decoder='aac*,alac*,mp1*,mp2*,mp3*,opus,pcm*,flac,vorbis,wma*,wav' --disable-demuxers --enable-demuxer='aac,asf,aiff,flac,hls,mov,m4v,mpeg*,mp3,ogg,pcm*,wav,xwma,caf,aif,amr' --disable-parsers --enable-parser='aac*,aiff,flac,mov,mp3,mpeg*,ogg,opus,wav' --disable-filters --enable-filter='aformat,volume,asetnsamples,aresample,anequalizer,bass,treble,alimiter' --disable-protocols --enable-protocol='file,data,pipe' --disable-stripping --enable-cross-compile --target-os=android --arch=x86_64 --cc=/Users/harleybuild/android-ndk-r17b/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang --sysroot=/Users/harleybuild/android-ndk-r17b/platforms/android-21/arch-x86_64 --cross-prefix=/Users/harleybuild/android-ndk-r17b/toolchains/x86_64-4.9/prebuilt/darwin-x86_64/bin/x86_64-linux-android- --enable-pic --disable-mipsdsp --disable-mipsdspr2 --extra-ldflags='-Wl,--gc-sections -Wl,-z,nocopyreloc -lgcc -Wl,--exclude-libs,libgcc.a -no-canonical-prefixes -Wl,--build-id -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--warn-shared-textrel -Wl,--fatal-warnings -Wl,-rpath-link=/Users/harleybuild/android-ndk-r17b/platforms/android-21/arch-x86_64/usr/lib -target x86_64-none-linux-android21 -gcc-toolchain /Users/harleybuild/android-ndk-r17b/toolchains/x86_64-4.9/prebuilt/darwin-x86_64 -Wl,--fix-cortex-a8' --enable-debug=1 --libdir=/Users/harleybuild/dmengine-externals-v3/Android-x86_64-ndk-r17b/lib/RelWithDebInfo --extra-cflags='-funwind-tables -no-canonical-prefixes -D__ANDROID_API__=21 -fexceptions -target x86_64-none-linux-android21 -gcc-toolchain /Users/harleybuild/android-ndk-r17b/toolchains/x86_64-4.9/prebuilt/darwin-x86_64 -isystem /Users/harleybuild/android-ndk-r17b/sysroot/usr/include/x86_64-linux-android -isystem /Users/harleybuild/android-ndk-r17b/sysroot/usr/include --sysroot /Users/harleybuild/android-ndk-r17b/platforms/android-21/arch-x86_64 -fvisibility=default -O2 -g -DNDEBUG'", "libavformat license: LGPL version 2.1 or later", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist && !dst->protocol_blacklist", "src/libavformat/utils.c", "Failed to duplicate black/whitelist\n", "Truncating packet of size %d to %ld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Discarding ID3 tags because more suitable tags were found.\n", "demuxer does not support additional id3 data, skipping\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "st->internal->avctx->ticks_per_frame", "s->iformat", "*pkt_buffer", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "cache", "Reconfiguring buffers to size %ld\n", "read_seek: %d %s\n", "using cached pos_min=0x%lx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%lx pos_limit=0x%lx dts_max=%s\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%lx pos_max=0x%lx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%ld %ld %ld / %s %s %s target:%s limit:%ld start:%ld noc:%d\n", "read_timestamp() failed in the middle\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "missing_streams", "Before avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d nb_streams:%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "threads", "Failed to open codec in %s\n", "avformat_find_stream_info", "interrupted\n", "All info found\n", "Probe buffer size limit of %ld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "DTS discontinuity in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "max_analyze_duration %ld reached at %ld microseconds st:%d\n", "decoding for stream %d failed\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "Number of streams exceeds max_streams parameter (%d), see the documentation if you wish to increase it\n", "new_program: id=0x%04x\n", "Chapter end time %ld before start %ld\n", "stream index %d is not valid\n", "%0*d", " \t\r\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Invalid stream specifier syntax, missing ':' sign after :m.\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "Failed to open bitstream filter %s for stream %d with codec %s", "copy", "https", "Failed to parse creation_time %s\n", "Invalid palette side data\n", "mov,mp4,3gp,3g2,psp,ipod,ismv,f4v", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "probing stream %d pp:%d\n", "Failed to reallocate probe buffer for stream %d\n", "nothing to probe for stream %d\n", "probed stream %d\n", "probed stream %d failed\n", "aptx", "dvbsub", "dvbtxt", "eac3", "h264", "hevc", "loas", "mjpeg_2000", "truehd", "Probe with size=%d, packets=%d detected %s with score=%d\n", "Demuxer context update while decoder is open, closing and trying to re-open\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "metadata", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "DTS %li < %li out of order\n", "invalid dts/pts combination %li\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%ld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s not matching first dts %s (pts %s, duration %ld) in the queue\n", "first_dts %s but no packet with dts in the queue\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "unknown codec", "unspecified frame size", "unspecified sample format", "unspecified sample rate", "unspecified number of channels", "no decodable DTS frames", "unspecified size", "unspecified pixel format", "no frame in rv30/40 and no sar", "extract_extradata", "stream %d: start_time: %0.3f duration: %0.3f\n", "format: start_time: %0.3f duration: %0.3f bitrate=%ld kb/s\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "Ignoring outlier non primary stream starttime %f\n", "Ignoring outlier non primary stream endtime %f\n", "Ignoring outlier non primary stream duration %f\n", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "WAV / WAVE (Waveform Audio)", "WAV demuxer", "ignore_length", "Ignore length", "WAVE", "RIFF", "RIFX", "RF64", "ds64", "invalid start code %s in RIFF header\n", "invalid format in RIFF header\n", "negative data_size and/or sample_count in ds64: data_size = %ld, sample_count = %ld\n", "found more than one 'fmt ' tag\n", "found more than one 'XMA2' tag\n", "found no 'fmt ' tag before the 'data' tag\n", "Ignoring maximum wav data size, file may be invalid\n", "found no 'fmt ' tag before the 'SMV0' tag\n", "Unknown SMV version found\n", "Found SMV data\n", "Could not allocate extradata.\n", "too many frames per jpeg\n", "too short LIST tag\n", "no 'fmt ' or 'XMA2' tag found\n", "no 'data' tag found\n", "Data size %ld is too large\n", "ignoring wrong sample_count %ld\n", "originator", "originator_reference", "origination_date", "origination_time", "time_reference", "0x%016lX%016lX%016lX%016lX", "0x%016lX%016lX%016lX%016lX%016lX%016lX%016lX%016lX", "umid", "coding_history", "xwma", "Microsoft xWMA", "XWMA", "Unexpected codec (tag %s; id %d)", "Unexpected extradata (%d bytes)", "Invalid channel count: %d\n", "Invalid bits_per_coded_sample: %d\n", "two dpds chunks present\n", "dpds chunk size %ld not divisible by 4\n", "dpds chunk size %ld invalid\n", "Invalid bits_per_coded_sample %d for %d channels\n", "aformat", "Convert the input audio to one of the specified formats.", "default", "sample_fmts", "A '|'-separated list of sample formats.", "sample_rates", "A '|'-separated list of sample rates.", "channel_layouts", "A '|'-separated list of channel layouts.", "This syntax is deprecated, use '|' to separate %s.\n", "sample format", "Error parsing sample format: %s.\n", "sample rate", "Error parsing sample rate: %s.\n", "channel layout", "Error parsing channel layout: %s.\n", "alimiter", "Audio lookahead limiter.", "Attack is too small.\n", "level_in", "set input level", "level_out", "set output level", "limit", "set limit", "attack", "set attack", "release", "set release", "enable asc", "asc_level", "set asc level", "level", "auto level", "anequalizer", "Apply high-order audio parametric multi band equalizer.", "c%d f=%lf w=%lf g=%lf t=%d", "c%d f=%lf w=%lf g=%lf", "params", "curves", "draw frequency response curves", "size", "set video size", "hd720", "mgain", "set max gain", "fscale", "set frequency scale", "linear", "logarithmic", "colors", "set channels curves colors", "red|green|blue|yellow|orange|lime|pink|magenta|brown", "out0", "out1", "change", "%d|f=%lf|w=%lf|g=%lf", "aresample", "Resample audio data.", "outlink->sample_rate == out_rate", "src/libavfilter/af_aresample.c", "outlink->channel_layout == out_layout || !outlink->channel_layout", "outlink->format == out_format", "ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n", "asetnsamples", "Set the number of samples for each output audio frames.", "No space for %d samples, stretching audio fifo\n", "Stretching audio fifo failed, discarded %d samples\n", "nb_out_samples", "set the number of per-frame output samples", "pad last frame with zeros", "nb_out_samples:%d pad:%d\n", "bass", "Boost or cut lower frequencies.", "treble", "Boost or cut upper frequencies.", "clipping %d times. Please reduce gain.\n", "Invalid frequency %f. Frequency must be less than half the sample-rate %d.\n", "src/libavfilter/af_biquads.c", "a=%lf %lf %lf:b=%lf %lf %lf\n", "frequency", "set central frequency", "width_type", "set filter-width type", "Q-Factor", "octave", "slope", "width", "set shelf transition steep", "gain", "set gain", "set channels to filter", "Invalid frequency %f and/or width %f <= 0\n", "Invalid frequency value.\n", "Invalid gain value.\n", "Invalid width value.\n", "Invalid width_type value.\n", "Invalid width_type value: %c\n", "Invalid biquad value.\n", "volume", "Change input volume.", "Both ReplayGain gain values are unknown.\n", "Using gain %f dB from replaygain side data.\n", "Invalid value NaN for volume\n", "Invalid value NaN for volume, setting to 0\n", "n:%f t:%f pts:%f precision:%s ", "volume_i:%d/255 ", "volume:%f volume_dB:%f\n", "fixed", "float", "double", "tb:%f sample_rate:%f nb_channels:%f\n", "set volume adjustment expression", "precision", "select mathematical precision", "select 8-bit fixed-point", "select 32-bit floating-point", "select 64-bit floating-point", "eval", "specify when to evaluate expressions", "once", "eval volume expression once", "frame", "eval volume expression per-frame", "replaygain", "Apply replaygain side data when present", "drop", "replaygain side data is dropped", "ignore", "replaygain side data is ignored", "track gain is preferred", "album gain is preferred", "replaygain_preamp", "Apply replaygain pre-amplification", "replaygain_noclip", "Apply replaygain clipping prevention", "Error when evaluating the volume expression '%s'\n", "nb_channels", "nb_consumed_samples", "nb_samples", "startpts", "startt", "channels == av_get_channel_layout_nb_channels(link->channel_layout) || !av_get_channel_layout_nb_channels(link->channel_layout)", "src/libavfilter/audio.c", "libavfilter license: LGPL version 2.1 or later", "src->graph", "src/libavfilter/avfilter.c", "dst->graph", "src->graph == dst->graph", "Media type mismatch between the '%s' filter output pad %d (%s) and the '%s' filter input pad %d (%s)\n", "!link->status_in", "!link->frame_wanted_out", "!link->status_out", "auto-inserting filter '%s' between the filter '%s' and the filter '%s'\n", "Not all input and output are properly linked (%d).\n", "circular filter chain detected\n", "Source filters and filters with more than one input must set config_props() callbacks on all outputs\n", "Failed to configure output pad on %s\n", "Video source filters must set their output link's width and height\n", "!link->hw_frames_ctx && \"should not be set by non-hwframe-aware filter\"", "Failed to configure input pad on %s\n", "ping", "pong from:%s %s\n", "enable", "Error applying generic filter options.\n", "Error applying options to the filter.\n", "This filter does not take any options, but options were provided: %s.\n", "format", "noformat", "frei0r", "frei0r_src", "aevalsrc", "This syntax is deprecated. Use '|' to separate the list items ('%s' instead of '%s')\n", "No such option: %s.\n", "Format change is not supported\n", "Channel count change is not supported\n", "Channel layout change is not supported\n", "Sample rate change is not supported\n", "Copying data in avfilter.\n", "!\"reached\"", "Processing command time:%f command:%s arg:%s\n", "link->hw_frames_ctx", "Timeline ('enable' option) not supported with filter '%s'\n", "Error when evaluating the expression '%s' for enable\n", "AVFilter", "thread_type", "Allowed thread types", "slice", "set enable expression", "Allowed number of threads", "extra_hw_frames", "Number of extra hardware frames to allocate for the user", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "EOF timestamp not reliable\n", "EOF on sink link %s:%s.\n", "graph->nb_filters", "src/libavfilter/avfiltergraph.c", "AVFilterGraph", "Maximum number of threads", "scale_sws_opts", "default scale filter options", "aresample_swr_opts", "default aresample filter options", "Input pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any source\n", "Output pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any destination\n", "fifo", "afifo", "auto_fifo_%d", "query_formats not finished\n", "The filters '%s' and '%s' do not have a common format and automatic conversion is disabled.\n", "scale", "'scale' filter not present, cannot convert pixel formats.\n", "auto_scaler_%d", "'aresample' filter not present, cannot convert audio formats.\n", "auto_resampler_%d", "inlink-> in_formats->refcount > 0", "inlink->out_formats->refcount > 0", "outlink-> in_formats->refcount > 0", "outlink->out_formats->refcount > 0", "inlink-> in_samplerates->refcount > 0", "inlink->out_samplerates->refcount > 0", "outlink-> in_samplerates->refcount > 0", "outlink->out_samplerates->refcount > 0", "inlink-> in_channel_layouts->refcount > 0", "inlink->out_channel_layouts->refcount > 0", "outlink-> in_channel_layouts->refcount > 0", "outlink->out_channel_layouts->refcount > 0", "Impossible to convert between the formats supported by the filter '%s' and the filter '%s'\n", "query_formats: %d queried, %d merged, %d already done, %d delayed\n", "%s%s", "The following filters could not choose their formats: %s\nConsider inserting the (a)format filter near their input or output.\n", "Query format failed for '%s': %s\n", "All layouts set on non-empty list\n", "All counts without all layouts\n", "best_idx >= 0", "diff < 0x7fffffff", "picking %s out of %d ref:%s alpha:%d\n", "picking %s out of %d ref:%s\n", "Cannot select sample rate for the link between filters %s and %s.\n", "Cannot select channel layout for the link between filters %s and %s.\n", "Unknown channel layouts not supported, try specifying a channel layout using 'aformat=channel_layouts=something'.\n", "n == sink_links_count", "index >= 0", "ctx->filter->activate == activate", "src/libavfilter/buffersink.c", "buffersink", "Buffer video frames, and make them available to the end of the filter graph.", "abuffersink", "Buffer audio frames, and make them available to the end of the filter graph.", "%d buffers queued in %s, something may be wrong.\n", "pix_fmts", "set the supported pixel formats", "Invalid size for pixel_fmts: %d, should be multiple of %d\n", "set the supported sample formats", "set the supported sample rates", "set the supported channel layouts", "channel_counts", "set the supported channel counts", "all_channel_counts", "accept all channel counts", "Invalid size for sample_fmts: %d, should be multiple of %d\n", "Invalid size for sample_rates: %d, should be multiple of %d\n", "Invalid size for channel_layouts: %d, should be multiple of %d\n", "Invalid size for channel_counts: %d, should be multiple of %d\n", "Conflicting all_channel_counts and list in options\n", "Layout indicates a different number of channels than actually present\n", "Buffer video frames, and make them accessible to the filterchain.", "abuffer", "Buffer audio frames, and make them accessible to the filterchain.", "Changing frame properties on the fly is not supported by all filters.\n", "Changing frame properties on the fly is not supported.\n", "video_size", "height", "pix_fmt", "sample aspect ratio", "pixel_aspect", "time_base", "frame_rate", "sws_param", "Invalid parameters provided.\n", "w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n", "sample_fmt", "channel_layout", "Sample format was not set or was invalid\n", "Invalid channel layout %s.\n", "Mismatching channel count %d and layout '%s' (%d channels)\n", "Neither number of channels nor channel layout specified\n", "tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n", "pix_desc", "src/libavfilter/drawutils.c", "Color conversion not implemented for %s\n", "Buffer input images and send them when they are requested.", "Buffer input frames and send them when they are requested.", "request_samples changed before the buffer was returned.\n", "frame->nb_samples > offset", "src/libavfilter/fifo.c", "Duplicate formats in %s detected\n", "ff_merge_formats", "ff_merge_samplerates", "Invalid pixel format '%s'\n", "Invalid sample format '%s'\n", "Invalid time base '%s'\n", "Invalid sample rate '%s'\n", "Invalid channel layout '%s'\n", "Unknown channel layout '%s' is not supported.\n", "pool->type == AVMEDIA_TYPE_VIDEO", "src/libavfilter/framepool.c", "pool->type == AVMEDIA_TYPE_AUDIO", "frame->data[1] != ((void*)0)", "frame->nb_extended_buf == 0", "%s:%s", "%*s%-*s", "%*s(%s)%*s", "[%dx%d %d:%d %s]", "[%dHz %s:%s]", " \n\t\r", "Unable to parse graph description substring: \"%s\"\n", "Not enough inputs specified for the \"%s\" filter.\n", "Invalid filterchain containing an unlabelled output pad: \"%s\"\n", "[in]", "[out]", "sws_flags=", "sws_flags not terminated with ';'.\n", "Bad (empty?) label found in the following: \"%s\".\n", "Mismatched '[' found in the following: \"%s\".\n", "=,;[", "[],;", "Parsed_%s_%d", "No such filter: '%s'\n", "Error creating filter '%s'\n", "flags", "Error initializing filter '%s'", " with args '%s'", "Too many inputs specified for the \"%s\" filter.\n", "Cannot create the link %s:%d -> %s:%d\n", "No output pad can be associated to link label '%s'.\n", "AAC (Advanced Audio Coding)", "aac_latm", "AAC LATM (Advanced Audio Coding LATM syntax)", "AAC decoder", "dual_mono_mode", "Select the channel to decode for dual mono", "autoselection", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "Too many channels\n", "Audio specific config size is invalid\n", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "Audio object type %s%d", "SBR+", "SBR with 960 frame length", "AAC data resilience (flags %x)", "epConfig %d", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "Low Delay SBR", "Input buffer exhausted before END element found\n", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "Too large remapped id", "Unknown ER channel configuration %d", "channel element %d.%d is not allocated\n", "no frame data found\n", "mono with CPE\n", "stereo with SCE\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "Pulse tool not allowed in eight short sequence.\n", "Pulse data corrupt or invalid.\n", "Gain control", "Reserved bit set.\n", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "Invalid Predictor Reset Group.\n", "invalid band type\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "TNS filter order %d is greater than maximum %d.\n", "error in spectral data, ESC overflow\n", "ms_present = 3 is reserved.\n", "ChannelElement %d.%d missing \n", "Dependent coupling is not supported together with LTP\n", "Error decoding AAC frame header.\n", "Elem type:%x id:%x\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "More than one AAC RDB per ADTS frame", "skip_data_stream_element: Input buffer exhausted before END element found\n", "extension type: %d len:%d\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "FILL:%s\n", "libfaac %d.%d", "ADTS header detected, probably as result of configuration misparsing\n", "no decoder config found\n", "incomplete frame\n", "frame length mismatch %d << %d\n", "Multiple programs", "Multiple layers", "audio config changed (sample_rate=%d, chan_config=%d)\n", "initializing latmctx\n", "aac_fixed", "Overflow in subband_scale()\n", "Fixed point 960/120 MDCT window", "960/120 MDCT window", "iid_mode %d is reserved.\n", "icc_mode %d is reserved.\n", "border_position non monotone.\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Expected to read %d PS bits actually read %d.\n", "illegal iid\n", "illegal icc\n", "Expected to read %d SBR bytes actually read %d.\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "sbr->data[ch].bs_num_env > 0", "src/libavcodec/aacsbr_template.c", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "Unsupported sample rate for SBR: %d\n", "Invalid bs_stop_freq: %d\n", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "Invalid n_master: %d\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "patch construction failed\n", "Too many patches: %d\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "SBR Extension over read.\n", "Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "bs_pointer >= 0", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "env_facs_q %d is invalid\n", "noise_facs_q %d is invalid\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Reserved SBR extensions", "envelope scalefactor overflow in dequant\n", "temp1 <= 1E20", "src/libavcodec/aacsbr.c", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "temp1.exp <= 66", "src/libavcodec/aacsbr_fixed.c", "sbr_qmf_analysis: value %09d too large, setting to %09d\n", "sbr_qmf_analysis: value %09d too small, setting to %09d\n", "Overflow in sbr_hf_assemble, shift=%d,%d\n", "Overflow in sbr_hf_assemble, shift=%d\n", "overflow that would need clipping in ff_acelp_interpolate()\n", "x < size", "src/libavcodec/acelp_vectors.c", "alac", "ALAC (Apple Lossless Audio Codec)", "extra_bits_bug", "Force non-standard decoding process", "extradata is too small\n", "set_info failed\n", "Sample depth %d", "Invalid channel count\n", "Channel count %d", "Error allocating buffers\n", "max samples per frame invalid: %u\n", "Cannot allocate memory.\n", "Syntax element %d", "invalid element channel count\n", "no end tag found. incomplete packet.\n", "Error : %d bits left\n", "Failed to decode all channels\n", "bps %d", "invalid samples per frame: %u\n", "sample count mismatch: %u != %d\n", "Compression with rice limit 0", "unknown prediction type: %i\n", "invalid zero block size of %d %d %d\n", "AVDCT", "DCT algorithm", "autoselect a good one", "fastint", "fast integer (experimental / for debugging)", "accurate integer", "experimental / for debugging", "altivec", "faan", "floating point AAN DCT (experimental / for debugging)", "idct", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "xvid", "xvidmmx", "faani", "floating point AAN IDCT (experimental / for debugging)", "simpleauto", "bits_per_sample", "(unsigned)pkt->size <= 0x7fffffff - 64", "src/libavcodec/avpacket.c", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "MPEGTS Stream ID", "Mastering display metadata", "Content light level metadata", "Spherical Mapping", "A53 Closed Captions", "p-pkt->data == pkt->size", "size<=0x7fffffff - 5 && p - pkt->data >= size", "length <= put_bits_left(pb)", "src/libavcodec/bitstream.c", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code %x for %d in init_vlc\n", "needed %d had %d\n", "Internal error, put_bits buffer too small\n", "s->buf_ptr < s->buf_end", "src/libavcodec/put_bits.h", "n <= s->buf_end - s->buf_ptr", "incorrect codes\n", "private_spspps_buf", "Codec '%s' (%d) is not supported by the bitstream filter '%s'. Supported codecs are: ", "%s (%d) ", "A non-NULL packet sent after an EOF.\n", "bsf_list", "AVBSFContext", "null", "bsf_list(", "mpeg1video", "MPEG-1 video", "mpeg2video", "MPEG-2 video", "h261", "H.261", "h263", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "rv10", "RealVideo 1.0", "rv20", "RealVideo 2.0", "mjpeg", "Motion JPEG", "image/jpeg", "mjpegb", "Apple MJPEG-B", "ljpeg", "Lossless JPEG", "sp5x", "Sunplus JPEG (SP5X)", "jpegls", "JPEG-LS", "mpeg4", "MPEG-4 part 2", "rawvideo", "raw video", "msmpeg4v1", "MPEG-4 part 2 Microsoft variant version 1", "msmpeg4v2", "MPEG-4 part 2 Microsoft variant version 2", "msmpeg4v3", "MPEG-4 part 2 Microsoft variant version 3", "wmv1", "Windows Media Video 7", "wmv2", "Windows Media Video 8", "h263p", "H.263+ / H.263-1998 / H.263 version 2", "h263i", "Intel H.263", "flv1", "FLV / Sorenson Spark / Sorenson H.263 (Flash Video)", "svq1", "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1", "svq3", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3", "dvvideo", "DV (Digital Video)", "huffyuv", "HuffYUV", "cyuv", "Creative YUV (CYUV)", "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "indeo3", "Intel Indeo 3", "On2 VP3", "theora", "Theora", "asv1", "ASUS V1", "asv2", "ASUS V2", "ffv1", "FFmpeg video codec #1", "4X Movie", "vcr1", "ATI VCR1", "cljr", "Cirrus Logic AccuPak", "mdec", "Sony PlayStation MDEC (Motion DECoder)", "id RoQ video", "interplayvideo", "Interplay MVE video", "xan_wc3", "Wing Commander III / Xan", "xan_wc4", "Wing Commander IV / Xxan", "rpza", "QuickTime video (RPZA)", "cinepak", "Cinepak", "ws_vqa", "Westwood Studios VQA (Vector Quantized Animation) video", "msrle", "Microsoft RLE", "msvideo1", "Microsoft Video 1", "idcin", "id Quake II CIN video", "8bps", "QuickTime 8BPS video", "QuickTime Graphics (SMC)", "flic", "Autodesk Animator Flic video", "truemotion1", "Duck TrueMotion 1.0", "vmdvideo", "Sierra VMD video", "mszh", "LCL (LossLess Codec Library) MSZH", "zlib", "LCL (LossLess Codec Library) ZLIB", "qtrle", "QuickTime Animation (RLE) video", "tscc", "TechSmith Screen Capture Codec", "ulti", "IBM UltiMotion", "qdraw", "Apple QuickDraw", "vixl", "Miro VideoXL", "qpeg", "Q-team QPEG", "PNG (Portable Network Graphics) image", "image/png", "PPM (Portable PixelMap) image", "PBM (Portable BitMap) image", "PGM (Portable GrayMap) image", "PGMYUV (Portable GrayMap YUV) image", "PAM (Portable AnyMap) image", "image/x-portable-pixmap", "ffvhuff", "Huffyuv FFmpeg variant", "rv30", "RealVideo 3.0", "rv40", "RealVideo 4.0", "SMPTE VC-1", "wmv3", "Windows Media Video 9", "loco", "LOCO", "wnv1", "Winnov WNV1", "aasc", "Autodesk RLE", "indeo2", "Intel Indeo 2", "fraps", "Fraps", "truemotion2", "Duck TrueMotion 2.0", "BMP (Windows and OS/2 bitmap)", "image/x-ms-bmp", "cscd", "CamStudio", "mmvideo", "American Laser Games MM Video", "zmbv", "Zip Motion Blocks Video", "AVS (Audio Video Standard) video", "smackvideo", "Smacker video", "NuppelVideo/RTJPEG", "kmvc", "Karl Morton's video codec", "flashsv", "Flash Screen Video v1", "cavs", "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)", "jpeg2000", "JPEG 2000", "image/jp2", "vmnc", "VMware Screen Codec / VMware Video", "On2 VP5", "On2 VP6", "vp6f", "On2 VP6 (Flash version)", "targa", "Truevision Targa image", "image/x-targa", "image/x-tga", "dsicinvideo", "Delphine Software International CIN video", "tiertexseqvideo", "Tiertex Limited SEQ video", "TIFF image", "image/tiff", "GIF (Graphics Interchange Format)", "image/gif", "Feeble Files/ScummVM DXA", "dnxhd", "VC3/DNxHD", "Nintendo Gamecube THP video", "SGI image", "Interplay C93", "bethsoftvid", "Bethesda VID video", "V.Flash PTX image", "Renderware TXD (TeXture Dictionary) image", "vp6a", "On2 VP6 (Flash version, with alpha channel)", "AMV Video", "Beam Software VB", "PC Paintbrush PCX image", "image/x-pcx", "sunrast", "Sun Rasterfile image", "indeo4", "Intel Indeo Video Interactive 4", "indeo5", "Intel Indeo Video Interactive 5", "mimic", "Mimic", "RL2 video", "escape124", "Escape 124", "dirac", "Dirac", "Brute Force & Ignorance", "Electronic Arts CMV video", "motionpixels", "Motion Pixels video", "Electronic Arts TGV video", "Electronic Arts TGQ video", "Electronic Arts TQI video", "aura", "Auravision AURA", "aura2", "Auravision Aura 2", "v210x", "Uncompressed 4:2:2 10-bit", "8088flex TMV", "v210", "DPX (Digital Picture Exchange) image", "Electronic Arts Madcow Video", "frwu", "Forward Uncompressed", "flashsv2", "Flash Screen Video v2", "cdgraphics", "CD Graphics video", "r210", "Uncompressed RGB 10-bit", "Deluxe Paint Animation", "binkvideo", "Bink video", "iff_ilbm", "IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN", "kgv1", "Kega Game Video", "Psygnosis YOP Video", "On2 VP8", "pictor", "Pictor/PC Paint", "ansi", "ASCII/ANSI art", "a64_multi", "Multicolor charset for Commodore 64", "a64_multi5", "Multicolor charset for Commodore 64, extended with 5th color (colram)", "r10k", "AJA Kona 10-bit RGB Codec", "mxpeg", "Mobotix MxPEG video", "lagarith", "Lagarith lossless", "prores", "Apple ProRes (iCodec Pro)", "Bitmap Brothers JV video", "Chronomaster DFA", "wmv3image", "Windows Media Video 9 Image", "vc1image", "Windows Media Video 9 Image v2", "utvideo", "Ut Video", "bmv_video", "Discworld II BMV video", "vble", "VBLE Lossless Codec", "dxtory", "Dxtory", "v410", "Uncompressed 4:4:4 10-bit", "XWD (X Window Dump) image", "image/x-xwindowdump", "cdxl", "Commodore CDXL video", "XBM (X BitMap) image", "image/x-xbitmap", "zerocodec", "ZeroCodec Lossless Video", "mss1", "MS Screen 1", "msa1", "MS ATC Screen", "tscc2", "TechSmith Screen Codec 2", "mts2", "MS Expression Encoder Screen", "cllc", "Canopus Lossless Codec", "mss2", "MS Windows Media Video V9 Screen", "Google VP9", "Apple Intermediate Codec", "escape130", "Escape 130", "Go2Meeting", "WebP", "image/webp", "hnm4video", "HNM 4 video", "H.265 / HEVC (High Efficiency Video Coding)", "Mirillis FIC", "alias_pix", "Alias/Wavefront PIX image", "brender_pix", "BRender PIX image", "paf_video", "Amazing Studio Packed Animation File Video", "OpenEXR image", "On2 VP7", "sanm", "LucasArts SANM/SMUSH video", "sgirle", "SGI RLE 8-bit", "mvc1", "Silicon Graphics Motion Video Compressor 1", "mvc2", "Silicon Graphics Motion Video Compressor 2", "Canopus HQX", "tdsc", "TDSC", "hq_hqa", "Canopus HQ/HQA", "Vidvox Hap", "DirectDraw Surface image decoder", "Resolume DXV", "screenpresso", "Screenpresso", "rscc", "innoHeim/Rsupport Screen Capture Codec", "y41p", "Uncompressed YUV 4:1:1 12-bit", "avrp", "Avid 1:1 10-bit RGB Packer", "012v", "avui", "Avid Meridien Uncompressed", "ayuv", "Uncompressed packed MS 4:4:4:4", "targa_y216", "Pinnacle TARGA CineWave YUV16", "v308", "Uncompressed packed 4:4:4", "v408", "Uncompressed packed QT 4:4:4:4", "yuv4", "Uncompressed packed 4:2:0", "avrn", "Avid AVI Codec", "cpia", "CPiA video format", "X-face image", "snow", "Snow", "smvjpeg", "Sigmatel Motion Video", "apng", "APNG (Animated Portable Network Graphics) image", "daala", "cfhd", "Cineform HD", "truemotion2rt", "Duck TrueMotion 2.0 Real Time", "m101", "Matrox Uncompressed SD", "magicyuv", "MagicYUV video", "sheervideo", "BitJazz SheerVideo", "YUY2 Lossless Codec", "Photoshop PSD file", "pixlet", "Apple Pixlet", "speedhq", "NewTek SpeedHQ", "fmvc", "FM Screen Capture Codec", "scpr", "ScreenPressor", "clearvideo", "Iterated Systems ClearVideo", "XPM (X PixMap) image", "image/x-xpixmap", "Alliance for Open Media AV1", "bitpacked", "Bitpacked", "mscc", "Mandsoft Screen Capture Codec", "srgc", "Screen Recorder Gold Codec", "Scalable Vector Graphics", "image/svg+xml", "Gremlin Digital Video", "fits", "FITS (Flexible Image Transport System)", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "PCM mu-law / G.711 mu-law", "pcm_alaw", "PCM A-law / G.711 A-law", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "PCM D-Cinema audio signed 24-bit", "pcm_zork", "PCM Zork", "pcm_s16le_planar", "PCM signed 16-bit little-endian planar", "pcm_dvd", "PCM signed 20|24-bit big-endian", "pcm_f32be", "PCM 32-bit floating point big-endian", "pcm_f32le", "PCM 32-bit floating point little-endian", "pcm_f64be", "PCM 64-bit floating point big-endian", "pcm_f64le", "PCM 64-bit floating point little-endian", "pcm_bluray", "PCM signed 16|20|24-bit big-endian for Blu-ray media", "pcm_lxf", "PCM signed 20-bit little-endian planar", "s302m", "SMPTE 302M", "pcm_s8_planar", "PCM signed 8-bit planar", "pcm_s24le_planar", "PCM signed 24-bit little-endian planar", "pcm_s32le_planar", "PCM signed 32-bit little-endian planar", "pcm_s16be_planar", "PCM signed 16-bit big-endian planar", "pcm_s64le", "PCM signed 64-bit little-endian", "pcm_s64be", "PCM signed 64-bit big-endian", "pcm_f16le", "PCM 16.8 floating point little-endian", "pcm_f24le", "PCM 24.0 floating point little-endian", "adpcm_ima_qt", "ADPCM IMA QuickTime", "adpcm_ima_wav", "ADPCM IMA WAV", "adpcm_ima_dk3", "ADPCM IMA Duck DK3", "adpcm_ima_dk4", "ADPCM IMA Duck DK4", "adpcm_ima_ws", "ADPCM IMA Westwood", "adpcm_ima_smjpeg", "ADPCM IMA Loki SDL MJPEG", "adpcm_ms", "ADPCM Microsoft", "adpcm_4xm", "ADPCM 4X Movie", "adpcm_xa", "ADPCM CDROM XA", "adpcm_adx", "SEGA CRI ADX ADPCM", "adpcm_ea", "ADPCM Electronic Arts", "adpcm_g726", "G.726 ADPCM", "adpcm_ct", "ADPCM Creative Technology", "adpcm_swf", "ADPCM Shockwave Flash", "adpcm_yamaha", "ADPCM Yamaha", "adpcm_sbpro_4", "ADPCM Sound Blaster Pro 4-bit", "adpcm_sbpro_3", "ADPCM Sound Blaster Pro 2.6-bit", "adpcm_sbpro_2", "ADPCM Sound Blaster Pro 2-bit", "adpcm_thp", "ADPCM Nintendo THP", "adpcm_ima_amv", "ADPCM IMA AMV", "adpcm_ea_r1", "ADPCM Electronic Arts R1", "adpcm_ea_r3", "ADPCM Electronic Arts R3", "adpcm_ea_r2", "ADPCM Electronic Arts R2", "adpcm_ima_ea_sead", "ADPCM IMA Electronic Arts SEAD", "adpcm_ima_ea_eacs", "ADPCM IMA Electronic Arts EACS", "adpcm_ea_xas", "ADPCM Electronic Arts XAS", "adpcm_ea_maxis_xa", "ADPCM Electronic Arts Maxis CDROM XA", "adpcm_ima_iss", "ADPCM IMA Funcom ISS", "adpcm_g722", "G.722 ADPCM", "adpcm_ima_apc", "ADPCM IMA CRYO APC", "adpcm_vima", "LucasArts VIMA audio", "adpcm_afc", "ADPCM Nintendo Gamecube AFC", "adpcm_ima_oki", "ADPCM IMA Dialogic OKI", "adpcm_dtk", "ADPCM Nintendo Gamecube DTK", "adpcm_ima_rad", "ADPCM IMA Radical", "adpcm_g726le", "G.726 ADPCM little-endian", "adpcm_thp_le", "ADPCM Nintendo THP (Little-Endian)", "adpcm_psx", "ADPCM Playstation", "adpcm_aica", "ADPCM Yamaha AICA", "adpcm_ima_dat4", "ADPCM IMA Eurocom DAT4", "adpcm_mtaf", "ADPCM MTAF", "amr_nb", "AMR-NB (Adaptive Multi-Rate NarrowBand)", "amr_wb", "AMR-WB (Adaptive Multi-Rate WideBand)", "ra_144", "RealAudio 1.0 (14.4K)", "ra_288", "RealAudio 2.0 (28.8K)", "roq_dpcm", "DPCM id RoQ", "interplay_dpcm", "DPCM Interplay", "xan_dpcm", "DPCM Xan", "sol_dpcm", "DPCM Sol", "sdx2_dpcm", "DPCM Squareroot-Delta-Exact", "gremlin_dpcm", "DPCM Gremlin", "MP2 (MPEG audio layer 2)", "MP3 (MPEG audio layer 3)", "ATSC A/52A (AC-3)", "DCA (DTS Coherent Acoustics)", "vorbis", "Vorbis", "dvaudio", "DV audio", "wmav1", "Windows Media Audio 1", "wmav2", "Windows Media Audio 2", "mace3", "MACE (Macintosh Audio Compression/Expansion) 3:1", "mace6", "MACE (Macintosh Audio Compression/Expansion) 6:1", "vmdaudio", "Sierra VMD audio", "FLAC (Free Lossless Audio Codec)", "mp3adu", "ADU (Application Data Unit) MP3 (MPEG audio layer 3)", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "Westwood Audio (SND1)", "qdm2", "QDesign Music Codec 2", "cook", "Cook / Cooker / Gecko (RealAudio G2)", "truespeech", "DSP Group TrueSpeech", "TTA (True Audio)", "smackaudio", "Smacker audio", "qcelp", "QCELP / PureVoice", "wavpack", "WavPack", "dsicinaudio", "Delphine Software International CIN audio", "IMC (Intel Music Coder)", "musepack7", "Musepack SV7", "MLP (Meridian Lossless Packing)", "gsm_ms", "GSM Microsoft variant", "atrac3", "ATRAC3 (Adaptive TRansform Acoustic Coding 3)", "Monkey's Audio", "nellymoser", "Nellymoser Asao", "musepack8", "Musepack SV8", "speex", "Speex", "wmavoice", "Windows Media Audio Voice", "wmapro", "Windows Media Audio 9 Professional", "wmalossless", "Windows Media Audio Lossless", "atrac3p", "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)", "ATSC A/52B (AC-3, E-AC-3)", "sipr", "RealAudio SIPR / ACELP.NET", "MP1 (MPEG audio layer 1)", "twinvq", "VQF TwinVQ", "TrueHD", "mp4als", "MPEG-4 Audio Lossless Coding (ALS)", "atrac1", "ATRAC1 (Adaptive TRansform Acoustic Coding)", "binkaudio_rdft", "Bink Audio (RDFT)", "binkaudio_dct", "Bink Audio (DCT)", "qdmc", "QDesign Music", "celt", "Constrained Energy Lapped Transform (CELT)", "g723_1", "G.723.1", "g729", "G.729", "8svx_exp", "8SVX exponential", "8svx_fib", "8SVX fibonacci", "bmv_audio", "Discworld II BMV audio", "ralf", "RealAudio Lossless", "IAC (Indeo Audio Coder)", "ilbc", "iLBC (Internet Low Bitrate Codec)", "opus", "Opus (Opus Interactive Audio Codec)", "comfortnoise", "RFC 3389 Comfort Noise", "TAK (Tom's lossless Audio Kompressor)", "metasound", "Voxware MetaSound", "paf_audio", "Amazing Studio Packed Animation File Audio", "On2 Audio for Video Codec", "dss_sp", "Digital Speech Standard - Standard Play mode (DSS SP)", "codec2", "codec2 (very low bitrate speech codec)", "wavesynth", "Wave synthesis pseudo-codec", "sonic", "Sonic", "sonicls", "Sonic lossless", "evrc", "EVRC (Enhanced Variable Rate Codec)", "SMV (Selectable Mode Vocoder)", "dsd_lsbf", "DSD (Direct Stream Digital), least significant bit first", "dsd_msbf", "DSD (Direct Stream Digital), most significant bit first", "dsd_lsbf_planar", "DSD (Direct Stream Digital), least significant bit first, planar", "dsd_msbf_planar", "DSD (Direct Stream Digital), most significant bit first, planar", "4GV (Fourth Generation Vocoder)", "interplayacm", "Interplay ACM", "xma1", "Xbox Media Audio 1", "xma2", "Xbox Media Audio 2", "DST (Direct Stream Transfer)", "atrac3al", "ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)", "atrac3pal", "ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless)", "dolby_e", "Dolby E", "aptX (Audio Processing Technology for Bluetooth)", "aptx_hd", "aptX HD (Audio Processing Technology for Bluetooth)", "SBC (low-complexity subband codec)", "dvd_subtitle", "DVD subtitles", "dvb_subtitle", "DVB subtitles", "text", "raw UTF-8 text", "xsub", "XSUB", "SSA (SubStation Alpha) subtitle", "mov_text", "MOV text", "hdmv_pgs_subtitle", "HDMV Presentation Graphic Stream subtitles", "dvb_teletext", "DVB teletext", "SubRip subtitle with embedded timing", "microdvd", "MicroDVD subtitle", "eia_608", "EIA-608 closed captions", "jacosub", "JACOsub subtitle", "sami", "SAMI subtitle", "realtext", "RealText subtitle", "Spruce subtitle format", "subviewer1", "SubViewer v1 subtitle", "subviewer", "SubViewer subtitle", "subrip", "SubRip subtitle", "webvtt", "WebVTT subtitle", "mpl2", "MPL2 subtitle", "vplayer", "VPlayer subtitle", "PJS (Phoenix Japanimation Society) subtitle", "ASS (Advanced SSA) subtitle", "hdmv_text_subtitle", "HDMV Text subtitle", "TrueType font", "application/x-truetype-font", "application/x-font", "scte_35", "SCTE 35 Message Queue", "bintext", "Binary text", "xbin", "eXtended BINary text", "iCEDraw text", "OpenType font", "application/vnd.ms-opentype", "SMPTE 336M Key-Length-Value (KLV) metadata", "dvd_nav_packet", "DVD Nav packet", "timed_id3", "timed ID3 metadata", "bin_data", "binary data", "application/octet-stream", "wrapped_avframe", "AVFrame to AVPacket passthrough", "invalid packet: NULL data, size != 0\n", "Invalid media type for subtitles\n", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "A hardware frames or device context is required for hardware accelerated decoding.\n", "Device type %s expected for hardware decoding, but got %s.\n", "n >= 1", "src/libavcodec/decode.c", "Invalid format returned by get_format() callback.\n", "Format %s chosen by get_format().\n", "Invalid return from get_format(): %s not in possible list.\n", "Invalid setup for format %s: does not match the format of the provided frames context.\n", "Invalid setup for format %s: does not match the type of the provided device context.\n", "Invalid setup for format %s: missing configuration.\n", "Format %s requires hwaccel initialisation.\n", "Format %s not usable, retrying get_format() without it.\n", "ignoring invalid SAR: %u/%u\n", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "get_buffer() failed\n", "reget_buffer() failed\n", "Error pre-processing a packet before decoding\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "Invalid channel count", "Invalid sample rate", "PARAM_CHANGE side data too small.\n", "Error applying parameter changes.\n", "A non-existing bitstream filter %s requested by a decoder. This is a bug, please report it.\n", "!frame->buf[0]", "(frame->private_ref && frame->private_ref->size == sizeof(FrameDecodeData)) || !(avctx->codec->capabilities & (1 << 1))", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "Multiple frames in a packet.\n", "Too many errors when draining, this is a bug. Stop draining and force EOF.\n", "frame->buf[0]", "Invalid cropping information set by a decoder: %zu/%zu/%zu/%zu (frame size %dx%d). This is a bug, please report it\n", "avci->compat_decode_consumed == 0", "Got unexpected packet after EOF\n", "Got unexpected packet size after a partial decode\n", "The deprecated avcodec_decode_* API cannot return all the frames for this decoder. Some frames will be dropped. Update your code to the new decoding API to fix this.\n", "requesting subtitles recoding without iconv", "Dialogue: ", "Dialogue: %ld,", "%s\r\n", "9:59:59.99,", "%d:%02d:%02d.%02d,", "Ignoring experimental hwaccel: %s\n", "Failed setup for format %s: hwaccel initialisation returned error.\n", "pic->data[*]!=NULL in avcodec_default_get_buffer\n", "Unable to get pixel format descriptor for format %s\n", "default_get_buffer called on pic %p\n", "default_get_buffer called on frame %p", "video_get_buffer: image parameters invalid\n", "pic->data[*]!=NULL in get_buffer_internal\n", "frame->data[i]", "Buffer returned by get_buffer2() did not zero unused plane pointers\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "Stream is old and may not work\n", "Stream may have unhandled features\n", "Unsupported picture coding mode %d", "Unknown chroma format %d\n", "Dimensions must be an integer multiple of the chroma subsampling\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %ld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "src/libavcodec/encode.c", "User packet is too small (%d < %ld)\n", "Failed to allocate packet of size %ld\n", "This encoder requires using the avcodec_send_frame() API.\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "avctx->codec->encode2", "Provided packet is too small, needs to be %d\n", "AVFrame.format is not set\n", "AVFrame.width or height is not set\n", "ret <= 0", "start_display_time must be 0.\n", "!avctx->internal->buffer_pkt->data || avctx->internal->buffer_pkt->buf", "internal error, slice end before start\n", "ignoring last missing slice\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "src/libavcodec/error_resilience.c", "next_blocklist_length <= mb_height * mb_width", "s->quarter_sample", "guess_dc() is out of memory\n", "invalid sync code\n", "invalid channel mode: %d\n", "invalid sample size code (%d)\n", "broken stream, invalid padding\n", "sample/frame number invalid; utf8 fscked\n", "reserved blocksize code: 0\n", "illegal sample rate code %d\n", "header crc mismatch\n", "extradata NULL or too small.\n", "extradata contains %d bytes too many.\n", "extradata too small.\n", "invalid max blocksize: %d\n", "invalid bps: %d\n", "couldn't allocate fifo_buf\n", "dropping low score %i frame header from offset %i to %i\n", "couldn't reallocate buffer of size %td\n", "find_new_headers couldn't allocate FLAC header\n", "Junk frame till offset %i\n", "sample/frame number mismatch in adjacent frames\n", "crc check failed from offset %i (frame %ld) to %i (frame %ld)\n", "sample rate change detected in adjacent frames\n", "bits per sample change detected in adjacent frames\n", "blocking strategy change detected in adjacent frames\n", "number of channels change detected in adjacent frames\n", "couldn't allocate FLACHeaderMarker\n", "couldn't allocate link_penalty\n", "couldn't reallocate wrap buffer of size %d", "FLAC decoder", "use_buggy_lpc", "emulate old buggy lavc behavior", "s->flac_stream_info.max_blocksize", "src/libavcodec/flacdec.c", "skipping flac header packet 1\n", "skipping vorbis comment\n", "invalid header\n", "decode_frame() failed\n", "CRC error at PTS %ld\n", "overread: %d\n", "underread: %d orig size: %d\n", "invalid frame header\n", "bps not found in STREAMINFO or frame header\n", "switching bps mid-stream is not supported\n", "blocksize %d > %d\n", "sample rate not found in STREAMINFO or frame header\n", "  Max Blocksize: %d\n", "  Max Framesize: %d\n", "  Samplerate: %d\n", "  Channels: %d\n", "  Bits: %d\n", "invalid subframe padding\n", "Invalid number of wasted bits > available bits (%d) - left=%d\n", "Decorrelated bit depth > 32", "invalid coding type\n", "illegal pred order %d\n", "illegal residual coding method %d\n", "invalid rice order: %i blocksize %i\n", "invalid predictor order: %i > %i\n", "invalid residual\n", "invalid coeff precision\n", "qlevel %d not supported, maybe buggy stream\n", "Unsupported codec %d\n", "this codec does not support truncated bitstreams\n", "Discarding excessive bitstream in packed xvid\n", "Reverting picture dimensions change due to header decoding failure\n", "header damaged\n", "format change not supported\n", "Slice mismatch at MB: %d\n", "Error at MB: %d\n", "discarding %d junk bits at end, next would be %X\n", "overreading %d bits\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "Internal error, IDCT permutation not set\n", "desc", "src/libavcodec/imgconvert.c", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", " UMV", " LONG", " AIC", " AIV", " LOOP", "cbpc damaged at %d %d\n", "cbpy damaged at %d %d\n", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "Header looks like RTP instead of H.263\n", "Bad picture start code\n", "in PTYPE", "Bad H.263 id\n", "H.263 SAC not supported\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "Bad UFEP type (%d)\n", "in dimensions", "zero framerate\n", "rectangular slices not supported\n", "unordered slices not supported\n", "SEPB1", "SEPB2", " %5d", "before MBA", "after MBA", "after SQUANT", "Huge DMV", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d i:%d\n", "Marker bit missing at %d of %d %s\n", "n <= 1024", "src/libavcodec/kbdwin.c", "internal error in cmp function selection\n", "max_length > 0", "src/libavcodec/mjpegenc_huffman.c", "nval <= max_nval", "static_size <= (sizeof(table) / sizeof((table)[0]))", "src/libavcodec/mpeg12.c", "invalid dc code at\n", "Failed to parse extradata\n", "marker does not match f_code\n", "illegal mb_num in video packet (%d %d) \n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "untested\n", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "slice below monitor ...\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "Reserved", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "reserved", "System start", " at %d\n", "Ignoring multiple VOL headers\n", "Mixes studio and non studio profile\n", "Missing VOL header\n", "Video uses a non-standard and wasteful way to store B-frames ('packed B-frames'). Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n", "before sprite_trajectory", "after sprite_trajectory", "Too large sprite shift, delta or offset", "Overflow on sprite points", "after new_pred", "mcbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "illegal dc vlc\n", "dc marker bit missing\n", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "cbpy corrupted at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", "illegal chroma format\n", "after first_half_bitrate", "after latter_half_bitrate", "after first_half_vbv_buffer_size", "after first_half_vbv_occupancy", "after latter_half_vbv_occupancy", "only rectangular vol supported\n", "Gray shape not supported\n", "before time_increment_resolution", "framerate==0\n", "before fixed_vop_rate", "before width", "before height", "after height", "MPEG-4 OBMC not supported (very likely buggy encoder)\n", "Static Sprites not supported\n", "after sprite_width", "after sprite_height", "after sprite_left", "after sprite_top", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "insufficient data for custom matrix\n", "VOL Header truncated\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "new pred not supported\n", "reduced resolution VOP not supported\n", "scalability not supported\n", "tb %d/%d, tincrbits:%d, qp_prec:%d, ps:%d, low_delay:%d  %s%s%s%s\n", "scalability ", "qpel ", "partition ", "rvlc ", "MPEG-4 Studio profile bit-depth %u", "before video_object_layer_width", "before video_object_layer_height", "after video_object_layer_height", "after first_half_bit_rate", "after latter_half_bit_rate", "DivX%dBuild%d%c", "DivX%db%d%c", "FFmpe%*[^b]b%d", "FFmpeg v%d.%d.%d / libavcodec build: %d", "Lavc%d.%d.%d", "Unknown Lavc version string encountered, %d.%d.%d; clamping sub-version values to 8-bits.\n", "ffmpeg", "XviD%d", "GOP header invalid\n", "in gop_header", "VO type %u", "DPCM block start", "DPCM encoded block", "illegal dct_dc_size vlc\n", "dct_dc_size > 8", "illegal ac coefficient group vlc\n", "after Time_code[63..48]", "after Time_code[47..32]", "after Time_code[31..16]", "after Time_code[15..0]", "low_delay flag set incorrectly, clearing it\n", "before time_increment", "time_increment_bits %d is invalid in relation to the current bitstream, this is likely caused by a missing VOL header\n", "time_increment_bits set to %d bits, based on bitstream analysis\n", "before vop_coded", "vop not coded\n", "after width", "after hor_spat_ref", "Header truncated\n", "sprite_brightness_change not supported\n", "static sprite not supported\n", "Error, header damaged or not MPEG-4 header (qscale=0)\n", "Error, header damaged or not MPEG-4 header (f_code=0)\n", "Error, header damaged or not MPEG4 header (b_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d time:%ld tincr:%d\n", " VOLC", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "texture corrupted at %d %d %d\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "reverse esc missing\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "ac-tex damaged at %d %d\n", "mcbpc damaged at %d %d\n", "P cbpy damaged at %d %d\n", "illegal MB_type\n", "MPEG4 Video Decoder", "quarter_sample", "1/4 subpel MC", "divx_packed", "divx style packed b frames", "Interlaced error concealment is not fully implemented\n", "MP3ADU full parser", "src/libavcodec/mpegaudiodec_template.c", "discarding ID3 tag\n", "Header missing\n", "incorrect frame size - multiple frames in buffer?\n", "Error while decoding MPEG audio frame.\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "overread, skip %d enddists: %d %d\n", "bits_left=%d\n", "Packet is too small\n", "Invalid frame header\n", "Codec extradata missing or too short.\n", "Invalid channel config number.\n", "Frame size smaller than header size\n", "Bad header, discard block\n", "frame channel count exceeds codec channel count\n", "failed to decode channel %d\n", "failed to decode all channels\n", "mp1float", "mp2float", "mp3float", "mp3adufloat", "mp3on4float", "Image too small, temporary buffers cannot function\n", "pic->f->data[0]", "src/libavcodec/mpegpicture.c", "!pic->f->buf[0]", "Error allocating a picture.\n", "!dst->f->buf[0]", "src->f->buf[0]", "get_buffer() failed (%d %p)\n", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (stride changed: linesize=%d/%d uvlinesize=%d/%d)\n", "get_buffer() failed (uv stride mismatch)\n", "get_buffer() failed to allocate context scratch buffers.\n", "Internal error, picture buffer overflow\n", "Adding %d MVs info to frame %d\n", "New frame, type: %c\n", "failed to allocate context scratch buffers.\n", "s != s1", "src/libavcodec/mpegvideo.c", "!s->picture || s->picture != s1->picture", "Failed to allocate context scratch buffers.\n", "Context scratch buffers could not be allocated due to unknown size.\n", "decoding to AV_PIX_FMT_NONE is not supported.\n", "too many threads/slices (%d), reducing to %d\n", "Attempt to start a frame outside SETUP state\n", "no frame buffer available\n", "allocating dummy last picture for B frame\n", "warning: first frame is no keyframe\n", "s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f->buf[0])", "ref->size >= offset + s->mb_stride * ((f->height+15)/16)", "DCT coeffs of MB at %dx%d:\n", "MPEG motion vector out of boundary (%d %d)\n", "Failed to set dimensions\n", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "src/libavcodec/options.c", "AVCodecContext", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "qpel", "use 1/4-pel motion compensation", "loop", "use loop filter", "qscale", "use fixed qscale", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "gray", "only decode/encode grayscale", "psnr", "error[?] variables will be set during encoding", "truncated", "Input bitstream might be randomly truncated", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "fast", "allow non-spec-compliant speedup tricks", "flags2", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "chunks", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "export_mvs", "export motion vectors through frame side data", "skip_manual", "do not skip samples and export skip information as frame side data", "ass_ro_flush_noop", "do not reset ASS ReadOrder field on flush", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "delay", "qcomp", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "qblur", "video quantizer scale blur (VBR)", "qmin", "minimum video quantizer scale (VBR)", "qmax", "maximum video quantizer scale (VBR)", "qdiff", "maximum difference between the quantizer scales (VBR)", "set maximum number of B-frames between non-B-frames", "b_qfactor", "QP factor between P- and B-frames", "b_strategy", "strategy to choose between I/P/B-frames", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "work around not autodetected encoder bugs", "autodetect", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "iedge", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "mpeg_quant", "use MPEG quantizers instead of H.263", "rc_override_count", "maxrate", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minrate", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "bufsize", "set ratecontrol buffer size (in bits)", "i_qfactor", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "fast integer", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "deblock", "use strong deblock filter for damaged MBs", "favor_inter", "favor predicting from the previous frame", "bits_per_coded_sample", "pred", "prediction method", "left", "plane", "median", "aspect", "debug", "picture info", "rate control", "mb_type", "macroblock (MB) type", "per-block quantization parameter (QP)", "dct_coeff", "green_metadata", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "bugs", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "mbcmp", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "dia_size", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "zero", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "dctmax", "chroma", "msad", "sum of absolute differences, median predicted", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "subq", "sub-pel motion estimation quality", "me_range", "limit motion vectors range (1023 for DivX player)", "global_quality", "coder", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "context", "context model", "slice_flags", "macroblock decision algorithm (high quality mode)", "use mbcmp", "bits", "use fewest bits", "use best rate distortion", "sc_threshold", "scene change threshold", "noise reduction", "rc_init_occupancy", "number of bits which should be loaded into the rc buffer before decoding starts", "set the number of threads", "autodetect a suitable number of threads to use", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "profile", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "main10", "msbc", "lowres", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "none", "discard no frame", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "nointra", "discard all frames except I frames", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscale frames for dynamic B-frame decision", "keyint_min", "minimum interval between IDR-frames", "refs", "reference frames to consider for motion compensation", "chromaoffset", "chroma QP offset from luma", "trellis", "rate-distortion optimal quantization", "mv0_threshold", "b_sensitivity", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color primaries", "color_primaries_type", "bt709", "BT.709", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "film", "Film", "bt2020", "BT.2020", "smpte428", "SMPTE 428-1", "smpte428_1", "smpte431", "SMPTE 431-2", "smpte432", "SMPTE 422-1", "jedec-p22", "JEDEC P22", "unspecified", "color_trc", "color transfer characteristics", "color_trc_type", "gamma22", "gamma28", "Linear", "log100", "log316", "Log square root", "iec61966-2-4", "IEC 61966-2-4", "bt1361e", "BT.1361", "iec61966-2-1", "IEC 61966-2-1", "bt2020-10", "BT.2020 - 10 bit", "bt2020-12", "BT.2020 - 12 bit", "smpte2084", "SMPTE 2084", "arib-std-b67", "ARIB STD-B67", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "colorspace", "color space", "colorspace_type", "ycgco", "YCGCO", "bt2020nc", "BT.2020 NCL", "bt2020c", "BT.2020 CL", "smpte2085", "SMPTE 2085", "ycocg", "bt2020_ncl", "bt2020_cl", "color_range", "color range", "color_range_type", "MPEG (219*2^(n-8))", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "bottom", "Bottom", "log_level_offset", "set the log level offset", "slices", "set the number of slices, used in parallelized encoding", "select multithreading type", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "sub_text_format", "set decoded text subtitle format", "ass_with_timings", "refcounted_frames", "side_data_only_packets", "apply_cropping", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "pixel_format", "set pixel format", "max_pixels", "Maximum number of pixels", "hwaccel_flags", "ignore_level", "ignore level even if the codec level used is unknown or higher than the maximum supported level reported by the hardware driver", "allow_high_depth", "allow to output YUV pixel formats with a different chroma sampling than 4:2:0 and/or other than 8 bits per component", "allow_profile_mismatch", "attempt to decode anyway if HW accelerated decoder's supported profiles do not exactly match the stream", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVSubtitleRect", "type", "forced", "Multichannel configuration without extradata.\n", "Invalid extradata size: %d\n", "Extradata version %d", "Zero channel count specified in the extradata\n", "Channel mapping 0 is only specified for up to 2 channels\n", "Invalid stream/stereo stream count: %d/%d\n", "Channel mapping 1 is only specified for up to 8 channels\n", "Channel mapping 2 is only specified for channel counts which can be written as (n + 1)^2 or (n + 1)^2 + 2 for nonnegative integer n\n", "Mapping type %d", "Invalid channel map for output channel %d: %d\n", "Invalid number of coded channels: %d\n", "Invalid start/end band: %d %d\n", "Invalid CELT frame size: %d\n", "Invalid number of output channels: %d\n", "Error parsing Ogg TS header.\n", "Error parsing Ogg extradata.\n", "Error parsing Opus packet header.\n", "rc->rng_cur < rc->rb.position", "src/libavcodec/opus_rc.c", "Invalid parameters passed to the SILK decoder.\n", "LBRR frames", "Opus Decoder", "apply_phase_inv", "Apply intensity stereo phase inversion", "in_sample_fmt", "out_sample_fmt", "in_channel_layout", "out_channel_layout", "out_sample_rate", "filter_size", "Error parsing the packet header.\n", "Mismatching coded sample count in substream %d.\n", "in_sample_rate", "Error flushing the resampler.\n", "Error decoding an Opus frame.\n", "Wrong number of flushed samples: %d\n", "Wrong number of CELT delay samples.\n", "Error decoding a SILK frame.\n", "Error resampling SILK data.\n", "Invalid redundancy frame size.\n", "Spurious CELT delay samples present.\n", "Error opening the resampler.\n", "Error feeding initial silence to the resampler.\n", "Error decoding the redundancy frame.\n", "index > -0x20000000", "src/libavcodec/parser.c", "Failed to reallocate parser buffer to %d\n", "next >= 0 || pc->buffer", "PCM packet too small\n", "unsupported sample depth (%d)\n", "reserved sample rate (%d)\n", "reserved channel configuration (%d)\n", "PCM signed 16|20|24-bit big-endian for DVD media", "block_size has changed %d != %d\n", "pcm_dvd_parse_header: header = %02x%02x%02x\n", "PCM DVD unsupported sample depth %i\n", "PCM channels out of bounds\n", "Invalid sample_size\n", "Invalid number of channels\n", "codec ids mismatch\n", "Invalid PCM packet, data has size %d but at least a size of %d was expected\n", "HE-AAC", "HE-AACv2", "Main", "DTS-ES", "DTS 96/24", "DTS-HD HRA", "DTS-HD MA", "DTS Express", "DNXHD", "DNXHR LB", "DNXHR SQ", "DNXHR HQ", "DNXHR HQX", "DNXHR 444", "Baseline", "Constrained Baseline", "Extended", "High", "High 10", "High 10 Intra", "High 4:2:2", "High 4:2:2 Intra", "High 4:4:4", "High 4:4:4 Predictive", "High 4:4:4 Intra", "CAVLC 4:4:4", "Multiview High", "Stereo High", "Main 10", "Main Still Picture", "Rext", "JPEG 2000 codestream restriction 0", "JPEG 2000 codestream restriction 1", "JPEG 2000 no codestream restrictions", "JPEG 2000 digital cinema 2K", "JPEG 2000 digital cinema 4K", "4:2:2", "Spatially Scalable", "SNR Scalable", "Simple", "Simple Profile", "Simple Scalable Profile", "Core Profile", "Main Profile", "N-bit Profile", "Scalable Texture Profile", "Simple Face Animation Profile", "Basic Animated Texture Profile", "Hybrid Profile", "Advanced Real Time Simple Profile", "Code Scalable Profile", "Advanced Coding Profile", "Advanced Core Profile", "Advanced Scalable Texture Profile", "Simple Studio Profile", "Advanced Simple Profile", "Complex", "Advanced", "Profile 0", "Profile 1", "Profile 2", "Profile 3", "Professional", "mSBC", "src/libavcodec/rl.c", "Overflow in sbr_hf_apply_noise, shift=%d\n", "ignoring invalid SAR: %d/%d\n", "desc->flags & (1 << 4)", "src/libavcodec/utils.c", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist '%s'\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "decoder", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "Warning: not compiled with thread support, using thread emulation\n", "The maximum value for lowres supported by the decoder is %d\n", "The encoder timebase is not set.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout not specified\n", "Specified channel layout '%s' is not supported\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "Specified bit depth %d not possible with the specified pixel formats depth %d\n", "Bitrate %ld is extremely low, maybe you mean %ldk\n", "ticks_per_frame %d too large for the timebase %d/%d.", "Mismatching AVCodecContext.pix_fmt and AVHWFramesContext.format\n", "Mismatching AVCodecContext.sw_pix_fmt (%s) and AVHWFramesContext.sw_format (%s)\n", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Codec 0x%x is not in the full list.\n", "unknown_codec", "[%d]", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s, ", "%s/%s/%s, ", "top first", "bottom first", "top coded first (swapped)", "bottom coded first (swapped)", "%dx%d", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", delay %d", ", padding %d", ", %dx%d", ", pass 1", ", pass 2", ", %ld kb/s", ", max. %ld kb/s", "libavcodec license: LGPL version 2.1 or later", "!dst->progress", "p <= end", "val || !min_size", "src/libavutil/mem_internal.h", "%s: driver decode error\n", "%s driver encode error\n", "%s stop_encode\n", "%s stop_decode\n", "V4L2 failed to unmap the %s buffers\n", "type %i not supported\n", "%s VIDIOC_G_FMT failed\n", "%s malloc enomem\n", "%s buffer initialization (%s)\n", "%s: %s %02d buffers initialized: %04ux%04u, sizeimage %08u, bytesperline %08u\n", "%s POLLERR\n", "%s VIDIOC_DQBUF, errno (%s)\n", "%s VIDIOC_DQEVENT\n", "%s VIDIOC_G_FMT\n", "v4l2_m2m_codec_full_reinit\n", "update avcodec height and width\n", "v4l2_m2m_codec_reinit\n", "%s changed (%dx%d) -> (%dx%d)\n", "%s unmap plane (%s))\n", "reinit context\n", "capture VIDIOC_STREAMOFF\n", "waiting for user to release AVBufferRefs\n", "query the new capture format\n", "setting capture format\n", "%s full reinit\n", "output VIDIOC_STREAMOFF\n", "v4l2 output format not supported\n", "v4l2 capture format not supported\n", "can't set v4l2 output format\n", "can't to set v4l2 capture format\n", "no v4l2 output context's buffers\n", "no v4l2 capture context's buffers\n", "VIDIOC_STREAMOFF %s\n", "/dev", "video", "/dev/%s", "probing device %s\n", "Could not find a valid device\n", "Using device %s\n", "failure closing %s (%s)\n", "capture", "output ", "driver '%s' on card '%s'\n", "error closing %s (%s)\n", "Duplicate value found in floor 1 X coordinates\n", "Invalid packet\n", "Invalid mode in packet\n", "Extradata corrupt.\n", "Vorbis parser", "Id header is too short\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Setup header is too short\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "Invalid Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "Unsupported mode count: %d\n", "Extradata missing.\n", "First header is not the id header.\n", "Id header corrupt.\n", "Third header is not the setup header.\n", "Setup header corrupt.\n", " Vorbis id header packet corrupt (no vorbis signature). \n", "Invalid samplerate\n", " Vorbis id header packet corrupt (illegal blocksize). \n", " Vorbis id header packet corrupt (framing flag not set). \n", " Vorbis setup header packet corrupt (no vorbis signature). \n", " Vorbis setup header packet corrupt (codebooks). \n", " Vorbis setup header packet corrupt (time domain transforms). \n", " Vorbis setup header packet corrupt (floors). \n", " Vorbis setup header packet corrupt (residues). \n", " Vorbis setup header packet corrupt (mappings). \n", " Vorbis setup header packet corrupt (modes). \n", " Vorbis setup header packet corrupt (framing flag). \n", " %u. Codebook setup data corrupt.\n", " %u. Codebook's dimension is invalid (%d).\n", " %u. Codebook has too many entries (%u).\n", " More codelengths than codes in codebook. \n", "Bug in codevector vector building code. \n", "Codebook lookup type not supported. \n", " Invalid code lengths while generating vlcs. \n", " Error generating vlc tables. \n", "Vorbis time domain transform data nonzero. \n", "floor_setup->data.t1.class_masterbook[j]", "src/libavcodec/vorbisdec.c", "A rangebits value of 0 is not compliant with the Vorbis I specification.\n", "Floor value is too large for blocksize: %u (%u)\n", "Floor 0 order is 0.\n", "Floor 0 rate is 0.\n", "Floor 0 bark map size is 0.\n", "book_idx", "Invalid floor type!\n", "floor0 dec: booknumber too high!\n", "partition out of bounds: type, begin, end, size, blocksize: %u, %u, %u, %u, %u\n", "res_setup->classbook", "res_setup->books[j][k]", "Other mappings than type 0 are not compliant with the Vorbis I specification. \n", "Square polar channel mapping with less than two channels is not compliant with the Vorbis I specification.\n", "mapping_setup->magnitude[j]", "mapping_setup->angle[j]", "%u. mapping setup data invalid.\n", "mapping_setup->submap_floor[j]", "mapping_setup->submap_residue[j]", "mode_setup->mapping", "Ignoring comment header\n", "Data packet before valid headers\n", "Not a Vorbis I audio packet.\n", "mode_number", "Invalid codebook in vorbis_floor_decode.\n", "Too many channels in vorbis_floor_decode.\n", " Invalid residue type while residue decode?! \n", "Insufficient output buffer\n", "Invalid vlc code decoding %d channel.", "vr->classifications > 1", "byte_offset_bits %d is too large\n", "broken escape sequence\n", "overflow (%d > %d) in spectral RLE, ignoring\n", "block_align is not set\n", "Disabling use_variable_block_len, if this fails contact the ffmpeg developers and send us the file\n", "Input packet size too small (%d < %d)\n", "nb_frames is %d bits left %d\n", "Invalid last frame bit offset %d > buf size %d (%d)\n", "len %d invalid\n", "prev_block_len_bits %d out of range\n", "block_len_bits %d out of range\n", "next_block_len_bits %d out of range\n", "block_len_bits not initialized to a valid value\n", "frame_len overflow\n", "total_gain overread\n", "hgain vlc invalid\n", "Exponent vlc invalid\n", "Exponent out of range: %d\n", "Unknown bit-depth: %u\n", "Unsupported extradata size", "s->samples_per_frame <= (1 << 14)", "src/libavcodec/wmalosslessdec.c", "invalid number of subframes %u\n", "invalid number of channels %d\n", "More than %d channels", "Bitstream splicing", "Packet loss detected! seq %x vs %x\n", "Overread %d\n", "frame[%u] would have to skip %i bits\n", "Found empty subframe\n", "broken frame: num subframes > 31\n", "broken frame: channel len(%u) > samples_per_frame(%u)\n", "broken frame: subframe_len %i\n", "Arithmetic coding", "Waiting for seekable tile\n", "Expect wrong output since inverse LPC filter", "Invalid number of padding bits in raw PCM tile\n", "broken subframe\n", "Order[%d][%d] %d > max (%d), not supported\n", "CDLMS of order %d", "Too small input buffer", "extradata:\n", "[%x] ", "bits per sample is %d", "Unknown extradata size", "Large block align", "14-bit block sizes", "invalid number of subframes %d\n", "min_samples_per_subframe of %d too small\n", "invalid sample rate\n", "invalid number of channels per XMA stream %d\n", "num_sfb invalid\n", "v < 29", "src/libavcodec/wmaprodec.c", " %s = %d\n", "ed sample bit depth", " %s = %x\n", "ed decode flags", "samples per frame", "log2 frame size", "max num subframes", "len prefix", "num channels", "Input packet too small (%d < %d)\n", "len <= put_bits_left(&s->pb)", "broken frame: channel len > samples_per_frame\n", "invalid number of fill bits\n", "Reserved bit", "s->subframe_len <= (1 << 13)", "num_vec_coeffs %d is too large\n", "num_vec_coeffs + offset <= (sizeof(s->channel[c].out) / sizeof((s->channel[c].out)[0]))", "negative quant step\n", "Channel transform bit", "Unknown channel transform type", "Coupled channels > 6", "invalid scale factor coding\n", "Incorrect XMA2 extradata size\n", "Incorrect XMA1 extradata size\n", "Incorrect XMA config\n", "More than %d channels in %d streams", "Invalid extradata size %d (should be 46)\n", "Invalid block alignment %d.\n", "Invalid denoise filter strength %d (max=11)\n", "Invalid VBM tree; broken extradata?\n", "Invalid pitch range; broken extradata?\n", "Unsupported samplerate %d (min=%d, max=%d)\n", "Invalid delta pitch hrange; broken extradata?\n", "WMAPro-in-WMAVoice", "Superframe encodes > %d samples (%d), not allowed\n", "Invalid frame type VLC code, skipping\n", "ctx->channels == out->ch_count", "src/libswresample/audioconvert.c", "s->dither.method < SWR_DITHER_NB", "src/libswresample/dither.c", "Requested noise shaping dither not available at this sampling rate, using triangular hp dither\n", "SWResampler", "set input channel count", "in_channel_count", "set output channel count", "out_channel_count", "set used channel count", "used_channel_count", "set input sample rate", "set output sample rate", "set input sample format", "set output sample format", "set internal sample format", "internal_sample_fmt", "set input channel layout", "set output channel layout", "clev", "set center mix level", "center_mix_level", "slev", "set surround mix level", "surround_mix_level", "set surround mix Level", "lfe_mix_level", "set LFE mix level", "rmvol", "set rematrix volume", "rematrix_volume", "rematrix_maxval", "set rematrix maxval", "set flags", "swr_flags", "force resampling", "dither_scale", "set dither scale", "dither_method", "set dither method", "rectangular", "select rectangular dither", "triangular", "select triangular dither", "triangular_hp", "select triangular dither with high pass", "lipshitz", "select Lipshitz noise shaping dither", "shibata", "select Shibata noise shaping dither", "low_shibata", "select low Shibata noise shaping dither", "high_shibata", "select high Shibata noise shaping dither", "f_weighted", "select f-weighted noise shaping dither", "modified_e_weighted", "select modified-e-weighted noise shaping dither", "improved_e_weighted", "select improved-e-weighted noise shaping dither", "set swr resampling filter size", "phase_shift", "set swr resampling phase shift", "linear_interp", "enable linear interpolation", "exact_rational", "enable exact rational", "set cutoff frequency ratio", "resample_cutoff", "resampler", "set resampling Engine", "select SW Resampler", "soxr", "select SoX Resampler", "set soxr resampling precision (in bits)", "cheby", "enable soxr Chebyshev passband & higher-precision irrational ratio approximation", "min_comp", "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied", "min_hard_comp", "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.", "comp_duration", "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.", "max_soft_comp", "set maximum factor by which data is stretched/squeezed to make it match the timestamps.", "async", "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)", "first_pts", "Assume the first pts should be this value (in samples).", "matrix_encoding", "set matrixed stereo encoding", "select none", "dolby", "select Dolby", "dplii", "select Dolby Pro Logic II", "filter_type", "select swr filter type", "cubic", "select cubic", "blackman_nuttall", "select Blackman Nuttall windowed sinc", "kaiser", "select Kaiser windowed sinc", "kaiser_beta", "set swr Kaiser window beta", "output_sample_bits", "set swr number of output sample bits", "Input channel layout '%s' is not supported\n", "Output channel layout '%s' is not supported\n", "src/libswresample/rematrix.c", "Matrix coefficients:\n", "%s: ", "%s:%f ", "!s->out_ch_layout || out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout)", "!s-> in_ch_layout || in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout)", "Treating %s as mono\n", "Unsupported sample format\n", "src/libswresample/resample.c", "Filter length too large\n", "tap_count == 1 || tap_count % 2 == 0", "a->planar", "!c->frac && !c->dst_incr_mod", "libswresample license: LGPL version 2.1 or later", "Failed to set option\n", "Requested input sample format %d is invalid\n", "Requested output sample format %d is invalid\n", "Input channel layout 0x%lx is invalid or unsupported.\n", "Output channel layout 0x%lx is invalid or unsupported.\n", "Requested resampling engine is unavailable\n", "Input channel layout has a different number of channels than the number of used channels, ignoring layout\n", "Using %s internally between filters\n", "Requested sample format %s is not supported internally, s16p/s32p/s64p/fltp/dblp are supported\n", "Failed to initialize resampler\n", "Resampling only supported with internal s16p/s32p/fltp/dblp\n", "!s->in_ch_layout", "src/libswresample/swresample.c", "Input channel count and layout are unset\n", "Output channel layout %s mismatches specified channel count %d\n", "Input channel layout %s mismatches specified channel count %d\n", "Rematrix is needed between %s and %s but there is not enough information to do it\n", "s->used_ch_count", "s->out.ch_count", "!s->preout.count", "a->bps", "a->ch_count", "Context has not been initialized\n", "s->drop_output", "discarding %d audio samples\n", "adding %d audio samples of silence\n", "s->out_sample_rate == s->in_sample_rate", "Failed to compensate for timestamp delta of %f\n", "compensating audio timestamp drift:%f compensation:%d in:%d\n", "!s->resample", "s->midbuf.ch_count == s->used_ch_count", "s->midbuf.ch_count == s->out.ch_count", "s->in.planar", "s->dither.noise.ch_count == preout->ch_count", "out->planar == in->planar", "out->bps == in->bps", "out->ch_count == in->ch_count", "infinity", "+infinity", "+inf", "-infinity", "-inf", "+nan", "-nan", "tail_len <= 5", "src/libavutil/avstring.c", "'\\''", "%d channels", "mono", "stereo", "3.0(back)", "quad", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(back)", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "hexadecagonal", "downmix", "front left", "front right", "front center", "low frequency", "back left", "back right", "front left-of-center", "front right-of-center", "back center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "cpuflags", "detected %d logical cores\n", "src/libavutil/crc.c", "av_crc_init(av_crc_table[AV_CRC_8_ATM], 0, 8, 0x07, sizeof(av_crc_table[AV_CRC_8_ATM])) >= 0", "av_crc_init(av_crc_table[AV_CRC_8_EBU], 0, 8, 0x1D, sizeof(av_crc_table[AV_CRC_8_EBU])) >= 0", "av_crc_init(av_crc_table[AV_CRC_16_ANSI], 0, 16, 0x8005, sizeof(av_crc_table[AV_CRC_16_ANSI])) >= 0", "av_crc_init(av_crc_table[AV_CRC_16_CCITT], 0, 16, 0x1021, sizeof(av_crc_table[AV_CRC_16_CCITT])) >= 0", "av_crc_init(av_crc_table[AV_CRC_24_IEEE], 0, 24, 0x864CFB, sizeof(av_crc_table[AV_CRC_24_IEEE])) >= 0", "av_crc_init(av_crc_table[AV_CRC_32_IEEE], 0, 32, 0x04C11DB7, sizeof(av_crc_table[AV_CRC_32_IEEE])) >= 0", "av_crc_init(av_crc_table[AV_CRC_32_IEEE_LE], 1, 32, 0xEDB88320, sizeof(av_crc_table[AV_CRC_32_IEEE_LE])) >= 0", "av_crc_init(av_crc_table[AV_CRC_16_ANSI_LE], 1, 16, 0xA001, sizeof(av_crc_table[AV_CRC_16_ANSI_LE])) >= 0", "%Y-%m-%dT%H:%M:%S", ".%06dZ", "Error number %d occurred", "BSF_NOT_FOUND", "Bitstream filter not found", "Internal bug, should not have happened", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "Generic error in an external library", "FILTER_NOT_FOUND", "Filter not found", "INPUT_CHANGED", "Input changed", "INVALIDDATA", "Invalid data found when processing input", "MUXER_NOT_FOUND", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "OUTPUT_CHANGED", "Output changed", "PATCHWELCOME", "Not yet implemented in FFmpeg, patches welcome", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "INPUT_AND_OUTPUT_CHANGED", "Input and output changed", "HTTP_BAD_REQUEST", "Server returned 400 Bad Request", "HTTP_UNAUTHORIZED", "Server returned 401 Unauthorized (authorization failed)", "HTTP_FORBIDDEN", "Server returned 403 Forbidden (access denied)", "HTTP_NOT_FOUND", "Server returned 404 Not Found", "HTTP_OTHER_4XX", "Server returned 4XX Client Error, but not one of 40{0,1,3,4}", "HTTP_SERVER_ERROR", "Server returned 5XX Server Error reply", "Invalid chars '%s' at the end of expression '%s'\n", "Eval", "Undefined constant or missing '(' in '%s'\n", "Missing ')' in '%s'\n", "Missing ')' or too many args in '%s'\n", "Unknown function in '%s'\n", "QP2LAMBDA", "Cannot read file '%s': %s\n", "Error occurred in fstat(): %s\n", "Error occurred in mmap(): %s\n", "FILE", "Failed to set close on exec\n", "ff_tempfile: Cannot allocate file name\n", "/tmp/%sXXXXXX", "./%sXXXXXX", "ff_tempfile: Cannot open temporary file %s\n", "TEMPFILE", "YCgCo", "AVPanScan", "ATSC A53 Part 4 Closed Captions", "Stereoscopic 3d metadata", "AVMatrixEncoding", "Metadata relevant to a downmix procedure", "AVReplayGain", "3x3 displaymatrix", "Active format description", "Motion vectors", "Skip samples", "Audio service type", "GOP timecode", "ICC profile", "QP table properties", "QP table data", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA512/224", "SHA512/256", "SHA384", "SHA512", "CRC32", "adler32", "The hardware pixel format '%s' is not supported by the device type '%s'\n", "Failed to map frame into derived frame context: %d.\n", "Invalid mapping found when attempting unmap.\n", "vdpau", "cuda", "vaapi", "dxva2", "videotoolbox", "d3d11va", "opencl", "mediacodec", "AVHWFramesContext", "Formats with a palette require a minimum alignment of 4\n", "Picture size %ux%u is invalid\n", "Picture size %ux%u exceeds specified max pixel count %ld, see the documentation if you wish to increase it\n", "src/libavutil/imgutils.c", "IMGUTILS", "abs(src_linesize) >= bytewidth", "abs(dst_linesize) >= bytewidth", "av_image_get_linesize failed\n", "%s%s%s%s", "    Last message repeated %d times\r", "    Last message repeated %d times\n", "[%s @ %p] ", "[%s] ", "quiet", "verbose", "info", "error", "fatal", "panic", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "256color", " is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "in_ts != ((int64_t)0x8000000000000000UL)", "src/libavutil/mathematics.c", "duration >= 0", "Unable to parse option value \"%s\" as duration\n", "Unable to parse option value \"%s\" as channel layout\n", "Invalid option type.\n", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "pixel", "sample", "The value set by option '%s' is not a channel layout.\n", "0x%08X", "%02X", "0x%02x%02x%02x%02x", "0x%lx", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a channel layout.\n", "%s AVOptions:\n", "AVOption type %d of option %s not implemented yet\n", "Error setting option %s to value %s.\n", "Not supported option type: %d, option name: %s\n", "Invalid separator(s) found.", "true,y,yes,enable,enabled,on", "false,n,no,disable,disabled,off", "Unable to parse option value \"%s\" as boolean\n", "%d%*1[:/]%d%c", "const_values array too small for %s\n", "Unable to parse option value \"%s\"\n", "Unable to parse option value \"%s\" as image size\n", "Unable to parse option value \"%s\" as video rate\n", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "pixel format", "Unable to parse option value \"%s\" as %s\n", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "Unable to parse option value \"%s\" as color\n", "The value set by option '%s' is not a %s format", "false", "size >= 25", "src/libavutil/opt.c", "INT64_MAX", "INT64_MIN", "%ld:%02d:%02d.%06d", "%d:%02d.%06d", "%d.%06d", "The value for option '%s' is not a %s format.\n", "     %-15s ", "  %s%-17s ", "%-12s ", "<flags>", "<int>", "<int64>", "<uint64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", "<boolean>", " (from ", " to ", " (default ", "\"%s\"", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "-FLT_MAX", "-FLT_MIN", "DBL_MAX", "DBL_MIN", "-DBL_MAX", "-DBL_MIN", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "%d:%d%c", "random", "bikeshed", "0123456789ABCDEFabcdef", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Cannot find color '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "%H:%M:%S", "%Y - %m - %d", "%Y%m%d", "%H%M%S", "%H:%M", "%H%M", "%J:%M:%S", "%M:%S", "ntsc", "qntsc", "qpal", "sntsc", "spal", "ntsc-film", "sqcif", "qcif", "4cif", "16cif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd1080", "2kdci", "2kflat", "2kscope", "4kdci", "4kflat", "4kscope", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "january", "february", "march", "april", "june", "july", "august", "september", "october", "november", "december", "rgb32", "bgra", "bgr32", "rgba", "name nb_components nb_bits", "%-11s %7d %10d", "src/libavutil/pixdesc.c", "d->name && d->name[0]", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step && !c->offset && !c->shift && !c->depth", "c->step >= c->depth", "8*c->step >= c->depth", "tmp[0] == 0 && tmp[1] == 0", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "gray8,y8", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "0rgb", "rgb0", "0bgr", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "xvmc", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "gbrap12be", "gbrap12le", "gbrap10be", "gbrap10le", "gray12be", "y12be", "gray12le", "y12le", "gray10be", "y10be", "gray10le", "y10le", "p016le", "p016be", "d3d11", "gray9be", "y9be", "gray9le", "y9le", "gbrpf32be", "gbrpf32le", "gbrapf32be", "gbrapf32le", "drm_prime", "yuvj", "chroma-derived-nc", "chroma-derived-c", "ictcp", "pixelutils support is required but libavutil is not compiled with it\n", "name   depth", "%-6s   %2d ", "src/libavutil/slicethread.c", "!pctx || !*pctx", "cubemap", "tiled equirectangular", "side by side", "top and bottom", "frame alternate", "checkerboard", "side by side (quincunx subsampling)", "interleaved lines", "interleaved columns", "%s%02d:%02d:%02d%c%02d", "%02u:%02u:%02u%c%02u", "%d:%d:%d%c%d", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "Valid timecode frame rate must be specified. Minimum value is 1\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Using non-standard frame rate %d/%d\n", "4.0.2", "Libavutil has been linked to a broken llrint()\n", "libavutil license: LGPL version 2.1 or later", "audio", "attachment", "!\"valid element size\"", "src/libavutil/utils.c", ". -_", "raw \r", "NONE\t", "ulaw\r", "in24\t", "twos", "sowt", "Qclp", "ADP4", "#!AMR\n", "#!AMR-WB\n", "ac-3", "alac", ".mp1", "lpcm", "lpcm\f", "lpcm\r", "lpcm\t", "lpcm", "@33*@", "com.apple.streaming.transportStreamTimestamp", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TDATTIMETORYTRDATSIZTYER", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "raw \r", "yuv2\r", "2vuy\r", "yuvs\r", "L555\r", "L565\r", "B565\r", "24BG\r", "BGRA\r", "RGBA\r", "ABGR\r", "b16g\r", "b48r\r", "b64a\r", "bxbg\r", "bxrg\r", "bxyv\r", "NO16\r", "DVOO\r", "R420\r", "v410", "SVQ3\f", "mp4v\f", "DIVX\f", "XVID\f", "VP31*", "rpza+", "cvid0", "8BPS1", "smc 7", "rle1-", "WRLE:", "qdrw\r", "mp2vX", "mjp2]", "tga `", "tiffa", "gif =", "png =", "MNG F", "vc-1W", "avs2t", "dracc", "AVdnc", "3IVD\r", "AV1x\r", "AVupe", "ap4x2", "pxlt", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "Opus", "c608", "drac", "HEVC", "VC-1", "BBCD", "VSM4\f", "FMP4\f", "DIVX\f", "DX50\f", "XVID\f", "MP4S\f", "M4S2\f", "ZMP4\f", "DIV1\f", "BLZ0\f", "mp4v\f", "UMP4\f", "WV1F\f", "SEDG\f", "RMP4\f", "3IV2\f", "WAWV\f", "FFDS\f", "FVFW\f", "DCOD\f", "MVXM\f", "PM4V\f", "SMP4\f", "DXGM\f", "VIDM\f", "M4T3\f", "GEOX\f", "G264\f", "HDX4\f", "DM4V\f", "DMK2\f", "DYM4\f", "DIGI\f", "EPHV\f", "EM4A\f", "M4CC\f", "SN40\f", "VSPX\f", "ULDX\f", "GEOV\f", "SIPP\f", "SM4V\f", "XVIX\f", "DreX\f", "QMP4\f", "PLV1\f", "GLV4\f", "GMP4\f", "MNM4\f", "JR24\t", "JPGL\u000b", "MJLS\u000b", "HFYUC", "CYUV\r", "I420\r", "YUY2\r", "Y422\r", "V422\r", "YUNV\r", "UYNV\r", "UYNY\r", "uyv1\r", "2Vu1\r", "2vuy\r", "yuvs\r", "yuv2\r", "P422\r", "YV12\r", "YV16\r", "YV24\r", "UYVY\r", "VYUY\r", "IYUV\r", "Y800\r", "Y8  \r", "HDYC\r", "YVU9\r", "VDTZ\r", "Y411\r", "NV12\r", "NV21\r", "Y41B\r", "Y42B\r", "YUV9\r", "YVU9\r", "auv2\r", "YVYU\r", "YUYV\r", "I410\r", "I411\r", "I422\r", "I440\r", "I444\r", "J420\r", "J422\r", "J440\r", "J444\r", "YUVA\r", "I40A\r", "I42A\r", "RGB2\r", "RV15\r", "RV16\r", "RV24\r", "RV32\r", "RGBA\r", "AV32\r", "GREY\r", "I09L\r", "I09B\r", "I29L\r", "I29B\r", "I49L\r", "I49B\r", "I0AL\r", "I0AB\r", "I2AL\r", "I2AB\r", "I4AL\r", "I4AB\r", "I4FL\r", "I4FB\r", "I0CL\r", "I0CB\r", "I2CL\r", "I2CB\r", "I4CL\r", "I4CB\r", "I0FL\r", "IV32o", "IV41p", "VP30Z", "VP50[", "VP60[", "VP61[", "VP62j", "VP6A\\", "VP6F\\", "ASV1 ", "ASV2#", "VCR1!", "FFV1)", "Xxanq", "LM20-", "mrle-", "MSVC.", "msvc.", "CRAM.", "cram.", "WHAM.", "wham+", "cvid3", "DUCK3", "PVEZ5", "MSZH6", "SNOW\"", "S263V", "svq18", "tscc9", "ULTI;", "VIXL<", "QPEG<", "Q1.0<", "Q1.1G", "WMVPF", "WVC1F", "WVP2H", "LOCOI", "WNV1I", "YUV8J", "AAS4J", "AASCK", "RT21L", "theoM", "TR20O", "CSCDQ", "ZMBVU", "KMVCW", "CAVSX", "mjp2X", "MJ2CX", "LJ2CX", "LJ2KX", "IPJ2X", "AVj2Y", "VMnc]", "tga =", "MPNG=", "PNG1=", "png $", "CLJRt", "drac*", "azpr*", "RPZA*", "rpza\n", "SP54{", "AURA|", "LAGSk", "ZECO", "Y41P2", "CUVCE", "SRGC", "FFmpeg version 4.0.2", "))/113//+++((((.111..***((", "\u000b\r\r\r", "I420", "IYUV", "yv12", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUYVn", "NV21'", "RGB\f8", "BGR\f7", "\fBGR9", "\fRGBk", "RBA@m", "BRA@j", "@RBAl", "RGBAy", "BGRA{", "ABGRz", "ARGBx", "422P\r", "440P ", "444P\t", "B1W0\n", "R4BY#", "RGB0\"", "0RGB<", "BGR0;", "Y3\u000b\t=", "\t\u000b3YH", "Y3\n\tG", "\t\n3YD", "Y3\u000b\n?", "\n\u000b3YB", "Y3\n\nA", "\n\n3YF", "Y3\u000b\f|", "Y4\u000b\tR", "\t\u000b4YU", "Y4\n\tT", "\t\n4YW", "Y4\u000b\nX", "\n\u000b4Y[", "Y4\n\nZ", "\n\n4Y]", "XYZ$f", "DVOO'", "L555%", "L565$", "b16g\"", "b48rj", "I444\f", "J420\r", "J422 ", "J444Q", "YUVA!", "I40AP", "RGB2'", "RV15%", "RV24{", "AV32>", "I09L=", "I09BH", "I29LG", "I29BD", "I49LC", "I49B@", "I0AL?", "I0ABB", "I2ALA", "I2ABF", "I4ALE", "I4AB}", "I0CL|", "I4CB/", "I0FL0", "I0FB3", "I4FL4", "I4FB%", "FFmpeg version 4.0.2", "RGBO&", "RGBQ%", "RGBP$", "RGB3{", "BGR4x", "GREY", "NM21", "YM12g", "VC1G", "Index value %d out of range (0 - %d) for %s at %s:%i\n", "S:>@;I>", "[truncated strftime output]", "s16p", "s32p", "fltp", "dblp", "s64p", "<fBBf<", "0xx00", "x00000x", "x`````x", "p000x", "p00000x", "p000x", "p000x", "p000x", "<ll>", "8ll8", "8ll8", "<<<<", "<fBBf<", "fffffff", "fff$", "000`", "<00000000<", "<\f\f\f\f\f\f\f\f<", "<ll>", "8ll8", "8ll8", "|||||||"], "stringidentifiers": ["aiff", "title", "author", "copyright", "comment", "APETAGEX", "album_artist", "album", "Author", "artist", "Description", "composer", "encoded_by", "encoder", "genre", "language", "filename", "disc", "publisher", "track", "service_provider", "service_name", "no_resync_search", "export_xmp", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "encryption", "AspectRatioX", "AspectRatioY", "asf_st", "URLContext", "protocol_whitelist", "protocol_blacklist", "file", "NULL", "rw_timeout", "subfile", "start", "AVIOContext", "frmaalac", "data", "base64", "Output", "Input", "from", "name", "dump_separator", "palette", "unknown", "main", "effects", "dialogue", "comentary", "emergency", "karaoke", "pipe", "crypto", "truncate", "blocksize", "follow", "flac", "fLaC", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "segment", "ssegment", "image2", "mime_type", "live_start_index", "allowed_extensions", "max_reload", "http_persistent", "http_multiple", "user_agent", "cookies", "headers", "http_proxy", "seekable", "variant_bitrate", "http", "multiple_requests", "location", "EVENT", "AUDIO", "VIDEO", "SUBTITLES", "referer", "http_version", "offset", "end_offset", "PRIV", "APIC", "Blues", "Country", "Dance", "Disco", "Funk", "Grunge", "Jazz", "Metal", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Gangsta", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Folk", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Ballad", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "date", "TALB", "TCOM", "TCON", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "performer", "TPOS", "TPUB", "TRCK", "TSSE", "USLT", "lyrics", "TCMP", "compilation", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "TSOP", "TSOT", "Conductor", "Composer", "Illustration", "CHAP", "compression", "COMM", "version", "encrypted", "compressed", "TXXX", "TYER", "TDAT", "TIME", "GEOB", "jpeg", "ljpg", "pgmyuv", "tiff", "pict", "im24", "im32", "sunras", "svgz", "yuv10", "webp", "xface", "compatible_brands", "reel_name", "nclx", "nclc", "major_brand", "minor_version", "handler_name", "rotate", "index", "ctts_index", "ctts_sample", "true", "equirectangular", "iTunSMPB", "cdec", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "firmware", "hd_video", "keywords", "synopsis", "make", "model", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "original_artist", "performers", "playback_requirements", "original_source", "subtitle", "warning", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "advanced_editlist", "ignore_chapters", "use_mfra_for", "auto", "export_all", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "timecode", "usetoc", "mpeg", "IMKH", "Sofdec", "ofdec", "mpegts", "mpegtsraw", "resync_size", "fix_teletext_pts", "ts_packetsize", "scan_all_pmts", "skip_changes", "skip_clear", "compute_pcr", "mpegvideo", "NOPTS", "OggS", "Daala", "OpusHead", "Opus", "OpusTags", "fishead", "fisbone", "METADATA_BLOCK_PICTURE", "NAME", "OVP80", "writing", "reading", "AVFormatContext", "avioflags", "direct", "probesize", "formatprobesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "latm", "nobuffer", "bitexact", "shortest", "autobsf", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "err_detect", "crccheck", "bitstream", "buffer", "explode", "ignore_err", "careful", "compliant", "aggressive", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "strict", "very", "normal", "unofficial", "experimental", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "codec_whitelist", "format_whitelist", "max_streams", "f64be", "f64le", "f32be", "f32le", "s32be", "s32le", "s24be", "s24le", "s16be", "s16le", "u32be", "u32le", "u24be", "u24le", "u16be", "u16le", "alaw", "mulaw", "sample_rate", "channels", "framerate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "cache", "missing_streams", "threads", "avformat_find_stream_info", "copy", "https", "aptx", "dvbsub", "dvbtxt", "eac3", "h264", "hevc", "loas", "mjpeg_2000", "truehd", "metadata", "extract_extradata", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "ignore_length", "WAVE", "RIFF", "RIFX", "RF64", "ds64", "originator", "originator_reference", "origination_date", "origination_time", "time_reference", "umid", "coding_history", "xwma", "XWMA", "aformat", "default", "sample_fmts", "sample_rates", "channel_layouts", "alimiter", "level_in", "level_out", "limit", "attack", "release", "asc_level", "level", "anequalizer", "params", "curves", "size", "hd720", "mgain", "fscale", "linear", "logarithmic", "colors", "out0", "out1", "change", "aresample", "asetnsamples", "nb_out_samples", "bass", "treble", "frequency", "width_type", "octave", "slope", "width", "gain", "volume", "fixed", "float", "double", "precision", "eval", "once", "frame", "replaygain", "drop", "ignore", "replaygain_preamp", "replaygain_noclip", "nb_channels", "nb_consumed_samples", "nb_samples", "startpts", "startt", "ping", "enable", "format", "noformat", "frei0r", "frei0r_src", "aevalsrc", "AVFilter", "thread_type", "slice", "extra_hw_frames", "AVFilterGraph", "scale_sws_opts", "aresample_swr_opts", "fifo", "afifo", "scale", "buffersink", "abuffersink", "pix_fmts", "channel_counts", "all_channel_counts", "abuffer", "video_size", "height", "pix_fmt", "pixel_aspect", "time_base", "frame_rate", "sws_param", "sample_fmt", "channel_layout", "pix_desc", "ff_merge_formats", "ff_merge_samplerates", "flags", "aac_latm", "dual_mono_mode", "autoselection", "both", "aac_fixed", "alac", "extra_bits_bug", "AVDCT", "fastint", "altivec", "faan", "idct", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "private_spspps_buf", "bsf_list", "AVBSFContext", "null", "mpeg1video", "mpeg2video", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "ljpeg", "sp5x", "jpegls", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "HuffYUV", "cyuv", "indeo3", "theora", "Theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "Cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "tscc", "ulti", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "LOCO", "wnv1", "aasc", "indeo2", "fraps", "Fraps", "truemotion2", "cscd", "CamStudio", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "targa", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "sunrast", "indeo4", "indeo5", "mimic", "Mimic", "escape124", "dirac", "Dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "ansi", "a64_multi", "a64_multi5", "r10k", "mxpeg", "lagarith", "prores", "wmv3image", "vc1image", "utvideo", "bmv_video", "vble", "dxtory", "Dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "escape130", "Go2Meeting", "WebP", "hnm4video", "alias_pix", "brender_pix", "paf_video", "sanm", "sgirle", "mvc1", "mvc2", "tdsc", "TDSC", "hq_hqa", "screenpresso", "Screenpresso", "rscc", "y41p", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "snow", "Snow", "smvjpeg", "apng", "daala", "cfhd", "truemotion2rt", "m101", "magicyuv", "sheervideo", "pixlet", "speedhq", "fmvc", "scpr", "ScreenPressor", "clearvideo", "bitpacked", "Bitpacked", "mscc", "srgc", "fits", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_s16be_planar", "pcm_s64le", "pcm_s64be", "pcm_f16le", "pcm_f24le", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_vima", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "adpcm_thp_le", "adpcm_psx", "adpcm_aica", "adpcm_ima_dat4", "adpcm_mtaf", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "gremlin_dpcm", "vorbis", "Vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "WavPack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "nellymoser", "musepack8", "speex", "Speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "sipr", "twinvq", "TrueHD", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "qdmc", "celt", "g723_1", "g729", "bmv_audio", "ralf", "ilbc", "opus", "comfortnoise", "metasound", "paf_audio", "dss_sp", "codec2", "wavesynth", "sonic", "Sonic", "sonicls", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "atrac3al", "atrac3pal", "dolby_e", "aptx_hd", "dvd_subtitle", "dvb_subtitle", "text", "xsub", "XSUB", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "microdvd", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "subrip", "webvtt", "mpl2", "vplayer", "hdmv_text_subtitle", "scte_35", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "wrapped_avframe", "use_buggy_lpc", "desc", "SEPB1", "SEPB2", "Reserved", "reserved", "ffmpeg", "quarter_sample", "divx_packed", "mp1float", "mp2float", "mp3float", "mp3adufloat", "mp3on4float", "AVCodecContext", "unaligned", "qpel", "loop", "qscale", "pass1", "pass2", "gray", "psnr", "truncated", "ildct", "low_delay", "global_header", "ilme", "cgop", "output_corrupt", "fast", "flags2", "noout", "ignorecrop", "local_header", "chunks", "showall", "export_mvs", "skip_manual", "ass_ro_flush_noop", "cutoff", "frame_size", "frame_number", "delay", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "b_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "xvid_ilace", "ump4", "no_padding", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "iedge", "b_qoffset", "has_b_frames", "block_align", "mpeg_quant", "rc_override_count", "maxrate", "minrate", "bufsize", "i_qfactor", "i_qoffset", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "deblock", "favor_inter", "bits_per_coded_sample", "pred", "left", "plane", "median", "aspect", "debug", "mb_type", "dct_coeff", "green_metadata", "skip", "startcode", "mmco", "bugs", "buffers", "thread_ops", "nomc", "cmp_func", "subcmp", "mbcmp", "ildctcmp", "dia_size", "last_pred", "preme", "precmp", "satd", "zero", "vsad", "vsse", "nsse", "dctmax", "chroma", "msad", "pre_dia_size", "subq", "me_range", "global_quality", "coder", "context", "slice_flags", "bits", "sc_threshold", "rc_init_occupancy", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "profile", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "main10", "msbc", "lowres", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "noref", "bidir", "nokey", "nointra", "bidir_refine", "brd_scale", "keyint_min", "refs", "chromaoffset", "trellis", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_primaries_type", "bt709", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "film", "Film", "bt2020", "smpte428", "smpte428_1", "smpte431", "smpte432", "unspecified", "color_trc", "color_trc_type", "gamma22", "gamma28", "Linear", "log100", "log316", "bt1361e", "smpte2084", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "colorspace", "colorspace_type", "ycgco", "YCGCO", "bt2020nc", "bt2020c", "smpte2085", "ycocg", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "chroma_sample_location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "bottomleft", "bottom", "Bottom", "log_level_offset", "slices", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "sub_text_format", "ass_with_timings", "refcounted_frames", "side_data_only_packets", "apply_cropping", "skip_alpha", "field_order", "progressive", "pixel_format", "max_pixels", "hwaccel_flags", "ignore_level", "allow_high_depth", "allow_profile_mismatch", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVSubtitleRect", "type", "forced", "apply_phase_inv", "in_sample_fmt", "out_sample_fmt", "in_channel_layout", "out_channel_layout", "out_sample_rate", "filter_size", "in_sample_rate", "Main", "DNXHD", "Baseline", "Extended", "High", "Rext", "Simple", "Complex", "Advanced", "Professional", "mSBC", "decoder", "unknown_codec", "video", "capture", "book_idx", "mode_number", "SWResampler", "in_channel_count", "out_channel_count", "used_channel_count", "internal_sample_fmt", "clev", "center_mix_level", "slev", "surround_mix_level", "lfe_mix_level", "rmvol", "rematrix_volume", "rematrix_maxval", "swr_flags", "dither_scale", "dither_method", "rectangular", "triangular", "triangular_hp", "lipshitz", "shibata", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "phase_shift", "linear_interp", "exact_rational", "resample_cutoff", "resampler", "soxr", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "dolby", "dplii", "filter_type", "cubic", "blackman_nuttall", "kaiser", "kaiser_beta", "output_sample_bits", "infinity", "mono", "stereo", "quad", "hexagonal", "octagonal", "hexadecagonal", "downmix", "LFE2", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INPUT_CHANGED", "INVALIDDATA", "MUXER_NOT_FOUND", "OPTION_NOT_FOUND", "OUTPUT_CHANGED", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "INPUT_AND_OUTPUT_CHANGED", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "Eval", "QP2LAMBDA", "FILE", "TEMPFILE", "YCgCo", "AVPanScan", "AVMatrixEncoding", "AVReplayGain", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA384", "SHA512", "CRC32", "adler32", "vdpau", "cuda", "vaapi", "dxva2", "videotoolbox", "d3d11va", "opencl", "mediacodec", "AVHWFramesContext", "IMGUTILS", "quiet", "verbose", "info", "error", "fatal", "panic", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "pixel", "sample", "false", "INT64_MAX", "INT64_MIN", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "DBL_MAX", "DBL_MIN", "random", "bikeshed", "ntsc", "qntsc", "qpal", "sntsc", "spal", "sqcif", "qcif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd1080", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "january", "february", "march", "april", "june", "july", "august", "september", "october", "november", "december", "rgb32", "bgra", "bgr32", "rgba", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "rgb0", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "xvmc", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "gbrap12be", "gbrap12le", "gbrap10be", "gbrap10le", "gray12be", "y12be", "gray12le", "y12le", "gray10be", "y10be", "gray10le", "y10le", "p016le", "p016be", "d3d11", "gray9be", "y9be", "gray9le", "y9le", "gbrpf32be", "gbrpf32le", "gbrapf32be", "gbrapf32le", "drm_prime", "yuvj", "ictcp", "cubemap", "checkerboard", "audio", "attachment", "twos", "sowt", "Qclp", "ADP4", "alac", "lpcm", "lpcm", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TDATTIMETORYTRDATSIZTYER", "v410", "cvid0", "mp2vX", "tiffa", "avs2t", "dracc", "AVdnc", "AVupe", "ap4x2", "pxlt", "sac3", "alac", "twos", "lpcm", "Opus", "c608", "drac", "HEVC", "BBCD", "HFYUC", "IV32o", "IV41p", "VP30Z", "VP62j", "Xxanq", "cvid3", "DUCK3", "PVEZ5", "MSZH6", "S263V", "svq18", "tscc9", "WMVPF", "WVC1F", "WVP2H", "LOCOI", "WNV1I", "YUV8J", "AAS4J", "AASCK", "RT21L", "theoM", "TR20O", "CSCDQ", "ZMBVU", "KMVCW", "CAVSX", "mjp2X", "MJ2CX", "LJ2CX", "LJ2KX", "IPJ2X", "AVj2Y", "CLJRt", "LAGSk", "ZECO", "Y41P2", "CUVCE", "SRGC", "I420", "IYUV", "yv12", "YUYVn", "RGBAy", "ABGRz", "ARGBx", "b48rj", "J444Q", "I40AP", "I09BH", "I29LG", "I29BD", "I49LC", "I0ABB", "I2ALA", "I2ABF", "I4ALE", "I0FL0", "I0FB3", "I4FL4", "BGR4x", "GREY", "NM21", "YM12g", "VC1G", "s16p", "s32p", "fltp", "dblp", "s64p", "x00000x", "p000x", "p00000x", "p000x", "p000x", "p000x", "fffffff"], "debugstrings": ["Unsupported tag version. (>=%d)\n", "http_version", "version", "version =%d, isom =%d\n", "minor_version", "Version %d", "sidx version %u", "Unknown spherical version %d\n", "unsupported OpusSpecificBox version\n", "Unsupported Mastering Display Metadata box version %d\n", "Unsupported Content Light Level box version %d\n", "Unsupported VP Codec Configuration box version %d\n", "premiere_version", "quicktime_version", "sid=0x%x sec_num=%d/%d version=%d tid=%d\n", "ogg page, unsupported version\n", "Unknown skeleton version %d.%d\n", "Unknown OggVP8 version %d.%d\n", "strictly conform to a older more strict version of the spec or reference software", "libavformat license: LGPL version 2.1 or later", "Unknown SMV version found\n", "libavfilter license: LGPL version 2.1 or later", "The filters '%s' and '%s' do not have a common format and automatic conversion is disabled.\n", "Color conversion not implemented for %s\n", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "H.263+ / H.263-1998 / H.263 version 2", "On2 VP6 (Flash version)", "On2 VP6 (Flash version, with alpha channel)", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "Unknown Lavc version string encountered, %d.%d.%d; clamping sub-version values to 8-bits.\n", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "Extradata version %d", "Apply intensity stereo phase inversion", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "libavcodec license: LGPL version 2.1 or later", "libswresample license: LGPL version 2.1 or later", "libavutil license: LGPL version 2.1 or later", "FFmpeg version 4.0.2", "FFmpeg version 4.0.2", "GCC: (GNU) 4.9.x 20150123 (prerelease)", "Android (4691093 based on r316199) clang version 6.0.2 (https://android.googlesource.com/toolchain/clang 183abd29fc496f55536e7d904e0abae47888fc7f) (https://android.googlesource.com/toolchain/llvm 34361f192e41ed6e4e8f9aca80a4ea7e9856f327) (based on LLVM 6.0.2svn)"], "localsymbols": [""], "dependencies": ["libm.so", "libc++_shared.so", "libc.so", "libdl.so"], "elfname": "libav_4.0.2.so"}