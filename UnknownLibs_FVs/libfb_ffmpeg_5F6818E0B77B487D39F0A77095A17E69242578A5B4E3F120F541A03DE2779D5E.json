{"globalvars": ["ff_ac3_channels_tab", "ff_h264_muxer", "ff_ac3_floor_tab", "ff_id3v2_4_tags", "ff_file_protocol", "avpriv_mpa_bitrate_tab", "ff_ac3_hearing_threshold_tab", "ffio_url_class", "ff_ac3_enc_channel_map", "ff_codec_wav_tags", "ff_mpa_alloc_tables", "ff_latm_muxer", "ff_ac3_rematrix_band_tab", "ff_ac3_fast_gain_tab", "ff_raw_pix_fmt_tags", "ff_cropTbl", "ff_id3v2_mime_tags", "ff_adts_muxer", "ff_mpegts_muxer", "ff_ac3_slow_decay_tab", "ff_eac3_default_chmap", "ff_ac3_db_per_bit_tab", "ff_zigzag_direct", "ff_ac3_bap_tab", "ffurl_context_class", "ff_inverse", "avpriv_ac3_channel_layout_tab", "ff_mp4_obj_type", "ff_ac3_frame_size_tab", "ff_codec_movvideo_tags", "ff_id3v2_34_metadata_conv", "ff_riff_info_conv", "ff_mov_muxer", "ff_codec_bmp_tags", "ff_rawvideo_decoder", "ff_id3v2_tags", "ff_id3v2_3_tags", "ff_codec_movsubtitle_tags", "ff_ac3_dec_channel_map", "ff_mov_demuxer", "ff_reverse", "ff_log2_run", "ff_mpeg4audio_channels", "ff_sqrt_tab", "ff_avcodec_locked", "avpriv_mpa_freq_tab", "ff_id3v1_genre_str", "ff_codec_wav_guids", "ff_codec_movaudio_tags", "ff_mpa_quant_bits", "ff_mpa_sblimit_table", "ff_eac3_default_cpl_band_struct", "ff_ac3_fast_decay_tab", "av_pix_fmt_descriptors", "av_reverse", "ff_ac3_bitrate_tab", "ff_mpa_quant_steps", "ff_ac3_log_add_tab", "av_sha_size", "ff_ac3_sample_rate_tab", "ff_log2_tab", "ff_id3v2_4_metadata_conv", "avpriv_mpeg4audio_sample_rates", "ff_ac3_slow_gain_tab", "ff_ac3_window", "ff_mp4_muxer", "ff_id3v2_picture_types"], "importedglobals": ["__stack_chk_guard", "__sF"], "importedfunctions": ["fabs", "exp", "fstat", "mktime", "pthread_cond_signal", "read", "acos", "floor", "sqrt", "strncmp", "sin", "llrint", "fread", "fdopen", "__stack_chk_fail", "memcpy", "strftime", "strlen", "tan", "sscanf", "memalign", "strtod", "close", "realloc", "clock", "strstr", "__errno", "fputc", "cos", "strspn", "pthread_mutex_init", "pthread_create", "pow", "fopen", "atoi", "raise", "pthread_cond_broadcast", "pthread_cond_wait", "memmove", "pthread_cond_init", "vsnprintf", "strcspn", "memcmp", "strtol", "__isinf", "pthread_cond_destroy", "access", "strrchr", "lseek", "strcpy", "nanosleep", "fclose", "strchr", "strtoll", "isatty", "strtoul", "free", "trunc", "log", "bsearch", "gettimeofday", "atan", "lrintf", "pthread_mutex_lock", "asin", "abort", "memset", "qsort", "strcmp", "pthread_mutex_destroy", "getenv", "time", "tanh", "sysconf", "pthread_join", "open", "strerror_r", "localtime", "pthread_mutex_unlock", "fprintf", "fcntl", "fputs", "ceil", "write", "fgets", "gmtime", "sinh", "cosh", "snprintf"], "exportedfunctions": ["ff_ape_parse_tag", "__gtdf2", "avcodec_flush_buffers", "ff_parse_key_value", "ffurl_size", "av_free_packet", "av_codec_get_max_lowres", "avcodec_decode_video2", "av_append_packet", "av_frame_get_side_data", "av_get_planar_sample_fmt", "__gnu_thumb1_case_uhi", "ff_data_to_hex", "avio_wb24", "avsubtitle_free", "av_format_set_metadata_header_padding", "avformat_write_header", "av_format_get_metadata_header_padding", "av_pix_fmt_desc_next", "ff_read_packet", "av_get_bytes_per_sample", "avcodec_encode_audio", "avpriv_new_chapter", "___Unwind_Backtrace", "ffurl_seek", "av_buffer_default_free", "ff_mov_get_lpcm_codec_id", "av_parse_cpu_caps", "av_image_get_buffer_size", "av_buffer_create", "avpriv_request_sample", "ff_rtp_chain_mux_open", "ff_mpeg4video_split", "av_crc_init", "av_opt_eval_q", "__addsf3", "ff_generate_avci_extradata", "ff_index_search_timestamp", "ff_guess_image2_codec", "ff_free_stream", "avio_wl64", "avpriv_copy_pce_data", "ff_rtp_codec_id", "av_interleaved_write_frame", "av_bprint_init", "ffio_init_checksum", "av_opt_eval_flags", "av_opt_get_int", "_Unwind_VRS_Set", "av_pkt_dump2", "avio_rl24", "avformat_get_riff_video_tags", "av_stristr", "avcodec_align_dimensions2", "ff_mov_write_chan", "av_strstart", "av_parse_ratio", "__lshrdi3", "ff_thread_report_progress2", "__gnu_Unwind_Save_WMMXD", "avpriv_unlock_avformat", "av_opt_query_ranges", "avcodec_encode_video", "av_get_profile_name", "av_dump_format", "avcodec_find_encoder", "av_parse_video_rate", "av_opt_get", "ff_rfps_add_frame", "avio_rb24", "av_url_split", "ff_find_stream_index", "avformat_match_stream_specifier", "av_opt_child_class_next", "av_malloc", "av_add_q", "av_bprint_escape", "av_frame_set_metadata", "ff_put_bmp_header", "av_isgraph", "av_opt_get_double", "av_strlcatf", "ff_sdp_write_media", "av_vlog", "ff_mp4_read_dec_config_descr", "av_frame_get_colorspace", "av_buffer_pool_init", "av_format_get_audio_codec", "url_feof", "av_packet_pack_dictionary", "_Unwind_VRS_Get", "av_find_opt", "ffurl_close", "ff_mov_iso639_to_lang", "avio_rl32", "av_dict_free", "ff_id3v2_tag_len", "av_timecode_make_mpeg_tc_string", "av_oformat_next", "av_add_index_entry", "av_strtod", "__subsf3", "av_log_missing_feature", "av_get_channel_layout", "av_realloc", "av_get_standard_channel_layout", "avpriv_mpeg4audio_get_config", "ff_mov_add_hinted_packet", "ffio_rewind_with_probe_data", "av_opt_flag_is_set", "av_get_exact_bits_per_sample", "__mulsf3", "av_get_pix_fmt_name", "ff_id3v2_read", "ff_metadata_conv", "av_format_get_control_message_cb", "av_frame_set_channel_layout", "ff_hex_to_data", "av_opt_set_image_size", "avcodec_get_class", "av_dynarray_add", "av_get_token", "avio_check", "avutil_configuration", "av_codec_set_codec_descriptor", "av_get_output_timestamp", "av_fast_padded_malloc", "get_codec_guid", "av_format_set_control_message_cb", "av_guess_codec", "av_format_set_audio_codec", "av_parser_close", "av_opt_ptr", "avio_wb64", "avpriv_set_pts_info", "av_image_fill_linesizes", "ff_reduce_index", "ff_thread_can_start_frame", "avio_read", "av_frame_make_writable", "av_sdp_create", "avformat_close_input", "ff_check_pixfmt_descriptors", "avcodec_find_decoder", "av_hex_dump_log", "ff_gen_search", "av_samples_alloc_array_and_samples", "__nedf2", "ff_mov_write_packet", "av_bprint_chars", "avpriv_lock_avformat", "__fixunsdfsi", "av_get_pix_fmt_string", "avio_printf", "av_set_q", "ff_seek_frame_binary", "av_frame_get_color_range", "av_opt_free", "av_buffer_ref", "av_guess_format", "avio_close_dyn_buf", "av_rescale_rnd", "av_parse_cpu_flags", "av_get_cpu_flags", "ff_thread_release_buffer", "av_find_input_format", "av_frame_set_color_range", "av_bprint_init_for_buffer", "avformat_new_stream", "avcodec_get_frame_class", "av_fast_padded_mallocz", "av_codec_set_pkt_timebase", "ff_reget_buffer", "ff_unlock_avcodec", "ff_interleave_packet_per_dts", "avformat_seek_file", "ff_iso8601_to_unix_time", "av_get_sample_fmt", "av_get_sample_fmt_string", "restore_core_regs", "av_get_default_channel_layout", "av_log_format_line", "avformat_network_init", "avcodec_chroma_pos_to_enum", "av_mallocz", "ff_get_wav_header", "avcodec_get_context_defaults3", "ff_init_buffer_info", "avio_w8", "av_codec_set_lowres", "ff_get_pcm_codec_id", "ff_free_vlc", "av_sha_init", "av_timecode_get_smpte_from_framenum", "av_buffer_pool_get", "_Unwind_Resume", "avcodec_configuration", "av_opt_eval_double", "ff_hevc_annexb2mp4_buf", "av_compare_ts", "av_get_bits_per_sample_fmt", "av_gcd", "avformat_open_input", "av_find_program_from_stream", "ff_program_add_stream_index", "_Unwind_RaiseException", "ff_thread_init", "ffurl_get_file_handle", "avio_r8", "av_log_get_level", "av_timecode_make_smpte_tc_string", "__muldi3", "ff_ape_write_tag", "ff_reset_entries", "av_isdigit", "av_strerror", "av_probe_input_format3", "ffio_fill", "av_codec_get_codec_descriptor", "__gnu_ldivmod_helper", "av_packet_ref", "av_format_set_opaque", "av_timecode_adjust_ntsc_framenum2", "ff_frame_thread_free", "ff_alloc_packet2", "av_samples_fill_arrays", "avcodec_version", "avpicture_alloc", "avcodec_default_get_buffer2", "av_bprint_append_data", "av_frame_free", "av_frame_get_metadata", "av_get_pix_fmt", "av_init_packet", "avpriv_align_put_bits", "av_realloc_array", "av_get_known_color_name", "ff_id3v2_match", "__adddf3", "av_opt_set_from_string", "avcodec_pix_fmt_to_codec_tag", "ff_set_dimensions", "av_shrink_packet", "av_frame_alloc", "avcodec_fill_audio_frame", "av_frame_copy", "avcodec_alloc_frame", "avio_seek", "_Unwind_Complete", "ff_mp4_read_descr", "avcodec_free_frame", "avio_seek_time", "av_basename", "ff_mov_get_channel_layout", "av_opt_show2", "avcodec_close", "av_samples_alloc", "av_utf8_decode", "ff_lock_avcodec", "av_opt_get_image_size", "ff_isom_write_hvcc", "avpriv_find_pix_fmt", "av_write_frame", "avcodec_default_get_format", "av_opt_get_video_rate", "av_timecode_check_frame_rate", "av_get_q", "avio_wl24", "av_opt_eval_int", "avformat_get_mov_audio_tags", "avpriv_color_frame", "avcodec_default_execute", "_Unwind_Backtrace", "ff_avc_find_startcode", "av_register_codec_parser", "av_get_channel_layout_nb_channels", "av_opt_get_pixel_fmt", "av_opt_set_defaults", "__restore_core_regs", "_Unwind_Resume_or_Rethrow", "ffio_fdopen", "av_packet_unpack_dictionary", "av_iformat_next", "avio_rb16", "__subdf3", "___Unwind_ForcedUnwind", "av_get_packed_sample_fmt", "av_freep", "_Unwind_DeleteException", "av_free", "av_opt_get_key_value", "ff_id3v2_free_extra_meta", "av_get_pcm_codec", "ff_isom_write_avcc", "av_codec_get_tag", "av_frame_unref", "av_opt_eval_int64", "av_dict_copy", "__gnu_unwind_execute", "ff_mov_get_channel_layout_tag", "ff_find_hwaccel", "av_frame_get_best_effort_timestamp", "ff_thread_ref_frame", "avcodec_encode_video2", "__eqdf2", "av_packet_merge_side_data", "ff_codec_get_id", "av_timecode_init", "avio_wb32", "ff_thread_free", "av_cpu_count", "av_frame_set_pkt_size", "avcodec_align_dimensions", "avio_rb64", "_Unwind_GetDataRelBase", "ff_mp4_read_descr_len", "avformat_configuration", "___Unwind_RaiseException", "av_opt_set_bin", "av_parse_color", "av_frame_is_writable", "av_buffer_unref", "av_codec_is_decoder", "av_frame_get_plane_buffer", "ffio_get_checksum", "av_frame_move_ref", "av_set_int", "avcodec_default_execute2", "av_xiphlacing", "ff_mov_lang_to_iso639", "av_frame_get_channel_layout", "av_close_input_file", "_Unwind_ForcedUnwind", "avcodec_decode_subtitle2", "avformat_get_riff_audio_tags", "_Unwind_GetLanguageSpecificData", "avcodec_descriptor_get_by_name", "avio_open", "ff_id3v2_read_dict", "ff_crc04C11DB7_update", "av_index_search_timestamp", "av_log_set_flags", "avpriv_bprint_to_extradata", "ff_avc_parse_nal_units", "av_format_get_subtitle_codec", "av_opt_get_q", "ff_match_2uint16", "av_pix_fmt_swap_endianness", "avpriv_toupper4", "av_log_set_level", "ff_rtp_get_payload_type", "av_rescale_delta", "av_max_alloc", "av_opt_set_dict", "av_set_double", "avio_put_str16le", "av_read_play", "ff_id3v1_read", "ffio_open_dyn_packet_buf", "avutil_license", "ff_thread_decode_frame", "av_bprint_get_buffer", "av_match_ext", "avio_rl64", "av_gettime", "av_log_set_callback", "av_reallocp", "avio_rl16", "av_stream_get_r_frame_rate", "av_opt_set_sample_fmt", "avpicture_fill", "av_opt_set_video_rate", "ff_put_guid", "av_codec_set_chroma_intra_matrix", "__gnu_Unwind_Restore_WMMXC", "av_strlcpy", "__gnu_Unwind_Resume_or_Rethrow", "__gedf2", "__muldf3", "ff_codec_open2_recursive", "av_strlcat", "av_reallocp_array", "avio_wb16", "ffio_open_null_buf", "av_usleep", "av_new_stream", "av_opt_set_channel_layout", "avcodec_default_release_buffer", "avcodec_get_edge_width", "ffio_close_null_buf", "avio_find_protocol_name", "av_get_double", "av_dict_get", "avio_closep", "__ledf2", "av_frame_set_sample_rate", "avio_size", "__ltdf2", "ffurl_shutdown", "av_sha_final", "ff_id3v2_parse_apic", "av_fmt_ctx_get_duration_estimation_method", "av_dup_packet", "avformat_get_class", "__extendsfdf2", "__gnu_Unwind_Save_WMMXC", "av_buffer_is_writable", "ffurl_protocol_next", "av_image_copy_plane", "ff_j_rev_dct_arm", "ff_read_riff_info", "av_parser_change", "avio_skip", "ff_slice_thread_free", "avformat_alloc_output_context", "ff_compute_frame_duration", "av_buffer_get_opaque", "av_set_cpu_flags_mask", "av_opt_set", "ff_get_cpu_flags_arm", "avcodec_encode_subtitle", "av_image_get_linesize", "ff_combine_frame", "av_hwaccel_next", "av_seek_frame", "ff_alloc_packet", "av_packet_from_data", "av_frame_set_qp_table", "avio_open2", "av_dict_set", "av_new_program", "av_demuxer_open", "avformat_free_context", "av_get_codec_tag_string", "ff_rtp_get_codec_info", "av_probe_input_buffer2", "av_write_image_line", "avio_write", "av_opt_get_sample_fmt", "ff_avc_write_annexb_extradata", "ff_find_last_ts", "av_write_uncoded_frame_query", "___Unwind_Resume", "av_mul_q", "av_bprint_strftime", "ffurl_write", "av_bprint_finalize", "__gnu_thumb1_case_uqi", "__gnu_unwind_frame", "avpriv_copy_bits", "avcodec_is_open", "ff_get_bmp_header", "av_frame_copy_props", "av_get_string", "av_get_channel_name", "av_frame_set_pkt_pos", "avpriv_report_missing_feature", "av_probe_input_buffer", "av_codec_get_lowres", "av_fast_realloc", "av_log_ask_for_sample", "ff_mov_close_hinting", "av_pix_fmt_count_planes", "avcodec_register_all", "av_probe_input_format", "av_get_bits_per_pixel", "_Unwind_VRS_Pop", "av_get_frame_filename", "av_format_get_opaque", "av_get_bits_per_sample", "av_log_default_callback", "av_memcpy_backptr", "ff_riff_write_info", "av_samples_get_buffer_size", "av_get_channel_layout_channel_index", "av_timecode_make_string", "av_bprintf", "av_log", "av_opt_get_channel_layout", "av_probe_input_format2", "av_default_item_name", "av_get_packet", "__gnu_Unwind_Resume", "av_get_channel_layout_string", "avcodec_encode_audio2", "av_sub_q", "av_vbprintf", "av_bprint_clear", "avcodec_descriptor_get", "av_frame_ref", "av_dirname", "avcodec_get_name", "avformat_find_stream_info", "ff_choose_timebase", "ffurl_connect", "avio_flush", "av_opt_set_defaults2", "av_lockmgr_register", "avcodec_register", "ff_thread_finish_setup", "av_pix_fmt_desc_get_id", "av_set_options_string", "__gnu_Unwind_Restore_WMMXD", "ff_interleave_add_packet", "av_guess_frame_rate", "av_next_option", "__divdf3", "av_fast_malloc", "av_new_packet", "ff_check_interrupt", "av_set_pts_info", "avcodec_default_reget_buffer", "av_parser_next", "ff_read_frame_flush", "ff_fetch_timestamp", "av_calloc", "av_get_padded_bits_per_pixel", "ff_mov_read_stsd_entries", "av_timecode_init_from_string", "ffurl_alloc", "avpriv_set_systematic_pal2", "avio_rb32", "av_format_set_video_codec", "ffio_set_buf_size", "av_guess_sample_aspect_ratio", "av_samples_set_silence", "ffio_read_indirect", "av_timegm", "avio_alloc_context", "ff_write_chained", "av_hex_dump", "ff_add_index_entry", "ff_mp4_parse_es_descr", "av_filename_number_test", "av_escape", "av_find_nearest_q_idx", "avcodec_descriptor_next", "av_opt_freep_ranges", "av_memdup", "av_packet_unref", "av_div_q", "avcodec_license", "__gnu_Unwind_Backtrace", "av_copy_packet_side_data", "av_bprint_channel_layout", "avcodec_get_subtitle_rect_class", "av_find_best_stream", "av_find_default_stream_index", "av_frame_get_pkt_pos", "avformat_queue_attached_pictures", "av_frame_clone", "__udivsi3", "avpriv_frame_get_metadatap", "av_get_channel_description", "av_frame_get_pkt_duration", "av_frame_get_decode_error_flags", "ff_thread_await_progress", "avio_get_str16le", "ff_get_extradata", "av_register_output_format", "av_channel_layout_extract_channel", "ff_raw_write_packet", "av_codec_is_encoder", "av_image_fill_pointers", "ff_mov_init_hinting", "ff_codec_close_recursive", "av_image_alloc", "av_packet_copy_props", "av_register_all", "av_samples_copy", "av_read_pause", "ff_metadata_conv_ctx", "ff_side_data_update_matrix_encoding", "avcodec_find_encoder_by_name", "avformat_license", "av_get_sample_fmt_name", "avcodec_get_frame_defaults", "avpicture_get_size", "avformat_get_mov_video_tags", "__divsf3", "av_get_colorspace_name", "av_reduce", "av_packet_free_side_data", "ff_thread_get_format", "av_frame_set_colorspace", "av_interleaved_write_uncoded_frame", "av_asprintf", "ff_start_tag", "__unorddf2", "avformat_network_deinit", "av_get_alt_sample_fmt", "avcodec_set_dimensions", "ff_parse_specific_params", "ff_codec_get_tag", "av_register_hwaccel", "avcodec_get_type", "av_compare_mod", "__truncdfsf2", "__gnu_Unwind_Restore_VFP_D", "av_buffer_make_writable", "av_strtok", "avpicture_free", "av_strnstr", "__gnu_Unwind_RaiseException", "av_codec_next", "__gnu_Unwind_Save_VFP_D_16_to_31", "ff_rfps_calculate", "__gnu_Unwind_Restore_VFP_D_16_to_31", "av_read_frame", "__gnu_uldivmod_helper", "av_parser_init", "ff_add_param_change", "avcodec_decode_audio3", "av_rescale_q_rnd", "__gnu_Unwind_Save_VFP_D", "ff_thread_flush", "ffurl_closep", "ff_get_line", "ff_thread_get_buffer", "ff_alloc_entries", "ff_get_channel_layout", "av_expr_eval", "avcodec_copy_context", "avcodec_find_decoder_by_name", "ff_mov_read_esds", "av_frame_get_buffer", "av_expr_free", "ffurl_register_protocol", "av_codec_get_tag2", "av_isxdigit", "av_buffer_pool_uninit", "av_destruct_packet", "ff_thread_report_progress", "av_buffer_get_ref_count", "avcodec_decode_audio4", "av_format_set_subtitle_codec", "av_crc", "av_opt_set_int", "av_pix_fmt_get_chroma_sub_sample", "av_packet_move_ref", "av_format_get_probe_score", "av_realloc_f", "avcodec_string", "ff_codec_guid_get_id", "avpriv_open", "av_d2str", "avcodec_open2", "avpriv_find_start_code", "av_nearer_q", "av_read_packet", "__divsi3", "av_parse_time", "ff_get_audio_frame_size", "av_sha_update", "av_expr_parse_and_eval", "av_image_fill_max_pixsteps", "avformat_version", "av_get_int", "ffurl_read_complete", "av_d2q", "ff_get_guid", "av_fopen_utf8", "ffio_read_varlen", "avio_wl16", "av_dict_parse_string", "av_strncasecmp", "avpriv_put_string", "av_opt_next", "_Unwind_GetCFA", "avcodec_default_get_buffer", "av_set_string3", "_Unwind_GetTextRelBase", "av_frame_new_side_data", "av_get_audio_frame_duration", "ff_thread_await_progress2", "av_small_strptime", "av_frame_set_decode_error_flags", "av_expr_parse", "ff_wav_codec_get_id", "avpicture_layout", "_Unwind_GetRegionStart", "avcodec_enum_to_chroma_pos", "ffio_ensure_seekback", "av_rescale_q", "__fixdfdi", "__ashldi3", "av_buffer_realloc", "ffio_read_partial", "av_image_copy", "av_get_media_type_string", "av_register_input_format", "av_packet_split_side_data", "av_write_trailer", "av_frame_set_best_effort_timestamp", "av_frame_get_qp_table", "avformat_alloc_context", "___Unwind_Resume_or_Rethrow", "av_find_info_tag", "av_grow_packet", "av_codec_set_seek_preroll", "ffio_limit", "av_force_cpu_flags", "av_opt_find", "avio_pause", "ff_slice_thread_init", "avio_close", "ff_rtp_enc_name", "avio_enum_protocols", "__fixunsdfdi", "ff_hevc_annexb2mp4", "av_frame_set_channels", "__udivdi3", "av_read_image_line", "ff_riff_write_info_tag", "avformat_alloc_output_context2", "av_dict_count", "av_write_uncoded_frame", "avio_get_str16be", "ffurl_open", "av_buffer_allocz", "av_frame_get_sample_rate", "av_parse_video_size", "av_packet_shrink_side_data", "av_pix_fmt_desc_get", "avutil_version", "av_rescale", "av_opt_set_q", "ff_ntp_time", "av_get_picture_type_char", "avformat_query_codec", "ffurl_get_multi_file_handle", "ffurl_read", "av_frame_set_pkt_duration", "__gnu_Unwind_Restore_VFP", "av_codec_get_chroma_intra_matrix", "av_stream_set_r_frame_rate", "av_opt_set_pixel_fmt", "ff_simple_idct_arm", "ff_update_cur_dts", "ff_init_vlc_sparse", "av_sha_alloc", "av_image_copy_to_buffer", "ff_get_v_length", "avio_put_str", "av_opt_set_double", "av_find_stream_info", "av_sample_fmt_is_planar", "__cmpdf2", "ff_frame_thread_init", "avio_get_str", "av_opt_eval_float", "av_opt_child_next", "av_format_get_video_codec", "__divdi3", "av_add_stable", "ff_parse_close", "ff_get_buffer", "ff_avc_parse_nal_units_buf", "av_isspace", "av_opt_query_ranges_default", "av_strcasecmp", "av_buffer_alloc", "av_codec_get_seek_preroll", "av_packet_get_side_data", "av_crc_get_table", "__fixdfsi", "av_image_check_size", "avio_wl32", "av_frame_get_pkt_size", "av_codec_get_id", "av_frame_get_channels", "av_image_fill_arrays", "av_opt_find2", "ff_put_v", "ffio_init_context", "ff_end_tag", "av_stristart", "ff_alloc_extradata", "ff_mov_read_chan", "av_packet_new_side_data", "av_strdup", "av_get_random_seed", "av_int_list_length_for_size", "avcodec_alloc_context3", "__gnu_Unwind_Save_VFP", "ff_put_wav_header", "avio_open_dyn_buf", "av_copy_packet", "av_picture_copy", "av_parser_parse2", "av_codec_get_pkt_timebase", "av_dynarray2_add", "av_default_get_category", "av_pkt_dump_log2"], "allstrings": ["Assertion %s failed at %s:%d\n", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavcodec/avpacket.c", "(unsigned)pkt->size <= 0x7fffffff - 16", "p-pkt->data == pkt->size", "size<=0x7fffffff && p - pkt->data >= size", "incorrect codes\n", "table[j][0] == index", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavcodec/bitstream.c", "vlc->table_size && vlc->table_size == vlc->table_allocated", "!vlc->table_size", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code in init_vlc\n", "needed %d had %d\n", "state == vlc", "ret >= 0", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "ljpeg", "sp5x", "jpegls", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "cyuv", "h264", "indeo3", "theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "8bps", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "tscc", "ulti", "qdraw", "vixl", "qpeg", "pgmyuv", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "wnv1", "aasc", "indeo2", "fraps", "truemotion2", "cscd", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "targa", "dsicinvideo", "tiertexseqvideo", "tiff", "dnxhd", "sgirle", "bethsoftvid", "vp6a", "sunrast", "indeo4", "indeo5", "mimic", "escape124", "dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "iff_byterun1", "kgv1", "pictor", "ansi", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "wmv3image", "vc1image", "utvideo", "bmv_video", "vble", "dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "012v", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "sanm", "paf_video", "avrn", "cpia", "xface", "brender_pix", "webp", "hnm4video", "hevc", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "shorten", "alac", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "voxware", "nellymoser", "musepack8", "speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "eac3", "sipr", "twinvq", "truehd", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "aac_latm", "qdmc", "celt", "g723_1", "g729", "8svx_exp", "8svx_fib", "bmv_audio", "ralf", "ilbc", "vima", "wavesynth", "sonic", "sonicls", "paf_audio", "opus", "comfortnoise", "metasound", "evrc", "dvd_subtitle", "dvb_subtitle", "text", "xsub", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "NULL", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavcodec/options.c", "Tried to copy AVCodecContext %p into already-initialized %p\n", "AVSubtitleRect", "type", "flags", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "format", "channel_layout", "sample_rate", "AVCodecContext", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "qpel", "use 1/4-pel motion compensation", "loop", "use loop filter", "qscale", "use fixed qscale", "use gmc", "always try a mb with mv=<0,0>", "input_preserved", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "gray", "only decode/encode grayscale", "emu_edge", "do not draw edges", "psnr", "error[?] variables will be set during encoding", "truncated", "normalize adaptive quantization", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "fast", "allow non-spec-compliant speedup tricks", "flags2", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "chunks", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "me_method", "set motion estimation method", "zero", "zero motion estimation (fastest)", "full", "full motion estimation (slowest)", "epzs", "EPZS motion estimation (default)", "esa motion estimation (alias for full)", "tesa", "tesa motion estimation", "diamond motion estimation (alias for EPZS)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter", "iter motion estimation", "extradata_size", "time_base", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "delay", "qcomp", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "qblur", "video quantizer scale blur (VBR)", "qmin", "minimum video quantizer scale (VBR)", "qmax", "maximum video quantizer scale (VBR)", "qdiff", "maximum difference between the quantizer scales (VBR)", "set maximum number of B frames between non-B-frames", "b_qfactor", "QP factor between P- and B-frames", "rc_strategy", "ratecontrol method", "b_strategy", "strategy to choose between I/P/B-frames", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "work around not autodetected encoder bugs", "autodetect", "old_msmpeg4", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal VLC bug (autodetected per FOURCC)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "strict", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "buffer", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "mpeg_quant", "use MPEG quantizers instead of H.263", "qsquish", "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function)", "rc_qmod_amp", "experimental quantizer modulation", "rc_qmod_freq", "rc_override_count", "rc_eq", "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", "maxrate", "Set maximum bitrate tolerance (in bits/s). Requires bufsize to be set.", "minrate", "Set minimum bitrate tolerance (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "bufsize", "set ratecontrol buffer size (in bits)", "rc_buf_aggressivity", "currently useless", "i_qfactor", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "rc_init_cplx", "initial complexity for 1-pass encoding", "DCT algorithm", "auto", "autoselect a good one (default)", "fastint", "fast integer", "accurate integer", "altivec", "faan", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "idct", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvidmmx", "faani", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "deblock", "use strong deblock filter for damaged MBs", "bits_per_coded_sample", "pred", "prediction method", "left", "plane", "median", "aspect", "sample aspect ratio", "debug", "print specific debug info", "pict", "picture info", "rate control", "mb_type", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "bugs", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "vismv", "visualize motion vectors (MVs)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "mbcmp", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "dia_size", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast (default)", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "dctmax", "chroma", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "subq", "sub-pel motion estimation quality", "dtg_active_format", "me_range", "limit motion vectors range (1023 for DivX player)", "ibias", "intra quant bias", "pbias", "inter quant bias", "global_quality", "coder", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp (default)", "bits", "use fewest bits", "use best rate distortion", "stream_codec_tag", "sc_threshold", "scene change threshold", "lmin", "minimum Lagrange factor (VBR)", "lmax", "maximum Lagrange factor (VBR)", "noise reduction", "rc_init_occupancy", "number of bits which should be loaded into the rc buffer before decoding starts", "error", "threads", "autodetect a suitable number of threads to use", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "level", "lowres", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "border_mask", "increase the quantizer for macroblocks close to borders", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "none", "discard no frame", "default", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscale frames for dynamic B-frame decision", "keyint_min", "minimum interval between IDR-frames", "refs", "reference frames to consider for motion compensation", "chromaoffset", "chroma QP offset from luma", "trellis", "rate-distortion optimal quantization", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "b_sensitivity", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "request_channels", "set desired number of audio channels", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_trc", "colorspace", "color_range", "chroma_sample_location", "log_level_offset", "set the log level offset", "slices", "number of slices, used in parallelized encoding", "thread_type", "select multithreading type", "slice", "frame", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "refcounted_frames", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavcodec/pthread_frame.c", "%p finished %d field %d\n", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "Final thread update failed\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "thread_get_buffer() failed\n", "thread_release_buffer called on pic %p\n", "(avctx->bits_per_coded_sample & 0x1f) == 2", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavcodec/rawdec.c", "Invalid buffer size, packet size %d < expected frame_size %d\n", "I420", "yuv2", "YVYU", "Invalid pixel format.\n", "BottomUp", "rawdec", "top field first", "s->codec_type == AVMEDIA_TYPE_VIDEO", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavcodec/utils.c", "Failed to set dimensions %d %d\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "PARAM_CHANGE side data too small.\n", "desc->flags & (1 << 4)", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "default_get_buffer called on pic %p\n", "frame->nb_extended_buf == 0", "default_get_buffer called on frame %p", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "video_get_buffer: image parameters invalid\n", "get_buffer() failed\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "reget_buffer() failed\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %lld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %lld)\n", "Failed to allocate packet of size %lld\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "Provided packet is too small, needs to be %d\n", "avctx->codec->encode2", "ret <= 0", "buffer smaller than minimum size\n", "start_display_time must be 0.\n", "Invalid media type for video\n", "Error applying parameter changes.\n", "!picture->extended_data || picture->extended_data == picture->data", "invalid packet: NULL data, size != 0\n", "Invalid media type for audio\n", "skip %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "Custom get_buffer() for use withavcodec_decode_audio3() detected. Overriding with avcodec_default_get_buffer\n", "Please port your application to avcodec_decode_audio4()\n", "output buffer size is too small for the current frame (%d < %d)\n", "Invalid media type for subtitles\n", "!\"requesting subtitles recoding without iconv\"", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "unknown_codec", "Codec 0x%x is not in the full list.\n", "[%d]", "--target-os=linux --prefix=./android/armv5 --enable-cross-compile --extra-libs=-lgcc --arch=arm --cc=/Users/jdperlow/dev/android-ndk-r9b/toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-gcc --cross-prefix=/Users/jdperlow/dev/android-ndk-r9b/toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi- --nm=/Users/jdperlow/dev/android-ndk-r9b/toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm --sysroot=/Users/jdperlow/dev/android-ndk-r9b/platforms/android-9/arch-arm/ --extra-cflags=' -O3 -fpic -DANDROID -DHAVE_SYS_UIO_H=1 -Dipv6mr_interface=ipv6mr_ifindex -fasm -Wno-psabi -fno-short-enums -fno-strict-aliasing -finline-limit=300 -marm -march=armv5 ' --disable-shared --enable-static --extra-ldflags='-Wl,-rpath-link=/Users/jdperlow/dev/android-ndk-r9b/platforms/android-9/arch-arm//usr/lib -L/Users/jdperlow/dev/android-ndk-r9b/platforms/android-9/arch-arm//usr/lib -nostdlib -lc -lm -ldl -llog' --disable-everything --disable-ffplay --enable-small --enable-protocol=file --enable-avformat --enable-avcodec --enable-muxer=mp4 --enable-muxer=h264 --enable-muxer=latm --enable-muxer=mpegts --enable-demuxer=mov --disable-network --disable-avfilter --disable-avdevice --disable-neon --disable-doc --disable-error-resilience --disable-avio_reading_example --disable-avcodec_example --disable-demuxing_decoding_example --disable-filter_audio_example --disable-filtering_audio_example --disable-filtering_video_example --disable-metadata_example --disable-muxing_example --disable-remuxing_example --disable-resampling_audio_example --disable-scaling_video_example --disable-transcode_aac_example --disable-zlib --disable-armv5te --disable-armv6 --disable-armv6t2 --disable-asm", "libavcodec license: LGPL version 2.1 or later", "tv, ", "pc, ", "%s: %s", " (%s)", " (%s / 0x%04X)", ", %s", "%d bpc, ", "%s, ", ", %dx%d", " [SAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", ", %d Hz", ", pass 1", ", pass 2", ", %d kb/s", ", max. %d kb/s", "avcodec_encode_audio() does not support this codec\n", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/MPlayer/incoming/ and contact the ffmpeg-devel mailing list.\n", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "ff_avcodec_locked", "Insufficient thread locking around avcodec_open/close()\n", "No lock manager is set, please see av_lockmgr_register()\n", "!ff_avcodec_locked", "encoder", "decoder", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Channel layout not specified\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "dimensions not set\n", "Bitrate %d is extremely low, maybe you mean %dk\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "Specified sample rate %d is not supported\n", "Specified channel layout '%s' is not supported\n", "p <= end", "ADTS frame size too large: %u (max %d)\n", "MPEG-4 AOT %d is not allowed in ADTS\n", "Escape sample rate index illegal in ADTS\n", "960/120 MDCT window is not allowed in ADTS\n", "Scalable configurations are not allowed in ADTS\n", "Extension flag is not allowed in ADTS\n", "adts", "audio/aac", "aac,adts", "ADTS muxer", "write_apetag", "Enable APE tag writing", "Invalid APE tag key '%s'.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "file", "No URL Protocols are registered. Missing call to av_register_all()?\n", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "Key '%s' not found.\n", "Error parsing options string %s\n", "https:", "https protocol not found, recompile with openssl or gnutls enabled.\n", "URLContext", "Invaid UTF8 sequence in avio_put_str16le\n", "!s->write_flag", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavformat/aviobuf.c", "len >= max_buffer_size", "Statistics: %d seeks, %d writeouts\n", "Statistics: %lld bytes read, %d seeks\n", "AVIOContext", "file:", "truncate", "truncate existing files on write", "blocksize", "set I/O operation maximum block size", "segment", "ssegment", "title", "artist", "album", "date", "comment", "track", "genre", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Jazz", "Metal", "New Age", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Gangsta", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Ballad", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "PRIV", "Failed to alloc %zu bytes\n", "Failed to alloc %d bytes\n", "Error reading GEOB frame, data truncated.\n", "GEOB", "Error reading frame %s, skipped\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "APIC", "TCON", "(%d)", "TXXX", "No AVFormatContext, skipped ID3 chapter data\n", "encrypted", "compressed", "encrypted and compressed", "extended header too long.", "invalid extended header length", "compression", "version", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Skipping %s ID3v2 frame %s.\n", "invalid frame id, assuming padding\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "ID3v2.%d tag skipped, cannot handle %s\n", "CHAP", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "encoded_by", "album_artist", "performer", "TDRL", "TDRC", "TDEN", "creation_time", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "composer", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "language", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "jpeg", "ljpg", "mpg1-img", "mpg2-img", "mpg4-img", "ffv1-img", "im24", "im32", "sunras", "yuv10", "codec open in read_dec_config_descr\n", "ADTS header detected - ADTS will not be incorrectly muxed into LATM\n", "LATM packet size larger than maximum size 0x1fff\n", "Extradata is larger than currently supported.\n", "BUG: ALS offset is not byte-aligned\n", "Muxing MPEG-4 AOT %d in LATM is not supported\n", "latm", "audio/MP4A-LATM", "latm,loas", "LATM/LOAS muxer", "smc-interval", "StreamMuxConfig interval.", "Service01", "FFmpeg", "service_name", "service_provider", "Invalid stream id %d, must be less than 8191\n", "Duplicate stream id %d\n", "frame size not set\n", "muxrate VBR, ", "muxrate %d, ", "pcr every %d pkts, sdt every %d, pat/pmt every %d pkts\n", "m2ts", "flag", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavformat/mpegtsenc.c", "dts < pcr, TS is invalid\n", "pkt[3] & 0x20", "resend_headers option is deprecated, use -mpegts_flags resend_headers\n", "first pts value must be set\n", "H.264 bitstream malformed, no startcode found, use the h264_mp4toannexb bitstream filter (-bsf h264_mp4toannexb)\n", "H.264 bitstream error, startcode missing\n", "AAC packet too short\n", "AAC bitstream not in ADTS format and extradata missing\n", "!ts_st->payload_size", "mpegts", "video/x-mpegts", "ts,m2t,m2ts,mts", "MPEGTS muxer", "mpegts_transport_stream_id", "Set transport_stream_id field.", "mpegts_original_network_id", "Set original_network_id field.", "mpegts_service_id", "Set service_id field.", "mpegts_pmt_start_pid", "Set the first pid of the PMT.", "mpegts_start_pid", "Set the first pid.", "mpegts_m2ts_mode", "Enable m2ts mode.", "muxrate", "pes_payload_size", "Minimum PES packet payload in bytes", "mpegts_flags", "MPEG-TS muxing flags", "resend_headers", "Reemit PAT/PMT before writing the next packet", "Use LATM packetization for AAC", "mpegts_copyts", "don't offset dts/pts", "tables_version", "set PAT, PMT and SDT version", "this file requires zlib support compiled in\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "Unknown MOV field order 0x%04x\n", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Broken file, trak/mdat not at top-level\n", "overread end of atom '%.4s' by %lld bytes\n", "Found duplicated MOOV Atom. Skipped it\n", "%d/%d", "systemBitrate=\"", "could not find corresponding trex\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "Invalid sample_count=%d\n", "multiple edit list entries, a/v desync might occur, patch welcome\n", "rotate", "Invalid sample field size %d\n", "handler_name", "qt  ", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "compatible_brands", "Using absolute path on user request, this is a possible security issue\n", "%Y-%m-%d %H:%M:%S", "Multiple mdhd?\n", "Version %d", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "stream %d, offset 0x%llx: partial file\n", "Cannot append palette to packet\n", "root", "could not find corresponding track id %d\n", "stream %d, timescale not set\n", "stream %d, missing mandatory atoms, broken header\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "error unaligned chunk\n", "wrong chunk count %d\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "error reading header: %d\n", "moov atom not found\n", "Chapter %d not found in file\n", "timecode", "Referenced QT chapter track not found\n", "tmcd", "grouping", "lyrics", "make", "model", "location", "description", "synopsis", "show", "episode_id", "network", "episode_sort", "season_number", "media_type", "hd_video", "gapless_playback", "iTunSMPB", "%*X %X %X %X", "cdec", "premiere_version", "quicktime_version", "Unknown cover type: 0x%x.\n", "Error parsing cover art.\n", "%s-%s", "truncated extradata\n", "get_wav_header failed\n", "CTTS invalid\n", "invalid size %lld in stsd\n", "multiple fourcc not supported\n", "Concatenated H.264 or H.265 might not play correctly.\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "stsd", "avc1", "hvc1", "hev1", "mp4s", "mov,mp4,m4a,3gp,3g2,mj2", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "ignore_editlist", "stss", "stps", "next_dts >= 0", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavformat/movenc.c", "next_dts <= 0x7fffffff", "mhlr", "url ", "DataHandler", "dhlr", "vide", "VideoHandler", "soun", "SoundHandler", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "clcp", "ClosedCaptionHandler", "sbtl", "Unknown hldr_type for %s / 0x%04X, writing dummy values\n", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "a=control:streamid=%d\r\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "Lucida Grande", "yrrc", "albm", "disk", "trkn", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "CodecPrivateData", "not writing 'chan' tag due to lack of channel information\n", "lpcm", "av_rescale_rnd(track->cluster[0].dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "XDCAM", " HD422", " %d%c", "fps %d is too large\n", "Lavc55.52.102", "2006/04/01 11:11:11", "perf", "titl", "auth", "author", "gnre", "dscp", "cprt", "aART", "encoding_tool", "Lavf55.34.100", "desc", "ldes", "tvsh", "tven", "tvnn", "tves", "tvsn", "stik", "hdvd", "pgap", "tmpo", "Application provided duration: %lld / timestamp: %lld is out of range for mov/mp4 format\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Malformed AAC bitstream detected: use audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "aac bitstream error\n", "pts has no value\n", "Starting second pass: moving the moov atom to the beginning of the file\n", "Unable to re-open %s output file for the second pass (faststart)\n", "reserved_moov_size is too small, needed %lld additional\n", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "wide", "free", "video", "audio", "ipod", "ismv", "The faststart flag is incompatible with fragmentation and custom IO, disabling faststart\n", "muxer does not support non seekable output\n", "PSP mode need one video and one audio stream\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "Warning, extension is not .m4a nor .m4v Quicktime/Ipod might not play the file\n", "unsupported height for dv codec\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not supported\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<head>\n", "<meta name=\"creator\" content=\"%s\" />\n", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%d\">\n", "systemBitrate", "trackID", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "application/mp4", "mp4 muxer", "mov muxer", "movflags", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "maximum moov size so it can be placed at the begin", "empty_moov", "Make the initial moov atom empty (not supported by QuickTime)", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "Write separate moof/mdat atoms for each track", "frag_custom", "Flush fragments on caller requests", "isml", "Create a live smooth streaming feed (for pushing to a publishing point)", "faststart", "Run a second pass to put the index (moov atom) at the beginning of the file", "omit_tfhd_offset", "Omit the base data offset in tfhd atoms", "rtpflags", "RTP muxer flags", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "rfc2190", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "skip_rtcp", "Don't send RTCP sender reports", "h264_mode0", "Use mode 0 for H264 in RTP", "send_bye", "Send RTCP BYE packets when finishing", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "frag_duration", "Maximum fragment duration", "min_frag_duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "Number of lookahead entries for ISM files", "use_editlist", "use edit list", "video_track_timescale", "set timescale of all video tracks", "Unable to initialize hinting of stream %d\n", "rtpo", "NOPTS", "%lld", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "pkt->size == ((-0x7fffffff-1) / 3 * 2 + (int)sizeof(AVFrame))", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavformat/mux.c", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Out of memory\n", "No streams to mux were specified\n", "sample rate not set\n", "time base not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n", "Codec for stream %d does not use global headers but container format requires global headers\n", "((AVFrame *)pkt->data)->buf", "Delay between the first packet and last packet in the muxing queue is %lld > %lld: forcing output\n", "s->oformat", "AVFormatContext", "avioflags", "direct", "reduce buffering", "probesize", "set probing size", "packetsize", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "max_delay", "maximum muxing or demuxing delay in microseconds", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_zero", "make_non_negative", "shift timestamps so they are non negative", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "%s files have exactly one stream\n", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\n", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "(start&1) == 0", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavformat/riffenc.c", "LIST", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "payload_type", "%08x ", " %02x", "unspecified frame size", "unspecified sample format", "unspecified sample rate", "unspecified number of channels", "no decodable DTS frames", "unspecified size", "unspecified pixel format", "no frame in rv30/40 and no sar", "unknown codec", "mp4v", "*pkt_buffer", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavformat/utils.c", ", %3.2f %s", ", %1.0f %s", ", %1.0fk %s", "%sMetadata:\n", "%s  %-16s: ", "\n%s  %-16s: ", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ": %s", ", SAR %d:%d DAR %d:%d", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "    ", "libavformat license: LGPL version 2.1 or later", "Truncating packet of size %d to %lld\n", "probing stream %d pp:%d\n", "Failed to reallocate probe buffer for stream %d\n", "nothing to probe for stream %d\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "probed stream %d\n", "probed stream %d failed\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "audio/aacp", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "DTS %lli < %lli out of order\n", "invalid dts/pts combination %lli\n", "first_dts %s not matching first dts %s (pts %s, duration %d) in the queue\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "tmp_pos > pos_max", "read_timestamp() failed in the middle\n", "index < st->nb_index_entries", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%d, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%d, flags=%d\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "Ignoring outlier non primary stream starttime %f\n", "Before avformat_find_stream_info() pos: %lld bytes read:%lld seeks:%d\n", "Failed to open codec in av_find_stream_info\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %d bytes reached\n", "image2", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %lld, packet %d with DTS %lld\n", "DTS discontinuity in stream %d: packet %d with DTS %lld, packet %d with DTS %lld\n", "max_analyze_duration %d reached at %lld microseconds\n", "decoding for stream %d failed\n", "mpeg", "start time is not set in estimate_timings_from_pts\n", "Estimating duration from bitrate, this may be inaccurate\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %lld bytes read:%lld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "stream index %d is not valid\n", "Output", "Input", "from", "%s #%d, %s, %s '%s':\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%d.%06d", ", bitrate: ", "%d kb/s", "    Chapter #%d.%d: ", "start %f, ", "end %f\n", "name", "  Program %d %s\n", "  No Program\n", "%0*d", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "demuxer does not support additional id3 data, skipping\n", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", " \t\r\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "%Y - %m - %d %H:%M:%S", "%Y - %m - %dT%H:%M:%S", "Invalid stream specifier: %s.\n", "loas", "mpegvideo", "'\\''", "Pool race dectected, spining to avoid overallocation and eventual OOM\n", "%d channels", "Single channel layout '%.*s' is interpreted as a number of channels, switch to the syntax '%.*sc' otherwise it will be interpreted as a channel layout number in a later version\n", "mono", "stereo", "3.0(back)", "quad", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "downmix", "front left", "front right", "front center", "low frequency", "back left", "back right", "front left-of-center", "front right-of-center", "back center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "detected %d logical cores\n", "cpuflags", "Error number %d occurred", "BSF_NOT_FOUND", "Bitstream filter not found", "Internal bug, should not have happened", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "Generic error in an external library", "FILTER_NOT_FOUND", "Filter not found", "INVALIDDATA", "Invalid data found when processing input", "MUXER_NOT_FOUND", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "PATCHWELCOME", "Not yet implemented in FFmpeg, patches welcome", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "Undefined constant or missing '(' in '%s'\n", "Missing ')' in '%s'\n", "Missing ')' or too many args in '%s'\n", "sinh", "cosh", "tanh", "atan", "asin", "acos", "time", "squish", "gauss", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "Unknown function in '%s'\n", "Invalid chars '%s' at the end of expression '%s'\n", "Eval", "Failed to set close on exec\n", "bt709", "bt470bg", "smpte170m", "smpte240m", "YCgCo", "Picture size %ux%u is invalid\n", "abs(src_linesize) >= bytewidth", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavutil/imgutils.c", "abs(dst_linesize) >= bytewidth", "av_image_get_linesize failed\n", "IMGUTILS", "[%s @ %p] ", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "TERM", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "%s%s%s", "    Last message repeated %d times\r", "    Last message repeated %d times\n", " is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "in_ts != ((int64_t)0x8000000000000000ULL)", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavutil/mathematics.c", "duration >= 0", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "Unable to parse option value \"%s\" as %s\n", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "Unable to parse option value \"%s\" as image size\n", "Unable to parse option value \"%s\" as video rate\n", "Unable to parse option value \"%s\" as color\n", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "-FLT_MAX", "-FLT_MIN", "DBL_MAX", "DBL_MIN", "-DBL_MAX", "-DBL_MIN", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "The value set by option '%s' is not a %s format", "pixel", "sample", "The value set by option '%s' is not a channel layout.\n", "0x%08X", "%02X", "%dx%d", "%llid:%02d:%02d.%06d", "0x%02x%02x%02x%02x", "0x%llx", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a %s format.\n", "The value for option '%s' is not a channel layout.\n", "%d%*1[:/]%d%c", "Unable to parse option value \"%s\"\n", "pixel format", "sample format", "Unable to parse option value \"%s\" as duration\n", "Unable to parse option value \"%s\" as channel layout\n", "Invalid option type.\n", "AVOption type %d of option %s not implemented yet\n", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "Error setting option %s to value %s.\n", "     %-15s ", "  %s%-17s ", "%-12s ", "<flags>", "<int>", "<int64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", " (from ", " to ", " (default ", "%llX", "\"%s\"", "%s AVOptions:\n", "QP2LAMBDA", "%d:%d%c", "bikeshed", "0123456789ABCDEFabcdef", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Cannot find color '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "%Y-%m-%d", "%Y%m%d", "%H:%M:%S", "%H%M%S", "%J:%M:%S", "%M:%S", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "Snow", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "ntsc", "qntsc", "qpal", "sntsc", "spal", "film", "ntsc-film", "sqcif", "qcif", "4cif", "16cif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "2kflat", "2kscope", "4kflat", "4kscope", "hqvga", "wqvga", "fwqvga", "hvga", "bgra", "rgba", "rgb32", "bgr32", "%s%s", "name nb_components nb_bits", "%-11s %7d %10d", "d->log2_chroma_w <= 3", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavutil/pixdesc.c", "d->log2_chroma_h <= 3", "d->nb_components <= 4", "d->name && d->name[0]", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step_minus1 && !c->offset_plus1 && !c->shift && !c->depth_minus1", "c->step_minus1 >= c->depth_minus1", "8*(c->step_minus1+1) >= c->depth_minus1+1", "bayer_", "tmp[0] == 0 && tmp[1] == 0", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "gray16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "0rgb", "rgb0", "0bgr", "bgr0", "yuva444p", "yuva422p", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "gbrap", "gbrap16be", "gbrap16le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "/dev/urandom", "/dev/random", "sizeof(tmp) >= av_sha_size", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavutil/random_seed.c", "name   depth", "%-6s   %2d ", "Timecode frame rate must be specified\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Timecode frame rate %d/%d not supported\n", "%s%02d:%02d:%02d%c%02d", "%02u:%02u:%02u%c%02u", "%d:%d:%d%c%d", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "Libavutil has been linked to a broken llrint()\n", "libavutil license: LGPL version 2.1 or later", "data", "subtitle", "attachment", "!\"valid element size\"", "/data/buildslave/3/builders/relbranch_build_fbandroid_app/build/native/fb-ffmpeg/../../native//third-party/ffmpeg/libavutil/utils.c", "/proc/self/auxv", "/proc/cpuinfo", "Features", " edsp ", " tls ", " thumbee ", " vfp ", " vfpv3 ", " neon ", "I420", "IYUV", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "b48r,", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "tx3g806cc608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "WMA2cvessevcvmssssmv", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle RIGSrle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVupf", "ap4h3", "icod", "562H#", "\u000b\t\u000b\t", "avc1\r", "text", "avc1\r", "mp4a", "tx3g", "avc1k", "VP6A]", "VP6F", "yuv2", "yuvs", "2vuy", "raw  ", "BGRA ", "RGBA ", "ABGR ", "b48r0", "CNOSH ", "LNOSH ", "U263\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "mjpa\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "ZLIBWONSSNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Z", "VMnc^", "tga >", "MPNG>", "PNG1%", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECOP14YY41P3", "SVQ3V210012vV210a12vM2G", "G2M2M2G", "G2M3M2G", "FICV", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "0123456789abcdef0123456789ABCDEF", "s16p", "s32p", "fltp", "dblp", "IPBSipb"], "stringidentifiers": ["mpeg1video", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "ljpeg", "sp5x", "jpegls", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "cyuv", "h264", "indeo3", "theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "tscc", "ulti", "qdraw", "vixl", "qpeg", "pgmyuv", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "wnv1", "aasc", "indeo2", "fraps", "truemotion2", "cscd", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "targa", "dsicinvideo", "tiertexseqvideo", "tiff", "dnxhd", "sgirle", "bethsoftvid", "vp6a", "sunrast", "indeo4", "indeo5", "mimic", "escape124", "dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "iff_byterun1", "kgv1", "pictor", "ansi", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "wmv3image", "vc1image", "utvideo", "bmv_video", "vble", "dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "sanm", "paf_video", "avrn", "cpia", "xface", "brender_pix", "webp", "hnm4video", "hevc", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "shorten", "alac", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "voxware", "nellymoser", "musepack8", "speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "eac3", "sipr", "twinvq", "truehd", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "aac_latm", "qdmc", "celt", "g723_1", "g729", "bmv_audio", "ralf", "ilbc", "vima", "wavesynth", "sonic", "sonicls", "paf_audio", "opus", "comfortnoise", "metasound", "evrc", "dvd_subtitle", "dvb_subtitle", "text", "xsub", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "NULL", "AVSubtitleRect", "type", "flags", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "format", "channel_layout", "sample_rate", "AVCodecContext", "unaligned", "qpel", "loop", "qscale", "input_preserved", "pass1", "pass2", "gray", "emu_edge", "psnr", "truncated", "ildct", "low_delay", "global_header", "bitexact", "ilme", "cgop", "output_corrupt", "fast", "flags2", "noout", "ignorecrop", "local_header", "chunks", "showall", "me_method", "zero", "full", "epzs", "tesa", "phods", "iter", "extradata_size", "time_base", "cutoff", "frame_size", "frame_number", "delay", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "rc_strategy", "b_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "strict", "very", "normal", "unofficial", "experimental", "b_qoffset", "err_detect", "crccheck", "bitstream", "buffer", "explode", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "minrate", "bufsize", "rc_buf_aggressivity", "i_qfactor", "i_qoffset", "rc_init_cplx", "auto", "fastint", "altivec", "faan", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "idct", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvidmmx", "faani", "slice_count", "guess_mvs", "deblock", "bits_per_coded_sample", "pred", "left", "plane", "median", "aspect", "debug", "pict", "mb_type", "dct_coeff", "skip", "startcode", "mmco", "bugs", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "vismv", "debug_mv", "cmp_func", "subcmp", "mbcmp", "ildctcmp", "dia_size", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "chroma", "pre_dia_size", "subq", "dtg_active_format", "me_range", "ibias", "pbias", "global_quality", "coder", "deflate", "context", "slice_flags", "xvmc_acceleration", "bits", "stream_codec_tag", "sc_threshold", "lmin", "lmax", "rc_init_occupancy", "error", "threads", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "level", "lowres", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "default", "noref", "bidir", "nokey", "bidir_refine", "brd_scale", "keyint_min", "refs", "chromaoffset", "trellis", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "request_channels", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_trc", "colorspace", "color_range", "chroma_sample_location", "log_level_offset", "slices", "thread_type", "slice", "frame", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "skip_alpha", "field_order", "progressive", "I420", "yuv2", "YVYU", "BottomUp", "rawdec", "unknown_codec", "ff_avcodec_locked", "encoder", "decoder", "adts", "write_apetag", "APETAGEX", "file", "URLContext", "AVIOContext", "truncate", "blocksize", "segment", "ssegment", "title", "artist", "album", "date", "comment", "track", "genre", "Blues", "Country", "Dance", "Disco", "Funk", "Grunge", "Jazz", "Metal", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Gangsta", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Folk", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Ballad", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "PRIV", "GEOB", "APIC", "TCON", "TXXX", "encrypted", "compressed", "compression", "version", "TYER", "TDAT", "TIME", "CHAP", "Conductor", "Composer", "Illustration", "encoded_by", "album_artist", "performer", "TDRL", "TDRC", "TDEN", "creation_time", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "composer", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "language", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "jpeg", "ljpg", "im24", "im32", "sunras", "yuv10", "latm", "Service01", "FFmpeg", "service_name", "service_provider", "m2ts", "flag", "mpegts", "mpegts_transport_stream_id", "mpegts_original_network_id", "mpegts_service_id", "mpegts_pmt_start_pid", "mpegts_start_pid", "mpegts_m2ts_mode", "muxrate", "pes_payload_size", "mpegts_flags", "resend_headers", "mpegts_copyts", "tables_version", "rotate", "handler_name", "major_brand", "minor_version", "compatible_brands", "root", "timecode", "tmcd", "grouping", "lyrics", "make", "model", "location", "description", "synopsis", "show", "episode_id", "network", "episode_sort", "season_number", "media_type", "hd_video", "gapless_playback", "iTunSMPB", "cdec", "premiere_version", "quicktime_version", "stsd", "avc1", "hvc1", "hev1", "mp4s", "use_absolute_path", "ignore_editlist", "stss", "stps", "mhlr", "DataHandler", "dhlr", "vide", "VideoHandler", "soun", "SoundHandler", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "clcp", "ClosedCaptionHandler", "sbtl", "yrrc", "albm", "disk", "trkn", "CodecPrivateData", "lpcm", "XDCAM", "perf", "titl", "auth", "author", "gnre", "dscp", "cprt", "aART", "encoding_tool", "desc", "ldes", "tvsh", "tven", "tvnn", "tves", "tvsn", "stik", "hdvd", "pgap", "tmpo", "wide", "free", "video", "audio", "ipod", "ismv", "systemBitrate", "trackID", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "movflags", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "rtpflags", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "frag_duration", "min_frag_duration", "frag_size", "ism_lookahead", "use_editlist", "video_track_timescale", "rtpo", "NOPTS", "AVFormatContext", "avioflags", "direct", "probesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "use_wallclock_as_timestamps", "avoid_negative_ts", "disabled", "make_zero", "make_non_negative", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "LIST", "payload_type", "mp4v", "mime_type", "image2", "mpeg", "Output", "Input", "from", "name", "loas", "mpegvideo", "mono", "stereo", "quad", "hexagonal", "octagonal", "downmix", "LFE2", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INVALIDDATA", "MUXER_NOT_FOUND", "OPTION_NOT_FOUND", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "sinh", "cosh", "tanh", "atan", "asin", "acos", "time", "squish", "gauss", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "Eval", "bt709", "bt470bg", "smpte170m", "smpte240m", "YCgCo", "IMGUTILS", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "TERM", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "DBL_MAX", "DBL_MIN", "pixel", "sample", "QP2LAMBDA", "bikeshed", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "Snow", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "ntsc", "qntsc", "qpal", "sntsc", "spal", "film", "sqcif", "qcif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "hqvga", "wqvga", "fwqvga", "hvga", "bgra", "rgba", "rgb32", "bgr32", "bayer_", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "gray16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "rgb0", "bgr0", "yuva444p", "yuva422p", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "gbrap", "gbrap16be", "gbrap16le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "data", "subtitle", "attachment", "Features", "I420", "IYUV", "BGR0C", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "tx3g806cc608", "sac3", "alac", "twos", "lpcm", "WMA2cvessevcvmssssmv", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVupf", "ap4h3", "icod", "text", "mp4a", "tx3g", "avc1k", "VP6F", "yuv2", "yuvs", "b48r0", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Z", "CLJRu", "LAGSl", "ZECOP14YY41P3", "SVQ3V210012vV210a12vM2G", "G2M2M2G", "G2M3M2G", "FICV", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "s16p", "s32p", "fltp", "dblp", "IPBSipb"], "debugstrings": ["old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "libavcodec license: LGPL version 2.1 or later", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "Unsupported tag version. (>=%d)\n", "version", "tables_version", "set PAT, PMT and SDT version", "minor_version", "Version %d", "premiere_version", "quicktime_version", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "libavformat license: LGPL version 2.1 or later", "libavutil license: LGPL version 2.1 or later", "GCC: (GNU) 4.6 20120106 (prerelease)", "GCC: (GNU) 4.8"], "localsymbols": [""], "dependencies": ["libm.so", "libc.so", "libdl.so", "libstdc++.so"], "elfname": "libfb_ffmpeg.so"}