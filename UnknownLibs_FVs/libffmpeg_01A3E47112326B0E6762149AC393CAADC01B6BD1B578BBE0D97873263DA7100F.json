{"globalvars": ["nb_filtergraphs", "resample_opts", "nb_input_streams", "max_error_rate", "copy_tb", "nb_output_files", "copy_ts", "hw_device_ctx", "ntid", "swr_opts", "int_cb", "frame_drop_threshold", "filter_complex_nbthreads", "output_files", "audio_sync_method", "hwaccel_lax_profile_check", "do_benchmark_all", "frame_bits_per_raw_sample", "audio_drift_threshold", "abort_on_flags", "sws_dict", "program_name", "nb_input_files", "progress_avio", "nb_output_streams", "do_deinterlace", "vstats_filename", "stdin_interaction", "do_benchmark", "options", "input_streams", "dts_delta_threshold", "print_stats", "debug_ts", "qp_hist", "filter_nbthreads", "sdp_filename", "audio_volume", "vstats_version", "start_at_zero", "argvs", "do_hex_dump", "program_birth_year", "exit_on_error", "hide_banner", "dts_error_threshold", "do_pkt_dump", "num", "forced_keyframes_const_names", "hwaccels", "format_opts", "filtergraphs", "output_streams", "codec_opts", "video_sync_method", "input_files"], "importedglobals": ["__stack_chk_guard", "__sF"], "importedfunctions": ["write", "avformat_network_init", "av_parse_cpu_caps", "av_rescale", "av_get_channel_layout", "avcodec_decode_subtitle2", "av_parser_init", "av_strerror", "av_stream_get_end_pts", "av_fifo_size", "av_codec_next", "avio_open2", "av_log_set_flags", "av_frame_get_buffer", "av_opt_eval_int", "av_bsf_send_packet", "postproc_version", "av_buffersink_get_format", "av_stream_new_side_data", "avcodec_parameters_copy", "av_reallocp_array", "avio_open", "sws_get_class", "av_get_audio_frame_duration", "avformat_version", "av_frame_ref", "perror", "av_guess_codec", "av_opt_set_from_string", "avfilter_graph_config", "av_get_media_type_string", "avformat_get_class", "av_stream_get_recommended_encoder_configuration", "avcodec_find_encoder", "avcodec_get_name", "av_fifo_generic_write", "localtime", "avio_read", "av_program_add_stream_index", "av_log_default_callback", "round", "av_add_q", "av_bprint_chars", "av_frame_get_channels", "av_input_audio_device_next", "strtol", "avio_w8", "avcodec_descriptor_next", "avfilter_pad_get_type", "avformat_network_deinit", "av_reduce", "gmtime", "avformat_write_header", "av_frame_alloc", "av_fifo_free", "av_strtok", "av_input_video_device_next", "avcodec_flush_buffers", "av_buffersink_get_sample_rate", "av_opt_set_dict", "avio_seek", "strncmp", "fputs", "av_fifo_freep", "av_usleep", "av_log_get_flags", "av_get_pix_fmt", "av_calloc", "swresample_configuration", "swr_free", "avsubtitle_free", "av_stream_get_side_data", "__android_log_vprint", "av_bprintf", "av_mallocz", "av_frame_get_best_effort_timestamp", "av_init_packet", "av_buffersink_get_channel_layout", "av_parse_video_rate", "raise", "avcodec_parameters_free", "av_malloc", "sscanf", "avformat_transfer_internal_stream_timing_info", "avdevice_configuration", "setvbuf", "avfilter_graph_request_oldest", "av_codec_get_id", "strchr", "av_get_exact_bits_per_sample", "avfilter_graph_create_filter", "fwrite", "avcodec_descriptor_get", "abort", "avio_close", "av_thread_message_queue_set_err_recv", "av_realloc_array", "exit", "avcodec_parameters_from_context", "av_get_standard_channel_layout", "avio_open_dyn_buf", "avfilter_graph_parse2", "av_bsf_free", "av_codec_set_lowres", "av_format_set_subtitle_codec", "av_free", "av_dict_free", "avcodec_open2", "avcodec_encode_subtitle", "fputc", "avfilter_get_by_name", "free", "av_get_channel_description", "av_buffer_ref", "lrint", "av_buffer_default_free", "av_find_nearest_q_idx", "avdevice_list_output_sinks", "av_mul_q", "av_iformat_next", "av_frame_clone", "av_format_set_data_codec", "swscale_version", "avformat_match_stream_specifier", "postproc_configuration", "time", "av_read_frame", "avio_size", "strlen", "vsnprintf", "av_thread_message_queue_recv", "av_stream_get_parser", "av_fifo_alloc", "av_buffersink_get_channels", "av_rescale_q_rnd", "av_dict_set_int", "av_fopen_utf8", "av_opt_set", "swscale_configuration", "avcodec_default_get_buffer2", "av_log_set_callback", "av_dict_set", "av_log_get_level", "avfilter_graph_send_command", "avfilter_init_str", "av_thread_message_queue_alloc", "av_buffersrc_parameters_alloc", "av_bprint_finalize", "av_buffersink_get_type", "av_display_rotation_get", "avio_check", "av_filename_number_test", "av_buffersink_set_frame_size", "av_guess_frame_rate", "av_log_format_line", "av_thread_message_queue_free", "av_strtod", "avcodec_find_decoder", "avcodec_configuration", "av_realloc_f", "av_bsf_alloc", "putchar", "avio_enum_protocols", "sws_alloc_context", "av_buffersrc_get_nb_failed_requests", "av_packet_get_side_data", "avcodec_free_context", "avformat_open_input", "avio_printf", "getrusage", "av_buffersink_get_h", "avpicture_fill", "av_get_bits_per_pixel", "fgets", "av_force_cpu_flags", "read", "avdevice_list_input_sources", "malloc", "getchar", "av_opt_child_class_next", "av_strlcatf", "avio_flush", "avdevice_register_all", "av_buffersink_get_hw_frames_ctx", "av_gettime_relative", "av_codec_get_lowres", "av_get_token", "puts", "av_register_all", "av_buffersink_get_frame_rate", "avfilter_inout_free", "av_parse_ratio", "av_buffersrc_add_frame_flags", "av_bsf_get_by_name", "avfilter_register_all", "av_copy_packet_side_data", "av_write_trailer", "pthread_exit", "av_guess_format", "avcodec_parameters_alloc", "strstr", "avio_closep", "av_oformat_next", "sws_isSupportedOutput", "avfilter_link", "avcodec_register_all", "av_log_set_level", "avfilter_pad_get_name", "setrlimit", "avcodec_descriptor_get_by_name", "avio_find_protocol_name", "av_codec_set_pkt_timebase", "av_buffersink_get_sample_aspect_ratio", "av_strstart", "getenv", "av_frame_get_pkt_duration", "avcodec_version", "avformat_free_context", "av_thread_message_queue_set_err_send", "av_buffersrc_add_frame", "__stack_chk_fail", "av_find_input_format", "avformat_seek_file", "strcmp", "lrintf", "av_sdp_create", "av_bprint_init", "av_opt_next", "av_buffersrc_parameters_set", "avformat_query_codec", "av_get_channel_layout_nb_channels", "av_dict_parse_string", "avio_write", "strerror", "av_packet_ref", "pthread_create", "av_format_set_audio_codec", "av_get_default_channel_layout", "avio_close_dyn_buf", "avfilter_get_class", "av_fifo_generic_read", "memcpy", "av_new_program", "av_pix_fmt_desc_next", "av_expr_eval", "avformat_find_stream_info", "log10", "av_strdup", "avcodec_find_best_pix_fmt_of_2", "av_bsf_receive_packet", "__errno", "avcodec_receive_packet", "strtok", "strftime", "av_match_name", "av_expr_free", "av_buffersink_get_time_base", "av_frame_free", "av_get_known_color_name", "sws_freeContext", "avdevice_version", "av_buffersink_get_w", "avfilter_graph_queue_command", "av_rescale_delta", "av_codec_get_tag2", "avformat_configuration", "memcmp", "avcodec_get_class", "avfilter_configuration", "av_fifo_space", "av_dict_copy", "avdevice_free_list_devices", "strrchr", "av_get_channel_name", "avutil_configuration", "av_frame_unref", "av_max_alloc", "av_opt_find", "av_bsf_next", "av_buffer_unref", "avformat_close_input", "av_parser_close", "floor", "swresample_version", "av_opt_set_dict2", "swr_get_class", "av_interleaved_write_frame", "av_packet_rescale_ts", "av_fifo_realloc2", "av_asprintf", "av_opt_show2", "av_opt_set_int", "av_get_picture_type_char", "av_get_sample_fmt", "av_log2", "avcodec_parameters_to_context", "av_get_bytes_per_sample", "av_freep", "av_display_rotation_set", "swr_alloc", "av_get_channel_layout_string", "av_packet_unref", "fflush", "av_get_cpu_flags", "av_get_pix_fmt_name", "avfilter_pad_count", "av_parse_time", "av_buffer_create", "strcspn", "av_expr_parse", "avfilter_next", "fclose", "snprintf", "select", "fprintf", "avcodec_receive_frame", "av_rescale_q", "av_pix_fmt_desc_get", "avcodec_find_decoder_by_name", "avfilter_graph_free", "atoi", "av_get_sample_fmt_name", "vfprintf", "avcodec_copy_context", "av_codec_is_encoder", "av_format_set_video_codec", "avfilter_version", "ioctl", "avcodec_alloc_context3", "avfilter_graph_alloc", "avformat_alloc_output_context2", "bsd_signal", "avcodec_send_frame", "av_pkt_dump_log2", "av_codec_set_chroma_intra_matrix", "av_dump_format", "avutil_version", "sws_isSupportedInput", "av_seek_frame", "av_log", "av_compare_ts", "av_bsf_init", "av_strlcat", "av_strcasecmp", "av_thread_message_queue_send", "fopen", "av_opt_get_key_value", "av_buffersink_get_frame_flags", "__android_log_print", "avfilter_graph_set_auto_convert", "av_pix_fmt_desc_get_id", "av_parser_change", "avcodec_close", "avio_r8", "av_strlcpy", "av_packet_new_side_data", "avcodec_find_encoder_by_name", "av_frame_get_decode_error_flags", "qsort", "avcodec_send_packet", "av_dict_get", "avformat_alloc_context", "pthread_join", "av_default_item_name", "av_codec_is_decoder", "avcodec_get_context_defaults3", "avfilter_graph_alloc_filter", "av_opt_eval_flags", "avformat_new_stream", "av_parse_video_size", "av_output_video_device_next", "printf", "av_stream_get_codec_timebase", "av_output_audio_device_next", "av_get_sample_fmt_string"], "exportedfunctions": ["opt_default", "check_stream_specifier", "remove_avoptions", "init_complex_filtergraph", "show_usage", "show_filters", "show_formats", "callJavaMethod", "setup_find_stream_info_opts", "print_error", "parse_options", "show_license", "show_banner", "read_yesno", "parse_optgroup", "init_opts", "opt_loglevel", "configure_filtergraph", "ifilter_parameters_from_frame", "ffmpeg_thread_callback", "term_exit", "show_muxers", "term_init", "show_colors", "opt_timelimit", "get_rotation", "show_version", "uninit_opts", "split_commandline", "show_layouts", "parse_option", "ffmpeg_thread_run_cmd", "init_dynload", "init_simple_filtergraph", "ist_in_filtergraph", "show_help_options", "choose_pixel_fmt", "thread", "ffmpeg_progress", "opt_cpuflags", "callJavaMethodProgress", "opt_max_alloc", "ffmpeg_parse_options", "parse_number_or_die", "filtergraph_is_simple", "opt_report", "ffmpeg_exec", "ffmpeg_thread_exit", "show_help", "sub2video_update", "show_buildconf", "assert_avoptions", "show_demuxers", "uninit_parse_context", "guess_input_channel_layout", "filter_codec_opts", "Java_Jni_FFmpegCmd_exec", "show_protocols", "show_encoders", "show_sample_fmts", "show_sources", "show_decoders", "show_sinks", "exit_program", "parse_time_or_die", "check_filter_outputs", "Java_Jni_FFmpegCmd_exit", "show_help_children", "show_devices", "show_bsfs", "log_callback_help", "show_pix_fmts", "show_codecs", "grow_array", "get_preset_file", "choose_sample_fmt", "register_exit", "configure_output_filter", "locate_option", "parse_loglevel", "show_help_default"], "allstrings": ["FFmpeg_EpMedia", "---------------clazz isNULL---------------", "onExecuted", "(I)V", "---------------methodID isNULL---------------", "onProgress", "(F)V", "flags", "bicubic", "Expected number for %s but found: %s\n", "The value for %s was %s which is not within %f - %f\n", "Expected int64 for %s but found %s\n", "Invalid %s specification for %s: %s\n", "duration", "Option %s (%s) cannot be applied to %s %s -- you are trying to apply an input option to an output file or vice versa. Move this option before the file it belongs to.\n", "debug", "Directly using swscale dimensions/format options is not supported, please use the -s or -pix_fmt options\n", " matched as option '%s' (%s) with argument '%s'.\n", " matched as AVOption '%s' with argument '%s'.\n", "Error parsing option '%s' with argument '%s'.\n", " matched as option '%s' (%s) with argument 0.\n", "Unrecognized option '%s'.\n", "Trailing options were found on the commandline.\n", "Finished splitting the commandline.\n", "quiet", "panic", "fatal", "error", "warning", "info", "verbose", "trace", "This version of %s has nonfree parts compiled in.\nTherefore it is not legally redistributable.\n", " %-20s %s", "  %s\n", "C:/Users/Administrator/Desktop/ffmpeg3.3.4/armeabi-v7a-neon/armeabi-v7a-neon/share/ffmpeg", "Invalid stream specifier: %s.\n", "Array too big.\n", "Could not alloc buffer.\n", "Odd rotation angle.\nIf you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)", "Assertion %s failed at %s:%d\n", "E:/ijkPlayer/EpMedia/app/jnicode/jni/cmdutils.c", "global", "Out of memory building report file name\n", "Failed to open report \"%s\": %s\n", "%s started on %04d-%02d-%02d at %02d:%02d:%02d\nReport written to \"%s\"\n", "%04d%02d%02d-%02d%02d%02d", "%s version 3.3.4", " Copyright (c) %d-%d the FFmpeg developers", "%sbuilt with %s\n", "gcc 4.9 (GCC) 20140827 (prerelease)", "avfilter", "swscale", "swresample", "postproc", "encoders", "decoders", "%s:\n V..... = Video\n A..... = Audio\n S..... = Subtitle\n .F.... = Frame-level multithreading\n ..S... = Slice-level multithreading\n ...X.. = Codec is experimental\n ....B. = Supports draw_horiz_band\n .....D = Supports direct rendering method 1\n ------\n", "Codec '%s' is known to FFmpeg, but no %s for it are available. FFmpeg might need to be recompiled with additional external libraries.\n", "    Threading capabilities: ", "frame and slice", "frame", "    Supported framerates:", " %d/%d", "    Supported pixel formats:", "    Supported sample rates:", "    Supported sample formats:", "    Supported channel layouts:", "Unknown format '%s'.\n", "Demuxer %s [%s]:\n", "    Common extensions: %s.\n", "Muxer %s [%s]:\n", "    Mime type: %s.\n", "    Default video codec: %s.\n", "    Default audio codec: %s.\n", "    Default subtitle codec: %s.\n", "No filter name specified.\n", "Unknown filter '%s'.\n", "%s %s [%s]\n", "    Outputs:", "n_forced", "prev_forced_n", "prev_forced_t", "Option %s not found.\n", "Use -h to get full help or, even better, run 'man %s'\n", "Conversion failed!\n", "Press [q] to stop, [?] for help\n", "No more output streams to write to, finishing.\n", "Error while filtering: %s\n", "Nothing was written into output file %d (%s), because at least one of its streams received no packets.\n", "Error writing trailer of %s: %s\n", "Empty output\n", "Error closing logfile, loss of information possible: %s\n", "  Stream #%d:%d (%s) -> %s", "  File %s -> Stream #%d:%d\n", " -> Stream #%d:%d (%s)\n", "  Stream #%d:%d -> #%d:%d", " [sync #%d:%d]", "native", " (%s (%s) -> %s (%s))", "Decoder (codec %s) not found for input stream #%d:%d", "Warning using DVB subtitles for filtering and output at the same time is not fully supported, also see -compute_edt [0|1]\n", "threads", "auto", "%s hwaccel requested for input stream #%d:%d, but cannot be initialized.\n", "128000", "Error while opening encoder for output stream #%d:%d - maybe incorrect parameters such as bit_rate, rate, width or height", "The bitrate parameter is set too low. It takes bits/s as argument, not kbits/s\n", "Error initializing the output stream codec context.\n", "disposition", "default", "original", "comment", "lyrics", "karaoke", "forced", "hearing_impaired", "visual_impaired", "clean_effects", "captions", "descriptions", "metadata", "No information about the input framerate is available. Falling back to a default value of 25fps for output stream #%d:%d. Use the -r option if you want a different framerate.\n", "Frame rate very high for a muxer not efficiently supporting it.\nPlease consider specifying a lower framerate, a different muxer or -vsync 2\n", "No pixel format specified, %s for H.264 encoding chosen.\nUse -pix_fmt yuv420p for compatibility with outdated media players.\n", "No pixel format specified, %s for MPEG-2 encoding chosen.\nUse -pix_fmt yuv420p for compatibility with outdated media players.\n", "Invalid force_key_frames expression '%s'\n", "source", "E:/ijkPlayer/EpMedia/app/jnicode/jni/ffmpeg.c", "ist && !ost->filter", "Error setting up codec context options.\n", "-acodec copy and -vol are incompatible (frames are not decoded)\n", "Overriding aspect ratio with stream copy may produce invalid files\n", "Error initializing bitstream filter: %s\n", "Could not write header for output file #%d (incorrect codec parameters ?): %s\n", "Overriding packet duration by frame rate, this should not happen\n", "Invalid DTS: %lld PTS: %lld in output stream %d:%d, replacing by guess\n", "Non-monotonous DTS in output stream %d:%d; previous: %lld, current: %lld; ", "changing to %lld. This may result in incorrect timestamps in the output file.\n", "muxer <- type:%s pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s size:%d\n", "NOPTS", "%lld", "%.6g", "lavfi", "pthread_create failed: %s. Try to increase `ulimit -v` or decrease `ulimit -s`.\n", "Thread message queue blocking; consider raising the thread_queue_size option (current value: %d)\n", "\nEnter command: <target>|all <time>|-1 <command>[ <argument>]\n", "%63[^ ] %lf %255[^ ] %255[^\n]", "Processing command target:%s time:%f command:%s arg:%s", "Command reply for stream %d: ret:%d res:\n%s", "Queuing commands only on filters supporting the specific command is unsupported\n", "Queuing command failed with error %s\n", "Parse error, at least 3 arguments were expected, only %d given in string '%s'\n", "error parsing debug value\n", "debug=%d\n", "key    function\n?      show this help\n+      increase verbosity\n-      decrease verbosity\nc      Send command to first matching filter supporting it\nC      Send/Queue command to all matching filters\nD      cycle through available debug modes\nh      dump packets/hex press to cycle through the 3 states\nq      quit\ns      Show QP histogram\n", "No more inputs to read from, finishing.\n", "Error reinitializing filters!\n", "ost->source_index >= 0", "cur_dts is invalid (this is harmless if it occurs once at the start per stream)\n", "%s: corrupt input packet in stream %d\n", "demuxer -> ist_index:%d type:%s next_dts:%s next_dts_time:%s next_pts:%s next_pts_time:%s pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s off:%s off_time:%s\n", "Correcting start time by %lld\n", "Inter stream timestamp discontinuity %lld, new offset= %lld\n", "timestamp discontinuity %lld, new offset= %lld\n", "DTS %lld, next:%lld st:%d invalid dropping\n", "PTS %lld, next:%lld invalid dropping st:%d\n", "demuxer+ffmpeg -> ist_index:%d type:%s pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s off:%s off_time:%s\n", "New %s stream %d:%d at pos:%lld and DTS:%ss\n", "Error initializing output stream %d:%d -- %s\n", "Error in av_buffersink_get_frame_flags(): %s\n", "Audio filter graph output is not normalized and encoder does not support parameter changes\n", "*** dropping frame %d from stream %d at ts %lld\n", "%d frame duplication too large, skipping\n", "More than %d frames duplicated\n", "Forced keyframe at time %f\n", "encoder <- type:video frame_pts:%s frame_pts_time:%s time_base:%d/%d\n", "encoder -> type:video pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n", "Video encoding failed\n", "Error applying bitstream filters to an output packet for stream #%d:%d.\n", "s_size= %8.0fkB time= %0.3f br= %7.1fkbits/s avg_br= %7.1fkbits/s ", "encoder <- type:audio frame_pts:%s frame_pts_time:%s time_base:%d/%d\n", "encoder -> type:audio pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n", "stream_%d_%d_psnr_all=%2.2f\n", "size=N/A time=", "size=%8.0fkB time=", "%02d:%02d:%02d.%02d ", "bitrate=N/A\n", "bitrate=%6.1fkbits/s", "bitrate=%6.1fkbits/s\n", "total_size=N/A\n", "total_size=%lld\n", "out_time_ms=%lld\n", "out_time=%02d:%02d:%02d.%06d\n", " dup=%d drop=%d", "dup_frames=%d\n", "drop_frames=%d\n", " speed=N/A", "speed=N/A\n", " speed=%4.3gx", "speed=%4.3gx\n", "%s    %c", "progress=%s\n", "continue", "Error closing progress log, loss of information possible: %s\n", "video:%1.0fkB audio:%1.0fkB subtitle:%1.0fkB other streams:%1.0fkB global headers:%1.0fkB muxing overhead: ", "%f%%", "unknown", "Input file #%d (%s):\n", "  Input stream #%d:%d (%s): ", "%llu packets read (%llu bytes); ", "%llu frames decoded", " (%llu samples)", "  Total: %llu packets (%llu bytes) demuxed\n", "Output file #%d (%s):\n", "  Output stream #%d:%d (%s): ", "%llu frames encoded", "%llu packets muxed (%llu bytes); ", "  Total: %llu packets (%llu bytes) muxed\n", "Output file is empty, nothing was encoded ", "(check -ss / -t / -frames parameters if used)\n", "Error while decoding stream #%d:%d: %s\n", "Error while processing the decoded data for stream #%d:%d\n", "Error marking filters as finished\n", "decode_audio %d.%d", "Sample rate %d invalid\n", "video_delay is larger in decoder than demuxer %d > %d.\nIf you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "Frame parameters mismatch context %d,%d,%d != %d,%d,%d\n", "decoder -> ist_index:%d type:video frame_pts:%s frame_pts_time:%s best_effort_ts:%lld best_effort_ts_time:%s keyframe:%d frame_type:%d time_base:%d/%d\n", "Subtitle packets must have a pts\n", "av_parser_change failed: %s\n", "avpicture_fill failed: %s\n", "Finishing stream %d:%d without any data written to it.\n", "Error configuring filter graph\n", "audio", "video", "%s encoding failed: %s\n", "flush_%s %d.%d", "Getting help:\n    -h      -- print basic options\n    -h long -- print more options\n    -h full -- print all options (including all format and codec specific options, very long)\n    -h type=name -- print all options for the named decoder/encoder/demuxer/muxer/filter\n    See man %s for detailed description of the options.\n\n", "Print help / information / capabilities:", "Advanced global options:", "Per-file main options:", "Advanced per-file options:", "Advanced Video options:", "Advanced Audio options:", "Subtitle options:", "Hyper fast Audio and Video encoder\n", "usage: %s [options] [[infile options] -i infile]... {[outfile options] outfile}...\n", "Error splitting the argument list: ", "show license", "show help", "topic", "help", "-help", "version", "show version", "buildconf", "show build configuration", "formats", "show available formats", "muxers", "show available muxers", "demuxers", "show available demuxers", "devices", "show available devices", "codecs", "show available codecs", "show available decoders", "show available encoders", "bsfs", "show available bit stream filters", "protocols", "show available protocols", "filters", "show available filters", "pix_fmts", "show available pixel formats", "layouts", "show standard channel layouts", "sample_fmts", "show available audio sample formats", "colors", "show available color names", "loglevel", "set logging level", "report", "generate a report", "max_alloc", "set maximum size of a single allocated block", "bytes", "cpuflags", "force specific cpu flags", "hide_banner", "do not show program banner", "sources", "list sources of the input device", "device", "sinks", "list sinks of the output device", "force format", "overwrite output files", "never overwrite output files", "ignore_unknown", "Ignore unknown stream types", "copy_unknown", "Copy unknown stream types", "codec name", "codec", "preset name", "preset", "set input stream mapping", "[-]input_file_id[:stream_specifier][,sync_file_id[:stream_specifier]]", "map_channel", "map an audio channel from one stream to another", "file.stream.channel[:syncfile.syncstream]", "map_metadata", "set metadata information of outfile from infile", "outfile[,metadata]:infile[,metadata]", "map_chapters", "set chapters mapping", "input_file_index", "record or transcode \"duration\" seconds of audio/video", "record or transcode stop time", "time_stop", "set the limit file size in bytes", "limit_size", "set the start time offset", "time_off", "sseof", "set the start time offset relative to EOF", "seek_timestamp", "enable/disable seeking by timestamp with -ss", "accurate_seek", "enable/disable accurate seeking with -ss", "itsoffset", "set the input ts offset", "itsscale", "set the input ts scale", "scale", "timestamp", "set the recording timestamp ('now' to set the current time)", "time", "add metadata", "string=string", "program", "add program with specified streams", "title=string:st=number...", "dframes", "set the number of data frames to output", "number", "benchmark", "add timings for benchmarking", "benchmark_all", "add timings for each task", "progress", "write program-readable progress information", "stdin", "enable or disable interaction on standard input", "timelimit", "set max runtime in seconds", "limit", "dump", "dump each input packet", "when dumping packets, also dump the payload", "read input at native frame rate", "target", "specify target file type (\"vcd\", \"svcd\", \"dvd\", \"dv\" or \"dv50\" with optional prefixes \"pal-\", \"ntsc-\" or \"film-\")", "type", "vsync", "video sync method", "frame_drop_threshold", "frame drop threshold", "async", "audio sync method", "adrift_threshold", "audio drift threshold", "threshold", "copyts", "copy timestamps", "start_at_zero", "shift input timestamps to start at 0 when using copyts", "copytb", "copy input stream time base when stream copying", "mode", "shortest", "finish encoding within shortest input", "apad", "audio pad", "dts_delta_threshold", "timestamp discontinuity delta threshold", "dts_error_threshold", "timestamp error delta threshold", "xerror", "exit on error", "abort_on", "abort on the specified condition flags", "copyinkf", "copy initial non-keyframes", "copypriorss", "copy or discard frames before start time", "frames", "set the number of frames to output", "force codec tag/fourcc", "fourcc/tag", "use fixed quality scale (VBR)", "qscale", "profile", "set profile", "filter", "set stream filtergraph", "filter_graph", "filter_threads", "number of non-complex filter threads", "filter_script", "read stream filtergraph description from a file", "filename", "reinit_filter", "reinit filtergraph on input parameter changes", "filter_complex", "create a complex filtergraph", "graph_description", "filter_complex_threads", "number of threads for -filter_complex", "filter_complex_script", "read complex filtergraph description from a file", "stats", "print progress report during encoding", "attach", "add an attachment to the output file", "dump_attachment", "extract an attachment into a file", "stream_loop", "set number of times input stream shall be looped", "loop count", "debug_ts", "print timestamp debugging info", "max_error_rate", "maximum error rate", "ratio of errors (0.0: no errors, 1.0: 100% errors) above which ffmpeg returns an error instead of success.", "discard", "thread_queue_size", "set the maximum number of queued packets from the demuxer", "vframes", "set the number of video frames to output", "set frame rate (Hz value, fraction or abbreviation)", "rate", "set frame size (WxH or abbreviation)", "size", "aspect", "set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)", "pix_fmt", "set pixel format", "format", "bits_per_raw_sample", "set the number of bits per raw sample", "intra", "deprecated use -g 1", "disable video", "rc_override", "rate control override for specific intervals", "override", "vcodec", "force video codec ('copy' to copy stream)", "sameq", "Removed", "same_quant", "timecode", "set initial TimeCode value.", "hh:mm:ss[:;.]ff", "pass", "select the pass number (1 to 3)", "passlogfile", "select two pass log file name prefix", "prefix", "deinterlace", "this option is deprecated, use the yadif filter instead", "psnr", "calculate PSNR of compressed frames", "vstats", "dump video coding statistics to file", "vstats_file", "file", "vstats_version", "Version of the vstats format to use.", "set video filters", "intra_matrix", "specify intra matrix coeffs", "matrix", "inter_matrix", "specify inter matrix coeffs", "chroma_intra_matrix", "top=1/bottom=0/auto=-1 field first", "vtag", "force video tag/fourcc", "qphist", "show QP histogram", "force_fps", "force the selected framerate, disable the best supported framerate selection", "streamid", "set the value of an outfile streamid", "streamIndex:value", "force_key_frames", "force key frames at specified timestamps", "timestamps", "audio bitrate (please use -b:a)", "bitrate", "video bitrate (please use -b:v)", "hwaccel", "use HW accelerated decoding", "hwaccel name", "hwaccel_device", "select a device for HW acceleration", "devicename", "hwaccel_output_format", "select output format used with HW accelerated decoding", "hwaccels", "show available HW acceleration methods", "autorotate", "automatically insert correct rotate filters", "hwaccel_lax_profile_check", "attempt to decode anyway if HW accelerated decoder's supported profiles do not exactly match the stream", "aframes", "set the number of audio frames to output", "set audio quality (codec-specific)", "quality", "set audio sampling rate (in Hz)", "set number of audio channels", "channels", "disable audio", "acodec", "force audio codec ('copy' to copy stream)", "atag", "force audio tag/fourcc", "change audio volume (256=normal)", "volume", "sample_fmt", "set sample format", "channel_layout", "set channel layout", "layout", "set audio filters", "guess_layout_max", "set the maximum number of channels to try to guess the channel layout", "disable subtitle", "scodec", "force subtitle codec ('copy' to copy stream)", "stag", "force subtitle tag/fourcc", "fix_sub_duration", "fix subtitles duration", "canvas_size", "set canvas size (WxH or abbreviation)", "deprecated, use -channel", "channel", "tvstd", "deprecated, use -standard", "standard", "isync", "this option is deprecated and does nothing", "muxdelay", "set the maximum demux-decode delay", "seconds", "muxpreload", "set the initial demux-decode delay", "override_ffserver", "override the options from ffserver", "sdp_file", "specify a file in which to print sdp information", "time_base", "set the desired time base hint for output stream (1:24, 1:48000 or 0.04166, 2.0833e-5)", "ratio", "A comma-separated list of bitstream filters", "bitstream_filters", "absf", "deprecated", "audio bitstream_filters", "vbsf", "video bitstream_filters", "apre", "set the audio options to the indicated preset", "vpre", "set the video options to the indicated preset", "spre", "set the subtitle options to the indicated preset", "fpre", "set options from indicated preset file", "max_muxing_queue_size", "maximum number of packets that can be buffered while waiting for all streams to initialize", "packets", "dcodec", "force data codec ('copy' to copy stream)", "disable data", "output url", "input url", "pipe:", "Did you mean file:%s?\n", "Cannot use -sseof, duration of %s not known\n", "%s: could not seek to position %0.3f\n", "Codec AVOption %s (%s) specified for input file #%d (%s) is not a decoding option.\n", "Codec AVOption %s (%s) specified for input file #%d (%s) has not been used for any stream. The most likely reason is either wrong type (e.g. a video option with no video streams) or that it is a private option of some decoder which was not actually used for any stream.\n", "encoder", "Error parsing discard %s.\n", "Error allocating the decoder context.\n", "Error initializing the decoder context.\n", "Error parsing framerate %s.\n", "none", "Unrecognized hwaccel: %s.\n", "Supported hwaccels: ", "Unrecognised hwaccel output format: %s", "Invalid canvas size: %s.\n", "No extradata to dump in stream #%d:%d.\n", "No filename specified and no 'filename' tagin stream #%d:%d.\n", "Could not open file %s for writing.\n", "Error, both -y and -n supplied. Exiting.\n", "anull", "null", "Missing %s stream which is required by this ffm\n", "Output with label '%s' does not exist in any defined filter graph, or was already used elsewhere.\n", "Cannot map stream #%d:%d - unsupported type.\n", "If you want unsupported types ignored instead of failing, please use the -ignore_unknown option\nIf you want them copied, please use -copy_unknown\n", "Could not open attachment file %s.\n", "Could not get size of the attachment %s.\n", "Attachment %s too large to fit into memory.\n", "Output file #%d does not contain any stream\n", "Codec AVOption %s (%s) specified for output file #%d (%s) is not an encoding option.\n", "gop_timecode", "Codec AVOption %s (%s) specified for output file #%d (%s) has not been used for any stream. The most likely reason is either wrong type (e.g. a video option with no video streams) or that it is a private option of some encoder which was not actually used for any stream.\n", "Error initializing a simple filtergraph between streams %d:%d->%d:%d\n", "No input streams but output needs an input stream\n", "Invalid input file index %d while processing metadata maps\n", "Invalid input file index %d in chapter mapping.\n", "creation_time", "No '=' character in program string %s.\n", "title", "Unknown program key %s.\n", "No '=' character in metadata string %s.\n", "rotate", "Invalid chapter index %d in metadata specifier.\n", "Invalid program index %d in metadata specifier.\n", "Invalid metadata specifier %s.\n", "Streamcopy requested for output stream %d:%d, which is fed from a complex filtergraph. Filtering and streamcopy cannot be used together.\n", "%s '%s' was specified through the %s option for output stream %d:%d, which is fed from a complex filtergraph.\n%s and -filter_complex cannot be used together for the same stream.\n", "Filtergraph", "Filtergraph script", "no encoder found for codec id %i\n", "Could not alloc stream.\n", "Error allocating the encoding context.\n", "Error allocating the encoding parameters.\n", "Invalid line found in the preset file.\n", "Preset %s specified for stream %d:%d, but could not be opened.\n", "Applying unspecific -frames to non video streams, maybe you meant -vframes ?\n", "Unknown bitstream filter %s\n", "Error allocating a bitstream filter context\n", "Error parsing options for bitstream filter %s\n", "Bitstream filter memory allocation failed\n", "output_sample_bits", "Automatic encoder selection failed for output stream #%d:%d. Default encoder for format %s (codec %s) is probably disabled. Please choose an encoder manually.\n", "Could not alloc buffer for reading preset.\n", "Invalid frame size: %s.\n", "Unknown pixel format requested: %s.\n", "Could not allocate memory for intra matrix.\n", "Could not allocate memory for inter matrix.\n", "error parsing rc_override\n", "Could not (re)allocate memory for rc_override.\n", "%s-%d.log", "ffmpeg2pass", "Error reading log file '%s' for pass-2 encoding\n", "Cannot write log file '%s' for pass-1 encoding: %s\n", "Syntax error in matrix \"%s\" at coeff %d\n", "%s '%s' was defined for %s output stream %d:%d but codec copy was selected.\nFiltering and streamcopy cannot be used together.\n", "Data stream encoding not supported yet (only streamcopy)\n", "Unknown stream encoding not supported yet (only streamcopy)\n", "Invalid %s index %d while processing metadata maps.\n", "E:/ijkPlayer/EpMedia/app/jnicode/jni/ffmpeg_opt.c", "Stream specifier %s does not match  any streams.\n", "Sync stream specification in map %s does not match any streams.\n", "Invalid output link label: %s.\n", "Stream map '%s' matches no streams.\nTo ignore this, add a trailing '?' to the map.\n", "Syntax error, mapchan usage: [file.stream.channel|-1][:syncfile:syncstream]\n", "mapchan: invalid input file stream index #%d.%d\n", "mapchan: invalid audio channel #%d.%d.%d\n", "%s is deprecated, set the 'creation_time' metadata tag instead.\n", "30000/1001", "24000/1001", "Could not determine norm (PAL/NTSC/NTSC-Film) for target.\n", "mpeg1video", "352x288", "352x240", "1150000", "maxrate:v", "minrate:v", "bufsize:v", "327680", "224000", "44100", "packetsize", "2324", "muxrate", "1411200", "svcd", "mpeg2video", "480x576", "480x480", "yuv420p", "2040000", "2516000", "1835008", "scan_offset", "720x576", "720x480", "6000000", "9000000", "2048", "10080000", "448000", "48000", "dv50", "yuv422p", "yuv411p", "Unknown target: %s\n", "empty_output", "codec:v", "Option '%s' was removed. If you are looking for an option to preserve the quality (which is not what -%s was for), use -qscale 0 or an equivalent quality factor option.\n", "Invalid value '%s' for option '%s', required syntax is 'index:value'\n", "codec:a", "codec:s", "libx264-lossless", "Please use -preset <speed> -qp 0\n", "File for preset '%s' not found\n", "codec:d", "Incompatible pixel format '%s' for codec '%s', auto-selecting format '%s'\n", "Incompatible sample format '%s' for codec '%s', auto-selecting format '%s'\n", "Filter %s has an unconnected output\n", "E:/ijkPlayer/EpMedia/app/jnicode/jni/ffmpeg_filter.c", "Simple filtergraph '%s' was expected to have exactly 1 input and 1 output. However, it had %s input(s) and %s output(s). Please adjust, or use a complex filtergraph (-filter_complex) instead.\n", "Encoder (codec %s) not found for output stream #%d:%d\n", "Stream specifier '%s' in filtergraph description %s matches no streams.\n", "Cannot find a matching stream for unlabeled input pad %d on filter %s\n", "buffersink", "%d:%d", ":%s=%s", "scaler_out_%d_%d", "format_out_%d_%d", "trim_out_%d_%d", "strict", "sample_rates=%s:", "channel_layouts=%s:", "-vol is forwarded to lavfi similarly to -af volume=%s.\n", "-apad is forwarded to lavfi similarly to -af apad=%s.\n", "trim for output stream %d:%d", "No decoder for stream #%d:%d, filtering impossible\n", "buffer", "Cannot connect video filter to audio input\n", "video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:pixel_aspect=%d/%d:sws_param=flags=%d", ":frame_rate=%d/%d", "graph %d input from stream %d:%d", "transpose", "clock", "hflip", "vflip", "cclock", "%f*PI/180", "deinterlace_in_%d_%d", "yadif", "trim_in_%d_%d", "sub2video: using %dx%d canvas\n", ":channel_layout=0x%llx", ":channels=%d", "graph_%d_in_%d_%d", ":min_hard_comp=%f", ":first_pts=0", "-async is forwarded to lavfi similarly to -af aresample=%s.\n", "graph_%d_%s_in_%d_%d", "aresample", "-vol has been deprecated. Use the volume audio filter instead.\n", "trim for input stream %d:%d", "pkg-config ", "Codecs:\n D..... = Decoding supported\n .E.... = Encoding supported\n ..V... = Video codec\n ..A... = Audio codec\n ..S... = Subtitle codec\n ...I.. = Intra frame-only codec\n ....L. = Lossy compression\n .....S = Lossless compression\n -------", "Filters:\n  T.. = Timeline support\n  .S. = Slice threading\n  ..C = Command support\n  A = Audio input/output\n  V = Video input/output\n  N = Dynamic number and/or type of input/output\n  | = Source or sink filter", "Pixel formats:\nI.... = Supported Input  format for conversion\n.O... = Supported Output format for conversion\n..H.. = Hardware accelerated format\n...P. = Paletted format\n....B = Bitstream format\nFLAGS NAME            NB_COMPONENTS BITS_PER_PIXEL\n-----", "        none (source filter)", "        none (sink filter)", "This filter has support for timeline through the 'enable' option.", "\nDevice name is not provided.\nYou can pass devicename[,opt1=val1[,opt2=val2...]] as an argument.\n", "ffmpeg"], "stringidentifiers": ["FFmpeg_EpMedia", "onExecuted", "onProgress", "flags", "bicubic", "duration", "debug", "quiet", "panic", "fatal", "error", "warning", "info", "verbose", "trace", "global", "avfilter", "swscale", "swresample", "postproc", "encoders", "decoders", "frame", "n_forced", "prev_forced_n", "prev_forced_t", "native", "threads", "auto", "disposition", "default", "original", "comment", "lyrics", "karaoke", "forced", "hearing_impaired", "visual_impaired", "clean_effects", "captions", "descriptions", "metadata", "source", "NOPTS", "lavfi", "continue", "unknown", "audio", "video", "topic", "help", "version", "buildconf", "formats", "muxers", "demuxers", "devices", "codecs", "bsfs", "protocols", "filters", "pix_fmts", "layouts", "sample_fmts", "colors", "loglevel", "report", "max_alloc", "bytes", "cpuflags", "hide_banner", "sources", "device", "sinks", "ignore_unknown", "copy_unknown", "codec", "preset", "map_channel", "map_metadata", "map_chapters", "input_file_index", "time_stop", "limit_size", "time_off", "sseof", "seek_timestamp", "accurate_seek", "itsoffset", "itsscale", "scale", "timestamp", "time", "program", "dframes", "number", "benchmark", "benchmark_all", "progress", "stdin", "timelimit", "limit", "dump", "target", "type", "vsync", "frame_drop_threshold", "async", "adrift_threshold", "threshold", "copyts", "start_at_zero", "copytb", "mode", "shortest", "apad", "dts_delta_threshold", "dts_error_threshold", "xerror", "abort_on", "copyinkf", "copypriorss", "frames", "qscale", "profile", "filter", "filter_graph", "filter_threads", "filter_script", "filename", "reinit_filter", "filter_complex", "graph_description", "filter_complex_threads", "filter_complex_script", "stats", "attach", "dump_attachment", "stream_loop", "debug_ts", "max_error_rate", "discard", "thread_queue_size", "vframes", "rate", "size", "aspect", "pix_fmt", "format", "bits_per_raw_sample", "intra", "rc_override", "override", "vcodec", "sameq", "Removed", "same_quant", "timecode", "pass", "passlogfile", "prefix", "deinterlace", "psnr", "vstats", "vstats_file", "file", "vstats_version", "intra_matrix", "matrix", "inter_matrix", "chroma_intra_matrix", "vtag", "qphist", "force_fps", "streamid", "force_key_frames", "timestamps", "bitrate", "hwaccel", "hwaccel_device", "devicename", "hwaccel_output_format", "hwaccels", "autorotate", "hwaccel_lax_profile_check", "aframes", "quality", "channels", "acodec", "atag", "volume", "sample_fmt", "channel_layout", "layout", "guess_layout_max", "scodec", "stag", "fix_sub_duration", "canvas_size", "channel", "tvstd", "standard", "isync", "muxdelay", "seconds", "muxpreload", "override_ffserver", "sdp_file", "time_base", "ratio", "bitstream_filters", "absf", "deprecated", "vbsf", "apre", "vpre", "spre", "fpre", "max_muxing_queue_size", "packets", "dcodec", "encoder", "none", "anull", "null", "gop_timecode", "creation_time", "title", "rotate", "Filtergraph", "output_sample_bits", "ffmpeg2pass", "mpeg1video", "packetsize", "muxrate", "svcd", "mpeg2video", "yuv420p", "scan_offset", "dv50", "yuv422p", "yuv411p", "empty_output", "buffersink", "strict", "buffer", "transpose", "clock", "hflip", "vflip", "cclock", "yadif", "aresample", "ffmpeg"], "debugstrings": ["This version of %s has nonfree parts compiled in.\nTherefore it is not legally redistributable.\n", "%s version 3.3.4", "Conversion failed!\n", "version", "show version", "vstats_version", "Version of the vstats format to use.", "GCC: (GNU) 4.9.x 20150123 (prerelease)", "Android clang version 5.0.300080  (based on LLVM 5.0.300080)"], "localsymbols": [""], "dependencies": ["libavdevice.so", "libavutil.so", "libz.so", "libdl.so", "libpostproc.so", "libandroid.so", "liblog.so", "libstdc++.so", "libc.so", "libavcodec.so", "libjnigraphics.so", "libswresample.so", "libswscale.so", "libavformat.so", "libm.so", "libavfilter.so"], "elfname": "libffmpeg.so"}