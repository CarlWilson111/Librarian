{"globalvars": [], "importedglobals": ["__stack_chk_guard"], "importedfunctions": ["ANativeWindow_fromSurface", "close", "pthread_join", "malloc", "stat", "write", "memset", "ANativeWindow_lock", "ftell", "dup", "ANativeWindow_unlockAndPost", "snprintf", "calloc", "clock_gettime", "pthread_mutex_lock", "pthread_create", "__errno", "fclose", "fstat", "pthread_cond_signal", "pthread_cond_destroy", "ANativeWindow_release", "memcpy", "__stack_chk_fail", "AndroidBitmap_lockPixels", "free", "pthread_cond_wait", "fopen", "AndroidBitmap_unlockPixels", "eventfd", "poll", "fread", "fdopen", "pthread_mutex_unlock", "ANativeWindow_setBuffersGeometry", "realloc", "pthread_mutex_destroy", "read", "AndroidBitmap_getInfo", "strlen", "fseek"], "exportedfunctions": ["Java_com_picsart_studio_gifencoder_GifInfoHandle_saveRemainder", "JNI_OnUnload", "JNI_OnLoad", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getCurrentPosition", "Java_com_picsart_studio_gifencoder_GifInfoHandle_renderFrame", "Java_com_picsart_studio_gifencoder_GifInfoHandle_openFile", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getSavedState", "Java_com_picsart_studio_gifencoder_GifInfoHandle_openStream", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getSourceLength", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getCurrentLoop", "Java_com_picsart_studio_gifencoder_GifInfoHandle_bindSurface", "Java_com_picsart_studio_gifencoder_GifInfoHandle_isAnimationCompleted", "Java_com_picsart_studio_gifencoder_GifInfoHandle_seekToTime", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getLoopCount", "Java_com_picsart_studio_gifencoder_GifInfoHandle_restoreSavedState", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getCurrentFrameIndex", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getAllocationByteCount", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getDuration", "Java_com_picsart_studio_gifencoder_GifInfoHandle_seekToFrame", "Java_com_picsart_studio_gifencoder_GifInfoHandle_openDirectByteBuffer", "Java_com_picsart_studio_gifencoder_GifInfoHandle_openFd", "Java_com_picsart_studio_gifencoder_GifInfoHandle_setLoopCount", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getNativeErrorCode", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getFrameDuration", "Java_com_picsart_studio_gifencoder_GifInfoHandle_openByteArray", "Java_com_picsart_studio_gifencoder_GifInfoHandle_reset", "Java_com_picsart_studio_gifencoder_GifInfoHandle_restoreRemainder", "Java_com_picsart_studio_gifencoder_GifInfoHandle_getComment", "Java_com_picsart_studio_gifencoder_GifInfoHandle_postUnbindSurface", "Java_com_picsart_studio_gifencoder_GifInfoHandle_setSpeedFactor", "Java_com_picsart_studio_gifencoder_GifInfoHandle_free"], "allstrings": ["Lock pixels error, bad parameter", "Lock pixels error, JNI exception", "Unlock pixels error, bad parameter", "Unlock pixels error, JNI exception", "Failed to allocate native memory", "com/picsart/studio/gifencoder/GifInfoHandle", "Buffers geometry setting failed", "CLOCK_MONOTONIC_RAW is not present", "java/lang/NullPointerException", "java/lang/IllegalStateException", "com/picsart/studio/gifencoder/GifIOException", "Lock pixels error", "Could not get bitmap info", "Unlock pixels error", "NETSCAPE2.0", "ANIMEXTS1.0", "Could not create state array", "(JIII)V", "<init>", "eventfd close failed", "slurp mutex destroy failed", "render mutex destroy failed", "slurp cond destroy failed", "render cond  destroy failed", "Could not create eventfd", "Read on flushing failed", "Poll on flushing failed", "Window lock failed", "animation end poll failed", "pthread_create failed", "Poll failed", "join failed", "Eventfd write failed", "GetStringUTFChars failed", "NewGlobalRef failed", "(I)V", "mark", "([BII)I", "read", "reset", "descriptor", "close", "GifIOThread", "java/lang/OutOfMemoryError", "%s, errno: %d", "Input source is null", "GIFVER"], "stringidentifiers": ["mark", "read", "reset", "descriptor", "close", "GifIOThread", "GIFVER"], "debugstrings": ["GCC: (GNU) 4.8"], "localsymbols": [""], "dependencies": ["libc.so", "libjnigraphics.so", "libstdc++.so", "libandroid.so", "libm.so", "libdl.so"], "elfname": "libpagif.so"}