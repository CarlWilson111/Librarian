{"globalvars": [], "importedglobals": ["_MotionEvent_getToolType", "_ctype_", "_MotionEvent_getAxisValue", "__stack_chk_guard", "_MotionEvent_getButtonState", "_tolower_tab_", "__sF"], "importedfunctions": ["inflateReset", "unlink", "mono_register_machine_config", "mono_array_new_full", "fprintf", "strchr", "acosf", "ASensorManager_getDefaultSensor", "ceilf", "pthread_getschedparam", "wctob", "fclose", "sscanf", "getpid", "lstat", "ungetwc", "mono_array_element_size", "getwc", "wmemset", "ptrace", "strtoul", "mono_class_get_namespace", "mono_thread_set_main", "wcscat", "sleep", "mono_custom_attrs_from_class", "mono_unity_liveness_calculation_from_statics", "ALooper_forThread", "freeaddrinfo", "ftell", "_Z29ANativeActivity_getInputQueuev", "mono_custom_attrs_from_field", "ASensorEventQueue_disableSensor", "mono_add_internal_call", "__android_log_vprint", "readlink", "SHA1Final", "AInputQueue_getEvent", "setjmp", "mono_file_map_override", "SHA1Update", "mono_string_to_utf8", "mono_class_get_nesting_type", "send", "pthread_setschedparam", "realloc", "pthread_attr_setschedparam", "wcscpy", "dup2", "mono_debug_lookup_source_location", "mono_class_from_mono_type", "dlclose", "getsockopt", "ASensorManager_getInstance", "mono_custom_attrs_free", "flock", "sqrtf", "wcrtomb", "ungetc", "eglChooseConfig", "powf", "mono_class_get_name", "mono_gc_max_generation", "ANativeWindow_setBuffersGeometry", "ferror", "mono_assembly_loaded", "inet_addr", "mono_pmip", "wcsncpy", "swscanf", "log10", "putwc", "mono_class_get_type", "exp2f", "eglTerminate", "mono_string_new_len", "longjmp", "mono_custom_attrs_has_attr", "isnan", "mono_thread_current", "wcscoll", "mono_field_get_flags", "atol", "deflate", "mono_parse_default_optimizations", "pthread_key_delete", "strtod", "pthread_cond_wait", "strtol", "munmap", "eglInitialize", "AMotionEvent_getEventTime", "mono_set_commandline_arguments", "chdir", "crc32", "perror", "ASensorEventQueue_enableSensor", "mono_thread_detach", "_Z42ANativeActivity_forwardMotionEventToDalvikP11AInputEventP7_JNIEnv", "free", "__isfinitef", "opendir", "memchr", "pthread_mutexattr_init", "mono_stack_walk", "open", "ASensorManager_getSensorList", "mono_assembly_load_from_full", "mono_image_get_name", "mono_object_new_alloc_specific", "getc", "pthread_mutex_trylock", "exp", "mono_class_is_enum", "wcstod", "sched_yield", "deflateEnd", "mono_unity_class_is_abstract", "vsprintf", "usleep", "wmemmove", "gettimeofday", "mono_set_defaults", "bind", "atan", "mono_custom_attrs_from_method", "AMotionEvent_getPointerCount", "socket", "inflateInit2_", "mono_security_set_mode", "cosf", "readdir", "__android_log_print", "strncmp", "eglQuerySurface", "fstat", "mono_loader_error_prepare_exception", "ASensorEventQueue_setEventRate", "memcpy", "mono_set_signal_chaining", "ASensor_getName", "pthread_setspecific", "printf", "strlen", "gethostbyname", "AMotionEvent_getHistoricalY", "mono_thread_suspend_all_other_threads", "mono_class_get_fields", "eglDestroySurface", "sched_get_priority_min", "ANativeWindow_getWidth", "fgets", "truncf", "wmemcpy", "pthread_attr_destroy", "fread", "_Z28ANativeActivity_feedWatchdogv", "mono_class_is_inflated", "mono_class_vtable", "wprintf", "inet_ntoa", "mono_class_set_userdata", "ioctl", "pthread_cond_signal", "setlocale", "fopen", "ASensor_getVendor", "AMotionEvent_getHistoricalEventTime", "mono_object_get_virtual_method", "wcsftime", "select", "AInputEvent_getDeviceId", "mono_field_get_offset", "ALooper_pollAll", "ASensorManager_createEventQueue", "nanosleep", "rmdir", "eglSwapBuffers", "wcsxfrm", "mono_class_instance_size", "ASensor_getType", "deflateInit2_", "pthread_exit", "execl", "strcat", "AInputEvent_getSource", "pthread_getspecific", "AMotionEvent_getY", "mono_domain_get", "eglGetProcAddress", "mono_assembly_name_parse", "__stack_chk_fail", "dlerror", "mono_raise_exception", "mono_set_assemblies_path", "mono_jit_init_version", "ALooper_prepare", "syscall", "fputs", "close", "getuid", "mono_class_get_element_class", "wcslen", "AMotionEvent_getHistorySize", "mono_object_get_class", "__divdi3", "mono_set_find_plugin_callback", "dl_iterate_phdr", "mbrtowc", "sqrt", "accept", "mono_method_get_name", "mono_string_new_wrapper", "memmove", "ANativeWindow_lock", "deflateReset", "dlopen", "recv", "prctl", "mono_class_is_valuetype", "pthread_cond_destroy", "wcstol", "pthread_cond_init", "sem_wait", "strcoll", "strncpy", "sprintf", "mono_array_addr_with_size", "mono_signature_is_instance", "eglGetError", "mono_array_new", "pthread_mutex_destroy", "cos", "mono_get_root_domain", "inflate", "mono_field_get_type", "calloc", "sigaction", "rename", "clock_gettime", "wcsncat", "g_free", "mono_field_get_parent", "mono_walk_stack", "mono_get_corlib", "memalign", "getnameinfo", "strrchr", "strcasestr", "log", "ANativeWindow_fromSurface", "getpwuid", "mono_signature_get_return_type", "AMotionEvent_getX", "ANativeWindow_getHeight", "qsort", "srand48", "pthread_cond_timedwait", "mono_method_signature", "unity_mono_method_is_inflated", "mono_runtime_unhandled_exception_policy_set", "putc", "AInputQueue_finishEvent", "mono_image_close", "mono_class_get_methods", "bsearch", "pthread_attr_setschedpolicy", "_Z42ANativeActivity_setFirstLevelHasBeenLoadedb", "sysconf", "pow", "mono_image_open_from_data_with_name", "mono_string_from_utf16", "floorf", "mono_type_get_type", "AMotionEvent_getHistoricalX", "fabsf", "fwrite", "atanf", "dlsym", "mkdir", "mono_class_get_field_from_name", "setsockopt", "sin", "floor", "getaddrinfo", "strcmp", "gettid", "AInputEvent_getType", "mono_debug_print_stack_frame", "mono_gchandle_free", "ANativeWindow_release", "ASensor_getMinDelay", "getsockname", "iswctype", "mono_class_get_image", "strtoull", "sendto", "snprintf", "log10f", "waitpid", "eglCreateWindowSurface", "strncasecmp", "pthread_mutex_lock", "mono_verifier_set_mode", "mono_runtime_invoke", "eglCreateContext", "vsnprintf", "pthread_create", "mono_class_from_name", "AKeyEvent_getAction", "eglDestroyContext", "mmap", "pthread_attr_setstacksize", "fflush", "strcpy", "atan2", "recvfrom", "pthread_equal", "mono_unity_class_is_interface", "inet_aton", "ANativeWindow_unlockAndPost", "pthread_cond_broadcast", "putchar", "expf", "eglMakeCurrent", "pthread_once", "malloc", "mono_set_dirs", "truncate", "ldexp", "mono_field_get_name", "wcsncmp", "fork", "clearerr", "pthread_mutex_init", "pthread_mutexattr_settype", "eglGetCurrentSurface", "sem_init", "mono_gc_collect", "mono_thread_attach", "AMotionEvent_getPointerId", "mono_unity_liveness_calculation_from_root", "mono_class_get_parent", "strftime", "kill", "pthread_attr_init", "mono_loader_get_last_error", "sched_get_priority_max", "mono_config_parse", "fmod", "closedir", "mono_class_enum_basetype", "fcntl", "ASensorManager_destroyEventQueue", "wmemchr", "AKeyEvent_getMetaState", "memcmp", "getenv", "pthread_key_create", "clock", "memset", "pipe", "mono_class_is_generic", "fmodf", "listen", "ASensorEventQueue_getEvents", "pthread_mutex_unlock", "eglSwapInterval", "inet_ntop", "mono_get_enum_class", "AInputQueue_attachLooper", "strncat", "mono_object_new", "mono_runtime_set_shutting_down", "btowc", "write", "_Z30ANativeActivity_enableWatchdogb", "puts", "vprintf", "mono_type_get_class", "mono_threads_set_shutting_down", "AKeyEvent_getKeyCode", "mono_class_is_subclass_of", "mono_class_array_element_size", "sem_destroy", "sinf", "asinf", "ASensor_getResolution", "AMotionEvent_getAction", "towlower", "read", "strerror", "strcasecmp", "frexp", "mono_gchandle_get_target", "eglGetConfigAttrib", "sem_post", "mono_security_set_core_clr_platform_callback", "mono_unity_socket_security_enabled_set", "mono_array_class_get", "wcscmp", "atoi", "atan2f", "mono_class_get_userdata_offset", "strxfrm", "eglGetCurrentContext", "lrand48", "ASensorEventQueue_hasEvents", "unity_mono_method_is_generic", "mono_unity_set_embeddinghostname", "__errno", "pthread_attr_setdetachstate", "tan", "gai_strerror", "inflateEnd", "pthread_self", "logf", "strdup", "__android_log_write", "modff", "mono_type_get_name", "eglGetDisplay", "fputc", "mono_gchandle_new", "access", "mono_unity_liveness_calculation_end", "adler32", "strstr", "mono_assembly_get_image", "stat", "inflateInit_", "mono_signature_get_param_count", "towupper", "strsep", "wctype", "mono_thread_pool_cleanup", "fseek", "time", "mono_debug_free_source_location", "mono_exception_from_name_msg", "asin", "pthread_join", "exit", "acos", "mono_signature_get_params", "mono_type_get_object", "mono_class_get_flags", "pthread_mutexattr_destroy", "tanf", "mono_unity_liveness_calculation_begin", "AInputQueue_preDispatchEvent", "mono_runtime_invoke_array", "__system_property_get", "SHA1Init", "mono_method_get_class", "strtok", "mono_jit_cleanup", "connect", "ANativeWindow_acquire"], "exportedfunctions": ["JNI_OnUnload", "_ZdaPv", "_ZnwjRKSt9nothrow_t", "_Znaj", "_Znwj", "_ZdlPvRKSt9nothrow_t", "_ZnajRKSt9nothrow_t", "_ZdaPvRKSt9nothrow_t", "UnitySendMessage", "JNI_OnLoad", "_ZdlPv"], "allstrings": ["tlsf_create: Pool size must be between %u and %u bytes.\n", "\t%p %s size: %x (%p)\n", "used", "free", "<unknown/absolute>", "#%02d  pc %08x  %.*s (%.*s+%u)", "#%02d  pc %08x  %.*s (%.*s)", "#%02d  pc %08x  %.*s", "/proc/%d/maps", "%lx-%lx %4s %*x %*x:%*x %*d%n", "ro.revision", "Revision: '%s'\n", "ro.build.fingerprint", "Build fingerprint: '%s'\n", "signal %d (%s), code %d (%s), fault addr %08x\n", "signal %d (%s), code %d (%s), fault addr --------\n", "/proc/%d/comm", "/proc/%d/cmdline", "pid: %d, tid: %d, name: %s  >>> %s <<<\n", "UNKNOWN", "pid: %d, tid: %d, name: %s\n", "\nstack:\n", "         ........  ........\n", "    #%02d  %08x  %08x  %s (%s+%u)\n", "    #%02d  %08x  %08x  %s (%s)\n", "         %08x  %08x  %s (%s+%u)\n", "         %08x  %08x  %s (%s)\n", "    #%02d  %08x  %08x  %s\n", "         %08x  %08x  %s\n", "ILL_ILLOPC", "ILL_ILLOPN", "ILL_ILLADR", "ILL_ILLTRP", "ILL_PRVOPC", "ILL_PRVREG", "ILL_COPROC", "ILL_BADSTK", "BUS_ADRALN", "BUS_ADRERR", "BUS_OBJERR", "FPE_INTDIV", "FPE_INTOVF", "FPE_FLTDIV", "FPE_FLTOVF", "FPE_FLTUND", "FPE_FLTRES", "FPE_FLTINV", "FPE_FLTSUB", "SEGV_MAPERR", "SEGV_ACCERR", "SIGILL", "SIGABRT", "SIGBUS", "SIGFPE", "SIGSEGV", "SIGPIPE", "SIGSTKFLT", "SIGSTOP", "    eax %08x  ebx %08x  ecx %08x  edx %08x\n", "    esi %08x  edi %08x\n", "    xcs %08x  xds %08x  xes %08x  xfs %08x  xss %08x\n", "    eip %08x  ebp %08x  esp %08x  flags %08x\n", "type1", "truetype", "glyph-dict", "type42", ".AppleDouble/", ".resource/", "resource.frk/", "sfnt", "xf86-driver-name", "postscript-info", "postscript-font-name", "tt-cmaps", "postscript-cmaps", "pshinter", "Regular", "Bold", "Black", "psnames", "sfnt-table", "smooth", "TrueType", "multi-masters", "truetype-engine", "tt-glyf", ".notdef", "Weight", "Width", "OpticalSize", "Slant", "raster1", "raster5", "unexpected zlib return code", "unexpected end of LZ stream", "missing LZ dictionary", "zlib IO error", "bad parameters to zlib", "damaged LZ stream", "insufficient memory", "truncated", "unsupported zlib version", "unexpected zlib return", "gamma value out of range", "duplicate", "invalid chromaticities", "internal error checking chromaticities", "sRGB", "invalid sRGB rendering intent", "inconsistent rendering intents", "duplicate sRGB information ignored", "cHRM chunk does not match sRGB", "too short", "invalid length", "length does not match profile", "tag count too large", "invalid rendering intent", "intent outside defined range", "invalid signature", "PCS illuminant is not D50", "RGB color space not permitted on grayscale PNG", "Gray color space not permitted on RGB PNG", "invalid ICC profile color space", "invalid embedded Abstract ICC profile", "unexpected DeviceLink ICC profile class", "unexpected NamedColor ICC profile class", "unrecognized ICC profile class", "unexpected ICC PCS encoding", "ICC profile tag start not a multiple of 4", "ICC profile tag outside profile", "Invalid IHDR data", "known incorrect sRGB profile", "out-of-date sRGB profile with no signature", "Not recognizing known sRGB profile that has been edited", "profile '", "inconsistent chromaticities", "gamma value does not match sRGB", "gamma value does not match libpng estimate", "Libpng jmp_buf still allocated", "internal error: array alloc", "internal error: array realloc", "Out of memory", "Missing IHDR before IDAT", "Missing PLTE before IDAT", "Too many IDATs found", "png_read_update_info/png_start_read_image: duplicate call", "Invalid attempt to read row data", "bad adaptive filter value", "sequential row overflow", "internal sequential row size calculation error", "Read palette index exceeding num_palette", "Call to NULL read function", "Read Error", "output gamma out of expected range", "invalid alpha mode", "conflicting calls to set alpha mode and background", "invalid file gamma in png_set_gamma", "invalid screen gamma in png_set_gamma", "invalid background gamma type", "Palette is NULL in indexed image", "NULL row buffer", "Uninitialized row", "gamma value", "invalid after png_start_read_image or png_read_update_info", "PNG unsigned integer out of range", "Not a PNG file", "PNG file corrupted by ASCII conversion", "CRC error", "out of place", "invalid", "missing IHDR", "ignored in grayscale PNG", "tRNS must be after", "bKGD must be after", "invalid values", "too many profiles", "extra compressed data", "out of memory", "bad compression method", "bad keyword", "invalid with alpha channel", "invalid index", "invalid parameter count", "unrecognized equation type", "invalid data", "invalid unit", "bad width format", "non-positive width", "bad height format", "non-positive height", "no space in chunk cache", "bad compression info", "unhandled critical chunk", "invalid chunk type", "internal row logic error", "internal row size calculation error", "internal row width error", "invalid user transform pixel depth", "Not enough image data", "Extra compressed data", "Too much image data", "Row has too many bytes to allocate in memory", "zstream unclaimed", "insufficient memory to read chunk", " using zstream", "1.2.3", "Invalid pCAL equation type", "Invalid pCAL parameter count", "Invalid format for pCAL parameter", "Invalid sCAL unit", "Invalid sCAL width", "Invalid sCAL height", "Invalid palette length", "Invalid palette", "too many text chunks", "text compression mode is out of range", "text chunk: out of memory", "too many sPLT chunks", "png_set_sPLT: invalid sPLT", "sPLT out of memory", "png_set_filler is invalid for low bit depth gray output", "png_set_filler: inappropriate color type", "Call to NULL write function", "Write Error", "profile matches sRGB but writing iCCP instead", "Valid palette required for paletted images", "No IDATs written into file", "Wrote palette index exceeding num_palette", "png_write_info was never called before png_write_row", "internal write transform logic error", "Invalid bit depth for grayscale image", "Invalid bit depth for RGB image", "Invalid bit depth for paletted image", "Invalid bit depth for grayscale+alpha image", "Invalid bit depth for RGBA image", "Invalid image color type specified", "Invalid number of colors in palette", "Z_OK on Z_FINISH with output space", "No profile for iCCP chunk", "ICC profile too short", "ICC profile length invalid (not a multiple of 4)", "iCCP: invalid keyword", "sPLT: invalid keyword", "Invalid number of transparent colors specified", "Ignoring attempt to write tRNS chunk out-of-range for bit_depth", "Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8", "Can't write tRNS with an alpha channel", "tEXt: invalid keyword", "tEXt: text too long", "zTXt: invalid compression type", "zTXt: invalid keyword", "iTXt: invalid keyword", "iTXt: invalid compression", "iTXt: uncompressed text too long", "Unrecognized equation type for pCAL chunk", "pCAL: invalid keyword", "error writing ancillary chunked compressed data", "compressed data too long", "in use by IDAT", "length exceeds PNG maxima", "Bogus message code %d", "Sorry, arithmetic coding is not implemented", "ALIGN_TYPE is wrong, please fix", "MAX_ALLOC_CHUNK is wrong, please fix", "Bogus buffer control mode", "Invalid component ID %d in SOS", "DCT coefficient out of range", "IDCT output block size %d not supported", "Bogus Huffman table definition", "Bogus input colorspace", "Bogus JPEG colorspace", "Bogus marker length", "Wrong JPEG library version: library is %d, caller expects %d", "Sampling factors too large for interleaved scan", "Invalid memory pool code %d", "Unsupported JPEG data precision %d", "Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d", "Invalid progressive parameters at scan script entry %d", "Bogus sampling factors", "Invalid scan script at entry %d", "Improper call to JPEG library in state %d", "JPEG parameter struct mismatch: library thinks size is %u, caller expects %u", "Bogus virtual array access", "Buffer passed to JPEG library is too small", "Suspension not allowed here", "CCIR601 sampling not implemented yet", "Too many color components: %d, max %d", "Unsupported color conversion request", "Bogus DAC index %d", "Bogus DAC value 0x%x", "Bogus DHT index %d", "Bogus DQT index %d", "Empty JPEG image (DNL not supported)", "Read from EMS failed", "Write to EMS failed", "Didn't expect more than one scan", "Input file read error", "Output file write error --- out of disk space?", "Fractional sampling not implemented yet", "Huffman code size table overflow", "Missing Huffman code table entry", "Maximum supported image dimension is %u pixels", "Empty input file", "Premature end of input file", "Cannot transcode due to multiple use of quantization table %d", "Scan script does not transmit all data", "Invalid color quantization mode change", "Not implemented yet", "Requested feature was omitted at compile time", "Backing store not supported", "Huffman table 0x%02x was not defined", "JPEG datastream contains no image", "Quantization table 0x%02x was not defined", "Not a JPEG file: starts with 0x%02x 0x%02x", "Insufficient memory (case %d)", "Cannot quantize more than %d color components", "Cannot quantize to fewer than %d colors", "Cannot quantize to more than %d colors", "Invalid JPEG file structure: two SOF markers", "Invalid JPEG file structure: missing SOS marker", "Unsupported JPEG process: SOF type 0x%02x", "Invalid JPEG file structure: two SOI markers", "Invalid JPEG file structure: SOS before SOF", "Failed to create temporary file %s", "Read failed on temporary file", "Seek failed on temporary file", "Write failed on temporary file --- out of disk space?", "Application transferred too few scanlines", "Unsupported marker type 0x%02x", "Virtual array controller messed up", "Image too wide for this implementation", "Read from XMS failed", "Write to XMS failed", "Copyright (C) 1991-2012 Thomas G. Lane, Guido Vollbeding\nCopyright (C) 1999-2006 MIYASAKA Masaru\nCopyright (C) 2009 Pierre Ossman for Cendio AB\nCopyright (C) 2009-2014 D. R. Commander\nCopyright (C) 2009-2011 Nokia Corporation and/or its subsidiary(-ies)", "6b  27-Mar-1998", "Caution: quantization tables are too coarse for baseline JPEG", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "Unknown APP0 marker (not JFIF), length %u", "Unknown APP14 marker (not Adobe), length %u", "Define Arithmetic Table 0x%02x: 0x%02x", "Define Huffman Table 0x%02x", "Define Quantization Table %d  precision %d", "Define Restart Interval %u", "Freed EMS handle %u", "Obtained EMS handle %u", "End Of Image", "        %3d %3d %3d %3d %3d %3d %3d %3d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "Warning: thumbnail image size does not match data length %u", "JFIF extension marker: type 0x%02x, length %u", "    with %d x %d thumbnail image", "Miscellaneous marker 0x%02x, length %u", "Unexpected marker 0x%02x", "        %4u %4u %4u %4u %4u %4u %4u %4u", "Quantizing to %d = %d*%d*%d colors", "Quantizing to %d colors", "Selected %d colors for quantization", "At marker 0x%02x, recovery action %d", "RST%d", "Smoothing not supported with nonstandard sampling ratios", "Start Of Frame 0x%02x: width=%u, height=%u, components=%d", "    Component %d: %dhx%dv q=%d", "Start of Image", "Start Of Scan: %d components", "    Component %d: dc=%d ac=%d", "  Ss=%d, Se=%d, Ah=%d, Al=%d", "Closed temporary file %s", "Opened temporary file %s", "JFIF extension marker: JPEG-compressed thumbnail image, length %u", "JFIF extension marker: palette thumbnail image, length %u", "JFIF extension marker: RGB thumbnail image, length %u", "Unrecognized component IDs %d %d %d, assuming YCbCr", "Freed XMS handle %u", "Obtained XMS handle %u", "Unknown Adobe color transform code %d", "Inconsistent progression sequence for component %d coefficient %d", "Corrupt JPEG data: %u extraneous bytes before marker 0x%02x", "Corrupt JPEG data: premature end of data segment", "Corrupt JPEG data: bad Huffman code", "Warning: unknown JFIF revision number %d.%02d", "Premature end of JPEG file", "Corrupt JPEG data: found marker 0x%02x instead of RST%d", "Invalid SOS parameters for sequential JPEG", "Application transferred too many scanlines", "Invalid crop request", "JPEGMEM", "%ld%c", "/proc/cpuinfo", "/sys/devices/system/cpu/present", "/sys/devices/system/cpu/possible", "Overloaded New", "Overloaded New[]", "ALLOC_FALLBACK", "ALLOC_DEFAULT", "ALLOC_TEMP_THREAD", "ALLOC_TEMP_JOB", "ALLOC_GAMEOBJECT", "ALLOC_GFX", "ALLOC_PROFILER", "Could not allocate memory: System out of memory!\n", "Trying to allocate: %zuB with %d alignment. MemoryLabel: %s\n", "Allocation happend at: Line:%d in %s\n", "Custom", "Memory overview\n\n", "[ %s ] used: %zuB | peak: %zuB | reserved: %zuB \n", "DynamicHeapAllocator allocation probe %d failed - Could not get memory for large allocation %llu.\n", "DynamicHeapAllocator out of memory - Could not get memory for large allocation %llu!\n", "Only one instance of the TLS allocator is allowed because of TLS implementation", "basic_string::append", "basic_string::_S_create", "Object", "ClassID: %d is already registered. ClassID's have to be unique", "EditorExtension", "EventManager", "LevelGameManager", "GlobalGameManager", "GameManager", "m_Layer", "m_Name", "m_Tag", "m_IsActive", "m_GameObject", "GameObject is already being activated or deactivated.", "Transform component could not be found on game object. Adding one!", "Object %s (named '%s') has multiple entries of the same %s component. Removing it!", "Component %s could not be loaded when loading game object. Cleaning up!", "Component (%s) has a broken GameObject reference. Fixing!", "Failed to load component (%s)! Removing it!", "Prefab has multiple Transform components! Removing them automatically would not be safe.", "GameObject has multiple Transform components! Merged into single one.", "A game object can only be in one layer. The layer needs to be in the range [0...31]", "CheckConsistency: GameObject does not reference component %s. Fixing.", "GameObject", "Component", "PlayerSettings", "InputManager", "TagManager", "AudioManager", "ScriptMapper", "MonoManager", "GraphicsSettings", "TimeManager", "DelayedCallManager", "PhysicsManager", "BuildSettings", "QualitySettings", "ResourceManager", "NetworkManager", "MasterServerInterface", "NavMeshAreas", "Physics2DSettings", "UnityAdsSettings", "SceneSettings", "RenderSettings", "LightmapSettings", "NavMeshSettings", "RuntimeInitializeOnLoadManager", "CloudWebServicesManager", "UnityAnalyticsManager", "Could..... not preload global game manager #%i   i=%i", "Loading manager failed, creating from code %d\n", "PlayerLoadGlobalManagers: %s\n", " Missing ", " Too many instances of ", "Multiple managers are loaded of type: %s", "There are conflicting definitions of the message: ", ". The parameter of one message has to be the same across all definitions of that message.", "There are conflicting options of the message: ", "OnTriggerEnter", "OnTriggerExit", "OnTriggerStay", "OnCollisionEnter", "OnCollisionExit", "OnCollisionStay", "OnCollisionEnter2D", "OnCollisionExit2D", "OnCollisionStay2D", "OnTriggerEnter2D", "OnTriggerExit2D", "OnTriggerStay2D", "OnJointBreak", "OnTransformChanged", "OnBeforeTransformParentChanged", "OnTransformParentChanged", "OnTransformChildrenChanged", "OnParticleCollision", "OnDidModifyMeshValidity", "OnDidModifyMeshDelete", "OnDidModifyMeshBounds", "OnDidModifyMesh", "OnLayersChanged", "OnDestroyedComponent", "OnDidAddComponent", "OnDidRemoveComponent", "OnBecameVisible", "OnBecameInvisible", "OnWillRenderObject", "OnPreCull", "OnPostRender", "OnPreRender", "OnControllerColliderHit", "OnAnimatorMove", "OnAnimatorMoveBuiltin", "OnAnimatorIK", "ForceRecreateCollider", "OnServerInitialized", "NetworkPlayer", "OnPlayerConnected", "OnConnectedToServer", "OnPlayerDisconnected", "OnDisconnectedFromServer", "NetworkDisconnection", "OnFailedToConnect", "NetworkConnectionError", "OnFailedToConnectToMasterServer", "OnDisconnectedFromMasterServer", "OnMasterServerEvent", "MasterServerEvent", "OnLevelWasLoaded", "OnApplicationPause", "OnApplicationFocus", "OnApplicationQuit", "OnTerrainChanged", "TerrainChangedFlags", "OnDidModifyAnimatorController", "OnDidModifyMotion", "OnDidDeleteMotion", "OnDidVelocityChange", "OnDidModifyAvatar", "OnRectTransformRemoved", "OnDidModifyAudioMixer", "OnChangeAudioMixerFloat", "OnChangeAudioMixerMute", "OnChangeAudioMixerSolo", "OnChangeAudioMixerBypassGroupEffects", "OnChangeAudioMixerBypassSingleEffect", "OnRectTransformDimensionsChange", "OnMovieEvent", "OnCanvasGroupChanged", "OnCanvasHierarchyChanged", "OnDidDeleteBillboard", "OnDidModifyBillboardBounds", "NamedObject", "Default GameObject Tag: ", " already registered", "Default GameObject Tag for name: ", "Default GameObject BitMask: ", "Default GameObject BitMask for name: ", "Untagged", "Respawn", "Finish", "EditorOnly", "MainCamera", "GameController", "Player", "Default", "TransparentFX", "Ignore Raycast", "Water", "Layer index out of bounds", "<unknown layer>", "Base", "tags", "User Layer %d", "Builtin Layer %d", "layers", "m_SortingLayers", "data", "name", "uniqueID", "basic_string::assign", "basic_string::_S_construct null not valid", "vector::_M_default_append", "vector::reserve", "basic_string::resize", "Array", "SortingLayerEntry", "vector::_M_fill_insert", "m_FileID", "m_PathID", "PPtr<GameObject>", "m_Component", "PPtr<Component>", "GUIElement", "GUILayer", "_MainTex", "GUITexture", "DrawGUITexture: texture is null", "m_Texture", "m_Color", "m_PixelInset", "m_LeftBorder", "m_RightBorder", "m_TopBorder", "m_BottomBorder", "width", "height", "PPtr<Texture>", "mempoolalloc", "Internal-GUITexture.shader", "_LightPos", "_LightDir", "_LightColor", "_LightTexture0", "_LightBuffer", "_LightAsQuad", "_StencilNonBackground", "_ShadowMapTexture", "_CameraDepthTexture", "_CameraNormalsTexture", "_CameraReflectionsTexture", "_CameraGBufferTexture0", "_CameraGBufferTexture1", "_CameraGBufferTexture2", "_CameraGBufferTexture3", "_SrcBlend", "_DstBlend", "Failed to create deferred reflections materials", "Failed to create RenderTexture with format %d", "Deferred Reflections", "Cube.fbx", "Deferred GBuffer", "Deferred Depth", "icosahedron.fbx", "icosphere.fbx", "pyramid.fbx", "Deferred BasePassDepth", "Hidden/Internal-CombineDepthNormals", "Camera DepthNormals", "_CameraDepthNormalsTexture", "Fake Light Buffer", "Deferred NormalsSpec", "RenderType", "Light Buffer", "_LightTextureB0", "_Reflection", "is ortho graphic", "orthographic", "SOFTPARTICLES_ON", "UNITY_HDR_ON", "UNITY_COLORSPACE_GAMMA", "Recursive culling with the same camera is not possible.", "Unable to render to cubemap, make sure it's marked as'Readable'", "Unsupported cubemap format - needs to be ARGB32 or RGB24", "Render texture must be a cubemap", "A valid Cubemap texture or render texture must be provided", "Error while rendering to cubemap - failed to get temporary render texture", "Hidden/Camera-DepthNormalTexture", "Camera DepthTexture", "Camera DepthNormalsTexture", "Attempting to render from a camera that is currently rendering. Create a copy of the camera (Camera.CopyFrom) if you wish to do this.", "You're trying to mix color buffers from RenderTexture and from screen.", "You're trying to mix color and depth buffers from RenderTexture and from screen.", "Camera.SetTargetBuffers can only accept RenderBuffers with same size.", "HDR and MultisampleAntiAliasing (in Forward Rendering Path) is not supported. This camera will render without HDR buffers. Disable Antialiasing in the Quality settings if you want to use HDR.", "HDR RenderTexture format is not supported on this platform. This camera will render without HDR buffers.", "HDR in combination with Deferred Shading Rendering Path requires mixed bit depth MRTs, which are not available on this platform. This camera will render without HDR buffers.", "Camera", "_Texel", "_Level", "_Scale", "_Radius", "_TexA", "_TexB", "_value", "Hidden/CubeBlend", "Hidden/CubeCopy", "Hidden/CubeBlur", "_FlareTexture", "Hidden/Internal-Flare", "LensFlare", "FlareLayer", "Flare", "This custom render path shader needs to have at least %i passes.", "Halo", "HaloLayer", "ImageEffects Temp", "can't use image filters (npot-RT are not supported or RT are disabled completely)", "Hidden/BlitCopy", "Unable to use Blit. Shader is not yet initialized!", "Invalid pass number (%d) for Graphics.Blit. Material=%s, npasses=%d", "_BlurOffsets", "MeshIntermediateRenderer", "CanvasBatchIntermediateRenderer", "SpriteIntermediateRenderer", "m_IndirectIntensity", "m_BounceIntensity", "Spotlight cookies must be square (width and height must be equal)", "Unsupported light type", "Light", "LightProbes", "OcclusionArea", "OcclusionPortal", "m_IsOrthoGraphic", "m_Orthographic", "m_OrthoGraphicSize", "m_OrthographicSize", "Projector", "HDR Render Texture not supported, disabling HDR on reflection probe.", "Unknown probe mode: %d", "Reflection Probes Camera", "ReflectionProbe", "Invalid SceneHandle", "Releasing render texture that is set as Camera.targetTexture!", "unity_Lightmap_HDR", "unity_DynamicLightmap_HDR", "_HaloFalloff", "Soft.psd", "m_Ambient", "m_AmbientLight", "m_AmbientSkyboxAmount", "m_AmbientIntensity", "_ShadowProjectionParams", "Hidden/Internal-PrePassCollectShadows", "Screenspace ShadowMap", "ShadowmapFilter", "PCF_5x5", "Shadowmap", "Skybox", "m_CustomSkybox", "PPtr<Material>", "m_PVSData", "m_PVSObjectsArray", "m_PVSPortalsArray", "PPtr<OcclusionPortal>", "PPtr<Renderer>", "m_Fog", "m_FogColor", "m_FogMode", "m_FogDensity", "m_LinearFogStart", "m_LinearFogEnd", "m_AmbientSkyColor", "m_AmbientEquatorColor", "m_AmbientGroundColor", "m_AmbientMode", "m_SkyboxMaterial", "m_HaloStrength", "m_FlareStrength", "m_FlareFadeSpeed", "m_HaloTexture", "m_SpotCookie", "m_DefaultReflectionMode", "m_DefaultReflectionResolution", "m_ReflectionBounces", "m_ReflectionIntensity", "m_CustomReflection", "m_AmbientProbe", "m_AmbientProbeInGamma", "m_GeneratedSkyboxReflection", "m_Sun", "sh[ 0]", "sh[ 1]", "sh[ 2]", "sh[ 3]", "sh[ 4]", "sh[ 5]", "sh[ 6]", "sh[ 7]", "sh[ 8]", "sh[ 9]", "sh[10]", "sh[11]", "sh[12]", "sh[13]", "sh[14]", "sh[15]", "sh[16]", "sh[17]", "sh[18]", "sh[19]", "sh[20]", "sh[21]", "sh[22]", "sh[23]", "sh[24]", "sh[25]", "sh[26]", "PPtr<Light>", "SphericalHarmonicsL2", "PPtr<Cubemap>", "PPtr<Texture2D>", "Callback registration failed. Increase kMaxCallback.", "m_Type", "m_Mode", "m_RefreshMode", "m_TimeSlicingMode", "m_Resolution", "m_UpdateFrequency", "m_Importance", "m_BoxSize", "m_BoxOffset", "m_NearClip", "m_FarClip", "m_ShadowDistance", "m_ClearFlags", "m_BackGroundColor", "m_CullingMask", "m_IntensityMultiplier", "m_BlendDistance", "m_HDR", "m_BoxProjection", "m_RenderDynamicObjects", "m_UseOcclusionCulling", "m_CustomBakedTexture", "m_BakedTexture", "m_Bits", "BitField", "m_NearClipPlane", "m_FarClipPlane", "m_FieldOfView", "m_AspectRatio", "m_Material", "m_IgnoreLayers", "m_Open", "m_Center", "m_Size", "m_IsViewVolume", "m_Data", "m_BakedCoefficients", "m_Tetrahedralization", "m_ProbeSets", "m_Positions", "m_NonTetrahedralizedProbeSetIndexMap", "bytes[0]", "bytes[1]", "bytes[2]", "bytes[3]", "bytes[4]", "bytes[5]", "bytes[6]", "bytes[7]", "bytes[8]", "bytes[9]", "bytes[10]", "bytes[11]", "bytes[12]", "bytes[13]", "bytes[14]", "bytes[15]", "m_Hash", "m_Offset", "m_Tetrahedra", "m_HullRays", "indices[0]", "indices[1]", "indices[2]", "indices[3]", "neighbors[0]", "neighbors[1]", "neighbors[2]", "neighbors[3]", "matrix", "LightProbeData", "Hash128", "ProbeSetIndex", "ProbeSetTetrahedralization", "Matrix3x4f", "Tetrahedron", "m_Intensity", "m_Range", "m_SpotAngle", "m_CookieSize", "m_Shadows", "m_Cookie", "m_DrawHalo", "m_ActuallyLightmapped", "m_Flare", "m_RenderMode", "m_Lightmapping", "m_Strength", "m_Bias", "m_NormalBias", "PPtr<Flare>", "ShadowSettings", "rgba", "m_Deferred", "m_DeferredReflections", "m_LegacyDeferred", "m_AlwaysIncludedShaders", "m_PreloadedShaders", "m_Shader", "PPtr<ShaderVariantCollection>", "PPtr<Shader>", "BuiltinShaderSettings", "m_FlareTexture", "m_TextureLayout", "m_Elements", "m_UseFog", "m_ImageIndex", "m_Position", "m_UseLightColor", "m_Rotate", "m_Zoom", "m_Fade", "FlareElement", "m_Brightness", "m_FadeSpeed", "m_Directional", "m_NormalizedViewPortRect", "near clip plane", "far clip plane", "field of view", "orthographic size", "m_Depth", "m_RenderingPath", "m_TargetTexture", "m_TargetDisplay", "m_TargetEye", "m_OcclusionCulling", "m_StereoConvergence", "m_StereoSeparation", "m_StereoMirrorMode", "PPtr<RenderTexture>", "Hidden/Internal-Halo", "Lightmap index must be less than %d", "CullingGroup index is out of bounds", "Bounding sphere count must be less or equal to the bounding sphere array.", "CullingGroup only supports a maximum of %i bounding distances.", "CullingGroup bounding distances must be sorted in ascending order.", "DirectorPlayer", "The playable you are trying to bind is null.", "The player you are trying to bind is null.", "PrepareFrame", "ProcessFrame", "OnSetTime", "OnSetPlayState", "attempting to explicitely set an output connection to a non-existing port", "Cannot connect output %d, it is already connected, the tree topology will be invalid. Disconnect it first", "Attempt to disconnect invalid input (%d)", "Could not load symbol %s : %s\n", "Unloading the first loaded scene %s (index %d), is currently not supported", ".sharedAssets", "Scene '%s' (%d) couldn't be loaded because it has not been added to the build settings or the asset bundle has not been loaded.\nTo add a scene to the build settings use the menu File->Build Settings...", "sharedassets%d.assets", "SpeedTreeWindAsset", "_ST_WindVector", "_ST_WindGlobal", "_ST_WindBranch", "_ST_WindBranchTwitch", "_ST_WindBranchWhip", "_ST_WindBranchAnchor", "_ST_WindBranchAdherences", "_ST_WindTurbulences", "_ST_WindLeaf1Ripple", "_ST_WindLeaf1Tumble", "_ST_WindLeaf1Twitch", "_ST_WindLeaf2Ripple", "_ST_WindLeaf2Tumble", "_ST_WindLeaf2Twitch", "_ST_WindFrondRipple", "_ST_WindAnimation", "_WindEnabled", "WindZone", "Terrain has zero detail resolution", "Detail index out of bounds in DetailDatabase.SetLayers", "Missing renderer ", " must have exactly one material.", "Missing material ", "Missing mesh filter ", "Missing mesh ", "No vertices available ", "No uvs available ", "No triangles available ", "Missing prototype ", "Missing prototype", "only implemented in editor", "Detail removed: invalid detail layer %d", "The combined number of detail object vertices in one single patch is exceeding the limit (65k). Try decreasing detail density or detail resolution per patch.", "_Cutoff", "_maxDistanceSqr", "_CameraPosition", "_WaveAndDistance", "_WavingTint", "_CameraRight", "_CameraUp", "Hidden/TerrainEngine/Details/BillboardWavingDoublePass", "Hidden/TerrainEngine/Details/Vertexlit", "Hidden/TerrainEngine/Details/WavingDoublePass", "Diffuse", "Unable to find shaders used for the terrain engine. Please include Nature/Terrain/Diffuse shader in Graphics settings.", "Imposter Camera", "_Color", "Insufficient memory for allocating terrain physics data of %lld bytes", "QuadTreeNodeRenderer", "Unable to create base map", "TerrainData is missing splat texture %d.", "Failed to get pixels of splat texture", "splatdatabase alphamap %d is null", "splatdatabase alphamap %d texture size doesn't match alphamap resolution setting: please resave the terrain asset.", "splatdatabase alphamap %d texture size doesn't match to other alphamap textures.", "splatdatabase alphamap %d is invalid", "SplatAlpha %u", "_Control", "_SpecColor", "_Shininess", "_Smoothness", "_SpecularTex", "_MetallicTex", "_Splat0", "_Splat1", "_Splat2", "_Splat3", "_Normal0", "_Normal1", "_Normal2", "_Normal3", "_Specular0", "_Specular1", "_Specular2", "_Specular3", "_Metallic0", "_Metallic1", "_Metallic2", "_Metallic3", "_Smoothness0", "_Smoothness1", "_Smoothness2", "_Smoothness3", "AddPassShader", "BaseMapShader", "Terrain has no valid TerrainData!", "Terrain", "m_TerrainData", "m_TreeDistance", "m_TreeBillboardDistance", "m_TreeCrossFadeLength", "m_TreeMaximumFullLODCount", "m_DetailObjectDistance", "m_DetailObjectDensity", "m_HeightmapPixelError", "m_SplatMapDistance", "m_HeightmapMaximumLOD", "m_CastShadows", "m_DrawHeightmap", "m_DrawTreesAndFoliage", "m_ReflectionProbeUsage", "m_MaterialType", "m_LegacySpecular", "m_LegacyShininess", "m_MaterialTemplate", "m_LightmapIndex", "m_LightmapIndexDynamic", "m_LightmapTilingOffset", "m_LightmapTilingOffsetDynamic", "m_BakeLightProbesForTrees", "m_DynamicUVST", "m_ChunkDynamicUVST", "TerrainData", "Transform", "Tree", "_Wind", "_WindQuality", "The tree %s couldn't be instanced because one of its LODs contains renderer of type other than MeshRenderer and BillboardRenderer.", "The tree %s couldn't be instanced because billboard can only appear as the last LOD.", "The tree %s must use the Nature/Soft Occlusion shader. Otherwise billboarding/lighting will not work correctly.", "The tree %s couldn't be instanced because the prefab contains no valid mesh renderer.", "BillboardShader", "_HalfOverCutoff", "_TerrainEngineBendTree", "A tree couldn't be loaded because the prefab is missing.", "Tree removed: invalid prototype %d", "Cannot add tree instance: invalid prototype index %d", "m_TreeInstances", "m_TreePrototypes", "_TerrainTreeLightDirections0", "_TerrainTreeLightDirections1", "_TerrainTreeLightDirections2", "_TerrainTreeLightDirections3", "_TerrainTreeLightColors0", "_TerrainTreeLightColors1", "_TerrainTreeLightColors2", "_TerrainTreeLightColors3", "Hidden/TerrainEngine/BillboardTree", "_TreeInstanceColor", "_TreeInstanceScale", "_SquashPlaneNormal", "_SquashAmount", "tree billboard", "_TreeBillboardCameraRight", "_TreeBillboardCameraUp", "_TreeBillboardCameraFront", "_TreeBillboardCameraPos", "_TreeBillboardDistances", "vector::_M_insert_aux", "prefab", "bendFactor", "position", "widthScale", "heightScale", "rotation", "color", "lightmapColor", "index", "TreePrototype", "TreeInstance", "m_SpeedTreeWindAsset", "PPtr<SpeedTreeWindAsset>", "m_SplatDatabase", "m_DetailDatabase", "m_Heightmap", "m_Heights", "m_PrecomputedError", "m_MinMaxPatchHeights", "m_Width", "m_Height", "m_Thickness", "m_Levels", "m_Scale", "m_Patches", "m_DetailPrototypes", "m_PatchCount", "m_PatchSamples", "m_RandomRotations", "WavingGrassTint", "m_WavingGrassStrength", "m_WavingGrassAmount", "m_WavingGrassSpeed", "m_PreloadTextureAtlasData", "prototype", "prototypeTexture", "minWidth", "maxWidth", "minHeight", "maxHeight", "noiseSpread", "healthyColor", "dryColor", "lightmapFactor", "renderMode", "usePrototypeMesh", "bounds", "layerIndices", "numberOfObjects", "m_Extent", "m_Splats", "m_AlphaTextures", "m_AlphamapResolution", "m_BaseMapResolution", "m_ColorSpace", "m_MaterialRequiresMetallic", "m_MaterialRequiresSmoothness", "texture", "normalMap", "tileSize", "tileOffset", "specularMetallic", "smoothness", "Heightmap", "DetailDatabase", "DetailPrototype", "AABB", "DetailPatch", "SplatDatabase", "SplatPrototype", "PPtr<TerrainData>", "m_Radius", "m_WindMain", "m_WindTurbulence", "m_WindPulseMagnitude", "m_WindPulseFrequency", "m_Wind", "m_sParams", "BranchWindAnchor0", "BranchWindAnchor1", "BranchWindAnchor2", "m_fMaxBranchLevel1Length", "GLOBAL_WIND", "GLOBAL_PRESERVE_SHAPE", "BRANCH_SIMPLE_1", "BRANCH_DIRECTIONAL_1", "BRANCH_DIRECTIONAL_FROND_1", "BRANCH_TURBULENCE_1", "BRANCH_WHIP_1", "BRANCH_OSC_COMPLEX_1", "BRANCH_SIMPLE_2", "BRANCH_DIRECTIONAL_2", "BRANCH_DIRECTIONAL_FROND_2", "BRANCH_TURBULENCE_2", "BRANCH_WHIP_2", "BRANCH_OSC_COMPLEX_2", "LEAF_RIPPLE_VERTEX_NORMAL_1", "LEAF_RIPPLE_COMPUTED_1", "LEAF_TUMBLE_1", "LEAF_TWITCH_1", "LEAF_OCCLUSION_1", "LEAF_RIPPLE_VERTEX_NORMAL_2", "LEAF_RIPPLE_COMPUTED_2", "LEAF_TUMBLE_2", "LEAF_TWITCH_2", "LEAF_OCCLUSION_2", "FROND_RIPPLE_ONE_SIDED", "FROND_RIPPLE_TWO_SIDED", "FROND_RIPPLE_ADJUST_LIGHTING", "ROLLING", "m_fStrengthResponse", "m_fDirectionResponse", "m_fAnchorOffset", "m_fAnchorDistanceScale", "Oscillation0_0", "Oscillation0_1", "Oscillation0_2", "Oscillation0_3", "Oscillation0_4", "Oscillation0_5", "Oscillation0_6", "Oscillation0_7", "Oscillation0_8", "Oscillation0_9", "Oscillation1_0", "Oscillation1_1", "Oscillation1_2", "Oscillation1_3", "Oscillation1_4", "Oscillation1_5", "Oscillation1_6", "Oscillation1_7", "Oscillation1_8", "Oscillation1_9", "Oscillation2_0", "Oscillation2_1", "Oscillation2_2", "Oscillation2_3", "Oscillation2_4", "Oscillation2_5", "Oscillation2_6", "Oscillation2_7", "Oscillation2_8", "Oscillation2_9", "Oscillation3_0", "Oscillation3_1", "Oscillation3_2", "Oscillation3_3", "Oscillation3_4", "Oscillation3_5", "Oscillation3_6", "Oscillation3_7", "Oscillation3_8", "Oscillation3_9", "Oscillation4_0", "Oscillation4_1", "Oscillation4_2", "Oscillation4_3", "Oscillation4_4", "Oscillation4_5", "Oscillation4_6", "Oscillation4_7", "Oscillation4_8", "Oscillation4_9", "Oscillation5_0", "Oscillation5_1", "Oscillation5_2", "Oscillation5_3", "Oscillation5_4", "Oscillation5_5", "Oscillation5_6", "Oscillation5_7", "Oscillation5_8", "Oscillation5_9", "Oscillation6_0", "Oscillation6_1", "Oscillation6_2", "Oscillation6_3", "Oscillation6_4", "Oscillation6_5", "Oscillation6_6", "Oscillation6_7", "Oscillation6_8", "Oscillation6_9", "Oscillation7_0", "Oscillation7_1", "Oscillation7_2", "Oscillation7_3", "Oscillation7_4", "Oscillation7_5", "Oscillation7_6", "Oscillation7_7", "Oscillation7_8", "Oscillation7_9", "Oscillation8_0", "Oscillation8_1", "Oscillation8_2", "Oscillation8_3", "Oscillation8_4", "Oscillation8_5", "Oscillation8_6", "Oscillation8_7", "Oscillation8_8", "Oscillation8_9", "Oscillation9_0", "Oscillation9_1", "Oscillation9_2", "Oscillation9_3", "Oscillation9_4", "Oscillation9_5", "Oscillation9_6", "Oscillation9_7", "Oscillation9_8", "Oscillation9_9", "m_fGlobalHeight", "m_fGlobalHeightExponent", "m_afGlobalDistance_0", "m_afGlobalDistance_1", "m_afGlobalDistance_2", "m_afGlobalDistance_3", "m_afGlobalDistance_4", "m_afGlobalDistance_5", "m_afGlobalDistance_6", "m_afGlobalDistance_7", "m_afGlobalDistance_8", "m_afGlobalDistance_9", "m_afGlobalDirectionAdherence_0", "m_afGlobalDirectionAdherence_1", "m_afGlobalDirectionAdherence_2", "m_afGlobalDirectionAdherence_3", "m_afGlobalDirectionAdherence_4", "m_afGlobalDirectionAdherence_5", "m_afGlobalDirectionAdherence_6", "m_afGlobalDirectionAdherence_7", "m_afGlobalDirectionAdherence_8", "m_afGlobalDirectionAdherence_9", "BranchLevel1", "BranchLevel2", "LeafGroup1", "LeafGroup2", "m_afFrondRippleDistance_0", "m_afFrondRippleDistance_1", "m_afFrondRippleDistance_2", "m_afFrondRippleDistance_3", "m_afFrondRippleDistance_4", "m_afFrondRippleDistance_5", "m_afFrondRippleDistance_6", "m_afFrondRippleDistance_7", "m_afFrondRippleDistance_8", "m_afFrondRippleDistance_9", "m_fFrondRippleTile", "m_fFrondRippleLightingScalar", "m_fRollingNoiseSize", "m_fRollingNoiseTwist", "m_fRollingNoiseTurbulence", "m_fRollingNoisePeriod", "m_fRollingNoiseSpeed", "m_fRollingBranchFieldMin", "m_fRollingBranchLightingAdjust", "m_fRollingBranchVerticalOffset", "m_fRollingLeafRippleMin", "m_fRollingLeafTumbleMin", "m_fGustFrequency", "m_fGustStrengthMin", "m_fGustStrengthMax", "m_fGustDurationMin", "m_fGustDurationMax", "m_fGustRiseScalar", "m_fGustFallScalar", "m_afRippleDistance_0", "m_afRippleDistance_1", "m_afRippleDistance_2", "m_afRippleDistance_3", "m_afRippleDistance_4", "m_afRippleDistance_5", "m_afRippleDistance_6", "m_afRippleDistance_7", "m_afRippleDistance_8", "m_afRippleDistance_9", "m_afTumbleFlip_0", "m_afTumbleFlip_1", "m_afTumbleFlip_2", "m_afTumbleFlip_3", "m_afTumbleFlip_4", "m_afTumbleFlip_5", "m_afTumbleFlip_6", "m_afTumbleFlip_7", "m_afTumbleFlip_8", "m_afTumbleFlip_9", "m_afTumbleTwist_0", "m_afTumbleTwist_1", "m_afTumbleTwist_2", "m_afTumbleTwist_3", "m_afTumbleTwist_4", "m_afTumbleTwist_5", "m_afTumbleTwist_6", "m_afTumbleTwist_7", "m_afTumbleTwist_8", "m_afTumbleTwist_9", "m_afTumbleDirectionAdherence_0", "m_afTumbleDirectionAdherence_1", "m_afTumbleDirectionAdherence_2", "m_afTumbleDirectionAdherence_3", "m_afTumbleDirectionAdherence_4", "m_afTumbleDirectionAdherence_5", "m_afTumbleDirectionAdherence_6", "m_afTumbleDirectionAdherence_7", "m_afTumbleDirectionAdherence_8", "m_afTumbleDirectionAdherence_9", "m_afTwitchThrow_0", "m_afTwitchThrow_1", "m_afTwitchThrow_2", "m_afTwitchThrow_3", "m_afTwitchThrow_4", "m_afTwitchThrow_5", "m_afTwitchThrow_6", "m_afTwitchThrow_7", "m_afTwitchThrow_8", "m_afTwitchThrow_9", "m_fTwitchSharpness", "m_fRollMaxScale", "m_fRollMinScale", "m_fRollSpeed", "m_fRollSeparation", "m_fLeewardScalar", "m_afDistance_0", "m_afDistance_1", "m_afDistance_2", "m_afDistance_3", "m_afDistance_4", "m_afDistance_5", "m_afDistance_6", "m_afDistance_7", "m_afDistance_8", "m_afDistance_9", "m_afDirectionAdherence_0", "m_afDirectionAdherence_1", "m_afDirectionAdherence_2", "m_afDirectionAdherence_3", "m_afDirectionAdherence_4", "m_afDirectionAdherence_5", "m_afDirectionAdherence_6", "m_afDirectionAdherence_7", "m_afDirectionAdherence_8", "m_afDirectionAdherence_9", "m_afWhip_0", "m_afWhip_1", "m_afWhip_2", "m_afWhip_3", "m_afWhip_4", "m_afWhip_5", "m_afWhip_6", "m_afWhip_7", "m_afWhip_8", "m_afWhip_9", "m_fTurbulence", "m_fTwitch", "m_fTwitchFreqScale", "SpeedTreeWind", "SParams", "SWindGroup", "SBranchWindLevel", "The tree %s couldn't be instanced because it has no material.", "The tree %s couldn't be instanced because one of the materials is missing.", "Nature/Terrain/Diffuse", "Hidden/TerrainEngine/Splatmap/Diffuse-AddPass", "Nature/Terrain/Specular", "Hidden/TerrainEngine/Splatmap/Specular-AddPass", "Hidden/TerrainEngine/Splatmap/Specular-Base", "Nature/Terrain/Standard", "Hidden/TerrainEngine/Splatmap/Standard-AddPass", "_TERRAIN_NORMAL_MAP", "SplatCount", "Unable to retrieve image reference", "Tree Imposter Texture", "SpeedTreeLocalWind", "BoxCollider", "CapsuleCollider", "Uncaught error", "Slope Limit must be smaller than 90 degrees.", "Slope Limit should be positive or zero, clamping to zero.", "Skin Width must be positive.", "Step Offset must be positive.", "Step Offset must be less or equal to <scaled Height> + <scaled Radius> * 2", "Step offset can't be negative", "Step offset can't be greater than the height of the character controller", "Step offset should be positive", "A Character Controller cannot be a trigger.", "CharacterController", "CharacterJoint", "Cannot initialize Cloth: Missing SkinnedMeshRenderer component", "Cannot initialize Cloth: Unable to extract collision mesh", "All cloth particles are fixed so the Cloth component is not initialized", "Cannot initialize Cloth: Could not create PhysX PxClothFabric", "value must be greater than or equal to 0", "value must be smaller than or equal to 1", "value must be greater than 0", "value must be greater than or equal to 1", "Cloth", "Infinity or NaN floating point numbers appear when calculating the transform matrix for a Collider. ", "Could not create actor. Maybe you are using too many colliders or rigidbodies in your scene?", "Contact offset must be greater than zero", "Setting the Material property is not supported for Colliders of type %s.", "Collider", "m_IsTrigger", "m_Enabled", "ConfigurableJoint", "ConstantForce", "ConstantForce requires a Rigidbody component, but non is present.", "FixedJoint", "HingeJoint", "It is illegal for a joint to connect a rigid body to itself.", "Joint", "Non-convex MeshCollider with non-kinematic Rigidbody is no longer supported in Unity 5.\nIf you want to use a non-convex mesh either make the Rigidbody kinematic or remove the Rigidbody component.", "Non-convex MeshCollider cannot be used as a trigger in Unity 5.\nIf you want to use this mesh as a trigger you have to make the MeshCollider convex.", "Setting scale failed, ignoring request. Please check all scaling axes are non-zero.", "Triggers on concave MeshColliders are not supported", "MeshCollider", "bouncyness", "bounciness", "Could not create Material. Maybe you have too many materials in your scene. Only 65535 are allowed.", "Physics material %s cannot have dynamicFriction = %f", "Physics material %s cannot have staticFriction = %f", "Physics material %s cannot have bounciness = %f", " (Instance)", "Default (Instance)", "PhysicMaterial", "m_BounceTreshold", "m_BounceThreshold", "Couldn't load physics", "PxInitExtensions failed!", "Mesh name \"", "The default contact offset must be greater than zero", "Ignore collision failed. Both colliders need to be activated when calling IgnoreCollision", "layer numbers must be between 0 and %d", "Too deep hierarchy to perform rigidbody ordering. Nested rigidbodies might look strange", "Inertia tensor must be larger then zero in all coordinates.", "Rotation quaternions must be unit length.", "Rigidbody", "SphereCollider", "SpringJoint", "WheelCollider requires an attached Rigidbody to function.", "Could not create wheel collider.  Maximum number of wheels per actor is 20.", "Invalid configuration of vehicle substeps.", "WheelCollider", "CollisionMeshData couldn't be created because the mesh has been marked as non-accessible.", "Failed getting triangles. Submesh index %u is out of bounds.", "Failed getting triangles. Submesh %u has no indices.", "Failed to extract collision data: Submesh %u uses unsupported primitive type \"%s\". Please use either \"%s\" or \"%s\".", " Please make sure you have unchecked \"Keep Quads\" on your model's Import Settings.", "m_SuspensionSpring", "m_SuspensionDistance", "m_ForceAppPointDistance", "m_Mass", "m_WheelDampingRate", "m_ForwardFriction", "m_SidewaysFriction", "m_ExtremumSlip", "m_ExtremumValue", "m_AsymptoteSlip", "m_AsymptoteValue", "m_Stiffness", "spring", "damper", "targetPosition", "WheelFrictionCurve", "JointSpring", "m_Spring", "m_Damper", "m_MinDistance", "m_MaxDistance", "m_BreakForce", "m_BreakTorque", "m_EnableCollision", "m_EnablePreprocessing", "m_ConnectedBody", "m_Anchor", "m_AutoConfigureConnectedAnchor", "m_ConnectedAnchor", "PPtr<Rigidbody>", "m_Drag", "m_AngularDrag", "m_UseGravity", "m_IsKinematic", "m_Interpolate", "m_FreezeRotation", "m_Constraints", "m_CollisionDetection", "m_Gravity", "m_DefaultMaterial", "m_SleepThreshold", "m_DefaultContactOffset", "m_SolverIterationCount", "m_RaycastsHitTriggers", "m_QueriesHitTriggers", "m_EnableAdaptiveForce", "m_LayerCollisionMatrix", "dynamicFriction", "staticFriction", "frictionCombine", "bounceCombine", "m_Convex", "m_Mesh", "PPtr<Mesh>", "m_UseSpring", "m_UseMotor", "m_Motor", "m_UseLimits", "m_Limits", "minBounce", "maxBounce", "bounceMinVelocity", "contactDistance", "targetVelocity", "force", "freeSpin", "m_Axis", "JointLimits", "JointMotor", "m_Force", "m_RelativeForce", "m_Torque", "m_RelativeTorque", "m_SecondaryAxis", "m_XMotion", "m_YMotion", "m_ZMotion", "m_AngularXMotion", "m_AngularYMotion", "m_AngularZMotion", "m_LinearLimit", "m_LinearLimitSpring", "m_LowAngularXLimit", "m_HighAngularXLimit", "m_AngularXLimitSpring", "m_AngularYLimit", "m_AngularZLimit", "m_AngularYZLimitSpring", "m_TargetPosition", "m_TargetVelocity", "m_XDrive", "m_YDrive", "m_ZDrive", "m_TargetRotation", "m_TargetAngularVelocity", "m_RotationDriveMode", "m_AngularXDrive", "m_AngularYZDrive", "m_SlerpDrive", "m_ProjectionMode", "m_ProjectionDistance", "m_ProjectionAngle", "m_ConfiguredInWorldSpace", "m_SwapBodies", "mode", "positionSpring", "positionDamper", "maximumForce", "limit", "JointDrive", "SoftJointLimit", "SoftJointLimitSpring", "SoftJointLimit_Unity4", "PPtr<PhysicMaterial>", "basic_string::insert", "m_StretchingStiffness", "m_BendingStiffness", "m_UseTethers", "m_Damping", "m_ExternalAcceleration", "m_RandomAcceleration", "m_WorldVelocityScale", "m_WorldAccelerationScale", "m_Friction", "m_CollisionMassScale", "m_UseContinuousCollision", "m_UseVirtualParticles", "m_SolverFrequency", "m_Coefficients", "m_CapsuleColliders", "m_SphereColliders", "maxDistance", "collisionSphereDistance", "PPtr<SphereCollider>", "PPtr<CapsuleCollider>", "ClothConstrainCoefficients", "m_SwingAxis", "m_LowTwistLimit", "m_HighTwistLimit", "m_TwistLimitSpring", "m_Swing1Limit", "m_Swing2Limit", "m_SwingLimitSpring", "m_EnableProjection", "m_SlopeLimit", "m_StepOffset", "m_SkinWidth", "m_MinMoveDistance", "m_Direction", "m_Extents", "Failed to %s a semaphore (%s)\n", "destroy", "kPrimitiveTriangles", "kPrimitiveTriangleStrip", "kPrimitiveQuads", "kPrimitiveLines", "kPrimitiveLineStrip", "kPrimitivePoints", "Unknown type", "open", "Mesh asset path \"", "Completion Task", "PxControllerDesc::callback is deprecated, please use PxControllerDesc::reportCallback instead.", "External/PhysX3/builds/Include/characterkinematic/PxController.h", "New Game Object", "AddComponent asking for invalid type", "AddComponent asking for \"%s\" which is not a Unity engine type.", "WWW request was cancelled", " URL: ", "http", "X-Unity-Version", "5.2.1f1", "Unnamed command buffer", "CommandBuffer: built-in render texture type %i not found while executing %s (%s)", "CommandBuffer: temporary render texture %s not found while executing %s (%s)", "SetRenderTarget", "SetRenderTarget color buffer", "SetRenderTarget depth buffer", "Blit source", "Blit destination", "SetGlobalTexture", "Unknown RenderingCommandBuffer command: %d (previous command: %d) in %s", "RenderingCommandBuffer: invalid pass index %i in DrawProceduralIndirect", "RenderingCommandBuffer: invalid pass index %i in DrawProcedural", "RenderingCommandBuffer: invalid pass index %i in DrawRenderer", "RenderingCommandBuffer: invalid pass index %i in DrawMesh", "blendShape.", "m_BlendShapeWeights.Array.data[", "Bone influences do not match bones.", "SkinnedMeshRenderer", "m_LodMesh", "m_Animation", "m_DisableAnimationWhenOffscreen", "Array index (%d) is out of bounds (size=%d)", "Bones do not match bindpose.", "Corrupt compressed mesh", "Mesh", "Mesh.vertices is too large. A mesh may not have more than 65000 vertices.", "Mesh.vertices is too small. The supplied vertex array has less vertices than are referenced by the triangles array.", "normals", "tangents", "colors", "Failed getting triangles. Submesh index is out of bounds.", "Failed getting triangles. Submesh topology is lines or points.", "Failed getting indices. Submesh index is out of bounds.", "failed setting triangles. triangles is NULL", "Failed setting triangles. Submesh index is out of bounds.", "Failed setting triangles. The number of supplied triangle indices must be a multiple of 3.", "Failed setting triangles. Some indices are referencing out of bounds vertices. IndexCount: %d, VertexCount: %d", "Instantiating mesh due to calling MeshFilter.mesh during edit mode. This will leak meshes. Please use MeshFilter.sharedMesh instead.", " Instance", "Mesh.boneWeights is out of bounds. The supplied array needs to be the same size as the Mesh.vertices array.", "Bone influences index is not within the number of bones.", "MeshFilter", "Cannot combine into mesh that does not allow access: %s", "Combine mesh instance %zu is null.", "Cannot combine into a mesh that is also in the CombineInstances input: %s", "Submesh index %d is invalid for mesh %s.", "Cannot combine mesh that does not allow access: %s", "Cannot combine mesh: %s", "MeshRenderer", "Managers", "MeshVertexFormatManager", "Unknown VertexDataType", "Invalid number of vertex streams", "Channel was already defined in another vertex stream: %s", "Vertex layout requires Float3 or Float4 positions", "vertex", "normal", "texcoord", "texcoord1", "texcoord2", "texcoord3", "tangent", "_AlphaTex", "_AlphaSplitEnabled", "_MainTex_TexelSize", "SpriteRenderer", "%s has more than 1 material attached to its SpriteRenderer. Use Debug Inspector to reset the SpriteRenderer's material list.", "m_CurrentChannels", "m_VertexCount", "m_Channels", "Unknown shader channel count", "m_DataSize", "stream", "offset", "format", "dimension", "ChannelInfo", "m_Sprite", "PPtr<Sprite>", "m_AdditionalVertexStreams", "vector::_M_range_insert", "m_SubMeshes", "m_Shapes", "m_BindPose", "m_BoneNameHashes", "m_RootBoneNameHash", "m_MeshCompression", "m_IsReadable", "m_KeepVertices", "m_KeepIndices", "m_IndexBuffer", "m_Skin", "m_Vertices", "m_UV", "m_UV1", "m_Tangents", "m_Normals", "m_Colors", "m_VertexData", "m_CompressedMesh", "m_LocalAABB", "m_MeshUsageFlags", "m_BakedConvexCollisionMesh", "m_BakedTriangleCollisionMesh", "m_Weights", "m_NormalSigns", "m_TangentSigns", "m_FloatColors", "m_BoneIndices", "m_Triangles", "m_UVInfo", "m_NumItems", "m_BitSize", "m_Start", "weight[0]", "weight[1]", "weight[2]", "weight[3]", "boneIndex[0]", "boneIndex[1]", "boneIndex[2]", "boneIndex[3]", "vertices", "shapes", "channels", "fullWeights", "nameHash", "frameIndex", "frameCount", "firstVertex", "vertexCount", "hasNormals", "hasTangents", "firstByte", "indexCount", "topology", "localAABB", "isTriStrip", "CompressedMesh", "PackedBitVector", "VertexData", "BoneInfluence", "Matrix4x4f", "BlendShapeData", "MeshBlendShapeChannel", "MeshBlendShape", "BlendShapeVertex", "SubMesh", "m_Quality", "m_UpdateWhenOffscreen", "m_Bones", "m_BlendShapeWeights", "m_RootBone", "m_AABB", "m_DirtyAABB", "PPtr<Transform>", "Unsupported conversion of vertex formats", "Sprites-Default.mat", "Mesh.%s is out of bounds. The supplied array needs to be the same size as the Mesh.vertices array.", "post to", "wait on", "BillboardAsset", "_BumpMap", "_BillboardTangent", "_BillboardNormal", "_CameraXZAngle", "_TreeInfo0", "_TreeInfo1", "_TreeInfo2", "_TreeInfo3", "_TreeSize0", "_TreeSize1", "_TreeSize2", "_TreeSize3", "_ImageTexCoords0", "_ImageTexCoords1", "_ImageTexCoords2", "_ImageTexCoords3", "_ImageTexCoords4", "_ImageTexCoords5", "_ImageTexCoords6", "_ImageTexCoords7", "_ImageTexCoords8", "_ImageTexCoords9", "_ImageTexCoords10", "_ImageTexCoords11", "_ImageTexCoords12", "_ImageTexCoords13", "_ImageTexCoords14", "_ImageTexCoords15", "_ImageTexCoords16", "_ImageTexCoords17", "_ImageTexCoords18", "_ImageTexCoords19", "_ImageTexCoords20", "_ImageTexCoords21", "_ImageTexCoords22", "_ImageTexCoords23", "_ImageTexCoords24", "_ImageTexCoords25", "_ImageTexCoords26", "_ImageTexCoords27", "_ImageTexCoords28", "_ImageTexCoords29", "_ImageTexCoords30", "_ImageTexCoords31", "BILLBOARD_FACE_CAMERA_POS", "Tree has too many billboard images (max %d).", "BillboardBatchManager Material", "BillboardRenderer", "LineRenderer", "m_WorldSpace", "m_UseWorldSpace", "LineRenderer.SetVertexCount: Vertex count can't be set to negative value!", "LineRenderer.SetPosition index out of bounds!", "TrailRenderer", "Texture has non-power of two size", "Cubemap faces must be square", "GetGLWidth() != GetGLHeight() || GetImageCount() != 6", "Decrunching failed.", "Rebuilding mipmaps of compressed textures is not supported", "Cubemap must have 6 faces", "Unable to allocate enough memory to process 'Fixup Edge Seemless' operation", "Can't draw into cubemap", "Cubemap", "UnityWaterMark-trial.png", "UnityWaterMark-edu.png", "UnityWaterMark-proto.png", "UnityWaterMark-dev.png", "UnityWaterMark-beta.png", "UnityWaterMarkPlugin-beta.png", "UnityWaterMark-small.png", "UnitySplash-cube.png", "UnitySplash-text.png", "camera", "OVRManager", "OVRCameraRig", "Can't do instanced Graphics.DrawProcedural", "Can't do indirect Graphics.DrawProcedural", "Graphics.DrawProcedural with invalid buffer", "UnityDitherMask2D", "UnityDitherMask3D", "UnityNormalMap", "UnityWhite", "UnityBlack", "UnityRandomRotation", "UnityRed", "UnityGrey", "UnityGrayscaleRamp", "UnityHalo", "UnityAttenuation", "UnityBlackCube", "UnityDefault2D", "UnityDefault3D", "UnityDefaultCube", "UnityNHxRoughness", "Unsupported texture format - needs to be ARGB32, RGBA32, BGRA32, RGB24, Alpha8, RGBAFloat, RGBAHalf or one of supported compressed formats.", "Unsupported texture format - needs to be ARGB32, RGBA32, RGB24, Alpha8 or one of float formats", "Width and height must be positive", "Texture rectangle is out of bounds (%d < 0)", "Texture rectangle is out of bounds (%d + %d > %d)", "Array size must be at least width*height", "Texture rectangle is out of bounds", "1.6.10", "Can't append %i lightmaps, since that would exceed the %i lightmaps limit. ", "The loaded level has a different lightmaps mode than the current one. Current: %d. Loaded: %d. Will use: %d.", "LightProbeGroup", "Matrix stack full depth reached", "Matrix stack empty", "Failed setting path. Index is out of bounds.", "Fastest", "UnityGraphicsQuality", "RectTransform", "m_AnchoredPosition", "SendReapplyDrivenProperties", "TempBuffer %d %ix%i", "Attempting to release RenderTexture that were not gotten as a temp buffer", "Renderer", "Invalid layer id. Please use the unique id of the layer (which is not the same as its index in the list).", "_EmissionColor", "material.", "RenderTexture.Create failed: width & height must be larger than 0", "RenderTexture.Create failed: cube maps must be power of two and width must match height", "RenderTexture.Create failed: maxRenderTextureSize is too small", "RenderTexture.Create failed: requested size is too large.", "RenderTexture.Create failed: format unsupported.", "RenderTexture.Create failed: non-power-of-two sizes not supported.", "RenderTexture.Create failed: cubemap not supported.", "RenderTexture.Create failed: volume texture not supported.", "RenderTexture.Create: Depth|ShadowMap RenderTexture requested without a depth buffer. Changing to a 16 bit depth buffer.", "RenderTexture.Create failed", "Releasing render texture that is set to be RenderTexture.active!", "Setting dimension of already created render texture is not supported!", "Setting volume depth of already created render texture is not supported!", "Invalid antiAliasing value (must be 1, 2, 4 or 8)", "Setting anti-aliasing of already created render texture is not supported!", "Mipmapped RenderTextures with manual mip generation can't have depth buffer", "Setting mipmap generation of already created render texture is not supported!", "Setting sRGB mode of already created render texture is not supported!", "Setting VR mode of already created render texture is not supported!", "Setting random write mode of already created render texture is not supported!", "Setting width of already created render texture is not supported!", "Setting height of already created render texture is not supported!", "Setting mipmap mode of already created render texture is not supported!", "Invalid DepthBufferFormat!", "Setting depth format of already created render texture is not supported!", "Invalid RenderTextureFormat!", "Setting color format of already created render texture is not supported!", "RenderTexture", "ASTCenc: Internal error: File=%s Line=%d\n", "m_ReceiveShadows", "m_Materials", "m_SubsetIndices", "m_StaticBatchRoot", "m_UseLightProbes", "m_ProbeAnchor", "m_SortingLayerID", "m_SortingOrder", "m_AntiAliasing", "m_DepthFormat", "m_ColorFormat", "m_MipMap", "m_GenerateMips", "m_SRGB", "m_TextureSettings", "m_FilterMode", "m_Aniso", "m_MipBias", "m_WrapMode", "GLTextureSettings", "m_AnchorMin", "m_AnchorMax", "m_SizeDelta", "m_Pivot", "m_CurrentQuality", "m_QualitySettings", "m_DefaultStandaloneQuality", "m_DefaultWebPlayerQuality", "m_DefaultMobileQuality", "m_EditorQuality", "Fast", "Simple", "Good", "Beautiful", "Fantastic", "m_StrippedMaximumLODLevel", "pixelLightCount", "shadows", "shadowResolution", "shadowProjection", "shadowCascades", "shadowDistance", "shadowNearPlaneOffset", "shadowCascade2Split", "shadowCascade4Split", "blendWeights", "textureQuality", "anisotropicTextures", "antiAliasing", "softParticles", "softVegetation", "realtimeReflectionProbes", "billboardsFaceCameraPosition", "vSyncCount", "lodBias", "maximumLODLevel", "particleRaycastBudget", "syncToVBL", "QualitySetting", "m_EnlightenSceneMapping", "m_LightProbes", "m_Lightmaps", "m_LightmapsMode", "m_GISettings", "m_RuntimeCPUUsage", "m_BounceScale", "m_IndirectOutputScale", "m_AlbedoBoost", "m_TemporalCoherenceThreshold", "m_EnvironmentLightingMode", "m_EnableBakedLightmaps", "m_EnableRealtimeLightmaps", "m_DynamicEnv", "m_Lightmap", "m_IndirectLightmap", "m_Renderers", "m_Systems", "m_SystemAtlases", "m_TerrainChunks", "firstSystemId", "numChunksInX", "numChunksInY", "atlasSize", "atlasHash", "rendererIndex", "rendererSize", "atlasIndex", "atlasOffsetX", "atlasOffsetY", "inputSystemHash", "radiositySystemHash", "renderer", "dynamicLightmapSTInSystem", "systemId", "instanceHash", "GISettings", "LightmapData", "PPtr<LightProbes>", "EnlightenSceneMapping", "EnlightenTerrainChunksInformation", "EnlightenSystemAtlasInformation", "EnlightenSystemInformation", "EnlightenRendererInformation", "m_SourceTextures", "m_Time", "m_StartWidth", "m_EndWidth", "m_MinVertexDistance", "m_Autodestruct", "Gradient", "m_Parameters", "startWidth", "endWidth", "m_StartColor", "m_EndColor", "LineParameters", "m_Billboard", "PPtr<BillboardAsset>", "bottom", "imageTexCoords", "rotated", "indices", "material", "m_Materials.Array.data[", "Quad", "Quad.fbx", "%s(%u): Assertion failure: \"%s\"\n", "crnd_malloc: size too big", "crnd_malloc: out of memory", "crnd_realloc: bad ptr", "crnd_free: bad ptr", "Failed getting crunch texture info.", "Failed unpacking crunch mip level.", "Failed crunch end.", "./External/TextureCompressors/Crunch/inc/crn_decomp.h", "Sprite", "Vertex array is too large. A sprite mesh may not have more than %d vertices.", "Invalid triangle index count. The number of supplied triangle indices must be a multiple of 3.", "Invalid triangle index array. Some indices are referencing out of bounds vertices. IndexCount: %d, VertexCount: %d.", "Invalid vertex array. Some vertices are outside of the Sprite rectangle: (%f, %f).", "Sprite outline generation failed - could not read texture pixel data. Did you forget to make the texture readable?", "Texture", "Texture is not accessible.", "Texture has out of range width / height", "TextureFormat is invalid!", "No texture data available to upload", "Texture2D", "m_CompleteImageSize", "m_TextureFormat", "m_MipCount", "m_ReadAllowed", "m_ImageCount", "m_TextureDimension", "m_LightmapFormat", "image data", "Texture '%s' is degenerate (dimensions %dx%d)", "Texture '%s' is not readable, the texture memory can not be accessed from scripts. You can make the texture readable in the Texture Import Settings.", "Texture '%s' has no data", "SetPixel called on an undefined image (valid values are 0 - %d", "Invalid mip level", "SetPixels called on an undefined image (valid values are 0 - %d", "GetPixel called on an undefined image (valid values are 0 - %d", "GetPixelBilinear called on an undefined image (valid values are 0 - %d", "GetPixels called on an undefined image (valid values are 0 - %d", "GetPixels32 called on a degenerate image (dimensions %dx%d)", "GetPixels32 failed: insufficent pixel buffer size (%d), must be at least %d x %d", "Trying to read pixels out of bounds", "Negative read pixels rectangle width|height", "ReadPixels was called to read pixels from system frame buffer, while not inside drawing frame.", "ReadPixels called on undefined image %d (valid values are 0 - %d", "Unsupported texture format for ReadPixels - needs to be ARGB32, RGB24, RGBAFloat or RGBAHalf", "Texture is not readable.", "Can't resize to a compressed texture format", "Texture '%s' is not readable, Compress will not work. You can make the texture readable in the Texture Import Settings.", "Texture3D has non-power of two size", "Invalid texture format for Texture3D", "Texture3D has out of range width / height / depth", "Texture3D is too large", "SetPixels32 called with invalid number of pixels in the array", "Texture3D", "SparseTexture", "Invalid texture format for SparseTexture", "Sparse textures are not supported", "SparseTexture has out of range width / height", "SparseTexture format is not supported on this platform", "Uploading sparse texture tile before the texture is initialized!", "Invalid mip level for sparse texture tile upload", "Invalid tile X index for sparse texture tile upload", "Invalid tile Y index for sparse texture tile upload", "Can't upload color data into a compressed sparse texture", "Not enough data passed for sparse texture tile upload", "gUserMinAniso < 1", "gUserMaxAniso > 16", "Cannot change GameObject hierarchy while activating or deactivating the parent.", "CheckConsistency: Transform child can't be loaded", "CheckConsistency: Transform child has another parent", "CheckConsistency: Transform child is linked multiple times to parent; removed extraneous links from parent", "m_LocalRotation", "m_LocalPosition", "m_LocalScale", "m_Children", "m_Father", "m_Format", "m_Rect", "m_Border", "m_PixelsToUnits", "m_Extrude", "m_RD", "alphaTexture", "textureRect", "textureRectOffset", "settingsRaw", "uvTransform", "SpriteRenderData", "SpriteVertex", "Texture has no data", "Failed to encode to %s", "Unity GI cubemap", "Lightmaps", "Failed opening GI file: '%s'.\n", "_StaticUV1", "Hidden/GIDebug/UV1sAsPositions", "Unlit/Color", "_Decode_HDR", "_ConvertToLinearSpace", "Hidden/GIDebug/TextureUV", "Clearing float images not supported in player", "Bilinear floating-point blitter is not supported for different pixel formats", "Bilinear floating-point blitter is only supported for RGBA float formats", "Behaviour", "(Clone)", "MemoryStream", "Unable to init atlas texture", "Could not read texture data for texture '%s'. Make sure that Read/Write access is enabled in the texture importer advanced settings\n", "unity_World2Shadow", "Don't call SetShadersMainThread on threadable device! Use GraphicsHelper instead", "Unknown ImmediateShape", "Forcing GfxDevice: %s\n", "#ifdef ", "#endif", "!!GLSL", "!!GLES31AEP", "!!GLES31", "!!GLES3", "!!GLES", "!!GL3x", "!!GL4x", "vs_2_0", "vs_3_0", "ps_2_0", "ps_3_0", "vs_4_0_level_9", "ps_4_0_level_9", "vs_dx11", "vs_4_0", "vs_5_0", "ps_dx11", "ps_4_0", "ps_5_0", "gs_4_0", "gs_5_0", "hs_5_0", "ds_5_0", "metal_vs", "metal_fs", "!!ARBvp1.0", "3.0-!!ARBvp1.0", "!!ARBfp1.0", "3.0-!!ARBfp1.0", "agal_vs", "agal_ps", "!!error", "Shader had programs with errors, disabling subshader\n", "GpuProgram creation error: empty shader string", "Failed to create a shader variant (starts with '%s'). You probably have precompiled shader asset from an old Unity version.", "basic_string::substr", "OpenGL", "Direct3D 9", "Direct3D 11", "Null", "Xbox 360", "OpenGL ES 2", "OpenGL ES 3", "PS Vita", "Xbox One", "Metal", "OpenGL Core", "Direct3D 12", "Nintendo 3DS", "Wii U", "VERTEX", "NORMAL", "COLOR", "TEXCOORD", "TEXCOORD1", "TEXCOORD2", "TEXCOORD3", "TANGENT", "unity_World2Shadow0", "unity_World2Shadow1", "unity_World2Shadow2", "unity_World2Shadow3", "glstate_light0_diffuse", "glstate_light1_diffuse", "glstate_light2_diffuse", "glstate_light3_diffuse", "glstate_light0_position", "glstate_light1_position", "glstate_light2_position", "glstate_light3_position", "glstate_light0_attenuation", "glstate_light1_attenuation", "glstate_light2_attenuation", "glstate_light3_attenuation", "glstate_light0_spotDirection", "glstate_light1_spotDirection", "glstate_light2_spotDirection", "glstate_light3_spotDirection", "white", "black", "gray", "grey", "grayscaleRamp", "greyscaleRamp", "bump", "blackCube", "lightmap", "unity_Lightmap", "unity_LightmapInd", "unity_DynamicLightmap", "unity_DynamicDirectionality", "unity_DynamicNormal", "_DitherMaskLOD", "_DitherMaskLOD2D", "unity_RandomRotation16", "unity_NHxRoughness", "unity_SpecCube0", "unity_SpecCube1", "_PlanarReflectionTex0", "_PlanarReflectionTex1", "_PlanarReflectionTex2", "unity_LightColor0", "unity_LightColor1", "unity_LightColor2", "unity_LightColor3", "unity_LightColor4", "unity_LightColor5", "unity_LightColor6", "unity_LightColor7", "unity_LightPosition0", "unity_LightPosition1", "unity_LightPosition2", "unity_LightPosition3", "unity_LightPosition4", "unity_LightPosition5", "unity_LightPosition6", "unity_LightPosition7", "unity_SpotDirection0", "unity_SpotDirection1", "unity_SpotDirection2", "unity_SpotDirection3", "unity_SpotDirection4", "unity_SpotDirection5", "unity_SpotDirection6", "unity_SpotDirection7", "unity_LightAtten0", "unity_LightAtten1", "unity_LightAtten2", "unity_LightAtten3", "unity_LightAtten4", "unity_LightAtten5", "unity_LightAtten6", "unity_LightAtten7", "unity_VertexLightParams", "glstate_lightmodel_ambient", "_WorldSpaceLightPos0", "_LightColor0", "_WorldSpaceCameraPos", "unity_WorldTransformParams", "_ProjectionParams", "_ScreenParams", "_ZBufferParams", "unity_OrthoParams", "_LightPositionRange", "unity_Ambient", "unity_LightmapFade", "_ShadowOffsets0", "_ShadowOffsets1", "_ShadowOffsets2", "_ShadowOffsets3", "_LightShadowData", "unity_LightShadowBias", "_LightSplitsNear", "_LightSplitsFar", "unity_ShadowSplitSpheres0", "unity_ShadowSplitSpheres1", "unity_ShadowSplitSpheres2", "unity_ShadowSplitSpheres3", "unity_ShadowSplitSqRadii", "unity_ShadowCascadeScales", "unity_ShadowFadeCenterAndType", "unity_LODFade", "unity_LightmapST", "unity_DynamicLightmapST", "unity_SHAr", "unity_SHAg", "unity_SHAb", "unity_SHBr", "unity_SHBg", "unity_SHBb", "unity_SHC", "_Time", "_SinTime", "_CosTime", "_PiTime", "unity_DeltaTime", "unity_4LightPosX0", "unity_4LightPosY0", "unity_4LightPosZ0", "unity_4LightAtten0", "unity_FogStart", "unity_FogEnd", "unity_FogDensity", "unity_FogColor", "unity_FogParams", "unity_ColorSpaceGrey", "unity_ColorSpaceDouble", "unity_ColorSpaceLuminance", "unity_LightGammaCorrectionConsts", "unity_NPOTScale", "unity_CameraWorldClipPlanes0", "unity_CameraWorldClipPlanes1", "unity_CameraWorldClipPlanes2", "unity_CameraWorldClipPlanes3", "unity_CameraWorldClipPlanes4", "unity_CameraWorldClipPlanes5", "unity_AmbientSky", "unity_AmbientEquator", "unity_AmbientGround", "unity_ColorSpaceDielectricSpec", "_PlanarReflection0", "_PlanarReflection1", "_PlanarReflection2", "_PlanarReflectionTangent0", "_PlanarReflectionTangent1", "_PlanarReflectionTangent2", "_PlanarReflectionBiTangent0", "_PlanarReflectionBiTangent1", "_PlanarReflectionBiTangent2", "unity_SpecCube0_HDR", "unity_SpecCube0_BoxMax", "unity_SpecCube0_BoxMin", "unity_SpecCube0_ProbePosition", "unity_SpecCube1_HDR", "unity_SpecCube1_BoxMax", "unity_SpecCube1_BoxMin", "unity_SpecCube1_ProbePosition", "unity_MatrixV", "glstate_matrix_projection", "unity_MatrixVP", "_WorldToCamera", "_CameraToWorld", "_World2Shadow", "_World2Shadow1", "_World2Shadow2", "_World2Shadow3", "unity_LightmapMatrix", "_Projector", "_ProjectorDistance", "_ProjectorClip", "_GUIClipTextureMatrix", "_LightMatrix0", "unity_CameraProjection", "unity_CameraInvProjection", "glstate_matrix_mvp", "glstate_matrix_modelview0", "_Object2World", "_World2Object", "glstate_matrix_transpose_modelview0", "glstate_matrix_invtrans_modelview0", "Error looking up signature for method %s.%s", ".ctor", "Coroutine continue failure", "coroutine->IsInList()", "Another coroutine is already waiting for this coroutine!\nCurrently only one coroutine can wait for another coroutine!", "This asynchronous operation is already being yielded from another coroutine. An asynchronous operation can only be yielded once.", "m_Script", "MonoBehaviour", "DestroyImmediate should not be called on the same game object when destroying a MonoBehaviour", "Coroutine '%s' couldn't be started!", "Coroutine couldn't be started!", "Coroutine couldn't be started because the the game object '%s' is inactive!", "Failed to call function %s of class %s\n", "Calling function %s with no parameters but the function requires %d.", "Calling function %s with 1 parameter but the function requires %d.", "Coroutine '%s' couldn't be started because the the game object '%s' is inactive!", "Reset", "GUISkin", "customStyles", "m_CustomStyles", "m_EditorClassIdentifier", "m_ScriptingClassIdentifier", "The script behaviour '%s' could not be instantiated!", "The referenced script on this Behaviour is missing!", "Managed", "mscorlib.dll", "Platform assembly: %s (this message is harmless)\n", "Non platform assembly: %s (this message is harmless)\n", "Loading script assembly \"", "\" failed!", "./Runtime/Mono/MonoManager.cpp", "ClassLibraryInitializer", "Init", "Begin MonoManager ReloadAssembly\n", "Reload Assembly may not be called multiple times in the player", "Object::FindAnyObjectOfType<MonoBehaviour> ()", "Object::FindAnyObjectOfType<MonoScript> ()", "- Completed reload, in %6.3f seconds\n", "UnityEngine", "Mono Class %s couldn't be found! This might lead to random crashes later on!", "Unity Root Domain", "v2.0.50727", "Unity", "Failed to postprocess stacktrace\n", ".dll", "%s:%s:%s", "MonoScript", "Update", "LateUpdate", "FixedUpdate", "Awake", "Start", "Main", "OnRenderObject", "OnEnable", "OnDisable", "OnDisableINTERNAL", "OnRenderImage", "OnDrawGizmos", "OnGUI", "OnValidate", "OnSerializeNetworkView", "OnNetworkInstantiate", "OnDestroy", "OnAudioFilterRead", "OnDidApplyAnimationProperties", "OnStateEnter", "OnStateExit", "OnStateUpdate", "OnStateMove", "OnStateIK", "OnStateMachineEnter", "OnStateMachineExit", "ClassNotFound", "Unknown", "The class named '%s' does not exist!", "The class named '%s' is not derived from MonoBehaviour or ScriptableObject!", "The class named '%s' is abstract. The script class can't be abstract!", "The class named '%s' is an interface. The script can't be an interface!", "The class named '%s' is generic. Generic MonoBehaviours are not supported!", "The class named '%s' is not yet initialized!", "m_ExecutionOrder", "m_ClassName", "m_Namespace", "m_AssemblyName", "m_IsEditorScript", "m_AssemblyIdentifier", "Unity Engine Special", "UnityEngine.dll", "Unity Editor Special", "UnityEditor.dll", "UnityEditor", "Assembly - ", "m_PropertiesHash", "m_Scripts", "m_AssemblyNames", "m_CustomDlls", "PPtr<MonoScript>", "Script error (", "() can not take parameters.", "./Runtime/Mono/MonoScriptCache.cpp", "() can not be a coroutine.", "Script error: ", "The message will be ignored.", "The message must have 0 or 1 parameters.\n", "The message may not have any parameters.\n", "Collision", "Collision2D", "This message parameter has to be of type: ", "Script error (%s): %s.\n", "The function will be ignored.", "%sThe function must have exactly %i parameters.\n%s", "Script error(%s): %s.\n", " and ", "The function parameters have to be of type: ", "Mono path[%d] = '%s'\n", "Mono config path = '%s'\n", "Failed loading assembly %s\n", "Loading %s into Unity Child Domain\n", "Failed loading assembly '%s'\n", "Instance of %s couldn't be created. The the script class needs to derive from ScriptableObject.", "Instance of %s couldn't be created. All script needs to successfully compile first!", "%s couldn't be called because the expected parameter %s doesn't match %s.", "(at ", "Thread is not attached to scripting runtime", "System", "UnityException", "IndexOutOfRangeException", "NullReferenceException", "ArgumentException", "System.Security", "SecurityException", "(null)", "List`1", "Unsupported enum type '%s' used for field '%s' in class '%s'", "Type cannot be null.", "ScriptableObject", "Vector2", "Vector3", "Vector4", "Rect", "RectOffset", "Quaternion", "Matrix4x4", "Bounds", "Resolution", "Particle", "Color", "Color32", "RaycastHit", "RaycastHit2D", "AnimationState", "LayerMask", "WaitForSeconds", "WaitForFixedUpdate", "WaitForEndOfFrame", "CharacterInfo", "Font", "InvokeTextureRebuilt_Internal", "Coroutine", "ContactPoint", "ControllerColliderHit", "ContactPoint2D", "ClothSphereColliderPair", "Event", "SerializeField", "SerializePrivateVariables", "FormerlySerializedAsAttribute", "UnityEngine.Serialization", "HideInInspector", "ISerializationCallbackReceiver", "OnBeforeSerialize", "OnAfterDeserialize", "HostData", "BitStream", "NetworkViewID", "NetworkMessageInfo", "GUIStyle", "TextGenerator", "AnimationCurve", "BoneWeight", "AnimationEvent", "AssetBundleRequest", "AsyncOperation", "ResourceRequest", "AssetBundleCreateRequest", "CacheIndex", "CachedFile", "Keyframe", "ImageEffectOpaque", "UnityEngine.Rendering", "CommandBuffer", "GraphicsDeviceType", "ImageEffectTransformsToLDR", "System.Collections", "IEnumerator", "String", "Int32", "Single", "Double", "Byte", "Char", "IntPtr", "UInt16", "UInt32", "Int16", "Int64", "Boolean", "MulticastDelegate", "Hashtable", "ArrayList", "IList", "IDictionary", "DateTime", "AttributeHelperEngine", "GetRequiredComponents", "GetParentTypeDisallowingMultipleInclusion", "SetupCoroutine", "InvokeMember", "InvokeStatic", "CheckIsEditorScript", "StackTraceUtility", "ExtractStackTrace", "ExtractStringFromExceptionInternal", "PostprocessStacktrace", "MoveNext", "Application", "CallLogCallback", "get_Current", "IDisposable", "Dispose", "GUIUtility", "BeginGUI", "EndGUI", "CallWindowDelegate", "Internal_MakeMasterEventCurrent", "SendMouseEvents", "SetMouseMoved", "DoSendMouseEvents", "SetProjectFolder", "AssemblyIsEditorAssembly", "GradientColorKey", "GradientAlphaKey", "ProceduralPropertyDescription", "Animator", "AnimatorStateInfo", "AnimatorTransitionInfo", "AnimatorClipInfo", "SkeletonBone", "HumanBone", "SharedBetweenAnimatorsAttribute", "StateMachineBehaviour", "UIVertex", "UICharInfo", "UILineInfo", "NetworkIdentity", "UNetStaticUpdate", "WebCamDevice", "Display", "RecreateDisplayList", "FireDisplaysUpdated", "MultiDisplayLicense", "FireOnPreCull", "FireOnPreRender", "FireOnPostRender", "CullingGroup", "SendEvents", "Playable", "AnimatorControllerPlayable", "FrameData", "ReflectionProbeBlendInfo", "NavMeshTriangulation", "_AndroidJNIHelper", "UnityEngine.Networking.dll", "UnityEngine.Audio", "UnityEngine.Networking", "UnityEngine.Experimental.Director", "Invoke repeat rate has to be larger than 0.00001F)", "TextAsset", "m_PathName", "Destroy may not be called from edit mode! Use DestroyImmediate instead.\nAlso think twice if you really want to destroy something in edit mode. Since this will destroy objects permanently.", "Instance of %s couldn't be created because there is no script with that name.", "%s%s%s must be instantiated using the ScriptableObject.CreateInstance method instead of new %s.", "FindAllObjectsOfType: Invalid Type", "FindAllObjectsOfType: The type has to be derived from UnityEngine.Object. Type is ", "Unable to find method %s in [%s]%s.%s", "Unable to find type [%s]%s.%s", "Couldn't extract exception string from exception (another exception of class '", "' was thrown while processing the stack trace)", "Renderer '%s' is registered with more than one LODGroup ('%s' and '%s').", "LODGroup", "SetLODs: Attempting to force a LOD outside the number available LODs", "m_LocalReferencePoint", "m_FadeMode", "m_AnimateCrossFading", "m_LODs", "screenRelativeHeight", "fadeTransitionWidth", "renderers", "fadeMode", "LODRenderer", "LODStruct50", "UnitySubstanceThread", "Could not allocate memory in OnMalloc (SubstanceSystem)", "Received Substance output %08x with no associated texture", "Failed to retrieve substance texture data", "ProceduralMaterial(%s): Unexpected error (Texture input is not in RAM), try a reimport", "ProceduralMaterial(%s): Texture input is compressed in undecompressable format, you should switch it to RAW, then reimport the material", "Failed to set substance memory budget", "Failed to update substance memory budget", "INVALID", "%s Material(%s) Error Code (%u)", "ProceduralTexture", "Substance %s should be set to RAW in order to use GetPixels32 on its texture outputs.", "The isReadable property of Substance %s should be set to true in order to use GetPixels32 on its texture outputs.", "Texture data not accessible.", "Failed to start substance computation", "$outputsize", "$randomseed", "Failed to apply substance input as hint", "Failed to apply substance input image", "Unsupported substance input type", "Failed to apply substance input", "Failed to apply substance texture outputs", "ProceduralMaterial", "Failed to push Substance texture input : unexpected error", "Failed to push Substance texture input : unsupported format %d for input %s", "Could not allocate memory for textureInput.buffer (ApplyTextureInput)", "$time", "Failed to initialize substance linker", "Failed to pack substance (substanceLinkerHandlePushAssemblyMemory)", "Failed to pack substance (ShuffleOutputs, %d)", "Failed to pack substances (substanceLinkerHandleSelectOutputs)", "Failed to pack substance (Substance_Linker_Select_Select, %d)", "Could not allocate memory for Substance data (PackSubstances)", "Failed to pack substances (substanceLinkerHandleLink)", "Failed to save SBSBIN data for material %s", "Failed to pack substances (substanceHandleInit)", "Failed to pack substances (SubstanceInputDesc)", "Could not allocate memory for Substance linked data", "%u.cache", "formatversion=\"1.0\"", "/sbspreset", "presetinput", "identifier", "$normalformat", "type", "value", "<sbspresets formatversion=\"1.0\" count=\"1\">\n", " <sbspreset pkgurl=\"\" description=\"\" label=\"\">\n", " <presetinput identifier=\"", "\" uid=\"", "\" type=\"", "\" value=\"", "\"/>\n", " </sbspreset>\n", "</sbspresets>\n", "Trying to save linked substance data to a package that already has it", "Could not allocate memory for a Substance package linked data", "SubstanceArchive", "m_PackageData", "m_MaximumSize", "m_GenerateMipmaps", "m_Textures", "m_Flags", "m_LoadingBehavior", "m_SubstancePackage", "m_Inputs", "m_PrototypeName", "m_AnimationUpdateRate", "label", "group", "visibleIf", "internalType", "internalIndex", "internalIdentifier", "componentLabels", "minimum", "maximum", "step", "flags", "alteredTexturesUID", "enumValues", "text", "scalar[0]", "scalar[1]", "scalar[2]", "scalar[3]", "SubstanceEnumItem", "SubstanceValue", "SubstanceInput", "PPtr<SubstanceArchive>", "PPtr<ProceduralTexture>", "m_SubstanceMaterial", "m_SubstanceTextureUID", "Type", "AlphaSource", "m_AlphaSourceUID", "AlphaSourceIsGrayscale", "m_AlphaSourceIsInverted", "m_Mipmaps", "Format", "m_BakedData", "m_BakedParameters", "mipLevels", "textureFormat", "TextureParameters", "PPtr<ProceduralMaterial>", "ProceduralInput VisibleIf evaluator error: not enough operands during RPN evaluation.", "ProceduralInput VisibleIf evaluator error: unrecognized operand during RPN evaluation.", "ProceduralInput VisibleIf evaluator error: empty stack at the end of RPN evaluation.", "ProceduralInput VisibleIf evaluator error: too many operands left in the stack at the end of RPN evaluation.", "ProceduralInput VisibleIf evaluator error: ProceduralInput token should have been converted to float already.", "ProceduralInput VisibleIf evaluator error: converting an operator to a float is not supported.", "ProceduralInput VisibleIf evaluator error: unknown operator type during to-bool conversion.", "ProceduralInput VisibleIf evaluator error: ProceduralInput token should have been converted to bool already.", "ProceduralInput VisibleIf evaluator error: converting an operator to a bool is not supported.", "ProceduralInput VisibleIf evaluator error: mismatched parentheses.", "%1s%n", "%f%n", "%2s%n", " input[\"%127[a-zA-Z0-9_$]\"]%n", " input.%127[a-zA-Z0-9_$]%n", ".%1[xyzw]%n", "ProceduralInput VisibleIf evaluator error: component %c does not exist for input %s.", "%4s%n", "true", "%5s%n", "false", "ProceduralInput VisibleIf evaluator error: unrecognized token at the end of the visibleIf expression: %s", "GUIEventManager", "Submit", "return", "joystick button 0", "enter", "space", "Cancel", "escape", "joystick button 1", "Horizontal", "Vertical", "right", "left", "down", "Fire1", "Fire2", "Fire3", "Jump", "left ctrl", "mouse 0", "left alt", "mouse 1", "left shift", "mouse 2", "Mouse X", "Mouse Y", "Mouse ScrollWheel", "joystick button 2", "joystick button 3", "Time.timeScale is out of range. Needs to be between 0 and 100.", "Trying to expire empty touch slot!", "Fixed Timestep", "Maximum Allowed Timestep", "m_TimeScale", "m_Axes", "descriptiveName", "descriptiveNegativeName", "negativeButton", "positiveButton", "altNegativeButton", "altPositiveButton", "gravity", "dead", "sensitivity", "snap", "invert", "axis", "joyNum", "InputAxis", "backspace", "clear", "pause", "delete", "world 0", "world 1", "world 2", "world 3", "world 4", "world 5", "world 6", "world 7", "world 8", "world 9", "world 10", "world 11", "world 12", "world 13", "world 14", "world 15", "world 16", "world 17", "world 18", "world 19", "world 20", "world 21", "world 22", "world 23", "world 24", "world 25", "world 26", "world 27", "world 28", "world 29", "world 30", "world 31", "world 32", "world 33", "world 34", "world 35", "world 36", "world 37", "world 38", "world 39", "world 40", "world 41", "world 42", "world 43", "world 44", "world 45", "world 46", "world 47", "world 48", "world 49", "world 50", "world 51", "world 52", "world 53", "world 54", "world 55", "world 56", "world 57", "world 58", "world 59", "world 60", "world 61", "world 62", "world 63", "world 64", "world 65", "world 66", "world 67", "world 68", "world 69", "world 70", "world 71", "world 72", "world 73", "world 74", "world 75", "world 76", "world 77", "world 78", "world 79", "world 80", "world 81", "world 82", "world 83", "world 84", "world 85", "world 86", "world 87", "world 88", "world 89", "world 90", "world 91", "world 92", "world 93", "world 94", "world 95", "equals", "insert", "home", "page up", "page down", "numlock", "caps lock", "scroll lock", "right shift", "right ctrl", "right alt", "right cmd", "left cmd", "left super", "right super", "alt gr", "compose", "help", "print screen", "sys req", "break", "menu", "power", "euro", "undo", "mouse 3", "mouse 4", "mouse 5", "mouse 6", "joystick button 4", "joystick button 5", "joystick button 6", "joystick button 7", "joystick button 8", "joystick button 9", "joystick button 10", "joystick button 11", "joystick button 12", "joystick button 13", "joystick button 14", "joystick button 15", "joystick button 16", "joystick button 17", "joystick button 18", "joystick button 19", "joystick 1 button 0", "joystick 1 button 1", "joystick 1 button 2", "joystick 1 button 3", "joystick 1 button 4", "joystick 1 button 5", "joystick 1 button 6", "joystick 1 button 7", "joystick 1 button 8", "joystick 1 button 9", "joystick 1 button 10", "joystick 1 button 11", "joystick 1 button 12", "joystick 1 button 13", "joystick 1 button 14", "joystick 1 button 15", "joystick 1 button 16", "joystick 1 button 17", "joystick 1 button 18", "joystick 1 button 19", "joystick 2 button 0", "joystick 2 button 1", "joystick 2 button 2", "joystick 2 button 3", "joystick 2 button 4", "joystick 2 button 5", "joystick 2 button 6", "joystick 2 button 7", "joystick 2 button 8", "joystick 2 button 9", "joystick 2 button 10", "joystick 2 button 11", "joystick 2 button 12", "joystick 2 button 13", "joystick 2 button 14", "joystick 2 button 15", "joystick 2 button 16", "joystick 2 button 17", "joystick 2 button 18", "joystick 2 button 19", "joystick 3 button 0", "joystick 3 button 1", "joystick 3 button 2", "joystick 3 button 3", "joystick 3 button 4", "joystick 3 button 5", "joystick 3 button 6", "joystick 3 button 7", "joystick 3 button 8", "joystick 3 button 9", "joystick 3 button 10", "joystick 3 button 11", "joystick 3 button 12", "joystick 3 button 13", "joystick 3 button 14", "joystick 3 button 15", "joystick 3 button 16", "joystick 3 button 17", "joystick 3 button 18", "joystick 3 button 19", "joystick 4 button 0", "joystick 4 button 1", "joystick 4 button 2", "joystick 4 button 3", "joystick 4 button 4", "joystick 4 button 5", "joystick 4 button 6", "joystick 4 button 7", "joystick 4 button 8", "joystick 4 button 9", "joystick 4 button 10", "joystick 4 button 11", "joystick 4 button 12", "joystick 4 button 13", "joystick 4 button 14", "joystick 4 button 15", "joystick 4 button 16", "joystick 4 button 17", "joystick 4 button 18", "joystick 4 button 19", "joystick 5 button 0", "joystick 5 button 1", "joystick 5 button 2", "joystick 5 button 3", "joystick 5 button 4", "joystick 5 button 5", "joystick 5 button 6", "joystick 5 button 7", "joystick 5 button 8", "joystick 5 button 9", "joystick 5 button 10", "joystick 5 button 11", "joystick 5 button 12", "joystick 5 button 13", "joystick 5 button 14", "joystick 5 button 15", "joystick 5 button 16", "joystick 5 button 17", "joystick 5 button 18", "joystick 5 button 19", "joystick 6 button 0", "joystick 6 button 1", "joystick 6 button 2", "joystick 6 button 3", "joystick 6 button 4", "joystick 6 button 5", "joystick 6 button 6", "joystick 6 button 7", "joystick 6 button 8", "joystick 6 button 9", "joystick 6 button 10", "joystick 6 button 11", "joystick 6 button 12", "joystick 6 button 13", "joystick 6 button 14", "joystick 6 button 15", "joystick 6 button 16", "joystick 6 button 17", "joystick 6 button 18", "joystick 6 button 19", "joystick 7 button 0", "joystick 7 button 1", "joystick 7 button 2", "joystick 7 button 3", "joystick 7 button 4", "joystick 7 button 5", "joystick 7 button 6", "joystick 7 button 7", "joystick 7 button 8", "joystick 7 button 9", "joystick 7 button 10", "joystick 7 button 11", "joystick 7 button 12", "joystick 7 button 13", "joystick 7 button 14", "joystick 7 button 15", "joystick 7 button 16", "joystick 7 button 17", "joystick 7 button 18", "joystick 7 button 19", "joystick 8 button 0", "joystick 8 button 1", "joystick 8 button 2", "joystick 8 button 3", "joystick 8 button 4", "joystick 8 button 5", "joystick 8 button 6", "joystick 8 button 7", "joystick 8 button 8", "joystick 8 button 9", "joystick 8 button 10", "joystick 8 button 11", "joystick 8 button 12", "joystick 8 button 13", "joystick 8 button 14", "joystick 8 button 15", "joystick 8 button 16", "joystick 8 button 17", "joystick 8 button 18", "joystick 8 button 19", "joystick 9 button 0", "joystick 9 button 1", "joystick 9 button 2", "joystick 9 button 3", "joystick 9 button 4", "joystick 9 button 5", "joystick 9 button 6", "joystick 9 button 7", "joystick 9 button 8", "joystick 9 button 9", "joystick 9 button 10", "joystick 9 button 11", "joystick 9 button 12", "joystick 9 button 13", "joystick 9 button 14", "joystick 9 button 15", "joystick 9 button 16", "joystick 9 button 17", "joystick 9 button 18", "joystick 9 button 19", "joystick 10 button 0", "joystick 10 button 1", "joystick 10 button 2", "joystick 10 button 3", "joystick 10 button 4", "joystick 10 button 5", "joystick 10 button 6", "joystick 10 button 7", "joystick 10 button 8", "joystick 10 button 9", "joystick 10 button 10", "joystick 10 button 11", "joystick 10 button 12", "joystick 10 button 13", "joystick 10 button 14", "joystick 10 button 15", "joystick 10 button 16", "joystick 10 button 17", "joystick 10 button 18", "joystick 10 button 19", "joystick 11 button 0", "joystick 11 button 1", "joystick 11 button 2", "joystick 11 button 3", "joystick 11 button 4", "joystick 11 button 5", "joystick 11 button 6", "joystick 11 button 7", "joystick 11 button 8", "joystick 11 button 9", "joystick 11 button 10", "joystick 11 button 11", "joystick 11 button 12", "joystick 11 button 13", "joystick 11 button 14", "joystick 11 button 15", "joystick 11 button 16", "joystick 11 button 17", "joystick 11 button 18", "joystick 11 button 19", "cyan", "blue", "darkblue", "lightblue", "purple", "yellow", "lime", "fuchsia", "silver", "orange", "brown", "maroon", "green", "olive", "navy", "teal", "aqua", "magenta", "key0", "key1", "key2", "key3", "key4", "key5", "key6", "key7", "ctime0", "ctime1", "ctime2", "ctime3", "ctime4", "ctime5", "ctime6", "ctime7", "atime0", "atime1", "atime2", "atime3", "atime4", "atime5", "atime6", "atime7", "m_NumColorKeys", "m_NumAlphaKeys", "AssetBundle", "archive:/", "AssetBundleManager", "Level '%s' is already registered with another AssetBundle", "BuildPlayer-", "AssetBundleManifest", "AssetBundle with name \"%s\" doesn't exist in the AssetBundleManifest.", "assets", "sharedAssets", "CustomAssetBundle", "The unity3d file is not a valid AssetBundle.", "The AssetBundle '%s' can't be loaded because another AssetBundle with the same files are already loaded", "The AssetBundle '%s' can't be loaded because it was not built with the right version or build target.", "<unknown>", "Error while reading AssetBundle header, only uncompressed AssetBundles with 'UnityRaw' signature are supported!", "UnityRaw", "This AssetBundle was not created with UncompressedAssetBundle flag, expected id 'UnityRaw', got '%s'", "The AssetBundle '%s' can't be loaded because another AssetBundle with the same files are already loaded.", "5.0.0.a1", "1.6.0", "mainData", "level%d", "UnityCache", "Shared", "__lock", "Cannot find cache folder for ", "Could not read __info file.", "CRC Mismatch. Provided %x, calculated %x from downloaded data. Will not load cached AssetBundle", "Cannot load cached AssetBundle. A file of the same name is already loaded from another AssetBundle.", "Cannot load cached AssetBundle.", "Cannot load cached AssetBundle. Cached file does not contain AssetBundle data.", "Cannot load cached AssetBundle. Unable to read AssetBundle object.", "Cannot load cached AssetBundle. Unable to integrate AssetBundle object.", "Cache expiration may not be higher then %d", "%llu\n%d\n%llu\n", "ReadCacheIndex", "Maximum disk space used exceeds what is allowed by the license", "Temp", "Cache=", ";Domain=", ";Admin", ";Size=%lld", ";Expiration=%d", "Authorization to use the caching API failed.\n", "Authorization for this cache has expired. Please renew your caching authorization. It will still work in the editor, but will fail in any players you build. (%d)", "Failed to store screen shot", "Failed to capture screen shot", "Can't add component because the component '%s' can't be produced.", "'%s'", " or ", "Adding component failed. Add required component of type %s to the game object '%s' first.", "UnityEngine.", "Can't add component because class '%s' doesn't exist!", "Can't add component because '%s' is not derived from Component.", "Can't destroy Transform component of '%s'. If you want to destroy the game object, please call 'Destroy' on the game object instead. Destroying the transform component is not allowed.", " (Script)", "Can't remove %s because %s depends on it", "Destroying object multiple times. Don't use DestroyImmediate on the same object in OnDisable or OnDestroy.", "Destroying components immediately is not permitted during physics trigger/contact, animation event callbacks or OnValidate. You must use Destroy instead.", "Cannot destroy Component while GameObject is being activated or deactivated.", "Can't destroy RectTransform component of '%s'. If you want to destroy the game object, please call 'Destroy' on the game object instead. Destroying the RectTransform component is not allowed.", "Component Removing internal failure", "Destroying GameObjects immediately is not permitted during physics trigger/contact, animation event callbacks or OnValidate. You must use Destroy instead.", "Cannot destroy GameObject while it is being activated or deactivated.", "Destroying AssetBundle directly is not permitted.\nUse AssetBundle.UnloadBundle to destroy an AssetBundle.", "null", "UnityEngine.%s", "%s (%s)", "Tag: tag name is null.", "Tag: %s is not defined.", "Scene hierarchy path \"", "BatchDeleteObjects", "UnloadUnusedAssets incorrect caused some assets to load. This can easily cause deadlocks or crashes.", "\nUnloading %d unused Assets to reduce memory usage. Loaded Objects now: %d.\n", "Total: %f ms (FindLiveObjects: %f ms CreateObjectMapping: %f ms MarkObjects: %f ms  DeleteObjects: %f ms)\n\n", "Sphere", "Capsule", "Cylinder", "Cube", "Plane", "New-Sphere.fbx", "New-Capsule.fbx", "New-Cylinder.fbx", "New-Plane.fbx", "2.6.1f3", "library/unity default resources", "No mainData file was found, quitting player!\n", "PlayerInitEngineNoGraphics settings: %s\n", "PlayerInitEngineGraphics: GPU not supported; %s\n", "PlayerInitEngineGraphics: %s\n", "PlayerLoop called recursively!", "Skipped frame because GfxDevice is in invalid state (device lost)", "OVRPlugin", "UnityPreload", "PreloadData", "com.Company.ProductName", "defaultWebScreenWidth", "defaultScreenWidthWeb", "defaultWebScreenHeight", "defaultScreenHeightWeb", "iPhoneBundleIdentifier", "bundleIdentifier", "iPhoneBundleVersion", "bundleVersion", "enableHWStatistics", "submitAnalytics", "firstStreamedLevelWithResources", "firstStreamedSceneWithResources", "orientation out of range", "orientation out of range, ignoring", "all orientations are disabled for auto-rotation. Enabling Portrait", "Library/unity default resources", "Internal-ErrorShader.shader", "Camera-DepthNormalTexture.shader", "Internal-PrePassCollectShadows.shader", "Internal-CombineDepthNormals.shader", "Internal-BlitCopy.shader", "Internal-Clear.shader", "Internal-Colored.shader", "Internal-SplashShadowCaster.shader", "Internal-SplashShadowBlur.shader", "Internal-SplashShadowReceiver.shader", "Internal-SplashShadowReceiverSimple.shader", "Internal-Flare.shader", "Internal-Halo.shader", "Internal-GUITextureClip.shader", "Internal-GUITextureClipText.shader", "Internal-GUITextureBlit.shader", "Arial.ttf", "Font.shader", "Sphere.fbx", "Cylinder.fbx", "Plane.fbx", "Capsule.fbx", "EscToExit_back.png", "EscToExit_text.png", "WarningSign.psd", "UnitySplash-free.png", "UnitySplashBack.png", "Sprites-Default.shader", "GameSkin/GameSkin.guiskin", "GameSkin/box.png", "GameSkin/button active.png", "GameSkin/button hover.png", "GameSkin/button on hover.png", "GameSkin/button on.png", "GameSkin/button.png", "GameSkin/horizontal scrollbar thumb.png", "GameSkin/horizontal scrollbar.png", "GameSkin/horizontalslider.png", "GameSkin/slider thumb active.png", "GameSkin/slider thumb.png", "GameSkin/slidert humb hover.png", "GameSkin/toggle active.png", "GameSkin/toggle hover.png", "GameSkin/toggle on hover.png", "GameSkin/toggle on.png", "GameSkin/toggle on active.png", "GameSkin/toggle.png", "GameSkin/vertical scrollbar thumb.png", "GameSkin/vertical scrollbar.png", "GameSkin/verticalslider.png", "GameSkin/window on.png", "GameSkin/window.png", "GameSkin/textfield.png", "GameSkin/textfield on.png", "GameSkin/textfield hover.png", "DeveloperConsole", "UserAuthorizationDialog", "UI/UI-Default.shader", "UI/UI-DefaultFont.shader", "Normal-Diffuse.shader", "The resource ", " could not be loaded from the resource file!", "Invalid path", "Initialize engine version: %s\n", "5.2.1f1 (44735ea161b3)", "Resource file has already been unloaded.", "UnloadTime: %f ms\n", "OSXEditor", "OSXPlayer", "WindowsPlayer", "OSXWebPlayer", "OSXDashboardPlayer", "WindowsWebPlayer", "WindowsEditor", "iPhonePlayer", "PS3Player", "XenonPlayer", "WiiUPlayer", "AndroidPlayer", "LinuxPlayer", "LinuxWebPlayer", "LinuxEditor", "WebGL", "MetroPlayerX86", "MetroPlayerX64", "MetroPlayerARM", "WP8Player", "BlackBerryPlayer", "TizenPlayer", "SamsungTVPlayer", "Afrikaans", "Arabic", "Basque", "Belarusian", "Bulgarian", "Catalan", "Chinese", "SerboCroatian", "Czech", "Danish", "Dutch", "English", "Estonian", "Faroese", "Finnish", "French", "German", "Greek", "Hebrew", "Hungarian", "Icelandic", "Indonesian", "Italian", "Japanese", "Korean", "Latvian", "Lithuanian", "Norwegian", "Polish", "Portuguese", "Romanian", "Russian", "Slovak", "Slovenian", "Spanish", "Swedish", "Thai", "Turkish", "Ukrainian", "Vietnamese", "m_Container", "m_DependentAssets", "m_Object", "m_Dependencies", "ResourceManager_Dependency", "m_NamespaceNames", "m_ClassInfos", "m_ClassMethodInfos", "m_BeforeUnityMethodExecutionOrders", "m_AfterUnityMethodExecutionOrders", "m_BeforeMethodExecutionOrders", "m_AfterMethodExecutionOrders", "m_ClassIndex", "m_MethodName", "m_OrderNumber", "m_AssemblyNameIndex", "m_NamespaceIndex", "m_NumOfMethods", "m_MethodIndex", "m_IsUnityClass", "ClassMethodInfo", "ClassInfo", "AndroidProfiler", "defaultScreenOrientation", "targetDevice", "targetResolution", "useOnDemandResources", "accelerometerFrequency", "companyName", "productName", "defaultCursor", "cursorHotspot", "m_ShowUnitySplashScreen", "defaultScreenWidth", "defaultScreenHeight", "m_MobileRenderingPath", "m_ActiveColorSpace", "m_MTRendering", "m_MobileMTRendering", "m_Stereoscopic3D", "iosShowActivityIndicatorOnLoading", "androidShowActivityIndicatorOnLoading", "iosAppInBackgroundBehavior", "displayResolutionDialog", "iosAllowHTTPDownload", "allowedAutorotateToPortrait", "allowedAutorotateToPortraitUpsideDown", "allowedAutorotateToLandscapeRight", "allowedAutorotateToLandscapeLeft", "useOSAutorotation", "use32BitDisplayBuffer", "disableDepthAndStencilBuffers", "defaultIsFullScreen", "defaultIsNativeResolution", "runInBackground", "captureSingleScreen", "Override IPod Music", "Prepare IOS For Recording", "usePlayerLog", "bakeCollisionMeshes", "forceSingleInstance", "resizableWindow", "useMacAppStoreValidation", "gpuSkinning", "xboxPIXTextureCapture", "xboxEnableAvatar", "xboxEnableKinect", "xboxEnableKinectAutoTracking", "xboxEnableFitness", "visibleInBackground", "macFullscreenMode", "d3d9FullscreenMode", "d3d11FullscreenMode", "xboxSpeechDB", "xboxEnableHeadOrientation", "xboxEnableGuest", "n3dsDisableStereoscopicView", "n3dsEnableSharedListOpt", "n3dsEnableVSync", "xboxOneResolution", "ps3SplashScreen", "videoMemoryForVertexBuffers", "psp2PowerMode", "psp2AcquireBGM", "wiiUTVResolution", "wiiUGamePadMSAA", "wiiUSupportsNunchuk", "wiiUSupportsClassicController", "wiiUSupportsBalanceBoard", "wiiUSupportsMotionPlus", "wiiUSupportsProController", "wiiUAllowScreenCapture", "wiiUControllerCount", "m_SupportedAspectRatios", "preloadedAssets", "metroEnableIndependentInputSource", "metroEnableLowLatencyPresentationAPI", "xboxOneDisableKinectGpuReservation", "virtualRealitySupported", "cloudProjectId", "projectName", "organizationId", "cloudEnabled", "Others", "16:10", "16:9", "AspectRatios", "m_Assets", "scenes", "preloadedPlugins", "hasRenderTexture", "hasPROVersion", "isNoWatermarkBuild", "isPrototypingBuild", "isEducationalBuild", "isEmbedded", "hasPublishingRights", "hasShadows", "hasSoftShadows", "hasLocalLightShadows", "hasAdvancedVersion", "enableDynamicBatching", "isDebugBuild", "usesOnMouseEvents", "enableMultipleDisplays", "hasClusterRendering", "m_Version", "m_AuthToken", "runtimeClassHashes", "scriptHashes", "m_GraphicsAPIs", "AssetBundleNames", "AssetBundlesWithVariant", "AssetBundleInfos", "AssetBundleHash", "AssetBundleDependencies", "AssetBundleInfo", "m_MainAsset", "m_PreloadTable", "m_RuntimeCompatibility", "m_AssetBundleName", "m_IsStreamedSceneAssetBundle", "preloadIndex", "preloadSize", "asset", "AssetInfo", "UnitySetGraphicsDevice", "UnityRenderEvent", "UnityGetAudioEffectDefinitions", "UnityPluginLoad", "UnityPluginUnload", "Couldn't open %s, error: %s", "Skipped rendering frame because GfxDevice is in invalid state (device lost)", "sharedassets0.assets", "Resources/unity_builtin_extra", "Data/unity default resources", "UNITY_GIVE_CHANCE_TO_ATTACH_DEBUGGER", "Can't add component to object that is being destroyed.", "Can't add component '%s' to %s because it conflicts with the existing '%s' derived component!", "Can't add component '%s' to %s because it conflicts with the '%s' derived component!", "Can't add component '%s' to %s because such a component is already added to the game object!", "Can't add component '%s' to %s because the game object is a generated prefab and can only be modified through an AssetPostprocessor.", "Cannot add component of type '%s' because it is abstract. Add component of type that is derived from '%s' instead.", "Can't add '%s' to %s because a '%s' is already added to the game object!", "Can't add '%s' to %s because a '%s' is already added to the game object!\nA GameObject can only contain one '%s' component", "Can't add script behaviour %s. The scripts file name does not match the name of the class defined in the script!", "Can't add script behaviour %s because it is an editor script. To attach a script it needs to be outside the 'Editor' folder.", "Script %s has not finished compilation yet. Please wait until compilation of the script has finished and try again.", "Can't add script behaviour %s. The script class can't be abstract!", "Can't add script behaviour %s. The script can't be an interface!", "Can't add script behaviour %s. Generic MonoBehaviours are not supported!", "Can't add script behaviour %s. The script needs to derive from MonoBehaviour!", "Can't add a %s component because one is already added.", "__info", "The AssetBundle is incomplete and error happens when parsing the AssetBundle header.", "BuildPlayer", "The AssetBundle '%s' could not be loaded because it contains run-time classes of incompatible version. Rebuild the AssetBundle to fix this error.", "The AssetBundle '%s' could not be loaded because it references scripts that are not compatible with the currently loaded ones. Rebuild the AssetBundle to fix this error.", "The AssetBundle '%s' could not be loaded because it is not compatible with this newer version of the Unity runtime. Rebuild the AssetBundle to fix this error.", "starting www download: %s\n", "loading from cache: %s\n", "You are trying to load data from a www stream which had the following error when downloading.\n%s", "WWWCached data can only be accessed using the assetBundle property!", "Permanent", "NewDelete", "MallocFree", "Thread", "Manager", "DynamicGeometry", "ImmediateGeometry", "Geometry", "BatchedGeometry", "Particles", "Shader", "TextureCache", "GfxDevice", "GfxThread", "Animation", "Audio", "AudioData", "AudioProcessing", "AudioTemp", "FMOD", "FMODStream", "FMODSample", "FMODExtraDSP", "Physics", "Physics2D", "Serialization", "Input", "ThreadStack", "JobScheduler", "GarbageCollector", "GLib", "GLibImage", "Mono", "MonoCode", "ScriptingNativeRuntime", "BaseObject", "Resource", "File", "Network", "WebCam", "Profiler", "MemoryProfiler", "MemoryProfilerString", "Culling", "Skinning", "TerrainPhysics", "Shadow", "StaticString", "DynamicArray", "UTF16String", "Utility", "Curl", "PoolAlloc", "AssetServerCache", "TypeTree", "ScriptManager", "Substance", "Sprites", "Unet", "ClusterRenderer", "ClusterInput", "Director", "GPUMemory", "CloudService", "WebRequest", "SceneManager", "EditorGui", "EditorUtility", "VersionControl", "UndoBuffer", "Undo", "AssetDatabase", "StreamingManager", "PreviewImage", "AssetImporter", "FBXImporter", "EditorGi", "Yaml", "License", "CADImporter", "UnityConnect", "TempAlloc", "WebViewCallback", "TempJobAlloc", "TempOverflow", "PS3VideoMemory", "PS3RingBuffers", "PS3RSXBuffers", "PS3DelayedRelease", "PSP2GXMBuffers", "PSP2GXMVertexData", "PS4ShaderUcode", "WinRTTLS", "XboxOneGpuMemory", "WiiUMP4", "CafeOSDynLoad", "InvalidAlloc", "SketchUp", "InternalOnAfterDeserialize", "Generic Mono", "PPtr<$>", "m_Normal", "m_Hover", "m_Active", "m_Focused", "m_OnNormal", "m_OnHover", "m_OnActive", "m_OnFocused", "m_Margin", "m_Padding", "m_Overflow", "m_Font", "m_FontSize", "m_FontStyle", "m_Alignment", "m_WordWrap", "m_RichText", "m_TextClipping", "m_ImagePosition", "m_ContentOffset", "m_FixedWidth", "m_FixedHeight", "m_StretchWidth", "m_StretchHeight", "m_Left", "m_Right", "m_Top", "m_Bottom", "m_Background", "m_TextColor", "m_Curve", "m_PreInfinity", "m_PostInfinity", "time", "inSlope", "outSlope", "PPtr<Font>", "GUIStyleState", "GradientNEW", "%s::%s", "Serialization depth limit exceeded at '%s'. There may be an object composition cycle in one or more of your serialized classes.", "Failed to call function because it was null", "Failed to call instance function %s because the no object was provided", "Failed to call static function %s because an object was provided", "Game name", "Connected players", "Player limit", "Password protected", "IP address", "Port", "Comment", "masterserver.unity3d.com", "Cannot resolve master server address, you must be connected to the internet before using it or set the address to something accessible to you.", "Internal error while connecting to master server. Too many connected peers.", "Internal error while attempting to connect to master server.", "Internal error while attempting to connect to master server\n", "Attempting to connect to master server at %s:%d", "Disconnected from master server", "Lost connection to master server, reconnecting and resending host info", "Connection with master server lost", "Temporarily banned from the master server", "Connected to master server at %s", "Already connected to the master server, the server probably hasn't cleaned up because of an abrupt disconnection.", "Failed to connect to master server at %s", "Unkown game type", "Incorrect master server password", "Incoming host list query response from master server.", "Malformed data inside IP information packet. Size was %f", "Received malformed data in the host list from the master server\n", "Received identifier %u from master server", "Redirecting master server host updates to %s", "Changing facilitator location to %s", "Redirecting master server host list queries to %s", "Message from master server: %s", "Unknown message from master server (%s) %d", "Empty game type given in QueryHostList(), aborting query.", "Could not retrieve internal IP address. Host registration failed.", "Empty game type given during host registration, aborting", "Empty game name given during host registration, aborting", "It's not possible to register a host until it is running.", "Sent host registration to master server, registering a %sNAT assisted game as\n \"%s\", %d, %d, %s, \"%s\"", "non-", "password protected", "not password protected", "Still waiting for a master server reponse to another host update, ignoring this update.", "Sent new host update to master server", "Sent host update to master server with identifier %d", "__RPCNetworkInstantiate", "__RPCReceiveViewIDBatch", "__RPCRequestViewIDBatch", "__RPCNetworkDestroy", "You may not be connected when initializing security layer.", "Failed to initialize network interface. Is the listen port already in use?", "Running as server. Player ID is 0.", "Failed to connect to NAT facilitator\n", "Failed to connect to proxy server at %s.", "Empty host IP list given in Connect\n", "Failed to initialize network connection before connecting.", "Failed to connect to proxy server at %s\n", "Sent connect request to proxy at %s\n", "Failed to connect. This is caused by an incorrect parameters, internal error or too many existing connections.", "Running as client. No player ID set yet.", "proxy.unity3d.com", "Cannot resolve proxy address, make sure you are connected to the internet before connecting to a server.", "Failed to connect to NAT facilitator at %s\n", "Sent connect request to facilitator at %s\n", "Couldn't close connection because the player is not connected.", "Unable to connect internally to NAT target(s), no response.", "Connected to facilitator at %s\n", "Doing NAT punch through to %s using %s\n", "Connected to proxy server but proxy support not enabled.", "Failed to send server init to proxy server.", "Sending init req. to proxy server at %s", "Sending init req. to %s, relayed through proxy", "Failed to send client init to server.", "Connected to %s\n", "The system we attempted to connect to is not accepting new connections.", "We preset an RSA public key which does not match what the system we connected to is using.", "The proxy server is using a password and has refused our connection because we did not set it correctly.", "The remote system is using a password and has refused our connection because we did not set the correct password.", "The connection request to %s failed. Are you sure the server can be connected to?", "Failed to connect to %s because this system is already connected. This can occur when the network connection is disconnected too quickly for the remote system to receive the disconnect notification, for example when using Network.Disconnect(0).", "We are banned from the system we attempted to connect to.", "New incoming connection but not a server.", "New connection established (%s)", "Failed to reconnect to NAT facilitator at %s\n", "Connection lost to NAT facilitator, reconnecting.\n", "Lost connection to proxy server at %s", "A client has disconnected from this server. Player ID %d, IP %s", "The server has disconnected from the client. Most likely the server has shut down.", "A packet has been tampered with in transit.", "Successfully performed NAT punchthrough to %s\n", "Successfully accepted NAT punchthrough connection from %s\n", "NAT target %s not connected to NAT facilitator %s\n", "Connection to target %s lost\n", "Initiating NAT punchthrough attempt to target %s failed\n", "Receiving NAT punchthrough attempt from target %s failed\n", "Received pong from %s", "Proxy version %d", "Successfully initialized relay service from proxy server. Using port %u.", "Failed to initialize relay service from proxy server. No available ports reported.", "A proxied client has disconnected from this server. Player ID %d, IP %s", "State update from client %s, through proxy", "Error receiving proxy RPC: %s", "Unhandled relayed message %d from %s", "Unhandled message %d from %s", "Network protocol version %d connected", "Registering new proxied client %s", "Allocated %d batches of size %d for player %d", "Failed to send initialization message to new client", "Sent initalization to player %d", "Set player ID to %d\n", "Failed receiving RPC batch index", "Failed to send RPC batch to client!", "Sent batch %d of size %d to %d\n", "Failed to send RPC batch to because he is not in the player list!", "Couldn't send buffered RPCs to proxied client", "Couldn't send buffered RPCs to client", "NetworkPlayer instance not found for address %s, probably not connected", "SetReceivingEnabled failed because the player is not connected.", "Enabling sending group %d for player %d", "Disabling sending group %d for player %d", "SetSendingEnabled failed because the player is not connected.", "State update for an object this players owns has been received. Packet was ignored.", "State update was received from someone else than the server. Packet was ignored. Sender was %s", "Received state update for view '%s' and ignored it because the channel %d is disabled.\n", "Received state update for view id' %s' but the NetworkView doesn't exist", "A client can only destroy his own player objects, %d is a remote player", "Destroying objects belonging to player %d", "No objects for the given player ID were deleted %d", "Destroying object with view ID '%s'", "Couldn't destroy object because the associate network view was not found", "Network destroying view ID '%s'", "Couldn't perform remote Network.Destroy because the network view '%s' could not be located.", "Performing proxied RPC '%s' to server %s", "Couldn't send proxied RPC function '%s' to proxy server\n", "Couldn't send RPC function '%s' to server\n", "Sent RPC call '%s' to all connected clients\n", "Couldn't send RPC function '%s' through proxy\n", "Couldn't send RPC function '%s'\n", "Client sending specific target RPC '%s' to %s", "Server sending specific target RPC '%s' to %s", "Relay RPC - name: %s - mode %d - sender %s", "Couldn't relay RPC call '%s' because the player %d is not connected", "Server sending proxied relay specific target RPC '%s' to %s", "Couldn't relay RPC call '%s'", "Added RPC '%s' to buffer.", "Failed to send remove RPCs command to network", "Sent remove RPCs player command to server", "RPC %s with %s, player ID %d and group %d, removed from RPC buffer.", "%d RPC function were removed with RemoveRPC", "View ID %s not found during lookup. Strange behaviour may occur", "Failed to request view id batch", "Failed to allocate view id because no NetworkView's were available to allocate from. You should increase the minimum client NetworkViewID count.", "Allocating view ID %s.\n", "Fixing invalid scene view ID %s", "A client which was not in the connected player list disconnected. ???", "Failed Network.Instantiate because we are not connected.", "The prefab '%s' reference must be a component or game object.", "The object %s must be a prefab in the project view.", "Network.Instantiate on the receiving client failed because the asset couldn't be found in the project", "Network.Instantiate sent component but found asset is not a prefab.", "Network.Instantiate component index is out of bounds.", "Network.Instantiate received non-matching number of view id's as contained in prefab", "Network.Instantiate was ignored since the group of the network view is disabled.", "Internal problem connecting to new facilitator address", "facilitator.unity3d.com", "Cannot resolve facilitator address, make sure you are connected to the internet before connecting to a server with NAT punchthrough enabled", "connectiontester.unity3d.com", "Cannot resolve connection tester address, you must be connected to the internet before performing this or set the address to something accessible to you.", "Timeout during connection test", "The connection tester is not accepting new connections, test finished.", "Failed to connect to connection tester at %s", "The connection tester has banned this connection.", "Disconnected from connection tester.", "Lost connection to connection tester.", "Connection Tester returned invalid NAT type.", "Already connected to connection tester, attempting to trigger new test.", "Received invalid message type %d from connection tester at %s", "Starting NAT connection test.", "Connection Tester requesting test on external IP and port %d", "Failed to initialize network connection before NAT test.", "Starting public address connection test.", "Failed to connect the connection tester.", "Connecting to connection tester at %s", "Failed to connect to connection tester during NAT test.", "0.0.0.0", "GetLocalIP: Error setting socket", "83.221.146.11", "GetLocalIP: Error during connect", "GetLocalIP: Error using getsockname", "android.permission.INTERNET not available?", "Error creating pipe! (%s, %i)", "Unable to set non-blocking pipe! (%s, %i)", "Error forking process! (%s, %i)", "-qnc", "Error spawning child process '%s'! (%s, %i)", "%*s%f", "Error parsing ping output!\n%s", "Can't send RPC function since no connection was started.", "RPC %s is ignored since the group of its network view is disabled.", "Can't send RPC function because the target is not connected to the server.", "Allocating scene view ID to new object", "Received state update for view ID %s but no initial state has ever been sent. Ignoring message.\n", "Network View synchronization error. Received packet but the observed class is not supported as a synchronization type", "Receiving state for an object whose network view exists but the observed object no longer exists", "Received state update for view ID %s\n", "Network View synchronization of  %s is not supported. Pack the state manually from a script.", "Failed to send relayed state update", "Sending state update relay message through proxy, destination is %s", "Failed to send state update", "Sending generic state update, broadcast %s, view ID '%s'\n", "Failed to send relayed initial update", "Sending initial state relay message through proxy, destination is %s", "Failed to send initial update", "Sending generic initial state update, broadcast %s, view ID '%s'\n", "Assigning a view ID: old view ID '%s', new view ID '%s'\n", "Groups must be between 0 and 31.", "Initial state being sent to index %d", "Player index %d not found when setting scope in network view %s", "Scope index %d is now %s scope for %s", "out of", "New scope index %d is now %s scope for %s", "NetworkView", "SceneID: %u Level Prefix: %u", "AllocatedID: %u", "Strings sent via RPC calls may not be larger than 4096 UTF8 characters", "RPC call failed because the function '%s' does not exist in any script attached to'%s'", "RPC call failed because the function '%s' does not exist in the any script attached to'%s'", "Failed to invoke arriving RPC method because the parameters didn't match the function declaration. '%s' of '%s'.", "Sending RPC '%s' failed because the number of supplied parameters doesn't match the rpc declaration. Expected %d but got %zd parameters.", "Sending RPC '%s' failed because the number of supplied parameters doesn't match the RPC declaration. Expected %d but got %zd parameters.", "Sending RPC failed because '%s' parameter %d was null", "Sending RPC failed because '%s' parameter %d (%s) is not supported.", "Sending RPC failed because '%s' parameter %d didn't match the RPC declaration. Expected '%s' but got '%s'", "unable to create socket", "failed to set blocking mode", "Socket: %s, error: %s(%d)", "Error: cannot set socket in non block mode\n", "Cannot send", "Cannot receive", "getaddrinfo: %s\n", "Cannot switch socket in dual mode", "Socket: bind failed, error: Only one usage of each socket address (protocol/network address/port) is normally permitted.", "Error: cannot bind socket\n", "::FFFF:%s", "invalid address {%s} or port {%d}\n", "getnameinfo: %s\n", "xxxx:xx", "m_StateSynchronization", "m_Observed", "m_ViewID", "m_ID", "m_DebugLevel", "m_Sendrate", "m_AssetToPrefab", "data[0]", "data[1]", "data[2]", "data[3]", "GUID", "./External/RakNet/builds/include/DS_List.h", "RPC call failed because the observed object is not a script.", "RPC call failed because the script couldn't be loaded. The function was '%s'.", "RPC call failed because the function '%s' in '%s' does not have the RPC attribute. You need to add the RPC attribute in front of the function declaration", "Received RPC '%s'- mode %d - sender %s", "Relay RPC to specifc target - player ID %s", "Could't invoke RPC function '%s' because the networkView '%s' doesn't exist", "RPC %s is ignored since the group of the network view is disabled.", "/system/bin/ping", "Network instantiated object, %s, has a missing script component attached", "size", "TypelessData", "name != m_OldBaseType.Name ()", "Unknown error occurred while loading '%s'.", "Failed to load '%s' because its serialized file version is higher than what this version of Unity supports.", "Trying to reload asset from disk that is not stored on disk", "Trying to reload asset but can't find object on disk", "Recursive Serialization is not supported. You can't dereference a PPtr while loading. (Constructors of C# classes may not load objects either eg. EditorGUIUtility.TextContent should be moved to OnEnable. See stacktrace.)", "Could not produce class with ID ", "Tryng to load a stream which is already loaded.", "Unloading %d Unused Serialized files (Serialized files now loaded: %d)\n", "Script extraction failure", "Source and Destination Types do not match", "Fatal error while reading file. Header is invalid!", "basic_string::_M_replace_dispatch", "Error while reading serialized data.", "Error while writing serialized data.", "The file can not be loaded because it was created for another build target that is not compatible with this platform.\nPlease make sure to build AssetBundles using the build target platform that it is used by.\nFile's Build target is: %d\n", "Invalid serialized file version. File: \"%s\". Expected version: 5.2.1f1. Actual version: %s.", "A script behaviour has a different serialization layout when loading. (Read %d bytes but expected %d bytes)\nDid you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?", "Mismatched serialization in the builtin class '%s'. (Read %d bytes but expected %d bytes)", "resG", "resS", "library/unity editor resources", "Remapper pool", "i->first.serializedFileIndex != serializedFileIndex", "Resource image for '", "' couldn't be loaded!", "The file '", "' is corrupted! Remove it and launch unity again!\n[Position out of bounds!]", "GetAddressOfMemory called on CacheReaderBase which does not support it", "GetAddressOfMemory called on CacheWriterBase which does not support it", "m_FileSize - position < size", "none", "ShaderVariantCollection", "m_Shaders", "Shader warmup: %i shaders %i combinations %.3fs\n", "variants", "keywords", "passType", "ShaderInfo", "VariantInfo", "Platform does not support compute shaders", "ComputeShader", "OpenGL 3.2 is required. Your GPU (%s) or OpenGL drivers only supports OpenGL %i.%i", "Your GPU (%s) or driver doesn't support OpenGL ES 3", "OpenGL ES 3.0 is required. Your GPU (%s) or OpenGL ES drivers only supports OpenGL %i.%i", "OpenGL ES 2.0 is required. Your GPU (%s) or OpenGL ES drivers only supports OpenGL %i.%i", "OpenGL ES 3.1 is required. Your GPU (%s) or OpenGL ES drivers only supports OpenGL %i.%i", "Standard", "Instantiating material due to calling renderer.material during edit mode. This will leak materials into the scene. You most likely want to use renderer.sharedMaterial instead.", "Material", "m_ShaderKeywords", "m_LightmapFlags", "m_CustomRenderQueue", "stringTagMap", "m_SavedProperties", "The material property is different from already stored property.", "WARNING: Shader ", "Unsupported: '%s' - Setting to default shader.\n", "ERROR: Shader ", "%s - Has No SubShaders - Setting to default shader.\n", "No valid subshaders in '%s'.shader", "SPOT", "DIRECTIONAL", "DIRECTIONAL_COOKIE", "POINT", "POINT_COOKIE", "SHADOWS_OFF", "SHADOWS_DEPTH", "SHADOWS_SCREEN", "SHADOWS_CUBE", "SHADOWS_SOFT", "SHADOWS_SPLIT_SPHERES", "SHADOWS_NATIVE", "SHADOWS_SINGLE_CASCADE", "LIGHTMAP_OFF", "LIGHTMAP_ON", "DIRLIGHTMAP_OFF", "DIRLIGHTMAP_COMBINED", "DIRLIGHTMAP_SEPARATE", "DYNAMICLIGHTMAP_OFF", "DYNAMICLIGHTMAP_ON", "FOG_LINEAR", "FOG_EXP", "FOG_EXP2", "_EMISSION", "VERTEXLIGHT_ON", "HDR_LIGHT_PREPASS_ON", "ENABLE_LOD_FADE", "LOD_FADE_PERCENTAGE", "LOD_FADE_CROSSFADE", "Maximum number (%i) of shader keywords exceeded, keyword %s will be ignored.\nYou will have to delete some shaders or make them use less keywords.\nKeywords used in project now:", "CGProgram", "m_PreloadShaders", "m_ObjectToName", "NameToObjectMap", "m_ShaderIsBaked", "m_TexEnvs", "m_Floats", "UnityPropertySheet", "FastPropertyName", "UnityTexEnv", "targetRenderer", "targetLevel", "kernels", "constantBuffers", "resourcesResolved", "byteSize", "params", "arraySize", "rowCount", "colCount", "textures", "builtinSamplers", "inBuffers", "outBuffers", "code", "sampler", "bindPoint", "generatedName", "secondaryBindPoint", "ComputeShaderParam", "ComputeShaderCB", "ComputeShaderBuiltinSampler", "ComputeShaderResource", "ComputeShaderKernel", "ComputeShaderVariant", "Legacy Shaders/Diffuse", "Bumped Specular", "Legacy Shaders/Bumped Specular", "Bumped Diffuse", "Legacy Shaders/Bumped Diffuse", "VertexLit", "Legacy Shaders/VertexLit", "Parallax Specular", "Legacy Shaders/Parallax Specular", "Parallax Diffuse", "Legacy Shaders/Parallax Diffuse", "Specular", "Legacy Shaders/Specular", "Diffuse Detail", "Legacy Shaders/Diffuse Detail", "Decal", "Legacy Shaders/Decal", "Reflective/Bumped Diffuse", "Legacy Shaders/Reflective/Bumped Diffuse", "Reflective/VertexLit", "Legacy Shaders/Reflective/VertexLit", "Reflective/Parallax Specular", "Legacy Shaders/Reflective/Parallax Specular", "Reflective/Parallax Diffuse", "Legacy Shaders/Reflective/Parallax Diffuse", "Reflective/Specular", "Legacy Shaders/Reflective/Specular", "Reflective/Diffuse", "Legacy Shaders/Reflective/Diffuse", "Reflective/Bumped VertexLit", "Legacy Shaders/Reflective/Bumped VertexLit", "Reflective/Bumped Specular", "Legacy Shaders/Reflective/Bumped Specular", "Reflective/Bumped Unlit", "Legacy Shaders/Reflective/Bumped Unlit", "Self-Illumin/Bumped Diffuse", "Legacy Shaders/Self-Illumin/Bumped Diffuse", "Self-Illumin/Parallax Specular", "Legacy Shaders/Self-Illumin/Parallax Specular", "Self-Illumin/Parallax Diffuse", "Legacy Shaders/Self-Illumin/Parallax Diffuse", "Self-Illumin/Specular", "Legacy Shaders/Self-Illumin/Specular", "Self-Illumin/Diffuse", "Legacy Shaders/Self-Illumin/Diffuse", "Self-Illumin/Bumped Specular", "Legacy Shaders/Self-Illumin/Bumped Specular", "Self-Illumin/VertexLit", "Legacy Shaders/Self-Illumin/VertexLit", "Transparent/Bumped Diffuse", "Legacy Shaders/Transparent/Bumped Diffuse", "Transparent/VertexLit", "Legacy Shaders/Transparent/VertexLit", "Transparent/Parallax Specular", "Legacy Shaders/Transparent/Parallax Specular", "Transparent/Parallax Diffuse", "Legacy Shaders/Transparent/Parallax Diffuse", "Transparent/Specular", "Legacy Shaders/Transparent/Specular", "Transparent/Diffuse", "Legacy Shaders/Transparent/Diffuse", "Transparent/Bumped Specular", "Legacy Shaders/Transparent/Bumped Specular", "Transparent/Cutout/VertexLit", "Legacy Shaders/Transparent/Cutout/VertexLit", "Transparent/Cutout/Soft Edge Unlit", "Legacy Shaders/Transparent/Cutout/Soft Edge Unlit", "Transparent/Cutout/Specular", "Legacy Shaders/Transparent/Cutout/Specular", "Transparent/Cutout/Diffuse", "Legacy Shaders/Transparent/Cutout/Diffuse", "Transparent/Cutout/Bumped Specular", "Legacy Shaders/Transparent/Cutout/Bumped Specular", "Transparent/Cutout/Bumped Diffuse", "Legacy Shaders/Transparent/Cutout/Bumped Diffuse", "RenderFX/Skybox Cubed", "Skybox/Cubemap", "RenderFX/Skybox", "Skybox/6 Sided", " VertexLit", " Diffuse", " Glossy", " Bumped", " BumpedSpecular", "ParallaxBump/Diffuse", "ParallaxBump/Specular", "Alpha/VertexLit", "Alpha/Diffuse", "Alpha/Glossy", "Alpha/Bumped", "Alpha/BumpedSpecular", "ParallaxBump/AlphaDiffuse", "ParallaxBump/AlphaSpecular", "Reflective/Glossy", "Reflective/Bumped", "Reflective/BumpedSpecular", "ParallaxBump/ReflectDiffuse", "ParallaxBump/ReflectSpecular", "Lightmapped/Glossy", "Legacy Shaders/Lightmapped/Specular", "Lightmapped/Bumped", "Legacy Shaders/Lightmapped/Bumped Diffuse", "Lightmapped/BumpedSpecular", "Legacy Shaders/Lightmapped/Bumped Specular", "Lightmapped/VertexLit", "Legacy Shaders/Lightmapped/VertexLit", "Lightmapped/Diffuse", "Legacy Shaders/Lightmapped/Diffuse", "Lightmapped/Specular", "Lightmapped/Bumped Diffuse", "Lightmapped/Bumped Specular", "Diffuse Fast", "Legacy Shaders/Diffuse Fast", "Self-Illumin/Glossy", "Self-Illumin/Bumped", "Self-Illumin/BumpedSpecular", "ParallaxBump/IlluminDiffuse", "ParallaxBump/IlluminSpecular", " DiffuseDetail", " Diffuse (fast)", " Decal", "Hidden/TerrainEngine/Splatmap/Lightmap-FirstPass", "Hidden/TerrainEngine/Splatmap/Lightmap-AddPass", "UnityWorker", "***Thread '%s' tried to join itself!***", "Error joining threads: %d", "mem:/", "Error while rolling data back after failed file move operation from '%s' to '%s'. Backup is located at '%s'", "Unable to delete backup after file move operation from '%s' to '%s'.", "Unable to cleanup copied data after failed file move operation from '%s' to '%s'.", "HOME", "%s%s", "Caches", "Data", ".config/unity3d", "Creating user config folder: %s\n", "basic_string::erase", "Local", "UnityFS", "5.x.x", "Unable to open archive file: %s", "Unable to read header from archive file: %s", "UnityWeb", "Archive", "UnityArchive", "Memory", "ArchiveRedirect", "CreateDirectory '%s' failed: %s\n", "Closing file ", "batchmode", "automated", "runUnitTests", "/dev/urandom", "/dev/random", "%02hhx", "%s (Error: %d)\n\n", "%s\n\n", "%s \n(Error: %i Filename: %s Line: %i)\n\n", "%s (Error: %i Filename: %s Line: %i)\n", "%s \n(Filename: %s Line: %i)\n\n", "%s (Filename: %s Line: %i)\n", "%s: %d at %s:%d (%d, %d, %d)\n", "%s%s:%d\n", " #%02d %s\n", "Opening Console File is not supported on this platform.", "LogMessages", "out of memory!", "requested larger amount than block size! requested: %d, blocksize: %d", "//?/", "UNC/", "//./", "DbgBreak: ", "A RequestUserAuthorization is already pending.", "http://stats.unity3d.com/HWStats.cgi", "0.0.0", "%s API-%i", "%u x %u", "%s/%s/%s", "KonfiguracijosReportoDruska-", "&cpu=", "&gfxname=", "&gfxvendor=", "&gfxversion=", "&gfxdriver=", "&cpucount=", "&ram=", "&vram=", "&screen=", "&platform=", "&flags=", "&hash=", "&appId=", "&uuid=", "&model=", "&unity=", "&build=", "&projectId=", "Content-Type", "application/x-www-form-urlencoded", "0123456789abcdef", "@&;:<>=?\"'/\\!#%+", "5.2.1", "jar:file://", "!/assets", "AsyncReadManager", "Could not open file %s for read", "m_Source", "<noninit>", "BACKGROUND", "GEOMETRY", "ALPHATEST", "TRANSPARENT", "OVERLAY", "DisableBatching", "LodFading", "Undefined Queue: '", "Shader '%s': failed to set fallback shader '%s'\n", "Shader '%s': fallback shader '%s' not found\n", "Shader '%s': dependency '%s' shader '%s' not found\n", "ALWAYS", "VERTEXLM", "VERTEXLMRGBM", "FORWARDBASE", "FORWARDADD", "PREPASSBASE", "PREPASSFINAL", "SHADOWCASTER", "SHADOWCOLLECTOR", "DEFERRED", "META", "_GrabTexture", "Unsupported: '%s' - Pass '%s' has no vertex shader\n", "Unsupported: '%s' - Pass '%s' has no fragment shader\n", "Invalid lightMode: ", "NONE", "cubemap", "Error assigning %s texture to %s texture property '%s': Dimensions must match", "_TexelSize", "_HDR", "Unsupported: '%s' - All passes removed\n", "LIGHTMODE", "Vertex", "VertexLM", "VertexLMRGBM", "QUEUE", "REQUIREOPTIONS", "FORCENOSHADOWCASTING", "IGNOREPROJECTOR", "SHADOWSUPPORT", "<unknown tag>", "Error assigning %s texture to %s texture property: Dimensions must match", "SOFTVEGETATION", "GrabPass Temp", "EOF in #LINE directive", "Block comment not closed (EOF in comment)", "fatal flex scanner internal error--no action found", "out of dynamic memory in yy_create_buffer()", "out of dynamic memory in yy_scan_buffer()", "out of dynamic memory in yy_scan_bytes()", "bad buffer in yy_scan_bytes()", "Shader program of type '%s' already exists", "Shader program had errors", "Fixed function texture matrix '%s' used; they don't do anything now", "Fixed function TexGen used; it doesn't do anything now", "Support for SetTexture combiner *+- has been removed", "Support for SetTexture combiner *- has been removed", "Support for SetTexture combiner +- has been removed", "Support for SetTexture combiner dot3 has been removed", "Support for SetTexture combiner dot3rgba has been removed", "syntax error", "memory exhausted", "Parse error: %s", "LightMode", "Deferred", "Failed to create a shader variant in '%s'. You probably have precompiled shader asset from an old Unity version.", "<unknown shader>", "opengl", "d3d9", "xbox360", "xboxone", "d3d11", "psp2", "                                                                                                   ", "ALLOC_TEMP_STRINGS", "PerRendererData", "NoScaleOffset", "Normal", "Gamma", "Invalid channel binding (%d to %d)", "Shader is not supported on this GPU (none of subshaders/fallbacks are suitable)", "Shader is not supported. Are you creating a fixed function shader using Material(string) constructor?", "UsePass: unable to separate shader/passname part in '", "can't fallback to the same shader name '%s'", "out of dynamic memory in yyensure_buffer_stack()", "fatal flex scanner internal error--end of buffer missed", "fatal error - scanner input buffer overflow", "input in flex scanner failed", "out of dynamic memory in yy_get_next_buffer()", "#warning not terminated", "#error not terminated", "Dict", "Mesh Edges", "Mesh Vertices", "Mesh Faces", "Regions", "./External/TextureCompressors/ASTC_ARM/Source/astc_averages_and_directions.cpp", "./External/TextureCompressors/ASTC_ARM/Source/astc_color_quantize.cpp", "./External/TextureCompressors/ASTC_ARM/Source/astc_color_unquantize.cpp", "./External/TextureCompressors/ASTC_ARM/Source/astc_ideal_endpoints_and_weights.cpp", "./External/TextureCompressors/ASTC_ARM/Source/astc_image_load_store.cpp", ".htga", ".HTGA", ".ktx", ".KTX", ".dds", ".DDS", ".exr", ".EXR", "HTGA", "Failed to open file %s\n", "Failed to read header of KTX file %s\n", "File %s does not have a valid KTX header\n", "File %s appears to be compressed, not supported as input\n", "KTX file %s has unsupported GL type\n", "KTX file %s has unsupported GL format\n", "warning: KTX file %s has %d mipmap levels; only the first one will be encoded.\n", "warning: KTX file %s contains a texture array with %d layers; only the first one will be encoded.\n", "warning: KTX file %s contains a cubemap with 6 faces; only the first one will be encoded.\n", "%s: KTX file inconsistency: computed surface size is %d bytes, but specified size is %d bytes\n", "Failed to read file %s\n", "Failed to read header of DDS file %s\n", "File %s does not have a valid DDS header\n", "DDS file %s is compressed, not supported\n", "DDS file %s: DXGI format not supported by codec\n", "DDS file %s: Non-DXGI format not supported by codec\n", "unity_OneOverOutputBoost", "unity_MaxOutputValue", "unity_UseLinearSpace", "Error: Global Illumination requires a graphics device to render albedo.", "Attempting to release atlas texture that is in use. Cannot release texture.", "Unity GI textype:%d (%dx%d)", "Unity GI SystemTex RGBM", "Unity GI SystemTex Directionality", "Error adding system: Failed to allocate system.", "Error adding system: Failed to add system to manager.", "GI output for inputsystem: %s (%s) is missing.", "Failed loading system data for hash: 0x%s", "Error adding probe set: Failed to allocate probe set.", "Error adding probe set: Failed to add probe set to manager.", "Failed to issue albedo update.", "Setting up %d worker threads for Enlighten.\n", "EnlightenWorker", "Error allocating texture for dynamic cubemap.", "Failed reading from: '%s'.\n", "  Thread -> id: %lx -> priority: %d \n", "unity_MetaVertexControl", "unity_MetaFragmentControl", "GI: material does not have Meta pass, and could not find default material. Object will not be affecting GI.\n", "GfxDevice: creating device client; threaded=%i\n", "Dimensions of color surface does not match dimensions of depth surface", "CPU fence is invalid or very old!", "UnityGfxDeviceWorker", "Illegal offset/size in BeginWriteIndices()", "Illegal offset/size in BeginWriteVertices()", "Gfx command not handled: %d (Last command: %d)", "-------- Shader compilation failed\n", "-------- failed compiling:\n", "-------- GLSL error:\n\n", "GLSL compilation failed, no infolog provided", "-------- GLSL link error: %s\n\n", "-------- GLSL link failed, no info log provided.", "OPENGL ERROR, framebuffer fail: %s\nDetailed description:\n", "GL_COLOR_ATTACHMENT%d Type:%s Value:%d\n", "GL_DEPTH_ATTACHMENT Type:%s Value:%d\n", "GL_STENCIL_ATTACHMENT Type:%s Value:%d\n", "no-extensions", "GL_RENDERBUFFER", "GL_TEXTURE", "GL_NONE", "INCOMPLETE_ATTACHMENT", "INCOMPLETE_MISSING_ATTACHMENT", "INCOMPLETE_DIMENSIONS", "INCOMPLETE_FORMATS", "INCOMPLETE_DRAW_BUFFER", "INCOMPLETE_READ_BUFFER", "UNSUPPORTED", "unknown error", "ETC2 %d", "vertex shader", "tessellation control shader", "tessellation evaluation shader", "geometry evaluation shader", "fragment evaluation shader", "compute evaluation shader", "GLES: error count exceeds %i, stop reporting errors\n", "vec4(c.rgb, 1.0)", "uvOffsetAndScale", "OPENGL LOG: GfxDeviceGLES::Init - CreateMasterGraphicsContext\n", "OPENGL LOG: Creating OpenGL%s%d.%d graphics device\n", " ES ", "RenderTexture: Resolving non-color surfaces.", "RenderTexture: Resolving NULL buffers.", "Bad render texture format for random writes: Not supported as GL image unit format.", "Random write target index out of bounds", "ERROR: Unable to link compute shader!", "ComputeShader: Trying to set uniform with %i elements whereas only %i were expected. The excess data is being discarded.", "ComputeShader: Trying to set uniform with %i elements whereas %i were expected. Could not set uniform.", "libGLESv2.so", "ERROR: Invalid DataBufferGLES usage: %d", "RenderTexture warning: Destroying active render texture. Switching to main context.", "Warning: Shader '%s' exceeds the number of texture image units, marking as unsupported.\n", "Note: Creation of internal variant of shader '%s' failed.\n", "FRAGMENT", "DOMAIN", "HULL", "// XXX ADRENOCONSTARRAYBUG", "/UnityShaderCache/", "_glesVertex", "_glesColor", "_glesNormal", "_gles_unused__", "_glesMultiTexCoord0", "_glesMultiTexCoord1", "_glesMultiTexCoord2", "_glesMultiTexCoord3", "_glesMultiTexCoord4", "_glesMultiTexCoord5", "_glesMultiTexCoord6", "_glesMultiTexCoord7", "in_POSITION0", "in_COLOR0", "in_NORMAL0", "in_TEXCOORD0", "in_TEXCOORD1", "in_TEXCOORD2", "in_TEXCOORD3", "in_TEXCOORD4", "in_TEXCOORD5", "in_TEXCOORD6", "in_TEXCOORD7", "gl_ProjectionMatrix", "gl_ModelViewProjectionMatrix", "gl_ModelViewMatrixTranspose", "gl_ModelViewMatrixInverseTranspose", "gl_ModelViewMatrix", "_glesLightSource[0].diffuse", "_glesLightSource[1].diffuse", "_glesLightSource[2].diffuse", "_glesLightSource[3].diffuse", "_glesLightSource[0].position", "_glesLightSource[1].position", "_glesLightSource[2].position", "_glesLightSource[3].position", "_glesLightSource[0].spotDirection", "_glesLightSource[1].spotDirection", "_glesLightSource[2].spotDirection", "_glesLightSource[3].spotDirection", "_glesLightSource[0].atten", "_glesLightSource[1].atten", "_glesLightSource[2].atten", "_glesLightSource[3].atten", "_glesLightModel.ambient", "hlslcc_zcmp", "_counter", "GLSL: array sizes larger than 99 not supported", "GL_EXT_texture_type_2_10_10_10_REV", "force-clamped", "OpenGL ", "PowerVR", "Mali", "Adreno", "Vivante", "GL_NV_depth_nonlinear", "GL_NV_coverage_sample", "Renderer: %s\n", "Vendor:   %s\n", "Version:  %s\n", "GLES:     %d\n", "glGetString(GL_EXTENSIONS) - failure", "GL_IMG_multisampled_render_to_texture", "GL_NV_sRGB_formats", "GL_EXT_pvrtc_sRGB", "GL_APPLE_texture_max_level", "GL_OES_texture_3D", "GL_OES_texture_half_float_linear", "GL_ARB_texture_float", "GL_OES_texture_float_linear", "force-desktop-glcontext", "GL_OES_packed_depth_stencil", "GL_EXT_packed_depth_stencil", "GL_APPLE_framebuffer_multisample", "GL_OES_depth24", "GL_EXT_shadow_samplers", "OpenGL ES 3.0", "glcore ", "GL_ARB_ES2_compatibility", "gles ", "GL_ARB_ES3_compatibility", "gles3 ", "GL_EXT_blend_minmax", "GL_EXT_texture_norm16", "Unsupported render texture format :%d", "Warning: unspecified texcoord bound\n", "Warning: Exceeds maximum vertex attributes.\n", "ERROR: Unable to compile Transform Feedback fragment shader!\n", "ERROR: Unable to compile Transform Feedback vertex shader!\n", "out_pos", "out_normal", "out_tangent", "ERROR: Unable to link Transform Feedback shader!\n", "bones", "MtxBlock", "#version 300 es\n\nconst int max_bone_count = ", ";\nconst highp float max_bone_count_inv = 1.0 / float(max_bone_count); \nconst highp float half_texel = 0.5 * max_bone_count_inv; \nlayout(location=", ") in vec3 in_vertex;\n", "layout(location=", ") in vec3 in_normal;\n", ") in vec4 in_tangent;\n", ") in int in_boneIndices;\n", ") in ivec2 in_boneIndices;\n", ") in vec2  in_boneWeights;\n", ") in ivec4 in_boneIndices;\n", ") in vec4  in_boneWeights;\n", "out vec3 out_pos;\n", "out vec3 out_normal;\n", "out vec4 out_tangent;\n", "uniform vec4 bones[max_bone_count*3];\n", "uniform MtxBlock { vec4 bones[max_bone_count*3]; } Matrices;\n", "uniform sampler2D bones;\n", "#define GET_MATRIX(idx) ", "mat4( bones[int(idx)*3 + 0], bones[int(idx)*3 + 1], bones[int(idx)*3 + 2]", "mat4( Matrices.bones[int(idx)*3 + 0], Matrices.bones[int(idx)*3 + 1], Matrices.bones[int(idx)*3 + 2]", "mat4(", "textureLod(bones, vec2(0.166, (float(idx) * max_bone_count_inv) + half_texel), 0.0), ", "textureLod(bones, vec2(0.5, (float(idx) * max_bone_count_inv) + half_texel), 0.0), ", "textureLod(bones, vec2(0.833, (float(idx) * max_bone_count_inv) + half_texel), 0.0) ", ", vec4(0.0, 0.0, 0.0, 1.0))\n\nvoid main(void)\n{\n\tvec4 inpos = vec4(in_vertex.xyz, 1.0);\n", " mat4 localToWorldMatrix = GET_MATRIX(in_boneIndices);\n", " mat4 localToWorldMatrix = GET_MATRIX(in_boneIndices.x) * in_boneWeights[0];\n", "\tif(in_boneWeights[1] > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.y) * in_boneWeights[1] ;\n ", "\tif(in_boneWeights[2] > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.z) * in_boneWeights[2] ;\n ", "\tif(in_boneWeights[3] > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.w) * in_boneWeights[3] ;\n ", "\tout_pos = (inpos * localToWorldMatrix).xyz;\n\tgl_Position = vec4(out_pos.xyz, 1.0);\n", "\tout_normal = normalize( ( vec4(in_normal.xyz, 0.0) * localToWorldMatrix)).xyz;\n", "\tout_tangent = vec4( normalize( ( vec4(in_tangent.xyz, 0.0) * localToWorldMatrix)).xyz, in_tangent.w);\n", "WARNING: PVRTC texture format is not supported, decompressing texture\n", "WARNING: DXT texture format is not supported, decompressing texture\n", "WARNING: ETC texture format is not supported, decompressing texture\n", "WARNING: ATC texture format is not supported, decompressing texture\n", "WARNING: Compressed texture format (%d) is not supported, decompressing texture\n", "GL_OES_compressed_ETC1_RGB8_texture", "WEBGL_compressed_texture_etc1", "GL_CHROMIUM_texture_compression_dxt5", "GL_ANGLE_texture_compression_dxt5", "GL_CHROMIUM_texture_compression_dxt3", "GL_ANGLE_texture_compression_dxt3", "GL_EXT_texture_compression_dxt1", "GL_ANGLE_texture_compression_dxt1", "GL_OES_texture_half_float", "GL_OES_texture_float", "WEBGL_compressed_texture_es3", "GL_KHR_texture_compression_astc_ldr", "WEBGL_compressed_texture_astc_ldr", "GL_AMD_compressed_ATC_texture", "GL_ATI_texture_compression_atitc", "WEBGL_compressed_texture_atc", "GL_IMG_texture_compression_pvrtc", "WEBGL_compressed_texture_pvrtc", "GL_EXT_disjoint_timer_query", "GL_ARB_timer_query", "GL_NV_timer_query", "GL_INTEL_timer_query", "GL_KHR_blend_equation_advanced_coherent", "GL_NV_blend_equation_advanced_coherent", "GL_KHR_blend_equation_advanced", "GL_NV_blend_equation_advanced", "GL_ARB_uniform_buffer_object", "GL_ARB_transform_feedback3", "GL_ARB_tessellation_shader", "GL_OES_tessellation_shader", "GL_EXT_tessellation_shader", "GL_ARB_geometry_shader4", "GL_OES_geometry_shader", "GL_EXT_geometry_shader", "Amazon", "Immersion", "GL_OES_get_program_binary", "GL_ARB_get_program_binary", "GL_ARB_ES3_1_compatibility", "GL_ARB_query_buffer_object", "GL_AMD_query_buffer_object", "GL_ARB_indirect_parameters", "GL_OES_vertex_half_float", "GL_EXT_map_buffer_range", "GL_ARB_map_buffer_range", "GL_OES_mapbuffer", "GL_ARB_vertex_buffer_object", "GL_OES_depth_texture", "GL_GOOGLE_depth_texture", "WEBGL_depth_texture", "GL_WEBGL_depth_texture", "GL_ARB_depth_texture", "GL_EXT_sRGB_write_control", "GL_ARB_framebuffer_sRGB", "WEBGL_draw_buffers", "GL_NV_draw_buffers", "GL_NV_fbo_color_attachments", "GL_EXT_framebuffer_multisample_blit_scaled", "GL_NV_framebuffer_blit", "GL_NV_read_buffer", "GL_ARB_framebuffer_blit", "GL_ARB_invalidate_subdata", "GL_EXT_discard_framebuffer", "GL_OES_depth_texture_cube_map", "GL_EXT_texture_filter_anisotropic", "WEBKIT_EXT_texture_filter_anisotropic", "GL_ARB_internalformat_query2", "GL_ARB_sampler_objects", "GL_ARB_stencil_texturing", "GL_ARB_texture_swizzle", "GL_EXT_texture_swizzle", "GL_APPLE_texture_format_BGRA8888", "GL_EXT_texture_format_BGRA8888", "GL_IMG_texture_format_BGRA8888", "GL_ARB_texture_multisample", "GL_ARB_texture_storage", "GL_EXT_texture_storage", "GL_OES_texture_npot", "GL_ARB_texture_non_power_of_two", "GL_EXT_texture_compression_s3tc", "WEBGL_compressed_texture_s3tc", "WEBKIT_WEBGL_compressed_texture_s3tc", "GL_EXT_texture_sRGB_decode", "GL_EXT_sRGB", "GL_EXT_texture_sRGB", "GL_ARB_framebuffer_object", "GL_NV_framebuffer_multisample", "GL_EXT_multisampled_render_to_texture", "GL_ARB_copy_buffer", "GL_ARB_direct_state_access", "GL_EXT_direct_state_access", "GL_NV_draw_instanced", "GL_EXT_draw_instanced", "GL_ARB_draw_instanced", "GL_EXT_multi_draw_indirect", "GL_ARB_multi_draw_indirect", "GL_EXT_draw_elements_base_vertex", "GL_OES_draw_elements_base_vertex", "GL_ARB_draw_elements_base_vertex", "GL_ARB_draw_indirect", "GL_ARB_compute_shader", "GL_ARB_shader_image_load_store", "GL_ARB_shader_storage_buffer_object", "GL_EXT_debug_label", "GL_EXT_color_buffer_half_float", "GL_EXT_color_buffer_float", "WEBGL_color_buffer_float", "GL_EXT_texture_rg", "GL_ARB_texture_rg", "Shader uses too many vertex attributes for this platform", "INTERNALTESSPOS", "in_INTERNALTESSPOS0", "_glesInternalTessPos", "in_TANGENT0", "_glesTANGENT", "TexCoord", "TexCoord1", "TexCoord2", "TexCoord3", "TexCoord4", "TexCoord5", "TexCoord6", "TexCoord7", "precision highp float", "precision mediump float", "precision highp float;\n", "precision mediump float;\n", "textureCubeLodEXT", "textureCubeGradEXT", "textureCubeLodEXT or textureCubeGradEXT usage detected.\n", "GL_EXT_shader_texture_lod extension is buggy on PowerVR drivers.\n", "replacing textureCubeLodEXT->textureCubeLod and textureCubeGradEXT->textureCubeGradARB as a workaround.\n", "textureCube", "LodEXT", "GradEXT", "texture2D", "tex2D", "GLES20: vprog textures are used, but not supported.\n", "Warning: Rendering to mipmap levels other than zero is not supported on this device", "GL_INVALID_ENUM: enum argument out of range", "GL_INVALID_VALUE: Numeric argument out of range", "GL_INVALID_OPERATION: Operation illegal in current state", "GL_OUT_OF_MEMORY: Not enough memory left to execute command", "GL_INVALID_FRAMEBUFFER_OPERATION: Framebuffer is not complete or incompatible with command", "GL_STACK_UNDERFLOW_KHR: OpenGL stack underflow", "GL_STACK_OVERFLOW_KHR: OpenGL stack overflow", "Unknown error", "Windows", "Shader Compiler", "Third Party", "Other", "error", "deprecated behavior", "undefined behavior", "portability", "performance", "message", "marker", "push group", "pop group", "high", "medium", "notification", "OPENGL DEBUG: %s: %s(%s) %d: %s (%s:%ld, %s)\n", "glClear", "glActiveTexture", "glAttachShader", "glBindAttribLocation", "glBindBuffer", "glBindFramebuffer", "glBindRenderbuffer", "glBindTexture", "glBlendEquation", "glBlendEquationSeparate", "glBlendFuncSeparate", "glBufferData", "glBufferSubData", "glCheckFramebufferStatus", "glClearColor", "glClearDepthf", "glClearStencil", "glColorMask", "glCompileShader", "glCompressedTexImage2D", "glCompressedTexSubImage2D", "glCopyTexImage2D", "glCopyTexSubImage2D", "glCreateProgram", "glCreateShader", "glCullFace", "glDeleteBuffers", "glDeleteFramebuffers", "glDeleteProgram", "glDeleteRenderbuffers", "glDeleteShader", "glDeleteTextures", "glDepthFunc", "glDepthMask", "glDisable", "glDisableVertexAttribArray", "glDrawArrays", "glDrawElements", "glIsEnabled", "glEnable", "glEnableVertexAttribArray", "glFinish", "glFlush", "glFramebufferRenderbuffer", "glFramebufferTexture2D", "glFrontFace", "glGenBuffers", "glGenerateMipmap", "glGenFramebuffers", "glGenRenderbuffers", "glGenTextures", "glGetActiveAttrib", "glGetActiveUniform", "glGetAttribLocation", "glGetError", "glGetFramebufferAttachmentParameteriv", "glGetIntegerv", "glGetProgramiv", "glGetProgramInfoLog", "glValidateProgram", "glGetShaderiv", "glGetShaderSource", "glGetShaderInfoLog", "glGetString", "glGetTexParameteriv", "glGetUniformiv", "glGetUniformLocation", "glGetVertexAttribfv", "glGetVertexAttribiv", "glGetVertexAttribPointerv", "glLinkProgram", "glPixelStorei", "glPolygonOffset", "glReadPixels", "glRenderbufferStorage", "glScissor", "glShaderSource", "glStencilFunc", "glStencilFuncSeparate", "glStencilMask", "glStencilOp", "glStencilOpSeparate", "glTexImage2D", "glTexParameterf", "glTexParameteri", "glTexParameteriv", "glTexSubImage2D", "glUniform1fv", "glUniform1i", "glUniform1iv", "glUniform2fv", "glUniform2iv", "glUniform3fv", "glUniform3iv", "glUniform4fv", "glUniform4iv", "glUniformMatrix3fv", "glUniformMatrix4fv", "glUseProgram", "glVertexAttrib4f", "glVertexAttribPointer", "glViewport", "glGenQueries", "glDeleteQueries", "glBeginQuery", "glEndQuery", "glGetQueryObjectuiv", "glBindVertexArray", "glDeleteVertexArrays", "glGenVertexArrays", "glBeginTransformFeedback", "glEndTransformFeedback", "glTransformFeedbackVaryings", "glBindTransformFeedback", "glDeleteTransformFeedbacks", "glGenTransformFeedbacks", "glTexImage3D", "glTexSubImage3D", "glTexStorage2D", "glTexStorage3D", "glBlitFramebuffer", "glRenderbufferStorageMultisample", "glGetStringi", "glGetIntegeri_v", "glMapBufferRange", "glUnmapBuffer", "glFlushMappedBufferRange", "glInvalidateFramebuffer", "glDrawArraysInstanced", "glDrawElementsInstanced", "glCopyBufferSubData", "glDrawBuffers", "glReadBuffer", "glBindBufferBase", "glGetActiveUniformsiv", "glGetUniformBlockIndex", "glGetActiveUniformBlockiv", "glGetActiveUniformBlockName", "glUniformBlockBinding", "glVertexAttribIPointer", "glGetProgramBinary", "glProgramBinary", "glProgramParameteri", "glGenSamplers", "glDeleteSamplers", "glBindSampler", "glSamplerParameteri", "glGetInternalformativ", "glProgramUniform1fv", "glProgramUniform1iv", "glProgramUniform2fv", "glProgramUniform2iv", "glProgramUniform3fv", "glProgramUniform3iv", "glProgramUniform4fv", "glProgramUniform4iv", "glProgramUniformMatrix2fv", "glProgramUniformMatrix3fv", "glProgramUniformMatrix4fv", "glProgramUniformMatrix2x3fv", "glProgramUniformMatrix3x2fv", "glProgramUniformMatrix2x4fv", "glProgramUniformMatrix4x2fv", "glProgramUniformMatrix3x4fv", "glProgramUniformMatrix4x3fv", "glProgramUniform1uiv", "glProgramUniform2uiv", "glProgramUniform3uiv", "glProgramUniform4uiv", "glBindImageTexture", "glDispatchCompute", "glGetProgramInterfaceiv", "glGetProgramResourceName", "glGetProgramResourceiv", "glDrawArraysIndirect", "glMemoryBarrier", "glTexStorage2DMultisample", "glPatchParameteri", "glPatchParameteriOES", "glPatchParameteriEXT", "glPatchParameterfv", "glPatchParameterfvOES", "glPatchParameterfvEXT", "glRenderbufferStorageMultisampleEXT", "glFramebufferTexture2DMultisampleEXT", "glRenderbufferStorageMultisampleIMG", "glFramebufferTexture2DMultisampleIMG", "glRenderbufferStorageMultisampleAPPLE", "glResolveMultisampleFramebufferAPPLE", "glRenderbufferStorageMultisampleNV", "GL_QCOM_alpha_test", "glAlphaFuncQCOM", "GL_KHR_debug", "glDebugMessageControlKHR", "glDebugMessageCallbackKHR", "glDebugMessageInsertKHR", "glObjectLabelKHR", "glGetObjectLabelKHR", "glPushDebugGroupKHR", "glPopDebugGroupKHR", "glDebugMessageControl", "glDebugMessageCallback", "glDebugMessageInsert", "glObjectLabel", "glGetObjectLabel", "glPushDebugGroup", "glPopDebugGroup", "GL_ARB_debug_output", "glDebugMessageControlARB", "glDebugMessageCallbackARB", "glDebugMessageInsertARB", "GL_EXT_debug_marker", "glPushGroupMarkerEXT", "glPopGroupMarkerEXT", "glLabelObjectEXT", "glGetObjectLabelEXT", "glGenQueriesEXT", "glDeleteQueriesEXT", "glBeginQueryEXT", "glEndQueryEXT", "glQueryCounterEXT", "glGetQueryObjectui64vEXT", "glGetQueryObjectuivEXT", "glQueryCounterNV", "glGetQueryObjectui64vNV", "glTexImage3DOES", "glTexSubImage3DOES", "GL_OES_vertex_array_object", "glBindVertexArrayOES", "glDeleteVertexArraysOES", "glGenVertexArraysOES", "GL_EXT_draw_buffers", "glDrawBuffersEXT", "glDrawBuffersNV", "glReadBufferNV", "glBlitFramebufferNV", "glDiscardFramebufferEXT", "glMapBufferRangeEXT", "glFlushMappedBufferRangeEXT", "glUnmapBufferOES", "glUnmapBufferEXT", "GL_OES_map_buffer", "glMapBufferOES", "glGetProgramBinaryOES", "glProgramBinaryOES", "glDrawElementsBaseVertexOES", "glDrawElementsInstancedBaseVertexOES", "glDrawElementsBaseVertexEXT", "glDrawElementsInstancedBaseVertexEXT", "glTexStorage2DEXT", "glTexStorage3DEXT", "glTextureStorage2DEXT", "glTextureStorage3DEXT", "glBlendBarrierKHR", "glBlendBarrierNV", "Unable to retrieve the default EGL display!", "Unable to initialize EGL!", "ID[%d] ", " RGBA%d %d%d%d%d", " RGB%d %d%d%d", " %d%s/%d", " AAx%d", " CSAAx%d", " AFBT", "eglGetConfigAttrib()", "./Runtime/GfxDevice/egl/ConfigEGL.cpp", "[EGL] Checking ES 3.1 support...", "[EGL] ES3.1 not supported", "[EGL] ES 3.1 support detected", "[EGL] Request: %s\n", "eglChooseConfig(m_EGLDisplay, configAttribs, NULL, 0, &eglConfigCount)", "eglChooseConfig(m_EGLDisplay, configAttribs, eglConfigurations, eglConfigCount, &eglConfigCount)", "[EGL] Found: %s\n", "[EGL] Unable to find a configuration matching minimum spec!", "[EGL] Error:", "./Runtime/GfxDevice/egl/ContextGLES.cpp", "[EGL] Unable to retrieve the default EGL display!", "[EGL] Unable to initialize EGL!", "eglTerminate(s_EGLDisplay)", "[EGL] Attaching window :%p", "eglDestroyContext(m_EGLDisplay, m_EGLContext)", "./Runtime/GfxDevice/egl/ContextEGL.cpp", "Unable to create context!", "eglDestroySurface(m_EGLDisplay, m_EGLSurface)", "./Runtime/GfxDevice/egl/WindowContextEGL.cpp", "Failed to create window surface", "Unable to acquire context", "Unable to release context", "[EGL] SwapBuffers: Context lost", "[EGL] SwapBuffers: Surface invalid", "[EGL] SwapBuffer: %s", "./Runtime/GfxDevice/egl/WindowSurfaceEGL.cpp", "EGL_SUCCESS: The last function succeeded without error.", "EGL_NOT_INITIALIZED: EGL is not initialized, or could not be initialized, for the specified EGL display connection.", "EGL_BAD_ACCESS: EGL cannot access a requested resource (for example a context is bound in another thread).", "EGL_BAD_ALLOC: EGL failed to allocate resources for the requested operation.", "EGL_BAD_ATTRIBUTE: An unrecognized attribute or attribute value was passed in the attribute list.", "EGL_BAD_CONTEXT: An EGLContext argument does not name a valid EGL rendering context.", "EGL_BAD_CONFIG: An EGLConfig argument does not name a valid EGL frame buffer configuration.", "EGL_BAD_CURRENT_SURFACE: The current surface of the calling thread is a window, pixel buffer or pixmap that is no longer valid.", "EGL_BAD_DISPLAY: An EGLDisplay argument does not name a valid EGL display connection.", "EGL_BAD_SURFACE: An EGLSurface argument does not name a valid surface (window, pixel buffer or pixmap) configured for GL rendering.", "EGL_BAD_MATCH: Arguments are inconsistent (for example, a valid context requires buffers not supplied by a valid surface).", "EGL_BAD_PARAMETER: One or more argument values are invalid.", "EGL_BAD_NATIVE_PIXMAP: A NativePixmapType argument does not refer to a valid native pixmap.", "EGL_BAD_NATIVE_WINDOW: A NativeWindowType argument does not refer to a valid native window.", "EGL_CONTEXT_LOST: A power management event has occurred. The application must destroy all contexts and reinitialise OpenGL ES state and objects to continue rendering.", "Unknown error: 0x%x", "[EGL] %s: %s", "[EGL] %s", "ES-Unknown", "ES 2.0", "ES 3.0", "ES 3.1", "ES 3.1+AEP", "Invalid Unity Web File (Decompression Failure).", "Invalid Unity Web File (LZMA header to short, got %d, needed %d).", "Invalid Unity Web File (Couldn't Decode LZMA Header, Error %d, props: %02x%02x%02x%02x%02x)", "Couldn't write cache header file.", "Couldn't move cache data into place.", "%s cached to %s\n", "Couldn't remove existing cached file.", "Not enough space in cache to write file.", "Couldn't create cache directory!", "Couldn't open the cache file!", "Couldn't write to the cache file!", "Invalid Unity Web File (Can't read Directory).", "CRC Mismatch. Provided %x, calculated %x from downloaded data. Will not load AssetBundle", "CAB-", "CustomAssetBundle-", "UnityWebStream-", "Processing more than expected, %d < %d", "Couldn't create cache file in memory!", "WebStreamDecompression", "GetProgressForScene scene index is out of range", "Invalid Unity Web File (Can't parse header).", "Bad file length.", "CacheDownloadBuffer", "%02x", "SendMessage: object %s does not have receiver for function %s!\n", "SendMessage: object %s not found!\n", "test-keys", "/system/app/Superuser.apk", "Roboto", "Noto Sans SC", "Noto Sans KR", "Noto Sans JP", "MotoyaLMaru", "NanumGothic", "Droid Sans", "Droid Sans Japanese", "Droid Sans Fallback", "DroidSansFallback", "%s %s / API-%i (%s/%s)", " VFPv3", " NEON", "Intel x86", " SSE3", "MIPS", "Android OS", "/files", "/cache", "WARNING; unable to retrieve a unique id!", "00000000000000000000000000000000", "UUID: %s => %s", "<init>", "(ILjava/lang/String;[BLjava/util/Map;)V", "join", "isAlive", "AndroidWWW::initJava / GetMethodID failed", "headerCallback", "(ILjava/lang/String;)Z", "readCallback", "(I[BI)Z", "progressCallback", "(IFFDI)V", "errorCallback", "(ILjava/lang/String;)V", "doneCallback", "(I)V", "AndroidWWW::initJava / RegisterNatives failed", "content-length:", "java/util/HashMap", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "Buffer allocation failed; Unable to allocate %i bytes download buffer\n", "file://", "You are trying to load data from a www stream which has not completed the download yet.\nYou need to yield the download or wait until isDone returns true.", "%s: fopen('%s', rb) failed - %s(%d)", "NativeFile", "asyncProcessor", "%s : Unable to open '%s'", "apkAddCentralDirectory", "%s : Unable to parse '%s'", "Requested framebuffer: resolution[%ix%i], rgba[%s], depth+stencil[%s], samples[%d]", "8/8/8/8", "5/6/5/0", "Created framebuffer: resolution[%ix%i], %s", "[EGL] Attaching window %d:%p", "Unable to acquire context for surface[%d]", "./PlatformDependent/AndroidPlayer/Source/DisplayManager.cpp", "Unable to present surface[%d]", "unity", "Missing required permission '%s'. Please make sure '%s' has been set in the manifest.", "Unable to lookup library path for '%s', native render plugin support disabled.", "Unable to load library '%s', native render plugin support disabled: %s", "android.permission.ACCESS_NETWORK_STATE", "com.samsung.android.vr.application.mode", "UnityMain", "SystemInfo CPU = %s, Cores = %d, Memory = %dmb\n", "assets/bin/", "   mono initialization failed\n", "InitializeScriptEngine OK (%08x)\n", "   engine initialization failed\n", "PlayerInitEngineNoGraphics OK\n", "   gfx device initialization failed\n", "InitializeGfxDevice OK\n", "   gfx initialization failed\n", "PlayerInitEngineGraphics OK\n", "assets/", "Location_IsServiceEnabledByUser", "Location_SetDesiredAccuracy", "Location_SetDistanceFilter", "Location_StartUpdatingLocation", "Location_StopUpdatingLocation", "setFullscreen", "initCamera", "closeCamera", "getNumCameras", "isCameraFrontFacing", "getCameraOrientation", "Unable to retrieve Java VM!", "nativeInjectEvent", "Unable to open/read APK file!", "Unable to chdir()!", "Unable to set the data dir!", "com/unity3d/player/UnityPlayer", "com/unity3d/player/ReflectionHelper", ".assets", ".split0", "java/lang/Error", "(Ljava/lang/String;)V", "setStackTrace", "([Ljava/lang/StackTraceElement;)V", "java/lang/StackTraceElement", "Class", "Method", "CRASH", "main thread is trapped; signum = %i", "other thread is trapped; signum = %i", "currentActivity", "Landroid/app/Activity;", "getPackageName", "()Ljava/lang/String;", "android/app/ApplicationErrorReport", "getErrorReportReceiver", "(Landroid/content/Context;Ljava/lang/String;I)Landroid/content/ComponentName;", "getPackageManager", "()Landroid/content/pm/PackageManager;", "getInstallerPackageName", "(Ljava/lang/String;)Ljava/lang/String;", "android/content/Intent", "android.intent.action.APP_ERROR", "setPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "resolveActivity", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "activityInfo", "Landroid/content/pm/ActivityInfo;", "Ljava/lang/String;", "%s %i got %i", "chained_signal_handler", "*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n", "\nbacktrace:\n", "libunity.so", "libmono.so", "Screenmanager Resolution Width", "Screenmanager Resolution Height", "Screenmanager Is Fullscreen mode", "Accelerometer", "Magnetic Field", "Gyroscope", "Proximity", "Orientation", "Pressure", "Temperature", "Gravity", "Linear Acceleration", "Rotation Vector", "Relative Humidity", "Ambient Temperature", "Found %i native sensors", "ASensorManager_destroyEventQueue returned %i", "Failed to enable %s sensor", "Failed to set event rate for %s sensor (%i us)", "Error calling UnityAds function. Please enable UnityAds integration.", "%s: couldn't find camera #%d\n", "VideoFrameCallback", "Camera %d", "%s: m_DeviceName='%s', device=%d, w=%d, h=%d, fps=%f\n", "Create", "WebCamTexture", "Cannot find webcam device ", "No available webcams are found. Either there is no webcam connected, or they are all in use by other applications (like Skype).", "Input: Touchpad enabled(%.2f, %.2f)", "Sony Ericsson X10i", "Sony Ericsson E10i", "eglGetSystemTimeFrequencyNV", "eglGetSystemTimeNV", "Sensor : N/A", "Sensor : %*s (%2i) ; %f / %.2fs ; %s / %s ", "Unknown event structure (%i)", "\t#%02d  il ........  %s\n", "\t#%02d  il %08x  %s\n", "<0x%05x>", "\t%s\n", "%.*s", "%08x", "add_symbols", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V", "%s/%s", "Input: dropping joystick movement - out of resources [%d, %d, %f]", "Input: dropping joystick keypress - out of resources [%d, %d, %d]", "joystick %d button %d", "joystick button %d", "re-attaching", "attaching", "detaching", "Input: detaching joystick to make room for a new one - out of resources", "Input: %s joystick [\"%s\"][0x%08x:%s] at pos [0x%02x]", "Input: dropping joystick axis - no mapping [%s]", "Input: dropping joystick axis - out of resources [%d:%s]", "<0x%08x>", "<0x%04x>", "nativeProxyInvoke", "(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", "nativeProxyFinalize", "initJni", "(Landroid/content/Context;)V", "nativeDone", "nativeFile", "nativePause", "nativeRecreateGfxState", "(ILandroid/view/Surface;)V", "nativeRender", "nativeResume", "nativeFocusChanged", "(Z)V", "nativeSetInputString", "nativeSoftInputClosed", "nativeSetInputCanceled", "nativeSetTouchDeltaY", "(F)V", "nativeSetLocation", "(FFFFDF)V", "nativeSetLocationStatus", "nativeInitWWW", "(Ljava/lang/Class;)V", "nativeVideoFrameCallback", "(I[BII)V", "nativeActivityIndicatorStyle", "nativeForwardEventsToDalvik", "(Landroid/view/InputEvent;)Z", "nativeAddVSyncTime", "(J)V", "UnitySendMessage", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "android/view/KeyCharacterMap", "load", "(I)Landroid/view/KeyCharacterMap;", "(II)I", "installPresentationDisplay", "(I)Z", "%s %i: Unable to resolve method '%s'\n", "resolve", "loadLibrary", "(Ljava/lang/String;)Z", "disableLogger", "getSplashMode", "executeGLThreadJobs", "kill", "stopActivityIndicator", "startActivityIndicator", "(I)I", "(IIII)[I", "showVideoPlayer", "(Ljava/lang/String;IIIZII)V", "setSoftInputStr", "hideSoftInput", "showSoftInput", "(Ljava/lang/String;IZZZZLjava/lang/String;)V", "CommandLine: %s", "[EGL] Unable to reconfigure surface (%d)", "DisplayManager: No presentation display available", "DisplayManager: Installing presentation display", "Google", "Yellowstone", "KFTT", "KFJWI", "KFJWA", "KFSOWI", "KFTHWA", "KFTHWI", "KFAPWA", "KFAPWI", "Hardware resolution scaling not supported, falling back to software scaling (blit).", "ANativeWindow: (%d/%d) RequestedResolution: (%d/%d) EGLSurface: (%d/%d)", "eglGetConfigAttrib(eglDisplay, eglConfig, EGL_NATIVE_VISUAL_ID, &format)", "./PlatformDependent/AndroidPlayer/Source/ContextGLES.cpp", "(CSAA)", "(MSAA)", "rgba[%i/%i/%i/%i], depth+stencil[%i/%i], samples[%i] %s", ".apk/", ".obb/", ".jar/", ".zip/", "%02x%02x%02x%02x%02x%02x", "network interface not found; is wifi enabled?", "android.permission.WRITE_EXTERNAL_STORAGE", "/Android/data/", "af-ZA", "ar-SA", "eu-ES", "be-BY", "bg-BG", "ca-ES", "zh-CN", "zh-SG", "zh-HK", "zh-MO", "zh-TW", "cs-CZ", "da-DK", "nl-NL", "en-US", "et-EE", "fo-FO", "fi-FI", "fr-FR", "de-DE", "el-GR", "he-IL", "hu-HU", "is-IS", "id-ID", "it-IT", "ja-JP", "ko-KR", "lv-LV", "lt-LT", "nb-NO", "pl-PL", "pt-PT", "ro-RO", "ru-RU", "hr-HR", "sr-RS", "sk-SK", "sl-SI", "es-ES", "sv-SE", "th-TH", "tr-TR", "uk-UA", "vi-VN", "/system/fonts/", "/etc/system_fonts.xml", "/etc/fallback_fonts.xml", "/vendor/etc/fallback_fonts.xml", "familyset", "family", "fileset", "file", "variant", "compact", "/etc/fonts.xml", "font", "InflateRead: Read Error: %s (trying to syncread %ld bytes of data, but read %ld)", "Inflate Error: %s (file zip crc32 : %08x) (result: %08x)", "Unknown compression method (file zip crc32 : %08x)", "&#x%02X;", "    ", "</%s>", "%s=\"%s\"", "%s='%s'", "<!--%s-->", "<![CDATA[%s]]>\n", "<?xml ", "version=\"%s\" ", "version=\"", "encoding=\"%s\" ", "encoding=\"", "standalone=\"%s\" ", "standalone=\"", "<%s>", "<![CDATA[", "<!--", "No error", "Error", "Failed to open file", "Error parsing Element.", "Failed to read Element name", "Error reading Element value.", "Error reading Attributes.", "Error: empty tag.", "Error reading end tag.", "Error parsing Unknown.", "Error parsing Comment.", "Error parsing Declaration.", "Error document empty.", "Error null (0) or unexpected EOF found in input stream.", "Error parsing CDATA.", "Error when TiXmlDocument added to document, because TiXmlDocument can only be at the root.", "&amp;", "&lt;", "&gt;", "&quot;", "&apos;", "UTF-8", "UTF8", "<?xml", "version", "encoding", "standalone", "Invalid portal index", "Loading deprecated Occlusion Culling is not supported. Please rebake the occlusion culling data.", "TILES_VISITED", "PORTALS_PROCESSED", "EXT_PORTALS_PROCESSED", "CELLS_PROCESSED", "CELL_REVISITS", "CELL_SORT_FAILURES", "ParticleSystem", "Precision issue while prewarming particle system - 'Duration' or 'Start Lifetime' is likely a too large value.", "ParticleSystemRenderer", "scalar", "maxCurve", "minCurve", "minMaxState", "maxGradient", "minGradient", "minColor", "maxColor", "m_MaxParticleSize", "m_CameraVelocityScale", "m_VelocityScale", "m_LengthScale", "m_SortingFudge", "m_NormalDirection", "m_SortMode", "m_Mesh1", "m_Mesh2", "m_Mesh3", "SubModule", "CollisionModule", "ColorBySpeedModule", "RotationBySpeedModule", "SizeBySpeedModule", "ClampVelocityModule", "ExternalForcesModule", "ForceModule", "VelocityModule", "UVModule", "ColorModule", "RotationModule", "SizeModule", "EmissionModule", "ShapeModule", "InitialModule", "Invalid normalTangentMask", "lengthInSec", "startDelay", "speed", "randomSeed", "looping", "prewarm", "playOnAwake", "moveWithTransform", "enabled", "rate", "cnt0", "cnt1", "cnt2", "cnt3", "time0", "time1", "time2", "time3", "m_BurstCount", "magnitude", "separateAxis", "inWorldSpace", "dampen", "gradient", "range", "randomizePerFrame", "multiplier", "The ParticleSystem uses a gravityModifier, but the Physics Module is stripped, so using a default value for gravity. Disable stripping in Player Settings to fix this.", "startLifetime", "startSpeed", "startColor", "startSize", "startRotation", "gravityModifier", "inheritVelocity", "maxNumParticles", "curve", "radius", "angle", "length", "boxX", "boxY", "boxZ", "placementMode", "randomDirection", "plane0", "plane1", "plane2", "plane3", "plane4", "plane5", "bounce", "energyLossOnCollision", "minKillSpeed", "particleRadius", "collidesWith", "quality", "voxelSize", "collisionMessages", "subEmitterBirth", "subEmitterBirth1", "subEmitterCollision", "subEmitterCollision1", "subEmitterDeath", "subEmitterDeath1", "frameOverTime", "tilesX", "tilesY", "animationType", "rowIndex", "cycles", "randomRow", "PPtr<ParticleSystem>", "MinMaxGradient", "MinMaxCurve", " Array needs to contain exactly 5 Colors for colorAnimation.", "ClothSkinningCoefficient", "Number of coefficients must match number of vertices!", "capsuleColliders array is null", "sphereColliders array is null", "Invalid points assigned to 2D edge collider.", "Path %d does not exist.", "Path %d does not exist; negative path index is invalid.", "Cannot create a 2D polygon primitive collider with less than two sides.", "Cannot create a 2D polygon primitive collider with an axis scale less than or equal to zero.", "Setting AudioSettings.speakerMode is deprecated and has been replaced by audio project settings and the AudioSettings.GetConfiguration/AudioSettings.Reset API.", "Setting AudioSettings.speakerMode failed", "Audio system is disabled, so AudioSettings.outputSampleRate cannot be queried. Please check the audio project settings.", "Setting AudioSettings.outputSampleRate is deprecated and has been replaced by audio project settings and the AudioSettings.GetConfiguration/AudioSettings.Reset API.", "Setting AudioSettings.outputSampleRate failed", "Audio system is disabled, so AudioSettings.GetDSPBufferSize cannot be called. Please check the audio project settings.", "./artifacts/generated/common/modules/AudioBindings.gen.cpp", "system->getDSPBufferSize((unsigned int*)bufferLength, numBuffers)", "SetDSPBufferSize is deprecated and has been replaced by audio project settings and the AudioSettings.GetConfiguration/AudioSettings.Reset API.", "SetDSPBufferSize failed", "AudioClip.GetData failed; AudioClip %s contains no data", "AudioClip.SetData failed; invalid offsetSamples", "AudioClip.SetData failed; invalid data", "Audio system is disabled, so AudioSettings.GetOutputData cannot be called. Please check the audio project settings.", "AudioListener.GetOutputDataHelper failed; invalid channel", "Audio system is disabled, so AudioSettings.GetSpectrumData cannot be called. Please check the audio project settings.", "AudioListener.GetSpectrumDataHelper failed; invalid channel", "Attempt to set pitch to infinite value from script ignored!", "Attempt to set pitch to NaN value from script ignored!", "Delayed playback via the optional argument of Play is deprecated. Use PlayDelayed instead!", "AudioSource.SetCustomCurve must be passed an AnimationCurve with at least 1 element.", "Unknown AudioSourceCurveType passed to AudioSource.SetCustomCurve.", "Unknown AudioSourceCurveType passed to AudioSource.GetCustomCurve.", "minVolume is not supported anymore. Use min-, maxDistance and rolloffMode instead.", "maxVolume is not supported anymore. Use min-, maxDistance and rolloffMode instead.", "rolloffFactor is not supported anymore. Use min-, maxDistance and rolloffMode instead.", "AudioLowPassFilter.customCutoffCurve must be passed an AnimationCurve with at least 1 element.", "null Snapshot passed to AudioMixer.TransitionToSnapshots of AudioMixer '%s'", "Snapshot '%s' passed to AudioMixer.TransitionToSnapshots is not a snapshot from AudioMixer '%s'", "Number of items in name and weight lists don't match!", "Input color array length needs to match width * height, but %d != %d * %d", "The script class couldn't be found", "MoveKey", "RemoveKey", "GetKey", "SmoothTangents", "Animation State out of bounds!", "AnimatorControllerParameter", "go is null", "Trying to access out-of-bounds terrain height information.", "Cannot change the tree prototype.", "Cannot change the tree position.", "Invalid argument for GetAlphaMaps", "GetRef", "Element %d is null", "UnityEngine.GUI::INTERNAL_get_color", "UnityEngine.GUI::INTERNAL_set_color", "UnityEngine.GUI::INTERNAL_get_backgroundColor", "UnityEngine.GUI::INTERNAL_set_backgroundColor", "UnityEngine.GUI::INTERNAL_get_contentColor", "UnityEngine.GUI::INTERNAL_set_contentColor", "UnityEngine.GUI::get_changed", "UnityEngine.GUI::set_changed", "UnityEngine.GUI::get_enabled", "UnityEngine.GUI::set_enabled", "UnityEngine.GUI::Internal_GetTooltip", "UnityEngine.GUI::Internal_SetTooltip", "UnityEngine.GUI::Internal_GetMouseTooltip", "UnityEngine.GUI::get_depth", "UnityEngine.GUI::set_depth", "UnityEngine.GUI::INTERNAL_CALL_DoLabel", "UnityEngine.GUI::InitializeGUIClipTexture", "UnityEngine.GUI::get_blendMaterial", "UnityEngine.GUI::get_blitMaterial", "UnityEngine.GUI::INTERNAL_CALL_DoButton", "UnityEngine.GUI::SetNextControlName", "UnityEngine.GUI::GetNameOfFocusedControl", "UnityEngine.GUI::FocusControl", "UnityEngine.GUI::INTERNAL_CALL_DoToggle", "UnityEngine.GUI::get_usePageScrollbars", "UnityEngine.GUI::InternalRepaintEditorWindow", "UnityEngine.GUI::INTERNAL_CALL_DoModalWindow", "UnityEngine.GUI::INTERNAL_CALL_DoWindow", "UnityEngine.GUI::INTERNAL_CALL_DragWindow", "UnityEngine.GUI::BringWindowToFront", "UnityEngine.GUI::BringWindowToBack", "UnityEngine.GUI::FocusWindow", "UnityEngine.GUI::UnfocusWindow", "UnityEngine.GUI::Internal_BeginWindows", "UnityEngine.GUI::Internal_EndWindows", "UnityEngine.Event::Init", "UnityEngine.Event::Cleanup", "UnityEngine.Event::InitCopy", "UnityEngine.Event::InitPtr", "UnityEngine.Event::get_rawType", "UnityEngine.Event::get_type", "UnityEngine.Event::set_type", "UnityEngine.Event::GetTypeForControl", "UnityEngine.Event::INTERNAL_CALL_Internal_SetMousePosition", "UnityEngine.Event::Internal_GetMousePosition", "UnityEngine.Event::INTERNAL_CALL_Internal_SetMouseDelta", "UnityEngine.Event::Internal_GetMouseDelta", "UnityEngine.Event::get_button", "UnityEngine.Event::set_button", "UnityEngine.Event::get_modifiers", "UnityEngine.Event::set_modifiers", "UnityEngine.Event::get_pressure", "UnityEngine.Event::set_pressure", "UnityEngine.Event::get_clickCount", "UnityEngine.Event::set_clickCount", "UnityEngine.Event::get_character", "UnityEngine.Event::set_character", "UnityEngine.Event::get_commandName", "UnityEngine.Event::set_commandName", "UnityEngine.Event::get_keyCode", "UnityEngine.Event::set_keyCode", "UnityEngine.Event::Internal_SetNativeEvent", "UnityEngine.Event::Use", "UnityEngine.Event::PopEvent", "UnityEngine.Event::GetEventCount", "UnityEngine.TerrainCollider::get_terrainData", "UnityEngine.TerrainCollider::set_terrainData", "UnityEngine.RectTransformUtility::INTERNAL_CALL_RectangleContainsScreenPoint", "UnityEngine.RectTransformUtility::INTERNAL_CALL_PixelAdjustPoint", "UnityEngine.RectTransformUtility::PixelAdjustRect", "UnityEngine.CanvasRenderer::INTERNAL_CALL_SetColor", "UnityEngine.CanvasRenderer::GetColor", "UnityEngine.CanvasRenderer::GetAlpha", "UnityEngine.CanvasRenderer::SetAlpha", "UnityEngine.CanvasRenderer::get_isMask", "UnityEngine.CanvasRenderer::set_isMask", "UnityEngine.CanvasRenderer::INTERNAL_CALL_EnableRectClipping", "UnityEngine.CanvasRenderer::DisableRectClipping", "UnityEngine.CanvasRenderer::get_hasRectClipping", "UnityEngine.CanvasRenderer::get_hasPopInstruction", "UnityEngine.CanvasRenderer::set_hasPopInstruction", "UnityEngine.CanvasRenderer::get_materialCount", "UnityEngine.CanvasRenderer::set_materialCount", "UnityEngine.CanvasRenderer::SetMaterial", "UnityEngine.CanvasRenderer::GetMaterial", "UnityEngine.CanvasRenderer::get_popMaterialCount", "UnityEngine.CanvasRenderer::set_popMaterialCount", "UnityEngine.CanvasRenderer::SetPopMaterial", "UnityEngine.CanvasRenderer::GetPopMaterial", "UnityEngine.CanvasRenderer::SetTexture", "UnityEngine.CanvasRenderer::SetMesh", "UnityEngine.CanvasRenderer::Clear", "UnityEngine.CanvasRenderer::get_relativeDepth", "UnityEngine.CanvasRenderer::get_cull", "UnityEngine.CanvasRenderer::set_cull", "UnityEngine.CanvasRenderer::get_absoluteDepth", "UnityEngine.CanvasRenderer::get_hasMoved", "UnityEngine.CanvasGroup::get_alpha", "UnityEngine.CanvasGroup::set_alpha", "UnityEngine.CanvasGroup::get_interactable", "UnityEngine.CanvasGroup::set_interactable", "UnityEngine.CanvasGroup::get_blocksRaycasts", "UnityEngine.CanvasGroup::set_blocksRaycasts", "UnityEngine.CanvasGroup::get_ignoreParentGroups", "UnityEngine.CanvasGroup::set_ignoreParentGroups", "UnityEngine.Canvas::get_renderMode", "UnityEngine.Canvas::set_renderMode", "UnityEngine.Canvas::get_isRootCanvas", "UnityEngine.Canvas::get_worldCamera", "UnityEngine.Canvas::set_worldCamera", "UnityEngine.Canvas::INTERNAL_get_pixelRect", "UnityEngine.Canvas::get_scaleFactor", "UnityEngine.Canvas::set_scaleFactor", "UnityEngine.Canvas::get_referencePixelsPerUnit", "UnityEngine.Canvas::set_referencePixelsPerUnit", "UnityEngine.Canvas::get_overridePixelPerfect", "UnityEngine.Canvas::set_overridePixelPerfect", "UnityEngine.Canvas::get_pixelPerfect", "UnityEngine.Canvas::set_pixelPerfect", "UnityEngine.Canvas::get_planeDistance", "UnityEngine.Canvas::set_planeDistance", "UnityEngine.Canvas::get_renderOrder", "UnityEngine.Canvas::get_overrideSorting", "UnityEngine.Canvas::set_overrideSorting", "UnityEngine.Canvas::get_sortingOrder", "UnityEngine.Canvas::set_sortingOrder", "UnityEngine.Canvas::get_sortingLayerID", "UnityEngine.Canvas::set_sortingLayerID", "UnityEngine.Canvas::get_cachedSortingLayerValue", "UnityEngine.Canvas::get_sortingLayerName", "UnityEngine.Canvas::set_sortingLayerName", "UnityEngine.Canvas::GetDefaultCanvasMaterial", "UnityEngine.Canvas::GetDefaultCanvasTextMaterial", "UnityEngine.Terrain::get_editorRenderFlags", "UnityEngine.Terrain::set_editorRenderFlags", "UnityEngine.Terrain::get_terrainData", "UnityEngine.Terrain::set_terrainData", "UnityEngine.Terrain::get_treeDistance", "UnityEngine.Terrain::set_treeDistance", "UnityEngine.Terrain::get_treeBillboardDistance", "UnityEngine.Terrain::set_treeBillboardDistance", "UnityEngine.Terrain::get_treeCrossFadeLength", "UnityEngine.Terrain::set_treeCrossFadeLength", "UnityEngine.Terrain::get_treeMaximumFullLODCount", "UnityEngine.Terrain::set_treeMaximumFullLODCount", "UnityEngine.Terrain::get_detailObjectDistance", "UnityEngine.Terrain::set_detailObjectDistance", "UnityEngine.Terrain::get_detailObjectDensity", "UnityEngine.Terrain::set_detailObjectDensity", "UnityEngine.Terrain::get_collectDetailPatches", "UnityEngine.Terrain::set_collectDetailPatches", "UnityEngine.Terrain::get_heightmapPixelError", "UnityEngine.Terrain::set_heightmapPixelError", "UnityEngine.Terrain::get_heightmapMaximumLOD", "UnityEngine.Terrain::set_heightmapMaximumLOD", "UnityEngine.Terrain::get_basemapDistance", "UnityEngine.Terrain::set_basemapDistance", "UnityEngine.Terrain::get_lightmapIndex", "UnityEngine.Terrain::set_lightmapIndex", "UnityEngine.Terrain::get_realtimeLightmapIndex", "UnityEngine.Terrain::set_realtimeLightmapIndex", "UnityEngine.Terrain::INTERNAL_get_lightmapScaleOffset", "UnityEngine.Terrain::INTERNAL_set_lightmapScaleOffset", "UnityEngine.Terrain::INTERNAL_get_realtimeLightmapScaleOffset", "UnityEngine.Terrain::INTERNAL_set_realtimeLightmapScaleOffset", "UnityEngine.Terrain::get_castShadows", "UnityEngine.Terrain::set_castShadows", "UnityEngine.Terrain::get_reflectionProbeUsage", "UnityEngine.Terrain::set_reflectionProbeUsage", "UnityEngine.Terrain::GetClosestReflectionProbesInternal", "UnityEngine.Terrain::get_materialType", "UnityEngine.Terrain::set_materialType", "UnityEngine.Terrain::get_materialTemplate", "UnityEngine.Terrain::set_materialTemplate", "UnityEngine.Terrain::INTERNAL_get_legacySpecular", "UnityEngine.Terrain::INTERNAL_set_legacySpecular", "UnityEngine.Terrain::get_legacyShininess", "UnityEngine.Terrain::set_legacyShininess", "UnityEngine.Terrain::get_drawHeightmap", "UnityEngine.Terrain::set_drawHeightmap", "UnityEngine.Terrain::get_drawTreesAndFoliage", "UnityEngine.Terrain::set_drawTreesAndFoliage", "UnityEngine.Terrain::INTERNAL_CALL_SampleHeight", "UnityEngine.Terrain::ApplyDelayedHeightmapModification", "UnityEngine.Terrain::INTERNAL_CALL_AddTreeInstance", "UnityEngine.Terrain::SetNeighbors", "UnityEngine.Terrain::GetPosition", "UnityEngine.Terrain::Flush", "UnityEngine.Terrain::INTERNAL_CALL_RemoveTrees", "UnityEngine.Terrain::get_activeTerrain", "UnityEngine.Terrain::get_activeTerrains", "UnityEngine.Terrain::CreateTerrainGameObject", "UnityEngine.Tree::get_data", "UnityEngine.Tree::set_data", "UnityEngine.Tree::get_hasSpeedTreeWind", "UnityEngine.TerrainData::Internal_Create", "UnityEngine.TerrainData::HasUser", "UnityEngine.TerrainData::AddUser", "UnityEngine.TerrainData::RemoveUser", "UnityEngine.TerrainData::get_heightmapWidth", "UnityEngine.TerrainData::get_heightmapHeight", "UnityEngine.TerrainData::get_heightmapResolution", "UnityEngine.TerrainData::set_heightmapResolution", "UnityEngine.TerrainData::INTERNAL_get_heightmapScale", "UnityEngine.TerrainData::INTERNAL_get_size", "UnityEngine.TerrainData::INTERNAL_set_size", "UnityEngine.TerrainData::get_thickness", "UnityEngine.TerrainData::set_thickness", "UnityEngine.TerrainData::GetHeight", "UnityEngine.TerrainData::GetInterpolatedHeight", "UnityEngine.TerrainData::GetHeights", "UnityEngine.TerrainData::Internal_SetHeights", "UnityEngine.TerrainData::Internal_SetHeightsDelayLOD", "UnityEngine.TerrainData::GetSteepness", "UnityEngine.TerrainData::GetInterpolatedNormal", "UnityEngine.TerrainData::GetAdjustedSize", "UnityEngine.TerrainData::get_wavingGrassStrength", "UnityEngine.TerrainData::set_wavingGrassStrength", "UnityEngine.TerrainData::get_wavingGrassAmount", "UnityEngine.TerrainData::set_wavingGrassAmount", "UnityEngine.TerrainData::get_wavingGrassSpeed", "UnityEngine.TerrainData::set_wavingGrassSpeed", "UnityEngine.TerrainData::INTERNAL_get_wavingGrassTint", "UnityEngine.TerrainData::INTERNAL_set_wavingGrassTint", "UnityEngine.TerrainData::get_detailWidth", "UnityEngine.TerrainData::get_detailHeight", "UnityEngine.TerrainData::SetDetailResolution", "UnityEngine.TerrainData::get_detailResolution", "UnityEngine.TerrainData::get_detailResolutionPerPatch", "UnityEngine.TerrainData::ResetDirtyDetails", "UnityEngine.TerrainData::RefreshPrototypes", "UnityEngine.TerrainData::get_detailPrototypes", "UnityEngine.TerrainData::set_detailPrototypes", "UnityEngine.TerrainData::GetSupportedLayers", "UnityEngine.TerrainData::GetDetailLayer", "UnityEngine.TerrainData::Internal_SetDetailLayer", "UnityEngine.TerrainData::get_treeInstances", "UnityEngine.TerrainData::set_treeInstances", "UnityEngine.TerrainData::GetTreeInstance", "UnityEngine.TerrainData::INTERNAL_CALL_SetTreeInstance", "UnityEngine.TerrainData::get_treeInstanceCount", "UnityEngine.TerrainData::get_treePrototypes", "UnityEngine.TerrainData::set_treePrototypes", "UnityEngine.TerrainData::RemoveTreePrototype", "UnityEngine.TerrainData::RecalculateTreePositions", "UnityEngine.TerrainData::RemoveDetailPrototype", "UnityEngine.TerrainData::NeedUpgradeScaledTreePrototypes", "UnityEngine.TerrainData::UpgradeScaledTreePrototype", "UnityEngine.TerrainData::get_alphamapLayers", "UnityEngine.TerrainData::GetAlphamaps", "UnityEngine.TerrainData::get_alphamapResolution", "UnityEngine.TerrainData::set_alphamapResolution", "UnityEngine.TerrainData::get_alphamapWidth", "UnityEngine.TerrainData::get_alphamapHeight", "UnityEngine.TerrainData::get_baseMapResolution", "UnityEngine.TerrainData::set_baseMapResolution", "UnityEngine.TerrainData::Internal_SetAlphamaps", "UnityEngine.TerrainData::RecalculateBasemapIfDirty", "UnityEngine.TerrainData::SetBasemapDirty", "UnityEngine.TerrainData::GetAlphamapTexture", "UnityEngine.TerrainData::get_alphamapTextureCount", "UnityEngine.TerrainData::get_splatPrototypes", "UnityEngine.TerrainData::set_splatPrototypes", "UnityEngine.TerrainData::AddTree", "UnityEngine.TerrainData::INTERNAL_CALL_RemoveTrees", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::InstantiateEnginePlayable", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::get_animatorController", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::get_layerCount", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetLayerName", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetLayerIndex", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetLayerWeight", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetLayerWeight", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetCurrentAnimatorStateInfo", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetNextAnimatorStateInfo", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetAnimatorTransitionInfo", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetCurrentAnimatorClipInfo", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetNextAnimatorClipInfo", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::ResolveHash", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::IsInTransition", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::get_parameterCount", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetParameter", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::StringToHash", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::CrossFadeInFixedTime", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::CrossFade", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::PlayInFixedTime", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::Play", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::HasState", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetFloatString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetFloatID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetFloatString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetFloatID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetBoolString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetBoolID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetBoolString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetBoolID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetIntegerString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetIntegerID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetIntegerString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::GetIntegerID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetTriggerString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::SetTriggerID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::ResetTriggerString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::ResetTriggerID", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::IsParameterControlledByCurveString", "UnityEngine.Experimental.Director.AnimatorControllerPlayable::IsParameterControlledByCurveID", "UnityEngine.Experimental.Director.AnimationPlayable::InstantiateEnginePlayable", "UnityEngine.Experimental.Director.AnimationClipPlayable::InstantiateEnginePlayable", "UnityEngine.Experimental.Director.AnimationClipPlayable::get_clip", "UnityEngine.Experimental.Director.AnimationClipPlayable::get_speed", "UnityEngine.Experimental.Director.AnimationClipPlayable::set_speed", "UnityEngine.Experimental.Director.AnimationMixerPlayable::InstantiateEnginePlayable", "UnityEngine.Avatar::get_isValid", "UnityEngine.Avatar::get_isHuman", "UnityEngine.Avatar::SetMuscleMinMax", "UnityEngine.Avatar::SetParameter", "UnityEngine.Avatar::GetAxisLength", "UnityEngine.Avatar::GetPreRotation", "UnityEngine.Avatar::GetPostRotation", "UnityEngine.Avatar::INTERNAL_CALL_GetZYPostQ", "UnityEngine.Avatar::INTERNAL_CALL_GetZYRoll", "UnityEngine.Avatar::GetLimitSign", "UnityEngine.HumanTrait::get_MuscleCount", "UnityEngine.HumanTrait::get_MuscleName", "UnityEngine.HumanTrait::get_BoneCount", "UnityEngine.HumanTrait::get_BoneName", "UnityEngine.HumanTrait::MuscleFromBone", "UnityEngine.HumanTrait::BoneFromMuscle", "UnityEngine.HumanTrait::RequiredBone", "UnityEngine.HumanTrait::get_RequiredBoneCount", "UnityEngine.HumanTrait::HasCollider", "UnityEngine.HumanTrait::GetMuscleDefaultMin", "UnityEngine.HumanTrait::GetMuscleDefaultMax", "UnityEngine.HumanTrait::GetParentBone", "UnityEngine.RuntimeAnimatorController::get_animationClips", "UnityEngine.AvatarBuilder::INTERNAL_CALL_BuildHumanAvatarMono", "UnityEngine.AvatarBuilder::BuildGenericAvatar", "UnityEngine.AnimatorUtility::OptimizeTransformHierarchy", "UnityEngine.AnimatorUtility::DeoptimizeTransformHierarchy", "UnityEngine.AnimatorClipInfo::ClipInstanceToScriptingObject", "UnityEngine.Animator::get_isOptimizable", "UnityEngine.Animator::get_isHuman", "UnityEngine.Animator::get_hasRootMotion", "UnityEngine.Animator::get_isRootPositionOrRotationControlledByCurves", "UnityEngine.Animator::get_humanScale", "UnityEngine.Animator::get_isInitialized", "UnityEngine.Animator::INTERNAL_get_deltaPosition", "UnityEngine.Animator::INTERNAL_get_deltaRotation", "UnityEngine.Animator::INTERNAL_get_velocity", "UnityEngine.Animator::INTERNAL_get_angularVelocity", "UnityEngine.Animator::INTERNAL_get_rootPosition", "UnityEngine.Animator::INTERNAL_set_rootPosition", "UnityEngine.Animator::INTERNAL_get_rootRotation", "UnityEngine.Animator::INTERNAL_set_rootRotation", "UnityEngine.Animator::get_applyRootMotion", "UnityEngine.Animator::set_applyRootMotion", "UnityEngine.Animator::get_linearVelocityBlending", "UnityEngine.Animator::set_linearVelocityBlending", "UnityEngine.Animator::get_updateMode", "UnityEngine.Animator::set_updateMode", "UnityEngine.Animator::get_hasTransformHierarchy", "UnityEngine.Animator::get_allowConstantClipSamplingOptimization", "UnityEngine.Animator::set_allowConstantClipSamplingOptimization", "UnityEngine.Animator::get_gravityWeight", "UnityEngine.Animator::INTERNAL_get_bodyPosition", "UnityEngine.Animator::INTERNAL_set_bodyPosition", "UnityEngine.Animator::INTERNAL_get_bodyRotation", "UnityEngine.Animator::INTERNAL_set_bodyRotation", "UnityEngine.Animator::GetIKPositionInternal", "UnityEngine.Animator::INTERNAL_CALL_SetIKPositionInternal", "UnityEngine.Animator::GetIKRotationInternal", "UnityEngine.Animator::INTERNAL_CALL_SetIKRotationInternal", "UnityEngine.Animator::GetIKPositionWeightInternal", "UnityEngine.Animator::SetIKPositionWeightInternal", "UnityEngine.Animator::GetIKRotationWeightInternal", "UnityEngine.Animator::SetIKRotationWeightInternal", "UnityEngine.Animator::GetIKHintPositionInternal", "UnityEngine.Animator::INTERNAL_CALL_SetIKHintPositionInternal", "UnityEngine.Animator::GetHintWeightPositionInternal", "UnityEngine.Animator::SetIKHintPositionWeightInternal", "UnityEngine.Animator::INTERNAL_CALL_SetLookAtPositionInternal", "UnityEngine.Animator::SetLookAtWeightInternal", "UnityEngine.Animator::INTERNAL_CALL_SetBoneLocalRotationInternal", "UnityEngine.Animator::GetBehaviour", "UnityEngine.Animator::GetBehaviours", "UnityEngine.Animator::get_stabilizeFeet", "UnityEngine.Animator::set_stabilizeFeet", "UnityEngine.Animator::get_layerCount", "UnityEngine.Animator::GetLayerName", "UnityEngine.Animator::GetLayerIndex", "UnityEngine.Animator::GetLayerWeight", "UnityEngine.Animator::SetLayerWeight", "UnityEngine.Animator::GetCurrentAnimatorStateInfo", "UnityEngine.Animator::GetNextAnimatorStateInfo", "UnityEngine.Animator::GetAnimatorTransitionInfo", "UnityEngine.Animator::GetCurrentAnimatorClipInfo", "UnityEngine.Animator::GetNextAnimatorClipInfo", "UnityEngine.Animator::IsInTransition", "UnityEngine.Animator::get_parameters", "UnityEngine.Animator::get_parameterCount", "UnityEngine.Animator::GetParameter", "UnityEngine.Animator::get_feetPivotActive", "UnityEngine.Animator::set_feetPivotActive", "UnityEngine.Animator::get_pivotWeight", "UnityEngine.Animator::INTERNAL_get_pivotPosition", "UnityEngine.Animator::INTERNAL_CALL_MatchTarget", "UnityEngine.Animator::InterruptMatchTarget", "UnityEngine.Animator::get_isMatchingTarget", "UnityEngine.Animator::get_speed", "UnityEngine.Animator::set_speed", "UnityEngine.Animator::CrossFadeInFixedTime", "UnityEngine.Animator::CrossFade", "UnityEngine.Animator::PlayInFixedTime", "UnityEngine.Animator::Play", "UnityEngine.Animator::SetTarget", "UnityEngine.Animator::INTERNAL_get_targetPosition", "UnityEngine.Animator::INTERNAL_get_targetRotation", "UnityEngine.Animator::IsControlled", "UnityEngine.Animator::IsBoneTransform", "UnityEngine.Animator::get_avatarRoot", "UnityEngine.Animator::GetBoneTransform", "UnityEngine.Animator::get_cullingMode", "UnityEngine.Animator::set_cullingMode", "UnityEngine.Animator::StartPlayback", "UnityEngine.Animator::StopPlayback", "UnityEngine.Animator::get_playbackTime", "UnityEngine.Animator::set_playbackTime", "UnityEngine.Animator::StartRecording", "UnityEngine.Animator::StopRecording", "UnityEngine.Animator::get_recorderStartTime", "UnityEngine.Animator::set_recorderStartTime", "UnityEngine.Animator::get_recorderStopTime", "UnityEngine.Animator::set_recorderStopTime", "UnityEngine.Animator::get_recorderMode", "UnityEngine.Animator::get_runtimeAnimatorController", "UnityEngine.Animator::set_runtimeAnimatorController", "UnityEngine.Animator::HasState", "UnityEngine.Animator::StringToHash", "UnityEngine.Animator::get_avatar", "UnityEngine.Animator::set_avatar", "UnityEngine.Animator::GetStats", "UnityEngine.Animator::CheckIfInIKPassInternal", "UnityEngine.Animator::SetFloatString", "UnityEngine.Animator::SetFloatID", "UnityEngine.Animator::GetFloatString", "UnityEngine.Animator::GetFloatID", "UnityEngine.Animator::SetBoolString", "UnityEngine.Animator::SetBoolID", "UnityEngine.Animator::GetBoolString", "UnityEngine.Animator::GetBoolID", "UnityEngine.Animator::SetIntegerString", "UnityEngine.Animator::SetIntegerID", "UnityEngine.Animator::GetIntegerString", "UnityEngine.Animator::GetIntegerID", "UnityEngine.Animator::SetTriggerString", "UnityEngine.Animator::SetTriggerID", "UnityEngine.Animator::ResetTriggerString", "UnityEngine.Animator::ResetTriggerID", "UnityEngine.Animator::IsParameterControlledByCurveString", "UnityEngine.Animator::IsParameterControlledByCurveID", "UnityEngine.Animator::SetFloatStringDamp", "UnityEngine.Animator::SetFloatIDDamp", "UnityEngine.Animator::get_layersAffectMassCenter", "UnityEngine.Animator::set_layersAffectMassCenter", "UnityEngine.Animator::get_leftFeetBottomHeight", "UnityEngine.Animator::get_rightFeetBottomHeight", "UnityEngine.Animator::Update", "UnityEngine.Animator::Rebind", "UnityEngine.Animator::ApplyBuiltinRootMotion", "UnityEngine.Animator::ResolveHash", "UnityEngine.Animator::get_logWarnings", "UnityEngine.Animator::set_logWarnings", "UnityEngine.Animator::get_fireEvents", "UnityEngine.Animator::set_fireEvents", "UnityEngine.AnimationClip::SampleAnimation", "UnityEngine.AnimationClip::Internal_CreateAnimationClip", "UnityEngine.AnimationClip::get_length", "UnityEngine.AnimationClip::get_startTime", "UnityEngine.AnimationClip::get_stopTime", "UnityEngine.AnimationClip::get_frameRate", "UnityEngine.AnimationClip::set_frameRate", "UnityEngine.AnimationClip::SetCurve", "UnityEngine.AnimationClip::INTERNAL_CALL_EnsureQuaternionContinuity", "UnityEngine.AnimationClip::INTERNAL_CALL_ClearCurves", "UnityEngine.AnimationClip::get_wrapMode", "UnityEngine.AnimationClip::set_wrapMode", "UnityEngine.AnimationClip::INTERNAL_get_localBounds", "UnityEngine.AnimationClip::INTERNAL_set_localBounds", "UnityEngine.AnimationClip::get_legacy", "UnityEngine.AnimationClip::set_legacy", "UnityEngine.AnimationClip::get_humanMotion", "UnityEngine.AnimationClip::AddEventInternal", "UnityEngine.AnimationClip::SetEventsInternal", "UnityEngine.AnimationClip::GetEventsInternal", "UnityEngine.AnimationCurve::Cleanup", "UnityEngine.AnimationCurve::Evaluate", "UnityEngine.AnimationCurve::AddKey", "UnityEngine.AnimationCurve::INTERNAL_CALL_AddKey_Internal", "UnityEngine.AnimationCurve::INTERNAL_CALL_MoveKey", "UnityEngine.AnimationCurve::RemoveKey", "UnityEngine.AnimationCurve::get_length", "UnityEngine.AnimationCurve::SetKeys", "UnityEngine.AnimationCurve::GetKey_Internal", "UnityEngine.AnimationCurve::GetKeys", "UnityEngine.AnimationCurve::SmoothTangents", "UnityEngine.AnimationCurve::get_preWrapMode", "UnityEngine.AnimationCurve::set_preWrapMode", "UnityEngine.AnimationCurve::get_postWrapMode", "UnityEngine.AnimationCurve::set_postWrapMode", "UnityEngine.AnimationCurve::Init", "UnityEngine.Animation::get_clip", "UnityEngine.Animation::set_clip", "UnityEngine.Animation::get_playAutomatically", "UnityEngine.Animation::set_playAutomatically", "UnityEngine.Animation::get_wrapMode", "UnityEngine.Animation::set_wrapMode", "UnityEngine.Animation::INTERNAL_CALL_Stop", "UnityEngine.Animation::Internal_StopByName", "UnityEngine.Animation::Internal_RewindByName", "UnityEngine.Animation::INTERNAL_CALL_Rewind", "UnityEngine.Animation::INTERNAL_CALL_Sample", "UnityEngine.Animation::get_isPlaying", "UnityEngine.Animation::IsPlaying", "UnityEngine.Animation::Play", "UnityEngine.Animation::CrossFade", "UnityEngine.Animation::Blend", "UnityEngine.Animation::CrossFadeQueued", "UnityEngine.Animation::PlayQueued", "UnityEngine.Animation::AddClip", "UnityEngine.Animation::RemoveClip", "UnityEngine.Animation::GetClipCount", "UnityEngine.Animation::RemoveClip2", "UnityEngine.Animation::PlayDefaultAnimation", "UnityEngine.Animation::INTERNAL_CALL_SyncLayer", "UnityEngine.Animation::GetState", "UnityEngine.Animation::GetStateAtIndex", "UnityEngine.Animation::GetStateCount", "UnityEngine.Animation::get_animatePhysics", "UnityEngine.Animation::set_animatePhysics", "UnityEngine.Animation::get_animateOnlyIfVisible", "UnityEngine.Animation::set_animateOnlyIfVisible", "UnityEngine.Animation::get_cullingType", "UnityEngine.Animation::set_cullingType", "UnityEngine.Animation::INTERNAL_get_localBounds", "UnityEngine.Animation::INTERNAL_set_localBounds", "UnityEngine.AnimationState::get_enabled", "UnityEngine.AnimationState::set_enabled", "UnityEngine.AnimationState::get_weight", "UnityEngine.AnimationState::set_weight", "UnityEngine.AnimationState::get_wrapMode", "UnityEngine.AnimationState::set_wrapMode", "UnityEngine.AnimationState::get_time", "UnityEngine.AnimationState::set_time", "UnityEngine.AnimationState::get_normalizedTime", "UnityEngine.AnimationState::set_normalizedTime", "UnityEngine.AnimationState::get_speed", "UnityEngine.AnimationState::set_speed", "UnityEngine.AnimationState::get_normalizedSpeed", "UnityEngine.AnimationState::set_normalizedSpeed", "UnityEngine.AnimationState::get_length", "UnityEngine.AnimationState::get_layer", "UnityEngine.AnimationState::set_layer", "UnityEngine.AnimationState::get_clip", "UnityEngine.AnimationState::AddMixingTransform", "UnityEngine.AnimationState::RemoveMixingTransform", "UnityEngine.AnimationState::get_name", "UnityEngine.AnimationState::set_name", "UnityEngine.AnimationState::get_blendMode", "UnityEngine.AnimationState::set_blendMode", "UnityEngine.AnimatorOverrideController::Internal_CreateAnimationSet", "UnityEngine.AnimatorOverrideController::get_runtimeAnimatorController", "UnityEngine.AnimatorOverrideController::set_runtimeAnimatorController", "UnityEngine.AnimatorOverrideController::Internal_GetClipByName", "UnityEngine.AnimatorOverrideController::Internal_SetClipByName", "UnityEngine.AnimatorOverrideController::Internal_GetClip", "UnityEngine.AnimatorOverrideController::Internal_SetClip", "UnityEngine.AnimatorOverrideController::GetOriginalClips", "UnityEngine.AnimatorOverrideController::GetOverrideClips", "UnityEngine.WebCamTexture::Internal_CreateWebCamTexture", "UnityEngine.WebCamTexture::INTERNAL_CALL_Play", "UnityEngine.WebCamTexture::INTERNAL_CALL_Pause", "UnityEngine.WebCamTexture::INTERNAL_CALL_Stop", "UnityEngine.WebCamTexture::get_isPlaying", "UnityEngine.WebCamTexture::get_deviceName", "UnityEngine.WebCamTexture::set_deviceName", "UnityEngine.WebCamTexture::get_requestedFPS", "UnityEngine.WebCamTexture::set_requestedFPS", "UnityEngine.WebCamTexture::get_requestedWidth", "UnityEngine.WebCamTexture::set_requestedWidth", "UnityEngine.WebCamTexture::get_requestedHeight", "UnityEngine.WebCamTexture::set_requestedHeight", "UnityEngine.WebCamTexture::get_devices", "UnityEngine.WebCamTexture::GetPixel", "UnityEngine.WebCamTexture::GetPixels", "UnityEngine.WebCamTexture::GetPixels32", "UnityEngine.WebCamTexture::get_videoRotationAngle", "UnityEngine.WebCamTexture::get_videoVerticallyMirrored", "UnityEngine.WebCamTexture::get_didUpdateThisFrame", "Buffer is too small to get image data", "Cannot get pixels when webcam is not running", "Cannot get pixels when webcam is non-readable", "UnityEngine.Audio.AudioMixerGroup::get_audioMixer", "UnityEngine.Audio.AudioMixerSnapshot::get_audioMixer", "UnityEngine.Audio.AudioMixerSnapshot::TransitionTo", "UnityEngine.Audio.AudioMixer::get_outputAudioMixerGroup", "UnityEngine.Audio.AudioMixer::set_outputAudioMixerGroup", "UnityEngine.Audio.AudioMixer::FindMatchingGroups", "UnityEngine.Audio.AudioMixer::FindSnapshot", "UnityEngine.Audio.AudioMixer::TransitionToSnapshots", "UnityEngine.Audio.AudioMixer::SetFloat", "UnityEngine.Audio.AudioMixer::ClearFloat", "UnityEngine.Audio.AudioMixer::GetFloat", "UnityEngine.AudioSettings::get_driverCapabilities", "UnityEngine.AudioSettings::get_speakerMode", "UnityEngine.AudioSettings::set_speakerMode", "UnityEngine.AudioSettings::get_dspTime", "UnityEngine.AudioSettings::get_outputSampleRate", "UnityEngine.AudioSettings::set_outputSampleRate", "UnityEngine.AudioSettings::GetDSPBufferSize", "UnityEngine.AudioSettings::SetDSPBufferSize", "UnityEngine.AudioSettings::GetConfiguration", "UnityEngine.AudioSettings::INTERNAL_CALL_Reset", "UnityEngine.AudioClip::get_length", "UnityEngine.AudioClip::get_samples", "UnityEngine.AudioClip::get_channels", "UnityEngine.AudioClip::get_frequency", "UnityEngine.AudioClip::get_isReadyToPlay", "UnityEngine.AudioClip::get_loadType", "UnityEngine.AudioClip::LoadAudioData", "UnityEngine.AudioClip::UnloadAudioData", "UnityEngine.AudioClip::get_preloadAudioData", "UnityEngine.AudioClip::get_loadState", "UnityEngine.AudioClip::get_loadInBackground", "UnityEngine.AudioClip::GetData", "UnityEngine.AudioClip::SetData", "UnityEngine.AudioClip::Construct_Internal", "UnityEngine.AudioClip::Init_Internal", "UnityEngine.AudioListener::get_volume", "UnityEngine.AudioListener::set_volume", "UnityEngine.AudioListener::get_pause", "UnityEngine.AudioListener::set_pause", "UnityEngine.AudioListener::get_velocityUpdateMode", "UnityEngine.AudioListener::set_velocityUpdateMode", "UnityEngine.AudioListener::GetOutputDataHelper", "UnityEngine.AudioListener::GetSpectrumDataHelper", "UnityEngine.AudioSource::get_volume", "UnityEngine.AudioSource::set_volume", "UnityEngine.AudioSource::get_pitch", "UnityEngine.AudioSource::set_pitch", "UnityEngine.AudioSource::get_time", "UnityEngine.AudioSource::set_time", "UnityEngine.AudioSource::get_timeSamples", "UnityEngine.AudioSource::set_timeSamples", "UnityEngine.AudioSource::get_clip", "UnityEngine.AudioSource::set_clip", "UnityEngine.AudioSource::get_outputAudioMixerGroup", "UnityEngine.AudioSource::set_outputAudioMixerGroup", "UnityEngine.AudioSource::Play", "UnityEngine.AudioSource::PlayDelayed", "UnityEngine.AudioSource::PlayScheduled", "UnityEngine.AudioSource::SetScheduledStartTime", "UnityEngine.AudioSource::SetScheduledEndTime", "UnityEngine.AudioSource::Stop", "UnityEngine.AudioSource::INTERNAL_CALL_Pause", "UnityEngine.AudioSource::INTERNAL_CALL_UnPause", "UnityEngine.AudioSource::get_isPlaying", "UnityEngine.AudioSource::PlayOneShot", "UnityEngine.AudioSource::get_loop", "UnityEngine.AudioSource::set_loop", "UnityEngine.AudioSource::get_ignoreListenerVolume", "UnityEngine.AudioSource::set_ignoreListenerVolume", "UnityEngine.AudioSource::get_playOnAwake", "UnityEngine.AudioSource::set_playOnAwake", "UnityEngine.AudioSource::get_ignoreListenerPause", "UnityEngine.AudioSource::set_ignoreListenerPause", "UnityEngine.AudioSource::get_velocityUpdateMode", "UnityEngine.AudioSource::set_velocityUpdateMode", "UnityEngine.AudioSource::get_panStereo", "UnityEngine.AudioSource::set_panStereo", "UnityEngine.AudioSource::get_spatialBlend", "UnityEngine.AudioSource::set_spatialBlend", "UnityEngine.AudioSource::get_spatialize", "UnityEngine.AudioSource::set_spatialize", "UnityEngine.AudioSource::SetCustomCurve", "UnityEngine.AudioSource::GetCustomCurve", "UnityEngine.AudioSource::get_reverbZoneMix", "UnityEngine.AudioSource::set_reverbZoneMix", "UnityEngine.AudioSource::get_bypassEffects", "UnityEngine.AudioSource::set_bypassEffects", "UnityEngine.AudioSource::get_bypassListenerEffects", "UnityEngine.AudioSource::set_bypassListenerEffects", "UnityEngine.AudioSource::get_bypassReverbZones", "UnityEngine.AudioSource::set_bypassReverbZones", "UnityEngine.AudioSource::get_dopplerLevel", "UnityEngine.AudioSource::set_dopplerLevel", "UnityEngine.AudioSource::get_spread", "UnityEngine.AudioSource::set_spread", "UnityEngine.AudioSource::get_priority", "UnityEngine.AudioSource::set_priority", "UnityEngine.AudioSource::get_mute", "UnityEngine.AudioSource::set_mute", "UnityEngine.AudioSource::get_minDistance", "UnityEngine.AudioSource::set_minDistance", "UnityEngine.AudioSource::get_maxDistance", "UnityEngine.AudioSource::set_maxDistance", "UnityEngine.AudioSource::get_rolloffMode", "UnityEngine.AudioSource::set_rolloffMode", "UnityEngine.AudioSource::GetOutputDataHelper", "UnityEngine.AudioSource::GetSpectrumDataHelper", "UnityEngine.AudioSource::get_minVolume", "UnityEngine.AudioSource::set_minVolume", "UnityEngine.AudioSource::get_maxVolume", "UnityEngine.AudioSource::set_maxVolume", "UnityEngine.AudioSource::get_rolloffFactor", "UnityEngine.AudioSource::set_rolloffFactor", "UnityEngine.AudioSource::SetSpatializerFloat", "UnityEngine.AudioSource::GetSpatializerFloat", "UnityEngine.AudioReverbZone::get_minDistance", "UnityEngine.AudioReverbZone::set_minDistance", "UnityEngine.AudioReverbZone::get_maxDistance", "UnityEngine.AudioReverbZone::set_maxDistance", "UnityEngine.AudioReverbZone::get_reverbPreset", "UnityEngine.AudioReverbZone::set_reverbPreset", "UnityEngine.AudioReverbZone::get_room", "UnityEngine.AudioReverbZone::set_room", "UnityEngine.AudioReverbZone::get_roomHF", "UnityEngine.AudioReverbZone::set_roomHF", "UnityEngine.AudioReverbZone::get_roomLF", "UnityEngine.AudioReverbZone::set_roomLF", "UnityEngine.AudioReverbZone::get_decayTime", "UnityEngine.AudioReverbZone::set_decayTime", "UnityEngine.AudioReverbZone::get_decayHFRatio", "UnityEngine.AudioReverbZone::set_decayHFRatio", "UnityEngine.AudioReverbZone::get_reflections", "UnityEngine.AudioReverbZone::set_reflections", "UnityEngine.AudioReverbZone::get_reflectionsDelay", "UnityEngine.AudioReverbZone::set_reflectionsDelay", "UnityEngine.AudioReverbZone::get_reverb", "UnityEngine.AudioReverbZone::set_reverb", "UnityEngine.AudioReverbZone::get_reverbDelay", "UnityEngine.AudioReverbZone::set_reverbDelay", "UnityEngine.AudioReverbZone::get_HFReference", "UnityEngine.AudioReverbZone::set_HFReference", "UnityEngine.AudioReverbZone::get_LFReference", "UnityEngine.AudioReverbZone::set_LFReference", "UnityEngine.AudioReverbZone::get_roomRolloffFactor", "UnityEngine.AudioReverbZone::set_roomRolloffFactor", "UnityEngine.AudioReverbZone::get_diffusion", "UnityEngine.AudioReverbZone::set_diffusion", "UnityEngine.AudioReverbZone::get_density", "UnityEngine.AudioReverbZone::set_density", "UnityEngine.AudioLowPassFilter::get_cutoffFrequency", "UnityEngine.AudioLowPassFilter::set_cutoffFrequency", "UnityEngine.AudioLowPassFilter::get_customCutoffCurve", "UnityEngine.AudioLowPassFilter::set_customCutoffCurve", "UnityEngine.AudioLowPassFilter::get_lowpassResonanceQ", "UnityEngine.AudioLowPassFilter::set_lowpassResonanceQ", "UnityEngine.AudioHighPassFilter::get_cutoffFrequency", "UnityEngine.AudioHighPassFilter::set_cutoffFrequency", "UnityEngine.AudioHighPassFilter::get_highpassResonanceQ", "UnityEngine.AudioHighPassFilter::set_highpassResonanceQ", "UnityEngine.AudioDistortionFilter::get_distortionLevel", "UnityEngine.AudioDistortionFilter::set_distortionLevel", "UnityEngine.AudioEchoFilter::get_delay", "UnityEngine.AudioEchoFilter::set_delay", "UnityEngine.AudioEchoFilter::get_decayRatio", "UnityEngine.AudioEchoFilter::set_decayRatio", "UnityEngine.AudioEchoFilter::get_dryMix", "UnityEngine.AudioEchoFilter::set_dryMix", "UnityEngine.AudioEchoFilter::get_wetMix", "UnityEngine.AudioEchoFilter::set_wetMix", "UnityEngine.AudioChorusFilter::get_dryMix", "UnityEngine.AudioChorusFilter::set_dryMix", "UnityEngine.AudioChorusFilter::get_wetMix1", "UnityEngine.AudioChorusFilter::set_wetMix1", "UnityEngine.AudioChorusFilter::get_wetMix2", "UnityEngine.AudioChorusFilter::set_wetMix2", "UnityEngine.AudioChorusFilter::get_wetMix3", "UnityEngine.AudioChorusFilter::set_wetMix3", "UnityEngine.AudioChorusFilter::get_delay", "UnityEngine.AudioChorusFilter::set_delay", "UnityEngine.AudioChorusFilter::get_rate", "UnityEngine.AudioChorusFilter::set_rate", "UnityEngine.AudioChorusFilter::get_depth", "UnityEngine.AudioChorusFilter::set_depth", "UnityEngine.AudioChorusFilter::get_feedback", "UnityEngine.AudioChorusFilter::set_feedback", "UnityEngine.AudioReverbFilter::get_reverbPreset", "UnityEngine.AudioReverbFilter::set_reverbPreset", "UnityEngine.AudioReverbFilter::get_dryLevel", "UnityEngine.AudioReverbFilter::set_dryLevel", "UnityEngine.AudioReverbFilter::get_room", "UnityEngine.AudioReverbFilter::set_room", "UnityEngine.AudioReverbFilter::get_roomHF", "UnityEngine.AudioReverbFilter::set_roomHF", "UnityEngine.AudioReverbFilter::get_roomRolloff", "UnityEngine.AudioReverbFilter::set_roomRolloff", "UnityEngine.AudioReverbFilter::get_decayTime", "UnityEngine.AudioReverbFilter::set_decayTime", "UnityEngine.AudioReverbFilter::get_decayHFRatio", "UnityEngine.AudioReverbFilter::set_decayHFRatio", "UnityEngine.AudioReverbFilter::get_reflectionsLevel", "UnityEngine.AudioReverbFilter::set_reflectionsLevel", "UnityEngine.AudioReverbFilter::get_reflectionsDelay", "UnityEngine.AudioReverbFilter::set_reflectionsDelay", "UnityEngine.AudioReverbFilter::get_reverbLevel", "UnityEngine.AudioReverbFilter::set_reverbLevel", "UnityEngine.AudioReverbFilter::get_reverbDelay", "UnityEngine.AudioReverbFilter::set_reverbDelay", "UnityEngine.AudioReverbFilter::get_diffusion", "UnityEngine.AudioReverbFilter::set_diffusion", "UnityEngine.AudioReverbFilter::get_density", "UnityEngine.AudioReverbFilter::set_density", "UnityEngine.AudioReverbFilter::get_hfReference", "UnityEngine.AudioReverbFilter::set_hfReference", "UnityEngine.AudioReverbFilter::get_roomLF", "UnityEngine.AudioReverbFilter::set_roomLF", "UnityEngine.AudioReverbFilter::get_lfReference", "UnityEngine.AudioReverbFilter::set_lfReference", "UnityEngine.Microphone::Start", "UnityEngine.Microphone::End", "UnityEngine.Microphone::get_devices", "UnityEngine.Microphone::IsRecording", "UnityEngine.Microphone::GetPosition", "UnityEngine.Microphone::GetDeviceCaps", "%s(%d) : Error executing %s (%s)", "Tried to call lock a second time before unlock was called. ", "Tried to call a function on a data type that does not allow this type of functionality (ie calling Sound::lock on a streaming sound). ", "Neither NTSCSI nor ASPI could be initialised. ", "An error occurred while initialising the CDDA subsystem. ", "Couldn't find the specified device. ", "No audio tracks on the specified disc. ", "No CD/DVD devices were found. ", "No disc present in the specified drive. ", "A CDDA read error occurred. ", "Error trying to allocate a channel. ", "The specified channel has been reused to play another sound. ", "A Win32 COM related error occured. COM failed to initialize or a QueryInterface failed meaning a Windows codec or driver was not installed properly. ", "DMA Failure.  See debug output for more information. ", "DSP connection error.  Connection possibly caused a cyclic dependancy.  Or tried to connect a tree too many units deep (more than 128). ", "DSP Format error.  A DSP unit may have attempted to connect to this network with the wrong format. ", "DSP connection error.  Couldn't find the DSP unit specified. ", "DSP error.  Cannot perform this operation while the network is in the middle of running.  This will most likely happen if a connection or disconnection is attempted in a DSP callback. ", "DSP connection error.  The unit being connected to or disconnected should only have 1 input or output. ", "The specified project or bank has already been loaded. Having multiple copies of the same project loaded simultaneously is forbidden. ", "An Event failed to be retrieved, most likely due to 'just fail' being specified as the max playbacks behavior. ", "An event with the same GUID already exists. ", "Can't execute this command on an EVENT_INFOONLY event. ", "An error occured that wasn't supposed to.  See debug log for reason. ", "Event failed because 'Max streams' was hit when FMOD_EVENT_INIT_FAIL_ON_MAXSTREAMS was specified. ", "FSB mismatches the FEV it was compiled with, the stream/sample mode it was meant to be created with was different, or the FEV was built for a different platform. ", "A category with the same name already exists. ", "Tried to call a function on a complex event that's only supported by simple events. ", "The requested event, event group, event category or event property could not be found. ", "Error loading file. ", "Couldn't perform seek operation.  This is a limitation of the medium (ie netstreams) or the file format. ", "Media was ejected while reading. ", "End of file unexpectedly reached while trying to read essential data (truncated data?). ", "File not found. ", "Unwanted file access occured. ", "Unsupported file or audio format. ", "A HTTP error occurred. This is a catch-all for HTTP errors not listed elsewhere. ", "The specified resource requires authentication or is forbidden. ", "Proxy authentication is required to access the specified resource. ", "A HTTP server error occurred. ", "The HTTP request timed out. ", "FMOD was not initialized correctly to support this function. ", "Cannot call this command after System::init. ", "An error occured that wasn't supposed to.  Contact support. ", "On Xbox 360, this memory address passed to FMOD must be physical, (ie allocated with XPhysicalAlloc.) ", "Value passed in was a NaN, Inf or denormalized float. ", "An invalid object handle was used. ", "An invalid parameter was passed to this function. ", "An invalid seek position was passed to this function. ", "An invalid speaker was passed to this function based on the current speaker mode. ", "The syncpoint did not come from this sound handle. ", "The vectors passed in are not unit length, or perpendicular. ", "Reached maximum audible playback count for this sound's soundgroup. ", "Not enough memory or resources. ", "Can't use FMOD_OPENMEMORY_POINT on non PCM source data, or non mp3/xma/adpcm data if FMOD_CREATECOMPRESSEDSAMPLE was used. ", "Not enough memory or resources on console sound ram. ", "The music callback is required, but it has not been set. ", "The requested music entity could not be found. ", "Music system is not initialized probably because no music data is loaded. ", "Tried to call a command on a 3d sound when the command was meant for 2d sound. ", "Tried to call a command on a 2d sound when the command was meant for 3d sound. ", "Tried to use a feature that requires hardware support.  (ie trying to play a GCADPCM compressed sound in software on Wii). ", "Tried to use a feature that requires the software engine.  Software engine has either been turned off, or command was executed on a hardware channel which does not support this feature. ", "Couldn't connect to the specified host. ", "A socket error occurred.  This is a catch-all for socket-related errors not listed elsewhere. ", "The specified URL couldn't be resolved. ", "Operation on a non-blocking socket could not complete immediately. ", "Operation could not be performed because specified sound/DSP connection is not ready. ", "Error initializing output device, but more specifically, the output device is already in use and cannot be reused. ", "Error creating hardware sound buffer. ", "A call to a standard soundcard driver failed, which could possibly mean a bug in the driver or resources were missing or exhausted. ", "Error enumerating the available driver list. List may be inconsistent due to a recent device addition or removal. ", "Soundcard does not support the minimum features needed for this soundsystem (16bit stereo output). ", "Error initializing output device. ", "FMOD_HARDWARE was specified but the sound card does not have the resources necessary to play it. ", "Attempted to create a software sound but no software channels were specified in System::init. ", "Panning only works with mono or stereo sound sources. ", "An unspecified error has been returned from a 3rd party plugin. ", "The number of allowed instances of a plugin has been exceeded. ", "A requested output, dsp unit type or codec was not available. ", "A resource that the plugin requires cannot be found. (ie the DLS file for MIDI playback) ", "The specified sound is still in use by the event system, call EventSystem::unloadFSB before trying to release it. ", "The specified sound is still in use by the event system, wait for the event which is using it finish with it. ", "An error occured trying to initialize the recording device. ", "Specified instance in FMOD_REVERB_PROPERTIES couldn't be set. Most likely because it is an invalid instance number or the reverb doesnt exist. ", "The error occured because the sound referenced contains subsounds when it shouldn't have, or it doesn't contain subsounds when it should have.  The operation may also not be able to be performed on a parent sound, or a parent sound was played without setting up a sentence first. ", "This subsound is already being used by another sound, you cannot have more than one parent to a sound.  Null out the other parent's entry first. ", "Shared subsounds cannot be replaced or moved from their parent stream, such as when the parent stream is an FSB file. ", "The subsound's mode bits do not match with the parent sound's mode bits.  See documentation for function that it was called with. ", "The specified tag could not be found or there are no tags. ", "The sound created exceeds the allowable input channel count.  This can be increased using the maxinputchannels parameter in System::setSoftwareFormat. ", "Something in FMOD hasn't been implemented when it should be! contact support! ", "This command failed because System::init or System::setDriver was not called. ", "A command issued was not supported by this object.  Possibly a plugin without certain callbacks specified. ", "An error caused by System::update occured. ", "The version number of this file format is not supported. ", "No errors.", "Unknown error.", "UnityEngine.OffMeshLinkData::GetOffMeshLinkInternal", "UnityEngine.OffMeshLink::get_activated", "UnityEngine.OffMeshLink::set_activated", "UnityEngine.OffMeshLink::get_occupied", "UnityEngine.OffMeshLink::get_costOverride", "UnityEngine.OffMeshLink::set_costOverride", "UnityEngine.OffMeshLink::get_biDirectional", "UnityEngine.OffMeshLink::set_biDirectional", "UnityEngine.OffMeshLink::UpdatePositions", "UnityEngine.OffMeshLink::get_navMeshLayer", "UnityEngine.OffMeshLink::set_navMeshLayer", "UnityEngine.OffMeshLink::get_area", "UnityEngine.OffMeshLink::set_area", "UnityEngine.OffMeshLink::get_autoUpdatePositions", "UnityEngine.OffMeshLink::set_autoUpdatePositions", "UnityEngine.OffMeshLink::get_startTransform", "UnityEngine.OffMeshLink::set_startTransform", "UnityEngine.OffMeshLink::get_endTransform", "UnityEngine.OffMeshLink::set_endTransform", "UnityEngine.NavMeshPath::.ctor", "UnityEngine.NavMeshPath::DestroyNavMeshPath", "UnityEngine.NavMeshPath::GetCornersNonAlloc", "UnityEngine.NavMeshPath::CalculateCornersInternal", "UnityEngine.NavMeshPath::ClearCornersInternal", "UnityEngine.NavMeshPath::get_status", "UnityEngine.NavMeshObstacle::get_height", "UnityEngine.NavMeshObstacle::set_height", "UnityEngine.NavMeshObstacle::get_radius", "UnityEngine.NavMeshObstacle::set_radius", "UnityEngine.NavMeshObstacle::INTERNAL_get_velocity", "UnityEngine.NavMeshObstacle::INTERNAL_set_velocity", "UnityEngine.NavMeshObstacle::get_carving", "UnityEngine.NavMeshObstacle::set_carving", "UnityEngine.NavMeshObstacle::get_carveOnlyStationary", "UnityEngine.NavMeshObstacle::set_carveOnlyStationary", "UnityEngine.NavMeshObstacle::get_carvingMoveThreshold", "UnityEngine.NavMeshObstacle::set_carvingMoveThreshold", "UnityEngine.NavMeshObstacle::get_carvingTimeToStationary", "UnityEngine.NavMeshObstacle::set_carvingTimeToStationary", "UnityEngine.NavMeshObstacle::get_shape", "UnityEngine.NavMeshObstacle::set_shape", "UnityEngine.NavMeshObstacle::INTERNAL_get_center", "UnityEngine.NavMeshObstacle::INTERNAL_set_center", "UnityEngine.NavMeshObstacle::INTERNAL_get_size", "UnityEngine.NavMeshObstacle::INTERNAL_set_size", "UnityEngine.NavMeshObstacle::FitExtents", "UnityEngine.NavMesh::INTERNAL_CALL_Raycast", "UnityEngine.NavMesh::INTERNAL_CALL_CalculatePathInternal", "UnityEngine.NavMesh::INTERNAL_CALL_FindClosestEdge", "UnityEngine.NavMesh::INTERNAL_CALL_SamplePosition", "UnityEngine.NavMesh::SetLayerCost", "UnityEngine.NavMesh::GetLayerCost", "UnityEngine.NavMesh::GetNavMeshLayerFromName", "UnityEngine.NavMesh::SetAreaCost", "UnityEngine.NavMesh::GetAreaCost", "UnityEngine.NavMesh::GetAreaFromName", "UnityEngine.NavMesh::TriangulateInternal", "UnityEngine.NavMesh::Triangulate", "UnityEngine.NavMesh::AddOffMeshLinks", "UnityEngine.NavMesh::RestoreNavMesh", "UnityEngine.NavMesh::SetAvoidancePredictionTime", "UnityEngine.NavMesh::GetAvoidancePredictionTime", "UnityEngine.NavMesh::SetPathfindingIterationsPerFrame", "UnityEngine.NavMesh::GetPathfindingIterationsPerFrame", "UnityEngine.NavMeshAgent::INTERNAL_CALL_SetDestination", "UnityEngine.NavMeshAgent::INTERNAL_get_destination", "UnityEngine.NavMeshAgent::INTERNAL_set_destination", "UnityEngine.NavMeshAgent::get_stoppingDistance", "UnityEngine.NavMeshAgent::set_stoppingDistance", "UnityEngine.NavMeshAgent::INTERNAL_get_velocity", "UnityEngine.NavMeshAgent::INTERNAL_set_velocity", "UnityEngine.NavMeshAgent::INTERNAL_get_nextPosition", "UnityEngine.NavMeshAgent::INTERNAL_set_nextPosition", "UnityEngine.NavMeshAgent::INTERNAL_get_steeringTarget", "UnityEngine.NavMeshAgent::INTERNAL_get_desiredVelocity", "UnityEngine.NavMeshAgent::get_remainingDistance", "UnityEngine.NavMeshAgent::get_baseOffset", "UnityEngine.NavMeshAgent::set_baseOffset", "UnityEngine.NavMeshAgent::get_isOnOffMeshLink", "UnityEngine.NavMeshAgent::ActivateCurrentOffMeshLink", "UnityEngine.NavMeshAgent::GetCurrentOffMeshLinkDataInternal", "UnityEngine.NavMeshAgent::GetNextOffMeshLinkDataInternal", "UnityEngine.NavMeshAgent::CompleteOffMeshLink", "UnityEngine.NavMeshAgent::get_autoTraverseOffMeshLink", "UnityEngine.NavMeshAgent::set_autoTraverseOffMeshLink", "UnityEngine.NavMeshAgent::get_autoBraking", "UnityEngine.NavMeshAgent::set_autoBraking", "UnityEngine.NavMeshAgent::get_autoRepath", "UnityEngine.NavMeshAgent::set_autoRepath", "UnityEngine.NavMeshAgent::get_hasPath", "UnityEngine.NavMeshAgent::get_pathPending", "UnityEngine.NavMeshAgent::get_isPathStale", "UnityEngine.NavMeshAgent::get_pathStatus", "UnityEngine.NavMeshAgent::INTERNAL_get_pathEndPosition", "UnityEngine.NavMeshAgent::INTERNAL_CALL_Warp", "UnityEngine.NavMeshAgent::INTERNAL_CALL_Move", "UnityEngine.NavMeshAgent::StopInternal", "UnityEngine.NavMeshAgent::Resume", "UnityEngine.NavMeshAgent::ResetPath", "UnityEngine.NavMeshAgent::SetPath", "UnityEngine.NavMeshAgent::CopyPathTo", "UnityEngine.NavMeshAgent::FindClosestEdge", "UnityEngine.NavMeshAgent::INTERNAL_CALL_Raycast", "UnityEngine.NavMeshAgent::INTERNAL_CALL_CalculatePathInternal", "UnityEngine.NavMeshAgent::SamplePathPosition", "UnityEngine.NavMeshAgent::SetLayerCost", "UnityEngine.NavMeshAgent::GetLayerCost", "UnityEngine.NavMeshAgent::SetAreaCost", "UnityEngine.NavMeshAgent::GetAreaCost", "UnityEngine.NavMeshAgent::get_walkableMask", "UnityEngine.NavMeshAgent::set_walkableMask", "UnityEngine.NavMeshAgent::get_areaMask", "UnityEngine.NavMeshAgent::set_areaMask", "UnityEngine.NavMeshAgent::get_speed", "UnityEngine.NavMeshAgent::set_speed", "UnityEngine.NavMeshAgent::get_angularSpeed", "UnityEngine.NavMeshAgent::set_angularSpeed", "UnityEngine.NavMeshAgent::get_acceleration", "UnityEngine.NavMeshAgent::set_acceleration", "UnityEngine.NavMeshAgent::get_updatePosition", "UnityEngine.NavMeshAgent::set_updatePosition", "UnityEngine.NavMeshAgent::get_updateRotation", "UnityEngine.NavMeshAgent::set_updateRotation", "UnityEngine.NavMeshAgent::get_radius", "UnityEngine.NavMeshAgent::set_radius", "UnityEngine.NavMeshAgent::get_height", "UnityEngine.NavMeshAgent::set_height", "UnityEngine.NavMeshAgent::get_obstacleAvoidanceType", "UnityEngine.NavMeshAgent::set_obstacleAvoidanceType", "UnityEngine.NavMeshAgent::get_avoidancePriority", "UnityEngine.NavMeshAgent::set_avoidancePriority", "UnityEngine.NavMeshAgent::get_isOnNavMesh", "UnityEngine.Physics2D::get_velocityIterations", "UnityEngine.Physics2D::set_velocityIterations", "UnityEngine.Physics2D::get_positionIterations", "UnityEngine.Physics2D::set_positionIterations", "UnityEngine.Physics2D::INTERNAL_get_gravity", "UnityEngine.Physics2D::INTERNAL_set_gravity", "UnityEngine.Physics2D::get_queriesHitTriggers", "UnityEngine.Physics2D::set_queriesHitTriggers", "UnityEngine.Physics2D::get_queriesStartInColliders", "UnityEngine.Physics2D::set_queriesStartInColliders", "UnityEngine.Physics2D::get_changeStopsCallbacks", "UnityEngine.Physics2D::set_changeStopsCallbacks", "UnityEngine.Physics2D::get_velocityThreshold", "UnityEngine.Physics2D::set_velocityThreshold", "UnityEngine.Physics2D::get_maxLinearCorrection", "UnityEngine.Physics2D::set_maxLinearCorrection", "UnityEngine.Physics2D::get_maxAngularCorrection", "UnityEngine.Physics2D::set_maxAngularCorrection", "UnityEngine.Physics2D::get_maxTranslationSpeed", "UnityEngine.Physics2D::set_maxTranslationSpeed", "UnityEngine.Physics2D::get_maxRotationSpeed", "UnityEngine.Physics2D::set_maxRotationSpeed", "UnityEngine.Physics2D::get_minPenetrationForPenalty", "UnityEngine.Physics2D::set_minPenetrationForPenalty", "UnityEngine.Physics2D::get_baumgarteScale", "UnityEngine.Physics2D::set_baumgarteScale", "UnityEngine.Physics2D::get_baumgarteTOIScale", "UnityEngine.Physics2D::set_baumgarteTOIScale", "UnityEngine.Physics2D::get_timeToSleep", "UnityEngine.Physics2D::set_timeToSleep", "UnityEngine.Physics2D::get_linearSleepTolerance", "UnityEngine.Physics2D::set_linearSleepTolerance", "UnityEngine.Physics2D::get_angularSleepTolerance", "UnityEngine.Physics2D::set_angularSleepTolerance", "UnityEngine.Physics2D::IgnoreCollision", "UnityEngine.Physics2D::GetIgnoreCollision", "UnityEngine.Physics2D::IgnoreLayerCollision", "UnityEngine.Physics2D::GetIgnoreLayerCollision", "UnityEngine.Physics2D::IsTouching", "UnityEngine.Physics2D::IsTouchingLayers", "UnityEngine.Physics2D::INTERNAL_CALL_Internal_Linecast", "UnityEngine.Physics2D::INTERNAL_CALL_LinecastAll", "UnityEngine.Physics2D::INTERNAL_CALL_LinecastNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_Internal_Raycast", "UnityEngine.Physics2D::INTERNAL_CALL_RaycastAll", "UnityEngine.Physics2D::INTERNAL_CALL_RaycastNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_Internal_CircleCast", "UnityEngine.Physics2D::INTERNAL_CALL_CircleCastAll", "UnityEngine.Physics2D::INTERNAL_CALL_CircleCastNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_Internal_BoxCast", "UnityEngine.Physics2D::INTERNAL_CALL_BoxCastAll", "UnityEngine.Physics2D::INTERNAL_CALL_BoxCastNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_Internal_GetRayIntersection", "UnityEngine.Physics2D::INTERNAL_CALL_GetRayIntersectionAll", "UnityEngine.Physics2D::INTERNAL_CALL_GetRayIntersectionNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapPoint", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapPointAll", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapPointNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapCircle", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapCircleAll", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapCircleNonAlloc", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapArea", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapAreaAll", "UnityEngine.Physics2D::INTERNAL_CALL_OverlapAreaNonAlloc", "UnityEngine.Rigidbody2D::INTERNAL_get_position", "UnityEngine.Rigidbody2D::INTERNAL_set_position", "UnityEngine.Rigidbody2D::get_rotation", "UnityEngine.Rigidbody2D::set_rotation", "UnityEngine.Rigidbody2D::INTERNAL_CALL_MovePosition", "UnityEngine.Rigidbody2D::INTERNAL_CALL_MoveRotation", "UnityEngine.Rigidbody2D::INTERNAL_get_velocity", "UnityEngine.Rigidbody2D::INTERNAL_set_velocity", "UnityEngine.Rigidbody2D::get_angularVelocity", "UnityEngine.Rigidbody2D::set_angularVelocity", "UnityEngine.Rigidbody2D::get_mass", "UnityEngine.Rigidbody2D::set_mass", "UnityEngine.Rigidbody2D::INTERNAL_get_centerOfMass", "UnityEngine.Rigidbody2D::INTERNAL_set_centerOfMass", "UnityEngine.Rigidbody2D::INTERNAL_get_worldCenterOfMass", "UnityEngine.Rigidbody2D::get_inertia", "UnityEngine.Rigidbody2D::set_inertia", "UnityEngine.Rigidbody2D::get_drag", "UnityEngine.Rigidbody2D::set_drag", "UnityEngine.Rigidbody2D::get_angularDrag", "UnityEngine.Rigidbody2D::set_angularDrag", "UnityEngine.Rigidbody2D::get_gravityScale", "UnityEngine.Rigidbody2D::set_gravityScale", "UnityEngine.Rigidbody2D::get_isKinematic", "UnityEngine.Rigidbody2D::set_isKinematic", "UnityEngine.Rigidbody2D::get_fixedAngle", "UnityEngine.Rigidbody2D::set_fixedAngle", "UnityEngine.Rigidbody2D::get_freezeRotation", "UnityEngine.Rigidbody2D::set_freezeRotation", "UnityEngine.Rigidbody2D::get_constraints", "UnityEngine.Rigidbody2D::set_constraints", "UnityEngine.Rigidbody2D::IsSleeping", "UnityEngine.Rigidbody2D::IsAwake", "UnityEngine.Rigidbody2D::Sleep", "UnityEngine.Rigidbody2D::WakeUp", "UnityEngine.Rigidbody2D::get_simulated", "UnityEngine.Rigidbody2D::set_simulated", "UnityEngine.Rigidbody2D::get_interpolation", "UnityEngine.Rigidbody2D::set_interpolation", "UnityEngine.Rigidbody2D::get_sleepMode", "UnityEngine.Rigidbody2D::set_sleepMode", "UnityEngine.Rigidbody2D::get_collisionDetectionMode", "UnityEngine.Rigidbody2D::set_collisionDetectionMode", "UnityEngine.Rigidbody2D::IsTouching", "UnityEngine.Rigidbody2D::IsTouchingLayers", "UnityEngine.Rigidbody2D::INTERNAL_CALL_AddForce", "UnityEngine.Rigidbody2D::INTERNAL_CALL_AddRelativeForce", "UnityEngine.Rigidbody2D::INTERNAL_CALL_AddForceAtPosition", "UnityEngine.Rigidbody2D::AddTorque", "UnityEngine.Rigidbody2D::INTERNAL_CALL_Rigidbody2D_CUSTOM_INTERNAL_GetPoint", "UnityEngine.Rigidbody2D::INTERNAL_CALL_Rigidbody2D_CUSTOM_INTERNAL_GetRelativePoint", "UnityEngine.Rigidbody2D::INTERNAL_CALL_Rigidbody2D_CUSTOM_INTERNAL_GetVector", "UnityEngine.Rigidbody2D::INTERNAL_CALL_Rigidbody2D_CUSTOM_INTERNAL_GetRelativeVector", "UnityEngine.Rigidbody2D::INTERNAL_CALL_Rigidbody2D_CUSTOM_INTERNAL_GetPointVelocity", "UnityEngine.Rigidbody2D::INTERNAL_CALL_Rigidbody2D_CUSTOM_INTERNAL_GetRelativePointVelocity", "UnityEngine.Collider2D::get_isTrigger", "UnityEngine.Collider2D::set_isTrigger", "UnityEngine.Collider2D::get_usedByEffector", "UnityEngine.Collider2D::set_usedByEffector", "UnityEngine.Collider2D::INTERNAL_get_offset", "UnityEngine.Collider2D::INTERNAL_set_offset", "UnityEngine.Collider2D::get_attachedRigidbody", "UnityEngine.Collider2D::get_shapeCount", "UnityEngine.Collider2D::INTERNAL_get_bounds", "UnityEngine.Collider2D::get_errorState", "UnityEngine.Collider2D::INTERNAL_CALL_OverlapPoint", "UnityEngine.Collider2D::get_sharedMaterial", "UnityEngine.Collider2D::set_sharedMaterial", "UnityEngine.Collider2D::IsTouching", "UnityEngine.Collider2D::IsTouchingLayers", "UnityEngine.CircleCollider2D::get_radius", "UnityEngine.CircleCollider2D::set_radius", "UnityEngine.BoxCollider2D::INTERNAL_get_size", "UnityEngine.BoxCollider2D::INTERNAL_set_size", "UnityEngine.EdgeCollider2D::Reset", "UnityEngine.EdgeCollider2D::get_edgeCount", "UnityEngine.EdgeCollider2D::get_pointCount", "UnityEngine.EdgeCollider2D::get_points", "UnityEngine.EdgeCollider2D::set_points", "UnityEngine.PolygonCollider2D::get_points", "UnityEngine.PolygonCollider2D::set_points", "UnityEngine.PolygonCollider2D::GetPath", "UnityEngine.PolygonCollider2D::SetPath", "UnityEngine.PolygonCollider2D::get_pathCount", "UnityEngine.PolygonCollider2D::set_pathCount", "UnityEngine.PolygonCollider2D::GetTotalPointCount", "UnityEngine.PolygonCollider2D::INTERNAL_CALL_CreatePrimitive", "UnityEngine.Joint2D::get_connectedBody", "UnityEngine.Joint2D::set_connectedBody", "UnityEngine.Joint2D::get_enableCollision", "UnityEngine.Joint2D::set_enableCollision", "UnityEngine.AnchoredJoint2D::INTERNAL_get_anchor", "UnityEngine.AnchoredJoint2D::INTERNAL_set_anchor", "UnityEngine.AnchoredJoint2D::INTERNAL_get_connectedAnchor", "UnityEngine.AnchoredJoint2D::INTERNAL_set_connectedAnchor", "UnityEngine.SpringJoint2D::get_distance", "UnityEngine.SpringJoint2D::set_distance", "UnityEngine.SpringJoint2D::get_dampingRatio", "UnityEngine.SpringJoint2D::set_dampingRatio", "UnityEngine.SpringJoint2D::get_frequency", "UnityEngine.SpringJoint2D::set_frequency", "UnityEngine.SpringJoint2D::SpringJoint2D_CUSTOM_INTERNAL_GetReactionForce", "UnityEngine.SpringJoint2D::INTERNAL_CALL_GetReactionTorque", "UnityEngine.DistanceJoint2D::get_distance", "UnityEngine.DistanceJoint2D::set_distance", "UnityEngine.DistanceJoint2D::get_maxDistanceOnly", "UnityEngine.DistanceJoint2D::set_maxDistanceOnly", "UnityEngine.DistanceJoint2D::DistanceJoint2D_CUSTOM_INTERNAL_GetReactionForce", "UnityEngine.DistanceJoint2D::INTERNAL_CALL_GetReactionTorque", "UnityEngine.HingeJoint2D::get_useMotor", "UnityEngine.HingeJoint2D::set_useMotor", "UnityEngine.HingeJoint2D::get_useLimits", "UnityEngine.HingeJoint2D::set_useLimits", "UnityEngine.HingeJoint2D::INTERNAL_get_motor", "UnityEngine.HingeJoint2D::INTERNAL_set_motor", "UnityEngine.HingeJoint2D::INTERNAL_get_limits", "UnityEngine.HingeJoint2D::INTERNAL_set_limits", "UnityEngine.HingeJoint2D::get_limitState", "UnityEngine.HingeJoint2D::get_referenceAngle", "UnityEngine.HingeJoint2D::get_jointAngle", "UnityEngine.HingeJoint2D::get_jointSpeed", "UnityEngine.HingeJoint2D::HingeJoint2D_CUSTOM_INTERNAL_GetReactionForce", "UnityEngine.HingeJoint2D::INTERNAL_CALL_GetReactionTorque", "UnityEngine.HingeJoint2D::INTERNAL_CALL_GetMotorTorque", "UnityEngine.SliderJoint2D::get_angle", "UnityEngine.SliderJoint2D::set_angle", "UnityEngine.SliderJoint2D::get_useMotor", "UnityEngine.SliderJoint2D::set_useMotor", "UnityEngine.SliderJoint2D::get_useLimits", "UnityEngine.SliderJoint2D::set_useLimits", "UnityEngine.SliderJoint2D::INTERNAL_get_motor", "UnityEngine.SliderJoint2D::INTERNAL_set_motor", "UnityEngine.SliderJoint2D::INTERNAL_get_limits", "UnityEngine.SliderJoint2D::INTERNAL_set_limits", "UnityEngine.SliderJoint2D::get_limitState", "UnityEngine.SliderJoint2D::get_referenceAngle", "UnityEngine.SliderJoint2D::get_jointTranslation", "UnityEngine.SliderJoint2D::get_jointSpeed", "UnityEngine.SliderJoint2D::INTERNAL_CALL_GetMotorForce", "UnityEngine.WheelJoint2D::INTERNAL_get_suspension", "UnityEngine.WheelJoint2D::INTERNAL_set_suspension", "UnityEngine.WheelJoint2D::get_useMotor", "UnityEngine.WheelJoint2D::set_useMotor", "UnityEngine.WheelJoint2D::INTERNAL_get_motor", "UnityEngine.WheelJoint2D::INTERNAL_set_motor", "UnityEngine.WheelJoint2D::get_jointTranslation", "UnityEngine.WheelJoint2D::get_jointSpeed", "UnityEngine.WheelJoint2D::INTERNAL_CALL_GetMotorTorque", "UnityEngine.PhysicsMaterial2D::Internal_Create", "UnityEngine.PhysicsMaterial2D::get_bounciness", "UnityEngine.PhysicsMaterial2D::set_bounciness", "UnityEngine.PhysicsMaterial2D::get_friction", "UnityEngine.PhysicsMaterial2D::set_friction", "UnityEngine.ConstantForce2D::INTERNAL_get_force", "UnityEngine.ConstantForce2D::INTERNAL_set_force", "UnityEngine.ConstantForce2D::INTERNAL_get_relativeForce", "UnityEngine.ConstantForce2D::INTERNAL_set_relativeForce", "UnityEngine.ConstantForce2D::get_torque", "UnityEngine.ConstantForce2D::set_torque", "UnityEngine.Effector2D::get_useColliderMask", "UnityEngine.Effector2D::set_useColliderMask", "UnityEngine.Effector2D::get_colliderMask", "UnityEngine.Effector2D::set_colliderMask", "UnityEngine.Effector2D::get_requiresCollider", "UnityEngine.Effector2D::get_designedForTrigger", "UnityEngine.Effector2D::get_designedForNonTrigger", "UnityEngine.AreaEffector2D::get_forceAngle", "UnityEngine.AreaEffector2D::set_forceAngle", "UnityEngine.AreaEffector2D::get_useGlobalAngle", "UnityEngine.AreaEffector2D::set_useGlobalAngle", "UnityEngine.AreaEffector2D::get_forceMagnitude", "UnityEngine.AreaEffector2D::set_forceMagnitude", "UnityEngine.AreaEffector2D::get_forceVariation", "UnityEngine.AreaEffector2D::set_forceVariation", "UnityEngine.AreaEffector2D::get_drag", "UnityEngine.AreaEffector2D::set_drag", "UnityEngine.AreaEffector2D::get_angularDrag", "UnityEngine.AreaEffector2D::set_angularDrag", "UnityEngine.AreaEffector2D::get_forceTarget", "UnityEngine.AreaEffector2D::set_forceTarget", "UnityEngine.PointEffector2D::get_forceMagnitude", "UnityEngine.PointEffector2D::set_forceMagnitude", "UnityEngine.PointEffector2D::get_forceVariation", "UnityEngine.PointEffector2D::set_forceVariation", "UnityEngine.PointEffector2D::get_distanceScale", "UnityEngine.PointEffector2D::set_distanceScale", "UnityEngine.PointEffector2D::get_drag", "UnityEngine.PointEffector2D::set_drag", "UnityEngine.PointEffector2D::get_angularDrag", "UnityEngine.PointEffector2D::set_angularDrag", "UnityEngine.PointEffector2D::get_forceSource", "UnityEngine.PointEffector2D::set_forceSource", "UnityEngine.PointEffector2D::get_forceTarget", "UnityEngine.PointEffector2D::set_forceTarget", "UnityEngine.PointEffector2D::get_forceMode", "UnityEngine.PointEffector2D::set_forceMode", "UnityEngine.PlatformEffector2D::get_useOneWay", "UnityEngine.PlatformEffector2D::set_useOneWay", "UnityEngine.PlatformEffector2D::get_useSideFriction", "UnityEngine.PlatformEffector2D::set_useSideFriction", "UnityEngine.PlatformEffector2D::get_useSideBounce", "UnityEngine.PlatformEffector2D::set_useSideBounce", "UnityEngine.PlatformEffector2D::get_surfaceArc", "UnityEngine.PlatformEffector2D::set_surfaceArc", "UnityEngine.SurfaceEffector2D::get_speed", "UnityEngine.SurfaceEffector2D::set_speed", "UnityEngine.SurfaceEffector2D::get_speedVariation", "UnityEngine.SurfaceEffector2D::set_speedVariation", "UnityEngine.SurfaceEffector2D::get_forceScale", "UnityEngine.SurfaceEffector2D::set_forceScale", "UnityEngine.SurfaceEffector2D::get_useContactForce", "UnityEngine.SurfaceEffector2D::set_useContactForce", "UnityEngine.SurfaceEffector2D::get_useFriction", "UnityEngine.SurfaceEffector2D::set_useFriction", "UnityEngine.SurfaceEffector2D::get_useBounce", "UnityEngine.SurfaceEffector2D::set_useBounce", "UnityEngine.Physics::INTERNAL_get_gravity", "UnityEngine.Physics::INTERNAL_set_gravity", "UnityEngine.Physics::get_minPenetrationForPenalty", "UnityEngine.Physics::set_minPenetrationForPenalty", "UnityEngine.Physics::get_defaultContactOffset", "UnityEngine.Physics::set_defaultContactOffset", "UnityEngine.Physics::get_bounceThreshold", "UnityEngine.Physics::set_bounceThreshold", "UnityEngine.Physics::get_sleepVelocity", "UnityEngine.Physics::set_sleepVelocity", "UnityEngine.Physics::get_sleepAngularVelocity", "UnityEngine.Physics::set_sleepAngularVelocity", "UnityEngine.Physics::get_maxAngularVelocity", "UnityEngine.Physics::set_maxAngularVelocity", "UnityEngine.Physics::get_solverIterationCount", "UnityEngine.Physics::set_solverIterationCount", "UnityEngine.Physics::get_sleepThreshold", "UnityEngine.Physics::set_sleepThreshold", "UnityEngine.Physics::get_queriesHitTriggers", "UnityEngine.Physics::set_queriesHitTriggers", "UnityEngine.Physics::INTERNAL_CALL_RaycastAll", "UnityEngine.Physics::INTERNAL_CALL_OverlapSphere", "UnityEngine.Physics::INTERNAL_CALL_CapsuleCastAll", "UnityEngine.Physics::INTERNAL_CALL_CheckSphere", "UnityEngine.Physics::INTERNAL_CALL_CheckCapsule", "UnityEngine.Physics::get_penetrationPenaltyForce", "UnityEngine.Physics::set_penetrationPenaltyForce", "UnityEngine.Physics::IgnoreCollision", "UnityEngine.Physics::IgnoreLayerCollision", "UnityEngine.Physics::GetIgnoreLayerCollision", "UnityEngine.Physics::INTERNAL_CALL_Internal_Raycast", "UnityEngine.Physics::INTERNAL_CALL_Internal_CapsuleCast", "UnityEngine.Physics::INTERNAL_CALL_Internal_RaycastTest", "UnityEngine.ContactPoint::ColliderFromInstanceId", "UnityEngine.Rigidbody::INTERNAL_get_velocity", "UnityEngine.Rigidbody::INTERNAL_set_velocity", "UnityEngine.Rigidbody::INTERNAL_get_angularVelocity", "UnityEngine.Rigidbody::INTERNAL_set_angularVelocity", "UnityEngine.Rigidbody::get_drag", "UnityEngine.Rigidbody::set_drag", "UnityEngine.Rigidbody::get_angularDrag", "UnityEngine.Rigidbody::set_angularDrag", "UnityEngine.Rigidbody::get_mass", "UnityEngine.Rigidbody::set_mass", "UnityEngine.Rigidbody::INTERNAL_CALL_SetDensity", "UnityEngine.Rigidbody::get_useGravity", "UnityEngine.Rigidbody::set_useGravity", "UnityEngine.Rigidbody::get_maxDepenetrationVelocity", "UnityEngine.Rigidbody::set_maxDepenetrationVelocity", "UnityEngine.Rigidbody::get_isKinematic", "UnityEngine.Rigidbody::set_isKinematic", "UnityEngine.Rigidbody::get_freezeRotation", "UnityEngine.Rigidbody::set_freezeRotation", "UnityEngine.Rigidbody::get_constraints", "UnityEngine.Rigidbody::set_constraints", "UnityEngine.Rigidbody::get_collisionDetectionMode", "UnityEngine.Rigidbody::set_collisionDetectionMode", "UnityEngine.Rigidbody::INTERNAL_CALL_AddForce", "UnityEngine.Rigidbody::INTERNAL_CALL_AddRelativeForce", "UnityEngine.Rigidbody::INTERNAL_CALL_AddTorque", "UnityEngine.Rigidbody::INTERNAL_CALL_AddRelativeTorque", "UnityEngine.Rigidbody::INTERNAL_CALL_AddForceAtPosition", "UnityEngine.Rigidbody::INTERNAL_CALL_AddExplosionForce", "UnityEngine.Rigidbody::INTERNAL_CALL_ClosestPointOnBounds", "UnityEngine.Rigidbody::INTERNAL_CALL_GetRelativePointVelocity", "UnityEngine.Rigidbody::INTERNAL_CALL_GetPointVelocity", "UnityEngine.Rigidbody::INTERNAL_get_centerOfMass", "UnityEngine.Rigidbody::INTERNAL_set_centerOfMass", "UnityEngine.Rigidbody::INTERNAL_get_worldCenterOfMass", "UnityEngine.Rigidbody::INTERNAL_get_inertiaTensorRotation", "UnityEngine.Rigidbody::INTERNAL_set_inertiaTensorRotation", "UnityEngine.Rigidbody::INTERNAL_get_inertiaTensor", "UnityEngine.Rigidbody::INTERNAL_set_inertiaTensor", "UnityEngine.Rigidbody::get_detectCollisions", "UnityEngine.Rigidbody::set_detectCollisions", "UnityEngine.Rigidbody::get_useConeFriction", "UnityEngine.Rigidbody::set_useConeFriction", "UnityEngine.Rigidbody::INTERNAL_get_position", "UnityEngine.Rigidbody::INTERNAL_set_position", "UnityEngine.Rigidbody::INTERNAL_get_rotation", "UnityEngine.Rigidbody::INTERNAL_set_rotation", "UnityEngine.Rigidbody::INTERNAL_CALL_MovePosition", "UnityEngine.Rigidbody::INTERNAL_CALL_MoveRotation", "UnityEngine.Rigidbody::get_interpolation", "UnityEngine.Rigidbody::set_interpolation", "UnityEngine.Rigidbody::INTERNAL_CALL_Sleep", "UnityEngine.Rigidbody::INTERNAL_CALL_IsSleeping", "UnityEngine.Rigidbody::INTERNAL_CALL_WakeUp", "UnityEngine.Rigidbody::get_solverIterationCount", "UnityEngine.Rigidbody::set_solverIterationCount", "UnityEngine.Rigidbody::get_sleepVelocity", "UnityEngine.Rigidbody::set_sleepVelocity", "UnityEngine.Rigidbody::get_sleepAngularVelocity", "UnityEngine.Rigidbody::set_sleepAngularVelocity", "UnityEngine.Rigidbody::get_sleepThreshold", "UnityEngine.Rigidbody::set_sleepThreshold", "UnityEngine.Rigidbody::get_maxAngularVelocity", "UnityEngine.Rigidbody::set_maxAngularVelocity", "UnityEngine.Rigidbody::INTERNAL_CALL_SweepTest", "UnityEngine.Rigidbody::INTERNAL_CALL_SweepTestAll", "UnityEngine.Joint::get_connectedBody", "UnityEngine.Joint::set_connectedBody", "UnityEngine.Joint::INTERNAL_get_axis", "UnityEngine.Joint::INTERNAL_set_axis", "UnityEngine.Joint::INTERNAL_get_anchor", "UnityEngine.Joint::INTERNAL_set_anchor", "UnityEngine.Joint::INTERNAL_get_connectedAnchor", "UnityEngine.Joint::INTERNAL_set_connectedAnchor", "UnityEngine.Joint::get_autoConfigureConnectedAnchor", "UnityEngine.Joint::set_autoConfigureConnectedAnchor", "UnityEngine.Joint::get_breakForce", "UnityEngine.Joint::set_breakForce", "UnityEngine.Joint::get_breakTorque", "UnityEngine.Joint::set_breakTorque", "UnityEngine.Joint::get_enableCollision", "UnityEngine.Joint::set_enableCollision", "UnityEngine.Joint::get_enablePreprocessing", "UnityEngine.Joint::set_enablePreprocessing", "UnityEngine.HingeJoint::INTERNAL_get_motor", "UnityEngine.HingeJoint::INTERNAL_set_motor", "UnityEngine.HingeJoint::INTERNAL_get_limits", "UnityEngine.HingeJoint::INTERNAL_set_limits", "UnityEngine.HingeJoint::INTERNAL_get_spring", "UnityEngine.HingeJoint::INTERNAL_set_spring", "UnityEngine.HingeJoint::get_useMotor", "UnityEngine.HingeJoint::set_useMotor", "UnityEngine.HingeJoint::get_useLimits", "UnityEngine.HingeJoint::set_useLimits", "UnityEngine.HingeJoint::get_useSpring", "UnityEngine.HingeJoint::set_useSpring", "UnityEngine.HingeJoint::get_velocity", "UnityEngine.HingeJoint::get_angle", "UnityEngine.SpringJoint::get_spring", "UnityEngine.SpringJoint::set_spring", "UnityEngine.SpringJoint::get_damper", "UnityEngine.SpringJoint::set_damper", "UnityEngine.SpringJoint::get_minDistance", "UnityEngine.SpringJoint::set_minDistance", "UnityEngine.SpringJoint::get_maxDistance", "UnityEngine.SpringJoint::set_maxDistance", "UnityEngine.CharacterJoint::INTERNAL_get_swingAxis", "UnityEngine.CharacterJoint::INTERNAL_set_swingAxis", "UnityEngine.CharacterJoint::INTERNAL_get_twistLimitSpring", "UnityEngine.CharacterJoint::INTERNAL_set_twistLimitSpring", "UnityEngine.CharacterJoint::INTERNAL_get_swingLimitSpring", "UnityEngine.CharacterJoint::INTERNAL_set_swingLimitSpring", "UnityEngine.CharacterJoint::INTERNAL_get_lowTwistLimit", "UnityEngine.CharacterJoint::INTERNAL_set_lowTwistLimit", "UnityEngine.CharacterJoint::INTERNAL_get_highTwistLimit", "UnityEngine.CharacterJoint::INTERNAL_set_highTwistLimit", "UnityEngine.CharacterJoint::INTERNAL_get_swing1Limit", "UnityEngine.CharacterJoint::INTERNAL_set_swing1Limit", "UnityEngine.CharacterJoint::INTERNAL_get_swing2Limit", "UnityEngine.CharacterJoint::INTERNAL_set_swing2Limit", "UnityEngine.CharacterJoint::get_enableProjection", "UnityEngine.CharacterJoint::set_enableProjection", "UnityEngine.CharacterJoint::get_projectionDistance", "UnityEngine.CharacterJoint::set_projectionDistance", "UnityEngine.CharacterJoint::get_projectionAngle", "UnityEngine.CharacterJoint::set_projectionAngle", "UnityEngine.ConfigurableJoint::INTERNAL_get_secondaryAxis", "UnityEngine.ConfigurableJoint::INTERNAL_set_secondaryAxis", "UnityEngine.ConfigurableJoint::get_xMotion", "UnityEngine.ConfigurableJoint::set_xMotion", "UnityEngine.ConfigurableJoint::get_yMotion", "UnityEngine.ConfigurableJoint::set_yMotion", "UnityEngine.ConfigurableJoint::get_zMotion", "UnityEngine.ConfigurableJoint::set_zMotion", "UnityEngine.ConfigurableJoint::get_angularXMotion", "UnityEngine.ConfigurableJoint::set_angularXMotion", "UnityEngine.ConfigurableJoint::get_angularYMotion", "UnityEngine.ConfigurableJoint::set_angularYMotion", "UnityEngine.ConfigurableJoint::get_angularZMotion", "UnityEngine.ConfigurableJoint::set_angularZMotion", "UnityEngine.ConfigurableJoint::INTERNAL_get_linearLimitSpring", "UnityEngine.ConfigurableJoint::INTERNAL_set_linearLimitSpring", "UnityEngine.ConfigurableJoint::INTERNAL_get_angularXLimitSpring", "UnityEngine.ConfigurableJoint::INTERNAL_set_angularXLimitSpring", "UnityEngine.ConfigurableJoint::INTERNAL_get_angularYZLimitSpring", "UnityEngine.ConfigurableJoint::INTERNAL_set_angularYZLimitSpring", "UnityEngine.ConfigurableJoint::INTERNAL_get_linearLimit", "UnityEngine.ConfigurableJoint::INTERNAL_set_linearLimit", "UnityEngine.ConfigurableJoint::INTERNAL_get_lowAngularXLimit", "UnityEngine.ConfigurableJoint::INTERNAL_set_lowAngularXLimit", "UnityEngine.ConfigurableJoint::INTERNAL_get_highAngularXLimit", "UnityEngine.ConfigurableJoint::INTERNAL_set_highAngularXLimit", "UnityEngine.ConfigurableJoint::INTERNAL_get_angularYLimit", "UnityEngine.ConfigurableJoint::INTERNAL_set_angularYLimit", "UnityEngine.ConfigurableJoint::INTERNAL_get_angularZLimit", "UnityEngine.ConfigurableJoint::INTERNAL_set_angularZLimit", "UnityEngine.ConfigurableJoint::INTERNAL_get_targetPosition", "UnityEngine.ConfigurableJoint::INTERNAL_set_targetPosition", "UnityEngine.ConfigurableJoint::INTERNAL_get_targetVelocity", "UnityEngine.ConfigurableJoint::INTERNAL_set_targetVelocity", "UnityEngine.ConfigurableJoint::INTERNAL_get_xDrive", "UnityEngine.ConfigurableJoint::INTERNAL_set_xDrive", "UnityEngine.ConfigurableJoint::INTERNAL_get_yDrive", "UnityEngine.ConfigurableJoint::INTERNAL_set_yDrive", "UnityEngine.ConfigurableJoint::INTERNAL_get_zDrive", "UnityEngine.ConfigurableJoint::INTERNAL_set_zDrive", "UnityEngine.ConfigurableJoint::INTERNAL_get_targetRotation", "UnityEngine.ConfigurableJoint::INTERNAL_set_targetRotation", "UnityEngine.ConfigurableJoint::INTERNAL_get_targetAngularVelocity", "UnityEngine.ConfigurableJoint::INTERNAL_set_targetAngularVelocity", "UnityEngine.ConfigurableJoint::get_rotationDriveMode", "UnityEngine.ConfigurableJoint::set_rotationDriveMode", "UnityEngine.ConfigurableJoint::INTERNAL_get_angularXDrive", "UnityEngine.ConfigurableJoint::INTERNAL_set_angularXDrive", "UnityEngine.ConfigurableJoint::INTERNAL_get_angularYZDrive", "UnityEngine.ConfigurableJoint::INTERNAL_set_angularYZDrive", "UnityEngine.ConfigurableJoint::INTERNAL_get_slerpDrive", "UnityEngine.ConfigurableJoint::INTERNAL_set_slerpDrive", "UnityEngine.ConfigurableJoint::get_projectionMode", "UnityEngine.ConfigurableJoint::set_projectionMode", "UnityEngine.ConfigurableJoint::get_projectionDistance", "UnityEngine.ConfigurableJoint::set_projectionDistance", "UnityEngine.ConfigurableJoint::get_projectionAngle", "UnityEngine.ConfigurableJoint::set_projectionAngle", "UnityEngine.ConfigurableJoint::get_configuredInWorldSpace", "UnityEngine.ConfigurableJoint::set_configuredInWorldSpace", "UnityEngine.ConfigurableJoint::get_swapBodies", "UnityEngine.ConfigurableJoint::set_swapBodies", "UnityEngine.ConstantForce::INTERNAL_get_force", "UnityEngine.ConstantForce::INTERNAL_set_force", "UnityEngine.ConstantForce::INTERNAL_get_relativeForce", "UnityEngine.ConstantForce::INTERNAL_set_relativeForce", "UnityEngine.ConstantForce::INTERNAL_get_torque", "UnityEngine.ConstantForce::INTERNAL_set_torque", "UnityEngine.ConstantForce::INTERNAL_get_relativeTorque", "UnityEngine.ConstantForce::INTERNAL_set_relativeTorque", "UnityEngine.Collider::get_enabled", "UnityEngine.Collider::set_enabled", "UnityEngine.Collider::get_attachedRigidbody", "UnityEngine.Collider::get_isTrigger", "UnityEngine.Collider::set_isTrigger", "UnityEngine.Collider::get_contactOffset", "UnityEngine.Collider::set_contactOffset", "UnityEngine.Collider::get_material", "UnityEngine.Collider::set_material", "UnityEngine.Collider::INTERNAL_CALL_ClosestPointOnBounds", "UnityEngine.Collider::get_sharedMaterial", "UnityEngine.Collider::set_sharedMaterial", "UnityEngine.Collider::INTERNAL_get_bounds", "UnityEngine.Collider::INTERNAL_CALL_Internal_Raycast", "UnityEngine.BoxCollider::INTERNAL_get_center", "UnityEngine.BoxCollider::INTERNAL_set_center", "UnityEngine.BoxCollider::INTERNAL_get_size", "UnityEngine.BoxCollider::INTERNAL_set_size", "UnityEngine.SphereCollider::INTERNAL_get_center", "UnityEngine.SphereCollider::INTERNAL_set_center", "UnityEngine.SphereCollider::get_radius", "UnityEngine.SphereCollider::set_radius", "UnityEngine.MeshCollider::get_sharedMesh", "UnityEngine.MeshCollider::set_sharedMesh", "UnityEngine.MeshCollider::get_convex", "UnityEngine.MeshCollider::set_convex", "UnityEngine.CapsuleCollider::INTERNAL_get_center", "UnityEngine.CapsuleCollider::INTERNAL_set_center", "UnityEngine.CapsuleCollider::get_radius", "UnityEngine.CapsuleCollider::set_radius", "UnityEngine.CapsuleCollider::get_height", "UnityEngine.CapsuleCollider::set_height", "UnityEngine.CapsuleCollider::get_direction", "UnityEngine.CapsuleCollider::set_direction", "UnityEngine.WheelCollider::INTERNAL_get_center", "UnityEngine.WheelCollider::INTERNAL_set_center", "UnityEngine.WheelCollider::get_radius", "UnityEngine.WheelCollider::set_radius", "UnityEngine.WheelCollider::get_suspensionDistance", "UnityEngine.WheelCollider::set_suspensionDistance", "UnityEngine.WheelCollider::INTERNAL_get_suspensionSpring", "UnityEngine.WheelCollider::INTERNAL_set_suspensionSpring", "UnityEngine.WheelCollider::get_forceAppPointDistance", "UnityEngine.WheelCollider::set_forceAppPointDistance", "UnityEngine.WheelCollider::get_mass", "UnityEngine.WheelCollider::set_mass", "UnityEngine.WheelCollider::get_wheelDampingRate", "UnityEngine.WheelCollider::set_wheelDampingRate", "UnityEngine.WheelCollider::INTERNAL_get_forwardFriction", "UnityEngine.WheelCollider::INTERNAL_set_forwardFriction", "UnityEngine.WheelCollider::INTERNAL_get_sidewaysFriction", "UnityEngine.WheelCollider::INTERNAL_set_sidewaysFriction", "UnityEngine.WheelCollider::get_motorTorque", "UnityEngine.WheelCollider::set_motorTorque", "UnityEngine.WheelCollider::get_brakeTorque", "UnityEngine.WheelCollider::set_brakeTorque", "UnityEngine.WheelCollider::get_steerAngle", "UnityEngine.WheelCollider::set_steerAngle", "UnityEngine.WheelCollider::get_isGrounded", "UnityEngine.WheelCollider::ConfigureVehicleSubsteps", "UnityEngine.WheelCollider::get_sprungMass", "UnityEngine.WheelCollider::GetGroundHit", "UnityEngine.WheelCollider::GetWorldPose", "UnityEngine.WheelCollider::get_rpm", "UnityEngine.RaycastHit::INTERNAL_CALL_CalculateRaycastTexCoord", "UnityEngine.PhysicMaterial::Internal_CreateDynamicsMaterial", "UnityEngine.PhysicMaterial::get_dynamicFriction", "UnityEngine.PhysicMaterial::set_dynamicFriction", "UnityEngine.PhysicMaterial::get_staticFriction", "UnityEngine.PhysicMaterial::set_staticFriction", "UnityEngine.PhysicMaterial::get_bounciness", "UnityEngine.PhysicMaterial::set_bounciness", "UnityEngine.PhysicMaterial::get_dynamicFriction2", "UnityEngine.PhysicMaterial::set_dynamicFriction2", "UnityEngine.PhysicMaterial::get_staticFriction2", "UnityEngine.PhysicMaterial::set_staticFriction2", "UnityEngine.PhysicMaterial::get_frictionCombine", "UnityEngine.PhysicMaterial::set_frictionCombine", "UnityEngine.PhysicMaterial::get_bounceCombine", "UnityEngine.PhysicMaterial::set_bounceCombine", "UnityEngine.CharacterController::INTERNAL_CALL_SimpleMove", "UnityEngine.CharacterController::INTERNAL_CALL_Move", "UnityEngine.CharacterController::get_isGrounded", "UnityEngine.CharacterController::INTERNAL_get_velocity", "UnityEngine.CharacterController::get_collisionFlags", "UnityEngine.CharacterController::get_radius", "UnityEngine.CharacterController::set_radius", "UnityEngine.CharacterController::get_height", "UnityEngine.CharacterController::set_height", "UnityEngine.CharacterController::INTERNAL_get_center", "UnityEngine.CharacterController::INTERNAL_set_center", "UnityEngine.CharacterController::get_slopeLimit", "UnityEngine.CharacterController::set_slopeLimit", "UnityEngine.CharacterController::get_stepOffset", "UnityEngine.CharacterController::set_stepOffset", "UnityEngine.CharacterController::get_skinWidth", "UnityEngine.CharacterController::set_skinWidth", "UnityEngine.CharacterController::get_detectCollisions", "UnityEngine.CharacterController::set_detectCollisions", "UnityEngine.Cloth::get_sleepThreshold", "UnityEngine.Cloth::set_sleepThreshold", "UnityEngine.Cloth::get_bendingStiffness", "UnityEngine.Cloth::set_bendingStiffness", "UnityEngine.Cloth::get_stretchingStiffness", "UnityEngine.Cloth::set_stretchingStiffness", "UnityEngine.Cloth::get_damping", "UnityEngine.Cloth::set_damping", "UnityEngine.Cloth::INTERNAL_get_externalAcceleration", "UnityEngine.Cloth::INTERNAL_set_externalAcceleration", "UnityEngine.Cloth::INTERNAL_get_randomAcceleration", "UnityEngine.Cloth::INTERNAL_set_randomAcceleration", "UnityEngine.Cloth::get_useGravity", "UnityEngine.Cloth::set_useGravity", "UnityEngine.Cloth::get_selfCollision", "UnityEngine.Cloth::set_selfCollision", "UnityEngine.Cloth::get_enabled", "UnityEngine.Cloth::set_enabled", "UnityEngine.Cloth::get_vertices", "UnityEngine.Cloth::get_normals", "UnityEngine.Cloth::get_friction", "UnityEngine.Cloth::set_friction", "UnityEngine.Cloth::get_collisionMassScale", "UnityEngine.Cloth::set_collisionMassScale", "UnityEngine.Cloth::get_useContinuousCollision", "UnityEngine.Cloth::set_useContinuousCollision", "UnityEngine.Cloth::get_useVirtualParticles", "UnityEngine.Cloth::set_useVirtualParticles", "UnityEngine.Cloth::INTERNAL_CALL_ClearTransformMotion", "UnityEngine.Cloth::get_coefficients", "UnityEngine.Cloth::set_coefficients", "UnityEngine.Cloth::get_worldVelocityScale", "UnityEngine.Cloth::set_worldVelocityScale", "UnityEngine.Cloth::get_worldAccelerationScale", "UnityEngine.Cloth::set_worldAccelerationScale", "UnityEngine.Cloth::SetEnabledFading", "UnityEngine.Cloth::get_solverFrequency", "UnityEngine.Cloth::set_solverFrequency", "UnityEngine.Cloth::get_capsuleColliders", "UnityEngine.Cloth::set_capsuleColliders", "UnityEngine.Cloth::get_sphereColliders", "UnityEngine.Cloth::set_sphereColliders", "UnityEngine.ParticleEmitter::get_emit", "UnityEngine.ParticleEmitter::set_emit", "UnityEngine.ParticleEmitter::get_minSize", "UnityEngine.ParticleEmitter::set_minSize", "UnityEngine.ParticleEmitter::get_maxSize", "UnityEngine.ParticleEmitter::set_maxSize", "UnityEngine.ParticleEmitter::get_minEnergy", "UnityEngine.ParticleEmitter::set_minEnergy", "UnityEngine.ParticleEmitter::get_maxEnergy", "UnityEngine.ParticleEmitter::set_maxEnergy", "UnityEngine.ParticleEmitter::get_minEmission", "UnityEngine.ParticleEmitter::set_minEmission", "UnityEngine.ParticleEmitter::get_maxEmission", "UnityEngine.ParticleEmitter::set_maxEmission", "UnityEngine.ParticleEmitter::get_emitterVelocityScale", "UnityEngine.ParticleEmitter::set_emitterVelocityScale", "UnityEngine.ParticleEmitter::INTERNAL_get_worldVelocity", "UnityEngine.ParticleEmitter::INTERNAL_set_worldVelocity", "UnityEngine.ParticleEmitter::INTERNAL_get_localVelocity", "UnityEngine.ParticleEmitter::INTERNAL_set_localVelocity", "UnityEngine.ParticleEmitter::INTERNAL_get_rndVelocity", "UnityEngine.ParticleEmitter::INTERNAL_set_rndVelocity", "UnityEngine.ParticleEmitter::get_useWorldSpace", "UnityEngine.ParticleEmitter::set_useWorldSpace", "UnityEngine.ParticleEmitter::get_rndRotation", "UnityEngine.ParticleEmitter::set_rndRotation", "UnityEngine.ParticleEmitter::get_angularVelocity", "UnityEngine.ParticleEmitter::set_angularVelocity", "UnityEngine.ParticleEmitter::get_rndAngularVelocity", "UnityEngine.ParticleEmitter::set_rndAngularVelocity", "UnityEngine.ParticleEmitter::get_particles", "UnityEngine.ParticleEmitter::set_particles", "UnityEngine.ParticleEmitter::get_particleCount", "UnityEngine.ParticleEmitter::INTERNAL_CALL_ClearParticles", "UnityEngine.ParticleEmitter::Emit2", "UnityEngine.ParticleEmitter::Emit3", "UnityEngine.ParticleEmitter::Simulate", "UnityEngine.ParticleEmitter::get_enabled", "UnityEngine.ParticleEmitter::set_enabled", "UnityEngine.ParticleAnimator::get_doesAnimateColor", "UnityEngine.ParticleAnimator::set_doesAnimateColor", "UnityEngine.ParticleAnimator::INTERNAL_get_worldRotationAxis", "UnityEngine.ParticleAnimator::INTERNAL_set_worldRotationAxis", "UnityEngine.ParticleAnimator::INTERNAL_get_localRotationAxis", "UnityEngine.ParticleAnimator::INTERNAL_set_localRotationAxis", "UnityEngine.ParticleAnimator::get_sizeGrow", "UnityEngine.ParticleAnimator::set_sizeGrow", "UnityEngine.ParticleAnimator::INTERNAL_get_rndForce", "UnityEngine.ParticleAnimator::INTERNAL_set_rndForce", "UnityEngine.ParticleAnimator::INTERNAL_get_force", "UnityEngine.ParticleAnimator::INTERNAL_set_force", "UnityEngine.ParticleAnimator::get_damping", "UnityEngine.ParticleAnimator::set_damping", "UnityEngine.ParticleAnimator::get_autodestruct", "UnityEngine.ParticleAnimator::set_autodestruct", "UnityEngine.ParticleAnimator::get_colorAnimation", "UnityEngine.ParticleAnimator::set_colorAnimation", "UnityEngine.ParticleRenderer::get_particleRenderMode", "UnityEngine.ParticleRenderer::set_particleRenderMode", "UnityEngine.ParticleRenderer::get_lengthScale", "UnityEngine.ParticleRenderer::set_lengthScale", "UnityEngine.ParticleRenderer::get_velocityScale", "UnityEngine.ParticleRenderer::set_velocityScale", "UnityEngine.ParticleRenderer::get_cameraVelocityScale", "UnityEngine.ParticleRenderer::set_cameraVelocityScale", "UnityEngine.ParticleRenderer::get_maxParticleSize", "UnityEngine.ParticleRenderer::set_maxParticleSize", "UnityEngine.ParticleRenderer::get_uvAnimationXTile", "UnityEngine.ParticleRenderer::set_uvAnimationXTile", "UnityEngine.ParticleRenderer::get_uvAnimationYTile", "UnityEngine.ParticleRenderer::set_uvAnimationYTile", "UnityEngine.ParticleRenderer::get_uvAnimationCycles", "UnityEngine.ParticleRenderer::set_uvAnimationCycles", "UnityEngine.ParticleRenderer::get_uvTiles", "UnityEngine.ParticleRenderer::set_uvTiles", "UnityEngine.ParticleSystem::get_startDelay", "UnityEngine.ParticleSystem::set_startDelay", "UnityEngine.ParticleSystem::get_isPlaying", "UnityEngine.ParticleSystem::get_isStopped", "UnityEngine.ParticleSystem::get_isPaused", "UnityEngine.ParticleSystem::get_loop", "UnityEngine.ParticleSystem::set_loop", "UnityEngine.ParticleSystem::get_playOnAwake", "UnityEngine.ParticleSystem::set_playOnAwake", "UnityEngine.ParticleSystem::get_time", "UnityEngine.ParticleSystem::set_time", "UnityEngine.ParticleSystem::get_duration", "UnityEngine.ParticleSystem::get_playbackSpeed", "UnityEngine.ParticleSystem::set_playbackSpeed", "UnityEngine.ParticleSystem::get_particleCount", "UnityEngine.ParticleSystem::get_enableEmission", "UnityEngine.ParticleSystem::set_enableEmission", "UnityEngine.ParticleSystem::get_emissionRate", "UnityEngine.ParticleSystem::set_emissionRate", "UnityEngine.ParticleSystem::get_startSpeed", "UnityEngine.ParticleSystem::set_startSpeed", "UnityEngine.ParticleSystem::get_startSize", "UnityEngine.ParticleSystem::set_startSize", "UnityEngine.ParticleSystem::INTERNAL_get_startColor", "UnityEngine.ParticleSystem::INTERNAL_set_startColor", "UnityEngine.ParticleSystem::get_startRotation", "UnityEngine.ParticleSystem::set_startRotation", "UnityEngine.ParticleSystem::get_startLifetime", "UnityEngine.ParticleSystem::set_startLifetime", "UnityEngine.ParticleSystem::get_gravityModifier", "UnityEngine.ParticleSystem::set_gravityModifier", "UnityEngine.ParticleSystem::get_maxParticles", "UnityEngine.ParticleSystem::set_maxParticles", "UnityEngine.ParticleSystem::get_simulationSpace", "UnityEngine.ParticleSystem::set_simulationSpace", "UnityEngine.ParticleSystem::get_randomSeed", "UnityEngine.ParticleSystem::set_randomSeed", "UnityEngine.ParticleSystem::SetParticles", "UnityEngine.ParticleSystem::GetParticles", "UnityEngine.ParticleSystem::Internal_Simulate", "UnityEngine.ParticleSystem::Internal_Play", "UnityEngine.ParticleSystem::Internal_Stop", "UnityEngine.ParticleSystem::Internal_Pause", "UnityEngine.ParticleSystem::Internal_Clear", "UnityEngine.ParticleSystem::Internal_IsAlive", "UnityEngine.ParticleSystem::INTERNAL_CALL_Emit", "UnityEngine.ParticleSystem::Internal_Emit", "UnityEngine.ParticleSystemRenderer::get_renderMode", "UnityEngine.ParticleSystemRenderer::set_renderMode", "UnityEngine.ParticleSystemRenderer::get_lengthScale", "UnityEngine.ParticleSystemRenderer::set_lengthScale", "UnityEngine.ParticleSystemRenderer::get_velocityScale", "UnityEngine.ParticleSystemRenderer::set_velocityScale", "UnityEngine.ParticleSystemRenderer::get_cameraVelocityScale", "UnityEngine.ParticleSystemRenderer::set_cameraVelocityScale", "UnityEngine.ParticleSystemRenderer::get_maxParticleSize", "UnityEngine.ParticleSystemRenderer::set_maxParticleSize", "UnityEngine.ParticleSystemRenderer::get_mesh", "UnityEngine.ParticleSystemRenderer::set_mesh", "UnityEngine.ParticleCollisionEvent::InstanceIDToCollider", "UnityEngine.ParticleSystemExtensionsImpl::GetSafeCollisionEventSize", "UnityEngine.ParticleSystemExtensionsImpl::GetCollisionEvents", "Font.mat", "The results list cannot be null", "UnityEngine.GUIText::get_text", "UnityEngine.GUIText::set_text", "UnityEngine.GUIText::get_material", "UnityEngine.GUIText::set_material", "UnityEngine.GUIText::Internal_GetPixelOffset", "UnityEngine.GUIText::INTERNAL_CALL_Internal_SetPixelOffset", "UnityEngine.GUIText::get_font", "UnityEngine.GUIText::set_font", "UnityEngine.GUIText::get_alignment", "UnityEngine.GUIText::set_alignment", "UnityEngine.GUIText::get_anchor", "UnityEngine.GUIText::set_anchor", "UnityEngine.GUIText::get_lineSpacing", "UnityEngine.GUIText::set_lineSpacing", "UnityEngine.GUIText::get_tabSize", "UnityEngine.GUIText::set_tabSize", "UnityEngine.GUIText::get_fontSize", "UnityEngine.GUIText::set_fontSize", "UnityEngine.GUIText::get_fontStyle", "UnityEngine.GUIText::set_fontStyle", "UnityEngine.GUIText::get_richText", "UnityEngine.GUIText::set_richText", "UnityEngine.GUIText::INTERNAL_get_color", "UnityEngine.GUIText::INTERNAL_set_color", "UnityEngine.TextMesh::get_text", "UnityEngine.TextMesh::set_text", "UnityEngine.TextMesh::get_font", "UnityEngine.TextMesh::set_font", "UnityEngine.TextMesh::get_fontSize", "UnityEngine.TextMesh::set_fontSize", "UnityEngine.TextMesh::get_fontStyle", "UnityEngine.TextMesh::set_fontStyle", "UnityEngine.TextMesh::get_offsetZ", "UnityEngine.TextMesh::set_offsetZ", "UnityEngine.TextMesh::get_alignment", "UnityEngine.TextMesh::set_alignment", "UnityEngine.TextMesh::get_anchor", "UnityEngine.TextMesh::set_anchor", "UnityEngine.TextMesh::get_characterSize", "UnityEngine.TextMesh::set_characterSize", "UnityEngine.TextMesh::get_lineSpacing", "UnityEngine.TextMesh::set_lineSpacing", "UnityEngine.TextMesh::get_tabSize", "UnityEngine.TextMesh::set_tabSize", "UnityEngine.TextMesh::get_richText", "UnityEngine.TextMesh::set_richText", "UnityEngine.TextMesh::INTERNAL_get_color", "UnityEngine.TextMesh::INTERNAL_set_color", "UnityEngine.Font::GetOSInstalledFontNames", "UnityEngine.Font::Internal_CreateFont", "UnityEngine.Font::Internal_CreateDynamicFont", "UnityEngine.Font::get_material", "UnityEngine.Font::set_material", "UnityEngine.Font::HasCharacter", "UnityEngine.Font::get_fontNames", "UnityEngine.Font::set_fontNames", "UnityEngine.Font::get_characterInfo", "UnityEngine.Font::set_characterInfo", "UnityEngine.Font::RequestCharactersInTexture", "UnityEngine.Font::GetCharacterInfo", "UnityEngine.Font::get_dynamic", "UnityEngine.Font::get_ascent", "UnityEngine.Font::get_lineHeight", "UnityEngine.Font::get_fontSize", "UnityEngine.TextGenerator::Init", "UnityEngine.TextGenerator::Dispose_cpp", "UnityEngine.TextGenerator::INTERNAL_CALL_Populate_Internal_cpp", "UnityEngine.TextGenerator::INTERNAL_get_rectExtents", "UnityEngine.TextGenerator::get_vertexCount", "UnityEngine.TextGenerator::GetVerticesInternal", "UnityEngine.TextGenerator::GetVerticesArray", "UnityEngine.TextGenerator::get_characterCount", "UnityEngine.TextGenerator::GetCharactersInternal", "UnityEngine.TextGenerator::GetCharactersArray", "UnityEngine.TextGenerator::get_lineCount", "UnityEngine.TextGenerator::GetLinesInternal", "UnityEngine.TextGenerator::GetLinesArray", "UnityEngine.TextGenerator::get_fontSizeUsedForBestFit", "requested channel greater than channel size", "PacketSize is too small", "Unable to initialize CloudServiceHandler", "ProjectId is null", "sessionInfo is null", "serviceConfig is null", "eventData is null", "fileName is null", "url is null", "data is null", "UnityEngine.Cloud.Service.CloudService::InternalCreate", "UnityEngine.Cloud.Service.CloudService::InternalDestroy", "UnityEngine.Cloud.Service.CloudService::Initialize", "UnityEngine.Cloud.Service.CloudService::StartEventHandler", "UnityEngine.Cloud.Service.CloudService::PauseEventHandler", "UnityEngine.Cloud.Service.CloudService::StopEventHandler", "UnityEngine.Cloud.Service.CloudService::InternalStartEventDispatcher", "UnityEngine.Cloud.Service.CloudService::PauseEventDispatcher", "UnityEngine.Cloud.Service.CloudService::StopEventDispatcher", "UnityEngine.Cloud.Service.CloudService::ResetNetworkRetryIndex", "UnityEngine.Cloud.Service.CloudService::QueueEvent", "UnityEngine.Cloud.Service.CloudService::InternalSaveFileFromServer", "UnityEngine.Cloud.Service.CloudService::SaveFile", "UnityEngine.Cloud.Service.CloudService::RestoreFile", "UnityEngine.Cloud.Service.CloudService::get_serviceFolderName", "CloudServiceHandler has already been destroyed", "UnityEngine.VR.VRSettings::get_enabled", "UnityEngine.VR.VRSettings::set_enabled", "UnityEngine.VR.VRSettings::get_showDeviceView", "UnityEngine.VR.VRSettings::set_showDeviceView", "UnityEngine.VR.VRSettings::get_renderScale", "UnityEngine.VR.VRSettings::set_renderScale", "UnityEngine.VR.VRSettings::get_loadedDevice", "UnityEngine.VR.VRSettings::set_loadedDevice", "UnityEngine.VR.VRDevice::get_isPresent", "UnityEngine.VR.VRDevice::get_family", "UnityEngine.VR.VRDevice::get_model", "UnityEngine.VR.VRDevice::GetNativePtr", "UnityEngine.VR.InputTracking::GetLocalPosition", "UnityEngine.VR.InputTracking::GetLocalRotation", "UnityEngine.VR.InputTracking::Recenter", "UnityEngine.Analytics.UnityAnalyticsManager::get_enabled", "UnityEngine.Analytics.UnityAnalyticsManager::set_enabled", "UnityEngine.Analytics.UnityAnalyticsManager::get_initializeOnStartup", "UnityEngine.Analytics.UnityAnalyticsManager::set_initializeOnStartup", "UnityEngine.Analytics.UnityAnalyticsManager::get_testMode", "UnityEngine.Analytics.UnityAnalyticsManager::set_testMode", "UnityEngine.Analytics.UnityAnalyticsManager::get_testEventUrl", "UnityEngine.Analytics.UnityAnalyticsManager::set_testEventUrl", "UnityEngine.Analytics.UnityAnalyticsManager::get_testConfigUrl", "UnityEngine.Analytics.UnityAnalyticsManager::set_testConfigUrl", "UnityEngine.Analytics.UnityAnalyticsManager::get_unityAdsId", "UnityEngine.Analytics.UnityAnalyticsManager::get_unityAdsTrackingEnabled", "UnityEngine.Analytics.UnityAnalyticsManager::get_deviceUniqueIdentifier", "UnityEngine.Advertisements.UnityAdsManager::get_enabled", "UnityEngine.Advertisements.UnityAdsManager::set_enabled", "UnityEngine.Advertisements.UnityAdsManager::IsPlatformEnabled", "UnityEngine.Advertisements.UnityAdsManager::SetPlatformEnabled", "UnityEngine.Advertisements.UnityAdsManager::get_initializeOnStartup", "UnityEngine.Advertisements.UnityAdsManager::set_initializeOnStartup", "UnityEngine.Advertisements.UnityAdsManager::get_testMode", "UnityEngine.Advertisements.UnityAdsManager::set_testMode", "UnityEngine.Advertisements.UnityAdsManager::GetGameId", "UnityEngine.Advertisements.UnityAdsManager::SetGameId", "UnityEngine.Networking.ConnectionSimulatorConfig::.ctor", "UnityEngine.Networking.ConnectionSimulatorConfig::Dispose", "UnityEngine.Networking.ConnectionConfigInternal::InitWrapper", "UnityEngine.Networking.ConnectionConfigInternal::AddChannel", "UnityEngine.Networking.ConnectionConfigInternal::GetChannel", "UnityEngine.Networking.ConnectionConfigInternal::get_ChannelSize", "UnityEngine.Networking.ConnectionConfigInternal::InitPacketSize", "UnityEngine.Networking.ConnectionConfigInternal::InitFragmentSize", "UnityEngine.Networking.ConnectionConfigInternal::InitResendTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitDisconnectTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitConnectTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitMinUpdateTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitPingTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitReducedPingTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitAllCostTimeout", "UnityEngine.Networking.ConnectionConfigInternal::InitNetworkDropThreshold", "UnityEngine.Networking.ConnectionConfigInternal::InitOverflowDropThreshold", "UnityEngine.Networking.ConnectionConfigInternal::InitMaxConnectionAttempt", "UnityEngine.Networking.ConnectionConfigInternal::InitAckDelay", "UnityEngine.Networking.ConnectionConfigInternal::InitMaxCombinedReliableMessageSize", "UnityEngine.Networking.ConnectionConfigInternal::InitMaxCombinedReliableMessageCount", "UnityEngine.Networking.ConnectionConfigInternal::InitMaxSentMessageQueueSize", "UnityEngine.Networking.ConnectionConfigInternal::InitIsAcksLong", "UnityEngine.Networking.ConnectionConfigInternal::Dispose", "UnityEngine.Networking.HostTopologyInternal::InitWrapper", "UnityEngine.Networking.HostTopologyInternal::AddSpecialConnectionConfigWrapper", "UnityEngine.Networking.HostTopologyInternal::InitReceivedPoolSize", "UnityEngine.Networking.HostTopologyInternal::InitSentMessagePoolSize", "UnityEngine.Networking.HostTopologyInternal::InitMessagePoolSizeGrowthFactor", "UnityEngine.Networking.HostTopologyInternal::Dispose", "UnityEngine.Networking.GlobalConfigInternal::InitWrapper", "UnityEngine.Networking.GlobalConfigInternal::InitThreadAwakeTimeout", "UnityEngine.Networking.GlobalConfigInternal::InitReactorModel", "UnityEngine.Networking.GlobalConfigInternal::InitReactorMaximumReceivedMessages", "UnityEngine.Networking.GlobalConfigInternal::InitReactorMaximumSentMessages", "UnityEngine.Networking.GlobalConfigInternal::InitMaxPacketSize", "UnityEngine.Networking.GlobalConfigInternal::Dispose", "UnityEngine.Networking.NetworkTransport::InitWithNoParameters", "UnityEngine.Networking.NetworkTransport::InitWithParameters", "UnityEngine.Networking.NetworkTransport::Shutdown", "UnityEngine.Networking.NetworkTransport::GetAssetId", "UnityEngine.Networking.NetworkTransport::AddSceneId", "UnityEngine.Networking.NetworkTransport::GetNextSceneId", "UnityEngine.Networking.NetworkTransport::ConnectAsNetworkHost", "UnityEngine.Networking.NetworkTransport::DisconnectNetworkHost", "UnityEngine.Networking.NetworkTransport::ReceiveRelayEventFromHost", "UnityEngine.Networking.NetworkTransport::ConnectToNetworkPeer", "UnityEngine.Networking.NetworkTransport::GetCurrentIncomingMessageAmount", "UnityEngine.Networking.NetworkTransport::GetCurrentOutgoingMessageAmount", "UnityEngine.Networking.NetworkTransport::GetCurrentRtt", "UnityEngine.Networking.NetworkTransport::GetNetworkLostPacketNum", "UnityEngine.Networking.NetworkTransport::GetPacketSentRate", "UnityEngine.Networking.NetworkTransport::GetPacketReceivedRate", "UnityEngine.Networking.NetworkTransport::GetRemotePacketReceivedRate", "UnityEngine.Networking.NetworkTransport::GetNetIOTimeuS", "UnityEngine.Networking.NetworkTransport::GetConnectionInfo", "UnityEngine.Networking.NetworkTransport::GetNetworkTimestamp", "UnityEngine.Networking.NetworkTransport::GetRemoteDelayTimeMS", "UnityEngine.Networking.NetworkTransport::StartSendMulticast", "UnityEngine.Networking.NetworkTransport::SendMulticast", "UnityEngine.Networking.NetworkTransport::FinishSendMulticast", "UnityEngine.Networking.NetworkTransport::AddWsHostWrapper", "UnityEngine.Networking.NetworkTransport::AddWsHostWrapperWithoutIp", "UnityEngine.Networking.NetworkTransport::AddHostWrapper", "UnityEngine.Networking.NetworkTransport::AddHostWrapperWithoutIp", "UnityEngine.Networking.NetworkTransport::RemoveHost", "UnityEngine.Networking.NetworkTransport::get_IsStarted", "UnityEngine.Networking.NetworkTransport::Connect", "UnityEngine.Networking.NetworkTransport::Internal_ConnectEndPoint", "UnityEngine.Networking.NetworkTransport::ConnectWithSimulator", "UnityEngine.Networking.NetworkTransport::Disconnect", "UnityEngine.Networking.NetworkTransport::SendWrapper", "UnityEngine.Networking.NetworkTransport::Receive", "UnityEngine.Networking.NetworkTransport::ReceiveFromHost", "UnityEngine.Networking.NetworkTransport::SetPacketStat", "UnityEngine.Networking.NetworkTransport::StartBroadcastDiscovery", "UnityEngine.Networking.NetworkTransport::StopBroadcastDiscovery", "UnityEngine.Networking.NetworkTransport::IsBroadcastDiscoveryRunning", "UnityEngine.Networking.NetworkTransport::SetBroadcastCredentials", "UnityEngine.Networking.NetworkTransport::GetBroadcastConnectionInfo", "UnityEngine.Networking.NetworkTransport::GetBroadcastConnectionMessage", "UnityEngine.GUIUtility::Internal_GetPixelsPerPoint", "UnityEngine.GUIUtility::GetControlID", "UnityEngine.GUIUtility::INTERNAL_CALL_Internal_GetNextControlID2", "UnityEngine.GUIUtility::GetPermanentControlID", "UnityEngine.GUIUtility::Internal_GetHotControl", "UnityEngine.GUIUtility::Internal_SetHotControl", "UnityEngine.GUIUtility::UpdateUndoName", "UnityEngine.GUIUtility::get_keyboardControl", "UnityEngine.GUIUtility::set_keyboardControl", "UnityEngine.GUIUtility::SetDidGUIWindowsEatLastEvent", "UnityEngine.GUIUtility::get_systemCopyBuffer", "UnityEngine.GUIUtility::set_systemCopyBuffer", "UnityEngine.GUIUtility::Internal_GetDefaultSkin", "UnityEngine.GUIUtility::Internal_GetBuiltinSkin", "UnityEngine.GUIUtility::Internal_ExitGUI", "UnityEngine.GUIUtility::Internal_GetGUIDepth", "UnityEngine.GUIUtility::get_mouseUsed", "UnityEngine.GUIUtility::set_mouseUsed", "UnityEngine.GUIUtility::get_hasModalWindow", "UnityEngine.GUIUtility::get_textFieldInput", "UnityEngine.GUIUtility::set_textFieldInput", "UnityEngine.GUIClip::INTERNAL_CALL_Push", "UnityEngine.GUIClip::Pop", "UnityEngine.GUIClip::GetTopRect", "UnityEngine.GUIClip::get_enabled", "UnityEngine.GUIClip::INTERNAL_CALL_Unclip_Vector2", "UnityEngine.GUIClip::INTERNAL_get_topmostRect", "UnityEngine.GUIClip::INTERNAL_CALL_Unclip_Rect", "UnityEngine.GUIClip::INTERNAL_CALL_Clip_Vector2", "UnityEngine.GUIClip::INTERNAL_CALL_Internal_Clip_Rect", "UnityEngine.GUIClip::Reapply", "UnityEngine.GUIClip::GetMatrix", "UnityEngine.GUIClip::INTERNAL_CALL_SetMatrix", "UnityEngine.GUIClip::INTERNAL_get_visibleRect", "UnityEngine.GUIClip::Internal_GetAbsoluteMousePosition", "UnityEngine.GUIStyleState::Init", "UnityEngine.GUIStyleState::Cleanup", "UnityEngine.GUIStyleState::SetBackgroundInternal", "UnityEngine.GUIStyleState::GetBackgroundInternal", "UnityEngine.GUIStyleState::INTERNAL_get_textColor", "UnityEngine.GUIStyleState::INTERNAL_set_textColor", "UnityEngine.RectOffset::Init", "UnityEngine.RectOffset::Cleanup", "UnityEngine.RectOffset::get_left", "UnityEngine.RectOffset::set_left", "UnityEngine.RectOffset::get_right", "UnityEngine.RectOffset::set_right", "UnityEngine.RectOffset::get_top", "UnityEngine.RectOffset::set_top", "UnityEngine.RectOffset::get_bottom", "UnityEngine.RectOffset::set_bottom", "UnityEngine.RectOffset::get_horizontal", "UnityEngine.RectOffset::get_vertical", "UnityEngine.RectOffset::INTERNAL_CALL_Add", "UnityEngine.RectOffset::INTERNAL_CALL_Remove", "UnityEngine.GUIStyle::Init", "UnityEngine.GUIStyle::InitCopy", "UnityEngine.GUIStyle::Cleanup", "UnityEngine.GUIStyle::get_name", "UnityEngine.GUIStyle::set_name", "UnityEngine.GUIStyle::GetStyleStatePtr", "UnityEngine.GUIStyle::AssignStyleState", "UnityEngine.GUIStyle::GetRectOffsetPtr", "UnityEngine.GUIStyle::AssignRectOffset", "UnityEngine.GUIStyle::get_imagePosition", "UnityEngine.GUIStyle::set_imagePosition", "UnityEngine.GUIStyle::get_alignment", "UnityEngine.GUIStyle::set_alignment", "UnityEngine.GUIStyle::get_wordWrap", "UnityEngine.GUIStyle::set_wordWrap", "UnityEngine.GUIStyle::get_clipping", "UnityEngine.GUIStyle::set_clipping", "UnityEngine.GUIStyle::INTERNAL_get_contentOffset", "UnityEngine.GUIStyle::INTERNAL_set_contentOffset", "UnityEngine.GUIStyle::INTERNAL_get_Internal_clipOffset", "UnityEngine.GUIStyle::INTERNAL_set_Internal_clipOffset", "UnityEngine.GUIStyle::get_fixedWidth", "UnityEngine.GUIStyle::set_fixedWidth", "UnityEngine.GUIStyle::get_fixedHeight", "UnityEngine.GUIStyle::set_fixedHeight", "UnityEngine.GUIStyle::get_stretchWidth", "UnityEngine.GUIStyle::set_stretchWidth", "UnityEngine.GUIStyle::get_stretchHeight", "UnityEngine.GUIStyle::set_stretchHeight", "UnityEngine.GUIStyle::Internal_GetLineHeight", "UnityEngine.GUIStyle::SetFontInternal", "UnityEngine.GUIStyle::GetFontInternal", "UnityEngine.GUIStyle::get_fontSize", "UnityEngine.GUIStyle::set_fontSize", "UnityEngine.GUIStyle::get_fontStyle", "UnityEngine.GUIStyle::set_fontStyle", "UnityEngine.GUIStyle::get_richText", "UnityEngine.GUIStyle::set_richText", "UnityEngine.GUIStyle::Internal_Draw", "UnityEngine.GUIStyle::INTERNAL_CALL_Internal_Draw2", "UnityEngine.GUIStyle::INTERNAL_CALL_Internal_DrawPrefixLabel", "UnityEngine.GUIStyle::Internal_GetCursorFlashOffset", "UnityEngine.GUIStyle::INTERNAL_CALL_Internal_DrawCursor", "UnityEngine.GUIStyle::Internal_DrawWithTextSelection", "UnityEngine.GUIStyle::SetDefaultFont", "UnityEngine.GUIStyle::INTERNAL_CALL_Internal_GetCursorPixelPosition", "UnityEngine.GUIStyle::INTERNAL_CALL_Internal_GetCursorStringIndex", "UnityEngine.GUIStyle::Internal_GetNumCharactersThatFitWithinWidth", "UnityEngine.GUIStyle::Internal_CalcSize", "UnityEngine.GUIStyle::Internal_CalcHeight", "UnityEngine.GUIStyle::Internal_CalcMinMaxWidth", "UnityEngine.GUISettings::Internal_GetCursorFlashSpeed", "UnityEngine.GUILayoutUtility::Internal_GetWindowRect", "UnityEngine.GUILayoutUtility::INTERNAL_CALL_Internal_MoveWindow", "UnityEngine.GUILayoutUtility::GetWindowsBounds", "EllipsoidParticleEmitter", "MeshParticleEmitter", "ParticleAnimator", "Reading out of bounds particles", "You are assigning more than %d particles", "ParticleEmitter", "m_Emit", "minSize", "maxSize", "minEnergy", "maxEnergy", "minEmission", "maxEmission", "worldVelocity", "localVelocity", "rndVelocity", "emitterVelocityScale", "tangentVelocity", "angularVelocity", "rndAngularVelocity", "rndRotation", "Simulate in Worldspace?", "m_OneShot", "ParticleRenderer", "WorldParticleCollider", "m_BounceFactor", "m_CollisionEnergyLoss", "m_CollidesWith", "m_SendCollisionMessage", "m_MinKillVelocity", "m_StretchParticles", "UV Animation", "m_AnimatedTextureCount", "x Tile", "y Tile", "UVAnimation", "Does Animate Color?", "colorAnimation[0]", "colorAnimation[1]", "colorAnimation[2]", "colorAnimation[3]", "colorAnimation[4]", "worldRotationAxis", "localRotationAxis", "sizeGrow", "rndForce", "damping", "stopSimulation", "autodestruct", "m_InterpolateTriangles", "m_Systematic", "m_MinNormalVelocity", "m_MaxNormalVelocity", "m_Ellipsoid", "m_MinEmitterRange", "Collider2D", "BoxCollider2D", "CircleCollider2D", "EdgeCollider2D", "PolygonCollider2D", "m_Poly", "m_Points", "DistanceJoint2D", "HingeJoint2D", "Joint2D", "m_CollideConnected", "Cannot create 2D joint on '%s' as it connects to itself.\n", "AnchoredJoint2D", "PhysicsMaterial2D", "m_DeleteStopsCallbacks", "m_ChangeStopsCallbacks", "Failed IgnoreLayerCollision : layer numbers must be between 0 and %d", "Failed GetIgnoreLayerCollision : layer numbers must be between 0 and %d", "Rigidbody2D", "SliderJoint2D", "SpringJoint2D", "WheelJoint2D", "PhysicsUpdateBehaviour2D", "ConstantForce2D", "Effector2D", "AreaEffector2D", "m_ForceDirection", "m_ForceAngle", "PointEffector2D", "PlatformEffector2D", "m_OneWay", "m_UseOneWay", "m_SideFriction", "m_UseSideFriction", "m_SideBounce", "m_UseSideBounce", "SurfaceEffector2D", "m_UsedByEffector", "m_ConnectedRigidBody", "m_UseColliderMask", "m_ColliderMask", "m_Speed", "m_SpeedVariation", "m_ForceScale", "m_UseContactForce", "m_UseFriction", "m_UseBounce", "m_SurfaceArc", "m_ForceMagnitude", "m_ForceVariation", "m_DistanceScale", "m_ForceSource", "m_ForceTarget", "m_ForceMode", "m_UseGlobalAngle", "m_Suspension", "m_MotorSpeed", "m_MaximumMotorForce", "m_DampingRatio", "m_Frequency", "m_LocalAxis", "m_Angle", "JointMotor2D", "JointSuspension2D", "m_Distance", "m_TranslationLimits", "m_LowerTranslation", "m_UpperTranslation", "JointTranslationLimits2D", "m_LinearDrag", "m_GravityScale", "m_SleepingMode", "m_FixedAngle", "m_VelocityIterations", "m_PositionIterations", "m_VelocityThreshold", "m_MaxLinearCorrection", "m_MaxAngularCorrection", "m_MaxTranslationSpeed", "m_MaxRotationSpeed", "m_MinPenetrationForPenalty", "m_BaumgarteScale", "m_BaumgarteTimeOfImpactScale", "m_TimeToSleep", "m_LinearSleepTolerance", "m_AngularSleepTolerance", "m_RaycastsStartInColliders", "m_QueriesStartInColliders", "friction", "PPtr<Rigidbody2D>", "m_AngleLimits", "m_LowerAngle", "m_UpperAngle", "JointAngleLimits2D", "m_MaxDistanceOnly", "m_Paths", "Polygon2D", "PPtr<PhysicsMaterial2D>", "    b2FixtureDef fd;\n", "    fd.friction = %.15lef;\n", "    fd.restitution = %.15lef;\n", "    fd.density = %.15lef;\n", "    fd.isSensor = bool(%d);\n", "    fd.filter.categoryBits = uint16(%d);\n", "    fd.filter.maskBits = uint16(%d);\n", "    fd.filter.groupIndex = int16(%d);\n", "    b2CircleShape shape;\n", "    shape.m_radius = %.15lef;\n", "    shape.m_p.Set(%.15lef, %.15lef);\n", "    b2EdgeShape shape;\n", "    shape.m_vertex0.Set(%.15lef, %.15lef);\n", "    shape.m_vertex1.Set(%.15lef, %.15lef);\n", "    shape.m_vertex2.Set(%.15lef, %.15lef);\n", "    shape.m_vertex3.Set(%.15lef, %.15lef);\n", "    shape.m_hasVertex0 = bool(%d);\n", "    shape.m_hasVertex3 = bool(%d);\n", "    b2PolygonShape shape;\n", "    b2Vec2 vs[%d];\n", "    vs[%d].Set(%.15lef, %.15lef);\n", "    shape.Set(vs, %d);\n", "    b2ChainShape shape;\n", "    shape.CreateChain(vs, %d);\n", "    shape.m_prevVertex.Set(%.15lef, %.15lef);\n", "    shape.m_nextVertex.Set(%.15lef, %.15lef);\n", "    shape.m_hasPrevVertex = bool(%d);\n", "    shape.m_hasNextVertex = bool(%d);\n", "    fd.shape = &shape;\n", "    bodies[%d]->CreateFixture(&fd);\n", "  b2DistanceJointDef jd;\n", "  jd.bodyA = bodies[%d];\n", "  jd.bodyB = bodies[%d];\n", "  jd.collideConnected = bool(%d);\n", "  jd.localAnchorA.Set(%.15lef, %.15lef);\n", "  jd.localAnchorB.Set(%.15lef, %.15lef);\n", "  jd.length = %.15lef;\n", "  jd.frequencyHz = %.15lef;\n", "  jd.dampingRatio = %.15lef;\n", "  joints[%d] = m_world->CreateJoint(&jd);\n", "  b2FrictionJointDef jd;\n", "  jd.maxForce = %.15lef;\n", "  jd.maxTorque = %.15lef;\n", "  b2GearJointDef jd;\n", "  jd.joint1 = joints[%d];\n", "  jd.joint2 = joints[%d];\n", "  jd.ratio = %.15lef;\n", "  b2MotorJointDef jd;\n", "  jd.linearOffset.Set(%.15lef, %.15lef);\n", "  jd.angularOffset = %.15lef;\n", "  jd.correctionFactor = %.15lef;\n", "  b2PrismaticJointDef jd;\n", "  jd.localAxisA.Set(%.15lef, %.15lef);\n", "  jd.referenceAngle = %.15lef;\n", "  jd.enableLimit = bool(%d);\n", "  jd.lowerTranslation = %.15lef;\n", "  jd.upperTranslation = %.15lef;\n", "  jd.enableMotor = bool(%d);\n", "  jd.motorSpeed = %.15lef;\n", "  jd.maxMotorForce = %.15lef;\n", "  b2PulleyJointDef jd;\n", "  jd.groundAnchorA.Set(%.15lef, %.15lef);\n", "  jd.groundAnchorB.Set(%.15lef, %.15lef);\n", "  jd.lengthA = %.15lef;\n", "  jd.lengthB = %.15lef;\n", "  b2RevoluteJointDef jd;\n", "  jd.lowerAngle = %.15lef;\n", "  jd.upperAngle = %.15lef;\n", "  jd.maxMotorTorque = %.15lef;\n", "  b2RopeJointDef jd;\n", "  jd.maxLength = %.15lef;\n", "  b2WeldJointDef jd;\n", "  b2WheelJointDef jd;\n", "// Dump is not supported for this joint type.\n", "Mouse joint dumping is not supported.\n", "\"SetDestination\" can only be called on an active agent that has been placed on a NavMesh.", "Failed to create agent because there is no valid NavMesh", "Failed to create agent because it is not close enough to the NavMesh", "\"GetRemainingDistance\" can only be called on an active agent that has been placed on a NavMesh.", "\"CalculatePolygonPath\" can only be called on an active agent that has been placed on a NavMesh.", "\"SetPath\" can only be called on an active agent that has been placed on a NavMesh.", "\"ResetPath\" can only be called on an active agent that has been placed on a NavMesh.", "\"DistanceToEdge\" can only be called on an active agent that has been placed on a NavMesh.", "\"Raycast\" can only be called on an active agent that has been placed on a NavMesh.", "\"SamplePathPosition\" can only be called on an active agent that has been placed on a NavMesh.", "\"Move\" can only be called on an active agent that has been placed on a NavMesh.", "\"Stop\" can only be called on an active agent that has been placed on a NavMesh.", "\"Resume\" can only be called on an active agent that has been placed on a NavMesh.", "\"CompleteOffMeshLink\" can only be called on an active agent that has been placed on a NavMesh.", "\"SetAreaCost\" can only be called on an active agent that has been placed on a NavMesh.", "Area index out of bounds", "\"GetAreaCost\" can only be called on an active agent that has been placed on a NavMesh.", "NavMeshAgent", "Unknown NavMeshObstacle shape", "NavMeshObstacle", "OffMeshLink", "m_NavMeshLayer", "m_AreaIndex", "m_End", "m_CostOverride", "m_BiDirectional", "m_Activated", "m_AutoUpdatePositions", "m_Shape", "m_MoveThreshold", "m_Carve", "m_CarveOnlyStationary", "m_TimeToStationary", "m_Acceleration", "avoidancePriority", "m_AngularSpeed", "m_StoppingDistance", "m_AutoTraverseOffMeshLink", "m_AutoBraking", "m_AutoRepath", "m_BaseOffset", "m_WalkableMask", "m_ObstacleAvoidanceType", "The area name 'Default' is obsolete, please use 'Walkable' instead.", "Walkable", "Not Walkable", "Index out of bounds", "NavMeshData", "Loading additional NavMesh failed. NavMeshes must be baked using identical bake settings.", "Loading NavMesh failed - wrong format. Please rebake the NavMesh.", "Loading NavMesh failed - out of memory.", "Loading NavMesh tile #%i failed. Error code: %x", "Initialization", "Query allocation", "Height query allocation", "Crowd initialization", "NavMeshAgent and NavMeshObstacle components are active at the same time. This can lead to errorneous behavior.", "Creating NavMesh failed: '%s'", "Creating NavMesh failed", "NavMeshObsolete", "m_NavMeshData", "m_NavMesh", "NavMesh asset format has changed. Please rebake the NavMesh data.", "PPtr<NavMeshObsolete>", "PPtr<NavMeshData>", "m_NavMeshTiles", "m_NavMeshParams", "m_Heightmaps", "m_HeightMeshes", "m_OffMeshLinks", "m_LinkType", "m_Area", "m_LinkDirection", "m_Indices", "m_Bounds", "m_Nodes", "terrainData", "walkableHeight", "walkableRadius", "walkableClimb", "cellSize", "m_MeshData", "!dtNavMeshDataSwapEndian (&data[0], data.size ())", "!dtNavMeshHeaderSwapEndian (&data[0])", "AutoOffMeshLinkData", "HeightMeshBVNode", "HeightMeshData", "HeightmapData", "NavMeshParams", "NavMeshTileData", "areas", "cost", "NavMeshAreaData", "AudioBehaviour", "AudioChorusFilter", "Trying to call %s on non-legacy AudioClip!", "static FMOD_RESULT AudioClip::pcmread(FMOD_SOUND *, void *, unsigned int)", "static FMOD_RESULT AudioClip::ScriptPCMReadCallback(FMOD_SOUND *, void *, unsigned int)", "static FMOD_RESULT AudioClip::ScriptPCMSetPositionCallback(FMOD_SOUND *, int, unsigned int, FMOD_TIMEUNIT)", "Currently only clips that are not pre-loaded can be unloaded via UnloadAudioData().", "Dynamically unloading a sound that hasn't finished loading yet. If you see this message a lot, some scripts may be doing too many dynamic load/unload operations which will negatively affect performance.", "./Runtime/Audio/AudioClip.cpp", "channel->setDelay (FMOD_DELAYTYPE_DSPCLOCK_START, Unity_HiWord(startTime), Unity_LoWord(startTime))", "At present background loading of tracked music files is not supported and will therefore block the system. Consider changing the load type of the AudioClip such that it is loaded when the scene is initialized.", "SampleClip", "Unable to determine the audio type from the URL (%s) . Please specify the type.", "Tracker files (XM/IT/MOD/S3M) cannot be streamed in realtime but must be fully downloaded before they can play.", "Streaming of '%s' on this platform is not supported", "bool AudioClip::GetQueuedAudioData(void **, unsigned int)", "GetSoundManager()->createSound(GetName(), mode, &exinfo, m_Sound, 0, this)", "AudioClip", "InvokePCMReaderCallback_Internal", "InvokePCMSetPositionCallback_Internal", "AudioDistortionFilter", "AudioEchoFilter", "AudioHighPassFilter", "GameObject has both an AudioSource and an AudioListener attached. While built-in filters like lowpass are instantiated separately, the custom script DSP filter components may only be used by either the AudioSource or AudioListener at a time. In this case it was attached to the AudioListener first, so it remains connected to this.", "./Runtime/Audio/AudioListener.cpp", "dsp->remove()", "GetAudioManager().GetChannelGroup_FX_IgnoreVolume()->addDSP(dsp, 0)", "AudioListener", "AudioLowPassFilter", "Default audio device was changed, but the audio system failed to initialize it (%s). Attempting to reset sound system.", "fmoddebuglevel", "FMOD failed to initialize ... ", "FMOD failed to setup system callbacks ... ", "FMOD failed to setup channel callbacks ... ", "FMOD failed to setup channel groups ... ", "./Runtime/Audio/AudioManager.cpp", "m_ChannelGroup_FMODMaster->addDSP(m_MasterDSP, NULL)", "FX_IgnoreVol", "FX_UseVol", "NoFX_IgnoreVol", "NoFX_UseVol", "m_ChannelGroup_FMODMaster->getDSPHead(&dspMaster)", "dspMaster->getOutput(0, &dspMasterParent, NULL)", "dspMaster->getInput(0, &dspTarget, NULL)", "dspTarget->getInput(0, &dspTarget, NULL)", "dspMasterParent->getNumInputs(&numInputs)", "dspMasterParent->getInput(n, &dspToBeRerouted, NULL)", "dspToBeRerouted->getInfo(namebuf, NULL, NULL, NULL, NULL)", "SFX Reverb", "dspToBeRerouted->disconnectAll(false, true)", "dspTarget->addInput(dspToBeRerouted, NULL)", "result = dsp->getUserData((void**)&customFilter)", "dsp->setBypass(customFilter->m_SavedBypassState)", "dsp->setBypass(!behaviour->GetEnabled())", "It appears that OnAudioConfigurationChanged is being called recursively and therefore the calls have been aborted after two recursions. Use the deviceWasChanged argument to only call AudioSettings.SetConfiguration in response to device changes.", "AudioSettings", "InvokeOnAudioConfigurationChanged", "FMOD failed to get number of drivers ... ", "FMOD failed to initialize nosound device ... ", "FMOD failed to get driver capabilities ... ", "fmodprofiler", "AudioManager: Selecting OpenSL output...\n", "FMOD failed to set OpenSL output, falling back to Java Audio Track", "AudioManager: Selecting AudioTrack output...\n", "FMOD failed to set Java Audio Track output", "FMOD could not set speaker mode to the one specified in the project settings. Falling back to stereo.", "FMOD failed to set speaker mode ... ", "FMOD failed to get DSP Buffer size ... ", "FMOD failed to set DSP Buffer size ... ", "FMOD failed to set software channel count ... ", "FMOD failed to initialize the output device, attempting to initialize the null output.", "result = dsp->getBypass(&customFilter->m_SavedBypassState)", "m_FMODSystem->getDSPBufferSize((unsigned int*)&config.dspBufferSize, NULL)", "m_FMODSystem->getSoftwareFormat(&config.sampleRate, NULL, NULL, NULL, NULL, NULL)", "%s. result=%d (%s)", "Failed to get record driver caps", "Failed to create sound clip for recording", "Length of the recording must be greater than zero (0)", "Frequency must be greater than zero (0)", "Microphone", "Starting Microphone failed", "ASrcDryGroup", "ASrcWetGroup", "AudioReverbFilter", "AudioReverbZone", "./Runtime/Audio/AudioSource.Callbacks.cpp", "(*it)->channel->get3DConeOrientation (&vec)", "(*it)->channel->set3DConeOrientation (&vec)", "m_Channel->get3DConeOrientation (&vec)", "m_Channel->set3DConeOrientation (&vec)", "./Runtime/Audio/AudioSource.cpp", "GetAudioManager().GetFMODSystem()->createChannelGroup(\"ASrcDryGroup\", &m_dryGroup)", "GetAudioManager().GetFMODSystem()->createChannelGroup(\"ASrcWetGroup\", &m_wetGroup)", "Failed to initialize spatializer. No plugin has been selected. Please check that the project audio settings and the plugin importer settings have been set up correctly.", "m_dryGroup->getParentGroup(&parentGroup)", "newParentGroup->addGroup(m_dryGroup)", "m_wetGroup->addGroup(m_dryGroup)", "m_wetGroup->getParentGroup(&parentGroup)", "newParentGroup->addGroup(m_wetGroup)", "Can not play a disabled audio source", "m_PlayingDSP->remove()", "Ran out of virtual channels. Sound will not be played.", "Sound could not be played. FMOD Error: %s", "fmodChannel->setMode (mode)", "GetAudioManager().GetFMODSystem()->getSoftwareFormat(&samplerate, NULL, NULL, NULL, NULL, NULL)", "fmodChannel->setFrequency(samplerate)", "Only custom filters can be played. Please add a custom filter or an audioclip to the audiosource (%s).", "m_dryGroup->release()", "m_wetGroup->release()", "m_PlayingDSP->getUserData((void**)&filter)", "channel->set3DPanLevel (0.0f)", "channel->set3DSpread (180.0f)", "channel->setPan (0.0f)", "channel->set3DPanLevel (spatialBlendLevel)", "channel->set3DSpread (spread * 360.0f)", "channel->setPan (stereoPan)", "channel->getReverbProperties (&props)", "channel->setReverbProperties(&props)", "Attempt to set pitch to infinite value in AudioSource::SetPitch ignored!", "Attempt to set pitch to NaN value in AudioSource::SetPitch ignored!", "Attempt to set pitch to a negative value in AudioSource::SetPitch ignored! This is only supported for AudioClips which are stored in an uncompressed format or will be decompressed at load time.", "m_dryGroup->getWaveData (samples, numSamples, channelOffset)", "m_dryGroup->getSpectrum (samples, numSamples, channelOffset, windowType)", "m_wetGroup->addDSP(dsp, 0)", "AudioSource", "AudioFilter", "./Runtime/Audio/AudioCustomFilter.cpp", "GetAudioManager().GetFMODSystem()->createDSP(&dspdesc, &m_DSP)", "m_DSP->release()", "Mixer is not initialized", "Invalid AudioMixerGroup output for mixer: %s, routing directly to device output.", "Exposed name does not exist: %s", "Snapshot name does not exist: %s", "Cannot set Output Mixer for AudioMixer: %s, creates curcular routing.", "AudioMixer", "m_OutputGroup", "m_MasterGroup", "m_Snapshots", "m_StartSnapshot", "m_SuspendThreshold", "m_EnableSuspend", "Unable to generate valid runtime data for serialization of AudioMixer: %s.", "m_MixerConstant", "AudioMixerSnapshot", "m_AudioMixer", "m_SnapshotID", "AudioMixerGroup", "m_GroupID", "PPtr<AudioMixerGroup>", "PPtr<AudioMixer>", "groups", "groupGUIDs", "effects", "effectGUIDs", "numSideChainBuffers", "snapshots", "snapshotGUIDs", "groupNameBuffer", "snapshotNameBuffer", "pluginEffectNameBuffer", "exposedParameterNames", "exposedParameterIndices", "values", "transitionTypes", "transitionIndices", "groupConstantIndex", "sendTargetEffectIndex", "wetMixLevelIndex", "prevEffectIndex", "bypass", "parameterIndices", "parentConstantIndex", "volumeIndex", "pitchIndex", "mute", "solo", "bypassEffects", "AudioMixerConstant", "SnapshotConstant", "EffectConstant", "GroupConstant", "PPtr<AudioMixerSnapshot>", "m_audioClip", "m_PlayOnAwake", "m_Volume", "m_Pitch", "m_MinVolume", "m_MaxVolume", "m_RolloffFactor", "Loop", "OutputAudioMixerGroup", "Mute", "Spatialize", "Priority", "DopplerLevel", "MinDistance", "MaxDistance", "Pan2D", "rolloffMode", "BypassEffects", "BypassListenerEffects", "BypassReverbZones", "rolloffCustomCurve", "panLevelCustomCurve", "spreadCustomCurve", "reverbZoneMixCustomCurve", "PPtr<AudioClip>", "m_ReverbPreset", "m_Room", "m_RoomHF", "m_DecayTime", "m_DecayHFRatio", "m_Reflections", "m_ReflectionsDelay", "m_Reverb", "m_ReverbDelay", "m_HFReference", "m_RoomRolloffFactor", "m_Diffusion", "m_Density", "m_LFReference", "m_RoomLF", "m_DryLevel", "m_RoomRolloff", "m_ReflectionsLevel", "m_ReverbLevel", "static const char *SoundUserDataGeneric::GetUserDataString() [T = SoundHandle::Instance]", "static const char *SoundUserDataGeneric::GetUserDataString() [T = SoundChannelInstance]", "Rolloff Scale", "Doppler Factor", "Default Speaker Mode", "m_SampleRate", "m_DSPBufferSize", "m_VirtualVoiceCount", "m_RealVoiceCount", "m_SpatializerPlugin", "m_DisableAudio", "m_LowpassResonanceQ", "lowpassLevelCustomCurve", "m_CutoffFrequency", "m_HighpassResonanceQ", "m_Delay", "m_DecayRatio", "m_WetMix", "m_DryMix", "m_DistortionLevel", "m_LoadType", "m_BitsPerSample", "m_Length", "m_IsTrackerFormat", "m_SubsoundIndex", "m_PreloadAudioData", "m_LoadInBackground", "m_Legacy3D", "m_Resource", "m_CompressionFormat", "StreamedResource", "m_WetMix1", "m_WetMix2", "m_WetMix3", "m_Rate", "SoundChannelStopList::~SoundChannelStopList()", "static SoundChannel SoundChannel::Create(SoundHandle, bool)", "SoundChannelInstance *SoundChannel::operator->() const", "SoundHandleAPI *SoundHandle::operator->() const", "MuteGroup", "FMOD error in %s line %d: code=%s (%d)\n", "./Runtime/Audio/mixer/audiomixerruntime.cpp", "Sidechain threshold above which ducking is applied", "Ducking ratio", "Attack time for sidechain level detector", "Release time for sidechain level detector", "Make-up gain", "Sharpness of compression curve knee", "Sidechain/source mix. If set to 100% the compressor detects level entirely from sidechain signal.", "Audio effect %s could not be found. Check that the project contains the correct native audio plugin libraries and that the importer settings are set up correctly.", "Could not initialise internal audio effect", "AudioMixer: Instantiation of DSP effect of type %d failed. The target platform does not seem to support it.\n", "static FMOD_RESULT SoundChannelInstance::FMODChannelCallback(FMOD_CHANNEL *, FMOD_CHANNEL_CALLBACKTYPE, void *, void *)", "./Runtime/Audio/sound/SoundChannel.cpp", "fmodchannel->getUserData ((void**)&userData)", "fmodchannel->setUserData(NULL)", "SoundChannelInstance::SoundChannelInstance(SoundHandle, bool)", "virtual SoundChannelInstance::~SoundChannelInstance()", "void SoundChannelInstance::SetFMODChannel(FMOD::Channel *)", "fmodchannel->setUserData(&m_UserData)", "fmodchannel->setCallback(FMODChannelCallback)", "fmodchannel->getFrequency(&m_BaseFrequency)", "FMOD_RESULT SoundChannelInstance::getDelay(FMOD_DELAYTYPE, unsigned int *, unsigned int *)", "FMOD_RESULT SoundChannelInstance::isPlaying(bool *)", "m_FMODChannel->isPlaying(playing)", "FMOD_RESULT SoundChannelInstance::set3DAttributes(const FMOD_VECTOR *, const FMOD_VECTOR *)", "m_FMODChannel->set3DAttributes(pos, vel)", "FMOD_RESULT SoundChannelInstance::set3DConeOrientation(FMOD_VECTOR *)", "m_FMODChannel->set3DConeOrientation(orientation)", "FMOD_RESULT SoundChannelInstance::get3DConeOrientation(FMOD_VECTOR *)", "m_FMODChannel->get3DConeOrientation(orientation)", "FMOD_RESULT SoundChannelInstance::set3DDopplerLevel(float)", "m_FMODChannel->set3DDopplerLevel(dopplerlevel)", "FMOD_RESULT SoundChannelInstance::set3DMinMaxDistance(float, float)", "m_FMODChannel->set3DMinMaxDistance(minDist, maxDist)", "FMOD_RESULT SoundChannelInstance::set3DPanLevel(float)", "m_FMODChannel->set3DPanLevel(panlevel)", "FMOD_RESULT SoundChannelInstance::set3DSpread(float)", "m_FMODChannel->set3DSpread(spread)", "FMOD_RESULT SoundChannelInstance::setChannelGroup(FMOD::ChannelGroup *)", "m_FMODChannel->setChannelGroup(group)", "FMOD_RESULT SoundChannelInstance::setDelay(FMOD_DELAYTYPE, unsigned int, unsigned int)", "m_FMODChannel->setDelay(delaytype, delayhi, delaylo)", "FMOD_RESULT SoundChannelInstance::setMute(bool)", "m_FMODChannel->setMute(mute)", "FMOD_RESULT SoundChannelInstance::setPan(float)", "m_FMODChannel->setPan(pan)", "FMOD_RESULT SoundChannelInstance::setPriority(int)", "m_FMODChannel->setPriority(priority)", "FMOD_RESULT SoundChannelInstance::setReverbProperties(FMOD_REVERB_CHANNELPROPERTIES *)", "m_FMODChannel->setReverbProperties(reverbproperties)", "FMOD_RESULT SoundChannelInstance::getReverbProperties(FMOD_REVERB_CHANNELPROPERTIES *)", "m_FMODChannel->getReverbProperties(reverbproperties)", "FMOD_RESULT SoundChannelInstance::GetPositionPCM(unsigned int *)", "m_FMODChannel->getPosition(position_pcm, FMOD_TIMEUNIT_PCM)", "FMOD_RESULT SoundChannelInstance::GetPositionMS(unsigned int *)", "m_FMODChannel->getPosition(position_ms, FMOD_TIMEUNIT_MS)", "FMOD_RESULT SoundChannelInstance::SetPositionPCM(unsigned int)", "result", "FMOD_RESULT SoundChannelInstance::SetPositionMS(unsigned int)", "FMOD_RESULT SoundChannelInstance::SetLoop(bool)", "m_FMODChannel->setMode(loop ? FMOD_LOOP_NORMAL : FMOD_LOOP_OFF)", "void SoundChannelInstance::ApplyBufferedParameters()", "void SoundChannelInstance::Stop()", "m_FMODChannel->stop()", "void SoundChannelInstance::UpdateVolume()", "m_FMODChannel->setVolume(mixVolume)", "void SoundChannelInstance::UpdatePitch()", "m_FMODChannel->setFrequency(m_Pitch * m_BaseFrequency)", "void SoundChannelInstance::UpdatePauseState()", "m_FMODChannel->setPaused(paused)", "void SoundChannelInstance::ParameterBuffer::Apply(FMOD::Channel *)", "channel->setMute(mute)", "channel->setCallback(callback)", "channel->setPosition(position_pcm, FMOD_TIMEUNIT_PCM)", "channel->setPosition(position_ms, FMOD_TIMEUNIT_MS)", "channel->setChannelGroup(group)", "channel->setPriority(priority)", "channel->setReverbProperties(&reverbproperties)", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_START, delayhi[FMOD_DELAYTYPE_DSPCLOCK_START], delaylo[FMOD_DELAYTYPE_DSPCLOCK_START])", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_END, delayhi[FMOD_DELAYTYPE_DSPCLOCK_END], delaylo[FMOD_DELAYTYPE_DSPCLOCK_END])", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_PAUSE, delayhi[FMOD_DELAYTYPE_DSPCLOCK_PAUSE], delaylo[FMOD_DELAYTYPE_DSPCLOCK_PAUSE])", "channel->setPan(pan)", "channel->set3DAttributes(&pos, &vel)", "channel->set3DConeOrientation(&orientation)", "channel->set3DConeSettings(insideconeangle, outsideconeangle, outsidevolume)", "channel->set3DDopplerLevel(dopplerlevel)", "channel->set3DMinMaxDistance(minDist, maxDist)", "channel->set3DPanLevel(panlevel)", "channel->set3DSpread(spread)", "void SoundChannelInstance::Update()", "Function %s may only be called from main thread!", "SoundHandle::Instance::Instance()", "SoundHandle::Instance::~Instance()", "./Runtime/Audio/sound/SoundManager.cpp", "m_FSB->release()", "m_Sound->release()", "void SoundHandle::Instance::ReleaseIfNotReferenced()", "void SoundHandle::Instance::Dispose()", "void SoundHandle::Instance::UpdateLoadState()", "m_FSB->setUserData(&m_UserData)", "m_FSB->getNumSubSounds(&numSubSounds)", "m_Sound->setUserData(&m_UserData)", "SoundChannel SoundHandle::Instance::CreateChannel(SoundHandle &, bool)", "Error: Trying to play disposed sound!\n", "Streaming system overload -- deferring playback. FMOD Error: %s", "SoundHandle::LoadState SoundHandleAPI::GetLoadState() const", "bool SoundHandleAPI::SetData(const float *, unsigned int, unsigned int)", "Cannot set data on streamed samples. If the AudioClip was created via AudioClip.Create and no PCM read callback was provided, the 'stream' argument must be false. For a disk-based AudioClip changing the load type to DecompressOnLoad on the AudioClip will allow modification of the data.", "Cannot set data on shared sample", "instance->m_Sound->getFormat(NULL, &format, &numChannels, &bitsPerSample)", "Cannot set data on compressed samples. Changing the load type to DecompressOnLoad on the AudioClip will fix this.", "instance->m_Sound->getLength(&clipSampleCount, FMOD_TIMEUNIT_PCM)", "Data too long to fit the audioclip: %s. %i sample(s) discarded", "result = instance->m_Sound->lock(offsetBytes, lengthBytes, &ptr1, &ptr2, &len1, &len2)", "instance->m_Sound->unlock(ptr1, ptr2, len1, len2)", "bool SoundHandleAPI::GetData(float *, unsigned int, unsigned int) const", "Cannot get data from streamed samples. If the AudioClip was created via AudioClip.Create and no PCM read callback was provided, the 'stream' argument must be false. For a disk-based AudioClip changing the load type to DecompressOnLoad on the AudioClip will allow modification of the data.", "Cannot get data on compressed samples. Changing the load type to DecompressOnLoad on the AudioClip will fix this.", "Data longer than the AudioClip: %s. %i sample(s) copied", "instance->m_Sound->getLength(&totalLengthBytes, FMOD_TIMEUNIT_PCMBYTES)", "Array can not hold the number of samples (%d)", "unsigned int SoundHandleAPI::GetLengthPCM() const", "instance->m_Sound->getLength(&length, FMOD_TIMEUNIT_PCM)", "float SoundHandleAPI::GetLengthMS() const", "instance->m_Sound->getLength(&length, FMOD_TIMEUNIT_MS)", "int SoundHandleAPI::GetNumChannels() const", "instance->m_Sound->getFormat(NULL, NULL, &channels, NULL)", "float SoundHandleAPI::GetFrequency() const", "instance->m_Sound->getDefaults(&frequency, NULL, NULL, NULL)", "SoundHandle::~SoundHandle()", "void SoundHandle::operator=(const SoundHandle &)", "void SoundHandle::Release()", "SoundChannel SoundHandle::CreateChannel(bool)", "SoundManager::SoundManager()", "SoundManager::~SoundManager()", "SoundHandle SoundManager::GetHandle(const StreamedResource &, int, FMOD_MODE, UInt32, PPtr<SampleClip>, bool)", "Error: Cannot create FMOD::Sound instance for resource %s, (%s)", "SoundHandle SoundManager::GetHandleFromFMODSound(FMOD::Sound *, UInt32, PPtr<SampleClip>)", "sound->getMode(&instance->m_Mode)", "FMOD_RESULT SoundManager::createSound(const char *, FMOD_MODE, FMOD_CREATESOUNDEXINFO *, SoundHandle &, UInt32, PPtr<SampleClip>)", "void SoundManager::UpdateChannels()", "void SoundManager::Update()", "void SoundManager::DisposeSound(SoundHandle::Instance *)", "void SoundManager::FlushDisposedSounds()", "bool SoundManager::AwaitLoading(SoundHandle::Instance *)", "void SoundManager::RegisterModifiedClip(SampleClip *)", "void SoundManager::UnloadDynamicClip(SampleClip *)", "void SoundManager::DynamicUnload(SoundHandle::Instance *)", "static void SoundManager::OnExitPlayModeStatic()", "void SoundManager::OnExitPlayMode()", "SoundManager *GetSoundManager()", "Conversion from this format NOT supported", "Stuck in loop at %s line %d", "BaseVideoTexture", "Warning! Video texture requires non-power-of-two-textures support in hardware.", "integer overflow in addition", "integer overflow in multiplication", "no camera available.", "The animation state %s could not be played because it couldn't be found!\nPlease attach an animation clip with the name '%s' or call this function only for existing animations.", "The animation state %s could not be played because it is not attached to the animation component!\nYou have to provide an animation state that is attached to the same animation component.", "Default clip could not be found in attached animations list.", "The AnimationClip '%s' used by the Animation component '%s' must be marked as Legacy.", " - Queued Clone", "m_PlayFixedFrameRate", "m_AnimatePhysics", "m_AnimateIfVisible", "m_AnimateOnlyIfVisible", "AnimatorOverrideController", "Motion", "Can't get curve because ", " is not a valid Transform property.", "Can't use AnimationClip::SetCurve at Runtime on non Legacy AnimationClips", "Can't assign curve because the type does not inherit from Component.", "localRotation", "Can't remove individual animation rotation curve ", " you must remove the entire animation curve with m_LocalRotation.", "Can't assign curve because ", "localPosition", "Can't remove individual position animation curve ", " you must remove the entire animation curve with m_LocalPosition.", "localScale", "Can't remove individual scale animation curve ", " you must remove the entire animation curve with m_LocalScale.", "AnimationClip", "m_UseCompression", "m_Compressed", "m_MuscleClipInfo", "m_AnimationClipSettings", "Animation Clip %s contains negative time keys. This may cause your animation to look wrong, as negative time keys are not supported in compressed animation clips!", "Unknown wrapMode", "RemoveMixingTransform couldn't find transform '%s' in a list of mixing transforms. You can only remove transforms that have been added through AddMixingTransform", "Avatar", "Left ", "Right ", "AvatarBuilder '%s': %s", "Transform '%s' for human bone '%s' not found", "Required human bone '%s' not found", "Hips bone '%s' must have a parent", "Hips bone parent '%s' must be included in the HumanDescription Skeleton", "Transform '%s' is not an ancestor of '%s'", "Transform '%s' parent '%s' must be included in the HumanDescription Skeleton", "Found duplicate human bone '%s' with transform '%s' and '%s'", "Found duplicate transform '%s' for human bone '%s' and '%s'", "Cannot find root motion transform '%s'", "Could not set Runtime Animator Controller. The controller %s is an AnimatorOverrideController with no AnimatorController to override.", "Not initialized", "Clip Count: %d\n", "Curves Pos: %d Rot: %d Scale: %d Muscles: %d Generic: %d PPtr: %d\n", "Curves Count: %d Constant: %d (%.1f%%) Dense: %d (%.1f%%) Stream: %d (%.1f%%)\n", "Hash %d", "Parameter type '%s' does not match.", "Parameter '%s' does not exist.", "Parameter '%s' is controlled by a curve.", "Could not allocate requested frameCount for Animator Recording. 10000 frames where allocated.", "Could not record Animator. Frame allocation has failed.", "RuntimeAnimatorController", "AnimatorController", "ClipMuscleConstant", "no animated pose. thread failure.", "NULL", "The input bones do not match the skeleton of the Avatar(%s).\nPlease check if the Avatar is generated in optimized mode, or if the Avatar is valid for the attached SkinnedMeshRenderer.", "Unknow Message ID: %x", "m_Controller", "m_Clips", "functionName", "objectReferenceParameter", "floatParameter", "intParameter", "messageOptions", "m_ControllerSize", "m_TOS", "m_AnimationClips", "m_StateMachineBehaviourVectorDescription", "m_StateMachineBehaviours", "m_StateMachineBehaviourRanges", "m_StateMachineBehaviourIndices", "m_StartIndex", "m_Count", "m_StateID", "m_LayerIndex", "m_LayerArray", "m_StateMachineArray", "m_Values", "m_DefaultValues", "m_BoolValues", "m_IntValues", "m_FloatValues", "m_PositionValues", "m_QuaternionValues", "m_ScaleValues", "m_ValueArray", "m_TypeID", "m_Index", "m_StateConstantArray", "m_AnyStateTransitionConstantArray", "m_SelectorStateConstantArray", "m_DefaultState", "m_MotionSetCount", "m_TransitionConstantArray", "m_FullPathID", "m_IsEntry", "m_Destination", "m_ConditionConstantArray", "m_ConditionMode", "m_EventID", "m_EventThreshold", "m_ExitTime", "m_DestinationState", "m_UserID", "m_TransitionDuration", "m_TransitionOffset", "m_HasExitTime", "m_HasFixedDuration", "m_InterruptionSource", "m_OrderedInterruption", "m_CanTransitionToSelf", "m_BlendTreeConstantIndexArray", "m_BlendTreeConstantArray", "m_NameID", "m_TagID", "m_SpeedParamID", "m_MirrorParamID", "m_CycleOffsetParamID", "m_CycleOffset", "m_IKOnFeet", "m_WriteDefaultValues", "m_Loop", "m_Mirror", "m_NodeArray", "m_BlendType", "m_BlendEventID", "m_BlendEventYID", "m_ChildIndices", "m_Blend1dData", "m_Blend2dData", "m_BlendDirectData", "m_ClipID", "m_Duration", "m_ChildThresholdArray", "m_ChildBlendEventIDArray", "m_NormalizedBlendValues", "m_ChildPositionArray", "m_ChildMagnitudeArray", "m_ChildPairVectorArray", "m_ChildPairAvgMagInvArray", "m_ChildNeighborListArray", "m_NeighborArray", "m_StateMachineIndex", "m_StateMachineMotionSetIndex", "m_BodyMask", "m_SkeletonMask", "m_Binding", "(int&)m_LayerBlendingMode", "m_DefaultWeight", "m_IKPass", "m_SyncedLayerAffectsTiming", "m_PathHash", "m_Weight", "word0", "word1", "word2", "PPtr<MonoBehaviour>", "StateMachineBehaviourVectorDescription", "StateRange", "StateKey", "PPtr<AnimationClip>", "ControllerConstant", "OffsetPtr", "ValueArray", "float4", "ValueArrayConstant", "ValueConstant", "StateMachineConstant", "SelectorStateConstant", "SelectorTransitionConstant", "ConditionConstant", "TransitionConstant", "StateConstant", "BlendTreeConstant", "BlendTreeNodeConstant", "BlendDirectDataConstant", "Blend2dDataConstant", "MotionNeighborList", "Blend1dDataConstant", "LayerConstant", "SkeletonMask", "SkeletonMaskElement", "HumanPoseMask", "m_Avatar", "m_CullingMode", "m_UpdateMode", "m_ApplyRootMotion", "m_LinearVelocityBlending", "m_HasTransformHierarchy", "m_AllowConstantClipSamplingOptimization", "PPtr<Avatar>", "AvatarConstant", "m_AvatarSize", "m_Legacy", "m_UseHighQualityCurve", "m_RotationCurves", "m_CompressedRotationCurves", "m_PositionCurves", "m_ScaleCurves", "m_FloatCurves", "m_PPtrCurves", "m_AnimationType", "m_MuscleClip", "m_MuscleClipSize", "m_ClipBindingConstant", "m_Events", "genericBindings", "pptrCurveMapping", "path", "attribute", "script", "classID", "customType", "isPPtrCurve", "m_DeltaPose", "m_StartX", "m_LeftFootStartX", "m_RightFootStartX", "m_AverageSpeed", "m_Clip", "m_StartTime", "m_StopTime", "m_OrientationOffsetY", "m_Level", "m_AverageAngularSpeed", "m_IndexArray", "m_ValueArrayDelta", "m_LoopTime", "m_LoopBlend", "m_LoopBlendOrientation", "m_LoopBlendPositionY", "m_LoopBlendPositionXZ", "m_KeepOriginalOrientation", "m_KeepOriginalPositionY", "m_KeepOriginalPositionXZ", "m_HeightFromFeet", "m_Stop", "m_StreamedClip", "m_DenseClip", "m_ConstantClip", "m_FrameCount", "m_CurveCount", "m_BeginTime", "m_SampleArray", "curveCount", "m_RootX", "m_LookAtPosition", "m_LookAtWeight", "m_GoalArray", "m_LeftHandPose", "m_RightHandPose", "m_DoFArray", "m_TDoFArray", "m_GrabX", "m_Override", "m_CloseOpen", "m_InOut", "m_Grab", "m_WeightT", "m_WeightR", "m_HintT", "m_HintWeightT", "m_Path", "m_Times", "m_Slopes", "AnimationClipBindingConstant", "GenericBinding", "ValueDelta", "Clip", "ConstantClip", "DenseClip", "StreamedClip", "xform", "HumanPose", "HandPose", "HumanGoal", "PPtrKeyframe", "PPtrCurve", "FloatCurve", "Vector3Curve", "CompressedAnimationCurve", "QuaternionCurve", "m_OriginalClip", "m_OverrideClip", "AnimationClipOverride", "PPtr<RuntimeAnimatorController>", "m_Animations", "m_PlayAutomatically", "m_CullingType", "Failed to call AnimationEvent %s of class %s.\nThe function must have either 0 or 1 parameters and the parameter can only be: string, float, int, enum, Object and AnimationEvent.", "Invalid Layer Index '%d'", "Animator has not been initialized.", "Animator.GotoState: State could not be found", "Animator.GotoState: Cannot find statemachine", "Calling Animator.GotoState on Synchronize layer", "m_Skeleton", "m_AvatarSkeleton", "m_SkeletonPose", "m_AvatarSkeletonPose", "m_HumanLayerCount", "m_LayerCount", "m_HumanLayerArray", "m_DefaultPose", "m_SkeletonNameIDArray", "m_Human", "m_HumanSkeletonIndexArray", "m_HumanSkeletonReverseIndexArray", "m_RootMotionBoneIndex", "m_RootMotionBoneX", "m_RootMotionSkeleton", "m_RootMotionSkeletonPose", "m_RootMotionSkeletonIndexArray", "m_AvatarX", "m_LeftFootX", "m_RightFootX", "m_PivotWeight", "m_FirstEval", "m_SkeletonPoseOutputReady", "m_SkeletonNameIDCount", "m_HumanSkeletonIndexCount", "m_HumanSkeletonReverseIndexCount", "m_RootMotionSkeletonIndexCount", "m_StateMachineMemory", "m_LayerWeights", "m_InPlayback", "m_StateMachineCount", "m_BoolCount", "m_IntCount", "m_FloatCount", "m_PositionCount", "m_QuaternionCount", "m_ScaleCount", "m_MotionSetAutoWeightArray", "m_CurrentStateIndex", "m_NextStateIndex", "m_ExitStateIndex", "m_TransitionIndex", "m_TransitionSourceStateIndex", "m_TransitionType", "m_CurrentStatePreviousTime", "m_NextStatePreviousTime", "m_CurrentStateDuration", "m_NextStateDuration", "m_ExitStateDuration", "m_CurrentStateSpeedModifier", "m_NextStateSpeedModifier", "m_ExitStateSpeedModifier", "m_TransitionStartTime", "m_TransitionTime", "m_InInterruptedTransition", "m_InTransition", "m_InDynamicTransition", "m_ActiveGotoState", "m_FixedTransition", "m_LeftHand", "m_RightHand", "m_HandlesCount", "m_Handles", "m_ColliderCount", "m_ColliderArray", "m_HumanBoneIndex", "m_HumanBoneMass", "m_ColliderIndex", "m_ArmTwist", "m_ForeArmTwist", "m_UpperLegTwist", "m_LegTwist", "m_ArmStretch", "m_LegStretch", "m_FeetSpacing", "m_HasLeftHand", "m_HasRightHand", "m_HasTDoF", "m_HandBoneIndex", "m_Node", "m_AxesCount", "m_AxesArray", "m_XMotionType", "m_YMotionType", "m_ZMotionType", "m_MinLimitX", "m_MaxLimitX", "m_MaxLimitY", "m_MaxLimitZ", "m_ParentHumanIndex", "m_PreQ", "m_PostQ", "m_Sgn", "m_Limit", "m_Min", "m_Max", "m_ParentId", "m_AxesId", "Human", "Handle", "Hand", "SkeletonPose", "Skeleton", "Limit", "Axes", "Node", "MotionT.x", "MotionT.y", "MotionT.z", "MotionQ.x", "MotionQ.y", "MotionQ.z", "MotionQ.w", "RootT.x", "RootT.y", "RootT.z", "RootQ.x", "RootQ.y", "RootQ.z", "RootQ.w", "LeftHand.", "RightHand.", "TDOF", "Result", "Value", "MinMin", "MinMax", "MaxMin", "MaxMax", "RangeA", "RangeB", "RangeC", "RangeD", "RangeE", "WeightA", "WeightB", "WeightC", "WeightD", "WeightE", "OutA", "OutB", "OutC", "OutD", "OutE", "DampTime", "DeltaTime", "PreviousValue", "GravityWeight", "SrcRefX", "DstRefX", "SrcPivotX", "DstPivotX", "RefWeight", "PivotWeight", "Condition", "StateTime", "StateSpeed", "StateExitTime", "DoTransition", "NextStateStartTime", "TransitionDuration", "TransitionOffset", "TransitionStartTime", "StateMachineWeight", "TransitionTime", "BlendWeight", "StateWeight", "StabilizeFeet", "RootX", "LeftFoot.WeightT", "LeftFoot.WeightR", "RightFoot.WeightT", "RightFoot.WeightR", "ComputeSource", "LookAt", "LeftFootX", "RightFootX", "LeftFootSpeedT", "LeftFootSpeedQ", "RightFootSpeedT", "RightFootSpeedQ", "LeftFootStableT", "LeftFootStableQ", "RightFootStableT", "RightFootStableQ", "RootSpeedT", "RootSpeedQ", "RootStableT", "RootStableQ", "LeftFootProjX", "RightFootProjX", "PlantFeet", "LeftFootSafeX", "RightFootSafeX", "PositionX", "PositionY", "PositionZ", "QuaternionX", "QuaternionY", "QuaternionZ", "QuaternionW", "ScaleX", "ScaleY", "ScaleZ", "DynamicCurve", "Thumb", "Index", "Middle", "Ring", "Little", "Proximal", "Intermediate", "Distal", "1 Stretched", "Spread", "2 Stretched", "3 Stretched", "Hips", "LeftUpperLeg", "RightUpperLeg", "LeftLowerLeg", "RightLowerLeg", "LeftFoot", "RightFoot", "Spine", "Chest", "Neck", "Head", "LeftShoulder", "RightShoulder", "LeftUpperArm", "RightUpperArm", "LeftLowerArm", "RightLowerArm", "LeftHand", "RightHand", "LeftToes", "RightToes", "LeftEye", "RightEye", "Spine Front-Back", "Spine Left-Right", "Spine Twist Left-Right", "Chest Front-Back", "Chest Left-Right", "Chest Twist Left-Right", "Neck Nod Down-Up", "Neck Tilt Left-Right", "Neck Turn Left-Right", "Head Nod Down-Up", "Head Tilt Left-Right", "Head Turn Left-Right", "Left Eye Down-Up", "Left Eye In-Out", "Right Eye Down-Up", "Right Eye In-Out", "Jaw Close", "Jaw Left-Right", "Left Upper Leg Front-Back", "Left Upper Leg In-Out", "Left Upper Leg Twist In-Out", "Left Lower Leg Stretch", "Left Lower Leg Twist In-Out", "Left Foot Up-Down", "Left Foot Twist In-Out", "Left Toes Up-Down", "Right Upper Leg Front-Back", "Right Upper Leg In-Out", "Right Upper Leg Twist In-Out", "Right Lower Leg Stretch", "Right Lower Leg Twist In-Out", "Right Foot Up-Down", "Right Foot Twist In-Out", "Right Toes Up-Down", "Left Shoulder Down-Up", "Left Shoulder Front-Back", "Left Arm Down-Up", "Left Arm Front-Back", "Left Arm Twist In-Out", "Left Forearm Stretch", "Left Forearm Twist In-Out", "Left Hand Down-Up", "Left Hand In-Out", "Right Shoulder Down-Up", "Right Shoulder Front-Back", "Right Arm Down-Up", "Right Arm Front-Back", "Right Arm Twist In-Out", "Right Forearm Stretch", "Right Forearm Twist In-Out", "Right Hand Down-Up", "Right Hand In-Out", " Bold", " Italic", "Unknown font rendering mode.", "Failed to load font from memory", "Unreadeable font name.", "Could not initialize FreeType", "FT_Init_FreeType: cannot allocate memory manager", "Arial", "Arial Unicode MS", "Microsoft Sans Serif", "Microsoft YaHei", "Gulim", "MS Gothic", "LastResort", "/system/fonts", "dfont", "quad", "Only %d materials are allowed per TextMesh.", "String too long for TextMeshGenerator. Cutting off characters.", " Bold Italic", "Italic", "Bold Italic", "Font size and style overrides are only supported for dynamic fonts.", "Font does not contain font names!", "Font.names can only be set for dynamic fonts.", "Failed to update dynamic font (%s) texture; all the needed characters do not fit onto a single texture (max size %i). Try using less text or a smaller font size.", "m_AsciiStartOffset", "m_Kerning", "m_LineSpacing", "m_CharacterSpacing", "m_CharacterPadding", "m_ConvertCase", "m_CharacterRects", "m_KerningValues", "m_PixelScale", "m_GridFont", "m_FontCountX", "m_FontCountY", "m_PerCharacterKerning", "m_FontData", "m_Ascent", "m_DefaultStyle", "m_FontNames", "m_FallbackFonts", "m_FontRenderingMode", "vert", "flipped", "Couldn't load default font!", "Couldn't load default font material!", "GUIText", "m_Text", "m_PixelOffset", "m_TabSize", "m_PixelCorrect", "TextMesh", "m_OffsetZ", "m_CharacterSize", "_TextureSampleAdd", "_UseClipRect", "_ClipRect", "CanvasRenderer", "CanvasGroup", "UI/Default", "Default UI Material", "Canvas", "unity_GUIZTestMode", "SendWillRenderCanvases", "m_Camera", "m_PlaneDistance", "m_PixelPerfect", "m_ReceivesEvents", "m_OverrideSorting", "m_OverridePixelPerfect", "PPtr<Camera>", "m_Alpha", "m_Interactable", "m_BlocksRaycasts", "m_IgnoreParentGroups", "Failed setting material. Index is out of bounds.", "TerrainCollider", "Could not create tree colliders. Maybe there are more trees than PhysX can handle?", "Could not create tree colliders. Maybe there are more Trees than PhysX can handle?", "TerrainColliders can no longer act as triggers since Unity 5.0", "m_CreateTreeColliders", "m_EnableTreeColliders", "TerrainCollider: %s is not supported on terrain at the moment.", "GUIClip pushing empty stack not allowed.", "Invalid GUIClip stack popping", "Ignoring invalid matrix assinged to GUI.matrix - the matrix needs to be invertible. Did you scale by 0 on Z-axis?", "GUI Error: You are pushing more GUIClips than you are popping. Make sure they are balanced)", "GUI Error: You are popping more GUIClips than you are pushing. Make sure they are balanced)", "GUIContent is null. Use GUIContent.none.", "UnityGUIClip", "_GUIClipTexture", "Couldn't load default font or font material!", "EndGUIFromException", "GUI Error: You called GUI.Window inside a another window's function. Ensure to call it in a OnGUI code path.", "You cannot show two modal windows at once", "./Runtime/IMGUI/GUIWindows.cpp", "Attempting to show modal windows at once; the newer windows will not be modal", "Dragwindow can only be called within a window callback", "Packet size {%d} is too small, min MTU {%d}", "exceeded channel limit, maximum allowed channels is 255", "Channel num out of range max channel {%d} requested channel {%d}", "exceeded special config limit, maximum allowed channels is 65535", "Error: wrong qos type: {%d} Unreliable will use instead", "Error: insufficient buffers number for received messages\n", "Warning: Received packet has size less than Packet header, possible hack attack\n", "Warning: wrong connectionId in received user packet\n", "Warning: received user packet belongs to wrong session\n", "Warning: Packet has been already received, connection {%d}\n", "Warning: received not well-formed packet, connection {%d} will be closed\n", "Warning: Received packet contains message for non-existing channel. Possible hack attack, connection will be closed. Connection {%d}, channel {%d}\n", "Warning: this packet is not well formed. Possible hack attack, connection will be closed. Connection {%d}\n", "Warning: not well formed packet received; connection. Possible hack attack, connection will be closed. Connection {%d}\n", "Warning: malformed ping received\n", "Warning: received system packet has size less than system message header, possible hack attack\n", "Warning: received system packet has wrong connection id\n", "Warning: received system packet belongs to wrong session\n", "Warning: received unknown type of system request\n", "Log: cannot connect to relay server after %d attempt to address {%s}\n", "Log: cannot connect after %d attempt address {%s}\n", "Error: sent failed\n", "Error: Cannot allocate new packet for sending\n", "Warning: no free slot for incoming connection\n", "Log: malformed connection packet from relay come in\n", "Error: host connection request failed with error code {%d}\n", "Error: host connection request failed host nodeid assignment\n", "Log: malformed connection packet from relay come in, connection id is not in the allowed range\n", "Error: relay connection request for connection {%d} failed with error code {%d}\n", "Error: receive relay packet for connection {%d} which in the wrong state {%d}\n", "Log: malformed disconnection packet from relay come in\n", "Log: host has been already disconnected\n", "Log: disconnection packet for network {%llX} doesn't match host network {%llX}\n", "Log: Library version mismatch\n", "Log: Channel configuration mismatch\n", "Log: Connected peer has not got free resources\n", "Error: Hack attack in disconnect packet\n", "aissp: not update stats", "Log: connection {%d} has been disconnected by timeout; address {%s}\n", "aissp: time {%d} lastRecTime {%d} DisTme {%d}, rtt {%d} ", "Error: no free messages for send packet\n", "incoming broadcast packet has wrong credentials", "ReceivedMessagesBus", "SentMessagesBus", "SentPacketBus", "Before using the library you should call Init() and do not forget to call Shutdown() afterwards", "Invalid sockaddr object", "network simulation allowed only for editor or developer build or in debug mode only", "Max message size cannot be greater than %d", "Cannot send message of 0 bytes length", "topology is not defined", "maximum hosts cannot exceed {%d}", "web socket server has not been supported for this platform", "host id out of bound id {%d} no host exists", "host id out of bound id {%d} max id {%d}", "host id {%d} has been already deleted", "host id {%d} has been already in removed queue, wait for notification please", "web socket host doesn't exist", "host id out of bound id {%d} max id should be greater 0 and less than {%d}", "check parameters, all parameters should be > 0 and broadcastPort < 0xFFFF, key, version, subversion < 0xFFFFFFFF", "By some reason host doesn't have broadcast addreses", "Broadcast message is too long to be sent", "Broadcast discovery has been already running. Stop discovery first before repeat this call", "Cannot open broadcasting socket", "Cannot set broadcast option for socket", "Broadcasting socket doesn't exist", "Host doesn't exist", "UNET", "Host is in the wrong state %d", "AddPing: Connection {%d} has already in the list", "Requested timeout for ping is to big: {%d}", "AddConnection: Connection {%d} has already in the list", "Requested timeout for connecting request is to big: {%d}", "Event has already in the list", "Requested timeout for RTO timer is too big: {%d}", "ReceivedEventBus", "SentEventBus", "Data buffer is not initialized", "Broadcast or group sending have not finished yet", "Attempt to send to not connected connection {%d}", "no free events for message", "Channel {%d} for connection {%d} does not support fragmented messages; MTU: {%d}, message length: {%d} ", "no free events for long message", "no free memory for long message", "No memory to allocate message with len {%d} ", "No free outgoing events for connectionId {%d}, channelId {%d}", "Before call Receive function, error should be set to OK", "Previous multicast sending has not finished yet", "connection Id {%d} greater then registered amount of connection exceptions", " Connection {%d} has been already in use", "Wrong ip address {} or port {%d}", "No free connection", "Wrong ip address {%s} or port {%d}", "No diecovery message received", "Channel not exist", "Multicast message is tool long", "Only default connection can be used for multicast or broadcast sending", "Connection Id is too large", "No multicast/brodacst messages were initialized", "Attempt to send to not connected connection", "No Multicast operation was invoked", "Network host has been already existed state={%d}", "Host in the wrong state {%d}", "Warning: received packet too short to hold regular acks, connection {%d} will be closed\n", "Warning: Incoming message has out of window acknowledged id; connection {%d} ack Id {%d} out Id {%d}\n", "Wrong channelId {%d} for connectionId {%d}", "Warning: receive reliable message older then window size\n", "Warning: receive reliable message younger than window size last was {%d} incoming is {%d}\n", "Warning: not all old messages was acknowledged\n", "Error: Trying to get gameId on unsupported platform", "Error: Trying to set gameId on unsupported platform", "m_InitializeOnStartup", "m_TestMode", "m_EnabledPlatforms", "m_IosGameId", "m_AndroidGameId", "UnityEngine.Advertisements", "UnityAdsInternal", "CallUnityAdsVideoStarted", "CallUnityAdsVideoCompleted", "CallUnityAdsHide", "CallUnityAdsShow", "CallUnityAdsCampaignsFetchFailed", "CallUnityAdsCampaignsAvailable", "m_TestEventUrl", "m_TestConfigUrl", "stereo", "split", "oculus", "morpheus", "Virtual Reality is not supported in this project. Enable Virtual Reality Supported in Player Settings.", "Screenmanager Stereo 3D", "[VRDevice] Initialization of device %s failed.\n", "[VRDevice] Successfully created device %s.\n", "Could not recreate Oculus VR window because GfxDevice is in an invalid state (device lost)", "Bad config or LibOVR not found. VR disabled.", "Could not set Oculus caps. VR disabled.", "ovrp_Initialize", "ovrp_Shutdown", "ovrp_PreInitialize", "ovrp_SetupDistortionWindow", "ovrp_DestroyDistortionWindow", "ovrp_RecreateEyeTexture", "ovrp_ReleaseEyeTexture", "ovrp_GetEyePose", "ovrp_GetEyeFrustum", "ovrp_GetEyeTextureSize", "ovrp_GetNativePointer", "ovrp_GetBufferCount", "ovrp_Update", "ovrp_BeginFrame", "ovrp_EndEye", "ovrp_EndFrame", "ovrp_GetString", "ovrp_GetFloat", "ovrp_SetFloat", "ovrp_SetCaps", "ovrp_GetCaps", "ovrp_RecenterPose", "VR: Oculus could not be loaded: Failed to load symbol %s.", "ovrp_GetStatus2", "ovrp_GetStatus", "VR: Oculus could not be loaded: ovrp_GetStatus.", "%s%c%s%c%s%c%s", "%s%c%s%c%s%c%s%c%s", "Cloud", "CloudJobScheduler::FileSystemJobQueue", "ETag", "If-None-Match", "ArchivedEvents", "UnknownType", "Analytics", "EditorAnalytics", "Accept", "application/json", "data_block_id", "%llu.%08x", "(%u)%s\n", "(%u)", "HTTP", "Failed SupportsRenderTextureFormat; format is not a valid RenderTextureFormat", "Failed SupportsTextureFormat; format is not a valid TextureFormat", "Profiler is not supported in this build", "Not allowed to access vertices on mesh '%s'", "Not allowed to access normals on mesh '%s'", "Not allowed to access tangents on mesh '%s'", "Not allowed to access uv on mesh '%s'", "Not allowed to access uv2 on mesh '%s'", "Not allowed to access uv3 on mesh '%s'", "Not allowed to access uv4 on mesh '%s'", "Not allowed to access uvs on mesh '%s'", "Not allowed to access colors on mesh '%s'", "Not allowed to call RecalculateBounds() on mesh '%s'", "Not allowed to call RecalculateNormals() on mesh '%s'", "Not allowed to access triangles on mesh '%s'", "Not allowed to call GetTriangles() on mesh '%s'", "Not allowed to call SetTriangles() on mesh '%s'", "Not allowed to call GetIndices() on mesh '%s'", "Not allowed to call SetIndices() on mesh '%s'", "Failed getting topology. Submesh index is out of bounds.", "subMeshCount can't be set to negative value", "Blend shape data index out of range.", "material array is null", "dest property block is null", "Invalid argument for SetTexture()", "Invalid argument for AddTexture()", "DrawMesh requires material.SetPass before!", "Graphics.DrawProceduralIndirect with null buffer", "Graphics.Blit: material is null", "Graphics.BlitMultiTap: material is null", "Graphics.BlitMultiTap: offsets is null", "Coefficients array must have the same amount of elements as the probe count.", "Invalid value for lightmaps mode", "Invalid mode for GL.Begin", "Failed to create texture because of invalid parameters.", "SetPixels32 failed: invalid miplevel, must be between 0 and %d", "SetPixels32 failed: array of size %d cannot contain %dx%d area", "LoadRawTextureData: not enough data provided (will result in overread).", "GetPixels32 failed: invalid miplevel, must be between 0 and %d", "Texture atlas needs textures to have Readable flag set!", "Failed to create sparse texture because of invalid parameters.", "SetLODs: Attempting to set more then the maximum number of LODS (%i) clamping", "SetLODs: Attempting to set LOD where the screen relative size is greater then or equal to a higher detail LOD level.", "Duration must be positive.", "firstIndex must not be negative.", "Sphere index is out of range.", "Culling group was not disposed. You have to call Dispose explicitly from the main thread. This will likely result in a crash.", "SetKeys: Invalid input ColorKey array", "Max number of color keys is %d (given %d)", "SetKeys: Invalid input AlphaKey array", "Max number of alpha keys is %d (given %d)", "Look rotation viewing vector is zero", "CHECK_PTR", "CommandBuffer.DrawProceduralIndirect with null buffer", "Invalid color buffer count for SetRenderTarget", "Input path is null.", "Trying to access pass %d, but material '%s' subshader (0) has only %d valid passes.", "Trying to copy properties from null material.", "Could not create sprite (%f, %f, %f, %f) from a %dx%d texture.", "Sprite is not rectangle-packed. TextureRect is invalid.", "Sprite is not packed.", "Sprite is not rectangle-packed. TextureRectOffset is invalid.", "Not allowed to override geometry on sprite '%s'", "No valid crossdomain policy available to allow access", "Unauthorized use of Caching API.", "Unable to assign a value to Caching.enabled. This property is read-only.", "Priority can't be set to negative value", "Error Invoking UnityEvent", "External Call: %s", "Committing suicide -- Intentionally Dereferencing NULL pointer\n", "Intentionally caused fatal error", "Invalid color buffer count for SetTargetBuffers", "Passed in array to fill with cameras is to small to hold the number of cameras. Use Camera.allCamerasCount to get the needed size.", "Cubemap must not be null", " Array needs to contain exactly 32 floats for layerCullDistances.", "Camera to copy from must not be null", "UnityEngine.Camera::get_fieldOfView", "UnityEngine.Camera::set_fieldOfView", "UnityEngine.Camera::get_nearClipPlane", "UnityEngine.Camera::set_nearClipPlane", "UnityEngine.Camera::get_farClipPlane", "UnityEngine.Camera::set_farClipPlane", "UnityEngine.Camera::get_renderingPath", "UnityEngine.Camera::set_renderingPath", "UnityEngine.Camera::get_actualRenderingPath", "UnityEngine.Camera::get_hdr", "UnityEngine.Camera::set_hdr", "UnityEngine.Camera::GetHDRWarnings", "UnityEngine.Camera::get_orthographicSize", "UnityEngine.Camera::set_orthographicSize", "UnityEngine.Camera::get_orthographic", "UnityEngine.Camera::set_orthographic", "UnityEngine.Camera::get_opaqueSortMode", "UnityEngine.Camera::set_opaqueSortMode", "UnityEngine.Camera::get_transparencySortMode", "UnityEngine.Camera::set_transparencySortMode", "UnityEngine.Camera::get_depth", "UnityEngine.Camera::set_depth", "UnityEngine.Camera::get_aspect", "UnityEngine.Camera::set_aspect", "UnityEngine.Camera::get_cullingMask", "UnityEngine.Camera::set_cullingMask", "UnityEngine.Camera::get_PreviewCullingLayer", "UnityEngine.Camera::get_eventMask", "UnityEngine.Camera::set_eventMask", "UnityEngine.Camera::INTERNAL_get_backgroundColor", "UnityEngine.Camera::INTERNAL_set_backgroundColor", "UnityEngine.Camera::INTERNAL_get_rect", "UnityEngine.Camera::INTERNAL_set_rect", "UnityEngine.Camera::INTERNAL_get_pixelRect", "UnityEngine.Camera::INTERNAL_set_pixelRect", "UnityEngine.Camera::get_targetTexture", "UnityEngine.Camera::set_targetTexture", "UnityEngine.Camera::SetTargetBuffersImpl", "UnityEngine.Camera::SetTargetBuffersMRTImpl", "UnityEngine.Camera::get_pixelWidth", "UnityEngine.Camera::get_pixelHeight", "UnityEngine.Camera::INTERNAL_get_cameraToWorldMatrix", "UnityEngine.Camera::INTERNAL_get_worldToCameraMatrix", "UnityEngine.Camera::INTERNAL_set_worldToCameraMatrix", "UnityEngine.Camera::INTERNAL_CALL_ResetWorldToCameraMatrix", "UnityEngine.Camera::INTERNAL_get_projectionMatrix", "UnityEngine.Camera::INTERNAL_set_projectionMatrix", "UnityEngine.Camera::INTERNAL_CALL_ResetProjectionMatrix", "UnityEngine.Camera::INTERNAL_CALL_ResetAspect", "UnityEngine.Camera::INTERNAL_get_velocity", "UnityEngine.Camera::get_clearFlags", "UnityEngine.Camera::set_clearFlags", "UnityEngine.Camera::get_stereoEnabled", "UnityEngine.Camera::get_stereoSeparation", "UnityEngine.Camera::set_stereoSeparation", "UnityEngine.Camera::get_stereoConvergence", "UnityEngine.Camera::set_stereoConvergence", "UnityEngine.Camera::get_cameraType", "UnityEngine.Camera::set_cameraType", "UnityEngine.Camera::get_stereoMirrorMode", "UnityEngine.Camera::set_stereoMirrorMode", "UnityEngine.Camera::get_targetDisplay", "UnityEngine.Camera::set_targetDisplay", "UnityEngine.Camera::INTERNAL_CALL_WorldToScreenPoint", "UnityEngine.Camera::INTERNAL_CALL_WorldToViewportPoint", "UnityEngine.Camera::INTERNAL_CALL_ViewportToWorldPoint", "UnityEngine.Camera::INTERNAL_CALL_ScreenToWorldPoint", "UnityEngine.Camera::INTERNAL_CALL_ScreenToViewportPoint", "UnityEngine.Camera::INTERNAL_CALL_ViewportToScreenPoint", "UnityEngine.Camera::INTERNAL_CALL_ViewportPointToRay", "UnityEngine.Camera::INTERNAL_CALL_ScreenPointToRay", "UnityEngine.Camera::get_main", "UnityEngine.Camera::get_current", "UnityEngine.Camera::get_allCameras", "UnityEngine.Camera::get_allCamerasCount", "UnityEngine.Camera::GetAllCameras", "UnityEngine.Camera::Render", "UnityEngine.Camera::RenderWithShader", "UnityEngine.Camera::SetReplacementShader", "UnityEngine.Camera::INTERNAL_CALL_ResetReplacementShader", "UnityEngine.Camera::get_useOcclusionCulling", "UnityEngine.Camera::set_useOcclusionCulling", "UnityEngine.Camera::RenderDontRestore", "UnityEngine.Camera::SetupCurrent", "UnityEngine.Camera::Internal_RenderToCubemapRT", "UnityEngine.Camera::Internal_RenderToCubemapTexture", "UnityEngine.Camera::get_layerCullDistances", "UnityEngine.Camera::set_layerCullDistances", "UnityEngine.Camera::get_layerCullSpherical", "UnityEngine.Camera::set_layerCullSpherical", "UnityEngine.Camera::CopyFrom", "UnityEngine.Camera::get_depthTextureMode", "UnityEngine.Camera::set_depthTextureMode", "UnityEngine.Camera::get_clearStencilAfterLightingPass", "UnityEngine.Camera::set_clearStencilAfterLightingPass", "UnityEngine.Camera::IsFiltered", "UnityEngine.Camera::AddCommandBuffer", "UnityEngine.Camera::RemoveCommandBuffer", "UnityEngine.Camera::RemoveCommandBuffers", "UnityEngine.Camera::RemoveAllCommandBuffers", "UnityEngine.Camera::GetCommandBuffers", "UnityEngine.Camera::get_commandBufferCount", "UnityEngine.Camera::INTERNAL_CALL_RaycastTry", "UnityEngine.Camera::INTERNAL_CALL_RaycastTry2D", "UnityEngine.Camera::INTERNAL_CALL_CalculateObliqueMatrix", "UnityEngine.Behaviour::get_enabled", "UnityEngine.Behaviour::set_enabled", "UnityEngine.Behaviour::get_isActiveAndEnabled", "UnityEngine.WeakListenerBindings::InvokeCallbacks", "UnityEngine.Application::Quit", "UnityEngine.Application::CancelQuit", "UnityEngine.Application::get_loadedLevel", "UnityEngine.Application::get_loadedLevelName", "UnityEngine.Application::LoadLevelAsync", "UnityEngine.Application::UnloadLevel", "UnityEngine.Application::get_isLoadingLevel", "UnityEngine.Application::get_levelCount", "UnityEngine.Application::GetStreamProgressForLevelByName", "UnityEngine.Application::GetStreamProgressForLevel", "UnityEngine.Application::get_streamedBytes", "UnityEngine.Application::CanStreamedLevelBeLoadedByName", "UnityEngine.Application::CanStreamedLevelBeLoaded", "UnityEngine.Application::get_isPlaying", "UnityEngine.Application::get_isEditor", "UnityEngine.Application::get_isWebPlayer", "UnityEngine.Application::get_platform", "UnityEngine.Application::CaptureScreenshot", "UnityEngine.Application::get_runInBackground", "UnityEngine.Application::set_runInBackground", "UnityEngine.Application::HasProLicense", "UnityEngine.Application::HasAdvancedLicense", "UnityEngine.Application::get_isBatchmode", "UnityEngine.Application::get_isHumanControllingUs", "UnityEngine.Application::get_isRunningUnitTests", "UnityEngine.Application::HasARGV", "UnityEngine.Application::GetValueForARGV", "UnityEngine.Application::DontDestroyOnLoad", "UnityEngine.Application::get_dataPath", "UnityEngine.Application::get_streamingAssetsPath", "UnityEngine.Application::get_persistentDataPath", "UnityEngine.Application::get_temporaryCachePath", "UnityEngine.Application::get_srcValue", "UnityEngine.Application::get_absoluteURL", "UnityEngine.Application::Internal_ExternalCall", "UnityEngine.Application::get_unityVersion", "UnityEngine.Application::GetBuildUnityVersion", "UnityEngine.Application::GetNumericUnityVersion", "UnityEngine.Application::get_version", "UnityEngine.Application::get_bundleIdentifier", "UnityEngine.Application::get_installMode", "UnityEngine.Application::get_sandboxType", "UnityEngine.Application::get_productName", "UnityEngine.Application::get_companyName", "UnityEngine.Application::get_cloudProjectId", "UnityEngine.Application::get_webSecurityEnabled", "UnityEngine.Application::get_webSecurityHostUrl", "UnityEngine.Application::OpenURL", "UnityEngine.Application::CommitSuicide", "UnityEngine.Application::get_targetFrameRate", "UnityEngine.Application::set_targetFrameRate", "UnityEngine.Application::get_systemLanguage", "UnityEngine.Application::SetLogCallbackDefined", "UnityEngine.Application::get_stackTraceLogType", "UnityEngine.Application::set_stackTraceLogType", "UnityEngine.Application::get_backgroundLoadingPriority", "UnityEngine.Application::set_backgroundLoadingPriority", "UnityEngine.Application::get_internetReachability", "UnityEngine.Application::get_genuine", "UnityEngine.Application::get_genuineCheckAvailable", "UnityEngine.Application::RequestUserAuthorization", "UnityEngine.Application::HasUserAuthorization", "UnityEngine.Application::ReplyToUserAuthorizationRequest", "UnityEngine.Application::GetUserAuthorizationRequestMode_Internal", "UnityEngine.Application::get_submitAnalytics", "UnityEngine.Application::get_isShowingSplashScreen", "UnityEngine.AsyncOperation::InternalDestroy", "UnityEngine.AsyncOperation::get_isDone", "UnityEngine.AsyncOperation::get_progress", "UnityEngine.AsyncOperation::get_priority", "UnityEngine.AsyncOperation::set_priority", "UnityEngine.AsyncOperation::get_allowSceneActivation", "UnityEngine.AsyncOperation::set_allowSceneActivation", "UnityEngine.ColorUtility::DoTryParseHtmlColor", "UnityEngine.Hash128::Parse", "UnityEngine.Hash128::Internal_Hash128ToString", "UnityEngine.WWW::DestroyWWW", "UnityEngine.WWW::InitWWW", "UnityEngine.WWW::enforceWebSecurityRestrictions", "UnityEngine.WWW::get_responseHeadersString", "UnityEngine.WWW::get_bytes", "UnityEngine.WWW::get_size", "UnityEngine.WWW::get_error", "UnityEngine.WWW::GetTexture", "UnityEngine.WWW::GetAudioClipInternal", "UnityEngine.WWW::LoadImageIntoTexture", "UnityEngine.WWW::get_isDone", "UnityEngine.WWW::GetURL", "UnityEngine.WWW::get_progress", "UnityEngine.WWW::get_uploadProgress", "UnityEngine.WWW::get_bytesDownloaded", "UnityEngine.WWW::get_url", "UnityEngine.WWW::get_assetBundle", "UnityEngine.WWW::get_threadPriority", "UnityEngine.WWW::set_threadPriority", "UnityEngine.WWW::INTERNAL_CALL_WWW", "UnityEngine.Caching::Authorize", "UnityEngine.Caching::CleanCache", "UnityEngine.Caching::CleanNamedCache", "UnityEngine.Caching::DeleteFromCache", "UnityEngine.Caching::GetVersionFromCache", "UnityEngine.Caching::INTERNAL_CALL_IsVersionCached", "UnityEngine.Caching::INTERNAL_CALL_MarkAsUsed", "UnityEngine.Caching::get_index", "UnityEngine.Caching::get_spaceFree", "UnityEngine.Caching::get_maximumAvailableDiskSpace", "UnityEngine.Caching::set_maximumAvailableDiskSpace", "UnityEngine.Caching::get_spaceOccupied", "UnityEngine.Caching::get_spaceAvailable", "UnityEngine.Caching::get_spaceUsed", "UnityEngine.Caching::get_expirationDelay", "UnityEngine.Caching::set_expirationDelay", "UnityEngine.Caching::get_enabled", "UnityEngine.Caching::set_enabled", "UnityEngine.Caching::get_ready", "UnityEngine.UnityLogWriter::WriteStringToUnityLog", "UnityEngine.UnityEventQueueSystem::GetGlobalEventQueue", "WWW class has already been disposed.", "UnityEngine.Sprite::INTERNAL_CALL_Create", "UnityEngine.Sprite::INTERNAL_get_bounds", "UnityEngine.Sprite::INTERNAL_get_rect", "UnityEngine.Sprite::get_pixelsPerUnit", "UnityEngine.Sprite::get_texture", "UnityEngine.Sprite::INTERNAL_get_textureRect", "UnityEngine.Sprite::get_packed", "UnityEngine.Sprite::get_packingMode", "UnityEngine.Sprite::get_packingRotation", "UnityEngine.Sprite::Internal_GetTextureRectOffset", "UnityEngine.Sprite::Internal_GetPivot", "UnityEngine.Sprite::INTERNAL_get_border", "UnityEngine.Sprite::get_vertices", "UnityEngine.Sprite::get_triangles", "UnityEngine.Sprite::get_uv", "UnityEngine.Sprite::OverrideGeometry", "UnityEngine.SpriteRenderer::GetSprite_INTERNAL", "UnityEngine.SpriteRenderer::SetSprite_INTERNAL", "UnityEngine.SpriteRenderer::INTERNAL_get_color", "UnityEngine.SpriteRenderer::INTERNAL_set_color", "UnityEngine.Sprites.DataUtility::GetInnerUV", "UnityEngine.Sprites.DataUtility::GetOuterUV", "UnityEngine.Sprites.DataUtility::GetPadding", "UnityEngine.Sprites.DataUtility::Internal_GetMinSize", "UnityEngine.ProceduralMaterial::GetProceduralPropertyDescriptions", "UnityEngine.ProceduralMaterial::HasProceduralProperty", "UnityEngine.ProceduralMaterial::GetProceduralBoolean", "UnityEngine.ProceduralMaterial::IsProceduralPropertyVisible", "UnityEngine.ProceduralMaterial::SetProceduralBoolean", "UnityEngine.ProceduralMaterial::GetProceduralFloat", "UnityEngine.ProceduralMaterial::SetProceduralFloat", "UnityEngine.ProceduralMaterial::GetProceduralVector", "UnityEngine.ProceduralMaterial::INTERNAL_CALL_SetProceduralVector", "UnityEngine.ProceduralMaterial::GetProceduralColor", "UnityEngine.ProceduralMaterial::INTERNAL_CALL_SetProceduralColor", "UnityEngine.ProceduralMaterial::GetProceduralEnum", "UnityEngine.ProceduralMaterial::SetProceduralEnum", "UnityEngine.ProceduralMaterial::GetProceduralTexture", "UnityEngine.ProceduralMaterial::SetProceduralTexture", "UnityEngine.ProceduralMaterial::IsProceduralPropertyCached", "UnityEngine.ProceduralMaterial::CacheProceduralProperty", "UnityEngine.ProceduralMaterial::ClearCache", "UnityEngine.ProceduralMaterial::get_cacheSize", "UnityEngine.ProceduralMaterial::set_cacheSize", "UnityEngine.ProceduralMaterial::get_animationUpdateRate", "UnityEngine.ProceduralMaterial::set_animationUpdateRate", "UnityEngine.ProceduralMaterial::RebuildTextures", "UnityEngine.ProceduralMaterial::RebuildTexturesImmediately", "UnityEngine.ProceduralMaterial::get_isProcessing", "UnityEngine.ProceduralMaterial::StopRebuilds", "UnityEngine.ProceduralMaterial::get_isCachedDataAvailable", "UnityEngine.ProceduralMaterial::get_isLoadTimeGenerated", "UnityEngine.ProceduralMaterial::set_isLoadTimeGenerated", "UnityEngine.ProceduralMaterial::get_loadingBehavior", "UnityEngine.ProceduralMaterial::get_isSupported", "UnityEngine.ProceduralMaterial::get_substanceProcessorUsage", "UnityEngine.ProceduralMaterial::set_substanceProcessorUsage", "UnityEngine.ProceduralMaterial::get_preset", "UnityEngine.ProceduralMaterial::set_preset", "UnityEngine.ProceduralMaterial::GetGeneratedTextures", "UnityEngine.ProceduralMaterial::GetGeneratedTexture", "UnityEngine.ProceduralMaterial::get_isReadable", "UnityEngine.ProceduralMaterial::set_isReadable", "UnityEngine.ProceduralTexture::GetProceduralOutputType", "UnityEngine.ProceduralTexture::GetProceduralMaterial", "UnityEngine.ProceduralTexture::get_hasAlpha", "UnityEngine.ProceduralTexture::HasBeenGenerated", "UnityEngine.ProceduralTexture::get_format", "UnityEngine.ProceduralTexture::GetPixels32", "UnityEngine.Rendering.SphericalHarmonicsL2::INTERNAL_CALL_ClearInternal", "UnityEngine.Rendering.SphericalHarmonicsL2::INTERNAL_CALL_AddAmbientLightInternal", "UnityEngine.Rendering.SphericalHarmonicsL2::INTERNAL_CALL_AddDirectionalLightInternal", "UnityEngine.SortingLayer::GetSortingLayerIDsInternal", "UnityEngine.SortingLayer::GetLayerValueFromID", "UnityEngine.SortingLayer::GetLayerValueFromName", "UnityEngine.SortingLayer::NameToID", "UnityEngine.SortingLayer::IDToName", "UnityEngine.SortingLayer::IsValid", "UnityEngine.Shader::Find", "UnityEngine.Shader::FindBuiltin", "UnityEngine.Shader::get_isSupported", "UnityEngine.Shader::EnableKeyword", "UnityEngine.Shader::DisableKeyword", "UnityEngine.Shader::IsKeywordEnabled", "UnityEngine.Shader::get_maximumLOD", "UnityEngine.Shader::set_maximumLOD", "UnityEngine.Shader::get_globalMaximumLOD", "UnityEngine.Shader::set_globalMaximumLOD", "UnityEngine.Shader::get_renderQueue", "UnityEngine.Shader::get_disableBatching", "UnityEngine.Shader::INTERNAL_CALL_SetGlobalColor", "UnityEngine.Shader::SetGlobalFloat", "UnityEngine.Shader::SetGlobalTexture", "UnityEngine.Shader::INTERNAL_CALL_SetGlobalMatrix", "UnityEngine.Shader::SetGlobalTexGenMode", "UnityEngine.Shader::SetGlobalTextureMatrixName", "UnityEngine.Shader::SetGlobalBuffer", "UnityEngine.Shader::PropertyToID", "UnityEngine.Shader::WarmupAllShaders", "UnityEngine.Material::get_shader", "UnityEngine.Material::set_shader", "UnityEngine.Material::INTERNAL_CALL_SetColor", "UnityEngine.Material::GetColor", "UnityEngine.Material::SetTexture", "UnityEngine.Material::GetTexture", "UnityEngine.Material::Internal_GetTextureOffset", "UnityEngine.Material::Internal_GetTextureScale", "UnityEngine.Material::INTERNAL_CALL_SetTextureOffset", "UnityEngine.Material::INTERNAL_CALL_SetTextureScale", "UnityEngine.Material::INTERNAL_CALL_SetMatrix", "UnityEngine.Material::GetMatrix", "UnityEngine.Material::SetFloat", "UnityEngine.Material::GetFloat", "UnityEngine.Material::SetBuffer", "UnityEngine.Material::HasProperty", "UnityEngine.Material::GetTag", "UnityEngine.Material::SetOverrideTag", "UnityEngine.Material::Lerp", "UnityEngine.Material::get_passCount", "UnityEngine.Material::SetPass", "UnityEngine.Material::get_renderQueue", "UnityEngine.Material::set_renderQueue", "UnityEngine.Material::Internal_CreateWithString", "UnityEngine.Material::Internal_CreateWithShader", "UnityEngine.Material::Internal_CreateWithMaterial", "UnityEngine.Material::CopyPropertiesFromMaterial", "UnityEngine.Material::EnableKeyword", "UnityEngine.Material::DisableKeyword", "UnityEngine.Material::IsKeywordEnabled", "UnityEngine.Material::get_shaderKeywords", "UnityEngine.Material::set_shaderKeywords", "UnityEngine.Material::get_globalIlluminationFlags", "UnityEngine.Material::set_globalIlluminationFlags", "UnityEngine.ShaderVariantCollection/ShaderVariant::Internal_CheckVariant", "UnityEngine.ShaderVariantCollection::Internal_Create", "UnityEngine.ShaderVariantCollection::get_shaderCount", "UnityEngine.ShaderVariantCollection::get_variantCount", "UnityEngine.ShaderVariantCollection::AddInternal", "UnityEngine.ShaderVariantCollection::RemoveInternal", "UnityEngine.ShaderVariantCollection::ContainsInternal", "UnityEngine.ShaderVariantCollection::Clear", "UnityEngine.ShaderVariantCollection::get_isWarmedUp", "UnityEngine.ShaderVariantCollection::WarmUp", "UnityEngine.TextAsset::get_text", "UnityEngine.TextAsset::get_bytes", "UnityEngine.RuntimeUndo::SetTransformParent", "UnityEngine.RuntimeUndo::RecordObject", "UnityEngine.RuntimeUndo::RecordObjects", "UnityEngine.Resources::FindObjectsOfTypeAll", "UnityEngine.Resources::Load", "UnityEngine.Resources::LoadAsync", "UnityEngine.Resources::LoadAll", "UnityEngine.Resources::GetBuiltinResource", "UnityEngine.Resources::UnloadAsset", "UnityEngine.Resources::UnloadUnusedAssets", "UnityEngine.Rendering.CommandBuffer::InitBuffer", "UnityEngine.Rendering.CommandBuffer::ReleaseBuffer", "UnityEngine.Rendering.CommandBuffer::get_name", "UnityEngine.Rendering.CommandBuffer::set_name", "UnityEngine.Rendering.CommandBuffer::get_sizeInBytes", "UnityEngine.Rendering.CommandBuffer::Clear", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_DrawMesh", "UnityEngine.Rendering.CommandBuffer::DrawRenderer", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_DrawProcedural", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_DrawProceduralIndirect", "UnityEngine.Rendering.CommandBuffer::SetRenderTarget_Single", "UnityEngine.Rendering.CommandBuffer::SetRenderTarget_ColDepth", "UnityEngine.Rendering.CommandBuffer::SetRenderTarget_Multiple", "UnityEngine.Rendering.CommandBuffer::Blit_Texture", "UnityEngine.Rendering.CommandBuffer::Blit_Identifier", "UnityEngine.Rendering.CommandBuffer::GetTemporaryRT", "UnityEngine.Rendering.CommandBuffer::ReleaseTemporaryRT", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_ClearRenderTarget", "UnityEngine.Rendering.CommandBuffer::SetGlobalFloat", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_SetGlobalVector", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_SetGlobalColor", "UnityEngine.Rendering.CommandBuffer::INTERNAL_CALL_SetGlobalMatrix", "UnityEngine.Rendering.CommandBuffer::SetGlobalTexture_Impl", "UnityEngine.Rendering.CommandBuffer::IssuePluginEventInternal", "UnityEngine.RectTransform::INTERNAL_get_rect", "UnityEngine.RectTransform::INTERNAL_get_anchorMin", "UnityEngine.RectTransform::INTERNAL_set_anchorMin", "UnityEngine.RectTransform::INTERNAL_get_anchorMax", "UnityEngine.RectTransform::INTERNAL_set_anchorMax", "UnityEngine.RectTransform::INTERNAL_get_anchoredPosition", "UnityEngine.RectTransform::INTERNAL_set_anchoredPosition", "UnityEngine.RectTransform::INTERNAL_get_sizeDelta", "UnityEngine.RectTransform::INTERNAL_set_sizeDelta", "UnityEngine.RectTransform::INTERNAL_get_pivot", "UnityEngine.RectTransform::INTERNAL_set_pivot", "UnityEngine.RectTransform::get_drivenByObject", "UnityEngine.RectTransform::set_drivenByObject", "UnityEngine.RectTransform::get_drivenProperties", "UnityEngine.RectTransform::set_drivenProperties", "UnityEngine.NetworkPlayer::Internal_GetIPAddress", "UnityEngine.NetworkPlayer::Internal_GetPort", "UnityEngine.NetworkPlayer::Internal_GetExternalIP", "UnityEngine.NetworkPlayer::Internal_GetExternalPort", "UnityEngine.NetworkPlayer::Internal_GetLocalIP", "UnityEngine.NetworkPlayer::Internal_GetLocalPort", "UnityEngine.NetworkPlayer::Internal_GetPlayerIndex", "UnityEngine.NetworkPlayer::Internal_GetGUID", "UnityEngine.NetworkPlayer::Internal_GetLocalGUID", "UnityEngine.NetworkViewID::INTERNAL_get_unassigned", "UnityEngine.NetworkViewID::INTERNAL_CALL_Internal_IsMine", "UnityEngine.NetworkViewID::INTERNAL_CALL_Internal_GetOwner", "UnityEngine.NetworkViewID::INTERNAL_CALL_Internal_GetString", "UnityEngine.NetworkViewID::INTERNAL_CALL_Internal_Compare", "UnityEngine.Ping::.ctor", "UnityEngine.Ping::DestroyPing", "UnityEngine.Ping::get_isDone", "UnityEngine.Ping::get_time", "UnityEngine.Ping::get_ip", "UnityEngine.NetworkView::Internal_RPC", "UnityEngine.NetworkView::Internal_RPC_Target", "UnityEngine.NetworkView::get_observed", "UnityEngine.NetworkView::set_observed", "UnityEngine.NetworkView::get_stateSynchronization", "UnityEngine.NetworkView::set_stateSynchronization", "UnityEngine.NetworkView::Internal_GetViewID", "UnityEngine.NetworkView::INTERNAL_CALL_Internal_SetViewID", "UnityEngine.NetworkView::get_group", "UnityEngine.NetworkView::set_group", "UnityEngine.NetworkView::SetScope", "UnityEngine.NetworkView::INTERNAL_CALL_Find", "UnityEngine.Network::InitializeServer", "UnityEngine.Network::Internal_InitializeServerDeprecated", "UnityEngine.Network::get_incomingPassword", "UnityEngine.Network::set_incomingPassword", "UnityEngine.Network::get_logLevel", "UnityEngine.Network::set_logLevel", "UnityEngine.Network::InitializeSecurity", "UnityEngine.Network::Internal_ConnectToSingleIP", "UnityEngine.Network::Internal_ConnectToGuid", "UnityEngine.Network::Internal_ConnectToIPs", "UnityEngine.Network::Disconnect", "UnityEngine.Network::CloseConnection", "UnityEngine.Network::get_connections", "UnityEngine.Network::Internal_GetPlayer", "UnityEngine.Network::Internal_AllocateViewID", "UnityEngine.Network::INTERNAL_CALL_Instantiate", "UnityEngine.Network::INTERNAL_CALL_Destroy", "UnityEngine.Network::DestroyPlayerObjects", "UnityEngine.Network::INTERNAL_CALL_Internal_RemoveRPCs", "UnityEngine.Network::get_isClient", "UnityEngine.Network::get_isServer", "UnityEngine.Network::get_peerType", "UnityEngine.Network::SetLevelPrefix", "UnityEngine.Network::GetLastPing", "UnityEngine.Network::GetAveragePing", "UnityEngine.Network::get_sendRate", "UnityEngine.Network::set_sendRate", "UnityEngine.Network::get_isMessageQueueRunning", "UnityEngine.Network::set_isMessageQueueRunning", "UnityEngine.Network::SetReceivingEnabled", "UnityEngine.Network::Internal_SetSendingGlobal", "UnityEngine.Network::Internal_SetSendingSpecific", "UnityEngine.Network::Internal_GetTime", "UnityEngine.Network::get_minimumAllocatableViewIDs", "UnityEngine.Network::set_minimumAllocatableViewIDs", "UnityEngine.Network::get_useNat", "UnityEngine.Network::set_useNat", "UnityEngine.Network::get_natFacilitatorIP", "UnityEngine.Network::set_natFacilitatorIP", "UnityEngine.Network::get_natFacilitatorPort", "UnityEngine.Network::set_natFacilitatorPort", "UnityEngine.Network::TestConnection", "UnityEngine.Network::TestConnectionNAT", "UnityEngine.Network::get_connectionTesterIP", "UnityEngine.Network::set_connectionTesterIP", "UnityEngine.Network::get_connectionTesterPort", "UnityEngine.Network::set_connectionTesterPort", "UnityEngine.Network::HavePublicAddress", "UnityEngine.Network::get_maxConnections", "UnityEngine.Network::set_maxConnections", "UnityEngine.Network::get_proxyIP", "UnityEngine.Network::set_proxyIP", "UnityEngine.Network::get_proxyPort", "UnityEngine.Network::set_proxyPort", "UnityEngine.Network::get_useProxy", "UnityEngine.Network::set_useProxy", "UnityEngine.Network::get_proxyPassword", "UnityEngine.Network::set_proxyPassword", "UnityEngine.BitStream::Serializeb", "UnityEngine.BitStream::Serializec", "UnityEngine.BitStream::Serializes", "UnityEngine.BitStream::Serializei", "UnityEngine.BitStream::Serializef", "UnityEngine.BitStream::INTERNAL_CALL_Serializeq", "UnityEngine.BitStream::INTERNAL_CALL_Serializev", "UnityEngine.BitStream::INTERNAL_CALL_Serializen", "UnityEngine.BitStream::get_isReading", "UnityEngine.BitStream::get_isWriting", "UnityEngine.BitStream::Serialize", "UnityEngine.MasterServer::get_ipAddress", "UnityEngine.MasterServer::set_ipAddress", "UnityEngine.MasterServer::get_port", "UnityEngine.MasterServer::set_port", "UnityEngine.MasterServer::RequestHostList", "UnityEngine.MasterServer::PollHostList", "UnityEngine.MasterServer::RegisterHost", "UnityEngine.MasterServer::UnregisterHost", "UnityEngine.MasterServer::ClearHostList", "UnityEngine.MasterServer::get_updateRate", "UnityEngine.MasterServer::set_updateRate", "UnityEngine.MasterServer::get_dedicatedServer", "UnityEngine.MasterServer::set_dedicatedServer", "UnityEngine.NetworkMessageInfo::NullNetworkView", "UnityEngine.Vector3::INTERNAL_CALL_Slerp", "UnityEngine.Vector3::INTERNAL_CALL_SlerpUnclamped", "UnityEngine.Vector3::INTERNAL_CALL_Internal_OrthoNormalize2", "UnityEngine.Vector3::INTERNAL_CALL_Internal_OrthoNormalize3", "UnityEngine.Vector3::INTERNAL_CALL_RotateTowards", "UnityEngine.Quaternion::INTERNAL_CALL_AngleAxis", "UnityEngine.Quaternion::INTERNAL_CALL_FromToRotation", "UnityEngine.Quaternion::INTERNAL_CALL_LookRotation", "UnityEngine.Quaternion::INTERNAL_CALL_Slerp", "UnityEngine.Quaternion::INTERNAL_CALL_SlerpUnclamped", "UnityEngine.Quaternion::INTERNAL_CALL_Lerp", "UnityEngine.Quaternion::INTERNAL_CALL_LerpUnclamped", "UnityEngine.Quaternion::INTERNAL_CALL_Inverse", "UnityEngine.Quaternion::INTERNAL_CALL_Internal_ToEulerRad", "UnityEngine.Quaternion::INTERNAL_CALL_Internal_FromEulerRad", "UnityEngine.Quaternion::INTERNAL_CALL_Internal_ToAxisAngleRad", "UnityEngine.Quaternion::INTERNAL_CALL_AxisAngle", "UnityEngine.Matrix4x4::INTERNAL_CALL_Inverse", "UnityEngine.Matrix4x4::INTERNAL_CALL_Transpose", "UnityEngine.Matrix4x4::INTERNAL_CALL_Invert", "UnityEngine.Matrix4x4::get_isIdentity", "UnityEngine.Matrix4x4::INTERNAL_CALL_TRS", "UnityEngine.Matrix4x4::Ortho", "UnityEngine.Matrix4x4::Perspective", "UnityEngine.Bounds::INTERNAL_CALL_Internal_Contains", "UnityEngine.Bounds::INTERNAL_CALL_Internal_SqrDistance", "UnityEngine.Bounds::INTERNAL_CALL_Internal_IntersectRay", "UnityEngine.Bounds::INTERNAL_CALL_Internal_GetClosestPoint", "UnityEngine.Mathf::ClosestPowerOfTwo", "UnityEngine.Mathf::GammaToLinearSpace", "UnityEngine.Mathf::LinearToGammaSpace", "UnityEngine.Mathf::IsPowerOfTwo", "UnityEngine.Mathf::NextPowerOfTwo", "UnityEngine.Mathf::PerlinNoise", "UnityEngine.Mathf::FloatToHalf", "UnityEngine.Mathf::HalfToFloat", "UnityEngine.LightProbeGroup::get_probePositions", "UnityEngine.LightProbeGroup::set_probePositions", "UnityEngine.LayerMask::LayerToName", "UnityEngine.LayerMask::NameToLayer", "UnityEngine.Gizmos::INTERNAL_CALL_DrawLine", "UnityEngine.Gizmos::INTERNAL_CALL_DrawWireSphere", "UnityEngine.Gizmos::INTERNAL_CALL_DrawSphere", "UnityEngine.Gizmos::INTERNAL_CALL_DrawWireCube", "UnityEngine.Gizmos::INTERNAL_CALL_DrawCube", "UnityEngine.Gizmos::INTERNAL_CALL_DrawMesh", "UnityEngine.Gizmos::INTERNAL_CALL_DrawWireMesh", "UnityEngine.Gizmos::INTERNAL_CALL_DrawIcon", "UnityEngine.Gizmos::INTERNAL_CALL_DrawGUITexture", "UnityEngine.Gizmos::INTERNAL_get_color", "UnityEngine.Gizmos::INTERNAL_set_color", "UnityEngine.Gizmos::INTERNAL_get_matrix", "UnityEngine.Gizmos::INTERNAL_set_matrix", "UnityEngine.Gizmos::INTERNAL_CALL_DrawFrustum", "UnityEngine.Handheld::INTERNAL_CALL_PlayFullScreenMovie", "UnityEngine.Handheld::Vibrate", "UnityEngine.Handheld::get_use32BitDisplayBuffer", "UnityEngine.Handheld::set_use32BitDisplayBuffer", "UnityEngine.Handheld::SetActivityIndicatorStyleImpl", "UnityEngine.Handheld::GetActivityIndicatorStyle", "UnityEngine.Handheld::StartActivityIndicator", "UnityEngine.Handheld::StopActivityIndicator", "UnityEngine.Handheld::ClearShaderCache", "UnityEngine.TouchScreenKeyboard::Destroy", "UnityEngine.TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper", "UnityEngine.TouchScreenKeyboard::get_text", "UnityEngine.TouchScreenKeyboard::set_text", "UnityEngine.TouchScreenKeyboard::get_hideInput", "UnityEngine.TouchScreenKeyboard::set_hideInput", "UnityEngine.TouchScreenKeyboard::get_active", "UnityEngine.TouchScreenKeyboard::set_active", "UnityEngine.TouchScreenKeyboard::get_done", "UnityEngine.TouchScreenKeyboard::get_wasCanceled", "UnityEngine.TouchScreenKeyboard::get_targetDisplay", "UnityEngine.TouchScreenKeyboard::set_targetDisplay", "UnityEngine.TouchScreenKeyboard::INTERNAL_get_area", "UnityEngine.TouchScreenKeyboard::get_visible", "UnityEngine.Gradient::Init", "UnityEngine.Gradient::Cleanup", "UnityEngine.Gradient::Evaluate", "UnityEngine.Gradient::get_colorKeys", "UnityEngine.Gradient::set_colorKeys", "UnityEngine.Gradient::get_alphaKeys", "UnityEngine.Gradient::set_alphaKeys", "UnityEngine.Gradient::SetKeys", "UnityEngine.CullingGroup::Dispose", "UnityEngine.CullingGroup::get_enabled", "UnityEngine.CullingGroup::set_enabled", "UnityEngine.CullingGroup::get_targetCamera", "UnityEngine.CullingGroup::set_targetCamera", "UnityEngine.CullingGroup::SetBoundingSpheres", "UnityEngine.CullingGroup::SetBoundingSphereCount", "UnityEngine.CullingGroup::EraseSwapBack", "UnityEngine.CullingGroup::QueryIndices", "UnityEngine.CullingGroup::IsVisible", "UnityEngine.CullingGroup::GetDistance", "UnityEngine.CullingGroup::SetBoundingDistances", "UnityEngine.CullingGroup::INTERNAL_CALL_SetDistanceReferencePoint", "UnityEngine.CullingGroup::SetDistanceReferencePoint", "UnityEngine.CullingGroup::Init", "UnityEngine.CullingGroup::FinalizerFailure", "UnityEngine.LODGroup::INTERNAL_get_localReferencePoint", "UnityEngine.LODGroup::INTERNAL_set_localReferencePoint", "UnityEngine.LODGroup::get_size", "UnityEngine.LODGroup::set_size", "UnityEngine.LODGroup::get_lodCount", "UnityEngine.LODGroup::get_fadeMode", "UnityEngine.LODGroup::set_fadeMode", "UnityEngine.LODGroup::get_animateCrossFading", "UnityEngine.LODGroup::set_animateCrossFading", "UnityEngine.LODGroup::get_enabled", "UnityEngine.LODGroup::set_enabled", "UnityEngine.LODGroup::RecalculateBounds", "UnityEngine.LODGroup::GetLODs", "UnityEngine.LODGroup::SetLODs", "UnityEngine.LODGroup::ForceLOD", "UnityEngine.LODGroup::get_crossFadeAnimationDuration", "UnityEngine.LODGroup::set_crossFadeAnimationDuration", "UnityEngine.ReflectionProbe::get_type", "UnityEngine.ReflectionProbe::set_type", "UnityEngine.ReflectionProbe::get_hdr", "UnityEngine.ReflectionProbe::set_hdr", "UnityEngine.ReflectionProbe::INTERNAL_get_size", "UnityEngine.ReflectionProbe::INTERNAL_set_size", "UnityEngine.ReflectionProbe::INTERNAL_get_center", "UnityEngine.ReflectionProbe::INTERNAL_set_center", "UnityEngine.ReflectionProbe::get_nearClipPlane", "UnityEngine.ReflectionProbe::set_nearClipPlane", "UnityEngine.ReflectionProbe::get_farClipPlane", "UnityEngine.ReflectionProbe::set_farClipPlane", "UnityEngine.ReflectionProbe::get_shadowDistance", "UnityEngine.ReflectionProbe::set_shadowDistance", "UnityEngine.ReflectionProbe::get_resolution", "UnityEngine.ReflectionProbe::set_resolution", "UnityEngine.ReflectionProbe::get_cullingMask", "UnityEngine.ReflectionProbe::set_cullingMask", "UnityEngine.ReflectionProbe::get_clearFlags", "UnityEngine.ReflectionProbe::set_clearFlags", "UnityEngine.ReflectionProbe::INTERNAL_get_backgroundColor", "UnityEngine.ReflectionProbe::INTERNAL_set_backgroundColor", "UnityEngine.ReflectionProbe::get_intensity", "UnityEngine.ReflectionProbe::set_intensity", "UnityEngine.ReflectionProbe::get_blendDistance", "UnityEngine.ReflectionProbe::set_blendDistance", "UnityEngine.ReflectionProbe::get_boxProjection", "UnityEngine.ReflectionProbe::set_boxProjection", "UnityEngine.ReflectionProbe::INTERNAL_get_bounds", "UnityEngine.ReflectionProbe::get_mode", "UnityEngine.ReflectionProbe::set_mode", "UnityEngine.ReflectionProbe::get_importance", "UnityEngine.ReflectionProbe::set_importance", "UnityEngine.ReflectionProbe::get_refreshMode", "UnityEngine.ReflectionProbe::set_refreshMode", "UnityEngine.ReflectionProbe::get_timeSlicingMode", "UnityEngine.ReflectionProbe::set_timeSlicingMode", "UnityEngine.ReflectionProbe::get_bakedTexture", "UnityEngine.ReflectionProbe::set_bakedTexture", "UnityEngine.ReflectionProbe::get_customBakedTexture", "UnityEngine.ReflectionProbe::set_customBakedTexture", "UnityEngine.ReflectionProbe::get_texture", "UnityEngine.ReflectionProbe::RenderProbe", "UnityEngine.ReflectionProbe::IsFinishedRendering", "UnityEngine.ReflectionProbe::BlendCubemap", "UnityEngine.Texture::get_masterTextureLimit", "UnityEngine.Texture::set_masterTextureLimit", "UnityEngine.Texture::get_anisotropicFiltering", "UnityEngine.Texture::set_anisotropicFiltering", "UnityEngine.Texture::SetGlobalAnisotropicFilteringLimits", "UnityEngine.Texture::Internal_GetWidth", "UnityEngine.Texture::Internal_GetHeight", "UnityEngine.Texture::get_filterMode", "UnityEngine.Texture::set_filterMode", "UnityEngine.Texture::get_anisoLevel", "UnityEngine.Texture::set_anisoLevel", "UnityEngine.Texture::get_wrapMode", "UnityEngine.Texture::set_wrapMode", "UnityEngine.Texture::get_mipMapBias", "UnityEngine.Texture::set_mipMapBias", "UnityEngine.Texture::INTERNAL_get_texelSize", "UnityEngine.Texture::GetNativeTexturePtr", "UnityEngine.Texture::GetNativeTextureID", "UnityEngine.Texture2D::get_mipmapCount", "UnityEngine.Texture2D::Internal_Create", "UnityEngine.Texture2D::UpdateExternalTexture", "UnityEngine.Texture2D::get_format", "UnityEngine.Texture2D::get_whiteTexture", "UnityEngine.Texture2D::get_blackTexture", "UnityEngine.Texture2D::INTERNAL_CALL_SetPixel", "UnityEngine.Texture2D::GetPixel", "UnityEngine.Texture2D::GetPixelBilinear", "UnityEngine.Texture2D::SetPixels", "UnityEngine.Texture2D::SetAllPixels32", "UnityEngine.Texture2D::SetBlockOfPixels32", "UnityEngine.Texture2D::LoadImage", "UnityEngine.Texture2D::LoadRawTextureData", "UnityEngine.Texture2D::GetRawTextureData", "UnityEngine.Texture2D::GetPixels", "UnityEngine.Texture2D::GetPixels32", "UnityEngine.Texture2D::Apply", "UnityEngine.Texture2D::Resize", "UnityEngine.Texture2D::Internal_ResizeWH", "UnityEngine.Texture2D::INTERNAL_CALL_Compress", "UnityEngine.Texture2D::PackTextures", "UnityEngine.Texture2D::INTERNAL_CALL_ReadPixels", "UnityEngine.Texture2D::EncodeToPNG", "UnityEngine.Texture2D::EncodeToJPG", "UnityEngine.Cubemap::INTERNAL_CALL_SetPixel", "UnityEngine.Cubemap::GetPixel", "UnityEngine.Cubemap::GetPixels", "UnityEngine.Cubemap::SetPixels", "UnityEngine.Cubemap::get_mipmapCount", "UnityEngine.Cubemap::Apply", "UnityEngine.Cubemap::get_format", "UnityEngine.Cubemap::Internal_Create", "UnityEngine.Cubemap::SmoothEdges", "UnityEngine.Texture3D::get_depth", "UnityEngine.Texture3D::GetPixels", "UnityEngine.Texture3D::GetPixels32", "UnityEngine.Texture3D::SetPixels", "UnityEngine.Texture3D::SetPixels32", "UnityEngine.Texture3D::Apply", "UnityEngine.Texture3D::get_format", "UnityEngine.Texture3D::Internal_Create", "UnityEngine.SparseTexture::get_tileWidth", "UnityEngine.SparseTexture::get_tileHeight", "UnityEngine.SparseTexture::get_isCreated", "UnityEngine.SparseTexture::Internal_Create", "UnityEngine.SparseTexture::UpdateTile", "UnityEngine.SparseTexture::UpdateTileRaw", "UnityEngine.SparseTexture::UnloadTile", "UnityEngine.RenderTexture::Internal_CreateRenderTexture", "UnityEngine.RenderTexture::GetTemporary", "UnityEngine.RenderTexture::ReleaseTemporary", "UnityEngine.RenderTexture::Internal_GetWidth", "UnityEngine.RenderTexture::Internal_SetWidth", "UnityEngine.RenderTexture::Internal_GetHeight", "UnityEngine.RenderTexture::Internal_SetHeight", "UnityEngine.RenderTexture::Internal_SetSRGBReadWrite", "UnityEngine.RenderTexture::get_depth", "UnityEngine.RenderTexture::set_depth", "UnityEngine.RenderTexture::get_isPowerOfTwo", "UnityEngine.RenderTexture::set_isPowerOfTwo", "UnityEngine.RenderTexture::get_sRGB", "UnityEngine.RenderTexture::get_format", "UnityEngine.RenderTexture::set_format", "UnityEngine.RenderTexture::get_useMipMap", "UnityEngine.RenderTexture::set_useMipMap", "UnityEngine.RenderTexture::get_generateMips", "UnityEngine.RenderTexture::set_generateMips", "UnityEngine.RenderTexture::get_isCubemap", "UnityEngine.RenderTexture::set_isCubemap", "UnityEngine.RenderTexture::get_isVolume", "UnityEngine.RenderTexture::set_isVolume", "UnityEngine.RenderTexture::get_volumeDepth", "UnityEngine.RenderTexture::set_volumeDepth", "UnityEngine.RenderTexture::get_antiAliasing", "UnityEngine.RenderTexture::set_antiAliasing", "UnityEngine.RenderTexture::get_enableRandomWrite", "UnityEngine.RenderTexture::set_enableRandomWrite", "UnityEngine.RenderTexture::INTERNAL_CALL_Create", "UnityEngine.RenderTexture::INTERNAL_CALL_Release", "UnityEngine.RenderTexture::INTERNAL_CALL_IsCreated", "UnityEngine.RenderTexture::INTERNAL_CALL_DiscardContents", "UnityEngine.RenderTexture::DiscardContents", "UnityEngine.RenderTexture::INTERNAL_CALL_MarkRestoreExpected", "UnityEngine.RenderTexture::GetColorBuffer", "UnityEngine.RenderTexture::GetDepthBuffer", "UnityEngine.RenderTexture::SetGlobalShaderProperty", "UnityEngine.RenderTexture::get_active", "UnityEngine.RenderTexture::set_active", "UnityEngine.RenderTexture::get_enabled", "UnityEngine.RenderTexture::set_enabled", "UnityEngine.RenderTexture::Internal_GetTexelOffset", "UnityEngine.RenderTexture::SupportsStencil", "Reading from the screen is not allowed when you have used a downloaded texture without proper crossdomain.xml authorization", "UnityEngine.GUIElement::INTERNAL_CALL_HitTest", "UnityEngine.GUIElement::GetScreenRect", "UnityEngine.GUITexture::INTERNAL_get_color", "UnityEngine.GUITexture::INTERNAL_set_color", "UnityEngine.GUITexture::get_texture", "UnityEngine.GUITexture::set_texture", "UnityEngine.GUITexture::INTERNAL_get_pixelInset", "UnityEngine.GUITexture::INTERNAL_set_pixelInset", "UnityEngine.GUITexture::get_border", "UnityEngine.GUITexture::set_border", "UnityEngine.GUILayer::INTERNAL_CALL_HitTest", "UnityEngine.OcclusionArea::INTERNAL_get_center", "UnityEngine.OcclusionArea::INTERNAL_set_center", "UnityEngine.OcclusionArea::INTERNAL_get_size", "UnityEngine.OcclusionArea::INTERNAL_set_size", "UnityEngine.OcclusionPortal::get_open", "UnityEngine.OcclusionPortal::set_open", "UnityEngine.RenderSettings::get_fog", "UnityEngine.RenderSettings::set_fog", "UnityEngine.RenderSettings::get_fogMode", "UnityEngine.RenderSettings::set_fogMode", "UnityEngine.RenderSettings::INTERNAL_get_fogColor", "UnityEngine.RenderSettings::INTERNAL_set_fogColor", "UnityEngine.RenderSettings::get_fogDensity", "UnityEngine.RenderSettings::set_fogDensity", "UnityEngine.RenderSettings::get_fogStartDistance", "UnityEngine.RenderSettings::set_fogStartDistance", "UnityEngine.RenderSettings::get_fogEndDistance", "UnityEngine.RenderSettings::set_fogEndDistance", "UnityEngine.RenderSettings::get_ambientMode", "UnityEngine.RenderSettings::set_ambientMode", "UnityEngine.RenderSettings::INTERNAL_get_ambientSkyColor", "UnityEngine.RenderSettings::INTERNAL_set_ambientSkyColor", "UnityEngine.RenderSettings::INTERNAL_get_ambientEquatorColor", "UnityEngine.RenderSettings::INTERNAL_set_ambientEquatorColor", "UnityEngine.RenderSettings::INTERNAL_get_ambientGroundColor", "UnityEngine.RenderSettings::INTERNAL_set_ambientGroundColor", "UnityEngine.RenderSettings::INTERNAL_get_ambientLight", "UnityEngine.RenderSettings::INTERNAL_set_ambientLight", "UnityEngine.RenderSettings::get_ambientIntensity", "UnityEngine.RenderSettings::set_ambientIntensity", "UnityEngine.RenderSettings::INTERNAL_get_ambientProbe", "UnityEngine.RenderSettings::INTERNAL_set_ambientProbe", "UnityEngine.RenderSettings::get_reflectionIntensity", "UnityEngine.RenderSettings::set_reflectionIntensity", "UnityEngine.RenderSettings::get_reflectionBounces", "UnityEngine.RenderSettings::set_reflectionBounces", "UnityEngine.RenderSettings::get_haloStrength", "UnityEngine.RenderSettings::set_haloStrength", "UnityEngine.RenderSettings::get_flareStrength", "UnityEngine.RenderSettings::set_flareStrength", "UnityEngine.RenderSettings::get_flareFadeSpeed", "UnityEngine.RenderSettings::set_flareFadeSpeed", "UnityEngine.RenderSettings::get_skybox", "UnityEngine.RenderSettings::set_skybox", "UnityEngine.RenderSettings::get_defaultReflectionMode", "UnityEngine.RenderSettings::set_defaultReflectionMode", "UnityEngine.RenderSettings::get_defaultReflectionResolution", "UnityEngine.RenderSettings::set_defaultReflectionResolution", "UnityEngine.RenderSettings::get_customReflection", "UnityEngine.RenderSettings::set_customReflection", "UnityEngine.RenderSettings::Reset", "UnityEngine.RenderSettings::GetRenderSettings", "UnityEngine.QualitySettings::get_names", "UnityEngine.QualitySettings::GetQualityLevel", "UnityEngine.QualitySettings::SetQualityLevel", "UnityEngine.QualitySettings::get_currentLevel", "UnityEngine.QualitySettings::set_currentLevel", "UnityEngine.QualitySettings::IncreaseLevel", "UnityEngine.QualitySettings::DecreaseLevel", "UnityEngine.QualitySettings::get_pixelLightCount", "UnityEngine.QualitySettings::set_pixelLightCount", "UnityEngine.QualitySettings::get_shadowProjection", "UnityEngine.QualitySettings::set_shadowProjection", "UnityEngine.QualitySettings::get_shadowCascades", "UnityEngine.QualitySettings::set_shadowCascades", "UnityEngine.QualitySettings::get_shadowDistance", "UnityEngine.QualitySettings::set_shadowDistance", "UnityEngine.QualitySettings::get_shadowNearPlaneOffset", "UnityEngine.QualitySettings::set_shadowNearPlaneOffset", "UnityEngine.QualitySettings::get_shadowCascade2Split", "UnityEngine.QualitySettings::set_shadowCascade2Split", "UnityEngine.QualitySettings::INTERNAL_get_shadowCascade4Split", "UnityEngine.QualitySettings::INTERNAL_set_shadowCascade4Split", "UnityEngine.QualitySettings::get_masterTextureLimit", "UnityEngine.QualitySettings::set_masterTextureLimit", "UnityEngine.QualitySettings::get_anisotropicFiltering", "UnityEngine.QualitySettings::set_anisotropicFiltering", "UnityEngine.QualitySettings::get_lodBias", "UnityEngine.QualitySettings::set_lodBias", "UnityEngine.QualitySettings::get_maximumLODLevel", "UnityEngine.QualitySettings::set_maximumLODLevel", "UnityEngine.QualitySettings::get_particleRaycastBudget", "UnityEngine.QualitySettings::set_particleRaycastBudget", "UnityEngine.QualitySettings::get_softVegetation", "UnityEngine.QualitySettings::set_softVegetation", "UnityEngine.QualitySettings::get_realtimeReflectionProbes", "UnityEngine.QualitySettings::set_realtimeReflectionProbes", "UnityEngine.QualitySettings::get_billboardsFaceCameraPosition", "UnityEngine.QualitySettings::set_billboardsFaceCameraPosition", "UnityEngine.QualitySettings::get_maxQueuedFrames", "UnityEngine.QualitySettings::set_maxQueuedFrames", "UnityEngine.QualitySettings::get_vSyncCount", "UnityEngine.QualitySettings::set_vSyncCount", "UnityEngine.QualitySettings::get_antiAliasing", "UnityEngine.QualitySettings::set_antiAliasing", "UnityEngine.QualitySettings::get_desiredColorSpace", "UnityEngine.QualitySettings::get_activeColorSpace", "UnityEngine.QualitySettings::get_blendWeights", "UnityEngine.QualitySettings::set_blendWeights", "UnityEngine.MeshFilter::get_mesh", "UnityEngine.MeshFilter::set_mesh", "UnityEngine.MeshFilter::get_sharedMesh", "UnityEngine.MeshFilter::set_sharedMesh", "UnityEngine.CombineInstance::InternalGetMesh", "UnityEngine.Mesh::Internal_Create", "UnityEngine.Mesh::Clear", "UnityEngine.Mesh::get_isReadable", "UnityEngine.Mesh::get_canAccess", "UnityEngine.Mesh::get_vertices", "UnityEngine.Mesh::set_vertices", "UnityEngine.Mesh::SetVerticesInternal", "UnityEngine.Mesh::get_normals", "UnityEngine.Mesh::set_normals", "UnityEngine.Mesh::SetNormalsInternal", "UnityEngine.Mesh::get_tangents", "UnityEngine.Mesh::set_tangents", "UnityEngine.Mesh::SetTangentsInternal", "UnityEngine.Mesh::get_uv", "UnityEngine.Mesh::set_uv", "UnityEngine.Mesh::get_uv2", "UnityEngine.Mesh::set_uv2", "UnityEngine.Mesh::get_uv3", "UnityEngine.Mesh::set_uv3", "UnityEngine.Mesh::get_uv4", "UnityEngine.Mesh::set_uv4", "UnityEngine.Mesh::SetUVInternal", "UnityEngine.Mesh::INTERNAL_get_bounds", "UnityEngine.Mesh::INTERNAL_set_bounds", "UnityEngine.Mesh::get_colors", "UnityEngine.Mesh::set_colors", "UnityEngine.Mesh::SetColorsInternal", "UnityEngine.Mesh::get_colors32", "UnityEngine.Mesh::set_colors32", "UnityEngine.Mesh::SetColors32Internal", "UnityEngine.Mesh::RecalculateBounds", "UnityEngine.Mesh::RecalculateNormals", "UnityEngine.Mesh::Optimize", "UnityEngine.Mesh::get_triangles", "UnityEngine.Mesh::set_triangles", "UnityEngine.Mesh::GetTriangles", "UnityEngine.Mesh::SetTriangles", "UnityEngine.Mesh::SetTrianglesInternal", "UnityEngine.Mesh::GetIndices", "UnityEngine.Mesh::SetIndices", "UnityEngine.Mesh::GetTopology", "UnityEngine.Mesh::get_vertexCount", "UnityEngine.Mesh::get_subMeshCount", "UnityEngine.Mesh::set_subMeshCount", "UnityEngine.Mesh::CombineMeshes", "UnityEngine.Mesh::get_boneWeights", "UnityEngine.Mesh::set_boneWeights", "UnityEngine.Mesh::get_bindposes", "UnityEngine.Mesh::set_bindposes", "UnityEngine.Mesh::MarkDynamic", "UnityEngine.Mesh::UploadMeshData", "UnityEngine.Mesh::get_blendShapeCount", "UnityEngine.Mesh::GetBlendShapeName", "UnityEngine.Mesh::GetBlendShapeIndex", "UnityEngine.SkinnedMeshRenderer::get_bones", "UnityEngine.SkinnedMeshRenderer::set_bones", "UnityEngine.SkinnedMeshRenderer::get_rootBone", "UnityEngine.SkinnedMeshRenderer::set_rootBone", "UnityEngine.SkinnedMeshRenderer::get_quality", "UnityEngine.SkinnedMeshRenderer::set_quality", "UnityEngine.SkinnedMeshRenderer::get_sharedMesh", "UnityEngine.SkinnedMeshRenderer::set_sharedMesh", "UnityEngine.SkinnedMeshRenderer::get_updateWhenOffscreen", "UnityEngine.SkinnedMeshRenderer::set_updateWhenOffscreen", "UnityEngine.SkinnedMeshRenderer::INTERNAL_get_localBounds", "UnityEngine.SkinnedMeshRenderer::INTERNAL_set_localBounds", "UnityEngine.SkinnedMeshRenderer::BakeMesh", "UnityEngine.SkinnedMeshRenderer::GetBlendShapeWeight", "UnityEngine.SkinnedMeshRenderer::SetBlendShapeWeight", "UnityEngine.LensFlare::get_flare", "UnityEngine.LensFlare::set_flare", "UnityEngine.LensFlare::get_brightness", "UnityEngine.LensFlare::set_brightness", "UnityEngine.LensFlare::get_fadeSpeed", "UnityEngine.LensFlare::set_fadeSpeed", "UnityEngine.LensFlare::INTERNAL_get_color", "UnityEngine.LensFlare::INTERNAL_set_color", "UnityEngine.Renderer::get_staticBatchRootTransform", "UnityEngine.Renderer::set_staticBatchRootTransform", "UnityEngine.Renderer::get_staticBatchIndex", "UnityEngine.Renderer::SetSubsetIndex", "UnityEngine.Renderer::get_isPartOfStaticBatch", "UnityEngine.Renderer::INTERNAL_get_worldToLocalMatrix", "UnityEngine.Renderer::INTERNAL_get_localToWorldMatrix", "UnityEngine.Renderer::get_enabled", "UnityEngine.Renderer::set_enabled", "UnityEngine.Renderer::get_shadowCastingMode", "UnityEngine.Renderer::set_shadowCastingMode", "UnityEngine.Renderer::get_castShadows", "UnityEngine.Renderer::set_castShadows", "UnityEngine.Renderer::get_receiveShadows", "UnityEngine.Renderer::set_receiveShadows", "UnityEngine.Renderer::get_material", "UnityEngine.Renderer::set_material", "UnityEngine.Renderer::get_sharedMaterial", "UnityEngine.Renderer::set_sharedMaterial", "UnityEngine.Renderer::get_materials", "UnityEngine.Renderer::set_materials", "UnityEngine.Renderer::get_sharedMaterials", "UnityEngine.Renderer::set_sharedMaterials", "UnityEngine.Renderer::INTERNAL_get_bounds", "UnityEngine.Renderer::get_lightmapIndex", "UnityEngine.Renderer::set_lightmapIndex", "UnityEngine.Renderer::get_realtimeLightmapIndex", "UnityEngine.Renderer::set_realtimeLightmapIndex", "UnityEngine.Renderer::INTERNAL_get_lightmapScaleOffset", "UnityEngine.Renderer::INTERNAL_set_lightmapScaleOffset", "UnityEngine.Renderer::INTERNAL_get_realtimeLightmapScaleOffset", "UnityEngine.Renderer::INTERNAL_set_realtimeLightmapScaleOffset", "UnityEngine.Renderer::get_isVisible", "UnityEngine.Renderer::get_useLightProbes", "UnityEngine.Renderer::set_useLightProbes", "UnityEngine.Renderer::get_probeAnchor", "UnityEngine.Renderer::set_probeAnchor", "UnityEngine.Renderer::get_reflectionProbeUsage", "UnityEngine.Renderer::set_reflectionProbeUsage", "UnityEngine.Renderer::SetPropertyBlock", "UnityEngine.Renderer::GetPropertyBlock", "UnityEngine.Renderer::get_sortingLayerName", "UnityEngine.Renderer::set_sortingLayerName", "UnityEngine.Renderer::get_sortingLayerID", "UnityEngine.Renderer::set_sortingLayerID", "UnityEngine.Renderer::get_sortingOrder", "UnityEngine.Renderer::set_sortingOrder", "UnityEngine.Renderer::GetClosestReflectionProbesInternal", "UnityEngine.Projector::get_nearClipPlane", "UnityEngine.Projector::set_nearClipPlane", "UnityEngine.Projector::get_farClipPlane", "UnityEngine.Projector::set_farClipPlane", "UnityEngine.Projector::get_fieldOfView", "UnityEngine.Projector::set_fieldOfView", "UnityEngine.Projector::get_aspectRatio", "UnityEngine.Projector::set_aspectRatio", "UnityEngine.Projector::get_orthographic", "UnityEngine.Projector::set_orthographic", "UnityEngine.Projector::get_orthographicSize", "UnityEngine.Projector::set_orthographicSize", "UnityEngine.Projector::get_ignoreLayers", "UnityEngine.Projector::set_ignoreLayers", "UnityEngine.Projector::get_material", "UnityEngine.Projector::set_material", "UnityEngine.Skybox::get_material", "UnityEngine.Skybox::set_material", "UnityEngine.TrailRenderer::get_time", "UnityEngine.TrailRenderer::set_time", "UnityEngine.TrailRenderer::get_startWidth", "UnityEngine.TrailRenderer::set_startWidth", "UnityEngine.TrailRenderer::get_endWidth", "UnityEngine.TrailRenderer::set_endWidth", "UnityEngine.TrailRenderer::get_autodestruct", "UnityEngine.TrailRenderer::set_autodestruct", "UnityEngine.LineRenderer::INTERNAL_CALL_SetWidth", "UnityEngine.LineRenderer::INTERNAL_CALL_SetColors", "UnityEngine.LineRenderer::INTERNAL_CALL_SetVertexCount", "UnityEngine.LineRenderer::INTERNAL_CALL_SetPosition", "UnityEngine.LineRenderer::get_useWorldSpace", "UnityEngine.LineRenderer::set_useWorldSpace", "UnityEngine.MaterialPropertyBlock::InitBlock", "UnityEngine.MaterialPropertyBlock::DestroyBlock", "UnityEngine.MaterialPropertyBlock::get_isEmpty", "UnityEngine.MaterialPropertyBlock::SetFloat", "UnityEngine.MaterialPropertyBlock::INTERNAL_CALL_SetVector", "UnityEngine.MaterialPropertyBlock::INTERNAL_CALL_SetColor", "UnityEngine.MaterialPropertyBlock::INTERNAL_CALL_SetMatrix", "UnityEngine.MaterialPropertyBlock::SetTexture", "UnityEngine.MaterialPropertyBlock::AddFloat", "UnityEngine.MaterialPropertyBlock::INTERNAL_CALL_AddVector", "UnityEngine.MaterialPropertyBlock::INTERNAL_CALL_AddColor", "UnityEngine.MaterialPropertyBlock::INTERNAL_CALL_AddMatrix", "UnityEngine.MaterialPropertyBlock::AddTexture", "UnityEngine.MaterialPropertyBlock::GetFloat", "UnityEngine.MaterialPropertyBlock::GetVector", "UnityEngine.MaterialPropertyBlock::GetMatrix", "UnityEngine.MaterialPropertyBlock::GetTexture", "UnityEngine.MaterialPropertyBlock::Clear", "UnityEngine.RenderBufferHelper::GetLoadAction", "UnityEngine.RenderBufferHelper::SetLoadAction", "UnityEngine.RenderBufferHelper::GetStoreAction", "UnityEngine.RenderBufferHelper::SetStoreAction", "UnityEngine.Graphics::Internal_DrawMeshTR", "UnityEngine.Graphics::Internal_DrawMeshMatrix", "UnityEngine.Graphics::INTERNAL_CALL_Internal_DrawMeshNow1", "UnityEngine.Graphics::INTERNAL_CALL_Internal_DrawMeshNow2", "UnityEngine.Graphics::DrawProcedural", "UnityEngine.Graphics::DrawProceduralIndirect", "UnityEngine.Graphics::DrawTexture", "UnityEngine.Graphics::ExecuteCommandBuffer", "UnityEngine.Graphics::Blit", "UnityEngine.Graphics::Internal_BlitMaterial", "UnityEngine.Graphics::Internal_BlitMultiTap", "UnityEngine.Graphics::Internal_SetNullRT", "UnityEngine.Graphics::Internal_SetRTFullSetup", "UnityEngine.Graphics::Internal_SetRTSimple", "UnityEngine.Graphics::Internal_SetMRTFullSetup", "UnityEngine.Graphics::Internal_SetMRTSimple", "UnityEngine.Graphics::GetActiveColorBuffer", "UnityEngine.Graphics::GetActiveDepthBuffer", "UnityEngine.Graphics::ClearRandomWriteTargets", "UnityEngine.Graphics::Internal_SetRandomWriteTargetRT", "UnityEngine.Graphics::Internal_SetRandomWriteTargetBuffer", "UnityEngine.Graphics::SetupVertexLights", "UnityEngine.LightProbes::INTERNAL_CALL_GetInterpolatedProbe", "UnityEngine.LightProbes::get_positions", "UnityEngine.LightProbes::get_bakedProbes", "UnityEngine.LightProbes::set_bakedProbes", "UnityEngine.LightProbes::get_count", "UnityEngine.LightProbes::get_cellCount", "UnityEngine.LightmapSettings::get_lightmaps", "UnityEngine.LightmapSettings::set_lightmaps", "UnityEngine.LightmapSettings::get_lightmapsModeLegacy", "UnityEngine.LightmapSettings::set_lightmapsModeLegacy", "UnityEngine.LightmapSettings::get_lightmapsMode", "UnityEngine.LightmapSettings::set_lightmapsMode", "UnityEngine.LightmapSettings::get_lightProbes", "UnityEngine.LightmapSettings::set_lightProbes", "UnityEngine.LightmapSettings::Reset", "UnityEngine.GeometryUtility::INTERNAL_CALL_Internal_ExtractPlanes", "UnityEngine.GeometryUtility::INTERNAL_CALL_TestPlanesAABB", "UnityEngine.Screen::get_resolutions", "UnityEngine.Screen::get_currentResolution", "UnityEngine.Screen::SetResolution", "UnityEngine.Screen::get_width", "UnityEngine.Screen::get_height", "UnityEngine.Screen::get_dpi", "UnityEngine.Screen::get_fullScreen", "UnityEngine.Screen::set_fullScreen", "UnityEngine.Screen::get_autorotateToPortrait", "UnityEngine.Screen::set_autorotateToPortrait", "UnityEngine.Screen::get_autorotateToPortraitUpsideDown", "UnityEngine.Screen::set_autorotateToPortraitUpsideDown", "UnityEngine.Screen::get_autorotateToLandscapeLeft", "UnityEngine.Screen::set_autorotateToLandscapeLeft", "UnityEngine.Screen::get_autorotateToLandscapeRight", "UnityEngine.Screen::set_autorotateToLandscapeRight", "UnityEngine.Screen::get_orientation", "UnityEngine.Screen::set_orientation", "UnityEngine.Screen::get_sleepTimeout", "UnityEngine.Screen::set_sleepTimeout", "UnityEngine.GL::Vertex3", "UnityEngine.GL::INTERNAL_CALL_Vertex", "UnityEngine.GL::INTERNAL_CALL_Color", "UnityEngine.GL::INTERNAL_CALL_TexCoord", "UnityEngine.GL::TexCoord2", "UnityEngine.GL::TexCoord3", "UnityEngine.GL::MultiTexCoord2", "UnityEngine.GL::MultiTexCoord3", "UnityEngine.GL::INTERNAL_CALL_MultiTexCoord", "UnityEngine.GL::Begin", "UnityEngine.GL::End", "UnityEngine.GL::LoadOrtho", "UnityEngine.GL::LoadPixelMatrix", "UnityEngine.GL::LoadPixelMatrixArgs", "UnityEngine.GL::INTERNAL_CALL_Viewport", "UnityEngine.GL::INTERNAL_CALL_LoadProjectionMatrix", "UnityEngine.GL::LoadIdentity", "UnityEngine.GL::INTERNAL_get_modelview", "UnityEngine.GL::INTERNAL_set_modelview", "UnityEngine.GL::INTERNAL_CALL_MultMatrix", "UnityEngine.GL::PushMatrix", "UnityEngine.GL::PopMatrix", "UnityEngine.GL::INTERNAL_CALL_GetGPUProjectionMatrix", "UnityEngine.GL::get_wireframe", "UnityEngine.GL::set_wireframe", "UnityEngine.GL::get_sRGBWrite", "UnityEngine.GL::set_sRGBWrite", "UnityEngine.GL::get_invertCulling", "UnityEngine.GL::set_invertCulling", "UnityEngine.GL::SetRevertBackfacing", "UnityEngine.GL::INTERNAL_CALL_Internal_Clear", "UnityEngine.GL::ClearWithSkybox", "UnityEngine.GL::InvalidateState", "UnityEngine.GL::IssuePluginEvent", "UnityEngine.GL::IssuePluginEventInternal", "UnityEngine.GL::RenderTargetBarrier", "UnityEngine.MeshRenderer::get_additionalVertexStreams", "UnityEngine.MeshRenderer::set_additionalVertexStreams", "UnityEngine.StaticBatchingUtility::InternalCombineVertices", "UnityEngine.StaticBatchingUtility::InternalCombineIndices", "SetRenderTarget can only mix color & depth buffers from RenderTextures. You're trying to set depth buffer from the screen.", "SetRenderTarget can only mix color & depth buffers from RenderTextures. You're trying to set color buffer from the screen.", "UnityEngine.Cursor::INTERNAL_CALL_SetCursor", "UnityEngine.Cursor::get_visible", "UnityEngine.Cursor::set_visible", "UnityEngine.Cursor::get_lockState", "UnityEngine.Cursor::set_lockState", "UnityEngine.CrashReport::GetReports", "UnityEngine.CrashReport::GetReportData", "UnityEngine.CrashReport::RemoveReport", "UnityEngine.SystemInfo::get_operatingSystem", "UnityEngine.SystemInfo::get_processorType", "UnityEngine.SystemInfo::get_processorCount", "UnityEngine.SystemInfo::get_systemMemorySize", "UnityEngine.SystemInfo::get_graphicsMemorySize", "UnityEngine.SystemInfo::get_graphicsDeviceName", "UnityEngine.SystemInfo::get_graphicsDeviceVendor", "UnityEngine.SystemInfo::get_graphicsDeviceID", "UnityEngine.SystemInfo::get_graphicsDeviceVendorID", "UnityEngine.SystemInfo::get_graphicsDeviceType", "UnityEngine.SystemInfo::get_graphicsDeviceVersion", "UnityEngine.SystemInfo::get_graphicsShaderLevel", "UnityEngine.SystemInfo::get_graphicsMultiThreaded", "UnityEngine.SystemInfo::get_supportsShadows", "UnityEngine.SystemInfo::get_supportsRenderTextures", "UnityEngine.SystemInfo::get_supportsRenderToCubemap", "UnityEngine.SystemInfo::get_supportsImageEffects", "UnityEngine.SystemInfo::get_supports3DTextures", "UnityEngine.SystemInfo::get_supportsComputeShaders", "UnityEngine.SystemInfo::get_supportsInstancing", "UnityEngine.SystemInfo::get_supportsSparseTextures", "UnityEngine.SystemInfo::get_supportedRenderTargetCount", "UnityEngine.SystemInfo::get_supportsStencil", "UnityEngine.SystemInfo::SupportsRenderTextureFormat", "UnityEngine.SystemInfo::SupportsTextureFormat", "UnityEngine.SystemInfo::get_npotSupport", "UnityEngine.SystemInfo::get_deviceUniqueIdentifier", "UnityEngine.SystemInfo::get_deviceName", "UnityEngine.SystemInfo::get_deviceModel", "UnityEngine.SystemInfo::get_supportsAccelerometer", "UnityEngine.SystemInfo::get_supportsGyroscope", "UnityEngine.SystemInfo::get_supportsLocationService", "UnityEngine.SystemInfo::get_supportsVibration", "UnityEngine.SystemInfo::get_deviceType", "UnityEngine.SystemInfo::get_maxTextureSize", "UnityEngine.Coroutine::ReleaseCoroutine", "UnityEngine.ScriptableObject::Internal_CreateScriptableObject", "UnityEngine.ScriptableObject::INTERNAL_CALL_SetDirty", "UnityEngine.ScriptableObject::CreateInstance", "UnityEngine.ScriptableObject::CreateInstanceFromType", "UnityEngine.Profiler::get_supported", "UnityEngine.Profiler::get_logFile", "UnityEngine.Profiler::set_logFile", "UnityEngine.Profiler::get_enableBinaryLog", "UnityEngine.Profiler::set_enableBinaryLog", "UnityEngine.Profiler::get_enabled", "UnityEngine.Profiler::set_enabled", "UnityEngine.Profiler::AddFramesFromFile", "UnityEngine.Profiler::BeginSample", "UnityEngine.Profiler::BeginSampleOnly", "UnityEngine.Profiler::EndSample", "UnityEngine.Profiler::get_maxNumberOfSamplesPerFrame", "UnityEngine.Profiler::set_maxNumberOfSamplesPerFrame", "UnityEngine.Profiler::get_usedHeapSize", "UnityEngine.Profiler::GetRuntimeMemorySize", "UnityEngine.Profiler::GetMonoHeapSize", "UnityEngine.Profiler::GetMonoUsedSize", "UnityEngine.Profiler::GetTotalAllocatedMemory", "UnityEngine.Profiler::GetTotalUnusedReservedMemory", "UnityEngine.Profiler::GetTotalReservedMemory", "UnityEngine.AssetBundleManifest::GetAllAssetBundles", "UnityEngine.AssetBundleManifest::GetAllAssetBundlesWithVariant", "UnityEngine.AssetBundleManifest::GetAssetBundleHash", "UnityEngine.AssetBundleManifest::GetDirectDependencies", "UnityEngine.AssetBundleManifest::GetAllDependencies", "UnityEngine.AssetBundleCreateRequest::get_assetBundle", "UnityEngine.AssetBundleCreateRequest::DisableCompatibilityChecks", "UnityEngine.AssetBundle::CreateFromMemory", "UnityEngine.AssetBundle::CreateFromMemoryImmediate", "UnityEngine.AssetBundle::CreateFromFile", "UnityEngine.AssetBundle::get_mainAsset", "UnityEngine.AssetBundle::Contains", "UnityEngine.AssetBundle::Load", "UnityEngine.AssetBundle::LoadAsync", "UnityEngine.AssetBundle::LoadAll", "UnityEngine.AssetBundle::LoadAsset_Internal", "UnityEngine.AssetBundle::LoadAssetAsync_Internal", "UnityEngine.AssetBundle::LoadAssetWithSubAssets_Internal", "UnityEngine.AssetBundle::LoadAssetWithSubAssetsAsync_Internal", "UnityEngine.AssetBundle::Unload", "UnityEngine.AssetBundle::GetAllAssetNames", "UnityEngine.AssetBundle::GetAllScenePaths", "./artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp", "Coroutines can only be started from a MonoBehaviour", "Coroutines can only be stopped on a MonoBehaviour", "Location service updates are not enabled. Check LocationService.status before querying last location.\n", "Invalid KeyCode enum.", "Input Key named: %s is unknown", "Invalid mouse button index.", "Index out of bounds.", "Internal error.", "The component is not attached to any game object!", "Invalid value for renderMode", "GameObject has undefined tag!", "Transform child out of bounds", "InvokeJavaProxyMethod", "CreateJavaProxy", "java/lang/Object", "UnityEngine.Experimental.Director.DirectorPlayer::PlayInternal", "UnityEngine.Experimental.Director.DirectorPlayer::Stop", "UnityEngine.Experimental.Director.DirectorPlayer::SetTime", "UnityEngine.Experimental.Director.DirectorPlayer::GetTime", "UnityEngine.Experimental.Director.DirectorPlayer::SetTimeUpdateMode", "UnityEngine.Experimental.Director.DirectorPlayer::GetTimeUpdateMode", "UnityEngine.BillboardAsset::get_width", "UnityEngine.BillboardAsset::set_width", "UnityEngine.BillboardAsset::get_height", "UnityEngine.BillboardAsset::set_height", "UnityEngine.BillboardAsset::get_bottom", "UnityEngine.BillboardAsset::set_bottom", "UnityEngine.BillboardAsset::get_imageCount", "UnityEngine.BillboardAsset::get_vertexCount", "UnityEngine.BillboardAsset::get_indexCount", "UnityEngine.BillboardAsset::get_material", "UnityEngine.BillboardAsset::set_material", "UnityEngine.BillboardAsset::MakeRenderMesh", "UnityEngine.BillboardAsset::MakeMaterialProperties", "UnityEngine.BillboardAsset::MakePreviewMesh", "UnityEngine.BillboardRenderer::get_billboard", "UnityEngine.BillboardRenderer::set_billboard", "UnityEngine.AndroidInput::GetSecondaryTouch", "UnityEngine.AndroidInput::get_touchCountSecondary", "UnityEngine.AndroidInput::get_secondaryTouchEnabled", "UnityEngine.AndroidInput::get_secondaryTouchWidth", "UnityEngine.AndroidInput::get_secondaryTouchHeight", "UnityEngine.AndroidJNIHelper::get_debug", "UnityEngine.AndroidJNIHelper::set_debug", "UnityEngine.AndroidJNIHelper::CreateJavaProxy", "UnityEngine.AndroidJNI::AttachCurrentThread", "UnityEngine.AndroidJNI::DetachCurrentThread", "UnityEngine.AndroidJNI::GetVersion", "UnityEngine.AndroidJNI::FindClass", "UnityEngine.AndroidJNI::FromReflectedMethod", "UnityEngine.AndroidJNI::FromReflectedField", "UnityEngine.AndroidJNI::ToReflectedMethod", "UnityEngine.AndroidJNI::ToReflectedField", "UnityEngine.AndroidJNI::GetSuperclass", "UnityEngine.AndroidJNI::IsAssignableFrom", "UnityEngine.AndroidJNI::Throw", "UnityEngine.AndroidJNI::ThrowNew", "UnityEngine.AndroidJNI::ExceptionOccurred", "UnityEngine.AndroidJNI::ExceptionDescribe", "UnityEngine.AndroidJNI::ExceptionClear", "UnityEngine.AndroidJNI::FatalError", "UnityEngine.AndroidJNI::PushLocalFrame", "UnityEngine.AndroidJNI::PopLocalFrame", "UnityEngine.AndroidJNI::NewGlobalRef", "UnityEngine.AndroidJNI::DeleteGlobalRef", "UnityEngine.AndroidJNI::NewLocalRef", "UnityEngine.AndroidJNI::DeleteLocalRef", "UnityEngine.AndroidJNI::IsSameObject", "UnityEngine.AndroidJNI::EnsureLocalCapacity", "UnityEngine.AndroidJNI::AllocObject", "UnityEngine.AndroidJNI::NewObject", "UnityEngine.AndroidJNI::GetObjectClass", "UnityEngine.AndroidJNI::IsInstanceOf", "UnityEngine.AndroidJNI::GetMethodID", "UnityEngine.AndroidJNI::GetFieldID", "UnityEngine.AndroidJNI::GetStaticMethodID", "UnityEngine.AndroidJNI::GetStaticFieldID", "UnityEngine.AndroidJNI::NewStringUTF", "UnityEngine.AndroidJNI::GetStringUTFLength", "UnityEngine.AndroidJNI::GetStringUTFChars", "UnityEngine.AndroidJNI::CallStringMethod", "UnityEngine.AndroidJNI::CallObjectMethod", "UnityEngine.AndroidJNI::CallIntMethod", "UnityEngine.AndroidJNI::CallBooleanMethod", "UnityEngine.AndroidJNI::CallShortMethod", "UnityEngine.AndroidJNI::CallByteMethod", "UnityEngine.AndroidJNI::CallCharMethod", "UnityEngine.AndroidJNI::CallFloatMethod", "UnityEngine.AndroidJNI::CallDoubleMethod", "UnityEngine.AndroidJNI::CallLongMethod", "UnityEngine.AndroidJNI::CallVoidMethod", "UnityEngine.AndroidJNI::GetStringField", "UnityEngine.AndroidJNI::GetObjectField", "UnityEngine.AndroidJNI::GetBooleanField", "UnityEngine.AndroidJNI::GetByteField", "UnityEngine.AndroidJNI::GetCharField", "UnityEngine.AndroidJNI::GetShortField", "UnityEngine.AndroidJNI::GetIntField", "UnityEngine.AndroidJNI::GetLongField", "UnityEngine.AndroidJNI::GetFloatField", "UnityEngine.AndroidJNI::GetDoubleField", "UnityEngine.AndroidJNI::SetStringField", "UnityEngine.AndroidJNI::SetObjectField", "UnityEngine.AndroidJNI::SetBooleanField", "UnityEngine.AndroidJNI::SetByteField", "UnityEngine.AndroidJNI::SetCharField", "UnityEngine.AndroidJNI::SetShortField", "UnityEngine.AndroidJNI::SetIntField", "UnityEngine.AndroidJNI::SetLongField", "UnityEngine.AndroidJNI::SetFloatField", "UnityEngine.AndroidJNI::SetDoubleField", "UnityEngine.AndroidJNI::CallStaticStringMethod", "UnityEngine.AndroidJNI::CallStaticObjectMethod", "UnityEngine.AndroidJNI::CallStaticIntMethod", "UnityEngine.AndroidJNI::CallStaticBooleanMethod", "UnityEngine.AndroidJNI::CallStaticShortMethod", "UnityEngine.AndroidJNI::CallStaticByteMethod", "UnityEngine.AndroidJNI::CallStaticCharMethod", "UnityEngine.AndroidJNI::CallStaticFloatMethod", "UnityEngine.AndroidJNI::CallStaticDoubleMethod", "UnityEngine.AndroidJNI::CallStaticLongMethod", "UnityEngine.AndroidJNI::CallStaticVoidMethod", "UnityEngine.AndroidJNI::GetStaticStringField", "UnityEngine.AndroidJNI::GetStaticObjectField", "UnityEngine.AndroidJNI::GetStaticBooleanField", "UnityEngine.AndroidJNI::GetStaticByteField", "UnityEngine.AndroidJNI::GetStaticCharField", "UnityEngine.AndroidJNI::GetStaticShortField", "UnityEngine.AndroidJNI::GetStaticIntField", "UnityEngine.AndroidJNI::GetStaticLongField", "UnityEngine.AndroidJNI::GetStaticFloatField", "UnityEngine.AndroidJNI::GetStaticDoubleField", "UnityEngine.AndroidJNI::SetStaticStringField", "UnityEngine.AndroidJNI::SetStaticObjectField", "UnityEngine.AndroidJNI::SetStaticBooleanField", "UnityEngine.AndroidJNI::SetStaticByteField", "UnityEngine.AndroidJNI::SetStaticCharField", "UnityEngine.AndroidJNI::SetStaticShortField", "UnityEngine.AndroidJNI::SetStaticIntField", "UnityEngine.AndroidJNI::SetStaticLongField", "UnityEngine.AndroidJNI::SetStaticFloatField", "UnityEngine.AndroidJNI::SetStaticDoubleField", "UnityEngine.AndroidJNI::ToBooleanArray", "UnityEngine.AndroidJNI::ToByteArray", "UnityEngine.AndroidJNI::ToCharArray", "UnityEngine.AndroidJNI::ToShortArray", "UnityEngine.AndroidJNI::ToIntArray", "UnityEngine.AndroidJNI::ToLongArray", "UnityEngine.AndroidJNI::ToFloatArray", "UnityEngine.AndroidJNI::ToDoubleArray", "UnityEngine.AndroidJNI::ToObjectArray", "UnityEngine.AndroidJNI::FromBooleanArray", "UnityEngine.AndroidJNI::FromByteArray", "UnityEngine.AndroidJNI::FromCharArray", "UnityEngine.AndroidJNI::FromShortArray", "UnityEngine.AndroidJNI::FromIntArray", "UnityEngine.AndroidJNI::FromLongArray", "UnityEngine.AndroidJNI::FromFloatArray", "UnityEngine.AndroidJNI::FromDoubleArray", "UnityEngine.AndroidJNI::FromObjectArray", "UnityEngine.AndroidJNI::GetArrayLength", "UnityEngine.AndroidJNI::NewBooleanArray", "UnityEngine.AndroidJNI::NewByteArray", "UnityEngine.AndroidJNI::NewCharArray", "UnityEngine.AndroidJNI::NewShortArray", "UnityEngine.AndroidJNI::NewIntArray", "UnityEngine.AndroidJNI::NewLongArray", "UnityEngine.AndroidJNI::NewFloatArray", "UnityEngine.AndroidJNI::NewDoubleArray", "UnityEngine.AndroidJNI::NewObjectArray", "UnityEngine.AndroidJNI::GetBooleanArrayElement", "UnityEngine.AndroidJNI::GetByteArrayElement", "UnityEngine.AndroidJNI::GetCharArrayElement", "UnityEngine.AndroidJNI::GetShortArrayElement", "UnityEngine.AndroidJNI::GetIntArrayElement", "UnityEngine.AndroidJNI::GetLongArrayElement", "UnityEngine.AndroidJNI::GetFloatArrayElement", "UnityEngine.AndroidJNI::GetDoubleArrayElement", "UnityEngine.AndroidJNI::GetObjectArrayElement", "UnityEngine.AndroidJNI::SetBooleanArrayElement", "UnityEngine.AndroidJNI::SetByteArrayElement", "UnityEngine.AndroidJNI::SetCharArrayElement", "UnityEngine.AndroidJNI::SetShortArrayElement", "UnityEngine.AndroidJNI::SetIntArrayElement", "UnityEngine.AndroidJNI::SetLongArrayElement", "UnityEngine.AndroidJNI::SetFloatArrayElement", "UnityEngine.AndroidJNI::SetDoubleArrayElement", "UnityEngine.AndroidJNI::SetObjectArrayElement", "UnityEngine.PlayerPrefs::TrySetInt", "UnityEngine.PlayerPrefs::TrySetFloat", "UnityEngine.PlayerPrefs::TrySetSetString", "UnityEngine.PlayerPrefs::GetInt", "UnityEngine.PlayerPrefs::GetFloat", "UnityEngine.PlayerPrefs::GetString", "UnityEngine.PlayerPrefs::HasKey", "UnityEngine.PlayerPrefs::DeleteKey", "UnityEngine.PlayerPrefs::DeleteAll", "UnityEngine.PlayerPrefs::Save", "UnityEngine.Random::get_seed", "UnityEngine.Random::set_seed", "UnityEngine.Random::Range", "UnityEngine.Random::RandomRangeInt", "UnityEngine.Random::get_value", "UnityEngine.Random::INTERNAL_get_insideUnitSphere", "UnityEngine.Random::GetRandomUnitCircle", "UnityEngine.Random::INTERNAL_get_onUnitSphere", "UnityEngine.Random::INTERNAL_get_rotation", "UnityEngine.Random::INTERNAL_get_rotationUniform", "UnityEngine.Time::get_time", "UnityEngine.Time::get_timeSinceLevelLoad", "UnityEngine.Time::get_deltaTime", "UnityEngine.Time::get_fixedTime", "UnityEngine.Time::get_unscaledTime", "UnityEngine.Time::get_unscaledDeltaTime", "UnityEngine.Time::get_fixedDeltaTime", "UnityEngine.Time::set_fixedDeltaTime", "UnityEngine.Time::get_maximumDeltaTime", "UnityEngine.Time::set_maximumDeltaTime", "UnityEngine.Time::get_smoothDeltaTime", "UnityEngine.Time::get_timeScale", "UnityEngine.Time::set_timeScale", "UnityEngine.Time::get_frameCount", "UnityEngine.Time::get_renderedFrameCount", "UnityEngine.Time::get_realtimeSinceStartup", "UnityEngine.Time::get_captureFramerate", "UnityEngine.Time::set_captureFramerate", "UnityEngine.Transform::INTERNAL_get_position", "UnityEngine.Transform::INTERNAL_set_position", "UnityEngine.Transform::INTERNAL_get_localPosition", "UnityEngine.Transform::INTERNAL_set_localPosition", "UnityEngine.Transform::INTERNAL_get_localEulerAngles", "UnityEngine.Transform::INTERNAL_set_localEulerAngles", "UnityEngine.Transform::INTERNAL_get_rotation", "UnityEngine.Transform::INTERNAL_set_rotation", "UnityEngine.Transform::INTERNAL_get_localRotation", "UnityEngine.Transform::INTERNAL_set_localRotation", "UnityEngine.Transform::INTERNAL_get_localScale", "UnityEngine.Transform::INTERNAL_set_localScale", "UnityEngine.Transform::get_parentInternal", "UnityEngine.Transform::set_parentInternal", "UnityEngine.Transform::SetParent", "UnityEngine.Transform::INTERNAL_get_worldToLocalMatrix", "UnityEngine.Transform::INTERNAL_get_localToWorldMatrix", "UnityEngine.Transform::INTERNAL_CALL_RotateAroundInternal", "UnityEngine.Transform::INTERNAL_CALL_LookAt", "UnityEngine.Transform::INTERNAL_CALL_TransformDirection", "UnityEngine.Transform::INTERNAL_CALL_InverseTransformDirection", "UnityEngine.Transform::INTERNAL_CALL_TransformVector", "UnityEngine.Transform::INTERNAL_CALL_InverseTransformVector", "UnityEngine.Transform::INTERNAL_CALL_TransformPoint", "UnityEngine.Transform::INTERNAL_CALL_InverseTransformPoint", "UnityEngine.Transform::get_root", "UnityEngine.Transform::get_childCount", "UnityEngine.Transform::DetachChildren", "UnityEngine.Transform::SetAsFirstSibling", "UnityEngine.Transform::SetAsLastSibling", "UnityEngine.Transform::SetSiblingIndex", "UnityEngine.Transform::GetSiblingIndex", "UnityEngine.Transform::Find", "UnityEngine.Transform::INTERNAL_get_lossyScale", "UnityEngine.Transform::IsChildOf", "UnityEngine.Transform::get_hasChanged", "UnityEngine.Transform::set_hasChanged", "UnityEngine.Transform::INTERNAL_CALL_RotateAround", "UnityEngine.Transform::INTERNAL_CALL_RotateAroundLocal", "UnityEngine.Transform::GetChild", "UnityEngine.Transform::GetChildCount", "UnityEngine.GameObject::CreatePrimitive", "UnityEngine.GameObject::GetComponent", "UnityEngine.GameObject::GetComponentFastPath", "UnityEngine.GameObject::GetComponentByName", "UnityEngine.GameObject::GetComponentsInternal", "UnityEngine.GameObject::AddComponentInternal", "UnityEngine.GameObject::get_transform", "UnityEngine.GameObject::get_layer", "UnityEngine.GameObject::set_layer", "UnityEngine.GameObject::get_active", "UnityEngine.GameObject::set_active", "UnityEngine.GameObject::SetActive", "UnityEngine.GameObject::get_activeSelf", "UnityEngine.GameObject::get_activeInHierarchy", "UnityEngine.GameObject::SetActiveRecursively", "UnityEngine.GameObject::get_isStatic", "UnityEngine.GameObject::set_isStatic", "UnityEngine.GameObject::get_isStaticBatchable", "UnityEngine.GameObject::get_tag", "UnityEngine.GameObject::set_tag", "UnityEngine.GameObject::CompareTag", "UnityEngine.GameObject::FindGameObjectWithTag", "UnityEngine.GameObject::FindGameObjectsWithTag", "UnityEngine.GameObject::SendMessageUpwards", "UnityEngine.GameObject::SendMessage", "UnityEngine.GameObject::BroadcastMessage", "UnityEngine.GameObject::Internal_AddComponentWithType", "UnityEngine.GameObject::Internal_CreateGameObject", "UnityEngine.GameObject::Find", "UnityEngine.Light::get_type", "UnityEngine.Light::set_type", "UnityEngine.Light::INTERNAL_get_color", "UnityEngine.Light::INTERNAL_set_color", "UnityEngine.Light::get_intensity", "UnityEngine.Light::set_intensity", "UnityEngine.Light::get_bounceIntensity", "UnityEngine.Light::set_bounceIntensity", "UnityEngine.Light::get_shadows", "UnityEngine.Light::set_shadows", "UnityEngine.Light::get_shadowStrength", "UnityEngine.Light::set_shadowStrength", "UnityEngine.Light::get_shadowBias", "UnityEngine.Light::set_shadowBias", "UnityEngine.Light::get_shadowNormalBias", "UnityEngine.Light::set_shadowNormalBias", "UnityEngine.Light::get_shadowSoftness", "UnityEngine.Light::set_shadowSoftness", "UnityEngine.Light::get_shadowSoftnessFade", "UnityEngine.Light::set_shadowSoftnessFade", "UnityEngine.Light::get_range", "UnityEngine.Light::set_range", "UnityEngine.Light::get_spotAngle", "UnityEngine.Light::set_spotAngle", "UnityEngine.Light::get_cookieSize", "UnityEngine.Light::set_cookieSize", "UnityEngine.Light::get_cookie", "UnityEngine.Light::set_cookie", "UnityEngine.Light::get_flare", "UnityEngine.Light::set_flare", "UnityEngine.Light::get_renderMode", "UnityEngine.Light::set_renderMode", "UnityEngine.Light::get_alreadyLightmapped", "UnityEngine.Light::set_alreadyLightmapped", "UnityEngine.Light::get_cullingMask", "UnityEngine.Light::set_cullingMask", "UnityEngine.Light::AddCommandBuffer", "UnityEngine.Light::RemoveCommandBuffer", "UnityEngine.Light::RemoveCommandBuffers", "UnityEngine.Light::RemoveAllCommandBuffers", "UnityEngine.Light::GetCommandBuffers", "UnityEngine.Light::get_commandBufferCount", "UnityEngine.Light::get_pixelLightCount", "UnityEngine.Light::set_pixelLightCount", "UnityEngine.Light::GetLights", "UnityEngine.Component::get_transform", "UnityEngine.Component::get_gameObject", "UnityEngine.Component::GetComponentFastPath", "UnityEngine.Component::GetComponent", "UnityEngine.Component::GetComponentsForListInternal", "UnityEngine.Component::CompareTag", "UnityEngine.Component::SendMessageUpwards", "UnityEngine.Component::SendMessage", "UnityEngine.Component::BroadcastMessage", "UnityEngine.Object::Internal_CloneSingle", "UnityEngine.Object::INTERNAL_CALL_Internal_InstantiateSingle", "UnityEngine.Object::Destroy", "UnityEngine.Object::DestroyImmediate", "UnityEngine.Object::FindObjectsOfType", "UnityEngine.Object::get_name", "UnityEngine.Object::set_name", "UnityEngine.Object::DontDestroyOnLoad", "UnityEngine.Object::get_hideFlags", "UnityEngine.Object::set_hideFlags", "UnityEngine.Object::DestroyObject", "UnityEngine.Object::FindSceneObjectsOfType", "UnityEngine.Object::FindObjectsOfTypeIncludingAssets", "UnityEngine.Object::ToString", "UnityEngine.Object::DoesObjectWithInstanceIDExist", "UnityEngine.Gyroscope::rotationRate_Internal", "UnityEngine.Gyroscope::rotationRateUnbiased_Internal", "UnityEngine.Gyroscope::gravity_Internal", "UnityEngine.Gyroscope::userAcceleration_Internal", "UnityEngine.Gyroscope::attitude_Internal", "UnityEngine.Gyroscope::getEnabled_Internal", "UnityEngine.Gyroscope::setEnabled_Internal", "UnityEngine.Gyroscope::getUpdateInterval_Internal", "UnityEngine.Gyroscope::setUpdateInterval_Internal", "UnityEngine.LocationService::get_isEnabledByUser", "UnityEngine.LocationService::get_status", "UnityEngine.LocationService::get_lastData", "UnityEngine.LocationService::Start", "UnityEngine.LocationService::Stop", "UnityEngine.Compass::get_magneticHeading", "UnityEngine.Compass::get_trueHeading", "UnityEngine.Compass::get_headingAccuracy", "UnityEngine.Compass::INTERNAL_get_rawVector", "UnityEngine.Compass::get_timestamp", "UnityEngine.Compass::get_enabled", "UnityEngine.Compass::set_enabled", "UnityEngine.Input::mainGyroIndex_Internal", "UnityEngine.Input::GetKeyInt", "UnityEngine.Input::GetKeyString", "UnityEngine.Input::GetKeyUpInt", "UnityEngine.Input::GetKeyUpString", "UnityEngine.Input::GetKeyDownInt", "UnityEngine.Input::GetKeyDownString", "UnityEngine.Input::GetAxis", "UnityEngine.Input::GetAxisRaw", "UnityEngine.Input::GetButton", "UnityEngine.Input::get_compensateSensors", "UnityEngine.Input::set_compensateSensors", "UnityEngine.Input::get_isGyroAvailable", "UnityEngine.Input::GetButtonDown", "UnityEngine.Input::GetButtonUp", "UnityEngine.Input::GetJoystickNames", "UnityEngine.Input::GetMouseButton", "UnityEngine.Input::GetMouseButtonDown", "UnityEngine.Input::GetMouseButtonUp", "UnityEngine.Input::ResetInputAxes", "UnityEngine.Input::INTERNAL_get_mousePosition", "UnityEngine.Input::INTERNAL_get_mouseScrollDelta", "UnityEngine.Input::get_mousePresent", "UnityEngine.Input::get_simulateMouseWithTouches", "UnityEngine.Input::set_simulateMouseWithTouches", "UnityEngine.Input::get_anyKey", "UnityEngine.Input::get_anyKeyDown", "UnityEngine.Input::get_inputString", "UnityEngine.Input::INTERNAL_get_acceleration", "UnityEngine.Input::GetAccelerationEvent", "UnityEngine.Input::get_accelerationEventCount", "UnityEngine.Input::GetTouch", "UnityEngine.Input::get_touchCount", "UnityEngine.Input::get_eatKeyPressOnTextFieldFocus", "UnityEngine.Input::set_eatKeyPressOnTextFieldFocus", "UnityEngine.Input::get_multiTouchEnabled", "UnityEngine.Input::set_multiTouchEnabled", "UnityEngine.Input::get_deviceOrientation", "UnityEngine.Input::get_imeCompositionMode", "UnityEngine.Input::set_imeCompositionMode", "UnityEngine.Input::get_compositionString", "UnityEngine.Input::get_imeIsSelected", "UnityEngine.Input::INTERNAL_get_compositionCursorPos", "UnityEngine.Input::INTERNAL_set_compositionCursorPos", "UnityEngine.MonoBehaviour::.ctor", "UnityEngine.MonoBehaviour::Internal_CancelInvokeAll", "UnityEngine.MonoBehaviour::Internal_IsInvokingAll", "UnityEngine.MonoBehaviour::Invoke", "UnityEngine.MonoBehaviour::InvokeRepeating", "UnityEngine.MonoBehaviour::CancelInvoke", "UnityEngine.MonoBehaviour::IsInvoking", "UnityEngine.MonoBehaviour::StartCoroutine_Auto", "UnityEngine.MonoBehaviour::StartCoroutine", "UnityEngine.MonoBehaviour::StopCoroutine", "UnityEngine.MonoBehaviour::StopCoroutineViaEnumerator_Auto", "UnityEngine.MonoBehaviour::StopCoroutine_Auto", "UnityEngine.MonoBehaviour::StopAllCoroutines", "UnityEngine.MonoBehaviour::get_useGUILayout", "UnityEngine.MonoBehaviour::set_useGUILayout", "UnityEngine.Display::GetSystemExtImpl", "UnityEngine.Display::GetRenderingExtImpl", "UnityEngine.Display::GetRenderingBuffersImpl", "UnityEngine.Display::SetRenderingResolutionImpl", "UnityEngine.Display::ActivateDisplayImpl", "UnityEngine.Display::SetParamsImpl", "UnityEngine.Display::MultiDisplayLicenseImpl", "UnityEngine.Display::RelativeMouseAtImpl", "UnityEngine.Debug::INTERNAL_CALL_DrawLine", "UnityEngine.Debug::Break", "UnityEngine.Debug::DebugBreak", "UnityEngine.Debug::Internal_Log", "UnityEngine.Debug::Internal_LogException", "UnityEngine.Debug::ClearDeveloperConsole", "UnityEngine.Debug::get_developerConsoleVisible", "UnityEngine.Debug::set_developerConsoleVisible", "UnityEngine.Debug::WriteLineToLogFile", "UnityEngine.Debug::get_isDebugBuild", "UnityEngine.Debug::OpenConsoleFile", "UnityEngine.ComputeShader::FindKernel", "UnityEngine.ComputeShader::SetFloat", "UnityEngine.ComputeShader::SetInt", "UnityEngine.ComputeShader::INTERNAL_CALL_SetVector", "UnityEngine.ComputeShader::Internal_SetFloats", "UnityEngine.ComputeShader::Internal_SetInts", "UnityEngine.ComputeShader::SetTexture", "UnityEngine.ComputeShader::SetBuffer", "UnityEngine.ComputeShader::Dispatch", "UnityEngine.ComputeBuffer::InitBuffer", "UnityEngine.ComputeBuffer::DestroyBuffer", "UnityEngine.ComputeBuffer::get_count", "UnityEngine.ComputeBuffer::get_stride", "UnityEngine.ComputeBuffer::InternalSetData", "UnityEngine.ComputeBuffer::InternalGetData", "UnityEngine.ComputeBuffer::CopyCount", "UnityEngineInternal.GIDebugVisualisation::ResetRuntimeInputTextures", "UnityEngineInternal.GIDebugVisualisation::PlayCycleMode", "UnityEngineInternal.GIDebugVisualisation::PauseCycleMode", "UnityEngineInternal.GIDebugVisualisation::StopCycleMode", "UnityEngineInternal.GIDebugVisualisation::get_cycleMode", "UnityEngineInternal.GIDebugVisualisation::get_pauseCycleMode", "UnityEngineInternal.GIDebugVisualisation::get_texType", "UnityEngineInternal.GIDebugVisualisation::set_texType", "UnityEngineInternal.GIDebugVisualisation::CycleSkipInstances", "UnityEngineInternal.GIDebugVisualisation::CycleSkipSystems", "UnityEngine.DynamicGI::get_indirectScale", "UnityEngine.DynamicGI::set_indirectScale", "UnityEngine.DynamicGI::get_updateThreshold", "UnityEngine.DynamicGI::set_updateThreshold", "UnityEngine.DynamicGI::INTERNAL_CALL_SetEmissive", "UnityEngine.DynamicGI::UpdateMaterialsForRenderer", "UnityEngine.DynamicGI::INTERNAL_CALL_UpdateMaterialsForTerrain", "UnityEngine.DynamicGI::UpdateEnvironment", "UnityEngine.DynamicGI::get_synchronousMode", "UnityEngine.DynamicGI::set_synchronousMode", "UnityEngine.Advertisements.UnityAdsInternal::RegisterNative", "UnityEngine.Advertisements.UnityAdsInternal::Init", "UnityEngine.Advertisements.UnityAdsInternal::Show", "UnityEngine.Advertisements.UnityAdsInternal::CanShowAds", "UnityEngine.Advertisements.UnityAdsInternal::SetLogLevel", "UnityEngine.Advertisements.UnityAdsInternal::SetCampaignDataURL", "UnityEngine.WindZone::get_mode", "UnityEngine.WindZone::set_mode", "UnityEngine.WindZone::get_radius", "UnityEngine.WindZone::set_radius", "UnityEngine.WindZone::get_windMain", "UnityEngine.WindZone::set_windMain", "UnityEngine.WindZone::get_windTurbulence", "UnityEngine.WindZone::set_windTurbulence", "UnityEngine.WindZone::get_windPulseMagnitude", "UnityEngine.WindZone::set_windPulseMagnitude", "UnityEngine.WindZone::get_windPulseFrequency", "UnityEngine.WindZone::set_windPulseFrequency", "UnityEngine.Experimental.Director.Playable::GetUniqueIDInternal", "UnityEngine.Experimental.Director.Playable::ReleaseEnginePlayable", "UnityEngine.Experimental.Director.Playable::InstantiateEnginePlayable", "UnityEngine.Experimental.Director.Playable::GenerateUniqueId", "UnityEngine.Experimental.Director.Playable::SetInputWeightInternal", "UnityEngine.Experimental.Director.Playable::GetInputWeightInternal", "UnityEngine.Experimental.Director.Playable::get_time", "UnityEngine.Experimental.Director.Playable::set_time", "UnityEngine.Experimental.Director.Playable::get_state", "UnityEngine.Experimental.Director.Playable::set_state", "UnityEngine.Experimental.Director.Playable::ConnectInternal", "UnityEngine.Experimental.Director.Playable::DisconnectInternal", "UnityEngine.Experimental.Director.Playable::GetInput", "UnityEngine.Experimental.Director.Playable::GetInputs", "UnityEngine.Experimental.Director.Playable::get_inputCount", "UnityEngine.Experimental.Director.Playable::get_outputCount", "UnityEngine.Experimental.Director.Playable::ClearInputs", "UnityEngine.Experimental.Director.Playable::GetOutput", "UnityEngine.Experimental.Director.Playable::GetOutputs", "UnityEngine.Experimental.Director.Playable::GetInputsInternal", "UnityEngine.Experimental.Director.Playable::GetOutputsInternal", "Assembly file does not contain textures/filters definition", "not handled output UID collision", "not handled input UID collision", "Truncated assembly file", "Not an assembly file", "Assembly file format version not supported", "Assembly file format version no longer supported", "bitmap compositing node size exceed limit, cannot scale down", "vector::_M_range_check", "newInterfaceProxy", "(JLjava/lang/Class;)Ljava/lang/Object;", "disableInterfaceProxy", "(Ljava/lang/Object;)V", "(JLjava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;", "java.lang.IllegalArgumentException: Null parameter detected", "java.lang.IllegalThreadStateException: Unable to determine exception message", "toString", "java.lang.IllegalThreadStateException: Unable to attach to VM", "Out of memory: Unable to allocate local frame(64)", "android/Manifest$permission", "READ_PHONE_STATE", "VIBRATE", "android/app/Activity", "getIntent", "()Landroid/content/Intent;", "getWindow", "()Landroid/view/Window;", "setRequestedOrientation", "getRequestedOrientation", "runOnUiThread", "(Ljava/lang/Runnable;)V", "android/content/Context", "MODE_PRIVATE", "WINDOW_SERVICE", "VIBRATOR_SERVICE", "CONNECTIVITY_SERVICE", "MEDIA_ROUTER_SERVICE", "TELEPHONY_SERVICE", "DISPLAY_SERVICE", "getContentResolver", "()Landroid/content/ContentResolver;", "getSharedPreferences", "(Ljava/lang/String;I)Landroid/content/SharedPreferences;", "getFilesDir", "()Ljava/io/File;", "getCacheDir", "startActivity", "(Landroid/content/Intent;)V", "getSystemService", "(Ljava/lang/String;)Ljava/lang/Object;", "(Ljava/lang/String;)I", "checkCallingOrSelfPermission", "ACTION_VIEW", "(Landroid/net/Uri;)Landroid/content/Intent;", "setDataAndType", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;", "getExtras", "()Landroid/os/Bundle;", "setData", "android/content/SharedPreferences$Editor", "remove", "(Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;", "putInt", "(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;", "putFloat", "(Ljava/lang/String;F)Landroid/content/SharedPreferences$Editor;", "()Landroid/content/SharedPreferences$Editor;", "apply", "putString", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;", "android/content/SharedPreferences", "getInt", "(Ljava/lang/String;I)I", "getFloat", "(Ljava/lang/String;F)F", "contains", "edit", "getString", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "android/content/pm/ActivityInfo", "SCREEN_ORIENTATION_UNSPECIFIED", "SCREEN_ORIENTATION_LANDSCAPE", "SCREEN_ORIENTATION_PORTRAIT", "SCREEN_ORIENTATION_SENSOR", "SCREEN_ORIENTATION_SENSOR_LANDSCAPE", "SCREEN_ORIENTATION_SENSOR_PORTRAIT", "SCREEN_ORIENTATION_REVERSE_LANDSCAPE", "SCREEN_ORIENTATION_REVERSE_PORTRAIT", "SCREEN_ORIENTATION_FULL_SENSOR", "android/content/pm/PackageInfo", "versionName", "android/content/pm/PackageItemInfo", "metaData", "Landroid/os/Bundle;", "android/content/pm/PackageManager", "GET_META_DATA", "PERMISSION_GRANTED", "FEATURE_AUDIO_LOW_LATENCY", "getApplicationInfo", "(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;", "hasSystemFeature", "getPackageInfo", "android/hardware/display/DisplayManager", "getDisplay", "(I)Landroid/view/Display;", "android/media/MediaRouter$RouteInfo", "getPresentationDisplay", "()Landroid/view/Display;", "android/media/MediaRouter", "ROUTE_TYPE_LIVE_VIDEO", "getSelectedRoute", "(I)Landroid/media/MediaRouter$RouteInfo;", "android/net/ConnectivityManager", "TYPE_MOBILE", "getActiveNetworkInfo", "()Landroid/net/NetworkInfo;", "android/net/NetworkInfo", "getType", "isConnected", "android/net/Uri", "parse", "(Ljava/lang/String;)Landroid/net/Uri;", "fromFile", "(Ljava/io/File;)Landroid/net/Uri;", "isRelative", "android/os/Build$VERSION", "INCREMENTAL", "RELEASE", "SDK_INT", "android/os/Build", "DEVICE", "MANUFACTURER", "MODEL", "TAGS", "android/os/Bundle", "containsKey", "android/os/Environment", "MEDIA_MOUNTED", "getExternalStorageDirectory", "getExternalStorageState", "android/os/Vibrator", "cancel", "vibrate", "hasVibrator", "android/provider/Settings$Secure", "ANDROID_ID", "(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;", "android/provider/Settings$System", "SCREEN_OFF_TIMEOUT", "(Landroid/content/ContentResolver;Ljava/lang/String;I)I", "android/telephony/TelephonyManager", "getDeviceId", "android/util/DisplayMetrics", "widthPixels", "heightPixels", "densityDpi", "xdpi", "ydpi", "android/view/Display", "getWidth", "getHeight", "getRotation", "getMetrics", "(Landroid/util/DisplayMetrics;)V", "getDisplayId", "getRefreshRate", "getRealMetrics", "getRawWidth", "getRawHeight", "android/view/InputDevice$MotionRange", "getRange", "getAxis", "getSource", "android/view/InputDevice", "getName", "getDescriptor", "getDevice", "(I)Landroid/view/InputDevice;", "getDeviceIds", "()[I", "getSources", "getMotionRange", "(I)Landroid/view/InputDevice$MotionRange;", "getMotionRanges", "()Ljava/util/List;", "android/view/InputEvent", "android/view/KeyEvent", "KEYCODE_VOLUME_UP", "KEYCODE_VOLUME_DOWN", "getMetaState", "getAction", "getKeyCode", "getCharacters", "getRepeatCount", "android/view/MotionEvent", "(I)F", "recycle", "getEventTime", "obtain", "(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;", "getAxisValue", "(II)F", "getPointerCount", "getPointerId", "getToolType", "getButtonState", "getHistorySize", "getHistoricalEventTime", "(I)J", "getHistoricalX", "getHistoricalY", "axisToString", "(I)Ljava/lang/String;", "getY", "getX", "android/view/Window", "(II)V", "setFlags", "android/view/WindowManager$LayoutParams", "FLAG_KEEP_SCREEN_ON", "android/view/WindowManager", "getDefaultDisplay", "android/webkit/MimeTypeMap", "getFileExtensionFromUrl", "getMimeTypeFromExtension", "getSingleton", "()Landroid/webkit/MimeTypeMap;", "java/io/File", "getPath", "java/lang/Boolean", "java/lang/Class", "getClassLoader", "()Ljava/lang/ClassLoader;", "java/lang/ClassCastException", "java/lang/ClassLoader", "findLibrary", "java/lang/Float", "java/lang/Integer", "java/lang/Long", "java/lang/NoSuchMethodError", "getClass", "()Ljava/lang/Class;", "java/lang/Runnable", "java/lang/String", "(Ljava/lang/Object;)Z", "java/lang/System", "nanoTime", "java/util/Iterator", "hasNext", "next", "()Ljava/lang/Object;", "java/util/List", "iterator", "()Ljava/util/Iterator;", "java/util/Locale", "getLanguage", "getDefault", "()Ljava/util/Locale;", "getCountry", "../src/fmod.cpp", "../src/fmod_globals.cpp", "../src/fmod_profile.cpp", "../src/fmod_reverbi.cpp", "../src/fmod_soundi.cpp", "../src/fmod_systemi.cpp", "ChannelGroup", "music", "FMOD Mixer unit", "http://", "http:\\\\", "https://", "https:\\\\", "mms://", "mms:\\\\", "TIT2", "TITLE", "../src/fmod_autocleanup.h", "FMOD SoundCard Unit", "FMOD ChannelGroup Target Unit", "FMOD master group", "FMOD stream thread", "../src/fmod_codec_aiff.cpp", "FORM", "AIFC", "AIFF", "COMM", "twos", "SSND", "INST", "MARK", "sowt", "FMOD AIFF Codec", "FMOD FSB Codec", "../src/fmod_codec_fsb.cpp", "FSB3", "FSB4", "FSB2", "SYNC", "FMOD FSB 5 Codec", "FSB5", "../src/fmod_codec_fsb5.cpp", "../src/fmod_codec_it.cpp", "FMOD IT Codec", "IMPM", "PNAM", "CNAM", "Echo", "Song message", "Number of channels", "IMPI", "IMPS", "Sample name %d", "FMOD IT final mixdown unit", "FMOD IT Target Unit", "Flanger", "Chorus", "../src/fmod_codec_mod.cpp", "FMOD MOD Codec", "M.K.", "M!K!", "6CHN", "8CHN", "FLT4", "FMOD MOD Target Unit", "../src/fmod_codec_mpeg.cpp", "FMOD MPEG Codec", "RIFF", "WAVE", "Xing", "FMOD Vorbis Codec", "FMOD Raw Codec", "../src/fmod_codec_s3m.cpp", "FMOD S3M Codec", "SCRM", "FMOD S3M Target Unit", "../src/fmod_codec_tag.cpp", "FMOD Tag Reader Codec", "ARTIST", "ALBUM", "YEAR", "COMMENT", "TRACK", "GENRE", "FMOD User Reader Codec", "../src/fmod_codec_wav.cpp", "FMOD Wav Codec", "fmt ", "cue ", "fact", "LIST", "labl", "smpl", "../src/fmod_codec_xm.cpp", "FMOD XM Codec", "Extended Module: ", "OggS", "FMOD XM Target Unit", "%.02f", "../src/fmod_dsp_chorus.cpp", "FMOD Chorus", "../src/fmod_dsp_codecpool.cpp", "FMOD Compressor", "../src/fmod_dsp_delay.cpp", "FMOD Delay", "FMOD Distortion", "%.1f", "../src/fmod_dsp_echo.cpp", "FMOD Echo", "../src/fmod_dsp_flange.cpp", "FMOD Flange", "FMOD Highpass", "FMOD Highpass Simple", "../src/fmod_dsp_itecho.cpp", "FMOD IT Echo", "FMOD Lowpass", "FMOD Lowpass Simple", "FMOD IT Lowpass", "FMOD Normalize", "FMOD ParamEQ", "FMOD Pitch Shifter", "../src/fmod_dsp_resampler.cpp", "Dry Level", "Room", "Room HF", "Decay Time", "Decay HF Ratio", "Reflections", "Reflections Delay", "Reverb", "Reverb Delay", "Diffusion", "Density", "HF Reference", "Room LF", "LF Reference", "../src/fmod_dspi.cpp", "../src/fmod_codec.cpp", "../src/fmod_output.cpp", "../src/fmod_file.cpp", "FMOD file thread", "../src/fmod_file_net.cpp", "StreamTitle='", "StreamUrl='", "FMODEx/%x.%02x.%02x", "Proxy-Authorization: Basic ", "Authorization: Basic ", "Connection: close\r\n\r\n", "Content-Length:", "Transfer-Encoding: chunked", "icy-metaint:", "icy-br:", "icy-br", "icy-pub:", "icy-pub", "icy-notice1:", "icy-notice1", "icy-notice2:", "icy-notice2", "icy-name:", "icy-name", "icy-genre:", "icy-genre", "icy-url:", "icy-url", "icy-irc:", "icy-irc", "icy-icq:", "icy-icq", "icy-aim:", "icy-aim", "ice-bitrate: ", "ice-bitrate", "ice-description: ", "ice-description", "ice-public: ", "ice-public", "ice-name: ", "ice-name", "ice-genre: ", "ice-genre", "ice-url: ", "ice-url", "ice-irc: ", "ice-irc", "ice-icq: ", "ice-icq", "ice-aim: ", "ice-aim", "ice-audio-info: ", "ice-audio-info", "ice-private: ", "ice-private", "Location: ", "Winamp", ".ogg", ".mp3", "../src/fmod_memory.cpp", "%s (%d)", "../src/fmod_net.cpp", "HTTP/1.0", "HTTP/1.1", "../src/fmod_string.cpp", "../src/fmod_thread.cpp", "?????", "NoSound Driver", "FMOD NoSound Output", "FMOD mixer thread", "FMOD Software Output", "fmodoutput.wav", "<FMOD>", "fmod", "libOpenSLES.so", "Android audio input", "Audio Track output", "FMOD Audio Track Output", "(III)I", "startAudioRecord", "stopAudioRecord", "start", "stop", "close", "fmodGetInfo", "fmodProcess", "(Ljava/nio/ByteBuffer;)I", "fmodProcessMicData", "(Ljava/nio/ByteBuffer;I)I", "FMOD OpenSL ES Output", "androidRecordingPreset", "Android audio output", "android/media/AudioSystem", "getPrimaryOutputSamplingRate", "getPrimaryOutputFrameCount", "slCreateEngine", "SL_IID_ENGINE", "SL_IID_ANDROIDCONFIGURATION", "SL_IID_PLAY", "SL_IID_RECORD", "androidPlaybackStreamType", "../src/fmod_async.cpp", "FMOD nonblocking thread (%d)", "EmulatedChannel DSPHead Unit", "FMOD Resampler Unit", "FMOD Channel DSPHead Unit", "FMOD WaveTable Unit", "../src/fmod_channelgroupi.cpp", "../src/fmod_channelpool.cpp", "../src/fmod_metadata.cpp", "../src/fmod_plugin.cpp", "../src/fmod_pluginfactory.cpp", "../src/fmod_profile_codec.cpp", "../src/fmod_profile_cpu.cpp", "../src/fmod_profile_dsp.cpp", "../src/fmod_soundgroupi.cpp", "../src/fmod_dsp_codec.cpp", "FMOD DSP Codec", "ID_NAT_TARGET_NOT_CONNECTED", "ID_NAT_TARGET_UNRESPONSIVE", "UNASSIGNED_RAKNET_GUID", "%llu", "127.0.0.1", "localhost", "UNASSIGNED_SYSTEM_ADDRESS", "[UNKNOWN]", "Sending ID_CONNECTION_REQUEST", "Got ID_CONNECTION_REQUEST", "length <= 2 || buffer == 0", "Decryption failed", "dhf.isValid==false", "holeCount > 1000000", "%02X", " %02X", "Error: Unknown report type!", "Error creating socket", "Interfaces (%d):\n", "inet_aton error", "\t%-10s\t%s (%08x)\n", "Unknown bind() error %i.\n", "Binding to local socket %s\n", "%lld", "init", "UnityAds", "show", "canShowAds", "setLogLevel", "setCampaignDataURL", "UnityAdsOnFetchCompleted", "UnityAdsOnFetchFailed", "UnityAdsOnShow", "UnityAdsOnHide", "UnityAdsOnVideoCompleted", "(Ljava/lang/String;I)V", "UnityAdsOnVideoStarted", "Unknown block : %c%c%c%c\n", "Enlighten Profile Stats: ", "----------------------\n", "  Enlighten GPU Time: ", " ms \n", "  Enlighten CPU Time: ", "  Enlighten Probe Time: ", "  Enlighten Probe Interpolation Time: ", "  Enlighten CubeMap Time: ", "  System ", " Solve Time: ", "SYSTEM ", "---------------------- \n", "System Average Write Input Time: ", "System Max Write Input Time: ", "System Average Solve Time: ", "System Max Solve Time: ", "GenuineIntel", "AuthenticAMD", "%08x%08x%08x%08x", "GeoMsgLogger", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "%f %f %f %f %f %f %f %f", "%s %f %f %f %f %f %f %f %f", "\nProgress: %s\n", "Y00\t\tY11\t\tY10\t\tY1m1\t\tY20\t\tY21\t\tY2m1\t\tY2m2\t\tY22", "%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f", "PF\n%d %d\n-1.000000\n", "%I64d", "%I64u", "%f %f %f %f", "%f %f %f", "%f %f %f %f %f %f %f %f %f %f %f %f %f %f %f %f", "<allocation names disabled>", "PxD6Joint", "PxBase", "PxJoint", "PxDistanceJoint", "PxFixedJoint", "PxRevoluteJoint", "PxParticleFluid", "PxParticleSystem", "PxCloth", "PxClothFabric", "PxAggregate", "PxArticulation", "PxRigidDynamic", "PxRigidStatic", "PxConvexMesh", "PxHeightField", "PxTriangleMesh", "PxShape", "PxMaterial", "\n\t\t\t", "Flags", "NumActors", "MaxNbActors", "SelfCollision", "Actors", "PxActorRef", "PxArticulationRef", "NbParticles", "Phases", "Restvalues", "Sets", "ParticleIndices", "TetherAnchors", "TetherLengths", "bad__repx__name", "__child", "Materials", "Points", "Triangles", "materialIndices", "CookedData", "points", "triangles", "samples", "ValidParticleRange", "ValidParticleBitmap", "Positions", "Velocities", "RestOffsets", "MaxParticles", "ParticleBaseFlags", "ParticleReadDataFlags", "ProjectionPlane", "PxSphereGeometry", "parseGeometry", "PxPlaneGeometry", "PxCapsuleGeometry", "PxBoxGeometry", "PxConvexMeshGeometry", "PxTriangleMeshGeometry", "PxHeightFieldGeometry", "Shapes", "PxShapeRef", "Parent", "Fabric", "CollisionSpheres", "CollisionSpherePairs", "CollisionPlanes", "CollisionConvexMasks", "CollisionTriangles", "ParticleAccelerations", "SelfCollisionIndices", "MotionConstraints", "SeparationConstraints", "RestPositions", "VirtualParticleWeights", "VirtualParticles", "ClothFlags", "PxMaterialRef", "PxArticulationLink", "Links", "eVALID", "eCOLLISION_WITH_STATIC", "eCOLLISION_WITH_DYNAMIC", "eCOLLISION_WITH_DRAIN", "eNO_BOUNDARY_EDGES", "eS16_TM", "eDOUBLE_SIDED", "ePOSITION_BUFFER", "eVELOCITY_BUFFER", "eREST_OFFSET_BUFFER", "eFLAGS_BUFFER", "eCOLLISION_NORMAL_BUFFER", "eCOLLISION_VELOCITY_BUFFER", "eDENSITY_BUFFER", "eCOLLISION_TWOWAY", "eENABLED", "ePROJECT_TO_PLANE", "ePER_PARTICLE_REST_OFFSET", "eGPU", "eSWEPT_CONTACT", "eSCENE_COLLISION", "eVERTICAL", "eHORIZONTAL", "eBENDING", "eSHEARING", "eKINEMATIC", "eENABLE_CCD", "eENABLE_CCD_FRICTION", "eSIMULATION_SHAPE", "eSCENE_QUERY_SHAPE", "eTRIGGER_SHAPE", "eVISUALIZATION", "ePARTICLE_DRAIN", "eDISABLE_GRAVITY", "eSEND_SLEEP_NOTIFIES", "eDISABLE_SIMULATION", "eAVERAGE", "eMIN", "eMULTIPLY", "eMAX", "eN_VALUES", "ePAD_32", "eDISABLE_FRICTION", "eDISABLE_STRONG_FRICTION", "createNodeEditor", "FastXml", "createCollection", "3.3.1", "RepXCollection::create", "PxRepXSerializer", "PhysX30Collection", "UpVector", "Scale", "scale", "upvector", "eSuccess", "eSerializerNotFound", "eReferenceNotFound", "PxRigidActor", "Spring", "Stiffness", "TangentialSpring", "TangentialStiffness", "yLimit", "zLimit", "TwistLimit", "lower", "-0.785398", "upper", "0.785398", "3.1.1", "MassSpaceInertia", "MassSpaceInertiaTensor", "SleepEnergyThreshold", "SleepThreshold", "joint", "Actor0", "Actor1", "LocalPose0", "LocalPose1", "actor0", "actor1", "LocalPose", "eACTOR0", "eACTOR1", "3.2.0", "DynamicFrictionV", "StaticFrictionV", "dirOfAnisotropy", "3.3.0", "PositionBuffer", "VelocityBuffer", "RestOffsetBuffer", "PxPrismaticJoint", "PxSphericalJoint", "PxBoxGeometry.HalfExtents", "0 0 0", "PxSphereGeometry.Radius", "1 1 1", "0 0 0 1", "PxTolerancesScale.Length", "PxTolerancesScale.Mass", "1000", "PxTolerancesScale.Speed", "PxMaterial.DynamicFriction", "PxMaterial.StaticFriction", "PxMaterial.Restitution", "PxMaterial.DynamicFrictionV", "PxMaterial.StaticFrictionV", "PxMaterial.DirOfAnisotropy", "1 0 0", "PxMaterial.Flags", "PxMaterial.UserData", "PxShape.LocalPose", "0 0 0 1 0 0 0", "PxShape.SimulationFilterData", "0 0 0 0", "PxShape.QueryFilterData", "PxShape.ContactOffset", "0.02", "PxShape.RestOffset", "PxShape.Flags", "PxShape.Name", "PxShape.UserData", "PxRigidStatic.Name", "PxRigidStatic.ActorFlags", "PxRigidStatic.DominanceGroup", "PxRigidStatic.OwnerClient", "PxRigidStatic.UserData", "PxRigidStatic.GlobalPose", "PxRigidDynamic.Name", "PxRigidDynamic.ActorFlags", "PxRigidDynamic.DominanceGroup", "PxRigidDynamic.OwnerClient", "PxRigidDynamic.UserData", "PxRigidDynamic.CMassLocalPose", "PxRigidDynamic.Mass", "PxRigidDynamic.GlobalPose", "PxRigidDynamic.LinearVelocity", "PxRigidDynamic.LinearDamping", "PxRigidDynamic.AngularDamping", "0.05", "0.005", "3.40282e+038", "PxArticulationJoint.ChildPose", "PxArticulationJoint.Spring", "PxArticulationJoint.Damping", "0.78539816339", "-0.78539816339", "PxArticulationLink.Name", "PxArticulationLink.ActorFlags", "PxArticulationLink.UserData", "PxArticulationLink.Mass", "PxArticulationLink.GlobalPose", "PxArticulation.Name", "PxArticulation.UserData", "PxD6Joint.BreakForce.force", "PxD6Joint.BreakForce.torque", "PxD6Joint.ConstraintFlags", "PxD6Joint.Name", "PxD6Joint.UserData", "PxD6Joint.Motion.eX", "eLOCKED", "PxD6Joint.Motion.eY", "PxD6Joint.Motion.eZ", "PxD6Joint.Motion.eTWIST", "PxD6Joint.Motion.eSWING1", "PxD6Joint.Motion.eSWING2", "PxD6Joint.LinearLimit.Spring", "PxD6Joint.LinearLimit.Damping", "PxD6Joint.LinearLimit.Value", "PxD6Joint.TwistLimit.Spring", "PxD6Joint.TwistLimit.Damping", "PxD6Joint.TwistLimit.Upper", "1.5708", "PxD6Joint.TwistLimit.Lower", "-1.5708", "PxD6Joint.SwingLimit.Spring", "PxD6Joint.SwingLimit.Damping", "PxD6Joint.SwingLimit.YAngle", "PxD6Joint.SwingLimit.ZAngle", "PxD6Joint.Drive.eX.Spring", "PxD6Joint.Drive.eX.Damping", "PxD6Joint.Drive.eX.ForceLimit", "PxD6Joint.Drive.eX.Flags", "PxD6Joint.Drive.eY.Spring", "PxD6Joint.Drive.eY.Damping", "PxD6Joint.Drive.eY.ForceLimit", "PxD6Joint.Drive.eY.Flags", "PxD6Joint.Drive.eZ.Spring", "PxD6Joint.Drive.eZ.Damping", "PxD6Joint.Drive.eZ.ForceLimit", "PxD6Joint.Drive.eZ.Flags", "PxD6Joint.Drive.eSWING.Spring", "PxD6Joint.Drive.eSWING.Flags", "PxD6Joint.Drive.eTWIST.Spring", "PxD6Joint.Drive.eTWIST.Flags", "PxD6Joint.Drive.eSLERP.Spring", "PxD6Joint.Drive.eSLERP.Flags", "PxD6Joint.DrivePosition", "1e+010", "3.14159", "PxFixedJoint.BreakForce.force", "PxFixedJoint.ConstraintFlags", "PxFixedJoint.Name", "PxFixedJoint.UserData", "PxDistanceJoint.Name", "PxDistanceJoint.UserData", "PxDistanceJoint.MinDistance", "PxDistanceJoint.MaxDistance", "PxDistanceJoint.Tolerance", "0.025", "PxDistanceJoint.Spring", "PxDistanceJoint.Damping", "eMAX_DISTANCE_ENABLED", "PxRevoluteJoint.Name", "PxRevoluteJoint.UserData", "PxRevoluteJoint.Limit.Spring", "PxRevoluteJoint.Limit.Damping", "PxRevoluteJoint.Limit.Upper", "PxRevoluteJoint.Limit.Lower", "PxRevoluteJoint.DriveVelocity", "PxPrismaticJoint.Name", "PxPrismaticJoint.UserData", "PxPrismaticJoint.Limit.Spring", "0.01", "PxPrismaticJoint.Limit.Upper", "PxPrismaticJoint.Limit.Lower", "-3.40282e+038", "PxSphericalJoint.Name", "PxSphericalJoint.UserData", "THEEND", "PxRigidDynamic.SleepThreshold", "PxArticulation.SleepThreshold", "PxD6Joint.Actors.actor0", "8887040", "PxD6Joint.Actors.actor1", "8887456", "PxD6Joint.LocalPose.eACTOR0", "PxD6Joint.LocalPose.eACTOR1", "PxFixedJoint.Actors.actor0", "PxFixedJoint.Actors.actor1", "PxDistanceJoint.Actors.actor0", "PxDistanceJoint.Actors.actor1", "PxRevoluteJoint.Actors.actor0", "PxRevoluteJoint.Actors.actor1", "PxCloth.Name", "PxCloth.ActorFlags", "PxCloth.DominanceGroup", "PxCloth.OwnerClient", "PxCloth.ClientBehaviorBits", "PxCloth.GlobalPose", "PxCloth.ExternalAcceleration", "PxCloth.DampingCoefficient", "PxCloth.SolverFrequency", "PxCloth.SleepLinearVelocity", "PxCloth.InertiaScale", "PxCloth.FrictionCoefficient", "PxCloth.DragCoefficient", "PxCloth.CollisionMassScale", "PxParticleSystem.ActorFlags", "PxParticleSystem.OwnerClient", "PxParticleSystem.Damping", "PxParticleSystem.ParticleMass", "0.001", "PxParticleSystem.Restitution", "0.06", "PxParticleSystem.RestOffset", "0.004", "0.008", "PxParticleSystem.GridSize", "0.96", "0 0 1 0", "PxParticleFluid.ActorFlags", "PxParticleFluid.OwnerClient", "PxParticleFluid.Damping", "PxParticleFluid.ParticleMass", "PxParticleFluid.Restitution", "PxParticleFluid.RestOffset", "PxParticleFluid.ContactOffset", "PxParticleFluid.GridSize", "0.64", "PxParticleFluid.Stiffness", "PxParticleFluid.Viscosity", "PxAggregate.SelfCollision", "PhysXSDK", "Scale invalid.\n", "Unable to create scene.", "NpSceneCompletion", "./../../PhysX/src/NpScene.cpp", "PxScene::removeActor(): Actor", "NpSceneExecution", "NpSceneCollide", "NpSceneSolve", "./../../PhysX/src/NpShape.cpp", "material pointer %d is NULL!", "PxActor", "UNDEFINED", "PxParticleBase", "./../../Common/src/CmBitMap.h", "PxParticleBase: Apply forces", "PxScene::fetchResults()", "PxArticulationJoint", "PxRigidBody", "PxConstraint", "Sc::Scene::collisionTask", "Sc::Scene::clothPreprocessing", "Sc::Scene::postNarrowPhase", "Sc::Scene::finalizationPhase", "Sc::Scene::updateCCDMultiPass", "Sc::Scene::postSolver", "Sc::Scene::rigidBodySolver", "Sc::Scene::postIslandGen", "Sc::Scene::islandGen", "Sc::Scene::postBroadPhase", "Sc::Scene::broadPhase", "Sc::Scene::solveStep", "Sc::Scene::collideStep", "StaticSim", "BodySim", "ShapeSim", "Sc::Scene::postCCDPass", "Sc::Scene::ccdBroadPhase", "cloth::SwSolver::simulate", "SingleAABBUpdateTask", "ActorAABBUpdateTask", "AggregateAABBUpdateTask", "SingleAABBTask", "ActorAABBTask", "AggregateAABBTask", "BPWorkTask", "ProcessBPResultsTask", "AggregateOverlapTask", "PxsCMDiscreteUpdateTask", "PxsIntegrateTask", "PxsParallelSolverTask", "PxsSolverStartTask", "PxsSolverSetupSolve", "PxsSolverEndTask", "PxsFinalizeTask", "PxvParticleFlags", "PxU16", "PxsFluidParticle", "PxVec3", "PxReal", "density", "velocity", "PxsParticleData", "bool", "mOwnMemory", "PxU32", "mMaxParticles", "mHasRestOffsets", "mValidParticleRange", "mValidParticleCount", "PxBounds3", "mWorldBounds", "mParticleBuffer", "mRestOffsetBuffer", "BitMap", "mParticleMap", "BroadPhaseBatchUpdate", "./../../Common/src/CmTmpMem.h", "PxsCCDSweepTask", "PxsCCDAdvanceTask", "PxsContext::postCCDSweepTask", "PxsFluidCollisionTask", "PxsFluidDynamicsSphTask", "PxsFluidDynamics::mergeForce", "MBPUpdateWorkTask", "MBPPostUpdateWorkTask", "SapUpdateWorkTask", "SapPostUpdateWorkTask", "PxVehicleNoDrive", "PxVehicleDriveNW", "PxVehicleDriveTank", "PxVehicleDrive4W", "PxSerializerDefaultAdapter", "id_%u", "eId1_%u", "eId2_%u", "eSTANDARD", "eSPECIAL", "eESTIMATE", "eBEST_POSSIBLE", "eDIFF_TYPE_LS_4WD", "eDIFF_TYPE_LS_FRONTWD", "eDIFF_TYPE_LS_REARWD", "eDIFF_TYPE_OPEN_4WD", "eDIFF_TYPE_OPEN_FRONTWD", "eDIFF_TYPE_OPEN_REARWD", "eMAX_NB_DIFF_TYPES", "eREVERSE", "eNEUTRAL", "eFIRST", "eSECOND", "eTHIRD", "eFOURTH", "eFIFTH", "eSIXTH", "eSEVENTH", "eEIGHTH", "eNINTH", "eTENTH", "eELEVENTH", "eTWELFTH", "eTHIRTEENTH", "eFOURTEENTH", "eFIFTEENTH", "eSIXTEENTH", "eSEVENTEENTH", "eEIGHTEENTH", "eNINETEENTH", "eTWENTIETH", "eTWENTYFIRST", "eTWENTYSECOND", "eTWENTYTHIRD", "eTWENTYFOURTH", "eTWENTYFIFTH", "eTWENTYSIXTH", "eTWENTYSEVENTH", "eTWENTYEIGHTH", "eTWENTYNINTH", "eTHIRTIETH", "PxVehicleDrive", "PxRigidDynamicRef", "NumWheels", "NumNonDrivenWheels", "MWheelsSimData", "MDriveSimData", "MDriveSimDataNW", "MMOI", "MMass", "MCMOffset", "RecipMOI", "RecipMaxOmega", "MPeakTorque", "MMaxOmega", "MDampingRateFullThrottle", "GearRatio", "MFinalRatio", "MNbRatios", "MSwitchTime", "Latency", "UpRatios", "DownRatios", "MFrontRearSplit", "MFrontLeftRightSplit", "MRearLeftRightSplit", "MCentreBias", "MFrontBias", "MRearBias", "MType", "DrivenWheelStatus", "MAccuracy", "MFrontWidth", "MRearWidth", "MAxleSeparation", "MStrength", "MAccuracyMode", "MEstimateIterations", "Denominator", "MMinNormalisedLoad", "MMinFilteredNormalisedLoad", "MMaxNormalisedLoad", "MMaxFilteredNormalisedLoad", "RecipRadius", "MRadius", "MWidth", "MDampingRate", "MMaxBrakeTorque", "MMaxHandBrakeTorque", "MMaxSteer", "MToeAngle", "RecipMaxCompression", "RecipMaxDroop", "MSpringStrength", "MSpringDamperRate", "MMaxCompression", "MMaxDroop", "MSprungMass", "MCamberAtRest", "MCamberAtMaxCompression", "MCamberAtMaxDroop", "MLatStiffX", "MLatStiffY", "TireRestLoadsArray", "RecipTireRestLoadsArray", "ChassisMass", "SuspensionData", "WheelData", "TireData", "SuspTravelDirection", "SuspForceAppPointOffset", "TireForceAppPointOffset", "WheelCentreOffset", "WheelShapeMapping", "SceneQueryFilterData", "TireLoadFilterData", "MinLongSlipDenominator", "TireForceShaderFunction", "WheelRotationSpeed", "WheelRotationAngle", "Wheel4DynData", "VehicleType", "RigidDynamicActor", "ConcreteTypeName", "MWheelsDynData", "AnalogInput", "GearUp", "GearDown", "UseAutoGears", "CurrentGear", "TargetGear", "EngineRotationSpeed", "GearChange", "GearSwitchTime", "AutoBoxSwitchTime", "MUseAutoGears", "MGearUpPressed", "MGearDownPressed", "MCurrentGear", "MTargetGear", "MEnginespeed", "MGearSwitchTime", "MAutoBoxSwitchTime", "EngineData", "GearsData", "ClutchData", "AutoBoxData", "DiffData", "AckermannGeometryData", "MDriveDynData", "DriveModel", "BrakeTorque", "DriveTorque", "SteerAngle", "MFrictionVsSlipGraph", "MTorqueCurve", "ShadowLookupTable", "mDataPairs", "mNbDataPairs", "mPad", "PxVehicleEngineData", "mTorqueCurve", "mMOI", "mPeakTorque", "mMaxOmega", "mDampingRateFullThrottle", "mRecipMOI", "mRecipMaxOmega", "PxVehicleGearsData", "mRatios", "mFinalRatio", "mNbRatios", "mSwitchTime", "PxVehicleClutchData", "mStrength", "mAccuracyMode", "mEstimateIterations", "PxU8", "PxVehicleAutoBoxData", "mUpRatios", "mDownRatios", "PxVehicleDriveSimData", "mEngine", "mGears", "mClutch", "mAutoBox", "PxVehicleDriveDynData", "mControlAnalogVals", "mUseAutoGears", "mGearUpPressed", "mGearDownPressed", "mCurrentGear", "mTargetGear", "mEnginespeed", "mGearSwitchTime", "mAutoBoxSwitchTime", "PxVehicleWheels", "mDriveDynData", "PxVehicleDifferential4WData", "mFrontRearSplit", "mFrontLeftRightSplit", "mRearLeftRightSplit", "mCentreBias", "mFrontBias", "mRearBias", "mType", "mAccuracy", "mFrontWidth", "mRearWidth", "mAxleSeparation", "PxVehicleDriveSimData4W", "mDiff", "mAckermannGeometry", "PxVehicleDifferentialNWData", "mBitmapBuffer", "mNbDrivenWheels", "mInvNbDrivenWheels", "PxVehicleDriveSimDataNW", "mDriveSimData", "mDriveModel", "SuspLimitConstraintData", "mCMOffsets", "mDirs", "mErrors", "mActiveFlags", "StickyTireConstraintData", "mTargetSpeeds", "VehicleConstraintData", "mSuspLimitData", "mStickyTireForwardData", "mStickyTireSideData", "PxVehicleConstraintShader", "PxConstraintConnector", "mData", "mConstraint", "mVehicle", "PxVehicleSuspensionData", "mSpringStrength", "mSpringDamperRate", "mMaxCompression", "mMaxDroop", "mSprungMass", "mCamberAtRest", "mCamberAtMaxCompression", "mCamberAtMaxDroop", "mRecipMaxCompression", "mRecipMaxDroop", "PxVehicleWheelData", "mRadius", "mWidth", "mMass", "mDampingRate", "mMaxBrakeTorque", "mMaxHandBrakeTorque", "mMaxSteer", "mToeAngle", "mRecipRadius", "PxVehicleTireData", "mLatStiffX", "mLatStiffY", "mFrictionVsSlipGraph", "PxVehicleWheels4SimData", "mSuspensions", "mWheels", "mTires", "mSuspDownwardTravelDirections", "mSuspForceAppPointOffsets", "mTireForceAppPointOffsets", "mWheelCentreOffsets", "mTireRestLoads", "mRecipTireRestLoads", "PxFilterData", "mSqFilterData", "mWheelShapeMap", "PxVehicleTireLoadFilterData", "mMinNormalisedLoad", "mMinFilteredNormalisedLoad", "mMaxNormalisedLoad", "mMaxFilteredNormalisedLoad", "mDenominator", "PxVehicleWheelsSimData", "mNormalisedLoadFilter", "mWheels4SimData", "mNbWheels4", "mNbActiveWheels", "mActiveWheelsBitmapBuffer", "mThresholdLongitudinalSpeed", "mLowForwardSpeedSubStepCount", "mHighForwardSpeedSubStepCount", "mMinLongSlipDenominator", "PxVehicleWheels4DynData", "mWheelSpeeds", "mCorrectedWheelSpeeds", "mWheelRotationAngles", "mTireLowForwardSpeedTimers", "mTireLowSideSpeedTimers", "mJounces", "mRaycastsOrCachedHitResults", "mVehicleConstraints", "PxRaycastQueryResult", "mSqResults", "mHasCachedRaycastHitPlane", "PxVehicleTireForceCalculator", "void*", "mShaderData", "mShader", "PxVehicleWheelsDynData", "mWheels4DynData", "mTireForceCalculators", "mUserDatas", "void", "mWheelsSimData", "mWheelsDynData", "mActor", "mNbNonDrivenWheels", "mOnConstraintReleaseCounter", "mSteerAngles", "mDriveTorques", "mBrakeTorques", "cleaning the mesh failed", "PxHullPolygon", "Cant normalize ZERO vector", "PxTaskManager", "PxTask dispatched twice", "No GPU dispatcher", "Unknown task type", "User allocator returned NULL.", "NonTrackedAlloc", "Foundation", "SimTask.Anonymous", "SimTask.ScSceneExecution", "SimTask.ScSceneCompletion", "SimTask.ScPreBroadPhase", "SimTask.ScBroadPhase", "SimTask.ScPostBroadPhase", "SimTask.ScRigidBodySolver", "SimTask.ScIslandGen", "SimTask.ScPostIslandGen", "SimTask.ScPostSolver", "SimTask.ScCCDBroadPhase", "SimTask.ScCCDSinglePass", "SimTask.ScCCDMultiPass", "SimTask.ScPostCCDPass", "SimTask.ScSceneFinalization", "SimTask.PxsPostCCDSweep", "SimTask.PxsPostCCDAdvance", "SimTask.PxsPostCCDDepenetrate", "SimTask.PxsDynamicsMerge", "SimTask.PxsDynamicsSolver", "SimTask.PxsAtomIntegration", "SimTask.PxsParallelSolve", "SimTask.PxsContextNarrowPhase", "SimTask.PxsContextSweep", "SimTask.PxsContextSweepMerge", "SimTask.PxsFluidCollision", "SimTask.PxsFluidDynamics", "SimTask.ScClothPreprocessing", "SimAPI.pvdFrameStart", "SimAPI.simulate", "SimAPI.checkResults", "SimAPI.fetchResults", "SimAPI.addActor", "SimAPI.removeActor", "SimAPI.addAggregate", "SimAPI.removeAggregate", "SimAPI.shiftOrigin", "SimAPI.addActorToSim", "SimAPI.removeActorFromSim", "SimAPI.addShapesToSim", "SimAPI.removeShapesFromSim", "SimAPI.addShapesToSQ", "SimAPI.removeShapesFromSQ", "SimAPI.findAndReplaceWithLast", "Sim.updateShaders", "Sim.taskFrameworkSetup", "Sim.resetDependencies", "Sim.visualizeStartStep", "Sim.queueTasks", "Sim.stepSetup", "Sim.processNewOverlaps", "Sim.processLostOverlaps", "Sim.generateIslands", "Sim.processTriggers", "Sim.queueNarrowPhase", "Sim.narrowPhase", "Sim.narrowPhaseMerge", "Sim.finishModifiablePairs", "Sim.preIslandGen", "Sim.updateIslands", "Sim.preIslandGenSecondPass", "Sim.updateIslandsSecondPass", "Sim.postIslandGenSecondPass", "Sim.updateForces", "Sim.refineIslands", "Sim.queueSolverTasks", "Sim.solveGroup", "Sim.solverMerge", "Sim.solver", "Sim.createFinalize", "Sim.setupFinalize", "Sim.getFrictionPatch", "Sim.createContactPatches", "Sim.correlatePatches", "Sim.growPatches", "Sim.updateKinematics", "Sim.contactThresholds", "Sim.updateVelocities", "Sim.runConstraintShaders", "Sim.finalizeContacts", "Sim.updatePositions", "Sim.projectContacts", "Sim.ccdSweep", "Sim.ccdSweepMerge", "Sim.ccdPair", "Sim.ccdIsland", "Sim.getSimEvents", "Sim.syncBodiesAfterSolver", "Sim.projectConstraints", "Sim.checkConstraintBreakage", "Sim.visualizeEndStep", "Sim.firePreSyncCallbacks", "Sim.updatePruningTrees", "Sim.firePostSyncCallbacks", "Sim.syncState", "Sim.buildActiveTransforms", "Sim.sceneFinalization", "Sim.ParticleSystemSim_endStep", "Basic.Collision", "Basic.BroadPhase", "Basic.NarrowPhase", "Basic.RigidBodySolver", "Basic.IslandGen", "SceneQuery.raycastAny", "SceneQuery.raycastSingle", "SceneQuery.raycastMultiple", "SceneQuery.overlapMultiple", "SceneQuery.sweepAny", "SceneQuery.sweepAnyList", "SceneQuery.sweepSingle", "SceneQuery.sweepSingleList", "SceneQuery.sweepMultiple", "SceneQuery.sweepMultipleList", "SceneQuery.flushUpdates", "BatchedSceneQuery.execute", "BatchedSceneQuery.raycastAny", "BatchedSceneQuery.sweepSingle", "Articulations.setupProject", "Articulations.prepareFsData", "Articulations.setupDrives", "Articulations.jointLoads", "Articulations.integrate", "BroadPhase.updateShapeAABBs", "BroadPhase.updateAggAABBs", "BroadPhase.updateBroadphase", "BroadPhase.SapUpdate", "BroadPhase.SapPostUpdate", "BroadPhase.SapUpdateSPU", "BroadPhase.SapPostUpdateSPU", "BroadPhase.MBPUpdate", "BroadPhase.MBPPostUpdate", "BroadPhase.MBPUpdateSPU", "BroadPhase.MBPPostUpdateSPU", "BroadPhase.processBPResults", "IslandGen.resizeArrays", "IslandGen.resizeForKinematics", "IslandGen.cleanupEdgeEvents", "IslandGen.emptyIslands", "IslandGen.joinedEdges", "IslandGen.createdNodes", "IslandGen.brokenEdgeIslands", "IslandGen.freeBuffers", "IslandGen.deletedNodesEdges", "PVD.updateContacts", "PVD.updateDynamicBodies", "PVD.updateJoints", "PVD.updateCloths", "PVD.updateSleeping", "PVD.updatePariclesAndFluids", "PVD.sceneUpdate", "PVD.CREATE_PVD_INSTANCE", "PVD.RELEASE_PVD_INSTANCE", "PVD.UPDATE_PVD_PROPERTIES", "PVD.SEND_PVD_ARRAYS", "PVD.ORIGIN_SHFIT", "Legacy.PXS_PROFILE_ZONE_FL_PU", "generic", "system", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "basic_ios::clear", "POSIX", "%.*Lf", "%m/%d/%y", "%H:%M", "%H:%M:%S", "basic_string::at", "basic_string::copy", "basic_string::compare", "basic_string::_M_replace_aux", "basic_string::replace", "basic_string::basic_string", "std::bad_alloc", "std::bad_cast", "_GLOBAL_", "(anonymous namespace)", "string literal", "JArray", "vtable for ", "VTT for ", "construction vtable for ", "-in-", "typeinfo for ", "typeinfo name for ", "typeinfo fn for ", "non-virtual thunk to ", "virtual thunk to ", "covariant return thunk to ", "java Class for ", "guard variable for ", "reference temporary for ", "hidden alias for ", "_Sat ", "_Accum", "_Fract", "operator", "operator ", "java resource ", "decltype (", "{parm#", "global constructors keyed to ", "global destructors keyed to ", "{lambda(", "{unnamed type#", " [clone ", " restrict", " volatile", " const", "complex ", "imaginary ", " __vector(", "{default arg#", "signed char", "boolean", "char", "byte", "double", "long double", "float", "__float128", "unsigned char", "unsigned int", "unsigned", "long", "unsigned long", "__int128", "unsigned __int128", "short", "unsigned short", "wchar_t", "long long", "unsigned long long", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "decltype(nullptr)", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "delete[]", "new[]", "sizeof ", "alignof ", "std::exception", "std::bad_exception", "pure virtual method called\n", "-+xX0123456789abcdefABCDEF", "-0123456789", "AKST", "print", "cntrl", "alpha", "digit", "punct", "xdigit", "alnum", "graph", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "terminate called recursively\n", "  what():  ", "nonmarkingreturn", "notequal", "infinity", "lessequal", "greaterequal", "partialdiff", "summation", "product", "integral", "Omega", "radical", "approxequal", "Delta", "nonbreakingspace", "lozenge", "apple", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat", ".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "three", "four", "five", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "braceleft", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "ordfeminine", "Lslash", "Oslash", "ordmasculine", "dotlessi", "lslash", "oslash", "germandbls", "onesuperior", "logicalnot", "trademark", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold", "Delta", "Omega", "fraction", "hyphen", "macron", "periodcentered", "space", "Tcommaaccent", "tcommaaccent", "DFKaiSho-SB", "DFKaiShu", "DFKai-SB", "HuaTianKaiTi?", "HuaTianSongTi?", "MingLiU", "PMingLiU", "MingLi43", "fff?", "~C3333333333333333", "ff&?ff&?ff&?ff&?", "The message: %s in the class with classID: %d uses a parameter type that is different from the message's parameter type: %d != %d.", "AnimationClip", "AnimationCurve", "AnimationState", "Array", "Base", "BitField", "bitset", "bool", "char", "ColorRGBA", "Component", "data", "deque", "double", "dynamic_array", "FastPropertyName", "first", "float", "Font", "GameObject", "Generic Mono", "GradientNEW", "GUID", "GUIStyle", "list", "long long", "Matrix4x4f", "MdFour", "MonoBehaviour", "MonoScript", "m_ByteSize", "m_Curve", "m_EditorClassIdentifier", "m_EditorHideFlags", "m_Enabled", "m_ExtensionPtr", "m_GameObject", "m_Index", "m_IsArray", "m_IsStatic", "m_MetaFlag", "m_Name", "m_ObjectHideFlags", "m_PrefabInternal", "m_PrefabParentObject", "m_Script", "m_StaticEditorFlags", "m_Type", "m_Version", "Object", "pair", "PPtr<Component>", "PPtr<GameObject>", "PPtr<Material>", "PPtr<MonoBehaviour>", "PPtr<MonoScript>", "PPtr<Object>", "PPtr<Prefab>", "PPtr<Sprite>", "PPtr<TextAsset>", "PPtr<Texture>", "PPtr<Texture2D>", "PPtr<Transform>", "Prefab", "Quaternionf", "Rectf", "RectInt", "RectOffset", "second", "short", "size", "SInt16", "SInt32", "SInt64", "SInt8", "staticvector", "string", "TextAsset", "TextMesh", "Texture", "Texture2D", "Transform", "TypelessData", "UInt16", "UInt32", "UInt64", "UInt8", "unsigned int", "unsigned long long", "unsigned short", "vector", "Vector2f", "Vector3f", "Vector4f", "m_ScriptingClassIdentifier", "5\t%\t)\t.\t'\t-\tN\t", ">\t?\t3\t^\u000b", "Z\tk\t", "`\tg\te\tp\tb\t_\tt\t", "?\n3\n", "?\nA\nL\nB\nK\nL\nL\n", "M\nY\nI\n", "C\nO\nH\nJ\n", "N\n^\n_\nR\n[\nd\nh\nm\nm\ns\n~\nu\n", "^\u000b3\u000b:\u000b>\u000bA\u000bE\u000bL\u000bQ\u000bV\u000b", "/KX\u000b", "STUVW", "?B>h?", "p?mVm?", "HP,?io0?", "~?,eI?", "DX10", "precision mediump float;attribute vec4 vertex;\nuniform vec4 uvOffsetAndScale;\nvarying vec2 texCoord;\nvoid main()\n{\n    gl_Position = vec4(vertex.xy, 0.0, 1.0);\n    texCoord = vertex.zw * uvOffsetAndScale.zw + uvOffsetAndScale.xy;\n}\n", "precision mediump float;varying vec2 texCoord;\nuniform sampler2D tex;\nvoid main()\n{\n    vec4 c = texture2D(tex, texCoord);\n    gl_FragColor = %s;\n}\n", "#version 300 es\n\nprecision lowp float;\nout vec4 outcol;\nvoid main(void) { outcol = vec4(1.0, 1.0, 1.0, 1.0); }\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<configuration>\n\n\t<configSections>\n\t\t<section name=\"configProtectedData\" type=\"System.Configuration.ProtectedConfigurationSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t<section name=\"appSettings\" type=\"System.Configuration.AppSettingsSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t<section name=\"connectionStrings\" type=\"System.Configuration.ConnectionStringsSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t<section name=\"mscorlib\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowLocation=\"false\"/>\n\t\t<section name=\"runtime\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowLocation=\"false\"/>\n\t\t<section name=\"assemblyBinding\"  type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowLocation=\"false\" />\n\t\t<section name=\"satelliteassemblies\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowLocation=\"false\" />\n\t\t<section name=\"startup\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowLocation=\"false\"/>\n\t\t<section name=\"system.codedom\" type=\"System.CodeDom.Compiler.CodeDomConfigurationHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t<section name=\"system.data\" type=\"System.Data.Common.DbProviderFactoriesConfigurationHandler, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t<section name=\"system.diagnostics\" type=\"System.Diagnostics.DiagnosticsConfigurationHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t<section name=\"system.runtime.remoting\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" allowLocation=\"false\"/>\n\t\t<section name=\"system.windows.forms\" type=\"System.Windows.Forms.WindowsFormsSection, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t<section name=\"windows\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowLocation=\"false\" />\n\t\t<section name=\"strongNames\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" allowLocation=\"false\"/>\n\t\t<sectionGroup name=\"system.web\" type=\"System.Web.Configuration.SystemWebSectionGroup, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\">\n\t\t\t<section name=\"anonymousIdentification\" type=\"System.Web.Configuration.AnonymousIdentificationSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"authentication\" type=\"System.Web.Configuration.AuthenticationSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"authorization\" type=\"System.Web.Configuration.AuthorizationSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"browserCaps\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"clientTarget\" type=\"System.Web.Configuration.ClientTargetSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"compilation\" type=\"System.Web.Configuration.CompilationSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"customErrors\" type=\"System.Web.Configuration.CustomErrorsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"deployment\" type=\"System.Web.Configuration.DeploymentSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineOnly\" />\n\t\t\t<section name=\"globalization\" type=\"System.Web.Configuration.GlobalizationSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"healthMonitoring\" type=\"System.Web.Configuration.HealthMonitoringSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"hostingEnvironment\" type=\"System.Web.Configuration.HostingEnvironmentSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\" />\n\t\t\t<section name=\"httpCookies\" type=\"System.Web.Configuration.HttpCookiesSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"httpHandlers\" type=\"System.Web.Configuration.HttpHandlersSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"httpModules\" type=\"System.Web.Configuration.HttpModulesSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"httpRuntime\" type=\"System.Web.Configuration.HttpRuntimeSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"identity\" type=\"System.Web.Configuration.IdentitySection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"machineKey\" type=\"System.Web.Configuration.MachineKeySection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"membership\" type=\"System.Web.Configuration.MembershipSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"mobileControls\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n                        <section name=\"deviceFilters\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"pages\" type=\"System.Web.Configuration.PagesSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"processModel\" type=\"System.Web.Configuration.ProcessModelSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineOnly\" allowLocation=\"false\" />\n\t\t\t<section name=\"profile\" type=\"System.Web.Configuration.ProfileSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"roleManager\" type=\"System.Web.Configuration.RoleManagerSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"securityPolicy\" type=\"System.Web.Configuration.SecurityPolicySection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\" />\n\t\t\t<section name=\"sessionPageState\" type=\"System.Web.Configuration.SessionPageStateSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"sessionState\" type=\"System.Web.Configuration.SessionStateSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"siteMap\" type=\"System.Web.Configuration.SiteMapSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"trace\" type=\"System.Web.Configuration.TraceSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"trust\" type=\"System.Web.Configuration.TrustSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\" />\n\t\t\t<section name=\"urlMappings\" type=\"System.Web.Configuration.UrlMappingsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t<section name=\"webControls\" type=\"System.Web.Configuration.WebControlsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"webParts\" type=\"System.Web.Configuration.WebPartsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"webServices\" type=\"System.Web.Services.Configuration.WebServicesSection, System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<section name=\"xhtmlConformance\" type=\"System.Web.Configuration.XhtmlConformanceSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t\t<sectionGroup name=\"caching\" type=\"System.Web.Configuration.SystemWebCachingSectionGroup, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\">\n\t\t\t\t<section name=\"cache\" type=\"System.Web.Configuration.CacheSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t\t<section name=\"outputCache\" type=\"System.Web.Configuration.OutputCacheSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t\t<section name=\"outputCacheSettings\" type=\"System.Web.Configuration.OutputCacheSettingsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t\t<section name=\"sqlCacheDependency\" type=\"System.Web.Configuration.OutputCacheSettingsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" allowDefinition=\"MachineToApplication\"/>\n\t\t\t</sectionGroup>\n\t\t\t<section name=\"monoSettings\" type=\"System.Web.Configuration.MonoSettingsSection, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t</sectionGroup>\n\t\t<sectionGroup name=\"system.net\" type=\"System.Net.Configuration.NetSectionGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\">\n\t\t\t<section name=\"authenticationModules\" type=\"System.Net.Configuration.AuthenticationModulesSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"connectionManagement\" type=\"System.Net.Configuration.ConnectionManagementSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"defaultProxy\" type=\"System.Net.Configuration.DefaultProxySection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<sectionGroup name=\"mailSettings\" type=\"System.Net.Configuration.MailSettingsSectionGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\">\n\t\t\t\t<section name=\"smtp\" type=\"System.Net.Configuration.SmtpSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t</sectionGroup>\n\t\t\t<section name=\"requestCaching\" type=\"System.Net.Configuration.RequestCachingSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"settings\" type=\"System.Net.Configuration.SettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"webRequestModules\" type=\"System.Net.Configuration.WebRequestModulesSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t</sectionGroup>\n\t\t<section name=\"system.drawing\" type=\"System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t<sectionGroup name=\"system.serviceModel\" type=\"System.ServiceModel.Configuration.ServiceModelSectionGroup, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\">\n\t\t\t<section name=\"behaviors\" type=\"System.ServiceModel.Configuration.BehaviorsSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"bindings\" type=\"System.ServiceModel.Configuration.BindingsSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"client\" type=\"System.ServiceModel.Configuration.ClientSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"commonBehaviors\" type=\"System.ServiceModel.Configuration.CommonBehaviorsSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"diagnostics\" type=\"System.ServiceModel.Configuration.DiagnosticSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"extensions\" type=\"System.ServiceModel.Configuration.ExtensionsSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"serviceHostingEnvironment\" type=\"System.ServiceModel.Configuration.ServiceHostingEnvironmentSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<section name=\"services\" type=\"System.ServiceModel.Configuration.ServicesSection, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t</sectionGroup>\n\t\t<section name=\"system.webServer\" type=\"System.Configuration.IgnoreSection, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t<section name=\"uri\" type=\"System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t</configSections>\n\n\t<connectionStrings>\n\t\t<add name=\"LocalSqlServer\" connectionString=\"data source=.\\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true\" providerName=\"System.Data.SqlClient\"/>\n\t\t<add name=\"LocalSqliteServer\" connectionString=\"Data Source=|DataDirectory|/aspnetdb.sqlite;version=3\" providerName=\"Mono.Data.Sqlite\"/>\n\t</connectionStrings>\n\t\n\t<configProtectedData defaultProvider=\"RsaProtectedConfigurationProvider\">\n\t\t<providers>\n\t\t\t<add name=\"RsaProtectedConfigurationProvider\" type=\"System.Configuration.RsaProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"\n                             description=\"\" keyContainerName=\"MonoFrameworkConfigurationKey\" cspProviderName=\"\" useMachineContainer=\"true\" useOAEP=\"false\" />\n\t\t\t<add name=\"DataProtectionConfigurationProvider\" type=\"System.Configuration.DpapiProtectedConfigurationProvider, System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"\n                             description=\"\" useMachineProtection=\"true\" keyEntropy=\"\" />\n\t\t</providers>\n\t</configProtectedData>\n\n\t<system.net>\n\t\t<authenticationModules>\n\t\t\t<add type=\"System.Net.BasicClient, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<add type=\"System.Net.DigestClient, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<add type=\"System.Net.NtlmClient, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t</authenticationModules>\n\t\t<webRequestModules>\n\t\t\t<add prefix=\"http\" type=\"System.Net.HttpRequestCreator, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<add prefix=\"https\" type=\"System.Net.HttpRequestCreator, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<add prefix=\"file\" type=\"System.Net.FileWebRequestCreator, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<add prefix=\"ftp\" type=\"System.Net.FtpRequestCreator, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t</webRequestModules>\n\t\t<settings>\n\t\t\t<ipv6 enabled=\"false\"/>\n\t\t</settings>\n\t</system.net>\n\t\n\t<system.runtime.remoting>\n\t\t<application>\n\t\t\t<channels>\n\t\t\t\t<channel ref=\"http client\" displayName=\"http client (delay loaded)\" delayLoadAsClientChannel=\"true\" />\n\t\t\t\t<channel ref=\"tcp client\" displayName=\"tcp client (delay loaded)\" delayLoadAsClientChannel=\"true\" />\n\t\t\t\t<channel ref=\"ipc client\" displayName=\"ipc client (delay loaded)\" delayLoadAsClientChannel=\"true\" />\n\t\t\t</channels>\n\t\t</application>\n\t\t<channels>\n\t\t\t<channel id=\"http\" type=\"System.Runtime.Remoting.Channels.Http.HttpChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"http client\" type=\"System.Runtime.Remoting.Channels.Http.HttpClientChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"http server\" type=\"System.Runtime.Remoting.Channels.Http.HttpServerChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"tcp\" type=\"System.Runtime.Remoting.Channels.Tcp.TcpChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"tcp client\" type=\"System.Runtime.Remoting.Channels.Tcp.TcpClientChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"tcp server\" type=\"System.Runtime.Remoting.Channels.Tcp.TcpServerChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"ipc\" type=\"System.Runtime.Remoting.Channels.Ipc.IpcChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"ipc client\" type=\"System.Runtime.Remoting.Channels.Ipc.IpcClientChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t<channel id=\"ipc server\" type=\"System.Runtime.Remoting.Channels.Ipc.IpcServerChannel, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t</channels>\n\t\t\t<channelSinkProviders>\n\t\t\t\t<clientProviders>\n\t\t\t\t\t<formatter id=\"soap\" type=\"System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t\t\t<formatter id=\"binary\" type=\"System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t\t</clientProviders>\n\t\t\t\t<serverProviders>\n\t\t\t\t\t<formatter id=\"soap\" type=\"System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t\t\t<formatter id=\"binary\" type=\"System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t\t\t<provider id=\"wsdl\" type=\"System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider, System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" />\n\t\t\t\t</serverProviders>\n\t\t\t</channelSinkProviders>\n\t</system.runtime.remoting>\n\t\n\t<appSettings>\n\t<!--<add key=\"yourkey\" value=\"your value\" /> -->\n\t<!--<remove key=\"a key defined higher in the hierarchy\" /> -->\n\t<!--<clear/> Removes all defined settings -->\n\t</appSettings>\n\t<system.diagnostics>\n\t\t<trace autoflush=\"false\" indentsize=\"4\" />\n\t</system.diagnostics>\n        <system.drawing>\n        </system.drawing>\n\n\t<system.data>\n\t  <DbProviderFactories>\n\t    <add name=\"Mono Sqlite Data Provider\"  invariant=\"Mono.Data.SqliteClient\" \n\t\t description=\"Mono Framework Data Provider for SQLite (old version)\" \n\t\t type=\"Mono.Data.SqliteClient.SqliteFactory, Mono.Data.SqliteClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756\"/>\n\t    <add name=\"Mono Sqlite Provider\"  invariant=\"Mono.Data.Sqlite\" \n\t\t description=\"Mono Framework Data Provider for SQLite (new version)\"\n\t\t type=\"Mono.Data.Sqlite.SqliteFactory, Mono.Data.Sqlite, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756\"/>\n\t    <add name=\"Odbc Data Provider\"         invariant=\"System.Data.Odbc\"         \n\t\t description=\".Net Framework Data Provider for Odbc\"      \n\t\t type=\"System.Data.Odbc.OdbcFactory, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>\n            <add name=\"OleDb Data Provider\"        invariant=\"System.Data.OleDb\"        \n\t\t description=\".Net Framework Data Provider for OleDb\"     \n\t\t type=\"System.Data.OleDb.OleDbFactory, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>\n            <add name=\"OracleClient Data Provider\" invariant=\"System.Data.OracleClient\" \n\t\t description=\".Net Framework Data Provider for Oracle\"    \n\t\t type=\"System.Data.OracleClient.OracleClientFactory, System.Data.OracleClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>\n            <add name=\"SqlClient Data Provider\"    invariant=\"System.Data.SqlClient\"    \n\t\t description=\".Net Framework Data Provider for SqlServer\" \n\t\t type=\"System.Data.SqlClient.SqlClientFactory, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"/>\n            <add name=\"Sybase Data Provider\"    invariant=\"Mono.Data.SybaseClient\"    \n\t\t description=\".Net Framework Data Provider for Sybase\" \n\t\t type=\"Mono.Data.SybaseClient.SybaseClientFactory, Mono.Data.SybaseClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756\"/>\n\t  </DbProviderFactories>\n\t</system.data>\n\n\t<mscorlib>\n\t\t<cryptographySettings>\n\t\t\t<cryptoNameMapping>\n\t\t\t\t<cryptoClasses>\n\t\t\t\t\t<cryptoClass monoMD2=\"Mono.Security.Cryptography.MD2Managed, Mono.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=0738eb9f132ed756\" />\n\t\t\t\t</cryptoClasses>\n\t\t\t\t<nameEntry name=\"MD2\" class=\"monoMD2\" />\n\t\t\t</cryptoNameMapping>\n\t\t\t<oidMap>\n\t\t\t\t<oidEntry OID=\"1.2.840.113549.2.2\" name=\"MD2\" />\n\t\t\t\t<oidEntry OID=\"1.2.840.113549.2.2\" name=\"Mono.Security.Cryptography.MD2Managed\" />\n\t\t\t</oidMap>\n\t\t</cryptographySettings>\n\t</mscorlib>\n\n\t<strongNames>\n\t\t<pubTokenMapping>\n\t\t\t<!-- ECMA key -->\n\t\t\t<map Token=\"b77a5c561934e089\" PublicKey=\"002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df\" />\n\t\t\t<!-- Microsoft (final) key -->\n\t\t\t<map Token=\"b03f5f7f11d50a3a\" PublicKey=\"002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df\" />\n\t\t\t<!-- Microsoft (Web Service Enhancement) key -->\n\t\t\t<map Token=\"31bf3856ad364e35\" PublicKey=\"002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df\" />\n\t\t\t<!-- IBM (DB2 Data Provider) key -->\n\t\t\t<map Token=\"7c307b91aa13d208\" PublicKey=\"002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df\" />\n\t\t\t<!-- Silverlight 2.0 key -->\n\t\t\t<map Token=\"7cec85d7bea7798e\" PublicKey=\"002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df\" />\n\t\t</pubTokenMapping>\n\t</strongNames>\n\n\t<system.web>\n\t\t<webServices>\n\t\t\t<protocols>\n\t\t\t\t<add name=\"HttpSoap\"/>\n\t\t\t\t<add name=\"HttpSoap12\"/>\n\t\t\t\t<add name=\"HttpPost\"/>\n\t\t\t\t<add name=\"HttpGet\"/>\n\t\t\t\t<add name=\"Documentation\"/>\n\t\t\t</protocols>\n\t\t\t<conformanceWarnings>\n\t\t\t\t<add name=\"BasicProfile1_1\"/>\n\t\t\t</conformanceWarnings>\n\t\t\t<wsdlHelpGenerator href=\"DefaultWsdlHelpGenerator.aspx\" />\n\t\t</webServices>\n\n\t\t<membership>\n\t\t\t<providers>\n\t\t\t\t<add name=\"AspNetSqlMembershipProvider\" type=\"System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" connectionStringName=\"LocalSqlServer\" enablePasswordRetrieval=\"false\" enablePasswordReset=\"true\" requiresQuestionAndAnswer=\"true\" applicationName=\"/\" requiresUniqueEmail=\"false\" passwordFormat=\"Hashed\" maxInvalidPasswordAttempts=\"5\" minRequiredPasswordLength=\"7\" minRequiredNonalphanumericCharacters=\"1\" passwordAttemptWindow=\"10\" passwordStrengthRegularExpression=\"\"/>\n\t\t\t\t<!-- <add name=\"AspNetSqlMembershipProvider\" type=\"Mainsoft.Web.Security.GenericMembershipProvider, Mainsoft.Web.Security\" applicationName=\"/\" connectionStringName=\"LocalSqlServer\" /> -->\n\t\t\t</providers>\n\t\t</membership>\n\n\t\t<roleManager>\n\t\t\t<providers>\n\t\t\t\t<add name=\"AspNetSqlRoleProvider\" type=\"System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" applicationName=\"/\" connectionStringName=\"LocalSqlServer\" />\n\t\t\t\t<!-- <add name=\"AspNetSqlRoleProvider\" type=\"Mainsoft.Web.Security.GenericRoleProvider, Mainsoft.Web.Security\" applicationName=\"/\" connectionStringName=\"LocalSqlServer\" /> -->\n\t\t\t</providers>\n\t\t</roleManager>\n\n\t\t<profile>\n        \t\t<providers>\n            \t\t    <add name=\"AspNetSqlProfileProvider\" connectionStringName=\"LocalSqlServer\" applicationName=\"/\" type=\"System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" />\n\t\t        </providers>\n    \t\t</profile>\n\t</system.web>\n\n\t<system.serviceModel>\n\t\t<extensions>\n\t\t\t<behaviorExtensions>\n\t\t\t\t<add name=\"enableWebScript\" type=\"System.ServiceModel.Configuration.WebScriptEnablingElement, System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/>\n\t\t\t\t<add name=\"webHttp\" type=\"System.ServiceModel.Configuration.WebHttpElement, System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/>\n\t\t\t</behaviorExtensions>\n\t\t\t<bindingElementExtensions>\n\t\t\t\t<add name=\"webMessageEncoding\" type=\"System.ServiceModel.Configuration.WebMessageEncodingElement, System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/>\n\t\t\t</bindingElementExtensions>\n\t\t\t<bindingExtensions>\n\t\t\t\t<add name=\"webHttpBinding\" type=\"System.ServiceModel.Configuration.WebHttpBindingCollectionElement, System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\"/>\n\t\t\t</bindingExtensions>\n\t\t</extensions>\n\t</system.serviceModel>\n</configuration>\n\n\n", "X94<", "../src/fmod_speakerlevels_pool.cpp", "../src/fmod_codec_fsbvorbis.cpp", "../src/fmod_codec_wav_riff.cpp", "Volume of original signal to pass to output.  0.0 to 1.0. Default = 0.5.", "Volume of 1st chorus tap.  0.0 to 1.0.  Default = 0.5.", "Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap.  0.0 to 1.0.  Default = 0.5.", "Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap.  0.0 to 1.0.  Default = 0.5.", "Chorus delay in ms.  0.1 to 100.0.  Default = 40.0 ms.", "Chorus modulation rate in hz.  0.0 to 20.0.  Default = 0.8 hz.", "Chorus modulation depth.  0.0 to 1.0.  Default = 0.03.", "Chorus feedback.  Controls how much of the wet signal gets fed back into the chorus buffer.  -1.0 to 1.0.  Default = 0.0.", "Compressor threshold [-60dB, 0dB]  Default = 0dB.", "Compressor attack time. [10ms,200ms]  Default = 50ms.", "Compressor release time. [10ms,1000ms]  Default = 50ms.", "Compressor make up gain [0dB, 30dB]  Default = 0dB.", "../src/fmod_dsp_connectionpool.cpp", "Channel #0 delay in ms.  0  to 10000.  Default = 0.", "Channel #1 delay in ms.  0  to 10000.  Default = 0.", "Channel #2 delay in ms.  0  to 10000.  Default = 0.", "Channel #3 delay in ms.  0  to 10000.  Default = 0.", "Channel #4 delay in ms.  0  to 10000.  Default = 0.", "Channel #5 delay in ms.  0  to 10000.  Default = 0.", "Channel #6 delay in ms.  0  to 10000.  Default = 0.", "Channel #7 delay in ms.  0  to 10000.  Default = 0.", "Channel #8 delay in ms.  0  to 10000.  Default = 0.", "Channel #9 delay in ms.  0  to 10000.  Default = 0.", "Channel #10 delay in ms.  0  to 10000.  Default = 0.", "Channel #11 delay in ms.  0  to 10000.  Default = 0.", "Channel #12 delay in ms.  0  to 10000.  Default = 0.", "Channel #13 delay in ms.  0  to 10000.  Default = 0.", "Channel #14 delay in ms.  0  to 10000.  Default = 0.", "Channel #15 delay in ms.  0  to 10000.  Default = 0.", "Maximum delay in ms.  1  to 10000.  Default = 10.", "Distortion value.  0.0 to 1.0.  Default = 0.5.", "Echo delay in ms.  10  to 5000.  Default = 500.", "Echo decay per delay.  0 to 1.  1.0 = No decay, 0.0 = total decay.  Default = 0.5.", "Maximum channels supported.  0 to 16.  0 = same as fmod's default output polyphony, 1 = mono, 2 = stereo etc.  Default = 0.  It is suggested to leave at 0!", "Volume of original signal to pass to output.  0.0 to 1.0. Default = 1.0.", "Volume of echo delay signal to pass to output.  0.0 to 1.0. Default = 1.0.", "Volume of original signal to pass to output.  0.0 to 1.0. Default = 0.45.", "Volume of flange signal to pass to output.  0.0 to 1.0. Default = 0.55.", "Flange depth.  0.01 to 1.0.  Default = 1.0.", "Flange speed in hz.  0.0 to 20.0.  Default = 0.1.", "Highpass cutoff frequency in hz.   10.0 to 22000.0.  Default = 5000.0.", "Highpass resonance Q value. 1.0 to 10.0.  Default = 1.0.", "Highpass cutoff frequency in hz.  10.0 to 22000.0.  Default = 1000.0", "Ratio of wet (processed) signal to dry (unprocessed) signal. Must be in the range from 0.0 through 100.0 (all wet). The default value is 50.", "Percentage of output fed back into input, in the range from 0.0 through 100.0. The default value is 50.", "Delay for left channel, in milliseconds, in the range from 1.0 through 2000.0. The default value is 500 ms.", "Delay for right channel, in milliseconds, in the range from 1.0 through 2000.0. The default value is 500 ms.", "Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap. Possible values are defined as 0.0 (equivalent to FALSE) and 1.0 (equivalent to TRUE).", "Lowpass cutoff frequency in hz.   1.0 to output 22000.0.  Default = 5000.0.", "Lowpass resonance Q value. 1.0 to 10.0.  Default = 1.0.", "Lowpass cutoff frequency in hz.  1.0 to 22000.0.  Default = 5000.0", "Lowpass resonance Q value. 0.0 to 127.0.  Default = 1.0", "Time to ramp the silence to full in ms.  0.0 to 20000.0. Default = 5000.0.", "Lower volume range threshold to ignore.  0.0 to 1.0.  Default = 0.1.  Raise higher to stop amplification of very quiet signals.", "Maximum amplification allowed.  1.0 to 100000.0.  Default = 20.0.  1.0 = no amplifaction, higher values allow more boost.", "Frequency center.  20.0 to 22000.0.  Default = 8000.0.", "Octave range around the center frequency to filter.  0.2 to 5.0.  Default = 1.0.", "Frequency Gain.  0.05 to 3.0.  Default = 1.0.", "../src/fmod_dsp_pitchshift.cpp", "Pitch value.  0.5 to 2.0.  Default = 1.0. 0.5 = one octave down, 2.0 = one octave up.  1.0 does not change the pitch.", "FFT window size.  256, 512, 1024, 2048, 4096.  Default = 1024.  Increase this to reduce 'smearing'.  This effect is a warbling sound similar to when an mp3 is encoded at very low bitrates.", "Window overlap.  1 to 32.  Default = 4.  Increase this to reduce 'tremolo' effect.  Increasing it by a factor of 2 doubles the CPU usage.", "Maximum channels supported.  0 to 16.  0 = same as fmod's default output polyphony, 1 = mono, 2 = stereo etc.  See remarks for more.  Default = 0.  It is suggested to leave at 0!", "../lib/sfx/foreverb/aSfxDsp.cpp", "GET %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nIcy-MetaData:1\r\n", "../src/fmod_output_emulated.cpp", "../src/fmod_output_nosound.cpp", "../src/fmod_output_nosound_nrt.cpp", "FMOD NoSound Output - Non real-time", "../src/fmod_output_software.cpp", "../src/fmod_output_wavwriter_nrt.cpp", "FMOD WavWriter Output - Non real-time", "../android/src/fmod_os_misc.cpp", "../android/src/fmod_output_audiotrack.cpp", "../android/src/fmod_output_opensl.cpp", "SL_IID_ANDROIDSIMPLEBUFFERQUEUE", "../src/fmod_profile_channel.cpp", "../src/fmod_sample_software.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/BitStream.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_Table.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_BPlusTree.h", "Cell width does not match column width.\n", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_Queue.h", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_List.h", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_OrderedList.h", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/NatPunchthroughClient.cpp", "Starting ID_NAT_PUNCHTHROUGH_REQUEST to guid %s.", "Failed punchthrough once. Returning failure to guid %s, system address %s to user.", "Failed punchthrough twice. Returning failure to guid %s, system address %s to user.", "Not connected to facilitator, so cannot retry punchthrough after first failure. Returning failure onj guid %s, system address %s to user.", "First punchthrough failure on guid %s, system address %s. Reattempting.", "Sent OOB ID_NAT_ESTABLISH_UNIDIRECTIONAL to guid %s, system address %s.", "Sent OOB ID_NAT_ESTABLISH_BIDIRECTIONAL to guid %s, system address %s.", "Likely bidirectional punchthrough failure to guid %s, system address %s.", "Likely unidirectional punchthrough failure to guid %s, system address %s.", "Received ID_NAT_ESTABLISH_UNIDIRECTIONAL from guid %s, system address %s.", "Punchthrough to guid %s, system address %s succeeded on 2nd attempt.", "Punchthrough to guid %s, system address %s succeeded on 1st attempt.", "Punchthrough retry to guid %s failed due to ID_NAT_ALREADY_IN_PROGRESS. Returning failure.", "ID_NAT_CONNECTION_TO_TARGET_LOST", "Punchthrough retry to guid %s failed due to %s.", "Punchthrough attempt to guid %s failed due to %s.", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/RakNetworkFactory.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/RakPeer.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_ThreadsafeAllocatingQueue.h", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/RakNetSmartPtr.h", "Internal RPC error. Bitstream not long enough, could not see if RPC name was encoded.", "Internal RPC error. Could not decode unique RPC name identifier.", "Internal RPC error. Could not read RPC index value from bitstream.", "Internal RPC error. Bitstream not long enough, could not check blocking command status.", "Internal RPC error. Bitstream not long enough, could not see if network ID was encoded.", "Internal RPC error. Could not read encoded network ID.", "Internal RPC error. Invalid RPC index, function not registered.", "Internal RPC error. Unable to retreive RPC node from map.", "Internal RPC error. Using pointer to class member without network ID.", "Internal RPC error. Network ID used for static RPC function, function incorrectly called.", "Internal RPC error. Not enough data to read.", "Internal RPC error. Could not get RPC parameter length.", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/ReliabilityLayer.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_RangeList.h", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_LinkedList.h", "incomingAcks.Deserialize failed", "incomingAcks minIndex > maxIndex", "incomingNAKs.Deserialize failed", "incomingNAKs minIndex>maxIndex", "congestionManager.OnGotPacket failed", "CreateInternalPacketFromBitStream failed", "internalPacket->orderingChannel >= NUMBER_OF_ORDERED_STREAMS", "Error returned from ioctl(SIOGIFCONF)", "sendto failed with code %i for char %i and length %i.\n", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/StringCompressor.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_Map.h", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/StringTable.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/CCRakNetUDT.cpp", "Returning nat detection result to the user", "Sending NAT type detection request, local port %d\n", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/RakString.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/RSACrypt.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/DS_HuffmanEncodingTree.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/RPCMap.cpp", "/Applications/buildAgent/work/4e610339cb0f3394/RakNet/Sources/BigInt.cpp", "(Landroid/app/Activity;Ljava/lang/String;ZILjava/lang/String;)V", "%s: Java exception detected, line: %i", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z", "com/unity3d/ads/android/unity3d/UnityAdsUnityEngineWrapper", "UnityAdsAndroidBridge: RegisterNatives failed", "./../../../Include/characterkinematic/PxControllerManager.h", "The PxControllerManager::createController prototype has changed. Please upate your code.", "PxControllerManager::getController(): out-of-range index", "./../../PhysXCharacterKinematic/src/CctCharacterControllerManager.cpp", "PxControllerManager::getObstacleContext(): out-of-range index", "./../../foundation/include/PsHashInternals.h", "./../../foundation/include/PsArray.h", "./../../PhysXCharacterKinematic/src/CctObstacleContext.cpp", "./../../foundation/include/PsSortInternals.h", "PxFabricCookerImpl::cook: desc.isValid() failed!", "./../../PhysXExtensions/src/ExtClothFabricCooker.cpp", "./../../PhysXExtensions/src/ExtD6Joint.cpp", "./../../PhysXExtensions/src/ExtDistanceJoint.cpp", "./../../PhysXExtensions/src/ExtDistanceJoint.h", "./../../PhysXExtensions/src/ExtExtensions.cpp", "<no allocation names in this config>", "./../../PhysXExtensions/src/serialization/Xml/SnXmlVisitorReader.h", "./../../PhysXExtensions/src/serialization/Xml/SnXmlVisitorWriter.h", "eUSE_KINEMATIC_TARGET_FOR_SCENE_QUERIES", "eREPORT_TO_FOREIGN_CLIENTS_TRIGGER_NOTIFY", "eREPORT_TO_FOREIGN_CLIENTS_CONTACT_NOTIFY", "eREPORT_TO_FOREIGN_CLIENTS_CONSTRAINT_BREAK_NOTIFY", "eREPORT_TO_FOREIGN_CLIENTS_SCENE_QUERY", "./../../PhysXExtensions/src/ExtFixedJoint.cpp", "./../../PhysXExtensions/src/ExtFixedJoint.h", "./../../PhysXExtensions/src/ExtRevoluteJoint.cpp", "./../../PhysXExtensions/src/ExtRevoluteJoint.h", "%s: inertia tensor has negative components (ill-conditioned input expected). Approximation for inertia tensor will be used instead.", "./../../PhysXExtensions/src/ExtRigidBodyExt.cpp", "PxRigidBodyExt::addForce methods do not support eACCELERATION or eVELOCITY_CHANGE modes", "computeMassAndInertia: Provided mass or density has no valid value", "computeMassAndInertia: Not enough mass/density values provided for all (simulation) shapes", "computeMassAndInertia: Dynamic actor with illegal collision shapes", "PxRigidBodyExt::setMassAndUpdateInertia", "%s: Mass and inertia computation failed, setting mass to 1 and inertia to (1,1,1)", "%s: No mass specified, setting mass to 1 and inertia to (1,1,1)", "PxRigidBodyExt::updateMassAndInertia", "%s: No density specified, setting mass to 1 and inertia to (1,1,1)", "./../../PhysXExtensions/src/ExtTriangleMeshExt.cpp", "./../../PhysXExtensions/src/serialization/Xml/SnRepXCoreSerializer.cpp", "./../../PhysXExtensions/src/serialization/Xml/SnXmlMemoryPool.h", "RepX variable sized memory pool", "eSPATIAL_DATA_STRUCTURE_OVERFLOW", "eCOLLISION_WITH_DYNAMIC_ACTORS", "ePER_PARTICLE_COLLISION_CACHE_HINT", "NpCollection::isSerializable: object shares reference name with other object in externalReferences (reference clash).", "./../../PhysXExtensions/src/serialization/SnSerialization.cpp", "NpCollection::isSerializable: object is a subordinate and not required by other objects in the collection (orphan).", "NpCollection::isSerializable: cannot find a required serial object (collection is not complete).", "NpCollection::isSerializable: object in externalReferences requires an object in collection (circular dependency).", "Didn't suppot PxCloth upgrate from 3.2 to 3.3! ", "./../../PhysXExtensions/src/serialization/Xml/SnRepXUpgrader.cpp", "PxConvexMeshGeometry.Scale.Scale", "PxConvexMeshGeometry.Scale.Rotation", "PxConvexMeshGeometry.ConvexMesh", "PxTriangleMeshGeometry.Scale.Scale", "PxTriangleMeshGeometry.Scale.Rotation", "PxTriangleMeshGeometry.MeshFlags", "PxTriangleMeshGeometry.TriangleMesh", "PxHeightFieldGeometry.HeightField", "PxHeightFieldGeometry.HeightScale", "PxHeightFieldGeometry.RowScale", "PxHeightFieldGeometry.ColumnScale", "PxHeightFieldGeometry.HeightFieldFlags", "PxMaterial.FrictionCombineMode", "PxMaterial.RestitutionCombineMode", "eSIMULATION_SHAPE|eSCENE_QUERY_SHAPE|eVISUALIZATION", "PxRigidStatic.ClientBehaviorBits", "PxRigidDynamic.ClientBehaviorBits", "PxRigidDynamic.MassSpaceInertiaTensor", "PxRigidDynamic.AngularVelocity", "PxRigidDynamic.MaxAngularVelocity", "PxRigidDynamic.SleepEnergyThreshold", "PxRigidDynamic.SolverIterationCounts.minPositionIters", "PxRigidDynamic.SolverIterationCounts.minVelocityIters", "PxRigidDynamic.ContactReportThreshold", "PxRigidDynamic.RigidDynamicFlags", "PxArticulationJoint.ParentPose", "PxArticulationJoint.TargetOrientation", "PxArticulationJoint.TargetVelocity", "PxArticulationJoint.InternalCompliance", "PxArticulationJoint.ExternalCompliance", "PxArticulationJoint.SwingLimit.yLimit", "PxArticulationJoint.SwingLimit.zLimit", "PxArticulationJoint.SwingLimitEnabled", "PxArticulationJoint.TwistLimit.lower", "PxArticulationJoint.TwistLimit.upper", "PxArticulationJoint.TwistLimitEnabled", "PxArticulationLink.DominanceGroup", "PxArticulationLink.OwnerClient", "PxArticulationLink.ClientBehaviorBits", "PxArticulationLink.CMassLocalPose", "PxArticulationLink.MassSpaceInertiaTensor", "PxArticulationLink.LinearVelocity", "PxArticulationLink.AngularVelocity", "PxArticulation.MaxProjectionIterations", "PxArticulation.SeparationTolerance", "PxArticulation.InternalDriveIterations", "PxArticulation.ExternalDriveIterations", "PxArticulation.SolverIterationCounts.minPositionIters", "PxArticulation.SolverIterationCounts.minVelocityIters", "PxD6Joint.LinearLimit.Restitution", "PxD6Joint.LinearLimit.ContactDistance", "PxD6Joint.TwistLimit.Restitution", "PxD6Joint.TwistLimit.ContactDistance", "PxD6Joint.SwingLimit.Restitution", "PxD6Joint.SwingLimit.ContactDistance", "PxD6Joint.Drive.eSWING.Damping", "PxD6Joint.Drive.eSWING.ForceLimit", "PxD6Joint.Drive.eTWIST.Damping", "PxD6Joint.Drive.eTWIST.ForceLimit", "PxD6Joint.Drive.eSLERP.Damping", "PxD6Joint.Drive.eSLERP.ForceLimit", "PxD6Joint.DriveVelocity.linear", "PxD6Joint.DriveVelocity.angular", "PxD6Joint.ProjectionLinearTolerance", "PxD6Joint.ProjectionAngularTolerance", "PxFixedJoint.BreakForce.torque", "PxFixedJoint.ProjectionLinearTolerance", "PxFixedJoint.ProjectionAngularTolerance", "PxDistanceJoint.BreakForce.force", "PxDistanceJoint.BreakForce.torque", "PxDistanceJoint.ConstraintFlags", "PxDistanceJoint.DistanceJointFlags", "PxRevoluteJoint.BreakForce.force", "PxRevoluteJoint.BreakForce.torque", "PxRevoluteJoint.ConstraintFlags", "PxRevoluteJoint.Limit.Restitution", "PxRevoluteJoint.Limit.ContactDistance", "PxRevoluteJoint.DriveForceLimit", "PxRevoluteJoint.DriveGearRatio", "PxRevoluteJoint.RevoluteJointFlags", "PxRevoluteJoint.ProjectionLinearTolerance", "PxRevoluteJoint.ProjectionAngularTolerance", "PxPrismaticJoint.BreakForce.force", "PxPrismaticJoint.BreakForce.torque", "PxPrismaticJoint.ConstraintFlags", "PxPrismaticJoint.Limit.Restitution", "PxPrismaticJoint.Limit.Damping", "PxPrismaticJoint.Limit.ContactDistance", "PxPrismaticJoint.PrismaticJointFlags", "PxPrismaticJoint.ProjectionLinearTolerance", "PxPrismaticJoint.ProjectionAngularTolerance", "PxSphericalJoint.BreakForce.force", "PxSphericalJoint.BreakForce.torque", "PxSphericalJoint.ConstraintFlags", "PxSphericalJoint.LimitCone.Restitution", "PxSphericalJoint.LimitCone.Spring", "PxSphericalJoint.LimitCone.Damping", "PxSphericalJoint.LimitCone.ContactDistance", "PxSphericalJoint.LimitCone.YAngle", "PxSphericalJoint.LimitCone.ZAngle", "PxSphericalJoint.SphericalJointFlags", "PxSphericalJoint.ProjectionLinearTolerance", "PxArticulationJoint.TangentialSpring", "PxArticulationJoint.TangentialDamping", "PxArticulationJoint.SwingLimitContactDistance", "PxArticulationJoint.TwistLimitContactDistance", "PxFixedJoint.LocalPose.eACTOR0", "PxFixedJoint.LocalPose.eACTOR1", "PxDistanceJoint.LocalPose.eACTOR0", "PxDistanceJoint.LocalPose.eACTOR1", "PxRevoluteJoint.LocalPose.eACTOR0", "PxRevoluteJoint.LocalPose.eACTOR1", "PxPrismaticJoint.Actors.actor0", "PxPrismaticJoint.Actors.actor1", "PxPrismaticJoint.LocalPose.eACTOR0", "PxPrismaticJoint.LocalPose.eACTOR1", "PxSphericalJoint.Actors.actor0", "PxSphericalJoint.Actors.actor1", "PxSphericalJoint.LocalPose.eACTOR0", "PxSphericalJoint.LocalPose.eACTOR1", "PxCloth.MotionConstraintScaleBias.scale", "PxCloth.MotionConstraintScaleBias.bias", "PxParticleSystem.DominanceGroup", "PxParticleSystem.ExternalAcceleration", "PxParticleSystem.DynamicFriction", "PxParticleSystem.StaticFriction", "PxParticleSystem.SimulationFilterData", "PxParticleSystem.MaxMotionDistance", "PxParticleSystem.ContactOffset", "PxParticleSystem.ProjectionPlane", "PxParticleSystem.ParticleReadDataFlags", "ePOSITION_BUFFER|eFLAGS_BUFFER", "PxParticleSystem.ParticleBaseFlags", "eCOLLISION_WITH_DYNAMIC_ACTORS|eENABLED|ePER_PARTICLE_REST_OFFSET|ePER_PARTICLE_COLLISION_CACHE_HINT", "PxParticleFluid.DominanceGroup", "PxParticleFluid.ExternalAcceleration", "PxParticleFluid.DynamicFriction", "PxParticleFluid.StaticFriction", "PxParticleFluid.SimulationFilterData", "PxParticleFluid.MaxMotionDistance", "PxParticleFluid.ProjectionPlane", "PxParticleFluid.RestParticleDistance", "PxParticleFluid.ParticleReadDataFlags", "PxParticleFluid.ParticleBaseFlags", "Inserting object failed: Object type not supported for insert operation.", "./../../PhysX/src/NpPhysicsInsertionCallback.h", "./../../PhysX/src/NpMaterialManager.h", "./../../foundation/include/PsMutex.h", "Wrong version: PhysX version is 0x%08x, tried to create 0x%08x", "./../../PhysX/src/NpPhysics.cpp", "Unable to create scene. Task manager creation failed.", "PxScene::getRenderBuffer() not allowed while simulation is running.", "Not implemented in this release!", "PxScene::getActiveTransforms() not allowed while simulation is running. Call will be ignored.", "./../../PhysX/src/buffering/ScbScene.h", "PxScene::setClothInterCollisionDistance() not allowed while simulation is running. Call will be ignored.", "PxScene::setClothInterCollisionStiffness() not allowed while simulation is running. Call will be ignored.", "PxScene::setClothInterCollisionNbIterations() not allowed while simulation is running. Call will be ignored.", "PxScene::setSimulationEventCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setContactModifyCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setBroadPhaseCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setCCDMaxPasses() not allowed while simulation is running. Call will be ignored.", "Scene::flushQueryUpdates(): This call is not allowed while the simulation is running. Call will be ignored", "PxScene::addBroadPhaseRegion(): region bounds are empty. Call will be ignored.", "PxScene::getSimulationStatistics() not allowed while simulation is running. Call will be ignored.", "setVisualizationParameter: parameter out of range.", "setVisualizationParameter: value must be larger or equal to 0.", "getVisualizationParameter: param is not an enum.", "PxScene::lockWrite() detected after a PxScene::lockRead(), lock upgrading is not supported, behaviour will be undefined.", "PxScene::release(): Scene is still being simulated! PxScene::fetchResults() is called implicitly.", "PxScene::unlockWrite() called without matching call to PxScene::lockWrite(), behaviour will be undefined.", "PxScene::unlockRead() called without matching call to PxScene::lockRead(), behaviour will be undefined.", "PxScene::shiftOrigin() not allowed while simulation is running. Call will be ignored.", "PxScene::removeActor(): Individual articulation links can not be removed from the scene", "%s not assigned to scene or assigned to another scene. Call will be ignored!", "PxScene::removeActors(): Actor", "PxScene::removeArticulation(): Articulation", "PxScene::removeAggregate(): Aggregate", "PxScene::addArticulation(): Articulation link with zero mass added to scene; defaulting mass to 1", "PxScene::addArticulation(): Articulation link with zero moment of inertia added to scene; defaulting inertia to (1,1,1)", "PxScene::addArticulation(): Articulation already assigned to a scene. Call will be ignored!", "PxScene::addAggregate(): Aggregate already assigned to a scene. Call will be ignored!", "PxScene::addActor(): Static actor with no shapes added to scene", "PxScene::addActor(): Individual articulation links can not be added to the scene", "PxScene::addActor(): Actor already assigned to a scene. Call will be ignored!", "./../../PhysX/src/NpRigidActorTemplate.h", "Scene::resetFiltering(): only PxParticleBase and PxRigidActor support this operation!", "Scene::flushSimulation(): This call is not allowed while the simulation is running. Call will be ignored", "At least one object is out of the broadphase bounds. To manage those objects, define a PxBroadPhaseCallback for each used client.", "./../../foundation/include/PsSync.h", "PxScene::addActors() not allowed while simulation is running.", "PxScene::addRigidActors(): articulation link not permitted", "PxScene::addActors(): Actor already assigned to a scene. Call will be ignored!", "PxGeometryQuery::sweep(): first geometry object parameter must be sphere, capsule, box or convex geometry.", "./../../PhysX/src/NpSceneQueries.cpp", " Precise sweep doesn't support MTD. Perform MTD with default sweep", " eMTD cannot be used in conjunction with eASSUME_NO_INITIAL_OVERLAP. eASSUME_NO_INITIAL_OVERLAP will be ignored", " Precise sweep doesn't support inflation, inflation will be overwritten to be zero", "NpShape::resetFiltering: This method has been deprecated!", "PxShape::getMaterialFromInternalFaceIndex received 0xFFFFffff as input - returning NULL.", "PxShape::release: user reference has already been released", "PxShape::release: use of this method to remove a shape from an actor is deprecated, use PxRigidActor::detachShape", "NpShape::setFlag(s): triangle mesh and heightfield triggers are not supported!", "NpShape::setFlag(s): shapes cannot simultaneously be trigger shapes and simulation shapes.", "NpShape::setFlag(s): triangle mesh, heightfield and plane shapes can only be simulation shapes if part of a PxRigidStatic!", "PxShape::setGeometry(): Invalid geometry type. Changing the type of the shape is not supported.", "%s: multiple materials defined for single material geometry!", "./../../PhysX/src/NpVolumeCache.cpp", "PxVolumeCache::fill(): Fallback memory allocation failed, mMaxShapeCount = %d. Try reducing the cache size.", "PxVolumeCache::fill(): unsupported cache volume geometry type.", "PxVolumeCache: unspecified volume geometry. Reverting to uncached scene query.", "PxParticleBase::resetFiltering: This method has been deprecated!", "./../../PhysX/src/particles/NpParticleBaseTemplate.h", "Attempt to set the client id when an actor is already in a scene.", "./../../PhysX/src/NpActorTemplate.h", "Attempt to set the client id when an actor is buffering", "./../../PhysX/src/buffering/ScbActor.h", "PxActor::getWorldBounds(): Can't access particle world bounds during simulation without enabling bulk buffering.", "./../../PhysX/src/buffering/ScbParticleSystem.h", "Attempt to add forces on particle system which isn't assigned to any scene.", "PxParticleBase::lockParticleReadData()", "PxParticleReadData access through %s while its still locked by last call of %s.", "./../../PhysX/src/particles/NpParticleFluidReadData.h", "Particle data read not allowed while simulation is running.", "PxParticleBaseFlag::ePER_PARTICLE_REST_OFFSET flag is not modifiable. Operation ignored.", "./../../PhysX/src/buffering/ScbParticleSystem.cpp", "PxParticleBase::createParticles()", "Particle operations are not allowed while simulation is running.", "PxParticleBase::releaseParticles()", "PxParticleBase::setPositions()", "PxParticleBase::setVelocities()", "PxParticleBase::setRestOffsets()", "PxForceMode::Enum not supported. Assuming PxForceMode::eFORCE.", "Fetching %s data buffer failed!", "./../../PhysX/src/buffering/ScbScene.cpp", "PxScene::addBroadPhaseRegion() not allowed while simulation is running. Call will be ignored.", "PxScene::removeBroadPhaseRegion() not allowed while simulation is running. Call will be ignored.", "./../../Common/src/CmFlushPool.h", "Adding cloth to the scene failed!", "./../../LowLevel/API/include/PxsMaterialManager.h", "./../../PhysX/src/buffering/ScbShape.cpp", "Shape::setMaterials() failed. Out of memory. Call will be ignored.", "Call to PxCloth::setParticles() not allowed while simulation is running.", "./../../PhysX/src/buffering/ScbCloth.h", "Call to PxCloth::setMotionConstraints() not allowed while simulation is running.", "Call to PxCloth::getMotionConstraints() not allowed while simulation is running.", "Call to PxCloth::setMotionConstraintConfig() not allowed while simulation is running.", "Call to PxCloth::getMotionConstraintScaleBias() not allowed while simulation is running.", "Call to PxCloth::setSeparationConstraints() not allowed while simulation is running.", "Call to PxCloth::getSeparationConstraints() not allowed while simulation is running.", "Call to PxCloth::setParticleAccelerations() not allowed while simulation is running.", "Call to PxCloth::getParticleAccelerations() not allowed while simulation is running.", "Call to PxCloth::addCollisionSphere() not allowed while simulation is running.", "Call to PxCloth::removeCollisionSphere() not allowed while simulation is running.", "Call to PxCloth::setCollisionSpheres() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionSpheres() not allowed while simulation is running.", "Call to PxCloth::getCollisionData() not allowed while simulation is running.", "Call to PxCloth::addCollisionCapsule() not allowed while simulation is running.", "Call to PxCloth::removeCollisionCapsule() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionCapsules() not allowed while simulation is running.", "Call to PxCloth::addCollisionTriangle() not allowed while simulation is running.", "Call to PxCloth::removeCollisionTriangle() not allowed while simulation is running.", "Call to PxCloth::setCollisionTriangles() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionTriangles() not allowed while simulation is running.", "Call to PxCloth::addCollisionPlane() not allowed while simulation is running.", "Call to PxCloth::removeCollisionPlane() not allowed while simulation is running.", "Call to PxCloth::setCollisionPlanes() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionPlanes() not allowed while simulation is running.", "Call to PxCloth::addCollisionConvex() not allowed while simulation is running.", "Call to PxCloth::removeCollisionConvex() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionConvexes() not allowed while simulation is running.", "Call to PxCloth::setVirtualParticles() not allowed while simulation is running.", "Call to PxCloth::getNbVirtualParticles() not allowed while simulation is running.", "Call to PxCloth::getVirtualParticles() not allowed while simulation is running.", "Call to PxCloth::getNbVirtualParticleWeights() not allowed while simulation is running.", "Call to PxCloth::getVirtualParticleWeights() not allowed while simulation is running.", "Call to PxCloth::setTargetPose() not allowed while simulation is running.", "Call to PxCloth::setExternalAcceleration() not allowed while simulation is running.", "Call to PxCloth::getExternalAcceleration() not allowed while simulation is running.", "Call to PxCloth::getLinearInertiaScale() not allowed while simulation is running.", "Call to PxCloth::getAngularInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setCentrifugalInertiaScale() not allowed while simulation is running.", "Call to PxCloth::getCentrifugalInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setDampingCoefficient() not allowed while simulation is running.", "Call to PxCloth::getDampingCoefficient() not allowed while simulation is running.", "Call to PxCloth::setFrictionCoefficient() not allowed while simulation is running.", "Call to PxCloth::getFrictionCoefficient() not allowed while simulation is running.", "Call to PxCloth::setLinearDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::getLinearDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::setAngularDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::getAngularDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::setCollisionMassScale() not allowed while simulation is running.", "Call to PxCloth::getCollisionMassScale() not allowed while simulation is running.", "Call to PxCloth::setSelfCollisionDistance() not allowed while simulation is running.", "Call to PxCloth::getSelfCollisionDistance() not allowed while simulation is running.", "Call to PxCloth::setSelfCollisionStiffness() not allowed while simulation is running.", "Call to PxCloth::getSelfCollisionStiffness() not allowed while simulation is running.", "Call to PxCloth::setSelfCollisionIndices() not allowed while simulation is running.", "Call to PxCloth::getSelfCollisionIndices() not allowed while simulation is running.", "Call to PxCloth::setRestPositions() not allowed while simulation is running.", "Call to PxCloth::getRestPositions() not allowed while simulation is running.", "Call to PxCloth::setSolverFrequency() not allowed while simulation is running.", "Call to PxCloth::getSolverFrequency() not allowed while simulation is running.", "Call to PxCloth::setStiffnessFrequency() not allowed while simulation is running.", "Call to PxCloth::getStiffnessFrequency() not allowed while simulation is running.", "Call to PxCloth::setStretchConfig() not allowed while simulation is running.", "Call to PxCloth::setTetherConfig() not allowed while simulation is running.", "Call to PxCloth::getStretchConfig() not allowed while simulation is running.", "Call to PxCloth::getTetherConfig() not allowed while simulation is running.", "Call to PxCloth::getClothFlags() not allowed while simulation is running.", "Call to PxCloth::isSleeping() not allowed while simulation is running.", "Call to PxCloth::getSleepLinearVelocity() not allowed while simulation is running.", "Call to PxCloth::setSleepLinearVelocity() not allowed while simulation is running.", "Call to PxCloth::setWakeCounter() not allowed while simulation is running.", "Call to PxCloth::getWakeCounter() not allowed while simulation is running.", "Call to PxCloth::wakeUp() not allowed while simulation is running.", "Call to PxCloth::putToSleep() not allowed while simulation is running.", "Call to PxCloth::getPreviousTimeStep() not allowed while simulation is running.", "Call to PxCloth::getWorldBounds() not allowed while simulation is running.", "Call to PxCloth::setSimulationFilterData() not allowed while simulation is running.", "Call to PxCloth::getSimulationFilterData() not allowed while simulation is running.", "Call to PxCloth::setContactOffset() not allowed while simulation is running.", "Call to PxCloth::getContactOffset() not allowed while simulation is running.", "Call to PxCloth::setRestOffset() not allowed while simulation is running.", "Call to PxCloth::getRestOffset() not allowed while simulation is running.", "Call to PxCloth::setLinearInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setAngularInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setClothFlag() not allowed while simulation is running.", "PxClothParticleData access through PxCloth::lockParticleData() while its still locked by last call.", "./../../PhysX/src/cloth/NpCloth.cpp", "Call to PxCloth::lockParticleData() not allowed while simulation is running.", "Call to PxCloth::getGlobalPose() not allowed while simulation is running.", "Call to PxCloth::setGlobalPose() not allowed while simulation is running.", "NpClothFabric: double deletion detected!", "./../../PhysX/src/cloth/NpClothFabric.cpp", "NpActor::setAggregate() failed", "PxAggregate: can't add articulation links, max number of actors reached", "./../../PhysX/src/NpAggregate.cpp", "PxAggregate: can't add articulation to aggregate, articulation already belongs to an aggregate", "PxAggregate: can't add articulation to aggregate, articulation already belongs to a scene", "PxAggregate: can't remove articulation link, only whole articulations can be removed", "PxAggregate: can't remove actor, actor doesn't belong to aggregate", "PxAggregate: can't add actor to aggregate, max number of actors reached", "PxAggregate: can't add actor to aggregate, actor already belongs to an aggregate", "PxAggregate: can't add actor to aggregate, actor already belongs to a scene", "PxAggregate: can't add articulation link to aggregate, only whole articulations can be added", "PxAggregate: can't remove articulation, articulation doesn't belong to aggregate", "Root articulation link must have NULL parent pointer!", "./../../PhysX/src/NpArticulation.cpp", "Non-root articulation link must have valid parent pointer!", "RigidBody::setRigidBodyFlag: kinematic articulation links are not supported!", "./../../PhysX/src/NpRigidBodyTemplate.h", "RigidBody::setRigidBodyFlag: dynamic meshes/planes/heighfields are not supported!", "PxArticulationLink::release(): Only leaf articulation links can be released. Release call failed", "./../../PhysX/src/NpArticulationLink.cpp", "PxBatchQuery::release: This batch is still executing, skipping release", "./../../PhysX/src/NpBatchQuery.cpp", "PxBatchQuery::setUserMemory: This batch is still executing, skipping setUserMemory", "PxBatchQuery::execute: This batch is already executing", "PxBatchQuery::execute: Another thread is still adding queries to this batch", "PxBatchQuery::raycast: This batch is still executing, skipping query.", "PxBatchQuery::overlap: This batch is still executing, skipping query.", "PxBatchQuery::sweep: This batch is still executing, skipping query.", "PxConstraint: Add to rigid actor 0: Constraint already added", "PxConstraint: Add to rigid actor 1: Constraint already added", "./../../PhysX/src/NpFactory.cpp", "Articulation initialization failed: returned NULL.", "Articulation link initialization failed: returned NULL.", "Articulation link initialization failed due to joint creation failure: returned NULL.", "Articulations not registered: returned NULL.", "Cloth not registered: returned NULL.", "Particle fluid creation failed. Use PxRegisterParticles to register particle module: returned NULL.", "Particle fluid initialization failed: returned NULL.", "Particle system creation failed. Use PxRegisterParticles to register particle module: returned NULL.", "Particle system initialization failed: returned NULL.", "Cloth initialization failed: returned NULL.", "./../../foundation/include/PsPool.h", "NpMaterial::setRestitution: Invalid value %f was clamped to [0,1]!", "./../../PhysX/src/NpMaterial.cpp", "Static actor moved. Not recommended while the actor is part of a scene.", "./../../PhysX/src/NpRigidStatic.cpp", "Articulation: could not allocate low-level resources.", "./../../SimulationController/src/ScArticulationSim.cpp", "./../../LowLevel/software/include/PxsIslandManagerAux.h", "./../../SimulationController/src/ScConstraintProjectionTree.cpp", "Allocating projection node queue failed!", "Constraint: could not allocate low-level resources.", "./../../SimulationController/src/ScConstraintSim.cpp", "./../../SimulationController/src/ScContactReportBuffer.h", "./../../Common/src/CmIndexedPool.h", "Filtering: eCALLBACK set but no filter callback defined.", "./../../SimulationController/src/ScNPhaseCore.cpp", "Filtering: eKILL and eSUPPRESS must not be set simultaneously. eSUPPRESS will be used.", "Particles: Grid cell has more than 65536 interactions, potential loss of collision.", "./../../SimulationController/src/ScScene.cpp", "GPU cloth pipeline failed, switching to software", "./../../LowLevel/software/include/PxsThresholdTable.h", "Scene::shiftOrigin() failed for particle system.", "./../../Common/src/CmPreallocatingPool.h", "Sc::Scene::particlePostCollPrep", "Sc::Scene::particlePostShapeGen", "Sc::Scene::postIslandGenSecondPass", "Sc::Scene::islandGenSecondPass", "Sc::Scene::rigidBodyNarrowPhase", "Scene::addParticleSystem() failed.", "GPU cloth creation failed. Falling back to CPU implementation.", "Sc::Scene::updateCCDSinglePass", "./../../GeomUtils/src/GuGeometryUnion.h", "./../../SimulationController/src/particles/ScParticleSystemSim.cpp", "Sc::ParticleSystemSim::prepareCollisionInput", "GPU particle system creation failed. Falling back to CPU implementation.", "Unable to create broadphase entity because only 32768 shapes are supported", "./../../SimulationController/src/framework/ScElement.cpp", "./../../SimulationController/src/framework/ScInteractionScene.cpp", "Failed to create context; context number limit exceeded?", "./../../SimulationController/src/cloth/ScClothCore.cpp", "./../../SimulationController/src/cloth/ScClothFabricCore.cpp", "createClothFabric() failed, invalid phase type specified", "Loading cloth fabric failed: mismatching version of cloth fabric stream.", "Dropping collision sphere due to 32 sphere limit", "./../../SimulationController/src/cloth/ScClothSim.cpp", "Dropping collision plane due to 32 plane limit", "Dropping collision capsule due to 32 capsule limit", "Dropping collision capsule due to 32 sphere limit", "Dropping collision box due to 32 plane limit", "Dropping collision convex due to 32 plane limit", "cloth::SwSolver::StartSimulationTask", "cloth::SwSolver::EndSimulationTask", "cloth::SwSolver::CpuClothSimulationTask", "./../../LowLevelCloth/src/SwSolver.cpp", "./../../LowLevelCloth/src/Allocator.cpp", "./../../LowLevel/software/include/PxsAABBManagerAux.h", "./../../LowLevel/software/src/PxsAABBManager.cpp", "A PxAggregate has exceeded the limit of 128 PxShapes. Not all shapes of the aggregate will be added to the broapdhase", "./../../LowLevel/common/include/utils/PxcScratchAllocator.h", "./../../LowLevel/common/include/utils/PxcThreadCoherantCache.h", "./../../LowLevel/common/include/utils/PxcPool.h", "./../../foundation/include/PsSList.h", "PxsContext::prepareCMDiscreteUpdateResults", "PxsContext::mergeCMDiscreteUpdateResults", "./../../LowLevel/software/src/PxsContext.cpp", "PxsSolverConstraintPostProcessTask", "PxsSolverConstraintPartitionTask", "PxsSolverCreateFinalizeConstraintsTask", "./../../LowLevel/software/src/PxsDynamics.cpp", "./../../LowLevel/software/src/PxsIslandManager.cpp", "Island generation: objects might not get woken up or put to sleep properly.", "./../../LowLevel/software/src/PxsParticleData.cpp", "PxsParticleSystemBatcher::shapeGen", "PxsParticleSystemBatcher::dynamicsCpu", "PxsParticleSystemBatcher::collPrep", "PxsParticleSystemBatcher::collisionCpu", "./../../LowLevel/software/src/PxsParticleSystemSim.cpp", "PxsParticleSystemSim::packetShapesUpdate", "PxsParticleSystemSim::packetShapesFinalization", "PxsParticleSystemSim::dynamicsUpdate", "PxsParticleSystemSim::collisionUpdate", "PxsParticleSystemSim::collisionFinalization", "PxsParticleSystemSim::spatialHashUpdateSectionsTask", "./../../LowLevel/software/src/PxsSimObjectFactory.cpp", "./../../LowLevel/software/src/PxsSolverCoreGeneral.cpp", "Warning: articulation ill-conditioned or under severe stress, joint limit ignored", "./../../LowLevel/common/src/pipeline/PxcArticulationHelper.cpp", "./../../LowLevel/common/src/pipeline/PxcNpContactPrep.cpp", "./../../LowLevel/common/src/pipeline/PxcNpMemBlockPool.cpp", "./../../LowLevel/common/src/utils/PxcPoolMalloc.cpp", "./../../LowLevel/software/src/PxsBroadPhaseMBP.cpp", "MBP::addBoxPruner: max number of regions reached.", "MBP::removeBoxPruner: invalid handle.", "./../../LowLevel/software/src/PxsBroadPhaseSap.cpp", "./../../LowLevel/software/include/PxsBroadPhaseSapAux.h", "./../../LowLevel/software/src/PxsBroadPhaseSapAux.cpp", "PxsContext::postCCDAdvanceTask", "PxsContext::postCCDDepenetrateTask", "./../../LowLevel/software/include/PxsCCD.h", "./../../LowLevel/software/src/PxsCCD.cpp", "./../../LowLevel/software/src/PxsConstraintPartition.cpp", "PxsFluidCollision::mergeResults", "./../../LowLevel/software/src/PxsFluidCollision.cpp", "PxsFluidDynamics::mergeDensity", "./../../LowLevel/software/src/PxsFluidDynamics.cpp", "./../../LowLevel/software/src/PxsFluidSpatialHash.cpp", "./../../SceneQuery/SqSceneQueryManager.cpp", "./../../SceneQuery/SqAABBPruner.cpp", "./../../SceneQuery/SqAABBTree.cpp", "./../../SceneQuery/SqBucketPruner.cpp", "./../../SceneQuery/SqPruningPool.cpp", "./../../PhysXVehicle/src/PxVehicleNoDrive.cpp", "./../../PhysXVehicle/src/PxVehicleSDK.cpp", "PxCloseVehicleSDK called with different PxSerializationRegistry instance than PxInitVehicleSDK.", "./../../PhysXVehicle/src/PxVehicleSerialization.cpp", "./../../PhysXVehicle/src/PxVehicleTireFriction.cpp", "./../../PhysXVehicle/src/PxVehicleWheels.cpp", "MDampingRateZeroThrottleClutchEngaged", "MDampingRateZeroThrottleClutchDisengaged", "MassAndPreserveNaturalFrequency", "RecipLongitudinalStiffnessPerUnitGravity", "FrictionVsSlipGraphRecipx1Minusx0", "FrictionVsSlipGraphRecipx2Minusx1", "MLongitudinalStiffnessPerUnitGravity", "MCamberStiffnessPerUnitGravity", "./../../PhysXVehicle/src/PxVehicleDrive4W.cpp", "./../../PhysXVehicle/src/PxVehicleDriveNW.cpp", "./../../PhysXVehicle/src/PxVehicleDriveTank.cpp", "PxFixedSizeLookupTable<PxVehicleEngineData::eMAX_NB_ENGINE_TORQUE_CURVE_ENTRIES>", "PxVehicleClutchAccuracyMode::Enum", "mDampingRateZeroThrottleClutchEngaged", "mDampingRateZeroThrottleClutchDisengaged", "PxVehicleAckermannGeometryData", "mLongitudinalStiffnessPerUnitGravity", "mCamberStiffnessPerUnitGravity", "mRecipLongitudinalStiffnessPerUnitGravity", "mFrictionVsSlipGraphRecipx1Minusx0", "mFrictionVsSlipGraphRecipx2Minusx1", "./../../PhysXCooking/src/Cooking.cpp", "PxTriangleMeshDesc::convexEdgeThreshold is deprecated therefore convexEdgeThreshold will be ignored.", "Cooking::cookConvexMesh: user-provided convex mesh skinWidth is invalid!", "Cooking::cookConvexMesh: user-provided convex mesh areaTestEpsilon is invalid!", "Cooking::cookConvexMesh: user-provided hull must have less than 256 vertices!", "Cooking::cookConvexMesh: user-provided convex mesh descriptor is invalid!", "TriangleMesh::loadFromDesc: desc.isValid() failed!", "./../../PhysXCooking/src/mesh/TriangleMeshBuilder.cpp", "PxCookingParams::meshSizePerformanceTradeOff clamped to [0,1] range (value=%.4f)", "Gu::ConvexMesh: Mesh has a negative volume! Is it open or do (some) faces have reversed winding? (Taking absolute value.)", "./../../PhysXCooking/src/convex/ConvexMeshBuilder.cpp", "Gu::ConvexMesh: Error computing mesh mass properties!\n", "Gu::ConvexMesh::loadConvexHull: convex hull init failed! Try to use the PxConvexFlag::eINFLATE_CONVEX flag. (see PxToolkit::createConvexMeshSafe)", "ConvexMeshBuilder::computeHullPolygons: compute convex hull polygons failed. Provided triangles dont form a convex hull.", "Gu::ConvexMesh::loadFromDesc: desc.isValid() failed!", "./../../PhysXCooking/src/convex/hulllib.cpp", "./../../PhysXCooking/src/convex/hulllibArray.h", "./../../PhysXCooking/src/InternalTriangleMeshBuilder.cpp", "TriangleMesh: Enable mesh welding with 0 weld tolerance!", "TriangleMesh: triangles are too big, reduce their size to increase simulation stability!", "TriangleMesh: mesh is too big for this algo!", "./../../PhysXCooking/src/MeshCleaner.cpp", "./../../PhysXCooking/src/mesh/RTreeCooking.cpp", "./../../PhysXCooking/src/convex/BigConvexDataBuilder.cpp", "Meshmerizer::ExtractHullPolygons: line strip extraction failed", "./../../PhysXCooking/src/convex/ConvexHullBuilder.cpp", "ConvexHullBuilder::CreateTrianglesFromPolygons: convex hull has a polygon with less than 3 vertices!", "ConvexHullBuilder: convex hull has more than 255 polygons!", "ConvexHullBuilder: convex hull does not have PCM info! Try to use different convex mesh cooking settings.", "ConvexHullBuilder::Init: convex hull has more than 255 polygons!", "ConvexHullBuilder: convex hull does not have PCM info! Some of the vertices have less than 3 neighbor polygons. The vertex is most likely inside a polygon or on an edge between 2 polygons, please remove those vertices.", "Cooking::cookConvexMesh: non-manifold mesh cannot be used, invalid mesh!", "Adjacencies::GetBoundaryVertices: NULL parameter!", "./../../PhysXCooking/src/Adjacencies.cpp", "Adjacencies::MakeLastRef: NULL parameter!", "Adjacencies::CreateDatabase: can't work on non-manifold meshes. Try to use the PxConvexFlag::eINFLATE_CONVEX flag. (see PxToolkit::createConvexMeshSafe)", "Adjacencies::UpdateLink: invalid edge reference", "./../../PhysXCooking/src/CookingUtils.cpp", "./../../PhysXCooking/src/EdgeList.cpp", "EdgeList::ComputeActiveEdges: NULL parameter!", "ActiveEdges::ComputeConvexEdges: no edges in edge list!", "ActiveEdges::ComputeConvexEdges: no edge data in edge list!", "ActiveEdges::ComputeConvexEdges: no edge-to-triangle in edge list!", "ActiveEdges::ComputeConvexEdges: no faces-by-edges in edge list!", "EdgeList::CreateFacesToEdges: NULL parameter!", "./../../PhysXProfileSDK/PxProfileEventImpl.cpp", "./../../PhysXProfileSDK/PxProfileMemoryBuffer.h", "struct physx::profile::MemoryEvent", "./../../PhysXProfileSDK/PxProfileMemoryEventParser.h", "struct physx::profile::ProfileEvent", "./../../pxtask/src/TaskManager.cpp", "./../../foundation/src/PsFoundation.cpp", "Foundation destruction failed due to pending module references. Close/release all depending modules first.", "Foundation: Invalid registration detected.", "Foundation: Invalid deregistration detected.", "Allocations for PhysX must be 16-byte aligned.", "Wrong version: foundation version is 0x%08x, tried to create 0x%08x", "Memory allocation for foundation object failed.", "Foundation object exists already. Only one instance per process can be created.", "./../../foundation/src/unix/PsUnixMutex.cpp", "SimTask.ScRigidBodyNarrowPhase", "SimTask.ScPostRigidBodyNarrowPhase", "SimTask.ScTransformVaultUpdate", "SimTask.ScCCDBroadPhaseComplete", "SimTask.PxsAABBManagerFinalize", "SimTask.PxsConstraintPartitioning", "SimTask.PxsContextNarrowPhasePrepare", "SimTask.PxsContextNarrowPhaseMerge", "SimTask.PxsFluidCollisionMerge", "SimTask.ScParticleSystemCollisionUpdate", "SimTask.ScParticleSystemPostShapesUpdate", "SimTask.PxgSceneGpu_updateRigidMirroring", "SimTask.PxgParticleSystemSim_packetShapesUpdate", "SimTask.PxgParticleSystemSim_collisionPreparation", "SimTask.PxgParticleSystemBatcher_startParticlePipeline", "SimTask.PxgParticleSystemBatcher_cudaCompletion", "SimAPI.simAddShapeToBroadPhase", "Sim.syncBodiesAfterIntegration", "Sim.fireCustomFilteringCallbacks", "Sim.ParticleSystemSim_startStep", "Sim.ParticleSystemSim_shapesUpdateProcessing", "Sim.ParticleSystemSim_updateCollision", "BatchedSceneQuery.raycastSingle", "BatchedSceneQuery.raycastMultiple", "BatchedSceneQuery.overlapMultiple", "BatchedSceneQuery.sweepMultiple", "Articulations.prepareDataBlock", "Articulations.propagateDrivenInertia", "Articulations.computeJointDrives", "Articulations.applyJointDrives", "Articulations.applyExternalImpulses", "Articulations.setupConstraints", "BroadPhase.computeAABBUpdateLists", "BroadPhase.updateAggLocalSpaceBounds", "BroadPhase.updateLazyAggShapeAABBs", "BroadPhase.computeAggAggShapePairs", "IslandGen.duplicateKinematicNodes", "IslandGen.processSleepingIslands", "Legacy.PXS_PROFILE_ZONE_FL_PU_FIN", "Legacy.PXS_PROFILE_ZONE_FL_DYN", "Legacy.PXS_PROFILE_ZONE_FL_DYN_MERGE_DENSITY", "Legacy.PXS_PROFILE_ZONE_FL_DYN_MERGE_FORCE", "Legacy.PXS_PROFILE_ZONE_FL_DYN_FIN", "Legacy.PXS_PROFILE_ZONE_FL_COLL", "Legacy.PXS_PROFILE_ZONE_FL_COLL_FIN", "Legacy.PXS_PROFILE_ZONE_FL_HSH_SEC", "./../../Common/src/CmPtrTable.cpp", "./../../GeomUtils/src/GuBoxPruning.cpp", "./../../GeomUtils/src/GuContainerMemoryMgmt.cpp", "./../../GeomUtils/src/GuDebug.cpp", "./../../GeomUtils/src/GuMeshFactory.cpp", "Gu::GeometryUnion::computeBounds: Unknown shape type.", "./../../GeomUtils/src/GuObjectBounds.cpp", "Height Field Overlap test called with height fields unregistered ", "./../../GeomUtils/src/GuOverlapTests.cpp", "./../../GeomUtils/src/GuRevisitedRadixBuffered.cpp", "./../../GeomUtils/src/convex/GuBigConvexData.cpp", "Gu::ConvexMesh::release: double deletion detected!", "./../../GeomUtils/src/convex/GuConvexMesh.cpp", "Loading convex mesh failed: Deprecated mesh cooking format. Please install and run the mesh converter tool to convert your mesh to the new cooking format.", "./../../GeomUtils/src/mesh/GuInternalTriangleMesh.cpp", "Obsolete cooked mesh found. Mesh version has been updated, please recook your meshes.", "RTree binary image load error.", "MeshInterface::SetPointers: pointer is NULL", "./../../GeomUtils/src/mesh/GuMeshInterface.cpp", "Adjacency information not created. Set buildTriangleAdjacencies on Cooking params.", "./../../GeomUtils/src/mesh/GuMeshQuery.cpp", "./../../GeomUtils/src/mesh/GuRTree.cpp", "Gu::TriangleMesh::release: double deletion detected!", "./../../GeomUtils/src/mesh/GuTriangleMesh.cpp", "Loading triangle mesh failed: Deprecated mesh cooking format. Please recook your mesh in a new cooking format.", "Gu::HeightField::onRefCountZero: double deletion detected!", "./../../GeomUtils/src/hf/GuHeightField.cpp", "Gu::HeightField::load: PX_ALLOC failed!", "./../../GeomUtils/src/sweep/GuSweepCapsuleBox.cpp", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "locale::_S_normalize_category category not found", "locale::_Impl::_M_replace_facet", "locale::facet::_S_create_c_locale name not valid", "basic_string::_S_construct null not valid", "std::basic_string<char, std::char_traits<char>, std::allocator<char> >", "std::basic_istream<char, std::char_traits<char> >", "std::basic_ostream<char, std::char_traits<char> >", "std::basic_iostream<char, std::char_traits<char> >", "-+xX0123456789abcdef0123456789ABCDEF", "terminate called after throwing an instance of '", "terminate called without an active exception\n", "X94<", "X94<", "X94<", ",4d%", "\n\rY\t", "\u000b\rY\t", "\n\rY\t", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "N9Enlighten18BakeOutputProbeSetE", "N9Enlighten19IBakeOutputProbeSetE", "N3Geo16IGeoSerialisableE", "N3Geo14IGeoReleasableE", "N3Geo11NonCopyableE", "N9Enlighten11BaseCubeMapE", "N9Enlighten10BaseSystemE", "N9Enlighten17BaseDynamicObjectE", "N9Enlighten16CpuDynamicObjectE", "N9Enlighten18CpuDynamicObjectExE", "N9Enlighten15BaseEnvironmentE", "N9Enlighten14CpuEnvironmentE", "N9Enlighten16CpuEnvironmentExE", "N9Enlighten16EnlightenProfileE", "N9Enlighten12BaseProbeSetE", "N9Enlighten15CpuSystemCommonE", "N9Enlighten9CpuSystemE", "N9Enlighten11CpuSystemExE", "N9Enlighten17BaseUpdateManagerE", "N9Enlighten22CpuUpdateManagerCommonE", "N9Enlighten16CpuUpdateManagerE", "N9Enlighten18CpuUpdateManagerExE", "N9Enlighten14IUpdateManagerE", "N9Enlighten12FlushCommandE", "N9Enlighten7CommandE", "N9Enlighten30WorkerFunctionParameterCommandINS_24SetProbeSetTransformInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_29SetLightBankUpdateCounterInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandIiEE", "N9Enlighten30WorkerFunctionParameterCommandINS_24SetVisibilityTextureInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_21SetVisibilityBitsInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_21UpdateEnvironmentInfoEEE", "N9Enlighten25UpdateLightCommandGenericINS_10InputLightEEE", "N9Enlighten21WorkerFunctionCommandE", "N9Enlighten30WorkerFunctionParameterCommandIN3Geo7GeoGuidEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_10RemoveInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_17BaseDynamicObjectEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_11BaseCubeMapEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_12BaseProbeSetEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_10BaseSystemEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_29UpdateManagerWorkerPropertiesEEE", "N9Enlighten13LogDispatcherE", "N3Geo11GeoRefCountE", "N9Enlighten10BaseWorkerE", "N9Enlighten9CpuWorkerE", "N9Enlighten20MultithreadCpuWorkerE", "N9Enlighten26MultithreadCpuWorkerCommonE", "N9Enlighten22MultithreadCpuWorkerExE", "N9Enlighten20IUpdateManagerWorkerE", "N9Enlighten27MultithreadCpuUpdateManagerE", "N9Enlighten29MultithreadCpuUpdateManagerExE", "N9Enlighten20CpuWorkerQuitCommandE", "N9Enlighten27ExtendedLightMethodSelectorE", "N9Enlighten26DefaultLightMethodSelectorE", "N9Enlighten18DefaultThreadGroupE", "N9Enlighten12IThreadGroupE", "N3Geo13AnsiAllocatorE", "N3Geo16GeoMemoryDefaultE", "N3Geo15MemoryAllocatorE", "N3Geo15GeoMemoryStreamE", "N3Geo21GeoBufferedFileStreamE", "N3Geo15GeoDepthCubeMapE", "N3Geo13GeoFileStreamE", "N3Geo14GeoFp16TextureE", "N3Geo11GeoProgressE", "N3Geo14TxtProgressBarE", "N3Geo14GeoRGBXTextureE", "N3Geo10IGeoStreamE", "N3Geo17IGeoProgressProxyE", "N3Geo14GeoV128TextureE", "N3Geo9IffReaderE", "N3Geo9IffWriterE", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::CharacterControllerManager]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxExtendedCapsule]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const void*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxExtendedBox]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::ObstacleContext*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::ObstacleContext]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::Controller*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::CapsuleController]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::BoxController]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::RenderBuffer]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugText]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugLine]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugPoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::ObstacleContext::InternalCapsuleObstacle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cct::ObstacleContext::InternalBoxObstacle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const void*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxExtendedCapsule]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxExtendedBox]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothFabricPhase]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = {anonymous}::ConstraintGraphColorCount]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::Pair<physx::shdfnd::Pair<unsigned int, unsigned int>, physx::PxClothFabricPhaseType::Enum>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec4]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = {anonymous}::VertTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = {anonymous}::MeshEdge]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = {anonymous}::VertexDistanceCount]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec4]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Ext::DistanceJoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Ext::FixedJoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Ext::RevoluteJoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxShape*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxShape*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const physx::PxArticulationLink*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxArticulationLink*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxMaterial*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sn::ConvX]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxMetaDataEntry]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxConstraint*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpPhysics::NpDelListenerEntry*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpPhysics::NpDelListenerEntry]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpScene*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpScene]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpPhysics]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpBatchQuery*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpBatchQuery]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpVolumeCache]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxCloth*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxParticleBase*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::Actor*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = void*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::Shape*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxFlags<physx::PxClientBehaviorFlag::Enum, unsigned char>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxAggregate*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxArticulation*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxBounds3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxRigidActor*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpVolumeCache*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<unsigned char, 128u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<unsigned char, 256u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<unsigned char, 384u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::SyncImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxBaseTask*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugText]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugLine]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugPoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::RemovedShape]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::Shape*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxActorShape]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpParticleFluidReadData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpParticleFluidReadData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::BitMapBase<physx::shdfnd::Allocator>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::RemovedShape]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::Shape*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Scb::MaterialEvent]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const physx::Sc::ShapeCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxFlags<physx::PxClientBehaviorFlag::Enum, unsigned char>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothFabricPhase]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxConstraint*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpConnector]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpArticulationLink*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::SyncImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpRigidDynamic]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpRigidStatic]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpShape]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpMaterial]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpAggregate]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpConstraint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpArticulation]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpArticulationJoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpArticulationLink]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpClothFabric*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpCloth]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpClothFabric]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpParticleSystem]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpParticleFluid]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpFactory]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxActor*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxArticulation*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxConstraint*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxAggregate*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::NpConnectorArray]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::aos::Mat33V]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTransform]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcSIMDSpatial]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::BodySim*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ArticulationJointSim*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsArticulationLink]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::SimStateData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::BodyRank]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintInteraction]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ShapeInstancePairLL*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ActorPair*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::CoreInteraction*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::TriggerPairExtraData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTriggerPair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::FilterPair*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ParticleElementRbElementInteraction]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ElementInteractionMarker]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ActorPairContactReportData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::TriggerInteraction]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ShapeInstancePairLL]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ActorElementPair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ActorPair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ClothSim]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ClothCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ParticleSystemSim]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxActiveTransform]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const physx::Sc::ShapeCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ShapeSim*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = void*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::ccdBroadPhase>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePass>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::postCCDPass>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintSim*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ArticulationJointSim]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ArticulationCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ArticulationSim]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ParticleSystemCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::Scene::SimpleBodyPair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::BodyCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::TriggerPairExtraData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTriggerPair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ParticleSystemSim*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintGroupNode]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::NPhaseCore]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::StaticCore]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintProjectionManager]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::Client*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::Client]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::SimStateData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::Pool<physx::Sc::SimStateData>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintInteraction]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::Pool<physx::Sc::ConstraintInteraction>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintSim]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::Pool<physx::Sc::ConstraintSim>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::PreallocatingPool<physx::Sc::ShapeSim>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::PreallocatingPool<physx::Sc::BodySim>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::PreallocatingRegion]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::PreallocatingPool<physx::Sc::StaticSim>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ObjectIDTracker]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::SimStats]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::InteractionScene]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<unsigned char, 384u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<unsigned char, 256u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<unsigned char, 128u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxBaseTask*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ActorPair*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTransform]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ParticlePacketShape*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ParticlePacketShape]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::Interaction*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::Actor*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsContext]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<void*, 32u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<void*, 16u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Block<void*, 8u>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ClothBulkData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec4]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothParticleSeparationConstraint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothParticleMotionConstraint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothCollisionTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothCollisionPlane]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothCollisionSphere]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothParticle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothFabricPhaseType::Enum]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxClothFabricPhase]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ClothFabricBulkData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const physx::Sc::ShapeSim*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxHeightFieldSample]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec4]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::Matrix34]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxPlane]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sc::ConstraintGroupNode]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::cloth::SwInterCollisionData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::cloth::SwSolver::CpuClothSimulationTask]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::BitMapBase<physx::shdfnd::Allocator>]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = SortedData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = void*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsBodyTransformVault::PxsBody2World]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxContactModifyPair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsThreadContext]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsBroadPhaseMBP]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsAABBManager]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTransform]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::SpherePersistentContactManifold]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::LargePersistentContactManifold]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsContactManager]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsParticleShape]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsParticleSystemSim]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::SListImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugText]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugLine]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugPoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxBaseTask*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcSolverBodyData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcSolverBody]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcThresholdStreamElement]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsConstraintBatchHeader]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCompoundContactManager]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const physx::PxsIndexedContactManager*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcSolverConstraintDesc]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsContactPatch*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsThreadContext]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsParticleData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxBaseTask*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcThresholdStreamElement]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcSolverConstraintDesc]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cm::SpatialVector]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsBodyCore*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcNpMemBlock*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = PxcPoolMallocData::PoolData32]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = PxcPoolMallocData::PoolData16]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = PxcPoolMallocData::PoolData8]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcBroadPhasePair]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = BoxPruner]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = MBPEntry]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = IAABB]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBody*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = const physx::PxsCCDBody*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxcThresholdStreamElement]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDPair*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsThreadContext]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDPair, 128>::BlockInfo]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDPair, 128>::Block]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDShape, 128>::BlockInfo]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDShape, 128>::Block]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDOverlap, 128>::BlockInfo]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDOverlap, 128>::Block]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDBody, 128>::BlockInfo]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsCCDBlockArray<physx::PxsCCDBody, 128>::Block]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxsW2STransformTemp]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::AABBPruner]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::BucketPruner]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::AABBTree]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::AABBPruner::NewTreeFixup]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::FIFOStack2::NodeAndParent]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::FIFOStack2]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Sq::AABBTreeNode]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxFilterData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVehicleTireData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVehicleWheelData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVehicleSuspensionData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Cooking]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::HeightField]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::TriangleMeshBuilder]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::BigConvexData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::ConvexH]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Tri]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::EdgeListBuilder]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::RTreeNodeQ]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxVec3]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Interval]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::RTreeNodeNQ]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxBounds3V]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::Valency]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::EdgeDescData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::HullTriangleData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = AdjEdge]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::AdjTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = float]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::EdgeData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::EdgeTriangleData]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTaskDepTableRow]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTaskTableRow]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = long unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxTaskMgr]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::shdfnd::MutexImpl]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = char]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugText]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugTriangle]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugLine]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugPoint]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::GuMeshFactoryListener*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::HeightField]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::HeightField*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::ConvexMesh]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::ConvexMesh*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::TriangleMesh]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::Gu::TriangleMesh*]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugLine]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = short unsigned int]", "static const char* physx::shdfnd::ReflectionAllocator<T>::getName() [with T = physx::PxDebugLine]", "NSt8ios_base7failureE", "NSt6locale5facetE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "St11logic_error", "St12length_error", "St12out_of_range", "St13runtime_error", "St14error_category", "*N12_GLOBAL__N_122generic_error_categoryE", "*N12_GLOBAL__N_121system_error_categoryE", "St9basic_iosIcSt11char_traitsIcEE", "St9basic_iosIwSt11char_traitsIwEE", "St13basic_istreamIwSt11char_traitsIwEE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "St10ctype_base", "St9time_base", "St12codecvt_base", "St13messages_base", "St10money_base", "N9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE", "N9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE", "St13basic_ostreamIwSt11char_traitsIwEE", "St15basic_stringbufIcSt11char_traitsIcESaIcEE", "St19basic_ostringstreamIcSt11char_traitsIcESaIcEE", "St15basic_streambufIcSt11char_traitsIcEE", "St15basic_streambufIwSt11char_traitsIwEE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St9bad_alloc", "St8bad_cast", "N10__cxxabiv117__class_type_infoE", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "N10__cxxabiv121__vmi_class_type_infoE", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "St5ctypeIcE", "St5ctypeIwE"], "stringidentifiers": ["used", "free", "UNKNOWN", "ILL_ILLOPC", "ILL_ILLOPN", "ILL_ILLADR", "ILL_ILLTRP", "ILL_PRVOPC", "ILL_PRVREG", "ILL_COPROC", "ILL_BADSTK", "BUS_ADRALN", "BUS_ADRERR", "BUS_OBJERR", "FPE_INTDIV", "FPE_INTOVF", "FPE_FLTDIV", "FPE_FLTOVF", "FPE_FLTUND", "FPE_FLTRES", "FPE_FLTINV", "FPE_FLTSUB", "SEGV_MAPERR", "SEGV_ACCERR", "SIGILL", "SIGABRT", "SIGBUS", "SIGFPE", "SIGSEGV", "SIGPIPE", "SIGSTKFLT", "SIGSTOP", "type1", "truetype", "type42", "sfnt", "pshinter", "Regular", "Bold", "Black", "psnames", "smooth", "TrueType", "Weight", "Width", "OpticalSize", "Slant", "raster1", "raster5", "truncated", "duplicate", "sRGB", "invalid", "JPEGMEM", "ALLOC_FALLBACK", "ALLOC_DEFAULT", "ALLOC_TEMP_THREAD", "ALLOC_TEMP_JOB", "ALLOC_GAMEOBJECT", "ALLOC_GFX", "ALLOC_PROFILER", "Custom", "basic_string::append", "basic_string::_S_create", "Object", "EditorExtension", "EventManager", "LevelGameManager", "GlobalGameManager", "GameManager", "m_Layer", "m_Name", "m_Tag", "m_IsActive", "m_GameObject", "GameObject", "Component", "PlayerSettings", "InputManager", "TagManager", "AudioManager", "ScriptMapper", "MonoManager", "GraphicsSettings", "TimeManager", "DelayedCallManager", "PhysicsManager", "BuildSettings", "QualitySettings", "ResourceManager", "NetworkManager", "MasterServerInterface", "NavMeshAreas", "Physics2DSettings", "UnityAdsSettings", "SceneSettings", "RenderSettings", "LightmapSettings", "NavMeshSettings", "RuntimeInitializeOnLoadManager", "CloudWebServicesManager", "UnityAnalyticsManager", "OnTriggerEnter", "OnTriggerExit", "OnTriggerStay", "OnCollisionEnter", "OnCollisionExit", "OnCollisionStay", "OnCollisionEnter2D", "OnCollisionExit2D", "OnCollisionStay2D", "OnTriggerEnter2D", "OnTriggerExit2D", "OnTriggerStay2D", "OnJointBreak", "OnTransformChanged", "OnBeforeTransformParentChanged", "OnTransformParentChanged", "OnTransformChildrenChanged", "OnParticleCollision", "OnDidModifyMeshValidity", "OnDidModifyMeshDelete", "OnDidModifyMeshBounds", "OnDidModifyMesh", "OnLayersChanged", "OnDestroyedComponent", "OnDidAddComponent", "OnDidRemoveComponent", "OnBecameVisible", "OnBecameInvisible", "OnWillRenderObject", "OnPreCull", "OnPostRender", "OnPreRender", "OnControllerColliderHit", "OnAnimatorMove", "OnAnimatorMoveBuiltin", "OnAnimatorIK", "ForceRecreateCollider", "OnServerInitialized", "NetworkPlayer", "OnPlayerConnected", "OnConnectedToServer", "OnPlayerDisconnected", "OnDisconnectedFromServer", "NetworkDisconnection", "OnFailedToConnect", "NetworkConnectionError", "OnFailedToConnectToMasterServer", "OnDisconnectedFromMasterServer", "OnMasterServerEvent", "MasterServerEvent", "OnLevelWasLoaded", "OnApplicationPause", "OnApplicationFocus", "OnApplicationQuit", "OnTerrainChanged", "TerrainChangedFlags", "OnDidModifyAnimatorController", "OnDidModifyMotion", "OnDidDeleteMotion", "OnDidVelocityChange", "OnDidModifyAvatar", "OnRectTransformRemoved", "OnDidModifyAudioMixer", "OnChangeAudioMixerFloat", "OnChangeAudioMixerMute", "OnChangeAudioMixerSolo", "OnChangeAudioMixerBypassGroupEffects", "OnChangeAudioMixerBypassSingleEffect", "OnRectTransformDimensionsChange", "OnMovieEvent", "OnCanvasGroupChanged", "OnCanvasHierarchyChanged", "OnDidDeleteBillboard", "OnDidModifyBillboardBounds", "NamedObject", "Untagged", "Respawn", "Finish", "EditorOnly", "MainCamera", "GameController", "Player", "Default", "TransparentFX", "Water", "Base", "tags", "layers", "m_SortingLayers", "data", "name", "uniqueID", "basic_string::assign", "vector::_M_default_append", "vector::reserve", "basic_string::resize", "Array", "SortingLayerEntry", "vector::_M_fill_insert", "m_FileID", "m_PathID", "m_Component", "GUIElement", "GUILayer", "_MainTex", "GUITexture", "m_Texture", "m_Color", "m_PixelInset", "m_LeftBorder", "m_RightBorder", "m_TopBorder", "m_BottomBorder", "width", "height", "mempoolalloc", "_LightPos", "_LightDir", "_LightColor", "_LightTexture0", "_LightBuffer", "_LightAsQuad", "_StencilNonBackground", "_ShadowMapTexture", "_CameraDepthTexture", "_CameraNormalsTexture", "_CameraReflectionsTexture", "_CameraGBufferTexture0", "_CameraGBufferTexture1", "_CameraGBufferTexture2", "_CameraGBufferTexture3", "_SrcBlend", "_DstBlend", "_CameraDepthNormalsTexture", "RenderType", "_LightTextureB0", "_Reflection", "orthographic", "SOFTPARTICLES_ON", "UNITY_HDR_ON", "UNITY_COLORSPACE_GAMMA", "Camera", "_Texel", "_Level", "_Scale", "_Radius", "_TexA", "_TexB", "_value", "_FlareTexture", "LensFlare", "FlareLayer", "Flare", "Halo", "HaloLayer", "_BlurOffsets", "MeshIntermediateRenderer", "CanvasBatchIntermediateRenderer", "SpriteIntermediateRenderer", "m_IndirectIntensity", "m_BounceIntensity", "Light", "LightProbes", "OcclusionArea", "OcclusionPortal", "m_IsOrthoGraphic", "m_Orthographic", "m_OrthoGraphicSize", "m_OrthographicSize", "Projector", "ReflectionProbe", "unity_Lightmap_HDR", "unity_DynamicLightmap_HDR", "_HaloFalloff", "m_Ambient", "m_AmbientLight", "m_AmbientSkyboxAmount", "m_AmbientIntensity", "_ShadowProjectionParams", "ShadowmapFilter", "PCF_5x5", "Shadowmap", "Skybox", "m_CustomSkybox", "m_PVSData", "m_PVSObjectsArray", "m_PVSPortalsArray", "m_Fog", "m_FogColor", "m_FogMode", "m_FogDensity", "m_LinearFogStart", "m_LinearFogEnd", "m_AmbientSkyColor", "m_AmbientEquatorColor", "m_AmbientGroundColor", "m_AmbientMode", "m_SkyboxMaterial", "m_HaloStrength", "m_FlareStrength", "m_FlareFadeSpeed", "m_HaloTexture", "m_SpotCookie", "m_DefaultReflectionMode", "m_DefaultReflectionResolution", "m_ReflectionBounces", "m_ReflectionIntensity", "m_CustomReflection", "m_AmbientProbe", "m_AmbientProbeInGamma", "m_GeneratedSkyboxReflection", "m_Sun", "SphericalHarmonicsL2", "m_Type", "m_Mode", "m_RefreshMode", "m_TimeSlicingMode", "m_Resolution", "m_UpdateFrequency", "m_Importance", "m_BoxSize", "m_BoxOffset", "m_NearClip", "m_FarClip", "m_ShadowDistance", "m_ClearFlags", "m_BackGroundColor", "m_CullingMask", "m_IntensityMultiplier", "m_BlendDistance", "m_HDR", "m_BoxProjection", "m_RenderDynamicObjects", "m_UseOcclusionCulling", "m_CustomBakedTexture", "m_BakedTexture", "m_Bits", "BitField", "m_NearClipPlane", "m_FarClipPlane", "m_FieldOfView", "m_AspectRatio", "m_Material", "m_IgnoreLayers", "m_Open", "m_Center", "m_Size", "m_IsViewVolume", "m_Data", "m_BakedCoefficients", "m_Tetrahedralization", "m_ProbeSets", "m_Positions", "m_NonTetrahedralizedProbeSetIndexMap", "m_Hash", "m_Offset", "m_Tetrahedra", "m_HullRays", "matrix", "LightProbeData", "Hash128", "ProbeSetIndex", "ProbeSetTetrahedralization", "Matrix3x4f", "Tetrahedron", "m_Intensity", "m_Range", "m_SpotAngle", "m_CookieSize", "m_Shadows", "m_Cookie", "m_DrawHalo", "m_ActuallyLightmapped", "m_Flare", "m_RenderMode", "m_Lightmapping", "m_Strength", "m_Bias", "m_NormalBias", "ShadowSettings", "rgba", "m_Deferred", "m_DeferredReflections", "m_LegacyDeferred", "m_AlwaysIncludedShaders", "m_PreloadedShaders", "m_Shader", "BuiltinShaderSettings", "m_FlareTexture", "m_TextureLayout", "m_Elements", "m_UseFog", "m_ImageIndex", "m_Position", "m_UseLightColor", "m_Rotate", "m_Zoom", "m_Fade", "FlareElement", "m_Brightness", "m_FadeSpeed", "m_Directional", "m_NormalizedViewPortRect", "m_Depth", "m_RenderingPath", "m_TargetTexture", "m_TargetDisplay", "m_TargetEye", "m_OcclusionCulling", "m_StereoConvergence", "m_StereoSeparation", "m_StereoMirrorMode", "DirectorPlayer", "PrepareFrame", "ProcessFrame", "OnSetTime", "OnSetPlayState", "SpeedTreeWindAsset", "_ST_WindVector", "_ST_WindGlobal", "_ST_WindBranch", "_ST_WindBranchTwitch", "_ST_WindBranchWhip", "_ST_WindBranchAnchor", "_ST_WindBranchAdherences", "_ST_WindTurbulences", "_ST_WindLeaf1Ripple", "_ST_WindLeaf1Tumble", "_ST_WindLeaf1Twitch", "_ST_WindLeaf2Ripple", "_ST_WindLeaf2Tumble", "_ST_WindLeaf2Twitch", "_ST_WindFrondRipple", "_ST_WindAnimation", "_WindEnabled", "WindZone", "_Cutoff", "_maxDistanceSqr", "_CameraPosition", "_WaveAndDistance", "_WavingTint", "_CameraRight", "_CameraUp", "Diffuse", "_Color", "QuadTreeNodeRenderer", "_Control", "_SpecColor", "_Shininess", "_Smoothness", "_SpecularTex", "_MetallicTex", "_Splat0", "_Splat1", "_Splat2", "_Splat3", "_Normal0", "_Normal1", "_Normal2", "_Normal3", "_Specular0", "_Specular1", "_Specular2", "_Specular3", "_Metallic0", "_Metallic1", "_Metallic2", "_Metallic3", "_Smoothness0", "_Smoothness1", "_Smoothness2", "_Smoothness3", "AddPassShader", "BaseMapShader", "Terrain", "m_TerrainData", "m_TreeDistance", "m_TreeBillboardDistance", "m_TreeCrossFadeLength", "m_TreeMaximumFullLODCount", "m_DetailObjectDistance", "m_DetailObjectDensity", "m_HeightmapPixelError", "m_SplatMapDistance", "m_HeightmapMaximumLOD", "m_CastShadows", "m_DrawHeightmap", "m_DrawTreesAndFoliage", "m_ReflectionProbeUsage", "m_MaterialType", "m_LegacySpecular", "m_LegacyShininess", "m_MaterialTemplate", "m_LightmapIndex", "m_LightmapIndexDynamic", "m_LightmapTilingOffset", "m_LightmapTilingOffsetDynamic", "m_BakeLightProbesForTrees", "m_DynamicUVST", "m_ChunkDynamicUVST", "TerrainData", "Transform", "Tree", "_Wind", "_WindQuality", "BillboardShader", "_HalfOverCutoff", "_TerrainEngineBendTree", "m_TreeInstances", "m_TreePrototypes", "_TerrainTreeLightDirections0", "_TerrainTreeLightDirections1", "_TerrainTreeLightDirections2", "_TerrainTreeLightDirections3", "_TerrainTreeLightColors0", "_TerrainTreeLightColors1", "_TerrainTreeLightColors2", "_TerrainTreeLightColors3", "_TreeInstanceColor", "_TreeInstanceScale", "_SquashPlaneNormal", "_SquashAmount", "_TreeBillboardCameraRight", "_TreeBillboardCameraUp", "_TreeBillboardCameraFront", "_TreeBillboardCameraPos", "_TreeBillboardDistances", "vector::_M_insert_aux", "prefab", "bendFactor", "position", "widthScale", "heightScale", "rotation", "color", "lightmapColor", "index", "TreePrototype", "TreeInstance", "m_SpeedTreeWindAsset", "m_SplatDatabase", "m_DetailDatabase", "m_Heightmap", "m_Heights", "m_PrecomputedError", "m_MinMaxPatchHeights", "m_Width", "m_Height", "m_Thickness", "m_Levels", "m_Scale", "m_Patches", "m_DetailPrototypes", "m_PatchCount", "m_PatchSamples", "m_RandomRotations", "WavingGrassTint", "m_WavingGrassStrength", "m_WavingGrassAmount", "m_WavingGrassSpeed", "m_PreloadTextureAtlasData", "prototype", "prototypeTexture", "minWidth", "maxWidth", "minHeight", "maxHeight", "noiseSpread", "healthyColor", "dryColor", "lightmapFactor", "renderMode", "usePrototypeMesh", "bounds", "layerIndices", "numberOfObjects", "m_Extent", "m_Splats", "m_AlphaTextures", "m_AlphamapResolution", "m_BaseMapResolution", "m_ColorSpace", "m_MaterialRequiresMetallic", "m_MaterialRequiresSmoothness", "texture", "normalMap", "tileSize", "tileOffset", "specularMetallic", "smoothness", "Heightmap", "DetailDatabase", "DetailPrototype", "AABB", "DetailPatch", "SplatDatabase", "SplatPrototype", "m_Radius", "m_WindMain", "m_WindTurbulence", "m_WindPulseMagnitude", "m_WindPulseFrequency", "m_Wind", "m_sParams", "BranchWindAnchor0", "BranchWindAnchor1", "BranchWindAnchor2", "m_fMaxBranchLevel1Length", "GLOBAL_WIND", "GLOBAL_PRESERVE_SHAPE", "BRANCH_SIMPLE_1", "BRANCH_DIRECTIONAL_1", "BRANCH_DIRECTIONAL_FROND_1", "BRANCH_TURBULENCE_1", "BRANCH_WHIP_1", "BRANCH_OSC_COMPLEX_1", "BRANCH_SIMPLE_2", "BRANCH_DIRECTIONAL_2", "BRANCH_DIRECTIONAL_FROND_2", "BRANCH_TURBULENCE_2", "BRANCH_WHIP_2", "BRANCH_OSC_COMPLEX_2", "LEAF_RIPPLE_VERTEX_NORMAL_1", "LEAF_RIPPLE_COMPUTED_1", "LEAF_TUMBLE_1", "LEAF_TWITCH_1", "LEAF_OCCLUSION_1", "LEAF_RIPPLE_VERTEX_NORMAL_2", "LEAF_RIPPLE_COMPUTED_2", "LEAF_TUMBLE_2", "LEAF_TWITCH_2", "LEAF_OCCLUSION_2", "FROND_RIPPLE_ONE_SIDED", "FROND_RIPPLE_TWO_SIDED", "FROND_RIPPLE_ADJUST_LIGHTING", "ROLLING", "m_fStrengthResponse", "m_fDirectionResponse", "m_fAnchorOffset", "m_fAnchorDistanceScale", "Oscillation0_0", "Oscillation0_1", "Oscillation0_2", "Oscillation0_3", "Oscillation0_4", "Oscillation0_5", "Oscillation0_6", "Oscillation0_7", "Oscillation0_8", "Oscillation0_9", "Oscillation1_0", "Oscillation1_1", "Oscillation1_2", "Oscillation1_3", "Oscillation1_4", "Oscillation1_5", "Oscillation1_6", "Oscillation1_7", "Oscillation1_8", "Oscillation1_9", "Oscillation2_0", "Oscillation2_1", "Oscillation2_2", "Oscillation2_3", "Oscillation2_4", "Oscillation2_5", "Oscillation2_6", "Oscillation2_7", "Oscillation2_8", "Oscillation2_9", "Oscillation3_0", "Oscillation3_1", "Oscillation3_2", "Oscillation3_3", "Oscillation3_4", "Oscillation3_5", "Oscillation3_6", "Oscillation3_7", "Oscillation3_8", "Oscillation3_9", "Oscillation4_0", "Oscillation4_1", "Oscillation4_2", "Oscillation4_3", "Oscillation4_4", "Oscillation4_5", "Oscillation4_6", "Oscillation4_7", "Oscillation4_8", "Oscillation4_9", "Oscillation5_0", "Oscillation5_1", "Oscillation5_2", "Oscillation5_3", "Oscillation5_4", "Oscillation5_5", "Oscillation5_6", "Oscillation5_7", "Oscillation5_8", "Oscillation5_9", "Oscillation6_0", "Oscillation6_1", "Oscillation6_2", "Oscillation6_3", "Oscillation6_4", "Oscillation6_5", "Oscillation6_6", "Oscillation6_7", "Oscillation6_8", "Oscillation6_9", "Oscillation7_0", "Oscillation7_1", "Oscillation7_2", "Oscillation7_3", "Oscillation7_4", "Oscillation7_5", "Oscillation7_6", "Oscillation7_7", "Oscillation7_8", "Oscillation7_9", "Oscillation8_0", "Oscillation8_1", "Oscillation8_2", "Oscillation8_3", "Oscillation8_4", "Oscillation8_5", "Oscillation8_6", "Oscillation8_7", "Oscillation8_8", "Oscillation8_9", "Oscillation9_0", "Oscillation9_1", "Oscillation9_2", "Oscillation9_3", "Oscillation9_4", "Oscillation9_5", "Oscillation9_6", "Oscillation9_7", "Oscillation9_8", "Oscillation9_9", "m_fGlobalHeight", "m_fGlobalHeightExponent", "m_afGlobalDistance_0", "m_afGlobalDistance_1", "m_afGlobalDistance_2", "m_afGlobalDistance_3", "m_afGlobalDistance_4", "m_afGlobalDistance_5", "m_afGlobalDistance_6", "m_afGlobalDistance_7", "m_afGlobalDistance_8", "m_afGlobalDistance_9", "m_afGlobalDirectionAdherence_0", "m_afGlobalDirectionAdherence_1", "m_afGlobalDirectionAdherence_2", "m_afGlobalDirectionAdherence_3", "m_afGlobalDirectionAdherence_4", "m_afGlobalDirectionAdherence_5", "m_afGlobalDirectionAdherence_6", "m_afGlobalDirectionAdherence_7", "m_afGlobalDirectionAdherence_8", "m_afGlobalDirectionAdherence_9", "BranchLevel1", "BranchLevel2", "LeafGroup1", "LeafGroup2", "m_afFrondRippleDistance_0", "m_afFrondRippleDistance_1", "m_afFrondRippleDistance_2", "m_afFrondRippleDistance_3", "m_afFrondRippleDistance_4", "m_afFrondRippleDistance_5", "m_afFrondRippleDistance_6", "m_afFrondRippleDistance_7", "m_afFrondRippleDistance_8", "m_afFrondRippleDistance_9", "m_fFrondRippleTile", "m_fFrondRippleLightingScalar", "m_fRollingNoiseSize", "m_fRollingNoiseTwist", "m_fRollingNoiseTurbulence", "m_fRollingNoisePeriod", "m_fRollingNoiseSpeed", "m_fRollingBranchFieldMin", "m_fRollingBranchLightingAdjust", "m_fRollingBranchVerticalOffset", "m_fRollingLeafRippleMin", "m_fRollingLeafTumbleMin", "m_fGustFrequency", "m_fGustStrengthMin", "m_fGustStrengthMax", "m_fGustDurationMin", "m_fGustDurationMax", "m_fGustRiseScalar", "m_fGustFallScalar", "m_afRippleDistance_0", "m_afRippleDistance_1", "m_afRippleDistance_2", "m_afRippleDistance_3", "m_afRippleDistance_4", "m_afRippleDistance_5", "m_afRippleDistance_6", "m_afRippleDistance_7", "m_afRippleDistance_8", "m_afRippleDistance_9", "m_afTumbleFlip_0", "m_afTumbleFlip_1", "m_afTumbleFlip_2", "m_afTumbleFlip_3", "m_afTumbleFlip_4", "m_afTumbleFlip_5", "m_afTumbleFlip_6", "m_afTumbleFlip_7", "m_afTumbleFlip_8", "m_afTumbleFlip_9", "m_afTumbleTwist_0", "m_afTumbleTwist_1", "m_afTumbleTwist_2", "m_afTumbleTwist_3", "m_afTumbleTwist_4", "m_afTumbleTwist_5", "m_afTumbleTwist_6", "m_afTumbleTwist_7", "m_afTumbleTwist_8", "m_afTumbleTwist_9", "m_afTumbleDirectionAdherence_0", "m_afTumbleDirectionAdherence_1", "m_afTumbleDirectionAdherence_2", "m_afTumbleDirectionAdherence_3", "m_afTumbleDirectionAdherence_4", "m_afTumbleDirectionAdherence_5", "m_afTumbleDirectionAdherence_6", "m_afTumbleDirectionAdherence_7", "m_afTumbleDirectionAdherence_8", "m_afTumbleDirectionAdherence_9", "m_afTwitchThrow_0", "m_afTwitchThrow_1", "m_afTwitchThrow_2", "m_afTwitchThrow_3", "m_afTwitchThrow_4", "m_afTwitchThrow_5", "m_afTwitchThrow_6", "m_afTwitchThrow_7", "m_afTwitchThrow_8", "m_afTwitchThrow_9", "m_fTwitchSharpness", "m_fRollMaxScale", "m_fRollMinScale", "m_fRollSpeed", "m_fRollSeparation", "m_fLeewardScalar", "m_afDistance_0", "m_afDistance_1", "m_afDistance_2", "m_afDistance_3", "m_afDistance_4", "m_afDistance_5", "m_afDistance_6", "m_afDistance_7", "m_afDistance_8", "m_afDistance_9", "m_afDirectionAdherence_0", "m_afDirectionAdherence_1", "m_afDirectionAdherence_2", "m_afDirectionAdherence_3", "m_afDirectionAdherence_4", "m_afDirectionAdherence_5", "m_afDirectionAdherence_6", "m_afDirectionAdherence_7", "m_afDirectionAdherence_8", "m_afDirectionAdherence_9", "m_afWhip_0", "m_afWhip_1", "m_afWhip_2", "m_afWhip_3", "m_afWhip_4", "m_afWhip_5", "m_afWhip_6", "m_afWhip_7", "m_afWhip_8", "m_afWhip_9", "m_fTurbulence", "m_fTwitch", "m_fTwitchFreqScale", "SpeedTreeWind", "SParams", "SWindGroup", "SBranchWindLevel", "_TERRAIN_NORMAL_MAP", "SplatCount", "SpeedTreeLocalWind", "BoxCollider", "CapsuleCollider", "CharacterController", "CharacterJoint", "Cloth", "Collider", "m_IsTrigger", "m_Enabled", "ConfigurableJoint", "ConstantForce", "FixedJoint", "HingeJoint", "Joint", "MeshCollider", "bouncyness", "bounciness", "PhysicMaterial", "m_BounceTreshold", "m_BounceThreshold", "Rigidbody", "SphereCollider", "SpringJoint", "WheelCollider", "m_SuspensionSpring", "m_SuspensionDistance", "m_ForceAppPointDistance", "m_Mass", "m_WheelDampingRate", "m_ForwardFriction", "m_SidewaysFriction", "m_ExtremumSlip", "m_ExtremumValue", "m_AsymptoteSlip", "m_AsymptoteValue", "m_Stiffness", "spring", "damper", "targetPosition", "WheelFrictionCurve", "JointSpring", "m_Spring", "m_Damper", "m_MinDistance", "m_MaxDistance", "m_BreakForce", "m_BreakTorque", "m_EnableCollision", "m_EnablePreprocessing", "m_ConnectedBody", "m_Anchor", "m_AutoConfigureConnectedAnchor", "m_ConnectedAnchor", "m_Drag", "m_AngularDrag", "m_UseGravity", "m_IsKinematic", "m_Interpolate", "m_FreezeRotation", "m_Constraints", "m_CollisionDetection", "m_Gravity", "m_DefaultMaterial", "m_SleepThreshold", "m_DefaultContactOffset", "m_SolverIterationCount", "m_RaycastsHitTriggers", "m_QueriesHitTriggers", "m_EnableAdaptiveForce", "m_LayerCollisionMatrix", "dynamicFriction", "staticFriction", "frictionCombine", "bounceCombine", "m_Convex", "m_Mesh", "m_UseSpring", "m_UseMotor", "m_Motor", "m_UseLimits", "m_Limits", "minBounce", "maxBounce", "bounceMinVelocity", "contactDistance", "targetVelocity", "force", "freeSpin", "m_Axis", "JointLimits", "JointMotor", "m_Force", "m_RelativeForce", "m_Torque", "m_RelativeTorque", "m_SecondaryAxis", "m_XMotion", "m_YMotion", "m_ZMotion", "m_AngularXMotion", "m_AngularYMotion", "m_AngularZMotion", "m_LinearLimit", "m_LinearLimitSpring", "m_LowAngularXLimit", "m_HighAngularXLimit", "m_AngularXLimitSpring", "m_AngularYLimit", "m_AngularZLimit", "m_AngularYZLimitSpring", "m_TargetPosition", "m_TargetVelocity", "m_XDrive", "m_YDrive", "m_ZDrive", "m_TargetRotation", "m_TargetAngularVelocity", "m_RotationDriveMode", "m_AngularXDrive", "m_AngularYZDrive", "m_SlerpDrive", "m_ProjectionMode", "m_ProjectionDistance", "m_ProjectionAngle", "m_ConfiguredInWorldSpace", "m_SwapBodies", "mode", "positionSpring", "positionDamper", "maximumForce", "limit", "JointDrive", "SoftJointLimit", "SoftJointLimitSpring", "SoftJointLimit_Unity4", "basic_string::insert", "m_StretchingStiffness", "m_BendingStiffness", "m_UseTethers", "m_Damping", "m_ExternalAcceleration", "m_RandomAcceleration", "m_WorldVelocityScale", "m_WorldAccelerationScale", "m_Friction", "m_CollisionMassScale", "m_UseContinuousCollision", "m_UseVirtualParticles", "m_SolverFrequency", "m_Coefficients", "m_CapsuleColliders", "m_SphereColliders", "maxDistance", "collisionSphereDistance", "ClothConstrainCoefficients", "m_SwingAxis", "m_LowTwistLimit", "m_HighTwistLimit", "m_TwistLimitSpring", "m_Swing1Limit", "m_Swing2Limit", "m_SwingLimitSpring", "m_EnableProjection", "m_SlopeLimit", "m_StepOffset", "m_SkinWidth", "m_MinMoveDistance", "m_Direction", "m_Extents", "destroy", "kPrimitiveTriangles", "kPrimitiveTriangleStrip", "kPrimitiveQuads", "kPrimitiveLines", "kPrimitiveLineStrip", "kPrimitivePoints", "open", "http", "SetRenderTarget", "SetGlobalTexture", "SkinnedMeshRenderer", "m_LodMesh", "m_Animation", "m_DisableAnimationWhenOffscreen", "Mesh", "normals", "tangents", "colors", "MeshFilter", "MeshRenderer", "Managers", "MeshVertexFormatManager", "vertex", "normal", "texcoord", "texcoord1", "texcoord2", "texcoord3", "tangent", "_AlphaTex", "_AlphaSplitEnabled", "_MainTex_TexelSize", "SpriteRenderer", "m_CurrentChannels", "m_VertexCount", "m_Channels", "m_DataSize", "stream", "offset", "format", "dimension", "ChannelInfo", "m_Sprite", "m_AdditionalVertexStreams", "vector::_M_range_insert", "m_SubMeshes", "m_Shapes", "m_BindPose", "m_BoneNameHashes", "m_RootBoneNameHash", "m_MeshCompression", "m_IsReadable", "m_KeepVertices", "m_KeepIndices", "m_IndexBuffer", "m_Skin", "m_Vertices", "m_UV", "m_UV1", "m_Tangents", "m_Normals", "m_Colors", "m_VertexData", "m_CompressedMesh", "m_LocalAABB", "m_MeshUsageFlags", "m_BakedConvexCollisionMesh", "m_BakedTriangleCollisionMesh", "m_Weights", "m_NormalSigns", "m_TangentSigns", "m_FloatColors", "m_BoneIndices", "m_Triangles", "m_UVInfo", "m_NumItems", "m_BitSize", "m_Start", "vertices", "shapes", "channels", "fullWeights", "nameHash", "frameIndex", "frameCount", "firstVertex", "vertexCount", "hasNormals", "hasTangents", "firstByte", "indexCount", "topology", "localAABB", "isTriStrip", "CompressedMesh", "PackedBitVector", "VertexData", "BoneInfluence", "Matrix4x4f", "BlendShapeData", "MeshBlendShapeChannel", "MeshBlendShape", "BlendShapeVertex", "SubMesh", "m_Quality", "m_UpdateWhenOffscreen", "m_Bones", "m_BlendShapeWeights", "m_RootBone", "m_AABB", "m_DirtyAABB", "BillboardAsset", "_BumpMap", "_BillboardTangent", "_BillboardNormal", "_CameraXZAngle", "_TreeInfo0", "_TreeInfo1", "_TreeInfo2", "_TreeInfo3", "_TreeSize0", "_TreeSize1", "_TreeSize2", "_TreeSize3", "_ImageTexCoords0", "_ImageTexCoords1", "_ImageTexCoords2", "_ImageTexCoords3", "_ImageTexCoords4", "_ImageTexCoords5", "_ImageTexCoords6", "_ImageTexCoords7", "_ImageTexCoords8", "_ImageTexCoords9", "_ImageTexCoords10", "_ImageTexCoords11", "_ImageTexCoords12", "_ImageTexCoords13", "_ImageTexCoords14", "_ImageTexCoords15", "_ImageTexCoords16", "_ImageTexCoords17", "_ImageTexCoords18", "_ImageTexCoords19", "_ImageTexCoords20", "_ImageTexCoords21", "_ImageTexCoords22", "_ImageTexCoords23", "_ImageTexCoords24", "_ImageTexCoords25", "_ImageTexCoords26", "_ImageTexCoords27", "_ImageTexCoords28", "_ImageTexCoords29", "_ImageTexCoords30", "_ImageTexCoords31", "BILLBOARD_FACE_CAMERA_POS", "BillboardRenderer", "LineRenderer", "m_WorldSpace", "m_UseWorldSpace", "TrailRenderer", "Cubemap", "camera", "OVRManager", "OVRCameraRig", "UnityDitherMask2D", "UnityDitherMask3D", "UnityNormalMap", "UnityWhite", "UnityBlack", "UnityRandomRotation", "UnityRed", "UnityGrey", "UnityGrayscaleRamp", "UnityHalo", "UnityAttenuation", "UnityBlackCube", "UnityDefault2D", "UnityDefault3D", "UnityDefaultCube", "UnityNHxRoughness", "LightProbeGroup", "Fastest", "UnityGraphicsQuality", "RectTransform", "m_AnchoredPosition", "SendReapplyDrivenProperties", "Renderer", "_EmissionColor", "RenderTexture", "m_ReceiveShadows", "m_Materials", "m_SubsetIndices", "m_StaticBatchRoot", "m_UseLightProbes", "m_ProbeAnchor", "m_SortingLayerID", "m_SortingOrder", "m_AntiAliasing", "m_DepthFormat", "m_ColorFormat", "m_MipMap", "m_GenerateMips", "m_SRGB", "m_TextureSettings", "m_FilterMode", "m_Aniso", "m_MipBias", "m_WrapMode", "GLTextureSettings", "m_AnchorMin", "m_AnchorMax", "m_SizeDelta", "m_Pivot", "m_CurrentQuality", "m_QualitySettings", "m_DefaultStandaloneQuality", "m_DefaultWebPlayerQuality", "m_DefaultMobileQuality", "m_EditorQuality", "Fast", "Simple", "Good", "Beautiful", "Fantastic", "m_StrippedMaximumLODLevel", "pixelLightCount", "shadows", "shadowResolution", "shadowProjection", "shadowCascades", "shadowDistance", "shadowNearPlaneOffset", "shadowCascade2Split", "shadowCascade4Split", "blendWeights", "textureQuality", "anisotropicTextures", "antiAliasing", "softParticles", "softVegetation", "realtimeReflectionProbes", "billboardsFaceCameraPosition", "vSyncCount", "lodBias", "maximumLODLevel", "particleRaycastBudget", "syncToVBL", "QualitySetting", "m_EnlightenSceneMapping", "m_LightProbes", "m_Lightmaps", "m_LightmapsMode", "m_GISettings", "m_RuntimeCPUUsage", "m_BounceScale", "m_IndirectOutputScale", "m_AlbedoBoost", "m_TemporalCoherenceThreshold", "m_EnvironmentLightingMode", "m_EnableBakedLightmaps", "m_EnableRealtimeLightmaps", "m_DynamicEnv", "m_Lightmap", "m_IndirectLightmap", "m_Renderers", "m_Systems", "m_SystemAtlases", "m_TerrainChunks", "firstSystemId", "numChunksInX", "numChunksInY", "atlasSize", "atlasHash", "rendererIndex", "rendererSize", "atlasIndex", "atlasOffsetX", "atlasOffsetY", "inputSystemHash", "radiositySystemHash", "renderer", "dynamicLightmapSTInSystem", "systemId", "instanceHash", "GISettings", "LightmapData", "EnlightenSceneMapping", "EnlightenTerrainChunksInformation", "EnlightenSystemAtlasInformation", "EnlightenSystemInformation", "EnlightenRendererInformation", "m_SourceTextures", "m_Time", "m_StartWidth", "m_EndWidth", "m_MinVertexDistance", "m_Autodestruct", "Gradient", "m_Parameters", "startWidth", "endWidth", "m_StartColor", "m_EndColor", "LineParameters", "m_Billboard", "bottom", "imageTexCoords", "rotated", "indices", "material", "Quad", "Sprite", "Texture", "Texture2D", "m_CompleteImageSize", "m_TextureFormat", "m_MipCount", "m_ReadAllowed", "m_ImageCount", "m_TextureDimension", "m_LightmapFormat", "Texture3D", "SparseTexture", "m_LocalRotation", "m_LocalPosition", "m_LocalScale", "m_Children", "m_Father", "m_Format", "m_Rect", "m_Border", "m_PixelsToUnits", "m_Extrude", "m_RD", "alphaTexture", "textureRect", "textureRectOffset", "settingsRaw", "uvTransform", "SpriteRenderData", "SpriteVertex", "Lightmaps", "_StaticUV1", "_Decode_HDR", "_ConvertToLinearSpace", "Behaviour", "MemoryStream", "unity_World2Shadow", "vs_2_0", "vs_3_0", "ps_2_0", "ps_3_0", "vs_4_0_level_9", "ps_4_0_level_9", "vs_dx11", "vs_4_0", "vs_5_0", "ps_dx11", "ps_4_0", "ps_5_0", "gs_4_0", "gs_5_0", "hs_5_0", "ds_5_0", "metal_vs", "metal_fs", "agal_vs", "agal_ps", "basic_string::substr", "OpenGL", "Null", "Metal", "VERTEX", "NORMAL", "COLOR", "TEXCOORD", "TEXCOORD1", "TEXCOORD2", "TEXCOORD3", "TANGENT", "unity_World2Shadow0", "unity_World2Shadow1", "unity_World2Shadow2", "unity_World2Shadow3", "glstate_light0_diffuse", "glstate_light1_diffuse", "glstate_light2_diffuse", "glstate_light3_diffuse", "glstate_light0_position", "glstate_light1_position", "glstate_light2_position", "glstate_light3_position", "glstate_light0_attenuation", "glstate_light1_attenuation", "glstate_light2_attenuation", "glstate_light3_attenuation", "glstate_light0_spotDirection", "glstate_light1_spotDirection", "glstate_light2_spotDirection", "glstate_light3_spotDirection", "white", "black", "gray", "grey", "grayscaleRamp", "greyscaleRamp", "bump", "blackCube", "lightmap", "unity_Lightmap", "unity_LightmapInd", "unity_DynamicLightmap", "unity_DynamicDirectionality", "unity_DynamicNormal", "_DitherMaskLOD", "_DitherMaskLOD2D", "unity_RandomRotation16", "unity_NHxRoughness", "unity_SpecCube0", "unity_SpecCube1", "_PlanarReflectionTex0", "_PlanarReflectionTex1", "_PlanarReflectionTex2", "unity_LightColor0", "unity_LightColor1", "unity_LightColor2", "unity_LightColor3", "unity_LightColor4", "unity_LightColor5", "unity_LightColor6", "unity_LightColor7", "unity_LightPosition0", "unity_LightPosition1", "unity_LightPosition2", "unity_LightPosition3", "unity_LightPosition4", "unity_LightPosition5", "unity_LightPosition6", "unity_LightPosition7", "unity_SpotDirection0", "unity_SpotDirection1", "unity_SpotDirection2", "unity_SpotDirection3", "unity_SpotDirection4", "unity_SpotDirection5", "unity_SpotDirection6", "unity_SpotDirection7", "unity_LightAtten0", "unity_LightAtten1", "unity_LightAtten2", "unity_LightAtten3", "unity_LightAtten4", "unity_LightAtten5", "unity_LightAtten6", "unity_LightAtten7", "unity_VertexLightParams", "glstate_lightmodel_ambient", "_WorldSpaceLightPos0", "_LightColor0", "_WorldSpaceCameraPos", "unity_WorldTransformParams", "_ProjectionParams", "_ScreenParams", "_ZBufferParams", "unity_OrthoParams", "_LightPositionRange", "unity_Ambient", "unity_LightmapFade", "_ShadowOffsets0", "_ShadowOffsets1", "_ShadowOffsets2", "_ShadowOffsets3", "_LightShadowData", "unity_LightShadowBias", "_LightSplitsNear", "_LightSplitsFar", "unity_ShadowSplitSpheres0", "unity_ShadowSplitSpheres1", "unity_ShadowSplitSpheres2", "unity_ShadowSplitSpheres3", "unity_ShadowSplitSqRadii", "unity_ShadowCascadeScales", "unity_ShadowFadeCenterAndType", "unity_LODFade", "unity_LightmapST", "unity_DynamicLightmapST", "unity_SHAr", "unity_SHAg", "unity_SHAb", "unity_SHBr", "unity_SHBg", "unity_SHBb", "unity_SHC", "_Time", "_SinTime", "_CosTime", "_PiTime", "unity_DeltaTime", "unity_4LightPosX0", "unity_4LightPosY0", "unity_4LightPosZ0", "unity_4LightAtten0", "unity_FogStart", "unity_FogEnd", "unity_FogDensity", "unity_FogColor", "unity_FogParams", "unity_ColorSpaceGrey", "unity_ColorSpaceDouble", "unity_ColorSpaceLuminance", "unity_LightGammaCorrectionConsts", "unity_NPOTScale", "unity_CameraWorldClipPlanes0", "unity_CameraWorldClipPlanes1", "unity_CameraWorldClipPlanes2", "unity_CameraWorldClipPlanes3", "unity_CameraWorldClipPlanes4", "unity_CameraWorldClipPlanes5", "unity_AmbientSky", "unity_AmbientEquator", "unity_AmbientGround", "unity_ColorSpaceDielectricSpec", "_PlanarReflection0", "_PlanarReflection1", "_PlanarReflection2", "_PlanarReflectionTangent0", "_PlanarReflectionTangent1", "_PlanarReflectionTangent2", "_PlanarReflectionBiTangent0", "_PlanarReflectionBiTangent1", "_PlanarReflectionBiTangent2", "unity_SpecCube0_HDR", "unity_SpecCube0_BoxMax", "unity_SpecCube0_BoxMin", "unity_SpecCube0_ProbePosition", "unity_SpecCube1_HDR", "unity_SpecCube1_BoxMax", "unity_SpecCube1_BoxMin", "unity_SpecCube1_ProbePosition", "unity_MatrixV", "glstate_matrix_projection", "unity_MatrixVP", "_WorldToCamera", "_CameraToWorld", "_World2Shadow", "_World2Shadow1", "_World2Shadow2", "_World2Shadow3", "unity_LightmapMatrix", "_Projector", "_ProjectorDistance", "_ProjectorClip", "_GUIClipTextureMatrix", "_LightMatrix0", "unity_CameraProjection", "unity_CameraInvProjection", "glstate_matrix_mvp", "glstate_matrix_modelview0", "_Object2World", "_World2Object", "glstate_matrix_transpose_modelview0", "glstate_matrix_invtrans_modelview0", "m_Script", "MonoBehaviour", "Reset", "GUISkin", "customStyles", "m_CustomStyles", "m_EditorClassIdentifier", "m_ScriptingClassIdentifier", "Managed", "ClassLibraryInitializer", "Init", "UnityEngine", "Unity", "MonoScript", "Update", "LateUpdate", "FixedUpdate", "Awake", "Start", "Main", "OnRenderObject", "OnEnable", "OnDisable", "OnDisableINTERNAL", "OnRenderImage", "OnDrawGizmos", "OnGUI", "OnValidate", "OnSerializeNetworkView", "OnNetworkInstantiate", "OnDestroy", "OnAudioFilterRead", "OnDidApplyAnimationProperties", "OnStateEnter", "OnStateExit", "OnStateUpdate", "OnStateMove", "OnStateIK", "OnStateMachineEnter", "OnStateMachineExit", "ClassNotFound", "Unknown", "m_ExecutionOrder", "m_ClassName", "m_Namespace", "m_AssemblyName", "m_IsEditorScript", "m_AssemblyIdentifier", "UnityEditor", "m_PropertiesHash", "m_Scripts", "m_AssemblyNames", "m_CustomDlls", "Collision", "Collision2D", "System", "UnityException", "IndexOutOfRangeException", "NullReferenceException", "ArgumentException", "SecurityException", "ScriptableObject", "Vector2", "Vector3", "Vector4", "Rect", "RectOffset", "Quaternion", "Matrix4x4", "Bounds", "Resolution", "Particle", "Color", "Color32", "RaycastHit", "RaycastHit2D", "AnimationState", "LayerMask", "WaitForSeconds", "WaitForFixedUpdate", "WaitForEndOfFrame", "CharacterInfo", "Font", "InvokeTextureRebuilt_Internal", "Coroutine", "ContactPoint", "ControllerColliderHit", "ContactPoint2D", "ClothSphereColliderPair", "Event", "SerializeField", "SerializePrivateVariables", "FormerlySerializedAsAttribute", "HideInInspector", "ISerializationCallbackReceiver", "OnBeforeSerialize", "OnAfterDeserialize", "HostData", "BitStream", "NetworkViewID", "NetworkMessageInfo", "GUIStyle", "TextGenerator", "AnimationCurve", "BoneWeight", "AnimationEvent", "AssetBundleRequest", "AsyncOperation", "ResourceRequest", "AssetBundleCreateRequest", "CacheIndex", "CachedFile", "Keyframe", "ImageEffectOpaque", "CommandBuffer", "GraphicsDeviceType", "ImageEffectTransformsToLDR", "IEnumerator", "String", "Int32", "Single", "Double", "Byte", "Char", "IntPtr", "UInt16", "UInt32", "Int16", "Int64", "Boolean", "MulticastDelegate", "Hashtable", "ArrayList", "IList", "IDictionary", "DateTime", "AttributeHelperEngine", "GetRequiredComponents", "GetParentTypeDisallowingMultipleInclusion", "SetupCoroutine", "InvokeMember", "InvokeStatic", "CheckIsEditorScript", "StackTraceUtility", "ExtractStackTrace", "ExtractStringFromExceptionInternal", "PostprocessStacktrace", "MoveNext", "Application", "CallLogCallback", "get_Current", "IDisposable", "Dispose", "GUIUtility", "BeginGUI", "EndGUI", "CallWindowDelegate", "Internal_MakeMasterEventCurrent", "SendMouseEvents", "SetMouseMoved", "DoSendMouseEvents", "SetProjectFolder", "AssemblyIsEditorAssembly", "GradientColorKey", "GradientAlphaKey", "ProceduralPropertyDescription", "Animator", "AnimatorStateInfo", "AnimatorTransitionInfo", "AnimatorClipInfo", "SkeletonBone", "HumanBone", "SharedBetweenAnimatorsAttribute", "StateMachineBehaviour", "UIVertex", "UICharInfo", "UILineInfo", "NetworkIdentity", "UNetStaticUpdate", "WebCamDevice", "Display", "RecreateDisplayList", "FireDisplaysUpdated", "MultiDisplayLicense", "FireOnPreCull", "FireOnPreRender", "FireOnPostRender", "CullingGroup", "SendEvents", "Playable", "AnimatorControllerPlayable", "FrameData", "ReflectionProbeBlendInfo", "NavMeshTriangulation", "_AndroidJNIHelper", "TextAsset", "m_PathName", "LODGroup", "m_LocalReferencePoint", "m_FadeMode", "m_AnimateCrossFading", "m_LODs", "screenRelativeHeight", "fadeTransitionWidth", "renderers", "fadeMode", "LODRenderer", "LODStruct50", "UnitySubstanceThread", "INVALID", "ProceduralTexture", "ProceduralMaterial", "presetinput", "identifier", "type", "value", "SubstanceArchive", "m_PackageData", "m_MaximumSize", "m_GenerateMipmaps", "m_Textures", "m_Flags", "m_LoadingBehavior", "m_SubstancePackage", "m_Inputs", "m_PrototypeName", "m_AnimationUpdateRate", "label", "group", "visibleIf", "internalType", "internalIndex", "internalIdentifier", "componentLabels", "minimum", "maximum", "step", "flags", "alteredTexturesUID", "enumValues", "text", "SubstanceEnumItem", "SubstanceValue", "SubstanceInput", "m_SubstanceMaterial", "m_SubstanceTextureUID", "Type", "AlphaSource", "m_AlphaSourceUID", "AlphaSourceIsGrayscale", "m_AlphaSourceIsInverted", "m_Mipmaps", "Format", "m_BakedData", "m_BakedParameters", "mipLevels", "textureFormat", "TextureParameters", "true", "false", "GUIEventManager", "Submit", "return", "enter", "space", "Cancel", "escape", "Horizontal", "Vertical", "right", "left", "down", "Fire1", "Fire2", "Fire3", "Jump", "m_TimeScale", "m_Axes", "descriptiveName", "descriptiveNegativeName", "negativeButton", "positiveButton", "altNegativeButton", "altPositiveButton", "gravity", "dead", "sensitivity", "snap", "invert", "axis", "joyNum", "InputAxis", "backspace", "clear", "pause", "delete", "equals", "insert", "home", "numlock", "compose", "help", "break", "menu", "power", "euro", "undo", "cyan", "blue", "darkblue", "lightblue", "purple", "yellow", "lime", "fuchsia", "silver", "orange", "brown", "maroon", "green", "olive", "navy", "teal", "aqua", "magenta", "key0", "key1", "key2", "key3", "key4", "key5", "key6", "key7", "ctime0", "ctime1", "ctime2", "ctime3", "ctime4", "ctime5", "ctime6", "ctime7", "atime0", "atime1", "atime2", "atime3", "atime4", "atime5", "atime6", "atime7", "m_NumColorKeys", "m_NumAlphaKeys", "AssetBundle", "AssetBundleManager", "AssetBundleManifest", "assets", "sharedAssets", "CustomAssetBundle", "UnityRaw", "mainData", "UnityCache", "Shared", "__lock", "ReadCacheIndex", "Temp", "null", "BatchDeleteObjects", "Sphere", "Capsule", "Cylinder", "Cube", "Plane", "OVRPlugin", "UnityPreload", "PreloadData", "defaultWebScreenWidth", "defaultScreenWidthWeb", "defaultWebScreenHeight", "defaultScreenHeightWeb", "iPhoneBundleIdentifier", "bundleIdentifier", "iPhoneBundleVersion", "bundleVersion", "enableHWStatistics", "submitAnalytics", "firstStreamedLevelWithResources", "firstStreamedSceneWithResources", "DeveloperConsole", "UserAuthorizationDialog", "OSXEditor", "OSXPlayer", "WindowsPlayer", "OSXWebPlayer", "OSXDashboardPlayer", "WindowsWebPlayer", "WindowsEditor", "iPhonePlayer", "PS3Player", "XenonPlayer", "WiiUPlayer", "AndroidPlayer", "LinuxPlayer", "LinuxWebPlayer", "LinuxEditor", "WebGL", "MetroPlayerX86", "MetroPlayerX64", "MetroPlayerARM", "WP8Player", "BlackBerryPlayer", "TizenPlayer", "SamsungTVPlayer", "Afrikaans", "Arabic", "Basque", "Belarusian", "Bulgarian", "Catalan", "Chinese", "SerboCroatian", "Czech", "Danish", "Dutch", "English", "Estonian", "Faroese", "Finnish", "French", "German", "Greek", "Hebrew", "Hungarian", "Icelandic", "Indonesian", "Italian", "Japanese", "Korean", "Latvian", "Lithuanian", "Norwegian", "Polish", "Portuguese", "Romanian", "Russian", "Slovak", "Slovenian", "Spanish", "Swedish", "Thai", "Turkish", "Ukrainian", "Vietnamese", "m_Container", "m_DependentAssets", "m_Object", "m_Dependencies", "ResourceManager_Dependency", "m_NamespaceNames", "m_ClassInfos", "m_ClassMethodInfos", "m_BeforeUnityMethodExecutionOrders", "m_AfterUnityMethodExecutionOrders", "m_BeforeMethodExecutionOrders", "m_AfterMethodExecutionOrders", "m_ClassIndex", "m_MethodName", "m_OrderNumber", "m_AssemblyNameIndex", "m_NamespaceIndex", "m_NumOfMethods", "m_MethodIndex", "m_IsUnityClass", "ClassMethodInfo", "ClassInfo", "AndroidProfiler", "defaultScreenOrientation", "targetDevice", "targetResolution", "useOnDemandResources", "accelerometerFrequency", "companyName", "productName", "defaultCursor", "cursorHotspot", "m_ShowUnitySplashScreen", "defaultScreenWidth", "defaultScreenHeight", "m_MobileRenderingPath", "m_ActiveColorSpace", "m_MTRendering", "m_MobileMTRendering", "m_Stereoscopic3D", "iosShowActivityIndicatorOnLoading", "androidShowActivityIndicatorOnLoading", "iosAppInBackgroundBehavior", "displayResolutionDialog", "iosAllowHTTPDownload", "allowedAutorotateToPortrait", "allowedAutorotateToPortraitUpsideDown", "allowedAutorotateToLandscapeRight", "allowedAutorotateToLandscapeLeft", "useOSAutorotation", "use32BitDisplayBuffer", "disableDepthAndStencilBuffers", "defaultIsFullScreen", "defaultIsNativeResolution", "runInBackground", "captureSingleScreen", "usePlayerLog", "bakeCollisionMeshes", "forceSingleInstance", "resizableWindow", "useMacAppStoreValidation", "gpuSkinning", "xboxPIXTextureCapture", "xboxEnableAvatar", "xboxEnableKinect", "xboxEnableKinectAutoTracking", "xboxEnableFitness", "visibleInBackground", "macFullscreenMode", "d3d9FullscreenMode", "d3d11FullscreenMode", "xboxSpeechDB", "xboxEnableHeadOrientation", "xboxEnableGuest", "n3dsDisableStereoscopicView", "n3dsEnableSharedListOpt", "n3dsEnableVSync", "xboxOneResolution", "ps3SplashScreen", "videoMemoryForVertexBuffers", "psp2PowerMode", "psp2AcquireBGM", "wiiUTVResolution", "wiiUGamePadMSAA", "wiiUSupportsNunchuk", "wiiUSupportsClassicController", "wiiUSupportsBalanceBoard", "wiiUSupportsMotionPlus", "wiiUSupportsProController", "wiiUAllowScreenCapture", "wiiUControllerCount", "m_SupportedAspectRatios", "preloadedAssets", "metroEnableIndependentInputSource", "metroEnableLowLatencyPresentationAPI", "xboxOneDisableKinectGpuReservation", "virtualRealitySupported", "cloudProjectId", "projectName", "organizationId", "cloudEnabled", "Others", "AspectRatios", "m_Assets", "scenes", "preloadedPlugins", "hasRenderTexture", "hasPROVersion", "isNoWatermarkBuild", "isPrototypingBuild", "isEducationalBuild", "isEmbedded", "hasPublishingRights", "hasShadows", "hasSoftShadows", "hasLocalLightShadows", "hasAdvancedVersion", "enableDynamicBatching", "isDebugBuild", "usesOnMouseEvents", "enableMultipleDisplays", "hasClusterRendering", "m_Version", "m_AuthToken", "runtimeClassHashes", "scriptHashes", "m_GraphicsAPIs", "AssetBundleNames", "AssetBundlesWithVariant", "AssetBundleInfos", "AssetBundleHash", "AssetBundleDependencies", "AssetBundleInfo", "m_MainAsset", "m_PreloadTable", "m_RuntimeCompatibility", "m_AssetBundleName", "m_IsStreamedSceneAssetBundle", "preloadIndex", "preloadSize", "asset", "AssetInfo", "UnitySetGraphicsDevice", "UnityRenderEvent", "UnityGetAudioEffectDefinitions", "UnityPluginLoad", "UnityPluginUnload", "UNITY_GIVE_CHANCE_TO_ATTACH_DEBUGGER", "__info", "BuildPlayer", "Permanent", "NewDelete", "MallocFree", "Thread", "Manager", "DynamicGeometry", "ImmediateGeometry", "Geometry", "BatchedGeometry", "Particles", "Shader", "TextureCache", "GfxDevice", "GfxThread", "Animation", "Audio", "AudioData", "AudioProcessing", "AudioTemp", "FMOD", "FMODStream", "FMODSample", "FMODExtraDSP", "Physics", "Physics2D", "Serialization", "Input", "ThreadStack", "JobScheduler", "GarbageCollector", "GLib", "GLibImage", "Mono", "MonoCode", "ScriptingNativeRuntime", "BaseObject", "Resource", "File", "Network", "WebCam", "Profiler", "MemoryProfiler", "MemoryProfilerString", "Culling", "Skinning", "TerrainPhysics", "Shadow", "StaticString", "DynamicArray", "UTF16String", "Utility", "Curl", "PoolAlloc", "AssetServerCache", "TypeTree", "ScriptManager", "Substance", "Sprites", "Unet", "ClusterRenderer", "ClusterInput", "Director", "GPUMemory", "CloudService", "WebRequest", "SceneManager", "EditorGui", "EditorUtility", "VersionControl", "UndoBuffer", "Undo", "AssetDatabase", "StreamingManager", "PreviewImage", "AssetImporter", "FBXImporter", "EditorGi", "Yaml", "License", "CADImporter", "UnityConnect", "TempAlloc", "WebViewCallback", "TempJobAlloc", "TempOverflow", "PS3VideoMemory", "PS3RingBuffers", "PS3RSXBuffers", "PS3DelayedRelease", "PSP2GXMBuffers", "PSP2GXMVertexData", "PS4ShaderUcode", "WinRTTLS", "XboxOneGpuMemory", "WiiUMP4", "CafeOSDynLoad", "InvalidAlloc", "SketchUp", "InternalOnAfterDeserialize", "m_Normal", "m_Hover", "m_Active", "m_Focused", "m_OnNormal", "m_OnHover", "m_OnActive", "m_OnFocused", "m_Margin", "m_Padding", "m_Overflow", "m_Font", "m_FontSize", "m_FontStyle", "m_Alignment", "m_WordWrap", "m_RichText", "m_TextClipping", "m_ImagePosition", "m_ContentOffset", "m_FixedWidth", "m_FixedHeight", "m_StretchWidth", "m_StretchHeight", "m_Left", "m_Right", "m_Top", "m_Bottom", "m_Background", "m_TextColor", "m_Curve", "m_PreInfinity", "m_PostInfinity", "time", "inSlope", "outSlope", "GUIStyleState", "GradientNEW", "Port", "Comment", "__RPCNetworkInstantiate", "__RPCReceiveViewIDBatch", "__RPCRequestViewIDBatch", "__RPCNetworkDestroy", "NetworkView", "m_StateSynchronization", "m_Observed", "m_ViewID", "m_ID", "m_DebugLevel", "m_Sendrate", "m_AssetToPrefab", "GUID", "size", "TypelessData", "basic_string::_M_replace_dispatch", "resG", "resS", "none", "ShaderVariantCollection", "m_Shaders", "variants", "keywords", "passType", "ShaderInfo", "VariantInfo", "ComputeShader", "Standard", "Material", "m_ShaderKeywords", "m_LightmapFlags", "m_CustomRenderQueue", "stringTagMap", "m_SavedProperties", "SPOT", "DIRECTIONAL", "DIRECTIONAL_COOKIE", "POINT", "POINT_COOKIE", "SHADOWS_OFF", "SHADOWS_DEPTH", "SHADOWS_SCREEN", "SHADOWS_CUBE", "SHADOWS_SOFT", "SHADOWS_SPLIT_SPHERES", "SHADOWS_NATIVE", "SHADOWS_SINGLE_CASCADE", "LIGHTMAP_OFF", "LIGHTMAP_ON", "DIRLIGHTMAP_OFF", "DIRLIGHTMAP_COMBINED", "DIRLIGHTMAP_SEPARATE", "DYNAMICLIGHTMAP_OFF", "DYNAMICLIGHTMAP_ON", "FOG_LINEAR", "FOG_EXP", "FOG_EXP2", "_EMISSION", "VERTEXLIGHT_ON", "HDR_LIGHT_PREPASS_ON", "ENABLE_LOD_FADE", "LOD_FADE_PERCENTAGE", "LOD_FADE_CROSSFADE", "CGProgram", "m_PreloadShaders", "m_ObjectToName", "NameToObjectMap", "m_ShaderIsBaked", "m_TexEnvs", "m_Floats", "UnityPropertySheet", "FastPropertyName", "UnityTexEnv", "targetRenderer", "targetLevel", "kernels", "constantBuffers", "resourcesResolved", "byteSize", "params", "arraySize", "rowCount", "colCount", "textures", "builtinSamplers", "inBuffers", "outBuffers", "code", "sampler", "bindPoint", "generatedName", "secondaryBindPoint", "ComputeShaderParam", "ComputeShaderCB", "ComputeShaderBuiltinSampler", "ComputeShaderResource", "ComputeShaderKernel", "ComputeShaderVariant", "VertexLit", "Specular", "Decal", "UnityWorker", "HOME", "Caches", "Data", "basic_string::erase", "Local", "UnityFS", "UnityWeb", "Archive", "UnityArchive", "Memory", "ArchiveRedirect", "batchmode", "automated", "runUnitTests", "LogMessages", "AsyncReadManager", "m_Source", "BACKGROUND", "GEOMETRY", "ALPHATEST", "TRANSPARENT", "OVERLAY", "DisableBatching", "LodFading", "ALWAYS", "VERTEXLM", "VERTEXLMRGBM", "FORWARDBASE", "FORWARDADD", "PREPASSBASE", "PREPASSFINAL", "SHADOWCASTER", "SHADOWCOLLECTOR", "DEFERRED", "META", "_GrabTexture", "NONE", "cubemap", "_TexelSize", "_HDR", "LIGHTMODE", "Vertex", "VertexLM", "VertexLMRGBM", "QUEUE", "REQUIREOPTIONS", "FORCENOSHADOWCASTING", "IGNOREPROJECTOR", "SHADOWSUPPORT", "SOFTVEGETATION", "LightMode", "Deferred", "opengl", "d3d9", "xbox360", "xboxone", "d3d11", "psp2", "ALLOC_TEMP_STRINGS", "PerRendererData", "NoScaleOffset", "Normal", "Gamma", "Dict", "Regions", "HTGA", "unity_OneOverOutputBoost", "unity_MaxOutputValue", "unity_UseLinearSpace", "EnlightenWorker", "unity_MetaVertexControl", "unity_MetaFragmentControl", "UnityGfxDeviceWorker", "GL_RENDERBUFFER", "GL_TEXTURE", "GL_NONE", "INCOMPLETE_ATTACHMENT", "INCOMPLETE_MISSING_ATTACHMENT", "INCOMPLETE_DIMENSIONS", "INCOMPLETE_FORMATS", "INCOMPLETE_DRAW_BUFFER", "INCOMPLETE_READ_BUFFER", "UNSUPPORTED", "uvOffsetAndScale", "FRAGMENT", "DOMAIN", "HULL", "_glesVertex", "_glesColor", "_glesNormal", "_gles_unused__", "_glesMultiTexCoord0", "_glesMultiTexCoord1", "_glesMultiTexCoord2", "_glesMultiTexCoord3", "_glesMultiTexCoord4", "_glesMultiTexCoord5", "_glesMultiTexCoord6", "_glesMultiTexCoord7", "in_POSITION0", "in_COLOR0", "in_NORMAL0", "in_TEXCOORD0", "in_TEXCOORD1", "in_TEXCOORD2", "in_TEXCOORD3", "in_TEXCOORD4", "in_TEXCOORD5", "in_TEXCOORD6", "in_TEXCOORD7", "gl_ProjectionMatrix", "gl_ModelViewProjectionMatrix", "gl_ModelViewMatrixTranspose", "gl_ModelViewMatrixInverseTranspose", "gl_ModelViewMatrix", "hlslcc_zcmp", "_counter", "GL_EXT_texture_type_2_10_10_10_REV", "PowerVR", "Mali", "Adreno", "Vivante", "GL_NV_depth_nonlinear", "GL_NV_coverage_sample", "GL_IMG_multisampled_render_to_texture", "GL_NV_sRGB_formats", "GL_EXT_pvrtc_sRGB", "GL_APPLE_texture_max_level", "GL_OES_texture_3D", "GL_OES_texture_half_float_linear", "GL_ARB_texture_float", "GL_OES_texture_float_linear", "GL_OES_packed_depth_stencil", "GL_EXT_packed_depth_stencil", "GL_APPLE_framebuffer_multisample", "GL_OES_depth24", "GL_EXT_shadow_samplers", "GL_ARB_ES2_compatibility", "GL_ARB_ES3_compatibility", "GL_EXT_blend_minmax", "GL_EXT_texture_norm16", "out_pos", "out_normal", "out_tangent", "bones", "MtxBlock", "GL_OES_compressed_ETC1_RGB8_texture", "WEBGL_compressed_texture_etc1", "GL_CHROMIUM_texture_compression_dxt5", "GL_ANGLE_texture_compression_dxt5", "GL_CHROMIUM_texture_compression_dxt3", "GL_ANGLE_texture_compression_dxt3", "GL_EXT_texture_compression_dxt1", "GL_ANGLE_texture_compression_dxt1", "GL_OES_texture_half_float", "GL_OES_texture_float", "WEBGL_compressed_texture_es3", "GL_KHR_texture_compression_astc_ldr", "WEBGL_compressed_texture_astc_ldr", "GL_AMD_compressed_ATC_texture", "GL_ATI_texture_compression_atitc", "WEBGL_compressed_texture_atc", "GL_IMG_texture_compression_pvrtc", "WEBGL_compressed_texture_pvrtc", "GL_EXT_disjoint_timer_query", "GL_ARB_timer_query", "GL_NV_timer_query", "GL_INTEL_timer_query", "GL_KHR_blend_equation_advanced_coherent", "GL_NV_blend_equation_advanced_coherent", "GL_KHR_blend_equation_advanced", "GL_NV_blend_equation_advanced", "GL_ARB_uniform_buffer_object", "GL_ARB_transform_feedback3", "GL_ARB_tessellation_shader", "GL_OES_tessellation_shader", "GL_EXT_tessellation_shader", "GL_ARB_geometry_shader4", "GL_OES_geometry_shader", "GL_EXT_geometry_shader", "Amazon", "Immersion", "GL_OES_get_program_binary", "GL_ARB_get_program_binary", "GL_ARB_ES3_1_compatibility", "GL_ARB_query_buffer_object", "GL_AMD_query_buffer_object", "GL_ARB_indirect_parameters", "GL_OES_vertex_half_float", "GL_EXT_map_buffer_range", "GL_ARB_map_buffer_range", "GL_OES_mapbuffer", "GL_ARB_vertex_buffer_object", "GL_OES_depth_texture", "GL_GOOGLE_depth_texture", "WEBGL_depth_texture", "GL_WEBGL_depth_texture", "GL_ARB_depth_texture", "GL_EXT_sRGB_write_control", "GL_ARB_framebuffer_sRGB", "WEBGL_draw_buffers", "GL_NV_draw_buffers", "GL_NV_fbo_color_attachments", "GL_EXT_framebuffer_multisample_blit_scaled", "GL_NV_framebuffer_blit", "GL_NV_read_buffer", "GL_ARB_framebuffer_blit", "GL_ARB_invalidate_subdata", "GL_EXT_discard_framebuffer", "GL_OES_depth_texture_cube_map", "GL_EXT_texture_filter_anisotropic", "WEBKIT_EXT_texture_filter_anisotropic", "GL_ARB_internalformat_query2", "GL_ARB_sampler_objects", "GL_ARB_stencil_texturing", "GL_ARB_texture_swizzle", "GL_EXT_texture_swizzle", "GL_APPLE_texture_format_BGRA8888", "GL_EXT_texture_format_BGRA8888", "GL_IMG_texture_format_BGRA8888", "GL_ARB_texture_multisample", "GL_ARB_texture_storage", "GL_EXT_texture_storage", "GL_OES_texture_npot", "GL_ARB_texture_non_power_of_two", "GL_EXT_texture_compression_s3tc", "WEBGL_compressed_texture_s3tc", "WEBKIT_WEBGL_compressed_texture_s3tc", "GL_EXT_texture_sRGB_decode", "GL_EXT_sRGB", "GL_EXT_texture_sRGB", "GL_ARB_framebuffer_object", "GL_NV_framebuffer_multisample", "GL_EXT_multisampled_render_to_texture", "GL_ARB_copy_buffer", "GL_ARB_direct_state_access", "GL_EXT_direct_state_access", "GL_NV_draw_instanced", "GL_EXT_draw_instanced", "GL_ARB_draw_instanced", "GL_EXT_multi_draw_indirect", "GL_ARB_multi_draw_indirect", "GL_EXT_draw_elements_base_vertex", "GL_OES_draw_elements_base_vertex", "GL_ARB_draw_elements_base_vertex", "GL_ARB_draw_indirect", "GL_ARB_compute_shader", "GL_ARB_shader_image_load_store", "GL_ARB_shader_storage_buffer_object", "GL_EXT_debug_label", "GL_EXT_color_buffer_half_float", "GL_EXT_color_buffer_float", "WEBGL_color_buffer_float", "GL_EXT_texture_rg", "GL_ARB_texture_rg", "INTERNALTESSPOS", "in_INTERNALTESSPOS0", "_glesInternalTessPos", "in_TANGENT0", "_glesTANGENT", "TexCoord", "TexCoord1", "TexCoord2", "TexCoord3", "TexCoord4", "TexCoord5", "TexCoord6", "TexCoord7", "textureCubeLodEXT", "textureCubeGradEXT", "textureCube", "LodEXT", "GradEXT", "texture2D", "tex2D", "Windows", "Other", "error", "portability", "performance", "message", "marker", "high", "medium", "notification", "glClear", "glActiveTexture", "glAttachShader", "glBindAttribLocation", "glBindBuffer", "glBindFramebuffer", "glBindRenderbuffer", "glBindTexture", "glBlendEquation", "glBlendEquationSeparate", "glBlendFuncSeparate", "glBufferData", "glBufferSubData", "glCheckFramebufferStatus", "glClearColor", "glClearDepthf", "glClearStencil", "glColorMask", "glCompileShader", "glCompressedTexImage2D", "glCompressedTexSubImage2D", "glCopyTexImage2D", "glCopyTexSubImage2D", "glCreateProgram", "glCreateShader", "glCullFace", "glDeleteBuffers", "glDeleteFramebuffers", "glDeleteProgram", "glDeleteRenderbuffers", "glDeleteShader", "glDeleteTextures", "glDepthFunc", "glDepthMask", "glDisable", "glDisableVertexAttribArray", "glDrawArrays", "glDrawElements", "glIsEnabled", "glEnable", "glEnableVertexAttribArray", "glFinish", "glFlush", "glFramebufferRenderbuffer", "glFramebufferTexture2D", "glFrontFace", "glGenBuffers", "glGenerateMipmap", "glGenFramebuffers", "glGenRenderbuffers", "glGenTextures", "glGetActiveAttrib", "glGetActiveUniform", "glGetAttribLocation", "glGetError", "glGetFramebufferAttachmentParameteriv", "glGetIntegerv", "glGetProgramiv", "glGetProgramInfoLog", "glValidateProgram", "glGetShaderiv", "glGetShaderSource", "glGetShaderInfoLog", "glGetString", "glGetTexParameteriv", "glGetUniformiv", "glGetUniformLocation", "glGetVertexAttribfv", "glGetVertexAttribiv", "glGetVertexAttribPointerv", "glLinkProgram", "glPixelStorei", "glPolygonOffset", "glReadPixels", "glRenderbufferStorage", "glScissor", "glShaderSource", "glStencilFunc", "glStencilFuncSeparate", "glStencilMask", "glStencilOp", "glStencilOpSeparate", "glTexImage2D", "glTexParameterf", "glTexParameteri", "glTexParameteriv", "glTexSubImage2D", "glUniform1fv", "glUniform1i", "glUniform1iv", "glUniform2fv", "glUniform2iv", "glUniform3fv", "glUniform3iv", "glUniform4fv", "glUniform4iv", "glUniformMatrix3fv", "glUniformMatrix4fv", "glUseProgram", "glVertexAttrib4f", "glVertexAttribPointer", "glViewport", "glGenQueries", "glDeleteQueries", "glBeginQuery", "glEndQuery", "glGetQueryObjectuiv", "glBindVertexArray", "glDeleteVertexArrays", "glGenVertexArrays", "glBeginTransformFeedback", "glEndTransformFeedback", "glTransformFeedbackVaryings", "glBindTransformFeedback", "glDeleteTransformFeedbacks", "glGenTransformFeedbacks", "glTexImage3D", "glTexSubImage3D", "glTexStorage2D", "glTexStorage3D", "glBlitFramebuffer", "glRenderbufferStorageMultisample", "glGetStringi", "glGetIntegeri_v", "glMapBufferRange", "glUnmapBuffer", "glFlushMappedBufferRange", "glInvalidateFramebuffer", "glDrawArraysInstanced", "glDrawElementsInstanced", "glCopyBufferSubData", "glDrawBuffers", "glReadBuffer", "glBindBufferBase", "glGetActiveUniformsiv", "glGetUniformBlockIndex", "glGetActiveUniformBlockiv", "glGetActiveUniformBlockName", "glUniformBlockBinding", "glVertexAttribIPointer", "glGetProgramBinary", "glProgramBinary", "glProgramParameteri", "glGenSamplers", "glDeleteSamplers", "glBindSampler", "glSamplerParameteri", "glGetInternalformativ", "glProgramUniform1fv", "glProgramUniform1iv", "glProgramUniform2fv", "glProgramUniform2iv", "glProgramUniform3fv", "glProgramUniform3iv", "glProgramUniform4fv", "glProgramUniform4iv", "glProgramUniformMatrix2fv", "glProgramUniformMatrix3fv", "glProgramUniformMatrix4fv", "glProgramUniformMatrix2x3fv", "glProgramUniformMatrix3x2fv", "glProgramUniformMatrix2x4fv", "glProgramUniformMatrix4x2fv", "glProgramUniformMatrix3x4fv", "glProgramUniformMatrix4x3fv", "glProgramUniform1uiv", "glProgramUniform2uiv", "glProgramUniform3uiv", "glProgramUniform4uiv", "glBindImageTexture", "glDispatchCompute", "glGetProgramInterfaceiv", "glGetProgramResourceName", "glGetProgramResourceiv", "glDrawArraysIndirect", "glMemoryBarrier", "glTexStorage2DMultisample", "glPatchParameteri", "glPatchParameteriOES", "glPatchParameteriEXT", "glPatchParameterfv", "glPatchParameterfvOES", "glPatchParameterfvEXT", "glRenderbufferStorageMultisampleEXT", "glFramebufferTexture2DMultisampleEXT", "glRenderbufferStorageMultisampleIMG", "glFramebufferTexture2DMultisampleIMG", "glRenderbufferStorageMultisampleAPPLE", "glResolveMultisampleFramebufferAPPLE", "glRenderbufferStorageMultisampleNV", "GL_QCOM_alpha_test", "glAlphaFuncQCOM", "GL_KHR_debug", "glDebugMessageControlKHR", "glDebugMessageCallbackKHR", "glDebugMessageInsertKHR", "glObjectLabelKHR", "glGetObjectLabelKHR", "glPushDebugGroupKHR", "glPopDebugGroupKHR", "glDebugMessageControl", "glDebugMessageCallback", "glDebugMessageInsert", "glObjectLabel", "glGetObjectLabel", "glPushDebugGroup", "glPopDebugGroup", "GL_ARB_debug_output", "glDebugMessageControlARB", "glDebugMessageCallbackARB", "glDebugMessageInsertARB", "GL_EXT_debug_marker", "glPushGroupMarkerEXT", "glPopGroupMarkerEXT", "glLabelObjectEXT", "glGetObjectLabelEXT", "glGenQueriesEXT", "glDeleteQueriesEXT", "glBeginQueryEXT", "glEndQueryEXT", "glQueryCounterEXT", "glGetQueryObjectui64vEXT", "glGetQueryObjectuivEXT", "glQueryCounterNV", "glGetQueryObjectui64vNV", "glTexImage3DOES", "glTexSubImage3DOES", "GL_OES_vertex_array_object", "glBindVertexArrayOES", "glDeleteVertexArraysOES", "glGenVertexArraysOES", "GL_EXT_draw_buffers", "glDrawBuffersEXT", "glDrawBuffersNV", "glReadBufferNV", "glBlitFramebufferNV", "glDiscardFramebufferEXT", "glMapBufferRangeEXT", "glFlushMappedBufferRangeEXT", "glUnmapBufferOES", "glUnmapBufferEXT", "GL_OES_map_buffer", "glMapBufferOES", "glGetProgramBinaryOES", "glProgramBinaryOES", "glDrawElementsBaseVertexOES", "glDrawElementsInstancedBaseVertexOES", "glDrawElementsBaseVertexEXT", "glDrawElementsInstancedBaseVertexEXT", "glTexStorage2DEXT", "glTexStorage3DEXT", "glTextureStorage2DEXT", "glTextureStorage3DEXT", "glBlendBarrierKHR", "glBlendBarrierNV", "WebStreamDecompression", "CacheDownloadBuffer", "Roboto", "MotoyaLMaru", "NanumGothic", "DroidSansFallback", "MIPS", "join", "isAlive", "headerCallback", "readCallback", "progressCallback", "errorCallback", "doneCallback", "NativeFile", "asyncProcessor", "apkAddCentralDirectory", "unity", "UnityMain", "Location_IsServiceEnabledByUser", "Location_SetDesiredAccuracy", "Location_SetDistanceFilter", "Location_StartUpdatingLocation", "Location_StopUpdatingLocation", "setFullscreen", "initCamera", "closeCamera", "getNumCameras", "isCameraFrontFacing", "getCameraOrientation", "nativeInjectEvent", "setStackTrace", "Class", "Method", "CRASH", "currentActivity", "getPackageName", "getErrorReportReceiver", "getPackageManager", "getInstallerPackageName", "setPackage", "resolveActivity", "activityInfo", "chained_signal_handler", "Accelerometer", "Gyroscope", "Proximity", "Orientation", "Pressure", "Temperature", "Gravity", "VideoFrameCallback", "Create", "WebCamTexture", "eglGetSystemTimeFrequencyNV", "eglGetSystemTimeNV", "add_symbols", "attaching", "detaching", "nativeProxyInvoke", "nativeProxyFinalize", "initJni", "nativeDone", "nativeFile", "nativePause", "nativeRecreateGfxState", "nativeRender", "nativeResume", "nativeFocusChanged", "nativeSetInputString", "nativeSoftInputClosed", "nativeSetInputCanceled", "nativeSetTouchDeltaY", "nativeSetLocation", "nativeSetLocationStatus", "nativeInitWWW", "nativeVideoFrameCallback", "nativeActivityIndicatorStyle", "nativeForwardEventsToDalvik", "nativeAddVSyncTime", "UnitySendMessage", "load", "installPresentationDisplay", "resolve", "loadLibrary", "disableLogger", "getSplashMode", "executeGLThreadJobs", "kill", "stopActivityIndicator", "startActivityIndicator", "showVideoPlayer", "setSoftInputStr", "hideSoftInput", "showSoftInput", "Google", "Yellowstone", "KFTT", "KFJWI", "KFJWA", "KFSOWI", "KFTHWA", "KFTHWI", "KFAPWA", "KFAPWI", "familyset", "family", "fileset", "file", "variant", "compact", "font", "Error", "UTF8", "version", "encoding", "standalone", "TILES_VISITED", "PORTALS_PROCESSED", "EXT_PORTALS_PROCESSED", "CELLS_PROCESSED", "CELL_REVISITS", "CELL_SORT_FAILURES", "ParticleSystem", "ParticleSystemRenderer", "scalar", "maxCurve", "minCurve", "minMaxState", "maxGradient", "minGradient", "minColor", "maxColor", "m_MaxParticleSize", "m_CameraVelocityScale", "m_VelocityScale", "m_LengthScale", "m_SortingFudge", "m_NormalDirection", "m_SortMode", "m_Mesh1", "m_Mesh2", "m_Mesh3", "SubModule", "CollisionModule", "ColorBySpeedModule", "RotationBySpeedModule", "SizeBySpeedModule", "ClampVelocityModule", "ExternalForcesModule", "ForceModule", "VelocityModule", "UVModule", "ColorModule", "RotationModule", "SizeModule", "EmissionModule", "ShapeModule", "InitialModule", "lengthInSec", "startDelay", "speed", "randomSeed", "looping", "prewarm", "playOnAwake", "moveWithTransform", "enabled", "rate", "cnt0", "cnt1", "cnt2", "cnt3", "time0", "time1", "time2", "time3", "m_BurstCount", "magnitude", "separateAxis", "inWorldSpace", "dampen", "gradient", "range", "randomizePerFrame", "multiplier", "startLifetime", "startSpeed", "startColor", "startSize", "startRotation", "gravityModifier", "inheritVelocity", "maxNumParticles", "curve", "radius", "angle", "length", "boxX", "boxY", "boxZ", "placementMode", "randomDirection", "plane0", "plane1", "plane2", "plane3", "plane4", "plane5", "bounce", "energyLossOnCollision", "minKillSpeed", "particleRadius", "collidesWith", "quality", "voxelSize", "collisionMessages", "subEmitterBirth", "subEmitterBirth1", "subEmitterCollision", "subEmitterCollision1", "subEmitterDeath", "subEmitterDeath1", "frameOverTime", "tilesX", "tilesY", "animationType", "rowIndex", "cycles", "randomRow", "MinMaxGradient", "MinMaxCurve", "ClothSkinningCoefficient", "MoveKey", "RemoveKey", "GetKey", "SmoothTangents", "AnimatorControllerParameter", "GetRef", "EllipsoidParticleEmitter", "MeshParticleEmitter", "ParticleAnimator", "ParticleEmitter", "m_Emit", "minSize", "maxSize", "minEnergy", "maxEnergy", "minEmission", "maxEmission", "worldVelocity", "localVelocity", "rndVelocity", "emitterVelocityScale", "tangentVelocity", "angularVelocity", "rndAngularVelocity", "rndRotation", "m_OneShot", "ParticleRenderer", "WorldParticleCollider", "m_BounceFactor", "m_CollisionEnergyLoss", "m_CollidesWith", "m_SendCollisionMessage", "m_MinKillVelocity", "m_StretchParticles", "m_AnimatedTextureCount", "UVAnimation", "worldRotationAxis", "localRotationAxis", "sizeGrow", "rndForce", "damping", "stopSimulation", "autodestruct", "m_InterpolateTriangles", "m_Systematic", "m_MinNormalVelocity", "m_MaxNormalVelocity", "m_Ellipsoid", "m_MinEmitterRange", "Collider2D", "BoxCollider2D", "CircleCollider2D", "EdgeCollider2D", "PolygonCollider2D", "m_Poly", "m_Points", "DistanceJoint2D", "HingeJoint2D", "Joint2D", "m_CollideConnected", "AnchoredJoint2D", "PhysicsMaterial2D", "m_DeleteStopsCallbacks", "m_ChangeStopsCallbacks", "Rigidbody2D", "SliderJoint2D", "SpringJoint2D", "WheelJoint2D", "PhysicsUpdateBehaviour2D", "ConstantForce2D", "Effector2D", "AreaEffector2D", "m_ForceDirection", "m_ForceAngle", "PointEffector2D", "PlatformEffector2D", "m_OneWay", "m_UseOneWay", "m_SideFriction", "m_UseSideFriction", "m_SideBounce", "m_UseSideBounce", "SurfaceEffector2D", "m_UsedByEffector", "m_ConnectedRigidBody", "m_UseColliderMask", "m_ColliderMask", "m_Speed", "m_SpeedVariation", "m_ForceScale", "m_UseContactForce", "m_UseFriction", "m_UseBounce", "m_SurfaceArc", "m_ForceMagnitude", "m_ForceVariation", "m_DistanceScale", "m_ForceSource", "m_ForceTarget", "m_ForceMode", "m_UseGlobalAngle", "m_Suspension", "m_MotorSpeed", "m_MaximumMotorForce", "m_DampingRatio", "m_Frequency", "m_LocalAxis", "m_Angle", "JointMotor2D", "JointSuspension2D", "m_Distance", "m_TranslationLimits", "m_LowerTranslation", "m_UpperTranslation", "JointTranslationLimits2D", "m_LinearDrag", "m_GravityScale", "m_SleepingMode", "m_FixedAngle", "m_VelocityIterations", "m_PositionIterations", "m_VelocityThreshold", "m_MaxLinearCorrection", "m_MaxAngularCorrection", "m_MaxTranslationSpeed", "m_MaxRotationSpeed", "m_MinPenetrationForPenalty", "m_BaumgarteScale", "m_BaumgarteTimeOfImpactScale", "m_TimeToSleep", "m_LinearSleepTolerance", "m_AngularSleepTolerance", "m_RaycastsStartInColliders", "m_QueriesStartInColliders", "friction", "m_AngleLimits", "m_LowerAngle", "m_UpperAngle", "JointAngleLimits2D", "m_MaxDistanceOnly", "m_Paths", "Polygon2D", "NavMeshAgent", "NavMeshObstacle", "OffMeshLink", "m_NavMeshLayer", "m_AreaIndex", "m_End", "m_CostOverride", "m_BiDirectional", "m_Activated", "m_AutoUpdatePositions", "m_Shape", "m_MoveThreshold", "m_Carve", "m_CarveOnlyStationary", "m_TimeToStationary", "m_Acceleration", "avoidancePriority", "m_AngularSpeed", "m_StoppingDistance", "m_AutoTraverseOffMeshLink", "m_AutoBraking", "m_AutoRepath", "m_BaseOffset", "m_WalkableMask", "m_ObstacleAvoidanceType", "Walkable", "NavMeshData", "Initialization", "NavMeshObsolete", "m_NavMeshData", "m_NavMesh", "m_NavMeshTiles", "m_NavMeshParams", "m_Heightmaps", "m_HeightMeshes", "m_OffMeshLinks", "m_LinkType", "m_Area", "m_LinkDirection", "m_Indices", "m_Bounds", "m_Nodes", "terrainData", "walkableHeight", "walkableRadius", "walkableClimb", "cellSize", "m_MeshData", "AutoOffMeshLinkData", "HeightMeshBVNode", "HeightMeshData", "HeightmapData", "NavMeshParams", "NavMeshTileData", "areas", "cost", "NavMeshAreaData", "AudioBehaviour", "AudioChorusFilter", "SampleClip", "AudioClip", "InvokePCMReaderCallback_Internal", "InvokePCMSetPositionCallback_Internal", "AudioDistortionFilter", "AudioEchoFilter", "AudioHighPassFilter", "AudioListener", "AudioLowPassFilter", "fmoddebuglevel", "FX_IgnoreVol", "FX_UseVol", "NoFX_IgnoreVol", "NoFX_UseVol", "AudioSettings", "InvokeOnAudioConfigurationChanged", "fmodprofiler", "Microphone", "ASrcDryGroup", "ASrcWetGroup", "AudioReverbFilter", "AudioReverbZone", "AudioSource", "AudioFilter", "AudioMixer", "m_OutputGroup", "m_MasterGroup", "m_Snapshots", "m_StartSnapshot", "m_SuspendThreshold", "m_EnableSuspend", "m_MixerConstant", "AudioMixerSnapshot", "m_AudioMixer", "m_SnapshotID", "AudioMixerGroup", "m_GroupID", "groups", "groupGUIDs", "effects", "effectGUIDs", "numSideChainBuffers", "snapshots", "snapshotGUIDs", "groupNameBuffer", "snapshotNameBuffer", "pluginEffectNameBuffer", "exposedParameterNames", "exposedParameterIndices", "values", "transitionTypes", "transitionIndices", "groupConstantIndex", "sendTargetEffectIndex", "wetMixLevelIndex", "prevEffectIndex", "bypass", "parameterIndices", "parentConstantIndex", "volumeIndex", "pitchIndex", "mute", "solo", "bypassEffects", "AudioMixerConstant", "SnapshotConstant", "EffectConstant", "GroupConstant", "m_audioClip", "m_PlayOnAwake", "m_Volume", "m_Pitch", "m_MinVolume", "m_MaxVolume", "m_RolloffFactor", "Loop", "OutputAudioMixerGroup", "Mute", "Spatialize", "Priority", "DopplerLevel", "MinDistance", "MaxDistance", "Pan2D", "rolloffMode", "BypassEffects", "BypassListenerEffects", "BypassReverbZones", "rolloffCustomCurve", "panLevelCustomCurve", "spreadCustomCurve", "reverbZoneMixCustomCurve", "m_ReverbPreset", "m_Room", "m_RoomHF", "m_DecayTime", "m_DecayHFRatio", "m_Reflections", "m_ReflectionsDelay", "m_Reverb", "m_ReverbDelay", "m_HFReference", "m_RoomRolloffFactor", "m_Diffusion", "m_Density", "m_LFReference", "m_RoomLF", "m_DryLevel", "m_RoomRolloff", "m_ReflectionsLevel", "m_ReverbLevel", "m_SampleRate", "m_DSPBufferSize", "m_VirtualVoiceCount", "m_RealVoiceCount", "m_SpatializerPlugin", "m_DisableAudio", "m_LowpassResonanceQ", "lowpassLevelCustomCurve", "m_CutoffFrequency", "m_HighpassResonanceQ", "m_Delay", "m_DecayRatio", "m_WetMix", "m_DryMix", "m_DistortionLevel", "m_LoadType", "m_BitsPerSample", "m_Length", "m_IsTrackerFormat", "m_SubsoundIndex", "m_PreloadAudioData", "m_LoadInBackground", "m_Legacy3D", "m_Resource", "m_CompressionFormat", "StreamedResource", "m_WetMix1", "m_WetMix2", "m_WetMix3", "m_Rate", "MuteGroup", "result", "BaseVideoTexture", "m_PlayFixedFrameRate", "m_AnimatePhysics", "m_AnimateIfVisible", "m_AnimateOnlyIfVisible", "AnimatorOverrideController", "Motion", "localRotation", "localPosition", "localScale", "AnimationClip", "m_UseCompression", "m_Compressed", "m_MuscleClipInfo", "m_AnimationClipSettings", "Avatar", "RuntimeAnimatorController", "AnimatorController", "ClipMuscleConstant", "NULL", "m_Controller", "m_Clips", "functionName", "objectReferenceParameter", "floatParameter", "intParameter", "messageOptions", "m_ControllerSize", "m_TOS", "m_AnimationClips", "m_StateMachineBehaviourVectorDescription", "m_StateMachineBehaviours", "m_StateMachineBehaviourRanges", "m_StateMachineBehaviourIndices", "m_StartIndex", "m_Count", "m_StateID", "m_LayerIndex", "m_LayerArray", "m_StateMachineArray", "m_Values", "m_DefaultValues", "m_BoolValues", "m_IntValues", "m_FloatValues", "m_PositionValues", "m_QuaternionValues", "m_ScaleValues", "m_ValueArray", "m_TypeID", "m_Index", "m_StateConstantArray", "m_AnyStateTransitionConstantArray", "m_SelectorStateConstantArray", "m_DefaultState", "m_MotionSetCount", "m_TransitionConstantArray", "m_FullPathID", "m_IsEntry", "m_Destination", "m_ConditionConstantArray", "m_ConditionMode", "m_EventID", "m_EventThreshold", "m_ExitTime", "m_DestinationState", "m_UserID", "m_TransitionDuration", "m_TransitionOffset", "m_HasExitTime", "m_HasFixedDuration", "m_InterruptionSource", "m_OrderedInterruption", "m_CanTransitionToSelf", "m_BlendTreeConstantIndexArray", "m_BlendTreeConstantArray", "m_NameID", "m_TagID", "m_SpeedParamID", "m_MirrorParamID", "m_CycleOffsetParamID", "m_CycleOffset", "m_IKOnFeet", "m_WriteDefaultValues", "m_Loop", "m_Mirror", "m_NodeArray", "m_BlendType", "m_BlendEventID", "m_BlendEventYID", "m_ChildIndices", "m_Blend1dData", "m_Blend2dData", "m_BlendDirectData", "m_ClipID", "m_Duration", "m_ChildThresholdArray", "m_ChildBlendEventIDArray", "m_NormalizedBlendValues", "m_ChildPositionArray", "m_ChildMagnitudeArray", "m_ChildPairVectorArray", "m_ChildPairAvgMagInvArray", "m_ChildNeighborListArray", "m_NeighborArray", "m_StateMachineIndex", "m_StateMachineMotionSetIndex", "m_BodyMask", "m_SkeletonMask", "m_Binding", "m_DefaultWeight", "m_IKPass", "m_SyncedLayerAffectsTiming", "m_PathHash", "m_Weight", "word0", "word1", "word2", "StateMachineBehaviourVectorDescription", "StateRange", "StateKey", "ControllerConstant", "OffsetPtr", "ValueArray", "float4", "ValueArrayConstant", "ValueConstant", "StateMachineConstant", "SelectorStateConstant", "SelectorTransitionConstant", "ConditionConstant", "TransitionConstant", "StateConstant", "BlendTreeConstant", "BlendTreeNodeConstant", "BlendDirectDataConstant", "Blend2dDataConstant", "MotionNeighborList", "Blend1dDataConstant", "LayerConstant", "SkeletonMask", "SkeletonMaskElement", "HumanPoseMask", "m_Avatar", "m_CullingMode", "m_UpdateMode", "m_ApplyRootMotion", "m_LinearVelocityBlending", "m_HasTransformHierarchy", "m_AllowConstantClipSamplingOptimization", "AvatarConstant", "m_AvatarSize", "m_Legacy", "m_UseHighQualityCurve", "m_RotationCurves", "m_CompressedRotationCurves", "m_PositionCurves", "m_ScaleCurves", "m_FloatCurves", "m_PPtrCurves", "m_AnimationType", "m_MuscleClip", "m_MuscleClipSize", "m_ClipBindingConstant", "m_Events", "genericBindings", "pptrCurveMapping", "path", "attribute", "script", "classID", "customType", "isPPtrCurve", "m_DeltaPose", "m_StartX", "m_LeftFootStartX", "m_RightFootStartX", "m_AverageSpeed", "m_Clip", "m_StartTime", "m_StopTime", "m_OrientationOffsetY", "m_Level", "m_AverageAngularSpeed", "m_IndexArray", "m_ValueArrayDelta", "m_LoopTime", "m_LoopBlend", "m_LoopBlendOrientation", "m_LoopBlendPositionY", "m_LoopBlendPositionXZ", "m_KeepOriginalOrientation", "m_KeepOriginalPositionY", "m_KeepOriginalPositionXZ", "m_HeightFromFeet", "m_Stop", "m_StreamedClip", "m_DenseClip", "m_ConstantClip", "m_FrameCount", "m_CurveCount", "m_BeginTime", "m_SampleArray", "curveCount", "m_RootX", "m_LookAtPosition", "m_LookAtWeight", "m_GoalArray", "m_LeftHandPose", "m_RightHandPose", "m_DoFArray", "m_TDoFArray", "m_GrabX", "m_Override", "m_CloseOpen", "m_InOut", "m_Grab", "m_WeightT", "m_WeightR", "m_HintT", "m_HintWeightT", "m_Path", "m_Times", "m_Slopes", "AnimationClipBindingConstant", "GenericBinding", "ValueDelta", "Clip", "ConstantClip", "DenseClip", "StreamedClip", "xform", "HumanPose", "HandPose", "HumanGoal", "PPtrKeyframe", "PPtrCurve", "FloatCurve", "Vector3Curve", "CompressedAnimationCurve", "QuaternionCurve", "m_OriginalClip", "m_OverrideClip", "AnimationClipOverride", "m_Animations", "m_PlayAutomatically", "m_CullingType", "m_Skeleton", "m_AvatarSkeleton", "m_SkeletonPose", "m_AvatarSkeletonPose", "m_HumanLayerCount", "m_LayerCount", "m_HumanLayerArray", "m_DefaultPose", "m_SkeletonNameIDArray", "m_Human", "m_HumanSkeletonIndexArray", "m_HumanSkeletonReverseIndexArray", "m_RootMotionBoneIndex", "m_RootMotionBoneX", "m_RootMotionSkeleton", "m_RootMotionSkeletonPose", "m_RootMotionSkeletonIndexArray", "m_AvatarX", "m_LeftFootX", "m_RightFootX", "m_PivotWeight", "m_FirstEval", "m_SkeletonPoseOutputReady", "m_SkeletonNameIDCount", "m_HumanSkeletonIndexCount", "m_HumanSkeletonReverseIndexCount", "m_RootMotionSkeletonIndexCount", "m_StateMachineMemory", "m_LayerWeights", "m_InPlayback", "m_StateMachineCount", "m_BoolCount", "m_IntCount", "m_FloatCount", "m_PositionCount", "m_QuaternionCount", "m_ScaleCount", "m_MotionSetAutoWeightArray", "m_CurrentStateIndex", "m_NextStateIndex", "m_ExitStateIndex", "m_TransitionIndex", "m_TransitionSourceStateIndex", "m_TransitionType", "m_CurrentStatePreviousTime", "m_NextStatePreviousTime", "m_CurrentStateDuration", "m_NextStateDuration", "m_ExitStateDuration", "m_CurrentStateSpeedModifier", "m_NextStateSpeedModifier", "m_ExitStateSpeedModifier", "m_TransitionStartTime", "m_TransitionTime", "m_InInterruptedTransition", "m_InTransition", "m_InDynamicTransition", "m_ActiveGotoState", "m_FixedTransition", "m_LeftHand", "m_RightHand", "m_HandlesCount", "m_Handles", "m_ColliderCount", "m_ColliderArray", "m_HumanBoneIndex", "m_HumanBoneMass", "m_ColliderIndex", "m_ArmTwist", "m_ForeArmTwist", "m_UpperLegTwist", "m_LegTwist", "m_ArmStretch", "m_LegStretch", "m_FeetSpacing", "m_HasLeftHand", "m_HasRightHand", "m_HasTDoF", "m_HandBoneIndex", "m_Node", "m_AxesCount", "m_AxesArray", "m_XMotionType", "m_YMotionType", "m_ZMotionType", "m_MinLimitX", "m_MaxLimitX", "m_MaxLimitY", "m_MaxLimitZ", "m_ParentHumanIndex", "m_PreQ", "m_PostQ", "m_Sgn", "m_Limit", "m_Min", "m_Max", "m_ParentId", "m_AxesId", "Human", "Handle", "Hand", "SkeletonPose", "Skeleton", "Limit", "Axes", "Node", "TDOF", "Result", "Value", "MinMin", "MinMax", "MaxMin", "MaxMax", "RangeA", "RangeB", "RangeC", "RangeD", "RangeE", "WeightA", "WeightB", "WeightC", "WeightD", "WeightE", "OutA", "OutB", "OutC", "OutD", "OutE", "DampTime", "DeltaTime", "PreviousValue", "GravityWeight", "SrcRefX", "DstRefX", "SrcPivotX", "DstPivotX", "RefWeight", "PivotWeight", "Condition", "StateTime", "StateSpeed", "StateExitTime", "DoTransition", "NextStateStartTime", "TransitionDuration", "TransitionOffset", "TransitionStartTime", "StateMachineWeight", "TransitionTime", "BlendWeight", "StateWeight", "StabilizeFeet", "RootX", "ComputeSource", "LookAt", "LeftFootX", "RightFootX", "LeftFootSpeedT", "LeftFootSpeedQ", "RightFootSpeedT", "RightFootSpeedQ", "LeftFootStableT", "LeftFootStableQ", "RightFootStableT", "RightFootStableQ", "RootSpeedT", "RootSpeedQ", "RootStableT", "RootStableQ", "LeftFootProjX", "RightFootProjX", "PlantFeet", "LeftFootSafeX", "RightFootSafeX", "PositionX", "PositionY", "PositionZ", "QuaternionX", "QuaternionY", "QuaternionZ", "QuaternionW", "ScaleX", "ScaleY", "ScaleZ", "DynamicCurve", "Thumb", "Index", "Middle", "Ring", "Little", "Proximal", "Intermediate", "Distal", "Spread", "Hips", "LeftUpperLeg", "RightUpperLeg", "LeftLowerLeg", "RightLowerLeg", "LeftFoot", "RightFoot", "Spine", "Chest", "Neck", "Head", "LeftShoulder", "RightShoulder", "LeftUpperArm", "RightUpperArm", "LeftLowerArm", "RightLowerArm", "LeftHand", "RightHand", "LeftToes", "RightToes", "LeftEye", "RightEye", "Arial", "Gulim", "LastResort", "dfont", "quad", "Italic", "m_AsciiStartOffset", "m_Kerning", "m_LineSpacing", "m_CharacterSpacing", "m_CharacterPadding", "m_ConvertCase", "m_CharacterRects", "m_KerningValues", "m_PixelScale", "m_GridFont", "m_FontCountX", "m_FontCountY", "m_PerCharacterKerning", "m_FontData", "m_Ascent", "m_DefaultStyle", "m_FontNames", "m_FallbackFonts", "m_FontRenderingMode", "vert", "flipped", "GUIText", "m_Text", "m_PixelOffset", "m_TabSize", "m_PixelCorrect", "TextMesh", "m_OffsetZ", "m_CharacterSize", "_TextureSampleAdd", "_UseClipRect", "_ClipRect", "CanvasRenderer", "CanvasGroup", "Canvas", "unity_GUIZTestMode", "SendWillRenderCanvases", "m_Camera", "m_PlaneDistance", "m_PixelPerfect", "m_ReceivesEvents", "m_OverrideSorting", "m_OverridePixelPerfect", "m_Alpha", "m_Interactable", "m_BlocksRaycasts", "m_IgnoreParentGroups", "TerrainCollider", "m_CreateTreeColliders", "m_EnableTreeColliders", "UnityGUIClip", "_GUIClipTexture", "EndGUIFromException", "ReceivedMessagesBus", "SentMessagesBus", "SentPacketBus", "UNET", "ReceivedEventBus", "SentEventBus", "m_InitializeOnStartup", "m_TestMode", "m_EnabledPlatforms", "m_IosGameId", "m_AndroidGameId", "UnityAdsInternal", "CallUnityAdsVideoStarted", "CallUnityAdsVideoCompleted", "CallUnityAdsHide", "CallUnityAdsShow", "CallUnityAdsCampaignsFetchFailed", "CallUnityAdsCampaignsAvailable", "m_TestEventUrl", "m_TestConfigUrl", "stereo", "split", "oculus", "morpheus", "ovrp_Initialize", "ovrp_Shutdown", "ovrp_PreInitialize", "ovrp_SetupDistortionWindow", "ovrp_DestroyDistortionWindow", "ovrp_RecreateEyeTexture", "ovrp_ReleaseEyeTexture", "ovrp_GetEyePose", "ovrp_GetEyeFrustum", "ovrp_GetEyeTextureSize", "ovrp_GetNativePointer", "ovrp_GetBufferCount", "ovrp_Update", "ovrp_BeginFrame", "ovrp_EndEye", "ovrp_EndFrame", "ovrp_GetString", "ovrp_GetFloat", "ovrp_SetFloat", "ovrp_SetCaps", "ovrp_GetCaps", "ovrp_RecenterPose", "ovrp_GetStatus2", "ovrp_GetStatus", "Cloud", "CloudJobScheduler::FileSystemJobQueue", "ETag", "ArchivedEvents", "UnknownType", "Analytics", "EditorAnalytics", "Accept", "data_block_id", "HTTP", "CHECK_PTR", "InvokeJavaProxyMethod", "CreateJavaProxy", "vector::_M_range_check", "newInterfaceProxy", "disableInterfaceProxy", "toString", "READ_PHONE_STATE", "VIBRATE", "getIntent", "getWindow", "setRequestedOrientation", "getRequestedOrientation", "runOnUiThread", "MODE_PRIVATE", "WINDOW_SERVICE", "VIBRATOR_SERVICE", "CONNECTIVITY_SERVICE", "MEDIA_ROUTER_SERVICE", "TELEPHONY_SERVICE", "DISPLAY_SERVICE", "getContentResolver", "getSharedPreferences", "getFilesDir", "getCacheDir", "startActivity", "getSystemService", "checkCallingOrSelfPermission", "ACTION_VIEW", "setDataAndType", "getExtras", "setData", "remove", "putInt", "putFloat", "apply", "putString", "getInt", "getFloat", "contains", "edit", "getString", "SCREEN_ORIENTATION_UNSPECIFIED", "SCREEN_ORIENTATION_LANDSCAPE", "SCREEN_ORIENTATION_PORTRAIT", "SCREEN_ORIENTATION_SENSOR", "SCREEN_ORIENTATION_SENSOR_LANDSCAPE", "SCREEN_ORIENTATION_SENSOR_PORTRAIT", "SCREEN_ORIENTATION_REVERSE_LANDSCAPE", "SCREEN_ORIENTATION_REVERSE_PORTRAIT", "SCREEN_ORIENTATION_FULL_SENSOR", "versionName", "metaData", "GET_META_DATA", "PERMISSION_GRANTED", "FEATURE_AUDIO_LOW_LATENCY", "getApplicationInfo", "hasSystemFeature", "getPackageInfo", "getDisplay", "getPresentationDisplay", "ROUTE_TYPE_LIVE_VIDEO", "getSelectedRoute", "TYPE_MOBILE", "getActiveNetworkInfo", "getType", "isConnected", "parse", "fromFile", "isRelative", "INCREMENTAL", "RELEASE", "SDK_INT", "DEVICE", "MANUFACTURER", "MODEL", "TAGS", "containsKey", "MEDIA_MOUNTED", "getExternalStorageDirectory", "getExternalStorageState", "cancel", "vibrate", "hasVibrator", "ANDROID_ID", "SCREEN_OFF_TIMEOUT", "getDeviceId", "widthPixels", "heightPixels", "densityDpi", "xdpi", "ydpi", "getWidth", "getHeight", "getRotation", "getMetrics", "getDisplayId", "getRefreshRate", "getRealMetrics", "getRawWidth", "getRawHeight", "getRange", "getAxis", "getSource", "getName", "getDescriptor", "getDevice", "getDeviceIds", "getSources", "getMotionRange", "getMotionRanges", "KEYCODE_VOLUME_UP", "KEYCODE_VOLUME_DOWN", "getMetaState", "getAction", "getKeyCode", "getCharacters", "getRepeatCount", "recycle", "getEventTime", "obtain", "getAxisValue", "getPointerCount", "getPointerId", "getToolType", "getButtonState", "getHistorySize", "getHistoricalEventTime", "getHistoricalX", "getHistoricalY", "axisToString", "getY", "getX", "setFlags", "FLAG_KEEP_SCREEN_ON", "getDefaultDisplay", "getFileExtensionFromUrl", "getMimeTypeFromExtension", "getSingleton", "getPath", "getClassLoader", "findLibrary", "getClass", "nanoTime", "hasNext", "next", "iterator", "getLanguage", "getDefault", "getCountry", "ChannelGroup", "music", "TIT2", "TITLE", "FORM", "AIFC", "AIFF", "COMM", "twos", "SSND", "INST", "MARK", "sowt", "FSB3", "FSB4", "FSB2", "SYNC", "FSB5", "IMPM", "PNAM", "CNAM", "Echo", "IMPI", "IMPS", "Flanger", "Chorus", "FLT4", "RIFF", "WAVE", "Xing", "SCRM", "ARTIST", "ALBUM", "YEAR", "COMMENT", "TRACK", "GENRE", "fact", "LIST", "labl", "smpl", "OggS", "Room", "Reflections", "Reverb", "Diffusion", "Density", "Winamp", "fmod", "startAudioRecord", "stopAudioRecord", "start", "stop", "close", "fmodGetInfo", "fmodProcess", "fmodProcessMicData", "androidRecordingPreset", "getPrimaryOutputSamplingRate", "getPrimaryOutputFrameCount", "slCreateEngine", "SL_IID_ENGINE", "SL_IID_ANDROIDCONFIGURATION", "SL_IID_PLAY", "SL_IID_RECORD", "androidPlaybackStreamType", "ID_NAT_TARGET_NOT_CONNECTED", "ID_NAT_TARGET_UNRESPONSIVE", "UNASSIGNED_RAKNET_GUID", "localhost", "UNASSIGNED_SYSTEM_ADDRESS", "init", "UnityAds", "show", "canShowAds", "setLogLevel", "setCampaignDataURL", "UnityAdsOnFetchCompleted", "UnityAdsOnFetchFailed", "UnityAdsOnShow", "UnityAdsOnHide", "UnityAdsOnVideoCompleted", "UnityAdsOnVideoStarted", "GenuineIntel", "AuthenticAMD", "GeoMsgLogger", "PxD6Joint", "PxBase", "PxJoint", "PxDistanceJoint", "PxFixedJoint", "PxRevoluteJoint", "PxParticleFluid", "PxParticleSystem", "PxCloth", "PxClothFabric", "PxAggregate", "PxArticulation", "PxRigidDynamic", "PxRigidStatic", "PxConvexMesh", "PxHeightField", "PxTriangleMesh", "PxShape", "PxMaterial", "Flags", "NumActors", "MaxNbActors", "SelfCollision", "Actors", "PxActorRef", "PxArticulationRef", "NbParticles", "Phases", "Restvalues", "Sets", "ParticleIndices", "TetherAnchors", "TetherLengths", "bad__repx__name", "__child", "Materials", "Points", "Triangles", "materialIndices", "CookedData", "points", "triangles", "samples", "ValidParticleRange", "ValidParticleBitmap", "Positions", "Velocities", "RestOffsets", "MaxParticles", "ParticleBaseFlags", "ParticleReadDataFlags", "ProjectionPlane", "PxSphereGeometry", "parseGeometry", "PxPlaneGeometry", "PxCapsuleGeometry", "PxBoxGeometry", "PxConvexMeshGeometry", "PxTriangleMeshGeometry", "PxHeightFieldGeometry", "Shapes", "PxShapeRef", "Parent", "Fabric", "CollisionSpheres", "CollisionSpherePairs", "CollisionPlanes", "CollisionConvexMasks", "CollisionTriangles", "ParticleAccelerations", "SelfCollisionIndices", "MotionConstraints", "SeparationConstraints", "RestPositions", "VirtualParticleWeights", "VirtualParticles", "ClothFlags", "PxMaterialRef", "PxArticulationLink", "Links", "eVALID", "eCOLLISION_WITH_STATIC", "eCOLLISION_WITH_DYNAMIC", "eCOLLISION_WITH_DRAIN", "eNO_BOUNDARY_EDGES", "eS16_TM", "eDOUBLE_SIDED", "ePOSITION_BUFFER", "eVELOCITY_BUFFER", "eREST_OFFSET_BUFFER", "eFLAGS_BUFFER", "eCOLLISION_NORMAL_BUFFER", "eCOLLISION_VELOCITY_BUFFER", "eDENSITY_BUFFER", "eCOLLISION_TWOWAY", "eENABLED", "ePROJECT_TO_PLANE", "ePER_PARTICLE_REST_OFFSET", "eGPU", "eSWEPT_CONTACT", "eSCENE_COLLISION", "eVERTICAL", "eHORIZONTAL", "eBENDING", "eSHEARING", "eKINEMATIC", "eENABLE_CCD", "eENABLE_CCD_FRICTION", "eSIMULATION_SHAPE", "eSCENE_QUERY_SHAPE", "eTRIGGER_SHAPE", "eVISUALIZATION", "ePARTICLE_DRAIN", "eDISABLE_GRAVITY", "eSEND_SLEEP_NOTIFIES", "eDISABLE_SIMULATION", "eAVERAGE", "eMIN", "eMULTIPLY", "eMAX", "eN_VALUES", "ePAD_32", "eDISABLE_FRICTION", "eDISABLE_STRONG_FRICTION", "createNodeEditor", "FastXml", "createCollection", "RepXCollection::create", "PxRepXSerializer", "PhysX30Collection", "UpVector", "Scale", "scale", "upvector", "eSuccess", "eSerializerNotFound", "eReferenceNotFound", "PxRigidActor", "Spring", "Stiffness", "TangentialSpring", "TangentialStiffness", "yLimit", "zLimit", "TwistLimit", "lower", "upper", "MassSpaceInertia", "MassSpaceInertiaTensor", "SleepEnergyThreshold", "SleepThreshold", "joint", "Actor0", "Actor1", "LocalPose0", "LocalPose1", "actor0", "actor1", "LocalPose", "eACTOR0", "eACTOR1", "DynamicFrictionV", "StaticFrictionV", "dirOfAnisotropy", "PositionBuffer", "VelocityBuffer", "RestOffsetBuffer", "PxPrismaticJoint", "PxSphericalJoint", "eLOCKED", "eMAX_DISTANCE_ENABLED", "THEEND", "PhysXSDK", "NpSceneCompletion", "NpSceneExecution", "NpSceneCollide", "NpSceneSolve", "PxActor", "UNDEFINED", "PxParticleBase", "PxArticulationJoint", "PxRigidBody", "PxConstraint", "StaticSim", "BodySim", "ShapeSim", "SingleAABBUpdateTask", "ActorAABBUpdateTask", "AggregateAABBUpdateTask", "SingleAABBTask", "ActorAABBTask", "AggregateAABBTask", "BPWorkTask", "ProcessBPResultsTask", "AggregateOverlapTask", "PxsCMDiscreteUpdateTask", "PxsIntegrateTask", "PxsParallelSolverTask", "PxsSolverStartTask", "PxsSolverSetupSolve", "PxsSolverEndTask", "PxsFinalizeTask", "PxvParticleFlags", "PxU16", "PxsFluidParticle", "PxVec3", "PxReal", "density", "velocity", "PxsParticleData", "bool", "mOwnMemory", "PxU32", "mMaxParticles", "mHasRestOffsets", "mValidParticleRange", "mValidParticleCount", "PxBounds3", "mWorldBounds", "mParticleBuffer", "mRestOffsetBuffer", "BitMap", "mParticleMap", "BroadPhaseBatchUpdate", "PxsCCDSweepTask", "PxsCCDAdvanceTask", "PxsContext::postCCDSweepTask", "PxsFluidCollisionTask", "PxsFluidDynamicsSphTask", "PxsFluidDynamics::mergeForce", "MBPUpdateWorkTask", "MBPPostUpdateWorkTask", "SapUpdateWorkTask", "SapPostUpdateWorkTask", "PxVehicleNoDrive", "PxVehicleDriveNW", "PxVehicleDriveTank", "PxVehicleDrive4W", "PxSerializerDefaultAdapter", "eSTANDARD", "eSPECIAL", "eESTIMATE", "eBEST_POSSIBLE", "eDIFF_TYPE_LS_4WD", "eDIFF_TYPE_LS_FRONTWD", "eDIFF_TYPE_LS_REARWD", "eDIFF_TYPE_OPEN_4WD", "eDIFF_TYPE_OPEN_FRONTWD", "eDIFF_TYPE_OPEN_REARWD", "eMAX_NB_DIFF_TYPES", "eREVERSE", "eNEUTRAL", "eFIRST", "eSECOND", "eTHIRD", "eFOURTH", "eFIFTH", "eSIXTH", "eSEVENTH", "eEIGHTH", "eNINTH", "eTENTH", "eELEVENTH", "eTWELFTH", "eTHIRTEENTH", "eFOURTEENTH", "eFIFTEENTH", "eSIXTEENTH", "eSEVENTEENTH", "eEIGHTEENTH", "eNINETEENTH", "eTWENTIETH", "eTWENTYFIRST", "eTWENTYSECOND", "eTWENTYTHIRD", "eTWENTYFOURTH", "eTWENTYFIFTH", "eTWENTYSIXTH", "eTWENTYSEVENTH", "eTWENTYEIGHTH", "eTWENTYNINTH", "eTHIRTIETH", "PxVehicleDrive", "PxRigidDynamicRef", "NumWheels", "NumNonDrivenWheels", "MWheelsSimData", "MDriveSimData", "MDriveSimDataNW", "MMOI", "MMass", "MCMOffset", "RecipMOI", "RecipMaxOmega", "MPeakTorque", "MMaxOmega", "MDampingRateFullThrottle", "GearRatio", "MFinalRatio", "MNbRatios", "MSwitchTime", "Latency", "UpRatios", "DownRatios", "MFrontRearSplit", "MFrontLeftRightSplit", "MRearLeftRightSplit", "MCentreBias", "MFrontBias", "MRearBias", "MType", "DrivenWheelStatus", "MAccuracy", "MFrontWidth", "MRearWidth", "MAxleSeparation", "MStrength", "MAccuracyMode", "MEstimateIterations", "Denominator", "MMinNormalisedLoad", "MMinFilteredNormalisedLoad", "MMaxNormalisedLoad", "MMaxFilteredNormalisedLoad", "RecipRadius", "MRadius", "MWidth", "MDampingRate", "MMaxBrakeTorque", "MMaxHandBrakeTorque", "MMaxSteer", "MToeAngle", "RecipMaxCompression", "RecipMaxDroop", "MSpringStrength", "MSpringDamperRate", "MMaxCompression", "MMaxDroop", "MSprungMass", "MCamberAtRest", "MCamberAtMaxCompression", "MCamberAtMaxDroop", "MLatStiffX", "MLatStiffY", "TireRestLoadsArray", "RecipTireRestLoadsArray", "ChassisMass", "SuspensionData", "WheelData", "TireData", "SuspTravelDirection", "SuspForceAppPointOffset", "TireForceAppPointOffset", "WheelCentreOffset", "WheelShapeMapping", "SceneQueryFilterData", "TireLoadFilterData", "MinLongSlipDenominator", "TireForceShaderFunction", "WheelRotationSpeed", "WheelRotationAngle", "Wheel4DynData", "VehicleType", "RigidDynamicActor", "ConcreteTypeName", "MWheelsDynData", "AnalogInput", "GearUp", "GearDown", "UseAutoGears", "CurrentGear", "TargetGear", "EngineRotationSpeed", "GearChange", "GearSwitchTime", "AutoBoxSwitchTime", "MUseAutoGears", "MGearUpPressed", "MGearDownPressed", "MCurrentGear", "MTargetGear", "MEnginespeed", "MGearSwitchTime", "MAutoBoxSwitchTime", "EngineData", "GearsData", "ClutchData", "AutoBoxData", "DiffData", "AckermannGeometryData", "MDriveDynData", "DriveModel", "BrakeTorque", "DriveTorque", "SteerAngle", "MFrictionVsSlipGraph", "MTorqueCurve", "ShadowLookupTable", "mDataPairs", "mNbDataPairs", "mPad", "PxVehicleEngineData", "mTorqueCurve", "mMOI", "mPeakTorque", "mMaxOmega", "mDampingRateFullThrottle", "mRecipMOI", "mRecipMaxOmega", "PxVehicleGearsData", "mRatios", "mFinalRatio", "mNbRatios", "mSwitchTime", "PxVehicleClutchData", "mStrength", "mAccuracyMode", "mEstimateIterations", "PxU8", "PxVehicleAutoBoxData", "mUpRatios", "mDownRatios", "PxVehicleDriveSimData", "mEngine", "mGears", "mClutch", "mAutoBox", "PxVehicleDriveDynData", "mControlAnalogVals", "mUseAutoGears", "mGearUpPressed", "mGearDownPressed", "mCurrentGear", "mTargetGear", "mEnginespeed", "mGearSwitchTime", "mAutoBoxSwitchTime", "PxVehicleWheels", "mDriveDynData", "PxVehicleDifferential4WData", "mFrontRearSplit", "mFrontLeftRightSplit", "mRearLeftRightSplit", "mCentreBias", "mFrontBias", "mRearBias", "mType", "mAccuracy", "mFrontWidth", "mRearWidth", "mAxleSeparation", "PxVehicleDriveSimData4W", "mDiff", "mAckermannGeometry", "PxVehicleDifferentialNWData", "mBitmapBuffer", "mNbDrivenWheels", "mInvNbDrivenWheels", "PxVehicleDriveSimDataNW", "mDriveSimData", "mDriveModel", "SuspLimitConstraintData", "mCMOffsets", "mDirs", "mErrors", "mActiveFlags", "StickyTireConstraintData", "mTargetSpeeds", "VehicleConstraintData", "mSuspLimitData", "mStickyTireForwardData", "mStickyTireSideData", "PxVehicleConstraintShader", "PxConstraintConnector", "mData", "mConstraint", "mVehicle", "PxVehicleSuspensionData", "mSpringStrength", "mSpringDamperRate", "mMaxCompression", "mMaxDroop", "mSprungMass", "mCamberAtRest", "mCamberAtMaxCompression", "mCamberAtMaxDroop", "mRecipMaxCompression", "mRecipMaxDroop", "PxVehicleWheelData", "mRadius", "mWidth", "mMass", "mDampingRate", "mMaxBrakeTorque", "mMaxHandBrakeTorque", "mMaxSteer", "mToeAngle", "mRecipRadius", "PxVehicleTireData", "mLatStiffX", "mLatStiffY", "mFrictionVsSlipGraph", "PxVehicleWheels4SimData", "mSuspensions", "mWheels", "mTires", "mSuspDownwardTravelDirections", "mSuspForceAppPointOffsets", "mTireForceAppPointOffsets", "mWheelCentreOffsets", "mTireRestLoads", "mRecipTireRestLoads", "PxFilterData", "mSqFilterData", "mWheelShapeMap", "PxVehicleTireLoadFilterData", "mMinNormalisedLoad", "mMinFilteredNormalisedLoad", "mMaxNormalisedLoad", "mMaxFilteredNormalisedLoad", "mDenominator", "PxVehicleWheelsSimData", "mNormalisedLoadFilter", "mWheels4SimData", "mNbWheels4", "mNbActiveWheels", "mActiveWheelsBitmapBuffer", "mThresholdLongitudinalSpeed", "mLowForwardSpeedSubStepCount", "mHighForwardSpeedSubStepCount", "mMinLongSlipDenominator", "PxVehicleWheels4DynData", "mWheelSpeeds", "mCorrectedWheelSpeeds", "mWheelRotationAngles", "mTireLowForwardSpeedTimers", "mTireLowSideSpeedTimers", "mJounces", "mRaycastsOrCachedHitResults", "mVehicleConstraints", "PxRaycastQueryResult", "mSqResults", "mHasCachedRaycastHitPlane", "PxVehicleTireForceCalculator", "mShaderData", "mShader", "PxVehicleWheelsDynData", "mWheels4DynData", "mTireForceCalculators", "mUserDatas", "void", "mWheelsSimData", "mWheelsDynData", "mActor", "mNbNonDrivenWheels", "mOnConstraintReleaseCounter", "mSteerAngles", "mDriveTorques", "mBrakeTorques", "PxHullPolygon", "PxTaskManager", "NonTrackedAlloc", "Foundation", "generic", "system", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "basic_ios::clear", "POSIX", "basic_string::at", "basic_string::copy", "basic_string::compare", "basic_string::_M_replace_aux", "basic_string::replace", "basic_string::basic_string", "std::bad_alloc", "std::bad_cast", "_GLOBAL_", "JArray", "_Accum", "_Fract", "operator", "boolean", "char", "byte", "double", "float", "__float128", "unsigned", "long", "__int128", "short", "wchar_t", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "std::exception", "std::bad_exception", "AKST", "print", "cntrl", "alpha", "digit", "punct", "xdigit", "alnum", "graph", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "nonmarkingreturn", "notequal", "infinity", "lessequal", "greaterequal", "partialdiff", "summation", "product", "integral", "Omega", "radical", "approxequal", "Delta", "nonbreakingspace", "lozenge", "apple", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "three", "four", "five", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "braceleft", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "ordfeminine", "Lslash", "Oslash", "ordmasculine", "dotlessi", "lslash", "oslash", "germandbls", "onesuperior", "logicalnot", "trademark", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold", "Delta", "Omega", "fraction", "hyphen", "macron", "periodcentered", "space", "Tcommaaccent", "tcommaaccent", "DFKaiShu", "MingLiU", "PMingLiU", "MingLi43", "AnimationClip", "AnimationCurve", "AnimationState", "Array", "Base", "BitField", "bitset", "bool", "char", "ColorRGBA", "Component", "data", "deque", "double", "dynamic_array", "FastPropertyName", "first", "float", "Font", "GameObject", "GradientNEW", "GUID", "GUIStyle", "list", "Matrix4x4f", "MdFour", "MonoBehaviour", "MonoScript", "m_ByteSize", "m_Curve", "m_EditorClassIdentifier", "m_EditorHideFlags", "m_Enabled", "m_ExtensionPtr", "m_GameObject", "m_Index", "m_IsArray", "m_IsStatic", "m_MetaFlag", "m_Name", "m_ObjectHideFlags", "m_PrefabInternal", "m_PrefabParentObject", "m_Script", "m_StaticEditorFlags", "m_Type", "m_Version", "Object", "pair", "Prefab", "Quaternionf", "Rectf", "RectInt", "RectOffset", "second", "short", "size", "SInt16", "SInt32", "SInt64", "SInt8", "staticvector", "string", "TextAsset", "TextMesh", "Texture", "Texture2D", "Transform", "TypelessData", "UInt16", "UInt32", "UInt64", "UInt8", "vector", "Vector2f", "Vector3f", "Vector4f", "m_ScriptingClassIdentifier", "STUVW", "DX10", "SL_IID_ANDROIDSIMPLEBUFFERQUEUE", "ID_NAT_CONNECTION_TO_TARGET_LOST", "eUSE_KINEMATIC_TARGET_FOR_SCENE_QUERIES", "eREPORT_TO_FOREIGN_CLIENTS_TRIGGER_NOTIFY", "eREPORT_TO_FOREIGN_CLIENTS_CONTACT_NOTIFY", "eREPORT_TO_FOREIGN_CLIENTS_CONSTRAINT_BREAK_NOTIFY", "eREPORT_TO_FOREIGN_CLIENTS_SCENE_QUERY", "PxRigidBodyExt::setMassAndUpdateInertia", "PxRigidBodyExt::updateMassAndInertia", "eSPATIAL_DATA_STRUCTURE_OVERFLOW", "eCOLLISION_WITH_DYNAMIC_ACTORS", "ePER_PARTICLE_COLLISION_CACHE_HINT", "PxsContext::prepareCMDiscreteUpdateResults", "PxsContext::mergeCMDiscreteUpdateResults", "PxsSolverConstraintPostProcessTask", "PxsSolverConstraintPartitionTask", "PxsSolverCreateFinalizeConstraintsTask", "PxsParticleSystemBatcher::shapeGen", "PxsParticleSystemBatcher::dynamicsCpu", "PxsParticleSystemBatcher::collPrep", "PxsParticleSystemBatcher::collisionCpu", "PxsParticleSystemSim::packetShapesUpdate", "PxsParticleSystemSim::packetShapesFinalization", "PxsParticleSystemSim::dynamicsUpdate", "PxsParticleSystemSim::collisionUpdate", "PxsParticleSystemSim::collisionFinalization", "PxsParticleSystemSim::spatialHashUpdateSectionsTask", "PxsContext::postCCDAdvanceTask", "PxsContext::postCCDDepenetrateTask", "PxsFluidCollision::mergeResults", "PxsFluidDynamics::mergeDensity", "MDampingRateZeroThrottleClutchEngaged", "MDampingRateZeroThrottleClutchDisengaged", "MassAndPreserveNaturalFrequency", "RecipLongitudinalStiffnessPerUnitGravity", "FrictionVsSlipGraphRecipx1Minusx0", "FrictionVsSlipGraphRecipx2Minusx1", "MLongitudinalStiffnessPerUnitGravity", "MCamberStiffnessPerUnitGravity", "PxVehicleClutchAccuracyMode::Enum", "mDampingRateZeroThrottleClutchEngaged", "mDampingRateZeroThrottleClutchDisengaged", "PxVehicleAckermannGeometryData", "mLongitudinalStiffnessPerUnitGravity", "mCamberStiffnessPerUnitGravity", "mRecipLongitudinalStiffnessPerUnitGravity", "mFrictionVsSlipGraphRecipx1Minusx0", "mFrictionVsSlipGraphRecipx2Minusx1", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "N9Enlighten18BakeOutputProbeSetE", "N9Enlighten19IBakeOutputProbeSetE", "N3Geo16IGeoSerialisableE", "N3Geo14IGeoReleasableE", "N3Geo11NonCopyableE", "N9Enlighten11BaseCubeMapE", "N9Enlighten10BaseSystemE", "N9Enlighten17BaseDynamicObjectE", "N9Enlighten16CpuDynamicObjectE", "N9Enlighten18CpuDynamicObjectExE", "N9Enlighten15BaseEnvironmentE", "N9Enlighten14CpuEnvironmentE", "N9Enlighten16CpuEnvironmentExE", "N9Enlighten16EnlightenProfileE", "N9Enlighten12BaseProbeSetE", "N9Enlighten15CpuSystemCommonE", "N9Enlighten9CpuSystemE", "N9Enlighten11CpuSystemExE", "N9Enlighten17BaseUpdateManagerE", "N9Enlighten22CpuUpdateManagerCommonE", "N9Enlighten16CpuUpdateManagerE", "N9Enlighten18CpuUpdateManagerExE", "N9Enlighten14IUpdateManagerE", "N9Enlighten12FlushCommandE", "N9Enlighten7CommandE", "N9Enlighten30WorkerFunctionParameterCommandINS_24SetProbeSetTransformInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_29SetLightBankUpdateCounterInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandIiEE", "N9Enlighten30WorkerFunctionParameterCommandINS_24SetVisibilityTextureInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_21SetVisibilityBitsInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_21UpdateEnvironmentInfoEEE", "N9Enlighten25UpdateLightCommandGenericINS_10InputLightEEE", "N9Enlighten21WorkerFunctionCommandE", "N9Enlighten30WorkerFunctionParameterCommandIN3Geo7GeoGuidEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_10RemoveInfoEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_17BaseDynamicObjectEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_11BaseCubeMapEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_12BaseProbeSetEEE", "N9Enlighten30WorkerFunctionParameterCommandIPNS_10BaseSystemEEE", "N9Enlighten30WorkerFunctionParameterCommandINS_29UpdateManagerWorkerPropertiesEEE", "N9Enlighten13LogDispatcherE", "N3Geo11GeoRefCountE", "N9Enlighten10BaseWorkerE", "N9Enlighten9CpuWorkerE", "N9Enlighten20MultithreadCpuWorkerE", "N9Enlighten26MultithreadCpuWorkerCommonE", "N9Enlighten22MultithreadCpuWorkerExE", "N9Enlighten20IUpdateManagerWorkerE", "N9Enlighten27MultithreadCpuUpdateManagerE", "N9Enlighten29MultithreadCpuUpdateManagerExE", "N9Enlighten20CpuWorkerQuitCommandE", "N9Enlighten27ExtendedLightMethodSelectorE", "N9Enlighten26DefaultLightMethodSelectorE", "N9Enlighten18DefaultThreadGroupE", "N9Enlighten12IThreadGroupE", "N3Geo13AnsiAllocatorE", "N3Geo16GeoMemoryDefaultE", "N3Geo15MemoryAllocatorE", "N3Geo15GeoMemoryStreamE", "N3Geo21GeoBufferedFileStreamE", "N3Geo15GeoDepthCubeMapE", "N3Geo13GeoFileStreamE", "N3Geo14GeoFp16TextureE", "N3Geo11GeoProgressE", "N3Geo14TxtProgressBarE", "N3Geo14GeoRGBXTextureE", "N3Geo10IGeoStreamE", "N3Geo17IGeoProgressProxyE", "N3Geo14GeoV128TextureE", "N3Geo9IffReaderE", "N3Geo9IffWriterE", "NSt8ios_base7failureE", "NSt6locale5facetE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "St11logic_error", "St12length_error", "St12out_of_range", "St13runtime_error", "St14error_category", "St9basic_iosIcSt11char_traitsIcEE", "St9basic_iosIwSt11char_traitsIwEE", "St13basic_istreamIwSt11char_traitsIwEE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "St10ctype_base", "St9time_base", "St12codecvt_base", "St13messages_base", "St10money_base", "N9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE", "N9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE", "St13basic_ostreamIwSt11char_traitsIwEE", "St15basic_stringbufIcSt11char_traitsIcESaIcEE", "St19basic_ostringstreamIcSt11char_traitsIcESaIcEE", "St15basic_streambufIcSt11char_traitsIcEE", "St15basic_streambufIwSt11char_traitsIwEE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St9bad_alloc", "St8bad_cast", "N10__cxxabiv117__class_type_infoE", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "N10__cxxabiv121__vmi_class_type_infoE", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "St5ctypeIcE", "St5ctypeIwE"], "debugstrings": ["unsupported zlib version", "PNG file corrupted by ASCII conversion", "Wrong JPEG library version: library is %d, caller expects %d", "Unsupported color conversion request", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "X-Unity-Version", "Unsupported conversion of vertex formats", "Failed to create a shader variant (starts with '%s'). You probably have precompiled shader asset from an old Unity version.", "formatversion=\"1.0\"", "<sbspresets formatversion=\"1.0\" count=\"1\">\n", "ProceduralInput VisibleIf evaluator error: unknown operator type during to-bool conversion.", "The AssetBundle '%s' can't be loaded because it was not built with the right version or build target.", "iPhoneBundleVersion", "bundleVersion", "Initialize engine version: %s\n", "hasPROVersion", "hasAdvancedVersion", "m_Version", "VersionControl", "Proxy version %d", "Network protocol version %d connected", "Failed to load '%s' because its serialized file version is higher than what this version of Unity supports.", "Invalid serialized file version. File: \"%s\". Expected version: 5.2.1f1. Actual version: %s.", "&gfxversion=", "Failed to create a shader variant in '%s'. You probably have precompiled shader asset from an old Unity version.", "Version:  %s\n", "#version 300 es\n\nconst int max_bone_count = ", "version=\"%s\" ", "version=\"", "version", "The version number of this file format is not supported. ", "Conversion from this format NOT supported", "Log: Library version mismatch\n", "check parameters, all parameters should be > 0 and broadcastPort < 0xFFFF, key, version, subversion < 0xFFFFFFFF", "UnityEngine.Application::get_unityVersion", "UnityEngine.Application::GetBuildUnityVersion", "UnityEngine.Application::GetNumericUnityVersion", "UnityEngine.Application::get_version", "UnityEngine.Caching::GetVersionFromCache", "UnityEngine.Caching::INTERNAL_CALL_IsVersionCached", "UnityEngine.SystemInfo::get_graphicsDeviceVersion", "UnityEngine.AndroidJNI::GetVersion", "Assembly file format version not supported", "Assembly file format version no longer supported", "versionName", "android/os/Build$VERSION", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "m_Version", "#version 300 es\n\nprecision lowp float;\nout vec4 outcol;\nvoid main(void) { outcol = vec4(1.0, 1.0, 1.0, 1.0); }\n", "Wrong version: PhysX version is 0x%08x, tried to create 0x%08x", "Loading cloth fabric failed: mismatching version of cloth fabric stream.", "Wrong version: foundation version is 0x%08x, tried to create 0x%08x", "Obsolete cooked mesh found. Mesh version has been updated, please recook your meshes.", "GCC: (GNU) 4.6 20120106 (prerelease)", "clang version 3.4 (https://bitbucket.org/loganchien/clang c34bb12af3af42f671296cdb978b34b931062d2a) (https://bitbucket.org/loganchien/llvm d09f2eff406d17c86d51db7660bd374cf092e6ed)", "clang version 3.5 ", "GCC: (GNU) 4.4.3", "GCC: (GNU) 4.8"], "localsymbols": [""], "dependencies": ["libc.so", "libm.so", "libmono.so", "liblog.so", "libGLESv2.so", "libstdc++.so", "libdl.so", "libz.so", "libandroid.so", "libEGL.so", "libmain.so"], "elfname": "libunity.so"}