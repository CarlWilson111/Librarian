{"globalvars": [], "importedglobals": ["_ctype_", "__sF"], "importedfunctions": ["modff", "sin", "sprintf", "pthread_create", "strchr", "opendir", "sscanf", "tolower", "close", "pthread_attr_setstacksize", "recv", "sigaction", "qsort", "strcmp", "__stack_chk_fail", "eglGetError", "pthread_join", "remove", "sem_destroy", "pthread_mutexattr_destroy", "wmemmove", "getpid", "flock", "eglGetCurrentContext", "pthread_mutex_init", "sem_init", "ASensorManager_getDefaultSensor", "accept", "wmemchr", "memset", "usleep", "pthread_self", "feof", "fclose", "wctype", "pow", "eglDestroySurface", "__android_log_print", "madvise", "getpagesize", "munmap", "utime", "wctob", "towupper", "__ctype_get_mb_cur_max", "atanf", "truncate", "pthread_cond_destroy", "fopen", "realpath", "eglGetCurrentSurface", "pthread_mutex_unlock", "setjmp", "ANativeWindow_acquire", "strdup", "getuid", "ferror", "exp", "fileno", "pthread_mutex_trylock", "dlopen", "ioctl", "ASensorEventQueue_getEvents", "setsockopt", "fread", "mkdir", "realloc", "memcpy", "towlower", "iswctype", "memchr", "expf", "strcasecmp", "fprintf", "inflateInit2_", "gettid", "select", "send", "eglGetConfigAttrib", "pthread_mutexattr_init", "memalign", "eglMakeCurrent", "time", "strcpy", "lseek64", "vsnprintf", "statfs", "dlerror", "remainder", "fmodf", "eglGetProcAddress", "wcrtomb", "bind", "eglTerminate", "eglCreatePbufferSurface", "getpriority", "strcat", "ASensorEventQueue_setEventRate", "ASensor_getMinDelay", "tan", "pthread_once", "fmod", "pthread_cond_timedwait", "ASensorManager_getSensorList", "atan", "cos", "atoi", "ALooper_prepare", "ANativeWindow_setBuffersGeometry", "wcslen", "pthread_attr_init", "isalpha", "log", "pthread_exit", "sigfillset", "setpriority", "isspace", "fwrite", "ftell", "pthread_rwlock_init", "eglDestroyContext", "strlen", "pthread_mutex_destroy", "mmap", "wmemcpy", "pthread_attr_destroy", "unlink", "write", "ASensor_getVendor", "pthread_condattr_init", "exp2", "modf", "strrchr", "__errno", "strxfrm", "lseek", "pthread_cond_broadcast", "pthread_cond_init", "eglSwapInterval", "powf", "puts", "gettimeofday", "mprotect", "btowc", "stat", "free", "tanf", "nanosleep", "closedir", "strstr", "fseek", "wcsxfrm", "strtold", "pthread_rwlock_unlock", "pthread_rwlock_wrlock", "mbrtowc", "pthread_equal", "strsep", "pthread_attr_setdetachstate", "dl_iterate_phdr", "eglCreateContext", "strncpy", "pthread_setspecific", "eglCreateWindowSurface", "clock_gettime", "strftime", "inet_addr", "getpwuid", "raise", "pthread_condattr_destroy", "readdir", "wcscoll", "wmemset", "rand", "access", "ASensor_getResolution", "read", "eglChooseConfig", "pthread_key_delete", "log10", "calloc", "atan2", "printf", "ANativeWindow_release", "ASensor_getType", "sinf", "strncmp", "sem_wait", "exit", "sqrtf", "sqrt", "syscall", "setlocale", "strerror", "fcntl", "pthread_key_create", "acosf", "strtol", "open", "isalnum", "ASensorManager_destroyEventQueue", "cosf", "asin", "pthread_rwlock_rdlock", "__android_log_vprint", "ASensorEventQueue_disableSensor", "snprintf", "logf", "pthread_mutex_lock", "gethostbyname", "pthread_condattr_setclock", "poll", "fputs", "pthread_cond_signal", "fscanf", "getc", "clearerr", "fflush", "ASensorEventQueue_enableSensor", "memmove", "eglGetDisplay", "rmdir", "ptrace", "connect", "ASensor_getName", "atof", "listen", "inflate", "lstat", "ALooper_forThread", "eglQueryString", "fgets", "malloc", "prctl", "eglQuerySurface", "socket", "sched_yield", "eglInitialize", "gethostbyaddr", "strtof", "__system_property_get", "ANativeWindow_fromSurface", "chmod", "writev", "longjmp", "acos", "fputc", "sem_post", "frexp", "ANativeWindow_getWidth", "eglSwapBuffers", "fstat", "pthread_getspecific", "rename", "ASensorManager_createEventQueue", "atan2f", "vsprintf", "getenv", "ASensorManager_getInstance", "sigemptyset", "ANativeWindow_getHeight", "strtod", "dlsym", "strcoll", "ldexp", "inflateEnd", "dlclose", "wcsftime", "shutdown", "ASensorEventQueue_hasEvents", "memcmp", "pthread_cond_wait", "localtime", "pthread_mutexattr_settype"], "exportedfunctions": ["JNI_OnLoad", "JNI_OnUnload", "UnitySendMessage"], "allstrings": ["TextRendering", "OnTransformParentChanged", "OnTransformChildrenChanged", "gHasChangedDeprecatedSystem", "Cannot set the parent of the GameObject '%s' while it is being destroyed.", "Cannot set the parent of the GameObject '%s' while its new parent '%s' is being destroyed", "Cannot set the parent of the GameObject '%s' while activating or deactivating the parent GameObject '%s'.", "CheckConsistency: Transform child can't be loaded", "CheckConsistency: Transform child has another parent", "CheckConsistency: Transform child is linked multiple times to parent; removed extraneous links from parent", "m_LocalRotation", "m_LocalPosition", "m_LocalScale", "m_Father", "[UNREGISTERED]", "PPtr<Transform>", "m_FileID", "m_PathID", "vector::reserve", "vector::_M_emplace_back_aux", "Internal-ErrorShader.shader", "Internal-Clear.shader", "UnityPerMaterial", "UnityPerDraw", "WARNING: Shader ", "Unsupported: '%s' - Setting to default shader.\n", "ERROR: Shader ", "%s - Has No SubShaders - Setting to default shader.\n", "No valid subshaders in '%s'.shader", "unity_DynamicLightmap", "unity_DynamicDirectionality", "unity_Lightmap", "unity_LightmapInd", "unity_ProbeVolumeSH", "unity_SpecCube0", "unity_SpecCube1", "Trying to clone shader (%s) at runtime.\nAs we unload shader source data after loading it, we cannot create a copy, so error shader will be used instead.", "m_ParsedForm", "platforms", "offsets", "decompressedLengths", "compressedBlob", "m_Dependencies", "m_NonModifiableTextures", "m_ShaderIsBaked", "SerializedShader", "m_PropInfo", "m_SubShaders", "m_Name", "m_CustomEditorName", "m_FallbackName", "m_DisableNoSubshadersMessage", "SerializedProperties", "m_Props", "SerializedProperty", "m_Description", "m_Attributes", "m_Type", "m_Flags", "m_DefValue[0]", "m_DefValue[1]", "m_DefValue[2]", "m_DefValue[3]", "m_DefTexture", "SerializedTextureProperty", "m_DefaultName", "m_TexDim", "SerializedSubShader", "m_Passes", "m_Tags", "m_LOD", "SerializedPass", "m_NameIndices", "m_State", "m_ProgramMask", "progVertex", "progFragment", "progGeometry", "progHull", "progDomain", "m_HasInstancingVariant", "m_HasProceduralInstancingVariant", "m_UseName", "m_TextureName", "SerializedShaderState", "rtBlend%d", "rtSeparateBlend", "srcBlend", "destBlend", "srcBlendAlpha", "destBlendAlpha", "blendOp", "blendOpAlpha", "colMask", "zClip", "zTest", "zWrite", "culling", "offsetFactor", "offsetUnits", "alphaToMask", "stencilOp", "stencilOpFront", "stencilOpBack", "stencilReadMask", "stencilWriteMask", "stencilRef", "fogStart", "fogEnd", "fogColor", "gpuProgramID", "lighting", "SerializedShaderRTBlendState", "SerializedShaderFloatValue", "SerializedStencilOp", "fail", "zFail", "comp", "SerializedShaderVectorValue", "SerializedProgram", "m_SubPrograms", "SerializedSubProgram", "m_BlobIndex", "m_Channels", "m_KeywordIndices", "m_ShaderHardwareTier", "m_GpuProgramType", "m_VectorParams", "m_MatrixParams", "m_TextureParams", "m_BufferParams", "m_ConstantBuffers", "m_ConstantBufferBindings", "m_UAVParams", "m_Samplers", "m_ShaderRequirements", "ParserBindChannels", "m_SourceMap", "ShaderBindChannel", "VectorParameter", "m_NameIndex", "m_Index", "m_ArraySize", "m_Dim", "MatrixParameter", "m_RowCount", "TextureParameter", "m_SamplerIndex", "m_MultiSampled", "BufferBinding", "ConstantBuffer", "m_StructParams", "m_Size", "StructParameter", "m_StructSize", "m_VectorMembers", "m_MatrixMembers", "UAVParameter", "m_OriginalIndex", "SamplerParameter", "bindPoint", "SerializedTagMap", "SerializedShaderDependency", "Desired shader compiler platform %u is not available in shader blob", "PPtr<Shader>", "PPtr<Texture>", "vector::_M_default_append", "UNITY_CLEANED_LOG_FILE", "Unity", "%s (Error: %d)\n\n", "Assertion failed: %s\n\n", "Error: %i ", "%s %s(%sFilename: %s Line: %i)%s", "%s%s:%d\n", " #%02d %s\n", "Opening Console File is not supported on this platform.", "m_Avatar", "m_AvatarSize", "m_TOS", "AvatarConstant", "OnDidDeleteMotion", "OnDidChangeMotionEvents", "Framerate of 0 or less is not allowed", "Can't get curve because ", " is not a valid Transform property.", "Can't use AnimationClip::SetCurve at Runtime on non Legacy AnimationClips", "Can't assign curve because the type does not inherit from Object.", "localRotation", "Can't remove individual animation rotation curve ", " you must remove the entire animation curve with m_LocalRotation.", "Can't assign curve because ", "m_LocalEuler", "localEuler", "Can't remove individual rotation animation curve ", " you must remove the entire animation curve with m_LocalEuler.", "localPosition", "Can't remove individual position animation curve ", " you must remove the entire animation curve with m_LocalPosition.", "localScale", "Can't remove individual scale animation curve ", " you must remove the entire animation curve with m_LocalScale.", "m_UseCompression", "m_Compressed", "m_MuscleClipInfo", "m_AnimationClipSettings", "Animation Clip %s contains negative time keys. This may cause your animation to look wrong, as negative time keys are not supported in compressed animation clips!", "vector::_M_insert_aux", "m_DeltaPose", "m_StartX", "m_StopX", "m_LeftFootStartX", "m_RightFootStartX", "m_AverageSpeed", "m_Clip", "m_StartTime", "m_StopTime", "m_OrientationOffsetY", "m_Level", "m_CycleOffset", "m_AverageAngularSpeed", "m_IndexArray", "m_ValueArrayDelta", "m_ValueArrayReferencePose", "m_Mirror", "m_LoopTime", "m_LoopBlend", "m_LoopBlendOrientation", "m_LoopBlendPositionY", "m_LoopBlendPositionXZ", "m_StartAtOrigin", "m_KeepOriginalOrientation", "m_KeepOriginalPositionY", "m_KeepOriginalPositionXZ", "m_HeightFromFeet", "m_RootX", "m_LookAtPosition", "m_LookAtWeight", "m_GoalArray", "m_LeftHandPose", "m_RightHandPose", "m_DoFArray", "m_TDoFArray", "m_GrabX", "m_Override", "m_CloseOpen", "m_InOut", "m_Grab", "m_StreamedClip", "m_DenseClip", "m_ConstantClip", "curveCount", "m_FrameCount", "m_CurveCount", "m_SampleRate", "m_BeginTime", "m_SampleArray", "m_WeightT", "m_WeightR", "m_HintT", "m_HintWeightT", "m_Start", "m_Stop", "m_Legacy", "m_UseHighQualityCurve", "m_RotationCurves", "m_CompressedRotationCurves", "m_EulerCurves", "m_PositionCurves", "m_ScaleCurves", "m_FloatCurves", "m_PPtrCurves", "m_WrapMode", "m_Bounds", "m_AnimationType", "m_MuscleClip", "m_MuscleClipSize", "m_ClipBindingConstant", "m_HasGenericRootTransform", "m_HasMotionFloatCurves", "m_Events", "QuaternionCurve", "curve", "m_Curve", "m_PreInfinity", "m_PostInfinity", "m_RotationOrder", "inSlope", "outSlope", "weightedMode", "inWeight", "outWeight", "CompressedAnimationCurve", "m_Path", "m_Times", "m_Slopes", "PackedBitVector", "m_NumItems", "m_BitSize", "m_Range", "Vector3Curve", "FloatCurve", "classID", "script", "Type*", "PPtr<MonoScript>", "PPtrKeyframe", "m_Center", "m_Extent", "MotionT.x", "RootT.x", "MotionT.y", "RootT.y", "MotionT.z", "RootT.z", "MotionQ.x", "RootQ.x", "MotionQ.y", "RootQ.y", "MotionQ.z", "RootQ.z", "MotionQ.w", "RootQ.w", "ClipMuscleConstant", "float4", "HumanGoal", "xform", "float3", "ValueDelta", "AnimationClipBindingConstant", "genericBindings", "pptrCurveMapping", "GenericBinding", "typeID", "customType", "isPPtrCurve", "AnimationEvent", "UnityEngine.TextGenerator::get_rectExtents_Injected", "UnityEngine.TextGenerator::get_vertexCount", "UnityEngine.TextGenerator::get_characterCount", "UnityEngine.TextGenerator::get_lineCount", "UnityEngine.TextGenerator::get_fontSizeUsedForBestFit", "UnityEngine.TextGenerator::Internal_Create", "UnityEngine.TextGenerator::Internal_Destroy", "UnityEngine.TextGenerator::Populate_Internal_Injected", "UnityEngine.TextGenerator::GetVerticesArray", "UnityEngine.TextGenerator::GetCharactersArray", "UnityEngine.TextGenerator::GetLinesArray", "UnityEngine.TextGenerator::GetVerticesInternal", "UnityEngine.TextGenerator::GetCharactersInternal", "UnityEngine.TextGenerator::GetLinesInternal", "UnityEngine.GUIText::get_text", "UnityEngine.GUIText::set_text", "UnityEngine.GUIText::get_material", "UnityEngine.GUIText::set_material", "UnityEngine.GUIText::get_font", "UnityEngine.GUIText::set_font", "UnityEngine.GUIText::get_alignment", "UnityEngine.GUIText::set_alignment", "UnityEngine.GUIText::get_anchor", "UnityEngine.GUIText::set_anchor", "UnityEngine.GUIText::get_lineSpacing", "UnityEngine.GUIText::set_lineSpacing", "UnityEngine.GUIText::get_tabSize", "UnityEngine.GUIText::set_tabSize", "UnityEngine.GUIText::get_fontSize", "UnityEngine.GUIText::set_fontSize", "UnityEngine.GUIText::get_fontStyle", "UnityEngine.GUIText::set_fontStyle", "UnityEngine.GUIText::get_richText", "UnityEngine.GUIText::set_richText", "UnityEngine.GUIText::get_color_Injected", "UnityEngine.GUIText::set_color_Injected", "UnityEngine.GUIText::get_pixelOffset_Injected", "UnityEngine.GUIText::set_pixelOffset_Injected", "UnityEngine.TextMesh::get_text", "UnityEngine.TextMesh::set_text", "UnityEngine.TextMesh::get_font", "UnityEngine.TextMesh::set_font", "UnityEngine.TextMesh::get_fontSize", "UnityEngine.TextMesh::set_fontSize", "UnityEngine.TextMesh::get_fontStyle", "UnityEngine.TextMesh::set_fontStyle", "UnityEngine.TextMesh::get_offsetZ", "UnityEngine.TextMesh::set_offsetZ", "UnityEngine.TextMesh::get_alignment", "UnityEngine.TextMesh::set_alignment", "UnityEngine.TextMesh::get_anchor", "UnityEngine.TextMesh::set_anchor", "UnityEngine.TextMesh::get_characterSize", "UnityEngine.TextMesh::set_characterSize", "UnityEngine.TextMesh::get_lineSpacing", "UnityEngine.TextMesh::set_lineSpacing", "UnityEngine.TextMesh::get_tabSize", "UnityEngine.TextMesh::set_tabSize", "UnityEngine.TextMesh::get_richText", "UnityEngine.TextMesh::set_richText", "UnityEngine.TextMesh::get_color_Injected", "UnityEngine.TextMesh::set_color_Injected", "UnityEngine.Font::get_material", "UnityEngine.Font::set_material", "UnityEngine.Font::get_fontNames", "UnityEngine.Font::set_fontNames", "UnityEngine.Font::get_dynamic", "UnityEngine.Font::get_ascent", "UnityEngine.Font::get_fontSize", "UnityEngine.Font::get_characterInfo", "UnityEngine.Font::set_characterInfo", "UnityEngine.Font::get_lineHeight", "UnityEngine.Font::GetDefault", "UnityEngine.Font::HasCharacter", "UnityEngine.Font::GetOSInstalledFontNames", "UnityEngine.Font::Internal_CreateFont", "UnityEngine.Font::Internal_CreateDynamicFont", "UnityEngine.Font::GetCharacterInfo", "UnityEngine.Font::RequestCharactersInTexture", "Cannot unmarshal. No scripting class type for element!", "UnityEngine.TextRenderingModule.dll", "UnityEngine", "UIVertex", "UICharInfo", "UILineInfo", "Unknown font rendering mode.", "Failed to load font from memory", "Unreadeable font name.", "Could not initialize FreeType", "Arial.ttf", "_MainTex", "flipped", "m_AsciiStartOffset", "m_Tracking", "m_CharacterSpacing", "m_CharacterPadding", "m_ConvertCase", "m_CharacterRects", "m_KerningValues", "m_PixelScale", "m_FontData", "m_Ascent", "m_Descent", "m_DefaultStyle", "m_FontNames", "m_FallbackFonts", "m_FontRenderingMode", "m_GridFont", "m_FontCountX", "m_FontCountY", "m_PerCharacterKerning", "m_UseLegacyBoundsCalculation", "m_ShouldRoundAdvanceValue", "Font does not contain font names!", "Arial", "Font.names can only be set for dynamic fonts.", "Failed to update dynamic font (%s) texture; all the needed characters do not fit onto a single texture (max size %i). Try using less text or a smaller font size.", "Font.shader", "FT_Init_FreeType: cannot allocate memory manager", "Couldn't load default font!", "Couldn't load default font material!", "Font.mat", "String too long for TextMesh (length %zu). Cutting off characters.", "Text mesh generation is limited to 64K vertices!", "Font size and style overrides are only supported for dynamic fonts.", "Regular", " Bold Italic", "GUIText", "TextRenderingPrivate", "TextMesh", "m_LineSpacing", "m_DefaultMaterial", "m_FontSize", "m_Texture", "PPtr<Material>", "PPtr<Font>", "m_Text", "m_Anchor", "m_Alignment", "m_PixelOffset", "m_TabSize", "m_Font", "m_Material", "m_FontStyle", "m_Color", "m_PixelCorrect", "m_RichText", "rgba", "m_OffsetZ", "m_CharacterSize", "Helvetica Neue", "Microsoft Sans Serif", "Microsoft YaHei", "Malgun Gothic", "Gulim", "MS Gothic", "Nirmala UI", "LastResort", "/system/fonts", "dfont", "color", "quad", "Only %d materials are allowed per TextMesh.", "The vertices list cannot be null", "The characters list cannot be null", "The lines list cannot be null", "Callback registration failed. Increase kMaxCallback.", "UnityEngine.ImageConversion::EncodeToTGA", "UnityEngine.ImageConversion::EncodeToPNG", "UnityEngine.ImageConversion::EncodeToJPG", "UnityEngine.ImageConversion::EncodeToEXR", "UnityEngine.ImageConversion::LoadImage", "Texture '%s' is not readable, the texture memory can not be accessed from scripts. You can make the texture readable in the Texture Import Settings.", "Loading multipart or DeepImage is not supported yet.\n", "R channel not found\n", "G channel not found\n", "B channel not found\n", "Invalid argument.", "Cannot read file.", "EXRHeader is not initialized.", "ZFP compression is not supported in this build.", "chlist", "dataWindow", "box2i", "displayWindow", "lineOrder", "pixelAspectRatio", "screenWindowCenter", "screenWindowWidth", "Cannot write a file.", "File size is zero.", "Invalid magic number.", "Unsupported version or scanline.", "Unsupported compression type.", "Invalid channels format.", "Unsupported format.", "fread error.", "`chunkCount' attribute is not found in the header.", "1.6.10", "<Unknown 'TextureEncodeFormat' value>", "Unsupported texture format - Texture2D::EncodeTo functions do not support compressed texture formats.", "Unable to retrieve image reference", "Unsupported texture format - Texture2D::EncodeToEXR needs an uncompressed HDR texture format.", "Failed to encode to %s", "tiles", "ZFP compression is not supported.", "Unknown compression type.", "# of channels is zero.", "chunkCount", "vector::_M_range_insert", "basic_string::_S_construct null not valid", "vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", "Read Error", "_UnityFBInput0", "_UnityFBInput1", "_UnityFBInput2", "_UnityFBInput3", "_UnityFBInput4", "_UnityFBInput5", "_UnityFBInput6", "_UnityFBInput7", "Internal-Skinning.compute", "g_mBones", "g_SourceVBO", "g_SourceSkin", "g_MeshVertsOut", "g_VertCount", "Internal-BlendShape.compute", "inOutMeshVertices", "inBlendShapeVertices", "g_FirstVert", "g_Weight", "SetRenderTargets: Cannot set a depth surface as a color render target", "SetRenderTargets: Cannot set a color surface as a depth render target", "NextSubPass: Not inside a renderpass", "NextSubPass: Already at the last subpass", "EndRenderPass: Not inside a renderpass", "Error: Attempting to resolve render surface with no resolve target specified.", "Error: Attempting to resolve a render surface that isn't antialiased.", "This GfxDevice does not support asynchronous readback", "Cannot reload shaders on this platform", "Direct3D 11", "Null", "OpenGL ES 2", "PS Vita", "Xbox One", "Metal", "OpenGL Core", "Direct3D 12", "Vulkan", "Nintendo Switch (NVN)", "Xbox One D3D12", "BeginRenderPass: No attachments specified", "BeginRenderPass: No subpasses specified", "BeginRenderPass: Attachment surface == NULL", "BeginRenderPass: Attachment resolutions must match: (%dx%d) vs (%dx%d) in attachment %d", "BeginRenderPass: Attachment AA sample counts must match", "BeginRenderPass: Cannot use color surface as depth attachment", "BeginRenderPass: Cannot use depth surface as color attachment", "Failed to %s a semaphore (%s)\n", "destroy", "wait on", "post to", "UpdateResource", "Resource ID out of range in %s: %u (max is %u)", "InstancedMeshIntermediateRenderer", "IndirectMeshIntermediateRenderer", "IssuePluginCustomTextureUpdate is not supported by this GfxDevice", "CopyBuffer is not supported by this GfxDevice", "?GpuProgram creation error: shader program type is unrecognised. You might have a precompiled shader asset from an old Unity version.", "unity_RenderingLayer", "unity_RenderingLayerArray", "unity_LODFade", "unity_LODFadeArray", "float2", "unity_SpriteFlipArray", "unity_SpriteRendererColorArray", "unity_SHAr", "unity_SHArArray", "unity_SHAg", "unity_SHAgArray", "unity_SHAb", "unity_SHAbArray", "unity_SHBr", "unity_SHBrArray", "unity_SHBg", "unity_SHBgArray", "unity_SHBb", "unity_SHBbArray", "unity_SHC", "unity_SHCArray", "unity_ProbesOcclusion", "unity_ProbesOcclusionArray", "unity_LightmapST", "unity_LightmapSTArray", "unity_DynamicLightmapST", "unity_DynamicLightmapSTArray", "unity_ObjectToWorldArray", "unity_WorldToObjectArray", "Instancing: Ignore property '%s' because the data type is not supported. Values are undefined.", "Instancing: Unhandled property '%s'. Values are undefined.", "Instancing: Use SpriteColor or SpriteFlip for renderers that are not sprite renderers. Values are undefined.", "Instancing: Property '%s' type mismatched. Values are undefined.", "GL.End requires material.SetPass before!", "unity_BaseInstanceID", "Instancing: CB '%s' has non-struct arrays. Ignoring.", "Instancing: Ignore non-array property '%s' declared in CB '%s'.", "force-gles20", "force-gles30", "force-gles31", "force-gles31aep", "force-gles", "force-vulkan", "gfx-enable-gfx-jobs", "gfx-enable-native-gfx-jobs", "gfx-disable-mt-rendering", "force-gfx-jobs", "force-gfx-direct", "force-gfx-st", "force-gfx-mt", "gfx-jobs-sync", "end-of-frame", "after-script-update", "after-script-late-update", "wait-for-present", "native", "Forcing GfxDevice: %s\n", "Forced GfxDevice '%s' was not built from editor, shaders will not be available\n", "force-gfx-without-build", "#ifdef ", "#endif", "Array.", "struct parameter '%s' has nested arrays", "array index of struct parameter '%s' cannot be recognized", "unity_ObjectToWorld", "unity_WorldToObject", "unity_MatrixV", "unity_MatrixInvV", "glstate_matrix_projection", "unity_MatrixVP", "_Object2World", "_World2Object", "unity_LightColor0", "unity_LightColor1", "unity_LightColor2", "unity_LightColor3", "unity_LightColor4", "unity_LightColor5", "unity_LightColor6", "unity_LightColor7", "unity_LightPosition0", "unity_LightPosition1", "unity_LightPosition2", "unity_LightPosition3", "unity_LightPosition4", "unity_LightPosition5", "unity_LightPosition6", "unity_LightPosition7", "unity_SpotDirection0", "unity_SpotDirection1", "unity_SpotDirection2", "unity_SpotDirection3", "unity_SpotDirection4", "unity_SpotDirection5", "unity_SpotDirection6", "unity_SpotDirection7", "unity_LightAtten0", "unity_LightAtten1", "unity_LightAtten2", "unity_LightAtten3", "unity_LightAtten4", "unity_LightAtten5", "unity_LightAtten6", "unity_LightAtten7", "unity_VertexLightParams", "glstate_lightmodel_ambient", "_WorldSpaceLightPos0", "_WorldSpaceCameraPos", "unity_WorldTransformParams", "_ProjectionParams", "_ScreenParams", "_ZBufferParams", "unity_OrthoParams", "_LightPositionRange", "_LightProjectionParams", "unity_Ambient", "unity_LightmapFade", "unity_OcclusionMaskSelector", "_ShadowOffsets0", "_ShadowOffsets1", "_ShadowOffsets2", "_ShadowOffsets3", "_LightShadowData", "unity_LightShadowBias", "_LightSplitsNear", "_LightSplitsFar", "unity_ShadowSplitSpheres0", "unity_ShadowSplitSpheres1", "unity_ShadowSplitSpheres2", "unity_ShadowSplitSpheres3", "unity_ShadowSplitSqRadii", "unity_ShadowCascadeScales", "unity_ShadowFadeCenterAndType", "unity_ShadowColor", "_Time", "_LastTime", "_SinTime", "_CosTime", "_PiTime", "unity_DeltaTime", "unity_4LightPosX0", "unity_4LightPosY0", "unity_4LightPosZ0", "unity_4LightAtten0", "unity_FogStart", "unity_FogEnd", "unity_FogDensity", "unity_FogColor", "unity_FogParams", "unity_CameraWorldClipPlanes0", "unity_CameraWorldClipPlanes1", "unity_CameraWorldClipPlanes2", "unity_CameraWorldClipPlanes3", "unity_CameraWorldClipPlanes4", "unity_CameraWorldClipPlanes5", "unity_AmbientSky", "unity_AmbientEquator", "unity_AmbientGround", "unity_IndirectSpecColor", "unity_SpecCube0_HDR", "unity_SpecCube0_BoxMax", "unity_SpecCube0_BoxMin", "unity_SpecCube0_ProbePosition", "unity_SpecCube1_HDR", "unity_SpecCube1_BoxMax", "unity_SpecCube1_BoxMin", "unity_SpecCube1_ProbePosition", "unity_BillboardNormal", "unity_BillboardTangent", "unity_BillboardCameraParams", "unity_ProbeVolumeMin", "unity_ProbeVolumeSizeInv", "unity_ProbeVolumeParams", "unity_StereoEyeIndex", "unity_LightIndicesOffsetAndCount", "unity_4LightIndices0", "unity_4LightIndices1", "unity_ReflectionProbeIndicesOffsetAndCount", "unity_MotionVectorsParams", "unity_HalfStereoSeparation", "glstate_light0_diffuse", "glstate_light1_diffuse", "glstate_light2_diffuse", "glstate_light3_diffuse", "glstate_light0_position", "glstate_light1_position", "glstate_light2_position", "glstate_light3_position", "glstate_light0_attenuation", "glstate_light1_attenuation", "glstate_light2_attenuation", "glstate_light3_attenuation", "glstate_light0_spotDirection", "glstate_light1_spotDirection", "glstate_light2_spotDirection", "glstate_light3_spotDirection", "unity_LightColor", "unity_LightPosition", "unity_SpotDirection", "unity_LightAtten", "_ShadowOffsets", "unity_ShadowSplitSpheres", "unity_CameraWorldClipPlanes", "unity_WorldToCamera", "unity_CameraToWorld", "unity_WorldToShadow0", "unity_WorldToShadow1", "unity_WorldToShadow2", "unity_WorldToShadow3", "unity_LightmapMatrix", "unity_Projector", "unity_ProjectorDistance", "unity_ProjectorClip", "unity_GUIClipTextureMatrix", "unity_WorldToLight", "unity_CameraProjection", "unity_CameraInvProjection", "unity_ProbeVolumeWorldToObject", "unity_MatrixPreviousM", "unity_MatrixPreviousMI", "unity_World2Shadow", "unity_World2Shadow0", "unity_World2Shadow1", "unity_World2Shadow2", "unity_World2Shadow3", "_LightMatrix0", "unity_WorldToShadow", "white", "black", "gray", "grey", "linearGray", "linearGrey", "grayscaleRamp", "greyscaleRamp", "bump", "blackCube", "lightmap", "unity_ShadowMask", "unity_DynamicNormal", "_DitherMaskLOD", "_DitherMaskLOD2D", "unity_RandomRotation16", "unity_NHxRoughness", "<noninit>", "Compressing this format (%d) is not supported on this platform.", "Decompressing this format (%d) is not supported on this platform.", "GetKey", "cyan", "darkblue", "lightblue", "purple", "yellow", "lime", "fuchsia", "silver", "orange", "brown", "maroon", "green", "olive", "navy", "teal", "aqua", "magenta", "transparent", "Clamp count to %d", "destStart is out of range. Ignoring.", "key1", "key2", "key3", "key4", "key5", "key6", "key7", "ctime0", "ctime1", "ctime2", "ctime3", "ctime4", "ctime5", "ctime6", "ctime7", "atime0", "atime1", "atime2", "atime3", "atime4", "atime5", "atime6", "atime7", "m_Mode", "m_NumColorKeys", "m_NumAlphaKeys", "OnDidModifyMeshBounds", "OnDidModifyMesh", "MeshIDGenerator", "Invalid stream index in SetVertexData", "Array in SetVertexData() has wrong element size. Got %zu but expected %d.", "Invalid destOffset in SetVertexDataRange()", "Invalid count in SetVertexDataRange()", "Invalid stream index in GetVertexData", "Array in GetVertexData() has wrong element size. Got %zu but expected %d.", "Array in GetVertexData() has wrong size. Got %zu but expected %zu.", "Mesh.vertices is too small. The supplied vertex array has less vertices than are referenced by the triangles array.", "Failed getting triangles. Submesh index is out of bounds.", "Failed getting triangles. Submesh topology is lines or points.", "Failed getting indices. Submesh index is out of bounds.", "failed setting triangles. triangles is NULL", "Failed setting triangles. Submesh index is out of bounds.", "Failed setting triangles. The number of supplied triangle indices must be a multiple of 3.", "Failed setting triangles. Some indices are referencing out of bounds vertices. IndexCount: %d, VertexCount: %d", "Instantiating mesh due to calling MeshFilter.mesh during edit mode. This will leak meshes. Please use MeshFilter.sharedMesh instead.", " Instance", "Mesh '%s': abnormal mesh bounds - most likely it has some invalid vertices (+/-inifinity or NANs) due to errors exporting.\nMesh bounds min=(%.2f, %.2f, %.2f), max=(%.2f, %.2f, %.2f). Please make sure the mesh is exported without any errors.", "Mesh.boneWeights is out of bounds. The supplied array needs to be the same size as the Mesh.vertices array.", "Bone index is not within the number of bones.", "Failed loading async data for mesh", "Invalid uvSetIndex %d for GetMeshMetric on %s", "normals", "tangents", "blend weights", "blend indices", "OnMeshFilterChanged", "m_LodMesh", "m_Mesh", "Unknown VertexDataType", "Format does not match a VertexDataType", "Invalid number of vertex streams", "Channel was already defined in another vertex stream: %s", "Vertex layout requires Float3 or Float4 positions", "Mesh.%s is out of bounds. The supplied array needs to be the same size as the Mesh.vertices array.", "m_SubMeshes", "m_Shapes", "m_BindPose", "m_BoneNameHashes", "m_RootBoneNameHash", "m_MeshCompression", "m_IsReadable", "m_KeepVertices", "m_KeepIndices", "m_IndexFormat", "m_IndexBuffer", "m_Skin", "m_Vertices", "m_UV", "m_UV1", "m_Tangents", "m_Colors", "m_VertexData", "Serialized bone weights have unexpected size", "m_CompressedMesh", "m_LocalAABB", "m_MeshUsageFlags", "m_MeshMetrics[0]", "m_MeshMetrics[1]", "m_StreamData", "firstByte", "baseVertex", "firstVertex", "localAABB", "isTriStrip", "BlendShapeData", "fullWeights", "BlendShapeVertex", "MeshBlendShape", "hasNormals", "hasTangents", "MeshBlendShapeChannel", "nameHash", "frameIndex", "BoneWeights4", "weight[0]", "weight[1]", "weight[2]", "weight[3]", "boneIndex[0]", "boneIndex[1]", "boneIndex[2]", "boneIndex[3]", "m_Weights", "m_NormalSigns", "m_TangentSigns", "m_FloatColors", "m_BoneIndices", "m_Triangles", "m_UVInfo", "m_BakedConvexCollisionMesh", "m_BakedTriangleCollisionMesh", "PPtr<Mesh>", "Mesh component setting not implemented", "Blend shape index out of range.", "Blend shape frame index out of range.", "GetBlendShapeFrameVertices() output arrays size must match mesh vertex count", "AddBlendShape() input arrays size must match mesh vertex count", "Blend shape name already exists", "Blend shape frame weight must be greather than previous frame weight", "Not allowed to access %s on mesh '%s' (isReadable is false; Read/Write must be enabled in import settings)", "subMeshCount can't be set to negative value", "Invalid buffer index - got %i, should be [0,%i)", "MeshVertexFormatManager", "blendShape.", "m_BlendShapeWeights.Array.data[", "WeldVertices expects float3 positions as first channel", "Unsupported channel type in WeldVertices", "m_Sprite", "Combine mesh instance %zu is null.", "Cannot combine into a mesh that is also in the CombineInstances input: %s", "Submesh index %d is invalid for mesh %s.", "Cannot combine mesh that does not allow access: %s", "Cannot combine mesh: %s", "cachedPose should be cache line aligned", "Skin matrices must be 16-byte aligned", "Bone weights do not match bones.", "Failed to create compute skin pose buffer!", "Failed to create GPU skin pose buffer!", "m_Animation", "m_DisableAnimationWhenOffscreen", "Array index (%d) is out of bounds (size=%d)", "Bones do not match bindpose.", "OnSetPolygon2D", "OnSpriteTilingPropertyChange", "_AlphaTex", "_MainTex_TexelSize", "_EnableExternalAlpha", "_MaskInteractionEnabled", "ETC1_EXTERNAL_ALPHA", "%s has more than 1 material attached to its SpriteRenderer. Use Debug Inspector to reset the SpriteRenderer's material list.", "Sprite Tiling might not appear correctly because the Sprite used is not generated with Full Rect. To fix this, change the Mesh Type in the Sprite's import setting to Full Rect", "Attempt to insert 9Slice RenderData twice", "m_VertexCount", "m_CurrentChannels", "m_DataSize", "Index out of range in RemapVertexDataChannels()", "Float16", "UNorm8", "SNorm8", "UNorm16", "SNorm16", "UInt8", "SInt8", "UInt16", "SInt16", "UInt32", "SInt32", "Unsupported conversion of vertex data (format %d to %d, dimensions %d to %d)", "m_AdditionalVertexStreams", "m_Quality", "m_UpdateWhenOffscreen", "m_SkinnedMotionVectors", "m_Bones", "m_BlendShapeWeights", "m_RootBone", "m_AABB", "m_DirtyAABB", "m_FlipX", "m_FlipY", "m_DrawMode", "m_AdaptiveModeThreshold", "m_SpriteTileMode", "m_WasSpriteAssigned", "m_MaskInteraction", "m_SpriteSortPoint", "PPtr<Sprite>", "ChannelInfo", "Trying to get an unsupported stereo matrix.", "Trying to set an unsupported stereo matrix.", "Invalid param to SetStereoMatrix()", "icosahedron.fbx", "icosphere.fbx", "pyramid.fbx", "Deferred BasePassDepth", "_LightTexture0", "Hidden/Internal-CombineDepthNormals", "Camera DepthNormals", "_CameraDepthNormalsTexture", "_LastCameraDepthNormalsTexture", "_ShadowMapTexture", "_HasLastPositionData", "_ForceNoMotion", "_PreviousM", "_PreviousVP", "_NonJitteredVP", "_StereoPreviousVP", "_StereoNonJitteredVP", "_MotionVectorDepthBias", "_CameraMotionVectorsTexture", "_LightPos", "_LightDir", "_LightBuffer", "_LightAsQuad", "_StencilNonBackground", "_CameraDepthTexture", "_CameraNormalsTexture", "_LastCameraDepthTexture", "_LastCameraNormalsTexture", "_CameraReflectionsTexture", "_CameraGBufferTexture0", "_CameraGBufferTexture1", "_CameraGBufferTexture2", "_CameraGBufferTexture3", "_CameraGBufferTexture4", "_SrcBlend", "_DstBlend", "Deferred Reflections", "Cube.fbx", "Deferred GBuffer", "Fake Light Buffer", "Deferred NormalsSpec", "Error assigning %s texture to %s texture property '%s': Dimensions must match", "texarray", "cubearray", "Invalid", "_LightTextureB0", "RenderType", "Unknown camera stack stereo target type: %d.", "Failed to create temporary builtin render texture (type %i size %ix%i color format %i depth format %i)", "unity_Lightmap_HDR", "unity_DynamicLightmap_HDR", "_HaloFalloff", "Soft.psd", "m_Ambient", "m_AmbientLight", "m_AmbientSkyboxAmount", "m_AmbientIntensity", "_ODSWorldTexture", "Screenspace cascaded shadow map support is disabled in graphics settings", "Screenspace ShadowMap", "ShadowmapFilter", "PCF_SOFT_FORCE_INV_PROJECTION_IN_PS", "PCF_SOFT", "HardShadow_FORCE_INV_PROJECTION_IN_PS", "Shadowmap", "Spotlight cookies must be square (width and height must be equal)", "m_Fog", "m_FogColor", "m_FogMode", "m_FogDensity", "m_LinearFogStart", "m_LinearFogEnd", "m_AmbientSkyColor", "m_AmbientEquatorColor", "m_AmbientGroundColor", "m_AmbientMode", "m_SubtractiveShadowColor", "m_SkyboxMaterial", "m_HaloStrength", "m_FlareStrength", "m_FlareFadeSpeed", "m_HaloTexture", "m_SpotCookie", "m_DefaultReflectionMode", "m_DefaultReflectionResolution", "m_ReflectionBounces", "m_ReflectionIntensity", "m_CustomReflection", "m_AmbientProbe", "m_GeneratedSkyboxReflection", "m_Sun", "m_IndirectSpecularColor", "m_UseRadianceAmbientProbe", "PPtr<Texture2D>", "PPtr<Cubemap>", "SphericalHarmonicsL2", "sh[ 0]", "sh[ 1]", "sh[ 2]", "sh[ 3]", "sh[ 4]", "sh[ 5]", "sh[ 6]", "sh[ 7]", "sh[ 8]", "sh[ 9]", "sh[10]", "sh[11]", "sh[12]", "sh[13]", "sh[14]", "sh[15]", "sh[16]", "sh[17]", "sh[18]", "sh[19]", "sh[20]", "sh[21]", "sh[22]", "sh[23]", "sh[24]", "sh[25]", "sh[26]", "PPtr<Light>", "m_MixedShadowColor", "_MainTex_ST", "_MainTex_HDR", "_CameraDepthTexture_ST", "_CameraDepthNormalsTexture_ST", "_LastCameraDepthTexture_ST", "_LastCameraDepthNormalsTexture_ST", "Hidden/BlitCopy", "Hidden/VR/BlitTexArraySlice", "Hidden/BlitCopyDepth", "Hidden/ConvertTexture", "Hidden/BlitToDepth", "Hidden/BlitToDepth_MSAA", "Hidden/VR/BlitTexArraySliceToDepth", "Hidden/VR/BlitTexArraySliceToDepth_MSAA", "ImageEffects Temp", "Unable to blit. Shader is not yet initialized!", "Invalid pass number (%d) for Graphics.Blit (Material \"%s\" with %d passes)", "_BlurOffsets", "_ArraySliceIndex", "OcclusionArea", "m_IsViewVolume", "s_HierarchySystemHaloTransformReplacement%d", "LightManager::kSystemTRS", "Invalid SceneHandle", "RenderNodeQueue", "HaloLayer", "OcclusionPortal", "m_BakedCoefficients", "m_BakedLightOcclusion", "LightProbeData", "m_Tetrahedralization", "m_ProbeSets", "m_NonTetrahedralizedProbeSetIndexMap", "ProbeSetTetrahedralization", "m_Tetrahedra", "m_HullRays", "Tetrahedron", "indices[0]", "indices[1]", "indices[2]", "indices[3]", "neighbors[0]", "neighbors[1]", "neighbors[2]", "neighbors[3]", "Matrix3x4f", "ProbeSetIndex", "m_Hash", "m_Offset", "Hash128", "bytes[0]", "bytes[1]", "bytes[2]", "bytes[3]", "bytes[4]", "bytes[5]", "bytes[6]", "bytes[7]", "bytes[8]", "bytes[9]", "bytes[10]", "bytes[11]", "bytes[12]", "bytes[13]", "bytes[14]", "bytes[15]", "LightProbeOcclusion", "m_ProbeOcclusionLightIndex", "m_Occlusion", "m_OcclusionMaskChannel", "m_Open", "Unsupported light type", "Reflection Probe importance should be positive. The new value will be 0.", "HDR Render Texture not supported, disabling HDR on reflection probe.", "Attempting to update a disabled Reflection Probe. Action will be ignored.", "Unknown probe mode: %d", "The minimum cubemap resolution is %d. The reflection probe '%s' will use this resolution instead when baking the cubemap.", "The maximum cubemap resolution is %d. The reflection probe '%s' will use this resolution instead when baking the cubemap.", "Reflection Probes Camera", "Reflection Probe '%s' cannot schedule a refresh at this point. Recursive rendering has been detected.", "field of view", "m_FocalLength", "OcclusionCullingSettings", "m_Deferred", "m_DeferredReflections", "m_ScreenSpaceShadows", "m_LegacyDeferred", "m_DepthNormals", "m_MotionVectors", "m_LightHalo", "m_LensFlare", "m_AlwaysIncludedShaders", "m_PreloadedShaders", "m_SpritesDefaultMaterial", "m_CustomRenderPipeline", "m_TransparencySortMode", "m_TransparencySortAxis", "m_TierSettings_Tier1", "m_TierSettings_Tier2", "m_TierSettings_Tier3", "m_ShaderDefinesPerShaderCompiler", "m_LightsUseLinearIntensity", "m_LightsUseColorTemperature", "BuiltinShaderSettings", "m_Shader", "PPtr<ShaderVariantCollection>", "PPtr<MonoBehaviour>", "TierGraphicsSettings", "hdrMode", "realtimeGICPUUsage", "useCascadedShadowMaps", "prefer32BitShadowMaps", "enableLPPV", "useHDR", "PlatformShaderDefines", "shaderPlatform", "defines_Tier1", "defines_Tier2", "defines_Tier3", "fixed_bitset", "m_SceneGUID", "m_OcclusionCullingData", "m_StaticRenderers", "m_Portals", "data[0]", "data[1]", "data[2]", "data[3]", "PPtr<OcclusionCullingData>", "PPtr<Renderer>", "PPtr<OcclusionPortal>", "m_PVSData", "Occlusion culling data is out of date. Please rebake", "m_RefreshMode", "m_TimeSlicingMode", "m_Resolution", "m_UpdateFrequency", "m_BoxSize", "m_BoxOffset", "m_NearClip", "m_FarClip", "m_ShadowDistance", "m_ClearFlags", "m_BackGroundColor", "m_CullingMask", "m_IntensityMultiplier", "m_BlendDistance", "m_HDR", "m_BoxProjection", "m_RenderDynamicObjects", "m_UseOcclusionCulling", "m_Importance", "m_CustomBakedTexture", "m_BakedTexture", "BitField", "m_Bits", "_Reflection", "is ortho graphic", "Recursive culling with the same camera is not possible for camera with name '%s'.", "Motion vectors require depth texture for camera with name '%s'. Adding this flag to depthTextureMode.", "Unable to render to cubemap for camera with name '%s'. Make sure it's marked as 'Readable'.", "Unsupported texture format while rendering to cubemap for camera with name '%s'. Needs to be RGBA32, ARGB32, RGB24, RGBAFloat or RGBAHalf.", "Render texture must be a cubemap for camera with name '%s'", "A valid cubemap texture or render texture must be provided for camera with name '%s'.", "Error while rendering to cubemap for camera with name '%s'. Failed to get temporary render texture.", "Camera DepthTexture", "Camera DepthNormalsTexture", "Hidden/Internal-ODSWorldTexture", "Unable to find ODSWorldTexture shader", "Camera ODSWorldTexture", "Attempting to render from camera '%s' that is currently being used to render. Create a copy of the camera (Camera.CopyFrom) if you wish to do this.", "After executing OnPreRender callback, Camera '%s' is no longer valid to use for rendering.", "Attempting to render from camera '%s' that is current being used for rendering. Create a copy of the camera (Camera.CopyFrom) if you wish to do this.", "After executing OnPreRender callback, camera '%s' is no longer valid to use for rendering.", "Can't set custom eye projection matrix when not in multipass mode", "Screen position out of view frustum (screen pos %f, %f) (Camera rect %d %d %d %d)", "Screen position out of view frustum (screen pos %f, %f, %f) (Camera rect %d %d %d %d)", "Cannot set field of view on camera with name '%s' while VR is enabled.", "MSAA is requested by the camera but not enabled in quality settings. This camera will render without MSAA buffers. If you want MSAA enable it in the quality settings.", "Deferred and MultisampleAntiAliasing is not supported. This camera will render without MSAA buffers. Disable Deferred if you want to use MSAA.", "HDR RenderTexture format is not supported on this platform. This camera will render without HDR buffers.", "HDR is requested on a render texture with the 'bind multisampled' flag set, but the render texture format is not an HDR format. The results will be undefined.", "The camera's render texture was created with the 'bind multisampled' flag, but MSAA is disabled by either the camera or the quality settings. The results will be undefined.", "Releasing a render texture which is being used as a camera target (via Camera.SetTargetBuffers) for camera with name '%s'.", "Releasing render texture that is set as Camera.targetTexture!", "Invalid color buffer count for SetTargetBuffers", "You're trying to mix color buffers from RenderTexture and from screen.", "You're trying to mix color and depth buffers from RenderTexture and from screen.", "Camera.SetTargetBuffers can only accept RenderBuffers with same size.", "Cubemap must not be null", "Camera to copy from must not be null", "_Texel", "_TexA", "_TexB", "Hidden/CubeBlend", "Hidden/CubeCopy", "Hidden/CubeBlur", "m_Color.r", "m_Color.g", "m_Color.b", "m_Color.a", "m_CookieSize", "m_DrawHalo", "m_Intensity", "m_Shadows.m_Strength", "m_Shadows.m_Bias", "m_Shadows.m_NormalBias", "m_Shadows.m_NearPlane", "m_SpotAngle", "m_ColorTemperature", "m_projectionMatrixMode", "m_SensorSize", "m_LensShift", "m_GateFitMode", "m_NormalizedViewPortRect", "near clip plane", "far clip plane", "orthographic size", "m_Depth", "m_RenderingPath", "m_TargetTexture", "m_TargetDisplay", "m_TargetEye", "m_AllowMSAA", "m_AllowDynamicResolution", "m_ForceIntoRT", "m_OcclusionCulling", "m_StereoConvergence", "m_StereoSeparation", "PPtr<RenderTexture>", "m_Scenes", "OcclusionScene", "indexRenderers", "sizeRenderers", "indexPortals", "sizePortals", "s_HierarchySystemFlareTransformReplacement%d", "Unable to add Renderer to the Scene after Culling.\nPossible cause: A Camera callback, such as OnPreRender, called Graphics.DrawMesh.\nSolution: If this is the cause, move the callback to earlier in the frame, to in OnPreCull, for example.", "m_IndirectIntensity", "m_BounceIntensity", "m_ColorFilter", "null CommandBuffer passed to Light.AddCommandBuffer", "LPPV_CombinedSHCoefficients", "LPPV_RealtimeSHCoefficients", "Lightmap index must be less than %d", "FlareLayer", "LightProbeProxyVolume", "vector::_M_fill_insert", "m_Flare", "m_Brightness", "m_FadeSpeed", "m_IgnoreLayers", "m_Directional", "PPtr<Flare>", "m_FlareTexture", "m_TextureLayout", "m_Elements", "m_UseFog", "FlareElement", "m_ImageIndex", "m_Position", "m_UseLightColor", "m_Rotate", "m_Zoom", "m_Fade", "m_Shadows", "m_Cookie", "m_BakingOutput", "m_ActuallyLightmapped", "m_RenderMode", "m_Lightmapping", "m_LightShadowCasterMode", "m_AreaSize", "m_UseColorTemperature", "ShadowSettings", "m_CustomResolution", "LightBakingOutput", "probeOcclusionLightIndex", "occlusionMaskChannel", "lightmapBakeMode", "isBaked", "lightmapBakeMask", "LightmapBakeMode", "lightmapBakeType", "mixedLightingMode", "m_BoundingBoxMode", "m_ResolutionX", "m_ResolutionY", "m_ResolutionZ", "m_ResolutionProbesPerUnit", "m_BoundingBoxSize", "m_BoundingBoxOrigin", "m_ResolutionMode", "m_ProbePositionMode", "m_QualityMode", "ReflectionProbeAnchorManager::kHierarchyChangeSystem", "m_IsOrthoGraphic", "m_Orthographic", "m_OrthoGraphicSize", "m_OrthographicSize", "m_NearClipPlane", "m_FarClipPlane", "m_FieldOfView", "m_AspectRatio", "m_CustomSkybox", "./Runtime/GfxDevice/vulkan/ComputeProgramVK.cpp", "Vulkan error", "Toggling SRGBWrite is not supported while inside a Renderpass!", "Attempting to draw with missing bindings", "Attempting to draw with missing UAV bindings", "Attempting to draw without an active shader program?", "Can't allocate buffers from graphics jobs", "Can't initialize buffers from graphics jobs", "Can't delete buffers from graphics jobs", "Shader requires a compute buffer to be bound but none provided, skipping draw.", "Compute dispatch: missing texture ID %d", "Compute dispatch: missing sampler", "Compute dispatch: missing input compute buffer ID %d", "Compute dispatch: missing UAV ID %d", "Vulkan: could not create a query pool [%d]\n", "hlslcc_fbinput", "./Runtime/GfxDevice/vulkan/GpuProgramsVK.cpp", "vkCreateDebugReportCallbackEXT", "vkCreateDebugReportCallbackEXT not available!", "vkDestroyDebugReportCallbackEXT", "Missing Vulkan framebuffer attachment image?", "Missing Vulkan framebuffer attachment resolve image?", "./Runtime/GfxDevice/vulkan/VKImage.cpp", "_mainview", "_gammaview", "_gamma_view", "_storage_view", "ERROR: ", "PERFORMANCE WARNING: ", "INFO: ", "DEBUG: ", "Vulkan validation error", "VULKAN DEBUG: %s [%s, %d]: %s\n", "Don't call SetShadersMainThread on threadable device! Use GraphicsHelper instead", "vulkan: CopyContextDataFrom call is invalid on core device.", "Vulkan: could not create a pipeline object [%d]\n", "X_counterBuf", "Vulkan PSO: No pipeline cache data available, skipping save to disk size[%lld]\n", "Vulkan PSO: Inconsistent pipeline cache header size[%lld], newDataSize[%lld]\n", "Vulkan PSO: Invalid vulkan pipeline cache header, skipping save to disk\n", "Vulkan PSO: data extracted [first call size=%d, new size=%d, old size=%d, incomplete=%d]\n", "Vulkan PSO: Failed to open pipeline cache data file for writing path[%s]\n", "Vulkan PSO: Saved size[%d] path[%s] success=%d headerChanged=%d sizeChanged=%d\n", "Vulkan PSO: Pipeline cache has not changed skipping save handle[%x]\n", "Vulkan PSO: cache data not found [path=%s]\n", "Vulkan PSO: Failed to read from cache data file [path=%s]\n", "Vulkan PSO: Invalid or outdated unity cache header [path=%s]\n", "Vulkan PSO: Failed to read header from cache data file [path=%s]\n", "Vulkan PSO: Incompatible header found [Size=%lld] [Version=%d] [Vendor=%x] [Device=%x]\n", "Vulkan PSO: Failed to read cache data [path=%s]\n", "Vulkan PSO: Cache data successfully loaded [size=%d,path=%s]\n", "VK_EXT_debug_report", "InitializeOrResetSwapChain %dx%d samples=%d\n", "Unknown driver detected - Vendor[%s] DriverVulkanVersion[%d.%d.%d] DriverVersion[%d] ", "Incompatible driver detected - Vendor[%s] DriverVulkanVersion[%d.%d.%d] RequestedVulkanVersion[%d.%d.%d] DriverVersion[%d] ", "./Runtime/GfxDevice/vulkan/VKContext.cpp", "force-vulkan-layers", "VK_LAYER_LUNARG_standard_validation", "VK_LAYER_GOOGLE_threading", "VK_LAYER_LUNARG_parameter_validation", "VK_LAYER_LUNARG_object_tracker", "VK_LAYER_LUNARG_core_validation", "VK_LAYER_LUNARG_device_limits", "VK_LAYER_LUNARG_image", "VK_LAYER_LUNARG_swapchain", "VK_LAYER_GOOGLE_unique_objects", "[Vulkan init] layer enabled: %s\n", "VK_KHR_surface", "VK_KHR_display", "VK_KHR_android_surface", "[Vulkan init] extensions: count=%d\n", "[Vulkan init] extensions: name=%s, enabled=%d\n", "VK_KHR_swapchain", "VK_KHR_sampler_mirror_clamp_to_edge", "VK_KHR_maintenance1", "VK_KHR_get_memory_requirements2", "VK_KHR_dedicated_allocation", "VK_KHR_image_format_list", "UnityEngine.BillboardAsset::Internal_Create", "UnityEngine.BillboardAsset::get_width", "UnityEngine.BillboardAsset::set_width", "UnityEngine.BillboardAsset::get_height", "UnityEngine.BillboardAsset::set_height", "UnityEngine.BillboardAsset::get_bottom", "UnityEngine.BillboardAsset::set_bottom", "UnityEngine.BillboardAsset::get_imageCount", "UnityEngine.BillboardAsset::get_vertexCount", "UnityEngine.BillboardAsset::get_indexCount", "UnityEngine.BillboardAsset::get_material", "UnityEngine.BillboardAsset::set_material", "UnityEngine.BillboardAsset::GetImageTexCoords", "UnityEngine.BillboardAsset::GetImageTexCoordsInternal", "UnityEngine.BillboardAsset::SetImageTexCoords", "UnityEngine.BillboardAsset::SetImageTexCoordsInternalList", "UnityEngine.BillboardAsset::GetVertices", "UnityEngine.BillboardAsset::GetVerticesInternal", "UnityEngine.BillboardAsset::SetVertices", "UnityEngine.BillboardAsset::SetVerticesInternalList", "UnityEngine.BillboardAsset::GetIndices", "UnityEngine.BillboardAsset::GetIndicesInternal", "UnityEngine.BillboardAsset::SetIndices", "UnityEngine.BillboardAsset::SetIndicesInternalList", "UnityEngine.BillboardAsset::MakeMaterialProperties", "UnityEngine.BillboardRenderer::get_billboard", "UnityEngine.BillboardRenderer::set_billboard", "UnityEngine.Cache::Cache_IsValid", "UnityEngine.Cache::Cache_IsReady", "UnityEngine.Cache::Cache_IsReadonly", "UnityEngine.Cache::Cache_GetPath", "UnityEngine.Cache::Cache_GetIndex", "UnityEngine.Cache::Cache_GetSpaceFree", "UnityEngine.Cache::Cache_GetMaximumDiskSpaceAvailable", "UnityEngine.Cache::Cache_SetMaximumDiskSpaceAvailable", "UnityEngine.Cache::Cache_GetCachingDiskSpaceUsed", "UnityEngine.Cache::Cache_GetExpirationDelay", "UnityEngine.Cache::Cache_SetExpirationDelay", "UnityEngine.Cache::Cache_ClearCache", "UnityEngine.Cache::Cache_ClearCache_Expiration", "camera", "dest", "UnityEngine.RendererExtensions::UpdateGIMaterialsForRenderer", "UnityEngine.TrailRenderer::get_time", "UnityEngine.TrailRenderer::set_time", "UnityEngine.TrailRenderer::get_startWidth", "UnityEngine.TrailRenderer::set_startWidth", "UnityEngine.TrailRenderer::get_endWidth", "UnityEngine.TrailRenderer::set_endWidth", "UnityEngine.TrailRenderer::get_widthMultiplier", "UnityEngine.TrailRenderer::set_widthMultiplier", "UnityEngine.TrailRenderer::get_autodestruct", "UnityEngine.TrailRenderer::set_autodestruct", "UnityEngine.TrailRenderer::get_emitting", "UnityEngine.TrailRenderer::set_emitting", "UnityEngine.TrailRenderer::get_numCornerVertices", "UnityEngine.TrailRenderer::set_numCornerVertices", "UnityEngine.TrailRenderer::get_numCapVertices", "UnityEngine.TrailRenderer::set_numCapVertices", "UnityEngine.TrailRenderer::get_minVertexDistance", "UnityEngine.TrailRenderer::set_minVertexDistance", "UnityEngine.TrailRenderer::get_startColor_Injected", "UnityEngine.TrailRenderer::set_startColor_Injected", "UnityEngine.TrailRenderer::get_endColor_Injected", "UnityEngine.TrailRenderer::set_endColor_Injected", "UnityEngine.TrailRenderer::get_positionCount", "UnityEngine.TrailRenderer::SetPosition_Injected", "UnityEngine.TrailRenderer::GetPosition_Injected", "UnityEngine.TrailRenderer::get_shadowBias", "UnityEngine.TrailRenderer::set_shadowBias", "UnityEngine.TrailRenderer::get_generateLightingData", "UnityEngine.TrailRenderer::set_generateLightingData", "UnityEngine.TrailRenderer::get_textureMode", "UnityEngine.TrailRenderer::set_textureMode", "UnityEngine.TrailRenderer::get_alignment", "UnityEngine.TrailRenderer::set_alignment", "UnityEngine.TrailRenderer::Clear", "UnityEngine.TrailRenderer::BakeMesh", "UnityEngine.TrailRenderer::GetWidthCurveCopy", "UnityEngine.TrailRenderer::SetWidthCurve", "UnityEngine.TrailRenderer::GetColorGradientCopy", "UnityEngine.TrailRenderer::SetColorGradient", "UnityEngine.TrailRenderer::GetPositions", "UnityEngine.TrailRenderer::SetPositions", "UnityEngine.TrailRenderer::AddPosition_Injected", "UnityEngine.TrailRenderer::AddPositions", "UnityEngine.LineRenderer::get_startWidth", "UnityEngine.LineRenderer::set_startWidth", "UnityEngine.LineRenderer::get_endWidth", "UnityEngine.LineRenderer::set_endWidth", "UnityEngine.LineRenderer::get_widthMultiplier", "UnityEngine.LineRenderer::set_widthMultiplier", "UnityEngine.LineRenderer::get_numCornerVertices", "UnityEngine.LineRenderer::set_numCornerVertices", "UnityEngine.LineRenderer::get_numCapVertices", "UnityEngine.LineRenderer::set_numCapVertices", "UnityEngine.LineRenderer::get_useWorldSpace", "UnityEngine.LineRenderer::set_useWorldSpace", "UnityEngine.LineRenderer::get_loop", "UnityEngine.LineRenderer::set_loop", "UnityEngine.LineRenderer::get_startColor_Injected", "UnityEngine.LineRenderer::set_startColor_Injected", "UnityEngine.LineRenderer::get_endColor_Injected", "UnityEngine.LineRenderer::set_endColor_Injected", "UnityEngine.LineRenderer::get_positionCount", "UnityEngine.LineRenderer::set_positionCount", "UnityEngine.LineRenderer::SetPosition_Injected", "UnityEngine.LineRenderer::GetPosition_Injected", "UnityEngine.LineRenderer::get_shadowBias", "UnityEngine.LineRenderer::set_shadowBias", "UnityEngine.LineRenderer::get_generateLightingData", "UnityEngine.LineRenderer::set_generateLightingData", "UnityEngine.LineRenderer::get_textureMode", "UnityEngine.LineRenderer::set_textureMode", "UnityEngine.LineRenderer::get_alignment", "UnityEngine.LineRenderer::set_alignment", "UnityEngine.LineRenderer::Simplify", "UnityEngine.LineRenderer::BakeMesh", "UnityEngine.LineRenderer::GetWidthCurveCopy", "UnityEngine.LineRenderer::SetWidthCurve", "UnityEngine.LineRenderer::GetColorGradientCopy", "UnityEngine.LineRenderer::SetColorGradient", "UnityEngine.LineRenderer::GetPositions", "UnityEngine.LineRenderer::SetPositions", "UnityEngine.Renderer::get_bounds_Injected", "UnityEngine.Renderer::SetStaticLightmapST_Injected", "UnityEngine.Renderer::GetMaterial", "UnityEngine.Renderer::GetSharedMaterial", "UnityEngine.Renderer::SetMaterial", "UnityEngine.Renderer::GetMaterialArray", "UnityEngine.Renderer::CopyMaterialArray", "UnityEngine.Renderer::CopySharedMaterialArray", "UnityEngine.Renderer::SetMaterialArray", "UnityEngine.Renderer::Internal_SetPropertyBlock", "UnityEngine.Renderer::Internal_GetPropertyBlock", "UnityEngine.Renderer::Internal_SetPropertyBlockMaterialIndex", "UnityEngine.Renderer::Internal_GetPropertyBlockMaterialIndex", "UnityEngine.Renderer::HasPropertyBlock", "UnityEngine.Renderer::GetClosestReflectionProbesInternal", "UnityEngine.Renderer::get_enabled", "UnityEngine.Renderer::set_enabled", "UnityEngine.Renderer::get_isVisible", "UnityEngine.Renderer::get_shadowCastingMode", "UnityEngine.Renderer::set_shadowCastingMode", "UnityEngine.Renderer::get_receiveShadows", "UnityEngine.Renderer::set_receiveShadows", "UnityEngine.Renderer::get_motionVectorGenerationMode", "UnityEngine.Renderer::set_motionVectorGenerationMode", "UnityEngine.Renderer::get_lightProbeUsage", "UnityEngine.Renderer::set_lightProbeUsage", "UnityEngine.Renderer::get_reflectionProbeUsage", "UnityEngine.Renderer::set_reflectionProbeUsage", "UnityEngine.Renderer::get_renderingLayerMask", "UnityEngine.Renderer::set_renderingLayerMask", "UnityEngine.Renderer::get_rendererPriority", "UnityEngine.Renderer::set_rendererPriority", "UnityEngine.Renderer::get_sortingLayerName", "UnityEngine.Renderer::set_sortingLayerName", "UnityEngine.Renderer::get_sortingLayerID", "UnityEngine.Renderer::set_sortingLayerID", "UnityEngine.Renderer::get_sortingOrder", "UnityEngine.Renderer::set_sortingOrder", "UnityEngine.Renderer::get_sortingGroupID", "UnityEngine.Renderer::set_sortingGroupID", "UnityEngine.Renderer::get_sortingGroupOrder", "UnityEngine.Renderer::set_sortingGroupOrder", "UnityEngine.Renderer::get_allowOcclusionWhenDynamic", "UnityEngine.Renderer::set_allowOcclusionWhenDynamic", "UnityEngine.Renderer::get_staticBatchRootTransform", "UnityEngine.Renderer::set_staticBatchRootTransform", "UnityEngine.Renderer::get_staticBatchIndex", "UnityEngine.Renderer::SetStaticBatchInfo", "UnityEngine.Renderer::get_isPartOfStaticBatch", "UnityEngine.Renderer::get_worldToLocalMatrix_Injected", "UnityEngine.Renderer::get_localToWorldMatrix_Injected", "UnityEngine.Renderer::get_lightProbeProxyVolumeOverride", "UnityEngine.Renderer::set_lightProbeProxyVolumeOverride", "UnityEngine.Renderer::get_probeAnchor", "UnityEngine.Renderer::set_probeAnchor", "UnityEngine.Renderer::GetLightmapIndex", "UnityEngine.Renderer::SetLightmapIndex", "UnityEngine.Renderer::GetLightmapST_Injected", "UnityEngine.Renderer::SetLightmapST_Injected", "UnityEngine.Renderer::GetMaterialCount", "UnityEngine.Renderer::GetSharedMaterialArray", "UnityEngine.SkinnedMeshRenderer::get_quality", "UnityEngine.SkinnedMeshRenderer::set_quality", "UnityEngine.SkinnedMeshRenderer::get_updateWhenOffscreen", "UnityEngine.SkinnedMeshRenderer::set_updateWhenOffscreen", "UnityEngine.SkinnedMeshRenderer::get_forceMatrixRecalculationPerRender", "UnityEngine.SkinnedMeshRenderer::set_forceMatrixRecalculationPerRender", "UnityEngine.SkinnedMeshRenderer::get_rootBone", "UnityEngine.SkinnedMeshRenderer::set_rootBone", "UnityEngine.SkinnedMeshRenderer::get_bones", "UnityEngine.SkinnedMeshRenderer::set_bones", "UnityEngine.SkinnedMeshRenderer::get_sharedMesh", "UnityEngine.SkinnedMeshRenderer::set_sharedMesh", "UnityEngine.SkinnedMeshRenderer::get_skinnedMotionVectors", "UnityEngine.SkinnedMeshRenderer::set_skinnedMotionVectors", "UnityEngine.SkinnedMeshRenderer::GetBlendShapeWeight", "UnityEngine.SkinnedMeshRenderer::SetBlendShapeWeight", "UnityEngine.SkinnedMeshRenderer::BakeMesh", "UnityEngine.SkinnedMeshRenderer::GetLocalAABB_Injected", "UnityEngine.SkinnedMeshRenderer::SetLocalAABB_Injected", "UnityEngine.MeshRenderer::get_additionalVertexStreams", "UnityEngine.MeshRenderer::set_additionalVertexStreams", "UnityEngine.MeshRenderer::get_subMeshStartIndex", "UnityEngine.LODGroup::get_localReferencePoint_Injected", "UnityEngine.LODGroup::set_localReferencePoint_Injected", "UnityEngine.LODGroup::get_size", "UnityEngine.LODGroup::set_size", "UnityEngine.LODGroup::get_lodCount", "UnityEngine.LODGroup::get_fadeMode", "UnityEngine.LODGroup::set_fadeMode", "UnityEngine.LODGroup::get_animateCrossFading", "UnityEngine.LODGroup::set_animateCrossFading", "UnityEngine.LODGroup::get_enabled", "UnityEngine.LODGroup::set_enabled", "UnityEngine.LODGroup::RecalculateBounds", "UnityEngine.LODGroup::GetLODs", "UnityEngine.LODGroup::SetLODs", "UnityEngine.LODGroup::ForceLOD", "UnityEngine.LODGroup::get_crossFadeAnimationDuration", "UnityEngine.LODGroup::set_crossFadeAnimationDuration", "UnityEngine.PlayerPrefs::TrySetInt", "UnityEngine.PlayerPrefs::TrySetFloat", "UnityEngine.PlayerPrefs::TrySetSetString", "UnityEngine.PlayerPrefs::GetInt", "UnityEngine.PlayerPrefs::GetFloat", "UnityEngine.PlayerPrefs::GetString", "UnityEngine.PlayerPrefs::HasKey", "UnityEngine.PlayerPrefs::DeleteKey", "UnityEngine.PlayerPrefs::DeleteAll", "UnityEngine.PlayerPrefs::Save", "UnityEngine.RectTransform::get_rect_Injected", "UnityEngine.RectTransform::get_anchorMin_Injected", "UnityEngine.RectTransform::set_anchorMin_Injected", "UnityEngine.RectTransform::get_anchorMax_Injected", "UnityEngine.RectTransform::set_anchorMax_Injected", "UnityEngine.RectTransform::get_anchoredPosition_Injected", "UnityEngine.RectTransform::set_anchoredPosition_Injected", "UnityEngine.RectTransform::get_sizeDelta_Injected", "UnityEngine.RectTransform::set_sizeDelta_Injected", "UnityEngine.RectTransform::get_pivot_Injected", "UnityEngine.RectTransform::set_pivot_Injected", "UnityEngine.RectTransform::get_drivenByObject", "UnityEngine.RectTransform::set_drivenByObject", "UnityEngine.RectTransform::get_drivenProperties", "UnityEngine.RectTransform::set_drivenProperties", "UnityEngine.RectTransform::ForceUpdateRectTransforms", "UnityEngine.SpriteRenderer::get_shouldSupportTiling", "UnityEngine.SpriteRenderer::get_sprite", "UnityEngine.SpriteRenderer::set_sprite", "UnityEngine.SpriteRenderer::get_drawMode", "UnityEngine.SpriteRenderer::set_drawMode", "UnityEngine.SpriteRenderer::get_size_Injected", "UnityEngine.SpriteRenderer::set_size_Injected", "UnityEngine.SpriteRenderer::get_adaptiveModeThreshold", "UnityEngine.SpriteRenderer::set_adaptiveModeThreshold", "UnityEngine.SpriteRenderer::get_tileMode", "UnityEngine.SpriteRenderer::set_tileMode", "UnityEngine.SpriteRenderer::get_color_Injected", "UnityEngine.SpriteRenderer::set_color_Injected", "UnityEngine.SpriteRenderer::get_maskInteraction", "UnityEngine.SpriteRenderer::set_maskInteraction", "UnityEngine.SpriteRenderer::get_flipX", "UnityEngine.SpriteRenderer::set_flipX", "UnityEngine.SpriteRenderer::get_flipY", "UnityEngine.SpriteRenderer::set_flipY", "UnityEngine.SpriteRenderer::get_spriteSortPoint", "UnityEngine.SpriteRenderer::set_spriteSortPoint", "UnityEngine.SpriteRenderer::Internal_GetSpriteBounds_Injected", "UnityEngine.Sprite::GetPackingMode", "UnityEngine.Sprite::GetPackingRotation", "UnityEngine.Sprite::GetPacked", "UnityEngine.Sprite::GetTextureRect_Injected", "UnityEngine.Sprite::GetTextureRectOffset_Injected", "UnityEngine.Sprite::GetInnerUVs_Injected", "UnityEngine.Sprite::GetOuterUVs_Injected", "UnityEngine.Sprite::GetPadding_Injected", "UnityEngine.Sprite::CreateSpriteWithoutTextureScripting_Injected", "UnityEngine.Sprite::CreateSprite_Injected", "UnityEngine.Sprite::get_bounds_Injected", "UnityEngine.Sprite::get_rect_Injected", "UnityEngine.Sprite::get_border_Injected", "UnityEngine.Sprite::get_texture", "UnityEngine.Sprite::get_pixelsPerUnit", "UnityEngine.Sprite::get_associatedAlphaSplitTexture", "UnityEngine.Sprite::get_pivot_Injected", "UnityEngine.Sprite::get_vertices", "UnityEngine.Sprite::get_triangles", "UnityEngine.Sprite::get_uv", "UnityEngine.Sprite::GetPhysicsShapeCount", "UnityEngine.Sprite::Internal_GetPhysicsShapePointCount", "UnityEngine.Sprite::GetPhysicsShapeImpl", "UnityEngine.Sprite::OverridePhysicsShapeCount", "UnityEngine.Sprite::OverridePhysicsShape", "UnityEngine.Sprite::OverrideGeometry", "UnityEngine.UnityLogWriter::WriteStringToUnityLogImpl", "UnityEngine.CoreModule.dll", "Vector4", "Vector2", "Vector3", "UnityEngine.Diagnostics.Utils::ForceCrash", "UnityEngine.Diagnostics.Utils::NativeAssert", "UnityEngine.Diagnostics.Utils::NativeError", "UnityEngine.Diagnostics.Utils::NativeWarning", "UnityEngine.DynamicGI::get_indirectScale", "UnityEngine.DynamicGI::set_indirectScale", "UnityEngine.DynamicGI::get_updateThreshold", "UnityEngine.DynamicGI::set_updateThreshold", "UnityEngine.DynamicGI::get_materialUpdateTimeSlice", "UnityEngine.DynamicGI::set_materialUpdateTimeSlice", "UnityEngine.DynamicGI::SetEmissive_Injected", "UnityEngine.DynamicGI::SetEnvironmentData", "UnityEngine.DynamicGI::get_synchronousMode", "UnityEngine.DynamicGI::set_synchronousMode", "UnityEngine.DynamicGI::get_isConverged", "UnityEngine.DynamicGI::get_scheduledMaterialUpdatesCount", "UnityEngine.DynamicGI::UpdateEnvironment", "UnityEngine.Experimental.Playables.MaterialEffectPlayable::GetMaterialInternal", "UnityEngine.Experimental.Playables.MaterialEffectPlayable::SetMaterialInternal", "UnityEngine.Experimental.Playables.MaterialEffectPlayable::GetPassInternal", "UnityEngine.Experimental.Playables.MaterialEffectPlayable::SetPassInternal", "UnityEngine.Experimental.Playables.MaterialEffectPlayable::InternalCreateMaterialEffectPlayable", "UnityEngine.Experimental.Playables.MaterialEffectPlayable::ValidateType", "UnityEngine.Ping::Internal_Destroy", "UnityEngine.Ping::Internal_Create", "UnityEngine.Ping::Internal_IsDone", "UnityEngine.Ping::get_time", "UnityEngine.Ping::get_ip", "Unity.Profiling.ProfilerMarker::Internal_Create", "Unity.Profiling.ProfilerMarker::Internal_Begin", "Unity.Profiling.ProfilerMarker::Internal_BeginWithObject", "Unity.Profiling.ProfilerMarker::Internal_End", "UnityEngine.SortingLayer::GetSortingLayerIDsInternal", "UnityEngine.SortingLayer::GetLayerValueFromID", "UnityEngine.SortingLayer::GetLayerValueFromName", "UnityEngine.SortingLayer::NameToID", "UnityEngine.SortingLayer::IDToName", "UnityEngine.SortingLayer::IsValid", "UnityEngine.Experimental.Playables.TexturePlayableGraphExtensions::InternalCreateTextureOutput", "UnityEngine.Experimental.Rendering.BuiltinRuntimeReflectionSystem::BuiltinUpdate", "UnityEngine.Display::GetSystemExtImpl", "UnityEngine.Display::GetRenderingExtImpl", "UnityEngine.Display::GetRenderingBuffersImpl", "UnityEngine.Display::SetRenderingResolutionImpl", "UnityEngine.Display::ActivateDisplayImpl", "UnityEngine.Display::SetParamsImpl", "UnityEngine.Display::RelativeMouseAtImpl", "UnityEngine.Display::GetActiveImp", "UnityEngine.SceneManagement.SceneUtility::GetScenePathByBuildIndex", "UnityEngine.SceneManagement.SceneUtility::GetBuildIndexByScenePath", "UnityEngine.UnityEventQueueSystem::GetGlobalEventQueue", "UnityEngine.AsyncOperation::InternalDestroy", "UnityEngine.AsyncOperation::get_isDone", "UnityEngine.AsyncOperation::get_progress", "UnityEngine.AsyncOperation::get_priority", "UnityEngine.AsyncOperation::set_priority", "UnityEngine.AsyncOperation::get_allowSceneActivation", "UnityEngine.AsyncOperation::set_allowSceneActivation", "UnityEngine.Caching::get_compressionEnabled", "UnityEngine.Caching::set_compressionEnabled", "UnityEngine.Caching::get_ready", "UnityEngine.Caching::ClearCache", "UnityEngine.Caching::ClearCache_Int", "UnityEngine.Caching::ClearCachedVersionInternal_Injected", "UnityEngine.Caching::ClearCachedVersions_Injected", "UnityEngine.Caching::GetCachedVersions", "UnityEngine.Caching::IsVersionCached_Injected", "UnityEngine.Caching::MarkAsUsed_Injected", "UnityEngine.Caching::get_spaceOccupied", "UnityEngine.Caching::get_spaceFree", "UnityEngine.Caching::get_maximumAvailableDiskSpace", "UnityEngine.Caching::set_maximumAvailableDiskSpace", "UnityEngine.Caching::get_expirationDelay", "UnityEngine.Caching::set_expirationDelay", "UnityEngine.Caching::AddCache_Injected", "UnityEngine.Caching::GetCacheAt_Injected", "UnityEngine.Caching::GetCacheByPath_Injected", "UnityEngine.Caching::RemoveCache_Injected", "UnityEngine.Caching::MoveCacheBefore_Injected", "UnityEngine.Caching::MoveCacheAfter_Injected", "UnityEngine.Caching::get_cacheCount", "UnityEngine.Caching::get_defaultCache_Injected", "UnityEngine.Caching::get_currentCacheForWriting_Injected", "UnityEngine.Caching::set_currentCacheForWriting_Injected", "UnityEngine.ColorUtility::DoTryParseHtmlColor", "UnityEngine.Coroutine::ReleaseCoroutine", "UnityEngine.DebugLogHandler::Internal_Log", "UnityEngine.DebugLogHandler::Internal_LogException", "UnityEngine.Debug::DrawLine_Injected", "UnityEngine.Debug::Break", "UnityEngine.Debug::DebugBreak", "UnityEngine.Debug::ClearDeveloperConsole", "UnityEngine.Debug::get_developerConsoleVisible", "UnityEngine.Debug::set_developerConsoleVisible", "UnityEngine.Debug::get_isDebugBuild", "UnityEngine.Debug::OpenConsoleFile", "UnityEngine.Debug::GetDiagnosticSwitches", "UnityEngine.Debug::GetDiagnosticSwitch", "UnityEngine.Debug::SetDiagnosticSwitch", "UnityEngine.OcclusionPortal::get_open", "UnityEngine.OcclusionPortal::set_open", "UnityEngine.OcclusionArea::get_center_Injected", "UnityEngine.OcclusionArea::set_center_Injected", "UnityEngine.OcclusionArea::get_size_Injected", "UnityEngine.OcclusionArea::set_size_Injected", "UnityEngine.Flare::Internal_Create", "UnityEngine.LensFlare::get_brightness", "UnityEngine.LensFlare::set_brightness", "UnityEngine.LensFlare::get_fadeSpeed", "UnityEngine.LensFlare::set_fadeSpeed", "UnityEngine.LensFlare::get_color_Injected", "UnityEngine.LensFlare::set_color_Injected", "UnityEngine.LensFlare::get_flare", "UnityEngine.LensFlare::set_flare", "UnityEngine.Projector::get_nearClipPlane", "UnityEngine.Projector::set_nearClipPlane", "UnityEngine.Projector::get_farClipPlane", "UnityEngine.Projector::set_farClipPlane", "UnityEngine.Projector::get_fieldOfView", "UnityEngine.Projector::set_fieldOfView", "UnityEngine.Projector::get_aspectRatio", "UnityEngine.Projector::set_aspectRatio", "UnityEngine.Projector::get_orthographic", "UnityEngine.Projector::set_orthographic", "UnityEngine.Projector::get_orthographicSize", "UnityEngine.Projector::set_orthographicSize", "UnityEngine.Projector::get_ignoreLayers", "UnityEngine.Projector::set_ignoreLayers", "UnityEngine.Projector::get_material", "UnityEngine.Projector::set_material", "UnityEngine.Light::get_type", "UnityEngine.Light::set_type", "UnityEngine.Light::get_spotAngle", "UnityEngine.Light::set_spotAngle", "UnityEngine.Light::get_color_Injected", "UnityEngine.Light::set_color_Injected", "UnityEngine.Light::get_colorTemperature", "UnityEngine.Light::set_colorTemperature", "UnityEngine.Light::get_intensity", "UnityEngine.Light::set_intensity", "UnityEngine.Light::get_bounceIntensity", "UnityEngine.Light::set_bounceIntensity", "UnityEngine.Light::get_shadowCustomResolution", "UnityEngine.Light::set_shadowCustomResolution", "UnityEngine.Light::get_shadowBias", "UnityEngine.Light::set_shadowBias", "UnityEngine.Light::get_shadowNormalBias", "UnityEngine.Light::set_shadowNormalBias", "UnityEngine.Light::get_shadowNearPlane", "UnityEngine.Light::set_shadowNearPlane", "UnityEngine.Light::get_range", "UnityEngine.Light::set_range", "UnityEngine.Light::get_flare", "UnityEngine.Light::set_flare", "UnityEngine.Light::get_bakingOutput_Injected", "UnityEngine.Light::set_bakingOutput_Injected", "UnityEngine.Light::get_cullingMask", "UnityEngine.Light::set_cullingMask", "UnityEngine.Light::get_lightShadowCasterMode", "UnityEngine.Light::set_lightShadowCasterMode", "UnityEngine.Skybox::get_material", "UnityEngine.Skybox::set_material", "UnityEngine.MeshFilter::get_sharedMesh", "UnityEngine.MeshFilter::set_sharedMesh", "UnityEngine.MeshFilter::get_mesh", "UnityEngine.MeshFilter::set_mesh", "UnityEngine.Gyroscope::rotationRate_Internal_Injected", "UnityEngine.Gyroscope::rotationRateUnbiased_Internal_Injected", "UnityEngine.Gyroscope::gravity_Internal_Injected", "UnityEngine.Gyroscope::userAcceleration_Internal_Injected", "UnityEngine.Gyroscope::attitude_Internal_Injected", "UnityEngine.Gyroscope::getEnabled_Internal", "UnityEngine.Gyroscope::setEnabled_Internal", "UnityEngine.Gyroscope::getUpdateInterval_Internal", "UnityEngine.Gyroscope::setUpdateInterval_Internal", "UnityEngine.LocationService::IsServiceEnabledByUser", "UnityEngine.LocationService::GetLocationStatus", "UnityEngine.LocationService::GetLastLocation_Injected", "UnityEngine.LocationService::SetDesiredAccuracy", "UnityEngine.LocationService::SetDistanceFilter", "UnityEngine.LocationService::StartUpdatingLocation", "UnityEngine.LocationService::StopUpdatingLocation", "UnityEngine.LocationService::GetLastHeading_Injected", "UnityEngine.LocationService::IsHeadingUpdatesEnabled", "UnityEngine.LocationService::SetHeadingUpdatesEnabled", "UnityEngine.Input::GetKeyInt", "UnityEngine.Input::GetKeyString", "UnityEngine.Input::GetKeyUpInt", "UnityEngine.Input::GetKeyUpString", "UnityEngine.Input::GetKeyDownInt", "UnityEngine.Input::GetKeyDownString", "UnityEngine.Input::GetAxis", "UnityEngine.Input::GetAxisRaw", "UnityEngine.Input::GetButton", "UnityEngine.Input::GetButtonDown", "UnityEngine.Input::GetButtonUp", "UnityEngine.Input::GetMouseButton", "UnityEngine.Input::GetMouseButtonDown", "UnityEngine.Input::GetMouseButtonUp", "UnityEngine.Input::ResetInputAxes", "UnityEngine.Input::GetJoystickNames", "UnityEngine.Input::GetTouch_Injected", "UnityEngine.Input::GetAccelerationEvent_Injected", "UnityEngine.Input::get_simulateMouseWithTouches", "UnityEngine.Input::set_simulateMouseWithTouches", "UnityEngine.Input::get_anyKey", "UnityEngine.Input::get_anyKeyDown", "UnityEngine.Input::get_inputString", "UnityEngine.Input::get_mousePosition_Injected", "UnityEngine.Input::get_mouseScrollDelta_Injected", "UnityEngine.Input::get_imeCompositionMode", "UnityEngine.Input::set_imeCompositionMode", "UnityEngine.Input::get_compositionString", "UnityEngine.Input::get_imeIsSelected", "UnityEngine.Input::get_compositionCursorPos_Injected", "UnityEngine.Input::set_compositionCursorPos_Injected", "UnityEngine.Input::get_eatKeyPressOnTextFieldFocus", "UnityEngine.Input::set_eatKeyPressOnTextFieldFocus", "UnityEngine.Input::get_mousePresent", "UnityEngine.Input::get_touchCount", "UnityEngine.Input::get_touchPressureSupported", "UnityEngine.Input::get_stylusTouchSupported", "UnityEngine.Input::get_touchSupported", "UnityEngine.Input::get_multiTouchEnabled", "UnityEngine.Input::set_multiTouchEnabled", "UnityEngine.Input::get_isGyroAvailable", "UnityEngine.Input::get_deviceOrientation", "UnityEngine.Input::get_acceleration_Injected", "UnityEngine.Input::get_compensateSensors", "UnityEngine.Input::set_compensateSensors", "UnityEngine.Input::get_accelerationEventCount", "UnityEngine.Input::get_backButtonLeavesApp", "UnityEngine.Input::set_backButtonLeavesApp", "UnityEngine.Input::GetGyroInternal", "UnityEngine.Experimental.U2D.PixelPerfectRendering::get_pixelSnapSpacing", "UnityEngine.Experimental.U2D.PixelPerfectRendering::set_pixelSnapSpacing", "UnityEngine.Rendering.SortingGroup::get_sortingLayerName", "UnityEngine.Rendering.SortingGroup::set_sortingLayerName", "UnityEngine.Rendering.SortingGroup::get_sortingLayerID", "UnityEngine.Rendering.SortingGroup::set_sortingLayerID", "UnityEngine.Rendering.SortingGroup::get_sortingOrder", "UnityEngine.Rendering.SortingGroup::set_sortingOrder", "UnityEngine.Rendering.SortingGroup::get_sortingGroupID", "UnityEngine.Rendering.SortingGroup::get_sortingGroupOrder", "UnityEngine.Rendering.SortingGroup::get_index", "UnityEngine.SystemInfo::GetBatteryLevel", "UnityEngine.SystemInfo::GetBatteryStatus", "UnityEngine.SystemInfo::GetOperatingSystem", "UnityEngine.SystemInfo::GetOperatingSystemFamily", "UnityEngine.SystemInfo::GetProcessorType", "UnityEngine.SystemInfo::GetProcessorFrequencyMHz", "UnityEngine.SystemInfo::GetProcessorCount", "UnityEngine.SystemInfo::GetPhysicalMemoryMB", "UnityEngine.SystemInfo::GetDeviceUniqueIdentifier", "UnityEngine.SystemInfo::GetDeviceName", "UnityEngine.SystemInfo::GetDeviceModel", "UnityEngine.SystemInfo::SupportsAccelerometer", "UnityEngine.SystemInfo::IsGyroAvailable", "UnityEngine.SystemInfo::SupportsLocationService", "UnityEngine.SystemInfo::SupportsVibration", "UnityEngine.SystemInfo::SupportsAudio", "UnityEngine.SystemInfo::GetDeviceType", "UnityEngine.SystemInfo::GetGraphicsMemorySize", "UnityEngine.SystemInfo::GetGraphicsDeviceName", "UnityEngine.SystemInfo::GetGraphicsDeviceVendor", "UnityEngine.SystemInfo::GetGraphicsDeviceID", "UnityEngine.SystemInfo::GetGraphicsDeviceVendorID", "UnityEngine.SystemInfo::GetGraphicsDeviceType", "UnityEngine.SystemInfo::GetGraphicsUVStartsAtTop", "UnityEngine.SystemInfo::GetGraphicsDeviceVersion", "UnityEngine.SystemInfo::GetGraphicsShaderLevel", "UnityEngine.SystemInfo::GetGraphicsMultiThreaded", "UnityEngine.SystemInfo::HasHiddenSurfaceRemovalOnGPU", "UnityEngine.SystemInfo::HasDynamicUniformArrayIndexingInFragmentShaders", "UnityEngine.SystemInfo::SupportsShadows", "UnityEngine.SystemInfo::SupportsRawShadowDepthSampling", "UnityEngine.SystemInfo::SupportsMotionVectors", "UnityEngine.SystemInfo::SupportsRenderToCubemap", "UnityEngine.SystemInfo::SupportsImageEffects", "UnityEngine.SystemInfo::Supports3DTextures", "UnityEngine.SystemInfo::Supports2DArrayTextures", "UnityEngine.SystemInfo::Supports3DRenderTextures", "UnityEngine.SystemInfo::SupportsCubemapArrayTextures", "UnityEngine.SystemInfo::GetCopyTextureSupport", "UnityEngine.SystemInfo::SupportsComputeShaders", "UnityEngine.SystemInfo::SupportsInstancing", "UnityEngine.SystemInfo::SupportsHardwareQuadTopology", "UnityEngine.SystemInfo::Supports32bitsIndexBuffer", "UnityEngine.SystemInfo::SupportsSparseTextures", "UnityEngine.SystemInfo::SupportedRenderTargetCount", "UnityEngine.SystemInfo::SupportsSeparatedRenderTargetsBlend", "UnityEngine.SystemInfo::SupportedRandomWriteTargetCount", "UnityEngine.SystemInfo::SupportsMultisampledTextures", "UnityEngine.SystemInfo::SupportsMultisampleAutoResolve", "UnityEngine.SystemInfo::SupportsTextureWrapMirrorOnce", "UnityEngine.SystemInfo::UsesReversedZBuffer", "UnityEngine.SystemInfo::HasRenderTextureNative", "UnityEngine.SystemInfo::SupportsBlendingOnRenderTextureFormatNative", "UnityEngine.SystemInfo::SupportsTextureFormatNative", "UnityEngine.SystemInfo::GetNPOTSupport", "UnityEngine.SystemInfo::GetMaxTextureSize", "UnityEngine.SystemInfo::GetMaxCubemapSize", "UnityEngine.SystemInfo::GetMaxRenderTextureSize", "UnityEngine.SystemInfo::SupportsAsyncCompute", "UnityEngine.SystemInfo::SupportsGPUFence", "UnityEngine.SystemInfo::SupportsAsyncGPUReadback", "UnityEngine.SystemInfo::SupportsMipStreaming", "UnityEngine.SystemInfo::IsFormatSupported", "UnityEngine.Object::Destroy", "UnityEngine.Object::DestroyImmediate", "UnityEngine.Object::FindObjectsOfType", "UnityEngine.Object::DontDestroyOnLoad", "UnityEngine.Object::get_hideFlags", "UnityEngine.Object::set_hideFlags", "UnityEngine.Object::FindSceneObjectsOfType", "UnityEngine.Object::FindObjectsOfTypeIncludingAssets", "UnityEngine.Object::GetOffsetOfInstanceIDInCPlusPlusObject", "UnityEngine.Object::CurrentThreadIsMainThread", "UnityEngine.Object::Internal_CloneSingle", "UnityEngine.Object::Internal_CloneSingleWithParent", "UnityEngine.Object::Internal_InstantiateSingle_Injected", "UnityEngine.Object::Internal_InstantiateSingleWithParent_Injected", "UnityEngine.Object::ToString", "UnityEngine.Object::GetName", "UnityEngine.Object::SetName", "UnityEngine.Object::DoesObjectWithInstanceIDExist", "UnityEngine.Object::FindObjectFromInstanceID", "./Runtime/Export/Debug.bindings.h", "Invalid KeyCode enum.", "Input Key named: %s is unknown", "Invalid mouse button index.", "Internal error.", "Index out of bounds.", "FixedSize %d", "MemPoolAlloc", "UnityEngine.Cursor::SetCursor_Injected", "UnityEngine.Cursor::get_visible", "UnityEngine.Cursor::set_visible", "UnityEngine.Cursor::get_lockState", "UnityEngine.Cursor::set_lockState", "UnityEngine.Gizmos::DrawLine_Injected", "UnityEngine.Gizmos::DrawWireSphere_Injected", "UnityEngine.Gizmos::DrawSphere_Injected", "UnityEngine.Gizmos::DrawWireCube_Injected", "UnityEngine.Gizmos::DrawCube_Injected", "UnityEngine.Gizmos::DrawMesh_Injected", "UnityEngine.Gizmos::DrawWireMesh_Injected", "UnityEngine.Gizmos::DrawIcon_Injected", "UnityEngine.Gizmos::DrawGUITexture_Injected", "UnityEngine.Gizmos::get_color_Injected", "UnityEngine.Gizmos::set_color_Injected", "UnityEngine.Gizmos::get_matrix_Injected", "UnityEngine.Gizmos::set_matrix_Injected", "UnityEngine.Gizmos::DrawFrustum_Injected", "UnityEngine.LayerMask::LayerToName", "UnityEngine.LayerMask::NameToLayer", "UnityEngine.ReflectionProbe::get_type", "UnityEngine.ReflectionProbe::set_type", "UnityEngine.ReflectionProbe::get_size_Injected", "UnityEngine.ReflectionProbe::set_size_Injected", "UnityEngine.ReflectionProbe::get_center_Injected", "UnityEngine.ReflectionProbe::set_center_Injected", "UnityEngine.ReflectionProbe::get_nearClipPlane", "UnityEngine.ReflectionProbe::set_nearClipPlane", "UnityEngine.ReflectionProbe::get_farClipPlane", "UnityEngine.ReflectionProbe::set_farClipPlane", "UnityEngine.ReflectionProbe::get_intensity", "UnityEngine.ReflectionProbe::set_intensity", "UnityEngine.ReflectionProbe::get_bounds_Injected", "UnityEngine.ReflectionProbe::get_hdr", "UnityEngine.ReflectionProbe::set_hdr", "UnityEngine.ReflectionProbe::get_shadowDistance", "UnityEngine.ReflectionProbe::set_shadowDistance", "UnityEngine.ReflectionProbe::get_resolution", "UnityEngine.ReflectionProbe::set_resolution", "UnityEngine.ReflectionProbe::get_cullingMask", "UnityEngine.ReflectionProbe::set_cullingMask", "UnityEngine.ReflectionProbe::get_clearFlags", "UnityEngine.ReflectionProbe::set_clearFlags", "UnityEngine.ReflectionProbe::get_backgroundColor_Injected", "UnityEngine.ReflectionProbe::set_backgroundColor_Injected", "UnityEngine.ReflectionProbe::get_blendDistance", "UnityEngine.ReflectionProbe::set_blendDistance", "UnityEngine.ReflectionProbe::get_boxProjection", "UnityEngine.ReflectionProbe::set_boxProjection", "UnityEngine.ReflectionProbe::get_mode", "UnityEngine.ReflectionProbe::set_mode", "UnityEngine.ReflectionProbe::get_importance", "UnityEngine.ReflectionProbe::set_importance", "UnityEngine.ReflectionProbe::get_refreshMode", "UnityEngine.ReflectionProbe::set_refreshMode", "UnityEngine.ReflectionProbe::get_timeSlicingMode", "UnityEngine.ReflectionProbe::set_timeSlicingMode", "UnityEngine.ReflectionProbe::get_bakedTexture", "UnityEngine.ReflectionProbe::set_bakedTexture", "UnityEngine.ReflectionProbe::get_customBakedTexture", "UnityEngine.ReflectionProbe::set_customBakedTexture", "UnityEngine.ReflectionProbe::get_realtimeTexture", "UnityEngine.ReflectionProbe::set_realtimeTexture", "UnityEngine.ReflectionProbe::get_texture", "UnityEngine.ReflectionProbe::get_textureHDRDecodeValues_Injected", "UnityEngine.ReflectionProbe::Reset", "UnityEngine.ReflectionProbe::IsFinishedRendering", "UnityEngine.ReflectionProbe::ScheduleRender", "UnityEngine.ReflectionProbe::BlendCubemap", "UnityEngine.ReflectionProbe::get_minBakedCubemapResolution", "UnityEngine.ReflectionProbe::get_maxBakedCubemapResolution", "UnityEngine.ReflectionProbe::get_defaultTextureHDRDecodeValues_Injected", "UnityEngine.ReflectionProbe::get_defaultTexture", "UnityEngine.ScriptableObject::SetDirty", "UnityEngine.ScriptableObject::CreateScriptableObject", "UnityEngine.ScriptableObject::CreateScriptableObjectInstanceFromName", "UnityEngine.ScriptableObject::CreateScriptableObjectInstanceFromType", "UnityEngine.Rendering.SplashScreen::get_isFinished", "UnityEngine.Rendering.SplashScreen::Begin", "UnityEngine.Rendering.SplashScreen::Draw", "UnityEngine.Transform::get_position_Injected", "UnityEngine.Transform::set_position_Injected", "UnityEngine.Transform::get_localPosition_Injected", "UnityEngine.Transform::set_localPosition_Injected", "UnityEngine.Transform::GetLocalEulerAngles_Injected", "UnityEngine.Transform::SetLocalEulerAngles_Injected", "UnityEngine.Transform::SetLocalEulerHint_Injected", "UnityEngine.Transform::get_rotation_Injected", "UnityEngine.Transform::set_rotation_Injected", "UnityEngine.Transform::get_localRotation_Injected", "UnityEngine.Transform::set_localRotation_Injected", "UnityEngine.Transform::GetRotationOrderInternal", "UnityEngine.Transform::SetRotationOrderInternal", "UnityEngine.Transform::get_localScale_Injected", "UnityEngine.Transform::set_localScale_Injected", "UnityEngine.Transform::GetParent", "UnityEngine.Transform::SetParent", "UnityEngine.Transform::get_worldToLocalMatrix_Injected", "UnityEngine.Transform::get_localToWorldMatrix_Injected", "UnityEngine.Transform::SetPositionAndRotation_Injected", "UnityEngine.Transform::RotateAroundInternal_Injected", "UnityEngine.Transform::Internal_LookAt_Injected", "UnityEngine.Transform::TransformDirection_Injected", "UnityEngine.Transform::InverseTransformDirection_Injected", "UnityEngine.Transform::TransformVector_Injected", "UnityEngine.Transform::InverseTransformVector_Injected", "UnityEngine.Transform::TransformPoint_Injected", "UnityEngine.Transform::InverseTransformPoint_Injected", "UnityEngine.Transform::GetRoot", "UnityEngine.Transform::get_childCount", "UnityEngine.Transform::DetachChildren", "UnityEngine.Transform::SetAsFirstSibling", "UnityEngine.Transform::SetAsLastSibling", "UnityEngine.Transform::SetSiblingIndex", "UnityEngine.Transform::GetSiblingIndex", "UnityEngine.Transform::FindRelativeTransformWithPath", "UnityEngine.Transform::SendTransformChangedScale", "UnityEngine.Transform::get_lossyScale_Injected", "UnityEngine.Transform::IsChildOf", "UnityEngine.Transform::get_hasChanged", "UnityEngine.Transform::set_hasChanged", "UnityEngine.Transform::RotateAround_Injected", "UnityEngine.Transform::RotateAroundLocal_Injected", "UnityEngine.Transform::GetChild", "UnityEngine.Transform::GetChildCount", "UnityEngine.Transform::internal_getHierarchyCapacity", "UnityEngine.Transform::internal_setHierarchyCapacity", "UnityEngine.Transform::internal_getHierarchyCount", "UnityEngine.Transform::IsNonUniformScaleTransform", "UnityEngine.Mesh::Internal_Create", "UnityEngine.Mesh::FromInstanceID", "UnityEngine.Mesh::get_indexFormat", "UnityEngine.Mesh::set_indexFormat", "UnityEngine.Mesh::GetIndexStartImpl", "UnityEngine.Mesh::GetIndexCountImpl", "UnityEngine.Mesh::GetBaseVertexImpl", "UnityEngine.Mesh::GetTrianglesImpl", "UnityEngine.Mesh::GetIndicesImpl", "UnityEngine.Mesh::SetIndicesImpl", "UnityEngine.Mesh::GetTrianglesNonAllocImpl", "UnityEngine.Mesh::GetIndicesNonAllocImpl", "UnityEngine.Mesh::PrintErrorCantAccessChannel", "UnityEngine.Mesh::HasChannel", "UnityEngine.Mesh::SetArrayForChannelImpl", "UnityEngine.Mesh::GetAllocArrayFromChannelImpl", "UnityEngine.Mesh::GetArrayFromChannelImpl", "UnityEngine.Mesh::get_vertexBufferCount", "UnityEngine.Mesh::GetNativeVertexBufferPtr", "UnityEngine.Mesh::GetNativeIndexBufferPtr", "UnityEngine.Mesh::get_blendShapeCount", "UnityEngine.Mesh::ClearBlendShapes", "UnityEngine.Mesh::GetBlendShapeName", "UnityEngine.Mesh::GetBlendShapeIndex", "UnityEngine.Mesh::GetBlendShapeFrameCount", "UnityEngine.Mesh::GetBlendShapeFrameWeight", "UnityEngine.Mesh::GetBlendShapeFrameVertices", "UnityEngine.Mesh::AddBlendShapeFrame", "UnityEngine.Mesh::GetBoneWeightCount", "UnityEngine.Mesh::get_boneWeights", "UnityEngine.Mesh::set_boneWeights", "UnityEngine.Mesh::GetBindposeCount", "UnityEngine.Mesh::get_bindposes", "UnityEngine.Mesh::set_bindposes", "UnityEngine.Mesh::GetBoneWeightsNonAllocImpl", "UnityEngine.Mesh::GetBindposesNonAllocImpl", "UnityEngine.Mesh::get_isReadable", "UnityEngine.Mesh::get_canAccess", "UnityEngine.Mesh::get_vertexCount", "UnityEngine.Mesh::get_subMeshCount", "UnityEngine.Mesh::set_subMeshCount", "UnityEngine.Mesh::get_bounds_Injected", "UnityEngine.Mesh::set_bounds_Injected", "UnityEngine.Mesh::ClearImpl", "UnityEngine.Mesh::RecalculateBoundsImpl", "UnityEngine.Mesh::RecalculateNormalsImpl", "UnityEngine.Mesh::RecalculateTangentsImpl", "UnityEngine.Mesh::MarkDynamicImpl", "UnityEngine.Mesh::UploadMeshDataImpl", "UnityEngine.Mesh::GetTopologyImpl", "UnityEngine.Mesh::GetUVDistributionMetric", "UnityEngine.Mesh::CombineMeshesImpl", "UnityEngine.StaticBatchingHelper::InternalCombineVertices", "UnityEngine.StaticBatchingHelper::InternalCombineIndices", "UnityEngine.Rendering.ShaderKeyword::GetShaderKeywordIndex", "UnityEngine.Rendering.ShaderKeyword::GetShaderKeywordName", "UnityEngine.Rendering.ShaderKeyword::GetShaderKeywordType", "BoneWeight", "Matrix4x4", "UnityEngine.Camera::get_nearClipPlane", "UnityEngine.Camera::set_nearClipPlane", "UnityEngine.Camera::get_farClipPlane", "UnityEngine.Camera::set_farClipPlane", "UnityEngine.Camera::get_fieldOfView", "UnityEngine.Camera::set_fieldOfView", "UnityEngine.Camera::get_renderingPath", "UnityEngine.Camera::set_renderingPath", "UnityEngine.Camera::get_actualRenderingPath", "UnityEngine.Camera::Reset", "UnityEngine.Camera::get_allowHDR", "UnityEngine.Camera::set_allowHDR", "UnityEngine.Camera::get_allowMSAA", "UnityEngine.Camera::set_allowMSAA", "UnityEngine.Camera::get_allowDynamicResolution", "UnityEngine.Camera::set_allowDynamicResolution", "UnityEngine.Camera::get_forceIntoRenderTexture", "UnityEngine.Camera::set_forceIntoRenderTexture", "UnityEngine.Camera::get_orthographicSize", "UnityEngine.Camera::set_orthographicSize", "UnityEngine.Camera::get_orthographic", "UnityEngine.Camera::set_orthographic", "UnityEngine.Camera::get_opaqueSortMode", "UnityEngine.Camera::set_opaqueSortMode", "UnityEngine.Camera::get_transparencySortMode", "UnityEngine.Camera::set_transparencySortMode", "UnityEngine.Camera::get_transparencySortAxis_Injected", "UnityEngine.Camera::set_transparencySortAxis_Injected", "UnityEngine.Camera::ResetTransparencySortSettings", "UnityEngine.Camera::get_depth", "UnityEngine.Camera::set_depth", "UnityEngine.Camera::get_aspect", "UnityEngine.Camera::set_aspect", "UnityEngine.Camera::ResetAspect", "UnityEngine.Camera::get_velocity_Injected", "UnityEngine.Camera::get_cullingMask", "UnityEngine.Camera::set_cullingMask", "UnityEngine.Camera::get_eventMask", "UnityEngine.Camera::set_eventMask", "UnityEngine.Camera::get_layerCullSpherical", "UnityEngine.Camera::set_layerCullSpherical", "UnityEngine.Camera::get_cameraType", "UnityEngine.Camera::set_cameraType", "UnityEngine.Camera::GetLayerCullDistances", "UnityEngine.Camera::SetLayerCullDistances", "UnityEngine.Camera::get_PreviewCullingLayer", "UnityEngine.Camera::get_useOcclusionCulling", "UnityEngine.Camera::set_useOcclusionCulling", "UnityEngine.Camera::get_cullingMatrix_Injected", "UnityEngine.Camera::set_cullingMatrix_Injected", "UnityEngine.Camera::ResetCullingMatrix", "UnityEngine.Camera::get_backgroundColor_Injected", "UnityEngine.Camera::set_backgroundColor_Injected", "UnityEngine.Camera::get_clearFlags", "UnityEngine.Camera::set_clearFlags", "UnityEngine.Camera::get_depthTextureMode", "UnityEngine.Camera::set_depthTextureMode", "UnityEngine.Camera::get_clearStencilAfterLightingPass", "UnityEngine.Camera::set_clearStencilAfterLightingPass", "UnityEngine.Camera::SetReplacementShader", "UnityEngine.Camera::ResetReplacementShader", "UnityEngine.Camera::get_projectionMatrixMode", "UnityEngine.Camera::get_usePhysicalProperties", "UnityEngine.Camera::set_usePhysicalProperties", "UnityEngine.Camera::get_sensorSize_Injected", "UnityEngine.Camera::set_sensorSize_Injected", "UnityEngine.Camera::get_lensShift_Injected", "UnityEngine.Camera::set_lensShift_Injected", "UnityEngine.Camera::get_focalLength", "UnityEngine.Camera::set_focalLength", "UnityEngine.Camera::get_gateFit", "UnityEngine.Camera::set_gateFit", "UnityEngine.Camera::GetLocalSpaceAim_Injected", "UnityEngine.Camera::get_rect_Injected", "UnityEngine.Camera::set_rect_Injected", "UnityEngine.Camera::get_pixelRect_Injected", "UnityEngine.Camera::set_pixelRect_Injected", "UnityEngine.Camera::get_pixelWidth", "UnityEngine.Camera::get_pixelHeight", "UnityEngine.Camera::get_scaledPixelWidth", "UnityEngine.Camera::get_scaledPixelHeight", "UnityEngine.Camera::get_targetTexture", "UnityEngine.Camera::set_targetTexture", "UnityEngine.Camera::get_activeTexture", "UnityEngine.Camera::get_targetDisplay", "UnityEngine.Camera::set_targetDisplay", "UnityEngine.Camera::SetTargetBuffersImpl_Injected", "UnityEngine.Camera::SetTargetBuffersMRTImpl_Injected", "UnityEngine.Camera::GetCameraBufferWarnings", "UnityEngine.Camera::get_cameraToWorldMatrix_Injected", "UnityEngine.Camera::get_worldToCameraMatrix_Injected", "UnityEngine.Camera::set_worldToCameraMatrix_Injected", "UnityEngine.Camera::get_projectionMatrix_Injected", "UnityEngine.Camera::set_projectionMatrix_Injected", "UnityEngine.Camera::get_nonJitteredProjectionMatrix_Injected", "UnityEngine.Camera::set_nonJitteredProjectionMatrix_Injected", "UnityEngine.Camera::get_useJitteredProjectionMatrixForTransparentRendering", "UnityEngine.Camera::set_useJitteredProjectionMatrixForTransparentRendering", "UnityEngine.Camera::get_previousViewProjectionMatrix_Injected", "UnityEngine.Camera::ResetWorldToCameraMatrix", "UnityEngine.Camera::ResetProjectionMatrix", "UnityEngine.Camera::CalculateObliqueMatrix_Injected", "UnityEngine.Camera::WorldToScreenPoint_Injected", "UnityEngine.Camera::WorldToViewportPoint_Injected", "UnityEngine.Camera::ViewportToWorldPoint_Injected", "UnityEngine.Camera::ScreenToWorldPoint_Injected", "UnityEngine.Camera::ScreenToViewportPoint_Injected", "UnityEngine.Camera::ViewportToScreenPoint_Injected", "UnityEngine.Camera::GetFrustumPlaneSizeAt_Injected", "UnityEngine.Camera::ViewportPointToRay_Injected", "UnityEngine.Camera::ScreenPointToRay_Injected", "UnityEngine.Camera::RaycastTry_Injected", "UnityEngine.Camera::RaycastTry2D_Injected", "UnityEngine.Camera::CalculateFrustumCornersInternal_Injected", "UnityEngine.Camera::CalculateProjectionMatrixFromPhysicalPropertiesInternal_Injected", "UnityEngine.Camera::FocalLengthToFOV", "UnityEngine.Camera::FOVToFocalLength", "UnityEngine.Camera::get_main", "UnityEngine.Camera::get_current", "UnityEngine.Camera::get_scene_Injected", "UnityEngine.Camera::set_scene_Injected", "UnityEngine.Camera::get_stereoEnabled", "UnityEngine.Camera::get_stereoSeparation", "UnityEngine.Camera::set_stereoSeparation", "UnityEngine.Camera::get_stereoConvergence", "UnityEngine.Camera::set_stereoConvergence", "UnityEngine.Camera::get_areVRStereoViewMatricesWithinSingleCullTolerance", "UnityEngine.Camera::get_stereoTargetEye", "UnityEngine.Camera::set_stereoTargetEye", "UnityEngine.Camera::get_stereoActiveEye", "UnityEngine.Camera::GetStereoNonJitteredProjectionMatrix_Injected", "UnityEngine.Camera::GetStereoViewMatrix_Injected", "UnityEngine.Camera::CopyStereoDeviceProjectionMatrixToNonJittered", "UnityEngine.Camera::GetStereoProjectionMatrix_Injected", "UnityEngine.Camera::SetStereoProjectionMatrix_Injected", "UnityEngine.Camera::ResetStereoProjectionMatrices", "UnityEngine.Camera::SetStereoViewMatrix_Injected", "UnityEngine.Camera::ResetStereoViewMatrices", "UnityEngine.Camera::GetAllCamerasCount", "UnityEngine.Camera::GetAllCamerasImpl", "UnityEngine.Camera::RenderToCubemapImpl", "UnityEngine.Camera::RenderToCubemapEyeImpl", "UnityEngine.Camera::Render", "UnityEngine.Camera::RenderWithShader", "UnityEngine.Camera::RenderDontRestore", "UnityEngine.Camera::SetupCurrent", "UnityEngine.Camera::CopyFrom", "UnityEngine.Camera::get_commandBufferCount", "UnityEngine.Camera::RemoveCommandBuffers", "UnityEngine.Camera::RemoveAllCommandBuffers", "UnityEngine.Camera::AddCommandBufferImpl", "UnityEngine.Camera::AddCommandBufferAsyncImpl", "UnityEngine.Camera::RemoveCommandBufferImpl", "UnityEngine.Camera::GetCommandBuffers", "UnityEngine.Experimental.Playables.CameraPlayable::GetCameraInternal", "UnityEngine.Experimental.Playables.CameraPlayable::SetCameraInternal", "UnityEngine.Experimental.Playables.CameraPlayable::InternalCreateCameraPlayable", "UnityEngine.Experimental.Playables.CameraPlayable::ValidateType", "UnityEngine.DrivenPropertyManager::UnregisterProperties", "UnityEngine.DrivenPropertyManager::RegisterPropertyPartial", "UnityEngine.DrivenPropertyManager::UnregisterPropertyPartial", "colorLA", "colorSA", "UnityEngine.GeometryUtility::TestPlanesAABB_Injected", "UnityEngine.GeometryUtility::Internal_ExtractPlanes_Injected", "UnityEngine.GeometryUtility::Internal_CalculateBounds_Injected", "UnityEngine.Screen::get_width", "UnityEngine.Screen::get_height", "UnityEngine.Screen::get_dpi", "UnityEngine.Screen::RequestOrientation", "UnityEngine.Screen::GetScreenOrientation", "UnityEngine.Screen::get_sleepTimeout", "UnityEngine.Screen::set_sleepTimeout", "UnityEngine.Screen::IsOrientationEnabled", "UnityEngine.Screen::SetOrientationEnabled", "UnityEngine.Screen::get_currentResolution_Injected", "UnityEngine.Screen::get_fullScreen", "UnityEngine.Screen::set_fullScreen", "UnityEngine.Screen::get_fullScreenMode", "UnityEngine.Screen::set_fullScreenMode", "UnityEngine.Screen::get_safeArea_Injected", "UnityEngine.Screen::SetResolution", "UnityEngine.Screen::get_resolutions", "UnityEngine.RenderBuffer::SetLoadAction_Injected", "UnityEngine.RenderBuffer::SetStoreAction_Injected", "UnityEngine.RenderBuffer::GetLoadAction_Injected", "UnityEngine.RenderBuffer::GetStoreAction_Injected", "UnityEngine.RenderBuffer::GetNativeRenderBufferPtr_Injected", "UnityEngineInternal.MemorylessManager::GetFramebufferDepthMemorylessMode", "UnityEngineInternal.MemorylessManager::SetFramebufferDepthMemorylessMode", "UnityEngine.Graphics::Internal_GetMaxDrawMeshInstanceCount", "UnityEngine.Graphics::GetActiveColorGamut", "UnityEngine.Graphics::get_activeTier", "UnityEngine.Graphics::set_activeTier", "UnityEngine.Graphics::GetActiveColorBuffer_Injected", "UnityEngine.Graphics::GetActiveDepthBuffer_Injected", "UnityEngine.Graphics::Internal_SetNullRT", "UnityEngine.Graphics::Internal_SetRTSimple_Injected", "UnityEngine.Graphics::Internal_SetMRTSimple_Injected", "UnityEngine.Graphics::Internal_SetMRTFullSetup_Injected", "UnityEngine.Graphics::Internal_SetRandomWriteTargetRT", "UnityEngine.Graphics::Internal_SetRandomWriteTargetBuffer", "UnityEngine.Graphics::ClearRandomWriteTargets", "UnityEngine.Graphics::CopyTexture_Full", "UnityEngine.Graphics::CopyTexture_Slice_AllMips", "UnityEngine.Graphics::CopyTexture_Slice", "UnityEngine.Graphics::CopyTexture_Region", "UnityEngine.Graphics::ConvertTexture_Full", "UnityEngine.Graphics::ConvertTexture_Slice", "UnityEngine.Graphics::Internal_DrawMeshNow1_Injected", "UnityEngine.Graphics::Internal_DrawMeshNow2_Injected", "UnityEngine.Graphics::Internal_DrawTexture", "UnityEngine.Graphics::Internal_DrawMesh_Injected", "UnityEngine.Graphics::Internal_DrawMeshInstanced", "UnityEngine.Graphics::Internal_DrawMeshInstancedIndirect_Injected", "UnityEngine.Graphics::Internal_DrawProcedural", "UnityEngine.Graphics::Internal_DrawProceduralIndirect", "UnityEngine.Graphics::Internal_BlitMaterial", "UnityEngine.Graphics::Internal_BlitMultiTap", "UnityEngine.Graphics::Blit2", "UnityEngine.Graphics::Blit4_Injected", "UnityEngine.Graphics::CreateGPUFenceImpl", "UnityEngine.Graphics::WaitOnGPUFenceImpl", "UnityEngine.Graphics::ExecuteCommandBuffer", "UnityEngine.Graphics::ExecuteCommandBufferAsync", "UnityEngine.GL::Vertex3", "UnityEngine.GL::TexCoord3", "UnityEngine.GL::MultiTexCoord3", "UnityEngine.GL::ImmediateColor", "UnityEngine.GL::get_wireframe", "UnityEngine.GL::set_wireframe", "UnityEngine.GL::get_sRGBWrite", "UnityEngine.GL::set_sRGBWrite", "UnityEngine.GL::get_invertCulling", "UnityEngine.GL::set_invertCulling", "UnityEngine.GL::Flush", "UnityEngine.GL::RenderTargetBarrier", "UnityEngine.GL::GetWorldViewMatrix_Injected", "UnityEngine.GL::SetViewMatrix_Injected", "UnityEngine.GL::MultMatrix_Injected", "UnityEngine.GL::IssuePluginEvent", "UnityEngine.GL::SetRevertBackfacing", "UnityEngine.GL::PushMatrix", "UnityEngine.GL::PopMatrix", "UnityEngine.GL::LoadIdentity", "UnityEngine.GL::LoadOrtho", "UnityEngine.GL::LoadPixelMatrix", "UnityEngine.GL::LoadProjectionMatrix_Injected", "UnityEngine.GL::InvalidateState", "UnityEngine.GL::GetGPUProjectionMatrix_Injected", "UnityEngine.GL::GLLoadPixelMatrixScript", "UnityEngine.GL::GLIssuePluginEvent", "UnityEngine.GL::Begin", "UnityEngine.GL::End", "UnityEngine.GL::GLClear_Injected", "UnityEngine.GL::Viewport_Injected", "UnityEngine.GL::ClearWithSkybox", "UnityEngine.ScalableBufferManager::get_widthScaleFactor", "UnityEngine.ScalableBufferManager::get_heightScaleFactor", "UnityEngine.ScalableBufferManager::ResizeBuffers", "UnityEngine.FrameTimingManager::CaptureFrameTimings", "UnityEngine.FrameTimingManager::GetLatestTimings", "UnityEngine.FrameTimingManager::GetVSyncsPerSecond", "UnityEngine.FrameTimingManager::GetGpuTimerFrequency", "UnityEngine.FrameTimingManager::GetCpuTimerFrequency", "UnityEngine.LightmapSettings::get_lightmaps", "UnityEngine.LightmapSettings::set_lightmaps", "UnityEngine.LightmapSettings::get_lightmapsMode", "UnityEngine.LightmapSettings::set_lightmapsMode", "UnityEngine.LightmapSettings::get_lightProbes", "UnityEngine.LightmapSettings::set_lightProbes", "UnityEngine.LightmapSettings::Reset", "UnityEngine.LightProbes::GetInterpolatedProbe_Injected", "UnityEngine.LightProbes::AreLightProbesAllowed", "UnityEngine.LightProbes::CalculateInterpolatedLightAndOcclusionProbes_Internal", "UnityEngine.LightProbes::get_positions", "UnityEngine.LightProbes::get_bakedProbes", "UnityEngine.LightProbes::set_bakedProbes", "UnityEngine.LightProbes::get_count", "UnityEngine.LightProbes::get_cellCount", "UnityEngine.Experimental.Rendering.GraphicsDeviceSettings::get_waitForPresentSyncPoint", "UnityEngine.Experimental.Rendering.GraphicsDeviceSettings::set_waitForPresentSyncPoint", "UnityEngine.Experimental.Rendering.GraphicsDeviceSettings::get_graphicsJobsSyncPoint", "UnityEngine.Experimental.Rendering.GraphicsDeviceSettings::set_graphicsJobsSyncPoint", "UnityEngine.RectOffset::InternalCreate", "UnityEngine.RectOffset::InternalDestroy", "UnityEngine.RectOffset::get_left", "UnityEngine.RectOffset::set_left", "UnityEngine.RectOffset::get_right", "UnityEngine.RectOffset::set_right", "UnityEngine.RectOffset::get_top", "UnityEngine.RectOffset::set_top", "UnityEngine.RectOffset::get_bottom", "UnityEngine.RectOffset::set_bottom", "UnityEngine.RectOffset::get_horizontal", "UnityEngine.RectOffset::get_vertical", "UnityEngine.RectOffset::Add_Injected", "UnityEngine.RectOffset::Remove_Injected", "UnityEngine.GUIElement::GetScreenRect_Injected", "UnityEngine.GUIElement::HitTest_Injected", "UnityEngine.GUITexture::get_color_Injected", "UnityEngine.GUITexture::set_color_Injected", "UnityEngine.GUITexture::get_texture", "UnityEngine.GUITexture::set_texture", "UnityEngine.GUITexture::get_pixelInset_Injected", "UnityEngine.GUITexture::set_pixelInset_Injected", "UnityEngine.GUITexture::get_border", "UnityEngine.GUITexture::set_border", "UnityEngine.GUILayer::HitTest_Injected", "UnityEngine.NoAllocHelpers::Internal_ResizeList", "UnityEngine.NoAllocHelpers::ExtractArrayFromList", "UnityEngine.PlayerConnectionInternal::IsConnected", "UnityEngine.PlayerConnectionInternal::Initialize", "UnityEngine.PlayerConnectionInternal::RegisterInternal", "UnityEngine.PlayerConnectionInternal::UnregisterInternal", "UnityEngine.PlayerConnectionInternal::SendMessage", "UnityEngine.PlayerConnectionInternal::PollInternal", "UnityEngine.PlayerConnectionInternal::DisconnectAll", "UnityEngine.Experimental.Playables.TextureMixerPlayable::CreateTextureMixerPlayableInternal", "UnityEngine.Rendering", "UnityEngine.AnimationCurve::Internal_Create", "UnityEngine.AnimationCurve::Internal_Equals", "UnityEngine.AnimationCurve::Evaluate", "UnityEngine.AnimationCurve::AddKey", "UnityEngine.AnimationCurve::AddKey_Internal_Injected", "UnityEngine.AnimationCurve::MoveKey_Injected", "UnityEngine.AnimationCurve::RemoveKey", "UnityEngine.AnimationCurve::get_length", "UnityEngine.AnimationCurve::SetKeys", "UnityEngine.AnimationCurve::GetKey_Injected", "UnityEngine.AnimationCurve::GetKeys", "UnityEngine.AnimationCurve::SmoothTangents", "UnityEngine.AnimationCurve::get_preWrapMode", "UnityEngine.AnimationCurve::set_preWrapMode", "UnityEngine.AnimationCurve::get_postWrapMode", "UnityEngine.AnimationCurve::set_postWrapMode", "UnityEngine.Handheld::PlayFullScreenMovie_Bindings_Injected", "UnityEngine.Handheld::Vibrate", "UnityEngine.Handheld::GetUse32BitDisplayBuffer_Bindings", "UnityEngine.Handheld::SetActivityIndicatorStyleImpl_Bindings", "UnityEngine.Handheld::GetActivityIndicatorStyle", "UnityEngine.Handheld::StartActivityIndicator", "UnityEngine.Handheld::StopActivityIndicator", "UnityEngine.Handheld::ClearShaderCache", "UnityEngine.TouchScreenKeyboard::Internal_Destroy", "UnityEngine.TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper", "UnityEngine.TouchScreenKeyboard::get_text", "UnityEngine.TouchScreenKeyboard::set_text", "UnityEngine.TouchScreenKeyboard::get_hideInput", "UnityEngine.TouchScreenKeyboard::set_hideInput", "UnityEngine.TouchScreenKeyboard::get_active", "UnityEngine.TouchScreenKeyboard::set_active", "UnityEngine.TouchScreenKeyboard::GetDone", "UnityEngine.TouchScreenKeyboard::GetWasCanceled", "UnityEngine.TouchScreenKeyboard::get_status", "UnityEngine.TouchScreenKeyboard::get_characterLimit", "UnityEngine.TouchScreenKeyboard::set_characterLimit", "UnityEngine.TouchScreenKeyboard::GetSelection", "UnityEngine.TouchScreenKeyboard::SetSelection", "UnityEngine.TouchScreenKeyboard::get_area_Injected", "UnityEngine.TouchScreenKeyboard::get_visible", "UnityEngine.Hash128::Parse_Injected", "UnityEngine.Hash128::Internal_Hash128ToString_Injected", "UnityEngine.Hash128::Compute_Injected", "UnityEngine.Light::Reset", "UnityEngine.Light::get_shadows", "UnityEngine.Light::set_shadows", "UnityEngine.Light::get_shadowStrength", "UnityEngine.Light::set_shadowStrength", "UnityEngine.Light::get_shadowResolution", "UnityEngine.Light::set_shadowResolution", "UnityEngine.Light::get_layerShadowCullDistances", "UnityEngine.Light::set_layerShadowCullDistances", "UnityEngine.Light::get_cookieSize", "UnityEngine.Light::set_cookieSize", "UnityEngine.Light::get_cookie", "UnityEngine.Light::set_cookie", "UnityEngine.Light::get_renderMode", "UnityEngine.Light::set_renderMode", "UnityEngine.Light::SetFalloffTable", "UnityEngine.Light::SetAllLightsFalloffToInverseSquared", "UnityEngine.Light::SetAllLightsFalloffToUnityLegacy", "UnityEngine.Light::AddCommandBuffer", "UnityEngine.Light::AddCommandBufferAsync", "UnityEngine.Light::RemoveCommandBuffer", "UnityEngine.Light::RemoveCommandBuffers", "UnityEngine.Light::RemoveAllCommandBuffers", "UnityEngine.Light::GetCommandBuffers", "UnityEngine.Light::get_commandBufferCount", "UnityEngine.Light::GetLights", "UnityEngine.LightProbeProxyVolume::get_isFeatureSupported", "UnityEngine.LightProbeProxyVolume::get_boundsGlobal_Injected", "UnityEngine.LightProbeProxyVolume::get_sizeCustom_Injected", "UnityEngine.LightProbeProxyVolume::set_sizeCustom_Injected", "UnityEngine.LightProbeProxyVolume::get_originCustom_Injected", "UnityEngine.LightProbeProxyVolume::set_originCustom_Injected", "UnityEngine.LightProbeProxyVolume::get_probeDensity", "UnityEngine.LightProbeProxyVolume::set_probeDensity", "UnityEngine.LightProbeProxyVolume::get_gridResolutionX", "UnityEngine.LightProbeProxyVolume::set_gridResolutionX", "UnityEngine.LightProbeProxyVolume::get_gridResolutionY", "UnityEngine.LightProbeProxyVolume::set_gridResolutionY", "UnityEngine.LightProbeProxyVolume::get_gridResolutionZ", "UnityEngine.LightProbeProxyVolume::set_gridResolutionZ", "UnityEngine.LightProbeProxyVolume::get_boundingBoxMode", "UnityEngine.LightProbeProxyVolume::set_boundingBoxMode", "UnityEngine.LightProbeProxyVolume::get_resolutionMode", "UnityEngine.LightProbeProxyVolume::set_resolutionMode", "UnityEngine.LightProbeProxyVolume::get_probePositionMode", "UnityEngine.LightProbeProxyVolume::set_probePositionMode", "UnityEngine.LightProbeProxyVolume::get_refreshMode", "UnityEngine.LightProbeProxyVolume::set_refreshMode", "UnityEngine.LightProbeProxyVolume::get_qualityMode", "UnityEngine.LightProbeProxyVolume::set_qualityMode", "UnityEngine.LightProbeProxyVolume::SetDirtyFlag", "UnityEngine.Bounds::Contains_Injected", "UnityEngine.Bounds::SqrDistance_Injected", "UnityEngine.Bounds::IntersectRayAABB_Injected", "UnityEngine.Bounds::ClosestPoint_Injected", "UnityEngine.Matrix4x4::GetRotation_Injected", "UnityEngine.Matrix4x4::GetLossyScale_Injected", "UnityEngine.Matrix4x4::IsIdentity_Injected", "UnityEngine.Matrix4x4::GetDeterminant_Injected", "UnityEngine.Matrix4x4::DecomposeProjection_Injected", "UnityEngine.Matrix4x4::ValidTRS_Injected", "UnityEngine.Matrix4x4::TRS_Injected", "UnityEngine.Matrix4x4::Inverse_Injected", "UnityEngine.Matrix4x4::Transpose_Injected", "UnityEngine.Matrix4x4::Ortho_Injected", "UnityEngine.Matrix4x4::Perspective_Injected", "UnityEngine.Matrix4x4::LookAt_Injected", "UnityEngine.Matrix4x4::Frustum_Injected", "UnityEngine.Vector3::Slerp_Injected", "UnityEngine.Vector3::SlerpUnclamped_Injected", "UnityEngine.Vector3::OrthoNormalize2", "UnityEngine.Vector3::OrthoNormalize3", "UnityEngine.Vector3::RotateTowards_Injected", "UnityEngine.Quaternion::FromToRotation_Injected", "UnityEngine.Quaternion::Inverse_Injected", "UnityEngine.Quaternion::Slerp_Injected", "UnityEngine.Quaternion::SlerpUnclamped_Injected", "UnityEngine.Quaternion::Lerp_Injected", "UnityEngine.Quaternion::LerpUnclamped_Injected", "UnityEngine.Quaternion::Internal_FromEulerRad_Injected", "UnityEngine.Quaternion::Internal_ToEulerRad_Injected", "UnityEngine.Quaternion::Internal_ToAxisAngleRad_Injected", "UnityEngine.Quaternion::AngleAxis_Injected", "UnityEngine.Quaternion::LookRotation_Injected", "UnityEngine.Mathf::ClosestPowerOfTwo", "UnityEngine.Mathf::IsPowerOfTwo", "UnityEngine.Mathf::NextPowerOfTwo", "UnityEngine.Mathf::GammaToLinearSpace", "UnityEngine.Mathf::LinearToGammaSpace", "UnityEngine.Mathf::CorrelatedColorTemperatureToRGB_Injected", "UnityEngine.Mathf::FloatToHalf", "UnityEngine.Mathf::HalfToFloat", "UnityEngine.Mathf::PerlinNoise", "UnityEngine.MonoBehaviour::StopCoroutine", "UnityEngine.MonoBehaviour::StopAllCoroutines", "UnityEngine.MonoBehaviour::get_useGUILayout", "UnityEngine.MonoBehaviour::set_useGUILayout", "UnityEngine.MonoBehaviour::Internal_CancelInvokeAll", "UnityEngine.MonoBehaviour::Internal_IsInvokingAll", "UnityEngine.MonoBehaviour::InvokeDelayed", "UnityEngine.MonoBehaviour::CancelInvoke", "UnityEngine.MonoBehaviour::IsInvoking", "UnityEngine.MonoBehaviour::IsObjectMonoBehaviour", "UnityEngine.MonoBehaviour::StartCoroutineManaged", "UnityEngine.MonoBehaviour::StartCoroutineManaged2", "UnityEngine.MonoBehaviour::StopCoroutineManaged", "UnityEngine.MonoBehaviour::StopCoroutineFromEnumeratorManaged", "UnityEngine.MonoBehaviour::GetScriptClassName", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::BeginRenderPassInternal", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::BeginSubPassInternal", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::EndRenderPassInternal", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::Submit_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::DrawRenderers_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::DrawRenderers_StateBlock_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::DrawRenderers_StateMap_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::DrawShadows_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::ExecuteCommandBuffer_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::ExecuteCommandBufferAsync_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::SetupCameraProperties_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::StereoEndRender_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::StartMultiEye_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::StopMultiEye_Internal_Injected", "UnityEngine.Experimental.Rendering.ScriptableRenderContext::DrawSkybox_Internal_Injected", "Invalid value for shadows", "Shadow strength %f was clamped to 0..1 range.", "Invalid value for shadowResolution", "Array needs to contain exactly 32 floats for layerShadowCullDistances (or 0/null to clear all distances).", "Invalid value for renderMode", "Falloff table index %zu is outside of range 0.0 to 1.0", "Array size mismatch, table size should be 13.", "Look rotation viewing vector is zero", "UnityEngine.Application::Quit", "UnityEngine.Application::CancelQuit", "UnityEngine.Application::Unload", "UnityEngine.Application::get_isLoadingLevel", "UnityEngine.Application::CanStreamedLevelBeLoaded", "UnityEngine.Application::get_isPlaying", "UnityEngine.Application::IsPlaying", "UnityEngine.Application::get_isFocused", "UnityEngine.Application::get_platform", "UnityEngine.Application::GetBuildTags", "UnityEngine.Application::SetBuildTags", "UnityEngine.Application::get_buildGUID", "UnityEngine.Application::get_runInBackground", "UnityEngine.Application::set_runInBackground", "UnityEngine.Application::HasProLicense", "UnityEngine.Application::get_isBatchMode", "UnityEngine.Application::get_isTestRun", "UnityEngine.Application::get_isHumanControllingUs", "UnityEngine.Application::HasARGV", "UnityEngine.Application::GetValueForARGV", "UnityEngine.Application::get_dataPath", "UnityEngine.Application::get_streamingAssetsPath", "UnityEngine.Application::get_persistentDataPath", "UnityEngine.Application::get_temporaryCachePath", "UnityEngine.Application::get_absoluteURL", "UnityEngine.Application::Internal_ExternalCall", "UnityEngine.Application::get_unityVersion", "UnityEngine.Application::get_version", "UnityEngine.Application::get_installerName", "UnityEngine.Application::get_identifier", "UnityEngine.Application::get_installMode", "UnityEngine.Application::get_sandboxType", "UnityEngine.Application::get_productName", "UnityEngine.Application::get_companyName", "UnityEngine.Application::get_cloudProjectId", "UnityEngine.Application::RequestAdvertisingIdentifierAsync", "UnityEngine.Application::OpenURL", "UnityEngine.Application::get_targetFrameRate", "UnityEngine.Application::set_targetFrameRate", "UnityEngine.Application::get_systemLanguage", "UnityEngine.Application::SetLogCallbackDefined", "UnityEngine.Application::get_stackTraceLogType", "UnityEngine.Application::set_stackTraceLogType", "UnityEngine.Application::GetStackTraceLogType", "UnityEngine.Application::SetStackTraceLogType", "UnityEngine.Application::get_consoleLogPath", "UnityEngine.Application::get_backgroundLoadingPriority", "UnityEngine.Application::set_backgroundLoadingPriority", "UnityEngine.Application::get_internetReachability", "UnityEngine.Application::get_genuine", "UnityEngine.Application::get_genuineCheckAvailable", "UnityEngine.Application::RequestUserAuthorization", "UnityEngine.Application::HasUserAuthorization", "UnityEngine.Application::get_submitAnalytics", "UnityEngine.Behaviour::get_enabled", "UnityEngine.Behaviour::set_enabled", "UnityEngine.Behaviour::get_isActiveAndEnabled", "UnityEngine.Profiling.Profiler::get_supported", "UnityEngine.Profiling.Profiler::get_logFile", "UnityEngine.Profiling.Profiler::set_logFile", "UnityEngine.Profiling.Profiler::get_enableBinaryLog", "UnityEngine.Profiling.Profiler::set_enableBinaryLog", "UnityEngine.Profiling.Profiler::get_maxUsedMemory", "UnityEngine.Profiling.Profiler::set_maxUsedMemory", "UnityEngine.Profiling.Profiler::get_enabled", "UnityEngine.Profiling.Profiler::set_enabled", "UnityEngine.Profiling.Profiler::SetAreaEnabled", "UnityEngine.Profiling.Profiler::GetAreaEnabled", "UnityEngine.Profiling.Profiler::AddFramesFromFile_Internal", "UnityEngine.Profiling.Profiler::BeginThreadProfilingInternal", "UnityEngine.Profiling.Profiler::EndThreadProfiling", "UnityEngine.Profiling.Profiler::BeginSampleImpl", "UnityEngine.Profiling.Profiler::EndSample", "UnityEngine.Profiling.Profiler::get_usedHeapSizeLong", "UnityEngine.Profiling.Profiler::GetRuntimeMemorySizeLong", "UnityEngine.Profiling.Profiler::GetMonoHeapSizeLong", "UnityEngine.Profiling.Profiler::GetMonoUsedSizeLong", "UnityEngine.Profiling.Profiler::SetTempAllocatorRequestedSize", "UnityEngine.Profiling.Profiler::GetTempAllocatorSize", "UnityEngine.Profiling.Profiler::GetTotalAllocatedMemoryLong", "UnityEngine.Profiling.Profiler::GetTotalUnusedReservedMemoryLong", "UnityEngine.Profiling.Profiler::GetTotalReservedMemoryLong", "UnityEngine.Profiling.Profiler::GetAllocatedMemoryForGraphicsDriver", "UnityEngine.Experimental.Playables.TexturePlayableOutput::InternalGetTarget", "UnityEngine.Experimental.Playables.TexturePlayableOutput::InternalSetTarget", "Unity.Burst.LowLevel.BurstCompilerService::InitializeInternal", "Unity.Burst.LowLevel.BurstCompilerService::GetDisassembly", "Unity.Burst.LowLevel.BurstCompilerService::CompileAsyncDelegateMethod", "Unity.Burst.LowLevel.BurstCompilerService::GetAsyncCompiledAsyncDelegateMethod", "Unity.Burst.LowLevel.BurstCompilerService::GetMethodSignature", "Unity.Burst.LowLevel.BurstCompilerService::get_IsInitialized", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetGraphicsFormat_Native_TextureFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetTextureFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetGraphicsFormat_Native_RenderTextureFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsSRGBFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetRenderTextureFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetColorComponentCount", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetAlphaComponentCount", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetComponentCount", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsCompressedFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsCompressedTextureFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsPackedFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::Is16BitPackedFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::ConvertToAlphaFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsAlphaOnlyFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::HasAlphaChannel", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsDepthFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsStencilFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsIEEE754Format", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsFloatFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsHalfFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsUnsignedFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsSignedFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsNormFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsUNormFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsSNormFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsIntegerFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsUIntFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsSIntFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsDXTCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsRGTCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsBPTCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsBCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsPVRTCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsETCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::IsASTCFormat", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetBlockSize", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetBlockWidth", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::GetBlockHeight", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::ComputeMipmapSize_Native_2D", "UnityEngine.Experimental.Rendering.GraphicsFormatUtility::ComputeMipmapSize_Native_3D", "UnityEngine.Profiling.Memory.Experimental.MemoryProfiler::TakeSnapshotInternal", "UnityEngine.U2D.SpriteAtlasManager::Register", "UnityEngine.U2D.SpriteAtlas::get_isVariant", "UnityEngine.U2D.SpriteAtlas::get_tag", "UnityEngine.U2D.SpriteAtlas::get_spriteCount", "UnityEngine.U2D.SpriteAtlas::CanBindTo", "UnityEngine.U2D.SpriteAtlas::GetSprite", "UnityEngine.U2D.SpriteAtlas::GetSpritesScripting", "UnityEngine.U2D.SpriteAtlas::GetSpritesWithNameScripting", "UnityEngine.Time::get_time", "UnityEngine.Time::get_timeSinceLevelLoad", "UnityEngine.Time::get_deltaTime", "UnityEngine.Time::get_fixedTime", "UnityEngine.Time::get_unscaledTime", "UnityEngine.Time::get_fixedUnscaledTime", "UnityEngine.Time::get_unscaledDeltaTime", "UnityEngine.Time::get_fixedUnscaledDeltaTime", "UnityEngine.Time::get_fixedDeltaTime", "UnityEngine.Time::set_fixedDeltaTime", "UnityEngine.Time::get_maximumDeltaTime", "UnityEngine.Time::set_maximumDeltaTime", "UnityEngine.Time::get_smoothDeltaTime", "UnityEngine.Time::get_maximumParticleDeltaTime", "UnityEngine.Time::set_maximumParticleDeltaTime", "UnityEngine.Time::get_timeScale", "UnityEngine.Time::set_timeScale", "UnityEngine.Time::get_frameCount", "UnityEngine.Time::get_renderedFrameCount", "UnityEngine.Time::get_realtimeSinceStartup", "UnityEngine.Time::get_captureFramerate", "UnityEngine.Time::set_captureFramerate", "UnityEngine.Time::get_inFixedTimeStep", "UnityEngine.GameObject::CreatePrimitive", "UnityEngine.GameObject::GetComponent", "UnityEngine.GameObject::GetComponentFastPath", "UnityEngine.GameObject::GetComponentByName", "UnityEngine.GameObject::GetComponentInChildren", "UnityEngine.GameObject::GetComponentInParent", "UnityEngine.GameObject::GetComponentsInternal", "UnityEngine.GameObject::AddComponentInternal", "UnityEngine.GameObject::Internal_AddComponentWithType", "UnityEngine.GameObject::get_transform", "UnityEngine.GameObject::get_layer", "UnityEngine.GameObject::set_layer", "UnityEngine.GameObject::get_active", "UnityEngine.GameObject::set_active", "UnityEngine.GameObject::SetActive", "UnityEngine.GameObject::get_activeSelf", "UnityEngine.GameObject::get_activeInHierarchy", "UnityEngine.GameObject::SetActiveRecursively", "UnityEngine.GameObject::get_isStatic", "UnityEngine.GameObject::set_isStatic", "UnityEngine.GameObject::get_isStaticBatchable", "UnityEngine.GameObject::get_tag", "UnityEngine.GameObject::set_tag", "UnityEngine.GameObject::CompareTag", "UnityEngine.GameObject::FindGameObjectWithTag", "UnityEngine.GameObject::FindGameObjectsWithTag", "UnityEngine.GameObject::SendMessageUpwards", "UnityEngine.GameObject::SendMessage", "UnityEngine.GameObject::BroadcastMessage", "UnityEngine.GameObject::Internal_CreateGameObject", "UnityEngine.GameObject::Find", "UnityEngine.GameObject::get_scene_Injected", "Unity.Jobs.JobHandle::ScheduleBatchedJobs", "Unity.Jobs.JobHandle::ScheduleBatchedJobsAndComplete", "Unity.Jobs.JobHandle::ScheduleBatchedJobsAndIsCompleted", "Unity.Jobs.JobHandle::ScheduleBatchedJobsAndCompleteAll", "Unity.Jobs.JobHandle::CombineDependenciesInternal2_Injected", "Unity.Jobs.JobHandle::CombineDependenciesInternal3_Injected", "Unity.Jobs.JobHandle::CombineDependenciesInternalPtr_Injected", "Unity.Jobs.JobHandle::CheckFenceIsDependencyOrDidSyncFence_Injected", "UnityEngine.Playables.PlayableOutputHandle::IsNull_Injected", "UnityEngine.Playables.PlayableOutputHandle::IsValid_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetPlayableOutputType_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetReferenceObject_Injected", "UnityEngine.Playables.PlayableOutputHandle::SetReferenceObject_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetUserData_Injected", "UnityEngine.Playables.PlayableOutputHandle::SetUserData_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetSourcePlayable_Injected", "UnityEngine.Playables.PlayableOutputHandle::SetSourcePlayable_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetSourceOutputPort_Injected", "UnityEngine.Playables.PlayableOutputHandle::SetSourceOutputPort_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetWeight_Injected", "UnityEngine.Playables.PlayableOutputHandle::SetWeight_Injected", "UnityEngine.Playables.PlayableOutputHandle::PushNotification_Injected", "UnityEngine.Playables.PlayableOutputHandle::GetNotificationReceivers_Injected", "UnityEngine.Playables.PlayableOutputHandle::AddNotificationReceiver_Injected", "UnityEngine.Playables.PlayableOutputHandle::RemoveNotificationReceiver_Injected", "systemTypeInstance", "UnityEngine.Resources::FindObjectsOfTypeAll", "UnityEngine.Resources::Load", "UnityEngine.Resources::LoadAsyncInternal", "UnityEngine.Resources::LoadAll", "UnityEngine.Resources::GetBuiltinResource", "UnityEngine.Resources::UnloadAsset", "UnityEngine.Resources::UnloadUnusedAssets", "argsBuffer", "UnityEngine.MaterialPropertyBlock::GetFloatImpl", "UnityEngine.MaterialPropertyBlock::GetVectorImpl_Injected", "UnityEngine.MaterialPropertyBlock::GetColorImpl_Injected", "UnityEngine.MaterialPropertyBlock::GetMatrixImpl_Injected", "UnityEngine.MaterialPropertyBlock::GetTextureImpl", "UnityEngine.MaterialPropertyBlock::SetFloatImpl", "UnityEngine.MaterialPropertyBlock::SetVectorImpl_Injected", "UnityEngine.MaterialPropertyBlock::SetColorImpl_Injected", "UnityEngine.MaterialPropertyBlock::SetMatrixImpl_Injected", "UnityEngine.MaterialPropertyBlock::SetTextureImpl", "UnityEngine.MaterialPropertyBlock::SetBufferImpl", "UnityEngine.MaterialPropertyBlock::SetFloatArrayImpl", "UnityEngine.MaterialPropertyBlock::SetVectorArrayImpl", "UnityEngine.MaterialPropertyBlock::SetMatrixArrayImpl", "UnityEngine.MaterialPropertyBlock::GetFloatArrayImpl", "UnityEngine.MaterialPropertyBlock::GetVectorArrayImpl", "UnityEngine.MaterialPropertyBlock::GetMatrixArrayImpl", "UnityEngine.MaterialPropertyBlock::GetFloatArrayCountImpl", "UnityEngine.MaterialPropertyBlock::GetVectorArrayCountImpl", "UnityEngine.MaterialPropertyBlock::GetMatrixArrayCountImpl", "UnityEngine.MaterialPropertyBlock::ExtractFloatArrayImpl", "UnityEngine.MaterialPropertyBlock::ExtractVectorArrayImpl", "UnityEngine.MaterialPropertyBlock::ExtractMatrixArrayImpl", "UnityEngine.MaterialPropertyBlock::Internal_CopySHCoefficientArraysFrom", "UnityEngine.MaterialPropertyBlock::Internal_CopyProbeOcclusionArrayFrom", "UnityEngine.MaterialPropertyBlock::CreateImpl", "UnityEngine.MaterialPropertyBlock::DestroyImpl", "UnityEngine.MaterialPropertyBlock::get_isEmpty", "UnityEngine.MaterialPropertyBlock::Clear", "UnityEngine.Shader::Find", "UnityEngine.Shader::FindBuiltin", "UnityEngine.Shader::get_maximumLOD", "UnityEngine.Shader::set_maximumLOD", "UnityEngine.Shader::get_globalMaximumLOD", "UnityEngine.Shader::set_globalMaximumLOD", "UnityEngine.Shader::get_isSupported", "UnityEngine.Shader::get_globalRenderPipeline", "UnityEngine.Shader::set_globalRenderPipeline", "UnityEngine.Shader::EnableKeyword", "UnityEngine.Shader::DisableKeyword", "UnityEngine.Shader::IsKeywordEnabled", "UnityEngine.Shader::get_renderQueue", "UnityEngine.Shader::get_disableBatching", "UnityEngine.Shader::WarmupAllShaders", "UnityEngine.Shader::TagToID", "UnityEngine.Shader::IDToTag", "UnityEngine.Shader::PropertyToID", "UnityEngine.Shader::SetGlobalFloatImpl", "UnityEngine.Shader::SetGlobalVectorImpl_Injected", "UnityEngine.Shader::SetGlobalMatrixImpl_Injected", "UnityEngine.Shader::SetGlobalTextureImpl", "UnityEngine.Shader::SetGlobalBufferImpl", "UnityEngine.Shader::GetGlobalFloatImpl", "UnityEngine.Shader::GetGlobalVectorImpl_Injected", "UnityEngine.Shader::GetGlobalMatrixImpl_Injected", "UnityEngine.Shader::GetGlobalTextureImpl", "UnityEngine.Shader::SetGlobalFloatArrayImpl", "UnityEngine.Shader::SetGlobalVectorArrayImpl", "UnityEngine.Shader::SetGlobalMatrixArrayImpl", "UnityEngine.Shader::GetGlobalFloatArrayImpl", "UnityEngine.Shader::GetGlobalVectorArrayImpl", "UnityEngine.Shader::GetGlobalMatrixArrayImpl", "UnityEngine.Shader::GetGlobalFloatArrayCountImpl", "UnityEngine.Shader::GetGlobalVectorArrayCountImpl", "UnityEngine.Shader::GetGlobalMatrixArrayCountImpl", "UnityEngine.Shader::ExtractGlobalFloatArrayImpl", "UnityEngine.Shader::ExtractGlobalVectorArrayImpl", "UnityEngine.Shader::ExtractGlobalMatrixArrayImpl", "UnityEngine.Material::CreateWithShader", "UnityEngine.Material::CreateWithMaterial", "UnityEngine.Material::CreateWithString", "UnityEngine.Material::GetDefaultMaterial", "UnityEngine.Material::GetDefaultParticleMaterial", "UnityEngine.Material::GetDefaultLineMaterial", "UnityEngine.Material::get_shader", "UnityEngine.Material::set_shader", "UnityEngine.Material::HasProperty", "UnityEngine.Material::get_renderQueue", "UnityEngine.Material::set_renderQueue", "UnityEngine.Material::get_rawRenderQueue", "UnityEngine.Material::EnableKeyword", "UnityEngine.Material::DisableKeyword", "UnityEngine.Material::IsKeywordEnabled", "UnityEngine.Material::get_globalIlluminationFlags", "UnityEngine.Material::set_globalIlluminationFlags", "UnityEngine.Material::get_doubleSidedGI", "UnityEngine.Material::set_doubleSidedGI", "UnityEngine.Material::get_enableInstancing", "UnityEngine.Material::set_enableInstancing", "UnityEngine.Material::get_passCount", "UnityEngine.Material::SetShaderPassEnabled", "UnityEngine.Material::GetShaderPassEnabled", "UnityEngine.Material::GetPassName", "UnityEngine.Material::FindPass", "UnityEngine.Material::SetOverrideTag", "UnityEngine.Material::GetTagImpl", "UnityEngine.Material::Lerp", "UnityEngine.Material::SetPass", "UnityEngine.Material::CopyPropertiesFromMaterial", "UnityEngine.Material::GetShaderKeywords", "UnityEngine.Material::SetShaderKeywords", "UnityEngine.Material::GetTexturePropertyNames", "UnityEngine.Material::GetTexturePropertyNameIDs", "UnityEngine.Material::GetTexturePropertyNamesInternal", "UnityEngine.Material::GetTexturePropertyNameIDsInternal", "UnityEngine.Material::SetFloatImpl", "UnityEngine.Material::SetColorImpl_Injected", "UnityEngine.Material::SetMatrixImpl_Injected", "UnityEngine.Material::SetTextureImpl", "UnityEngine.Material::SetBufferImpl", "UnityEngine.Material::GetFloatImpl", "UnityEngine.Material::GetColorImpl_Injected", "UnityEngine.Material::GetMatrixImpl_Injected", "UnityEngine.Material::GetTextureImpl", "UnityEngine.Material::SetFloatArrayImpl", "UnityEngine.Material::SetVectorArrayImpl", "UnityEngine.Material::SetColorArrayImpl", "UnityEngine.Material::SetMatrixArrayImpl", "UnityEngine.Material::GetFloatArrayImpl", "UnityEngine.Material::GetVectorArrayImpl", "UnityEngine.Material::GetColorArrayImpl", "UnityEngine.Material::GetMatrixArrayImpl", "UnityEngine.Material::GetFloatArrayCountImpl", "UnityEngine.Material::GetVectorArrayCountImpl", "UnityEngine.Material::GetColorArrayCountImpl", "UnityEngine.Material::GetMatrixArrayCountImpl", "UnityEngine.Material::ExtractFloatArrayImpl", "UnityEngine.Material::ExtractVectorArrayImpl", "UnityEngine.Material::ExtractColorArrayImpl", "UnityEngine.Material::ExtractMatrixArrayImpl", "UnityEngine.Material::GetTextureScaleAndOffsetImpl_Injected", "UnityEngine.Material::SetTextureOffsetImpl_Injected", "UnityEngine.Material::SetTextureScaleImpl_Injected", "UnityEngine.ShaderVariantCollection::get_shaderCount", "UnityEngine.ShaderVariantCollection::get_variantCount", "UnityEngine.ShaderVariantCollection::get_isWarmedUp", "UnityEngine.ShaderVariantCollection::AddVariant", "UnityEngine.ShaderVariantCollection::RemoveVariant", "UnityEngine.ShaderVariantCollection::ContainsVariant", "UnityEngine.ShaderVariantCollection::Clear", "UnityEngine.ShaderVariantCollection::WarmUp", "UnityEngine.ShaderVariantCollection::Internal_Create", "UnityEngine.ShaderVariantCollection/ShaderVariant::CheckShaderVariant", "UnityEngine.ComputeShader::FindKernel", "UnityEngine.ComputeShader::HasKernel", "UnityEngine.ComputeShader::SetFloat", "UnityEngine.ComputeShader::SetInt", "UnityEngine.ComputeShader::SetVector_Injected", "UnityEngine.ComputeShader::SetMatrix_Injected", "UnityEngine.ComputeShader::SetFloatArray", "UnityEngine.ComputeShader::SetIntArray", "UnityEngine.ComputeShader::SetVectorArray", "UnityEngine.ComputeShader::SetMatrixArray", "UnityEngine.ComputeShader::SetTexture", "UnityEngine.ComputeShader::SetTextureFromGlobal", "UnityEngine.ComputeShader::SetBuffer", "UnityEngine.ComputeShader::GetKernelThreadGroupSizes", "UnityEngine.ComputeShader::Dispatch", "UnityEngine.ComputeShader::Internal_DispatchIndirect", "UnityEngine.Rendering.SphericalHarmonicsL2::SetZero_Injected", "UnityEngine.Rendering.SphericalHarmonicsL2::AddAmbientLight_Injected", "UnityEngine.Rendering.SphericalHarmonicsL2::AddDirectionalLightInternal_Injected", "UnityEngine.Rendering.SphericalHarmonicsL2::EvaluateInternal", "GameObject has undefined tag!", "UnityEngine.QualitySettings::get_pixelLightCount", "UnityEngine.QualitySettings::set_pixelLightCount", "UnityEngine.QualitySettings::get_shadows", "UnityEngine.QualitySettings::set_shadows", "UnityEngine.QualitySettings::get_shadowProjection", "UnityEngine.QualitySettings::set_shadowProjection", "UnityEngine.QualitySettings::get_shadowCascades", "UnityEngine.QualitySettings::set_shadowCascades", "UnityEngine.QualitySettings::get_shadowDistance", "UnityEngine.QualitySettings::set_shadowDistance", "UnityEngine.QualitySettings::get_shadowResolution", "UnityEngine.QualitySettings::set_shadowResolution", "UnityEngine.QualitySettings::get_shadowmaskMode", "UnityEngine.QualitySettings::set_shadowmaskMode", "UnityEngine.QualitySettings::get_shadowNearPlaneOffset", "UnityEngine.QualitySettings::set_shadowNearPlaneOffset", "UnityEngine.QualitySettings::get_shadowCascade2Split", "UnityEngine.QualitySettings::set_shadowCascade2Split", "UnityEngine.QualitySettings::get_shadowCascade4Split_Injected", "UnityEngine.QualitySettings::set_shadowCascade4Split_Injected", "UnityEngine.QualitySettings::get_lodBias", "UnityEngine.QualitySettings::set_lodBias", "UnityEngine.QualitySettings::get_anisotropicFiltering", "UnityEngine.QualitySettings::set_anisotropicFiltering", "UnityEngine.QualitySettings::get_masterTextureLimit", "UnityEngine.QualitySettings::set_masterTextureLimit", "UnityEngine.QualitySettings::get_maximumLODLevel", "UnityEngine.QualitySettings::set_maximumLODLevel", "UnityEngine.QualitySettings::get_particleRaycastBudget", "UnityEngine.QualitySettings::set_particleRaycastBudget", "UnityEngine.QualitySettings::get_softParticles", "UnityEngine.QualitySettings::set_softParticles", "UnityEngine.QualitySettings::get_softVegetation", "UnityEngine.QualitySettings::set_softVegetation", "UnityEngine.QualitySettings::get_vSyncCount", "UnityEngine.QualitySettings::set_vSyncCount", "UnityEngine.QualitySettings::get_antiAliasing", "UnityEngine.QualitySettings::set_antiAliasing", "UnityEngine.QualitySettings::get_asyncUploadTimeSlice", "UnityEngine.QualitySettings::set_asyncUploadTimeSlice", "UnityEngine.QualitySettings::get_asyncUploadBufferSize", "UnityEngine.QualitySettings::set_asyncUploadBufferSize", "UnityEngine.QualitySettings::get_asyncUploadPersistentBuffer", "UnityEngine.QualitySettings::set_asyncUploadPersistentBuffer", "UnityEngine.QualitySettings::get_realtimeReflectionProbes", "UnityEngine.QualitySettings::set_realtimeReflectionProbes", "UnityEngine.QualitySettings::get_billboardsFaceCameraPosition", "UnityEngine.QualitySettings::set_billboardsFaceCameraPosition", "UnityEngine.QualitySettings::get_resolutionScalingFixedDPIFactor", "UnityEngine.QualitySettings::set_resolutionScalingFixedDPIFactor", "UnityEngine.QualitySettings::get_blendWeights", "UnityEngine.QualitySettings::set_blendWeights", "UnityEngine.QualitySettings::get_streamingMipmapsActive", "UnityEngine.QualitySettings::set_streamingMipmapsActive", "UnityEngine.QualitySettings::get_streamingMipmapsMemoryBudget", "UnityEngine.QualitySettings::set_streamingMipmapsMemoryBudget", "UnityEngine.QualitySettings::get_streamingMipmapsRenderersPerFrame", "UnityEngine.QualitySettings::get_streamingMipmapsMaxLevelReduction", "UnityEngine.QualitySettings::set_streamingMipmapsMaxLevelReduction", "UnityEngine.QualitySettings::get_streamingMipmapsAddAllCameras", "UnityEngine.QualitySettings::set_streamingMipmapsAddAllCameras", "UnityEngine.QualitySettings::get_streamingMipmapsMaxFileIORequests", "UnityEngine.QualitySettings::set_streamingMipmapsMaxFileIORequests", "UnityEngine.QualitySettings::get_maxQueuedFrames", "UnityEngine.QualitySettings::set_maxQueuedFrames", "UnityEngine.QualitySettings::GetQualityLevel", "UnityEngine.QualitySettings::SetQualityLevel", "UnityEngine.QualitySettings::get_names", "UnityEngine.QualitySettings::get_desiredColorSpace", "UnityEngine.QualitySettings::get_activeColorSpace", "UnityEngine.RenderSettings::get_fog", "UnityEngine.RenderSettings::set_fog", "UnityEngine.RenderSettings::get_fogStartDistance", "UnityEngine.RenderSettings::set_fogStartDistance", "UnityEngine.RenderSettings::get_fogEndDistance", "UnityEngine.RenderSettings::set_fogEndDistance", "UnityEngine.RenderSettings::get_fogMode", "UnityEngine.RenderSettings::set_fogMode", "UnityEngine.RenderSettings::get_fogColor_Injected", "UnityEngine.RenderSettings::set_fogColor_Injected", "UnityEngine.RenderSettings::get_fogDensity", "UnityEngine.RenderSettings::set_fogDensity", "UnityEngine.RenderSettings::get_ambientMode", "UnityEngine.RenderSettings::set_ambientMode", "UnityEngine.RenderSettings::get_ambientSkyColor_Injected", "UnityEngine.RenderSettings::set_ambientSkyColor_Injected", "UnityEngine.RenderSettings::get_ambientEquatorColor_Injected", "UnityEngine.RenderSettings::set_ambientEquatorColor_Injected", "UnityEngine.RenderSettings::get_ambientGroundColor_Injected", "UnityEngine.RenderSettings::set_ambientGroundColor_Injected", "UnityEngine.RenderSettings::get_ambientIntensity", "UnityEngine.RenderSettings::set_ambientIntensity", "UnityEngine.RenderSettings::get_ambientLight_Injected", "UnityEngine.RenderSettings::set_ambientLight_Injected", "UnityEngine.RenderSettings::get_subtractiveShadowColor_Injected", "UnityEngine.RenderSettings::set_subtractiveShadowColor_Injected", "UnityEngine.RenderSettings::get_skybox", "UnityEngine.RenderSettings::set_skybox", "UnityEngine.RenderSettings::get_sun", "UnityEngine.RenderSettings::set_sun", "UnityEngine.RenderSettings::get_ambientProbe_Injected", "UnityEngine.RenderSettings::set_ambientProbe_Injected", "UnityEngine.RenderSettings::get_customReflection", "UnityEngine.RenderSettings::set_customReflection", "UnityEngine.RenderSettings::get_reflectionIntensity", "UnityEngine.RenderSettings::set_reflectionIntensity", "UnityEngine.RenderSettings::get_reflectionBounces", "UnityEngine.RenderSettings::set_reflectionBounces", "UnityEngine.RenderSettings::get_defaultReflectionMode", "UnityEngine.RenderSettings::set_defaultReflectionMode", "UnityEngine.RenderSettings::get_defaultReflectionResolution", "UnityEngine.RenderSettings::set_defaultReflectionResolution", "UnityEngine.RenderSettings::get_haloStrength", "UnityEngine.RenderSettings::set_haloStrength", "UnityEngine.RenderSettings::get_flareStrength", "UnityEngine.RenderSettings::set_flareStrength", "UnityEngine.RenderSettings::get_flareFadeSpeed", "UnityEngine.RenderSettings::set_flareFadeSpeed", "UnityEngine.RenderSettings::GetRenderSettings", "UnityEngine.RenderSettings::Reset", "UnityEditor.Experimental.RenderSettings::get_useRadianceAmbientProbe", "UnityEditor.Experimental.RenderSettings::set_useRadianceAmbientProbe", "UnityEngine.Rendering.GraphicsSettings::get_transparencySortMode", "UnityEngine.Rendering.GraphicsSettings::set_transparencySortMode", "UnityEngine.Rendering.GraphicsSettings::get_transparencySortAxis_Injected", "UnityEngine.Rendering.GraphicsSettings::set_transparencySortAxis_Injected", "UnityEngine.Rendering.GraphicsSettings::get_lightsUseLinearIntensity", "UnityEngine.Rendering.GraphicsSettings::set_lightsUseLinearIntensity", "UnityEngine.Rendering.GraphicsSettings::get_lightsUseColorTemperature", "UnityEngine.Rendering.GraphicsSettings::set_lightsUseColorTemperature", "UnityEngine.Rendering.GraphicsSettings::get_useScriptableRenderPipelineBatching", "UnityEngine.Rendering.GraphicsSettings::set_useScriptableRenderPipelineBatching", "UnityEngine.Rendering.GraphicsSettings::HasShaderDefine", "UnityEngine.Rendering.GraphicsSettings::get_INTERNAL_renderPipelineAsset", "UnityEngine.Rendering.GraphicsSettings::set_INTERNAL_renderPipelineAsset", "UnityEngine.Rendering.GraphicsSettings::GetGraphicsSettings", "UnityEngine.Rendering.GraphicsSettings::SetShaderMode", "UnityEngine.Rendering.GraphicsSettings::GetShaderMode", "UnityEngine.Rendering.GraphicsSettings::SetCustomShader", "UnityEngine.Rendering.GraphicsSettings::GetCustomShader", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::GetWorkStealingRange", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::Schedule_Injected", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::ScheduleParallelFor_Injected", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::ScheduleParallelForDeferArraySize_Injected", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::ScheduleParallelForTransform_Injected", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::PatchBufferMinMaxRanges", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::CreateJobReflectionData", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::get_JobDebuggerEnabled", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::set_JobDebuggerEnabled", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::get_JobCompilerEnabled", "Unity.Jobs.LowLevel.Unsafe.JobsUtility::set_JobCompilerEnabled", "UnityEngine.Playables.PlayableGraph::Create_Injected", "UnityEngine.Playables.PlayableGraph::Destroy_Injected", "UnityEngine.Playables.PlayableGraph::IsValid_Injected", "UnityEngine.Playables.PlayableGraph::IsPlaying_Injected", "UnityEngine.Playables.PlayableGraph::IsDone_Injected", "UnityEngine.Playables.PlayableGraph::Play_Injected", "UnityEngine.Playables.PlayableGraph::Stop_Injected", "UnityEngine.Playables.PlayableGraph::Evaluate_Injected", "UnityEngine.Playables.PlayableGraph::GetTimeUpdateMode_Injected", "UnityEngine.Playables.PlayableGraph::SetTimeUpdateMode_Injected", "UnityEngine.Playables.PlayableGraph::GetResolver_Injected", "UnityEngine.Playables.PlayableGraph::SetResolver_Injected", "UnityEngine.Playables.PlayableGraph::GetPlayableCount_Injected", "UnityEngine.Playables.PlayableGraph::GetRootPlayableCount_Injected", "UnityEngine.Playables.PlayableGraph::GetOutputCount_Injected", "UnityEngine.Playables.PlayableGraph::CreatePlayableHandle_Injected", "UnityEngine.Playables.PlayableGraph::CreateScriptOutputInternal_Injected", "UnityEngine.Playables.PlayableGraph::GetRootPlayableInternal_Injected", "UnityEngine.Playables.PlayableGraph::DestroyOutputInternal_Injected", "UnityEngine.Playables.PlayableGraph::GetOutputInternal_Injected", "UnityEngine.Playables.PlayableGraph::GetOutputCountByTypeInternal_Injected", "UnityEngine.Playables.PlayableGraph::GetOutputByTypeInternal_Injected", "UnityEngine.Playables.PlayableGraph::ConnectInternal_Injected", "UnityEngine.Playables.PlayableGraph::DisconnectInternal_Injected", "UnityEngine.Playables.PlayableGraph::DestroyPlayableInternal_Injected", "UnityEngine.Playables.PlayableGraph::DestroySubgraphInternal_Injected", "UnityEngine.Experimental.LowLevel.PlayerLoop::GetDefaultPlayerLoopInternal", "UnityEngine.Experimental.LowLevel.PlayerLoop::SetPlayerLoopInternal", "UnityEngine.Experimental.LowLevel", "PlayerLoopSystemInternal", "UnityEngine.AndroidInput::GetTouch_Bindings_Injected", "UnityEngine.AndroidInput::GetTouchCount_Bindings", "UnityEngine.AndroidInput::IsInputDeviceEnabled_Bindings", "UnityEngine.AndroidInput::GetTouchpadWidth", "UnityEngine.AndroidInput::GetTouchpadHeight", "AndroidJNI", "java/lang/Object", "UnityEngine.AndroidJNIHelper::get_debug", "UnityEngine.AndroidJNIHelper::set_debug", "UnityEngine.AndroidJNIHelper::CreateJavaProxy", "UnityEngine.AndroidJNI::AttachCurrentThread", "UnityEngine.AndroidJNI::DetachCurrentThread", "UnityEngine.AndroidJNI::GetVersion", "UnityEngine.AndroidJNI::FindClass", "UnityEngine.AndroidJNI::FromReflectedMethod", "UnityEngine.AndroidJNI::FromReflectedField", "UnityEngine.AndroidJNI::ToReflectedMethod", "UnityEngine.AndroidJNI::ToReflectedField", "UnityEngine.AndroidJNI::GetSuperclass", "UnityEngine.AndroidJNI::IsAssignableFrom", "UnityEngine.AndroidJNI::Throw", "UnityEngine.AndroidJNI::ThrowNew", "UnityEngine.AndroidJNI::ExceptionOccurred", "UnityEngine.AndroidJNI::ExceptionDescribe", "UnityEngine.AndroidJNI::ExceptionClear", "UnityEngine.AndroidJNI::FatalError", "UnityEngine.AndroidJNI::PushLocalFrame", "UnityEngine.AndroidJNI::PopLocalFrame", "UnityEngine.AndroidJNI::NewGlobalRef", "UnityEngine.AndroidJNI::DeleteGlobalRef", "UnityEngine.AndroidJNI::NewLocalRef", "UnityEngine.AndroidJNI::DeleteLocalRef", "UnityEngine.AndroidJNI::IsSameObject", "UnityEngine.AndroidJNI::EnsureLocalCapacity", "UnityEngine.AndroidJNI::AllocObject", "UnityEngine.AndroidJNI::NewObject", "UnityEngine.AndroidJNI::GetObjectClass", "UnityEngine.AndroidJNI::IsInstanceOf", "UnityEngine.AndroidJNI::GetMethodID", "UnityEngine.AndroidJNI::GetFieldID", "UnityEngine.AndroidJNI::GetStaticMethodID", "UnityEngine.AndroidJNI::GetStaticFieldID", "UnityEngine.AndroidJNI::NewStringUTF", "UnityEngine.AndroidJNI::GetStringUTFLength", "UnityEngine.AndroidJNI::GetStringUTFChars", "UnityEngine.AndroidJNI::CallStringMethod", "UnityEngine.AndroidJNI::CallObjectMethod", "UnityEngine.AndroidJNI::CallIntMethod", "UnityEngine.AndroidJNI::CallBooleanMethod", "UnityEngine.AndroidJNI::CallShortMethod", "UnityEngine.AndroidJNI::CallByteMethod", "UnityEngine.AndroidJNI::CallCharMethod", "UnityEngine.AndroidJNI::CallFloatMethod", "UnityEngine.AndroidJNI::CallDoubleMethod", "UnityEngine.AndroidJNI::CallLongMethod", "UnityEngine.AndroidJNI::CallVoidMethod", "UnityEngine.AndroidJNI::GetStringField", "UnityEngine.AndroidJNI::GetObjectField", "UnityEngine.AndroidJNI::GetBooleanField", "UnityEngine.AndroidJNI::GetByteField", "UnityEngine.AndroidJNI::GetCharField", "UnityEngine.AndroidJNI::GetShortField", "UnityEngine.AndroidJNI::GetIntField", "UnityEngine.AndroidJNI::GetLongField", "UnityEngine.AndroidJNI::GetFloatField", "UnityEngine.AndroidJNI::GetDoubleField", "UnityEngine.AndroidJNI::SetStringField", "UnityEngine.AndroidJNI::SetObjectField", "UnityEngine.AndroidJNI::SetBooleanField", "UnityEngine.AndroidJNI::SetByteField", "UnityEngine.AndroidJNI::SetCharField", "UnityEngine.AndroidJNI::SetShortField", "UnityEngine.AndroidJNI::SetIntField", "UnityEngine.AndroidJNI::SetLongField", "UnityEngine.AndroidJNI::SetFloatField", "UnityEngine.AndroidJNI::SetDoubleField", "UnityEngine.AndroidJNI::CallStaticStringMethod", "UnityEngine.AndroidJNI::CallStaticObjectMethod", "UnityEngine.AndroidJNI::CallStaticIntMethod", "UnityEngine.AndroidJNI::CallStaticBooleanMethod", "UnityEngine.AndroidJNI::CallStaticShortMethod", "UnityEngine.AndroidJNI::CallStaticByteMethod", "UnityEngine.AndroidJNI::CallStaticCharMethod", "UnityEngine.AndroidJNI::CallStaticFloatMethod", "UnityEngine.AndroidJNI::CallStaticDoubleMethod", "UnityEngine.AndroidJNI::CallStaticLongMethod", "UnityEngine.AndroidJNI::CallStaticVoidMethod", "UnityEngine.AndroidJNI::GetStaticStringField", "UnityEngine.AndroidJNI::GetStaticObjectField", "UnityEngine.AndroidJNI::GetStaticBooleanField", "UnityEngine.AndroidJNI::GetStaticByteField", "UnityEngine.AndroidJNI::GetStaticCharField", "UnityEngine.AndroidJNI::GetStaticShortField", "UnityEngine.AndroidJNI::GetStaticIntField", "UnityEngine.AndroidJNI::GetStaticLongField", "UnityEngine.AndroidJNI::GetStaticFloatField", "UnityEngine.AndroidJNI::GetStaticDoubleField", "UnityEngine.AndroidJNI::SetStaticStringField", "UnityEngine.AndroidJNI::SetStaticObjectField", "UnityEngine.AndroidJNI::SetStaticBooleanField", "UnityEngine.AndroidJNI::SetStaticByteField", "UnityEngine.AndroidJNI::SetStaticCharField", "UnityEngine.AndroidJNI::SetStaticShortField", "UnityEngine.AndroidJNI::SetStaticIntField", "UnityEngine.AndroidJNI::SetStaticLongField", "UnityEngine.AndroidJNI::SetStaticFloatField", "UnityEngine.AndroidJNI::SetStaticDoubleField", "UnityEngine.AndroidJNI::ToBooleanArray", "UnityEngine.AndroidJNI::ToByteArray", "UnityEngine.AndroidJNI::ToCharArray", "UnityEngine.AndroidJNI::ToShortArray", "UnityEngine.AndroidJNI::ToIntArray", "UnityEngine.AndroidJNI::ToLongArray", "UnityEngine.AndroidJNI::ToFloatArray", "UnityEngine.AndroidJNI::ToDoubleArray", "UnityEngine.AndroidJNI::ToObjectArray", "UnityEngine.AndroidJNI::FromBooleanArray", "UnityEngine.AndroidJNI::FromByteArray", "UnityEngine.AndroidJNI::FromCharArray", "UnityEngine.AndroidJNI::FromShortArray", "UnityEngine.AndroidJNI::FromIntArray", "UnityEngine.AndroidJNI::FromLongArray", "UnityEngine.AndroidJNI::FromFloatArray", "UnityEngine.AndroidJNI::FromDoubleArray", "UnityEngine.AndroidJNI::FromObjectArray", "UnityEngine.AndroidJNI::GetArrayLength", "UnityEngine.AndroidJNI::NewBooleanArray", "UnityEngine.AndroidJNI::NewByteArray", "UnityEngine.AndroidJNI::NewCharArray", "UnityEngine.AndroidJNI::NewShortArray", "UnityEngine.AndroidJNI::NewIntArray", "UnityEngine.AndroidJNI::NewLongArray", "UnityEngine.AndroidJNI::NewFloatArray", "UnityEngine.AndroidJNI::NewDoubleArray", "UnityEngine.AndroidJNI::NewObjectArray", "UnityEngine.AndroidJNI::GetBooleanArrayElement", "UnityEngine.AndroidJNI::GetByteArrayElement", "UnityEngine.AndroidJNI::GetCharArrayElement", "UnityEngine.AndroidJNI::GetShortArrayElement", "UnityEngine.AndroidJNI::GetIntArrayElement", "UnityEngine.AndroidJNI::GetLongArrayElement", "UnityEngine.AndroidJNI::GetFloatArrayElement", "UnityEngine.AndroidJNI::GetDoubleArrayElement", "UnityEngine.AndroidJNI::GetObjectArrayElement", "UnityEngine.AndroidJNI::SetBooleanArrayElement", "UnityEngine.AndroidJNI::SetByteArrayElement", "UnityEngine.AndroidJNI::SetCharArrayElement", "UnityEngine.AndroidJNI::SetShortArrayElement", "UnityEngine.AndroidJNI::SetIntArrayElement", "UnityEngine.AndroidJNI::SetLongArrayElement", "UnityEngine.AndroidJNI::SetFloatArrayElement", "UnityEngine.AndroidJNI::SetDoubleArrayElement", "UnityEngine.AndroidJNI::SetObjectArrayElement", "UnityEngine.ComputeBuffer::InitBuffer", "UnityEngine.ComputeBuffer::DestroyBuffer", "UnityEngine.ComputeBuffer::get_count", "UnityEngine.ComputeBuffer::get_stride", "UnityEngine.ComputeBuffer::InternalSetNativeData", "UnityEngine.ComputeBuffer::InternalSetData", "UnityEngine.ComputeBuffer::InternalGetData", "UnityEngine.ComputeBuffer::SetCounterValue", "UnityEngine.ComputeBuffer::CopyCount", "UnityEngine.ComputeBuffer::GetNativeBufferPtr", "UnityEngine.Scripting.GarbageCollector::SetMode", "UnityEngine.Scripting.GarbageCollector::GetMode", "UnityEngine.Rendering.GPUFence::HasFencePassed_Internal", "UnityEngine.Rendering.GPUFence::GetVersionNumber", "UnityEngine.LineUtility::GeneratePointsToKeep3D", "UnityEngine.LineUtility::GeneratePointsToKeep2D", "UnityEngine.LineUtility::GenerateSimplifiedPoints3D", "UnityEngine.LineUtility::GenerateSimplifiedPoints2D", "UnityEngine.Playables.PlayableHandle::IsNull_Injected", "UnityEngine.Playables.PlayableHandle::IsValid_Injected", "UnityEngine.Playables.PlayableHandle::GetPlayableType_Injected", "UnityEngine.Playables.PlayableHandle::GetJobType_Injected", "UnityEngine.Playables.PlayableHandle::SetScriptInstance_Injected", "UnityEngine.Playables.PlayableHandle::CanChangeInputs_Injected", "UnityEngine.Playables.PlayableHandle::CanSetWeights_Injected", "UnityEngine.Playables.PlayableHandle::CanDestroy_Injected", "UnityEngine.Playables.PlayableHandle::GetPlayState_Injected", "UnityEngine.Playables.PlayableHandle::Play_Injected", "UnityEngine.Playables.PlayableHandle::Pause_Injected", "UnityEngine.Playables.PlayableHandle::GetSpeed_Injected", "UnityEngine.Playables.PlayableHandle::SetSpeed_Injected", "UnityEngine.Playables.PlayableHandle::GetTime_Injected", "UnityEngine.Playables.PlayableHandle::SetTime_Injected", "UnityEngine.Playables.PlayableHandle::IsDone_Injected", "UnityEngine.Playables.PlayableHandle::SetDone_Injected", "UnityEngine.Playables.PlayableHandle::GetDuration_Injected", "UnityEngine.Playables.PlayableHandle::SetDuration_Injected", "UnityEngine.Playables.PlayableHandle::GetPropagateSetTime_Injected", "UnityEngine.Playables.PlayableHandle::SetPropagateSetTime_Injected", "UnityEngine.Playables.PlayableHandle::GetGraph_Injected", "UnityEngine.Playables.PlayableHandle::GetInputCount_Injected", "UnityEngine.Playables.PlayableHandle::SetInputCount_Injected", "UnityEngine.Playables.PlayableHandle::GetOutputCount_Injected", "UnityEngine.Playables.PlayableHandle::SetOutputCount_Injected", "UnityEngine.Playables.PlayableHandle::SetInputWeight_Injected", "UnityEngine.Playables.PlayableHandle::SetDelay_Injected", "UnityEngine.Playables.PlayableHandle::GetDelay_Injected", "UnityEngine.Playables.PlayableHandle::IsDelayed_Injected", "UnityEngine.Playables.PlayableHandle::GetPreviousTime_Injected", "UnityEngine.Playables.PlayableHandle::SetLeadTime_Injected", "UnityEngine.Playables.PlayableHandle::GetLeadTime_Injected", "UnityEngine.Playables.PlayableHandle::GetTraversalMode_Injected", "UnityEngine.Playables.PlayableHandle::SetTraversalMode_Injected", "UnityEngine.Playables.PlayableHandle::GetAdditionalPayload_Injected", "UnityEngine.Playables.PlayableHandle::GetTimeWrapMode_Injected", "UnityEngine.Playables.PlayableHandle::SetTimeWrapMode_Injected", "UnityEngine.Playables.PlayableHandle::GetScriptInstance_Injected", "UnityEngine.Playables.PlayableHandle::GetInputHandle_Injected", "UnityEngine.Playables.PlayableHandle::GetOutputHandle_Injected", "UnityEngine.Playables.PlayableHandle::SetInputWeightFromIndex_Injected", "UnityEngine.Playables.PlayableHandle::GetInputWeightFromIndex_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_loadAction", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_loadAction", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_storeAction", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_storeAction", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_format", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_format", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_loadStoreTarget_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_loadStoreTarget_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_resolveTarget_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_resolveTarget_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_clearColor_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_clearColor_Injected", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_clearDepth", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_clearDepth", "UnityEngine.Experimental.Rendering.RenderPassAttachment::get_clearStencil", "UnityEngine.Experimental.Rendering.RenderPassAttachment::set_clearStencil", "UnityEngine.Experimental.Rendering.RenderPassAttachment::Internal_CreateAttachment", "UnityEngine.Profiling.Sampler::GetSamplerName", "UnityEngine.Profiling.Sampler::GetRecorderInternal", "UnityEngine.Profiling.Sampler::GetSamplerInternal", "UnityEngine.Profiling.Sampler::GetSamplerNamesInternal", "UnityEngine.Profiling.CustomSampler::CreateInternal", "UnityEngine.Profiling.CustomSampler::Begin", "UnityEngine.Profiling.CustomSampler::BeginWithObject", "UnityEngine.Profiling.CustomSampler::End", "UnityEngine.Experimental.Rendering.ScriptableRuntimeReflectionSystemSettings::ScriptingDirtyReflectionSystemInstance", "ComputeBuffer.SetData()", "ComputeBuffer.GetData()", "UnityEngine.CullingGroup::DisposeInternal", "UnityEngine.CullingGroup::get_enabled", "UnityEngine.CullingGroup::set_enabled", "UnityEngine.CullingGroup::get_targetCamera", "UnityEngine.CullingGroup::set_targetCamera", "UnityEngine.CullingGroup::SetBoundingSpheres", "UnityEngine.CullingGroup::SetBoundingSphereCount", "UnityEngine.CullingGroup::EraseSwapBack", "UnityEngine.CullingGroup::QueryIndices", "UnityEngine.CullingGroup::IsVisible", "UnityEngine.CullingGroup::GetDistance", "UnityEngine.CullingGroup::SetBoundingDistances", "UnityEngine.CullingGroup::SetDistanceReferencePoint_InternalVector3_Injected", "UnityEngine.CullingGroup::SetDistanceReferencePoint_InternalTransform", "UnityEngine.CullingGroup::Init", "UnityEngine.CullingGroup::FinalizerFailure", "UnityEngine.Profiling.Recorder::GetInternal", "UnityEngine.Profiling.Recorder::DisposeNative", "UnityEngine.Profiling.Recorder::IsEnabled", "UnityEngine.Profiling.Recorder::SetEnabled", "UnityEngine.Profiling.Recorder::GetElapsedNanoseconds", "UnityEngine.Profiling.Recorder::GetSampleBlockCount", "UnityEngine.Profiling.Recorder::FilterToCurrentThread", "UnityEngine.Profiling.Recorder::CollectFromAllThreads", "sceneName", "UnityEngine.SceneManagement.SceneManager::get_sceneCount", "UnityEngine.SceneManagement.SceneManager::get_sceneCountInBuildSettings", "UnityEngine.SceneManagement.SceneManager::GetActiveScene_Injected", "UnityEngine.SceneManagement.SceneManager::SetActiveScene_Injected", "UnityEngine.SceneManagement.SceneManager::GetSceneByPath_Injected", "UnityEngine.SceneManagement.SceneManager::GetSceneByName_Injected", "UnityEngine.SceneManagement.SceneManager::GetSceneByBuildIndex_Injected", "UnityEngine.SceneManagement.SceneManager::GetSceneAt_Injected", "UnityEngine.SceneManagement.SceneManager::CreateScene_Injected", "UnityEngine.SceneManagement.SceneManager::UnloadSceneInternal_Injected", "UnityEngine.SceneManagement.SceneManager::UnloadSceneAsyncInternal_Injected", "UnityEngine.SceneManagement.SceneManager::LoadSceneAsyncNameIndexInternal_Injected", "UnityEngine.SceneManagement.SceneManager::UnloadSceneNameIndexInternal", "UnityEngine.SceneManagement.SceneManager::MergeScenes_Injected", "UnityEngine.SceneManagement.SceneManager::MoveGameObjectToScene_Injected", "UnityEngine.Experimental.Rendering.ShaderPassName::Init", "UnityEngine.Experimental.Rendering.DrawRendererSettings::InitializeSortSettings", "UnityEngine.Experimental.Rendering.VisibleLight::GetLightObject", "UnityEngine.Experimental.Rendering.VisibleReflectionProbe::GetTextureObject", "UnityEngine.Experimental.Rendering.VisibleReflectionProbe::GetReflectionProbeObject", "UnityEngine.Experimental.Rendering.CullResults::GetCullingParameters_Internal", "UnityEngine.Experimental.Rendering.CullResults::Internal_Cull_Injected", "UnityEngine.Experimental.Rendering.CullResults::GetShadowCasterBounds", "UnityEngine.Experimental.Rendering.CullResults::GetLightIndicesCount", "UnityEngine.Experimental.Rendering.CullResults::FillLightIndices", "UnityEngine.Experimental.Rendering.CullResults::GetLightIndexMap", "UnityEngine.Experimental.Rendering.CullResults::SetLightIndexMap", "UnityEngine.Experimental.Rendering.CullResults::ComputeSpotShadowMatricesAndCullingPrimitives", "UnityEngine.Experimental.Rendering.CullResults::ComputePointShadowMatricesAndCullingPrimitives", "UnityEngine.Experimental.Rendering.CullResults::ComputeDirectionalShadowMatricesAndCullingPrimitives_Injected", "UnityEngine.ScriptingRuntime::GetAllUserAssemblies", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::HasVertexAttribute", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::SetVertexCount", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::GetVertexCount", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::GetBindPoseInfo_Injected", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::SetBindPoseData", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::GetIndicesInfo_Injected", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::SetIndicesData", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::GetChannelInfo_Injected", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::SetChannelData", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::GetBoneInfo", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::SetBoneData", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::GetBoneWeightsInfo_Injected", "UnityEngine.Experimental.U2D.SpriteDataAccessExtensions::SetBoneWeightsData", "UnityEngine.Experimental.U2D.SpriteRendererDataAccessExtensions::DeactivateDeformableBuffer", "UnityEngine.Experimental.U2D.SpriteRendererDataAccessExtensions::UpdateDeformableBuffer_Injected", "UnityEngine.Experimental.U2D.SpriteRendererDataAccessExtensions::GetDeformableChannelInfo_Injected", "UnityEngine.Experimental.U2D.SpriteRendererDataAccessExtensions::SetLocalAABB_Injected", "updateZones", "UnityEngine.Texture::get_masterTextureLimit", "UnityEngine.Texture::set_masterTextureLimit", "UnityEngine.Texture::get_anisotropicFiltering", "UnityEngine.Texture::set_anisotropicFiltering", "UnityEngine.Texture::SetGlobalAnisotropicFilteringLimits", "UnityEngine.Texture::GetDataWidth", "UnityEngine.Texture::GetDataHeight", "UnityEngine.Texture::GetDimension", "UnityEngine.Texture::get_isReadable", "UnityEngine.Texture::get_wrapMode", "UnityEngine.Texture::set_wrapMode", "UnityEngine.Texture::get_wrapModeU", "UnityEngine.Texture::set_wrapModeU", "UnityEngine.Texture::get_wrapModeV", "UnityEngine.Texture::set_wrapModeV", "UnityEngine.Texture::get_wrapModeW", "UnityEngine.Texture::set_wrapModeW", "UnityEngine.Texture::get_filterMode", "UnityEngine.Texture::set_filterMode", "UnityEngine.Texture::get_anisoLevel", "UnityEngine.Texture::set_anisoLevel", "UnityEngine.Texture::get_mipMapBias", "UnityEngine.Texture::set_mipMapBias", "UnityEngine.Texture::get_texelSize_Injected", "UnityEngine.Texture::GetNativeTexturePtr", "UnityEngine.Texture::get_updateCount", "UnityEngine.Texture::IncrementUpdateCount", "UnityEngine.Texture::get_totalTextureMemory", "UnityEngine.Texture::get_desiredTextureMemory", "UnityEngine.Texture::get_targetTextureMemory", "UnityEngine.Texture::get_currentTextureMemory", "UnityEngine.Texture::get_nonStreamingTextureMemory", "UnityEngine.Texture::get_streamingMipmapUploadCount", "UnityEngine.Texture::get_streamingRendererCount", "UnityEngine.Texture::get_streamingTextureCount", "UnityEngine.Texture::get_nonStreamingTextureCount", "UnityEngine.Texture::get_streamingTexturePendingLoadCount", "UnityEngine.Texture::get_streamingTextureLoadingCount", "UnityEngine.Texture::SetStreamingTextureMaterialDebugProperties", "UnityEngine.Texture::get_streamingTextureForceLoadAll", "UnityEngine.Texture::set_streamingTextureForceLoadAll", "UnityEngine.Texture::get_streamingTextureDiscardUnusedMips", "UnityEngine.Texture::set_streamingTextureDiscardUnusedMips", "UnityEngine.Texture2D::get_mipmapCount", "UnityEngine.Texture2D::get_format", "UnityEngine.Texture2D::get_whiteTexture", "UnityEngine.Texture2D::get_blackTexture", "UnityEngine.Texture2D::Compress", "UnityEngine.Texture2D::Internal_CreateImpl", "UnityEngine.Texture2D::get_isReadable", "UnityEngine.Texture2D::ApplyImpl", "UnityEngine.Texture2D::ResizeImpl", "UnityEngine.Texture2D::SetPixelImpl_Injected", "UnityEngine.Texture2D::GetPixelImpl_Injected", "UnityEngine.Texture2D::GetPixelBilinearImpl_Injected", "UnityEngine.Texture2D::ResizeWithFormatImpl", "UnityEngine.Texture2D::ReadPixelsImpl_Injected", "UnityEngine.Texture2D::SetPixelsImpl", "UnityEngine.Texture2D::LoadRawTextureDataImpl", "UnityEngine.Texture2D::LoadRawTextureDataImplArray", "UnityEngine.Texture2D::GetWritableImageData", "UnityEngine.Texture2D::GetRawImageDataSize", "UnityEngine.Texture2D::GenerateAtlasImpl", "UnityEngine.Texture2D::get_streamingMipmaps", "UnityEngine.Texture2D::get_streamingMipmapsPriority", "UnityEngine.Texture2D::get_requestedMipmapLevel", "UnityEngine.Texture2D::set_requestedMipmapLevel", "UnityEngine.Texture2D::get_desiredMipmapLevel", "UnityEngine.Texture2D::get_loadingMipmapLevel", "UnityEngine.Texture2D::get_loadedMipmapLevel", "UnityEngine.Texture2D::ClearRequestedMipmapLevel", "UnityEngine.Texture2D::IsRequestedMipmapLevelLoaded", "UnityEngine.Texture2D::UpdateExternalTexture", "UnityEngine.Texture2D::SetAllPixels32", "UnityEngine.Texture2D::SetBlockOfPixels32", "UnityEngine.Texture2D::GetRawTextureData", "UnityEngine.Texture2D::GetPixels", "UnityEngine.Texture2D::GetPixels32", "UnityEngine.Texture2D::PackTextures", "UnityEngine.Cubemap::get_mipmapCount", "UnityEngine.Cubemap::get_format", "UnityEngine.Cubemap::Internal_CreateImpl", "UnityEngine.Cubemap::ApplyImpl", "UnityEngine.Cubemap::get_isReadable", "UnityEngine.Cubemap::SetPixelImpl_Injected", "UnityEngine.Cubemap::GetPixelImpl_Injected", "UnityEngine.Cubemap::SmoothEdges", "UnityEngine.Cubemap::GetPixels", "UnityEngine.Cubemap::SetPixels", "UnityEngine.Texture3D::get_depth", "UnityEngine.Texture3D::get_format", "UnityEngine.Texture3D::get_isReadable", "UnityEngine.Texture3D::Internal_CreateImpl", "UnityEngine.Texture3D::ApplyImpl", "UnityEngine.Texture3D::GetPixels", "UnityEngine.Texture3D::GetPixels32", "UnityEngine.Texture3D::SetPixels", "UnityEngine.Texture3D::SetPixels32", "UnityEngine.Texture2DArray::get_depth", "UnityEngine.Texture2DArray::get_format", "UnityEngine.Texture2DArray::get_isReadable", "UnityEngine.Texture2DArray::Internal_CreateImpl", "UnityEngine.Texture2DArray::ApplyImpl", "UnityEngine.Texture2DArray::GetPixels", "UnityEngine.Texture2DArray::GetPixels32", "UnityEngine.Texture2DArray::SetPixels", "UnityEngine.Texture2DArray::SetPixels32", "UnityEngine.CubemapArray::get_cubemapCount", "UnityEngine.CubemapArray::get_format", "UnityEngine.CubemapArray::get_isReadable", "UnityEngine.CubemapArray::Internal_CreateImpl", "UnityEngine.CubemapArray::ApplyImpl", "UnityEngine.CubemapArray::GetPixels", "UnityEngine.CubemapArray::GetPixels32", "UnityEngine.CubemapArray::SetPixels", "UnityEngine.CubemapArray::SetPixels32", "UnityEngine.SparseTexture::get_tileWidth", "UnityEngine.SparseTexture::get_tileHeight", "UnityEngine.SparseTexture::get_isCreated", "UnityEngine.SparseTexture::Internal_Create", "UnityEngine.SparseTexture::UpdateTile", "UnityEngine.SparseTexture::UpdateTileRaw", "UnityEngine.RenderTexture::get_width", "UnityEngine.RenderTexture::set_width", "UnityEngine.RenderTexture::get_height", "UnityEngine.RenderTexture::set_height", "UnityEngine.RenderTexture::get_dimension", "UnityEngine.RenderTexture::set_dimension", "UnityEngine.RenderTexture::get_useMipMap", "UnityEngine.RenderTexture::set_useMipMap", "UnityEngine.RenderTexture::get_sRGB", "UnityEngine.RenderTexture::get_format", "UnityEngine.RenderTexture::set_format", "UnityEngine.RenderTexture::get_vrUsage", "UnityEngine.RenderTexture::set_vrUsage", "UnityEngine.RenderTexture::get_memorylessMode", "UnityEngine.RenderTexture::set_memorylessMode", "UnityEngine.RenderTexture::get_autoGenerateMips", "UnityEngine.RenderTexture::set_autoGenerateMips", "UnityEngine.RenderTexture::get_volumeDepth", "UnityEngine.RenderTexture::set_volumeDepth", "UnityEngine.RenderTexture::get_antiAliasing", "UnityEngine.RenderTexture::set_antiAliasing", "UnityEngine.RenderTexture::get_bindTextureMS", "UnityEngine.RenderTexture::set_bindTextureMS", "UnityEngine.RenderTexture::get_enableRandomWrite", "UnityEngine.RenderTexture::set_enableRandomWrite", "UnityEngine.RenderTexture::get_useDynamicScale", "UnityEngine.RenderTexture::set_useDynamicScale", "UnityEngine.RenderTexture::GetIsPowerOfTwo", "UnityEngine.RenderTexture::GetActive", "UnityEngine.RenderTexture::SetActive", "UnityEngine.RenderTexture::GetColorBuffer_Injected", "UnityEngine.RenderTexture::GetDepthBuffer_Injected", "UnityEngine.RenderTexture::GetNativeDepthBufferPtr", "UnityEngine.RenderTexture::DiscardContents", "UnityEngine.RenderTexture::MarkRestoreExpected", "UnityEngine.RenderTexture::ResolveAA", "UnityEngine.RenderTexture::ResolveAATo", "UnityEngine.RenderTexture::SetGlobalShaderProperty", "UnityEngine.RenderTexture::Create", "UnityEngine.RenderTexture::Release", "UnityEngine.RenderTexture::IsCreated", "UnityEngine.RenderTexture::GenerateMips", "UnityEngine.RenderTexture::ConvertToEquirect", "UnityEngine.RenderTexture::SetSRGBReadWrite", "UnityEngine.RenderTexture::Internal_Create", "UnityEngine.RenderTexture::SupportsStencil", "UnityEngine.RenderTexture::SetRenderTextureDescriptor_Injected", "UnityEngine.RenderTexture::GetDescriptor_Injected", "UnityEngine.RenderTexture::GetTemporary_Internal_Injected", "UnityEngine.RenderTexture::ReleaseTemporary", "UnityEngine.RenderTexture::get_depth", "UnityEngine.RenderTexture::set_depth", "UnityEngine.CustomRenderTexture::Internal_CreateCustomRenderTexture", "UnityEngine.CustomRenderTexture::Update", "UnityEngine.CustomRenderTexture::Initialize", "UnityEngine.CustomRenderTexture::ClearUpdateZones", "UnityEngine.CustomRenderTexture::get_material", "UnityEngine.CustomRenderTexture::set_material", "UnityEngine.CustomRenderTexture::get_initializationMaterial", "UnityEngine.CustomRenderTexture::set_initializationMaterial", "UnityEngine.CustomRenderTexture::get_initializationTexture", "UnityEngine.CustomRenderTexture::set_initializationTexture", "UnityEngine.CustomRenderTexture::GetUpdateZonesInternal", "UnityEngine.CustomRenderTexture::SetUpdateZonesInternal", "UnityEngine.CustomRenderTexture::get_initializationSource", "UnityEngine.CustomRenderTexture::set_initializationSource", "UnityEngine.CustomRenderTexture::get_initializationColor_Injected", "UnityEngine.CustomRenderTexture::set_initializationColor_Injected", "UnityEngine.CustomRenderTexture::get_updateMode", "UnityEngine.CustomRenderTexture::set_updateMode", "UnityEngine.CustomRenderTexture::get_initializationMode", "UnityEngine.CustomRenderTexture::set_initializationMode", "UnityEngine.CustomRenderTexture::get_updateZoneSpace", "UnityEngine.CustomRenderTexture::set_updateZoneSpace", "UnityEngine.CustomRenderTexture::get_shaderPass", "UnityEngine.CustomRenderTexture::set_shaderPass", "UnityEngine.CustomRenderTexture::get_cubemapFaceMask", "UnityEngine.CustomRenderTexture::set_cubemapFaceMask", "UnityEngine.CustomRenderTexture::get_doubleBuffered", "UnityEngine.CustomRenderTexture::set_doubleBuffered", "UnityEngine.CustomRenderTexture::get_wrapUpdateZones", "UnityEngine.CustomRenderTexture::set_wrapUpdateZones", "UnityEngine.Jobs.TransformAccess::GetPosition", "UnityEngine.Jobs.TransformAccess::SetPosition", "UnityEngine.Jobs.TransformAccess::GetRotation", "UnityEngine.Jobs.TransformAccess::SetRotation", "UnityEngine.Jobs.TransformAccess::GetLocalPosition", "UnityEngine.Jobs.TransformAccess::SetLocalPosition", "UnityEngine.Jobs.TransformAccess::GetLocalRotation", "UnityEngine.Jobs.TransformAccess::SetLocalRotation", "UnityEngine.Jobs.TransformAccess::GetLocalScale", "UnityEngine.Jobs.TransformAccess::SetLocalScale", "UnityEngine.Jobs.TransformAccessArray::Create", "UnityEngine.Jobs.TransformAccessArray::DestroyTransformAccessArray", "UnityEngine.Jobs.TransformAccessArray::SetTransforms", "UnityEngine.Jobs.TransformAccessArray::Add", "UnityEngine.Jobs.TransformAccessArray::RemoveAtSwapBack", "UnityEngine.Jobs.TransformAccessArray::GetSortedTransformAccess", "UnityEngine.Jobs.TransformAccessArray::GetSortedToUserIndex", "UnityEngine.Jobs.TransformAccessArray::GetLength", "UnityEngine.Jobs.TransformAccessArray::GetCapacity", "UnityEngine.Jobs.TransformAccessArray::SetCapacity", "UnityEngine.Jobs.TransformAccessArray::GetTransform", "UnityEngine.Jobs.TransformAccessArray::SetTransform", "Index (%d) is out of range TransformAccessArray.Length (%d)", "UnityEngine.Experimental.U2D", "SpriteBone", "UnityEngine.Component::get_transform", "UnityEngine.Component::get_gameObject", "UnityEngine.Component::GetComponentFastPath", "UnityEngine.Component::GetComponent", "UnityEngine.Component::GetComponentsForListInternal", "UnityEngine.Component::SendMessageUpwards", "UnityEngine.Component::SendMessage", "UnityEngine.Component::BroadcastMessage", "computeShader", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_1", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_2", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_3", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_4", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_5", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_6", "UnityEngine.Rendering.CommandBuffer::Internal_RequestAsyncReadback_7", "UnityEngine.Rendering.CommandBuffer::SetInvertCulling", "UnityEngine.Rendering.CommandBuffer::ConvertTexture_Internal_Injected", "UnityEngine.Rendering.CommandBuffer::InitBuffer", "UnityEngine.Rendering.CommandBuffer::CreateGPUFence_Internal", "UnityEngine.Rendering.CommandBuffer::WaitOnGPUFence_Internal", "UnityEngine.Rendering.CommandBuffer::ReleaseBuffer", "UnityEngine.Rendering.CommandBuffer::SetComputeFloatParam", "UnityEngine.Rendering.CommandBuffer::SetComputeIntParam", "UnityEngine.Rendering.CommandBuffer::SetComputeVectorParam_Injected", "UnityEngine.Rendering.CommandBuffer::SetComputeVectorArrayParam", "UnityEngine.Rendering.CommandBuffer::SetComputeMatrixParam_Injected", "UnityEngine.Rendering.CommandBuffer::SetComputeMatrixArrayParam", "UnityEngine.Rendering.CommandBuffer::Internal_SetComputeFloats", "UnityEngine.Rendering.CommandBuffer::Internal_SetComputeInts", "UnityEngine.Rendering.CommandBuffer::Internal_SetComputeTextureParam", "UnityEngine.Rendering.CommandBuffer::SetComputeBufferParam", "UnityEngine.Rendering.CommandBuffer::Internal_DispatchCompute", "UnityEngine.Rendering.CommandBuffer::Internal_DispatchComputeIndirect", "UnityEngine.Rendering.CommandBuffer::Internal_GenerateMips", "UnityEngine.Rendering.CommandBuffer::Internal_ResolveAntiAliasedSurface", "UnityEngine.Rendering.CommandBuffer::CopyCounterValue", "UnityEngine.Rendering.CommandBuffer::get_name", "UnityEngine.Rendering.CommandBuffer::set_name", "UnityEngine.Rendering.CommandBuffer::get_sizeInBytes", "UnityEngine.Rendering.CommandBuffer::Clear", "UnityEngine.Rendering.CommandBuffer::Internal_DrawMesh_Injected", "UnityEngine.Rendering.CommandBuffer::Internal_DrawRenderer", "UnityEngine.Rendering.CommandBuffer::Internal_DrawProcedural_Injected", "UnityEngine.Rendering.CommandBuffer::Internal_DrawProceduralIndirect_Injected", "UnityEngine.Rendering.CommandBuffer::Internal_DrawMeshInstanced", "UnityEngine.Rendering.CommandBuffer::Internal_DrawMeshInstancedIndirect", "UnityEngine.Rendering.CommandBuffer::SetRandomWriteTarget_Texture", "UnityEngine.Rendering.CommandBuffer::SetRandomWriteTarget_Buffer", "UnityEngine.Rendering.CommandBuffer::ClearRandomWriteTargets", "UnityEngine.Rendering.CommandBuffer::SetViewport_Injected", "UnityEngine.Rendering.CommandBuffer::EnableScissorRect_Injected", "UnityEngine.Rendering.CommandBuffer::DisableScissorRect", "UnityEngine.Rendering.CommandBuffer::CopyTexture_Internal", "UnityEngine.Rendering.CommandBuffer::Blit_Texture_Injected", "UnityEngine.Rendering.CommandBuffer::Blit_Identifier_Injected", "UnityEngine.Rendering.CommandBuffer::GetTemporaryRT", "UnityEngine.Rendering.CommandBuffer::GetTemporaryRTWithDescriptor_Injected", "UnityEngine.Rendering.CommandBuffer::GetTemporaryRTArray", "UnityEngine.Rendering.CommandBuffer::ReleaseTemporaryRT", "UnityEngine.Rendering.CommandBuffer::ClearRenderTarget_Injected", "UnityEngine.Rendering.CommandBuffer::SetGlobalFloat", "UnityEngine.Rendering.CommandBuffer::SetGlobalInt", "UnityEngine.Rendering.CommandBuffer::SetGlobalVector_Injected", "UnityEngine.Rendering.CommandBuffer::SetGlobalColor_Injected", "UnityEngine.Rendering.CommandBuffer::SetGlobalMatrix_Injected", "UnityEngine.Rendering.CommandBuffer::EnableShaderKeyword", "UnityEngine.Rendering.CommandBuffer::DisableShaderKeyword", "UnityEngine.Rendering.CommandBuffer::SetViewMatrix_Injected", "UnityEngine.Rendering.CommandBuffer::SetProjectionMatrix_Injected", "UnityEngine.Rendering.CommandBuffer::SetViewProjectionMatrices_Injected", "UnityEngine.Rendering.CommandBuffer::SetGlobalDepthBias", "UnityEngine.Rendering.CommandBuffer::SetGlobalFloatArrayListImpl", "UnityEngine.Rendering.CommandBuffer::SetGlobalVectorArrayListImpl", "UnityEngine.Rendering.CommandBuffer::SetGlobalMatrixArrayListImpl", "UnityEngine.Rendering.CommandBuffer::SetGlobalFloatArray", "UnityEngine.Rendering.CommandBuffer::SetGlobalVectorArray", "UnityEngine.Rendering.CommandBuffer::SetGlobalMatrixArray", "UnityEngine.Rendering.CommandBuffer::SetGlobalTexture_Impl", "UnityEngine.Rendering.CommandBuffer::SetGlobalBuffer", "UnityEngine.Rendering.CommandBuffer::SetShadowSamplingMode_Impl", "UnityEngine.Rendering.CommandBuffer::IssuePluginEventInternal", "UnityEngine.Rendering.CommandBuffer::BeginSample", "UnityEngine.Rendering.CommandBuffer::EndSample", "UnityEngine.Rendering.CommandBuffer::IssuePluginEventAndDataInternal", "UnityEngine.Rendering.CommandBuffer::IssuePluginCustomBlitInternal", "UnityEngine.Rendering.CommandBuffer::IssuePluginCustomTextureUpdateInternal", "UnityEngine.Rendering.CommandBuffer::SetRenderTargetSingle_Internal_Injected", "UnityEngine.Rendering.CommandBuffer::SetRenderTargetColorDepth_Internal_Injected", "UnityEngine.Rendering.CommandBuffer::SetRenderTargetMulti_Internal_Injected", "The component is not attached to any game object!", "kernelIndex is negative", "index must be positive", "index (%d) must be less than the number of random write targets (%d)", "Zero-sized array is not allowed.", "UnityEngine.Rendering.AsyncGPUReadbackRequest::Update_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::WaitForCompletion_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::IsDone_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::HasError_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::GetLayerCount_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::GetLayerDataSize_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::GetWidth_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::GetHeight_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::GetDepth_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::SetScriptingCallback_Injected", "UnityEngine.Rendering.AsyncGPUReadbackRequest::GetDataRaw_Injected", "UnityEngine.Rendering.AsyncGPUReadback::Request_Internal_ComputeBuffer_1_Injected", "UnityEngine.Rendering.AsyncGPUReadback::Request_Internal_ComputeBuffer_2_Injected", "UnityEngine.Rendering.AsyncGPUReadback::Request_Internal_Texture_1_Injected", "UnityEngine.Rendering.AsyncGPUReadback::Request_Internal_Texture_2_Injected", "UnityEngine.Rendering.AsyncGPUReadback::Request_Internal_Texture_3_Injected", "UnityEngine.Rendering.AsyncGPUReadback::Request_Internal_Texture_4_Injected", "Unity.IO.LowLevel.Unsafe.ReadHandle::GetReadStatus_Injected", "Unity.IO.LowLevel.Unsafe.ReadHandle::ReleaseReadHandle_Injected", "Unity.IO.LowLevel.Unsafe.ReadHandle::IsReadHandleValid_Injected", "Unity.IO.LowLevel.Unsafe.ReadHandle::GetJobHandle_Injected", "Unity.IO.LowLevel.Unsafe.AsyncReadManager::ReadInternal_Injected", "UnityEngine.BootConfigData::Append", "UnityEngine.BootConfigData::Set", "UnityEngine.BootConfigData::GetValue", "UnityEngine.ExposedPropertyResolver::ResolveReferenceBindingsInternal_Injected", "UnityEngineInternal.GIDebugVisualisation::ResetRuntimeInputTextures", "UnityEngineInternal.GIDebugVisualisation::PlayCycleMode", "UnityEngineInternal.GIDebugVisualisation::PauseCycleMode", "UnityEngineInternal.GIDebugVisualisation::StopCycleMode", "UnityEngineInternal.GIDebugVisualisation::CycleSkipSystems", "UnityEngineInternal.GIDebugVisualisation::CycleSkipInstances", "UnityEngineInternal.GIDebugVisualisation::get_cycleMode", "UnityEngineInternal.GIDebugVisualisation::get_pauseCycleMode", "UnityEngineInternal.GIDebugVisualisation::get_texType", "UnityEngineInternal.GIDebugVisualisation::set_texType", "UnityEngine.Gradient::Init", "UnityEngine.Gradient::Cleanup", "UnityEngine.Gradient::Internal_Equals", "UnityEngine.Gradient::Evaluate_Injected", "UnityEngine.Gradient::get_colorKeys", "UnityEngine.Gradient::set_colorKeys", "UnityEngine.Gradient::get_alphaKeys", "UnityEngine.Gradient::set_alphaKeys", "UnityEngine.Gradient::get_mode", "UnityEngine.Gradient::set_mode", "UnityEngine.Gradient::SetKeys", "UnityEngine.PropertyNameUtils::PropertyNameFromString_Injected", "UnityEngine.TextAsset::get_text", "UnityEngine.TextAsset::get_bytes", "UnityEngine.TextAsset::Internal_CreateInstance", "com/unity3d/player/GoogleARCoreApi", ".resource", ".split", "%s_tmp", "initializeARCore", "(Landroid/app/Activity;)V", "pauseARCore", "resumeARCore", "Unable to retrieve Java VM!", ".tmp", "FileSystemAndroidAPK", "AndroidSplitFile", "LocalFileSystemAndroid", "jar:file://", "AndroidGraphics::Startup window =  %p", "Requested framebuffer: resolution[%ix%i], rgba[%s], depth+stencil[%s], samples[%d]", "8/8/8/8", "5/6/5/0", "Created framebuffer: resolution[%ix%i], %s", "Could not initialize new input system\n", "Ignoring color surface load action as it is memoryless", "Ignoring color surface store action as it is memoryless", "Ignoring depth surface load action as it is memoryless", "Ignoring depth surface store action as it is memoryless", "rgba[%i/%i/%i/%i], depth+stencil[%i/%i], samples[%i] %s", "(CSAA)", "(MSAA)", "eglGetConfigAttrib(eglDisplay, eglConfig, EGL_NATIVE_VISUAL_ID, &format)", "./PlatformDependent/AndroidPlayer/Source/ContextGLES.cpp", "[EGL] %s: %s", "[EGL] %s", "EGL_SUCCESS: The last function succeeded without error.", "EGL_NOT_INITIALIZED: EGL is not initialized, or could not be initialized, for the specified EGL display connection.", "EGL_BAD_ACCESS: EGL cannot access a requested resource (for example a context is bound in another thread).", "EGL_BAD_ALLOC: EGL failed to allocate resources for the requested operation.", "EGL_BAD_ATTRIBUTE: An unrecognized attribute or attribute value was passed in the attribute list.", "EGL_BAD_CONTEXT: An EGLContext argument does not name a valid EGL rendering context.", "EGL_BAD_CONFIG: An EGLConfig argument does not name a valid EGL frame buffer configuration.", "EGL_BAD_CURRENT_SURFACE: The current surface of the calling thread is a window, pixel buffer or pixmap that is no longer valid.", "EGL_BAD_DISPLAY: An EGLDisplay argument does not name a valid EGL display connection.", "EGL_BAD_SURFACE: An EGLSurface argument does not name a valid surface (window, pixel buffer or pixmap) configured for GL rendering.", "EGL_BAD_MATCH: Arguments are inconsistent (for example, a valid context requires buffers not supplied by a valid surface).", "EGL_BAD_PARAMETER: One or more argument values are invalid.", "EGL_BAD_NATIVE_PIXMAP: A NativePixmapType argument does not refer to a valid native pixmap.", "EGL_BAD_NATIVE_WINDOW: A NativeWindowType argument does not refer to a valid native window.", "EGL_CONTEXT_LOST: A power management event has occurred. The application must destroy all contexts and reinitialise OpenGL ES state and objects to continue rendering.", "Unknown error: 0x%x", "Hardware resolution scaling not supported, falling back to software scaling (blit).", "ANativeWindow: (%d/%d) RequestedResolution: (%d/%d) RenderingResolution: (%d/%d) EGLSurface: (%d/%d)", "getUnicodeChar", "android/view/KeyCharacterMap", "(I)Landroid/view/KeyCharacterMap;", "(II)I", "test-keys", "/system/app/Superuser.apk", "android.permission.READ_PHONE_STATE", "nativeInjectEvent", "UTF-8", "com/unity3d/player/UnityPlayer", "com/unity3d/player/ReflectionHelper", "Magnetic Field", "Gyroscope", "Proximity", "Linear Acceleration", "Rotation Vector", "Relative Humidity", "Ambient Temperature", "Found %i native sensors", "ASensorManager_destroyEventQueue returned %i", "Failed to enable %s sensor", "Failed to set event rate for %s sensor (%i us)", "disableOpenSL", "%p (%s) %s %p", "initJni", "(Landroid/content/Context;)V", "nativeDone", "nativePause", "nativeRecreateGfxState", "(ILandroid/view/Surface;)V", "nativeSendSurfaceChangedEvent", "nativeRender", "nativeResume", "nativeLowMemory", "nativeFocusChanged", "(Z)V", "nativeSetInputString", "(Ljava/lang/String;)V", "nativeSetInputSelection", "(II)V", "nativeSoftInputClosed", "nativeSoftInputCanceled", "nativeSoftInputLostFocus", "nativeInitWebRequest", "(Ljava/lang/Class;)V", "(Landroid/view/InputEvent;)Z", "nativeUnitySendMessage", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "nativeIsAutorotationOn", "nativeMuteMasterAudio", "nativeRestartActivityIndicator", "nativeProxyInvoke", "(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", "nativeProxyFinalize", "(I)V", "nativeProxyLogJNIInvokeException", "Unknown event structure (%i)", "Sensor : N/A", "Sensor : %*s (%2i) ; %f / %.2fs ; %s / %s ", "Roboto", "Noto Sans CJK SC", "Noto Sans Mono CJK SC", "Noto Sans SC", "Noto Sans CJK TC", "Noto Sans Mono CJK TC", "Noto Sans TC", "Noto Sans CJK KR", "Noto Sans Mono CJK KR", "Noto Sans KR", "Droid Sans Hangul", "Noto Sans CJK JP", "Noto Sans Mono CJK JP", "Noto Sans JP", "Droid Sans Japanese", "MotoyaLMaru", "NanumGothic", "Droid Sans", "Droid Sans Fallback", "DroidSansFallback", "%s: fopen('%s', rb) failed - %s(%d)", "NativeFile", "assets/bin/Data", "FileSystem", "ZipCentralDirectory", "android.permission.CAMERA", "android.permission.RECORD_AUDIO", "android.permission.ACCESS_FINE_LOCATION", "android.permission.ACCESS_COARSE_LOCATION", "android.permission.READ_EXTERNAL_STORAGE", "android.permission.WRITE_EXTERNAL_STORAGE", "android-force-sdcard-permission", "UnityMain", "SystemInfo CPU = %s, Cores = %d, Memory = %dmb", "SystemInfo ARM big.LITTLE configuration: %d big (mask: 0x%x), %d little (mask: 0x%x)", "ApplicationInfo %s version %s build %s", "Built from '%s' branch, Version '%s', Build type '%s', Scripting Backend '%s', CPU '%s'", "assets/bin/", "Failed to load Il2CPP.", "/il2cpp", "  il2cpp failed to extract resources (%s => %s)\n", "Failed to extract resources needed by Il2CPP.", "/etc", "InitializeScriptEngine OK (%p)\n", "Unable to initialize the Unity Engine.", "PlayerInitEngineNoGraphics OK\n", "Unable to initialize the Unity Engine Gfx API.", "Your device does not match the hardware requirements of this application.", "PlayerInitEngineGraphics OK\n", "User denied external storage write permission.\n", "UnityDeinitApplication", "InitJni", "ToggleGyroscopeSensor", "java/lang/Error", "<init>", "setStackTrace", "([Ljava/lang/StackTraceElement;)V", "java/lang/StackTraceElement", "CRASH", "main thread is trapped; signum = %i", "other thread is trapped; signum = %i", "getPackageName", "()Ljava/lang/String;", "android/app/ApplicationErrorReport", "getErrorReportReceiver", "(Landroid/content/Context;Ljava/lang/String;I)Landroid/content/ComponentName;", "getPackageManager", "()Landroid/content/pm/PackageManager;", "getInstallerPackageName", "(Ljava/lang/String;)Ljava/lang/String;", "android/content/Intent", "android.intent.action.APP_ERROR", "setPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "resolveActivity", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "activityInfo", "%s %i got %i", "chained_signal_handler", "*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n", "\nbacktrace:\n", "libunity.so", "androidRenderOutsideSafeArea", "androidStartInFullscreen", "Screenmanager Resolution Width", "Screenmanager Resolution Height", "Screenmanager Fullscreen mode", "/etc/fonts.xml", "familyset", "lang", "/system/fonts/", "zh-hans", "zh-hant", "variant", "compact", "/etc/system_fonts.xml", "/vendor/etc/fallback_fonts.xml", "fileset", "ja-jp", "ko-kr", "zh-cn", "zh-sg", "zh-tw", "zh-hk", "zh-mo", "%s : Unable to open '%s'", "ApkAddCentralDirectory", "%s : Unable to parse '%s'", ".apk/", ".obb/", ".jar/", ".zip/", "Google", "Yellowstone", "Amazon", "KFTT", "KFJWI", "KFJWA", "KFSOWI", "KFTHWA", "KFTHWI", "KFAPWA", "KFAPWI", "initializeGoogleVr", "initializeGoogleAr", "showVideoPlayer", "(Ljava/lang/String;IIIZII)Z", "loadLibrary", "(Ljava/lang/String;)Z", "showSoftInput", "(Ljava/lang/String;IZZZZLjava/lang/String;I)V", "setSoftInputStr", "setCharacterLimit", "setSelection", "hideSoftInput", "kill", "executeGLThreadJobs", "disableLogger", "addPhoneCallListener", "setClipboardText", "requestUserAuthorization", "skipPermissionsDialog", "getClipboardText", "toggleGyroscopeSensor", "[VFS] Mount %s\n", "Unable to open/read zip file!\n", "%s/main.%d.%s.obb", "%s/patch.%d.%s.obb", "assets/", "User denied external storage read permission. Unable to load OBBs.\n", "IL2CPP", "LoadLibrary", "operator()", "%s %i: Unable to resolve method '%s%s'\n", "ResolveMethod", "ShowSoftInput", "SetSoftInputString", "SetClipboardText", "GetClipboardText", "ShowVideoPlayer", "RequestUserPermission", "SkipPermissionsDialog", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V", "add_symbols", "\t%s\n", "Camera %i", "Cannot find webcam device ", "No available webcams are found. Either there is no webcam connected, or they are all in use by other applications (like Skype).", "UnityHardwareCamera", "Camera: Frame size[i] = %dx%d [%.6f]", "Camera: Frame rate[i] = %.2f-%.2f [%.6f / %.6f]", "WebCamTexture", "DisplayManager: External display attached", "DisplayManager: External display detached", "***Thread '%s' tried to join itself!***", "Error joining threads: %d", ".v2.playerprefs", "__UNITY_PLAYERPREFS_VERSION__", "Upgrading PlayerPrefs storage", "Choreographer available: Enabling VSYNC timing", "initializeCamera2", "(IIIII)Z", "getCamera2Count", "getCamera2SensorOrientation", "(I)I", "isCamera2FrontFacing", "(I)Z", "getCamera2Resolutions", "(I)[I", "getFrameSizeCamera2", "()Landroid/graphics/Rect;", "closeCamera2", "startCamera2", "stopCamera2", "pauseCamera2", "isCamera2AutoFocusPointSupported", "setAutoFocusPoint", "(FF)Z", "getCameraFocusArea", "(FF)Ljava/lang/Object;", "initCamera2Jni", "nativeFrameReady", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;III)V", "nativeSurfaceTextureReady", "(Ljava/lang/Object;)V", "UnityChoreographer", "com.google.android.gms", "Failed to obtain GoogleAdsId from GooglePlayService", "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService", "Cannot bind to GooglePlayService.", "Input: dropping joystick movement - out of resources [%d, %d, %f]", "re-attaching", "detaching", "Input: detaching joystick to make room for a new one - out of resources", "Input: dropping joystick axis - no mapping [%s]", "Input: dropping joystick axis - out of resources [%d:%s]", "<0x%08x>", "<0x%04x>", "Input: %s joystick [\"%s\"][0x%08x:%s] at pos [0x%02x]", "Input: dropping joystick keypress - out of resources [%d, %d, %d]", "joystick %d button %d", "joystick button %d", "HC[EGL] Attaching window %d:%p", "Unable to acquire context for surface[%d]", "./PlatformDependent/AndroidPlayer/Source/AndroidDisplayManagerGLES.cpp", "Unable to present surface[%d]", "AndroidDisplayManagerVulkan::AttachWindow(%p, %d)", "/sys/devices/system/cpu/cpu%d/cpufreq/cpuinfo_max_freq", "%lld", "individual part_id known:%d\n", "core %d: freq: %lld kHz; part_id: %x\n", "InitBigLittleConfiguration(): Clamping to %d cores", "processor", "CPU part", "[%s] Could not open '%s'", "FMOD_FileOpen", "LocationTracker::[%s] (enabled)\n", "LocationTracker::[%s] (status:%d)\n", "LocationTracker::[%s] (disabled)\n", "LocationTracker::%s()\n", "LocationTracker::[%s] (registered)\n", "LocationTracker::%s(%.00f)\n", "1.2.3", "InflateRead: Read Error: %s (trying to syncread %ld bytes of data, but read %ld)", "Inflate Error: %s (file zip crc32 : %08x) (result: %08x)", "<unknown>", "DisplayManager: No presentation display available", "DisplayManager: Installing presentation display", "[EGL] Unable to reconfigure surface (%d)", "Warning: Using AndroidBlitType.Never with Linear Rendering requires manual linear-to-sRGB conversion in a custom render pass.\n", "Warning: Using AndroidBlitType.Never disables the ability to change MSAA sample count at runtime.\n", "Warning: Using AndroidBlitType.Never may cause problems with some custom rendering resolutions, on some Android devices.\n", "Unable to use fast blit path in linear colorspace.\n", "Unable to use fast blit path if MSAA sample count (%d) differs from initial setting (%d).\n", "Unable to use fast blit path with non-native rendering resolution before Android 4.4.\n", "Unable to use fast blit path on PowerVR-based devices.\n", "/proc/cpuinfo", "Sony Ericsson X10i", "Sony Ericsson E10i", "Input: Touchpad enabled(%.2f, %.2f)", "Unknown compression method (file zip crc32 : %08x)", "33S@-", "33S@o", " @\f\f", "ARM64", " ASIMD", " AES", " VMH", " VFPv3", " NEON", "Intel x86-64", "Intel x86", " SSE3", "MemTotal:", "MemFree:", "/proc/self/exe", "bluetooth_name", "Android OS", "0123456789abcdef", "UUID: %s => %s", "AcquireGoogleVRVideoSurface", "ReleaseGoogleVRVideoSurface", "InitVRJNI", "com/unity3d/player/GoogleVrProxy", "bin/Data/boot.config", "no boot config - using default values", "Missing required permission '%s'. Please make sure '%s' has been set in the manifest.", "Unable to find library path for '%s'.", "Unable to lookup library path for '%s', native render plugin support disabled.", "Unable to load library '%s', native render plugin support disabled: %s", "android.permission.ACCESS_NETWORK_STATE", "unity.build-id", "com.samsung.android.vr.application.mode", "com.oculus.systemactivities", "ro.product.cpu.abilist", "ro.product.cpu.abi", "ro.product.cpu.abi2", "/proc/meminfo", "af-ZA", "ar-SA", "eu-ES", "be-BY", "bg-BG", "ca-ES", "zh-CN", "zh-SG", "zh-HK", "zh-MO", "zh-TW", "cs-CZ", "da-DK", "nl-NL", "en-US", "et-EE", "fo-FO", "fi-FI", "fr-FR", "de-DE", "el-GR", "he-IL", "hu-HU", "is-IS", "id-ID", "it-IT", "ja-JP", "ko-KR", "lv-LV", "lt-LT", "nb-NO", "pl-PL", "pt-PT", "ro-RO", "ru-RU", "hr-HR", "sr-RS", "sk-SK", "sl-SI", "es-ES", "sv-SE", "th-TH", "tr-TR", "uk-UA", "vi-VN", "iw-IL", "in-ID", "(ZZZZZ)J", "setGoogleVrModeEnabled", "pauseGvrLayout", "resumeGvrLayout", "unloadGoogleVr", "getVideoSurfaceId", "getVideoSurface", "()Ljava/lang/Object;", "vrmode", "initVrJni", "setVrVideoTransform", "([[F)V", "isQuiting", "android.intent.extra.VR_LAUNCH", " -vrmode daydream", "CommandLine: %s", "UnityVibrator", "vr_only", "vr_dual", "TypelessData", "name != m_OldBaseType.Name()", "StreamingInfo", "Error while writing serialized data.", "Error while reading serialized data.", "Source and Destination Types do not match", "MemoryStream", "Trying to reload asset but can't find object on disk", "Recursive Serialization is not supported. You can't dereference a PPtr while loading. (Constructors of C# classes may not load objects either. See stacktrace.)", "Could not produce class with NULL type.", "Could not produce class with ID %d.\nThis could be caused by a class being stripped from the build even though it is needed. Try disabling 'Strip Engine Code' in Player Settings.", "Tryng to load a stream which is already loaded.", "Unloading %d Unused Serialized files (Serialized files now loaded: %d)\n", "The highest instance ID in the Remapper has overflown. The application will now exit.", "Remapper pool", "i->first.serializedFileIndex != serializedFileIndex", "Unknown error occurred while loading '%s'.", "Failed to load '%s' because it was serialized with a newer version of Unity. (Has a higher SerializedFile version)", "The file '%s' seems to have merge conflicts. Please open it in a text editor and fix the merge.\n", "Serialized file size of %s (%llu bytes) exceeds maximum. File name: '%s'.  Serialized files over %s (%llu bytes) cannot be loaded by the player.  Some likely ways to reduce this are utilizing asset bundles, re-balancing asset locations, or limiting their serialized size e.g. limiting the maximum texture sizes.", "library/unity default resources", " Type:", " ByteSize:", " MetaFlag:", " IsArray", " (node index: ", " -> ", "library/unity editor resources", "resG", "resS", "script unknown or not yet loaded", "probably %s?", "A scripted object (%s) has a different serialization layout when loading. (Read %d bytes but expected %d bytes)\nDid you #ifdef UNITY_EDITOR a section of your serialized properties in any of your scripts?", "Mismatched serialization in the builtin class '%s'. (Read %d bytes but expected %d bytes)", "Mismatched serialization in the unknown class with type id '%d'. (Read %d bytes but expected %d bytes)", "Mismatched serialization in an unknown class. (Read %d bytes but expected %d bytes)", "The file can not be loaded because it was created for another build target that is not compatible with this platform.\nPlease make sure to build AssetBundles using the build target platform that it is used by.\nFile's Build target is: %d\n", "Unable to load type information from this file.", "Script extraction failure", "Invalid serialized file. File: \"%s\"", "2018.3.0f2", "Invalid serialized file version. File: \"%s\". Expected version: 2018.3.0f2. Actual version: %s.", "m_Script", "Fatal error while reading file. Header is invalid!", "Instance couldn't be created because type was null.", "Instance of %s couldn't be created. All script needs to successfully compile first!", "The script '%s' could not be instantiated!", "Can not create instance of abstract class '%s'.", "Incompatible class %s : can't be instantiated.", "m_Left", "m_Right", "m_Top", "m_Bottom", "m_Normal", "m_Hover", "m_Active", "m_Focused", "m_OnNormal", "m_OnHover", "m_OnActive", "m_OnFocused", "m_Border", "m_Margin", "m_Padding", "m_Overflow", "m_WordWrap", "m_TextClipping", "m_ImagePosition", "m_ContentOffset", "m_FixedWidth", "m_FixedHeight", "m_StretchWidth", "m_StretchHeight", "m_Background", "m_TextColor", "InternalOnAfterDeserialize", "int3_storage", "int2_storage", "BoundsInt", "GUIStyle", "GUIStyleState", "PPtr<$>", "Generic Mono", "FixedElementField", "%i: %s\n", "Serialization depth limit %i exceeded at '%s'. There may be an object composition cycle in one or more of your serialized classes.\n\nSerialization hierarchy:\n%s", "%s::%s.%s", "DestroyImmediate should not be called on the same game object when destroying a MonoBehaviour", "Coroutine '%s' couldn't be started!", "Coroutine couldn't be started!", "Coroutine '%s' couldn't be started because the game object '%s' is being deactivated!", "Coroutine couldn't be started because the game object '%s' is being deactivated!", "Coroutine couldn't be started because the the game object '%s' is inactive!", "Failed to call function %s of class %s\n", "Calling function %s with no parameters but the function requires %d.", "Calling function %s with 1 parameter but the function requires %d.", "Coroutine '%s' couldn't be started because the the game object '%s' is inactive!", "GUISkin", "customStyles", "m_CustomStyles", "m_EditorClassIdentifier", "m_ScriptingClassIdentifier", "OnGUI function detected on MonoBehaviour, but not called, because IMGUI module is stripped.\n", "%s couldn't be called because the expected parameter %s doesn't match %s.", "Coroutine continue failure", "coroutine->IsInList()", "float.NaN has been passed into WaitForSeconds which will result in an infinite wait time.", "Another coroutine is already waiting for this coroutine!\nCurrently only one coroutine can wait for another coroutine!", "This asynchronous operation is already being yielded from another coroutine. An asynchronous operation can only be yielded once.", "m_Enabled", "The class named '%s' is not derived from MonoBehaviour or ScriptableObject!", "The class named '%s' is abstract. The script class can't be abstract!", "The class named '%s' is an interface. The script can't be an interface!", "The class named '%s' is generic. Generic MonoBehaviours are not supported!", "The class named '%s' is not yet initialized!", "The referenced script (%s) on this Behaviour is missing!", "(null)", "Instance of %s couldn't be created. The the script class needs to derive from ScriptableObject.", "<null>", "The referenced script on this Behaviour (Game Object '%s') is missing!", "%s:%s:%s", "__internalAwake", "OnRenderObject", "OnEnable", "OnEnableINTERNAL", "OnDisableINTERNAL", "OnRenderImage", "OnDrawGizmos", "OnGUI", "OnDestroy", "OnAudioFilterRead", "OnDidApplyAnimationProperties", "Script error (%s): %s.\n", "The function will be ignored.", "%sThe function must have exactly %i parameters.\n%s", "./Runtime/Mono/MonoScriptCache.cpp", "Script error(%s): %s.\n", " and ", "The function parameters have to be of type: ", "OnLevelWasLoaded", "This message has been deprecated and will be removed in a later version of Unity.\nAdd a delegate to SceneManager.sceneLoaded instead to get notifications after scene loading has completed", "ClassNotFound", "MonoScript", "Script error (", "() can not take parameters.", "() can not be a coroutine.", "%s was found on %s\n%s", "Script error: ", "The message will be ignored.", "The message must have 0 or 1 parameters.\n", "The message may not have any parameters.\n", " keyword is not allowed in ", " parameter.\n", "This message parameter has to be of type: ", "m_ExecutionOrder", "m_ClassName", "m_Namespace", "m_AssemblyName", "m_PropertiesHash", "UnhandledExceptionHandler", "RegisterUECatcher", "mscorlib.dll", "Mono Class %s couldn't be found! This might lead to random crashes later on!", "IL2CPP Root Domain", "unused_application_configuration", "SendMessage cannot be called during Awake, CheckConsistency, or OnValidate.", "UnloadAsset can only be used on assets;", "UnloadAsset may only be used on individual assets and can not be used on GameObject's / Components or AssetBundles", "Destroy may not be called from edit mode! Use DestroyImmediate instead.\nAlso think twice if you really want to destroy something in edit mode. Since this will destroy objects permanently.", "Instance of %s couldn't be created because there is no script with that name.", "%s%s%s must be instantiated using the ScriptableObject.CreateInstance method instead of new %s.", "FindAllObjectsOfType: Invalid Type", "FindAllObjectsOfType: The type has to be derived from UnityEngine.Object. Type is ", "Dictionary`2", "Failed to call function because it was null", "MonoManager", "TextAsset", "m_Scripts", "m_AssemblyNames", "m_AssemblyTypes", "Invalid mode %d.", "ArgumentException", "NullReferenceException", "InvalidOperationException", "IndexOutOfRangeException", "UnityException", "ObjectDisposedException", "NotImplementedException", "InvalidCastException", "System.Security", "List`1", "Unsupported enum type '%s' used for field '%s' in class '%s'", "il2cpp_init", "il2cpp: function il2cpp_init not found\n", "il2cpp_init_utf16", "il2cpp: function il2cpp_init_utf16 not found\n", "il2cpp_shutdown", "il2cpp: function il2cpp_shutdown not found\n", "il2cpp_set_config_dir", "il2cpp: function il2cpp_set_config_dir not found\n", "il2cpp_set_data_dir", "il2cpp: function il2cpp_set_data_dir not found\n", "il2cpp_set_temp_dir", "il2cpp: function il2cpp_set_temp_dir not found\n", "il2cpp_set_commandline_arguments", "il2cpp: function il2cpp_set_commandline_arguments not found\n", "il2cpp_set_commandline_arguments_utf16", "il2cpp: function il2cpp_set_commandline_arguments_utf16 not found\n", "il2cpp_set_config_utf16", "il2cpp: function il2cpp_set_config_utf16 not found\n", "il2cpp_set_config", "il2cpp: function il2cpp_set_config not found\n", "il2cpp_set_memory_callbacks", "il2cpp: function il2cpp_set_memory_callbacks not found\n", "il2cpp_get_corlib", "il2cpp: function il2cpp_get_corlib not found\n", "il2cpp_add_internal_call", "il2cpp: function il2cpp_add_internal_call not found\n", "il2cpp_resolve_icall", "il2cpp: function il2cpp_resolve_icall not found\n", "il2cpp_alloc", "il2cpp: function il2cpp_alloc not found\n", "il2cpp_free", "il2cpp: function il2cpp_free not found\n", "il2cpp_array_class_get", "il2cpp: function il2cpp_array_class_get not found\n", "il2cpp_array_length", "il2cpp: function il2cpp_array_length not found\n", "il2cpp_array_get_byte_length", "il2cpp: function il2cpp_array_get_byte_length not found\n", "il2cpp_array_new", "il2cpp: function il2cpp_array_new not found\n", "il2cpp_array_new_specific", "il2cpp: function il2cpp_array_new_specific not found\n", "il2cpp_array_new_full", "il2cpp: function il2cpp_array_new_full not found\n", "il2cpp_bounded_array_class_get", "il2cpp: function il2cpp_bounded_array_class_get not found\n", "il2cpp_array_element_size", "il2cpp: function il2cpp_array_element_size not found\n", "il2cpp_assembly_get_image", "il2cpp: function il2cpp_assembly_get_image not found\n", "il2cpp_class_enum_basetype", "il2cpp: function il2cpp_class_enum_basetype not found\n", "il2cpp_class_is_generic", "il2cpp: function il2cpp_class_is_generic not found\n", "il2cpp_class_is_inflated", "il2cpp: function il2cpp_class_is_inflated not found\n", "il2cpp_class_is_assignable_from", "il2cpp: function il2cpp_class_is_assignable_from not found\n", "il2cpp_class_is_subclass_of", "il2cpp: function il2cpp_class_is_subclass_of not found\n", "il2cpp_class_has_parent", "il2cpp: function il2cpp_class_has_parent not found\n", "il2cpp_class_from_il2cpp_type", "il2cpp: function il2cpp_class_from_il2cpp_type not found\n", "il2cpp_class_from_name", "il2cpp: function il2cpp_class_from_name not found\n", "il2cpp_class_from_system_type", "il2cpp: function il2cpp_class_from_system_type not found\n", "il2cpp_class_get_element_class", "il2cpp: function il2cpp_class_get_element_class not found\n", "il2cpp_class_get_events", "il2cpp: function il2cpp_class_get_events not found\n", "il2cpp_class_get_fields", "il2cpp: function il2cpp_class_get_fields not found\n", "il2cpp_class_get_nested_types", "il2cpp: function il2cpp_class_get_nested_types not found\n", "il2cpp_class_get_interfaces", "il2cpp: function il2cpp_class_get_interfaces not found\n", "il2cpp_class_get_properties", "il2cpp: function il2cpp_class_get_properties not found\n", "il2cpp_class_get_property_from_name", "il2cpp: function il2cpp_class_get_property_from_name not found\n", "il2cpp_class_get_field_from_name", "il2cpp: function il2cpp_class_get_field_from_name not found\n", "il2cpp_class_get_methods", "il2cpp: function il2cpp_class_get_methods not found\n", "il2cpp_class_get_method_from_name", "il2cpp: function il2cpp_class_get_method_from_name not found\n", "il2cpp_class_get_name", "il2cpp: function il2cpp_class_get_name not found\n", "il2cpp_class_get_namespace", "il2cpp: function il2cpp_class_get_namespace not found\n", "il2cpp_class_get_parent", "il2cpp: function il2cpp_class_get_parent not found\n", "il2cpp_class_get_declaring_type", "il2cpp: function il2cpp_class_get_declaring_type not found\n", "il2cpp_class_instance_size", "il2cpp: function il2cpp_class_instance_size not found\n", "il2cpp_class_num_fields", "il2cpp: function il2cpp_class_num_fields not found\n", "il2cpp_class_is_valuetype", "il2cpp: function il2cpp_class_is_valuetype not found\n", "il2cpp_class_value_size", "il2cpp: function il2cpp_class_value_size not found\n", "il2cpp_class_is_blittable", "il2cpp: function il2cpp_class_is_blittable not found\n", "il2cpp_class_get_flags", "il2cpp: function il2cpp_class_get_flags not found\n", "il2cpp_class_is_abstract", "il2cpp: function il2cpp_class_is_abstract not found\n", "il2cpp_class_is_interface", "il2cpp: function il2cpp_class_is_interface not found\n", "il2cpp_class_array_element_size", "il2cpp: function il2cpp_class_array_element_size not found\n", "il2cpp_class_from_type", "il2cpp: function il2cpp_class_from_type not found\n", "il2cpp_class_get_type", "il2cpp: function il2cpp_class_get_type not found\n", "il2cpp_class_get_type_token", "il2cpp: function il2cpp_class_get_type_token not found\n", "il2cpp_class_has_attribute", "il2cpp: function il2cpp_class_has_attribute not found\n", "il2cpp_class_has_references", "il2cpp: function il2cpp_class_has_references not found\n", "il2cpp_class_is_enum", "il2cpp: function il2cpp_class_is_enum not found\n", "il2cpp_class_get_image", "il2cpp: function il2cpp_class_get_image not found\n", "il2cpp_class_get_assemblyname", "il2cpp: function il2cpp_class_get_assemblyname not found\n", "il2cpp_class_get_rank", "il2cpp: function il2cpp_class_get_rank not found\n", "il2cpp_class_get_bitmap_size", "il2cpp: function il2cpp_class_get_bitmap_size not found\n", "il2cpp_class_get_bitmap", "il2cpp: function il2cpp_class_get_bitmap not found\n", "il2cpp_stats_dump_to_file", "il2cpp: function il2cpp_stats_dump_to_file not found\n", "il2cpp_stats_get_value", "il2cpp: function il2cpp_stats_get_value not found\n", "il2cpp_domain_get", "il2cpp: function il2cpp_domain_get not found\n", "il2cpp_domain_assembly_open", "il2cpp: function il2cpp_domain_assembly_open not found\n", "il2cpp_domain_get_assemblies", "il2cpp: function il2cpp_domain_get_assemblies not found\n", "il2cpp_raise_exception", "il2cpp: function il2cpp_raise_exception not found\n", "il2cpp_exception_from_name_msg", "il2cpp: function il2cpp_exception_from_name_msg not found\n", "il2cpp_get_exception_argument_null", "il2cpp: function il2cpp_get_exception_argument_null not found\n", "il2cpp_format_exception", "il2cpp: function il2cpp_format_exception not found\n", "il2cpp_format_stack_trace", "il2cpp: function il2cpp_format_stack_trace not found\n", "il2cpp_unhandled_exception", "il2cpp: function il2cpp_unhandled_exception not found\n", "il2cpp_field_get_flags", "il2cpp: function il2cpp_field_get_flags not found\n", "il2cpp_field_get_name", "il2cpp: function il2cpp_field_get_name not found\n", "il2cpp_field_get_parent", "il2cpp: function il2cpp_field_get_parent not found\n", "il2cpp_field_get_offset", "il2cpp: function il2cpp_field_get_offset not found\n", "il2cpp_field_get_type", "il2cpp: function il2cpp_field_get_type not found\n", "il2cpp_field_get_value", "il2cpp: function il2cpp_field_get_value not found\n", "il2cpp_field_get_value_object", "il2cpp: function il2cpp_field_get_value_object not found\n", "il2cpp_field_has_attribute", "il2cpp: function il2cpp_field_has_attribute not found\n", "il2cpp_field_set_value", "il2cpp: function il2cpp_field_set_value not found\n", "il2cpp_field_static_get_value", "il2cpp: function il2cpp_field_static_get_value not found\n", "il2cpp_field_static_set_value", "il2cpp: function il2cpp_field_static_set_value not found\n", "il2cpp_field_set_value_object", "il2cpp: function il2cpp_field_set_value_object not found\n", "il2cpp_gc_collect", "il2cpp: function il2cpp_gc_collect not found\n", "il2cpp_gc_collect_a_little", "il2cpp: function il2cpp_gc_collect_a_little not found\n", "il2cpp_gc_disable", "il2cpp: function il2cpp_gc_disable not found\n", "il2cpp_gc_enable", "il2cpp: function il2cpp_gc_enable not found\n", "il2cpp_gc_is_disabled", "il2cpp: function il2cpp_gc_is_disabled not found\n", "il2cpp_gc_get_used_size", "il2cpp: function il2cpp_gc_get_used_size not found\n", "il2cpp_gc_get_heap_size", "il2cpp: function il2cpp_gc_get_heap_size not found\n", "il2cpp_gc_wbarrier_set_field", "il2cpp: function il2cpp_gc_wbarrier_set_field not found\n", "il2cpp_gchandle_new", "il2cpp: function il2cpp_gchandle_new not found\n", "il2cpp_gchandle_new_weakref", "il2cpp: function il2cpp_gchandle_new_weakref not found\n", "il2cpp_gchandle_get_target", "il2cpp: function il2cpp_gchandle_get_target not found\n", "il2cpp_gchandle_free", "il2cpp: function il2cpp_gchandle_free not found\n", "il2cpp_unity_liveness_calculation_begin", "il2cpp: function il2cpp_unity_liveness_calculation_begin not found\n", "il2cpp_unity_liveness_calculation_end", "il2cpp: function il2cpp_unity_liveness_calculation_end not found\n", "il2cpp_unity_liveness_calculation_from_root", "il2cpp: function il2cpp_unity_liveness_calculation_from_root not found\n", "il2cpp_unity_liveness_calculation_from_statics", "il2cpp: function il2cpp_unity_liveness_calculation_from_statics not found\n", "il2cpp_method_get_return_type", "il2cpp: function il2cpp_method_get_return_type not found\n", "il2cpp_method_get_declaring_type", "il2cpp: function il2cpp_method_get_declaring_type not found\n", "il2cpp_method_get_name", "il2cpp: function il2cpp_method_get_name not found\n", "il2cpp_method_get_from_reflection", "il2cpp: function il2cpp_method_get_from_reflection not found\n", "il2cpp_method_get_object", "il2cpp: function il2cpp_method_get_object not found\n", "il2cpp_method_is_generic", "il2cpp: function il2cpp_method_is_generic not found\n", "il2cpp_method_is_inflated", "il2cpp: function il2cpp_method_is_inflated not found\n", "il2cpp_method_is_instance", "il2cpp: function il2cpp_method_is_instance not found\n", "il2cpp_method_get_param_count", "il2cpp: function il2cpp_method_get_param_count not found\n", "il2cpp_method_get_param", "il2cpp: function il2cpp_method_get_param not found\n", "il2cpp_method_get_class", "il2cpp: function il2cpp_method_get_class not found\n", "il2cpp_method_has_attribute", "il2cpp: function il2cpp_method_has_attribute not found\n", "il2cpp_method_get_flags", "il2cpp: function il2cpp_method_get_flags not found\n", "il2cpp_method_get_token", "il2cpp: function il2cpp_method_get_token not found\n", "il2cpp_method_get_param_name", "il2cpp: function il2cpp_method_get_param_name not found\n", "il2cpp_property_get_flags", "il2cpp: function il2cpp_property_get_flags not found\n", "il2cpp_property_get_get_method", "il2cpp: function il2cpp_property_get_get_method not found\n", "il2cpp_property_get_set_method", "il2cpp: function il2cpp_property_get_set_method not found\n", "il2cpp_property_get_name", "il2cpp: function il2cpp_property_get_name not found\n", "il2cpp_property_get_parent", "il2cpp: function il2cpp_property_get_parent not found\n", "il2cpp_object_get_class", "il2cpp: function il2cpp_object_get_class not found\n", "il2cpp_object_get_size", "il2cpp: function il2cpp_object_get_size not found\n", "il2cpp_object_get_virtual_method", "il2cpp: function il2cpp_object_get_virtual_method not found\n", "il2cpp_object_new", "il2cpp: function il2cpp_object_new not found\n", "il2cpp_object_unbox", "il2cpp: function il2cpp_object_unbox not found\n", "il2cpp_value_box", "il2cpp: function il2cpp_value_box not found\n", "il2cpp_monitor_enter", "il2cpp: function il2cpp_monitor_enter not found\n", "il2cpp_monitor_try_enter", "il2cpp: function il2cpp_monitor_try_enter not found\n", "il2cpp_monitor_exit", "il2cpp: function il2cpp_monitor_exit not found\n", "il2cpp_monitor_pulse", "il2cpp: function il2cpp_monitor_pulse not found\n", "il2cpp_monitor_pulse_all", "il2cpp: function il2cpp_monitor_pulse_all not found\n", "il2cpp_monitor_wait", "il2cpp: function il2cpp_monitor_wait not found\n", "il2cpp_monitor_try_wait", "il2cpp: function il2cpp_monitor_try_wait not found\n", "il2cpp_runtime_invoke", "il2cpp: function il2cpp_runtime_invoke not found\n", "il2cpp_runtime_invoke_convert_args", "il2cpp: function il2cpp_runtime_invoke_convert_args not found\n", "il2cpp_runtime_class_init", "il2cpp: function il2cpp_runtime_class_init not found\n", "il2cpp_runtime_object_init", "il2cpp: function il2cpp_runtime_object_init not found\n", "il2cpp_runtime_object_init_exception", "il2cpp: function il2cpp_runtime_object_init_exception not found\n", "il2cpp_runtime_unhandled_exception_policy_set", "il2cpp: function il2cpp_runtime_unhandled_exception_policy_set not found\n", "il2cpp_string_length", "il2cpp: function il2cpp_string_length not found\n", "il2cpp_string_chars", "il2cpp: function il2cpp_string_chars not found\n", "il2cpp_string_new", "il2cpp: function il2cpp_string_new not found\n", "il2cpp_string_new_len", "il2cpp: function il2cpp_string_new_len not found\n", "il2cpp_string_new_utf16", "il2cpp: function il2cpp_string_new_utf16 not found\n", "il2cpp_string_new_wrapper", "il2cpp: function il2cpp_string_new_wrapper not found\n", "il2cpp_string_intern", "il2cpp: function il2cpp_string_intern not found\n", "il2cpp_string_is_interned", "il2cpp: function il2cpp_string_is_interned not found\n", "il2cpp_thread_current", "il2cpp: function il2cpp_thread_current not found\n", "il2cpp_thread_attach", "il2cpp: function il2cpp_thread_attach not found\n", "il2cpp_thread_detach", "il2cpp: function il2cpp_thread_detach not found\n", "il2cpp_thread_get_all_attached_threads", "il2cpp: function il2cpp_thread_get_all_attached_threads not found\n", "il2cpp_is_vm_thread", "il2cpp: function il2cpp_is_vm_thread not found\n", "il2cpp_current_thread_walk_frame_stack", "il2cpp: function il2cpp_current_thread_walk_frame_stack not found\n", "il2cpp_thread_walk_frame_stack", "il2cpp: function il2cpp_thread_walk_frame_stack not found\n", "il2cpp_current_thread_get_top_frame", "il2cpp: function il2cpp_current_thread_get_top_frame not found\n", "il2cpp_thread_get_top_frame", "il2cpp: function il2cpp_thread_get_top_frame not found\n", "il2cpp_current_thread_get_frame_at", "il2cpp: function il2cpp_current_thread_get_frame_at not found\n", "il2cpp_thread_get_frame_at", "il2cpp: function il2cpp_thread_get_frame_at not found\n", "il2cpp_current_thread_get_stack_depth", "il2cpp: function il2cpp_current_thread_get_stack_depth not found\n", "il2cpp_thread_get_stack_depth", "il2cpp: function il2cpp_thread_get_stack_depth not found\n", "il2cpp_type_get_object", "il2cpp: function il2cpp_type_get_object not found\n", "il2cpp_type_get_type", "il2cpp: function il2cpp_type_get_type not found\n", "il2cpp_type_get_class_or_element_class", "il2cpp: function il2cpp_type_get_class_or_element_class not found\n", "il2cpp_type_get_name", "il2cpp: function il2cpp_type_get_name not found\n", "il2cpp_type_is_byref", "il2cpp: function il2cpp_type_is_byref not found\n", "il2cpp_type_get_attrs", "il2cpp: function il2cpp_type_get_attrs not found\n", "il2cpp_type_equals", "il2cpp: function il2cpp_type_equals not found\n", "il2cpp_type_get_assembly_qualified_name", "il2cpp: function il2cpp_type_get_assembly_qualified_name not found\n", "il2cpp_image_get_assembly", "il2cpp: function il2cpp_image_get_assembly not found\n", "il2cpp_image_get_name", "il2cpp: function il2cpp_image_get_name not found\n", "il2cpp_image_get_filename", "il2cpp: function il2cpp_image_get_filename not found\n", "il2cpp_image_get_entry_point", "il2cpp: function il2cpp_image_get_entry_point not found\n", "il2cpp_image_get_class_count", "il2cpp: function il2cpp_image_get_class_count not found\n", "il2cpp_image_get_class", "il2cpp: function il2cpp_image_get_class not found\n", "il2cpp_capture_memory_snapshot", "il2cpp: function il2cpp_capture_memory_snapshot not found\n", "il2cpp_free_captured_memory_snapshot", "il2cpp: function il2cpp_free_captured_memory_snapshot not found\n", "il2cpp_set_find_plugin_callback", "il2cpp: function il2cpp_set_find_plugin_callback not found\n", "il2cpp_register_log_callback", "il2cpp: function il2cpp_register_log_callback not found\n", "il2cpp_debugger_set_agent_options", "il2cpp: function il2cpp_debugger_set_agent_options not found\n", "il2cpp_is_debugger_attached", "il2cpp: function il2cpp_is_debugger_attached not found\n", "il2cpp_unity_install_unitytls_interface", "il2cpp: function il2cpp_unity_install_unitytls_interface not found\n", "il2cpp_custom_attrs_from_class", "il2cpp: function il2cpp_custom_attrs_from_class not found\n", "il2cpp_custom_attrs_from_method", "il2cpp: function il2cpp_custom_attrs_from_method not found\n", "il2cpp_custom_attrs_get_attr", "il2cpp: function il2cpp_custom_attrs_get_attr not found\n", "il2cpp_custom_attrs_has_attr", "il2cpp: function il2cpp_custom_attrs_has_attr not found\n", "il2cpp_custom_attrs_construct", "il2cpp: function il2cpp_custom_attrs_construct not found\n", "il2cpp_custom_attrs_free", "il2cpp: function il2cpp_custom_attrs_free not found\n", "Unable to find type [%s]%s.%s", "Unable to find method %s in [%s]%s.%s", "System.Collections", "IEnumerator", "ValueType", "SByte", "IntPtr", "UInt64", "MulticastDelegate", "AttributeUsageAttribute", "Hashtable", "IList", "IDictionary", "DateTime", "System.Runtime.CompilerServices", "FixedBufferAttribute", "get_Current", "IDisposable", "Dispose", "--debugger-agent=transport=dt_socket,embedding=1", ",server=y,suspend=n", "MONO_ARGUMENTS", "UnityEngine.dll", "UnityEditor.dll", "UnityEditor.Graphs.dll", "UnityEngine.Networking.dll", "UnityEngine.U2D", "UnityEngine.AI", "UnityEngine.Audio", "UnityEngine.Networking", "UnityEngine.Playables", "UnityEngine.Playables.Audio", "UnityEditor.Graphs", "UnityEngine.Profiling", "UnityEngine.Tilemaps", "UnityEngine.XR", "UnityEngine.XR.WSA", "UnityEngine.Video", "UnityEngine.Animations", "UnityEditor", "UnityEditorInternal", "UnityEditor.U2D", "UnityEditor.AI", "UnityEditor.Animations", "UnityEditor.Audio", "UnityEditor.Build.Reporting", "UnityEditor.SceneManagement", "UnityEditor.Experimental.Animations", "UnityEditor.Presets", "UnityEngine.Experimental.VFX", "UnityEditor.Experimental.VFX", "Collision2D", "Physics2D", "deepprofiling", "() [Coroutine: ", "UISystemProfilerApi", "GC.Collect", "Unable to find corlib type %s.%s", "Unable to find method %s in corlib %s.%s", "UnityEngine.%sModule.dll", "Failed to postprocess stacktrace\n", "StackTraceUtility", "ExtractStackTrace", "Failed to extract il2cpp stacktrace from Log message\n", "%s\n[%s line %d]", "Couldn't extract exception string from exception (another exception of class '", "' was thrown while processing the stack trace)", "currently not available on il2cpp", "The PlayableGraph is null.", "The PlayableGraph is invalid. It has either been Disposed or was never created.", "The PlayableOutput is null.", "The PlayableOutput is invalid. It has either been Disposed or was never created.", "The Playable is invalid. It has either been Disposed or was never created.", "The Playable is null.", "Cannot change inputs on playables where canChangeInputs is false.", "Cannot change weights on playables where canSetWeights is false.", "PrepareFrame", "ProcessFrame", "OnPlayableCreate", "OnPlayableDestroy", "OnBehaviourDelay", "OnBehaviourPlay", "OnBehaviourPause", "OnGraphStart", "OnGraphStop", "A PlayableGraph is being directly or indirectly evaluated recursively.", "PlayableGraph being evaluated with no outputs. Playables will not be updated", "Cannot connect output %d, it is already connected, the tree topology will be invalid. Disconnect it first", "Attempt to disconnect invalid input (%d)", "Attempt to disconnect invalid output (%d)", "Playable Input Count cannot be a negative number.", "Playable Output Count cannot be a negative number.", "Can't set a negative lead time (%.2f), value clamped to 0.0f.", "OnNotify", "Intentionally caused fatal error", "Invalid crash type: %d", "External Call: %s", "firstIndex must not be negative.", "Sphere index is out of range.", "Culling group was not disposed. You have to call Dispose explicitly from the main thread. This will likely result in a crash.", "New Game Object", "AddComponent asking for invalid type", "AddComponent with MonoBehaviour is not allowed. Create a class that derives from MonoBehaviour and add it instead.", "AddComponent asking for \"%s\" which is not a Unity engine type.", "SetKeys: Invalid input ColorKey array", "Max number of color keys is %d (given %d)", "SetKeys: Invalid input AlphaKey array", "Max number of alpha keys is %d (given %d)", "FrameTime", "Main Thread", "Profiler.CollectGlobalStats", "Profiler.CollectAudioStats", "{0}.{1}", "Failed to initialize profiler output data file: %s", "No file name has been specified", "0x%X", "Skipping profile frame. Receiver can not keep up with the amount of data sent", "Could not load symbol %s : %s\n", "Module_Dynamic", "RegisterModule_", "Vulkan: Internal error compiling expression: \"%s\"", "equal", "notEqual", "lessThan", "lessThanEqual", "greaterThan", "greaterThanEqual", "uintBitsToFloat", "floatBitsToInt", "floatBitsToUint", "ivec2", "ivec3", "ivec4", "uvec2", "uvec3", "uvec4", "bvec2", "bvec3", "bvec4", "P?0123456789abcdef%lli", "-Infinity", "%lld B", "%01.1f KB", "%01.1f MB", "%01.2f GB", "activationserver", "licenseserver", "CacheServerIPAddress", "upmServerPort", "noUpm", "enablePackageManagerTraces", "batchmode", "headless", "nographics", "runTests", "runEditorTests", "automated", "ScriptOnly", "forceFullStacktrace", "(hidden)\n", "-serial", "-password", "\nAborting batchmode due to failure:\n%s\n\n", "Temp/UnityTempFile-", "Temporary cache directory '%s' exists", "Failed to create temporary cache directory '%s'", "//?/", "UNC/", "//./", "/?<>\\:*|\"", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 ", "_%02x", "%02hhx", "Log System", "LogMessages", "cleanedLogFile", "Unable to open log %s\n", "/dev/random", "CreateDirectory '%s' failed: %s (current dir: %s)\n", "Path %s is a directory", "Closing file ", "UNKNOWN:%i", "separator (.)", "Invalid version provided - %s or end of string expected, got %c", "number digit(0 - 9)", "release type(a|b|f|p|x)", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "out of memory!", "requested larger amount than block size! requested: %d, blocksize: %d", "%4u-%2u-%2uT%2u:%2u:%2u.%7[0-9]", "%04i-%02i-%02iT%02i:%02i:%02i", "%s.%07lu", "Transform child out of bounds", "Changing desired transform hierarchy capacity (%i) to the current transform count (%i)", "Use GetTransformAccessArray to extract a valid up to date transform array", "TransformHierarchyChangeDispatch only supports up to 31 systems", "m_LocalPosition.z", "m_AnchoredPosition.x", "m_AnchoredPosition.y", "m_AnchorMin.x", "m_AnchorMin.y", "m_AnchorMax.x", "m_AnchorMax.y", "m_SizeDelta.x", "m_SizeDelta.y", "m_Pivot.x", "m_Pivot.y", "kTransformAccessArrayChangeHandle", "kTransformAccessArrayDestroyHandle", "?OnRectTransformRemoved", "OnRectTransformDimensionsChange", "m_AnchoredPosition", "gRectTransformGlobalTChangeSystem", "gRectTransformParentHierarchyChangeSystem", "Only up to %d systems are supported in TransformChangeDispatch", "m_AnchorMin", "m_AnchorMax", "m_SizeDelta", "m_Pivot", "_GrabTexture", "GEOMETRY", "ALPHATEST", "TRANSPARENT", "Shader %s uses undefined Queue: '%s'", "Shader '%s': failed to set fallback shader '%s'\n", "Shader '%s': fallback shader '%s' not found\n", "Shader '%s': dependency '%s' shader '%s' not found\n", "A multisampled texture being bound to a non-multisampled sampler. Disabling in order to avoid undefined behavior. Please use Texture2DMS in the shader.", "A non-multisampled texture being bound to a multisampled sampler. Disabling in order to avoid undefined behavior. Please enable the bindMS flag on the texture.", "Unsupported: '%s' - All passes removed\n", "GrabPass Temp", "Shader %s in '%s': %s", " at line %i", " at %s(%i)", "\n\n%s", "Unsupported: '%s' - Pass '%s' has no vertex shader\n", "Unsupported: '%s' - Pass '%s' has no fragment shader\n", "SOFTVEGETATION", "ONLYDIRECTIONAL", "ShaderProgram is unsupported, but because jobified rendering is enabled the ShaderProgram can not be removed.", "Could not write shader into %s.", "Failed to write shader into %s.", "m_Shaders", "Shader warmup: %i shaders %i combinations %.3fs\n", "%s/%s/%s.%s", "ShaderVariantCollection", "ShaderInfo", "variants", "VariantInfo", "keywords", "passType", "Hidden/Internal-StencilWrite", "Particles/Standard Unlit", "Legacy Shaders/Particles/Alpha Blended Premultiply", "Trying to access pass %d, but material '%s' has no shader.", "Trying to access pass %d, but material '%s' has only %d passes.", "Trying to find pass %s, but material '%s' has no shader.", "Instantiating material due to calling renderer.material during edit mode. This will leak materials into the scene. You most likely want to use renderer.sharedMaterial instead.", " (Instance)", "Material doesn't have a color property '%s'", "Material doesn't have a float or range property '%s'", "Material doesn't have a vector property '%s'", "Material doesn't have a matrix property '%s'", "Material doesn't have a texture property '%s'", "m_ShaderKeywords", "m_LightmapFlags", "m_EnableInstancingVariants", "m_DoubleSidedGI", "m_CustomRenderQueue", "stringTagMap", "disabledShaderPasses", "m_SavedProperties", "<invalid>", "LIGHTMODE", "SHADOWCASTER", "SHADOWCOLLECTOR", "VertexLM", "VertexLMRGBM", "true", "REQUIREOPTIONS", "FORCENOSHADOWCASTING", "IGNOREPROJECTOR", "SHADOWSUPPORT", "PASSFLAGS", "DisableBatching", "LodFading", "VERTEX", "VERTEXLM", "VERTEXLMRGBM", "FORWARDBASE", "FORWARDADD", "PREPASSBASE", "PREPASSFINAL", "DEFERRED", "META", "MOTIONVECTORS", "NEVEREXECUTED", "SRPDEFAULTUNLIT", "<unknown tag>", "CGProgram", "UnityPropertySheet", "m_TexEnvs", "m_Floats", "UnityTexEnv", "m_Scale", "FastPropertyName", "Not initialized", "Builtin property is not float type", "Builtin property should be float4 or float4x4", "Builtin property is not 16 bytes aligned", "Builtin property is out of bound of the cbuffer", "Builtin property offset in cbuffer overlap other stages", "Builtin cbuffer size is not the same for all stages", "Builtin property found in another cbuffer than \"UnityPerDraw\"", "Material property is found in another cbuffer than \"UnityPerMaterial\"", "Material uses Compute or UAV Buffer (not supported in SRP batcher)", "Builtin texture is used in more than 1 shader stage", "Builtin property is not using 32bits elements", "UnityPerMaterial CBuffer inconsistent size inside a SubShader", "Unknown compatibility code", "There are more constant buffers (%d) than the maximum supported (%d) in ComputeShader '%s' kernel '%s'.", "There are more textures (%d) than the maximum supported (%d) in ComputeShader '%s' kernel '%s'.", "There are more texture samplers (%d) than the maximum supported (%d) in ComputeShader '%s' kernel '%s'.", "There are more buffers (%d) than the maximum supported (%d) in ComputeShader '%s' kernel '%s'.", "There are more uavs (%d) than the maximum supported (%d) in ComputeShader '%s' kernel '%s'.", "Kernel '%s' not found", "Attempting to bind Texture ID %d as UAV, the texture wasn't created with the UAV usage flag set!", "Kernel index (%i) out of range", "Compute shader (%s): Property (%s) at kernel index (%i) is not set", "Compute shader (%s): Property (%s) at kernel index (%i) has mismatching texture dimension (expected %d, got %d)", "Compute shader (%s): Property (%s) at kernel index (%i) has mismatching output texture dimension (expected %d, got %d)", "_counterBuf", "Platform does not support compute shaders", "Kernel at index (%i) is invalid", "Thread group size must be above zero", "dstOffsetBytes must be a multiple of 4", "%s : Compute Buffer stride is 0", "%s : One of C# data stride (%d bytes) and Compute Buffer stride (%d bytes) should be multiple of other.", "%s : Compute Buffer offset (%d bytes) is not integer multiple of Compute Buffer stride (%d bytes).", "%s : Accessing %d bytes at offset %d for Compute Buffer of size %d bytes is not possible.", "%s : Data size (%d bytes) is not integer multiple of Compute Buffer stride (%d bytes).", "Failed to load GpuProgram from binary shader data in '%s'.", "<unknown shader>", "Failed to find expected binary shader data in '%s'.", "Shader '%s' uses %d texture parameters, more than the %d supported by the current graphics device.", "Shader '%s' uses %d random write textures, more than the %d supported by the current graphics device.", "Shader is not supported on this GPU (none of subshaders/fallbacks are suitable)", "Property (%s) exceeds maximum allowed array size (%d). Cap to (%d).", "Property (%s) exceeds previous array size (%d vs %d). Cap to previous size.", "ComputeShader", "UnityStereoGlobals", "UnityStereoGlobals_LeftRight", "UnityStereoEyeIndex", "UnityEyeIndex_Left", "UnityEyeIndex_Right", "UnityStereoEyeIndices", "UnityStereoEyeIndices_LeftRight", "UnityDrawCallInfo", "Failed to create a shader variant in '%s'. You probably have precompiled shader asset from an old Unity version.", "Encountered vertex attr %d (expecting minimum to be %d). Assuming old AssetBundle and renumbering shader input bindings.", "Expected size of UnityStereoGlobals constant buffer is %i, but found %i in shader '%s'. Stereo rendering may not work.", "Expected size of UnityStereoEyeIndex constant buffer is %i, but found %i in shader '%s'. Stereo rendering may not work.", "Expected size of UnityStereoEyeIndices constant buffer is %i, but found %i in shader '%s'. Stereo rendering may not work.", "Expected size of UnityDrawCallInfo constant buffer is %i, but found %i in shader '%s'. Stereo rendering may not work.", "Legacy Shaders/Diffuse", "Legacy Shaders/Bumped Specular", "Legacy Shaders/Bumped Diffuse", "Legacy Shaders/VertexLit", "Legacy Shaders/Parallax Specular", "Legacy Shaders/Parallax Diffuse", "Legacy Shaders/Specular", "Legacy Shaders/Diffuse Detail", "Legacy Shaders/Decal", "Legacy Shaders/Reflective/Bumped Diffuse", "Legacy Shaders/Reflective/VertexLit", "Legacy Shaders/Reflective/Parallax Specular", "Legacy Shaders/Reflective/Parallax Diffuse", "Legacy Shaders/Reflective/Specular", "Legacy Shaders/Reflective/Diffuse", "Legacy Shaders/Reflective/Bumped VertexLit", "Legacy Shaders/Reflective/Bumped Specular", "Legacy Shaders/Reflective/Bumped Unlit", "Legacy Shaders/Self-Illumin/Bumped Diffuse", "Legacy Shaders/Self-Illumin/Parallax Specular", "Legacy Shaders/Self-Illumin/Parallax Diffuse", "Legacy Shaders/Self-Illumin/Specular", "Legacy Shaders/Self-Illumin/Diffuse", "Legacy Shaders/Self-Illumin/Bumped Specular", "Legacy Shaders/Self-Illumin/VertexLit", "Legacy Shaders/Transparent/Bumped Diffuse", "Legacy Shaders/Transparent/VertexLit", "Legacy Shaders/Transparent/Parallax Specular", "Legacy Shaders/Transparent/Parallax Diffuse", "Legacy Shaders/Transparent/Specular", "Legacy Shaders/Transparent/Diffuse", "Legacy Shaders/Transparent/Bumped Specular", "Legacy Shaders/Transparent/Cutout/VertexLit", "Legacy Shaders/Transparent/Cutout/Soft Edge Unlit", "Legacy Shaders/Transparent/Cutout/Specular", "Legacy Shaders/Transparent/Cutout/Diffuse", "Legacy Shaders/Transparent/Cutout/Bumped Specular", "Legacy Shaders/Transparent/Cutout/Bumped Diffuse", "RenderFX/Skybox Cubed", "Skybox/Cubemap", "RenderFX/Skybox", "Skybox/6 Sided", " Glossy", " Bumped", " BumpedSpecular", "ParallaxBump/Diffuse", "ParallaxBump/Specular", "Alpha/VertexLit", "Alpha/Diffuse", "Alpha/Glossy", "Alpha/Bumped", "Alpha/BumpedSpecular", "ParallaxBump/AlphaDiffuse", "ParallaxBump/AlphaSpecular", "Reflective/Glossy", "Reflective/Bumped", "Reflective/BumpedSpecular", "ParallaxBump/ReflectDiffuse", "ParallaxBump/ReflectSpecular", "Lightmapped/Glossy", "Legacy Shaders/Lightmapped/Specular", "Lightmapped/Bumped", "Legacy Shaders/Lightmapped/Bumped Diffuse", "Lightmapped/BumpedSpecular", "Legacy Shaders/Lightmapped/Bumped Specular", "Legacy Shaders/Lightmapped/VertexLit", "Legacy Shaders/Lightmapped/Diffuse", "Legacy Shaders/Diffuse Fast", "Self-Illumin/Glossy", "Self-Illumin/Bumped", "Self-Illumin/BumpedSpecular", "ParallaxBump/IlluminDiffuse", "ParallaxBump/IlluminSpecular", " DiffuseDetail", " Diffuse (fast)", " Decal", "Hidden/TerrainEngine/Splatmap/Lightmap-FirstPass", "Nature/Terrain/Diffuse", "Hidden/TerrainEngine/Splatmap/Lightmap-AddPass", "Hidden/TerrainEngine/Splatmap/Diffuse-AddPass", "ScriptMapper", "ComputeShaderVariant", "targetRenderer", "targetLevel", "kernels", "constantBuffers", "resourcesResolved", "ComputeShaderKernel", "textures", "builtinSamplers", "outBuffers", "threadGroupSize", "ComputeShaderResource", "generatedName", "samplerBindPoint", "texDimension", "ComputeShaderBuiltinSampler", "ComputeShaderCB", "byteSize", "params", "ComputeShaderParam", "arraySize", "rowCount", "colCount", "m_PreloadShaders", "NameToObjectMap", "m_ObjectToName", "UnityInstancing", "GraphicsCaps", "OpenGL 3.2 is required. Your GPU (%s) or OpenGL drivers only supports OpenGL %i.%i", "Your GPU (%s) or driver doesn't support OpenGL ES 3", "OpenGL ES 3.0 is required. Your GPU (%s) or OpenGL ES drivers only supports OpenGL %i.%i", "OpenGL ES 2.0 is required. Your GPU (%s) or OpenGL ES drivers only supports OpenGL %i.%i", "OpenGL ES 3.1 is required. Your GPU (%s) or OpenGL ES drivers only supports OpenGL %i.%i", "3dLabs", "Matrox", "NVIDIA", "Trident", "Imagination Technologies", "VIA/S3", "3dfx", "Parallels", "Microsoft", "VMWare", "VirtualBox", "Qualcomm", "Unknown (ID=%x)", "HideInInspector", "PerRendererData", "NoScaleOffset", "Gamma", "NonModifiableTextureData", "Invalid channel binding (%d to %d)", "SPOT", "DIRECTIONAL_COOKIE", "POINT_COOKIE", "SHADOWS_DEPTH", "SHADOWS_SCREEN", "SHADOWS_CUBE", "SHADOWS_SOFT", "SHADOWS_SPLIT_SPHERES", "SHADOWS_SINGLE_CASCADE", "DIRLIGHTMAP_COMBINED", "DYNAMICLIGHTMAP_ON", "LIGHTMAP_SHADOW_MIXING", "SHADOWS_SHADOWMASK", "LIGHTPROBE_SH", "FOG_LINEAR", "FOG_EXP", "FOG_EXP2", "_EMISSION", "VERTEXLIGHT_ON", "SOFTPARTICLES_ON", "UNITY_HDR_ON", "LOD_FADE_CROSSFADE", "PROCEDURAL_INSTANCING_ON", "UNITY_SINGLE_PASS_STEREO", "STEREO_INSTANCING_ON", "STEREO_MULTIVIEW_ON", "STEREO_CUBEMAP_RENDER_ON", "EDITOR_VISUALIZATION", "Maximum number (%i) of shader keywords exceeded, keyword %s will be ignored.\nYou will have to delete some shaders or make them use less keywords.\nKeywords used in project now:", "Resource image couldn't be loaded completely", "Resource image for '", "' couldn't be loaded!", "The file '", "' is corrupted! Remove it and launch unity again!\n[Position out of bounds!]", "none", "GetAddressOfMemory called on CacheReaderBase which does not support it", "GetAddressOfMemory called on CacheWriterBase which does not support it", "m_FileSize - position < size", "Scene with build index: %d couldn't be loaded because it has not been added to the build settings.\nTo add a scene to the build settings use the menu File->Build Settings...", "Scene '%s' couldn't be loaded because it has not been added to the build settings or the AssetBundle has not been loaded.\nTo add a scene to the build settings use the menu File->Build Settings...", "Cannot load scene: Invalid scene name (empty string) and invalid build index %d", "Unloading the last loaded scene %s(build index: %d), is not supported. Please use SceneManager.LoadScene()/EditorSceneManager.OpenScene() to switch to another scene.", "DontDestroyOnLoad only work for root GameObjects or components on root GameObjects.", "sharedassets%d.assets", "Multiple managers are loaded of type: %s", "Managed Jobs", "Burst Jobs", "VSync", "Overhead", "NativeMem", "FileIO", "UI Layout", "UI Render", "Build Interface", "Profiler marker with the same name is already created: %s", "PreloadData", "m_Assets", "m_ExplicitDataLayout", "AssetReferenceStorage", "Unable to move cache file '%s' to '%s': destination exists", "Unable to move cache file '%s' to '%s': error code - %d", "OnApplicationPause", "OnApplicationFocus", "OnApplicationQuit", "PlayerInitEngineNoGraphics: InitializeEngine failed\n", "No GlobalGameManagers file was found at %s, quitting player!\n", "PlayerInitEngineNoGraphics settings: %s\n", "PlayerInitEngineGraphics: InitializeEngineGraphics failed\n", "PlayerInitEngineGraphics: GPU not supported; %s\n", "PlayerInitEngineGraphics: %s\n", "level0", "sharedassets0.assets", "Screenmanager Resolution Use Native", "Library/unity default resources", "UnityEngine.StyleSheets", "UnityEditor.StyleSheets", "UnityEditor.Experimental.UIElements", "UnityEngine.Experimental.UIElements", "Internal-Colored.shader", "New-Cylinder.fbx", "New-Sphere.fbx", "New-Capsule.fbx", "New-Plane.fbx", "Quad.fbx", "UnityWaterMark-small.png", "EscToExit_back.png", "EscToExit_text.png", "UnityWaterMark-trial-big.png", "UnityWaterMark-trial.png", "UnityWaterMark-beta.png", "UnityWaterMark-edu.png", "UnityWaterMark-dev.png", "WarningSign.psd", "UnityWaterMark-proto.png", "UnityWaterMarkPlugin-beta.png", "UnitySplash-cube.png", "GameSkin/GameSkin.guiskin", "GameSkin/box.png", "GameSkin/button active.png", "GameSkin/button hover.png", "GameSkin/button on hover.png", "GameSkin/button on.png", "GameSkin/button.png", "GameSkin/horizontal scrollbar thumb.png", "GameSkin/horizontal scrollbar.png", "GameSkin/horizontalslider.png", "GameSkin/slider thumb active.png", "GameSkin/slider thumb.png", "GameSkin/slidert humb hover.png", "GameSkin/toggle active.png", "GameSkin/toggle hover.png", "GameSkin/toggle on hover.png", "GameSkin/toggle on.png", "GameSkin/toggle on active.png", "GameSkin/toggle.png", "GameSkin/vertical scrollbar thumb.png", "GameSkin/vertical scrollbar.png", "GameSkin/verticalslider.png", "GameSkin/window on.png", "GameSkin/window.png", "GameSkin/textfield.png", "GameSkin/textfield on.png", "GameSkin/textfield hover.png", "TemplateAsset", "VisualTreeAsset", "StyleSheet", "VR/UnitySplash-HolographicTrackingLoss.png", "TileBase", "The resource ", " could not be loaded from the resource file!", "Invalid path", "Cache is invalid.", "Skipped rendering frame because GfxDevice is in invalid state (device lost)", "Data/unity default resources", "Resources/unity_builtin_extra", "Default-Material.mat", "ResourceManager", "m_Container", "m_DependentAssets", "ResourceManager_Dependency", "m_Object", "Plugins: Couldn't open %s, error: %s", "UnitySetEventQueue", "UnitySetGraphicsDevice", "UnityRenderEvent", "UnityGetAudioEffectDefinitions", "UnityPluginLoad", "UnityPluginUnload", "UnityRenderingExtEvent", "UnityRenderingExtQuery", "UnityShaderCompilerExtEvent", "Invalid input cache index %d", "Invalid empty input cache path.", "Input cache is invalid.", "Cache src is invalid.", "Cache dst is invalid.", "The input cache is invalid.", "The input cache '%s' is readonly.", "UnloadUnusedAssets incorrect caused some assets to load. This can easily cause deadlocks or crashes.", "\nUnloading %d unused Assets to reduce memory usage. Loaded Objects now: %d.\n", "Total: %f ms (FindLiveObjects: %f ms CreateObjectMapping: %f ms MarkObjects: %f ms  DeleteObjects: %f ms)\n\n", "Internal: CalculateAllObjectReferences is not implemented when memory profiler is disabled. Enable memory profiler for the build", "An abnormal situation has occurred: the PlayerLoop internal function has been called recursively. Please contact Customer Support with a sample project so that we can reproduce the problem and troubleshoot it.", "OSXEditor", "OSXPlayer", "WindowsPlayer", "WindowsEditor", "iPhonePlayer", "tvOSPlayer", "AndroidPlayer", "LinuxPlayer", "LinuxEditor", "WebGL", "UWPPlayerX86", "UWPPlayerX64", "UWPPlayerARM", "SwitchPlayer", "Afrikaans", "Arabic", "Basque", "Belarusian", "Bulgarian", "Catalan", "Chinese", "ChineseSimplified", "ChineseTraditional", "SerboCroatian", "Czech", "Danish", "Dutch", "English", "Estonian", "Faroese", "Finnish", "French", "German", "Greek", "Hebrew", "Hungarian", "Icelandic", "Indonesian", "Italian", "Korean", "Latvian", "Lithuanian", "Norwegian", "Polish", "Portuguese", "Romanian", "Russian", "Slovak", "Slovenian", "Spanish", "Swedish", "Thai", "Turkish", "Ukrainian", "Vietnamese", "TempLabels", "TempAlloc", "TempJobAlloc", "TempOverflow", "TempBackgroundJobAlloc", "RegularLabels", "Permanent", "NewDelete", "MallocFree", "DynamicGeometry", "ImmediateGeometry", "BatchedGeometry", "TextureCache", "GfxThread", "AudioProcessing", "AudioTemp", "FMOD", "FMODStream", "FMODSample", "FMODExtraDSP", "ThreadStack", "JobScheduler", "GarbageCollector", "GLib", "GLibImage", "MonoCode", "ScriptingNativeRuntime", "BaseObject", "WebCam", "MemoryProfiler", "MemoryProfilerString", "Terrain", "TerrainPhysics", "StaticString", "DynamicArray", "UTF16String", "Curl", "TypeTree", "ScriptManager", "Unet", "ClusterRenderer", "ClusterInput", "GPUMemory", "CloudService", "SceneManager", "LazyScriptCache", "Speech", "SceneLoad", "ManagedAttributeManager", "TextureStreaming", "iOSReplayKit", "NativeArray", "ScreenCapture", "CrashReporter", "EditorGui", "EditorUtility", "VersionControl", "UndoBuffer", "AssetDatabase", "AssetUsage", "PreviewImage", "AssetImporter", "RestService", "FBXImporter", "EditorGi", "ProgressiveLightmapper", "Yaml", "UnityConnect", "WebViewCallback", "Collab", "HubClient", "WebSocketClient", "LocalIPC", "ProfilerEditor", "Bootstrap", "PS4ShaderUcode", "XboxOneGpuOnionMemory", "XboxOneGpuGarlicMemory", "InvalidAlloc", "SketchUp", "SpatialMapping", "GestureRecognition", "HolographicPersistence", "HolographicSharing", "HolographicAnchors", "Licensing", "AssetReference", "CachingManager", "wait-for-native-debugger", "wait-for-managed-debugger", "You can attach a native debugger now if you want", "You can attach a managed debugger now if you want", "data.unity3d", "globalgamemanagers", "globalgamemanagers.assets", "Initialize engine version: %s\n", "UNITY_GIVE_CHANCE_TO_ATTACH_DEBUGGER", "RuntimeInitializeOnLoadManager", "m_NamespaceNames", "m_ClassInfos", "m_ClassMethodInfos", "m_BeforeUnityMethodExecutionOrders", "m_AfterUnityMethodExecutionOrders", "m_BeforeMethodExecutionOrders", "m_AfterMethodExecutionOrders", "ClassInfo", "m_AssemblyNameIndex", "m_NamespaceIndex", "m_NumOfMethods", "m_MethodIndex", "m_IsUnityClass", "ClassMethodInfo", "m_ClassIndex", "m_MethodName", "m_OrderNumber", "Assets/", ".unity", "Level %s couldn't be found because it has not been added to the build settings.\nTo add a level to the build settings use the menu File->Build Settings...", "level%d", "UnityEngine.", " or ", "Adding component failed. Add required component of type %s to the game object '%s' first.", "Can't add script behaviour because the script couldn't be found.", "Can't add script behaviour %s. The scripts file name does not match the name of the class defined in the script!", "Script %s has not finished compilation yet. Please wait until compilation of the script has finished and try again.", "Can't add script behaviour %s. The script class can't be abstract!", "Can't add script behaviour %s. The script can't be an interface!", "Can't add script behaviour %s. Generic MonoBehaviours are not supported!", "Can't add script behaviour %s. The script needs to derive from MonoBehaviour!", "Adding component failed. Add required component%s of type %s to the game object '%s' first.", "Can't add component because class '%s' doesn't exist!", "Can't add component because '%s' is not derived from Component.", "Can't destroy Transform component of '%s'. If you want to destroy the game object, please call 'Destroy' on the game object instead. Destroying the transform component is not allowed.", "Can't remove %s because %s depends on it", "Destroying object \"%s\" is not allowed at this time.", "Destroying object multiple times. Don't use DestroyImmediate on the same object in OnDisable or OnDestroy.", "Destroying components immediately is not permitted during physics trigger/contact, animation event callbacks or OnValidate. You must use Destroy instead.", "Cannot destroy Component while GameObject is being activated or deactivated.", "Can't destroy %s component of '%s'. If you want to destroy the game object, please call 'Destroy' on the game object instead. Destroying the %s component is not allowed.", "Destroying GameObjects immediately is not permitted during physics trigger/contact, animation event callbacks or OnValidate. You must use Destroy instead.", "Cannot destroy GameObject while it is being activated or deactivated.", "Cannot destroy GameObject while it's parent is being activated or deactivated.", "Destroying AssetBundle directly is not permitted.\nUse AssetBundle.UnloadBundle to destroy an AssetBundle.", "Component Removing internal failure", "UnityEngine.%s", "Tag: tag name is null or empty.", "Tag: %s is not defined.", "Scene hierarchy path \"", "Sphere", "Capsule", "Cylinder", "SphereCollider", "CapsuleCollider", "BoxCollider", "MeshCollider", "UnloadTime: %f ms\n", "Can't add a %s component because one is already added.", "Failure to create component of type '%s' (0x%08X)", "Can't add component to object that is being destroyed.", "Can't add component '%s' to %s because it conflicts with the existing '%s' derived component!", "Can't add component '%s' to %s because it conflicts with the '%s' derived component!", "Can't add component '%s' to %s because such a component is already added to the game object!", "Cannot add component of type '%s' because it is abstract. Add component of type that is derived from '%s' instead.", "Can't add '%s' to %s because a '%s' is already added to the game object!", "Can't add '%s' to %s because a '%s' is already added to the game object!\nA GameObject can only contain one '%s' component.", " (Script)", "preloadedPlugins", "enabledVRDevices", "buildTags", "hasPROVersion", "isNoWatermarkBuild", "isPrototypingBuild", "isEducationalBuild", "isEmbedded", "isTrial", "hasPublishingRights", "hasShadows", "hasSoftShadows", "hasLocalLightShadows", "hasAdvancedVersion", "enableDynamicBatching", "usesOnMouseEvents", "hasClusterRendering", "m_Version", "m_AuthToken", "5.0.0a1", "Incompatible build settings.", "runtimeClassHashes", "scriptHashes", "m_GraphicsAPIs", "ReadCacheIndex", "%llu\n%d\n%llu\n", "AssetBundle '%s' with hash '%s' is still in use. ", "Cache expiration may not be higher then %d", "Maximum disk space used exceeds what is allowed by the license", "manifest", "AssetFileHash", "ManifestFileVersion", "Failed to get Caching Temp directory!", "Cannot remove the default cache.", "kMouseDown", "kMouseUp", "kMouseMove", "kMouseDrag", "kKeyDown", "kKeyUp", "kScrollWheel", "kRepaint", "kLayout", "kDragUpdated", "kDragPerform", "kIgnore", "kUsed", "kValidateCommand", "kExecuteCommand", "kContextClick", "kMouseEnterWindow", "kMouseLeaveWindow", "Event: %s for display %d\n", "  Pos (%f, %f) \t   Delta: (%f, %f)\n", "  Button: %d", "  Click count: %d", "  character: '%c'\n", "  character: code %d\n", "  keycode: '%d'\n", "  keyRepeat: %s\n", "false", "  Mod: ", "shift ", "ctrl ", "alt ", "cmd ", "num ", "capslock ", "fkey ", "none ", "public.app-category.games", "PlayerSettings", "defaultWebScreenWidth", "defaultScreenWidthWeb", "defaultWebScreenHeight", "defaultScreenHeightWeb", "iPhoneBundleVersion", "bundleVersion", "enableHWStatistics", "preloadShaders", "keepLoadedShadersAlive", "Override IPod Music", "muteOtherAudioSources", "singlePassStereoRendering", "m_StereoRenderingPath", "orientation out of range", "orientation out of range, ignoring", "all orientations are disabled for auto-rotation. Enabling Portrait", "MacFullscreenMode.CaptureDisplay is deprecated and no longer supported. Will use MacFullscreenMode.FullscreenWindow instead.", "Oculus Shared Depth Buffer cannot be set while the Editor is in Play mode.", "Oculus Dash Support cannot be set while the Editor is in Play mode.", "__info", "UnityCache", "productGUID", "AndroidProfiler", "AndroidFilterTouchesWhenObscured", "AndroidEnableSustainedPerformanceMode", "defaultScreenOrientation", "targetDevice", "useOnDemandResources", "accelerometerFrequency", "defaultCursor", "cursorHotspot", "m_HolographicTrackingLossScreen", "defaultScreenWidth", "defaultScreenHeight", "m_ActiveColorSpace", "m_MTRendering", "mobileMTRenderingBaked", "m_StackTraceTypes", "iosShowActivityIndicatorOnLoading", "androidShowActivityIndicatorOnLoading", "iosAppInBackgroundBehavior", "displayResolutionDialog", "iosAllowHTTPDownload", "allowedAutorotateToPortrait", "allowedAutorotateToPortraitUpsideDown", "allowedAutorotateToLandscapeRight", "allowedAutorotateToLandscapeLeft", "useOSAutorotation", "use32BitDisplayBuffer", "preserveFramebufferAlpha", "disableDepthAndStencilBuffers", "androidBlitType", "defaultIsNativeResolution", "macRetinaSupport", "captureSingleScreen", "Prepare IOS For Recording", "Force IOS Speakers When Recording", "deferSystemGesturesMode", "hideHomeButton", "usePlayerLog", "bakeCollisionMeshes", "forceSingleInstance", "resizableWindow", "useMacAppStoreValidation", "macAppStoreCategory", "gpuSkinning", "graphicsJobs", "xboxPIXTextureCapture", "xboxEnableAvatar", "xboxEnableKinect", "xboxEnableKinectAutoTracking", "xboxEnableFitness", "visibleInBackground", "allowFullscreenSwitch", "graphicsJobMode", "fullscreenMode", "xboxSpeechDB", "xboxEnableHeadOrientation", "xboxEnableGuest", "xboxEnablePIXSampling", "metalFramebufferOnly", "xboxOneResolution", "xboxOneSResolution", "xboxOneXResolution", "xboxOneMonoLoggingLevel", "xboxOneLoggingLevel", "xboxOneDisableEsram", "xboxOnePresentImmediateThreshold", "switchQueueCommandMemory", "vulkanEnableSetSRGBWrite", "m_SupportedAspectRatios", "preloadedAssets", "metroInputSource", "wsaTransparentSwapchain", "m_HolographicPauseOnTrackingLoss", "xboxOneDisableKinectGpuReservation", "xboxOneEnable7thCore", "isWsaHolographicRemotingEnabled", "vrSettings", "protectGraphicsMemory", "enableFrameTimingStats", "useHDRDisplay", "m_ColorGamuts", "targetPixelDensity", "resolutionScalingMode", "androidSupportedAspectRatio", "androidMaxAspectRatio", "framebufferDepthMemorylessMode", "projectName", "organizationId", "cloudEnabled", "enableNativePlatformBackendsForNewInputSystem", "disableOldInputManagerSupport", "legacyClampBlendShapeWeights", "m_SplashScreenBackgroundColor", "m_ShowUnitySplashScreen", "m_ShowUnitySplashLogo", "m_SplashScreenOverlayOpacity", "m_SplashScreenAnimation", "m_SplashScreenLogoStyle", "m_SplashScreenDrawMode", "m_SplashScreenBackgroundAnimationZoom", "m_SplashScreenLogoAnimationZoom", "m_SplashScreenBackgroundLandscapeAspect", "m_SplashScreenBackgroundPortraitAspect", "m_SplashScreenBackgroundLandscapeUvs", "m_SplashScreenBackgroundPortraitUvs", "m_SplashScreenLogos", "m_SplashScreenBackgroundLandscape", "m_SplashScreenBackgroundPortrait", "m_VirtualRealitySplashScreen", "SplashScreenLogo", "logo", "duration", "Others", "16:10", "16:9", "VRSettings", "cardboard", "hololens", "oculus", "enable360StereoCapture", "DeviceNone", "depthFormat", "enableTransitionView", "useSustainedPerformanceMode", "enableVideoLayer", "useProtectedVideoMemory", "minimumSupportedHeadTracking", "maximumSupportedHeadTracking", "HoloLens", "depthBufferSharingEnabled", "Oculus", "sharedDepthBuffer", "dashSupport", "Result buffer too small, this will be possible once the API uses NativeList", "%s: %s\nThis Exception was thrown from a job compiled with Burst, which has limited exception support. Turn off burst (Jobs -> Enable Burst Compiler) to inspect full exceptions & stacktraces.", "Background Job", " (Burst)", " (Cleanup)", "%s can not be marked with both [ReadOnly] and [WriteOnly].", "NativeContainer can not be NativeContainerSupportsAtomicWrite and NativeContainerSupportsMinMaxWriteRestriction at the same time", "%s is not declared [ReadOnly] in a IJobParallelFor job. The container does not support parallel writing. Please use a more suitable container type.", "%s uses [NativeSetThreadIndex], but the field is not an instance int.", "m_ThreadIndex", "%s uses [NativeContainerNeedsThreadIndex], but the native container type has no ThreadIndex property.", "%s uses [DeallocateOnJobCompletion] but the native container does not support deallocation of the memory from a job.", "m_Buffer", "m_AllocatorLabel", "%s uses the [DeallocateOnJobCompletion] but has no fields named m_Buffer, m_AllocatorLabel, m_DisposeSentinel. This is an internal error in the container type, fields name must match the required names.", "%s is not a value type. Job structs may not contain any reference types.", "OnParticleCollision", "OnParticleTrigger", "OnParticleSystemStopped", "OnAnimatorMoveBuiltin", "OnAnimatorIK", "OnTriggerEnter", "OnTriggerExit", "OnTriggerStay", "OnCollisionEnter", "OnCollisionExit", "OnCollisionStay", "OnJointBreak", "OnDidVelocityChange", "Light index must be a valid shadow casting light", "No valid shadow casters, use CullResults.GetShadowCasterBounds to determine if there are visible shadow caster for the light", "GetDefaultTerrainMaterial", "GetDefaultUIMaterial", "GetDefaultUIOverdrawMaterial", "GetDefaultUIETC1SupportedMaterial", "GetDefault2DMaterial", "GetDefaultShader", "ScriptableRenderContext", "Hidden/BlitCopyWithDepth", "Unable to use Blit. Shader is not yet initialized!", "_dname", "_dname_ST", "_dname_TexelSize", "_dname_HDR", "Could not find temp RT for name %d", "Missing instance ID from RenderTexture given to RenderTargetIdentifier!", "Attempting to render to an unsupported RenderTargetIdentifier type %d", "RenderPass: Unable to allocate transient surface", "RenderPass: Cannot store an attachment into a transient resource", "RenderPass: Unable to find attachment surface", "RenderPass: Missing resolve surface", "RenderPass: Attachment dimensions or sample count do not match RenderPass specifications (%d x %d %dAA) vs (%d x %d %dAA).", "Attempting to start a subpass with color attachment not bound to the RenderPass!", "Attempting to start a subpass with input attachment not bound to the RenderPass!", "Attempting to start a new RenderPass without disposing the previously active one first!", "RenderPass: No subpass started.", "Trying to load color backbuffer into a complex renderpasssetup, results undefined.", "Trying to load depth backbuffer into a complex renderpasssetup, results undefined.", "SetupCameraProperties called with steroSetup == true, but no VRDevice active.", "Scriptable Render Pipeline stereo support requires single-pass stereo.", "Unknown RenderLoop command: %d", "RenderPassAttachment", "?Renderer '%s' is registered with more than one LODGroup ('%s' and '%s').", "kSystemLODGroupPositionRotation", "kSystemLODGroupScale", "Reaching maximum allowed number of LODGroups. Skipping.", "Cross-fading from LOD%d to Culled is disabled.", "SetLODs: Attempting to force a LOD outside the number available LODs", "SetLODs: Attempting to force a LOD on a disabled LODGroup", "SetLODs: Attempting to set more than the maximum number of LODS (%i) clamping", "SetLODs: Attempting to set LOD where the screen relative size is greater then or equal to a higher detail LOD level.", "m_LocalReferencePoint", "m_FadeMode", "m_AnimateCrossFading", "m_LastLODIsBillboard", "m_LODs", "LODStruct50", "screenRelativeHeight", "fadeTransitionWidth", "renderers", "LODRenderer", "CommandBuffer: material '%s' cannot be used with DrawMeshInstanced because it doesn't enable instancing.", "Attempting to bind MIP %d of Texture ID %d as an UAV, but the texture only has %d MIP levels!", "SetRenderTarget", "SetRenderTarget color buffer", "SetRenderTarget depth buffer", "SetRWTexture target", "CommandBuffer: RenderTexture '%s' cannot be used with SetRandomWriteTarget because it does not have random write enabled", "Copy source", "Copy destination", "Blit source", "Blit destination", "(Unknown material)", "SetGlobalTexture", "Plugin Custom Blit Source", "Plugin Custom Blit Destination", "Unknown RenderingCommandBuffer command: %d (previous command: %d) in %s", "Command buffer %s contains at least one command (command type: %d) that is not suitable to be executed in async compute: (previous command: %d)", "CommandBufferState %s GetAndCheckRT called while command buffer is not setup for execution", "CommandBuffer: built-in render texture type %i not found while executing %s (%s)", "CommandBuffer: temporary render texture %s not found while executing %s (%s)", "CommandBufferState %s FindTempRTPair %s called while command buffer is not setup for execution", "CommandBuffer %s FindTempRTIndex %s called while command buffer is not setup for execution", "RenderingCommandBuffer: invalid pass index %i in DrawRenderer", "RenderingCommandBuffer: invalid pass index %i in DrawMesh", "RenderingCommandBuffer: invalid pass index %i in DrawProcedural", "RenderingCommandBuffer: invalid pass index %i in DrawProceduralIndirect", "RenderingCommandBuffer: invalid pass index %i in DrawMeshInstanced", "RenderingCommandBuffer: invalid pass index %i in DrawMeshInstancedIndirect", "unity_BillboardSize", "unity_BillboardImageTexCoords", "BILLBOARD_FACE_CAMERA_POS", "rotated", "BillboardAsset", "BillboardRenderer", "m_Billboard", "PPtr<BillboardAsset>", "AsyncGPUReadback - Not enough space in the destination buffer: %u/%u", "AsyncGPUReadback - Invalid texture dimension: %d", "AsyncGPUReadback - ComputeBuffer is NULL", "AsyncGPUReadback - ComputeBufferID is invalid", "AsyncGPUReadback - Out of bounds arguments - src offset:%u dst size:%u src size:%u", "AsyncGPUReadback - Texture is NULL", "AsyncGPUReadback - TextureID is invalid", "AsyncGPUReadback - Compressed texture format is not supported", "AsyncGPUReadback - Invalid mipIndex: %u", "AsyncGPUReadback - width, height and depth cannot be 0", "AsyncGPUReadback - Out of bounds arguments - src offset:(%u,%u,%u) dst dim:(%u,%u,%u) src dim:(%u,%u,%u)", "CustomRenderTextureCenters", "CustomRenderTextureSizesAndRotations", "CustomRenderTexturePrimitiveIDs", "CustomRenderTextureParameters", "_CustomRenderTextureInfo", "_SelfTexture2D", "_SelfTexture3D", "_SelfTextureCube", "Initialization Material %s used in Custom Render Texture %s uses Grab Pass which is not allowed with Custom Render Texture. Texture will not be rendered.", "UnityDitherMask2D", "UnityDitherMask3D", "UnityNormalMap", "UnityWhite", "UnityBlack", "UnityRandomRotation", "UnityRed", "UnityGrey", "UnityLinearGrey", "UnityGrayscaleRamp", "UnityHalo", "UnityBlackCube", "UnityDefault2D", "UnityDefault3D", "UnityDefault2DArray", "UnityDefaultCubeArray", "UnityDefaultCube", "default TexEnvs", "UnityNHxRoughness", "Invalid width (%d) or height (%d) used for creating mipmaps.", "Unsupported", "Unsupported texture format - needs to be ARGB32, RGBA32, BGRA32, RGB24, Alpha8, RGBAFloat, RGBAHalf or one of supported compressed formats.", "Unsupported texture format - needs to be ARGB32, RGBA32, RGB24, Alpha8 or one of float formats", "Width and height must be positive", "Texture rectangle is out of bounds (%d < 0)", "Texture rectangle is out of bounds (%d + %d > %d)", "Cannot access pixel data of compressed texture formats which cannot be partially decompressed (such as Crunch).", "Array size must be at least width*height", "Texture rectangle is out of bounds", "Matrix stack full depth reached", "Matrix stack empty", "RenderBufferManager::Textures::TextureEntry", "RenderBufferManager::Buffers::BufferEntry", "TempBuffer %d %ix%i", "Attempting to release a non-temporary RenderTexture as a temporary texture.", "Invalid texture format (%d) for SparseTexture", "Sparse textures are not supported", "SparseTexture has out of range width / height", "Uploading sparse texture tile before the texture is initialized!", "Invalid mip level for sparse texture tile upload", "Invalid tile X index for sparse texture tile upload", "Invalid tile Y index for sparse texture tile upload", "Can't upload color data into a compressed sparse texture", "Not enough data passed for sparse texture tile upload", "No texture data available. Please mark the texture readable or don't instantiate it.", "m_ForcedFallbackFormat", "m_DownscaleFallback", "Failed to decompress Crunch texture data (size %dx%d format %d mips %d)", "Hidden/Internal-GUITexture", "UnityAttenuation", "TextureFormat %d is not supported as attenuation texture, falling back to Alpha8", "m_Width", "m_MipCount", "m_Format", "m_ColorSpace", "m_TextureSettings", "GLTextureSettings", "m_FilterMode", "m_Aniso", "m_MipBias", "m_WrapU", "m_WrapV", "m_WrapW", "ASTC 4x4", "ASTC 5x5", "ASTC 6x6", "ASTC 8x8", "ASTC 10x10", "ASTC 12x12", "PVRTC", "Crunch", "Uncompressed", "Alpha 8", "RG 16", "ARGB 16 bit", "RGBA 16 bit", "RGB 24 bit", "RGBA 32 bit", "ARGB 32 bit", "ARGB float", "BGR 24 bit", "R 16 bit", "RGB Compressed DXT1", "RGBA Compressed DXT3", "RGBA Compressed DXT5", "R Compressed BC4", "RG Compressed BC5", "RGB HDR Compressed BC6H", "RGB(A) Compressed BC7", "BGRA 32 bit", "R Half", "RG Half", "RGBA Half", "R Float", "RG Float", "RGB Float", "RGBA Float", "RGB9e5 32 bit Shared Exponent Float", "RGB Compressed PVRTC 2 bits", "RGBA Compressed PVRTC 2 bits", "RGB Compressed PVRTC 4 bits", "RGBA Compressed PVRTC 4 bits", "RGB Compressed ETC 4 bits", "RGB Compressed ETC2 4 bits", "RGB + 1-bit Alpha Compressed ETC2 4 bits", "RGBA Compressed ETC2 8 bits", "Signed R Compressed EAC 4 bit", "Signed RG Compressed EAC 8 bit", "RGB Compressed ASTC 4x4 block", "RGBA Compressed ASTC 4x4 block", "RGB Compressed ASTC 5x5 block", "RGBA Compressed ASTC 5x5 block", "RGB Compressed ASTC 6x6 block", "RGBA Compressed ASTC 6x6 block", "RGB Compressed ASTC 8x8 block", "RGBA Compressed ASTC 8x8 block", "RGB Compressed ASTC 10x10 block", "RGBA Compressed ASTC 10x10 block", "RGB Compressed ASTC 12x12 block", "RGBA Compressed ASTC 12x12 block", "RGB Crunched DXT1", "RGBA Crunched DXT5", "RGB Crunched ETC", "RGBA Crunched ETC2", "YUY2 Video Picture Encoding", "Linear", "crnd_malloc: size too big", "crnd_malloc: out of memory", "crnd_realloc: bad ptr", "crnd_free: bad ptr", "crnd_msize: bad ptr", "Failed getting crunch texture info.", "The texture could not be loaded because it has been encoded with an older version of Crunch. This can happen when loading AssetBundles containing Crunch-compressed textures built with Unity version prior to 2017.3", "Failed unpacking crunch mip level.", "Failed crunch end.", "RGBA4", "BGRA4", "R5G6B5", "B5G6B5", "RGB5A1", "BGR5A1", "A1RGB5", "RGB9E5", "RG11B10", "RGB10A2", "BGR10A2", "BGR10A2XR", "BGR10XR", "BGRA10XR", "D16 UNorm", "D24 UNorm", "D24 UNorm S8 UInt", "D32 SFloat", "D32 SFloat S8 UInt", "PVRTC 2BPP", "PVRTC 4BPP", "ETC2 punchthrough", "ASTC4X4", "ASTC5X5", "ASTC6X6", "ASTC8X8", "ASTC10X10", "ASTC12X12", "Luminance8 UNorm", " Compressed ", " UFloat", " SNorm", " SInt", "WARNING: %s format is not supported, decompressing texture\n", "OnBecameVisible", "OnBecameInvisible", "TilemapRenderer", "TrailRenderer", "LineRenderer", "ParticleSystemRenderer", "VFXRenderer", "SpriteMask", "SpriteShapeRenderer", "QuadTreeBatchedNodeRenderer", "Renderer::kSystemParentHierarchy", "InternalIdentityTransform", "Invalid layer id. Please use the unique id of the layer (which is not the same as its index in the list).", "StereoRenderTexture already allocated.", "Can't release a temp StereoRenderTexture that is not allocated.", "Texture data can not be accessed", "Texture is not accessible.", "Invalid texture format (%d) for Texture2D", "TextureFormat %d is not supported on this platform", "Rebuilding mipmaps of compressed textures is not supported", "You are trying to upload data for texture created with external texture pointer", "No texture data available to upload", "m_CompleteImageSize", "m_TextureFormat", "m_MipMap", "m_StreamingMipmaps", "m_StreamingMipmapsPriority", "m_ImageCount", "m_TextureDimension", "m_LightmapFormat", "Texture '%s' is degenerate (dimensions %dx%d)", "Texture '%s' has no data", "SetPixel called on an undefined image (valid values are 0 - %d", "Invalid mip level", "SetPixels called on an undefined image (valid values are 0 - %d", "GetPixel called on an undefined image (valid values are 0 - %d", "GetPixelBilinear called on an undefined image (valid values are 0 - %d", "GetPixels called on an undefined image (valid values are 0 - %d", "GetPixels32 called on a degenerate image (dimensions %dx%d)", "GetPixels32 failed: insufficent pixel buffer size (%d), must be at least %d x %d", "Invalid texture format (%d) for Texture2D::SetPixels32", "SetPixels32 called with invalid number of pixels in the array", "Trying to read pixels out of bounds", "Negative read pixels rectangle width|height", "ReadPixels was called to read pixels from system frame buffer, while not inside drawing frame.", "ReadPixels called on undefined image %d (valid values are 0 - %d", "Unsupported texture format for ReadPixels - needs to be RGBA32, ARGB32, RGB24, RGBAFloat or RGBAHalf", "Texture is not readable.", "Can't resize to a compressed texture format", "Texture '%s' is not readable, Compress will not work. You can make the texture readable in the Texture Import Settings.", "Unable to create destination texture", "m_CastShadows", "m_ReceiveShadows", "m_DynamicOccludee", "m_LightProbeUsage", "m_ReflectionProbeUsage", "m_RenderingLayerMask", "m_RendererPriority", "m_LightmapIndex", "m_LightmapIndexDynamic", "m_LightmapTilingOffset", "m_LightmapTilingOffsetDynamic", "m_Materials", "m_StaticBatchInfo", "m_StaticBatchRoot", "m_ProbeAnchor", "m_LightProbeVolumeOverride", "m_SortingLayerID", "m_SortingLayer", "m_SortingOrder", "crnd_msize: not supported", "./External/TextureCompressors/Crunch/inc/crn_decomp.h", "m_Parameters.widthMultiplier", "SetPixels32 can only be called on a RGBA32, BGRA32, ARGB32, RGB24, BGR24 or Alpha8 texture but is being called on TextureFormat(%d)", "Transform hierarchy isn't initialized yet, ProcessSkybox will not render the skybox.", "firstSubMesh", "PPtr<GameObject>", "Decrunching failed.", "Trying to set a non existing pass %d on material %s for Custom Render Texture %s. Setting pass to 0 instead.", "Can't do instanced Graphics.DrawProcedural", "Too much quads for DrawProcedural (platform does not support 32bits index buffer)", "Unable to create ProceduralQuad Index Buffer", "Can't do indirect Graphics.DrawProcedural", "Graphics.DrawProceduralIndirect with invalid buffer", "DrawProceduralIndirect can't draw quads if platform does not support quad topology", "Your current multi-scene setup has inconsistent Lighting settings which may lead to different lighting when loading scenes individually or in a different order! Consider homogenizing the following:\n", "%d/%d scenes have Auto baking enabled.\n", "%d/%d scenes have different Realtime GI settings.\n", "%d/%d scenes use different skyboxes.\n", "Multiple scenes baked with Auto enabled can appear differently in Play mode when reloading them. Consider disabling Auto and rebaking.\n", "Your multi-scene setup may be improved by tending to the following issues:\n", "WARNING: DXT texture format is not supported, decompressing texture\n", "WARNING: PVRTC texture format is not supported, decompressing texture\n", "WARNING: ETC texture format is not supported, decompressing texture\n", "WARNING: EAC texture format is not supported, decompressing texture\n", "WARNING: ASTC texture format is not supported, decompressing texture\n", "WARNING: Crunch texture format is not supported, decompressing texture\n", "WARNING: BC4/BC5 texture format is not supported, decompressing texture\n", "WARNING: BC6H/BC7 texture format is not supported, decompressing texture\n", "WARNING: Compressed texture format (%d) is not supported, decompressing texture\n", "ASTCenc: Internal error: File=%s Line=%d\n", "Non-Directional", "The loaded level has a different lightmaps mode than the current one. Current: %s. Loaded: %s. Will use: %s.", "m_InitSource", "m_InitMaterial", "m_InitColor", "m_InitTexture", "m_UpdateMode", "m_InitializationMode", "m_UpdateZoneSpace", "m_CurrentUpdateZoneSpace", "m_UpdateZones", "m_UpdatePeriod", "m_ShaderPass", "m_CubemapFaceMask", "m_DoubleBuffered", "m_WrapUpdateZones", "m_AntiAliasing", "m_DepthFormat", "m_ColorFormat", "m_GenerateMips", "m_SRGB", "m_UseDynamicScale", "m_BindMS", "m_Dimension", "m_VolumeDepth", "UpdateZoneInfo", "updateZoneCenter", "updateZoneSize", "passIndex", "needSwap", "Invalid value for lightmaps mode", "Sprite outline generation failed - could not read texture pixel data. Did you forget to make the texture readable?", "LightmapSettings", "Element %d is null", "m_EnlightenSceneMapping", "m_LightProbes", "m_Lightmaps", "m_LightmapsMode", "m_GISettings", "m_UseShadowmask", "m_Renderers", "m_Systems", "m_Probesets", "m_SystemAtlases", "m_TerrainChunks", "EnlightenRendererInformation", "dynamicLightmapSTInSystem", "systemId", "instanceHash", "EnlightenSystemInformation", "rendererIndex", "rendererSize", "atlasIndex", "atlasOffsetX", "atlasOffsetY", "inputSystemHash", "radiositySystemHash", "EnlightenSystemAtlasInformation", "atlasSize", "atlasHash", "firstSystemId", "EnlightenTerrainChunksInformation", "numChunksInX", "numChunksInY", "PPtr<LightProbes>", "LightmapData", "m_Lightmap", "m_DirLightmap", "m_ShadowMask", "m_IndirectLightmap", "m_BounceScale", "m_IndirectOutputScale", "m_AlbedoBoost", "m_EnvironmentLightingMode", "m_EnableBakedLightmaps", "m_EnableRealtimeLightmaps", "m_DynamicEnv", "m_ShadowMaskMode", "m_UseShadowMask", "Texture2DArray is not supported on this platform/GPU", "Invalid texture format (%i) for Texture2DArray", "Texture2DArray has out of range width (got %i max supported %i)", "Texture2DArray has out of range height (got %i max supported %i)", "Texture2DArray has out of range depth (got %i max supported %i)", "Texture2DArray is too large; only support up to 2GB sizes", "Rebuilding mipmaps of compressed 2DArray textures is not supported", "GetPixels called with insufficient pixel buffer size (%d), must be at least %dx%d", "GetPixels32 called with insufficient pixel buffer size (%d), must be at least %dx%d", "m_Materials.Array.data[", "Texture2DArray has no data", "Invalid Texture2DArray array element (has %i elements, got index %i)", "Invalid Texture2DArray mip level (has %i mips, got mip %i)", "RenderTexture.Create failed: width & height must be larger than 0", "RenderTexture.Create failed: cube maps must be power of two and width must match height", "RenderTexture.Create failed: maxRenderTextureSize(%d) is too small", "RenderTexture.Create failed: requested size is too large.", "RenderTexture.Create failed: format unsupported - %s (%d).", "RenderTexture.Create failed: format unsupported for random writes - %s (%d).", "RenderTexture.Create failed: non-power-of-two sizes not supported.", "RenderTexture.Create failed: cubemap not supported.", "RenderTexture.Create failed: volume texture not supported.", "RenderTexture.Create failed: 2DArray textures are not supported.", "RenderTexture.Create failed: CubeArray textures are not supported.", "RenderTexture.Create: enableRandomWrite and RenderTextureMemoryless.Color are not compatible, excluding RenderTextureMemoryles.Color.", "RenderTexture.Create failed: 3D textures with depth are not supported.", "RenderTexture.Create: Depth|ShadowMap RenderTexture requested without a depth buffer. Changing to a 16 bit depth buffer.", "RenderTexture.Create failed", "Releasing render texture that is set to be RenderTexture.active!", "Releasing render texture that has a target bound as an active color surface!", "Releasing render texture that has a target bound as an active depth surface!", "RenderTexture.GenerateMips failed: render texture is not rendered into yet, or does not have a color surface.", "RenderTexture.GenerateMips failed: render texture does not have mip maps (set useMipMap to true).", "RenderTexture.GenerateMips failed:  mipmaps for this render texture are generated automatically (set autoGenerateMips to false to disable that behavior).", "Cannot grab pixels into RenderTexture from memoryless texture. Remove memoryless flag from Texture.", "Setting unsupported RenderTexture dimension %d (only 2D, Cube, 3D, 2DArray, CubeArray are supported)", "Setting dimension of already created render texture is not supported!", "Setting volume depth of already created render texture is not supported!", "Invalid antiAliasing value (must be at least 1)", "Setting anti-aliasing of already created render texture is not supported!", "Invalid operation for this texture type", "Setting bind as Texture2DMS of already created render texture is not supported!", "Setting mipmap generation of already created render texture is not supported!", "Setting sRGB mode of already created render texture is not supported!", "Setting XR usage of already created render texture is not supported!", "Setting eye texture of already created render texture is not supported!", "Setting allocate color with VR device of already created render texture is not supported!", "Setting allocate depth with VR device of already created render texture is not supported!", "Setting random write mode of already created render texture is not supported!", "Setting dynamic scaling of already created render texture is not supported!", "Setting memoryless of already created render texture is not supported!", "Setting render texture desc of already created render texture is not supported!", "Setting width of already created render texture is not supported!", "Setting height of already created render texture is not supported!", "Setting mipmap mode of already created render texture is not supported!", "Invalid DepthBufferFormat!", "Setting depth format of already created render texture is not supported!", "Invalid RenderTextureFormat!", "Setting color format of already created render texture is not supported!", "RenderTexture.ConvertToEquirect failed; source renderTexture dimension must be Cube.", "equirect", "RenderTexture.ConvertToEquirect failed; target renderTexture dimension must be 2D.", "Hidden/Internal-CubemapToEquirect", "Unable to find shader used for Internal-CubemapToEquirect.", "LightProbeGroup", "LowerResBlitTexture", "Trying to create a material from string - this is no longer supported.", "Trying to access pass %d, but material '%s' subshader (0) has only %d valid passes.", "Trying to copy properties from null material.", "Kernel '%s' not found.", "Invalid kernelIndex (%d) passed, must be non-negative less than %d.", "Texture for property id %d not found.", "NPOT Texture3D is not supported (%dx%dx%d)", "Invalid texture format (%d) for Texture3D", "Texture3D does not support compressed formats (format %d)", "Texture3D has out of range width / height / depth (%dx%dx%d, max allowed %d)", "Texture3D (%dx%dx%d) is too large, currently up to 2GB is allowed", "Texture has no data", "Graphics.CopyTexture called with mismatching texture types (src=%i dst=%i)", "Graphics.CopyTexture called with mismatching texture sizes (src %ix%ix%i dst %ix%ix%i)", "Graphics.CopyTexture called with mismatching mip counts (src %i dst %i)", "Graphics.CopyTexture(Texture, Texture) called with identical source and destination texture.", "Graphics.CopyTexture called with mismatching sizes (src %ix%i dst %ix%i)", "Graphics.CopyTexture called with negative region coordinate or size (srcX %i, srcY %i, srcWidth %i, srcHeight %i, dstX %i, dstY %i)", "Graphics.CopyTexture called with region not fitting in source element (srcX %i, srcY %i, srcWidth %i, srcHeight %i, srcMip %i)", "Graphics.CopyTexture called with region not fitting in destination element (dstX %i, dstY %i, srcWidth %i, srcHeight %i, dstMip %i)", "Graphics.CopyTexture called with depth resource with region not fitting whole subresource", "Graphics.ConvertTexture is not supported on the target device.", "Graphics.ConvertTexture called with a RenderTexture destination.  Please use Graphics.Blit instead.", "Graphics.ConvertTexture called with mismatched texture types (src=%i dst=%i)", "NPOT Cubemaps are not supported", "Cubemap faces must be square", "GetGPUWidth() != GetGPUHeight() || GetImageCount() != 6", "Cubemap must have 6 faces", "Unable to allocate enough memory to process 'Fixup Edge Seemless' operation", "Can't draw into cubemap", "Invalid mode for GL.Begin: %i", "uav RenderTexture must have random write enabled", "The renderer %s is a part of a static batch. Setting the lightmap scale and offset will not affect the rendering. The scale and offset is already burnt into the lightmapping UVs in the static batch.", "MaterialPropertyBlock index %d is out of range", "SetPixels32 failed: invalid miplevel, must be between 0 and %d", "SetPixels32 failed: array of size %d cannot contain %dx%d area", "Texture needs to be marked as Read/Write to be able to GetRawTextureData in player", "GetPixels32 failed: invalid miplevel, must be between 0 and %d", "Texture atlas needs textures to have Readable flag set!", "Failed to create sparse texture because of invalid parameters.", "UnityGraphicsQuality", "gUserMinAniso < 1", "gUserMaxAniso > 16", "Using mirror once texture wrap mode which is not supported by the platform. Using mirror wrap mode instead, check SystemInfo.supportsTextureWrapMirrorOnce before using.\n", "Graphics.CopyTexture called with null source texture", "Graphics.CopyTexture called with null destination texture", "Graphics.CopyTexture source render texture could not be created.", "Graphics.CopyTexture destination render texture could not be created.", "Graphics.CopyTexture called with mismatching texture data sizes, perhaps formats are incompatible? (srcsize=%i dstsize=%i)", "Buffer is too small to get image data", "Cannot get pixels when webcam is not running", "Cannot get pixels when webcam is non-readable", "Graphics.CopyTexture called with invalid source mip level (got %i, have %i mips)", "Graphics.CopyTexture called with invalid destination mip level (got %i, have %i mips)", "Graphics.CopyTexture called with invalid source element index (got %i, have %i elements/layers)", "Graphics.CopyTexture called with invalid destination element index (got %i, have %i elements/layers)", "Graphics.CopyTexture called with identical source and destination element (srcElement %i, srcMip %i, dstElement %i, dstMip %i).", "Graphics.CopyTexture with a region will not copy readable texture data for compressed formats (source texture format %i)", "Graphics.CopyTexture with a region will not copy readable texture data for compressed formats (destination texture format %i)", "Unsupported destination format in Graphics.ConvertTexture (%i). This is likely because the device does not support this format as a rendertarget format.", "_faceIndex", "Graphics.ConvertTexture called with unsupported source and destination texture types (src=%i dst=%i)", "DrawMesh requires material.SetPass before!", "DrawMesh requires a successful material.SetPass before!", "Graphics.SetRenderTarget called with empty (or null) color RenderBuffer array.", "Graphics.SetRenderTarget called with bad depth RenderBuffer.", "Graphics.SetRenderTarget called with bad color RenderBuffer.", "Graphics.SetRenderTarget called with the color RenderBuffer array having both from-RT and from-Screen RenderBuffers.", "Graphics.SetRenderTarget called with color RenderBuffer from screen and depth RenderBuffer from RenderTexture", "Graphics.SetRenderTarget called with depth RenderBuffer from screen and color RenderBuffer from RenderTexture", "Memoryless color RenderBuffer with index %d can't be used with load/store action.", "Memoryless depth RenderBuffer can't be used with load/store action.", "Very Low", "Very High", "Ultra", "m_SourceTextures", "m_CurrentQuality", "m_QualitySettings", "m_DefaultStandaloneQuality", "m_DefaultMobileQuality", "m_EditorQuality", "Fastest", "Good", "Beautiful", "Fantastic", "m_StrippedMaximumLODLevel", "QualitySetting", "shadowCascade4Split", "textureQuality", "anisotropicTextures", "syncToVBL", "TextureCubeArray is not supported on this platform/GPU", "Invalid texture format (%i) for TextureCubeArray", "TextureCubeArray has out of range width (got %i max supported %i)", "TextureCubeArray has out of range height (got %i max supported %i)", "TextureCubeArray has out of range cubemap count (got %i max supported %i)", "TextureCubeArray is too large; only support up to 2GB sizes", "Rebuilding mipmaps of compressed CubemapArray textures is not supported", "CubemapArray has no data", "Invalid CubemapArray face %i", "Invalid CubemapArray array element (has %i elements, got index %i)", "Invalid CubemapArray mip level (has %i mips, got mip %i)", "CubemapArray", "m_CubemapCount", "Index (%d) is out of bounds (0-%d).", "Physics Shape at %d has less than 3 vertices (%d).", "Vertex array is too large. A sprite mesh may not have more than %d vertices.", "Invalid triangle index count. The number of supplied triangle indices must be a multiple of 3.", "Invalid triangle index array. Some indices are referencing out of bounds vertices. IndexCount: %d, VertexCount: %d.", "Invalid vertex array. Some vertices are outside of the Sprite rectangle: (%f, %f).", "async texture load: failed to load %s from %s\n", "DoDeCruncherJob failed.", "AsyncResourceUpload failed.", "m_Rect", "m_PixelsToUnits", "m_Extrude", "m_IsPolygon", "m_RenderDataKey", "m_AtlasTags", "m_SpriteAtlas", "m_RD", "m_PhysicsShape", "PPtr<SpriteAtlas>", "SpriteRenderData", "parentId", "(Clone)", "Cannot instantiate objects with a parent which is persistent. New object will be created without a parent.", "Cannot instantiate objects with a parent which is being destroyed. New object will be created without a parent.", "DelayedCallManager", "jar:file://", "!/assets", "AsyncReadManager", "Could not open file %s for read", "m_Source", "Shared", "0123456789ABCDEF", "AABB", "AnimationClip", "AnimationCurve", "AnimationState", "Array", "Base", "BitField", "bitset", "bool", "char", "ColorRGBA", "Component", "data", "deque", "double", "dynamic_array", "FastPropertyName", "first", "float", "Font", "GameObject", "Generic Mono", "GradientNEW", "GUID", "GUIStyle", "list", "long long", "Matrix4x4f", "MdFour", "MonoBehaviour", "MonoScript", "m_ByteSize", "m_Curve", "m_EditorClassIdentifier", "m_EditorHideFlags", "m_Enabled", "m_ExtensionPtr", "m_GameObject", "m_Index", "m_IsArray", "m_IsStatic", "m_MetaFlag", "m_Name", "m_ObjectHideFlags", "m_PrefabInternal", "m_PrefabParentObject", "m_Script", "m_StaticEditorFlags", "m_Type", "m_Version", "Object", "pair", "PPtr<Component>", "PPtr<GameObject>", "PPtr<Material>", "PPtr<MonoBehaviour>", "PPtr<MonoScript>", "PPtr<Object>", "PPtr<Prefab>", "PPtr<Sprite>", "PPtr<TextAsset>", "PPtr<Texture>", "PPtr<Texture2D>", "PPtr<Transform>", "Prefab", "Quaternionf", "Rectf", "RectInt", "RectOffset", "second", "short", "size", "SInt16", "SInt32", "SInt64", "SInt8", "staticvector", "string", "TextAsset", "TextMesh", "Texture", "Texture2D", "Transform", "TypelessData", "UInt16", "UInt32", "UInt64", "UInt8", "unsigned int", "unsigned long long", "unsigned short", "vector", "Vector2f", "Vector3f", "Vector4f", "m_ScriptingClassIdentifier", "Gradient", "Type*", "int2_storage", "int3_storage", "BoundsInt", "m_CorrespondingSourceObject", "m_PrefabInstance", "m_PrefabAsset", "_CornerRadiuses", "_ManualTex2SRGB", "DrawGUITexture: texture is null", "DrawGUITexture: material is null", "Invalid pass number (%d) for Graphics.DrawTexture. Material=%s, npasses=%d", "GUIElement", "GUILayer", "Hidden/Internal-GUIRoundedRect", "m_PixelInset", "m_LeftBorder", "m_RightBorder", "m_TopBorder", "m_BottomBorder", "Bounding sphere count must be less or equal to the bounding sphere array.", "CullingGroup only supports a maximum of %i bounding distances.", "CullingGroup bounding distances must be sorted in ascending order.", "BurstCompilerService", "burst_abort", "get_Method", "The passed object to BurstCompilerService::CompileAsync is not a delegate", "Unable to get the target Method from the delegate Object in BurstCompilerService::CompileAsync", "#dllimport:", "Unable to load plugin `%s`", "Unable to load function `%s` from plugin `%s`", "Unable to find internal function `%s`", "lib_burst_generated", "burst.initialize", "OnLayersChanged", "OnDidAddComponent", "OnDidRemoveComponent", "GameObject is already being activated or deactivated.", "GameObjects can not be made active when they are being destroyed.", "Transform component could not be found on game object. Adding one!", "Object %s (named '%s') has multiple entries of the same %s component. Removing it!", "Component could not be loaded when loading game object. Cleaning up!", "Component (%s) has a broken GameObject reference. Fixing!", "Failed to load component (%s)! Removing it!", "Prefab has multiple Transform components! Removing them automatically would not be safe.", "GameObject has multiple Transform components! Merged into single one.", "A game object can only be in one layer. The layer needs to be in the range [0...31]", "SendMessage cannot be called during Awake, CheckConsistency, or OnValidate", "CheckConsistency: GameObject does not reference component %s. Fixing.", "Component of class '%s' does not support SetEnabled calls. Do not call SetEnabled on this class.", "m_Layer", "m_Tag", "m_IsActive", "m_GameObject", "ClassID %d (%s) conflicts with that of another class (%s). Please resolve the conflict.", "LevelGameManager", "GlobalGameManager", "m_Component", "PPtr<Component>", "ComponentPair", "Failed to load %s (internal index #%i).\r\nMost likely data file is corrupted, or built with mismatching\r\neditor and platform support versions.", "PreloadData is missing. It should always be there.", "PlayerInitEngineGraphics: Loading game manager assets failed", "No managers are loaded of type: %s\n", "Multiple managers are loaded of type: %s\n", "GlobalGameManager of type '%s' already exists.", "EditorExtension", "bool", "void", "AudioMixerLiveUpdateBool", "AudioMixerLiveUpdateFloat", "MonoObject", "RootMotionData", "Default GameObject Tag: ", " already registered", "Default GameObject Tag for name: ", "Default GameObject BitMask: ", "Default GameObject BitMask for name: ", "Untagged", "Respawn", "EditorOnly", "MainCamera", "TransparentFX", "Ignore Raycast", "Water", "Layer index out of bounds", "<unknown layer>", "TagManager", "User Layer %d", "Builtin Layer %d", "m_SortingLayers", "SortingLayerEntry", "uniqueID", "The message: %s in the class with type index: %d uses a parameter type that is different from the message's parameter type: %s != %s.", "TimeManager", "PhysicsManager", "NavMeshProjectSettings", "Physics2DSettings", "ClusterInputManager", "NavMeshSettings", "UnityConnectSettings", "VFXManager", "There are conflicting definitions of the message: ", ". The parameter of one message has to be the same across all definitions of that message.", "There are conflicting options of the message: ", "DynamicHeapAllocator allocation probe %d failed - Could not get memory for large allocation %llu.\n", "DynamicHeapAllocator out of memory - Could not get memory for large allocation %llu!\n", "Overloaded New", "Overloaded New[]", "ALLOC_FALLBACK", "debugallocator", "ALLOC_TEMP_THREAD", "systemallocator", "ALLOC_DEFAULT", "ALLOC_TEMP_JOB", "ALLOC_TEMP_BACKGROUND_JOB", "ALLOC_GFX", "ALLOC_GAMEOBJECT", "ALLOC_DEBUG", "ALLOC_BUCKET", "Custom", "%s Page Allocator out of memory. Maximum allowed memory: %s", "Invalid memory pointer was detected in ThreadsafeLinearAllocator::Deallocate!", "Internal: JobTempAlloc has allocations that are more than 4 frames old - this is not allowed and likely a leak", "To Debug, enable the define: TLA_DEBUG_STACK_LEAK in ThreadsafeLinearAllocator.cpp. This will output the callstacks of the leaked allocations", "Internal: There are remaining Allocations on the JobTempAlloc. This is a leak, and will impact performance", "Could not allocate memory: System out of memory!\nTrying to allocate: %zuB with %zu alignment. MemoryLabel: %s\nAllocation happened at: Line:%d in %s\n", "Could not allocate memory: System out of memory!\n", "[ %s ] used: %zuB | peak: %zuB | reserved: %zuB \n", "Overflow in memory allocator.", "Memory overview\n\n", "Only one instance of the TLS allocator is allowed because of TLS implementation", "Unable to load Sprite.  Please ensure SpriteAtlas has access to included Sprites.  This is usually accomplished via local files or a loaded Asset Bundle.", "SpriteAtlasManager", "Sprite {0} matches more than one atlases ({1}). Default to first atlas.", "Sprite Atlas : Exception triggering SpriteAtlasManager.onAtlasRegistered callback.", "Sprite Atlas : Exception triggering SpriteAtlasManager.atlasRequested callback.", "SpriteAtlasManager.atlasRequested wasn't listened to while {0} requested.", "m_PackedSprites", "m_PackedSpriteNamesToIndex", "m_RenderDataMap", "m_IsVariant", "SpriteAtlasData", "alphaTexture", "textureRect", "textureRectOffset", "atlasRectOffset", "uvTransform", "downscaleMultiplier", "settingsRaw", "SortingGroup::kSystemParentHierarchy", "SortingGroup::kSystemChildHierarchy", "Number of renderers and sorting groups handled (%d) is greater than the limit (%d), Sorting Group is disabled.", "SortingGroup", "_RendererColor", "Incomplete mesh data in Sprite. Please reimport or recreate the Sprite.", "Trying to write to an invalid channel from Sprite", "Sprite-Mesh-VB", "Sprite-Mesh-IB", "m_Bindpose", "m_SourceSkin", "SpriteVertex", "</%s>", "%s=\"%s\"", "%s='%s'", "<!--%s-->", "<![CDATA[%s]]>\n", "<?xml ", "version=\"%s\" ", "version=\"", "encoding=\"%s\" ", "encoding=\"", "standalone=\"%s\" ", "standalone=\"", "<%s>", "<![CDATA[", "<!--", "No error", "Failed to open file", "Error parsing Element.", "Failed to read Element name", "Error reading Element value.", "Error reading Attributes.", "Error: empty tag.", "Error reading end tag.", "Error parsing Unknown.", "Error parsing Comment.", "Error parsing Declaration.", "Error document empty.", "Error null (0) or unexpected EOF found in input stream.", "Error parsing CDATA.", "Error when TiXmlDocument added to document, because TiXmlDocument can only be at the root.", "&amp;", "&lt;", "&gt;", "&quot;", "&apos;", "UTF8", "<?xml", "standalone", ".config/unity3d", "Creating user config folder: %s\n", "statvfs failed with errno=%d; path was %s\n", "ManagedStreamFile: failed to allocate managed read buffer %dKB %dB", "ManagedStreamFile: Stream Read method is not valid", "ManagedStreamFile: stream Read returned more bytes read %d than requested %d", "ManagedStreamFile: Stream Seek method is not valid", "ManagedStreamFile: Stream Size method is not valid", "mem:/", "Loading player data from %s\n", "Failed to install Player data archive: %s!\n", "Error while rolling data back after failed file move operation from '%s' to '%s'. Backup is located at '%s'", "Unable to delete backup after file move operation from '%s' to '%s'.", "Unable to cleanup copied data after failed file move operation from '%s' to '%s'.", "Chain", " (-)", " (+)", "joystick button 0", "escape", "joystick button 1", "Fire1", "Fire2", "Fire3", "Jump", "left ctrl", "mouse 0", "left alt", "mouse 1", "left shift", "mouse 2", "Mouse X", "Mouse Y", "Mouse ScrollWheel", "joystick button 2", "joystick button 3", "backspace", "clear", "pause", "world 0", "world 1", "world 2", "world 3", "world 4", "world 5", "world 6", "world 7", "world 8", "world 9", "world 10", "world 11", "world 12", "world 13", "world 14", "world 15", "world 16", "world 17", "world 18", "world 19", "world 20", "world 21", "world 22", "world 23", "world 24", "world 25", "world 26", "world 27", "world 28", "world 29", "world 30", "world 31", "world 32", "world 33", "world 34", "world 35", "world 36", "world 37", "world 38", "world 39", "world 40", "world 41", "world 42", "world 43", "world 44", "world 45", "world 46", "world 47", "world 48", "world 49", "world 50", "world 51", "world 52", "world 53", "world 54", "world 55", "world 56", "world 57", "world 58", "world 59", "world 60", "world 61", "world 62", "world 63", "world 64", "world 65", "world 66", "world 67", "world 68", "world 69", "world 70", "world 71", "world 72", "world 73", "world 74", "world 75", "world 76", "world 77", "world 78", "world 79", "world 80", "world 81", "world 82", "world 83", "world 84", "world 85", "world 86", "world 87", "world 88", "world 89", "world 90", "world 91", "world 92", "world 93", "world 94", "world 95", "home", "page up", "page down", "numlock", "caps lock", "scroll lock", "right shift", "right ctrl", "right alt", "right cmd", "left cmd", "left super", "right super", "alt gr", "compose", "print screen", "sys req", "break", "menu", "power", "euro", "undo", "mouse 3", "mouse 4", "mouse 5", "mouse 6", "joystick button 4", "joystick button 5", "joystick button 6", "joystick button 7", "joystick button 8", "joystick button 9", "joystick button 10", "joystick button 11", "joystick button 12", "joystick button 13", "joystick button 14", "joystick button 15", "joystick button 16", "joystick button 17", "joystick button 18", "joystick button 19", "joystick 1 button 0", "joystick 1 button 1", "joystick 1 button 2", "joystick 1 button 3", "joystick 1 button 4", "joystick 1 button 5", "joystick 1 button 6", "joystick 1 button 7", "joystick 1 button 8", "joystick 1 button 9", "joystick 1 button 10", "joystick 1 button 11", "joystick 1 button 12", "joystick 1 button 13", "joystick 1 button 14", "joystick 1 button 15", "joystick 1 button 16", "joystick 1 button 17", "joystick 1 button 18", "joystick 1 button 19", "joystick 2 button 0", "joystick 2 button 1", "joystick 2 button 2", "joystick 2 button 3", "joystick 2 button 4", "joystick 2 button 5", "joystick 2 button 6", "joystick 2 button 7", "joystick 2 button 8", "joystick 2 button 9", "joystick 2 button 10", "joystick 2 button 11", "joystick 2 button 12", "joystick 2 button 13", "joystick 2 button 14", "joystick 2 button 15", "joystick 2 button 16", "joystick 2 button 17", "joystick 2 button 18", "joystick 2 button 19", "joystick 3 button 0", "joystick 3 button 1", "joystick 3 button 2", "joystick 3 button 3", "joystick 3 button 4", "joystick 3 button 5", "joystick 3 button 6", "joystick 3 button 7", "joystick 3 button 8", "joystick 3 button 9", "joystick 3 button 10", "joystick 3 button 11", "joystick 3 button 12", "joystick 3 button 13", "joystick 3 button 14", "joystick 3 button 15", "joystick 3 button 16", "joystick 3 button 17", "joystick 3 button 18", "joystick 3 button 19", "joystick 4 button 0", "joystick 4 button 1", "joystick 4 button 2", "joystick 4 button 3", "joystick 4 button 4", "joystick 4 button 5", "joystick 4 button 6", "joystick 4 button 7", "joystick 4 button 8", "joystick 4 button 9", "joystick 4 button 10", "joystick 4 button 11", "joystick 4 button 12", "joystick 4 button 13", "joystick 4 button 14", "joystick 4 button 15", "joystick 4 button 16", "joystick 4 button 17", "joystick 4 button 18", "joystick 4 button 19", "joystick 5 button 0", "joystick 5 button 1", "joystick 5 button 2", "joystick 5 button 3", "joystick 5 button 4", "joystick 5 button 5", "joystick 5 button 6", "joystick 5 button 7", "joystick 5 button 8", "joystick 5 button 9", "joystick 5 button 10", "joystick 5 button 11", "joystick 5 button 12", "joystick 5 button 13", "joystick 5 button 14", "joystick 5 button 15", "joystick 5 button 16", "joystick 5 button 17", "joystick 5 button 18", "joystick 5 button 19", "joystick 6 button 0", "joystick 6 button 1", "joystick 6 button 2", "joystick 6 button 3", "joystick 6 button 4", "joystick 6 button 5", "joystick 6 button 6", "joystick 6 button 7", "joystick 6 button 8", "joystick 6 button 9", "joystick 6 button 10", "joystick 6 button 11", "joystick 6 button 12", "joystick 6 button 13", "joystick 6 button 14", "joystick 6 button 15", "joystick 6 button 16", "joystick 6 button 17", "joystick 6 button 18", "joystick 6 button 19", "joystick 7 button 0", "joystick 7 button 1", "joystick 7 button 2", "joystick 7 button 3", "joystick 7 button 4", "joystick 7 button 5", "joystick 7 button 6", "joystick 7 button 7", "joystick 7 button 8", "joystick 7 button 9", "joystick 7 button 10", "joystick 7 button 11", "joystick 7 button 12", "joystick 7 button 13", "joystick 7 button 14", "joystick 7 button 15", "joystick 7 button 16", "joystick 7 button 17", "joystick 7 button 18", "joystick 7 button 19", "joystick 8 button 0", "joystick 8 button 1", "joystick 8 button 2", "joystick 8 button 3", "joystick 8 button 4", "joystick 8 button 5", "joystick 8 button 6", "joystick 8 button 7", "joystick 8 button 8", "joystick 8 button 9", "joystick 8 button 10", "joystick 8 button 11", "joystick 8 button 12", "joystick 8 button 13", "joystick 8 button 14", "joystick 8 button 15", "joystick 8 button 16", "joystick 8 button 17", "joystick 8 button 18", "joystick 8 button 19", "joystick 9 button 0", "joystick 9 button 1", "joystick 9 button 2", "joystick 9 button 3", "joystick 9 button 4", "joystick 9 button 5", "joystick 9 button 6", "joystick 9 button 7", "joystick 9 button 8", "joystick 9 button 9", "joystick 9 button 10", "joystick 9 button 11", "joystick 9 button 12", "joystick 9 button 13", "joystick 9 button 14", "joystick 9 button 15", "joystick 9 button 16", "joystick 9 button 17", "joystick 9 button 18", "joystick 9 button 19", "joystick 10 button 0", "joystick 10 button 1", "joystick 10 button 2", "joystick 10 button 3", "joystick 10 button 4", "joystick 10 button 5", "joystick 10 button 6", "joystick 10 button 7", "joystick 10 button 8", "joystick 10 button 9", "joystick 10 button 10", "joystick 10 button 11", "joystick 10 button 12", "joystick 10 button 13", "joystick 10 button 14", "joystick 10 button 15", "joystick 10 button 16", "joystick 10 button 17", "joystick 10 button 18", "joystick 10 button 19", "joystick 11 button 0", "joystick 11 button 1", "joystick 11 button 2", "joystick 11 button 3", "joystick 11 button 4", "joystick 11 button 5", "joystick 11 button 6", "joystick 11 button 7", "joystick 11 button 8", "joystick 11 button 9", "joystick 11 button 10", "joystick 11 button 11", "joystick 11 button 12", "joystick 11 button 13", "joystick 11 button 14", "joystick 11 button 15", "joystick 11 button 16", "joystick 11 button 17", "joystick 11 button 18", "joystick 11 button 19", "joystick 12 button 0", "joystick 12 button 1", "joystick 12 button 2", "joystick 12 button 3", "joystick 12 button 4", "joystick 12 button 5", "joystick 12 button 6", "joystick 12 button 7", "joystick 12 button 8", "joystick 12 button 9", "joystick 12 button 10", "joystick 12 button 11", "joystick 12 button 12", "joystick 12 button 13", "joystick 12 button 14", "joystick 12 button 15", "joystick 12 button 16", "joystick 12 button 17", "joystick 12 button 18", "joystick 12 button 19", "joystick 13 button 0", "joystick 13 button 1", "joystick 13 button 2", "joystick 13 button 3", "joystick 13 button 4", "joystick 13 button 5", "joystick 13 button 6", "joystick 13 button 7", "joystick 13 button 8", "joystick 13 button 9", "joystick 13 button 10", "joystick 13 button 11", "joystick 13 button 12", "joystick 13 button 13", "joystick 13 button 14", "joystick 13 button 15", "joystick 13 button 16", "joystick 13 button 17", "joystick 13 button 18", "joystick 13 button 19", "joystick 14 button 0", "joystick 14 button 1", "joystick 14 button 2", "joystick 14 button 3", "joystick 14 button 4", "joystick 14 button 5", "joystick 14 button 6", "joystick 14 button 7", "joystick 14 button 8", "joystick 14 button 9", "joystick 14 button 10", "joystick 14 button 11", "joystick 14 button 12", "joystick 14 button 13", "joystick 14 button 14", "joystick 14 button 15", "joystick 14 button 16", "joystick 14 button 17", "joystick 14 button 18", "joystick 14 button 19", "joystick 15 button 0", "joystick 15 button 1", "joystick 15 button 2", "joystick 15 button 3", "joystick 15 button 4", "joystick 15 button 5", "joystick 15 button 6", "joystick 15 button 7", "joystick 15 button 8", "joystick 15 button 9", "joystick 15 button 10", "joystick 15 button 11", "joystick 15 button 12", "joystick 15 button 13", "joystick 15 button 14", "joystick 15 button 15", "joystick 15 button 16", "joystick 15 button 17", "joystick 15 button 18", "joystick 15 button 19", "joystick 16 button 0", "joystick 16 button 1", "joystick 16 button 2", "joystick 16 button 3", "joystick 16 button 4", "joystick 16 button 5", "joystick 16 button 6", "joystick 16 button 7", "joystick 16 button 8", "joystick 16 button 9", "joystick 16 button 10", "joystick 16 button 11", "joystick 16 button 12", "joystick 16 button 13", "joystick 16 button 14", "joystick 16 button 15", "joystick 16 button 16", "joystick 16 button 17", "joystick 16 button 18", "joystick 16 button 19", "m_Axes", "descriptiveName", "descriptiveNegativeName", "negativeButton", "positiveButton", "altNegativeButton", "altPositiveButton", "dead", "sensitivity", "snap", "invert", "axis", "joyNum", "Time.timeScale is out of range. The value cannot be less than %.1f", "Trying to expire empty touch slot!", "Fixed Timestep", "Maximum Allowed Timestep", "m_TimeScale", "Maximum Particle Timestep", "Warning: comparing images of different size:\nImage 1: %dx%dx%d\nImage 2: %dx%dx%d\nOnly intersection region will be compared.\n", "Computing error metrics ... ", "PSNR (LDR-RGBA): %.6lf dB\n", "Alpha-Weighted PSNR: %.6lf dB\n", "PSNR (LDR-RGB): %.6lf dB\n", "Color peak value: %f\n", "PSNR (RGB normalized to peak): %f dB\n", "mPSNR (RGB) [fstops: %+d to %+d] : %.6lf dB\n", "LogRMSE (RGB): %.6lf\n", ".htga", ".HTGA", ".ktx", ".KTX", ".dds", ".DDS", ".exr", ".EXR", ".tga", ".TGA", "./External/TextureCompressors/ASTC_ARM/Source/astc_color_unquantize.cpp", "Attempting to release atlas texture that is in use. Cannot release texture.", "Error adding Enlighten system data: %s. RadiosityData is missing.", "Error adding Enlighten system %s: Failed to allocate system.", "Error adding Enlighten system %s: Failed to add system to manager.", "Error adding Enlighten system %s: Failed to allocate system solution space.", "Error adding Enlighten probeset %s: Data not available.", "GI output for inputsystem: %s (%s) is missing.", "Failed loading Enlighten system data for hash: 0x%s", "Failed to apply albedo. SystemCoreData %s not found.", "ApplyAlbedo: missing buffer... albedo:%p emissive:%p materialWS:%p materialData:%p.", "Error adding Enlighten probe set: Failed to allocate probe set %s.", "Error adding Enlighten probe set: Failed to add probe set %s to update manager.", "Failed to issue albedo update.", "./Runtime/GI/Enlighten/FastAlbedoUpdates.cpp", "Enlighten::CalcMaterialGuidsLookupWorkspaceSize(radData->materialData) 16", "emissiveWorkspaceMemory", "./Runtime/GI/Enlighten/HLRTManager.cpp", "HLRTManager (properties)", "HLRTManager this", "AtlasedSystem", "Setting up %d worker threads for Enlighten.\n", "EnlightenWorker", "./Runtime/GI/Enlighten/UnityGPUTextureUpdater.cpp", "UnityGPUTextureUpdater", "UnityGPUTextureUpdater this", "  Thread -> id: %llx -> priority: %d \n", "External/Enlighten/builds/LibSrc/Enlighten3HLRT/System/BaseSystem.h", "BaseSystem this", "External/Enlighten/builds/LibSrc/GeoCore/GeoArray.inl", "sizeof(ValueType) * initCapacity __alignof__(ValueType)", "Critical Error, unable to allocate %d bytes for %d objects in GeoArray::Init()", "./Runtime/GI/Enlighten/ProbeSetPositions.cpp", "ProbeSetPositions", "ProbeSetPositions ptr", "./Runtime/GI/Enlighten/RadiosityData.cpp", "dynamicMaterialWorkspace", "albedoBuffer", "emissiveBuffer", "albedoTextureData", "emissiveTextureData", "dynamicMaterialWorkspaceSize 16", "albedoBuffersSize 16", "emissiveBuffersSize 16", "width * height * sizeA 16", "width * height * sizeE 16", "./Runtime/GI/Enlighten/UnityGPUTexture.cpp", "UnityGPUTexture", "UnityGPUTexture this", "./Runtime/GI/Enlighten/CreateEnlightenRuntimeTextureJob.cpp", "inputBuffer", "External/Enlighten/builds/LibSrc/Enlighten3/EnlightenUtils.inl", "InputWorkspace inputWorkspace", "block->m_DataStart", "visibilityData", "RadSystemCore system", "ClusterAlbedoWorkspaceMaterialData materialData", "RadProbeSetCore probeSet", "Failed reading from: '%s'.\n", "DynamicGI.materialUpdateTimeSlice needs to be non-negative, was set to %i, clamped to 0.", "Array size is wrong. It must have %d elements. The resolution of each face is %dx%d texels.", "Failed setting GI environment data: Memory allocation failure.", "Unity GI (%dx%d)", " Irradiance RGB9e5", " Irradiance RGBM", " Realtime Directionality", " Baked", " Baked Dir", " Baked Albedo", " Baked Emissive fp16", " Baked Charting", " Baked Texel Validity", " Baked UV Overlap", " Baked Lightmap Culling", " Input Workspace", "Explicitly handle all the GI texture types in BuildSystemTexture.", "unity_MaxOutputValue", "unity_UseLinearSpace", "Error: Global Illumination requires a graphics device to render albedo.", "Failed opening GI file at relative path: '%s'. Absolute path: '%s'.\n", "unity_MetaVertexControl", "unity_MetaFragmentControl", "GI: material '%s' does not have Meta pass, and could not find default material. Object '%s' will not be affecting GI.\n", "GI: Setting up material '%s' failed. Does your shader have compilation errors? Object '%s' will not be affecting GI.", "visLength 16", "ReadClusterAlbedoWorkspaceMaterialData failed : invalid data format", "ClusterAlbedoWorkspaceMaterialData", "block->m_Length block->GetRequiredAlignment()", "ReadInputWorkspace failed : invalid data format", "ReadInputWorkspace failed : corrupt data", "ReadRadSystemCore failed : invalid data format", "RadSystemCore", "ReadRadSystemCore failed : corrupt data", "ReadRadProbeSetCore failed : invalid data format", "ReadRadProbeSetCore failed : corrupt data", "_Decode_HDR", "_ConvertToLinearSpace", "_Exposure", "Hidden/GIDebug/TextureUV", "Unlit/Color", "Hidden/GIDebug/VertexColors", "Hidden/GIDebug/UV1sAsPositions", "SendMessage: object %s not found!\n", "gles-api-check", "Continue", "Abort", "eglDestroyContext(m_EGLDisplay, m_EGLContext)", "./Runtime/GfxDevice/egl/ContextEGL.cpp", "Unable to create context!", "eglDestroySurface(m_EGLDisplay, m_EGLSurface)", "./Runtime/GfxDevice/egl/WindowContextEGL.cpp", "[EGL] Using protected surface (EGL_PROTECTED_CONTENT_EXT)", "Failed to create protected window surface", "Failed to create window surface", "Unable to acquire context", "Unable to release context", "[EGL] SwapBuffers: Context lost", "[EGL] SwapBuffers: Surface invalid", "[EGL] SwapBuffer: %s", "./Runtime/GfxDevice/egl/WindowSurfaceEGL.cpp", "(EGL_NONE)", "ID[%d] ", " RGBA%d %d%d%d%d", " RGB%d %d%d%d", " %d%s/%d", " AAx%d", " CSAAx%d", " AFBT", "eglGetConfigAttrib()", "./Runtime/GfxDevice/egl/ConfigEGL.cpp", "[EGL] Checking ES 3.1 support...", "[EGL] ES3.1 not supported", "[EGL] ES 3.1 support detected", "[EGL] Request: %s\n", "eglChooseConfig(m_EGLDisplay, configAttribs, NULL, 0, &eglConfigCount)", "eglChooseConfig(m_EGLDisplay, configAttribs, eglConfigurations, eglConfigCount, &eglConfigCount)", "[EGL] Found: %s\n", "[EGL] Unable to find a configuration matching minimum spec!", "[EGL] Error:", "./Runtime/GfxDevice/egl/ContextGLES.cpp", "[EGL] Unable to retrieve the default EGL display!", "[EGL] Unable to initialize EGL!", "eglTerminate(s_EGLDisplay)", "[EGL] Attaching window :%p", "ES-Unknown", "ES 2.0", "ES 3.1", "ES 3.1+AEP", "kEGL_KHR_create_context", "kEGL_KHR_no_config_context", "kEGL_KHR_gl_colorspace", "kEGL_EXT_protected_surface", "GfxDevice: creating device client; threaded=%i\n", "Dimensions of color surface does not match dimensions of depth surface", "CPU fence is invalid or very old!", "Warning! Video texture requires non-power-of-two-textures support in hardware.", "integer overflow in addition", "integer overflow in multiplication", "no camera available.", "BaseVideoTexture", "Default audio device was changed, but the audio system failed to initialize it. Attempting to reset sound system.", "UnityAudioRenderer", "%s: \"%s\" (%d)", "This version of FMOD does not support debug output. Please rebuild Unity with the Debug (-D postfixed) version of the FMOD libraries, or turn off the FMOD logging switches.", "FMOD failed to create System object ... ", "./Modules/Audio/Public/AudioManager.cpp", "m_FMODSystem->getVersion(&version)", "FMOD failed to register internal output recorder ... ", "FMOD failed to create internal output recorder ... ", "FMOD failed to set stream buffer size ... ", "FMOD failed to setup system callbacks ... ", "FMOD failed to setup 3D rolloffs ... ", "Unable to initalize any audio device (even FMOD nosound device), please check your audio drivers and/or hardware for malfunction", "FMOD failed to initialize any audio devices, running on emulated software output with no sound. Please check your audio drivers and/or hardware for malfunction.\n", "FMOD initialized on nosound output\n", "FMOD failed to setup master channel groups ... ", "MasterDSP", "m_ChannelGroup_FMODMaster->addDSP(m_MasterDSP, NULL)", "FMOD failed to setup channel groups ... ", "NoFX_IgnoreVol", "NoFX_UseVol", "m_ChannelGroup_FMODMaster->getDSPHead(&dspMaster)", "dspMaster->getOutput(0, &dspMasterParent, NULL)", "dspMaster->getInput(0, &dspTarget, NULL)", "dspTarget->getInput(0, &dspTarget, NULL)", "dspMasterParent->getNumInputs(&numInputs)", "dspMasterParent->getInput(n, &dspToBeRerouted, NULL)", "dspToBeRerouted->getInfo(namebuf, NULL, NULL, NULL, NULL)", "SFX Reverb", "dspToBeRerouted->disconnectAll(false, true)", "dspTarget->addInput(dspToBeRerouted, NULL)", "m_FMODSystem->getOutput(previous)", "dsp->setBypass(customFilter->m_SavedBypassState)", "It appears that OnAudioConfigurationChanged is being called recursively and therefore the calls have been aborted after two recursions. Use the deviceWasChanged argument to only call AudioSettings.SetConfiguration in response to device changes.", "m_FMODSystem->getNumDrivers(&numDrivers)", "m_FMODSystem->getDSPBufferSize(&blockSize, NULL)", "FMOD failed to get DSP Buffer size", "FMOD was unable to select requested output: ", "FMOD failed to get number of drivers ... ", "FMOD failed to get driver the current driver ... ", "FMOD failed to get driver capabilities ... ", "FMOD could not set speaker mode to the one specified in the project settings (%d). Falling back to stereo.", "FMOD failed to set speaker mode ... ", "FMOD failed to get number of DSP buffers", "FMOD failed to set DSP Buffer size ... ", "FMOD failed to get software format ... ", "FMOD failed to set the software format to the custom sample rate %d, trying software fallback rate %d", "FMOD failed to set the software format to the previously acquired software sample rate %d, trying device driver's system output rate %d", "Forced to initialize FMOD to to the device driver's system output rate %d, this may impact performance and/or give inconsistent experiences compared to selected sample rate %d", "FMOD failed to set the software format to the device driver's system output rate", "FMOD failed to set software channel count ... ", "fmodprofiler", "FMOD failed to initialize the output device.", "dsp->getBypass(&customFilter->m_SavedBypassState)", "Failed to create FMOD sound from movie", "Default audio device was changed while the system was recording, but the audio system failed to initialize it. Attempting to reset sound system.", "m_FMODSystem->getDSPBufferSize((unsigned int*)&config.dspBufferSize, NULL)", "m_FMODSystem->getSoftwareFormat(&config.sampleRate, NULL, NULL, NULL, NULL, NULL)", "Failed to get number of recording devices", "Failed to get recording driver capabilities", "Failed to create sound clip for recording", "Length of the recording must be greater than zero (0)", "Length of the recording must be less than one hour", "Frequency must be greater than zero (0)", "Starting microphone failed", "Error: AudioRender.Start() called while system was already recording.", "FMOD failed to switch to get current output ... ", "FMOD failed to switch to output recorder ... ", "Error: AudioRender.Stop() called while system was not recording.", "FMOD failed to switch back to normal output ... ", "Error: AudioRender.GetSampleCountForCaptureFrame() called while system was not recording.", "Error: AudioRender.AddMixerGroupSink() called while system was not recording. This function must be called every frame for the mixer groups that should be recorded.", "Error: AudioRender.Render() called while system was not recording.", "m_FMODSystem->getSoftwareFormat(NULL, &outputFormat, NULL, NULL, NULL, &bits)", "Mixer is not initialized", "Invalid AudioMixerGroup output for mixer: %s, routing directly to device output.", "Exposed name does not exist: %s", "Snapshot name does not exist: %s", "Cannot set Output Mixer for AudioMixer: %s, creates curcular routing.", "./Modules/Audio/Public/AudioMixer.cpp", "sink->m_DSP->release()", "MixerGroupRec", "outputGroup->addDSP(sink->m_DSP, NULL)", "m_OutputGroup", "m_MasterGroup", "m_Snapshots", "m_StartSnapshot", "m_SuspendThreshold", "m_EnableSuspend", "Unable to generate valid runtime data for serialization of AudioMixer: %s.", "m_MixerConstant", "m_AudioMixer", "m_SnapshotID", "AudioSampleProvider buffer overflow. %u sample frames discarded.", "ASrcDryGroup", "./Modules/Audio/Public/AudioSource.cpp", "GetAudioManager().GetFMODSystem()->createChannelGroup(\"ASrcDryGroup\", &m_dryGroup)", "ASrcWetGroup", "GetAudioManager().GetFMODSystem()->createChannelGroup(\"ASrcWetGroup\", &m_wetGroup)", "Audio source failed to initialize audio spatializer. Please check that the project audio settings and make sure that the selected spatializer is compatible with the target.", "Audio source failed to initialize audio spatializer. An audio spatializer is specified in the audio project settings, but the associated plugin was not found or initialized properly. Please make sure that the selected spatializer is compatible with the target.", "m_dryGroup->getParentGroup(&parentGroup)", "newParentGroup->addGroup(m_dryGroup)", "m_wetGroup->addGroup(m_dryGroup)", "m_wetGroup->getParentGroup(&parentGroup)", "newParentGroup->addGroup(m_wetGroup)", "Can not play a disabled audio source", "Playing an ambisonic audio clip on a spatialized audio source is not expected. Spatialization, distance attenuation, and SetSpatializerFloat script calls may not work as expected.", "Only custom filters can be played. Please add a custom filter or an audioclip to the audiosource (%s).", "dsp->remove()", "Ran out of virtual channels. Sound will not be played.", "Sound could not be played. FMOD Error: %s", "fmodChannel->setMode(mode)", "GetAudioManager().GetFMODSystem()->getSoftwareFormat(&samplerate, NULL, NULL, NULL, NULL, NULL)", "fmodChannel->setFrequency(samplerate)", "m_dryGroup->release()", "m_wetGroup->release()", "channel.set3DPanLevel(0.0f)", "channel.setPan(0.0f)", "channel.set3DPanLevel(cache.spatialBlendLevel)", "channel.set3DSpread(cache.spread)", "channel.setPan(cache.stereoPan)", "channel.getReverbProperties(&props)", "channel.setReverbProperties(&props)", "Audio source is playing an ambisonic audio clip, but an ambisonic decoder could not be created successfully. Make sure an ambisonic decoder is selected in the audio settings.", "channel->isVirtual(&isVirtual)", "Attempt to set pitch to infinite value in AudioSource::SetPitch ignored!", "Attempt to set pitch to NaN value in AudioSource::SetPitch ignored!", "Attempt to set pitch to a negative value in AudioSource::SetPitch ignored! This is only supported for AudioClips which are stored in an uncompressed format or will be decompressed at load time.", "m_dryGroup->setAudibilityFactor(audibilityFactor)", "channel.setPriority(cache.priority)", "channel.set3DMinMaxDistance(cache.minDistance, cache.maxDistance)", "m_dryGroup->getWaveData(samples, numSamples, channelOffset)", "m_dryGroup->getSpectrum(samples, numSamples, channelOffset, windowType)", "m_wetGroup->addDSP(dsp, 0)", "m_SpatializerDSP->remove()", "m_wetGroup->addDSP(m_SpatializerDSP, NULL)", "m_dryGroup->addDSP(m_SpatializerDSP, NULL)", "m_SpatializerDSP->setActive(active)", "Playing an ambisonic audio clip on a spatialized audio source is not expected. Spatialization, distance attenuation, and SetSpatializerFloat script calls will not work as expected.", "AudioBehaviour", "AudioHighPassFilter", "AudioLowPassFilter", "Tried to call lock a second time before unlock was called. ", "Tried to call a function on a data type that does not allow this type of functionality (ie calling Sound::lock on a streaming sound). ", "Neither NTSCSI nor ASPI could be initialised. ", "An error occurred while initialising the CDDA subsystem. ", "Couldn't find the specified device. ", "No audio tracks on the specified disc. ", "No CD/DVD devices were found. ", "No disc present in the specified drive. ", "A CDDA read error occurred. ", "Error trying to allocate a channel. ", "The specified channel has been reused to play another sound. ", "A Win32 COM related error occured. COM failed to initialize or a QueryInterface failed meaning a Windows codec or driver was not installed properly. ", "DMA Failure.  See debug output for more information. ", "DSP connection error.  Connection possibly caused a cyclic dependancy.  Or tried to connect a tree too many units deep (more than 128). ", "DSP Format error.  A DSP unit may have attempted to connect to this network with the wrong format. ", "DSP connection error.  Couldn't find the DSP unit specified. ", "DSP error.  Cannot perform this operation while the network is in the middle of running.  This will most likely happen if a connection or disconnection is attempted in a DSP callback. ", "DSP connection error.  The unit being connected to or disconnected should only have 1 input or output. ", "The specified project or bank has already been loaded. Having multiple copies of the same project loaded simultaneously is forbidden. ", "An Event failed to be retrieved, most likely due to 'just fail' being specified as the max playbacks behavior. ", "An event with the same GUID already exists. ", "Can't execute this command on an EVENT_INFOONLY event. ", "An error occured that wasn't supposed to.  See debug log for reason. ", "Event failed because 'Max streams' was hit when FMOD_EVENT_INIT_FAIL_ON_MAXSTREAMS was specified. ", "FSB mismatches the FEV it was compiled with, the stream/sample mode it was meant to be created with was different, or the FEV was built for a different platform. ", "A category with the same name already exists. ", "Tried to call a function on a complex event that's only supported by simple events. ", "The requested event, event group, event category or event property could not be found. ", "Error loading file. ", "Couldn't perform seek operation.  This is a limitation of the medium (ie netstreams) or the file format. ", "Media was ejected while reading. ", "End of file unexpectedly reached while trying to read essential data (truncated data?). ", "File not found. ", "Unwanted file access occured. ", "Unsupported file or audio format. ", "A HTTP error occurred. This is a catch-all for HTTP errors not listed elsewhere. ", "The specified resource requires authentication or is forbidden. ", "Proxy authentication is required to access the specified resource. ", "A HTTP server error occurred. ", "The HTTP request timed out. ", "FMOD was not initialized correctly to support this function. ", "Cannot call this command after System::init. ", "An error occured that wasn't supposed to.  Contact support. ", "On Xbox 360, this memory address passed to FMOD must be physical, (ie allocated with XPhysicalAlloc.) ", "Value passed in was a NaN, Inf or denormalized float. ", "An invalid object handle was used. ", "An invalid parameter was passed to this function. ", "An invalid seek position was passed to this function. ", "An invalid speaker was passed to this function based on the current speaker mode. ", "The syncpoint did not come from this sound handle. ", "The vectors passed in are not unit length, or perpendicular. ", "Reached maximum audible playback count for this sound's soundgroup. ", "Not enough memory or resources. ", "Can't use FMOD_OPENMEMORY_POINT on non PCM source data, or non mp3/xma/adpcm data if FMOD_CREATECOMPRESSEDSAMPLE was used. ", "Not enough memory or resources on console sound ram. ", "The music callback is required, but it has not been set. ", "The requested music entity could not be found. ", "Music system is not initialized probably because no music data is loaded. ", "Tried to call a command on a 3d sound when the command was meant for 2d sound. ", "Tried to call a command on a 2d sound when the command was meant for 3d sound. ", "Tried to use a feature that requires hardware support.  (ie trying to play a GCADPCM compressed sound in software on Wii). ", "Tried to use a feature that requires the software engine.  Software engine has either been turned off, or command was executed on a hardware channel which does not support this feature. ", "Couldn't connect to the specified host. ", "A socket error occurred.  This is a catch-all for socket-related errors not listed elsewhere. ", "The specified URL couldn't be resolved. ", "Operation on a non-blocking socket could not complete immediately. ", "Operation could not be performed because specified sound/DSP connection is not ready. ", "Error initializing output device, but more specifically, the output device is already in use and cannot be reused. ", "Error creating hardware sound buffer. ", "A call to a standard soundcard driver failed, which could possibly mean a bug in the driver or resources were missing or exhausted. ", "Error enumerating the available driver list. List may be inconsistent due to a recent device addition or removal. ", "Soundcard does not support the minimum features needed for this soundsystem (16bit stereo output). ", "Error initializing output device. ", "FMOD_HARDWARE was specified but the sound card does not have the resources necessary to play it. ", "Attempted to create a software sound but no software channels were specified in System::init. ", "Panning only works with mono or stereo sound sources. ", "An unspecified error has been returned from a 3rd party plugin. ", "The number of allowed instances of a plugin has been exceeded. ", "A requested output, dsp unit type or codec was not available. ", "A resource that the plugin requires cannot be found. (ie the DLS file for MIDI playback or other DLLs that it needs to load) ", "The specified sound is still in use by the event system, call EventSystem::unloadFSB before trying to release it. ", "The specified sound is still in use by the event system, wait for the event which is using it finish with it. ", "An error occured trying to initialize the recording device. ", "Specified instance in FMOD_REVERB_PROPERTIES couldn't be set. Most likely because it is an invalid instance number or the reverb doesnt exist. ", "The error occured because the sound referenced contains subsounds when it shouldn't have, or it doesn't contain subsounds when it should have.  The operation may also not be able to be performed on a parent sound, or a parent sound was played without setting up a sentence first. ", "This subsound is already being used by another sound, you cannot have more than one parent to a sound.  Null out the other parent's entry first. ", "Shared subsounds cannot be replaced or moved from their parent stream, such as when the parent stream is an FSB file. ", "The subsound's mode bits do not match with the parent sound's mode bits.  See documentation for function that it was called with. ", "The specified tag could not be found or there are no tags. ", "The sound created exceeds the allowable input channel count.  This can be increased using the maxinputchannels parameter in System::setSoftwareFormat. ", "Something in FMOD hasn't been implemented when it should be! contact support! ", "This command failed because System::init or System::setDriver was not called. ", "A command issued was not supported by this object.  Possibly a plugin without certain callbacks specified. ", "An error caused by System::update occured. ", "The version number of this file format is not supported. ", "No errors.", "Unknown error.", "%s(%d) : Error executing %s (%s)", "SoundChannelInstance *SoundChannel::operator->() const", "AudioMixerSnapshot", "static SoundChannel SoundChannel::Create(SoundHandle, bool)", "dsp->getInput(0, NULL, &dspCon)", "dspCon->setMix(gain)", "AudioSource", "AudioFilter", "m_CutoffFrequency", "m_HighpassResonanceQ", "m_LowpassResonanceQ", "lowpassLevelCustomCurve", "m_Volume", "Rolloff Scale", "Doppler Factor", "Default Speaker Mode", "m_DSPBufferSize", "m_VirtualVoiceCount", "m_RealVoiceCount", "m_SpatializerPlugin", "m_AmbisonicDecoderPlugin", "m_DisableAudio", "m_VirtualizeEffects", "PPtr<AudioMixerGroup>", "PPtr<AudioMixerSnapshot>", "AudioMixerConstant", "groups", "groupGUIDs", "effectGUIDs", "numSideChainBuffers", "snapshots", "snapshotGUIDs", "groupNameBuffer", "snapshotNameBuffer", "pluginEffectNameBuffer", "exposedParameterNames", "exposedParameterIndices", "GroupConstant", "parentConstantIndex", "volumeIndex", "pitchIndex", "mute", "solo", "bypassEffects", "EffectConstant", "groupConstantIndex", "sendTargetEffectIndex", "wetMixLevelIndex", "prevEffectIndex", "bypass", "parameterIndices", "SnapshotConstant", "transitionTypes", "transitionIndices", "PPtr<AudioMixer>", "m_audioClip", "m_PlayOnAwake", "m_Pitch", "m_MinVolume", "m_MaxVolume", "m_RolloffFactor", "OutputAudioMixerGroup", "Spatialize", "SpatializePostEffects", "DopplerLevel", "Pan2D", "rolloffMode", "BypassEffects", "BypassListenerEffects", "BypassReverbZones", "rolloffCustomCurve", "panLevelCustomCurve", "spreadCustomCurve", "reverbZoneMixCustomCurve", "PPtr<AudioClip>", "NULL FMOD system when instantiating mixer effects", "Instantiation of FMOD effect type %d failed with result %d (%s)", "FMOD ", "m_GroupID", "./Modules/Audio/Public/AudioSampleProviderChannel.cpp", "dsp->getUserData((void**)&channel)", "AudioSampleProviderChannel", "system->createDSP(&dspDesc, &customDsp)", "system->playDSP(FMOD_CHANNEL_FREE, customDsp, true, &customChannel)", "customChannel->setMode(mode)", "customChannel->setFrequency(m_SampleProvider->GetSampleRate())", "m_Dsp->release()", "AudioChorusFilter", "AudioReverbFilter", "AudioReverbZone", "m_DryMix", "m_WetMix1", "m_WetMix2", "m_WetMix3", "m_Delay", "m_Rate", "m_DryLevel", "m_Room", "m_RoomHF", "m_DecayTime", "m_DecayHFRatio", "m_ReflectionsLevel", "m_ReverbLevel", "m_ReverbDelay", "m_Diffusion", "m_Density", "m_HFReference", "m_RoomLF", "m_LFReference", "m_ReflectionsDelay", "m_ReverbPreset", "m_MinDistance", "m_MaxDistance", "m_Reflections", "m_Reverb", "X94<", "colliderA", "colliderB", "collider", "UnityEngine.PhysicMaterial::Internal_CreateDynamicsMaterial", "UnityEngine.PhysicMaterial::get_bounciness", "UnityEngine.PhysicMaterial::set_bounciness", "UnityEngine.PhysicMaterial::get_dynamicFriction", "UnityEngine.PhysicMaterial::set_dynamicFriction", "UnityEngine.PhysicMaterial::get_staticFriction", "UnityEngine.PhysicMaterial::set_staticFriction", "UnityEngine.PhysicMaterial::get_frictionCombine", "UnityEngine.PhysicMaterial::set_frictionCombine", "UnityEngine.PhysicMaterial::get_bounceCombine", "UnityEngine.PhysicMaterial::set_bounceCombine", "UnityEngine.RaycastHit::CalculateRaycastTexCoord_Injected", "UnityEngine.Rigidbody::get_velocity_Injected", "UnityEngine.Rigidbody::set_velocity_Injected", "UnityEngine.Rigidbody::get_angularVelocity_Injected", "UnityEngine.Rigidbody::set_angularVelocity_Injected", "UnityEngine.Rigidbody::get_drag", "UnityEngine.Rigidbody::set_drag", "UnityEngine.Rigidbody::get_angularDrag", "UnityEngine.Rigidbody::set_angularDrag", "UnityEngine.Rigidbody::get_mass", "UnityEngine.Rigidbody::set_mass", "UnityEngine.Rigidbody::SetDensity", "UnityEngine.Rigidbody::get_useGravity", "UnityEngine.Rigidbody::set_useGravity", "UnityEngine.Rigidbody::get_maxDepenetrationVelocity", "UnityEngine.Rigidbody::set_maxDepenetrationVelocity", "UnityEngine.Rigidbody::get_isKinematic", "UnityEngine.Rigidbody::set_isKinematic", "UnityEngine.Rigidbody::get_freezeRotation", "UnityEngine.Rigidbody::set_freezeRotation", "UnityEngine.Rigidbody::get_constraints", "UnityEngine.Rigidbody::set_constraints", "UnityEngine.Rigidbody::get_collisionDetectionMode", "UnityEngine.Rigidbody::set_collisionDetectionMode", "UnityEngine.Rigidbody::get_centerOfMass_Injected", "UnityEngine.Rigidbody::set_centerOfMass_Injected", "UnityEngine.Rigidbody::get_worldCenterOfMass_Injected", "UnityEngine.Rigidbody::get_inertiaTensorRotation_Injected", "UnityEngine.Rigidbody::set_inertiaTensorRotation_Injected", "UnityEngine.Rigidbody::get_inertiaTensor_Injected", "UnityEngine.Rigidbody::set_inertiaTensor_Injected", "UnityEngine.Rigidbody::get_detectCollisions", "UnityEngine.Rigidbody::set_detectCollisions", "UnityEngine.Rigidbody::get_position_Injected", "UnityEngine.Rigidbody::set_position_Injected", "UnityEngine.Rigidbody::get_rotation_Injected", "UnityEngine.Rigidbody::set_rotation_Injected", "UnityEngine.Rigidbody::get_interpolation", "UnityEngine.Rigidbody::set_interpolation", "UnityEngine.Rigidbody::get_solverIterations", "UnityEngine.Rigidbody::set_solverIterations", "UnityEngine.Rigidbody::get_sleepThreshold", "UnityEngine.Rigidbody::set_sleepThreshold", "UnityEngine.Rigidbody::get_maxAngularVelocity", "UnityEngine.Rigidbody::set_maxAngularVelocity", "UnityEngine.Rigidbody::MovePosition_Injected", "UnityEngine.Rigidbody::MoveRotation_Injected", "UnityEngine.Rigidbody::Sleep", "UnityEngine.Rigidbody::IsSleeping", "UnityEngine.Rigidbody::WakeUp", "UnityEngine.Rigidbody::ResetCenterOfMass", "UnityEngine.Rigidbody::ResetInertiaTensor", "UnityEngine.Rigidbody::GetRelativePointVelocity_Injected", "UnityEngine.Rigidbody::GetPointVelocity_Injected", "UnityEngine.Rigidbody::get_solverVelocityIterations", "UnityEngine.Rigidbody::set_solverVelocityIterations", "UnityEngine.Rigidbody::get_sleepVelocity", "UnityEngine.Rigidbody::set_sleepVelocity", "UnityEngine.Rigidbody::get_sleepAngularVelocity", "UnityEngine.Rigidbody::set_sleepAngularVelocity", "UnityEngine.Rigidbody::AddForce_Injected", "UnityEngine.Rigidbody::AddRelativeForce_Injected", "UnityEngine.Rigidbody::AddTorque_Injected", "UnityEngine.Rigidbody::AddRelativeTorque_Injected", "UnityEngine.Rigidbody::AddForceAtPosition_Injected", "UnityEngine.Rigidbody::AddExplosionForce_Injected", "UnityEngine.Rigidbody::Internal_ClosestPointOnBounds_Injected", "UnityEngine.Rigidbody::SweepTest_Injected", "UnityEngine.Rigidbody::Internal_SweepTestAll_Injected", "UnityEngine.Collider::get_enabled", "UnityEngine.Collider::set_enabled", "UnityEngine.Collider::get_attachedRigidbody", "UnityEngine.Collider::get_isTrigger", "UnityEngine.Collider::set_isTrigger", "UnityEngine.Collider::get_contactOffset", "UnityEngine.Collider::set_contactOffset", "UnityEngine.Collider::ClosestPoint_Injected", "UnityEngine.Collider::get_bounds_Injected", "UnityEngine.Collider::get_sharedMaterial", "UnityEngine.Collider::set_sharedMaterial", "UnityEngine.Collider::get_material", "UnityEngine.Collider::set_material", "UnityEngine.Collider::Raycast_Injected", "UnityEngine.Collider::Internal_ClosestPointOnBounds_Injected", "UnityEngine.CharacterController::SimpleMove_Injected", "UnityEngine.CharacterController::Move_Injected", "UnityEngine.CharacterController::get_velocity_Injected", "UnityEngine.CharacterController::get_isGrounded", "UnityEngine.CharacterController::get_collisionFlags", "UnityEngine.CharacterController::get_radius", "UnityEngine.CharacterController::set_radius", "UnityEngine.CharacterController::get_height", "UnityEngine.CharacterController::set_height", "UnityEngine.CharacterController::get_center_Injected", "UnityEngine.CharacterController::set_center_Injected", "UnityEngine.CharacterController::get_slopeLimit", "UnityEngine.CharacterController::set_slopeLimit", "UnityEngine.CharacterController::get_stepOffset", "UnityEngine.CharacterController::set_stepOffset", "UnityEngine.CharacterController::get_skinWidth", "UnityEngine.CharacterController::set_skinWidth", "UnityEngine.CharacterController::get_minMoveDistance", "UnityEngine.CharacterController::set_minMoveDistance", "UnityEngine.CharacterController::get_detectCollisions", "UnityEngine.CharacterController::set_detectCollisions", "UnityEngine.CharacterController::get_enableOverlapRecovery", "UnityEngine.CharacterController::set_enableOverlapRecovery", "UnityEngine.MeshCollider::get_sharedMesh", "UnityEngine.MeshCollider::set_sharedMesh", "UnityEngine.MeshCollider::get_convex", "UnityEngine.MeshCollider::set_convex", "UnityEngine.MeshCollider::get_cookingOptions", "UnityEngine.MeshCollider::set_cookingOptions", "UnityEngine.CapsuleCollider::get_center_Injected", "UnityEngine.CapsuleCollider::set_center_Injected", "UnityEngine.CapsuleCollider::get_radius", "UnityEngine.CapsuleCollider::set_radius", "UnityEngine.CapsuleCollider::get_height", "UnityEngine.CapsuleCollider::set_height", "UnityEngine.CapsuleCollider::get_direction", "UnityEngine.CapsuleCollider::set_direction", "UnityEngine.CapsuleCollider::GetGlobalExtents_Injected", "UnityEngine.CapsuleCollider::CalculateTransform_Injected", "UnityEngine.BoxCollider::get_center_Injected", "UnityEngine.BoxCollider::set_center_Injected", "UnityEngine.BoxCollider::get_size_Injected", "UnityEngine.BoxCollider::set_size_Injected", "UnityEngine.SphereCollider::get_center_Injected", "UnityEngine.SphereCollider::set_center_Injected", "UnityEngine.SphereCollider::get_radius", "UnityEngine.SphereCollider::set_radius", "UnityEngine.ConstantForce::get_force_Injected", "UnityEngine.ConstantForce::set_force_Injected", "UnityEngine.ConstantForce::get_relativeForce_Injected", "UnityEngine.ConstantForce::set_relativeForce_Injected", "UnityEngine.ConstantForce::get_torque_Injected", "UnityEngine.ConstantForce::set_torque_Injected", "UnityEngine.ConstantForce::get_relativeTorque_Injected", "UnityEngine.ConstantForce::set_relativeTorque_Injected", "UnityEngine.Joint::get_connectedBody", "UnityEngine.Joint::set_connectedBody", "UnityEngine.Joint::get_axis_Injected", "UnityEngine.Joint::set_axis_Injected", "UnityEngine.Joint::get_anchor_Injected", "UnityEngine.Joint::set_anchor_Injected", "UnityEngine.Joint::get_connectedAnchor_Injected", "UnityEngine.Joint::set_connectedAnchor_Injected", "UnityEngine.Joint::get_autoConfigureConnectedAnchor", "UnityEngine.Joint::set_autoConfigureConnectedAnchor", "UnityEngine.Joint::get_breakForce", "UnityEngine.Joint::set_breakForce", "UnityEngine.Joint::get_breakTorque", "UnityEngine.Joint::set_breakTorque", "UnityEngine.Joint::get_enableCollision", "UnityEngine.Joint::set_enableCollision", "UnityEngine.Joint::get_enablePreprocessing", "UnityEngine.Joint::set_enablePreprocessing", "UnityEngine.Joint::get_massScale", "UnityEngine.Joint::set_massScale", "UnityEngine.Joint::get_connectedMassScale", "UnityEngine.Joint::set_connectedMassScale", "UnityEngine.Joint::GetCurrentForces", "UnityEngine.HingeJoint::get_motor_Injected", "UnityEngine.HingeJoint::set_motor_Injected", "UnityEngine.HingeJoint::get_limits_Injected", "UnityEngine.HingeJoint::set_limits_Injected", "UnityEngine.HingeJoint::get_spring_Injected", "UnityEngine.HingeJoint::set_spring_Injected", "UnityEngine.HingeJoint::get_useMotor", "UnityEngine.HingeJoint::set_useMotor", "UnityEngine.HingeJoint::get_useLimits", "UnityEngine.HingeJoint::set_useLimits", "UnityEngine.HingeJoint::get_useSpring", "UnityEngine.HingeJoint::set_useSpring", "UnityEngine.HingeJoint::get_velocity", "UnityEngine.HingeJoint::get_angle", "UnityEngine.SpringJoint::get_spring", "UnityEngine.SpringJoint::set_spring", "UnityEngine.SpringJoint::get_damper", "UnityEngine.SpringJoint::set_damper", "UnityEngine.SpringJoint::get_minDistance", "UnityEngine.SpringJoint::set_minDistance", "UnityEngine.SpringJoint::get_maxDistance", "UnityEngine.SpringJoint::set_maxDistance", "UnityEngine.SpringJoint::get_tolerance", "UnityEngine.SpringJoint::set_tolerance", "UnityEngine.CharacterJoint::get_swingAxis_Injected", "UnityEngine.CharacterJoint::set_swingAxis_Injected", "UnityEngine.CharacterJoint::get_twistLimitSpring_Injected", "UnityEngine.CharacterJoint::set_twistLimitSpring_Injected", "UnityEngine.CharacterJoint::get_swingLimitSpring_Injected", "UnityEngine.CharacterJoint::set_swingLimitSpring_Injected", "UnityEngine.CharacterJoint::get_lowTwistLimit_Injected", "UnityEngine.CharacterJoint::set_lowTwistLimit_Injected", "UnityEngine.CharacterJoint::get_highTwistLimit_Injected", "UnityEngine.CharacterJoint::set_highTwistLimit_Injected", "UnityEngine.CharacterJoint::get_swing1Limit_Injected", "UnityEngine.CharacterJoint::set_swing1Limit_Injected", "UnityEngine.CharacterJoint::get_swing2Limit_Injected", "UnityEngine.CharacterJoint::set_swing2Limit_Injected", "UnityEngine.CharacterJoint::get_enableProjection", "UnityEngine.CharacterJoint::set_enableProjection", "UnityEngine.CharacterJoint::get_projectionDistance", "UnityEngine.CharacterJoint::set_projectionDistance", "UnityEngine.CharacterJoint::get_projectionAngle", "UnityEngine.CharacterJoint::set_projectionAngle", "UnityEngine.ConfigurableJoint::get_secondaryAxis_Injected", "UnityEngine.ConfigurableJoint::set_secondaryAxis_Injected", "UnityEngine.ConfigurableJoint::get_xMotion", "UnityEngine.ConfigurableJoint::set_xMotion", "UnityEngine.ConfigurableJoint::get_yMotion", "UnityEngine.ConfigurableJoint::set_yMotion", "UnityEngine.ConfigurableJoint::get_zMotion", "UnityEngine.ConfigurableJoint::set_zMotion", "UnityEngine.ConfigurableJoint::get_angularXMotion", "UnityEngine.ConfigurableJoint::set_angularXMotion", "UnityEngine.ConfigurableJoint::get_angularYMotion", "UnityEngine.ConfigurableJoint::set_angularYMotion", "UnityEngine.ConfigurableJoint::get_angularZMotion", "UnityEngine.ConfigurableJoint::set_angularZMotion", "UnityEngine.ConfigurableJoint::get_linearLimitSpring_Injected", "UnityEngine.ConfigurableJoint::set_linearLimitSpring_Injected", "UnityEngine.ConfigurableJoint::get_angularXLimitSpring_Injected", "UnityEngine.ConfigurableJoint::set_angularXLimitSpring_Injected", "UnityEngine.ConfigurableJoint::get_angularYZLimitSpring_Injected", "UnityEngine.ConfigurableJoint::set_angularYZLimitSpring_Injected", "UnityEngine.ConfigurableJoint::get_linearLimit_Injected", "UnityEngine.ConfigurableJoint::set_linearLimit_Injected", "UnityEngine.ConfigurableJoint::get_lowAngularXLimit_Injected", "UnityEngine.ConfigurableJoint::set_lowAngularXLimit_Injected", "UnityEngine.ConfigurableJoint::get_highAngularXLimit_Injected", "UnityEngine.ConfigurableJoint::set_highAngularXLimit_Injected", "UnityEngine.ConfigurableJoint::get_angularYLimit_Injected", "UnityEngine.ConfigurableJoint::set_angularYLimit_Injected", "UnityEngine.ConfigurableJoint::get_angularZLimit_Injected", "UnityEngine.ConfigurableJoint::set_angularZLimit_Injected", "UnityEngine.ConfigurableJoint::get_targetPosition_Injected", "UnityEngine.ConfigurableJoint::set_targetPosition_Injected", "UnityEngine.ConfigurableJoint::get_targetVelocity_Injected", "UnityEngine.ConfigurableJoint::set_targetVelocity_Injected", "UnityEngine.ConfigurableJoint::get_xDrive_Injected", "UnityEngine.ConfigurableJoint::set_xDrive_Injected", "UnityEngine.ConfigurableJoint::get_yDrive_Injected", "UnityEngine.ConfigurableJoint::set_yDrive_Injected", "UnityEngine.ConfigurableJoint::get_zDrive_Injected", "UnityEngine.ConfigurableJoint::set_zDrive_Injected", "UnityEngine.ConfigurableJoint::get_targetRotation_Injected", "UnityEngine.ConfigurableJoint::set_targetRotation_Injected", "UnityEngine.ConfigurableJoint::get_targetAngularVelocity_Injected", "UnityEngine.ConfigurableJoint::set_targetAngularVelocity_Injected", "UnityEngine.ConfigurableJoint::get_rotationDriveMode", "UnityEngine.ConfigurableJoint::set_rotationDriveMode", "UnityEngine.ConfigurableJoint::get_angularXDrive_Injected", "UnityEngine.ConfigurableJoint::set_angularXDrive_Injected", "UnityEngine.ConfigurableJoint::get_angularYZDrive_Injected", "UnityEngine.ConfigurableJoint::set_angularYZDrive_Injected", "UnityEngine.ConfigurableJoint::get_slerpDrive_Injected", "UnityEngine.ConfigurableJoint::set_slerpDrive_Injected", "UnityEngine.ConfigurableJoint::get_projectionMode", "UnityEngine.ConfigurableJoint::set_projectionMode", "UnityEngine.ConfigurableJoint::get_projectionDistance", "UnityEngine.ConfigurableJoint::set_projectionDistance", "UnityEngine.ConfigurableJoint::get_projectionAngle", "UnityEngine.ConfigurableJoint::set_projectionAngle", "UnityEngine.ConfigurableJoint::get_configuredInWorldSpace", "UnityEngine.ConfigurableJoint::set_configuredInWorldSpace", "UnityEngine.ConfigurableJoint::get_swapBodies", "UnityEngine.ConfigurableJoint::set_swapBodies", "UnityEngine.ContactPoint::GetColliderByInstanceID", "UnityEngine.PhysicsScene::IsValid_Internal_Injected", "UnityEngine.PhysicsScene::IsEmpty_Internal_Injected", "UnityEngine.PhysicsScene::Internal_RaycastTest_Injected", "UnityEngine.PhysicsScene::Internal_Raycast_Injected", "UnityEngine.PhysicsScene::Internal_RaycastNonAlloc_Injected", "UnityEngine.PhysicsSceneExtensions::GetPhysicsScene_Internal_Injected", "UnityEngine.Physics::get_gravity_Injected", "UnityEngine.Physics::set_gravity_Injected", "UnityEngine.Physics::get_defaultContactOffset", "UnityEngine.Physics::set_defaultContactOffset", "UnityEngine.Physics::get_sleepThreshold", "UnityEngine.Physics::set_sleepThreshold", "UnityEngine.Physics::get_queriesHitTriggers", "UnityEngine.Physics::set_queriesHitTriggers", "UnityEngine.Physics::get_queriesHitBackfaces", "UnityEngine.Physics::set_queriesHitBackfaces", "UnityEngine.Physics::get_bounceThreshold", "UnityEngine.Physics::set_bounceThreshold", "UnityEngine.Physics::get_defaultSolverIterations", "UnityEngine.Physics::set_defaultSolverIterations", "UnityEngine.Physics::get_defaultSolverVelocityIterations", "UnityEngine.Physics::set_defaultSolverVelocityIterations", "UnityEngine.Physics::get_defaultPhysicsScene_Injected", "UnityEngine.Physics::IgnoreCollision", "UnityEngine.Physics::IgnoreLayerCollision", "UnityEngine.Physics::GetIgnoreLayerCollision", "UnityEngine.Physics::Query_CapsuleCast_Injected", "UnityEngine.Physics::Query_SphereCast_Injected", "UnityEngine.Physics::Query_BoxCast_Injected", "UnityEngine.Physics::Internal_RaycastAll_Injected", "UnityEngine.Physics::Query_CapsuleCastAll_Injected", "UnityEngine.Physics::Query_SphereCastAll_Injected", "UnityEngine.Physics::OverlapCapsule_Internal_Injected", "UnityEngine.Physics::OverlapSphere_Internal_Injected", "UnityEngine.Physics::Simulate_Internal_Injected", "UnityEngine.Physics::get_autoSimulation", "UnityEngine.Physics::set_autoSimulation", "UnityEngine.Physics::SyncTransforms", "UnityEngine.Physics::get_autoSyncTransforms", "UnityEngine.Physics::set_autoSyncTransforms", "UnityEngine.Physics::get_reuseCollisionCallbacks", "UnityEngine.Physics::set_reuseCollisionCallbacks", "UnityEngine.Physics::Query_ComputePenetration_Injected", "UnityEngine.Physics::Query_ClosestPoint_Injected", "UnityEngine.Physics::get_interCollisionDistance", "UnityEngine.Physics::set_interCollisionDistance", "UnityEngine.Physics::get_interCollisionStiffness", "UnityEngine.Physics::set_interCollisionStiffness", "UnityEngine.Physics::get_interCollisionSettingsToggle", "UnityEngine.Physics::set_interCollisionSettingsToggle", "UnityEngine.Physics::OverlapSphereNonAlloc_Internal_Injected", "UnityEngine.Physics::CheckSphere_Internal_Injected", "UnityEngine.Physics::Internal_CapsuleCastNonAlloc_Injected", "UnityEngine.Physics::Internal_SphereCastNonAlloc_Injected", "UnityEngine.Physics::CheckCapsule_Internal_Injected", "UnityEngine.Physics::CheckBox_Internal_Injected", "UnityEngine.Physics::OverlapBox_Internal_Injected", "UnityEngine.Physics::OverlapBoxNonAlloc_Internal_Injected", "UnityEngine.Physics::Internal_BoxCastNonAlloc_Injected", "UnityEngine.Physics::Internal_BoxCastAll_Injected", "UnityEngine.Physics::OverlapCapsuleNonAlloc_Internal_Injected", "UnityEngine.Physics::Internal_RebuildBroadphaseRegions_Injected", "UnityEngine.RaycastCommand::ScheduleRaycastBatch_Injected", "UnityEngine.SpherecastCommand::ScheduleSpherecastBatch_Injected", "UnityEngine.CapsulecastCommand::ScheduleCapsulecastBatch_Injected", "UnityEngine.BoxcastCommand::ScheduleBoxcastBatch_Injected", "UnityEngine.PhysicsModule.dll", "BoxColliders does not support negative scale or size.\nThe effective box size has been forced positive and is likely to give unexpected collision geometry.\nIf you absolutely need to use negative scaling you can use the convex MeshCollider.", "Completion Task", "ConstantForce requires a Rigidbody component, but non is present.", "Could not initialize FastCooker because PxFoundation is null.", "Non-convex MeshCollider with non-kinematic Rigidbody is no longer supported since Unity 5.\nIf you want to use a non-convex mesh either make the Rigidbody kinematic or remove the Rigidbody component.", "Non-convex MeshCollider cannot be used as a trigger since Unity 5.\nIf you want to use this mesh as a trigger you have to make the MeshCollider convex.", "Setting scale failed, ignoring request. Please check all scaling axes are non-zero.", "This MeshCollider (GameObject: '%s' Mesh: '%s') requires the mesh to be marked as readable in order to be usable with the given transform.", "Triggers on concave MeshColliders are not supported", "Physics.ClosestPoint can only be used with a BoxCollider, SphereCollider, CapsuleCollider and a convex MeshCollider.", "CharacterJoint", "ConstantForce", "m_Extents", "m_SwingAxis", "m_LowTwistLimit", "m_HighTwistLimit", "m_TwistLimitSpring", "m_Swing1Limit", "m_Swing2Limit", "m_SwingLimitSpring", "m_EnableProjection", "m_ProjectionDistance", "m_ProjectionAngle", "m_ConnectedBody", "m_Axis", "m_AutoConfigureConnectedAnchor", "m_ConnectedAnchor", "PPtr<Rigidbody>", "SoftJointLimit_Unity4", "SoftJointLimitSpring", "SoftJointLimit", "contactDistance", "m_BreakForce", "m_BreakTorque", "m_EnableCollision", "m_EnablePreprocessing", "m_MassScale", "m_ConnectedMassScale", "m_Force", "m_RelativeForce", "m_Torque", "m_RelativeTorque", "m_Convex", "m_CookingOptions", "m_Radius", "Infinity or NaN floating point numbers appear when calculating the transform matrix for a Collider. ", "Could not create shape for collider. Maybe you are attaching too many shapes to rigidbody?", "Could not create actor. Maybe you are using too many colliders or rigidbodies in your scene?", "Contact offset must be greater than zero", "Setting the Material property is not supported for Colliders of type %s.", "m_IsTrigger", "CollisionMeshData couldn't be created because the mesh has been marked as non-accessible.", "Cannot set the connected rigidbody for the '%s' type because it connects to a rigidbody in a different physics scene.\n", "A joint can't connect the body to itself.", "Mesh name \"", "Mesh asset path \"", "PPtr<PhysicMaterial>", "Uncaught error", "Slope Limit must be smaller than 90 degrees.", "Slope Limit should be positive or zero, clamping to zero.", "Skin Width must be positive.", "Step Offset must be positive.", "Step Offset must be less or equal to <scaled Height> + <scaled Radius> * 2", "Step offset can't be negative", "Step offset can't be greater than the height of the character controller", "Step offset should be positive", "A Character Controller cannot be a trigger.", "bouncyness", "Could not create Material. Maybe you have too many materials in your scene. Only 65535 are allowed.", "Physics material %s cannot have dynamicFriction = %f", "Physics material %s cannot have staticFriction = %f", "Physics material %s cannot have bounciness = %f", "ForceRecreateCollider", "Inertia tensor must be larger then zero in all coordinates.", "Rotation quaternions must be unit length.", "CharacterController", "ConfigurableJoint", "HingeJoint", "PhysicMaterial", "SpringJoint", "m_Direction", "m_SlopeLimit", "m_StepOffset", "m_SkinWidth", "m_MinMoveDistance", "m_SecondaryAxis", "m_XMotion", "m_YMotion", "m_ZMotion", "m_AngularXMotion", "m_AngularYMotion", "m_AngularZMotion", "m_LinearLimit", "m_LinearLimitSpring", "m_LowAngularXLimit", "m_HighAngularXLimit", "m_AngularXLimitSpring", "m_AngularYLimit", "m_AngularZLimit", "m_AngularYZLimitSpring", "m_TargetPosition", "m_TargetVelocity", "m_XDrive", "m_YDrive", "m_ZDrive", "m_TargetRotation", "m_TargetAngularVelocity", "m_RotationDriveMode", "m_AngularXDrive", "m_AngularYZDrive", "m_SlerpDrive", "m_ProjectionMode", "m_ConfiguredInWorldSpace", "m_SwapBodies", "positionSpring", "positionDamper", "maximumForce", "m_UseSpring", "m_Spring", "m_UseMotor", "m_Motor", "m_UseLimits", "m_Limits", "JointSpring", "targetPosition", "JointMotor", "targetVelocity", "force", "freeSpin", "JointLimits", "minBounce", "maxBounce", "bounceMinVelocity", "m_Mass", "m_Drag", "m_AngularDrag", "m_UseGravity", "m_IsKinematic", "m_Interpolate", "m_FreezeRotation", "m_Constraints", "m_CollisionDetection", "m_Damper", "m_Tolerance", "zCFailed to create Convex Mesh from source mesh \"%s\". Couldn't pick 4 vertices that don't form a single zero-area triangle.", "Failed to create Convex Mesh from source mesh \"%s\". Reached the maximum polygons limit (256). Consider simplifying your mesh.", "Failed to create Convex Mesh from source mesh \"%s\". An internal unspecified error has occured that could mean the Quickhull algorithm found the input mesh topologically challenging. ", "Failed to create Convex Mesh from source mesh \"%s\". Unexpected error happened.", "127.0.0.1", "file:", "m_BounceTreshold", "m_BounceThreshold", "m_SolverIterationCount", "m_DefaultSolverIterations", "m_SolverVelocityIterationCount", "m_DefaultSolverVelocityIterations", "m_SolverVelocityIterations", "Couldn't load physics", "PVD is available in this build of Unity.", "PxInitExtensions failed!", "gColliderChangeHandle_S", "gColliderChangeHandle_TR", "gBodyChangeHandleT", "gBodyChangeHandleR", "gBodyPhysisAnimationHandle", "gColliderHierarchyChangeHandle", "gRigidbodyHierarchyChangeHandle", "Physics.Simulate(...) was called with an invalid scene handle therefore the simulation was not run.", "Physics.Simulate(...) was called with a negative time. This is not supported therefore the simulation was not run.", "Physics.Simulate(...) was called from a physics callback. This is not supported as it can cause many side effects therefore the simulation was not run.", "The default contact offset must be greater than zero", "[Physics.PhysX] %s", "m_Gravity", "m_SleepThreshold", "m_DefaultContactOffset", "m_QueriesHitBackfaces", "m_RaycastsHitTriggers", "m_QueriesHitTriggers", "m_EnableAdaptiveForce", "m_ClothInterCollisionDistance", "m_ClothInterCollisionStiffness", "m_EnablePCM", "m_ContactsGeneration", "m_LayerCollisionMatrix", "m_AutoSimulation", "m_AutoSyncTransforms", "m_ReuseCollisionCallbacks", "m_ClothInterCollisionSettingsToggle", "m_ContactPairsMode", "m_BroadphaseType", "m_WorldBounds", "m_WorldSubdivisions", "m_FrictionType", "m_EnableEnhancedDeterminism", "m_EnableUnifiedHeightmaps", "#%02d  pc %016llx  %.*s (%.*s+%u)", "#%02d  pc %016llx  %.*s (%.*s)", "#%02d  pc %016llx  %.*s", "signal %d (%s), code %d (%s), fault addr %016llx\n", "signal %d (%s), code %d (%s), fault addr --------\n", "ro.build.fingerprint", "Build fingerprint: '%s'\n", "ro.revision", "Revision: '%s'\n", "/proc/%d/comm", "/proc/%d/cmdline", "pid: %d, tid: %d, name: %s  >>> %s <<<\n", "pid: %d, tid: %d, name: %s\n", "    x%-2d  %016llx  x%-2d  %016llx  x%-2d  %016llx  x%-2d  %016llx\n", "    x28  %016llx  x29  %016llx  x30  %016llx\n", "    sp   %016llx  pc   %016llx  pstate %016llx\n", "SIGILL", "SIGABRT", "SIGBUS", "SIGFPE", "SIGSEGV", "SIGPIPE", "SIGSTKFLT", "SIGSTOP", "ILL_ILLOPC", "ILL_ILLOPN", "ILL_ILLADR", "ILL_ILLTRP", "ILL_PRVOPC", "ILL_PRVREG", "ILL_COPROC", "ILL_BADSTK", "BUS_ADRALN", "BUS_ADRERR", "BUS_OBJERR", "FPE_INTDIV", "FPE_INTOVF", "FPE_FLTDIV", "FPE_FLTOVF", "FPE_FLTUND", "FPE_FLTRES", "FPE_FLTINV", "FPE_FLTSUB", "SEGV_MAPERR", "SEGV_ACCERR", "UnityEngine.GUI::get_color_Injected", "UnityEngine.GUI::set_color_Injected", "UnityEngine.GUI::get_backgroundColor_Injected", "UnityEngine.GUI::set_backgroundColor_Injected", "UnityEngine.GUI::get_contentColor_Injected", "UnityEngine.GUI::set_contentColor_Injected", "UnityEngine.GUI::get_changed", "UnityEngine.GUI::set_changed", "UnityEngine.GUI::get_enabled", "UnityEngine.GUI::set_enabled", "UnityEngine.GUI::get_depth", "UnityEngine.GUI::set_depth", "UnityEngine.GUI::get_usePageScrollbars", "UnityEngine.GUI::get_blendMaterial", "UnityEngine.GUI::get_blitMaterial", "UnityEngine.GUI::get_roundedRectMaterial", "UnityEngine.GUI::GrabMouseControl", "UnityEngine.GUI::HasMouseControl", "UnityEngine.GUI::ReleaseMouseControl", "UnityEngine.GUI::SetNextControlName", "UnityEngine.GUI::GetNameOfFocusedControl", "UnityEngine.GUI::FocusControl", "UnityEngine.GUI::InternalRepaintEditorWindow", "UnityEngine.GUI::Internal_GetTooltip", "UnityEngine.GUI::Internal_SetTooltip", "UnityEngine.GUI::Internal_GetMouseTooltip", "UnityEngine.GUI::Internal_DoModalWindow_Injected", "UnityEngine.GUI::Internal_DoWindow_Injected", "UnityEngine.GUI::DragWindow_Injected", "UnityEngine.GUI::BringWindowToFront", "UnityEngine.GUI::BringWindowToBack", "UnityEngine.GUI::FocusWindow", "UnityEngine.GUI::UnfocusWindow", "UnityEngine.GUI::Internal_BeginWindows", "UnityEngine.GUI::Internal_EndWindows", "UnityEngine.GUI::Internal_Concatenate", "UnityEngine.GUIClip::get_enabled", "UnityEngine.GUIClip::get_visibleRect_Injected", "UnityEngine.GUIClip::get_topmostRect_Injected", "UnityEngine.GUIClip::Internal_Push_Injected", "UnityEngine.GUIClip::Internal_Pop", "UnityEngine.GUIClip::Internal_GetCount", "UnityEngine.GUIClip::GetTopRect_Injected", "UnityEngine.GUIClip::Unclip_Vector2_Injected", "UnityEngine.GUIClip::Unclip_Rect_Injected", "UnityEngine.GUIClip::Clip_Vector2_Injected", "UnityEngine.GUIClip::Internal_Clip_Rect_Injected", "UnityEngine.GUIClip::UnclipToWindow_Vector2_Injected", "UnityEngine.GUIClip::UnclipToWindow_Rect_Injected", "UnityEngine.GUIClip::ClipToWindow_Vector2_Injected", "UnityEngine.GUIClip::ClipToWindow_Rect_Injected", "UnityEngine.GUIClip::Internal_GetAbsoluteMousePosition_Injected", "UnityEngine.GUIClip::Reapply", "UnityEngine.GUIClip::GetMatrix_Injected", "UnityEngine.GUIClip::SetMatrix_Injected", "UnityEngine.GUIClip::GetParentMatrix_Injected", "UnityEngine.GUIClip::Internal_PushParentClip_Injected", "UnityEngine.GUIClip::Internal_PopParentClip", "UnityEngine.GUILayoutUtility::Internal_GetWindowRect_Injected", "UnityEngine.GUILayoutUtility::Internal_MoveWindow_Injected", "UnityEngine.GUILayoutUtility::GetWindowsBounds_Injected", "UnityEngine.GUIUtility::get_hasModalWindow", "UnityEngine.GUIUtility::get_pixelsPerPoint", "UnityEngine.GUIUtility::get_guiDepth", "UnityEngine.GUIUtility::get_s_EditorScreenPointOffset_Injected", "UnityEngine.GUIUtility::set_s_EditorScreenPointOffset_Injected", "UnityEngine.GUIUtility::get_mouseUsed", "UnityEngine.GUIUtility::set_mouseUsed", "UnityEngine.GUIUtility::get_textFieldInput", "UnityEngine.GUIUtility::set_textFieldInput", "UnityEngine.GUIUtility::get_manualTex2SRGBEnabled", "UnityEngine.GUIUtility::set_manualTex2SRGBEnabled", "UnityEngine.GUIUtility::get_systemCopyBuffer", "UnityEngine.GUIUtility::set_systemCopyBuffer", "UnityEngine.GUIUtility::GetControlID_Injected", "UnityEngine.GUIUtility::BeginContainerFromOwner", "UnityEngine.GUIUtility::BeginContainer", "UnityEngine.GUIUtility::Internal_EndContainer", "UnityEngine.GUIUtility::GetPermanentControlID", "UnityEngine.GUIUtility::CheckForTabEvent", "UnityEngine.GUIUtility::SetKeyboardControlToFirstControlId", "UnityEngine.GUIUtility::SetKeyboardControlToLastControlId", "UnityEngine.GUIUtility::HasFocusableControls", "UnityEngine.GUIUtility::AlignRectToDevice_Injected", "UnityEngine.GUIUtility::Internal_MultiplyPoint_Injected", "UnityEngine.GUIUtility::GetChanged", "UnityEngine.GUIUtility::SetChanged", "UnityEngine.GUIUtility::SetDidGUIWindowsEatLastEvent", "UnityEngine.GUIUtility::Internal_GetHotControl", "UnityEngine.GUIUtility::Internal_GetKeyboardControl", "UnityEngine.GUIUtility::Internal_SetHotControl", "UnityEngine.GUIUtility::Internal_SetKeyboardControl", "UnityEngine.GUIUtility::Internal_GetDefaultSkin", "UnityEngine.GUIUtility::Internal_GetBuiltinSkin", "UnityEngine.GUIUtility::Internal_ExitGUI", "UnityEngine.GUIUtility::InternalWindowToScreenPoint_Injected", "UnityEngine.GUIUtility::InternalScreenToWindowPoint_Injected", "UnityEngine.ObjectGUIState::Internal_Create", "UnityEngine.ObjectGUIState::Internal_Destroy", "UnityEngine.Event::get_rawType", "UnityEngine.Event::get_mousePosition_Injected", "UnityEngine.Event::set_mousePosition_Injected", "UnityEngine.Event::get_delta_Injected", "UnityEngine.Event::set_delta_Injected", "UnityEngine.Event::get_button", "UnityEngine.Event::set_button", "UnityEngine.Event::get_modifiers", "UnityEngine.Event::set_modifiers", "UnityEngine.Event::get_pressure", "UnityEngine.Event::set_pressure", "UnityEngine.Event::get_clickCount", "UnityEngine.Event::set_clickCount", "UnityEngine.Event::get_character", "UnityEngine.Event::set_character", "UnityEngine.Event::get_keyCode", "UnityEngine.Event::set_keyCode", "UnityEngine.Event::get_displayIndex", "UnityEngine.Event::set_displayIndex", "UnityEngine.Event::get_type", "UnityEngine.Event::set_type", "UnityEngine.Event::get_commandName", "UnityEngine.Event::set_commandName", "UnityEngine.Event::Internal_Use", "UnityEngine.Event::Internal_Create", "UnityEngine.Event::Internal_Destroy", "UnityEngine.Event::Internal_Copy", "UnityEngine.Event::GetTypeForControl", "UnityEngine.Event::CopyFromPtr", "UnityEngine.Event::PopEvent", "UnityEngine.Event::GetEventCount", "UnityEngine.Event::Internal_SetNativeEvent", "UnityEngine.GUIDebugger::LogLayoutEntry_Injected", "UnityEngine.GUIDebugger::LogLayoutGroupEntry_Injected", "UnityEngine.GUIDebugger::LogLayoutEndGroup", "UnityEngine.GUIDebugger::LogBeginProperty_Injected", "UnityEngine.GUIDebugger::LogEndProperty", "UnityEngine.GUIDebugger::get_active", "UnityEngine.GUISettings::Internal_GetCursorFlashSpeed", "UnityEngine.GUIStyleState::get_background", "UnityEngine.GUIStyleState::set_background", "UnityEngine.GUIStyleState::get_textColor_Injected", "UnityEngine.GUIStyleState::set_textColor_Injected", "UnityEngine.GUIStyleState::Init", "UnityEngine.GUIStyleState::Cleanup", "UnityEngine.GUIStyle::get_name", "UnityEngine.GUIStyle::set_name", "UnityEngine.GUIStyle::get_font", "UnityEngine.GUIStyle::set_font", "UnityEngine.GUIStyle::get_imagePosition", "UnityEngine.GUIStyle::set_imagePosition", "UnityEngine.GUIStyle::get_alignment", "UnityEngine.GUIStyle::set_alignment", "UnityEngine.GUIStyle::get_wordWrap", "UnityEngine.GUIStyle::set_wordWrap", "UnityEngine.GUIStyle::get_clipping", "UnityEngine.GUIStyle::set_clipping", "UnityEngine.GUIStyle::get_contentOffset_Injected", "UnityEngine.GUIStyle::set_contentOffset_Injected", "UnityEngine.GUIStyle::get_fixedWidth", "UnityEngine.GUIStyle::set_fixedWidth", "UnityEngine.GUIStyle::get_fixedHeight", "UnityEngine.GUIStyle::set_fixedHeight", "UnityEngine.GUIStyle::get_stretchWidth", "UnityEngine.GUIStyle::set_stretchWidth", "UnityEngine.GUIStyle::get_stretchHeight", "UnityEngine.GUIStyle::set_stretchHeight", "UnityEngine.GUIStyle::get_fontSize", "UnityEngine.GUIStyle::set_fontSize", "UnityEngine.GUIStyle::get_fontStyle", "UnityEngine.GUIStyle::set_fontStyle", "UnityEngine.GUIStyle::get_richText", "UnityEngine.GUIStyle::set_richText", "UnityEngine.GUIStyle::get_clipOffset_Injected", "UnityEngine.GUIStyle::set_clipOffset_Injected", "UnityEngine.GUIStyle::get_Internal_clipOffset_Injected", "UnityEngine.GUIStyle::set_Internal_clipOffset_Injected", "UnityEngine.GUIStyle::Internal_Create", "UnityEngine.GUIStyle::Internal_Copy", "UnityEngine.GUIStyle::Internal_Destroy", "UnityEngine.GUIStyle::GetStyleStatePtr", "UnityEngine.GUIStyle::AssignStyleState", "UnityEngine.GUIStyle::GetRectOffsetPtr", "UnityEngine.GUIStyle::AssignRectOffset", "UnityEngine.GUIStyle::Internal_GetLineHeight", "UnityEngine.GUIStyle::Internal_Draw_Injected", "UnityEngine.GUIStyle::Internal_Draw2_Injected", "UnityEngine.GUIStyle::Internal_DrawCursor_Injected", "UnityEngine.GUIStyle::Internal_DrawWithTextSelection_Injected", "UnityEngine.GUIStyle::Internal_GetCursorPixelPosition_Injected", "UnityEngine.GUIStyle::Internal_GetCursorStringIndex_Injected", "UnityEngine.GUIStyle::Internal_GetNumCharactersThatFitWithinWidth", "UnityEngine.GUIStyle::Internal_CalcSize_Injected", "UnityEngine.GUIStyle::Internal_CalcSizeWithConstraints_Injected", "UnityEngine.GUIStyle::Internal_CalcHeight", "UnityEngine.GUIStyle::Internal_CalcMinMaxWidth_Injected", "UnityEngine.GUIStyle::SetMouseTooltip_Injected", "UnityEngine.GUIStyle::Internal_GetCursorFlashOffset", "UnityEngine.GUIStyle::SetDefaultFont", "UnityEngine.AssetBundle::returnMainAsset", "UnityEngine.AssetBundle::UnloadAllAssetBundles", "UnityEngine.AssetBundle::GetAllLoadedAssetBundles_Native", "UnityEngine.AssetBundle::LoadFromFileAsync_Internal", "UnityEngine.AssetBundle::LoadFromFile_Internal", "UnityEngine.AssetBundle::LoadFromMemoryAsync_Internal", "UnityEngine.AssetBundle::LoadFromMemory_Internal", "UnityEngine.AssetBundle::LoadFromStreamAsyncInternal", "UnityEngine.AssetBundle::LoadFromStreamInternal", "UnityEngine.AssetBundle::get_isStreamedSceneAssetBundle", "UnityEngine.AssetBundle::Contains", "UnityEngine.AssetBundle::LoadAsset_Internal", "UnityEngine.AssetBundle::LoadAssetAsync_Internal", "UnityEngine.AssetBundle::Unload", "UnityEngine.AssetBundle::GetAllAssetNames", "UnityEngine.AssetBundle::GetAllScenePaths", "UnityEngine.AssetBundle::LoadAssetWithSubAssets_Internal", "UnityEngine.AssetBundle::LoadAssetWithSubAssetsAsync_Internal", "UnityEngine.AssetBundle::RecompressAssetBundleAsync_Internal_Injected", "UnityEngine.AssetBundleCreateRequest::get_assetBundle", "UnityEngine.AssetBundleCreateRequest::SetEnableCompatibilityChecks", "UnityEngine.AssetBundleManifest::GetAllAssetBundles", "UnityEngine.AssetBundleManifest::GetAllAssetBundlesWithVariant", "UnityEngine.AssetBundleManifest::GetAssetBundleHash_Injected", "UnityEngine.AssetBundleManifest::GetDirectDependencies", "UnityEngine.AssetBundleManifest::GetAllDependencies", "UnityEngine.AssetBundleRecompressOperation::get_humanReadableResult", "UnityEngine.AssetBundleRecompressOperation::get_inputPath", "UnityEngine.AssetBundleRecompressOperation::get_outputPath", "UnityEngine.AssetBundleRecompressOperation::get_result", "UnityEngine.AssetBundleRecompressOperation::get_success", "UnityEngine.AssetBundleRequest::get_asset", "UnityEngine.AssetBundleRequest::get_allAssets", "UnityEngine.Experimental.AssetBundlePatching.AssetBundleUtility::PatchAssetBundles", "UnityEngine.CanvasGroup::get_alpha", "UnityEngine.CanvasGroup::set_alpha", "UnityEngine.CanvasGroup::get_interactable", "UnityEngine.CanvasGroup::set_interactable", "UnityEngine.CanvasGroup::get_blocksRaycasts", "UnityEngine.CanvasGroup::set_blocksRaycasts", "UnityEngine.CanvasGroup::get_ignoreParentGroups", "UnityEngine.CanvasGroup::set_ignoreParentGroups", "UnityEngine.CanvasRenderer::get_hasPopInstruction", "UnityEngine.CanvasRenderer::set_hasPopInstruction", "UnityEngine.CanvasRenderer::get_materialCount", "UnityEngine.CanvasRenderer::set_materialCount", "UnityEngine.CanvasRenderer::get_popMaterialCount", "UnityEngine.CanvasRenderer::set_popMaterialCount", "UnityEngine.CanvasRenderer::get_absoluteDepth", "UnityEngine.CanvasRenderer::get_hasMoved", "UnityEngine.CanvasRenderer::get_cullTransparentMesh", "UnityEngine.CanvasRenderer::set_cullTransparentMesh", "UnityEngine.CanvasRenderer::get_hasRectClipping", "UnityEngine.CanvasRenderer::get_relativeDepth", "UnityEngine.CanvasRenderer::get_cull", "UnityEngine.CanvasRenderer::set_cull", "UnityEngine.CanvasRenderer::SetColor_Injected", "UnityEngine.CanvasRenderer::GetColor_Injected", "UnityEngine.CanvasRenderer::EnableRectClipping_Injected", "UnityEngine.CanvasRenderer::DisableRectClipping", "UnityEngine.CanvasRenderer::SetMaterial", "UnityEngine.CanvasRenderer::GetMaterial", "UnityEngine.CanvasRenderer::SetPopMaterial", "UnityEngine.CanvasRenderer::GetPopMaterial", "UnityEngine.CanvasRenderer::SetTexture", "UnityEngine.CanvasRenderer::SetAlphaTexture", "UnityEngine.CanvasRenderer::SetMesh", "UnityEngine.CanvasRenderer::Clear", "UnityEngine.CanvasRenderer::GetInheritedAlpha", "UnityEngine.CanvasRenderer::SplitIndicesStreamsInternal", "UnityEngine.CanvasRenderer::SplitUIVertexStreamsInternal", "UnityEngine.CanvasRenderer::CreateUIVertexStreamInternal", "UnityEngine.RectTransformUtility::PixelAdjustPoint_Injected", "UnityEngine.RectTransformUtility::PixelAdjustRect_Injected", "UnityEngine.RectTransformUtility::PointInRectangle_Injected", "UnityEngine.Canvas::get_renderMode", "UnityEngine.Canvas::set_renderMode", "UnityEngine.Canvas::get_isRootCanvas", "UnityEngine.Canvas::get_pixelRect_Injected", "UnityEngine.Canvas::get_scaleFactor", "UnityEngine.Canvas::set_scaleFactor", "UnityEngine.Canvas::get_referencePixelsPerUnit", "UnityEngine.Canvas::set_referencePixelsPerUnit", "UnityEngine.Canvas::get_overridePixelPerfect", "UnityEngine.Canvas::set_overridePixelPerfect", "UnityEngine.Canvas::get_pixelPerfect", "UnityEngine.Canvas::set_pixelPerfect", "UnityEngine.Canvas::get_planeDistance", "UnityEngine.Canvas::set_planeDistance", "UnityEngine.Canvas::get_renderOrder", "UnityEngine.Canvas::get_overrideSorting", "UnityEngine.Canvas::set_overrideSorting", "UnityEngine.Canvas::get_sortingOrder", "UnityEngine.Canvas::set_sortingOrder", "UnityEngine.Canvas::get_targetDisplay", "UnityEngine.Canvas::set_targetDisplay", "UnityEngine.Canvas::get_sortingLayerID", "UnityEngine.Canvas::set_sortingLayerID", "UnityEngine.Canvas::get_cachedSortingLayerValue", "UnityEngine.Canvas::get_additionalShaderChannels", "UnityEngine.Canvas::set_additionalShaderChannels", "UnityEngine.Canvas::get_sortingLayerName", "UnityEngine.Canvas::set_sortingLayerName", "UnityEngine.Canvas::get_rootCanvas", "UnityEngine.Canvas::get_worldCamera", "UnityEngine.Canvas::set_worldCamera", "UnityEngine.Canvas::get_normalizedSortingGridSize", "UnityEngine.Canvas::set_normalizedSortingGridSize", "UnityEngine.Canvas::get_sortingGridNormalizedSize", "UnityEngine.Canvas::set_sortingGridNormalizedSize", "UnityEngine.Canvas::GetDefaultCanvasTextMaterial", "UnityEngine.Canvas::GetDefaultCanvasMaterial", "UnityEngine.Canvas::GetETC1SupportedCanvasMaterial", "UnityEngine.UISystemProfilerApi::BeginSample", "UnityEngine.UISystemProfilerApi::EndSample", "UnityEngine.UISystemProfilerApi::AddMarker", "UnityEngine.JsonUtility::ToJsonInternal", "UnityEngine.JsonUtility::FromJsonInternal", "relativePath", "propertyName", "UnityEngine.AnimationClip::Internal_CreateAnimationClip", "UnityEngine.AnimationClip::SampleAnimation", "UnityEngine.AnimationClip::get_length", "UnityEngine.AnimationClip::get_startTime", "UnityEngine.AnimationClip::get_stopTime", "UnityEngine.AnimationClip::get_frameRate", "UnityEngine.AnimationClip::set_frameRate", "UnityEngine.AnimationClip::SetCurve", "UnityEngine.AnimationClip::EnsureQuaternionContinuity", "UnityEngine.AnimationClip::ClearCurves", "UnityEngine.AnimationClip::get_wrapMode", "UnityEngine.AnimationClip::set_wrapMode", "UnityEngine.AnimationClip::get_localBounds_Injected", "UnityEngine.AnimationClip::set_localBounds_Injected", "UnityEngine.AnimationClip::get_legacy", "UnityEngine.AnimationClip::set_legacy", "UnityEngine.AnimationClip::get_humanMotion", "UnityEngine.AnimationClip::get_empty", "UnityEngine.AnimationClip::get_hasGenericRootTransform", "UnityEngine.AnimationClip::get_hasMotionFloatCurves", "UnityEngine.AnimationClip::get_hasMotionCurves", "UnityEngine.AnimationClip::get_hasRootCurves", "UnityEngine.AnimationClip::get_hasRootMotion", "UnityEngine.Animations.AnimationMixerPlayable::CreateHandleInternal_Injected", "UnityEngine.Animations.AnimationPlayableExtensions::SetAnimatedPropertiesInternal", "animator", "UnityEngine.Animations.AnimationPlayableGraphExtensions::InternalCreateAnimationOutput", "UnityEngine.Animations.AnimationPlayableGraphExtensions::InternalSyncUpdateAndTimeMode", "UnityEngine.Animations.AnimationPlayableGraphExtensions::InternalDestroyOutput", "UnityEngine.Animations.AnimationPlayableGraphExtensions::InternalAnimationOutputCount", "UnityEngine.Animations.AnimationPlayableGraphExtensions::InternalGetAnimationOutput", "UnityEngine.Animations.AnimationPosePlayable::CreateHandleInternal_Injected", "UnityEngine.Animations.AnimationPosePlayable::GetMustReadPreviousPoseInternal", "UnityEngine.Animations.AnimationPosePlayable::SetMustReadPreviousPoseInternal", "UnityEngine.Animations.AnimationPosePlayable::GetReadDefaultPoseInternal", "UnityEngine.Animations.AnimationPosePlayable::SetReadDefaultPoseInternal", "UnityEngine.Animations.AnimationPosePlayable::GetApplyFootIKInternal", "UnityEngine.Animations.AnimationPosePlayable::SetApplyFootIKInternal", "UnityEngine.Animations.AnimationRemoveScalePlayable::CreateHandleInternal_Injected", "UnityEngine.Experimental.Animations.AnimationScriptPlayable::CreateHandleInternal_Injected", "UnityEngine.Experimental.Animations.AnimationScriptPlayable::SetProcessInputsInternal_Injected", "UnityEngine.Experimental.Animations.AnimationScriptPlayable::GetProcessInputsInternal_Injected", "UnityEngine.AnimatorOverrideController::Internal_Create", "UnityEngine.AnimatorOverrideController::get_runtimeAnimatorController", "UnityEngine.AnimatorOverrideController::set_runtimeAnimatorController", "UnityEngine.AnimatorOverrideController::Internal_GetClipByName", "UnityEngine.AnimatorOverrideController::Internal_SetClipByName", "UnityEngine.AnimatorOverrideController::GetClip", "UnityEngine.AnimatorOverrideController::SetClip", "UnityEngine.AnimatorOverrideController::SendNotification", "UnityEngine.AnimatorOverrideController::GetOriginalClip", "UnityEngine.AnimatorOverrideController::GetOverrideClip", "UnityEngine.AnimatorOverrideController::get_overridesCount", "UnityEngine.AnimatorOverrideController::PerformOverrideClipListCleanup", "UnityEngine.Animations.AimConstraint::Internal_Create", "UnityEngine.Animations.AimConstraint::get_weight", "UnityEngine.Animations.AimConstraint::set_weight", "UnityEngine.Animations.AimConstraint::get_constraintActive", "UnityEngine.Animations.AimConstraint::set_constraintActive", "UnityEngine.Animations.AimConstraint::get_locked", "UnityEngine.Animations.AimConstraint::set_locked", "UnityEngine.Animations.AimConstraint::get_rotationAtRest_Injected", "UnityEngine.Animations.AimConstraint::set_rotationAtRest_Injected", "UnityEngine.Animations.AimConstraint::get_rotationOffset_Injected", "UnityEngine.Animations.AimConstraint::set_rotationOffset_Injected", "UnityEngine.Animations.AimConstraint::get_rotationAxis", "UnityEngine.Animations.AimConstraint::set_rotationAxis", "UnityEngine.Animations.AimConstraint::get_aimVector_Injected", "UnityEngine.Animations.AimConstraint::set_aimVector_Injected", "UnityEngine.Animations.AimConstraint::get_upVector_Injected", "UnityEngine.Animations.AimConstraint::set_upVector_Injected", "UnityEngine.Animations.AimConstraint::get_worldUpVector_Injected", "UnityEngine.Animations.AimConstraint::set_worldUpVector_Injected", "UnityEngine.Animations.AimConstraint::get_worldUpObject", "UnityEngine.Animations.AimConstraint::set_worldUpObject", "UnityEngine.Animations.AimConstraint::get_worldUpType", "UnityEngine.Animations.AimConstraint::set_worldUpType", "UnityEngine.Animations.AimConstraint::GetSourceCountInternal", "UnityEngine.Animations.AimConstraint::GetSources", "UnityEngine.Animations.AimConstraint::SetSourcesInternal", "UnityEngine.Animations.AimConstraint::AddSource_Injected", "UnityEngine.Animations.AimConstraint::RemoveSourceInternal", "UnityEngine.Animations.AimConstraint::GetSourceInternal_Injected", "UnityEngine.Animations.AimConstraint::SetSourceInternal_Injected", "UnityEngine.Animations.AnimationClipPlayable::CreateHandleInternal_Injected", "UnityEngine.Animations.AnimationClipPlayable::GetAnimationClipInternal", "UnityEngine.Animations.AnimationClipPlayable::GetApplyFootIKInternal", "UnityEngine.Animations.AnimationClipPlayable::SetApplyFootIKInternal", "UnityEngine.Animations.AnimationClipPlayable::GetApplyPlayableIKInternal", "UnityEngine.Animations.AnimationClipPlayable::SetApplyPlayableIKInternal", "UnityEngine.Animations.AnimationClipPlayable::GetRemoveStartOffsetInternal", "UnityEngine.Animations.AnimationClipPlayable::SetRemoveStartOffsetInternal", "UnityEngine.Animations.AnimationPlayableOutput::InternalGetTarget", "UnityEngine.Animations.AnimationPlayableOutput::InternalSetTarget", "UnityEngine.Experimental.Animations.TransformStreamHandle::ResolveInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::GetPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::SetPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::GetRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::SetRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::GetLocalPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::SetLocalPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::GetLocalRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::SetLocalRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::GetLocalScaleInternal_Injected", "UnityEngine.Experimental.Animations.TransformStreamHandle::SetLocalScaleInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::ResolveInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::GetFloatInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::SetFloatInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::GetIntInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::SetIntInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::GetBoolInternal_Injected", "UnityEngine.Experimental.Animations.PropertyStreamHandle::SetBoolInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::HasValidTransform_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::GetPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::SetPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::GetLocalPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::SetLocalPositionInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::GetRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::SetRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::GetLocalRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::SetLocalRotationInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::GetLocalScaleInternal_Injected", "UnityEngine.Experimental.Animations.TransformSceneHandle::SetLocalScaleInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::HasValidTransform_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::IsBound_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::ResolveInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::GetFloatInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::SetFloatInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::GetIntInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::SetIntInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::GetBoolInternal_Injected", "UnityEngine.Experimental.Animations.PropertySceneHandle::SetBoolInternal_Injected", "UnityEngine.AnimatorClipInfo::InstanceIDToAnimationClipPPtr", "UnityEngine.Animator::get_isOptimizable", "UnityEngine.Animator::get_isHuman", "UnityEngine.Animator::get_hasRootMotion", "UnityEngine.Animator::get_isRootPositionOrRotationControlledByCurves", "UnityEngine.Animator::get_humanScale", "UnityEngine.Animator::get_isInitialized", "UnityEngine.Animator::get_deltaPosition_Injected", "UnityEngine.Animator::get_deltaRotation_Injected", "UnityEngine.Animator::get_velocity_Injected", "UnityEngine.Animator::get_angularVelocity_Injected", "UnityEngine.Animator::get_rootPosition_Injected", "UnityEngine.Animator::set_rootPosition_Injected", "UnityEngine.Animator::get_rootRotation_Injected", "UnityEngine.Animator::set_rootRotation_Injected", "UnityEngine.Animator::get_applyRootMotion", "UnityEngine.Animator::set_applyRootMotion", "UnityEngine.Animator::get_linearVelocityBlending", "UnityEngine.Animator::set_linearVelocityBlending", "UnityEngine.Animator::get_updateMode", "UnityEngine.Animator::set_updateMode", "UnityEngine.Animator::get_hasTransformHierarchy", "UnityEngine.Animator::get_allowConstantClipSamplingOptimization", "UnityEngine.Animator::set_allowConstantClipSamplingOptimization", "UnityEngine.Animator::get_gravityWeight", "UnityEngine.Animator::get_bodyPositionInternal_Injected", "UnityEngine.Animator::set_bodyPositionInternal_Injected", "UnityEngine.Animator::get_bodyRotationInternal_Injected", "UnityEngine.Animator::set_bodyRotationInternal_Injected", "UnityEngine.Animator::GetGoalPosition_Injected", "UnityEngine.Animator::SetGoalPosition_Injected", "UnityEngine.Animator::GetGoalRotation_Injected", "UnityEngine.Animator::SetGoalRotation_Injected", "UnityEngine.Animator::GetGoalWeightPosition", "UnityEngine.Animator::SetGoalWeightPosition", "UnityEngine.Animator::GetGoalWeightRotation", "UnityEngine.Animator::SetGoalWeightRotation", "UnityEngine.Animator::GetHintPosition_Injected", "UnityEngine.Animator::SetHintPosition_Injected", "UnityEngine.Animator::GetHintWeightPosition", "UnityEngine.Animator::SetHintWeightPosition", "UnityEngine.Animator::SetLookAtPositionInternal_Injected", "UnityEngine.Animator::SetLookAtWeightInternal", "UnityEngine.Animator::SetBoneLocalRotationInternal_Injected", "UnityEngine.Animator::GetBehaviour", "UnityEngine.Animator::InternalGetBehaviours", "UnityEngine.Animator::InternalGetBehavioursByKey", "UnityEngine.Animator::get_stabilizeFeet", "UnityEngine.Animator::set_stabilizeFeet", "UnityEngine.Animator::get_layerCount", "UnityEngine.Animator::GetLayerName", "UnityEngine.Animator::GetLayerIndex", "UnityEngine.Animator::GetLayerWeight", "UnityEngine.Animator::SetLayerWeight", "UnityEngine.Animator::GetAnimatorStateInfo", "UnityEngine.Animator::GetAnimatorTransitionInfo", "UnityEngine.Animator::GetAnimatorClipInfoCount", "UnityEngine.Animator::GetCurrentAnimatorClipInfo", "UnityEngine.Animator::GetNextAnimatorClipInfo", "UnityEngine.Animator::GetAnimatorClipInfoInternal", "UnityEngine.Animator::GetAnimatorClipInfoInternalWinRT", "UnityEngine.Animator::IsInTransition", "UnityEngine.Animator::get_parameters", "UnityEngine.Animator::get_parameterCount", "UnityEngine.Animator::get_feetPivotActive", "UnityEngine.Animator::set_feetPivotActive", "UnityEngine.Animator::get_pivotWeight", "UnityEngine.Animator::get_pivotPosition_Injected", "UnityEngine.Animator::MatchTarget_Injected", "UnityEngine.Animator::InterruptMatchTarget", "UnityEngine.Animator::get_isMatchingTarget", "UnityEngine.Animator::get_speed", "UnityEngine.Animator::set_speed", "UnityEngine.Animator::CrossFadeInFixedTime", "UnityEngine.Animator::WriteDefaultValues", "UnityEngine.Animator::CrossFade", "UnityEngine.Animator::PlayInFixedTime", "UnityEngine.Animator::Play", "UnityEngine.Animator::SetTarget", "UnityEngine.Animator::get_targetPosition_Injected", "UnityEngine.Animator::get_targetRotation_Injected", "UnityEngine.Animator::IsBoneTransform", "UnityEngine.Animator::get_avatarRoot", "UnityEngine.Animator::GetBoneTransformInternal", "UnityEngine.Animator::get_cullingMode", "UnityEngine.Animator::set_cullingMode", "UnityEngine.Animator::StartPlayback", "UnityEngine.Animator::StopPlayback", "UnityEngine.Animator::get_playbackTime", "UnityEngine.Animator::set_playbackTime", "UnityEngine.Animator::StartRecording", "UnityEngine.Animator::StopRecording", "UnityEngine.Animator::GetRecorderStartTime", "UnityEngine.Animator::GetRecorderStopTime", "UnityEngine.Animator::get_recorderMode", "UnityEngine.Animator::get_runtimeAnimatorController", "UnityEngine.Animator::set_runtimeAnimatorController", "UnityEngine.Animator::get_hasBoundPlayables", "UnityEngine.Animator::ClearInternalControllerPlayable", "UnityEngine.Animator::HasState", "UnityEngine.Animator::StringToHash", "UnityEngine.Animator::get_avatar", "UnityEngine.Animator::set_avatar", "UnityEngine.Animator::GetStats", "UnityEngine.Animator::GetCurrentGraph", "UnityEngine.Animator::IsInIKPass", "UnityEngine.Animator::SetFloatString", "UnityEngine.Animator::SetFloatID", "UnityEngine.Animator::GetFloatString", "UnityEngine.Animator::GetFloatID", "UnityEngine.Animator::SetBoolString", "UnityEngine.Animator::SetBoolID", "UnityEngine.Animator::GetBoolString", "UnityEngine.Animator::GetBoolID", "UnityEngine.Animator::SetIntegerString", "UnityEngine.Animator::SetIntegerID", "UnityEngine.Animator::GetIntegerString", "UnityEngine.Animator::GetIntegerID", "UnityEngine.Animator::SetTriggerString", "UnityEngine.Animator::SetTriggerID", "UnityEngine.Animator::ResetTriggerString", "UnityEngine.Animator::ResetTriggerID", "UnityEngine.Animator::IsParameterControlledByCurveString", "UnityEngine.Animator::IsParameterControlledByCurveID", "UnityEngine.Animator::SetFloatStringDamp", "UnityEngine.Animator::SetFloatIDDamp", "UnityEngine.Animator::get_layersAffectMassCenter", "UnityEngine.Animator::set_layersAffectMassCenter", "UnityEngine.Animator::get_leftFeetBottomHeight", "UnityEngine.Animator::get_rightFeetBottomHeight", "UnityEngine.Animator::get_supportsOnAnimatorMove", "UnityEngine.Animator::OnUpdateModeChanged", "UnityEngine.Animator::OnCullingModeChanged", "UnityEngine.Animator::WriteDefaultPose", "UnityEngine.Animator::Update", "UnityEngine.Animator::Rebind", "UnityEngine.Animator::ApplyBuiltinRootMotion", "UnityEngine.Animator::EvaluateController", "UnityEngine.Animator::GetAnimatorStateName", "UnityEngine.Animator::ResolveHash", "UnityEngine.Animator::get_logWarnings", "UnityEngine.Animator::set_logWarnings", "UnityEngine.Animator::get_fireEvents", "UnityEngine.Animator::set_fireEvents", "UnityEngine.Animator::get_keepAnimatorControllerStateOnDisable", "UnityEngine.Animator::set_keepAnimatorControllerStateOnDisable", "rootMotionTransformName", "UnityEngine.AvatarBuilder::BuildHumanAvatarInternal_Injected", "UnityEngine.AvatarBuilder::BuildGenericAvatar", "UnityEngine.HumanPoseHandler::Internal_Create", "UnityEngine.HumanPoseHandler::Internal_Destroy", "UnityEngine.HumanPoseHandler::GetHumanPose", "UnityEngine.HumanPoseHandler::SetHumanPose", "UnityEngine.Experimental.Animations.AnimationHumanStream::GetHumanScale_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::GetFootHeight_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalResetToStancePose_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalPositionFromPose_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalRotationFromPose_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetBodyLocalPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetBodyLocalPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetBodyLocalRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetBodyLocalRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetBodyPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetBodyPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetBodyRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetBodyRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetMuscle_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetMuscle_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::GetLeftFootVelocity_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::GetRightFootVelocity_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalLocalPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetGoalLocalPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalLocalRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetGoalLocalRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetGoalPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetGoalRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetGoalWeightPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetGoalWeightRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalWeightPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetGoalWeightRotation_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetHintPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetHintPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetHintWeightPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalGetHintWeightPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetLookAtPosition_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetLookAtClampWeight_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetLookAtBodyWeight_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetLookAtHeadWeight_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSetLookAtEyesWeight_Injected", "UnityEngine.Experimental.Animations.AnimationHumanStream::InternalSolveIK_Injected", "UnityEngine.Animations.AnimationOffsetPlayable::CreateHandleInternal_Injected", "UnityEngine.Animations.AnimationOffsetPlayable::GetPositionInternal_Injected", "UnityEngine.Animations.AnimationOffsetPlayable::SetPositionInternal_Injected", "UnityEngine.Animations.AnimationOffsetPlayable::GetRotationInternal_Injected", "UnityEngine.Animations.AnimationOffsetPlayable::SetRotationInternal_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetDeltaTime_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetIsHumanStream_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetVelocity_Injected", "UnityEngine.Experimental.Animations.AnimationStream::SetVelocity_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetAngularVelocity_Injected", "UnityEngine.Experimental.Animations.AnimationStream::SetAngularVelocity_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetRootMotionPosition_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetRootMotionRotation_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetInputStreamCount_Injected", "UnityEngine.Experimental.Animations.AnimationStream::InternalGetInputStream_Injected", "UnityEngine.Experimental.Animations.AnimationStream::GetHumanStream_Injected", "UnityEngine.Experimental.Animations.AnimationStream::InternalReadSceneTransforms_Injected", "UnityEngine.Experimental.Animations.AnimationStream::InternalWriteSceneTransforms_Injected", "UnityEngine.AnimatorUtility::OptimizeTransformHierarchy", "UnityEngine.AnimatorUtility::DeoptimizeTransformHierarchy", "UnityEngine.HumanTrait::get_MuscleCount", "UnityEngine.HumanTrait::GetBoneIndexFromMono", "UnityEngine.HumanTrait::GetBoneIndexToMono", "UnityEngine.HumanTrait::get_MuscleName", "UnityEngine.HumanTrait::get_BoneCount", "UnityEngine.HumanTrait::get_BoneName", "UnityEngine.HumanTrait::Internal_MuscleFromBone", "UnityEngine.HumanTrait::Internal_BoneFromMuscle", "UnityEngine.HumanTrait::Internal_RequiredBone", "UnityEngine.HumanTrait::get_RequiredBoneCount", "UnityEngine.HumanTrait::GetMuscleDefaultMin", "UnityEngine.HumanTrait::GetMuscleDefaultMax", "UnityEngine.HumanTrait::Internal_GetBoneHierarchyMass", "UnityEngine.HumanTrait::Internal_GetParent", "UnityEngine.Animations.AnimationLayerMixerPlayable::CreateHandleInternal_Injected", "UnityEngine.Animations.AnimationLayerMixerPlayable::IsLayerAdditiveInternal", "UnityEngine.Animations.AnimationLayerMixerPlayable::SetLayerAdditiveInternal", "UnityEngine.Animations.AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal", "UnityEngine.Animations.AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected", "UnityEngine.Animations.AnimationMotionXToDeltaPlayable::IsAbsoluteMotionInternal", "UnityEngine.Animations.AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal", "UnityEngine.Avatar::get_isValid", "UnityEngine.Avatar::get_isHuman", "UnityEngine.Avatar::SetMuscleMinMax", "UnityEngine.Avatar::SetParameter", "UnityEngine.Avatar::Internal_GetAxisLength", "UnityEngine.Avatar::Internal_GetPreRotation_Injected", "UnityEngine.Avatar::Internal_GetPostRotation_Injected", "UnityEngine.Avatar::Internal_GetZYPostQ_Injected", "UnityEngine.Avatar::Internal_GetZYRoll_Injected", "UnityEngine.Avatar::Internal_GetLimitSign_Injected", "UnityEngine.AvatarMask::Internal_Create", "UnityEngine.AvatarMask::GetHumanoidBodyPartActive", "UnityEngine.AvatarMask::SetHumanoidBodyPartActive", "UnityEngine.AvatarMask::get_transformCount", "UnityEngine.AvatarMask::set_transformCount", "UnityEngine.AvatarMask::AddTransformPath", "UnityEngine.AvatarMask::RemoveTransformPath", "UnityEngine.AvatarMask::GetTransformPath", "UnityEngine.AvatarMask::SetTransformPath", "UnityEngine.AvatarMask::GetTransformWeight", "UnityEngine.AvatarMask::SetTransformWeight", "UnityEngine.AvatarMask::get_hasFeetIK", "muscleHandles", "UnityEngine.Experimental.Animations.MuscleHandle::GetMuscleHandles", "UnityEngine.Experimental.Animations.MuscleHandle::GetName_Injected", "UnityEngine.Experimental.Animations.MuscleHandle::GetMuscleHandleCount", "UnityEngine.Animations.ParentConstraint::Internal_Create", "UnityEngine.Animations.ParentConstraint::get_weight", "UnityEngine.Animations.ParentConstraint::set_weight", "UnityEngine.Animations.ParentConstraint::get_constraintActive", "UnityEngine.Animations.ParentConstraint::set_constraintActive", "UnityEngine.Animations.ParentConstraint::get_locked", "UnityEngine.Animations.ParentConstraint::set_locked", "UnityEngine.Animations.ParentConstraint::GetSourceCountInternal", "UnityEngine.Animations.ParentConstraint::get_translationAtRest_Injected", "UnityEngine.Animations.ParentConstraint::set_translationAtRest_Injected", "UnityEngine.Animations.ParentConstraint::get_rotationAtRest_Injected", "UnityEngine.Animations.ParentConstraint::set_rotationAtRest_Injected", "UnityEngine.Animations.ParentConstraint::get_translationOffsets", "UnityEngine.Animations.ParentConstraint::set_translationOffsets", "UnityEngine.Animations.ParentConstraint::get_rotationOffsets", "UnityEngine.Animations.ParentConstraint::set_rotationOffsets", "UnityEngine.Animations.ParentConstraint::get_translationAxis", "UnityEngine.Animations.ParentConstraint::set_translationAxis", "UnityEngine.Animations.ParentConstraint::get_rotationAxis", "UnityEngine.Animations.ParentConstraint::set_rotationAxis", "UnityEngine.Animations.ParentConstraint::GetTranslationOffsetInternal_Injected", "UnityEngine.Animations.ParentConstraint::SetTranslationOffsetInternal_Injected", "UnityEngine.Animations.ParentConstraint::GetRotationOffsetInternal_Injected", "UnityEngine.Animations.ParentConstraint::SetRotationOffsetInternal_Injected", "UnityEngine.Animations.ParentConstraint::GetSources", "UnityEngine.Animations.ParentConstraint::SetSourcesInternal", "UnityEngine.Animations.ParentConstraint::AddSource_Injected", "UnityEngine.Animations.ParentConstraint::RemoveSourceInternal", "UnityEngine.Animations.ParentConstraint::GetSourceInternal_Injected", "UnityEngine.Animations.ParentConstraint::SetSourceInternal_Injected", "UnityEngine.AnimationModule.dll", "UnityEngine.Experimental.Animations", "MuscleHandle", "Failed to find default skin in editor resources!", "_GUIClipTexture", "Hidden/Internal-GUITextureBlit", "Hidden/Internal-GUITextureClip", "Hidden/Internal-GUITextureClipText", "Couldn't load default font or font material!", "Ignoring invalid matrix assinged to GUI.matrix - the matrix needs to be invertible. Did you scale by 0 on Z-axis?", "Invalid ParentClips stack popping", "GUI Error: You are pushing more GUIClips than you are popping. Make sure they are balanced.", "GUIContent is null. Use GUIContent.none.", "GUI Error: You called GUI.Window inside a another window's function. Ensure to call it in a OnGUI code path.", "You cannot show two modal windows at once", "./Modules/IMGUI/GUIWindows.cpp", "Attempting to show modal windows at once; the newer windows will not be modal", "Dragwindow can only be called within a window callback", "<no name>", "CRC Mismatch. Provided %x, calculated %x from data. Will not load AssetBundle '%s'", "Cancelled loading AssetBundle '%s'.", "AssetBundle '%s' has invalid crc!", "Failed to initialize cache for the AssetBundle '%s'.", "The '%s' file is not a valid AssetBundle.", "The AssetBundle '%s' can't be loaded because it doesn't have serialized data.", "The AssetBundle '%s' can't be loaded because it was not built with the right version or build target.", "The AssetBundle '%s' can't be loaded because another AssetBundle with the same files is already loaded.", "Failed to read data for the AssetBundle '%s'.", "Failed to decompress data for the AssetBundle '%s'.", "Failed to delete the target of a Recompression operation '%s' ahead of swapping temp file (it may be locked or in use).", "The AssetBundle '%s' can't be loaded because of internal error.", "__data", "UnityAssetBundle", "Couldn't remove existing cached file '%s'.", "Not enough space in cache to write file '%s'.", "Couldn't create temporary cache directory '%s'!", "Couldn't create cache folder '%s' when caching AssetBundle '%s'.", "Couldn't move cache data '%s' into place '%s' when caching AssetBundle '%s'.", "Couldn't write cache header file when caching AssetBundle '%s'.", "AssetBundleManager", "Scene '%s' from AssetBundle '%s' is already registered with another AssetBundle '%s'.", "Asset bundle was already unloaded.", "BuildPlayer-", "sharedAssets", "AssetBundle with name \"%s\" doesn't exist in the AssetBundleManifest.", "AssetBundleManifest", "AssetBundleNames", "AssetBundleInfos", "AssetBundleInfo", "AssetBundleHash", "AssetBundleDependencies", "archive:/", "- %s\n", "This method cannot be used on a streamed scene AssetBundle.", "IO.Stream", "Resource file has already been unloaded.", "CustomAssetBundle", "The selected Compression Method %d cannot be used for Recompression", "Object at local file identifier %d in asset bundle with internal name '%s' was of type '%s', but in the patch asset bundle is of type '%s'", "Could not find MonoScript for MonoBehavior or ScriptableObject at local file identifier %d in asset bundle with internal name '%s'. Expected MonoScript of type '%s'", "Incorrect number of patch bundles. %d asset bundles were provided, but %d patch bundles were", "Bundle at index %d has internal name '%s', but patch bundle has internal name '%s'", "The AssetBundle '%s' could not be loaded because it is not compatible with this newer version of the Unity runtime. Rebuild the AssetBundle to fix this error.", "The AssetBundle '%s' could not be loaded because it references scripts that are not compatible with the currently loaded ones. Rebuild the AssetBundle to fix this error.", "The AssetBundle '%s' could not be loaded because it contains run-time classes of incompatible version. Rebuild the AssetBundle to fix this error.", "m_MainAsset", "m_PreloadTable", "m_RuntimeCompatibility", "m_AssetBundleName", "m_IsStreamedSceneAssetBundle", "m_PathFlags", "m_SceneHashes", "AssetInfo", "preloadIndex", "preloadSize", "UI/Default", "Default UI Material", "Hidden/UI/Overdraw", "UI Overdraw Material", "UI/DefaultETC1", "ETC1 Supported UI Material", "UNITY_UI_CLIP_RECT", "gTransformGlobalTRSChangeSystem", "gSiblingHierarchyChangeSystem", "gParentHierarchyChangeSystem", "Mesh '%s' has more than the %d submeshes. Extra submeshes will be ignored.", "gCanvasRendererTransformGlobalTRSChangeSystem", "gCanvasRendererParentHierarchyChangeSystem", "gCanvasRendererSiblingHierarchyChangeSystem", "Failed setting material. Index is out of bounds.", "CanvasRenderer", "m_Camera", "m_PlaneDistance", "m_PixelPerfect", "m_ReceivesEvents", "m_OverrideSorting", "m_OverridePixelPerfect", "m_SortingBucketNormalizedSize", "m_AdditionalShaderChannelsFlag", "PPtr<Camera>", "m_CullTransparentMesh", "OnCanvasGroupChanged", "CanvasGroup", "m_Alpha", "m_Interactable", "m_BlocksRaycasts", "m_IgnoreParentGroups", "_TextureSampleAdd", "_UseClipRect", "_ClipRect", "CanvasBatchIntermediateRenderer", "unity_GUIZTestMode", "A Canvas named \"%s\" with a render mode of ScreenSpaceOverlay is being used while VR is also enabled. This Canvas will continue to incur a rendering cost, but will not be visible while in VR. Is this intentional?", "A Canvas with a render mode of ScreenSpaceOverlay is being used while VR is also enabled. This Canvas will continue to incur a rendering cost, but will not be visible while in VR. Is this intentional?", "JSON parse error: %s", "JSON must represent an object type.", "The document is empty.", "The document root must not follow by other values.", "Invalid value.", "Missing a name for object member.", "Missing a colon after a name of object member.", "Missing a comma or '}' after an object member.", "Missing a comma or ']' after an array element.", "Incorrect hex digit after \\u escape in string.", "The surrogate pair in string is invalid.", "Invalid escape character in string.", "Missing a closing quotation mark in string.", "Invalid encoding in string.", "Number too big to be stored in double.", "Miss fraction part in number.", "Miss exponent in number.", "Terminate parsing due to Handler error.", "Unspecific syntax error.", "Unexpected node type.", "instanceID", "m_AvatarSkeleton", "m_SkeletonPose", "m_AvatarSkeletonPose", "m_DefaultPose", "m_SkeletonNameIDArray", "m_Human", "m_HumanSkeletonIndexArray", "m_HumanSkeletonReverseIndexArray", "m_RootMotionBoneIndex", "m_RootMotionBoneX", "m_RootMotionSkeleton", "m_RootMotionSkeletonPose", "m_RootMotionSkeletonIndexArray", "m_AvatarX", "m_LeftFootX", "m_RightFootX", "m_PivotWeight", "m_FirstEval", "m_SkeletonPoseOutputReady", "m_Node", "m_ID", "m_AxesArray", "m_ParentId", "m_AxesId", "m_PreQ", "m_PostQ", "m_Sgn", "m_Limit", "m_Length", "m_Min", "m_Max", "m_LeftHand", "m_RightHand", "m_HumanBoneIndex", "m_HumanBoneMass", "m_ArmTwist", "m_ForeArmTwist", "m_UpperLegTwist", "m_LegTwist", "m_ArmStretch", "m_LegStretch", "m_FeetSpacing", "m_HasLeftHand", "m_HasRightHand", "m_HasTDoF", "m_HandBoneIndex", "ControllerConstant", "m_HumanLayerCount", "m_LayerCount", "m_HumanLayerArray", "m_LayerArray", "LayerConstant", "m_StateMachineMotionSetIndex", "m_StateMachineSynchronizedLayerIndex", "m_StateMachineMemory", "m_LayerWeights", "m_InPlayback", "m_SynchronizedLayerAutoWeightArray", "m_CurrentStateIndex", "m_NextStateIndex", "m_ExitStateIndex", "m_InterruptedStateIndex", "m_TransitionIndex", "m_TransitionSourceStateIndex", "m_TransitionType", "m_CurrentStatePreviousTime", "m_NextStatePreviousTime", "m_InterruptedStatePreviousTime", "m_ExitStatePreviousTime", "m_CurrentStateDuration", "m_NextStateDuration", "m_NextStateBaseDuration", "m_ExitStateDuration", "m_InterruptedStateDuration", "m_CurrentStateSpeedModifier", "m_NextStateSpeedModifier", "m_ExitStateSpeedModifier", "m_InterruptedStateSpeedModifier", "m_TransitionStartTime", "m_TransitionTime", "m_TransitionDuration", "m_TransitionOffset", "m_InInterruptedTransition", "m_InTransition", "m_InDynamicTransition", "m_ActiveGotoState", "m_FixedTransition", "m_CleanAfterTransition", "m_ResetPlayableGraph", "ValueArray", "m_PositionValues", "m_QuaternionValues", "m_ScaleValues", "m_FloatValues", "m_IntValues", "m_BoolValues", "The script class couldn't be found", "' for property ", "' because it is not a child Transform in the Animator hierarchy.", "' because the avatar is invalid. Please assign a valid Avatar or create one with AvatarBuilder.", "An animator Reset was caused during %s::Awake. This will lead to undefined behaviour", "The Animator Controller (%s) you have used is not valid. Animations will not play", "Invalid Layer Index '%d'", "Hash %d", "Parameter type '%s' does not match.", "Parameter '%s' does not exist.", "Animator has not been initialized.", "Parameter '%s' is controlled by a curve.", "Animator.GotoState: State could not be found", "Animator.GotoState: Cannot find statemachine", "Calling Animator.GotoState on Synchronize layer", "m_Weight", "m_AffectRotationX", "m_AffectRotationY", "m_AffectRotationZ", "m_WorldUpObject", "sourceTransform", "m_RotationAtRest", "m_RotationOffset", "m_Roll", "m_UseUpObject", "m_IsContraintActive", "m_Sources", "m_TranslationAtRest", "m_TranslationOffsets", "m_RotationOffsets", "m_AffectTranslationX", "m_AffectTranslationY", "m_AffectTranslationZ", "m_ScaleAtRest", "m_ScaleOffset", "m_AffectScalingX", "m_AffectScalingY", "m_AffectScalingZ", "m_Sources.Array.data[", "LookAtConstraint", "ParentConstraint", "RotationConstraint", "ScaleConstraint", "ConstraintSource", "m_RestTranslation.x", "m_RestTranslation.y", "m_RestTranslation.z", "m_TranslationOffset.x", "m_TranslationOffset.y", "m_TranslationOffset.z", "m_RestRotation.x", "m_RestRotation.y", "m_RestRotation.z", "m_RotationOffset.x", "m_RotationOffset.y", "m_RotationOffset.z", "m_ScaleAtRest.x", "m_ScaleAtRest.y", "m_ScaleAtRest.z", "m_ScalingOffset.x", "m_ScalingOffset.y", "m_ScalingOffset.z", "m_TranslationOffsets.Array.data[", "m_RotationOffsets.Array.data[", "m_AimVector", "m_UpVector", "m_WorldUpVector", "m_UpType", "m_TranslationOffset", "AimConstraint", "IConstraint", "PositionConstraint", "OnDidModifyAnimatorController", "OnDidModifyOverrideClip", "GravityWeight", "RuntimeAnimatorController", "Could not record Animator. Frame allocation has failed.", "Left ", "Right ", "Unknow Message ID: %x", "functionName", "objectReferenceParameter", "floatParameter", "intParameter", "messageOptions", "Failed to call AnimationEvent %s of class %s.\nThe function must have either 0 or 1 parameters and the parameter can only be: string, float, int, enum, Object and AnimationEvent.", "Can't get DefaultFloat for a Parameter that is not of type AnimatorControllerParameterTypeFloat", "Can't set DefaultFloat for a Parameter that is not of type AnimatorControllerParameterTypeFloat", "Can't get DefaultInt for a Parameter that is not of type AnimatorControllerParameterTypeInt", "Can't set DefaultInt for a Parameter that is not of type AnimatorControllerParameterTypeInt", "Can't get DefaultBool for a Parameter that is not of type AnimatorControllerParameterTypeBool or AnimatorControllerParameterTypeTrigger", "Can't set DefaultBool for a Parameter that is not of type AnimatorControllerParameterTypeBool or AnimatorControllerParameterTypeTrigger", "m_DefaultFloat", "m_DefaultInt", "m_DefaultBool", "m_Controller", "PPtr<AnimatorController>", "The animation state %s could not be played because it is not attached to the animation component!\nYou have to provide an animation state that is attached to the same animation component.", "Default clip could not be found in attached animations list.", "The AnimationClip '%s' used by the Animation component '%s' must be marked as Legacy.", " - Queued Clone", "m_PlayFixedFrameRate", "m_AnimatePhysics", "m_AnimateIfVisible", "m_AnimateOnlyIfVisible", "Unknown wrapMode", "RemoveMixingTransform couldn't find transform '%s' in a list of mixing transforms. You can only remove transforms that have been added through AddMixingTransform", "Non-Legacy animations cannot be sampled outside the Editor without an Animator. If you want to sample this clip outside the Editor, add an Animator Component to this GameObject", "AvatarBuilder '%s': %s", "No human bone found. Ensure both rig type match", "Required human bone '%s' not found", "Found duplicate human bone '%s' with transform '%s' and '%s'", "Found duplicate transform '%s' for human bone '%s' and '%s'", "Transform '%s' for human bone '%s' not found", "Ambiguous Transform '%s' and '%s' found in hierarchy for human bone '%s'. Transform name mapped to a human bone must be unique.", "Hips bone '%s' must have a parent", "Hips bone parent '%s' must be included in the HumanDescription Skeleton", "Transform '%s' is not an ancestor of '%s'", "Transform '%s' parent '%s' must be included in the HumanDescription Skeleton", "Transform '%s' not found in HumanDescription.", "Parent for '%s' differs from one found in HumanDescription. '%s' was found instead of '%s'.", "Transform '%s' must be the top most parent, found '%s'.", "Cannot find root motion transform '%s'.", "\t'%s' : position error = %f mm\n", "\t'%s' : rotation error = %f deg\n", "AvatarMask", "TransformMaskElement", "Invalid BodyPart Index", "Invalid Transform Index", "m_Animations", "m_PlayAutomatically", "m_CullingType", "PPtr<AnimationClip>", "m_Mask", "OnStateExit", "OnStateUpdate", "OnStateMove", "OnStateIK", "OnStateMachineEnter", "OnStateMachineExit", "Could not set Runtime Animator Controller. The controller %s is an AnimatorOverrideController with no AnimatorController to override.", "%s.Animator", "AnimatorOuput", "Clip Count: %d\n", "Curves Pos: %d Quat: %d Euler: %d Scale: %d Muscles: %d Generic: %d PPtr: %d\n", "Curves Count: %d Constant: %d (%.1f%%) Dense: %d (%.1f%%) Stream: %d (%.1f%%)\n", "Instance memory: ", "Cannot nest AnimatorOverrideController '%s' with '%s'.", "no animated pose. thread failure.", "m_Clips", "AnimatorOverrideController", "m_CullingMode", "m_ApplyRootMotion", "m_LinearVelocityBlending", "m_HasTransformHierarchy", "m_AllowConstantClipSamplingOptimization", "m_KeepAnimatorControllerStateOnDisable", "PPtr<Avatar>", "PPtr<RuntimeAnimatorController>", "AnimationClipOverride", "m_OriginalClip", "m_OverrideClip", "AnimationClipPlayable", "AnimationLayerMixerPlayable", "AnimationMixerPlayable", "AnimationMotionXToDeltaPlayable", "AnimationOffsetPlayable", "AnimationPlayableOutput", "AnimationPosePlayable", "AnimationRemoveScalePlayable", "AnimatorControllerPlayable", "AnimationState", "AnimatorControllerParameter", "AnimationHumanStream", "AnimationScriptPlayable", "AnimationStream", "HumanBone", "SharedBetweenAnimatorsAttribute", "SkeletonBone", "StateMachineBehaviour", "UnityEngine.XRModule.dll", "UnityEngine.Experimental", "IntegratedSubsystem", "IntegratedSubsystem`1", "IntegratedSubsystemDescriptor", "IntegratedSubsystemDescriptor`1", "Internal_SubsystemDescriptors", "Internal_SubsystemInstances", "UnityEngine.Experimental.XR", "BoundedPlane", "MeshChangeState", "MeshGenerationResult", "MeshGenerationStatus", "MeshInfo", "MeshVertexAttributes", "PlaneAlignment", "TrackableId", "TrackableType", "TrackingState", "XRCameraSubsystem", "XRCameraSubsystemDescriptor", "XRDepthSubsystem", "XRDepthSubsystemDescriptor", "XRDisplaySubsystem", "XRDisplaySubsystemDescriptor", "XRExampleSubsystem", "XRExampleSubsystemDescriptor", "XRInputSubsystem", "XRInputSubsystemDescriptor", "XRMeshSubsystem", "XRMeshSubsystemDescriptor", "XRPlaneSubsystem", "XRPlaneSubsystemDescriptor", "XRRaycastHit", "XRRaycastSubsystem", "XRRaycastSubsystemDescriptor", "XRReferencePointSubsystem", "XRReferencePointSubsystemDescriptor", "XRSessionSubsystem", "XRSessionSubsystemDescriptor", "InputTracking", "XRNodeState", "OnInvalidateOverrideController", "::Scripting::UnityEngine::AnimationEventProxy", "::Scripting::UnityEngine::Animations::AimConstraintProxy", "::Scripting::UnityEngine::Animations::AnimationClipPlayableProxy", "::Scripting::UnityEngine::Animations::AnimationLayerMixerPlayableProxy", "::Scripting::UnityEngine::Animations::AnimationMixerPlayableProxy", "::Scripting::UnityEngine::Animations::AnimationMotionXToDeltaPlayableProxy", "::Scripting::UnityEngine::Animations::AnimationOffsetPlayableProxy", "::Scripting::UnityEngine::Animations::AnimationPlayableOutputProxy", "::Scripting::UnityEngine::Animations::AnimationPosePlayableProxy", "::Scripting::UnityEngine::Animations::AnimationRemoveScalePlayableProxy", "::Scripting::UnityEngine::Animations::AnimatorControllerPlayableProxy", "::Scripting::UnityEngine::Animations::ConstraintSourceProxy", "::Scripting::UnityEngine::Animations::LookAtConstraintProxy", "::Scripting::UnityEngine::Animations::ParentConstraintProxy", "::Scripting::UnityEngine::Animations::PositionConstraintProxy", "::Scripting::UnityEngine::Animations::RotationConstraintProxy", "::Scripting::UnityEngine::Animations::ScaleConstraintProxy", "::Scripting::UnityEngine::AnimationStateProxy", "::Scripting::UnityEngine::AnimatorProxy", "::Scripting::UnityEngine::AnimatorClipInfoProxy", "::Scripting::UnityEngine::AnimatorControllerParameterProxy", "::Scripting::UnityEngine::RuntimeAnimatorControllerProxy", "::Scripting::UnityEngine::AnimatorOverrideControllerProxy", "::Scripting::UnityEngine::AnimatorStateInfoProxy", "::Scripting::UnityEngine::AnimatorTransitionInfoProxy", "::Scripting::UnityEngine::AvatarProxy", "::Scripting::UnityEngine::AvatarMaskProxy", "::Scripting::UnityEngine::Experimental::Animations::AnimationHumanStreamProxy", "::Scripting::UnityEngine::Experimental::Animations::AnimationScriptPlayableProxy", "::Scripting::UnityEngine::Experimental::Animations::AnimationStreamProxy", "::Scripting::UnityEngine::HumanBoneProxy", "::Scripting::UnityEngine::SharedBetweenAnimatorsAttributeProxy", "::Scripting::UnityEngine::SkeletonBoneProxy", "::Scripting::UnityEngine::StateMachineBehaviourProxy", "Internal_AddDescriptor", "Internal_ClearManagedDescriptors", "Internal_InitializeManagedDescriptor", "Internal_ClearManagedInstances", "Internal_InitializeManagedInstance", "Internal_RemoveInstanceByPtr", "InvokeFrameReceivedEvent", "InvokePointCloudUpdatedEvent", "InvokeMeshReadyDelegate", "InvokePlaneAddedEvent", "InvokePlaneRemovedEvent", "InvokePlaneUpdatedEvent", "InvokeReferencePointUpdatedEvent", "InvokeTrackingStateChangedEvent", "InvokeTrackingEvent", "::Scripting::UnityEngine::Experimental::IntegratedSubsystemProxy", "::Scripting::UnityEngine::Experimental::IntegratedSubsystem_1Proxy", "::Scripting::UnityEngine::Experimental::IntegratedSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::IntegratedSubsystemDescriptor_1Proxy", "::Scripting::UnityEngine::Experimental::Internal_SubsystemDescriptorsProxy", "::Scripting::UnityEngine::Experimental::Internal_SubsystemInstancesProxy", "::Scripting::UnityEngine::Experimental::XR::BoundedPlaneProxy", "::Scripting::UnityEngine::Experimental::XR::MeshChangeStateProxy", "::Scripting::UnityEngine::Experimental::XR::MeshGenerationResultProxy", "::Scripting::UnityEngine::Experimental::XR::MeshGenerationStatusProxy", "::Scripting::UnityEngine::Experimental::XR::MeshInfoProxy", "::Scripting::UnityEngine::Experimental::XR::MeshVertexAttributesProxy", "::Scripting::UnityEngine::Experimental::XR::PlaneAlignmentProxy", "::Scripting::UnityEngine::Experimental::XR::ReferencePointProxy", "::Scripting::UnityEngine::Experimental::XR::TrackableIdProxy", "::Scripting::UnityEngine::Experimental::XR::TrackableTypeProxy", "::Scripting::UnityEngine::Experimental::XR::TrackingStateProxy", "::Scripting::UnityEngine::Experimental::XR::XRCameraSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRCameraSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRDepthSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRDepthSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRDisplaySubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRDisplaySubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRExampleSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRExampleSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRInputSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRInputSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRMeshSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRMeshSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRPlaneSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRPlaneSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRRaycastHitProxy", "::Scripting::UnityEngine::Experimental::XR::XRRaycastSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRRaycastSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRReferencePointSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRReferencePointSubsystemDescriptorProxy", "::Scripting::UnityEngine::Experimental::XR::XRSessionSubsystemProxy", "::Scripting::UnityEngine::Experimental::XR::XRSessionSubsystemDescriptorProxy", "::Scripting::UnityEngine::XR::InputDeviceProxy", "::Scripting::UnityEngine::XR::InputTrackingProxy", "::Scripting::UnityEngine::XR::XRNodeStateProxy", "UnityEngine.AIModule.dll", "NavMesh", "NavMeshBuildSource", "NavMeshTriangulation", "UnityEngine.AssetBundleModule.dll", "AssetBundleCreateRequest", "AssetBundleRecompressOperation", "AssetBundleRequest", "BuildCompression", "UnityEngine.ClothModule.dll", "ClothSkinningCoefficient", "ClothSphereColliderPair", "UnityEngine.InputModule.dll", "UnityEngineInternal.Input", "NativeInputSystem", "Internal_CallOnNavMeshPreUpdate", "::Scripting::UnityEngine::AI::NavMeshProxy", "::Scripting::UnityEngine::AI::NavMeshBuildSourceProxy", "::Scripting::UnityEngine::AI::NavMeshTriangulationProxy", "::Scripting::UnityEngine::AssetBundleCreateRequestProxy", "::Scripting::UnityEngine::AssetBundleRecompressOperationProxy", "::Scripting::UnityEngine::AssetBundleRequestProxy", "::Scripting::UnityEngine::BuildCompressionProxy", "::Scripting::UnityEngine::ClothSkinningCoefficientProxy", "::Scripting::UnityEngine::ClothSphereColliderPairProxy", "NotifyBeforeUpdate", "NotifyDeviceDiscovered", "NotifyUpdate", "::Scripting::UnityEngineInternal::Input::NativeInputSystemProxy", "Unity.Collections", "Unity.Collections.LowLevel.Unsafe", "NativeContainerAttribute", "NativeContainerIsAtomicWriteOnlyAttribute", "NativeContainerIsReadOnlyAttribute", "NativeContainerNeedsThreadIndexAttribute", "NativeContainerSupportsDeallocateOnJobCompletionAttribute", "NativeContainerSupportsDeferredConvertListToArray", "NativeContainerSupportsMinMaxWriteRestrictionAttribute", "NativeDisableContainerSafetyRestrictionAttribute", "NativeDisableUnsafePtrRestrictionAttribute", "NativeSetClassTypeToNullOnScheduleAttribute", "NativeSetThreadIndexAttribute", "NativeDisableParallelForRestrictionAttribute", "NativeFixedLengthAttribute", "NativeMatchesParallelForLengthAttribute", "Unity.Profiling", "ProfilerMarker", "_AndroidJNIHelper", "UnityEngine.Android", "AssemblyIsEditorAssembly", "YieldInstruction", "AttributeHelperEngine", "m_CachedPtr", "CachedAssetBundle", "ClassLibraryInitializer", "Color32", "ComputeBuffer", "CullingGroup", "CustomRenderTextureUpdateZone", "DefaultExecutionOrder", "EnumInfo", "UnityEngine.Events", "UnityEventBase", "UnityEvent", "UnityEvent`1", "UnityEvent`2", "UnityEvent`3", "UnityEvent`4", "ExcludeFromObjectFactoryAttribute", "ExcludeFromPresetAttribute", "ExecuteAlways", "ExecuteInEditMode", "UnityEngine.Experimental.GlobalIllumination", "LightDataGI", "UnityEngine.Experimental.Playables", "TextureMixerPlayable", "TexturePlayableOutput", "UnityEngine.Experimental.PlayerLoop", "Initialization", "PostLateUpdate", "PreLateUpdate", "UnityEngine.Experimental.Rendering", "BuiltinRuntimeReflectionSystem", "CameraProperties", "CoreCameraValues", "CullResults", "DrawShadowsSettings", "RenderPipelineManager", "ScriptableCullingParameters", "ScriptableRuntimeReflectionSystemSettings", "ScriptableRuntimeReflectionSystemWrapper", "ShadowSplitData", "SupportedRenderingFeatures", "VisibleLight", "VisibleReflectionProbe", "ExposedReference`1", "ExtensionOfNativeClassAttribute", "FailedToLoadScriptObject", "GradientAlphaKey", "GradientColorKey", "HelpURLAttribute", "ImageEffectAfterScale", "ImageEffectOpaque", "ImageEffectTransformsToLDR", "ManagedStreamHelpers", "UnityEngine.Networking.PlayerConnection", "PlayableAsset", "PlayableBehaviour", "PlayableHandle", "PlayableOutputHandle", "ScriptPlayableOutput", "PreferBinarySerialization", "CustomSampler", "UnityEngine.Profiling.Memory.Experimental", "Recorder", "Quaternion", "RectInt", "AsyncGPUReadbackRequest", "PlatformKeywordSet", "ReflectionProbeBlendInfo", "ShaderKeywordSet", "ResourceRequest", "UnityEngine.SceneManagement", "UnityEngine.Serialization", "FormerlySerializedAsAttribute", "SerializeField", "SerializePrivateVariables", "SetupCoroutine", "TrackedReference", "UnitySynchronizationContext", "Vector2Int", "Vector3Int", "WaitForEndOfFrame", "WaitForFixedUpdate", "WaitForSeconds", "UnityEngine.Physics2DModule.dll", "ContactFilter2D", "ContactPoint2D", "PhysicsJobOptions2D", "RaycastHit2D", "ProfilerMarker/AutoScope", "InvokeJavaProxyMethod", "Internal_ApplicationWantsToQuit", "CallLogCallback", "CallLowMemory", "Internal_ApplicationQuit", "InvokeOnBeforeRender", "InvokeCompletionEvent", "CheckIsEditorScript", "GetDefaultExecutionOrderFor", "GetParentTypeDisallowingMultipleInclusion", "GetRequiredComponents", "WrapBootConfigData", "FireOnPostRender", "FireOnPreCull", "FireOnPreRender", "SendEvents", "AppendDiagnosticSwitchToList", "FireDisplaysUpdated", "RecreateDisplayList", "CreateEnumInfoFromNativeEnum", "RequestLights", "EarlyUpdate/AnalyticsCoreStatsUpdate", "EarlyUpdate/ClearIntermediateRenderers", "EarlyUpdate/ClearLines", "EarlyUpdate/DeliverIosPlatformEvents", "EarlyUpdate/DirectorSampleTime", "EarlyUpdate/DispatchEventQueueEvents", "EarlyUpdate/ExecuteMainThreadJobs", "EarlyUpdate/GpuTimestamp", "EarlyUpdate/PerformanceAnalyticsUpdate", "EarlyUpdate/PhysicsResetInterpolatedTransformPosition", "EarlyUpdate/PlayerCleanupCachedData", "EarlyUpdate/PollHtcsPlayerConnection", "EarlyUpdate/PollPlayerConnection", "EarlyUpdate/PresentBeforeUpdate", "EarlyUpdate/ProcessMouseInWindow", "EarlyUpdate/ProcessRemoteInput", "EarlyUpdate/ProfilerStartFrame", "EarlyUpdate/RendererNotifyInvisible", "EarlyUpdate/ResetFrameStatsAfterPresent", "EarlyUpdate/ScriptRunDelayedStartupFrame", "EarlyUpdate/SpriteAtlasManagerUpdate", "EarlyUpdate/TangoUpdate", "EarlyUpdate/UnityWebRequestUpdate", "EarlyUpdate/UpdateAllUnityWebStreams", "EarlyUpdate/UpdateAsyncReadbackManager", "EarlyUpdate/UpdateCanvasRectTransform", "EarlyUpdate/UpdateInputManager", "EarlyUpdate/UpdateKinect", "EarlyUpdate/UpdateMainGameViewRect", "EarlyUpdate/UpdatePreloading", "EarlyUpdate/UpdateStreamingManager", "EarlyUpdate/UpdateTextureStreamingManager", "EarlyUpdate/XRUpdate", "FixedUpdate/AudioFixedUpdate", "FixedUpdate/ClearLines", "FixedUpdate/DirectorFixedSampleTime", "FixedUpdate/DirectorFixedUpdate", "FixedUpdate/DirectorFixedUpdatePostPhysics", "FixedUpdate/LegacyFixedAnimationUpdate", "FixedUpdate/NewInputFixedUpdate", "FixedUpdate/Physics2DFixedUpdate", "FixedUpdate/PhysicsFixedUpdate", "FixedUpdate/ScriptRunBehaviourFixedUpdate", "FixedUpdate/ScriptRunDelayedFixedFrameRate", "FixedUpdate/XRFixedUpdate", "Initialization/AsyncUploadTimeSlicedUpdate", "Initialization/PlayerUpdateTime", "Initialization/SynchronizeInputs", "Initialization/SynchronizeState", "Initialization/XREarlyUpdate", "PostLateUpdate/BatchModeUpdate", "PostLateUpdate/ClearImmediateRenderers", "PostLateUpdate/DirectorLateUpdate", "PostLateUpdate/DirectorRenderImage", "PostLateUpdate/EndGraphicsJobsAfterScriptLateUpdate", "PostLateUpdate/EnlightenRuntimeUpdate", "PostLateUpdate/ExecuteGameCenterCallbacks", "PostLateUpdate/FinishFrameRendering", "PostLateUpdate/GUIClearEvents", "PostLateUpdate/InputEndFrame", "PostLateUpdate/MemoryFrameMaintenance", "PostLateUpdate/ParticleSystemEndUpdateAll", "PostLateUpdate/PhysicsSkinnedClothBeginUpdate", "PostLateUpdate/PhysicsSkinnedClothFinishUpdate", "PostLateUpdate/PlayerEmitCanvasGeometry", "PostLateUpdate/PlayerSendFrameComplete", "PostLateUpdate/PlayerSendFramePostPresent", "PostLateUpdate/PlayerSendFrameStarted", "PostLateUpdate/PlayerUpdateCanvases", "PostLateUpdate/PresentAfterDraw", "PostLateUpdate/ProcessWebSendMessages", "PostLateUpdate/ProfilerEndFrame", "PostLateUpdate/ProfilerSynchronizeStats", "PostLateUpdate/ResetInputAxis", "PostLateUpdate/ScriptRunDelayedDynamicFrameRate", "PostLateUpdate/ShaderHandleErrors", "PostLateUpdate/SortingGroupsUpdate", "PostLateUpdate/ThreadedLoadingDebug", "PostLateUpdate/TriggerEndOfFrameCallbacks", "PostLateUpdate/UpdateAllRenderers", "PostLateUpdate/UpdateAllSkinnedMeshes", "PostLateUpdate/UpdateAudio", "PostLateUpdate/UpdateCanvasRectTransform", "PostLateUpdate/UpdateCaptureScreenshot", "PostLateUpdate/UpdateCustomRenderTextures", "PostLateUpdate/UpdateRectTransform", "PostLateUpdate/UpdateResolution", "PostLateUpdate/UpdateSubstance", "PostLateUpdate/UpdateVideo", "PostLateUpdate/UpdateVideoTextures", "PostLateUpdate/VFXUpdate", "PostLateUpdate/XRPostPresent", "PreLateUpdate/AIUpdatePostScript", "PreLateUpdate/ConstraintManagerUpdate", "PreLateUpdate/DirectorDeferredEvaluate", "PreLateUpdate/DirectorUpdateAnimationBegin", "PreLateUpdate/DirectorUpdateAnimationEnd", "PreLateUpdate/EndGraphicsJobsAfterScriptUpdate", "PreLateUpdate/LegacyAnimationUpdate", "PreLateUpdate/ParticleSystemBeginUpdateAll", "PreLateUpdate/ScriptRunBehaviourLateUpdate", "PreLateUpdate/UNetUpdate", "PreLateUpdate/UpdateMasterServerInterface", "PreLateUpdate/UpdateNetworkManager", "PreUpdate/AIUpdate", "PreUpdate/CheckTexFieldInput", "PreUpdate/IMGUISendQueuedEvents", "PreUpdate/NewInputUpdate", "PreUpdate/Physics2DUpdate", "PreUpdate/PhysicsUpdate", "PreUpdate/SendMouseEvents", "PreUpdate/UpdateVideo", "PreUpdate/WindUpdate", "Update/DirectorUpdate", "Update/ScriptRunBehaviourUpdate", "Update/ScriptRunDelayedTasks", "Internal_BuiltinRuntimeReflectionSystem_New", "CleanupRenderPipeline", "DoRenderLoop_Internal", "set_Internal_ScriptableRuntimeReflectionSystemSettings_system", "get_Internal_ScriptableRuntimeReflectionSystemSettings_instance", "Internal_ScriptableRuntimeReflectionSystemWrapper_TickRealtimeProbes", "FallbackMixedLightingModeByRef", "IsLightmapBakeTypeSupportedByRef", "IsLightmapsModeSupportedByRef", "IsMixedLightingModeSupportedByRef", "ISerializationCallbackReceiver", "OnBeforeSerialize", "LowerResBlitTextureDontStripMe", "ManagedStreamLength", "ManagedStreamRead", "ManagedStreamSeek", "DontStripMeshFilter", "DontStripMeshRenderer", "ConnectedCallbackInternal", "DisconnectedCallback", "MessageCallbackInternal", "INotificationReceiver", "Internal_CreatePlayable", "Internal_GetPlayableAssetDuration", "PreloadDataDontStripMe", "PrepareMetadata", "FinalizeSnapshot", "SendReapplyDrivenProperties", "CallReflectionProbeEvent", "CallSetDefaultReflection", "Internal_ActiveSceneChanged", "Internal_SceneLoaded", "Internal_SceneUnloaded", "DoSendMouseEvents", "SetMouseMoved", "InvokeMember", "InvokeMoveNext", "PostprocessStacktrace", "ExtractStringFromExceptionInternal", "SetProjectFolder", "RequestAtlas", "PostRegisteredAtlas", "ExecuteTasks", "InitializeSynchronizationContext", "::Scripting::Unity::Collections::AllocatorProxy", "::Scripting::Unity::Collections::DeallocateOnJobCompletionAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerIsAtomicWriteOnlyAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerIsReadOnlyAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerNeedsThreadIndexAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerSupportsDeallocateOnJobCompletionAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerSupportsDeferredConvertListToArrayProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeContainerSupportsMinMaxWriteRestrictionAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeDisableContainerSafetyRestrictionAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeDisableUnsafePtrRestrictionAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeSetClassTypeToNullOnScheduleAttributeProxy", "::Scripting::Unity::Collections::LowLevel::Unsafe::NativeSetThreadIndexAttributeProxy", "::Scripting::Unity::Collections::NativeDisableParallelForRestrictionAttributeProxy", "::Scripting::Unity::Collections::NativeFixedLengthAttributeProxy", "::Scripting::Unity::Collections::NativeMatchesParallelForLengthAttributeProxy", "::Scripting::Unity::Collections::ReadOnlyAttributeProxy", "::Scripting::Unity::Collections::WriteOnlyAttributeProxy", "::Scripting::Unity::Profiling::ProfilerMarkerProxy", "::Scripting::Unity::Profiling::ProfilerMarker::AutoScopeProxy", "::Scripting::UnityEngine::_AndroidJNIHelperProxy", "::Scripting::UnityEngine::Android::PermissionProxy", "::Scripting::UnityEngine::AndroidJNIHelperProxy", "::Scripting::UnityEngine::AnimationCurveProxy", "::Scripting::UnityEngine::ApplicationProxy", "::Scripting::UnityEngine::AssemblyIsEditorAssemblyProxy", "::Scripting::UnityEngine::YieldInstructionProxy", "::Scripting::UnityEngine::AsyncOperationProxy", "::Scripting::UnityEngine::AttributeHelperEngineProxy", "::Scripting::UnityEngine::ObjectProxy", "::Scripting::UnityEngine::ComponentProxy", "::Scripting::UnityEngine::BehaviourProxy", "::Scripting::UnityEngine::BoneWeightProxy", "::Scripting::UnityEngine::BootConfigDataProxy", "::Scripting::UnityEngine::Vector3Proxy", "::Scripting::UnityEngine::BoundsProxy", "::Scripting::UnityEngine::BoundsIntProxy", "::Scripting::UnityEngine::CachedAssetBundleProxy", "::Scripting::UnityEngine::CacheIndexProxy", "::Scripting::UnityEngine::CameraProxy", "::Scripting::UnityEngine::ClassLibraryInitializerProxy", "::Scripting::UnityEngine::ColorProxy", "::Scripting::UnityEngine::Color32Proxy", "::Scripting::UnityEngine::ColorGamutProxy", "::Scripting::UnityEngine::ComputeBufferProxy", "::Scripting::UnityEngine::ComputeShaderProxy", "::Scripting::UnityEngine::ContextMenuProxy", "::Scripting::UnityEngine::CoroutineProxy", "::Scripting::UnityEngine::TextureProxy", "::Scripting::UnityEngine::CubemapProxy", "::Scripting::UnityEngine::CubemapArrayProxy", "::Scripting::UnityEngine::CullingGroupProxy", "::Scripting::UnityEngine::RenderTextureProxy", "::Scripting::UnityEngine::CustomRenderTextureProxy", "::Scripting::UnityEngine::CustomRenderTextureUpdateZoneProxy", "::Scripting::UnityEngine::DefaultExecutionOrderProxy", "::Scripting::UnityEngine::DiagnosticSwitchProxy", "::Scripting::UnityEngine::DisplayProxy", "::Scripting::UnityEngine::EnumInfoProxy", "::Scripting::UnityEngine::Events::UnityEventBaseProxy", "::Scripting::UnityEngine::Events::UnityEventProxy", "::Scripting::UnityEngine::Events::UnityEvent_1Proxy", "::Scripting::UnityEngine::Events::UnityEvent_2Proxy", "::Scripting::UnityEngine::Events::UnityEvent_3Proxy", "::Scripting::UnityEngine::Events::UnityEvent_4Proxy", "::Scripting::UnityEngine::ExcludeFromObjectFactoryAttributeProxy", "::Scripting::UnityEngine::ExcludeFromPresetAttributeProxy", "::Scripting::UnityEngine::ExecuteAlwaysProxy", "::Scripting::UnityEngine::ExecuteInEditModeProxy", "::Scripting::UnityEngine::Experimental::GlobalIllumination::LightDataGIProxy", "::Scripting::UnityEngine::Experimental::GlobalIllumination::LightmappingProxy", "::Scripting::UnityEngine::Experimental::LowLevel::PlayerLoopSystemInternalProxy", "::Scripting::UnityEngine::Experimental::Playables::CameraPlayableProxy", "::Scripting::UnityEngine::Experimental::Playables::MaterialEffectPlayableProxy", "::Scripting::UnityEngine::Experimental::Playables::TextureMixerPlayableProxy", "::Scripting::UnityEngine::Experimental::Playables::TexturePlayableOutputProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::AnalyticsCoreStatsUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ClearIntermediateRenderersProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ClearLinesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::DeliverIosPlatformEventsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::DirectorSampleTimeProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::DispatchEventQueueEventsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ExecuteMainThreadJobsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::GpuTimestampProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::PerformanceAnalyticsUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::PhysicsResetInterpolatedTransformPositionProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::PlayerCleanupCachedDataProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::PollHtcsPlayerConnectionProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::PollPlayerConnectionProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::PresentBeforeUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ProcessMouseInWindowProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ProcessRemoteInputProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ProfilerStartFrameProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::RendererNotifyInvisibleProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ResetFrameStatsAfterPresentProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::ScriptRunDelayedStartupFrameProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::SpriteAtlasManagerUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::TangoUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UnityWebRequestUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateAllUnityWebStreamsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateAsyncReadbackManagerProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateCanvasRectTransformProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateInputManagerProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateKinectProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateMainGameViewRectProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdatePreloadingProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateStreamingManagerProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::UpdateTextureStreamingManagerProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::EarlyUpdate::XRUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::AudioFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::ClearLinesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::DirectorFixedSampleTimeProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::DirectorFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::DirectorFixedUpdatePostPhysicsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::LegacyFixedAnimationUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::NewInputFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::Physics2DFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::PhysicsFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::ScriptRunBehaviourFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::ScriptRunDelayedFixedFrameRateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::FixedUpdate::XRFixedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::InitializationProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Initialization::AsyncUploadTimeSlicedUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Initialization::PlayerUpdateTimeProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Initialization::SynchronizeInputsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Initialization::SynchronizeStateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Initialization::XREarlyUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::BatchModeUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ClearImmediateRenderersProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::DirectorLateUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::DirectorRenderImageProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::EndGraphicsJobsAfterScriptLateUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::EnlightenRuntimeUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ExecuteGameCenterCallbacksProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::FinishFrameRenderingProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::GUIClearEventsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::InputEndFrameProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::MemoryFrameMaintenanceProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ParticleSystemEndUpdateAllProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PhysicsSkinnedClothBeginUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PhysicsSkinnedClothFinishUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PlayerEmitCanvasGeometryProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PlayerSendFrameCompleteProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PlayerSendFramePostPresentProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PlayerSendFrameStartedProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PlayerUpdateCanvasesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::PresentAfterDrawProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ProcessWebSendMessagesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ProfilerEndFrameProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ProfilerSynchronizeStatsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ResetInputAxisProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ScriptRunDelayedDynamicFrameRateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ShaderHandleErrorsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::SortingGroupsUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::ThreadedLoadingDebugProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::TriggerEndOfFrameCallbacksProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateAllRenderersProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateAllSkinnedMeshesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateAudioProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateCanvasRectTransformProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateCaptureScreenshotProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateCustomRenderTexturesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateRectTransformProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateResolutionProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateSubstanceProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateVideoProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::UpdateVideoTexturesProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::VFXUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PostLateUpdate::XRPostPresentProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::AIUpdatePostScriptProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::ConstraintManagerUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::DirectorDeferredEvaluateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::DirectorUpdateAnimationBeginProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::DirectorUpdateAnimationEndProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::EndGraphicsJobsAfterScriptUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::LegacyAnimationUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::ParticleSystemBeginUpdateAllProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::ScriptRunBehaviourLateUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::UNetUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::UpdateMasterServerInterfaceProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreLateUpdate::UpdateNetworkManagerProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::AIUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::CheckTexFieldInputProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::IMGUISendQueuedEventsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::NewInputUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::Physics2DUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::PhysicsUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::SendMouseEventsProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::UpdateVideoProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::PreUpdate::WindUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::UpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Update::DirectorUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Update::ScriptRunBehaviourUpdateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Update::ScriptRunDelayedDynamicFrameRateProxy", "::Scripting::UnityEngine::Experimental::PlayerLoop::Update::ScriptRunDelayedTasksProxy", "::Scripting::UnityEngine::Experimental::Rendering::BuiltinRuntimeReflectionSystemProxy", "::Scripting::UnityEngine::Experimental::Rendering::CameraPropertiesProxy", "::Scripting::UnityEngine::Experimental::Rendering::CoreCameraValuesProxy", "::Scripting::UnityEngine::Experimental::Rendering::CullResultsProxy", "::Scripting::UnityEngine::Experimental::Rendering::DrawShadowsSettingsProxy", "::Scripting::UnityEngine::Experimental::Rendering::RenderPipelineManagerProxy", "::Scripting::UnityEngine::Experimental::Rendering::ScriptableCullingParametersProxy", "::Scripting::UnityEngine::Experimental::Rendering::ScriptableRuntimeReflectionSystemSettingsProxy", "::Scripting::UnityEngine::Experimental::Rendering::ScriptableRuntimeReflectionSystemWrapperProxy", "::Scripting::UnityEngine::Experimental::Rendering::ShadowSplitDataProxy", "::Scripting::UnityEngine::Experimental::Rendering::SupportedRenderingFeaturesProxy", "::Scripting::UnityEngine::Experimental::Rendering::VisibleLightProxy", "::Scripting::UnityEngine::Experimental::Rendering::VisibleReflectionProbeProxy", "::Scripting::UnityEngine::Experimental::U2D::SpriteBoneProxy", "::Scripting::UnityEngine::ExposedReference_1Proxy", "::Scripting::UnityEngine::ExtensionOfNativeClassAttributeProxy", "::Scripting::UnityEngine::FailedToLoadScriptObjectProxy", "::Scripting::UnityEngine::GameObjectProxy", "::Scripting::UnityEngine::GradientProxy", "::Scripting::UnityEngine::GradientAlphaKeyProxy", "::Scripting::UnityEngine::GradientColorKeyProxy", "::Scripting::UnityEngine::Hash128Proxy", "::Scripting::UnityEngine::HelpURLAttributeProxy", "::Scripting::UnityEngine::HideInInspectorProxy", "::Scripting::UnityEngine::ImageEffectAfterScaleProxy", "::Scripting::UnityEngine::ImageEffectOpaqueProxy", "::Scripting::UnityEngine::ImageEffectTransformsToLDRProxy", "::Scripting::UnityEngine::KeyframeProxy", "::Scripting::UnityEngine::LayerMaskProxy", "::Scripting::UnityEngine::LightmapDataProxy", "::Scripting::UnityEngine::LODProxy", "::Scripting::UnityEngine::LowerResBlitTextureProxy", "::Scripting::UnityEngine::ManagedStreamHelpersProxy", "::Scripting::UnityEngine::MaterialProxy", "::Scripting::UnityEngine::Matrix4x4Proxy", "::Scripting::UnityEngine::MeshProxy", "::Scripting::UnityEngine::MeshFilterProxy", "::Scripting::UnityEngine::RendererProxy", "::Scripting::UnityEngine::MeshRendererProxy", "::Scripting::UnityEngine::MonoBehaviourProxy", "::Scripting::UnityEngine::ScriptableObjectProxy", "::Scripting::UnityEngine::Networking::PlayerConnection::PlayerConnectionProxy", "::Scripting::UnityEngine::PlaneProxy", "::Scripting::UnityEngine::Playables::PlayableProxy", "::Scripting::UnityEngine::Playables::PlayableAssetProxy", "::Scripting::UnityEngine::Playables::PlayableBehaviourProxy", "::Scripting::UnityEngine::Playables::PlayableGraphProxy", "::Scripting::UnityEngine::Playables::PlayableHandleProxy", "::Scripting::UnityEngine::Playables::PlayableOutputProxy", "::Scripting::UnityEngine::Playables::PlayableOutputHandleProxy", "::Scripting::UnityEngine::Playables::ScriptPlayableOutputProxy", "::Scripting::UnityEngine::PreferBinarySerializationProxy", "::Scripting::UnityEngine::PreloadDataProxy", "::Scripting::UnityEngine::Profiling::SamplerProxy", "::Scripting::UnityEngine::Profiling::CustomSamplerProxy", "::Scripting::UnityEngine::Profiling::Memory::Experimental::MemoryProfilerProxy", "::Scripting::UnityEngine::Profiling::ProfilerProxy", "::Scripting::UnityEngine::Profiling::RecorderProxy", "::Scripting::UnityEngine::PropertyNameProxy", "::Scripting::UnityEngine::QuaternionProxy", "::Scripting::UnityEngine::RectProxy", "::Scripting::UnityEngine::RectIntProxy", "::Scripting::UnityEngine::RectOffsetProxy", "::Scripting::UnityEngine::TransformProxy", "::Scripting::UnityEngine::RectTransformProxy", "::Scripting::UnityEngine::ReflectionProbeProxy", "::Scripting::UnityEngine::Rendering::AsyncGPUReadbackRequestProxy", "::Scripting::UnityEngine::Rendering::CommandBufferProxy", "::Scripting::UnityEngine::Rendering::GPUFenceProxy", "::Scripting::UnityEngine::Rendering::GraphicsDeviceTypeProxy", "::Scripting::UnityEngine::Rendering::PlatformKeywordSetProxy", "::Scripting::UnityEngine::Rendering::ReflectionProbeBlendInfoProxy", "::Scripting::UnityEngine::Rendering::ShaderKeywordProxy", "::Scripting::UnityEngine::Rendering::ShaderKeywordSetProxy", "::Scripting::UnityEngine::Rendering::ShaderKeywordTypeProxy", "::Scripting::UnityEngine::Rendering::SphericalHarmonicsL2Proxy", "::Scripting::UnityEngine::ResolutionProxy", "::Scripting::UnityEngine::ResourceRequestProxy", "::Scripting::UnityEngine::SceneManagement::SceneManagerProxy", "::Scripting::UnityEngine::SendMouseEventsProxy", "::Scripting::UnityEngine::Serialization::FormerlySerializedAsAttributeProxy", "::Scripting::UnityEngine::SerializeFieldProxy", "::Scripting::UnityEngine::SerializePrivateVariablesProxy", "::Scripting::UnityEngine::SetupCoroutineProxy", "::Scripting::UnityEngine::SpriteProxy", "::Scripting::UnityEngine::StackTraceUtilityProxy", "::Scripting::UnityEngine::Texture2DProxy", "::Scripting::UnityEngine::Texture2DArrayProxy", "::Scripting::UnityEngine::Texture3DProxy", "::Scripting::UnityEngine::TrackedReferenceProxy", "::Scripting::UnityEngine::U2D::SpriteAtlasManagerProxy", "::Scripting::UnityEngine::UnhandledExceptionHandlerProxy", "::Scripting::UnityEngine::UnityExceptionProxy", "::Scripting::UnityEngine::UnitySynchronizationContextProxy", "::Scripting::UnityEngine::Vector2Proxy", "::Scripting::UnityEngine::Vector2IntProxy", "::Scripting::UnityEngine::Vector3IntProxy", "::Scripting::UnityEngine::Vector4Proxy", "::Scripting::UnityEngine::WaitForEndOfFrameProxy", "::Scripting::UnityEngine::WaitForFixedUpdateProxy", "::Scripting::UnityEngine::WaitForSecondsProxy", "::Scripting::UnityEngine::Collider2DProxy", "::Scripting::UnityEngine::Collision2DProxy", "::Scripting::UnityEngine::ContactFilter2DProxy", "::Scripting::UnityEngine::ContactPoint2DProxy", "::Scripting::UnityEngine::Physics2DProxy", "::Scripting::UnityEngine::PhysicsJobOptions2DProxy", "::Scripting::UnityEngine::RaycastHit2DProxy", "UnityEngine.IMGUIModule.dll", "GUIContent", "m_Image", "m_Tooltip", "GUILayoutEntry", "GUILayoutGroup", "GUIScrollGroup", "GUITargetAttribute", "GUIUtility", "ScrollViewState", "SliderState", "UnityEngine.ParticleSystemModule.dll", "ParticleCollisionEvent", "ParticleSystem", "ParticleSystemVertexStream", "ContactPoint", "TextGenerator", "Internal_MakeMasterEventCurrent", "CallWindowDelegate", "GetGUITargetAttrValue", "EndContainerGUIFromException", "EndGUIFromException", "ProcessEvent", "BeginGUI", "EndGUI", "MarkGUIChanged", "RemoveCapture", "TakeCapture", "::Scripting::UnityEngine::EventProxy", "::Scripting::UnityEngine::GUIProxy", "::Scripting::UnityEngine::GUIContentProxy", "::Scripting::UnityEngine::GUILayoutEntryProxy", "::Scripting::UnityEngine::GUILayoutGroupProxy", "::Scripting::UnityEngine::GUIScrollGroupProxy", "::Scripting::UnityEngine::GUISkinProxy", "::Scripting::UnityEngine::GUIStyleProxy", "::Scripting::UnityEngine::GUITargetAttributeProxy", "::Scripting::UnityEngine::GUIUtilityProxy", "::Scripting::UnityEngine::ScrollViewStateProxy", "::Scripting::UnityEngine::SliderStateProxy", "::Scripting::UnityEngine::TextEditorProxy", "ParticleSystem/Particle", "Internal_GetMeshCount", "::Scripting::UnityEngine::ParticleCollisionEventProxy", "::Scripting::UnityEngine::ParticleSystemProxy", "::Scripting::UnityEngine::ParticleSystem::ParticleProxy", "::Scripting::UnityEngine::ParticleSystemRendererProxy", "::Scripting::UnityEngine::ParticleSystemVertexStreamProxy", "::Scripting::UnityEngine::ColliderProxy", "::Scripting::UnityEngine::BoxColliderProxy", "::Scripting::UnityEngine::CapsuleColliderProxy", "::Scripting::UnityEngine::CollisionProxy", "::Scripting::UnityEngine::ContactPointProxy", "::Scripting::UnityEngine::ControllerColliderHitProxy", "::Scripting::UnityEngine::MeshColliderProxy", "::Scripting::UnityEngine::PhysicsProxy", "::Scripting::UnityEngine::RaycastHitProxy", "::Scripting::UnityEngine::SphereColliderProxy", "InvokeTextureRebuilt_Internal", "::Scripting::UnityEngine::CharacterInfoProxy", "::Scripting::UnityEngine::FontProxy", "::Scripting::UnityEngine::TextGeneratorProxy", "::Scripting::UnityEngine::UICharInfoProxy", "::Scripting::UnityEngine::UILineInfoProxy", "::Scripting::UnityEngine::UIVertexProxy", "UnityEngine.AccessibilityModule.dll", "UnityEngine.Accessibility", "VisionUtility", "UnityEngine.AudioModule.dll", "AudioClipPlayable", "AudioMixerPlayable", "AudioPlayableOutput", "AudioClip", "AudioSettings", "UnityEngine.Experimental.Audio", "AudioSampleProvider", "WebCamDevice", "UnityEngine.DirectorModule.dll", "PlayableDirector", "UnityEngine.TextCoreModule.dll", "UnityEngine.TextCore", "FaceInfo", "Glyph", "GlyphMetrics", "GlyphRect", "UnityEngine.TextCore.LowLevel", "GlyphAdjustmentRecord", "GlyphLoadFlags", "GlyphMarshallingStruct", "GlyphPackingMode", "GlyphPairAdjustmentRecord", "GlyphRenderMode", "GlyphValueRecord", "UnityEngine.TilemapModule.dll", "ITilemap", "UnityEngine.UIModule.dll", "UnityEngine.VRModule.dll", "XRDevice", "::Scripting::UnityEngine::Accessibility::VisionUtilityProxy", "InvokePCMReaderCallback_Internal", "InvokePCMSetPositionCallback_Internal", "InvokeOnAudioConfigurationChanged", "InvokeOnAudioManagerUpdate", "InvokeOnAudioSourcePlay", "InvokeSampleFramesAvailable", "InvokeSampleFramesOverflow", "::Scripting::UnityEngine::Audio::AudioClipPlayableProxy", "::Scripting::UnityEngine::Audio::AudioMixerPlayableProxy", "::Scripting::UnityEngine::Audio::AudioPlayableOutputProxy", "::Scripting::UnityEngine::AudioClipProxy", "::Scripting::UnityEngine::AudioSettingsProxy", "::Scripting::UnityEngine::Experimental::Audio::AudioSampleProviderProxy", "::Scripting::UnityEngine::WebCamDeviceProxy", "SendOnPlayableDirectorPause", "SendOnPlayableDirectorPlay", "SendOnPlayableDirectorStop", "::Scripting::UnityEngine::Playables::PlayableDirectorProxy", "::Scripting::UnityEngine::TextCore::FaceInfoProxy", "::Scripting::UnityEngine::TextCore::GlyphProxy", "::Scripting::UnityEngine::TextCore::GlyphMetricsProxy", "::Scripting::UnityEngine::TextCore::GlyphRectProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecordProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphLoadFlagsProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphMarshallingStructProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphPackingModeProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecordProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphRenderModeProxy", "::Scripting::UnityEngine::TextCore::LowLevel::GlyphValueRecordProxy", "GetTileAnimationData", "StartUp", "GetTileData", "RefreshTile", "::Scripting::UnityEngine::Tilemaps::ITilemapProxy", "::Scripting::UnityEngine::Tilemaps::TileBaseProxy", "::Scripting::UnityEngine::Tilemaps::TileProxy", "::Scripting::UnityEngine::Tilemaps::TileAnimationDataProxy", "::Scripting::UnityEngine::Tilemaps::TileDataProxy", "SendWillRenderCanvases", "::Scripting::UnityEngine::CanvasProxy", "InvokeDeviceLoaded", "::Scripting::UnityEngine::XR::XRDeviceProxy", "Animation State out of bounds!", "UnityEngine.AnimationClip::AddEventInternal", "UnityEngine.AnimationClip::SetEventsInternal", "UnityEngine.AnimationClip::GetEventsInternal", "UnityEngine.Animation::get_clip", "UnityEngine.Animation::set_clip", "UnityEngine.Animation::get_playAutomatically", "UnityEngine.Animation::set_playAutomatically", "UnityEngine.Animation::get_wrapMode", "UnityEngine.Animation::set_wrapMode", "UnityEngine.Animation::INTERNAL_CALL_Stop", "UnityEngine.Animation::Internal_StopByName", "UnityEngine.Animation::Internal_RewindByName", "UnityEngine.Animation::INTERNAL_CALL_Rewind", "UnityEngine.Animation::INTERNAL_CALL_Sample", "UnityEngine.Animation::get_isPlaying", "UnityEngine.Animation::IsPlaying", "UnityEngine.Animation::Play", "UnityEngine.Animation::CrossFade", "UnityEngine.Animation::Blend", "UnityEngine.Animation::CrossFadeQueued", "UnityEngine.Animation::PlayQueued", "UnityEngine.Animation::AddClip", "UnityEngine.Animation::RemoveClip", "UnityEngine.Animation::GetClipCount", "UnityEngine.Animation::RemoveClip2", "UnityEngine.Animation::PlayDefaultAnimation", "UnityEngine.Animation::INTERNAL_CALL_SyncLayer", "UnityEngine.Animation::GetState", "UnityEngine.Animation::GetStateAtIndex", "UnityEngine.Animation::GetStateCount", "UnityEngine.Animation::get_animatePhysics", "UnityEngine.Animation::set_animatePhysics", "UnityEngine.Animation::get_animateOnlyIfVisible", "UnityEngine.Animation::set_animateOnlyIfVisible", "UnityEngine.Animation::get_cullingType", "UnityEngine.Animation::set_cullingType", "UnityEngine.Animation::INTERNAL_get_localBounds", "UnityEngine.Animation::INTERNAL_set_localBounds", "UnityEngine.AnimationState::get_enabled", "UnityEngine.AnimationState::set_enabled", "UnityEngine.AnimationState::get_weight", "UnityEngine.AnimationState::set_weight", "UnityEngine.AnimationState::get_wrapMode", "UnityEngine.AnimationState::set_wrapMode", "UnityEngine.AnimationState::get_time", "UnityEngine.AnimationState::set_time", "UnityEngine.AnimationState::get_normalizedTime", "UnityEngine.AnimationState::set_normalizedTime", "UnityEngine.AnimationState::get_speed", "UnityEngine.AnimationState::set_speed", "UnityEngine.AnimationState::get_normalizedSpeed", "UnityEngine.AnimationState::set_normalizedSpeed", "UnityEngine.AnimationState::get_length", "UnityEngine.AnimationState::get_layer", "UnityEngine.AnimationState::set_layer", "UnityEngine.AnimationState::get_clip", "UnityEngine.AnimationState::AddMixingTransform", "UnityEngine.AnimationState::RemoveMixingTransform", "UnityEngine.AnimationState::get_name", "UnityEngine.AnimationState::set_name", "UnityEngine.AnimationState::get_blendMode", "UnityEngine.AnimationState::set_blendMode", "GetRef", "invalid block type", "invalid stored block lengths", "too many length or distance symbols", "invalid code lengths set", "invalid bit length repeat", "invalid literal/lengths set", "invalid distances set", "invalid literal/length code", "invalid distance code", "invalid distance too far back", "Bogus message code %d", "Sorry, arithmetic coding is not implemented", "ALIGN_TYPE is wrong, please fix", "MAX_ALLOC_CHUNK is wrong, please fix", "Bogus buffer control mode", "Invalid component ID %d in SOS", "DCT coefficient out of range", "IDCT output block size %d not supported", "Bogus Huffman table definition", "Bogus input colorspace", "Bogus JPEG colorspace", "Bogus marker length", "Wrong JPEG library version: library is %d, caller expects %d", "Sampling factors too large for interleaved scan", "Invalid memory pool code %d", "Unsupported JPEG data precision %d", "Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d", "Invalid progressive parameters at scan script entry %d", "Bogus sampling factors", "Invalid scan script at entry %d", "Improper call to JPEG library in state %d", "JPEG parameter struct mismatch: library thinks size is %u, caller expects %u", "Bogus virtual array access", "Buffer passed to JPEG library is too small", "Suspension not allowed here", "CCIR601 sampling not implemented yet", "Too many color components: %d, max %d", "Unsupported color conversion request", "Bogus DAC index %d", "Bogus DAC value 0x%x", "Bogus DHT index %d", "Bogus DQT index %d", "Empty JPEG image (DNL not supported)", "Read from EMS failed", "Write to EMS failed", "Didn't expect more than one scan", "Input file read error", "Output file write error --- out of disk space?", "Fractional sampling not implemented yet", "Huffman code size table overflow", "Missing Huffman code table entry", "Maximum supported image dimension is %u pixels", "Empty input file", "Premature end of input file", "Cannot transcode due to multiple use of quantization table %d", "Scan script does not transmit all data", "Invalid color quantization mode change", "Not implemented yet", "Requested feature was omitted at compile time", "Backing store not supported", "Huffman table 0x%02x was not defined", "JPEG datastream contains no image", "Quantization table 0x%02x was not defined", "Not a JPEG file: starts with 0x%02x 0x%02x", "Insufficient memory (case %d)", "Cannot quantize more than %d color components", "Cannot quantize to fewer than %d colors", "Cannot quantize to more than %d colors", "Invalid JPEG file structure: two SOF markers", "Invalid JPEG file structure: missing SOS marker", "Unsupported JPEG process: SOF type 0x%02x", "Invalid JPEG file structure: two SOI markers", "Invalid JPEG file structure: SOS before SOF", "Failed to create temporary file %s", "Read failed on temporary file", "Seek failed on temporary file", "Write failed on temporary file --- out of disk space?", "Application transferred too few scanlines", "Unsupported marker type 0x%02x", "Virtual array controller messed up", "Image too wide for this implementation", "Read from XMS failed", "Write to XMS failed", "Copyright (C) 1991-2012 Thomas G. Lane, Guido Vollbeding\nCopyright (C) 1999-2006 MIYASAKA Masaru\nCopyright (C) 2009 Pierre Ossman for Cendio AB\nCopyright (C) 2009-2014 D. R. Commander\nCopyright (C) 2009-2011 Nokia Corporation and/or its subsidiary(-ies)", "6b  27-Mar-1998", "Caution: quantization tables are too coarse for baseline JPEG", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "Unknown APP0 marker (not JFIF), length %u", "Unknown APP14 marker (not Adobe), length %u", "Define Arithmetic Table 0x%02x: 0x%02x", "Define Huffman Table 0x%02x", "Define Quantization Table %d  precision %d", "Define Restart Interval %u", "Freed EMS handle %u", "Obtained EMS handle %u", "End Of Image", "        %3d %3d %3d %3d %3d %3d %3d %3d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "Warning: thumbnail image size does not match data length %u", "JFIF extension marker: type 0x%02x, length %u", "    with %d x %d thumbnail image", "Miscellaneous marker 0x%02x, length %u", "Unexpected marker 0x%02x", "        %4u %4u %4u %4u %4u %4u %4u %4u", "Quantizing to %d = %d*%d*%d colors", "Quantizing to %d colors", "Selected %d colors for quantization", "At marker 0x%02x, recovery action %d", "Smoothing not supported with nonstandard sampling ratios", "Start Of Frame 0x%02x: width=%u, height=%u, components=%d", "    Component %d: %dhx%dv q=%d", "Start of Image", "Start Of Scan: %d components", "    Component %d: dc=%d ac=%d", "  Ss=%d, Se=%d, Ah=%d, Al=%d", "Closed temporary file %s", "Opened temporary file %s", "JFIF extension marker: JPEG-compressed thumbnail image, length %u", "JFIF extension marker: palette thumbnail image, length %u", "JFIF extension marker: RGB thumbnail image, length %u", "Unrecognized component IDs %d %d %d, assuming YCbCr", "Freed XMS handle %u", "Obtained XMS handle %u", "Unknown Adobe color transform code %d", "Inconsistent progression sequence for component %d coefficient %d", "Corrupt JPEG data: %u extraneous bytes before marker 0x%02x", "Corrupt JPEG data: premature end of data segment", "Corrupt JPEG data: bad Huffman code", "Warning: unknown JFIF revision number %d.%02d", "Premature end of JPEG file", "Corrupt JPEG data: found marker 0x%02x instead of RST%d", "Invalid SOS parameters for sequential JPEG", "Application transferred too many scanlines", "Invalid crop request", "Unknown freer parameter in png_data_freer", " +0000", "\nlibpng version 1.6.10 - March 6, 2014\nCopyright (c) 1998-2014 Glenn Randers-Pehrson\nCopyright (c) 1996-1997 Andreas Dilger\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n", " libpng version 1.6.10 - March 6, 2014\n\n", "unexpected zlib return code", "unexpected end of LZ stream", "missing LZ dictionary", "zlib IO error", "bad parameters to zlib", "damaged LZ stream", "insufficient memory", "truncated", "unsupported zlib version", "unexpected zlib return", "gamma value out of range", "duplicate", "invalid chromaticities", "internal error checking chromaticities", "invalid end points", "invalid sRGB rendering intent", "inconsistent rendering intents", "duplicate sRGB information ignored", "cHRM chunk does not match sRGB", "invalid length", "length does not match profile", "tag count too large", "invalid rendering intent", "intent outside defined range", "invalid signature", "PCS illuminant is not D50", "RGB color space not permitted on grayscale PNG", "Gray color space not permitted on RGB PNG", "invalid ICC profile color space", "invalid embedded Abstract ICC profile", "unexpected DeviceLink ICC profile class", "unexpected NamedColor ICC profile class", "unrecognized ICC profile class", "unexpected ICC PCS encoding", "ICC profile tag start not a multiple of 4", "ICC profile tag outside profile", "Invalid IHDR data", "ASCII conversion buffer too small", "fixed point overflow in ", "Libpng jmp_buf still allocated", "Missing IHDR before IDAT", "Missing PLTE before IDAT", "Too many IDATs found", "png_read_update_info/png_start_read_image: duplicate call", "png_start_read_image/png_read_update_info: duplicate call", "Invalid attempt to read row data", "bad adaptive filter value", "sequential row overflow", "internal sequential row size calculation error", "Read palette index exceeding num_palette", "Call to NULL read function", "PNG unsigned integer out of range", "Not a PNG file", "PNG file corrupted by ASCII conversion", "CRC error", "out of place", "missing IHDR", "ignored in grayscale PNG", "tRNS must be after", "bKGD must be after", "invalid values", "too many profiles", "extra compressed data", "bad compression method", "bad keyword", "invalid with alpha channel", "invalid index", "invalid parameter count", "unrecognized equation type", "invalid data", "invalid unit", "bad width format", "non-positive width", "bad height format", "non-positive height", "no space in chunk cache", "bad compression info", "unhandled critical chunk", "invalid chunk type", "internal row logic error", "internal row size calculation error", "internal row width error", "invalid user transform pixel depth", "Not enough image data", "Extra compressed data", "Too much image data", "Row has too many bytes to allocate in memory", "cHRM White X", "cHRM White Y", "cHRM Red X", "cHRM Red Y", "cHRM Green X", "cHRM Green Y", "cHRM Blue X", "cHRM Blue Y", "cHRM Red Z", "png_set_gAMA", "Invalid pCAL equation type", "Invalid pCAL parameter count", "Invalid format for pCAL parameter", "Invalid sCAL unit", "Invalid sCAL width", "Invalid sCAL height", "Invalid palette length", "Invalid palette", "Invalid iCCP compression method", "Insufficient memory to process iCCP chunk", "Insufficient memory to process iCCP profile", "Insufficient memory to store text", "too many text chunks", "text compression mode is out of range", "text chunk: out of memory", "too many sPLT chunks", "png_set_sPLT: invalid sPLT", "sPLT out of memory", "png_set_keep_unknown_chunks: invalid keep", "png_set_keep_unknown_chunks: no chunk list", "png_set_keep_unknown_chunks: too many chunks", "invalid compression buffer size", "png_set_filler is invalid for low bit depth gray output", "png_set_filler: inappropriate color type", "info change after png_start_read_image or png_read_update_info", "gamma value does not match sRGB", "gamma value does not match libpng estimate", "inconsistent chromaticities", "profile '", "known incorrect sRGB profile", "out-of-date sRGB profile with no signature", "Not recognizing known sRGB profile that has been edited", "zstream unclaimed", "insufficient memory to read chunk", "internal error: array alloc", "internal error: array realloc", "Out of memory", "Out of Memory", "png_set_background", "output gamma out of expected range", "invalid alpha mode", "conflicting calls to set alpha mode and background", "invalid file gamma in png_set_gamma", "invalid screen gamma in png_set_gamma", "invalid background gamma type", "Palette is NULL in indexed image", "NULL row buffer", "Uninitialized row", "Call to NULL write function", "Write Error", "profile matches sRGB but writing iCCP instead", "Valid palette required for paletted images", "No IDATs written into file", "Wrote palette index exceeding num_palette", "png_write_info was never called before png_write_row", "internal write transform logic error", "Unknown row filter for method 0", "Unknown custom filter method", "Invalid bit depth for grayscale image", "Invalid bit depth for RGB image", "Invalid bit depth for paletted image", "Invalid bit depth for grayscale+alpha image", "Invalid bit depth for RGBA image", "Invalid image color type specified", "Invalid number of colors in palette", "Z_OK on Z_FINISH with output space", "No profile for iCCP chunk", "ICC profile too short", "ICC profile length invalid (not a multiple of 4)", "iCCP: invalid keyword", "sPLT: invalid keyword", "Invalid number of transparent colors specified", "Ignoring attempt to write tRNS chunk out-of-range for bit_depth", "Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8", "Can't write tRNS with an alpha channel", "tEXt: invalid keyword", "tEXt: text too long", "zTXt: invalid compression type", "zTXt: invalid keyword", "iTXt: invalid keyword", "iTXt: invalid compression", "iTXt: uncompressed text too long", "Unrecognized equation type for pCAL chunk", "pCAL: invalid keyword", "invalid after png_start_read_image or png_read_update_info", "gamma value", "length exceeds PNG maxima", " using zstream", "in use by IDAT", "compressed data too long", "error writing ancillary chunked compressed data", "type1", "kerning", "glyph-dict", "postscript-font-name", "sfnt-table", "tt-cmaps", "type42", "truetype", "truetype-engine", "OTTO", "/..namedfork/rsrc", "resource.frk/", ".resource/", ".AppleDouble/", "tlsf_create: Pool size must be at least %d bytes.\n", "\t%p %s size: %x (%p)\n", "SkinnedMeshRendererManager::kHierarchySystemInvalidationRenderer", "SkinnedMeshRendererManager::kHierarchySystemInvalidationRoot", "GetResource", "force-clamped", "OpenGL", "OpenGL ", "VideoCore", "PowerVR", "Mali", "Adreno", "Tegra", "Vivante", "Adreno (TM) 3", "Adreno (TM) 4", "Adreno (TM) 5", "Adreno (TM) 6", "Mali-G", "Renderer: %s\n", "Vendor:   %s\n", "Version:  %s\n", "GLES:     %d\n", "glGetString(GL_EXTENSIONS) - failure", "OpenGL ES 3.0", "GC2000", "BayTrail", "Tegra 3", "vega", "Mali-200", "Mali-300", "Mali-400", "Mali-450", "Mali-470", "PowerVR SGX", "Adreno (TM) 2", "Tegra 4", "Vivante GC1000", "GC1000 core", "VideoCore IV", "Bluestacks", "Adreno (TM) 22", "MSAA support is disabled on High Sierra for this GPU", "Radeon HD 2", "Radeon HD 3", "Radeon HD 4", "force-desktop-glcontext", "V@139.0 (GIT@I1b38baa288)", "V@145.0 (GIT@I7b6ba47bd6)", "V@139.0 (GIT@If3abccc389)", "Immersion", "/UnityShaderCache/", "Warning: Shader '%s' exceeds the number of texture image units, marking as unsupported.\n", "Note: Creation of internal variant of shader '%s' failed.\n", "FRAGMENT", "HULL", "DOMAIN", "UNITY_RUNTIME_INSTANCING_ARRAY_SIZE", "HLSLcc_ClipDistances_", "GLSL shader program has a geometry shader with unsupported primitive input type", "texture2D", "tex2D", "GLES20: vprog textures are used, but not supported.\n", "GL_OES_EGL_image_external", "#extension", "#define UNITY_ADRENO_ES3 1\n", "#define UNITY_GLSL_STRIP_TRANSPOSE\n", "#ifdef GL_FRAGMENT_PRECISION_HIGH", "#if 1                            ", "textureCubeLodEXT", "textureCubeGradEXT", "textureCubeLodEXT or textureCubeGradEXT usage detected.\n", "GL_EXT_shader_texture_lod extension is buggy on PowerVR drivers.\n", "replacing textureCubeLodEXT->textureCubeLod and textureCubeGradEXT->textureCubeGradARB as a workaround.\n", "textureCube", "#define UNITY_DYNAMIC_INDEX_ES2 0", "Shader uses too many vertex attributes for this platform (max is %i)", "_glesVertex", "in_POSITION0", "_glesInternalTessPos", "in_INTERNALTESSPOS0", "_glesNormal", "in_NORMAL0", "_glesTANGENT", "in_TANGENT0", "_glesColor", "in_COLOR0", "_glesMultiTexCoord0", "in_TEXCOORD0", "_glesMultiTexCoord1", "in_TEXCOORD1", "_glesMultiTexCoord2", "in_TEXCOORD2", "_glesMultiTexCoord3", "in_TEXCOORD3", "_glesMultiTexCoord4", "in_TEXCOORD4", "_glesMultiTexCoord5", "in_TEXCOORD5", "_glesMultiTexCoord6", "in_TEXCOORD6", "_glesMultiTexCoord7", "in_TEXCOORD7", "_glesBLENDWEIGHT", "in_BLENDWEIGHT0", "_glesBLENDINDICES", "in_BLENDINDICES0", "OPENGL LOG: Creating OpenGL%s%d.%d graphics device ; Context level %s ; Context handle %d\n", " ES ", "OPENGL NATIVE PLUG-IN ERROR", "/Users/builduser/buildslave/unity/build/Runtime/GfxDevice/opengles/GfxDeviceGLES.cpp", "RenderTexture: Resolving non-color surfaces.", "RenderTexture: Resolving NULL buffers.", "The given primitive topology does not match with the topology expected by the geometry shader", "Random write target index out of bounds", "ERROR: Unable to link compute shader!", "ComputeShader: Trying to set uniform with %i elements whereas only %i were expected. The excess data is being discarded.", "ComputeShader: Trying to set uniform with %i elements whereas %i were expected. Could not set uniform.", "Graphics.CopyTexture could not find source GL texture object. Maybe it is a RenderTexture that is not created yet?", "Graphics.CopyTexture could not find destination GL texture object. Maybe it is a RenderTexture that is not created yet?", "Graphics.CopyTexture can only copy between same texture format groups (OpenGL internal formats: src=%i, blockSize=%i ; dst=%i, blockSize=%i)", " <OpenGL ES 2.0>", " <OpenGL ES 3.0>", " <OpenGL ES 3.1>", " <OpenGL ES 3.1 AEP>", " <OpenGL 3.2>", " <OpenGL 3.3>", " <OpenGL 4.0>", " <OpenGL 4.1>", " <OpenGL 4.2>", " <OpenGL 4.3>", " <OpenGL 4.4>", " <OpenGL 4.5>", " <OpenGL ES 2.0 (no extensions)>", " <OpenGL ES 3.0 (no extensions)>", " <OpenGL ES 3.1 (no extensions)>", " <OpenGL ES 3.1 AEP (no extensions)>", " <OpenGL 3.2 (no extensions)>", " <OpenGL 3.3 (no extensions)>", " <OpenGL 4.0 (no extensions)>", " <OpenGL 4.1 (no extensions)>", " <OpenGL 4.2 (no extensions)>", " <OpenGL 4.3 (no extensions)>", " <OpenGL 4.4 (no extensions)>", " <OpenGL 4.5 (no extensions)>", " <OpenGL>", "RenderTexture warning: Destroying active render texture. Switching to main context.", "Warning: Rendering to mipmap levels other than zero is not supported on this device", "GLX_", "kANGLE_instanced_arrays", "kEXT_texture_filter_anisotropic", "kEXT_sRGB", "kWEBGL_color_buffer_float", "kWEBGL_compressed_texture_astc_ldr", "kWEBGL_compressed_texture_es3", "kWEBGL_compressed_texture_etc1", "kWEBGL_compressed_texture_pvrtc", "kWEBGL_compressed_texture_s3tc", "kWEBGL_compressed_texture_s3tc_srgb", "kWEBGL_depth_texture", "kWEBGL_draw_buffers", "kWEBKIT_EXT_texture_filter_anisotropic", "kWEBKIT_WEBGL_compressed_texture_s3tc", "kGL_AMD_vertex_shader_layer", "kGL_ANDROID_extension_pack_es31a", "kGL_APPLE_color_buffer_packed_float", "kGL_APPLE_framebuffer_multisample", "kGL_APPLE_texture_format_BGRA8888", "kGL_APPLE_texture_max_level", "kGL_APPLE_texture_packed_float", "kGL_ARB_clear_buffer_object", "kGL_ARB_compute_shader", "kGL_ARB_copy_buffer", "kGL_ARB_copy_image", "kGL_ARB_depth_clamp", "kGL_ARB_depth_texture", "kGL_ARB_direct_state_access", "kGL_ARB_draw_buffers_blend", "kGL_ARB_draw_elements_base_vertex", "kGL_ARB_draw_indirect", "kGL_ARB_draw_instanced", "kGL_ARB_ES2_compatibility", "kGL_ARB_ES3_compatibility", "kGL_ARB_ES3_1_compatibility", "kGL_ARB_framebuffer_blit", "kGL_ARB_framebuffer_object", "kGL_ARB_framebuffer_sRGB", "kGL_ARB_geometry_shader4", "kGL_ARB_get_program_binary", "kGL_ARB_internalformat_query2", "kGL_ARB_invalidate_subdata", "kGL_ARB_map_buffer_range", "kGL_ARB_sampler_objects", "kGL_ARB_separate_shader_objects", "kGL_ARB_shader_image_load_store", "kGL_ARB_shader_storage_buffer_object", "kGL_ARB_shader_viewport_layer_array", "kGL_ARB_sparse_texture", "kGL_ARB_tessellation_shader", "kGL_ARB_texture_compression_bptc", "kGL_ARB_texture_compression_rgtc", "kGL_ARB_texture_cube_map_array", "kGL_ARB_texture_mirror_clamp_to_edge", "kGL_ARB_texture_storage", "kGL_ARB_texture_swizzle", "kGL_ARB_texture_view", "kGL_ARB_timer_query", "kGL_ARB_transform_feedback3", "kGL_ARB_uniform_buffer_object", "kGL_ARB_vertex_array_object", "kGL_ARB_vertex_buffer_object", "kGL_ATI_meminfo", "kGL_ATI_texture_mirror_once", "kGL_EXT_blend_minmax", "kGL_EXT_clip_cull_distance", "kGL_EXT_color_buffer_float", "kGL_EXT_color_buffer_half_float", "kGL_EXT_copy_image", "kGL_EXT_debug_label", "kGL_EXT_debug_marker", "kGL_EXT_direct_state_access", "kGL_EXT_discard_framebuffer", "kGL_EXT_disjoint_timer_query", "kGL_EXT_draw_buffers", "kGL_EXT_draw_elements_base_vertex", "kGL_EXT_draw_instanced", "kGL_EXT_float_blend", "kGL_EXT_framebuffer_multisample_blit_scaled", "kGL_EXT_geometry_shader", "kGL_EXT_map_buffer_range", "kGL_EXT_multisampled_render_to_texture", "kGL_EXT_packed_depth_stencil", "kGL_EXT_pvrtc_sRGB", "kGL_EXT_render_snorm", "kGL_EXT_separate_shader_objects", "kGL_EXT_shader_texture_lod", "kGL_EXT_shadow_samplers", "kGL_EXT_sparse_texture", "kGL_EXT_sRGB", "kGL_EXT_sRGB_write_control", "kGL_EXT_tessellation_shader", "kGL_EXT_texture_buffer", "kGL_EXT_texture_compression_rgtc", "kGL_EXT_texture_compression_s3tc", "kGL_EXT_texture_cube_map_array", "kGL_EXT_texture_filter_anisotropic", "kGL_EXT_texture_format_BGRA8888", "kGL_EXT_texture_mirror_clamp", "kGL_EXT_texture_mirror_clamp_to_edge", "kGL_EXT_texture_norm16", "kGL_EXT_texture_rg", "kGL_EXT_texture_sRGB_decode", "kGL_EXT_texture_sRGB_R8", "kGL_EXT_texture_sRGB_RG8", "kGL_EXT_texture_storage", "kGL_EXT_texture_swizzle", "kGL_EXT_texture_type_2_10_10_10_REV", "kGL_EXT_texture_view", "kGL_GOOGLE_depth_texture", "kGL_IMG_multisampled_render_to_texture", "kGL_IMG_texture_compression_pvrtc", "kGL_IMG_texture_format_BGRA8888", "kGL_KHR_blend_equation_advanced", "kGL_KHR_blend_equation_advanced_coherent", "kGL_KHR_debug", "kGL_KHR_texture_compression_astc_ldr", "kGLX_MESA_query_renderer", "kGL_NV_blend_equation_advanced", "kGL_NV_blend_equation_advanced_coherent", "kGL_NV_coverage_sample", "kGL_NV_depth_nonlinear", "kGL_NV_draw_buffers", "kGL_NV_draw_instanced", "kGL_NV_fbo_color_attachments", "kGL_NV_framebuffer_blit", "kGL_NV_framebuffer_multisample", "kGL_NV_packed_float", "kGL_NV_read_buffer", "kGL_NV_sRGB_formats", "kGL_NV_timer_query", "kGL_NV_viewport_array2", "kGL_NVX_gpu_memory_info", "kGL_OES_compressed_ETC1_RGB8_texture", "kGL_OES_copy_image", "kGL_OES_depth24", "kGL_OES_depth_texture", "kGL_OES_depth_texture_cube_map", "kGL_OES_draw_elements_base_vertex", "kGL_OES_element_index_uint", "kGL_OES_fbo_render_mipmap", "kGL_OES_geometry_shader", "kGL_OES_get_program_binary", "kGL_OES_mapbuffer", "kGL_OES_packed_depth_stencil", "kGL_OES_tessellation_shader", "kGL_OES_texture_3D", "kGL_OES_texture_cube_map_array", "kGL_OES_texture_float", "kGL_OES_texture_float_linear", "kGL_OES_texture_half_float", "kGL_OES_texture_half_float_linear", "kGL_OES_texture_npot", "kGL_OES_texture_view", "kGL_OES_vertex_array_object", "kGL_OES_vertex_half_float", "kGL_OVR_multiview", "kGL_OVR_multiview_multisampled_render_to_texture", "kGL_WEBGL_depth_texture", "lBERROR: Invalid DataBufferGLES usage: %d", "#define ATTRIBUTE_IN attribute\n#define VARYING_IN varying\n#define VARYING_OUT varying\n#define FRAG_COLOR gl_FragColor\n#define SAMPLE_TEXTURE_2D texture2D\n", "#define ATTRIBUTE_IN in\n#define VARYING_IN in\n#define VARYING_OUT out\n#define DECLARE_FRAG_COLOR out vec4 fragColor\n#define FRAG_COLOR fragColor\n#define SAMPLE_TEXTURE_2D texture\n", "vec3 LinearToSRGB(vec3 c)\n{\n    return mix(c * 12.92, pow(c, vec3(0.41666)) * 1.055 - vec3(0.055), step(vec3(0.003130), c));\n}\n", "vec4(c.rgb, 1.0)", "vec4(LinearToSRGB(c.rgb), 1.0)", "vec4(LinearToSRGB(c.rgb), c.a)", "#version 150", "#version 300 es", "uvOffsetAndScale", "%s\n%s\nprecision highp float;\nATTRIBUTE_IN vec4 vertex;\nuniform vec4 uvOffsetAndScale;\nVARYING_OUT vec2 texCoord;\nvoid main()\n{\n    gl_Position = vec4(vertex.xy, 0.0, 1.0);\n    texCoord = vertex.zw * uvOffsetAndScale.zw + uvOffsetAndScale.xy;\n}\n", "%s\n%s\nprecision mediump float;\nVARYING_IN vec2 texCoord;\n#ifdef DECLARE_FRAG_COLOR\n    DECLARE_FRAG_COLOR;\n#endif\nuniform sampler2D tex;\n%svoid main()\n{\n    vec4 c = SAMPLE_TEXTURE_2D(tex, texCoord);\n    FRAG_COLOR = %s;\n}\n", "no current context", "GL_INVALID_ENUM: enum argument out of range", "GL_INVALID_VALUE: Numeric argument out of range", "GL_INVALID_OPERATION: Operation illegal in current state", "GL_OUT_OF_MEMORY: Not enough memory left to execute command", "GL_INVALID_FRAMEBUFFER_OPERATION: Framebuffer is not complete or incompatible with command", "GL_STACK_UNDERFLOW_KHR: OpenGL stack underflow", "GL_STACK_OVERFLOW_KHR: OpenGL stack overflow", "Unknown error", "GLSL compilation failed, no infolog provided", "-------- GLSL link error: %s\n\n", "-------- GLSL link failed, no info log provided.", "Sparse textures on OpenGL must be multiple of tile size. Tile size for this format is %ix%i; trying to create texture of size %ix%i", "no-extensions", "glActiveTexture", "glAttachShader", "glBindAttribLocation", "glBindBuffer", "glBindFramebuffer", "glBindRenderbuffer", "glBindTexture", "glBlendEquation", "glBlendEquationSeparate", "glBlendFuncSeparate", "glBufferData", "glBufferSubData", "glCheckFramebufferStatus", "glClear", "glClearColor", "glClearDepthf", "glClearStencil", "glColorMask", "glCompileShader", "glCompressedTexImage2D", "glCompressedTexSubImage2D", "glCopyTexImage2D", "glCopyTexSubImage2D", "glCreateProgram", "glCreateShader", "glCullFace", "glDeleteBuffers", "glDeleteFramebuffers", "glDeleteProgram", "glDeleteRenderbuffers", "glDeleteShader", "glDeleteTextures", "glDepthFunc", "glDepthMask", "glDetachShader", "glDisable", "glDisableVertexAttribArray", "glDrawArrays", "glDrawElements", "glIsEnabled", "glEnable", "glEnableVertexAttribArray", "glFinish", "glFlush", "glFramebufferRenderbuffer", "glGetRenderbufferParameteriv", "glFramebufferTexture2D", "glFramebufferTexture3D", "glFrontFace", "glGenBuffers", "glGenerateMipmap", "glGenFramebuffers", "glGenRenderbuffers", "glGenTextures", "glGetActiveAttrib", "glGetActiveUniform", "glGetAttribLocation", "glGetError", "glGetFramebufferAttachmentParameteriv", "glGetIntegerv", "glGetProgramiv", "glGetProgramInfoLog", "glValidateProgram", "glGetShaderiv", "glGetShaderSource", "glGetShaderInfoLog", "glGetShaderPrecisionFormat", "glGetString", "glGetTexParameteriv", "glGetUniformiv", "glGetUniformLocation", "glGetVertexAttribiv", "glLinkProgram", "glPixelStorei", "glPolygonOffset", "glReadPixels", "glRenderbufferStorage", "glScissor", "glShaderSource", "glStencilFuncSeparate", "glStencilMask", "glStencilOpSeparate", "glTexImage2D", "glTexImage2DMultisample", "glTexParameterf", "glTexParameteri", "glTexParameteriv", "glTexSubImage2D", "glUniform1fv", "glUniform1i", "glUniform1iv", "glUniform1uiv", "glUniform2fv", "glUniform2iv", "glUniform2uiv", "glUniform3fv", "glUniform3iv", "glUniform3uiv", "glUniform4fv", "glUniform4iv", "glUniform4uiv", "glUniformMatrix3fv", "glUniformMatrix4fv", "glUseProgram", "glVertexAttrib4f", "glVertexAttrib4fv", "glVertexAttribPointer", "glViewport", "glGenQueries", "glDeleteQueries", "glBeginQuery", "glEndQuery", "glBindVertexArray", "glIsVertexArray", "glDeleteVertexArrays", "glGenVertexArrays", "glBeginTransformFeedback", "glEndTransformFeedback", "glTransformFeedbackVaryings", "glBindTransformFeedback", "glDeleteTransformFeedbacks", "glGenTransformFeedbacks", "glTexImage3D", "glTexSubImage3D", "glCompressedTexSubImage3D", "glTexStorage2D", "glTexStorage3D", "glBlitFramebuffer", "glRenderbufferStorageMultisample", "glGetStringi", "glGetIntegeri_v", "glMapBufferRange", "glUnmapBuffer", "glFlushMappedBufferRange", "glInvalidateFramebuffer", "glDrawArraysInstanced", "glDrawElementsInstanced", "glCopyBufferSubData", "glDrawBuffers", "glReadBuffer", "glFramebufferTextureLayer", "glFramebufferTexture", "glBindBufferBase", "glGetActiveUniformsiv", "glGetUniformBlockIndex", "glGetUniformIndices", "glGetActiveUniformBlockiv", "glGetActiveUniformBlockName", "glUniformBlockBinding", "glVertexAttribIPointer", "glGetProgramBinary", "glProgramBinary", "glProgramParameteri", "glGenSamplers", "glDeleteSamplers", "glBindSampler", "glSamplerParameteri", "glGetInternalformativ", "glFenceSync", "glClientWaitSync", "glDeleteSync", "glProgramUniform1fv", "glProgramUniform1iv", "glProgramUniform2fv", "glProgramUniform2iv", "glProgramUniform3fv", "glProgramUniform3iv", "glProgramUniform4fv", "glProgramUniform4iv", "glProgramUniformMatrix2fv", "glProgramUniformMatrix3fv", "glProgramUniformMatrix4fv", "glProgramUniformMatrix2x3fv", "glProgramUniformMatrix3x2fv", "glProgramUniformMatrix2x4fv", "glProgramUniformMatrix4x2fv", "glProgramUniformMatrix3x4fv", "glProgramUniformMatrix4x3fv", "glProgramUniform1uiv", "glProgramUniform2uiv", "glProgramUniform3uiv", "glProgramUniform4uiv", "glBindImageTexture", "glDispatchCompute", "glDispatchComputeIndirect", "glGetProgramInterfaceiv", "glGetProgramResourceName", "glGetProgramResourceiv", "glDrawArraysIndirect", "glDrawElementsIndirect", "glMemoryBarrier", "glPatchParameteri", "glCopyImageSubData", "glTexStorage3DMultisample", "glRenderbufferStorageMultisampleEXT", "glFramebufferTexture2DMultisampleEXT", "glRenderbufferStorageMultisampleIMG", "glFramebufferTexture2DMultisampleIMG", "glRenderbufferStorageMultisampleAPPLE", "glResolveMultisampleFramebufferAPPLE", "glRenderbufferStorageMultisampleNV", "glDebugMessageControlKHR", "glDebugMessageCallbackKHR", "glDebugMessageInsertKHR", "glObjectLabelKHR", "glGetObjectLabelKHR", "glPushDebugGroupKHR", "glPopDebugGroupKHR", "glDebugMessageControl", "glDebugMessageCallback", "glDebugMessageInsert", "glObjectLabel", "glGetObjectLabel", "glPushDebugGroup", "glPopDebugGroup", "glPushGroupMarkerEXT", "glPopGroupMarkerEXT", "glLabelObjectEXT", "glGetObjectLabelEXT", "glGenQueriesEXT", "glDeleteQueriesEXT", "glBeginQueryEXT", "glEndQueryEXT", "glGetQueryObjectui64vEXT", "glGetQueryObjectui64vNV", "glTexBufferEXT", "glTexBuffer", "glTextureView", "glTextureViewOES", "glTextureViewEXT", "glTexImage3DOES", "glTexSubImage3DOES", "glBindVertexArrayOES", "glDeleteVertexArraysOES", "glGenVertexArraysOES", "glDrawBuffersEXT", "glDrawBuffersNV", "glReadBufferNV", "glBlitFramebufferNV", "glDiscardFramebufferEXT", "glMapBufferRangeEXT", "glFlushMappedBufferRangeEXT", "glUnmapBufferOES", "glUnmapBufferEXT", "glMapBufferOES", "glGetProgramBinaryOES", "glProgramBinaryOES", "glCopyImageSubDataOES", "glCopyImageSubDataEXT", "glPatchParameteriOES", "glPatchParameteriEXT", "glDrawElementsBaseVertexOES", "glDrawElementsInstancedBaseVertexOES", "glDrawElementsBaseVertexEXT", "glDrawElementsInstancedBaseVertexEXT", "glTexPageCommitmentARB", "glTexPageCommitmentEXT", "glTexStorage2DEXT", "glTexStorage3DEXT", "glBlendBarrierKHR", "glBlendBarrierNV", "glFramebufferTextureMultiviewOVR", "glFramebufferTextureMultisampleMultiviewOVR", "glTexStorage2DMultisample", "glGetTextureParameteriv", "fatal flex scanner internal error--no action found", "out of dynamic memory in yy_create_buffer()", "out of dynamic memory in yy_scan_buffer()", "out of dynamic memory in yy_scan_bytes()", "bad buffer in yy_scan_bytes()", "yyset_lineno called with no buffer", "yyset_column called with no buffer", "fatal flex scanner internal error--end of buffer missed", "fatal error - scanner input buffer overflow", "input in flex scanner failed", "out of dynamic memory in yy_get_next_buffer()", "out of dynamic memory in yyensure_buffer_stack()", "Reading a token: ", "Now at end of input.\n", "Next token is", "Shifting", "syntax error", "Returning to deterministic operation.\n", "On stack %lu, ", "shifting", "Stack %lu now in state #%d\n", "memory exhausted", "Cleanup: discarding lookahead", "Cleanup: popping", "syntax error, unexpected %s", "syntax error, unexpected %s, expecting %s", "syntax error, unexpected %s, expecting %s or %s", "syntax error, unexpected %s, expecting %s or %s or %s", "syntax error, unexpected %s, expecting %s or %s or %s or %s", "$end", "$undefined", "FLOAT", "BOOLEAN", "INTEGER", "IDENTIFIER", "ASSIGNMENT", "QUESTION", "NEQUALS", "FLOAT_CAST", "INT_CAST", "BOOL_CAST", "SWZ1", "SWZ2", "SWZ3", "SWZ4", "$accept", "PROGRAM", "STATEMENTLIST", "STATEMENT", "SWIZZLE", "FUNCTIONCALL", "TERNARYOP", "EXPRESSION", "ASSIGNMENT_EXPR", "-> $$ =", "Reduced stack %lu by rule #%d; action deferred.  Now in state %d.\n", "Merging stack %lu into stack %lu.\n", "Reducing stack %lu by rule %d (line %lu):\n", "   $%d = ", " (unresolved)", "Mismatching base types for binary op", "Ternary op test must have boolean type", "Bin op AND requires boolean inputs", "%s %s (", "nterm", "Stack %lu Entering state %d\n", "Stack %lu dies.\n", "Splitting off stack %lu from %lu.\n", "Removing dead stacks.\n", "Rename stack %lu -> %lu.\n", "Restoring last deleted stack as stack #0.\n", "Cleanup: discarding incompletely merged value for", "Ambiguity detected.\n", "Option 1,\n", "\nOption 2,\n", "syntax is ambiguous", "%*s%s -> <Rule %d, empty>\n", "%*s%s -> <Rule %d, tokens %lu .. %lu>\n", "%*s%s <empty>\n", "%*s%s <tokens %lu .. %lu>\n", "Error: discarding", "Error: popping", "Deleting", "%s unresolved", "%s incomplete", "'()*", "#$%&'()*#$%&'()*", "%&'''()****+,,,,,,,,,,,,,,,,,,,,,,,,,,--", "2018.3/release", "2018.3.0f2 (6e9a27477296)", "arm64-v8a", "fff?", "LeftUpperLeg", "RightUpperLeg", "LeftLowerLeg", "RightLowerLeg", "LeftFoot", "RightFoot", "Spine", "UpperChest", "Neck", "Head", "LeftShoulder", "RightShoulder", "LeftUpperArm", "RightUpperArm", "LeftLowerArm", "RightLowerArm", "LeftToes", "RightToes", "LeftEye", "RightEye", "Spine Front-Back", "Spine Left-Right", "Spine Twist Left-Right", "UpperChest Front-Back", "UpperChest Left-Right", "UpperChest Twist Left-Right", "Neck Nod Down-Up", "Neck Tilt Left-Right", "Neck Turn Left-Right", "Head Nod Down-Up", "Head Tilt Left-Right", "Head Turn Left-Right", "Left Eye Down-Up", "Left Eye In-Out", "Right Eye Down-Up", "Right Eye In-Out", "Jaw Close", "Jaw Left-Right", "Left Upper Leg Front-Back", "Left Upper Leg In-Out", "Left Upper Leg Twist In-Out", "Left Lower Leg Stretch", "Left Lower Leg Twist In-Out", "Left Foot Up-Down", "Left Foot Twist In-Out", "Left Toes Up-Down", "Right Upper Leg Front-Back", "Right Upper Leg In-Out", "Right Upper Leg Twist In-Out", "Right Lower Leg Stretch", "Right Lower Leg Twist In-Out", "Right Foot Up-Down", "Right Foot Twist In-Out", "Right Toes Up-Down", "Left Shoulder Down-Up", "Left Shoulder Front-Back", "Left Arm Down-Up", "Left Arm Front-Back", "Left Arm Twist In-Out", "Left Forearm Stretch", "Left Forearm Twist In-Out", "Left Hand Down-Up", "Left Hand In-Out", "Right Shoulder Down-Up", "Right Shoulder Front-Back", "Right Arm Down-Up", "Right Arm Front-Back", "Right Arm Twist In-Out", "Right Forearm Stretch", "Right Forearm Twist In-Out", "Right Hand Down-Up", "Right Hand In-Out", "RightHand.", "TDOF", "ARCoreManager GLES Main Thread Context Destruction Error: %d \"%s\"\n", "ARCoreManager::FireEarlyUpdate() failed to create a shared secondary main thread GLES context for use with the multi-threaded renderer.", "ARCoreManager::FireEarlyUpdate() failed to set secondary main thread GLES context as current..", "ARCoreManager::CreateExternalTexture() failed.", "Unity-ApiKey", "Content-Length", "Unity-Accept-Encoding", "http-filesystem-enable", "http-filesystem-prefix", "http-filesystem-apikey", "http-filesystem-pubkey", "Unity-Content-Encoding", "ReceivedMessagesBus", "SentMessagesBus", "SentPacketBus", "Received fragmented message allocator", "Worker events allocator", "web sockets  has not been supported for this platform", "Invalid sockaddr object", "network simulation allowed only for editor or developer build or in debug mode only", "Max message size cannot be greater than %d", "Cannot send message of 0 bytes length", "This function should be called with kPollReactor model only", "maximum hosts connections cannot be 0", "maximum hosts cannot exceed {%d}", "maximum hosts {%d} has been already reached", "web socket server has not been supported for this platform", "host id {%d} out of bound or host has been already removed", "web socket host doesn't exist", "the function called has not been supported for web sockets communication", "host id out of bound id {%d} max id should be greater 0 and less than {%d}", "host id {%d} invoked wrong io operation and will be deleted", "host id {%d} has been already deleted", "Topology default config PacketSize {%d} is greater than global config MaxPacketSize {%d} and will be decreased to {%d}", "Topology exception config {%d} PacketSize {%d} is greater than global config MaxPacketSize {%d} and will be decreased to {%d}", "check parameters, all parameters should be > 0 and broadcastPort < 0xFFFF, key, version, subversion < 0xFFFFFFFF", "By some reason host doesn't have broadcast addreses", "Broadcast message is too long to be sent", "Broadcast discovery has been already running. Stop discovery first before repeat this call", "Cannot open broadcasting socket", "Cannot set broadcast option for socket", "Broadcasting socket doesn't exist", "Host doesn't exist", "NetworkIdentity", "UNetStaticUpdate", "Before using the library you should call Init() and do not forget to call Shutdown() afterwards", "Network layer will still work after application suspends", "topology is not defined", "array come in {%p}", "SimPacketPool", "packet length too big; packet length {%d}, max length {%zu}", "unetworker %d", "(JLjava/lang/String;Ljava/util/Map;Ljava/lang/String;ZI)V", "setupTransferSettings", "(JZZ)V", "clearCookieCache", "(Ljava/lang/String;Ljava/lang/String;)V", "TransportAndroid::initJava / GetMethodID failed", "headerCallback", "(JLjava/lang/String;Ljava/lang/String;)V", "uploadCallback", "(JLjava/nio/ByteBuffer;)I", "contentLengthCallback", "(JI)V", "downloadCallback", "(JLjava/nio/ByteBuffer;I)Z", "validateCertificateCallback", "(J[B)Z", "responseCodeCallback", "errorCallback", "(JILjava/lang/String;)V", "TransportAndroid::initJava / RegisterNatives failed", "ClearCookieCache", "DoRequest", "POST", "HEAD", "java/util/HashMap", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "Failed to open file %s", "sec-", "proxy-", "()<>@,;:\\\"/[]?={}", "User-Agent", "UnityWebRequest redirect failed: ", "Accept-Charset", "Access-Control-Request-Headers", "Access-Control-Request-Method", "Expect", "Keep-Alive", "Referer", "Trailer", "Transfer-Encoding", "Upgrade", "X-Unity-Version", "Accept-Language", "Unknown Error", "Backend Initialization Error", "Unsupported Protocol", "Malformed URL", "Cannot resolve proxy", "Cannot resolve destination host", "Cannot connect to destination host", "Access denied", "Generic/unknown HTTP error", "Unable to write data", "Unable to read data", "Request timeout", "Error during HTTP POST transmission", "Unable to complete SSL connection", "Request aborted", "Redirect limit exceeded", "Received no data in response", "Destination host does not support SSL", "Failed to transmit data", "Failed to receive data", "Destination host has an erroneous SSL certificate", "Unable to load SSL Cipher for verification", "SSL CA certificate error", "Unrecognized content-encoding", "Login failed", "SSL shutdown failed", "Redirect limit is invalid", "Encountered invalid redirect (missing Location header?)", "Cannot modify request at this time", "Header name contains invalid characters", "Header value contains invalid characters", "Cannot override system-specified headers", "Request already transmitted", "Invalid HTTP Method", "Not implemented", "No Internet Connection", "Switching Protocols", "Accepted", "Non-Authoritative Information", "No Content", "Reset Content", "Partial Content", "Multi-Status", "Already Reported", "IM Used", "Multiple Choices", "Moved Permanently", "See Other", "Not Modified", "Use Proxy", "Temporary Redirect", "Permanent Redirect", "Bad Request", "Unauthorized", "Payment Required", "Forbidden", "Not Found", "Method Not Allowed", "Not Acceptable", "Proxy Authentication Required", "Request Timeout", "Conflict", "Gone", "Length Required", "Precondition Failed", "Payload Too Large", "URI Too Long", "Unsupported Media Type", "Range Not Satisfiable", "Expectation Failed", "I'm a teapot", "Misdirected Request", "Unprocessable Entity", "Failed Dependency", "Upgrade Required", "Precondition Required", "Too Many Requests", "Request Header Fields Too Large", "Unavailable For Legal Reasons", "Internal Server Error", "Not Implemented", "Bad Gateway", "Service Unavailable", "Gateway Timeout", "HTTP Version Not Supported", "Variant Also Negotiates", "Insufficient Storage", "Loop Detected", "Not Extended", "Network Authentication Required", "Unknown HTTP status", "UnityWebRequest has already been sent; cannot begin sending the request again", "UnityWebRequest has already been sent and its redirect limit cannot be altered", "Cannot set a redirect limit higher than %d redirects", "Cannot create web request without initializing the system", "Redirect to %s expects a GET, but DownloadHandler is not set", "Content-Type", "application/octet-stream", "localhost", "Error running RefreshTile for previous Tile", "Error running GetTileData for new Tile", "Error running GetTileAnimationData for new Tile", "Error running StartUp for Tile.", "333?", "minMaxState", "minColor", "maxColor", "maxGradient", "minGradient", "ParticleSystemForceField", "m_Parameters", "ParticleSystemForceFieldParameters", "m_Shape", "m_StartRange", "m_EndRange", "m_GravityFocus", "m_RotationRandomness", "m_DirectionCurveX", "m_DirectionCurveY", "m_DirectionCurveZ", "m_GravityCurve", "m_RotationSpeedCurve", "m_RotationAttractionCurve", "m_DragCurve", "m_VectorField", "m_VectorFieldSpeedCurve", "m_VectorFieldAttractionCurve", "m_MultiplyDragByParticleSize", "m_MultiplyDragByParticleVelocity", "MinMaxCurve", "PPtr<Texture3D>", "Remapping between formats %d -> %d is not supported", "VK_NOT_READY", "VK_TIMEOUT", "VK_EVENT_SET", "VK_EVENT_RESET", "VK_INCOMPLETE", "VK_ERROR_OUT_OF_HOST_MEMORY", "VK_ERROR_OUT_OF_DEVICE_MEMORY", "VK_ERROR_INITIALIZATION_FAILED", "VK_ERROR_DEVICE_LOST", "VK_ERROR_MEMORY_MAP_FAILED", "VK_ERROR_LAYER_NOT_PRESENT", "VK_ERROR_EXTENSION_NOT_PRESENT", "VK_ERROR_FEATURE_NOT_PRESENT", "VK_ERROR_INCOMPATIBLE_DRIVER", "VK_ERROR_TOO_MANY_OBJECTS", "VK_ERROR_FORMAT_NOT_SUPPORTED", "VK_ERROR_SURFACE_LOST_KHR", "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR", "VK_SUBOPTIMAL_KHR", "VK_ERROR_OUT_OF_DATE_KHR", "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR", "VK_ERROR_VALIDATION_FAILED_EXT", "VK_ERROR_INVALID_SHADER_NV", "./Runtime/GfxDevice/vulkan/VKDescriptorSetProvider.cpp", "Warning: Unsupported format %d %d, will likely crash!\n", "unity_StereoMatrixP", "unity_StereoMatrixV", "unity_StereoMatrixInvV", "unity_StereoMatrixVP", "unity_StereoCameraProjection", "unity_StereoCameraInvProjection", "unity_StereoWorldToCamera", "unity_StereoCameraToWorld", "unity_StereoWorldSpaceCameraPos", "unity_StereoScaleOffset", "SetTextures: missing texture ID %d", "SetRandomWriteTargetTexture: missing UAV ID %d", "SetRandomWriteTargetBuffer: missing UAV ID %d", "Vulkan: Blending not supported for format %d\n", "Error: Vertex input binding stride (%d) is above the device limit (%d)\n", "Shader requires %d input attachments, but the subpass only has %d", "libvulkan.so", "vkGetInstanceProcAddr", "vkCreateInstance", "vkDestroyInstance", "vkEnumerateInstanceExtensionProperties", "vkEnumerateInstanceLayerProperties", "vkEnumeratePhysicalDevices", "vkGetPhysicalDeviceProperties", "Failed to load bootstrap Vulkan functions.", "vkGetDeviceProcAddr", "vkGetPhysicalDeviceFeatures", "vkGetPhysicalDeviceFormatProperties", "vkGetPhysicalDeviceImageFormatProperties", "vkGetPhysicalDeviceQueueFamilyProperties", "vkGetPhysicalDeviceMemoryProperties", "vkCreateDevice", "vkDestroyDevice", "vkEnumerateDeviceExtensionProperties", "vkEnumerateDeviceLayerProperties", "vkGetDeviceQueue", "vkQueueSubmit", "vkQueueWaitIdle", "vkDeviceWaitIdle", "vkAllocateMemory", "vkFreeMemory", "vkMapMemory", "vkUnmapMemory", "vkFlushMappedMemoryRanges", "vkInvalidateMappedMemoryRanges", "vkGetDeviceMemoryCommitment", "vkBindBufferMemory", "vkBindImageMemory", "vkGetBufferMemoryRequirements", "vkGetImageMemoryRequirements", "vkGetImageSparseMemoryRequirements", "vkGetPhysicalDeviceSparseImageFormatProperties", "vkQueueBindSparse", "vkCreateFence", "vkDestroyFence", "vkResetFences", "vkGetFenceStatus", "vkWaitForFences", "vkCreateSemaphore", "vkDestroySemaphore", "vkCreateEvent", "vkDestroyEvent", "vkGetEventStatus", "vkSetEvent", "vkResetEvent", "vkCreateQueryPool", "vkDestroyQueryPool", "vkGetQueryPoolResults", "vkCreateBuffer", "vkDestroyBuffer", "vkCreateBufferView", "vkDestroyBufferView", "vkCreateImage", "vkDestroyImage", "vkGetImageSubresourceLayout", "vkCreateImageView", "vkDestroyImageView", "vkCreateShaderModule", "vkDestroyShaderModule", "vkCreatePipelineCache", "vkDestroyPipelineCache", "vkGetPipelineCacheData", "vkMergePipelineCaches", "vkCreateGraphicsPipelines", "vkCreateComputePipelines", "vkDestroyPipeline", "vkCreatePipelineLayout", "vkDestroyPipelineLayout", "vkCreateSampler", "vkDestroySampler", "vkCreateDescriptorSetLayout", "vkDestroyDescriptorSetLayout", "vkCreateDescriptorPool", "vkDestroyDescriptorPool", "vkResetDescriptorPool", "vkAllocateDescriptorSets", "vkFreeDescriptorSets", "vkUpdateDescriptorSets", "vkCreateFramebuffer", "vkDestroyFramebuffer", "vkCreateRenderPass", "vkDestroyRenderPass", "vkGetRenderAreaGranularity", "vkCreateCommandPool", "vkDestroyCommandPool", "vkResetCommandPool", "vkAllocateCommandBuffers", "vkFreeCommandBuffers", "vkBeginCommandBuffer", "vkEndCommandBuffer", "vkResetCommandBuffer", "vkCmdBindPipeline", "vkCmdSetViewport", "vkCmdSetScissor", "vkCmdSetLineWidth", "vkCmdSetDepthBias", "vkCmdSetBlendConstants", "vkCmdSetDepthBounds", "vkCmdSetStencilCompareMask", "vkCmdSetStencilWriteMask", "vkCmdSetStencilReference", "vkCmdBindDescriptorSets", "vkCmdBindIndexBuffer", "vkCmdBindVertexBuffers", "vkCmdDraw", "vkCmdDrawIndexed", "vkCmdDrawIndirect", "vkCmdDrawIndexedIndirect", "vkCmdDispatch", "vkCmdDispatchIndirect", "vkCmdCopyBuffer", "vkCmdCopyImage", "vkCmdBlitImage", "vkCmdCopyBufferToImage", "vkCmdCopyImageToBuffer", "vkCmdUpdateBuffer", "vkCmdFillBuffer", "vkCmdClearColorImage", "vkCmdClearDepthStencilImage", "vkCmdClearAttachments", "vkCmdResolveImage", "vkCmdSetEvent", "vkCmdResetEvent", "vkCmdWaitEvents", "vkCmdPipelineBarrier", "vkCmdBeginQuery", "vkCmdEndQuery", "vkCmdResetQueryPool", "vkCmdWriteTimestamp", "vkCmdCopyQueryPoolResults", "vkCmdPushConstants", "vkCmdBeginRenderPass", "vkCmdNextSubpass", "vkCmdEndRenderPass", "vkCmdExecuteCommands", "vkDestroySurfaceKHR", "vkGetPhysicalDeviceSurfaceSupportKHR", "vkGetPhysicalDeviceSurfaceCapabilitiesKHR", "vkGetPhysicalDeviceSurfaceFormatsKHR", "vkGetPhysicalDeviceSurfacePresentModesKHR", "vkCreateSwapchainKHR", "vkDestroySwapchainKHR", "vkGetSwapchainImagesKHR", "vkAcquireNextImageKHR", "vkQueuePresentKHR", "vkGetPhysicalDeviceDisplayPropertiesKHR", "vkGetPhysicalDeviceDisplayPlanePropertiesKHR", "vkGetDisplayPlaneSupportedDisplaysKHR", "vkGetDisplayModePropertiesKHR", "vkCreateDisplayModeKHR", "vkGetDisplayPlaneCapabilitiesKHR", "vkCreateDisplayPlaneSurfaceKHR", "vkCreateSharedSwapchainsKHR", "vkCreateAndroidSurfaceKHR", "vkGetImageMemoryRequirements2KHR", "vkGetBufferMemoryRequirements2KHR", "vkGetImageSparseMemoryRequirements2KHR", "Mali-T", "Vulkan API version %d.%d.%d\n", "Vulkan vendor=[%s] id=[%x]\n", "Vulkan renderer=[%s] id=[%x]\n", "Vulkan device type %d\n", "Vulkan driverversion=[%s] uint=[%d]\n", "Vulkan %d.%d.%d [%s]", "VK_EXT_debug_marker", "vulkan-disable-secondary-commandbuffers", "vulkan-sw-cmdbuf", "./Runtime/GfxDevice/vulkan/VKSwapChain.cpp", "Vulkan Submission Thread", "./Runtime/GfxDevice/vulkan/VKTaskExecutor.cpp", "Stylus", "Touchscreen", "Touchpad", "Mouse", "AndroidSensor", "product", "manufacturer", "deviceDescriptor", "productId", "vendorId", "isVirtual", "motionAxes", "inputSources", "sensorType", "minDelay", "Disable this warning", "CollectGPUSamples", "ArchiveRedirect", "Unable to open archive file for writing: '%s'", "Failed to close archive file after conversion", "Unable to open archive file for writing: '%s', error: %d", "Unable to reserve header in the archive file: '%s'", "Unable to process final block of to archive file: '%s'", "Failed to close temporary archive file: '%s'", "Unable to open final archive file for writing: %s", "Unable to write directory to archive file: '%s'", "Unable to open temporary archive file for reading: '%s'", "Copying data failed when creating archive file: '%s'", "Unable to seek archive file: '%s'", "Unable to write header to archive file: '%s'", "Mismatching archive size: '%s'. Expected %llu, got %llu", "Failed to close archive file: '%s'", "Node '%s' already exists in the archive", "Node '%s' overlaps with existing node '%s' in the archive", "Compression buffer must not be used for the streamed block!", "Failed to read data from file '%s' when adding to the archive '%s'!", "Failed to write compressed chunk to the archive '%s'! Error: %d", "Failed to compress stream when creating archive '%s'!", "Failed to write compressed stream to the archive '%s'!", "BeginBlock must be called before adding any data to the archive '%s'!", "UnityFS", "Unable to read header from archive file: %s", "UnityWeb", "Unable to open archive file: %s", "memarchive%u", "5.x.x", "UnityRaw", "UnityArchive", "max-num-loops-no-job-before-going-idle", "JobQueue::ResolveDependency should no longer be used. (-2)", "JobQueue::ResolveDependency should no longer be used. (-1)", "JobQueue::CompleteManualJobFenceGroup tag changed on another thread", "JobQueue::CompleteManualJobFenceGroup was called on a fence that has already completed", "JobQueue::CompleteManualJobFenceGroup was called on a non-manual JobFence", "JobQueue::CompleteManualJobFenceGroup was called on a fence that has already completed.", "{0}.{1} {2}", "Illegal offset/size in BeginBufferWrite()", "Gfx command not handled: %d (Last command: %d)", "DistortMesh", "RT%sEyeTexture%s%d", "RT%sEyeTextureDoubleWide%d", "RT%sEyeTextureArray%d", "The assigned VR depth buffer format is invalid.  Defaulting to a 24 bit depth buffer.", "IsTracked", "Device - Position", "DevicePosition", "Device - Rotation", "DeviceRotation", "Device - Velocity", "DeviceVelocity", "Device - AngularVelocity", "DeviceAngularVelocity", "Device - Acceleration", "DeviceAcceleration", "Device - AngularAcceleration", "DeviceAngularAcceleration", "LeftEye - Position", "LeftEyePosition", "LeftEye - Rotation", "LeftEyeRotation", "LeftEye - Velocity", "LeftEyeVelocity", "LeftEye - AngularVelocity", "LeftEyeAngularVelocity", "LeftEye - Acceleration", "LeftEyeAcceleration", "LeftEye - AngularAcceleration", "LeftEyeAngularAcceleration", "RightEye - Position", "RightEyePosition", "RightEye - Rotation", "RightEyeRotation", "RightEye - Velocity", "RightEyeVelocity", "RightEye - AngularVelocity", "RightEyeAngularVelocity", "RightEye - Acceleration", "RightEyeAcceleration", "RightEye - AngularAcceleration", "RightEyeAngularAcceleration", "CenterEye - Position", "CenterEyePosition", "CenterEye - Rotation", "CenterEyeRotation", "CenterEye - Velocity", "CenterEyeVelocity", "CenterEye - AngularVelocity", "CenterEyeAngularVelocity", "CenterEye - Acceleration", "CenterEyeAcceleration", "CenterEye - AngularAcceleration", "CenterEyeAngularAcceleration", "Axis%d", "Button%d", "vr_active_controllers", "deviceStatus", "Calling InputTracking.GetLocalPosition(XRNode) with a non-singleton node.  Please use InputTracking.GetNodeStates to retrieve variable quantity XRNode types.", "Calling InputTracking.GetLocalRotation(XRNode) with a non-singleton node.  Please use InputTracking.GetNodeStates to retrieve variable quantity XRNode types.", "VRDevice %s cannot be unloaded on this platform. Requested VRDevice %s will not be loaded.", "VRDevice %s cannot be disabled on this platform.", "Invalid request to load VR Device %s that is already loaded. This might cause the device to unload on some device configurations.", "[VRDevice] Successfully created device %s.\n", "./Modules/Audio/Public/sound/SoundChannel.cpp", "fmodchannel->getUserData((void**)&userData)", "fmodchannel->setUserData(NULL)", "SoundChannelInstance::SoundChannelInstance(SoundHandle, bool)", "virtual SoundChannelInstance::~SoundChannelInstance()", "void SoundChannelInstance::SetFMODChannel(FMOD::Channel *)", "fmodchannel->setUserData(&m_UserData)", "fmodchannel->setCallback(FMODChannelCallback)", "fmodchannel->getFrequency(&m_BaseFrequency)", "FMOD_RESULT SoundChannelInstance::getDelay(FMOD_DELAYTYPE, unsigned int *, unsigned int *)", "FMOD_RESULT SoundChannelInstance::isPlaying(bool *)", "m_FMODChannel->isPlaying(playing)", "FMOD_RESULT SoundChannelInstance::set3DAttributes(const FMOD_VECTOR *, const FMOD_VECTOR *)", "m_FMODChannel->set3DAttributes(pos, vel)", "FMOD_RESULT SoundChannelInstance::set3DConeOrientation(FMOD_VECTOR *)", "m_FMODChannel->set3DConeOrientation(orientation)", "FMOD_RESULT SoundChannelInstance::get3DConeOrientation(FMOD_VECTOR *)", "m_FMODChannel->get3DConeOrientation(orientation)", "FMOD_RESULT SoundChannelInstance::set3DConeSettings(float, float, float)", "m_FMODChannel->set3DConeSettings(insideconeangle, outsideconeangle, outsidevolume)", "FMOD_RESULT SoundChannelInstance::set3DMinMaxDistance(float, float)", "m_FMODChannel->set3DMinMaxDistance(minDist, maxDist)", "FMOD_RESULT SoundChannelInstance::set3DPanLevel(float)", "m_FMODChannel->set3DPanLevel(panlevel)", "FMOD_RESULT SoundChannelInstance::set3DSpread(float)", "m_FMODChannel->set3DSpread(spread)", "FMOD_RESULT SoundChannelInstance::setCallback(FMOD_CHANNEL_CALLBACK)", "m_FMODChannel->setCallback(callback)", "FMOD_RESULT SoundChannelInstance::setChannelGroup(FMOD::ChannelGroup *)", "m_FMODChannel->setChannelGroup(group)", "FMOD_RESULT SoundChannelInstance::setDelay(FMOD_DELAYTYPE, unsigned int, unsigned int)", "m_FMODChannel->setDelay(delaytype, delayhi, delaylo)", "FMOD_RESULT SoundChannelInstance::setMute(bool)", "m_FMODChannel->setMute(mute)", "FMOD_RESULT SoundChannelInstance::setPan(float)", "m_FMODChannel->setPan(pan)", "FMOD_RESULT SoundChannelInstance::setPriority(int)", "m_FMODChannel->setPriority(priority)", "FMOD_RESULT SoundChannelInstance::setReverbProperties(FMOD_REVERB_CHANNELPROPERTIES *)", "m_FMODChannel->setReverbProperties(reverbproperties)", "FMOD_RESULT SoundChannelInstance::getReverbProperties(FMOD_REVERB_CHANNELPROPERTIES *)", "m_FMODChannel->getReverbProperties(reverbproperties)", "FMOD_RESULT SoundChannelInstance::isVirtual(bool *)", "m_FMODChannel->isVirtual(isVirtual)", "FMOD_RESULT SoundChannelInstance::GetPositionPCM(unsigned int *)", "m_FMODChannel->getPosition(position_pcm, FMOD_TIMEUNIT_PCM)", "FMOD_RESULT SoundChannelInstance::GetPositionMS(unsigned int *)", "m_FMODChannel->getPosition(position_ms, FMOD_TIMEUNIT_MS)", "FMOD_RESULT SoundChannelInstance::SetPositionPCM(unsigned int)", "FMOD_RESULT SoundChannelInstance::SetLoop(bool)", "m_FMODChannel->setMode(loop ? FMOD_LOOP_NORMAL : FMOD_LOOP_OFF)", "void SoundChannelInstance::ApplyBufferedParameters()", "void SoundChannelInstance::Stop()", "m_FMODChannel->stop()", "void SoundChannelInstance::UpdateVolume()", "m_FMODChannel->setVolume(mixVolume)", "void SoundChannelInstance::UpdatePitch()", "m_FMODChannel->setFrequency(m_Pitch * m_DopplerPitch * m_BaseFrequency)", "void SoundChannelInstance::UpdatePauseState()", "m_FMODChannel->setPaused(paused)", "void SoundChannelInstance::ParameterBuffer::Apply(FMOD::Channel *)", "channel->setMute(mute)", "channel->setCallback(callback)", "channel->setPosition(position_pcm, FMOD_TIMEUNIT_PCM)", "channel->setChannelGroup(group)", "channel->setPriority(priority)", "channel->setReverbProperties(&reverbproperties)", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_START, delayhi[FMOD_DELAYTYPE_DSPCLOCK_START], delaylo[FMOD_DELAYTYPE_DSPCLOCK_START])", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_END, delayhi[FMOD_DELAYTYPE_DSPCLOCK_END], delaylo[FMOD_DELAYTYPE_DSPCLOCK_END])", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_PAUSE, delayhi[FMOD_DELAYTYPE_DSPCLOCK_PAUSE], delaylo[FMOD_DELAYTYPE_DSPCLOCK_PAUSE])", "channel->setPan(pan)", "channel->set3DAttributes(&pos, &vel)", "channel->set3DConeOrientation(&orientation)", "channel->set3DConeSettings(insideconeangle, outsideconeangle, outsidevolume)", "channel->set3DMinMaxDistance(minDist, maxDist)", "channel->set3DPanLevel(panlevel)", "channel->set3DSpread(spread)", "void SoundChannelInstance::Update()", "Function %s may only be called from main thread!", "DbgBreak: ", "SoundHandle::Instance::~Instance()", "./Modules/Audio/Public/sound/SoundManager.cpp", "m_FSB->release()", "m_Sound->release()", "void SoundHandle::Instance::ReleaseIfNotReferenced()", "void SoundHandle::Instance::Dispose()", "void SoundHandle::Instance::UpdateLoadState()", "m_Sound->setUserData(&m_UserData)", "SoundChannel SoundHandle::Instance::CreateChannel(SoundHandle &, bool)", "Error: Trying to play disposed sound!\n", "Streaming system overload -- deferring playback. FMOD Error: %s", "unsigned int SoundHandle::Instance::GetMemoryInfoInternal(bool) const", "m_FSB->getMemoryInfo(FMOD_MEMORY_ALL, 0, &size, NULL)", "m_Sound->getMemoryInfo(FMOD_MEMORY_ALL, 0, &size, NULL)", "SoundHandle::LoadState SoundHandleAPI::GetLoadState() const", "int SoundHandleAPI::GetMusicChannelCount() const", "bool SoundHandleAPI::SetData(const float *, unsigned int, unsigned int)", "Cannot set data on streamed samples. If the AudioClip was created via AudioClip.Create and no PCM read callback was provided, the 'stream' argument must be false. For a disk-based AudioClip changing the load type to DecompressOnLoad on the AudioClip will allow modification of the data.", "Cannot set data on shared sample", "instance->m_Sound->getFormat(NULL, &format, &numChannels, &bitsPerSample)", "Cannot set data on compressed samples. Changing the load type to DecompressOnLoad on the AudioClip will fix this.", "instance->m_Sound->getLength(&clipSampleCount, FMOD_TIMEUNIT_PCM)", "Data too long to fit the audioclip: %s. %i sample(s) discarded", "[UNLOADED]", "result = instance->m_Sound->lock(offsetBytes, lengthBytes, &ptr1, &ptr2, &len1, &len2)", "instance->m_Sound->unlock(ptr1, ptr2, len1, len2)", "bool SoundHandleAPI::GetData(float *, unsigned int, unsigned int) const", "Cannot get data from streamed samples. If the AudioClip was created via AudioClip.Create and no PCM read callback was provided, the 'stream' argument must be false. For a disk-based AudioClip changing the load type to DecompressOnLoad on the AudioClip will allow modification of the data.", "Cannot get data on compressed samples. Changing the load type to DecompressOnLoad on the AudioClip will fix this.", "Data longer than the AudioClip: %s. %i sample(s) copied", "instance->m_Sound->getLength(&totalLengthBytes, FMOD_TIMEUNIT_PCMBYTES)", "Array can not hold the number of samples (%d)", "unsigned int SoundHandleAPI::GetLengthPCM() const", "instance->m_Sound->getLength(&length, FMOD_TIMEUNIT_PCM)", "float SoundHandleAPI::GetLengthMS() const", "instance->m_Sound->getLength(&length, FMOD_TIMEUNIT_MS)", "int SoundHandleAPI::GetNumChannels() const", "instance->m_Sound->getFormat(NULL, NULL, &channels, NULL)", "int SoundHandleAPI::GetBitsPerSample() const", "instance->m_Sound->getFormat(NULL, NULL, NULL, &bits)", "float SoundHandleAPI::GetFrequency() const", "instance->m_Sound->getDefaults(&frequency, NULL, NULL, NULL)", "unsigned int SoundHandleAPI::GetMemoryInfo(bool) const", "SoundHandle::~SoundHandle()", "void SoundHandle::operator=(const SoundHandle &)", "void SoundHandle::Release()", "SoundChannel SoundHandle::CreateChannel(bool)", "SoundManager::SoundManager()", "SoundManager::~SoundManager()", "Error: Cannot create FMOD::Sound instance for resource %s, (%s)", "SoundHandle SoundManager::IntegrateFMODSound(SoundHandle::Instance *, const StreamedResource &, UInt32, int, SoundHandle::LoadState)", "instance->m_Sound->setUserData(&instance->m_UserData)", "SoundHandle SoundManager::GetHandle(const StreamedResource &, int, FMOD_MODE, UInt32, SampleClip *, bool)", "SoundHandle SoundManager::GetHandleFromFMODSound(SoundHandle::Instance *, UInt32, SampleClip *)", "FMOD_RESULT SoundManager::CreateSoundInternal(const char *, FMOD_MODE, FMOD_CREATESOUNDEXINFO *, SoundHandle &, UInt32, SampleClip *)", "void SoundManager::UpdateChannels()", "void SoundManager::Update()", "void SoundManager::DisposeSound(SoundHandle::Instance *)", "void SoundManager::FlushDisposedSounds()", "bool SoundManager::AwaitLoading(SoundHandle::Instance *)", "void SoundManager::RegisterModifiedClip(SampleClip *)", "void SoundManager::UnloadClip(SampleClip *)", "static void SoundManager::OnExitPlayModeStatic()", "static void SoundManager::OnBeforeDomainUnloadStatic()", "SoundManager *GetSoundManager()", "SoundHandleAPI *SoundHandle::operator->() const", "sound->getNumSubSounds(&numSubSounds)", "Conversion from this format NOT supported", "static const char *SoundUserDataGeneric::GetUserDataString() [T = SoundChannelInstance]", "static const char *SoundUserDataGeneric::GetUserDataString() [T = SoundHandle::Instance]", "MuteGroup", "FMOD error in %s line %d: code=%s (%d)\n", "./Modules/Audio/Public/mixer/audiomixerruntime.cpp", "Send", "Duck Volume", "Sidechain threshold above which ducking is applied", "Ducking ratio", "Attack time for sidechain level detector", "Release time for sidechain level detector", "Make-up gain", "Sharpness of compression curve knee", "Sidechain/source mix. If set to 100% the compressor detects level entirely from sidechain signal.", "EmbeddedFader", "Audio effect %s could not be found. Check that the project contains the correct native audio plugin libraries and that the importer settings are set up correctly.", "Could not initialise internal audio effect", "AudioMixer: Instantiation of DSP effect of type %d failed. The target platform does not seem to support it.\n", "./Modules/Audio/Public/Director/AudioClipPlayable.cpp", "m_Channel.SetPositionPCM(totalSeekPCM)", "m_Channel.setChannelGroup(m_ChannelGroup)", "m_Channel.SetLoop(m_Looped)", "m_Channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_START, Unity_HiWord(startSampleAbsolute), Unity_LoWord(startSampleAbsolute))", "m_Channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_END, Unity_HiWord(pauseSampleAbsolute), Unity_LoWord(pauseSampleAbsolute))", "m_Channel.GetFMODChannel()->getFrequency(&currentFreq)", "m_Channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_END, Unity_HiWord(newClockExpiry), Unity_LoWord(newClockExpiry))", "m_Channel.SetPositionPCM(seekTimePCM)", "m_Channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_END, Unity_HiWord(dspClock), Unity_LoWord(dspClock))", "m_Channel->set3DPanLevel(0.0f)", "m_Channel->setPan(0.0f)", "m_Channel->getReverbProperties(&props)", "m_Channel->setReverbProperties(&props)", "fmodSystem->getMasterChannelGroup(&masterGroup)", "./Modules/Audio/Public/Director/AudioMixerPlayable.cpp", "fmodSystem->createDSPByType(FMOD_DSP_TYPE_MIXER, &m_DSP)", "m_DSP->remove()", "m_ChannelGroup->addDSP(m_DSP, NULL)", "m_DSP->getNumOutputs(&outputCount)", "m_DSP->getOutput(0, NULL, &m_DSPConnection)", "m_DSPConnection->setMix(attenuation)", "./Modules/Audio/Public/Director/AudioPlayable.cpp", "AudioPlayable Group", "data.fmodSystem->createChannelGroup(\"AudioPlayable Group\", &newGroup)", "targetChannelGroup->addGroup(newGroup)", "curr->m_ChannelGroup->getParentGroup(&existingParent)", "targetChannelGroup->addGroup(curr->m_ChannelGroup)", "group->getUserData(&check)", "group->setUserData(CHANNELGROUP_REFRESH_CLEARED)", "curr->m_ChannelGroup->setAudibilityFactor(data.chainWeight)", "curr->m_ChannelGroup->release()", "m_ChannelGroup->setUserData(CHANNELGROUP_REFRESH_REQUIRED)", "AudioPlayableOutput::OnApplyFMOD: Could not get FMOD System.", "./Modules/Audio/Public/Director/AudioPlayableOutput.cpp", "discardGroups[i]->release()", "group->getDSPHead(&headDSP)", "headDSP->getNumOutputs(&outputCount)", "headDSP->getOutput(0, NULL, &outputConnection)", "outputConnection->setMix(mix)", "./Modules/Audio/Public/AudioCustomFilter.cpp", "GetAudioManager().GetFMODSystem()->createDSP(&dspdesc, &m_DSP)", "AudioDistortionFilter", "AudioEchoFilter", "m_DistortionLevel", "m_DecayRatio", "m_WetMix", "not ", "Playback of audio clip not yet possible; headers are %sdone, %d/? (%.2f%%) bytes downloaded but size is still not known", "Trying to call %s on non-legacy AudioClip!", "static FMOD_RESULT AudioClip::moviepcmread(FMOD_SOUND *, void *, unsigned int)", "static FMOD_RESULT AudioClip::ScriptPCMReadCallback(FMOD_SOUND *, void *, unsigned int)", "static FMOD_RESULT AudioClip::ScriptPCMSetPositionCallback(FMOD_SOUND *, int, unsigned int, FMOD_TIMEUNIT)", "Dynamically unloading a sound that hasn't finished loading yet. If you see this message a lot, some scripts may be doing too many dynamic load/unload operations which will negatively affect performance.", "./Modules/Audio/Public/AudioClip.cpp", "channel->setDelay(FMOD_DELAYTYPE_DSPCLOCK_START, Unity_HiWord(startTime), Unity_LoWord(startTime))", "At present background loading of tracked music files is not supported and will therefore block the system. Consider changing the load type of the AudioClip such that it is loaded when the scene is initialized.", "Unable to determine the audio type from the URL (%s). Please specify the type.", "Tracker files (XM/IT/MOD/S3M) cannot be streamed in realtime but must be fully downloaded before they can play.", "Cannot create an AudioClip with a sample frequency less than 1000 Hz (input: %d); frequency capped to 1000 Hz", "MoviePlayback *AudioClip::GetMoviePlayback() const", "bool AudioClip::QueueAudioData(const void *const, unsigned int)", "bool AudioClip::GetQueuedAudioData(void **, unsigned int)", "void AudioClip::ClearQueue()", "GetSoundManager()->CreateSoundInternal(GetName(), mode, &exinfo, m_Sound, 0, this)", "GameObject has both an AudioSource and an AudioListener attached. While built-in filters like lowpass are instantiated separately, the custom script DSP filter components may only be used by either the AudioSource or AudioListener at a time. In this case it was attached to the AudioSource firstly, so it remains connected to that.", "./Modules/Audio/Public/AudioListener.cpp", "GetAudioManager().GetChannelGroup_FX_IgnoreVolume()->addDSP(dsp, 0)", "0x%p", "Error obtaining IWWWStream from formatted string: %s", "SampleClip", "AudioListener", "m_LoadType", "m_Frequency", "m_BitsPerSample", "m_IsTrackerFormat", "m_Ambisonic", "m_SubsoundIndex", "m_PreloadAudioData", "m_LoadInBackground", "m_Legacy3D", "m_Resource", "m_CompressionFormat", "StreamedResource", "?Primary2DAxis", "DPad", "Grip", "IndexTouch", "ThumbTouch", "Secondary2DAxis", "IndexFinger", "MiddleFinger", "RingFinger", "PinkyFinger", "CombinedTrigger", "PrimaryButton", "PrimaryTouch", "SecondaryButton", "SecondaryTouch", "GripButton", "TriggerButton", "MenuButton", "2DAxisClick", "2DAxisTouch", "Thumbrest", "ButtonId0", "ButtonId1", "ButtonId2", "ButtonId3", "ButtonId4", "ButtonId5", "ButtonId6", "ButtonId7", "ButtonId8", "ButtonId9", "ButtonId10", "ButtonId11", "ButtonId12", "ButtonId13", "ButtonId14", "ButtonId15", "ButtonId16", "ButtonId17", "ButtonId18", "ButtonId19", "AxisId1", "AxisId2", "AxisId3", "AxisId4", "AxisId5", "AxisId6", "AxisId7", "AxisId8", "AxisId9", "AxisId10", "AxisId11", "AxisId12", "AxisId13", "AxisId14", "AxisId15", "AxisId16", "AxisId17", "AxisId18", "AxisId19", "AxisId20", "AxisId21", "AxisId22", "AxisId23", "AxisId24", "AxisId25", "AxisId26", "AxisId27", "AxisId28", "CameraRotation", "CameraVelocity", "CameraAngularVelocity", "CameraAcceleration", "CameraAngularAcceleration", "Left Eye", "Right Eye", "Center Eye", "%s - %s", "XRInputV1", "deviceName", "deviceRole", "deviceId", "inputFeatures", "usageHints", "featureType", "customSize", "content", "Generic", "TrackingReference", "HardwareTracker", "LegacyController", "xrSubsystemStart", "xrSubsystemStop", "subsystem", "xrSubsystemInfo", "plugin_name", "library_name", "VR Support: couldn't initialize %s\n", "UnitySubsystemsManifest.json", "libraryName", "supportsManagedProviders", "OnTerrainChanged", "TerrainChangedFlags", "_TerrainTreeLightDirections", "_TerrainTreeLightColors", "Hidden/TerrainEngine/BillboardTree", "Unable to find shaders used for the terrain engine. Please include Nature/Terrain/BillboardTree shader in Graphics settings.", "_TerrainEngineBendTree", "_TreeInstanceColor", "_TreeInstanceScale", "_SquashPlaneNormal", "_SquashAmount", "_Wind", "tree billboard", "_TreeBillboardCameraRight", "_TreeBillboardCameraUp", "_TreeBillboardCameraFront", "_TreeBillboardCameraPos", "_TreeBillboardDistances", "m_SplatDatabase", "m_DetailDatabase", "m_Heightmap", "m_Splats", "m_TerrainLayers", "m_AlphaTextures", "m_AlphamapResolution", "m_BaseMapResolution", "SplatPrototype", "normalMap", "tileSize", "tileOffset", "specularMetallic", "smoothness", "PPtr<TerrainLayer>", "m_Patches", "m_DetailPrototypes", "m_PatchCount", "m_PatchSamples", "m_RandomRotations", "WavingGrassTint", "m_WavingGrassStrength", "m_WavingGrassAmount", "m_WavingGrassSpeed", "m_PreloadTextureAtlasData", "DetailPatch", "layerIndices", "numberOfObjects", "DetailPrototype", "prototypeTexture", "minWidth", "maxWidth", "minHeight", "maxHeight", "noiseSpread", "bendFactor", "healthyColor", "dryColor", "lightmapFactor", "usePrototypeMesh", "m_Heights", "m_PrecomputedError", "m_MinMaxPatchHeights", "m_Thickness", "m_Levels", "_maxDistanceSqr", "_CameraPosition", "_WaveAndDistance", "_WavingTint", "_CameraRight", "_CameraUp", "Hidden/TerrainEngine/Details/BillboardWavingDoublePass", "Hidden/TerrainEngine/Details/Vertexlit", "Hidden/TerrainEngine/Details/WavingDoublePass", "Unable to find shaders used for the terrain engine. Please include Nature/Terrain/Diffuse shader in Graphics settings.", "_ST_WindVector", "_ST_WindGlobal", "_ST_WindBranch", "_ST_WindBranchTwitch", "_ST_WindBranchWhip", "_ST_WindBranchAnchor", "_ST_WindBranchAdherences", "_ST_WindTurbulences", "_ST_WindLeaf1Ripple", "_ST_WindLeaf1Tumble", "_ST_WindLeaf1Twitch", "_ST_WindLeaf2Ripple", "_ST_WindLeaf2Tumble", "_ST_WindLeaf2Twitch", "_ST_WindFrondRipple", "_ST_WindAnimation", "_WindEnabled", "ARGB32", "RG16", "A2R10G10B10", "BaseMap-%s-%s", "splatdatabase alphamap %d is null", "SplatAlpha %u", "treeLODBiasMultiplier must be greater than 0. Clamp to 0.001.", "Missing default terrain shader.", "Terrain has no valid TerrainData!", "m_TerrainData", "m_TreeDistance", "m_TreeBillboardDistance", "m_TreeCrossFadeLength", "m_TreeMaximumFullLODCount", "m_DetailObjectDistance", "m_DetailObjectDensity", "m_HeightmapPixelError", "m_SplatMapDistance", "m_HeightmapMaximumLOD", "m_DrawHeightmap", "m_DrawInstanced", "m_DrawTreesAndFoliage", "m_MaterialType", "m_LegacySpecular", "m_LegacyShininess", "m_MaterialTemplate", "m_ExplicitProbeSetHash", "m_BakeLightProbesForTrees", "m_PreserveTreePrototypeLayers", "m_DynamicUVST", "m_ChunkDynamicUVST", "defaultShader", "defaultBaseMapGenShader", "m_GroupingID", "m_AllowAutoConnect", "Cannot change the tree prototype.", "Cannot change the tree position.", "%s[%i][%i]", "SpeedTreeLocalWind", "Nature/Terrain/Specular", "Nature/Terrain/Standard", "TerrainLayer", "PPtr<TerrainData>", "m_DiffuseTexture", "m_NormalMapTexture", "m_MaskMapTexture", "m_TileSize", "m_TileOffset", "m_Specular", "m_Metallic", "m_Smoothness", "m_NormalScale", "m_DiffuseRemapMin", "m_DiffuseRemapMax", "m_MaskMapRemapMin", "m_MaskMapRemapMax", "perf.frame_delta_time_ms.v1", "col_frame_delta_time_ms", "ctx_name", "change_active_scene", "ctx_prev_scene", "ctx_new_scene", "unload_scene", "ctx_scene", "merge_scenes", "ctx_scene1", "ctx_scene2", "scene_load", "scene_load_additive", "scene_load_first_scene", "scene_open_editor", "scene_open_editor_playmode", "scene_open_additive_editor", "scene_loaded_after_awake", "ctx_mode", "changed_target_frame_rate", "ctx_prev_frame_rate", "total_frames", "total_long_frames", "long_frames_since_reset", "time_since_reset_dtms", "mean_dtms", "min_dtms", "max_dtms", "variance_dtms", "draw_calls", "batches", "frame_count_by_second", "perf", "mean", "variance", "elapsed_time_ms", "collector_perf_ns", "histogram", "apiUsage", "deviceStats", "local.%s", "%s.%s.v%u", "unity.", "assembly_info", "package", "package_ver", "debug_device", "Accept", "application/json", "appResume", "appStart", "previous_sessionid", "appInstall", "appPause", "appStop", "unity_ver", "app_ver", "appRunning", "local_time_offset", "dispatcherStats", "appUpdate", "advanced_pro", "personal", "dev_release", "adhoc", "enterprise", "%u x %u", "%s/%s/%s", "android.permission.INTERNET", "analytics", "header", "common", "unity.analytics_values", "Couldn't register input device (%s); exceeded maximum number of device registrations (65535)\n", "New input system (experimental) initialized\n", "%s/Unity/%s/Analytics", "%s/Unity/%s/Cloud/Analytics", "\"userid\":\"", "StateConstant", "m_MotionSetCount", "m_SynchronizedLayerCount", "StateMachineConstant", "Thumb", "Middle", "Ring", "Little", "Proximal", "Intermediate", "Distal", "1 Stretched", "2 Stretched", "3 Stretched", "gradient", "multiplier", "influenceFilter", "influenceMask", "influenceList", "looping", "simulationSpeed", "startDelay", "randomDistribution", "rangeCurve", "intensityCurve", "maxLights", "Particle Velocity curves must all be in the same mode", "orbitalX", "orbitalY", "orbitalZ", "orbitalOffsetX", "orbitalOffsetY", "orbitalOffsetZ", "radial", "speedModifier", "inWorldSpace", "ClampVelocityModule.enabled", "ClampVelocityModule.x.scalar", "ClampVelocityModule.x.minScalar", "ClampVelocityModule.y.scalar", "ClampVelocityModule.y.minScalar", "ClampVelocityModule.z.scalar", "ClampVelocityModule.z.minScalar", "ClampVelocityModule.magnitude.scalar", "ClampVelocityModule.magnitude.minScalar", "ClampVelocityModule.dampen", "ClampVelocityModule.drag.scalar", "ClampVelocityModule.drag.minScalar", "InitialModule.startLifetime.scalar", "InitialModule.startLifetime.minScalar", "InitialModule.startSpeed.scalar", "InitialModule.startSpeed.minScalar", "InitialModule.startSize.scalar", "InitialModule.startSize.minScalar", "InitialModule.startSizeY.scalar", "InitialModule.startSizeY.minScalar", "InitialModule.startSizeZ.scalar", "InitialModule.startSizeZ.minScalar", "InitialModule.startRotationX.scalar", "InitialModule.startRotationX.minScalar", "InitialModule.startRotationY.scalar", "InitialModule.startRotationY.minScalar", "InitialModule.startRotation.scalar", "InitialModule.startRotation.minScalar", "InitialModule.startColor.minColor.r", "InitialModule.startColor.minColor.g", "InitialModule.startColor.minColor.b", "InitialModule.startColor.minColor.a", "InitialModule.startColor.maxColor.r", "InitialModule.startColor.maxColor.g", "InitialModule.startColor.maxColor.b", "InitialModule.startColor.maxColor.a", "InitialModule.randomizeRotationDirection", "InitialModule.gravityModifier.scalar", "InitialModule.gravityModifier.minScalar", "TriggerModule.enabled", "TriggerModule.radiusScale", "MinMaxGradient", "PPtr<ParticleSystemForceField>", "vectorComponentCount%d", "color%d", "vector%d_%d", "separateAxes", "timeMode", "frameOverTime", "startFrame", "speedRange", "tilesX", "tilesY", "animationType", "rowIndex", "cycles", "uvChannelMask", "randomRow", "sprites", "flipU", "flipV", "InheritVelocityModule.enabled", "InheritVelocityModule.m_Curve.scalar", "InheritVelocityModule.m_Curve.minScalar", "NoiseModule.enabled", "NoiseModule.strength.scalar", "NoiseModule.strength.minScalar", "NoiseModule.strengthY.scalar", "NoiseModule.strengthY.minScalar", "NoiseModule.strengthZ.scalar", "NoiseModule.strengthZ.minScalar", "NoiseModule.frequency", "NoiseModule.damping", "NoiseModule.octaveMultiplier", "NoiseModule.octaveScale", "NoiseModule.scrollSpeed.scalar", "NoiseModule.scrollSpeed.minScalar", "NoiseModule.remap.scalar", "NoiseModule.remap.minScalar", "NoiseModule.remapY.scalar", "NoiseModule.remapY.minScalar", "NoiseModule.remapZ.scalar", "NoiseModule.remapZ.minScalar", "NoiseModule.positionAmount.scalar", "NoiseModule.positionAmount.minScalar", "NoiseModule.rotationAmount.scalar", "NoiseModule.rotationAmount.minScalar", "NoiseModule.sizeAmount.scalar", "NoiseModule.sizeAmount.minScalar", "RotationModule.enabled", "RotationModule.x.scalar", "RotationModule.x.minScalar", "RotationModule.y.scalar", "RotationModule.y.minScalar", "RotationModule.curve.scalar", "RotationModule.curve.minScalar", "TrailModule.enabled", "TrailModule.ratio", "TrailModule.lifetime.scalar", "TrailModule.lifetime.minScalar", "TrailModule.minVertexDistance", "TrailModule.dieWithParticles", "TrailModule.sizeAffectsWidth", "TrailModule.sizeAffectsLifetime", "TrailModule.inheritParticleColor", "TrailModule.colorOverLifetime.minColor.r", "TrailModule.colorOverLifetime.minColor.g", "TrailModule.colorOverLifetime.minColor.b", "TrailModule.colorOverLifetime.minColor.a", "TrailModule.colorOverLifetime.maxColor.r", "TrailModule.colorOverLifetime.maxColor.g", "TrailModule.colorOverLifetime.maxColor.b", "TrailModule.colorOverLifetime.maxColor.a", "TrailModule.widthOverTrail.scalar", "TrailModule.widthOverTrail.minScalar", "TrailModule.colorOverTrail.minColor.r", "TrailModule.colorOverTrail.minColor.g", "TrailModule.colorOverTrail.minColor.b", "TrailModule.colorOverTrail.minColor.a", "TrailModule.colorOverTrail.maxColor.r", "TrailModule.colorOverTrail.maxColor.g", "TrailModule.colorOverTrail.maxColor.b", "TrailModule.colorOverTrail.maxColor.a", "TrailModule.shadowBias", "SpriteData", "UnityEngine.GridModule.dll", "GridLayout", "UnityEngine.UnityWebRequestModule.dll", "CertificateHandler", "DownloadHandler", "UnityWebRequestAsyncOperation", "UnityEngineInternal", "WebRequestUtils", "UnityEngine.VFXModule.dll", "VFXEventAttribute", "VFXExpressionValues", "VFXSpawnerCallbacks", "VFXSpawnerState", "VisualEffectAsset", "DoNothing", "::Scripting::UnityEngine::GridLayoutProxy", "ValidateCertificateNative", "ReceiveData", "GetProgress", "CompleteContent", "ReceiveContentLength", "RedirectTo", "::Scripting::UnityEngine::Networking::CertificateHandlerProxy", "::Scripting::UnityEngine::Networking::DownloadHandlerProxy", "::Scripting::UnityEngine::Networking::UnityWebRequestAsyncOperationProxy", "::Scripting::UnityEngineInternal::WebRequestUtilsProxy", "CreateExpressionValuesWrapper", "RegisterPerCameraCallback", "UnregisterPerCameraCallback", "SetWrapValue", "CreateSpawnerStateWrapper", "::Scripting::UnityEngine::Experimental::VFX::VFXEventAttributeProxy", "::Scripting::UnityEngine::Experimental::VFX::VFXExpressionValuesProxy", "::Scripting::UnityEngine::Experimental::VFX::VFXManagerProxy", "::Scripting::UnityEngine::Experimental::VFX::VFXSpawnerCallbacksProxy", "::Scripting::UnityEngine::Experimental::VFX::VFXSpawnerStateProxy", "::Scripting::UnityEngine::Experimental::VFX::VisualEffectAssetProxy", "UnityEngine.TerrainModule.dll", "UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "PatchExtents", "TreeInstance", "TreePrototype", "UnityEngine.UIElementsModule.dll", "UnityEngine.Yoga", "CreateTerrainGameObject", "GetAlphamapResolutionInternal", "::Scripting::UnityEngine::DetailPrototypeProxy", "::Scripting::UnityEngine::Experimental::TerrainAPI::TerrainUtilityProxy", "::Scripting::UnityEngine::PatchExtentsProxy", "::Scripting::UnityEngine::SplatPrototypeProxy", "::Scripting::UnityEngine::TerrainProxy", "::Scripting::UnityEngine::TerrainDataProxy", "::Scripting::UnityEngine::TerrainLayerProxy", "::Scripting::UnityEngine::TreeInstanceProxy", "::Scripting::UnityEngine::TreePrototypeProxy", "YGNodeBaselineInvoke", "YGNodeMeasureInvoke", "::Scripting::UnityEngine::Yoga::NativeProxy", "need dictionary", "stream end", "file error", "stream error", "data error", "buffer error", "incompatible version", "incorrect header check", "unknown compression method", "invalid window size", "unknown header flags set", "header crc mismatch", "incorrect data check", "incorrect length check", ">jm\r", "MGiI", "_~6\f", "=G\\\u000b", "LMb#", "q\n>(", "+OQv", "ZEo^", "i8P/", "?(3w", "*0\"Z", "l!;b", ":1X:", "y9*O", "\rmj>", "IiGM", "\f6~_", "\u000b\\G=", "#bML", "(>\nq", "vQO+", "^oEZ", "/P8i", "w3(?", "Z\"0*", "b;!l", ":X1:", "O*9y", "raster1", "sfnt", "font-format", "TrueType", "multi-masters", "metrics-variations", "tt-glyf", "interpreter-version", "smooth", "smooth-lcd", "smooth-lcdv", "postscript-cmaps", "ahoj.null", "nonmarkingreturn", "notequal", "infinity", "lessequal", "greaterequal", "partialdiff", "summation", "product", "integral", "Omega", "radical", "approxequal", "Delta", "nonbreakingspace", "lozenge", "apple", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat", ".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "three", "four", "five", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "braceleft", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "ordfeminine", "Lslash", "Oslash", "ordmasculine", "dotlessi", "lslash", "oslash", "germandbls", "onesuperior", "logicalnot", "trademark", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold", "Delta", "Omega", "fraction", "hyphen", "macron", "periodcentered", "space", "Tcommaaccent", "tcommaaccent", "otvalid", "opentype-validate", "postscript-info", "darkening-parameters", "hinting-engine", "no-stem-darkening", "random-seed", "%02X%s", "....", " (%s, MGF1-%s, 0x%02X)", "%s key size", "  X.509 certificate load: ", "passed\n  X.509 signature verify: ", "%d.%d", "id-at-commonName", "Common Name", "id-at-countryName", "id-at-locality", "Locality", "id-at-state", "id-at-organizationName", "Organization", "id-at-organizationalUnitName", "Org Unit", "emailAddress", "E-mail address", "id-at-serialNumber", "Serial number", "id-at-postalAddress", "Postal address", "id-at-postalCode", "Postal code", "id-at-surName", "Surname", "id-at-givenName", "Given name", "id-at-initials", "Initials", "id-at-generationQualifier", "Generation qualifier", "id-at-title", "id-at-dnQualifier", "Distinguished Name qualifier", "id-at-pseudonym", "Pseudonym", "id-domainComponent", "Domain component", "id-at-uniqueIdentifier", "Unique Identifier", "id-ce-basicConstraints", "Basic Constraints", "id-ce-keyUsage", "id-ce-extKeyUsage", "Extended Key Usage", "id-ce-subjectAltName", "Subject Alt Name", "id-netscape-certtype", "Netscape Certificate Type", "id-kp-serverAuth", "TLS Web Server Authentication", "id-kp-clientAuth", "TLS Web Client Authentication", "id-kp-codeSigning", "Code Signing", "id-kp-emailProtection", "E-mail Protection", "id-kp-timeStamping", "Time Stamping", "id-kp-OCSPSigning", "OCSP Signing", "md5WithRSAEncryption", "RSA with MD5", "sha-1WithRSAEncryption", "RSA with SHA1", "sha224WithRSAEncryption", "RSA with SHA-224", "sha256WithRSAEncryption", "RSA with SHA-256", "sha384WithRSAEncryption", "RSA with SHA-384", "sha512WithRSAEncryption", "RSA with SHA-512", "ecdsa-with-SHA1", "ECDSA with SHA1", "ecdsa-with-SHA224", "ECDSA with SHA224", "ecdsa-with-SHA256", "ECDSA with SHA256", "ecdsa-with-SHA384", "ECDSA with SHA384", "ecdsa-with-SHA512", "ECDSA with SHA512", "RSASSA-PSS", "rsaEncryption", "id-ecPublicKey", "Generic EC key", "id-ecDH", "EC key for ECDH", "secp192r1", "secp224r1", "secp256r1", "secp384r1", "secp521r1", "secp192k1", "secp224k1", "secp256k1", "brainpoolP256r1", "brainpool256r1", "brainpoolP384r1", "brainpool384r1", "brainpoolP512r1", "brainpool512r1", "desCBC", "des-ede3-cbc", "DES-EDE3-CBC", "id-md5", "id-sha1", "SHA-1", "id-sha224", "id-sha256", "id-sha384", "id-sha512", "pbeWithSHAAnd3-KeyTripleDES-CBC", "PBE with SHA1 and 3-Key 3DES", "pbeWithSHAAnd2-KeyTripleDES-CBC", "PBE with SHA1 and 2-Key 3DES", "000000000000000000000000000000000000000000000001", "FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22830", "5EA6F389A38B8BC81E767753B15AA5569E1782E30ABE7D25", "400000000000000000000000000000000000000000000000", "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", "555555555555555555555555555555555555555555555555", "  ECP test #1 (constant op_count, base point G): ", "failed (%u)\n", "  ECP test #2 (constant op_count, other point): ", "Unexpected error, return code = %08X\n", "unity_ParticleUVShiftData", "unity_ParticleUseMeshColors", "unity_ParticleInstanceData", "No mesh data available for mesh %s on particle system %s. Make sure Read/Write Enabled is set in the importer to work on the particle system renderer", "Particle system meshes will only work with exactly one (1) sub mesh", "Unexpected Particle System vertex stream (%d)", "Mesh particle system has too many vertices - some particles will be ignored (%zu exceeds limit of %d)", "m_SortMode", "m_MinParticleSize", "m_MaxParticleSize", "m_CameraVelocityScale", "m_VelocityScale", "m_LengthScale", "m_SortingFudge", "m_NormalDirection", "m_ShadowBias", "m_RenderAlignment", "m_Flip", "m_UseCustomVertexStreams", "m_EnableGPUInstancing", "m_ApplyActiveColorSpace", "m_AllowRoll", "m_VertexStreams", "m_Mesh1", "m_Mesh2", "m_Mesh3", "m_VertexStreamMask", "OpenGL warning: Trying to bind too many vertex attributes (got %i max is %i).\n", "precision lowp float;\n", "out vec4 outcol;\n", "void main(void) { outcol = vec4(1.0, 1.0, 1.0, 1.0); }\n", "ERROR: Unable to compile Transform Feedback fragment shader!\n", "ERROR: Unable to compile Transform Feedback vertex shader!\n", "out_pos", "out_normal", "out_tangent", "ERROR: Unable to link Transform Feedback shader!\n", "MtxBlock", "300 es\n", "150\n", "#extension GL_ARB_explicit_attrib_location : enable\n", "const int max_bone_count = ", ";\nconst", " highp ", "float max_bone_count_inv = 1.0 / float(max_bone_count); \nconst", "float half_texel = 0.5 * max_bone_count_inv; \nlayout(location=", ") in vec3 in_vertex;\n", ") in vec3 in_normal;\n", ") in ", " in_boneIndices;\n", ") in vec2 in_boneWeights;\n", ") in vec4 in_boneWeights;\n", ") in vec4 in_tangent;\n", "out vec3 out_pos;\n", "out vec3 out_normal;\n", "out vec4 out_tangent;\n", "uniform vec4 bones[max_bone_count*3];\n", "uniform MtxBlock { vec4 bones[max_bone_count*3]; } Matrices;\n", "uniform sampler2D bones;\n", "#define GET_MATRIX(idx) ", "mat4( bones[int(idx)*3 + 0], bones[int(idx)*3 + 1], bones[int(idx)*3 + 2]", "mat4( Matrices.bones[int(idx)*3 + 0], Matrices.bones[int(idx)*3 + 1], Matrices.bones[int(idx)*3 + 2]", "mat4(", "textureLod(bones, vec2(0.166, (float(idx) * max_bone_count_inv) + half_texel), 0.0), ", "textureLod(bones, vec2(0.5, (float(idx) * max_bone_count_inv) + half_texel), 0.0), ", "textureLod(bones, vec2(0.833, (float(idx) * max_bone_count_inv) + half_texel), 0.0) ", ", vec4(0.0, 0.0, 0.0, 1.0))\n\nvoid main(void)\n{\n\tvec4 inpos = vec4(in_vertex.xyz, 1.0);\n", " mat4 localToWorldMatrix = GET_MATRIX(in_boneIndices);\n", " vec2 normWeights = in_boneWeights / (in_boneWeights.x + in_boneWeights.y);\n", " mat4 localToWorldMatrix = GET_MATRIX(in_boneIndices.x) * normWeights.x;\n", "\tif(normWeights.y > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.y) * normWeights.x;\n", " mat4 localToWorldMatrix = GET_MATRIX(in_boneIndices.x) * in_boneWeights.x;\n", "\tif(in_boneWeights.y > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.y) * in_boneWeights.y;\n", "\tif(in_boneWeights.z > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.z) * in_boneWeights.z;\n", "\tif(in_boneWeights.w > 0.0)\n", "\t\tlocalToWorldMatrix += GET_MATRIX(in_boneIndices.w) * in_boneWeights.w;\n", "\tout_pos = (inpos * localToWorldMatrix).xyz;\n\tgl_Position = vec4(out_pos.xyz, 1.0);\n", "\tout_normal = ( vec4(in_normal.xyz, 0.0) * localToWorldMatrix).xyz;\n", "\tout_tangent = vec4( ( vec4(in_tangent.xyz, 0.0) * localToWorldMatrix).xyz, in_tangent.w);\n", "GLSL: ignoring struct parameter '%s'.", "GLSL: struct parameter '%s' resides outside of a uniform block.", "GLSL: %s. Ignoring.", "GLSL: unexpected struct parameter '%s'.", "[1].", "GLSL: Cannot determine the struct size for '%s'.", "GLSL: Invalid type in hlslcc vectorized matrix", "GLSL: Invalid matrix dimensions in shader!", "GLSL: unsupported array parameter '%s'", "hlslcc_mtx", "hlslcc_zcmp", "_counter", "libGLESv2.so", "?_TintColor", "Particle System is trying to spawn on a mesh with zero surface area", "Ensure Read/Write is enabled on the Particle System's Texture.", "GameObject %s may be used for static batching. If the mesh becomes part of a static batch, it cannot be used for particle mesh emission.", "GameObject %s can be used for static batching. If the mesh becomes part of a static batch, it cannot be used for particle mesh emission.", "Mesh %s requires Read/Write Enabled to be set in the importer to work on the particle system shape module", "boxThickness", "radiusThickness", "donutRadius", "m_Rotation", "placementMode", "m_MeshMaterialIndex", "m_MeshNormalOffset", "m_MeshSpawn", "m_MeshRenderer", "m_SkinnedMeshRenderer", "m_SpriteRenderer", "m_UseMeshMaterialIndex", "m_UseMeshColors", "alignToDirection", "m_TextureClipChannel", "m_TextureClipThreshold", "m_TextureUVChannel", "m_TextureColorAffectsParticles", "m_TextureAlphaAffectsParticles", "m_TextureBilinearFiltering", "randomDirectionAmount", "sphericalDirectionAmount", "randomPositionAmount", "boxX", "boxY", "boxZ", "m_MeshScale", "randomDirection", "MultiModeParameter", "spread", "PPtr<MeshRenderer>", "PPtr<SkinnedMeshRenderer>", "PPtr<SpriteRenderer>", "arcore_unity_api", "ARCore Unity Plugin could not be loaded: arcore_unity_api.so not found.", "ARCore Unity Plugin failed to load symbol ArCoreUnity_onUnityPlayerInitialize.", "ARCore Unity Plugin failed to load symbol ArCoreUnity_onUnityPlayerInitialize", "ArCoreUnity_getARCoreSupportStatus", "ARCore Unity Plugin failed to load symbol ARCoreUnity_getARCoreSupportStatus.", "ARCore Unity Plugin failed to load symbol ARCoreUnity_getARCoreSupportStatus", "ARCore Unity Plugin not supported (%d).", "ArCoreUnity_getPose", "ArCoreUnity_onUnityPlayerPause", "ArCoreUnity_onUnityPlayerResume", "ArCoreUnity_onUnityEarlyUpdate", "ArCoreUnity_onUnityBeforeRenderARBackground", "ARCore Unity Plugin could not be loaded: Failed to load symbol %s.", "Y@Packet size {%d} is too small, min MTU {%d}", "exceeded channel limit, maximum allowed channels is 255", "Empty channels list for order sharing channel", "Channel num out of range max channel {%d} requested channel {%d}", "Only reliable and unreliable channels are allowed to share order; but for channel {%d} qos is {%d}", "Channel {%d} has been already added", "exceeded special config limit, maximum allowed channels is 65535", "Worker thread pool size can be > 1 only for server platforms: Win, OSX or Linux", "maximum hosts should be <= %d", "Error: wrong qos type: {%d} Unreliable will use instead", "SentPacketHostBus", "Cannot increase udp recv buffer", "Cannot open socket on ip {%s} and port {%d}; check please your network, most probably port has been already occupied", "Warning: wrong connectionId in received user packet\n", "Warning: received system packet has wrong connection id\n", "Warning: received user packet belongs to wrong session\n", "Log: Packet has been already received, connection {%d}\n", "Warning: lost enormous amount of packet, connection {%d} will be closed\n", "Warning: received not well-formed packet, connection {%d} will be closed\n", "Log: malformed connection packet from relay come in\n", "Log: malformed disconnection packet from relay come in\n", "Log: host has been already disconnected\n", "Log: disconnection packet for network {%llX} doesn't match host network {%llX}\n", "Error: host connection request failed with error code {%d}\n", "Error: host connection request failed host nodeid assignment\n", "Log: malformed connection packet from relay come in, connection id is not in the allowed range\n", "Error: relay connection request for connection {%d} failed with error code {%d}\n", "Error: receive relay packet for connection {%d} which in the wrong state {%d}\n", "Warning: received system packet belongs to wrong session\n", "Warning: received unknown type of system request\n", "Log: call disconnect for connection which not in proper state; connection {%d}, state {%d}\n", "Log: cannot connect to relay server after %d attempt to address {%s}\n", "Log: cannot connect after {%d} attempt address {%s}\n", "Error: Cannot allocate new packet for sending\n", "connection in user state {%d}\n", "Warning: no free slot for incoming connection\n", "Log: Library version mismatch\n", "Log: Channel configuration mismatch\n", "Log: Connected peer has not got free resources\n", "Error: Hack attack in disconnect packet\n", "Warning: Packet has been already received, connection {%d}\n", "Warning: From ping lost enormous amount of packet, connection {%d} will be closed\n", "Warning: malformed ping received\n", "Warning: From ping, allowed bandwidth is zero; connection {%d} will be closed\n", "Log: connection {%d} has been disconnected by timeout; address {%s} time {%d}, last rec time {%d} rtt {%d} timeout {%d}\n", "Error: no free messages for send packet\n", "Warning: Cannot connect to relay server after {%d} attempt\n", "incoming broadcast packet has wrong credentials\n", "Warning: Received packet contains message for non-existing channel {%d}. Possible hack attack, connection will be closed.\n", "Warning: this packet is not well formed. Possible hack attack, connection will be closed. \n", "Warning: this packet is not well formed. Possible hack attack, connection will be closed.\n", "UNET", "io: socket error {%d}, host {%d} will be closed\n", "io: socket error while bucket reading {%d}, host {%d} will be closed\n", "Warning: Received packet has size less than Packet header, possible hack attack\n", "initial bandwidth is to high {%d} and will be set to 0xFFFFFFF bytes per sec", "ReceivedEventBus", "SentEventBus", "Internal error: Max comnnection == 0", "Data buffer is not initialized", "Attempt to send to not connected connection {%d}", "Channel {%d} for connection {%d} does not support fragmented messages; MTU: {%d}, message length: {%d}, max length {%d} ", "Number of fragments {%d} is greater than maximum allowed {%d}", "no free events for long message in the pool", "no free memory for long message", "no free events for message in the pool", "No memory to allocate message with len {%d} ", "No free outgoing events for connectionId {%d}, channelId {%d}", "Before call Receive function, error should be set to OK", "Log: Dropping evnt belonging wrong session\n", "connection Id {%d} greater then registered amount of connection exceptions", " Connection {%d} has been already in use", "Wrong ip address {} or port {%d}", "No free connection", "Wrong ip address {%s} or port {%d}", "No diecovery message received", "Previous multicast sending has not finished yet", "Channel not exist", "Message too long", "No multicast messages were initialized", "No Multicast operation was invoked", "This connection has not got reliable channels", "Network host has been already existed state={%d}", "Host in the wrong state {%d}", "Wrong channelId {%d} for connectionId {%d}", "AddConnection: Connection {%d} has already in the list", "AddPing: Connection {%d} has already in the list", "Event has already in the list", "--help", "Displays the list of supported command options and exits.", "--quiet", "Disables the output of all messages.", "umbravalidator", "%f\n%d", "Float value expected '%s'.", "Float value out of range '%s'.", "%d\n%d", "Integer value expected '%s'.", "Option '%s' requires a parameter.", "Unrecognized option '%s'.", " help", "\n%s\n", "Dec 10 2018 17:01:18", "### LATEST WRITE:", "### LATEST WRITE: ", "baabaa", "test.foobar", "# foobarrabbiini\n", "foo=bar\n", "\t \tbar \t=  \t foo\t \t\n", "numfoo = 5\n", "floatfoo = 0.456\n", "invalidFloat = abs.87987\n", "weirdFloat = 0.000000\n", "bad = food # comment\n", "spaceTest = space \t test me\n", "arrayTest = foo,bar,buuBuu\n", "arrayTest", "floatfoo", "zerotest", ",foo,bar,,rumbah", "foo, bar, ,rumbah,", "foobar ", "Number of allocations: %d (total size %s)", "LEAKED %s (num %d size %s)", "(N/A)", "Total allocations %d, peak %d (size %s)", "Alloc %s (total %d peak %d size %d)", "%03d", " MB ", " kB ", " ms ", "0 ms", "pullo", "karhua", "karhu", "olvi", "TILES_VISITED", "EXT_PORTALS_PROCESSED", "CELLS_PROCESSED", "CELL_REVISITS", "CELL_SORT_FAILURES", "OBJECTS_STATICALLY_CULLED", "WARNING", "%s: ", "Umbra", "[%02d:%02d:%02d] ", "semaphore \"%s\" creation failed: %s\n", "OnTilemapChanged", "kOnTilemapTilePreChange", "kOnTilemapTileChanged", "Tilemap::kSystemParentHierarchy", "SetCellSize failed on Tilemap as it is not attached to a Grid.", "SetCellGap failed on Tilemap as it is not attached to a Grid.", "SetCellLayout failed on Tilemap as it is not attached to a Grid.", "SetCellSwizzle failed on Tilemap as it is not attached to a Grid.", "Number of tiles passed in does not match block dimensions.", "Target for SwapTileAsset is null.", "Target for SwapTileAsset is the same as swapped asset.", "%s has more than 1 material attached to its TilemapRenderer. Use Debug Inspector to reset the TilemapRenderer's material list.", "TilemapCollider2D", "m_Tiles", "m_AnimatedTiles", "m_TileAssetArray", "m_TileSpriteArray", "m_TileMatrixArray", "m_TileColorArray", "m_AnimationFrameRate", "m_Origin", "m_TileAnchor", "m_TileOrientation", "m_TileOrientationMatrix", "m_TileIndex", "m_TileSpriteIndex", "m_TileMatrixIndex", "m_TileColorIndex", "m_ObjectToInstantiate", "m_TileFlags", "m_ColliderType", "m_AnimatedSprites", "m_AnimationSpeed", "m_AnimationTimeOffset", "m_IsLooping", "TilemapRefCountedData", "m_RefCount", "m_ChunkSize", "m_ChunkCullingBounds", "m_MaxChunkCount", "m_MaxFrameAge", "m_SortOrder", "m_DetectChunkCullingBounds", "333?", "Rigidbody2D hierarchy too deep to perform ordering.  Nested Rigidbody2D might not update in the correct order.", "Mass cannot be set on the rigid-body when it is using auto-mass.", "Cannot use 'constraints' on a static body.", "Cannot use 'MovePosition' on a static body.", "Cannot use 'MoveRotation' on a static body.", "Cannot use 'velocity' on a static body.", "Cannot use 'angularVelocity' on a static body.", "BoxCollider2D", "CapsuleCollider2D", "CompositeCollider2D", "EdgeCollider2D", "Rigidbody2D", "m_EdgeRadius", "m_SpriteTilingProperty", "m_AutoTiling", "pivot", "oldSize", "newSize", "adaptiveTilingThreshold", "adaptiveTiling", "m_GeometryType", "m_GenerationType", "m_ColliderPaths", "m_CompositePaths", "m_VertexDistance", "SubCollider", "m_Collider", "PPtr<Collider2D>", "IntPoint", "m_Paths", "m_BodyType", "m_Simulated", "m_UseFullKinematicContacts", "m_UseAutoMass", "m_LinearDrag", "m_GravityScale", "m_SleepingMode", "m_FixedAngle", "PPtr<PhysicsMaterial2D>", "@?OnCompositeColliderAdded", "OnCompositeColliderRemoved", "Density cannot be set on the collider unless it is attached to a dynamic rigid-body that is using auto-mass.", "%s.usedByComposite assign attempt for '%s' is not valid as collider is not capable of being composited.", "m_RaycastsStartInColliders", "m_QueriesStartInColliders", "m_MinPenetrationForPenalty", "Failed IgnoreLayerCollision : layer numbers must be between 0 and %d", "Failed GetIgnoreLayerCollision : layer numbers must be between 0 and %d", "Failed SetLayerCollisionMask : layer numbers must be between 0 and %d", "Failed GetLayerCollisionMask : layer numbers must be between 0 and %d", "OnCollisionEnter2D", "OnCollisionExit2D", "OnCollisionStay2D", "OnTriggerEnter2D", "OnTriggerExit2D", "OnTriggerStay2D", "m_Poly", "m_UsedByEffector", "m_UsedByComposite", "CircleCollider2D", "PhysicsMaterial2D", "PolygonCollider2D", "m_VelocityIterations", "m_PositionIterations", "m_VelocityThreshold", "m_MaxLinearCorrection", "m_MaxAngularCorrection", "m_MaxTranslationSpeed", "m_MaxRotationSpeed", "m_BaumgarteScale", "m_BaumgarteTimeOfImpactScale", "m_TimeToSleep", "m_LinearSleepTolerance", "m_AngularSleepTolerance", "m_JobOptions", "m_CallbacksOnDisable", "useMultithreading", "useConsistencySorting", "m_InterpolationPosesPerJob", "m_NewContactsPerJob", "m_CollideContactsPerJob", "m_ClearFlagsPerJob", "m_ClearBodyForcesPerJob", "m_SyncDiscreteFixturesPerJob", "m_SyncContinuousFixturesPerJob", "m_FindNearestContactsPerJob", "m_UpdateTriggerContactsPerJob", "m_IslandSolverCostThreshold", "m_IslandSolverBodyCostScale", "m_IslandSolverContactCostScale", "m_IslandSolverJointCostScale", "m_IslandSolverBodiesPerJob", "m_IslandSolverContactsPerJob", "friction", "overrideLegacyVR", "managedInfo", "XRManagedProviderDescriptor", "supportName", "supportVersion", "Unable to find shaders used for the terrain engine. Please include Nature/Terrain/CameraFacingBillboardTree shader in Graphics settings.", "_NormalTex", "Hidden/Nature/Tree Creator Albedo Rendertex", "Unable to find Nature/Tree Creator Albedo Rendertex shader", "Hidden/Nature/Tree Creator Normal Rendertex", "Unable to find Nature/Tree Creator Normal Rendertex shader", "Terrain has zero detail resolution", "Detail index out of bounds in DetailDatabase.SetLayers", "Missing renderer ", " must have exactly one material.", "Missing material ", "Missing mesh filter ", "Missing mesh ", "No vertices available ", "No uvs available ", "No triangles available ", "Missing prototype ", "Missing prototype", "only implemented in editor", "Detail removed: invalid detail layer %d", "Terrain detail prototype '%s' has the mode of Mesh Vertex Lit but has no mesh normal.", "<none>", "Terrain detail prototype '%s' has no mesh UV.", "Terrain detail prototype '%s' has no mesh color.", "The combined number of detail object vertices in one single patch is exceeding the limit (65536). Try decreasing detail density or detail resolution per patch.", "TerrainHeightMap", "Override patch heights array size %lld not equal to patchCount of %lld bytes", "Override maximum height error array size %lld not equal to patchCount of %lld bytes", "Insufficient memory for allocating terrain physics data of %lld bytes", "Tree Imposter Texture", "Imposter Camera", "Hidden/Nature/Tree Creator Bark Rendertex", "_TerrainPatchInstanceData", "_TerrainHeightmapRecipSize", "_TerrainHeightmapScale", "_TerrainNormalmapGenSize", "_TerrainTilesScaleOffsets", "_SpecColor", "_Shininess", "_TerrainHeightmapTexture", "_TerrainNormalmapTexture", "Hidden/TerrainEngine/Splatmap/Standard-BaseGen", "AddPassShader", "BaseMapShader", "TerrainNormalMap", "Hidden/TerrainEngine/GenerateNormalmap", "Invalid SplatCount value '%s' in shader '%s': Use '%d' instead.", "Left neighbor of the terrain has a different heightmap resolution. Stop neighboring.", "Top neighbor of the terrain has a different heightmap resolution. Stop neighboring.", "Right neighbor of the terrain has a different heightmap resolution. Stop neighboring.", "Bottom neighbor of the terrain has a different heightmap resolution. Stop neighboring.", "_WindQuality", "The tree %s couldn't be instanced because one of its LODs contains renderer of type other than MeshRenderer and BillboardRenderer.", "The tree %s couldn't be instanced because billboard can only appear as the last LOD.", "The tree %s couldn't be instanced because bounds could not be determined.", "The tree %s must use the Nature/Soft Occlusion shader. Otherwise billboarding/lighting will not work correctly.", "The tree %s couldn't be instanced because the prefab contains no valid mesh renderer.", "BillboardShader", "_HalfOverCutoff", "A tree couldn't be loaded because the prefab is missing.", "Tree removed: invalid prototype %d", "Cannot add tree instance: invalid prototype index %d", "m_TreeInstances", "m_TreePrototypes", "_GlobalWindTime", "_Control", "_NORMALMAP", "_MASKMAP", "SplatCount", "_Splat%d", "_Normal%d", "_Mask%d", "_Specular%d", "_Metallic%d", "_Smoothness%d", "_NormalScale%d", "_DiffuseRemapOffset%d", "_DiffuseRemapScale%d", "_MaskMapRemapOffset%d", "_MaskMapRemapScale%d", "_Control%d", "_TERRAIN_%d_LAYERS", "The tree %s couldn't be instanced because it has no material.", "The tree %s couldn't be instanced because one of the materials is missing.", "m_SpeedTreeWindAsset", "PPtr<SpeedTreeWindAsset>", "widthScale", "heightScale", "lightmapColor", "prefab", "%s/api/v2/projects/%s/reports", "Uploading Crash Report\n", "logBufferSize must be less than or equal to %d", "Length of 'key' must be less than or equal to %d", "Number of metadata entries may not exceed %d", "Length of 'value' must be less than or equal to %d", "app_build", "install_mode", "install_store", "build_guid", "build_tags", "client_report_id", "client_ts", "cpu_count", "cpu_freq", "device_info_flags", "rooted_or_jailbroken", "device_ram", "screen_size", "screen_dpi", "refresh_rate", "sensor_flags", "system_language", "device_type", "device_vram", "enabled_vr_devices", "gpu_api", "gpu_caps", "gpu_copy_texture_support", "gpu_device_id", "gpu_vendor_id", "gpu_driver", "gpu_max_cubemap_size", "gpu_max_texture_size", "gpu_render_texture_support", "gpu_shader_caps", "gpu_supported_render_target_count", "gpu_texture_format_support", "gpu_vendor", "gpu_version", "is_editor", "is_fullscreen", "is_wsar_remote", "is_ar_app", "localprojectid", "os_family", "platformid", "appid", "screen_orientation", "scripting_backend", "sdk_ver", "sdk_ver_full", "vr_device_name", "vr_device_model", "counter", "managed_exception", "native_crash", "log_messages", "user_metadata", "signal_name", "signal_code", "signal_address", "signal_pc", "crashed", "image_uuid", "image_name", "image_base_address", "pdb_name", "is_user_image", "absolute_pc", "relative_pc", "managed", "managed_frame_desc", "ManagedException", "NativeCrash", "StackFrame", "LogMessage", "UserMetadata", "%s%cUnity%c%s%cPerformanceReporting", "%s%cactive_report", "NativeCrashSerializer::BeginReport called before initialization!", "NativeCrashSerializer::BeginReport with open m_ReportFile!", "NativeCrashSerializer::BeginReport failed to open report file at %s", "NativeCrashSerializer::EndReport called before initialization!", "NativeCrashSerializer::EndReport without open m_ReportFile!", "NativeCrashSerializer::EndReport with m_CurrentThreadFrameCountPosition >= 0!", "NativeCrashSerializer::EndReport() Success!\n", "NativeCrashSerializer::BeginThread called before initialization!", "NativeCrashSerializer::BeginThread without open m_ReportFile!", "NativeCrashSerializer::BeginThread with m_CurrentThreadFrameCountPosition >= 0!", "NativeCrashSerializer::EndThread called before initialization!", "NativeCrashSerializer::EndThread without open m_ReportFile!", "NativeCrashSerializer::EndThread with m_CurrentThreadFrameCountPosition < 0!", "NativeCrashSerializer::WriteFrame called before initialization!", "NativeCrashSerializer::WriteFrame without open m_ReportFile!", "NativeCrashSerializer::WriteFrame with m_CurrentThreadFrameCountPosition < 0!", "NativeCrashSerializer::GetCrashReport called before initialization!", "NativeCrashSerializer::GetCrashReport() Success!\n", ".note.gnu.build-id", "unity.player_sessionid", "unity.player_session_count", "unity.cloud_userid", "WindZone", "m_WindMain", "m_WindTurbulence", "m_WindPulseMagnitude", "m_WindPulseFrequency", "Invalid system type: %d", "cameraPosition", "sortPriority", "Invalid value type: %d", "OnPlay", "OnStop", "m_Infos", "VisualEffectInfo", "m_Expressions", "m_PropertySheet", "m_ExposedExpressions", "m_Buffers", "m_CPUBuffers", "m_RendererSettings", "m_CullingFlags", "VFXExpressionContainer", "m_NeedsLocalToWorld", "m_NeedsWorldToLocal", "Expression", "valueIndex", "VFXPropertySheetSerializedBase", "m_Float", "m_Vector2f", "m_Vector3f", "m_Vector4f", "m_Uint", "m_Int", "m_Matrix4x4f", "m_AnimationCurve", "m_Gradient", "m_NamedObject", "m_Bool", "VFXField", "m_Array", "VFXEntryExpressionValue", "m_ExpressionIndex", "m_Value", "PPtr<NamedObject>", "VFXMapping", "nameId", "VFXGPUBufferDesc", "capacity", "VFXLayoutElementDesc", "VFXLayoutOffset", "bucket", "structure", "VFXCPUBufferDesc", "initialData", "VFXCPUBufferData", "VFXEventDesc", "playSystems", "stopSystems", "VFXRendererSettings", "VFXSystemDesc", "tasks", "VFXTaskDesc", "Invalid Game Id", "OnGridDimensionsChanged", "SetCellGap is not supported in Hexagon layout", "Grid", "m_CellSize", "m_CellGap", "m_CellLayout", "m_CellSwizzle", "UnityEngine.ARModule.dll", "UnityEngine.XR.Tango", "UnityEngine.UnityAnalyticsModule.dll", "UnityEngine.Analytics", "AnalyticsSessionInfo", "AnalyticsSessionState", "ContinuousEvent", "RemoteConfigSettings", "RemoteSettings", "UnityEngine.VideoModule.dll", "UnityEngine.Experimental.Video", "VideoClipPlayable", "Video3DLayout", "VideoAspectRatio", "VideoAudioOutputMode", "VideoClip", "VideoRenderMode", "VideoSource", "VideoTimeReference", "VideoTimeSource", "UnityEngineInternal.Video", "VideoError", "VideoPixelFormat", "VideoPlayback", "VideoPlaybackMgr", "::Scripting::UnityEngine::XR::Tango::PoseDataProxy", "CallSessionStateChanged", "RemoteConfigSettingsUpdated", "RemoteSettingsBeforeFetchFromServer", "RemoteSettingsUpdateCompleted", "RemoteSettingsUpdated", "::Scripting::UnityEngine::Analytics::AnalyticsSessionInfoProxy", "::Scripting::UnityEngine::Analytics::AnalyticsSessionStateProxy", "::Scripting::UnityEngine::Analytics::ContinuousEventProxy", "::Scripting::UnityEngine::RemoteConfigSettingsProxy", "::Scripting::UnityEngine::RemoteSettingsProxy", "InvokeClockResyncOccurredCallback_Internal", "InvokeErrorReceivedCallback_Internal", "InvokeFrameDroppedCallback_Internal", "InvokeFrameReadyCallback_Internal", "InvokeLoopPointReachedCallback_Internal", "InvokePrepareCompletedCallback_Internal", "InvokeSeekCompletedCallback_Internal", "InvokeStartedCallback_Internal", "::Scripting::UnityEngine::Experimental::Video::VideoClipPlayableProxy", "::Scripting::UnityEngine::Video::Video3DLayoutProxy", "::Scripting::UnityEngine::Video::VideoAspectRatioProxy", "::Scripting::UnityEngine::Video::VideoAudioOutputModeProxy", "::Scripting::UnityEngine::Video::VideoClipProxy", "::Scripting::UnityEngine::Video::VideoPlayerProxy", "::Scripting::UnityEngine::Video::VideoRenderModeProxy", "::Scripting::UnityEngine::Video::VideoSourceProxy", "::Scripting::UnityEngine::Video::VideoTimeReferenceProxy", "::Scripting::UnityEngine::Video::VideoTimeSourceProxy", "::Scripting::UnityEngineInternal::Video::VideoErrorProxy", "::Scripting::UnityEngineInternal::Video::VideoPixelFormatProxy", "::Scripting::UnityEngineInternal::Video::VideoPlaybackProxy", "::Scripting::UnityEngineInternal::Video::VideoPlaybackMgrProxy", "OpticalSize", "Slant", "@.notdef", "cpop", "DFGirl-W6-WIN-BF", "DFKaiSho-SB", "DFKaiShu", "DFKai-SB", "DLCHayMedium", "DLCHayBold", "DLCKaiMedium", "DLCLiShu", "DLCRoundBold", "HuaTianKaiTi?", "HuaTianSongTi?", "Ming(for ISO10646)", "MingLiU", "MingMedium", "PMingLiU", "MingLi43", "FC\r4", "_Zt@", "EC_DH", "ECDSA", "RSA-alt", "rsa.N", "rsa.E", "eckey.Q", "RIPEMD160", "crop-left", "crop-right", "crop-top", "crop-bottom", "rotation-degrees", "samsung", "libmediandk.so", "AMediaFormat_new", "AMediaFormat_delete", "AMediaFormat_toString", "AMediaFormat_getInt32", "AMediaFormat_getInt64", "AMediaFormat_getFloat", "AMediaFormat_getBuffer", "AMediaFormat_getString", "AMediaFormat_setInt32", "AMediaFormat_setInt64", "AMediaFormat_setFloat", "AMediaFormat_setString", "AMediaFormat_setBuffer", "AMediaExtractor_new", "AMediaExtractor_delete", "AMediaExtractor_setDataSourceFd", "AMediaExtractor_setDataSource", "AMediaExtractor_getTrackCount", "AMediaExtractor_getTrackFormat", "AMediaExtractor_selectTrack", "AMediaExtractor_unselectTrack", "AMediaExtractor_readSampleData", "AMediaExtractor_getSampleFlags", "AMediaExtractor_getSampleTrackIndex", "AMediaExtractor_getSampleTime", "AMediaExtractor_advance", "AMediaExtractor_seekTo", "AMediaCodec_createCodecByName", "AMediaCodec_createDecoderByType", "AMediaCodec_createEncoderByType", "AMediaCodec_delete", "AMediaCodec_configure", "AMediaCodec_start", "AMediaCodec_stop", "AMediaCodec_flush", "AMediaCodec_getInputBuffer", "AMediaCodec_getOutputBuffer", "AMediaCodec_dequeueInputBuffer", "AMediaCodec_queueInputBuffer", "AMediaCodec_dequeueOutputBuffer", "AMediaCodec_getOutputFormat", "AMediaCodec_releaseOutputBuffer", "AMediaCodec_releaseOutputBufferAtTime", "AMEDIAFORMAT_KEY_AAC_PROFILE", "AMEDIAFORMAT_KEY_BIT_RATE", "AMEDIAFORMAT_KEY_CHANNEL_COUNT", "AMEDIAFORMAT_KEY_CHANNEL_MASK", "AMEDIAFORMAT_KEY_COLOR_FORMAT", "AMEDIAFORMAT_KEY_DURATION", "AMEDIAFORMAT_KEY_FLAC_COMPRESSION_LEVEL", "AMEDIAFORMAT_KEY_FRAME_RATE", "AMEDIAFORMAT_KEY_HEIGHT", "AMEDIAFORMAT_KEY_IS_ADTS", "AMEDIAFORMAT_KEY_IS_AUTOSELECT", "AMEDIAFORMAT_KEY_IS_DEFAULT", "AMEDIAFORMAT_KEY_IS_FORCED_SUBTITLE", "AMEDIAFORMAT_KEY_I_FRAME_INTERVAL", "AMEDIAFORMAT_KEY_LANGUAGE", "AMEDIAFORMAT_KEY_MAX_HEIGHT", "AMEDIAFORMAT_KEY_MAX_INPUT_SIZE", "AMEDIAFORMAT_KEY_MAX_WIDTH", "AMEDIAFORMAT_KEY_MIME", "AMEDIAFORMAT_KEY_PUSH_BLANK_BUFFERS_ON_STOP", "AMEDIAFORMAT_KEY_REPEAT_PREVIOUS_FRAME_AFTER", "AMEDIAFORMAT_KEY_SAMPLE_RATE", "AMEDIAFORMAT_KEY_WIDTH", "AMEDIAFORMAT_KEY_STRIDE", "AMEDIAFORMAT_KEY_ROTATION", "AndroidMediaNDK: libmediandk.so not loaded but expected to be present in API level %d (>=21). NDK-based video playback disabled, will use JNI instead.", "AndroidMediaNDK could not load symbol %s, will stop loading NDK.", "webm", "AndroidMediaJNI got error: %s", "OMX.google.vpx.decoder", "OMX.google.vp8.decoder", "video/x-vnd.on2.vp8", "meizu", "SEC_OMX_Init", "libSEC_OMX_Core.so", "libsomxcore.so", "AndroidMediaJNI: Android4_0SamsungOMXPluginWorkaround enabled for %s", "VideoDecoderLooper", "AndroidVideoMedia::Restart flush track %d error: %d", "AndroidVideoMedia::Restart stop track %d error: %d", "AndroidVideoMedia: Error %d while selecting video track.", "AndroidVideoMedia: Could not create decoder for mime type %s.", "AndroidVideoMedia: Cannot configure video codec without graphics support.", "AndroidVideoMedia: Error %d while configuring codec.", "AndroidVideoMedia: Error %d while starting codec.", "AndroidVideoMedia: Error while getting codec input buffers.", "AndroidVideoMedia: Error while getting codec output buffers.", "Adreno (TM) 203", "video/avc", "AndroidVideoMedia: Could not obtain video format resolution, cannot use video track: %s", "AndroidVideoMedia: Pixel count of %d x %d (=%d), in track\n%s,\n exceeds H.264 profile level limit of %d that is safe to use on Android 4.1 / 4.2.", "AndroidVideoMedia surface creation stalled.", "AndroidVideoMedia surface creation longer than expected.", "AndroidVideoMedia: VideoPlayer not supported on Android with Vulkan. Use GLES2/3 instead.", "AndroidVideoMedia: VideoPlayer not supported on Android without GLES2/3.", "AndroidVideoMedia::ConsumeInputBuffer got null input buffer for media track %d.", "AndroidVideoMedia: Got negative sample time %d for media track %d.", "AndroidVideoMedia: Error %d while queueing input buffer for media track %d.", "AndroidVideoMedia::DecodeAudio: Cannot get media track %d output format.", "AndroidVideoMedia::DecodeAudio: Cannot get media track %d channel count.", "AndroidVideoMedia::DecodeAudio: Cannot get media track %d sample rate.", "AndroidVideoMedia::DecodeAudio got unexpected buffer (%d) for media track %d", "AndroidVideoMedia::DecodeAudio error %d while releasing empty buffer.", "AndroidVideoMedia::DecodeAudio error %d while releasing ignored buffer.", "AndroidVideoMedia::DecodeAudio error %d while releasing buffer.", "AndroidVideoMedia::DecodeAudio dropped %d sample frames.", "AndroidVideoMedia::SetSecPosition seekTo error: %d", "AndroidVideoMedia::SetSecPosition could not complete seek to frame %d. Codec appears to be stalled at frame %d.", "AndroidVideoMedia::Flush CodecFlush error: %d", "AndroidVideoMedia::VideoDecoder::ConsumeOutputBuffers bad buffer index: %d", "AndroidVideoMedia::VideoDecoder::ConsumeOutputBuffers error %d releasing buffer.", "AndroidVideoMedia::VideoDecoder::UpdateResolution could not read new format.", "AndroidVideoMedia: Using a web URL (%s) without INTERNET permission. Playback may fail.", "AndroidVideoMedia: Decoder setup error.", "AndroidVideoMedia: Could not get media duration.", "AndroidVideoMedia: Could not get media width.", "AndroidVideoMedia: Could not get media height.", "AndroidVideoMedia::GetFormatInfo Did not detect all audio tracks formats after decoding %d video frames", "AndroidVideoMedia: Same timestamp for frame 0 and 1: %g.  Cannot infer frame rate.", "AndroidVideoMedia::GetFormatInfo Unable to detect video frame rate", "AndroidVideoMedia::SetupDecoders extractor seekTo error: %d, need to reopen %s", "AndroidVideoMedia: No tracks in %s", "video/", "audio/", "AndroidVideoMedia: No video tracks in %s", "AndroidVideoMedia: Error opening extractor: %d", "http:", "https:", "AndroidVideoMedia::OpenExtractor could not translate %s to local file. Make sure file exists, is on disk (not in memory) and not compressed.", "AndroidVideoMedia OpenExtractor offset(%d)+size(%d) in %s is beyond end(%d) of %s", "AndroidVideoMedia OpenExtractor unable to open %s, error: %d", "VideoPlayer: Could not obtain audio channel count, cannot use audio track: %s", "VideoPlayer: Audio channel count of %d exceeds limit of 2 that is safe to use on Android 4.1 / 4.2 in track %s", "AndroidVideoMedia::VideoDecoder::Blit failed. Decode shader probably unsupported.", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoBitArray.cpp", "u32 bitMaskLength", "u32 m_BitArray", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoConvexHull2D.cpp", "double numPoints*2", "double m_NumPoints*2", "double m_Points", "ConvexHull (m_HullPoints.GetSize())", "ConvexHull: SERIOUS Fail: There's a left angle but nothing to fall back to! (q is %d and there are %d points)", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoRingBuffer.cpp", "m_BufferSize m_MaxAlignment", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoSpatialHash.cpp", "Geo::s32 m_NumCells", "Geo::s32 m_CellOffsets", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoV128Texture.cpp", "v128 m_Width * m_Height", "v128 m_Pixels", "GeoV128Texture (w, h)", "Not enough memory for GeoV128Texture of size %d x %d", "GeoV128Texture newTex", "PF\n%d %d\n-1.000000\n", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoArray.inl", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoMemoryStream.cpp", "size 16", "newBlockSize 16", "m_Cursor 16", "Can't read entire file \"%s\"", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoFileStream.cpp", "GeoFileStream", "Error saving to file: %s (could not open file)", "Error saving to file: %s (writing to disk failed)", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoFp16Texture.cpp", "Pixel m_Data", "GeoFp16Texture", "GeoFp16Texture this", "Stream is not a GeoFp16Texture object", "Unknown block : %c%c%c%c\n", "Pixel numPixels", "Cannot set data until until resolution has been set", "Cannot extract data if object is empty", "GeoNonAABoundingBox::SetMatrices - Basis is not orthonormal.", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoRGBXTexture.cpp", "GeoRGBXTextureElement m_Data", "GeoRGBXTexture", "GeoRGBXTexture this", "Stream is not a GeoRGBXTexture object", "GeoRGBXTextureElement numElements", "Src/EnlightenAPI/LibSrc\\GeoBase/GeoMemory.inl", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoTimer.cpp", "TaskData m_TaskData[i]", "TaskData", "TIMINGS:", "===============================================================================", "%sTask: '%s' ->\t%02d:%02d:%02d", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoTokenList.cpp", "GeoTokenStream<T> (tl)", "GeoTokenStream<T> mem", "Found '%s' when expecting '%s'", "End of stream when expecting to match '%s'", "Found '%s' when expecting an option such as '%s'", "End of stream when expecting to match an option such as '%s'", "End of stream when expecting to extract a string", "End of stream when expecting to extract a float", "End of stream when expecting to extract an int", "Found %s when attempting to match a bool to 'true' or 'false'", "Enum string not found", "End of stream when expecting to extract an enum", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoBufferedFileStream.cpp", "m_InternalData", "\nProgress: %s\n", "Failed generating sample points, got %d expected %d.", "Y00\t\tY11\t\tY10\t\tY1m1\t\tY20\t\tY21\t\tY2m1\t\tY2m2\t\tY22", "%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f\t%#+3.5f", ".\\Src/EnlightenAPI/LibSrc/GeoCore/GeoVariant.cpp", "m_Data.HeapData", "rhs.m_Data.HeapDataSize 16", "%I64d", "%I64u", "%08x%08x%08x%08x", "%s %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g", "char m_Data.HeapDataSize", "char temp", "%.17g", "%.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g %.9g", ".\\Src/EnlightenAPI/LibSrc/GeoCore/TriGroup.cpp", "IdentVertLinkBuilder", "IdxLink numVertices", "s32 numVertices", "s32 idxBuffer", "TriGroupSelection", "IdentVertLinkBuilder this", "IdxLink m_LinkArray", "TriGroupSelection newSelection", "TriGroupSelection this", "SetItem numVertices", "SetItem numTris", "SetItem* numVertexTriGroups", "SetItem vertexSets", "s32 numVertexTriGroups", "s32 numTris", "s16 numVertexTriGroups", "u8 numVertexTriGroups", "SetItem* rootItems", "SetItem triSets", "s32 m_NumTrisInTriGroup", "s32 m_TriGroupBufferOffset", "s32 m_SharedTriIdxBuffer", "s32 m_VertexGroupIdxArray", "s16 m_ChartTags", "u8 m_GroupTypes", "GenuineIntel", "AuthenticAMD", ".\\Src/EnlightenAPI/LibSrc/GeoBase/GeoEvent.cpp", "sizeof (struct t_HANDLE)", "event_object", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<statistics task=\"%s\" output=\"%s\" version=\"%s\">", "</statistics>", "\t<stage name=\"%s\">", "\t</stage>", "\t\t<stat name=\"%s\" value=\"%s\" />", "\t\t<stat name=\"%s\" value=\"%d\" />", "\t\t<stat name=\"%s\" value=\"%f\" />", "deallocated", "numAllocCalls", "usedRatio", "averageAlloc", "Unknown log message type: %d", "Logger (%x) for %s was already attached, so detaching first.", "Cannot attach log handler (%x); out of slots for type %s.", "%s : %s: %s", "GeoMsgLogger", "%s: %s%s", ".\\Src/EnlightenAPI/LibSrc/GeoBase/GeoString.cpp", "(capacity + 1) * sizeof(T)", "XboxOne", "LinuxArm", "AndroidIntel", "WinRTArm", "WinPhone", "WinPhoneArm", "Src/EnlightenAPI/LibSrc\\GeoCore/GeoArray.inl", "FileOp failed: File path exceeds MAX_PATH (260) characters: %s", ".\\Src/EnlightenAPI/LibSrc/GeoBase/GeoFile.cpp", "length + extra_alloc align", "Can't get %d bytes to load file \"%s\"", "Failed to open file \"%s\" for writing", "Can't write entire file \"%s\"", "FATAL ERROR: reached the maximum heap size limit [%llu bytes].", "FATAL ERROR: out of memory [%s:%d]", "location-not-available", "Cannot set a maximum heap size [%llu bytes], the value is less than the total memory in use [%llu bytes].", "UpdateManagerLight light", "itr->second", "visibilityWorkspaceSize 16", "UpdateManagerLight (m_LightMethodSelector->SizeOfLight(srcBaseLight))", "UpdateManagerLight removedLight", "BaseWorker::SetSystemSolutionSpaces: cannot set solution spaces with an empty array, use RemoveSolutionSpaces if the intention is to clear the solution spaces from the system.", "BaseWorker::SetSystemSolutionSpaces: the input solutions spaces do not refer to the same system.", "BaseWorker::SetSystemSolutionSpaces: cannot find the system with guid %s registered in the update manager.", "sizeof(SHCoeff) * numProbes 4", "environment->m_EmissiveEnvironment->m_ObjectSize 16", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Worker/CpuWorker.cpp", "const InputLightingBuffer* inputLightingListLength", "Geo::u8* probeSet->m_RadProbeSetCore->m_MetaData.m_NumProbesOutput", "float* probeSet->m_RadProbeSetCore->m_MetaData.m_NumProbesOutput", "Geo::s32 probeSet->m_RadProbeSetCore->m_MetaData.m_NumProbesOutput", "requiredSize 16", "const BounceBuffer* inputLightingListLength", "CpuEnvironment (updateEnvironmentInfo.m_Resolution, m_InputLightingPrecisionHint)", "system->m_InputLightingBufferSize 16", "bufferSize 16", "visSize", "outputSize 16", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Worker/MultithreadCpuWorker.cpp", "DefaultThreadGroup", "TaskProcessor m_ThreadGroup->GetNumThreads()", "WorkerThreadData", "WorkerThreadData m_WorkerThreadData[m_WorkerThreadData.GetSize() - 1]", "TaskProcessor m_TaskProcessors", "Enlighten Input Lighting", "Enlighten Solvers", "Enlighten Dynamic Object Interpolation", "probes->m_RadProbeSetCore->m_MetaData.m_RequiredTemporalCoherenceBufferSize 16", "InputLightBase* m_SolverLights", "LightMethodSelector m_LightMethodSelector", "InputLightBase* m_TotalNumLights", "InputLightBase* lightsArray", "IncidentLightingBuffer* numIncidentBuffers", "IncidentLightingBuffer* lightingBufferArray", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Worker/UpdateManagerLight.h", "m_InputLight", "inputLightSize 16", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Worker/MultithreadCpuWorker.h", "DefaultThreadGroup this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Worker/WorkerThreadData.h", "m_WorkingMemory", "void* m_ThreadVisibilityPointers", "minimumWorkspaceSize 16", "void* minimumSize", "DoDirectInputLighting - invalid DirectInputLightingParameters", "DoIndirectInputLightingInternal - input incident light buffers don't match.", "DoIndirectInputLightingInternal - albedo buffer mismatch.", "DoIndirectInputLightingInternal - emissive buffer mismatch.", "DoIndirectInputLightingInternal - invalid NULL parameter", "DoIndirectInputLighting - albedo buffer input is NULL.", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/UpdateManager/BaseUpdateManager.cpp", "LogDispatcher", "The interface pointer passed to a new IUpdateManager is not the same as that provided to an existing IUpdateManager; the interface has not been changed.", "IUpdateManagerWorker m_Worker", "BaseUpdateManager this", "BaseUpdateManager::AllocateSystemSolutionSpace: Unknown RadSystemCore type when allocating SystemSolutionSpace.", "BaseUpdateManager::AllocateSystemSolutionSpace there is a IGpuTextureAllocator set on the update manager properties, use the other implementation.", "BaseUpdateManager::AllocateSystemSolutionSpace cannot allocate a solution space with a null pointer for the irradiance texture.", "AllocateProbeSet", "The requested SH order output is not supported by the precomputed RadProbeSetCore", "SetGpuTexture: incompatible texture format", "SetGpuTexture: incompatible probe volume texture format", "SetGpuTexture: incompatible cube map texture format", "Failed to add regular probe set because <UseProbeSetLod> was specified when the HLRT was created. When this option is specified, only octree probe sets can be used.", "CPU Update Manager", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/UpdateManager/CpuUpdateManager.cpp", "CpuDynamicObject (objectDesc)", "CpuSystemSolutionSpace (coreData, outputTextures, irradianceTextureFormat, ownsTextures)", "CpuSystem (m_Properties.m_InputLightingPrecisionHint)", "BaseProbeSet", "CpuCubeMap", "Geo::u8 numProbes * newProbes->m_ProbeStride", "float numProbes * newProbes->m_ProbeStride", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/UpdateManager/MultithreadCpuUpdateManager.cpp", "MultithreadCpuWorker ( m_Properties.m_SolveType, m_Properties.m_IrradianceOutputFormat, m_Properties.m_CubemapOutputFormat, m_Properties.m_OutputFormatByteOrder, m_Properties.m_InputLightingPrecisionHint, m_Properties.m_UseEntireProbeSetSolver, m_Properties.m_UseProbeSetLod, m_Properties.m_StatsProfile, m_Properties.m_ThreadCreationCommand, m_Properties.m_ThreadGroup, m_Properties.m_Limiter, m_Properties.m_WorkerThreadAffinity )", "MultithreadCpuUpdateManager (properties, logger)", "Src/EnlightenAPI/LibSrc\\GeoCore/GeoRefCount.h", "GeoRefCount this", "Failed to load RadTaskOutput", "Failed to load ProbeTaskOutput", "ReadBufferFromStreamGeneric failed : invalid data format", "ReadBufferFromStreamGeneric failed : corrupt data", "Src/EnlightenAPI/LibSrc\\Enlighten3/EnlightenUtils.inl", "BaseSystemSolutionSpace this", "m_DirectionalVisibilityWorkspace", "BaseAlbedoHandler m_AlbedoHandler", "BaseSystem::SetSolutionSpaces: cannot set solution spaces for a system Allocated with a RadSystemCore.", "BaseSystem::SetSolutionSpaces: cannot set solution spaces with an empty array, use RemoveSolutionSpaces if the intention is to clear the solution spaces from the system.", "BaseSystem::SetSolutionSpaces: cannot set %d solution spaces as the maximum supported number of solution spaces is %d.", "dataSize 16", "visData", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/System/CpuSystem.cpp", "persistentDataBufferSize 16", "m_InputLightingBuffer", "const InputLightingBuffer* m_InputLightingList", "m_LightBankBuffers[i]", "m_TransparencyWorkspace", "m_ProbeBounceWorkspace", "m_BounceBuffer", "m_EnvOnlyBounceBuffer", "bounceBufferSize 16", "incidentLightingBufferSize 16", "transparencyWorkspaceSize 16", "visSize 16", "m_VisibilityPointers[lightIndex]", "CpuAlbedoHandler", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/System/CpuSystem.h", "m_PersistentDataBuffer", "m_EnvBouncePersistentDataBuffer", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/System/BaseSystem.h", "C:/buildslave/enlighten/build/Src/EnlightenAPI/LibSrc/Enlighten3HLRT/ProbeSet/BaseProbeSet.cpp", "float m_ProbeOutput", "Geo::u8 m_U8ProbeOutput", "float m_BakedProbeOutput", "Geo::u8 m_BakedU8ProbeOutput", "float* m_OutputPointers", "Geo::u8* m_U8OutputPointers", "Geo::s32 m_IndicesToSolve", "m_TemporalCoherenceBuffer", "float numValues", "Geo::u8 numValues", "C:/buildslave/enlighten/build/Src/EnlightenAPI/LibSrc/Enlighten3HLRT/ProbeSet/BaseProbeSet.h", "BaseProbeSet this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Environment/BaseEnvironment.cpp", "m_EmissiveEnvironment", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Environment/CpuEnvironment.cpp", "v128 6 * resolution * resolution", "v128 m_Values", "CpuEnvironment (2, PrecisionHint::DEFAULT_PRECISION)", "CpuEnvironment (m_Resolution, m_InputLightingPrecisionHint)", "v128 numValues", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/Environment/BaseEnvironment.h", "BaseEnvironment this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/DynamicObject/BaseDynamicObject.cpp", "InterpolatedPoint GetNumInterpolationPoints()", "ProbeInterpolant GetNumInterpolationPoints() * numMaxInterpolants", "m_SolverOutput[i]", "ProbeInterpolant m_InterpolationPoints[0].m_Interpolants", "InterpolatedPoint m_InterpolationPoints", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/DynamicObject/CpuDynamicObject.cpp", "m_Object.m_ZRes * m_SlicePitch[i] 16", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/DynamicObject/BaseDynamicObject.h", "BaseDynamicObject this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/CubeMap/CpuCubeMap.cpp", "const BounceBuffer* m_RadiosityOnlyInputLightingList", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/CubeMap/BaseCubeMap.h", "BaseCubeMap this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3HLRT/AlbedoHandler/CpuAlbedoHandler.cpp", "m_AlbedoBuffer", "m_EmissiveBuffer", "m_TransparencyBuffer", "albedoBufferSize 16", "emissiveBufferSize 16", "transparencyBufferSize 16", "Enlighten Profile Stats: ", "----------------------\n", "Cube Map", "Enlighten GPU Time: ", "Enlighten CPU Time: ", "Enlighten Probe Time: ", "Enlighten Solved Probes: ", "Enlighten Real Probes: ", "Enlighten Virtual Probes: ", "Enlighten Total Probes: ", "Enlighten Probe Interpolation Time: ", "Enlighten CubeMap Time: ", "System ", " Solve Time: ", "SYSTEM ", "InputLighting Setup time", "Directional Visibility time", "Direct InputLighting time", "Indirect InputLighting time", "Transparency time", "Solve Setup time", "Solve time", "Freeze time", "Resample Lightmap Bounce time", "Resample Probe Bounce time", "CUBEMAP ", "PROBESET ", "ProbeSet Solved Probes: ", "ProbeSet Real Probes: ", "ProbeSet Virtual Probes: ", "ProbeSet Total Probes: ", "Average ", "Min ", "Max ", "Probe Set Manager: internal memory needs to be allocated before intialised method can be called.", "Probe Set Manager: internal memory needs to have at least 4-byte alignment.", "Probe Set Manager: invalid (NULL) RadProbeSetMetaData detected.", "Probe Set Manager: internal memory overwrite detected. Memory allocated to the Probe Set Manager was not enough to carry out initialization.", "Probe Set Manager: a probe set (guid: %s) with degenerate (0.f) volume detected.", "Probe Set Manager: a probe set (guid: %s) with %d probes detected.", "Probe Set Manager: could not find internal index of probe set with guid: %s", "Call to ProbeSetManagerVoxel::GetProbeInterpolants will return incomplete results. This particular ProbeSet manager does not support probe LOD.", "GetProbeInterpolants - 'maxNumCandidates' must be at least 8 for a regular grid.", "GetProbeInterpolants - probe sets that aren't regular grids require an array of probe positions as input.", "GetProbeShCoefficients", "GetProbeShCoefficients -  'shOrder' is invalid", "inputSets", "GetProbeInterpolants", "interpolants", "GetProbeInterpolants: 'numMaxInterpolants' must be larger than zero", "GetProbeInterpolants: 'numMaxInterpolants' must be larger than 0", "GetProbeSetInterpolants", "interpolators", "GetProbeSetInterpolants: 'numMaxInterpolants' must be larger than zero", "task", "DoProbeInterpolationTask", "task->m_InterpolatedPointArray", "DoProbeInterpolationTask: task->m_InterpolationInputs and task->m_ProbeSetManager are both be NULL", "DoProbeInterpolationTask - 'task->m_InterpolationInputs[%d]->GetProbeSetCore()' is invalid NULL pointer", "DoProbeInterpolationTask - 'm_ProbeSetManager->GetInterpolationInputSet(%d)->GetProbeSetCore()' is invalid NULL pointer", "DoProbeInterpolationTask - unsupported output format", "%s - invalid NULL data block: m_EntireProbeSetPrecomp must be present", "%s - system GUIDs for input workspaces are incorrect or out of order", "%s - size of emissive environment input does not match size specified in precompute", "%s - unknown error", "SolveEntireProbeSetTask", "SolveEntireProbeSetTask - requires m_EntireProbeSetPrecomp precomputed data block.", "SolveEntireProbeSetTask - version number of probeset data does not match run-time", "SolveEntireProbeSetTask - no output pointer specified. One of m_Output or m_U8Output must be valid and non-NULL.", "SolveEntireProbeSetTask - two output pointers specified. Specify either m_Output or m_U8Output depending on required output format.", "SolveEntireProbeSetTask - m_U8Output output pointer specified. Compressed output is not supported with an m_OutputShOrder of Enlighten::SH_ORDER_L2.", "SolveEntireProbeSetTask - Invalid m_OutputShOrder value. Specify either Enlighten::SH_ORDER_L1 or Enlighten::SH_ORDER_L2.", "SolveEntireProbeSetTask - Requires m_TemporalCoherenceBuffer persistent buffer.", "SolveEntireProbeSetTask - m_DirectionPalette does not match m_CoreProbeSet parameters.", "SolveEntireProbeSetTask - Probe sets with non-default coefficient orders/basis axes require a valid m_DirectionPalette.", "SolveEntireProbeSetTask - output size mismatch: %d, requires %d based on value of RadProbeSetMetaData::m_NumProbesOutput", "SolveEntireProbeSetTask - m_Output must be aligned to 16 bytes to use the SSE or NEON solvers.", "SolveEntireProbeSetTask - m_U8Output must be aligned to 4 bytes to use the SSE or NEON solvers.", "SolveEntireProbeSetTask - unrecognised solver type.", "FreezeEntireProbeSetTask", "FreezeEntireProbeSetTask - requires m_EntireProbeSetPrecomp precomputed data block.", "FreezeEntireProbeSetTask - version number of probeset data does not match run-time", "GetProbeDebugInfo - probeId out of range", "GetNumProbeSetDependencies", "GetProbeSetDependencyGuid", "GetProbeSetDependencyGuid - systemIdx out of range", "GetNumFormFactors", "GetNumFormFactors - systemIdx out of range", "GetNumFormFactors - index out of range", "GetNumFormFactors - no probe set dependencies", "GetNumFormFactors - internal error", "SolveDebugProbeFormFactorTask - invalid NULL pointer parameter", "SolveDebugProbeFormFactorTask - index out of range", "SolveDebugProbeFormFactorTask - invalid parameter", "ClusteringOutput", "GeoTriangleList m_ClusterTriLists[c]", "GeoDirectionalPointList m_ClusterDusters[c]", "GeoClusterNodeForest m_ClusterMetrics", "ClusteringOutput this", "GeoTriangleList", "GeoDirectionalPointList", "GeoClusterNodeTree", "GeoClusterNodeTree tNode", "GeoClusterNodeTree m_Trees[i]", "GeoClusterNodeForest", "GeoClusterNodeForest forest", "inputLightingBuffer", "GetInputLightingBufferSize", "GetInputLightingBufferSystemId", "VerifyInputLightingBufferData", "lightTable", "GenerateUnrealCompatibleLightFalloffTable", "GenerateUnityCompatibleLightFalloffTable", "GenerateInverseSquaredLightFalloffTable", "AddDusterValuesToInputWorkspace", "dusterValues", "CalcIncidentLightingBufferSize", "GetIncidentLightingBufferSize", "GetIncidentLightingBufferSystemId", "VerifyIncidentLightingBufferData", "CreateIncidentLightingBuffer", "CalcBounceBufferSize", "GetBounceBufferSystemId", "VerifyBounceBufferData", "CreateBounceBuffer", "EvaluateSH - Invalid SH order specified", "GetProbeVisibility - probeId out of range", "GetProbeVisibility", "GetProbeVisibility - no probe ray validity data available", "IsProbeCulled - probeId out of range", "IsProbeCulled", "IsProbeCulled - no probe culling data available", "GetProbeEnvironmentVisibility - invalid probe interpolation data type: %d", "GetProbeEnvironmentVisibility - no probe interpolation data available", "GetProbeEnvironmentVisibility - probeId out of range", "GetProbeEnvironmentVisibility", "%s - invalid NULL workspace parameter", "%s - invalid output pointers, set either the m_OutputPointers member *or* the m_U8OutputPointers member", "%s - requires m_ProbeSetPrecomp precomputed data block", "%s - version number of probeset data does not match run-time", "%s - order of probeset is not L%d, use SolveProbeTaskL%d instead", "%s - octree probe sets must solve all probes.", "%s - octree probe sets must have indices ordered linearly from 0 to n-1", "%s - octree probe set output pointers must point to contiguous regions of an array, spaced sizeof(float)*shOrder*3 bytes apart.", "SolveProbeTaskL1", "SolveProbeTaskL2", "Src/EnlightenAPI/LibSrc\\GeoCore/GeoTree.inl", "TreeNode<_Ty> (*m_Children)[i]", "GeoArray<TreeNode<_Ty>*> m_Children", "Not enough memory to satisfy ReadArray of %d elements", "GeoArray<TreeNode<_Ty>*>", "TreeNode<_Ty>", "TreeNode<_Ty> tNode", "4.\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/BakeOutputProbeSet.cpp", "BakeOutputProbeSet (0, 0)", "BakeOutputProbeSet (shOrder, numProbes)", "float 3*m_ShOrder*m_NumProbes", "float m_Output", "BakeOutputProbeSet this", "Stream is not a BakeOutputProbeSet object", "Attempting to load a BakeOutputProbeSet object from an alternative version.  Backwards compatibility for this class is not supported", "float numFloats", "%s: %s is NULL", "%s: %s is not %d byte aligned", "%s: (RadSystemCore) Input is NULL", "%s: (RadSystemCore) m_RadiosityPrecomp DataBlock is empty", "%s: (RadSystemCore) m_RadiosityPrecomp DataBlock is of incorrect type", "%s: (RadSystemCore) m_RadiosityPrecomp DataBlock signature is corrupted", "%s: (RadSystemCore) m_RadiosityPrecomp DataBlock version mismatch", "%s: (RadSystemCore) m_RadiosityPrecomp DataBlock does not match m_MetaData", "%s: (RadProbeSetCore) Input is NULL", "%s: (RadProbeSetCore) m_ProbeSetPrecomp DataBlock is empty", "%s: m_ProbeSetPrecomp DataBlock is of incorrect type", "%s: (RadProbeSetCore) m_ProbeSetPrecomp DataBlock signature is corrupted", "%s: (RadProbeSetCore) m_ProbeSetPrecomp DataBlock version mismatch", "%s: (RadProbeSetCore) m_EntireProbeSetPrecomp DataBlock is empty", "%s: m_EntireProbeSetPrecomp DataBlock is of incorrect type", "%s: (RadProbeSetCore) m_EntireProbeSetPrecomp DataBlock signature is corrupted", "%s: (RadProbeSetCore) m_EntireProbeSetPrecomp DataBlock version mismatch", "%s: (RadProbeSetCore) m_InterpolationData DataBlock is empty", "%s: (RadProbeSetCore) m_InterpolationData DataBlock is invalid", "%s: (RadProbeSetCore) m_ProbeSetDebugData DataBlock is empty", "%s: (RadCubeMapCore) Input is NULL", "%s: (RadCubeMapCore) m_ClusterCubeMapPrecomp DataBlock is empty", "%s: (RadCubeMapCore) m_ClusterCubeMapPrecomp DataBlock is of incorrect type", "%s: (RadCubeMapCore) m_ClusterCubeMapPrecomp DataBlock signature is corrupted", "%s: (RadCubeMapCore) m_ClusterCubeMapPrecomp DataBlock version mismatch", "%s: (InputWorkspace) Input is NULL", "%s: (InputWorkspace) m_InputWorkspacePrecomp DataBlock is empty", "%s: (InputWorkspace) m_InputWorkspacePrecomp DataBlock is of incorrect type", "%s: (InputWorkspace) m_InputWorkspacePrecomp DataBlock signature is corrupted", "%s: (InputWorkspace) m_ProjectedPointData DataBlock is empty", "%s: (InputWorkspace) m_ProjectedPointData DataBlock is of incorrect type", "%s: (InputWorkspace) m_ProjectedPointData DataBlock is corrupted", "%s: (InputWorkspace) m_ProjectedPointData DataBlock is of incorrect version number", "%s: (InputWorkspace) m_ProjectedPointData DataBlock is truncated and corrupt. DataBlock should be at least %d bytes, but is %d bytes", "%s: (ClusterAlbedoWorkspaceMaterialData) Input is NULL", "%s: (ClusterAlbedoWorkspaceMaterialData) System ID is invalid", "%s: (ClusterAlbedoWorkspaceMaterialData) m_ClusterMaterials DataBlock is invalid", "%s: (ClusterAlbedoWorkspaceMaterialData) m_MaterialGuids DataBlock is invalid", "%s: (PrecomputedVisibilityData) Input is NULL", "%s: (PrecomputedVisibilityData) Signature is corrupted", "%s: (PrecomputedVisibilityData) Version mismatch", "%s: (PrecomputedVisibilityWorkspace) Input is NULL", "%s: (PrecomputedVisibilityWorkspace) Signature is corrupted", "%s: (InterpolationInputSet) Input is NULL", "%s: (InterpolationInputSet) Either m_ProbeSetPrecomp or m_InterpolationData must be non-NULL", "%s: (ResamplingData) Input is NULL", "%s: (ResamplingData) Version mismatch", "%s: (ResamplingData) Signature is corrupted", "IsOctreeProbeSet", "GetNumOctreeNodes: probeSetCore must be an octree probe set", "GetOctreeNodes: probeSetCore must be an octree probe set", "GetOctreeNumLods: probeSetCore must be an octree probe set", "GetOctreeNumProbesLod: probeSetCore must be an octree probe set", "GetOctreeNumProbesLod: LOD index out of range", "GetOctreeNumVirtualProbesLod: probeSetCore must be an octree probe set", "GetOctreeNumVirtualProbesLod: LOD index out of range", "GetOctreeRootProbes: probeSetCore must be an octree probe set", "FindProbeSetOctreeNode: probeSetCore must be an octree probe set", "ExtractOctreeProbePositions", "%s: (RadProbeSetCore) m_InterpolationData DataBlock does not contain octree data", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/LightTransportOutputImpl.cpp", "LightTransportOutput", "LightTransportOutput this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/MeshSimpInstanceOutput.cpp", "MeshSimpInstanceOutput", "MeshSimpInstanceOutput this", "MeshSimpMeshOutput* numMeshes", "MeshSimpMeshOutput* m_Meshes", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/MeshSimpMeshOutput.cpp", "v128 m_ProjectedP", "v128 m_ProjectedN", "s32 m_Clusters", "s32 m_Charts", "MeshSimpMeshOutput", "MeshSimpMeshOutput this", "Geo::s32 numFaces", "Geo::v128 numVertices", "Src/EnlightenAPI/LibSrc\\GeoCore/GeoAutoPtr.h", "T obj", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/../EnlightenLightTransportOutput.h", "LightTransportPixel", "LightTransportPixel this", "Not enough memory to allocate element", "Failed to load object", "UpdateProbeBounceBuffer", "probeBounceWorkspace", "bounceBufferOutput", "UpdateProbeBounceBuffer: interpolationInputs and probeSetManager are both be NULL", "UpdateProbeBounceBuffer - required InputWorkspace data block not present (m_ClusterProbeSampleBounceData)", "CalcInputLightingBufferSize", "CreateInputLightingBuffer", "AddCachedValuesToInputWorkspace", "cachedValues", "CalcLightVisibilitySize", "SetDirectionalVisibility", "CalcPrecomputedVisibilityWorkspaceSize", "CreatePrecomputedVisibilityWorkspace", "GetPrecomputedVisibilityDataSize", "ClearInputWorkspace", "GetNumberOfPointsInInputWorkspace", "GetNumberOfClustersInInputWorkspace", "GetNumberOfTreeClustersInInputWorkspace", "GetInputWorkspaceLitDebugPoint", "debugPoint", "GetInputWorkspaceDebugPoint - requested index out of range", "GetInputWorkspaceDebugPoint", "GetInputWorkspaceDebugIterator", "GetInputWorkspaceNumPointsPerClusterArray", "numPointsPerClusterArray", "GetSystemBounds", "GetInputLightingBufferLightValue", "GetInputLightingBufferLightValue - requested cluster index out of range", "GetSystemBoundingBox", "GetInputWorkspacePositionArray", "positionsOut", "GetInputWorkspaceNormalArray", "normalsOut", "GetInputWorkspacePositionAndNormalArray", "GetInputWorkspaceNumInstanceGuids", "numInstanceGuidsOut", "GetInputWorkspaceInstanceGuids", "instanceGuidsOut", "GetInputWorkspaceMaxProjectedPointsInAnyInstance", "maxPointsOut", "GetInputWorkspaceNumProjectedPointsInInstance", "numPointsOut", "GetInputWorkspaceMaxVersionsInAnyInstance", "maxVersionsOut", "GetInputWorkspaceNumVersionsInInstance", "numVersionsOut", "GetInputWorkspaceVersionsInInstance", "versionIdsOut", "GetInputWorkspaceProjectedPointVersion", "pointIdxArrayOut", "pointPosArrayOut", "numProjectedPointsOut", "GetInputWorkspaceSize", "CreateEnvironmentInputLightingBuffer", "SetEnvironmentLightValues", "baseValues", "Number of values in InputLightingBuffer does not match expected by resolution %d: %d vs %d", "CalcTransparencyWorkspaceSize", "CreateTransparencyWorkspace", "SetTransparency", "transparencyWorkspace", "SetSamplePositions", "CalcProbeBounceBufferSize", "CreateProbeBounceWorkspace", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/MeshSimpChartOutput.cpp", "MeshSimpChartOutput", "MeshSimpChartOutput this", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/MeshSimpOutputImpl.cpp", "MeshSimpOutput", "MeshSimpChartOutput* m_ChartData[i]", "MeshSimpChartOutput** m_ChartData", "MeshSimpAtlasChartOutput* m_AtlasChartData", "MeshSimpInstanceOutput* m_InstanceData", "s32 m_NumChartsPerCluster", "s32 m_WhichChartArray", "s32 atlasWidth * atlasHeight", "s32 numClusters", "MeshSimpAtlasChartOutput* numOutputCharts", "MeshSimpInstanceOutput* m_NumInstances", "MeshSimpChartOutput** m_NumClusters", "MeshSimpOutput this", "MeshSimpChartOutput* numChartsPerCluster", "Saving instance debug failed.", "CalcRequiredPersistentDataSize", "CalcRequiredWorkspaceMemory", "ERROR: ConvertToOutputFormat - bad output format", "ERROR: ConvertFromOutputFormat - bad input format.", "%s - invalid output format", "%s - invalid output format byte order", "%s - Environment bounce precompute data missing", "%s - Radiosity precompute data is missing.", "%s - Expected a BounceRadiosity system. Found a lightmap system instead. Did you forget to set SolveBounceTask::m_SolveEnvironmentOnly to true?", "%s - The solver encountered an unknown RadDataCore type.", "%s - BounceRadiosity system width %d does not match the number of light values in the bounce buffer, %u", "%s - BounceRadiosity systems are expected to have a height of 1, but found %u instead", "SolveIrradianceTask", "SolveIrradianceTask - Directional Irradiance output was requested, but system has no precomputed directional data", "SolveBounceBufferTask", "FreezeIrradianceTask", "DoResampleBounce - invalid ResampleBounceParameters", "DoResampleBounce - Texture sampling parameters not supplied.", "SolveCubeMapTask - system GUIDs for input workspaces are incorrect or out of order", "SolveCubeMapTask - size of emissive environment input does not match size specified in precompute", "SolveCubeMapTask - invalid NULL pointer", "SolveCubeMapTask - invalid output texture pointer", "SolveCubeMapTask - invalid output format", "FreezeInputLightingBuffer - invalid NULL parameter", "GetNumberOfOutputPixels", "GetNumberOfOutputPixelsInBucket", "GetNumberOfOutputPixelsInBucket - invalid bucket index parameter", "GetNumberOfOutputBuckets", "GetNumSystemDependencies", "GetSystemDependencyGuid", "GetSystemDependencyGuid - systemIdx out of range", "GetSystemDependencyIdx", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/RuntimeCharts.cpp", "sizeInBytes 16", "runtimeChartsSize 16", "BakeOutputProbeSetVisibility", "GetProbe() Array index out of bounds", "BakeOutputProbeSetVisibility this", "Stream is not a BakeOutputProbeSetVisibility object", "Attempting to load a BakeOutputProbeSetVisibility object from an alternative version.  Backwards compatibility for this class is not supported", "float m_NumProbes", "GetNumInstanceGuids", "GetInstanceGuids", "GetNumMeshGuids", "GetMeshGuids", "GetNumMaterialGuids", "GetMaterialGuids", "CalcMaterialGuidsLookupWorkspaceSize", "GetClusterAlbedoWorkspaceNumMaterials", "GetClusterAlbedoWorkspaceMaterialIds", "GetClusterAlbedoWorkspaceMaterialDataSize", "CalcAlbedoBufferSize", "CreateAlbedoBuffer", "CalcEmissiveBufferSize", "CreateEmissiveBuffer", "CalcTransparencyBufferSize", "CreateTransparencyBuffer", "GetTextureSize", "CalcDynamicMaterialWorkspaceSize", "CreateDynamicMaterialWorkspace", "InitialiseMaterialAlbedoAsDynamic", "materialWorkspace", "workspaceMemory", "InitialiseMaterialEmissiveAsDynamic", "InitialiseMaterialTransparencyAsDynamic", "InitialiseMaterialAlbedoAsStatic", "InitialiseMaterialEmissiveAsStatic", "InitialiseMaterialTransparencyAsStatic", "SetMaterialAlbedoColour", "SetMaterialEmissiveColour", "SetMaterialTransparency", "InitialiseAlbedoBufferFromMaterialWorkspace", "InitialiseEmissiveBufferFromMaterialWorkspace", "InitialiseTransparencyBufferFromMaterialWorkspace", "transparencyBuffer", "InitialiseAlbedoBufferFromTexture", "textureParams", "InitialiseEmissiveBufferFromTexture", "InitialiseEmissiveBufferFromTexture: fixedPointMaximum parameter must be greater than zero.", "InitialiseTransparencyBufferFromTexture", "InitialiseAlbedoBufferFromColoursPerPoint", "pointAlbedoColours", "InitialiseAlbedoBufferFromColoursPerPoint: ClusterAlbedoWorkspaceMaterialData does not match input workspace; number of clusters is different.", "InitialiseAlbedoBufferFromColoursPerPoint: Too many points provided.", "InitialiseAlbedoBufferFromColoursPerPoint: Not enough points provided.", "InitialiseEmissiveBufferFromColoursPerPoint", "pointEmissiveColours", "InitialiseEmissiveBufferFromColoursPerPoint: ClusterAlbedoWorkspaceMaterialData does not match input workspace; number of clusters is different.", "InitialiseEmissiveBufferFromColoursPerPoint: Too many points provided.", "InitialiseEmissiveBufferFromColoursPerPoint: Not enough points provided.", "InitialiseTransparencyBufferFromColoursPerPoint", "pointTransparencyValues", "InitialiseTransparencyBufferFromColoursPerPoint: ClusterAlbedoWorkspaceMaterialData does not match input workspace; number of clusters is different.", "InitialiseTransparencyBufferFromColoursPerPoint: Too many points provided.", "UpdateAlbedoBuffer", "UpdateAlbedoBuffer: The albedo buffer needs to be re-initialised. This is due to some material status (Static/Dynamic) having changed since the buffer was last initialised.", "UpdateEmissiveBuffer", "UpdateEmissiveBuffer: The emissive buffer needs to be re-initialised. This is due to some material status (Static/Dynamic) having changed since the buffer was last initialised.", "UpdateTransparencyBuffer", "UpdateTransparencyBuffer: The transparency buffer needs to be re-initialised. This is due to some material status (Static/Dynamic) having changed since the buffer was last initialised.", "GetDebugAlbedoValue", "GetDebugEmissiveValue", "GetDebugTransparencyValue", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/Impl/MeshSimpAtlasChartOutput.cpp", "v128 m_Positions", "v128 m_Normals", "MeshSimpAtlasChartOutput", "v128 width * height", "MeshSimpAtlasChartOutput this", "v128 numEls", "DoDebugColour - invalid NULL pointer", "DoDebugColour - projection data not present or corrupted.  (Make sure you load the radiosity data for the reference solver: per-platform optimisations strip out debug-only data.)", "FindDebugPixelInfo - invalid NULL pointer", "FindDebugPixelInfo - UVs out of range", "RunDebugBucketSelectionTask - invalid NULL pointer", "RunDebugBucketSelectionTask - runtime pixel x/y out of range", "RunDebugBucketSelectionTask - runtime bucket index out of range", "GetNumFormFactors - no system dependencies", "SolveDebugPixelFormFactorTask - invalid NULL pointer parameter", "SolveDebugPixelFormFactorTask - index out of range", "SolveDebugPixelFormFactorTask - invalid parameter", "CalcRequiredDebugPixelFormFactorTaskMemory -  invalid parameter", "GetInputWorkspaceListLength", "GetInputWorkspaceGUID", "PrepareInputLightingList", "inputLightingBuffers", "listILBOut", "CalcIrradianceMemory", "CalcDirectionalIrradianceMemory", "CalcRadSystemCoreTotalMemory", "CalcRadProbeSetCoreTotalMemory", "CalcRadCubeMapCoreTotalMemory", "Geomerics.Enlighten", "SolveIrradiance", "DoInputLighting", "DoWriteInputLighting", "DoEndInputLighting", "SolveCubeMap", "DoProbeInterpolation", ".\\Src/EnlightenAPI/LibSrc/Enlighten3/EnlightenOutputBuffer.cpp", "outputSize 128", "bufferA", "bufferB", "OUTPUT_FORMAT_FP16", "DELETED-OUTPUT_FORMAT_U16", "OUTPUT_FORMAT_LRB", "DELETED-OUTPUT_FORMAT_LRB_DUALTEXTURE", "OUTPUT_FORMAT_R11G11B10", "OUTPUT_FORMAT_R9G9B9E5", "OUTPUT_FORMAT_RGBM", "GetInputWorkspaceGUID - index out of range", "./PxShared/src/foundation/src/PsFoundation.cpp", "Foundation", "Memory allocation for foundation object failed.", "Foundation object exists already. Only one instance per process can be created.", "Foundation destruction failed due to pending module references. Close/release all depending modules first.", "Foundation: Invalid registration detected.", "Foundation: Invalid deregistration detected.", "PxShared/src/foundation/include/PsArray.h", "NonTrackedAlloc", "User allocator returned NULL.", "PxShared/src/foundation/include/PsBroadcast.h", "Allocations must be 16-byte aligned.", "PxShared/src/foundation/include/PsMutex.h", "PxShared/src/foundation/include/PsHashInternals.h", "%s(%d) : Assertion failed: %s\n", "/Users/builduser/buildslave/physx/build/PxShared/src/pvd/src/PxPvdDefaultFileTransport.cpp", "<allocation names disabled>", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::MutexImpl>::getName() [T = physx::shdfnd::MutexImpl]", "static const char *physx::shdfnd::ReflectionAllocator<physx::general_PxIOStream2::PsFileBuffer>::getName() [T = physx::general_PxIOStream2::PsFileBuffer]", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PvdDefaultFileTransport>::getName() [T = physx::pvdsdk::PvdDefaultFileTransport]", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::NullFileTransport>::getName() [T = physx::pvdsdk::NullFileTransport]", "./PxShared/src/pvd/src/PxPvdDataStream.cpp", "PvdDataStream::create - pvd must be non-NULL!", "PvdOutStream", "./PxShared/src/pvd/src/PxPvdDefaultSocketTransport.cpp", "PvdProfileZoneClient", "./PxShared/src/pvd/src/PxPvdImpl.cpp", "PxPvd::connect - recall connect! Should call disconnect before re-connect.", "MetaDataProvider", "PvdMemClient", "PvdImpl", "PvdObjectModelMetaDataImpl", "./PxShared/src/pvd/src/PxPvdObjectModelMetaData.cpp", "StringTableImpl", "Parser<true>", "./PxShared/src/pvd/src/PxPvdUserRenderer.cpp", "Parser<false>", "PvdCommStreamBufferedEventSink::mSPVBuffer", "static const char *physx::shdfnd::ReflectionAllocator<unsigned int>::getName() [T = unsigned int]", "static const char *physx::shdfnd::ReflectionAllocator<char>::getName() [T = char]", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::NamedValue>::getName() [T = physx::pvdsdk::NamedValue]", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PropertyMessageArg>::getName() [T = physx::pvdsdk::PropertyMessageArg]", "static const char *physx::shdfnd::ReflectionAllocator<unsigned char *>::getName() [T = unsigned char *]", "./PxShared/src/pvd/src/PxPvdFoundation.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PvdInstanceDataStream::PvdCommand *>::getName() [T = physx::pvdsdk::PvdInstanceDataStream::PvdCommand *]", "VoidPtr", "ObjectRef", "StringHandle", "physx3", "static const char *physx::shdfnd::ReflectionAllocator<unsigned char>::getName() [T = unsigned char]", "profile event stream", "memory event stream", "render event stream", "PhysXSDK", "ClassDescImpl", "static const char *physx::shdfnd::ReflectionAllocator<(anonymous namespace)::ClassDescImpl *>::getName() [T = (anonymous namespace)::ClassDescImpl *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PtrOffset>::getName() [T = physx::pvdsdk::PtrOffset]", "PropDescImpl", "static const char *physx::shdfnd::ReflectionAllocator<(anonymous namespace)::PropDescImpl *>::getName() [T = (anonymous namespace)::PropDescImpl *]", "PropertyMessageDescriptionImpl", "static const char *physx::shdfnd::ReflectionAllocator<(anonymous namespace)::PropertyMessageEntryImpl>::getName() [T = (anonymous namespace)::PropertyMessageEntryImpl]", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PropertyMessageEntry>::getName() [T = physx::pvdsdk::PropertyMessageEntry]", "static const char *physx::shdfnd::ReflectionAllocator<(anonymous namespace)::PropertyMessageDescriptionImpl *>::getName() [T = (anonymous namespace)::PropertyMessageDescriptionImpl *]", "PvdObjectModelMetaData::clone", "minimum", "maximum", "column0", "column1", "column2", "column3", "physx3_debugger_internal", "ArrayData", "PvdI8", "PvdU8", "PvdBool", "PvdI16", "PvdU16", "PvdI32", "PvdU32", "PvdI64", "PvdU64", "PvdF32", "PvdF64", "PvdColor", "PxVec2", "PxVec3", "PxVec4", "PxQuat", "PxBounds3", "PxTransform", "PxMat33", "PxMat44", "U32Array4", "./PxShared/src/pvd/src/PxPvdObjectModelInternalTypes.h", "UserRenderBuffer", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PvdDefaultSocketTransport>::getName() [T = physx::pvdsdk::PvdDefaultSocketTransport]", "_debugger_", "PxProfileZone", "PxProfileMemoryEventBuffer", "PvdUserRenderer", "static const char *physx::shdfnd::ReflectionAllocator<physx::pvdsdk::PvdClient *>::getName() [T = physx::pvdsdk::PvdClient *]", "TDataType", "PvdUserRenderParser::mBuffer", "Height Field Overlap test called with height fields unregistered ", "PhysX/Source/GeomUtils/src/mesh/GuMidphaseInterface.h", "BV4 midphase only supported on Intel platforms.", "./PhysX/Source/GeomUtils/src/GuRaycastTests.cpp", "Height Field Raycast test called with height fields unregistered ", "Adjacencies::GetBoundaryVertices: NULL parameter!", "Adjacencies::MakeLastRef: NULL parameter!", "./PhysX/Source/PhysXCooking/src/Cooking.cpp", "Cooking::validateTriangleMesh: user-provided triangle mesh descriptor is invalid!", "Cooking::cookConvexMesh: user-provided convex mesh descriptor is invalid!", "Cooking::cookConvexMesh: provided cooking parameter areaTestEpsilon is invalid!", "Cooking::cookConvexMesh: provided cooking parameter planeTolerance is invalid!", "Cooking::cookConvexMesh: user-provided hull must have less than 256 vertices!", "./PhysX/Source/PhysXCooking/src/CookingUtils.cpp", "./PhysX/Source/PhysXCooking/src/EdgeList.cpp", "EdgeList::CreateFacesToEdges: NULL parameter!", "EdgeList::ComputeActiveEdges: NULL parameter!", "ActiveEdges::ComputeConvexEdges: no edges in edge list!", "ActiveEdges::ComputeConvexEdges: no edge data in edge list!", "ActiveEdges::ComputeConvexEdges: no edge-to-triangle in edge list!", "ActiveEdges::ComputeConvexEdges: no faces-by-edges in edge list!", "./PhysX/Source/PhysXCooking/src/MeshCleaner.cpp", "./PhysX/Source/PhysXCooking/src/Quantizer.cpp", "Adjacencies::CreateDatabase: can't work on non-manifold meshes.", "Adjacencies::UpdateLink: invalid edge reference", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxVec3>::getName() [T = physx::PxVec3]", "static const char *physx::shdfnd::ReflectionAllocator<physx::AdjTriangle>::getName() [T = physx::AdjTriangle]", "static const char *physx::shdfnd::ReflectionAllocator<AdjEdge>::getName() [T = AdjEdge]", "static const char *physx::shdfnd::ReflectionAllocator<physx::InflationConvexHullLib>::getName() [T = physx::InflationConvexHullLib]", "static const char *physx::shdfnd::ReflectionAllocator<physx::QuickHullConvexHullLib>::getName() [T = physx::QuickHullConvexHullLib]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::HeightField>::getName() [T = physx::Gu::HeightField]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cooking>::getName() [T = physx::Cooking]", "static const char *physx::shdfnd::ReflectionAllocator<float>::getName() [T = float]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::EdgeTriangleData>::getName() [T = physx::Gu::EdgeTriangleData]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::EdgeData>::getName() [T = physx::Gu::EdgeData]", "static const char *physx::shdfnd::ReflectionAllocator<QuantizerImpl>::getName() [T = QuantizerImpl]", "PxAggregate: can't add actor to aggregate, max number of actors reached", "PxAggregate: can't add actor to aggregate, actor already belongs to an aggregate", "PxAggregate: can't add actor to aggregate, actor already belongs to a scene", "PxAggregate: can't add articulation link to aggregate, only whole articulations can be added", "PxAggregate: can't remove actor, actor doesn't belong to aggregate", "PxAggregate: can't remove articulation link, only whole articulations can be removed", "PxAggregate: can't add articulation links, max number of actors reached", "PxAggregate: can't add articulation to aggregate, articulation already belongs to an aggregate", "PxAggregate: can't add articulation to aggregate, articulation already belongs to a scene", "PxAggregate: can't remove articulation, articulation doesn't belong to aggregate", "./PhysX/Source/PhysX/src/NpArticulationLink.cpp", "PxArticulationLink::release(): Only leaf articulation links can be released. Release call failed", "./PhysX/Source/PhysX/src/NpBatchQuery.cpp", "PxBatchQuery::setUserMemory: This batch is still executing, skipping setUserMemory", "PxBatchQuery::execute: This batch is already executing", "PxBatchQuery::execute: Another thread is still adding queries to this batch", "PxBatchQuery::raycast: This batch is still executing, skipping query.", "PxBatchQuery::overlap: This batch is still executing, skipping query.", "PxBatchQuery::sweep: This batch is still executing, skipping query.", " Precise sweep doesn't support MTD. Perform MTD with default sweep", " eMTD cannot be used in conjunction with eASSUME_NO_INITIAL_OVERLAP. eASSUME_NO_INITIAL_OVERLAP will be ignored", " Precise sweep doesn't support inflation, inflation will be overwritten to be zero", "PxBatchQuery::release: This batch is still executing, skipping release", "./PhysX/Source/PhysX/src/NpMaterial.cpp", "PxMaterial::setRestitution: Invalid value %f was clamped to [0,1]!", "Wrong version: PhysX version is 0x%08x, tried to create 0x%08x", "./PhysX/Source/PhysX/src/NpPhysics.cpp", "Scale invalid.\n", "Unable to create scene.", "Unable to create scene. Task manager creation failed.", "./PhysX/Source/PhysX/src/NpRigidDynamic.cpp", "PxRigidDynamic::setGlobalPose: Actor is part of a pruning structure, pruning structure is now invalid!", "PxSerializerDefaultAdapter", "./PhysX/Source/PhysX/src/NpSerializerAdapter.cpp", "RTreeTriangleMesh", "BV4TriangleMesh", "NpRigidDynamic", "NpRigidStatic", "NpShape", "NpMaterial", "NpConstraint", "NpAggregate", "NpArticulation", "NpArticulationLink", "NpArticulationJoint", "Sq::PruningStructure", "NpCloth", "NpClothFabric", "PxBase", "PxActor", "PxRigidActor", "PxRigidBody", "PhysX/Source/PhysX/src/NpRigidActorTemplate.h", "PxRigidActor::attachShape: Actor is part of a pruning structure, pruning structure is now invalid!", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpArticulationLink *>::getName() [T = physx::NpArticulationLink *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxDebugLine>::getName() [T = physx::PxDebugLine]", "PhysX/Source/PhysX/src/NpMaterialManager.h", "PhysX/Source/PhysX/src/NpPhysicsInsertionCallback.h", "Inserting object failed: Object type not supported for buildObjectFromData.", "PxRigidActor::release: Actor is part of a pruning structure, pruning structure is now invalid!", "PxMaterial", "PxRigidDynamic", "PxArticulationLink", "PxArticulationJoint", "PxShared/src/foundation/include/PsSync.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::SyncImpl>::getName() [T = physx::shdfnd::SyncImpl]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpPhysics>::getName() [T = physx::NpPhysics]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpScene>::getName() [T = physx::NpScene]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpScene *>::getName() [T = physx::NpScene *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::PruningStructure>::getName() [T = physx::Sq::PruningStructure]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpPhysics::NpDelListenerEntry>::getName() [T = physx::NpPhysics::NpDelListenerEntry]", "PhysX/Source/PhysX/src/NpActorTemplate.h", "Attempt to set the client id when an actor is already in a scene.", "PhysX/Source/PhysX/src/buffering/ScbActor.h", "Attempt to set the client id when an actor is buffering", "PxRigidActor::detachShape: Actor is part of a pruning structure, pruning structure is now invalid!", "PxRigidActor::detachShape: shape is not attached to this actor!", "PhysX/Source/PhysX/src/NpRigidBodyTemplate.h", "RigidBody::setRigidBodyFlag: kinematic bodies with CCD enabled are not supported! CCD will be ignored.", "RigidBody::setRigidBodyFlag: eENABLE_CCD can't be raised as the same time as eENABLE_SPECULATIVE_CCD! eENABLE_SPECULATIVE_CCD will be ignored.", "RigidBody::setRigidBodyFlag: dynamic meshes/planes/heightfields are not supported!", "RigidBody::setRigidBodyFlag: kinematic articulation links are not supported!", "NpActor::setAggregate() failed", "NpActor", "char", "NpConnectorArray", "mConnectorArray", "RefCountable", "userData", "MaterialCore", "mActor0", "mActor1", "Scb::Constraint", "mIsDirty", "mPaddingFromBool", "NpShapeManager", "PtrTable", "mShapes", "mSceneQueryData", "mPruningStructure", "NpInternalShapeFlags", "PxU8", "mActor", "Scb::Shape", "mShape", "PxI32", "mExclusiveAndActorCount", "mShapeManager", "PxU32", "mIndex", "Scb::RigidStatic", "mRigidStatic", "NpConnector", "mObject", "mBufferUsed", "Scb::Body", "mBody", "NpArticulationLinkArray", "Scb::Articulation", "mArticulation", "mArticulationLinks", "mAggregate", "mRoot", "mInboundJoint", "mParent", "mChildLinks", "Scb::ArticulationJoint", "mJoint", "Scb::Aggregate", "mNbActors", "mActors", "Sc::ClothFabricCore", "mFabric", "Scb::Cloth", "mCloth", "mClothFabric", "mParticleData", "PxBaseFlags", "PxU16", "PxType", "mConcreteType", "mBaseFlags", "mRefCount", "./PhysX/Source/PhysX/src/NpShape.cpp", "PxShape::setGeometry(): Invalid geometry type. Changing the type of the shape is not supported.", "PxShape::setGeometry: Shape is a part of pruning structure, pruning structure is now invalid!", "PxShape::setLocalPose: Shape is a part of pruning structure, pruning structure is now invalid!", "PxShape::getMaterialFromInternalFaceIndex received 0xFFFFffff as input - returning NULL.", "PxShape::setFlag(s): triangle mesh and heightfield triggers are not supported!", "PxShape::setFlag(s): shapes cannot simultaneously be trigger shapes and simulation shapes.", "PxShape::setFlag(s): triangle mesh, heightfield and plane shapes can only be simulation shapes if part of a PxRigidStatic!", "PxShape::setFlag: Shape is a part of pruning structure, pruning structure is now invalid!", "material pointer %d is NULL!", "%s: multiple materials defined for single material geometry!", "%s: PxTriangleMesh material indices reference more materials than provided!", "%s: PxHeightField material indices reference more materials than provided!", "./PhysX/Source/PhysX/src/NpSpatialIndex.cpp", "PxI8", "PxI16", "PxReal", "ShadowBitMap", "mMap", "mWordCount", "mAllocator", "PxPlane", "PxConstraintInvMassScale", "linear0", "angular0", "linear1", "angular1", "PxMeshScale", "static const char *physx::shdfnd::ReflectionAllocator<unsigned short>::getName() [T = unsigned short]", "PxSpatialLocationCallback: distance may not be extended.", "PxShape", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpConnector>::getName() [T = physx::NpConnector]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpSpatialIndex>::getName() [T = physx::NpSpatialIndex]", "./PhysX/Source/PhysXExtensions/src/ExtClothFabricCooker.cpp", "PxFabricCookerImpl::cook: desc.isValid() failed!", "PxJoint", "PxConstraintConnector", "mLocalPose", "mPxConstraint", "RevoluteJointData", "SphericalJointData", "DistanceJoint", "DistanceJointData", "mRecomputeMotion", "mRecomputeLimits", "D6JointData", "PrismaticJointData", "FixedJointData", "PxSerialObjectId", "PxU64", "SerialObjectIndex", "Sn::ManifestEntry", "Sn::ImportReference", "Sn::ExportReference", "objIndex", "Sn::InternalReferencePtr", "kind", "Sn::InternalReferenceIdx", "./PhysX/Source/PhysXExtensions/src/ExtTriangleMeshExt.cpp", "PxRevoluteJointFlags", "driveVelocity", "driveForceLimit", "driveGearRatio", "PxJointAngularLimitPair", "tqHigh", "tqLow", "tqPad", "projectionLinearTolerance", "projectionAngularTolerance", "jointFlags", "PxSphericalJointFlags", "PxJointLimitCone", "tanQYLimit", "tanQZLimit", "tanQPad", "PxDistanceJointFlags", "stiffness", "PxD6Motion::Enum", "motion", "PxJointLinearLimit", "linearLimit", "swingLimit", "twistLimit", "PxD6JointDrive", "drive", "drivePosition", "driveLinearVelocity", "driveAngularVelocity", "limited", "driving", "thSwingY", "thSwingZ", "thSwingPad", "tqSwingY", "tqSwingZ", "tqSwingPad", "tqTwistLow", "tqTwistHigh", "tqTwistPad", "linearMinDist", "PxPrismaticJointFlags", "PxJointLinearLimitPair", "invMassScale", "PxD6JointDriveFlags", "forceLimit", "PxJointLimitParameters", "restitution", "yAngle", "zAngle", "upper", "lower", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxVec4>::getName() [T = physx::PxVec4]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::Pair<physx::shdfnd::Pair<unsigned int, unsigned int>, physx::PxClothFabricPhaseType::Enum> >::getName() [T = physx::shdfnd::Pair<physx::shdfnd::Pair<unsigned int, unsigned int>, physx::PxClothFabricPhaseType::Enum>]", "static const char *physx::shdfnd::ReflectionAllocator<(anonymous namespace)::ConstraintGraphColorCount>::getName() [T = (anonymous namespace)::ConstraintGraphColorCount]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothFabricPhase>::getName() [T = physx::PxClothFabricPhase]", "PxShared/src/foundation/include/PsSortInternals.h", "PhysX/Source/PhysXExtensions/src/ExtSharedQueueEntryPool.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::SharedQueueEntry>::getName() [T = physx::Ext::SharedQueueEntry]", "PxShared/src/foundation/include/PsSList.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::SListImpl>::getName() [T = physx::shdfnd::SListImpl]", "PxShared/src/foundation/include/PsThread.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::ThreadImpl>::getName() [T = physx::shdfnd::ThreadImpl]", "./PhysX/Source/PhysXExtensions/src/ExtD6Joint.cpp", "no error", "invalid operation", "performance warning", "%s (%d) : %s : %s\n", "./PhysX/Source/PhysXExtensions/src/ExtParticleExt.cpp", "PxParticleExt::IndexPool::allocateIndices: Not all requested indices allocated; maximum reached.", "PxParticleExt::IndexPool::freeIndices: Provided number of indices exceeds number of actually allocated indices. Call faild.", "PxParticleExt::IndexPool::freeIndices: Provided indices which where not actually allocated before. Call failed.", "./PhysX/Source/PhysXExtensions/src/ExtSphericalJoint.cpp", "PhysX/Source/PhysXExtensions/src/ExtSphericalJoint.h", "PxD6Joint", "PxSphericalJoint", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxBase *>::getName() [T = physx::PxBase *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxConvexMesh *>::getName() [T = physx::PxConvexMesh *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTriangleMesh *>::getName() [T = physx::PxTriangleMesh *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxHeightField *>::getName() [T = physx::PxHeightField *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxMaterial *>::getName() [T = physx::PxMaterial *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothFabric *>::getName() [T = physx::PxClothFabric *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxShape *>::getName() [T = physx::PxShape *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxActor *>::getName() [T = physx::PxActor *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxConstraint *>::getName() [T = physx::PxConstraint *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxArticulation *>::getName() [T = physx::PxArticulation *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxAggregate *>::getName() [T = physx::PxAggregate *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::D6Joint>::getName() [T = physx::Ext::D6Joint]", "static const char *physx::shdfnd::ReflectionAllocator<Cell>::getName() [T = Cell]", "static const char *physx::shdfnd::ReflectionAllocator<InternalIndexPool>::getName() [T = InternalIndexPool]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::SphericalJoint>::getName() [T = physx::Ext::SphericalJoint]", "PxWorker%02d", "./PhysX/Source/PhysXExtensions/src/ExtFixedJoint.cpp", "./PhysX/Source/PhysXExtensions/src/ExtPrismaticJoint.cpp", "./PhysX/Source/PhysXExtensions/src/ExtPxStringTable.cpp", "./PhysX/Source/PhysXExtensions/src/ExtRevoluteJoint.cpp", "./PhysX/Source/PhysXExtensions/src/ExtSmoothNormals.cpp", "PhysX/Source/PhysXExtensions/src/ExtFixedJoint.h", "PhysX/Source/PhysXExtensions/src/ExtPrismaticJoint.h", "<no allocation names in this config>", "PxStringTableImpl: const char*", "PhysX/Source/PhysXExtensions/src/ExtRevoluteJoint.h", "PxRigidBodyExt::updateMassAndInertia", "./PhysX/Source/PhysXExtensions/src/ExtRigidBodyExt.cpp", "%s: Mass and inertia computation failed, setting mass to 1 and inertia to (1,1,1)", "%s: No density specified, setting mass to 1 and inertia to (1,1,1)", "computeMassAndInertia: Provided mass or density has no valid value", "computeMassAndInertia: Not enough mass/density values provided for all (simulation) shapes", "computeMassAndInertia: Dynamic actor with illegal collision shapes", "%s: inertia tensor has negative components (ill-conditioned input expected). Approximation for inertia tensor will be used instead.", "PxRigidBodyExt::setMassAndUpdateInertia", "%s: No mass specified, setting mass to 1 and inertia to (1,1,1)", "PxRigidBodyExt::addForce methods do not support eACCELERATION or eVELOCITY_CHANGE modes", "PxFixedJoint", "PxPrismaticJoint", "PxRevoluteJoint", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::DefaultCpuDispatcher>::getName() [T = physx::Ext::DefaultCpuDispatcher]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::FixedJoint>::getName() [T = physx::Ext::FixedJoint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::PrismaticJoint>::getName() [T = physx::Ext::PrismaticJoint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Ext::RevoluteJoint>::getName() [T = physx::Ext::RevoluteJoint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxMassProperties>::getName() [T = physx::PxMassProperties]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTransform>::getName() [T = physx::PxTransform]", "PxControllerManager::getController(): out-of-range index", "PxControllerManager::getObstacleContext(): out-of-range index", "./PhysX/Source/PhysXCharacterKinematic/src/CctObstacleContext.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxDebugPoint>::getName() [T = physx::PxDebugPoint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxDebugTriangle>::getName() [T = physx::PxDebugTriangle]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxDebugText>::getName() [T = physx::PxDebugText]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::RenderBuffer>::getName() [T = physx::Cm::RenderBuffer]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::BoxController>::getName() [T = physx::Cct::BoxController]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::CapsuleController>::getName() [T = physx::Cct::CapsuleController]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::Controller *>::getName() [T = physx::Cct::Controller *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::ObstacleContext>::getName() [T = physx::Cct::ObstacleContext]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::ObstacleContext *>::getName() [T = physx::Cct::ObstacleContext *]", "static const char *physx::shdfnd::ReflectionAllocator<const void *>::getName() [T = const void *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxExtendedBox>::getName() [T = physx::PxExtendedBox]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxExtendedCapsule>::getName() [T = physx::PxExtendedCapsule]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::CharacterControllerManager>::getName() [T = physx::Cct::CharacterControllerManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::ObstacleContext::InternalBoxObstacle>::getName() [T = physx::Cct::ObstacleContext::InternalBoxObstacle]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cct::ObstacleContext::InternalCapsuleObstacle>::getName() [T = physx::Cct::ObstacleContext::InternalCapsuleObstacle]", ".text", "/dev/", "ashmem/", "[stack:", "/proc/", "/maps", ".gnu_debugdata", ".gnu_debuglink", "/usr/lib/debug", "/.debug/", "@@HHPPXX", "/sys/devices/system/cpu/possible", "libc.so", "getauxval", "../src/fmod_dsp_connectionpool.cpp", "http://", "http:\\\\", "https://", "https:\\\\", "mms://", "mms:\\\\", "TIT2", "FMOD SoundCard Unit", "FMOD ChannelGroup Target Unit", "FMOD master group", "FMOD stream thread", "FMOD Mixer unit", "ChannelGroup", "music", "../src/fmod_autocleanup.h", "X94<", "../src/fmod_speakerlevels_pool.cpp", "../src/fmod_soundgroupi.cpp", "X94<", "../src/fmod_reverbi.cpp", "../src/fmod_profile_dsp.cpp", "../src/fmod_profile_cpu.cpp", "../src/fmod_profile_codec.cpp", "../src/fmod_profile_channel.cpp", "../src/fmod_profile.cpp", "../src/fmod_plugin.cpp", "../src/fmod_metadata.cpp", "../src/fmod_historybuffer_pool.cpp", "../src/fmod_globals.cpp", "../src/fmod_channelpool.cpp", "../src/fmod_channelgroupi.cpp", "$tI../src/fmod_async.cpp", "FMOD nonblocking thread (%d)", "../src/fmod.cpp", "javax/net/ssl/X509TrustManager", "checkClientTrusted", "([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V", "checkServerTrusted", "getAcceptedIssuers", "()[Ljava/security/cert/X509Certificate;", "javax/net/ssl/TrustManagerFactory", "getAlgorithm", "getDefaultAlgorithm", "getInstance", "(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/TrustManagerFactory;", "getProvider", "()Ljava/security/Provider;", "getTrustManagers", "()[Ljavax/net/ssl/TrustManager;", "(Ljava/security/KeyStore;)V", "(Ljavax/net/ssl/ManagerFactoryParameters;)V", "(Ljavax/net/ssl/TrustManagerFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V", "java/util/Set", "(Ljava/lang/Object;)Z", "addAll", "(Ljava/util/Collection;)Z", "contains", "containsAll", "hashCode", "()Ljava/util/Iterator;", "remove", "removeAll", "retainAll", "spliterator", "()Ljava/util/Spliterator;", "toArray", "()[Ljava/lang/Object;", "([Ljava/lang/Object;)[Ljava/lang/Object;", "java/util/Scanner", "close", "delimiter", "()Ljava/util/regex/Pattern;", "findInLine", "(Ljava/util/regex/Pattern;)Ljava/lang/String;", "findWithinHorizon", "(Ljava/lang/String;I)Ljava/lang/String;", "(Ljava/util/regex/Pattern;I)Ljava/lang/String;", "hasNext", "(Ljava/util/regex/Pattern;)Z", "hasNextBigDecimal", "hasNextBigInteger", "hasNextBoolean", "hasNextByte", "hasNextDouble", "hasNextFloat", "hasNextInt", "hasNextLine", "hasNextLong", "hasNextShort", "ioException", "()Ljava/io/IOException;", "locale", "()Ljava/util/Locale;", "()Ljava/util/regex/MatchResult;", "next", "nextBigDecimal", "()Ljava/math/BigDecimal;", "nextBigInteger", "()Ljava/math/BigInteger;", "(I)Ljava/math/BigInteger;", "nextBoolean", "nextByte", "(I)B", "nextDouble", "nextFloat", "nextInt", "nextLine", "nextLong", "(I)J", "nextShort", "(I)S", "radix", "()Ljava/util/Scanner;", "skip", "(Ljava/lang/String;)Ljava/util/Scanner;", "(Ljava/util/regex/Pattern;)Ljava/util/Scanner;", "useDelimiter", "useLocale", "(Ljava/util/Locale;)Ljava/util/Scanner;", "useRadix", "(I)Ljava/util/Scanner;", "(Ljava/io/File;)V", "(Ljava/io/File;Ljava/lang/String;)V", "(Ljava/io/InputStream;)V", "(Ljava/io/InputStream;Ljava/lang/String;)V", "(Ljava/lang/Readable;)V", "(Ljava/nio/channels/ReadableByteChannel;)V", "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)V", "(Ljava/nio/file/Path;)V", "(Ljava/nio/file/Path;Ljava/lang/String;)V", "java/util/NoSuchElementException", "java/util/Map", "(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "computeIfAbsent", "(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;", "computeIfPresent", "containsKey", "containsValue", "entrySet", "()Ljava/util/Set;", "forEach", "(Ljava/util/function/BiConsumer;)V", "(Ljava/lang/Object;)Ljava/lang/Object;", "getOrDefault", "keySet", "merge", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;", "putAll", "(Ljava/util/Map;)V", "putIfAbsent", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "replace", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z", "replaceAll", "(Ljava/util/function/BiFunction;)V", "()Ljava/util/Collection;", "java/util/Map$Entry", "comparingByKey", "()Ljava/util/Comparator;", "(Ljava/util/Comparator;)Ljava/util/Comparator;", "comparingByValue", "getKey", "getValue", "setValue", "java/util/Locale", "CANADA", "CANADA_FRENCH", "CHINA", "ENGLISH", "FRANCE", "GERMAN", "GERMANY", "ITALIAN", "ITALY", "JAPAN", "JAPANESE", "KOREA", "KOREAN", "PRIVATE_USE_EXTENSION", "ROOT", "SIMPLIFIED_CHINESE", "TAIWAN", "TRADITIONAL_CHINESE", "UNICODE_LOCALE_EXTENSION", "filter", "(Ljava/util/List;Ljava/util/Collection;)Ljava/util/List;", "(Ljava/util/List;Ljava/util/Collection;Ljava/util/Locale$FilteringMode;)Ljava/util/List;", "filterTags", "forLanguageTag", "(Ljava/lang/String;)Ljava/util/Locale;", "getAvailableLocales", "()[Ljava/util/Locale;", "getCountry", "getDefault", "(Ljava/util/Locale$Category;)Ljava/util/Locale;", "getDisplayCountry", "(Ljava/util/Locale;)Ljava/lang/String;", "getDisplayLanguage", "getDisplayName", "getDisplayScript", "getDisplayVariant", "getExtension", "(C)Ljava/lang/String;", "getExtensionKeys", "getISO3Country", "getISO3Language", "getISOCountries", "()[Ljava/lang/String;", "getISOLanguages", "getLanguage", "getScript", "getUnicodeLocaleAttributes", "getUnicodeLocaleKeys", "getUnicodeLocaleType", "getVariant", "hasExtensions", "lookup", "(Ljava/util/List;Ljava/util/Collection;)Ljava/util/Locale;", "lookupTag", "(Ljava/util/List;Ljava/util/Collection;)Ljava/lang/String;", "setDefault", "(Ljava/util/Locale$Category;Ljava/util/Locale;)V", "(Ljava/util/Locale;)V", "stripExtensions", "toLanguageTag", "java/util/List", "(ILjava/lang/Object;)V", "(ILjava/util/Collection;)Z", "(I)Ljava/lang/Object;", "indexOf", "(Ljava/lang/Object;)I", "lastIndexOf", "listIterator", "()Ljava/util/ListIterator;", "(I)Ljava/util/ListIterator;", "(Ljava/util/function/UnaryOperator;)V", "(ILjava/lang/Object;)Ljava/lang/Object;", "(Ljava/util/Comparator;)V", "subList", "(II)Ljava/util/List;", "java/util/Iterator", "forEachRemaining", "(Ljava/util/function/Consumer;)V", "java/util/HashSet", "(IF)V", "(Ljava/util/Collection;)V", "java/util/ArrayList", "ensureCapacity", "removeIf", "(Ljava/util/function/Predicate;)Z", "removeRange", "trimToSize", "java/util/AbstractCollection", "java/security/cert/Certificate", "getEncoded", "()[B", "getPublicKey", "()Ljava/security/PublicKey;", "getType", "verify", "(Ljava/security/PublicKey;)V", "(Ljava/security/PublicKey;Ljava/lang/String;)V", "(Ljava/security/PublicKey;Ljava/security/Provider;)V", "writeReplace", "java/nio/Buffer", "arrayOffset", "()Ljava/nio/Buffer;", "flip", "hasArray", "hasRemaining", "isDirect", "isReadOnly", "(I)Ljava/nio/Buffer;", "mark", "remaining", "rewind", "java/lang/Thread", "MAX_PRIORITY", "MIN_PRIORITY", "NORM_PRIORITY", "activeCount", "checkAccess", "countStackFrames", "currentThread", "()Ljava/lang/Thread;", "dumpStack", "enumerate", "([Ljava/lang/Thread;)I", "getAllStackTraces", "()Ljava/util/Map;", "getContextClassLoader", "()Ljava/lang/ClassLoader;", "getDefaultUncaughtExceptionHandler", "()Ljava/lang/Thread$UncaughtExceptionHandler;", "getPriority", "getStackTrace", "()[Ljava/lang/StackTraceElement;", "getState", "()Ljava/lang/Thread$State;", "getThreadGroup", "()Ljava/lang/ThreadGroup;", "getUncaughtExceptionHandler", "holdsLock", "interrupt", "interrupted", "isAlive", "isDaemon", "isInterrupted", "join", "(J)V", "resume", "setContextClassLoader", "(Ljava/lang/ClassLoader;)V", "setDaemon", "setDefaultUncaughtExceptionHandler", "(Ljava/lang/Thread$UncaughtExceptionHandler;)V", "setName", "setPriority", "setUncaughtExceptionHandler", "sleep", "(Ljava/lang/Throwable;)V", "suspend", "yield", "(Ljava/lang/Runnable;)V", "(Ljava/lang/Runnable;Ljava/lang/String;)V", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V", "(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "java/lang/System", "Ljava/io/PrintStream;", "arraycopy", "(Ljava/lang/Object;ILjava/lang/Object;II)V", "clearProperty", "console", "()Ljava/io/Console;", "currentTimeMillis", "getProperties", "()Ljava/util/Properties;", "getProperty", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "getSecurityManager", "()Ljava/lang/SecurityManager;", "getenv", "identityHashCode", "inheritedChannel", "()Ljava/nio/channels/Channel;", "lineSeparator", "mapLibraryName", "nanoTime", "runFinalization", "runFinalizersOnExit", "setErr", "(Ljava/io/PrintStream;)V", "setIn", "setOut", "setProperties", "(Ljava/util/Properties;)V", "setProperty", "setSecurityManager", "(Ljava/lang/SecurityManager;)V", "java/lang/StringBuilder", "(C)Ljava/lang/StringBuilder;", "(D)Ljava/lang/StringBuilder;", "(F)Ljava/lang/StringBuilder;", "(I)Ljava/lang/StringBuilder;", "(J)Ljava/lang/StringBuilder;", "(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;", "(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", "(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;", "(Z)Ljava/lang/StringBuilder;", "([C)Ljava/lang/StringBuilder;", "([CII)Ljava/lang/StringBuilder;", "appendCodePoint", "(II)Ljava/lang/StringBuilder;", "deleteCharAt", "(Ljava/lang/String;)I", "(Ljava/lang/String;I)I", "(IC)Ljava/lang/StringBuilder;", "(ID)Ljava/lang/StringBuilder;", "(IF)Ljava/lang/StringBuilder;", "(IJ)Ljava/lang/StringBuilder;", "(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;", "(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;", "(ILjava/lang/Object;)Ljava/lang/StringBuilder;", "(ILjava/lang/String;)Ljava/lang/StringBuilder;", "(IZ)Ljava/lang/StringBuilder;", "(I[C)Ljava/lang/StringBuilder;", "(I[CII)Ljava/lang/StringBuilder;", "(IILjava/lang/String;)Ljava/lang/StringBuilder;", "reverse", "()Ljava/lang/StringBuilder;", "(Ljava/lang/CharSequence;)V", "java/lang/String", "CASE_INSENSITIVE_ORDER", "charAt", "(I)C", "codePointAt", "codePointBefore", "codePointCount", "compareTo", "compareToIgnoreCase", "concat", "(Ljava/lang/CharSequence;)Z", "contentEquals", "(Ljava/lang/StringBuffer;)Z", "copyValueOf", "([C)Ljava/lang/String;", "([CII)Ljava/lang/String;", "endsWith", "equalsIgnoreCase", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", "(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", "getBytes", "(II[BI)V", "(Ljava/lang/String;)[B", "(Ljava/nio/charset/Charset;)[B", "getChars", "(II[CI)V", "(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;", "(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;", "matches", "offsetByCodePoints", "regionMatches", "(ILjava/lang/String;II)Z", "(ZILjava/lang/String;II)Z", "(CC)Ljava/lang/String;", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;", "replaceFirst", "(Ljava/lang/String;)[Ljava/lang/String;", "(Ljava/lang/String;I)[Ljava/lang/String;", "startsWith", "(Ljava/lang/String;I)Z", "subSequence", "(II)Ljava/lang/CharSequence;", "substring", "(I)Ljava/lang/String;", "(II)Ljava/lang/String;", "toCharArray", "()[C", "toLowerCase", "toUpperCase", "trim", "valueOf", "(D)Ljava/lang/String;", "(F)Ljava/lang/String;", "(J)Ljava/lang/String;", "(Ljava/lang/Object;)Ljava/lang/String;", "(Z)Ljava/lang/String;", "(Ljava/lang/StringBuffer;)V", "(Ljava/lang/StringBuilder;)V", "([B)V", "([BI)V", "([BII)V", "([BIII)V", "([BIILjava/lang/String;)V", "([BIILjava/nio/charset/Charset;)V", "([BLjava/lang/String;)V", "([BLjava/nio/charset/Charset;)V", "([C)V", "([CII)V", "([III)V", "java/lang/SecurityException", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "java/lang/RuntimeException", "(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V", "java/lang/Runnable", "finalize", "()Ljava/lang/Class;", "notify", "notifyAll", "java/lang/Number", "byteValue", "doubleValue", "floatValue", "intValue", "longValue", "shortValue", "java/lang/NoSuchMethodError", "java/lang/Integer", "BYTES", "MAX_VALUE", "MIN_VALUE", "bitCount", "compare", "(Ljava/lang/Integer;)I", "compareUnsigned", "(Ljava/lang/String;)Ljava/lang/Integer;", "divideUnsigned", "getInteger", "(Ljava/lang/String;I)Ljava/lang/Integer;", "(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;", "highestOneBit", "lowestOneBit", "numberOfLeadingZeros", "numberOfTrailingZeros", "parseInt", "parseUnsignedInt", "remainderUnsigned", "reverseBytes", "rotateLeft", "rotateRight", "signum", "toBinaryString", "toHexString", "toOctalString", "toUnsignedLong", "toUnsignedString", "(I)Ljava/lang/Integer;", "java/lang/Float", "MAX_EXPONENT", "MIN_EXPONENT", "MIN_NORMAL", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "(FF)I", "(Ljava/lang/Float;)I", "floatToIntBits", "(F)I", "floatToRawIntBits", "(I)F", "isFinite", "(F)Z", "isInfinite", "isNaN", "(FF)F", "parseFloat", "(Ljava/lang/String;)F", "(F)Ljava/lang/Float;", "(Ljava/lang/String;)Ljava/lang/Float;", "(D)V", "(F)V", "java/lang/Exception", "java/lang/ClassLoader", "clearAssertionStatus", "defineClass", "(Ljava/lang/String;Ljava/nio/ByteBuffer;Ljava/security/ProtectionDomain;)Ljava/lang/Class;", "(Ljava/lang/String;[BII)Ljava/lang/Class;", "(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;", "([BII)Ljava/lang/Class;", "definePackage", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package;", "findClass", "(Ljava/lang/String;)Ljava/lang/Class;", "findLibrary", "findLoadedClass", "findResource", "(Ljava/lang/String;)Ljava/net/URL;", "findResources", "(Ljava/lang/String;)Ljava/util/Enumeration;", "findSystemClass", "getClassLoadingLock", "(Ljava/lang/String;)Ljava/lang/Object;", "(Ljava/lang/String;)Ljava/lang/Package;", "getPackages", "()[Ljava/lang/Package;", "getParent", "getResource", "getResourceAsStream", "(Ljava/lang/String;)Ljava/io/InputStream;", "getResources", "getSystemClassLoader", "getSystemResource", "getSystemResourceAsStream", "getSystemResources", "loadClass", "(Ljava/lang/String;Z)Ljava/lang/Class;", "registerAsParallelCapable", "resolveClass", "setClassAssertionStatus", "(Ljava/lang/String;Z)V", "setDefaultAssertionStatus", "setPackageAssertionStatus", "setSigners", "(Ljava/lang/Class;[Ljava/lang/Object;)V", "java/lang/ClassCastException", "java/lang/Class", "asSubclass", "(Ljava/lang/Class;)Ljava/lang/Class;", "desiredAssertionStatus", "forName", "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;", "getAnnotatedInterfaces", "()[Ljava/lang/reflect/AnnotatedType;", "getAnnotatedSuperclass", "()Ljava/lang/reflect/AnnotatedType;", "getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "getAnnotations", "()[Ljava/lang/annotation/Annotation;", "getAnnotationsByType", "(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;", "getCanonicalName", "getClassLoader", "getClasses", "()[Ljava/lang/Class;", "getComponentType", "getConstructor", "([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;", "getConstructors", "()[Ljava/lang/reflect/Constructor;", "getDeclaredAnnotation", "getDeclaredAnnotations", "getDeclaredAnnotationsByType", "getDeclaredClasses", "getDeclaredConstructor", "getDeclaredConstructors", "getDeclaredField", "(Ljava/lang/String;)Ljava/lang/reflect/Field;", "getDeclaredFields", "()[Ljava/lang/reflect/Field;", "getDeclaredMethod", "(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;", "getDeclaredMethods", "()[Ljava/lang/reflect/Method;", "getDeclaringClass", "getEnclosingClass", "getEnclosingConstructor", "()Ljava/lang/reflect/Constructor;", "getEnclosingMethod", "()Ljava/lang/reflect/Method;", "getEnumConstants", "getField", "getFields", "getGenericInterfaces", "()[Ljava/lang/reflect/Type;", "getGenericSuperclass", "()Ljava/lang/reflect/Type;", "getInterfaces", "getMethod", "getMethods", "getModifiers", "()Ljava/lang/Package;", "getProtectionDomain", "()Ljava/security/ProtectionDomain;", "getSigners", "getSimpleName", "getSuperclass", "getTypeName", "getTypeParameters", "()[Ljava/lang/reflect/TypeVariable;", "isAnnotation", "isAnnotationPresent", "(Ljava/lang/Class;)Z", "isAnonymousClass", "isArray", "isAssignableFrom", "isEnum", "isInstance", "isInterface", "isLocalClass", "isMemberClass", "isPrimitive", "isSynthetic", "newInstance", "toGenericString", "java/lang/CharSequence", "()Ljava/util/stream/IntStream;", "codePoints", "java/lang/Boolean", "FALSE", "TRUE", "booleanValue", "(ZZ)I", "(Ljava/lang/Boolean;)I", "getBoolean", "(Z)I", "logicalAnd", "(ZZ)Z", "logicalOr", "logicalXor", "parseBoolean", "(Ljava/lang/String;)Ljava/lang/Boolean;", "(Z)Ljava/lang/Boolean;", "java/io/IOException", "java/io/File", "pathSeparator", "pathSeparatorChar", "separator", "separatorChar", "canExecute", "canRead", "canWrite", "(Ljava/io/File;)I", "createNewFile", "createTempFile", "(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;", "(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;", "deleteOnExit", "getAbsoluteFile", "()Ljava/io/File;", "getAbsolutePath", "getCanonicalFile", "getCanonicalPath", "getFreeSpace", "getParentFile", "getPath", "getTotalSpace", "getUsableSpace", "isAbsolute", "isDirectory", "isFile", "isHidden", "lastModified", "(Ljava/io/FilenameFilter;)[Ljava/lang/String;", "listFiles", "()[Ljava/io/File;", "(Ljava/io/FileFilter;)[Ljava/io/File;", "(Ljava/io/FilenameFilter;)[Ljava/io/File;", "listRoots", "mkdir", "mkdirs", "renameTo", "(Ljava/io/File;)Z", "setExecutable", "(Z)Z", "setLastModified", "(J)Z", "setReadOnly", "setReadable", "setWritable", "toPath", "()Ljava/nio/file/Path;", "toURI", "()Ljava/net/URI;", "toURL", "()Ljava/net/URL;", "(Ljava/net/URI;)V", "android/widget/TextView", "AUTO_SIZE_TEXT_TYPE_NONE", "AUTO_SIZE_TEXT_TYPE_UNIFORM", "addExtraDataToAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;Ljava/lang/String;Landroid/os/Bundle;)V", "addTextChangedListener", "(Landroid/text/TextWatcher;)V", "(Ljava/lang/CharSequence;II)V", "autofill", "(Landroid/view/autofill/AutofillValue;)V", "beginBatchEdit", "bringPointIntoView", "cancelLongPress", "clearComposingText", "computeHorizontalScrollRange", "computeScroll", "computeVerticalScrollExtent", "computeVerticalScrollRange", "didTouchFocusSelect", "drawableHotspotChanged", "(FF)V", "drawableStateChanged", "endBatchEdit", "extractText", "(Landroid/view/inputmethod/ExtractedTextRequest;Landroid/view/inputmethod/ExtractedText;)Z", "findViewsWithText", "(Ljava/util/ArrayList;Ljava/lang/CharSequence;I)V", "getAccessibilityClassName", "()Ljava/lang/CharSequence;", "getAutoLinkMask", "getAutoSizeMaxTextSize", "getAutoSizeMinTextSize", "getAutoSizeStepGranularity", "getAutoSizeTextAvailableSizes", "()[I", "getAutoSizeTextType", "getAutofillType", "getAutofillValue", "()Landroid/view/autofill/AutofillValue;", "getBaseline", "getBottomPaddingOffset", "getBreakStrategy", "getCompoundDrawablePadding", "getCompoundDrawableTintList", "()Landroid/content/res/ColorStateList;", "getCompoundDrawableTintMode", "()Landroid/graphics/PorterDuff$Mode;", "getCompoundDrawables", "()[Landroid/graphics/drawable/Drawable;", "getCompoundDrawablesRelative", "getCompoundPaddingBottom", "getCompoundPaddingEnd", "getCompoundPaddingLeft", "getCompoundPaddingRight", "getCompoundPaddingStart", "getCompoundPaddingTop", "getCurrentHintTextColor", "getCurrentTextColor", "getCustomInsertionActionModeCallback", "()Landroid/view/ActionMode$Callback;", "getCustomSelectionActionModeCallback", "getDefaultEditable", "getDefaultMovementMethod", "()Landroid/text/method/MovementMethod;", "getEditableText", "()Landroid/text/Editable;", "getEllipsize", "()Landroid/text/TextUtils$TruncateAt;", "getError", "getExtendedPaddingBottom", "getExtendedPaddingTop", "getFilters", "()[Landroid/text/InputFilter;", "getFirstBaselineToTopHeight", "getFocusedRect", "(Landroid/graphics/Rect;)V", "getFontFeatureSettings", "getFontVariationSettings", "getFreezesText", "getGravity", "getHighlightColor", "getHint", "getHintTextColors", "getHyphenationFrequency", "getImeActionId", "getImeActionLabel", "getImeHintLocales", "()Landroid/os/LocaleList;", "getImeOptions", "getIncludeFontPadding", "getInputExtras", "(Z)Landroid/os/Bundle;", "getInputType", "getJustificationMode", "getKeyListener", "()Landroid/text/method/KeyListener;", "getLastBaselineToBottomHeight", "()Landroid/text/Layout;", "getLeftFadingEdgeStrength", "getLeftPaddingOffset", "getLetterSpacing", "getLineBounds", "(ILandroid/graphics/Rect;)I", "getLineCount", "getLineHeight", "getLineSpacingExtra", "getLineSpacingMultiplier", "getLinkTextColors", "getLinksClickable", "getMarqueeRepeatLimit", "getMaxEms", "getMaxHeight", "getMaxLines", "getMaxWidth", "getMinEms", "getMinHeight", "getMinLines", "getMinWidth", "getMovementMethod", "getOffsetForPosition", "getPaint", "()Landroid/text/TextPaint;", "getPaintFlags", "getPrivateImeOptions", "getRightFadingEdgeStrength", "getRightPaddingOffset", "getSelectionEnd", "getSelectionStart", "getShadowColor", "getShadowDx", "getShadowDy", "getShadowRadius", "getShowSoftInputOnFocus", "getText", "getTextClassifier", "()Landroid/view/textclassifier/TextClassifier;", "getTextColors", "getTextLocale", "getTextLocales", "getTextMetricsParams", "()Landroid/text/PrecomputedText$Params;", "getTextScaleX", "getTextSize", "getTopPaddingOffset", "getTotalPaddingBottom", "getTotalPaddingEnd", "getTotalPaddingLeft", "getTotalPaddingRight", "getTotalPaddingStart", "getTotalPaddingTop", "getTransformationMethod", "()Landroid/text/method/TransformationMethod;", "getTypeface", "()Landroid/graphics/Typeface;", "getUrls", "()[Landroid/text/style/URLSpan;", "hasOverlappingRendering", "hasSelection", "invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "isAllCaps", "isCursorVisible", "isElegantTextHeight", "isFallbackLineSpacing", "isInputMethodTarget", "isPaddingOffsetRequired", "isSuggestionsEnabled", "isTextSelectable", "jumpDrawablesToCurrentState", "moveCursorToVisibleOffset", "onAttachedToWindow", "onBeginBatchEdit", "onCheckIsTextEditor", "onCommitCompletion", "(Landroid/view/inputmethod/CompletionInfo;)V", "onCommitCorrection", "(Landroid/view/inputmethod/CorrectionInfo;)V", "onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "onCreateContextMenu", "(Landroid/view/ContextMenu;)V", "onCreateDrawableState", "onCreateInputConnection", "(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;", "onDragEvent", "(Landroid/view/DragEvent;)Z", "onDraw", "(Landroid/graphics/Canvas;)V", "onEditorAction", "onEndBatchEdit", "onFocusChanged", "(ZILandroid/graphics/Rect;)V", "onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "onKeyDown", "(ILandroid/view/KeyEvent;)Z", "onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "onKeyPreIme", "onKeyShortcut", "onKeyUp", "(ZIIII)V", "onMeasure", "onPreDraw", "onPrivateIMECommand", "(Ljava/lang/String;Landroid/os/Bundle;)Z", "onProvideAutofillStructure", "(Landroid/view/ViewStructure;I)V", "onProvideStructure", "(Landroid/view/ViewStructure;)V", "onResolvePointerIcon", "(Landroid/view/MotionEvent;I)Landroid/view/PointerIcon;", "onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "onRtlPropertiesChanged", "onSaveInstanceState", "()Landroid/os/Parcelable;", "onScreenStateChanged", "onScrollChanged", "(IIII)V", "onSelectionChanged", "onTextChanged", "(Ljava/lang/CharSequence;III)V", "onTextContextMenuItem", "onTouchEvent", "onTrackballEvent", "onVisibilityChanged", "(Landroid/view/View;I)V", "onWindowFocusChanged", "performLongClick", "removeTextChangedListener", "sendAccessibilityEventUnchecked", "(Landroid/view/accessibility/AccessibilityEvent;)V", "setAllCaps", "setAutoLinkMask", "setAutoSizeTextTypeUniformWithConfiguration", "setAutoSizeTextTypeUniformWithPresetSizes", "([II)V", "setAutoSizeTextTypeWithDefaults", "setBreakStrategy", "setCompoundDrawablePadding", "setCompoundDrawableTintList", "(Landroid/content/res/ColorStateList;)V", "setCompoundDrawableTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "setCompoundDrawables", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "setCompoundDrawablesRelative", "setCompoundDrawablesRelativeWithIntrinsicBounds", "setCompoundDrawablesWithIntrinsicBounds", "setCursorVisible", "setCustomInsertionActionModeCallback", "(Landroid/view/ActionMode$Callback;)V", "setCustomSelectionActionModeCallback", "setEditableFactory", "(Landroid/text/Editable$Factory;)V", "setElegantTextHeight", "setEllipsize", "(Landroid/text/TextUtils$TruncateAt;)V", "setEms", "setEnabled", "setError", "(Ljava/lang/CharSequence;Landroid/graphics/drawable/Drawable;)V", "setExtractedText", "(Landroid/view/inputmethod/ExtractedText;)V", "setFallbackLineSpacing", "setFilters", "([Landroid/text/InputFilter;)V", "setFirstBaselineToTopHeight", "setFontFeatureSettings", "setFontVariationSettings", "setFrame", "(IIII)Z", "setFreezesText", "setGravity", "setHeight", "setHighlightColor", "setHint", "setHintTextColor", "setHorizontallyScrolling", "setHyphenationFrequency", "setImeActionLabel", "(Ljava/lang/CharSequence;I)V", "setImeHintLocales", "(Landroid/os/LocaleList;)V", "setImeOptions", "setIncludeFontPadding", "setInputExtras", "setInputType", "setJustificationMode", "setKeyListener", "(Landroid/text/method/KeyListener;)V", "setLastBaselineToBottomHeight", "setLetterSpacing", "setLineHeight", "setLineSpacing", "setLines", "setLinkTextColor", "setLinksClickable", "setMarqueeRepeatLimit", "setMaxEms", "setMaxHeight", "setMaxLines", "setMaxWidth", "setMinEms", "setMinHeight", "setMinLines", "setMinWidth", "setMovementMethod", "(Landroid/text/method/MovementMethod;)V", "setOnEditorActionListener", "(Landroid/widget/TextView$OnEditorActionListener;)V", "setPadding", "setPaddingRelative", "setPaintFlags", "setPrivateImeOptions", "setRawInputType", "setScroller", "(Landroid/widget/Scroller;)V", "setSelectAllOnFocus", "setSelected", "setShadowLayer", "(FFFI)V", "setShowSoftInputOnFocus", "setSingleLine", "setSpannableFactory", "(Landroid/text/Spannable$Factory;)V", "setText", "(ILandroid/widget/TextView$BufferType;)V", "(Ljava/lang/CharSequence;Landroid/widget/TextView$BufferType;)V", "setTextAppearance", "(Landroid/content/Context;I)V", "setTextClassifier", "(Landroid/view/textclassifier/TextClassifier;)V", "setTextColor", "setTextIsSelectable", "setTextKeepState", "setTextLocale", "setTextLocales", "setTextMetricsParams", "(Landroid/text/PrecomputedText$Params;)V", "setTextScaleX", "setTextSize", "setTransformationMethod", "(Landroid/text/method/TransformationMethod;)V", "setTypeface", "(Landroid/graphics/Typeface;)V", "(Landroid/graphics/Typeface;I)V", "setWidth", "showContextMenu", "verifyDrawable", "(Landroid/graphics/drawable/Drawable;)Z", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "android/widget/ProgressBar", "getIndeterminateDrawable", "()Landroid/graphics/drawable/Drawable;", "getIndeterminateTintList", "getIndeterminateTintMode", "getInterpolator", "()Landroid/view/animation/Interpolator;", "getMax", "getMin", "getProgress", "getProgressBackgroundTintList", "getProgressBackgroundTintMode", "getProgressDrawable", "getProgressTintList", "getProgressTintMode", "getSecondaryProgress", "getSecondaryProgressTintList", "getSecondaryProgressTintMode", "incrementProgressBy", "incrementSecondaryProgressBy", "isAnimating", "isIndeterminate", "onDetachedFromWindow", "onSizeChanged", "onVisibilityAggregated", "postInvalidate", "setIndeterminate", "setIndeterminateDrawable", "setIndeterminateDrawableTiled", "setIndeterminateTintList", "setIndeterminateTintMode", "setInterpolator", "(Landroid/view/animation/Interpolator;)V", "setMax", "setMin", "setProgress", "(IZ)V", "setProgressBackgroundTintList", "setProgressBackgroundTintMode", "setProgressDrawable", "setProgressDrawableTiled", "setProgressTintList", "setProgressTintMode", "setSecondaryProgress", "setSecondaryProgressTintList", "setSecondaryProgressTintMode", "android/widget/CompoundButton", "getButtonDrawable", "getButtonTintList", "getButtonTintMode", "isChecked", "performClick", "setButtonDrawable", "setButtonTintList", "setButtonTintMode", "setChecked", "setOnCheckedChangeListener", "(Landroid/widget/CompoundButton$OnCheckedChangeListener;)V", "toggle", "android/widget/CompoundButton$OnCheckedChangeListener", "onCheckedChanged", "(Landroid/widget/CompoundButton;Z)V", "android/widget/CheckBox", "android/webkit/MimeTypeMap", "getExtensionFromMimeType", "getFileExtensionFromUrl", "getMimeTypeFromExtension", "getSingleton", "()Landroid/webkit/MimeTypeMap;", "hasExtension", "hasMimeType", "android/view/WindowManager", "getDefaultDisplay", "()Landroid/view/Display;", "removeViewImmediate", "(Landroid/view/View;)V", "android/view/WindowManager$LayoutParams", "ALPHA_CHANGED", "BRIGHTNESS_OVERRIDE_FULL", "BRIGHTNESS_OVERRIDE_NONE", "BRIGHTNESS_OVERRIDE_OFF", "Landroid/os/Parcelable$Creator;", "DIM_AMOUNT_CHANGED", "FIRST_APPLICATION_WINDOW", "FIRST_SUB_WINDOW", "FIRST_SYSTEM_WINDOW", "FLAGS_CHANGED", "FLAG_ALLOW_LOCK_WHILE_SCREEN_ON", "FLAG_ALT_FOCUSABLE_IM", "FLAG_BLUR_BEHIND", "FLAG_DIM_BEHIND", "FLAG_DISMISS_KEYGUARD", "FLAG_DITHER", "FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS", "FLAG_FORCE_NOT_FULLSCREEN", "FLAG_HARDWARE_ACCELERATED", "FLAG_IGNORE_CHEEK_PRESSES", "FLAG_KEEP_SCREEN_ON", "FLAG_LAYOUT_ATTACHED_IN_DECOR", "FLAG_LAYOUT_INSET_DECOR", "FLAG_LAYOUT_IN_OVERSCAN", "FLAG_LAYOUT_IN_SCREEN", "FLAG_LAYOUT_NO_LIMITS", "FLAG_LOCAL_FOCUS_MODE", "FLAG_NOT_FOCUSABLE", "FLAG_NOT_TOUCHABLE", "FLAG_NOT_TOUCH_MODAL", "FLAG_SCALED", "FLAG_SHOW_WALLPAPER", "FLAG_SHOW_WHEN_LOCKED", "FLAG_SPLIT_TOUCH", "FLAG_TOUCHABLE_WHEN_WAKING", "FLAG_TRANSLUCENT_NAVIGATION", "FLAG_TRANSLUCENT_STATUS", "FLAG_TURN_SCREEN_ON", "FLAG_WATCH_OUTSIDE_TOUCH", "LAST_APPLICATION_WINDOW", "LAST_SUB_WINDOW", "LAST_SYSTEM_WINDOW", "LAYOUT_CHANGED", "LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT", "LAYOUT_IN_DISPLAY_CUTOUT_MODE_NEVER", "LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES", "MEMORY_TYPE_CHANGED", "MEMORY_TYPE_GPU", "MEMORY_TYPE_HARDWARE", "MEMORY_TYPE_NORMAL", "MEMORY_TYPE_PUSH_BUFFERS", "ROTATION_ANIMATION_CHANGED", "ROTATION_ANIMATION_CROSSFADE", "ROTATION_ANIMATION_JUMPCUT", "ROTATION_ANIMATION_ROTATE", "ROTATION_ANIMATION_SEAMLESS", "SCREEN_BRIGHTNESS_CHANGED", "SCREEN_ORIENTATION_CHANGED", "SOFT_INPUT_ADJUST_NOTHING", "SOFT_INPUT_ADJUST_PAN", "SOFT_INPUT_ADJUST_RESIZE", "SOFT_INPUT_ADJUST_UNSPECIFIED", "SOFT_INPUT_IS_FORWARD_NAVIGATION", "SOFT_INPUT_MASK_ADJUST", "SOFT_INPUT_MASK_STATE", "SOFT_INPUT_MODE_CHANGED", "SOFT_INPUT_STATE_ALWAYS_HIDDEN", "SOFT_INPUT_STATE_ALWAYS_VISIBLE", "SOFT_INPUT_STATE_HIDDEN", "SOFT_INPUT_STATE_UNCHANGED", "SOFT_INPUT_STATE_UNSPECIFIED", "SOFT_INPUT_STATE_VISIBLE", "TITLE_CHANGED", "TYPE_ACCESSIBILITY_OVERLAY", "TYPE_APPLICATION", "TYPE_APPLICATION_ATTACHED_DIALOG", "TYPE_APPLICATION_MEDIA", "TYPE_APPLICATION_OVERLAY", "TYPE_APPLICATION_PANEL", "TYPE_APPLICATION_STARTING", "TYPE_APPLICATION_SUB_PANEL", "TYPE_BASE_APPLICATION", "TYPE_DRAWN_APPLICATION", "TYPE_INPUT_METHOD", "TYPE_INPUT_METHOD_DIALOG", "TYPE_KEYGUARD_DIALOG", "TYPE_PHONE", "TYPE_PRIORITY_PHONE", "TYPE_PRIVATE_PRESENTATION", "TYPE_SEARCH_BAR", "TYPE_STATUS_BAR", "TYPE_STATUS_BAR_PANEL", "TYPE_SYSTEM_ALERT", "TYPE_SYSTEM_DIALOG", "TYPE_SYSTEM_ERROR", "TYPE_SYSTEM_OVERLAY", "TYPE_TOAST", "TYPE_WALLPAPER", "buttonBrightness", "dimAmount", "horizontalMargin", "horizontalWeight", "layoutInDisplayCutoutMode", "memoryType", "packageName", "preferredDisplayModeId", "preferredRefreshRate", "rotationAnimation", "screenBrightness", "screenOrientation", "softInputMode", "systemUiVisibility", "verticalMargin", "verticalWeight", "windowAnimations", "copyFrom", "(Landroid/view/WindowManager$LayoutParams;)I", "describeContents", "getColorMode", "getTitle", "mayUseInputMethod", "setColorMode", "setTitle", "writeToParcel", "(Landroid/os/Parcel;I)V", "(III)V", "(IIIII)V", "(IIIIIII)V", "(Landroid/os/Parcel;)V", "android/view/WindowInsets", "consumeDisplayCutout", "()Landroid/view/WindowInsets;", "consumeStableInsets", "consumeSystemWindowInsets", "getDisplayCutout", "()Landroid/view/DisplayCutout;", "getStableInsetBottom", "getStableInsetLeft", "getStableInsetRight", "getStableInsetTop", "getSystemWindowInsetBottom", "getSystemWindowInsetLeft", "getSystemWindowInsetRight", "getSystemWindowInsetTop", "hasInsets", "hasStableInsets", "hasSystemWindowInsets", "isConsumed", "isRound", "replaceSystemWindowInsets", "(IIII)Landroid/view/WindowInsets;", "(Landroid/graphics/Rect;)Landroid/view/WindowInsets;", "android/view/Window", "DECOR_CAPTION_SHADE_AUTO", "DECOR_CAPTION_SHADE_DARK", "DECOR_CAPTION_SHADE_LIGHT", "DEFAULT_FEATURES", "FEATURE_ACTION_BAR", "FEATURE_ACTION_BAR_OVERLAY", "FEATURE_ACTION_MODE_OVERLAY", "FEATURE_ACTIVITY_TRANSITIONS", "FEATURE_CONTENT_TRANSITIONS", "FEATURE_CONTEXT_MENU", "FEATURE_CUSTOM_TITLE", "FEATURE_INDETERMINATE_PROGRESS", "FEATURE_LEFT_ICON", "FEATURE_NO_TITLE", "FEATURE_OPTIONS_PANEL", "FEATURE_PROGRESS", "FEATURE_RIGHT_ICON", "FEATURE_SWIPE_TO_DISMISS", "ID_ANDROID_CONTENT", "NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME", "PROGRESS_END", "PROGRESS_INDETERMINATE_OFF", "PROGRESS_INDETERMINATE_ON", "PROGRESS_SECONDARY_END", "PROGRESS_SECONDARY_START", "PROGRESS_START", "PROGRESS_VISIBILITY_OFF", "PROGRESS_VISIBILITY_ON", "STATUS_BAR_BACKGROUND_TRANSITION_NAME", "addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "addFlags", "addOnFrameMetricsAvailableListener", "(Landroid/view/Window$OnFrameMetricsAvailableListener;Landroid/os/Handler;)V", "closeAllPanels", "closePanel", "findViewById", "(I)Landroid/view/View;", "getAllowEnterTransitionOverlap", "getAllowReturnTransitionOverlap", "getAttributes", "()Landroid/view/WindowManager$LayoutParams;", "getCallback", "()Landroid/view/Window$Callback;", "getContainer", "()Landroid/view/Window;", "getContentScene", "()Landroid/transition/Scene;", "getContext", "()Landroid/content/Context;", "getCurrentFocus", "()Landroid/view/View;", "getDecorView", "getDefaultFeatures", "(Landroid/content/Context;)I", "getEnterTransition", "()Landroid/transition/Transition;", "getExitTransition", "getForcedWindowFlags", "getLayoutInflater", "()Landroid/view/LayoutInflater;", "getLocalFeatures", "getMediaController", "()Landroid/media/session/MediaController;", "getNavigationBarColor", "getNavigationBarDividerColor", "getReenterTransition", "getReturnTransition", "getSharedElementEnterTransition", "getSharedElementExitTransition", "getSharedElementReenterTransition", "getSharedElementReturnTransition", "getSharedElementsUseOverlay", "getStatusBarColor", "getTransitionBackgroundFadeDuration", "getTransitionManager", "()Landroid/transition/TransitionManager;", "getVolumeControlStream", "getWindowManager", "()Landroid/view/WindowManager;", "getWindowStyle", "()Landroid/content/res/TypedArray;", "hasChildren", "hasFeature", "hasSoftInputMode", "injectInputEvent", "(Landroid/view/InputEvent;)V", "invalidatePanelMenu", "isActive", "isFloating", "isShortcutKey", "isWideColorGamut", "makeActive", "onActive", "openPanel", "(ILandroid/view/KeyEvent;)V", "peekDecorView", "performContextMenuIdentifierAction", "(II)Z", "performPanelIdentifierAction", "(III)Z", "performPanelShortcut", "(IILandroid/view/KeyEvent;I)Z", "removeOnFrameMetricsAvailableListener", "(Landroid/view/Window$OnFrameMetricsAvailableListener;)V", "requestFeature", "requireViewById", "restoreHierarchyState", "(Landroid/os/Bundle;)V", "saveHierarchyState", "()Landroid/os/Bundle;", "setAllowEnterTransitionOverlap", "setAllowReturnTransitionOverlap", "setAttributes", "(Landroid/view/WindowManager$LayoutParams;)V", "setBackgroundDrawable", "setBackgroundDrawableResource", "setCallback", "(Landroid/view/Window$Callback;)V", "setChildDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "setChildInt", "setClipToOutline", "setContainer", "(Landroid/view/Window;)V", "setContentView", "setDecorCaptionShade", "setDefaultWindowFormat", "setDimAmount", "setElevation", "setEnterTransition", "(Landroid/transition/Transition;)V", "setExitTransition", "setFeatureDrawable", "setFeatureDrawableAlpha", "setFeatureDrawableResource", "setFeatureDrawableUri", "(ILandroid/net/Uri;)V", "setFeatureInt", "setFlags", "setFormat", "setIcon", "setLayout", "setLocalFocus", "(ZZ)V", "setLogo", "setMediaController", "(Landroid/media/session/MediaController;)V", "setNavigationBarColor", "setNavigationBarDividerColor", "setReenterTransition", "setResizingCaptionDrawable", "setRestrictedCaptionAreaListener", "(Landroid/view/Window$OnRestrictedCaptionAreaChangedListener;)V", "setReturnTransition", "setSharedElementEnterTransition", "setSharedElementExitTransition", "setSharedElementReenterTransition", "setSharedElementReturnTransition", "setSharedElementsUseOverlay", "setSoftInputMode", "setStatusBarColor", "setSustainedPerformanceMode", "setTitleColor", "setTransitionBackgroundFadeDuration", "setTransitionManager", "(Landroid/transition/TransitionManager;)V", "setType", "setUiOptions", "setVolumeControlStream", "setWindowAnimations", "setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;)V", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;Z)V", "superDispatchGenericMotionEvent", "superDispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "superDispatchKeyShortcutEvent", "superDispatchTouchEvent", "superDispatchTrackballEvent", "takeInputQueue", "(Landroid/view/InputQueue$Callback;)V", "takeKeyEvents", "takeSurface", "(Landroid/view/SurfaceHolder$Callback2;)V", "togglePanel", "android/view/View", "ACCESSIBILITY_LIVE_REGION_ASSERTIVE", "ACCESSIBILITY_LIVE_REGION_NONE", "ACCESSIBILITY_LIVE_REGION_POLITE", "Landroid/util/Property;", "AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR", "AUTOFILL_HINT_CREDIT_CARD_NUMBER", "AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE", "AUTOFILL_HINT_EMAIL_ADDRESS", "AUTOFILL_HINT_NAME", "AUTOFILL_HINT_PASSWORD", "AUTOFILL_HINT_PHONE", "AUTOFILL_HINT_POSTAL_ADDRESS", "AUTOFILL_HINT_POSTAL_CODE", "AUTOFILL_HINT_USERNAME", "AUTOFILL_TYPE_DATE", "AUTOFILL_TYPE_LIST", "AUTOFILL_TYPE_NONE", "AUTOFILL_TYPE_TEXT", "AUTOFILL_TYPE_TOGGLE", "DRAG_FLAG_GLOBAL", "DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION", "DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION", "DRAG_FLAG_GLOBAL_URI_READ", "DRAG_FLAG_GLOBAL_URI_WRITE", "DRAG_FLAG_OPAQUE", "DRAWING_CACHE_QUALITY_AUTO", "DRAWING_CACHE_QUALITY_HIGH", "DRAWING_CACHE_QUALITY_LOW", "EMPTY_STATE_SET", "FIND_VIEWS_WITH_CONTENT_DESCRIPTION", "FIND_VIEWS_WITH_TEXT", "FOCUSABLES_ALL", "FOCUSABLES_TOUCH_MODE", "FOCUSABLE_AUTO", "FOCUS_BACKWARD", "FOCUS_DOWN", "FOCUS_FORWARD", "FOCUS_LEFT", "FOCUS_RIGHT", "FOCUS_UP", "GONE", "HAPTIC_FEEDBACK_ENABLED", "IMPORTANT_FOR_ACCESSIBILITY_AUTO", "IMPORTANT_FOR_ACCESSIBILITY_NO", "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS", "IMPORTANT_FOR_ACCESSIBILITY_YES", "IMPORTANT_FOR_AUTOFILL_AUTO", "IMPORTANT_FOR_AUTOFILL_NO", "IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS", "IMPORTANT_FOR_AUTOFILL_YES", "IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS", "INVISIBLE", "LAYER_TYPE_HARDWARE", "LAYER_TYPE_NONE", "LAYER_TYPE_SOFTWARE", "LAYOUT_DIRECTION_INHERIT", "LAYOUT_DIRECTION_LOCALE", "LAYOUT_DIRECTION_LTR", "LAYOUT_DIRECTION_RTL", "MEASURED_HEIGHT_STATE_SHIFT", "MEASURED_SIZE_MASK", "MEASURED_STATE_MASK", "MEASURED_STATE_TOO_SMALL", "NO_ID", "OVER_SCROLL_ALWAYS", "OVER_SCROLL_IF_CONTENT_SCROLLS", "OVER_SCROLL_NEVER", "PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET", "PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_ENABLED_FOCUSED_STATE_SET", "PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET", "PRESSED_ENABLED_SELECTED_STATE_SET", "PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_ENABLED_STATE_SET", "PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET", "PRESSED_FOCUSED_SELECTED_STATE_SET", "PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_FOCUSED_STATE_SET", "PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET", "PRESSED_SELECTED_STATE_SET", "PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_STATE_SET", "PRESSED_WINDOW_FOCUSED_STATE_SET", "ROTATION_X", "ROTATION_Y", "SCALE_X", "SCALE_Y", "SCREEN_STATE_OFF", "SCREEN_STATE_ON", "SCROLLBARS_INSIDE_INSET", "SCROLLBARS_INSIDE_OVERLAY", "SCROLLBARS_OUTSIDE_INSET", "SCROLLBARS_OUTSIDE_OVERLAY", "SCROLLBAR_POSITION_DEFAULT", "SCROLLBAR_POSITION_LEFT", "SCROLLBAR_POSITION_RIGHT", "SCROLL_AXIS_HORIZONTAL", "SCROLL_AXIS_NONE", "SCROLL_AXIS_VERTICAL", "SCROLL_INDICATOR_BOTTOM", "SCROLL_INDICATOR_END", "SCROLL_INDICATOR_LEFT", "SCROLL_INDICATOR_RIGHT", "SCROLL_INDICATOR_START", "SCROLL_INDICATOR_TOP", "SOUND_EFFECTS_ENABLED", "STATUS_BAR_HIDDEN", "STATUS_BAR_VISIBLE", "SYSTEM_UI_FLAG_FULLSCREEN", "SYSTEM_UI_FLAG_HIDE_NAVIGATION", "SYSTEM_UI_FLAG_IMMERSIVE", "SYSTEM_UI_FLAG_IMMERSIVE_STICKY", "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN", "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION", "SYSTEM_UI_FLAG_LAYOUT_STABLE", "SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR", "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR", "SYSTEM_UI_FLAG_LOW_PROFILE", "SYSTEM_UI_FLAG_VISIBLE", "SYSTEM_UI_LAYOUT_FLAGS", "TEXT_ALIGNMENT_CENTER", "TEXT_ALIGNMENT_GRAVITY", "TEXT_ALIGNMENT_INHERIT", "TEXT_ALIGNMENT_TEXT_END", "TEXT_ALIGNMENT_TEXT_START", "TEXT_ALIGNMENT_VIEW_END", "TEXT_ALIGNMENT_VIEW_START", "TEXT_DIRECTION_ANY_RTL", "TEXT_DIRECTION_FIRST_STRONG", "TEXT_DIRECTION_FIRST_STRONG_LTR", "TEXT_DIRECTION_FIRST_STRONG_RTL", "TEXT_DIRECTION_INHERIT", "TEXT_DIRECTION_LOCALE", "TEXT_DIRECTION_LTR", "TEXT_DIRECTION_RTL", "TRANSLATION_X", "TRANSLATION_Y", "TRANSLATION_Z", "VIEW_LOG_TAG", "addChildrenForAccessibility", "(Ljava/util/ArrayList;)V", "addFocusables", "(Ljava/util/ArrayList;I)V", "(Ljava/util/ArrayList;II)V", "addKeyboardNavigationClusters", "(Ljava/util/Collection;I)V", "addOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "addOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "addOnUnhandledKeyEventListener", "(Landroid/view/View$OnUnhandledKeyEventListener;)V", "addTouchables", "animate", "()Landroid/view/ViewPropertyAnimator;", "announceForAccessibility", "(Landroid/util/SparseArray;)V", "awakenScrollBars", "(IZ)Z", "bringToFront", "buildDrawingCache", "buildLayer", "callOnClick", "canResolveLayoutDirection", "canResolveTextAlignment", "canResolveTextDirection", "canScrollHorizontally", "canScrollVertically", "cancelDragAndDrop", "cancelPendingInputEvents", "checkInputConnectionProxy", "(Landroid/view/View;)Z", "clearAnimation", "clearFocus", "combineMeasuredStates", "computeHorizontalScrollExtent", "computeHorizontalScrollOffset", "computeSystemWindowInsets", "(Landroid/view/WindowInsets;Landroid/graphics/Rect;)Landroid/view/WindowInsets;", "computeVerticalScrollOffset", "createAccessibilityNodeInfo", "()Landroid/view/accessibility/AccessibilityNodeInfo;", "createContextMenu", "destroyDrawingCache", "dispatchApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "dispatchCapturedPointerEvent", "dispatchConfigurationChanged", "dispatchDisplayHint", "dispatchDragEvent", "dispatchDraw", "dispatchDrawableHotspotChanged", "dispatchFinishTemporaryDetach", "dispatchGenericFocusedEvent", "dispatchGenericMotionEvent", "dispatchGenericPointerEvent", "dispatchHoverEvent", "dispatchKeyEvent", "dispatchKeyEventPreIme", "dispatchKeyShortcutEvent", "dispatchNestedFling", "(FFZ)Z", "dispatchNestedPreFling", "dispatchNestedPrePerformAccessibilityAction", "(ILandroid/os/Bundle;)Z", "dispatchNestedPreScroll", "(II[I[I)Z", "dispatchNestedScroll", "(IIII[I)Z", "dispatchPointerCaptureChanged", "dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "dispatchProvideAutofillStructure", "dispatchProvideStructure", "dispatchRestoreInstanceState", "dispatchSaveInstanceState", "dispatchSetActivated", "dispatchSetPressed", "dispatchSetSelected", "dispatchStartTemporaryDetach", "dispatchSystemUiVisibilityChanged", "dispatchTouchEvent", "dispatchTrackballEvent", "dispatchUnhandledMove", "(Landroid/view/View;I)Z", "dispatchVisibilityChanged", "dispatchWindowFocusChanged", "dispatchWindowSystemUiVisiblityChanged", "dispatchWindowVisibilityChanged", "findFocus", "findViewWithTag", "(Ljava/lang/Object;)Landroid/view/View;", "fitSystemWindows", "(Landroid/graphics/Rect;)Z", "focusSearch", "forceHasOverlappingRendering", "forceLayout", "generateViewId", "getAccessibilityLiveRegion", "getAccessibilityNodeProvider", "()Landroid/view/accessibility/AccessibilityNodeProvider;", "getAccessibilityPaneTitle", "getAccessibilityTraversalAfter", "getAccessibilityTraversalBefore", "getAlpha", "()Landroid/view/animation/Animation;", "getApplicationWindowToken", "()Landroid/os/IBinder;", "getAutofillHints", "getAutofillId", "()Landroid/view/autofill/AutofillId;", "getBackground", "getBackgroundTintList", "getBackgroundTintMode", "getBottom", "getBottomFadingEdgeStrength", "getCameraDistance", "getClipBounds", "getClipToOutline", "getContentDescription", "getContextMenuInfo", "()Landroid/view/ContextMenu$ContextMenuInfo;", "getDefaultFocusHighlightEnabled", "getDefaultSize", "getDrawableState", "getDrawingCache", "()Landroid/graphics/Bitmap;", "(Z)Landroid/graphics/Bitmap;", "getDrawingCacheBackgroundColor", "getDrawingCacheQuality", "getDrawingRect", "getDrawingTime", "getElevation", "getFilterTouchesWhenObscured", "getFitsSystemWindows", "getFocusable", "getFocusables", "(I)Ljava/util/ArrayList;", "getForeground", "getForegroundGravity", "getForegroundTintList", "getForegroundTintMode", "getGlobalVisibleRect", "(Landroid/graphics/Rect;Landroid/graphics/Point;)Z", "getHandler", "()Landroid/os/Handler;", "getHasOverlappingRendering", "getHeight", "getHitRect", "getHorizontalFadingEdgeLength", "getHorizontalScrollbarHeight", "getImportantForAccessibility", "getImportantForAutofill", "getKeepScreenOn", "getKeyDispatcherState", "()Landroid/view/KeyEvent$DispatcherState;", "getLabelFor", "getLayerType", "getLayoutDirection", "getLayoutParams", "()Landroid/view/ViewGroup$LayoutParams;", "getLeft", "getLocalVisibleRect", "getLocationInWindow", "([I)V", "getLocationOnScreen", "getMatrix", "()Landroid/graphics/Matrix;", "getMeasuredHeight", "getMeasuredHeightAndState", "getMeasuredState", "getMeasuredWidth", "getMeasuredWidthAndState", "getMinimumHeight", "getMinimumWidth", "getNextClusterForwardId", "getNextFocusDownId", "getNextFocusForwardId", "getNextFocusLeftId", "getNextFocusRightId", "getNextFocusUpId", "getOnFocusChangeListener", "()Landroid/view/View$OnFocusChangeListener;", "getOutlineAmbientShadowColor", "getOutlineProvider", "()Landroid/view/ViewOutlineProvider;", "getOutlineSpotShadowColor", "getOverScrollMode", "getOverlay", "()Landroid/view/ViewOverlay;", "getPaddingBottom", "getPaddingEnd", "getPaddingLeft", "getPaddingRight", "getPaddingStart", "getPaddingTop", "()Landroid/view/ViewParent;", "getParentForAccessibility", "getPivotX", "getPivotY", "getPointerIcon", "()Landroid/view/PointerIcon;", "()Landroid/content/res/Resources;", "getRevealOnFocusHint", "getRight", "getRootView", "getRootWindowInsets", "getRotationX", "getRotationY", "getScaleX", "getScaleY", "getScrollBarDefaultDelayBeforeFade", "getScrollBarFadeDuration", "getScrollBarSize", "getScrollBarStyle", "getScrollIndicators", "getScrollX", "getScrollY", "getSolidColor", "getStateListAnimator", "()Landroid/animation/StateListAnimator;", "getSuggestedMinimumHeight", "getSuggestedMinimumWidth", "getSystemUiVisibility", "getTag", "getTextAlignment", "getTextDirection", "getTooltipText", "getTop", "getTopFadingEdgeStrength", "getTouchDelegate", "()Landroid/view/TouchDelegate;", "getTouchables", "()Ljava/util/ArrayList;", "getTransitionName", "getTranslationX", "getTranslationY", "getTranslationZ", "getVerticalFadingEdgeLength", "getVerticalScrollbarPosition", "getVerticalScrollbarWidth", "getViewTreeObserver", "()Landroid/view/ViewTreeObserver;", "getVisibility", "getWidth", "getWindowAttachCount", "getWindowId", "()Landroid/view/WindowId;", "getWindowSystemUiVisibility", "getWindowToken", "getWindowVisibility", "getWindowVisibleDisplayFrame", "getX", "getY", "getZ", "hasExplicitFocusable", "hasFocus", "hasFocusable", "hasNestedScrollingParent", "hasOnClickListeners", "hasPointerCapture", "hasTransientState", "hasWindowFocus", "inflate", "(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;", "invalidate", "invalidateOutline", "isAccessibilityFocused", "isAccessibilityHeading", "isActivated", "isAttachedToWindow", "isClickable", "isContextClickable", "isDirty", "isDrawingCacheEnabled", "isDuplicateParentStateEnabled", "isEnabled", "isFocusable", "isFocusableInTouchMode", "isFocusedByDefault", "isHapticFeedbackEnabled", "isHardwareAccelerated", "isHorizontalFadingEdgeEnabled", "isHorizontalScrollBarEnabled", "isHovered", "isImportantForAccessibility", "isImportantForAutofill", "isInEditMode", "isInLayout", "isInTouchMode", "isKeyboardNavigationCluster", "isLaidOut", "isLayoutDirectionResolved", "isLayoutRequested", "isLongClickable", "isNestedScrollingEnabled", "isOpaque", "isPaddingRelative", "isPivotSet", "isPressed", "isSaveEnabled", "isSaveFromParentEnabled", "isScreenReaderFocusable", "isScrollContainer", "isScrollbarFadingEnabled", "isSelected", "isShown", "isSoundEffectsEnabled", "isTemporarilyDetached", "isTextAlignmentResolved", "isTextDirectionResolved", "isVerticalFadingEdgeEnabled", "isVerticalScrollBarEnabled", "isVisibleToUserForAutofill", "keyboardNavigationClusterSearch", "(Landroid/view/View;I)Landroid/view/View;", "measure", "mergeDrawableStates", "([I[I)[I", "offsetLeftAndRight", "offsetTopAndBottom", "onAnimationEnd", "onAnimationStart", "onApplyWindowInsets", "onCancelPendingInputEvents", "onCapturedPointerEvent", "onDisplayHint", "onDrawForeground", "onDrawScrollBars", "onFilterTouchEventForSecurity", "onFinishInflate", "onFinishTemporaryDetach", "onHoverChanged", "onHoverEvent", "onInitializeAccessibilityEvent", "onInitializeAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;)V", "onKeyLongPress", "onOverScrolled", "(IIZZ)V", "onPointerCaptureChange", "onPopulateAccessibilityEvent", "onProvideAutofillVirtualStructure", "onProvideVirtualStructure", "onSetAlpha", "onStartTemporaryDetach", "onWindowSystemUiVisibilityChanged", "onWindowVisibilityChanged", "overScrollBy", "(IIIIIIIIZ)Z", "performAccessibilityAction", "performContextClick", "performHapticFeedback", "playSoundEffect", "post", "(Ljava/lang/Runnable;)Z", "postDelayed", "(Ljava/lang/Runnable;J)Z", "postInvalidateDelayed", "(JIIII)V", "postInvalidateOnAnimation", "postOnAnimation", "postOnAnimationDelayed", "(Ljava/lang/Runnable;J)V", "refreshDrawableState", "releasePointerCapture", "removeCallbacks", "removeOnAttachStateChangeListener", "removeOnLayoutChangeListener", "removeOnUnhandledKeyEventListener", "requestApplyInsets", "requestFitSystemWindows", "requestFocus", "(ILandroid/graphics/Rect;)Z", "requestFocusFromTouch", "requestLayout", "requestPointerCapture", "requestRectangleOnScreen", "(Landroid/graphics/Rect;Z)Z", "requestUnbufferedDispatch", "(Landroid/view/MotionEvent;)V", "resetPivot", "resolveSize", "resolveSizeAndState", "(III)I", "restoreDefaultFocus", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "scrollBy", "scrollTo", "sendAccessibilityEvent", "setAccessibilityDelegate", "(Landroid/view/View$AccessibilityDelegate;)V", "setAccessibilityHeading", "setAccessibilityLiveRegion", "setAccessibilityPaneTitle", "setAccessibilityTraversalAfter", "setAccessibilityTraversalBefore", "setActivated", "setAlpha", "setAnimation", "(Landroid/view/animation/Animation;)V", "setAutofillHints", "([Ljava/lang/String;)V", "setAutofillId", "(Landroid/view/autofill/AutofillId;)V", "setBackground", "setBackgroundColor", "setBackgroundResource", "setBackgroundTintList", "setBackgroundTintMode", "setCameraDistance", "setClickable", "setClipBounds", "setContentDescription", "setContextClickable", "setDefaultFocusHighlightEnabled", "setDrawingCacheBackgroundColor", "setDrawingCacheEnabled", "setDrawingCacheQuality", "setDuplicateParentStateEnabled", "setFadingEdgeLength", "setFilterTouchesWhenObscured", "setFitsSystemWindows", "setFocusable", "setFocusableInTouchMode", "setFocusedByDefault", "setForeground", "setForegroundGravity", "setForegroundTintList", "setForegroundTintMode", "setHapticFeedbackEnabled", "setHasTransientState", "setHorizontalFadingEdgeEnabled", "setHorizontalScrollBarEnabled", "setHovered", "setId", "setImportantForAccessibility", "setImportantForAutofill", "setKeepScreenOn", "setKeyboardNavigationCluster", "setLabelFor", "setLayerPaint", "(Landroid/graphics/Paint;)V", "setLayerType", "(ILandroid/graphics/Paint;)V", "setLayoutDirection", "setLayoutParams", "(Landroid/view/ViewGroup$LayoutParams;)V", "setLongClickable", "setMeasuredDimension", "setMinimumHeight", "setMinimumWidth", "setNestedScrollingEnabled", "setNextClusterForwardId", "setNextFocusDownId", "setNextFocusForwardId", "setNextFocusLeftId", "setNextFocusRightId", "setNextFocusUpId", "setOnApplyWindowInsetsListener", "(Landroid/view/View$OnApplyWindowInsetsListener;)V", "setOnCapturedPointerListener", "(Landroid/view/View$OnCapturedPointerListener;)V", "setOnClickListener", "(Landroid/view/View$OnClickListener;)V", "setOnContextClickListener", "(Landroid/view/View$OnContextClickListener;)V", "setOnCreateContextMenuListener", "(Landroid/view/View$OnCreateContextMenuListener;)V", "setOnDragListener", "(Landroid/view/View$OnDragListener;)V", "setOnFocusChangeListener", "(Landroid/view/View$OnFocusChangeListener;)V", "setOnGenericMotionListener", "(Landroid/view/View$OnGenericMotionListener;)V", "setOnHoverListener", "(Landroid/view/View$OnHoverListener;)V", "setOnKeyListener", "(Landroid/view/View$OnKeyListener;)V", "setOnLongClickListener", "(Landroid/view/View$OnLongClickListener;)V", "setOnScrollChangeListener", "(Landroid/view/View$OnScrollChangeListener;)V", "setOnSystemUiVisibilityChangeListener", "(Landroid/view/View$OnSystemUiVisibilityChangeListener;)V", "setOnTouchListener", "(Landroid/view/View$OnTouchListener;)V", "setOutlineAmbientShadowColor", "setOutlineProvider", "(Landroid/view/ViewOutlineProvider;)V", "setOutlineSpotShadowColor", "setOverScrollMode", "setPivotX", "setPivotY", "setPointerIcon", "(Landroid/view/PointerIcon;)V", "setPressed", "setRevealOnFocusHint", "setRotation", "setRotationX", "setRotationY", "setSaveEnabled", "setSaveFromParentEnabled", "setScaleX", "setScaleY", "setScreenReaderFocusable", "setScrollBarDefaultDelayBeforeFade", "setScrollBarFadeDuration", "setScrollBarSize", "setScrollBarStyle", "setScrollContainer", "setScrollIndicators", "setScrollX", "setScrollY", "setScrollbarFadingEnabled", "setSoundEffectsEnabled", "setStateListAnimator", "(Landroid/animation/StateListAnimator;)V", "setSystemUiVisibility", "setTag", "setTextAlignment", "setTextDirection", "setTooltipText", "setTouchDelegate", "(Landroid/view/TouchDelegate;)V", "setTransitionName", "setTranslationX", "setTranslationY", "setTranslationZ", "setVerticalFadingEdgeEnabled", "setVerticalScrollBarEnabled", "setVerticalScrollbarPosition", "setVisibility", "setWillNotCacheDrawing", "setWillNotDraw", "startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "startAnimation", "startDrag", "(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "startDragAndDrop", "startNestedScroll", "stopNestedScroll", "unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "updateDragShadow", "(Landroid/view/View$DragShadowBuilder;)V", "willNotCacheDrawing", "willNotDraw", "android/view/View$OnSystemUiVisibilityChangeListener", "onSystemUiVisibilityChange", "android/view/View$OnApplyWindowInsetsListener", "(Landroid/view/View;Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "android/view/SurfaceView", "gatherTransparentRegion", "(Landroid/graphics/Region;)Z", "getHolder", "()Landroid/view/SurfaceHolder;", "setSecure", "setZOrderMediaOverlay", "setZOrderOnTop", "android/view/SurfaceHolder", "SURFACE_TYPE_GPU", "SURFACE_TYPE_HARDWARE", "SURFACE_TYPE_NORMAL", "SURFACE_TYPE_PUSH_BUFFERS", "addCallback", "(Landroid/view/SurfaceHolder$Callback;)V", "getSurface", "()Landroid/view/Surface;", "getSurfaceFrame", "isCreating", "()Landroid/graphics/Canvas;", "(Landroid/graphics/Rect;)Landroid/graphics/Canvas;", "lockHardwareCanvas", "removeCallback", "setFixedSize", "setSizeFromLayout", "unlockCanvasAndPost", "android/view/SurfaceHolder$Callback", "surfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "surfaceCreated", "(Landroid/view/SurfaceHolder;)V", "surfaceDestroyed", "android/view/Surface", "ROTATION_0", "ROTATION_180", "ROTATION_270", "ROTATION_90", "readFromParcel", "unlockCanvas", "(Landroid/graphics/SurfaceTexture;)V", "android/view/MotionEvent", "ACTION_BUTTON_PRESS", "ACTION_BUTTON_RELEASE", "ACTION_CANCEL", "ACTION_DOWN", "ACTION_HOVER_ENTER", "ACTION_HOVER_EXIT", "ACTION_HOVER_MOVE", "ACTION_MASK", "ACTION_MOVE", "ACTION_OUTSIDE", "ACTION_POINTER_1_DOWN", "ACTION_POINTER_1_UP", "ACTION_POINTER_2_DOWN", "ACTION_POINTER_2_UP", "ACTION_POINTER_3_DOWN", "ACTION_POINTER_3_UP", "ACTION_POINTER_DOWN", "ACTION_POINTER_ID_MASK", "ACTION_POINTER_ID_SHIFT", "ACTION_POINTER_INDEX_MASK", "ACTION_POINTER_INDEX_SHIFT", "ACTION_POINTER_UP", "ACTION_SCROLL", "ACTION_UP", "AXIS_BRAKE", "AXIS_DISTANCE", "AXIS_GAS", "AXIS_GENERIC_1", "AXIS_GENERIC_10", "AXIS_GENERIC_11", "AXIS_GENERIC_12", "AXIS_GENERIC_13", "AXIS_GENERIC_14", "AXIS_GENERIC_15", "AXIS_GENERIC_16", "AXIS_GENERIC_2", "AXIS_GENERIC_3", "AXIS_GENERIC_4", "AXIS_GENERIC_5", "AXIS_GENERIC_6", "AXIS_GENERIC_7", "AXIS_GENERIC_8", "AXIS_GENERIC_9", "AXIS_HAT_X", "AXIS_HAT_Y", "AXIS_HSCROLL", "AXIS_LTRIGGER", "AXIS_ORIENTATION", "AXIS_PRESSURE", "AXIS_RELATIVE_X", "AXIS_RELATIVE_Y", "AXIS_RTRIGGER", "AXIS_RUDDER", "AXIS_RX", "AXIS_RY", "AXIS_RZ", "AXIS_SCROLL", "AXIS_SIZE", "AXIS_THROTTLE", "AXIS_TILT", "AXIS_TOOL_MAJOR", "AXIS_TOOL_MINOR", "AXIS_TOUCH_MAJOR", "AXIS_TOUCH_MINOR", "AXIS_VSCROLL", "AXIS_WHEEL", "AXIS_X", "AXIS_Y", "AXIS_Z", "BUTTON_BACK", "BUTTON_FORWARD", "BUTTON_PRIMARY", "BUTTON_SECONDARY", "BUTTON_STYLUS_PRIMARY", "BUTTON_STYLUS_SECONDARY", "BUTTON_TERTIARY", "EDGE_BOTTOM", "EDGE_LEFT", "EDGE_RIGHT", "EDGE_TOP", "FLAG_WINDOW_IS_OBSCURED", "INVALID_POINTER_ID", "TOOL_TYPE_ERASER", "TOOL_TYPE_FINGER", "TOOL_TYPE_MOUSE", "TOOL_TYPE_STYLUS", "TOOL_TYPE_UNKNOWN", "actionToString", "addBatch", "(JFFFFI)V", "(J[Landroid/view/MotionEvent$PointerCoords;I)V", "axisFromString", "axisToString", "findPointerIndex", "getAction", "getActionButton", "getActionIndex", "getActionMasked", "getAxisValue", "(II)F", "getButtonState", "getDeviceId", "getDownTime", "getEdgeFlags", "getEventTime", "getFlags", "getHistoricalAxisValue", "(III)F", "getHistoricalEventTime", "getHistoricalOrientation", "getHistoricalPointerCoords", "(IILandroid/view/MotionEvent$PointerCoords;)V", "getHistoricalPressure", "getHistoricalSize", "getHistoricalToolMajor", "getHistoricalToolMinor", "getHistoricalTouchMajor", "getHistoricalTouchMinor", "getHistoricalX", "getHistoricalY", "getHistorySize", "getMetaState", "getOrientation", "getPointerCoords", "(ILandroid/view/MotionEvent$PointerCoords;)V", "getPointerCount", "getPointerId", "getPointerProperties", "(ILandroid/view/MotionEvent$PointerProperties;)V", "getPressure", "getRawX", "getRawY", "getSize", "getSource", "getToolMajor", "getToolMinor", "getToolType", "getTouchMajor", "getTouchMinor", "getXPrecision", "getYPrecision", "isButtonPressed", "obtain", "(JJIFFFFIFFII)Landroid/view/MotionEvent;", "(JJIFFI)Landroid/view/MotionEvent;", "(JJIIFFFFIFFII)Landroid/view/MotionEvent;", "(JJII[I[Landroid/view/MotionEvent$PointerCoords;IFFIIII)Landroid/view/MotionEvent;", "(JJII[Landroid/view/MotionEvent$PointerProperties;[Landroid/view/MotionEvent$PointerCoords;IIFFIIII)Landroid/view/MotionEvent;", "(Landroid/view/MotionEvent;)Landroid/view/MotionEvent;", "obtainNoHistory", "offsetLocation", "recycle", "setAction", "setEdgeFlags", "setSource", "(Landroid/graphics/Matrix;)V", "android/view/KeyEvent", "ACTION_MULTIPLE", "FLAG_CANCELED", "FLAG_CANCELED_LONG_PRESS", "FLAG_EDITOR_ACTION", "FLAG_FALLBACK", "FLAG_FROM_SYSTEM", "FLAG_KEEP_TOUCH_MODE", "FLAG_LONG_PRESS", "FLAG_SOFT_KEYBOARD", "FLAG_TRACKING", "FLAG_VIRTUAL_HARD_KEY", "FLAG_WOKE_HERE", "KEYCODE_0", "KEYCODE_1", "KEYCODE_11", "KEYCODE_12", "KEYCODE_2", "KEYCODE_3", "KEYCODE_3D_MODE", "KEYCODE_4", "KEYCODE_5", "KEYCODE_6", "KEYCODE_7", "KEYCODE_8", "KEYCODE_9", "KEYCODE_A", "KEYCODE_ALL_APPS", "KEYCODE_ALT_LEFT", "KEYCODE_ALT_RIGHT", "KEYCODE_APOSTROPHE", "KEYCODE_APP_SWITCH", "KEYCODE_ASSIST", "KEYCODE_AT", "KEYCODE_AVR_INPUT", "KEYCODE_AVR_POWER", "KEYCODE_B", "KEYCODE_BACK", "KEYCODE_BACKSLASH", "KEYCODE_BOOKMARK", "KEYCODE_BREAK", "KEYCODE_BRIGHTNESS_DOWN", "KEYCODE_BRIGHTNESS_UP", "KEYCODE_BUTTON_1", "KEYCODE_BUTTON_10", "KEYCODE_BUTTON_11", "KEYCODE_BUTTON_12", "KEYCODE_BUTTON_13", "KEYCODE_BUTTON_14", "KEYCODE_BUTTON_15", "KEYCODE_BUTTON_16", "KEYCODE_BUTTON_2", "KEYCODE_BUTTON_3", "KEYCODE_BUTTON_4", "KEYCODE_BUTTON_5", "KEYCODE_BUTTON_6", "KEYCODE_BUTTON_7", "KEYCODE_BUTTON_8", "KEYCODE_BUTTON_9", "KEYCODE_BUTTON_A", "KEYCODE_BUTTON_B", "KEYCODE_BUTTON_C", "KEYCODE_BUTTON_L1", "KEYCODE_BUTTON_L2", "KEYCODE_BUTTON_MODE", "KEYCODE_BUTTON_R1", "KEYCODE_BUTTON_R2", "KEYCODE_BUTTON_SELECT", "KEYCODE_BUTTON_START", "KEYCODE_BUTTON_THUMBL", "KEYCODE_BUTTON_THUMBR", "KEYCODE_BUTTON_X", "KEYCODE_BUTTON_Y", "KEYCODE_BUTTON_Z", "KEYCODE_C", "KEYCODE_CALCULATOR", "KEYCODE_CALENDAR", "KEYCODE_CALL", "KEYCODE_CAMERA", "KEYCODE_CAPS_LOCK", "KEYCODE_CAPTIONS", "KEYCODE_CHANNEL_DOWN", "KEYCODE_CHANNEL_UP", "KEYCODE_CLEAR", "KEYCODE_COMMA", "KEYCODE_CONTACTS", "KEYCODE_COPY", "KEYCODE_CTRL_LEFT", "KEYCODE_CTRL_RIGHT", "KEYCODE_CUT", "KEYCODE_D", "KEYCODE_DEL", "KEYCODE_DPAD_CENTER", "KEYCODE_DPAD_DOWN", "KEYCODE_DPAD_DOWN_LEFT", "KEYCODE_DPAD_DOWN_RIGHT", "KEYCODE_DPAD_LEFT", "KEYCODE_DPAD_RIGHT", "KEYCODE_DPAD_UP", "KEYCODE_DPAD_UP_LEFT", "KEYCODE_DPAD_UP_RIGHT", "KEYCODE_DVR", "KEYCODE_E", "KEYCODE_EISU", "KEYCODE_ENDCALL", "KEYCODE_ENTER", "KEYCODE_ENVELOPE", "KEYCODE_EQUALS", "KEYCODE_ESCAPE", "KEYCODE_EXPLORER", "KEYCODE_F", "KEYCODE_F1", "KEYCODE_F10", "KEYCODE_F11", "KEYCODE_F12", "KEYCODE_F2", "KEYCODE_F3", "KEYCODE_F4", "KEYCODE_F5", "KEYCODE_F6", "KEYCODE_F7", "KEYCODE_F8", "KEYCODE_F9", "KEYCODE_FOCUS", "KEYCODE_FORWARD", "KEYCODE_FORWARD_DEL", "KEYCODE_FUNCTION", "KEYCODE_G", "KEYCODE_GRAVE", "KEYCODE_GUIDE", "KEYCODE_H", "KEYCODE_HEADSETHOOK", "KEYCODE_HELP", "KEYCODE_HENKAN", "KEYCODE_HOME", "KEYCODE_I", "KEYCODE_INFO", "KEYCODE_INSERT", "KEYCODE_J", "KEYCODE_K", "KEYCODE_KANA", "KEYCODE_KATAKANA_HIRAGANA", "KEYCODE_L", "KEYCODE_LANGUAGE_SWITCH", "KEYCODE_LAST_CHANNEL", "KEYCODE_LEFT_BRACKET", "KEYCODE_M", "KEYCODE_MANNER_MODE", "KEYCODE_MEDIA_AUDIO_TRACK", "KEYCODE_MEDIA_CLOSE", "KEYCODE_MEDIA_EJECT", "KEYCODE_MEDIA_FAST_FORWARD", "KEYCODE_MEDIA_NEXT", "KEYCODE_MEDIA_PAUSE", "KEYCODE_MEDIA_PLAY", "KEYCODE_MEDIA_PLAY_PAUSE", "KEYCODE_MEDIA_PREVIOUS", "KEYCODE_MEDIA_RECORD", "KEYCODE_MEDIA_REWIND", "KEYCODE_MEDIA_SKIP_BACKWARD", "KEYCODE_MEDIA_SKIP_FORWARD", "KEYCODE_MEDIA_STEP_BACKWARD", "KEYCODE_MEDIA_STEP_FORWARD", "KEYCODE_MEDIA_STOP", "KEYCODE_MEDIA_TOP_MENU", "KEYCODE_MENU", "KEYCODE_META_LEFT", "KEYCODE_META_RIGHT", "KEYCODE_MINUS", "KEYCODE_MOVE_END", "KEYCODE_MOVE_HOME", "KEYCODE_MUHENKAN", "KEYCODE_MUSIC", "KEYCODE_MUTE", "KEYCODE_N", "KEYCODE_NAVIGATE_IN", "KEYCODE_NAVIGATE_NEXT", "KEYCODE_NAVIGATE_OUT", "KEYCODE_NAVIGATE_PREVIOUS", "KEYCODE_NOTIFICATION", "KEYCODE_NUM", "KEYCODE_NUMPAD_0", "KEYCODE_NUMPAD_1", "KEYCODE_NUMPAD_2", "KEYCODE_NUMPAD_3", "KEYCODE_NUMPAD_4", "KEYCODE_NUMPAD_5", "KEYCODE_NUMPAD_6", "KEYCODE_NUMPAD_7", "KEYCODE_NUMPAD_8", "KEYCODE_NUMPAD_9", "KEYCODE_NUMPAD_ADD", "KEYCODE_NUMPAD_COMMA", "KEYCODE_NUMPAD_DIVIDE", "KEYCODE_NUMPAD_DOT", "KEYCODE_NUMPAD_ENTER", "KEYCODE_NUMPAD_EQUALS", "KEYCODE_NUMPAD_LEFT_PAREN", "KEYCODE_NUMPAD_MULTIPLY", "KEYCODE_NUMPAD_RIGHT_PAREN", "KEYCODE_NUMPAD_SUBTRACT", "KEYCODE_NUM_LOCK", "KEYCODE_O", "KEYCODE_P", "KEYCODE_PAGE_DOWN", "KEYCODE_PAGE_UP", "KEYCODE_PAIRING", "KEYCODE_PASTE", "KEYCODE_PERIOD", "KEYCODE_PICTSYMBOLS", "KEYCODE_PLUS", "KEYCODE_POUND", "KEYCODE_POWER", "KEYCODE_PROG_BLUE", "KEYCODE_PROG_GREEN", "KEYCODE_PROG_RED", "KEYCODE_PROG_YELLOW", "KEYCODE_Q", "KEYCODE_R", "KEYCODE_REFRESH", "KEYCODE_RIGHT_BRACKET", "KEYCODE_RO", "KEYCODE_S", "KEYCODE_SCROLL_LOCK", "KEYCODE_SEARCH", "KEYCODE_SEMICOLON", "KEYCODE_SETTINGS", "KEYCODE_SHIFT_LEFT", "KEYCODE_SHIFT_RIGHT", "KEYCODE_SLASH", "KEYCODE_SLEEP", "KEYCODE_SOFT_LEFT", "KEYCODE_SOFT_RIGHT", "KEYCODE_SOFT_SLEEP", "KEYCODE_SPACE", "KEYCODE_STAR", "KEYCODE_STB_INPUT", "KEYCODE_STB_POWER", "KEYCODE_STEM_1", "KEYCODE_STEM_2", "KEYCODE_STEM_3", "KEYCODE_STEM_PRIMARY", "KEYCODE_SWITCH_CHARSET", "KEYCODE_SYM", "KEYCODE_SYSRQ", "KEYCODE_SYSTEM_NAVIGATION_DOWN", "KEYCODE_SYSTEM_NAVIGATION_LEFT", "KEYCODE_SYSTEM_NAVIGATION_RIGHT", "KEYCODE_SYSTEM_NAVIGATION_UP", "KEYCODE_T", "KEYCODE_TAB", "KEYCODE_TV", "KEYCODE_TV_ANTENNA_CABLE", "KEYCODE_TV_AUDIO_DESCRIPTION", "KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN", "KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP", "KEYCODE_TV_CONTENTS_MENU", "KEYCODE_TV_DATA_SERVICE", "KEYCODE_TV_INPUT", "KEYCODE_TV_INPUT_COMPONENT_1", "KEYCODE_TV_INPUT_COMPONENT_2", "KEYCODE_TV_INPUT_COMPOSITE_1", "KEYCODE_TV_INPUT_COMPOSITE_2", "KEYCODE_TV_INPUT_HDMI_1", "KEYCODE_TV_INPUT_HDMI_2", "KEYCODE_TV_INPUT_HDMI_3", "KEYCODE_TV_INPUT_HDMI_4", "KEYCODE_TV_INPUT_VGA_1", "KEYCODE_TV_MEDIA_CONTEXT_MENU", "KEYCODE_TV_NETWORK", "KEYCODE_TV_NUMBER_ENTRY", "KEYCODE_TV_POWER", "KEYCODE_TV_RADIO_SERVICE", "KEYCODE_TV_SATELLITE", "KEYCODE_TV_SATELLITE_BS", "KEYCODE_TV_SATELLITE_CS", "KEYCODE_TV_SATELLITE_SERVICE", "KEYCODE_TV_TELETEXT", "KEYCODE_TV_TERRESTRIAL_ANALOG", "KEYCODE_TV_TERRESTRIAL_DIGITAL", "KEYCODE_TV_TIMER_PROGRAMMING", "KEYCODE_TV_ZOOM_MODE", "KEYCODE_U", "KEYCODE_UNKNOWN", "KEYCODE_V", "KEYCODE_VOICE_ASSIST", "KEYCODE_VOLUME_DOWN", "KEYCODE_VOLUME_MUTE", "KEYCODE_VOLUME_UP", "KEYCODE_W", "KEYCODE_WAKEUP", "KEYCODE_WINDOW", "KEYCODE_X", "KEYCODE_Y", "KEYCODE_YEN", "KEYCODE_Z", "KEYCODE_ZENKAKU_HANKAKU", "KEYCODE_ZOOM_IN", "KEYCODE_ZOOM_OUT", "MAX_KEYCODE", "META_ALT_LEFT_ON", "META_ALT_MASK", "META_ALT_ON", "META_ALT_RIGHT_ON", "META_CAPS_LOCK_ON", "META_CTRL_LEFT_ON", "META_CTRL_MASK", "META_CTRL_ON", "META_CTRL_RIGHT_ON", "META_FUNCTION_ON", "META_META_LEFT_ON", "META_META_MASK", "META_META_ON", "META_META_RIGHT_ON", "META_NUM_LOCK_ON", "META_SCROLL_LOCK_ON", "META_SHIFT_LEFT_ON", "META_SHIFT_MASK", "META_SHIFT_ON", "META_SHIFT_RIGHT_ON", "META_SYM_ON", "changeAction", "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;", "changeFlags", "changeTimeRepeat", "(Landroid/view/KeyEvent;JI)Landroid/view/KeyEvent;", "(Landroid/view/KeyEvent;JII)Landroid/view/KeyEvent;", "dispatch", "(Landroid/view/KeyEvent$Callback;)Z", "(Landroid/view/KeyEvent$Callback;Landroid/view/KeyEvent$DispatcherState;Ljava/lang/Object;)Z", "getCharacters", "getDeadChar", "getDisplayLabel", "getKeyCharacterMap", "()Landroid/view/KeyCharacterMap;", "getKeyCode", "getKeyData", "(Landroid/view/KeyCharacterMap$KeyData;)Z", "getMatch", "([C)C", "([CI)C", "getMaxKeyCode", "getModifierMetaStateMask", "getNumber", "getRepeatCount", "getScanCode", "hasModifiers", "hasNoModifiers", "isAltPressed", "isCanceled", "isCapsLockOn", "isCtrlPressed", "isFunctionPressed", "isGamepadButton", "isLongPress", "isMetaPressed", "isModifierKey", "isNumLockOn", "isPrintingKey", "isScrollLockOn", "isShiftPressed", "isSymPressed", "isSystem", "isTracking", "keyCodeFromString", "keyCodeToString", "metaStateHasModifiers", "metaStateHasNoModifiers", "normalizeMetaState", "startTracking", "(JJIII)V", "(JJIIII)V", "(JJIIIIII)V", "(JJIIIIIII)V", "(JJIIIIIIII)V", "(JLjava/lang/String;II)V", "(Landroid/view/KeyEvent;JI)V", "android/view/InputEvent", "()Landroid/view/InputDevice;", "isFromSource", "android/view/InputDevice", "KEYBOARD_TYPE_ALPHABETIC", "KEYBOARD_TYPE_NONE", "KEYBOARD_TYPE_NON_ALPHABETIC", "MOTION_RANGE_ORIENTATION", "MOTION_RANGE_PRESSURE", "MOTION_RANGE_SIZE", "MOTION_RANGE_TOOL_MAJOR", "MOTION_RANGE_TOOL_MINOR", "MOTION_RANGE_TOUCH_MAJOR", "MOTION_RANGE_TOUCH_MINOR", "MOTION_RANGE_X", "MOTION_RANGE_Y", "SOURCE_ANY", "SOURCE_BLUETOOTH_STYLUS", "SOURCE_CLASS_BUTTON", "SOURCE_CLASS_JOYSTICK", "SOURCE_CLASS_MASK", "SOURCE_CLASS_NONE", "SOURCE_CLASS_POINTER", "SOURCE_CLASS_POSITION", "SOURCE_CLASS_TRACKBALL", "SOURCE_DPAD", "SOURCE_GAMEPAD", "SOURCE_HDMI", "SOURCE_JOYSTICK", "SOURCE_KEYBOARD", "SOURCE_MOUSE", "SOURCE_MOUSE_RELATIVE", "SOURCE_ROTARY_ENCODER", "SOURCE_STYLUS", "SOURCE_TOUCHPAD", "SOURCE_TOUCHSCREEN", "SOURCE_TOUCH_NAVIGATION", "SOURCE_TRACKBALL", "SOURCE_UNKNOWN", "getControllerNumber", "getDescriptor", "(I)Landroid/view/InputDevice;", "getDeviceIds", "getKeyboardType", "getMotionRange", "(I)Landroid/view/InputDevice$MotionRange;", "(II)Landroid/view/InputDevice$MotionRange;", "getMotionRanges", "()Ljava/util/List;", "getProductId", "getSources", "getVendorId", "getVibrator", "()Landroid/os/Vibrator;", "hasKeys", "([I)[Z", "hasMicrophone", "supportsSource", "android/view/InputDevice$MotionRange", "getAxis", "getFlat", "getFuzz", "getRange", "getResolution", "android/view/Gravity", "AXIS_CLIP", "AXIS_PULL_AFTER", "AXIS_PULL_BEFORE", "AXIS_SPECIFIED", "AXIS_X_SHIFT", "AXIS_Y_SHIFT", "CENTER_HORIZONTAL", "CENTER_VERTICAL", "DISPLAY_CLIP_HORIZONTAL", "DISPLAY_CLIP_VERTICAL", "FILL_HORIZONTAL", "FILL_VERTICAL", "NO_GRAVITY", "RELATIVE_HORIZONTAL_GRAVITY_MASK", "RELATIVE_LAYOUT_DIRECTION", "VERTICAL_GRAVITY_MASK", "(IIILandroid/graphics/Rect;IILandroid/graphics/Rect;)V", "(IIILandroid/graphics/Rect;IILandroid/graphics/Rect;I)V", "(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V", "(IIILandroid/graphics/Rect;Landroid/graphics/Rect;I)V", "applyDisplay", "(ILandroid/graphics/Rect;Landroid/graphics/Rect;)V", "(ILandroid/graphics/Rect;Landroid/graphics/Rect;I)V", "getAbsoluteGravity", "isHorizontal", "isVertical", "android/view/DisplayCutout", "getBoundingRects", "getSafeInsetBottom", "getSafeInsetLeft", "getSafeInsetRight", "getSafeInsetTop", "(Landroid/graphics/Rect;Ljava/util/List;)V", "android/view/Display", "DEFAULT_DISPLAY", "FLAG_PRIVATE", "FLAG_ROUND", "FLAG_SUPPORTS_PROTECTED_BUFFERS", "INVALID_DISPLAY", "STATE_DOZE", "STATE_DOZE_SUSPEND", "STATE_ON_SUSPEND", "STATE_UNKNOWN", "STATE_VR", "getAppVsyncOffsetNanos", "getCurrentSizeRange", "(Landroid/graphics/Point;Landroid/graphics/Point;)V", "getDisplayId", "getHdrCapabilities", "()Landroid/view/Display$HdrCapabilities;", "getMetrics", "(Landroid/util/DisplayMetrics;)V", "getMode", "()Landroid/view/Display$Mode;", "getPixelFormat", "getPresentationDeadlineNanos", "getRealMetrics", "getRealSize", "(Landroid/graphics/Point;)V", "getRectSize", "getRefreshRate", "getSupportedModes", "()[Landroid/view/Display$Mode;", "getSupportedRefreshRates", "()[F", "isHdr", "getRawWidth", "getRawHeight", "android/view/Choreographer", "()Landroid/view/Choreographer;", "postFrameCallback", "(Landroid/view/Choreographer$FrameCallback;)V", "postFrameCallbackDelayed", "(Landroid/view/Choreographer$FrameCallback;J)V", "removeFrameCallback", "android/view/Choreographer$FrameCallback", "doFrame", "android/util/DisplayMetrics", "DENSITY_260", "DENSITY_280", "DENSITY_300", "DENSITY_340", "DENSITY_360", "DENSITY_400", "DENSITY_420", "DENSITY_440", "DENSITY_560", "DENSITY_DEFAULT", "DENSITY_DEVICE_STABLE", "DENSITY_HIGH", "DENSITY_LOW", "DENSITY_MEDIUM", "DENSITY_TV", "DENSITY_XHIGH", "DENSITY_XXHIGH", "DENSITY_XXXHIGH", "density", "densityDpi", "heightPixels", "scaledDensity", "widthPixels", "xdpi", "ydpi", "(Landroid/util/DisplayMetrics;)Z", "setToDefaults", "android/provider/Settings$System", "ACCELEROMETER_ROTATION", "ADB_ENABLED", "AIRPLANE_MODE_ON", "AIRPLANE_MODE_RADIOS", "ALARM_ALERT", "ALWAYS_FINISH_ACTIVITIES", "ANDROID_ID", "ANIMATOR_DURATION_SCALE", "AUTO_TIME", "AUTO_TIME_ZONE", "BLUETOOTH_DISCOVERABILITY", "BLUETOOTH_DISCOVERABILITY_TIMEOUT", "BLUETOOTH_ON", "CONTENT_URI", "DATA_ROAMING", "DATE_FORMAT", "DEFAULT_ALARM_ALERT_URI", "DEFAULT_NOTIFICATION_URI", "DEFAULT_RINGTONE_URI", "DEVICE_PROVISIONED", "DIM_SCREEN", "DTMF_TONE_TYPE_WHEN_DIALING", "DTMF_TONE_WHEN_DIALING", "END_BUTTON_BEHAVIOR", "HTTP_PROXY", "INSTALL_NON_MARKET_APPS", "LOCATION_PROVIDERS_ALLOWED", "LOCK_PATTERN_ENABLED", "LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED", "LOCK_PATTERN_VISIBLE", "LOGGING_ID", "MODE_RINGER", "MODE_RINGER_STREAMS_AFFECTED", "MUTE_STREAMS_AFFECTED", "NEXT_ALARM_FORMATTED", "NOTIFICATION_SOUND", "PARENTAL_CONTROL_ENABLED", "PARENTAL_CONTROL_LAST_UPDATE", "PARENTAL_CONTROL_REDIRECT_URL", "RADIO_BLUETOOTH", "RADIO_CELL", "RADIO_NFC", "RADIO_WIFI", "SCREEN_BRIGHTNESS", "SCREEN_BRIGHTNESS_MODE", "SCREEN_BRIGHTNESS_MODE_AUTOMATIC", "SCREEN_BRIGHTNESS_MODE_MANUAL", "SCREEN_OFF_TIMEOUT", "SETTINGS_CLASSNAME", "SETUP_WIZARD_HAS_RUN", "SHOW_GTALK_SERVICE_STATUS", "SHOW_PROCESSES", "SHOW_WEB_SUGGESTIONS", "STAY_ON_WHILE_PLUGGED_IN", "TEXT_AUTO_CAPS", "TEXT_AUTO_PUNCTUATE", "TEXT_AUTO_REPLACE", "TEXT_SHOW_PASSWORD", "TIME_12_24", "TRANSITION_ANIMATION_SCALE", "USB_MASS_STORAGE_ENABLED", "USER_ROTATION", "USE_GOOGLE_MAIL", "VIBRATE_ON", "VIBRATE_WHEN_RINGING", "WAIT_FOR_DEBUGGER", "WALLPAPER_ACTIVITY", "WIFI_MAX_DHCP_RETRY_COUNT", "WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS", "WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON", "WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY", "WIFI_NUM_OPEN_NETWORKS_KEPT", "WIFI_ON", "WIFI_SLEEP_POLICY", "WIFI_SLEEP_POLICY_DEFAULT", "WIFI_SLEEP_POLICY_NEVER", "WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED", "WIFI_STATIC_DNS1", "WIFI_STATIC_DNS2", "WIFI_STATIC_GATEWAY", "WIFI_STATIC_IP", "WIFI_STATIC_NETMASK", "WIFI_USE_STATIC_IP", "WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE", "WIFI_WATCHDOG_AP_COUNT", "WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS", "WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED", "WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS", "WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT", "WIFI_WATCHDOG_MAX_AP_CHECKS", "WIFI_WATCHDOG_ON", "WIFI_WATCHDOG_PING_COUNT", "WIFI_WATCHDOG_PING_DELAY_MS", "WIFI_WATCHDOG_PING_TIMEOUT_MS", "WINDOW_ANIMATION_SCALE", "(Landroid/content/Context;)Z", "getConfiguration", "(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V", "(Landroid/content/ContentResolver;Ljava/lang/String;)F", "(Landroid/content/ContentResolver;Ljava/lang/String;F)F", "getInt", "(Landroid/content/ContentResolver;Ljava/lang/String;)I", "(Landroid/content/ContentResolver;Ljava/lang/String;I)I", "getLong", "(Landroid/content/ContentResolver;Ljava/lang/String;)J", "(Landroid/content/ContentResolver;Ljava/lang/String;J)J", "getShowGTalkServiceStatus", "(Landroid/content/ContentResolver;)Z", "(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;", "getUriFor", "(Ljava/lang/String;)Landroid/net/Uri;", "putConfiguration", "(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)Z", "putFloat", "(Landroid/content/ContentResolver;Ljava/lang/String;F)Z", "putInt", "(Landroid/content/ContentResolver;Ljava/lang/String;I)Z", "putLong", "(Landroid/content/ContentResolver;Ljava/lang/String;J)Z", "(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z", "setShowGTalkServiceStatus", "(Landroid/content/ContentResolver;Z)V", "android/provider/Settings$Secure", "ACCESSIBILITY_DISPLAY_INVERSION_ENABLED", "ACCESSIBILITY_ENABLED", "ACCESSIBILITY_SPEAK_PASSWORD", "ALLOWED_GEOLOCATION_ORIGINS", "ALLOW_MOCK_LOCATION", "BACKGROUND_DATA", "DEFAULT_INPUT_METHOD", "DEVELOPMENT_SETTINGS_ENABLED", "ENABLED_ACCESSIBILITY_SERVICES", "ENABLED_INPUT_METHODS", "INPUT_METHOD_SELECTOR_VISIBILITY", "LOCATION_MODE", "LOCATION_MODE_BATTERY_SAVING", "LOCATION_MODE_HIGH_ACCURACY", "LOCATION_MODE_OFF", "LOCATION_MODE_SENSORS_ONLY", "RTT_CALLING_MODE", "SELECTED_INPUT_METHOD_SUBTYPE", "SKIP_FIRST_USE_HINTS", "TOUCH_EXPLORATION_ENABLED", "TTS_DEFAULT_COUNTRY", "TTS_DEFAULT_LANG", "TTS_DEFAULT_PITCH", "TTS_DEFAULT_RATE", "TTS_DEFAULT_SYNTH", "TTS_DEFAULT_VARIANT", "TTS_ENABLED_PLUGINS", "TTS_USE_DEFAULTS", "WIFI_WATCHDOG_WATCH_LIST", "isLocationProviderEnabled", "(Landroid/content/ContentResolver;Ljava/lang/String;)Z", "setLocationProviderEnabled", "(Landroid/content/ContentResolver;Ljava/lang/String;Z)V", "android/os/Vibrator", "cancel", "hasAmplitudeControl", "hasVibrator", "vibrate", "(JLandroid/media/AudioAttributes;)V", "(Landroid/os/VibrationEffect;)V", "(Landroid/os/VibrationEffect;Landroid/media/AudioAttributes;)V", "([JI)V", "([JILandroid/media/AudioAttributes;)V", "android/os/Process", "FIRST_APPLICATION_UID", "LAST_APPLICATION_UID", "PHONE_UID", "SIGNAL_KILL", "SIGNAL_QUIT", "SIGNAL_USR1", "SYSTEM_UID", "THREAD_PRIORITY_AUDIO", "THREAD_PRIORITY_BACKGROUND", "THREAD_PRIORITY_DEFAULT", "THREAD_PRIORITY_DISPLAY", "THREAD_PRIORITY_FOREGROUND", "THREAD_PRIORITY_LESS_FAVORABLE", "THREAD_PRIORITY_LOWEST", "THREAD_PRIORITY_MORE_FAVORABLE", "THREAD_PRIORITY_URGENT_AUDIO", "THREAD_PRIORITY_URGENT_DISPLAY", "THREAD_PRIORITY_VIDEO", "getElapsedCpuTime", "getExclusiveCores", "getGidForName", "getStartElapsedRealtime", "getStartUptimeMillis", "getThreadPriority", "getUidForName", "is64Bit", "isApplicationUid", "isIsolated", "killProcess", "myPid", "myTid", "myUid", "myUserHandle", "()Landroid/os/UserHandle;", "sendSignal", "setThreadPriority", "supportsProcesses", "android/os/PowerManager", "ACQUIRE_CAUSES_WAKEUP", "ACTION_DEVICE_IDLE_MODE_CHANGED", "ACTION_POWER_SAVE_MODE_CHANGED", "FULL_WAKE_LOCK", "LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF", "LOCATION_MODE_FOREGROUND_ONLY", "LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF", "LOCATION_MODE_NO_CHANGE", "ON_AFTER_RELEASE", "PARTIAL_WAKE_LOCK", "PROXIMITY_SCREEN_OFF_WAKE_LOCK", "RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY", "SCREEN_BRIGHT_WAKE_LOCK", "SCREEN_DIM_WAKE_LOCK", "getLocationPowerSaveMode", "isDeviceIdleMode", "isIgnoringBatteryOptimizations", "isInteractive", "isPowerSaveMode", "isScreenOn", "isSustainedPerformanceModeSupported", "isWakeLockLevelSupported", "newWakeLock", "(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;", "reboot", "android/os/ParcelFileDescriptor", "MODE_APPEND", "MODE_CREATE", "MODE_READ_ONLY", "MODE_READ_WRITE", "MODE_TRUNCATE", "MODE_WORLD_READABLE", "MODE_WORLD_WRITEABLE", "MODE_WRITE_ONLY", "adoptFd", "(I)Landroid/os/ParcelFileDescriptor;", "canDetectErrors", "checkError", "closeWithError", "createPipe", "()[Landroid/os/ParcelFileDescriptor;", "createReliablePipe", "createReliableSocketPair", "createSocketPair", "detachFd", "()Landroid/os/ParcelFileDescriptor;", "(Ljava/io/FileDescriptor;)Landroid/os/ParcelFileDescriptor;", "fromDatagramSocket", "(Ljava/net/DatagramSocket;)Landroid/os/ParcelFileDescriptor;", "fromFd", "fromSocket", "(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;", "getFd", "getFileDescriptor", "()Ljava/io/FileDescriptor;", "getStatSize", "(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor;", "(Ljava/io/File;ILandroid/os/Handler;Landroid/os/ParcelFileDescriptor$OnCloseListener;)Landroid/os/ParcelFileDescriptor;", "parseMode", "android/os/Parcel", "STRING_CREATOR", "appendFrom", "(Landroid/os/Parcel;II)V", "createBinderArray", "()[Landroid/os/IBinder;", "createBinderArrayList", "createBooleanArray", "()[Z", "createByteArray", "createCharArray", "createDoubleArray", "()[D", "createFloatArray", "createIntArray", "createLongArray", "()[J", "createStringArray", "createStringArrayList", "createTypedArray", "(Landroid/os/Parcelable$Creator;)[Ljava/lang/Object;", "createTypedArrayList", "(Landroid/os/Parcelable$Creator;)Ljava/util/ArrayList;", "dataAvail", "dataCapacity", "dataPosition", "dataSize", "enforceInterface", "hasFileDescriptors", "()Landroid/os/Parcel;", "readArray", "(Ljava/lang/ClassLoader;)[Ljava/lang/Object;", "readArrayList", "(Ljava/lang/ClassLoader;)Ljava/util/ArrayList;", "readBinderArray", "([Landroid/os/IBinder;)V", "readBinderList", "(Ljava/util/List;)V", "readBooleanArray", "([Z)V", "readBundle", "(Ljava/lang/ClassLoader;)Landroid/os/Bundle;", "readByte", "readByteArray", "readCharArray", "readDouble", "readDoubleArray", "([D)V", "readException", "(ILjava/lang/String;)V", "readFileDescriptor", "readFloat", "readFloatArray", "([F)V", "readHashMap", "(Ljava/lang/ClassLoader;)Ljava/util/HashMap;", "readInt", "readIntArray", "readList", "(Ljava/util/List;Ljava/lang/ClassLoader;)V", "readLong", "readLongArray", "([J)V", "readMap", "(Ljava/util/Map;Ljava/lang/ClassLoader;)V", "readParcelable", "(Ljava/lang/ClassLoader;)Landroid/os/Parcelable;", "readParcelableArray", "(Ljava/lang/ClassLoader;)[Landroid/os/Parcelable;", "readPersistableBundle", "()Landroid/os/PersistableBundle;", "(Ljava/lang/ClassLoader;)Landroid/os/PersistableBundle;", "readSerializable", "()Ljava/io/Serializable;", "readSize", "()Landroid/util/Size;", "readSizeF", "()Landroid/util/SizeF;", "readSparseArray", "(Ljava/lang/ClassLoader;)Landroid/util/SparseArray;", "readSparseBooleanArray", "()Landroid/util/SparseBooleanArray;", "readString", "readStringArray", "readStringList", "readStrongBinder", "readTypedArray", "([Ljava/lang/Object;Landroid/os/Parcelable$Creator;)V", "readTypedList", "(Ljava/util/List;Landroid/os/Parcelable$Creator;)V", "readTypedObject", "(Landroid/os/Parcelable$Creator;)Ljava/lang/Object;", "readValue", "(Ljava/lang/ClassLoader;)Ljava/lang/Object;", "setDataCapacity", "setDataPosition", "setDataSize", "unmarshall", "writeArray", "([Ljava/lang/Object;)V", "writeBinderArray", "writeBinderList", "writeBooleanArray", "writeBundle", "writeByte", "(B)V", "writeByteArray", "writeCharArray", "writeDouble", "writeDoubleArray", "writeException", "(Ljava/lang/Exception;)V", "writeFileDescriptor", "(Ljava/io/FileDescriptor;)V", "writeFloat", "writeFloatArray", "writeInt", "writeIntArray", "writeInterfaceToken", "writeList", "writeLong", "writeLongArray", "writeMap", "writeNoException", "writeParcelable", "(Landroid/os/Parcelable;I)V", "writeParcelableArray", "([Landroid/os/Parcelable;I)V", "writePersistableBundle", "(Landroid/os/PersistableBundle;)V", "writeSerializable", "(Ljava/io/Serializable;)V", "writeSize", "(Landroid/util/Size;)V", "writeSizeF", "(Landroid/util/SizeF;)V", "writeSparseArray", "writeSparseBooleanArray", "(Landroid/util/SparseBooleanArray;)V", "writeString", "writeStringArray", "writeStringList", "writeStrongBinder", "(Landroid/os/IBinder;)V", "writeStrongInterface", "(Landroid/os/IInterface;)V", "writeTypedArray", "writeTypedList", "writeTypedObject", "writeValue", "android/os/Message", "arg1", "arg2", "replyTo", "Landroid/os/Messenger;", "sendingUid", "what", "(Landroid/os/Message;)V", "()Ljava/lang/Runnable;", "getData", "getTarget", "getWhen", "isAsynchronous", "()Landroid/os/Message;", "(Landroid/os/Handler;)Landroid/os/Message;", "(Landroid/os/Handler;I)Landroid/os/Message;", "(Landroid/os/Handler;III)Landroid/os/Message;", "(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;", "(Landroid/os/Handler;ILjava/lang/Object;)Landroid/os/Message;", "(Landroid/os/Handler;Ljava/lang/Runnable;)Landroid/os/Message;", "(Landroid/os/Message;)Landroid/os/Message;", "peekData", "sendToTarget", "setAsynchronous", "setData", "setTarget", "(Landroid/os/Handler;)V", "android/os/Looper", "dump", "(Landroid/util/Printer;Ljava/lang/String;)V", "getMainLooper", "()Landroid/os/Looper;", "getQueue", "()Landroid/os/MessageQueue;", "getThread", "isCurrentThread", "myLooper", "myQueue", "prepare", "prepareMainLooper", "quit", "quitSafely", "setMessageLogging", "(Landroid/util/Printer;)V", "android/os/IBinder", "DUMP_TRANSACTION", "FIRST_CALL_TRANSACTION", "FLAG_ONEWAY", "INTERFACE_TRANSACTION", "LAST_CALL_TRANSACTION", "LIKE_TRANSACTION", "PING_TRANSACTION", "TWEET_TRANSACTION", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "dumpAsync", "getInterfaceDescriptor", "isBinderAlive", "(Landroid/os/IBinder$DeathRecipient;I)V", "pingBinder", "queryLocalInterface", "(Ljava/lang/String;)Landroid/os/IInterface;", "transact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "unlinkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)Z", "android/os/HandlerThread", "getLooper", "getThreadId", "onLooperPrepared", "(Ljava/lang/String;I)V", "android/os/Handler", "createAsync", "(Landroid/os/Looper;)Landroid/os/Handler;", "(Landroid/os/Looper;Landroid/os/Handler$Callback;)Landroid/os/Handler;", "dispatchMessage", "getMessageName", "(Landroid/os/Message;)Ljava/lang/String;", "handleMessage", "hasMessages", "(ILjava/lang/Object;)Z", "obtainMessage", "(I)Landroid/os/Message;", "(III)Landroid/os/Message;", "(IIILjava/lang/Object;)Landroid/os/Message;", "(ILjava/lang/Object;)Landroid/os/Message;", "postAtFrontOfQueue", "postAtTime", "(Ljava/lang/Runnable;Ljava/lang/Object;J)Z", "(Ljava/lang/Runnable;Ljava/lang/Object;)V", "removeCallbacksAndMessages", "removeMessages", "sendEmptyMessage", "sendEmptyMessageAtTime", "(IJ)Z", "sendEmptyMessageDelayed", "sendMessage", "(Landroid/os/Message;)Z", "sendMessageAtFrontOfQueue", "sendMessageAtTime", "(Landroid/os/Message;J)Z", "sendMessageDelayed", "(Landroid/os/Handler$Callback;)V", "(Landroid/os/Looper;)V", "(Landroid/os/Looper;Landroid/os/Handler$Callback;)V", "android/os/Handler$Callback", "android/os/Environment", "DIRECTORY_ALARMS", "DIRECTORY_DCIM", "DIRECTORY_DOCUMENTS", "DIRECTORY_DOWNLOADS", "DIRECTORY_MOVIES", "DIRECTORY_MUSIC", "DIRECTORY_NOTIFICATIONS", "DIRECTORY_PICTURES", "DIRECTORY_PODCASTS", "DIRECTORY_RINGTONES", "MEDIA_EJECTING", "MEDIA_MOUNTED_READ_ONLY", "MEDIA_UNKNOWN", "getDataDirectory", "getDownloadCacheDirectory", "getExternalStorageDirectory", "getExternalStoragePublicDirectory", "(Ljava/lang/String;)Ljava/io/File;", "getExternalStorageState", "(Ljava/io/File;)Ljava/lang/String;", "getRootDirectory", "getStorageState", "isExternalStorageEmulated", "isExternalStorageRemovable", "android/os/Bundle", "deepCopy", "getBinder", "(Ljava/lang/String;)Landroid/os/IBinder;", "getBundle", "(Ljava/lang/String;)Landroid/os/Bundle;", "getByte", "(Ljava/lang/String;)B", "(Ljava/lang/String;B)Ljava/lang/Byte;", "getByteArray", "getChar", "(Ljava/lang/String;)C", "(Ljava/lang/String;C)C", "getCharArray", "(Ljava/lang/String;)[C", "getCharSequence", "(Ljava/lang/String;)Ljava/lang/CharSequence;", "(Ljava/lang/String;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", "getCharSequenceArray", "(Ljava/lang/String;)[Ljava/lang/CharSequence;", "getCharSequenceArrayList", "(Ljava/lang/String;)Ljava/util/ArrayList;", "(Ljava/lang/String;F)F", "getFloatArray", "(Ljava/lang/String;)[F", "getIntegerArrayList", "getParcelable", "(Ljava/lang/String;)Landroid/os/Parcelable;", "getParcelableArray", "(Ljava/lang/String;)[Landroid/os/Parcelable;", "getParcelableArrayList", "getSerializable", "(Ljava/lang/String;)Ljava/io/Serializable;", "getShort", "(Ljava/lang/String;)S", "(Ljava/lang/String;S)S", "getShortArray", "(Ljava/lang/String;)[S", "(Ljava/lang/String;)Landroid/util/Size;", "getSizeF", "(Ljava/lang/String;)Landroid/util/SizeF;", "getSparseParcelableArray", "(Ljava/lang/String;)Landroid/util/SparseArray;", "getStringArrayList", "putBinder", "(Ljava/lang/String;Landroid/os/IBinder;)V", "putBundle", "(Ljava/lang/String;Landroid/os/Bundle;)V", "putByte", "(Ljava/lang/String;B)V", "putByteArray", "(Ljava/lang/String;[B)V", "putChar", "(Ljava/lang/String;C)V", "putCharArray", "(Ljava/lang/String;[C)V", "putCharSequence", "(Ljava/lang/String;Ljava/lang/CharSequence;)V", "putCharSequenceArray", "(Ljava/lang/String;[Ljava/lang/CharSequence;)V", "putCharSequenceArrayList", "(Ljava/lang/String;Ljava/util/ArrayList;)V", "(Ljava/lang/String;F)V", "putFloatArray", "(Ljava/lang/String;[F)V", "putIntegerArrayList", "putParcelable", "(Ljava/lang/String;Landroid/os/Parcelable;)V", "putParcelableArray", "(Ljava/lang/String;[Landroid/os/Parcelable;)V", "putParcelableArrayList", "putSerializable", "(Ljava/lang/String;Ljava/io/Serializable;)V", "putShort", "(Ljava/lang/String;S)V", "putShortArray", "(Ljava/lang/String;[S)V", "putSize", "(Ljava/lang/String;Landroid/util/Size;)V", "putSizeF", "(Ljava/lang/String;Landroid/util/SizeF;)V", "putSparseParcelableArray", "(Ljava/lang/String;Landroid/util/SparseArray;)V", "putStringArrayList", "setClassLoader", "(Ljava/lang/String;Z)Z", "putBoolean", "(Ljava/lang/String;J)J", "(Ljava/lang/String;)J", "(Ljava/lang/String;J)V", "getDouble", "(Ljava/lang/String;)D", "(Ljava/lang/String;D)D", "putDouble", "(Ljava/lang/String;D)V", "getLongArray", "(Ljava/lang/String;)[J", "putLongArray", "(Ljava/lang/String;[J)V", "putStringArray", "(Ljava/lang/String;[Ljava/lang/String;)V", "getIntArray", "(Ljava/lang/String;)[I", "putIntArray", "(Ljava/lang/String;[I)V", "putBooleanArray", "(Ljava/lang/String;[Z)V", "putDoubleArray", "(Ljava/lang/String;[D)V", "getBooleanArray", "(Ljava/lang/String;)[Z", "getDoubleArray", "(Ljava/lang/String;)[D", "getStringArray", "android/os/Build", "BOOTLOADER", "BRAND", "CPU_ABI", "CPU_ABI2", "DEVICE", "MANUFACTURER", "MODEL", "PRODUCT", "RADIO", "SERIAL", "SUPPORTED_32_BIT_ABIS", "SUPPORTED_64_BIT_ABIS", "SUPPORTED_ABIS", "TAGS", "getRadioVersion", "getSerial", "android/os/Build$VERSION", "BASE_OS", "CODENAME", "INCREMENTAL", "PREVIEW_SDK_INT", "SECURITY_PATCH", "android/net/Uri", "buildUpon", "()Landroid/net/Uri$Builder;", "(Landroid/net/Uri;)I", "encode", "fromFile", "(Ljava/io/File;)Landroid/net/Uri;", "fromParts", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;", "getAuthority", "getBooleanQueryParameter", "getEncodedAuthority", "getEncodedFragment", "getEncodedPath", "getEncodedQuery", "getEncodedSchemeSpecificPart", "getEncodedUserInfo", "getFragment", "getHost", "getLastPathSegment", "getPathSegments", "getPort", "getQuery", "getQueryParameter", "getQueryParameterNames", "getQueryParameters", "(Ljava/lang/String;)Ljava/util/List;", "getScheme", "getSchemeSpecificPart", "getUserInfo", "isHierarchical", "isRelative", "normalizeScheme", "()Landroid/net/Uri;", "withAppendedPath", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;", "(Landroid/os/Parcel;Landroid/net/Uri;)V", "android/net/NetworkInfo", "getDetailedState", "()Landroid/net/NetworkInfo$DetailedState;", "getExtraInfo", "getReason", "()Landroid/net/NetworkInfo$State;", "getSubtype", "getSubtypeName", "isAvailable", "isConnected", "isConnectedOrConnecting", "isFailover", "isRoaming", "android/net/ConnectivityManager", "ACTION_BACKGROUND_DATA_SETTING_CHANGED", "ACTION_CAPTIVE_PORTAL_SIGN_IN", "ACTION_RESTRICT_BACKGROUND_CHANGED", "CONNECTIVITY_ACTION", "DEFAULT_NETWORK_PREFERENCE", "EXTRA_CAPTIVE_PORTAL", "EXTRA_CAPTIVE_PORTAL_URL", "EXTRA_EXTRA_INFO", "EXTRA_IS_FAILOVER", "EXTRA_NETWORK", "EXTRA_NETWORK_INFO", "EXTRA_NETWORK_REQUEST", "EXTRA_NETWORK_TYPE", "EXTRA_NO_CONNECTIVITY", "EXTRA_OTHER_NETWORK_INFO", "EXTRA_REASON", "MULTIPATH_PREFERENCE_HANDOVER", "MULTIPATH_PREFERENCE_PERFORMANCE", "MULTIPATH_PREFERENCE_RELIABILITY", "RESTRICT_BACKGROUND_STATUS_DISABLED", "RESTRICT_BACKGROUND_STATUS_ENABLED", "RESTRICT_BACKGROUND_STATUS_WHITELISTED", "TYPE_DUMMY", "TYPE_ETHERNET", "TYPE_MOBILE", "TYPE_MOBILE_DUN", "TYPE_MOBILE_HIPRI", "TYPE_MOBILE_MMS", "TYPE_MOBILE_SUPL", "TYPE_VPN", "TYPE_WIFI", "TYPE_WIMAX", "addDefaultNetworkActiveListener", "(Landroid/net/ConnectivityManager$OnNetworkActiveListener;)V", "bindProcessToNetwork", "(Landroid/net/Network;)Z", "getActiveNetwork", "()Landroid/net/Network;", "getActiveNetworkInfo", "()Landroid/net/NetworkInfo;", "getAllNetworkInfo", "()[Landroid/net/NetworkInfo;", "getAllNetworks", "()[Landroid/net/Network;", "getBackgroundDataSetting", "getBoundNetworkForProcess", "getDefaultProxy", "()Landroid/net/ProxyInfo;", "getLinkProperties", "(Landroid/net/Network;)Landroid/net/LinkProperties;", "getMultipathPreference", "(Landroid/net/Network;)I", "getNetworkCapabilities", "(Landroid/net/Network;)Landroid/net/NetworkCapabilities;", "getNetworkInfo", "(I)Landroid/net/NetworkInfo;", "(Landroid/net/Network;)Landroid/net/NetworkInfo;", "getNetworkPreference", "getNetworkWatchlistConfigHash", "getProcessDefaultNetwork", "getRestrictBackgroundStatus", "isActiveNetworkMetered", "isDefaultNetworkActive", "isNetworkTypeValid", "registerDefaultNetworkCallback", "(Landroid/net/ConnectivityManager$NetworkCallback;)V", "(Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V", "(Landroid/net/NetworkRequest;Landroid/app/PendingIntent;)V", "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;)V", "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;)V", "releaseNetworkRequest", "(Landroid/app/PendingIntent;)V", "removeDefaultNetworkActiveListener", "reportBadNetwork", "(Landroid/net/Network;)V", "reportNetworkConnectivity", "(Landroid/net/Network;Z)V", "requestBandwidthUpdate", "requestNetwork", "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;I)V", "(Landroid/net/NetworkRequest;Landroid/net/ConnectivityManager$NetworkCallback;Landroid/os/Handler;I)V", "setNetworkPreference", "setProcessDefaultNetwork", "unregisterNetworkCallback", "android/media/MediaRouter", "CALLBACK_FLAG_PERFORM_ACTIVE_SCAN", "CALLBACK_FLAG_UNFILTERED_EVENTS", "ROUTE_TYPE_LIVE_AUDIO", "ROUTE_TYPE_LIVE_VIDEO", "ROUTE_TYPE_USER", "(ILandroid/media/MediaRouter$Callback;)V", "(ILandroid/media/MediaRouter$Callback;I)V", "addUserRoute", "(Landroid/media/MediaRouter$UserRouteInfo;)V", "clearUserRoutes", "createRouteCategory", "(IZ)Landroid/media/MediaRouter$RouteCategory;", "(Ljava/lang/CharSequence;Z)Landroid/media/MediaRouter$RouteCategory;", "createUserRoute", "(Landroid/media/MediaRouter$RouteCategory;)Landroid/media/MediaRouter$UserRouteInfo;", "getCategoryAt", "(I)Landroid/media/MediaRouter$RouteCategory;", "getCategoryCount", "getDefaultRoute", "()Landroid/media/MediaRouter$RouteInfo;", "getRouteAt", "(I)Landroid/media/MediaRouter$RouteInfo;", "getRouteCount", "getSelectedRoute", "(Landroid/media/MediaRouter$Callback;)V", "removeUserRoute", "selectRoute", "(ILandroid/media/MediaRouter$RouteInfo;)V", "android/media/MediaRouter$RouteInfo", "DEVICE_TYPE_BLUETOOTH", "DEVICE_TYPE_SPEAKER", "DEVICE_TYPE_TV", "DEVICE_TYPE_UNKNOWN", "PLAYBACK_TYPE_LOCAL", "PLAYBACK_TYPE_REMOTE", "PLAYBACK_VOLUME_FIXED", "PLAYBACK_VOLUME_VARIABLE", "()Landroid/media/MediaRouter$RouteCategory;", "getDescription", "getDeviceType", "getGroup", "()Landroid/media/MediaRouter$RouteGroup;", "getIconDrawable", "(Landroid/content/Context;)Ljava/lang/CharSequence;", "getPlaybackStream", "getPlaybackType", "getPresentationDisplay", "getStatus", "getSupportedTypes", "getVolume", "getVolumeHandling", "getVolumeMax", "isConnecting", "requestSetVolume", "requestUpdateVolume", "android/media/MediaFormat", "COLOR_RANGE_FULL", "COLOR_RANGE_LIMITED", "COLOR_STANDARD_BT2020", "COLOR_STANDARD_BT601_NTSC", "COLOR_STANDARD_BT601_PAL", "COLOR_STANDARD_BT709", "COLOR_TRANSFER_HLG", "COLOR_TRANSFER_LINEAR", "COLOR_TRANSFER_SDR_VIDEO", "COLOR_TRANSFER_ST2084", "KEY_AAC_DRC_ATTENUATION_FACTOR", "KEY_AAC_DRC_BOOST_FACTOR", "KEY_AAC_DRC_EFFECT_TYPE", "KEY_AAC_DRC_HEAVY_COMPRESSION", "KEY_AAC_DRC_TARGET_REFERENCE_LEVEL", "KEY_AAC_ENCODED_TARGET_LEVEL", "KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT", "KEY_AAC_SBR_MODE", "KEY_AUDIO_SESSION_ID", "KEY_BITRATE_MODE", "KEY_CAPTURE_RATE", "KEY_COLOR_RANGE", "KEY_COLOR_STANDARD", "KEY_COLOR_TRANSFER", "KEY_COMPLEXITY", "KEY_GRID_COLUMNS", "KEY_GRID_ROWS", "KEY_HDR_STATIC_INFO", "KEY_INTRA_REFRESH_PERIOD", "KEY_LATENCY", "KEY_LEVEL", "KEY_OPERATING_RATE", "KEY_OUTPUT_REORDER_DEPTH", "KEY_PCM_ENCODING", "KEY_PRIORITY", "KEY_PROFILE", "KEY_QUALITY", "KEY_SLICE_HEIGHT", "KEY_TEMPORAL_LAYERING", "KEY_TILE_HEIGHT", "KEY_TILE_WIDTH", "KEY_TRACK_ID", "MIMETYPE_AUDIO_AAC", "MIMETYPE_AUDIO_AC3", "MIMETYPE_AUDIO_AMR_NB", "MIMETYPE_AUDIO_AMR_WB", "MIMETYPE_AUDIO_EAC3", "MIMETYPE_AUDIO_FLAC", "MIMETYPE_AUDIO_G711_ALAW", "MIMETYPE_AUDIO_G711_MLAW", "MIMETYPE_AUDIO_MPEG", "MIMETYPE_AUDIO_MSGSM", "MIMETYPE_AUDIO_OPUS", "MIMETYPE_AUDIO_QCELP", "MIMETYPE_AUDIO_RAW", "MIMETYPE_AUDIO_SCRAMBLED", "MIMETYPE_AUDIO_VORBIS", "MIMETYPE_IMAGE_ANDROID_HEIC", "MIMETYPE_TEXT_CEA_608", "MIMETYPE_TEXT_CEA_708", "MIMETYPE_TEXT_SUBRIP", "MIMETYPE_TEXT_VTT", "MIMETYPE_VIDEO_AVC", "MIMETYPE_VIDEO_DOLBY_VISION", "MIMETYPE_VIDEO_H263", "MIMETYPE_VIDEO_HEVC", "MIMETYPE_VIDEO_MPEG2", "MIMETYPE_VIDEO_MPEG4", "MIMETYPE_VIDEO_RAW", "MIMETYPE_VIDEO_SCRAMBLED", "MIMETYPE_VIDEO_VP8", "MIMETYPE_VIDEO_VP9", "createAudioFormat", "(Ljava/lang/String;II)Landroid/media/MediaFormat;", "createSubtitleFormat", "(Ljava/lang/String;Ljava/lang/String;)Landroid/media/MediaFormat;", "createVideoFormat", "getByteBuffer", "(Ljava/lang/String;)Ljava/nio/ByteBuffer;", "getFeatureEnabled", "setByteBuffer", "(Ljava/lang/String;Ljava/nio/ByteBuffer;)V", "setFeatureEnabled", "setInteger", "setLong", "android/media/MediaExtractor", "SAMPLE_FLAG_ENCRYPTED", "SAMPLE_FLAG_PARTIAL_FRAME", "SAMPLE_FLAG_SYNC", "SEEK_TO_CLOSEST_SYNC", "SEEK_TO_NEXT_SYNC", "SEEK_TO_PREVIOUS_SYNC", "getAudioPresentations", "(I)Ljava/util/List;", "getCachedDuration", "getCasInfo", "(I)Landroid/media/MediaExtractor$CasInfo;", "getDrmInitData", "()Landroid/media/DrmInitData;", "getPsshInfo", "getSampleCryptoInfo", "(Landroid/media/MediaCodec$CryptoInfo;)Z", "getSampleSize", "(I)Landroid/media/MediaFormat;", "hasCacheReachedEndOfStream", "(Ljava/nio/ByteBuffer;I)I", "(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V", "(Landroid/content/res/AssetFileDescriptor;)V", "(Landroid/media/MediaDataSource;)V", "(Ljava/io/FileDescriptor;JJ)V", "(Ljava/lang/String;Ljava/util/Map;)V", "setMediaCas", "(Landroid/media/MediaCas;)V", "android/media/MediaCodec", "BUFFER_FLAG_CODEC_CONFIG", "BUFFER_FLAG_END_OF_STREAM", "BUFFER_FLAG_KEY_FRAME", "BUFFER_FLAG_PARTIAL_FRAME", "BUFFER_FLAG_SYNC_FRAME", "CONFIGURE_FLAG_ENCODE", "CRYPTO_MODE_AES_CBC", "CRYPTO_MODE_AES_CTR", "CRYPTO_MODE_UNENCRYPTED", "INFO_OUTPUT_BUFFERS_CHANGED", "INFO_OUTPUT_FORMAT_CHANGED", "INFO_TRY_AGAIN_LATER", "PARAMETER_KEY_REQUEST_SYNC_FRAME", "PARAMETER_KEY_SUSPEND", "PARAMETER_KEY_VIDEO_BITRATE", "VIDEO_SCALING_MODE_SCALE_TO_FIT", "VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING", "(Landroid/media/MediaFormat;Landroid/view/Surface;ILandroid/media/MediaDescrambler;)V", "(Landroid/media/MediaFormat;Landroid/view/Surface;Landroid/media/MediaCrypto;I)V", "createByCodecName", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "createInputSurface", "createPersistentInputSurface", "(J)I", "(Landroid/media/MediaCodec$BufferInfo;J)I", "getCodecInfo", "()Landroid/media/MediaCodecInfo;", "(I)Ljava/nio/ByteBuffer;", "getInputBuffers", "()[Ljava/nio/ByteBuffer;", "getInputFormat", "()Landroid/media/MediaFormat;", "getInputImage", "(I)Landroid/media/Image;", "getOutputBuffers", "getOutputImage", "(IIIJI)V", "queueSecureInputBuffer", "(IILandroid/media/MediaCodec$CryptoInfo;JI)V", "(IJ)V", "(Landroid/media/MediaCodec$Callback;)V", "(Landroid/media/MediaCodec$Callback;Landroid/os/Handler;)V", "setInputSurface", "(Landroid/view/Surface;)V", "setOnFrameRenderedListener", "(Landroid/media/MediaCodec$OnFrameRenderedListener;Landroid/os/Handler;)V", "setOutputSurface", "setParameters", "setVideoScalingMode", "signalEndOfInputStream", "android/media/MediaCodec$BufferInfo", "presentationTimeUs", "(IIJI)V", "android/media/AudioManager", "ACTION_AUDIO_BECOMING_NOISY", "ACTION_HDMI_AUDIO_PLUG", "ACTION_HEADSET_PLUG", "ACTION_MICROPHONE_MUTE_CHANGED", "ACTION_SCO_AUDIO_STATE_CHANGED", "ACTION_SCO_AUDIO_STATE_UPDATED", "ADJUST_LOWER", "ADJUST_MUTE", "ADJUST_RAISE", "ADJUST_SAME", "ADJUST_TOGGLE_MUTE", "ADJUST_UNMUTE", "AUDIOFOCUS_GAIN", "AUDIOFOCUS_GAIN_TRANSIENT", "AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE", "AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK", "AUDIOFOCUS_LOSS", "AUDIOFOCUS_LOSS_TRANSIENT", "AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK", "AUDIOFOCUS_NONE", "AUDIOFOCUS_REQUEST_DELAYED", "AUDIOFOCUS_REQUEST_FAILED", "AUDIOFOCUS_REQUEST_GRANTED", "AUDIO_SESSION_ID_GENERATE", "ERROR_DEAD_OBJECT", "EXTRA_AUDIO_PLUG_STATE", "EXTRA_ENCODINGS", "EXTRA_MAX_CHANNEL_COUNT", "EXTRA_RINGER_MODE", "EXTRA_SCO_AUDIO_PREVIOUS_STATE", "EXTRA_SCO_AUDIO_STATE", "EXTRA_VIBRATE_SETTING", "EXTRA_VIBRATE_TYPE", "FLAG_ALLOW_RINGER_MODES", "FLAG_PLAY_SOUND", "FLAG_REMOVE_SOUND_AND_VIBRATE", "FLAG_SHOW_UI", "FLAG_VIBRATE", "FX_FOCUS_NAVIGATION_DOWN", "FX_FOCUS_NAVIGATION_LEFT", "FX_FOCUS_NAVIGATION_RIGHT", "FX_FOCUS_NAVIGATION_UP", "FX_KEYPRESS_DELETE", "FX_KEYPRESS_INVALID", "FX_KEYPRESS_RETURN", "FX_KEYPRESS_SPACEBAR", "FX_KEYPRESS_STANDARD", "FX_KEY_CLICK", "GET_DEVICES_ALL", "GET_DEVICES_INPUTS", "GET_DEVICES_OUTPUTS", "MODE_CURRENT", "MODE_INVALID", "MODE_IN_CALL", "MODE_IN_COMMUNICATION", "MODE_RINGTONE", "NUM_STREAMS", "PROPERTY_OUTPUT_FRAMES_PER_BUFFER", "PROPERTY_OUTPUT_SAMPLE_RATE", "PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED", "PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND", "PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND", "RINGER_MODE_CHANGED_ACTION", "RINGER_MODE_NORMAL", "RINGER_MODE_SILENT", "RINGER_MODE_VIBRATE", "ROUTE_ALL", "ROUTE_BLUETOOTH", "ROUTE_BLUETOOTH_A2DP", "ROUTE_BLUETOOTH_SCO", "ROUTE_EARPIECE", "ROUTE_HEADSET", "ROUTE_SPEAKER", "SCO_AUDIO_STATE_CONNECTED", "SCO_AUDIO_STATE_CONNECTING", "SCO_AUDIO_STATE_DISCONNECTED", "SCO_AUDIO_STATE_ERROR", "STREAM_ACCESSIBILITY", "STREAM_ALARM", "STREAM_DTMF", "STREAM_MUSIC", "STREAM_NOTIFICATION", "STREAM_RING", "STREAM_SYSTEM", "STREAM_VOICE_CALL", "USE_DEFAULT_STREAM_TYPE", "VIBRATE_SETTING_CHANGED_ACTION", "VIBRATE_SETTING_OFF", "VIBRATE_SETTING_ON", "VIBRATE_SETTING_ONLY_SILENT", "VIBRATE_TYPE_NOTIFICATION", "VIBRATE_TYPE_RINGER", "abandonAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I", "abandonAudioFocusRequest", "(Landroid/media/AudioFocusRequest;)I", "adjustStreamVolume", "adjustSuggestedStreamVolume", "adjustVolume", "dispatchMediaKeyEvent", "(Landroid/view/KeyEvent;)V", "generateAudioSessionId", "getActivePlaybackConfigurations", "getActiveRecordingConfigurations", "getDevices", "(I)[Landroid/media/AudioDeviceInfo;", "getMicrophones", "getParameters", "getRingerMode", "getRouting", "getStreamMaxVolume", "getStreamMinVolume", "getStreamVolume", "getStreamVolumeDb", "getVibrateSetting", "isBluetoothA2dpOn", "isBluetoothScoAvailableOffCall", "isBluetoothScoOn", "isMicrophoneMute", "isMusicActive", "isSpeakerphoneOn", "isStreamMute", "isVolumeFixed", "isWiredHeadsetOn", "(Landroid/media/AudioDeviceCallback;Landroid/os/Handler;)V", "(Landroid/media/AudioManager$AudioPlaybackCallback;Landroid/os/Handler;)V", "(Landroid/media/AudioManager$AudioRecordingCallback;Landroid/os/Handler;)V", "(Landroid/content/ComponentName;)V", "(Landroid/media/RemoteControlClient;)V", "(Landroid/media/RemoteController;)Z", "requestAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I", "setBluetoothA2dpOn", "setBluetoothScoOn", "setMicrophoneMute", "setMode", "setRingerMode", "setRouting", "setSpeakerphoneOn", "setStreamMute", "setStreamSolo", "setStreamVolume", "setVibrateSetting", "setWiredHeadsetOn", "shouldVibrate", "startBluetoothSco", "stopBluetoothSco", "unloadSoundEffects", "unregisterAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;)V", "unregisterAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;)V", "unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "unregisterMediaButtonEventReceiver", "unregisterRemoteControlClient", "unregisterRemoteController", "(Landroid/media/RemoteController;)V", "android/media/AudioManager$OnAudioFocusChangeListener", "onAudioFocusChange", "android/media/AudioFocusRequest$Builder", "()Landroid/media/AudioFocusRequest;", "setAcceptsDelayedFocusGain", "(Z)Landroid/media/AudioFocusRequest$Builder;", "setAudioAttributes", "(Landroid/media/AudioAttributes;)Landroid/media/AudioFocusRequest$Builder;", "setFocusGain", "(I)Landroid/media/AudioFocusRequest$Builder;", "setForceDucking", "setOnAudioFocusChangeListener", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;)Landroid/media/AudioFocusRequest$Builder;", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;Landroid/os/Handler;)Landroid/media/AudioFocusRequest$Builder;", "setWillPauseWhenDucked", "(Landroid/media/AudioFocusRequest;)V", "android/media/AudioAttributes", "CONTENT_TYPE_MOVIE", "CONTENT_TYPE_MUSIC", "CONTENT_TYPE_SONIFICATION", "CONTENT_TYPE_SPEECH", "CONTENT_TYPE_UNKNOWN", "FLAG_AUDIBILITY_ENFORCED", "FLAG_HW_AV_SYNC", "FLAG_LOW_LATENCY", "USAGE_ALARM", "USAGE_ASSISTANCE_ACCESSIBILITY", "USAGE_ASSISTANCE_NAVIGATION_GUIDANCE", "USAGE_ASSISTANCE_SONIFICATION", "USAGE_ASSISTANT", "USAGE_GAME", "USAGE_MEDIA", "USAGE_NOTIFICATION", "USAGE_NOTIFICATION_COMMUNICATION_DELAYED", "USAGE_NOTIFICATION_COMMUNICATION_INSTANT", "USAGE_NOTIFICATION_COMMUNICATION_REQUEST", "USAGE_NOTIFICATION_EVENT", "USAGE_NOTIFICATION_RINGTONE", "USAGE_UNKNOWN", "USAGE_VOICE_COMMUNICATION", "USAGE_VOICE_COMMUNICATION_SIGNALLING", "getContentType", "getUsage", "android/media/AudioAttributes$Builder", "()Landroid/media/AudioAttributes;", "setContentType", "(I)Landroid/media/AudioAttributes$Builder;", "setLegacyStreamType", "(Landroid/media/AudioAttributes;)V", "android/location/LocationManager", "GPS_PROVIDER", "KEY_LOCATION_CHANGED", "KEY_PROVIDER_ENABLED", "KEY_PROXIMITY_ENTERING", "KEY_STATUS_CHANGED", "NETWORK_PROVIDER", "PASSIVE_PROVIDER", "PROVIDERS_CHANGED_ACTION", "addGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)Z", "addNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)Z", "(Landroid/location/OnNmeaMessageListener;)Z", "(Landroid/location/OnNmeaMessageListener;Landroid/os/Handler;)Z", "addProximityAlert", "(DDFJLandroid/app/PendingIntent;)V", "addTestProvider", "(Ljava/lang/String;ZZZZZZZII)V", "clearTestProviderEnabled", "clearTestProviderLocation", "clearTestProviderStatus", "getAllProviders", "getBestProvider", "(Landroid/location/Criteria;Z)Ljava/lang/String;", "getGnssHardwareModelName", "getGnssYearOfHardware", "getGpsStatus", "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;", "getLastKnownLocation", "(Ljava/lang/String;)Landroid/location/Location;", "(Ljava/lang/String;)Landroid/location/LocationProvider;", "getProviders", "(Landroid/location/Criteria;Z)Ljava/util/List;", "(Z)Ljava/util/List;", "isLocationEnabled", "isProviderEnabled", "(Landroid/location/GnssMeasurementsEvent$Callback;)Z", "(Landroid/location/GnssMeasurementsEvent$Callback;Landroid/os/Handler;)Z", "(Landroid/location/GnssNavigationMessage$Callback;)Z", "(Landroid/location/GnssNavigationMessage$Callback;Landroid/os/Handler;)Z", "(Landroid/location/GnssStatus$Callback;)Z", "(Landroid/location/GnssStatus$Callback;Landroid/os/Handler;)Z", "removeGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)V", "removeNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)V", "(Landroid/location/OnNmeaMessageListener;)V", "removeProximityAlert", "removeTestProvider", "removeUpdates", "(Landroid/location/LocationListener;)V", "requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V", "(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "(Ljava/lang/String;JFLandroid/app/PendingIntent;)V", "(Ljava/lang/String;JFLandroid/location/LocationListener;)V", "(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V", "requestSingleUpdate", "(Landroid/location/Criteria;Landroid/app/PendingIntent;)V", "(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "(Ljava/lang/String;Landroid/app/PendingIntent;)V", "(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V", "sendExtraCommand", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z", "setTestProviderEnabled", "setTestProviderLocation", "(Ljava/lang/String;Landroid/location/Location;)V", "setTestProviderStatus", "(Ljava/lang/String;ILandroid/os/Bundle;J)V", "unregisterGnssMeasurementsCallback", "(Landroid/location/GnssMeasurementsEvent$Callback;)V", "unregisterGnssNavigationMessageCallback", "(Landroid/location/GnssNavigationMessage$Callback;)V", "unregisterGnssStatusCallback", "(Landroid/location/GnssStatus$Callback;)V", "android/location/LocationListener", "onLocationChanged", "(Landroid/location/Location;)V", "onProviderDisabled", "onStatusChanged", "(Ljava/lang/String;ILandroid/os/Bundle;)V", "android/location/Location", "FORMAT_DEGREES", "FORMAT_MINUTES", "FORMAT_SECONDS", "bearingTo", "(Landroid/location/Location;)F", "convert", "(DI)Ljava/lang/String;", "distanceBetween", "(DDDD[F)V", "distanceTo", "getAccuracy", "getAltitude", "getBearing", "getBearingAccuracyDegrees", "getElapsedRealtimeNanos", "getExtras", "getLatitude", "getLongitude", "getSpeed", "getSpeedAccuracyMetersPerSecond", "getTime", "getVerticalAccuracyMeters", "hasAccuracy", "hasAltitude", "hasBearing", "hasBearingAccuracy", "hasSpeed", "hasSpeedAccuracy", "hasVerticalAccuracy", "isFromMockProvider", "removeAccuracy", "removeAltitude", "removeBearing", "removeSpeed", "setAccuracy", "setAltitude", "setBearing", "setBearingAccuracyDegrees", "setElapsedRealtimeNanos", "setExtras", "setLatitude", "setLongitude", "setProvider", "setSpeed", "setSpeedAccuracyMetersPerSecond", "setTime", "setVerticalAccuracyMeters", "android/location/Criteria", "ACCURACY_COARSE", "ACCURACY_FINE", "ACCURACY_HIGH", "ACCURACY_LOW", "ACCURACY_MEDIUM", "NO_REQUIREMENT", "POWER_HIGH", "POWER_LOW", "POWER_MEDIUM", "getBearingAccuracy", "getHorizontalAccuracy", "getPowerRequirement", "getSpeedAccuracy", "getVerticalAccuracy", "isAltitudeRequired", "isBearingRequired", "isCostAllowed", "isSpeedRequired", "setAltitudeRequired", "setBearingAccuracy", "setBearingRequired", "setCostAllowed", "setHorizontalAccuracy", "setPowerRequirement", "setSpeedAccuracy", "setSpeedRequired", "setVerticalAccuracy", "android/hardware/input/InputManager", "ACTION_QUERY_KEYBOARD_LAYOUTS", "META_DATA_KEYBOARD_LAYOUTS", "getInputDevice", "getInputDeviceIds", "(Landroid/hardware/input/InputManager$InputDeviceListener;Landroid/os/Handler;)V", "unregisterInputDeviceListener", "(Landroid/hardware/input/InputManager$InputDeviceListener;)V", "android/hardware/input/InputManager$InputDeviceListener", "onInputDeviceAdded", "onInputDeviceChanged", "onInputDeviceRemoved", "android/hardware/display/DisplayManager", "DISPLAY_CATEGORY_PRESENTATION", "VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR", "VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY", "VIRTUAL_DISPLAY_FLAG_PRESENTATION", "VIRTUAL_DISPLAY_FLAG_PUBLIC", "VIRTUAL_DISPLAY_FLAG_SECURE", "createVirtualDisplay", "(Ljava/lang/String;IIILandroid/view/Surface;I)Landroid/hardware/display/VirtualDisplay;", "(Ljava/lang/String;IIILandroid/view/Surface;ILandroid/hardware/display/VirtualDisplay$Callback;Landroid/os/Handler;)Landroid/hardware/display/VirtualDisplay;", "(I)Landroid/view/Display;", "getDisplays", "()[Landroid/view/Display;", "(Ljava/lang/String;)[Landroid/view/Display;", "(Landroid/hardware/display/DisplayManager$DisplayListener;Landroid/os/Handler;)V", "unregisterDisplayListener", "(Landroid/hardware/display/DisplayManager$DisplayListener;)V", "android/hardware/display/DisplayManager$DisplayListener", "onDisplayAdded", "onDisplayChanged", "onDisplayRemoved", "android/hardware/GeomagneticField", "getDeclination", "getFieldStrength", "getHorizontalStrength", "getInclination", "(FFFJ)V", "android/hardware/Camera", "ACTION_NEW_PICTURE", "ACTION_NEW_VIDEO", "CAMERA_ERROR_EVICTED", "CAMERA_ERROR_SERVER_DIED", "CAMERA_ERROR_UNKNOWN", "addCallbackBuffer", "autoFocus", "(Landroid/hardware/Camera$AutoFocusCallback;)V", "cancelAutoFocus", "enableShutterSound", "getCameraInfo", "(ILandroid/hardware/Camera$CameraInfo;)V", "getNumberOfCameras", "()Landroid/hardware/Camera$Parameters;", "()Landroid/hardware/Camera;", "(I)Landroid/hardware/Camera;", "reconnect", "setAutoFocusMoveCallback", "(Landroid/hardware/Camera$AutoFocusMoveCallback;)V", "setDisplayOrientation", "setErrorCallback", "(Landroid/hardware/Camera$ErrorCallback;)V", "setFaceDetectionListener", "(Landroid/hardware/Camera$FaceDetectionListener;)V", "setOneShotPreviewCallback", "(Landroid/hardware/Camera$PreviewCallback;)V", "(Landroid/hardware/Camera$Parameters;)V", "setPreviewCallback", "setPreviewCallbackWithBuffer", "setPreviewDisplay", "setPreviewTexture", "setZoomChangeListener", "(Landroid/hardware/Camera$OnZoomChangeListener;)V", "startFaceDetection", "startPreview", "startSmoothZoom", "stopFaceDetection", "stopPreview", "stopSmoothZoom", "takePicture", "(Landroid/hardware/Camera$ShutterCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;)V", "(Landroid/hardware/Camera$ShutterCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;Landroid/hardware/Camera$PictureCallback;)V", "unlock", "android/hardware/Camera$Size", "(Landroid/hardware/Camera;II)V", "android/hardware/Camera$PreviewCallback", "onPreviewFrame", "([BLandroid/hardware/Camera;)V", "android/hardware/Camera$Parameters", "ANTIBANDING_50HZ", "ANTIBANDING_60HZ", "ANTIBANDING_AUTO", "ANTIBANDING_OFF", "EFFECT_AQUA", "EFFECT_BLACKBOARD", "EFFECT_MONO", "EFFECT_NEGATIVE", "EFFECT_NONE", "EFFECT_POSTERIZE", "EFFECT_SEPIA", "EFFECT_SOLARIZE", "EFFECT_WHITEBOARD", "FLASH_MODE_AUTO", "FLASH_MODE_OFF", "FLASH_MODE_ON", "FLASH_MODE_RED_EYE", "FLASH_MODE_TORCH", "FOCUS_DISTANCE_FAR_INDEX", "FOCUS_DISTANCE_NEAR_INDEX", "FOCUS_DISTANCE_OPTIMAL_INDEX", "FOCUS_MODE_AUTO", "FOCUS_MODE_CONTINUOUS_PICTURE", "FOCUS_MODE_CONTINUOUS_VIDEO", "FOCUS_MODE_EDOF", "FOCUS_MODE_FIXED", "FOCUS_MODE_INFINITY", "FOCUS_MODE_MACRO", "PREVIEW_FPS_MAX_INDEX", "PREVIEW_FPS_MIN_INDEX", "SCENE_MODE_ACTION", "SCENE_MODE_AUTO", "SCENE_MODE_BARCODE", "SCENE_MODE_BEACH", "SCENE_MODE_CANDLELIGHT", "SCENE_MODE_FIREWORKS", "SCENE_MODE_HDR", "SCENE_MODE_LANDSCAPE", "SCENE_MODE_NIGHT", "SCENE_MODE_NIGHT_PORTRAIT", "SCENE_MODE_PARTY", "SCENE_MODE_PORTRAIT", "SCENE_MODE_SNOW", "SCENE_MODE_SPORTS", "SCENE_MODE_STEADYPHOTO", "SCENE_MODE_SUNSET", "SCENE_MODE_THEATRE", "WHITE_BALANCE_AUTO", "WHITE_BALANCE_CLOUDY_DAYLIGHT", "WHITE_BALANCE_DAYLIGHT", "WHITE_BALANCE_FLUORESCENT", "WHITE_BALANCE_INCANDESCENT", "WHITE_BALANCE_SHADE", "WHITE_BALANCE_TWILIGHT", "WHITE_BALANCE_WARM_FLUORESCENT", "getAntibanding", "getAutoExposureLock", "getAutoWhiteBalanceLock", "getColorEffect", "getExposureCompensation", "getExposureCompensationStep", "getFlashMode", "getFocalLength", "getFocusAreas", "getFocusDistances", "getFocusMode", "getHorizontalViewAngle", "getJpegQuality", "getJpegThumbnailQuality", "getJpegThumbnailSize", "()Landroid/hardware/Camera$Size;", "getMaxExposureCompensation", "getMaxNumDetectedFaces", "getMaxNumFocusAreas", "getMaxNumMeteringAreas", "getMaxZoom", "getMeteringAreas", "getMinExposureCompensation", "getPictureFormat", "getPictureSize", "getPreferredPreviewSizeForVideo", "getPreviewFormat", "getPreviewFpsRange", "getPreviewFrameRate", "getPreviewSize", "getSceneMode", "getSupportedAntibanding", "getSupportedColorEffects", "getSupportedFlashModes", "getSupportedFocusModes", "getSupportedJpegThumbnailSizes", "getSupportedPictureFormats", "getSupportedPictureSizes", "getSupportedPreviewFormats", "getSupportedPreviewFpsRange", "getSupportedPreviewFrameRates", "getSupportedPreviewSizes", "getSupportedSceneModes", "getSupportedVideoSizes", "getSupportedWhiteBalance", "getVerticalViewAngle", "getVideoStabilization", "getWhiteBalance", "getZoom", "getZoomRatios", "isAutoExposureLockSupported", "isAutoWhiteBalanceLockSupported", "isSmoothZoomSupported", "isVideoSnapshotSupported", "isVideoStabilizationSupported", "isZoomSupported", "removeGpsData", "setAntibanding", "setAutoExposureLock", "setAutoWhiteBalanceLock", "setColorEffect", "setExposureCompensation", "setFlashMode", "setFocusAreas", "setFocusMode", "setGpsAltitude", "setGpsLatitude", "setGpsLongitude", "setGpsProcessingMethod", "setGpsTimestamp", "setJpegQuality", "setJpegThumbnailQuality", "setJpegThumbnailSize", "setMeteringAreas", "setPictureFormat", "setPictureSize", "setPreviewFormat", "setPreviewFpsRange", "setPreviewFrameRate", "setPreviewSize", "setRecordingHint", "setSceneMode", "setVideoStabilization", "setWhiteBalance", "setZoom", "unflatten", "android/hardware/Camera$CameraInfo", "CAMERA_FACING_BACK", "CAMERA_FACING_FRONT", "canDisableShutterSound", "android/hardware/Camera$AutoFocusCallback", "onAutoFocus", "(ZLandroid/hardware/Camera;)V", "android/graphics/drawable/ColorDrawable", "applyTheme", "(Landroid/content/res/Resources$Theme;)V", "canApplyTheme", "getChangingConfigurations", "getColor", "getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "getOpacity", "getOutline", "(Landroid/graphics/Outline;)V", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "isStateful", "mutate", "onStateChange", "([I)Z", "setColor", "setColorFilter", "(Landroid/graphics/ColorFilter;)V", "setTintList", "setTintMode", "android/graphics/SurfaceTexture", "attachToGLContext", "detachFromGLContext", "getTimestamp", "getTransformMatrix", "isReleased", "releaseTexImage", "setDefaultBufferSize", "setOnFrameAvailableListener", "(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;)V", "(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;Landroid/os/Handler;)V", "updateTexImage", "android/graphics/SurfaceTexture$OnFrameAvailableListener", "onFrameAvailable", "android/graphics/Rect", "centerX", "centerY", "exactCenterX", "exactCenterY", "flattenToString", "inset", "intersect", "intersects", "(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z", "offsetTo", "setEmpty", "setIntersect", "toShortString", "unflattenFromString", "(Ljava/lang/String;)Landroid/graphics/Rect;", "union", "android/graphics/ImageFormat", "DEPTH16", "DEPTH_POINT_CLOUD", "FLEX_RGBA_8888", "FLEX_RGB_888", "NV16", "NV21", "RAW10", "RAW12", "RAW_PRIVATE", "RAW_SENSOR", "RGB_565", "YUV_420_888", "YUV_422_888", "YUV_444_888", "YUY2", "YV12", "getBitsPerPixel", "android/graphics/Color", "BLACK", "CYAN", "DKGRAY", "LTGRAY", "MAGENTA", "WHITE", "HSVToColor", "(I[F)I", "([F)I", "RGBToHSV", "(III[F)V", "(J)F", "argb", "(FFFF)I", "(IIII)I", "colorSpace", "(J)Landroid/graphics/ColorSpace;", "colorToHSV", "(I[F)V", "(FFFFLandroid/graphics/ColorSpace$Connector;)J", "(FFFFLandroid/graphics/ColorSpace;Landroid/graphics/ColorSpace;)J", "(ILandroid/graphics/ColorSpace;)J", "(JLandroid/graphics/ColorSpace$Connector;)J", "(JLandroid/graphics/ColorSpace;)J", "(Landroid/graphics/ColorSpace;)Landroid/graphics/Color;", "getColorSpace", "()Landroid/graphics/ColorSpace;", "getComponent", "getComponentCount", "getComponents", "([F)[F", "getModel", "()Landroid/graphics/ColorSpace$Model;", "isInColorSpace", "(JLandroid/graphics/ColorSpace;)Z", "isSrgb", "isWideGamut", "luminance", "pack", "(FFF)J", "(FFFF)J", "(FFFFLandroid/graphics/ColorSpace;)J", "parseColor", "(FFF)I", "toArgb", "(FFF)Landroid/graphics/Color;", "(FFFF)Landroid/graphics/Color;", "(FFFFLandroid/graphics/ColorSpace;)Landroid/graphics/Color;", "(I)Landroid/graphics/Color;", "(J)Landroid/graphics/Color;", "([FLandroid/graphics/ColorSpace;)Landroid/graphics/Color;", "android/content/res/AssetManager", "ACCESS_BUFFER", "ACCESS_RANDOM", "ACCESS_STREAMING", "ACCESS_UNKNOWN", "getLocales", "(Ljava/lang/String;I)Ljava/io/InputStream;", "openFd", "(Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;", "openNonAssetFd", "(ILjava/lang/String;)Landroid/content/res/AssetFileDescriptor;", "openXmlResourceParser", "(ILjava/lang/String;)Landroid/content/res/XmlResourceParser;", "(Ljava/lang/String;)Landroid/content/res/XmlResourceParser;", "android/content/pm/PackageManager", "CERT_INPUT_RAW_X509", "CERT_INPUT_SHA256", "COMPONENT_ENABLED_STATE_DEFAULT", "COMPONENT_ENABLED_STATE_DISABLED", "COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED", "COMPONENT_ENABLED_STATE_DISABLED_USER", "COMPONENT_ENABLED_STATE_ENABLED", "EXTRA_VERIFICATION_ID", "EXTRA_VERIFICATION_RESULT", "FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS", "FEATURE_APP_WIDGETS", "FEATURE_AUDIO_LOW_LATENCY", "FEATURE_AUDIO_OUTPUT", "FEATURE_AUDIO_PRO", "FEATURE_AUTOFILL", "FEATURE_AUTOMOTIVE", "FEATURE_BACKUP", "FEATURE_BLUETOOTH", "FEATURE_BLUETOOTH_LE", "FEATURE_CAMERA", "FEATURE_CAMERA_ANY", "FEATURE_CAMERA_AR", "FEATURE_CAMERA_AUTOFOCUS", "FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING", "FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR", "FEATURE_CAMERA_CAPABILITY_RAW", "FEATURE_CAMERA_EXTERNAL", "FEATURE_CAMERA_FLASH", "FEATURE_CAMERA_FRONT", "FEATURE_CAMERA_LEVEL_FULL", "FEATURE_CANT_SAVE_STATE", "FEATURE_COMPANION_DEVICE_SETUP", "FEATURE_CONNECTION_SERVICE", "FEATURE_CONSUMER_IR", "FEATURE_DEVICE_ADMIN", "FEATURE_EMBEDDED", "FEATURE_ETHERNET", "FEATURE_FAKETOUCH", "FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT", "FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND", "FEATURE_FINGERPRINT", "FEATURE_FREEFORM_WINDOW_MANAGEMENT", "FEATURE_GAMEPAD", "FEATURE_HIFI_SENSORS", "FEATURE_HOME_SCREEN", "FEATURE_INPUT_METHODS", "FEATURE_LEANBACK", "FEATURE_LEANBACK_ONLY", "FEATURE_LIVE_TV", "FEATURE_LIVE_WALLPAPER", "FEATURE_LOCATION", "FEATURE_LOCATION_GPS", "FEATURE_LOCATION_NETWORK", "FEATURE_MANAGED_USERS", "FEATURE_MICROPHONE", "FEATURE_MIDI", "FEATURE_NFC", "FEATURE_NFC_HOST_CARD_EMULATION", "FEATURE_NFC_HOST_CARD_EMULATION_NFCF", "FEATURE_OPENGLES_EXTENSION_PACK", "FEATURE_PC", "FEATURE_PICTURE_IN_PICTURE", "FEATURE_PRINTING", "FEATURE_RAM_LOW", "FEATURE_RAM_NORMAL", "FEATURE_SCREEN_LANDSCAPE", "FEATURE_SCREEN_PORTRAIT", "FEATURE_SECURELY_REMOVES_USERS", "FEATURE_SENSOR_ACCELEROMETER", "FEATURE_SENSOR_AMBIENT_TEMPERATURE", "FEATURE_SENSOR_BAROMETER", "FEATURE_SENSOR_COMPASS", "FEATURE_SENSOR_GYROSCOPE", "FEATURE_SENSOR_HEART_RATE", "FEATURE_SENSOR_HEART_RATE_ECG", "FEATURE_SENSOR_LIGHT", "FEATURE_SENSOR_PROXIMITY", "FEATURE_SENSOR_RELATIVE_HUMIDITY", "FEATURE_SENSOR_STEP_COUNTER", "FEATURE_SENSOR_STEP_DETECTOR", "FEATURE_SIP", "FEATURE_SIP_VOIP", "FEATURE_STRONGBOX_KEYSTORE", "FEATURE_TELEPHONY", "FEATURE_TELEPHONY_CDMA", "FEATURE_TELEPHONY_EUICC", "FEATURE_TELEPHONY_GSM", "FEATURE_TELEPHONY_MBMS", "FEATURE_TELEVISION", "FEATURE_TOUCHSCREEN", "FEATURE_TOUCHSCREEN_MULTITOUCH", "FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT", "FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND", "FEATURE_USB_ACCESSORY", "FEATURE_USB_HOST", "FEATURE_VERIFIED_BOOT", "FEATURE_VR_HEADTRACKING", "FEATURE_VR_MODE", "FEATURE_VR_MODE_HIGH_PERFORMANCE", "FEATURE_VULKAN_HARDWARE_COMPUTE", "FEATURE_VULKAN_HARDWARE_LEVEL", "FEATURE_VULKAN_HARDWARE_VERSION", "FEATURE_WATCH", "FEATURE_WEBVIEW", "FEATURE_WIFI", "FEATURE_WIFI_AWARE", "FEATURE_WIFI_DIRECT", "FEATURE_WIFI_PASSPOINT", "FEATURE_WIFI_RTT", "GET_ACTIVITIES", "GET_CONFIGURATIONS", "GET_DISABLED_COMPONENTS", "GET_DISABLED_UNTIL_USED_COMPONENTS", "GET_GIDS", "GET_INSTRUMENTATION", "GET_INTENT_FILTERS", "GET_META_DATA", "GET_PERMISSIONS", "GET_PROVIDERS", "GET_RECEIVERS", "GET_RESOLVED_FILTER", "GET_SERVICES", "GET_SHARED_LIBRARY_FILES", "GET_SIGNATURES", "GET_SIGNING_CERTIFICATES", "GET_UNINSTALLED_PACKAGES", "GET_URI_PERMISSION_PATTERNS", "INSTALL_REASON_DEVICE_RESTORE", "INSTALL_REASON_DEVICE_SETUP", "INSTALL_REASON_POLICY", "INSTALL_REASON_UNKNOWN", "INSTALL_REASON_USER", "MATCH_ALL", "MATCH_DEFAULT_ONLY", "MATCH_DIRECT_BOOT_AWARE", "MATCH_DIRECT_BOOT_UNAWARE", "MATCH_DISABLED_COMPONENTS", "MATCH_DISABLED_UNTIL_USED_COMPONENTS", "MATCH_SYSTEM_ONLY", "MATCH_UNINSTALLED_PACKAGES", "MAXIMUM_VERIFICATION_TIMEOUT", "PERMISSION_DENIED", "SIGNATURE_FIRST_NOT_SIGNED", "SIGNATURE_MATCH", "SIGNATURE_NEITHER_SIGNED", "SIGNATURE_NO_MATCH", "SIGNATURE_SECOND_NOT_SIGNED", "SIGNATURE_UNKNOWN_PACKAGE", "VERIFICATION_ALLOW", "VERIFICATION_REJECT", "VERSION_CODE_HIGHEST", "addPackageToPreferred", "addPermission", "(Landroid/content/pm/PermissionInfo;)Z", "addPermissionAsync", "addPreferredActivity", "(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "canRequestPackageInstalls", "canonicalToCurrentPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "checkPermission", "(Ljava/lang/String;Ljava/lang/String;)I", "checkSignatures", "clearInstantAppCookie", "clearPackagePreferredActivities", "currentToCanonicalPackageNames", "extendVerificationTimeout", "(IIJ)V", "getActivityBanner", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "getActivityIcon", "getActivityInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "getActivityLogo", "getAllPermissionGroups", "getApplicationBanner", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "getApplicationEnabledSetting", "getApplicationIcon", "getApplicationInfo", "(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;", "getApplicationLabel", "(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "getApplicationLogo", "getChangedPackages", "(I)Landroid/content/pm/ChangedPackages;", "getComponentEnabledSetting", "(Landroid/content/ComponentName;)I", "getDefaultActivityIcon", "getDrawable", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "getInstalledApplications", "getInstalledPackages", "getInstantAppCookie", "getInstantAppCookieMaxBytes", "getInstrumentationInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;", "getLaunchIntentForPackage", "getLeanbackLaunchIntentForPackage", "getNameForUid", "getPackageArchiveInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;", "getPackageGids", "(Ljava/lang/String;I)[I", "getPackageInfo", "(Landroid/content/pm/VersionedPackage;I)Landroid/content/pm/PackageInfo;", "getPackageInstaller", "()Landroid/content/pm/PackageInstaller;", "getPackageUid", "getPackagesForUid", "(I)[Ljava/lang/String;", "getPackagesHoldingPermissions", "([Ljava/lang/String;I)Ljava/util/List;", "getPermissionGroupInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;", "getPermissionInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;", "getPreferredActivities", "(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I", "getPreferredPackages", "getProviderInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;", "getReceiverInfo", "getResourcesForActivity", "(Landroid/content/ComponentName;)Landroid/content/res/Resources;", "getResourcesForApplication", "(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;", "(Ljava/lang/String;)Landroid/content/res/Resources;", "getServiceInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;", "getSharedLibraries", "getSuspendedPackageAppExtras", "getSystemAvailableFeatures", "()[Landroid/content/pm/FeatureInfo;", "getSystemSharedLibraryNames", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "getUserBadgedDrawableForDensity", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;Landroid/graphics/Rect;I)Landroid/graphics/drawable/Drawable;", "getUserBadgedIcon", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;)Landroid/graphics/drawable/Drawable;", "getUserBadgedLabel", "(Ljava/lang/CharSequence;Landroid/os/UserHandle;)Ljava/lang/CharSequence;", "getXml", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;", "hasSigningCertificate", "(I[BI)Z", "(Ljava/lang/String;[BI)Z", "hasSystemFeature", "isInstantApp", "isPackageSuspended", "isPermissionRevokedByPolicy", "(Ljava/lang/String;Ljava/lang/String;)Z", "isSafeMode", "queryBroadcastReceivers", "(Landroid/content/Intent;I)Ljava/util/List;", "queryContentProviders", "(Ljava/lang/String;II)Ljava/util/List;", "queryInstrumentation", "(Ljava/lang/String;I)Ljava/util/List;", "queryIntentActivities", "queryIntentActivityOptions", "(Landroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I)Ljava/util/List;", "queryIntentContentProviders", "queryIntentServices", "queryPermissionsByGroup", "removePackageFromPreferred", "removePermission", "resolveContentProvider", "(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;", "resolveService", "setApplicationCategoryHint", "setApplicationEnabledSetting", "(Ljava/lang/String;II)V", "setComponentEnabledSetting", "(Landroid/content/ComponentName;II)V", "setInstallerPackageName", "updateInstantAppCookie", "verifyPendingInstall", "android/content/pm/PackageItemInfo", "banner", "icon", "labelRes", "metaData", "nonLocalizedLabel", "dumpBack", "dumpFront", "loadBanner", "(Landroid/content/pm/PackageManager;)Landroid/graphics/drawable/Drawable;", "loadIcon", "loadLabel", "(Landroid/content/pm/PackageManager;)Ljava/lang/CharSequence;", "loadLogo", "loadUnbadgedIcon", "loadXmlMetaData", "(Landroid/content/pm/PackageManager;Ljava/lang/String;)Landroid/content/res/XmlResourceParser;", "android/content/pm/PackageInfo", "INSTALL_LOCATION_AUTO", "INSTALL_LOCATION_INTERNAL_ONLY", "INSTALL_LOCATION_PREFER_EXTERNAL", "REQUESTED_PERMISSION_GRANTED", "[Landroid/content/pm/ActivityInfo;", "applicationInfo", "baseRevisionCode", "configPreferences", "[Landroid/content/pm/ConfigurationInfo;", "featureGroups", "[Landroid/content/pm/FeatureGroupInfo;", "firstInstallTime", "gids", "installLocation", "instrumentation", "[Landroid/content/pm/InstrumentationInfo;", "lastUpdateTime", "permissions", "[Landroid/content/pm/PermissionInfo;", "providers", "[Landroid/content/pm/ProviderInfo;", "receivers", "reqFeatures", "requestedPermissions", "requestedPermissionsFlags", "services", "[Landroid/content/pm/ServiceInfo;", "sharedUserId", "sharedUserLabel", "signatures", "[Landroid/content/pm/Signature;", "signingInfo", "Landroid/content/pm/SigningInfo;", "splitNames", "splitRevisionCodes", "versionCode", "versionName", "getLongVersionCode", "setLongVersionCode", "android/content/pm/ActivityInfo", "COLOR_MODE_DEFAULT", "COLOR_MODE_HDR", "COLOR_MODE_WIDE_COLOR_GAMUT", "CONFIG_COLOR_MODE", "CONFIG_DENSITY", "CONFIG_FONT_SCALE", "CONFIG_KEYBOARD", "CONFIG_KEYBOARD_HIDDEN", "CONFIG_LAYOUT_DIRECTION", "CONFIG_LOCALE", "CONFIG_MCC", "CONFIG_MNC", "CONFIG_NAVIGATION", "CONFIG_ORIENTATION", "CONFIG_SCREEN_LAYOUT", "CONFIG_SCREEN_SIZE", "CONFIG_SMALLEST_SCREEN_SIZE", "CONFIG_TOUCHSCREEN", "CONFIG_UI_MODE", "DOCUMENT_LAUNCH_ALWAYS", "DOCUMENT_LAUNCH_INTO_EXISTING", "DOCUMENT_LAUNCH_NEVER", "DOCUMENT_LAUNCH_NONE", "FLAG_ALLOW_TASK_REPARENTING", "FLAG_ALWAYS_RETAIN_TASK_STATE", "FLAG_AUTO_REMOVE_FROM_RECENTS", "FLAG_CLEAR_TASK_ON_LAUNCH", "FLAG_ENABLE_VR_MODE", "FLAG_EXCLUDE_FROM_RECENTS", "FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS", "FLAG_FINISH_ON_TASK_LAUNCH", "FLAG_MULTIPROCESS", "FLAG_NO_HISTORY", "FLAG_RELINQUISH_TASK_IDENTITY", "FLAG_RESUME_WHILE_PAUSING", "FLAG_SINGLE_USER", "FLAG_STATE_NOT_NEEDED", "LAUNCH_MULTIPLE", "LAUNCH_SINGLE_INSTANCE", "LAUNCH_SINGLE_TASK", "LAUNCH_SINGLE_TOP", "PERSIST_ACROSS_REBOOTS", "PERSIST_NEVER", "PERSIST_ROOT_ONLY", "SCREEN_ORIENTATION_BEHIND", "SCREEN_ORIENTATION_FULL_SENSOR", "SCREEN_ORIENTATION_FULL_USER", "SCREEN_ORIENTATION_LANDSCAPE", "SCREEN_ORIENTATION_LOCKED", "SCREEN_ORIENTATION_NOSENSOR", "SCREEN_ORIENTATION_PORTRAIT", "SCREEN_ORIENTATION_REVERSE_LANDSCAPE", "SCREEN_ORIENTATION_REVERSE_PORTRAIT", "SCREEN_ORIENTATION_SENSOR", "SCREEN_ORIENTATION_SENSOR_LANDSCAPE", "SCREEN_ORIENTATION_SENSOR_PORTRAIT", "SCREEN_ORIENTATION_UNSPECIFIED", "SCREEN_ORIENTATION_USER", "SCREEN_ORIENTATION_USER_LANDSCAPE", "SCREEN_ORIENTATION_USER_PORTRAIT", "UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW", "colorMode", "configChanges", "documentLaunchMode", "launchMode", "maxRecents", "parentActivityName", "persistableMode", "targetActivity", "taskAffinity", "theme", "uiOptions", "windowLayout", "Landroid/content/pm/ActivityInfo$WindowLayout;", "getThemeResource", "android/content/SharedPreferences", "edit", "()Landroid/content/SharedPreferences$Editor;", "getAll", "getStringSet", "(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Set;", "(Landroid/content/SharedPreferences$OnSharedPreferenceChangeListener;)V", "unregisterOnSharedPreferenceChangeListener", "android/content/SharedPreferences$Editor", "commit", "(Ljava/lang/String;Z)Landroid/content/SharedPreferences$Editor;", "(Ljava/lang/String;F)Landroid/content/SharedPreferences$Editor;", "(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;", "(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor;", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;", "putStringSet", "(Ljava/lang/String;Ljava/util/Set;)Landroid/content/SharedPreferences$Editor;", "(Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;", "android/content/ServiceConnection", "onBindingDied", "onNullBinding", "onServiceConnected", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V", "onServiceDisconnected", "android/content/IntentFilter", "MATCH_ADJUSTMENT_MASK", "MATCH_ADJUSTMENT_NORMAL", "MATCH_CATEGORY_EMPTY", "MATCH_CATEGORY_HOST", "MATCH_CATEGORY_MASK", "MATCH_CATEGORY_PATH", "MATCH_CATEGORY_PORT", "MATCH_CATEGORY_SCHEME", "MATCH_CATEGORY_SCHEME_SPECIFIC_PART", "MATCH_CATEGORY_TYPE", "NO_MATCH_ACTION", "NO_MATCH_CATEGORY", "NO_MATCH_DATA", "NO_MATCH_TYPE", "SYSTEM_HIGH_PRIORITY", "SYSTEM_LOW_PRIORITY", "actionsIterator", "addAction", "addCategory", "addDataAuthority", "addDataPath", "addDataScheme", "addDataSchemeSpecificPart", "addDataType", "authoritiesIterator", "categoriesIterator", "countActions", "countCategories", "countDataAuthorities", "countDataPaths", "countDataSchemeSpecificParts", "countDataSchemes", "countDataTypes", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/IntentFilter;", "getDataAuthority", "(I)Landroid/content/IntentFilter$AuthorityEntry;", "getDataPath", "(I)Landroid/os/PatternMatcher;", "getDataScheme", "getDataSchemeSpecificPart", "getDataType", "hasAction", "hasCategory", "hasDataAuthority", "(Landroid/net/Uri;)Z", "hasDataPath", "hasDataScheme", "hasDataSchemeSpecificPart", "hasDataType", "(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;Ljava/util/Set;Ljava/lang/String;)I", "matchAction", "matchCategories", "(Ljava/util/Set;)Ljava/lang/String;", "matchData", "(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)I", "matchDataAuthority", "pathsIterator", "readFromXml", "(Lorg/xmlpull/v1/XmlPullParser;)V", "schemeSpecificPartsIterator", "schemesIterator", "typesIterator", "writeToXml", "(Lorg/xmlpull/v1/XmlSerializer;)V", "ACTION_AIRPLANE_MODE_CHANGED", "ACTION_ALL_APPS", "ACTION_ANSWER", "ACTION_APPLICATION_PREFERENCES", "ACTION_APPLICATION_RESTRICTIONS_CHANGED", "ACTION_APP_ERROR", "ACTION_ASSIST", "ACTION_ATTACH_DATA", "ACTION_BATTERY_CHANGED", "ACTION_BATTERY_LOW", "ACTION_BATTERY_OKAY", "ACTION_BOOT_COMPLETED", "ACTION_BUG_REPORT", "ACTION_CALL", "ACTION_CALL_BUTTON", "ACTION_CAMERA_BUTTON", "ACTION_CARRIER_SETUP", "ACTION_CHOOSER", "ACTION_CLOSE_SYSTEM_DIALOGS", "ACTION_CONFIGURATION_CHANGED", "ACTION_CREATE_DOCUMENT", "ACTION_CREATE_SHORTCUT", "ACTION_DATE_CHANGED", "ACTION_DEFAULT", "ACTION_DELETE", "ACTION_DEVICE_STORAGE_LOW", "ACTION_DEVICE_STORAGE_OK", "ACTION_DIAL", "ACTION_DOCK_EVENT", "ACTION_DREAMING_STARTED", "ACTION_DREAMING_STOPPED", "ACTION_EDIT", "ACTION_EXTERNAL_APPLICATIONS_AVAILABLE", "ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE", "ACTION_FACTORY_TEST", "ACTION_GET_CONTENT", "ACTION_GET_RESTRICTION_ENTRIES", "ACTION_GTALK_SERVICE_CONNECTED", "ACTION_GTALK_SERVICE_DISCONNECTED", "ACTION_INPUT_METHOD_CHANGED", "ACTION_INSERT", "ACTION_INSERT_OR_EDIT", "ACTION_INSTALL_FAILURE", "ACTION_INSTALL_PACKAGE", "ACTION_LOCALE_CHANGED", "ACTION_LOCKED_BOOT_COMPLETED", "ACTION_MAIN", "ACTION_MANAGED_PROFILE_ADDED", "ACTION_MANAGED_PROFILE_AVAILABLE", "ACTION_MANAGED_PROFILE_REMOVED", "ACTION_MANAGED_PROFILE_UNAVAILABLE", "ACTION_MANAGED_PROFILE_UNLOCKED", "ACTION_MANAGE_NETWORK_USAGE", "ACTION_MANAGE_PACKAGE_STORAGE", "ACTION_MEDIA_BAD_REMOVAL", "ACTION_MEDIA_BUTTON", "ACTION_MEDIA_CHECKING", "ACTION_MEDIA_EJECT", "ACTION_MEDIA_MOUNTED", "ACTION_MEDIA_NOFS", "ACTION_MEDIA_REMOVED", "ACTION_MEDIA_SCANNER_FINISHED", "ACTION_MEDIA_SCANNER_SCAN_FILE", "ACTION_MEDIA_SCANNER_STARTED", "ACTION_MEDIA_SHARED", "ACTION_MEDIA_UNMOUNTABLE", "ACTION_MEDIA_UNMOUNTED", "ACTION_MY_PACKAGE_REPLACED", "ACTION_MY_PACKAGE_SUSPENDED", "ACTION_MY_PACKAGE_UNSUSPENDED", "ACTION_NEW_OUTGOING_CALL", "ACTION_OPEN_DOCUMENT", "ACTION_OPEN_DOCUMENT_TREE", "ACTION_PACKAGES_SUSPENDED", "ACTION_PACKAGES_UNSUSPENDED", "ACTION_PACKAGE_ADDED", "ACTION_PACKAGE_CHANGED", "ACTION_PACKAGE_DATA_CLEARED", "ACTION_PACKAGE_FIRST_LAUNCH", "ACTION_PACKAGE_FULLY_REMOVED", "ACTION_PACKAGE_INSTALL", "ACTION_PACKAGE_NEEDS_VERIFICATION", "ACTION_PACKAGE_REMOVED", "ACTION_PACKAGE_REPLACED", "ACTION_PACKAGE_RESTARTED", "ACTION_PACKAGE_VERIFIED", "ACTION_PASTE", "ACTION_PICK", "ACTION_PICK_ACTIVITY", "ACTION_POWER_CONNECTED", "ACTION_POWER_DISCONNECTED", "ACTION_POWER_USAGE_SUMMARY", "ACTION_PROCESS_TEXT", "ACTION_PROVIDER_CHANGED", "ACTION_QUICK_CLOCK", "ACTION_QUICK_VIEW", "ACTION_REBOOT", "ACTION_RUN", "ACTION_SCREEN_OFF", "ACTION_SCREEN_ON", "ACTION_SEARCH", "ACTION_SEARCH_LONG_PRESS", "ACTION_SEND", "ACTION_SENDTO", "ACTION_SEND_MULTIPLE", "ACTION_SET_WALLPAPER", "ACTION_SHOW_APP_INFO", "ACTION_SHUTDOWN", "ACTION_SYNC", "ACTION_SYSTEM_TUTORIAL", "ACTION_TIMEZONE_CHANGED", "ACTION_TIME_CHANGED", "ACTION_TIME_TICK", "ACTION_UID_REMOVED", "ACTION_UMS_CONNECTED", "ACTION_UMS_DISCONNECTED", "ACTION_UNINSTALL_PACKAGE", "ACTION_USER_BACKGROUND", "ACTION_USER_FOREGROUND", "ACTION_USER_INITIALIZE", "ACTION_USER_PRESENT", "ACTION_USER_UNLOCKED", "ACTION_VIEW", "ACTION_VOICE_COMMAND", "ACTION_WALLPAPER_CHANGED", "ACTION_WEB_SEARCH", "CATEGORY_ALTERNATIVE", "CATEGORY_APP_BROWSER", "CATEGORY_APP_CALCULATOR", "CATEGORY_APP_CALENDAR", "CATEGORY_APP_CONTACTS", "CATEGORY_APP_EMAIL", "CATEGORY_APP_GALLERY", "CATEGORY_APP_MAPS", "CATEGORY_APP_MARKET", "CATEGORY_APP_MESSAGING", "CATEGORY_APP_MUSIC", "CATEGORY_BROWSABLE", "CATEGORY_CAR_DOCK", "CATEGORY_CAR_MODE", "CATEGORY_DEFAULT", "CATEGORY_DESK_DOCK", "CATEGORY_DEVELOPMENT_PREFERENCE", "CATEGORY_EMBED", "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST", "CATEGORY_HE_DESK_DOCK", "CATEGORY_HOME", "CATEGORY_INFO", "CATEGORY_LAUNCHER", "CATEGORY_LEANBACK_LAUNCHER", "CATEGORY_LE_DESK_DOCK", "CATEGORY_MONKEY", "CATEGORY_OPENABLE", "CATEGORY_PREFERENCE", "CATEGORY_SAMPLE_CODE", "CATEGORY_SELECTED_ALTERNATIVE", "CATEGORY_TAB", "CATEGORY_TEST", "CATEGORY_TYPED_OPENABLE", "CATEGORY_UNIT_TEST", "CATEGORY_VOICE", "CATEGORY_VR_HOME", "EXTRA_ALARM_COUNT", "EXTRA_ALLOW_MULTIPLE", "EXTRA_ALLOW_REPLACE", "EXTRA_ALTERNATE_INTENTS", "EXTRA_ASSIST_CONTEXT", "EXTRA_ASSIST_INPUT_DEVICE_ID", "EXTRA_ASSIST_INPUT_HINT_KEYBOARD", "EXTRA_ASSIST_PACKAGE", "EXTRA_ASSIST_UID", "EXTRA_BCC", "EXTRA_BUG_REPORT", "EXTRA_CC", "EXTRA_CHANGED_COMPONENT_NAME", "EXTRA_CHANGED_COMPONENT_NAME_LIST", "EXTRA_CHANGED_PACKAGE_LIST", "EXTRA_CHANGED_UID_LIST", "EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER", "EXTRA_CHOOSER_TARGETS", "EXTRA_CHOSEN_COMPONENT", "EXTRA_CHOSEN_COMPONENT_INTENT_SENDER", "EXTRA_COMPONENT_NAME", "EXTRA_CONTENT_ANNOTATIONS", "EXTRA_DATA_REMOVED", "EXTRA_DOCK_STATE", "EXTRA_DOCK_STATE_CAR", "EXTRA_DOCK_STATE_DESK", "EXTRA_DOCK_STATE_HE_DESK", "EXTRA_DOCK_STATE_LE_DESK", "EXTRA_DOCK_STATE_UNDOCKED", "EXTRA_DONT_KILL_APP", "EXTRA_EMAIL", "EXTRA_EXCLUDE_COMPONENTS", "EXTRA_FROM_STORAGE", "EXTRA_HTML_TEXT", "EXTRA_INDEX", "EXTRA_INITIAL_INTENTS", "EXTRA_INSTALLER_PACKAGE_NAME", "EXTRA_INTENT", "EXTRA_KEY_EVENT", "EXTRA_LOCAL_ONLY", "EXTRA_MIME_TYPES", "EXTRA_NOT_UNKNOWN_SOURCE", "EXTRA_ORIGINATING_URI", "EXTRA_PACKAGE_NAME", "EXTRA_PHONE_NUMBER", "EXTRA_PROCESS_TEXT", "EXTRA_PROCESS_TEXT_READONLY", "EXTRA_QUICK_VIEW_FEATURES", "EXTRA_QUIET_MODE", "EXTRA_REFERRER", "EXTRA_REFERRER_NAME", "EXTRA_REMOTE_INTENT_TOKEN", "EXTRA_REPLACEMENT_EXTRAS", "EXTRA_REPLACING", "EXTRA_RESTRICTIONS_BUNDLE", "EXTRA_RESTRICTIONS_INTENT", "EXTRA_RESTRICTIONS_LIST", "EXTRA_RESULT_RECEIVER", "EXTRA_RETURN_RESULT", "EXTRA_SHORTCUT_ICON", "EXTRA_SHORTCUT_ICON_RESOURCE", "EXTRA_SHORTCUT_INTENT", "EXTRA_SHORTCUT_NAME", "EXTRA_SHUTDOWN_USERSPACE_ONLY", "EXTRA_SPLIT_NAME", "EXTRA_STREAM", "EXTRA_SUBJECT", "EXTRA_SUSPENDED_PACKAGE_EXTRAS", "EXTRA_TEMPLATE", "EXTRA_TEXT", "EXTRA_TITLE", "EXTRA_UID", "EXTRA_USER", "FILL_IN_ACTION", "FILL_IN_CATEGORIES", "FILL_IN_CLIP_DATA", "FILL_IN_COMPONENT", "FILL_IN_DATA", "FILL_IN_PACKAGE", "FILL_IN_SELECTOR", "FILL_IN_SOURCE_BOUNDS", "FLAG_ACTIVITY_BROUGHT_TO_FRONT", "FLAG_ACTIVITY_CLEAR_TASK", "FLAG_ACTIVITY_CLEAR_TOP", "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET", "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS", "FLAG_ACTIVITY_FORWARD_RESULT", "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY", "FLAG_ACTIVITY_LAUNCH_ADJACENT", "FLAG_ACTIVITY_MATCH_EXTERNAL", "FLAG_ACTIVITY_MULTIPLE_TASK", "FLAG_ACTIVITY_NEW_DOCUMENT", "FLAG_ACTIVITY_NEW_TASK", "FLAG_ACTIVITY_NO_ANIMATION", "FLAG_ACTIVITY_NO_HISTORY", "FLAG_ACTIVITY_NO_USER_ACTION", "FLAG_ACTIVITY_PREVIOUS_IS_TOP", "FLAG_ACTIVITY_REORDER_TO_FRONT", "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED", "FLAG_ACTIVITY_RETAIN_IN_RECENTS", "FLAG_ACTIVITY_SINGLE_TOP", "FLAG_ACTIVITY_TASK_ON_HOME", "FLAG_DEBUG_LOG_RESOLUTION", "FLAG_EXCLUDE_STOPPED_PACKAGES", "FLAG_FROM_BACKGROUND", "FLAG_GRANT_PERSISTABLE_URI_PERMISSION", "FLAG_GRANT_PREFIX_URI_PERMISSION", "FLAG_GRANT_READ_URI_PERMISSION", "FLAG_GRANT_WRITE_URI_PERMISSION", "FLAG_INCLUDE_STOPPED_PACKAGES", "FLAG_RECEIVER_FOREGROUND", "FLAG_RECEIVER_NO_ABORT", "FLAG_RECEIVER_REGISTERED_ONLY", "FLAG_RECEIVER_REPLACE_PENDING", "FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS", "METADATA_DOCK_HOME", "URI_ALLOW_UNSAFE", "URI_ANDROID_APP_SCHEME", "URI_INTENT_SCHEME", "(I)Landroid/content/Intent;", "cloneFilter", "()Landroid/content/Intent;", "createChooser", "(Landroid/content/Intent;Ljava/lang/CharSequence;)Landroid/content/Intent;", "(Landroid/content/Intent;Ljava/lang/CharSequence;Landroid/content/IntentSender;)Landroid/content/Intent;", "fillIn", "(Landroid/content/Intent;I)I", "filterEquals", "(Landroid/content/Intent;)Z", "filterHashCode", "getBooleanArrayExtra", "getBooleanExtra", "getBundleExtra", "getByteArrayExtra", "getByteExtra", "(Ljava/lang/String;B)B", "getCategories", "getCharArrayExtra", "getCharExtra", "getCharSequenceArrayExtra", "getCharSequenceArrayListExtra", "getCharSequenceExtra", "getClipData", "()Landroid/content/ClipData;", "()Landroid/content/ComponentName;", "getDataString", "getDoubleArrayExtra", "getDoubleExtra", "getFloatArrayExtra", "getFloatExtra", "getIntArrayExtra", "getIntExtra", "getIntegerArrayListExtra", "getIntent", "getIntentOld", "getLongArrayExtra", "getLongExtra", "getParcelableArrayExtra", "getParcelableArrayListExtra", "getParcelableExtra", "getSelector", "getSerializableExtra", "getShortArrayExtra", "getShortExtra", "getSourceBounds", "getStringArrayExtra", "getStringArrayListExtra", "getStringExtra", "hasExtra", "makeMainActivity", "(Landroid/content/ComponentName;)Landroid/content/Intent;", "makeMainSelectorActivity", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;", "makeRestartActivityTask", "normalizeMimeType", "parseIntent", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/content/Intent;", "parseUri", "(Ljava/lang/String;I)Landroid/content/Intent;", "putCharSequenceArrayListExtra", "(Ljava/lang/String;Ljava/util/ArrayList;)Landroid/content/Intent;", "putExtra", "(Ljava/lang/String;B)Landroid/content/Intent;", "(Ljava/lang/String;C)Landroid/content/Intent;", "(Ljava/lang/String;D)Landroid/content/Intent;", "(Ljava/lang/String;F)Landroid/content/Intent;", "(Ljava/lang/String;J)Landroid/content/Intent;", "(Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent;", "(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;", "(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;", "(Ljava/lang/String;Ljava/lang/CharSequence;)Landroid/content/Intent;", "(Ljava/lang/String;S)Landroid/content/Intent;", "(Ljava/lang/String;Z)Landroid/content/Intent;", "(Ljava/lang/String;[B)Landroid/content/Intent;", "(Ljava/lang/String;[C)Landroid/content/Intent;", "(Ljava/lang/String;[D)Landroid/content/Intent;", "(Ljava/lang/String;[F)Landroid/content/Intent;", "(Ljava/lang/String;[I)Landroid/content/Intent;", "(Ljava/lang/String;[J)Landroid/content/Intent;", "(Ljava/lang/String;[Landroid/os/Parcelable;)Landroid/content/Intent;", "(Ljava/lang/String;[Ljava/lang/CharSequence;)Landroid/content/Intent;", "(Ljava/lang/String;[Ljava/lang/String;)Landroid/content/Intent;", "(Ljava/lang/String;[S)Landroid/content/Intent;", "(Ljava/lang/String;[Z)Landroid/content/Intent;", "(Landroid/content/Intent;)Landroid/content/Intent;", "(Landroid/os/Bundle;)Landroid/content/Intent;", "putIntegerArrayListExtra", "putParcelableArrayListExtra", "putStringArrayListExtra", "removeCategory", "removeExtra", "removeFlags", "replaceExtras", "(Landroid/content/pm/PackageManager;)Landroid/content/ComponentName;", "resolveActivityInfo", "(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;", "resolveType", "(Landroid/content/ContentResolver;)Ljava/lang/String;", "(Landroid/content/Context;)Ljava/lang/String;", "resolveTypeIfNeeded", "setClass", "(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;", "setClassName", "(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;", "setClipData", "(Landroid/content/ClipData;)V", "setComponent", "(Landroid/net/Uri;)Landroid/content/Intent;", "setDataAndNormalize", "setDataAndType", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;", "setDataAndTypeAndNormalize", "setExtrasClassLoader", "setSelector", "(Landroid/content/Intent;)V", "setSourceBounds", "setTypeAndNormalize", "toUri", "(Landroid/content/Context;Ljava/lang/Class;)V", "(Ljava/lang/String;Landroid/net/Uri;)V", "(Ljava/lang/String;Landroid/net/Uri;Landroid/content/Context;Ljava/lang/Class;)V", "android/content/DialogInterface", "BUTTON1", "BUTTON2", "BUTTON3", "BUTTON_NEGATIVE", "BUTTON_NEUTRAL", "BUTTON_POSITIVE", "dismiss", "android/content/DialogInterface$OnClickListener", "onClick", "(Landroid/content/DialogInterface;I)V", "android/content/DialogInterface$OnCancelListener", "onCancel", "(Landroid/content/DialogInterface;)V", "android/content/Context", "ACCOUNT_SERVICE", "ACTIVITY_SERVICE", "ALARM_SERVICE", "APPWIDGET_SERVICE", "APP_OPS_SERVICE", "AUDIO_SERVICE", "BATTERY_SERVICE", "BIND_ABOVE_CLIENT", "BIND_ADJUST_WITH_ACTIVITY", "BIND_ALLOW_OOM_MANAGEMENT", "BIND_AUTO_CREATE", "BIND_DEBUG_UNBIND", "BIND_EXTERNAL_SERVICE", "BIND_IMPORTANT", "BIND_NOT_FOREGROUND", "BIND_WAIVE_PRIORITY", "BLUETOOTH_SERVICE", "CAMERA_SERVICE", "CAPTIONING_SERVICE", "CARRIER_CONFIG_SERVICE", "CLIPBOARD_SERVICE", "COMPANION_DEVICE_SERVICE", "CONNECTIVITY_SERVICE", "CONSUMER_IR_SERVICE", "CONTEXT_IGNORE_SECURITY", "CONTEXT_INCLUDE_CODE", "CONTEXT_RESTRICTED", "CROSS_PROFILE_APPS_SERVICE", "DEVICE_POLICY_SERVICE", "DISPLAY_SERVICE", "DOWNLOAD_SERVICE", "DROPBOX_SERVICE", "EUICC_SERVICE", "FINGERPRINT_SERVICE", "HARDWARE_PROPERTIES_SERVICE", "INPUT_METHOD_SERVICE", "IPSEC_SERVICE", "JOB_SCHEDULER_SERVICE", "KEYGUARD_SERVICE", "LAUNCHER_APPS_SERVICE", "LAYOUT_INFLATER_SERVICE", "LOCATION_SERVICE", "MEDIA_PROJECTION_SERVICE", "MEDIA_ROUTER_SERVICE", "MEDIA_SESSION_SERVICE", "MIDI_SERVICE", "MODE_ENABLE_WRITE_AHEAD_LOGGING", "MODE_MULTI_PROCESS", "MODE_NO_LOCALIZED_COLLATORS", "MODE_PRIVATE", "NETWORK_STATS_SERVICE", "NOTIFICATION_SERVICE", "NSD_SERVICE", "POWER_SERVICE", "RESTRICTIONS_SERVICE", "SEARCH_SERVICE", "SENSOR_SERVICE", "SHORTCUT_SERVICE", "STORAGE_SERVICE", "STORAGE_STATS_SERVICE", "SYSTEM_HEALTH_SERVICE", "TELECOM_SERVICE", "TELEPHONY_SERVICE", "TELEPHONY_SUBSCRIPTION_SERVICE", "TEXT_CLASSIFICATION_SERVICE", "TEXT_SERVICES_MANAGER_SERVICE", "TV_INPUT_SERVICE", "UI_MODE_SERVICE", "USAGE_STATS_SERVICE", "USB_SERVICE", "USER_SERVICE", "VIBRATOR_SERVICE", "WALLPAPER_SERVICE", "WIFI_AWARE_SERVICE", "WIFI_P2P_SERVICE", "WIFI_RTT_RANGING_SERVICE", "WIFI_SERVICE", "WINDOW_SERVICE", "(Landroid/content/Intent;Landroid/content/ServiceConnection;I)Z", "checkCallingOrSelfPermission", "checkCallingOrSelfUriPermission", "(Landroid/net/Uri;I)I", "checkCallingPermission", "checkCallingUriPermission", "(Ljava/lang/String;II)I", "checkSelfPermission", "checkUriPermission", "(Landroid/net/Uri;III)I", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;III)I", "clearWallpaper", "createConfigurationContext", "(Landroid/content/res/Configuration;)Landroid/content/Context;", "createContextForSplit", "(Ljava/lang/String;)Landroid/content/Context;", "createDeviceProtectedStorageContext", "createDisplayContext", "(Landroid/view/Display;)Landroid/content/Context;", "createPackageContext", "(Ljava/lang/String;I)Landroid/content/Context;", "databaseList", "deleteDatabase", "deleteFile", "deleteSharedPreferences", "enforceCallingOrSelfPermission", "enforceCallingOrSelfUriPermission", "(Landroid/net/Uri;ILjava/lang/String;)V", "enforceCallingPermission", "enforceCallingUriPermission", "enforcePermission", "(Ljava/lang/String;IILjava/lang/String;)V", "enforceUriPermission", "(Landroid/net/Uri;IIILjava/lang/String;)V", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;IIILjava/lang/String;)V", "fileList", "getApplicationContext", "()Landroid/content/pm/ApplicationInfo;", "getAssets", "()Landroid/content/res/AssetManager;", "getCacheDir", "getCodeCacheDir", "getColorStateList", "(I)Landroid/content/res/ColorStateList;", "getContentResolver", "()Landroid/content/ContentResolver;", "getDataDir", "getDatabasePath", "getDir", "(Ljava/lang/String;I)Ljava/io/File;", "(I)Landroid/graphics/drawable/Drawable;", "getExternalCacheDir", "getExternalCacheDirs", "getExternalFilesDir", "getExternalFilesDirs", "(Ljava/lang/String;)[Ljava/io/File;", "getExternalMediaDirs", "getFileStreamPath", "getFilesDir", "getMainExecutor", "()Ljava/util/concurrent/Executor;", "getNoBackupFilesDir", "getObbDir", "getObbDirs", "getPackageCodePath", "getPackageResourcePath", "getSharedPreferences", "(Ljava/lang/String;I)Landroid/content/SharedPreferences;", "(I[Ljava/lang/Object;)Ljava/lang/String;", "getSystemService", "(Ljava/lang/Class;)Ljava/lang/Object;", "getSystemServiceName", "(Ljava/lang/Class;)Ljava/lang/String;", "(I)Ljava/lang/CharSequence;", "()Landroid/content/res/Resources$Theme;", "getWallpaper", "getWallpaperDesiredMinimumHeight", "getWallpaperDesiredMinimumWidth", "grantUriPermission", "(Ljava/lang/String;Landroid/net/Uri;I)V", "isDeviceProtectedStorage", "isRestricted", "moveDatabaseFrom", "(Landroid/content/Context;Ljava/lang/String;)Z", "moveSharedPreferencesFrom", "obtainStyledAttributes", "(I[I)Landroid/content/res/TypedArray;", "(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;", "(Landroid/util/AttributeSet;[III)Landroid/content/res/TypedArray;", "([I)Landroid/content/res/TypedArray;", "openFileInput", "(Ljava/lang/String;)Ljava/io/FileInputStream;", "openFileOutput", "(Ljava/lang/String;I)Ljava/io/FileOutputStream;", "openOrCreateDatabase", "(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;)Landroid/database/sqlite/SQLiteDatabase;", "(Ljava/lang/String;ILandroid/database/sqlite/SQLiteDatabase$CursorFactory;Landroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;", "peekWallpaper", "(Landroid/content/ComponentCallbacks;)V", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;I)Landroid/content/Intent;", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;", "removeStickyBroadcast", "removeStickyBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;)V", "revokeUriPermission", "(Landroid/net/Uri;I)V", "sendBroadcast", "(Landroid/content/Intent;Ljava/lang/String;)V", "sendBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;)V", "sendOrderedBroadcast", "(Landroid/content/Intent;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "sendOrderedBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Ljava/lang/String;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "sendStickyBroadcast", "sendStickyBroadcastAsUser", "sendStickyOrderedBroadcast", "(Landroid/content/Intent;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "sendStickyOrderedBroadcastAsUser", "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/content/BroadcastReceiver;Landroid/os/Handler;ILjava/lang/String;Landroid/os/Bundle;)V", "setTheme", "setWallpaper", "(Landroid/graphics/Bitmap;)V", "startActivities", "([Landroid/content/Intent;)V", "([Landroid/content/Intent;Landroid/os/Bundle;)V", "startActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)V", "startForegroundService", "(Landroid/content/Intent;)Landroid/content/ComponentName;", "startInstrumentation", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)Z", "startIntentSender", "(Landroid/content/IntentSender;Landroid/content/Intent;III)V", "(Landroid/content/IntentSender;Landroid/content/Intent;IIILandroid/os/Bundle;)V", "startService", "stopService", "unbindService", "(Landroid/content/ServiceConnection;)V", "unregisterComponentCallbacks", "unregisterReceiver", "(Landroid/content/BroadcastReceiver;)V", "android/app/Presentation", "onStop", "show", "(Landroid/content/Context;Landroid/view/Display;)V", "(Landroid/content/Context;Landroid/view/Display;I)V", "android/app/Dialog", "closeOptionsMenu", "getActionBar", "()Landroid/app/ActionBar;", "getOwnerActivity", "()Landroid/app/Activity;", "getSearchEvent", "()Landroid/view/SearchEvent;", "getWindow", "hide", "invalidateOptionsMenu", "isShowing", "onActionModeFinished", "(Landroid/view/ActionMode;)V", "onActionModeStarted", "onBackPressed", "onContentChanged", "onContextItemSelected", "(Landroid/view/MenuItem;)Z", "onContextMenuClosed", "(Landroid/view/Menu;)V", "onCreate", "(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V", "onCreateOptionsMenu", "(Landroid/view/Menu;)Z", "onCreatePanelMenu", "(ILandroid/view/Menu;)Z", "onCreatePanelView", "onMenuItemSelected", "(ILandroid/view/MenuItem;)Z", "onMenuOpened", "onOptionsItemSelected", "onOptionsMenuClosed", "onPanelClosed", "(ILandroid/view/Menu;)V", "onPrepareOptionsMenu", "onPreparePanel", "(ILandroid/view/View;Landroid/view/Menu;)Z", "onSearchRequested", "(Landroid/view/SearchEvent;)Z", "onWindowAttributesChanged", "onWindowStartingActionMode", "openContextMenu", "openOptionsMenu", "requestWindowFeature", "setCancelMessage", "setCancelable", "setCanceledOnTouchOutside", "setDismissMessage", "setOnCancelListener", "(Landroid/content/DialogInterface$OnCancelListener;)V", "setOnDismissListener", "(Landroid/content/DialogInterface$OnDismissListener;)V", "(Landroid/content/DialogInterface$OnKeyListener;)V", "setOnShowListener", "(Landroid/content/DialogInterface$OnShowListener;)V", "setOwnerActivity", "unregisterForContextMenu", "(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V", "android/app/AlertDialog$Builder", "()Landroid/app/AlertDialog;", "setAdapter", "(Landroid/widget/ListAdapter;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "(Z)Landroid/app/AlertDialog$Builder;", "setCursor", "(Landroid/database/Cursor;Landroid/content/DialogInterface$OnClickListener;Ljava/lang/String;)Landroid/app/AlertDialog$Builder;", "setCustomTitle", "(Landroid/view/View;)Landroid/app/AlertDialog$Builder;", "(I)Landroid/app/AlertDialog$Builder;", "(Landroid/graphics/drawable/Drawable;)Landroid/app/AlertDialog$Builder;", "setIconAttribute", "setInverseBackgroundForced", "setItems", "(ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "([Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "setMessage", "(Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;", "setMultiChoiceItems", "(I[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;", "(Landroid/database/Cursor;Ljava/lang/String;Ljava/lang/String;Landroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;", "([Ljava/lang/CharSequence;[ZLandroid/content/DialogInterface$OnMultiChoiceClickListener;)Landroid/app/AlertDialog$Builder;", "setNegativeButton", "(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "setNeutralButton", "(Landroid/content/DialogInterface$OnCancelListener;)Landroid/app/AlertDialog$Builder;", "(Landroid/content/DialogInterface$OnDismissListener;)Landroid/app/AlertDialog$Builder;", "setOnItemSelectedListener", "(Landroid/widget/AdapterView$OnItemSelectedListener;)Landroid/app/AlertDialog$Builder;", "(Landroid/content/DialogInterface$OnKeyListener;)Landroid/app/AlertDialog$Builder;", "setPositiveButton", "setSingleChoiceItems", "(IILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "(Landroid/database/Cursor;ILjava/lang/String;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "(Landroid/widget/ListAdapter;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "([Ljava/lang/CharSequence;ILandroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;", "setView", "android/app/Activity", "DEFAULT_KEYS_DIALER", "DEFAULT_KEYS_DISABLE", "DEFAULT_KEYS_SEARCH_GLOBAL", "DEFAULT_KEYS_SEARCH_LOCAL", "DEFAULT_KEYS_SHORTCUT", "RESULT_CANCELED", "RESULT_FIRST_USER", "RESULT_OK", "attachBaseContext", "closeContextMenu", "createPendingResult", "(ILandroid/content/Intent;I)Landroid/app/PendingIntent;", "dismissDialog", "dismissKeyboardShortcutsHelper", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "enterPictureInPictureMode", "(Landroid/app/PictureInPictureParams;)Z", "finish", "finishActivity", "finishActivityFromChild", "(Landroid/app/Activity;I)V", "finishAffinity", "finishAfterTransition", "finishAndRemoveTask", "finishFromChild", "getApplication", "()Landroid/app/Application;", "getCallingActivity", "getCallingPackage", "getComponentName", "getContentTransitionManager", "getFragmentManager", "()Landroid/app/FragmentManager;", "getLastNonConfigurationInstance", "getLoaderManager", "()Landroid/app/LoaderManager;", "getLocalClassName", "getMaxNumPictureInPictureActions", "getMenuInflater", "()Landroid/view/MenuInflater;", "getParentActivityIntent", "getPreferences", "(I)Landroid/content/SharedPreferences;", "getReferrer", "getRequestedOrientation", "getTaskId", "getTitleColor", "getVoiceInteractor", "()Landroid/app/VoiceInteractor;", "isActivityTransitionRunning", "isChangingConfigurations", "isChild", "isDestroyed", "isFinishing", "isImmersive", "isInMultiWindowMode", "isInPictureInPictureMode", "isLocalVoiceInteractionSupported", "isTaskRoot", "isVoiceInteraction", "isVoiceInteractionRoot", "managedQuery", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "moveTaskToBack", "navigateUpTo", "navigateUpToFromChild", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "onActivityReenter", "(ILandroid/content/Intent;)V", "onActivityResult", "(IILandroid/content/Intent;)V", "onApplyThemeResource", "(Landroid/content/res/Resources$Theme;IZ)V", "onAttachFragment", "(Landroid/app/Fragment;)V", "onChildTitleChanged", "(Landroid/app/Activity;Ljava/lang/CharSequence;)V", "(Landroid/os/Bundle;Landroid/os/PersistableBundle;)V", "onCreateDescription", "onCreateDialog", "(I)Landroid/app/Dialog;", "(ILandroid/os/Bundle;)Landroid/app/Dialog;", "onCreateNavigateUpTaskStack", "(Landroid/app/TaskStackBuilder;)V", "onCreateThumbnail", "(Landroid/graphics/Bitmap;Landroid/graphics/Canvas;)Z", "onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "(Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "onDestroy", "onEnterAnimationComplete", "onLocalVoiceInteractionStarted", "onLocalVoiceInteractionStopped", "onLowMemory", "onMultiWindowModeChanged", "(ZLandroid/content/res/Configuration;)V", "onNavigateUp", "onNavigateUpFromChild", "(Landroid/app/Activity;)Z", "onNewIntent", "onPictureInPictureModeChanged", "onPostCreate", "onPostResume", "onPrepareDialog", "(ILandroid/app/Dialog;)V", "(ILandroid/app/Dialog;Landroid/os/Bundle;)V", "onPrepareNavigateUpTaskStack", "onProvideAssistContent", "(Landroid/app/assist/AssistContent;)V", "onProvideAssistData", "onProvideKeyboardShortcuts", "(Ljava/util/List;Landroid/view/Menu;I)V", "onProvideReferrer", "onRequestPermissionsResult", "(I[Ljava/lang/String;[I)V", "onRestart", "onResume", "onRetainNonConfigurationInstance", "onStateNotSaved", "onTitleChanged", "onTrimMemory", "onUserInteraction", "onUserLeaveHint", "onVisibleBehindCanceled", "overridePendingTransition", "postponeEnterTransition", "recreate", "releaseInstance", "removeDialog", "reportFullyDrawn", "requestDragAndDropPermissions", "(Landroid/view/DragEvent;)Landroid/view/DragAndDropPermissions;", "requestPermissions", "([Ljava/lang/String;I)V", "requestShowKeyboardShortcuts", "requestVisibleBehind", "runOnUiThread", "setActionBar", "(Landroid/widget/Toolbar;)V", "setContentTransitionManager", "setDefaultKeyMode", "setEnterSharedElementCallback", "(Landroid/app/SharedElementCallback;)V", "setExitSharedElementCallback", "setFinishOnTouchOutside", "setImmersive", "setIntent", "setPictureInPictureParams", "(Landroid/app/PictureInPictureParams;)V", "setProgressBarIndeterminate", "setProgressBarIndeterminateVisibility", "setProgressBarVisibility", "setRequestedOrientation", "setResult", "setShowWhenLocked", "setTaskDescription", "(Landroid/app/ActivityManager$TaskDescription;)V", "setTurnScreenOn", "setVisible", "setVrModeEnabled", "(ZLandroid/content/ComponentName;)V", "shouldShowRequestPermissionRationale", "shouldUpRecreateTask", "showAssist", "(Landroid/os/Bundle;)Z", "showDialog", "showLockTaskEscapeMessage", "startActivityForResult", "(Landroid/content/Intent;I)V", "(Landroid/content/Intent;ILandroid/os/Bundle;)V", "startActivityFromChild", "(Landroid/app/Activity;Landroid/content/Intent;I)V", "(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V", "startActivityFromFragment", "(Landroid/app/Fragment;Landroid/content/Intent;I)V", "(Landroid/app/Fragment;Landroid/content/Intent;ILandroid/os/Bundle;)V", "startActivityIfNeeded", "(Landroid/content/Intent;I)Z", "(Landroid/content/Intent;ILandroid/os/Bundle;)Z", "startIntentSenderForResult", "(Landroid/content/IntentSender;ILandroid/content/Intent;III)V", "(Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "startIntentSenderFromChild", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;III)V", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "startLocalVoiceInteraction", "startLockTask", "startManagingCursor", "(Landroid/database/Cursor;)V", "startNextMatchingActivity", "(Landroid/content/Intent;Landroid/os/Bundle;)Z", "startPostponedEnterTransition", "startSearch", "(Ljava/lang/String;ZLandroid/os/Bundle;Z)V", "stopLocalVoiceInteraction", "stopLockTask", "stopManagingCursor", "triggerSearch", "android/R$attr", "absListViewStyle", "accessibilityEventTypes", "accessibilityFeedbackType", "accessibilityFlags", "accessibilityHeading", "accessibilityLiveRegion", "accessibilityPaneTitle", "accessibilityTraversalAfter", "accessibilityTraversalBefore", "accountPreferences", "accountType", "actionBarDivider", "actionBarItemBackground", "actionBarPopupTheme", "actionBarSize", "actionBarSplitStyle", "actionBarStyle", "actionBarTabBarStyle", "actionBarTabStyle", "actionBarTabTextStyle", "actionBarTheme", "actionBarWidgetTheme", "actionButtonStyle", "actionDropDownStyle", "actionLayout", "actionMenuTextAppearance", "actionMenuTextColor", "actionModeBackground", "actionModeCloseButtonStyle", "actionModeCloseDrawable", "actionModeCopyDrawable", "actionModeCutDrawable", "actionModeFindDrawable", "actionModePasteDrawable", "actionModeSelectAllDrawable", "actionModeShareDrawable", "actionModeSplitBackground", "actionModeStyle", "actionModeWebSearchDrawable", "actionOverflowButtonStyle", "actionOverflowMenuStyle", "actionProviderClass", "actionViewClass", "activatedBackgroundIndicator", "activityCloseEnterAnimation", "activityCloseExitAnimation", "activityOpenEnterAnimation", "activityOpenExitAnimation", "addPrintersActivity", "addStatesFromChildren", "adjustViewBounds", "advancedPrintOptionsActivity", "alertDialogIcon", "alertDialogStyle", "alertDialogTheme", "alignmentMode", "allContactsName", "allowBackup", "allowClearUserData", "allowEmbedded", "allowParallelSyncs", "allowSingleTap", "allowTaskReparenting", "allowUndo", "alphabeticModifiers", "alphabeticShortcut", "alwaysDrawnWithCache", "alwaysRetainTaskState", "amPmBackgroundColor", "amPmTextColor", "ambientShadowAlpha", "animateFirstView", "animateLayoutChanges", "animateOnClick", "animation", "animationCache", "animationDuration", "animationOrder", "animationResolution", "antialias", "anyDensity", "apduServiceBanner", "apiKey", "appCategory", "appComponentFactory", "author", "authorities", "autoAdvanceViewId", "autoCompleteTextViewStyle", "autoLink", "autoMirrored", "autoRemoveFromRecents", "autoSizeMaxTextSize", "autoSizeMinTextSize", "autoSizePresetSizes", "autoSizeStepGranularity", "autoSizeTextType", "autoStart", "autoText", "autoUrlDetect", "autoVerify", "autofillHints", "autofilledHighlight", "backgroundDimAmount", "backgroundDimEnabled", "backgroundSplit", "backgroundStacked", "backgroundTint", "backgroundTintMode", "backupAgent", "backupInForeground", "baseline", "baselineAlignBottom", "baselineAligned", "baselineAlignedChildIndex", "borderlessButtonStyle", "bottomBright", "bottomDark", "bottomLeftRadius", "bottomMedium", "bottomOffset", "bottomRightRadius", "breadCrumbShortTitle", "breadCrumbTitle", "breakStrategy", "bufferType", "buttonBarButtonStyle", "buttonBarNegativeButtonStyle", "buttonBarNeutralButtonStyle", "buttonBarPositiveButtonStyle", "buttonBarStyle", "buttonCornerRadius", "buttonGravity", "buttonStyle", "buttonStyleInset", "buttonStyleSmall", "buttonStyleToggle", "buttonTint", "buttonTintMode", "cacheColorHint", "calendarTextColor", "calendarViewShown", "calendarViewStyle", "canControlMagnification", "canPerformGestures", "canRecord", "canRequestEnhancedWebAccessibility", "canRequestFilterKeyEvents", "canRequestFingerprintGestures", "canRequestTouchExplorationMode", "canRetrieveWindowContent", "candidatesTextStyleSpans", "cantSaveState", "capitalize", "category", "centerBright", "centerColor", "centerDark", "centerMedium", "certDigest", "checkBoxPreferenceStyle", "checkMark", "checkMarkTint", "checkMarkTintMode", "checkableBehavior", "checkboxStyle", "checkedButton", "checkedTextViewStyle", "childDivider", "childIndicator", "childIndicatorEnd", "childIndicatorLeft", "childIndicatorRight", "childIndicatorStart", "choiceMode", "classLoader", "clearTaskOnLaunch", "clickable", "clipChildren", "clipOrientation", "clipToPadding", "closeIcon", "codes", "collapseColumns", "collapseContentDescription", "collapseIcon", "colorAccent", "colorActivatedHighlight", "colorBackground", "colorBackgroundCacheHint", "colorBackgroundFloating", "colorButtonNormal", "colorControlActivated", "colorControlHighlight", "colorControlNormal", "colorEdgeEffect", "colorError", "colorFocusedHighlight", "colorForeground", "colorForegroundInverse", "colorLongPressedHighlight", "colorMultiSelectHighlight", "colorPressedHighlight", "colorPrimary", "colorPrimaryDark", "colorSecondary", "columnCount", "columnDelay", "columnOrderPreserved", "columnWidth", "commitIcon", "compatibleWidthLimitDp", "completionHint", "completionHintView", "completionThreshold", "constantSize", "contentAgeHint", "contentAuthority", "contentDescription", "contentInsetEnd", "contentInsetEndWithActions", "contentInsetLeft", "contentInsetRight", "contentInsetStart", "contentInsetStartWithNavigation", "contextClickable", "contextDescription", "contextPopupMenuStyle", "contextUri", "controlX1", "controlX2", "controlY1", "controlY2", "countDown", "country", "cropToPadding", "cursorVisible", "customNavigationLayout", "customTokens", "dashGap", "dashWidth", "datePickerDialogTheme", "datePickerMode", "datePickerStyle", "dateTextAppearance", "dayOfWeekBackground", "dayOfWeekTextAppearance", "debuggable", "defaultFocusHighlightEnabled", "defaultHeight", "defaultToDeviceProtectedStorage", "defaultValue", "defaultWidth", "delay", "dependency", "descendantFocusability", "detachWallpaper", "detailColumn", "detailSocialSummary", "detailsElementBackground", "dialogCornerRadius", "dialogIcon", "dialogLayout", "dialogMessage", "dialogPreferenceStyle", "dialogPreferredPadding", "dialogTheme", "dialogTitle", "digits", "directBootAware", "directionDescriptions", "directionPriority", "disableDependentsState", "disabledAlpha", "displayOptions", "dither", "divider", "dividerHeight", "dividerHorizontal", "dividerPadding", "dividerVertical", "drawSelectorOnTop", "drawable", "drawableBottom", "drawableEnd", "drawableLeft", "drawablePadding", "drawableRight", "drawableStart", "drawableTint", "drawableTintMode", "drawableTop", "drawingCacheQuality", "dropDownAnchor", "dropDownHeight", "dropDownHintAppearance", "dropDownHorizontalOffset", "dropDownItemStyle", "dropDownListViewStyle", "dropDownSelector", "dropDownSpinnerStyle", "dropDownVerticalOffset", "dropDownWidth", "duplicateParentState", "editTextBackground", "editTextColor", "editTextPreferenceStyle", "editTextStyle", "editable", "editorExtras", "elegantTextHeight", "elevation", "ellipsize", "enableVrMode", "endColor", "endX", "endY", "endYear", "enterFadeDuration", "entries", "entryValues", "eventsInterceptionEnabled", "excludeClass", "excludeFromRecents", "excludeId", "excludeName", "exitFadeDuration", "expandableListPreferredChildIndicatorLeft", "expandableListPreferredChildIndicatorRight", "expandableListPreferredChildPaddingLeft", "expandableListPreferredItemIndicatorLeft", "expandableListPreferredItemIndicatorRight", "expandableListPreferredItemPaddingLeft", "expandableListViewStyle", "expandableListViewWhiteStyle", "exported", "externalService", "extraTension", "extractNativeLibs", "factor", "fadeDuration", "fadeEnabled", "fadeOffset", "fadeScrollbars", "fadingEdge", "fadingEdgeLength", "fadingMode", "fallbackLineSpacing", "fastScrollAlwaysVisible", "fastScrollEnabled", "fastScrollOverlayPosition", "fastScrollPreviewBackgroundLeft", "fastScrollPreviewBackgroundRight", "fastScrollStyle", "fastScrollTextColor", "fastScrollThumbDrawable", "fastScrollTrackDrawable", "fillAfter", "fillAlpha", "fillBefore", "fillColor", "fillEnabled", "fillViewport", "filterTouchesWhenObscured", "fingerprintAuthDrawable", "finishOnCloseSystemDialogs", "finishOnTaskLaunch", "firstBaselineToTopHeight", "firstDayOfWeek", "fitsSystemWindows", "flipInterval", "focusable", "focusableInTouchMode", "focusedByDefault", "fontFamily", "fontFeatureSettings", "fontProviderAuthority", "fontProviderCerts", "fontProviderPackage", "fontProviderQuery", "fontVariationSettings", "fontWeight", "footerDividersEnabled", "foreground", "foregroundGravity", "foregroundTint", "foregroundTintMode", "format12Hour", "format24Hour", "fraction", "fragment", "fragmentAllowEnterTransitionOverlap", "fragmentAllowReturnTransitionOverlap", "fragmentCloseEnterAnimation", "fragmentCloseExitAnimation", "fragmentEnterTransition", "fragmentExitTransition", "fragmentFadeEnterAnimation", "fragmentFadeExitAnimation", "fragmentOpenEnterAnimation", "fragmentOpenExitAnimation", "fragmentReenterTransition", "fragmentReturnTransition", "fragmentSharedElementEnterTransition", "fragmentSharedElementReturnTransition", "freezesText", "fromAlpha", "fromDegrees", "fromId", "fromScene", "fromXDelta", "fromXScale", "fromYDelta", "fromYScale", "fullBackupContent", "fullBackupOnly", "fullBright", "fullDark", "functionalTest", "galleryItemBackground", "galleryStyle", "gestureColor", "gestureStrokeAngleThreshold", "gestureStrokeLengthThreshold", "gestureStrokeSquarenessThreshold", "gestureStrokeType", "gestureStrokeWidth", "glEsVersion", "goIcon", "gradientRadius", "grantUriPermissions", "gridViewStyle", "groupIndicator", "hand_hour", "hand_minute", "handle", "handleProfiling", "hapticFeedbackEnabled", "hardwareAccelerated", "hasCode", "headerAmPmTextAppearance", "headerBackground", "headerDayOfMonthTextAppearance", "headerDividersEnabled", "headerMonthTextAppearance", "headerTimeTextAppearance", "headerYearTextAppearance", "hideOnContentScroll", "hint", "homeAsUpIndicator", "homeLayout", "horizontalDivider", "horizontalGap", "horizontalScrollViewStyle", "horizontalSpacing", "hotSpotX", "hotSpotY", "hyphenationFrequency", "iconPreview", "iconSpaceReserved", "iconTint", "iconTintMode", "iconifiedByDefault", "ignoreGravity", "imageButtonStyle", "imageWellStyle", "imeActionId", "imeActionLabel", "imeExtractEnterAnimation", "imeExtractExitAnimation", "imeFullscreenBackground", "imeOptions", "imeSubtypeExtraValue", "imeSubtypeLocale", "imeSubtypeMode", "immersive", "importantForAccessibility", "importantForAutofill", "inAnimation", "includeFontPadding", "includeInGlobalSearch", "indeterminate", "indeterminateBehavior", "indeterminateDrawable", "indeterminateDuration", "indeterminateOnly", "indeterminateProgressStyle", "indeterminateTint", "indeterminateTintMode", "indicatorEnd", "indicatorLeft", "indicatorRight", "indicatorStart", "inflatedId", "initOrder", "initialKeyguardLayout", "initialLayout", "innerRadius", "innerRadiusRatio", "inputMethod", "inputType", "insetBottom", "insetLeft", "insetRight", "insetTop", "interpolator", "isAlwaysSyncable", "isAsciiCapable", "isAuxiliary", "isDefault", "isFeatureSplit", "isGame", "isIndicator", "isModifier", "isRepeatable", "isSticky", "isolatedProcess", "isolatedSplits", "itemBackground", "itemIconDisabledAlpha", "itemPadding", "itemTextAppearance", "justificationMode", "keepScreenOn", "keyBackground", "keyEdgeFlags", "keyHeight", "keyIcon", "keyLabel", "keyOutputText", "keyPreviewHeight", "keyPreviewLayout", "keyPreviewOffset", "keyTextColor", "keyTextSize", "keyWidth", "keyboardLayout", "keyboardMode", "keyboardNavigationCluster", "keycode", "killAfterRestore", "labelFor", "labelTextSize", "languageTag", "largeHeap", "largestWidthLimitDp", "lastBaselineToBottomHeight", "launchTaskBehindSourceAnimation", "launchTaskBehindTargetAnimation", "layerType", "layoutAnimation", "layoutDirection", "layoutMode", "layout_above", "layout_alignBaseline", "layout_alignBottom", "layout_alignEnd", "layout_alignLeft", "layout_alignParentBottom", "layout_alignParentEnd", "layout_alignParentLeft", "layout_alignParentRight", "layout_alignParentStart", "layout_alignParentTop", "layout_alignRight", "layout_alignStart", "layout_alignTop", "layout_alignWithParentIfMissing", "layout_below", "layout_centerHorizontal", "layout_centerInParent", "layout_centerVertical", "layout_column", "layout_columnSpan", "layout_columnWeight", "layout_gravity", "layout_height", "layout_margin", "layout_marginBottom", "layout_marginEnd", "layout_marginHorizontal", "layout_marginLeft", "layout_marginRight", "layout_marginStart", "layout_marginTop", "layout_marginVertical", "layout_row", "layout_rowSpan", "layout_rowWeight", "layout_scale", "layout_span", "layout_toEndOf", "layout_toLeftOf", "layout_toRightOf", "layout_toStartOf", "layout_weight", "layout_width", "layout_x", "layout_y", "letterSpacing", "lineSpacingExtra", "lineSpacingMultiplier", "linksClickable", "listChoiceBackgroundIndicator", "listChoiceIndicatorMultiple", "listChoiceIndicatorSingle", "listDivider", "listDividerAlertDialog", "listMenuViewStyle", "listPopupWindowStyle", "listPreferredItemHeight", "listPreferredItemHeightLarge", "listPreferredItemHeightSmall", "listPreferredItemPaddingEnd", "listPreferredItemPaddingLeft", "listPreferredItemPaddingRight", "listPreferredItemPaddingStart", "listSelector", "listSeparatorTextViewStyle", "listViewStyle", "listViewWhiteStyle", "lockTaskMode", "logoDescription", "longClickable", "loopViews", "manageSpaceActivity", "mapViewStyle", "marqueeRepeatLimit", "matchOrder", "maxAspectRatio", "maxButtonHeight", "maxDate", "maxEms", "maxItemsPerRow", "maxLength", "maxLevel", "maxLines", "maxLongVersionCode", "maxRows", "maxSdkVersion", "maximumAngle", "measureAllChildren", "measureWithLargestChild", "mediaRouteButtonStyle", "mediaRouteTypes", "menuCategory", "mimeType", "minDate", "minEms", "minLevel", "minLines", "minResizeHeight", "minResizeWidth", "minSdkVersion", "minimumHorizontalAngle", "minimumVerticalAngle", "mipMap", "mirrorForRtl", "moreIcon", "multiArch", "multiprocess", "navigationBarColor", "navigationBarDividerColor", "navigationContentDescription", "navigationIcon", "navigationMode", "negativeButtonText", "nestedScrollingEnabled", "networkSecurityConfig", "nextClusterForward", "nextFocusDown", "nextFocusForward", "nextFocusLeft", "nextFocusRight", "nextFocusUp", "noHistory", "normalScreens", "notificationTimeout", "numColumns", "numStars", "numberPickerStyle", "numbersBackgroundColor", "numbersInnerTextColor", "numbersSelectorColor", "numbersTextColor", "numeric", "numericModifiers", "numericShortcut", "oneshot", "opacity", "orderInCategory", "ordering", "orderingFromXml", "outlineAmbientShadowColor", "outlineProvider", "outlineSpotShadowColor", "overScrollFooter", "overScrollHeader", "overScrollMode", "overlapAnchor", "overridesImplicitlyEnabledSubtype", "packageNames", "padding", "paddingBottom", "paddingEnd", "paddingHorizontal", "paddingLeft", "paddingMode", "paddingRight", "paddingStart", "paddingTop", "paddingVertical", "panelBackground", "panelColorBackground", "panelColorForeground", "panelFullBackground", "panelTextAppearance", "pathData", "pathPattern", "pathPrefix", "patternPathData", "permissionFlags", "permissionGroup", "permissionGroupFlags", "persistent", "persistentDrawingCache", "persistentWhenFeatureAvailable", "phoneNumber", "pivotX", "pivotY", "pointerIcon", "popupAnimationStyle", "popupBackground", "popupCharacters", "popupElevation", "popupEnterTransition", "popupExitTransition", "popupKeyboard", "popupLayout", "popupMenuStyle", "popupTheme", "popupWindowStyle", "positiveButtonText", "preferenceCategoryStyle", "preferenceFragmentStyle", "preferenceInformationStyle", "preferenceLayoutChild", "preferenceScreenStyle", "preferenceStyle", "presentationTheme", "previewImage", "primaryContentAlpha", "privateImeOptions", "progressBackgroundTint", "progressBackgroundTintMode", "progressBarPadding", "progressBarStyle", "progressBarStyleHorizontal", "progressBarStyleInverse", "progressBarStyleLarge", "progressBarStyleLargeInverse", "progressBarStyleSmall", "progressBarStyleSmallInverse", "progressBarStyleSmallTitle", "progressDrawable", "progressTint", "progressTintMode", "prompt", "propertyXName", "propertyYName", "protectionLevel", "publicKey", "queryActionMsg", "queryAfterZeroResults", "queryBackground", "queryHint", "quickContactBadgeStyleSmallWindowLarge", "quickContactBadgeStyleSmallWindowMedium", "quickContactBadgeStyleSmallWindowSmall", "quickContactBadgeStyleWindowLarge", "quickContactBadgeStyleWindowMedium", "quickContactBadgeStyleWindowSmall", "radioButtonStyle", "rating", "ratingBarStyle", "ratingBarStyleIndicator", "ratingBarStyleSmall", "readPermission", "recognitionService", "recreateOnConfigChanges", "recycleEnabled", "relinquishTaskIdentity", "reparent", "reparentWithOverlay", "repeatCount", "repeatMode", "reqFiveWayNav", "reqHardKeyboard", "reqKeyboardType", "reqNavigation", "reqTouchScreen", "requireDeviceUnlock", "required", "requiredAccountType", "requiredFeature", "requiredForAllUsers", "requiredNotFeature", "requiresFadingEdge", "requiresSmallestWidthDp", "resizeClip", "resizeMode", "resizeable", "resizeableActivity", "restoreAnyVersion", "restoreNeedsApplication", "restrictedAccountType", "restrictionType", "resumeWhilePausing", "reversible", "revisionCode", "ringtonePreferenceStyle", "ringtoneType", "rotationX", "rotationY", "roundIcon", "rowDelay", "rowEdgeFlags", "rowHeight", "rowOrderPreserved", "saveEnabled", "scaleGravity", "scaleHeight", "scaleType", "scaleWidth", "scaleX", "scaleY", "scheme", "screenDensity", "screenReaderFocusable", "screenSize", "scrollHorizontally", "scrollIndicators", "scrollViewStyle", "scrollX", "scrollY", "scrollbarAlwaysDrawHorizontalTrack", "scrollbarAlwaysDrawVerticalTrack", "scrollbarDefaultDelayBeforeFade", "scrollbarFadeDuration", "scrollbarSize", "scrollbarStyle", "scrollbarThumbHorizontal", "scrollbarThumbVertical", "scrollbarTrackHorizontal", "scrollbarTrackVertical", "scrollbars", "scrollingCache", "searchButtonText", "searchHintIcon", "searchIcon", "searchMode", "searchSettingsDescription", "searchSuggestAuthority", "searchSuggestIntentAction", "searchSuggestIntentData", "searchSuggestPath", "searchSuggestSelection", "searchSuggestThreshold", "searchViewStyle", "secondaryContentAlpha", "secondaryProgress", "secondaryProgressTint", "secondaryProgressTintMode", "seekBarStyle", "segmentedButtonStyle", "selectAllOnFocus", "selectable", "selectableItemBackground", "selectableItemBackgroundBorderless", "selectedDateVerticalBar", "selectedWeekBackgroundColor", "sessionService", "settingsActivity", "setupActivity", "shadowColor", "shadowDx", "shadowDy", "shadowRadius", "shape", "shareInterpolator", "shortcutDisabledMessage", "shortcutId", "shortcutLongLabel", "shortcutShortLabel", "shouldDisableView", "showAsAction", "showDefault", "showDividers", "showForAllUsers", "showMetadataInPreview", "showOnLockScreen", "showSilent", "showText", "showWeekNumber", "showWhenLocked", "shownWeekCount", "shrinkColumns", "singleLine", "singleLineTitle", "singleUser", "slideEdge", "smallIcon", "smallScreens", "smoothScrollbar", "soundEffectsEnabled", "spacing", "spinnerDropDownItemStyle", "spinnerItemStyle", "spinnerMode", "spinnerStyle", "spinnersShown", "splitMotionEvents", "splitName", "splitTrack", "spotShadowAlpha", "sspPattern", "sspPrefix", "stackFromBottom", "stackViewStyle", "starStyle", "startColor", "startOffset", "startX", "startY", "startYear", "stateListAnimator", "stateNotNeeded", "state_above_anchor", "state_accelerated", "state_activated", "state_active", "state_checkable", "state_checked", "state_drag_can_accept", "state_drag_hovered", "state_empty", "state_enabled", "state_expanded", "state_first", "state_focused", "state_hovered", "state_last", "state_long_pressable", "state_middle", "state_multiline", "state_pressed", "state_selected", "state_single", "state_window_focused", "staticWallpaperPreview", "statusBarColor", "stepSize", "stopWithTask", "streamType", "stretchColumns", "stretchMode", "strokeAlpha", "strokeColor", "strokeLineCap", "strokeLineJoin", "strokeMiterLimit", "strokeWidth", "subMenuArrow", "submitBackground", "subtitle", "subtitleTextAppearance", "subtitleTextColor", "subtitleTextStyle", "subtypeExtraValue", "subtypeId", "subtypeLocale", "suggestActionMsg", "suggestActionMsgColumn", "suggestionRowLayout", "summary", "summaryColumn", "summaryOff", "summaryOn", "supportsAssist", "supportsLaunchVoiceAssistFromKeyguard", "supportsLocalInteraction", "supportsPictureInPicture", "supportsRtl", "supportsSwitchingToNextInputMethod", "supportsUploading", "switchMinWidth", "switchPadding", "switchPreferenceStyle", "switchStyle", "switchTextAppearance", "switchTextOff", "switchTextOn", "syncable", "tabStripEnabled", "tabStripLeft", "tabStripRight", "tabWidgetStyle", "targetClass", "targetDescriptions", "targetId", "targetName", "targetPackage", "targetProcesses", "targetSandboxVersion", "targetSdkVersion", "taskCloseEnterAnimation", "taskCloseExitAnimation", "taskOpenEnterAnimation", "taskOpenExitAnimation", "taskToBackEnterAnimation", "taskToBackExitAnimation", "taskToFrontEnterAnimation", "taskToFrontExitAnimation", "testOnly", "textAlignment", "textAllCaps", "textAppearance", "textAppearanceButton", "textAppearanceInverse", "textAppearanceLarge", "textAppearanceLargeInverse", "textAppearanceLargePopupMenu", "textAppearanceListItem", "textAppearanceListItemSecondary", "textAppearanceListItemSmall", "textAppearanceMedium", "textAppearanceMediumInverse", "textAppearancePopupMenuHeader", "textAppearanceSearchResultSubtitle", "textAppearanceSearchResultTitle", "textAppearanceSmall", "textAppearanceSmallInverse", "textAppearanceSmallPopupMenu", "textCheckMark", "textCheckMarkInverse", "textColor", "textColorAlertDialogListItem", "textColorHighlight", "textColorHighlightInverse", "textColorHint", "textColorHintInverse", "textColorLink", "textColorLinkInverse", "textColorPrimary", "textColorPrimaryDisableOnly", "textColorPrimaryInverse", "textColorPrimaryInverseDisableOnly", "textColorPrimaryInverseNoDisable", "textColorPrimaryNoDisable", "textColorSecondary", "textColorSecondaryInverse", "textColorSecondaryInverseNoDisable", "textColorSecondaryNoDisable", "textColorTertiary", "textColorTertiaryInverse", "textCursorDrawable", "textDirection", "textEditNoPasteWindowLayout", "textEditPasteWindowLayout", "textEditSideNoPasteWindowLayout", "textEditSidePasteWindowLayout", "textEditSuggestionItemLayout", "textFilterEnabled", "textFontWeight", "textIsSelectable", "textOff", "textOn", "textScaleX", "textSelectHandle", "textSelectHandleLeft", "textSelectHandleRight", "textSelectHandleWindowStyle", "textSize", "textStyle", "textSuggestionsWindowStyle", "textViewStyle", "thickness", "thicknessRatio", "thumb", "thumbOffset", "thumbPosition", "thumbTextPadding", "thumbTint", "thumbTintMode", "thumbnail", "tickMark", "tickMarkTint", "tickMarkTintMode", "tileModeX", "tileModeY", "timePickerDialogTheme", "timePickerMode", "timePickerStyle", "timeZone", "tint", "tintMode", "titleCondensed", "titleMargin", "titleMarginBottom", "titleMarginEnd", "titleMarginStart", "titleMarginTop", "toAlpha", "toDegrees", "toId", "toScene", "toXDelta", "toXScale", "toYDelta", "toYScale", "toolbarStyle", "tooltipText", "topBright", "topDark", "topLeftRadius", "topOffset", "topRightRadius", "touchscreenBlocksFocus", "track", "trackTint", "trackTintMode", "transcriptMode", "transformPivotX", "transformPivotY", "transition", "transitionGroup", "transitionName", "transitionOrdering", "transitionVisibilityMode", "translateX", "translateY", "translationX", "translationY", "translationZ", "trimPathEnd", "trimPathOffset", "trimPathStart", "ttcIndex", "tunerCount", "turnScreenOn", "typeface", "uncertainGestureColor", "unfocusedMonthDateColor", "unselectedAlpha", "updatePeriodMillis", "use32bitAbi", "useDefaultMargins", "useIntrinsicSizeAsMinimum", "useLevel", "userVisible", "usesCleartextTraffic", "valueFrom", "valueTo", "valueType", "variablePadding", "versionCodeMajor", "versionMajor", "verticalCorrection", "verticalDivider", "verticalGap", "verticalScrollbarPosition", "verticalSpacing", "viewportHeight", "viewportWidth", "visibility", "visibleToInstantApps", "vmSafeMode", "voiceIcon", "voiceLanguage", "voiceLanguageModel", "voiceMaxResults", "voicePromptText", "voiceSearchMode", "wallpaperCloseEnterAnimation", "wallpaperCloseExitAnimation", "wallpaperIntraCloseEnterAnimation", "wallpaperIntraCloseExitAnimation", "wallpaperIntraOpenEnterAnimation", "wallpaperIntraOpenExitAnimation", "wallpaperOpenEnterAnimation", "wallpaperOpenExitAnimation", "webTextViewStyle", "webViewStyle", "weekDayTextAppearance", "weekNumberColor", "weekSeparatorLineColor", "weightSum", "widgetCategory", "widgetFeatures", "widgetLayout", "windowActionBar", "windowActionBarOverlay", "windowActionModeOverlay", "windowActivityTransitions", "windowAllowEnterTransitionOverlap", "windowAllowReturnTransitionOverlap", "windowAnimationStyle", "windowBackground", "windowBackgroundFallback", "windowClipToOutline", "windowCloseOnTouchOutside", "windowContentOverlay", "windowContentTransitionManager", "windowContentTransitions", "windowDisablePreview", "windowDrawsSystemBarBackgrounds", "windowElevation", "windowEnableSplitTouch", "windowEnterAnimation", "windowEnterTransition", "windowExitAnimation", "windowExitTransition", "windowFrame", "windowFullscreen", "windowHideAnimation", "windowIsFloating", "windowIsTranslucent", "windowLayoutInDisplayCutoutMode", "windowLightNavigationBar", "windowLightStatusBar", "windowMinWidthMajor", "windowMinWidthMinor", "windowNoDisplay", "windowNoTitle", "windowOverscan", "windowReenterTransition", "windowReturnTransition", "windowSharedElementEnterTransition", "windowSharedElementExitTransition", "windowSharedElementReenterTransition", "windowSharedElementReturnTransition", "windowSharedElementsUseOverlay", "windowShowAnimation", "windowShowWallpaper", "windowSoftInputMode", "windowSplashscreenContent", "windowSwipeToDismiss", "windowTitleBackgroundStyle", "windowTitleSize", "windowTitleStyle", "windowTransitionBackgroundFadeDuration", "windowTranslucentNavigation", "windowTranslucentStatus", "writePermission", "xlargeScreens", "yearListItemTextAppearance", "yearListSelectorColor", "yesNoPreferenceStyle", "zAdjustment", "android/Manifest$permission", "ACCEPT_HANDOVER", "ACCESS_CHECKIN_PROPERTIES", "ACCESS_LOCATION_EXTRA_COMMANDS", "ACCESS_NOTIFICATION_POLICY", "ACCESS_WIFI_STATE", "ACCOUNT_MANAGER", "ADD_VOICEMAIL", "ANSWER_PHONE_CALLS", "BATTERY_STATS", "BIND_ACCESSIBILITY_SERVICE", "BIND_APPWIDGET", "BIND_AUTOFILL_SERVICE", "BIND_CARRIER_MESSAGING_SERVICE", "BIND_CARRIER_SERVICES", "BIND_CHOOSER_TARGET_SERVICE", "BIND_CONDITION_PROVIDER_SERVICE", "BIND_DEVICE_ADMIN", "BIND_DREAM_SERVICE", "BIND_INCALL_SERVICE", "BIND_INPUT_METHOD", "BIND_MIDI_DEVICE_SERVICE", "BIND_NFC_SERVICE", "BIND_NOTIFICATION_LISTENER_SERVICE", "BIND_PRINT_SERVICE", "BIND_QUICK_SETTINGS_TILE", "BIND_REMOTEVIEWS", "BIND_SCREENING_SERVICE", "BIND_TELECOM_CONNECTION_SERVICE", "BIND_TEXT_SERVICE", "BIND_TV_INPUT", "BIND_VISUAL_VOICEMAIL_SERVICE", "BIND_VOICE_INTERACTION", "BIND_VPN_SERVICE", "BIND_VR_LISTENER_SERVICE", "BIND_WALLPAPER", "BLUETOOTH_ADMIN", "BLUETOOTH_PRIVILEGED", "BODY_SENSORS", "BROADCAST_PACKAGE_REMOVED", "BROADCAST_SMS", "BROADCAST_STICKY", "BROADCAST_WAP_PUSH", "CALL_PHONE", "CALL_PRIVILEGED", "CAPTURE_AUDIO_OUTPUT", "CAPTURE_SECURE_VIDEO_OUTPUT", "CAPTURE_VIDEO_OUTPUT", "CHANGE_COMPONENT_ENABLED_STATE", "CHANGE_CONFIGURATION", "CHANGE_NETWORK_STATE", "CHANGE_WIFI_MULTICAST_STATE", "CHANGE_WIFI_STATE", "CLEAR_APP_CACHE", "CONTROL_LOCATION_UPDATES", "DELETE_CACHE_FILES", "DIAGNOSTIC", "DISABLE_KEYGUARD", "DUMP", "EXPAND_STATUS_BAR", "GET_ACCOUNTS", "GET_ACCOUNTS_PRIVILEGED", "GET_PACKAGE_SIZE", "GET_TASKS", "GLOBAL_SEARCH", "INSTALL_LOCATION_PROVIDER", "INSTANT_APP_FOREGROUND_SERVICE", "KILL_BACKGROUND_PROCESSES", "LOCATION_HARDWARE", "MANAGE_DOCUMENTS", "MANAGE_OWN_CALLS", "MASTER_CLEAR", "MEDIA_CONTENT_CONTROL", "MODIFY_AUDIO_SETTINGS", "MODIFY_PHONE_STATE", "MOUNT_FORMAT_FILESYSTEMS", "MOUNT_UNMOUNT_FILESYSTEMS", "NFC_TRANSACTION_EVENT", "PACKAGE_USAGE_STATS", "PERSISTENT_ACTIVITY", "PROCESS_OUTGOING_CALLS", "READ_CALENDAR", "READ_CALL_LOG", "READ_CONTACTS", "READ_FRAME_BUFFER", "READ_INPUT_STATE", "READ_LOGS", "READ_PHONE_NUMBERS", "READ_SMS", "READ_SYNC_SETTINGS", "READ_SYNC_STATS", "READ_VOICEMAIL", "RECEIVE_BOOT_COMPLETED", "RECEIVE_MMS", "RECEIVE_SMS", "RECEIVE_WAP_PUSH", "REORDER_TASKS", "REQUEST_COMPANION_RUN_IN_BACKGROUND", "REQUEST_COMPANION_USE_DATA_IN_BACKGROUND", "REQUEST_DELETE_PACKAGES", "REQUEST_IGNORE_BATTERY_OPTIMIZATIONS", "REQUEST_INSTALL_PACKAGES", "RESTART_PACKAGES", "SEND_RESPOND_VIA_MESSAGE", "SEND_SMS", "SET_ALARM", "SET_ALWAYS_FINISH", "SET_ANIMATION_SCALE", "SET_DEBUG_APP", "SET_PREFERRED_APPLICATIONS", "SET_PROCESS_LIMIT", "SET_TIME", "SET_TIME_ZONE", "SET_WALLPAPER_HINTS", "SIGNAL_PERSISTENT_PROCESSES", "SYSTEM_ALERT_WINDOW", "TRANSMIT_IR", "UNINSTALL_SHORTCUT", "UPDATE_DEVICE_STATS", "USE_BIOMETRIC", "USE_FINGERPRINT", "USE_SIP", "WRITE_APN_SETTINGS", "WRITE_CALENDAR", "WRITE_CALL_LOG", "WRITE_CONTACTS", "WRITE_GSERVICES", "WRITE_SECURE_SETTINGS", "WRITE_SETTINGS", "WRITE_SYNC_SETTINGS", "WRITE_VOICEMAIL", "bitter/jnibridge/JNIBridge", "(JLjava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;", "<native proxy object>", "newInterfaceProxy", "(J[Ljava/lang/Class;)Ljava/lang/Object;", "disableInterfaceProxy", "java.lang.IllegalArgumentException: Null parameter detected", "java.lang.IllegalThreadStateException: Unable to determine exception message", "java.lang.IllegalThreadStateException: Unable to attach to VM", "Out of memory: Unable to allocate local frame(64)", "mNbNodes[0]", "mNbNodes[1]", "AABBTreeRuntimeNode", "mAABBTreeNodes[0]", "mAABBTreeNodes[1]", "mNbObjects[0]", "mNbObjects[1]", "mAABBTreeIndices[0]", "mAABBTreeIndices[1]", "PxActor*", "mValid", "./PhysX/Source/SceneQuery/src/SqPruningPool.cpp", "./PhysX/Source/SceneQuery/src/SqSceneQueryManager.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::AABBTree>::getName() [T = physx::Sq::AABBTree]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::BucketPruner>::getName() [T = physx::Sq::BucketPruner]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::AABBPruner>::getName() [T = physx::Sq::AABBPruner]", "PhysX/Source/Common/src/CmBitMap.h", "./PhysX/Source/SceneQuery/src/SqAABBTree.cpp", "./PhysX/Source/SceneQuery/src/SqAABBTreeBuild.cpp", "./PhysX/Source/SceneQuery/src/SqBucketPruner.cpp", "./PhysX/Source/SceneQuery/src/SqPruningStructure.cpp", "PrunerStructure::build: Actor already assigned to a scene!", "PrunerStructure::build: Provided actor has no scene query shape!", "PrunerStructure::build: Provided actor has already a pruning structure!", "PrunerStructure::build: Provided actor is not a rigid actor!", "PrunerStructure::exportExtraData: Pruning structure is invalid!", "PrunerStructure::importExtraData: Pruning structure is invalid!", "PrunerStructure::getRigidActors: Pruning structure is invalid!", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::AABBTreeBuildNode *>::getName() [T = physx::Sq::AABBTreeBuildNode *]", "PxPruningStructure", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::AABBPruner::NewTreeFixup>::getName() [T = physx::Sq::AABBPruner::NewTreeFixup]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::AABBTreeRuntimeNode>::getName() [T = physx::Sq::AABBTreeRuntimeNode]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::FIFOStack>::getName() [T = physx::Sq::FIFOStack]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::NodeAllocator::Slab>::getName() [T = physx::Sq::NodeAllocator::Slab]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sq::AABBTreeBuildNode>::getName() [T = physx::Sq::AABBTreeBuildNode]", "./PxShared/src/foundation/src/unix/PsUnixMutex.cpp", "./PxShared/src/foundation/src/unix/PsUnixSocket.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::SortedTriangle>::getName() [T = physx::Gu::SortedTriangle]", "PxShared/src/foundation/include/PsSort.h", "./PhysX/Source/GeomUtils/src/mesh/GuBV32Build.cpp", "./PhysX/Source/GeomUtils/src/mesh/GuMeshQuery.cpp", "Adjacency information not created. Set buildTriangleAdjacencies on Cooking params.", "./PhysX/Source/GeomUtils/src/mesh/GuTriangleMesh.cpp", "Gu::TriangleMesh::release: double deletion detected!", "PxTriangleMesh::getVerticesForModification() is only supported for meshes with PxMeshMidPhase::eBVH33.", "PxTriangleMesh::refitBVH() is only supported for meshes with PxMeshMidPhase::eBVH33.", "static const char *physx::shdfnd::ReflectionAllocator<BV32Node>::getName() [T = BV32Node]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::BV32Data>::getName() [T = physx::Gu::BV32Data]", "PxTriangleMesh", "PxBVH34TriangleMesh", "PxBVH33TriangleMesh", "Gu::HeightField::onRefCountZero: double deletion detected!", "Gu::HeightField::load: PX_ALLOC failed!", "PxHeightField", "./PhysX/Source/GeomUtils/src/convex/GuBigConvexData.cpp", "./PhysX/Source/GeomUtils/src/convex/GuConvexMesh.cpp", "Loading convex mesh failed: Deprecated mesh cooking format.", "Gu::ConvexMesh::release: double deletion detected!", "PxConvexMesh", "static const char *physx::shdfnd::ReflectionAllocator<physx::BigConvexData>::getName() [T = physx::BigConvexData]", "Gu::GeometryUnion::computeBounds: Unknown shape type.", "./PhysX/Source/GeomUtils/src/GuMeshFactory.cpp", "mVBuffer", "Valency", "ConvexHullData", "mHullData", "mBigConvexData", "mMass", "mInertia", "GuMeshFactory", "mMeshFactory", "HullPolygonData", "PxMaterialTableIndex", "HeightFieldData", "mSampleStride", "mNbSamples", "mMinHeight", "mMaxHeight", "mModifyCount", "PxHeightFieldSample", "mBoundsMin", "mBoundsMax", "mInvDiagonal", "mDiagonalScaler", "mPageSize", "mNumRootPages", "mNumLevels", "mTotalNodes", "mTotalPages", "RTreePage", "mPages", "SourceMesh", "mNbVerts", "mVerts", "mNbTris", "mTriangles32", "mTriangles16", "mRemap", "mExtentsMagnitude", "mMeshInterface", "mLocalBounds", "mNbNodes", "BVDataPacked", "mNodes", "mCenterOrMinCoeff", "mExtentsOrMaxCoeff", "mUserAllocated", "mNbVertices", "mNbTriangles", "mTriangles", "mAABB", "mExtraTrigData", "mGeomEpsilon", "mMaterialIndices", "mFaceRemap", "mAdjacencies", "mGRB_triIndices", "mGRB_triAdjacencies", "mGRB_faceRemap", "mGRB_BV32Tree", "mRTree", "mBV4Tree", "MaterialIndicesStruct", "numIndices", "pad64", "PxGeometryType::Enum", "PxConvexMeshGeometryLL", "ShadowConvexMeshGeometry", "PxTriangleMeshGeometryLL", "ShadowTriangleMeshGeometry", "PxHeightFieldGeometryLL", "ShadowHeightFieldGeometry", "PxPlaneGeometry", "ShadowPlaneGeometry", "PxSphereGeometry", "ShadowSphereGeometry", "PxCapsuleGeometry", "ShadowCapsuleGeometry", "PxBoxGeometry", "ShadowBoxGeometry", "Gu::GeometryUnion", "Loading triangle mesh failed: Deprecated mesh cooking format. Please recook your mesh in a new cooking format.", "RTree binary image load error.", "BV4 binary image load error.", "BV32 binary image load error.", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::RTreeTriangleData>::getName() [T = physx::Gu::RTreeTriangleData]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::BV4TriangleData>::getName() [T = physx::Gu::BV4TriangleData]", "PhysX/Source/GeomUtils/src/mesh/GuMeshData.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::BV32Tree>::getName() [T = physx::Gu::BV32Tree]", "mSubdiv", "mSamples", "mNbAdjVerts", "mValencies", "mAdjacentVerts", "InternalObjectsData", "mRadius", "mPlane", "mVRef8", "mMinIndex", "mCenterOfMass", "mPolygons", "mBigConvexRawData", "mNbEdges", "mNbHullVertices", "mNbPolygons", "PxBitAndByte", "materialIndex0", "materialIndex1", "PxHeightFieldFlags", "PxHeightFieldFormat::Enum", "rows", "columns", "rowLimit", "colLimit", "nbColumns", "samples", "convexEdgeThreshold", "minx", "miny", "minz", "maxx", "maxy", "maxz", "ptrs", "QuantizedAABB", "mData[0].mExtents", "mData[0].mCenter", "mData[1].mExtents", "mData[1].mCenter", "mData[2].mExtents", "mData[2].mCenter", "PxConvexMeshGeometryFlags", "convexMesh", "maxMargin", "meshFlags", "paddingFromFlags", "hullData", "gpuCompatible", "PxMeshGeometryFlags", "triangleMesh", "meshData", "materialIndices", "materials", "heightField", "rowScale", "columnScale", "heightFieldFlags", "heightFieldData", "halfHeight", "halfExtents", "./PhysX/Source/GeomUtils/src/GuSweepTests.cpp", "Height Field Sweep test called with height fields unregistered ", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::RTreeTriangleMesh>::getName() [T = physx::Gu::RTreeTriangleMesh]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::BV4TriangleMesh>::getName() [T = physx::Gu::BV4TriangleMesh]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::ConvexMesh>::getName() [T = physx::Gu::ConvexMesh]", "static const char *physx::shdfnd::ReflectionAllocator<physx::GuMeshFactoryListener *>::getName() [T = physx::GuMeshFactoryListener *]", "./PhysX/Source/Common/src/CmCollection.cpp", "PxCollection::add called for an object that has an associated id already present in the collection!", "PxCollection::add called with an id which is already used in the collection", "mSingle", "mOwnsMemory", "./PhysX/Source/Common/src/CmRadixSortBuffered.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::Collection>::getName() [T = physx::Cm::Collection]", "PxDominanceGroup", "PxClientID", "Sc::ActorCore", "ActorSim", "mSim", "mAggregateIDOwnerClient", "mActorFlags", "mActorType", "mClientBehaviorFlags", "mDominanceGroup", "PxRigidBodyFlags", "Sc::BodyCore", "Sc::RigidCore", "mSimStateData", "PxConstraintFlags", "ConstraintCore", "mPaddingFromFlags", "mAppliedForce", "mAppliedTorque", "mConnector", "PxConstraintProject", "mProject", "PxConstraintSolverPrep", "mSolverPrep", "PxConstraintVisualize", "mVisualize", "mDataSize", "mLinearBreakForce", "mAngularBreakForce", "mMinResponseThreshold", "ConstraintSim", "PxCombineMode::Enum", "PxMaterialFlags", "fricRestCombineMode", "mNxMaterial", "mMaterialIndex", "Sc::StaticCore", "PxsRigidCore", "PxShapeFlags", "PxFilterData", "mQueryFilterData", "mSimulationFilterData", "PxsShapeCore", "mRestOffset", "ArticulationSim", "Dy::ArticulationCore", "ArticulationJointSim", "Dy::ArticulationJointCore", "mLowLevelFabric", "mLowLevelGpuFabric", "mPhaseTypes.mData", "mPhaseTypes.mSize", "mPhaseTypes.mCapacity", "Sc::ClothFabricBulkData", "mNbParticles", "mPhases.mData", "mPhases.mSize", "mPhases.mCapacity", "mSets.mData", "mSets.mSize", "mSets.mCapacity", "mRestvalues.mData", "mRestvalues.mSize", "mRestvalues.mCapacity", "mIndices.mData", "mIndices.mSize", "mIndices.mCapacity", "mTetherAnchors.mData", "mTetherAnchors.mSize", "mTetherAnchors.mCapacity", "mTetherLengths.mData", "mTetherLengths.mSize", "mTetherLengths.mCapacity", "mTriangles.mData", "mTriangles.mSize", "mTriangles.mCapacity", "Sc::ClothBulkData", "mTetherConstraintScale", "mTetherConstraintStiffness", "mMotionConstraintScale", "mMotionConstraintBias", "mMotionConstraintStiffness", "mAcceleration", "mDamping", "mFriction", "mCollisionMassScale", "mLinearDrag", "mAngularDrag", "mLinearInertia", "mAngularInertia", "mCentrifugalInertia", "mSolverFrequency", "mStiffnessFrequency", "mSelfCollisionDistance", "mSelfCollisionStiffness", "mGlobalPose", "mSleepThreshold", "mWakeCounter", "mWindVelocity", "mDragCoefficient", "mLiftCoefficient", "mParticles.mData", "mParticles.mSize", "mParticles.mCapacity", "mVpData.mData", "mVpData.mSize", "mVpData.mCapacity", "mVpWeightData.mData", "mVpWeightData.mSize", "mVpWeightData.mCapacity", "mCollisionSpheres.mData", "mCollisionSpheres.mSize", "mCollisionSpheres.mCapacity", "mCollisionPairs.mData", "mCollisionPairs.mSize", "mCollisionPairs.mCapacity", "mCollisionPlanes.mData", "mCollisionPlanes.mSize", "mCollisionPlanes.mCapacity", "mConvexMasks.mData", "mConvexMasks.mSize", "mConvexMasks.mCapacity", "mCollisionTriangles.mData", "mCollisionTriangles.mSize", "mCollisionTriangles.mCapacity", "mConstraints.mData", "mConstraints.mSize", "mConstraints.mCapacity", "mSeparationConstraints.mData", "mSeparationConstraints.mSize", "mSeparationConstraints.mCapacity", "mParticleAccelerations.mData", "mParticleAccelerations.mSize", "mParticleAccelerations.mCapacity", "mSelfCollisionIndices.mData", "mSelfCollisionIndices.mSize", "mSelfCollisionIndices.mCapacity", "mRestPositions.mData", "mRestPositions.mSize", "mRestPositions.mCapacity", "Sc::ClothCore", "PxClothFlags", "mExternalAcceleration", "mFilterData", "mClothFlags", "mContactOffset", "mNumUserSpheres", "mNumUserCapsules", "mNumUserPlanes", "mNumUserConvexes", "mNumUserTriangles", "mLowLevelCloth", "mBulkData", "mPhaseConfigs", "ShadowPxsBodyCore", "body2World", "mIdtBody2Actor", "solverIterationCounts", "body2Actor", "ccdAdvanceCoefficient", "linearVelocity", "maxPenBias", "angularVelocity", "contactReportThreshold", "maxAngularVelocitySq", "maxLinearVelocitySq", "linearDamping", "angularDamping", "inverseInertia", "inverseMass", "maxContactImpulse", "freezeThreshold", "wakeCounter", "solverWakeCounter", "numCountedInteractions", "numBodyInteractions", "isFastMoving", "lockFlags", "word0", "word1", "word2", "word3", "geometry", "mShapeFlags", "mOwnsMaterialIdxMemory", "materialIndex", "internalDriveIterations", "externalDriveIterations", "maxProjectionIterations", "separationTolerance", "parentPose", "childPose", "solverSpring", "solverDamping", "internalCompliance", "externalCompliance", "swingYLimit", "swingZLimit", "swingLimitContactDistance", "swingLimited", "driveType", "tangentialStiffness", "tangentialDamping", "twistLimitHigh", "twistLimitLow", "twistLimitContactDistance", "twistLimited", "tanQSwingY", "tanQSwingZ", "tanQSwingPad", "tanQTwistHigh", "tanQTwistLow", "tanQTwistPad", "./PhysX/Source/SimulationController/src/ScConstraintProjectionTree.cpp", "Allocating projection node queue failed!", "./PhysX/Source/SimulationController/src/ScConstraintSim.cpp", "Constraint: could not allocate low-level resources.", "ScNPhaseCore.mergeProcessedTriggerInteractions", "./PhysX/Source/SimulationController/src/ScNPhaseCore.cpp", "Temporary memory for trigger pair processing could not be allocated. Trigger overlap tests will not take place.", "PhysX/Source/SimulationController/src/ScContactReportBuffer.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::NPhaseCore::ClothListElement>::getName() [T = physx::Sc::NPhaseCore::ClothListElement]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ElementInteractionMarker>::getName() [T = physx::Sc::ElementInteractionMarker]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ActorPairContactReportData>::getName() [T = physx::Sc::ActorPairContactReportData]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::TriggerInteraction>::getName() [T = physx::Sc::TriggerInteraction]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ShapeInteraction>::getName() [T = physx::Sc::ShapeInteraction]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ActorElementPair>::getName() [T = physx::Sc::ActorElementPair]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ActorPairReport>::getName() [T = physx::Sc::ActorPairReport]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ActorPair>::getName() [T = physx::Sc::ActorPair]", "Filtering: eCALLBACK set but no filter callback defined.", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::FilterPair>::getName() [T = physx::Sc::FilterPair]", "PhysX/Source/LowLevel/common/include/utils/PxcScratchAllocator.h", "ScNPhaseCore.triggerInteractionWork", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ActorPairReport *>::getName() [T = physx::Sc::ActorPairReport *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::BodyRank>::getName() [T = physx::Sc::BodyRank]", "PxShared/src/foundation/include/PsPool.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintInteraction>::getName() [T = physx::Sc::ConstraintInteraction]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::BodySim *>::getName() [T = physx::Sc::BodySim *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::FilterPairManager>::getName() [T = physx::Sc::FilterPairManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTriggerPair>::getName() [T = physx::PxTriggerPair]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::TriggerPairExtraData>::getName() [T = physx::Sc::TriggerPairExtraData]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ShapeInteraction *>::getName() [T = physx::Sc::ShapeInteraction *]", "ScScene.clothPreprocessing", "ScScene.secondPassNarrowPhase", "ScScene.postNarrowPhase", "ScScene.particlePostCollPrep", "ScScene.particlePostShapeGen", "ScScene.finalizationPhase", "ScScene.updateCCDMultiPass", "ScScene.afterIntegration", "ScScene.constraintProjection", "ScScene.postSolver", "ScScene.rigidBodySolver", "ScScene.updateBodiesAndShapes", "ScScene.updateSimulationController", "ScScene.updateDynamics", "ScScene.processLostContact", "ScScene.processLostContact2", "ScScene.processLostContact3", "ScScene.destroyManagers", "ScScene.lostTouchReports", "ScScene.unregisterInteractions", "ScScene.processNpLostTouchTask", "ScScene.processNPLostTouchEvents", "ScScene.postThirdPassIslandGenTask", "ScScene.postIslandGen", "ScScene.islandGen", "ScScene.preRigidBodyNarrowPhase", "ScScene.setEdgesConnectedTask", "ScScene.fetchPatchEventsTask", "ScScene.processLostSolverPatchesTask", "ScScene.rigidBodyNarrowPhase", "ScScene.unblockNarrowPhase", "ScScene.postBroadPhase", "ScScene.postBroadPhase2", "ScScene.postBroadPhase3", "ScScene.preallocateContactManagers", "ScScene.islandInsertion", "ScScene.registerContactManagers", "ScScene.registerInteractions", "ScScene.registerSceneInteractions", "ScScene.broadPhase", "ScScene.advanceStep", "ScScene.collideStep", "./PhysX/Source/SimulationController/src/ScScene.cpp", "StaticSim", "BodySim", "ShapeSim", "Failed to create context!", "Failed to allocate memory for filter shader data!", "GPU cloth pipeline failed, switching to software", "ScScene.postCCDPass", "ScScene.updateCCDSinglePass", "ScScene.updateCCDSinglePassStage2", "ScScene.updateCCDSinglePassStage3", "ScScene.ccdBroadPhase", "ScScene.ccdBroadPhaseAABB", "List for collecting constraint projection roots could not be allocated. No projection will take place.", "GPU cloth creation failed. Falling back to CPU implementation.", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintGroupNode>::getName() [T = physx::Sc::ConstraintGroupNode]", "PhysX/Source/LowLevel/API/include/PxsMaterialManager.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxBaseTask *>::getName() [T = physx::PxBaseTask *]", "PhysX/Source/Common/src/CmFlushPool.h", "ScScene.afterIntegrationTask", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintSim>::getName() [T = physx::Sc::ConstraintSim]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::SimStateData>::getName() [T = physx::Sc::SimStateData]", "SpeculativeCCDContactDistanceUpdateTask", "SpeculativeCCDContactDistanceArticulationUpdateTask", "DirtyShapeUpdatesTask", "UpdateCCDBoundsTask", "ScScene.KinematicUpdateCachedTask", "ScScene.constraintProjectionWork", "PhysX/Source/LowLevel/common/include/utils/PxcThreadCoherentCache.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxcNpThreadContext>::getName() [T = physx::PxcNpThreadContext]", "ScScene.beforeSolver", "ScScene.UpdatProjectedPoseTask", "static const char *physx::shdfnd::ReflectionAllocator<const physx::PxRigidBody *>::getName() [T = const physx::PxRigidBody *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxActiveTransform>::getName() [T = physx::PxActiveTransform]", "OnOverlapCreatedTask", "OverlapFilterTask", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::Block<void *, 8> >::getName() [T = physx::Sc::Scene::Block<void *, 8>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::Block<void *, 16> >::getName() [T = physx::Sc::Scene::Block<void *, 16>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::Block<void *, 32> >::getName() [T = physx::Sc::Scene::Block<void *, 32>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::Block<unsigned char, 128> >::getName() [T = physx::Sc::Scene::Block<unsigned char, 128>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::Block<unsigned char, 256> >::getName() [T = physx::Sc::Scene::Block<unsigned char, 256>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::Block<unsigned char, 384> >::getName() [T = physx::Sc::Scene::Block<unsigned char, 384>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::SimStats>::getName() [T = physx::Sc::SimStats]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ObjectIDTracker>::getName() [T = physx::Sc::ObjectIDTracker]", "PhysX/Source/Common/src/CmPreallocatingPool.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::PreallocatingRegion>::getName() [T = physx::Cm::PreallocatingRegion]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::PreallocatingPool<physx::Sc::StaticSim> >::getName() [T = physx::Cm::PreallocatingPool<physx::Sc::StaticSim>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::PreallocatingPool<physx::Sc::BodySim> >::getName() [T = physx::Cm::PreallocatingPool<physx::Sc::BodySim>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::PreallocatingPool<physx::Sc::ShapeSim> >::getName() [T = physx::Cm::PreallocatingPool<physx::Sc::ShapeSim>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::Pool<physx::Sc::ConstraintSim, physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintSim> > >::getName() [T = physx::shdfnd::Pool<physx::Sc::ConstraintSim, physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintSim> >]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::Pool<physx::Sc::ConstraintInteraction, physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintInteraction> > >::getName() [T = physx::shdfnd::Pool<physx::Sc::ConstraintInteraction, physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintInteraction> >]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::LLArticulationPool>::getName() [T = physx::Sc::LLArticulationPool]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::Pool<physx::Sc::SimStateData, physx::shdfnd::ReflectionAllocator<physx::Sc::SimStateData> > >::getName() [T = physx::shdfnd::Pool<physx::Sc::SimStateData, physx::shdfnd::ReflectionAllocator<physx::Sc::SimStateData> >]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Client *>::getName() [T = physx::Sc::Client *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Client>::getName() [T = physx::Sc::Client]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintProjectionManager>::getName() [T = physx::Sc::ConstraintProjectionManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::SqBoundsManager>::getName() [T = physx::Sc::SqBoundsManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsContext>::getName() [T = physx::PxsContext]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::BoundsArray>::getName() [T = physx::Bp::BoundsArray]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::SimpleAABBManager>::getName() [T = physx::Bp::SimpleAABBManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::StaticCore>::getName() [T = physx::Sc::StaticCore]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::NPhaseCore>::getName() [T = physx::Sc::NPhaseCore]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::BodyCore *>::getName() [T = physx::Sc::BodyCore *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Interaction *>::getName() [T = physx::Sc::Interaction *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ConstraintCore *>::getName() [T = physx::Sc::ConstraintCore *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::Scene::SimpleBodyPair>::getName() [T = physx::Sc::Scene::SimpleBodyPair]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ArticulationSim>::getName() [T = physx::Sc::ArticulationSim]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ArticulationJointSim>::getName() [T = physx::Sc::ArticulationJointSim]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxvContactManagerTouchEvent>::getName() [T = physx::PxvContactManagerTouchEvent]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::postCCDPass> >::getName() [T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::postCCDPass>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePass> >::getName() [T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePass>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePassStage2> >::getName() [T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePassStage2>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePassStage3> >::getName() [T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::updateCCDSinglePassStage3>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::ccdBroadPhase> >::getName() [T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::ccdBroadPhase>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::ccdBroadPhaseAABB> >::getName() [T = physx::Cm::DelegateTask<physx::Sc::Scene, &physx::Sc::Scene::ccdBroadPhaseAABB>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxContactPairHeader>::getName() [T = physx::PxContactPairHeader]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ShapeSim *>::getName() [T = physx::Sc::ShapeSim *]", "static const char *physx::shdfnd::ReflectionAllocator<const physx::Sc::ShapeCore *>::getName() [T = const physx::Sc::ShapeCore *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ClothSim>::getName() [T = physx::Sc::ClothSim]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsContactManager *>::getName() [T = physx::PxsContactManager *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ElementInteractionMarker *>::getName() [T = physx::Sc::ElementInteractionMarker *]", "PhysX/Source/Common/src/CmPool.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsContactManager>::getName() [T = physx::PxsContactManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxFilterInfo>::getName() [T = physx::PxFilterInfo]", "static const char *physx::shdfnd::ReflectionAllocator<OverlapFilterTask *>::getName() [T = OverlapFilterTask *]", "./PhysX/Source/SimulationController/src/ScArticulationSim.cpp", "Articulation: could not allocate low-level resources.", "./PhysX/Source/SimulationController/src/ScSimulationController.cpp", "PhysX/Source/GeomUtils/src/GuGeometryUnion.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::Dy::ArticulationLink>::getName() [T = physx::Dy::ArticulationLink]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sc::ArticulationJointSim *>::getName() [T = physx::Sc::ArticulationJointSim *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::SpatialVector>::getName() [T = physx::Cm::SpatialVector]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::SpatialVectorV>::getName() [T = physx::Cm::SpatialVectorV]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::aos::Mat33V>::getName() [T = physx::shdfnd::aos::Mat33V]", "DB./PhysX/Source/SimulationController/src/ScBodyCore.cpp", "PxRigidDynamic: setting kinematic target failed, not enough memory.", "QuickHullConvexHullLib::findSimplex: Simplex input points appers to be almost at the same place", "QuickHullConvexHullLib::findSimplex: Simplex input points appers to be colinear.", "QuickHullConvexHullLib::findSimplex: Simplex input points appers to be coplanar.", "static const char *physx::shdfnd::ReflectionAllocator<local::QuickHullFace *>::getName() [T = local::QuickHullFace *]", "static const char *physx::shdfnd::ReflectionAllocator<local::QuickHullVertex *>::getName() [T = local::QuickHullVertex *]", "static const char *physx::shdfnd::ReflectionAllocator<local::QuickHullHalfEdge *>::getName() [T = local::QuickHullHalfEdge *]", "static const char *physx::shdfnd::ReflectionAllocator<local::ExpandPoint>::getName() [T = local::ExpandPoint]", "static const char *physx::shdfnd::ReflectionAllocator<local::QuickHull>::getName() [T = local::QuickHull]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxPlane>::getName() [T = physx::PxPlane]", "static const char *physx::shdfnd::ReflectionAllocator<physx::ConvexHull>::getName() [T = physx::ConvexHull]", "static const char *physx::shdfnd::ReflectionAllocator<physx::ConvexHull::HalfEdge>::getName() [T = physx::ConvexHull::HalfEdge]", "TriangleMesh: Enable mesh welding with 0 weld tolerance!", "TriangleMesh: triangles are too big, reduce their size to increase simulation stability!", "TriangleMesh: mesh is too big for this algo!", "TriangleMesh::loadFromDesc: desc.isValid() failed!", "TriangleMesh::loadFromDesc: mParams.midphaseDesc.isValid() failed!", "cleaning the mesh failed", "BV4 tree failed to build.", "BV32 tree failed to build.", "PhysX/Source/PhysXCooking/src/mesh/GrbTriangleMeshCooking.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::EdgeTriLookup>::getName() [T = physx::EdgeTriLookup]", "static const char *physx::shdfnd::ReflectionAllocator<physx::GrbTrimeshCookerHelper::SortedNeighbor>::getName() [T = physx::GrbTrimeshCookerHelper::SortedNeighbor]", "static const char *physx::shdfnd::ReflectionAllocator<physx::GrbTrimeshCookerHelper::SharpEdgeRange>::getName() [T = physx::GrbTrimeshCookerHelper::SharpEdgeRange]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::EdgeListBuilder>::getName() [T = physx::Gu::EdgeListBuilder]", "./PhysX/Source/PhysXCooking/src/convex/ConvexHullLib.cpp", "./PhysX/Source/PhysXCooking/src/convex/ConvexMeshBuilder.cpp", "Gu::ConvexMesh::loadFromDesc: desc.isValid() failed!", "Gu::ConvexMesh: Mesh has a negative volume! Is it open or do (some) faces have reversed winding? (Taking absolute value.)", "Gu::ConvexMesh: Error computing mesh mass properties!\n", "Gu::ConvexMesh::loadConvexHull: convex hull init failed!", "ConvexMeshBuilder::computeHullPolygons: compute convex hull polygons failed. Provided triangles dont form a convex hull.", "PxHullPolygon", "./PhysX/Source/PhysXCooking/src/convex/ConvexPolygonsBuilder.cpp", "ConvexHullBuilder: convex hull has more than 255 polygons!", "ConvexHullBuilder::CreateTrianglesFromPolygons: convex hull has a polygon with less than 3 vertices!", "./PhysX/Source/PhysXCooking/src/convex/InflationConvexHullLib.cpp", "Meshmerizer::extractHullPolygons: line strip extraction failed", "static const char *physx::shdfnd::ReflectionAllocator<Pair>::getName() [T = Pair]", "static const char *physx::shdfnd::ReflectionAllocator<local::Tri *>::getName() [T = local::Tri *]", "static const char *physx::shdfnd::ReflectionAllocator<local::Tri>::getName() [T = local::Tri]", "static const char *physx::shdfnd::ReflectionAllocator<physx::HullTriangleData>::getName() [T = physx::HullTriangleData]", "static const char *physx::shdfnd::ReflectionAllocator<local::ExpandPlane>::getName() [T = local::ExpandPlane]", "static const char *physx::shdfnd::ReflectionAllocator<int>::getName() [T = int]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxHullPolygon>::getName() [T = physx::PxHullPolygon]", "PxClothParticleData access through PxCloth::lockParticleData() while its still locked by last call.", "./PhysX/Source/PhysX/src/cloth/NpClothFabric.cpp", "NpClothFabric: double deletion detected!", "PhysX/Source/PhysX/src/buffering/ScbCloth.h", "Call to PxCloth::setParticles() not allowed while simulation is running.", "Call to PxCloth::setMotionConstraints() not allowed while simulation is running.", "Call to PxCloth::getMotionConstraints() not allowed while simulation is running.", "Call to PxCloth::setMotionConstraintConfig() not allowed while simulation is running.", "Call to PxCloth::getMotionConstraintScaleBias() not allowed while simulation is running.", "Call to PxCloth::setSeparationConstraints() not allowed while simulation is running.", "Call to PxCloth::getSeparationConstraints() not allowed while simulation is running.", "Call to PxCloth::setParticleAccelerations() not allowed while simulation is running.", "Call to PxCloth::getParticleAccelerations() not allowed while simulation is running.", "Call to PxCloth::addCollisionSphere() not allowed while simulation is running.", "Call to PxCloth::removeCollisionSphere() not allowed while simulation is running.", "Call to PxCloth::setCollisionSpheres() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionSpheres() not allowed while simulation is running.", "Call to PxCloth::getCollisionData() not allowed while simulation is running.", "Call to PxCloth::addCollisionCapsule() not allowed while simulation is running.", "Call to PxCloth::removeCollisionCapsule() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionCapsules() not allowed while simulation is running.", "Call to PxCloth::addCollisionTriangle() not allowed while simulation is running.", "Call to PxCloth::removeCollisionTriangle() not allowed while simulation is running.", "Call to PxCloth::setCollisionTriangles() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionTriangles() not allowed while simulation is running.", "Call to PxCloth::addCollisionPlane() not allowed while simulation is running.", "Call to PxCloth::removeCollisionPlane() not allowed while simulation is running.", "Call to PxCloth::setCollisionPlanes() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionPlanes() not allowed while simulation is running.", "Call to PxCloth::addCollisionConvex() not allowed while simulation is running.", "Call to PxCloth::removeCollisionConvex() not allowed while simulation is running.", "Call to PxCloth::getNbCollisionConvexes() not allowed while simulation is running.", "Call to PxCloth::setVirtualParticles() not allowed while simulation is running.", "Call to PxCloth::getNbVirtualParticles() not allowed while simulation is running.", "Call to PxCloth::getVirtualParticles() not allowed while simulation is running.", "Call to PxCloth::getNbVirtualParticleWeights() not allowed while simulation is running.", "Call to PxCloth::getVirtualParticleWeights() not allowed while simulation is running.", "Call to PxCloth::setGlobalPose() not allowed while simulation is running.", "Call to PxCloth::getGlobalPose() not allowed while simulation is running.", "Call to PxCloth::setTargetPose() not allowed while simulation is running.", "Call to PxCloth::setExternalAcceleration() not allowed while simulation is running.", "Call to PxCloth::getExternalAcceleration() not allowed while simulation is running.", "Call to PxCloth::setLinearInertiaScale() not allowed while simulation is running.", "Call to PxCloth::getLinearInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setAngularInertiaScale() not allowed while simulation is running.", "Call to PxCloth::getAngularInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setCentrifugalInertiaScale() not allowed while simulation is running.", "Call to PxCloth::getCentrifugalInertiaScale() not allowed while simulation is running.", "Call to PxCloth::setDampingCoefficient() not allowed while simulation is running.", "Call to PxCloth::getDampingCoefficient() not allowed while simulation is running.", "Call to PxCloth::setFrictionCoefficient() not allowed while simulation is running.", "Call to PxCloth::getFrictionCoefficient() not allowed while simulation is running.", "Call to PxCloth::setLinearDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::getLinearDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::setAngularDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::getAngularDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::setCollisionMassScale() not allowed while simulation is running.", "Call to PxCloth::getCollisionMassScale() not allowed while simulation is running.", "Call to PxCloth::setSelfCollisionDistance() not allowed while simulation is running.", "Call to PxCloth::getSelfCollisionDistance() not allowed while simulation is running.", "Call to PxCloth::setSelfCollisionStiffness() not allowed while simulation is running.", "Call to PxCloth::getSelfCollisionStiffness() not allowed while simulation is running.", "Call to PxCloth::setSelfCollisionIndices() not allowed while simulation is running.", "Call to PxCloth::getSelfCollisionIndices() not allowed while simulation is running.", "Call to PxCloth::setRestPositions() not allowed while simulation is running.", "Call to PxCloth::getRestPositions() not allowed while simulation is running.", "Call to PxCloth::setSolverFrequency() not allowed while simulation is running.", "Call to PxCloth::getSolverFrequency() not allowed while simulation is running.", "Call to PxCloth::setStiffnessFrequency() not allowed while simulation is running.", "Call to PxCloth::getStiffnessFrequency() not allowed while simulation is running.", "Call to PxCloth::setStretchConfig() not allowed while simulation is running.", "Call to PxCloth::setTetherConfig() not allowed while simulation is running.", "Call to PxCloth::getStretchConfig() not allowed while simulation is running.", "Call to PxCloth::getTetherConfig() not allowed while simulation is running.", "Call to PxCloth::setClothFlag() not allowed while simulation is running.", "Call to PxCloth::getClothFlags() not allowed while simulation is running.", "Call to PxCloth::setWindVelocity() not allowed while simulation is running.", "Call to PxCloth::getWindVelocity() not allowed while simulation is running.", "Call to PxCloth::setDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::getDragCoefficient() not allowed while simulation is running.", "Call to PxCloth::setLiftCoefficient() not allowed while simulation is running.", "Call to PxCloth::getLiftCoefficient() not allowed while simulation is running.", "Call to PxCloth::isSleeping() not allowed while simulation is running.", "Call to PxCloth::getSleepLinearVelocity() not allowed while simulation is running.", "Call to PxCloth::setSleepLinearVelocity() not allowed while simulation is running.", "Call to PxCloth::setWakeCounter() not allowed while simulation is running.", "Call to PxCloth::getWakeCounter() not allowed while simulation is running.", "Call to PxCloth::wakeUp() not allowed while simulation is running.", "Call to PxCloth::putToSleep() not allowed while simulation is running.", "Call to PxCloth::lockParticleData() not allowed while simulation is running.", "Call to PxCloth::getPreviousTimeStep() not allowed while simulation is running.", "Call to PxCloth::getWorldBounds() not allowed while simulation is running.", "Call to PxCloth::setSimulationFilterData() not allowed while simulation is running.", "Call to PxCloth::getSimulationFilterData() not allowed while simulation is running.", "Call to PxCloth::setContactOffset() not allowed while simulation is running.", "Call to PxCloth::getContactOffset() not allowed while simulation is running.", "Call to PxCloth::setRestOffset() not allowed while simulation is running.", "Call to PxCloth::getRestOffset() not allowed while simulation is running.", "PxClothFabric", "PxCloth", "ScbType::Enum", "Scb::Base", "Scb::Scene", "mControlState", "PxU8*", "mStreamPtr", "Scb::Actor", "Scb::RigidObject", "mBodyCore", "mBufferedBody2World", "mBufferedLinVelocity", "mBufferedAngVelocity", "mBufferedWakeCounter", "mBufferedIsSleeping", "mBodyBufferFlags", "mStatic", "mBufferedForce", "mBufferedTorque", "mBrokenFlag", "mPxAggregate", "mAggregateID", "mMaxNbActors", "mSelfCollide", "./PhysX/Source/PhysX/src/buffering/ScbShape.cpp", "PxShape::setMaterials() failed. Out of memory. Call will be ignored.", "static const char *physx::shdfnd::ReflectionAllocator<physx::Scb::Actor *>::getName() [T = physx::Scb::Actor *]", "Adding cloth to the scene failed!", "PxScene::addBroadPhaseRegion() not allowed while simulation is running. Call will be ignored.", "PxScene::removeBroadPhaseRegion() not allowed while simulation is running. Call will be ignored.", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxFlags<physx::PxClientBehaviorFlag::Enum, unsigned char> >::getName() [T = physx::PxFlags<physx::PxClientBehaviorFlag::Enum, unsigned char>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Scb::Shape *>::getName() [T = physx::Scb::Shape *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Scb::RemovedShape>::getName() [T = physx::Scb::RemovedShape]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Scb::MaterialEvent>::getName() [T = physx::Scb::MaterialEvent]", "Root articulation link must have NULL parent pointer!", "Non-root articulation link must have valid parent pointer!", "PxConstraint: Add to rigid actor 0: Constraint already added", "PxConstraint: Add to rigid actor 1: Constraint already added", "./PhysX/Source/PhysX/src/NpFactory.cpp", "Cloth not registered: returned NULL.", "Cloth initialization failed: returned NULL.", "Articulations not registered: returned NULL.", "./PhysX/Source/PhysX/src/NpReadCheck.cpp", "An API read call (%s) was made from thread %d but PxScene::lockRead() was not called first, note that when PxSceneFlag::eREQUIRE_RW_LOCK is enabled all API reads and writes must be wrapped in the appropriate locks.", "Overlapping API read and write call detected during %s from thread %d! Note that read operations to the SDK must not be overlapped with write calls, else the resulting behavior is undefined.", "Leaving %s on thread %d, an API overlapping write on another thread was detected.", "./PhysX/Source/PhysX/src/NpRigidStatic.cpp", "PxRigidStatic::setGlobalPose: Actor is part of a pruning structure, pruning structure is now invalid!", "NpSceneQueries.sceneQueriesStaticPrunerUpdate", "NpSceneQueries.sceneQueriesDynamicPrunerUpdate", "NpScene.execution", "NpScene.collide", "NpScene.solve", "./PhysX/Source/PhysX/src/NpScene.cpp", "PxScene::release(): Scene is still being simulated! PxScene::fetchResults() is called implicitly.", "PxScene::addActor(): actor is in a pruning structure and cannot be added to a scene directly, use addActors(const PxPruningStructure& )", "PxScene::addActor(): Actor already assigned to a scene. Call will be ignored!", "PxScene::addActor(): Individual articulation links can not be added to the scene", "PxScene::addActors(): Provided pruning structure is not valid.", "PxScene::addActors() not allowed while simulation is running.", "PxScene::addActors(): Actor already assigned to a scene. Call will be ignored!", "PxScene::addActors(): actor is in a pruning structure and cannot be added to a scene directly, use addActors(const PxPruningStructure& )", "PxScene::addRigidActors(): articulation link not permitted", "PxScene::removeActors(): Actor", "PxScene::removeActor(): Individual articulation links can not be removed from the scene", "PxScene::removeActor(): Actor", "PxScene::addArticulation(): Articulations are not currently supported when PxSceneFlag::eENABLE_GPU_DYNAMICS is set!", "PxScene::addArticulation(): Articulation already assigned to a scene. Call will be ignored!", "PxScene::addArticulation(): Articulation link with zero mass added to scene; defaulting mass to 1", "PxScene::addArticulation(): Articulation link with zero moment of inertia added to scene; defaulting inertia to (1,1,1)", "PxScene::removeArticulation(): Articulation", "PxScene::addAggregate(): Aggregate already assigned to a scene. Call will be ignored!", "PxScene::removeAggregate(): Aggregate", "PxScene::getRenderBuffer() not allowed while simulation is running.", "PxScene::getSimulationStatistics() not allowed while simulation is running. Call will be ignored.", "PxScene::addBroadPhaseRegion(): region bounds are empty. Call will be ignored.", "PxScene::resetFiltering(): only PxParticleBase and PxRigidActor support this operation!", "PxScene::simulate: Simulation is still processing last simulate call, you should call fetchResults()!", "PxScene::advance: advance() called illegally! advance() needed to be called after fetchCollision() and before fetchResult()!!", "PxScene::collide: collide() called illegally! If it isn't the first frame, collide() needed to be called between fetchResults() and fetchCollision(). Otherwise, collide() needed to be called before fetchCollision()", "At least one object is out of the broadphase bounds. To manage those objects, define a PxBroadPhaseCallback for each used client.", "PxScene::fetchCollision: fetchCollision() should be called after collide() and before advance()!", "PxScene::fetchResults: fetchResults() called illegally! It must be called after advance() or simulate()", "PXScene::fetchResultsStart: fetchResultsStart() called illegally! It must be called after advance() or simulate()", "PxScene::flushSimulation(): This call is not allowed while the simulation is running. Call will be ignored", "PxScene::flushQueryUpdates(): This call is not allowed while the simulation is running. Call will be ignored", "setVisualizationParameter: parameter out of range.", "setVisualizationParameter: value must be larger or equal to 0.", "getVisualizationParameter: param is not an enum.", "PxScene::unlockRead() called without matching call to PxScene::lockRead(), behaviour will be undefined.", "PxScene::lockWrite() detected after a PxScene::lockRead(), lock upgrading is not supported, behaviour will be undefined.", "PxScene::unlockWrite() called without matching call to PxScene::lockWrite(), behaviour will be undefined.", "PxScene::shiftOrigin() not allowed while simulation is running. Call will be ignored.", "PxScene::fetchSceneQueries was not called!", "PxScene::fetchQueries: fetchQueries() called illegally! It must be called after sceneQueriesUpdate()", "./PhysX/Source/PhysX/src/NpSceneQueries.cpp", "./PhysX/Source/PhysX/src/NpWriteCheck.cpp", "Leaving %s on thread %d, an overlapping API read or write by another thread was detected.", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpPtrTableStorageManager::PtrBlock<4> >::getName() [T = physx::NpPtrTableStorageManager::PtrBlock<4>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpPtrTableStorageManager::PtrBlock<16> >::getName() [T = physx::NpPtrTableStorageManager::PtrBlock<16>]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpPtrTableStorageManager::PtrBlock<64> >::getName() [T = physx::NpPtrTableStorageManager::PtrBlock<64>]", "PhysX/Source/PhysX/src/NpPtrTableStorageManager.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpClothFabric>::getName() [T = physx::NpClothFabric]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpCloth>::getName() [T = physx::NpCloth]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpArticulationJoint>::getName() [T = physx::NpArticulationJoint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpArticulationLink>::getName() [T = physx::NpArticulationLink]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpArticulation>::getName() [T = physx::NpArticulation]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpMaterial>::getName() [T = physx::NpMaterial]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpConstraint>::getName() [T = physx::NpConstraint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpAggregate>::getName() [T = physx::NpAggregate]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpShape>::getName() [T = physx::NpShape]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpRigidStatic>::getName() [T = physx::NpRigidStatic]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpRigidDynamic>::getName() [T = physx::NpRigidDynamic]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpConnectorArray>::getName() [T = physx::NpConnectorArray]", "Articulation initialization failed: returned NULL.", "Articulation link initialization failed: returned NULL.", "Articulation link initialization failed due to joint creation failure: returned NULL.", "NpScene.completion", "%s not assigned to scene or assigned to another scene. Call will be ignored!", "PhysX/Source/PhysX/src/buffering/ScbScene.h", "PxScene::getActiveTransforms() not allowed while simulation is running. Call will be ignored.", "PxScene::getActiveActors() not allowed while simulation is running. Call will be ignored.", "PxScene::setClothInterCollisionDistance() not allowed while simulation is running. Call will be ignored.", "PxScene::setClothInterCollisionStiffness() not allowed while simulation is running. Call will be ignored.", "PxScene::setClothInterCollisionNbIterations() not allowed while simulation is running. Call will be ignored.", "PxScene::setSimulationEventCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setContactModifyCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setCCDContactModifyCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setBroadPhaseCallback() not allowed while simulation is running. Call will be ignored.", "PxScene::setCCDMaxPasses() not allowed while simulation is running. Call will be ignored.", "PxScene::setFilterShaderData() not allowed while simulation is running. Call will be ignored.", "./PhysX/Source/PhysX/src/NpShapeManager.cpp", "PxArticulation", "PxRigidStatic", "NpContactCallbackTask", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpPtrTableStorageManager>::getName() [T = physx::NpPtrTableStorageManager]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpFactory>::getName() [T = physx::NpFactory]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpClothFabric *>::getName() [T = physx::NpClothFabric *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpVolumeCache *>::getName() [T = physx::NpVolumeCache *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxRigidActor *>::getName() [T = physx::PxRigidActor *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxBounds3>::getName() [T = physx::PxBounds3]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpVolumeCache>::getName() [T = physx::NpVolumeCache]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpBatchQuery>::getName() [T = physx::NpBatchQuery]", "static const char *physx::shdfnd::ReflectionAllocator<physx::NpBatchQuery *>::getName() [T = physx::NpBatchQuery *]", "PxScene::sweep(): first geometry object parameter must be sphere, capsule, box or convex geometry.", "./PhysX/Source/PhysXExtensions/src/serialization/SnSerialization.cpp", "PxSerialization::isSerializable: Reference id %lu used both in current collection and in externalReferences. Please use unique identifiers.", "PxSerialization::isSerializable: Object of type %s references a missing object of type %s. The missing object needs to be added to either the current collection or the externalReferences collection.", "PxSerialization::isSerializable: Object of type %s in externalReferences collection requires an id.", "PxSerialization::isSerializable: Object of type %s references a missing serial object of type %s. Please completed the collection or specify an externalReferences collection containing the object.", "PxSerialization::isSerializable: An object of type %s is subordinate but not required by other objects in the collection (orphan). Please remove the object from the collection or add its owner.", "PxSerialization::isSerializable: Object of type %s in externalReferences references an object of type %s in collection (circular dependency).", "./PhysX/Source/PhysXExtensions/src/serialization/SnSerializationRegistry.cpp", "PxSerializationRegistry::release(): some registered PxSerializer instances were not unregistered", "PxSerializationRegistry::release(): some registered PxRepXSerializer instances were not unregistered", "PxSerializationRegistry::registerSerializer: Type %d has already been registered", "PxSerializationRegistry::unregisterSerializer: failed to find PxSerializer instance for type %d", "PxSerializationRegistry::registerRepXSerializer: Type %d has already been registered", "PxSerializationRegistry::unregisterRepXSerializer: failed to find PxRepXSerializer instance for type %d", "%x-%d\n", "static const char *physx::shdfnd::ReflectionAllocator<const char *>::getName() [T = const char *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxMetaDataEntry>::getName() [T = physx::PxMetaDataEntry]", "static const char *physx::shdfnd::ReflectionAllocator<(anonymous namespace)::CollectionSorter::Element>::getName() [T = (anonymous namespace)::CollectionSorter::Element]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::Pair<physx::PxBase *, unsigned long> >::getName() [T = physx::shdfnd::Pair<physx::PxBase *, unsigned long>]", "win32", "win64", "linux32", "linux64", "macOSX32", "macOSX64", "android", "ios64", "xboxone", "switch32", "switch64", "win8arm", "psp2", "n3ds", "lumin", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sn::ConvX>::getName() [T = physx::Sn::ConvX]", "static const char *physx::shdfnd::ReflectionAllocator<void (*)(physx::PxOutputStream &)>::getName() [T = void (*)(physx::PxOutputStream &)]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Sn::SerializationRegistry>::getName() [T = physx::Sn::SerializationRegistry]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTriangle>::getName() [T = physx::PxTriangle]", "libOpenSLES.so", "fmod", "../android/src/fmod_os_misc.cpp", "<FMOD>", "fmodoutput.wav", "../src/fmod_output_wavwriter_nrt.cpp", "WAVE", "../src/fmod_output_software.cpp", "NoSound Driver", "../src/fmod_output_nosound_nrt.cpp", "../src/fmod_output_nosound.cpp", "../src/fmod_output_emulated.cpp", "?????", "../src/fmod_thread.cpp", "../src/fmod_net.cpp", "HTTP/1.0", "HTTP/1.1", "%s (%d)", "../src/fmod_file_net.cpp", "GET %s HTTP/1.1\r\nHost: %s\r\nUser-Agent: %s\r\nIcy-MetaData:1\r\n", "Proxy-Authorization: Basic ", "Connection: close\r\n\r\n", "Content-Length:", "Transfer-Encoding: chunked", "icy-metaint:", "icy-br:", "icy-br", "icy-pub:", "icy-pub", "icy-notice1:", "icy-notice1", "icy-notice2:", "icy-notice2", "icy-name:", "icy-name", "icy-genre:", "icy-genre", "icy-url:", "icy-url", "icy-irc:", "icy-irc", "icy-icq:", "icy-icq", "icy-aim:", "icy-aim", "ice-bitrate: ", "ice-bitrate", "ice-description: ", "ice-description", "ice-public: ", "ice-public", "ice-name: ", "ice-name", "ice-genre: ", "ice-genre", "ice-url: ", "ice-url", "ice-irc: ", "ice-irc", "ice-icq: ", "ice-icq", "ice-aim: ", "ice-aim", "ice-audio-info: ", "ice-audio-info", "ice-private: ", "ice-private", "Location: ", "Winamp", ".ogg", ".mp3", "StreamTitle='", "ARTIST", "StreamUrl='", "FMOD file thread", "../src/fmod_file.cpp", "Room HF", "Decay Time", "Decay HF Ratio", "Reflections Delay", "Reverb Delay", "HF Reference", "Room LF", "LF Reference", "X94<", "FFT window size.  256, 512, 1024, 2048, 4096.  Default = 1024.  Increase this to reduce 'smearing'.  This effect is a warbling sound similar to when an mp3 is encoded at very low bitrates.", "Window overlap.  1 to 32.  Default = 4.  Increase this to reduce 'tremolo' effect.  Increasing it by a factor of 2 doubles the CPU usage.", "Maximum channels supported.  0 to 16.  0 = same as fmod's default output polyphony, 1 = mono, 2 = stereo etc.  See remarks for more.  Default = 0.  It is suggested to leave at 0!", "FMOD Pitch Shifter", "../src/fmod_dsp_pitchshift.cpp", "%.02f", "Octave range around the center frequency to filter.  0.2 to 5.0.  Default = 1.0.", "Frequency Gain.  0.05 to 3.0.  Default = 1.0.", "FMOD ParamEQ", "Time to ramp the silence to full in ms.  0.0 to 20000.0. Default = 5000.0.", "Lower volume range threshold to ignore.  0.0 to 1.0.  Default = 0.1.  Raise higher to stop amplification of very quiet signals.", "Maximum amplification allowed.  0.0 to 100000.0.  Default = 20.0.  1.0 = no amplification, higher values allow more boost.", "FMOD Normalize", "Lowpass resonance Q value. 0.0 to 127.0.  Default = 1.0", "FMOD IT Lowpass", "Lowpass resonance Q value. 1.0 to 10.0.  Default = 1.0.", "FMOD Lowpass", "Percentage of output fed back into input, in the range from 0.0 through 100.0. The default value is 50.", "Delay for left channel, in milliseconds, in the range from 1.0 through 2000.0. The default value is 500 ms.", "Delay for right channel, in milliseconds, in the range from 1.0 through 2000.0. The default value is 500 ms.", "Value that specifies whether to swap left and right delays with each successive echo. The default value is zero, meaning no swap. Possible values are defined as 0.0 (equivalent to FALSE) and 1.0 (equivalent to TRUE).", "FMOD IT Echo", "../src/fmod_dsp_itecho.cpp", "Highpass cutoff frequency in hz.  10.0 to 22000.0.  Default = 1000.0", "FMOD Highpass Simple", "Highpass resonance Q value. 1.0 to 10.0.  Default = 1.0.", "FMOD Highpass", "Volume of flange signal to pass to output.  0.0 to 1.0. Default = 0.55.", "Flange depth.  0.01 to 1.0.  Default = 1.0.", "Flange speed in hz.  0.0 to 20.0.  Default = 0.1.", "FMOD Flange", "../src/fmod_dsp_flange.cpp", "Echo decay per delay.  0 to 1.  1.0 = No decay, 0.0 = total decay.  Default = 0.5.", "Maximum channels supported.  0 to 16.  0 = same as fmod's default output polyphony, 1 = mono, 2 = stereo etc.  Default = 0.  It is suggested to leave at 0!", "Volume of original signal to pass to output.  0.0 to 1.0. Default = 1.0.", "Volume of echo delay signal to pass to output.  0.0 to 1.0. Default = 1.0.", "FMOD Echo", "../src/fmod_dsp_echo.cpp", "FMOD Distortion", "Channel #0 delay in ms.  0  to 10000.  Default = 0.", "Channel #1 delay in ms.  0  to 10000.  Default = 0.", "Channel #2 delay in ms.  0  to 10000.  Default = 0.", "Channel #3 delay in ms.  0  to 10000.  Default = 0.", "Channel #4 delay in ms.  0  to 10000.  Default = 0.", "Channel #5 delay in ms.  0  to 10000.  Default = 0.", "Channel #6 delay in ms.  0  to 10000.  Default = 0.", "Channel #7 delay in ms.  0  to 10000.  Default = 0.", "Channel #8 delay in ms.  0  to 10000.  Default = 0.", "Channel #9 delay in ms.  0  to 10000.  Default = 0.", "Channel #10 delay in ms.  0  to 10000.  Default = 0.", "Channel #11 delay in ms.  0  to 10000.  Default = 0.", "Channel #12 delay in ms.  0  to 10000.  Default = 0.", "Channel #13 delay in ms.  0  to 10000.  Default = 0.", "Channel #14 delay in ms.  0  to 10000.  Default = 0.", "Channel #15 delay in ms.  0  to 10000.  Default = 0.", "Maximum delay in ms.  1  to 10000.  Default = 10.", "FMOD Delay", "../src/fmod_dsp_delay.cpp", "Compressor attack time. [10ms,200ms]  Default = 50ms.", "Compressor release time. [10ms,1000ms]  Default = 50ms.", "Compressor make up gain [0dB, 30dB]  Default = 0dB.", "FMOD Compressor", "../src/fmod_dsp_codecpool.cpp", "../src/fmod_dsp_codec.cpp", "Volume of 1st chorus tap.  0.0 to 1.0.  Default = 0.5.", "Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap.  0.0 to 1.0.  Default = 0.5.", "Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap.  0.0 to 1.0.  Default = 0.5.", "Chorus delay in ms.  0.1 to 100.0.  Default = 40.0 ms.", "Chorus modulation rate in hz.  0.0 to 20.0.  Default = 0.8 hz.", "Chorus modulation depth.  0.0 to 1.0.  Default = 0.03.", "Chorus feedback.  Controls how much of the wet signal gets fed back into the chorus buffer.  -1.0 to 1.0.  Default = 0.0.", "FMOD Chorus", "../src/fmod_dsp_chorus.cpp", "Extended Module: ", "Number of channels", "../src/fmod_codec_xm.cpp", "Sample name %d", "OggS", "FMOD XM Target Unit", "RIFF", "../src/fmod_codec_wav.cpp", "FMOD Tag Reader Codec", "ALBUM", "COMMENT", "GENRE", "../src/fmod_codec_tag.cpp", "SCRM", "../src/fmod_codec_s3m.cpp", "FMOD S3M Target Unit", "../src/fmod_codec_oggvorbis.cpp", "FMOD Ogg Vorbis Codec", "NONAME", "FMOD MPEG Codec", "../src/fmod_codec_mpeg.cpp", "Sample Rate Change", "M.K.", "M!K!", "6CHN", "8CHN", "FLT4", "../src/fmod_codec_mod.cpp", "FMOD MOD Target Unit", "../src/fmod_codec_it.cpp", "IMPM", "PNAM", "CNAM", "Flanger", "Song message", "IMPI", "IMPS", "FMOD IT final mixdown unit", "FMOD IT Target Unit", "FMOD Vorbis Codec", "../src/fmod_codec_fsbvorbis.cpp", ",4d%", "\n\rY\t", "\u000b\rY\t", "\n\rY\t", "FSB3", "FSB4", "FSB2", "../src/fmod_codec_fsb.cpp", "AIFC", "AIFF", "../src/fmod_codec_aiff.cpp", "COMM", "twos", "sowt", "SSND", "INST", "FSB5", "../src/fmod_codec_fsb5.cpp", "FMOD WaveTable Unit", "FMOD Resampler Unit", "EmulatedChannel DSPHead Unit", "java/lang/reflect/Method", "getAnnotatedReturnType", "getDefaultValue", "getExceptionTypes", "getGenericExceptionTypes", "getGenericParameterTypes", "getGenericReturnType", "getParameterAnnotations", "()[[Ljava/lang/annotation/Annotation;", "getParameterCount", "getParameterTypes", "getReturnType", "(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", "isBridge", "isVarArgs", "java/lang/Long", "(JJ)I", "(Ljava/lang/Long;)I", "(Ljava/lang/String;)Ljava/lang/Long;", "(JJ)J", "(Ljava/lang/String;J)Ljava/lang/Long;", "(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;", "(J)J", "parseLong", "(Ljava/lang/String;I)J", "parseUnsignedLong", "(JI)J", "(JI)Ljava/lang/String;", "(J)Ljava/lang/Long;", "(Ljava/lang/String;I)Ljava/lang/Long;", "java/lang/Character", "COMBINING_SPACING_MARK", "CONNECTOR_PUNCTUATION", "CURRENCY_SYMBOL", "DASH_PUNCTUATION", "DECIMAL_DIGIT_NUMBER", "DIRECTIONALITY_ARABIC_NUMBER", "DIRECTIONALITY_BOUNDARY_NEUTRAL", "DIRECTIONALITY_COMMON_NUMBER_SEPARATOR", "DIRECTIONALITY_EUROPEAN_NUMBER", "DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR", "DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR", "DIRECTIONALITY_LEFT_TO_RIGHT", "DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING", "DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE", "DIRECTIONALITY_NONSPACING_MARK", "DIRECTIONALITY_OTHER_NEUTRALS", "DIRECTIONALITY_PARAGRAPH_SEPARATOR", "DIRECTIONALITY_POP_DIRECTIONAL_FORMAT", "DIRECTIONALITY_RIGHT_TO_LEFT", "DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC", "DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING", "DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE", "DIRECTIONALITY_SEGMENT_SEPARATOR", "DIRECTIONALITY_UNDEFINED", "DIRECTIONALITY_WHITESPACE", "ENCLOSING_MARK", "END_PUNCTUATION", "FINAL_QUOTE_PUNCTUATION", "INITIAL_QUOTE_PUNCTUATION", "LETTER_NUMBER", "LINE_SEPARATOR", "LOWERCASE_LETTER", "MATH_SYMBOL", "MAX_CODE_POINT", "MAX_HIGH_SURROGATE", "MAX_LOW_SURROGATE", "MAX_RADIX", "MAX_SURROGATE", "MIN_CODE_POINT", "MIN_HIGH_SURROGATE", "MIN_LOW_SURROGATE", "MIN_RADIX", "MIN_SUPPLEMENTARY_CODE_POINT", "MIN_SURROGATE", "MODIFIER_LETTER", "MODIFIER_SYMBOL", "NON_SPACING_MARK", "OTHER_LETTER", "OTHER_NUMBER", "OTHER_PUNCTUATION", "OTHER_SYMBOL", "PRIVATE_USE", "SPACE_SEPARATOR", "START_PUNCTUATION", "TITLECASE_LETTER", "UNASSIGNED", "UPPERCASE_LETTER", "charCount", "charValue", "(Ljava/lang/CharSequence;I)I", "([CI)I", "([CII)I", "(Ljava/lang/CharSequence;II)I", "(CC)I", "(Ljava/lang/Character;)I", "digit", "(CI)I", "forDigit", "(II)C", "getDirectionality", "(C)B", "getNumericValue", "(C)I", "highSurrogate", "isAlphabetic", "isBmpCodePoint", "isDefined", "(C)Z", "isDigit", "isHighSurrogate", "isISOControl", "isIdentifierIgnorable", "isIdeographic", "isJavaIdentifierPart", "isJavaIdentifierStart", "isJavaLetter", "isJavaLetterOrDigit", "isLetter", "isLetterOrDigit", "isLowSurrogate", "isLowerCase", "isMirrored", "isSpace", "isSpaceChar", "isSupplementaryCodePoint", "isSurrogate", "isSurrogatePair", "(CC)Z", "isTitleCase", "isUnicodeIdentifierPart", "isUnicodeIdentifierStart", "isUpperCase", "isValidCodePoint", "isWhitespace", "lowSurrogate", "([CIIII)I", "(C)C", "toChars", "(I)[C", "(I[CI)I", "toCodePoint", "toTitleCase", "(C)Ljava/lang/Character;", "(C)V", "PxTask dispatched twice", "No GPU dispatcher", "Unknown task type", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTaskDepTableRow>::getName() [T = physx::PxTaskDepTableRow]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTaskMgr>::getName() [T = physx::PxTaskMgr]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxTaskTableRow>::getName() [T = physx::PxTaskTableRow]", "/Users/builduser/buildslave/physx/build/PhysX/Source/GeomUtils/src/sweep/GuSweepCapsuleBox.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::BVDataPacked>::getName() [T = physx::Gu::BVDataPacked]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::AABBTreeNode>::getName() [T = physx::Gu::AABBTreeNode]", "static const char *physx::shdfnd::ReflectionAllocator<BV4BuildParams::Slab>::getName() [T = BV4BuildParams::Slab]", "/Users/builduser/buildslave/physx/build/PhysX/Source/GeomUtils/src/mesh/GuBV4.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::IndTri32>::getName() [T = physx::Gu::IndTri32]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::IndTri16>::getName() [T = physx::Gu::IndTri16]", "PxsContext.postCCDSweep", "PxsContext.postCCDAdvance", "PxsContext.postCCDDepenetrate", "./PhysX/Source/LowLevel/software/src/PxsCCD.cpp", "./PhysX/Source/LowLevel/software/src/PxsContext.cpp", "./PhysX/Source/LowLevel/software/src/PxsDefaultMemoryManager.cpp", "./PhysX/Source/LowLevel/software/src/PxsNphaseImplementationContext.cpp", "PxsContext.CCDSweep", "PxsContext.CCDAdvance", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDPair *>::getName() [T = physx::PxsCCDPair *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::SpherePersistentContactManifold>::getName() [T = physx::Gu::SpherePersistentContactManifold]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::LargePersistentContactManifold>::getName() [T = physx::Gu::LargePersistentContactManifold]", "PhysX/Source/LowLevel/software/include/PxsDefaultMemoryManager.h", "PxsContext.contactManagerDiscreteUpdate", "PostThirdPassTask", "PhysX/Source/LowLevel/software/include/PxsCCD.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDBody, 128>::BlockInfo>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDBody, 128>::BlockInfo]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDBody, 128>::Block>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDBody, 128>::Block]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDOverlap, 128>::BlockInfo>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDOverlap, 128>::BlockInfo]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDOverlap, 128>::Block>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDOverlap, 128>::Block]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDShape, 128>::BlockInfo>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDShape, 128>::BlockInfo]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDShape, 128>::Block>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDShape, 128>::Block]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDPair, 128>::BlockInfo>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDPair, 128>::BlockInfo]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBlockArray<physx::PxsCCDPair, 128>::Block>::getName() [T = physx::PxsCCDBlockArray<physx::PxsCCDPair, 128>::Block]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsRigidBody *>::getName() [T = physx::PxsRigidBody *]", "static const char *physx::shdfnd::ReflectionAllocator<const physx::PxsCCDBody *>::getName() [T = const physx::PxsCCDBody *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsCCDBody *>::getName() [T = physx::PxsCCDBody *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::NodeIndex>::getName() [T = physx::IG::NodeIndex]", "static const char *physx::shdfnd::ReflectionAllocator<physx::shdfnd::VirtualAllocatorCallback *>::getName() [T = physx::shdfnd::VirtualAllocatorCallback *]", "PhysX/Source/Common/src/CmPriorityQueue.h", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::QueueElement>::getName() [T = physx::IG::QueueElement]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::Node>::getName() [T = physx::IG::Node]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::Edge>::getName() [T = physx::IG::Edge]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::EdgeInstance>::getName() [T = physx::IG::EdgeInstance]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::Island>::getName() [T = physx::IG::Island]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::TraversalState>::getName() [T = physx::IG::TraversalState]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PartitionEdge *>::getName() [T = physx::PartitionEdge *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsContactManagerOutput>::getName() [T = physx::PxsContactManagerOutput]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::Cache>::getName() [T = physx::Gu::Cache]", "static const char *physx::shdfnd::ReflectionAllocator<physx::IG::ConstraintOrContactManager>::getName() [T = physx::IG::ConstraintOrContactManager]", "./PhysX/Source/LowLevel/common/src/pipeline/PxcNpContactPrepShared.cpp", "./PhysX/Source/LowLevel/common/src/pipeline/PxcNpMemBlockPool.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxcNpMemBlock *>::getName() [T = physx::PxcNpMemBlock *]", "/Users/builduser/buildslave/physx/build/PhysX/Source/LowLevelAABB/src/BpSimpleAABBManager.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::FilterGroup::Enum>::getName() [T = physx::Bp::FilterGroup::Enum]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::AABBOverlap>::getName() [T = physx::Bp::AABBOverlap]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::AggPair>::getName() [T = physx::Bp::AggPair]", "AggregateBoundsComputationTask", "FinalizeUpdateTask", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::Aggregate *>::getName() [T = physx::Bp::Aggregate *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::PersistentSelfCollisionPairs>::getName() [T = physx::Bp::PersistentSelfCollisionPairs]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::VolumeData>::getName() [T = physx::Bp::VolumeData]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::Aggregate>::getName() [T = physx::Bp::Aggregate]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::PersistentActorAggregatePair>::getName() [T = physx::Bp::PersistentActorAggregatePair]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::PersistentAggregateAggregatePair>::getName() [T = physx::Bp::PersistentAggregateAggregatePair]", "static const char *physx::shdfnd::ReflectionAllocator<void *>::getName() [T = void *]", "./PhysX/Source/LowLevelAABB/src/BpBroadPhase.cpp", "./PhysX/Source/LowLevelAABB/src/BpBroadPhaseSap.cpp", "./PhysX/Source/LowLevelAABB/src/BpBroadPhaseSapAux.cpp", "BpSAP.updateWork", "BpSAP.postUpdateWork", "BpBroadphaseSap.batchUpdate", "BpMBP.updateWork", "BpMBP.postUpdateWork", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::BroadPhaseMBP>::getName() [T = physx::Bp::BroadPhaseMBP]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::BroadPhaseSap>::getName() [T = physx::Bp::BroadPhaseSap]", "PhysX/Source/Common/src/CmTmpMem.h", "./PhysX/Source/LowLevelDynamics/src/DyConstraintPartition.cpp", "./PhysX/Source/LowLevelDynamics/src/DySolverControl.cpp", "./PhysX/Source/LowLevelDynamics/src/DySolverControlPF.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxSolverConstraintDesc>::getName() [T = physx::PxSolverConstraintDesc]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Dy::ArticulationSolverDesc>::getName() [T = physx::Dy::ArticulationSolverDesc]", "Warning: articulation ill-conditioned or under severe stress, joint limit ignored", "Warning: articulation ill-conditioned or under severe stress, tangential spring ignored", "./PhysX/Source/LowLevelDynamics/src/DyDynamics.cpp", "PhysX/Source/LowLevelDynamics/include/DyContext.h", "PxsDynamics.solverStart", "static const char *physx::shdfnd::ReflectionAllocator<physx::Dy::ThreadContext>::getName() [T = physx::Dy::ThreadContext]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsIndexedContactManager>::getName() [T = physx::PxsIndexedContactManager]", "static const char *physx::shdfnd::ReflectionAllocator<const physx::PxsIndexedContactManager *>::getName() [T = const physx::PxsIndexedContactManager *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Dy::CompoundContactManager>::getName() [T = physx::Dy::CompoundContactManager]", "PxsDynamics.solverConstraintPostProcess", "static const char *physx::shdfnd::ReflectionAllocator<physx::Dy::ContactPatch *>::getName() [T = physx::Dy::ContactPatch *]", "SolverArticulationUpdateTask", "PxsDynamics.solverEnd", "PxsDynamics.solverSetupSolve", "PxsDynamics.parallelSolver", "PxsDynamics.solverConstraintPartition", "PxsDynamics.createForceChangeThresholdStream", "PhysX/Source/LowLevelDynamics/include/DyThresholdTable.h", "PxsDynamics.createFinalizeContacts", "PxsDynamics.preIntegrate", "PxsDynamics.solverCreateFinalizeConstraints", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxConstraintBatchHeader>::getName() [T = physx::PxConstraintBatchHeader]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxSolverBody>::getName() [T = physx::PxSolverBody]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxSolverBodyData>::getName() [T = physx::PxSolverBodyData]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxsBodyCore *>::getName() [T = physx::PxsBodyCore *]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Dy::Articulation *>::getName() [T = physx::Dy::Articulation *]", "Dropping collision sphere due to 32 sphere limit", "Dropping collision capsule due to 32 capsule limit", "Dropping collision capsule due to 32 sphere limit", "Dropping collision plane due to 32 plane limit", "Dropping collision box due to 32 plane limit", "Dropping collision convex due to 32 plane limit", "static const char *physx::shdfnd::ReflectionAllocator<physx::Cm::Matrix34>::getName() [T = physx::Cm::Matrix34]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxHeightFieldSample>::getName() [T = physx::PxHeightFieldSample]", "static const char *physx::shdfnd::ReflectionAllocator<const physx::Sc::ShapeSim *>::getName() [T = const physx::Sc::ShapeSim *]", "/Users/builduser/buildslave/physx/build/PhysX/Source/SimulationController/src/ScElementSim.cpp", "Unable to create broadphase entity because only 32768 shapes are supported", "./PhysX/Source/SimulationController/src/cloth/ScClothFabricCore.cpp", "Loading cloth fabric failed: mismatching version of cloth fabric stream.", "createClothFabric() failed, invalid phase type specified", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothParticle>::getName() [T = physx::PxClothParticle]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothCollisionSphere>::getName() [T = physx::PxClothCollisionSphere]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothCollisionPlane>::getName() [T = physx::PxClothCollisionPlane]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothCollisionTriangle>::getName() [T = physx::PxClothCollisionTriangle]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothParticleMotionConstraint>::getName() [T = physx::PxClothParticleMotionConstraint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothParticleSeparationConstraint>::getName() [T = physx::PxClothParticleSeparationConstraint]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxClothFabricPhaseType::Enum>::getName() [T = physx::PxClothFabricPhaseType::Enum]", "/Users/builduser/buildslave/physx/build/PhysX/Source/PhysXCooking/src/mesh/RTreeCooking.cpp", "static const char *physx::shdfnd::ReflectionAllocator<physx::RTreeNodeNQ>::getName() [T = physx::RTreeNodeNQ]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Interval>::getName() [T = physx::Interval]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::RTreeNodeQ>::getName() [T = physx::Gu::RTreeNodeQ]", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxBounds3V>::getName() [T = physx::PxBounds3V]", "/Users/builduser/buildslave/physx/build/PhysX/Source/PhysXCooking/src/convex/ConvexHullBuilder.cpp", "ConvexHullBuilder::init: convex hull has more than 255 polygons!", "Gu::ConvexMesh::checkHullPolygons: Some hull vertices seems to be too far from hull planes.", "Gu::ConvexMesh::checkHullPolygons: Hull seems to have opened volume or do (some) faces have reversed winding?", "ConvexHullBuilder: convex hull does not have vertex-to-face info! Try to use different convex mesh cooking settings.", "ConvexHullBuilder: convex hull does not have vertex-to-face info! Some of the vertices have less than 3 neighbor polygons. The vertex is most likely inside a polygon or on an edge between 2 polygons, please remove those vertices.", "Cooking::cookConvexMesh: non-manifold mesh cannot be used, invalid mesh!", "static const char *physx::shdfnd::ReflectionAllocator<bool>::getName() [T = bool]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Gu::EdgeDescData>::getName() [T = physx::Gu::EdgeDescData]", "PxVolumeCache::fill(): unsupported cache volume geometry type.", "PxVolumeCache::fill(): Fallback memory allocation failed, mMaxShapeCount = %d. Try reducing the cache size.", "static const char *physx::shdfnd::ReflectionAllocator<physx::PxActorShape>::getName() [T = physx::PxActorShape]", "PxVolumeCache: unspecified volume geometry. Reverting to uncached scene query.", "FMOD OpenSL ES Output", "Android audio output", "slCreateEngine", "SL_IID_ENGINE", "SL_IID_ANDROIDSIMPLEBUFFERQUEUE", "SL_IID_ANDROIDCONFIGURATION", "SL_IID_PLAY", "SL_IID_RECORD", "androidPlaybackStreamType", "../android/src/fmod_output_opensl.cpp", "android/media/AudioSystem", "getPrimaryOutputSamplingRate", "getPrimaryOutputFrameCount", "Android audio input", "androidRecordingPreset", "startAudioRecord", "stopAudioRecord", "FMOD Audio Track Output", "Audio Track output", "../android/src/fmod_output_audiotrack.cpp", "fmodGetInfo", "fmodProcess", "(Ljava/nio/ByteBuffer;)I", "fmodProcessMicData", "../src/fmod_codec_wav_riff.cpp", "cue ", "fact", "labl", "smpl", "/Users/builduser/buildslave/physx/build/PhysX/Source/LowLevelAABB/src/BpBroadPhaseMBP.cpp", "MBP::addRegion: max number of regions reached.", "MBP::removeRegion: invalid handle.", "MBP::addObject: 64K objects in single region reached. Some collisions might be lost.", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::BroadPhasePair>::getName() [T = physx::Bp::BroadPhasePair]", "static const char *physx::shdfnd::ReflectionAllocator<physx::Bp::IAABB>::getName() [T = physx::Bp::IAABB]", "static const char *physx::shdfnd::ReflectionAllocator<MBPEntry>::getName() [T = MBPEntry]", "static const char *physx::shdfnd::ReflectionAllocator<RegionData>::getName() [T = RegionData]", "static const char *physx::shdfnd::ReflectionAllocator<MBP_Object>::getName() [T = MBP_Object]", "static const char *physx::shdfnd::ReflectionAllocator<Region>::getName() [T = Region]", "static const char *physx::shdfnd::ReflectionAllocator<MBP>::getName() [T = MBP]", "+CCC++", "_GLOBAL_", "(anonymous namespace)", "auto", "string literal", "{default arg#", "JArray", "vtable for ", "VTT for ", "construction vtable for ", "typeinfo for ", "typeinfo name for ", "typeinfo fn for ", "non-virtual thunk to ", "virtual thunk to ", "covariant return thunk to ", "java Class for ", "guard variable for ", "TLS init function for ", "TLS wrapper function for ", "reference temporary #", "hidden alias for ", "transaction clone for ", "non-transaction clone for ", "operator", "operator ", "new ", "false", "true", "java resource ", "decltype (", "global constructors keyed to ", "global destructors keyed to ", "{lambda(", "{unnamed type#", " [clone ", " restrict", " volatile", "complex ", "imaginary ", " __vector(", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::basic_string<char, std::char_traits<char>, std::allocator<char> >", "std::istream", "std::basic_istream<char, std::char_traits<char> >", "basic_istream", "std::ostream", "std::basic_ostream<char, std::char_traits<char> >", "basic_ostream", "std::iostream", "std::basic_iostream<char, std::char_traits<char> >", "basic_iostream", "alignof ", "const_cast", "delete[] ", "dynamic_cast", "delete ", "operator\"\" ", "new[]", "reinterpret_cast", "static_cast", "sizeof ", "throw", "throw ", "signed char", "bool", "boolean", "char", "byte", "double", "long double", "float", "__float128", "unsigned char", "unsigned int", "unsigned", "long", "unsigned long", "__int128", "unsigned __int128", "short", "unsigned short", "void", "wchar_t", "long long", "unsigned long long", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "decltype(nullptr)", "N9__gnu_cxx20recursive_init_errorE", "pure virtual method called\n", "deleted virtual method called\n", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "St9time_base", "St10ctype_base", "St10money_base", "St13messages_base", "St12codecvt_base", "St7collateIcE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "basic_string::_S_construct null not valid", "POSIX", "%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::erase", "%.*Lf", "%m/%d/%y", "%H:%M", "%H:%M:%S", "NSt6locale5facetE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "locale::_S_normalize_category category not found", "locale::_Impl::_M_replace_facet", "-+xX0123456789abcdef0123456789ABCDEF", "-+xX0123456789abcdefABCDEF", "-0123456789", "AKST", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "jMF\fq", "jMF\fq", "St7collateIwE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St13basic_filebufIcSt11char_traitsIcEE", "St14basic_ifstreamIcSt11char_traitsIcEE", "basic_filebuf::underflow codecvt::max_length() is not valid", "basic_filebuf::underflow incomplete character in file", "basic_filebuf::underflow invalid byte sequence in file", "basic_filebuf::underflow error reading the file", "basic_filebuf::xsgetn error reading the file", "basic_filebuf::_M_convert_to_external conversion error", "not enough space for format expansion (Please submit full bug report at http://gcc.gnu.org/bugs.html):\n    ", "basic_string::basic_string", "basic_string::_S_create", "basic_string::append", "basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", "basic_string::copy", "basic_string::substr", "basic_string::compare", "basic_string::_M_replace_aux", "basic_string::assign", "basic_string::insert", "basic_string::resize", "basic_string::replace", "St14error_category", "*N12_GLOBAL__N_121system_error_categoryE", "generic", "system", "*N12_GLOBAL__N_122generic_error_categoryE", "St9bad_alloc", "std::bad_alloc", "St8bad_cast", "std::bad_cast", "N10__cxxabiv117__class_type_infoE", "St9exception", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "std::exception", "std::bad_exception", "N10__cxxabiv121__vmi_class_type_infoE", "locale::facet::_S_create_c_locale name not valid", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "St5ctypeIcE", "St5ctypeIwE", "space", "print", "cntrl", "upper", "lower", "alpha", "digit", "punct", "xdigit", "alnum", "graph", "St9basic_iosIcSt11char_traitsIcEE", "basic_ios::clear", "St8ios_base", "NSt8ios_base7failureE", "St11logic_error", "St12length_error", "St12out_of_range", "St13runtime_error", "St15basic_streambufIcSt11char_traitsIcEE", "terminate called recursively\n", "terminate called after throwing an instance of '", "terminate called without an active exception\n", "  what():  "], "stringidentifiers": ["TextRendering", "OnTransformParentChanged", "OnTransformChildrenChanged", "gHasChangedDeprecatedSystem", "m_LocalRotation", "m_LocalPosition", "m_LocalScale", "m_Father", "m_FileID", "m_PathID", "vector::reserve", "vector::_M_emplace_back_aux", "UnityPerMaterial", "UnityPerDraw", "unity_DynamicLightmap", "unity_DynamicDirectionality", "unity_Lightmap", "unity_LightmapInd", "unity_ProbeVolumeSH", "unity_SpecCube0", "unity_SpecCube1", "m_ParsedForm", "platforms", "offsets", "decompressedLengths", "compressedBlob", "m_Dependencies", "m_NonModifiableTextures", "m_ShaderIsBaked", "SerializedShader", "m_PropInfo", "m_SubShaders", "m_Name", "m_CustomEditorName", "m_FallbackName", "m_DisableNoSubshadersMessage", "SerializedProperties", "m_Props", "SerializedProperty", "m_Description", "m_Attributes", "m_Type", "m_Flags", "m_DefTexture", "SerializedTextureProperty", "m_DefaultName", "m_TexDim", "SerializedSubShader", "m_Passes", "m_Tags", "m_LOD", "SerializedPass", "m_NameIndices", "m_State", "m_ProgramMask", "progVertex", "progFragment", "progGeometry", "progHull", "progDomain", "m_HasInstancingVariant", "m_HasProceduralInstancingVariant", "m_UseName", "m_TextureName", "SerializedShaderState", "rtSeparateBlend", "srcBlend", "destBlend", "srcBlendAlpha", "destBlendAlpha", "blendOp", "blendOpAlpha", "colMask", "zClip", "zTest", "zWrite", "culling", "offsetFactor", "offsetUnits", "alphaToMask", "stencilOp", "stencilOpFront", "stencilOpBack", "stencilReadMask", "stencilWriteMask", "stencilRef", "fogStart", "fogEnd", "fogColor", "gpuProgramID", "lighting", "SerializedShaderRTBlendState", "SerializedShaderFloatValue", "SerializedStencilOp", "fail", "zFail", "comp", "SerializedShaderVectorValue", "SerializedProgram", "m_SubPrograms", "SerializedSubProgram", "m_BlobIndex", "m_Channels", "m_KeywordIndices", "m_ShaderHardwareTier", "m_GpuProgramType", "m_VectorParams", "m_MatrixParams", "m_TextureParams", "m_BufferParams", "m_ConstantBuffers", "m_ConstantBufferBindings", "m_UAVParams", "m_Samplers", "m_ShaderRequirements", "ParserBindChannels", "m_SourceMap", "ShaderBindChannel", "VectorParameter", "m_NameIndex", "m_Index", "m_ArraySize", "m_Dim", "MatrixParameter", "m_RowCount", "TextureParameter", "m_SamplerIndex", "m_MultiSampled", "BufferBinding", "ConstantBuffer", "m_StructParams", "m_Size", "StructParameter", "m_StructSize", "m_VectorMembers", "m_MatrixMembers", "UAVParameter", "m_OriginalIndex", "SamplerParameter", "bindPoint", "SerializedTagMap", "SerializedShaderDependency", "vector::_M_default_append", "UNITY_CLEANED_LOG_FILE", "Unity", "m_Avatar", "m_AvatarSize", "m_TOS", "AvatarConstant", "OnDidDeleteMotion", "OnDidChangeMotionEvents", "localRotation", "m_LocalEuler", "localEuler", "localPosition", "localScale", "m_UseCompression", "m_Compressed", "m_MuscleClipInfo", "m_AnimationClipSettings", "vector::_M_insert_aux", "m_DeltaPose", "m_StartX", "m_StopX", "m_LeftFootStartX", "m_RightFootStartX", "m_AverageSpeed", "m_Clip", "m_StartTime", "m_StopTime", "m_OrientationOffsetY", "m_Level", "m_CycleOffset", "m_AverageAngularSpeed", "m_IndexArray", "m_ValueArrayDelta", "m_ValueArrayReferencePose", "m_Mirror", "m_LoopTime", "m_LoopBlend", "m_LoopBlendOrientation", "m_LoopBlendPositionY", "m_LoopBlendPositionXZ", "m_StartAtOrigin", "m_KeepOriginalOrientation", "m_KeepOriginalPositionY", "m_KeepOriginalPositionXZ", "m_HeightFromFeet", "m_RootX", "m_LookAtPosition", "m_LookAtWeight", "m_GoalArray", "m_LeftHandPose", "m_RightHandPose", "m_DoFArray", "m_TDoFArray", "m_GrabX", "m_Override", "m_CloseOpen", "m_InOut", "m_Grab", "m_StreamedClip", "m_DenseClip", "m_ConstantClip", "curveCount", "m_FrameCount", "m_CurveCount", "m_SampleRate", "m_BeginTime", "m_SampleArray", "m_WeightT", "m_WeightR", "m_HintT", "m_HintWeightT", "m_Start", "m_Stop", "m_Legacy", "m_UseHighQualityCurve", "m_RotationCurves", "m_CompressedRotationCurves", "m_EulerCurves", "m_PositionCurves", "m_ScaleCurves", "m_FloatCurves", "m_PPtrCurves", "m_WrapMode", "m_Bounds", "m_AnimationType", "m_MuscleClip", "m_MuscleClipSize", "m_ClipBindingConstant", "m_HasGenericRootTransform", "m_HasMotionFloatCurves", "m_Events", "QuaternionCurve", "curve", "m_Curve", "m_PreInfinity", "m_PostInfinity", "m_RotationOrder", "inSlope", "outSlope", "weightedMode", "inWeight", "outWeight", "CompressedAnimationCurve", "m_Path", "m_Times", "m_Slopes", "PackedBitVector", "m_NumItems", "m_BitSize", "m_Range", "Vector3Curve", "FloatCurve", "classID", "script", "PPtrKeyframe", "m_Center", "m_Extent", "ClipMuscleConstant", "float4", "HumanGoal", "xform", "float3", "ValueDelta", "AnimationClipBindingConstant", "genericBindings", "pptrCurveMapping", "GenericBinding", "typeID", "customType", "isPPtrCurve", "AnimationEvent", "UnityEngine", "UIVertex", "UICharInfo", "UILineInfo", "_MainTex", "flipped", "m_AsciiStartOffset", "m_Tracking", "m_CharacterSpacing", "m_CharacterPadding", "m_ConvertCase", "m_CharacterRects", "m_KerningValues", "m_PixelScale", "m_FontData", "m_Ascent", "m_Descent", "m_DefaultStyle", "m_FontNames", "m_FallbackFonts", "m_FontRenderingMode", "m_GridFont", "m_FontCountX", "m_FontCountY", "m_PerCharacterKerning", "m_UseLegacyBoundsCalculation", "m_ShouldRoundAdvanceValue", "Arial", "Regular", "GUIText", "TextRenderingPrivate", "TextMesh", "m_LineSpacing", "m_DefaultMaterial", "m_FontSize", "m_Texture", "m_Text", "m_Anchor", "m_Alignment", "m_PixelOffset", "m_TabSize", "m_Font", "m_Material", "m_FontStyle", "m_Color", "m_PixelCorrect", "m_RichText", "rgba", "m_OffsetZ", "m_CharacterSize", "Gulim", "LastResort", "dfont", "color", "quad", "chlist", "dataWindow", "box2i", "displayWindow", "lineOrder", "pixelAspectRatio", "screenWindowCenter", "screenWindowWidth", "tiles", "chunkCount", "vector::_M_range_insert", "_UnityFBInput0", "_UnityFBInput1", "_UnityFBInput2", "_UnityFBInput3", "_UnityFBInput4", "_UnityFBInput5", "_UnityFBInput6", "_UnityFBInput7", "g_mBones", "g_SourceVBO", "g_SourceSkin", "g_MeshVertsOut", "g_VertCount", "inOutMeshVertices", "inBlendShapeVertices", "g_FirstVert", "g_Weight", "Null", "Metal", "Vulkan", "destroy", "UpdateResource", "InstancedMeshIntermediateRenderer", "IndirectMeshIntermediateRenderer", "unity_RenderingLayer", "unity_RenderingLayerArray", "unity_LODFade", "unity_LODFadeArray", "float2", "unity_SpriteFlipArray", "unity_SpriteRendererColorArray", "unity_SHAr", "unity_SHArArray", "unity_SHAg", "unity_SHAgArray", "unity_SHAb", "unity_SHAbArray", "unity_SHBr", "unity_SHBrArray", "unity_SHBg", "unity_SHBgArray", "unity_SHBb", "unity_SHBbArray", "unity_SHC", "unity_SHCArray", "unity_ProbesOcclusion", "unity_ProbesOcclusionArray", "unity_LightmapST", "unity_LightmapSTArray", "unity_DynamicLightmapST", "unity_DynamicLightmapSTArray", "unity_ObjectToWorldArray", "unity_WorldToObjectArray", "unity_BaseInstanceID", "native", "unity_ObjectToWorld", "unity_WorldToObject", "unity_MatrixV", "unity_MatrixInvV", "glstate_matrix_projection", "unity_MatrixVP", "_Object2World", "_World2Object", "unity_LightColor0", "unity_LightColor1", "unity_LightColor2", "unity_LightColor3", "unity_LightColor4", "unity_LightColor5", "unity_LightColor6", "unity_LightColor7", "unity_LightPosition0", "unity_LightPosition1", "unity_LightPosition2", "unity_LightPosition3", "unity_LightPosition4", "unity_LightPosition5", "unity_LightPosition6", "unity_LightPosition7", "unity_SpotDirection0", "unity_SpotDirection1", "unity_SpotDirection2", "unity_SpotDirection3", "unity_SpotDirection4", "unity_SpotDirection5", "unity_SpotDirection6", "unity_SpotDirection7", "unity_LightAtten0", "unity_LightAtten1", "unity_LightAtten2", "unity_LightAtten3", "unity_LightAtten4", "unity_LightAtten5", "unity_LightAtten6", "unity_LightAtten7", "unity_VertexLightParams", "glstate_lightmodel_ambient", "_WorldSpaceLightPos0", "_WorldSpaceCameraPos", "unity_WorldTransformParams", "_ProjectionParams", "_ScreenParams", "_ZBufferParams", "unity_OrthoParams", "_LightPositionRange", "_LightProjectionParams", "unity_Ambient", "unity_LightmapFade", "unity_OcclusionMaskSelector", "_ShadowOffsets0", "_ShadowOffsets1", "_ShadowOffsets2", "_ShadowOffsets3", "_LightShadowData", "unity_LightShadowBias", "_LightSplitsNear", "_LightSplitsFar", "unity_ShadowSplitSpheres0", "unity_ShadowSplitSpheres1", "unity_ShadowSplitSpheres2", "unity_ShadowSplitSpheres3", "unity_ShadowSplitSqRadii", "unity_ShadowCascadeScales", "unity_ShadowFadeCenterAndType", "unity_ShadowColor", "_Time", "_LastTime", "_SinTime", "_CosTime", "_PiTime", "unity_DeltaTime", "unity_4LightPosX0", "unity_4LightPosY0", "unity_4LightPosZ0", "unity_4LightAtten0", "unity_FogStart", "unity_FogEnd", "unity_FogDensity", "unity_FogColor", "unity_FogParams", "unity_CameraWorldClipPlanes0", "unity_CameraWorldClipPlanes1", "unity_CameraWorldClipPlanes2", "unity_CameraWorldClipPlanes3", "unity_CameraWorldClipPlanes4", "unity_CameraWorldClipPlanes5", "unity_AmbientSky", "unity_AmbientEquator", "unity_AmbientGround", "unity_IndirectSpecColor", "unity_SpecCube0_HDR", "unity_SpecCube0_BoxMax", "unity_SpecCube0_BoxMin", "unity_SpecCube0_ProbePosition", "unity_SpecCube1_HDR", "unity_SpecCube1_BoxMax", "unity_SpecCube1_BoxMin", "unity_SpecCube1_ProbePosition", "unity_BillboardNormal", "unity_BillboardTangent", "unity_BillboardCameraParams", "unity_ProbeVolumeMin", "unity_ProbeVolumeSizeInv", "unity_ProbeVolumeParams", "unity_StereoEyeIndex", "unity_LightIndicesOffsetAndCount", "unity_4LightIndices0", "unity_4LightIndices1", "unity_ReflectionProbeIndicesOffsetAndCount", "unity_MotionVectorsParams", "unity_HalfStereoSeparation", "glstate_light0_diffuse", "glstate_light1_diffuse", "glstate_light2_diffuse", "glstate_light3_diffuse", "glstate_light0_position", "glstate_light1_position", "glstate_light2_position", "glstate_light3_position", "glstate_light0_attenuation", "glstate_light1_attenuation", "glstate_light2_attenuation", "glstate_light3_attenuation", "glstate_light0_spotDirection", "glstate_light1_spotDirection", "glstate_light2_spotDirection", "glstate_light3_spotDirection", "unity_LightColor", "unity_LightPosition", "unity_SpotDirection", "unity_LightAtten", "_ShadowOffsets", "unity_ShadowSplitSpheres", "unity_CameraWorldClipPlanes", "unity_WorldToCamera", "unity_CameraToWorld", "unity_WorldToShadow0", "unity_WorldToShadow1", "unity_WorldToShadow2", "unity_WorldToShadow3", "unity_LightmapMatrix", "unity_Projector", "unity_ProjectorDistance", "unity_ProjectorClip", "unity_GUIClipTextureMatrix", "unity_WorldToLight", "unity_CameraProjection", "unity_CameraInvProjection", "unity_ProbeVolumeWorldToObject", "unity_MatrixPreviousM", "unity_MatrixPreviousMI", "unity_World2Shadow", "unity_World2Shadow0", "unity_World2Shadow1", "unity_World2Shadow2", "unity_World2Shadow3", "_LightMatrix0", "unity_WorldToShadow", "white", "black", "gray", "grey", "linearGray", "linearGrey", "grayscaleRamp", "greyscaleRamp", "bump", "blackCube", "lightmap", "unity_ShadowMask", "unity_DynamicNormal", "_DitherMaskLOD", "_DitherMaskLOD2D", "unity_RandomRotation16", "unity_NHxRoughness", "GetKey", "cyan", "darkblue", "lightblue", "purple", "yellow", "lime", "fuchsia", "silver", "orange", "brown", "maroon", "green", "olive", "navy", "teal", "aqua", "magenta", "transparent", "key1", "key2", "key3", "key4", "key5", "key6", "key7", "ctime0", "ctime1", "ctime2", "ctime3", "ctime4", "ctime5", "ctime6", "ctime7", "atime0", "atime1", "atime2", "atime3", "atime4", "atime5", "atime6", "atime7", "m_Mode", "m_NumColorKeys", "m_NumAlphaKeys", "OnDidModifyMeshBounds", "OnDidModifyMesh", "MeshIDGenerator", "normals", "tangents", "OnMeshFilterChanged", "m_LodMesh", "m_Mesh", "m_SubMeshes", "m_Shapes", "m_BindPose", "m_BoneNameHashes", "m_RootBoneNameHash", "m_MeshCompression", "m_IsReadable", "m_KeepVertices", "m_KeepIndices", "m_IndexFormat", "m_IndexBuffer", "m_Skin", "m_Vertices", "m_UV", "m_UV1", "m_Tangents", "m_Colors", "m_VertexData", "m_CompressedMesh", "m_LocalAABB", "m_MeshUsageFlags", "m_StreamData", "firstByte", "baseVertex", "firstVertex", "localAABB", "isTriStrip", "BlendShapeData", "fullWeights", "BlendShapeVertex", "MeshBlendShape", "hasNormals", "hasTangents", "MeshBlendShapeChannel", "nameHash", "frameIndex", "BoneWeights4", "m_Weights", "m_NormalSigns", "m_TangentSigns", "m_FloatColors", "m_BoneIndices", "m_Triangles", "m_UVInfo", "m_BakedConvexCollisionMesh", "m_BakedTriangleCollisionMesh", "MeshVertexFormatManager", "m_Sprite", "m_Animation", "m_DisableAnimationWhenOffscreen", "OnSetPolygon2D", "OnSpriteTilingPropertyChange", "_AlphaTex", "_MainTex_TexelSize", "_EnableExternalAlpha", "_MaskInteractionEnabled", "ETC1_EXTERNAL_ALPHA", "m_VertexCount", "m_CurrentChannels", "m_DataSize", "Float16", "UNorm8", "SNorm8", "UNorm16", "SNorm16", "UInt8", "SInt8", "UInt16", "SInt16", "UInt32", "SInt32", "m_AdditionalVertexStreams", "m_Quality", "m_UpdateWhenOffscreen", "m_SkinnedMotionVectors", "m_Bones", "m_BlendShapeWeights", "m_RootBone", "m_AABB", "m_DirtyAABB", "m_FlipX", "m_FlipY", "m_DrawMode", "m_AdaptiveModeThreshold", "m_SpriteTileMode", "m_WasSpriteAssigned", "m_MaskInteraction", "m_SpriteSortPoint", "ChannelInfo", "_LightTexture0", "_CameraDepthNormalsTexture", "_LastCameraDepthNormalsTexture", "_ShadowMapTexture", "_HasLastPositionData", "_ForceNoMotion", "_PreviousM", "_PreviousVP", "_NonJitteredVP", "_StereoPreviousVP", "_StereoNonJitteredVP", "_MotionVectorDepthBias", "_CameraMotionVectorsTexture", "_LightPos", "_LightDir", "_LightBuffer", "_LightAsQuad", "_StencilNonBackground", "_CameraDepthTexture", "_CameraNormalsTexture", "_LastCameraDepthTexture", "_LastCameraNormalsTexture", "_CameraReflectionsTexture", "_CameraGBufferTexture0", "_CameraGBufferTexture1", "_CameraGBufferTexture2", "_CameraGBufferTexture3", "_CameraGBufferTexture4", "_SrcBlend", "_DstBlend", "texarray", "cubearray", "Invalid", "_LightTextureB0", "RenderType", "unity_Lightmap_HDR", "unity_DynamicLightmap_HDR", "_HaloFalloff", "m_Ambient", "m_AmbientLight", "m_AmbientSkyboxAmount", "m_AmbientIntensity", "_ODSWorldTexture", "ShadowmapFilter", "PCF_SOFT_FORCE_INV_PROJECTION_IN_PS", "PCF_SOFT", "HardShadow_FORCE_INV_PROJECTION_IN_PS", "Shadowmap", "m_Fog", "m_FogColor", "m_FogMode", "m_FogDensity", "m_LinearFogStart", "m_LinearFogEnd", "m_AmbientSkyColor", "m_AmbientEquatorColor", "m_AmbientGroundColor", "m_AmbientMode", "m_SubtractiveShadowColor", "m_SkyboxMaterial", "m_HaloStrength", "m_FlareStrength", "m_FlareFadeSpeed", "m_HaloTexture", "m_SpotCookie", "m_DefaultReflectionMode", "m_DefaultReflectionResolution", "m_ReflectionBounces", "m_ReflectionIntensity", "m_CustomReflection", "m_AmbientProbe", "m_GeneratedSkyboxReflection", "m_Sun", "m_IndirectSpecularColor", "m_UseRadianceAmbientProbe", "SphericalHarmonicsL2", "m_MixedShadowColor", "_MainTex_ST", "_MainTex_HDR", "_CameraDepthTexture_ST", "_CameraDepthNormalsTexture_ST", "_LastCameraDepthTexture_ST", "_LastCameraDepthNormalsTexture_ST", "_BlurOffsets", "_ArraySliceIndex", "OcclusionArea", "m_IsViewVolume", "LightManager::kSystemTRS", "RenderNodeQueue", "HaloLayer", "OcclusionPortal", "m_BakedCoefficients", "m_BakedLightOcclusion", "LightProbeData", "m_Tetrahedralization", "m_ProbeSets", "m_NonTetrahedralizedProbeSetIndexMap", "ProbeSetTetrahedralization", "m_Tetrahedra", "m_HullRays", "Tetrahedron", "Matrix3x4f", "ProbeSetIndex", "m_Hash", "m_Offset", "Hash128", "LightProbeOcclusion", "m_ProbeOcclusionLightIndex", "m_Occlusion", "m_OcclusionMaskChannel", "m_Open", "m_FocalLength", "OcclusionCullingSettings", "m_Deferred", "m_DeferredReflections", "m_ScreenSpaceShadows", "m_LegacyDeferred", "m_DepthNormals", "m_MotionVectors", "m_LightHalo", "m_LensFlare", "m_AlwaysIncludedShaders", "m_PreloadedShaders", "m_SpritesDefaultMaterial", "m_CustomRenderPipeline", "m_TransparencySortMode", "m_TransparencySortAxis", "m_TierSettings_Tier1", "m_TierSettings_Tier2", "m_TierSettings_Tier3", "m_ShaderDefinesPerShaderCompiler", "m_LightsUseLinearIntensity", "m_LightsUseColorTemperature", "BuiltinShaderSettings", "m_Shader", "TierGraphicsSettings", "hdrMode", "realtimeGICPUUsage", "useCascadedShadowMaps", "prefer32BitShadowMaps", "enableLPPV", "useHDR", "PlatformShaderDefines", "shaderPlatform", "defines_Tier1", "defines_Tier2", "defines_Tier3", "fixed_bitset", "m_SceneGUID", "m_OcclusionCullingData", "m_StaticRenderers", "m_Portals", "m_PVSData", "m_RefreshMode", "m_TimeSlicingMode", "m_Resolution", "m_UpdateFrequency", "m_BoxSize", "m_BoxOffset", "m_NearClip", "m_FarClip", "m_ShadowDistance", "m_ClearFlags", "m_BackGroundColor", "m_CullingMask", "m_IntensityMultiplier", "m_BlendDistance", "m_HDR", "m_BoxProjection", "m_RenderDynamicObjects", "m_UseOcclusionCulling", "m_Importance", "m_CustomBakedTexture", "m_BakedTexture", "BitField", "m_Bits", "_Reflection", "_Texel", "_TexA", "_TexB", "m_CookieSize", "m_DrawHalo", "m_Intensity", "m_SpotAngle", "m_ColorTemperature", "m_projectionMatrixMode", "m_SensorSize", "m_LensShift", "m_GateFitMode", "m_NormalizedViewPortRect", "m_Depth", "m_RenderingPath", "m_TargetTexture", "m_TargetDisplay", "m_TargetEye", "m_AllowMSAA", "m_AllowDynamicResolution", "m_ForceIntoRT", "m_OcclusionCulling", "m_StereoConvergence", "m_StereoSeparation", "m_Scenes", "OcclusionScene", "indexRenderers", "sizeRenderers", "indexPortals", "sizePortals", "m_IndirectIntensity", "m_BounceIntensity", "m_ColorFilter", "LPPV_CombinedSHCoefficients", "LPPV_RealtimeSHCoefficients", "FlareLayer", "LightProbeProxyVolume", "vector::_M_fill_insert", "m_Flare", "m_Brightness", "m_FadeSpeed", "m_IgnoreLayers", "m_Directional", "m_FlareTexture", "m_TextureLayout", "m_Elements", "m_UseFog", "FlareElement", "m_ImageIndex", "m_Position", "m_UseLightColor", "m_Rotate", "m_Zoom", "m_Fade", "m_Shadows", "m_Cookie", "m_BakingOutput", "m_ActuallyLightmapped", "m_RenderMode", "m_Lightmapping", "m_LightShadowCasterMode", "m_AreaSize", "m_UseColorTemperature", "ShadowSettings", "m_CustomResolution", "LightBakingOutput", "probeOcclusionLightIndex", "occlusionMaskChannel", "lightmapBakeMode", "isBaked", "lightmapBakeMask", "LightmapBakeMode", "lightmapBakeType", "mixedLightingMode", "m_BoundingBoxMode", "m_ResolutionX", "m_ResolutionY", "m_ResolutionZ", "m_ResolutionProbesPerUnit", "m_BoundingBoxSize", "m_BoundingBoxOrigin", "m_ResolutionMode", "m_ProbePositionMode", "m_QualityMode", "ReflectionProbeAnchorManager::kHierarchyChangeSystem", "m_IsOrthoGraphic", "m_Orthographic", "m_OrthoGraphicSize", "m_OrthographicSize", "m_NearClipPlane", "m_FarClipPlane", "m_FieldOfView", "m_AspectRatio", "m_CustomSkybox", "hlslcc_fbinput", "vkCreateDebugReportCallbackEXT", "vkDestroyDebugReportCallbackEXT", "_mainview", "_gammaview", "_gamma_view", "_storage_view", "X_counterBuf", "VK_EXT_debug_report", "VK_LAYER_LUNARG_standard_validation", "VK_LAYER_GOOGLE_threading", "VK_LAYER_LUNARG_parameter_validation", "VK_LAYER_LUNARG_object_tracker", "VK_LAYER_LUNARG_core_validation", "VK_LAYER_LUNARG_device_limits", "VK_LAYER_LUNARG_image", "VK_LAYER_LUNARG_swapchain", "VK_LAYER_GOOGLE_unique_objects", "VK_KHR_surface", "VK_KHR_display", "VK_KHR_android_surface", "VK_KHR_swapchain", "VK_KHR_sampler_mirror_clamp_to_edge", "VK_KHR_maintenance1", "VK_KHR_get_memory_requirements2", "VK_KHR_dedicated_allocation", "VK_KHR_image_format_list", "camera", "dest", "Vector4", "Vector2", "Vector3", "MemPoolAlloc", "BoneWeight", "Matrix4x4", "colorLA", "colorSA", "systemTypeInstance", "argsBuffer", "PlayerLoopSystemInternal", "AndroidJNI", "sceneName", "updateZones", "SpriteBone", "computeShader", "initializeARCore", "pauseARCore", "resumeARCore", "FileSystemAndroidAPK", "AndroidSplitFile", "LocalFileSystemAndroid", "getUnicodeChar", "nativeInjectEvent", "Gyroscope", "Proximity", "disableOpenSL", "initJni", "nativeDone", "nativePause", "nativeRecreateGfxState", "nativeSendSurfaceChangedEvent", "nativeRender", "nativeResume", "nativeLowMemory", "nativeFocusChanged", "nativeSetInputString", "nativeSetInputSelection", "nativeSoftInputClosed", "nativeSoftInputCanceled", "nativeSoftInputLostFocus", "nativeInitWebRequest", "nativeUnitySendMessage", "nativeIsAutorotationOn", "nativeMuteMasterAudio", "nativeRestartActivityIndicator", "nativeProxyInvoke", "nativeProxyFinalize", "nativeProxyLogJNIInvokeException", "Roboto", "MotoyaLMaru", "NanumGothic", "DroidSansFallback", "NativeFile", "FileSystem", "ZipCentralDirectory", "UnityMain", "UnityDeinitApplication", "InitJni", "ToggleGyroscopeSensor", "setStackTrace", "CRASH", "getPackageName", "getErrorReportReceiver", "getPackageManager", "getInstallerPackageName", "setPackage", "resolveActivity", "activityInfo", "chained_signal_handler", "androidRenderOutsideSafeArea", "androidStartInFullscreen", "familyset", "lang", "variant", "compact", "fileset", "ApkAddCentralDirectory", "Google", "Yellowstone", "Amazon", "KFTT", "KFJWI", "KFJWA", "KFSOWI", "KFTHWA", "KFTHWI", "KFAPWA", "KFAPWI", "initializeGoogleVr", "initializeGoogleAr", "showVideoPlayer", "loadLibrary", "showSoftInput", "setSoftInputStr", "setCharacterLimit", "setSelection", "hideSoftInput", "kill", "executeGLThreadJobs", "disableLogger", "addPhoneCallListener", "setClipboardText", "requestUserAuthorization", "skipPermissionsDialog", "getClipboardText", "toggleGyroscopeSensor", "IL2CPP", "LoadLibrary", "ResolveMethod", "ShowSoftInput", "SetSoftInputString", "SetClipboardText", "GetClipboardText", "ShowVideoPlayer", "RequestUserPermission", "SkipPermissionsDialog", "add_symbols", "UnityHardwareCamera", "WebCamTexture", "__UNITY_PLAYERPREFS_VERSION__", "initializeCamera2", "getCamera2Count", "getCamera2SensorOrientation", "isCamera2FrontFacing", "getCamera2Resolutions", "getFrameSizeCamera2", "closeCamera2", "startCamera2", "stopCamera2", "pauseCamera2", "isCamera2AutoFocusPointSupported", "setAutoFocusPoint", "getCameraFocusArea", "initCamera2Jni", "nativeFrameReady", "nativeSurfaceTextureReady", "UnityChoreographer", "detaching", "processor", "FMOD_FileOpen", "ARM64", "bluetooth_name", "AcquireGoogleVRVideoSurface", "ReleaseGoogleVRVideoSurface", "InitVRJNI", "setGoogleVrModeEnabled", "pauseGvrLayout", "resumeGvrLayout", "unloadGoogleVr", "getVideoSurfaceId", "getVideoSurface", "vrmode", "initVrJni", "setVrVideoTransform", "isQuiting", "UnityVibrator", "vr_only", "vr_dual", "TypelessData", "StreamingInfo", "MemoryStream", "resG", "resS", "m_Script", "m_Left", "m_Right", "m_Top", "m_Bottom", "m_Normal", "m_Hover", "m_Active", "m_Focused", "m_OnNormal", "m_OnHover", "m_OnActive", "m_OnFocused", "m_Border", "m_Margin", "m_Padding", "m_Overflow", "m_WordWrap", "m_TextClipping", "m_ImagePosition", "m_ContentOffset", "m_FixedWidth", "m_FixedHeight", "m_StretchWidth", "m_StretchHeight", "m_Background", "m_TextColor", "InternalOnAfterDeserialize", "int3_storage", "int2_storage", "BoundsInt", "GUIStyle", "GUIStyleState", "FixedElementField", "GUISkin", "customStyles", "m_CustomStyles", "m_EditorClassIdentifier", "m_ScriptingClassIdentifier", "m_Enabled", "__internalAwake", "OnRenderObject", "OnEnable", "OnEnableINTERNAL", "OnDisableINTERNAL", "OnRenderImage", "OnDrawGizmos", "OnGUI", "OnDestroy", "OnAudioFilterRead", "OnDidApplyAnimationProperties", "OnLevelWasLoaded", "ClassNotFound", "MonoScript", "m_ExecutionOrder", "m_ClassName", "m_Namespace", "m_AssemblyName", "m_PropertiesHash", "UnhandledExceptionHandler", "RegisterUECatcher", "unused_application_configuration", "MonoManager", "TextAsset", "m_Scripts", "m_AssemblyNames", "m_AssemblyTypes", "ArgumentException", "NullReferenceException", "InvalidOperationException", "IndexOutOfRangeException", "UnityException", "ObjectDisposedException", "NotImplementedException", "InvalidCastException", "il2cpp_init", "il2cpp_init_utf16", "il2cpp_shutdown", "il2cpp_set_config_dir", "il2cpp_set_data_dir", "il2cpp_set_temp_dir", "il2cpp_set_commandline_arguments", "il2cpp_set_commandline_arguments_utf16", "il2cpp_set_config_utf16", "il2cpp_set_config", "il2cpp_set_memory_callbacks", "il2cpp_get_corlib", "il2cpp_add_internal_call", "il2cpp_resolve_icall", "il2cpp_alloc", "il2cpp_free", "il2cpp_array_class_get", "il2cpp_array_length", "il2cpp_array_get_byte_length", "il2cpp_array_new", "il2cpp_array_new_specific", "il2cpp_array_new_full", "il2cpp_bounded_array_class_get", "il2cpp_array_element_size", "il2cpp_assembly_get_image", "il2cpp_class_enum_basetype", "il2cpp_class_is_generic", "il2cpp_class_is_inflated", "il2cpp_class_is_assignable_from", "il2cpp_class_is_subclass_of", "il2cpp_class_has_parent", "il2cpp_class_from_il2cpp_type", "il2cpp_class_from_name", "il2cpp_class_from_system_type", "il2cpp_class_get_element_class", "il2cpp_class_get_events", "il2cpp_class_get_fields", "il2cpp_class_get_nested_types", "il2cpp_class_get_interfaces", "il2cpp_class_get_properties", "il2cpp_class_get_property_from_name", "il2cpp_class_get_field_from_name", "il2cpp_class_get_methods", "il2cpp_class_get_method_from_name", "il2cpp_class_get_name", "il2cpp_class_get_namespace", "il2cpp_class_get_parent", "il2cpp_class_get_declaring_type", "il2cpp_class_instance_size", "il2cpp_class_num_fields", "il2cpp_class_is_valuetype", "il2cpp_class_value_size", "il2cpp_class_is_blittable", "il2cpp_class_get_flags", "il2cpp_class_is_abstract", "il2cpp_class_is_interface", "il2cpp_class_array_element_size", "il2cpp_class_from_type", "il2cpp_class_get_type", "il2cpp_class_get_type_token", "il2cpp_class_has_attribute", "il2cpp_class_has_references", "il2cpp_class_is_enum", "il2cpp_class_get_image", "il2cpp_class_get_assemblyname", "il2cpp_class_get_rank", "il2cpp_class_get_bitmap_size", "il2cpp_class_get_bitmap", "il2cpp_stats_dump_to_file", "il2cpp_stats_get_value", "il2cpp_domain_get", "il2cpp_domain_assembly_open", "il2cpp_domain_get_assemblies", "il2cpp_raise_exception", "il2cpp_exception_from_name_msg", "il2cpp_get_exception_argument_null", "il2cpp_format_exception", "il2cpp_format_stack_trace", "il2cpp_unhandled_exception", "il2cpp_field_get_flags", "il2cpp_field_get_name", "il2cpp_field_get_parent", "il2cpp_field_get_offset", "il2cpp_field_get_type", "il2cpp_field_get_value", "il2cpp_field_get_value_object", "il2cpp_field_has_attribute", "il2cpp_field_set_value", "il2cpp_field_static_get_value", "il2cpp_field_static_set_value", "il2cpp_field_set_value_object", "il2cpp_gc_collect", "il2cpp_gc_collect_a_little", "il2cpp_gc_disable", "il2cpp_gc_enable", "il2cpp_gc_is_disabled", "il2cpp_gc_get_used_size", "il2cpp_gc_get_heap_size", "il2cpp_gc_wbarrier_set_field", "il2cpp_gchandle_new", "il2cpp_gchandle_new_weakref", "il2cpp_gchandle_get_target", "il2cpp_gchandle_free", "il2cpp_unity_liveness_calculation_begin", "il2cpp_unity_liveness_calculation_end", "il2cpp_unity_liveness_calculation_from_root", "il2cpp_unity_liveness_calculation_from_statics", "il2cpp_method_get_return_type", "il2cpp_method_get_declaring_type", "il2cpp_method_get_name", "il2cpp_method_get_from_reflection", "il2cpp_method_get_object", "il2cpp_method_is_generic", "il2cpp_method_is_inflated", "il2cpp_method_is_instance", "il2cpp_method_get_param_count", "il2cpp_method_get_param", "il2cpp_method_get_class", "il2cpp_method_has_attribute", "il2cpp_method_get_flags", "il2cpp_method_get_token", "il2cpp_method_get_param_name", "il2cpp_property_get_flags", "il2cpp_property_get_get_method", "il2cpp_property_get_set_method", "il2cpp_property_get_name", "il2cpp_property_get_parent", "il2cpp_object_get_class", "il2cpp_object_get_size", "il2cpp_object_get_virtual_method", "il2cpp_object_new", "il2cpp_object_unbox", "il2cpp_value_box", "il2cpp_monitor_enter", "il2cpp_monitor_try_enter", "il2cpp_monitor_exit", "il2cpp_monitor_pulse", "il2cpp_monitor_pulse_all", "il2cpp_monitor_wait", "il2cpp_monitor_try_wait", "il2cpp_runtime_invoke", "il2cpp_runtime_invoke_convert_args", "il2cpp_runtime_class_init", "il2cpp_runtime_object_init", "il2cpp_runtime_object_init_exception", "il2cpp_runtime_unhandled_exception_policy_set", "il2cpp_string_length", "il2cpp_string_chars", "il2cpp_string_new", "il2cpp_string_new_len", "il2cpp_string_new_utf16", "il2cpp_string_new_wrapper", "il2cpp_string_intern", "il2cpp_string_is_interned", "il2cpp_thread_current", "il2cpp_thread_attach", "il2cpp_thread_detach", "il2cpp_thread_get_all_attached_threads", "il2cpp_is_vm_thread", "il2cpp_current_thread_walk_frame_stack", "il2cpp_thread_walk_frame_stack", "il2cpp_current_thread_get_top_frame", "il2cpp_thread_get_top_frame", "il2cpp_current_thread_get_frame_at", "il2cpp_thread_get_frame_at", "il2cpp_current_thread_get_stack_depth", "il2cpp_thread_get_stack_depth", "il2cpp_type_get_object", "il2cpp_type_get_type", "il2cpp_type_get_class_or_element_class", "il2cpp_type_get_name", "il2cpp_type_is_byref", "il2cpp_type_get_attrs", "il2cpp_type_equals", "il2cpp_type_get_assembly_qualified_name", "il2cpp_image_get_assembly", "il2cpp_image_get_name", "il2cpp_image_get_filename", "il2cpp_image_get_entry_point", "il2cpp_image_get_class_count", "il2cpp_image_get_class", "il2cpp_capture_memory_snapshot", "il2cpp_free_captured_memory_snapshot", "il2cpp_set_find_plugin_callback", "il2cpp_register_log_callback", "il2cpp_debugger_set_agent_options", "il2cpp_is_debugger_attached", "il2cpp_unity_install_unitytls_interface", "il2cpp_custom_attrs_from_class", "il2cpp_custom_attrs_from_method", "il2cpp_custom_attrs_get_attr", "il2cpp_custom_attrs_has_attr", "il2cpp_custom_attrs_construct", "il2cpp_custom_attrs_free", "IEnumerator", "ValueType", "SByte", "IntPtr", "UInt64", "MulticastDelegate", "AttributeUsageAttribute", "Hashtable", "IList", "IDictionary", "DateTime", "FixedBufferAttribute", "get_Current", "IDisposable", "Dispose", "MONO_ARGUMENTS", "UnityEditor", "UnityEditorInternal", "Collision2D", "Physics2D", "deepprofiling", "UISystemProfilerApi", "StackTraceUtility", "ExtractStackTrace", "PrepareFrame", "ProcessFrame", "OnPlayableCreate", "OnPlayableDestroy", "OnBehaviourDelay", "OnBehaviourPlay", "OnBehaviourPause", "OnGraphStart", "OnGraphStop", "OnNotify", "FrameTime", "Module_Dynamic", "RegisterModule_", "equal", "notEqual", "lessThan", "lessThanEqual", "greaterThan", "greaterThanEqual", "uintBitsToFloat", "floatBitsToInt", "floatBitsToUint", "ivec2", "ivec3", "ivec4", "uvec2", "uvec3", "uvec4", "bvec2", "bvec3", "bvec4", "activationserver", "licenseserver", "CacheServerIPAddress", "upmServerPort", "noUpm", "enablePackageManagerTraces", "batchmode", "headless", "nographics", "runTests", "runEditorTests", "automated", "ScriptOnly", "forceFullStacktrace", "LogMessages", "cleanedLogFile", "kTransformAccessArrayChangeHandle", "kTransformAccessArrayDestroyHandle", "OnRectTransformDimensionsChange", "m_AnchoredPosition", "gRectTransformGlobalTChangeSystem", "gRectTransformParentHierarchyChangeSystem", "m_AnchorMin", "m_AnchorMax", "m_SizeDelta", "m_Pivot", "_GrabTexture", "GEOMETRY", "ALPHATEST", "TRANSPARENT", "SOFTVEGETATION", "ONLYDIRECTIONAL", "m_Shaders", "ShaderVariantCollection", "ShaderInfo", "variants", "VariantInfo", "keywords", "passType", "m_ShaderKeywords", "m_LightmapFlags", "m_EnableInstancingVariants", "m_DoubleSidedGI", "m_CustomRenderQueue", "stringTagMap", "disabledShaderPasses", "m_SavedProperties", "LIGHTMODE", "SHADOWCASTER", "SHADOWCOLLECTOR", "VertexLM", "VertexLMRGBM", "true", "REQUIREOPTIONS", "FORCENOSHADOWCASTING", "IGNOREPROJECTOR", "SHADOWSUPPORT", "PASSFLAGS", "DisableBatching", "LodFading", "VERTEX", "VERTEXLM", "VERTEXLMRGBM", "FORWARDBASE", "FORWARDADD", "PREPASSBASE", "PREPASSFINAL", "DEFERRED", "META", "MOTIONVECTORS", "NEVEREXECUTED", "SRPDEFAULTUNLIT", "CGProgram", "UnityPropertySheet", "m_TexEnvs", "m_Floats", "UnityTexEnv", "m_Scale", "FastPropertyName", "_counterBuf", "ComputeShader", "UnityStereoGlobals", "UnityStereoGlobals_LeftRight", "UnityStereoEyeIndex", "UnityEyeIndex_Left", "UnityEyeIndex_Right", "UnityStereoEyeIndices", "UnityStereoEyeIndices_LeftRight", "UnityDrawCallInfo", "ScriptMapper", "ComputeShaderVariant", "targetRenderer", "targetLevel", "kernels", "constantBuffers", "resourcesResolved", "ComputeShaderKernel", "textures", "builtinSamplers", "outBuffers", "threadGroupSize", "ComputeShaderResource", "generatedName", "samplerBindPoint", "texDimension", "ComputeShaderBuiltinSampler", "ComputeShaderCB", "byteSize", "params", "ComputeShaderParam", "arraySize", "rowCount", "colCount", "m_PreloadShaders", "NameToObjectMap", "m_ObjectToName", "UnityInstancing", "GraphicsCaps", "Matrox", "NVIDIA", "Trident", "Parallels", "Microsoft", "VMWare", "VirtualBox", "Qualcomm", "HideInInspector", "PerRendererData", "NoScaleOffset", "Gamma", "NonModifiableTextureData", "SPOT", "DIRECTIONAL_COOKIE", "POINT_COOKIE", "SHADOWS_DEPTH", "SHADOWS_SCREEN", "SHADOWS_CUBE", "SHADOWS_SOFT", "SHADOWS_SPLIT_SPHERES", "SHADOWS_SINGLE_CASCADE", "DIRLIGHTMAP_COMBINED", "DYNAMICLIGHTMAP_ON", "LIGHTMAP_SHADOW_MIXING", "SHADOWS_SHADOWMASK", "LIGHTPROBE_SH", "FOG_LINEAR", "FOG_EXP", "FOG_EXP2", "_EMISSION", "VERTEXLIGHT_ON", "SOFTPARTICLES_ON", "UNITY_HDR_ON", "LOD_FADE_CROSSFADE", "PROCEDURAL_INSTANCING_ON", "UNITY_SINGLE_PASS_STEREO", "STEREO_INSTANCING_ON", "STEREO_MULTIVIEW_ON", "STEREO_CUBEMAP_RENDER_ON", "EDITOR_VISUALIZATION", "none", "VSync", "Overhead", "NativeMem", "FileIO", "PreloadData", "m_Assets", "m_ExplicitDataLayout", "AssetReferenceStorage", "OnApplicationPause", "OnApplicationFocus", "OnApplicationQuit", "level0", "TemplateAsset", "VisualTreeAsset", "StyleSheet", "TileBase", "ResourceManager", "m_Container", "m_DependentAssets", "ResourceManager_Dependency", "m_Object", "UnitySetEventQueue", "UnitySetGraphicsDevice", "UnityRenderEvent", "UnityGetAudioEffectDefinitions", "UnityPluginLoad", "UnityPluginUnload", "UnityRenderingExtEvent", "UnityRenderingExtQuery", "UnityShaderCompilerExtEvent", "OSXEditor", "OSXPlayer", "WindowsPlayer", "WindowsEditor", "iPhonePlayer", "tvOSPlayer", "AndroidPlayer", "LinuxPlayer", "LinuxEditor", "WebGL", "UWPPlayerX86", "UWPPlayerX64", "UWPPlayerARM", "SwitchPlayer", "Afrikaans", "Arabic", "Basque", "Belarusian", "Bulgarian", "Catalan", "Chinese", "ChineseSimplified", "ChineseTraditional", "SerboCroatian", "Czech", "Danish", "Dutch", "English", "Estonian", "Faroese", "Finnish", "French", "German", "Greek", "Hebrew", "Hungarian", "Icelandic", "Indonesian", "Italian", "Korean", "Latvian", "Lithuanian", "Norwegian", "Polish", "Portuguese", "Romanian", "Russian", "Slovak", "Slovenian", "Spanish", "Swedish", "Thai", "Turkish", "Ukrainian", "Vietnamese", "TempLabels", "TempAlloc", "TempJobAlloc", "TempOverflow", "TempBackgroundJobAlloc", "RegularLabels", "Permanent", "NewDelete", "MallocFree", "DynamicGeometry", "ImmediateGeometry", "BatchedGeometry", "TextureCache", "GfxThread", "AudioProcessing", "AudioTemp", "FMOD", "FMODStream", "FMODSample", "FMODExtraDSP", "ThreadStack", "JobScheduler", "GarbageCollector", "GLib", "GLibImage", "MonoCode", "ScriptingNativeRuntime", "BaseObject", "WebCam", "MemoryProfiler", "MemoryProfilerString", "Terrain", "TerrainPhysics", "StaticString", "DynamicArray", "UTF16String", "Curl", "TypeTree", "ScriptManager", "Unet", "ClusterRenderer", "ClusterInput", "GPUMemory", "CloudService", "SceneManager", "LazyScriptCache", "Speech", "SceneLoad", "ManagedAttributeManager", "TextureStreaming", "iOSReplayKit", "NativeArray", "ScreenCapture", "CrashReporter", "EditorGui", "EditorUtility", "VersionControl", "UndoBuffer", "AssetDatabase", "AssetUsage", "PreviewImage", "AssetImporter", "RestService", "FBXImporter", "EditorGi", "ProgressiveLightmapper", "Yaml", "UnityConnect", "WebViewCallback", "Collab", "HubClient", "WebSocketClient", "LocalIPC", "ProfilerEditor", "Bootstrap", "PS4ShaderUcode", "XboxOneGpuOnionMemory", "XboxOneGpuGarlicMemory", "InvalidAlloc", "SketchUp", "SpatialMapping", "GestureRecognition", "HolographicPersistence", "HolographicSharing", "HolographicAnchors", "Licensing", "AssetReference", "CachingManager", "globalgamemanagers", "UNITY_GIVE_CHANCE_TO_ATTACH_DEBUGGER", "RuntimeInitializeOnLoadManager", "m_NamespaceNames", "m_ClassInfos", "m_ClassMethodInfos", "m_BeforeUnityMethodExecutionOrders", "m_AfterUnityMethodExecutionOrders", "m_BeforeMethodExecutionOrders", "m_AfterMethodExecutionOrders", "ClassInfo", "m_AssemblyNameIndex", "m_NamespaceIndex", "m_NumOfMethods", "m_MethodIndex", "m_IsUnityClass", "ClassMethodInfo", "m_ClassIndex", "m_MethodName", "m_OrderNumber", "Sphere", "Capsule", "Cylinder", "SphereCollider", "CapsuleCollider", "BoxCollider", "MeshCollider", "preloadedPlugins", "enabledVRDevices", "buildTags", "hasPROVersion", "isNoWatermarkBuild", "isPrototypingBuild", "isEducationalBuild", "isEmbedded", "isTrial", "hasPublishingRights", "hasShadows", "hasSoftShadows", "hasLocalLightShadows", "hasAdvancedVersion", "enableDynamicBatching", "usesOnMouseEvents", "hasClusterRendering", "m_Version", "m_AuthToken", "runtimeClassHashes", "scriptHashes", "m_GraphicsAPIs", "ReadCacheIndex", "manifest", "AssetFileHash", "ManifestFileVersion", "kMouseDown", "kMouseUp", "kMouseMove", "kMouseDrag", "kKeyDown", "kKeyUp", "kScrollWheel", "kRepaint", "kLayout", "kDragUpdated", "kDragPerform", "kIgnore", "kUsed", "kValidateCommand", "kExecuteCommand", "kContextClick", "kMouseEnterWindow", "kMouseLeaveWindow", "false", "PlayerSettings", "defaultWebScreenWidth", "defaultScreenWidthWeb", "defaultWebScreenHeight", "defaultScreenHeightWeb", "iPhoneBundleVersion", "bundleVersion", "enableHWStatistics", "preloadShaders", "keepLoadedShadersAlive", "muteOtherAudioSources", "singlePassStereoRendering", "m_StereoRenderingPath", "__info", "UnityCache", "productGUID", "AndroidProfiler", "AndroidFilterTouchesWhenObscured", "AndroidEnableSustainedPerformanceMode", "defaultScreenOrientation", "targetDevice", "useOnDemandResources", "accelerometerFrequency", "defaultCursor", "cursorHotspot", "m_HolographicTrackingLossScreen", "defaultScreenWidth", "defaultScreenHeight", "m_ActiveColorSpace", "m_MTRendering", "mobileMTRenderingBaked", "m_StackTraceTypes", "iosShowActivityIndicatorOnLoading", "androidShowActivityIndicatorOnLoading", "iosAppInBackgroundBehavior", "displayResolutionDialog", "iosAllowHTTPDownload", "allowedAutorotateToPortrait", "allowedAutorotateToPortraitUpsideDown", "allowedAutorotateToLandscapeRight", "allowedAutorotateToLandscapeLeft", "useOSAutorotation", "use32BitDisplayBuffer", "preserveFramebufferAlpha", "disableDepthAndStencilBuffers", "androidBlitType", "defaultIsNativeResolution", "macRetinaSupport", "captureSingleScreen", "deferSystemGesturesMode", "hideHomeButton", "usePlayerLog", "bakeCollisionMeshes", "forceSingleInstance", "resizableWindow", "useMacAppStoreValidation", "macAppStoreCategory", "gpuSkinning", "graphicsJobs", "xboxPIXTextureCapture", "xboxEnableAvatar", "xboxEnableKinect", "xboxEnableKinectAutoTracking", "xboxEnableFitness", "visibleInBackground", "allowFullscreenSwitch", "graphicsJobMode", "fullscreenMode", "xboxSpeechDB", "xboxEnableHeadOrientation", "xboxEnableGuest", "xboxEnablePIXSampling", "metalFramebufferOnly", "xboxOneResolution", "xboxOneSResolution", "xboxOneXResolution", "xboxOneMonoLoggingLevel", "xboxOneLoggingLevel", "xboxOneDisableEsram", "xboxOnePresentImmediateThreshold", "switchQueueCommandMemory", "vulkanEnableSetSRGBWrite", "m_SupportedAspectRatios", "preloadedAssets", "metroInputSource", "wsaTransparentSwapchain", "m_HolographicPauseOnTrackingLoss", "xboxOneDisableKinectGpuReservation", "xboxOneEnable7thCore", "isWsaHolographicRemotingEnabled", "vrSettings", "protectGraphicsMemory", "enableFrameTimingStats", "useHDRDisplay", "m_ColorGamuts", "targetPixelDensity", "resolutionScalingMode", "androidSupportedAspectRatio", "androidMaxAspectRatio", "framebufferDepthMemorylessMode", "projectName", "organizationId", "cloudEnabled", "enableNativePlatformBackendsForNewInputSystem", "disableOldInputManagerSupport", "legacyClampBlendShapeWeights", "m_SplashScreenBackgroundColor", "m_ShowUnitySplashScreen", "m_ShowUnitySplashLogo", "m_SplashScreenOverlayOpacity", "m_SplashScreenAnimation", "m_SplashScreenLogoStyle", "m_SplashScreenDrawMode", "m_SplashScreenBackgroundAnimationZoom", "m_SplashScreenLogoAnimationZoom", "m_SplashScreenBackgroundLandscapeAspect", "m_SplashScreenBackgroundPortraitAspect", "m_SplashScreenBackgroundLandscapeUvs", "m_SplashScreenBackgroundPortraitUvs", "m_SplashScreenLogos", "m_SplashScreenBackgroundLandscape", "m_SplashScreenBackgroundPortrait", "m_VirtualRealitySplashScreen", "SplashScreenLogo", "logo", "duration", "Others", "VRSettings", "cardboard", "hololens", "oculus", "enable360StereoCapture", "DeviceNone", "depthFormat", "enableTransitionView", "useSustainedPerformanceMode", "enableVideoLayer", "useProtectedVideoMemory", "minimumSupportedHeadTracking", "maximumSupportedHeadTracking", "HoloLens", "depthBufferSharingEnabled", "Oculus", "sharedDepthBuffer", "dashSupport", "m_ThreadIndex", "m_Buffer", "m_AllocatorLabel", "OnParticleCollision", "OnParticleTrigger", "OnParticleSystemStopped", "OnAnimatorMoveBuiltin", "OnAnimatorIK", "OnTriggerEnter", "OnTriggerExit", "OnTriggerStay", "OnCollisionEnter", "OnCollisionExit", "OnCollisionStay", "OnJointBreak", "OnDidVelocityChange", "GetDefaultTerrainMaterial", "GetDefaultUIMaterial", "GetDefaultUIOverdrawMaterial", "GetDefaultUIETC1SupportedMaterial", "GetDefault2DMaterial", "GetDefaultShader", "ScriptableRenderContext", "_dname", "_dname_ST", "_dname_TexelSize", "_dname_HDR", "RenderPassAttachment", "kSystemLODGroupPositionRotation", "kSystemLODGroupScale", "m_LocalReferencePoint", "m_FadeMode", "m_AnimateCrossFading", "m_LastLODIsBillboard", "m_LODs", "LODStruct50", "screenRelativeHeight", "fadeTransitionWidth", "renderers", "LODRenderer", "SetRenderTarget", "SetGlobalTexture", "unity_BillboardSize", "unity_BillboardImageTexCoords", "BILLBOARD_FACE_CAMERA_POS", "rotated", "BillboardAsset", "BillboardRenderer", "m_Billboard", "CustomRenderTextureCenters", "CustomRenderTextureSizesAndRotations", "CustomRenderTexturePrimitiveIDs", "CustomRenderTextureParameters", "_CustomRenderTextureInfo", "_SelfTexture2D", "_SelfTexture3D", "_SelfTextureCube", "UnityDitherMask2D", "UnityDitherMask3D", "UnityNormalMap", "UnityWhite", "UnityBlack", "UnityRandomRotation", "UnityRed", "UnityGrey", "UnityLinearGrey", "UnityGrayscaleRamp", "UnityHalo", "UnityBlackCube", "UnityDefault2D", "UnityDefault3D", "UnityDefault2DArray", "UnityDefaultCubeArray", "UnityDefaultCube", "UnityNHxRoughness", "Unsupported", "m_ForcedFallbackFormat", "m_DownscaleFallback", "UnityAttenuation", "m_Width", "m_MipCount", "m_Format", "m_ColorSpace", "m_TextureSettings", "GLTextureSettings", "m_FilterMode", "m_Aniso", "m_MipBias", "m_WrapU", "m_WrapV", "m_WrapW", "PVRTC", "Crunch", "Uncompressed", "Linear", "RGBA4", "BGRA4", "R5G6B5", "B5G6B5", "RGB5A1", "BGR5A1", "A1RGB5", "RGB9E5", "RG11B10", "RGB10A2", "BGR10A2", "BGR10A2XR", "BGR10XR", "BGRA10XR", "ASTC4X4", "ASTC5X5", "ASTC6X6", "ASTC8X8", "ASTC10X10", "ASTC12X12", "OnBecameVisible", "OnBecameInvisible", "TilemapRenderer", "TrailRenderer", "LineRenderer", "ParticleSystemRenderer", "VFXRenderer", "SpriteMask", "SpriteShapeRenderer", "QuadTreeBatchedNodeRenderer", "Renderer::kSystemParentHierarchy", "InternalIdentityTransform", "m_CompleteImageSize", "m_TextureFormat", "m_MipMap", "m_StreamingMipmaps", "m_StreamingMipmapsPriority", "m_ImageCount", "m_TextureDimension", "m_LightmapFormat", "m_CastShadows", "m_ReceiveShadows", "m_DynamicOccludee", "m_LightProbeUsage", "m_ReflectionProbeUsage", "m_RenderingLayerMask", "m_RendererPriority", "m_LightmapIndex", "m_LightmapIndexDynamic", "m_LightmapTilingOffset", "m_LightmapTilingOffsetDynamic", "m_Materials", "m_StaticBatchInfo", "m_StaticBatchRoot", "m_ProbeAnchor", "m_LightProbeVolumeOverride", "m_SortingLayerID", "m_SortingLayer", "m_SortingOrder", "firstSubMesh", "m_InitSource", "m_InitMaterial", "m_InitColor", "m_InitTexture", "m_UpdateMode", "m_InitializationMode", "m_UpdateZoneSpace", "m_CurrentUpdateZoneSpace", "m_UpdateZones", "m_UpdatePeriod", "m_ShaderPass", "m_CubemapFaceMask", "m_DoubleBuffered", "m_WrapUpdateZones", "m_AntiAliasing", "m_DepthFormat", "m_ColorFormat", "m_GenerateMips", "m_SRGB", "m_UseDynamicScale", "m_BindMS", "m_Dimension", "m_VolumeDepth", "UpdateZoneInfo", "updateZoneCenter", "updateZoneSize", "passIndex", "needSwap", "LightmapSettings", "m_EnlightenSceneMapping", "m_LightProbes", "m_Lightmaps", "m_LightmapsMode", "m_GISettings", "m_UseShadowmask", "m_Renderers", "m_Systems", "m_Probesets", "m_SystemAtlases", "m_TerrainChunks", "EnlightenRendererInformation", "dynamicLightmapSTInSystem", "systemId", "instanceHash", "EnlightenSystemInformation", "rendererIndex", "rendererSize", "atlasIndex", "atlasOffsetX", "atlasOffsetY", "inputSystemHash", "radiositySystemHash", "EnlightenSystemAtlasInformation", "atlasSize", "atlasHash", "firstSystemId", "EnlightenTerrainChunksInformation", "numChunksInX", "numChunksInY", "LightmapData", "m_Lightmap", "m_DirLightmap", "m_ShadowMask", "m_IndirectLightmap", "m_BounceScale", "m_IndirectOutputScale", "m_AlbedoBoost", "m_EnvironmentLightingMode", "m_EnableBakedLightmaps", "m_EnableRealtimeLightmaps", "m_DynamicEnv", "m_ShadowMaskMode", "m_UseShadowMask", "equirect", "LightProbeGroup", "LowerResBlitTexture", "UnityGraphicsQuality", "_faceIndex", "Ultra", "m_SourceTextures", "m_CurrentQuality", "m_QualitySettings", "m_DefaultStandaloneQuality", "m_DefaultMobileQuality", "m_EditorQuality", "Fastest", "Good", "Beautiful", "Fantastic", "m_StrippedMaximumLODLevel", "QualitySetting", "shadowCascade4Split", "textureQuality", "anisotropicTextures", "syncToVBL", "CubemapArray", "m_CubemapCount", "m_Rect", "m_PixelsToUnits", "m_Extrude", "m_IsPolygon", "m_RenderDataKey", "m_AtlasTags", "m_SpriteAtlas", "m_RD", "m_PhysicsShape", "SpriteRenderData", "parentId", "DelayedCallManager", "AsyncReadManager", "m_Source", "Shared", "AABB", "AnimationClip", "AnimationCurve", "AnimationState", "Array", "Base", "BitField", "bitset", "bool", "char", "ColorRGBA", "Component", "data", "deque", "double", "dynamic_array", "FastPropertyName", "first", "float", "Font", "GameObject", "GradientNEW", "GUID", "GUIStyle", "list", "Matrix4x4f", "MdFour", "MonoBehaviour", "MonoScript", "m_ByteSize", "m_Curve", "m_EditorClassIdentifier", "m_EditorHideFlags", "m_Enabled", "m_ExtensionPtr", "m_GameObject", "m_Index", "m_IsArray", "m_IsStatic", "m_MetaFlag", "m_Name", "m_ObjectHideFlags", "m_PrefabInternal", "m_PrefabParentObject", "m_Script", "m_StaticEditorFlags", "m_Type", "m_Version", "Object", "pair", "Prefab", "Quaternionf", "Rectf", "RectInt", "RectOffset", "second", "short", "size", "SInt16", "SInt32", "SInt64", "SInt8", "staticvector", "string", "TextAsset", "TextMesh", "Texture", "Texture2D", "Transform", "TypelessData", "UInt16", "UInt32", "UInt64", "UInt8", "vector", "Vector2f", "Vector3f", "Vector4f", "m_ScriptingClassIdentifier", "Gradient", "int2_storage", "int3_storage", "BoundsInt", "m_CorrespondingSourceObject", "m_PrefabInstance", "m_PrefabAsset", "_CornerRadiuses", "_ManualTex2SRGB", "GUIElement", "GUILayer", "m_PixelInset", "m_LeftBorder", "m_RightBorder", "m_TopBorder", "m_BottomBorder", "BurstCompilerService", "burst_abort", "get_Method", "lib_burst_generated", "OnLayersChanged", "OnDidAddComponent", "OnDidRemoveComponent", "m_Layer", "m_Tag", "m_IsActive", "m_GameObject", "LevelGameManager", "GlobalGameManager", "m_Component", "ComponentPair", "EditorExtension", "bool", "void", "AudioMixerLiveUpdateBool", "AudioMixerLiveUpdateFloat", "MonoObject", "RootMotionData", "Untagged", "Respawn", "EditorOnly", "MainCamera", "TransparentFX", "Water", "TagManager", "m_SortingLayers", "SortingLayerEntry", "uniqueID", "TimeManager", "PhysicsManager", "NavMeshProjectSettings", "Physics2DSettings", "ClusterInputManager", "NavMeshSettings", "UnityConnectSettings", "VFXManager", "ALLOC_FALLBACK", "debugallocator", "ALLOC_TEMP_THREAD", "systemallocator", "ALLOC_DEFAULT", "ALLOC_TEMP_JOB", "ALLOC_TEMP_BACKGROUND_JOB", "ALLOC_GFX", "ALLOC_GAMEOBJECT", "ALLOC_DEBUG", "ALLOC_BUCKET", "Custom", "SpriteAtlasManager", "m_PackedSprites", "m_PackedSpriteNamesToIndex", "m_RenderDataMap", "m_IsVariant", "SpriteAtlasData", "alphaTexture", "textureRect", "textureRectOffset", "atlasRectOffset", "uvTransform", "downscaleMultiplier", "settingsRaw", "SortingGroup::kSystemParentHierarchy", "SortingGroup::kSystemChildHierarchy", "SortingGroup", "_RendererColor", "m_Bindpose", "m_SourceSkin", "SpriteVertex", "UTF8", "standalone", "Chain", "escape", "Fire1", "Fire2", "Fire3", "Jump", "backspace", "clear", "pause", "home", "numlock", "compose", "break", "menu", "power", "euro", "undo", "m_Axes", "descriptiveName", "descriptiveNegativeName", "negativeButton", "positiveButton", "altNegativeButton", "altPositiveButton", "dead", "sensitivity", "snap", "invert", "axis", "joyNum", "m_TimeScale", "emissiveWorkspaceMemory", "AtlasedSystem", "EnlightenWorker", "UnityGPUTextureUpdater", "ProbeSetPositions", "dynamicMaterialWorkspace", "albedoBuffer", "emissiveBuffer", "albedoTextureData", "emissiveTextureData", "UnityGPUTexture", "inputBuffer", "visibilityData", "unity_MaxOutputValue", "unity_UseLinearSpace", "unity_MetaVertexControl", "unity_MetaFragmentControl", "ClusterAlbedoWorkspaceMaterialData", "RadSystemCore", "_Decode_HDR", "_ConvertToLinearSpace", "_Exposure", "Continue", "Abort", "kEGL_KHR_create_context", "kEGL_KHR_no_config_context", "kEGL_KHR_gl_colorspace", "kEGL_EXT_protected_surface", "BaseVideoTexture", "UnityAudioRenderer", "MasterDSP", "NoFX_IgnoreVol", "NoFX_UseVol", "fmodprofiler", "MixerGroupRec", "m_OutputGroup", "m_MasterGroup", "m_Snapshots", "m_StartSnapshot", "m_SuspendThreshold", "m_EnableSuspend", "m_MixerConstant", "m_AudioMixer", "m_SnapshotID", "ASrcDryGroup", "ASrcWetGroup", "AudioBehaviour", "AudioHighPassFilter", "AudioLowPassFilter", "AudioMixerSnapshot", "AudioSource", "AudioFilter", "m_CutoffFrequency", "m_HighpassResonanceQ", "m_LowpassResonanceQ", "lowpassLevelCustomCurve", "m_Volume", "m_DSPBufferSize", "m_VirtualVoiceCount", "m_RealVoiceCount", "m_SpatializerPlugin", "m_AmbisonicDecoderPlugin", "m_DisableAudio", "m_VirtualizeEffects", "AudioMixerConstant", "groups", "groupGUIDs", "effectGUIDs", "numSideChainBuffers", "snapshots", "snapshotGUIDs", "groupNameBuffer", "snapshotNameBuffer", "pluginEffectNameBuffer", "exposedParameterNames", "exposedParameterIndices", "GroupConstant", "parentConstantIndex", "volumeIndex", "pitchIndex", "mute", "solo", "bypassEffects", "EffectConstant", "groupConstantIndex", "sendTargetEffectIndex", "wetMixLevelIndex", "prevEffectIndex", "bypass", "parameterIndices", "SnapshotConstant", "transitionTypes", "transitionIndices", "m_audioClip", "m_PlayOnAwake", "m_Pitch", "m_MinVolume", "m_MaxVolume", "m_RolloffFactor", "OutputAudioMixerGroup", "Spatialize", "SpatializePostEffects", "DopplerLevel", "Pan2D", "rolloffMode", "BypassEffects", "BypassListenerEffects", "BypassReverbZones", "rolloffCustomCurve", "panLevelCustomCurve", "spreadCustomCurve", "reverbZoneMixCustomCurve", "m_GroupID", "AudioSampleProviderChannel", "AudioChorusFilter", "AudioReverbFilter", "AudioReverbZone", "m_DryMix", "m_WetMix1", "m_WetMix2", "m_WetMix3", "m_Delay", "m_Rate", "m_DryLevel", "m_Room", "m_RoomHF", "m_DecayTime", "m_DecayHFRatio", "m_ReflectionsLevel", "m_ReverbLevel", "m_ReverbDelay", "m_Diffusion", "m_Density", "m_HFReference", "m_RoomLF", "m_LFReference", "m_ReflectionsDelay", "m_ReverbPreset", "m_MinDistance", "m_MaxDistance", "m_Reflections", "m_Reverb", "colliderA", "colliderB", "collider", "CharacterJoint", "ConstantForce", "m_Extents", "m_SwingAxis", "m_LowTwistLimit", "m_HighTwistLimit", "m_TwistLimitSpring", "m_Swing1Limit", "m_Swing2Limit", "m_SwingLimitSpring", "m_EnableProjection", "m_ProjectionDistance", "m_ProjectionAngle", "m_ConnectedBody", "m_Axis", "m_AutoConfigureConnectedAnchor", "m_ConnectedAnchor", "SoftJointLimit_Unity4", "SoftJointLimitSpring", "SoftJointLimit", "contactDistance", "m_BreakForce", "m_BreakTorque", "m_EnableCollision", "m_EnablePreprocessing", "m_MassScale", "m_ConnectedMassScale", "m_Force", "m_RelativeForce", "m_Torque", "m_RelativeTorque", "m_Convex", "m_CookingOptions", "m_Radius", "m_IsTrigger", "bouncyness", "ForceRecreateCollider", "CharacterController", "ConfigurableJoint", "HingeJoint", "PhysicMaterial", "SpringJoint", "m_Direction", "m_SlopeLimit", "m_StepOffset", "m_SkinWidth", "m_MinMoveDistance", "m_SecondaryAxis", "m_XMotion", "m_YMotion", "m_ZMotion", "m_AngularXMotion", "m_AngularYMotion", "m_AngularZMotion", "m_LinearLimit", "m_LinearLimitSpring", "m_LowAngularXLimit", "m_HighAngularXLimit", "m_AngularXLimitSpring", "m_AngularYLimit", "m_AngularZLimit", "m_AngularYZLimitSpring", "m_TargetPosition", "m_TargetVelocity", "m_XDrive", "m_YDrive", "m_ZDrive", "m_TargetRotation", "m_TargetAngularVelocity", "m_RotationDriveMode", "m_AngularXDrive", "m_AngularYZDrive", "m_SlerpDrive", "m_ProjectionMode", "m_ConfiguredInWorldSpace", "m_SwapBodies", "positionSpring", "positionDamper", "maximumForce", "m_UseSpring", "m_Spring", "m_UseMotor", "m_Motor", "m_UseLimits", "m_Limits", "JointSpring", "targetPosition", "JointMotor", "targetVelocity", "force", "freeSpin", "JointLimits", "minBounce", "maxBounce", "bounceMinVelocity", "m_Mass", "m_Drag", "m_AngularDrag", "m_UseGravity", "m_IsKinematic", "m_Interpolate", "m_FreezeRotation", "m_Constraints", "m_CollisionDetection", "m_Damper", "m_Tolerance", "m_BounceTreshold", "m_BounceThreshold", "m_SolverIterationCount", "m_DefaultSolverIterations", "m_SolverVelocityIterationCount", "m_DefaultSolverVelocityIterations", "m_SolverVelocityIterations", "gColliderChangeHandle_S", "gColliderChangeHandle_TR", "gBodyChangeHandleT", "gBodyChangeHandleR", "gBodyPhysisAnimationHandle", "gColliderHierarchyChangeHandle", "gRigidbodyHierarchyChangeHandle", "m_Gravity", "m_SleepThreshold", "m_DefaultContactOffset", "m_QueriesHitBackfaces", "m_RaycastsHitTriggers", "m_QueriesHitTriggers", "m_EnableAdaptiveForce", "m_ClothInterCollisionDistance", "m_ClothInterCollisionStiffness", "m_EnablePCM", "m_ContactsGeneration", "m_LayerCollisionMatrix", "m_AutoSimulation", "m_AutoSyncTransforms", "m_ReuseCollisionCallbacks", "m_ClothInterCollisionSettingsToggle", "m_ContactPairsMode", "m_BroadphaseType", "m_WorldBounds", "m_WorldSubdivisions", "m_FrictionType", "m_EnableEnhancedDeterminism", "m_EnableUnifiedHeightmaps", "SIGILL", "SIGABRT", "SIGBUS", "SIGFPE", "SIGSEGV", "SIGPIPE", "SIGSTKFLT", "SIGSTOP", "ILL_ILLOPC", "ILL_ILLOPN", "ILL_ILLADR", "ILL_ILLTRP", "ILL_PRVOPC", "ILL_PRVREG", "ILL_COPROC", "ILL_BADSTK", "BUS_ADRALN", "BUS_ADRERR", "BUS_OBJERR", "FPE_INTDIV", "FPE_INTOVF", "FPE_FLTDIV", "FPE_FLTOVF", "FPE_FLTUND", "FPE_FLTRES", "FPE_FLTINV", "FPE_FLTSUB", "SEGV_MAPERR", "SEGV_ACCERR", "relativePath", "propertyName", "animator", "rootMotionTransformName", "muscleHandles", "MuscleHandle", "_GUIClipTexture", "__data", "UnityAssetBundle", "AssetBundleManager", "sharedAssets", "AssetBundleManifest", "AssetBundleNames", "AssetBundleInfos", "AssetBundleInfo", "AssetBundleHash", "AssetBundleDependencies", "CustomAssetBundle", "m_MainAsset", "m_PreloadTable", "m_RuntimeCompatibility", "m_AssetBundleName", "m_IsStreamedSceneAssetBundle", "m_PathFlags", "m_SceneHashes", "AssetInfo", "preloadIndex", "preloadSize", "UNITY_UI_CLIP_RECT", "gTransformGlobalTRSChangeSystem", "gSiblingHierarchyChangeSystem", "gParentHierarchyChangeSystem", "gCanvasRendererTransformGlobalTRSChangeSystem", "gCanvasRendererParentHierarchyChangeSystem", "gCanvasRendererSiblingHierarchyChangeSystem", "CanvasRenderer", "m_Camera", "m_PlaneDistance", "m_PixelPerfect", "m_ReceivesEvents", "m_OverrideSorting", "m_OverridePixelPerfect", "m_SortingBucketNormalizedSize", "m_AdditionalShaderChannelsFlag", "m_CullTransparentMesh", "OnCanvasGroupChanged", "CanvasGroup", "m_Alpha", "m_Interactable", "m_BlocksRaycasts", "m_IgnoreParentGroups", "_TextureSampleAdd", "_UseClipRect", "_ClipRect", "CanvasBatchIntermediateRenderer", "unity_GUIZTestMode", "instanceID", "m_AvatarSkeleton", "m_SkeletonPose", "m_AvatarSkeletonPose", "m_DefaultPose", "m_SkeletonNameIDArray", "m_Human", "m_HumanSkeletonIndexArray", "m_HumanSkeletonReverseIndexArray", "m_RootMotionBoneIndex", "m_RootMotionBoneX", "m_RootMotionSkeleton", "m_RootMotionSkeletonPose", "m_RootMotionSkeletonIndexArray", "m_AvatarX", "m_LeftFootX", "m_RightFootX", "m_PivotWeight", "m_FirstEval", "m_SkeletonPoseOutputReady", "m_Node", "m_ID", "m_AxesArray", "m_ParentId", "m_AxesId", "m_PreQ", "m_PostQ", "m_Sgn", "m_Limit", "m_Length", "m_Min", "m_Max", "m_LeftHand", "m_RightHand", "m_HumanBoneIndex", "m_HumanBoneMass", "m_ArmTwist", "m_ForeArmTwist", "m_UpperLegTwist", "m_LegTwist", "m_ArmStretch", "m_LegStretch", "m_FeetSpacing", "m_HasLeftHand", "m_HasRightHand", "m_HasTDoF", "m_HandBoneIndex", "ControllerConstant", "m_HumanLayerCount", "m_LayerCount", "m_HumanLayerArray", "m_LayerArray", "LayerConstant", "m_StateMachineMotionSetIndex", "m_StateMachineSynchronizedLayerIndex", "m_StateMachineMemory", "m_LayerWeights", "m_InPlayback", "m_SynchronizedLayerAutoWeightArray", "m_CurrentStateIndex", "m_NextStateIndex", "m_ExitStateIndex", "m_InterruptedStateIndex", "m_TransitionIndex", "m_TransitionSourceStateIndex", "m_TransitionType", "m_CurrentStatePreviousTime", "m_NextStatePreviousTime", "m_InterruptedStatePreviousTime", "m_ExitStatePreviousTime", "m_CurrentStateDuration", "m_NextStateDuration", "m_NextStateBaseDuration", "m_ExitStateDuration", "m_InterruptedStateDuration", "m_CurrentStateSpeedModifier", "m_NextStateSpeedModifier", "m_ExitStateSpeedModifier", "m_InterruptedStateSpeedModifier", "m_TransitionStartTime", "m_TransitionTime", "m_TransitionDuration", "m_TransitionOffset", "m_InInterruptedTransition", "m_InTransition", "m_InDynamicTransition", "m_ActiveGotoState", "m_FixedTransition", "m_CleanAfterTransition", "m_ResetPlayableGraph", "ValueArray", "m_PositionValues", "m_QuaternionValues", "m_ScaleValues", "m_FloatValues", "m_IntValues", "m_BoolValues", "m_Weight", "m_AffectRotationX", "m_AffectRotationY", "m_AffectRotationZ", "m_WorldUpObject", "sourceTransform", "m_RotationAtRest", "m_RotationOffset", "m_Roll", "m_UseUpObject", "m_IsContraintActive", "m_Sources", "m_TranslationAtRest", "m_TranslationOffsets", "m_RotationOffsets", "m_AffectTranslationX", "m_AffectTranslationY", "m_AffectTranslationZ", "m_ScaleAtRest", "m_ScaleOffset", "m_AffectScalingX", "m_AffectScalingY", "m_AffectScalingZ", "LookAtConstraint", "ParentConstraint", "RotationConstraint", "ScaleConstraint", "ConstraintSource", "m_AimVector", "m_UpVector", "m_WorldUpVector", "m_UpType", "m_TranslationOffset", "AimConstraint", "IConstraint", "PositionConstraint", "OnDidModifyAnimatorController", "OnDidModifyOverrideClip", "GravityWeight", "RuntimeAnimatorController", "functionName", "objectReferenceParameter", "floatParameter", "intParameter", "messageOptions", "m_DefaultFloat", "m_DefaultInt", "m_DefaultBool", "m_Controller", "m_PlayFixedFrameRate", "m_AnimatePhysics", "m_AnimateIfVisible", "m_AnimateOnlyIfVisible", "AvatarMask", "TransformMaskElement", "m_Animations", "m_PlayAutomatically", "m_CullingType", "m_Mask", "OnStateExit", "OnStateUpdate", "OnStateMove", "OnStateIK", "OnStateMachineEnter", "OnStateMachineExit", "AnimatorOuput", "m_Clips", "AnimatorOverrideController", "m_CullingMode", "m_ApplyRootMotion", "m_LinearVelocityBlending", "m_HasTransformHierarchy", "m_AllowConstantClipSamplingOptimization", "m_KeepAnimatorControllerStateOnDisable", "AnimationClipOverride", "m_OriginalClip", "m_OverrideClip", "AnimationClipPlayable", "AnimationLayerMixerPlayable", "AnimationMixerPlayable", "AnimationMotionXToDeltaPlayable", "AnimationOffsetPlayable", "AnimationPlayableOutput", "AnimationPosePlayable", "AnimationRemoveScalePlayable", "AnimatorControllerPlayable", "AnimationState", "AnimatorControllerParameter", "AnimationHumanStream", "AnimationScriptPlayable", "AnimationStream", "HumanBone", "SharedBetweenAnimatorsAttribute", "SkeletonBone", "StateMachineBehaviour", "IntegratedSubsystem", "IntegratedSubsystemDescriptor", "Internal_SubsystemDescriptors", "Internal_SubsystemInstances", "BoundedPlane", "MeshChangeState", "MeshGenerationResult", "MeshGenerationStatus", "MeshInfo", "MeshVertexAttributes", "PlaneAlignment", "TrackableId", "TrackableType", "TrackingState", "XRCameraSubsystem", "XRCameraSubsystemDescriptor", "XRDepthSubsystem", "XRDepthSubsystemDescriptor", "XRDisplaySubsystem", "XRDisplaySubsystemDescriptor", "XRExampleSubsystem", "XRExampleSubsystemDescriptor", "XRInputSubsystem", "XRInputSubsystemDescriptor", "XRMeshSubsystem", "XRMeshSubsystemDescriptor", "XRPlaneSubsystem", "XRPlaneSubsystemDescriptor", "XRRaycastHit", "XRRaycastSubsystem", "XRRaycastSubsystemDescriptor", "XRReferencePointSubsystem", "XRReferencePointSubsystemDescriptor", "XRSessionSubsystem", "XRSessionSubsystemDescriptor", "InputTracking", "XRNodeState", "OnInvalidateOverrideController", "Internal_AddDescriptor", "Internal_ClearManagedDescriptors", "Internal_InitializeManagedDescriptor", "Internal_ClearManagedInstances", "Internal_InitializeManagedInstance", "Internal_RemoveInstanceByPtr", "InvokeFrameReceivedEvent", "InvokePointCloudUpdatedEvent", "InvokeMeshReadyDelegate", "InvokePlaneAddedEvent", "InvokePlaneRemovedEvent", "InvokePlaneUpdatedEvent", "InvokeReferencePointUpdatedEvent", "InvokeTrackingStateChangedEvent", "InvokeTrackingEvent", "NavMesh", "NavMeshBuildSource", "NavMeshTriangulation", "AssetBundleCreateRequest", "AssetBundleRecompressOperation", "AssetBundleRequest", "BuildCompression", "ClothSkinningCoefficient", "ClothSphereColliderPair", "NativeInputSystem", "Internal_CallOnNavMeshPreUpdate", "NotifyBeforeUpdate", "NotifyDeviceDiscovered", "NotifyUpdate", "NativeContainerAttribute", "NativeContainerIsAtomicWriteOnlyAttribute", "NativeContainerIsReadOnlyAttribute", "NativeContainerNeedsThreadIndexAttribute", "NativeContainerSupportsDeallocateOnJobCompletionAttribute", "NativeContainerSupportsDeferredConvertListToArray", "NativeContainerSupportsMinMaxWriteRestrictionAttribute", "NativeDisableContainerSafetyRestrictionAttribute", "NativeDisableUnsafePtrRestrictionAttribute", "NativeSetClassTypeToNullOnScheduleAttribute", "NativeSetThreadIndexAttribute", "NativeDisableParallelForRestrictionAttribute", "NativeFixedLengthAttribute", "NativeMatchesParallelForLengthAttribute", "ProfilerMarker", "_AndroidJNIHelper", "AssemblyIsEditorAssembly", "YieldInstruction", "AttributeHelperEngine", "m_CachedPtr", "CachedAssetBundle", "ClassLibraryInitializer", "Color32", "ComputeBuffer", "CullingGroup", "CustomRenderTextureUpdateZone", "DefaultExecutionOrder", "EnumInfo", "UnityEventBase", "UnityEvent", "ExcludeFromObjectFactoryAttribute", "ExcludeFromPresetAttribute", "ExecuteAlways", "ExecuteInEditMode", "LightDataGI", "TextureMixerPlayable", "TexturePlayableOutput", "Initialization", "PostLateUpdate", "PreLateUpdate", "BuiltinRuntimeReflectionSystem", "CameraProperties", "CoreCameraValues", "CullResults", "DrawShadowsSettings", "RenderPipelineManager", "ScriptableCullingParameters", "ScriptableRuntimeReflectionSystemSettings", "ScriptableRuntimeReflectionSystemWrapper", "ShadowSplitData", "SupportedRenderingFeatures", "VisibleLight", "VisibleReflectionProbe", "ExtensionOfNativeClassAttribute", "FailedToLoadScriptObject", "GradientAlphaKey", "GradientColorKey", "HelpURLAttribute", "ImageEffectAfterScale", "ImageEffectOpaque", "ImageEffectTransformsToLDR", "ManagedStreamHelpers", "PlayableAsset", "PlayableBehaviour", "PlayableHandle", "PlayableOutputHandle", "ScriptPlayableOutput", "PreferBinarySerialization", "CustomSampler", "Recorder", "Quaternion", "RectInt", "AsyncGPUReadbackRequest", "PlatformKeywordSet", "ReflectionProbeBlendInfo", "ShaderKeywordSet", "ResourceRequest", "FormerlySerializedAsAttribute", "SerializeField", "SerializePrivateVariables", "SetupCoroutine", "TrackedReference", "UnitySynchronizationContext", "Vector2Int", "Vector3Int", "WaitForEndOfFrame", "WaitForFixedUpdate", "WaitForSeconds", "ContactFilter2D", "ContactPoint2D", "PhysicsJobOptions2D", "RaycastHit2D", "InvokeJavaProxyMethod", "Internal_ApplicationWantsToQuit", "CallLogCallback", "CallLowMemory", "Internal_ApplicationQuit", "InvokeOnBeforeRender", "InvokeCompletionEvent", "CheckIsEditorScript", "GetDefaultExecutionOrderFor", "GetParentTypeDisallowingMultipleInclusion", "GetRequiredComponents", "WrapBootConfigData", "FireOnPostRender", "FireOnPreCull", "FireOnPreRender", "SendEvents", "AppendDiagnosticSwitchToList", "FireDisplaysUpdated", "RecreateDisplayList", "CreateEnumInfoFromNativeEnum", "RequestLights", "Internal_BuiltinRuntimeReflectionSystem_New", "CleanupRenderPipeline", "DoRenderLoop_Internal", "set_Internal_ScriptableRuntimeReflectionSystemSettings_system", "get_Internal_ScriptableRuntimeReflectionSystemSettings_instance", "Internal_ScriptableRuntimeReflectionSystemWrapper_TickRealtimeProbes", "FallbackMixedLightingModeByRef", "IsLightmapBakeTypeSupportedByRef", "IsLightmapsModeSupportedByRef", "IsMixedLightingModeSupportedByRef", "ISerializationCallbackReceiver", "OnBeforeSerialize", "LowerResBlitTextureDontStripMe", "ManagedStreamLength", "ManagedStreamRead", "ManagedStreamSeek", "DontStripMeshFilter", "DontStripMeshRenderer", "ConnectedCallbackInternal", "DisconnectedCallback", "MessageCallbackInternal", "INotificationReceiver", "Internal_CreatePlayable", "Internal_GetPlayableAssetDuration", "PreloadDataDontStripMe", "PrepareMetadata", "FinalizeSnapshot", "SendReapplyDrivenProperties", "CallReflectionProbeEvent", "CallSetDefaultReflection", "Internal_ActiveSceneChanged", "Internal_SceneLoaded", "Internal_SceneUnloaded", "DoSendMouseEvents", "SetMouseMoved", "InvokeMember", "InvokeMoveNext", "PostprocessStacktrace", "ExtractStringFromExceptionInternal", "SetProjectFolder", "RequestAtlas", "PostRegisteredAtlas", "ExecuteTasks", "InitializeSynchronizationContext", "GUIContent", "m_Image", "m_Tooltip", "GUILayoutEntry", "GUILayoutGroup", "GUIScrollGroup", "GUITargetAttribute", "GUIUtility", "ScrollViewState", "SliderState", "ParticleCollisionEvent", "ParticleSystem", "ParticleSystemVertexStream", "ContactPoint", "TextGenerator", "Internal_MakeMasterEventCurrent", "CallWindowDelegate", "GetGUITargetAttrValue", "EndContainerGUIFromException", "EndGUIFromException", "ProcessEvent", "BeginGUI", "EndGUI", "MarkGUIChanged", "RemoveCapture", "TakeCapture", "Internal_GetMeshCount", "InvokeTextureRebuilt_Internal", "VisionUtility", "AudioClipPlayable", "AudioMixerPlayable", "AudioPlayableOutput", "AudioClip", "AudioSettings", "AudioSampleProvider", "WebCamDevice", "PlayableDirector", "FaceInfo", "Glyph", "GlyphMetrics", "GlyphRect", "GlyphAdjustmentRecord", "GlyphLoadFlags", "GlyphMarshallingStruct", "GlyphPackingMode", "GlyphPairAdjustmentRecord", "GlyphRenderMode", "GlyphValueRecord", "ITilemap", "XRDevice", "InvokePCMReaderCallback_Internal", "InvokePCMSetPositionCallback_Internal", "InvokeOnAudioConfigurationChanged", "InvokeOnAudioManagerUpdate", "InvokeOnAudioSourcePlay", "InvokeSampleFramesAvailable", "InvokeSampleFramesOverflow", "SendOnPlayableDirectorPause", "SendOnPlayableDirectorPlay", "SendOnPlayableDirectorStop", "GetTileAnimationData", "StartUp", "GetTileData", "RefreshTile", "SendWillRenderCanvases", "InvokeDeviceLoaded", "GetRef", "truncated", "duplicate", "png_set_gAMA", "png_set_background", "type1", "kerning", "type42", "truetype", "OTTO", "SkinnedMeshRendererManager::kHierarchySystemInvalidationRenderer", "SkinnedMeshRendererManager::kHierarchySystemInvalidationRoot", "GetResource", "OpenGL", "VideoCore", "PowerVR", "Mali", "Adreno", "Tegra", "Vivante", "GC2000", "BayTrail", "vega", "Bluestacks", "Immersion", "FRAGMENT", "HULL", "DOMAIN", "UNITY_RUNTIME_INSTANCING_ARRAY_SIZE", "HLSLcc_ClipDistances_", "texture2D", "tex2D", "GL_OES_EGL_image_external", "textureCubeLodEXT", "textureCubeGradEXT", "textureCube", "_glesVertex", "in_POSITION0", "_glesInternalTessPos", "in_INTERNALTESSPOS0", "_glesNormal", "in_NORMAL0", "_glesTANGENT", "in_TANGENT0", "_glesColor", "in_COLOR0", "_glesMultiTexCoord0", "in_TEXCOORD0", "_glesMultiTexCoord1", "in_TEXCOORD1", "_glesMultiTexCoord2", "in_TEXCOORD2", "_glesMultiTexCoord3", "in_TEXCOORD3", "_glesMultiTexCoord4", "in_TEXCOORD4", "_glesMultiTexCoord5", "in_TEXCOORD5", "_glesMultiTexCoord6", "in_TEXCOORD6", "_glesMultiTexCoord7", "in_TEXCOORD7", "_glesBLENDWEIGHT", "in_BLENDWEIGHT0", "_glesBLENDINDICES", "in_BLENDINDICES0", "GLX_", "kANGLE_instanced_arrays", "kEXT_texture_filter_anisotropic", "kEXT_sRGB", "kWEBGL_color_buffer_float", "kWEBGL_compressed_texture_astc_ldr", "kWEBGL_compressed_texture_es3", "kWEBGL_compressed_texture_etc1", "kWEBGL_compressed_texture_pvrtc", "kWEBGL_compressed_texture_s3tc", "kWEBGL_compressed_texture_s3tc_srgb", "kWEBGL_depth_texture", "kWEBGL_draw_buffers", "kWEBKIT_EXT_texture_filter_anisotropic", "kWEBKIT_WEBGL_compressed_texture_s3tc", "kGL_AMD_vertex_shader_layer", "kGL_ANDROID_extension_pack_es31a", "kGL_APPLE_color_buffer_packed_float", "kGL_APPLE_framebuffer_multisample", "kGL_APPLE_texture_format_BGRA8888", "kGL_APPLE_texture_max_level", "kGL_APPLE_texture_packed_float", "kGL_ARB_clear_buffer_object", "kGL_ARB_compute_shader", "kGL_ARB_copy_buffer", "kGL_ARB_copy_image", "kGL_ARB_depth_clamp", "kGL_ARB_depth_texture", "kGL_ARB_direct_state_access", "kGL_ARB_draw_buffers_blend", "kGL_ARB_draw_elements_base_vertex", "kGL_ARB_draw_indirect", "kGL_ARB_draw_instanced", "kGL_ARB_ES2_compatibility", "kGL_ARB_ES3_compatibility", "kGL_ARB_ES3_1_compatibility", "kGL_ARB_framebuffer_blit", "kGL_ARB_framebuffer_object", "kGL_ARB_framebuffer_sRGB", "kGL_ARB_geometry_shader4", "kGL_ARB_get_program_binary", "kGL_ARB_internalformat_query2", "kGL_ARB_invalidate_subdata", "kGL_ARB_map_buffer_range", "kGL_ARB_sampler_objects", "kGL_ARB_separate_shader_objects", "kGL_ARB_shader_image_load_store", "kGL_ARB_shader_storage_buffer_object", "kGL_ARB_shader_viewport_layer_array", "kGL_ARB_sparse_texture", "kGL_ARB_tessellation_shader", "kGL_ARB_texture_compression_bptc", "kGL_ARB_texture_compression_rgtc", "kGL_ARB_texture_cube_map_array", "kGL_ARB_texture_mirror_clamp_to_edge", "kGL_ARB_texture_storage", "kGL_ARB_texture_swizzle", "kGL_ARB_texture_view", "kGL_ARB_timer_query", "kGL_ARB_transform_feedback3", "kGL_ARB_uniform_buffer_object", "kGL_ARB_vertex_array_object", "kGL_ARB_vertex_buffer_object", "kGL_ATI_meminfo", "kGL_ATI_texture_mirror_once", "kGL_EXT_blend_minmax", "kGL_EXT_clip_cull_distance", "kGL_EXT_color_buffer_float", "kGL_EXT_color_buffer_half_float", "kGL_EXT_copy_image", "kGL_EXT_debug_label", "kGL_EXT_debug_marker", "kGL_EXT_direct_state_access", "kGL_EXT_discard_framebuffer", "kGL_EXT_disjoint_timer_query", "kGL_EXT_draw_buffers", "kGL_EXT_draw_elements_base_vertex", "kGL_EXT_draw_instanced", "kGL_EXT_float_blend", "kGL_EXT_framebuffer_multisample_blit_scaled", "kGL_EXT_geometry_shader", "kGL_EXT_map_buffer_range", "kGL_EXT_multisampled_render_to_texture", "kGL_EXT_packed_depth_stencil", "kGL_EXT_pvrtc_sRGB", "kGL_EXT_render_snorm", "kGL_EXT_separate_shader_objects", "kGL_EXT_shader_texture_lod", "kGL_EXT_shadow_samplers", "kGL_EXT_sparse_texture", "kGL_EXT_sRGB", "kGL_EXT_sRGB_write_control", "kGL_EXT_tessellation_shader", "kGL_EXT_texture_buffer", "kGL_EXT_texture_compression_rgtc", "kGL_EXT_texture_compression_s3tc", "kGL_EXT_texture_cube_map_array", "kGL_EXT_texture_filter_anisotropic", "kGL_EXT_texture_format_BGRA8888", "kGL_EXT_texture_mirror_clamp", "kGL_EXT_texture_mirror_clamp_to_edge", "kGL_EXT_texture_norm16", "kGL_EXT_texture_rg", "kGL_EXT_texture_sRGB_decode", "kGL_EXT_texture_sRGB_R8", "kGL_EXT_texture_sRGB_RG8", "kGL_EXT_texture_storage", "kGL_EXT_texture_swizzle", "kGL_EXT_texture_type_2_10_10_10_REV", "kGL_EXT_texture_view", "kGL_GOOGLE_depth_texture", "kGL_IMG_multisampled_render_to_texture", "kGL_IMG_texture_compression_pvrtc", "kGL_IMG_texture_format_BGRA8888", "kGL_KHR_blend_equation_advanced", "kGL_KHR_blend_equation_advanced_coherent", "kGL_KHR_debug", "kGL_KHR_texture_compression_astc_ldr", "kGLX_MESA_query_renderer", "kGL_NV_blend_equation_advanced", "kGL_NV_blend_equation_advanced_coherent", "kGL_NV_coverage_sample", "kGL_NV_depth_nonlinear", "kGL_NV_draw_buffers", "kGL_NV_draw_instanced", "kGL_NV_fbo_color_attachments", "kGL_NV_framebuffer_blit", "kGL_NV_framebuffer_multisample", "kGL_NV_packed_float", "kGL_NV_read_buffer", "kGL_NV_sRGB_formats", "kGL_NV_timer_query", "kGL_NV_viewport_array2", "kGL_NVX_gpu_memory_info", "kGL_OES_compressed_ETC1_RGB8_texture", "kGL_OES_copy_image", "kGL_OES_depth24", "kGL_OES_depth_texture", "kGL_OES_depth_texture_cube_map", "kGL_OES_draw_elements_base_vertex", "kGL_OES_element_index_uint", "kGL_OES_fbo_render_mipmap", "kGL_OES_geometry_shader", "kGL_OES_get_program_binary", "kGL_OES_mapbuffer", "kGL_OES_packed_depth_stencil", "kGL_OES_tessellation_shader", "kGL_OES_texture_3D", "kGL_OES_texture_cube_map_array", "kGL_OES_texture_float", "kGL_OES_texture_float_linear", "kGL_OES_texture_half_float", "kGL_OES_texture_half_float_linear", "kGL_OES_texture_npot", "kGL_OES_texture_view", "kGL_OES_vertex_array_object", "kGL_OES_vertex_half_float", "kGL_OVR_multiview", "kGL_OVR_multiview_multisampled_render_to_texture", "kGL_WEBGL_depth_texture", "uvOffsetAndScale", "glActiveTexture", "glAttachShader", "glBindAttribLocation", "glBindBuffer", "glBindFramebuffer", "glBindRenderbuffer", "glBindTexture", "glBlendEquation", "glBlendEquationSeparate", "glBlendFuncSeparate", "glBufferData", "glBufferSubData", "glCheckFramebufferStatus", "glClear", "glClearColor", "glClearDepthf", "glClearStencil", "glColorMask", "glCompileShader", "glCompressedTexImage2D", "glCompressedTexSubImage2D", "glCopyTexImage2D", "glCopyTexSubImage2D", "glCreateProgram", "glCreateShader", "glCullFace", "glDeleteBuffers", "glDeleteFramebuffers", "glDeleteProgram", "glDeleteRenderbuffers", "glDeleteShader", "glDeleteTextures", "glDepthFunc", "glDepthMask", "glDetachShader", "glDisable", "glDisableVertexAttribArray", "glDrawArrays", "glDrawElements", "glIsEnabled", "glEnable", "glEnableVertexAttribArray", "glFinish", "glFlush", "glFramebufferRenderbuffer", "glGetRenderbufferParameteriv", "glFramebufferTexture2D", "glFramebufferTexture3D", "glFrontFace", "glGenBuffers", "glGenerateMipmap", "glGenFramebuffers", "glGenRenderbuffers", "glGenTextures", "glGetActiveAttrib", "glGetActiveUniform", "glGetAttribLocation", "glGetError", "glGetFramebufferAttachmentParameteriv", "glGetIntegerv", "glGetProgramiv", "glGetProgramInfoLog", "glValidateProgram", "glGetShaderiv", "glGetShaderSource", "glGetShaderInfoLog", "glGetShaderPrecisionFormat", "glGetString", "glGetTexParameteriv", "glGetUniformiv", "glGetUniformLocation", "glGetVertexAttribiv", "glLinkProgram", "glPixelStorei", "glPolygonOffset", "glReadPixels", "glRenderbufferStorage", "glScissor", "glShaderSource", "glStencilFuncSeparate", "glStencilMask", "glStencilOpSeparate", "glTexImage2D", "glTexImage2DMultisample", "glTexParameterf", "glTexParameteri", "glTexParameteriv", "glTexSubImage2D", "glUniform1fv", "glUniform1i", "glUniform1iv", "glUniform1uiv", "glUniform2fv", "glUniform2iv", "glUniform2uiv", "glUniform3fv", "glUniform3iv", "glUniform3uiv", "glUniform4fv", "glUniform4iv", "glUniform4uiv", "glUniformMatrix3fv", "glUniformMatrix4fv", "glUseProgram", "glVertexAttrib4f", "glVertexAttrib4fv", "glVertexAttribPointer", "glViewport", "glGenQueries", "glDeleteQueries", "glBeginQuery", "glEndQuery", "glBindVertexArray", "glIsVertexArray", "glDeleteVertexArrays", "glGenVertexArrays", "glBeginTransformFeedback", "glEndTransformFeedback", "glTransformFeedbackVaryings", "glBindTransformFeedback", "glDeleteTransformFeedbacks", "glGenTransformFeedbacks", "glTexImage3D", "glTexSubImage3D", "glCompressedTexSubImage3D", "glTexStorage2D", "glTexStorage3D", "glBlitFramebuffer", "glRenderbufferStorageMultisample", "glGetStringi", "glGetIntegeri_v", "glMapBufferRange", "glUnmapBuffer", "glFlushMappedBufferRange", "glInvalidateFramebuffer", "glDrawArraysInstanced", "glDrawElementsInstanced", "glCopyBufferSubData", "glDrawBuffers", "glReadBuffer", "glFramebufferTextureLayer", "glFramebufferTexture", "glBindBufferBase", "glGetActiveUniformsiv", "glGetUniformBlockIndex", "glGetUniformIndices", "glGetActiveUniformBlockiv", "glGetActiveUniformBlockName", "glUniformBlockBinding", "glVertexAttribIPointer", "glGetProgramBinary", "glProgramBinary", "glProgramParameteri", "glGenSamplers", "glDeleteSamplers", "glBindSampler", "glSamplerParameteri", "glGetInternalformativ", "glFenceSync", "glClientWaitSync", "glDeleteSync", "glProgramUniform1fv", "glProgramUniform1iv", "glProgramUniform2fv", "glProgramUniform2iv", "glProgramUniform3fv", "glProgramUniform3iv", "glProgramUniform4fv", "glProgramUniform4iv", "glProgramUniformMatrix2fv", "glProgramUniformMatrix3fv", "glProgramUniformMatrix4fv", "glProgramUniformMatrix2x3fv", "glProgramUniformMatrix3x2fv", "glProgramUniformMatrix2x4fv", "glProgramUniformMatrix4x2fv", "glProgramUniformMatrix3x4fv", "glProgramUniformMatrix4x3fv", "glProgramUniform1uiv", "glProgramUniform2uiv", "glProgramUniform3uiv", "glProgramUniform4uiv", "glBindImageTexture", "glDispatchCompute", "glDispatchComputeIndirect", "glGetProgramInterfaceiv", "glGetProgramResourceName", "glGetProgramResourceiv", "glDrawArraysIndirect", "glDrawElementsIndirect", "glMemoryBarrier", "glPatchParameteri", "glCopyImageSubData", "glTexStorage3DMultisample", "glRenderbufferStorageMultisampleEXT", "glFramebufferTexture2DMultisampleEXT", "glRenderbufferStorageMultisampleIMG", "glFramebufferTexture2DMultisampleIMG", "glRenderbufferStorageMultisampleAPPLE", "glResolveMultisampleFramebufferAPPLE", "glRenderbufferStorageMultisampleNV", "glDebugMessageControlKHR", "glDebugMessageCallbackKHR", "glDebugMessageInsertKHR", "glObjectLabelKHR", "glGetObjectLabelKHR", "glPushDebugGroupKHR", "glPopDebugGroupKHR", "glDebugMessageControl", "glDebugMessageCallback", "glDebugMessageInsert", "glObjectLabel", "glGetObjectLabel", "glPushDebugGroup", "glPopDebugGroup", "glPushGroupMarkerEXT", "glPopGroupMarkerEXT", "glLabelObjectEXT", "glGetObjectLabelEXT", "glGenQueriesEXT", "glDeleteQueriesEXT", "glBeginQueryEXT", "glEndQueryEXT", "glGetQueryObjectui64vEXT", "glGetQueryObjectui64vNV", "glTexBufferEXT", "glTexBuffer", "glTextureView", "glTextureViewOES", "glTextureViewEXT", "glTexImage3DOES", "glTexSubImage3DOES", "glBindVertexArrayOES", "glDeleteVertexArraysOES", "glGenVertexArraysOES", "glDrawBuffersEXT", "glDrawBuffersNV", "glReadBufferNV", "glBlitFramebufferNV", "glDiscardFramebufferEXT", "glMapBufferRangeEXT", "glFlushMappedBufferRangeEXT", "glUnmapBufferOES", "glUnmapBufferEXT", "glMapBufferOES", "glGetProgramBinaryOES", "glProgramBinaryOES", "glCopyImageSubDataOES", "glCopyImageSubDataEXT", "glPatchParameteriOES", "glPatchParameteriEXT", "glDrawElementsBaseVertexOES", "glDrawElementsInstancedBaseVertexOES", "glDrawElementsBaseVertexEXT", "glDrawElementsInstancedBaseVertexEXT", "glTexPageCommitmentARB", "glTexPageCommitmentEXT", "glTexStorage2DEXT", "glTexStorage3DEXT", "glBlendBarrierKHR", "glBlendBarrierNV", "glFramebufferTextureMultiviewOVR", "glFramebufferTextureMultisampleMultiviewOVR", "glTexStorage2DMultisample", "glGetTextureParameteriv", "Shifting", "shifting", "FLOAT", "BOOLEAN", "INTEGER", "IDENTIFIER", "ASSIGNMENT", "QUESTION", "NEQUALS", "FLOAT_CAST", "INT_CAST", "BOOL_CAST", "SWZ1", "SWZ2", "SWZ3", "SWZ4", "PROGRAM", "STATEMENTLIST", "STATEMENT", "SWIZZLE", "FUNCTIONCALL", "TERNARYOP", "EXPRESSION", "ASSIGNMENT_EXPR", "nterm", "Deleting", "LeftUpperLeg", "RightUpperLeg", "LeftLowerLeg", "RightLowerLeg", "LeftFoot", "RightFoot", "Spine", "UpperChest", "Neck", "Head", "LeftShoulder", "RightShoulder", "LeftUpperArm", "RightUpperArm", "LeftLowerArm", "RightLowerArm", "LeftToes", "RightToes", "LeftEye", "RightEye", "TDOF", "ReceivedMessagesBus", "SentMessagesBus", "SentPacketBus", "NetworkIdentity", "UNetStaticUpdate", "SimPacketPool", "setupTransferSettings", "clearCookieCache", "headerCallback", "uploadCallback", "contentLengthCallback", "downloadCallback", "validateCertificateCallback", "responseCodeCallback", "errorCallback", "ClearCookieCache", "DoRequest", "POST", "HEAD", "Expect", "Referer", "Trailer", "Upgrade", "Accepted", "Unauthorized", "Forbidden", "Conflict", "Gone", "localhost", "minMaxState", "minColor", "maxColor", "maxGradient", "minGradient", "ParticleSystemForceField", "m_Parameters", "ParticleSystemForceFieldParameters", "m_Shape", "m_StartRange", "m_EndRange", "m_GravityFocus", "m_RotationRandomness", "m_DirectionCurveX", "m_DirectionCurveY", "m_DirectionCurveZ", "m_GravityCurve", "m_RotationSpeedCurve", "m_RotationAttractionCurve", "m_DragCurve", "m_VectorField", "m_VectorFieldSpeedCurve", "m_VectorFieldAttractionCurve", "m_MultiplyDragByParticleSize", "m_MultiplyDragByParticleVelocity", "MinMaxCurve", "VK_NOT_READY", "VK_TIMEOUT", "VK_EVENT_SET", "VK_EVENT_RESET", "VK_INCOMPLETE", "VK_ERROR_OUT_OF_HOST_MEMORY", "VK_ERROR_OUT_OF_DEVICE_MEMORY", "VK_ERROR_INITIALIZATION_FAILED", "VK_ERROR_DEVICE_LOST", "VK_ERROR_MEMORY_MAP_FAILED", "VK_ERROR_LAYER_NOT_PRESENT", "VK_ERROR_EXTENSION_NOT_PRESENT", "VK_ERROR_FEATURE_NOT_PRESENT", "VK_ERROR_INCOMPATIBLE_DRIVER", "VK_ERROR_TOO_MANY_OBJECTS", "VK_ERROR_FORMAT_NOT_SUPPORTED", "VK_ERROR_SURFACE_LOST_KHR", "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR", "VK_SUBOPTIMAL_KHR", "VK_ERROR_OUT_OF_DATE_KHR", "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR", "VK_ERROR_VALIDATION_FAILED_EXT", "VK_ERROR_INVALID_SHADER_NV", "unity_StereoMatrixP", "unity_StereoMatrixV", "unity_StereoMatrixInvV", "unity_StereoMatrixVP", "unity_StereoCameraProjection", "unity_StereoCameraInvProjection", "unity_StereoWorldToCamera", "unity_StereoCameraToWorld", "unity_StereoWorldSpaceCameraPos", "unity_StereoScaleOffset", "vkGetInstanceProcAddr", "vkCreateInstance", "vkDestroyInstance", "vkEnumerateInstanceExtensionProperties", "vkEnumerateInstanceLayerProperties", "vkEnumeratePhysicalDevices", "vkGetPhysicalDeviceProperties", "vkGetDeviceProcAddr", "vkGetPhysicalDeviceFeatures", "vkGetPhysicalDeviceFormatProperties", "vkGetPhysicalDeviceImageFormatProperties", "vkGetPhysicalDeviceQueueFamilyProperties", "vkGetPhysicalDeviceMemoryProperties", "vkCreateDevice", "vkDestroyDevice", "vkEnumerateDeviceExtensionProperties", "vkEnumerateDeviceLayerProperties", "vkGetDeviceQueue", "vkQueueSubmit", "vkQueueWaitIdle", "vkDeviceWaitIdle", "vkAllocateMemory", "vkFreeMemory", "vkMapMemory", "vkUnmapMemory", "vkFlushMappedMemoryRanges", "vkInvalidateMappedMemoryRanges", "vkGetDeviceMemoryCommitment", "vkBindBufferMemory", "vkBindImageMemory", "vkGetBufferMemoryRequirements", "vkGetImageMemoryRequirements", "vkGetImageSparseMemoryRequirements", "vkGetPhysicalDeviceSparseImageFormatProperties", "vkQueueBindSparse", "vkCreateFence", "vkDestroyFence", "vkResetFences", "vkGetFenceStatus", "vkWaitForFences", "vkCreateSemaphore", "vkDestroySemaphore", "vkCreateEvent", "vkDestroyEvent", "vkGetEventStatus", "vkSetEvent", "vkResetEvent", "vkCreateQueryPool", "vkDestroyQueryPool", "vkGetQueryPoolResults", "vkCreateBuffer", "vkDestroyBuffer", "vkCreateBufferView", "vkDestroyBufferView", "vkCreateImage", "vkDestroyImage", "vkGetImageSubresourceLayout", "vkCreateImageView", "vkDestroyImageView", "vkCreateShaderModule", "vkDestroyShaderModule", "vkCreatePipelineCache", "vkDestroyPipelineCache", "vkGetPipelineCacheData", "vkMergePipelineCaches", "vkCreateGraphicsPipelines", "vkCreateComputePipelines", "vkDestroyPipeline", "vkCreatePipelineLayout", "vkDestroyPipelineLayout", "vkCreateSampler", "vkDestroySampler", "vkCreateDescriptorSetLayout", "vkDestroyDescriptorSetLayout", "vkCreateDescriptorPool", "vkDestroyDescriptorPool", "vkResetDescriptorPool", "vkAllocateDescriptorSets", "vkFreeDescriptorSets", "vkUpdateDescriptorSets", "vkCreateFramebuffer", "vkDestroyFramebuffer", "vkCreateRenderPass", "vkDestroyRenderPass", "vkGetRenderAreaGranularity", "vkCreateCommandPool", "vkDestroyCommandPool", "vkResetCommandPool", "vkAllocateCommandBuffers", "vkFreeCommandBuffers", "vkBeginCommandBuffer", "vkEndCommandBuffer", "vkResetCommandBuffer", "vkCmdBindPipeline", "vkCmdSetViewport", "vkCmdSetScissor", "vkCmdSetLineWidth", "vkCmdSetDepthBias", "vkCmdSetBlendConstants", "vkCmdSetDepthBounds", "vkCmdSetStencilCompareMask", "vkCmdSetStencilWriteMask", "vkCmdSetStencilReference", "vkCmdBindDescriptorSets", "vkCmdBindIndexBuffer", "vkCmdBindVertexBuffers", "vkCmdDraw", "vkCmdDrawIndexed", "vkCmdDrawIndirect", "vkCmdDrawIndexedIndirect", "vkCmdDispatch", "vkCmdDispatchIndirect", "vkCmdCopyBuffer", "vkCmdCopyImage", "vkCmdBlitImage", "vkCmdCopyBufferToImage", "vkCmdCopyImageToBuffer", "vkCmdUpdateBuffer", "vkCmdFillBuffer", "vkCmdClearColorImage", "vkCmdClearDepthStencilImage", "vkCmdClearAttachments", "vkCmdResolveImage", "vkCmdSetEvent", "vkCmdResetEvent", "vkCmdWaitEvents", "vkCmdPipelineBarrier", "vkCmdBeginQuery", "vkCmdEndQuery", "vkCmdResetQueryPool", "vkCmdWriteTimestamp", "vkCmdCopyQueryPoolResults", "vkCmdPushConstants", "vkCmdBeginRenderPass", "vkCmdNextSubpass", "vkCmdEndRenderPass", "vkCmdExecuteCommands", "vkDestroySurfaceKHR", "vkGetPhysicalDeviceSurfaceSupportKHR", "vkGetPhysicalDeviceSurfaceCapabilitiesKHR", "vkGetPhysicalDeviceSurfaceFormatsKHR", "vkGetPhysicalDeviceSurfacePresentModesKHR", "vkCreateSwapchainKHR", "vkDestroySwapchainKHR", "vkGetSwapchainImagesKHR", "vkAcquireNextImageKHR", "vkQueuePresentKHR", "vkGetPhysicalDeviceDisplayPropertiesKHR", "vkGetPhysicalDeviceDisplayPlanePropertiesKHR", "vkGetDisplayPlaneSupportedDisplaysKHR", "vkGetDisplayModePropertiesKHR", "vkCreateDisplayModeKHR", "vkGetDisplayPlaneCapabilitiesKHR", "vkCreateDisplayPlaneSurfaceKHR", "vkCreateSharedSwapchainsKHR", "vkCreateAndroidSurfaceKHR", "vkGetImageMemoryRequirements2KHR", "vkGetBufferMemoryRequirements2KHR", "vkGetImageSparseMemoryRequirements2KHR", "VK_EXT_debug_marker", "Stylus", "Touchscreen", "Touchpad", "Mouse", "AndroidSensor", "product", "manufacturer", "deviceDescriptor", "productId", "vendorId", "isVirtual", "motionAxes", "inputSources", "sensorType", "minDelay", "CollectGPUSamples", "ArchiveRedirect", "UnityFS", "UnityWeb", "UnityRaw", "UnityArchive", "DistortMesh", "IsTracked", "DevicePosition", "DeviceRotation", "DeviceVelocity", "DeviceAngularVelocity", "DeviceAcceleration", "DeviceAngularAcceleration", "LeftEyePosition", "LeftEyeRotation", "LeftEyeVelocity", "LeftEyeAngularVelocity", "LeftEyeAcceleration", "LeftEyeAngularAcceleration", "RightEyePosition", "RightEyeRotation", "RightEyeVelocity", "RightEyeAngularVelocity", "RightEyeAcceleration", "RightEyeAngularAcceleration", "CenterEyePosition", "CenterEyeRotation", "CenterEyeVelocity", "CenterEyeAngularVelocity", "CenterEyeAcceleration", "CenterEyeAngularAcceleration", "vr_active_controllers", "deviceStatus", "MuteGroup", "Send", "EmbeddedFader", "AudioDistortionFilter", "AudioEchoFilter", "m_DistortionLevel", "m_DecayRatio", "m_WetMix", "SampleClip", "AudioListener", "m_LoadType", "m_Frequency", "m_BitsPerSample", "m_IsTrackerFormat", "m_Ambisonic", "m_SubsoundIndex", "m_PreloadAudioData", "m_LoadInBackground", "m_Legacy3D", "m_Resource", "m_CompressionFormat", "StreamedResource", "DPad", "Grip", "IndexTouch", "ThumbTouch", "Secondary2DAxis", "IndexFinger", "MiddleFinger", "RingFinger", "PinkyFinger", "CombinedTrigger", "PrimaryButton", "PrimaryTouch", "SecondaryButton", "SecondaryTouch", "GripButton", "TriggerButton", "MenuButton", "Thumbrest", "ButtonId0", "ButtonId1", "ButtonId2", "ButtonId3", "ButtonId4", "ButtonId5", "ButtonId6", "ButtonId7", "ButtonId8", "ButtonId9", "ButtonId10", "ButtonId11", "ButtonId12", "ButtonId13", "ButtonId14", "ButtonId15", "ButtonId16", "ButtonId17", "ButtonId18", "ButtonId19", "AxisId1", "AxisId2", "AxisId3", "AxisId4", "AxisId5", "AxisId6", "AxisId7", "AxisId8", "AxisId9", "AxisId10", "AxisId11", "AxisId12", "AxisId13", "AxisId14", "AxisId15", "AxisId16", "AxisId17", "AxisId18", "AxisId19", "AxisId20", "AxisId21", "AxisId22", "AxisId23", "AxisId24", "AxisId25", "AxisId26", "AxisId27", "AxisId28", "CameraRotation", "CameraVelocity", "CameraAngularVelocity", "CameraAcceleration", "CameraAngularAcceleration", "XRInputV1", "deviceName", "deviceRole", "deviceId", "inputFeatures", "usageHints", "featureType", "customSize", "content", "Generic", "TrackingReference", "HardwareTracker", "LegacyController", "xrSubsystemStart", "xrSubsystemStop", "subsystem", "xrSubsystemInfo", "plugin_name", "library_name", "libraryName", "supportsManagedProviders", "OnTerrainChanged", "TerrainChangedFlags", "_TerrainTreeLightDirections", "_TerrainTreeLightColors", "_TerrainEngineBendTree", "_TreeInstanceColor", "_TreeInstanceScale", "_SquashPlaneNormal", "_SquashAmount", "_Wind", "_TreeBillboardCameraRight", "_TreeBillboardCameraUp", "_TreeBillboardCameraFront", "_TreeBillboardCameraPos", "_TreeBillboardDistances", "m_SplatDatabase", "m_DetailDatabase", "m_Heightmap", "m_Splats", "m_TerrainLayers", "m_AlphaTextures", "m_AlphamapResolution", "m_BaseMapResolution", "SplatPrototype", "normalMap", "tileSize", "tileOffset", "specularMetallic", "smoothness", "m_Patches", "m_DetailPrototypes", "m_PatchCount", "m_PatchSamples", "m_RandomRotations", "WavingGrassTint", "m_WavingGrassStrength", "m_WavingGrassAmount", "m_WavingGrassSpeed", "m_PreloadTextureAtlasData", "DetailPatch", "layerIndices", "numberOfObjects", "DetailPrototype", "prototypeTexture", "minWidth", "maxWidth", "minHeight", "maxHeight", "noiseSpread", "bendFactor", "healthyColor", "dryColor", "lightmapFactor", "usePrototypeMesh", "m_Heights", "m_PrecomputedError", "m_MinMaxPatchHeights", "m_Thickness", "m_Levels", "_maxDistanceSqr", "_CameraPosition", "_WaveAndDistance", "_WavingTint", "_CameraRight", "_CameraUp", "_ST_WindVector", "_ST_WindGlobal", "_ST_WindBranch", "_ST_WindBranchTwitch", "_ST_WindBranchWhip", "_ST_WindBranchAnchor", "_ST_WindBranchAdherences", "_ST_WindTurbulences", "_ST_WindLeaf1Ripple", "_ST_WindLeaf1Tumble", "_ST_WindLeaf1Twitch", "_ST_WindLeaf2Ripple", "_ST_WindLeaf2Tumble", "_ST_WindLeaf2Twitch", "_ST_WindFrondRipple", "_ST_WindAnimation", "_WindEnabled", "ARGB32", "RG16", "A2R10G10B10", "m_TerrainData", "m_TreeDistance", "m_TreeBillboardDistance", "m_TreeCrossFadeLength", "m_TreeMaximumFullLODCount", "m_DetailObjectDistance", "m_DetailObjectDensity", "m_HeightmapPixelError", "m_SplatMapDistance", "m_HeightmapMaximumLOD", "m_DrawHeightmap", "m_DrawInstanced", "m_DrawTreesAndFoliage", "m_MaterialType", "m_LegacySpecular", "m_LegacyShininess", "m_MaterialTemplate", "m_ExplicitProbeSetHash", "m_BakeLightProbesForTrees", "m_PreserveTreePrototypeLayers", "m_DynamicUVST", "m_ChunkDynamicUVST", "defaultShader", "defaultBaseMapGenShader", "m_GroupingID", "m_AllowAutoConnect", "SpeedTreeLocalWind", "TerrainLayer", "m_DiffuseTexture", "m_NormalMapTexture", "m_MaskMapTexture", "m_TileSize", "m_TileOffset", "m_Specular", "m_Metallic", "m_Smoothness", "m_NormalScale", "m_DiffuseRemapMin", "m_DiffuseRemapMax", "m_MaskMapRemapMin", "m_MaskMapRemapMax", "col_frame_delta_time_ms", "ctx_name", "change_active_scene", "ctx_prev_scene", "ctx_new_scene", "unload_scene", "ctx_scene", "merge_scenes", "ctx_scene1", "ctx_scene2", "scene_load", "scene_load_additive", "scene_load_first_scene", "scene_open_editor", "scene_open_editor_playmode", "scene_open_additive_editor", "scene_loaded_after_awake", "ctx_mode", "changed_target_frame_rate", "ctx_prev_frame_rate", "total_frames", "total_long_frames", "long_frames_since_reset", "time_since_reset_dtms", "mean_dtms", "min_dtms", "max_dtms", "variance_dtms", "draw_calls", "batches", "frame_count_by_second", "perf", "mean", "variance", "elapsed_time_ms", "collector_perf_ns", "histogram", "apiUsage", "deviceStats", "assembly_info", "package", "package_ver", "debug_device", "Accept", "appResume", "appStart", "previous_sessionid", "appInstall", "appPause", "appStop", "unity_ver", "app_ver", "appRunning", "local_time_offset", "dispatcherStats", "appUpdate", "advanced_pro", "personal", "dev_release", "adhoc", "enterprise", "analytics", "header", "common", "StateConstant", "m_MotionSetCount", "m_SynchronizedLayerCount", "StateMachineConstant", "Thumb", "Middle", "Ring", "Little", "Proximal", "Intermediate", "Distal", "gradient", "multiplier", "influenceFilter", "influenceMask", "influenceList", "looping", "simulationSpeed", "startDelay", "randomDistribution", "rangeCurve", "intensityCurve", "maxLights", "orbitalX", "orbitalY", "orbitalZ", "orbitalOffsetX", "orbitalOffsetY", "orbitalOffsetZ", "radial", "speedModifier", "inWorldSpace", "MinMaxGradient", "separateAxes", "timeMode", "frameOverTime", "startFrame", "speedRange", "tilesX", "tilesY", "animationType", "rowIndex", "cycles", "uvChannelMask", "randomRow", "sprites", "flipU", "flipV", "SpriteData", "GridLayout", "CertificateHandler", "DownloadHandler", "UnityWebRequestAsyncOperation", "UnityEngineInternal", "WebRequestUtils", "VFXEventAttribute", "VFXExpressionValues", "VFXSpawnerCallbacks", "VFXSpawnerState", "VisualEffectAsset", "DoNothing", "ValidateCertificateNative", "ReceiveData", "GetProgress", "CompleteContent", "ReceiveContentLength", "RedirectTo", "CreateExpressionValuesWrapper", "RegisterPerCameraCallback", "UnregisterPerCameraCallback", "SetWrapValue", "CreateSpawnerStateWrapper", "TerrainUtility", "PatchExtents", "TreeInstance", "TreePrototype", "CreateTerrainGameObject", "GetAlphamapResolutionInternal", "YGNodeBaselineInvoke", "YGNodeMeasureInvoke", "MGiI", "IiGM", "raster1", "sfnt", "TrueType", "smooth", "nonmarkingreturn", "notequal", "infinity", "lessequal", "greaterequal", "partialdiff", "summation", "product", "integral", "Omega", "radical", "approxequal", "Delta", "nonbreakingspace", "lozenge", "apple", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "three", "four", "five", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "braceleft", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "ordfeminine", "Lslash", "Oslash", "ordmasculine", "dotlessi", "lslash", "oslash", "germandbls", "onesuperior", "logicalnot", "trademark", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold", "Delta", "Omega", "fraction", "hyphen", "macron", "periodcentered", "space", "Tcommaaccent", "tcommaaccent", "otvalid", "Locality", "Organization", "emailAddress", "Surname", "Initials", "Pseudonym", "md5WithRSAEncryption", "sha224WithRSAEncryption", "sha256WithRSAEncryption", "sha384WithRSAEncryption", "sha512WithRSAEncryption", "rsaEncryption", "secp192r1", "secp224r1", "secp256r1", "secp384r1", "secp521r1", "secp192k1", "secp224k1", "secp256k1", "brainpoolP256r1", "brainpool256r1", "brainpoolP384r1", "brainpool384r1", "brainpoolP512r1", "brainpool512r1", "desCBC", "FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22830", "unity_ParticleUVShiftData", "unity_ParticleUseMeshColors", "unity_ParticleInstanceData", "m_SortMode", "m_MinParticleSize", "m_MaxParticleSize", "m_CameraVelocityScale", "m_VelocityScale", "m_LengthScale", "m_SortingFudge", "m_NormalDirection", "m_ShadowBias", "m_RenderAlignment", "m_Flip", "m_UseCustomVertexStreams", "m_EnableGPUInstancing", "m_ApplyActiveColorSpace", "m_AllowRoll", "m_VertexStreams", "m_Mesh1", "m_Mesh2", "m_Mesh3", "m_VertexStreamMask", "out_pos", "out_normal", "out_tangent", "MtxBlock", "hlslcc_mtx", "hlslcc_zcmp", "_counter", "boxThickness", "radiusThickness", "donutRadius", "m_Rotation", "placementMode", "m_MeshMaterialIndex", "m_MeshNormalOffset", "m_MeshSpawn", "m_MeshRenderer", "m_SkinnedMeshRenderer", "m_SpriteRenderer", "m_UseMeshMaterialIndex", "m_UseMeshColors", "alignToDirection", "m_TextureClipChannel", "m_TextureClipThreshold", "m_TextureUVChannel", "m_TextureColorAffectsParticles", "m_TextureAlphaAffectsParticles", "m_TextureBilinearFiltering", "randomDirectionAmount", "sphericalDirectionAmount", "randomPositionAmount", "boxX", "boxY", "boxZ", "m_MeshScale", "randomDirection", "MultiModeParameter", "spread", "arcore_unity_api", "ArCoreUnity_getARCoreSupportStatus", "ArCoreUnity_getPose", "ArCoreUnity_onUnityPlayerPause", "ArCoreUnity_onUnityPlayerResume", "ArCoreUnity_onUnityEarlyUpdate", "ArCoreUnity_onUnityBeforeRenderARBackground", "SentPacketHostBus", "UNET", "ReceivedEventBus", "SentEventBus", "umbravalidator", "baabaa", "arrayTest", "floatfoo", "zerotest", "pullo", "karhua", "karhu", "olvi", "TILES_VISITED", "EXT_PORTALS_PROCESSED", "CELLS_PROCESSED", "CELL_REVISITS", "CELL_SORT_FAILURES", "OBJECTS_STATICALLY_CULLED", "WARNING", "Umbra", "OnTilemapChanged", "kOnTilemapTilePreChange", "kOnTilemapTileChanged", "Tilemap::kSystemParentHierarchy", "TilemapCollider2D", "m_Tiles", "m_AnimatedTiles", "m_TileAssetArray", "m_TileSpriteArray", "m_TileMatrixArray", "m_TileColorArray", "m_AnimationFrameRate", "m_Origin", "m_TileAnchor", "m_TileOrientation", "m_TileOrientationMatrix", "m_TileIndex", "m_TileSpriteIndex", "m_TileMatrixIndex", "m_TileColorIndex", "m_ObjectToInstantiate", "m_TileFlags", "m_ColliderType", "m_AnimatedSprites", "m_AnimationSpeed", "m_AnimationTimeOffset", "m_IsLooping", "TilemapRefCountedData", "m_RefCount", "m_ChunkSize", "m_ChunkCullingBounds", "m_MaxChunkCount", "m_MaxFrameAge", "m_SortOrder", "m_DetectChunkCullingBounds", "BoxCollider2D", "CapsuleCollider2D", "CompositeCollider2D", "EdgeCollider2D", "Rigidbody2D", "m_EdgeRadius", "m_SpriteTilingProperty", "m_AutoTiling", "pivot", "oldSize", "newSize", "adaptiveTilingThreshold", "adaptiveTiling", "m_GeometryType", "m_GenerationType", "m_ColliderPaths", "m_CompositePaths", "m_VertexDistance", "SubCollider", "m_Collider", "IntPoint", "m_Paths", "m_BodyType", "m_Simulated", "m_UseFullKinematicContacts", "m_UseAutoMass", "m_LinearDrag", "m_GravityScale", "m_SleepingMode", "m_FixedAngle", "OnCompositeColliderRemoved", "m_RaycastsStartInColliders", "m_QueriesStartInColliders", "m_MinPenetrationForPenalty", "OnCollisionEnter2D", "OnCollisionExit2D", "OnCollisionStay2D", "OnTriggerEnter2D", "OnTriggerExit2D", "OnTriggerStay2D", "m_Poly", "m_UsedByEffector", "m_UsedByComposite", "CircleCollider2D", "PhysicsMaterial2D", "PolygonCollider2D", "m_VelocityIterations", "m_PositionIterations", "m_VelocityThreshold", "m_MaxLinearCorrection", "m_MaxAngularCorrection", "m_MaxTranslationSpeed", "m_MaxRotationSpeed", "m_BaumgarteScale", "m_BaumgarteTimeOfImpactScale", "m_TimeToSleep", "m_LinearSleepTolerance", "m_AngularSleepTolerance", "m_JobOptions", "m_CallbacksOnDisable", "useMultithreading", "useConsistencySorting", "m_InterpolationPosesPerJob", "m_NewContactsPerJob", "m_CollideContactsPerJob", "m_ClearFlagsPerJob", "m_ClearBodyForcesPerJob", "m_SyncDiscreteFixturesPerJob", "m_SyncContinuousFixturesPerJob", "m_FindNearestContactsPerJob", "m_UpdateTriggerContactsPerJob", "m_IslandSolverCostThreshold", "m_IslandSolverBodyCostScale", "m_IslandSolverContactCostScale", "m_IslandSolverJointCostScale", "m_IslandSolverBodiesPerJob", "m_IslandSolverContactsPerJob", "friction", "overrideLegacyVR", "managedInfo", "XRManagedProviderDescriptor", "supportName", "supportVersion", "_NormalTex", "TerrainHeightMap", "_TerrainPatchInstanceData", "_TerrainHeightmapRecipSize", "_TerrainHeightmapScale", "_TerrainNormalmapGenSize", "_TerrainTilesScaleOffsets", "_SpecColor", "_Shininess", "_TerrainHeightmapTexture", "_TerrainNormalmapTexture", "AddPassShader", "BaseMapShader", "TerrainNormalMap", "_WindQuality", "BillboardShader", "_HalfOverCutoff", "m_TreeInstances", "m_TreePrototypes", "_GlobalWindTime", "_Control", "_NORMALMAP", "_MASKMAP", "SplatCount", "m_SpeedTreeWindAsset", "widthScale", "heightScale", "lightmapColor", "prefab", "app_build", "install_mode", "install_store", "build_guid", "build_tags", "client_report_id", "client_ts", "cpu_count", "cpu_freq", "device_info_flags", "rooted_or_jailbroken", "device_ram", "screen_size", "screen_dpi", "refresh_rate", "sensor_flags", "system_language", "device_type", "device_vram", "enabled_vr_devices", "gpu_api", "gpu_caps", "gpu_copy_texture_support", "gpu_device_id", "gpu_vendor_id", "gpu_driver", "gpu_max_cubemap_size", "gpu_max_texture_size", "gpu_render_texture_support", "gpu_shader_caps", "gpu_supported_render_target_count", "gpu_texture_format_support", "gpu_vendor", "gpu_version", "is_editor", "is_fullscreen", "is_wsar_remote", "is_ar_app", "localprojectid", "os_family", "platformid", "appid", "screen_orientation", "scripting_backend", "sdk_ver", "sdk_ver_full", "vr_device_name", "vr_device_model", "counter", "managed_exception", "native_crash", "log_messages", "user_metadata", "signal_name", "signal_code", "signal_address", "signal_pc", "crashed", "image_uuid", "image_name", "image_base_address", "pdb_name", "is_user_image", "absolute_pc", "relative_pc", "managed", "managed_frame_desc", "ManagedException", "NativeCrash", "StackFrame", "LogMessage", "UserMetadata", "WindZone", "m_WindMain", "m_WindTurbulence", "m_WindPulseMagnitude", "m_WindPulseFrequency", "cameraPosition", "sortPriority", "OnPlay", "OnStop", "m_Infos", "VisualEffectInfo", "m_Expressions", "m_PropertySheet", "m_ExposedExpressions", "m_Buffers", "m_CPUBuffers", "m_RendererSettings", "m_CullingFlags", "VFXExpressionContainer", "m_NeedsLocalToWorld", "m_NeedsWorldToLocal", "Expression", "valueIndex", "VFXPropertySheetSerializedBase", "m_Float", "m_Vector2f", "m_Vector3f", "m_Vector4f", "m_Uint", "m_Int", "m_Matrix4x4f", "m_AnimationCurve", "m_Gradient", "m_NamedObject", "m_Bool", "VFXField", "m_Array", "VFXEntryExpressionValue", "m_ExpressionIndex", "m_Value", "VFXMapping", "nameId", "VFXGPUBufferDesc", "capacity", "VFXLayoutElementDesc", "VFXLayoutOffset", "bucket", "structure", "VFXCPUBufferDesc", "initialData", "VFXCPUBufferData", "VFXEventDesc", "playSystems", "stopSystems", "VFXRendererSettings", "VFXSystemDesc", "tasks", "VFXTaskDesc", "OnGridDimensionsChanged", "Grid", "m_CellSize", "m_CellGap", "m_CellLayout", "m_CellSwizzle", "AnalyticsSessionInfo", "AnalyticsSessionState", "ContinuousEvent", "RemoteConfigSettings", "RemoteSettings", "VideoClipPlayable", "Video3DLayout", "VideoAspectRatio", "VideoAudioOutputMode", "VideoClip", "VideoRenderMode", "VideoSource", "VideoTimeReference", "VideoTimeSource", "VideoError", "VideoPixelFormat", "VideoPlayback", "VideoPlaybackMgr", "CallSessionStateChanged", "RemoteConfigSettingsUpdated", "RemoteSettingsBeforeFetchFromServer", "RemoteSettingsUpdateCompleted", "RemoteSettingsUpdated", "InvokeClockResyncOccurredCallback_Internal", "InvokeErrorReceivedCallback_Internal", "InvokeFrameDroppedCallback_Internal", "InvokeFrameReadyCallback_Internal", "InvokeLoopPointReachedCallback_Internal", "InvokePrepareCompletedCallback_Internal", "InvokeSeekCompletedCallback_Internal", "InvokeStartedCallback_Internal", "OpticalSize", "Slant", "cpop", "DFKaiShu", "DLCHayMedium", "DLCHayBold", "DLCKaiMedium", "DLCLiShu", "DLCRoundBold", "MingLiU", "MingMedium", "PMingLiU", "MingLi43", "EC_DH", "ECDSA", "RIPEMD160", "samsung", "AMediaFormat_new", "AMediaFormat_delete", "AMediaFormat_toString", "AMediaFormat_getInt32", "AMediaFormat_getInt64", "AMediaFormat_getFloat", "AMediaFormat_getBuffer", "AMediaFormat_getString", "AMediaFormat_setInt32", "AMediaFormat_setInt64", "AMediaFormat_setFloat", "AMediaFormat_setString", "AMediaFormat_setBuffer", "AMediaExtractor_new", "AMediaExtractor_delete", "AMediaExtractor_setDataSourceFd", "AMediaExtractor_setDataSource", "AMediaExtractor_getTrackCount", "AMediaExtractor_getTrackFormat", "AMediaExtractor_selectTrack", "AMediaExtractor_unselectTrack", "AMediaExtractor_readSampleData", "AMediaExtractor_getSampleFlags", "AMediaExtractor_getSampleTrackIndex", "AMediaExtractor_getSampleTime", "AMediaExtractor_advance", "AMediaExtractor_seekTo", "AMediaCodec_createCodecByName", "AMediaCodec_createDecoderByType", "AMediaCodec_createEncoderByType", "AMediaCodec_delete", "AMediaCodec_configure", "AMediaCodec_start", "AMediaCodec_stop", "AMediaCodec_flush", "AMediaCodec_getInputBuffer", "AMediaCodec_getOutputBuffer", "AMediaCodec_dequeueInputBuffer", "AMediaCodec_queueInputBuffer", "AMediaCodec_dequeueOutputBuffer", "AMediaCodec_getOutputFormat", "AMediaCodec_releaseOutputBuffer", "AMediaCodec_releaseOutputBufferAtTime", "AMEDIAFORMAT_KEY_AAC_PROFILE", "AMEDIAFORMAT_KEY_BIT_RATE", "AMEDIAFORMAT_KEY_CHANNEL_COUNT", "AMEDIAFORMAT_KEY_CHANNEL_MASK", "AMEDIAFORMAT_KEY_COLOR_FORMAT", "AMEDIAFORMAT_KEY_DURATION", "AMEDIAFORMAT_KEY_FLAC_COMPRESSION_LEVEL", "AMEDIAFORMAT_KEY_FRAME_RATE", "AMEDIAFORMAT_KEY_HEIGHT", "AMEDIAFORMAT_KEY_IS_ADTS", "AMEDIAFORMAT_KEY_IS_AUTOSELECT", "AMEDIAFORMAT_KEY_IS_DEFAULT", "AMEDIAFORMAT_KEY_IS_FORCED_SUBTITLE", "AMEDIAFORMAT_KEY_I_FRAME_INTERVAL", "AMEDIAFORMAT_KEY_LANGUAGE", "AMEDIAFORMAT_KEY_MAX_HEIGHT", "AMEDIAFORMAT_KEY_MAX_INPUT_SIZE", "AMEDIAFORMAT_KEY_MAX_WIDTH", "AMEDIAFORMAT_KEY_MIME", "AMEDIAFORMAT_KEY_PUSH_BLANK_BUFFERS_ON_STOP", "AMEDIAFORMAT_KEY_REPEAT_PREVIOUS_FRAME_AFTER", "AMEDIAFORMAT_KEY_SAMPLE_RATE", "AMEDIAFORMAT_KEY_WIDTH", "AMEDIAFORMAT_KEY_STRIDE", "AMEDIAFORMAT_KEY_ROTATION", "webm", "meizu", "SEC_OMX_Init", "VideoDecoderLooper", "GeoFileStream", "GeoFp16Texture", "GeoRGBXTexture", "TaskData", "m_InternalData", "IdentVertLinkBuilder", "TriGroupSelection", "GenuineIntel", "AuthenticAMD", "event_object", "deallocated", "numAllocCalls", "usedRatio", "averageAlloc", "GeoMsgLogger", "XboxOne", "LinuxArm", "AndroidIntel", "WinRTArm", "WinPhone", "WinPhoneArm", "visSize", "DefaultThreadGroup", "WorkerThreadData", "m_InputLight", "m_WorkingMemory", "LogDispatcher", "AllocateProbeSet", "BaseProbeSet", "CpuCubeMap", "m_DirectionalVisibilityWorkspace", "visData", "m_InputLightingBuffer", "m_TransparencyWorkspace", "m_ProbeBounceWorkspace", "m_BounceBuffer", "m_EnvOnlyBounceBuffer", "CpuAlbedoHandler", "m_PersistentDataBuffer", "m_EnvBouncePersistentDataBuffer", "m_TemporalCoherenceBuffer", "m_EmissiveEnvironment", "m_AlbedoBuffer", "m_EmissiveBuffer", "m_TransparencyBuffer", "GetProbeShCoefficients", "inputSets", "GetProbeInterpolants", "interpolants", "GetProbeSetInterpolants", "interpolators", "task", "DoProbeInterpolationTask", "SolveEntireProbeSetTask", "FreezeEntireProbeSetTask", "GetNumProbeSetDependencies", "GetProbeSetDependencyGuid", "GetNumFormFactors", "ClusteringOutput", "GeoTriangleList", "GeoDirectionalPointList", "GeoClusterNodeTree", "GeoClusterNodeForest", "inputLightingBuffer", "GetInputLightingBufferSize", "GetInputLightingBufferSystemId", "VerifyInputLightingBufferData", "lightTable", "GenerateUnrealCompatibleLightFalloffTable", "GenerateUnityCompatibleLightFalloffTable", "GenerateInverseSquaredLightFalloffTable", "AddDusterValuesToInputWorkspace", "dusterValues", "CalcIncidentLightingBufferSize", "GetIncidentLightingBufferSize", "GetIncidentLightingBufferSystemId", "VerifyIncidentLightingBufferData", "CreateIncidentLightingBuffer", "CalcBounceBufferSize", "GetBounceBufferSystemId", "VerifyBounceBufferData", "CreateBounceBuffer", "GetProbeVisibility", "IsProbeCulled", "GetProbeEnvironmentVisibility", "SolveProbeTaskL1", "SolveProbeTaskL2", "IsOctreeProbeSet", "ExtractOctreeProbePositions", "LightTransportOutput", "MeshSimpInstanceOutput", "MeshSimpMeshOutput", "LightTransportPixel", "UpdateProbeBounceBuffer", "probeBounceWorkspace", "bounceBufferOutput", "CalcInputLightingBufferSize", "CreateInputLightingBuffer", "AddCachedValuesToInputWorkspace", "cachedValues", "CalcLightVisibilitySize", "SetDirectionalVisibility", "CalcPrecomputedVisibilityWorkspaceSize", "CreatePrecomputedVisibilityWorkspace", "GetPrecomputedVisibilityDataSize", "ClearInputWorkspace", "GetNumberOfPointsInInputWorkspace", "GetNumberOfClustersInInputWorkspace", "GetNumberOfTreeClustersInInputWorkspace", "GetInputWorkspaceLitDebugPoint", "debugPoint", "GetInputWorkspaceDebugPoint", "GetInputWorkspaceDebugIterator", "GetInputWorkspaceNumPointsPerClusterArray", "numPointsPerClusterArray", "GetSystemBounds", "GetInputLightingBufferLightValue", "GetSystemBoundingBox", "GetInputWorkspacePositionArray", "positionsOut", "GetInputWorkspaceNormalArray", "normalsOut", "GetInputWorkspacePositionAndNormalArray", "GetInputWorkspaceNumInstanceGuids", "numInstanceGuidsOut", "GetInputWorkspaceInstanceGuids", "instanceGuidsOut", "GetInputWorkspaceMaxProjectedPointsInAnyInstance", "maxPointsOut", "GetInputWorkspaceNumProjectedPointsInInstance", "numPointsOut", "GetInputWorkspaceMaxVersionsInAnyInstance", "maxVersionsOut", "GetInputWorkspaceNumVersionsInInstance", "numVersionsOut", "GetInputWorkspaceVersionsInInstance", "versionIdsOut", "GetInputWorkspaceProjectedPointVersion", "pointIdxArrayOut", "pointPosArrayOut", "numProjectedPointsOut", "GetInputWorkspaceSize", "CreateEnvironmentInputLightingBuffer", "SetEnvironmentLightValues", "baseValues", "CalcTransparencyWorkspaceSize", "CreateTransparencyWorkspace", "SetTransparency", "transparencyWorkspace", "SetSamplePositions", "CalcProbeBounceBufferSize", "CreateProbeBounceWorkspace", "MeshSimpChartOutput", "MeshSimpOutput", "CalcRequiredPersistentDataSize", "CalcRequiredWorkspaceMemory", "SolveIrradianceTask", "SolveBounceBufferTask", "FreezeIrradianceTask", "GetNumberOfOutputPixels", "GetNumberOfOutputPixelsInBucket", "GetNumberOfOutputBuckets", "GetNumSystemDependencies", "GetSystemDependencyGuid", "GetSystemDependencyIdx", "BakeOutputProbeSetVisibility", "GetNumInstanceGuids", "GetInstanceGuids", "GetNumMeshGuids", "GetMeshGuids", "GetNumMaterialGuids", "GetMaterialGuids", "CalcMaterialGuidsLookupWorkspaceSize", "GetClusterAlbedoWorkspaceNumMaterials", "GetClusterAlbedoWorkspaceMaterialIds", "GetClusterAlbedoWorkspaceMaterialDataSize", "CalcAlbedoBufferSize", "CreateAlbedoBuffer", "CalcEmissiveBufferSize", "CreateEmissiveBuffer", "CalcTransparencyBufferSize", "CreateTransparencyBuffer", "GetTextureSize", "CalcDynamicMaterialWorkspaceSize", "CreateDynamicMaterialWorkspace", "InitialiseMaterialAlbedoAsDynamic", "materialWorkspace", "workspaceMemory", "InitialiseMaterialEmissiveAsDynamic", "InitialiseMaterialTransparencyAsDynamic", "InitialiseMaterialAlbedoAsStatic", "InitialiseMaterialEmissiveAsStatic", "InitialiseMaterialTransparencyAsStatic", "SetMaterialAlbedoColour", "SetMaterialEmissiveColour", "SetMaterialTransparency", "InitialiseAlbedoBufferFromMaterialWorkspace", "InitialiseEmissiveBufferFromMaterialWorkspace", "InitialiseTransparencyBufferFromMaterialWorkspace", "transparencyBuffer", "InitialiseAlbedoBufferFromTexture", "textureParams", "InitialiseEmissiveBufferFromTexture", "InitialiseTransparencyBufferFromTexture", "InitialiseAlbedoBufferFromColoursPerPoint", "pointAlbedoColours", "InitialiseEmissiveBufferFromColoursPerPoint", "pointEmissiveColours", "InitialiseTransparencyBufferFromColoursPerPoint", "pointTransparencyValues", "UpdateAlbedoBuffer", "UpdateEmissiveBuffer", "UpdateTransparencyBuffer", "GetDebugAlbedoValue", "GetDebugEmissiveValue", "GetDebugTransparencyValue", "MeshSimpAtlasChartOutput", "GetInputWorkspaceListLength", "GetInputWorkspaceGUID", "PrepareInputLightingList", "inputLightingBuffers", "listILBOut", "CalcIrradianceMemory", "CalcDirectionalIrradianceMemory", "CalcRadSystemCoreTotalMemory", "CalcRadProbeSetCoreTotalMemory", "CalcRadCubeMapCoreTotalMemory", "SolveIrradiance", "DoInputLighting", "DoWriteInputLighting", "DoEndInputLighting", "SolveCubeMap", "DoProbeInterpolation", "bufferA", "bufferB", "OUTPUT_FORMAT_FP16", "OUTPUT_FORMAT_LRB", "OUTPUT_FORMAT_R11G11B10", "OUTPUT_FORMAT_R9G9B9E5", "OUTPUT_FORMAT_RGBM", "Foundation", "NonTrackedAlloc", "PvdOutStream", "PvdProfileZoneClient", "MetaDataProvider", "PvdMemClient", "PvdImpl", "PvdObjectModelMetaDataImpl", "StringTableImpl", "PvdCommStreamBufferedEventSink::mSPVBuffer", "VoidPtr", "ObjectRef", "StringHandle", "physx3", "PhysXSDK", "ClassDescImpl", "PropDescImpl", "PropertyMessageDescriptionImpl", "PvdObjectModelMetaData::clone", "minimum", "maximum", "column0", "column1", "column2", "column3", "physx3_debugger_internal", "ArrayData", "PvdI8", "PvdU8", "PvdBool", "PvdI16", "PvdU16", "PvdI32", "PvdU32", "PvdI64", "PvdU64", "PvdF32", "PvdF64", "PvdColor", "PxVec2", "PxVec3", "PxVec4", "PxQuat", "PxBounds3", "PxTransform", "PxMat33", "PxMat44", "U32Array4", "UserRenderBuffer", "_debugger_", "PxProfileZone", "PxProfileMemoryEventBuffer", "PvdUserRenderer", "TDataType", "PvdUserRenderParser::mBuffer", "PxSerializerDefaultAdapter", "RTreeTriangleMesh", "BV4TriangleMesh", "NpRigidDynamic", "NpRigidStatic", "NpShape", "NpMaterial", "NpConstraint", "NpAggregate", "NpArticulation", "NpArticulationLink", "NpArticulationJoint", "Sq::PruningStructure", "NpCloth", "NpClothFabric", "PxBase", "PxActor", "PxRigidActor", "PxRigidBody", "PxMaterial", "PxRigidDynamic", "PxArticulationLink", "PxArticulationJoint", "NpActor", "char", "NpConnectorArray", "mConnectorArray", "RefCountable", "userData", "MaterialCore", "mActor0", "mActor1", "Scb::Constraint", "mIsDirty", "mPaddingFromBool", "NpShapeManager", "PtrTable", "mShapes", "mSceneQueryData", "mPruningStructure", "NpInternalShapeFlags", "PxU8", "mActor", "Scb::Shape", "mShape", "PxI32", "mExclusiveAndActorCount", "mShapeManager", "PxU32", "mIndex", "Scb::RigidStatic", "mRigidStatic", "NpConnector", "mObject", "mBufferUsed", "Scb::Body", "mBody", "NpArticulationLinkArray", "Scb::Articulation", "mArticulation", "mArticulationLinks", "mAggregate", "mRoot", "mInboundJoint", "mParent", "mChildLinks", "Scb::ArticulationJoint", "mJoint", "Scb::Aggregate", "mNbActors", "mActors", "Sc::ClothFabricCore", "mFabric", "Scb::Cloth", "mCloth", "mClothFabric", "mParticleData", "PxBaseFlags", "PxU16", "PxType", "mConcreteType", "mBaseFlags", "mRefCount", "PxI8", "PxI16", "PxReal", "ShadowBitMap", "mMap", "mWordCount", "mAllocator", "PxPlane", "PxConstraintInvMassScale", "linear0", "angular0", "linear1", "angular1", "PxMeshScale", "PxShape", "PxJoint", "PxConstraintConnector", "mLocalPose", "mPxConstraint", "RevoluteJointData", "SphericalJointData", "DistanceJoint", "DistanceJointData", "mRecomputeMotion", "mRecomputeLimits", "D6JointData", "PrismaticJointData", "FixedJointData", "PxSerialObjectId", "PxU64", "SerialObjectIndex", "Sn::ManifestEntry", "Sn::ImportReference", "Sn::ExportReference", "objIndex", "Sn::InternalReferencePtr", "kind", "Sn::InternalReferenceIdx", "PxRevoluteJointFlags", "driveVelocity", "driveForceLimit", "driveGearRatio", "PxJointAngularLimitPair", "tqHigh", "tqLow", "tqPad", "projectionLinearTolerance", "projectionAngularTolerance", "jointFlags", "PxSphericalJointFlags", "PxJointLimitCone", "tanQYLimit", "tanQZLimit", "tanQPad", "PxDistanceJointFlags", "stiffness", "PxD6Motion::Enum", "motion", "PxJointLinearLimit", "linearLimit", "swingLimit", "twistLimit", "PxD6JointDrive", "drive", "drivePosition", "driveLinearVelocity", "driveAngularVelocity", "limited", "driving", "thSwingY", "thSwingZ", "thSwingPad", "tqSwingY", "tqSwingZ", "tqSwingPad", "tqTwistLow", "tqTwistHigh", "tqTwistPad", "linearMinDist", "PxPrismaticJointFlags", "PxJointLinearLimitPair", "invMassScale", "PxD6JointDriveFlags", "forceLimit", "PxJointLimitParameters", "restitution", "yAngle", "zAngle", "upper", "lower", "PxD6Joint", "PxSphericalJoint", "PxRigidBodyExt::updateMassAndInertia", "PxRigidBodyExt::setMassAndUpdateInertia", "PxFixedJoint", "PxPrismaticJoint", "PxRevoluteJoint", "getauxval", "TIT2", "ChannelGroup", "music", "checkClientTrusted", "checkServerTrusted", "getAcceptedIssuers", "getAlgorithm", "getDefaultAlgorithm", "getInstance", "getProvider", "getTrustManagers", "addAll", "contains", "containsAll", "hashCode", "remove", "removeAll", "retainAll", "spliterator", "toArray", "close", "delimiter", "findInLine", "findWithinHorizon", "hasNext", "hasNextBigDecimal", "hasNextBigInteger", "hasNextBoolean", "hasNextByte", "hasNextDouble", "hasNextFloat", "hasNextInt", "hasNextLine", "hasNextLong", "hasNextShort", "ioException", "locale", "next", "nextBigDecimal", "nextBigInteger", "nextBoolean", "nextByte", "nextDouble", "nextFloat", "nextInt", "nextLine", "nextLong", "nextShort", "radix", "skip", "useDelimiter", "useLocale", "useRadix", "computeIfAbsent", "computeIfPresent", "containsKey", "containsValue", "entrySet", "forEach", "getOrDefault", "keySet", "merge", "putAll", "putIfAbsent", "replace", "replaceAll", "comparingByKey", "comparingByValue", "getKey", "getValue", "setValue", "CANADA", "CANADA_FRENCH", "CHINA", "ENGLISH", "FRANCE", "GERMAN", "GERMANY", "ITALIAN", "ITALY", "JAPAN", "JAPANESE", "KOREA", "KOREAN", "PRIVATE_USE_EXTENSION", "ROOT", "SIMPLIFIED_CHINESE", "TAIWAN", "TRADITIONAL_CHINESE", "UNICODE_LOCALE_EXTENSION", "filter", "filterTags", "forLanguageTag", "getAvailableLocales", "getCountry", "getDefault", "getDisplayCountry", "getDisplayLanguage", "getDisplayName", "getDisplayScript", "getDisplayVariant", "getExtension", "getExtensionKeys", "getISO3Country", "getISO3Language", "getISOCountries", "getISOLanguages", "getLanguage", "getScript", "getUnicodeLocaleAttributes", "getUnicodeLocaleKeys", "getUnicodeLocaleType", "getVariant", "hasExtensions", "lookup", "lookupTag", "setDefault", "stripExtensions", "toLanguageTag", "indexOf", "lastIndexOf", "listIterator", "subList", "forEachRemaining", "ensureCapacity", "removeIf", "removeRange", "trimToSize", "getEncoded", "getPublicKey", "getType", "verify", "writeReplace", "arrayOffset", "flip", "hasArray", "hasRemaining", "isDirect", "isReadOnly", "mark", "remaining", "rewind", "MAX_PRIORITY", "MIN_PRIORITY", "NORM_PRIORITY", "activeCount", "checkAccess", "countStackFrames", "currentThread", "dumpStack", "enumerate", "getAllStackTraces", "getContextClassLoader", "getDefaultUncaughtExceptionHandler", "getPriority", "getStackTrace", "getState", "getThreadGroup", "getUncaughtExceptionHandler", "holdsLock", "interrupt", "interrupted", "isAlive", "isDaemon", "isInterrupted", "join", "resume", "setContextClassLoader", "setDaemon", "setDefaultUncaughtExceptionHandler", "setName", "setPriority", "setUncaughtExceptionHandler", "sleep", "suspend", "yield", "arraycopy", "clearProperty", "console", "currentTimeMillis", "getProperties", "getProperty", "getSecurityManager", "getenv", "identityHashCode", "inheritedChannel", "lineSeparator", "mapLibraryName", "nanoTime", "runFinalization", "runFinalizersOnExit", "setErr", "setIn", "setOut", "setProperties", "setProperty", "setSecurityManager", "appendCodePoint", "deleteCharAt", "reverse", "CASE_INSENSITIVE_ORDER", "charAt", "codePointAt", "codePointBefore", "codePointCount", "compareTo", "compareToIgnoreCase", "concat", "contentEquals", "copyValueOf", "endsWith", "equalsIgnoreCase", "getBytes", "getChars", "matches", "offsetByCodePoints", "regionMatches", "replaceFirst", "startsWith", "subSequence", "substring", "toCharArray", "toLowerCase", "toUpperCase", "trim", "valueOf", "finalize", "notify", "notifyAll", "byteValue", "doubleValue", "floatValue", "intValue", "longValue", "shortValue", "BYTES", "MAX_VALUE", "MIN_VALUE", "bitCount", "compare", "compareUnsigned", "divideUnsigned", "getInteger", "highestOneBit", "lowestOneBit", "numberOfLeadingZeros", "numberOfTrailingZeros", "parseInt", "parseUnsignedInt", "remainderUnsigned", "reverseBytes", "rotateLeft", "rotateRight", "signum", "toBinaryString", "toHexString", "toOctalString", "toUnsignedLong", "toUnsignedString", "MAX_EXPONENT", "MIN_EXPONENT", "MIN_NORMAL", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "floatToIntBits", "floatToRawIntBits", "isFinite", "isInfinite", "isNaN", "parseFloat", "clearAssertionStatus", "defineClass", "definePackage", "findClass", "findLibrary", "findLoadedClass", "findResource", "findResources", "findSystemClass", "getClassLoadingLock", "getPackages", "getParent", "getResource", "getResourceAsStream", "getResources", "getSystemClassLoader", "getSystemResource", "getSystemResourceAsStream", "getSystemResources", "loadClass", "registerAsParallelCapable", "resolveClass", "setClassAssertionStatus", "setDefaultAssertionStatus", "setPackageAssertionStatus", "setSigners", "asSubclass", "desiredAssertionStatus", "forName", "getAnnotatedInterfaces", "getAnnotatedSuperclass", "getAnnotation", "getAnnotations", "getAnnotationsByType", "getCanonicalName", "getClassLoader", "getClasses", "getComponentType", "getConstructor", "getConstructors", "getDeclaredAnnotation", "getDeclaredAnnotations", "getDeclaredAnnotationsByType", "getDeclaredClasses", "getDeclaredConstructor", "getDeclaredConstructors", "getDeclaredField", "getDeclaredFields", "getDeclaredMethod", "getDeclaredMethods", "getDeclaringClass", "getEnclosingClass", "getEnclosingConstructor", "getEnclosingMethod", "getEnumConstants", "getField", "getFields", "getGenericInterfaces", "getGenericSuperclass", "getInterfaces", "getMethod", "getMethods", "getModifiers", "getProtectionDomain", "getSigners", "getSimpleName", "getSuperclass", "getTypeName", "getTypeParameters", "isAnnotation", "isAnnotationPresent", "isAnonymousClass", "isArray", "isAssignableFrom", "isEnum", "isInstance", "isInterface", "isLocalClass", "isMemberClass", "isPrimitive", "isSynthetic", "newInstance", "toGenericString", "codePoints", "FALSE", "TRUE", "booleanValue", "getBoolean", "logicalAnd", "logicalOr", "logicalXor", "parseBoolean", "pathSeparator", "pathSeparatorChar", "separator", "separatorChar", "canExecute", "canRead", "canWrite", "createNewFile", "createTempFile", "deleteOnExit", "getAbsoluteFile", "getAbsolutePath", "getCanonicalFile", "getCanonicalPath", "getFreeSpace", "getParentFile", "getPath", "getTotalSpace", "getUsableSpace", "isAbsolute", "isDirectory", "isFile", "isHidden", "lastModified", "listFiles", "listRoots", "mkdir", "mkdirs", "renameTo", "setExecutable", "setLastModified", "setReadOnly", "setReadable", "setWritable", "toPath", "toURI", "toURL", "AUTO_SIZE_TEXT_TYPE_NONE", "AUTO_SIZE_TEXT_TYPE_UNIFORM", "addExtraDataToAccessibilityNodeInfo", "addTextChangedListener", "autofill", "beginBatchEdit", "bringPointIntoView", "cancelLongPress", "clearComposingText", "computeHorizontalScrollRange", "computeScroll", "computeVerticalScrollExtent", "computeVerticalScrollRange", "didTouchFocusSelect", "drawableHotspotChanged", "drawableStateChanged", "endBatchEdit", "extractText", "findViewsWithText", "getAccessibilityClassName", "getAutoLinkMask", "getAutoSizeMaxTextSize", "getAutoSizeMinTextSize", "getAutoSizeStepGranularity", "getAutoSizeTextAvailableSizes", "getAutoSizeTextType", "getAutofillType", "getAutofillValue", "getBaseline", "getBottomPaddingOffset", "getBreakStrategy", "getCompoundDrawablePadding", "getCompoundDrawableTintList", "getCompoundDrawableTintMode", "getCompoundDrawables", "getCompoundDrawablesRelative", "getCompoundPaddingBottom", "getCompoundPaddingEnd", "getCompoundPaddingLeft", "getCompoundPaddingRight", "getCompoundPaddingStart", "getCompoundPaddingTop", "getCurrentHintTextColor", "getCurrentTextColor", "getCustomInsertionActionModeCallback", "getCustomSelectionActionModeCallback", "getDefaultEditable", "getDefaultMovementMethod", "getEditableText", "getEllipsize", "getError", "getExtendedPaddingBottom", "getExtendedPaddingTop", "getFilters", "getFirstBaselineToTopHeight", "getFocusedRect", "getFontFeatureSettings", "getFontVariationSettings", "getFreezesText", "getGravity", "getHighlightColor", "getHint", "getHintTextColors", "getHyphenationFrequency", "getImeActionId", "getImeActionLabel", "getImeHintLocales", "getImeOptions", "getIncludeFontPadding", "getInputExtras", "getInputType", "getJustificationMode", "getKeyListener", "getLastBaselineToBottomHeight", "getLeftFadingEdgeStrength", "getLeftPaddingOffset", "getLetterSpacing", "getLineBounds", "getLineCount", "getLineHeight", "getLineSpacingExtra", "getLineSpacingMultiplier", "getLinkTextColors", "getLinksClickable", "getMarqueeRepeatLimit", "getMaxEms", "getMaxHeight", "getMaxLines", "getMaxWidth", "getMinEms", "getMinHeight", "getMinLines", "getMinWidth", "getMovementMethod", "getOffsetForPosition", "getPaint", "getPaintFlags", "getPrivateImeOptions", "getRightFadingEdgeStrength", "getRightPaddingOffset", "getSelectionEnd", "getSelectionStart", "getShadowColor", "getShadowDx", "getShadowDy", "getShadowRadius", "getShowSoftInputOnFocus", "getText", "getTextClassifier", "getTextColors", "getTextLocale", "getTextLocales", "getTextMetricsParams", "getTextScaleX", "getTextSize", "getTopPaddingOffset", "getTotalPaddingBottom", "getTotalPaddingEnd", "getTotalPaddingLeft", "getTotalPaddingRight", "getTotalPaddingStart", "getTotalPaddingTop", "getTransformationMethod", "getTypeface", "getUrls", "hasOverlappingRendering", "hasSelection", "invalidateDrawable", "isAllCaps", "isCursorVisible", "isElegantTextHeight", "isFallbackLineSpacing", "isInputMethodTarget", "isPaddingOffsetRequired", "isSuggestionsEnabled", "isTextSelectable", "jumpDrawablesToCurrentState", "moveCursorToVisibleOffset", "onAttachedToWindow", "onBeginBatchEdit", "onCheckIsTextEditor", "onCommitCompletion", "onCommitCorrection", "onConfigurationChanged", "onCreateContextMenu", "onCreateDrawableState", "onCreateInputConnection", "onDragEvent", "onDraw", "onEditorAction", "onEndBatchEdit", "onFocusChanged", "onGenericMotionEvent", "onKeyDown", "onKeyMultiple", "onKeyPreIme", "onKeyShortcut", "onKeyUp", "onMeasure", "onPreDraw", "onPrivateIMECommand", "onProvideAutofillStructure", "onProvideStructure", "onResolvePointerIcon", "onRestoreInstanceState", "onRtlPropertiesChanged", "onSaveInstanceState", "onScreenStateChanged", "onScrollChanged", "onSelectionChanged", "onTextChanged", "onTextContextMenuItem", "onTouchEvent", "onTrackballEvent", "onVisibilityChanged", "onWindowFocusChanged", "performLongClick", "removeTextChangedListener", "sendAccessibilityEventUnchecked", "setAllCaps", "setAutoLinkMask", "setAutoSizeTextTypeUniformWithConfiguration", "setAutoSizeTextTypeUniformWithPresetSizes", "setAutoSizeTextTypeWithDefaults", "setBreakStrategy", "setCompoundDrawablePadding", "setCompoundDrawableTintList", "setCompoundDrawableTintMode", "setCompoundDrawables", "setCompoundDrawablesRelative", "setCompoundDrawablesRelativeWithIntrinsicBounds", "setCompoundDrawablesWithIntrinsicBounds", "setCursorVisible", "setCustomInsertionActionModeCallback", "setCustomSelectionActionModeCallback", "setEditableFactory", "setElegantTextHeight", "setEllipsize", "setEms", "setEnabled", "setError", "setExtractedText", "setFallbackLineSpacing", "setFilters", "setFirstBaselineToTopHeight", "setFontFeatureSettings", "setFontVariationSettings", "setFrame", "setFreezesText", "setGravity", "setHeight", "setHighlightColor", "setHint", "setHintTextColor", "setHorizontallyScrolling", "setHyphenationFrequency", "setImeActionLabel", "setImeHintLocales", "setImeOptions", "setIncludeFontPadding", "setInputExtras", "setInputType", "setJustificationMode", "setKeyListener", "setLastBaselineToBottomHeight", "setLetterSpacing", "setLineHeight", "setLineSpacing", "setLines", "setLinkTextColor", "setLinksClickable", "setMarqueeRepeatLimit", "setMaxEms", "setMaxHeight", "setMaxLines", "setMaxWidth", "setMinEms", "setMinHeight", "setMinLines", "setMinWidth", "setMovementMethod", "setOnEditorActionListener", "setPadding", "setPaddingRelative", "setPaintFlags", "setPrivateImeOptions", "setRawInputType", "setScroller", "setSelectAllOnFocus", "setSelected", "setShadowLayer", "setShowSoftInputOnFocus", "setSingleLine", "setSpannableFactory", "setText", "setTextAppearance", "setTextClassifier", "setTextColor", "setTextIsSelectable", "setTextKeepState", "setTextLocale", "setTextLocales", "setTextMetricsParams", "setTextScaleX", "setTextSize", "setTransformationMethod", "setTypeface", "setWidth", "showContextMenu", "verifyDrawable", "getIndeterminateDrawable", "getIndeterminateTintList", "getIndeterminateTintMode", "getInterpolator", "getMax", "getMin", "getProgress", "getProgressBackgroundTintList", "getProgressBackgroundTintMode", "getProgressDrawable", "getProgressTintList", "getProgressTintMode", "getSecondaryProgress", "getSecondaryProgressTintList", "getSecondaryProgressTintMode", "incrementProgressBy", "incrementSecondaryProgressBy", "isAnimating", "isIndeterminate", "onDetachedFromWindow", "onSizeChanged", "onVisibilityAggregated", "postInvalidate", "setIndeterminate", "setIndeterminateDrawable", "setIndeterminateDrawableTiled", "setIndeterminateTintList", "setIndeterminateTintMode", "setInterpolator", "setMax", "setMin", "setProgress", "setProgressBackgroundTintList", "setProgressBackgroundTintMode", "setProgressDrawable", "setProgressDrawableTiled", "setProgressTintList", "setProgressTintMode", "setSecondaryProgress", "setSecondaryProgressTintList", "setSecondaryProgressTintMode", "getButtonDrawable", "getButtonTintList", "getButtonTintMode", "isChecked", "performClick", "setButtonDrawable", "setButtonTintList", "setButtonTintMode", "setChecked", "setOnCheckedChangeListener", "toggle", "onCheckedChanged", "getExtensionFromMimeType", "getFileExtensionFromUrl", "getMimeTypeFromExtension", "getSingleton", "hasExtension", "hasMimeType", "getDefaultDisplay", "removeViewImmediate", "ALPHA_CHANGED", "BRIGHTNESS_OVERRIDE_FULL", "BRIGHTNESS_OVERRIDE_NONE", "BRIGHTNESS_OVERRIDE_OFF", "DIM_AMOUNT_CHANGED", "FIRST_APPLICATION_WINDOW", "FIRST_SUB_WINDOW", "FIRST_SYSTEM_WINDOW", "FLAGS_CHANGED", "FLAG_ALLOW_LOCK_WHILE_SCREEN_ON", "FLAG_ALT_FOCUSABLE_IM", "FLAG_BLUR_BEHIND", "FLAG_DIM_BEHIND", "FLAG_DISMISS_KEYGUARD", "FLAG_DITHER", "FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS", "FLAG_FORCE_NOT_FULLSCREEN", "FLAG_HARDWARE_ACCELERATED", "FLAG_IGNORE_CHEEK_PRESSES", "FLAG_KEEP_SCREEN_ON", "FLAG_LAYOUT_ATTACHED_IN_DECOR", "FLAG_LAYOUT_INSET_DECOR", "FLAG_LAYOUT_IN_OVERSCAN", "FLAG_LAYOUT_IN_SCREEN", "FLAG_LAYOUT_NO_LIMITS", "FLAG_LOCAL_FOCUS_MODE", "FLAG_NOT_FOCUSABLE", "FLAG_NOT_TOUCHABLE", "FLAG_NOT_TOUCH_MODAL", "FLAG_SCALED", "FLAG_SHOW_WALLPAPER", "FLAG_SHOW_WHEN_LOCKED", "FLAG_SPLIT_TOUCH", "FLAG_TOUCHABLE_WHEN_WAKING", "FLAG_TRANSLUCENT_NAVIGATION", "FLAG_TRANSLUCENT_STATUS", "FLAG_TURN_SCREEN_ON", "FLAG_WATCH_OUTSIDE_TOUCH", "LAST_APPLICATION_WINDOW", "LAST_SUB_WINDOW", "LAST_SYSTEM_WINDOW", "LAYOUT_CHANGED", "LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT", "LAYOUT_IN_DISPLAY_CUTOUT_MODE_NEVER", "LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES", "MEMORY_TYPE_CHANGED", "MEMORY_TYPE_GPU", "MEMORY_TYPE_HARDWARE", "MEMORY_TYPE_NORMAL", "MEMORY_TYPE_PUSH_BUFFERS", "ROTATION_ANIMATION_CHANGED", "ROTATION_ANIMATION_CROSSFADE", "ROTATION_ANIMATION_JUMPCUT", "ROTATION_ANIMATION_ROTATE", "ROTATION_ANIMATION_SEAMLESS", "SCREEN_BRIGHTNESS_CHANGED", "SCREEN_ORIENTATION_CHANGED", "SOFT_INPUT_ADJUST_NOTHING", "SOFT_INPUT_ADJUST_PAN", "SOFT_INPUT_ADJUST_RESIZE", "SOFT_INPUT_ADJUST_UNSPECIFIED", "SOFT_INPUT_IS_FORWARD_NAVIGATION", "SOFT_INPUT_MASK_ADJUST", "SOFT_INPUT_MASK_STATE", "SOFT_INPUT_MODE_CHANGED", "SOFT_INPUT_STATE_ALWAYS_HIDDEN", "SOFT_INPUT_STATE_ALWAYS_VISIBLE", "SOFT_INPUT_STATE_HIDDEN", "SOFT_INPUT_STATE_UNCHANGED", "SOFT_INPUT_STATE_UNSPECIFIED", "SOFT_INPUT_STATE_VISIBLE", "TITLE_CHANGED", "TYPE_ACCESSIBILITY_OVERLAY", "TYPE_APPLICATION", "TYPE_APPLICATION_ATTACHED_DIALOG", "TYPE_APPLICATION_MEDIA", "TYPE_APPLICATION_OVERLAY", "TYPE_APPLICATION_PANEL", "TYPE_APPLICATION_STARTING", "TYPE_APPLICATION_SUB_PANEL", "TYPE_BASE_APPLICATION", "TYPE_DRAWN_APPLICATION", "TYPE_INPUT_METHOD", "TYPE_INPUT_METHOD_DIALOG", "TYPE_KEYGUARD_DIALOG", "TYPE_PHONE", "TYPE_PRIORITY_PHONE", "TYPE_PRIVATE_PRESENTATION", "TYPE_SEARCH_BAR", "TYPE_STATUS_BAR", "TYPE_STATUS_BAR_PANEL", "TYPE_SYSTEM_ALERT", "TYPE_SYSTEM_DIALOG", "TYPE_SYSTEM_ERROR", "TYPE_SYSTEM_OVERLAY", "TYPE_TOAST", "TYPE_WALLPAPER", "buttonBrightness", "dimAmount", "horizontalMargin", "horizontalWeight", "layoutInDisplayCutoutMode", "memoryType", "packageName", "preferredDisplayModeId", "preferredRefreshRate", "rotationAnimation", "screenBrightness", "screenOrientation", "softInputMode", "systemUiVisibility", "verticalMargin", "verticalWeight", "windowAnimations", "copyFrom", "describeContents", "getColorMode", "getTitle", "mayUseInputMethod", "setColorMode", "setTitle", "writeToParcel", "consumeDisplayCutout", "consumeStableInsets", "consumeSystemWindowInsets", "getDisplayCutout", "getStableInsetBottom", "getStableInsetLeft", "getStableInsetRight", "getStableInsetTop", "getSystemWindowInsetBottom", "getSystemWindowInsetLeft", "getSystemWindowInsetRight", "getSystemWindowInsetTop", "hasInsets", "hasStableInsets", "hasSystemWindowInsets", "isConsumed", "isRound", "replaceSystemWindowInsets", "DECOR_CAPTION_SHADE_AUTO", "DECOR_CAPTION_SHADE_DARK", "DECOR_CAPTION_SHADE_LIGHT", "DEFAULT_FEATURES", "FEATURE_ACTION_BAR", "FEATURE_ACTION_BAR_OVERLAY", "FEATURE_ACTION_MODE_OVERLAY", "FEATURE_ACTIVITY_TRANSITIONS", "FEATURE_CONTENT_TRANSITIONS", "FEATURE_CONTEXT_MENU", "FEATURE_CUSTOM_TITLE", "FEATURE_INDETERMINATE_PROGRESS", "FEATURE_LEFT_ICON", "FEATURE_NO_TITLE", "FEATURE_OPTIONS_PANEL", "FEATURE_PROGRESS", "FEATURE_RIGHT_ICON", "FEATURE_SWIPE_TO_DISMISS", "ID_ANDROID_CONTENT", "NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME", "PROGRESS_END", "PROGRESS_INDETERMINATE_OFF", "PROGRESS_INDETERMINATE_ON", "PROGRESS_SECONDARY_END", "PROGRESS_SECONDARY_START", "PROGRESS_START", "PROGRESS_VISIBILITY_OFF", "PROGRESS_VISIBILITY_ON", "STATUS_BAR_BACKGROUND_TRANSITION_NAME", "addContentView", "addFlags", "addOnFrameMetricsAvailableListener", "closeAllPanels", "closePanel", "findViewById", "getAllowEnterTransitionOverlap", "getAllowReturnTransitionOverlap", "getAttributes", "getCallback", "getContainer", "getContentScene", "getContext", "getCurrentFocus", "getDecorView", "getDefaultFeatures", "getEnterTransition", "getExitTransition", "getForcedWindowFlags", "getLayoutInflater", "getLocalFeatures", "getMediaController", "getNavigationBarColor", "getNavigationBarDividerColor", "getReenterTransition", "getReturnTransition", "getSharedElementEnterTransition", "getSharedElementExitTransition", "getSharedElementReenterTransition", "getSharedElementReturnTransition", "getSharedElementsUseOverlay", "getStatusBarColor", "getTransitionBackgroundFadeDuration", "getTransitionManager", "getVolumeControlStream", "getWindowManager", "getWindowStyle", "hasChildren", "hasFeature", "hasSoftInputMode", "injectInputEvent", "invalidatePanelMenu", "isActive", "isFloating", "isShortcutKey", "isWideColorGamut", "makeActive", "onActive", "openPanel", "peekDecorView", "performContextMenuIdentifierAction", "performPanelIdentifierAction", "performPanelShortcut", "removeOnFrameMetricsAvailableListener", "requestFeature", "requireViewById", "restoreHierarchyState", "saveHierarchyState", "setAllowEnterTransitionOverlap", "setAllowReturnTransitionOverlap", "setAttributes", "setBackgroundDrawable", "setBackgroundDrawableResource", "setCallback", "setChildDrawable", "setChildInt", "setClipToOutline", "setContainer", "setContentView", "setDecorCaptionShade", "setDefaultWindowFormat", "setDimAmount", "setElevation", "setEnterTransition", "setExitTransition", "setFeatureDrawable", "setFeatureDrawableAlpha", "setFeatureDrawableResource", "setFeatureDrawableUri", "setFeatureInt", "setFlags", "setFormat", "setIcon", "setLayout", "setLocalFocus", "setLogo", "setMediaController", "setNavigationBarColor", "setNavigationBarDividerColor", "setReenterTransition", "setResizingCaptionDrawable", "setRestrictedCaptionAreaListener", "setReturnTransition", "setSharedElementEnterTransition", "setSharedElementExitTransition", "setSharedElementReenterTransition", "setSharedElementReturnTransition", "setSharedElementsUseOverlay", "setSoftInputMode", "setStatusBarColor", "setSustainedPerformanceMode", "setTitleColor", "setTransitionBackgroundFadeDuration", "setTransitionManager", "setType", "setUiOptions", "setVolumeControlStream", "setWindowAnimations", "setWindowManager", "superDispatchGenericMotionEvent", "superDispatchKeyEvent", "superDispatchKeyShortcutEvent", "superDispatchTouchEvent", "superDispatchTrackballEvent", "takeInputQueue", "takeKeyEvents", "takeSurface", "togglePanel", "ACCESSIBILITY_LIVE_REGION_ASSERTIVE", "ACCESSIBILITY_LIVE_REGION_NONE", "ACCESSIBILITY_LIVE_REGION_POLITE", "AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH", "AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR", "AUTOFILL_HINT_CREDIT_CARD_NUMBER", "AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE", "AUTOFILL_HINT_EMAIL_ADDRESS", "AUTOFILL_HINT_NAME", "AUTOFILL_HINT_PASSWORD", "AUTOFILL_HINT_PHONE", "AUTOFILL_HINT_POSTAL_ADDRESS", "AUTOFILL_HINT_POSTAL_CODE", "AUTOFILL_HINT_USERNAME", "AUTOFILL_TYPE_DATE", "AUTOFILL_TYPE_LIST", "AUTOFILL_TYPE_NONE", "AUTOFILL_TYPE_TEXT", "AUTOFILL_TYPE_TOGGLE", "DRAG_FLAG_GLOBAL", "DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION", "DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION", "DRAG_FLAG_GLOBAL_URI_READ", "DRAG_FLAG_GLOBAL_URI_WRITE", "DRAG_FLAG_OPAQUE", "DRAWING_CACHE_QUALITY_AUTO", "DRAWING_CACHE_QUALITY_HIGH", "DRAWING_CACHE_QUALITY_LOW", "EMPTY_STATE_SET", "FIND_VIEWS_WITH_CONTENT_DESCRIPTION", "FIND_VIEWS_WITH_TEXT", "FOCUSABLES_ALL", "FOCUSABLES_TOUCH_MODE", "FOCUSABLE_AUTO", "FOCUS_BACKWARD", "FOCUS_DOWN", "FOCUS_FORWARD", "FOCUS_LEFT", "FOCUS_RIGHT", "FOCUS_UP", "GONE", "HAPTIC_FEEDBACK_ENABLED", "IMPORTANT_FOR_ACCESSIBILITY_AUTO", "IMPORTANT_FOR_ACCESSIBILITY_NO", "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS", "IMPORTANT_FOR_ACCESSIBILITY_YES", "IMPORTANT_FOR_AUTOFILL_AUTO", "IMPORTANT_FOR_AUTOFILL_NO", "IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS", "IMPORTANT_FOR_AUTOFILL_YES", "IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS", "INVISIBLE", "LAYER_TYPE_HARDWARE", "LAYER_TYPE_NONE", "LAYER_TYPE_SOFTWARE", "LAYOUT_DIRECTION_INHERIT", "LAYOUT_DIRECTION_LOCALE", "LAYOUT_DIRECTION_LTR", "LAYOUT_DIRECTION_RTL", "MEASURED_HEIGHT_STATE_SHIFT", "MEASURED_SIZE_MASK", "MEASURED_STATE_MASK", "MEASURED_STATE_TOO_SMALL", "NO_ID", "OVER_SCROLL_ALWAYS", "OVER_SCROLL_IF_CONTENT_SCROLLS", "OVER_SCROLL_NEVER", "PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET", "PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_ENABLED_FOCUSED_STATE_SET", "PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET", "PRESSED_ENABLED_SELECTED_STATE_SET", "PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_ENABLED_STATE_SET", "PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET", "PRESSED_FOCUSED_SELECTED_STATE_SET", "PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_FOCUSED_STATE_SET", "PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET", "PRESSED_SELECTED_STATE_SET", "PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET", "PRESSED_STATE_SET", "PRESSED_WINDOW_FOCUSED_STATE_SET", "ROTATION_X", "ROTATION_Y", "SCALE_X", "SCALE_Y", "SCREEN_STATE_OFF", "SCREEN_STATE_ON", "SCROLLBARS_INSIDE_INSET", "SCROLLBARS_INSIDE_OVERLAY", "SCROLLBARS_OUTSIDE_INSET", "SCROLLBARS_OUTSIDE_OVERLAY", "SCROLLBAR_POSITION_DEFAULT", "SCROLLBAR_POSITION_LEFT", "SCROLLBAR_POSITION_RIGHT", "SCROLL_AXIS_HORIZONTAL", "SCROLL_AXIS_NONE", "SCROLL_AXIS_VERTICAL", "SCROLL_INDICATOR_BOTTOM", "SCROLL_INDICATOR_END", "SCROLL_INDICATOR_LEFT", "SCROLL_INDICATOR_RIGHT", "SCROLL_INDICATOR_START", "SCROLL_INDICATOR_TOP", "SOUND_EFFECTS_ENABLED", "STATUS_BAR_HIDDEN", "STATUS_BAR_VISIBLE", "SYSTEM_UI_FLAG_FULLSCREEN", "SYSTEM_UI_FLAG_HIDE_NAVIGATION", "SYSTEM_UI_FLAG_IMMERSIVE", "SYSTEM_UI_FLAG_IMMERSIVE_STICKY", "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN", "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION", "SYSTEM_UI_FLAG_LAYOUT_STABLE", "SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR", "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR", "SYSTEM_UI_FLAG_LOW_PROFILE", "SYSTEM_UI_FLAG_VISIBLE", "SYSTEM_UI_LAYOUT_FLAGS", "TEXT_ALIGNMENT_CENTER", "TEXT_ALIGNMENT_GRAVITY", "TEXT_ALIGNMENT_INHERIT", "TEXT_ALIGNMENT_TEXT_END", "TEXT_ALIGNMENT_TEXT_START", "TEXT_ALIGNMENT_VIEW_END", "TEXT_ALIGNMENT_VIEW_START", "TEXT_DIRECTION_ANY_RTL", "TEXT_DIRECTION_FIRST_STRONG", "TEXT_DIRECTION_FIRST_STRONG_LTR", "TEXT_DIRECTION_FIRST_STRONG_RTL", "TEXT_DIRECTION_INHERIT", "TEXT_DIRECTION_LOCALE", "TEXT_DIRECTION_LTR", "TEXT_DIRECTION_RTL", "TRANSLATION_X", "TRANSLATION_Y", "TRANSLATION_Z", "VIEW_LOG_TAG", "addChildrenForAccessibility", "addFocusables", "addKeyboardNavigationClusters", "addOnAttachStateChangeListener", "addOnLayoutChangeListener", "addOnUnhandledKeyEventListener", "addTouchables", "animate", "announceForAccessibility", "awakenScrollBars", "bringToFront", "buildDrawingCache", "buildLayer", "callOnClick", "canResolveLayoutDirection", "canResolveTextAlignment", "canResolveTextDirection", "canScrollHorizontally", "canScrollVertically", "cancelDragAndDrop", "cancelPendingInputEvents", "checkInputConnectionProxy", "clearAnimation", "clearFocus", "combineMeasuredStates", "computeHorizontalScrollExtent", "computeHorizontalScrollOffset", "computeSystemWindowInsets", "computeVerticalScrollOffset", "createAccessibilityNodeInfo", "createContextMenu", "destroyDrawingCache", "dispatchApplyWindowInsets", "dispatchCapturedPointerEvent", "dispatchConfigurationChanged", "dispatchDisplayHint", "dispatchDragEvent", "dispatchDraw", "dispatchDrawableHotspotChanged", "dispatchFinishTemporaryDetach", "dispatchGenericFocusedEvent", "dispatchGenericMotionEvent", "dispatchGenericPointerEvent", "dispatchHoverEvent", "dispatchKeyEvent", "dispatchKeyEventPreIme", "dispatchKeyShortcutEvent", "dispatchNestedFling", "dispatchNestedPreFling", "dispatchNestedPrePerformAccessibilityAction", "dispatchNestedPreScroll", "dispatchNestedScroll", "dispatchPointerCaptureChanged", "dispatchPopulateAccessibilityEvent", "dispatchProvideAutofillStructure", "dispatchProvideStructure", "dispatchRestoreInstanceState", "dispatchSaveInstanceState", "dispatchSetActivated", "dispatchSetPressed", "dispatchSetSelected", "dispatchStartTemporaryDetach", "dispatchSystemUiVisibilityChanged", "dispatchTouchEvent", "dispatchTrackballEvent", "dispatchUnhandledMove", "dispatchVisibilityChanged", "dispatchWindowFocusChanged", "dispatchWindowSystemUiVisiblityChanged", "dispatchWindowVisibilityChanged", "findFocus", "findViewWithTag", "fitSystemWindows", "focusSearch", "forceHasOverlappingRendering", "forceLayout", "generateViewId", "getAccessibilityLiveRegion", "getAccessibilityNodeProvider", "getAccessibilityPaneTitle", "getAccessibilityTraversalAfter", "getAccessibilityTraversalBefore", "getAlpha", "getApplicationWindowToken", "getAutofillHints", "getAutofillId", "getBackground", "getBackgroundTintList", "getBackgroundTintMode", "getBottom", "getBottomFadingEdgeStrength", "getCameraDistance", "getClipBounds", "getClipToOutline", "getContentDescription", "getContextMenuInfo", "getDefaultFocusHighlightEnabled", "getDefaultSize", "getDrawableState", "getDrawingCache", "getDrawingCacheBackgroundColor", "getDrawingCacheQuality", "getDrawingRect", "getDrawingTime", "getElevation", "getFilterTouchesWhenObscured", "getFitsSystemWindows", "getFocusable", "getFocusables", "getForeground", "getForegroundGravity", "getForegroundTintList", "getForegroundTintMode", "getGlobalVisibleRect", "getHandler", "getHasOverlappingRendering", "getHeight", "getHitRect", "getHorizontalFadingEdgeLength", "getHorizontalScrollbarHeight", "getImportantForAccessibility", "getImportantForAutofill", "getKeepScreenOn", "getKeyDispatcherState", "getLabelFor", "getLayerType", "getLayoutDirection", "getLayoutParams", "getLeft", "getLocalVisibleRect", "getLocationInWindow", "getLocationOnScreen", "getMatrix", "getMeasuredHeight", "getMeasuredHeightAndState", "getMeasuredState", "getMeasuredWidth", "getMeasuredWidthAndState", "getMinimumHeight", "getMinimumWidth", "getNextClusterForwardId", "getNextFocusDownId", "getNextFocusForwardId", "getNextFocusLeftId", "getNextFocusRightId", "getNextFocusUpId", "getOnFocusChangeListener", "getOutlineAmbientShadowColor", "getOutlineProvider", "getOutlineSpotShadowColor", "getOverScrollMode", "getOverlay", "getPaddingBottom", "getPaddingEnd", "getPaddingLeft", "getPaddingRight", "getPaddingStart", "getPaddingTop", "getParentForAccessibility", "getPivotX", "getPivotY", "getPointerIcon", "getRevealOnFocusHint", "getRight", "getRootView", "getRootWindowInsets", "getRotationX", "getRotationY", "getScaleX", "getScaleY", "getScrollBarDefaultDelayBeforeFade", "getScrollBarFadeDuration", "getScrollBarSize", "getScrollBarStyle", "getScrollIndicators", "getScrollX", "getScrollY", "getSolidColor", "getStateListAnimator", "getSuggestedMinimumHeight", "getSuggestedMinimumWidth", "getSystemUiVisibility", "getTag", "getTextAlignment", "getTextDirection", "getTooltipText", "getTop", "getTopFadingEdgeStrength", "getTouchDelegate", "getTouchables", "getTransitionName", "getTranslationX", "getTranslationY", "getTranslationZ", "getVerticalFadingEdgeLength", "getVerticalScrollbarPosition", "getVerticalScrollbarWidth", "getViewTreeObserver", "getVisibility", "getWidth", "getWindowAttachCount", "getWindowId", "getWindowSystemUiVisibility", "getWindowToken", "getWindowVisibility", "getWindowVisibleDisplayFrame", "getX", "getY", "getZ", "hasExplicitFocusable", "hasFocus", "hasFocusable", "hasNestedScrollingParent", "hasOnClickListeners", "hasPointerCapture", "hasTransientState", "hasWindowFocus", "inflate", "invalidate", "invalidateOutline", "isAccessibilityFocused", "isAccessibilityHeading", "isActivated", "isAttachedToWindow", "isClickable", "isContextClickable", "isDirty", "isDrawingCacheEnabled", "isDuplicateParentStateEnabled", "isEnabled", "isFocusable", "isFocusableInTouchMode", "isFocusedByDefault", "isHapticFeedbackEnabled", "isHardwareAccelerated", "isHorizontalFadingEdgeEnabled", "isHorizontalScrollBarEnabled", "isHovered", "isImportantForAccessibility", "isImportantForAutofill", "isInEditMode", "isInLayout", "isInTouchMode", "isKeyboardNavigationCluster", "isLaidOut", "isLayoutDirectionResolved", "isLayoutRequested", "isLongClickable", "isNestedScrollingEnabled", "isOpaque", "isPaddingRelative", "isPivotSet", "isPressed", "isSaveEnabled", "isSaveFromParentEnabled", "isScreenReaderFocusable", "isScrollContainer", "isScrollbarFadingEnabled", "isSelected", "isShown", "isSoundEffectsEnabled", "isTemporarilyDetached", "isTextAlignmentResolved", "isTextDirectionResolved", "isVerticalFadingEdgeEnabled", "isVerticalScrollBarEnabled", "isVisibleToUserForAutofill", "keyboardNavigationClusterSearch", "measure", "mergeDrawableStates", "offsetLeftAndRight", "offsetTopAndBottom", "onAnimationEnd", "onAnimationStart", "onApplyWindowInsets", "onCancelPendingInputEvents", "onCapturedPointerEvent", "onDisplayHint", "onDrawForeground", "onDrawScrollBars", "onFilterTouchEventForSecurity", "onFinishInflate", "onFinishTemporaryDetach", "onHoverChanged", "onHoverEvent", "onInitializeAccessibilityEvent", "onInitializeAccessibilityNodeInfo", "onKeyLongPress", "onOverScrolled", "onPointerCaptureChange", "onPopulateAccessibilityEvent", "onProvideAutofillVirtualStructure", "onProvideVirtualStructure", "onSetAlpha", "onStartTemporaryDetach", "onWindowSystemUiVisibilityChanged", "onWindowVisibilityChanged", "overScrollBy", "performAccessibilityAction", "performContextClick", "performHapticFeedback", "playSoundEffect", "post", "postDelayed", "postInvalidateDelayed", "postInvalidateOnAnimation", "postOnAnimation", "postOnAnimationDelayed", "refreshDrawableState", "releasePointerCapture", "removeCallbacks", "removeOnAttachStateChangeListener", "removeOnLayoutChangeListener", "removeOnUnhandledKeyEventListener", "requestApplyInsets", "requestFitSystemWindows", "requestFocus", "requestFocusFromTouch", "requestLayout", "requestPointerCapture", "requestRectangleOnScreen", "requestUnbufferedDispatch", "resetPivot", "resolveSize", "resolveSizeAndState", "restoreDefaultFocus", "scrollBy", "scrollTo", "sendAccessibilityEvent", "setAccessibilityDelegate", "setAccessibilityHeading", "setAccessibilityLiveRegion", "setAccessibilityPaneTitle", "setAccessibilityTraversalAfter", "setAccessibilityTraversalBefore", "setActivated", "setAlpha", "setAnimation", "setAutofillHints", "setAutofillId", "setBackground", "setBackgroundColor", "setBackgroundResource", "setBackgroundTintList", "setBackgroundTintMode", "setCameraDistance", "setClickable", "setClipBounds", "setContentDescription", "setContextClickable", "setDefaultFocusHighlightEnabled", "setDrawingCacheBackgroundColor", "setDrawingCacheEnabled", "setDrawingCacheQuality", "setDuplicateParentStateEnabled", "setFadingEdgeLength", "setFilterTouchesWhenObscured", "setFitsSystemWindows", "setFocusable", "setFocusableInTouchMode", "setFocusedByDefault", "setForeground", "setForegroundGravity", "setForegroundTintList", "setForegroundTintMode", "setHapticFeedbackEnabled", "setHasTransientState", "setHorizontalFadingEdgeEnabled", "setHorizontalScrollBarEnabled", "setHovered", "setId", "setImportantForAccessibility", "setImportantForAutofill", "setKeepScreenOn", "setKeyboardNavigationCluster", "setLabelFor", "setLayerPaint", "setLayerType", "setLayoutDirection", "setLayoutParams", "setLongClickable", "setMeasuredDimension", "setMinimumHeight", "setMinimumWidth", "setNestedScrollingEnabled", "setNextClusterForwardId", "setNextFocusDownId", "setNextFocusForwardId", "setNextFocusLeftId", "setNextFocusRightId", "setNextFocusUpId", "setOnApplyWindowInsetsListener", "setOnCapturedPointerListener", "setOnClickListener", "setOnContextClickListener", "setOnCreateContextMenuListener", "setOnDragListener", "setOnFocusChangeListener", "setOnGenericMotionListener", "setOnHoverListener", "setOnKeyListener", "setOnLongClickListener", "setOnScrollChangeListener", "setOnSystemUiVisibilityChangeListener", "setOnTouchListener", "setOutlineAmbientShadowColor", "setOutlineProvider", "setOutlineSpotShadowColor", "setOverScrollMode", "setPivotX", "setPivotY", "setPointerIcon", "setPressed", "setRevealOnFocusHint", "setRotation", "setRotationX", "setRotationY", "setSaveEnabled", "setSaveFromParentEnabled", "setScaleX", "setScaleY", "setScreenReaderFocusable", "setScrollBarDefaultDelayBeforeFade", "setScrollBarFadeDuration", "setScrollBarSize", "setScrollBarStyle", "setScrollContainer", "setScrollIndicators", "setScrollX", "setScrollY", "setScrollbarFadingEnabled", "setSoundEffectsEnabled", "setStateListAnimator", "setSystemUiVisibility", "setTag", "setTextAlignment", "setTextDirection", "setTooltipText", "setTouchDelegate", "setTransitionName", "setTranslationX", "setTranslationY", "setTranslationZ", "setVerticalFadingEdgeEnabled", "setVerticalScrollBarEnabled", "setVerticalScrollbarPosition", "setVisibility", "setWillNotCacheDrawing", "setWillNotDraw", "startActionMode", "startAnimation", "startDrag", "startDragAndDrop", "startNestedScroll", "stopNestedScroll", "unscheduleDrawable", "updateDragShadow", "willNotCacheDrawing", "willNotDraw", "onSystemUiVisibilityChange", "gatherTransparentRegion", "getHolder", "setSecure", "setZOrderMediaOverlay", "setZOrderOnTop", "SURFACE_TYPE_GPU", "SURFACE_TYPE_HARDWARE", "SURFACE_TYPE_NORMAL", "SURFACE_TYPE_PUSH_BUFFERS", "addCallback", "getSurface", "getSurfaceFrame", "isCreating", "lockHardwareCanvas", "removeCallback", "setFixedSize", "setSizeFromLayout", "unlockCanvasAndPost", "surfaceChanged", "surfaceCreated", "surfaceDestroyed", "ROTATION_0", "ROTATION_180", "ROTATION_270", "ROTATION_90", "readFromParcel", "unlockCanvas", "ACTION_BUTTON_PRESS", "ACTION_BUTTON_RELEASE", "ACTION_CANCEL", "ACTION_DOWN", "ACTION_HOVER_ENTER", "ACTION_HOVER_EXIT", "ACTION_HOVER_MOVE", "ACTION_MASK", "ACTION_MOVE", "ACTION_OUTSIDE", "ACTION_POINTER_1_DOWN", "ACTION_POINTER_1_UP", "ACTION_POINTER_2_DOWN", "ACTION_POINTER_2_UP", "ACTION_POINTER_3_DOWN", "ACTION_POINTER_3_UP", "ACTION_POINTER_DOWN", "ACTION_POINTER_ID_MASK", "ACTION_POINTER_ID_SHIFT", "ACTION_POINTER_INDEX_MASK", "ACTION_POINTER_INDEX_SHIFT", "ACTION_POINTER_UP", "ACTION_SCROLL", "ACTION_UP", "AXIS_BRAKE", "AXIS_DISTANCE", "AXIS_GAS", "AXIS_GENERIC_1", "AXIS_GENERIC_10", "AXIS_GENERIC_11", "AXIS_GENERIC_12", "AXIS_GENERIC_13", "AXIS_GENERIC_14", "AXIS_GENERIC_15", "AXIS_GENERIC_16", "AXIS_GENERIC_2", "AXIS_GENERIC_3", "AXIS_GENERIC_4", "AXIS_GENERIC_5", "AXIS_GENERIC_6", "AXIS_GENERIC_7", "AXIS_GENERIC_8", "AXIS_GENERIC_9", "AXIS_HAT_X", "AXIS_HAT_Y", "AXIS_HSCROLL", "AXIS_LTRIGGER", "AXIS_ORIENTATION", "AXIS_PRESSURE", "AXIS_RELATIVE_X", "AXIS_RELATIVE_Y", "AXIS_RTRIGGER", "AXIS_RUDDER", "AXIS_RX", "AXIS_RY", "AXIS_RZ", "AXIS_SCROLL", "AXIS_SIZE", "AXIS_THROTTLE", "AXIS_TILT", "AXIS_TOOL_MAJOR", "AXIS_TOOL_MINOR", "AXIS_TOUCH_MAJOR", "AXIS_TOUCH_MINOR", "AXIS_VSCROLL", "AXIS_WHEEL", "AXIS_X", "AXIS_Y", "AXIS_Z", "BUTTON_BACK", "BUTTON_FORWARD", "BUTTON_PRIMARY", "BUTTON_SECONDARY", "BUTTON_STYLUS_PRIMARY", "BUTTON_STYLUS_SECONDARY", "BUTTON_TERTIARY", "EDGE_BOTTOM", "EDGE_LEFT", "EDGE_RIGHT", "EDGE_TOP", "FLAG_WINDOW_IS_OBSCURED", "INVALID_POINTER_ID", "TOOL_TYPE_ERASER", "TOOL_TYPE_FINGER", "TOOL_TYPE_MOUSE", "TOOL_TYPE_STYLUS", "TOOL_TYPE_UNKNOWN", "actionToString", "addBatch", "axisFromString", "axisToString", "findPointerIndex", "getAction", "getActionButton", "getActionIndex", "getActionMasked", "getAxisValue", "getButtonState", "getDeviceId", "getDownTime", "getEdgeFlags", "getEventTime", "getFlags", "getHistoricalAxisValue", "getHistoricalEventTime", "getHistoricalOrientation", "getHistoricalPointerCoords", "getHistoricalPressure", "getHistoricalSize", "getHistoricalToolMajor", "getHistoricalToolMinor", "getHistoricalTouchMajor", "getHistoricalTouchMinor", "getHistoricalX", "getHistoricalY", "getHistorySize", "getMetaState", "getOrientation", "getPointerCoords", "getPointerCount", "getPointerId", "getPointerProperties", "getPressure", "getRawX", "getRawY", "getSize", "getSource", "getToolMajor", "getToolMinor", "getToolType", "getTouchMajor", "getTouchMinor", "getXPrecision", "getYPrecision", "isButtonPressed", "obtain", "obtainNoHistory", "offsetLocation", "recycle", "setAction", "setEdgeFlags", "setSource", "ACTION_MULTIPLE", "FLAG_CANCELED", "FLAG_CANCELED_LONG_PRESS", "FLAG_EDITOR_ACTION", "FLAG_FALLBACK", "FLAG_FROM_SYSTEM", "FLAG_KEEP_TOUCH_MODE", "FLAG_LONG_PRESS", "FLAG_SOFT_KEYBOARD", "FLAG_TRACKING", "FLAG_VIRTUAL_HARD_KEY", "FLAG_WOKE_HERE", "KEYCODE_0", "KEYCODE_1", "KEYCODE_11", "KEYCODE_12", "KEYCODE_2", "KEYCODE_3", "KEYCODE_3D_MODE", "KEYCODE_4", "KEYCODE_5", "KEYCODE_6", "KEYCODE_7", "KEYCODE_8", "KEYCODE_9", "KEYCODE_A", "KEYCODE_ALL_APPS", "KEYCODE_ALT_LEFT", "KEYCODE_ALT_RIGHT", "KEYCODE_APOSTROPHE", "KEYCODE_APP_SWITCH", "KEYCODE_ASSIST", "KEYCODE_AT", "KEYCODE_AVR_INPUT", "KEYCODE_AVR_POWER", "KEYCODE_B", "KEYCODE_BACK", "KEYCODE_BACKSLASH", "KEYCODE_BOOKMARK", "KEYCODE_BREAK", "KEYCODE_BRIGHTNESS_DOWN", "KEYCODE_BRIGHTNESS_UP", "KEYCODE_BUTTON_1", "KEYCODE_BUTTON_10", "KEYCODE_BUTTON_11", "KEYCODE_BUTTON_12", "KEYCODE_BUTTON_13", "KEYCODE_BUTTON_14", "KEYCODE_BUTTON_15", "KEYCODE_BUTTON_16", "KEYCODE_BUTTON_2", "KEYCODE_BUTTON_3", "KEYCODE_BUTTON_4", "KEYCODE_BUTTON_5", "KEYCODE_BUTTON_6", "KEYCODE_BUTTON_7", "KEYCODE_BUTTON_8", "KEYCODE_BUTTON_9", "KEYCODE_BUTTON_A", "KEYCODE_BUTTON_B", "KEYCODE_BUTTON_C", "KEYCODE_BUTTON_L1", "KEYCODE_BUTTON_L2", "KEYCODE_BUTTON_MODE", "KEYCODE_BUTTON_R1", "KEYCODE_BUTTON_R2", "KEYCODE_BUTTON_SELECT", "KEYCODE_BUTTON_START", "KEYCODE_BUTTON_THUMBL", "KEYCODE_BUTTON_THUMBR", "KEYCODE_BUTTON_X", "KEYCODE_BUTTON_Y", "KEYCODE_BUTTON_Z", "KEYCODE_C", "KEYCODE_CALCULATOR", "KEYCODE_CALENDAR", "KEYCODE_CALL", "KEYCODE_CAMERA", "KEYCODE_CAPS_LOCK", "KEYCODE_CAPTIONS", "KEYCODE_CHANNEL_DOWN", "KEYCODE_CHANNEL_UP", "KEYCODE_CLEAR", "KEYCODE_COMMA", "KEYCODE_CONTACTS", "KEYCODE_COPY", "KEYCODE_CTRL_LEFT", "KEYCODE_CTRL_RIGHT", "KEYCODE_CUT", "KEYCODE_D", "KEYCODE_DEL", "KEYCODE_DPAD_CENTER", "KEYCODE_DPAD_DOWN", "KEYCODE_DPAD_DOWN_LEFT", "KEYCODE_DPAD_DOWN_RIGHT", "KEYCODE_DPAD_LEFT", "KEYCODE_DPAD_RIGHT", "KEYCODE_DPAD_UP", "KEYCODE_DPAD_UP_LEFT", "KEYCODE_DPAD_UP_RIGHT", "KEYCODE_DVR", "KEYCODE_E", "KEYCODE_EISU", "KEYCODE_ENDCALL", "KEYCODE_ENTER", "KEYCODE_ENVELOPE", "KEYCODE_EQUALS", "KEYCODE_ESCAPE", "KEYCODE_EXPLORER", "KEYCODE_F", "KEYCODE_F1", "KEYCODE_F10", "KEYCODE_F11", "KEYCODE_F12", "KEYCODE_F2", "KEYCODE_F3", "KEYCODE_F4", "KEYCODE_F5", "KEYCODE_F6", "KEYCODE_F7", "KEYCODE_F8", "KEYCODE_F9", "KEYCODE_FOCUS", "KEYCODE_FORWARD", "KEYCODE_FORWARD_DEL", "KEYCODE_FUNCTION", "KEYCODE_G", "KEYCODE_GRAVE", "KEYCODE_GUIDE", "KEYCODE_H", "KEYCODE_HEADSETHOOK", "KEYCODE_HELP", "KEYCODE_HENKAN", "KEYCODE_HOME", "KEYCODE_I", "KEYCODE_INFO", "KEYCODE_INSERT", "KEYCODE_J", "KEYCODE_K", "KEYCODE_KANA", "KEYCODE_KATAKANA_HIRAGANA", "KEYCODE_L", "KEYCODE_LANGUAGE_SWITCH", "KEYCODE_LAST_CHANNEL", "KEYCODE_LEFT_BRACKET", "KEYCODE_M", "KEYCODE_MANNER_MODE", "KEYCODE_MEDIA_AUDIO_TRACK", "KEYCODE_MEDIA_CLOSE", "KEYCODE_MEDIA_EJECT", "KEYCODE_MEDIA_FAST_FORWARD", "KEYCODE_MEDIA_NEXT", "KEYCODE_MEDIA_PAUSE", "KEYCODE_MEDIA_PLAY", "KEYCODE_MEDIA_PLAY_PAUSE", "KEYCODE_MEDIA_PREVIOUS", "KEYCODE_MEDIA_RECORD", "KEYCODE_MEDIA_REWIND", "KEYCODE_MEDIA_SKIP_BACKWARD", "KEYCODE_MEDIA_SKIP_FORWARD", "KEYCODE_MEDIA_STEP_BACKWARD", "KEYCODE_MEDIA_STEP_FORWARD", "KEYCODE_MEDIA_STOP", "KEYCODE_MEDIA_TOP_MENU", "KEYCODE_MENU", "KEYCODE_META_LEFT", "KEYCODE_META_RIGHT", "KEYCODE_MINUS", "KEYCODE_MOVE_END", "KEYCODE_MOVE_HOME", "KEYCODE_MUHENKAN", "KEYCODE_MUSIC", "KEYCODE_MUTE", "KEYCODE_N", "KEYCODE_NAVIGATE_IN", "KEYCODE_NAVIGATE_NEXT", "KEYCODE_NAVIGATE_OUT", "KEYCODE_NAVIGATE_PREVIOUS", "KEYCODE_NOTIFICATION", "KEYCODE_NUM", "KEYCODE_NUMPAD_0", "KEYCODE_NUMPAD_1", "KEYCODE_NUMPAD_2", "KEYCODE_NUMPAD_3", "KEYCODE_NUMPAD_4", "KEYCODE_NUMPAD_5", "KEYCODE_NUMPAD_6", "KEYCODE_NUMPAD_7", "KEYCODE_NUMPAD_8", "KEYCODE_NUMPAD_9", "KEYCODE_NUMPAD_ADD", "KEYCODE_NUMPAD_COMMA", "KEYCODE_NUMPAD_DIVIDE", "KEYCODE_NUMPAD_DOT", "KEYCODE_NUMPAD_ENTER", "KEYCODE_NUMPAD_EQUALS", "KEYCODE_NUMPAD_LEFT_PAREN", "KEYCODE_NUMPAD_MULTIPLY", "KEYCODE_NUMPAD_RIGHT_PAREN", "KEYCODE_NUMPAD_SUBTRACT", "KEYCODE_NUM_LOCK", "KEYCODE_O", "KEYCODE_P", "KEYCODE_PAGE_DOWN", "KEYCODE_PAGE_UP", "KEYCODE_PAIRING", "KEYCODE_PASTE", "KEYCODE_PERIOD", "KEYCODE_PICTSYMBOLS", "KEYCODE_PLUS", "KEYCODE_POUND", "KEYCODE_POWER", "KEYCODE_PROG_BLUE", "KEYCODE_PROG_GREEN", "KEYCODE_PROG_RED", "KEYCODE_PROG_YELLOW", "KEYCODE_Q", "KEYCODE_R", "KEYCODE_REFRESH", "KEYCODE_RIGHT_BRACKET", "KEYCODE_RO", "KEYCODE_S", "KEYCODE_SCROLL_LOCK", "KEYCODE_SEARCH", "KEYCODE_SEMICOLON", "KEYCODE_SETTINGS", "KEYCODE_SHIFT_LEFT", "KEYCODE_SHIFT_RIGHT", "KEYCODE_SLASH", "KEYCODE_SLEEP", "KEYCODE_SOFT_LEFT", "KEYCODE_SOFT_RIGHT", "KEYCODE_SOFT_SLEEP", "KEYCODE_SPACE", "KEYCODE_STAR", "KEYCODE_STB_INPUT", "KEYCODE_STB_POWER", "KEYCODE_STEM_1", "KEYCODE_STEM_2", "KEYCODE_STEM_3", "KEYCODE_STEM_PRIMARY", "KEYCODE_SWITCH_CHARSET", "KEYCODE_SYM", "KEYCODE_SYSRQ", "KEYCODE_SYSTEM_NAVIGATION_DOWN", "KEYCODE_SYSTEM_NAVIGATION_LEFT", "KEYCODE_SYSTEM_NAVIGATION_RIGHT", "KEYCODE_SYSTEM_NAVIGATION_UP", "KEYCODE_T", "KEYCODE_TAB", "KEYCODE_TV", "KEYCODE_TV_ANTENNA_CABLE", "KEYCODE_TV_AUDIO_DESCRIPTION", "KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN", "KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP", "KEYCODE_TV_CONTENTS_MENU", "KEYCODE_TV_DATA_SERVICE", "KEYCODE_TV_INPUT", "KEYCODE_TV_INPUT_COMPONENT_1", "KEYCODE_TV_INPUT_COMPONENT_2", "KEYCODE_TV_INPUT_COMPOSITE_1", "KEYCODE_TV_INPUT_COMPOSITE_2", "KEYCODE_TV_INPUT_HDMI_1", "KEYCODE_TV_INPUT_HDMI_2", "KEYCODE_TV_INPUT_HDMI_3", "KEYCODE_TV_INPUT_HDMI_4", "KEYCODE_TV_INPUT_VGA_1", "KEYCODE_TV_MEDIA_CONTEXT_MENU", "KEYCODE_TV_NETWORK", "KEYCODE_TV_NUMBER_ENTRY", "KEYCODE_TV_POWER", "KEYCODE_TV_RADIO_SERVICE", "KEYCODE_TV_SATELLITE", "KEYCODE_TV_SATELLITE_BS", "KEYCODE_TV_SATELLITE_CS", "KEYCODE_TV_SATELLITE_SERVICE", "KEYCODE_TV_TELETEXT", "KEYCODE_TV_TERRESTRIAL_ANALOG", "KEYCODE_TV_TERRESTRIAL_DIGITAL", "KEYCODE_TV_TIMER_PROGRAMMING", "KEYCODE_TV_ZOOM_MODE", "KEYCODE_U", "KEYCODE_UNKNOWN", "KEYCODE_V", "KEYCODE_VOICE_ASSIST", "KEYCODE_VOLUME_DOWN", "KEYCODE_VOLUME_MUTE", "KEYCODE_VOLUME_UP", "KEYCODE_W", "KEYCODE_WAKEUP", "KEYCODE_WINDOW", "KEYCODE_X", "KEYCODE_Y", "KEYCODE_YEN", "KEYCODE_Z", "KEYCODE_ZENKAKU_HANKAKU", "KEYCODE_ZOOM_IN", "KEYCODE_ZOOM_OUT", "MAX_KEYCODE", "META_ALT_LEFT_ON", "META_ALT_MASK", "META_ALT_ON", "META_ALT_RIGHT_ON", "META_CAPS_LOCK_ON", "META_CTRL_LEFT_ON", "META_CTRL_MASK", "META_CTRL_ON", "META_CTRL_RIGHT_ON", "META_FUNCTION_ON", "META_META_LEFT_ON", "META_META_MASK", "META_META_ON", "META_META_RIGHT_ON", "META_NUM_LOCK_ON", "META_SCROLL_LOCK_ON", "META_SHIFT_LEFT_ON", "META_SHIFT_MASK", "META_SHIFT_ON", "META_SHIFT_RIGHT_ON", "META_SYM_ON", "changeAction", "changeFlags", "changeTimeRepeat", "dispatch", "getCharacters", "getDeadChar", "getDisplayLabel", "getKeyCharacterMap", "getKeyCode", "getKeyData", "getMatch", "getMaxKeyCode", "getModifierMetaStateMask", "getNumber", "getRepeatCount", "getScanCode", "hasModifiers", "hasNoModifiers", "isAltPressed", "isCanceled", "isCapsLockOn", "isCtrlPressed", "isFunctionPressed", "isGamepadButton", "isLongPress", "isMetaPressed", "isModifierKey", "isNumLockOn", "isPrintingKey", "isScrollLockOn", "isShiftPressed", "isSymPressed", "isSystem", "isTracking", "keyCodeFromString", "keyCodeToString", "metaStateHasModifiers", "metaStateHasNoModifiers", "normalizeMetaState", "startTracking", "isFromSource", "KEYBOARD_TYPE_ALPHABETIC", "KEYBOARD_TYPE_NONE", "KEYBOARD_TYPE_NON_ALPHABETIC", "MOTION_RANGE_ORIENTATION", "MOTION_RANGE_PRESSURE", "MOTION_RANGE_SIZE", "MOTION_RANGE_TOOL_MAJOR", "MOTION_RANGE_TOOL_MINOR", "MOTION_RANGE_TOUCH_MAJOR", "MOTION_RANGE_TOUCH_MINOR", "MOTION_RANGE_X", "MOTION_RANGE_Y", "SOURCE_ANY", "SOURCE_BLUETOOTH_STYLUS", "SOURCE_CLASS_BUTTON", "SOURCE_CLASS_JOYSTICK", "SOURCE_CLASS_MASK", "SOURCE_CLASS_NONE", "SOURCE_CLASS_POINTER", "SOURCE_CLASS_POSITION", "SOURCE_CLASS_TRACKBALL", "SOURCE_DPAD", "SOURCE_GAMEPAD", "SOURCE_HDMI", "SOURCE_JOYSTICK", "SOURCE_KEYBOARD", "SOURCE_MOUSE", "SOURCE_MOUSE_RELATIVE", "SOURCE_ROTARY_ENCODER", "SOURCE_STYLUS", "SOURCE_TOUCHPAD", "SOURCE_TOUCHSCREEN", "SOURCE_TOUCH_NAVIGATION", "SOURCE_TRACKBALL", "SOURCE_UNKNOWN", "getControllerNumber", "getDescriptor", "getDeviceIds", "getKeyboardType", "getMotionRange", "getMotionRanges", "getProductId", "getSources", "getVendorId", "getVibrator", "hasKeys", "hasMicrophone", "supportsSource", "getAxis", "getFlat", "getFuzz", "getRange", "getResolution", "AXIS_CLIP", "AXIS_PULL_AFTER", "AXIS_PULL_BEFORE", "AXIS_SPECIFIED", "AXIS_X_SHIFT", "AXIS_Y_SHIFT", "CENTER_HORIZONTAL", "CENTER_VERTICAL", "DISPLAY_CLIP_HORIZONTAL", "DISPLAY_CLIP_VERTICAL", "FILL_HORIZONTAL", "FILL_VERTICAL", "NO_GRAVITY", "RELATIVE_HORIZONTAL_GRAVITY_MASK", "RELATIVE_LAYOUT_DIRECTION", "VERTICAL_GRAVITY_MASK", "applyDisplay", "getAbsoluteGravity", "isHorizontal", "isVertical", "getBoundingRects", "getSafeInsetBottom", "getSafeInsetLeft", "getSafeInsetRight", "getSafeInsetTop", "DEFAULT_DISPLAY", "FLAG_PRIVATE", "FLAG_ROUND", "FLAG_SUPPORTS_PROTECTED_BUFFERS", "INVALID_DISPLAY", "STATE_DOZE", "STATE_DOZE_SUSPEND", "STATE_ON_SUSPEND", "STATE_UNKNOWN", "STATE_VR", "getAppVsyncOffsetNanos", "getCurrentSizeRange", "getDisplayId", "getHdrCapabilities", "getMetrics", "getMode", "getPixelFormat", "getPresentationDeadlineNanos", "getRealMetrics", "getRealSize", "getRectSize", "getRefreshRate", "getSupportedModes", "getSupportedRefreshRates", "isHdr", "getRawWidth", "getRawHeight", "postFrameCallback", "postFrameCallbackDelayed", "removeFrameCallback", "doFrame", "DENSITY_260", "DENSITY_280", "DENSITY_300", "DENSITY_340", "DENSITY_360", "DENSITY_400", "DENSITY_420", "DENSITY_440", "DENSITY_560", "DENSITY_DEFAULT", "DENSITY_DEVICE_STABLE", "DENSITY_HIGH", "DENSITY_LOW", "DENSITY_MEDIUM", "DENSITY_TV", "DENSITY_XHIGH", "DENSITY_XXHIGH", "DENSITY_XXXHIGH", "density", "densityDpi", "heightPixels", "scaledDensity", "widthPixels", "xdpi", "ydpi", "setToDefaults", "ACCELEROMETER_ROTATION", "ADB_ENABLED", "AIRPLANE_MODE_ON", "AIRPLANE_MODE_RADIOS", "ALARM_ALERT", "ALWAYS_FINISH_ACTIVITIES", "ANDROID_ID", "ANIMATOR_DURATION_SCALE", "AUTO_TIME", "AUTO_TIME_ZONE", "BLUETOOTH_DISCOVERABILITY", "BLUETOOTH_DISCOVERABILITY_TIMEOUT", "BLUETOOTH_ON", "CONTENT_URI", "DATA_ROAMING", "DATE_FORMAT", "DEFAULT_ALARM_ALERT_URI", "DEFAULT_NOTIFICATION_URI", "DEFAULT_RINGTONE_URI", "DEVICE_PROVISIONED", "DIM_SCREEN", "DTMF_TONE_TYPE_WHEN_DIALING", "DTMF_TONE_WHEN_DIALING", "END_BUTTON_BEHAVIOR", "HTTP_PROXY", "INSTALL_NON_MARKET_APPS", "LOCATION_PROVIDERS_ALLOWED", "LOCK_PATTERN_ENABLED", "LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED", "LOCK_PATTERN_VISIBLE", "LOGGING_ID", "MODE_RINGER", "MODE_RINGER_STREAMS_AFFECTED", "MUTE_STREAMS_AFFECTED", "NEXT_ALARM_FORMATTED", "NOTIFICATION_SOUND", "PARENTAL_CONTROL_ENABLED", "PARENTAL_CONTROL_LAST_UPDATE", "PARENTAL_CONTROL_REDIRECT_URL", "RADIO_BLUETOOTH", "RADIO_CELL", "RADIO_NFC", "RADIO_WIFI", "SCREEN_BRIGHTNESS", "SCREEN_BRIGHTNESS_MODE", "SCREEN_BRIGHTNESS_MODE_AUTOMATIC", "SCREEN_BRIGHTNESS_MODE_MANUAL", "SCREEN_OFF_TIMEOUT", "SETTINGS_CLASSNAME", "SETUP_WIZARD_HAS_RUN", "SHOW_GTALK_SERVICE_STATUS", "SHOW_PROCESSES", "SHOW_WEB_SUGGESTIONS", "STAY_ON_WHILE_PLUGGED_IN", "TEXT_AUTO_CAPS", "TEXT_AUTO_PUNCTUATE", "TEXT_AUTO_REPLACE", "TEXT_SHOW_PASSWORD", "TIME_12_24", "TRANSITION_ANIMATION_SCALE", "USB_MASS_STORAGE_ENABLED", "USER_ROTATION", "USE_GOOGLE_MAIL", "VIBRATE_ON", "VIBRATE_WHEN_RINGING", "WAIT_FOR_DEBUGGER", "WALLPAPER_ACTIVITY", "WIFI_MAX_DHCP_RETRY_COUNT", "WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS", "WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON", "WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY", "WIFI_NUM_OPEN_NETWORKS_KEPT", "WIFI_ON", "WIFI_SLEEP_POLICY", "WIFI_SLEEP_POLICY_DEFAULT", "WIFI_SLEEP_POLICY_NEVER", "WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED", "WIFI_STATIC_DNS1", "WIFI_STATIC_DNS2", "WIFI_STATIC_GATEWAY", "WIFI_STATIC_IP", "WIFI_STATIC_NETMASK", "WIFI_USE_STATIC_IP", "WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE", "WIFI_WATCHDOG_AP_COUNT", "WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS", "WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED", "WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS", "WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT", "WIFI_WATCHDOG_MAX_AP_CHECKS", "WIFI_WATCHDOG_ON", "WIFI_WATCHDOG_PING_COUNT", "WIFI_WATCHDOG_PING_DELAY_MS", "WIFI_WATCHDOG_PING_TIMEOUT_MS", "WINDOW_ANIMATION_SCALE", "getConfiguration", "getInt", "getLong", "getShowGTalkServiceStatus", "getUriFor", "putConfiguration", "putFloat", "putInt", "putLong", "setShowGTalkServiceStatus", "ACCESSIBILITY_DISPLAY_INVERSION_ENABLED", "ACCESSIBILITY_ENABLED", "ACCESSIBILITY_SPEAK_PASSWORD", "ALLOWED_GEOLOCATION_ORIGINS", "ALLOW_MOCK_LOCATION", "BACKGROUND_DATA", "DEFAULT_INPUT_METHOD", "DEVELOPMENT_SETTINGS_ENABLED", "ENABLED_ACCESSIBILITY_SERVICES", "ENABLED_INPUT_METHODS", "INPUT_METHOD_SELECTOR_VISIBILITY", "LOCATION_MODE", "LOCATION_MODE_BATTERY_SAVING", "LOCATION_MODE_HIGH_ACCURACY", "LOCATION_MODE_OFF", "LOCATION_MODE_SENSORS_ONLY", "RTT_CALLING_MODE", "SELECTED_INPUT_METHOD_SUBTYPE", "SKIP_FIRST_USE_HINTS", "TOUCH_EXPLORATION_ENABLED", "TTS_DEFAULT_COUNTRY", "TTS_DEFAULT_LANG", "TTS_DEFAULT_PITCH", "TTS_DEFAULT_RATE", "TTS_DEFAULT_SYNTH", "TTS_DEFAULT_VARIANT", "TTS_ENABLED_PLUGINS", "TTS_USE_DEFAULTS", "WIFI_WATCHDOG_WATCH_LIST", "isLocationProviderEnabled", "setLocationProviderEnabled", "cancel", "hasAmplitudeControl", "hasVibrator", "vibrate", "FIRST_APPLICATION_UID", "LAST_APPLICATION_UID", "PHONE_UID", "SIGNAL_KILL", "SIGNAL_QUIT", "SIGNAL_USR1", "SYSTEM_UID", "THREAD_PRIORITY_AUDIO", "THREAD_PRIORITY_BACKGROUND", "THREAD_PRIORITY_DEFAULT", "THREAD_PRIORITY_DISPLAY", "THREAD_PRIORITY_FOREGROUND", "THREAD_PRIORITY_LESS_FAVORABLE", "THREAD_PRIORITY_LOWEST", "THREAD_PRIORITY_MORE_FAVORABLE", "THREAD_PRIORITY_URGENT_AUDIO", "THREAD_PRIORITY_URGENT_DISPLAY", "THREAD_PRIORITY_VIDEO", "getElapsedCpuTime", "getExclusiveCores", "getGidForName", "getStartElapsedRealtime", "getStartUptimeMillis", "getThreadPriority", "getUidForName", "is64Bit", "isApplicationUid", "isIsolated", "killProcess", "myPid", "myTid", "myUid", "myUserHandle", "sendSignal", "setThreadPriority", "supportsProcesses", "ACQUIRE_CAUSES_WAKEUP", "ACTION_DEVICE_IDLE_MODE_CHANGED", "ACTION_POWER_SAVE_MODE_CHANGED", "FULL_WAKE_LOCK", "LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF", "LOCATION_MODE_FOREGROUND_ONLY", "LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF", "LOCATION_MODE_NO_CHANGE", "ON_AFTER_RELEASE", "PARTIAL_WAKE_LOCK", "PROXIMITY_SCREEN_OFF_WAKE_LOCK", "RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY", "SCREEN_BRIGHT_WAKE_LOCK", "SCREEN_DIM_WAKE_LOCK", "getLocationPowerSaveMode", "isDeviceIdleMode", "isIgnoringBatteryOptimizations", "isInteractive", "isPowerSaveMode", "isScreenOn", "isSustainedPerformanceModeSupported", "isWakeLockLevelSupported", "newWakeLock", "reboot", "MODE_APPEND", "MODE_CREATE", "MODE_READ_ONLY", "MODE_READ_WRITE", "MODE_TRUNCATE", "MODE_WORLD_READABLE", "MODE_WORLD_WRITEABLE", "MODE_WRITE_ONLY", "adoptFd", "canDetectErrors", "checkError", "closeWithError", "createPipe", "createReliablePipe", "createReliableSocketPair", "createSocketPair", "detachFd", "fromDatagramSocket", "fromFd", "fromSocket", "getFd", "getFileDescriptor", "getStatSize", "parseMode", "STRING_CREATOR", "appendFrom", "createBinderArray", "createBinderArrayList", "createBooleanArray", "createByteArray", "createCharArray", "createDoubleArray", "createFloatArray", "createIntArray", "createLongArray", "createStringArray", "createStringArrayList", "createTypedArray", "createTypedArrayList", "dataAvail", "dataCapacity", "dataPosition", "dataSize", "enforceInterface", "hasFileDescriptors", "readArray", "readArrayList", "readBinderArray", "readBinderList", "readBooleanArray", "readBundle", "readByte", "readByteArray", "readCharArray", "readDouble", "readDoubleArray", "readException", "readFileDescriptor", "readFloat", "readFloatArray", "readHashMap", "readInt", "readIntArray", "readList", "readLong", "readLongArray", "readMap", "readParcelable", "readParcelableArray", "readPersistableBundle", "readSerializable", "readSize", "readSizeF", "readSparseArray", "readSparseBooleanArray", "readString", "readStringArray", "readStringList", "readStrongBinder", "readTypedArray", "readTypedList", "readTypedObject", "readValue", "setDataCapacity", "setDataPosition", "setDataSize", "unmarshall", "writeArray", "writeBinderArray", "writeBinderList", "writeBooleanArray", "writeBundle", "writeByte", "writeByteArray", "writeCharArray", "writeDouble", "writeDoubleArray", "writeException", "writeFileDescriptor", "writeFloat", "writeFloatArray", "writeInt", "writeIntArray", "writeInterfaceToken", "writeList", "writeLong", "writeLongArray", "writeMap", "writeNoException", "writeParcelable", "writeParcelableArray", "writePersistableBundle", "writeSerializable", "writeSize", "writeSizeF", "writeSparseArray", "writeSparseBooleanArray", "writeString", "writeStringArray", "writeStringList", "writeStrongBinder", "writeStrongInterface", "writeTypedArray", "writeTypedList", "writeTypedObject", "writeValue", "arg1", "arg2", "replyTo", "sendingUid", "what", "getData", "getTarget", "getWhen", "isAsynchronous", "peekData", "sendToTarget", "setAsynchronous", "setData", "setTarget", "dump", "getMainLooper", "getQueue", "getThread", "isCurrentThread", "myLooper", "myQueue", "prepare", "prepareMainLooper", "quit", "quitSafely", "setMessageLogging", "DUMP_TRANSACTION", "FIRST_CALL_TRANSACTION", "FLAG_ONEWAY", "INTERFACE_TRANSACTION", "LAST_CALL_TRANSACTION", "LIKE_TRANSACTION", "PING_TRANSACTION", "TWEET_TRANSACTION", "dumpAsync", "getInterfaceDescriptor", "isBinderAlive", "pingBinder", "queryLocalInterface", "transact", "unlinkToDeath", "getLooper", "getThreadId", "onLooperPrepared", "createAsync", "dispatchMessage", "getMessageName", "handleMessage", "hasMessages", "obtainMessage", "postAtFrontOfQueue", "postAtTime", "removeCallbacksAndMessages", "removeMessages", "sendEmptyMessage", "sendEmptyMessageAtTime", "sendEmptyMessageDelayed", "sendMessage", "sendMessageAtFrontOfQueue", "sendMessageAtTime", "sendMessageDelayed", "DIRECTORY_ALARMS", "DIRECTORY_DCIM", "DIRECTORY_DOCUMENTS", "DIRECTORY_DOWNLOADS", "DIRECTORY_MOVIES", "DIRECTORY_MUSIC", "DIRECTORY_NOTIFICATIONS", "DIRECTORY_PICTURES", "DIRECTORY_PODCASTS", "DIRECTORY_RINGTONES", "MEDIA_EJECTING", "MEDIA_MOUNTED_READ_ONLY", "MEDIA_UNKNOWN", "getDataDirectory", "getDownloadCacheDirectory", "getExternalStorageDirectory", "getExternalStoragePublicDirectory", "getExternalStorageState", "getRootDirectory", "getStorageState", "isExternalStorageEmulated", "isExternalStorageRemovable", "deepCopy", "getBinder", "getBundle", "getByte", "getByteArray", "getChar", "getCharArray", "getCharSequence", "getCharSequenceArray", "getCharSequenceArrayList", "getFloatArray", "getIntegerArrayList", "getParcelable", "getParcelableArray", "getParcelableArrayList", "getSerializable", "getShort", "getShortArray", "getSizeF", "getSparseParcelableArray", "getStringArrayList", "putBinder", "putBundle", "putByte", "putByteArray", "putChar", "putCharArray", "putCharSequence", "putCharSequenceArray", "putCharSequenceArrayList", "putFloatArray", "putIntegerArrayList", "putParcelable", "putParcelableArray", "putParcelableArrayList", "putSerializable", "putShort", "putShortArray", "putSize", "putSizeF", "putSparseParcelableArray", "putStringArrayList", "setClassLoader", "putBoolean", "getDouble", "putDouble", "getLongArray", "putLongArray", "putStringArray", "getIntArray", "putIntArray", "putBooleanArray", "putDoubleArray", "getBooleanArray", "getDoubleArray", "getStringArray", "BOOTLOADER", "BRAND", "CPU_ABI", "CPU_ABI2", "DEVICE", "MANUFACTURER", "MODEL", "PRODUCT", "RADIO", "SERIAL", "SUPPORTED_32_BIT_ABIS", "SUPPORTED_64_BIT_ABIS", "SUPPORTED_ABIS", "TAGS", "getRadioVersion", "getSerial", "BASE_OS", "CODENAME", "INCREMENTAL", "PREVIEW_SDK_INT", "SECURITY_PATCH", "buildUpon", "encode", "fromFile", "fromParts", "getAuthority", "getBooleanQueryParameter", "getEncodedAuthority", "getEncodedFragment", "getEncodedPath", "getEncodedQuery", "getEncodedSchemeSpecificPart", "getEncodedUserInfo", "getFragment", "getHost", "getLastPathSegment", "getPathSegments", "getPort", "getQuery", "getQueryParameter", "getQueryParameterNames", "getQueryParameters", "getScheme", "getSchemeSpecificPart", "getUserInfo", "isHierarchical", "isRelative", "normalizeScheme", "withAppendedPath", "getDetailedState", "getExtraInfo", "getReason", "getSubtype", "getSubtypeName", "isAvailable", "isConnected", "isConnectedOrConnecting", "isFailover", "isRoaming", "ACTION_BACKGROUND_DATA_SETTING_CHANGED", "ACTION_CAPTIVE_PORTAL_SIGN_IN", "ACTION_RESTRICT_BACKGROUND_CHANGED", "CONNECTIVITY_ACTION", "DEFAULT_NETWORK_PREFERENCE", "EXTRA_CAPTIVE_PORTAL", "EXTRA_CAPTIVE_PORTAL_URL", "EXTRA_EXTRA_INFO", "EXTRA_IS_FAILOVER", "EXTRA_NETWORK", "EXTRA_NETWORK_INFO", "EXTRA_NETWORK_REQUEST", "EXTRA_NETWORK_TYPE", "EXTRA_NO_CONNECTIVITY", "EXTRA_OTHER_NETWORK_INFO", "EXTRA_REASON", "MULTIPATH_PREFERENCE_HANDOVER", "MULTIPATH_PREFERENCE_PERFORMANCE", "MULTIPATH_PREFERENCE_RELIABILITY", "RESTRICT_BACKGROUND_STATUS_DISABLED", "RESTRICT_BACKGROUND_STATUS_ENABLED", "RESTRICT_BACKGROUND_STATUS_WHITELISTED", "TYPE_DUMMY", "TYPE_ETHERNET", "TYPE_MOBILE", "TYPE_MOBILE_DUN", "TYPE_MOBILE_HIPRI", "TYPE_MOBILE_MMS", "TYPE_MOBILE_SUPL", "TYPE_VPN", "TYPE_WIFI", "TYPE_WIMAX", "addDefaultNetworkActiveListener", "bindProcessToNetwork", "getActiveNetwork", "getActiveNetworkInfo", "getAllNetworkInfo", "getAllNetworks", "getBackgroundDataSetting", "getBoundNetworkForProcess", "getDefaultProxy", "getLinkProperties", "getMultipathPreference", "getNetworkCapabilities", "getNetworkInfo", "getNetworkPreference", "getNetworkWatchlistConfigHash", "getProcessDefaultNetwork", "getRestrictBackgroundStatus", "isActiveNetworkMetered", "isDefaultNetworkActive", "isNetworkTypeValid", "registerDefaultNetworkCallback", "releaseNetworkRequest", "removeDefaultNetworkActiveListener", "reportBadNetwork", "reportNetworkConnectivity", "requestBandwidthUpdate", "requestNetwork", "setNetworkPreference", "setProcessDefaultNetwork", "unregisterNetworkCallback", "CALLBACK_FLAG_PERFORM_ACTIVE_SCAN", "CALLBACK_FLAG_UNFILTERED_EVENTS", "ROUTE_TYPE_LIVE_AUDIO", "ROUTE_TYPE_LIVE_VIDEO", "ROUTE_TYPE_USER", "addUserRoute", "clearUserRoutes", "createRouteCategory", "createUserRoute", "getCategoryAt", "getCategoryCount", "getDefaultRoute", "getRouteAt", "getRouteCount", "getSelectedRoute", "removeUserRoute", "selectRoute", "DEVICE_TYPE_BLUETOOTH", "DEVICE_TYPE_SPEAKER", "DEVICE_TYPE_TV", "DEVICE_TYPE_UNKNOWN", "PLAYBACK_TYPE_LOCAL", "PLAYBACK_TYPE_REMOTE", "PLAYBACK_VOLUME_FIXED", "PLAYBACK_VOLUME_VARIABLE", "getDescription", "getDeviceType", "getGroup", "getIconDrawable", "getPlaybackStream", "getPlaybackType", "getPresentationDisplay", "getStatus", "getSupportedTypes", "getVolume", "getVolumeHandling", "getVolumeMax", "isConnecting", "requestSetVolume", "requestUpdateVolume", "COLOR_RANGE_FULL", "COLOR_RANGE_LIMITED", "COLOR_STANDARD_BT2020", "COLOR_STANDARD_BT601_NTSC", "COLOR_STANDARD_BT601_PAL", "COLOR_STANDARD_BT709", "COLOR_TRANSFER_HLG", "COLOR_TRANSFER_LINEAR", "COLOR_TRANSFER_SDR_VIDEO", "COLOR_TRANSFER_ST2084", "KEY_AAC_DRC_ATTENUATION_FACTOR", "KEY_AAC_DRC_BOOST_FACTOR", "KEY_AAC_DRC_EFFECT_TYPE", "KEY_AAC_DRC_HEAVY_COMPRESSION", "KEY_AAC_DRC_TARGET_REFERENCE_LEVEL", "KEY_AAC_ENCODED_TARGET_LEVEL", "KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT", "KEY_AAC_SBR_MODE", "KEY_AUDIO_SESSION_ID", "KEY_BITRATE_MODE", "KEY_CAPTURE_RATE", "KEY_COLOR_RANGE", "KEY_COLOR_STANDARD", "KEY_COLOR_TRANSFER", "KEY_COMPLEXITY", "KEY_GRID_COLUMNS", "KEY_GRID_ROWS", "KEY_HDR_STATIC_INFO", "KEY_INTRA_REFRESH_PERIOD", "KEY_LATENCY", "KEY_LEVEL", "KEY_OPERATING_RATE", "KEY_OUTPUT_REORDER_DEPTH", "KEY_PCM_ENCODING", "KEY_PRIORITY", "KEY_PROFILE", "KEY_QUALITY", "KEY_SLICE_HEIGHT", "KEY_TEMPORAL_LAYERING", "KEY_TILE_HEIGHT", "KEY_TILE_WIDTH", "KEY_TRACK_ID", "MIMETYPE_AUDIO_AAC", "MIMETYPE_AUDIO_AC3", "MIMETYPE_AUDIO_AMR_NB", "MIMETYPE_AUDIO_AMR_WB", "MIMETYPE_AUDIO_EAC3", "MIMETYPE_AUDIO_FLAC", "MIMETYPE_AUDIO_G711_ALAW", "MIMETYPE_AUDIO_G711_MLAW", "MIMETYPE_AUDIO_MPEG", "MIMETYPE_AUDIO_MSGSM", "MIMETYPE_AUDIO_OPUS", "MIMETYPE_AUDIO_QCELP", "MIMETYPE_AUDIO_RAW", "MIMETYPE_AUDIO_SCRAMBLED", "MIMETYPE_AUDIO_VORBIS", "MIMETYPE_IMAGE_ANDROID_HEIC", "MIMETYPE_TEXT_CEA_608", "MIMETYPE_TEXT_CEA_708", "MIMETYPE_TEXT_SUBRIP", "MIMETYPE_TEXT_VTT", "MIMETYPE_VIDEO_AVC", "MIMETYPE_VIDEO_DOLBY_VISION", "MIMETYPE_VIDEO_H263", "MIMETYPE_VIDEO_HEVC", "MIMETYPE_VIDEO_MPEG2", "MIMETYPE_VIDEO_MPEG4", "MIMETYPE_VIDEO_RAW", "MIMETYPE_VIDEO_SCRAMBLED", "MIMETYPE_VIDEO_VP8", "MIMETYPE_VIDEO_VP9", "createAudioFormat", "createSubtitleFormat", "createVideoFormat", "getByteBuffer", "getFeatureEnabled", "setByteBuffer", "setFeatureEnabled", "setInteger", "setLong", "SAMPLE_FLAG_ENCRYPTED", "SAMPLE_FLAG_PARTIAL_FRAME", "SAMPLE_FLAG_SYNC", "SEEK_TO_CLOSEST_SYNC", "SEEK_TO_NEXT_SYNC", "SEEK_TO_PREVIOUS_SYNC", "getAudioPresentations", "getCachedDuration", "getCasInfo", "getDrmInitData", "getPsshInfo", "getSampleCryptoInfo", "getSampleSize", "hasCacheReachedEndOfStream", "setMediaCas", "BUFFER_FLAG_CODEC_CONFIG", "BUFFER_FLAG_END_OF_STREAM", "BUFFER_FLAG_KEY_FRAME", "BUFFER_FLAG_PARTIAL_FRAME", "BUFFER_FLAG_SYNC_FRAME", "CONFIGURE_FLAG_ENCODE", "CRYPTO_MODE_AES_CBC", "CRYPTO_MODE_AES_CTR", "CRYPTO_MODE_UNENCRYPTED", "INFO_OUTPUT_BUFFERS_CHANGED", "INFO_OUTPUT_FORMAT_CHANGED", "INFO_TRY_AGAIN_LATER", "PARAMETER_KEY_REQUEST_SYNC_FRAME", "PARAMETER_KEY_SUSPEND", "PARAMETER_KEY_VIDEO_BITRATE", "VIDEO_SCALING_MODE_SCALE_TO_FIT", "VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING", "createByCodecName", "createInputSurface", "createPersistentInputSurface", "getCodecInfo", "getInputBuffers", "getInputFormat", "getInputImage", "getOutputBuffers", "getOutputImage", "queueSecureInputBuffer", "setInputSurface", "setOnFrameRenderedListener", "setOutputSurface", "setParameters", "setVideoScalingMode", "signalEndOfInputStream", "presentationTimeUs", "ACTION_AUDIO_BECOMING_NOISY", "ACTION_HDMI_AUDIO_PLUG", "ACTION_HEADSET_PLUG", "ACTION_MICROPHONE_MUTE_CHANGED", "ACTION_SCO_AUDIO_STATE_CHANGED", "ACTION_SCO_AUDIO_STATE_UPDATED", "ADJUST_LOWER", "ADJUST_MUTE", "ADJUST_RAISE", "ADJUST_SAME", "ADJUST_TOGGLE_MUTE", "ADJUST_UNMUTE", "AUDIOFOCUS_GAIN", "AUDIOFOCUS_GAIN_TRANSIENT", "AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE", "AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK", "AUDIOFOCUS_LOSS", "AUDIOFOCUS_LOSS_TRANSIENT", "AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK", "AUDIOFOCUS_NONE", "AUDIOFOCUS_REQUEST_DELAYED", "AUDIOFOCUS_REQUEST_FAILED", "AUDIOFOCUS_REQUEST_GRANTED", "AUDIO_SESSION_ID_GENERATE", "ERROR_DEAD_OBJECT", "EXTRA_AUDIO_PLUG_STATE", "EXTRA_ENCODINGS", "EXTRA_MAX_CHANNEL_COUNT", "EXTRA_RINGER_MODE", "EXTRA_SCO_AUDIO_PREVIOUS_STATE", "EXTRA_SCO_AUDIO_STATE", "EXTRA_VIBRATE_SETTING", "EXTRA_VIBRATE_TYPE", "FLAG_ALLOW_RINGER_MODES", "FLAG_PLAY_SOUND", "FLAG_REMOVE_SOUND_AND_VIBRATE", "FLAG_SHOW_UI", "FLAG_VIBRATE", "FX_FOCUS_NAVIGATION_DOWN", "FX_FOCUS_NAVIGATION_LEFT", "FX_FOCUS_NAVIGATION_RIGHT", "FX_FOCUS_NAVIGATION_UP", "FX_KEYPRESS_DELETE", "FX_KEYPRESS_INVALID", "FX_KEYPRESS_RETURN", "FX_KEYPRESS_SPACEBAR", "FX_KEYPRESS_STANDARD", "FX_KEY_CLICK", "GET_DEVICES_ALL", "GET_DEVICES_INPUTS", "GET_DEVICES_OUTPUTS", "MODE_CURRENT", "MODE_INVALID", "MODE_IN_CALL", "MODE_IN_COMMUNICATION", "MODE_RINGTONE", "NUM_STREAMS", "PROPERTY_OUTPUT_FRAMES_PER_BUFFER", "PROPERTY_OUTPUT_SAMPLE_RATE", "PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED", "PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND", "PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND", "RINGER_MODE_CHANGED_ACTION", "RINGER_MODE_NORMAL", "RINGER_MODE_SILENT", "RINGER_MODE_VIBRATE", "ROUTE_ALL", "ROUTE_BLUETOOTH", "ROUTE_BLUETOOTH_A2DP", "ROUTE_BLUETOOTH_SCO", "ROUTE_EARPIECE", "ROUTE_HEADSET", "ROUTE_SPEAKER", "SCO_AUDIO_STATE_CONNECTED", "SCO_AUDIO_STATE_CONNECTING", "SCO_AUDIO_STATE_DISCONNECTED", "SCO_AUDIO_STATE_ERROR", "STREAM_ACCESSIBILITY", "STREAM_ALARM", "STREAM_DTMF", "STREAM_MUSIC", "STREAM_NOTIFICATION", "STREAM_RING", "STREAM_SYSTEM", "STREAM_VOICE_CALL", "USE_DEFAULT_STREAM_TYPE", "VIBRATE_SETTING_CHANGED_ACTION", "VIBRATE_SETTING_OFF", "VIBRATE_SETTING_ON", "VIBRATE_SETTING_ONLY_SILENT", "VIBRATE_TYPE_NOTIFICATION", "VIBRATE_TYPE_RINGER", "abandonAudioFocus", "abandonAudioFocusRequest", "adjustStreamVolume", "adjustSuggestedStreamVolume", "adjustVolume", "dispatchMediaKeyEvent", "generateAudioSessionId", "getActivePlaybackConfigurations", "getActiveRecordingConfigurations", "getDevices", "getMicrophones", "getParameters", "getRingerMode", "getRouting", "getStreamMaxVolume", "getStreamMinVolume", "getStreamVolume", "getStreamVolumeDb", "getVibrateSetting", "isBluetoothA2dpOn", "isBluetoothScoAvailableOffCall", "isBluetoothScoOn", "isMicrophoneMute", "isMusicActive", "isSpeakerphoneOn", "isStreamMute", "isVolumeFixed", "isWiredHeadsetOn", "requestAudioFocus", "setBluetoothA2dpOn", "setBluetoothScoOn", "setMicrophoneMute", "setMode", "setRingerMode", "setRouting", "setSpeakerphoneOn", "setStreamMute", "setStreamSolo", "setStreamVolume", "setVibrateSetting", "setWiredHeadsetOn", "shouldVibrate", "startBluetoothSco", "stopBluetoothSco", "unloadSoundEffects", "unregisterAudioDeviceCallback", "unregisterAudioPlaybackCallback", "unregisterAudioRecordingCallback", "unregisterMediaButtonEventReceiver", "unregisterRemoteControlClient", "unregisterRemoteController", "onAudioFocusChange", "setAcceptsDelayedFocusGain", "setAudioAttributes", "setFocusGain", "setForceDucking", "setOnAudioFocusChangeListener", "setWillPauseWhenDucked", "CONTENT_TYPE_MOVIE", "CONTENT_TYPE_MUSIC", "CONTENT_TYPE_SONIFICATION", "CONTENT_TYPE_SPEECH", "CONTENT_TYPE_UNKNOWN", "FLAG_AUDIBILITY_ENFORCED", "FLAG_HW_AV_SYNC", "FLAG_LOW_LATENCY", "USAGE_ALARM", "USAGE_ASSISTANCE_ACCESSIBILITY", "USAGE_ASSISTANCE_NAVIGATION_GUIDANCE", "USAGE_ASSISTANCE_SONIFICATION", "USAGE_ASSISTANT", "USAGE_GAME", "USAGE_MEDIA", "USAGE_NOTIFICATION", "USAGE_NOTIFICATION_COMMUNICATION_DELAYED", "USAGE_NOTIFICATION_COMMUNICATION_INSTANT", "USAGE_NOTIFICATION_COMMUNICATION_REQUEST", "USAGE_NOTIFICATION_EVENT", "USAGE_NOTIFICATION_RINGTONE", "USAGE_UNKNOWN", "USAGE_VOICE_COMMUNICATION", "USAGE_VOICE_COMMUNICATION_SIGNALLING", "getContentType", "getUsage", "setContentType", "setLegacyStreamType", "GPS_PROVIDER", "KEY_LOCATION_CHANGED", "KEY_PROVIDER_ENABLED", "KEY_PROXIMITY_ENTERING", "KEY_STATUS_CHANGED", "NETWORK_PROVIDER", "PASSIVE_PROVIDER", "PROVIDERS_CHANGED_ACTION", "addGpsStatusListener", "addNmeaListener", "addProximityAlert", "addTestProvider", "clearTestProviderEnabled", "clearTestProviderLocation", "clearTestProviderStatus", "getAllProviders", "getBestProvider", "getGnssHardwareModelName", "getGnssYearOfHardware", "getGpsStatus", "getLastKnownLocation", "getProviders", "isLocationEnabled", "isProviderEnabled", "removeGpsStatusListener", "removeNmeaListener", "removeProximityAlert", "removeTestProvider", "removeUpdates", "requestLocationUpdates", "requestSingleUpdate", "sendExtraCommand", "setTestProviderEnabled", "setTestProviderLocation", "setTestProviderStatus", "unregisterGnssMeasurementsCallback", "unregisterGnssNavigationMessageCallback", "unregisterGnssStatusCallback", "onLocationChanged", "onProviderDisabled", "onStatusChanged", "FORMAT_DEGREES", "FORMAT_MINUTES", "FORMAT_SECONDS", "bearingTo", "convert", "distanceBetween", "distanceTo", "getAccuracy", "getAltitude", "getBearing", "getBearingAccuracyDegrees", "getElapsedRealtimeNanos", "getExtras", "getLatitude", "getLongitude", "getSpeed", "getSpeedAccuracyMetersPerSecond", "getTime", "getVerticalAccuracyMeters", "hasAccuracy", "hasAltitude", "hasBearing", "hasBearingAccuracy", "hasSpeed", "hasSpeedAccuracy", "hasVerticalAccuracy", "isFromMockProvider", "removeAccuracy", "removeAltitude", "removeBearing", "removeSpeed", "setAccuracy", "setAltitude", "setBearing", "setBearingAccuracyDegrees", "setElapsedRealtimeNanos", "setExtras", "setLatitude", "setLongitude", "setProvider", "setSpeed", "setSpeedAccuracyMetersPerSecond", "setTime", "setVerticalAccuracyMeters", "ACCURACY_COARSE", "ACCURACY_FINE", "ACCURACY_HIGH", "ACCURACY_LOW", "ACCURACY_MEDIUM", "NO_REQUIREMENT", "POWER_HIGH", "POWER_LOW", "POWER_MEDIUM", "getBearingAccuracy", "getHorizontalAccuracy", "getPowerRequirement", "getSpeedAccuracy", "getVerticalAccuracy", "isAltitudeRequired", "isBearingRequired", "isCostAllowed", "isSpeedRequired", "setAltitudeRequired", "setBearingAccuracy", "setBearingRequired", "setCostAllowed", "setHorizontalAccuracy", "setPowerRequirement", "setSpeedAccuracy", "setSpeedRequired", "setVerticalAccuracy", "ACTION_QUERY_KEYBOARD_LAYOUTS", "META_DATA_KEYBOARD_LAYOUTS", "getInputDevice", "getInputDeviceIds", "unregisterInputDeviceListener", "onInputDeviceAdded", "onInputDeviceChanged", "onInputDeviceRemoved", "DISPLAY_CATEGORY_PRESENTATION", "VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR", "VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY", "VIRTUAL_DISPLAY_FLAG_PRESENTATION", "VIRTUAL_DISPLAY_FLAG_PUBLIC", "VIRTUAL_DISPLAY_FLAG_SECURE", "createVirtualDisplay", "getDisplays", "unregisterDisplayListener", "onDisplayAdded", "onDisplayChanged", "onDisplayRemoved", "getDeclination", "getFieldStrength", "getHorizontalStrength", "getInclination", "ACTION_NEW_PICTURE", "ACTION_NEW_VIDEO", "CAMERA_ERROR_EVICTED", "CAMERA_ERROR_SERVER_DIED", "CAMERA_ERROR_UNKNOWN", "addCallbackBuffer", "autoFocus", "cancelAutoFocus", "enableShutterSound", "getCameraInfo", "getNumberOfCameras", "reconnect", "setAutoFocusMoveCallback", "setDisplayOrientation", "setErrorCallback", "setFaceDetectionListener", "setOneShotPreviewCallback", "setPreviewCallback", "setPreviewCallbackWithBuffer", "setPreviewDisplay", "setPreviewTexture", "setZoomChangeListener", "startFaceDetection", "startPreview", "startSmoothZoom", "stopFaceDetection", "stopPreview", "stopSmoothZoom", "takePicture", "unlock", "onPreviewFrame", "ANTIBANDING_50HZ", "ANTIBANDING_60HZ", "ANTIBANDING_AUTO", "ANTIBANDING_OFF", "EFFECT_AQUA", "EFFECT_BLACKBOARD", "EFFECT_MONO", "EFFECT_NEGATIVE", "EFFECT_NONE", "EFFECT_POSTERIZE", "EFFECT_SEPIA", "EFFECT_SOLARIZE", "EFFECT_WHITEBOARD", "FLASH_MODE_AUTO", "FLASH_MODE_OFF", "FLASH_MODE_ON", "FLASH_MODE_RED_EYE", "FLASH_MODE_TORCH", "FOCUS_DISTANCE_FAR_INDEX", "FOCUS_DISTANCE_NEAR_INDEX", "FOCUS_DISTANCE_OPTIMAL_INDEX", "FOCUS_MODE_AUTO", "FOCUS_MODE_CONTINUOUS_PICTURE", "FOCUS_MODE_CONTINUOUS_VIDEO", "FOCUS_MODE_EDOF", "FOCUS_MODE_FIXED", "FOCUS_MODE_INFINITY", "FOCUS_MODE_MACRO", "PREVIEW_FPS_MAX_INDEX", "PREVIEW_FPS_MIN_INDEX", "SCENE_MODE_ACTION", "SCENE_MODE_AUTO", "SCENE_MODE_BARCODE", "SCENE_MODE_BEACH", "SCENE_MODE_CANDLELIGHT", "SCENE_MODE_FIREWORKS", "SCENE_MODE_HDR", "SCENE_MODE_LANDSCAPE", "SCENE_MODE_NIGHT", "SCENE_MODE_NIGHT_PORTRAIT", "SCENE_MODE_PARTY", "SCENE_MODE_PORTRAIT", "SCENE_MODE_SNOW", "SCENE_MODE_SPORTS", "SCENE_MODE_STEADYPHOTO", "SCENE_MODE_SUNSET", "SCENE_MODE_THEATRE", "WHITE_BALANCE_AUTO", "WHITE_BALANCE_CLOUDY_DAYLIGHT", "WHITE_BALANCE_DAYLIGHT", "WHITE_BALANCE_FLUORESCENT", "WHITE_BALANCE_INCANDESCENT", "WHITE_BALANCE_SHADE", "WHITE_BALANCE_TWILIGHT", "WHITE_BALANCE_WARM_FLUORESCENT", "getAntibanding", "getAutoExposureLock", "getAutoWhiteBalanceLock", "getColorEffect", "getExposureCompensation", "getExposureCompensationStep", "getFlashMode", "getFocalLength", "getFocusAreas", "getFocusDistances", "getFocusMode", "getHorizontalViewAngle", "getJpegQuality", "getJpegThumbnailQuality", "getJpegThumbnailSize", "getMaxExposureCompensation", "getMaxNumDetectedFaces", "getMaxNumFocusAreas", "getMaxNumMeteringAreas", "getMaxZoom", "getMeteringAreas", "getMinExposureCompensation", "getPictureFormat", "getPictureSize", "getPreferredPreviewSizeForVideo", "getPreviewFormat", "getPreviewFpsRange", "getPreviewFrameRate", "getPreviewSize", "getSceneMode", "getSupportedAntibanding", "getSupportedColorEffects", "getSupportedFlashModes", "getSupportedFocusModes", "getSupportedJpegThumbnailSizes", "getSupportedPictureFormats", "getSupportedPictureSizes", "getSupportedPreviewFormats", "getSupportedPreviewFpsRange", "getSupportedPreviewFrameRates", "getSupportedPreviewSizes", "getSupportedSceneModes", "getSupportedVideoSizes", "getSupportedWhiteBalance", "getVerticalViewAngle", "getVideoStabilization", "getWhiteBalance", "getZoom", "getZoomRatios", "isAutoExposureLockSupported", "isAutoWhiteBalanceLockSupported", "isSmoothZoomSupported", "isVideoSnapshotSupported", "isVideoStabilizationSupported", "isZoomSupported", "removeGpsData", "setAntibanding", "setAutoExposureLock", "setAutoWhiteBalanceLock", "setColorEffect", "setExposureCompensation", "setFlashMode", "setFocusAreas", "setFocusMode", "setGpsAltitude", "setGpsLatitude", "setGpsLongitude", "setGpsProcessingMethod", "setGpsTimestamp", "setJpegQuality", "setJpegThumbnailQuality", "setJpegThumbnailSize", "setMeteringAreas", "setPictureFormat", "setPictureSize", "setPreviewFormat", "setPreviewFpsRange", "setPreviewFrameRate", "setPreviewSize", "setRecordingHint", "setSceneMode", "setVideoStabilization", "setWhiteBalance", "setZoom", "unflatten", "CAMERA_FACING_BACK", "CAMERA_FACING_FRONT", "canDisableShutterSound", "onAutoFocus", "applyTheme", "canApplyTheme", "getChangingConfigurations", "getColor", "getConstantState", "getOpacity", "getOutline", "isStateful", "mutate", "onStateChange", "setColor", "setColorFilter", "setTintList", "setTintMode", "attachToGLContext", "detachFromGLContext", "getTimestamp", "getTransformMatrix", "isReleased", "releaseTexImage", "setDefaultBufferSize", "setOnFrameAvailableListener", "updateTexImage", "onFrameAvailable", "centerX", "centerY", "exactCenterX", "exactCenterY", "flattenToString", "inset", "intersect", "intersects", "offsetTo", "setEmpty", "setIntersect", "toShortString", "unflattenFromString", "union", "DEPTH16", "DEPTH_POINT_CLOUD", "FLEX_RGBA_8888", "FLEX_RGB_888", "NV16", "NV21", "RAW10", "RAW12", "RAW_PRIVATE", "RAW_SENSOR", "RGB_565", "YUV_420_888", "YUV_422_888", "YUV_444_888", "YUY2", "YV12", "getBitsPerPixel", "BLACK", "CYAN", "DKGRAY", "LTGRAY", "MAGENTA", "WHITE", "HSVToColor", "RGBToHSV", "argb", "colorSpace", "colorToHSV", "getColorSpace", "getComponent", "getComponentCount", "getComponents", "getModel", "isInColorSpace", "isSrgb", "isWideGamut", "luminance", "pack", "parseColor", "toArgb", "ACCESS_BUFFER", "ACCESS_RANDOM", "ACCESS_STREAMING", "ACCESS_UNKNOWN", "getLocales", "openFd", "openNonAssetFd", "openXmlResourceParser", "CERT_INPUT_RAW_X509", "CERT_INPUT_SHA256", "COMPONENT_ENABLED_STATE_DEFAULT", "COMPONENT_ENABLED_STATE_DISABLED", "COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED", "COMPONENT_ENABLED_STATE_DISABLED_USER", "COMPONENT_ENABLED_STATE_ENABLED", "EXTRA_VERIFICATION_ID", "EXTRA_VERIFICATION_RESULT", "FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS", "FEATURE_APP_WIDGETS", "FEATURE_AUDIO_LOW_LATENCY", "FEATURE_AUDIO_OUTPUT", "FEATURE_AUDIO_PRO", "FEATURE_AUTOFILL", "FEATURE_AUTOMOTIVE", "FEATURE_BACKUP", "FEATURE_BLUETOOTH", "FEATURE_BLUETOOTH_LE", "FEATURE_CAMERA", "FEATURE_CAMERA_ANY", "FEATURE_CAMERA_AR", "FEATURE_CAMERA_AUTOFOCUS", "FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING", "FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR", "FEATURE_CAMERA_CAPABILITY_RAW", "FEATURE_CAMERA_EXTERNAL", "FEATURE_CAMERA_FLASH", "FEATURE_CAMERA_FRONT", "FEATURE_CAMERA_LEVEL_FULL", "FEATURE_CANT_SAVE_STATE", "FEATURE_COMPANION_DEVICE_SETUP", "FEATURE_CONNECTION_SERVICE", "FEATURE_CONSUMER_IR", "FEATURE_DEVICE_ADMIN", "FEATURE_EMBEDDED", "FEATURE_ETHERNET", "FEATURE_FAKETOUCH", "FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT", "FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND", "FEATURE_FINGERPRINT", "FEATURE_FREEFORM_WINDOW_MANAGEMENT", "FEATURE_GAMEPAD", "FEATURE_HIFI_SENSORS", "FEATURE_HOME_SCREEN", "FEATURE_INPUT_METHODS", "FEATURE_LEANBACK", "FEATURE_LEANBACK_ONLY", "FEATURE_LIVE_TV", "FEATURE_LIVE_WALLPAPER", "FEATURE_LOCATION", "FEATURE_LOCATION_GPS", "FEATURE_LOCATION_NETWORK", "FEATURE_MANAGED_USERS", "FEATURE_MICROPHONE", "FEATURE_MIDI", "FEATURE_NFC", "FEATURE_NFC_HOST_CARD_EMULATION", "FEATURE_NFC_HOST_CARD_EMULATION_NFCF", "FEATURE_OPENGLES_EXTENSION_PACK", "FEATURE_PC", "FEATURE_PICTURE_IN_PICTURE", "FEATURE_PRINTING", "FEATURE_RAM_LOW", "FEATURE_RAM_NORMAL", "FEATURE_SCREEN_LANDSCAPE", "FEATURE_SCREEN_PORTRAIT", "FEATURE_SECURELY_REMOVES_USERS", "FEATURE_SENSOR_ACCELEROMETER", "FEATURE_SENSOR_AMBIENT_TEMPERATURE", "FEATURE_SENSOR_BAROMETER", "FEATURE_SENSOR_COMPASS", "FEATURE_SENSOR_GYROSCOPE", "FEATURE_SENSOR_HEART_RATE", "FEATURE_SENSOR_HEART_RATE_ECG", "FEATURE_SENSOR_LIGHT", "FEATURE_SENSOR_PROXIMITY", "FEATURE_SENSOR_RELATIVE_HUMIDITY", "FEATURE_SENSOR_STEP_COUNTER", "FEATURE_SENSOR_STEP_DETECTOR", "FEATURE_SIP", "FEATURE_SIP_VOIP", "FEATURE_STRONGBOX_KEYSTORE", "FEATURE_TELEPHONY", "FEATURE_TELEPHONY_CDMA", "FEATURE_TELEPHONY_EUICC", "FEATURE_TELEPHONY_GSM", "FEATURE_TELEPHONY_MBMS", "FEATURE_TELEVISION", "FEATURE_TOUCHSCREEN", "FEATURE_TOUCHSCREEN_MULTITOUCH", "FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT", "FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND", "FEATURE_USB_ACCESSORY", "FEATURE_USB_HOST", "FEATURE_VERIFIED_BOOT", "FEATURE_VR_HEADTRACKING", "FEATURE_VR_MODE", "FEATURE_VR_MODE_HIGH_PERFORMANCE", "FEATURE_VULKAN_HARDWARE_COMPUTE", "FEATURE_VULKAN_HARDWARE_LEVEL", "FEATURE_VULKAN_HARDWARE_VERSION", "FEATURE_WATCH", "FEATURE_WEBVIEW", "FEATURE_WIFI", "FEATURE_WIFI_AWARE", "FEATURE_WIFI_DIRECT", "FEATURE_WIFI_PASSPOINT", "FEATURE_WIFI_RTT", "GET_ACTIVITIES", "GET_CONFIGURATIONS", "GET_DISABLED_COMPONENTS", "GET_DISABLED_UNTIL_USED_COMPONENTS", "GET_GIDS", "GET_INSTRUMENTATION", "GET_INTENT_FILTERS", "GET_META_DATA", "GET_PERMISSIONS", "GET_PROVIDERS", "GET_RECEIVERS", "GET_RESOLVED_FILTER", "GET_SERVICES", "GET_SHARED_LIBRARY_FILES", "GET_SIGNATURES", "GET_SIGNING_CERTIFICATES", "GET_UNINSTALLED_PACKAGES", "GET_URI_PERMISSION_PATTERNS", "INSTALL_REASON_DEVICE_RESTORE", "INSTALL_REASON_DEVICE_SETUP", "INSTALL_REASON_POLICY", "INSTALL_REASON_UNKNOWN", "INSTALL_REASON_USER", "MATCH_ALL", "MATCH_DEFAULT_ONLY", "MATCH_DIRECT_BOOT_AWARE", "MATCH_DIRECT_BOOT_UNAWARE", "MATCH_DISABLED_COMPONENTS", "MATCH_DISABLED_UNTIL_USED_COMPONENTS", "MATCH_SYSTEM_ONLY", "MATCH_UNINSTALLED_PACKAGES", "MAXIMUM_VERIFICATION_TIMEOUT", "PERMISSION_DENIED", "SIGNATURE_FIRST_NOT_SIGNED", "SIGNATURE_MATCH", "SIGNATURE_NEITHER_SIGNED", "SIGNATURE_NO_MATCH", "SIGNATURE_SECOND_NOT_SIGNED", "SIGNATURE_UNKNOWN_PACKAGE", "VERIFICATION_ALLOW", "VERIFICATION_REJECT", "VERSION_CODE_HIGHEST", "addPackageToPreferred", "addPermission", "addPermissionAsync", "addPreferredActivity", "canRequestPackageInstalls", "canonicalToCurrentPackageNames", "checkPermission", "checkSignatures", "clearInstantAppCookie", "clearPackagePreferredActivities", "currentToCanonicalPackageNames", "extendVerificationTimeout", "getActivityBanner", "getActivityIcon", "getActivityInfo", "getActivityLogo", "getAllPermissionGroups", "getApplicationBanner", "getApplicationEnabledSetting", "getApplicationIcon", "getApplicationInfo", "getApplicationLabel", "getApplicationLogo", "getChangedPackages", "getComponentEnabledSetting", "getDefaultActivityIcon", "getDrawable", "getInstalledApplications", "getInstalledPackages", "getInstantAppCookie", "getInstantAppCookieMaxBytes", "getInstrumentationInfo", "getLaunchIntentForPackage", "getLeanbackLaunchIntentForPackage", "getNameForUid", "getPackageArchiveInfo", "getPackageGids", "getPackageInfo", "getPackageInstaller", "getPackageUid", "getPackagesForUid", "getPackagesHoldingPermissions", "getPermissionGroupInfo", "getPermissionInfo", "getPreferredActivities", "getPreferredPackages", "getProviderInfo", "getReceiverInfo", "getResourcesForActivity", "getResourcesForApplication", "getServiceInfo", "getSharedLibraries", "getSuspendedPackageAppExtras", "getSystemAvailableFeatures", "getSystemSharedLibraryNames", "getUserBadgedDrawableForDensity", "getUserBadgedIcon", "getUserBadgedLabel", "getXml", "hasSigningCertificate", "hasSystemFeature", "isInstantApp", "isPackageSuspended", "isPermissionRevokedByPolicy", "isSafeMode", "queryBroadcastReceivers", "queryContentProviders", "queryInstrumentation", "queryIntentActivities", "queryIntentActivityOptions", "queryIntentContentProviders", "queryIntentServices", "queryPermissionsByGroup", "removePackageFromPreferred", "removePermission", "resolveContentProvider", "resolveService", "setApplicationCategoryHint", "setApplicationEnabledSetting", "setComponentEnabledSetting", "setInstallerPackageName", "updateInstantAppCookie", "verifyPendingInstall", "banner", "icon", "labelRes", "metaData", "nonLocalizedLabel", "dumpBack", "dumpFront", "loadBanner", "loadIcon", "loadLabel", "loadLogo", "loadUnbadgedIcon", "loadXmlMetaData", "INSTALL_LOCATION_AUTO", "INSTALL_LOCATION_INTERNAL_ONLY", "INSTALL_LOCATION_PREFER_EXTERNAL", "REQUESTED_PERMISSION_GRANTED", "applicationInfo", "baseRevisionCode", "configPreferences", "featureGroups", "firstInstallTime", "gids", "installLocation", "instrumentation", "lastUpdateTime", "permissions", "providers", "receivers", "reqFeatures", "requestedPermissions", "requestedPermissionsFlags", "services", "sharedUserId", "sharedUserLabel", "signatures", "signingInfo", "splitNames", "splitRevisionCodes", "versionCode", "versionName", "getLongVersionCode", "setLongVersionCode", "COLOR_MODE_DEFAULT", "COLOR_MODE_HDR", "COLOR_MODE_WIDE_COLOR_GAMUT", "CONFIG_COLOR_MODE", "CONFIG_DENSITY", "CONFIG_FONT_SCALE", "CONFIG_KEYBOARD", "CONFIG_KEYBOARD_HIDDEN", "CONFIG_LAYOUT_DIRECTION", "CONFIG_LOCALE", "CONFIG_MCC", "CONFIG_MNC", "CONFIG_NAVIGATION", "CONFIG_ORIENTATION", "CONFIG_SCREEN_LAYOUT", "CONFIG_SCREEN_SIZE", "CONFIG_SMALLEST_SCREEN_SIZE", "CONFIG_TOUCHSCREEN", "CONFIG_UI_MODE", "DOCUMENT_LAUNCH_ALWAYS", "DOCUMENT_LAUNCH_INTO_EXISTING", "DOCUMENT_LAUNCH_NEVER", "DOCUMENT_LAUNCH_NONE", "FLAG_ALLOW_TASK_REPARENTING", "FLAG_ALWAYS_RETAIN_TASK_STATE", "FLAG_AUTO_REMOVE_FROM_RECENTS", "FLAG_CLEAR_TASK_ON_LAUNCH", "FLAG_ENABLE_VR_MODE", "FLAG_EXCLUDE_FROM_RECENTS", "FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS", "FLAG_FINISH_ON_TASK_LAUNCH", "FLAG_MULTIPROCESS", "FLAG_NO_HISTORY", "FLAG_RELINQUISH_TASK_IDENTITY", "FLAG_RESUME_WHILE_PAUSING", "FLAG_SINGLE_USER", "FLAG_STATE_NOT_NEEDED", "LAUNCH_MULTIPLE", "LAUNCH_SINGLE_INSTANCE", "LAUNCH_SINGLE_TASK", "LAUNCH_SINGLE_TOP", "PERSIST_ACROSS_REBOOTS", "PERSIST_NEVER", "PERSIST_ROOT_ONLY", "SCREEN_ORIENTATION_BEHIND", "SCREEN_ORIENTATION_FULL_SENSOR", "SCREEN_ORIENTATION_FULL_USER", "SCREEN_ORIENTATION_LANDSCAPE", "SCREEN_ORIENTATION_LOCKED", "SCREEN_ORIENTATION_NOSENSOR", "SCREEN_ORIENTATION_PORTRAIT", "SCREEN_ORIENTATION_REVERSE_LANDSCAPE", "SCREEN_ORIENTATION_REVERSE_PORTRAIT", "SCREEN_ORIENTATION_SENSOR", "SCREEN_ORIENTATION_SENSOR_LANDSCAPE", "SCREEN_ORIENTATION_SENSOR_PORTRAIT", "SCREEN_ORIENTATION_UNSPECIFIED", "SCREEN_ORIENTATION_USER", "SCREEN_ORIENTATION_USER_LANDSCAPE", "SCREEN_ORIENTATION_USER_PORTRAIT", "UIOPTION_SPLIT_ACTION_BAR_WHEN_NARROW", "colorMode", "configChanges", "documentLaunchMode", "launchMode", "maxRecents", "parentActivityName", "persistableMode", "targetActivity", "taskAffinity", "theme", "uiOptions", "windowLayout", "getThemeResource", "edit", "getAll", "getStringSet", "unregisterOnSharedPreferenceChangeListener", "commit", "putStringSet", "onBindingDied", "onNullBinding", "onServiceConnected", "onServiceDisconnected", "MATCH_ADJUSTMENT_MASK", "MATCH_ADJUSTMENT_NORMAL", "MATCH_CATEGORY_EMPTY", "MATCH_CATEGORY_HOST", "MATCH_CATEGORY_MASK", "MATCH_CATEGORY_PATH", "MATCH_CATEGORY_PORT", "MATCH_CATEGORY_SCHEME", "MATCH_CATEGORY_SCHEME_SPECIFIC_PART", "MATCH_CATEGORY_TYPE", "NO_MATCH_ACTION", "NO_MATCH_CATEGORY", "NO_MATCH_DATA", "NO_MATCH_TYPE", "SYSTEM_HIGH_PRIORITY", "SYSTEM_LOW_PRIORITY", "actionsIterator", "addAction", "addCategory", "addDataAuthority", "addDataPath", "addDataScheme", "addDataSchemeSpecificPart", "addDataType", "authoritiesIterator", "categoriesIterator", "countActions", "countCategories", "countDataAuthorities", "countDataPaths", "countDataSchemeSpecificParts", "countDataSchemes", "countDataTypes", "getDataAuthority", "getDataPath", "getDataScheme", "getDataSchemeSpecificPart", "getDataType", "hasAction", "hasCategory", "hasDataAuthority", "hasDataPath", "hasDataScheme", "hasDataSchemeSpecificPart", "hasDataType", "matchAction", "matchCategories", "matchData", "matchDataAuthority", "pathsIterator", "readFromXml", "schemeSpecificPartsIterator", "schemesIterator", "typesIterator", "writeToXml", "ACTION_AIRPLANE_MODE_CHANGED", "ACTION_ALL_APPS", "ACTION_ANSWER", "ACTION_APPLICATION_PREFERENCES", "ACTION_APPLICATION_RESTRICTIONS_CHANGED", "ACTION_APP_ERROR", "ACTION_ASSIST", "ACTION_ATTACH_DATA", "ACTION_BATTERY_CHANGED", "ACTION_BATTERY_LOW", "ACTION_BATTERY_OKAY", "ACTION_BOOT_COMPLETED", "ACTION_BUG_REPORT", "ACTION_CALL", "ACTION_CALL_BUTTON", "ACTION_CAMERA_BUTTON", "ACTION_CARRIER_SETUP", "ACTION_CHOOSER", "ACTION_CLOSE_SYSTEM_DIALOGS", "ACTION_CONFIGURATION_CHANGED", "ACTION_CREATE_DOCUMENT", "ACTION_CREATE_SHORTCUT", "ACTION_DATE_CHANGED", "ACTION_DEFAULT", "ACTION_DELETE", "ACTION_DEVICE_STORAGE_LOW", "ACTION_DEVICE_STORAGE_OK", "ACTION_DIAL", "ACTION_DOCK_EVENT", "ACTION_DREAMING_STARTED", "ACTION_DREAMING_STOPPED", "ACTION_EDIT", "ACTION_EXTERNAL_APPLICATIONS_AVAILABLE", "ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE", "ACTION_FACTORY_TEST", "ACTION_GET_CONTENT", "ACTION_GET_RESTRICTION_ENTRIES", "ACTION_GTALK_SERVICE_CONNECTED", "ACTION_GTALK_SERVICE_DISCONNECTED", "ACTION_INPUT_METHOD_CHANGED", "ACTION_INSERT", "ACTION_INSERT_OR_EDIT", "ACTION_INSTALL_FAILURE", "ACTION_INSTALL_PACKAGE", "ACTION_LOCALE_CHANGED", "ACTION_LOCKED_BOOT_COMPLETED", "ACTION_MAIN", "ACTION_MANAGED_PROFILE_ADDED", "ACTION_MANAGED_PROFILE_AVAILABLE", "ACTION_MANAGED_PROFILE_REMOVED", "ACTION_MANAGED_PROFILE_UNAVAILABLE", "ACTION_MANAGED_PROFILE_UNLOCKED", "ACTION_MANAGE_NETWORK_USAGE", "ACTION_MANAGE_PACKAGE_STORAGE", "ACTION_MEDIA_BAD_REMOVAL", "ACTION_MEDIA_BUTTON", "ACTION_MEDIA_CHECKING", "ACTION_MEDIA_EJECT", "ACTION_MEDIA_MOUNTED", "ACTION_MEDIA_NOFS", "ACTION_MEDIA_REMOVED", "ACTION_MEDIA_SCANNER_FINISHED", "ACTION_MEDIA_SCANNER_SCAN_FILE", "ACTION_MEDIA_SCANNER_STARTED", "ACTION_MEDIA_SHARED", "ACTION_MEDIA_UNMOUNTABLE", "ACTION_MEDIA_UNMOUNTED", "ACTION_MY_PACKAGE_REPLACED", "ACTION_MY_PACKAGE_SUSPENDED", "ACTION_MY_PACKAGE_UNSUSPENDED", "ACTION_NEW_OUTGOING_CALL", "ACTION_OPEN_DOCUMENT", "ACTION_OPEN_DOCUMENT_TREE", "ACTION_PACKAGES_SUSPENDED", "ACTION_PACKAGES_UNSUSPENDED", "ACTION_PACKAGE_ADDED", "ACTION_PACKAGE_CHANGED", "ACTION_PACKAGE_DATA_CLEARED", "ACTION_PACKAGE_FIRST_LAUNCH", "ACTION_PACKAGE_FULLY_REMOVED", "ACTION_PACKAGE_INSTALL", "ACTION_PACKAGE_NEEDS_VERIFICATION", "ACTION_PACKAGE_REMOVED", "ACTION_PACKAGE_REPLACED", "ACTION_PACKAGE_RESTARTED", "ACTION_PACKAGE_VERIFIED", "ACTION_PASTE", "ACTION_PICK", "ACTION_PICK_ACTIVITY", "ACTION_POWER_CONNECTED", "ACTION_POWER_DISCONNECTED", "ACTION_POWER_USAGE_SUMMARY", "ACTION_PROCESS_TEXT", "ACTION_PROVIDER_CHANGED", "ACTION_QUICK_CLOCK", "ACTION_QUICK_VIEW", "ACTION_REBOOT", "ACTION_RUN", "ACTION_SCREEN_OFF", "ACTION_SCREEN_ON", "ACTION_SEARCH", "ACTION_SEARCH_LONG_PRESS", "ACTION_SEND", "ACTION_SENDTO", "ACTION_SEND_MULTIPLE", "ACTION_SET_WALLPAPER", "ACTION_SHOW_APP_INFO", "ACTION_SHUTDOWN", "ACTION_SYNC", "ACTION_SYSTEM_TUTORIAL", "ACTION_TIMEZONE_CHANGED", "ACTION_TIME_CHANGED", "ACTION_TIME_TICK", "ACTION_UID_REMOVED", "ACTION_UMS_CONNECTED", "ACTION_UMS_DISCONNECTED", "ACTION_UNINSTALL_PACKAGE", "ACTION_USER_BACKGROUND", "ACTION_USER_FOREGROUND", "ACTION_USER_INITIALIZE", "ACTION_USER_PRESENT", "ACTION_USER_UNLOCKED", "ACTION_VIEW", "ACTION_VOICE_COMMAND", "ACTION_WALLPAPER_CHANGED", "ACTION_WEB_SEARCH", "CATEGORY_ALTERNATIVE", "CATEGORY_APP_BROWSER", "CATEGORY_APP_CALCULATOR", "CATEGORY_APP_CALENDAR", "CATEGORY_APP_CONTACTS", "CATEGORY_APP_EMAIL", "CATEGORY_APP_GALLERY", "CATEGORY_APP_MAPS", "CATEGORY_APP_MARKET", "CATEGORY_APP_MESSAGING", "CATEGORY_APP_MUSIC", "CATEGORY_BROWSABLE", "CATEGORY_CAR_DOCK", "CATEGORY_CAR_MODE", "CATEGORY_DEFAULT", "CATEGORY_DESK_DOCK", "CATEGORY_DEVELOPMENT_PREFERENCE", "CATEGORY_EMBED", "CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST", "CATEGORY_HE_DESK_DOCK", "CATEGORY_HOME", "CATEGORY_INFO", "CATEGORY_LAUNCHER", "CATEGORY_LEANBACK_LAUNCHER", "CATEGORY_LE_DESK_DOCK", "CATEGORY_MONKEY", "CATEGORY_OPENABLE", "CATEGORY_PREFERENCE", "CATEGORY_SAMPLE_CODE", "CATEGORY_SELECTED_ALTERNATIVE", "CATEGORY_TAB", "CATEGORY_TEST", "CATEGORY_TYPED_OPENABLE", "CATEGORY_UNIT_TEST", "CATEGORY_VOICE", "CATEGORY_VR_HOME", "EXTRA_ALARM_COUNT", "EXTRA_ALLOW_MULTIPLE", "EXTRA_ALLOW_REPLACE", "EXTRA_ALTERNATE_INTENTS", "EXTRA_ASSIST_CONTEXT", "EXTRA_ASSIST_INPUT_DEVICE_ID", "EXTRA_ASSIST_INPUT_HINT_KEYBOARD", "EXTRA_ASSIST_PACKAGE", "EXTRA_ASSIST_UID", "EXTRA_BCC", "EXTRA_BUG_REPORT", "EXTRA_CC", "EXTRA_CHANGED_COMPONENT_NAME", "EXTRA_CHANGED_COMPONENT_NAME_LIST", "EXTRA_CHANGED_PACKAGE_LIST", "EXTRA_CHANGED_UID_LIST", "EXTRA_CHOOSER_REFINEMENT_INTENT_SENDER", "EXTRA_CHOOSER_TARGETS", "EXTRA_CHOSEN_COMPONENT", "EXTRA_CHOSEN_COMPONENT_INTENT_SENDER", "EXTRA_COMPONENT_NAME", "EXTRA_CONTENT_ANNOTATIONS", "EXTRA_DATA_REMOVED", "EXTRA_DOCK_STATE", "EXTRA_DOCK_STATE_CAR", "EXTRA_DOCK_STATE_DESK", "EXTRA_DOCK_STATE_HE_DESK", "EXTRA_DOCK_STATE_LE_DESK", "EXTRA_DOCK_STATE_UNDOCKED", "EXTRA_DONT_KILL_APP", "EXTRA_EMAIL", "EXTRA_EXCLUDE_COMPONENTS", "EXTRA_FROM_STORAGE", "EXTRA_HTML_TEXT", "EXTRA_INDEX", "EXTRA_INITIAL_INTENTS", "EXTRA_INSTALLER_PACKAGE_NAME", "EXTRA_INTENT", "EXTRA_KEY_EVENT", "EXTRA_LOCAL_ONLY", "EXTRA_MIME_TYPES", "EXTRA_NOT_UNKNOWN_SOURCE", "EXTRA_ORIGINATING_URI", "EXTRA_PACKAGE_NAME", "EXTRA_PHONE_NUMBER", "EXTRA_PROCESS_TEXT", "EXTRA_PROCESS_TEXT_READONLY", "EXTRA_QUICK_VIEW_FEATURES", "EXTRA_QUIET_MODE", "EXTRA_REFERRER", "EXTRA_REFERRER_NAME", "EXTRA_REMOTE_INTENT_TOKEN", "EXTRA_REPLACEMENT_EXTRAS", "EXTRA_REPLACING", "EXTRA_RESTRICTIONS_BUNDLE", "EXTRA_RESTRICTIONS_INTENT", "EXTRA_RESTRICTIONS_LIST", "EXTRA_RESULT_RECEIVER", "EXTRA_RETURN_RESULT", "EXTRA_SHORTCUT_ICON", "EXTRA_SHORTCUT_ICON_RESOURCE", "EXTRA_SHORTCUT_INTENT", "EXTRA_SHORTCUT_NAME", "EXTRA_SHUTDOWN_USERSPACE_ONLY", "EXTRA_SPLIT_NAME", "EXTRA_STREAM", "EXTRA_SUBJECT", "EXTRA_SUSPENDED_PACKAGE_EXTRAS", "EXTRA_TEMPLATE", "EXTRA_TEXT", "EXTRA_TITLE", "EXTRA_UID", "EXTRA_USER", "FILL_IN_ACTION", "FILL_IN_CATEGORIES", "FILL_IN_CLIP_DATA", "FILL_IN_COMPONENT", "FILL_IN_DATA", "FILL_IN_PACKAGE", "FILL_IN_SELECTOR", "FILL_IN_SOURCE_BOUNDS", "FLAG_ACTIVITY_BROUGHT_TO_FRONT", "FLAG_ACTIVITY_CLEAR_TASK", "FLAG_ACTIVITY_CLEAR_TOP", "FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET", "FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS", "FLAG_ACTIVITY_FORWARD_RESULT", "FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY", "FLAG_ACTIVITY_LAUNCH_ADJACENT", "FLAG_ACTIVITY_MATCH_EXTERNAL", "FLAG_ACTIVITY_MULTIPLE_TASK", "FLAG_ACTIVITY_NEW_DOCUMENT", "FLAG_ACTIVITY_NEW_TASK", "FLAG_ACTIVITY_NO_ANIMATION", "FLAG_ACTIVITY_NO_HISTORY", "FLAG_ACTIVITY_NO_USER_ACTION", "FLAG_ACTIVITY_PREVIOUS_IS_TOP", "FLAG_ACTIVITY_REORDER_TO_FRONT", "FLAG_ACTIVITY_RESET_TASK_IF_NEEDED", "FLAG_ACTIVITY_RETAIN_IN_RECENTS", "FLAG_ACTIVITY_SINGLE_TOP", "FLAG_ACTIVITY_TASK_ON_HOME", "FLAG_DEBUG_LOG_RESOLUTION", "FLAG_EXCLUDE_STOPPED_PACKAGES", "FLAG_FROM_BACKGROUND", "FLAG_GRANT_PERSISTABLE_URI_PERMISSION", "FLAG_GRANT_PREFIX_URI_PERMISSION", "FLAG_GRANT_READ_URI_PERMISSION", "FLAG_GRANT_WRITE_URI_PERMISSION", "FLAG_INCLUDE_STOPPED_PACKAGES", "FLAG_RECEIVER_FOREGROUND", "FLAG_RECEIVER_NO_ABORT", "FLAG_RECEIVER_REGISTERED_ONLY", "FLAG_RECEIVER_REPLACE_PENDING", "FLAG_RECEIVER_VISIBLE_TO_INSTANT_APPS", "METADATA_DOCK_HOME", "URI_ALLOW_UNSAFE", "URI_ANDROID_APP_SCHEME", "URI_INTENT_SCHEME", "cloneFilter", "createChooser", "fillIn", "filterEquals", "filterHashCode", "getBooleanArrayExtra", "getBooleanExtra", "getBundleExtra", "getByteArrayExtra", "getByteExtra", "getCategories", "getCharArrayExtra", "getCharExtra", "getCharSequenceArrayExtra", "getCharSequenceArrayListExtra", "getCharSequenceExtra", "getClipData", "getDataString", "getDoubleArrayExtra", "getDoubleExtra", "getFloatArrayExtra", "getFloatExtra", "getIntArrayExtra", "getIntExtra", "getIntegerArrayListExtra", "getIntent", "getIntentOld", "getLongArrayExtra", "getLongExtra", "getParcelableArrayExtra", "getParcelableArrayListExtra", "getParcelableExtra", "getSelector", "getSerializableExtra", "getShortArrayExtra", "getShortExtra", "getSourceBounds", "getStringArrayExtra", "getStringArrayListExtra", "getStringExtra", "hasExtra", "makeMainActivity", "makeMainSelectorActivity", "makeRestartActivityTask", "normalizeMimeType", "parseIntent", "parseUri", "putCharSequenceArrayListExtra", "putExtra", "putIntegerArrayListExtra", "putParcelableArrayListExtra", "putStringArrayListExtra", "removeCategory", "removeExtra", "removeFlags", "replaceExtras", "resolveActivityInfo", "resolveType", "resolveTypeIfNeeded", "setClass", "setClassName", "setClipData", "setComponent", "setDataAndNormalize", "setDataAndType", "setDataAndTypeAndNormalize", "setExtrasClassLoader", "setSelector", "setSourceBounds", "setTypeAndNormalize", "toUri", "BUTTON1", "BUTTON2", "BUTTON3", "BUTTON_NEGATIVE", "BUTTON_NEUTRAL", "BUTTON_POSITIVE", "dismiss", "onClick", "onCancel", "ACCOUNT_SERVICE", "ACTIVITY_SERVICE", "ALARM_SERVICE", "APPWIDGET_SERVICE", "APP_OPS_SERVICE", "AUDIO_SERVICE", "BATTERY_SERVICE", "BIND_ABOVE_CLIENT", "BIND_ADJUST_WITH_ACTIVITY", "BIND_ALLOW_OOM_MANAGEMENT", "BIND_AUTO_CREATE", "BIND_DEBUG_UNBIND", "BIND_EXTERNAL_SERVICE", "BIND_IMPORTANT", "BIND_NOT_FOREGROUND", "BIND_WAIVE_PRIORITY", "BLUETOOTH_SERVICE", "CAMERA_SERVICE", "CAPTIONING_SERVICE", "CARRIER_CONFIG_SERVICE", "CLIPBOARD_SERVICE", "COMPANION_DEVICE_SERVICE", "CONNECTIVITY_SERVICE", "CONSUMER_IR_SERVICE", "CONTEXT_IGNORE_SECURITY", "CONTEXT_INCLUDE_CODE", "CONTEXT_RESTRICTED", "CROSS_PROFILE_APPS_SERVICE", "DEVICE_POLICY_SERVICE", "DISPLAY_SERVICE", "DOWNLOAD_SERVICE", "DROPBOX_SERVICE", "EUICC_SERVICE", "FINGERPRINT_SERVICE", "HARDWARE_PROPERTIES_SERVICE", "INPUT_METHOD_SERVICE", "IPSEC_SERVICE", "JOB_SCHEDULER_SERVICE", "KEYGUARD_SERVICE", "LAUNCHER_APPS_SERVICE", "LAYOUT_INFLATER_SERVICE", "LOCATION_SERVICE", "MEDIA_PROJECTION_SERVICE", "MEDIA_ROUTER_SERVICE", "MEDIA_SESSION_SERVICE", "MIDI_SERVICE", "MODE_ENABLE_WRITE_AHEAD_LOGGING", "MODE_MULTI_PROCESS", "MODE_NO_LOCALIZED_COLLATORS", "MODE_PRIVATE", "NETWORK_STATS_SERVICE", "NOTIFICATION_SERVICE", "NSD_SERVICE", "POWER_SERVICE", "RESTRICTIONS_SERVICE", "SEARCH_SERVICE", "SENSOR_SERVICE", "SHORTCUT_SERVICE", "STORAGE_SERVICE", "STORAGE_STATS_SERVICE", "SYSTEM_HEALTH_SERVICE", "TELECOM_SERVICE", "TELEPHONY_SERVICE", "TELEPHONY_SUBSCRIPTION_SERVICE", "TEXT_CLASSIFICATION_SERVICE", "TEXT_SERVICES_MANAGER_SERVICE", "TV_INPUT_SERVICE", "UI_MODE_SERVICE", "USAGE_STATS_SERVICE", "USB_SERVICE", "USER_SERVICE", "VIBRATOR_SERVICE", "WALLPAPER_SERVICE", "WIFI_AWARE_SERVICE", "WIFI_P2P_SERVICE", "WIFI_RTT_RANGING_SERVICE", "WIFI_SERVICE", "WINDOW_SERVICE", "checkCallingOrSelfPermission", "checkCallingOrSelfUriPermission", "checkCallingPermission", "checkCallingUriPermission", "checkSelfPermission", "checkUriPermission", "clearWallpaper", "createConfigurationContext", "createContextForSplit", "createDeviceProtectedStorageContext", "createDisplayContext", "createPackageContext", "databaseList", "deleteDatabase", "deleteFile", "deleteSharedPreferences", "enforceCallingOrSelfPermission", "enforceCallingOrSelfUriPermission", "enforceCallingPermission", "enforceCallingUriPermission", "enforcePermission", "enforceUriPermission", "fileList", "getApplicationContext", "getAssets", "getCacheDir", "getCodeCacheDir", "getColorStateList", "getContentResolver", "getDataDir", "getDatabasePath", "getDir", "getExternalCacheDir", "getExternalCacheDirs", "getExternalFilesDir", "getExternalFilesDirs", "getExternalMediaDirs", "getFileStreamPath", "getFilesDir", "getMainExecutor", "getNoBackupFilesDir", "getObbDir", "getObbDirs", "getPackageCodePath", "getPackageResourcePath", "getSharedPreferences", "getSystemService", "getSystemServiceName", "getWallpaper", "getWallpaperDesiredMinimumHeight", "getWallpaperDesiredMinimumWidth", "grantUriPermission", "isDeviceProtectedStorage", "isRestricted", "moveDatabaseFrom", "moveSharedPreferencesFrom", "obtainStyledAttributes", "openFileInput", "openFileOutput", "openOrCreateDatabase", "peekWallpaper", "removeStickyBroadcast", "removeStickyBroadcastAsUser", "revokeUriPermission", "sendBroadcast", "sendBroadcastAsUser", "sendOrderedBroadcast", "sendOrderedBroadcastAsUser", "sendStickyBroadcast", "sendStickyBroadcastAsUser", "sendStickyOrderedBroadcast", "sendStickyOrderedBroadcastAsUser", "setTheme", "setWallpaper", "startActivities", "startActivity", "startForegroundService", "startInstrumentation", "startIntentSender", "startService", "stopService", "unbindService", "unregisterComponentCallbacks", "unregisterReceiver", "onStop", "show", "closeOptionsMenu", "getActionBar", "getOwnerActivity", "getSearchEvent", "getWindow", "hide", "invalidateOptionsMenu", "isShowing", "onActionModeFinished", "onActionModeStarted", "onBackPressed", "onContentChanged", "onContextItemSelected", "onContextMenuClosed", "onCreate", "onCreateOptionsMenu", "onCreatePanelMenu", "onCreatePanelView", "onMenuItemSelected", "onMenuOpened", "onOptionsItemSelected", "onOptionsMenuClosed", "onPanelClosed", "onPrepareOptionsMenu", "onPreparePanel", "onSearchRequested", "onWindowAttributesChanged", "onWindowStartingActionMode", "openContextMenu", "openOptionsMenu", "requestWindowFeature", "setCancelMessage", "setCancelable", "setCanceledOnTouchOutside", "setDismissMessage", "setOnCancelListener", "setOnDismissListener", "setOnShowListener", "setOwnerActivity", "unregisterForContextMenu", "setAdapter", "setCursor", "setCustomTitle", "setIconAttribute", "setInverseBackgroundForced", "setItems", "setMessage", "setMultiChoiceItems", "setNegativeButton", "setNeutralButton", "setOnItemSelectedListener", "setPositiveButton", "setSingleChoiceItems", "setView", "DEFAULT_KEYS_DIALER", "DEFAULT_KEYS_DISABLE", "DEFAULT_KEYS_SEARCH_GLOBAL", "DEFAULT_KEYS_SEARCH_LOCAL", "DEFAULT_KEYS_SHORTCUT", "RESULT_CANCELED", "RESULT_FIRST_USER", "RESULT_OK", "attachBaseContext", "closeContextMenu", "createPendingResult", "dismissDialog", "dismissKeyboardShortcutsHelper", "enterPictureInPictureMode", "finish", "finishActivity", "finishActivityFromChild", "finishAffinity", "finishAfterTransition", "finishAndRemoveTask", "finishFromChild", "getApplication", "getCallingActivity", "getCallingPackage", "getComponentName", "getContentTransitionManager", "getFragmentManager", "getLastNonConfigurationInstance", "getLoaderManager", "getLocalClassName", "getMaxNumPictureInPictureActions", "getMenuInflater", "getParentActivityIntent", "getPreferences", "getReferrer", "getRequestedOrientation", "getTaskId", "getTitleColor", "getVoiceInteractor", "isActivityTransitionRunning", "isChangingConfigurations", "isChild", "isDestroyed", "isFinishing", "isImmersive", "isInMultiWindowMode", "isInPictureInPictureMode", "isLocalVoiceInteractionSupported", "isTaskRoot", "isVoiceInteraction", "isVoiceInteractionRoot", "managedQuery", "moveTaskToBack", "navigateUpTo", "navigateUpToFromChild", "onActivityReenter", "onActivityResult", "onApplyThemeResource", "onAttachFragment", "onChildTitleChanged", "onCreateDescription", "onCreateDialog", "onCreateNavigateUpTaskStack", "onCreateThumbnail", "onCreateView", "onDestroy", "onEnterAnimationComplete", "onLocalVoiceInteractionStarted", "onLocalVoiceInteractionStopped", "onLowMemory", "onMultiWindowModeChanged", "onNavigateUp", "onNavigateUpFromChild", "onNewIntent", "onPictureInPictureModeChanged", "onPostCreate", "onPostResume", "onPrepareDialog", "onPrepareNavigateUpTaskStack", "onProvideAssistContent", "onProvideAssistData", "onProvideKeyboardShortcuts", "onProvideReferrer", "onRequestPermissionsResult", "onRestart", "onResume", "onRetainNonConfigurationInstance", "onStateNotSaved", "onTitleChanged", "onTrimMemory", "onUserInteraction", "onUserLeaveHint", "onVisibleBehindCanceled", "overridePendingTransition", "postponeEnterTransition", "recreate", "releaseInstance", "removeDialog", "reportFullyDrawn", "requestDragAndDropPermissions", "requestPermissions", "requestShowKeyboardShortcuts", "requestVisibleBehind", "runOnUiThread", "setActionBar", "setContentTransitionManager", "setDefaultKeyMode", "setEnterSharedElementCallback", "setExitSharedElementCallback", "setFinishOnTouchOutside", "setImmersive", "setIntent", "setPictureInPictureParams", "setProgressBarIndeterminate", "setProgressBarIndeterminateVisibility", "setProgressBarVisibility", "setRequestedOrientation", "setResult", "setShowWhenLocked", "setTaskDescription", "setTurnScreenOn", "setVisible", "setVrModeEnabled", "shouldShowRequestPermissionRationale", "shouldUpRecreateTask", "showAssist", "showDialog", "showLockTaskEscapeMessage", "startActivityForResult", "startActivityFromChild", "startActivityFromFragment", "startActivityIfNeeded", "startIntentSenderForResult", "startIntentSenderFromChild", "startLocalVoiceInteraction", "startLockTask", "startManagingCursor", "startNextMatchingActivity", "startPostponedEnterTransition", "startSearch", "stopLocalVoiceInteraction", "stopLockTask", "stopManagingCursor", "triggerSearch", "absListViewStyle", "accessibilityEventTypes", "accessibilityFeedbackType", "accessibilityFlags", "accessibilityHeading", "accessibilityLiveRegion", "accessibilityPaneTitle", "accessibilityTraversalAfter", "accessibilityTraversalBefore", "accountPreferences", "accountType", "actionBarDivider", "actionBarItemBackground", "actionBarPopupTheme", "actionBarSize", "actionBarSplitStyle", "actionBarStyle", "actionBarTabBarStyle", "actionBarTabStyle", "actionBarTabTextStyle", "actionBarTheme", "actionBarWidgetTheme", "actionButtonStyle", "actionDropDownStyle", "actionLayout", "actionMenuTextAppearance", "actionMenuTextColor", "actionModeBackground", "actionModeCloseButtonStyle", "actionModeCloseDrawable", "actionModeCopyDrawable", "actionModeCutDrawable", "actionModeFindDrawable", "actionModePasteDrawable", "actionModeSelectAllDrawable", "actionModeShareDrawable", "actionModeSplitBackground", "actionModeStyle", "actionModeWebSearchDrawable", "actionOverflowButtonStyle", "actionOverflowMenuStyle", "actionProviderClass", "actionViewClass", "activatedBackgroundIndicator", "activityCloseEnterAnimation", "activityCloseExitAnimation", "activityOpenEnterAnimation", "activityOpenExitAnimation", "addPrintersActivity", "addStatesFromChildren", "adjustViewBounds", "advancedPrintOptionsActivity", "alertDialogIcon", "alertDialogStyle", "alertDialogTheme", "alignmentMode", "allContactsName", "allowBackup", "allowClearUserData", "allowEmbedded", "allowParallelSyncs", "allowSingleTap", "allowTaskReparenting", "allowUndo", "alphabeticModifiers", "alphabeticShortcut", "alwaysDrawnWithCache", "alwaysRetainTaskState", "amPmBackgroundColor", "amPmTextColor", "ambientShadowAlpha", "animateFirstView", "animateLayoutChanges", "animateOnClick", "animation", "animationCache", "animationDuration", "animationOrder", "animationResolution", "antialias", "anyDensity", "apduServiceBanner", "apiKey", "appCategory", "appComponentFactory", "author", "authorities", "autoAdvanceViewId", "autoCompleteTextViewStyle", "autoLink", "autoMirrored", "autoRemoveFromRecents", "autoSizeMaxTextSize", "autoSizeMinTextSize", "autoSizePresetSizes", "autoSizeStepGranularity", "autoSizeTextType", "autoStart", "autoText", "autoUrlDetect", "autoVerify", "autofillHints", "autofilledHighlight", "backgroundDimAmount", "backgroundDimEnabled", "backgroundSplit", "backgroundStacked", "backgroundTint", "backgroundTintMode", "backupAgent", "backupInForeground", "baseline", "baselineAlignBottom", "baselineAligned", "baselineAlignedChildIndex", "borderlessButtonStyle", "bottomBright", "bottomDark", "bottomLeftRadius", "bottomMedium", "bottomOffset", "bottomRightRadius", "breadCrumbShortTitle", "breadCrumbTitle", "breakStrategy", "bufferType", "buttonBarButtonStyle", "buttonBarNegativeButtonStyle", "buttonBarNeutralButtonStyle", "buttonBarPositiveButtonStyle", "buttonBarStyle", "buttonCornerRadius", "buttonGravity", "buttonStyle", "buttonStyleInset", "buttonStyleSmall", "buttonStyleToggle", "buttonTint", "buttonTintMode", "cacheColorHint", "calendarTextColor", "calendarViewShown", "calendarViewStyle", "canControlMagnification", "canPerformGestures", "canRecord", "canRequestEnhancedWebAccessibility", "canRequestFilterKeyEvents", "canRequestFingerprintGestures", "canRequestTouchExplorationMode", "canRetrieveWindowContent", "candidatesTextStyleSpans", "cantSaveState", "capitalize", "category", "centerBright", "centerColor", "centerDark", "centerMedium", "certDigest", "checkBoxPreferenceStyle", "checkMark", "checkMarkTint", "checkMarkTintMode", "checkableBehavior", "checkboxStyle", "checkedButton", "checkedTextViewStyle", "childDivider", "childIndicator", "childIndicatorEnd", "childIndicatorLeft", "childIndicatorRight", "childIndicatorStart", "choiceMode", "classLoader", "clearTaskOnLaunch", "clickable", "clipChildren", "clipOrientation", "clipToPadding", "closeIcon", "codes", "collapseColumns", "collapseContentDescription", "collapseIcon", "colorAccent", "colorActivatedHighlight", "colorBackground", "colorBackgroundCacheHint", "colorBackgroundFloating", "colorButtonNormal", "colorControlActivated", "colorControlHighlight", "colorControlNormal", "colorEdgeEffect", "colorError", "colorFocusedHighlight", "colorForeground", "colorForegroundInverse", "colorLongPressedHighlight", "colorMultiSelectHighlight", "colorPressedHighlight", "colorPrimary", "colorPrimaryDark", "colorSecondary", "columnCount", "columnDelay", "columnOrderPreserved", "columnWidth", "commitIcon", "compatibleWidthLimitDp", "completionHint", "completionHintView", "completionThreshold", "constantSize", "contentAgeHint", "contentAuthority", "contentDescription", "contentInsetEnd", "contentInsetEndWithActions", "contentInsetLeft", "contentInsetRight", "contentInsetStart", "contentInsetStartWithNavigation", "contextClickable", "contextDescription", "contextPopupMenuStyle", "contextUri", "controlX1", "controlX2", "controlY1", "controlY2", "countDown", "country", "cropToPadding", "cursorVisible", "customNavigationLayout", "customTokens", "dashGap", "dashWidth", "datePickerDialogTheme", "datePickerMode", "datePickerStyle", "dateTextAppearance", "dayOfWeekBackground", "dayOfWeekTextAppearance", "debuggable", "defaultFocusHighlightEnabled", "defaultHeight", "defaultToDeviceProtectedStorage", "defaultValue", "defaultWidth", "delay", "dependency", "descendantFocusability", "detachWallpaper", "detailColumn", "detailSocialSummary", "detailsElementBackground", "dialogCornerRadius", "dialogIcon", "dialogLayout", "dialogMessage", "dialogPreferenceStyle", "dialogPreferredPadding", "dialogTheme", "dialogTitle", "digits", "directBootAware", "directionDescriptions", "directionPriority", "disableDependentsState", "disabledAlpha", "displayOptions", "dither", "divider", "dividerHeight", "dividerHorizontal", "dividerPadding", "dividerVertical", "drawSelectorOnTop", "drawable", "drawableBottom", "drawableEnd", "drawableLeft", "drawablePadding", "drawableRight", "drawableStart", "drawableTint", "drawableTintMode", "drawableTop", "drawingCacheQuality", "dropDownAnchor", "dropDownHeight", "dropDownHintAppearance", "dropDownHorizontalOffset", "dropDownItemStyle", "dropDownListViewStyle", "dropDownSelector", "dropDownSpinnerStyle", "dropDownVerticalOffset", "dropDownWidth", "duplicateParentState", "editTextBackground", "editTextColor", "editTextPreferenceStyle", "editTextStyle", "editable", "editorExtras", "elegantTextHeight", "elevation", "ellipsize", "enableVrMode", "endColor", "endX", "endY", "endYear", "enterFadeDuration", "entries", "entryValues", "eventsInterceptionEnabled", "excludeClass", "excludeFromRecents", "excludeId", "excludeName", "exitFadeDuration", "expandableListPreferredChildIndicatorLeft", "expandableListPreferredChildIndicatorRight", "expandableListPreferredChildPaddingLeft", "expandableListPreferredItemIndicatorLeft", "expandableListPreferredItemIndicatorRight", "expandableListPreferredItemPaddingLeft", "expandableListViewStyle", "expandableListViewWhiteStyle", "exported", "externalService", "extraTension", "extractNativeLibs", "factor", "fadeDuration", "fadeEnabled", "fadeOffset", "fadeScrollbars", "fadingEdge", "fadingEdgeLength", "fadingMode", "fallbackLineSpacing", "fastScrollAlwaysVisible", "fastScrollEnabled", "fastScrollOverlayPosition", "fastScrollPreviewBackgroundLeft", "fastScrollPreviewBackgroundRight", "fastScrollStyle", "fastScrollTextColor", "fastScrollThumbDrawable", "fastScrollTrackDrawable", "fillAfter", "fillAlpha", "fillBefore", "fillColor", "fillEnabled", "fillViewport", "filterTouchesWhenObscured", "fingerprintAuthDrawable", "finishOnCloseSystemDialogs", "finishOnTaskLaunch", "firstBaselineToTopHeight", "firstDayOfWeek", "fitsSystemWindows", "flipInterval", "focusable", "focusableInTouchMode", "focusedByDefault", "fontFamily", "fontFeatureSettings", "fontProviderAuthority", "fontProviderCerts", "fontProviderPackage", "fontProviderQuery", "fontVariationSettings", "fontWeight", "footerDividersEnabled", "foreground", "foregroundGravity", "foregroundTint", "foregroundTintMode", "format12Hour", "format24Hour", "fraction", "fragment", "fragmentAllowEnterTransitionOverlap", "fragmentAllowReturnTransitionOverlap", "fragmentCloseEnterAnimation", "fragmentCloseExitAnimation", "fragmentEnterTransition", "fragmentExitTransition", "fragmentFadeEnterAnimation", "fragmentFadeExitAnimation", "fragmentOpenEnterAnimation", "fragmentOpenExitAnimation", "fragmentReenterTransition", "fragmentReturnTransition", "fragmentSharedElementEnterTransition", "fragmentSharedElementReturnTransition", "freezesText", "fromAlpha", "fromDegrees", "fromId", "fromScene", "fromXDelta", "fromXScale", "fromYDelta", "fromYScale", "fullBackupContent", "fullBackupOnly", "fullBright", "fullDark", "functionalTest", "galleryItemBackground", "galleryStyle", "gestureColor", "gestureStrokeAngleThreshold", "gestureStrokeLengthThreshold", "gestureStrokeSquarenessThreshold", "gestureStrokeType", "gestureStrokeWidth", "glEsVersion", "goIcon", "gradientRadius", "grantUriPermissions", "gridViewStyle", "groupIndicator", "hand_hour", "hand_minute", "handle", "handleProfiling", "hapticFeedbackEnabled", "hardwareAccelerated", "hasCode", "headerAmPmTextAppearance", "headerBackground", "headerDayOfMonthTextAppearance", "headerDividersEnabled", "headerMonthTextAppearance", "headerTimeTextAppearance", "headerYearTextAppearance", "hideOnContentScroll", "hint", "homeAsUpIndicator", "homeLayout", "horizontalDivider", "horizontalGap", "horizontalScrollViewStyle", "horizontalSpacing", "hotSpotX", "hotSpotY", "hyphenationFrequency", "iconPreview", "iconSpaceReserved", "iconTint", "iconTintMode", "iconifiedByDefault", "ignoreGravity", "imageButtonStyle", "imageWellStyle", "imeActionId", "imeActionLabel", "imeExtractEnterAnimation", "imeExtractExitAnimation", "imeFullscreenBackground", "imeOptions", "imeSubtypeExtraValue", "imeSubtypeLocale", "imeSubtypeMode", "immersive", "importantForAccessibility", "importantForAutofill", "inAnimation", "includeFontPadding", "includeInGlobalSearch", "indeterminate", "indeterminateBehavior", "indeterminateDrawable", "indeterminateDuration", "indeterminateOnly", "indeterminateProgressStyle", "indeterminateTint", "indeterminateTintMode", "indicatorEnd", "indicatorLeft", "indicatorRight", "indicatorStart", "inflatedId", "initOrder", "initialKeyguardLayout", "initialLayout", "innerRadius", "innerRadiusRatio", "inputMethod", "inputType", "insetBottom", "insetLeft", "insetRight", "insetTop", "interpolator", "isAlwaysSyncable", "isAsciiCapable", "isAuxiliary", "isDefault", "isFeatureSplit", "isGame", "isIndicator", "isModifier", "isRepeatable", "isSticky", "isolatedProcess", "isolatedSplits", "itemBackground", "itemIconDisabledAlpha", "itemPadding", "itemTextAppearance", "justificationMode", "keepScreenOn", "keyBackground", "keyEdgeFlags", "keyHeight", "keyIcon", "keyLabel", "keyOutputText", "keyPreviewHeight", "keyPreviewLayout", "keyPreviewOffset", "keyTextColor", "keyTextSize", "keyWidth", "keyboardLayout", "keyboardMode", "keyboardNavigationCluster", "keycode", "killAfterRestore", "labelFor", "labelTextSize", "languageTag", "largeHeap", "largestWidthLimitDp", "lastBaselineToBottomHeight", "launchTaskBehindSourceAnimation", "launchTaskBehindTargetAnimation", "layerType", "layoutAnimation", "layoutDirection", "layoutMode", "layout_above", "layout_alignBaseline", "layout_alignBottom", "layout_alignEnd", "layout_alignLeft", "layout_alignParentBottom", "layout_alignParentEnd", "layout_alignParentLeft", "layout_alignParentRight", "layout_alignParentStart", "layout_alignParentTop", "layout_alignRight", "layout_alignStart", "layout_alignTop", "layout_alignWithParentIfMissing", "layout_below", "layout_centerHorizontal", "layout_centerInParent", "layout_centerVertical", "layout_column", "layout_columnSpan", "layout_columnWeight", "layout_gravity", "layout_height", "layout_margin", "layout_marginBottom", "layout_marginEnd", "layout_marginHorizontal", "layout_marginLeft", "layout_marginRight", "layout_marginStart", "layout_marginTop", "layout_marginVertical", "layout_row", "layout_rowSpan", "layout_rowWeight", "layout_scale", "layout_span", "layout_toEndOf", "layout_toLeftOf", "layout_toRightOf", "layout_toStartOf", "layout_weight", "layout_width", "layout_x", "layout_y", "letterSpacing", "lineSpacingExtra", "lineSpacingMultiplier", "linksClickable", "listChoiceBackgroundIndicator", "listChoiceIndicatorMultiple", "listChoiceIndicatorSingle", "listDivider", "listDividerAlertDialog", "listMenuViewStyle", "listPopupWindowStyle", "listPreferredItemHeight", "listPreferredItemHeightLarge", "listPreferredItemHeightSmall", "listPreferredItemPaddingEnd", "listPreferredItemPaddingLeft", "listPreferredItemPaddingRight", "listPreferredItemPaddingStart", "listSelector", "listSeparatorTextViewStyle", "listViewStyle", "listViewWhiteStyle", "lockTaskMode", "logoDescription", "longClickable", "loopViews", "manageSpaceActivity", "mapViewStyle", "marqueeRepeatLimit", "matchOrder", "maxAspectRatio", "maxButtonHeight", "maxDate", "maxEms", "maxItemsPerRow", "maxLength", "maxLevel", "maxLines", "maxLongVersionCode", "maxRows", "maxSdkVersion", "maximumAngle", "measureAllChildren", "measureWithLargestChild", "mediaRouteButtonStyle", "mediaRouteTypes", "menuCategory", "mimeType", "minDate", "minEms", "minLevel", "minLines", "minResizeHeight", "minResizeWidth", "minSdkVersion", "minimumHorizontalAngle", "minimumVerticalAngle", "mipMap", "mirrorForRtl", "moreIcon", "multiArch", "multiprocess", "navigationBarColor", "navigationBarDividerColor", "navigationContentDescription", "navigationIcon", "navigationMode", "negativeButtonText", "nestedScrollingEnabled", "networkSecurityConfig", "nextClusterForward", "nextFocusDown", "nextFocusForward", "nextFocusLeft", "nextFocusRight", "nextFocusUp", "noHistory", "normalScreens", "notificationTimeout", "numColumns", "numStars", "numberPickerStyle", "numbersBackgroundColor", "numbersInnerTextColor", "numbersSelectorColor", "numbersTextColor", "numeric", "numericModifiers", "numericShortcut", "oneshot", "opacity", "orderInCategory", "ordering", "orderingFromXml", "outlineAmbientShadowColor", "outlineProvider", "outlineSpotShadowColor", "overScrollFooter", "overScrollHeader", "overScrollMode", "overlapAnchor", "overridesImplicitlyEnabledSubtype", "packageNames", "padding", "paddingBottom", "paddingEnd", "paddingHorizontal", "paddingLeft", "paddingMode", "paddingRight", "paddingStart", "paddingTop", "paddingVertical", "panelBackground", "panelColorBackground", "panelColorForeground", "panelFullBackground", "panelTextAppearance", "pathData", "pathPattern", "pathPrefix", "patternPathData", "permissionFlags", "permissionGroup", "permissionGroupFlags", "persistent", "persistentDrawingCache", "persistentWhenFeatureAvailable", "phoneNumber", "pivotX", "pivotY", "pointerIcon", "popupAnimationStyle", "popupBackground", "popupCharacters", "popupElevation", "popupEnterTransition", "popupExitTransition", "popupKeyboard", "popupLayout", "popupMenuStyle", "popupTheme", "popupWindowStyle", "positiveButtonText", "preferenceCategoryStyle", "preferenceFragmentStyle", "preferenceInformationStyle", "preferenceLayoutChild", "preferenceScreenStyle", "preferenceStyle", "presentationTheme", "previewImage", "primaryContentAlpha", "privateImeOptions", "progressBackgroundTint", "progressBackgroundTintMode", "progressBarPadding", "progressBarStyle", "progressBarStyleHorizontal", "progressBarStyleInverse", "progressBarStyleLarge", "progressBarStyleLargeInverse", "progressBarStyleSmall", "progressBarStyleSmallInverse", "progressBarStyleSmallTitle", "progressDrawable", "progressTint", "progressTintMode", "prompt", "propertyXName", "propertyYName", "protectionLevel", "publicKey", "queryActionMsg", "queryAfterZeroResults", "queryBackground", "queryHint", "quickContactBadgeStyleSmallWindowLarge", "quickContactBadgeStyleSmallWindowMedium", "quickContactBadgeStyleSmallWindowSmall", "quickContactBadgeStyleWindowLarge", "quickContactBadgeStyleWindowMedium", "quickContactBadgeStyleWindowSmall", "radioButtonStyle", "rating", "ratingBarStyle", "ratingBarStyleIndicator", "ratingBarStyleSmall", "readPermission", "recognitionService", "recreateOnConfigChanges", "recycleEnabled", "relinquishTaskIdentity", "reparent", "reparentWithOverlay", "repeatCount", "repeatMode", "reqFiveWayNav", "reqHardKeyboard", "reqKeyboardType", "reqNavigation", "reqTouchScreen", "requireDeviceUnlock", "required", "requiredAccountType", "requiredFeature", "requiredForAllUsers", "requiredNotFeature", "requiresFadingEdge", "requiresSmallestWidthDp", "resizeClip", "resizeMode", "resizeable", "resizeableActivity", "restoreAnyVersion", "restoreNeedsApplication", "restrictedAccountType", "restrictionType", "resumeWhilePausing", "reversible", "revisionCode", "ringtonePreferenceStyle", "ringtoneType", "rotationX", "rotationY", "roundIcon", "rowDelay", "rowEdgeFlags", "rowHeight", "rowOrderPreserved", "saveEnabled", "scaleGravity", "scaleHeight", "scaleType", "scaleWidth", "scaleX", "scaleY", "scheme", "screenDensity", "screenReaderFocusable", "screenSize", "scrollHorizontally", "scrollIndicators", "scrollViewStyle", "scrollX", "scrollY", "scrollbarAlwaysDrawHorizontalTrack", "scrollbarAlwaysDrawVerticalTrack", "scrollbarDefaultDelayBeforeFade", "scrollbarFadeDuration", "scrollbarSize", "scrollbarStyle", "scrollbarThumbHorizontal", "scrollbarThumbVertical", "scrollbarTrackHorizontal", "scrollbarTrackVertical", "scrollbars", "scrollingCache", "searchButtonText", "searchHintIcon", "searchIcon", "searchMode", "searchSettingsDescription", "searchSuggestAuthority", "searchSuggestIntentAction", "searchSuggestIntentData", "searchSuggestPath", "searchSuggestSelection", "searchSuggestThreshold", "searchViewStyle", "secondaryContentAlpha", "secondaryProgress", "secondaryProgressTint", "secondaryProgressTintMode", "seekBarStyle", "segmentedButtonStyle", "selectAllOnFocus", "selectable", "selectableItemBackground", "selectableItemBackgroundBorderless", "selectedDateVerticalBar", "selectedWeekBackgroundColor", "sessionService", "settingsActivity", "setupActivity", "shadowColor", "shadowDx", "shadowDy", "shadowRadius", "shape", "shareInterpolator", "shortcutDisabledMessage", "shortcutId", "shortcutLongLabel", "shortcutShortLabel", "shouldDisableView", "showAsAction", "showDefault", "showDividers", "showForAllUsers", "showMetadataInPreview", "showOnLockScreen", "showSilent", "showText", "showWeekNumber", "showWhenLocked", "shownWeekCount", "shrinkColumns", "singleLine", "singleLineTitle", "singleUser", "slideEdge", "smallIcon", "smallScreens", "smoothScrollbar", "soundEffectsEnabled", "spacing", "spinnerDropDownItemStyle", "spinnerItemStyle", "spinnerMode", "spinnerStyle", "spinnersShown", "splitMotionEvents", "splitName", "splitTrack", "spotShadowAlpha", "sspPattern", "sspPrefix", "stackFromBottom", "stackViewStyle", "starStyle", "startColor", "startOffset", "startX", "startY", "startYear", "stateListAnimator", "stateNotNeeded", "state_above_anchor", "state_accelerated", "state_activated", "state_active", "state_checkable", "state_checked", "state_drag_can_accept", "state_drag_hovered", "state_empty", "state_enabled", "state_expanded", "state_first", "state_focused", "state_hovered", "state_last", "state_long_pressable", "state_middle", "state_multiline", "state_pressed", "state_selected", "state_single", "state_window_focused", "staticWallpaperPreview", "statusBarColor", "stepSize", "stopWithTask", "streamType", "stretchColumns", "stretchMode", "strokeAlpha", "strokeColor", "strokeLineCap", "strokeLineJoin", "strokeMiterLimit", "strokeWidth", "subMenuArrow", "submitBackground", "subtitle", "subtitleTextAppearance", "subtitleTextColor", "subtitleTextStyle", "subtypeExtraValue", "subtypeId", "subtypeLocale", "suggestActionMsg", "suggestActionMsgColumn", "suggestionRowLayout", "summary", "summaryColumn", "summaryOff", "summaryOn", "supportsAssist", "supportsLaunchVoiceAssistFromKeyguard", "supportsLocalInteraction", "supportsPictureInPicture", "supportsRtl", "supportsSwitchingToNextInputMethod", "supportsUploading", "switchMinWidth", "switchPadding", "switchPreferenceStyle", "switchStyle", "switchTextAppearance", "switchTextOff", "switchTextOn", "syncable", "tabStripEnabled", "tabStripLeft", "tabStripRight", "tabWidgetStyle", "targetClass", "targetDescriptions", "targetId", "targetName", "targetPackage", "targetProcesses", "targetSandboxVersion", "targetSdkVersion", "taskCloseEnterAnimation", "taskCloseExitAnimation", "taskOpenEnterAnimation", "taskOpenExitAnimation", "taskToBackEnterAnimation", "taskToBackExitAnimation", "taskToFrontEnterAnimation", "taskToFrontExitAnimation", "testOnly", "textAlignment", "textAllCaps", "textAppearance", "textAppearanceButton", "textAppearanceInverse", "textAppearanceLarge", "textAppearanceLargeInverse", "textAppearanceLargePopupMenu", "textAppearanceListItem", "textAppearanceListItemSecondary", "textAppearanceListItemSmall", "textAppearanceMedium", "textAppearanceMediumInverse", "textAppearancePopupMenuHeader", "textAppearanceSearchResultSubtitle", "textAppearanceSearchResultTitle", "textAppearanceSmall", "textAppearanceSmallInverse", "textAppearanceSmallPopupMenu", "textCheckMark", "textCheckMarkInverse", "textColor", "textColorAlertDialogListItem", "textColorHighlight", "textColorHighlightInverse", "textColorHint", "textColorHintInverse", "textColorLink", "textColorLinkInverse", "textColorPrimary", "textColorPrimaryDisableOnly", "textColorPrimaryInverse", "textColorPrimaryInverseDisableOnly", "textColorPrimaryInverseNoDisable", "textColorPrimaryNoDisable", "textColorSecondary", "textColorSecondaryInverse", "textColorSecondaryInverseNoDisable", "textColorSecondaryNoDisable", "textColorTertiary", "textColorTertiaryInverse", "textCursorDrawable", "textDirection", "textEditNoPasteWindowLayout", "textEditPasteWindowLayout", "textEditSideNoPasteWindowLayout", "textEditSidePasteWindowLayout", "textEditSuggestionItemLayout", "textFilterEnabled", "textFontWeight", "textIsSelectable", "textOff", "textOn", "textScaleX", "textSelectHandle", "textSelectHandleLeft", "textSelectHandleRight", "textSelectHandleWindowStyle", "textSize", "textStyle", "textSuggestionsWindowStyle", "textViewStyle", "thickness", "thicknessRatio", "thumb", "thumbOffset", "thumbPosition", "thumbTextPadding", "thumbTint", "thumbTintMode", "thumbnail", "tickMark", "tickMarkTint", "tickMarkTintMode", "tileModeX", "tileModeY", "timePickerDialogTheme", "timePickerMode", "timePickerStyle", "timeZone", "tint", "tintMode", "titleCondensed", "titleMargin", "titleMarginBottom", "titleMarginEnd", "titleMarginStart", "titleMarginTop", "toAlpha", "toDegrees", "toId", "toScene", "toXDelta", "toXScale", "toYDelta", "toYScale", "toolbarStyle", "tooltipText", "topBright", "topDark", "topLeftRadius", "topOffset", "topRightRadius", "touchscreenBlocksFocus", "track", "trackTint", "trackTintMode", "transcriptMode", "transformPivotX", "transformPivotY", "transition", "transitionGroup", "transitionName", "transitionOrdering", "transitionVisibilityMode", "translateX", "translateY", "translationX", "translationY", "translationZ", "trimPathEnd", "trimPathOffset", "trimPathStart", "ttcIndex", "tunerCount", "turnScreenOn", "typeface", "uncertainGestureColor", "unfocusedMonthDateColor", "unselectedAlpha", "updatePeriodMillis", "use32bitAbi", "useDefaultMargins", "useIntrinsicSizeAsMinimum", "useLevel", "userVisible", "usesCleartextTraffic", "valueFrom", "valueTo", "valueType", "variablePadding", "versionCodeMajor", "versionMajor", "verticalCorrection", "verticalDivider", "verticalGap", "verticalScrollbarPosition", "verticalSpacing", "viewportHeight", "viewportWidth", "visibility", "visibleToInstantApps", "vmSafeMode", "voiceIcon", "voiceLanguage", "voiceLanguageModel", "voiceMaxResults", "voicePromptText", "voiceSearchMode", "wallpaperCloseEnterAnimation", "wallpaperCloseExitAnimation", "wallpaperIntraCloseEnterAnimation", "wallpaperIntraCloseExitAnimation", "wallpaperIntraOpenEnterAnimation", "wallpaperIntraOpenExitAnimation", "wallpaperOpenEnterAnimation", "wallpaperOpenExitAnimation", "webTextViewStyle", "webViewStyle", "weekDayTextAppearance", "weekNumberColor", "weekSeparatorLineColor", "weightSum", "widgetCategory", "widgetFeatures", "widgetLayout", "windowActionBar", "windowActionBarOverlay", "windowActionModeOverlay", "windowActivityTransitions", "windowAllowEnterTransitionOverlap", "windowAllowReturnTransitionOverlap", "windowAnimationStyle", "windowBackground", "windowBackgroundFallback", "windowClipToOutline", "windowCloseOnTouchOutside", "windowContentOverlay", "windowContentTransitionManager", "windowContentTransitions", "windowDisablePreview", "windowDrawsSystemBarBackgrounds", "windowElevation", "windowEnableSplitTouch", "windowEnterAnimation", "windowEnterTransition", "windowExitAnimation", "windowExitTransition", "windowFrame", "windowFullscreen", "windowHideAnimation", "windowIsFloating", "windowIsTranslucent", "windowLayoutInDisplayCutoutMode", "windowLightNavigationBar", "windowLightStatusBar", "windowMinWidthMajor", "windowMinWidthMinor", "windowNoDisplay", "windowNoTitle", "windowOverscan", "windowReenterTransition", "windowReturnTransition", "windowSharedElementEnterTransition", "windowSharedElementExitTransition", "windowSharedElementReenterTransition", "windowSharedElementReturnTransition", "windowSharedElementsUseOverlay", "windowShowAnimation", "windowShowWallpaper", "windowSoftInputMode", "windowSplashscreenContent", "windowSwipeToDismiss", "windowTitleBackgroundStyle", "windowTitleSize", "windowTitleStyle", "windowTransitionBackgroundFadeDuration", "windowTranslucentNavigation", "windowTranslucentStatus", "writePermission", "xlargeScreens", "yearListItemTextAppearance", "yearListSelectorColor", "yesNoPreferenceStyle", "zAdjustment", "ACCEPT_HANDOVER", "ACCESS_CHECKIN_PROPERTIES", "ACCESS_LOCATION_EXTRA_COMMANDS", "ACCESS_NOTIFICATION_POLICY", "ACCESS_WIFI_STATE", "ACCOUNT_MANAGER", "ADD_VOICEMAIL", "ANSWER_PHONE_CALLS", "BATTERY_STATS", "BIND_ACCESSIBILITY_SERVICE", "BIND_APPWIDGET", "BIND_AUTOFILL_SERVICE", "BIND_CARRIER_MESSAGING_SERVICE", "BIND_CARRIER_SERVICES", "BIND_CHOOSER_TARGET_SERVICE", "BIND_CONDITION_PROVIDER_SERVICE", "BIND_DEVICE_ADMIN", "BIND_DREAM_SERVICE", "BIND_INCALL_SERVICE", "BIND_INPUT_METHOD", "BIND_MIDI_DEVICE_SERVICE", "BIND_NFC_SERVICE", "BIND_NOTIFICATION_LISTENER_SERVICE", "BIND_PRINT_SERVICE", "BIND_QUICK_SETTINGS_TILE", "BIND_REMOTEVIEWS", "BIND_SCREENING_SERVICE", "BIND_TELECOM_CONNECTION_SERVICE", "BIND_TEXT_SERVICE", "BIND_TV_INPUT", "BIND_VISUAL_VOICEMAIL_SERVICE", "BIND_VOICE_INTERACTION", "BIND_VPN_SERVICE", "BIND_VR_LISTENER_SERVICE", "BIND_WALLPAPER", "BLUETOOTH_ADMIN", "BLUETOOTH_PRIVILEGED", "BODY_SENSORS", "BROADCAST_PACKAGE_REMOVED", "BROADCAST_SMS", "BROADCAST_STICKY", "BROADCAST_WAP_PUSH", "CALL_PHONE", "CALL_PRIVILEGED", "CAPTURE_AUDIO_OUTPUT", "CAPTURE_SECURE_VIDEO_OUTPUT", "CAPTURE_VIDEO_OUTPUT", "CHANGE_COMPONENT_ENABLED_STATE", "CHANGE_CONFIGURATION", "CHANGE_NETWORK_STATE", "CHANGE_WIFI_MULTICAST_STATE", "CHANGE_WIFI_STATE", "CLEAR_APP_CACHE", "CONTROL_LOCATION_UPDATES", "DELETE_CACHE_FILES", "DIAGNOSTIC", "DISABLE_KEYGUARD", "DUMP", "EXPAND_STATUS_BAR", "GET_ACCOUNTS", "GET_ACCOUNTS_PRIVILEGED", "GET_PACKAGE_SIZE", "GET_TASKS", "GLOBAL_SEARCH", "INSTALL_LOCATION_PROVIDER", "INSTANT_APP_FOREGROUND_SERVICE", "KILL_BACKGROUND_PROCESSES", "LOCATION_HARDWARE", "MANAGE_DOCUMENTS", "MANAGE_OWN_CALLS", "MASTER_CLEAR", "MEDIA_CONTENT_CONTROL", "MODIFY_AUDIO_SETTINGS", "MODIFY_PHONE_STATE", "MOUNT_FORMAT_FILESYSTEMS", "MOUNT_UNMOUNT_FILESYSTEMS", "NFC_TRANSACTION_EVENT", "PACKAGE_USAGE_STATS", "PERSISTENT_ACTIVITY", "PROCESS_OUTGOING_CALLS", "READ_CALENDAR", "READ_CALL_LOG", "READ_CONTACTS", "READ_FRAME_BUFFER", "READ_INPUT_STATE", "READ_LOGS", "READ_PHONE_NUMBERS", "READ_SMS", "READ_SYNC_SETTINGS", "READ_SYNC_STATS", "READ_VOICEMAIL", "RECEIVE_BOOT_COMPLETED", "RECEIVE_MMS", "RECEIVE_SMS", "RECEIVE_WAP_PUSH", "REORDER_TASKS", "REQUEST_COMPANION_RUN_IN_BACKGROUND", "REQUEST_COMPANION_USE_DATA_IN_BACKGROUND", "REQUEST_DELETE_PACKAGES", "REQUEST_IGNORE_BATTERY_OPTIMIZATIONS", "REQUEST_INSTALL_PACKAGES", "RESTART_PACKAGES", "SEND_RESPOND_VIA_MESSAGE", "SEND_SMS", "SET_ALARM", "SET_ALWAYS_FINISH", "SET_ANIMATION_SCALE", "SET_DEBUG_APP", "SET_PREFERRED_APPLICATIONS", "SET_PROCESS_LIMIT", "SET_TIME", "SET_TIME_ZONE", "SET_WALLPAPER_HINTS", "SIGNAL_PERSISTENT_PROCESSES", "SYSTEM_ALERT_WINDOW", "TRANSMIT_IR", "UNINSTALL_SHORTCUT", "UPDATE_DEVICE_STATS", "USE_BIOMETRIC", "USE_FINGERPRINT", "USE_SIP", "WRITE_APN_SETTINGS", "WRITE_CALENDAR", "WRITE_CALL_LOG", "WRITE_CONTACTS", "WRITE_GSERVICES", "WRITE_SECURE_SETTINGS", "WRITE_SETTINGS", "WRITE_SYNC_SETTINGS", "WRITE_VOICEMAIL", "newInterfaceProxy", "disableInterfaceProxy", "AABBTreeRuntimeNode", "mValid", "PxPruningStructure", "PxTriangleMesh", "PxBVH34TriangleMesh", "PxBVH33TriangleMesh", "PxHeightField", "PxConvexMesh", "mVBuffer", "Valency", "ConvexHullData", "mHullData", "mBigConvexData", "mMass", "mInertia", "GuMeshFactory", "mMeshFactory", "HullPolygonData", "PxMaterialTableIndex", "HeightFieldData", "mSampleStride", "mNbSamples", "mMinHeight", "mMaxHeight", "mModifyCount", "PxHeightFieldSample", "mBoundsMin", "mBoundsMax", "mInvDiagonal", "mDiagonalScaler", "mPageSize", "mNumRootPages", "mNumLevels", "mTotalNodes", "mTotalPages", "RTreePage", "mPages", "SourceMesh", "mNbVerts", "mVerts", "mNbTris", "mTriangles32", "mTriangles16", "mRemap", "mExtentsMagnitude", "mMeshInterface", "mLocalBounds", "mNbNodes", "BVDataPacked", "mNodes", "mCenterOrMinCoeff", "mExtentsOrMaxCoeff", "mUserAllocated", "mNbVertices", "mNbTriangles", "mTriangles", "mAABB", "mExtraTrigData", "mGeomEpsilon", "mMaterialIndices", "mFaceRemap", "mAdjacencies", "mGRB_triIndices", "mGRB_triAdjacencies", "mGRB_faceRemap", "mGRB_BV32Tree", "mRTree", "mBV4Tree", "MaterialIndicesStruct", "numIndices", "pad64", "PxGeometryType::Enum", "PxConvexMeshGeometryLL", "ShadowConvexMeshGeometry", "PxTriangleMeshGeometryLL", "ShadowTriangleMeshGeometry", "PxHeightFieldGeometryLL", "ShadowHeightFieldGeometry", "PxPlaneGeometry", "ShadowPlaneGeometry", "PxSphereGeometry", "ShadowSphereGeometry", "PxCapsuleGeometry", "ShadowCapsuleGeometry", "PxBoxGeometry", "ShadowBoxGeometry", "Gu::GeometryUnion", "mSubdiv", "mSamples", "mNbAdjVerts", "mValencies", "mAdjacentVerts", "InternalObjectsData", "mRadius", "mPlane", "mVRef8", "mMinIndex", "mCenterOfMass", "mPolygons", "mBigConvexRawData", "mNbEdges", "mNbHullVertices", "mNbPolygons", "PxBitAndByte", "materialIndex0", "materialIndex1", "PxHeightFieldFlags", "PxHeightFieldFormat::Enum", "rows", "columns", "rowLimit", "colLimit", "nbColumns", "samples", "convexEdgeThreshold", "minx", "miny", "minz", "maxx", "maxy", "maxz", "ptrs", "QuantizedAABB", "PxConvexMeshGeometryFlags", "convexMesh", "maxMargin", "meshFlags", "paddingFromFlags", "hullData", "gpuCompatible", "PxMeshGeometryFlags", "triangleMesh", "meshData", "materialIndices", "materials", "heightField", "rowScale", "columnScale", "heightFieldFlags", "heightFieldData", "halfHeight", "halfExtents", "mSingle", "mOwnsMemory", "PxDominanceGroup", "PxClientID", "Sc::ActorCore", "ActorSim", "mSim", "mAggregateIDOwnerClient", "mActorFlags", "mActorType", "mClientBehaviorFlags", "mDominanceGroup", "PxRigidBodyFlags", "Sc::BodyCore", "Sc::RigidCore", "mSimStateData", "PxConstraintFlags", "ConstraintCore", "mPaddingFromFlags", "mAppliedForce", "mAppliedTorque", "mConnector", "PxConstraintProject", "mProject", "PxConstraintSolverPrep", "mSolverPrep", "PxConstraintVisualize", "mVisualize", "mDataSize", "mLinearBreakForce", "mAngularBreakForce", "mMinResponseThreshold", "ConstraintSim", "PxCombineMode::Enum", "PxMaterialFlags", "fricRestCombineMode", "mNxMaterial", "mMaterialIndex", "Sc::StaticCore", "PxsRigidCore", "PxShapeFlags", "PxFilterData", "mQueryFilterData", "mSimulationFilterData", "PxsShapeCore", "mRestOffset", "ArticulationSim", "Dy::ArticulationCore", "ArticulationJointSim", "Dy::ArticulationJointCore", "mLowLevelFabric", "mLowLevelGpuFabric", "Sc::ClothFabricBulkData", "mNbParticles", "Sc::ClothBulkData", "mTetherConstraintScale", "mTetherConstraintStiffness", "mMotionConstraintScale", "mMotionConstraintBias", "mMotionConstraintStiffness", "mAcceleration", "mDamping", "mFriction", "mCollisionMassScale", "mLinearDrag", "mAngularDrag", "mLinearInertia", "mAngularInertia", "mCentrifugalInertia", "mSolverFrequency", "mStiffnessFrequency", "mSelfCollisionDistance", "mSelfCollisionStiffness", "mGlobalPose", "mSleepThreshold", "mWakeCounter", "mWindVelocity", "mDragCoefficient", "mLiftCoefficient", "Sc::ClothCore", "PxClothFlags", "mExternalAcceleration", "mFilterData", "mClothFlags", "mContactOffset", "mNumUserSpheres", "mNumUserCapsules", "mNumUserPlanes", "mNumUserConvexes", "mNumUserTriangles", "mLowLevelCloth", "mBulkData", "mPhaseConfigs", "ShadowPxsBodyCore", "body2World", "mIdtBody2Actor", "solverIterationCounts", "body2Actor", "ccdAdvanceCoefficient", "linearVelocity", "maxPenBias", "angularVelocity", "contactReportThreshold", "maxAngularVelocitySq", "maxLinearVelocitySq", "linearDamping", "angularDamping", "inverseInertia", "inverseMass", "maxContactImpulse", "freezeThreshold", "wakeCounter", "solverWakeCounter", "numCountedInteractions", "numBodyInteractions", "isFastMoving", "lockFlags", "word0", "word1", "word2", "word3", "geometry", "mShapeFlags", "mOwnsMaterialIdxMemory", "materialIndex", "internalDriveIterations", "externalDriveIterations", "maxProjectionIterations", "separationTolerance", "parentPose", "childPose", "solverSpring", "solverDamping", "internalCompliance", "externalCompliance", "swingYLimit", "swingZLimit", "swingLimitContactDistance", "swingLimited", "driveType", "tangentialStiffness", "tangentialDamping", "twistLimitHigh", "twistLimitLow", "twistLimitContactDistance", "twistLimited", "tanQSwingY", "tanQSwingZ", "tanQSwingPad", "tanQTwistHigh", "tanQTwistLow", "tanQTwistPad", "StaticSim", "BodySim", "ShapeSim", "SpeculativeCCDContactDistanceUpdateTask", "SpeculativeCCDContactDistanceArticulationUpdateTask", "DirtyShapeUpdatesTask", "UpdateCCDBoundsTask", "OnOverlapCreatedTask", "OverlapFilterTask", "PxHullPolygon", "PxClothFabric", "PxCloth", "ScbType::Enum", "Scb::Base", "Scb::Scene", "mControlState", "mStreamPtr", "Scb::Actor", "Scb::RigidObject", "mBodyCore", "mBufferedBody2World", "mBufferedLinVelocity", "mBufferedAngVelocity", "mBufferedWakeCounter", "mBufferedIsSleeping", "mBodyBufferFlags", "mStatic", "mBufferedForce", "mBufferedTorque", "mBrokenFlag", "mPxAggregate", "mAggregateID", "mMaxNbActors", "mSelfCollide", "PxArticulation", "PxRigidStatic", "NpContactCallbackTask", "win32", "win64", "linux32", "linux64", "macOSX32", "macOSX64", "android", "ios64", "xboxone", "switch32", "switch64", "win8arm", "psp2", "n3ds", "lumin", "fmod", "WAVE", "Winamp", "ARTIST", "OggS", "RIFF", "ALBUM", "COMMENT", "GENRE", "SCRM", "NONAME", "FLT4", "IMPM", "PNAM", "CNAM", "Flanger", "IMPI", "IMPS", "FSB3", "FSB4", "FSB2", "AIFC", "AIFF", "COMM", "twos", "sowt", "SSND", "INST", "FSB5", "getAnnotatedReturnType", "getDefaultValue", "getExceptionTypes", "getGenericExceptionTypes", "getGenericParameterTypes", "getGenericReturnType", "getParameterAnnotations", "getParameterCount", "getParameterTypes", "getReturnType", "isBridge", "isVarArgs", "parseLong", "parseUnsignedLong", "COMBINING_SPACING_MARK", "CONNECTOR_PUNCTUATION", "CURRENCY_SYMBOL", "DASH_PUNCTUATION", "DECIMAL_DIGIT_NUMBER", "DIRECTIONALITY_ARABIC_NUMBER", "DIRECTIONALITY_BOUNDARY_NEUTRAL", "DIRECTIONALITY_COMMON_NUMBER_SEPARATOR", "DIRECTIONALITY_EUROPEAN_NUMBER", "DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR", "DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR", "DIRECTIONALITY_LEFT_TO_RIGHT", "DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING", "DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE", "DIRECTIONALITY_NONSPACING_MARK", "DIRECTIONALITY_OTHER_NEUTRALS", "DIRECTIONALITY_PARAGRAPH_SEPARATOR", "DIRECTIONALITY_POP_DIRECTIONAL_FORMAT", "DIRECTIONALITY_RIGHT_TO_LEFT", "DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC", "DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING", "DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE", "DIRECTIONALITY_SEGMENT_SEPARATOR", "DIRECTIONALITY_UNDEFINED", "DIRECTIONALITY_WHITESPACE", "ENCLOSING_MARK", "END_PUNCTUATION", "FINAL_QUOTE_PUNCTUATION", "INITIAL_QUOTE_PUNCTUATION", "LETTER_NUMBER", "LINE_SEPARATOR", "LOWERCASE_LETTER", "MATH_SYMBOL", "MAX_CODE_POINT", "MAX_HIGH_SURROGATE", "MAX_LOW_SURROGATE", "MAX_RADIX", "MAX_SURROGATE", "MIN_CODE_POINT", "MIN_HIGH_SURROGATE", "MIN_LOW_SURROGATE", "MIN_RADIX", "MIN_SUPPLEMENTARY_CODE_POINT", "MIN_SURROGATE", "MODIFIER_LETTER", "MODIFIER_SYMBOL", "NON_SPACING_MARK", "OTHER_LETTER", "OTHER_NUMBER", "OTHER_PUNCTUATION", "OTHER_SYMBOL", "PRIVATE_USE", "SPACE_SEPARATOR", "START_PUNCTUATION", "TITLECASE_LETTER", "UNASSIGNED", "UPPERCASE_LETTER", "charCount", "charValue", "digit", "forDigit", "getDirectionality", "getNumericValue", "highSurrogate", "isAlphabetic", "isBmpCodePoint", "isDefined", "isDigit", "isHighSurrogate", "isISOControl", "isIdentifierIgnorable", "isIdeographic", "isJavaIdentifierPart", "isJavaIdentifierStart", "isJavaLetter", "isJavaLetterOrDigit", "isLetter", "isLetterOrDigit", "isLowSurrogate", "isLowerCase", "isMirrored", "isSpace", "isSpaceChar", "isSupplementaryCodePoint", "isSurrogate", "isSurrogatePair", "isTitleCase", "isUnicodeIdentifierPart", "isUnicodeIdentifierStart", "isUpperCase", "isValidCodePoint", "isWhitespace", "lowSurrogate", "toChars", "toCodePoint", "toTitleCase", "PostThirdPassTask", "AggregateBoundsComputationTask", "FinalizeUpdateTask", "SolverArticulationUpdateTask", "slCreateEngine", "SL_IID_ENGINE", "SL_IID_ANDROIDSIMPLEBUFFERQUEUE", "SL_IID_ANDROIDCONFIGURATION", "SL_IID_PLAY", "SL_IID_RECORD", "androidPlaybackStreamType", "getPrimaryOutputSamplingRate", "getPrimaryOutputFrameCount", "androidRecordingPreset", "startAudioRecord", "stopAudioRecord", "fmodGetInfo", "fmodProcess", "fmodProcessMicData", "fact", "labl", "smpl", "_GLOBAL_", "auto", "JArray", "operator", "false", "true", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "const_cast", "dynamic_cast", "reinterpret_cast", "static_cast", "throw", "bool", "boolean", "char", "byte", "double", "float", "__float128", "unsigned", "long", "__int128", "short", "void", "wchar_t", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "N9__gnu_cxx20recursive_init_errorE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "St9time_base", "St10ctype_base", "St10money_base", "St13messages_base", "St12codecvt_base", "St7collateIcE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "POSIX", "basic_string::erase", "NSt6locale5facetE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "AKST", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "St7collateIwE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St13basic_filebufIcSt11char_traitsIcEE", "St14basic_ifstreamIcSt11char_traitsIcEE", "basic_string::basic_string", "basic_string::_S_create", "basic_string::append", "basic_string::copy", "basic_string::substr", "basic_string::compare", "basic_string::_M_replace_aux", "basic_string::assign", "basic_string::insert", "basic_string::resize", "basic_string::replace", "St14error_category", "generic", "system", "St9bad_alloc", "std::bad_alloc", "St8bad_cast", "std::bad_cast", "N10__cxxabiv117__class_type_infoE", "St9exception", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "std::exception", "std::bad_exception", "N10__cxxabiv121__vmi_class_type_infoE", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "St5ctypeIcE", "St5ctypeIwE", "space", "print", "cntrl", "upper", "lower", "alpha", "digit", "punct", "xdigit", "alnum", "graph", "St9basic_iosIcSt11char_traitsIcEE", "basic_ios::clear", "St8ios_base", "NSt8ios_base7failureE", "St11logic_error", "St12length_error", "St12out_of_range", "St13runtime_error", "St15basic_streambufIcSt11char_traitsIcEE"], "debugstrings": ["UnityEngine.ImageConversion::EncodeToTGA", "UnityEngine.ImageConversion::EncodeToPNG", "UnityEngine.ImageConversion::EncodeToJPG", "UnityEngine.ImageConversion::EncodeToEXR", "UnityEngine.ImageConversion::LoadImage", "Unsupported version or scanline.", "Unsupported conversion of vertex data (format %d to %d, dimensions %d to %d)", "Vulkan PSO: Incompatible header found [Size=%lld] [Version=%d] [Vendor=%x] [Device=%x]\n", "Unknown driver detected - Vendor[%s] DriverVulkanVersion[%d.%d.%d] DriverVersion[%d] ", "Incompatible driver detected - Vendor[%s] DriverVulkanVersion[%d.%d.%d] RequestedVulkanVersion[%d.%d.%d] DriverVersion[%d] ", "UnityEngine.Caching::ClearCachedVersionInternal_Injected", "UnityEngine.Caching::ClearCachedVersions_Injected", "UnityEngine.Caching::GetCachedVersions", "UnityEngine.Caching::IsVersionCached_Injected", "UnityEngine.SystemInfo::GetGraphicsDeviceVersion", "UnityEngine.Application::get_unityVersion", "UnityEngine.Application::get_version", "UnityEngine.AndroidJNI::GetVersion", "UnityEngine.Rendering.GPUFence::GetVersionNumber", "ApplicationInfo %s version %s build %s", "Built from '%s' branch, Version '%s', Build type '%s', Scripting Backend '%s', CPU '%s'", "__UNITY_PLAYERPREFS_VERSION__", "Warning: Using AndroidBlitType.Never with Linear Rendering requires manual linear-to-sRGB conversion in a custom render pass.\n", "Failed to load '%s' because it was serialized with a newer version of Unity. (Has a higher SerializedFile version)", "Invalid serialized file version. File: \"%s\". Expected version: 2018.3.0f2. Actual version: %s.", "Invalid version provided - %s or end of string expected, got %c", "Failed to create a shader variant in '%s'. You probably have precompiled shader asset from an old Unity version.", "VersionControl", "Initialize engine version: %s\n", "hasPROVersion", "hasAdvancedVersion", "m_Version", "ManifestFileVersion", "iPhoneBundleVersion", "bundleVersion", "m_Version", "version=\"%s\" ", "version=\"", "m_FMODSystem->getVersion(&version)", "The version number of this file format is not supported. ", "The AssetBundle '%s' can't be loaded because it was not built with the right version or build target.", "Wrong JPEG library version: library is %d, caller expects %d", "Unsupported color conversion request", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", " libpng version 1.6.10 - March 6, 2014\n\n", "unsupported zlib version", "ASCII conversion buffer too small", "PNG file corrupted by ASCII conversion", "Version:  %s\n", "#version 150", "#version 300 es", "check parameters, all parameters should be > 0 and broadcastPort < 0xFFFF, key, version, subversion < 0xFFFFFFFF", "X-Unity-Version", "HTTP Version Not Supported", "Vulkan API version %d.%d.%d\n", "Vulkan driverversion=[%s] uint=[%d]\n", "Failed to close archive file after conversion", "Conversion from this format NOT supported", "incompatible version", "interpreter-version", "Log: Library version mismatch\n", "supportVersion", "gpu_version", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<statistics task=\"%s\" output=\"%s\" version=\"%s\">", "SolveEntireProbeSetTask - version number of probeset data does not match run-time", "FreezeEntireProbeSetTask - version number of probeset data does not match run-time", "%s - version number of probeset data does not match run-time", "%s: (RadSystemCore) m_RadiosityPrecomp DataBlock version mismatch", "%s: (RadProbeSetCore) m_ProbeSetPrecomp DataBlock version mismatch", "%s: (RadProbeSetCore) m_EntireProbeSetPrecomp DataBlock version mismatch", "%s: (RadCubeMapCore) m_ClusterCubeMapPrecomp DataBlock version mismatch", "%s: (InputWorkspace) m_ProjectedPointData DataBlock is of incorrect version number", "%s: (PrecomputedVisibilityData) Version mismatch", "%s: (ResamplingData) Version mismatch", "GetInputWorkspaceMaxVersionsInAnyInstance", "maxVersionsOut", "GetInputWorkspaceNumVersionsInInstance", "numVersionsOut", "GetInputWorkspaceVersionsInInstance", "versionIdsOut", "GetInputWorkspaceProjectedPointVersion", "Wrong version: PhysX version is 0x%08x, tried to create 0x%08x", "ACCESSIBILITY_DISPLAY_INVERSION_ENABLED", "getRadioVersion", "android/os/Build$VERSION", "FEATURE_VULKAN_HARDWARE_VERSION", "VERSION_CODE_HIGHEST", "(Landroid/content/pm/VersionedPackage;I)Landroid/content/pm/PackageInfo;", "versionCode", "versionName", "getLongVersionCode", "setLongVersionCode", "glEsVersion", "maxLongVersionCode", "maxSdkVersion", "minSdkVersion", "restoreAnyVersion", "targetSandboxVersion", "targetSdkVersion", "versionCodeMajor", "versionMajor", "Loading cloth fabric failed: mismatching version of cloth fabric stream.", "basic_filebuf::_M_convert_to_external conversion error", "GCC: (GNU) 4.9.x 20150123 (prerelease)", "Android clang version 5.0.300080  (based on LLVM 5.0.300080)"], "localsymbols": [""], "dependencies": ["libm.so", "libEGL.so", "libstdc++.so", "libdl.so", "libandroid.so", "libz.so", "liblog.so", "libGLESv2.so", "libc.so", "libmain.so"], "elfname": "libunity.so"}