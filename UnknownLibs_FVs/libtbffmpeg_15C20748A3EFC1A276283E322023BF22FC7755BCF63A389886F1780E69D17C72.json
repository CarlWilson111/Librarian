{"globalvars": ["x264_cabac_transition", "PKCS7_it", "x264_cqm_avci100_1080_4ic", "x264_cpu_names", "NOTICEREF_it", "ff_ac3_sample_rate_tab", "ff_cos_64", "av_codec_ffversion", "ff_aac_num_swb_128", "v3_pci", "X509_SIG_it", "ff_swb_offset_480", "yuv422ptoyuy2", "ff_ac3_floor_tab", "ff_sin_512", "ff_aac_eld_window_480_fixed", "PKCS12_SAFEBAG_it", "lh_version", "ff_rtmps_protocol", "avpriv_vga16_font", "POLICY_MAPPING_it", "ff_sin_256", "OCSP_RESPID_it", "rgb15to16", "CMS_KEKIdentifier_it", "ff_codec_movsubtitle_tags", "MD5_version", "x264_cabac_renorm_shift", "ff_pcm_s16le_decoder", "yv12toyuy2", "ff_flv_demuxer", "ff_sine_8192_fixed", "x264_dct8_weight2_tab", "rgb15to32", "ff_aac_num_swb_480", "CAST_S_table7", "ff_cos_512", "ff_crypto_protocol", "ff_ac3_hearing_threshold_tab", "STACK_version", "BF_version", "x264_cqm_jvt8i", "PKCS7_ENVELOPE_it", "ff_mp3on4float_decoder", "ff_aac_codebook_vectors", "SHA_version", "ff_avio_class", "BASIC_CONSTRAINTS_it", "x264_dct4_weight2_tab", "ff_sine_1024_fixed", "v3_alt", "x264_log2_lz_lut", "X509_REQ_it", "PBE2PARAM_it", "ff_cos_128", "dhx_pkey_meth", "OPENSSL_NONPIC_relocated", "x264_chroma_lambda2_offset_tab", "EDIPARTYNAME_it", "ff_sin_32768", "x264_cabac_range_lps", "ff_ue_golomb_len", "ff_ac3_dec_channel_map", "av_md5_size", "CMS_OriginatorPublicKey_it", "v3_crl_hold", "v3_ns_ia5_list", "x264_run_before_init", "v3_key_usage", "X509_NAME_ENTRY_it", "v3_bcons", "ff_ac3_fast_decay_tab", "ff_sine_64", "av_aes_size", "ff_ac3_bap_tab", "ff_af_amix", "v3_ocsp_nocheck", "X509_CERT_PAIR_it", "CERTIFICATEPOLICIES_it", "ff_id3v2_picture_types", "rgb24tobgr15", "ff_se_golomb_vlc_code", "av_twofish_size", "ec_pkey_meth", "yvu9_to_yuy2", "ff_hevc_parser", "ff_sine_128_fixed", "ff_aac_adtstoasc_bsf", "ECPARAMETERS_it", "PKCS12_SAFEBAGS_it", "ECDH_version", "USERNOTICE_it", "v3_ocsp_accresp", "ASN1_OCTET_STRING_NDEF_it", "CBIGNUM_it", "DSA_SIG_it", "CMS_RecipientInfo_it", "ff_hls_demuxer", "X509_PUBKEY_it", "DISPLAYTEXT_it", "ff_sin_2048", "ff_tns_max_bands_512", "ff_id3v2_4_tags", "ff_id3v2_tags", "ff_rgb24toyv12", "PKEY_USAGE_PERIOD_it", "ff_interleaved_ue_golomb_vlc_code", "x264_cqm_avci100_1080p_8iy", "ff_dither_4x4_16", "X509_ATTRIBUTE_it", "rgb15tobgr24", "CMS_SignedData_it", "ff_m4v_demuxer", "PBKDF2PARAM_it", "x264_lambda2_tab", "yuy2toyv12", "ff_fft_offsets_lut", "PROXY_CERT_INFO_EXTENSION_it", "ff_mp4_obj_type", "rgb32tobgr15", "AES_version", "CMS_OtherRecipientInfo_it", "CMS_CompressedData_it", "ACCESS_DESCRIPTION_it", "PKCS7_ATTR_SIGN_it", "ASN1_PRINTABLE_it", "x264_trellis_lambda2_tab", "CMS_AuthenticatedData_it", "x264_8_cabac_size_unary", "dsa_asn1_meths", "ff_ac3_bitrate_tab", "ff_inverse", "ff_rtmpe_protocol", "CMS_PasswordRecipientInfo_it", "ff_mpegts_demuxer", "x264_lambda_tab", "ff_hevc_epel_filters", "rgb32tobgr16", "EVP_version", "ff_codec_wav_guids", "ff_dither_2x2_8", "X509_version", "dtls1_version_str", "v3_skey_id", "ff_sbr_noise_table", "OCSP_REQUEST_it", "ff_swb_offset_128", "v3_sinfo", "ff_codec_movvideo_tags", "ff_dither_8x8_128", "x264_cabac_context_init_PB", "ff_golomb_vlc_len", "CMS_RecipientKeyIdentifier_it", "ff_square_tab", "X509_REVOKED_it", "ff_aac_kbd_long_1024", "ssl3_ciphers", "ff_cos_32768", "ff_interleaved_se_golomb_vlc_code", "ff_rtmp_protocol", "CAST_S_table1", "CMS_KEKRecipientInfo_it", "av_tree_node_size", "RSA_version", "ff_sin_65536", "ff_sine_64_fixed", "ASN1_OCTET_STRING_it", "X509_ALGOR_it", "v3_info", "ff_sqrt_tab", "PKCS7_SIGNED_it", "ff_hevc_qpel_filters", "ff_sin_64", "ff_rtmpts_protocol", "ff_rtmpte_protocol", "ff_sine_32_fixed", "av_ripemd_size", "X509_CERT_AUX_it", "X9_62_CURVE_it", "NETSCAPE_SPKI_it", "swri_resampler", "rgb16to32", "ff_cos_2048_fixed", "SSLv3_enc_data", "rgb24tobgr32", "x264_cqm_flat16", "ff_aac_num_swb_512", "OTHERNAME_it", "obj_cleanup_defer", "RMD160_version", "av_sha_size", "PKCS12_MAC_DATA_it", "ff_swb_offset_512", "ff_aac_eld_window_512", "CMS_SignerIdentifier_it", "ff_dither_8x8_32", "OCSP_REVOKEDINFO_it", "OCSP_RESPONSE_it", "CMS_ContentInfo_it", "ff_hevc_diag_scan4x4_y", "CMS_IssuerAndSerialNumber_it", "CMS_KeyTransRecipientInfo_it", "ffurl_context_class", "x264_total_zeros_2x4_dc", "ff_cos_4096", "v3_policy_constraints", "DHvparams_it", "ff_mpeg2_video_profiles", "PKCS7_ATTR_VERIFY_it", "CMS_RevocationInfoChoice_it", "CMS_SharedInfo_it", "ff_sin_16", "v3_crl_invdate", "ff_sine_windows_fixed", "ff_aac_kbd_long_1024_fixed", "AUTHORITY_KEYID_it", "ff_img_tags", "ff_interleaved_golomb_vlc_len", "ff_sine_4096_fixed", "CMS_OtherCertificateFormat_it", "X509_it", "openssl_mutexes", "DSAPrivateKey_it", "ASN1_GENERALSTRING_it", "x264_hpel_ref0", "X509_NAME_INTERNAL_it", "avpriv_mpeg4audio_sample_rates", "v3_idp", "ff_sin_4096", "SHA256_version", "ff_sine_1024", "CAST_S_table5", "OCSP_ONEREQ_it", "ASN1_T61STRING_it", "chroma_coef", "x264_8_cache_mvd_func_table", "ff_ac3_enc_channel_map", "ff_id3v2_mime_tags", "v3_ext_ku", "CMS_Attributes_Sign_it", "x264_coeff_abs_level_m1_offset", "ff_aac_spectral_sizes", "DH_version", "X509_CRL_INFO_it", "TLSv1_1_enc_data", "DIST_POINT_it", "ff_aac_codebook_vector_vals", "ff_cos_16384", "ff_tns_max_bands_128", "ff_vf_fifo", "v3_ocsp_acutoff", "deinterleaveBytes", "v3_inhibit_anyp", "x264_cqm_jvt4p", "ASN1_BOOLEAN_it", "ff_pcm_s16le_encoder", "X509_REQ_INFO_it", "v3_nscert", "DNS_TIMEOUT", "ff_tns_max_bands_480", "ASN1_ENUMERATED_it", "rgb32tobgr24", "CMS_Receipt_it", "ff_sin_8192", "ff_ac3_log_add_tab", "x509_name_ff", "ff_cos_2048", "SXNET_it", "ASN1_ANY_it", "ASN1_SET_ANY_it", "ff_h264_mp4toannexb_bsf", "ff_h264_mb_sizes", "ff_network_inited_globally", "RC4_version", "x264_cqm_avci100_720p_8iy", "x264_significant_coeff_flag_offset", "ASN1_BMPSTRING_it", "ff_h264_parser", "PKCS12_BAGS_it", "x264_cabac_entropy", "av_util_ffversion", "x264_cqm_avci50_4ic", "avpriv_mpa_freq_tab", "x264_chroma_format", "ff_sin_128", "PBEPARAM_it", "v3_akey_id", "ff_mpa_sblimit_table", "x264_hpel_ref1", "RSAPrivateKey_it", "ff_af_volume", "ff_cos_256", "ff_cos_8192_fixed", "ff_hevc_diag_scan8x8_y", "x264_dct4_weight_tab", "BN_version", "ff_vc1_profiles", "ff_vsrc_buffer", "BIGNUM_it", "ff_sine_windows", "RSA_PSS_PARAMS_it", "rsa_pkey_meth", "ff_hevc_demuxer", "ZLONG_it", "ff_mp3adu_decoder", "hmac_pkey_meth", "POLICYQUALINFO_it", "x264_last_coeff_flag_offset_8x8", "ff_cos_16384_fixed", "ff_cos_16_fixed", "uyvytoyuv422", "ff_reverse", "CAST_version", "DTLSv1_enc_data", "ff_rtmpt_protocol", "x264_dct8_weight_tab", "v3_ocsp_serviceloc", "ff_asrc_anullsrc", "ff_hevc_diag_scan8x8_x", "DHparams_it", "ff_sine_256_fixed", "CMS_DigestedData_it", "ff_sine_128", "ff_log2_run", "ff_log2_tab", "ff_dither_2x2_4", "rgb32to16", "ASN1_BIT_STRING_it", "ff_cos_1024", "PKCS7_RECIP_INFO_it", "ff_cos_1024_fixed", "ff_aac_pow2sf_tab", "rgb24tobgr24", "x264_decimate_table4", "ff_http_protocol", "ff_cos_32", "CMS_Attributes_Verify_it", "ff_sws_context_class", "ff_af_aformat", "ff_af_atempo", "ff_vp9_profiles", "avpriv_pix_fmt_bps_mov", "ff_id3v2_4_metadata_conv", "v3_cpols", "ASN1_NULL_it", "shuffle_bytes_2103", "OCSP_SINGLERESP_it", "OCSP_RESPDATA_it", "interleaveBytes", "POLICY_CONSTRAINTS_it", "ff_cos_64_fixed", "avpriv_ac3_channel_layout_tab", "eckey_asn1_meth", "ff_sine_512_fixed", "CAST_S_table4", "v3_ocsp_nonce", "yuv422ptouyvy", "ff_sin_32", "ff_sine_8192", "ASN1_version", "v3_crl_num", "ff_mpa_synth_window_float", "X9_62_FIELDID_it", "ff_aac_eld_window_512_fixed", "sigx_app", "CMS_OtherKeyAttribute_it", "PEM_version", "CMS_OriginatorIdentifierOrKey_it", "DIST_POINT_NAME_it", "ASN1_UTF8STRING_it", "OCSP_CERTSTATUS_it", "x264_cqm_jvt", "CMS_EncryptedData_it", "v3_crld", "ff_libx264_encoder", "EC_version", "ff_af_afifo", "ff_mov_muxer", "sig_app", "ff_sine_32", "x509_dir_lookup", "ff_mdct_win_float", "cmac_pkey_meth", "rgb32to15", "PKCS7_SIGN_ENVELOPE_it", "X509_EXTENSION_it", "av_sha512_size", "dsa_pub_internal_it", "ISSUING_DIST_POINT_it", "ff_eac3_default_chmap", "LONG_it", "ff_cos_8192", "v3_pkey_usage_period", "OCSP_CRLID_it", "x264_total_zeros_2x2_dc", "TLSv1_2_enc_data", "ff_ue_golomb_vlc_code", "CMS_OtherRevocationInfoFormat_it", "CMS_OriginatorInfo_it", "av_format_ffversion", "NAME_CONSTRAINTS_it", "cmac_asn1_meth", "X509_CINF_it", "RSA_OAEP_PARAMS_it", "dh_pkey_meth", "rgb24to15", "CAMELLIA_version", "x264_cqm_avci50_1080i_8iy", "ff_aac_num_swb_1024", "ff_aac_spectral_codes", "ff_hevc_profiles", "ff_tls_openssl_protocol", "ff_aac_scalefactor_code", "CMS_CertificateChoices_it", "CAST_S_table6", "PKCS7_DIGEST_it", "CMS_KeyAgreeRecipientIdentifier_it", "PKCS8_PRIV_KEY_INFO_it", "dh_asn1_meth", "ff_mov_demuxer", "v3_name_constraints", "ff_ac3_frame_size_tab", "ff_ac3_fast_gain_tab", "ff_vsink_buffer", "ff_mdct_win_fixed", "ff_asink_abuffer", "ff_mp4_muxer", "ECPKPARAMETERS_it", "OCSP_RESPBYTES_it", "avpriv_pix_fmt_bps_avi", "ff_cos_tabs", "DTLSv1_2_enc_data", "ff_sin_16384", "CAST_S_table0", "ff_codec_bmp_tags", "x264_decimate_table8", "AUTHORITY_INFO_ACCESS_it", "CMS_EnvelopedData_it", "ff_asrc_abuffer", "ASN1_OBJECT_it", "OCSP_BASICRESP_it", "NETSCAPE_CERT_SEQUENCE_it", "RC2_version", "ff_ac3_slow_decay_tab", "vu9_to_vu12", "ff_mpa_alloc_tables", "ff_live_flv_demuxer", "DSAparams_it", "PROXY_POLICY_it", "ff_hevc_decoder", "ssl3_undef_enc_method", "ff_yuv2rgb_coeffs", "v3_freshest_crl", "ff_h264_decoder", "DSAPublicKey_it", "CMS_ReceiptRequest_it", "x264_cabac_context_init_I", "default_pctx", "POLICYINFO_it", "ff_sine_256", "ssl3_version_str", "yuyvtoyuv420", "ff_cos_256_fixed", "ASN1_IA5STRING_it", "CONF_def_version", "OCSP_REQINFO_it", "OSSL_libdes_version", "tls1_version_str", "x264_8_cabac_transition_unary", "x264_8_cache_ref_func_table", "ff_aac_demuxer", "ff_w_tab_sr", "v3_delta_crl", "ff_sin_1024", "ASN1_FBOOLEAN_it", "PKCS7_ISSUER_AND_SERIAL_it", "x264_coeff_flag_offset_chroma_422_dc", "IDEA_version", "PKCS12_AUTHSAFES_it", "rand_ssleay_meth", "av_camellia_size", "yv12touyvy", "ff_aac_kbd_short_128_fixed", "ff_sine_2048", "rsa_asn1_meths", "avpriv_cga_font", "X9_62_PENTANOMIAL_it", "x264_8_run_before", "x264_coeff_token", "ff_tcp_protocol", "X509_NAME_ENTRIES_it", "MD4_version", "ff_sine_4096", "CMS_SignerInfo_it", "OCSP_SERVICELOC_it", "GENERAL_SUBTREE_it", "x264_8_cache_mv_func_table", "CONF_version", "X509_VAL_it", "ECDSA_version", "x264_count_cat_m1", "ff_cos_32_fixed", "uyvytoyuv420", "ff_dither_8x8_73", "ff_ac3_window", "DSA_version", "ff_put_pixels_clamped", "rgb24to16", "X509_ATTRIBUTE_SET_it", "NETSCAPE_SPKAC_it", "ff_raw_pix_fmt_tags", "av_filter_ffversion", "CMS_KeyAgreeRecipientInfo_it", "ff_h264_cabac_tables", "CMS_EncapsulatedContentInfo_it", "ff_mp3adufloat_decoder", "ff_sine_2048_fixed", "SSL_version_str", "x264_cqm_avci100_1080i_8iy", "X509_EXTENSIONS_it", "ff_aac_spectral_bits", "ff_cos_32768_fixed", "ff_cos_65536", "x264_cqm_jvt8p", "PKCS12_it", "ff_aac_parser", "EXTENDED_KEY_USAGE_it", "ff_hevc_diag_scan4x4_x", "CMS_ReceiptsFrom_it", "ff_aac_eld_window_480", "ASN1_TBOOLEAN_it", "ff_aac_decoder", "ff_mpegtsraw_demuxer", "ff_hls_protocol", "swr_ffversion", "ff_aac_scalefactor_bits", "x264_total_zeros", "ff_https_protocol", "EC_PRIVATEKEY_it", "av_tea_size", "app_pkey_methods", "TLSv1_enc_data", "ff_libx264rgb_encoder", "x264_log2_lut", "ff_cos_512_fixed", "ff_interleaved_dirac_golomb_vlc_code", "ff_crop_tab", "x264_levels", "ff_h264_chroma_qp", "ff_aac_pow34sf_tab", "ASN1_UTCTIME_it", "CRL_DIST_POINTS_it", "ff_cos_65536_fixed", "ASN1_TIME_it", "dsa_pkey_meth", "CAST_S_table2", "OCSP_CERTID_it", "TXT_DB_version", "v3_crl_reason", "ff_ac3_db_per_bit_tab", "ff_mp3float_decoder", "SXNETID_it", "OSSL_DES_version", "ff_mpeg4audio_channels", "RAND_version", "ff_codec_wav_tags", "_shadow_DES_check_key", "DHxparams_it", "x264_cqm_avci100_720p_4ic", "rgb16to15", "v3_ct_scts", "ASN1_INTEGER_it", "yuyvtoyuv422", "x264_coeff0_token", "x509_file_lookup", "ff_codec_movaudio_tags", "ASN1_PRINTABLESTRING_it", "ff_cos_4096_fixed", "ff_swb_offset_1024", "ff_mpa_synth_window_fixed", "hmac_asn1_meth", "x264_8_level_token", "ff_ac3_slow_gain_tab", "CMS_EncryptedContentInfo_it", "POLICY_MAPPINGS_it", "ff_id3v2_3_tags", "X509_CRL_it", "ff_id3v2_34_metadata_conv", "ff_aac_pred_sfb_max", "OCSP_SIGNATURE_it", "ff_mp3_decoder", "x264_cqm_avci50_p_8iy", "RSAPublicKey_it", "ff_tns_max_bands_1024", "ff_mp3on4_decoder", "CAST_S_table3", "ff_zigzag_direct", "ff_aac_codebook_vector_idx", "X509_NAME_it", "GENERAL_NAME_it", "PKCS7_SIGNER_INFO_it", "av_cast5_size", "ASN1_GENERALIZEDTIME_it", "ff_mp3_demuxer", "planar2x", "GENERAL_NAMES_it", "x264_zero", "ff_mpa_quant_steps", "ff_mpa_enwindow", "ff_hevc_pel_weight", "DES_SPtrans", "dhx_asn1_meth", "transform", "ff_sine_512", "ECDSA_SIG_it", "ff_mpegaudio_parser", "ff_aac_profiles", "ff_add_pixels_clamped", "x264_exp2_lut", "ff_eac3_default_cpl_band_struct", "ff_aac_kbd_short_128", "v3_ocsp_crlid", "SHA1_version", "PKCS7_ENC_CONTENT_it", "ff_rawvideo_options", "ff_af_aresample", "PKCS7_ENCRYPT_it", "x264_last_coeff_flag_offset", "ff_h264_profiles", "ff_jpeg2000_profiles", "v3_policy_mappings", "ff_dither_8x8_220", "ff_mpeg4_video_profiles", "x264_significant_coeff_flag_offset_8x8", "ff_file_protocol", "ff_cos_16", "ff_mpa_quant_bits", "rgb24tobgr16", "X509_ALGORS_it", "ff_riff_info_conv", "v3_sxnet", "avfilter_all_channel_layouts", "shuffle_bytes_0321", "ASN1_UNIVERSALSTRING_it", "ff_ac3_rematrix_band_tab", "ff_ac3_channels_tab", "X9_62_CHARACTERISTIC_TWO_it", "SHA512_version", "x264_cqm_jvt4i", "ff_id3v1_genre_str", "ff_cos_128_fixed", "ASN1_SEQUENCE_ANY_it", "ff_aac_latm_decoder", "DIRECTORYSTRING_it", "ff_dca_profiles", "ASN1_VISIBLESTRING_it", "ASN1_SEQUENCE_it", "ff_avcodec_locked", "avpriv_mpa_bitrate_tab", "ff_cos_tabs_fixed", "CMS_RecipientEncryptedKey_it", "x264_8_iter_kludge", "rgb16tobgr24"], "importedglobals": ["__sF"], "importedfunctions": ["strlen", "cosh", "pthread_once", "strncpy", "signal", "exp2f", "atan2", "read", "getpid", "close", "munmap", "getsockopt", "memcpy", "closedir", "posix_memalign", "cbrtf", "nanosleep", "time", "strcat", "unlink", "getaddrinfo", "strtoul", "free", "inflateInit_", "strtod", "tcsetattr", "inflate", "pthread_cond_broadcast", "__errno", "access", "memchr", "cosf", "fileno", "abort", "vsnprintf", "tolower", "pthread_join", "feof", "lseek64", "exp", "strstr", "malloc", "fabs", "fseek", "fseeko", "fputc", "bind", "log2", "shutdown", "stat", "nice", "strcasecmp", "atan", "fread", "pthread_create", "write", "sscanf", "inflateEnd", "rmdir", "isspace", "fprintf", "lstat", "listen", "strrchr", "rename", "readdir", "sysconf", "fopen", "dlclose", "log2f", "pthread_cond_init", "exp2", "getuid", "asin", "gmtime_r", "memcmp", "ferror", "mkstemp", "vfprintf", "hypot", "log", "lrint", "strerror_r", "strpbrk", "socket", "strncmp", "ftell", "bsearch", "calloc", "realloc", "opendir", "frexp", "inflateInit2_", "gettimeofday", "memset", "atof", "strerror", "ftello", "qsort", "open", "pthread_cond_signal", "connect", "log10", "powf", "fclose", "mmap", "strftime", "strncasecmp", "strtok_r", "puts", "isatty", "isxdigit", "fwrite", "pthread_mutex_destroy", "atan2f", "uncompress", "poll", "llrint", "strcspn", "fputs", "isupper", "strspn", "strcmp", "gai_strerror", "strcpy", "recv", "dlopen", "arc4random", "getenv", "pthread_mutex_lock", "localtime_r", "accept", "fcntl", "pthread_mutex_init", "atoi", "dlerror", "cbrt", "send", "cos", "sigaction", "isalnum", "tanh", "dlsym", "pthread_cond_destroy", "llrintf", "pthread_cond_wait", "printf", "strchr", "setsockopt", "sprintf", "mktime", "strtoll", "inet_ntop", "sinf", "__assert2", "snprintf", "fstat", "pow", "fgets", "tcgetattr", "sin", "tan", "getpeername", "memmove", "strtol", "pthread_mutex_unlock", "strdup", "freeaddrinfo", "memalign", "acos", "fflush", "fdopen", "atanf", "zlibCompileFlags", "lrintf", "sinh"], "exportedfunctions": ["X509V3_EXT_free", "PKCS7_RECIP_INFO_get0_alg", "X509_print", "av_free", "x264_8_quant_4x4_trellis", "x264_8_mb_mc_8x8", "x264_8_pixel_sad_x4_8x4_neon", "PEM_read_DSA_PUBKEY", "asn1_ex_c2i", "ff_hevc_put_pixels_w2_neon_8", "avpriv_mpegts_parse_close", "X509_load_crl_file", "engine_table_select", "ff_copy_whitelists", "d2i_PKCS8PrivateKey_fp", "i2d_NOTICEREF", "cms_get0_enveloped", "ff_riff_write_info_tag", "ec_GF2m_simple_point_clear_finish", "ssl_get_handshake_digest", "RSA_set_default_method", "av_set_cpu_flags_mask", "ff_set_common_formats", "DES_encrypt2", "av_add_q", "ec_GF2m_simple_group_get_degree", "CMS_add1_recipient_cert", "ENGINE_set_default_RSA", "EC_EX_DATA_free_data", "X509_REQ_get_attr", "pqueue_next", "SSL_rstate_string_long", "CRL_DIST_POINTS_free", "EVP_PKEY_encrypt_init", "av_version_info", "X509V3_add_value", "av_set_options_string", "EC_curve_nid2nist", "sws_getDefaultFilter", "i2d_ECPrivateKey_fp", "EVP_PKEY_get0", "av_gettime_relative_is_monotonic", "X509_TRUST_cleanup", "d2i_OCSP_CRLID", "BF_decrypt", "sk_free", "PEM_read_bio_Parameters", "d2i_DSAparams", "d2i_PKCS7_DIGEST", "d2i_DIST_POINT_NAME", "BIO_callback_ctrl", "X509_STORE_CTX_get0_current_issuer", "ENGINE_register_all_pkey_meths", "ff_hevc_put_hevc_epel_uni_v32_8_neon", "X509_ATTRIBUTE_free", "X509_STORE_add_cert", "CRYPTO_gcm128_setiv", "dtls1_heartbeat", "EVP_camellia_256_cfb8", "d2i_X509_CERT_AUX", "x264_8_sub8x16_dct_dc_neon", "ff_simple_idct48_add", "av_cast5_alloc", "ff_mp4_read_descr_len", "ENGINE_set_finish_function", "X509_get1_ocsp", "X509_policy_tree_get0_user_policies", "PKCS7_set_attributes", "ssl_add_serverhello_tlsext", "X509_VERIFY_PARAM_set_depth", "avcodec_default_execute2", "CRYPTO_get_id_callback", "ASN1_item_i2d_bio", "PKCS7_ISSUER_AND_SERIAL_new", "X509_NAME_entry_count", "ECDSA_size", "CMS_add_simple_smimecap", "ASN1_STRING_type_new", "SSL_get_current_compression", "ff_reget_buffer", "ff_put_h264_qpel8_mc30_neon", "av_get_channel_description", "ENGINE_unregister_DH", "CRYPTO_destroy_dynlockid", "EVP_cast5_cfb64", "av_format_get_subtitle_codec", "x264_8_predict_4x4_ddl_neon", "a2i_IPADDRESS", "avfilter_graph_queue_command", "tls1_set_curves", "av_aes_ctr_get_iv", "CRYPTO_get_mem_debug_functions", "av_image_check_size", "ff_avg_h264_qpel16_mc20_neon", "ssl_cert_select_current", "get_cdn_ip", "av_application_did_http_open", "av_application_closep", "ff_hevc_set_qPy", "av_opt_get_int", "x264_8_predict_8x8c_h_neon", "PKCS5_PBKDF2_HMAC_SHA1", "ERR_load_PKCS7_strings", "EVP_PKEY_CTX_get_operation", "bn_mul_add_words", "ff_h264_idct_add16intra_10_c", "ff_socket", "ff_inet_aton", "ssl_parse_clienthello_renegotiate_ext", "dtls1_min_mtu", "x264_8_cabac_encode_terminal_asm", "ff_h264_idct_add16_neon", "av_find_default_stream_index", "SSL_CIPHER_get_bits", "DISPLAYTEXT_new", "ff_gen_search", "ec_GFp_simple_group_get_curve", "SSL_CTX_set_client_CA_list", "ENGINE_set_default_RAND", "UI_free", "ERR_load_EC_strings", "av_opt_set", "X509_TRUST_get0", "dtls1_clear", "X509_CRL_get_ext", "CRYPTO_add_lock", "EVP_EncryptUpdate", "SSL_CTX_get_quiet_shutdown", "ASN1_PCTX_get_flags", "BUF_MEM_grow_clean", "cms_DigestedData_init_bio", "ff_put_pixels16_x2_neon", "ff_default_get_video_buffer", "av_calloc", "X509_STORE_get_by_subject", "av_frame_set_pkt_duration", "x264_8_me_refine_bidir_rd", "ff_biweight_h264_pixels_8_neon", "ff_init_ff_cos_tabs_fixed", "x264_8_add16x16_idct_dc_neon", "X509_STORE_CTX_set_flags", "ssl_cert_free", "CMS_get1_certs", "X509_STORE_CTX_set_default", "RSA_PSS_PARAMS_free", "ff_h264_idct_add16_10_c", "cms_DigestedData_create", "ff_hevc_put_qpel_neon_wrapper", "ENGINE_get_prev", "BN_GF2m_mod_arr", "ff_simple_idct_put_8", "ff_update_link_current_pts", "ERR_put_error", "act_transform_8x8_add_8", "avcodec_configuration", "avformat_find_stream_info", "ec_GFp_nist_field_sqr", "ff_isom_write_hvcc", "d2i_OCSP_CERTSTATUS", "avio_wl16", "ff_hevc_put_hevc_qpel_uni_v6_8_neon", "ff_h264_idct_dc_add_14_c", "tls1_check_ec_tmp_key", "sws_getCachedContext", "SSL_has_matching_session_id", "BN_bn2hex", "d2i_PrivateKey_bio", "SRP_generate_server_master_secret", "ff_rtmp_packet_create", "x264_8_zigzag_interleave_8x8_cavlc_neon", "i2d_OCSP_REVOKEDINFO", "ENGINE_register_pkey_meths", "ec_GFp_simple_point_clear_finish", "i2d_PKCS12", "ec_GFp_mont_field_encode", "ff_listen_connect", "ssl_get_sign_pkey", "CRYPTO_ex_data_new_class", "X509_get_default_cert_file_env", "EVP_aes_192_ecb", "i2d_OCSP_RESPDATA", "ssl_parse_serverhello_renegotiate_ext", "EVP_PKEY_set_type", "av_audio_convert_alloc", "MD5_Update", "ff_hevc_rem_intra_luma_pred_mode_decode", "avformat_flush", "X509_VERIFY_PARAM_set1_name", "av_get_picture_type_char", "avpriv_aac_parse_header", "ssl_prepare_clienthello_tlsext", "av_malloc", "cms_CompressedData_create", "X509_get_default_private_dir", "EC_POINT_add", "EVP_PKEY_asn1_get0_info", "PEM_read", "avcodec_find_decoder", "EC_GROUP_get0_seed", "asn1_enc_init", "sk_num", "d2i_NETSCAPE_CERT_SEQUENCE", "x264_8_predict_16x16_dc_neon", "ERR_set_error_data", "x264_8_predict_8x8_vr_neon", "X509_NAME_cmp", "av_opt_set_q", "ff_put_h264_qpel8_mc13_neon", "ff_avg_h264_qpel8_mc31_neon", "ff_h264_execute_decode_slices", "dtls1_clear_sent_buffer", "swri_dither_init", "i2d_PrivateKey_bio", "av_fifo_grow", "PKCS7_digest_from_attributes", "x264_8_macroblock_thread_init", "ff_mov_read_chan", "SSL_set_ssl_method", "EC_KEY_print_fp", "UI_new", "EVP_aes_128_ctr", "ff_hevc_put_hevc_pel_uni_pixels12_8_neon", "ASN1_parse_dump", "d2i_PROXY_POLICY", "ASN1_item_free", "av_format_get_probe_score", "av_timecode_check_frame_rate", "ssl3_send_client_key_exchange", "ff_hevc_put_hevc_qpel_bi_hv48_8_neon", "d2i_ASN1_BMPSTRING", "X509_NAME_add_entry", "ff_hevc_transform_32x32_neon_8", "BIO_get_callback", "ff_mov_iso639_to_lang", "d2i_GENERAL_NAMES", "ff_put_h264_qpel8_mc23_neon", "av_format_set_data_codec", "d2i_ASN1_UINTEGER", "i2d_DSAPrivateKey_bio", "OpenSSL_add_all_ciphers", "SHA_Update", "av_vorbis_parse_free", "i2d_PKCS8_fp", "av_dict_free", "ffio_open_dyn_packet_buf", "SSL_CTX_SRP_CTX_init", "SSL_CTX_ctrl", "PKCS5_pbkdf2_set", "PKCS7_free", "x264_8_pixel_sad_x4_8x8_neon", "PEM_read_bio", "ff_hevc_put_qpel_h3v2_neon_8", "PKCS12_MAKE_SHKEYBAG", "ssl_cert_set_default_md", "X509_STORE_CTX_set0_crls", "d2i_X509", "SSL_set_wfd", "init_taobao_param", "ec_wNAF_have_precompute_mult", "s2i_ASN1_INTEGER", "av_dict_parse_string", "ff_init_desc_fmt_convert", "ff_hevc_put_hevc_qpel_uni_h32_8_neon", "ECDH_OpenSSL", "ENGINE_unregister_pkey_asn1_meths", "BIO_clear_flags", "X509_ALGOR_set0", "X509_SIG_free", "ff_hevc_put_hevc_pel_bi_pixels48_8_neon", "PKCS12_SAFEBAG_free", "X509_CRL_set_default_method", "ff_rtmp_packet_read_internal", "ff_simple_idct_put_12", "av_file_unmap", "ff_hevc_put_hevc_epel_h12_8_neon", "EC_POINT_set_affine_coordinates_GFp", "PEM_read_bio_DSAparams", "PKCS8_pkey_set0", "ec_GF2m_simple_point_init", "PEM_write_RSA_PUBKEY", "EVP_CIPHER_CTX_copy", "av_hash_final_hex", "NCONF_dump_bio", "cms_RecipientInfo_pwri_crypt", "avpriv_align_put_bits", "CMS_RecipientInfo_ktri_get0_signer_id", "ff_h264_idct_add8_422_12_c", "ff_hevc_put_hevc_epel_uni_v24_8_neon", "ENGINE_get_pkey_asn1_meths", "av_fft_calc", "d2i_OCSP_SERVICELOC", "UI_method_get_opener", "avcodec_descriptor_get", "EVP_DigestVerifyFinal", "NETSCAPE_SPKAC_new", "PKCS7_dataInit", "X509_TRUST_set_default", "ssl_clear_bad_session", "ff_h264_idct8_add_14_c", "SRP_VBASE_get_by_user", "UI_dup_error_string", "PKCS7_add_recipient_info", "CMS_RecipientInfo_set0_password", "ff_blend_rectangle", "avpriv_set_pts_info", "EVP_desx_cbc", "BN_get_params", "ff_h264_chroma422_dc_dequant_idct_8_c", "i2d_X509_EXTENSIONS", "av_rescale", "x264_8_predict_8x8c_v_aarch64", "ff_mc_weight", "CMS_unsigned_get_attr", "x264_param_apply_fastfirstpass", "X509_ALGOR_cmp", "X509_STORE_CTX_purpose_inherit", "av_image_fill_pointers", "ff_h264_luma_dc_dequant_idct_8_c", "BN_GF2m_mod_inv", "SRP_Calc_u", "ff_http_averror", "ff_hevc_weight_uni_neon", "EVP_seed_cfb128", "d2i_ASN1_TYPE", "UI_get_input_flags", "PEM_read_PKCS8", "PEM_read_NETSCAPE_CERT_SEQUENCE", "av_codec_get_max_lowres", "SSL_CTX_add_server_custom_ext", "SHA224_Final", "ff_hevc_put_hevc_qpel_bi_hv32_8_neon", "ff_h264_idct_add16intra_8_c", "ff_hevc_mpm_idx_decode", "ASN1_PCTX_set_str_flags", "BF_cfb64_encrypt", "cms_Data_create", "ASN1_TIME_free", "x264_8_predict_16x16_dc_left_neon", "SSL_CTX_use_PrivateKey", "X509_VERIFY_PARAM_set_hostflags", "OCSP_SERVICELOC_free", "USERNOTICE_new", "av_opt_eval_int64", "avio_put_str", "av_guess_format", "ff_hevc_put_qpel_uw_h1v2_neon_8", "ERR_load_X509V3_strings", "av_audio_resample_init", "X509_NAME_print", "BN_get0_nist_prime_192", "EVP_rc4", "DES_key_sched", "swresample_license", "SRP_create_verifier_BN", "EVP_whirlpool", "ff_combine_frame", "SSL_get_ex_new_index", "ff_guess_image2_codec", "set_error_code", "avcodec_free_context", "ff_hevc_put_hevc_pel_bi_pixels4_8_neon", "ec_GFp_simple_oct2point", "X509_NAME_add_entry_by_txt", "av_buffer_create", "av_interleaved_write_uncoded_frame", "ec_GF2m_simple_oct2point", "av_packet_free_side_data", "ASN1_ENUMERATED_get", "lh_doall_arg", "EVP_des_cfb64", "X509_PURPOSE_get0", "EVP_camellia_256_cbc", "ASN1_check_infinite_end", "av_write_trailer", "x264_8_threads_distribute_ratecontrol", "EVP_PKEY_derive_init", "x264_8_pixel_sad_x3_8x4_neon", "ASN1_TIME_to_generalizedtime", "ff_amf_read_bool", "i2d_GENERAL_NAMES", "avcodec_dct_get_class", "X509_CINF_new", "sk_push", "sws_subVec", "X509_NAME_ENTRY_new", "EC_POINT_hex2point", "EVP_PKEY_meth_get_init", "x264_8_cqm_delete", "CRYPTO_get_new_lockid", "av_read_image_line", "ENGINE_set_ECDH", "ASN1_ENUMERATED_new", "d2i_X509_PKEY", "SEED_encrypt", "SHA384", "ASN1_ENUMERATED_to_BN", "PEM_ASN1_write_bio", "BN_sqr", "ASN1_PCTX_get_nm_flags", "X509V3_EXT_cleanup", "RSA_get_ex_new_index", "x264_8_ratecontrol_init_reconfigurable", "AES_encrypt", "PEM_read_PKCS7", "ECDSA_METHOD_get_app_data", "x264_8_macroblock_slice_init", "x264_8_encoder_reconfig_apply", "av_fast_realloc", "SSL_CTX_set_msg_callback", "asn1_get_field_ptr", "bn_sqr_words", "PEM_read_DHparams", "AES_cbc_encrypt", "OPENSSL_asc2uni", "DES_ede3_cbc_encrypt", "ff_hevc_put_pixels_w16_neon_8", "x264_8_lookahead_is_empty", "ff_hevc_put_hevc_epel_uni_h8_8_neon", "X509_check_email", "x264_8_pixel_satd_16x16_neon", "EVP_enc_null", "av_fast_padded_malloc", "SSL_set_client_CA_list", "avfilter_sub_matrix", "x264_8_pixel_sad_16x8_neon", "avio_wl24", "swri_noise_shaping_int16", "EVP_aes_128_cbc", "BIO_write", "av_camellia_init", "X509_STORE_CTX_trusted_stack", "d2i_OCSP_CERTID", "CRYPTO_set_dynlock_create_callback", "x264_8_pixel_hadamard_ac_8x8_neon", "cms_EnvelopedData_init_bio", "ff_choose_timebase", "ff_hevc_put_hevc_epel_hv16_8_neon", "X509_signature_dump", "x264_8_encoder_headers", "WHIRLPOOL_BitUpdate", "EC_KEY_set_public_key_affine_coordinates", "RIPEMD160_Init", "x264_8_predict_8x8_v_neon", "AES_set_encrypt_key", "BN_GF2m_poly2arr", "PEM_read_DSAPrivateKey", "dtls1_start_timer", "EVP_SignFinal", "ff_avg_h264_qpel8_mc12_neon", "ec_GFp_mont_group_init", "ff_avg_h264_qpel16_mc00_neon", "X509_VERIFY_PARAM_get_count", "EVP_PKEY_keygen", "X509_add1_ext_i2d", "private_RC4_set_key", "ec_GFp_mont_group_finish", "X509_STORE_get1_certs", "RSA_set_method", "X509V3_get_value_bool", "ff_mdct_calc_neon", "ASN1_object_size", "av_get_output_timestamp", "ff_insert_pad", "SSL_set_msg_callback", "EVP_CIPHER_CTX_test_flags", "ff_hevc_put_hevc_epel_bi_v32_8_neon", "x264_8_pixel_sad_x4_8x16_neon", "BIO_f_buffer", "ff_replaygain_export_raw", "ASN1_verify", "i2d_PKCS8_PRIV_KEY_INFO_bio", "get_real_ip", "i2d_X509_NAME", "EC_POINT_point2hex", "SSL_CTX_set_next_protos_advertised_cb", "SSL_add_dir_cert_subjects_to_stack", "x264_8_frame_push_blank_unused", "x264_8_plane_copy_deinterleave_c", "x264_8_predict_4x4_v_aarch64", "av_parse_video_rate", "BN_CTX_free", "ff_put_h264_qpel16_mc13_neon", "tls1_save_sigalgs", "x264_8_sync_frame_list_init", "x264_8_pixel_sad_x3_8x8_neon", "avio_rb32", "EVP_des_ofb", "SSL_CTX_set_tmp_dh_callback", "av_log2_i", "av_read_play", "ff_hevc_transform_luma_4x4_neon_8", "avio_rl32", "EVP_DecryptInit_ex", "SSL_CTX_sess_set_remove_cb", "ff_put_h264_qpel16_mc22_neon", "CRYPTO_new_ex_data", "ff_put_h264_qpel8_mc01_neon", "EC_POINT_get_affine_coordinates_GF2m", "x264_8_macroblock_cache_allocate", "SHA1_Transform", "PKCS7_add_certificate", "av_display_matrix_flip", "ff_hevc_put_hevc_epel_bi_v24_8_neon", "ff_hevc_put_hevc_qpel_bi_v64_8_neon", "MDC2_Init", "DH_check", "SSL_CTX_set_trust", "ASN1_TIME_print", "av_packet_clone", "CRYPTO_remove_all_info", "dtls1_read_bytes", "BIO_new_mem_buf", "X509_CERT_AUX_free", "ff_avg_h264_qpel16_mc21_neon", "UI_get0_action_string", "ssl3_do_write", "x264_8_ratecontrol_set_weights", "OTHERNAME_new", "EVP_PKEY_get_default_digest_nid", "ff_channel_layouts_unref", "ENGINE_set_default_digests", "av_dump_format", "PKCS5_pbe2_set_iv", "i2d_PKCS7_NDEF", "ssl_cipher_id_cmp", "i2d_ASN1_BOOLEAN", "PKCS7_signatureVerify", "x264_8_frame_expand_border", "av_buffer_pool_init", "EVP_idea_cbc", "d2i_PKCS8_bio", "av_blowfish_init", "PBEPARAM_new", "X509_policy_tree_get0_policies", "ENGINE_get_DH", "avcodec_profile_name", "av_interleaved_write_frame", "cms_env_asn1_ctrl", "X509_PURPOSE_cleanup", "EVP_PKEY_meth_get0_info", "x264_8_coeff_last64_neon", "CRYPTO_THREADID_get_callback", "ENGINE_ctrl_cmd_string", "SSL_get_info_callback", "EVP_CIPHER_param_to_asn1", "asn1_Finish", "EVP_EncodeInit", "ff_avg_h264_qpel16_mc30_neon", "ssl3_record_sequence_update", "x264_8_zigzag_sub_4x4ac_field_neon", "transform_32x32_add_neon_row", "X509_get_default_cert_dir", "ff_h264_idct_add16_14_c", "X509_NAME_new", "x264_8_predict_4x4_ddr_neon", "ENGINE_set_digests", "SSL_get_servername", "av_opt_show2", "av_application_on_http_event", "ssl3_send_alert", "ff_fdct_ifast", "SRP_Calc_server_key", "x264_8_frame_expand_border_chroma", "EVP_PKEY_CTX_set_data", "av_frame_get_pkt_duration", "CRYPTO_cbc128_encrypt", "X509_CRL_get_ext_by_OBJ", "ECDSA_get_ex_new_index", "avpriv_mpa_decode_header2", "X509V3_get_string", "av_murmur3_alloc", "X509_STORE_CTX_free", "av_chroma_location_name", "x264_encoder_reconfig", "EVP_aes_256_wrap", "OTHERNAME_cmp", "SSL_get_default_timeout", "ff_choose_chroma_location", "EVP_camellia_128_cfb1", "SSL_get_verify_depth", "ff_h264_idct8_add4_8_c", "avfilter_init_filter", "ASN1_OCTET_STRING_new", "SSL_get_srtp_profiles", "av_gettime_relative", "PKCS12_key_gen_uni", "X509_POLICY_NODE_print", "bn_sub_part_words", "CONF_get_number", "ff_init_filters", "EC_EX_DATA_clear_free_all_data", "ssl_session_dup", "ff_mov_close_hinting", "OCSP_sendreq_nbio", "PEM_read_X509_CERT_PAIR", "av_pix_fmt_count_planes", "PEM_write_bio_X509_CERT_PAIR", "DSA_sign_setup", "ASN1_OBJECT_free", "av_samples_fill_arrays", "SSL_CTX_set_cert_store", "ff_thread_report_progress", "x264_8_mbtree_fix8_unpack_neon", "ENGINE_get_finish_function", "UI_get_ex_data", "x264_8_pixel_avg_4x4_neon", "ssl3_get_server_certificate", "ff_riff_write_info", "UI_get_method", "ff_h264_check_intra_pred_mode", "EVP_MD_do_all", "x264_8_macroblock_thread_free", "ssl_get_algorithm2", "X9_62_PENTANOMIAL_new", "ff_hevc_put_hevc_pel_uni_pixels8_8_neon", "EVP_aes_256_cfb8", "SSL_CTX_set_tmp_rsa_callback", "CMS_SharedInfo_encode", "X509_CRL_set_lastUpdate", "CMAC_CTX_free", "ff_hevc_put_hevc_qpel_uni_hv8_8_neon", "SSL_set_quiet_shutdown", "i2c_ASN1_BIT_STRING", "PKCS12_key_gen_asc", "d2i_ASN1_SET_ANY", "ECDSA_set_ex_data", "ff_h264_unref_picture", "bn_mul_comba4", "ff_hevc_put_hevc_epel_uni_h4_8_neon", "EC_GROUP_get_curve_name", "x264_8_mc_weight_w16_offsetsub_neon", "ENGINE_register_ECDSA", "SSL_peek", "ec_GF2m_simple_group_clear_finish", "PEM_write_PKCS8PrivateKey", "RSA_padding_add_PKCS1_PSS_mgf1", "EVP_MD_CTX_set_flags", "cms_EncryptedContent_init", "ENGINE_register_all_DSA", "CMAC_Update", "X509_REVOKED_get_ext_by_NID", "avformat_query_codec", "av_stream_get_side_data", "SSL_set_session_ticket_ext_cb", "SSL_set_fd", "EC_GROUP_get_curve_GF2m", "av_audio_convert", "ENGINE_set_default_DSA", "X509_EXTENSION_set_object", "EVP_aes_256_cbc_hmac_sha1", "ASN1_OCTET_STRING_free", "SEED_set_key", "avcodec_find_best_pix_fmt_of_list", "ff_hevc_put_hevc_qpel_v48_8_neon", "X509_cmp", "d2i_PKCS7_RECIP_INFO", "ff_hcscale_fast_c", "avfilter_link_free", "RSA_padding_add_PKCS1_type_2", "transform_16x16_add_neon_col_4", "EVP_PKEY_meth_get_verify", "BN_bn2bin", "EVP_CIPHER_CTX_free", "BIO_asn1_get_suffix", "avio_get_str16le", "d2i_PKCS8_PRIV_KEY_INFO_fp", "ff_jpeg_fdct_islow_10", "ff_scalarproduct_float_neon", "X509_signature_print", "av_frame_set_pkt_size", "EVP_PKEY_CTX_get0_pkey", "ff_hevc_hls_filters", "EVP_PKEY_meth_get_copy", "i2d_ASN1_UNIVERSALSTRING", "d2i_DISPLAYTEXT", "SSL_set_generate_session_id", "ff_thread_await_progress", "ec_GFp_simple_group_init", "av_fifo_drain", "av_twofish_alloc", "av_opt_get_image_size", "av_timecode_adjust_ntsc_framenum2", "swr_inject_silence", "BN_GF2m_arr2poly", "x264_8_ratecontrol_end", "ff_h264_decode_mb_cabac", "OBJ_obj2txt", "SSL_get_srp_username", "x264_8_cabac_block_residual_8x8_rd_c", "x264_8_encoder_reconfig", "ECDSA_get_ex_data", "dtls1_is_timer_expired", "X509_ATTRIBUTE_set1_object", "BN_nist_mod_256", "cms_set1_keyid", "ff_h264_idct_add16intra_14_c", "dsa_builtin_paramgen", "ff_put_pixels16_x2_no_rnd_neon", "X509_VERIFY_PARAM_add0_policy", "PKCS7_set_digest", "ERR_load_X509_strings", "ec_GF2m_simple_point_set_to_infinity", "av_image_get_buffer_size", "CRYPTO_THREADID_cmp", "swresample_version", "av_probe_input_buffer", "x264_8_quant_4x4_neon", "CRYPTO_dbg_realloc", "ff_request_frame_to_filter", "avformat_write_header", "SEED_cbc_encrypt", "EVP_PKEY_asn1_free", "CMS_RecipientInfo_set0_key", "ENGINE_set_default_pkey_meths", "sws_freeVec", "BN_rshift1", "EVP_VerifyFinal", "x264_8_deblock_v_chroma_neon", "ff_hevc_put_hevc_epel_uni_h24_8_neon", "ASN1_STRING_new", "PEM_read_bio_RSAPublicKey", "ff_ps_ctx_init", "ff_dct_end", "x264_8_mc_weight_w16_neon", "EC_GROUP_check_discriminant", "X509_VERIFY_PARAM_get0", "PEM_read_bio_PUBKEY", "ASN1_STRING_set_default_mask", "x264_8_pixel_sad_x3_8x16_neon", "ERR_peek_error_line_data", "BN_gcd", "x264_8_memzero_aligned_neon", "av_codec_next", "ff_hevc_save_states", "ENGINE_set_name", "CRYPTO_ccm128_tag", "x264_malloc", "PEM_write_bio_PUBKEY", "BIO_set_callback", "ff_hevc_put_hevc_qpel_hv4_8_neon", "ff_put_bmp_header", "SSL_get_shared_sigalgs", "i2d_ASN1_TIME", "BN_div_word", "ff_sws_init_range_convert", "ff_brktimegm", "ff_hevc_sao_offset_abs_decode", "av_frame_get_color_range", "COMP_expand_block", "X509_REQ_get_attr_count", "av_opt_eval_q", "SSL_CIPHER_get_name", "CRYPTO_gcm128_encrypt", "BIO_vsnprintf", "av_xiphlacing", "EC_KEY_set_asn1_flag", "ff_alloc_extradata", "asn1_do_lock", "X509_EXTENSION_new", "av_color_range_name", "ASN1_OCTET_STRING_dup", "X509_REVOKED_add_ext", "ff_jref_idct_add", "d2i_NETSCAPE_SPKAC", "ff_pred16x16_hor_neon", "swscale_license", "EVP_PKEY_meth_set_keygen", "ff_hevc_put_hevc_pel_bi_pixels12_8_neon", "avformat_get_class", "ff_hevc_put_hevc_qpel_bi_h16_8_neon", "OBJ_dup", "x264_8_predict_8x8c_p_neon", "RSA_blinding_off", "ASN1_TIME_diff", "ff_mov_lang_to_iso639", "bn_div_words", "asn1_template_print_ctx", "OPENSSL_ia32cap_loc", "ff_thread_flush", "av_sha512_alloc", "GENERAL_SUBTREE_free", "_CONF_get_section", "av_codec_set_chroma_intra_matrix", "BUF_MEM_new", "av_format_set_control_message_cb", "ssl3_send_change_cipher_spec", "ff_h264_idct_dc_add_8_c", "ECDSA_set_method", "EVP_PKEY_delete_attr", "DISPLAYTEXT_free", "x264_8_cabac_encode_bypass_asm", "ff_vector_fmul_add_neon", "ff_hevc_put_hevc_epel_uni_h6_8_neon", "BN_pseudo_rand_range", "av_lockmgr_register", "ff_replaygain_export", "SSL_clear", "PKCS7_get_signed_attribute", "SXNET_add_id_asc", "AES_unwrap_key", "TLSv1_client_method", "ASN1_UTCTIME_free", "x264_encoder_headers", "d2i_DSAPublicKey", "ENGINE_set_DH", "RSA_padding_add_PKCS1_type_1", "ff_hevc_put_qpel_uni_neon_wrapper", "ff_graph_thread_init", "ff_j_rev_dct", "DSO_set_default_method", "DSA_SIG_new", "X509_CRL_digest", "SSL_CTX_set_default_passwd_cb", "av_guess_frame_rate", "i2d_ASN1_NULL", "x264_picture_init", "ENGINE_get_first", "ff_er_frame_start", "ff_thread_get_format", "ec_GF2m_simple_dbl", "x264_8_coeff_level_run15_neon", "ff_mdct_end_fixed", "EVP_PKEY2PKCS8", "BN_GF2m_mod_sqrt", "SSL_set_shutdown", "BF_set_key", "d2i_PUBKEY_fp", "BIO_sock_non_fatal_error", "avio_get_str16be", "x264_8_pixel_ssd_wxh", "ENGINE_set_table_flags", "EVP_PBE_find", "ASN1_i2d_bio", "i2d_PKCS8PrivateKey_nid_bio", "av_bmg_get", "avfilter_graph_get_filter", "X509_PURPOSE_get_by_id", "dtls1_get_cipher", "tls1_export_keying_material", "d2i_DSA_PUBKEY_bio", "OBJ_sn2nid", "TXT_DB_write", "ff_command_queue_pop", "SHA224_Init", "PEM_ASN1_read_bio", "x264_8_pixel_ssd_4x4_neon", "ffurl_get_multi_file_handle", "ff_hevc_put_hevc_qpel_bi_hv24_8_neon", "i2d_PKCS7_DIGEST", "ec_GFp_simple_cmp", "av_opt_set_sample_fmt", "transform_16x16_add_neon_col", "av_opt_get_video_rate", "PKCS7_ENCRYPT_free", "x264_8_predict_8x8c_init_aarch64", "BN_BLINDING_new", "n_ssl3_mac", "avformat_get_riff_video_tags", "av_samples_alloc", "swr_convert", "EVP_aes_128_cfb128", "SSL_ctrl", "dtls1_send_change_cipher_spec", "sws_alloc_set_opts", "av_sdp_create", "EVP_PKEY_CTX_ctrl_str", "x264_8_mb_predict_mv", "x264_log_default", "PEM_write_bio_PKCS8", "ssl_add_serverhello_renegotiate_ext", "EVP_camellia_128_cbc", "av_stream_get_recommended_encoder_configuration", "OBJ_bsearch_ssl_cipher_id", "EVP_MD_CTX_test_flags", "PKCS7_set_type", "av_write_image_line", "X509_REQ_sign", "EVP_PKEY_set1_DSA", "x264_8_pixel_satd_4x8_neon", "EC_GFp_mont_method", "PKCS7_add_attrib_smimecap", "ff_hevc_put_hevc_epel_h16_8_neon", "ssl_clear_cipher_ctx", "ff_hevc_put_hevc_epel_hv4_8_neon", "av_bprint_chars", "av_sub_q", "i2d_EC_PRIVATEKEY", "i2d_X509_PUBKEY", "av_picture_copy", "X509_OBJECT_free_contents", "ERR_error_string", "avfilter_get_class", "EVP_PKEY_asn1_get_count", "CAST_set_key", "av_timecode_init", "UI_set_ex_data", "pqueue_insert", "x264_encoder_invalidate_reference", "CRYPTO_lock", "SSL_get_psk_identity_hint", "av_audio_fifo_peek", "EVP_des_ede3_cfb64", "rgb15to24", "PEM_write_RSAPrivateKey", "ASN1_seq_pack", "X509_VERIFY_PARAM_set1_email", "ASN1_generate_v3", "BN_BLINDING_convert", "X509_EXTENSION_create_by_NID", "UI_method_set_flusher", "i2d_X509_ATTRIBUTE", "av_expr_parse_and_eval", "ssl_cert_add1_chain_cert", "x264_8_mbtree_propagate_list_internal_neon", "ssl_cert_set_cert_cb", "d2i_ASN1_T61STRING", "ASN1_TIME_set", "av_vorbis_parse_frame", "ff_hevc_sao_edge_filter_8_neon", "BIO_free", "ff_hevc_cbf_cb_cr_decode", "ffurl_read_complete", "OCSP_CERTSTATUS_free", "i2d_PKCS8_PRIV_KEY_INFO_fp", "av_frame_remove_side_data", "EVP_camellia_256_cfb128", "ENGINE_register_all_RSA", "d2i_PKCS8_PRIV_KEY_INFO_bio", "x264_8_predict_lossless_chroma", "PKCS12_item_pack_safebag", "x264_8_frame_init_lowres_core_neon", "EVP_add_cipher", "X509at_get_attr_by_OBJ", "ff_tls_deinit", "tls1_set_cert_validity", "ff_alloc_packet2", "CAST_decrypt", "X509_VERIFY_PARAM_get_flags", "X509V3_string_free", "av_guess_codec", "ff_h264_idct_dc_add_neon", "ff_pred8x8_l0t_dc_neon", "avpriv_request_sample", "EVP_PKEY_verify", "X9_62_PENTANOMIAL_free", "ff_avg_h264_qpel8_mc23_neon", "d2i_int_dhx", "OBJ_NAME_remove", "CMS_signed_add1_attr_by_txt", "EC_GROUP_copy", "ENGINE_register_ECDH", "ff_hevc_put_qpel_uw_weight_v1_neon_8", "CMS_get1_crls", "ASN1_BIT_STRING_get_bit", "PEM_write_X509_CERT_PAIR", "OPENSSL_DIR_read", "OBJ_obj2nid", "DES_ofb64_encrypt", "X509_TRUST_get_flags", "CRYPTO_gcm128_aad", "chroma_mc_fixed_bs_put_avg", "tls1_enc", "swr_config_frame", "av_codec_is_decoder", "EVP_CIPHER_flags", "ff_h264_get_profile", "OCSP_REVOKEDINFO_free", "av_codec_get_codec_properties", "x264_8_mc_weight_w8_offsetsub_neon", "d2i_PKCS7_ISSUER_AND_SERIAL", "DSO_METHOD_dlfcn", "d2i_RSAPublicKey_bio", "sws_setColorspaceDetails", "sws_getGaussianVec", "ff_all_formats", "ff_accept", "pqueue_pop", "av_grow_packet", "CRYPTO_set_locked_mem_ex_functions", "ff_hevc_put_hevc_pel_pixels32_8_neon", "ssl_sess_cert_new", "ff_hevc_cu_qp_delta_sign_flag", "ff_hevc_put_hevc_epel_hv64_8_neon", "av_buffer_default_free", "rgb15tobgr32", "X509_VERIFY_PARAM_get0_name", "ff_hevc_put_hevc_epel_hv12_8_neon", "ff_h264_idct_add16intra_12_c", "ff_default_query_formats", "x264_8_analyse_init_costs", "ERR_load_ERR_strings", "ff_mpadsp_apply_window_fixed_neon", "SSL_CTX_set_alpn_protos", "av_probe_input_format2", "av_dynarray_add", "av_xtea_crypt", "EVP_aes_256_gcm", "av_get_media_type_string", "SSL_get_read_ahead", "tls1_final_finish_mac", "RAND_poll", "OPENSSL_init", "x264_8_quant_8x8_trellis", "GENERAL_NAMES_free", "ff_id3v2_read", "avfilter_graph_dump", "i2d_X509_CRL", "EVP_aes_192_cfb128", "EVP_dss", "ff_hevc_put_hevc_epel_uni_hv12_8_neon", "ff_hex_to_data", "EVP_PKEY_meth_get_verifyctx", "EVP_dss1", "X509_REQ_add1_attr_by_NID", "x264_8_me_refine_qpel", "ENGINE_get_ECDH", "ec_GF2m_simple_invert", "av_strdup", "ECDH_KDF_X9_62", "CRYPTO_set_dynlock_destroy_callback", "d2i_SSL_SESSION", "OCSP_ONEREQ_new", "ff_vector_fmul_scalar_neon", "set_server_ip", "ASN1_const_check_infinite_end", "x264_8_cqm_parse_file", "ff_h264_init_cabac_states", "x264_8_deblock_strength_neon", "cms_set1_ias", "x264_8_threadpool_delete", "ff_make_formatu64_list", "ff_mdct_init_fixed_32", "ff_weight_h264_pixels_16_neon", "EC_POINT_method_of", "ff_draw_supported_pixel_formats", "SSL_get_servername_type", "CMS_SignedData_init", "x264_8_predict_8x8c_v_c", "PEM_write_bio_CMS", "ff_h264_draw_horiz_band", "CONF_dump_bio", "ssl_cert_set_current", "EC_KEY_print", "ff_thread_init", "SSL_set_session_id_context", "SHA1_Update", "ssl3_get_finished", "ff_hevc_put_qpel_h2v2_neon_8", "EVP_DigestSignFinal", "ERR_load_OCSP_strings", "ERR_peek_last_error_line", "EVP_CIPHER_get_asn1_iv", "avfilter_mul_matrix", "SSL_get_privatekey", "EC_POINT_copy", "EVP_PKEY_paramgen_init", "ff_imdct36_blocks_fixed", "x264_8_zigzag_sub_8x8_frame_neon", "av_opt_find", "DH_get_default_method", "av_murmur3_update", "SRP_generate_client_master_secret", "X509_STORE_set_lookup_crls_cb", "av_get_sample_fmt_string", "ec_GFp_simple_group_finish", "BUF_MEM_free", "i2o_ECPublicKey", "UI_method_get_writer", "av_md5_final", "dtls1_get_message_header", "RSA_get_method", "ssl_load_ciphers", "CMS_RecipientInfo_kari_set0_pkey", "EVP_CIPHER_CTX_get_app_data", "av_bprint_escape", "ff_er_frame_end", "ENGINE_cleanup", "ASN1_item_ex_d2i", "OCSP_SERVICELOC_new", "DSA_new", "ff_hevc_put_hevc_qpel_bi_h4_8_neon", "PKCS12_decrypt_skey", "x264_8_plane_copy_deinterleave_neon", "EVP_PKEY_save_parameters", "ff_hevc_put_hevc_pel_bi_pixels32_8_neon", "X509_PUBKEY_set", "PKCS7_get_signer_info", "ff_h264_remove_all_refs", "ERR_pop_to_mark", "EVP_PKEY_meth_set_decrypt", "i2d_ECPKPARAMETERS", "EVP_PKEY_meth_get_sign", "ff_avg_pixels16_neon", "av_nearer_q", "av_hmac_calc", "x264_8_add16x16_idct_neon", "DES_set_key", "PEM_read_bio_DSA_PUBKEY", "av_aes_crypt", "av_timecode_init_from_string", "bn_expand2", "EVP_aes_256_ccm", "d2i_RSA_PUBKEY_fp", "EVP_seed_ecb", "avcodec_encode_video", "x264_8_sub16x16_dct_neon", "av_frame_get_colorspace", "_CONF_get_string", "ff_hevc_put_hevc_qpel_uni_h4_8_neon", "ff_http_auth_create_response", "EVP_cast5_ofb", "ff_thread_report_progress2", "ASN1_STRING_get_default_mask", "ff_vector_fmul_neon", "ff_hevc_put_hevc_qpel_bi_hv16_8_neon", "ff_hevc_put_hevc_pel_pixels6_8_neon", "ff_pred16x16_dc_neon", "SSL_CTX_set_verify", "ssl3_cleanup_key_block", "av_tea_init", "RC2_decrypt", "av_bprintf", "ff_hevc_put_hevc_qpel_uni_h8_8_neon", "ff_avfilter_link_set_out_status", "ff_hevc_put_hevc_epel_bi_hv8_8_neon", "X509_REVOKED_add1_ext_i2d", "ff_hevc_put_hevc_qpel_hv24_8_neon", "ff_h264_chroma_dc_dequant_idct_10_c", "PBE2PARAM_new", "ff_avg_pixels8_neon", "avformat_alloc_context", "PEM_read_bio_DSAPrivateKey", "X509_NAME_print_ex_fp", "avio_seek_time", "ASN1_UNIVERSALSTRING_to_string", "SSL_get0_param", "EVP_MD_CTX_clear_flags", "CMAC_resume", "av_ripemd_init", "BN_GF2m_mod_sqr", "swri_audio_convert_alloc", "av_packet_split_side_data", "ff_make_format_list", "ffurl_protocol_next", "SSL_rstate_string", "ff_imdct_calc_c_fixed", "SSL_CTX_set_alpn_select_cb", "ssl3_setup_read_buffer", "DSA_verify", "av_get_default_channel_layout", "av_opt_set_defaults", "x264_8_cabac_encode_terminal_c", "i2d_DSAPublicKey", "ENGINE_set_flags", "ERR_get_err_state_table", "ffio_init_context", "x264_8_sps_init", "NCONF_free_data", "X509V3_EXT_val_prn", "OCSP_REQUEST_free", "av_log_set_flags", "EVP_CIPHER_CTX_key_length", "d2i_RSAPublicKey", "avio_open_dir", "BN_GF2m_add", "pqueue_print", "ERR_get_string_table", "CRYPTO_xts128_encrypt", "d2i_OCSP_RESPONSE", "av_parse_ratio", "EVP_DecodeInit", "ff_h264_v_loop_filter_luma_neon", "EVP_MD_CTX_cleanup", "ff_jref_idct_put", "sk_insert", "OCSP_REQ_CTX_i2d", "av_samples_alloc_array_and_samples", "swri_rematrix_init", "av_color_space_name", "ff_init_slice_from_src", "GENERAL_NAME_get0_otherName", "ENGINE_get_static_state", "x264_8_mc_copy_w4_neon", "BUF_strdup", "ff_hevc_put_hevc_pel_uni_pixels48_8_neon", "RAND_query_egd_bytes", "ASN1_INTEGER_new", "av_apply_bitstream_filters", "av_bprint_strftime", "BIO_get_ex_data", "av_des_alloc", "x264_8_ratecontrol_delete", "x264_8_memcpy_aligned_neon", "custom_exts_copy", "ff_hevc_put_hevc_epel_uni_h48_8_neon", "ERR_peek_error", "avpriv_mpa_decode_header", "ffurl_register_protocol", "ERR_load_CMS_strings", "ff_hevc_put_hevc_epel_bi_h6_8_neon", "BN_GF2m_mod_solve_quad", "ff_parse_pixel_format", "pqueue_peek", "x264_8_zigzag_sub_8x8_field_neon", "av_shr_i", "X509_print_fp", "x264_8_sps_write", "ssl3_get_certificate_request", "CMS_dataFinal", "SSL_CTX_set_cipher_list", "ssl3_client_hello", "EVP_PKEY_meth_add0", "BIO_f_asn1", "AES_wrap_key", "av_buffersrc_write_frame", "transform_32x32_add_neon_row_4", "ffio_open2_wrapper", "sk_delete_ptr", "BN_get_word", "ssl3_num_ciphers", "ff_hevc_idct_8x8_dc_neon_8", "av_opt_query_ranges", "avcodec_find_decoder_by_name", "ff_thread_video_encode_frame", "BN_is_prime_fasttest_ex", "av_dv_frame_profile", "av_oformat_next", "EVP_PKEY_meth_set_derive", "X509_set_notBefore", "ff_put_pixels8_y2_no_rnd_neon", "BIO_dup_chain", "X509v3_get_ext", "ASN1_template_d2i", "SSL_CTX_set_client_cert_cb", "audio_resample_close", "engine_table_register", "OCSP_BASICRESP_new", "BIO_dump_cb", "X509_set_pubkey", "ff_prores_idct", "BIO_number_read", "X509_policy_tree_level_count", "EVP_aes_128_cfb1", "d2i_X509_PUBKEY", "SSL_get_rbio", "CMS_RecipientEncryptedKey_get0_id", "X509V3_EXT_add_list", "ff_h264_decode_slice_header", "ff_hevc_frame_rps", "OBJ_NAME_new_index", "ff_find_stream_index", "ff_hevc_put_qpel_uw_weight_h3v2_neon_8", "x264_8_predict_16x16_v_c", "SSL_SESSION_get0_peer", "ff_hevc_decode_nal_vps", "ff_pred_weight_table", "ssl3_finish_mac", "BN_set_word", "x264_8_pixel_ssd_4x16_neon", "avcodec_enum_to_chroma_pos", "OCSP_RESPBYTES_new", "av_frame_unref", "av_cast5_crypt2", "ff_hevc_slice_rpl", "ENGINE_set_load_pubkey_function", "x264_8_hpel_filter_neon", "PKCS7_SIGNED_new", "x264_8_filler_write", "av_buffer_allocz", "ssl_set_client_disabled", "CMS_RecipientInfo_set0_pkey", "dtls1_accept", "EVP_PKEY_meth_set_sign", "SSL_get1_session", "bn_mul_words", "ec_GF2m_simple_group_get_curve", "ASN1_UNIVERSALSTRING_new", "X509_LOOKUP_by_alias", "X509V3_add1_i2d", "ff_hevc_put_hevc_epel_hv8_8_neon", "ff_mpa_synth_filter_fixed", "SSL_state", "DH_get_2048_224", "av_format_set_audio_codec", "SSL_renegotiate_pending", "cms_DigestAlgorithm_init_bio", "ssl_bytes_to_cipher_list", "SSL_COMP_free_compression_methods", "SSL_check_chain", "ASN1_STRING_length_set", "PEM_read_bio_SSL_SESSION", "ff_hevc_put_hevc_pel_pixels8_8_neon", "BN_mod_sqr", "RAND_egd_bytes", "av_hmac_alloc", "i2d_PKCS7_SIGNER_INFO", "SSL_CTX_new", "av_des_crypt", "X509_STORE_CTX_get0_parent_ctx", "x264_8_pixel_hadamard_ac_8x16_neon", "av_fifo_freep", "SHA256_Init", "ff_blend_mask", "ENGINE_get_next", "d2i_DHxparams", "ASN1_GENERALIZEDTIME_set_string", "CRYPTO_cfb128_8_encrypt", "policy_data_new", "x264_8_cabac_encode_ue_bypass", "DTLSv1_2_server_method", "_CONF_free_data", "x264_8_ratecontrol_new", "PKCS7_content_new", "ERR_reason_error_string", "BIO_ptr_ctrl", "SSL_extension_supported", "PEM_write_bio_X509_AUX", "ff_dv_frame_profile", "ERR_print_errors_fp", "ff_pred8x8_128_dc_neon", "av_opt_set_dict", "ff_put_pixels16_neon", "ASN1_VISIBLESTRING_free", "d2i_SXNET", "d2i_PKEY_USAGE_PERIOD", "CONF_module_get_usr_data", "EC_GROUP_set_point_conversion_form", "i2d_X509_SIG", "swri_oldapi_conv_fltp_to_s16_2ch_neon", "Camellia_EncryptBlock_Rounds", "x264_8_sps_init_reconfigurable", "i2d_RSAPrivateKey", "ff_hevc_transform_add_32x32_neon_8", "CRYPTO_pop_info", "UI_set_default_method", "ff_h264_slice_context_init", "ff_h264_idct_add8_12_c", "GENERAL_SUBTREE_new", "ff_amf_tag_size", "av_stream_set_r_frame_rate", "NAME_CONSTRAINTS_new", "X509_VERIFY_PARAM_set_flags", "ff_metadata_conv_ctx", "X509V3_conf_free", "X509_get_ext_by_OBJ", "X509_get_issuer_name", "ASN1_item_ex_free", "av_register_bitstream_filter", "PKCS5_v2_PBE_keyivgen", "ff_init_desc_cfmt_convert", "ec_GFp_simple_group_set_curve", "ff_h264_idct_dc_add_9_c", "SSL_set_srp_server_param", "get_one_stream", "i2d_DSA_PUBKEY_bio", "EVP_aes_256_ctr", "ENGINE_unregister_DSA", "GENERAL_NAME_dup", "av_parse_time", "avio_open_dyn_buf", "av_frame_free", "X509V3_get_section", "swri_get_dither", "ssl3_release_write_buffer", "ENGINE_set_pkey_asn1_meths", "ENGINE_get_id", "DTLSv1_2_method", "x264_8_predict_4x4_h_c", "x264_8_frame_push_unused", "DSA_new_method", "SSL_set_psk_client_callback", "avpicture_layout", "ec_GF2m_have_precompute_mult", "_CONF_get_section_values", "PKCS7_SIGNER_INFO_get0_algs", "x264_param_default_preset", "av_read_frame", "av_tree_node_alloc", "PKCS7_ENC_CONTENT_new", "EVP_PKEY_asn1_find", "ff_pred8x8_dc_neon", "ff_hevc_put_hevc_pel_pixels16_8_neon", "ff_h264_idct8_dc_add_8_c", "ff_h264_v_loop_filter_chroma_neon", "av_opt_free", "SSL_get_peer_finished", "BN_CTX_start", "X509at_add1_attr_by_NID", "avio_rb24", "avpriv_mpegts_parse_packet", "x264_8_threadpool_run", "EVP_ripemd160", "SSL_SESSION_free", "ff_hevc_put_hevc_pel_bi_pixels24_8_neon", "EVP_CipherFinal", "ssl3_clear", "x264_8_mc_init_aarch64", "SRP_create_verifier", "RSA_PKCS1_SSLeay", "X509V3_add_value_int", "EVP_CIPHER_CTX_init", "BN_dec2bn", "i2v_GENERAL_NAME", "CMS_SignerInfo_get0_pkey_ctx", "ssl_cert_add0_chain_cert", "ff_put_pixels16_xy2_neon", "PEM_do_header", "EVP_PKEY_print_public", "X509_subject_name_hash", "DSO_bind_func", "EVP_mdc2", "ffio_fdopen", "CMS_add0_crl", "ASN1_sign", "PKCS12_item_i2d_encrypt", "ff_init_ff_sine_windows", "av_xtea_le_init", "ff_h264_idct8_add4_9_c", "av_application_alloc", "ff_hevc_inter_pred_idc_decode", "ff_hevc_put_hevc_qpel_bi_h32_8_neon", "ff_put_h264_qpel8_mc21_neon", "ENGINE_register_RSA", "X509_NAME_hash_old", "DSO_set_method", "PEM_write_X509_REQ", "ff_h264_chroma_dc_dequant_idct_8_c", "EVP_bf_cfb64", "EVP_PBE_CipherInit", "SSL_alert_desc_string", "EVP_CIPHER_type", "OBJ_new_nid", "av_timegm", "av_get_packed_sample_fmt", "EVP_aes_192_gcm", "RSA_padding_add_X931", "X509_VERIFY_PARAM_set1_host", "ec_GFp_simple_field_sqr", "SSL_COMP_get_compression_methods", "av_packet_from_data", "ENGINE_ctrl_cmd", "X509_PURPOSE_get_trust", "EVP_PKEY_meth_get_verify_recover", "x264_8_dct_init", "ff_h264_free_context", "policy_node_match", "avio_open2", "X509_LOOKUP_init", "i2d_PBKDF2PARAM", "ff_faandct", "Camellia_DecryptBlock", "PKCS12_x5092certbag", "ssl3_check_cert_and_algorithm", "EVP_aes_256_cbc_hmac_sha256", "ASN1_get_object", "X509_keyid_get0", "SSL_get_finished", "i2d_CRL_DIST_POINTS", "ff_mpadsp_init_aarch64", "ENGINE_register_all_DH", "ff_h264_chroma422_dc_dequant_idct_12_c", "SSL_COMP_get_name", "DSO_set_name_converter", "ff_configure_buffers_for_index", "OCSP_REQ_CTX_nbio_d2i", "ff_avg_h264_qpel8_mc10_neon", "ASN1_TIME_set_string", "i2d_PKCS8_bio", "d2i_ECPrivateKey_bio", "RSA_setup_blinding", "x264_8_pps_write", "ff_mov_read_esds", "ff_id3v1_read", "av_opt_ptr", "EVP_PKEY_meth_get_cleanup", "avfilter_graph_parse_ptr", "i2d_PKCS7_ISSUER_AND_SERIAL", "x264_8_mc_chroma_neon", "x264_8_predict_8x16c_dc_c", "OCSP_SIGNATURE_free", "ff_hevc_put_hevc_qpel_h24_8_neon", "ff_hevc_put_hevc_qpel_hv32_8_neon", "avpriv_h264_has_num_reorder_frames", "ec_GFp_mont_group_set_curve", "ec_GF2m_simple_field_mul", "i2a_ACCESS_DESCRIPTION", "SSL_CTX_set_ex_data", "BIO_vfree", "i2s_ASN1_OCTET_STRING", "i2d_ASN1_bytes", "avio_open", "X509_ALGOR_dup", "HMAC_CTX_init", "TXT_DB_create_index", "UI_get_ex_new_index", "av_probe_input_format", "av_add_index_entry", "HMAC_CTX_copy", "CRYPTO_THREADID_set_pointer", "DH_set_method", "EVP_PKEY_missing_parameters", "i2d_PBEPARAM", "X509_digest", "PKCS12_BAGS_free", "CMS_RecipientInfo_decrypt", "ASN1_ENUMERATED_set", "ff_hevc_put_hevc_epel_bi_h8_8_neon", "x264_8_pixel_sad_16x16_neon", "ssl3_callback_ctrl", "ff_fill_rgba_map", "avio_put_str16be", "SSL_CTX_use_RSAPrivateKey_file", "ssl_cert_set1_chain", "ECDSA_set_default_method", "ff_avg_pixels16_xy2_no_rnd_neon", "sws_addVec", "EC_POINT_make_affine", "ff_hevc_log2_res_scale_abs", "DTLS_method", "ff_formats_unref", "BN_add_word", "avpriv_init_lls", "av_freep", "ssl_verify_alarm_type", "SSL_get_version", "PKCS7_SIGNER_INFO_set", "avfilter_config_links", "OBJ_txt2nid", "av_packet_rescale_ts", "ff_openssl_init", "av_get_standard_channel_layout", "SSL_get_peer_cert_chain", "EVP_Digest", "swri_noise_shaping_double", "X509_REQ_get_attr_by_OBJ", "ASN1_PRINTABLE_free", "i2d_X509_AUX", "ssl3_write_bytes", "EC_KEY_get0_public_key", "EVP_CIPHER_CTX_cleanup", "SSL_get_verify_result", "ASN1_IA5STRING_new", "av_get_colorspace_name", "PEM_write_bio_CMS_stream", "ff_get_format", "ff_hevc_split_transform_flag_decode", "policy_node_cmp_new", "d2i_ECParameters", "ssl3_get_cipher", "ff_h264_idct8_add_9_c", "RIPEMD160_Final", "X509_NAME_get_index_by_OBJ", "avio_find_protocol_name", "TXT_DB_read", "X509_VERIFY_PARAM_set1_policies", "d2i_ASN1_NULL", "DTLSv1_server_method", "ff_hevc_mvp_lx_flag_decode", "ff_hevc_ref_idx_lx_decode", "SSL_SESSION_set_timeout", "EVP_PKEY_asn1_set_free", "EVP_PKEY_asn1_set_item", "PEM_bytes_read_bio", "av_fifo_generic_read", "OBJ_NAME_get", "CMS_unsigned_add1_attr", "av_sha512_update", "i2d_RSA_PUBKEY_bio", "PEM_write_X509_CRL", "av_packet_shrink_side_data", "X509V3_EXT_get_nid", "EVP_CIPHER_CTX_set_app_data", "X509_REQ_extension_nid", "av_iformat_next", "SSL_get_shared_ciphers", "s2i_ASN1_OCTET_STRING", "OBJ_bsearch_", "EVP_PKEY_keygen_init", "d2i_X509_CRL_bio", "ff_rtmp_packet_dump", "PKCS7_ENCRYPT_new", "SSL_CTX_set_info_callback", "x264_8_mc_weight_w16_nodenom_neon", "avpriv_new_chapter", "ASN1_STRING_data", "RSA_verify", "ssl3_send_client_certificate", "x264_8_integral_init8h_neon", "ff_fft_end_fixed", "x264_8_mc_weight_w20_nodenom_neon", "UI_ctrl", "ff_fdct_ifast248", "ff_mdct_calc_c_fixed", "bn_mul_part_recursive", "SSL_CTX_set_srp_password", "ASN1_d2i_bio", "cms_SignerIdentifier_get0_signer_id", "ENGINE_set_destroy_function", "UI_new_method", "av_log_set_callback", "ENGINE_register_all_ECDH", "CRYPTO_cfb128_1_encrypt", "sws_isSupportedOutput", "PKCS7_set_content", "OBJ_bsearch_ex_", "BIO_find_type", "PKCS7_ctrl", "ff_mov_get_lpcm_codec_id", "CONF_modules_free", "ff_decode_frame_props", "ff_unlock_avcodec", "ff_vector_dmul_scalar_neon", "ERR_lib_error_string", "ff_hyscale_fast_c", "ff_reduce_index", "ff_pred8x8_l00_dc_neon", "x264_8_integral_init8v_neon", "COMP_CTX_free", "av_write_uncoded_frame", "ffurl_open_whitelist", "DSA_free", "avfilter_graph_parse", "avformat_free_context", "ssl_cert_dup", "ff_find_last_ts", "av_get_pcm_codec", "EVP_PKEY_asn1_set_private", "x264_8_predict_8x16c_init_aarch64", "dtls1_do_write", "ff_mov_cenc_init", "EVP_des_ecb", "ASN1_STRING_free", "ff_lock_avcodec", "av_thread_message_queue_set_free_func", "BN_mod_exp_mont_consttime", "x264_picture_clean", "tls1_default_timeout", "NOTICEREF_free", "x264_8_macroblock_probe_skip", "TLSv1_1_method", "EVP_PKEY_CTX_get_app_data", "CRYPTO_gcm128_finish", "ff_put_wav_header", "tls12_get_sigandhash", "ssleay_rand_bytes", "ff_hevc_put_qpel_h2v1_neon_8", "CRYPTO_get_locked_mem_ex_functions", "EVP_PKEY_asn1_set_ctrl", "x264_8_pixel_sad_8x8_neon", "ec_GF2m_simple_group_set_curve", "x264_8_pixel_satd_4x16_neon", "UI_get_default_method", "i2d_DISPLAYTEXT", "ff_hevc_put_hevc_pel_uni_pixels6_8_neon", "BIO_get_retry_reason", "X509_VERIFY_PARAM_inherit", "x264_8_pixel_sad_x3_16x16_neon", "i2d_PKCS7_fp", "av_format_inject_global_side_data", "ASN1_PCTX_set_nm_flags", "ff_avg_h264_qpel8_mc00_neon", "PKCS7_RECIP_INFO_free", "EC_KEY_set_public_key", "PEM_write_bio_DHxparams", "BN_to_ASN1_INTEGER", "NCONF_get_number_e", "BIO_push", "v2i_GENERAL_NAME_ex", "i2v_ASN1_BIT_STRING", "avfilter_process_command", "lh_delete", "DES_cfb_encrypt", "transform_32x32_add_neon_row_16", "x264_8_pixel_sad_x4_16x16_neon", "x264_8_cabac_encode_flush", "PKCS8_pkey_get0", "av_crc", "ssl_parse_clienthello_tlsext", "ff_imdct_half_c", "ff_tlog_link", "ff_http_auth_handle_header", "ec_GFp_simple_point_get_affine_coordinates", "av_find_input_format", "ff_hevc_put_hevc_qpel_h16_8_neon", "swscale_version", "X509_VERIFY_PARAM_set_trust", "EC_POINT_invert", "tls1_process_sigalgs", "PKCS7_set_cipher", "SSL_CTX_set_timeout", "X509_get_ext_count", "PEM_write_bio_X509_REQ", "av_application_did_http_seek", "av_div_q", "ssl_prepare_serverhello_tlsext", "Camellia_EncryptBlock", "av_expr_parse", "ff_slice_thread_init", "x264_8_analyse_weight_frame", "ff_frame_thread_free", "x264_8_sub16x16_dct8_neon", "av_strndup", "bn_sub_words", "X509_CRL_get0_by_serial", "av_codec_get_seek_preroll", "EC_POINT_cmp", "EVP_CIPHER_CTX_rand_key", "av_pix_fmt_desc_get", "EVP_MD_CTX_copy_ex", "ASN1_PRINTABLESTRING_new", "SSL_use_PrivateKey_ASN1", "ff_crcA001_update", "SXNETID_free", "x264_8_predict_8x8_hu_neon", "d2i_CRL_DIST_POINTS", "OpenSSL_add_all_digests", "X509_STORE_get1_crls", "set_real_ip", "x264_8_sei_alternative_transfer_write", "SSL_get_SSL_CTX", "CMAC_CTX_new", "OCSP_sendreq_new", "x264_encoder_encode", "ff_hevc_put_hevc_epel_v32_8_neon", "CONF_imodule_set_flags", "ff_videodsp_init", "ff_init_vlc_sparse", "SSL_dup", "ERR_error_string_n", "SSL_write", "ASN1_OCTET_STRING_set", "av_frame_set_best_effort_timestamp", "DSO_get_default_method", "X509_subject_name_hash_old", "X509_NAME_set", "SSL_use_psk_identity_hint", "ASN1_INTEGER_dup", "EVP_PKEY_meth_set_paramgen", "BUF_reverse", "set_error_type", "x264_8_predict_8x8c_p_c", "ff_h264_idct_add_8_c", "CONF_get_section", "ff_hevc_put_qpel_h1v2_neon_8", "i2d_X509_REVOKED", "X509_NAME_ENTRY_create_by_txt", "avformat_close_input", "get_cur_idx", "ff_hevc_put_hevc_qpel_hv12_8_neon", "SSL_get_shutdown", "PKCS12_MAC_DATA_free", "OCSP_CERTID_free", "EC_POINT_point2oct", "d2i_X509_EXTENSIONS", "SSL_CTX_get_verify_mode", "EC_PRIVATEKEY_free", "ERR_set_mark", "SSL_CTX_use_certificate_chain_file", "avpriv_io_delete", "BN_asc2bn", "SSL_CTX_set_cert_cb", "ERR_peek_error_line", "CRYPTO_gcm128_new", "ASN1_NULL_free", "X509_STORE_CTX_set_purpose", "ff_avg_h264_qpel8_mc01_neon", "EVP_camellia_128_ecb", "av_opt_get_pixel_fmt", "OPENSSL_showfatal", "ff_listen_bind", "x264_8_mb_predict_mv_ref16x16", "av_codec_get_lowres", "EC_KEY_precompute_mult", "EVP_EncryptFinal", "SSL_get_fd", "ERR_load_crypto_strings", "shuffle_bytes_3210", "private_AES_set_encrypt_key", "EVP_rc2_cfb64", "v2i_GENERAL_NAMES", "ff_put_h264_qpel16_mc00_neon", "av_format_get_opaque", "PEM_read_bio_X509_CERT_PAIR", "EVP_EncryptInit", "CRYPTO_gcm128_init", "X509_STORE_CTX_get_error_depth", "ssl3_do_change_cipher_spec", "X509_get1_email", "CRYPTO_dbg_malloc", "ecdsa_check", "CMS_RecipientInfo_kari_get0_reks", "EC_POINT_set_compressed_coordinates_GF2m", "EVP_DigestVerifyInit", "PEM_write_X509_AUX", "SSL_CIPHER_get_id", "PKCS8_encrypt", "ff_avg_h264_qpel8_mc03_neon", "UTF8_getc", "d2i_X509_AUX", "EC_POINT_is_on_curve", "PEM_write_bio_Parameters", "av_opt_get_channel_layout", "ff_set_common_samplerates", "ec_GF2m_simple_cmp", "ff_h264_idct8_add4_10_c", "X509_REQ_set_subject_name", "ff_hevc_put_hevc_epel_bi_h48_8_neon", "get_tcp_timeout", "av_frame_get_channels", "ERR_print_errors", "EDIPARTYNAME_new", "i2d_OCSP_RESPONSE", "av_audio_convert_free", "DSO_pathbyaddr", "av_opt_set_dict2", "PKCS12_free", "cms_CompressedData_init_bio", "ssl23_connect", "CMS_SignerInfo_sign", "DES_xcbc_encrypt", "ff_hevc_put_qpel_uw_v1_neon_8", "av_bitstream_filter_next", "ff_h264_chroma_dc_dequant_idct_12_c", "CRYPTO_set_ex_data_implementation", "x264_8_pixel_ssd_8x8_neon", "CMS_add_standard_smimecap", "SRP_VBASE_new", "NCONF_get_string", "tree_find_sk", "ff_init_scantable", "cms_RecipientInfo_kari_init", "ff_rtp_codec_id", "av_application_close", "ssl3_do_compress", "ff_h264_set_erpic", "DES_encrypt3", "CRYPTO_ccm128_decrypt_ccm64", "avcodec_chroma_pos_to_enum", "EVP_PKEY_CTX_get0_peerkey", "X509_chain_up_ref", "cms_DigestAlgorithm_set", "ff_hevc_res_scale_sign_flag", "ff_hevc_put_qpel_uw_h3v3_neon_8", "ff_h264_luma_dc_dequant_idct_10_c", "x264_8_ratecontrol_zone_init", "x264_8_predict_4x4_v_c", "SRP_VBASE_get1_by_user", "X509_LOOKUP_ctrl", "PKCS7_add_crl", "av_image_fill_max_pixsteps", "RSA_sign_ASN1_OCTET_STRING", "ff_hevc_put_hevc_qpel_uni_v4_8_neon", "X509_CRL_set_meth_data", "X509_PURPOSE_get_by_sname", "CMS_get0_eContentType", "EVP_des_ede3_cfb1", "x264_8_quant_chroma_dc_trellis", "d2i_PKCS8_fp", "EC_curve_nist2nid", "ff_h264_filter_mb_fast", "x264_8_predict_16x16_init", "x264_8_predict_16x16_h_neon", "ff_hevc_hls_residual_coding_2017", "av_register_all", "ff_hevc_put_hevc_qpel_bi_v8_8_neon", "sws_scaleVec", "x264_8_pixel_sad_4x16_neon", "ff_hevc_put_qpel_h3v3_neon_8", "BIO_next", "CMS_SignerInfo_set1_signer_cert", "i2d_RSAPrivateKey_bio", "av_aes_ctr_set_iv", "RAND_seed", "ssl23_write", "ASN1_STRING_to_UTF8", "X509_REQ_check_private_key", "PEM_read_DSAparams", "X509V3_EXT_add_alias", "av_max_alloc", "ff_hevc_idct_32x32_8_neon", "ssl_clear_hash_ctx", "x264_8_predict_lossless_8x8", "CONF_free", "av_dct_end", "ec_wNAF_precompute_mult", "ff_hevc_put_hevc_epel_uni_v12_8_neon", "EVP_camellia_128_cfb128", "ff_hevc_put_hevc_pel_pixels24_8_neon", "ff_avfilter_link_set_in_status", "tls1_clear", "cms_keyid_cert_cmp", "ff_avg_h264_qpel16_mc32_neon", "X509V3_NAME_from_section", "x264_8_zigzag_sub_4x4_frame_neon", "ff_mpa_synth_init_float", "x264_8_predict_8x16c_p_neon", "X509_get_subject_name", "i2v_GENERAL_NAMES", "X509_ALGOR_new", "x264_8_zigzag_scan_4x4_field_neon", "EVP_PKEY_sign_init", "EVP_DecodeUpdate", "sws_isSupportedEndiannessConversion", "ssl3_get_cert_verify", "EC_GROUP_get_asn1_flag", "av_expr_eval", "i2d_DSAparams", "i2d_EC_PUBKEY_fp", "OCSP_set_max_response_length", "COMP_zlib", "av_crc_get_table", "EC_POINT_set_to_infinity", "EVP_MD_CTX_destroy", "X509_sign", "d2i_DSAPrivateKey_fp", "sk_set", "bn_dup_expand", "ff_h264_idct_add16intra_9_c", "ENGINE_load_ssl_client_cert", "ssl_parse_serverhello_use_srtp_ext", "ssl3_choose_cipher", "NCONF_dump_fp", "ff_reset_entries", "ff_pred8x8_vert_neon", "av_buffer_pool_get", "d2i_RSA_PUBKEY", "x264_8_mc_copy_w16_neon", "d2i_PKCS7_SIGNER_INFO", "ff_hevc_put_hevc_qpel_uni_hv32_8_neon", "ssl23_read_bytes", "ff_amf_write_null", "EVP_PKEY_get1_EC_KEY", "ff_formats_changeref", "ff_pred8x8_hor_neon", "x264_8_decimate_score64_neon", "PEM_write_bio_X509", "ff_hevc_put_hevc_qpel_v64_8_neon", "ec_GF2m_simple_group_finish", "ASN1_PRINTABLE_new", "av_get_pix_fmt_name", "av_thread_message_queue_alloc", "OBJ_nid2ln", "CRYPTO_get_dynlock_lock_callback", "ec_GFp_simple_dbl", "DSO_bind_var", "OCSP_RESPONSE_free", "TLSv1_server_method", "BN_mod_add", "ec_GF2m_simple_make_affine", "av_dup_packet", "x264_8_add8x8_idct8_neon", "x264_8_ratecontrol_mb", "EC_POINT_bn2point", "ff_vector_fmac_scalar_neon", "av_realloc_f", "av_tree_insert", "X509_issuer_and_serial_cmp", "ff_alloc_dir_entry", "i2d_RSA_PSS_PARAMS", "ASN1_STRING_set_by_NID", "set_httpdns_ip", "ff_get_codec_guid", "UI_add_input_string", "av_format_set_metadata_header_padding", "x264_8_load_deinterleave_chroma_fenc_neon", "EVP_CipherUpdate", "ff_h264_free_tables", "X509_print_ex_fp", "x264_8_pixel_sad_x4_16x8_neon", "i2d_ASN1_GENERALIZEDTIME", "avfilter_inout_alloc", "sws_cloneVec", "BN_lshift1", "SSL_callback_ctrl", "UI_get_result_maxsize", "ff_mpadsp_apply_window_float", "c2i_ASN1_OBJECT", "ff_avg_h264_chroma_mc2_neon", "av_get_pix_fmt_loss", "x264_8_sync_frame_list_push", "CMS_RecipientEncryptedKey_cert_cmp", "SSL_CTX_set_purpose", "ff_hevc_put_hevc_epel_bi_hv12_8_neon", "ff_mov_cenc_avc_write_nal_units", "ff_hevc_put_hevc_qpel_bi_h24_8_neon", "X509_TRUST_get_trust", "d2i_DSA_PUBKEY_fp", "SRP_Calc_A_param", "ENGINE_get_ciphers", "ff_rtmp_packet_destroy", "SSL_read", "ff_hevc_put_hevc_qpel_hv6_8_neon", "ff_read_frame_flush", "av_pix_fmt_get_chroma_sub_sample", "av_frame_set_channel_layout", "ff_amf_write_string", "av_hash_init", "ff_hevc_put_qpel_uw_v2_neon_8", "i2d_PUBKEY_bio", "X509_trust_clear", "SSL_set_verify_result", "PKCS8_PRIV_KEY_INFO_free", "USERNOTICE_free", "avformat_alloc_output_context2", "EVP_CipherInit", "avformat_get_mov_audio_tags", "RAND_status", "OCSP_REQUEST_new", "i2d_RSA_OAEP_PARAMS", "PKCS12_pack_p7encdata", "ff_hevc_put_hevc_epel_bi_hv16_8_neon", "transform_16x16_add_neon_row_8", "RC2_encrypt", "x264_8_predict_16x16_h_c", "avcodec_set_dimensions", "x264_8_lookahead_get_frames", "ff_rfps_calculate", "ff_hevc_cu_chroma_qp_offset_flag", "av_filter_next", "BN_options", "hls_prediction_unit_2017", "d2i_POLICYQUALINFO", "X509_issuer_name_hash_old", "CMAC_Init", "av_bitstream_filter_close", "ff_hevc_put_qpel_uw_weight_h1v1_neon_8", "ff_hevc_init_orange", "d2i_X509_VAL", "ff_hevc_put_hevc_epel_v16_8_neon", "_CONF_new_data", "ff_hevc_cbf_luma_decode", "avformat_configuration", "SSL_SESSION_get_id", "ff_network_init", "ENGINE_get_pkey_meths", "d2i_CMS_ContentInfo", "av_format_get_audio_codec", "DSO_up_ref", "X509_set_notAfter", "EVP_PKEY_base_id", "av_fifo_realloc2", "av_mod_i", "EVP_aes_256_cfb128", "x264_8_predict_8x8_vl_neon", "ff_hevc_put_qpel_uw_weight_h2v3_neon_8", "ERR_load_DH_strings", "DH_new_method", "EVP_sha1", "av_default_get_category", "x264_8_integral_init4v_neon", "av_murmur3_init", "av_md5_sum", "WHIRLPOOL_Update", "x264_encoder_close", "ECPKPARAMETERS_new", "avpriv_find_start_code", "EVP_PKEY_get1_DH", "avcodec_is_open", "POLICY_MAPPING_new", "ff_filter_frame", "X509_certificate_type", "POLICYINFO_new", "ec_GFp_simple_group_get_degree", "CONF_modules_unload", "d2i_X509_ALGORS", "ASN1_TYPE_get_octetstring", "DES_check_key_parity", "x264_8_predict_lossless_4x4", "ASN1_item_digest", "BIO_dump_indent", "d2i_X509_ALGOR", "d2i_OCSP_REVOKEDINFO", "EVP_CIPHER_CTX_nid", "av_fifo_free", "PEM_read_bio_ECPKParameters", "x264_8_mbtree_propagate_cost_neon", "SSL_CTX_sess_set_new_cb", "i2d_CMS_bio", "ff_imdct_calc_c", "x264_8_frame_pop", "DIST_POINT_set_dpname", "ff_hevc_put_hevc_epel_uni_v8_8_neon", "EVP_PKEY_meth_set_verifyctx", "ENGINE_get_last", "av_audio_fifo_drain", "ff_hevc_put_hevc_epel_bi_hv32_8_neon", "i2d_ASN1_T61STRING", "av_buffersrc_get_nb_failed_requests", "X509_policy_tree_free", "EC_KEY_clear_flags", "sws_scale", "ASN1_STRING_TABLE_add", "BN_reciprocal", "x264_8_nal_encode", "CRYPTO_free_locked", "av_blowfish_crypt_ecb", "av_aes_init", "i2d_ASN1_VISIBLESTRING", "PEM_write_NETSCAPE_CERT_SEQUENCE", "UI_get0_result_string", "av_aes_ctr_free", "DH_free", "ssl3_send_client_verify", "ECDSA_METHOD_set_sign_setup", "av_packet_unref", "X509_CRL_set_issuer_name", "BN_mod_word", "transform_8x8_add_00", "SSL_CTX_load_verify_locations", "d2i_DIST_POINT", "x264_8_mc_weight_w8_neon", "X509V3_get_d2i", "av_format_get_data_codec", "ff_h264_idct8_dc_add_9_c", "ENGINE_get_default_DH", "ff_hevc_transform_add_4x4_neon_8", "ff_h264_idct8_add_neon", "Camellia_decrypt", "swri_realloc_audio", "shuffle_bytes_1230", "av_murmur3_init_seeded", "swri_rematrix", "X509_PKEY_new", "SSL_CTX_set_psk_server_callback", "d2i_ECPKParameters", "ff_hevc_hls_mvd_coding", "DHparams_print", "avfilter_uninit", "ff_init_gamma_convert", "o2i_ECPublicKey", "av_audio_fifo_free", "d2i_OCSP_ONEREQ", "ff_side_data_set_encoder_stats", "BN_clear_free", "ssl3_renegotiate", "SSL_CTX_get_ex_data", "av_buffersink_get_frame_flags", "SXNETID_new", "BIO_new_socket", "PKCS8_set_broken", "EVP_aes_192_cbc", "PEM_write_bio_X509_CRL", "idea_options", "av_bprint_channel_layout", "EVP_aes_128_ecb", "EVP_aes_128_ccm", "private_AES_set_decrypt_key", "x264_8_sei_pic_timing_write", "d2i_PBE2PARAM", "av_opt_set_double", "CRYPTO_ccm128_setiv", "ff_seek_frame_binary", "NETSCAPE_SPKI_free", "av_log_default_callback", "EVP_PKEY_get1_DSA", "UI_dup_info_string", "x264_8_frame_expand_border_lowres", "EVP_MD_CTX_init", "x264_8_frame_delete_list", "EC_KEY_copy", "ff_hevc_split_coding_unit_flag_decode", "ECDSA_verify", "ERR_load_COMP_strings", "CRYPTO_THREADID_current", "BN_is_bit_set", "X509_CRL_sign_ctx", "i2s_ASN1_ENUMERATED", "i2c_ASN1_INTEGER", "X509_VERIFY_PARAM_new", "ff_hevc_annexb2mp4_buf", "X509_to_X509_REQ", "NCONF_load_fp", "ff_set_common_channel_layouts", "avcodec_get_name", "x264_cpu_detect", "ENGINE_get_cmd_defns", "ff_add_index_entry", "RC4", "RSA_padding_add_PKCS1_OAEP_mgf1", "level_add_node", "avcodec_get_chroma_sub_sample", "X509_set_ex_data", "X509_NAME_ENTRY_set_data", "ERR_add_error_data", "avpriv_split_xiph_headers", "av_get_packet", "X509_TRUST_add", "ff_hevc_clear_refs", "CMS_get0_type", "OBJ_find_sigid_algs", "ECParameters_print_fp", "SSL_state_string", "d2i_X509_NAME_ENTRY", "ff_fill_rectangle", "BIO_test_flags", "PEM_write_bio_DHparams", "RSA_padding_check_none", "ff_hevc_put_qpel_uw_h1v3_neon_8", "x264_8_quant_4x4_dc_neon", "EC_GROUP_set_generator", "x264_8_encoder_invalidate_reference", "X509v3_get_ext_by_NID", "ffurl_handshake", "BN_MONT_CTX_free", "x264_8_sei_buffering_period_write", "ERR_add_error_vdata", "x264_8_mb_mc", "CRYPTO_mem_leaks", "SSL_CTX_set_quiet_shutdown", "ERR_load_RSA_strings", "x264_8_rc_analyse_slice", "x264_8_coeff_level_run16_neon", "PKCS7_new", "ff_avg_h264_qpel8_mc21_neon", "avio_handshake", "X509at_get0_data_by_OBJ", "dtls1_write_bytes", "avcodec_default_get_format", "OCSP_REQINFO_new", "d2i_CMS_bio", "BIO_dump_fp", "ff_thread_finish_setup", "PKCS12_unpack_p7encdata", "BN_mul_word", "av_picture_pad", "x264_8_macroblock_cache_free", "tls1_set_sigalgs", "BN_GF2m_mod_exp_arr", "EVP_PKEY_bits", "ff_ape_parse_tag", "x264_8_sei_avcintra_umid_write", "ECDSA_METHOD_set_sign", "PEM_write_PKCS8_PRIV_KEY_INFO", "i2d_OCSP_REQUEST", "whirlpool_block", "CMS_RecipientInfo_kekri_get0_id", "X509_chain_check_suiteb", "av_cast5_init", "POLICY_CONSTRAINTS_new", "swr_set_compensation", "OBJ_NAME_add", "ff_put_h264_chroma_mc8_neon", "EVP_PKEY_get_attr", "SSL_SESSION_set1_id_context", "x264_8_pixel_var_8x8_neon", "PEM_read_PrivateKey", "sk_shift", "X509_LOOKUP_file", "ff_tls_open_underlying", "asn1_do_adb", "ff_hevc_put_hevc_epel_bi_h16_8_neon", "avfilter_open", "SSL_CTX_use_PrivateKey_ASN1", "PEM_write_DSAPrivateKey", "EVP_camellia_128_cfb8", "ff_h264_chroma422_dc_dequant_idct_9_c", "cms_EncryptedData_init_bio", "EVP_PKEY_verify_recover", "ff_h264_flush_change", "EVP_idea_ecb", "SSL_set_session_ticket_ext", "SSL_get_peer_certificate", "d2i_NETSCAPE_SPKI", "ECDH_set_ex_data", "CRYPTO_set_mem_debug_functions", "BN_GF2m_mod", "asn1_get_choice_selector", "sws_getContext", "ff_null_get_audio_buffer", "PEM_write_PKCS7", "BIO_printf", "X509v3_get_ext_count", "ENGINE_unregister_RSA", "ff_put_h264_qpel8_mc02_neon", "av_format_set_subtitle_codec", "ff_request_frame", "EC_GROUP_get0_generator", "bn_to_mont_fixed_top", "av_aes_ctr_crypt", "av_packet_copy_props", "avpriv_copy_pce_data", "ff_hevc_put_qpel_uw_weight_h1v2_neon_8", "ffio_read_size", "BN_CTX_get", "policy_cache_set_mapping", "sk_sort", "av_append_packet", "ff_codec_get_id", "X509_TRUST_get_by_id", "ASN1_UTCTIME_cmp_time_t", "ERR_release_err_state_table", "ff_startcode_find_candidate_c", "evp_pkey_set_cb_translate", "x264_8_predict_lossless_16x16", "X509at_delete_attr", "av_log_ask_for_sample", "avpriv_lock_avformat", "ff_h264qpel_init_aarch64", "x264_8_frame_cond_broadcast", "BIO_new", "BN_sub_word", "SSL_SESSION_new", "avcodec_pix_fmt_to_codec_tag", "PKCS7_dataVerify", "i2d_PBE2PARAM", "av_hash_final_bin", "av_file_map", "PEM_write_bio_DSA_PUBKEY", "EVP_idea_ofb", "avcodec_open2", "ff_avc_mp4_find_startcode", "X509_NAME_delete_entry", "ff_hevc_put_hevc_pel_pixels48_8_neon", "X509_VERIFY_PARAM_table_cleanup", "i2d_PKCS7_SIGN_ENVELOPE", "ffio_init_checksum", "ssl3_get_server_hello", "ffurl_open", "EVP_DecryptInit", "i2d_X509_REQ", "RSA_verify_ASN1_OCTET_STRING", "X509_LOOKUP_by_subject", "X509_CERT_AUX_print", "x264_8_integral_init4h_neon", "SSL_get_verify_callback", "SSL_CTX_set_cookie_verify_cb", "i2d_RSAPublicKey_bio", "policy_node_free", "cms_EncryptedContent_init_bio", "ffurl_close", "ff_mov_get_channel_layout_tag", "ff_h264_idct8_dc_add_12_c", "PEM_read_bio_PrivateKey", "X509V3_EXT_add_nconf", "ff_yuv2rgb_get_func_ptr", "SSL_get_verify_mode", "EVP_EncryptFinal_ex", "X509_pubkey_digest", "EVP_CIPHER_CTX_clear_flags", "ENGINE_set_ECDSA", "av_buffer_make_writable", "PKCS7_add_attribute", "swri_audio_convert_init_aarch64", "OBJ_NAME_do_all_sorted", "i2t_ASN1_OBJECT", "av_fft_end", "av_probe_input_format3", "av_guess_sample_aspect_ratio", "av_frame_get_plane_buffer", "av_dirname", "ff_rtmp_packet_read", "ff_h264chroma_init", "X509_NAME_ENTRY_set_object", "ff_hevc_luma_mv_mvp_mode", "av_timecode_make_mpeg_tc_string", "OpenSSLDie", "EC_GROUP_get_point_conversion_form", "DES_set_key_checked", "ssl3_free", "av_buffersink_get_frame", "ERR_unload_strings", "ff_hevc_put_hevc_qpel_bi_h6_8_neon", "av_add_stable", "cms_SignedData_final", "PEM_write_PKCS8", "swri_resample_dsp_init", "av_frame_get_sample_rate", "ff_hevc_put_hevc_epel_uni_hv6_8_neon", "CRYPTO_gcm128_encrypt_ctr32", "ff_videodsp_init_aarch64", "AES_decrypt", "X509V3_EXT_nconf_nid", "x264_8_threadpool_init", "ff_hevc_put_hevc_epel_uni_v16_8_neon", "SSL_get_rfd", "PKCS5_pbe2_set", "ssl3_cbc_digest_record", "x264_8_log", "ff_get_pcm_codec_id", "ERR_load_CRYPTO_strings", "v2i_ASN1_BIT_STRING", "BIO_set_flags", "ff_fft_calc_neon", "i2d_PKCS12_MAC_DATA", "ff_update_cur_dts", "ff_h264_reset_sei", "ff_pred8x8_top_dc_neon", "OCSP_REQ_CTX_free", "ff_dct32_fixed", "custom_ext_add", "ASN1_PCTX_free", "av_aes_ctr_alloc", "EVP_DigestUpdate", "ff_hevc_put_hevc_qpel_uni_h24_8_neon", "av_register_hwaccel", "EC_GROUP_get_degree", "ff_mdct_calcw_c", "AUTHORITY_KEYID_new", "ff_hevc_put_hevc_qpel_bi_h64_8_neon", "BN_from_montgomery", "x264_8_sei_frame_packing_write", "UI_method_set_opener", "avfilter_get_matrix", "ffio_fill", "av_buffersrc_add_frame", "av_fifo_generic_peek_at", "ff_hevc_put_hevc_epel_bi_v6_8_neon", "ASN1_TYPE_set1", "SRP_Calc_A", "SEED_cfb128_encrypt", "EVP_PKEY_assign", "X509_keyid_set1", "d2i_ASN1_UNIVERSALSTRING", "EC_GROUP_new_by_curve_name", "MD4_Init", "ff_get_line", "av_buffer_alloc", "BIO_indent", "ff_hevc_put_hevc_epel_bi_v48_8_neon", "ff_http_do_new_request", "av_murmur3_final", "X509_VERIFY_PARAM_get_depth", "BN_uadd", "engine_cleanup_add_last", "PKCS12_pack_authsafes", "d2i_PKCS12_MAC_DATA", "ff_mp4_read_dec_config_descr", "av_hash_get_size", "av_codec_set_pkt_timebase", "ERR_free_strings", "EVP_PKEY_verify_init", "x264_8_frame_push", "CMS_RecipientInfo_ktri_get0_algs", "CRYPTO_ccm128_encrypt", "av_sha_update", "BIO_free_all", "i2d_int_dhx", "ff_hevc_put_hevc_epel_v8_8_neon", "X509_set_version", "av_md5_alloc", "av_rc4_init", "x264_8_decimate_score15_neon", "ff_filter_graph_remove_filter", "BN_rand", "SSL_get_ex_data", "SRP_VBASE_init", "i2d_POLICYINFO", "X509_policy_node_get0_policy", "SXNET_get_id_ulong", "X509_STORE_load_locations", "EVP_PKEY_get1_RSA", "X509V3_EXT_REQ_add_conf", "av_get_bits_per_sample", "ssl3_set_handshake_header", "i2d_NETSCAPE_SPKAC", "av_compare_ts", "d2i_OCSP_SIGNATURE", "av_rescale_delta", "av_dict_get", "ecdh_check", "av_dict_set", "av_bprint_clear", "X509_check_ip_asc", "UI_process", "ssl23_put_cipher_by_char", "CRYPTO_ccm128_decrypt", "sws_shiftVec", "EVP_des_ede3_cbc", "ff_avg_h264_qpel16_mc03_neon", "x264_8_pixel_avg2_w16_neon", "X509_VAL_free", "DTLSv1_method", "i2d_PUBKEY_fp", "avfilter_pad_get_type", "x264_8_pixel_sad_x3_4x8_neon", "dtls1_handle_timeout", "RSA_padding_check_PKCS1_type_2", "ff_h264_luma_dc_dequant_idct_14_c", "EVP_rc4_40", "ffurl_connect", "d2i_EC_PUBKEY", "ff_rdft_init", "EC_KEY_new", "av_opt_eval_int", "PEM_write_SSL_SESSION", "PEM_read_bio_X509_CRL", "ASN1_UTCTIME_set_string", "ec_GFp_simple_point_set_to_infinity", "ASN1_UTCTIME_adj", "X509V3_section_free", "EVP_PKEY_meth_new", "tls1_setup_key_block", "swr_set_channel_mapping", "tls1_change_cipher_state", "av_application_will_http_open", "x264_8_pixel_ssim_4x4x2_core_neon", "X509_CRL_verify", "ff_avg_pixels16_x2_neon", "EVP_aes_128_gcm", "av_buffersink_set_frame_size", "UI_add_user_data", "av_timecode_make_string", "d2i_SXNETID", "ff_avg_pixels16_x2_no_rnd_neon", "bn_cmp_part_words", "RSA_padding_add_SSLv23", "PKCS7_add1_attrib_digest", "x264_free", "ff_pred16x16_left_dc_neon", "X509_STORE_CTX_set_depth", "av_find_info_tag", "X509_EXTENSION_get_object", "EVP_PKEY_meth_get_signctx", "ERR_load_ECDSA_strings", "ff_hevc_put_hevc_epel_bi_hv6_8_neon", "i2d_ASN1_UTF8STRING", "ff_hevc_put_qpel_uw_weight_v2_neon_8", "ff_h264_idct8_dc_add_10_c", "ff_avg_pixels16_y2_neon", "ff_mdct_end_fixed_32", "ENGINE_get_ex_new_index", "ENGINE_get_pkey_asn1_meth", "EC_GROUP_new_curve_GF2m", "avcodec_decode_subtitle2", "x264_8_cabac_encode_init", "SSL_get_srp_N", "ENGINE_set_load_ssl_client_cert_function", "X509_REQ_get_pubkey", "ff_simple_idct_add_12", "ASN1_PCTX_set_flags", "av_frame_set_qp_table", "BN_cmp", "X509_EXTENSION_get_critical", "ERR_load_TS_strings", "x264_8_cabac_encode_bypass_c", "UI_method_get_reader", "i2d_ASN1_OCTET_STRING", "X509_policy_tree_get0_level", "X509_NAME_hash", "UI_OpenSSL", "EVP_bf_ecb", "ec_GFp_nist_field_mul", "CMS_signed_get_attr", "ff_graph_thread_free", "ff_raw_read_partial_packet", "SHA1_Init", "ff_avg_h264_chroma_mc8_neon", "av_asprintf", "x264_8_macroblock_cache_load_progressive", "i2d_PKCS7_SIGNED", "PEM_write_EC_PUBKEY", "EVP_MD_block_size", "ff_hevc_pred_init", "ff_hevc_put_hevc_epel_hv32_8_neon", "RSA_memory_lock", "SSL_shutdown", "avfilter_graph_request_oldest", "SSL_set_trust", "X509_REVOKED_get_ext_count", "ff_avg_h264_qpel16_mc22_neon", "d2i_PKCS7_bio", "x264_8_dequant_4x4_neon", "av_frame_copy", "x264_8_macroblock_encode", "d2i_ASN1_VISIBLESTRING", "ff_put_h264_qpel8_mc22_neon", "X9_62_CHARACTERISTIC_TWO_free", "x264_8_zigzag_scan_4x4_frame_neon", "DIST_POINT_NAME_new", "EVP_PKEY_meth_free", "BN_CTX_new", "BN_BLINDING_invert", "EVP_aes_256_xts", "CRYPTO_thread_id", "BN_mask_bits", "avio_free_directory_entry", "lh_free", "BN_print_fp", "ff_put_h264_qpel16_mc31_neon", "HMAC_Init_ex", "sk_value", "x264_8_encoder_close", "PEM_read_X509", "ec_GFp_simple_get_Jprojective_coordinates_GFp", "EVP_sha384", "ENGINE_set_default_pkey_asn1_meths", "ssl_build_cert_chain", "EVP_PKEY_meth_get_keygen", "X509_CRL_add_ext", "x264_8_pixel_satd_8x4_neon", "d2i_BASIC_CONSTRAINTS", "avpriv_strtod", "GENERAL_NAME_cmp", "ssl3_connect", "x264_8_macroblock_cache_save", "DSO_ctrl", "x264_8_deblock_h_luma_neon", "CMAC_CTX_copy", "x264_8_pixel_var_16x16_neon", "x264_8_denoise_dct_neon", "EVP_aes_128_cfb8", "EC_KEY_set_private_key", "ASN1_UTF8STRING_new", "EVP_DigestInit", "EVP_PKEY_meth_set_verify", "EVP_CIPHER_CTX_set_padding", "d2i_USERNOTICE", "ff_rtp_get_payload_type", "ECDSA_sign", "tls1_shared_curve", "SSL_SESSION_get_compress_id", "ff_imdct15_init", "SMIME_crlf_copy", "x264_8_pixel_avg_8x4_neon", "dtls1_get_timeout", "EVP_aes_256_ecb", "BN_BLINDING_get_thread_id", "X509_CRL_METHOD_new", "X509_get_default_cert_dir_env", "EC_KEY_set_flags", "ff_hevc_put_hevc_epel_v48_8_neon", "SSL_get_current_cipher", "CMS_signed_get_attr_count", "CMAC_Final", "ECDSA_OpenSSL", "CMS_stream", "SRP_VBASE_free", "chroma_mc_fixed_bs_add_dsp", "ff_start_tag", "CRYPTO_ccm128_encrypt_ccm64", "PEM_read_bio_CMS", "x264_8_predict_8x8_init_aarch64", "ff_h264_idct_add_12_c", "avformat_new_stream", "x264_8_sei_dec_ref_pic_marking_write", "X509V3_EXT_d2i", "BN_mod_sub_quick", "av_resample_compensate", "SRP_Calc_client_key", "EVP_PKEY_decrypt", "rgb15tobgr15", "BN_nist_mod_384", "X509V3_EXT_REQ_add_nconf", "GENERAL_NAMES_new", "BIO_number_written", "ff_rtmp_calc_digest_pos", "ff_h264_check_intra4x4_pred_mode", "i2d_PKCS7_RECIP_INFO", "SSL_CTX_get_ex_new_index", "ff_fft_lut_init", "av_copy_packet", "av_frame_side_data_name", "X509_EXTENSION_dup", "swri_audio_convert_free", "ASN1_item_new", "BIO_set_cipher", "OCSP_SINGLERESP_new", "ff_rtmp_packet_write", "x264_8_predict_8x16c_v_c", "avcodec_copy_context", "RSA_public_encrypt", "SSL_set_rfd", "SSL_SESSION_get_ex_new_index", "d2i_OCSP_SINGLERESP", "ff_frame_thread_encoder_init", "av_hash_alloc", "av_timecode_make_smpte_tc_string", "ff_hevc_parse_sps", "engine_cleanup_add_first", "X509_PUBKEY_new", "i2d_DIST_POINT_NAME", "pqueue_find", "x264_8_pixel_sad_8x16_neon", "ff_mdct_init_fixed", "ff_get_buffer", "ASN1_GENERALIZEDTIME_check", "avformat_open_input", "ASN1_TYPE_free", "avfilter_register", "ff_query_formats_all", "BN_bn2dec", "av_rescale_q", "EVP_CIPHER_block_size", "X509_ATTRIBUTE_get0_type", "OPENSSL_gmtime", "ASN1_BIT_STRING_set", "DIST_POINT_new", "av_opt_set_image_size", "ff_mc_weight_bi", "ff_hevc_pred_mode_decode", "NCONF_default", "av_buffersink_get_frame_rate", "d2i_GENERAL_NAME", "ff_h264dsp_init", "ff_parse_close", "idea_cbc_encrypt", "i2d_OCSP_RESPBYTES", "idea_set_decrypt_key", "ENGINE_register_ciphers", "av_sha512_init", "X509_TRUST_set", "av_cpb_properties_alloc", "ff_hevc_put_hevc_qpel_uni_v16_8_neon", "ff_hevc_put_hevc_qpel_bi_v24_8_neon", "EVP_CIPHER_iv_length", "SHA512_Update", "EVP_get_digestbyname", "X509_CERT_AUX_new", "UI_get0_output_string", "x264_8_pixel_avg2_w20_neon", "rgb16to24", "ssl3_cert_verify_mac", "x264_8_dequant_8x8_neon", "x264_8_rd_cost_part", "ff_video_frame_pool_init", "SSL_use_PrivateKey_file", "d2i_X509_CRL_fp", "sk_new_null", "EVP_PKEY_meth_set_encrypt", "av_init_packet", "av_codec_get_pkt_timebase", "SSL_set_SSL_CTX", "PKCS7_print_ctx", "avfilter_init_dict", "av_opt_child_class_next", "ff_hevc_put_hevc_qpel_bi_h8_8_neon", "ENGINE_load_private_key", "EVP_camellia_192_cfb8", "X509_set_serialNumber", "X509_NAME_print_ex", "EVP_MD_size", "av_format_get_control_message_cb", "ASN1_mbstring_ncopy", "PKCS12_PBE_add", "ASN1_GENERALIZEDTIME_new", "x264_8_pixel_sad_x4_4x4_neon", "ec_GFp_mont_field_decode", "EVP_PKEY_new", "ff_put_pixels8_xy2_neon", "BUF_strlcpy", "PBEPARAM_free", "x264_8_mc_weight_w8_nodenom_neon", "dtls1_new", "ff_urldecode", "ssl3_shutdown", "CRYPTO_cbc128_decrypt", "x264_8_dequant_4x4_dc_neon", "ec_GF2m_simple_point_set_affine_coordinates", "CONF_load", "DTLS_server_method", "SSL_certs_clear", "avio_rl24", "DH_OpenSSL", "ERR_remove_thread_state", "PKCS7_dataFinal", "ff_sws_alphablendaway", "X509_REQ_verify", "BIO_new_CMS", "ff_put_pixels8_x2_neon", "RSA_new", "OCSP_SIGNATURE_new", "d2i_X509_REQ_INFO", "ASN1_GENERALIZEDTIME_print", "ff_hevc_cu_chroma_qp_offset_idx", "ff_hevc_set_new_ref", "i2d_PrivateKey_fp", "chroma_mc_fixed_bs_put", "EVP_PKEY_meth_find", "x264_8_add8x4_idct_neon", "CRYPTO_get_lock_name", "CMS_ContentInfo_print_ctx", "avpriv_solve_lls", "ENGINE_get_RSA", "SXNET_add_id_INTEGER", "PROXY_POLICY_new", "EVP_rc2_ofb", "PEM_write_bio_RSAPrivateKey", "cms_DigestedData_do_final", "x264_8_bitstream_init", "ff_h264_idct_add8_422_9_c", "EVP_PBE_alg_add_type", "i2d_ASN1_INTEGER", "avio_accept", "SHA512", "BN_to_ASN1_ENUMERATED", "X509_OBJECT_idx_by_subject", "DSAparams_dup", "x264_8_zigzag_sub_4x4_field_neon", "av_sub_i", "ec_GFp_simple_point_copy", "X509_CRL_get_ext_by_critical", "x264_8_mc_weight_w4_offsetsub_neon", "SSL_set_connect_state", "i2d_BASIC_CONSTRAINTS", "ff_h264_decode_ref_pic_marking", "av_stream_set_recommended_encoder_configuration", "NETSCAPE_CERT_SEQUENCE_new", "x264_8_add8x8_idct_neon", "SSL_get_quiet_shutdown", "X509V3_set_ctx", "BN_BLINDING_update", "i2d_OCSP_CERTSTATUS", "x264_8_deblock_h_chroma_intra_neon", "CRYPTO_strdup", "ff_raw_audio_read_header", "asn1_enc_free", "i2d_ASN1_SET_ANY", "ff_hevc_put_hevc_epel_bi_h4_8_neon", "ff_init_desc_chscale", "ENGINE_free", "x264_8_ratecontrol_mb_qp", "SHA_Final", "bn_add_part_words", "av_fast_padded_mallocz", "X509_LOOKUP_hash_dir", "pqueue_size", "av_fft_permute", "av_format_set_video_codec", "BIO_dump_indent_fp", "DES_ncbc_encrypt", "x264_8_frame_expand_border_mod16", "ffio_open_null_buf", "av_buffer_pool_uninit", "ASN1_STRING_type", "x264_8_quant_luma_dc_trellis", "sws_getCoefficients", "EVP_rc4_hmac_md5", "SSL_CTX_sess_get_get_cb", "EC_KEY_set_conv_form", "BN_RECP_CTX_init", "ff_hevc_transform_add_16x16_neon_8", "ASN1_PRINTABLESTRING_free", "ASN1_GENERALSTRING_free", "av_memdup", "SSL_CTX_get_verify_callback", "EVP_aes_128_cbc_hmac_sha256", "avpicture_fill", "X509_SIG_new", "avpicture_get_size", "rgb16tobgr15", "ENGINE_set_RAND", "SRP_get_default_gN", "x264_8_predict_8x16c_dc_neon", "ff_set_cmp", "av_stream_get_end_pts", "PKCS5_PBE_add", "av_get_planar_sample_fmt", "PEM_write_bio_PKCS8PrivateKey_nid", "MDC2_Update", "HMAC_Final", "i2d_PKCS12_BAGS", "EVP_PKEY_meth_get_derive", "ff_hevc_put_hevc_epel_bi_hv24_8_neon", "d2i_ASN1_bytes", "i2d_X509_bio", "swresample_configuration", "av_codec_get_id", "ff_imdct36_blocks_float", "ASN1_template_free", "SSL_CTX_use_certificate_file", "d2i_ASN1_type_bytes", "av_audio_fifo_space", "ff_pred16x16_vert_neon", "SSL_use_certificate", "x264_8_mb_predict_mv_16x16", "CMS_SignerInfo_get0_signature", "ssl3_get_message", "avcodec_decode_video2", "BN_div_recp", "SRP_check_known_gN_param", "x264_8_macroblock_cache_load_interlaced", "av_audio_fifo_write", "ssl3_send_server_key_exchange", "X509_cmp_time", "EVP_des_ede3_ofb", "ERR_load_EVP_strings", "EC_GROUP_dup", "ENGINE_get_RAND", "EVP_DigestInit_ex", "RSAPrivateKey_dup", "av_application_open", "av_opt_set_defaults2", "d2i_RSAPrivateKey_bio", "av_realloc", "avpriv_toupper4", "X509_get_default_cert_area", "EVP_PKEY_meth_get_decrypt", "SSL_pending", "X509_policy_level_node_count", "SSL_CTX_set_cookie_generate_cb", "SHA512_Transform", "av_aes_ctr_increment_iv", "av_imdct_calc", "x264_8_pixel_avg_16x8_neon", "X509_cmp_current_time", "EVP_PKEY_decrypt_init", "EC_GROUP_clear_free", "BN_GF2m_mod_exp", "CRYPTO_THREADID_cpy", "SSL_set_alpn_protos", "SSL_SESSION_set_time", "i2d_PKCS8PrivateKey_fp", "x264_picture_alloc", "ff_hevc_put_hevc_epel_uni_hv4_8_neon", "DSO_flags", "d2i_PKCS12", "x264_8_cabac_init", "avcodec_find_best_pix_fmt_of_2", "ff_imdct_half_c_fixed_32", "BN_mod_exp2_mont", "CMS_RecipientInfo_encrypt", "OCSP_REQ_CTX_nbio", "PEM_read_SSL_SESSION", "SSL_CTX_callback_ctrl", "ff_amf_write_field_name", "ssl_cert_clear_certs", "BIO_f_cipher", "av_fifo_alloc", "BN_GF2m_mod_solve_quad_arr", "CRYPTO_mem_leaks_fp", "transform_8x32_add_00", "PEM_write_bio_PKCS7", "x264_8_frame_deblock_row", "BN_GF2m_mod_div", "ff_ntp_time", "ASN1_TIME_adj", "x264_8_cavlc_init", "ec_GFp_simple_point_set_affine_coordinates", "i2d_DSA_SIG", "x264_8_mc_weight_w8_offsetadd_neon", "x264_8_me_refine_qpel_rd", "X509_get_ex_data", "BN_is_prime_ex", "TLSv1_1_client_method", "CRL_DIST_POINTS_new", "av_rescale_q_rnd", "ff_hevc_put_hevc_epel_h6_8_neon", "ff_thread_await_progress2", "avio_read_to_bprint", "i2d_OCSP_SERVICELOC", "RSA_generate_key_ex", "d2i_X509_CRL_INFO", "BN_mul", "av_div_i", "avformat_network_init", "X509_REQ_get1_email", "CMS_add_smimecap", "ASN1_item_sign_ctx", "av_mdct_init", "PEM_read_EC_PUBKEY", "ff_set_sar", "ff_hevc_put_hevc_pel_uni_pixels24_8_neon", "i2d_PKCS8PrivateKeyInfo_fp", "ff_init_scantable_permutation", "avfilter_graph_alloc", "BN_RECP_CTX_free", "SSL_is_server", "ff_h264_idct8_add4_neon", "ff_hevc_compute_poc", "dtls1_default_timeout", "x264_8_ratecontrol_summary", "ff_hevc_put_hevc_epel_bi_h64_8_neon", "pqueue_free", "EC_GROUP_get_seed_len", "X509_STORE_CTX_set_chain", "ff_dct_init", "sk_is_sorted", "ec_GFp_simple_set_compressed_coordinates", "x264_8_predict_8x16c_h_neon", "ff_avg_h264_qpel16_mc01_neon", "ff_init_mpadsp_tabs_fixed", "avio_get_str", "i2d_ASN1_OBJECT", "policy_data_free", "X509_CRL_add0_revoked", "d2i_PKCS7_ENC_CONTENT", "ff_read_riff_info", "av_opt_get_double", "SSL_get_ex_data_X509_STORE_CTX_idx", "PEM_read_X509_REQ", "PEM_write_bio_ECPKParameters", "av_sample_fmt_is_planar", "d2i_AUTHORITY_KEYID", "ENGINE_get_DSA", "ff_copy_rectangle", "CRYPTO_mem_leaks_cb", "EVP_PKEY_asn1_find_str", "x264_8_deblock_h_chroma_intra_mbaff_neon", "avcodec_default_get_buffer2", "OBJ_cmp", "sws_printVec2", "ECDSA_get_default_method", "av_new_packet", "OCSP_ONEREQ_free", "av_buffersink_params_alloc", "av_xtea_le_crypt", "BN_rand_range", "ff_free_filters", "X509_STORE_CTX_set_time", "CMS_unsigned_add1_attr_by_txt", "ff_make_absolute_url", "SSL_get_psk_identity", "x264_8_deblock_init", "CMS_signed_add1_attr_by_OBJ", "sk_zero", "d2i_X509_bio", "OPENSSL_isservice", "ff_hevc_put_hevc_qpel_h4_8_neon", "ERR_peek_last_error_line_data", "X509_REQ_add1_attr", "ff_h264_idct8_add_8_c", "HMAC", "x264_8_coeff_last16_neon", "ff_hevc_put_hevc_qpel_uni_v64_8_neon", "x264_8_rdo_init", "ff_fill_line_with_color", "DSA_set_ex_data", "av_audio_fifo_reset", "BN_nnmod", "EC_POINT_dup", "MD4_Update", "av_cast5_crypt", "swri_rematrix_free", "X509_REVOKED_dup", "ERR_clear_error", "X509_REQ_digest", "UI_get0_user_data", "X509_VERIFY_PARAM_set_purpose", "ff_amf_read_string", "CRYPTO_gcm128_decrypt_ctr32", "X509_REQ_add1_attr_by_OBJ", "X509_CRL_http_nbio", "sws_convertPalette8ToPacked24", "ff_opencl_register_filter_kernel_code_all", "av_mdct_end", "ec_GF2m_simple_is_at_infinity", "policy_cache_set", "avpriv_frame_get_metadatap", "ENGINE_get_name", "ASN1_PCTX_new", "X509V3_set_nconf", "SSL_CTX_set_default_verify_paths", "x264_8_pixel_var2_8x16_neon", "ISSUING_DIST_POINT_free", "UI_method_set_writer", "d2i_AUTHORITY_INFO_ACCESS", "ff_planar_sample_fmts", "PKCS7_dup", "avfilter_graph_add_filter", "ff_h264_chroma422_dc_dequant_idct_10_c", "av_frame_ref", "ff_side_data_update_matrix_encoding", "ff_hevc_skip_flag_decode", "x264_8_ratecontrol_qp", "CMS_RecipientInfo_ktri_cert_cmp", "av_stereo3d_create_side_data", "SHA256_Update", "ssl3_get_new_session_ticket", "PBKDF2PARAM_free", "ff_thread_can_start_frame", "X509_REQ_get_extension_nids", "CMS_unsigned_get_attr_by_NID", "SSL_CIPHER_get_version", "x264_8_frame_pop_blank_unused", "av_log2_16bit", "HMAC_Update", "cms_set1_SignerIdentifier", "SSL_alert_desc_string_long", "SSL_copy_session_id", "ff_mov_read_stsd_entries", "ff_h264_h_loop_filter_chroma_neon", "CMS_dataInit", "av_format_set_opaque", "avfilter_graph_set_auto_convert", "ENGINE_get_cipher", "x264_8_plane_copy_interleave_core_neon", "ff_get_bmp_header", "x264_8_validate_levels", "ssl3_write", "DSA_set_method", "RAND_egd", "X509_CRL_match", "x264_8_cabac_encode_decision_asm", "ASN1_OBJECT_new", "X509_STORE_new", "OCSP_CRLID_free", "av_strcasecmp", "RSA_set_ex_data", "bn_sqr_recursive", "ERR_get_error_line_data", "sk_deep_copy", "avpriv_unlock_avformat", "X509_ATTRIBUTE_get0_object", "PEM_write_bio_PKCS8_PRIV_KEY_INFO", "X509at_add1_attr", "EVP_ecdsa", "transform_4x4_add_00", "SSL_get_wbio", "ff_hevc_put_qpel_h2_neon_8", "d2i_EC_PUBKEY_bio", "BN_free", "i2d_EDIPARTYNAME", "EVP_rc2_40_cbc", "avfilter_init_str", "SSL_set1_param", "ff_hevc_put_hevc_epel_uni_h32_8_neon", "CRYPTO_mem_ctrl", "do_dtls1_write", "PEM_read_RSA_PUBKEY", "av_get_token", "Camellia_DecryptBlock_Rounds", "ff_h264_idct8_dc_add_neon", "CRYPTO_set_dynlock_lock_callback", "ssl_set_peer_cert_type", "ec_precompute_mont_data", "X509_CERT_PAIR_free", "avfilter_register_all", "av_parser_close", "ff_h264_idct8_add_10_c", "lh_insert", "x264_8_me_search_ref", "x264_8_cabac_block_residual_c", "d2i_RSA_PSS_PARAMS", "DIST_POINT_NAME_free", "av_thread_message_flush", "ssl3_get_client_key_exchange", "i2d_ECPKParameters", "cms_DigestAlgorithm_find_ctx", "ASN1_BIT_STRING_free", "EC_KEY_get_key_method_data", "avpriv_float_dsp_alloc", "av_display_rotation_set", "ENGINE_set_pkey_meths", "avfilter_transform", "i2d_SXNETID", "SSL_CTX_sess_get_new_cb", "PEM_read_ECPrivateKey", "x264_8_predict_8x8_h_neon", "ff_hevc_output_frame", "EVP_des_ede3_cfb8", "ff_id3v2_match", "avfilter_get_by_name", "tls1_generate_master_secret", "i2d_X509_CINF", "i2d_RSAPrivateKey_fp", "BIO_snprintf", "PKCS7_cert_from_signer_info", "ssl3_get_next_proto", "ff_rdft_end", "ff_er_add_slice", "av_add_i", "ERR_load_PEM_strings", "PBKDF2PARAM_new", "EVP_PKEY_derive_set_peer", "EVP_CIPHER_nid", "i2d_ASN1_ENUMERATED", "ff_hevc_put_hevc_qpel_uni_hv12_8_neon", "av_frame_set_color_range", "avformat_version", "ff_hevc_put_hevc_epel_bi_v64_8_neon", "ff_free_vlc", "EVP_PKEY_type", "ERR_load_ASN1_strings", "BN_MONT_CTX_init", "X509_REVOKED_new", "av_opt_set_bin", "PEM_read_bio_PKCS8_PRIV_KEY_INFO", "ff_hevc_put_hevc_qpel_hv64_8_neon", "UI_method_set_reader", "UI_get0_test_string", "i2d_DHparams", "ssl3_cbc_copy_mac", "EC_KEY_dup", "asn1_utctime_to_tm", "ssl_sess_cert_free", "BN_num_bits", "swri_oldapi_conv_fltp_to_s16_nch_neon", "DH_generate_parameters_ex", "x264_8_predict_8x8c_init", "av_cmp_i", "ff_hevc_put_hevc_qpel_bi_v4_8_neon", "av_bitstream_filter_filter", "ff_h264_h_loop_filter_luma_neon", "X509_CRL_INFO_new", "x264_8_cabac_mb_skip", "ff_hevc_put_qpel_uw_h1_neon_8", "SMIME_text", "ff_hevc_put_qpel_uw_h3_neon_8", "DES_is_weak_key", "POLICY_CONSTRAINTS_free", "ff_h264_direct_ref_list_init", "SEED_ecb_encrypt", "X509_REQ_add_extensions_nid", "BN_get0_nist_prime_256", "ff_sbr_apply", "d2i_X509_fp", "ASN1_TYPE_get", "PKCS7_SIGNER_INFO_new", "ASN1_pack_string", "DSA_do_verify", "a2i_ipadd", "ff_hevc_put_qpel_uw_weight_h2v1_neon_8", "ENGINE_register_all_digests", "av_strnstr", "x264_8_plane_copy_c", "ff_avg_pixels16_xy2_neon", "x264_8_pixel_var_8x16_neon", "X509_delete_ext", "i2d_re_X509_tbs", "ff_hevc_put_hevc_qpel_h6_8_neon", "X509_check_trust", "BF_options", "dtls1_clear_received_buffer", "ssl_add_cert_chain", "SHA224", "luma_mc_fixed_bs_put", "x264_8_macroblock_deblock_strength", "EVP_des_ede3_ecb", "i2d_ASN1_IA5STRING", "av_packet_unpack_dictionary", "ssl3_new", "PEM_read_bio_DHparams", "avformat_queue_attached_pictures", "ff_hevc_cabac_init", "X509_get_ext_by_NID", "cms_SignedData_init_bio", "ff_codec_open2_recursive", "ff_mov_cenc_avc_parse_nal_units", "PEM_X509_INFO_write_bio", "EC_KEY_check_key", "X509_REQ_new", "ff_hevc_put_hevc_qpel_uni_h64_8_neon", "x264_8_predict_8x8c_dc_neon", "DES_options", "ASN1_ENUMERATED_free", "ff_hevc_put_hevc_pel_uni_pixels32_8_neon", "ff_hevc_deblocking_boundary_strengths_2017", "X509_get_ext_by_critical", "EVP_PKEY_size", "OCSP_REQINFO_free", "d2i_ASN1_GENERALSTRING", "WHIRLPOOL", "ff_hevc_put_qpel_h1v1_neon_8", "X509_PURPOSE_get_id", "ssl_bad_method", "x264_8_sync_frame_list_pop", "ff_faanidct_add", "ssl3_read", "ff_init_desc_no_chr", "PEM_write_DSAparams", "ff_avg_pixels16_y2_no_rnd_neon", "X509_TRUST_get0_name", "d2i_PROXY_CERT_INFO_EXTENSION", "x264_8_mb_predict_mv_direct16x16", "PEM_write_CMS", "ASN1_PCTX_get_cert_flags", "x264_8_pixel_ssim_wxh", "EC_KEY_new_by_curve_name", "CAST_cbc_encrypt", "EC_POINT_mul", "ff_default_get_audio_buffer", "EVP_CIPHER_do_all_sorted", "PEM_read_PUBKEY", "x264_8_encoder_maximum_delayed_frames", "X509_sign_ctx", "RSA_padding_check_PKCS1_OAEP", "ec_GF2m_simple_field_sqr", "ff_h264_decode_sei", "ff_hevc_put_hevc_qpel_uni_hv48_8_neon", "ff_put_h264_qpel16_mc12_neon", "BN_GENCB_call", "x264_8_deblock_v_luma_neon", "BIO_ctrl_pending", "EVP_PKEY_meth_get_ctrl", "av_get_audio_frame_duration", "CMS_RecipientInfo_kari_get0_alg", "X509_NAME_get_text_by_NID", "EVP_DigestFinal_ex", "dtls1_retransmit_buffered_messages", "ssl23_get_client_hello", "av_get_channel_layout_nb_channels", "ff_h264qpel_init", "i2d_RSA_PUBKEY_fp", "ff_put_h264_chroma_mc4_neon", "PKCS7_dataDecode", "av_codec_get_chroma_intra_matrix", "x264_8_pixel_ssd_nv12_core_neon", "ff_fft_init_fixed", "ec_GFp_nist_group_set_curve", "ff_avg_h264_qpel16_mc02_neon", "UI_method_get_closer", "avpicture_alloc", "av_stream_new_side_data", "PEM_write_bio_ECPrivateKey", "SSL_set_ex_data", "ENGINE_up_ref", "x264_8_frame_cond_wait", "avsubtitle_free", "ff_put_h264_qpel16_mc11_neon", "av_audio_fifo_realloc", "ASN1_INTEGER_set", "ff_mov_cenc_write_packet", "ff_hevc_put_hevc_qpel_bi_hv64_8_neon", "engine_table_unregister", "CRYPTO_128_unwrap", "CMS_unsigned_add1_attr_by_OBJ", "X509_REQ_add_extensions", "ff_hevc_put_hevc_epel_uni_hv24_8_neon", "i2d_OCSP_BASICRESP", "ASN1_item_dup", "avcodec_find_best_pix_fmt2", "ff_hevc_put_pixels_w12_neon_8", "i2d_USERNOTICE", "EC_KEY_get_conv_form", "av_strncasecmp", "swr_get_out_samples", "ff_aac_sbr_ctx_close", "DH_up_ref", "ffurl_size", "av_copy_packet_side_data", "av_strlcpy", "ff_h264_luma_dc_dequant_idct_9_c", "CRYPTO_get_mem_functions", "X509_EXTENSION_get_data", "ENGINE_get_default_RAND", "av_rc4_alloc", "ssl_check_clienthello_tlsext_late", "x264_param_parse", "avpriv_io_move", "x264_8_predict_8x8c_dc_top_neon", "OBJ_nid2sn", "X509_CRL_sign", "ENGINE_get_default_ECDH", "ASN1_item_i2d_fp", "av_hash_final", "ff_imdct_half_c_fixed", "av_get_bits_per_pixel", "x264_8_pixel_avg_4x2_neon", "d2i_ECPrivateKey", "SHA_Transform", "X509_get_ex_new_index", "ECDSA_do_verify", "d2i_ECPKPARAMETERS", "avcodec_dct_init", "X509V3_EXT_CRL_add_nconf", "PEM_write_bio_SSL_SESSION", "EVP_seed_ofb", "CRYPTO_get_dynlock_value", "ff_ps_read_data", "BIO_get_retry_BIO", "ff_amf_write_number", "tls1_set_sigalgs_list", "x264_encoder_open_157", "avfilter_insert_filter", "i2d_X509_NAME_ENTRY", "av_vlog", "ff_id3v2_parse_apic", "x264_8_predict_16x16_p_neon", "ssl3_setup_buffers", "ASN1_TYPE_get_int_octetstring", "CMS_signed_add1_attr_by_NID", "SHA512_Init", "ssl3_read_bytes", "ff_simple_idct248_put", "CRYPTO_malloc_locked", "ff_hevc_hls_residual_coding_2016", "ec_GFp_simple_add", "x264_8_cabac_block_residual_rd_c", "i2d_X509_fp", "av_stereo3d_alloc", "X509_check_issued", "NETSCAPE_SPKI_new", "ffurl_alloc", "X509_check_purpose", "av_buffer_unref", "avcodec_alloc_context3", "DES_encrypt1", "av_image_copy", "RAND_pseudo_bytes", "ff_hevc_put_hevc_epel_bi_hv48_8_neon", "OCSP_BASICRESP_free", "x264_8_pixel_vsad_neon", "ff_ps_apply", "RAND_get_rand_method", "av_hmac_init", "ENGINE_unregister_ECDSA", "av_log2", "sk_unshift", "i2d_X509_ALGOR", "EVP_DecryptFinal_ex", "av_image_fill_arrays", "avcodec_close", "i2d_EC_PUBKEY", "x264_8_pixel_satd_4x4_neon", "ff_generate_sliding_window_mmcos", "ff_draw_rectangle", "ff_avg_h264_qpel16_mc23_neon", "avfilter_configuration", "SSL_export_keying_material", "TLSv1_2_method", "c2i_ASN1_BIT_STRING", "CRYPTO_get_locking_callback", "DHparams_dup", "ECDSA_METHOD_free", "EVP_des_ede3", "X509_ATTRIBUTE_create_by_OBJ", "i2d_X509_CERT_AUX", "d2i_ASN1_OCTET_STRING", "PEM_X509_INFO_read", "ff_hevc_transform_8x8_neon_8", "SSL_set_srp_server_param_pw", "avcodec_find_encoder", "EVP_PKEY_CTX_dup", "tls1_alert_code", "EC_GROUP_new", "EC_GROUP_set_curve_GF2m", "av_hash_update", "ff_hevc_put_hevc_pel_pixels64_8_neon", "X509_REVOKED_set_serialNumber", "ff_poll_frame", "BN_set_params", "SSL_add_file_cert_subjects_to_stack", "X509_REVOKED_free", "ec_GF2m_simple_point_finish", "ff_faanidct_put", "i2d_AUTHORITY_INFO_ACCESS", "av_fast_mallocz", "ff_h264_ref_picture", "ff_fdct248_islow_10", "EC_POINT_get_Jprojective_coordinates_GFp", "ssl3_init_finished_mac", "RSA_padding_check_X931", "ff_hevc_put_hevc_epel_v6_8_neon", "PEM_read_bio_RSA_PUBKEY", "i2d_SXNET", "GENERAL_NAME_free", "ff_pred16x16_128_dc_neon", "avcodec_dct_alloc", "SHA1", "ssl3_get_cert_status", "X509_NAME_ENTRY_get_data", "X509V3_set_conf_lhash", "tls12_check_peer_sigalg", "DSO_global_lookup", "dtls1_process_heartbeat", "asn1_enc_save", "ffio_ensure_seekback", "ff_mpa_l2_select_table", "avpriv_report_missing_feature", "ssl_check_serverhello_tlsext", "ssl3_dispatch_alert", "ff_avg_h264_qpel8_mc33_neon", "HMAC_Init", "x264_8_plane_copy_interleave_c", "ECDSA_METHOD_new", "avcodec_get_class", "av_des_mac", "avpriv_get_trc_function_from_trc", "ASN1_TIME_new", "av_default_item_name", "sk_pop_free", "ff_hevc_idct_16x16_8_neon", "d2i_PKCS12_SAFEBAG", "d2i_ASN1_SEQUENCE_ANY", "EVP_bf_ofb", "ffurl_get_file_handle", "PKCS7_SIGN_ENVELOPE_free", "ff_hevc_put_hevc_epel_v64_8_neon", "av_reduce", "PEM_proc_type", "ff_check_pixfmt_descriptors", "ffurl_read", "BIO_gets", "ENGINE_set_ex_data", "ssl_check_srvr_ecc_cert_and_alg", "SSL_new", "X509V3_parse_list", "ff_hevc_sao_type_idx_decode", "BN_GF2m_mod_sqr_arr", "ssl23_write_bytes", "av_dynarray_add_nofree", "tls1_process_ticket", "ssl3_pending", "x264_8_plane_copy_swap_c", "EVP_PKEY_id", "av_codec_set_codec_descriptor", "ec_GF2m_simple_point_get_affine_coordinates", "CMS_EncryptedData_set1_key", "x264_cpu_num_processors", "x264_8_dct4x4dc_neon", "ff_aac_sbr_ctx_init", "BIO_read", "POLICYQUALINFO_free", "PKCS1_MGF1", "OPENSSL_cleanse", "X509_STORE_CTX_set_error", "ff_put_h264_qpel16_mc10_neon", "PKCS8_decrypt", "X509V3_add_standard_extensions", "d2i_PKCS12_fp", "ff_hevc_put_pixels_w4_neon_8", "x264_param2string", "ff_rtmp_calc_digest", "x264_encoder_parameters", "a2d_ASN1_OBJECT", "SSL_select_next_proto", "BASIC_CONSTRAINTS_free", "ff_put_pixels16_y2_no_rnd_neon", "dtls1_free", "BN_BLINDING_set_flags", "ff_init_buffer_info", "BIO_s_socket", "SSL_CTX_use_RSAPrivateKey_ASN1", "DES_set_key_unchecked", "tls1_ec_nid2curve_id", "EVP_MD_type", "CONF_imodule_get_value", "av_opt_set_int", "dtls1_shutdown", "av_ripemd_alloc", "X509_CRL_get_ext_by_NID", "av_packet_add_side_data", "ff_hevc_hls_filter_2017", "d2i_RSA_OAEP_PARAMS", "x264_8_prefetch_fenc_422_aarch64", "EVP_des_ede_cfb64", "ASN1_bn_print", "ff_codec_get_tag", "ffio_get_checksum", "ECDSA_sign_setup", "PKCS7_add_signer", "ff_read_packet", "SSL_alert_type_string", "ECDSA_sign_ex", "ERR_load_OBJ_strings", "ff_hevc_put_hevc_qpel_hv8_8_neon", "X509_dup", "ssl3_digest_cached_records", "X509_NAME_dup", "EC_KEY_get0_private_key", "pqueue_iterator", "CAST_cfb64_encrypt", "avcodec_get_pix_fmt_loss", "av_fifo_alloc_array", "ff_avg_h264_qpel16_mc33_neon", "av_find_best_pix_fmt_of_2", "d2i_PUBKEY", "ff_hevc_put_hevc_epel_h8_8_neon", "av_bprint_init", "x264_8_predict_16x16_p_c", "SSL_renegotiate_abbreviated", "dtls1_get_message", "PKCS7_add0_attrib_signing_time", "SSL_set_tmp_ecdh_callback", "ENGINE_register_DH", "x264_8_predict_4x4_init", "av_imdct_half", "av_buffersink_get_samples", "ff_hevc_put_hevc_qpel_uni_h6_8_neon", "ff_hevc_put_hevc_epel_h48_8_neon", "ECDSA_METHOD_set_app_data", "DSO_merge", "sk_find_ex", "PKCS12_new", "ssl_verify_cert_chain", "i2d_DIRECTORYSTRING", "ff_network_close", "i2d_PKCS8_PRIV_KEY_INFO", "av_application_did_io_tcp_read", "av_opt_set_channel_layout", "av_write_uncoded_frame_query", "av_realloc_array", "SSL_CTX_set_tmp_ecdh_callback", "PEM_write_DHparams", "ff_hevc_put_hevc_qpel_bi_v16_8_neon", "BN_BLINDING_create_param", "ff_hevc_put_hevc_qpel_uni_hv16_8_neon", "X509_get_default_cert_file", "x264_param_default", "EVP_PKEY_meth_get_paramgen", "ECDSA_METHOD_set_verify", "X509_REQ_delete_attr", "ff_fft_end_fixed_32", "ff_pred16x16_top_dc_neon", "x264_8_pixel_sad_4x4_neon", "EVP_PKEY_CTX_get_data", "ENGINE_get_load_privkey_function", "get_error_code", "ff_h264_init_dequant_tables", "SSL_set_session", "BN_usub", "ff_hevc_sao_merge_flag_decode", "ASN1_VISIBLESTRING_new", "RSA_get_default_method", "X509_INFO_free", "CMS_signed_delete_attr", "ff_h264_sei_stereo_mode", "ENGINE_get_ex_data", "avcodec_encode_video2", "EVP_camellia_256_ofb", "x264_8_cabac_encode_init_core", "SSL_CTX_get_client_CA_list", "av_pixelutils_get_sad_fn", "EVP_aes_128_xts", "EDIPARTYNAME_free", "X509_LOOKUP_new", "X509_set_issuer_name", "X509_STORE_CTX_get0_store", "EC_GFp_nist_method", "asn1_set_choice_selector", "GENERAL_NAME_new", "SSL_CTX_check_private_key", "dtls1_reset_seq_numbers", "X509_print_ex", "av_expr_free", "avfilter_graph_create_filter", "av_escape", "SHA256_Final", "PKCS7_add_signed_attribute", "X509_ALGOR_free", "SHA1_Final", "ff_hevc_put_hevc_qpel_uni_hv4_8_neon", "ff_simple_idct_add_8", "avcodec_string", "ENGINE_get_digest", "ff_hevc_pop_v_regs", "SSL_CTX_get_timeout", "SSLv3_client_method", "CRYPTO_ctr128_encrypt_ctr32", "lh_retrieve", "ff_raw_data_read_header", "luma_mc_fixed_bs_avg", "tls1_ec_curve_id2nid", "i2d_ASN1_SEQUENCE_ANY", "x264_8_prefetch_fenc_420_aarch64", "x264_8_macroblock_encode_p8x8", "BN_mod_exp_mont_word", "DSA_get_ex_new_index", "ECDSA_do_sign", "ASN1_PCTX_set_cert_flags", "EVP_des_ede", "X509_LOOKUP_free", "EVP_MD_CTX_create", "X509V3_add_value_bool_nf", "ssl_add_serverhello_use_srtp_ext", "ASN1_PCTX_get_oid_flags", "ff_hevc_put_hevc_qpel_bi_hv4_8_neon", "avpriv_mpegaudio_decode_header", "PEM_write_bio_DSAPrivateKey", "ENGINE_cmd_is_executable", "av_opt_is_set_to_default_by_name", "X509_issuer_name_hash", "av_tree_enumerate", "d2i_AutoPrivateKey", "SSL_CTX_sess_set_get_cb", "CMS_RecipientInfo_get0_pkey_ctx", "ACCESS_DESCRIPTION_new", "PKCS7_SIGN_ENVELOPE_new", "ENGINE_unregister_digests", "ERR_set_implementation", "d2i_CERTIFICATEPOLICIES", "avio_skip", "ENGINE_set_cmd_defns", "ec_GFp_simple_group_check_discriminant", "x264_8_pixel_avg_4x8_neon", "ff_hevc_hls_filter", "av_get_exact_bits_per_sample", "SSL_check_private_key", "av_vorbis_parse_init", "ff_h264_idct_add16intra_neon", "av_dct_calc", "av_packet_move_ref", "OBJ_nid2obj", "av_format_set_open_cb", "EVP_PKEY_encrypt", "X509_NAME_ENTRY_get_object", "POLICYINFO_free", "rgb16tobgr16", "OBJ_sigid_free", "BIO_dump_indent_cb", "X509_CRL_diff", "ff_amf_match_string", "ff_mpadsp_init", "CRYPTO_get_dynlock_create_callback", "av_d2str", "ff_avc_parse_nal_units_buf", "PEM_read_RSAPublicKey", "dtls1_set_message_header", "tls1_process_heartbeat", "EC_EX_DATA_free_all_data", "SSL_CTX_add_client_CA", "av_utf8_decode", "ff_h264_idct_add16_8_c", "ff_hevc_put_hevc_qpel_bi_hv6_8_neon", "swr_close", "d2i_DSA_SIG", "i2d_X509_CRL_fp", "MDC2_Final", "d2i_OTHERNAME", "ssl_cert_set_cert_store", "tls1_new", "EVP_aes_192_cfb1", "ff_codec_guid_get_id", "sk_new", "EVP_PKEY_copy_parameters", "NCONF_WIN32", "avio_close", "ASN1_tag2str", "d2i_RSA_PUBKEY_bio", "ssl23_peek", "x264_8_predict_4x4_dc_c", "ffio_read_varlen", "ASN1_i2d_fp", "DSA_get_default_method", "ff_get_wav_header", "X509_OBJECT_up_ref_count", "CONF_modules_load_file", "PKCS5_pbe_set", "avio_wb32", "avpriv_find_pix_fmt", "ff_put_h264_qpel16_mc32_neon", "x264_8_pixel_ssim_end4_neon", "ff_weight_h264_pixels_4_neon", "EVP_des_cfb1", "ff_mp4_read_descr", "ssl3_comp_find", "d2i_NOTICEREF", "av_tree_find", "x264_8_prefetch_fenc", "SSL_CTX_add_client_custom_ext", "tls12_get_hash", "i2s_ASN1_ENUMERATED_TABLE", "SSL_get_certificate", "BN_set_negative", "engine_set_all_null", "CRYPTO_dbg_get_options", "CMS_add1_crl", "x264_8_nal_escape_neon", "av_buffer_get_opaque", "CRYPTO_set_locked_mem_functions", "ff_add_channel_layout", "ENGINE_set_ciphers", "bn_mul_low_normal", "i2d_ASN1_TYPE", "RSA_verify_PKCS1_PSS_mgf1", "av_codec_set_lowres", "ff_parse_mpeg2_descriptor", "ssl_cert_type", "ASN1_TYPE_set_octetstring", "DIST_POINT_free", "x264_8_me_refine_qpel_refdupe", "x264_8_pixel_satd_8x8_neon", "X509_CRL_METHOD_free", "X509_policy_node_get0_qualifiers", "CRYPTO_get_locked_mem_functions", "EVP_camellia_192_cbc", "av_opt_set_from_string", "avpriv_open", "EVP_aes_128_ofb", "BN_mod_exp_mont", "ENGINE_get_cipher_engine", "x264_8_cqm_init", "c2i_ASN1_INTEGER", "X509_STORE_CTX_set_cert", "av_format_get_open_cb", "chroma_mc_fixed_bs_add", "X509_get_pubkey", "OPENSSL_stderr", "ERR_load_BIO_strings", "ff_simple_idct_8", "SSL_CTX_set_srp_username_callback", "X509_PURPOSE_get_count", "cms_SignerIdentifier_cert_cmp", "avcodec_default_execute", "CONF_get_string", "X509_TRUST_get_count", "av_dirac_parse_sequence_header", "CMS_get0_SignerInfos", "X509_policy_check", "av_audio_fifo_size", "EC_EX_DATA_set_data", "EVP_PKCS82PKEY", "ERR_get_error", "DSO_get_method", "x264_8_frame_unshift", "i2d_PKCS8PrivateKey_bio", "av_mallocz", "hls_prediction_unit", "d2i_X509_REQ", "x264_log_internal", "ff_hevc_put_hevc_epel_h64_8_neon", "x264_8_predict_16x16_dc_c", "ssl3_send_certificate_request", "d2i_ECDSA_SIG", "X509_issuer_name_cmp", "ff_hevc_put_pixels_w8_neon_8", "CRYPTO_128_wrap", "X509_VAL_new", "sk_delete", "x264_8_frame_new_slice", "av_resample_close", "PKEY_USAGE_PERIOD_free", "x264_8_predict_16x16_init_aarch64", "ff_channel_layouts_ref", "EC_GROUP_get_pentanomial_basis", "ECParameters_print", "X509_STORE_CTX_new", "UI_add_info_string", "ff_avg_pixels8_xy2_neon", "ff_dct32_float", "av_application_on_io_traffic", "avcodec_descriptor_next", "SSL_get_client_CA_list", "x264_8_expand_border_mbpair", "SSL_load_client_CA_file", "ff_merge_formats", "avio_feof", "ENGINE_get_pkey_asn1_meth_str", "bn_sqr_normal", "avpicture_free", "i2d_POLICYQUALINFO", "CONF_set_default_method", "srp_verify_server_param", "EVP_PBE_cleanup", "UI_construct_prompt", "dtls1_get_ccs_header", "BN_pseudo_rand", "d2i_X509_CINF", "SSL_CTX_set_generate_session_id", "BN_BLINDING_convert_ex", "av_opt_child_next", "RIPEMD160_Transform", "X509_STORE_CTX_get_ex_data", "ff_url_join", "CMS_add0_cert", "ff_compute_frame_duration", "ssl3_get_key_exchange", "d2i_OCSP_RESPBYTES", "EVP_PKEY_cmp_parameters", "ff_hevc_cu_transquant_bypass_flag_decode", "av_fft_init", "ASN1_UTCTIME_new", "EC_GROUP_method_of", "d2i_ASN1_INTEGER", "X509_verify_cert_error_string", "CRYPTO_get_dynlock_destroy_callback", "x264_8_predict_16x16_v_neon", "i2d_X509_REQ_bio", "ff_hevc_put_hevc_epel_hv48_8_neon", "av_fifo_space", "ff_fft_init_fixed_32", "EVP_DecryptFinal", "SSL_use_RSAPrivateKey", "ASN1_STRING_print_ex_fp", "PKCS5_v2_PBKDF2_keyivgen", "rgb32to24", "av_camellia_crypt", "ASN1_parse", "EVP_PKEY_CTX_free", "EC_GROUP_get_order", "x264_8_mc_copy_w8_neon", "PEM_write_bio_EC_PUBKEY", "X509_PUBKEY_free", "i2d_OCSP_RESPID", "ff_amf_write_object_start", "OCSP_SINGLERESP_free", "rgb64to48_bswap", "d2i_ACCESS_DESCRIPTION", "BN_BLINDING_invert_ex", "avio_wl32", "av_adler32_update", "av_frame_get_buffer", "x264_8_add16x16_idct8_neon", "BN_rshift", "PKCS7_add_recipient", "ssl3_handshake_write", "x264_8_pixel_hadamard_ac_16x16_neon", "ec_GF2m_simple_group_copy", "ssl3_send_hello_request", "ff_hevc_put_qpel_uw_weight_h2v2_neon_8", "av_parser_change", "ff_hevc_transform_16x16_neon_8", "EVP_MD_do_all_sorted", "ENGINE_set_default_ECDSA", "ASN1_item_pack", "sws_getIdentityVec", "x264_8_adaptive_quant_frame", "X509_STORE_CTX_get_chain", "COMP_zlib_cleanup", "ff_fmt_is_in", "ff_hevc_deblocking_boundary_strengths", "i2d_ECDSA_SIG", "SSL_CTX_remove_session", "BN_CTX_end", "av_image_get_linesize", "ff_avg_h264_chroma_mc4_neon", "avio_put_str16le", "ff_h264_field_end", "ff_alloc_entries", "ff_http_match_no_proxy", "ff_hevc_decode_nal_sei", "ASN1_item_ex_i2d", "act_transform_16x16_add_8", "ASN1_STRING_set", "ASN1_IA5STRING_free", "SSL_CTX_set_ssl_version", "ff_bswapdsp_init", "ff_merge_channel_layouts", "ENGINE_get_ECDSA", "ssl_do_client_cert_cb", "OPENSSL_uni2asc", "ff_hevc_luma_mv_merge_mode", "EVP_Cipher", "ec_GFp_simple_point2oct", "X509_PUBKEY_get", "ASN1_item_d2i_bio", "RSA_X931_hash_id", "ff_hevc_put_qpel_uw_weight_h3_neon_8", "ff_hevc_put_hevc_pel_uni_pixels16_8_neon", "ff_yuv2rgb_c_init_tables", "RSA_size", "BN_new", "PBE2PARAM_free", "x264_8_threadslice_cond_broadcast", "DSO_new_method", "EVP_MD_CTX_copy", "OBJ_create_objects", "EVP_CIPHER_set_asn1_iv", "avio_flush", "CRYPTO_set_locking_callback", "ff_hevc_bump_frame", "ff_hevc_put_hevc_qpel_uni_hv6_8_neon", "i2s_ASN1_INTEGER", "BN_dup", "PEM_write_X509_REQ_NEW", "ec_GFp_simple_point_finish", "DSO_convert_filename", "x264_8_pixel_sad_4x8_neon", "av_register_codec_parser", "x264_8_field_vsad", "x264_8_frame_delete", "DTLS_client_method", "ff_put_pixels16_y2_neon", "EVP_PKEY_CTX_new_id", "ff_mov_write_packet", "UI_get0_result", "ff_avg_h264_qpel8_mc02_neon", "CONF_set_nconf", "ff_hevc_put_hevc_qpel_uni_h48_8_neon", "SSL_set_cipher_list", "ff_amf_write_object_end", "av_free_packet", "Camellia_cbc_encrypt", "av_cpu_count", "ENGINE_ctrl", "DH_set_default_method", "ff_fdct248_islow_8", "ff_h264_pred_init", "x264_8_quant_init", "PEM_write_bio_NETSCAPE_CERT_SEQUENCE", "CMS_SignerInfo_verify_content", "EVP_MD_CTX_md", "ff_imdct_calc_c_fixed_32", "av_get_known_color_name", "BN_value_one", "X509_time_adj_ex", "CRYPTO_gcm128_tag", "av_strlcatf", "x264_8_coeff_last4_aarch64", "av_hash_final_b64", "ff_hevc_put_qpel_v3_neon_8", "x264_8_predict_8x8_init", "ff_avg_h264_qpel8_mc32_neon", "x264_8_sei_version_write", "DES_set_odd_parity", "EVP_PKEY_asn1_set_public", "ec_GFp_simple_group_clear_finish", "ff_h264_decode_nal", "X509_NAME_free", "lh_num_items", "PKCS7_set0_type_other", "ff_hevc_put_hevc_epel_uni_h16_8_neon", "ENGINE_unregister_RAND", "PEM_read_X509_CRL", "x264_reduce_fraction", "SSL_CTX_get0_privatekey", "avio_write", "avfilter_graph_config", "i2a_ASN1_STRING", "av_frame_new_side_data", "avcodec_align_dimensions", "av_vorbis_parse_reset", "CRYPTO_cleanup_all_ex_data", "CMS_ContentInfo_new", "TXT_DB_free", "ISSUING_DIST_POINT_new", "X509_CRL_get0_by_cert", "audio_resample", "custom_exts_free", "NETSCAPE_SPKAC_free", "av_get_codec_tag_string", "EVP_camellia_256_cfb1", "ssl3_read_n", "ssl3_release_read_buffer", "d2i_PBKDF2PARAM", "ff_hevc_put_hevc_epel_bi_h12_8_neon", "X509v3_add_ext", "x264_8_pixel_sad_x3_4x4_neon", "EC_KEY_generate_key", "x264_8_threadslice_cond_wait", "EC_GROUP_set_curve_name", "ffurl_write", "SSL_set_session_secret_cb", "BN_print", "x264_8_idct4x4dc_neon", "av_rdft_end", "av_packet_free", "av_stream_get_r_frame_rate", "ff_hevc_put_hevc_qpel_v4_8_neon", "engine_unlocked_init", "ff_hevc_put_qpel_uw_weight_v3_neon_8", "cms_pkey_get_ri_type", "TXT_DB_get_by_index", "EVP_PKEY_asn1_add_alias", "ff_hevc_get_ref_list", "av_hash_freep", "X509V3_EXT_i2d", "PEM_write_DSA_PUBKEY", "d2i_OCSP_RESPID", "ASN1_TIME_check", "SSLv3_method", "ENGINE_set_default_ciphers", "ENGINE_register_all_pkey_asn1_meths", "Camellia_encrypt", "RSA_flags", "SSL_COMP_add_compression_method", "avfilter_inout_free", "i2d_CMS_bio_stream", "CMS_SignerInfo_get0_md_ctx", "SSL_CTX_set_srp_username", "rgb12tobgr12", "i2d_X509_ALGORS", "ff_hevc_put_hevc_epel_uni_v48_8_neon", "i2d_PKCS7_bio", "X509_ATTRIBUTE_count", "ff_hevc_put_hevc_qpel_bi_hv12_8_neon", "x264_8_pixel_avg_8x16_neon", "SSLv3_server_method", "ff_video_frame_pool_get_config", "av_mastering_display_metadata_create_side_data", "ff_hevc_annexb2mp4", "avio_wb16", "SSL_CTX_set_cert_verify_callback", "ff_null_get_video_buffer", "avio_rl64", "EVP_PKEY_get_attr_by_NID", "tls1_free", "CMS_get0_signers", "av_thread_message_queue_free", "X509_STORE_add_crl", "transform_16x16_add_neon_row_4", "md5_block_data_order", "EVP_CIPHER_CTX_flags", "SSL_get_error", "ASN1_STRING_cmp", "x264_8_mc_init", "x264_8_pixel_var2_8x8_neon", "UTF8_putc", "avpriv_bprint_to_extradata", "X509_NAME_ENTRY_create_by_OBJ", "EC_POINT_set_Jprojective_coordinates_GFp", "ff_free_stream", "ff_imdct_half_neon", "X509V3_add_value_uchar", "engine_free_util", "av_new_program", "x264_8_weights_analyse", "EC_KEY_get_flags", "x264_8_frame_shift", "i2d_ASN1_PRINTABLE", "BN_bin2bn", "SSL_cache_hit", "av_frame_set_decode_error_flags", "SXNET_add_id_ulong", "ff_id3v2_read_dict", "ASN1_OBJECT_create", "x264_8_predict_8x8_ddr_neon", "ff_hevc_put_hevc_qpel_h64_8_neon", "ff_fft_end", "i2d_X509_REQ_fp", "ec_GFp_simple_invert", "ffio_rewind_with_probe_data", "EVP_PKEY_set1_RSA", "transform_16x16_add_neon_row", "ff_amf_read_number", "EVP_PKEY_asn1_get0", "COMP_CTX_new", "ff_h264_chroma_dc_dequant_idct_14_c", "SSL_free", "RC4_options", "avfilter_link_set_closed", "ff_hevc_put_qpel_uw_weight_h1v3_neon_8", "PEM_write", "SSL_set_verify_depth", "ECPKPARAMETERS_free", "ff_hevc_push_v_regs", "ff_hevc_part_mode_decode", "CMS_RecipientInfo_kekri_id_cmp", "ff_mdct_calc_c", "avcodec_align_dimensions2", "SSL_use_PrivateKey", "EVP_CIPHER_CTX_cipher", "ff_hevc_put_hevc_qpel_bi_v12_8_neon", "a2i_GENERAL_NAME", "EC_GROUP_set_asn1_flag", "d2i_EC_PRIVATEKEY", "ssl3_alert_code", "EVP_PKEY_set_type_str", "ff_hevc_put_hevc_qpel_bi_hv8_8_neon", "avpriv_copy_bits", "X509_CINF_free", "X509_REQ_sign_ctx", "MD5_Transform", "CMS_SignerInfo_get0_algs", "ENGINE_get_default_ECDSA", "BIO_f_base64", "ASN1_T61STRING_free", "sws_alloc_context", "dtls1_get_queue_priority", "ASN1_STRING_print", "x264_8_mc_weight_w20_offsetsub_neon", "EC_KEY_set_group", "ff_h264_idct_add16_12_c", "EC_POINT_oct2point", "X509_get0_signature", "ASN1_STRING_dup", "PKCS7_RECIP_INFO_new", "CMS_RecipientInfo_type", "ASN1_GENERALSTRING_new", "av_application_will_http_seek", "x264_8_encoder_encode", "ENGINE_get_pkey_meth", "X509_http_nbio", "av_hwaccel_next", "i2d_OCSP_ONEREQ", "ff_put_h264_qpel8_mc12_neon", "EVP_CIPHER_CTX_block_size", "ff_init_cabac_decoder", "ff_h264_idct_add8_422_14_c", "av_frame_get_pkt_size", "ff_hevc_put_pixels_w64_neon_8", "i2d_X509_EXTENSION", "av_twofish_crypt", "WHIRLPOOL_Final", "CRYPTO_get_ex_data", "ssl3_get_client_certificate", "BIO_set_ex_data", "ssl3_send_next_proto", "EC_GFp_simple_method", "CMS_unsigned_get_attr_by_OBJ", "X509_STORE_set_default_paths", "ff_me_cmp_init_static", "BN_mod_sqrt", "OCSP_RESPID_new", "X509v3_get_ext_by_OBJ", "ff_draw_color", "EC_GROUP_free", "EVP_idea_cfb64", "x264_8_deblock_h_chroma_neon", "AUTHORITY_INFO_ACCESS_new", "swri_noise_shaping_float", "PKCS7_RECIP_INFO_set", "PEM_write_bio", "av_match_list", "OPENSSL_gmtime_diff", "ff_get_extradata", "x264_8_predict_8x16c_init", "set_tcp_timeout", "PEM_read_CMS", "av_opt_find2", "X509_CRL_get_ext_count", "tls1_cbc_remove_padding", "EVP_PKEY_meth_set_copy", "SSL_CTX_set_verify_depth", "x264_8_pixel_sad_8x4_neon", "ff_hevc_put_qpel_bi_w_neon_8", "ff_emulated_edge_mc_8", "ssl3_change_cipher_state", "BN_mod_add_quick", "ssl23_read", "ERR_load_BUF_strings", "ssl_get_ciphers_by_id", "d2i_PKCS12_bio", "ff_alloc_packet", "X509V3_EXT_conf_nid", "ff_hevc_merge_idx_decode", "av_fopen_utf8", "X509at_add1_attr_by_OBJ", "ff_hevc_put_hevc_qpel_h12_8_neon", "SRP_Verify_A_mod_N", "CRYPTO_num_locks", "avio_size", "av_sha512_final", "ff_h264_luma_dc_dequant_idct_12_c", "ff_hevc_decode_short_term_rps", "PKCS12_certbag2x509", "ssl_ok", "x264_8_plane_copy_deinterleave_rgb_neon", "CMS_unsigned_get_attr_count", "CRYPTO_free", "ASN1_STRING_set0", "ff_hevc_put_qpel_uw_weight_h3v1_neon_8", "OCSP_CRLID_new", "x264_8_predict_8x16c_dc_top_neon", "dsa_builtin_paramgen2", "bn_mul_comba8", "OPENSSL_gmtime_adj", "ff_hevc_put_qpel_uw_weight_h3v3_neon_8", "av_get_pix_fmt", "PKCS12_certbag2x509crl", "EC_POINTs_mul", "X509V3_EXT_conf", "CMS_SignerInfo_cert_cmp", "ff_hevc_put_hevc_qpel_v32_8_neon", "x264_8_predict_8x16c_dc_left_neon", "idea_ofb64_encrypt", "EVP_camellia_192_ecb", "RAND_cleanup", "CRYPTO_realloc_clean", "d2i_X509_SIG", "PKCS7_SIGNED_free", "BN_ucmp", "av_aes_alloc", "av_color_transfer_name", "ASN1_OCTET_STRING_cmp", "OPENSSL_add_all_algorithms_noconf", "ssl_cipher_ptr_id_cmp", "ff_ps_init", "ssl_undefined_function", "PKCS8_PRIV_KEY_INFO_new", "av_log_format_line", "ec_GFp_mont_field_sqr", "ff_init_mpadsp_tabs_float", "bn_mul_high", "X509_STORE_CTX_set_trust", "EVP_DecryptUpdate", "ff_pred8x8_0l0_dc_neon", "i2d_ASN1_PRINTABLESTRING", "av_opt_get_key_value", "av_frame_is_writable", "i2d_RSAPublicKey_fp", "ASN1_BIT_STRING_check", "av_match_name", "RSA_padding_check_PKCS1_OAEP_mgf1", "rgb64tobgr48_nobswap", "NETSCAPE_SPKI_sign", "SSL_CTX_set_default_passwd_cb_userdata", "SSL_CIPHER_description", "i2d_OCSP_CRLID", "ff_hevc_set_neighbour_available", "UI_method_set_prompt_constructor", "rgb24to32", "RSA_OAEP_PARAMS_free", "avfilter_graph_send_command", "engine_pkey_asn1_meths_free", "PKCS5_PBE_keyivgen", "X9_62_CHARACTERISTIC_TWO_new", "CRYPTO_ccm128_aad", "SSL_CTX_sessions", "int_rsa_verify", "ff_h264_idct_dc_add_12_c", "x264_8_copy_column8", "ec_GFp_mont_field_mul", "X509_find_by_issuer_and_serial", "ff_frame_thread_init", "x264_8_pixel_satd_16x8_neon", "i2d_PrivateKey", "ff_put_h264_qpel8_mc00_neon", "av_application_did_tcp_connect_fd", "ff_rtmp_check_alloc_array", "av_compare_mod", "ff_filter_graph_run_once", "SSL_CTX_get_client_cert_cb", "i2d_PKCS7_ENVELOPE", "X509_get_serialNumber", "av_int2i", "OBJ_create", "av_buffer_is_writable", "i2d_OTHERNAME", "DSO_new", "ASN1_item_i2d", "ssl_init_wbio_buffer", "EVP_aes_128_wrap", "av_match_ext", "av_opt_eval_flags", "swr_init", "BIO_ctrl", "OCSP_REQ_CTX_get0_mem_bio", "av_get_frame_filename", "X509_STORE_CTX_cleanup", "X509V3_EXT_print_fp", "pem_check_suffix", "X509_get_pubkey_parameters", "ff_rotate_slice", "SXNET_get_id_asc", "d2i_ASN1_GENERALIZEDTIME", "SSL_SESSION_get_time", "CMS_add0_recipient_password", "x264_8_add4x4_idct_neon", "i2d_PKCS12_SAFEBAG", "CMS_add1_cert", "ff_hevc_put_qpel_h1_neon_8", "PKCS7_SIGNER_INFO_sign", "ff_avg_h264_qpel8_mc20_neon", "ff_avg_h264_qpel16_mc11_neon", "DSA_dup_DH", "ASN1_template_i2d", "CMS_get0_RecipientInfos", "X509_REVOKED_get_ext_d2i", "av_dv_codec_profile", "ff_avg_h264_qpel16_mc10_neon", "SSL_srp_server_param_with_username", "ff_celt_imdct_half_neon", "av_color_primaries_name", "ASN1_INTEGER_to_BN", "avpriv_mpeg4audio_get_config", "ECPKParameters_print", "av_resample", "ssl3_send_newsession_ticket", "i2d_ASN1_UTCTIME", "SSL_SESSION_get_ex_data", "av_frame_set_metadata", "ff_me_cmp_init", "SSL_use_certificate_ASN1", "COMP_compress_block", "DH_get_1024_160", "x264_8_mc_weight_w16_offsetadd_neon", "PEM_dek_info", "ENGINE_register_digests", "ff_put_h264_chroma_mc2_neon", "ff_hevc_put_hevc_qpel_bi_h12_8_neon", "av_get_profile_name", "avcodec_decode_audio4", "ASN1_put_eoc", "av_resample_init", "x264_8_frame_expand_border_filtered", "PKCS7_DIGEST_free", "WHIRLPOOL_Init", "AES_options", "ec_GFp_nist_group_copy", "PEM_write_ECPKParameters", "SMIME_read_ASN1", "BIO_f_zlib", "bn_add_words", "av_usleep", "EVP_sha512", "CMS_signed_get_attr_by_OBJ", "ff_hevc_put_hevc_qpel_uni_h16_8_neon", "av_buffer_get_ref_count", "X509_CRL_INFO_free", "X509_ALGOR_get0", "i2d_X509_CRL_INFO", "a2i_ASN1_STRING", "ff_crc04C11DB7_update", "asn1_ex_i2c", "ff_mov_cenc_write_sinf_tag", "EVP_PKEY_asn1_new", "SSL_do_handshake", "PKCS12_pack_p7data", "EVP_PKEY_add1_attr", "X509_NAME_digest", "av_ripemd_update", "ff_hevc_put_qpel_uw_weight_h2_neon_8", "SSL_set_info_callback", "x264_8_pixel_ssd_8x4_neon", "ENGINE_get_digests", "ff_avc_parse_nal_units", "swr_alloc", "ff_hevc_put_hevc_epel_h4_8_neon", "EVP_PKEY_CTX_set0_keygen_info", "X509_STORE_CTX_set_ex_data", "X509V3_EXT_add_nconf_sk", "EVP_read_pw_string_min", "EVP_EncodeUpdate", "EC_GROUP_get_basis_type", "ff_j_rev_dct2", "ssl3_peek", "X509_find_by_subject", "swri_noise_shaping_int32", "d2i_X509_REQ_fp", "ff_all_samplerates", "ff_hevc_put_hevc_epel_uni_hv8_8_neon", "ff_sws_rgb2rgb_init", "av_md5_init", "swr_convert_frame", "CRYPTO_memcmp", "X509_VERIFY_PARAM_set_time", "ENGINE_set_id", "ERR_get_state", "x264_8_predict_4x4_init_aarch64", "av_format_get_metadata_header_padding", "X509_free", "av_picture_crop", "ff_hevc_no_residual_syntax_flag_decode", "pqueue_new", "X509_EXTENSION_free", "BN_MONT_CTX_new", "ssl3_get_cipher_by_char", "ff_pred8x8_0lt_dc_neon", "ff_hevc_idct_32x32_dc_neon_8", "av_packet_ref", "lh_strhash", "av_opt_set_video_rate", "luma_mc_fixed_bs_add", "x264_8_quant_4x4x4_neon", "X509_CRL_check_suiteb", "ssl3_send_server_done", "EVP_seed_cbc", "x264_8_sei_write", "x264_8_deblock_v_luma_intra_neon", "HMAC_CTX_cleanup", "ff_hevc_put_hevc_qpel_v12_8_neon", "ff_mpadsp_apply_window_float_neon", "avio_rb16", "SHA256", "UI_get_string_type", "sws_convertPalette8ToPacked32", "CRYPTO_THREADID_set_numeric", "OCSP_sendreq_bio", "i2d_X509_CERT_PAIR", "ENGINE_get_table_flags", "a2i_ASN1_INTEGER", "X509_NAME_ENTRY_free", "CRYPTO_free_ex_data", "asn1_generalizedtime_to_tm", "av_hex_dump_log", "ENGINE_finish", "x264_8_prefetch_ref_aarch64", "UI_create_method", "CRYPTO_dup_ex_data", "UI_dup_input_boolean", "ff_mpeg4video_split", "ff_generate_avci_extradata", "avformat_seek_file", "x264_8_sub8x8_dct_neon", "av_opt_get", "ff_sdp_write_media", "x264_8_lookahead_delete", "SSL_SRP_CTX_init", "DSA_SIG_free", "ff_fft_init", "ff_put_h264_qpel8_mc03_neon", "ssl_replace_hash", "CMS_SignerInfo_get0_signer_id", "SSL_CTX_set_next_proto_select_cb", "ECDSA_SIG_new", "EVP_DigestSignInit", "X509_REQ_free", "CMS_signed_get0_data_by_OBJ", "avcodec_license", "OCSP_RESPDATA_new", "ASN1_STRING_set_default_mask_asc", "avio_rl16", "av_pkt_dump_log2", "ff_init_desc_hscale", "x264_8_coeff_level_run4_aarch64", "x264_8_pixel_avg_16x16_neon", "ASN1_INTEGER_get", "ERR_load_PKCS12_strings", "SSL_get_sigalgs", "av_find_best_stream", "av_samples_set_silence", "CONF_imodule_get_flags", "idea_cfb64_encrypt", "EVP_PKEY_get_attr_by_OBJ", "ff_psdsp_init", "X509_STORE_CTX_get_current_cert", "BN_GF2m_mod_div_arr", "DSO_get_filename", "ffio_read_indirect", "CRYPTO_THREADID_hash", "bn_mul_recursive", "x264_8_lookahead_init", "ff_hevc_put_qpel_bi_neon_wrapper", "ff_hevc_merge_flag_decode", "ff_put_h264_qpel16_mc03_neon", "AES_set_decrypt_key", "ff_network_wait_fd", "avfilter_graph_free", "SSL_want", "ec_GFp_simple_set_Jprojective_coordinates_GFp", "ff_j_rev_dct4", "av_thread_message_queue_send", "ff_h264chroma_init_aarch64", "ff_hevc_put_hevc_epel_uni_hv48_8_neon", "ssl3_put_cipher_by_char", "x264_8_me_refine_bidir_satd", "tls1_check_chain", "av_log", "i2d_AUTHORITY_KEYID", "BN_kronecker", "ff_fft_permute_neon", "X509V3_add_value_bool", "EVP_PKEY_meth_copy", "GENERAL_NAME_set0_value", "ff_emulated_edge_mc_16", "engine_table_doall", "EVP_des_cfb8", "avfilter_version", "ff_h264_idct_add8_422_8_c", "av_aes_ctr_set_random_iv", "SSL_CTX_free", "ssl_cipher_list_to_bytes", "BN_div", "DSO_free", "d2i_X509_REQ_bio", "ff_is_multicast_address", "rgb16tobgr32", "CMS_add0_RevocationInfoChoice", "ff_vector_fmul_reverse_neon", "i2d_EXTENDED_KEY_USAGE", "ff_match_2uint16", "CRYPTO_get_new_dynlockid", "avfilter_link_get_channels", "x264_8_pixel_avg_8x8_neon", "lh_new", "x264_8_pixel_ssd_nv12", "PKCS7_set_signed_attributes", "PKCS12_PBE_keyivgen", "ec_GF2m_simple_add", "CMS_signed_get_attr_by_NID", "DSO_METHOD_openssl", "EVP_add_digest", "ff_video_frame_pool_get", "x264_8_encoder_delayed_frames", "EC_KEY_free", "MD5_Final", "EVP_des_cbc", "x264_8_pixel_avg_4x16_neon", "av_opt_query_ranges_default", "ff_draw_init", "x264_nal_encode", "ENGINE_set_default_ECDH", "x264_8_pps_init", "X509_STORE_add_lookup", "av_base64_encode", "X509_VERIFY_PARAM_free", "ASN1_item_d2i_fp", "ff_avc_write_annexb_extradata", "ECDH_set_default_method", "ssl_cipher_get_evp", "avfilter_free", "SSL_get_selected_srtp_profile", "swri_oldapi_conv_flt_to_s16_neon", "CRYPTO_gcm128_decrypt", "tls1_mac", "av_frame_move_ref", "a2i_IPADDRESS_NC", "X509_PURPOSE_set", "BN_nist_mod_192", "BUF_MEM_grow", "ec_GF2m_simple_set_compressed_coordinates", "ff_hevc_put_hevc_qpel_uni_v8_8_neon", "ASN1_TYPE_cmp", "i2d_NETSCAPE_SPKI", "ff_simple_idct_add_10", "ff_put_pixels8_x2_no_rnd_neon", "ENGINE_register_all_ciphers", "av_abuffersink_params_alloc", "swr_next_pts", "x264_8_analyse_free_costs", "x264_8_predict_8x8_dc_c", "UI_dup_input_string", "ssl_cipher_get_cert_index", "ff_hevc_put_hevc_qpel_bi_v32_8_neon", "ff_avg_h264_qpel8_mc13_neon", "SHA384_Update", "EVP_PKEY_print_params", "BIO_set", "d2i_ASN1_PRINTABLESTRING", "PKCS7_add_signature", "bn_mul_mont_fixed_top", "BIO_asn1_set_prefix", "X509_VERIFY_PARAM_set1", "ffurl_accept", "EVP_set_pw_prompt", "i2d_DSA_PUBKEY", "DH_generate_key", "SSL_set_cert_cb", "SSL_CTX_set_srp_strength", "GENERAL_NAME_set0_othername", "ERR_load_SSL_strings", "ff_put_guid", "DH_get_ex_data", "av_image_check_sar", "ff_hevc_put_hevc_pel_uni_pixels64_8_neon", "av_fifo_size", "av_bitstream_filter_init", "X509_CRL_cmp", "PEM_ASN1_write", "x264_8_pixel_sa8d_8x8_neon", "x264_encoder_intra_refresh", "ff_hevc_dsp_init", "NCONF_free", "DES_ecb_encrypt", "ERR_load_ENGINE_strings", "ff_hevc_prev_intra_luma_pred_flag_decode", "ENGINE_unregister_pkey_meths", "avformat_get_riff_audio_tags", "ff_check_alignment", "sws_freeFilter", "BN_MONT_CTX_set_locked", "ssl_add_clienthello_use_srtp_ext", "ff_get_cpu_flags_aarch64", "X509_STORE_set_verify_cb", "ff_all_channel_layouts", "ASN1_d2i_fp", "PKCS5_pbe_set0_algor", "EVP_PBE_alg_add", "cms_ias_cert_cmp", "NCONF_load_bio", "x264_8_threadpool_wait", "i2a_ASN1_INTEGER", "X509_STORE_CTX_get0_param", "BN_GF2m_mod_sqrt_arr", "RSA_verify_PKCS1_PSS", "OCSP_RESPONSE_new", "BN_swap", "i2a_ASN1_OBJECT", "ec_GFp_simple_make_affine", "EVP_PKEY_add1_attr_by_NID", "ff_h264_filter_mb", "ff_kbd_window_init_fixed", "ASN1_primitive_new", "av_aes_ctr_init", "PEM_write_PUBKEY", "ssl_cert_inst", "EVP_PKEY_sign", "d2i_ASN1_ENUMERATED", "CMS_EnvelopedData_create", "ff_simple_idct_10", "EVP_PKEY_CTX_get_keygen_info", "ec_GF2m_simple_group_init", "av_image_copy_to_buffer", "PKCS7_simple_smimecap", "d2i_PUBKEY_bio", "X509V3_EXT_get", "ff_mov_cenc_free", "X509_REVOKED_get_ext", "av_force_cpu_flags", "X509_CRL_free", "ff_mpa_decode_header", "EC_KEY_insert_key_method_data", "EVP_CIPHER_CTX_new", "ec_GF2m_simple_field_div", "ff_init_cabac_encoder", "ECPARAMETERS_new", "x264_8_macroblock_analyse", "SSL_get0_alpn_selected", "X509V3_get_value_int", "ff_sws_init_input_funcs", "av_get_random_seed", "SSL_CTX_get0_certificate", "av_hash_get_name", "EVP_PKEY_derive", "ff_hevc_extract_rbsp", "av_fmt_ctx_get_duration_estimation_method", "PEM_write_bio_X509_REQ_NEW", "X509_CRL_set_version", "av_frame_set_pkt_pos", "x264_8_macroblock_write_cavlc", "av_frame_alloc", "ff_h264_pred_direct_motion", "DH_get_2048_256", "i2d_DSA_PUBKEY_fp", "x264_8_slicetype_analyse", "ssl_update_cache", "x264_8_macroblock_deblock", "x264_8_encoder_open", "av_image_fill_linesizes", "SSL_CTX_set_tlsext_use_srtp", "ff_getSwsFunc", "av_pkt_dump2", "ASN1_BMPSTRING_free", "BIO_method_type", "_CONF_new_section", "ff_init_ff_sine_windows_fixed", "dtls1_dispatch_alert", "ff_hevc_put_hevc_qpel_v24_8_neon", "ssl23_default_timeout", "X509_REQ_set_version", "ERR_remove_state", "ff_init_vscale_pfn", "EVP_PKEY_cmp", "av_frame_get_qp_table", "swr_is_initialized", "i2d_GENERAL_NAME", "X509_alias_get0", "d2i_PKCS12_BAGS", "SSL_SESSION_set_ex_data", "CONF_dump_fp", "UI_set_result", "OBJ_NAME_cleanup", "av_frame_get_side_data", "AUTHORITY_INFO_ACCESS_free", "ff_all_channel_counts", "ff_float_dsp_init_aarch64", "SSL_alert_type_string_long", "SMIME_write_CMS", "avcodec_version", "dtls1_ctrl", "PEM_write_RSAPublicKey", "av_mastering_display_metadata_alloc", "asn1_add_error", "level_find_node", "ENGINE_register_all_ECDSA", "av_write_frame", "av_strlcat", "CERTIFICATEPOLICIES_free", "avfilter_next", "EC_EX_DATA_get_data", "d2i_X509_ATTRIBUTE", "SSL_CTX_set_srp_verify_param_callback", "d2i_PrivateKey_fp", "BN_BLINDING_set_thread_id", "X509_gmtime_adj", "ec_GFp_simple_point_init", "EVP_aes_192_wrap", "av_get_cpu_flags", "X509_STORE_CTX_get_ex_new_index", "ENGINE_add", "ff_mov_get_channel_layout", "i2d_ECPrivateKey", "ff_hevc_put_hevc_pel_pixels12_8_neon", "av_blowfish_crypt", "d2i_PBEPARAM", "av_rescale_rnd", "CAST_encrypt", "RC4_set_key", "ff_openssl_deinit", "BN_mod_lshift1", "x264_8_reference_build_list_optimal", "ff_http_init_auth_state", "ERR_peek_last_error", "ff_hevc_put_hevc_epel_bi_v8_8_neon", "av_memcpy_backptr", "Camellia_Ekeygen", "EVP_PKEY_meth_set_signctx", "ff_h264_fill_mbaff_ref_list", "d2i_ECPrivateKey_fp", "ff_get_audio_buffer", "EVP_CipherFinal_ex", "x264_8_cabac_context_init", "PEM_write_X509", "BIO_ctrl_wpending", "SSL_CTX_get_ssl_method", "ERR_load_CONF_strings", "CMAC_CTX_cleanup", "PKCS7_DIGEST_new", "ssl3_ctx_callback_ctrl", "EC_POINTs_make_affine", "ENGINE_set_RSA", "PKCS7_ENVELOPE_new", "UI_get_result_minsize", "av_application_did_tcp_connect_ip_port", "PKCS7_get_smimecap", "avutil_license", "av_pix_fmt_swap_endianness", "X509_STORE_CTX_set0_param", "PEM_read_bio_NETSCAPE_CERT_SEQUENCE", "ff_hevc_put_hevc_epel_v12_8_neon", "PEM_read_X509_AUX", "ff_hevc_put_hevc_qpel_hv16_8_neon", "BUF_memdup", "ff_imdct_calc_neon", "x264_slurp_file", "DIRECTORYSTRING_free", "PKCS7_add_attrib_content_type", "CRYPTO_remalloc", "X509_get0_pubkey_bitstr", "RSA_padding_check_PKCS1_type_1", "SSL_CTX_use_serverinfo", "d2i_PKCS7", "tls1_set_server_sigalgs", "CMS_get0_content", "BIO_new_NDEF", "ASN1_mbstring_copy", "ff_slice_thread_free", "EVP_PKEY_print_private", "PEM_read_bio_ECPrivateKey", "ASN1_STRING_TABLE_cleanup", "UI_method_get_flusher", "EVP_des_ede3_wrap", "av_opt_set_dict_val", "SSL_CTX_SRP_CTX_free", "avio_seek", "x264_8_plane_copy_core_neon", "x264_8_weight_scale_plane", "ff_set_dimensions", "ff_mov_add_hinted_packet", "SSL_state_string_long", "ff_amf_get_string", "EVP_des_ede_cbc", "X509_LOOKUP_by_fingerprint", "SHA_Init", "d2i_RSAPrivateKey_fp", "PEM_read_bio_X509", "RSA_up_ref", "X509_NAME_get_text_by_OBJ", "ff_amf_get_field_value", "ff_simple_idct84_add", "ff_avc_find_startcode", "dtls1_read_failed", "ENGINE_set_load_privkey_function", "ssl3_send_cert_status", "X509_STORE_set_flags", "SSL_CTX_flush_sessions", "x264_8_pixel_ssd_8x16_neon", "av_fifo_reset", "BN_BLINDING_thread_id", "BN_nist_mod_224", "x264_8_mc_weight_w20_neon", "BIO_get_ex_new_index", "EVP_md5", "swr_free", "ff_parse_creation_time_metadata", "av_program_add_stream_index", "GENERAL_NAME_print", "d2i_ASN1_IA5STRING", "PEM_write_bio_RSAPublicKey", "X509_check_private_key", "SSL_set_purpose", "OBJ_txt2obj", "RAND_set_rand_engine", "avfilter_pad_get_name", "PKCS5_PBKDF2_HMAC", "SSL_set_tmp_rsa_callback", "x264_encoder_delayed_frames", "ff_faandct248", "ff_hevc_transform_4x4_neon_8", "PKCS12_x509crl2certbag", "x264_8_macroblock_bipred_init", "ssl3_setup_key_block", "SSL_set_bio", "avfilter_make_format64_list", "ec_GFp_simple_field_mul", "shuffle_bytes_3012", "x264_8_lookahead_put_frame", "CONF_load_bio", "SMIME_write_ASN1", "av_md5_update", "x264_8_predict_8x8c_h_c", "x264_8_encoder_intra_refresh", "av_twofish_init", "CRYPTO_dbg_set_options", "SHA384_Init", "OBJ_add_sigid", "POLICY_MAPPING_free", "ERR_func_error_string", "av_thread_message_queue_recv", "RSA_padding_add_PKCS1_PSS", "RIPEMD160_Update", "sws_get_class", "ffurl_closep", "av_frame_clone", "x264_8_predict_8x16c_p_c", "CRYPTO_gcm128_release", "ff_listen", "TLSv1_1_server_method", "RSA_blinding_on", "i2d_PKEY_USAGE_PERIOD", "ff_hevc_put_hevc_qpel_h8_8_neon", "ASN1_PCTX_set_oid_flags", "ffio_read_partial", "X509_policy_level_get0_node", "BF_encrypt", "avformat_license", "ff_h264_chroma422_dc_dequant_idct_14_c", "RC2_cfb64_encrypt", "x264_8_pixel_sad_x3_16x8_neon", "SSL_CIPHER_find", "DSA_generate_key", "GENERAL_NAME_get0_value", "EVP_PKEY_CTX_set_cb", "ff_hevc_put_hevc_epel_bi_v16_8_neon", "x264_8_mb_encode_chroma", "av_find_program_from_stream", "ff_get_unscaled_swscale", "EC_KEY_get0_group", "ff_pred16x16_plane_neon", "EVP_aes_256_cbc", "ff_hevc_put_hevc_epel_uni_hv32_8_neon", "X509_REQ_add1_attr_by_txt", "X509_verify_cert", "BF_ofb64_encrypt", "ff_hevc_put_hevc_epel_bi_h32_8_neon", "ff_sine_window_init", "x264_8_pixel_sa8d_satd_16x16_neon", "av_append_path_component", "ff_hevc_put_hevc_pel_bi_pixels64_8_neon", "x264_8_macroblock_tree_read", "EVP_EncodeFinal", "av_timecode_get_smpte_from_framenum", "EVP_rc2_cbc", "X509_PURPOSE_add", "ff_h264_decode_seq_parameter_set", "tls1_set_curves_list", "BN_get0_nist_prime_224", "av_d2q", "ec_GF2m_simple_is_on_curve", "BIO_s_file", "ff_aac_ac3_parse", "bn_sqr_comba4", "POLICYQUALINFO_new", "BIO_f_md", "ff_parse_specific_params", "X509_STORE_CTX_get_explicit_policy", "av_gcd", "SSL_connect", "SXNET_get_id_INTEGER", "MD4_Transform", "EVP_PKEY_verify_recover_init", "avcodec_find_encoder_by_name", "CMS_RecipientInfo_kari_orig_id_cmp", "d2i_EC_PUBKEY_fp", "i2d_ASN1_SET", "SSL_CTX_use_psk_identity_hint", "PEM_read_RSAPrivateKey", "ENGINE_get_default_RSA", "ff_h264_get_slice_type", "hex_to_string", "av_seek_frame", "ssl_fill_hello_random", "BN_RECP_CTX_set", "ff_parse_channel_layout", "ff_put_h264_qpel8_mc11_neon", "SSL_CTX_get_verify_depth", "ff_interleave_packet_per_dts", "av_tree_destroy", "ff_hevc_put_hevc_epel_uni_v4_8_neon", "ff_hevc_put_hevc_qpel_h32_8_neon", "cms_RecipientInfo_kari_encrypt", "av_xtea_init", "EC_KEY_get_enc_flags", "X509_get_signature_nid", "SSL_CTX_add_session", "ENGINE_get_ssl_client_cert_function", "av_parser_parse2", "X509_STORE_set1_param", "EC_KEY_set_enc_flags", "SRP_Calc_x", "ffio_limit", "DH_set_ex_data", "ASN1_STRING_print_ex", "av_bprint_append_data", "SRP_Calc_B", "BN_sub", "RAND_bytes", "DES_ede3_cfb_encrypt", "ff_hevc_put_hevc_qpel_bi_v6_8_neon", "SSL_CTX_use_PrivateKey_file", "AUTHORITY_KEYID_free", "dtls1_connect", "OBJ_add_object", "ff_decode_sbr_extension", "CRYPTO_get_ex_data_implementation", "ff_h264_idct8_add4_14_c", "ff_faanidct", "EVP_PKEY_CTX_get_cb", "d2i_ASN1_BIT_STRING", "RSA_padding_check_SSLv23", "ff_hevc_put_hevc_epel_bi_h24_8_neon", "SHA224_Update", "ff_avg_h264_qpel8_mc22_neon", "BN_get0_nist_prime_384", "av_strtok", "avio_r8", "x264_8_predict_16x16_dc_top_neon", "ff_network_wait_fd_timeout", "SSL_get_session", "CRYPTO_set_add_lock_callback", "EVP_PKEY_set1_DH", "ff_fdctdsp_init", "EVP_PKEY_set1_EC_KEY", "dsa_paramgen_check_g", "CONF_imodule_get_name", "ERR_load_DSA_strings", "i2d_ASN1_GENERALSTRING", "avcodec_get_edge_width", "av_frame_get_pkt_pos", "ff_wav_codec_get_id", "BUF_strlcat", "DH_KDF_X9_42", "ff_rfps_add_frame", "ff_sbrdsp_init", "X509_ocspid_print", "avpriv_alloc_fixed_dsp", "ENGINE_set_ctrl_function", "BIO_s_null", "swr_get_class", "X509_ATTRIBUTE_create", "BIO_hex_string", "ff_hevc_weight_bi_neon", "EVP_aes_192_ccm", "ff_hevcdsp_init_arm64", "X509_VERIFY_PARAM_set1_ip", "x264_8_encoder_parameters", "SSL_CTX_use_serverinfo_file", "X509_STORE_free", "X509_REVOKED_get_ext_by_critical", "av_small_strptime", "EVP_PKEY_meth_set_ctrl", "DSA_OpenSSL", "EVP_DecodeFinal", "ec_GF2m_simple_mul", "ff_copy_rectangle2", "ff_imdct15_init_aarch64", "av_tea_crypt", "PKCS7_SIGNER_INFO_free", "PEM_read_bio_PKCS8", "OBJ_NAME_do_all", "ff_h264_idct_add_neon", "avio_wl64", "DSO_load", "EVP_PKEY_meth_set_init", "X509_STORE_set_depth", "X509_REQ_INFO_new", "av_sha_final", "DSA_generate_parameters_ex", "ff_biweight_h264_pixels_4_neon", "SSL_CTX_set_psk_client_callback", "SSL_version", "ASN1_TYPE_new", "avcodec_get_context_defaults3", "X509_OBJECT_retrieve_match", "ff_avfilter_graph_update_heap", "x264_8_predict_8x8_ddl_neon", "SSL_set_verify", "engine_table_cleanup", "ssl_set_cert_masks", "avpriv_put_string", "OCSP_RESPBYTES_free", "EVP_camellia_128_ofb", "av_dict_count", "SSL_CTX_get_info_callback", "ASN1_BIT_STRING_new", "EVP_aes_192_ctr", "RSA_sign", "ECDSA_METHOD_set_flags", "SSL_CTX_set_client_cert_engine", "EVP_PKEY_CTX_new", "EVP_CIPHER_do_all", "rgb15tobgr16", "string_to_hex", "X509at_get_attr_by_NID", "BN_mod_inverse", "CRYPTO_THREADID_set_callback", "avio_read_dir", "SSL_SESSION_get_timeout", "d2i_X509_REVOKED", "X509_email_free", "dtls1_write_app_data_bytes", "ff_put_v", "EVP_PKEY_get0_asn1", "EC_get_builtin_curves", "X509_VERIFY_PARAM_add1_host", "tls1_cert_verify_mac", "ff_h264_decode_mb_cavlc", "MD4_Final", "av_basename", "transform_32x32_add_neon_col", "BN_clear", "ff_put_h264_qpel16_mc21_neon", "BN_MONT_CTX_copy", "x264_8_mc_weight_w4_nodenom_neon", "X509_VERIFY_PARAM_add0_table", "ssl_undefined_void_function", "ECDH_get_ex_new_index", "PKCS7_ISSUER_AND_SERIAL_free", "av_get_channel_name", "bn_mul_normal", "EVP_PKEY_paramgen", "X509_PURPOSE_get0_sname", "ripemd160_block_data_order", "avcodec_encode_subtitle", "av_dict_copy", "RAND_set_rand_method", "av_frame_get_decode_error_flags", "SSL_SRP_CTX_free", "ff_fft_init_aarch64", "X509v3_get_ext_by_critical", "X509_ALGOR_set_md", "ff_check_interrupt", "PKCS12_SAFEBAG_new", "ff_merge_samplerates", "EXTENDED_KEY_USAGE_free", "BN_RECP_CTX_new", "asn1_const_Finish", "ENGINE_load_public_key", "EVP_cleanup", "ff_mpadsp_apply_window_fixed", "X509_NAME_oneline", "ssl_add_clienthello_renegotiate_ext", "ASN1_UTCTIME_set", "ff_h264_decode_init_vlc", "av_base64_decode", "X509_load_cert_crl_file", "ff_h264_chroma_dc_dequant_idct_9_c", "X509_new", "pitem_new", "av_crc_init", "CONF_module_add", "avcodec_flush_buffers", "CRYPTO_set_mem_debug_options", "X509_CRL_set_nextUpdate", "OBJ_NAME_init", "BN_BLINDING_get_flags", "PKCS7_ENC_CONTENT_free", "EC_METHOD_get_field_type", "ASN1_GENERALIZEDTIME_adj", "ASN1_T61STRING_new", "ECDH_get_ex_data", "av_opt_is_set_to_default", "SSL_renegotiate", "av_stristart", "x264_8_cabac_encode_decision_c", "x264_8_macroblock_thread_allocate", "x264_8_mc_weight_w20_offsetadd_neon", "avio_alloc_context", "X509_ATTRIBUTE_create_by_txt", "ec_GFp_simple_points_make_affine", "i2d_X509_REQ_INFO", "PEM_get_EVP_CIPHER_INFO", "OCSP_REQ_CTX_new", "ff_thread_ref_frame", "av_camellia_alloc", "i2d_OCSP_CERTID", "av_frame_set_sample_rate", "BF_cbc_encrypt", "swr_drop_output", "CRYPTO_push_info_", "i2d_ECParameters", "x264_8_predict_8x16c_v_neon", "ff_hevc_put_hevc_qpel_v8_8_neon", "avcodec_descriptor_get_by_name", "ff_put_pixels8_neon", "EC_EX_DATA_clear_free_data", "ASN1_UNIVERSALSTRING_free", "X509_VERIFY_PARAM_lookup", "X509_LOOKUP_by_issuer_serial", "ffio_free_dyn_buf", "ff_hevc_put_qpel_uni_w_neon_8", "SSL_CTX_set1_param", "X509_LOOKUP_shutdown", "ff_hevc_put_hevc_epel_bi_hv4_8_neon", "ENGINE_get_ctrl_function", "X509V3_EXT_add_conf", "av_hash_names", "NAME_CONSTRAINTS_free", "ff_add_param_change", "PEM_read_bio_RSAPrivateKey", "X509_issuer_and_serial_hash", "X509_ATTRIBUTE_get0_data", "Camellia_set_key", "av_get_bytes_per_sample", "av_get_channel_layout", "dtls1_listen", "CRYPTO_ccm128_init", "EVP_CipherInit_ex", "EVP_MD_pkey_type", "OCSP_CERTID_new", "i2d_ASN1_BIT_STRING", "avcodec_get_type", "DH_size", "RC2_ecb_encrypt", "PKCS12_MAKE_KEYBAG", "OCSP_RESPID_free", "PEM_write_bio_DSAparams", "av_vorbis_parse_frame_flags", "md4_block_data_order", "DES_ede3_ofb64_encrypt", "X509_get_ext_d2i", "ff_avg_pixels8_x2_neon", "MD5_Init", "ASN1_put_object", "EVP_des_ede_ofb", "ssl_cert_set0_chain", "X509_PKEY_free", "avio_check", "x264_8_predict_8x8_h_c", "EVP_camellia_256_ecb", "i2d_OCSP_SIGNATURE", "ff_prefetch_aarch64", "av_filename_number_test", "X509_CRL_new", "X509_check_akid", "SEED_decrypt", "av_pix_fmt_desc_get_id", "ff_hevc_put_pixels_w48_neon_8", "X509_STORE_set_trust", "CMS_signed_add1_attr", "SSL_CTX_get_cert_store", "ff_put_h264_qpel16_mc23_neon", "X509_check_ip", "av_buffer_ref", "ffio_close_null_buf", "ff_weight_h264_pixels_8_neon", "x264_8_predict_8x8_dc_neon", "d2i_PKCS7_SIGNED", "ff_idctdsp_init", "av_parser_next", "av_reallocp_array", "EVP_DigestFinal", "DES_ede3_cfb64_encrypt", "ENGINE_remove", "SXNET_new", "av_read_pause", "av_parse_cpu_flags", "d2i_POLICYINFO", "UI_add_input_boolean", "d2i_EDIPARTYNAME", "av_opt_get_sample_fmt", "i2d_ECPrivateKey_bio", "BN_mod_lshift_quick", "av_register_input_format", "avcodec_fill_audio_frame", "EVP_md4", "x264_8_macroblock_write_cabac", "SSL_get_current_expansion", "ff_amf_read_null", "SSL_set_tlsext_use_srtp", "CRYPTO_ofb128_encrypt", "CRYPTO_is_mem_check_on", "EVP_get_cipherbyname", "i2d_PKCS7_ENCRYPT", "ff_sine_window_init_fixed", "av_log_get_level", "BN_hex2bn", "d2i_PrivateKey", "av_codec_is_encoder", "TLSv1_method", "avcodec_get_frame_class", "UI_method_set_closer", "OCSP_REVOKEDINFO_new", "custom_ext_parse", "ssl_cert_new", "x264_encoder_maximum_delayed_frames", "ASN1_UTF8STRING_free", "ff_h264_idct_dc_add_10_c", "i2d_SSL_SESSION", "swr_alloc_set_opts", "dtls1_link_min_mtu", "x264_8_mb_predict_mv_pskip", "X509_VERIFY_PARAM_set1_ip_asc", "av_shrink_packet", "ff_formats_ref", "ff_hevc_put_hevc_epel_uni_h12_8_neon", "ff_parse_sample_rate", "x264_8_noise_reduction_update", "SSL_dup_CA_list", "sws_getColorspaceDetails", "X509_STORE_CTX_get0_policy_tree", "EVP_PKEY_add1_attr_by_txt", "RSA_OAEP_PARAMS_new", "transform_32x32_add_neon_row_8", "avfilter_license", "ff_hevc_put_hevc_qpel_uni_h12_8_neon", "ff_put_h264_qpel8_mc33_neon", "ssl3_cbc_record_digest_supported", "asn1_GetSequence", "DIRECTORYSTRING_new", "i2d_ISSUING_DIST_POINT", "TLSv1_2_server_method", "rgb64to48_nobswap", "av_vbprintf", "BIO_s_mem", "SSL_CTX_use_certificate_ASN1", "i2d_X509", "ff_mpa_synth_init_fixed", "DSA_up_ref", "PKCS12_unpack_authsafes", "ff_h264dsp_init_aarch64", "custom_ext_init", "ec_GF2m_simple_point_copy", "EVP_PKEY_meth_get_encrypt", "ff_isom_write_avcc", "d2i_ISSUING_DIST_POINT", "RSAPublicKey_dup", "CRYPTO_realloc", "PKCS7_ISSUER_AND_SERIAL_digest", "ECDH_get_default_method", "SSL_set_debug", "ff_hevc_put_hevc_epel_v24_8_neon", "BN_mod_lshift1_quick", "SSL_CTX_sess_get_remove_cb", "PKCS12_unpack_p7data", "X509_REQ_dup", "ASN1_seq_unpack", "av_frame_set_channels", "ssl_create_cipher_list", "EC_POINT_get_affine_coordinates_GFp", "ENGINE_register_RAND", "X509_REQ_INFO_free", "x264_8_predict_8x8c_dc_left_neon", "ec_GF2m_precompute_mult", "ff_add_format", "ff_put_h264_qpel8_mc32_neon", "i2d_ASN1_BMPSTRING", "av_stristr", "avformat_get_mov_video_tags", "ERR_load_BN_strings", "PKCS12_item_decrypt_d2i", "ff_h264_decode_init", "ENGINE_get_load_pubkey_function", "ff_imdct15_uninit", "avutil_configuration", "i2d_X509_PKEY", "av_mul_q", "ff_hevc_put_hevc_pel_uni_pixels4_8_neon", "SSL_set_state", "ssl3_send_server_certificate", "rgb48tobgr48_nobswap", "i2d_PKCS8PrivateKeyInfo_bio", "ff_hevc_put_hevc_pel_bi_pixels6_8_neon", "EVP_PKEY_CTX_set_app_data", "CMS_set_detached", "ff_hevc_put_hevc_epel_uni_v6_8_neon", "ff_put_h264_qpel8_mc20_neon", "HMAC_CTX_set_flags", "ff_hevc_frame_nb_refs", "tls12_get_sigid", "SSL_load_error_strings", "EVP_PKEY_add1_attr_by_OBJ", "av_audio_fifo_alloc", "av_opt_flag_is_set", "idea_encrypt", "ff_rtp_enc_name", "ff_format_io_close", "av_fifo_generic_write", "OCSP_CERTSTATUS_new", "ff_hevc_put_hevc_pel_pixels4_8_neon", "X509_REVOKED_set_revocationDate", "TXT_DB_insert", "dtls1_check_timeout_num", "ff_sws_init_output_funcs", "X509_CERT_PAIR_new", "DTLSv1_client_method", "x264_8_deblock_v_chroma_intra_neon", "ff_h264_idct_add_10_c", "CMS_RecipientInfo_kari_get0_ctx", "d2i_ASN1_BOOLEAN", "x264_8_zigzag_scan_8x8_field_neon", "custom_exts_copy_flags", "ENGINE_get_pkey_meth_engine", "ERR_load_RAND_strings", "BIO_sock_should_retry", "BF_ecb_encrypt", "d2i_ASN1_UTF8STRING", "av_probe_input_buffer2", "OBJ_cleanup", "ssl_parse_serverhello_tlsext", "PROXY_CERT_INFO_EXTENSION_new", "ssl3_get_server_done", "X509_NAME_ENTRY_create_by_NID", "transform_16x16_add_neon_col_8", "EC_GROUP_get_curve_GFp", "x264_8_ratecontrol_start", "SSL_get_ciphers", "d2i_RSAPrivateKey", "ssl23_get_cipher_by_char", "x264_reduce_fraction64", "X509_STORE_CTX_get1_chain", "swri_audio_convert", "ff_amf_write_string2", "RSA_padding_add_PKCS1_OAEP", "ASN1_item_d2i", "ff_hevc_put_hevc_qpel_h48_8_neon", "DH_get_ex_new_index", "ec_GF2m_simple_points_make_affine", "X509_verify", "BN_num_bits_word", "CONF_imodule_get_module", "avformat_match_stream_specifier", "av_i2int", "x264_8_pixel_ssd_16x16_neon", "X509_time_adj", "ff_hevc_unref_frame", "dtls1_get_record", "ACCESS_DESCRIPTION_free", "NAME_CONSTRAINTS_check", "ff_hevc_sao_band_position_decode", "ec_GFp_mont_group_copy", "PKEY_USAGE_PERIOD_new", "av_des_init", "ff_hevc_decode_nal_sps", "OCSP_REQ_CTX_set1_req", "av_bprint_get_buffer", "ff_hevc_sao_eo_class_decode", "X509_check_ca", "ECDSA_METHOD_set_name", "ff_interleave_add_packet", "x264_8_frame_copy_picture", "X509_PUBKEY_get0_param", "DSO_set_filename", "i2d_CERTIFICATEPOLICIES", "ff_get_v_length", "EC_GROUP_cmp", "av_opt_copy", "ASN1_item_sign", "ff_hevc_decode_nal_pps", "BUF_strnlen", "d2i_ASN1_TIME", "ff_init_poc", "ff_socket_nonblock", "DSA_sign", "X509_get_ext", "av_thread_message_queue_set_err_recv", "x264_8_sync_frame_list_delete", "tls1_check_curve", "RSA_private_encrypt", "EVP_CIPHER_asn1_to_param", "BN_BLINDING_free", "X509_CRL_sort", "ff_hevc_put_qpel_uw_h1v1_neon_8", "ec_GFp_mont_field_set_to_one", "ASN1_PCTX_get_str_flags", "ff_h264_idct8_add4_12_c", "x264_8_decimate_score16_neon", "i2d_RSA_PUBKEY", "EVP_PKEY_asn1_copy", "lh_doall", "SRP_user_pwd_free", "BIO_int_ctrl", "set_cur_idx", "ff_hevc_put_hevc_qpel_uni_v12_8_neon", "SHA256_Transform", "BN_nist_mod_521", "x264_8_sps_init_scaling_list", "ASN1_item_verify", "CMS_RecipientInfo_kari_get0_orig_id", "ff_write_chained", "ff_mov_cenc_write_stbl_atoms", "EVP_CIPHER_CTX_set_key_length", "EVP_PKEY_CTX_ctrl", "ff_hevc_put_hevc_qpel_uni_v48_8_neon", "ff_get_qtpalette", "i2d_X509_VAL", "PEM_write_bio_ASN1_stream", "ff_thread_release_buffer", "SSL_CTX_set_session_id_context", "PEM_read_bio_X509_REQ", "EVP_PKEY_asn1_set_param", "ssl23_accept", "ff_put_h264_qpel16_mc01_neon", "sws_isSupportedInput", "ff_end_tag", "ERR_get_next_error_library", "ff_mov_write_chan", "CONF_modules_finish", "ASN1_INTEGER_cmp", "BN_GF2m_mod_inv_arr", "avio_rb64", "X509_PUBKEY_set0_param", "sws_allocVec", "DTLSv1_2_client_method", "ff_simple_idct44_add", "EVP_PKEY_get_attr_count", "av_gettime", "SHA384_Final", "BN_CTX_init", "DH_compute_key_padded", "av_tempfile", "ASN1_TYPE_set_int_octetstring", "BIO_method_name", "ff_h264_idct_add8_neon", "ff_aac_sbr_init", "RSA_private_decrypt", "ff_pred8x8_plane_neon", "X509_ATTRIBUTE_dup", "x264_8_zigzag_init", "ssl3_ctrl", "ff_mdct_init", "x264_8_pixel_avg2_w8_neon", "DSA_size", "d2i_X509_CRL", "ssl3_enc", "UI_destroy_method", "EC_POINT_point2bn", "ASN1_STRING_TABLE_get", "engine_pkey_meths_free", "av_parse_cpu_caps", "X509_add1_reject_object", "BIO_new_fp", "ff_hevc_put_hevc_qpel_v16_8_neon", "BN_get0_nist_prime_521", "EVP_aes_128_cbc_hmac_sha1", "ff_simple_idct_12", "i2d_PKCS8PrivateKey_nid_fp", "ff_parse_key_value", "avpriv_mpegts_parse_open", "EVP_CIPHER_CTX_ctrl", "EC_POINT_free", "RC2_cbc_encrypt", "av_frame_get_channel_layout", "x264_8_threads_merge_ratecontrol", "EVP_CIPHER_CTX_set_flags", "ASN1_STRING_copy", "ENGINE_get_init_function", "av_opt_eval_float", "ssl_get_cipher_by_char", "x264_8_frame_pop_unused", "EC_POINT_dbl", "av_hmac_final", "av_index_search_timestamp", "SSL_use_certificate_file", "ff_h264_pred_init_aarch64", "ff_hevc_put_pixels_w24_neon_8", "av_packet_get_side_data", "BIO_asn1_set_suffix", "X509_EXTENSION_set_critical", "CMS_is_detached", "PKCS12_MAC_DATA_new", "DSA_get_ex_data", "get_error_type", "ff_hevc_put_qpel_uw_v3_neon_8", "X509_EXTENSION_set_data", "av_packet_new_side_data", "UI_set_method", "i2d_RSAPublicKey", "ASN1_digest", "EC_PRIVATEKEY_new", "avpriv_set_systematic_pal2", "avio_wb24", "x264_8_frame_filter", "sws_convVec", "SSL_set_psk_server_callback", "CONF_parse_list", "PKCS7_get_issuer_and_serial", "d2i_PKCS7_ENVELOPE", "OCSP_RESPDATA_free", "EXTENDED_KEY_USAGE_new", "ff_video_frame_pool_uninit", "ff_hevc_put_qpel_h2v3_neon_8", "i2d_EC_PUBKEY_bio", "ASN1_PRINTABLE_type", "ff_avg_h264_qpel8_mc11_neon", "CERTIFICATEPOLICIES_new", "EVP_PKEY_asn1_add0", "ff_hevc_cu_qp_delta_abs", "BIO_get_callback_arg", "ff_init_ff_cos_tabs", "CMS_ContentInfo_free", "SSL_library_init", "ff_mpa_synth_filter_float", "X509at_add1_attr_by_txt", "ff_filter_alloc", "av_opt_eval_double", "x264_8_mc_weight_w4_offsetadd_neon", "EC_GROUP_get_mont_data", "ENGINE_get_pkey_asn1_meth_engine", "CONF_modules_load", "chroma_mc_fixed_bs_put_dsp", "CONF_imodule_set_usr_data", "X509v3_delete_ext", "CMS_add0_CertificateChoices", "X509_ATTRIBUTE_create_by_NID", "X509_EXTENSION_create_by_OBJ", "d2i_DSA_PUBKEY", "i2d_ASN1_bio_stream", "bn_mod_add_fixed_top", "d2i_OCSP_REQUEST", "av_fast_malloc", "x264_8_quant_2x2_dc_neon", "av_display_rotation_get", "av_frame_get_metadata", "bn_sqr_comba8", "PKCS12_pbe_crypt", "PEM_write_bio_PrivateKey", "ff_avg_h264_qpel16_mc13_neon", "BN_lshift", "X509_STORE_CTX_get1_issuer", "EVP_aes_192_ofb", "ff_fetch_timestamp", "get_server_ip", "ssl_add_clienthello_tlsext", "av_rdft_init", "ASN1_INTEGER_free", "d2i_PKCS7_SIGN_ENVELOPE", "ff_h264_update_thread_context", "X509_STORE_CTX_get_error", "X509at_get_attr_count", "X509_OBJECT_retrieve_by_subject", "RSA_get_ex_data", "av_sha_init", "EC_GROUP_set_curve_GFp", "dtls1_retransmit_message", "ff_put_h264_qpel16_mc20_neon", "avfilter_graph_alloc_filter", "ff_put_pixels16_xy2_no_rnd_neon", "EVP_camellia_192_cfb1", "X509_STORE_CTX_init", "ASN1_item_ndef_i2d", "X509_NAME_get_entry", "av_strstart", "ff_mp4_parse_es_descr", "tls1_heartbeat", "SSL_COMP_set0_compression_methods", "av_samples_copy", "av_get_pix_fmt_string", "X509_add_ext", "NOTICEREF_new", "ff_hevc_dsp_init_act", "PEM_write_bio_PKCS8PrivateKey", "av_get_sample_fmt", "ECDH_compute_key", "X509_VERIFY_PARAM_get0_peername", "UI_add_verify_string", "av_lfg_init", "ASN1_GENERALIZEDTIME_set", "ff_j_rev_dct1", "av_opt_get_dict_val", "policy_cache_free", "ff_h264_decode_picture_parameter_set", "av_bprint_finalize", "av_packet_pack_dictionary", "EC_POINT_set_affine_coordinates_GF2m", "SXNET_free", "ec_GFp_simple_is_at_infinity", "sws_freeContext", "avcodec_register_all", "PEM_write_PKCS8PrivateKey_nid", "SSL_CTX_get0_param", "d2i_OCSP_BASICRESP", "dtls1_double_timeout", "av_opt_next", "d2i_PKCS7_ENCRYPT", "X509V3_EXT_add", "av_rdft_calc", "EVP_des_ede_ecb", "PKCS7_get_attribute", "i2d_DSAPrivateKey_fp", "ff_data_to_hex", "X509_check_host", "ssl23_get_cipher", "dtls1_buffer_message", "i2d_OCSP_REQINFO", "ff_h264_idct_add8_8_c", "avio_close_dir", "x264_8_slicetype_decide", "ff_h264_idct_add8_10_c", "BN_add", "ec_GF2m_simple_group_check_discriminant", "ASN1_BMPSTRING_new", "X509_VERIFY_PARAM_clear_flags", "x264_8_pixel_hadamard_ac_16x8_neon", "RSA_free", "cms_content_bio", "rgb48tobgr48_bswap", "SSL_get_cipher_list", "CRYPTO_ctr128_encrypt", "ASN1_BIT_STRING_set_bit", "X509_reject_clear", "SSL_use_RSAPrivateKey_file", "X509_REQ_get_extensions", "ff_hevc_end_of_slice_flag_decode", "chroma_mc_fixed_bs_avg_dsp", "X509_REQ_set_pubkey", "SSLv23_server_method", "swr_set_matrix", "d2i_OCSP_RESPDATA", "d2i_EXTENDED_KEY_USAGE", "ASN1_GENERALIZEDTIME_free", "d2i_ASN1_PRINTABLE", "ec_GFp_simple_group_copy", "X509_NAME_ENTRY_dup", "ff_frame_thread_encoder_free", "ff_hevc_intra_chroma_pred_mode_decode", "CRYPTO_get_ex_new_index", "ff_h264_idct_add16_9_c", "ff_avg_h264_qpel8_mc30_neon", "ff_hevc_flush_dpb", "x264_8_predict_4x4_h_aarch64", "EVP_bf_cbc", "ff_id3v2_tag_len", "transform_16x16_add_00", "av_channel_layout_extract_channel", "av_stream_get_parser", "CMS_unsigned_get0_data_by_OBJ", "ENGINE_pkey_asn1_find_str", "x264_8_pixel_sad_x4_4x8_neon", "i2d_ACCESS_DESCRIPTION", "X509V3_EXT_nconf", "av_opt_get_q", "engine_unlocked_finish", "x264_8_hrd_fullness", "x264_8_zigzag_sub_4x4ac_frame_neon", "X509_REQ_set_extension_nids", "X509V3_EXT_CRL_add_conf", "x264_8_deblock_h_chroma_422_neon", "ff_hevc_put_hevc_qpel_uni_hv64_8_neon", "RC2_set_key", "ff_hevc_put_hevc_epel_h24_8_neon", "PEM_write_ECPrivateKey", "DH_compute_key", "ff_index_search_timestamp", "x264_8_pixel_ssd_4x8_neon", "ssl_free_wbio_buffer", "sws_normalizeVec", "EVP_EncodeBlock", "ECDH_set_method", "UI_add_error_string", "ff_butterflies_float_neon", "v2i_GENERAL_NAME", "ASN1_UTCTIME_print", "act_transform_32x32_add_8", "X509_load_cert_file", "ff_put_pixels8_y2_neon", "sws_init_context", "av_xtea_alloc", "CRYPTO_get_add_lock_callback", "av_strtod", "ff_h264_execute_ref_pic_marking", "ff_hevc_idct_4x4_dc_neon_8", "av_url_split", "ssl3_accept", "SSL_set_read_ahead", "ENGINE_get_flags", "EVP_PKEY_free", "d2i_ASN1_UTCTIME", "av_codec_get_codec_descriptor", "ff_hevc_put_hevc_pel_bi_pixels16_8_neon", "EC_POINT_clear_free", "ff_color_frame", "ff_thread_get_buffer", "ff_hevc_pcm_flag_decode", "X509_CRL_add1_ext_i2d", "EVP_cast5_ecb", "x264_8_coeff_last8_aarch64", "ENGINE_unregister_ciphers", "SSL_get_srp_g", "PROXY_POLICY_free", "PEM_X509_INFO_read_bio", "EC_GROUP_set_seed", "X509_CRL_dup", "X509_ATTRIBUTE_new", "OCSP_REQ_CTX_add1_header", "ff_get_guid", "ssl_get_server_cert_serverinfo", "ff_put_h264_qpel8_mc10_neon", "BIO_pop", "ff_add_cpb_side_data", "av_packet_side_data_name", "ff_put_h264_qpel16_mc02_neon", "dtls1_stop_timer", "ec_GFp_mont_group_clear_finish", "x264_8_zigzag_scan_8x8_frame_neon", "x264_8_sub4x4_dct_neon", "tls12_get_psigalgs", "X509_alias_set1", "ff_hevc_put_hevc_qpel_uni_v32_8_neon", "EVP_camellia_192_ofb", "i2d_NETSCAPE_CERT_SEQUENCE", "x264_8_frame_init_lowres", "av_frame_copy_props", "SSL_CTX_use_RSAPrivateKey", "ff_put_h264_qpel16_mc33_neon", "ff_avg_h264_qpel16_mc12_neon", "ff_pred8x8_left_dc_neon", "av_parse_video_size", "X509_STORE_CTX_set_verify_cb", "ff_vector_fmul_window_neon", "PEM_write_PrivateKey", "ffio_set_buf_size", "BN_mod_lshift", "X509_subject_name_cmp", "X509_REVOKED_get_ext_by_OBJ", "ASN1_UTCTIME_check", "CMS_unsigned_delete_attr", "ASN1_tag2bit", "ASN1_item_ex_new", "RAND_SSLeay", "SSL_get_wfd", "d2i_DSAPrivateKey_bio", "x264_8_pixel_avg2_w4_neon", "ENGINE_set_DSA", "ENGINE_by_id", "x264_8_thread_sync_ratecontrol", "DSA_set_default_method", "CAST_ofb64_encrypt", "DSO_get_loaded_filename", "idea_set_encrypt_key", "UI_dup_verify_string", "ssl3_free_digest_list", "CMS_set1_signers_certs", "ff_get_video_buffer", "sk_find", "set_cdn_ip", "d2i_X509_EXTENSION", "avio_enum_protocols", "ff_mov_init_hinting", "ffurl_shutdown", "SSLv23_method", "OBJ_find_sigid_by_algs", "i2d_DIST_POINT", "ff_h264_decode_extradata", "asn1_item_combine_free", "OCSP_REQ_CTX_http", "av_codec_get_tag2", "ec_GF2m_simple_point2oct", "ff_hevc_put_hevc_qpel_hv48_8_neon", "av_packet_merge_side_data", "CRYPTO_set_mem_functions", "CRYPTO_set_mem_ex_functions", "av_qsv_alloc_context", "BN_consttime_swap", "i2d_PROXY_CERT_INFO_EXTENSION", "NCONF_load", "ASN1_item_print", "av_samples_get_buffer_size", "x264_param_apply_profile", "av_codec_get_tag", "SSL_use_RSAPrivateKey_ASN1", "avio_read", "PROXY_CERT_INFO_EXTENSION_free", "EVP_PKEY_meth_set_verify_recover", "X509_CRL_delete_ext", "ff_hevc_put_hevc_epel_uni_v64_8_neon", "ff_h264_idct_add_14_c", "RC2_ofb64_encrypt", "ssl23_num_ciphers", "x264_8_predict_4x4_dc_neon", "EVP_sha", "SSL_add_client_CA", "ff_hevc_put_hevc_epel_uni_hv16_8_neon", "SSL_set_tmp_dh_callback", "x264_8_load_deinterleave_chroma_fdec_neon", "ff_hevc_put_hevc_qpel_bi_h48_8_neon", "ff_draw_round_to_sub", "SSLv23_client_method", "ffurl_seek", "BN_exp", "x264_8_ratecontrol_slice_type", "avpriv_get_gamma_from_trc", "BN_init", "av_image_alloc", "ff_hevc_put_qpel_uw_h2v2_neon_8", "ff_put_pixels8_xy2_no_rnd_neon", "BIO_puts", "bn_mul_low_recursive", "x264_8_predict_8x8c_dc_c", "ff_hevc_put_pixels_w32_neon_8", "i2d_OCSP_SINGLERESP", "av_demuxer_open", "ERR_load_DSO_strings", "av_pix_fmt_desc_next", "ERR_load_strings", "ff_h264_idct8_add_12_c", "ff_mdct_calc_c_fixed_32", "x264_8_mc_weight_w4_neon", "ff_hevc_put_qpel_h1v3_neon_8", "BN_generate_prime_ex", "EC_GF2m_simple_method", "ssl_parse_clienthello_use_srtp_ext", "ERR_get_implementation", "CMS_set1_eContentType", "ff_h264_idct_add8_9_c", "X509_REQ_get_attr_by_NID", "EVP_rc2_ecb", "private_Camellia_set_key", "ssl3_get_client_hello", "av_mdct_calc", "ff_hevc_idct_16x16_dc_neon_8", "ff_avg_pixels8_y2_neon", "ff_h264_idct8_dc_add_14_c", "pitem_free", "ff_thread_decode_frame", "CMS_add0_recipient_key", "ssl3_cbc_remove_padding", "EVP_sha224", "av_dv_codec_profile2", "ssl3_generate_master_secret", "ff_parse_time_base", "av_get_channel_layout_channel_index", "PKCS12_BAGS_new", "EC_POINT_is_at_infinity", "RSA_new_method", "sk_dup", "ec_wNAF_mul", "i2d_X509_CRL_bio", "ENGINE_register_all_RAND", "av_thread_message_queue_set_err_send", "av_register_output_format", "ASN1_generate_nconf", "RSA_public_decrypt", "ssl3_setup_write_buffer", "av_frame_get_best_effort_timestamp", "SMIME_read_CMS", "av_d3d11va_alloc_context", "DES_cfb64_encrypt", "ff_metadata_conv", "av_hex_dump", "EVP_DecodeBlock", "EVP_aes_192_cfb8", "x264_8_predict_8x16c_h_c", "avfilter_graph_parse2", "rgb12to15", "x264_8_plane_copy_swap_core_neon", "SEED_ofb128_encrypt", "av_log_get_flags", "ASN1_primitive_free", "BN_copy", "ssl3_default_timeout", "ssl3_get_req_cert_type", "BN_mod_exp_recp", "BN_mod_sub", "av_find_nearest_q_idx", "X509V3_extensions_print", "av_get_sample_fmt_name", "ff_rgb24toyv12_c", "check_defer", "i2d_DSAPrivateKey", "d2i_DHparams", "ff_h264_direct_dist_scale_factor", "x264_8_predict_8x8_v_c", "d2i_DIRECTORYSTRING", "X509_set_subject_name", "sws_getConstVec", "TLSv1_2_client_method", "X509_NAME_add_entry_by_NID", "av_opt_serialize", "SHA512_Final", "ASN1_NULL_new", "ff_stream_add_bitstream_filter", "BASIC_CONSTRAINTS_new", "ENGINE_register_DSA", "ASN1_unpack_string", "policy_cache_find_data", "ssl_undefined_const_function", "ff_hevc_put_hevc_epel_h32_8_neon", "d2i_OCSP_REQINFO", "avfilter_add_matrix", "av_bprint_init_for_buffer", "av_hmac_update", "ff_biweight_h264_pixels_16_neon", "ff_avg_h264_qpel16_mc31_neon", "ff_hevc_put_hevc_qpel_v6_8_neon", "CRYPTO_set_ex_data", "ff_h264_hl_decode_mb", "ff_hevc_put_hevc_epel_uni_h64_8_neon", "SSL_CTX_set_srp_client_pwd_callback", "BN_mod_mul_montgomery", "ff_hevc_put_qpel_h3_neon_8", "x264_8_pixel_ssd_16x8_neon", "ff_tlog_ref", "avio_closep", "SSL_CTX_set_srp_cb_arg", "ff_init_vscale", "ff_amf_write_bool", "avfilter_pad_count", "CRYPTO_malloc", "d2i_PKCS8PrivateKey_bio", "x264_8_add8x8_idct_dc_neon", "ff_jpeg_fdct_islow_8", "act_transform_4x4_add_8", "avutil_version", "ENGINE_unregister_ECDH", "x264_8_sub8x8_dct_dc_neon", "ssl3_do_uncompress", "av_get_alt_sample_fmt", "BUF_strndup", "x264_8_coeff_last15_neon", "swr_get_delay", "EVP_cast5_cbc", "av_get_time_base_q", "av_frame_set_colorspace", "ec_GFp_simple_is_on_curve", "SSL_get0_next_proto_negotiated", "CONF_imodule_get_usr_data", "avformat_network_deinit", "CMS_unsigned_add1_attr_by_NID", "av_fifo_generic_peek", "ENGINE_init", "ASN1_dup", "i2d_DHxparams", "X509at_get_attr", "swscale_configuration", "CMS_SignerInfo_verify", "ERR_load_UI_strings", "RAND_add", "X509_ATTRIBUTE_set1_data", "EVP_PKEY_new_mac_key", "SSL_get_ssl_method", "EC_GROUP_get_trinomial_basis", "CONF_module_set_usr_data", "EVP_sha256", "x264_8_mbtree_fix8_pack_neon", "X509_NAME_get_index_by_NID", "avcodec_get_subtitle_rect_class", "ff_hevc_put_hevc_epel_bi_v4_8_neon", "ssl3_final_finish_mac", "BIO_dump", "ff_hevc_split_packet", "X509_STORE_set_purpose", "BN_bntest_rand", "ENGINE_get_digest_engine", "SSL_set_accept_state", "EVP_rc2_64_cbc", "BN_GF2m_mod_mul_arr", "d2i_X509_CERT_PAIR", "ffio_open_whitelist", "EVP_PKEY2PKCS8_broken", "av_frame_make_writable", "name_cmp", "_CONF_add_string", "OBJ_ln2nid", "DH_new", "av_strerror", "CRYPTO_set_id_callback", "av_dynarray2_add", "x264_8_pixel_satd_8x16_neon", "av_reallocp", "ff_hevc_put_qpel_uw_h2_neon_8", "x264_8_macroblock_encode_p4x4", "ff_hevc_put_pixels_w6_neon_8", "ff_set_ref_count", "PEM_def_callback", "EC_POINT_new", "ENGINE_get_destroy_function", "DSA_do_sign", "BIO_vprintf", "ssl_get_new_session", "CONF_get1_default_config_file", "ssl_get_prev_session", "ECDSA_do_sign_ex", "EVP_CIPHER_CTX_iv_length", "i2d_PUBKEY", "av_get_channel_layout_string", "EC_GROUP_have_precompute_mult", "ff_hevc_sao_offset_sign_decode", "av_log_missing_feature", "x264_8_store_interleave_chroma_neon", "OTHERNAME_free", "X509_CRL_get_ext_d2i", "av_dict_get_string", "X509_add1_trust_object", "set_one_stream", "ff_hevc_put_hevc_qpel_uni_v24_8_neon", "DH_check_pub_key", "ff_hevc_put_hevc_epel_bi_hv64_8_neon", "CMAC_CTX_get0_cipher_ctx", "ECPARAMETERS_free", "i2d_PKCS12_fp", "ff_hevc_put_qpel_uw_weight_h1_neon_8", "CMS_RecipientInfo_kari_decrypt", "OPENSSL_cpuid_setup", "SSL_accept", "CRYPTO_cfb128_encrypt", "CONF_load_fp", "BN_mod_mul", "d2i_PKCS7_fp", "av_tea_alloc", "x264_8_predict_4x4_dc_top_neon", "EC_POINT_set_compressed_coordinates_GFp", "SSL_CTX_use_certificate", "NETSCAPE_CERT_SEQUENCE_free", "avio_wb64", "avpriv_get_raw_pix_fmt_tags", "EC_GROUP_get_cofactor", "PEM_write_DHxparams", "PEM_read_PKCS8_PRIV_KEY_INFO", "i2d_PKCS7_ENC_CONTENT", "ERR_print_errors_cb", "EC_GROUP_precompute_mult", "d2i_ASN1_SET", "ff_h264_decode_ref_pic_list_reordering", "X509_CRL_get_meth_data", "av_dct_init", "ASN1_STRING_clear_free", "av_blowfish_alloc", "ssl3_send_finished", "avio_w8", "ff_h264_idct_add8_422_10_c", "x264_8_coeff_level_run8_neon", "ff_h264_idct_add_9_c", "ff_ape_write_tag", "x264_8_quant_8x8_neon", "x264_8_pixel_asd8_neon", "OPENSSL_DIR_end", "avfilter_link", "EVP_CIPHER_key_length", "ssl_get_server_send_pkey", "ff_thread_free", "X509_supported_extension", "ff_hevc_put_qpel_uw_h2v1_neon_8", "X509_INFO_new", "x264_8_pixel_sa8d_16x16_neon", "ff_raw_video_read_header", "asn1_enc_restore", "EVP_aes_256_ofb", "X509_policy_node_get0_parent", "ff_h264_idct_add8_14_c", "RSA_padding_add_none", "X509_STORE_CTX_get0_current_crl", "ECDSA_SIG_free", "ASN1_STRING_length", "dtls1_hm_fragment_free", "EVP_MD_flags", "BN_mod_mul_reciprocal", "d2i_X509_NAME", "sk_set_cmp_func", "ff_hevc_put_hevc_epel_uni_hv64_8_neon", "ff_put_h264_qpel16_mc30_neon", "x264_8_deblock_h_luma_intra_neon", "BN_mod_exp_simple", "export_symbol", "CRYPTO_dbg_free", "PKCS7_ENVELOPE_free", "x264_8_deblock_h_chroma_mbaff_neon", "DES_decrypt3", "BIO_asn1_get_prefix", "ENGINE_set_default_DH", "EVP_camellia_192_cfb128", "avpriv_scalarproduct_float_c", "x264_8_sub8x8_dct8_neon", "av_codec_set_seek_preroll", "av_downmix_info_update_side_data", "EVP_EncryptInit_ex", "d2i_DSAPrivateKey", "PEM_read_bio_EC_PUBKEY", "ff_init_ff_cos_tabs_fixed_32", "ssl3_send_server_hello", "ssl3_output_cert_chain", "ff_pixblockdsp_init", "EVP_get_pw_prompt", "av_ripemd_final", "CRYPTO_get_mem_ex_functions", "ff_hevc_put_hevc_epel_v4_8_neon", "av_rc4_crypt", "BN_MONT_CTX_set", "i2d_CMS_ContentInfo", "BN_mod_exp", "av_hmac_free", "av_packet_alloc", "ff_hevc_put_qpel_uw_h2v3_neon_8", "ff_parse_sample_format", "x264_8_predict_8x8_hd_neon", "bn_cmp_words", "av_q2intfloat", "av_mul_i", "ASN1_TYPE_set", "x264_8_pixel_init", "ff_hevc_put_qpel_uw_h3v1_neon_8", "NETSCAPE_SPKI_verify", "avio_printf", "X509_NAME_add_entry_by_OBJ", "ff_hevc_put_qpel_uw_h3v2_neon_8", "SRP_Verify_B_mod_N", "x264_8_sei_avcintra_vanc_write", "ff_hevc_transform_add_8x8_neon_8", "av_opt_set_pixel_fmt", "PEM_read_ECPKParameters", "idea_ecb_encrypt", "d2i_PKCS8_PRIV_KEY_INFO", "BIO_copy_next_retry", "ssl3_renegotiate_check", "ff_hevc_put_qpel_v1_neon_8", "BN_GF2m_mod_mul", "ff_h264_alloc_tables", "avio_pause", "PEM_write_bio_RSA_PUBKEY", "EVP_PKEY_meth_set_cleanup", "CRYPTO_get_mem_debug_options", "ENGINE_register_pkey_asn1_meths", "ERR_get_error_line", "av_format_get_video_codec", "av_buffer_realloc", "PEM_ASN1_read", "EVP_BytesToKey", "av_parser_init", "av_int_list_length_for_size", "avio_close_dyn_buf", "av_parse_color", "BIO_new_file", "ssl3_write_pending", "av_dict_set_int", "url_feof", "ECPKParameters_print_fp", "d2i_RSAPublicKey_fp", "av_audio_fifo_read", "BIO_set_callback_arg", "NCONF_get_section", "ENGINE_get_default_DSA", "ff_simple_idct_put_10", "BN_clear_bit", "av_buffersrc_add_frame_flags", "ff_id3v2_free_extra_meta", "ff_hevc_put_hevc_epel_hv24_8_neon", "avcodec_register", "av_get_padded_bits_per_pixel", "ERR_load_ECDH_strings", "av_opt_freep_ranges", "sk_pop", "PKCS7_stream", "ff_hevc_put_hevc_pel_bi_pixels8_8_neon", "ASN1_template_new", "av_sha_alloc", "ff_hevc_put_hevc_qpel_bi_v48_8_neon", "x264_8_deblock_h_chroma_422_intra_neon", "ssl3_ctx_ctrl", "av_image_copy_plane", "BN_set_bit", "ff_hevc_put_qpel_h3v1_neon_8", "UI_method_get_prompt_constructor", "rgb64tobgr48_bswap", "EVP_aes_256_cfb1", "X509_REVOKED_delete_ext", "EC_GROUP_new_curve_GFp", "SSL_get_srp_userinfo", "get_httpdns_ip", "ff_tls_init", "RSA_PSS_PARAMS_new", "ff_channel_layouts_changeref", "ENGINE_set_init_function", "ff_kbd_window_init", "i2d_PKCS12_bio", "X509_PURPOSE_get0_name", "ff_hevc_put_qpel_v2_neon_8", "ff_rtp_get_codec_info", "ff_hevc_put_hevc_qpel_uni_hv24_8_neon", "d2i_ASN1_OBJECT", "i2d_PKCS7", "ff_hevc_put_hevc_epel_bi_v12_8_neon", "EVP_read_pw_string", "av_log_set_level", "NCONF_new", "x264_8_sei_recovery_point_write", "EC_KEY_up_ref", "CAST_ecb_encrypt", "CMS_add1_signer", "ff_rtp_chain_mux_open", "ff_mdct_end", "ff_put_h264_qpel8_mc31_neon", "ff_hevc_put_hevc_epel_hv6_8_neon", "i2d_PROXY_POLICY", "PEM_read_bio_PKCS7", "ENGINE_new", "PEM_read_bio_X509_AUX", "X509V3_EXT_print", "avcodec_encode_audio2", "ASN1_item_unpack", "DES_ecb3_encrypt"], "allstrings": ["+inf", "-infinity", "-inf", "+nan", "-nan", "aac_adtstoasc", "Error parsing ADTS frame header!\n", "Multiple RDBs per frame with CRC", "PCE-based channel configuration without PCE as first syntax element", "Assertion %s failed at %s:%d\n", "s->buf_ptr < s->buf_end", "@aac_latm", "AAC LATM (Advanced Audio Coding LATM syntax)", "AAC decoder", "dual_mono_mode", "Select the channel to decode for dual mono", "autoselection", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "Too many channels\n", "Audio specific config size is invalid\n", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "Audio object type %s%d", "SBR+", "960/120 MDCT window", "AAC data resilience (flags %x)", "epConfig %d", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "Low Delay SBR", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "Remapped id too large\n", "Unknown ER channel configuration %d", "channel element %d.%d is not allocated\n", "no frame data found\n", "mono with CPE\n", "stereo with SCE\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "Pulse tool not allowed in eight short sequence.\n", "Pulse data corrupt or invalid.\n", "Reserved bit set.\n", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "Invalid Predictor Reset Group.\n", "invalid band type\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "TNS filter order %d is greater than maximum %d.\n", "error in spectral data, ESC overflow\n", "ms_present = 3 is reserved.\n", "ChannelElement %d.%d missing \n", "Dependent coupling is not supported together with LTP\n", "Error decoding AAC frame header.\n", "Elem type:%x id:%x\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "More than one AAC RDB per ADTS frame", "skip_data_stream_element: Input buffer exhausted before END element found\n", "extension type: %d len:%d\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "FILL:%s\n", "libfaac %d.%d", "ADTS header detected, probably as result of configuration misparsing\n", "no decoder config found\n", "incomplete frame\n", "frame length mismatch %d << %d\n", "Multiple programs", "Multiple layers", "Non-byte-aligned audio-specific config", "audio config changed\n", "initializing latmctx\n", "icc_mode %d is reserved.\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Expected to read %d PS bits actually read %d.\n", "illegal iid\n", "illegal icc\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "sbr->data[ch].bs_num_env > 0", "libavcodec/aacsbr_template.c", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "Unsupported sample rate for SBR: %d\n", "Invalid bs_stop_freq: %d\n", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "Invalid n_master: %d\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "patch construction failed\n", "Too many patches: %d\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "SBR Extension over read.\n", "Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "bs_pointer >= 0", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "env_facs_q %d is invalid\n", "noise_facs_q %d is invalid\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Reserved SBR extensions", "envelope scalefactor overflow in dequant\n", "temp1 <= 1E20", "libavcodec/aacsbr.c", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "))/113//+++((", "warning arm64 not defined", "DCT algorithm", "autoselect a good one", "fastint", "fast integer (experimental / for debugging)", "accurate integer", "experimental / for debugging", "altivec", "faan", "floating point AAN DCT (experimental / for debugging)", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "floating point AAN IDCT (experimental / for debugging)", "simpleauto", "bits_per_sample", "libavcodec/avpacket.c", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "p-pkt->data == pkt->size", "size<=2147483647 && p - pkt->data >= size", "libavcodec/bitstream.c", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code in init_vlc\n", "needed %d had %d\n", "ret >= 0", "Internal error, put_bits buffer too small\n", "n <= s->buf_end - s->buf_ptr", "incorrect codes\n", "MPEG-1 video", "mpeg2video", "MPEG-2 video", "mpegvideo_xvmc", "MPEG-1/2 video XvMC (X-Video Motion Compensation)", "h261", "H.261", "h263", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "rv10", "RealVideo 1.0", "rv20", "RealVideo 2.0", "Motion JPEG", "image/jpeg", "mjpegb", "Apple MJPEG-B", "MPEG-4 part 2", "rawvideo", "raw video", "msmpeg4v1", "MPEG-4 part 2 Microsoft variant version 1", "msmpeg4v2", "MPEG-4 part 2 Microsoft variant version 2", "msmpeg4v3", "MPEG-4 part 2 Microsoft variant version 3", "wmv1", "Windows Media Video 7", "wmv2", "Windows Media Video 8", "h263p", "h263i", "Intel H.263", "flv1", "FLV / Sorenson Spark / Sorenson H.263 (Flash Video)", "svq1", "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1", "svq3", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3", "dvvideo", "DV (Digital Video)", "huffyuv", "HuffYUV", "cyuv", "Creative YUV (CYUV)", "indeo3", "Intel Indeo 3", "On2 VP3", "theora", "Theora", "asv1", "ASUS V1", "asv2", "ASUS V2", "ffv1", "FFmpeg video codec #1", "vcr1", "ATI VCR1", "cljr", "Cirrus Logic AccuPak", "mdec", "Sony PlayStation MDEC (Motion DECoder)", "id RoQ video", "interplayvideo", "Interplay MVE video", "xan_wc3", "Wing Commander III / Xan", "xan_wc4", "Wing Commander IV / Xxan", "rpza", "QuickTime video (RPZA)", "cinepak", "Cinepak", "ws_vqa", "Westwood Studios VQA (Vector Quantized Animation) video", "msrle", "Microsoft RLE", "msvideo1", "Microsoft Video 1", "idcin", "id Quake II CIN video", "8bps", "QuickTime 8BPS video", "QuickTime Graphics (SMC)", "flic", "Autodesk Animator Flic video", "truemotion1", "Duck TrueMotion 1.0", "vmdvideo", "Sierra VMD video", "mszh", "LCL (LossLess Codec Library) MSZH", "zlib", "LCL (LossLess Codec Library) ZLIB", "qtrle", "QuickTime Animation (RLE) video", "snow", "Snow", "tscc", "TechSmith Screen Capture Codec", "IBM UltiMotion", "qdraw", "Apple QuickDraw", "vixl", "Miro VideoXL", "qpeg", "Q-team QPEG", "ffvhuff", "Huffyuv FFmpeg variant", "rv30", "RealVideo 3.0", "rv40", "RealVideo 4.0", "SMPTE VC-1", "Windows Media Video 9", "loco", "LOCO", "wnv1", "Winnov WNV1", "aasc", "Autodesk RLE", "indeo2", "Intel Indeo 2", "fraps", "Fraps", "truemotion2", "Duck TrueMotion 2.0", "BMP (Windows and OS/2 bitmap)", "image/x-ms-bmp", "cscd", "CamStudio", "mmvideo", "American Laser Games MM Video", "zmbv", "Zip Motion Blocks Video", "AVS (Audio Video Standard) video", "smackvideo", "Smacker video", "NuppelVideo/RTJPEG", "kmvc", "Karl Morton's video codec", "flashsv", "Flash Screen Video v1", "cavs", "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)", "jpeg2000", "JPEG 2000", "image/jp2", "vmnc", "VMware Screen Codec / VMware Video", "On2 VP5", "On2 VP6", "vp6f", "On2 VP6 (Flash version)", "dsicinvideo", "Delphine Software International CIN video", "tiertexseqvideo", "Tiertex Limited SEQ video", "Feeble Files/ScummVM DXA", "dnxhd", "VC3/DNxHD", "Nintendo Gamecube THP video", "Interplay C93", "bethsoftvid", "Bethesda VID video", "vp6a", "On2 VP6 (Flash version, with alpha channel)", "AMV Video", "Beam Software VB", "indeo4", "Intel Indeo Video Interactive 4", "indeo5", "Intel Indeo Video Interactive 5", "mimic", "Mimic", "RL2 video", "escape124", "Escape 124", "daala", "Daala", "dirac", "Dirac", "Brute Force & Ignorance", "Electronic Arts CMV video", "motionpixels", "Motion Pixels video", "Electronic Arts TGV video", "Electronic Arts TGQ video", "Electronic Arts TQI video", "aura", "Auravision AURA", "aura2", "Auravision Aura 2", "v210x", "Uncompressed 4:2:2 10-bit", "8088flex TMV", "v210", "Electronic Arts Madcow Video", "frwu", "Forward Uncompressed", "flashsv2", "Flash Screen Video v2", "cdgraphics", "CD Graphics video", "r210", "Uncompressed RGB 10-bit", "Deluxe Paint Animation", "binkvideo", "Bink video", "iff_ilbm", "IFF ILBM", "kgv1", "Kega Game Video", "Psygnosis YOP Video", "On2 VP8", "Google VP9", "pictor", "Pictor/PC Paint", "a64_multi", "Multicolor charset for Commodore 64", "a64_multi5", "Multicolor charset for Commodore 64, extended with 5th color (colram)", "r10k", "AJA Kona 10-bit RGB Codec", "mvc1", "Silicon Graphics Motion Video Compressor 1", "mvc2", "Silicon Graphics Motion Video Compressor 2", "mxpeg", "Mobotix MxPEG video", "lagarith", "Lagarith lossless", "prores", "Apple ProRes (iCodec Pro)", "Bitmap Brothers JV video", "Chronomaster DFA", "utvideo", "Ut Video", "bmv_video", "Discworld II BMV video", "vble", "VBLE Lossless Codec", "dxtory", "Dxtory", "v410", "Uncompressed 4:4:4 10-bit", "cdxl", "Commodore CDXL video", "zerocodec", "ZeroCodec Lossless Video", "mss1", "MS Screen 1", "msa1", "MS ATC Screen", "tscc2", "TechSmith Screen Codec 2", "mts2", "MS Expression Encoder Screen", "cllc", "Canopus Lossless Codec", "mss2", "MS Windows Media Video V9 Screen", "Apple Intermediate Codec", "y41p", "Uncompressed YUV 4:1:1 12-bit", "escape130", "Escape 130", "avrp", "Avid 1:1 10-bit RGB Packer", "012v", "avui", "Avid Meridien Uncompressed", "ayuv", "Uncompressed packed MS 4:4:4:4", "targa_y216", "Pinnacle TARGA CineWave YUV16", "v308", "Uncompressed packed 4:4:4", "v408", "Uncompressed packed QT 4:4:4:4", "yuv4", "Uncompressed packed 4:2:0", "avrn", "Avid AVI Codec", "cpia", "CPiA video format", "xface", "X-face image", "smvjpeg", "Sigmatel Motion Video", "Go2Meeting", "hnm4video", "HNM 4 video", "hevc", "H.265 / HEVC (High Efficiency Video Coding)", "Mirillis FIC", "paf_video", "Amazing Studio Packed Animation File Video", "On2 VP7", "sanm", "LucasArts SANM/SMUSH video", "sgirle", "SGI RLE 8-bit", "Canopus HQX", "hq_hqa", "Canopus HQ/HQA", "Vidvox Hap decoder", "Resolume DXV", "screenpresso", "Screenpresso", "wrapped_avframe", "AVFrame to AVPacket passthrough", "rscc", "innoHeim/Rsupport Screen Capture Codec", "alias_pix", "Alias/Wavefront PIX image", "ansi", "ASCII/ANSI art", "brender_pix", "BRender PIX image", "DirectDraw Surface image decoder", "DPX (Digital Picture Exchange) image", "OpenEXR image", "GIF (Graphics Interchange Format)", "image/gif", "jpegls", "JPEG-LS", "ljpeg", "Lossless JPEG", "PAM (Portable AnyMap) image", "image/x-portable-pixmap", "PBM (Portable BitMap) image", "PC Paintbrush PCX image", "image/x-pcx", "PGM (Portable GrayMap) image", "pgmyuv", "PGMYUV (Portable GrayMap YUV) image", "PNG (Portable Network Graphics) image", "image/png", "PPM (Portable PixelMap) image", "V.Flash PTX image", "SGI image", "sp5x", "Sunplus JPEG (SP5X)", "sunrast", "Sun Rasterfile image", "Truevision Targa image", "image/x-targa", "image/x-tga", "tdsc", "TDSC", "TIFF image", "image/tiff", "Renderware TXD (TeXture Dictionary) image", "vc1image", "Windows Media Video 9 Image v2", "WebP", "image/webp", "wmv3image", "Windows Media Video 9 Image", "XBM (X BitMap) image", "XWD (X Window Dump) image", "image/x-xwindowdump", "apng", "APNG (Animated Portable Network Graphics) image", "cfhd", "Cineform HD", "pcm_s16le", "PCM signed 16-bit little-endian", "pcm_s16be", "PCM signed 16-bit big-endian", "pcm_u16le", "PCM unsigned 16-bit little-endian", "pcm_u16be", "PCM unsigned 16-bit big-endian", "pcm_s8", "PCM signed 8-bit", "pcm_u8", "PCM unsigned 8-bit", "pcm_mulaw", "PCM mu-law / G.711 mu-law", "pcm_alaw", "PCM A-law / G.711 A-law", "pcm_s32le", "PCM signed 32-bit little-endian", "pcm_s32be", "PCM signed 32-bit big-endian", "pcm_u32le", "PCM unsigned 32-bit little-endian", "pcm_u32be", "PCM unsigned 32-bit big-endian", "pcm_s24le", "PCM signed 24-bit little-endian", "pcm_s24be", "PCM signed 24-bit big-endian", "pcm_u24le", "PCM unsigned 24-bit little-endian", "pcm_u24be", "PCM unsigned 24-bit big-endian", "pcm_s24daud", "PCM D-Cinema audio signed 24-bit", "pcm_zork", "PCM Zork", "pcm_s16be_planar", "PCM signed 16-bit big-endian planar", "pcm_s16le_planar", "PCM signed 16-bit little-endian planar", "pcm_s24le_planar", "PCM signed 24-bit little-endian planar", "pcm_s32le_planar", "PCM signed 32-bit little-endian planar", "pcm_dvd", "PCM signed 20|24-bit big-endian", "pcm_f32be", "PCM 32-bit floating point big-endian", "pcm_f32le", "PCM 32-bit floating point little-endian", "pcm_f64be", "PCM 64-bit floating point big-endian", "pcm_f64le", "PCM 64-bit floating point little-endian", "pcm_bluray", "PCM signed 16|20|24-bit big-endian for Blu-ray media", "pcm_lxf", "PCM signed 20-bit little-endian planar", "s302m", "SMPTE 302M", "pcm_s8_planar", "PCM signed 8-bit planar", "adpcm_ima_qt", "ADPCM IMA QuickTime", "adpcm_ima_wav", "ADPCM IMA WAV", "adpcm_ima_dk3", "ADPCM IMA Duck DK3", "adpcm_ima_dk4", "ADPCM IMA Duck DK4", "adpcm_ima_ws", "ADPCM IMA Westwood", "adpcm_ima_smjpeg", "ADPCM IMA Loki SDL MJPEG", "adpcm_ms", "ADPCM Microsoft", "adpcm_4xm", "ADPCM 4X Movie", "adpcm_xa", "ADPCM CDROM XA", "adpcm_adx", "SEGA CRI ADX ADPCM", "adpcm_ea", "ADPCM Electronic Arts", "adpcm_g726", "G.726 ADPCM", "adpcm_ct", "ADPCM Creative Technology", "adpcm_swf", "ADPCM Shockwave Flash", "adpcm_yamaha", "ADPCM Yamaha", "adpcm_sbpro_4", "ADPCM Sound Blaster Pro 4-bit", "adpcm_sbpro_3", "ADPCM Sound Blaster Pro 2.6-bit", "adpcm_sbpro_2", "ADPCM Sound Blaster Pro 2-bit", "adpcm_thp", "ADPCM Nintendo THP", "adpcm_thp_le", "ADPCM Nintendo THP (Little-Endian)", "adpcm_ima_amv", "ADPCM IMA AMV", "adpcm_ea_r1", "ADPCM Electronic Arts R1", "adpcm_ea_r3", "ADPCM Electronic Arts R3", "adpcm_ea_r2", "ADPCM Electronic Arts R2", "adpcm_ima_ea_sead", "ADPCM IMA Electronic Arts SEAD", "adpcm_ima_ea_eacs", "ADPCM IMA Electronic Arts EACS", "adpcm_ea_xas", "ADPCM Electronic Arts XAS", "adpcm_ea_maxis_xa", "ADPCM Electronic Arts Maxis CDROM XA", "adpcm_ima_iss", "ADPCM IMA Funcom ISS", "adpcm_g722", "G.722 ADPCM", "adpcm_ima_apc", "ADPCM IMA CRYO APC", "adpcm_afc", "ADPCM Nintendo Gamecube AFC", "adpcm_ima_oki", "ADPCM IMA Dialogic OKI", "adpcm_dtk", "ADPCM Nintendo Gamecube DTK", "adpcm_ima_rad", "ADPCM IMA Radical", "adpcm_g726le", "G.726 ADPCM little-endian", "adpcm_vima", "LucasArts VIMA audio", "adpcm_psx", "ADPCM Playstation", "adpcm_aica", "ADPCM Yamaha AICA", "amr_nb", "AMR-NB (Adaptive Multi-Rate NarrowBand)", "amr_wb", "AMR-WB (Adaptive Multi-Rate WideBand)", "ra_144", "RealAudio 1.0 (14.4K)", "ra_288", "RealAudio 2.0 (28.8K)", "roq_dpcm", "DPCM id RoQ", "interplay_dpcm", "DPCM Interplay", "xan_dpcm", "DPCM Xan", "sol_dpcm", "DPCM Sol", "sdx2_dpcm", "DPCM Squareroot-Delta-Exact", "MP2 (MPEG audio layer 2)", "ATSC A/52A (AC-3)", "DCA (DTS Coherent Acoustics)", "vorbis", "Vorbis", "dvaudio", "DV audio", "wmav1", "Windows Media Audio 1", "wmav2", "Windows Media Audio 2", "mace3", "MACE (Macintosh Audio Compression/Expansion) 3:1", "mace6", "MACE (Macintosh Audio Compression/Expansion) 6:1", "vmdaudio", "Sierra VMD audio", "flac", "FLAC (Free Lossless Audio Codec)", "mp3adu", "ADU (Application Data Unit) MP3 (MPEG audio layer 3)", "mp3on4", "MP3onMP4", "shorten", "Shorten", "alac", "ALAC (Apple Lossless Audio Codec)", "westwood_snd1", "Westwood Audio (SND1)", "qdm2", "QDesign Music Codec 2", "cook", "Cook / Cooker / Gecko (RealAudio G2)", "truespeech", "DSP Group TrueSpeech", "TTA (True Audio)", "smackaudio", "Smacker audio", "qcelp", "QCELP / PureVoice", "wavpack", "WavPack", "dsicinaudio", "Delphine Software International CIN audio", "IMC (Intel Music Coder)", "musepack7", "Musepack SV7", "MLP (Meridian Lossless Packing)", "gsm_ms", "GSM Microsoft variant", "atrac3", "ATRAC3 (Adaptive TRansform Acoustic Coding 3)", "voxware", "Voxware RT29 Metasound", "Monkey's Audio", "nellymoser", "Nellymoser Asao", "musepack8", "Musepack SV8", "speex", "Speex", "wmavoice", "Windows Media Audio Voice", "wmapro", "Windows Media Audio 9 Professional", "wmalossless", "Windows Media Audio Lossless", "atrac3p", "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)", "eac3", "ATSC A/52B (AC-3, E-AC-3)", "sipr", "RealAudio SIPR / ACELP.NET", "MP1 (MPEG audio layer 1)", "twinvq", "VQF TwinVQ", "truehd", "TrueHD", "mp4als", "MPEG-4 Audio Lossless Coding (ALS)", "atrac1", "ATRAC1 (Adaptive TRansform Acoustic Coding)", "binkaudio_rdft", "Bink Audio (RDFT)", "binkaudio_dct", "Bink Audio (DCT)", "qdmc", "QDesign Music", "celt", "Constrained Energy Lapped Transform (CELT)", "g723_1", "G.723.1", "dss_sp", "Digital Speech Standard - Standard Play mode (DSS SP)", "g729", "G.729", "8svx_exp", "8SVX exponential", "8svx_fib", "8SVX fibonacci", "bmv_audio", "Discworld II BMV audio", "ralf", "RealAudio Lossless", "IAC (Indeo Audio Coder)", "ilbc", "iLBC (Internet Low Bitrate Codec)", "wavesynth", "Wave synthesis pseudo-codec", "Sonic", "sonicls", "Sonic lossless", "opus", "Opus (Opus Interactive Audio Codec)", "comfortnoise", "RFC 3389 Comfort Noise", "TAK (Tom's lossless Audio Kompressor)", "metasound", "Voxware MetaSound", "paf_audio", "Amazing Studio Packed Animation File Audio", "On2 Audio for Video Codec", "evrc", "EVRC (Enhanced Variable Rate Codec)", "SMV (Selectable Mode Vocoder)", "4GV (Fourth Generation Vocoder)", "dsd_lsbf", "DSD (Direct Stream Digital), least significant bit first", "dsd_msbf", "DSD (Direct Stream Digital), most significant bit first", "dsd_lsbf_planar", "DSD (Direct Stream Digital), least significant bit first, planar", "dsd_msbf_planar", "DSD (Direct Stream Digital), most significant bit first, planar", "interplayacm", "Interplay ACM", "xma1", "Xbox Media Audio 1", "xma2", "Xbox Media Audio 2", "dvd_subtitle", "DVD subtitles", "dvb_subtitle", "DVB subtitles", "raw UTF-8 text", "xsub", "XSUB", "ASS (Advanced SSA) subtitle", "SSA (SubStation Alpha) subtitle", "mov_text", "MOV text", "hdmv_pgs_subtitle", "HDMV Presentation Graphic Stream subtitles", "dvb_teletext", "DVB teletext", "SubRip subtitle with embedded timing", "subrip", "SubRip subtitle", "microdvd", "MicroDVD subtitle", "mpl2", "MPL2 subtitle", "eia_608", "EIA-608 closed captions", "jacosub", "JACOsub subtitle", "PJS (Phoenix Japanimation Society) subtitle", "sami", "SAMI subtitle", "realtext", "RealText subtitle", "Spruce subtitle format", "subviewer1", "SubViewer v1 subtitle", "subviewer", "SubViewer subtitle", "vplayer", "VPlayer subtitle", "webvtt", "WebVTT subtitle", "hdmv_text_subtitle", "HDMV Text subtitle", "TrueType font", "application/x-truetype-font", "application/x-font", "bintext", "Binary text", "xbin", "eXtended BINary text", "iCEDraw text", "OpenType font", "application/vnd.ms-opentype", "SMPTE 336M Key-Length-Value (KLV) metadata", "dvd_nav_packet", "DVD Nav packet", "timed_id3", "timed ID3 metadata", "bin_data", "binary data", "application/octet-stream", "internal error, slice end before start\n", "ignoring last missing slice\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "libavcodec/error_resilience.c", "s->quarter_sample", "guess_dc() is out of memory\n", "Forcing thread count to 1 for MJPEG encoding, use -thread_type slice or a constant quantizer if you want to use multiple cpu cores\n", "MJPEG CBR encoding works badly with frame multi-threading, consider using -threads 1, -thread_type slice or a constant quantizer.\n", "context", "non_deterministic", "Forcing thread count to 1 for huffyuv encoding with first pass or context 1\n", "!avctx->internal->frame_thread_encoder", "libavcodec/frame_thread_encoder.c", "!thread_avctx->internal->frame_thread_encoder", "ff_frame_thread_encoder_init failed\n", "gray chroma\n", "cabac decode of qscale diff failed at %d %d\n", "overflow in decode_cabac_mb_mvd\n", "Not enough data for an intra PCM block.\n", "B sub_mb_type %u out of range at %d %d\n", "P sub_mb_type %u out of range at %d %d\n", "ref %u overflow\n", "cbp too large (%u) at %d %d\n", "dquant out of range (%d) at %d %d\n", "Invalid UE golomb code\n", "corrupted macroblock %d %d (total_coeff=%d)\n", "Invalid level prefix\n", "negative number of zero coeffs at %d %d\n", "co located POCs unavailable\n", "libavcodec/h264dsp.c", "(Ph264_mp4toannexb", "private_spspps_buf", "SPS not present in the stream, nor in AVCC, stream may be unreadable\n", "PPS not present in the stream, nor in AVCC, stream may be unreadable\n", "Too big extradata size, corrupted stream or invalid MP4/AVCC bitstream\n", "Packet header is not contained in global extradata, corrupted stream or invalid MP4/AVCC bitstream\n", "Warning: SPS NALU missing or invalid. The resulting stream may not play.\n", "Warning: PPS NALU missing or invalid. The resulting stream may not play.\n", "left block unavailable for requested intra4x4 mode %d at %d %d\n", "out of range intra chroma pred mode at %d %d\n", "top block unavailable for requested intra mode at %d %d\n", "left block unavailable for requested intra mode at %d %d\n", "Cannot allocate memory.\n", "avcC %d too short\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "pthread_once has failed.", "Error resilience with slice threads is enabled. It is unsafe and unsupported and may crash. Use it at your own risk\n", "luma_log2_weight_denom %d is out of range\n", "chroma_log2_weight_denom %d is out of range\n", "reference overflow %u > %u or %u > %u\n", "Reference not available for error concealing\n", "Reference invalid\n", "NAL %d/%d at %d/%d length %d\n", "AVC: Consumed only %d bytes instead of %d\n", "Ignoring NAL %d in global header/extradata\n", "Invalid inter IDR frame\n", "invalid mixed IDR / non IDR frames cannot be decoded in slice multithreading mode\n", "data partitioning", "SPS decoding failure, trying again with the complete NAL\n", "next_avc - buf_index + consumed == nalsize", "libavcodec/h264.c", "Unknown NAL code: %d (%d bits)\n", "decode_slice_header error\n", "AVC: nal size %d\n", "Invalid POC %d<%d\n", "Increasing reorder buffer to %d\n", "pics <= 16", "no picture %s\n", "H264 Decoder", "is_avc", "is avc", "nal_length_size", "enable_er", "Enable error resilience on damaged frames (unsafe)", "buf_index <= buf_size", "Q264", "no frame!\n", "Duplicating field %d to fill missing\n", "pict->buf[0] || !*got_frame", "stereo_mode", "AVC-parser: nal length size invalid\n", "AVC-parser: nal size %d remaining %d\n", "pps_id %u out of range\n", "non-existing PPS %u referenced\n", "non-existing SPS %u referenced\n", "missing picture in access unit with size %d\n", "illegal reordering_of_pic_nums_idc %d\n", "reference count %d overflow\n", "illegal memory management control operation %d\n", "!dst->f->buf[0]", "libavcodec/h264_picture.c", "src->f->buf[0]", "hardware accelerator failed to decode picture\n", "sl == h->slice_ctx", "Gray", "Truncating likely oversized SPS\n", "sps_id %u out of range\n", "chroma_format_idc %u", "separate color planes are not supported\n", "Different chroma and luma bit depth", "illegal bit depth value (%d, %d)\n", "log2_max_frame_num_minus4 out of range (0-12): %d\n", "log2_max_poc_lsb (%d) is out of range\n", "poc_cycle_length overflow %d\n", "illegal POC type %d\n", "too many reference frames %d\n", "mb_width/height overflow\n", "discarding sps cropping, original values are l:%d r:%d t:%d b:%d\n", "Reducing left cropping to %d chroma samples to preserve alignment.\n", "crop values invalid %d %d %d %d / %d %d\n", "Overread %s by %d bits\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %d/%d b%d reo:%d\n", "MB-AFF", "PIC-AFF", "Truncating likely oversized PPS\n", "Invalid luma bit depth=%d\n", "Unimplemented luma bit depth=%d\n", "FMO not supported\n", "reference overflow (pps)\n", "pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s\n", "CABAC", "CAVLC", "LPAR", "CONSTR", "REDU", "8x8DCT", "illegal aspect ratio\n", "Truncated VUI\n", "time_scale/num_units_in_tick invalid or unsupported (%u/%u)\n", "Clipping illegal num_reorder_frames %d\n", "cpb_count %d invalid\n", "Current profile doesn't provide more RBSP data in PPS, skipping\n", "abs_diff_pic_num overflow\n", "long_term_pic_idx overflow\n", "illegal modification_of_pic_nums_idc %u\n", "reference picture missing during reorder\n", "Missing reference picture, default is %d\n", "av_buffer_get_ref_count(sl->ref_list[list][index].parent->f->buf[0]) > 0", "libavcodec/h264_refs.c", "Inconsistent MMCO state between slices [%d, %d]\n", "no mmco here\n", "mmco:%d %d %d\n", "mmco: unref short failure\n", "mmco: unref short %d count %d\n", "mmco: unref long failure\n", "mmco: cannot assign current picture to short and long at the same time\n", "mmco: cannot assign current picture to 2 long term references\n", "!h->cur_pic_ptr->long_ref", "illegal short term reference assignment for second field in complementary field pair (first field is long term)\n", "illegal short term buffer state detected\n", "number of reference frames (%d+%d) exceeds max (%d; probably corrupt input), discarding one\n", "illegal long ref in memory management control operation %d\n", "len <= 32", "Discarding mismatching reference\n", "index < def_len", "short term list:\n", "%u fn:%d poc:%d %p\n", "long term list:\n", "MMCO opcode [%d, %d] at %d mismatches between slices\n", "%d %d %p\n", "remove short %d count %d\n", "SEI type %d size %d truncated at %d\n", "unknown SEI type %d\n", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "ct_type:%X pic_struct:%d\n", "x264 - core %d", "x264 - core 0000", "user data:\"%s\"\n", "sei_recovery_frame_cnt: %d\n", "non-existing SPS %d referenced in buffering period\n", "SEI FPA %d %d %d %d %d %d\n", "Green Metadata Info SEI message\n", "green_metadata_type                            = %d\n", "green_metadata_period_type                     = %d\n", "green_metadata_num_seconds                     = %d\n", "green_metadata_num_pictures                    = %d\n", "SEI GREEN Complexity Metrics                   = %f %f %f %f\n", "xsd_metric_type                                = %d\n", "xsd_metric_value                               = %f\n", "h264_slice_header_init() failed", "!h->setup_finished", "libavcodec/h264_slice.c", "Too many fields\n", "Cannot decode multiple access units as slice threads\n", "Broken frame packetizing\n", "slice type %d too large at %d\n", "A non-intra slice in an IDR NAL unit.\n", "PPS change from %d to %d forbidden\n", "PPS changed between slices\n", "SPS changed in the middle of the frame\n", "Delayed frames seen. Reenabling low delay requires a codec flush.\n", "changing width %d -> %d / height %d -> %d on slice %d\n", "Reinit context to %dx%d, pix_fmt: %s\n", "h264_slice_header_init() failed\n", "Cannot (re-)initialize context during parallel decoding.\n", "Frame num change from %d to %d\n", "This stream was generated by a broken encoder, invalid 8x8 inference\n", "Changing field mode (%d -> %d) between slices is not allowed\n", "unset cur_pic_ptr on slice %d\n", "h->cur_pic_ptr", "h->cur_pic_ptr->f->buf[0]", "Invalid field mode combination %d/%d\n", "Found reference and non-reference fields in the same frame, which", "Frame num gap %d %d\n", "first_mb_in_slice overflow\n", "cabac_init_idc %u overflow\n", "QP %u out of range\n", "deblocking_filter_idc %u out of range\n", "deblocking filter parameters %d %d out of range\n", "Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\nTo parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\nSetting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding but will generate non-standard-compliant output.\n", "Deblocking switched inside frame.\n", "Possibly too many slices (%d >= %d), increase MAX_SLICES and recompile if there are artifacts\n", "slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n", " fix", " IDR", "SPAT", "TEMP", "context_count && h->slice_ctx[context_count - 1].mb_y < h->mb_height", "Could not allocate memory\n", "VDPAU decoding does not support video colorspace.\n", "Unsupported bit depth %d\n", "too many threads/slices %d, reducing to %d\n", "context_init() failed.\n", "h->sps.crop_right + h->sps.crop_left < (unsigned)h->width", "h->sps.crop_top + h->sps.crop_bottom < (unsigned)h->height", "Invalid cropped dimensions: %dx%d.\n", "Ignoring cropping information.\n", "Attempt to start a frame outside SETUP state\n", "no frame buffer available\n", "!pic->f->data[0]", "!pic->hwaccel_picture_private", "h->block_offset[15] == (4 * ((scan8[15] - scan8[0]) & 7) << h->pixel_shift) + 4 * sl->linesize * ((scan8[15] - scan8[0]) >> 3)", "Slice overlaps with next at %d\n", "bytestream overread %td\n", "error while decoding MB %d %d, bytestream %td\n", "error while decoding MB %d %d\n", "CABAC_MAX_BIN : %d\n", "apply_defdispwin", "Apply default display window from VUI", "strict-displaywin", "stricly apply default display window size", "Invalid NAL unit size in extradata.\n", "Decoding nal unit %d %d from hvcC failed\n", "buf_size >= 0", "Error splitting the input into NAL units.\n", "Error parsing NAL unit #%d.\n", "First slice in a frame missing.\n", "Non-matching NAL types of the VCL NALUs: %d %d\n", "Error constructing the reference lists for the current slice.\n", "Skipping NAL unit %d\n", "PPS id out of range: %d\n", "PPS changed between slices.\n", "Invalid slice segment address: %u.\n", "Unknown slice type: %d.\n", "Inter slices in an IRAP frame.\n", "Ignoring POC change between slices: %d -> %d\n", "No ref lists in the SPS.\n", "Invalid long term RPS.\n", "Too many refs: %d/%d.\n", "Zero refs for a frame with P or B slices.\n", "Invalid collocated_ref_idx: %d.\n", "Invalid number of merging MVP candidates: %d.\n", "Independent slice segment missing.\n", "num_entry_point_offsets %d is invalid\n", "offset_len %d is invalid\n", "Failed to allocate memory\n", "too many slice_header_extension_data_bytes\n", "The slice_qp %d is outside the valid range [%d, 51].\n", "Impossible slice segment.\n", "Overread slice header by %d bits\n", "luma_log2_weight_denom %d is invalid\n", "Error constructing the frame RPS.\n", "Mastering Display Metadata:\n", "r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f)\n", "min_luminance=%f, max_luminance=%f\n", "WPP ctb addresses are wrong (%d %d %d %d)\n", "entry_point_offset table is corrupted\n", "The cu_qp_delta %d is outside the valid range [%d, %d].\n", "cu_chroma_qp_offset_idx not yet tested.\n", "Impossible initial tile.\n", "Previous slice segment missing\n", "Verifying checksum for frame with POC %d: ", "plane %d - correct ", "mismatching checksum of plane %d - ", " != ", "libavcodec/hevc_parse.c", "Invalid NAL unit size.\n", "No start code is found.\n", "Invalid NAL unit %d, skipping.\n", "SPS id out of range: %d\n", "missing picture in access unit\n", "Invalid value of delta_idx in slice header RPS: %d > %d.\n", "Invalid value of abs_delta_rps: %d\n", "Too many refs in a short term RPS.\n", "Decoding VPS\n", "vps_reserved_three_2bits is not three\n", "vps_reserved_ffff_16bits is not 0xffff\n", "vps_max_sub_layers out of range: %d\n", "vps_max_dec_pic_buffering_minus1 out of range: %d\n", "vps_max_num_reorder_pics out of range: %d\n", "too many layer_id_included_flags\n", "vps_num_hrd_parameters %d is invalid\n", "Overread VPS by %d bits\n", "VPS %d does not exist\n", "sps_max_sub_layers out of range: %d\n", "chroma_format_idc %d is invalid\n", "discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\n", "Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\n", "log2_max_pic_order_cnt_lsb_minus4 out range: %d\n", "sps_max_dec_pic_buffering_minus1 out of range: %d\n", "sps_max_num_reorder_pics out of range: %d\n", "Invalid value %d for log2_min_cb_size", "Invalid value %d for log2_diff_max_min_coding_block_size", "Invalid value for log2_min_tb_size", "Invalid value %d for log2_diff_max_min_transform_block_size", "PCM bit depth (%d) is greater than normal bit depth (%d)\n", "Too many short term RPS: %d.\n", "num_long_term_ref_pics_sps %d is out of range.\n", "extended_precision_processing_flag not yet implemented\n", "high_precision_offsets_enabled_flag not yet implemented\n", "cabac_bypass_alignment_enabled_flag not yet implemented\n", "Reducing left output window to %d chroma samples to preserve alignment.\n", "Invalid visible frame dimensions: %dx%d.\n", "Displaying the whole video surface.\n", "CTB size out of range: 2^%d\n", "log2_ctb_size %d differs from the bounds of any known profile\n", "log2_ctb_size %d", "Invalid coded frame dimensions.\n", "max_transform_hierarchy_depth_inter out of range: %d\n", "max_transform_hierarchy_depth_intra out of range: %d\n", "max transform block size out of range: %d\n", "Overread SPS by %d bits\n", "Decoding SPS\n", "Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\n", "Decoding PPS\n", "SPS %u does not exist.\n", "diff_cu_qp_delta_depth %d is invalid\n", "pps_cb_qp_offset out of range: %d\n", "pps_cr_qp_offset out of range: %d\n", "num_tile_columns_minus1 out of range: %d\n", "num_tile_rows_minus1 out of range: %d\n", "Invalid tile widths.\n", "Invalid tile heights.\n", "pps_beta_offset_div2 out of range: %d\n", "pps_tc_offset_div2 out of range: %d\n", "log2_parallel_merge_level_minus2 out of range: %d\n", "Overread PPS by %d bits\n", "PTL information too short\n", "PTL information for sublayer %i too short\n", "Not enough data for sublayer %i level_idc\n", "Main profile bitstream\n", "Main 10 profile bitstream\n", "Main Still Picture profile bitstream\n", "Range Extension profile bitstream\n", "Unknown HEVC profile: %d\n", "nb_cpb %d invalid\n", "4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n", "chroma_format_idc is %d, depth is %d", "Invalid delta in scaling list data: %d.\n", "Decoding VUI\n", "Unknown SAR index: %u.\n", "Invalid default display window\n", "discarding vui default display window, original values are l:%u r:%u t:%u b:%u\n", "Strange VUI timing information, retrying...\n", "Retry got %i/%i fps\n", "!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)", "libavcodec/hevc_ps.c", "chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n", "cb_qp_offset_list not tested yet.\n", "Duplicate POC in a sequence: %d.\n", "Zero refs in the frame RPS.\n", "Invalid reference index.\n", "!frame->hwaccel_picture_private", "libavcodec/hevc_refs.c", "Error allocating frame, DPB full.\n", "Could not find ref with POC %d\n", "Skipped PREFIX SEI %d\n", "BOTTOM Field\n", "TOP Field\n", "num_sps_ids_minus1 %d invalid\n", "active_parameter_set_id %d invalid\n", "ali265 v%d", "Skipped SUFFIX SEI %d\n", "libavcodec/kbdwin.c", "libx264", "libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "libx264rgb", "libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB", "preset", "Set the encoding preset (cf. x264 --fullhelp)", "medium", "tune", "Tune the encoding params (cf. x264 --fullhelp)", "Set profile restrictions (cf. x264 --fullhelp) ", "fastfirstpass", "Use fast settings when encoding first pass", "Specify level (as defined by Annex A)", "passlogfile", "Filename for 2 pass stats", "wpredp", "Weighted prediction for P-frames", "a53cc", "Use A53 Closed Captions (if available)", "x264opts", "x264 options", "Select the quality for constant quality mode", "crf_max", "In CRF mode, prevents VBV from lowering quality beyond this point.", "Constant quantization parameter rate control method", "aq-mode", "AQ method", "aq_mode", "Variance AQ (complexity mask)", "autovariance", "Auto-variance AQ", "autovariance-biased", "Auto-variance AQ with bias to dark scenes", "aq-strength", "AQ strength. Reduces blocking and blurring in flat and textured areas.", "Use psychovisual optimizations.", "psy-rd", "Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format.", "rc-lookahead", "Number of frames to look ahead for frametype and ratecontrol", "weightb", "Weighted prediction for B-frames.", "weightp", "Weighted prediction analysis method.", "smart", "ssim", "Calculate and print SSIM stats.", "intra-refresh", "Use Periodic Intra Refresh instead of IDR frames.", "bluray-compat", "Bluray compatibility workarounds.", "b-bias", "Influences how often B-frames are used", "b-pyramid", "Keep some B-frames as references.", "b_pyramid", "Strictly hierarchical pyramid", "normal", "Non-strict (not Blu-ray compatible)", "mixed-refs", "One reference per partition, as opposed to one reference per macroblock", "8x8dct", "High profile 8x8 transform.", "fast-pskip", "Use access unit delimiters.", "mbtree", "Use macroblock tree ratecontrol.", "deblock", "Loop filter parameters, in <alpha:beta> form.", "cplxblur", "Reduce fluctuations in QP (before curve compression)", "partitions", "A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all", "direct-pred", "Direct MV prediction mode", "spatial", "temporal", "slice-max-size", "Limit the size of each slice in bytes", "nal-hrd", "Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4)", "avcintra-class", "AVC-Intra class 50/100/200", "motion-est", "Set motion estimation method", "tesa", "forced-idr", "If forcing keyframes, force them as IDR frames.", "Coder type", "default", "cavlc", "cabac", "b_strategy", "Strategy to choose between I/P/B-frames", "chromaoffset", "QP difference between chroma and luma", "sc_threshold", "Scene change threshold", "noise_reduction", "Noise reduction", "x264-params", "Override the x264 configuration using a :-separated list of key=value parameters", "flags2", "i_qfactor", "b_qfactor", "qmin", "qmax", "qdiff", "qblur", "qcomp", "trellis", "me_range", "me_method", "subq", "keyint_min", "thread_type", "+cgop", "rc_init_occupancy", "-qscale is ignored, -crf is recommended.\n", "Error setting preset/tune %s/%s.\n", "Possible presets:", "Possible tunes:", "Error parsing option '%s' with value '%s'.\n", "Failed to parse level\n", "baseline", "high", "high10", "high422", "high444", "Error setting profile %s.\n", "Possible profiles:", "%255[^:=]=%255[^:]", "bad option '%s': '%s'\n", "bad value for '%s': '%s'\n", "Error parsing option '%s = %s'.\n", "ultrafast", "superfast", "veryfast", "faster", "slower", "veryslow", "placebo", "animation", "grain", "stillimage", "psnr", "fastdecode", "zerolatency", "Not enough memory for closed captions, skipping\n", "Error: nal buffer is too small\n", "internal error in cmp function selection\n", "discarding ID3 tag\n", "Header missing\n", "incorrect frame size - multiple frames in buffer?\n", "Error while decoding MPEG audio frame.\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "overread, skip %d enddists: %d %d\n", "bits_left=%d\n", "Packet is too small\n", "Invalid frame header\n", "Codec extradata missing or too short.\n", "Invalid channel config number.\n", "Frame size smaller than header size\n", "Bad header, discard block\n", "frame channel count exceeds codec channel count\n", "failed to decode channel %d\n", "failed to decode all channels\n", "?mp3float", "mp3adufloat", "mp3on4float", "libavcodec/options.c", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "AVCodecContext", "NULL", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "use 1/4-pel motion compensation", "loop", "use loop filter", "use fixed qscale", "use gmc", "always try a mb with mv=<0,0>", "input_preserved", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "gray", "only decode/encode grayscale", "emu_edge", "do not draw edges", "error[?] variables will be set during encoding", "Input bitstream might be randomly truncated", "normalize adaptive quantization", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "allow non-spec-compliant speedup tricks", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "export_mvs", "export motion vectors through frame side data", "skip_manual", "do not skip samples and export skip information as frame side data", "set motion estimation method", "zero motion estimation (fastest)", "full", "full motion estimation (slowest)", "epzs", "EPZS motion estimation", "esa motion estimation (alias for full)", "tesa motion estimation", "diamond motion estimation (alias for EPZS)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter motion estimation", "time_base", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "set cutoff bandwidth", "frame_size", "frame_number", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "video quantizer scale blur (VBR)", "minimum video quantizer scale (VBR)", "maximum video quantizer scale (VBR)", "maximum difference between the quantizer scales (VBR)", "set maximum number of B frames between non-B-frames", "QP factor between P- and B-frames", "rc_strategy", "ratecontrol method", "strategy to choose between I/P/B-frames", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "skip_count", "misc_bits", "frame_bits", "work around not autodetected encoder bugs", "old_msmpeg4", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal VLC bug (autodetected per FOURCC)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "set error detection flags", "crccheck", "verify embedded CRCs", "detect bitstream specification deviations", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "mpeg_quant", "use MPEG quantizers instead of H.263", "qsquish", "deprecated, use encoder private options instead", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minrate", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "set ratecontrol buffer size (in bits)", "rc_buf_aggressivity", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "rc_init_cplx", "fast integer", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "use strong deblock filter for damaged MBs", "favor_inter", "favor predicting from the previous frame", "bits_per_coded_sample", "prediction method", "plane", "median", "sample aspect ratio", "print specific debug info", "pict", "picture info", "rate control", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "green_metadata", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "vismv", "visualize motion vectors (MVs) (deprecated)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "dctmax", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "sub-pel motion estimation quality", "dtg_active_format", "limit motion vectors range (1023 for DivX player)", "ibias", "intra quant bias", "pbias", "inter quant bias", "global_quality", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp", "use fewest bits", "use best rate distortion", "stream_codec_tag", "scene change threshold", "noise reduction", "number of bits which should be loaded into the rc buffer before decoding starts", "set the number of threads", "autodetect a suitable number of threads to use", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "unknown", "aac_main", "aac_ssr", "aac_ltp", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "border_mask", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "discard no frame", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "nointra", "discard all frames except I frames", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscale frames for dynamic B-frame decision", "minimum interval between IDR-frames", "reference frames to consider for motion compensation", "chroma QP offset from luma", "rate-distortion optimal quantization", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "b_sensitivity", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "color_primaries", "color primaries", "color_primaries_type", "bt709", "BT.709", "unspecified", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "Film", "bt2020", "BT.2020", "smpte428_1", "SMPTE ST 428-1", "color_trc", "color transfer characteristics", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "Log square root", "iec61966_2_4", "IEC 61966-2-4", "bt1361", "BT.1361", "iec61966_2_1", "IEC 61966-2-1", "bt2020_10bit", "BT.2020 - 10 bit", "bt2020_12bit", "BT.2020 - 12 bit", "smpte2084", "SMPTE ST 2084", "colorspace", "color space", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "BT.2020 NCL", "bt2020_cl", "BT.2020 CL", "color_range", "color range", "color_range_type", "mpeg", "MPEG (219*2^(n-8))", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "Bottom", "log_level_offset", "set the log level offset", "slices", "set the number of slices, used in parallelized encoding", "select multithreading type", "slice", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "dump_separator", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "pixel_format", "set pixel format", "video_size", "set video size", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVSubtitleRect", "forced", "index > -0x20000000", "libavcodec/parser.c", "Failed to reallocate parser buffer to %d\n", "PCM channels out of bounds\n", "Invalid sample_size\n", "Invalid number of channels\n", "codec ids mismatch\n", "Invalid PCM packet, data has size %d but at least a size of %d was expected\n", "HE-AAC", "HE-AACv2", "Main", "DTS-ES", "DTS 96/24", "DTS-HD HRA", "DTS-HD MA", "DTS Express", "Constrained Baseline", "Extended", "High", "High 10", "High 10 Intra", "High 4:2:2", "High 4:2:2 Intra", "High 4:4:4", "High 4:4:4 Predictive", "High 4:4:4 Intra", "CAVLC 4:4:4", "Main 10", "Main Still Picture", "Rext", "JPEG 2000 codestream restriction 0", "JPEG 2000 codestream restriction 1", "JPEG 2000 no codestream restrictions", "JPEG 2000 digital cinema 2K", "JPEG 2000 digital cinema 4K", "Spatially Scalable", "SNR Scalable", "Simple", "Reserved", "Simple Scalable Profile", "Main Profile", "N-bit Profile", "Simple Face Animation Profile", "Basic Animated Texture Profile", "Hybrid Profile", "Advanced Real Time Simple Profile", "Code Scalable Profile", "Advanced Coding Profile", "Advanced Core Profile", "Advanced Scalable Texture Profile", "Simple Studio Profile", "Advanced Simple Profile", "Complex", "Advanced", "Profile 0", "Profile 1", "Profile 2", "Profile 3", "%p finished %d field %d\n", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "Final thread update failed\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "thread_get_buffer() failed\n", "thread_release_buffer called on pic %p\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "libavcodec/pthread_frame.c", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->thread_count == avctx->thread_count", "libavcodec/pthread_slice.c", "I420", "IYUV", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUYVw", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "\fRGBt", "RBA@v", "BRA@s", "@RBAu", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\tE", "\t\u000b3YP", "Y3\n\tO", "\t\n3YL", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "I422!", "I444\f", "J420\r", "J422\"", "J444Z", "YUVA#", "I40AY", "RGB2.", "RV15,", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "I4AB:", "I4FL;", "I4FB,", "Unsupported audio resampling. Allowed output channels for %d input channel%s", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Could not allocate buffer\n", "Audio sample format conversion failed\n", "ReSampleContext", "audioresample", "Failed to set dimensions %d %d\n", "ignoring invalid SAR: %d/%d\n", "desc->flags & (1 << 4)", "libavcodec/utils.c", "ignoring invalid SAR: %u/%u\n", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "reget_buffer() failed\n", "n >= 1", "choices[n] != AV_PIX_FMT_NONE", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist '%s'\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "The 'vismv' option is deprecated, see the codecview filter instead.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout not specified\n", "Specified channel layout '%s' is not supported\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "Specified bit depth %d not possible with the specified pixel formats depth %d\n", "dimensions not set\n", "Bitrate %ld is extremely low, maybe you mean %ldk\n", "ticks_per_frame %d too large for the timebase %d/%d.", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %ld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %ld)\n", "Failed to allocate packet of size %ld\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "avctx->codec->encode2", "Provided packet is too small, needs to be %d\n", "AVFrame.format is not set\n", "AVFrame.width or height is not set\n", "ret <= 0", "buffer smaller than minimum size\n", "start_display_time must be 0.\n", "Invalid media type for video\n", "Error applying parameter changes.\n", "!picture->extended_data || picture->extended_data == picture->data", "invalid packet: NULL data, size != 0\n", "Invalid media type for audio\n", "ret <= tmp.size", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "Invalid media type for subtitles\n", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "Codec 0x%x is not in the full list.\n", "unknown_codec", "[%d]", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s/%s/%s, ", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", %dx%d", ", pass 1", ", pass 2", ", %ld kb/s", ", max. %ld kb/s", "--arch=aarch64 --enable-yasm --enable-openssl --enable-libx264 --extra-cflags=-I/home/admin/.emas/build/11489235/workspace/ffmpeg/taobao_ffmpeg/compile-ffmpeg-for-android/build/x264-arm64/output/include --disable-nonfree --enable-runtime-cpudetect --disable-gray --disable-swscale-alpha --disable-programs --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-doc --disable-htmlpages --disable-manpages --disable-podpages --disable-txtpages --disable-avdevice --enable-avcodec --enable-avformat --enable-avutil --enable-swresample --enable-swscale --disable-postproc --enable-avfilter --disable-avresample --enable-network --disable-d3d11va --disable-dxva2 --disable-vaapi --disable-vda --disable-vdpau --disable-videotoolbox --disable-encoders --disable-decoders --enable-decoder=aac --enable-decoder=h264 --enable-decoder=hevc --enable-decoder='mp3*' --enable-decoder=pcm_s16le --disable-hwaccels --disable-muxers --enable-muxer=mp4 --enable-muxer=mov --enable-encoder=libx264 --enable-encoder=pcm_s16le --disable-demuxers --enable-demuxer=aac --enable-demuxer=flv --enable-demuxer=hls --enable-demuxer=m4v --enable-demuxer=mov --enable-demuxer=mp3 --enable-demuxer=mpegts --enable-demuxer=hevc --enable-demuxer=mov --disable-parsers --enable-parser=aac --enable-parser=h264 --enable-parser=hevc --enable-bsfs --disable-bsf=chomp --disable-bsf=dca_core --disable-bsf=dump_extradata --disable-bsf=hevc_mp4toannexb --disable-bsf=imx_dump_header --disable-bsf=mjpeg2jpeg --disable-bsf=mjpega_dump_header --disable-bsf=mov2textsub --disable-bsf=mp3_header_decompress --disable-bsf=mpeg4_unpack_bframes --disable-bsf=noise --disable-bsf=remove_extradata --disable-bsf=text2movsub --disable-bsf=vp9_superframe --enable-bsf=h264_mp4toannexb --enable-protocols --disable-protocol=async --disable-protocol=bluray --disable-protocol=ffrtmpcrypt --disable-protocol=ffrtmphttp --disable-protocol=gopher --disable-protocol='librtmp*' --disable-protocol=mmsh --disable-protocol=mmst --disable-protocol='rtmp*' --enable-protocol=rtmp --disable-protocol=httpproxy --disable-protocol=udp --disable-protocol=rtp --disable-protocol=sctp --disable-protocol=srtp --disable-protocol=unix --disable-protocol=cache --disable-protocol=ftp --disable-protocol=concat --disable-protocol=icecast --disable-protocol=udplite --disable-protocol=md5 --disable-protocol=subfile --disable-protocol=pipe --disable-protocol=data --disable-devices --disable-filters --enable-filter=anullsrc --enable-filter=amix --enable-filter=aformat --enable-filter=atempo --enable-filter=aresample --enable-filter=volume --disable-iconv --disable-videotoolbox --prefix=/home/admin/.emas/build/11489235/workspace/ffmpeg/taobao_ffmpeg/compile-ffmpeg-for-android/build/ffmpeg-arm64/output --cross-prefix=aarch64-linux-android- --enable-cross-compile --target-os=linux --enable-pic --enable-asm --enable-inline-asm --extra-cflags='-O3 -Wall -pipe -std=c99 -ffast-math -fno-integrated-as -fstrict-aliasing -Werror=strict-aliasing -Wa,--noexecstack -DANDROID -DNDEBUG -I/home/admin/.emas/build/11489235/workspace/ffmpeg/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output/include ' --extra-ldflags='-L/home/admin/.emas/build/11489235/workspace/ffmpeg/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output/lib -lssl -lcrypto -L/home/admin/.emas/build/11489235/workspace/ffmpeg/taobao_ffmpeg/compile-ffmpeg-for-android/build/x264-arm64/output/lib -lx264 '", "libavcodec license: LGPL version 2.1 or later", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "Insufficient thread locking. At least %d threads are calling avcodec_open2() at the same time right now.\n", "No lock manager is set, please see av_lockmgr_register()\n", "!ff_avcodec_locked", "!dst->progress", "p <= end", "val || !min_size", "./libavutil/mem_internal.h", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "Unable to get pixel format descriptor for format %s\n", "default_get_buffer called on pic %p\n", "hevc goto fail\n", "frame->nb_extended_buf == 0", "default_get_buffer called on frame %p", "video_get_buffer: image parameters invalid\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "Hardware accelerated decoding with frame threading is known to be unstable and its use is discouraged.\n", "Could not find an AVHWAccel for the pixel format: %s", "Ignoring experimental hwaccel: %s\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "Invalid channel count", "Invalid sample rate", "PARAM_CHANGE side data too small.\n", "requesting subtitles recoding without iconv", "Invalid packet\n", "Invalid mode in packet\n", "Extradata corrupt.\n", "Vorbis parser", "Id header is too short\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Setup header is too short\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "Out of memory\n", "Invalid Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "Unsupported mode count: %d\n", "aformat", "Convert the input audio to one of the specified formats.", "sample_fmts", "A '|'-separated list of sample formats.", "sample_rates", "A '|'-separated list of sample rates.", "channel_layouts", "A '|'-separated list of channel layouts.", "This syntax is deprecated, use '|' to separate %s.\n", "Error parsing sample format: %s.\n", "Error parsing sample rate: %s.\n", "Error parsing channel layout: %s.\n", "amix", "Audio mixing.", "s->frame_list->nb_frames > 0", "libavfilter/af_amix.c", "s->nb_inputs > 1", "inputs:%d fmt:%s srate:%d cl:%s\n", "inputs", "Number of inputs.", "How to determine the end-of-stream.", "longest", "Duration of longest input.", "shortest", "Duration of shortest input.", "Duration of first input.", "dropout_transition", "Transition time, in seconds, for volume renormalization when an input stream ends.", "input%d", "unknown input link\n", "frame_list->end", "@@aresample", "Resample audio data.", "outlink->sample_rate == out_rate", "libavfilter/af_aresample.c", "outlink->channel_layout == out_layout || !outlink->channel_layout", "outlink->format == out_format", "ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n", "Adjust audio tempo.", "zeros != nsamples", "libavfilter/af_atempo.c", "nsamples <= zeros + na + nb", "read_size <= atempo->ring", "atempo->position[0] <= stop_here", "start_here <= stop_here && frag->position[1] <= start_here && overlap <= frag->nsamples", "pot <= atempo->window", "start_here <= stop_here && frag->position[1] <= start_here", "set tempo scale factor", "Invalid tempo value '%s'\n", "Tempo value %f exceeds [0.5, 2.0] range\n", "Change input volume.", "Both ReplayGain gain values are unknown.\n", "Using gain %f dB from replaygain side data.\n", "n:%f t:%f pts:%f precision:%s ", "volume_i:%d/255 ", "volume:%f volume_dB:%f\n", "fixed", "double", "tb:%f sample_rate:%f nb_channels:%f\n", "set volume adjustment expression", "select mathematical precision", "select 8-bit fixed-point", "select 32-bit floating-point", "select 64-bit floating-point", "eval", "specify when to evaluate expressions", "eval volume expression once", "eval volume expression per-frame", "replaygain", "Apply replaygain side data when present", "drop", "replaygain side data is dropped", "ignore", "replaygain side data is ignored", "track gain is preferred", "album gain is preferred", "replaygain_preamp", "Apply replaygain pre-amplification", "replaygain_noclip", "Apply replaygain clipping prevention", "Error when evaluating the volume expression '%s'\n", "nb_channels", "nb_consumed_samples", "nb_samples", "startpts", "startt", "anullsrc", "Null audio source, return empty audio frames.", "sample_rate:%d channel_layout:'%s' nb_samples:%d\n", "set channel_layout", "stereo", "set sample rate", "44100", "set the number of samples per requested frame", "channels == av_get_channel_layout_nb_channels(link->channel_layout) || !av_get_channel_layout_nb_channels(link->channel_layout)", "libavfilter/audio.c", "Error initializing threading.\n", "EOF on sink link %s:%s.\n", "Useless run of a filter graph\n", "AVFilterGraph", "Allowed thread types", "Maximum number of threads", "scale_sws_opts", "default scale filter options", "aresample_swr_opts", "default aresample filter options", "Input pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any source\n", "Output pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any destination\n", "afifo", "auto-inserted fifo %d", "query_formats not finished\n", "'scale' filter not present, cannot convert pixel formats.\n", "auto-inserted scaler %d", "'aresample' filter not present, cannot convert audio formats.\n", "auto-inserted resampler %d", "inlink-> in_formats->refcount > 0", "libavfilter/avfiltergraph.c", "inlink->out_formats->refcount > 0", "outlink-> in_formats->refcount > 0", "outlink->out_formats->refcount > 0", "inlink-> in_samplerates->refcount > 0", "inlink->out_samplerates->refcount > 0", "outlink-> in_samplerates->refcount > 0", "outlink->out_samplerates->refcount > 0", "inlink-> in_channel_layouts->refcount > 0", "inlink->out_channel_layouts->refcount > 0", "outlink-> in_channel_layouts->refcount > 0", "outlink->out_channel_layouts->refcount > 0", "Impossible to convert between the formats supported by the filter '%s' and the filter '%s'\n", "query_formats: %d queried, %d merged, %d already done, %d delayed\n", "The following filters could not choose their formats: %s\nConsider inserting the (a)format filter near their input or output.\n", "Query format failed for '%s': %s\n", "All layouts set on non-empty list\n", "All counts without all layouts\n", "best_idx >= 0", "picking %s out of %d ref:%s alpha:%d\n", "picking %s out of %d ref:%s\n", "Cannot select sample rate for the link between filters %s and %s.\n", "Cannot select channel layout for the link between filters %s and %s.\n", "Unknown channel layouts not supported, try specifying a channel layout using 'aformat=channel_layouts=something'.\n", "n == sink_links_count", "index >= 0", "FFmpeg version 23b01c7", "libavfilter license: LGPL version 2.1 or later", "Media type mismatch between the '%s' filter output pad %d (%s) and the '%s' filter input pad %d (%s)\n", "auto-inserting filter '%s' between the filter '%s' and the filter '%s'\n", "Not all input and output are properly linked (%d).\n", "circular filter chain detected\n", "Source filters and filters with more than one input must set config_props() callbacks on all outputs\n", "Failed to configure output pad on %s\n", "Video source filters must set their output link's width and height\n", "Failed to configure input pad on %s\n", "pong from:%s %s\n", "enable", "(filter->flags & ((1 << 16) | (1 << 17))) != ((1 << 16) | (1 << 17))", "libavfilter/avfilter.c", "Error applying generic filter options.\n", "Error applying options to the filter.\n", "This filter does not take any options, but options were provided: %s.\n", "noformat", "frei0r", "frei0r_src", "aevalsrc", "This syntax is deprecated. Use '|' to separate the list items.\n", "compat: called with args=[%s]\n", "No such option: %s.\n", "Format change is not supported\n", "Channel count change is not supported\n", "Channel layout change is not supported\n", "Sample rate change is not supported\n", "Timeline ('enable' option) not supported with filter '%s'\n", "Error when evaluating the expression '%s' for enable\n", "AVFilter", "set enable expression", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "Copying data in avfilter.\n", "Processing command time:%f command:%s arg:%s\n", "Samples dropped due to memory allocation failure.\n", "!strcmp(ctx->filter->name, \"buffersink\") || !strcmp(ctx->filter->name, \"ffbuffersink\")", "libavfilter/buffersink.c", "Buffer video frames, and make them available to the end of the filter graph.", "abuffersink", "Buffer audio frames, and make them available to the end of the filter graph.", "%d buffers queued in %s, something may be wrong.\n", "Cannot buffer more frames. Consume some available frames before adding new ones.\n", "pix_fmts", "set the supported pixel formats", "Invalid size for pixel_fmts: %d, should be multiple of %d\n", "Failed to allocate fifo\n", "set the supported sample formats", "set the supported sample rates", "set the supported channel layouts", "set the supported channel counts", "all_channel_counts", "accept all channel counts", "Invalid size for sample_fmts: %d, should be multiple of %d\n", "Invalid size for sample_rates: %d, should be multiple of %d\n", "Invalid size for channel_layouts: %d, should be multiple of %d\n", "Invalid size for channel_counts: %d, should be multiple of %d\n", "Conflicting all_channel_counts and list in options\n", "Layout indicates a different number of channels than actually present\n", "Buffer video frames, and make them accessible to the filterchain.", "abuffer", "Buffer audio frames, and make them accessible to the filterchain.", "Changing frame properties on the fly is not supported by all filters.\n", "Changing frame properties on the fly is not supported.\n", "pix_fmt", "time_base_num", "deprecated, do not use", "time_base_den", "sar_num", "sar_den", "pixel_aspect", "frame_rate", "sws_param", "Invalid parameters provided.\n", "w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n", "Sample format was not set or was invalid\n", "Invalid channel layout %s.\n", "Mismatching channel count %d and layout '%s' (%d channels)\n", "Neither number of channels nor channel layout specified\n", "tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n", "libavfilter/drawutils.c", "Color conversion not implemented for %s\n", "Buffer input images and send them when they are requested.", "Buffer input frames and send them when they are requested.", "request_samples changed before the buffer was returned.\n", "frame->nb_samples > offset", "libavfilter/fifo.c", "Duplicate formats in avfilter_merge_formats() detected\n", "Invalid pixel format '%s'\n", "Invalid sample format '%s'\n", "Invalid time base '%s'\n", "Invalid sample rate '%s'\n", "Invalid channel layout '%s'\n", "libavfilter/framepool.c", "%s:%s", "%*s%-*s", "%*s(%s)%*s", "[%dx%d %d:%d %s]", "[%dHz %s:%s]", "Unable to parse graph description substring: \"%s\"\n", "Not enough inputs specified for the \"%s\" filter.\n", "Invalid filterchain containing an unlabelled output pad: \"%s\"\n", "[in]", "[out]", "sws_flags=", "sws_flags not terminated with ';'.\n", "Bad (empty?) label found in the following: \"%s\".\n", "Mismatched '[' found in the following: \"%s\".\n", "=,;[\n", "[],;\n", "Parsed_%s_%d", "No such filter: '%s'\n", "Error creating filter '%s'\n", "Error initializing filter '%s'", " with args '%s'", "Too many inputs specified for the \"%s\" filter.\n", "Cannot create the link %s:%d -> %s:%d\n", "No output pad can be associated to link label '%s'.\n", "raw ADTS AAC (Advanced Audio Coding)", "audio/aac,audio/aacp,audio/x-aac", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "AVIOContext", "!s->write_flag", "libavformat/aviobuf.c", "Statistics: %d seeks, %d writeouts\n", "Statistics: %ld bytes read, %d seeks\n", "protocol_whitelist", "List of protocols that are allowed to be used", "Invaid UTF8 sequence in avio_put_str16%s\n", "Failed to decrease buffer size\n", "len >= s->orig_buffer_size", "URLContext", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void*)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "libavformat/avio.c", "Protocol not on whitelist '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "No URL Protocols are registered. Missing call to av_register_all()?\n", "https:", "https protocol not found, recompile FFmpeg with openssl, gnutls,\nor securetransport enabled.\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void*)0), 0)) || !strcmp(whitelist, e->value)", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "Key '%s' not found.\n", "Error parsing options string %s\n", "crypto+", "crypto:", "Unsupported url %s\n", "decryption IV", "encryption IV", "Unable to open resource: %s\n", "%s not set\n", "invalid %s size (%d bytes, block size is %d)\n", "AES encryption/decryption key", "AES encryption/decryption initialization vector", "decryption_key", "AES decryption key", "decryption_iv", "AES decryption initialization vector", "encryption_key", "AES encryption key", "encryption_iv", "AES encryption initialization vector", "%02d:%02d:%02d.%02d", ", start: ", "%d.%06d", ", bitrate: ", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "    ", "  Program %d %s\n", "  No Program\n", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "language", "%sMetadata:\n", "\n%s  %-16s: ", "    Stream #%d:%d", "[0x%x]", ", %d, %d/%d", ", SAR %d:%d DAR %d:%d", "fps, ", "tbr, ", "tbn, ", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "h263 macroblock info", "replaygain: ", "displaymatrix: rotation of %.2f degrees", "stereo3d: ", "audio service type: ", "quality factor: %d, pict_type: %c", "unknown side data type %d (%d bytes)", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "invalid data", "track gain", "track peak", "album gain", "album peak", "%s - ", "side by side", "top and bottom", "frame alternate", "interleaved lines", "interleaved columns", "side by side (quincunx subsampling)", " (inverted)", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "truncate", "truncate existing files on write", "set I/O operation maximum block size", "live RTMP FLV (Flash Video)", "flv_metadata", "Allocate streams according to the onMetaData array", "NGINX RTMP", "type:%d, size:%d, last:%d, dts:%ld pos:%ld\n", "Adjusting next position due to index mismatch\n", "OnTextData packet", "Skipping flv packet: type %d, size %d, flags %d.\n", "%s stream discovered after head already parsed\n", "%d %X %d \n", "Negative cts, previous timestamps might be wrong.\n", "invalid timestamps %ld %ld\n", "Encoder", "Omnia A/XE", "Packet mismatch %d %d\n", "Found invalid index entries, clearing the index.\n", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "Unknown type %s\n", "AMF_DATA_TYPE_STRING parsing failed\n", "Keyframe index parsing failed\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_OBJECT\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_MIXEDARRAY, found %d\n", "unsupported amf type %d\n", "videodatarate", "audiodatarate", "datastream", "videocodecreal", "~~~~ videocodecreal:%f \n", "videocodecid", "audiocodecid", "audiosamplerate", "audiosamplesize", "Open Broadcaster Software v0.%d", "metadatacreator", "MEGA", "filesize", "framerate", "true", "false", "Skipping duplicate index\n", "times", "filepositions", "Invalid keyframes object, skipping.\n", "Audio codec (%x)", "Video codec (%x)", "live_flvdec", "ssegment", "image2", "Probing %s score:%d size:%d\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "hevc,h265,265", "hevc demuxer", "configurationVersion:                %u\n", "general_profile_space:               %u\n", "general_tier_flag:                   %u\n", "general_profile_idc:                 %u\n", "general_profile_compatibility_flags: 0x%08x\n", "general_constraint_indicator_flags:  0x%012lx\n", "general_level_idc:                   %u\n", "min_spatial_segmentation_idc:        %u\n", "parallelismType:                     %u\n", "chromaFormat:                        %u\n", "bitDepthLumaMinus8:                  %u\n", "bitDepthChromaMinus8:                %u\n", "avgFrameRate:                        %u\n", "constantFrameRate:                   %u\n", "numTemporalLayers:                   %u\n", "temporalIdNested:                    %u\n", "lengthSizeMinusOne:                  %u\n", "numOfArrays:                         %u\n", "array_completeness[%u]:               %u\n", "NAL_unit_type[%u]:                    %u\n", "numNalus[%u]:                         %u\n", "nalUnitLength[%u][%u]:                 %u\n", "Apple HTTP Live Streaming", "live_start_index", "segment index to start live streams at (negative values are from the end)", "#EXTM3U", "#EXT-X-STREAM-INF:", "#EXT-X-TARGETDURATION:", "#EXT-X-MEDIA-SEQUENCE:", "user-agent", "cookies", "http_proxy", "seekable", "Empty playlist\n", "hls_read_header cur_seq_no %d", "Error when loading first segment '%s'\n", "No expected HTTP requests have been made\n", "~~~ read header: url:%s  \n", "~~~~ read header  streams:%d  \n", "variant_bitrate", "#EXT-X-KEY:", "AES-128", "SAMPLE-AES", "#EXT-X-MEDIA:", "#EXT-X-PLAYLIST-TYPE:", "EVENT", "#EXT-X-MAP:", "#EXT-X-ENDLIST", "#EXT-X-DISCONTINUITY", "#EXTINF:", "#EXT-X-BYTERANGE:", "BANDWIDTH=", "AUDIO=", "VIDEO=", "SUBTITLES=", "METHOD=", "URI=", "TYPE=", "GROUP-ID=", "ASSOC-LANGUAGE=", "NAME=", "DEFAULT=", "FORCED=", "CHARACTERISTICS=", "SUBTITLES", "public.accessibility.describes-music-and-sound", "public.accessibility.describes-video", "BYTERANGE=", "user_agent", "hls_read_header cur_seq_no %d, start_seq_no %d, n_segments %d, live_start_index %d, hls_switch_seq_no %d", "No longer receiving playlist %d\n", "Failed to reload playlist %d\n", "skipping %d segments ahead, expired from playlists\n", "Failed to open segment of playlist %d\n", "Failed to open an initialization section in playlist %d\n", "Downloading an initialization section of size %ld\n", "end_offset", "HLS request for url '%s', offset %ld, playlist %d\n", "Unable to read key file %s\n", "Unable to open key file %s\n", "crypto+%s", "crypto:%s", "SAMPLE-AES encryption is not supported yet\n", "Unable to seek to offset %ld of HLS segment '%s'\n", "Too large HLS ID3 tag (%d > %ld bytes)\n", "Stripped %d HLS ID3 bytes\n", "Stripped additional %d HLS ID3 bytes\n", "!pls->id3_deferred_extra", "libavformat/hls.c", "Changing ID3 metadata in HLS audio elementary stream", "PRIV", "Invalid HLS ID3 audio timestamp %ld\n", "APIC", "comment", "recheck_discard_flags cur_seq_no %d", "Now receiving playlist %d, segment %d\n", "com.apple.streaming.transportStreamTimestamp", "hls+", "hls://", "No nested protocol specified. Specify e.g. hls+http://%s\n", "Using the hls protocol is discouraged, please try using the hls demuxer instead. The hls demuxer should be more complete and work as well as the protocol implementation. (If not, please report it.) To use the demuxer, simply use %s as url.\n", "skipping %d segments ahead, expired from playlist\n", "opening %s\n", "Unable to open %s\n", "WWW-Authenticate", "Proxy-Authenticate", "Authentication-Info", "Authorization: Basic ", "realm=", "opaque=", "algorithm=", "qop=", "stale=", "nextnonce=", "%08x", "MD5-sess", "auth-int", "Authorization: Digest ", "username=\"%s\"", ", realm=\"%s\"", ", nonce=\"%s\"", ", uri=\"%s\"", ", response=\"%s\"", ", algorithm=\"%s\"", ", opaque=\"%s\"", ", qop=\"%s\"", ", cnonce=\"%s\"", ", nc=%s", "https", "no_proxy", "http://", "ijkapplication", "\r\nUser-Agent: ", "User-Agent: %s\r\n", "\r\nAccept: ", "Accept: */*\r\n", "\r\nRange: ", "Range: bytes=%ld-", "\r\nExpect: ", "Expect: 100-continue\r\n", "\r\nConnection: ", "Connection: keep-alive\r\n", "Connection: close\r\n", "\r\nHost: ", "Host: %s\r\n", "\r\nContent-Length: ", "Content-Length: %d\r\n", "\r\nContent-Type: ", "Content-Type: %s\r\n", "\r\nCookie: ", "Cookie: %s\r\n", "\r\nIcy-MetaData: ", "Icy-MetaData: %d\r\n", "%s %s HTTP/1.1\r\n%s%s%s%s%s\r\n", "Transfer-Encoding: chunked\r\n", "Proxy-", "request: %s\n", "try to fix missing 'Content-Range' at server side (%ld,%ld) => (%ld,%ld)", "Unable to parse '%s'\n", "path=", "domain=", "Invalid cookie found, no value, path or domain specified\n", "%s; %s", "header='%s'\n", "Received method: %s\n", "Received and expected HTTP method do not match. (%s expected, %s received)\n", "Autodetected %s HTTP method\n", "Received and autodetected HTTP method did not match (%s autodetected %s received)\n", "Requested resource: %s\n", "HTTP/", "Malformed HTTP version string.\n", "HTTP version string: %s\n", "http_code=%d\n", "Content-Length", "Content-Range", "Accept-Ranges", "Transfer-Encoding", "chunked", "Connection", "close", "Server", "AkamaiGHost", "MediaGateway", "Content-Type", "Set-Cookie", "Icy-MetaInt", "Icy-", "Content-Encoding", " \t\r\n", "HTTP error %d %s\n", "bytes ", "gzip", "1.2.7", "Error during zlib initialisation: %s\n", "Your zlib was compiled without gzip support.\n", "identity", "Unknown content coding: %s\n", "%s%s\n", "No trailing CRLF found in HTTP header.\n", "sc->listen", "libavformat/http.c", "Lower protocol\n", "Read headers\n", "Reply code: %d\n", "text/plain", "Forbidden", "Internal server error", "HTTP/1.1 %03d %s\r\nContent-Type: %s\r\nContent-Length: %zu\r\n\r\n%03d %s\r\n", "HTTP/1.1 %03d %s\r\nContent-Type: %s\r\nTransfer-Encoding: chunked\r\n\r\n", "HTTP reply header: \n%s----\n", "icy_metadata_packet", "Chunked encoding data size: %ld'\n", "Will reconnect at %ld error=%s.\n", "Failed to reconnect at %ld.\n", "inflate return value: %d, %s\n", "Stream ends prematurely at %ld, should be %ld\n", "%x\r\n", "0\r\n\r\n", "control seekability of connection", "chunked_post", "use chunked transfer-encoding for posts", "set HTTP proxy to tunnel through", "set custom HTTP headers, can override built in default headers", "content_type", "set a specific content type for the POST messages", "override User-Agent header", "Lavf/57.25.100", "multiple_requests", "use persistent connections", "post_data", "set custom HTTP post data", "export the MIME type", "set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax", "request ICY metadata", "icy_metadata_headers", "return ICY metadata headers", "return current ICY metadata packet", "metadata read from the bitstream", "auth_type", "HTTP authentication type", "No auth method set, autodetect", "basic", "HTTP basic authentication", "send_expect_100", "Force sending an Expect: 100-continue header for POST", "The actual location of the data received", "initial byte offset", "try to limit the request to bytes preceding this offset", "Override the HTTP method or set the expected HTTP method from a client", "reconnect", "auto reconnect after disconnect before EOF", "reconnect_at_eof", "auto reconnect at EOF", "reconnect_streamed", "auto reconnect streamed / non seekable streams", "reconnect_delay_max", "max reconnect delay in seconds after which to give up", "listen on HTTP", "resource", "The resource requested by a client", "reply_code", "The http status code to return to a client", "http-tcp-hook", "hook protocol on tcp", "AVApplicationContext", "cdn_ip by httpdns", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Grunge", "Hip-Hop", "New Age", "Oldies", "Other", "Reggae", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Trance", "Classical", "Instrumental", "Acid", "Game", "Sound Clip", "Gospel", "AlternRock", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "genre", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TDATTIMETORYTRDATSIZTYER", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TALB", "TCOM", "TCON", "TCOP", "copyright", "TENC", "encoded_by", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "USLT", "lyrics", "TCMP", "compilation", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "id3v2 ver:%d flags:%02X len:%d\n", "compression", "invalid extended header length", "extended header too long.", "Invalid empty frame %s, skipping.\n", "encrypted", "encrypted and compressed", "Skipping %s ID3v2 frame %s.\n", "Failed to alloc %d bytes\n", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to alloc %ld bytes\n", "Failed to read compressed tag\n", "Failed to uncompress tag: %d\n", "invalid frame id, assuming padding\n", "ID3v2.%d tag skipped, cannot handle %s\n", "Error reading frame %s, skipped\n", "(%d)", "TXXX", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "lyrics-%s%s%s", "Error reading lyrics, skipped\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "GEOB", "CHAP", "Failed to alloc %zu bytes\n", "Error reading GEOB frame, data truncated.\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "No AVFormatContext, skipped ID3 chapter data\n", "ljpg", "mpg1-img", "mpg2-img", "mpg4-img", "ffv1-img", "im24", "im32", "sunras", "yuv10", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "ssmv", "c608", "MPEG4 description: tag=0x%02x len=%d\n", "codec open in read_dec_config_descr\n", "esds object type id 0x%02x\n", "Specific MPEG4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "raw MPEG-4 video", "m4v demuxer", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "CENC-AVC: remaining size %d smaller than nal length+type %d\n", "CENC-AVC: nal size %d remaining %d\n", "Unable to initialize hinting of stream %d\n", "rtpo", "avc1\r", "mp4a", "tx3g", "avc1k", "VP6A]", "VP6F", "avc1\r", "text", "\fencd", "Application provided duration: %ld / timestamp: %ld is out of range for mov/mp4 format\n", "Application provided duration: %ld is invalid\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "aac bitstream error\n", "Track %d starts with a nonzero dts %ld, while the moov already has been written. Set the delay_moov flag to handle this case.\n", "pts has no value\n", "QuickTime / MOV", "MP4 (MPEG-4 Part 14)", "video/mp4", "mov muxer", "movflags", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "maximum moov size so it can be placed at the begin", "empty_moov", "Make the initial moov atom empty", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "Write separate moof/mdat atoms for each track", "frag_custom", "Flush fragments on caller requests", "isml", "Create a live smooth streaming feed (for pushing to a publishing point)", "faststart", "Run a second pass to put the index (moov atom) at the beginning of the file", "omit_tfhd_offset", "Omit the base data offset in tfhd atoms", "disable_chpl", "Disable Nero chapter atom", "default_base_moof", "Set the default-base-is-moof flag in tfhd atoms", "dash", "Write DASH compatible fragmented MP4", "frag_discont", "Signal that the next fragment is discontinuous from earlier ones", "delay_moov", "Delay writing the initial moov until the first fragment is cut, or until the first fragment flush", "global_sidx", "Write a global sidx index at the start of the file", "write_colr", "Write colr atom (Experimental, may be renamed or changed, do not use from scripts)", "write_gama", "Write deprecated gama atom", "rtpflags", "RTP muxer flags", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "rfc2190", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "skip_rtcp", "Don't send RTCP sender reports", "h264_mode0", "Use mode 0 for H264 in RTP", "send_bye", "Send RTCP BYE packets when finishing", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "Maximum fragment duration", "min_frag_duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "Number of lookahead entries for ISM files", "video_track_timescale", "set timescale of all video tracks", "Override major brand", "use_editlist", "use edit list", "fragment_index", "Fragment number of the next fragment", "mov_gamma", "gamma value for gama atom", "frag_interleave", "Interleave samples within fragments (max number of consecutive samples, lower is tighter interleaving, but with more overhead)", "encryption_scheme", "Configures the encryption scheme, allowed values are none, cenc-aes-ctr", "The media encryption key (hex)", "encryption_kid", "The media encryption key identifier (hex)", "ipod", "No meaningful edit list will be written when using empty_moov without delay_moov\n", "Sample interleaving in fragments is mutually exclusive with omit_tfhd_offset and separate_moof\n", "muxer does not support non seekable output\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "Invalid encryption key len %d expected %d\n", "Invalid encryption kid len %d expected %d\n", "unsupported encryption scheme %s\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "Resolution %dx%d too large for mov/mp4\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n", "track %d: muxing mp3 at %dhz is not standard in MP4\n", "PSP mode need one video and one audio stream\n", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "Warning, extension is not .m4a, .m4v nor  .m4b Quicktime/Ipod might not play the file\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "unsupported height for dv codec\n", "%s rawvideo cannot be written to mov, output file will be unreadable\n", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "palette:", "%06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x", "size:", "wide", "free", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<head>\n", "<meta name=\"creator\" content=\"%s\" />\n", "Lavf57.25.100", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%ld\">\n", "systemBitrate", "trackID", "CodecPrivateData", "FourCC", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "Not writing any edit list even though one would have been required\n", "rotate", "EDTS using dts:%ld cts:%d instead of dts:%ld cts:%ld tid:%d\n", "av_rescale_rnd(start_dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "libavformat/movenc.c", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "dhlr", "url ", "DataHandler", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "clcp", "ClosedCaptionHandler", "sbtl", "subp", "SubtitleHandler", "HintHandler", "tmcd", "TimeCodeHandler", "Unknown hldr_type for %s / 0x%04X, writing dummy values\n", "handler", "Lucida Grande", "Not writing 'gama' atom. Format is not MOV.\n", "Not writing 'colr' atom. Format is not MOV or MP4.\n", "XDCAM", " HD422", " %d%c", "Could not locate DNxHD bit stream in vos_data\n", "Could not locate DNxHD bit stream, vos_data too small\n", "moov atom written before any packets, unable to write correct dvc1 atom. Set the delay_moov flag to fix this.\n", "./libavcodec/put_bits.h", "DpxE", "gamma value %g\n", "writing gama value %d\n", "track->mode == 0x02", "gamma value unknown, unable to write gama atom\n", "color primaries unspecified, assuming bt709\n", "color primaries unspecified, assuming bt470bg\n", "color primaries unspecified, assuming smpte170\n", "color primaries unspecified, unable to assume anything\n", "track->mode == 0x02 || track->mode == 0x01", "next_dts >= 0", "next_dts <= 2147483647", "not writing 'chan' tag due to lack of channel information\n", "fps %d is too large\n", "reel_name", "reel_name length %lu is too large\n", "stss", "stps", "a=control:streamid=%d\r\n", "Lavc57.24.102", "2006/04/01 11:11:11", "perf", "titl", "author", "gnre", "dscp", "albm", "cprt", "yrrc", "make", "aART", "encoding_tool", "grouping", "ldes", "synopsis", "tvsh", "tven", "episode_id", "tvnn", "network", "tves", "episode_sort", "tvsn", "season_number", "stik", "media_type", "hdvd", "hd_video", "pgap", "gapless_playback", "cpil", "disk", "trkn", "tmpo", "Estimating the duration of the last packet in a fragment, consider setting the duration field in AVPacket instead.\n", "Non-consecutive fragments, writing incorrect sidx\n", "Starting second pass: moving the moov atom to the beginning of the file\n", "reserved_moov_size is too small, needed %ld additional\n", "Starting second pass: inserting sidx atoms\n", "Unable to re-open %s output file for the second pass (faststart)\n", "mp4 muxer", "invalid size %ld in stsd\n", "size=%ld 4CC= %c%c%c%c/0x%08x codec_type=%d\n", "mov,mp4,m4a,3gp,3g2,mj2", "multiple fourcc not supported\n", "Concatenated H.264 or H.265 might not play correctly.\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "compatible_brands", "audio channels %d\n", "version =%d, isom =%d\n", "qt  ", "ignoring multiple glbl\n", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type: %08x '%.4s' parent:'%.4s' sz: %ld %ld %ld\n", "overread end of atom '%.4s' by %ld bytes\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unable to add atom to extradata\n", "aclr not decoded - unexpected size %ld\n", "truncated extradata\n", "Duplicated STCO atom\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "track[%i].ctts.entries = %i\n", "count=%d, duration=%d\n", "CTTS invalid\n", "dts shift %d\n", "mov_update_dts_shift(): dts_shift set to %d\n", "type %.4s size %d\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x08%x size %d\n", "Duplicated ELST atom\n", "track[%i].edit_count = %i\n", "duration=%ld time=%ld rate=%f\n", "enda %d\n", "Unknown MOV field order 0x%04x\n", "[aax] file checksum == ", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "ctype= %.4s (0x%08x)\n", "stype= %.4s\n", "handler_name", "Multiple mdhd?\n", "Version %d", "%Y-%m-%d %H:%M:%S", "stream has moof boxes, will look for a mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %lx\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "failed to seek back after looking for mfra\n", "found tfra\n", "Found duplicated MOOV Atom. Skipped it\n", "time scale = %i\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "sidx version %u", "could not find corresponding track id %d\n", "sidx reference_type 1", "Duplicated STPS atom\n", "track[%i].stsc.entries = %i\n", "Duplicated STSC atom\n", "keyframe_count = %d\n", "Duplicated STSS atom\n", "sample_size = %d sample_count = %d\n", "Invalid sample field size %d\n", "Duplicated STSZ atom\n", "track[%i].stts.entries = %i\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "sample_count=%d, sample_duration=%d\n", "could not find corresponding trex\n", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %ld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %ld\n", "frag flags 0x%x\n", "stream %d, missing mandatory atoms, broken header\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "stream %d, timescale not set\n", "multiple edit list entries, a/v desync might occur, patch welcome\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "AVIndex stream %d, sample %d, offset %lx, dts %ld, size %d, distance %d, keyframe %d\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %d\n", "AVIndex stream %d, chunk %d, offset %lx, dts %ld, size %d, duration %d\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "flags 0x%x entries %d\n", "first sample flags 0x%x\n", "found frag time %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\n", "calculated into dts %ld\n", "found frag time %ld, using it for dts\n", "Failed to add index entry\n", "Unsupported DTS audio channel layout", "get_wav_header failed\n", "unknown compression for cmov atom !\n", "Duplicated SBGP atom\n", "systemBitrate=\"", "Unhandled or malformed custom metadata of size %ld\n", "iTunSMPB", "%*X %X %X %X", "cdec", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "duplicate senc atom\n", "senc atom size %ld too small\n", "failed to read the auxiliary info", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "episode_uid", "keywords", "podcast", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "host_computer", "original_artist", "performers", "playback_requirements", "original_source", "warning", "Error parsing cover art.\n", "The index of 'data' is out of range: %d >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the float32 number (%f) in string.\n", "%s-%s", "HandBrake %d.%d.%d", "lang \"%3s\" ", "tag \"%s\" value \"%s\" atom \"%.4s\" %d %ld\n", "loci too short\n", "place name too long\n", "no space for coordinates left (%d)\n", "%+08.4f%+09.4f", "Unknown cover type: 0x%x.\n", "The 'keys' atom with the invalid key count: %d\n", "The key# %d in meta has invalid size: %d\n", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "export_all", "Export unrecognized metadata entries", "export_xmp", "Export full XMP metadata", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%ld\n", "Forcing full parsing for mp3 stream\n", "Referenced QT chapter track not found\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "size: %dx%d\n", "palette: ", "%06x%s", "stream %d, offset 0x%lx: partial file\n", "Cannot append palette to packet\n", "stream %d, sample %d, dts %ld\n", "root atom offset 0x%lx: partial file\n", "read fragments, offset 0x%lx\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "stream %d, timestamp %ld, sample %d\n", "stream %d, found sample %d\n", "MP2/3 (MPEG audio layer 2/3)", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "Skipping %d bytes of junk at %ld.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "pad %d %d\n", "Cannot determine file size, skipping TOC table.\n", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "drac", "HEVC", "VC-1", "libavformat/mpegts.c", "DVB subtitles with multiple languages", "Opus in MPEG-TS - channel_config_code > 0x8", "mpegts", "mpegtsraw", "raw MPEG-TS (MPEG-2 Transport Stream)", "cannot set stream info, codec is open\n", "Filter: pid=0x%x\n", "pid %x is not PES\n", "Tag %x length violation new length %d bytes remaining %d\n", "Maximum MP4 descriptor level exceeded\n", "Found tag %x expected %x\n", "timestamp_len > 64", "Predefined SLConfigDescriptor", "SDT:\n", "service_name", "service_provider", "PAT:\n", "sid=0x%x pid=0x%x\n", "PMT: len %i\n", "sid=0x%x sec_num=%d/%d version=%d\n", "pcr_pid=0x%x\n", "program tag: 0x%02x len=%d\n", "pid=%x pes_code=%#x\n", "pid=%x stream_type=%x probing\n", "PES packet size mismatch\n", "stream=%d stream_type=%x pid=%x prog_reg_desc=%.4s\n", "Continuity check failed for pid %d expected %d got %d\n", "pos >= 188", "All programs have pmt, headers found\n", "mpegts demuxer", "resync_size", "set size limit for looking up a new synchronization", "fix_teletext_pts", "try to fix pts values of dvb teletext streams", "ts_packetsize", "output option carrying the raw packet size", "scan_all_pmts", "scan and combine all PMTs", "skip_changes", "skip changing / adding streams / programs", "skip_clear", "skip clearing programs", "Failed to allocate buffers for seekback\n", "Could not detect TS packet size, defaulting to non-FEC/DVHS\n", "tuning done\n", "start=%0.3f pcr=%0.3f incr=%d\n", "score: %d, dvhs_score: %d, fec_score: %d \n", "Unable to seek back to the start\n", "Skipping after seek\n", "max resync size reached, could not find sync byte\n", "changing packet size to %d\n", "mpegtsraw demuxer", "compute_pcr", "compute exact PCR for each transport stream packet", "Unable to find a suitable output format for '%s'\n", "pkt->size == ((-2147483647 -1) / 3 * 2 + (int)sizeof(AVFrame))", "libavformat/mux.c", "Delay between the first packet and last packet in the muxing queue is %ld > %ld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "sample rate not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n", "encoder-", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %ld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "NOPTS", "Using network protocols without global network initialization. Please use avformat_network_init(), this will become mandatory later.\n", "Failed to set close on exec\n", "setsockopt(SO_REUSEADDR) failed\n", "ff_socket_nonblock failed\n", "Connection to %s failed (%s), trying next address\n", "Connection to %s failed: %s\n", "AVFormatContext", "avioflags", "direct", "reduce buffering", "set probing size", "formatprobesize", "number of bytes to probe file format", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "do not write random/volatile data", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "List of demuxers that are allowed to be used", "hls_cdn_ip", "%d.%d.%d.%d", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "WAVEFORMATEX support for RIFX files\n", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "(start&1) == 0", "libavformat/riffenc.c", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "BottomUp", "U263\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "mjpa\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "RTMP packet type '%s'(%d) for channel %d, timestamp %d, extra field %d size %d\n", "Server BW = %d\n", "Client BW = %d\n", " %02X", "chunk size", "bytes read", "server bandwidth", "client bandwidth", "audio packet", "video packet", "Flex shared stream", "Flex shared object", "Flex shared message", "notification", "invoke", " number %g\n", " bool %d\n", " string '%s'\n", " NULL\n", "  %s: ", "rtmpe", "rtmps", "rtmpt", "rtmpte", "rtmpts", "Detected librtmp style URL parameters, these aren't supported by the libavformat internal RTMP handler currently enabled. See the documentation for the correct way to pass parameters.\n", "rtmp_listen not available for %s\n", "ffrtmphttp_tls", "ffrtmphttp", "ffrtmpcrypt_tunneling", "ffrtmpcrypt", "?listen&listen_timeout=%d", "Cannot open connection %s\n", "slist=", "/ondemand/", "ondemand", ".f4v", ".mp4", "mp4:", ".flv", "%s %d,%d,%d,%d", "FMLE/3.0 (compatible; %s)", "Proto = %s, path = %s, app = %s, fname = %s\n", "Cannot open connection %s.\n", "Genuine Adobe Flash Player 001", "rtmp_swfhash", "Handshaking...\n", "Cannot write RTMP handshake request\n", "Cannot read RTMP handshake response\n", "Type answer %d\n", "Server version %d.%d.%d.%d\n", "Server response validating failed\n", "Signature mismatch\n", "Hash of the decompressed SWF file is not 32 bytes long.\n", "Unable to read handshake\n", "RTMP protocol version mismatch\n", "Unable to write answer - RTMP S0\n", "RTMP Handshake C1 Error\n", "RTMP Handshake S1 Error\n", "RTMP Handshake S2 Error\n", "RTMP Handshake C2 Error\n", "Erroneous C2 Message epoch does not match up with C1 epoch\n", "Erroneous C2 Message random does not match up\n", "Erroneous Message size %d not following standard\n", "Unable to write answer\n", "nonprivate", "flashVer", "swfUrl", "tcUrl", "fpad", "capabilities", "audioCodecs", "videoCodecs", "videoFunction", "pageUrl", "Invalid AMF parameter: %s\n", "./libavcodec/bytestream.h", "Unable to read command string\n", "Expecting connect, got %s\n", "SeqNum not found\n", "App field not found in connect\n", "App field don't match up: %s <-> %s\n", "_result", "fmsVer", "FMS/3,0,1,123", "status", "NetConnection.Connect.Success", "Connection succeeded.", "objectEncoding", "onBWDone", "Too short chunk size change packet (%d)\n", "Incorrect chunk size %d\n", "New incoming chunk size = %d\n", "Sending bytes read report\n", "received bytes read report\n", "Unknown packet type received 0x%02X\n", "Too short ping packet (%d)\n", "Ignoring SWFVerification request.\n", "Sending SWF verification...\n", "Client bandwidth report packet is less than 4 bytes long (%d)\n", "Incorrect client bandwidth %d\n", "Client bandwidth = %d\n", "Too short server bandwidth report packet (%d)\n", "Incorrect server bandwidth %d\n", "Server bandwidth = %d\n", "_error", "onStatus", "releaseStream", "_checkbw", "createStream", "FCSubscribe", "getStreamLength", "Server error: %s\n", "authmod=adobe", "authmod=llnw", "Unknown connect error (unsupported authentication method?)\n", "No credentials set\n", "?reason=authfailed", "Incorrect username/password\n", "?reason=nosuchuser", "Incorrect username\n", "Authentication failed\n", "code=403 need auth", "?authmod=%s&user=%s", "?reason=needauth", "No auth parameters found\n", "salt", "opaque", "challenge", "nonce", "Ignoring unsupported var %s\n", "Variable %s has NULL value\n", "?authmod=%s&user=%s&challenge=%s&response=%s", "&opaque=%s", "00000001", "/_definst_", "?authmod=%s&user=%s&nonce=%s&cnonce=%s&nc=%s&response=%s", "Unexpected reply on connect()\n", "Unexpected reply on getStreamLength()\n", "Releasing stream...\n", "FCPublish stream...\n", "Creating stream...\n", "Sending publish command for '%s'\n", "Sending play command for '%s'\n", "NetStream.Play.Start", "NetStream.Play.Stop", "NetStream.Play.UnpublishNotify", "NetStream.Publish.Start", "NetStream.Seek.Notify", "Error in PT_INVOKE\n", "Unable to find / in url %s, bad format\n", "Unexpected stream %s, expecting %s\n", "Unable to create response packet\n", "onFCPublish", "%s is now published", "details", "clientid", "@setDataFrame", "Incomplete flv packets in RTMP_PT_METADATA packet\n", "|RtmpSampleAccess", "UnPublishing stream...\n", "FCUnpublish", "Deleting stream...\n", "deleteStream", "Pause at timestamp %d\n", "Unable to send pause command at timestamp %d\n", "Sending pause command for timestamp %d\n", "pause", "Seek on stream index %d at timestamp %ld with flags %08x\n", "Unable to send seek command on stream index %d at timestamp %ld with flags %08x\n", "Sending seek command for timestamp %ld\n", "rtmp_app", "Name of application to connect to on the RTMP server", "rtmp_buffer", "Set buffer time in milliseconds. The default is 3000.", "rtmp_conn", "Append arbitrary AMF data to the Connect message", "rtmp_flashver", "Version of the Flash plugin used to run the SWF player.", "rtmp_flush_interval", "Number of packets flushed in the same request (RTMPT only).", "rtmp_live", "Specify that the media is a live stream.", "live stream", "recorded", "recorded stream", "rtmp_pageurl", "URL of the web page in which the media was embedded. By default no value will be sent.", "rtmp_playpath", "Stream identifier to play or to publish", "rtmp_subscribe", "Name of live stream to subscribe to. Defaults to rtmp_playpath.", "SHA256 hash of the decompressed SWF file (32 bytes).", "rtmp_swfsize", "Size of the decompressed SWF file, required for SWFVerification.", "rtmp_swfurl", "URL of the SWF player. By default no value will be sent", "rtmp_swfverify", "URL to player swf file, compute hash/size automatically.", "rtmp_tcurl", "URL of the target stream. Defaults to proto://host[:port]/app.", "rtmp_listen", "Listen for incoming rtmp connections", "Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "Port missing in uri\n", "listen_timeout", "~~~ host name: %s ~~\n", "~~~ after getaddrinfo", "Failed to resolve hostname %s: %s\n", "~~~~ TCP OPEN FAILED ~~~~\n", "libavformat/tcp.c", "Listen for incoming connections", "set timeout (in microseconds) of socket I/O operations", "Connection awaiting timeout (in milliseconds)", "send_buffer_size", "Socket send buffer size (in bytes)", "recv_buffer_size", "Socket receive buffer size (in bytes)", "?listen=1", "httpproxy", "cafile", "cert", "SSL_CTX_load_verify_locations %s\n", "Unable to load cert file %s: %s\n", "Unable to load key file %s: %s\n", "Unable to negotiate TLS/SSL session\n", "urlprotocol bio", "ca_file", "Certificate Authority database file", "tls_verify", "Verify the peer certificate", "cert_file", "Certificate file", "key_file", "Private key file", "verifyhost", "Verify against a specific hostname", "%s://", "!dst->codec_whitelist && !dst->format_whitelist", "libavformat/utils.c", "Failed to duplicate whitelist\n", "Truncating packet of size %d to %ld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "demuxer does not support additional id3 data, skipping\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "st->codec->ticks_per_frame", "s->iformat", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "pipe", "cache", "Reconfiguring buffers to size %ld\n", "read_seek: %d %s\n", "using cached pos_min=0x%lx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%lx pos_limit=0x%lx dts_max=%s\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%lx pos_max=0x%lx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%ld %ld %ld / %s %s %s target:%s limit:%ld start:%ld noc:%d\n", "read_timestamp() failed in the middle\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "Before avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "Failed to open codec in av_find_stream_info\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %ld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "** PKT stream:%d \n", "Non-increasing DTS in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "DTS discontinuity in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "max_analyze_duration %ld reached at %ld microseconds st:%d\n", "decoding for stream %d failed\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "new_program: id=0x%04x\n", "Chapter end time %ld before start %ld\n", "stream index %d is not valid\n", "%0*d", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "Failed to open bitstream filter %s for stream %d with codec %s", "copy", "Failed to parse creation_time %s\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "probing stream %d pp:%d\n", "Failed to reallocate probe buffer for stream %d\n", "nothing to probe for stream %d\n", "probed stream %d\n", "probed stream %d failed\n", "dvbsub", "loas", "mpegvideo", "Probe with size=%d, packets=%d detected %s with score=%d\n", "*pkt_buffer", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "DTS %li < %li out of order\n", "invalid dts/pts combination %li\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%ld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s not matching first dts %s (pts %s, duration %ld) in the queue\n", "first_dts %s but no packet with dts in the queue\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "unknown codec", "unspecified frame size", "unspecified sample format", "unspecified sample rate", "unspecified number of channels", "no decodable DTS frames", "unspecified size", "unspecified pixel format", "no frame in rv30/40 and no sar", "%d: start_time: %0.3f duration: %0.3f\n", "stream: start_time: %0.3f duration: %0.3f bitrate=%ld kb/s\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "Ignoring outlier non primary stream starttime %f\n", "libavutil/avstring.c", "'\\''", "%d channels", "3.0(back)", "quad", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "hexadecagonal", "downmix", "low frequency", "front left-of-center", "front right-of-center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "armv8", "cpuflags", "detected %d logical cores\n", "BSF_NOT_FOUND", "Bitstream filter not found", "Internal bug, should not have happened", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "Generic error in an external library", "FILTER_NOT_FOUND", "Filter not found", "INPUT_CHANGED", "Input changed", "INVALIDDATA", "Invalid data found when processing input", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "Output changed", "PATCHWELCOME", "Not yet implemented in FFmpeg, patches welcome", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "INPUT_AND_OUTPUT_CHANGED", "Input and output changed", "HTTP_BAD_REQUEST", "Server returned 400 Bad Request", "HTTP_UNAUTHORIZED", "Server returned 401 Unauthorized (authorization failed)", "HTTP_FORBIDDEN", "Server returned 403 Forbidden (access denied)", "HTTP_NOT_FOUND", "Server returned 404 Not Found", "HTTP_OTHER_4XX", "Server returned 4XX Client Error, but not one of 40{0,1,3,4}", "HTTP_SERVER_ERROR", "Server returned 5XX Server Error reply", "Invalid chars '%s' at the end of expression '%s'\n", "Eval", "Undefined constant or missing '(' in '%s'\n", "Missing ')' in '%s'\n", "Missing ')' or too many args in '%s'\n", "Unknown function in '%s'\n", "QP2LAMBDA", "Cannot read file '%s': %s\n", "Error occurred in fstat(): %s\n", "Error occurred in mmap(): %s\n", "ff_tempfile: Cannot allocate file name\n", "/tmp/%sXXXXXX", "ff_tempfile: Cannot open temporary file %s\n", "FILE", "YCgCo", "AVPanScan", "ATSC A53 Part 4 Closed Captions", "Stereoscopic 3d metadata", "AVMatrixEncoding", "Metadata relevant to a downmix procedure", "AVReplayGain", "3x3 displaymatrix", "Active format description", "Motion vectors", "Skip samples", "Audio service type", "Mastering display metadata", "GOP timecode", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA512/224", "SHA512/256", "SHA384", "SHA512", "CRC32", "adler32", "Picture size %ux%u is invalid\n", "abs(src_linesize) >= bytewidth", "libavutil/imgutils.c", "abs(dst_linesize) >= bytewidth", "av_image_get_linesize failed\n", "IMGUTILS", "    Last message repeated %d times\r", "    Last message repeated %d times\n", "[%s @ %p] ", "[%s] ", "quiet", "verbose", "fatal", "panic", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "256color", "in_ts != ((int64_t)0x8000000000000000UL)", "libavutil/mathematics.c", "duration >= 0", "Unable to parse option value \"%s\" as channel layout\n", "Invalid option type.\n", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "pixel", "The value set by option '%s' is not a channel layout.\n", "0x%08X", "0x%02x%02x%02x%02x", "0x%lx", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a channel layout.\n", "%s AVOptions:\n", "AVOption type %d of option %s not implemented yet\n", "Error setting option %s to value %s.\n", "Not supported option type: %d, option name: %s\n", "Invalid separator(s) found.", "true,y,yes,enable,enabled,on", "false,n,no,disable,disabled,off", "Unable to parse option value \"%s\" as boolean\n", "%d%*1[:/]%d%c", "const_values array too small for %s\n", "Unable to parse option value \"%s\"\n", "Unable to parse option value \"%s\" as image size\n", "Unable to parse option value \"%s\" as video rate\n", "Unable to parse option value \"%s\" as %s\n", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "Unable to parse option value \"%s\" as color\n", "The value set by option '%s' is not a %s format", "INT64_MAX", "INT64_MIN", "%ld:%02d:%02d.%06d", "%d:%02d.%06d", "The value for option '%s' is not a %s format.\n", "     %-15s ", "  %s%-17s ", "%-12s ", "<flags>", "<int>", "<int64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", "<boolean>", " (from ", " to ", " (default ", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "-FLT_MAX", "-FLT_MIN", "-DBL_MAX", "-DBL_MIN", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "random", "bikeshed", "0123456789ABCDEFabcdef", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Cannot find color '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "%Y - %m - %d", "%Y%m%d", "%H%M%S", "%H:%M", "%H%M", "%J:%M:%S", "qntsc", "qpal", "sntsc", "spal", "ntsc-film", "sqcif", "4cif", "16cif", "qqvga", "svga", "qxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "2kdci", "2kflat", "2kscope", "4kdci", "4kflat", "4kscope", "hqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "CornflowerBlue", "Cornsilk", "Crimson", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Plum", "PowderBlue", "RosyBrown", "RoyalBlue", "SaddleBrown", "SandyBrown", "SeaShell", "Sienna", "Silver", "Teal", "Thistle", "Tomato", "Wheat", "WhiteSmoke", "YellowGreen", "bgra", "bgr32", "rgba", "name nb_components nb_bits", "%-11s %7d %10d", "libavutil/pixdesc.c", "d->name && d->name[0]", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step && !c->offset && !c->shift && !c->depth", "8*c->step >= c->depth", "bayer_", "tmp[0] == 0 && tmp[1] == 0", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "gray8,y8", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "gray16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "0rgb", "rgb0", "0bgr", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "yuvj", "smpte428-1", "log100", "log316", "iec61966-2-4", "bt1361e", "iec61966-2-1", "bt2020-10", "bt2020-20", "ycgco", "bt2020nc", "bt2020c", "pixelutils support is required but libavutil is not compiled with it\n", "s16p", "s32p", "fltp", "dblp", "name   depth", "%-6s   %2d ", "%s%02d:%02d:%02d%c%02d", "%02u:%02u:%02u%c%02u", "%d:%d:%d%c%d", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "Timecode frame rate must be specified\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Using non-standard frame rate %d/%d\n", "23b01c7", "Libavutil has been linked to a broken llrint()\n", "libavutil license: LGPL version 2.1 or later", "attachment", "!\"valid element size\"", "libavutil/utils.c", "<fBBf<", "0xx00", "x00000x", "x`````x", "p000x", "p00000x", "p000x", "p000x", "p000x", "<ll>", "8ll8", "8ll8", "<<<<", "<fBBf<", "fffffff", "fff$", "000`", "<00000000<", "<\f\f\f\f\f\f\f\f<", "<ll>", "8ll8", "8ll8", "|||||||", "0ctx->channels == out->ch_count", "libswresample/audioconvert.c", "libswresample/dither.c", "Requested noise shaping dither not available at this sampling rate, using triangular hp dither\n", "!s->preout.count", "set input channel count", "in_channel_count", "set output channel count", "out_channel_count", "set used channel count", "used_channel_count", "set input sample rate", "set output sample rate", "out_sample_rate", "set input sample format", "in_sample_fmt", "set output sample format", "out_sample_fmt", "set internal sample format", "internal_sample_fmt", "set input channel layout", "in_channel_layout", "set output channel layout", "out_channel_layout", "clev", "set center mix level", "center_mix_level", "slev", "set surround mix level", "surround_mix_level", "set surround mix Level", "lfe_mix_level", "set LFE mix level", "rmvol", "set rematrix volume", "rematrix_volume", "rematrix_maxval", "set rematrix maxval", "set flags", "swr_flags", "force resampling", "dither_scale", "set dither scale", "dither_method", "set dither method", "rectangular", "select rectangular dither", "triangular", "select triangular dither", "triangular_hp", "select triangular dither with high pass", "lipshitz", "select Lipshitz noise shaping dither", "select Shibata noise shaping dither", "low_shibata", "select low Shibata noise shaping dither", "high_shibata", "select high Shibata noise shaping dither", "f_weighted", "select f-weighted noise shaping dither", "modified_e_weighted", "select modified-e-weighted noise shaping dither", "improved_e_weighted", "select improved-e-weighted noise shaping dither", "filter_size", "set swr resampling filter size", "phase_shift", "set swr resampling phase shift", "linear_interp", "enable linear interpolation", "set cutoff frequency ratio", "resample_cutoff", "resampler", "set resampling Engine", "select SW Resampler", "soxr", "select SoX Resampler", "set soxr resampling precision (in bits)", "cheby", "enable soxr Chebyshev passband & higher-precision irrational ratio approximation", "min_comp", "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied", "min_hard_comp", "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.", "comp_duration", "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.", "max_soft_comp", "set maximum factor by which data is stretched/squeezed to make it match the timestamps.", "async", "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)", "first_pts", "Assume the first pts should be this value (in samples).", "matrix_encoding", "set matrixed stereo encoding", "select none", "dolby", "select Dolby", "dplii", "select Dolby Pro Logic II", "filter_type", "select swr filter type", "select cubic", "blackman_nuttall", "select Blackman Nuttall windowed sinc", "kaiser", "select Kaiser windowed sinc", "kaiser_beta", "set swr Kaiser window beta", "output_sample_bits", "set swr number of output sample bits", "!s->out_ch_layout || out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout)", "!s-> in_ch_layout || in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout)", "Input channel layout '%s' is not supported\n", "Output channel layout '%s' is not supported\n", "Matrix coefficients:\n", "%s:%f ", "Treating %s as mono\n", "libswresample/resample.c", "Filter length too large\n", "a->planar", "Failed to set option\n", "libswresample license: LGPL version 2.1 or later", "Requested input sample format %d is invalid\n", "Requested output sample format %d is invalid\n", "Input channel layout 0x%lx is invalid or unsupported.\n", "Output channel layout 0x%lx is invalid or unsupported.\n", "Requested resampling engine is unavailable\n", "Input channel layout has a different number of channels than the number of used channels, ignoring layout\n", "Using %s internally between filters\n", "Requested sample format %s is not supported internally, S16/S32/FLT/DBL is supported\n", "Failed to initialize resampler\n", "Resampling only supported with internal s16/s32/flt/dbl\n", "!s->in_ch_layout", "libswresample/swresample.c", "Input channel count and layout are unset\n", "Output channel layout %s mismatches specified channel count %d\n", "Input channel layout %s mismatches specified channel count %d\n", "Rematrix is needed between %s and %s but there is not enough information to do it\n", "a->bps", "a->ch_count", "Context has not been initialized\n", "s->drop_output", "discarding %d audio samples\n", "adding %d audio samples of silence\n", "s->out_sample_rate == s->in_sample_rate", "Failed to compensate for timestamp delta of %f\n", "compensating audio timestamp drift:%f compensation:%d in:%d\n", "!s->resample", "s->midbuf.ch_count == s->used_ch_count", "s->midbuf.ch_count == s->out.ch_count", "s->in.planar", "s->dither.noise.ch_count == preout->ch_count", "out->planar == in->planar", "out->bps == in->bps", "out->ch_count == in->ch_count", "plane_count == nb_components - 1", "libswscale/alphablend.c", "libswscale/swscale_internal.h", "SWScaler", "swscaler", "sws_flags", "scaler flags", "fast_bilinear", "fast bilinear", "bicubic", "nearest neighbor", "averaging area", "bicublin", "luma bicubic, chroma bilinear", "gauss", "Gaussian", "lanczos", "Lanczos", "natural bicubic spline", "print_info", "print info", "accurate_rnd", "accurate rounding", "full_chroma_int", "full chroma interpolation", "full_chroma_inp", "full chroma input", "error_diffusion", "error diffusion dither", "srcw", "source width", "srch", "source height", "dstw", "destination width", "dsth", "destination height", "src_format", "source format", "dst_format", "destination format", "src_range", "source is full range", "dst_range", "destination is full range", "param0", "scaler param 0", "param1", "scaler param 1", "src_v_chr_pos", "source vertical chroma position in luma grid/256", "src_h_chr_pos", "source horizontal chroma position in luma grid/256", "dst_v_chr_pos", "destination vertical chroma position in luma grid/256", "dst_h_chr_pos", "destination horizontal chroma position in luma grid/256", "sws_dither", "set dithering algorithm", "leave choice to sws", "bayer", "bayer dither", "error diffusion", "a_dither", "arithmetic addition dither", "x_dither", "arithmetic xor dither", "gamma correct scaling", "alphablend", "mode for alpha -> non alpha", "ignore alpha", "uniform_color", "blend onto a uniform color", "blend onto a checkerboard", "libswscale/slice.c", "Slice parameters %d, %d are invalid\n", "bad src image pointers\n", "bad dst image pointers\n", "Slices start in the middle!\n", "Warning: dstStride is not aligned!\n         ->cannot do aligned memory accesses anymore\n", "firstLumSrcY >= lastInLumBuf - vLumBufSize + 1", "libswscale/swscale.c", "firstChrSrcY >= lastInChrBuf - vChrBufSize + 1", "libswscale/swscale_unscaled.c", "internal error %s -> %s converter\n", "unsupported planar RGB conversion %s -> %s\n", "unsupported conversion to planar RGB %s -> %s\n", "srcSliceH > 1", "libswscale license: LGPL version 2.1 or later", "YUV color matrix differs for YUV->YUV, using intermediate RGB to convert\n", "deprecated pixel format used, make sure you did set range correctly\n", "%s is not supported as input pixel format\n", "%s is not supported as output pixel format\n", "Exactly one scaler algorithm must be chosen, got %X\n", "%dx%d -> %dx%d is invalid scaling dimension\n", "Forcing full internal H chroma due to odd output size\n", "Forcing full internal H chroma due to input having non subsampled chroma\n", "Desired dithering only supported in full chroma interpolation for destination format '%s'\n", "Ordered dither is not supported in full chroma interpolation for destination format '%s'\n", "%s output is not supported with half chroma resolution, switching to full\n", "full chroma interpolation for destination format '%s' not yet implemented\n", "c->dstBpc > 14", "libswscale/utils.c", "c->chrDstH <= dstH", "ehh flags invalid?!", "%s scaler, from %s to %s%s ", "dithered ", "using %s\n", "%dx%d -> %dx%d\n", "lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "using alpha blendaway %s -> %s special converter\n", "using unscaled %s -> %s special converter\n", "%1.3f ", "sizeFactor > 0", "filter2Size > 0", "minFilterSize > 0", "SwScaler: reducing / aligning filtersize %d -> %d\n", "(*filterPos)[i] >= 0", "(*filterPos)[i] < srcW", "(*filterPos)[i] + j < srcW || !filter[i * filterSize + j]", "SwScaler: zero vector in scaling\n", "sws: initFilter failed\n", "area averaging", "luma bicubic / chroma bilinear", "nearest neighbor / point", "Optimized 2 tap filter code cannot be used\n", "No accelerated colorspace conversion found from %s to %s.\n", "%ibpp not supported by yuv2rgb\n", "zhuangshu: orange switch for arm64: hevc opt is %lld. \n", "TLSv1 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "t1_lib.c", "ECDSA", "client finished", "server finished", "t1_enc.c", "chunk >= 0", "client write key", "server write key", "IV block", "key expansion", "n >= 0", "%s:%d: rec->data != rec->input\n", "t >= 0", "master secret", "t1_ext.c", "!(meth->ext_flags & SSL_EXT_FLAG_SENT)", "d1_srtp.c", "SRTP_AES128_CM_SHA1_80", "SRTP_AES128_CM_SHA1_32", "ssl_lib.c", "ALL:!EXPORT:!LOW:!aNULL:!eNULL:!SSLv2", "ssl2-md5", "ssl3-md5", "ssl3-sha1", "TLSv1.2", "TLSv1.1", "TLSv1", "SSLv3", "DTLSv0.9", "DTLSv1", "DTLSv1.2", "ssl->sid_ctx_length <= sizeof(ssl->sid_ctx)", "s->sid_ctx_length <= sizeof(s->sid_ctx)", "OpenSSL 1.0.2p-dev  xx XXX xxxx", "ssl_cert.c", "SSL for verify callback", "ssl_client", "ssl_server", "%s/%s", "OPENSSL_DIR_read(&ctx, '", "Verify error:", "ssl_sess.c", "SSL SESSION PARAMETERS", "ssl_ciph.c", "STRENGTH", "DES-CBC", "DES-EDE3-CBC", "RC2-CBC", "IDEA-CBC", "AES-128-CBC", "AES-256-CBC", "CAMELLIA-128-CBC", "CAMELLIA-256-CBC", "gost89-cnt", "SEED-CBC", "id-aes128-GCM", "id-aes256-GCM", "ssl_mac_secret_size[SSL_MD_MD5_IDX] >= 0", "ssl_mac_secret_size[SSL_MD_SHA1_IDX] >= 0", "md_gost94", "ssl_mac_secret_size[SSL_MD_GOST94_IDX] >= 0", "gost-mac", "RC4-HMAC-MD5", "AES-128-CBC-HMAC-SHA1", "AES-256-CBC-HMAC-SHA1", "AES-128-CBC-HMAC-SHA256", "AES-256-CBC-HMAC-SHA256", "ECDHE-ECDSA-AES256-GCM-SHA384", "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384", "ECDHE-ECDSA-AES128-GCM-SHA256", "SUITEB128ONLY", "SUITEB128C2", "SUITEB128", "SUITEB192", "gost2001", "DEFAULT", "gost94", " export", "DH/RSA", "DH/DSS", "KRB5", "ECDH/RSA", "ECDH/ECDSA", "ECDH", "GOST", "DH(1024)", "DH(512)", "RSA(1024)", "RSA(512)", "None", "GOST94", "GOST01", "DES(56)", "3DES(168)", "RC4(128)", "RC2(128)", "IDEA(128)", "AES(128)", "AES(256)", "AESGCM(128)", "AESGCM(256)", "Camellia(128)", "Camellia(256)", "SEED(128)", "GOST89(256)", "RC2(56)", "RC2(40)", "RC4(56)", "RC4(64)", "RC4(40)", "DES(40)", "AEAD", "OPENSSL_malloc Error", "Buffer too small", "%-23s %s Kx=%-8s Au=%-4s Enc=%-9s Mac=%-4s%s\n", "(NONE)", "TLSv1/SSLv3", "COMPLEMENTOFALL", "COMPLEMENTOFDEFAULT", "kRSA", "kDHr", "kDHd", "kEDH", "kDHE", "kKRB5", "kECDHr", "kECDHe", "kECDH", "kEECDH", "kECDHE", "kPSK", "kSRP", "kGOST", "aRSA", "aDSS", "aKRB5", "aNULL", "aECDH", "aECDSA", "aPSK", "aGOST94", "aGOST01", "aGOST", "aSRP", "EECDH", "ECDHE", "AECDH", "3DES", "IDEA", "SEED", "eNULL", "AES128", "AES256", "AESGCM", "CAMELLIA128", "CAMELLIA256", "CAMELLIA", "GOST89MAC", "EXPORT", "EXPORT40", "EXPORT56", "MEDIUM", "HIGH", "FIPS", "EXP-DHE-DSS-DES-CBC-SHA", "DHE-DSS-DES-CBC-SHA", "DHE-DSS-DES-CBC3-SHA", "EXP-DHE-RSA-DES-CBC-SHA", "DHE-RSA-DES-CBC-SHA", "DHE-RSA-DES-CBC3-SHA", "before accept initialization", "before connect initialization", "SSL negotiation finished successfully", "SSL renegotiate ciphers", "before/connect initialization", "ok/connect SSL initialization", "before/accept initialization", "ok/accept SSL initialization", "SSLv3 write client hello A", "SSLv3 write client hello B", "SSLv3 read server hello A", "SSLv3 read server hello B", "SSLv3 read server certificate A", "SSLv3 read server certificate B", "SSLv3 read server key exchange A", "SSLv3 read server key exchange B", "SSLv3 read server certificate request A", "SSLv3 read server certificate request B", "SSLv3 read server session ticket A", "SSLv3 read server session ticket B", "SSLv3 read server done A", "SSLv3 read server done B", "SSLv3 write client certificate A", "SSLv3 write client certificate B", "SSLv3 write client certificate C", "SSLv3 write client certificate D", "SSLv3 write client key exchange A", "SSLv3 write client key exchange B", "SSLv3 write certificate verify A", "SSLv3 write certificate verify B", "SSLv3 write change cipher spec A", "SSLv3 write change cipher spec B", "SSLv3 write finished A", "SSLv3 write finished B", "SSLv3 read change cipher spec A", "SSLv3 read change cipher spec B", "SSLv3 read finished A", "SSLv3 read finished B", "SSLv3 flush data", "SSLv3 read client hello A", "SSLv3 read client hello B", "SSLv3 read client hello C", "SSLv3 write hello request A", "SSLv3 write hello request B", "SSLv3 write hello request C", "SSLv3 write server hello A", "SSLv3 write server hello B", "SSLv3 write certificate A", "SSLv3 write certificate B", "SSLv3 write key exchange A", "SSLv3 write key exchange B", "SSLv3 write certificate request A", "SSLv3 write certificate request B", "SSLv3 write session ticket A", "SSLv3 write session ticket B", "SSLv3 write server done A", "SSLv3 write server done B", "SSLv3 read client certificate A", "SSLv3 read client certificate B", "SSLv3 read client key exchange A", "SSLv3 read client key exchange B", "SSLv3 read certificate verify A", "SSLv3 read certificate verify B", "SSLv2/v3 write client hello A", "SSLv2/v3 write client hello B", "SSLv2/v3 read server hello A", "SSLv2/v3 read server hello B", "SSLv2/v3 read client hello A", "SSLv2/v3 read client hello B", "DTLS1 read hello verify request A", "DTLS1 read hello verify request B", "DTLS1 write hello verify request A", "DTLS1 write hello verify request B", "unknown state", "read header", "read body", "read done", "PINIT ", "AINIT ", "CINIT ", "SSLOK ", "SSLERR", "3FLUSH", "3WCH_A", "3WCH_B", "3RSH_A", "3RSH_B", "3RSC_A", "3RSC_B", "3RSKEA", "3RSKEB", "3RCR_A", "3RCR_B", "3RSD_A", "3RSD_B", "3WCC_A", "3WCC_B", "3WCC_C", "3WCC_D", "3WCKEA", "3WCKEB", "3WCV_A", "3WCV_B", "3WCCSA", "3WCCSB", "3WFINA", "3WFINB", "3RCCSA", "3RCCSB", "3RFINA", "3RFINB", "3WHR_A", "3WHR_B", "3WHR_C", "3RCH_A", "3RCH_B", "3RCH_C", "3WSH_A", "3WSH_B", "3WSC_A", "3WSC_B", "3WSKEA", "3WSKEB", "3WCR_A", "3WCR_B", "3WSD_A", "3WSD_B", "3RCC_A", "3RCC_B", "3RCKEA", "3RCKEB", "3RCV_A", "3RCV_B", "23WCHA", "23WCHB", "23RSHA", "23RCHA", "23RCHB", "DRCHVA", "DRCHVB", "DWCHVA", "DWCHVB", "UNKWN ", "warning", "fatal", "close notify", "unexpected_message", "bad record mac", "decompression failure", "handshake failure", "no certificate", "bad certificate", "unsupported certificate", "certificate revoked", "certificate expired", "certificate unknown", "illegal parameter", "decryption failed", "record overflow", "unknown CA", "access denied", "decrypt error", "export restriction", "protocol version", "insufficient security", "internal error", "user canceled", "no renegotiation", "unsupported extension", "certificate unobtainable", "unrecognized name", "bad certificate status response", "bad certificate hash value", "unknown PSK identity", "ssl_rsa.c", "SERVERINFO FOR ", "ssl_asn1.c", "RSA-SHA1-2", "RSA-SHA1", "DSA-SHA1-old", "DSA-SHA1", "DSS1", "dss1", "app data in handshake", "attempt to reuse session in different context", "bad alert record", "bad authentication type", "bad change cipher spec", "bad checksum", "bad data", "bad data returned by callback", "bad decompression", "bad dh g length", "bad dh g value", "bad dh pub key length", "bad dh pub key value", "bad dh p length", "bad dh p value", "bad digest length", "bad dsa signature", "bad ecc cert", "bad ecdsa signature", "bad ecpoint", "bad handshake length", "bad hello request", "bad length", "bad mac decode", "bad mac length", "bad message type", "bad packet length", "bad protocol version number", "bad psk identity hint length", "bad response argument", "bad rsa decrypt", "bad rsa encrypt", "bad rsa e length", "bad rsa modulus length", "bad rsa signature", "bad signature", "bad srp a length", "bad srp b length", "bad srp g length", "bad srp n length", "bad srp parameters", "bad srp s length", "bad srtp mki value", "bad srtp protection profile list", "bad ssl filetype", "bad ssl session id length", "bad state", "bad value", "bad write retry", "bio not set", "block cipher pad is wrong", "bn lib", "ca dn length mismatch", "ca dn too long", "ccs received early", "certificate verify failed", "cert cb error", "cert length mismatch", "challenge is different", "cipher code wrong length", "cipher or hash unavailable", "cipher table src error", "clienthello tlsext", "compressed length too long", "compression disabled", "compression failure", "compression id not within private range", "compression library error", "connection id is different", "connection type not set", "cookie mismatch", "data between ccs and finished", "data length too long", "decryption failed or bad record mac", "dh key too small", "dh public value length is wrong", "digest check failed", "dtls message too big", "duplicate compression id", "ecc cert not for key agreement", "ecc cert not for signing", "ecc cert should have rsa signature", "ecc cert should have sha1 signature", "ecdh required for suiteb mode", "ecgroup too large for cipher", "empty srtp protection profile list", "encrypted length too long", "error generating tmp rsa key", "error in received cipher list", "excessive message size", "extra data in message", "got a fin before a ccs", "got next proto before a ccs", "got next proto without seeing extension", "https proxy request", "http request", "illegal padding", "illegal Suite B digest", "inappropriate fallback", "inconsistent compression", "invalid challenge length", "invalid command", "invalid compression algorithm", "invalid null cmd name", "invalid purpose", "invalid serverinfo data", "invalid srp username", "invalid status response", "invalid ticket keys length", "invalid trust", "key arg too long", "krb5", "krb5 client cc principal (no tkt?)", "krb5 client get cred", "krb5 client init", "krb5 client mk_req (expired tkt?)", "krb5 server bad ticket", "krb5 server init", "krb5 server rd_req (keytab perms?)", "krb5 server tkt expired", "krb5 server tkt not yet valid", "krb5 server tkt skew", "length mismatch", "length too short", "library bug", "library has no ciphers", "message too long", "missing dh dsa cert", "missing dh key", "missing dh rsa cert", "missing dsa signing cert", "missing ecdh cert", "missing ecdsa signing cert", "missing export tmp dh key", "missing export tmp rsa key", "missing rsa certificate", "missing rsa encrypting cert", "missing rsa signing cert", "can't find SRP server param", "missing tmp dh key", "missing tmp ecdh key", "missing tmp rsa key", "missing tmp rsa pkey", "missing verify message", "multiple sgc restarts", "non sslv2 initial packet", "no certificates returned", "no certificate assigned", "no certificate returned", "no certificate set", "no certificate specified", "no ciphers available", "no ciphers passed", "no ciphers specified", "no cipher list", "no cipher match", "no client cert method", "no client cert received", "no compression specified", "Peer haven't sent GOST certificate, required for selected ciphersuite", "no method specified", "no pem extensions", "no privatekey", "no private key assigned", "no protocols available", "no publickey", "digest requred for handshake isn't computed", "no shared cipher", "no shared sigature algorithms", "no srtp profiles", "no verify callback", "null ssl ctx", "null ssl method passed", "old session cipher not returned", "old session compression algorithm not returned", "only DTLS 1.2 allowed in Suite B mode", "only TLS 1.2 allowed in Suite B mode", "only tls allowed in fips mode", "opaque PRF input too long", "packet length too long", "parse tlsext", "path too long", "peer did not return a certificate", "peer error", "peer error certificate", "peer error no certificate", "peer error no cipher", "peer error unsupported certificate type", "pem name bad prefix", "pem name too short", "pre mac length too long", "problems mapping cipher functions", "protocol is shutdown", "psk identity not found", "psk no client cb", "psk no server cb", "public key encrypt error", "public key is not rsa", "public key not rsa", "read bio not set", "read timeout expired", "read wrong packet type", "record length mismatch", "record too large", "record too small", "renegotiate ext too long", "renegotiation encoding err", "renegotiation mismatch", "required cipher missing", "required compresssion algorithm missing", "reuse cert length not zero", "reuse cert type not zero", "reuse cipher list not zero", "scsv received when renegotiating", "serverhello tlsext", "session id context uninitialized", "short read", "shutdown while in init", "signature algorithms error", "signature for non signing certificate", "error with the srp params", "srtp could not allocate profiles", "srtp protection profile list too long", "srtp unknown protection profile", "ssl23 doing session id reuse", "ssl2 connection id too long", "ssl3 ext invalid ecpointformat", "ssl3 ext invalid servername", "ssl3 ext invalid servername type", "ssl3 session id too long", "ssl3 session id too short", "sslv3 alert bad certificate", "sslv3 alert bad record mac", "sslv3 alert certificate expired", "sslv3 alert certificate revoked", "sslv3 alert certificate unknown", "sslv3 alert decompression failure", "sslv3 alert handshake failure", "sslv3 alert illegal parameter", "sslv3 alert no certificate", "sslv3 alert unexpected message", "sslv3 alert unsupported certificate", "ssl ctx has no default ssl version", "ssl handshake failure", "ssl library has no ciphers", "ssl session id callback failed", "ssl session id conflict", "ssl session id context too long", "ssl session id has bad length", "ssl session id is different", "tlsv1 alert access denied", "tlsv1 alert decode error", "tlsv1 alert decryption failed", "tlsv1 alert decrypt error", "tlsv1 alert export restriction", "tlsv1 alert inappropriate fallback", "tlsv1 alert insufficient security", "tlsv1 alert internal error", "tlsv1 alert no renegotiation", "tlsv1 alert protocol version", "tlsv1 alert record overflow", "tlsv1 alert unknown ca", "tlsv1 alert user cancelled", "tlsv1 bad certificate hash value", "tlsv1 bad certificate status response", "tlsv1 certificate unobtainable", "tlsv1 unrecognized name", "tlsv1 unsupported extension", "tls client cert req with anon cipher", "peer does not accept heartbeats", "heartbeat request already pending", "tls illegal exporter label", "tls invalid ecpointformat list", "too many warn alerts", "tls peer did not respond with certificate list", "tls rsa encrypted value length is wrong", "tried to use unsupported cipher", "unable to decode dh certs", "unable to decode ecdh certs", "unable to extract public key", "unable to find dh parameters", "unable to find ecdh parameters", "unable to find public key parameters", "unable to find ssl method", "unable to load ssl2 md5 routines", "unable to load ssl3 md5 routines", "unable to load ssl3 sha1 routines", "unexpected message", "unexpected record", "uninitialized", "unknown alert type", "unknown certificate type", "unknown cipher returned", "unknown cipher type", "unknown cmd name", "unknown digest", "unknown key exchange type", "unknown pkey type", "unknown protocol", "unknown remote error type", "unknown ssl version", "unsafe legacy renegotiation disabled", "unsupported cipher", "unsupported compression algorithm", "unsupported digest type", "unsupported elliptic curve", "unsupported protocol", "unsupported ssl version", "unsupported status type", "use srtp not negotiated", "write bio not set", "wrong certificate type", "wrong cipher returned", "wrong curve", "wrong message type", "wrong number of key bits", "wrong signature length", "wrong signature size", "wrong signature type", "wrong ssl version", "wrong version number", "x509 lib", "x509 verification setup problems", "CHECK_SUITEB_CIPHER_LIST", "CLIENT_CERTIFICATE", "CLIENT_FINISHED", "CLIENT_HELLO", "CLIENT_MASTER_KEY", "d2i_SSL_SESSION", "do_dtls1_write", "DO_SSL3_WRITE", "dtls1_accept", "DTLS1_ADD_CERT_TO_BUF", "DTLS1_BUFFER_RECORD", "dtls1_check_timeout_num", "dtls1_client_hello", "dtls1_connect", "DTLS1_GET_HELLO_VERIFY", "dtls1_get_message", "DTLS1_GET_MESSAGE_FRAGMENT", "dtls1_get_record", "dtls1_handle_timeout", "dtls1_heartbeat", "dtls1_output_cert_chain", "DTLS1_PREPROCESS_FRAGMENT", "DTLS1_PROCESS_BUFFERED_RECORDS", "DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE", "DTLS1_PROCESS_RECORD", "dtls1_read_bytes", "dtls1_read_failed", "dtls1_send_certificate_request", "dtls1_send_client_certificate", "dtls1_send_client_key_exchange", "dtls1_send_client_verify", "DTLS1_SEND_HELLO_VERIFY_REQUEST", "dtls1_send_server_certificate", "dtls1_send_server_hello", "dtls1_send_server_key_exchange", "dtls1_write_app_data_bytes", "GET_CLIENT_FINISHED", "GET_CLIENT_HELLO", "GET_CLIENT_MASTER_KEY", "GET_SERVER_FINISHED", "GET_SERVER_HELLO", "GET_SERVER_STATIC_DH_KEY", "GET_SERVER_VERIFY", "i2d_SSL_SESSION", "READ_N", "REQUEST_CERTIFICATE", "SERVER_FINISH", "SERVER_HELLO", "SERVER_VERIFY", "ssl23_accept", "SSL23_CLIENT_HELLO", "ssl23_connect", "SSL23_GET_CLIENT_HELLO", "SSL23_GET_SERVER_HELLO", "ssl23_peek", "ssl23_read", "ssl23_write", "ssl2_accept", "ssl2_connect", "ssl2_enc_init", "ssl2_generate_key_material", "ssl2_peek", "ssl2_read", "SSL2_READ_INTERNAL", "ssl2_set_certificate", "ssl2_write", "ssl3_accept", "SSL3_ADD_CERT_TO_BUF", "ssl3_callback_ctrl", "ssl3_change_cipher_state", "ssl3_check_cert_and_algorithm", "ssl3_check_client_hello", "SSL3_CHECK_FINISHED", "ssl3_client_hello", "ssl3_connect", "ssl3_ctrl", "ssl3_ctx_ctrl", "ssl3_digest_cached_records", "ssl3_do_change_cipher_spec", "ssl3_enc", "SSL3_GENERATE_KEY_BLOCK", "ssl3_generate_master_secret", "ssl3_get_certificate_request", "ssl3_get_cert_status", "ssl3_get_cert_verify", "ssl3_get_client_certificate", "ssl3_get_client_hello", "ssl3_get_client_key_exchange", "ssl3_get_finished", "ssl3_get_key_exchange", "ssl3_get_message", "ssl3_get_new_session_ticket", "ssl3_get_next_proto", "SSL3_GET_RECORD", "ssl3_get_server_certificate", "ssl3_get_server_done", "ssl3_get_server_hello", "ssl3_handshake_mac", "SSL3_NEW_SESSION_TICKET", "ssl3_output_cert_chain", "ssl3_peek", "ssl3_read_bytes", "ssl3_read_n", "ssl3_send_certificate_request", "ssl3_send_client_certificate", "ssl3_send_client_key_exchange", "ssl3_send_client_verify", "ssl3_send_server_certificate", "ssl3_send_server_hello", "ssl3_send_server_key_exchange", "ssl3_setup_key_block", "ssl3_setup_read_buffer", "ssl3_setup_write_buffer", "ssl3_write_bytes", "ssl3_write_pending", "ssl_add_cert_chain", "SSL_ADD_CERT_TO_BUF", "ssl_add_clienthello_renegotiate_ext", "ssl_add_clienthello_tlsext", "ssl_add_clienthello_use_srtp_ext", "SSL_add_dir_cert_subjects_to_stack", "SSL_add_file_cert_subjects_to_stack", "ssl_add_serverhello_renegotiate_ext", "ssl_add_serverhello_tlsext", "ssl_add_serverhello_use_srtp_ext", "ssl_bad_method", "ssl_build_cert_chain", "ssl_bytes_to_cipher_list", "ssl_cert_dup", "ssl_cert_inst", "SSL_CERT_INSTANTIATE", "ssl_cert_new", "SSL_check_private_key", "SSL_CHECK_SERVERHELLO_TLSEXT", "ssl_check_srvr_ecc_cert_and_alg", "SSL_CIPHER_PROCESS_RULESTR", "SSL_CIPHER_STRENGTH_SORT", "SSL_clear", "SSL_COMP_add_compression_method", "SSL_CONF_cmd", "ssl_create_cipher_list", "SSL_ctrl", "SSL_CTX_check_private_key", "SSL_CTX_MAKE_PROFILES", "SSL_CTX_new", "SSL_CTX_set_cipher_list", "SSL_CTX_set_client_cert_engine", "SSL_CTX_set_purpose", "SSL_CTX_set_session_id_context", "SSL_CTX_set_ssl_version", "SSL_CTX_set_trust", "SSL_CTX_use_certificate", "SSL_CTX_use_certificate_ASN1", "SSL_CTX_use_certificate_chain_file", "SSL_CTX_use_certificate_file", "SSL_CTX_use_PrivateKey", "SSL_CTX_use_PrivateKey_ASN1", "SSL_CTX_use_PrivateKey_file", "SSL_CTX_use_psk_identity_hint", "SSL_CTX_use_RSAPrivateKey", "SSL_CTX_use_RSAPrivateKey_ASN1", "SSL_CTX_use_RSAPrivateKey_file", "SSL_CTX_use_serverinfo", "SSL_CTX_use_serverinfo_file", "SSL_do_handshake", "ssl_get_new_session", "ssl_get_prev_session", "SSL_GET_SERVER_CERT_INDEX", "SSL_GET_SERVER_SEND_CERT", "ssl_get_server_send_pkey", "ssl_get_sign_pkey", "ssl_init_wbio_buffer", "SSL_load_client_CA_file", "SSL_new", "ssl_parse_clienthello_renegotiate_ext", "ssl_parse_clienthello_tlsext", "ssl_parse_clienthello_use_srtp_ext", "ssl_parse_serverhello_renegotiate_ext", "ssl_parse_serverhello_tlsext", "ssl_parse_serverhello_use_srtp_ext", "SSL_peek", "ssl_prepare_clienthello_tlsext", "ssl_prepare_serverhello_tlsext", "SSL_read", "SSL_RSA_PRIVATE_DECRYPT", "SSL_RSA_PUBLIC_ENCRYPT", "SSL_SCAN_CLIENTHELLO_TLSEXT", "SSL_SCAN_SERVERHELLO_TLSEXT", "ssl_session_dup", "SSL_SESSION_new", "SSL_SESSION_print_fp", "SSL_SESSION_set1_id_context", "ssl_sess_cert_new", "SSL_SET_CERT", "SSL_set_cipher_list", "SSL_set_fd", "SSL_SET_PKEY", "SSL_set_purpose", "SSL_set_rfd", "SSL_set_session", "SSL_set_session_id_context", "SSL_set_session_ticket_ext", "SSL_set_trust", "SSL_set_wfd", "SSL_shutdown", "SSL_SRP_CTX_init", "ssl_undefined_const_function", "ssl_undefined_function", "ssl_undefined_void_function", "SSL_use_certificate", "SSL_use_certificate_ASN1", "SSL_use_certificate_file", "SSL_use_PrivateKey", "SSL_use_PrivateKey_ASN1", "SSL_use_PrivateKey_file", "SSL_use_psk_identity_hint", "SSL_use_RSAPrivateKey", "SSL_use_RSAPrivateKey_ASN1", "SSL_use_RSAPrivateKey_file", "ssl_verify_cert_chain", "SSL_write", "tls12_check_peer_sigalg", "tls1_cert_verify_mac", "tls1_change_cipher_state", "TLS1_CHECK_SERVERHELLO_TLSEXT", "tls1_enc", "tls1_export_keying_material", "TLS1_GET_CURVELIST", "tls1_heartbeat", "TLS1_PREPARE_CLIENTHELLO_TLSEXT", "TLS1_PREPARE_SERVERHELLO_TLSEXT", "tls1_prf", "tls1_setup_key_block", "tls1_set_server_sigalgs", "WRITE_PENDING", "t1_reneg.c", "!expected_len || s->s3->previous_client_finished_len", "!expected_len || s->s3->previous_server_finished_len", "tls_srp.c", "s3_srvr.c", "s3_clnt.c", "SSLv3 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "s3_lib.c", "CLNT", "SRVR", "NULL-MD5", "NULL-SHA", "RC4-MD5", "RC4-SHA", "IDEA-CBC-SHA", "DH-DSS-DES-CBC3-SHA", "DH-RSA-DES-CBC3-SHA", "EDH-DSS-DES-CBC3-SHA", "EDH-RSA-DES-CBC3-SHA", "ADH-RC4-MD5", "ADH-DES-CBC3-SHA", "DH-DSS-AES128-SHA", "DH-RSA-AES128-SHA", "DHE-DSS-AES128-SHA", "DHE-RSA-AES128-SHA", "ADH-AES128-SHA", "DH-DSS-AES256-SHA", "DH-RSA-AES256-SHA", "DHE-DSS-AES256-SHA", "DHE-RSA-AES256-SHA", "ADH-AES256-SHA", "NULL-SHA256", "DH-DSS-AES128-SHA256", "DH-RSA-AES128-SHA256", "DHE-DSS-AES128-SHA256", "DH-DSS-CAMELLIA128-SHA", "DH-RSA-CAMELLIA128-SHA", "DHE-DSS-CAMELLIA128-SHA", "DHE-RSA-CAMELLIA128-SHA", "ADH-CAMELLIA128-SHA", "DHE-RSA-AES128-SHA256", "DH-DSS-AES256-SHA256", "DH-RSA-AES256-SHA256", "DHE-DSS-AES256-SHA256", "DHE-RSA-AES256-SHA256", "ADH-AES128-SHA256", "ADH-AES256-SHA256", "GOST94-GOST89-GOST89", "GOST2001-GOST89-GOST89", "GOST94-NULL-GOST94", "GOST2001-NULL-GOST94", "DH-DSS-CAMELLIA256-SHA", "DH-RSA-CAMELLIA256-SHA", "DHE-DSS-CAMELLIA256-SHA", "DHE-RSA-CAMELLIA256-SHA", "ADH-CAMELLIA256-SHA", "PSK-RC4-SHA", "PSK-3DES-EDE-CBC-SHA", "PSK-AES128-CBC-SHA", "PSK-AES256-CBC-SHA", "DH-DSS-SEED-SHA", "DH-RSA-SEED-SHA", "DHE-DSS-SEED-SHA", "DHE-RSA-SEED-SHA", "ADH-SEED-SHA", "DHE-RSA-AES128-GCM-SHA256", "DHE-RSA-AES256-GCM-SHA384", "DH-RSA-AES128-GCM-SHA256", "DH-RSA-AES256-GCM-SHA384", "DHE-DSS-AES128-GCM-SHA256", "DHE-DSS-AES256-GCM-SHA384", "DH-DSS-AES128-GCM-SHA256", "DH-DSS-AES256-GCM-SHA384", "ADH-AES128-GCM-SHA256", "ADH-AES256-GCM-SHA384", "ECDH-ECDSA-NULL-SHA", "ECDH-ECDSA-RC4-SHA", "ECDH-ECDSA-DES-CBC3-SHA", "ECDH-ECDSA-AES128-SHA", "ECDH-ECDSA-AES256-SHA", "ECDHE-ECDSA-NULL-SHA", "ECDHE-ECDSA-RC4-SHA", "ECDHE-ECDSA-DES-CBC3-SHA", "ECDHE-ECDSA-AES128-SHA", "ECDHE-ECDSA-AES256-SHA", "ECDH-RSA-NULL-SHA", "ECDH-RSA-RC4-SHA", "ECDH-RSA-DES-CBC3-SHA", "ECDH-RSA-AES128-SHA", "ECDH-RSA-AES256-SHA", "ECDHE-RSA-NULL-SHA", "ECDHE-RSA-RC4-SHA", "ECDHE-RSA-DES-CBC3-SHA", "ECDHE-RSA-AES128-SHA", "ECDHE-RSA-AES256-SHA", "AECDH-NULL-SHA", "AECDH-RC4-SHA", "AECDH-DES-CBC3-SHA", "AECDH-AES128-SHA", "AECDH-AES256-SHA", "SRP-3DES-EDE-CBC-SHA", "SRP-RSA-3DES-EDE-CBC-SHA", "SRP-DSS-3DES-EDE-CBC-SHA", "SRP-AES-128-CBC-SHA", "SRP-RSA-AES-128-CBC-SHA", "SRP-DSS-AES-128-CBC-SHA", "SRP-AES-256-CBC-SHA", "SRP-RSA-AES-256-CBC-SHA", "SRP-DSS-AES-256-CBC-SHA", "ECDHE-ECDSA-AES128-SHA256", "ECDHE-ECDSA-AES256-SHA384", "ECDH-ECDSA-AES128-SHA256", "ECDH-ECDSA-AES256-SHA384", "ECDHE-RSA-AES128-SHA256", "ECDHE-RSA-AES256-SHA384", "ECDH-RSA-AES128-SHA256", "ECDH-RSA-AES256-SHA384", "ECDH-ECDSA-AES128-GCM-SHA256", "ECDH-ECDSA-AES256-GCM-SHA384", "ECDHE-RSA-AES128-GCM-SHA256", "ECDHE-RSA-AES256-GCM-SHA384", "ECDH-RSA-AES128-GCM-SHA256", "ECDH-RSA-AES256-GCM-SHA384", "s3_enc.c", "s3_pkt.c", "s->s3->wnum <= INT_MAX", "mac_size <= EVP_MAX_MD_SIZE", "SSL alert number ", "P00***33*-*-****P00000,00+**....0................(...........***PP", "s3_both.c", "i <= EVP_MAX_MD_SIZE", "s3_cbc.c", "orig_len >= md_size", "md_size <= EVP_MAX_MD_SIZE", "data_plus_mac_plus_padding_size < 1024 * 1024", "mac_secret_length <= sizeof(hmac_pad)", "s23_srvr.c", "GET ", "POST ", "HEAD ", "PUT ", "CONNECT", "s->version <= TLS_MAX_VERSION", "s23_clnt.c", "s23_lib.c", "d1_srvr.c", "d1_clnt.c", "DTLSv1 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "d1_lib.c", "d1_pkt.c", "len <= SSL3_RT_MAX_PLAIN_LENGTH", "d1_both.c", "((long)msg_hdr->msg_len) > 0", "item != NULL", "s->init_off == 0", "s->d1->w_msg_hdr.msg_len + ((s->version==DTLS1_BAD_VER)?3:DTLS1_CCS_HEADER_LENGTH) == (unsigned int)s->init_num", "s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH == (unsigned int)s->init_num", "s->d1->mtu >= dtls1_min_mtu(s)", "s->init_num == (int)s->d1->w_msg_hdr.msg_len + DTLS1_HM_HEADER_LENGTH", "len == (unsigned int)ret", "cryptlib.c", "dynamic", "ERROR", "%s(%d): OpenSSL internal error, assertion failed: %s\n", "pointer != NULL", "<<ERROR>>", "ex_data", "x509", "x509_info", "x509_pkey", "x509_crl", "x509_req", "evp_pkey", "x509_store", "ssl_ctx", "ssl_cert", "ssl_session", "ssl_sess_cert", "ssl_method", "rand", "rand2", "debug_malloc", "gethostbyname", "getservbyname", "readdir", "RSA_blinding", "debug_malloc2", "dynlock", "ecdsa", "ecdh", "ec_pre_comp", "store", "comp", "fips", "fips2", "mem.c", "[%02d:%02d:%02d] ", "%5lu file=%s, line=%d, ", "thread=%lu, ", "number=%d, address=%08lX\n", " thread=%lu, file=%s, line=%d, info=\"", "mem_dbg.c", "%ld bytes leaked in %d chunks\n", "ex_data.c", "o_names.c", "obj_dat.c", ".%lu", "UNDEF", "undefined", "rsadsi", "RSA Data Security, Inc.", "pkcs", "RSA Data Security, Inc. PKCS", "rsaEncryption", "RSA-MD2", "md2WithRSAEncryption", "RSA-MD5", "md5WithRSAEncryption", "PBE-MD2-DES", "pbeWithMD2AndDES-CBC", "PBE-MD5-DES", "pbeWithMD5AndDES-CBC", "X500", "directory services (X.500)", "X509", "commonName", "countryName", "localityName", "stateOrProvinceName", "organizationName", "organizationalUnitName", "pkcs7", "pkcs7-data", "pkcs7-signedData", "pkcs7-envelopedData", "pkcs7-signedAndEnvelopedData", "pkcs7-digestData", "pkcs7-encryptedData", "pkcs3", "dhKeyAgreement", "DES-ECB", "des-ecb", "DES-CFB", "des-cfb", "des-cbc", "DES-EDE", "des-ede", "DES-EDE3", "des-ede3", "idea-cbc", "IDEA-CFB", "idea-cfb", "IDEA-ECB", "idea-ecb", "rc2-cbc", "RC2-ECB", "rc2-ecb", "RC2-CFB", "rc2-cfb", "RC2-OFB", "rc2-ofb", "RSA-SHA", "shaWithRSAEncryption", "DES-EDE-CBC", "des-ede-cbc", "des-ede3-cbc", "DES-OFB", "des-ofb", "IDEA-OFB", "idea-ofb", "pkcs9", "emailAddress", "unstructuredName", "contentType", "messageDigest", "signingTime", "countersignature", "challengePassword", "unstructuredAddress", "extendedCertificateAttributes", "Netscape", "Netscape Communications Corp.", "nsCertExt", "Netscape Certificate Extension", "nsDataType", "Netscape Data Type", "DES-EDE-CFB", "des-ede-cfb", "DES-EDE3-CFB", "des-ede3-cfb", "DES-EDE-OFB", "des-ede-ofb", "DES-EDE3-OFB", "des-ede3-ofb", "sha1", "sha1WithRSAEncryption", "DSA-SHA", "dsaWithSHA", "DSA-old", "dsaEncryption-old", "PBE-SHA1-RC2-64", "pbeWithSHA1AndRC2-CBC", "PBKDF2", "dsaWithSHA1-old", "nsCertType", "Netscape Cert Type", "nsBaseUrl", "Netscape Base Url", "nsRevocationUrl", "Netscape Revocation Url", "nsCaRevocationUrl", "Netscape CA Revocation Url", "nsRenewalUrl", "Netscape Renewal Url", "nsCaPolicyUrl", "Netscape CA Policy Url", "nsSslServerName", "Netscape SSL Server Name", "nsComment", "Netscape Comment", "nsCertSequence", "Netscape Certificate Sequence", "DESX-CBC", "desx-cbc", "id-ce", "subjectKeyIdentifier", "X509v3 Subject Key Identifier", "keyUsage", "X509v3 Key Usage", "privateKeyUsagePeriod", "X509v3 Private Key Usage Period", "subjectAltName", "X509v3 Subject Alternative Name", "issuerAltName", "X509v3 Issuer Alternative Name", "basicConstraints", "X509v3 Basic Constraints", "crlNumber", "X509v3 CRL Number", "certificatePolicies", "X509v3 Certificate Policies", "authorityKeyIdentifier", "X509v3 Authority Key Identifier", "BF-CBC", "bf-cbc", "BF-ECB", "bf-ecb", "BF-CFB", "bf-cfb", "BF-OFB", "bf-ofb", "MDC2", "mdc2", "RSA-MDC2", "mdc2WithRSA", "RC4-40", "rc4-40", "RC2-40-CBC", "rc2-40-cbc", "givenName", "surname", "initials", "crlDistributionPoints", "X509v3 CRL Distribution Points", "RSA-NP-MD5", "md5WithRSA", "serialNumber", "title", "description", "CAST5-CBC", "cast5-cbc", "CAST5-ECB", "cast5-ecb", "CAST5-CFB", "cast5-cfb", "CAST5-OFB", "cast5-ofb", "pbeWithMD5AndCast5CBC", "dsaWithSHA1", "MD5-SHA1", "md5-sha1", "sha1WithRSA", "dsaEncryption", "RIPEMD160", "ripemd160", "RSA-RIPEMD160", "ripemd160WithRSA", "RC5-CBC", "rc5-cbc", "RC5-ECB", "rc5-ecb", "RC5-CFB", "rc5-cfb", "RC5-OFB", "rc5-ofb", "run length compression", "ZLIB", "zlib compression", "extendedKeyUsage", "X509v3 Extended Key Usage", "PKIX", "id-kp", "serverAuth", "TLS Web Server Authentication", "clientAuth", "TLS Web Client Authentication", "codeSigning", "Code Signing", "emailProtection", "E-mail Protection", "timeStamping", "Time Stamping", "msCodeInd", "Microsoft Individual Code Signing", "msCodeCom", "Microsoft Commercial Code Signing", "msCTLSign", "Microsoft Trust List Signing", "msSGC", "Microsoft Server Gated Crypto", "msEFS", "Microsoft Encrypted File System", "nsSGC", "Netscape Server Gated Crypto", "deltaCRL", "X509v3 Delta CRL Indicator", "CRLReason", "X509v3 CRL Reason Code", "invalidityDate", "Invalidity Date", "SXNetID", "Strong Extranet ID", "PBE-SHA1-RC4-128", "pbeWithSHA1And128BitRC4", "PBE-SHA1-RC4-40", "pbeWithSHA1And40BitRC4", "PBE-SHA1-3DES", "pbeWithSHA1And3-KeyTripleDES-CBC", "PBE-SHA1-2DES", "pbeWithSHA1And2-KeyTripleDES-CBC", "PBE-SHA1-RC2-128", "pbeWithSHA1And128BitRC2-CBC", "PBE-SHA1-RC2-40", "pbeWithSHA1And40BitRC2-CBC", "keyBag", "pkcs8ShroudedKeyBag", "certBag", "crlBag", "secretBag", "safeContentsBag", "friendlyName", "localKeyID", "x509Certificate", "sdsiCertificate", "x509Crl", "PBES2", "PBMAC1", "hmacWithSHA1", "id-qt-cps", "Policy Qualifier CPS", "id-qt-unotice", "Policy Qualifier User Notice", "RC2-64-CBC", "rc2-64-cbc", "SMIME-CAPS", "S/MIME Capabilities", "PBE-MD2-RC2-64", "pbeWithMD2AndRC2-CBC", "PBE-MD5-RC2-64", "pbeWithMD5AndRC2-CBC", "PBE-SHA1-DES", "pbeWithSHA1AndDES-CBC", "msExtReq", "Microsoft Extension Request", "extReq", "Extension Request", "dnQualifier", "id-pe", "id-ad", "authorityInfoAccess", "Authority Information Access", "OCSP", "caIssuers", "CA Issuers", "OCSPSigning", "OCSP Signing", "member-body", "ISO Member Body", "ISO-US", "ISO US Member Body", "X9-57", "X9.57", "X9cm", "X9.57 CM ?", "pkcs1", "pkcs5", "SMIME", "S/MIME", "id-smime-mod", "id-smime-ct", "id-smime-aa", "id-smime-alg", "id-smime-cd", "id-smime-spq", "id-smime-cti", "id-smime-mod-cms", "id-smime-mod-ess", "id-smime-mod-oid", "id-smime-mod-msg-v3", "id-smime-mod-ets-eSignature-88", "id-smime-mod-ets-eSignature-97", "id-smime-mod-ets-eSigPolicy-88", "id-smime-mod-ets-eSigPolicy-97", "id-smime-ct-receipt", "id-smime-ct-authData", "id-smime-ct-publishCert", "id-smime-ct-TSTInfo", "id-smime-ct-TDTInfo", "id-smime-ct-contentInfo", "id-smime-ct-DVCSRequestData", "id-smime-ct-DVCSResponseData", "id-smime-aa-receiptRequest", "id-smime-aa-securityLabel", "id-smime-aa-mlExpandHistory", "id-smime-aa-contentHint", "id-smime-aa-msgSigDigest", "id-smime-aa-encapContentType", "id-smime-aa-contentIdentifier", "id-smime-aa-macValue", "id-smime-aa-equivalentLabels", "id-smime-aa-contentReference", "id-smime-aa-encrypKeyPref", "id-smime-aa-signingCertificate", "id-smime-aa-smimeEncryptCerts", "id-smime-aa-timeStampToken", "id-smime-aa-ets-sigPolicyId", "id-smime-aa-ets-commitmentType", "id-smime-aa-ets-signerLocation", "id-smime-aa-ets-signerAttr", "id-smime-aa-ets-otherSigCert", "id-smime-aa-ets-contentTimestamp", "id-smime-aa-ets-CertificateRefs", "id-smime-aa-ets-RevocationRefs", "id-smime-aa-ets-certValues", "id-smime-aa-ets-revocationValues", "id-smime-aa-ets-escTimeStamp", "id-smime-aa-ets-certCRLTimestamp", "id-smime-aa-ets-archiveTimeStamp", "id-smime-aa-signatureType", "id-smime-aa-dvcs-dvc", "id-smime-alg-ESDHwith3DES", "id-smime-alg-ESDHwithRC2", "id-smime-alg-3DESwrap", "id-smime-alg-RC2wrap", "id-smime-alg-ESDH", "id-smime-alg-CMS3DESwrap", "id-smime-alg-CMSRC2wrap", "id-smime-cd-ldap", "id-smime-spq-ets-sqt-uri", "id-smime-spq-ets-sqt-unotice", "id-smime-cti-ets-proofOfOrigin", "id-smime-cti-ets-proofOfReceipt", "id-smime-cti-ets-proofOfDelivery", "id-smime-cti-ets-proofOfSender", "id-smime-cti-ets-proofOfApproval", "id-smime-cti-ets-proofOfCreation", "id-pkix-mod", "id-qt", "id-it", "id-pkip", "id-alg", "id-cmc", "id-on", "id-pda", "id-aca", "id-qcs", "id-cct", "id-pkix1-explicit-88", "id-pkix1-implicit-88", "id-pkix1-explicit-93", "id-pkix1-implicit-93", "id-mod-crmf", "id-mod-cmc", "id-mod-kea-profile-88", "id-mod-kea-profile-93", "id-mod-cmp", "id-mod-qualified-cert-88", "id-mod-qualified-cert-93", "id-mod-attribute-cert", "id-mod-timestamp-protocol", "id-mod-ocsp", "id-mod-dvcs", "id-mod-cmp2000", "biometricInfo", "Biometric Info", "qcStatements", "ac-auditEntity", "ac-targeting", "aaControls", "sbgp-ipAddrBlock", "sbgp-autonomousSysNum", "sbgp-routerIdentifier", "textNotice", "ipsecEndSystem", "IPSec End System", "ipsecTunnel", "IPSec Tunnel", "ipsecUser", "IPSec User", "DVCS", "dvcs", "id-it-caProtEncCert", "id-it-signKeyPairTypes", "id-it-encKeyPairTypes", "id-it-preferredSymmAlg", "id-it-caKeyUpdateInfo", "id-it-currentCRL", "id-it-unsupportedOIDs", "id-it-subscriptionRequest", "id-it-subscriptionResponse", "id-it-keyPairParamReq", "id-it-keyPairParamRep", "id-it-revPassphrase", "id-it-implicitConfirm", "id-it-confirmWaitTime", "id-it-origPKIMessage", "id-regCtrl", "id-regInfo", "id-regCtrl-regToken", "id-regCtrl-authenticator", "id-regCtrl-pkiPublicationInfo", "id-regCtrl-pkiArchiveOptions", "id-regCtrl-oldCertID", "id-regCtrl-protocolEncrKey", "id-regInfo-utf8Pairs", "id-regInfo-certReq", "id-alg-des40", "id-alg-noSignature", "id-alg-dh-sig-hmac-sha1", "id-alg-dh-pop", "id-cmc-statusInfo", "id-cmc-identification", "id-cmc-identityProof", "id-cmc-dataReturn", "id-cmc-transactionId", "id-cmc-senderNonce", "id-cmc-recipientNonce", "id-cmc-addExtensions", "id-cmc-encryptedPOP", "id-cmc-decryptedPOP", "id-cmc-lraPOPWitness", "id-cmc-getCert", "id-cmc-getCRL", "id-cmc-revokeRequest", "id-cmc-regInfo", "id-cmc-responseInfo", "id-cmc-queryPending", "id-cmc-popLinkRandom", "id-cmc-popLinkWitness", "id-cmc-confirmCertAcceptance", "id-on-personalData", "id-pda-dateOfBirth", "id-pda-placeOfBirth", "id-pda-gender", "id-pda-countryOfCitizenship", "id-pda-countryOfResidence", "id-aca-authenticationInfo", "id-aca-accessIdentity", "id-aca-chargingIdentity", "id-aca-group", "id-aca-role", "id-qcs-pkixQCSyntax-v1", "id-cct-crs", "id-cct-PKIData", "id-cct-PKIResponse", "ad_timestamping", "AD Time Stamping", "AD_DVCS", "ad dvcs", "basicOCSPResponse", "Basic OCSP Response", "OCSP Nonce", "CrlID", "OCSP CRL ID", "acceptableResponses", "Acceptable OCSP Responses", "noCheck", "OCSP No Check", "archiveCutoff", "OCSP Archive Cutoff", "serviceLocator", "OCSP Service Locator", "extendedStatus", "Extended OCSP Status", "path", "trustRoot", "Trust Root", "rsaSignature", "X500algorithms", "directory services - algorithms", "IANA", "iana", "Directory", "mgmt", "Management", "experimental", "Experimental", "private", "Private", "security", "Security", "snmpv2", "SNMPv2", "Mail", "enterprises", "Enterprises", "dcobject", "dcObject", "domainComponent", "domain", "Domain", "selected-attribute-types", "Selected Attribute Types", "clearance", "RSA-MD4", "md4WithRSAEncryption", "ac-proxying", "subjectInfoAccess", "Subject Information Access", "id-aca-encAttrs", "role", "policyConstraints", "X509v3 Policy Constraints", "targetInformation", "X509v3 AC Targeting", "noRevAvail", "X509v3 No Revocation Available", "ansi-X9-62", "ANSI X9.62", "prime-field", "characteristic-two-field", "id-ecPublicKey", "prime192v1", "prime192v2", "prime192v3", "prime239v1", "prime239v2", "prime239v3", "prime256v1", "ecdsa-with-SHA1", "CSPName", "Microsoft CSP Name", "AES-128-ECB", "aes-128-ecb", "aes-128-cbc", "AES-128-OFB", "aes-128-ofb", "AES-128-CFB", "aes-128-cfb", "AES-192-ECB", "aes-192-ecb", "AES-192-CBC", "aes-192-cbc", "AES-192-OFB", "aes-192-ofb", "AES-192-CFB", "aes-192-cfb", "AES-256-ECB", "aes-256-ecb", "aes-256-cbc", "AES-256-OFB", "aes-256-ofb", "AES-256-CFB", "aes-256-cfb", "holdInstructionCode", "Hold Instruction Code", "holdInstructionNone", "Hold Instruction None", "holdInstructionCallIssuer", "Hold Instruction Call Issuer", "holdInstructionReject", "Hold Instruction Reject", "pilot", "pilotAttributeType", "pilotAttributeSyntax", "pilotObjectClass", "pilotGroups", "iA5StringSyntax", "caseIgnoreIA5StringSyntax", "pilotObject", "pilotPerson", "account", "document", "room", "documentSeries", "rFC822localPart", "dNSDomain", "domainRelatedObject", "friendlyCountry", "simpleSecurityObject", "pilotOrganization", "pilotDSA", "qualityLabelledData", "userId", "textEncodedORAddress", "rfc822Mailbox", "favouriteDrink", "roomNumber", "photo", "userClass", "host", "manager", "documentIdentifier", "documentTitle", "documentVersion", "documentAuthor", "documentLocation", "homeTelephoneNumber", "secretary", "otherMailbox", "lastModifiedTime", "lastModifiedBy", "aRecord", "pilotAttributeType27", "mXRecord", "nSRecord", "sOARecord", "cNAMERecord", "associatedDomain", "associatedName", "homePostalAddress", "personalTitle", "mobileTelephoneNumber", "pagerTelephoneNumber", "friendlyCountryName", "organizationalStatus", "janetMailbox", "mailPreferenceOption", "buildingName", "dSAQuality", "singleLevelQuality", "subtreeMinimumQuality", "subtreeMaximumQuality", "personalSignature", "dITRedirect", "audio", "documentPublisher", "x500UniqueIdentifier", "mime-mhs", "MIME MHS", "mime-mhs-headings", "mime-mhs-bodies", "id-hex-partial-message", "id-hex-multipart-message", "generationQualifier", "pseudonym", "id-set", "Secure Electronic Transactions", "set-ctype", "content types", "set-msgExt", "message extensions", "set-attr", "set-policy", "set-certExt", "certificate extensions", "set-brand", "setct-PANData", "setct-PANToken", "setct-PANOnly", "setct-OIData", "setct-PI", "setct-PIData", "setct-PIDataUnsigned", "setct-HODInput", "setct-AuthResBaggage", "setct-AuthRevReqBaggage", "setct-AuthRevResBaggage", "setct-CapTokenSeq", "setct-PInitResData", "setct-PI-TBS", "setct-PResData", "setct-AuthReqTBS", "setct-AuthResTBS", "setct-AuthResTBSX", "setct-AuthTokenTBS", "setct-CapTokenData", "setct-CapTokenTBS", "setct-AcqCardCodeMsg", "setct-AuthRevReqTBS", "setct-AuthRevResData", "setct-AuthRevResTBS", "setct-CapReqTBS", "setct-CapReqTBSX", "setct-CapResData", "setct-CapRevReqTBS", "setct-CapRevReqTBSX", "setct-CapRevResData", "setct-CredReqTBS", "setct-CredReqTBSX", "setct-CredResData", "setct-CredRevReqTBS", "setct-CredRevReqTBSX", "setct-CredRevResData", "setct-PCertReqData", "setct-PCertResTBS", "setct-BatchAdminReqData", "setct-BatchAdminResData", "setct-CardCInitResTBS", "setct-MeAqCInitResTBS", "setct-RegFormResTBS", "setct-CertReqData", "setct-CertReqTBS", "setct-CertResData", "setct-CertInqReqTBS", "setct-ErrorTBS", "setct-PIDualSignedTBE", "setct-PIUnsignedTBE", "setct-AuthReqTBE", "setct-AuthResTBE", "setct-AuthResTBEX", "setct-AuthTokenTBE", "setct-CapTokenTBE", "setct-CapTokenTBEX", "setct-AcqCardCodeMsgTBE", "setct-AuthRevReqTBE", "setct-AuthRevResTBE", "setct-AuthRevResTBEB", "setct-CapReqTBE", "setct-CapReqTBEX", "setct-CapResTBE", "setct-CapRevReqTBE", "setct-CapRevReqTBEX", "setct-CapRevResTBE", "setct-CredReqTBE", "setct-CredReqTBEX", "setct-CredResTBE", "setct-CredRevReqTBE", "setct-CredRevReqTBEX", "setct-CredRevResTBE", "setct-BatchAdminReqTBE", "setct-BatchAdminResTBE", "setct-RegFormReqTBE", "setct-CertReqTBE", "setct-CertReqTBEX", "setct-CertResTBE", "setct-CRLNotificationTBS", "setct-CRLNotificationResTBS", "setct-BCIDistributionTBS", "setext-genCrypt", "generic cryptogram", "setext-miAuth", "merchant initiated auth", "setext-pinSecure", "setext-pinAny", "setext-track2", "setext-cv", "additional verification", "set-policy-root", "setCext-hashedRoot", "setCext-certType", "setCext-merchData", "setCext-cCertRequired", "setCext-tunneling", "setCext-setExt", "setCext-setQualf", "setCext-PGWYcapabilities", "setCext-TokenIdentifier", "setCext-Track2Data", "setCext-TokenType", "setCext-IssuerCapabilities", "setAttr-Cert", "setAttr-PGWYcap", "payment gateway capabilities", "setAttr-TokenType", "setAttr-IssCap", "issuer capabilities", "set-rootKeyThumb", "set-addPolicy", "setAttr-Token-EMV", "setAttr-Token-B0Prime", "setAttr-IssCap-CVM", "setAttr-IssCap-T2", "setAttr-IssCap-Sig", "setAttr-GenCryptgrm", "generate cryptogram", "setAttr-T2Enc", "encrypted track 2", "setAttr-T2cleartxt", "cleartext track 2", "setAttr-TokICCsig", "ICC or token signature", "setAttr-SecDevSig", "secure device signature", "set-brand-IATA-ATA", "set-brand-Diners", "set-brand-AmericanExpress", "set-brand-JCB", "set-brand-Visa", "set-brand-MasterCard", "set-brand-Novus", "DES-CDMF", "des-cdmf", "rsaOAEPEncryptionSET", "ITU-T", "itu-t", "JOINT-ISO-ITU-T", "joint-iso-itu-t", "international-organizations", "International Organizations", "msSmartcardLogin", "Microsoft Smartcardlogin", "msUPN", "Microsoft Universal Principal Name", "AES-128-CFB1", "aes-128-cfb1", "AES-192-CFB1", "aes-192-cfb1", "AES-256-CFB1", "aes-256-cfb1", "AES-128-CFB8", "aes-128-cfb8", "AES-192-CFB8", "aes-192-cfb8", "AES-256-CFB8", "aes-256-cfb8", "DES-CFB1", "des-cfb1", "DES-CFB8", "des-cfb8", "DES-EDE3-CFB1", "des-ede3-cfb1", "DES-EDE3-CFB8", "des-ede3-cfb8", "street", "streetAddress", "postalCode", "id-ppl", "proxyCertInfo", "Proxy Certificate Information", "id-ppl-anyLanguage", "Any language", "id-ppl-inheritAll", "Inherit all", "nameConstraints", "X509v3 Name Constraints", "id-ppl-independent", "Independent", "RSA-SHA256", "sha256WithRSAEncryption", "RSA-SHA384", "sha384WithRSAEncryption", "RSA-SHA512", "sha512WithRSAEncryption", "RSA-SHA224", "sha224WithRSAEncryption", "sha256", "sha384", "sha512", "sha224", "identified-organization", "certicom-arc", "wap-wsg", "id-characteristic-two-basis", "onBasis", "tpBasis", "ppBasis", "c2pnb163v1", "c2pnb163v2", "c2pnb163v3", "c2pnb176v1", "c2tnb191v1", "c2tnb191v2", "c2tnb191v3", "c2onb191v4", "c2onb191v5", "c2pnb208w1", "c2tnb239v1", "c2tnb239v2", "c2tnb239v3", "c2onb239v4", "c2onb239v5", "c2pnb272w1", "c2pnb304w1", "c2tnb359v1", "c2pnb368w1", "c2tnb431r1", "secp112r1", "secp112r2", "secp128r1", "secp128r2", "secp160k1", "secp160r1", "secp160r2", "secp192k1", "secp224k1", "secp224r1", "secp256k1", "secp384r1", "secp521r1", "sect113r1", "sect113r2", "sect131r1", "sect131r2", "sect163k1", "sect163r1", "sect163r2", "sect193r1", "sect193r2", "sect233k1", "sect233r1", "sect239k1", "sect283k1", "sect283r1", "sect409k1", "sect409r1", "sect571k1", "sect571r1", "wap-wsg-idm-ecid-wtls1", "wap-wsg-idm-ecid-wtls3", "wap-wsg-idm-ecid-wtls4", "wap-wsg-idm-ecid-wtls5", "wap-wsg-idm-ecid-wtls6", "wap-wsg-idm-ecid-wtls7", "wap-wsg-idm-ecid-wtls8", "wap-wsg-idm-ecid-wtls9", "wap-wsg-idm-ecid-wtls10", "wap-wsg-idm-ecid-wtls11", "wap-wsg-idm-ecid-wtls12", "anyPolicy", "X509v3 Any Policy", "policyMappings", "X509v3 Policy Mappings", "inhibitAnyPolicy", "X509v3 Inhibit Any Policy", "Oakley-EC2N-3", "ipsec3", "Oakley-EC2N-4", "ipsec4", "camellia-128-cbc", "CAMELLIA-192-CBC", "camellia-192-cbc", "camellia-256-cbc", "CAMELLIA-128-ECB", "camellia-128-ecb", "CAMELLIA-192-ECB", "camellia-192-ecb", "CAMELLIA-256-ECB", "camellia-256-ecb", "CAMELLIA-128-CFB", "camellia-128-cfb", "CAMELLIA-192-CFB", "camellia-192-cfb", "CAMELLIA-256-CFB", "camellia-256-cfb", "CAMELLIA-128-CFB1", "camellia-128-cfb1", "CAMELLIA-192-CFB1", "camellia-192-cfb1", "CAMELLIA-256-CFB1", "camellia-256-cfb1", "CAMELLIA-128-CFB8", "camellia-128-cfb8", "CAMELLIA-192-CFB8", "camellia-192-cfb8", "CAMELLIA-256-CFB8", "camellia-256-cfb8", "CAMELLIA-128-OFB", "camellia-128-ofb", "CAMELLIA-192-OFB", "camellia-192-ofb", "CAMELLIA-256-OFB", "camellia-256-ofb", "subjectDirectoryAttributes", "X509v3 Subject Directory Attributes", "issuingDistributionPoint", "X509v3 Issuing Distrubution Point", "certificateIssuer", "X509v3 Certificate Issuer", "KISA", "kisa", "SEED-ECB", "seed-ecb", "seed-cbc", "SEED-OFB", "seed-ofb", "SEED-CFB", "seed-cfb", "HMAC-MD5", "hmac-md5", "HMAC-SHA1", "hmac-sha1", "id-PasswordBasedMAC", "password based MAC", "id-DHBasedMac", "Diffie-Hellman based MAC", "id-it-suppLangTags", "caRepository", "CA Repository", "id-smime-ct-compressedData", "id-ct-asciiTextWithCRLF", "id-aes128-wrap", "id-aes192-wrap", "id-aes256-wrap", "ecdsa-with-Recommended", "ecdsa-with-Specified", "ecdsa-with-SHA224", "ecdsa-with-SHA256", "ecdsa-with-SHA384", "ecdsa-with-SHA512", "hmacWithMD5", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512", "dsa_with_SHA224", "dsa_with_SHA256", "whirlpool", "cryptopro", "cryptocom", "id-GostR3411-94-with-GostR3410-2001", "GOST R 34.11-94 with GOST R 34.10-2001", "id-GostR3411-94-with-GostR3410-94", "GOST R 34.11-94 with GOST R 34.10-94", "GOST R 34.11-94", "id-HMACGostR3411-94", "HMAC GOST 34.11-94", "GOST R 34.10-2001", "GOST R 34.10-94", "gost89", "GOST 28147-89", "GOST 28147-89 MAC", "prf-gostr3411-94", "GOST R 34.11-94 PRF", "id-GostR3410-2001DH", "GOST R 34.10-2001 DH", "id-GostR3410-94DH", "GOST R 34.10-94 DH", "id-Gost28147-89-CryptoPro-KeyMeshing", "id-Gost28147-89-None-KeyMeshing", "id-GostR3411-94-TestParamSet", "id-GostR3411-94-CryptoProParamSet", "id-Gost28147-89-TestParamSet", "id-Gost28147-89-CryptoPro-A-ParamSet", "id-Gost28147-89-CryptoPro-B-ParamSet", "id-Gost28147-89-CryptoPro-C-ParamSet", "id-Gost28147-89-CryptoPro-D-ParamSet", "id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet", "id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet", "id-Gost28147-89-CryptoPro-RIC-1-ParamSet", "id-GostR3410-94-TestParamSet", "id-GostR3410-94-CryptoPro-A-ParamSet", "id-GostR3410-94-CryptoPro-B-ParamSet", "id-GostR3410-94-CryptoPro-C-ParamSet", "id-GostR3410-94-CryptoPro-D-ParamSet", "id-GostR3410-94-CryptoPro-XchA-ParamSet", "id-GostR3410-94-CryptoPro-XchB-ParamSet", "id-GostR3410-94-CryptoPro-XchC-ParamSet", "id-GostR3410-2001-TestParamSet", "id-GostR3410-2001-CryptoPro-A-ParamSet", "id-GostR3410-2001-CryptoPro-B-ParamSet", "id-GostR3410-2001-CryptoPro-C-ParamSet", "id-GostR3410-2001-CryptoPro-XchA-ParamSet", "id-GostR3410-2001-CryptoPro-XchB-ParamSet", "id-GostR3410-94-a", "id-GostR3410-94-aBis", "id-GostR3410-94-b", "id-GostR3410-94-bBis", "id-Gost28147-89-cc", "GOST 28147-89 Cryptocom ParamSet", "gost94cc", "GOST 34.10-94 Cryptocom", "gost2001cc", "GOST 34.10-2001 Cryptocom", "id-GostR3411-94-with-GostR3410-94-cc", "GOST R 34.11-94 with GOST R 34.10-94 Cryptocom", "id-GostR3411-94-with-GostR3410-2001-cc", "GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom", "id-GostR3410-2001-ParamSet-cc", "GOST R 3410-2001 Parameter Set Cryptocom", "HMAC", "hmac", "LocalKeySet", "Microsoft Local Key set", "freshestCRL", "X509v3 Freshest CRL", "id-on-permanentIdentifier", "Permanent Identifier", "searchGuide", "businessCategory", "postalAddress", "postOfficeBox", "physicalDeliveryOfficeName", "telephoneNumber", "telexNumber", "teletexTerminalIdentifier", "facsimileTelephoneNumber", "x121Address", "internationaliSDNNumber", "registeredAddress", "destinationIndicator", "preferredDeliveryMethod", "presentationAddress", "supportedApplicationContext", "member", "owner", "roleOccupant", "seeAlso", "userPassword", "userCertificate", "cACertificate", "authorityRevocationList", "certificateRevocationList", "crossCertificatePair", "enhancedSearchGuide", "protocolInformation", "distinguishedName", "uniqueMember", "houseIdentifier", "supportedAlgorithms", "deltaRevocationList", "dmdName", "id-alg-PWRI-KEK", "CMAC", "cmac", "aes-128-gcm", "id-aes128-CCM", "aes-128-ccm", "id-aes128-wrap-pad", "id-aes192-GCM", "aes-192-gcm", "id-aes192-CCM", "aes-192-ccm", "id-aes192-wrap-pad", "aes-256-gcm", "id-aes256-CCM", "aes-256-ccm", "id-aes256-wrap-pad", "AES-128-CTR", "aes-128-ctr", "AES-192-CTR", "aes-192-ctr", "AES-256-CTR", "aes-256-ctr", "id-camellia128-wrap", "id-camellia192-wrap", "id-camellia256-wrap", "anyExtendedKeyUsage", "Any Extended Key Usage", "MGF1", "mgf1", "RSASSA-PSS", "rsassaPss", "AES-128-XTS", "aes-128-xts", "AES-256-XTS", "aes-256-xts", "rc4-hmac-md5", "aes-128-cbc-hmac-sha1", "AES-192-CBC-HMAC-SHA1", "aes-192-cbc-hmac-sha1", "aes-256-cbc-hmac-sha1", "RSAES-OAEP", "rsaesOaep", "dhpublicnumber", "X9.42 DH", "brainpoolP160r1", "brainpoolP160t1", "brainpoolP192r1", "brainpoolP192t1", "brainpoolP224r1", "brainpoolP224t1", "brainpoolP256r1", "brainpoolP256t1", "brainpoolP320r1", "brainpoolP320t1", "brainpoolP384r1", "brainpoolP384t1", "brainpoolP512r1", "brainpoolP512t1", "PSPECIFIED", "pSpecified", "dhSinglePass-stdDH-sha1kdf-scheme", "dhSinglePass-stdDH-sha224kdf-scheme", "dhSinglePass-stdDH-sha256kdf-scheme", "dhSinglePass-stdDH-sha384kdf-scheme", "dhSinglePass-stdDH-sha512kdf-scheme", "dhSinglePass-cofactorDH-sha1kdf-scheme", "dhSinglePass-cofactorDH-sha224kdf-scheme", "dhSinglePass-cofactorDH-sha256kdf-scheme", "dhSinglePass-cofactorDH-sha384kdf-scheme", "dhSinglePass-cofactorDH-sha512kdf-scheme", "dh-std-kdf", "dh-cofactor-kdf", "aes-128-cbc-hmac-sha256", "AES-192-CBC-HMAC-SHA256", "aes-192-cbc-hmac-sha256", "aes-256-cbc-hmac-sha256", "ct_precert_scts", "CT Precertificate SCTs", "ct_precert_poison", "CT Precertificate Poison", "ct_precert_signer", "CT Precertificate Signer", "ct_cert_scts", "CT Certificate SCTs", "jurisdictionL", "jurisdictionLocalityName", "jurisdictionST", "jurisdictionStateOrProvinceName", "jurisdictionC", "jurisdictionCountryName", "obj_lib.c", "obj_xref.c", "MD5 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "SHA1 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "hmac.c", "j <= (int)sizeof(ctx->key)", "]ru`clofi", "Big Number part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "bn_lib.c", "bn_ctx.c", "0123456789ABCDEF", "bn_print.c", "%09u", "bn(%d,%d)", "bn_shift.c", "EC part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "ec_lib.c", "ec_mult.c", "ec_curve.c", "B-163", "B-233", "B-283", "B-409", "B-571", "K-163", "K-233", "K-283", "K-409", "K-571", "P-192", "P-224", "P-384", "P-521", "SECG/WTLS curve over a 112 bit prime field", "SECG curve over a 112 bit prime field", "SECG curve over a 128 bit prime field", "SECG curve over a 160 bit prime field", "SECG/WTLS curve over a 160 bit prime field", "SECG curve over a 192 bit prime field", "SECG curve over a 224 bit prime field", "NIST/SECG curve over a 224 bit prime field", "SECG curve over a 256 bit prime field", "NIST/SECG curve over a 384 bit prime field", "NIST/SECG curve over a 521 bit prime field", "NIST/X9.62/SECG curve over a 192 bit prime field", "X9.62 curve over a 192 bit prime field", "X9.62 curve over a 239 bit prime field", "X9.62/SECG curve over a 256 bit prime field", "SECG curve over a 113 bit binary field", "SECG/WTLS curve over a 131 bit binary field", "SECG curve over a 131 bit binary field", "NIST/SECG/WTLS curve over a 163 bit binary field", "SECG curve over a 163 bit binary field", "NIST/SECG curve over a 163 bit binary field", "SECG curve over a 193 bit binary field", "NIST/SECG/WTLS curve over a 233 bit binary field", "SECG curve over a 239 bit binary field", "NIST/SECG curve over a 283 bit binary field", "NIST/SECG curve over a 409 bit binary field", "NIST/SECG curve over a 571 bit binary field", "X9.62 curve over a 163 bit binary field", "X9.62 curve over a 176 bit binary field", "X9.62 curve over a 191 bit binary field", "X9.62 curve over a 208 bit binary field", "X9.62 curve over a 239 bit binary field", "X9.62 curve over a 272 bit binary field", "X9.62 curve over a 304 bit binary field", "X9.62 curve over a 359 bit binary field", "X9.62 curve over a 368 bit binary field", "X9.62 curve over a 431 bit binary field", "WTLS curve over a 113 bit binary field", "WTLS curve over a 112 bit prime field", "WTLS curve over a 160 bit prime field", "WTLS curvs over a 224 bit prime field", "\n\tIPSec/IKE/Oakley curve #3 over a 155 bit binary field.\n\tNot suitable for ECDSA.\n\tQuestionable extension field!", "\n\tIPSec/IKE/Oakley curve #4 over a 185 bit binary field.\n\tNot suitable for ECDSA.\n\tQuestionable extension field!", "RFC 5639 curve over a 160 bit prime field", "RFC 5639 curve over a 192 bit prime field", "RFC 5639 curve over a 224 bit prime field", "RFC 5639 curve over a 256 bit prime field", "RFC 5639 curve over a 320 bit prime field", "RFC 5639 curve over a 384 bit prime field", "RFC 5639 curve over a 512 bit prime field", "ec_key.c", "ec_oct.c", "RSA part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "rsa_lib.c", "rsa_sign.c", "RSA_OAEP_PARAMS", "hashFunc", "maskGenFunc", "pSourceFunc", "RSA_PSS_PARAMS", "hashAlgorithm", "maskGenAlgorithm", "saltLength", "trailerField", "dmp1", "dmq1", "iqmp", "rsa_crpt.c", "dsa_asn1.c", "pub_key", "priv_key", "DSA_SIG", "dsa_sign.c", "dh_key.c", "OpenSSL DH Method", "Diffie-Hellman part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "dh_lib.c", "dh_ameth.c", "%s: (%d bit)\n", "DH Private-Key", "private-key:", "public-key:", "prime:", "generator:", "subgroup order:", "subgroup factor:", "seed:", "%02x%s", "counter:", "recommended-private-length: %d bits\n", "DH Parameters", "DH Public-Key", "OpenSSL X9.42 DH method", "OpenSSL PKCS#3 DH method", "eng_init.c", "eng_pkey.c", "buffer.c", "buf_str.c", "bio_lib.c", "bss_mem.c", "memory buffer", "bss_file.c", "fopen('", "fflush()", "FILE pointer", "socket", "bf_buff.c", "IFFFFFFFFFFFFFFFFFFFFFFFFFFFOFFFAFFFFU", "b_print.c", "0123456789abcdef", "0123456789ABCDEF", "<NULL>", "0123456789", "doapr()", "Stack part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "stack.c", "lhash part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "lhash.c", "err.c", "int_thread_get (err.c)", "int_err_get (err.c)", "lib(%lu)", "func(%lu)", "reason(%lu)", "error:%08lX:%s:%s:%s", "system lib", "BN lib", "RSA lib", "DH lib", "EVP lib", "BUF lib", "OBJ lib", "PEM lib", "DSA lib", "X509 lib", "ASN1 lib", "CONF lib", "CRYPTO lib", "EC lib", "SSL lib", "BIO lib", "PKCS7 lib", "X509V3 lib", "PKCS12 lib", "RAND lib", "DSO lib", "ENGINE lib", "OCSP lib", "TS lib", "nested asn1 error", "bad asn1 object header", "bad get asn1 object call", "expecting an asn1 sequence", "asn1 length mismatch", "missing asn1 eos", "malloc failure", "called a function you should not call", "passed a null parameter", "called a function that was disabled at compile-time", "fopen", "connect", "ioctlsocket", "bind", "listen", "accept", "opendir", "fread", "fflush", "unknown library", "system library", "bignum routines", "rsa routines", "Diffie-Hellman routines", "digital envelope routines", "memory buffer routines", "object identifier routines", "PEM routines", "dsa routines", "x509 certificate routines", "asn1 encoding routines", "configuration file routines", "common libcrypto routines", "elliptic curve routines", "SSL routines", "BIO routines", "PKCS7 routines", "X509 V3 routines", "PKCS12 routines", "random number generator", "DSO support routines", "time stamp routines", "engine routines", "OCSP routines", "FIPS routines", "CMS routines", "HMAC routines", "digest.c", "ctx->digest->md_size <= EVP_MAX_MD_SIZE", "EVP part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "evp_enc.c", "bl <= (int)sizeof(ctx->buf)", "b <= sizeof(ctx->buf)", "b <= sizeof(ctx->final)", "ctx->cipher->block_size == 1 || ctx->cipher->block_size == 8 || ctx->cipher->block_size == 16", "EVP_CIPHER_CTX_iv_length(ctx) <= (int)sizeof(ctx->iv)", "e_camellia.c", "e_aes.c", "e_rc2.c", "l <= sizeof(iv)", "p_sign.c", "p_verify.c", "p_lib.c", "%s algorithm \"%s\" unsupported\n", "Public Key", "Private Key", "aes iv setup failed", "aes key setup failed", "asn1 lib", "bad block length", "bad decrypt", "bad key length", "bn decode error", "bn pubkey error", "buffer too small", "camellia key setup failed", "cipher parameter error", "command not supported", "ctrl not implemented", "ctrl operation not implemented", "data not multiple of block length", "different key types", "different parameters", "disabled for fips", "encode error", "error loading section", "error setting fips mode", "evp pbe cipherinit error", "expecting an rsa key", "expecting a dh key", "expecting a dsa key", "expecting a ecdsa key", "expecting a ec key", "fips mode not supported", "initialization error", "input not initialized", "invalid digest", "invalid fips mode", "invalid key", "invalid key length", "invalid operation", "iv too large", "keygen failure", "message digest is null", "method not supported", "missing parameters", "no cipher set", "no default digest", "no digest set", "no dsa parameters", "no key set", "no operation set", "no sign function configured", "no verify function configured", "operation not supported for this keytype", "operaton not initialized", "pkcs8 unknown broken type", "private key decode error", "private key encode error", "unknown cipher", "unknown option", "unknown pbe algorithm", "unsuported number of rounds", "unsupported algorithm", "unsupported keylength", "unsupported key derivation function", "unsupported key size", "unsupported prf", "unsupported private key algorithm", "unsupported salt type", "wrap mode not allowed", "wrong final block length", "wrong public key type", "AESNI_INIT_KEY", "AESNI_XTS_CIPHER", "AES_INIT_KEY", "AES_T4_INIT_KEY", "AES_XTS", "AES_XTS_CIPHER", "ALG_MODULE_INIT", "CAMELLIA_INIT_KEY", "CMAC_INIT", "CMLL_T4_INIT_KEY", "D2I_PKEY", "DO_SIGVER_INIT", "DSAPKEY2PKCS8", "DSA_PKEY2PKCS8", "ECDSA_PKEY2PKCS8", "ECKEY_PKEY2PKCS8", "EVP_CipherInit_ex", "EVP_CIPHER_CTX_copy", "EVP_CIPHER_CTX_ctrl", "EVP_CIPHER_CTX_set_key_length", "EVP_DecryptFinal_ex", "EVP_DigestInit_ex", "EVP_EncryptFinal_ex", "EVP_MD_CTX_copy_ex", "EVP_MD_size", "EVP_OpenInit", "EVP_PBE_alg_add", "EVP_PBE_alg_add_type", "EVP_PBE_CipherInit", "EVP_PKCS82PKEY", "EVP_PKCS82PKEY_BROKEN", "EVP_PKEY2PKCS8_broken", "EVP_PKEY_copy_parameters", "EVP_PKEY_CTX_ctrl", "EVP_PKEY_CTX_ctrl_str", "EVP_PKEY_CTX_dup", "EVP_PKEY_decrypt", "EVP_PKEY_decrypt_init", "EVP_PKEY_decrypt_old", "EVP_PKEY_derive", "EVP_PKEY_derive_init", "EVP_PKEY_derive_set_peer", "EVP_PKEY_encrypt", "EVP_PKEY_encrypt_init", "EVP_PKEY_encrypt_old", "EVP_PKEY_get1_DH", "EVP_PKEY_get1_DSA", "EVP_PKEY_GET1_ECDSA", "EVP_PKEY_get1_EC_KEY", "EVP_PKEY_get1_RSA", "EVP_PKEY_keygen", "EVP_PKEY_keygen_init", "EVP_PKEY_new", "EVP_PKEY_paramgen", "EVP_PKEY_paramgen_init", "EVP_PKEY_sign", "EVP_PKEY_sign_init", "EVP_PKEY_verify", "EVP_PKEY_verify_init", "EVP_PKEY_verify_recover", "EVP_PKEY_verify_recover_init", "EVP_RIJNDAEL", "EVP_SignFinal", "EVP_VerifyFinal", "FIPS_CIPHERINIT", "FIPS_CIPHER_CTX_COPY", "FIPS_CIPHER_CTX_CTRL", "FIPS_CIPHER_CTX_SET_KEY_LENGTH", "FIPS_DIGESTINIT", "FIPS_MD_CTX_COPY", "HMAC_Init_ex", "INT_CTX_NEW", "PKCS5_PBE_keyivgen", "PKCS5_v2_PBE_keyivgen", "PKCS5_V2_PBKDF2_KEYIVGEN", "PKCS8_set_broken", "PKEY_SET_TYPE", "RC2_MAGIC_TO_METH", "RC5_CTRL", "DESX", "desx", "DES3", "des3", "idea", "seed", "blowfish", "CAST", "cast", "CAST-cbc", "cast-cbc", "aes128", "AES192", "aes192", "aes256", "camellia128", "CAMELLIA192", "camellia192", "camellia256", "ripemd", "rmd160", "evp_lib.c", "l <= sizeof(c->iv)", "j <= sizeof(c->iv)", "evp_pbe.c", "TYPE=", "p5_crpt.c", "EVP_CIPHER_key_length(cipher) <= (int)sizeof(md_tmp)", "EVP_CIPHER_iv_length(cipher) <= 16", "p5_crpt2.c", "keylen <= sizeof(key)", "pmeth_lib.c", "pmeth_fn.c", "pmeth_gn.c", "m_sigver.c", "a_object.c", "<INVALID>", "a_int.c", "a_dup.c", "X509_ALGORS", "algorithms", "X509_ALGOR", "x_pubkey.c", "X509_PUBKEY", "public_key", "X509_SIG", "X509_ATTRIBUTE", "value.set", "value.single", "BIGNUM", "%ld\n", "x_long.c", "ZLONG", "LONG", "x_name.c", "X509_NAME", "X509_NAME_INTERNAL", "X509_NAME_ENTRIES", "RDNS", "X509_NAME_ENTRY", "x_x509.c", "cert_info", "sig_alg", "X509_CINF", "issuer", "validity", "subject", "issuerUID", "subjectUID", "X509_CERT_PAIR", "forward", "reverse", "X509_CERT_AUX", "reject", "alias", "other", "d2i_pr.c", " (Negative)", "%s 0\n", "%s %s%lu (%s0x%lx)\n", "\njIB:4j", "tasn_new.c", "5+IC", "tasn_enc.c", "tasn_dec.c", "Field=", ", Type=", "Type=", "tasn_utl.c", "ASN1_SET_ANY", "ASN1_SEQUENCE_ANY", "ASN1_OCTET_STRING_NDEF", "ASN1_FBOOLEAN", "ASN1_TBOOLEAN", "ASN1_BOOLEAN", "DIRECTORYSTRING", "DISPLAYTEXT", "ASN1_PRINTABLE", "ASN1_SEQUENCE", "ASN1_ANY", "ASN1_BMPSTRING", "ASN1_UNIVERSALSTRING", "ASN1_VISIBLESTRING", "ASN1_GENERALIZEDTIME", "ASN1_UTCTIME", "ASN1_GENERALSTRING", "ASN1_IA5STRING", "ASN1_T61STRING", "ASN1_PRINTABLESTRING", "ASN1_UTF8STRING", "ASN1_OBJECT", "ASN1_NULL", "ASN1_OCTET_STRING", "ASN1_BIT_STRING", "ASN1_ENUMERATED", "ASN1_INTEGER", "ameth_lib.c", "X509_EXTENSIONS", "Extension", "X509_EXTENSION", "critical", "ASN.1 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "asn1_lib.c", "address=", " offset=", "adding object", "asn1 parse error", "asn1 sig parse error", "aux error", "bad class", "bad object header", "bad password read", "bad tag", "bmpstring is wrong length", "boolean is wrong length", "cipher has no object identifier", "context not initialised", "data is wrong", "decoding error", "depth exceeded", "digest and key type not supported", "error getting time", "error parsing set element", "error setting cipher params", "expecting an integer", "expecting an object", "expecting a boolean", "expecting a time", "explicit length mismatch", "explicit tag not constructed", "field missing", "first num too large", "header too long", "illegal bitstring format", "illegal boolean", "illegal characters", "illegal format", "illegal hex", "illegal implicit tag", "illegal integer", "illegal nested tagging", "illegal null", "illegal null value", "illegal object", "illegal optional any", "illegal options on item template", "illegal tagged any", "illegal time value", "integer not ascii format", "integer too large for long", "invalid bit string bits left", "invalid bmpstring length", "invalid digit", "invalid mime type", "invalid modifier", "invalid number", "invalid object encoding", "invalid separator", "invalid time format", "invalid universalstring length", "invalid utf8string", "length error", "list error", "mime no content type", "mime parse error", "mime sig parse error", "missing eoc", "missing second number", "missing value", "mstring not universal", "mstring wrong tag", "nested asn1 string", "nested too deep", "non hex characters", "not enough data", "no content type", "no matching choice type", "no multipart body failure", "no multipart boundary", "no sig content type", "null is wrong length", "object not ascii format", "odd number of chars", "private key header missing", "second number too large", "sequence length mismatch", "sequence not constructed", "sequence or set needs config", "short line", "sig invalid mime type", "streaming not supported", "string too long", "string too short", "tag value too high", "the asn1 object identifier is not known for this md", "time not ascii format", "type not constructed", "type not primitive", "unable to decode rsa key", "unable to decode rsa private key", "unexpected eoc", "universalstring is wrong length", "unknown format", "unknown message digest algorithm", "unknown object type", "unknown public key type", "unknown signature algorithm", "unknown tag", "unsupported any defined by type", "unsupported encryption algorithm", "unsupported public key type", "unsupported type", "wrong type", "a2d_ASN1_OBJECT", "a2i_ASN1_ENUMERATED", "a2i_ASN1_INTEGER", "a2i_ASN1_STRING", "APPEND_EXP", "ASN1_BIT_STRING_set_bit", "ASN1_CB", "ASN1_CHECK_TLEN", "ASN1_COLLATE_PRIMITIVE", "ASN1_COLLECT", "ASN1_D2I_EX_PRIMITIVE", "ASN1_d2i_fp", "ASN1_D2I_READ_BIO", "ASN1_digest", "ASN1_DO_ADB", "ASN1_dup", "ASN1_ENUMERATED_set", "ASN1_ENUMERATED_to_BN", "ASN1_EX_C2I", "ASN1_FIND_END", "ASN1_GENERALIZEDTIME_adj", "ASN1_GENERALIZEDTIME_set", "ASN1_generate_v3", "ASN1_get_object", "ASN1_HEADER_NEW", "ASN1_i2d_bio", "ASN1_i2d_fp", "ASN1_INTEGER_set", "ASN1_INTEGER_to_BN", "ASN1_item_d2i_fp", "ASN1_item_dup", "ASN1_ITEM_EX_COMBINE_NEW", "ASN1_ITEM_EX_D2I", "ASN1_item_i2d_bio", "ASN1_item_i2d_fp", "ASN1_item_pack", "ASN1_item_sign", "ASN1_item_sign_ctx", "ASN1_item_unpack", "ASN1_item_verify", "ASN1_mbstring_ncopy", "ASN1_OBJECT_new", "ASN1_OUTPUT_DATA", "ASN1_pack_string", "ASN1_PCTX_new", "ASN1_PKCS5_PBE_SET", "ASN1_seq_pack", "ASN1_seq_unpack", "ASN1_sign", "ASN1_STR2TYPE", "ASN1_STRING_set", "ASN1_STRING_TABLE_add", "ASN1_STRING_type_new", "ASN1_TEMPLATE_EX_D2I", "ASN1_TEMPLATE_NEW", "ASN1_TEMPLATE_NOEXP_D2I", "ASN1_TIME_adj", "ASN1_TIME_set", "ASN1_TYPE_get_int_octetstring", "ASN1_TYPE_get_octetstring", "ASN1_unpack_string", "ASN1_UTCTIME_adj", "ASN1_UTCTIME_set", "ASN1_verify", "B64_READ_ASN1", "B64_WRITE_ASN1", "BIO_new_NDEF", "BITSTR_CB", "BN_to_ASN1_ENUMERATED", "BN_to_ASN1_INTEGER", "c2i_ASN1_BIT_STRING", "c2i_ASN1_INTEGER", "c2i_ASN1_OBJECT", "COLLECT_DATA", "D2I_ASN1_BIT_STRING", "d2i_ASN1_BOOLEAN", "d2i_ASN1_bytes", "D2I_ASN1_GENERALIZEDTIME", "D2I_ASN1_HEADER", "D2I_ASN1_INTEGER", "d2i_ASN1_OBJECT", "d2i_ASN1_SET", "d2i_ASN1_type_bytes", "d2i_ASN1_UINTEGER", "D2I_ASN1_UTCTIME", "d2i_AutoPrivateKey", "d2i_Netscape_RSA", "D2I_NETSCAPE_RSA_2", "d2i_PrivateKey", "d2i_PublicKey", "d2i_RSA_NET", "D2I_RSA_NET_2", "D2I_X509", "D2I_X509_CINF", "d2i_X509_PKEY", "DO_BUF", "i2d_ASN1_bio_stream", "i2d_ASN1_SET", "I2D_ASN1_TIME", "i2d_DSA_PUBKEY", "i2d_EC_PUBKEY", "i2d_PrivateKey", "i2d_PublicKey", "i2d_RSA_NET", "i2d_RSA_PUBKEY", "LONG_C2I", "OID_MODULE_INIT", "PARSE_TAGGING", "PKCS5_pbe2_set_iv", "PKCS5_pbe_set", "PKCS5_pbe_set0_algor", "PKCS5_pbkdf2_set", "SMIME_read_ASN1", "SMIME_text", "X509_CINF_NEW", "X509_CRL_add0_revoked", "X509_INFO_new", "X509_NAME_ENCODE", "X509_NAME_EX_D2I", "X509_NAME_EX_NEW", "X509_NEW", "X509_PKEY_new", "evp_asn1.c", "p5_pbe.c", "PBEPARAM", "salt", "iter", "p5_pbev2.c", "PBKDF2PARAM", "keylength", "PBE2PARAM", "keyfunc", "encryption", "PKCS8_PRIV_KEY_INFO", "pkeyalg", "attributes", "0123456789ABCDEF", "PEM part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "Enter PEM pass phrase:", "pem_lib.c", "ENCRYPTED", "MIC-CLEAR", "MIC-ONLY", "BAD-TYPE", "Proc-Type: 4,", "DEK-Info: ", "Proc-Type: ", "-----BEGIN ", "-----\n", "-----END ", "enc->iv_len <= (int)sizeof(iv)", "strlen(objstr) + 23 + 2 * enc->iv_len + 13 <= sizeof(buf)", "Expecting: ", "ANY PRIVATE KEY", "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", "X9.42 DH PARAMETERS", "DH PARAMETERS", "X509 CERTIFICATE", "NEW CERTIFICATE REQUEST", "CERTIFICATE REQUEST", "TRUSTED CERTIFICATE", "PKCS7", "PKCS #7 SIGNED DATA", "X509 CRL", "RSA PRIVATE KEY", "RSA PUBLIC KEY", "PUBLIC KEY", "DSA PRIVATE KEY", "DSA PARAMETERS", "EC PARAMETERS", "EC PRIVATE KEY", "bad base64 decode", "bad end line", "bad iv chars", "bad magic number", "bad version number", "bio write failure", "cipher is null", "error converting private key", "expecting private key blob", "expecting public key blob", "inconsistent header", "keyblob header parse error", "keyblob too short", "not dek info", "not encrypted", "not proc type", "no start line", "problems getting password", "public key no rsa", "pvk data too short", "pvk too short", "read key", "short header", "unsupported encryption", "unsupported key components", "B2I_DSS", "b2i_PVK_bio", "B2I_RSA", "CHECK_BITLEN_DSA", "CHECK_BITLEN_RSA", "d2i_PKCS8PrivateKey_bio", "d2i_PKCS8PrivateKey_fp", "DO_B2I", "DO_B2I_BIO", "DO_BLOB_HEADER", "DO_PK8PKEY", "DO_PK8PKEY_FP", "DO_PVK_BODY", "DO_PVK_HEADER", "I2B_PVK", "i2b_PVK_bio", "LOAD_IV", "PEM_ASN1_read", "PEM_ASN1_read_bio", "PEM_ASN1_write", "PEM_ASN1_write_bio", "PEM_def_callback", "PEM_do_header", "PEM_F_PEM_WRITE_PKCS8PRIVATEKEY", "PEM_get_EVP_CIPHER_INFO", "PEM_PK8PKEY", "PEM_read", "PEM_read_bio", "PEM_READ_BIO_DHPARAMS", "PEM_read_bio_Parameters", "PEM_READ_BIO_PRIVATEKEY", "PEM_READ_DHPARAMS", "PEM_READ_PRIVATEKEY", "PEM_SealFinal", "PEM_SealInit", "PEM_SignFinal", "PEM_write", "PEM_write_bio", "PEM_WRITE_PRIVATEKEY", "PEM_X509_INFO_read", "PEM_X509_INFO_read_bio", "PEM_X509_INFO_write_bio", "CERTIFICATE PAIR", "pem_oth.c", "pem_pkey.c", "%s PRIVATE KEY", "%s PARAMETERS", "x509_cmp.c", "0123456789ABCDEF", "NO X509_NAME", "x509_obj.c", "X.509 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "x509_vfy.c", "OPENSSL_ALLOW_PROXY_CERTS", "akid mismatch", "bad x509 filetype", "base64 decode error", "cant check dh key", "cert already in hash table", "crl already delta", "crl verify failure", "err asn1 lib", "idp mismatch", "invalid directory", "invalid field name", "key type mismatch", "key values mismatch", "loading cert dir", "loading defaults", "name too long", "newer crl not newer", "no cert set for us to verify", "no crl number", "public key decode error", "public key encode error", "should retry", "unable to find parameters in chain", "unable to get certs public key", "unknown key type", "unknown nid", "unknown purpose id", "unknown trust id", "wrong lookup type", "ADD_CERT_DIR", "BY_FILE_CTRL", "CHECK_NAME_CONSTRAINTS", "CHECK_POLICY", "DIR_CTRL", "GET_CERT_BY_SUBJECT", "NETSCAPE_SPKI_b64_decode", "NETSCAPE_SPKI_b64_encode", "X509at_add1_attr", "X509v3_add_ext", "X509_ATTRIBUTE_create_by_NID", "X509_ATTRIBUTE_create_by_OBJ", "X509_ATTRIBUTE_create_by_txt", "X509_ATTRIBUTE_get0_data", "X509_ATTRIBUTE_set1_data", "X509_check_private_key", "X509_CRL_diff", "X509_CRL_print_fp", "X509_EXTENSION_create_by_NID", "X509_EXTENSION_create_by_OBJ", "X509_get_pubkey_parameters", "X509_load_cert_crl_file", "X509_load_cert_file", "X509_load_crl_file", "X509_NAME_add_entry", "X509_NAME_ENTRY_create_by_NID", "X509_NAME_ENTRY_create_by_txt", "X509_NAME_ENTRY_set_object", "X509_NAME_oneline", "X509_NAME_print", "X509_print_ex_fp", "X509_PUBKEY_get", "X509_PUBKEY_set", "X509_REQ_check_private_key", "X509_REQ_print_ex", "X509_REQ_print_fp", "X509_REQ_to_X509", "X509_STORE_add_cert", "X509_STORE_add_crl", "X509_STORE_CTX_get1_issuer", "X509_STORE_CTX_init", "X509_STORE_CTX_new", "X509_STORE_CTX_purpose_inherit", "X509_to_X509_REQ", "X509_TRUST_add", "X509_TRUST_set", "X509_verify_cert", "x509name.c", "name=", "x509_v3.c", "x509_lu.c", "unable to get issuer certificate", "unable to get certificate CRL", "unable to decrypt certificate's signature", "unable to decrypt CRL's signature", "unable to decode issuer public key", "certificate signature failure", "CRL signature failure", "certificate is not yet valid", "CRL is not yet valid", "certificate has expired", "CRL has expired", "format error in certificate's notBefore field", "format error in certificate's notAfter field", "format error in CRL's lastUpdate field", "format error in CRL's nextUpdate field", "out of memory", "self signed certificate", "self signed certificate in certificate chain", "unable to get local issuer certificate", "unable to verify the first certificate", "certificate chain too long", "invalid CA certificate", "invalid non-CA certificate (has CA markings)", "path length constraint exceeded", "proxy path length constraint exceeded", "proxy certificates not allowed, please set the appropriate flag", "unsupported certificate purpose", "certificate not trusted", "certificate rejected", "application verification failure", "subject issuer mismatch", "authority and subject key identifier mismatch", "authority and issuer serial number mismatch", "key usage does not include certificate signing", "unable to get CRL issuer certificate", "unhandled critical extension", "key usage does not include CRL signing", "key usage does not include digital signature", "unhandled critical CRL extension", "invalid or inconsistent certificate extension", "invalid or inconsistent certificate policy extension", "no explicit policy", "Different CRL scope", "Unsupported extension feature", "RFC 3779 resource not subset of parent's resources", "permitted subtree violation", "excluded subtree violation", "name constraints minimum and maximum not supported", "unsupported name constraint type", "unsupported or invalid name constraint syntax", "unsupported or invalid name syntax", "CRL path validation error", "Suite B: certificate version invalid", "Suite B: invalid public key algorithm", "Suite B: invalid ECC curve", "Suite B: invalid signature algorithm", "Suite B: curve not allowed for this LOS", "Suite B: cannot sign P-384 with P-256", "Hostname mismatch", "Email address mismatch", "IP address mismatch", "Invalid certificate verification context", "Issuer certificate lookup error", "proxy subject name violation", "error number %ld", "x509_trs.c", "compatible", "SSL Client", "SSL Server", "S/MIME email", "Object Signer", "OCSP responder", "OCSP request", "TSA server", "by_file.c", "Load file into cache", "by_dir.c", "%s%c%08lx.%s%d", "Load certs from files in a directory", "x509_vpm.c", "smime_sign", "v3_lib.c", "0123456789ABCDEF", "%d.%d.%d.%d", "xn--", "v3_utl.c", "TRUE", "FALSE", "true", "false", "section:", ",name:", ",value:", "bad ip address", "bad object", "bn dec2bn error", "bn to asn1 integer error", "cannot find free function", "dirname error", "distpoint already set", "duplicate zone id", "error converting zone", "error creating extension", "error in extension", "expected a section name", "extension exists", "extension name error", "extension not found", "extension setting not supported", "extension value error", "illegal empty extension", "illegal hex digit", "incorrect policy syntax tag", "invalid asnumber", "invalid asrange", "invalid boolean string", "invalid extension string", "invalid inheritance", "invalid ipaddress", "invalid multiple rdns", "invalid name", "invalid null argument", "invalid null name", "invalid null value", "invalid numbers", "invalid object identifier", "invalid option", "invalid policy identifier", "invalid proxy policy setting", "invalid safi", "invalid section", "invalid syntax", "issuer decode error", "need organization and numbers", "no config database", "no issuer certificate", "no issuer details", "no policy identifier", "no proxy cert policy language defined", "no public key", "no subject details", "odd number of digits", "operation not defined", "othername error", "policy language already defined", "policy path length", "policy path length already defined", "policy syntax not currently supported", "policy when proxy language requires no policy", "section not found", "unable to get issuer details", "unable to get issuer keyid", "unknown bit string argument", "unknown extension", "unknown extension name", "unsupported option", "user too long", "a2i_GENERAL_NAME", "ASIDENTIFIERCHOICE_CANONIZE", "ASIDENTIFIERCHOICE_IS_CANONICAL", "COPY_EMAIL", "COPY_ISSUER", "DO_DIRNAME", "DO_EXT_CONF", "DO_EXT_I2D", "DO_EXT_NCONF", "DO_I2V_NAME_CONSTRAINTS", "GNAMES_FROM_SECTNAME", "hex_to_string", "i2s_ASN1_ENUMERATED", "I2S_ASN1_IA5STRING", "i2s_ASN1_INTEGER", "I2V_AUTHORITY_INFO_ACCESS", "NOTICE_SECTION", "NREF_NOS", "POLICY_SECTION", "PROCESS_PCI_VALUE", "R2I_CERTPOL", "R2I_PCI", "S2I_ASN1_IA5STRING", "s2i_ASN1_INTEGER", "s2i_ASN1_OCTET_STRING", "S2I_ASN1_SKEY_ID", "S2I_SKEY_ID", "SET_DIST_POINT_NAME", "string_to_hex", "SXNET_add_id_asc", "SXNET_add_id_INTEGER", "SXNET_add_id_ulong", "SXNET_get_id_asc", "SXNET_get_id_ulong", "V2I_ASIDENTIFIERS", "v2i_ASN1_BIT_STRING", "V2I_AUTHORITY_INFO_ACCESS", "V2I_AUTHORITY_KEYID", "V2I_BASIC_CONSTRAINTS", "V2I_CRLD", "V2I_EXTENDED_KEY_USAGE", "v2i_GENERAL_NAMES", "v2i_GENERAL_NAME_ex", "V2I_IDP", "V2I_IPADDRBLOCKS", "V2I_ISSUER_ALT", "V2I_NAME_CONSTRAINTS", "V2I_POLICY_CONSTRAINTS", "V2I_POLICY_MAPPINGS", "V2I_SUBJECT_ALT", "V3_ADDR_VALIDATE_PATH_INTERNAL", "V3_GENERIC_EXTENSION", "X509V3_add1_i2d", "X509V3_add_value", "X509V3_EXT_add", "X509V3_EXT_add_alias", "X509V3_EXT_conf", "X509V3_EXT_free", "X509V3_EXT_i2d", "X509V3_EXT_nconf", "X509V3_get_section", "X509V3_get_string", "X509V3_get_value_bool", "X509V3_parse_list", "X509_PURPOSE_add", "X509_PURPOSE_set", "GENERAL_NAMES", "GeneralNames", "GENERAL_NAME", "d.otherName", "d.rfc822Name", "d.dNSName", "d.x400Address", "d.directoryName", "d.ediPartyName", "d.uniformResourceIdentifier", "d.iPAddress", "d.registeredID", "EDIPARTYNAME", "nameAssigner", "partyName", "OTHERNAME", "type_id", "othername", "<unsupported>", "X400Name", "EdiPartyName", "email", "DirName", "IP Address", "<invalid>", "Registered ID", "othername:<unsupported>", "X400Name:<unsupported>", "EdiPartyName:<unsupported>", "email:%s", "DNS:%s", "URI:%s", "DirName: ", "IP Address:%d.%d.%d.%d", "IP Address:<invalid>", "v3_alt.c", "value=", "section=", "dirName", "otherName", "copy", "move", "v3_skey.c", "hash", "always", "v3_akey.c", "Not Before: ", "Not After: ", "PKEY_USAGE_PERIOD", "notBefore", "notAfter", "Unspecified", "unspecified", "Key Compromise", "keyCompromise", "CA Compromise", "CACompromise", "Affiliation Changed", "affiliationChanged", "Superseded", "superseded", "Cessation Of Operation", "cessationOfOperation", "Certificate Hold", "certificateHold", "Remove From CRL", "removeFromCRL", "Privilege Withdrawn", "privilegeWithdrawn", "AA Compromise", "AACompromise", "%*sVersion: %ld (0x%lX)", "\n%*sZone: %s, User: ", "v3_sxnet.c", "SXNET", "SXNETID", "zone", "user", "%*sCPS: %s\n", "%*sUser Notice:\n", "%*sOrganization: %s\n", "%*sNumber%s: ", "(null)", "%*sExplicit Text: %s\n", "%*sUnknown Qualifier: ", "%*sPolicy: ", "v3_cpols.c", "ia5org", "policyIdentifier", "userNotice", "explicitText", "organization", "noticeNumbers", "Critical", "Non Critical", "%*s%s\n", "%*sNo Qualifiers\n", "NOTICEREF", "noticenos", "USERNOTICE", "noticeref", "exptext", "POLICYQUALINFO", "pqualid", "d.cpsuri", "d.usernotice", "d.other", "POLICYINFO", "policyid", "qualifiers", "CERTIFICATEPOLICIES", "%*sFull Name:\n", "%*sRelative Name:\n%*s", "<EMPTY>\n", "%*sCRL Issuer:\n", "%*s%s:\n%*s", "Reasons", "%*sOnly User Certificates\n", "%*sOnly CA Certificates\n", "%*sIndirect CRL\n", "%*sOnly Attribute Certificates\n", "%*s<EMPTY>\n", "Only Some Reasons", "fullname", "v3_crld.c", "relativename", "CRLissuer", "onlyCA", "onlyAA", "indirectCRL", "onlysomereasons", "onlyuser", "ISSUING_DIST_POINT", "distpoint", "onlyattr", "CRL_DIST_POINTS", "CRLDistributionPoints", "DIST_POINT_NAME", "name.fullname", "name.relativename", "Unused", "unused", "v3_purp.c", "SSL client", "sslclient", "SSL server", "sslserver", "Netscape SSL server", "nssslserver", "S/MIME signing", "smimesign", "S/MIME encryption", "smimeencrypt", "CRL signing", "crlsign", "Any Purpose", "OCSP helper", "ocsphelper", "Time Stamp signing", "timestampsign", "v3_info.c", "AUTHORITY_INFO_ACCESS", "ACCESS_DESCRIPTION", "location", "%*scrlUrl: ", "%*scrlNum: ", "%*scrlTime: ", "v3_ocsp.c", "%*sIssuer: ", "AUTHORITY_KEYID", "v3_pmaps.c", "POLICY_MAPPINGS", "POLICY_MAPPING", "issuerDomainPolicy", "subjectDomainPolicy", "Require Explicit Policy", "Inhibit Policy Mapping", "v3_pcons.c", "requireExplicitPolicy", "inhibitPolicyMapping", "POLICY_CONSTRAINTS", "%*s%s:\n", "%d.%d.%d.%d/%d.%d.%d.%d", "Permitted", "Excluded", "permitted", "excluded", "v3_ncons.c", "NAME_CONSTRAINTS", "permittedSubtrees", "excludedSubtrees", "GENERAL_SUBTREE", "base", "minimum", "maximum", "PROXY_CERT_INFO_EXTENSION", "pcPathLengthConstraint", "proxyPolicy", "PROXY_POLICY", "policyLanguage", "language", "v3_pci.c", "pathlen", "hex:", "file:", "text:", "%*sPath Length Constraint: ", "infinite", "%*sPolicy Language: ", "%*sPolicy Text: %s\n", "pcy_cache.c", "pcy_data.c", "pcy_tree.c", "%*sSigned Certificate Timestamp:", "\n%*sVersion   : ", "v1(0)", "\n%*sLog ID    : ", "\n%*sTimestamp : ", "%.14s.%03dZ", "\n%*sExtensions: ", "\n%*sSignature : ", "\n%*s            ", "unknown\n%*s", "%02X%02X", "v3_scts.c", "error loading dso", "list cannot be null", "missing close square bracket", "missing equal sign", "missing finish function", "missing init function", "module initialization error", "no close brace", "no conf", "no conf or environment variable", "no section", "no such file", "no value", "unable to create new section", "unknown module name", "variable expansion too long", "variable has no value", "CONF_dump_fp", "CONF_load", "CONF_load_bio", "CONF_load_fp", "CONF_modules_load", "CONF_parse_list", "DEF_LOAD", "DEF_LOAD_BIO", "MODULE_INIT", "MODULE_LOAD_DSO", "MODULE_RUN", "NCONF_dump_bio", "NCONF_dump_fp", "NCONF_get_number", "NCONF_get_number_e", "NCONF_get_section", "NCONF_get_string", "NCONF_load", "NCONF_load_bio", "NCONF_load_fp", "NCONF_new", "STR_COPY", "openssl_conf", "OPENSSL_init", "OPENSSL_finish", "conf_mod.c", "module=", ", path=", "%-8d", ", value=", ", retcode=", "OPENSSL_CONF", "openssl.cnf", "PKCS7_ATTRIBUTES", "PKCS7_ATTR_SIGN", "PKCS7_DIGEST", "contents", "PKCS7_ENCRYPT", "enc_data", "PKCS7_SIGN_ENVELOPE", "recipientinfo", "md_algs", "signer_info", "PKCS7_ENC_CONTENT", "content_type", "PKCS7_RECIP_INFO", "issuer_and_serial", "key_enc_algor", "enc_key", "PKCS7_ENVELOPE", "PKCS7_ISSUER_AND_SERIAL", "PKCS7_SIGNER_INFO", "digest_alg", "auth_attr", "digest_enc_alg", "enc_digest", "unauth_attr", "PKCS7_SIGNED", "d.data", "d.sign", "d.enveloped", "d.signed_and_enveloped", "d.digest", "d.encrypted", "certificate verify error", "cipher not initialized", "content and data present", "ctrl error", "decrypted key is wrong length", "digest failure", "encryption ctrl failure", "encryption not supported for this key type", "error adding recipient", "error setting cipher", "invalid null pointer", "invalid signed data type", "missing ceripend info", "no content", "no matching digest type found", "no recipient matches certificate", "no recipient matches key", "no signatures on data", "no signers", "operation not supported on this type", "pkcs7 add signature error", "pkcs7 add signer error", "pkcs7 datafinal", "pkcs7 datafinal error", "pkcs7 datasign", "pkcs7 parse error", "pkcs7 sig parse error", "private key does not match certificate", "signature failure", "signer certificate not found", "signing ctrl failure", "signing not supported for this key type", "smime text error", "unable to find certificate", "unable to find mem bio", "unable to find message digest", "unknown digest type", "unknown operation", "unsupported cipher type", "unsupported content type", "wrong content type", "wrong pkcs7 type", "B64_READ_PKCS7", "B64_WRITE_PKCS7", "DO_PKCS7_SIGNED_ATTRIB", "i2d_PKCS7_bio_stream", "PKCS7_add0_attrib_signing_time", "PKCS7_add_attrib_smimecap", "PKCS7_add_certificate", "PKCS7_add_crl", "PKCS7_add_recipient_info", "PKCS7_add_signature", "PKCS7_add_signer", "PKCS7_BIO_ADD_DIGEST", "PKCS7_COPY_EXISTING_DIGEST", "PKCS7_ctrl", "PKCS7_dataDecode", "PKCS7_dataFinal", "PKCS7_dataInit", "PKCS7_DATASIGN", "PKCS7_dataVerify", "PKCS7_decrypt", "PKCS7_DECRYPT_RINFO", "PKCS7_ENCODE_RINFO", "PKCS7_encrypt", "PKCS7_final", "PKCS7_FIND_DIGEST", "PKCS7_get0_signers", "PKCS7_RECIP_INFO_set", "PKCS7_set_cipher", "PKCS7_set_content", "PKCS7_set_digest", "PKCS7_set_type", "PKCS7_sign", "PKCS7_signatureVerify", "PKCS7_SIGNER_INFO_set", "PKCS7_SIGNER_INFO_sign", "PKCS7_sign_add_signer", "PKCS7_simple_smimecap", "PKCS7_verify", "SMIME_read_PKCS7", "pk7_doit.c", "pk7_attr.c", "p12_crpt.c", "p12_key.c", "p12_utl.c", "cant pack structure", "content type not data", "encrypt error", "error setting encrypted data type", "invalid null pkcs12 pointer", "iv gen error", "key gen error", "mac absent", "mac generation error", "mac setup error", "mac string set error", "mac verify error", "mac verify failure", "pkcs12 algor cipherinit error", "pkcs12 cipherfinal error", "pkcs12 pbe crypt error", "unknown digest algorithm", "unsupported pkcs12 mode", "PARSE_BAG", "PARSE_BAGS", "PKCS12_ADD_FRIENDLYNAME", "PKCS12_add_friendlyname_asc", "PKCS12_add_friendlyname_uni", "PKCS12_add_localkeyid", "PKCS12_create", "PKCS12_gen_mac", "PKCS12_init", "PKCS12_item_decrypt_d2i", "PKCS12_item_i2d_encrypt", "PKCS12_item_pack_safebag", "PKCS12_key_gen_asc", "PKCS12_key_gen_uni", "PKCS12_MAKE_KEYBAG", "PKCS12_MAKE_SHKEYBAG", "PKCS12_newpass", "PKCS12_pack_p7data", "PKCS12_pack_p7encdata", "PKCS12_parse", "PKCS12_pbe_crypt", "PKCS12_PBE_keyivgen", "PKCS12_setup_mac", "PKCS12_set_mac", "PKCS12_unpack_authsafes", "PKCS12_unpack_p7data", "PKCS12_verify_mac", "PKCS8_add_keyusage", "PKCS8_encrypt", "comp_lib.c", "zlib deflate error", "zlib inflate error", "zlib not supported", "BIO_ZLIB_FLUSH", "BIO_ZLIB_NEW", "BIO_ZLIB_READ", "BIO_ZLIB_WRITE", "c_zlib.c", "1.2.3", "zlib error:", "compress", "inflateEnd", "inflate", "inflateInit_", "deflateEnd", "deflate", "deflateInit_", "zError", "zlib", "(undef)", "OCSP_SERVICELOC", "locator", "OCSP_CRLID", "crlUrl", "crlNum", "crlTime", "OCSP_BASICRESP", "tbsResponseData", "signatureAlgorithm", "OCSP_RESPDATA", "responderId", "producedAt", "responses", "responseExtensions", "OCSP_SINGLERESP", "certId", "certStatus", "thisUpdate", "nextUpdate", "singleExtensions", "OCSP_CERTSTATUS", "value.good", "value.revoked", "value.unknown", "OCSP_REVOKEDINFO", "revocationTime", "revocationReason", "OCSP_RESPID", "value.byName", "value.byKey", "OCSP_RESPONSE", "responseStatus", "responseBytes", "OCSP_RESPBYTES", "responseType", "response", "OCSP_REQUEST", "tbsRequest", "optionalSignature", "OCSP_REQINFO", "requestorName", "requestList", "requestExtensions", "OCSP_ONEREQ", "reqCert", "singleRequestExtensions", "OCSP_CERTID", "issuerNameHash", "issuerKeyHash", "OCSP_SIGNATURE", "Content-Type: application/ocsp-request\r\nContent-Length: %d\r\n\r\n", "%s %s HTTP/1.0\r\n", "ocsp_ht.c", "POST", "Code=", ",Reason=", "digest err", "error in nextupdate field", "error in thisupdate field", "error parsing url", "missing ocspsigning usage", "nextupdate before thisupdate", "not basic response", "no certificates in chain", "no response data", "no revoked time", "request not signed", "response contains no revocation data", "root ca not trusted", "server read error", "server response error", "server response parse error", "server write error", "status expired", "status not yet valid", "status too old", "unknown message digest", "unsupported requestorname type", "ASN1_STRING_encode", "D2I_OCSP_NONCE", "OCSP_basic_add1_status", "OCSP_basic_sign", "OCSP_basic_verify", "OCSP_cert_id_new", "OCSP_CHECK_DELEGATED", "OCSP_CHECK_IDS", "OCSP_CHECK_ISSUER", "OCSP_check_validity", "OCSP_MATCH_ISSUERID", "OCSP_parse_url", "OCSP_request_sign", "OCSP_request_verify", "OCSP_response_get1_basic", "OCSP_sendreq_bio", "OCSP_sendreq_nbio", "PARSE_HTTP_LINE1", "REQUEST_VERIFY", "common ok and cancel characters", "index too large", "index too small", "no result buffer", "result too large", "result too small", "unknown control command", "GENERAL_ALLOCATE_BOOLEAN", "GENERAL_ALLOCATE_PROMPT", "GENERAL_ALLOCATE_STRING", "UI_ctrl", "UI_dup_error_string", "UI_dup_info_string", "UI_dup_input_boolean", "UI_dup_input_string", "UI_dup_verify_string", "UI_get0_result", "UI_new_method", "UI_set_result", "add signer error", "certificate already present", "certificate has no keyid", "cipher initialisation error", "cipher parameter initialisation error", "cms datafinal error", "cms lib", "contentidentifier mismatch", "content not found", "content type mismatch", "content type not compressed data", "content type not enveloped data", "content type not signed data", "content verify error", "digest error", "error getting public key", "error reading messagedigest attribute", "error setting key", "error setting recipientinfo", "invalid encrypted key length", "invalid key encryption parameter", "md bio init error", "messagedigest attribute wrong length", "messagedigest wrong length", "msgsigdigest error", "msgsigdigest verification failure", "msgsigdigest wrong length", "need one signer", "not a signed receipt", "not encrypted data", "not kek", "not key agreement", "not key transport", "not pwri", "no cipher", "no key", "no key or cert", "no matching digest", "no matching recipient", "no matching signature", "no msgsigdigest", "no password", "no private key", "no receipt request", "receipt decode error", "recipient error", "signfinal error", "store init error", "type not digested data", "type not encrypted data", "unable to finalize context", "unknown digest algorihm", "unknown id", "unsupported kek algorithm", "unsupported key encryption algorithm", "unsupported recipient type", "unsupported recpientinfo type", "unwrap error", "unwrap failure", "verification failure", "wrap error", "CHECK_CONTENT", "CMS_add0_cert", "CMS_add0_recipient_key", "CMS_add0_recipient_password", "CMS_add1_ReceiptRequest", "CMS_add1_recipient_cert", "CMS_add1_signer", "CMS_ADD1_SIGNINGTIME", "CMS_compress", "cms_CompressedData_create", "cms_CompressedData_init_bio", "CMS_COPY_CONTENT", "CMS_COPY_MESSAGEDIGEST", "CMS_data", "CMS_dataFinal", "CMS_dataInit", "CMS_decrypt", "CMS_decrypt_set1_key", "CMS_decrypt_set1_password", "CMS_decrypt_set1_pkey", "cms_DigestAlgorithm_find_ctx", "cms_DigestAlgorithm_init_bio", "cms_DigestedData_do_final", "CMS_digest_verify", "cms_encode_Receipt", "CMS_encrypt", "cms_EncryptedContent_init_bio", "CMS_EncryptedData_decrypt", "CMS_EncryptedData_encrypt", "CMS_EncryptedData_set1_key", "CMS_EnvelopedData_create", "cms_EnvelopedData_init_bio", "CMS_ENVELOPED_DATA_INIT", "cms_env_asn1_ctrl", "CMS_final", "CMS_GET0_CERTIFICATE_CHOICES", "CMS_get0_content", "CMS_GET0_ECONTENT_TYPE", "cms_get0_enveloped", "CMS_GET0_REVOCATION_CHOICES", "CMS_GET0_SIGNED", "cms_msgSigDigest_add1", "CMS_ReceiptRequest_create0", "cms_Receipt_verify", "CMS_RecipientInfo_decrypt", "CMS_RecipientInfo_encrypt", "cms_RecipientInfo_kari_encrypt", "CMS_RecipientInfo_kari_get0_alg", "CMS_RecipientInfo_kari_get0_orig_id", "CMS_RecipientInfo_kari_get0_reks", "CMS_RecipientInfo_kari_orig_id_cmp", "CMS_RECIPIENTINFO_KEKRI_DECRYPT", "CMS_RECIPIENTINFO_KEKRI_ENCRYPT", "CMS_RecipientInfo_kekri_get0_id", "CMS_RecipientInfo_kekri_id_cmp", "CMS_RecipientInfo_ktri_cert_cmp", "CMS_RECIPIENTINFO_KTRI_DECRYPT", "CMS_RECIPIENTINFO_KTRI_ENCRYPT", "CMS_RecipientInfo_ktri_get0_algs", "CMS_RecipientInfo_ktri_get0_signer_id", "cms_RecipientInfo_pwri_crypt", "CMS_RecipientInfo_set0_key", "CMS_RecipientInfo_set0_password", "CMS_RecipientInfo_set0_pkey", "CMS_SD_ASN1_CTRL", "cms_set1_ias", "cms_set1_keyid", "cms_set1_SignerIdentifier", "CMS_set_detached", "CMS_sign", "CMS_SIGNED_DATA_INIT", "CMS_SIGNERINFO_CONTENT_SIGN", "CMS_SignerInfo_sign", "CMS_SignerInfo_verify", "CMS_SIGNERINFO_VERIFY_CERT", "CMS_SignerInfo_verify_content", "CMS_sign_receipt", "CMS_stream", "CMS_uncompress", "CMS_verify", "cms_env.c", "cms_enc.c", "cms_pwri.c", "cms_kari.c", "pqueue.c", "item\t%02x%02x%02x%02x%02x%02x%02x%02x\n", "bad pkcs7 type", "bad type", "could not set engine", "could not set time", "d2i ts resp int failed", "detached content", "ess add signing cert error", "ess signing certificate error", "invalid signer certificate purpose", "message imprint mismatch", "nonce mismatch", "nonce not returned", "no time stamp token", "pkcs7 add signed attr error", "pkcs7 to ts tst info failed", "policy mismatch", "response setup error", "there must be one signer", "time syscall error", "token not present", "token present", "tsa name mismatch", "tsa untrusted", "tst info setup error", "ts datasign", "unacceptable policy", "unsupported md algorithm", "unsupported version", "d2i_TS_RESP", "DEF_SERIAL_CB", "DEF_TIME_CB", "ESS_ADD_SIGNING_CERT", "ESS_CERT_ID_NEW_INIT", "ESS_SIGNING_CERT_NEW_INIT", "INT_TS_RESP_VERIFY_TOKEN", "PKCS7_to_TS_TST_INFO", "TS_ACCURACY_set_micros", "TS_ACCURACY_set_millis", "TS_ACCURACY_set_seconds", "TS_CHECK_IMPRINTS", "TS_CHECK_NONCES", "TS_CHECK_POLICY", "TS_CHECK_SIGNING_CERTS", "TS_CHECK_STATUS_INFO", "TS_COMPUTE_IMPRINT", "TS_CONF_set_default_engine", "TS_GET_STATUS_TEXT", "TS_MSG_IMPRINT_set_algo", "TS_REQ_set_msg_imprint", "TS_REQ_set_nonce", "TS_REQ_set_policy_id", "TS_RESP_create_response", "TS_RESP_CREATE_TST_INFO", "TS_RESP_CTX_add_failure_info", "TS_RESP_CTX_add_md", "TS_RESP_CTX_add_policy", "TS_RESP_CTX_new", "TS_RESP_CTX_set_accuracy", "TS_RESP_CTX_set_certs", "TS_RESP_CTX_set_def_policy", "TS_RESP_CTX_set_signer_cert", "TS_RESP_CTX_set_status_info", "TS_RESP_GET_POLICY", "TS_RESP_SET_GENTIME_WITH_PRECISION", "TS_RESP_set_status_info", "TS_RESP_set_tst_info", "TS_RESP_SIGN", "TS_RESP_verify_signature", "TS_RESP_verify_token", "TS_TST_INFO_set_accuracy", "TS_TST_INFO_set_msg_imprint", "TS_TST_INFO_set_nonce", "TS_TST_INFO_set_policy_id", "TS_TST_INFO_set_serial", "TS_TST_INFO_set_time", "TS_TST_INFO_set_tsa", "TS_VERIFY", "TS_VERIFY_CERT", "TS_VERIFY_CTX_new", "srp_lib.c", "8192", "6144", "4096", "3072", "2048", "1536", "1024", "srp_vfy.c", "OpenSSL CMAC method", "hexkey", "no dynlock create callback", "CRYPTO_get_ex_new_index", "CRYPTO_get_new_dynlockid", "CRYPTO_get_new_lockid", "CRYPTO_set_ex_data", "DEF_ADD_INDEX", "DEF_GET_CLASS", "FIPS_mode_set", "INT_DUP_EX_DATA", "INT_FREE_EX_DATA", "INT_NEW_EX_DATA", "OBJ_add_object", "OBJ_create", "OBJ_dup", "OBJ_NAME_new_index", "OBJ_nid2ln", "OBJ_nid2obj", "OBJ_nid2sn", "hm_ameth.c", "OpenSSL HMAC method", "hm_pmeth.c", "libdes part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "des(%s,%s,%s,%s)", "cisc", "qWoQmLI", "sYqSoNK", "AES part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "aes(partial)", "pVnPlKH", "rWpRnLI", "IDEA part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "idea(int)", "CAMELLIA part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "bn_add.c", "bn_div.c", "bn_exp.c", "B22\f\f\f\fJJ", "bn_mod.c", "bn_rand.c", "bn_blind.c", "bn_gcd.c", "bad reciprocal", "bignum too long", "bits too small", "called with even modulus", "div by zero", "encoding error", "expand on static bignum data", "input not reduced", "invalid length", "invalid range", "invalid shift", "not a square", "not initialized", "no inverse", "no solution", "p is not prime", "too many iterations", "too many temporary variables", "BNRAND", "BN_BLINDING_convert_ex", "BN_BLINDING_create_param", "BN_BLINDING_invert_ex", "BN_BLINDING_new", "BN_BLINDING_update", "BN_bn2dec", "BN_bn2hex", "BN_CTX_get", "BN_CTX_new", "BN_CTX_start", "BN_div", "BN_div_no_branch", "BN_div_recp", "BN_exp", "bn_expand2", "BN_EXPAND_INTERNAL", "BN_GF2m_mod", "BN_GF2m_mod_exp", "BN_GF2m_mod_mul", "BN_GF2m_mod_solve_quad", "BN_GF2m_mod_solve_quad_arr", "BN_GF2m_mod_sqr", "BN_GF2m_mod_sqrt", "BN_lshift", "BN_mod_exp2_mont", "BN_mod_exp_mont", "BN_mod_exp_mont_consttime", "BN_mod_exp_mont_word", "BN_mod_exp_recp", "BN_mod_exp_simple", "BN_mod_inverse", "BN_mod_inverse_no_branch", "BN_mod_lshift_quick", "BN_mod_mul_reciprocal", "BN_mod_sqrt", "BN_mpi2bn", "BN_new", "BN_rand", "BN_rand_range", "BN_rshift", "BN_usub", "bn_recp.c", "bn_mont.c", "asn1 error", "asn1 unknown field", "bignum out of range", "coordinates out of range", "d2i ecpkparameters failure", "discriminant is zero", "ec group new by name failure", "field too large", "gf2m not supported", "group2pkparameters failure", "i2d ecpkparameters failure", "incompatible objects", "invalid argument", "invalid compressed point", "invalid compression bit", "invalid curve", "invalid digest type", "invalid encoding", "invalid field", "invalid form", "invalid group order", "invalid pentanomial basis", "invalid private key", "invalid trinomial basis", "kdf parameter error", "keys not set", "missing private key", "not a NIST prime", "not a supported NIST prime", "not implemented", "no field mod", "no parameters set", "passed null parameter", "peer key error", "pkparameters2group failure", "point at infinity", "point is not on curve", "shared info error", "slot full", "undefined generator", "undefined order", "unknown group", "unknown order", "unsupported field", "wrong curve parameters", "wrong order", "BN_TO_FELEM", "COMPUTE_WNAF", "d2i_ECParameters", "d2i_ECPKParameters", "d2i_ECPrivateKey", "DO_EC_KEY_PRINT", "ECDH_CMS_DECRYPT", "ECDH_CMS_SET_SHARED_INFO", "ECKEY_PARAM2TYPE", "ECKEY_PARAM_DECODE", "ECKEY_PRIV_DECODE", "ECKEY_PRIV_ENCODE", "ECKEY_PUB_DECODE", "ECKEY_PUB_ENCODE", "ECKEY_TYPE2PARAM", "ECParameters_print", "ECParameters_print_fp", "ECPKParameters_print", "ECPKParameters_print_fp", "ecp_nistz256_get_affine", "ecp_nistz256_mult_precompute", "ecp_nistz256_points_mul", "ecp_nistz256_pre_comp_new", "ecp_nistz256_set_words", "ecp_nistz256_windowed_mul", "ECP_NIST_MOD_192", "ECP_NIST_MOD_224", "ECP_NIST_MOD_256", "ECP_NIST_MOD_521", "EC_ASN1_GROUP2CURVE", "EC_ASN1_GROUP2FIELDID", "EC_ASN1_GROUP2PARAMETERS", "EC_ASN1_GROUP2PKPARAMETERS", "EC_ASN1_PARAMETERS2GROUP", "EC_ASN1_PKPARAMETERS2GROUP", "EC_EX_DATA_set_data", "EC_GF2M_MONTGOMERY_POINT_MULTIPLY", "ec_GF2m_simple_group_check_discriminant", "ec_GF2m_simple_group_set_curve", "ec_GF2m_simple_oct2point", "ec_GF2m_simple_point2oct", "ec_GF2m_simple_point_get_affine_coordinates", "ec_GF2m_simple_point_set_affine_coordinates", "ec_GF2m_simple_set_compressed_coordinates", "ec_GFp_mont_field_decode", "ec_GFp_mont_field_encode", "ec_GFp_mont_field_mul", "ec_GFp_mont_field_set_to_one", "ec_GFp_mont_field_sqr", "ec_GFp_mont_group_set_curve", "EC_GFP_MONT_GROUP_SET_CURVE_GFP", "ec_GFp_nistp224_group_set_curve", "ec_GFp_nistp224_points_mul", "ec_GFp_nistp224_point_get_affine_coordinates", "ec_GFp_nistp256_group_set_curve", "ec_GFp_nistp256_points_mul", "ec_GFp_nistp256_point_get_affine_coordinates", "ec_GFp_nistp521_group_set_curve", "ec_GFp_nistp521_points_mul", "ec_GFp_nistp521_point_get_affine_coordinates", "ec_GFp_nist_field_mul", "ec_GFp_nist_field_sqr", "ec_GFp_nist_group_set_curve", "ec_GFp_simple_group_check_discriminant", "ec_GFp_simple_group_set_curve", "EC_GFP_SIMPLE_GROUP_SET_CURVE_GFP", "EC_GFP_SIMPLE_GROUP_SET_GENERATOR", "ec_GFp_simple_make_affine", "ec_GFp_simple_oct2point", "ec_GFp_simple_point2oct", "ec_GFp_simple_points_make_affine", "ec_GFp_simple_point_get_affine_coordinates", "EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES_GFP", "ec_GFp_simple_point_set_affine_coordinates", "EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES_GFP", "ec_GFp_simple_set_compressed_coordinates", "EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES_GFP", "EC_GROUP_check", "EC_GROUP_check_discriminant", "EC_GROUP_copy", "EC_GROUP_get0_generator", "EC_GROUP_get_cofactor", "EC_GROUP_get_curve_GF2m", "EC_GROUP_get_curve_GFp", "EC_GROUP_get_degree", "EC_GROUP_get_order", "EC_GROUP_get_pentanomial_basis", "EC_GROUP_get_trinomial_basis", "EC_GROUP_new", "EC_GROUP_new_by_curve_name", "EC_GROUP_NEW_FROM_DATA", "EC_GROUP_precompute_mult", "EC_GROUP_set_curve_GF2m", "EC_GROUP_set_curve_GFp", "EC_GROUP_SET_EXTRA_DATA", "EC_GROUP_set_generator", "EC_KEY_check_key", "EC_KEY_copy", "EC_KEY_generate_key", "EC_KEY_new", "EC_KEY_print", "EC_KEY_print_fp", "EC_KEY_set_public_key_affine_coordinates", "EC_POINTs_make_affine", "EC_POINT_add", "EC_POINT_cmp", "EC_POINT_copy", "EC_POINT_dbl", "EC_POINT_get_affine_coordinates_GF2m", "EC_POINT_get_affine_coordinates_GFp", "EC_POINT_get_Jprojective_coordinates_GFp", "EC_POINT_invert", "EC_POINT_is_at_infinity", "EC_POINT_is_on_curve", "EC_POINT_make_affine", "EC_POINT_mul", "EC_POINT_new", "EC_POINT_oct2point", "EC_POINT_point2oct", "EC_POINT_set_affine_coordinates_GF2m", "EC_POINT_set_affine_coordinates_GFp", "EC_POINT_set_compressed_coordinates_GF2m", "EC_POINT_set_compressed_coordinates_GFp", "EC_POINT_set_Jprojective_coordinates_GFp", "EC_POINT_set_to_infinity", "EC_PRE_COMP_DUP", "EC_PRE_COMP_NEW", "ec_wNAF_mul", "ec_wNAF_precompute_mult", "i2d_ECParameters", "i2d_ECPKParameters", "i2d_ECPrivateKey", "i2o_ECPublicKey", "NISTP224_PRE_COMP_NEW", "NISTP256_PRE_COMP_NEW", "NISTP521_PRE_COMP_NEW", "o2i_ECPublicKey", "OLD_EC_PRIV_DECODE", "PKEY_EC_CTRL", "PKEY_EC_CTRL_STR", "PKEY_EC_DERIVE", "PKEY_EC_KEYGEN", "PKEY_EC_PARAMGEN", "PKEY_EC_SIGN", "ec_asn1.c", "EC_PRIVATEKEY", "privateKey", "publicKey", "ECPKPARAMETERS", "value.named_curve", "value.parameters", "value.implicitlyCA", "ECPARAMETERS", "fieldID", "cofactor", "X9_62_CURVE", "X9_62_FIELDID", "fieldType", "p.prime", "p.char_two", "p.other", "X9_62_CHARACTERISTIC_TWO", "p.onBasis", "p.tpBasis", "p.ppBasis", "X9_62_PENTANOMIAL", "ec2_smpl.c", "ec2_mult.c", "ec_ameth.c", "Private-Key", "priv:", "pub: ", "ECDSA-Parameters", "Public-Key", "OpenSSL EC algorithm", "ec_paramgen_curve", "ec_pmeth.c", "ec_param_enc", "explicit", "named_curve", "ecdh_kdf_md", "ecdh_cofactor_mode", "eck_prn.c", "ASN1 OID: %s", "NIST CURVE: %s\n", "Field Type: %s\n", "Basis Type: %s\n", "Polynomial:", "A:   ", "Prime:", "B:   ", "Generator (compressed):", "Order: ", "Generator (uncompressed):", "Generator (hybrid):", "Cofactor: ", "Seed:", "ecp_oct.c", "ec2_oct.c", "$f_Qm", "rsa_eay.c", "Eric Young's PKCS#1 RSA", "algorithm mismatch", "bad e value", "bad fixed header decrypt", "bad pad byte count", "block type is not 01", "block type is not 02", "data greater than mod len", "data too large", "data too large for key size", "data too large for modulus", "data too small", "data too small for key size", "digest does not match", "digest too big for rsa key", "dmp1 not congruent to d", "dmq1 not congruent to d", "d e not congruent to 1", "first octet invalid", "illegal or unsupported padding mode", "invalid digest length", "invalid header", "invalid keybits", "invalid label", "invalid message length", "invalid mgf1 md", "invalid oaep parameters", "invalid padding", "invalid padding mode", "invalid pss parameters", "invalid pss saltlen", "invalid salt length", "invalid trailer", "invalid x931 digest", "iqmp not inverse of q", "key size too small", "last octet invalid", "modulus too large", "non fips rsa method", "no public exponent", "null before block missing", "n does not equal p q", "oaep decoding error", "operation not allowed in fips mode", "padding check failed", "pkcs decoding error", "p not prime", "q not prime", "rsa operations not supported", "salt length check failed", "salt length recovery failed", "sslv3 rollback attack", "unknown algorithm type", "unknown mask digest", "unknown padding type", "unknown pss digest", "unsupported encryption type", "unsupported label source", "unsupported mask algorithm", "unsupported mask parameter", "unsupported signature type", "value missing", "CHECK_PADDING_MD", "DO_RSA_PRINT", "INT_RSA_VERIFY", "MEMORY_LOCK", "OLD_RSA_PRIV_DECODE", "PKEY_RSA_CTRL", "PKEY_RSA_CTRL_STR", "PKEY_RSA_SIGN", "PKEY_RSA_VERIFY", "PKEY_RSA_VERIFYRECOVER", "RSA_ALGOR_TO_MD", "RSA_BUILTIN_KEYGEN", "RSA_check_key", "RSA_CMS_DECRYPT", "RSA_EAY_PRIVATE_DECRYPT", "RSA_EAY_PRIVATE_ENCRYPT", "RSA_EAY_PUBLIC_DECRYPT", "RSA_EAY_PUBLIC_ENCRYPT", "RSA_generate_key", "RSA_generate_key_ex", "RSA_ITEM_VERIFY", "RSA_memory_lock", "RSA_MGF1_TO_MD", "RSA_new_method", "RSA_NULL", "RSA_NULL_MOD_EXP", "RSA_NULL_PRIVATE_DECRYPT", "RSA_NULL_PRIVATE_ENCRYPT", "RSA_NULL_PUBLIC_DECRYPT", "RSA_NULL_PUBLIC_ENCRYPT", "RSA_padding_add_none", "RSA_padding_add_PKCS1_OAEP", "RSA_padding_add_PKCS1_OAEP_mgf1", "RSA_padding_add_PKCS1_PSS", "RSA_padding_add_PKCS1_PSS_mgf1", "RSA_padding_add_PKCS1_type_1", "RSA_padding_add_PKCS1_type_2", "RSA_padding_add_SSLv23", "RSA_padding_add_X931", "RSA_padding_check_none", "RSA_padding_check_PKCS1_OAEP", "RSA_padding_check_PKCS1_OAEP_mgf1", "RSA_padding_check_PKCS1_type_1", "RSA_padding_check_PKCS1_type_2", "RSA_padding_check_SSLv23", "RSA_padding_check_X931", "RSA_print", "RSA_print_fp", "RSA_private_decrypt", "RSA_private_encrypt", "RSA_PRIV_DECODE", "RSA_PRIV_ENCODE", "RSA_PSS_TO_CTX", "RSA_public_decrypt", "RSA_public_encrypt", "RSA_PUB_DECODE", "RSA_setup_blinding", "RSA_sign", "RSA_sign_ASN1_OCTET_STRING", "RSA_verify", "RSA_verify_ASN1_OCTET_STRING", "RSA_verify_PKCS1_PSS", "RSA_verify_PKCS1_PSS_mgf1", "rsa_pk1.c", "rsa_ssl.c", "rsa_none.c", "rsa_oaep.c", "rsa_x931.c", "rsa_ameth.c", "Hash Algorithm: ", "sha1 (default)", "Mask Algorithm: ", " with ", "INVALID", "mgf1 with sha1 (default)", "Salt Length: 0x", "14 (default)", "Trailer Field: 0x", "BC (default)", " (INVALID PSS PARAMETERS)\n", "Public-Key: (%d bit)\n", "Modulus:", "Exponent:", "publicExponent:", "modulus:", "Private-Key: (%d bit)\n", "privateExponent:", "prime1:", "prime2:", "exponent1:", "exponent2:", "coefficient:", "OpenSSL RSA method", "rsa_pmeth.c", "rsa_padding_mode", "sslv23", "oeap", "oaep", "x931", "rsa_pss_saltlen", "rsa_keygen_bits", "rsa_keygen_pubexp", "rsa_mgf1_md", "rsa_oaep_md", "rsa_oaep_label", "DSA part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "dsa_lib.c", "bad q value", "bn error", "invalid parameters", "need new setup values", "non fips dsa method", "parameter encoding error", "d2i_DSA_SIG", "DO_DSA_PRINT", "DSAparams_print", "DSAparams_print_fp", "DSA_BUILTIN_PARAMGEN2", "DSA_do_sign", "DSA_do_verify", "DSA_generate_key", "DSA_generate_parameters_ex", "DSA_new_method", "DSA_PARAM_DECODE", "DSA_print_fp", "DSA_PRIV_DECODE", "DSA_PRIV_ENCODE", "DSA_PUB_DECODE", "DSA_PUB_ENCODE", "DSA_sign", "DSA_sign_setup", "DSA_SIG_new", "DSA_SIG_PRINT", "DSA_verify", "i2d_DSA_SIG", "OLD_DSA_PRIV_DECODE", "PKEY_DSA_CTRL", "PKEY_DSA_CTRL_STR", "PKEY_DSA_KEYGEN", "SIG_CB", "dsa_ossl.c", "OpenSSL DSA method", "dsa_ameth.c", "r:   ", "s:   ", "P:   ", "Q:   ", "G:   ", "dsa_paramgen_bits", "dsa_paramgen_q_bits", "dsa_paramgen_md", "dsa_pmeth.c", "ECDSA part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "ecs_lib.c", "ECDSA_SIG", "ecs_ossl.c", "OpenSSL ECDSA method", "err ec lib", "non fips method", "random number generation failed", "signature malloc failed", "ECDSA_CHECK", "ECDSA_DATA_NEW_METHOD", "ECDSA_do_sign", "ECDSA_do_verify", "ECDSA_METHOD_new", "ECDSA_sign_setup", "int_dhx942_dh", "vparams", "int_dhvparams", "counter", "bad generator", "invalid public key", "no private value", "COMPUTE_KEY", "DHparams_print_fp", "DH_BUILTIN_GENPARAMS", "DH_CMS_DECRYPT", "DH_CMS_SET_PEERKEY", "DH_CMS_SET_SHARED_INFO", "DH_compute_key", "DH_generate_key", "DH_generate_parameters_ex", "DH_new_method", "DH_PARAM_DECODE", "DH_PRIV_DECODE", "DH_PRIV_ENCODE", "DH_PUB_DECODE", "DH_PUB_ENCODE", "DO_DH_PRINT", "GENERATE_KEY", "GENERATE_PARAMETERS", "PKEY_DH_DERIVE", "PKEY_DH_KEYGEN", "dh_pmeth.c", "dh_paramgen_prime_len", "dh_rfc5114", "dh_paramgen_generator", "dh_paramgen_subprime_len", "dh_paramgen_type", "ech_lib.c", "ech_ossl.c", "OpenSSL ECDH method", "KDF failed", "point arithmetic failure", "ECDH_CHECK", "ECDH_compute_key", "ECDH_DATA_new_method", "control command failed", "dso already loaded", "empty file structure", "filename too big", "cleanup method function failed", "incorrect file syntax", "could not load the shared library", "name translation failed", "no filename", "no file specification", "a null shared library handle was used", "set filename failed", "the meth_data stack is corrupt", "could not bind to the requested symbol name", "could not unload the shared library", "functionality not supported", "BEOS_BIND_FUNC", "BEOS_BIND_VAR", "BEOS_LOAD", "BEOS_NAME_CONVERTER", "BEOS_UNLOAD", "DLFCN_BIND_FUNC", "DLFCN_BIND_VAR", "DLFCN_LOAD", "DLFCN_MERGER", "DLFCN_NAME_CONVERTER", "DLFCN_UNLOAD", "DL_BIND_FUNC", "DL_BIND_VAR", "DL_LOAD", "DL_MERGER", "DL_NAME_CONVERTER", "DL_UNLOAD", "DSO_bind_func", "DSO_bind_var", "DSO_convert_filename", "DSO_ctrl", "DSO_free", "DSO_get_filename", "DSO_get_loaded_filename", "DSO_global_lookup", "DSO_load", "DSO_merge", "DSO_new_method", "DSO_pathbyaddr", "DSO_set_filename", "DSO_set_name_converter", "DSO_up_ref", "GLOBAL_LOOKUP_FUNC", "PATHBYADDR", "VMS_BIND_SYM", "VMS_LOAD", "VMS_MERGER", "VMS_UNLOAD", "WIN32_BIND_FUNC", "WIN32_BIND_VAR", "WIN32_GLOBALLOOKUP", "WIN32_GLOBALLOOKUP_FUNC", "WIN32_JOINER", "WIN32_LOAD", "WIN32_MERGER", "WIN32_NAME_CONVERTER", "WIN32_PATHBYADDR", "WIN32_SPLITTER", "WIN32_UNLOAD", "dso_lib.c", "already loaded", "argument is not a number", "cmd not executable", "command takes input", "command takes no input", "conflicting engine id", "ctrl command not implemented", "dh not implemented", "dsa not implemented", "DSO failure", "dso not found", "engines section error", "engine configuration error", "engine is not in the list", "engine section error", "failed loading private key", "failed loading public key", "finish failed", "could not obtain hardware handle", "'id' or 'name' missing", "init failed", "internal list error", "invalid cmd name", "invalid cmd number", "invalid init value", "invalid string", "not loaded", "no control function", "no index", "no load function", "no reference", "no such engine", "no unload function", "provide parameters", "rsa not implemented", "unimplemented cipher", "unimplemented digest", "unimplemented public key method", "version incompatibility", "DYNAMIC_CTRL", "DYNAMIC_GET_DATA_CTX", "DYNAMIC_LOAD", "DYNAMIC_SET_DATA_CTX", "ENGINE_add", "ENGINE_by_id", "ENGINE_cmd_is_executable", "ENGINE_ctrl", "ENGINE_ctrl_cmd", "ENGINE_ctrl_cmd_string", "ENGINE_finish", "ENGINE_FREE_UTIL", "ENGINE_get_cipher", "ENGINE_GET_DEFAULT_TYPE", "ENGINE_get_digest", "ENGINE_get_next", "ENGINE_get_pkey_asn1_meth", "ENGINE_get_pkey_meth", "ENGINE_get_prev", "ENGINE_init", "ENGINE_LIST_ADD", "ENGINE_LIST_REMOVE", "ENGINE_load_private_key", "ENGINE_load_public_key", "ENGINE_load_ssl_client_cert", "ENGINE_new", "ENGINE_remove", "ENGINE_set_default_string", "ENGINE_SET_DEFAULT_TYPE", "ENGINE_set_id", "ENGINE_set_name", "ENGINE_TABLE_REGISTER", "ENGINE_UNLOAD_KEY", "ENGINE_UNLOCKED_FINISH", "ENGINE_up_ref", "INT_CTRL_HELPER", "INT_ENGINE_CONFIGURE", "INT_ENGINE_MODULE_INIT", "LOG_MESSAGE", "eng_lib.c", "eng_list.c", "/Users/qishui.qj/StudioProjects/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output/lib/engines", "OPENSSL_ENGINES", "DIR_LOAD", "DIR_ADD", "LIST_ADD", "eng_ctrl.c", "eng_table.c", "tb_cipher.c", "tb_digest.c", "tb_pkmeth.c", "tb_asnmth.c", "BUF_memdup", "BUF_MEM_grow", "BUF_MEM_grow_clean", "BUF_MEM_new", "BUF_strdup", "BUF_strndup", "accept error", "bad fopen mode", "bad hostname lookup", "broken pipe", "connect error", "EOF on memory BIO", "error setting nbio", "error setting nbio on accepted socket", "error setting nbio on accept socket", "gethostbyname addr is not af inet", "invalid ip address", "in use", "keepalive", "nbio connect error", "no accept port specified", "no hostname specified", "no port defined", "no port specified", "null parameter", "tag mismatch", "unable to bind socket", "unable to create socket", "unable to listen socket", "unsupported method", "write to read only BIO", "WSAStartup", "ACPT_STATE", "BIO_accept", "BIO_BER_GET_HEADER", "BIO_callback_ctrl", "BIO_ctrl", "BIO_gethostbyname", "BIO_gets", "BIO_get_accept_socket", "BIO_get_host_ip", "BIO_get_port", "BIO_MAKE_PAIR", "BIO_new", "BIO_new_file", "BIO_new_mem_buf", "BIO_nread", "BIO_nread0", "BIO_nwrite", "BIO_nwrite0", "BIO_puts", "BIO_read", "BIO_sock_init", "BIO_write", "BUFFER_CTRL", "CONN_CTRL", "CONN_STATE", "DGRAM_SCTP_READ", "DGRAM_SCTP_WRITE", "FILE_CTRL", "FILE_READ", "LINEBUFFER_CTRL", "MEM_READ", "MEM_WRITE", "WSASTARTUP", "%02x%c", "%02X:", "%02X", "RAND part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "md_rand.c", "....................", "You need to read the OpenSSL FAQ, http://www.openssl.org/support/faq.html", "dual ec drbg disabled", "error initialising drbg", "error instantiating drbg", "no fips random method set", "PRNG not seeded", "RAND_get_rand_method", "RAND_init_fips", "SSLEAY_RAND_BYTES", "/var/run/egd-pool", "/dev/egd-pool", "/etc/egd-pool", "/etc/entropy", "/dev/urandom", "/dev/random", "/dev/srandom", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "ctx->length <= (int)sizeof(ctx->enc_data)", "evp_key.c", "nkey <= EVP_MAX_KEY_LENGTH", "niv <= EVP_MAX_IV_LENGTH", "bio_enc.c", "evp_pkey.c", "a_bitstr.c", "a_utctm.c", "%02d%02d%02d%02d%02d%02dZ", "a_gentm.c", "%04d%02d%02d%02d%02d%02dZ", "a_time.c", "ASN1_TIME", "a_d2i_fp.c", "a_i2d_fp.c", "a_enum.c", "a_sign.c", "a_digest.c", "a_verify.c", "0123456789ABCDEF", "a_strex.c", "\\%02X", "\\W%08lX", "\\U%04lX", "X509_VAL", "req_info", "X509_REQ_INFO", "pubkey", "x_crl.c", "X509_CRL", "X509_CRL_INFO", "lastUpdate", "X509_REVOKED", "revocationDate", "x_info.c", "NETSCAPE_SPKI", "spkac", "sig_algor", "NETSCAPE_SPKAC", "challenge", "NETSCAPE_CERT_SEQUENCE", "i2d_pr.c", "        Subject OCSP hash: ", "t_x509.c", "\n        Public key OCSP hash: ", "    Signature Algorithm: ", " GMT", "%s %2d %02d:%02d:%02d%.*s %d%s", "Bad time value", "%s %2d %02d:%02d:%02d %d%s", "Certificate:\n", "    Data:\n", "%8sVersion: %lu (0x%lx)\n", "        Serial Number:", " %s%lu (%s0x%lx)\n", "\n%12s%s", "        Issuer:%c", "        Validity\n", "            Not Before: ", "\n            Not After : ", "        Subject:%c", "        Subject Public Key Info:\n", "%12sPublic Key Algorithm: ", "%12sUnable to load Public Key\n", "%8sIssuer Unique ID: ", "%8sSubject Unique ID: ", "X509v3 extensions", "%*sTrusted Uses:\n%*s", "%*sNo Trusted Uses.\n", "%*sRejected Uses:\n%*s", "%*sNo Rejected Uses.\n", "%*sAlias: %s\n", "%*sKey Id: ", "%s%02X", " (%s)", "tasn_prn.c", "SEQUENCE", "BOOL ABSENT", "%*s%s OF %s {\n", "<ABSENT>\n", "NULL\n", "%s (%s)", " (%ld unused bits)\n", "ERROR: selector [%d] invalid\n", "%*s}\n", "Unprocessed type %d\n", ":EXTERNAL TYPE %s\n", "f_int.c", "f_string.c", "x_pkey.c", "asn1_gen.c", "Char=", "string=", "tag=", "ASCII", "UTF8", "BITLIST", "BOOL", "BOOLEAN", "INTEGER", "ENUM", "ENUMERATED", "OBJECT", "UTCTIME", "GENERALIZEDTIME", "GENTIME", "OCTETSTRING", "BITSTR", "BITSTRING", "UNIVERSALSTRING", "UNIV", "IA5STRING", "UTF8String", "BMPSTRING", "VISIBLESTRING", "VISIBLE", "PRINTABLESTRING", "PRINTABLE", "T61STRING", "TELETEXSTRING", "GeneralString", "GENSTR", "NUMERIC", "NUMERICSTRING", "EXPLICIT", "IMPLICIT", "OCTWRAP", "SEQWRAP", "SETWRAP", "BITWRAP", "FORM", "FORMAT", "%-18s", "(unknown)", "cons: ", "prim: ", "BAD RECURSION DEPTH\n", "Error in encoding\n", "%5ld:", "d=%-2d hl=%ld l=%4ld ", "d=%-2d hl=%ld l=inf  ", "priv [ %d ] ", "cont [ %d ]", "appl [ %d ]", "<ASN1 %d>", "length is greater than %ld\n", ":BAD OBJECT", "Bad boolean\n", "[HEX DUMP]:", "BAD INTEGER", "BAD ENUMERATED", "BIT STRING", "OCTET STRING", "OBJECT DESCRIPTOR", "EXTERNAL", "REAL", "<ASN1 11>", "UTF8STRING", "<ASN1 13>", "<ASN1 14>", "<ASN1 15>", "VIDEOTEXSTRING", "GRAPHICSTRING", "GENERALSTRING", "<ASN1 29>", "a_bytes.c", "MASK:", "nombstr", "pkix", "utf8only", "a_strnid.c", "asn_pack.c", "pem_info.c", "pem_pk8.c", "/Users/qishui.qj/StudioProjects/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output/private", "/Users/qishui.qj/StudioProjects/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output", "/Users/qishui.qj/StudioProjects/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output/certs", "/Users/qishui.qj/StudioProjects/taobao_ffmpeg/compile-ffmpeg-for-android/build/openssl-arm64/output/cert.pem", "SSL_CERT_DIR", "SSL_CERT_FILE", "x509_req.c", "x509_att.c", "v3_bcons.c", "BASIC_CONSTRAINTS", "v3_bitst.c", "Digital Signature", "digitalSignature", "Non Repudiation", "nonRepudiation", "Key Encipherment", "keyEncipherment", "Data Encipherment", "dataEncipherment", "Key Agreement", "keyAgreement", "Certificate Sign", "keyCertSign", "CRL Sign", "cRLSign", "Encipher Only", "encipherOnly", "Decipher Only", "decipherOnly", "client", "server", "Object Signing", "objsign", "reserved", "SSL CA", "sslCA", "S/MIME CA", "emailCA", "Object Signing CA", "objCA", "v3_conf.c", ",section=", "critical,", "DER:", "ASN1:", "v3_extku.c", "EXTENDED_KEY_USAGE", "v3_ia5.c", "%s:%s", "%*s<Not Supported>", "%*s<Parse Error>", "%*s%s", "pcy_node.c", "CONF part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "conf_lib.c", "group=", " name=", "conf_api.c", "vv == NULL", "CONF_def part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "[%s] %s=%s\n", "[[%s]]\n", "conf_def.c", "line ", "WIN32", "OpenSSL default", "TXT_DB part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "txt_db.c", "wrong number of fields on line %ld (looking for field %d, got %d, '%s' left)\n", "failure in sk_push\n", "OPENSSL_malloc failure\n", "p12_add.c", "PKCS12_AUTHSAFES", "PKCS12_SAFEBAGS", "PKCS12_SAFEBAG", "attrib", "value.keybag", "value.shkeybag", "value.safes", "value.bag", "value.other", "PKCS12_BAGS", "value.x509cert", "value.x509crl", "value.sdsicert", "PKCS12_MAC_DATA", "dinfo", "PKCS12", "authsafes", "p12_decr.c", "p12_p8e.c", "ui_lib.c", "Enter ", " for ", "You must type in ", " to ", " characters", "ui_openssl.c", "Verifying - %s", "Verify failure\n", "/dev/tty", "OpenSSL default user interface", "cms_lib.c", "keyInfo", "entityUInfo", "suppPubInfo", "CMS_Receipt", "signedContentIdentifier", "originatorSignatureValue", "CMS_ReceiptRequest", "receiptsFrom", "receiptsTo", "CMS_ReceiptsFrom", "d.allOrFirstTier", "d.receiptList", "CMS_Attributes_Verify", "CMS_ATTRIBUTES", "CMS_Attributes_Sign", "CMS_ContentInfo", "d.signedData", "d.envelopedData", "d.digestedData", "d.encryptedData", "d.authenticatedData", "d.compressedData", "CMS_CompressedData", "compressionAlgorithm", "encapContentInfo", "CMS_AuthenticatedData", "originatorInfo", "recipientInfos", "macAlgorithm", "digestAlgorithm", "authAttrs", "unauthAttrs", "CMS_EncryptedData", "encryptedContentInfo", "unprotectedAttrs", "CMS_DigestedData", "CMS_EnvelopedData", "CMS_RecipientInfo", "d.ktri", "d.kari", "d.kekri", "d.pwri", "d.ori", "CMS_OtherRecipientInfo", "oriType", "oriValue", "CMS_PasswordRecipientInfo", "keyDerivationAlgorithm", "keyEncryptionAlgorithm", "encryptedKey", "CMS_KEKRecipientInfo", "kekid", "CMS_KEKIdentifier", "keyIdentifier", "CMS_KeyAgreeRecipientInfo", "originator", "recipientEncryptedKeys", "CMS_OriginatorIdentifierOrKey", "d.issuerAndSerialNumber", "d.subjectKeyIdentifier", "d.originatorKey", "CMS_OriginatorPublicKey", "CMS_RecipientEncryptedKey", "CMS_KeyAgreeRecipientIdentifier", "d.rKeyId", "CMS_RecipientKeyIdentifier", "CMS_OtherKeyAttribute", "keyAttrId", "keyAttr", "CMS_KeyTransRecipientInfo", "CMS_EncryptedContentInfo", "contentEncryptionAlgorithm", "encryptedContent", "CMS_OriginatorInfo", "certificates", "crls", "CMS_SignedData", "digestAlgorithms", "signerInfos", "CMS_RevocationInfoChoice", "d.crl", "CMS_OtherRevocationInfoFormat", "otherRevInfoFormat", "otherRevInfo", "CMS_SignerInfo", "signedAttrs", "unsignedAttrs", "CMS_EncapsulatedContentInfo", "eContentType", "eContent", "CMS_SignerIdentifier", "CMS_CertificateChoices", "d.certificate", "d.extendedCertificate", "d.v1AttrCert", "d.v2AttrCert", "CMS_OtherCertificateFormat", "otherCertFormat", "otherCert", "CMS_IssuerAndSerialNumber", "cms_io.c", "cms_sd.c", "cms_dd.c", "cms_cd.c", "cmac.c", "MD4 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "SHA part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "RIPE-MD160 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "x^vXtSPMRC4 part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "rc4(ptr,char)", "Blowfish part of OpenSSL 1.0.2p-dev  xx XXX xxxx", "blowfish(ptr)", "rWpRnLI", "rWpRnLI", "bn_sqrt.c", "bn_exp2.c", "bn_gf2m.c", "ecp_mont.c", "ecp_nist.c", "ec_print.c", "rsa_gen.c", "rsa_saos.c", "rsa_pss.c", "ggen", "dsa_gen.c", "dh_gen.c", "dso_dlfcn.c", "lib%s.so", "%s.so", "symname(", "filename(", "OpenSSL 'dlfcn' shared library method", "%lu:%s:%s:%d:%s\n", "a_set.c", "'()+,-./:=?", "a_mbstr.c", "minsize=", "maxsize=", "a_bool.c", "bio_ndef.c", "asn_mime.c", "content-type", "multipart/signed", "boundary", "application/x-pkcs7-signature", "application/pkcs7-signature", "type: ", "application/x-pkcs7-mime", "application/pkcs7-mime", "Content-Type: text/plain\r\n\r\n", "-----BEGIN %s-----\n", "-----END %s-----\n", "application/x-pkcs7-", "application/pkcs7-", "smime.p7m", "certs-only", "signed-receipt", "compressed-data", "smime.p7z", "signed-data", "enveloped-data", "MIME-Version: 1.0%s", "Content-Type: multipart/signed;", " protocol=\"%ssignature\";", " micalg=\"", "sha-256", "sha-384", "sha-512", "gostr3411-94", "\"; boundary=\"----%s\"%s%s", "This is an S/MIME signed message%s%s", "------%s%s", "%s------%s%s", "Content-Type: %ssignature;", " name=\"smime.p7s\"%s", "Content-Transfer-Encoding: base64%s", "Content-Disposition: attachment;", " filename=\"smime.p7s\"%s%s", "%s------%s--%s%s", " name=\"%s\"%s", "Content-Transfer-Encoding: base64%s%s", " filename=\"%s\"%s", "Content-Type: %smime;", " smime-type=%s;", "text/plain", "bio_b64.c", "ctx->buf_len >= ctx->buf_off", "ctx->buf_off + i < (int)sizeof(ctx->buf)", "ctx->buf_off < (int)sizeof(ctx->buf)", "ctx->buf_len <= (int)sizeof(ctx->buf)", "i <= n", "ctx->buf_off <= (int)sizeof(ctx->buf)", "ctx->tmp_len <= 3", "base64 encoding", "bio_asn1.c", "ctx->buflen <= ctx->bufsize", "asn1", "(knNx264 [%s]: ", "malloc of size %d failed\n", "%dx%d ", "fps=%u/%u ", "timebase=%u/%u ", "bitdepth=%d ", "opencl=%d ", "cabac=%d", " ref=%d", " deblock=%d:%d:%d", " analyse=%#x:%#x", " me=%s", " subme=%d", " psy=%d", " psy_rd=%.2f:%.2f", " mixed_ref=%d", " me_range=%d", " chroma_me=%d", " trellis=%d", " 8x8dct=%d", " cqm=%d", " deadzone=%d,%d", " fast_pskip=%d", " chroma_qp_offset=%d", " threads=%d", " lookahead_threads=%d", " sliced_threads=%d", " slices=%d", " slices_max=%d", " slice_max_size=%d", " slice_max_mbs=%d", " slice_min_mbs=%d", " nr=%d", " decimate=%d", " interlaced=%s", "fake", " bluray_compat=%d", " stitchable=%d", " constrained_intra=%d", " bframes=%d", " b_pyramid=%d b_adapt=%d b_bias=%d direct=%d weightb=%d open_gop=%d", " weightp=%d", " keyint=infinite", " keyint=%d", " keyint_min=%d scenecut=%d intra_refresh=%d", " rc_lookahead=%d", " rc=%s mbtree=%d", "2pass", " crf=%.1f", " bitrate=%d ratetol=%.1f", " qcomp=%.2f qpmin=%d qpmax=%d qpstep=%d", " cplxblur=%.1f qblur=%.1f", " vbv_maxrate=%d vbv_bufsize=%d", " crf_max=%.1f", " qp=%d", " nal_hrd=%s filler=%d", " crop_rect=%u,%u,%u,%u", " frame-packing=%d", " ip_ratio=%.2f", " pb_ratio=%.2f", " aq=%d", " zones=%s", " zones", "x264_2pass.log", "invalid preset '%s'\n", ",./-+", "touhou", "invalid tune '%.*s'\n", "only 1 psy tuning can be used: ignoring tune %.*s\n", "invalid profile: %s\n", "%s profile doesn't support lossless\n", "%s profile doesn't support 4:4:4\n", "%s profile doesn't support 4:2:2\n", "%s profile doesn't support a bit depth of %d\n", "%s profile doesn't support 4:0:0\n", "baseline profile doesn't support interlacing\n", "baseline profile doesn't support fake interlacing\n", "lookahead-threads", "sliced-threads", "sync-lookahead", "n-deterministic", "cpu-independent", "level-idc", "avcintra-flavor", "overscan", "videoformat", "fullrange", "colorprim", "colormatrix", "chromaloc", "alternative-transfer", "frameref", "dpb-size", "min-keyint", "keyint-min", "scenecut", "bframes", "b-adapt", "open-gop", "slice-max-mbs", "slice-min-mbs", "slices-max", "cabac-idc", "constrained-intra", "cqmfile", "cqm4", "cqm8", "cqm4i", "cqm4p", "cqm4iy", "cqm4ic", "cqm4py", "cqm4pc", "cqm8i", "cqm8p", "dump-yuv", "analyse", "i4x4", "i8x8", "p8x8", "p4x4", "b8x8", "weight-b", "chroma-qp-offset", "merange", "me-range", "mvrange", "mv-range", "mvrange-thread", "mv-range-thread", "subme", "%f:%f", "%f,%f", "%f|%f", "chroma-me", "dct-decimate", "deadzone-inter", "deadzone-intra", "qp_constant", "crf-max", "qpmin", "qp-min", "qpmax", "qp-max", "qpstep", "qp-step", "ratetol", "vbv-maxrate", "vbv-bufsize", "vbv-init", "ipratio", "ip-factor", "pbratio", "pb-factor", "cplx-blur", "crop-rect", "sps-id", "global-header", "repeat-headers", "force-cfr", "filler", "pic-struct", "fake-interlaced", "frame-packing", "stitchable", "opencl", "opencl-clbin", "opencl-device", "panasonic", "sony", "undef", "component", "secam", "smpte428", "smpte431", "smpte432", "bt2020-12", "arib-std-b67", "smpte2085", "chroma-derived-nc", "chroma-derived-c", "ICtCp", "ARMv8", "NEON", "not compiled with %d bit depth support\n", "Effective timebase denominator %u exceeds H.264 maximum\n", "using cpu capabilities:", "SSE2", "SSE3", "SSE4.1", "LZCNT", "BMI1", "FMA4", " none!", "CLZ test failed: x264 has been miscompiled!\n", "HRD bitrate: %i bits/sec\n", "CPB size: %i bits\n", "dump_yuv: can't write to %s\n", "dump_yuv: incompatible with non-regular file %s\n", "profile %s, level %s, %s, %d-bit\n", "x264_encoder_invalidate_reference is not supported with B-frames enabled\n", "x264_encoder_invalidate_reference is not supported with intra refresh enabled\n", "lookahead thread is already stopped\n", "non-strictly-monotonic PTS\n", "../../x264/encoder/encoder.c", "void x264_8_encoder_close(x264_t *)", "h->thread[i]->fenc->i_reference_count == 1", "frame %c:%-5d Avg QP:%5.2f  size:%6.0f  PSNR Mean Y:%5.2f U:%5.2f V:%5.2f Avg:%5.2f Global:%5.2f\n", "frame %c:%-5d Avg QP:%5.2f  size:%6.0f\n", "consecutive B-frames:%s\n", "mb I  %s\n", "mb P  %s  P16..4: %4.1f%% %4.1f%% %4.1f%% %4.1f%% %4.1f%%    skip:%4.1f%%\n", "  B16..8: %4.1f%% %4.1f%% %4.1f%%  direct:%4.1f%%  skip:%4.1f%%", "  L0:%4.1f%% L1:%4.1f%% BI:%4.1f%%", "mb B  %s\n", " inter:%.1f%%", "8x8 transform intra:%.1f%%%s\n", "direct mvs  spatial:%.1f%% temporal:%.1f%%\n", " inter: %.1f%% %.1f%% %.1f%%", "coded y,%s,%s intra: %.1f%% %.1f%% %.1f%%%s\n", "uvDC", "uvAC", "i16 v,h,dc,p: %2.0f%% %2.0f%% %2.0f%% %2.0f%%\n", "i%d v,h,dc,ddl,ddr,vr,hd,vl,hu: %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%%\n", "i8c dc,h,v,p: %2.0f%% %2.0f%% %2.0f%% %2.0f%%\n", " UV:%.1f%%", "Weighted P-Frames: Y:%.1f%%%s\n", "ref %c L%d:%s\n", "SSIM Mean Y:%.7f (%6.3fdb)\n", "PSNR Mean Y:%6.3f U:%6.3f V:%6.3f Avg:%6.3f Global:%6.3f kb/s:%.2f\n", "(*frame)->i_reference_count > 0", "pf_log not set! did you forget to call x264_param_default?\n", "not compiled with interlaced support\n", "invalid width x height (%dx%d)\n", "not compiled with 4:0:0 support\n", "not compiled with 4:2:2 support\n", "not compiled with 4:4:4 support\n", "invalid CSP (only I400/I420/YV12/NV12/NV21/I422/YV16/NV16/YUYV/UYVY/I444/YV24/BGR/BGRA/RGB supported)\n", "width not divisible by %d (%dx%d)\n", "height not divisible by %d (%dx%d)\n", "invalid crop-rect %u,%u,%u,%u\n", "crop-rect %u,%u,%u,%u not divisible by %dx%d\n", "OpenCL: not compiled with OpenCL support, disabling\n", "OpenCL: device id and device skip count configured; dropping skip\n", "ignoring unknown frame packing value\n", "cropped resolution %dx%d not compatible with tile format frame packing\n", "broken ffmpeg default settings detected\n", "use an encoding preset (e.g. -vpre medium)\n", "preset usage: -vpre <speed> -vpre <profile>\n", "speed presets are listed in x264 --help\n", "profile is optional; x264 defaults to high\n", "no ratecontrol method specified\n", "%2d-bit AVC-Intra is not widely compatible\n", "10-bit x264 is required to encode AVC-Intra\n", "qp not specified\n", "bitrate not specified\n", "VBV is incompatible with constant QP, ignored.\n", "VBV maxrate unspecified, assuming CBR\n", "VBV bufsize set but maxrate unspecified, ignored\n", "max bitrate less than average bitrate, assuming CBR\n", "VBV maxrate specified, but no bufsize, ignored\n", "slice-min-mbs > row mb size (%d) not implemented\n", "subme=0 + direct=temporal is not supported\n", "b-pyramid normal + intra-refresh is not supported\n", "ref > 1 + intra-refresh is not supported\n", "intra-refresh is not compatible with open-gop\n", "lookaheadless mb-tree requires intra refresh or infinite keyint\n", "--%s used with psy on: results will be invalid!\n", "--ssim used with AQ off: results will be invalid!\n", "--psnr used with AQ on: results will be invalid!\n", "--tune %s should be used if attempting to benchmark %s!\n", "invalid level_idc: %d\n", "using mv_range_thread = %d\n", "NAL HRD parameters require VBV parameters\n", "CBR HRD requires constant bitrate\n", "cannot create valid sample aspect ratio\n", "using SAR=%d/%d\n", "void reference_build_list(x264_t *, int)", "h->i_ref[0] + h->i_ref[1] <= X264_REF_MAX", "void weighted_pred_init(x264_t *)", "x264_clip3( denom, 0, 7 ) == denom", "h->sh.weight[j][i].i_denom == denom", "slice-max-size violated (frame %d, cause: slice-min-mbs)\n", "void slice_header_write(bs_t *, x264_slice_header_t *, int)", "(first_y&1) == 0", "invalid DTS: PTS is less than DTS\n", " PSNR Y:%5.2f U:%5.2f V:%5.2f", " SSIM Y:%.5f", "frame=%4d QP=%.2f NAL=%d Slice:%c Poc:%-3d I:%-4d P:%-4d SKIP:%-4d size=%d bytes%s\n", "I16..4%s: %4.1f%% %4.1f%% %4.1f%%", "..PCM", "../../x264/encoder/lookahead.c", "void lookahead_shift(x264_sync_frame_list_t *, x264_sync_frame_list_t *, int)", "dst->i_size < dst->i_max_size", "src->i_size", "../../x264/common/macroblock.c", "void x264_8_macroblock_bipred_init(x264_t *)", "dist_scale_factor >= -63 && dist_scale_factor <= 127", "This build of x264 requires 8-bit input. Rebuild to support high depth input.\n", "v210 input is only compatible with bit-depth of 10 bits\n", "forced frame type (%d) at %d is unknown\n", "../../x264/common/frame.c", "x264_frame_t *x264_8_frame_pop(x264_frame_t **)", "list[0]", "x264_frame_t *x264_8_frame_shift(x264_frame_t **)", "void x264_8_frame_push_unused(x264_t *, x264_frame_t *)", "frame->i_reference_count > 0", "void x264_8_frame_push_blank_unused(x264_t *, x264_frame_t *)", "Input picture width (%d) is greater than stride (%d)\n", "can't open file '%s'\n", "INTRA4X4_LUMA", "INTER4X4_LUMA", "INTRA4X4_CHROMA", "INTER4X4_CHROMA", "INTRA8X8_LUMA", "INTER8X8_LUMA", " \t\n,", "0123456789", "bad coefficient in list '%s'\n", "not enough coefficients in list '%s'\n", "void x264_8_macroblock_analyse(x264_t *)", "h->mb.cache.pskip_mv[1] <= h->mb.mv_max_spel[1] || h->i_thread_frames == 1", "internal error (!8x8 && !4x4)\n", "../../x264/encoder/slicetype.c", "void x264_8_slicetype_analyse(x264_t *, int)", "h->frames.b_have_lowres", "forced frame type (%d) at %d was changed to frame type (%d)\n", "B-ref at frame %d incompatible with B-pyramid %s \n", "B-ref at frame %d incompatible with B-pyramid %s and %d reference frames\n", "specified frame type (%d) at %d is not compatible with keyframe interval\n", "specified frame type is not compatible with max B-frames\n", "int x264_8_rc_analyse_slice(x264_t *)", "cost >= 0", "../../x264/encoder/cabac.c", "void cabac_8x8_mvd(x264_t *, x264_cabac_t *, int)", "void mb_analyse_inter_p16x16(x264_t *, x264_mb_analysis_t *)", "a->l0.me16x16.mv[1] <= h->mb.mv_max_spel[1] || h->i_thread_frames == 1", "internal error\n", "internal error P_L0 and partition=%d\n", "internal error (invalid MB type)\n", "internal error (MV out of thread range)\n", "mb type: %d \n", "mv: l%dr%d (%d,%d) \n", "limit: %d \n", "mb_xy: %d,%d \n", "completed: %d \n", "recovering by using intra mode\n", "scene cut at %d Icost:%d Pcost:%d ratio:%.4f bias:%.4f gop:%d (imb:%d pmb:%d)\n", "PBIMB-tree frametype %d doesn't match actual frametype %d.\n", "Incomplete MB-tree stats file.\n", "VBV buffer size cannot be smaller than one frame, using %d kbit\n", "VBV parameters cannot be changed when NAL HRD is in use\n", "CRF max must be greater than CRF\n", "CRF/CQP is incompatible with 2pass.\n", "HRD with very large timescale and bufsize not supported\n", "bitrate tolerance too small, using .01\n", "failed to parse zones\n", "../../x264/encoder/ratecontrol.c", "int x264_8_ratecontrol_new(x264_t *)", "h->param.rc.psz_stat_in", "ratecontrol_init: can't open stats file\n", "ratecontrol_init: can't open mbtree stats file\n", "#options:", "options list in stats file not valid\n", "#options: %dx%d", "resolution specified in stats file not valid\n", "timebase=", "timebase=%u/%u", "timebase specified in stats file not valid\n", "timebase mismatch with 1st pass (%u/%u vs %u/%u)\n", "bitdepth=", "bitdepth=%d", "different bitdepth setting than first pass (%d vs %d)\n", "weightp=", "different weightp setting than first pass (%d vs %d)\n", "bframes=", "different bframes setting than first pass (%d vs %d)\n", "b_pyramid=", "b_pyramid=%d", "different b_pyramid setting than first pass (%d vs %d)\n", "intra_refresh=", "different intra_refresh setting than first pass (%d vs %d)\n", "open_gop=", "different open_gop setting than first pass (%d vs %d)\n", "bluray_compat=", "different bluray_compat setting than first pass (%d vs %d)\n", "mbtree=", "different mbtree setting than first pass (%d vs %d)\n", "interlaced=", "interlaced=%4s", "different interlaced setting than first pass (%s vs %s)\n", "keyint=", "different keyint setting than first pass (%.*s vs %.*s)\n", "qp=0", "1st pass was lossless, bitrate prediction will be inaccurate\n", "direct=3", "direct=auto not used on the first pass\n", "b_adapt=", "b_adapt=%d", "b_adapt method specified in stats file not valid\n", "rc_lookahead=", "empty stats file\n", "2nd pass has fewer frames than 1st pass (%d vs %d)\n", "2nd pass has more frames than 1st pass (%d vs %d)\n", " in:%d out:%d ", "bad frame number (%d) at stats line %d\n", "bad frame output number (%d) at stats line %d\n", " in:%*d out:%*d type:%c dur:%ld cpbdur:%ld q:%f aq:%f tex:%d mv:%d misc:%d imb:%d pmb:%d smb:%d d:%c", "w:%hd,%hd,%hd,%hd,%hd,%hd,%hd,%hd", "statistics are damaged at line %d, parser out=%d\n", "#options: %s\n", ".mbtree.temp", "final ratefactor: %.2f\n", "failed to rename \"%s\" to \"%s\"\n", "void x264_8_ratecontrol_start(x264_t *, int, int)", "frame >= 0 && frame < rc->num_entries", "2nd pass has more frames than 1st pass (%d)\n", "continuing anyway, at constant QP=%d\n", "disabling adaptive B-frames\n", "in:%d out:%d type:%c dur:%ld cpbdur:%ld q:%.2f aq:%.2f tex:%d mv:%d misc:%d imb:%d pmb:%d smb:%d d:%c ref:", "w:%d,%d,%d", ",%d,%d,%d,%d,%d ", "ratecontrol_end: stats file could not be written to\n", "CPB %s: %.0f bits in a %.0f-bit buffer\n", "underflow", "invalid zone: start=%d end=%d\n", "invalid zone: bitrate_factor=%f\n", "%d,%d,q=%d%n", "%d,%d,b=%f%n", "%d,%d%n", "invalid zone: \"%s\"\n", "invalid zone param: %s = %s\n", "VBV underflow due to CRF-max (frame %d, %.0f bits)\n", "VBV underflow (frame %d, %.0f bits)\n", "slice=%c but 2pass stats say %c\n", "requested bitrate is too low. estimated minimum is %d kbps\n", "int init_pass2(x264_t *)", "qscale[i] >= 0", "rce->new_qscale >= 0", "Error: 2pass curve failed to converge\n", "target: %.2f kbit/s, expected: %.2f kbit/s, avg QP: %.4f\n", "try reducing target bitrate or reducing qp_min (currently %d)\n", "try reducing target bitrate\n", "try increasing target bitrate or increasing qp_max (currently %d)\n", "try increasing target bitrate\n", "vbv-maxrate issue, qpmax or vbv-maxrate too low\n", "AVC-Intra SEI is too large (%d)\n", "frame MB size (%dx%d) > level limit (%d)\n", "DPB size (%d frames, %d mbs) > level limit (%d frames, %d mbs)\n", "VBV bitrate (%ld) > level limit (%d)\n", "VBV buffer (%ld) > level limit (%d)\n", "MV range (%ld) > level limit (%d)\n", "fake interlaced (%ld) > level limit (%d)\n", "MB rate (%ld) > level limit (%d)\n", "void x264_macroblock_cache_rect(void *, int, int, int, uint32_t)"], "stringidentifiers": ["aac_adtstoasc", "dual_mono_mode", "autoselection", "both", "fastint", "altivec", "faan", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpegb", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "HuffYUV", "cyuv", "indeo3", "theora", "Theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "Cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "Snow", "tscc", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "loco", "LOCO", "wnv1", "aasc", "indeo2", "fraps", "Fraps", "truemotion2", "cscd", "CamStudio", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "indeo4", "indeo5", "mimic", "Mimic", "escape124", "daala", "Daala", "dirac", "Dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "bmv_video", "vble", "dxtory", "Dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "xface", "smvjpeg", "Go2Meeting", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "screenpresso", "Screenpresso", "wrapped_avframe", "rscc", "alias_pix", "ansi", "brender_pix", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "tdsc", "TDSC", "vc1image", "WebP", "wmv3image", "apng", "cfhd", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_thp_le", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "adpcm_vima", "adpcm_psx", "adpcm_aica", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "vorbis", "Vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "alac", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "WavPack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "voxware", "nellymoser", "musepack8", "speex", "Speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "eac3", "sipr", "twinvq", "truehd", "TrueHD", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "qdmc", "celt", "g723_1", "dss_sp", "g729", "bmv_audio", "ralf", "ilbc", "wavesynth", "Sonic", "sonicls", "opus", "comfortnoise", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "dvd_subtitle", "dvb_subtitle", "xsub", "XSUB", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "context", "non_deterministic", "private_spspps_buf", "is_avc", "nal_length_size", "enable_er", "Q264", "stereo_mode", "Gray", "CABAC", "CAVLC", "LPAR", "CONSTR", "REDU", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "SPAT", "TEMP", "apply_defdispwin", "libx264", "libx264rgb", "preset", "medium", "tune", "fastfirstpass", "passlogfile", "wpredp", "a53cc", "x264opts", "crf_max", "aq_mode", "autovariance", "weightb", "weightp", "smart", "ssim", "b_pyramid", "normal", "mbtree", "deblock", "cplxblur", "partitions", "spatial", "temporal", "tesa", "default", "cavlc", "cabac", "b_strategy", "chromaoffset", "sc_threshold", "noise_reduction", "flags2", "i_qfactor", "b_qfactor", "qmin", "qmax", "qdiff", "qblur", "qcomp", "trellis", "me_range", "me_method", "subq", "keyint_min", "thread_type", "rc_init_occupancy", "baseline", "high", "high10", "high422", "high444", "ultrafast", "superfast", "veryfast", "faster", "slower", "veryslow", "placebo", "animation", "grain", "stillimage", "psnr", "fastdecode", "zerolatency", "mp3adufloat", "mp3on4float", "AVCodecContext", "NULL", "unaligned", "loop", "input_preserved", "pass1", "pass2", "gray", "emu_edge", "ildct", "low_delay", "global_header", "bitexact", "ilme", "output_corrupt", "noout", "ignorecrop", "local_header", "showall", "export_mvs", "skip_manual", "full", "epzs", "phods", "time_base", "frame_size", "frame_number", "rc_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "skip_count", "misc_bits", "frame_bits", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "hpel_chroma", "dc_clip", "trunc", "very", "unofficial", "experimental", "b_qoffset", "crccheck", "explode", "ignore_err", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "minrate", "rc_buf_aggressivity", "i_qoffset", "rc_init_cplx", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "favor_inter", "bits_per_coded_sample", "plane", "median", "pict", "dct_coeff", "green_metadata", "startcode", "mmco", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "nomc", "vismv", "debug_mv", "cmp_func", "subcmp", "ildctcmp", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "pre_dia_size", "dtg_active_format", "ibias", "pbias", "global_quality", "deflate", "slice_flags", "xvmc_acceleration", "stream_codec_tag", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "unknown", "aac_main", "aac_ssr", "aac_ltp", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "noref", "bidir", "nokey", "nointra", "bidir_refine", "brd_scale", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "color_primaries", "color_primaries_type", "bt709", "unspecified", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "Film", "bt2020", "smpte428_1", "color_trc", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "smpte2084", "colorspace", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "mpeg", "chroma_sample_location", "chroma_sample_location_type", "Left", "Center", "topleft", "bottomleft", "Bottom", "log_level_offset", "slices", "slice", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "field_order", "progressive", "dump_separator", "codec_whitelist", "pixel_format", "video_size", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVSubtitleRect", "forced", "Main", "Extended", "High", "Rext", "Simple", "Reserved", "Complex", "Advanced", "I420", "IYUV", "YUYVw", "BGR0C", "J444Z", "I40AY", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "ReSampleContext", "audioresample", "unknown_codec", "aformat", "sample_fmts", "sample_rates", "channel_layouts", "amix", "inputs", "longest", "shortest", "dropout_transition", "fixed", "double", "eval", "replaygain", "drop", "ignore", "replaygain_preamp", "replaygain_noclip", "nb_channels", "nb_consumed_samples", "nb_samples", "startpts", "startt", "anullsrc", "stereo", "AVFilterGraph", "scale_sws_opts", "aresample_swr_opts", "afifo", "enable", "noformat", "frei0r", "frei0r_src", "aevalsrc", "AVFilter", "abuffersink", "pix_fmts", "all_channel_counts", "abuffer", "pix_fmt", "time_base_num", "time_base_den", "sar_num", "sar_den", "pixel_aspect", "frame_rate", "sws_param", "APETAGEX", "AVIOContext", "protocol_whitelist", "URLContext", "subfile", "decryption_key", "decryption_iv", "encryption_key", "encryption_iv", "language", "palette", "effects", "dialogue", "comentary", "emergency", "karaoke", "truncate", "flv_metadata", "Encoder", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "videodatarate", "audiodatarate", "datastream", "videocodecreal", "videocodecid", "audiocodecid", "audiosamplerate", "audiosamplesize", "metadatacreator", "MEGA", "filesize", "framerate", "true", "false", "times", "filepositions", "live_flvdec", "ssegment", "image2", "mime_type", "live_start_index", "cookies", "http_proxy", "seekable", "variant_bitrate", "EVENT", "SUBTITLES", "user_agent", "end_offset", "PRIV", "APIC", "comment", "https", "no_proxy", "ijkapplication", "chunked", "Connection", "close", "Server", "AkamaiGHost", "MediaGateway", "gzip", "identity", "Forbidden", "icy_metadata_packet", "chunked_post", "content_type", "multiple_requests", "post_data", "icy_metadata_headers", "auth_type", "basic", "send_expect_100", "reconnect", "reconnect_at_eof", "reconnect_streamed", "reconnect_delay_max", "resource", "reply_code", "AVApplicationContext", "Blues", "Country", "Dance", "Disco", "Grunge", "Oldies", "Other", "Reggae", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Trance", "Classical", "Instrumental", "Acid", "Game", "Gospel", "AlternRock", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "genre", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TDATTIMETORYTRDATSIZTYER", "TALB", "TCOM", "TCON", "TCOP", "copyright", "TENC", "encoded_by", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "USLT", "lyrics", "TCMP", "compilation", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "TSOP", "TSOT", "Conductor", "Composer", "Illustration", "compression", "encrypted", "TXXX", "TYER", "TDAT", "TIME", "GEOB", "CHAP", "ljpg", "im24", "im32", "sunras", "yuv10", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "sac3", "alac", "twos", "lpcm", "ssmv", "c608", "rtpo", "mp4a", "tx3g", "avc1k", "VP6F", "text", "movflags", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "default_base_moof", "dash", "frag_discont", "delay_moov", "global_sidx", "write_colr", "write_gama", "rtpflags", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "min_frag_duration", "frag_size", "ism_lookahead", "video_track_timescale", "use_editlist", "fragment_index", "mov_gamma", "frag_interleave", "encryption_scheme", "encryption_kid", "ipod", "wide", "free", "systemBitrate", "trackID", "CodecPrivateData", "FourCC", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "rotate", "dhlr", "DataHandler", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "clcp", "ClosedCaptionHandler", "sbtl", "subp", "SubtitleHandler", "HintHandler", "tmcd", "TimeCodeHandler", "handler", "XDCAM", "DpxE", "reel_name", "stss", "stps", "perf", "titl", "author", "gnre", "dscp", "albm", "cprt", "yrrc", "make", "aART", "encoding_tool", "grouping", "ldes", "synopsis", "tvsh", "tven", "episode_id", "tvnn", "network", "tves", "episode_sort", "tvsn", "season_number", "stik", "media_type", "hdvd", "hd_video", "pgap", "gapless_playback", "cpil", "disk", "trkn", "tmpo", "compatible_brands", "nclx", "nclc", "major_brand", "minor_version", "handler_name", "iTunSMPB", "cdec", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "episode_uid", "keywords", "podcast", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "host_computer", "original_artist", "performers", "playback_requirements", "original_source", "warning", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "ignore_chapters", "use_mfra_for", "export_all", "export_xmp", "activation_bytes", "audible_fixed_key", "enable_drefs", "usetoc", "drac", "HEVC", "mpegts", "mpegtsraw", "service_name", "service_provider", "resync_size", "fix_teletext_pts", "ts_packetsize", "scan_all_pmts", "skip_changes", "skip_clear", "compute_pcr", "NOPTS", "AVFormatContext", "avioflags", "direct", "formatprobesize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "hls_cdn_ip", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "BottomUp", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "notification", "invoke", "rtmpe", "rtmps", "rtmpt", "rtmpte", "rtmpts", "ffrtmphttp_tls", "ffrtmphttp", "ffrtmpcrypt_tunneling", "ffrtmpcrypt", "ondemand", "rtmp_swfhash", "nonprivate", "flashVer", "swfUrl", "tcUrl", "fpad", "capabilities", "audioCodecs", "videoCodecs", "videoFunction", "pageUrl", "_result", "fmsVer", "status", "objectEncoding", "onBWDone", "_error", "onStatus", "releaseStream", "_checkbw", "createStream", "FCSubscribe", "getStreamLength", "salt", "opaque", "challenge", "nonce", "onFCPublish", "details", "clientid", "FCUnpublish", "deleteStream", "pause", "rtmp_app", "rtmp_buffer", "rtmp_conn", "rtmp_flashver", "rtmp_flush_interval", "rtmp_live", "recorded", "rtmp_pageurl", "rtmp_playpath", "rtmp_subscribe", "rtmp_swfsize", "rtmp_swfurl", "rtmp_swfverify", "rtmp_tcurl", "rtmp_listen", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "listen_timeout", "send_buffer_size", "recv_buffer_size", "httpproxy", "cafile", "cert", "ca_file", "tls_verify", "cert_file", "key_file", "verifyhost", "pipe", "cache", "copy", "dvbsub", "loas", "mpegvideo", "quad", "hexagonal", "octagonal", "hexadecagonal", "downmix", "LFE2", "armv8", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INPUT_CHANGED", "INVALIDDATA", "OPTION_NOT_FOUND", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "INPUT_AND_OUTPUT_CHANGED", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "Eval", "QP2LAMBDA", "FILE", "YCgCo", "AVPanScan", "AVMatrixEncoding", "AVReplayGain", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA384", "SHA512", "CRC32", "adler32", "IMGUTILS", "quiet", "verbose", "fatal", "panic", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "pixel", "INT64_MAX", "INT64_MIN", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "random", "bikeshed", "qntsc", "qpal", "sntsc", "spal", "sqcif", "qqvga", "svga", "qxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "hqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "CornflowerBlue", "Cornsilk", "Crimson", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Plum", "PowderBlue", "RosyBrown", "RoyalBlue", "SaddleBrown", "SandyBrown", "SeaShell", "Sienna", "Silver", "Teal", "Thistle", "Tomato", "Wheat", "WhiteSmoke", "YellowGreen", "bgra", "bgr32", "rgba", "bayer_", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "gray16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "rgb0", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "yuvj", "log100", "log316", "bt1361e", "ycgco", "bt2020nc", "bt2020c", "s16p", "s32p", "fltp", "dblp", "attachment", "x00000x", "p000x", "p00000x", "p000x", "p000x", "p000x", "fffffff", "in_channel_count", "out_channel_count", "used_channel_count", "out_sample_rate", "in_sample_fmt", "out_sample_fmt", "internal_sample_fmt", "in_channel_layout", "out_channel_layout", "clev", "center_mix_level", "slev", "surround_mix_level", "lfe_mix_level", "rmvol", "rematrix_volume", "rematrix_maxval", "swr_flags", "dither_scale", "dither_method", "rectangular", "triangular", "triangular_hp", "lipshitz", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "filter_size", "phase_shift", "linear_interp", "resample_cutoff", "resampler", "soxr", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "dolby", "dplii", "filter_type", "blackman_nuttall", "kaiser", "kaiser_beta", "output_sample_bits", "SWScaler", "swscaler", "sws_flags", "fast_bilinear", "bicubic", "bicublin", "gauss", "Gaussian", "lanczos", "Lanczos", "print_info", "accurate_rnd", "full_chroma_int", "full_chroma_inp", "error_diffusion", "srcw", "srch", "dstw", "dsth", "src_format", "dst_format", "src_range", "dst_range", "param0", "param1", "src_v_chr_pos", "src_h_chr_pos", "dst_v_chr_pos", "dst_h_chr_pos", "sws_dither", "bayer", "a_dither", "x_dither", "alphablend", "uniform_color", "ECDSA", "SRTP_AES128_CM_SHA1_80", "SRTP_AES128_CM_SHA1_32", "TLSv1", "SSLv3", "DTLSv1", "ssl_client", "ssl_server", "STRENGTH", "md_gost94", "SUITEB128ONLY", "SUITEB128C2", "SUITEB128", "SUITEB192", "gost2001", "DEFAULT", "gost94", "KRB5", "ECDH", "GOST", "None", "GOST94", "GOST01", "AEAD", "COMPLEMENTOFALL", "COMPLEMENTOFDEFAULT", "kRSA", "kDHr", "kDHd", "kEDH", "kDHE", "kKRB5", "kECDHr", "kECDHe", "kECDH", "kEECDH", "kECDHE", "kPSK", "kSRP", "kGOST", "aRSA", "aDSS", "aKRB5", "aNULL", "aECDH", "aECDSA", "aPSK", "aGOST94", "aGOST01", "aGOST", "aSRP", "EECDH", "ECDHE", "AECDH", "IDEA", "SEED", "eNULL", "AES128", "AES256", "AESGCM", "CAMELLIA128", "CAMELLIA256", "CAMELLIA", "GOST89MAC", "EXPORT", "EXPORT40", "EXPORT56", "MEDIUM", "HIGH", "FIPS", "SSLERR", "DRCHVA", "DRCHVB", "DWCHVA", "DWCHVB", "warning", "fatal", "unexpected_message", "DSS1", "dss1", "krb5", "uninitialized", "CHECK_SUITEB_CIPHER_LIST", "CLIENT_CERTIFICATE", "CLIENT_FINISHED", "CLIENT_HELLO", "CLIENT_MASTER_KEY", "d2i_SSL_SESSION", "do_dtls1_write", "DO_SSL3_WRITE", "dtls1_accept", "DTLS1_ADD_CERT_TO_BUF", "DTLS1_BUFFER_RECORD", "dtls1_check_timeout_num", "dtls1_client_hello", "dtls1_connect", "DTLS1_GET_HELLO_VERIFY", "dtls1_get_message", "DTLS1_GET_MESSAGE_FRAGMENT", "dtls1_get_record", "dtls1_handle_timeout", "dtls1_heartbeat", "dtls1_output_cert_chain", "DTLS1_PREPROCESS_FRAGMENT", "DTLS1_PROCESS_BUFFERED_RECORDS", "DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE", "DTLS1_PROCESS_RECORD", "dtls1_read_bytes", "dtls1_read_failed", "dtls1_send_certificate_request", "dtls1_send_client_certificate", "dtls1_send_client_key_exchange", "dtls1_send_client_verify", "DTLS1_SEND_HELLO_VERIFY_REQUEST", "dtls1_send_server_certificate", "dtls1_send_server_hello", "dtls1_send_server_key_exchange", "dtls1_write_app_data_bytes", "GET_CLIENT_FINISHED", "GET_CLIENT_HELLO", "GET_CLIENT_MASTER_KEY", "GET_SERVER_FINISHED", "GET_SERVER_HELLO", "GET_SERVER_STATIC_DH_KEY", "GET_SERVER_VERIFY", "i2d_SSL_SESSION", "READ_N", "REQUEST_CERTIFICATE", "SERVER_FINISH", "SERVER_HELLO", "SERVER_VERIFY", "ssl23_accept", "SSL23_CLIENT_HELLO", "ssl23_connect", "SSL23_GET_CLIENT_HELLO", "SSL23_GET_SERVER_HELLO", "ssl23_peek", "ssl23_read", "ssl23_write", "ssl2_accept", "ssl2_connect", "ssl2_enc_init", "ssl2_generate_key_material", "ssl2_peek", "ssl2_read", "SSL2_READ_INTERNAL", "ssl2_set_certificate", "ssl2_write", "ssl3_accept", "SSL3_ADD_CERT_TO_BUF", "ssl3_callback_ctrl", "ssl3_change_cipher_state", "ssl3_check_cert_and_algorithm", "ssl3_check_client_hello", "SSL3_CHECK_FINISHED", "ssl3_client_hello", "ssl3_connect", "ssl3_ctrl", "ssl3_ctx_ctrl", "ssl3_digest_cached_records", "ssl3_do_change_cipher_spec", "ssl3_enc", "SSL3_GENERATE_KEY_BLOCK", "ssl3_generate_master_secret", "ssl3_get_certificate_request", "ssl3_get_cert_status", "ssl3_get_cert_verify", "ssl3_get_client_certificate", "ssl3_get_client_hello", "ssl3_get_client_key_exchange", "ssl3_get_finished", "ssl3_get_key_exchange", "ssl3_get_message", "ssl3_get_new_session_ticket", "ssl3_get_next_proto", "SSL3_GET_RECORD", "ssl3_get_server_certificate", "ssl3_get_server_done", "ssl3_get_server_hello", "ssl3_handshake_mac", "SSL3_NEW_SESSION_TICKET", "ssl3_output_cert_chain", "ssl3_peek", "ssl3_read_bytes", "ssl3_read_n", "ssl3_send_certificate_request", "ssl3_send_client_certificate", "ssl3_send_client_key_exchange", "ssl3_send_client_verify", "ssl3_send_server_certificate", "ssl3_send_server_hello", "ssl3_send_server_key_exchange", "ssl3_setup_key_block", "ssl3_setup_read_buffer", "ssl3_setup_write_buffer", "ssl3_write_bytes", "ssl3_write_pending", "ssl_add_cert_chain", "SSL_ADD_CERT_TO_BUF", "ssl_add_clienthello_renegotiate_ext", "ssl_add_clienthello_tlsext", "ssl_add_clienthello_use_srtp_ext", "SSL_add_dir_cert_subjects_to_stack", "SSL_add_file_cert_subjects_to_stack", "ssl_add_serverhello_renegotiate_ext", "ssl_add_serverhello_tlsext", "ssl_add_serverhello_use_srtp_ext", "ssl_bad_method", "ssl_build_cert_chain", "ssl_bytes_to_cipher_list", "ssl_cert_dup", "ssl_cert_inst", "SSL_CERT_INSTANTIATE", "ssl_cert_new", "SSL_check_private_key", "SSL_CHECK_SERVERHELLO_TLSEXT", "ssl_check_srvr_ecc_cert_and_alg", "SSL_CIPHER_PROCESS_RULESTR", "SSL_CIPHER_STRENGTH_SORT", "SSL_clear", "SSL_COMP_add_compression_method", "SSL_CONF_cmd", "ssl_create_cipher_list", "SSL_ctrl", "SSL_CTX_check_private_key", "SSL_CTX_MAKE_PROFILES", "SSL_CTX_new", "SSL_CTX_set_cipher_list", "SSL_CTX_set_client_cert_engine", "SSL_CTX_set_purpose", "SSL_CTX_set_session_id_context", "SSL_CTX_set_ssl_version", "SSL_CTX_set_trust", "SSL_CTX_use_certificate", "SSL_CTX_use_certificate_ASN1", "SSL_CTX_use_certificate_chain_file", "SSL_CTX_use_certificate_file", "SSL_CTX_use_PrivateKey", "SSL_CTX_use_PrivateKey_ASN1", "SSL_CTX_use_PrivateKey_file", "SSL_CTX_use_psk_identity_hint", "SSL_CTX_use_RSAPrivateKey", "SSL_CTX_use_RSAPrivateKey_ASN1", "SSL_CTX_use_RSAPrivateKey_file", "SSL_CTX_use_serverinfo", "SSL_CTX_use_serverinfo_file", "SSL_do_handshake", "ssl_get_new_session", "ssl_get_prev_session", "SSL_GET_SERVER_CERT_INDEX", "SSL_GET_SERVER_SEND_CERT", "ssl_get_server_send_pkey", "ssl_get_sign_pkey", "ssl_init_wbio_buffer", "SSL_load_client_CA_file", "SSL_new", "ssl_parse_clienthello_renegotiate_ext", "ssl_parse_clienthello_tlsext", "ssl_parse_clienthello_use_srtp_ext", "ssl_parse_serverhello_renegotiate_ext", "ssl_parse_serverhello_tlsext", "ssl_parse_serverhello_use_srtp_ext", "SSL_peek", "ssl_prepare_clienthello_tlsext", "ssl_prepare_serverhello_tlsext", "SSL_read", "SSL_RSA_PRIVATE_DECRYPT", "SSL_RSA_PUBLIC_ENCRYPT", "SSL_SCAN_CLIENTHELLO_TLSEXT", "SSL_SCAN_SERVERHELLO_TLSEXT", "ssl_session_dup", "SSL_SESSION_new", "SSL_SESSION_print_fp", "SSL_SESSION_set1_id_context", "ssl_sess_cert_new", "SSL_SET_CERT", "SSL_set_cipher_list", "SSL_set_fd", "SSL_SET_PKEY", "SSL_set_purpose", "SSL_set_rfd", "SSL_set_session", "SSL_set_session_id_context", "SSL_set_session_ticket_ext", "SSL_set_trust", "SSL_set_wfd", "SSL_shutdown", "SSL_SRP_CTX_init", "ssl_undefined_const_function", "ssl_undefined_function", "ssl_undefined_void_function", "SSL_use_certificate", "SSL_use_certificate_ASN1", "SSL_use_certificate_file", "SSL_use_PrivateKey", "SSL_use_PrivateKey_ASN1", "SSL_use_PrivateKey_file", "SSL_use_psk_identity_hint", "SSL_use_RSAPrivateKey", "SSL_use_RSAPrivateKey_ASN1", "SSL_use_RSAPrivateKey_file", "ssl_verify_cert_chain", "SSL_write", "tls12_check_peer_sigalg", "tls1_cert_verify_mac", "tls1_change_cipher_state", "TLS1_CHECK_SERVERHELLO_TLSEXT", "tls1_enc", "tls1_export_keying_material", "TLS1_GET_CURVELIST", "tls1_heartbeat", "TLS1_PREPARE_CLIENTHELLO_TLSEXT", "TLS1_PREPARE_SERVERHELLO_TLSEXT", "tls1_prf", "tls1_setup_key_block", "tls1_set_server_sigalgs", "WRITE_PENDING", "CLNT", "SRVR", "CONNECT", "dynamic", "ERROR", "ex_data", "x509", "x509_info", "x509_pkey", "x509_crl", "x509_req", "evp_pkey", "x509_store", "ssl_ctx", "ssl_cert", "ssl_session", "ssl_sess_cert", "ssl_method", "rand", "rand2", "debug_malloc", "gethostbyname", "getservbyname", "readdir", "RSA_blinding", "debug_malloc2", "dynlock", "ecdsa", "ecdh", "ec_pre_comp", "store", "comp", "fips", "fips2", "UNDEF", "undefined", "rsadsi", "pkcs", "rsaEncryption", "md2WithRSAEncryption", "md5WithRSAEncryption", "X500", "X509", "commonName", "countryName", "localityName", "stateOrProvinceName", "organizationName", "organizationalUnitName", "pkcs7", "pkcs3", "dhKeyAgreement", "shaWithRSAEncryption", "pkcs9", "emailAddress", "unstructuredName", "contentType", "messageDigest", "signingTime", "countersignature", "challengePassword", "unstructuredAddress", "extendedCertificateAttributes", "Netscape", "nsCertExt", "nsDataType", "sha1", "sha1WithRSAEncryption", "dsaWithSHA", "PBKDF2", "nsCertType", "nsBaseUrl", "nsRevocationUrl", "nsCaRevocationUrl", "nsRenewalUrl", "nsCaPolicyUrl", "nsSslServerName", "nsComment", "nsCertSequence", "subjectKeyIdentifier", "keyUsage", "privateKeyUsagePeriod", "subjectAltName", "issuerAltName", "basicConstraints", "crlNumber", "certificatePolicies", "authorityKeyIdentifier", "MDC2", "mdc2", "mdc2WithRSA", "givenName", "surname", "initials", "crlDistributionPoints", "md5WithRSA", "serialNumber", "title", "description", "pbeWithMD5AndCast5CBC", "dsaWithSHA1", "sha1WithRSA", "dsaEncryption", "RIPEMD160", "ripemd160", "ripemd160WithRSA", "ZLIB", "extendedKeyUsage", "PKIX", "serverAuth", "clientAuth", "codeSigning", "emailProtection", "timeStamping", "msCodeInd", "msCodeCom", "msCTLSign", "msSGC", "msEFS", "nsSGC", "deltaCRL", "CRLReason", "invalidityDate", "SXNetID", "pbeWithSHA1And128BitRC4", "pbeWithSHA1And40BitRC4", "keyBag", "pkcs8ShroudedKeyBag", "certBag", "crlBag", "secretBag", "safeContentsBag", "friendlyName", "localKeyID", "x509Certificate", "sdsiCertificate", "x509Crl", "PBES2", "PBMAC1", "hmacWithSHA1", "msExtReq", "extReq", "dnQualifier", "authorityInfoAccess", "OCSP", "caIssuers", "OCSPSigning", "X9cm", "pkcs1", "pkcs5", "SMIME", "biometricInfo", "qcStatements", "aaControls", "textNotice", "ipsecEndSystem", "ipsecTunnel", "ipsecUser", "DVCS", "dvcs", "ad_timestamping", "AD_DVCS", "basicOCSPResponse", "CrlID", "acceptableResponses", "noCheck", "archiveCutoff", "serviceLocator", "extendedStatus", "path", "trustRoot", "rsaSignature", "X500algorithms", "IANA", "iana", "Directory", "mgmt", "Management", "experimental", "Experimental", "private", "Private", "security", "Security", "snmpv2", "SNMPv2", "Mail", "enterprises", "Enterprises", "dcobject", "dcObject", "domainComponent", "domain", "Domain", "clearance", "md4WithRSAEncryption", "subjectInfoAccess", "role", "policyConstraints", "targetInformation", "noRevAvail", "prime192v1", "prime192v2", "prime192v3", "prime239v1", "prime239v2", "prime239v3", "prime256v1", "CSPName", "holdInstructionCode", "holdInstructionNone", "holdInstructionCallIssuer", "holdInstructionReject", "pilot", "pilotAttributeType", "pilotAttributeSyntax", "pilotObjectClass", "pilotGroups", "iA5StringSyntax", "caseIgnoreIA5StringSyntax", "pilotObject", "pilotPerson", "account", "document", "room", "documentSeries", "rFC822localPart", "dNSDomain", "domainRelatedObject", "friendlyCountry", "simpleSecurityObject", "pilotOrganization", "pilotDSA", "qualityLabelledData", "userId", "textEncodedORAddress", "rfc822Mailbox", "favouriteDrink", "roomNumber", "photo", "userClass", "host", "manager", "documentIdentifier", "documentTitle", "documentVersion", "documentAuthor", "documentLocation", "homeTelephoneNumber", "secretary", "otherMailbox", "lastModifiedTime", "lastModifiedBy", "aRecord", "pilotAttributeType27", "mXRecord", "nSRecord", "sOARecord", "cNAMERecord", "associatedDomain", "associatedName", "homePostalAddress", "personalTitle", "mobileTelephoneNumber", "pagerTelephoneNumber", "friendlyCountryName", "organizationalStatus", "janetMailbox", "mailPreferenceOption", "buildingName", "dSAQuality", "singleLevelQuality", "subtreeMinimumQuality", "subtreeMaximumQuality", "personalSignature", "dITRedirect", "audio", "documentPublisher", "x500UniqueIdentifier", "generationQualifier", "pseudonym", "rsaOAEPEncryptionSET", "msSmartcardLogin", "msUPN", "street", "streetAddress", "postalCode", "proxyCertInfo", "nameConstraints", "Independent", "sha256WithRSAEncryption", "sha384WithRSAEncryption", "sha512WithRSAEncryption", "sha224WithRSAEncryption", "sha256", "sha384", "sha512", "sha224", "onBasis", "tpBasis", "ppBasis", "c2pnb163v1", "c2pnb163v2", "c2pnb163v3", "c2pnb176v1", "c2tnb191v1", "c2tnb191v2", "c2tnb191v3", "c2onb191v4", "c2onb191v5", "c2pnb208w1", "c2tnb239v1", "c2tnb239v2", "c2tnb239v3", "c2onb239v4", "c2onb239v5", "c2pnb272w1", "c2pnb304w1", "c2tnb359v1", "c2pnb368w1", "c2tnb431r1", "secp112r1", "secp112r2", "secp128r1", "secp128r2", "secp160k1", "secp160r1", "secp160r2", "secp192k1", "secp224k1", "secp224r1", "secp256k1", "secp384r1", "secp521r1", "sect113r1", "sect113r2", "sect131r1", "sect131r2", "sect163k1", "sect163r1", "sect163r2", "sect193r1", "sect193r2", "sect233k1", "sect233r1", "sect239k1", "sect283k1", "sect283r1", "sect409k1", "sect409r1", "sect571k1", "sect571r1", "anyPolicy", "policyMappings", "inhibitAnyPolicy", "ipsec3", "ipsec4", "subjectDirectoryAttributes", "issuingDistributionPoint", "certificateIssuer", "KISA", "kisa", "caRepository", "hmacWithMD5", "hmacWithSHA224", "hmacWithSHA256", "hmacWithSHA384", "hmacWithSHA512", "dsa_with_SHA224", "dsa_with_SHA256", "whirlpool", "cryptopro", "cryptocom", "gost89", "gost94cc", "gost2001cc", "HMAC", "hmac", "LocalKeySet", "freshestCRL", "searchGuide", "businessCategory", "postalAddress", "postOfficeBox", "physicalDeliveryOfficeName", "telephoneNumber", "telexNumber", "teletexTerminalIdentifier", "facsimileTelephoneNumber", "x121Address", "internationaliSDNNumber", "registeredAddress", "destinationIndicator", "preferredDeliveryMethod", "presentationAddress", "supportedApplicationContext", "member", "owner", "roleOccupant", "seeAlso", "userPassword", "userCertificate", "cACertificate", "authorityRevocationList", "certificateRevocationList", "crossCertificatePair", "enhancedSearchGuide", "protocolInformation", "distinguishedName", "uniqueMember", "houseIdentifier", "supportedAlgorithms", "deltaRevocationList", "dmdName", "CMAC", "cmac", "anyExtendedKeyUsage", "MGF1", "mgf1", "rsassaPss", "rsaesOaep", "dhpublicnumber", "brainpoolP160r1", "brainpoolP160t1", "brainpoolP192r1", "brainpoolP192t1", "brainpoolP224r1", "brainpoolP224t1", "brainpoolP256r1", "brainpoolP256t1", "brainpoolP320r1", "brainpoolP320t1", "brainpoolP384r1", "brainpoolP384t1", "brainpoolP512r1", "brainpoolP512t1", "PSPECIFIED", "pSpecified", "ct_precert_scts", "ct_precert_poison", "ct_precert_signer", "ct_cert_scts", "jurisdictionL", "jurisdictionLocalityName", "jurisdictionST", "jurisdictionStateOrProvinceName", "jurisdictionC", "jurisdictionCountryName", "RSA_OAEP_PARAMS", "hashFunc", "maskGenFunc", "pSourceFunc", "RSA_PSS_PARAMS", "hashAlgorithm", "maskGenAlgorithm", "saltLength", "trailerField", "dmp1", "dmq1", "iqmp", "pub_key", "priv_key", "DSA_SIG", "socket", "IFFFFFFFFFFFFFFFFFFFFFFFFFFFOFFFAFFFFU", "fopen", "connect", "ioctlsocket", "bind", "listen", "accept", "opendir", "fread", "fflush", "AESNI_INIT_KEY", "AESNI_XTS_CIPHER", "AES_INIT_KEY", "AES_T4_INIT_KEY", "AES_XTS", "AES_XTS_CIPHER", "ALG_MODULE_INIT", "CAMELLIA_INIT_KEY", "CMAC_INIT", "CMLL_T4_INIT_KEY", "D2I_PKEY", "DO_SIGVER_INIT", "DSAPKEY2PKCS8", "DSA_PKEY2PKCS8", "ECDSA_PKEY2PKCS8", "ECKEY_PKEY2PKCS8", "EVP_CipherInit_ex", "EVP_CIPHER_CTX_copy", "EVP_CIPHER_CTX_ctrl", "EVP_CIPHER_CTX_set_key_length", "EVP_DecryptFinal_ex", "EVP_DigestInit_ex", "EVP_EncryptFinal_ex", "EVP_MD_CTX_copy_ex", "EVP_MD_size", "EVP_OpenInit", "EVP_PBE_alg_add", "EVP_PBE_alg_add_type", "EVP_PBE_CipherInit", "EVP_PKCS82PKEY", "EVP_PKCS82PKEY_BROKEN", "EVP_PKEY2PKCS8_broken", "EVP_PKEY_copy_parameters", "EVP_PKEY_CTX_ctrl", "EVP_PKEY_CTX_ctrl_str", "EVP_PKEY_CTX_dup", "EVP_PKEY_decrypt", "EVP_PKEY_decrypt_init", "EVP_PKEY_decrypt_old", "EVP_PKEY_derive", "EVP_PKEY_derive_init", "EVP_PKEY_derive_set_peer", "EVP_PKEY_encrypt", "EVP_PKEY_encrypt_init", "EVP_PKEY_encrypt_old", "EVP_PKEY_get1_DH", "EVP_PKEY_get1_DSA", "EVP_PKEY_GET1_ECDSA", "EVP_PKEY_get1_EC_KEY", "EVP_PKEY_get1_RSA", "EVP_PKEY_keygen", "EVP_PKEY_keygen_init", "EVP_PKEY_new", "EVP_PKEY_paramgen", "EVP_PKEY_paramgen_init", "EVP_PKEY_sign", "EVP_PKEY_sign_init", "EVP_PKEY_verify", "EVP_PKEY_verify_init", "EVP_PKEY_verify_recover", "EVP_PKEY_verify_recover_init", "EVP_RIJNDAEL", "EVP_SignFinal", "EVP_VerifyFinal", "FIPS_CIPHERINIT", "FIPS_CIPHER_CTX_COPY", "FIPS_CIPHER_CTX_CTRL", "FIPS_CIPHER_CTX_SET_KEY_LENGTH", "FIPS_DIGESTINIT", "FIPS_MD_CTX_COPY", "HMAC_Init_ex", "INT_CTX_NEW", "PKCS5_PBE_keyivgen", "PKCS5_v2_PBE_keyivgen", "PKCS5_V2_PBKDF2_KEYIVGEN", "PKCS8_set_broken", "PKEY_SET_TYPE", "RC2_MAGIC_TO_METH", "RC5_CTRL", "DESX", "desx", "DES3", "des3", "idea", "seed", "blowfish", "CAST", "cast", "aes128", "AES192", "aes192", "aes256", "camellia128", "CAMELLIA192", "camellia192", "camellia256", "ripemd", "rmd160", "X509_ALGORS", "algorithms", "X509_ALGOR", "X509_PUBKEY", "public_key", "X509_SIG", "X509_ATTRIBUTE", "BIGNUM", "ZLONG", "LONG", "X509_NAME", "X509_NAME_INTERNAL", "X509_NAME_ENTRIES", "RDNS", "X509_NAME_ENTRY", "cert_info", "sig_alg", "X509_CINF", "issuer", "validity", "subject", "issuerUID", "subjectUID", "X509_CERT_PAIR", "forward", "reverse", "X509_CERT_AUX", "reject", "alias", "other", "ASN1_SET_ANY", "ASN1_SEQUENCE_ANY", "ASN1_OCTET_STRING_NDEF", "ASN1_FBOOLEAN", "ASN1_TBOOLEAN", "ASN1_BOOLEAN", "DIRECTORYSTRING", "DISPLAYTEXT", "ASN1_PRINTABLE", "ASN1_SEQUENCE", "ASN1_ANY", "ASN1_BMPSTRING", "ASN1_UNIVERSALSTRING", "ASN1_VISIBLESTRING", "ASN1_GENERALIZEDTIME", "ASN1_UTCTIME", "ASN1_GENERALSTRING", "ASN1_IA5STRING", "ASN1_T61STRING", "ASN1_PRINTABLESTRING", "ASN1_UTF8STRING", "ASN1_OBJECT", "ASN1_NULL", "ASN1_OCTET_STRING", "ASN1_BIT_STRING", "ASN1_ENUMERATED", "ASN1_INTEGER", "X509_EXTENSIONS", "Extension", "X509_EXTENSION", "critical", "a2d_ASN1_OBJECT", "a2i_ASN1_ENUMERATED", "a2i_ASN1_INTEGER", "a2i_ASN1_STRING", "APPEND_EXP", "ASN1_BIT_STRING_set_bit", "ASN1_CB", "ASN1_CHECK_TLEN", "ASN1_COLLATE_PRIMITIVE", "ASN1_COLLECT", "ASN1_D2I_EX_PRIMITIVE", "ASN1_d2i_fp", "ASN1_D2I_READ_BIO", "ASN1_digest", "ASN1_DO_ADB", "ASN1_dup", "ASN1_ENUMERATED_set", "ASN1_ENUMERATED_to_BN", "ASN1_EX_C2I", "ASN1_FIND_END", "ASN1_GENERALIZEDTIME_adj", "ASN1_GENERALIZEDTIME_set", "ASN1_generate_v3", "ASN1_get_object", "ASN1_HEADER_NEW", "ASN1_i2d_bio", "ASN1_i2d_fp", "ASN1_INTEGER_set", "ASN1_INTEGER_to_BN", "ASN1_item_d2i_fp", "ASN1_item_dup", "ASN1_ITEM_EX_COMBINE_NEW", "ASN1_ITEM_EX_D2I", "ASN1_item_i2d_bio", "ASN1_item_i2d_fp", "ASN1_item_pack", "ASN1_item_sign", "ASN1_item_sign_ctx", "ASN1_item_unpack", "ASN1_item_verify", "ASN1_mbstring_ncopy", "ASN1_OBJECT_new", "ASN1_OUTPUT_DATA", "ASN1_pack_string", "ASN1_PCTX_new", "ASN1_PKCS5_PBE_SET", "ASN1_seq_pack", "ASN1_seq_unpack", "ASN1_sign", "ASN1_STR2TYPE", "ASN1_STRING_set", "ASN1_STRING_TABLE_add", "ASN1_STRING_type_new", "ASN1_TEMPLATE_EX_D2I", "ASN1_TEMPLATE_NEW", "ASN1_TEMPLATE_NOEXP_D2I", "ASN1_TIME_adj", "ASN1_TIME_set", "ASN1_TYPE_get_int_octetstring", "ASN1_TYPE_get_octetstring", "ASN1_unpack_string", "ASN1_UTCTIME_adj", "ASN1_UTCTIME_set", "ASN1_verify", "B64_READ_ASN1", "B64_WRITE_ASN1", "BIO_new_NDEF", "BITSTR_CB", "BN_to_ASN1_ENUMERATED", "BN_to_ASN1_INTEGER", "c2i_ASN1_BIT_STRING", "c2i_ASN1_INTEGER", "c2i_ASN1_OBJECT", "COLLECT_DATA", "D2I_ASN1_BIT_STRING", "d2i_ASN1_BOOLEAN", "d2i_ASN1_bytes", "D2I_ASN1_GENERALIZEDTIME", "D2I_ASN1_HEADER", "D2I_ASN1_INTEGER", "d2i_ASN1_OBJECT", "d2i_ASN1_SET", "d2i_ASN1_type_bytes", "d2i_ASN1_UINTEGER", "D2I_ASN1_UTCTIME", "d2i_AutoPrivateKey", "d2i_Netscape_RSA", "D2I_NETSCAPE_RSA_2", "d2i_PrivateKey", "d2i_PublicKey", "d2i_RSA_NET", "D2I_RSA_NET_2", "D2I_X509", "D2I_X509_CINF", "d2i_X509_PKEY", "DO_BUF", "i2d_ASN1_bio_stream", "i2d_ASN1_SET", "I2D_ASN1_TIME", "i2d_DSA_PUBKEY", "i2d_EC_PUBKEY", "i2d_PrivateKey", "i2d_PublicKey", "i2d_RSA_NET", "i2d_RSA_PUBKEY", "LONG_C2I", "OID_MODULE_INIT", "PARSE_TAGGING", "PKCS5_pbe2_set_iv", "PKCS5_pbe_set", "PKCS5_pbe_set0_algor", "PKCS5_pbkdf2_set", "SMIME_read_ASN1", "SMIME_text", "X509_CINF_NEW", "X509_CRL_add0_revoked", "X509_INFO_new", "X509_NAME_ENCODE", "X509_NAME_EX_D2I", "X509_NAME_EX_NEW", "X509_NEW", "X509_PKEY_new", "PBEPARAM", "salt", "iter", "PBKDF2PARAM", "keylength", "PBE2PARAM", "keyfunc", "encryption", "PKCS8_PRIV_KEY_INFO", "pkeyalg", "attributes", "ENCRYPTED", "PKCS7", "B2I_DSS", "b2i_PVK_bio", "B2I_RSA", "CHECK_BITLEN_DSA", "CHECK_BITLEN_RSA", "d2i_PKCS8PrivateKey_bio", "d2i_PKCS8PrivateKey_fp", "DO_B2I", "DO_B2I_BIO", "DO_BLOB_HEADER", "DO_PK8PKEY", "DO_PK8PKEY_FP", "DO_PVK_BODY", "DO_PVK_HEADER", "I2B_PVK", "i2b_PVK_bio", "LOAD_IV", "PEM_ASN1_read", "PEM_ASN1_read_bio", "PEM_ASN1_write", "PEM_ASN1_write_bio", "PEM_def_callback", "PEM_do_header", "PEM_F_PEM_WRITE_PKCS8PRIVATEKEY", "PEM_get_EVP_CIPHER_INFO", "PEM_PK8PKEY", "PEM_read", "PEM_read_bio", "PEM_READ_BIO_DHPARAMS", "PEM_read_bio_Parameters", "PEM_READ_BIO_PRIVATEKEY", "PEM_READ_DHPARAMS", "PEM_READ_PRIVATEKEY", "PEM_SealFinal", "PEM_SealInit", "PEM_SignFinal", "PEM_write", "PEM_write_bio", "PEM_WRITE_PRIVATEKEY", "PEM_X509_INFO_read", "PEM_X509_INFO_read_bio", "PEM_X509_INFO_write_bio", "OPENSSL_ALLOW_PROXY_CERTS", "ADD_CERT_DIR", "BY_FILE_CTRL", "CHECK_NAME_CONSTRAINTS", "CHECK_POLICY", "DIR_CTRL", "GET_CERT_BY_SUBJECT", "NETSCAPE_SPKI_b64_decode", "NETSCAPE_SPKI_b64_encode", "X509at_add1_attr", "X509v3_add_ext", "X509_ATTRIBUTE_create_by_NID", "X509_ATTRIBUTE_create_by_OBJ", "X509_ATTRIBUTE_create_by_txt", "X509_ATTRIBUTE_get0_data", "X509_ATTRIBUTE_set1_data", "X509_check_private_key", "X509_CRL_diff", "X509_CRL_print_fp", "X509_EXTENSION_create_by_NID", "X509_EXTENSION_create_by_OBJ", "X509_get_pubkey_parameters", "X509_load_cert_crl_file", "X509_load_cert_file", "X509_load_crl_file", "X509_NAME_add_entry", "X509_NAME_ENTRY_create_by_NID", "X509_NAME_ENTRY_create_by_txt", "X509_NAME_ENTRY_set_object", "X509_NAME_oneline", "X509_NAME_print", "X509_print_ex_fp", "X509_PUBKEY_get", "X509_PUBKEY_set", "X509_REQ_check_private_key", "X509_REQ_print_ex", "X509_REQ_print_fp", "X509_REQ_to_X509", "X509_STORE_add_cert", "X509_STORE_add_crl", "X509_STORE_CTX_get1_issuer", "X509_STORE_CTX_init", "X509_STORE_CTX_new", "X509_STORE_CTX_purpose_inherit", "X509_to_X509_REQ", "X509_TRUST_add", "X509_TRUST_set", "X509_verify_cert", "compatible", "smime_sign", "TRUE", "FALSE", "true", "false", "a2i_GENERAL_NAME", "ASIDENTIFIERCHOICE_CANONIZE", "ASIDENTIFIERCHOICE_IS_CANONICAL", "COPY_EMAIL", "COPY_ISSUER", "DO_DIRNAME", "DO_EXT_CONF", "DO_EXT_I2D", "DO_EXT_NCONF", "DO_I2V_NAME_CONSTRAINTS", "GNAMES_FROM_SECTNAME", "hex_to_string", "i2s_ASN1_ENUMERATED", "I2S_ASN1_IA5STRING", "i2s_ASN1_INTEGER", "I2V_AUTHORITY_INFO_ACCESS", "NOTICE_SECTION", "NREF_NOS", "POLICY_SECTION", "PROCESS_PCI_VALUE", "R2I_CERTPOL", "R2I_PCI", "S2I_ASN1_IA5STRING", "s2i_ASN1_INTEGER", "s2i_ASN1_OCTET_STRING", "S2I_ASN1_SKEY_ID", "S2I_SKEY_ID", "SET_DIST_POINT_NAME", "string_to_hex", "SXNET_add_id_asc", "SXNET_add_id_INTEGER", "SXNET_add_id_ulong", "SXNET_get_id_asc", "SXNET_get_id_ulong", "V2I_ASIDENTIFIERS", "v2i_ASN1_BIT_STRING", "V2I_AUTHORITY_INFO_ACCESS", "V2I_AUTHORITY_KEYID", "V2I_BASIC_CONSTRAINTS", "V2I_CRLD", "V2I_EXTENDED_KEY_USAGE", "v2i_GENERAL_NAMES", "v2i_GENERAL_NAME_ex", "V2I_IDP", "V2I_IPADDRBLOCKS", "V2I_ISSUER_ALT", "V2I_NAME_CONSTRAINTS", "V2I_POLICY_CONSTRAINTS", "V2I_POLICY_MAPPINGS", "V2I_SUBJECT_ALT", "V3_ADDR_VALIDATE_PATH_INTERNAL", "V3_GENERIC_EXTENSION", "X509V3_add1_i2d", "X509V3_add_value", "X509V3_EXT_add", "X509V3_EXT_add_alias", "X509V3_EXT_conf", "X509V3_EXT_free", "X509V3_EXT_i2d", "X509V3_EXT_nconf", "X509V3_get_section", "X509V3_get_string", "X509V3_get_value_bool", "X509V3_parse_list", "X509_PURPOSE_add", "X509_PURPOSE_set", "GENERAL_NAMES", "GeneralNames", "GENERAL_NAME", "EDIPARTYNAME", "nameAssigner", "partyName", "OTHERNAME", "type_id", "othername", "X400Name", "EdiPartyName", "email", "DirName", "dirName", "otherName", "copy", "move", "hash", "always", "PKEY_USAGE_PERIOD", "notBefore", "notAfter", "Unspecified", "unspecified", "keyCompromise", "CACompromise", "affiliationChanged", "Superseded", "superseded", "cessationOfOperation", "certificateHold", "removeFromCRL", "privilegeWithdrawn", "AACompromise", "SXNET", "SXNETID", "zone", "user", "ia5org", "policyIdentifier", "userNotice", "explicitText", "organization", "noticeNumbers", "Critical", "NOTICEREF", "noticenos", "USERNOTICE", "noticeref", "exptext", "POLICYQUALINFO", "pqualid", "POLICYINFO", "policyid", "qualifiers", "CERTIFICATEPOLICIES", "Reasons", "fullname", "relativename", "CRLissuer", "onlyCA", "onlyAA", "indirectCRL", "onlysomereasons", "onlyuser", "ISSUING_DIST_POINT", "distpoint", "onlyattr", "CRL_DIST_POINTS", "CRLDistributionPoints", "DIST_POINT_NAME", "Unused", "unused", "sslclient", "sslserver", "nssslserver", "smimesign", "smimeencrypt", "crlsign", "ocsphelper", "timestampsign", "AUTHORITY_INFO_ACCESS", "ACCESS_DESCRIPTION", "location", "AUTHORITY_KEYID", "POLICY_MAPPINGS", "POLICY_MAPPING", "issuerDomainPolicy", "subjectDomainPolicy", "requireExplicitPolicy", "inhibitPolicyMapping", "POLICY_CONSTRAINTS", "Permitted", "Excluded", "permitted", "excluded", "NAME_CONSTRAINTS", "permittedSubtrees", "excludedSubtrees", "GENERAL_SUBTREE", "base", "minimum", "maximum", "PROXY_CERT_INFO_EXTENSION", "pcPathLengthConstraint", "proxyPolicy", "PROXY_POLICY", "policyLanguage", "language", "pathlen", "infinite", "CONF_dump_fp", "CONF_load", "CONF_load_bio", "CONF_load_fp", "CONF_modules_load", "CONF_parse_list", "DEF_LOAD", "DEF_LOAD_BIO", "MODULE_INIT", "MODULE_LOAD_DSO", "MODULE_RUN", "NCONF_dump_bio", "NCONF_dump_fp", "NCONF_get_number", "NCONF_get_number_e", "NCONF_get_section", "NCONF_get_string", "NCONF_load", "NCONF_load_bio", "NCONF_load_fp", "NCONF_new", "STR_COPY", "openssl_conf", "OPENSSL_init", "OPENSSL_finish", "OPENSSL_CONF", "PKCS7_ATTRIBUTES", "PKCS7_ATTR_SIGN", "PKCS7_DIGEST", "contents", "PKCS7_ENCRYPT", "enc_data", "PKCS7_SIGN_ENVELOPE", "recipientinfo", "md_algs", "signer_info", "PKCS7_ENC_CONTENT", "content_type", "PKCS7_RECIP_INFO", "issuer_and_serial", "key_enc_algor", "enc_key", "PKCS7_ENVELOPE", "PKCS7_ISSUER_AND_SERIAL", "PKCS7_SIGNER_INFO", "digest_alg", "auth_attr", "digest_enc_alg", "enc_digest", "unauth_attr", "PKCS7_SIGNED", "B64_READ_PKCS7", "B64_WRITE_PKCS7", "DO_PKCS7_SIGNED_ATTRIB", "i2d_PKCS7_bio_stream", "PKCS7_add0_attrib_signing_time", "PKCS7_add_attrib_smimecap", "PKCS7_add_certificate", "PKCS7_add_crl", "PKCS7_add_recipient_info", "PKCS7_add_signature", "PKCS7_add_signer", "PKCS7_BIO_ADD_DIGEST", "PKCS7_COPY_EXISTING_DIGEST", "PKCS7_ctrl", "PKCS7_dataDecode", "PKCS7_dataFinal", "PKCS7_dataInit", "PKCS7_DATASIGN", "PKCS7_dataVerify", "PKCS7_decrypt", "PKCS7_DECRYPT_RINFO", "PKCS7_ENCODE_RINFO", "PKCS7_encrypt", "PKCS7_final", "PKCS7_FIND_DIGEST", "PKCS7_get0_signers", "PKCS7_RECIP_INFO_set", "PKCS7_set_cipher", "PKCS7_set_content", "PKCS7_set_digest", "PKCS7_set_type", "PKCS7_sign", "PKCS7_signatureVerify", "PKCS7_SIGNER_INFO_set", "PKCS7_SIGNER_INFO_sign", "PKCS7_sign_add_signer", "PKCS7_simple_smimecap", "PKCS7_verify", "SMIME_read_PKCS7", "PARSE_BAG", "PARSE_BAGS", "PKCS12_ADD_FRIENDLYNAME", "PKCS12_add_friendlyname_asc", "PKCS12_add_friendlyname_uni", "PKCS12_add_localkeyid", "PKCS12_create", "PKCS12_gen_mac", "PKCS12_init", "PKCS12_item_decrypt_d2i", "PKCS12_item_i2d_encrypt", "PKCS12_item_pack_safebag", "PKCS12_key_gen_asc", "PKCS12_key_gen_uni", "PKCS12_MAKE_KEYBAG", "PKCS12_MAKE_SHKEYBAG", "PKCS12_newpass", "PKCS12_pack_p7data", "PKCS12_pack_p7encdata", "PKCS12_parse", "PKCS12_pbe_crypt", "PKCS12_PBE_keyivgen", "PKCS12_setup_mac", "PKCS12_set_mac", "PKCS12_unpack_authsafes", "PKCS12_unpack_p7data", "PKCS12_verify_mac", "PKCS8_add_keyusage", "PKCS8_encrypt", "BIO_ZLIB_FLUSH", "BIO_ZLIB_NEW", "BIO_ZLIB_READ", "BIO_ZLIB_WRITE", "compress", "inflateEnd", "inflate", "inflateInit_", "deflateEnd", "deflate", "deflateInit_", "zError", "zlib", "OCSP_SERVICELOC", "locator", "OCSP_CRLID", "crlUrl", "crlNum", "crlTime", "OCSP_BASICRESP", "tbsResponseData", "signatureAlgorithm", "OCSP_RESPDATA", "responderId", "producedAt", "responses", "responseExtensions", "OCSP_SINGLERESP", "certId", "certStatus", "thisUpdate", "nextUpdate", "singleExtensions", "OCSP_CERTSTATUS", "OCSP_REVOKEDINFO", "revocationTime", "revocationReason", "OCSP_RESPID", "OCSP_RESPONSE", "responseStatus", "responseBytes", "OCSP_RESPBYTES", "responseType", "response", "OCSP_REQUEST", "tbsRequest", "optionalSignature", "OCSP_REQINFO", "requestorName", "requestList", "requestExtensions", "OCSP_ONEREQ", "reqCert", "singleRequestExtensions", "OCSP_CERTID", "issuerNameHash", "issuerKeyHash", "OCSP_SIGNATURE", "POST", "ASN1_STRING_encode", "D2I_OCSP_NONCE", "OCSP_basic_add1_status", "OCSP_basic_sign", "OCSP_basic_verify", "OCSP_cert_id_new", "OCSP_CHECK_DELEGATED", "OCSP_CHECK_IDS", "OCSP_CHECK_ISSUER", "OCSP_check_validity", "OCSP_MATCH_ISSUERID", "OCSP_parse_url", "OCSP_request_sign", "OCSP_request_verify", "OCSP_response_get1_basic", "OCSP_sendreq_bio", "OCSP_sendreq_nbio", "PARSE_HTTP_LINE1", "REQUEST_VERIFY", "GENERAL_ALLOCATE_BOOLEAN", "GENERAL_ALLOCATE_PROMPT", "GENERAL_ALLOCATE_STRING", "UI_ctrl", "UI_dup_error_string", "UI_dup_info_string", "UI_dup_input_boolean", "UI_dup_input_string", "UI_dup_verify_string", "UI_get0_result", "UI_new_method", "UI_set_result", "CHECK_CONTENT", "CMS_add0_cert", "CMS_add0_recipient_key", "CMS_add0_recipient_password", "CMS_add1_ReceiptRequest", "CMS_add1_recipient_cert", "CMS_add1_signer", "CMS_ADD1_SIGNINGTIME", "CMS_compress", "cms_CompressedData_create", "cms_CompressedData_init_bio", "CMS_COPY_CONTENT", "CMS_COPY_MESSAGEDIGEST", "CMS_data", "CMS_dataFinal", "CMS_dataInit", "CMS_decrypt", "CMS_decrypt_set1_key", "CMS_decrypt_set1_password", "CMS_decrypt_set1_pkey", "cms_DigestAlgorithm_find_ctx", "cms_DigestAlgorithm_init_bio", "cms_DigestedData_do_final", "CMS_digest_verify", "cms_encode_Receipt", "CMS_encrypt", "cms_EncryptedContent_init_bio", "CMS_EncryptedData_decrypt", "CMS_EncryptedData_encrypt", "CMS_EncryptedData_set1_key", "CMS_EnvelopedData_create", "cms_EnvelopedData_init_bio", "CMS_ENVELOPED_DATA_INIT", "cms_env_asn1_ctrl", "CMS_final", "CMS_GET0_CERTIFICATE_CHOICES", "CMS_get0_content", "CMS_GET0_ECONTENT_TYPE", "cms_get0_enveloped", "CMS_GET0_REVOCATION_CHOICES", "CMS_GET0_SIGNED", "cms_msgSigDigest_add1", "CMS_ReceiptRequest_create0", "cms_Receipt_verify", "CMS_RecipientInfo_decrypt", "CMS_RecipientInfo_encrypt", "cms_RecipientInfo_kari_encrypt", "CMS_RecipientInfo_kari_get0_alg", "CMS_RecipientInfo_kari_get0_orig_id", "CMS_RecipientInfo_kari_get0_reks", "CMS_RecipientInfo_kari_orig_id_cmp", "CMS_RECIPIENTINFO_KEKRI_DECRYPT", "CMS_RECIPIENTINFO_KEKRI_ENCRYPT", "CMS_RecipientInfo_kekri_get0_id", "CMS_RecipientInfo_kekri_id_cmp", "CMS_RecipientInfo_ktri_cert_cmp", "CMS_RECIPIENTINFO_KTRI_DECRYPT", "CMS_RECIPIENTINFO_KTRI_ENCRYPT", "CMS_RecipientInfo_ktri_get0_algs", "CMS_RecipientInfo_ktri_get0_signer_id", "cms_RecipientInfo_pwri_crypt", "CMS_RecipientInfo_set0_key", "CMS_RecipientInfo_set0_password", "CMS_RecipientInfo_set0_pkey", "CMS_SD_ASN1_CTRL", "cms_set1_ias", "cms_set1_keyid", "cms_set1_SignerIdentifier", "CMS_set_detached", "CMS_sign", "CMS_SIGNED_DATA_INIT", "CMS_SIGNERINFO_CONTENT_SIGN", "CMS_SignerInfo_sign", "CMS_SignerInfo_verify", "CMS_SIGNERINFO_VERIFY_CERT", "CMS_SignerInfo_verify_content", "CMS_sign_receipt", "CMS_stream", "CMS_uncompress", "CMS_verify", "d2i_TS_RESP", "DEF_SERIAL_CB", "DEF_TIME_CB", "ESS_ADD_SIGNING_CERT", "ESS_CERT_ID_NEW_INIT", "ESS_SIGNING_CERT_NEW_INIT", "INT_TS_RESP_VERIFY_TOKEN", "PKCS7_to_TS_TST_INFO", "TS_ACCURACY_set_micros", "TS_ACCURACY_set_millis", "TS_ACCURACY_set_seconds", "TS_CHECK_IMPRINTS", "TS_CHECK_NONCES", "TS_CHECK_POLICY", "TS_CHECK_SIGNING_CERTS", "TS_CHECK_STATUS_INFO", "TS_COMPUTE_IMPRINT", "TS_CONF_set_default_engine", "TS_GET_STATUS_TEXT", "TS_MSG_IMPRINT_set_algo", "TS_REQ_set_msg_imprint", "TS_REQ_set_nonce", "TS_REQ_set_policy_id", "TS_RESP_create_response", "TS_RESP_CREATE_TST_INFO", "TS_RESP_CTX_add_failure_info", "TS_RESP_CTX_add_md", "TS_RESP_CTX_add_policy", "TS_RESP_CTX_new", "TS_RESP_CTX_set_accuracy", "TS_RESP_CTX_set_certs", "TS_RESP_CTX_set_def_policy", "TS_RESP_CTX_set_signer_cert", "TS_RESP_CTX_set_status_info", "TS_RESP_GET_POLICY", "TS_RESP_SET_GENTIME_WITH_PRECISION", "TS_RESP_set_status_info", "TS_RESP_set_tst_info", "TS_RESP_SIGN", "TS_RESP_verify_signature", "TS_RESP_verify_token", "TS_TST_INFO_set_accuracy", "TS_TST_INFO_set_msg_imprint", "TS_TST_INFO_set_nonce", "TS_TST_INFO_set_policy_id", "TS_TST_INFO_set_serial", "TS_TST_INFO_set_time", "TS_TST_INFO_set_tsa", "TS_VERIFY", "TS_VERIFY_CERT", "TS_VERIFY_CTX_new", "hexkey", "CRYPTO_get_ex_new_index", "CRYPTO_get_new_dynlockid", "CRYPTO_get_new_lockid", "CRYPTO_set_ex_data", "DEF_ADD_INDEX", "DEF_GET_CLASS", "FIPS_mode_set", "INT_DUP_EX_DATA", "INT_FREE_EX_DATA", "INT_NEW_EX_DATA", "OBJ_add_object", "OBJ_create", "OBJ_dup", "OBJ_NAME_new_index", "OBJ_nid2ln", "OBJ_nid2obj", "OBJ_nid2sn", "cisc", "qWoQmLI", "sYqSoNK", "pVnPlKH", "rWpRnLI", "BNRAND", "BN_BLINDING_convert_ex", "BN_BLINDING_create_param", "BN_BLINDING_invert_ex", "BN_BLINDING_new", "BN_BLINDING_update", "BN_bn2dec", "BN_bn2hex", "BN_CTX_get", "BN_CTX_new", "BN_CTX_start", "BN_div", "BN_div_no_branch", "BN_div_recp", "BN_exp", "bn_expand2", "BN_EXPAND_INTERNAL", "BN_GF2m_mod", "BN_GF2m_mod_exp", "BN_GF2m_mod_mul", "BN_GF2m_mod_solve_quad", "BN_GF2m_mod_solve_quad_arr", "BN_GF2m_mod_sqr", "BN_GF2m_mod_sqrt", "BN_lshift", "BN_mod_exp2_mont", "BN_mod_exp_mont", "BN_mod_exp_mont_consttime", "BN_mod_exp_mont_word", "BN_mod_exp_recp", "BN_mod_exp_simple", "BN_mod_inverse", "BN_mod_inverse_no_branch", "BN_mod_lshift_quick", "BN_mod_mul_reciprocal", "BN_mod_sqrt", "BN_mpi2bn", "BN_new", "BN_rand", "BN_rand_range", "BN_rshift", "BN_usub", "BN_TO_FELEM", "COMPUTE_WNAF", "d2i_ECParameters", "d2i_ECPKParameters", "d2i_ECPrivateKey", "DO_EC_KEY_PRINT", "ECDH_CMS_DECRYPT", "ECDH_CMS_SET_SHARED_INFO", "ECKEY_PARAM2TYPE", "ECKEY_PARAM_DECODE", "ECKEY_PRIV_DECODE", "ECKEY_PRIV_ENCODE", "ECKEY_PUB_DECODE", "ECKEY_PUB_ENCODE", "ECKEY_TYPE2PARAM", "ECParameters_print", "ECParameters_print_fp", "ECPKParameters_print", "ECPKParameters_print_fp", "ecp_nistz256_get_affine", "ecp_nistz256_mult_precompute", "ecp_nistz256_points_mul", "ecp_nistz256_pre_comp_new", "ecp_nistz256_set_words", "ecp_nistz256_windowed_mul", "ECP_NIST_MOD_192", "ECP_NIST_MOD_224", "ECP_NIST_MOD_256", "ECP_NIST_MOD_521", "EC_ASN1_GROUP2CURVE", "EC_ASN1_GROUP2FIELDID", "EC_ASN1_GROUP2PARAMETERS", "EC_ASN1_GROUP2PKPARAMETERS", "EC_ASN1_PARAMETERS2GROUP", "EC_ASN1_PKPARAMETERS2GROUP", "EC_EX_DATA_set_data", "EC_GF2M_MONTGOMERY_POINT_MULTIPLY", "ec_GF2m_simple_group_check_discriminant", "ec_GF2m_simple_group_set_curve", "ec_GF2m_simple_oct2point", "ec_GF2m_simple_point2oct", "ec_GF2m_simple_point_get_affine_coordinates", "ec_GF2m_simple_point_set_affine_coordinates", "ec_GF2m_simple_set_compressed_coordinates", "ec_GFp_mont_field_decode", "ec_GFp_mont_field_encode", "ec_GFp_mont_field_mul", "ec_GFp_mont_field_set_to_one", "ec_GFp_mont_field_sqr", "ec_GFp_mont_group_set_curve", "EC_GFP_MONT_GROUP_SET_CURVE_GFP", "ec_GFp_nistp224_group_set_curve", "ec_GFp_nistp224_points_mul", "ec_GFp_nistp224_point_get_affine_coordinates", "ec_GFp_nistp256_group_set_curve", "ec_GFp_nistp256_points_mul", "ec_GFp_nistp256_point_get_affine_coordinates", "ec_GFp_nistp521_group_set_curve", "ec_GFp_nistp521_points_mul", "ec_GFp_nistp521_point_get_affine_coordinates", "ec_GFp_nist_field_mul", "ec_GFp_nist_field_sqr", "ec_GFp_nist_group_set_curve", "ec_GFp_simple_group_check_discriminant", "ec_GFp_simple_group_set_curve", "EC_GFP_SIMPLE_GROUP_SET_CURVE_GFP", "EC_GFP_SIMPLE_GROUP_SET_GENERATOR", "ec_GFp_simple_make_affine", "ec_GFp_simple_oct2point", "ec_GFp_simple_point2oct", "ec_GFp_simple_points_make_affine", "ec_GFp_simple_point_get_affine_coordinates", "EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES_GFP", "ec_GFp_simple_point_set_affine_coordinates", "EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES_GFP", "ec_GFp_simple_set_compressed_coordinates", "EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES_GFP", "EC_GROUP_check", "EC_GROUP_check_discriminant", "EC_GROUP_copy", "EC_GROUP_get0_generator", "EC_GROUP_get_cofactor", "EC_GROUP_get_curve_GF2m", "EC_GROUP_get_curve_GFp", "EC_GROUP_get_degree", "EC_GROUP_get_order", "EC_GROUP_get_pentanomial_basis", "EC_GROUP_get_trinomial_basis", "EC_GROUP_new", "EC_GROUP_new_by_curve_name", "EC_GROUP_NEW_FROM_DATA", "EC_GROUP_precompute_mult", "EC_GROUP_set_curve_GF2m", "EC_GROUP_set_curve_GFp", "EC_GROUP_SET_EXTRA_DATA", "EC_GROUP_set_generator", "EC_KEY_check_key", "EC_KEY_copy", "EC_KEY_generate_key", "EC_KEY_new", "EC_KEY_print", "EC_KEY_print_fp", "EC_KEY_set_public_key_affine_coordinates", "EC_POINTs_make_affine", "EC_POINT_add", "EC_POINT_cmp", "EC_POINT_copy", "EC_POINT_dbl", "EC_POINT_get_affine_coordinates_GF2m", "EC_POINT_get_affine_coordinates_GFp", "EC_POINT_get_Jprojective_coordinates_GFp", "EC_POINT_invert", "EC_POINT_is_at_infinity", "EC_POINT_is_on_curve", "EC_POINT_make_affine", "EC_POINT_mul", "EC_POINT_new", "EC_POINT_oct2point", "EC_POINT_point2oct", "EC_POINT_set_affine_coordinates_GF2m", "EC_POINT_set_affine_coordinates_GFp", "EC_POINT_set_compressed_coordinates_GF2m", "EC_POINT_set_compressed_coordinates_GFp", "EC_POINT_set_Jprojective_coordinates_GFp", "EC_POINT_set_to_infinity", "EC_PRE_COMP_DUP", "EC_PRE_COMP_NEW", "ec_wNAF_mul", "ec_wNAF_precompute_mult", "i2d_ECParameters", "i2d_ECPKParameters", "i2d_ECPrivateKey", "i2o_ECPublicKey", "NISTP224_PRE_COMP_NEW", "NISTP256_PRE_COMP_NEW", "NISTP521_PRE_COMP_NEW", "o2i_ECPublicKey", "OLD_EC_PRIV_DECODE", "PKEY_EC_CTRL", "PKEY_EC_CTRL_STR", "PKEY_EC_DERIVE", "PKEY_EC_KEYGEN", "PKEY_EC_PARAMGEN", "PKEY_EC_SIGN", "EC_PRIVATEKEY", "privateKey", "publicKey", "ECPKPARAMETERS", "ECPARAMETERS", "fieldID", "cofactor", "X9_62_CURVE", "X9_62_FIELDID", "fieldType", "X9_62_CHARACTERISTIC_TWO", "X9_62_PENTANOMIAL", "ec_paramgen_curve", "ec_param_enc", "explicit", "named_curve", "ecdh_kdf_md", "ecdh_cofactor_mode", "CHECK_PADDING_MD", "DO_RSA_PRINT", "INT_RSA_VERIFY", "MEMORY_LOCK", "OLD_RSA_PRIV_DECODE", "PKEY_RSA_CTRL", "PKEY_RSA_CTRL_STR", "PKEY_RSA_SIGN", "PKEY_RSA_VERIFY", "PKEY_RSA_VERIFYRECOVER", "RSA_ALGOR_TO_MD", "RSA_BUILTIN_KEYGEN", "RSA_check_key", "RSA_CMS_DECRYPT", "RSA_EAY_PRIVATE_DECRYPT", "RSA_EAY_PRIVATE_ENCRYPT", "RSA_EAY_PUBLIC_DECRYPT", "RSA_EAY_PUBLIC_ENCRYPT", "RSA_generate_key", "RSA_generate_key_ex", "RSA_ITEM_VERIFY", "RSA_memory_lock", "RSA_MGF1_TO_MD", "RSA_new_method", "RSA_NULL", "RSA_NULL_MOD_EXP", "RSA_NULL_PRIVATE_DECRYPT", "RSA_NULL_PRIVATE_ENCRYPT", "RSA_NULL_PUBLIC_DECRYPT", "RSA_NULL_PUBLIC_ENCRYPT", "RSA_padding_add_none", "RSA_padding_add_PKCS1_OAEP", "RSA_padding_add_PKCS1_OAEP_mgf1", "RSA_padding_add_PKCS1_PSS", "RSA_padding_add_PKCS1_PSS_mgf1", "RSA_padding_add_PKCS1_type_1", "RSA_padding_add_PKCS1_type_2", "RSA_padding_add_SSLv23", "RSA_padding_add_X931", "RSA_padding_check_none", "RSA_padding_check_PKCS1_OAEP", "RSA_padding_check_PKCS1_OAEP_mgf1", "RSA_padding_check_PKCS1_type_1", "RSA_padding_check_PKCS1_type_2", "RSA_padding_check_SSLv23", "RSA_padding_check_X931", "RSA_print", "RSA_print_fp", "RSA_private_decrypt", "RSA_private_encrypt", "RSA_PRIV_DECODE", "RSA_PRIV_ENCODE", "RSA_PSS_TO_CTX", "RSA_public_decrypt", "RSA_public_encrypt", "RSA_PUB_DECODE", "RSA_setup_blinding", "RSA_sign", "RSA_sign_ASN1_OCTET_STRING", "RSA_verify", "RSA_verify_ASN1_OCTET_STRING", "RSA_verify_PKCS1_PSS", "RSA_verify_PKCS1_PSS_mgf1", "INVALID", "rsa_padding_mode", "sslv23", "oeap", "oaep", "x931", "rsa_pss_saltlen", "rsa_keygen_bits", "rsa_keygen_pubexp", "rsa_mgf1_md", "rsa_oaep_md", "rsa_oaep_label", "d2i_DSA_SIG", "DO_DSA_PRINT", "DSAparams_print", "DSAparams_print_fp", "DSA_BUILTIN_PARAMGEN2", "DSA_do_sign", "DSA_do_verify", "DSA_generate_key", "DSA_generate_parameters_ex", "DSA_new_method", "DSA_PARAM_DECODE", "DSA_print_fp", "DSA_PRIV_DECODE", "DSA_PRIV_ENCODE", "DSA_PUB_DECODE", "DSA_PUB_ENCODE", "DSA_sign", "DSA_sign_setup", "DSA_SIG_new", "DSA_SIG_PRINT", "DSA_verify", "i2d_DSA_SIG", "OLD_DSA_PRIV_DECODE", "PKEY_DSA_CTRL", "PKEY_DSA_CTRL_STR", "PKEY_DSA_KEYGEN", "SIG_CB", "dsa_paramgen_bits", "dsa_paramgen_q_bits", "dsa_paramgen_md", "ECDSA_SIG", "ECDSA_CHECK", "ECDSA_DATA_NEW_METHOD", "ECDSA_do_sign", "ECDSA_do_verify", "ECDSA_METHOD_new", "ECDSA_sign_setup", "int_dhx942_dh", "vparams", "int_dhvparams", "counter", "COMPUTE_KEY", "DHparams_print_fp", "DH_BUILTIN_GENPARAMS", "DH_CMS_DECRYPT", "DH_CMS_SET_PEERKEY", "DH_CMS_SET_SHARED_INFO", "DH_compute_key", "DH_generate_key", "DH_generate_parameters_ex", "DH_new_method", "DH_PARAM_DECODE", "DH_PRIV_DECODE", "DH_PRIV_ENCODE", "DH_PUB_DECODE", "DH_PUB_ENCODE", "DO_DH_PRINT", "GENERATE_KEY", "GENERATE_PARAMETERS", "PKEY_DH_DERIVE", "PKEY_DH_KEYGEN", "dh_paramgen_prime_len", "dh_rfc5114", "dh_paramgen_generator", "dh_paramgen_subprime_len", "dh_paramgen_type", "ECDH_CHECK", "ECDH_compute_key", "ECDH_DATA_new_method", "BEOS_BIND_FUNC", "BEOS_BIND_VAR", "BEOS_LOAD", "BEOS_NAME_CONVERTER", "BEOS_UNLOAD", "DLFCN_BIND_FUNC", "DLFCN_BIND_VAR", "DLFCN_LOAD", "DLFCN_MERGER", "DLFCN_NAME_CONVERTER", "DLFCN_UNLOAD", "DL_BIND_FUNC", "DL_BIND_VAR", "DL_LOAD", "DL_MERGER", "DL_NAME_CONVERTER", "DL_UNLOAD", "DSO_bind_func", "DSO_bind_var", "DSO_convert_filename", "DSO_ctrl", "DSO_free", "DSO_get_filename", "DSO_get_loaded_filename", "DSO_global_lookup", "DSO_load", "DSO_merge", "DSO_new_method", "DSO_pathbyaddr", "DSO_set_filename", "DSO_set_name_converter", "DSO_up_ref", "GLOBAL_LOOKUP_FUNC", "PATHBYADDR", "VMS_BIND_SYM", "VMS_LOAD", "VMS_MERGER", "VMS_UNLOAD", "WIN32_BIND_FUNC", "WIN32_BIND_VAR", "WIN32_GLOBALLOOKUP", "WIN32_GLOBALLOOKUP_FUNC", "WIN32_JOINER", "WIN32_LOAD", "WIN32_MERGER", "WIN32_NAME_CONVERTER", "WIN32_PATHBYADDR", "WIN32_SPLITTER", "WIN32_UNLOAD", "DYNAMIC_CTRL", "DYNAMIC_GET_DATA_CTX", "DYNAMIC_LOAD", "DYNAMIC_SET_DATA_CTX", "ENGINE_add", "ENGINE_by_id", "ENGINE_cmd_is_executable", "ENGINE_ctrl", "ENGINE_ctrl_cmd", "ENGINE_ctrl_cmd_string", "ENGINE_finish", "ENGINE_FREE_UTIL", "ENGINE_get_cipher", "ENGINE_GET_DEFAULT_TYPE", "ENGINE_get_digest", "ENGINE_get_next", "ENGINE_get_pkey_asn1_meth", "ENGINE_get_pkey_meth", "ENGINE_get_prev", "ENGINE_init", "ENGINE_LIST_ADD", "ENGINE_LIST_REMOVE", "ENGINE_load_private_key", "ENGINE_load_public_key", "ENGINE_load_ssl_client_cert", "ENGINE_new", "ENGINE_remove", "ENGINE_set_default_string", "ENGINE_SET_DEFAULT_TYPE", "ENGINE_set_id", "ENGINE_set_name", "ENGINE_TABLE_REGISTER", "ENGINE_UNLOAD_KEY", "ENGINE_UNLOCKED_FINISH", "ENGINE_up_ref", "INT_CTRL_HELPER", "INT_ENGINE_CONFIGURE", "INT_ENGINE_MODULE_INIT", "LOG_MESSAGE", "OPENSSL_ENGINES", "DIR_LOAD", "DIR_ADD", "LIST_ADD", "BUF_memdup", "BUF_MEM_grow", "BUF_MEM_grow_clean", "BUF_MEM_new", "BUF_strdup", "BUF_strndup", "keepalive", "WSAStartup", "ACPT_STATE", "BIO_accept", "BIO_BER_GET_HEADER", "BIO_callback_ctrl", "BIO_ctrl", "BIO_gethostbyname", "BIO_gets", "BIO_get_accept_socket", "BIO_get_host_ip", "BIO_get_port", "BIO_MAKE_PAIR", "BIO_new", "BIO_new_file", "BIO_new_mem_buf", "BIO_nread", "BIO_nread0", "BIO_nwrite", "BIO_nwrite0", "BIO_puts", "BIO_read", "BIO_sock_init", "BIO_write", "BUFFER_CTRL", "CONN_CTRL", "CONN_STATE", "DGRAM_SCTP_READ", "DGRAM_SCTP_WRITE", "FILE_CTRL", "FILE_READ", "LINEBUFFER_CTRL", "MEM_READ", "MEM_WRITE", "WSASTARTUP", "RAND_get_rand_method", "RAND_init_fips", "SSLEAY_RAND_BYTES", "ASN1_TIME", "X509_VAL", "req_info", "X509_REQ_INFO", "pubkey", "X509_CRL", "X509_CRL_INFO", "lastUpdate", "X509_REVOKED", "revocationDate", "NETSCAPE_SPKI", "spkac", "sig_algor", "NETSCAPE_SPKAC", "challenge", "NETSCAPE_CERT_SEQUENCE", "SEQUENCE", "ASCII", "UTF8", "BITLIST", "BOOL", "BOOLEAN", "INTEGER", "ENUM", "ENUMERATED", "OBJECT", "UTCTIME", "GENERALIZEDTIME", "GENTIME", "OCTETSTRING", "BITSTR", "BITSTRING", "UNIVERSALSTRING", "UNIV", "IA5STRING", "UTF8String", "BMPSTRING", "VISIBLESTRING", "VISIBLE", "PRINTABLESTRING", "PRINTABLE", "T61STRING", "TELETEXSTRING", "GeneralString", "GENSTR", "NUMERIC", "NUMERICSTRING", "EXPLICIT", "IMPLICIT", "OCTWRAP", "SEQWRAP", "SETWRAP", "BITWRAP", "FORM", "FORMAT", "EXTERNAL", "REAL", "UTF8STRING", "VIDEOTEXSTRING", "GRAPHICSTRING", "GENERALSTRING", "nombstr", "pkix", "utf8only", "SSL_CERT_DIR", "SSL_CERT_FILE", "BASIC_CONSTRAINTS", "digitalSignature", "nonRepudiation", "keyEncipherment", "dataEncipherment", "keyAgreement", "keyCertSign", "cRLSign", "encipherOnly", "decipherOnly", "client", "server", "objsign", "reserved", "sslCA", "emailCA", "objCA", "EXTENDED_KEY_USAGE", "WIN32", "PKCS12_AUTHSAFES", "PKCS12_SAFEBAGS", "PKCS12_SAFEBAG", "attrib", "PKCS12_BAGS", "PKCS12_MAC_DATA", "dinfo", "PKCS12", "authsafes", "keyInfo", "entityUInfo", "suppPubInfo", "CMS_Receipt", "signedContentIdentifier", "originatorSignatureValue", "CMS_ReceiptRequest", "receiptsFrom", "receiptsTo", "CMS_ReceiptsFrom", "CMS_Attributes_Verify", "CMS_ATTRIBUTES", "CMS_Attributes_Sign", "CMS_ContentInfo", "CMS_CompressedData", "compressionAlgorithm", "encapContentInfo", "CMS_AuthenticatedData", "originatorInfo", "recipientInfos", "macAlgorithm", "digestAlgorithm", "authAttrs", "unauthAttrs", "CMS_EncryptedData", "encryptedContentInfo", "unprotectedAttrs", "CMS_DigestedData", "CMS_EnvelopedData", "CMS_RecipientInfo", "CMS_OtherRecipientInfo", "oriType", "oriValue", "CMS_PasswordRecipientInfo", "keyDerivationAlgorithm", "keyEncryptionAlgorithm", "encryptedKey", "CMS_KEKRecipientInfo", "kekid", "CMS_KEKIdentifier", "keyIdentifier", "CMS_KeyAgreeRecipientInfo", "originator", "recipientEncryptedKeys", "CMS_OriginatorIdentifierOrKey", "CMS_OriginatorPublicKey", "CMS_RecipientEncryptedKey", "CMS_KeyAgreeRecipientIdentifier", "CMS_RecipientKeyIdentifier", "CMS_OtherKeyAttribute", "keyAttrId", "keyAttr", "CMS_KeyTransRecipientInfo", "CMS_EncryptedContentInfo", "contentEncryptionAlgorithm", "encryptedContent", "CMS_OriginatorInfo", "certificates", "crls", "CMS_SignedData", "digestAlgorithms", "signerInfos", "CMS_RevocationInfoChoice", "CMS_OtherRevocationInfoFormat", "otherRevInfoFormat", "otherRevInfo", "CMS_SignerInfo", "signedAttrs", "unsignedAttrs", "CMS_EncapsulatedContentInfo", "eContentType", "eContent", "CMS_SignerIdentifier", "CMS_CertificateChoices", "CMS_OtherCertificateFormat", "otherCertFormat", "otherCert", "CMS_IssuerAndSerialNumber", "rWpRnLI", "rWpRnLI", "ggen", "boundary", "asn1", "fake", "touhou", "overscan", "videoformat", "fullrange", "colorprim", "colormatrix", "chromaloc", "frameref", "scenecut", "bframes", "cqmfile", "cqm4", "cqm8", "cqm4i", "cqm4p", "cqm4iy", "cqm4ic", "cqm4py", "cqm4pc", "cqm8i", "cqm8p", "analyse", "i4x4", "i8x8", "p8x8", "p4x4", "b8x8", "merange", "mvrange", "subme", "qp_constant", "qpmin", "qpmax", "qpstep", "ratetol", "ipratio", "pbratio", "filler", "stitchable", "opencl", "panasonic", "sony", "undef", "component", "secam", "smpte428", "smpte431", "smpte432", "smpte2085", "ICtCp", "ARMv8", "NEON", "SSE2", "SSE3", "LZCNT", "BMI1", "FMA4", "uvDC", "uvAC", "INTRA4X4_LUMA", "INTER4X4_LUMA", "INTRA4X4_CHROMA", "INTER4X4_CHROMA", "INTRA8X8_LUMA", "INTER8X8_LUMA", "underflow"], "debugstrings": ["H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "On2 VP6 (Flash version)", "On2 VP6 (Flash version, with alpha channel)", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "Audio sample format conversion failed\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "libavcodec license: LGPL version 2.1 or later", "FFmpeg version 23b01c7", "libavfilter license: LGPL version 2.1 or later", "Color conversion not implemented for %s\n", "Unsupported tag version. (>=%d)\n", "configurationVersion:                %u\n", "Malformed HTTP version string.\n", "HTTP version string: %s\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "version =%d, isom =%d\n", "minor_version", "Version %d", "sidx version %u", "premiere_version", "quicktime_version", "sid=0x%x sec_num=%d/%d version=%d\n", "Server version %d.%d.%d.%d\n", "RTMP protocol version mismatch\n", "Version of the Flash plugin used to run the SWF player.", "libavutil license: LGPL version 2.1 or later", "libswresample license: LGPL version 2.1 or later", "unsupported planar RGB conversion %s -> %s\n", "unsupported conversion to planar RGB %s -> %s\n", "libswscale license: LGPL version 2.1 or later", "No accelerated colorspace conversion found from %s to %s.\n", "protocol version", "bad protocol version number", "ssl ctx has no default ssl version", "tlsv1 alert protocol version", "unknown ssl version", "unsupported ssl version", "wrong ssl version", "wrong version number", "SSL_CTX_set_ssl_version", "s->version <= TLS_MAX_VERSION", "s->d1->w_msg_hdr.msg_len + ((s->version==DTLS1_BAD_VER)?3:DTLS1_CCS_HEADER_LENGTH) == (unsigned int)s->init_num", "documentVersion", "bad version number", "Suite B: certificate version invalid", "%*sVersion: %ld (0x%lX)", "\n%*sVersion   : ", "unsupported version", "version incompatibility", "%8sVersion: %lu (0x%lx)\n", "MIME-Version: 1.0%s", "Android (4751641 based on r328903) clang version 7.0.2 (https://android.googlesource.com/toolchain/clang 003100370607242ddd5815e4a043907ea9004281) (https://android.googlesource.com/toolchain/llvm 1d739ffb0366421d383e04ff80ec2ee591315116) (based on LLVM 7.0.2svn)", "GCC: (GNU) 4.9 20140827 (prerelease)"], "localsymbols": [""], "dependencies": ["libdl.so", "libc.so", "libm.so", "libz.so"], "elfname": "libtbffmpeg.so"}