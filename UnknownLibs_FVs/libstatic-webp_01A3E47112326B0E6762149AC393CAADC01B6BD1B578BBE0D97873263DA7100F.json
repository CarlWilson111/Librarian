{"globalvars": ["_ZTIy", "WebPRescalerImportRowExpand", "_ZTSN10__cxxabiv117__pbase_type_infoE", "_ZTSn", "_ZTSSt16invalid_argument", "WebPDispatchAlphaToGreen", "_ZTSPm", "kVP8NewRange", "_ZTSPc", "_ZTSN10__cxxabiv117__array_type_infoE", "_ZTIPKj", "_ZTIPg", "_ZTVSt12length_error", "_ZTSPDn", "_ZTSPf", "_ZTVN10__cxxabiv116__shim_type_infoE", "_ZTIPKDs", "WebPConvertARGBToUV", "_ZTIg", "_ZTIPx", "VP8HFilter16i", "_ZTIPKg", "_ZTSi", "_ZTVSt20bad_array_new_length", "WebPSharpYUVUpdateY", "VP8Transform", "__cxa_terminate_handler", "VP8PredLuma4", "_ZTVN10__cxxabiv130__qualified_function_type_infoE", "_ZTSPs", "_ZTIn", "_ZTVN10__cxxabiv120__function_type_infoE", "_ZTIN10__cxxabiv120__function_type_infoE", "_ZTIa", "_ZTISt12domain_error", "_ZTIPKy", "_ZTVSt10bad_typeid", "_ZTSN10__cxxabiv119__pointer_type_infoE", "_ZTVSt9type_info", "_ZTIi", "_ZTSN10__cxxabiv120__function_type_infoE", "_ZTIN10__cxxabiv117__class_type_infoE", "_ZTSN10__cxxabiv116__shim_type_infoE", "_ZTSd", "VP8LPredictorsAdd", "_ZTIPt", "_ZTSl", "WebPSharpYUVUpdateRGB", "__cxa_new_handler", "_ZTIPKi", "_ZTIx", "WebPYUV444Converters", "WebPDispatchAlpha", "_ZTSPh", "_ZTIPKn", "_ZTSPKy", "_ZTSPKDh", "_ZTIPj", "VP8LPredictors", "_ZTIDi", "_ZTSx", "VP8DitherCombine8x8", "_ZTSPKt", "_ZTVN10__cxxabiv117__pbase_type_infoE", "_ZTISt20bad_array_new_length", "_ZTIPn", "_ZTIN10__cxxabiv129__pointer_to_member_type_infoE", "WebPApplyAlphaMultiply4444", "_ZTSPd", "_ZTSDn", "_ZTIe", "VP8LMapColor8b", "_ZTSPj", "VP8LTransformColorInverse", "_ZTSSt12length_error", "_ZTSe", "_ZTSSt10bad_typeid", "_ZTVN10__cxxabiv117__class_type_infoE", "_ZTIt", "VP8LConvertBGRAToBGR", "_ZTVSt16invalid_argument", "_ZTSPn", "VP8TransformDCUV", "WebPApplyAlphaMultiply", "_ZTVSt14overflow_error", "_ZTISt16invalid_argument", "_ZTSc", "WebPHasAlpha8b", "_ZTSN10__cxxabiv130__qualified_function_type_infoE", "_ZTIb", "_ZTIPv", "_ZTIPKDi", "VP8PredChroma8", "_ZTSPa", "_ZTISt13runtime_error", "VP8LConvertBGRAToRGB565", "VP8SimpleHFilter16i", "_ZTIPKa", "VP8SimpleHFilter16", "_ZTIPs", "_ZTIDn", "_ZTSPDs", "_ZTSs", "_ZTSN10__cxxabiv129__pointer_to_member_type_infoE", "_ZTSSt12domain_error", "_ZTSSt14overflow_error", "_ZTSN10__cxxabiv120__si_class_type_infoE", "_ZTIPb", "_ZTIPKm", "_ZTIo", "_ZTSv", "_ZTIPo", "VP8kclip1", "_ZTIPKs", "VP8LPredictorsAdd_C", "VP8PredLuma16", "_ZTSPKDs", "_ZTSPKs", "VP8ksclip1", "_ZTSPKm", "_ZTSPKj", "_ZTIPc", "_ZTIPKl", "WebPConvertRGBA32ToUV", "VP8VFilter16i", "VP8VFilter8i", "_ZTSh", "WebPExtractGreen", "_ZTSSt12out_of_range", "_ZTSPl", "_ZTIf", "_ZTIN10__cxxabiv120__si_class_type_infoE", "_ZTSN10__cxxabiv117__class_type_infoE", "_ZTSt", "__cxa_unexpected_handler", "_ZTSPKDn", "_ZTSPKd", "_ZTSSt9exception", "VP8TransformUV", "_ZTSDh", "_ZTIPDh", "_ZTSPKh", "WebPUnfilters", "_ZTIPKc", "_ZTIPKe", "_ZTVSt9bad_alloc", "_ZTIPw", "_ZTIN10__cxxabiv117__array_type_infoE", "_ZTISt10bad_typeid", "VP8LMapColor32b", "WebPHasAlpha32b", "WebPMultARGBRow", "VP8LConvertBGRAToRGBA", "_ZTIPi", "_ZTSPx", "_ZTSPDi", "WebPRescalerExportRowExpand", "_ZTSPKn", "_ZTSPt", "_ZTSSt11range_error", "_ZTIPDn", "_ZTSPKDi", "_ZTVN10__cxxabiv123__fundamental_type_infoE", "VP8HFilter8i", "VP8TransformWHT", "_ZTIPm", "_ZTSPKg", "_ZTId", "_ZTVSt15underflow_error", "_ZTSSt11logic_error", "_ZTIN10__cxxabiv116__enum_type_infoE", "_ZTSPy", "_ZTIPa", "_ZTSPKb", "_ZTSPb", "_ZTSSt20bad_array_new_length", "_ZTSPKw", "_ZTSN10__cxxabiv116__enum_type_infoE", "_ZTSPDh", "_ZTIc", "_ZTIPKd", "WebPSamplers", "_ZTVSt13runtime_error", "_ZTSPe", "_ZTISt14overflow_error", "_ZTISt9bad_alloc", "_ZTIj", "_ZTVSt11range_error", "_ZTIPDi", "_ZTISt9type_info", "VP8ksclip2", "_ZTIPKDh", "_ZTIPe", "WebPConvertBGR24ToY", "WebPConvertRGB24ToY", "_ZTISt9exception", "VP8VFilter8", "WebPConvertARGBToY", "_ZTIN10__cxxabiv123__fundamental_type_infoE", "_ZTSSt16bad_array_length", "_ZTSf", "_ZTIw", "_ZTIPKo", "_ZTVN10__cxxabiv120__si_class_type_infoE", "_ZTSPKa", "_ZTVN10__cxxabiv119__pointer_type_infoE", "VP8SimpleVFilter16i", "VP8LAddGreenToBlueAndRed", "_ZTIDh", "WebPPackRGB", "WebPSharpYUVFilterRow", "_ZTVSt13bad_exception", "_ZTVSt9exception", "_ZTSSt13bad_exception", "_ZTSPi", "VP8HFilter16", "_ZTSm", "VP8VFilter16", "_ZTISt8bad_cast", "_ZTISt13bad_exception", "_ZTIPy", "WebPMultRow", "_ZTSSt9type_info", "_ZTSSt15underflow_error", "_ZTSDi", "_ZTSSt9bad_alloc", "_ZTSy", "_ZTSPKc", "_ZTSw", "_ZTSPg", "_ZTIPh", "_ZTSN10__cxxabiv121__vmi_class_type_infoE", "_ZTSPKi", "_ZTIPKw", "_ZTSPKe", "_ZTIPDs", "_ZTVSt8bad_cast", "_ZTVN10__cxxabiv117__array_type_infoE", "WebPRescalerExportRowShrink", "_ZTVN10__cxxabiv116__enum_type_infoE", "_ZTSb", "VP8SimpleVFilter16", "_ZTIPKv", "_ZTIN10__cxxabiv130__qualified_function_type_infoE", "_ZTSa", "_ZTSDs", "_ZTIN10__cxxabiv116__shim_type_infoE", "_ZTISt12out_of_range", "WebPRescalerImportRowShrink", "WebPFilters", "_ZTVN10__cxxabiv129__pointer_to_member_type_infoE", "WebPLogTable8bit", "_ZTIPd", "_ZTIDs", "VP8TransformAC3", "_ZTSg", "VP8GetCPUInfo", "VP8LConvertBGRAToRGB", "_ZTIm", "_ZTSPv", "_ZTSPw", "_ZTIs", "_ZTIPKx", "_ZTIPKf", "_ZTSSt8bad_cast", "_ZTISt11range_error", "VP8LPredictors_C", "VP8HFilter8", "_ZTVSt11logic_error", "WebPExtractAlpha", "_ZTSj", "_ZTSPKf", "_ZTSPKl", "_ZTISt16bad_array_length", "_ZTIN10__cxxabiv119__pointer_type_infoE", "_ZTSPKv", "_ZTVSt16bad_array_length", "_ZTVSt12out_of_range", "_ZTVSt12domain_error", "_ZTIPl", "_ZTIPf", "_ZTIN10__cxxabiv117__pbase_type_infoE", "WebPUpsamplers", "_ZTIPKb", "_ZTIPKDn", "VP8TransformDC", "_ZTIPKt", "_ZTIl", "_ZTSPKx", "_ZTIN10__cxxabiv121__vmi_class_type_infoE", "_ZTSPKo", "_ZTISt12length_error", "_ZTSN10__cxxabiv123__fundamental_type_infoE", "_ZTSo", "_ZTIv", "_ZTIPKh", "_ZTISt11logic_error", "_ZTISt15underflow_error", "kVP8Log2Range", "VP8kabs0", "VP8LConvertBGRAToRGBA4444", "_ZTSPo", "_ZTIh", "_ZTSSt13runtime_error", "_ZTVN10__cxxabiv121__vmi_class_type_infoE"], "importedglobals": ["_tolower_tab_", "_ctype_", "__sF", "__stack_chk_guard"], "importedfunctions": ["fwrite", "__errno", "__android_log_print", "pthread_getspecific", "__gnu_Unwind_Find_exidx", "pthread_key_create", "exit", "abort", "pthread_cond_init", "pthread_cond_destroy", "pthread_join", "vasprintf", "fflush", "strcmp", "lseek64", "strlen", "pthread_cond_wait", "strncasecmp", "fputc", "deflateReset", "dladdr", "fopen", "memcmp", "pthread_cond_broadcast", "sscanf", "__isfinite", "getenv", "free", "feof", "deflateEnd", "strncmp", "AndroidBitmap_lockPixels", "fprintf", "deflate", "AndroidBitmap_getInfo", "fclose", "calloc", "__assert2", "strstr", "pthread_cond_signal", "raise", "deflateInit2_", "strchr", "AndroidBitmap_unlockPixels", "pthread_setspecific", "isspace", "pthread_mutex_init", "malloc", "memchr", "__stack_chk_fail", "longjmp", "pthread_mutex_unlock", "pthread_once", "pthread_mutex_lock", "crc32", "strerror", "fgets", "__signbit", "pthread_mutex_destroy", "pthread_create", "realloc", "setjmp"], "exportedfunctions": ["WebPInitDecoderConfigInternal", "WebPFlipBuffer", "WebPInitUpsamplers", "_ZSt13set_terminatePFvvE", "_ZSt14get_unexpectedv", "WebPCopyDecBuffer", "VP8LDecodeImage", "_ZNSt16bad_array_lengthD2Ev", "_ZNSt12domain_errorD1Ev", "WebPGetInfo", "_ZNSt12length_errorD2Ev", "WebPDemuxGetI", "WebPFreeDecBuffer", "VP8LCheckSignature", "_ZNSt16bad_array_lengthC2Ev", "WebPMultRow_C", "WebPRescalerImportRowExpand_C", "VP8LColorIndexInverseTransformAlpha", "WebPCopyPlane", "_ZNSt8bad_castD0Ev", "_ZNKSt20bad_array_new_length4whatEv", "WebPDecodeARGB", "_ZSt10unexpectedv", "WebPRescalerGetScaledDimensions", "WebPSafeMalloc", "WebPRescalerDspInit", "VP8ResetProba", "WebPDemuxPrevFrame", "_ZNSt20bad_array_new_lengthD0Ev", "WebPInitYUV444Converters", "VP8InitRandom", "VP8LDoFillBitWindow", "WebPDecodeBGRInto", "_ZNSt11range_errorD2Ev", "_ZNSt9exceptionD0Ev", "WebPRescalerExportRowShrink_C", "VP8LColorCacheInit", "VP8FiltersInit", "WebPRescalerInit", "VP8LReadBits", "_ZNSt13runtime_errorD0Ev", "WebPDecodeRGBInto", "_ZNSt15underflow_errorD1Ev", "WebPMultARGBRows", "VP8LConvertBGRAToRGBA_C", "WebPDeallocateAlphaMemory", "VP8LNew", "_ZSt15get_new_handlerv", "VP8LoadFinalBytes", "_ZNSt16bad_array_lengthD0Ev", "_ZNSt12domain_errorD0Ev", "WebPGetLinePairConverter", "WebPSafeFree", "_ZNSt10bad_typeidC2Ev", "__gxx_personality_v0", "WebPInitSamplers", "_ZNSt10bad_typeidD1Ev", "VP8InitBitReader", "_ZNSt8bad_castD1Ev", "WebPFree", "WebPInitConvertARGBToYUV", "_ZNSt10bad_typeidC1Ev", "_ZNSt10bad_typeidD2Ev", "VP8ExitCritical", "_ZNKSt16bad_array_length4whatEv", "_ZNSt8bad_castC2Ev", "_ZNSt9type_infoD1Ev", "_ZNKSt9bad_alloc4whatEv", "_ZNSt13runtime_errorD1Ev", "WebPDecodeBGRA", "WebPRescalerExportRowExpand_C", "WebPDecodeYUV", "WebPYuv444ToRgba_C", "_ZNSt13runtime_errorD2Ev", "_ZNSt8bad_castC1Ev", "_ZNKSt13runtime_error4whatEv", "_ZNKSt11logic_error4whatEv", "WebPYuv444ToBgr_C", "VP8LBitReaderSetBuffer", "WebPSamplerProcessPlane", "_ZNSt9exceptionD1Ev", "VP8GetInfo", "VP8LGetInfo", "WebPSetWorkerInterface", "VP8StatusMessage", "WebPResetDecParams", "VP8LColorCacheCopy", "_ZNSt11range_errorD0Ev", "WebPGetDecoderVersion", "VP8LHtreeGroupsFree", "_ZNSt13bad_exceptionD2Ev", "WebPRescalerExportRow", "VP8ParseIntraModeRow", "WebPInitDecBufferInternal", "_ZNSt9exceptionD2Ev", "_ZNSt14overflow_errorD2Ev", "WebPDecodeRGB", "VP8LAddGreenToBlueAndRed_C", "WebPDemuxReleaseIterator", "WebPDemuxGetFrame", "_ZNSt11range_errorD1Ev", "WebPConvertARGBToUV_C", "WebPGetDemuxVersion", "WebPDecodeYUVInto", "WebPMultRows", "_ZNSt9bad_allocC2Ev", "WebPSafeCalloc", "WebPRescalerExport", "_ZNKSt8bad_cast4whatEv", "WebPDemuxPrevChunk", "WebPYuv444ToBgra_C", "_ZNSt20bad_array_new_lengthD2Ev", "WebPDecode", "JNI_OnLoad", "_ZNSt20bad_array_new_lengthD1Ev", "WebPDecodeBGR", "_ZNSt9bad_allocC1Ev", "_ZNSt11logic_errorD2Ev", "VP8EnterCritical", "VP8CheckSignature", "VP8SetError", "_ZNSt16bad_array_lengthC1Ev", "WebPRescaleNeededLines", "__dynamic_cast", "WebPInitCustomIo", "VP8InitDithering", "VP8BitReaderSetBuffer", "_ZNSt12length_errorD1Ev", "VP8LDecodeAlphaHeader", "VP8LDecodeHeader", "WebPYuv444ToArgb_C", "WebPRescalerImportRow", "VP8LConvertFromBGRA", "VP8ProcessRow", "_ZNSt16invalid_argumentD2Ev", "_ZNSt11logic_errorD1Ev", "_ZSt14set_unexpectedPFvvE", "_ZNSt16invalid_argumentD0Ev", "WebPParseHeaders", "_ZNSt8bad_castD2Ev", "VP8LConvertBGRAToRGB565_C", "VP8LConvertBGRAToRGBA4444_C", "_ZNSt14overflow_errorD0Ev", "_ZNKSt10bad_typeid4whatEv", "VP8LTransformColorInverse_C", "VP8LConvertBGRAToBGR_C", "WebPRescalerImport", "VP8DecodeMB", "_ZNSt9type_infoD2Ev", "_ZNSt12length_errorD0Ev", "_ZNSt12out_of_rangeD0Ev", "_ZNSt12out_of_rangeD2Ev", "WebPDemuxNextFrame", "WebPCopyPixels", "WebPGetColorPalette", "_ZSt15set_new_handlerPFvvE", "_ZNSt10bad_typeidD0Ev", "VP8New", "WebPInitAlphaProcessing", "VP8Decode", "_ZNSt13bad_exceptionD1Ev", "WebPDemuxReleaseChunkIterator", "VP8GetHeaders", "WebPRescalerImportRowShrink_C", "VP8LInitBitReader", "VP8LColorCacheClear", "_ZNSt9bad_allocD2Ev", "VP8LConvertBGRAToRGB_C", "_ZNSt20bad_array_new_lengthC2Ev", "_ZNSt20bad_array_new_lengthC1Ev", "WebPDequantizeLevels", "_ZNSt13bad_exceptionD0Ev", "_ZNSt16invalid_argumentD1Ev", "VP8InitClipTables", "VP8LDspInit", "VP8InitScanline", "WebPDecodeRGBAInto", "WebPGetWorkerInterface", "WebPDecodeARGBInto", "_ZNSt9bad_allocD1Ev", "WebPDecodeRGBA", "VP8LClear", "VP8LBuildHuffmanTable", "VP8LHtreeGroupsNew", "VP8Clear", "_ZNSt9type_infoD0Ev", "_ZNSt16bad_array_lengthD1Ev", "_ZNSt9bad_allocD0Ev", "_ZNSt12out_of_rangeD1Ev", "WebPDemuxNextChunk", "WebPAllocateDecBuffer", "WebPGetFeaturesInternal", "WebPAvoidSlowMemory", "_ZNSt14overflow_errorD1Ev", "VP8Status", "WebPDemuxGetChunk", "VP8LDelete", "_ZSt13get_terminatev", "WebPYuv444ToRgba4444_C", "_ZNKSt9exception4whatEv", "WebPGrabDecBuffer", "VP8ParseQuant", "_ZNSt12domain_errorD2Ev", "VP8InitIoInternal", "WebPIoInitFromOptions", "WebPMultARGBRow_C", "VP8DspInit", "VP8LInverseTransform", "VP8GetSignedValue", "_ZNSt15underflow_errorD0Ev", "_ZNKSt13bad_exception4whatEv", "WebPDecodeBGRAInto", "VP8Delete", "WebPYuv444ToRgb565_C", "VP8ParseProba", "VP8GetValue", "VP8GetThreadMethod", "WebPYuv444ToRgb_C", "VP8RemapBitReader", "VP8DecompressAlphaRows", "WebPCopyDecBufferPixels", "_ZNSt15underflow_errorD2Ev", "WebPConvertRGBA32ToUV_C", "_ZNSt11logic_errorD0Ev", "WebPDemuxDelete", "VP8LDecodeAlphaImageStream", "WebPDemuxInternal", "VP8InitFrame", "_ZSt9terminatev"], "allstrings": ["java/io/InputStream", "read", "([B)I", "libstatic-webp", "could not find RuntimeException class", "could not find InputStream", "could not find OutputStream", "failed to register InputStream.read", "failed to register InputStream.skip", "failed to register OutputStream.write", "com/facebook/webpsupport/WebpBitmapFactoryImpl", "java/io/FileDescriptor", "createBitmap", "(IILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "ARGB_8888", "android/graphics/Bitmap$Config", "(Ljava/lang/String;)Landroid/graphics/Bitmap$Config;", "com/facebook/animated/webp/WebPImage", "(Landroid/graphics/BitmapFactory$Options;II)V", "nativeDecodeStream", "(Ljava/io/InputStream;Landroid/graphics/BitmapFactory$Options;F[B)Landroid/graphics/Bitmap;", "nativeDecodeByteArray", "([BIILandroid/graphics/BitmapFactory$Options;F[B)Landroid/graphics/Bitmap;", "nativeSeek", "(Ljava/io/FileDescriptor;JZ)J", "Could not create WebPDemux from image. This webp might be malformed.", "could not find WebpTranscoderImpl class", "nativeTranscodeWebpToJpeg", "(Ljava/io/InputStream;Ljava/io/OutputStream;I)V", "nativeTranscodeWebpToPng", "(Ljava/io/InputStream;Ljava/io/OutputStream;)V", "Already disposed", "Width or height is negative !", "Width or height is too small", "nativeCreateFromDirectByteBuffer", "(Ljava/nio/ByteBuffer;)Lcom/facebook/animated/webp/WebPImage;", "nativeCreateFromNativeMemory", "(JI)Lcom/facebook/animated/webp/WebPImage;", "nativeGetWidth", "nativeGetHeight", "nativeGetDuration", "nativeGetFrameCount", "nativeGetFrameDurations", "()[I", "nativeGetLoopCount", "nativeGetFrame", "(I)Lcom/facebook/animated/webp/WebPFrame;", "nativeGetSizeInBytes", "nativeDispose", "nativeFinalize", "nativeRenderFrame", "(IILandroid/graphics/Bitmap;)V", "nativeGetXOffset", "nativeGetYOffset", "nativeGetDurationMs", "nativeShouldDisposeToBackgroundColor", "nativeIsBlendWithPreviousFrame", "allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size", "Bogus message code %d", "ALIGN_TYPE is wrong, please fix", "MAX_ALLOC_CHUNK is wrong, please fix", "Bogus buffer control mode", "Invalid component ID %d in SOS", "Invalid crop request", "DCT coefficient out of range", "IDCT output block size %d not supported", "Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c", "Bogus Huffman table definition", "Bogus input colorspace", "Bogus JPEG colorspace", "Bogus marker length", "Wrong JPEG library version: library is %d, caller expects %d", "Sampling factors too large for interleaved scan", "Invalid memory pool code %d", "Unsupported JPEG data precision %d", "Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d", "Invalid progressive parameters at scan script entry %d", "Bogus sampling factors", "Invalid scan script at entry %d", "Improper call to JPEG library in state %d", "JPEG parameter struct mismatch: library thinks size is %u, caller expects %u", "Bogus virtual array access", "Buffer passed to JPEG library is too small", "Suspension not allowed here", "CCIR601 sampling not implemented yet", "Too many color components: %d, max %d", "Unsupported color conversion request", "Bogus DAC index %d", "Bogus DAC value 0x%x", "Bogus DHT index %d", "Bogus DQT index %d", "Empty JPEG image (DNL not supported)", "Read from EMS failed", "Write to EMS failed", "Didn't expect more than one scan", "Input file read error", "Output file write error --- out of disk space?", "Fractional sampling not implemented yet", "Huffman code size table overflow", "Missing Huffman code table entry", "Maximum supported image dimension is %u pixels", "Empty input file", "Premature end of input file", "Cannot transcode due to multiple use of quantization table %d", "Scan script does not transmit all data", "Invalid color quantization mode change", "Not implemented yet", "Requested feature was omitted at compile time", "Arithmetic table 0x%02x was not defined", "Backing store not supported", "Huffman table 0x%02x was not defined", "JPEG datastream contains no image", "Quantization table 0x%02x was not defined", "Not a JPEG file: starts with 0x%02x 0x%02x", "Insufficient memory (case %d)", "Cannot quantize more than %d color components", "Cannot quantize to fewer than %d colors", "Cannot quantize to more than %d colors", "Invalid JPEG file structure: two SOF markers", "Invalid JPEG file structure: missing SOS marker", "Unsupported JPEG process: SOF type 0x%02x", "Invalid JPEG file structure: two SOI markers", "Invalid JPEG file structure: SOS before SOF", "Failed to create temporary file %s", "Read failed on temporary file", "Seek failed on temporary file", "Write failed on temporary file --- out of disk space?", "Application transferred too few scanlines", "Unsupported marker type 0x%02x", "Virtual array controller messed up", "Image too wide for this implementation", "Read from XMS failed", "Write to XMS failed", "Copyright (C) 1991-2017 The libjpeg-turbo Project and many others", "8d  15-Jan-2012", "Caution: quantization tables are too coarse for baseline JPEG", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "Unknown APP0 marker (not JFIF), length %u", "Unknown APP14 marker (not Adobe), length %u", "Define Arithmetic Table 0x%02x: 0x%02x", "Define Huffman Table 0x%02x", "Define Quantization Table %d  precision %d", "Define Restart Interval %u", "Freed EMS handle %u", "Obtained EMS handle %u", "End Of Image", "        %3d %3d %3d %3d %3d %3d %3d %3d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "Warning: thumbnail image size does not match data length %u", "JFIF extension marker: type 0x%02x, length %u", "    with %d x %d thumbnail image", "Miscellaneous marker 0x%02x, length %u", "Unexpected marker 0x%02x", "        %4u %4u %4u %4u %4u %4u %4u %4u", "Quantizing to %d = %d*%d*%d colors", "Quantizing to %d colors", "Selected %d colors for quantization", "At marker 0x%02x, recovery action %d", "RST%d", "Smoothing not supported with nonstandard sampling ratios", "Start Of Frame 0x%02x: width=%u, height=%u, components=%d", "    Component %d: %dhx%dv q=%d", "Start of Image", "Start Of Scan: %d components", "    Component %d: dc=%d ac=%d", "  Ss=%d, Se=%d, Ah=%d, Al=%d", "Closed temporary file %s", "Opened temporary file %s", "JFIF extension marker: JPEG-compressed thumbnail image, length %u", "JFIF extension marker: palette thumbnail image, length %u", "JFIF extension marker: RGB thumbnail image, length %u", "Unrecognized component IDs %d %d %d, assuming YCbCr", "Freed XMS handle %u", "Obtained XMS handle %u", "Unknown Adobe color transform code %d", "Corrupt JPEG data: bad arithmetic code", "Inconsistent progression sequence for component %d coefficient %d", "Corrupt JPEG data: %u extraneous bytes before marker 0x%02x", "Corrupt JPEG data: premature end of data segment", "Corrupt JPEG data: bad Huffman code", "Warning: unknown JFIF revision number %d.%02d", "Premature end of JPEG file", "Corrupt JPEG data: found marker 0x%02x instead of RST%d", "Invalid SOS parameters for sequential JPEG", "Application transferred too many scanlines", "1.6.35", "\nlibpng version 1.6.35 - July 15, 2018\nCopyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson\nCopyright (c) 1996-1997 Andreas Dilger\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n", "unexpected zlib return code", "unexpected end of LZ stream", "missing LZ dictionary", "zlib IO error", "bad parameters to zlib", "damaged LZ stream", "insufficient memory", "truncated", "unsupported zlib version", "unexpected zlib return", "internal error checking chromaticities", "invalid rendering intent", "RGB color space not permitted on grayscale PNG", "Gray color space not permitted on RGB PNG", "invalid ICC profile color space", "invalid embedded Abstract ICC profile", "unexpected DeviceLink ICC profile class", "unexpected NamedColor ICC profile class", "unrecognized ICC profile class", "unexpected ICC PCS encoding", "Image width exceeds user limit in IHDR", "Image height is zero in IHDR", "Image height exceeds user limit in IHDR", "Invalid bit depth in IHDR", "Invalid color type in IHDR", "Invalid color type/bit depth combination in IHDR", "Unknown interlace method in IHDR", "Unknown compression method in IHDR", "MNG features are not allowed in a PNG datastream", "Unknown filter method in IHDR", "Invalid filter method in IHDR", "Invalid IHDR data", "ASCII conversion buffer too small", "too short", "Out of memory", "Can't set both read_data_fn and write_data_fn in the same structure", "Invalid bit depth for grayscale image", "Invalid bit depth for RGB image", "Invalid image color type specified", "Invalid compression type specified", "Invalid filter type specified", "Invalid interlace type specified", "Invalid number of transparent colors specified", "Can't write tRNS with an alpha channel", "Invalid background palette index", "__cxa_guard_acquire failed to release mutex", "__cxa_guard_release failed to broadcast condition variable", "__cxa_guard_abort failed to broadcast condition variable", "/usr/local/google/buildbot/src/android/ndk-r15-release/external/libcxx/../../external/libcxxabi/src/abort_message.cpp", "terminating", "uncaught", " const", " volatile", " restrict", "vtable for ", "VTT for ", "virtual thunk to ", "non-virtual thunk to ", "throw", "false", "short", "std::", "std::basic_string<char, std::char_traits<char>, std::allocator<char> >", "basic_string", "std::basic_istream<char, std::char_traits<char> >", "basic_istream", "float", "double", "libunwind: %s %s:%d - %s\n", "/usr/local/google/buildbot/src/android/ndk-r15-release/external/libcxx/../../external/libunwind_llvm/src/Unwind-EHABI.cpp", "_Unwind_VRS_Result _Unwind_VRS_Set(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_VRS_DataRepresentation, void *)", "unsupported register class", "_Unwind_VRS_Result _Unwind_VRS_Pop(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_VRS_DataRepresentation)", "_Unwind_Reason_Code unwind_phase2(unw_context_t *, _Unwind_Exception *, bool)", "during phase1 personality function said it would stop here, but now in phase2 it did not stop here", "_Unwind_VRS_Result _Unwind_VRS_Get_Internal(_Unwind_Context *, _Unwind_VRS_RegClass, uint32_t, _Unwind_VRS_DataRepresentation, void *)", "/usr/local/google/buildbot/src/android/ndk-r15-release/external/libcxx/../../external/libunwind_llvm/src/UnwindCursor.hpp", "/usr/local/google/buildbot/src/android/ndk-r15-release/external/libcxx/../../external/libunwind_llvm/src/Registers.hpp", "unsupported arm register", "Unknown ARM float register", "void libunwind::Registers_arm::setFloatRegister(int, unw_fpreg_t)", "bool libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_arm>::getInfoFromEHABISection(libunwind::UnwindCursor::pint_t, const libunwind::UnwindInfoSections &) [A = libunwind::LocalAddressSpace, R = libunwind::Registers_arm]", "index inlined table detected but pr function requires extra words", "null VP8Io passed to VP8GetHeaders()", "Truncated header.", "Incorrect keyframe parameters.", "Frame not displayable.", "bad partition length", "St9bad_alloc", "St20bad_array_new_length", "St16bad_array_length", "St9exception", "St13bad_exception", "N10__cxxabiv116__shim_type_infoE", "N10__cxxabiv117__class_type_infoE", "N10__cxxabiv117__pbase_type_infoE", "N10__cxxabiv119__pointer_type_infoE", "N10__cxxabiv120__function_type_infoE", "N10__cxxabiv129__pointer_to_member_type_infoE", "N10__cxxabiv123__fundamental_type_infoE", "PKDn", "PKDh", "PKDs", "PKDi", "N10__cxxabiv117__array_type_infoE", "N10__cxxabiv130__qualified_function_type_infoE", "N10__cxxabiv116__enum_type_infoE", "N10__cxxabiv120__si_class_type_infoE", "N10__cxxabiv121__vmi_class_type_infoE", "St12domain_error", "St11logic_error", "St16invalid_argument", "St12length_error", "St12out_of_range", "St11range_error", "St13runtime_error", "St14overflow_error", "St15underflow_error", "St9type_info", "St8bad_cast", "St10bad_typeid", "wchar_t", "signed char", "unsigned char", "unsigned short", "unsigned __int128", "operator&&", "operator&", "operator&=", "operator=", "operator()", "operator,", "operator~", "operator delete[]", "operator*", "operator delete", "operator/", "operator/=", "operator^", "operator^=", "operator==", "operator>=", "operator>", "operator[]", "operator<=", "operator<<", "operator<<=", "operator<", "operator-", "operator-=", "operator*=", "operator--", "operator new[]", "operator!=", "operator!", "operator new", "operator||", "operator|", "operator|=", "operator->*", "operator+", "operator+=", "operator++", "operator->", "operator?", "operator%", "operator%=", "operator>>", "operator>>=", "(anonymous namespace)", "sizeof...(", "std::string", "std::istream", "std::ostream", "std::iostream", "'lambda'(", "std::allocator", "std::basic_string", "unsigned int", "unsigned long", "long long", "unsigned long long", "long double", "__float128", "decimal64", "decimal128", "decimal32", "decimal16", "decltype(auto)", "std::nullptr_t"], "stringidentifiers": ["read", "createBitmap", "ARGB_8888", "nativeDecodeStream", "nativeDecodeByteArray", "nativeSeek", "nativeTranscodeWebpToJpeg", "nativeTranscodeWebpToPng", "nativeCreateFromDirectByteBuffer", "nativeCreateFromNativeMemory", "nativeGetWidth", "nativeGetHeight", "nativeGetDuration", "nativeGetFrameCount", "nativeGetFrameDurations", "nativeGetLoopCount", "nativeGetFrame", "nativeGetSizeInBytes", "nativeDispose", "nativeFinalize", "nativeRenderFrame", "nativeGetXOffset", "nativeGetYOffset", "nativeGetDurationMs", "nativeShouldDisposeToBackgroundColor", "nativeIsBlendWithPreviousFrame", "truncated", "terminating", "uncaught", "throw", "false", "short", "basic_string", "basic_istream", "float", "double", "St9bad_alloc", "St20bad_array_new_length", "St16bad_array_length", "St9exception", "St13bad_exception", "N10__cxxabiv116__shim_type_infoE", "N10__cxxabiv117__class_type_infoE", "N10__cxxabiv117__pbase_type_infoE", "N10__cxxabiv119__pointer_type_infoE", "N10__cxxabiv120__function_type_infoE", "N10__cxxabiv129__pointer_to_member_type_infoE", "N10__cxxabiv123__fundamental_type_infoE", "PKDn", "PKDh", "PKDs", "PKDi", "N10__cxxabiv117__array_type_infoE", "N10__cxxabiv130__qualified_function_type_infoE", "N10__cxxabiv116__enum_type_infoE", "N10__cxxabiv120__si_class_type_infoE", "N10__cxxabiv121__vmi_class_type_infoE", "St12domain_error", "St11logic_error", "St16invalid_argument", "St12length_error", "St12out_of_range", "St11range_error", "St13runtime_error", "St14overflow_error", "St15underflow_error", "St9type_info", "St8bad_cast", "St10bad_typeid", "wchar_t", "std::string", "std::istream", "std::ostream", "std::iostream", "std::allocator", "std::basic_string", "__float128", "decimal64", "decimal128", "decimal32", "decimal16", "std::nullptr_t"], "debugstrings": ["Wrong JPEG library version: library is %d, caller expects %d", "Unsupported color conversion request", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "unsupported zlib version", "ASCII conversion buffer too small", "GCC: (GNU) 4.9.x 20150123 (prerelease)", "Android clang version 5.0.300080  (based on LLVM 5.0.300080)"], "localsymbols": [""], "dependencies": ["libstdc++.so", "libdl.so", "libm.so", "libc.so", "libjnigraphics.so", "liblog.so", "libz.so"], "elfname": "libstatic-webp.so"}