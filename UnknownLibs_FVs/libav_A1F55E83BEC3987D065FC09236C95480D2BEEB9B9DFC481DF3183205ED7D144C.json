{"globalvars": ["ff_cos_64_fixed", "ff_rv20_decoder", "ff_vc1_intfr_4mv_mbmode_codes", "ff_zigzag_direct", "avpriv_mpeg4audio_sample_rates", "ff_rvlc_rl_inter", "ff_interleaved_ue_golomb_vlc_code", "ff_vc1_bfraction_lut", "ff_pcm_u8_demuxer", "ff_pcm_alaw_demuxer", "ff_vc1_mbmode_intfrp", "ff_interleaved_dirac_golomb_vlc_code", "ff_sine_2048", "ff_vc1_imode_codes", "ff_vc1_if_mmv_mbmode_codes", "ff_sine_512", "ff_dca_channel_reorder_nolfe", "ff_pw_4095", "ff_table0_dc_lum", "ff_dca_scale_factor_quant7", "ff_yuv2rgb_coeffs", "ff_cos_32768", "yuv422ptouyvy", "ff_codec_movsubtitle_tags", "ff_h264_demuxer", "ff_ivr_demuxer", "ff_vc1_norm6_vlc", "ff_sqrt_tab", "deinterleaveBytes", "yuyvtoyuv422", "ff_vc1_subblkpat_vlc", "ff_asf_file_header", "ff_sine_128_fixed", "ff_hevc_diag_scan4x4_x", "ff_vc1_intfr_non4mv_mbmode_bits", "ff_vorbiscomment_metadata_conv", "ff_hevc_diag_scan8x8_y", "ff_mba_length", "ff_vp8_dct_cat_prob", "ff_pcm_u24le_decoder", "ff_vc1_b_field_mvpred_scales", "ff_h263_cbpy_vlc", "rgb15to32", "ff_vc1_cbpcy_p_codes", "ff_matroska_video_stereo_mode", "ff_rdt_demuxer", "ff_ogm_video_codec", "ff_sine_windows", "ff_codec_movaudio_tags", "yv12toyuy2", "ff_pcm_s24le_planar_decoder", "ff_dither4", "ff_ogm_old_codec", "ff_pw_256", "ff_pcm_f32be_decoder", "rgb16to32", "ff_dca_channel_reorder_lfe", "ff_vorbis_codec", "ff_asf_ext_stream_header", "ff_hevc_diag_scan4x4_y", "ff_vc1_2ref_mvdata_bits", "ff_vc1_intfr_non4mv_mbmode_codes", "ff_vc1_intfr_non4mv_mbmode_vlc", "ff_add_pixels_clamped", "ff_sine_8192", "ff_jpeg2000_profiles", "ff_tns_max_bands_128", "ff_rm_demuxer", "ff_vc1_ttblk_bits", "ff_cos_32", "ff_mpeg4_video_profiles", "ff_aac_num_swb_480", "ff_dither8", "ff_h263_pixel_aspect", "vu9_to_vu12", "ff_dca_adpcm_vb", "ff_pw_8", "ff_square_tab", "ff_mdct_win_fixed", "ff_table_inter_intra", "ff_vc1_imode_vlc", "ff_mpeg12_vlc_dc_lum_bits", "av_format_ffversion", "ff_sine_2048_fixed", "ff_mb_btype_vlc", "ff_sine_128", "ff_energy_tab", "ff_dca_lfe_fir_128", "av_sha_size", "ff_mpeg12_mbMotionVectorTable", "ff_M24C", "ff_flac_sample_rate_table", "ff_id3v2_34_metadata_conv", "ff_sin_32", "ff_table0_dc_chroma", "ff_msmp4_dc_chroma_vlc", "ff_codec_movvideo_tags", "ff_old_ff_y_dc_scale_table", "ff_flac_blocksize_table", "ff_eac3_frm_expstr", "rgb24to15", "ff_dca_lfe_fir_64", "ff_pcm_s16le_demuxer", "ff_asf_ext_stream_audio_stream", "ff_vorbis_encoding_channel_layout_offsets", "ff_sin_32768", "ff_log2_tab", "ff_vp8_parser", "ff_v2_dc_chroma_table", "ff_hevc_qpel_filters", "ff_vc1_dqscale", "ff_vc1_bfraction_codes", "ff_sine_256", "ff_wmv1_y_dc_scale_table", "ff_ape_demuxer", "ff_ogm_audio_codec", "ff_vc1_adv_interlaced_4x4_zz", "ff_sine_4096_fixed", "ff_pcm_u16le_demuxer", "ff_alternate_vertical_scan", "ff_cbpc_b_tab", "ff_cook_decoder", "ff_pcm_s32be_decoder", "ff_mpeg12_vlc_dc_lum_code", "rgb32tobgr15", "ff_mba_max", "ff_reverse", "ff_tns_max_bands_512", "rgb32tobgr24", "ff_dca_fir_32bands_nonperfect_fixed", "ff_v2_mb_type", "ff_table1_dc_lum", "swr_ffversion", "av_md5_size", "ff_tns_max_bands_480", "ff_vc1_icbpcy_p_codes", "ff_eac3_decoder", "ff_mpeg4_rl_intra", "ff_mpeg2_aspect", "ff_pw_2", "ff_pw_64", "ff_h261_demuxer", "ff_h263_parser", "ff_pw_4096", "ff_vc1_mv_pmode_table", "ff_id3v1_genre_str", "ff_asf_demuxer", "ff_codec_wav_guids", "ff_alac_channel_layout_offsets", "ff_aac_profiles", "ff_aac_pow2sf_tab", "ff_aac_latm_decoder", "ff_pcm_lxf_decoder", "ff_dca_profiles", "ff_matroska_video_stereo_plane", "rgb16tobgr24", "ff_asf_extended_content_header", "ff_ac3_band_start_tab", "ff_ac3_bap_bits", "ff_v2_intra_cbpc", "ff_theora_codec", "ff_pcm_u16le_decoder", "ff_mpeg4_resync_prefix", "ff_pcm_s8_planar_decoder", "ff_pw_3", "ff_pcm_u32be_decoder", "ff_ac3_frame_size_tab", "ff_sipr_subpk_size", "ff_rvlc_rl_intra", "ff_sin_512", "ff_h261_mv_tab", "ff_vp8_decoder", "ff_dca_high_freq_vq", "ff_cos_32_fixed", "ff_dca_lossless_quant", "rgb24tobgr24", "ff_vc1_ttblk_vlc", "ff_dca_fir_32bands_perfect_fixed", "ff_table1_dc_chroma", "ff_aac_kbd_long_1024_fixed", "avpriv_dca_sample_rates", "rgb32to15", "ff_daala_codec", "ff_h264_parser", "ff_opus_codec", "ff_mvtab", "ff_h263_mbtype_b_tab", "ff_vorbis_channel_layouts", "ff_dca_scale_factor_adj", "ff_h263_format", "ff_sin_256", "ff_vc1_2ref_mvdata_vlc", "ff_pw_1023", "ff_mv_tables", "ff_pcm_s16be_demuxer", "ff_mov_muxer", "ff_cb2_vects", "ff_h263_static_rl_table_store", "ff_mpeg4_y_dc_scale_table", "ff_bgr2UVOffset", "ff_asf_audio_conceal_none", "ff_hevc_profiles", "ff_pcm_f32le_decoder", "ff_dither_8x8_220", "ff_hevc_decoder", "ff_ogg_demuxer", "ff_rl_mpeg1", "ff_mpeg2_dc_scale_table", "ff_sprite_trajectory_tab", "ff_aac_codebook_vector_idx", "ff_cos_4096", "ff_h261_mba_code", "ff_pcm_f64le_demuxer", "avpriv_mpa_bitrate_tab", "ff_vorbis_parser", "ff_mv_vlc", "ff_pb_0", "ff_dca_vlc_offs", "ff_inter_run", "ff_hevc_epel_filters", "ff_asf_metadata_conv", "ff_vc1_profiles", "ff_mpegvideo_demuxer", "ff_aac_demuxer", "ff_h263_inter_MCBPC_bits", "ff_pd_65535", "ff_msmp4_mb_i_table", "ff_pw_2048", "ff_asf_head2_guid", "ff_sin_16", "ff_cos_tabs", "ff_h261_rl_table_store", "ff_cos_128_fixed", "ff_pcm_u16be_demuxer", "ff_sine_64_fixed", "ff_pb_FC", "ff_codec_wav_tags", "ff_gain_val_tab", "ff_vc1_norm6_bits", "ff_aac_spectral_codes", "ff_flv_decoder", "ff_pcm_dvd_decoder", "ff_pw_17", "ff_cb1_vects", "ff_sine_1024_fixed", "ff_mpeg4video_parser", "ff_vc1_field_mvpred_scales", "ff_asf_language_guid", "ff_alac_channel_layouts", "ff_eac3_default_chmap", "ff_vc1_if_1mv_mbmode_vlc", "ff_pw_4", "ff_pcm_s24le_decoder", "ff_rv40_decoder", "ff_matroska_demuxer", "av_codec_ffversion", "ff_mpa_synth_window_fixed", "ff_mp3adufloat_decoder", "ff_h261_mtype_code", "ff_rm_metadata", "ff_h263p_decoder", "ff_mp3float_decoder", "ff_inter_intra_vlc", "ff_mpeg1_default_intra_matrix", "rgb32tobgr16", "ff_sbr_noise_table", "ff_ogm_text_codec", "ff_celt_codec", "ff_mp4_obj_type", "ff_sine_32", "ff_put_pixels_clamped", "ff_golomb_vlc_len", "ff_pw_128", "ff_mp3adu_decoder", "ff_asf_data_header", "ff_h263_chroma_qscale_table", "ff_asf_video_conceal_none", "ff_ac3_fast_gain_tab", "ff_vc1_subblkpat_bits", "ff_vc1_if_1mv_mbmode_codes", "ff_pcm_alaw_decoder", "ff_vc1_cbpcy_p_bits", "ff_vc1_2mv_block_pattern_codes", "ff_vc1_imode_bits", "ff_dc_chroma_vlc", "ff_id3v2_mime_tags", "ff_h263_loop_filter_strength", "shuffle_bytes_2103", "ff_fft_offsets_lut", "ff_pcm_u24be_decoder", "ff_mp4_muxer", "ff_rl_table", "ff_vc1_adv_interlaced_4x8_zz", "ff_bgr2YOffset", "ff_matroska_muxer", "ff_pcm_u32le_demuxer", "av_util_ffversion", "ff_ac3_hearing_threshold_tab", "ff_file_protocol", "ff_mpeg4_static_rl_table_store", "ff_vc1_subblkpat_codes", "ff_mpa_quant_steps", "ff_ac3_slow_decay_tab", "ff_vc1_4mv_block_pattern_bits", "ff_vorbis_channel_layout_offsets", "ff_h263_hwaccel_pixfmt_list_420", "ff_vp8_codec", "ff_mb_pat_vlc", "ff_cos_65536", "ff_ra_144_decoder", "ff_pcm_s16le_planar_decoder", "ff_pcm_s16le_decoder", "ff_cos_16", "ff_img_tags", "ff_aac_decoder", "ff_dca_lossy_quant", "ff_asf_ext_stream_embed_stream_header", "ff_speex_codec", "ff_mpegtsraw_demuxer", "ff_aac_eld_window_480", "ff_pcm_s8_demuxer", "ff_pcm_f32le_demuxer", "ff_aac_pow34sf_tab", "ff_eac3_default_spx_band_struct", "ff_vc1_if_mmv_mbmode_bits", "ff_mpegps_demuxer", "ff_dither_8x8_73", "ff_h263_cbpy_tab", "ff_asf_codec_comment1_header", "ff_swb_offset_512", "ff_mpeg12_static_rl_table_store", "ff_pw_96", "ff_ra_288_decoder", "ff_h263i_decoder", "ff_vc1_1ref_mvdata_codes", "ff_eac3_gaq_remap_1", "ff_asf_head1_guid", "ff_vc1_adv_progressive_8x4_zz", "ff_mpeg4_decoder", "ff_asf_simple_index_header", "ff_mpeg12_frame_rate_tab", "rgb15to16", "ff_pcm_s32le_decoder", "ff_mpegaudio_parser", "ff_ac3_bitrate_tab", "ff_h264_profiles", "ff_aac_num_swb_128", "ff_id3v2_4_metadata_conv", "ff_rv40_parser", "ff_mpa_synth_window_float", "ff_mpeg12_vlc_dc_chroma_bits", "avpriv_ac3_channel_layout_tab", "ff_ac3_bin_to_band_tab", "ff_vc1_norm6_codes", "ff_interleaved_golomb_vlc_len", "ff_aac_scalefactor_code", "avpriv_pix_fmt_bps_mov", "ff_asf_stream_header", "ff_inter_level", "ff_crop_tab", "ff_mpegvideo_decoder", "ff_live_flv_demuxer", "av_twofish_size", "ff_vc1_2ref_mvdata_codes", "av_aes_size", "ff_rv30_parser", "ff_mpeg4_DCtab_chrom", "ff_hevc_pel_weight", "ff_cos_64", "ff_cos_1024", "ff_h263_rl_inter", "ff_vp56_norm_shift", "ff_mpeg2video_decoder", "ff_wmv3_dc_scale_table", "ff_ac3_ungroup_3_in_5_bits_tab", "yuy2toyv12", "ff_ac3_window", "ff_h263_demuxer", "ff_cos_256_fixed", "ff_dca_xll_band_coeff", "ff_sin_2048", "ff_flac_parser", "ff_alac_channel_elements", "ff_mp3_demuxer", "ff_mp1_decoder", "ff_default_chroma_qscale_table", "ff_mpeg4_DCtab_lum", "ff_codec_bmp_tags", "ff_dca_inv_dmixtable", "avpriv_pix_fmt_bps_avi", "ff_ac3_parser", "ff_raw_pix_fmt_tags", "ff_id3v2_tags", "ff_flac_decoder", "ff_table_mb_non_intra", "av_ripemd_size", "ff_asf_metadata_header", "ff_asf_audio_stream", "ff_ac3_bap_tab", "ff_mpeg12_mbAddrIncrTable", "ff_vc1_adv_interlaced_8x8_zz", "ff_ps_neg", "ff_cos_tabs_fixed", "ff_pcm_s24le_demuxer", "ff_pb_80", "ff_log2_run", "ff_pb_FE", "ff_pb_1", "planar2x", "ff_pw_20", "ff_wmv1_c_dc_scale_table", "ff_h261_mtype_bits", "ff_h261_decoder", "ff_ac3_db_per_bit_tab", "ff_pw_18", "ff_vc1_norm2_bits", "ff_rv30_decoder", "ff_vc1_adv_progressive_4x8_zz", "ff_ac3_fast_decay_tab", "ff_dca_channels", "ff_pcm_f64be_decoder", "ff_sine_1024", "ff_dither_2x2_4", "ffurl_context_class", "ff_mpeg4_default_intra_matrix", "ff_pw_1024", "ff_mpa_enwindow", "ff_ralf_decoder", "ff_cos_256", "ff_vc1_bfraction_vlc", "ff_msmp4_dc_luma_vlc", "ff_dca_decoder", "ff_vc1_pixel_aspect", "ff_rawvideo_demuxer", "ff_pw_9", "ff_asf_comment_header", "ff_aac_latm_parser", "ff_skeleton_codec", "avpriv_cga_font", "ff_vc1_adv_interlaced_8x4_zz", "ff_se_golomb_vlc_code", "ff_pcm_u16be_decoder", "ff_h264_mp4toannexb_bsf", "ff_h263_inter_MCBPC_code", "av_sha512_size", "av_cast5_size", "ff_cos_8192", "rgb24tobgr15", "ff_aac_eld_window_480_fixed", "ff_vc1_icbpcy_vlc", "ff_h261_mba_bits", "ff_cook_parser", "ff_M24A", "ff_pb_3", "ff_interleaved_se_golomb_vlc_code", "ff_h261_parser", "ff_vc1_mv_diff_vlc", "ff_hevc_parser", "ff_mpegts_demuxer", "ff_vc1_norm2_codes", "ff_wmv2_inter_table", "ff_aic_dc_scale_table", "ff_vc1_ttmb_bits", "ff_ac3_rematrix_band_tab", "ff_mpeg4audio_channels", "ff_dca_fir_64bands", "ff_msmp4_mb_i_vlc", "ff_flv_demuxer", "ff_ac3_dec_channel_map", "ff_vc1_simple_progressive_4x4_zz", "ff_mpa_sblimit_table", "ff_mp3on4_decoder", "ff_vc1_4mv_block_pattern_codes", "ff_mb_ptype_vlc", "ff_aac_codebook_vector_vals", "ff_aac_eld_window_512", "ff_ac3_channels_tab", "ff_old_flac_codec", "ff_pcm_u32le_decoder", "ff_vc1_2mv_block_pattern_bits", "ff_cos_8192_fixed", "ff_cos_512", "ff_mp3_decoder", "ff_dca_scale_factor_quant6", "ff_mpeg4_dc_threshold", "ff_vc1_ttfrm_to_tt", "ff_swb_offset_480", "avpriv_mpa_freq_tab", "ff_pcm_u8_decoder", "ff_cos_1024_fixed", "ff_dc_lum_vlc", "ff_dca_dmix_primary_nch", "ff_dca_parser", "ff_ac3_demuxer", "ff_vp9_profiles", "ff_id3v2_4_tags", "ff_dca_sampling_freqs", "ff_dca_lfe_fir_64_fixed", "ff_eac3_hebap_tab", "ff_cos_4096_fixed", "ff_mpeg4_intra_level", "ff_cos_512_fixed", "ff_w1111", "ff_hevc_demuxer", "ff_mp2float_decoder", "ff_pcm_f32be_demuxer", "ff_cos_128", "ff_mp1float_decoder", "ff_sin_64", "ff_pd_32", "ff_rawvideo_options", "rgb24tobgr32", "ff_mpeg1_dc_scale_table", "uyvytoyuv422", "ff_mpa_quant_bits", "shuffle_bytes_0321", "ff_hevc_diag_scan8x8_x", "ff_mb_type_b_tab", "ff_dca_fir_32bands_perfect", "ff_m4v_demuxer", "ff_vc1_ttblk_codes", "ff_vp9_parser", "ff_pcm_u32be_demuxer", "ff_vc1_ttmb_codes", "ff_pcm_f64be_demuxer", "ff_dca_lfe_index", "ff_eac3_default_cpl_band_struct", "ff_flac_demuxer", "ff_cos_65536_fixed", "ff_h263_intra_MCBPC_code", "ff_vc1_parser", "ff_wmv1_decoder", "ff_h263_inter_MCBPC_vlc", "ff_sin_16384", "ff_pcm_s8_decoder", "ff_sin_65536", "ff_dca_bits_per_sample", "ff_pcm_s24be_decoder", "ff_pw_32", "ff_swb_offset_128", "ff_aac_kbd_long_1024", "ff_vorbis_floor1_inverse_db_table", "ff_ac3_floor_tab", "ff_inter_vlc", "ff_vc1_fps_nr", "ff_cb2_base", "ff_riff_info_conv", "rgb15tobgr24", "ff_msmpeg4v1_decoder", "ff_vc1_ac_sizes", "ff_pcm_s16be_planar_decoder", "ff_asf_jfif_media", "ff_pw_8192", "ff_h264_cabac_tables", "ff_vc1_bfraction_bits", "ff_asf_extended_stream_properties_object", "ff_flac_codec", "ff_ac3_slow_gain_tab", "ff_avi_demuxer", "ff_cos_32768_fixed", "ff_id3v2_3_tags", "ff_ac3_log_add_tab", "ff_pcm_s32be_demuxer", "ff_alternate_horizontal_scan", "ff_dirac_codec", "ff_pw_5", "ff_mpegvideo_parser", "ff_sln_demuxer", "ff_wmv2_scantableB", "ff_aac_scalefactor_bits", "ff_mpeg4_default_non_intra_matrix", "ff_vorbis_vwin", "ff_rgb24toyv12", "uyvytoyuv420", "ff_asf_codec_comment_header", "ff_wmv1_scantable", "yuv422ptoyuy2", "ff_pw_1", "ff_pd_1", "ff_wmv2_scantableA", "ff_mkv_image_mime_tags", "yv12touyvy", "ff_pcm_u24le_demuxer", "ff_vc1_ac_coeff_table", "ff_pw_512", "ff_vc1_norm2_vlc", "ff_ac3_enc_channel_map", "ff_rv10_decoder", "ff_asf_video_stream", "ff_h263_decoder", "ff_mkv_codec_tags", "ff_dca_quant_levels", "ff_dca_joint_scale_factors", "ff_cos_16384_fixed", "ff_pw_1019", "ff_w_tab_sr", "ff_pb_2", "ff_cos_16384", "ff_flv_muxer", "ff_old_dirac_codec", "ff_h263_intra_MCBPC_bits", "ff_cb1_base", "ff_aac_eld_window_512_fixed", "av_tea_size", "ff_aac_kbd_short_128", "ff_M24B", "ff_modified_quant_tab", "ff_vc1_1ref_mvdata_vlc", "ff_cos_2048", "ff_dca_fir_32bands_nonperfect", "ff_h264_mb_sizes", "ff_aac_num_swb_512", "rgb24to16", "ff_ue_golomb_len", "ff_lpc_refl_cb", "av_camellia_size", "ff_mkv_metadata_conv", "avpriv_vga16_font", "ff_vc1_ttmb_vlc", "yuyvtoyuv420", "ff_vc1_cbpcy_p_vlc", "ff_vc1_fps_dr", "ff_rl_mpeg2", "ff_eac3_demuxer", "ff_mbincr_vlc", "ff_msmpeg4v3_decoder", "ff_rm_codec_tags", "ff_id3v2_picture_types", "ff_mpeg1_default_non_intra_matrix", "ff_dca_dmixtable", "ff_pw_255", "ff_asf_header", "ff_mpeg4_c_dc_scale_table", "ff_vorbis_decoder", "ff_pcm_mulaw_decoder", "rgb16to15", "ff_asf_metadata_library_header", "ff_vc1_pquant_table", "ff_swb_offset_1024", "ff_pcm_s24be_demuxer", "ff_dither_8x8_128", "ff_pw_m1", "ff_v2_dc_lum_table", "ff_asf_digital_signature", "ff_dca_xll_refl_coeff", "ff_h261_cbp_tab", "ff_pd_8192", "yvu9_to_yuy2", "ff_pcm_mulaw_demuxer", "ff_pcm_u24be_demuxer", "ff_inverse", "ff_vc1_mv_diff_bits", "ff_mpeg12_vlc_dc_chroma_code", "ff_pw_15", "ff_sine_256_fixed", "ff_pcm_zork_decoder", "ff_aac_num_swb_1024", "ff_mpeg1_aspect", "ff_pcm_bluray_decoder", "ff_pw_53", "rgb32to16", "ff_avcodec_locked", "ff_aac_kbd_short_128_fixed", "ff_sine_4096", "ff_mdct_win_float", "interleaveBytes", "ff_asf_content_encryption", "ff_alac_decoder", "ff_vc1_if_mmv_mbmode_vlc", "ff_vc1_if_1mv_mbmode_bits", "ff_sine_512_fixed", "ff_dither_8x8_32", "ff_vp9_decoder", "av_tree_node_size", "ff_vc1_intfr_4mv_mbmode_vlc", "ff_msmpeg4v2_decoder", "ff_asf_reserved_4", "ff_cos_2048_fixed", "ff_static_rl_table_store", "ff_vc1_2mv_block_pattern_vlc", "ff_eac3_bits_vs_hebap", "ff_pcm_f64le_decoder", "ff_sin_4096", "ff_pcm_s32le_demuxer", "ff_eac3_spx_atten_tab", "ff_tns_max_bands_1024", "ff_h263_intra_MCBPC_vlc", "ff_sine_64", "ff_h264_chroma_qp", "ff_vc1_icbpcy_p_bits", "ff_ape_decoder", "ff_gain_exp_tab", "ff_sin_8192", "ff_asf_ext_content_encryption", "ff_sine_8192_fixed", "ff_rawvideo_decoder", "ff_pcm_s32le_planar_decoder", "ff_eac3_mantissa_vq", "ff_mp3on4float_decoder", "ff_webm_dash_manifest_demuxer", "ff_asf_audio_conceal_spread", "ff_mpa_alloc_tables", "ff_aac_parser", "ff_ac3_decoder", "ff_h261_mtype_map", "ff_mpeg2_frame_rate_tab", "ff_mpeg2_video_profiles", "ff_aac_spectral_sizes", "ff_mpeg1video_decoder", "ff_mpeg12_mbPatTable", "ff_pb_15", "ff_eac3_gaq_remap_2_4_a", "ff_mpeg2_non_linear_qscale", "ff_vc1_decoder", "ff_mov_demuxer", "ff_dither_4x4_16", "ff_sws_context_class", "ff_pcm_s16be_decoder", "ff_ac3_sample_rate_tab", "ff_asf_my_guid", "ff_vc1_4mv_block_pattern_vlc", "ff_asf_marker_header", "ff_sin_128", "ff_asf_command_stream", "ff_vc1_ttblk_to_tt", "ff_mpeg4_intra_vlc", "ff_vc1_mv_diff_codes", "ff_dither_2x2_8", "ff_avio_class", "rgb24tobgr16", "ff_sine_32_fixed", "ff_rl_intra_aic", "ff_ue_golomb_vlc_code", "ff_mb_non_intra_vlc", "ff_dca_bit_rates", "ff_eac3_gaq_remap_2_4_b", "ff_mpeg4_intra_run", "ff_mkv_mime_tags", "ff_dca_fir_64bands_fixed", "ff_vc1_intfr_4mv_mbmode_bits", "ff_vc1_1ref_mvdata_bits", "ff_h261_rl_tcoeff", "ff_h264_decoder", "ff_aac_codebook_vectors", "ff_cos_16_fixed", "ff_pw_42", "ff_pw_16", "ff_aac_spectral_bits", "swri_resampler", "ff_sin_1024", "ff_sine_windows_fixed", "ff_vc1_demuxer", "ff_pcm_s24daud_decoder", "ff_vc1_mv_pmode_table2", "ff_pd_16", "ff_mp2_decoder", "ff_aac_pred_sfb_max"], "importedglobals": ["__sF"], "importedfunctions": ["sscanf", "__assert2", "memcpy", "pthread_mutex_lock", "isatty", "close", "ceil", "log10", "pthread_mutex_unlock", "mkstemp", "atoi", "gmtime_r", "readdir", "atan2f", "atan2", "fabs", "__isinf", "strspn", "snprintf", "gettimeofday", "fputc", "fcntl", "exp2", "strcpy", "hypot", "lstat", "strrchr", "cos", "sinf", "write", "fputs", "strcmp", "pthread_mutex_init", "ldexp", "strtol", "lseek64", "strchr", "pthread_create", "nanosleep", "atanf", "tan", "inflateEnd", "cbrt", "getenv", "rmdir", "exp", "mktime", "munmap", "strstr", "cbrtf", "free", "strftime", "open", "fstat", "pthread_mutex_destroy", "strcspn", "cosf", "pthread_cond_destroy", "mprotect", "cosh", "__errno", "bsearch", "atan", "sysconf", "memmove", "fwrite", "pthread_cond_signal", "powf", "fdopen", "strlen", "acos", "rint", "localtime_r", "asin", "arc4random", "sinh", "inflateInit_", "memalign", "sin", "memcmp", "pow", "rename", "strerror_r", "clock_gettime", "closedir", "strtoul", "abort", "inflate", "__stack_chk_fail", "pthread_cond_broadcast", "opendir", "uncompress", "frexp", "read", "pthread_once", "fprintf", "pthread_cond_wait", "strncmp", "trunc", "strtod", "access", "floor", "unlink", "vsnprintf", "mmap", "memset", "memchr", "pthread_cond_init", "realloc", "tanh", "strtoll", "pthread_join", "log"], "exportedfunctions": ["ffio_open_whitelist", "ff_h264_idct_add16_10_c", "ff_vp9dsp_init_12", "av_format_get_subtitle_codec", "ff_reget_buffer", "ff_flac_parse_picture", "av_dirname", "av_fast_malloc", "av_index_search_timestamp", "ff_hevc_slice_rpl", "ff_h264_decode_mb_cabac", "av_get_channel_layout", "ff_rv34_decode_frame", "sws_freeContext", "av_find_nearest_q_idx", "avio_seek_time", "ff_get_unscaled_swscale", "ff_vp8dsp_init_x86", "rgb64to48_nobswap", "av_cast5_alloc", "av_hash_final_b64", "ff_simple_idct44_add", "av_memdup", "ff_h264_chroma422_dc_dequant_idct_12_c", "ff_dct32_float", "ff_h264_idct8_add_9_c", "av_match_name", "av_fifo_grow", "ff_clean_intra_table_entries", "rgb24to32", "av_free_packet", "av_get_codec_tag_string", "ff_tadd_rational_metadata", "av_codec_next", "ff_xvid_idct_init_x86", "av_append_path_component", "ffurl_close", "ff_fdct_mmxext", "ff_hyscale_fast_mmxext", "ff_celp_lp_synthesis_filter", "ff_h264_decode_sei", "audio_resample_close", "ff_mpeg1_decode_block_intra", "avpicture_fill", "av_ripemd_update", "ff_pred_weight_table", "ff_vorbis_floor1_render_list", "av_probe_input_format2", "av_hash_update", "avcodec_pix_fmt_to_codec_tag", "av_stream_set_recommended_encoder_configuration", "av_find_best_pix_fmt_of_2", "av_fft_calc", "ff_mov_read_chan", "ff_alloc_entries", "ff_tadd_string_metadata", "avcodec_find_best_pix_fmt_of_2", "ff_hcscale_fast_mmxext", "__umoddi3", "ff_frame_thread_free", "av_get_sample_fmt_name", "av_format_get_data_codec", "ff_simple_idct_add_8", "ff_ac3dsp_init_x86", "ff_parse_close", "ff_hevc_cabac_init", "ff_h264qpel_init", "av_set_options_string", "av_stream_new_side_data", "av_get_bytes_per_sample", "ff_h264qpel_init_x86", "ff_dca_core_parse_exss", "ff_index_search_timestamp", "ff_slice_thread_init", "av_add_i", "avio_accept", "av_tea_alloc", "avformat_get_mov_audio_tags", "ff_fdct248_islow_8", "av_get_pcm_codec", "ff_tadd_long_metadata", "ff_h264_decode_picture_parameter_set", "ff_thread_await_progress", "swr_alloc_set_opts", "ff_h264_reset_sei", "ff_metadata_conv_ctx", "ff_put_qpel16_mc33_old_c", "ffurl_read_complete", "swri_audio_convert_free", "av_get_standard_channel_layout", "ff_rfps_calculate", "av_buffer_get_ref_count", "ff_hevc_deblocking_boundary_strengths", "av_max_alloc", "avcodec_descriptor_get_by_name", "ff_simple_idct_put_10", "ff_find_stream_index", "av_codec_get_codec_properties", "ff_fft_end", "av_log2", "ff_h264_idct8_dc_add_8_c", "ff_init_vscale", "ff_avg_h264_qpel16_mc21_10_mmxext", "av_guess_sample_aspect_ratio", "avcodec_decode_audio4", "ff_thread_release_buffer", "ff_hevc_cu_chroma_qp_offset_flag", "avio_pause", "ff_h264_idct_dc_add_9_c", "ffio_close_null_buf", "ff_h264_idct_add16_9_c", "av_frame_is_writable", "av_format_inject_global_side_data", "av_audio_convert", "ff_h261_common_init", "ff_h264_idct_add8_14_c", "av_packet_free", "ff_avg_h264_qpel16_mc13_10_mmxext", "av_opt_get_q", "avcodec_dct_init", "ff_h264_luma_dc_dequant_idct_14_c", "ff_simple_idct_put_12", "avcodec_flush_buffers", "rgb15to24", "av_image_check_sar", "ff_h264_chroma_dc_dequant_idct_10_c", "ff_h263_decode_mba", "av_parser_close", "ff_put_no_rnd_qpel8_mc31_old_c", "av_opt_get", "ff_h264_idct_add16intra_12_c", "ff_check_pixfmt_descriptors", "avcodec_license", "ff_avg_pixels8_xy2_mmx", "ff_mpeg1_clean_buffers", "ff_sws_init_swscale_x86", "ff_h263_decode_picture_header", "ff_h264_filter_mb", "ff_hevc_rem_intra_luma_pred_mode_decode", "ff_init_gamma_convert", "av_packet_add_side_data", "av_opt_set_double", "ff_get_line", "av_audio_fifo_space", "ff_hevc_hls_filter", "av_bprint_init_for_buffer", "ff_h264_decode_extradata", "ff_me_cmp_init_x86", "ff_h263_update_motion_val", "ff_mpeg4_workaround_bugs", "avformat_close_input", "av_cast5_crypt", "ff_alloc_packet2", "av_twofish_alloc", "ff_hevc_bump_frame", "av_des_init", "sws_isSupportedInput", "ff_avg_h264_qpel16_mc33_10_mmxext", "ff_thread_flush", "avcodec_get_frame_class", "ff_vp8dsp_init", "avformat_free_context", "ffio_read_size", "ffurl_seek", "av_audio_fifo_drain", "ff_flac_is_native_layout", "ff_hevc_luma_mv_merge_mode", "ff_simple_idct_add_12", "ff_thread_get_buffer", "av_opt_query_ranges", "av_opt_child_next", "ff_msmpeg4_decode_init", "ff_mpeg12_init_vlcs", "ff_stream_add_bitstream_filter", "av_get_pix_fmt_name", "ff_h263_decode_init_vlc", "ff_mpa_l2_select_table", "av_format_set_open_cb", "ff_h264_direct_ref_list_init", "av_xtea_le_crypt", "avio_open_dir", "av_camellia_crypt", "ff_vorbis_nth_root", "ff_parse_specific_params", "av_aes_init", "av_frame_set_decode_error_flags", "av_dynarray_add", "av_fast_mallocz", "ff_hevc_set_new_ref", "ff_mov_get_channel_layout_tag", "av_append_packet", "ff_put_no_rnd_qpel8_mc13_old_c", "ffurl_accept", "avcodec_get_name", "av_audio_fifo_realloc", "ff_hevc_intra_chroma_pred_mode_decode", "avpriv_get_gamma_from_trc", "avpriv_set_systematic_pal2", "avcodec_get_pix_fmt_loss", "av_probe_input_buffer2", "avcodec_encode_video2", "av_format_set_control_message_cb", "ff_init_mpadsp_tabs_float", "ff_h264_pred_init_x86", "ff_id3v2_parse_apic", "ff_metadata_conv", "av_frame_set_metadata", "av_log_get_level", "ff_h264_pred_direct_motion", "ff_init_desc_no_chr", "av_reallocp", "av_get_token", "ff_startcode_find_candidate_c", "ff_avc_mp4_find_startcode", "avio_close", "ff_hevc_frame_nb_refs", "av_shr_i", "ff_dca_xll_parse", "ff_hevc_sao_merge_flag_decode", "avcodec_find_encoder", "ff_interleave_packet_per_dts", "ff_thread_finish_setup", "ff_h264chroma_init", "ff_h264_idct8_add_8_c", "ff_put_no_rnd_qpel8_mc32_old_c", "ff_rotate_slice", "ff_rm_retrieve_cache", "ffio_open_dyn_packet_buf", "avpriv_unlock_avformat", "av_q2intfloat", "av_imdct_calc", "ff_mkv_stereo3d_conv", "av_blowfish_crypt", "ff_hpeldsp_init", "ff_tadd_shorts_metadata", "ff_free_stream", "ff_match_2uint16", "ff_vc1dsp_init_mmxext", "av_bprint_get_buffer", "ff_update_cur_dts", "ff_init_ff_cos_tabs_fixed_32", "av_get_channel_layout_nb_channels", "ff_hevc_output_frame", "avio_get_str", "av_int_list_length_for_size", "ff_h264_idct8_add4_9_c", "ff_avg_qpel8_mc32_old_c", "av_aes_ctr_crypt", "ffurl_get_file_handle", "av_buffer_pool_init", "avpriv_bprint_to_extradata", "av_get_pix_fmt_string", "sws_freeFilter", "av_tree_node_alloc", "sws_convertPalette8ToPacked32", "av_i2int", "ff_tread_tag", "ff_idctdsp_init_x86", "ff_avg_qpel8_mc11_old_c", "ff_dcadsp_init", "av_thread_message_queue_set_err_send", "avio_rb32", "avcodec_open2", "ff_rv30dsp_init", "avpriv_new_chapter", "av_xiphlacing", "avio_skip", "ff_hevc_cbf_cb_cr_decode", "av_timecode_check_frame_rate", "ff_write_chained", "avcodec_get_type", "ffio_init_context", "av_cast5_init", "avio_size", "avcodec_descriptor_get", "ff_sws_init_output_funcs", "ff_get_cpu_flags_x86", "avio_write", "ff_mov_read_esds", "ff_xvid_idct_init", "ff_hevc_compute_poc", "ff_h264_luma_dc_dequant_idct_9_c", "av_buffer_allocz", "ff_float_dsp_init_x86", "av_sha512_update", "ff_j_rev_dct2", "ff_mdct_calc_c", "av_small_strptime", "ff_mpeg4_decode_picture_header", "ff_hevc_set_neighbour_available", "ff_flac_decode_frame_header", "ff_h264_decode_mb_cavlc", "av_mallocz", "av_tree_insert", "avio_rl64", "swr_convert_frame", "ff_dca_check_crc", "av_resample", "av_mul_i", "ffurl_shutdown", "av_apply_bitstream_filters", "av_get_default_channel_layout", "ff_hevc_ref_idx_lx_decode", "av_blowfish_init", "av_buffer_realloc", "av_bprintf", "ff_avg_h264_qpel16_mc11_10_mmxext", "ff_mpv_common_init", "ff_h264_idct_add16intra_14_c", "__udivdi3", "ff_h264_idct8_add4_12_c", "avformat_get_riff_video_tags", "ff_hevc_hls_filters", "ff_vp78dsp_init_x86", "avpriv_exif_decode_ifd", "ff_rdft_init", "ff_raw_data_read_header", "ff_combine_frame", "av_strstart", "ff_wav_codec_get_id", "av_bprint_channel_layout", "avpicture_layout", "ff_flac_get_max_frame_size", "avcodec_align_dimensions", "av_stream_get_parser", "av_buffer_create", "ff_sws_init_range_convert", "av_opt_get_sample_fmt", "ff_h264_idct_dc_add_10_c", "av_url_split", "ff_get_guid", "av_dict_count", "av_get_bits_per_pixel", "av_hash_names", "avcodec_register_all", "ff_avg_h264_qpel16_mc31_10_mmxext", "av_log2_i", "ff_mov_get_lpcm_codec_id", "ff_mpeg_unref_picture", "av_gettime_relative_is_monotonic", "avcodec_encode_subtitle", "av_pix_fmt_get_chroma_sub_sample", "ff_mpeg12_common_init", "ff_rv34_decode_init_thread_copy", "avcodec_get_context_defaults3", "ffurl_get_multi_file_handle", "avpriv_put_string", "swri_rematrix", "ff_mov_close_hinting", "av_d3d11va_alloc_context", "sws_shiftVec", "av_murmur3_init", "av_utf8_decode", "ff_mp4_parse_es_descr", "av_frame_set_best_effort_timestamp", "av_timecode_get_smpte_from_framenum", "sws_subVec", "av_opt_eval_float", "swri_rematrix_init", "ff_tadd_doubles_metadata", "ff_t_sqrt", "ff_mpeg4_find_frame_end", "ff_avg_qpel16_mc13_old_c", "ff_alloc_picture", "ff_simple_idct_10", "ff_avg_h264_qpel16_mc32_10_mmxext", "ff_fft_end_fixed", "ff_fdctdsp_init", "avformat_network_init", "ff_fdct_ifast", "ff_rm_reorder_sipr_data", "ff_fetch_timestamp", "ff_vc1_pred_mv", "ff_mov_iso639_to_lang", "avio_feof", "ff_mov_lang_to_iso639", "av_sha_alloc", "av_format_get_probe_score", "ff_videodsp_init_x86", "avpriv_h264_has_num_reorder_frames", "ffio_read_varlen", "av_find_info_tag", "ff_dcadct_init", "avpriv_ac3_parse_header", "ff_mpa_synth_filter_float", "ff_hevc_cu_transquant_bypass_flag_decode", "ff_avg_h264_qpel16_mc02_10_mmxext", "sws_cloneVec", "ff_hevc_merge_idx_decode", "av_rdft_init", "ff_mpeg4_init_direct_mv", "avpriv_alloc_fixed_dsp", "av_codec_is_decoder", "av_malloc", "ff_kbd_window_init", "ff_h264_init_cabac_states", "ff_rv34_decode_end", "av_asprintf", "ff_mdct_end_fixed", "av_packet_get_side_data", "ff_put_guid", "av_opt_set_video_rate", "ff_me_cmp_init_static", "ff_rm_read_mdpr_codecdata", "swr_get_out_samples", "av_dict_get", "av_fifo_generic_peek", "ff_h264_idct_add16_14_c", "av_packet_alloc", "av_frame_get_side_data", "av_log_default_callback", "av_strlcatf", "ff_decode_sbr_extension", "ff_vc1_smooth_overlap_filter_iblk", "ff_mdct_init_fixed", "ff_h263_decode_frame", "av_hash_alloc", "av_timecode_make_string", "ff_mdct_calc_c_fixed_32", "av_find_default_stream_index", "ff_dca_xll_filter_frame", "__divdi3", "av_camellia_alloc", "avcodec_configuration", "av_get_bits_per_sample", "av_vorbis_parse_reset", "ff_intrax8dsp_init", "av_ripemd_final", "av_parser_parse2", "av_log_set_flags", "ff_h264_luma_dc_dequant_idct_10_c", "av_frame_get_metadata", "ff_init_vscale_pfn", "av_fifo_space", "avpicture_free", "ffio_open_null_buf", "av_twofish_crypt", "ff_free_vlc", "av_get_alt_sample_fmt", "ffurl_closep", "swr_convert", "av_dict_parse_string", "ff_rv_decode_dc", "av_sha512_init", "ff_jref_idct_put", "ff_msmpeg4_pred_dc", "ff_get_v_length", "ff_h263_decode_init", "av_add_stable", "swscale_version", "av_sha_init", "ff_h264_draw_horiz_band", "ff_vc1dsp_init_x86", "ff_rl_init_vlc", "av_frame_get_channels", "ff_pcm_read_packet", "av_tea_init", "ff_h264_filter_mb_fast", "ff_faandct248", "av_get_media_type_string", "av_get_profile_name", "av_crc_init", "ff_mpeg4videodec_static_init", "ff_h263_pred_acdc", "avformat_flush", "ff_kbd_window_init_fixed", "ff_h264_check_intra_pred_mode", "ff_h264_idct_add_12_c", "ff_avg_qpel16_mc31_old_c", "av_rescale_delta", "ffio_set_buf_size", "ff_rtp_enc_name", "avio_free_directory_entry", "avcodec_default_execute", "av_format_get_audio_codec", "av_read_pause", "ff_update_picture_tables", "ff_mov_write_chan", "ff_rl_free", "av_dv_codec_profile", "ff_hevc_end_of_slice_flag_decode", "av_opt_copy", "av_mdct_calc", "sws_printVec2", "av_opt_get_key_value", "ff_vc1_pred_b_mv", "ff_hevc_pcm_flag_decode", "ff_h264_idct_add8_422_9_c", "av_opt_is_set_to_default_by_name", "av_hash_get_size", "ff_put_h264_qpel16_mc02_10_mmxext", "ff_qpeldsp_init", "sws_getConstVec", "avformat_license", "ff_parse_key_value", "ff_hevc_inter_pred_idc_decode", "audio_resample", "av_frame_new_side_data", "sws_isSupportedEndiannessConversion", "ff_mpa_decode_header", "ff_flv_decode_picture_header", "ff_h264_remove_all_refs", "swresample_license", "avpriv_mpa_decode_header2", "av_new_program", "ff_vc1_decode_sequence_header", "ffio_fdopen", "av_codec_is_encoder", "ff_simple_idct_add_mmx", "ff_put_h264_qpel16_mc12_10_mmxext", "ff_vorbisdsp_init_x86", "avio_read", "av_opt_get_dict_val", "av_memcpy_backptr", "ff_avg_pixels16_xy2_mmx", "ff_ac3_bit_alloc_calc_psd", "ff_init_ff_sine_windows_fixed", "ff_vp8_decode_frame", "ff_h264_luma_dc_dequant_idct_8_c", "av_strncasecmp", "ff_thread_can_start_frame", "av_get_exact_bits_per_sample", "sws_getCachedContext", "av_hash_get_name", "ff_start_tag", "ff_rms", "ff_pixblockdsp_init_x86", "av_cpb_properties_alloc", "ff_mpeg4_decode_partitions", "avio_close_dyn_buf", "av_color_space_name", "ff_h264_idct8_dc_add_9_c", "av_parse_color", "av_guess_frame_rate", "avutil_license", "ff_vc1_init_common", "ff_thread_get_format", "ff_vorbis_ready_floor1_list", "ff_llauddsp_init", "ff_imdct_half_c", "av_lockmgr_register", "ff_celp_lp_synthesis_filterf", "ff_vorbiscomment_length", "ff_hevc_clear_refs", "ff_mpeg4_set_direct_mv", "av_image_fill_max_pixsteps", "ff_bswapdsp_init_x86", "avpriv_mpa_decode_header", "avio_read_to_bprint", "av_opt_free", "ff_add_param_change", "ff_avg_h264_qpel16_mc22_10_mmxext", "ff_copy_whitelists", "ff_check_alignment", "ff_celp_convolve_circ", "av_murmur3_alloc", "ff_frame_thread_init", "av_buffer_alloc", "avpriv_mpegts_parse_packet", "sws_get_class", "ff_dca_core_flush", "av_mastering_display_metadata_alloc", "swr_config_frame", "ff_h264_idct_add8_422_14_c", "av_codec_get_chroma_intra_matrix", "av_bprint_escape", "ff_hpeldsp_init_x86", "avcodec_get_subtitle_rect_class", "av_murmur3_init_seeded", "av_interleaved_write_uncoded_frame", "ff_put_h264_qpel16_mc11_10_mmxext", "av_fast_realloc", "avcodec_copy_context", "avio_rb16", "ff_init_hscaler_mmxext", "av_add_q", "ff_hevc_flush_dpb", "avformat_find_stream_info", "ff_h264_get_profile", "ff_imdct_half_c_fixed_32", "avio_open", "ff_ntp_time", "av_display_rotation_set", "ff_avc_parse_nal_units", "av_codec_set_pkt_timebase", "av_parse_ratio", "ff_mpadsp_apply_window_float", "ff_put_h264_qpel16_mc33_10_mmxext", "ff_id3v2_read_dict", "ff_rdft_end", "ff_dca_downmix_to_stereo_float", "av_bitstream_filter_filter", "ff_parse_creation_time_metadata", "av_resample_init", "av_frame_get_qp_table", "av_frame_move_ref", "av_rdft_end", "ff_mpeg4_frame_end", "swr_free", "ff_hevc_annexb2mp4", "ff_hevc_res_scale_sign_flag", "av_file_unmap", "ff_get_buffer", "swresample_configuration", "avio_rl32", "shuffle_bytes_1230", "ff_put_h264_qpel16_mc23_10_mmxext", "av_log2_16bit", "av_pix_fmt_swap_endianness", "av_thread_message_queue_recv", "ffurl_read", "ff_h264_idct8_add_12_c", "av_dv_codec_profile2", "ff_flac_is_extradata_valid", "av_ripemd_alloc", "ffurl_open", "ff_riff_write_info_tag", "avpriv_mpeg4audio_get_config", "av_audio_fifo_free", "ff_mpeg4_pred_ac", "av_md5_final", "ff_vc1dsp_init_mmx", "ff_imdct_calc_c", "ff_h264_free_context", "ff_hevc_split_transform_flag_decode", "av_sdp_create", "av_frame_copy", "av_realloc", "ff_thread_ref_frame", "avpriv_scalarproduct_float_c", "avformat_get_class", "avio_put_str16le", "av_sha512_alloc", "ff_er_add_slice", "av_format_get_metadata_header_padding", "av_frame_set_pkt_pos", "av_frame_get_pkt_duration", "sws_setColorspaceDetails", "av_dict_copy", "av_bprint_init", "av_get_channel_name", "avio_rb24", "av_compare_ts", "rgb2rgb_init_x86", "ff_hevc_mpm_idx_decode", "avio_wb64", "ffio_read_partial", "ff_h264_idct_add_8_c", "av_compare_mod", "ff_put_pixels8_l2_8", "ff_idctdsp_init", "ff_mov_cenc_init", "ff_mpv_frame_end", "av_qsv_alloc_context", "av_pix_fmt_count_planes", "ff_put_h264_qpel16_mc32_10_mmxext", "ff_h264_check_intra4x4_pred_mode", "avcodec_set_dimensions", "av_frame_side_data_name", "ff_avg_h264_qpel16_mc00_10_mmxext", "rgb16tobgr15", "av_hmac_update", "ff_fft_init_fixed", "ff_me_cmp_init", "av_aes_ctr_alloc", "ff_alacdsp_init", "ff_init_lls_x86", "ff_put_pixels8_xy2_mmx", "ff_vc1_interp_mc", "ff_put_h264_qpel16_mc01_10_mmxext", "ff_h264_idct8_dc_add_12_c", "av_opt_set_q", "av_mastering_display_metadata_create_side_data", "av_div_q", "ff_hevc_sao_type_idx_decode", "ff_mpeg_framesize_alloc", "ff_h264_chroma422_dc_dequant_idct_8_c", "ff_wv_parse_header", "av_opt_eval_int", "ff_pixblockdsp_init", "sws_init_context", "ff_h264_idct_add16_12_c", "ff_vc1_decode_init_alloc_tables", "ff_h264_idct_dc_add_12_c", "ff_put_no_rnd_qpel8_mc12_old_c", "ff_hevc_part_mode_decode", "avpriv_io_delete", "ff_mpeg_flush", "av_fast_padded_mallocz", "ff_h264_idct_add16intra_8_c", "avio_wb32", "ff_jpeg_fdct_islow_10", "ff_avg_qpel8_mc13_old_c", "ff_ps_init", "av_packet_move_ref", "avpriv_find_start_code", "av_gcd", "av_parse_cpu_caps", "av_image_copy_to_buffer", "rgb48tobgr48_nobswap", "ff_eval_coefs", "avpriv_copy_bits", "av_samples_set_silence", "ff_hevc_decode_nal_sei", "av_register_codec_parser", "ff_hevc_decode_short_term_rps", "ff_decode_frame_props", "ff_aac_sbr_ctx_init", "ff_fft_init", "av_bprint_chars", "ff_add_cpb_side_data", "ff_put_h264_qpel16_mc20_10_mmxext", "ff_h264_idct_add16intra_10_c", "av_codec_set_seek_preroll", "ff_vp9dsp_scaled_mc_init_10", "ff_init_desc_chscale", "av_dirac_parse_sequence_header", "ff_er_frame_end", "av_aes_ctr_set_iv", "ffurl_protocol_next", "ff_hyscale_fast_c", "ff_h264_idct8_dc_add_14_c", "av_codec_get_seek_preroll", "ff_put_qpel16_mc11_old_c", "sws_getContext", "av_samples_alloc_array_and_samples", "ff_init_ff_sine_windows", "ff_h264_chroma422_dc_dequant_idct_14_c", "ff_vc1_mc_1mv", "ff_rm_parse_packet", "av_opt_set_bin", "av_frame_get_plane_buffer", "ff_h264_chroma422_dc_dequant_idct_9_c", "av_guess_codec", "av_timecode_init", "ff_vp9dsp_init_16bpp_x86", "av_buffer_make_writable", "ff_h264_idct8_add4_8_c", "ff_data_to_hex", "ff_guess_image2_codec", "av_frame_get_colorspace", "av_cast5_crypt2", "av_color_transfer_name", "av_mdct_init", "av_des_alloc", "av_packet_pack_dictionary", "av_packet_merge_side_data", "av_strlcat", "av_rc4_alloc", "ff_hevc_sao_offset_sign_decode", "ff_mpv_common_frame_size_change", "ff_mp4_read_dec_config_descr", "ff_h264_execute_ref_pic_marking", "ff_hevc_mvp_lx_flag_decode", "av_frame_set_pkt_size", "av_display_matrix_flip", "av_get_pix_fmt_loss", "av_register_output_format", "av_opt_set", "ff_read_riff_info", "ff_simple_idct84_add", "ff_msmpeg4_decode_motion", "ff_alloc_extradata", "ff_put_no_rnd_qpel16_mc11_old_c", "av_force_cpu_flags", "ff_put_pixels16x16_c", "ff_sws_alphablendaway", "ff_h264_chroma_dc_dequant_idct_14_c", "av_parser_next", "avformat_query_codec", "av_opt_get_double", "avio_seek", "avio_closep", "ff_dca_core_filter_fixed", "ff_vc1_init_transposed_scantables", "rgb64to48_bswap", "ff_copy_and_dup", "ff_audiodsp_init_x86", "av_frame_get_pkt_pos", "avcodec_dct_get_class", "ff_hevc_skip_flag_decode", "av_codec_get_pkt_timebase", "ff_hevc_sao_offset_abs_decode", "av_codec_get_tag", "av_resample_compensate", "av_channel_layout_extract_channel", "shuffle_bytes_3210", "ff_print_debug_info2", "av_opt_child_class_next", "ff_mdct_init", "avpriv_aac_parse_header", "av_usleep", "ff_intrax8_common_init", "ff_mp4_read_descr", "ff_hevc_decode_nal_vps", "av_get_packed_sample_fmt", "ff_hevc_no_residual_syntax_flag_decode", "ff_mpeg4_decode_video_packet_header", "ff_h264_idct_add8_8_c", "avio_find_protocol_name", "av_match_ext", "av_codec_set_chroma_intra_matrix", "avio_put_str", "ff_h264_execute_decode_slices", "av_parse_time", "av_get_planar_sample_fmt", "av_read_frame", "av_opt_find", "ff_blockdsp_init_x86", "ff_tget_double", "av_write_trailer", "av_audio_convert_free", "ff_mpadsp_apply_window_fixed", "ff_hevc_pred_init", "ff_mpv_frame_start", "ff_put_qpel16_mc13_old_c", "av_packet_clone", "ff_put_no_rnd_qpel16_mc32_old_c", "sws_alloc_set_opts", "ff_sine_window_init_fixed", "ff_side_data_set_encoder_stats", "avformat_open_input", "ff_hex_to_data", "avcodec_default_execute2", "avpriv_lock_avformat", "ff_hevc_save_states", "avcodec_find_decoder_by_name", "ff_crcA001_update", "av_crc_get_table", "av_packet_split_side_data", "sws_getIdentityVec", "ff_mdct_end", "ff_fmt_convert_init", "ff_vorbis_stream_comment", "ff_mov_add_hinted_packet", "ff_sbr_apply", "avsubtitle_free", "ff_dca_set_channel_layout", "av_codec_get_codec_descriptor", "ff_hevc_prev_intra_luma_pred_flag_decode", "ff_interleave_add_packet", "ff_get_codec_guid", "rgb48tobgr48_bswap", "ff_rtp_codec_id", "shuffle_bytes_3012", "ff_h263_decode_motion", "ff_emulated_edge_mc_8", "avcodec_align_dimensions2", "av_buffer_unref", "ff_hevc_decode_nal_sps", "ff_avg_pixels16x16_c", "av_frame_set_channels", "avio_wl16", "av_version_info", "ff_hevc_dsp_init", "av_audio_fifo_peek", "av_opt_ptr", "ff_simple_idct_put_mmx", "avio_enum_protocols", "av_log_format_line", "avformat_configuration", "ff_isom_write_avcc", "ff_faanidct_add", "av_opt_set_int", "av_frame_clone", "ff_thread_init", "ff_synth_filter_init", "ffurl_connect", "av_frame_set_colorspace", "avpriv_toupper4", "ff_dca_exss_parse", "ff_blockdsp_init", "ff_mpeg4_get_video_packet_prefix_length", "ff_tdecode_header", "av_fifo_realloc2", "av_log_get_flags", "av_frame_get_decode_error_flags", "av_audio_convert_alloc", "ff_dca_core_filter_frame", "ff_hevc_sao_band_position_decode", "ff_dct_init", "av_fifo_free", "av_buffer_pool_get", "ff_h264_idct_add8_422_12_c", "av_parse_cpu_flags", "ff_hevc_cbf_luma_decode", "ff_int_to_int16", "ff_vc1_loop_filter_iblk_delayed", "ff_free_filters", "ff_free_picture_tables", "av_opt_set_defaults", "av_des_mac", "ff_rm_free_rmstream", "ff_id3v2_tag_len", "ff_flac_write_header", "av_hash_final", "avformat_seek_file", "avcodec_free_context", "av_aes_ctr_increment_iv", "av_dict_set_int", "av_calloc", "ff_h264_idct_add_9_c", "ffurl_register_protocol", "avio_flush", "ff_sbrdsp_init", "av_tempfile", "ff_alloc_dir_entry", "ff_hevc_dsp_init_x86", "av_adler32_update", "rgb15tobgr16", "av_expr_parse", "ff_h264_idct_add8_12_c", "ff_raw_video_read_header", "av_guess_format", "avcodec_close", "avpriv_copy_pce_data", "av_camellia_init", "ff_imdct15_uninit", "av_blowfish_alloc", "av_dv_frame_profile", "avcodec_find_best_pix_fmt_of_list", "av_fopen_utf8", "av_get_known_color_name", "av_lfg_init", "av_image_fill_pointers", "avutil_version", "ff_hevc_parse_sps", "ff_aac_sbr_init", "ff_emulated_edge_mc_16", "ff_put_h264_qpel16_mc22_10_mmxext", "av_nearer_q", "ff_h264dsp_init_x86", "avpriv_find_pix_fmt", "av_thread_message_queue_set_free_func", "ff_put_qpel8_mc32_old_c", "ff_h261_loop_filter", "av_stristr", "ff_mpeg_er_frame_start", "av_bprint_finalize", "av_mul_q", "ff_read_packet", "swr_inject_silence", "av_audio_fifo_read", "av_audio_fifo_write", "ff_j_rev_dct1", "ff_h264_idct_add16_8_c", "av_packet_side_data_name", "av_fast_padded_malloc", "av_opt_set_from_string", "ff_h264_idct8_add_14_c", "av_convert_lang_to", "ff_put_no_rnd_qpel16_mc33_old_c", "avformat_new_stream", "av_stream_get_side_data", "ff_h264_idct_add8_422_8_c", "ff_vp78dsp_init", "ff_mpeg1_find_frame_end", "ff_celp_filter_init", "ff_hcscale_fast_c", "ff_reduce_index", "av_strlcpy", "ffio_fill", "ff_seek_frame_binary", "swri_get_dither", "avio_wl32", "swri_noise_shaping_int16", "av_sha_final", "av_pkt_dump_log2", "av_dct_init", "ff_msmpeg4_coded_block_pred", "av_packet_free_side_data", "ff_msmpeg4_decode_ext_header", "av_opt_eval_flags", "ff_h264_hl_decode_mb", "swri_audio_convert_alloc", "av_aes_ctr_get_iv", "av_packet_unpack_dictionary", "ff_check_interrupt", "av_opt_set_sample_fmt", "rgb16tobgr32", "av_packet_unref", "ff_init_buffer_info", "rgb16tobgr16", "ff_hevc_merge_flag_decode", "ff_rescale_rms", "ff_j_rev_dct4", "ff_dca_core_init", "ff_simple_idct48_add", "ff_make_absolute_url", "ff_find_unused_picture", "ff_avg_qpel16_mc32_old_c", "avpriv_dca_convert_bitstream", "ff_vc1_apply_p_loop_filter", "ff_mpa_synth_filter_fixed", "ff_sbrdsp_init_x86", "ff_hevc_sao_eo_class_decode", "ff_codec_get_id", "ff_vp9dsp_init_12bpp_x86", "ff_put_wav_header", "ff_h263dsp_init", "ff_raw_audio_read_header", "av_stereo3d_alloc", "ff_mpegvideodsp_init", "av_frame_get_color_range", "av_timecode_adjust_ntsc_framenum2", "av_frame_set_sample_rate", "ff_yuv2rgb_get_func_ptr", "av_buffer_ref", "av_fft_init", "av_program_add_stream_index", "av_image_copy_plane", "av_sample_fmt_is_planar", "ff_fdct_sse2", "av_add_index_entry", "ff_wmv2dsp_init", "av_image_get_buffer_size", "av_sub_q", "ff_init_slice_from_src", "ff_init_scantable", "ff_codec_guid_get_id", "rgb16to24", "av_opt_set_channel_layout", "ff_put_qpel8_mc33_old_c", "rgb12to15", "avcodec_find_encoder_by_name", "ff_generate_sliding_window_mmcos", "ff_sws_rgb2rgb_init", "av_fifo_generic_write", "rgb32to24", "av_expr_parse_and_eval", "ffio_limit", "ff_set_dimensions", "av_dynarray_add_nofree", "ff_ac3dsp_init", "av_get_picture_type_char", "ff_videodsp_init", "ff_faanidct", "av_pkt_dump2", "av_image_fill_linesizes", "ff_h264_idct8_dc_add_10_c", "ff_h263dsp_init_x86", "av_init_packet", "av_frame_set_qp_table", "av_frame_remove_side_data", "av_bitstream_filter_next", "av_lzo1x_decode", "av_expr_eval", "swr_set_channel_mapping", "av_oformat_next", "ff_vc1_decode_blocks", "av_seek_frame", "av_hex_dump_log", "av_div_i", "av_log_missing_feature", "av_aes_ctr_free", "sws_isSupportedOutput", "swr_get_delay", "ff_put_h264_qpel16_mc13_10_mmxext", "av_find_best_stream", "av_rescale_q_rnd", "av_d2q", "ff_configure_buffers_for_index", "ff_psdsp_init", "avio_put_str16be", "swri_realloc_audio", "avpriv_mpegts_parse_open", "ff_h264_sei_stereo_mode", "ff_put_h264_qpel16_mc31_10_mmxext", "av_rc4_init", "ff_flacdsp_init_x86", "av_strtok", "ff_mpv_decode_mb", "avutil_configuration", "ff_unlock_avcodec", "ff_put_bmp_header", "av_format_get_control_message_cb", "ff_h264_idct8_add4_10_c", "ff_put_h264_qpel16_mc10_10_mmxext", "ffurl_write", "ff_dca_downmix_to_stereo_fixed", "ffio_init_checksum", "ff_h264_decode_init", "av_fft_permute", "ff_flac_set_channel_layout", "av_opt_query_ranges_default", "av_strerror", "ff_hevc_log2_res_scale_abs", "avio_open_dyn_buf", "avcodec_get_class", "av_rescale", "swscale_license", "av_xtea_init", "ff_hevc_set_qPy", "av_frame_ref", "ff_fmt_convert_init_x86", "ff_h264_decode_slice_header", "sws_normalizeVec", "av_copy_packet_side_data", "ff_put_pixels16_xy2_mmx", "ffurl_size", "swri_resample_dsp_x86_init", "av_dump_format", "av_get_pix_fmt", "swr_alloc", "av_packet_copy_props", "avcodec_decode_subtitle2", "avformat_get_riff_audio_tags", "ff_mpa_synth_init_fixed", "sws_allocVec", "av_write_uncoded_frame", "ff_fft_init_x86", "ff_fixed_dsp_init_x86", "ff_put_no_rnd_qpel8_mc11_old_c", "av_dict_free", "av_realloc_f", "avpriv_get_raw_pix_fmt_tags", "ff_h263_loop_filter", "ff_end_tag", "ff_h264_alloc_tables", "av_fifo_freep", "av_frame_get_buffer", "ff_put_qpel8_mc12_old_c", "avio_wl24", "av_read_image_line", "av_opt_set_dict_val", "ff_intrax8_decode_picture", "av_fmt_ctx_get_duration_estimation_method", "ff_put_qpel8_mc13_old_c", "avpriv_solve_lls", "ff_init_desc_fmt_convert", "ff_hevc_hls_mvd_coding", "ff_riff_write_info", "ff_vp9dsp_init_10", "ff_dct32_fixed", "ff_h264_chroma422_dc_dequant_idct_10_c", "ff_tis_ifd", "av_log", "av_register_hwaccel", "avcodec_default_get_buffer2", "ff_vp9dsp_init_8", "avformat_queue_attached_pictures", "ff_thread_decode_frame", "av_codec_get_lowres", "avpriv_open", "ff_bswapdsp_init", "av_filename_number_test", "av_blowfish_crypt_ecb", "ff_dca_core_parse", "avpriv_get_trc_function_from_trc", "av_format_get_video_codec", "av_imdct_half", "av_fifo_generic_peek_at", "ff_h264_idct_add8_9_c", "av_parser_init", "ff_irms", "av_audio_fifo_alloc", "av_image_copy", "ff_imdct_calc_c_fixed", "ff_mpv_report_decode_progress", "ff_h264_idct8_add_10_c", "ff_avg_h264_qpel16_mc23_10_mmxext", "av_opt_eval_double", "ff_vp9dsp_init", "ff_h264_decode_ref_pic_marking", "ff_h264_chroma_dc_dequant_idct_12_c", "__ctzdi2", "avcodec_alloc_context3", "av_base64_decode", "ff_put_no_rnd_qpel16_mc12_old_c", "av_cmp_i", "ff_h264_idct_dc_add_8_c", "ff_find_last_ts", "ff_h264_unref_picture", "ff_init_block_index", "av_color_range_name", "ff_set_ref_count", "ff_hevc_decode_nal_pps", "ff_h264_idct_add16intra_9_c", "av_frame_get_channel_layout", "av_pix_fmt_desc_next", "ff_h264_init_dequant_tables", "ff_h264dsp_init", "ff_init_vlc_sparse", "ff_thread_report_progress2", "ff_color_frame", "ff_init_filters", "ff_vp9dsp_init_10bpp_x86", "ff_init_cabac_encoder", "av_codec_get_id", "ff_celp_circ_addf", "avcodec_fill_audio_frame", "ff_id3v2_read", "av_format_set_audio_codec", "av_stream_get_recommended_encoder_configuration", "ff_mpeg4_clean_buffers", "ff_h264_update_thread_context", "ff_tget_long", "av_stream_get_r_frame_rate", "av_bprint_strftime", "av_get_sample_fmt", "ff_vc1_decode_entry_point", "ff_mpv_decode_defaults", "ff_mdct_init_fixed_32", "ff_put_h264_qpel16_mc03_10_mmxext", "ff_prores_idct", "ff_avg_h264_qpel16_mc30_10_mmxext", "av_aes_alloc", "ff_avc_find_startcode", "ff_avg_qpel8_mc12_old_c", "sws_scale", "avcodec_get_chroma_sub_sample", "ff_fft_lut_init", "swri_resample_dsp_init", "av_thread_message_queue_send", "ff_dct_init_x86", "ff_avg_qpel16_mc11_old_c", "av_image_check_size", "av_write_image_line", "av_packet_rescale_ts", "ff_alacdsp_init_x86", "ff_gmc_c", "ff_avc_parse_nal_units_buf", "ff_fdct_mmx", "ff_xvid_idct", "av_opt_get_pixel_fmt", "ff_mpv_common_init_x86", "ff_sine_window_init", "sws_alloc_context", "av_audio_fifo_reset", "ff_rtp_get_codec_info", "av_pix_fmt_desc_get_id", "av_xtea_crypt", "rgb15tobgr15", "ff_rgb24toyv12_c", "av_d2str", "av_opt_show2", "ff_codec_get_tag", "ff_put_qpel16_mc12_old_c", "swscale_configuration", "ff_vp8_decode_init", "av_default_get_category", "av_samples_alloc", "sws_freeVec", "ff_rfps_add_frame", "av_samples_copy", "ffio_open2_wrapper", "av_file_map", "ff_vp9dsp_intrapred_init_10", "avio_get_str16le", "av_rdft_calc", "av_write_uncoded_frame_query", "ff_flac_parse_streaminfo", "ff_get_extradata", "ff_jpeg_fdct_islow_8", "ff_mpadsp_init_x86", "ff_vc1_parse_frame_header_adv", "av_register_bitstream_filter", "av_murmur3_final", "av_opt_next", "av_base64_encode", "ff_init_ff_cos_tabs_fixed", "avcodec_register", "ff_psdsp_init_x86", "ff_hevc_cu_qp_delta_abs", "av_fft_end", "av_buffer_pool_uninit", "av_resample_close", "ff_id3v1_read", "avpriv_frame_get_metadatap", "av_audio_fifo_size", "ff_simple_idct_mmx", "av_samples_get_buffer_size", "av_pix_fmt_desc_get", "ff_choose_timebase", "ffio_rewind_with_probe_data", "ff_vorbiscomment_write", "ff_mdct_calc_c_fixed", "av_rc4_crypt", "ff_mov_cenc_write_stbl_atoms", "av_bmg_get", "ff_avg_h264_qpel16_mc03_10_mmxext", "av_dct_calc", "ff_hevc_cu_qp_delta_sign_flag", "sws_getGaussianVec", "ff_init_cabac_decoder", "ff_flacdsp_init", "av_opt_flag_is_set", "avio_close_dir", "av_get_random_seed", "avpriv_report_missing_feature", "av_fifo_size", "rgb64tobgr48_bswap", "av_timecode_init_from_string", "av_log_ask_for_sample", "ff_mpv_idct_init", "av_buffer_is_writable", "avio_r8", "ff_mov_get_channel_layout", "ff_put_no_rnd_qpel16_mc31_old_c", "ff_rtp_chain_mux_open", "avio_w8", "sws_convertPalette8ToPacked24", "av_image_alloc", "ff_mov_cenc_write_packet", "ff_h264_decode_nal", "ff_vorbisdsp_init", "ff_imdct_calc_c_fixed_32", "avformat_match_stream_specifier", "av_read_play", "ff_h264_idct_add8_422_10_c", "ff_mdct_calcw_c", "av_vlog", "av_find_program_from_stream", "av_hash_final_bin", "ff_mpegvideodsp_init_x86", "ff_rtp_get_payload_type", "avio_alloc_context", "ff_imdct15_init", "av_shrink_packet", "avio_wb16", "ffio_ensure_seekback", "av_format_set_subtitle_codec", "av_mdct_end", "av_freep", "ff_h263_resync", "av_grow_packet", "ff_ac3_bit_alloc_calc_mask", "avpriv_float_dsp_alloc", "av_tree_enumerate", "ff_gen_search", "av_frame_set_channel_layout", "av_frame_get_sample_rate", "ff_h264chroma_init_x86", "avcodec_version", "av_free", "av_format_set_data_codec", "ff_fft_init_fixed_32", "av_probe_input_format3", "av_packet_from_data", "ff_vc1_mc_4mv_luma", "av_fifo_drain", "ff_h263_show_pict_info", "ff_hevc_split_coding_unit_flag_decode", "ff_mpeg_er_init", "ff_side_data_update_matrix_encoding", "swr_init", "ff_j_rev_dct", "av_packet_ref", "av_fifo_reset", "avio_rb64", "avcodec_descriptor_next", "av_reallocp_array", "ff_avg_h264_qpel16_mc20_10_mmxext", "av_thread_message_flush", "swri_noise_shaping_float", "avio_read_dir", "av_hex_dump", "ff_h264_luma_dc_dequant_idct_12_c", "ff_compute_frame_duration", "avcodec_decode_video2", "ff_vc1_mc_4mv_chroma4", "av_get_output_timestamp", "av_sha_update", "ff_simple_idct248_put", "ff_hevc_hls_residual_coding", "av_thread_message_queue_alloc", "av_twofish_init", "swr_set_compensation", "avcodec_get_edge_width", "ff_put_no_rnd_qpel16_mc13_old_c", "ff_updateMMXDitherTables", "av_gettime_relative", "avcodec_dct_alloc", "ff_mpv_decode_init", "ff_interp", "ff_sws_init_input_funcs", "ff_vc1_parse_frame_header", "ff_replaygain_export_raw", "av_format_get_opaque", "av_get_frame_filename", "avio_printf", "ff_simple_idct_8", "ff_get_pcm_codec_id", "av_register_input_format", "ff_h263_decode_end", "ff_init_desc_cfmt_convert", "ff_h264_field_end", "ff_avg_h264_qpel16_mc01_10_mmxext", "ff_mpv_export_qp_table", "ff_intrax8_common_end", "ff_aac_sbr_ctx_close", "ff_choose_chroma_location", "ff_rv34_decode_update_thread_context", "ff_generate_avci_extradata", "av_frame_set_pkt_duration", "av_tree_find", "av_fifo_alloc_array", "ffurl_handshake", "ff_faanidct_put", "ffurl_open_whitelist", "ff_dca_xll_close", "av_image_fill_arrays", "avcodec_find_decoder", "ff_avg_h264_qpel16_mc12_10_mmxext", "av_opt_get_int", "av_codec_set_codec_descriptor", "ff_avg_qpel16_mc33_old_c", "av_display_rotation_get", "ff_mov_read_stsd_entries", "av_int2i", "ff_h264_ref_picture", "av_aes_crypt", "ff_brktimegm", "ff_yuv2rgb_init_x86", "av_get_colorspace_name", "ff_format_io_close", "ffio_get_checksum", "ff_rv34dsp_init", "avcodec_find_best_pix_fmt2", "ff_avg_qpel8_mc31_old_c", "av_picture_crop", "av_thread_message_queue_set_err_recv", "ff_h264_idct_add_14_c", "ff_get_format", "ff_codec_open2_recursive", "ffio_read_indirect", "av_ripemd_init", "av_hash_freep", "ff_er_frame_start", "ff_mov_init_hinting", "ff_simple_idct_add_10", "av_get_channel_description", "av_chroma_location_name", "url_feof", "ff_add_index_entry", "av_opt_set_defaults2", "sws_getColorspaceDetails", "av_hash_final_hex", "ff_hevc_get_ref_list", "swr_get_class", "ff_intel_h263_decode_picture_header", "avformat_alloc_context", "ff_id3v2_free_extra_meta", "ff_put_pixels8x8_c", "ff_imdct36_blocks_float", "ff_set_cmp", "ff_draw_horiz_band", "ff_vc1_pred_b_mv_intfi", "av_parse_video_size", "av_dict_get_string", "avpriv_init_lls", "av_bitstream_filter_close", "ff_init_mpadsp_tabs_fixed", "swri_rematrix_free", "av_vorbis_parse_frame", "ff_imdct_half_c_fixed", "swri_audio_convert_init_x86", "ff_vp56_init_range_decoder", "ff_mov_cenc_write_sinf_tag", "ff_faandct", "av_default_item_name", "ff_h264_pred_init", "ff_h264_flush_change", "av_probe_input_buffer", "ff_avg_pixels8x8_c", "avcodec_chroma_pos_to_enum", "av_frame_make_writable", "av_murmur3_update", "__moddi3", "av_strcasecmp", "ff_init_scantable_permutation_x86", "ff_vc1_loop_filter_iblk", "ff_rl_init", "ff_fdct248_islow_10", "ff_read_frame_flush", "ff_simple_idct_12", "av_strdup", "av_dict_set", "ff_celp_lp_zero_synthesis_filterf", "ff_mov_write_packet", "ff_rv40dsp_init", "av_basename", "ff_mpeg_update_thread_context", "av_get_audio_frame_duration", "ff_get_qtpalette", "ff_qpeldsp_init_x86", "av_bprint_clear", "av_log_set_callback", "ff_hevc_pred_mode_decode", "avformat_version", "avio_check", "ff_sdp_write_media", "ff_put_v", "ff_mdct_end_fixed_32", "ff_h264_decode_seq_parameter_set", "ff_h264_idct_add8_10_c", "ff_tadd_bytes_metadata", "av_get_cpu_flags", "ff_init_poc", "ff_mpv_common_defaults", "av_codec_get_tag2", "ff_subblock_synthesis", "av_log_set_level", "ff_hevc_unref_frame", "av_frame_free", "av_md5_init", "avpicture_alloc", "ffio_free_dyn_buf", "swr_is_initialized", "av_crc", "avformat_network_deinit", "av_realloc_array", "ff_ape_parse_tag", "sws_convVec", "swri_dither_init", "ff_yuv2rgb_c_init_tables", "avio_get_str16be", "swri_noise_shaping_int32", "ff_init_ff_cos_tabs", "ff_h264_slice_context_init", "ff_h264_idct8_add4_14_c", "ff_set_sar", "av_image_get_linesize", "av_write_frame", "ff_imdct36_blocks_fixed", "ff_h264_idct_dc_add_14_c", "av_md5_update", "av_thread_message_queue_free", "ff_thread_report_progress", "avpriv_set_pts_info", "ff_slice_thread_free", "ff_vp9dsp_init_x86", "av_iformat_next", "av_new_packet", "avpriv_mpegts_parse_close", "ff_h264_set_erpic", "ff_mpeg_ref_picture", "avformat_write_header", "av_downmix_info_update_side_data", "av_strnstr", "avpriv_mpegaudio_decode_header", "avpriv_io_move", "ff_vp9dsp_mc_init_10", "sws_getDefaultFilter", "avio_rl16", "ff_fdct_ifast248", "av_strtod", "av_vorbis_parse_init", "ff_vp8_decode_free", "swr_close", "ff_audiodsp_init", "av_stream_set_r_frame_rate", "ff_dcadsp_init_x86", "ff_mov_cenc_avc_parse_nal_units", "swri_audio_convert", "ff_asfcrypt_dec", "ff_h264_get_slice_type", "av_opt_eval_q", "av_timegm", "av_vorbis_parse_free", "ff_get_wav_header", "ff_print_debug_info", "av_opt_eval_int64", "ff_msmpeg4_decode_block", "ff_jref_idct_add", "ff_hevc_split_packet", "ff_mpadsp_init", "ff_ape_write_tag", "av_tree_destroy", "avpriv_strtod", "av_tea_crypt", "avio_handshake", "ff_put_qpel16_mc32_old_c", "ff_vorbis_inverse_coupling", "avio_open2", "ff_raw_read_partial_packet", "av_strndup", "av_dct_end", "ff_mov_cenc_avc_write_nal_units", "avpriv_request_sample", "sws_getCoefficients", "av_set_cpu_flags_mask", "avio_wl64", "ff_rm_alloc_rmstream", "av_buffer_get_opaque", "ff_rv40dsp_init_x86", "ff_hevc_luma_mv_mvp_mode", "ff_mp4_read_descr_len", "av_find_input_format", "av_aes_ctr_set_random_iv", "ff_put_qpel16_mc31_old_c", "av_frame_get_pkt_size", "ff_set_qscale", "avcodec_is_open", "av_register_all", "ff_url_join", "ff_ps_read_data", "ff_ps_ctx_init", "avpriv_align_put_bits", "ff_vc1dsp_init", "ff_h264_chroma_dc_dequant_idct_8_c", "ff_alloc_packet", "av_packet_new_side_data", "av_hmac_init", "sws_addVec", "av_match_list", "ff_hevc_cu_chroma_qp_offset_idx", "av_vbprintf", "av_fifo_generic_read", "swri_rematrix_init_x86", "av_hmac_free", "ff_vc1_pred_mv_intfr", "avcodec_enum_to_chroma_pos", "av_timecode_make_mpeg_tc_string", "av_codec_set_lowres", "ff_put_qpel8_mc11_old_c", "ff_avg_h264_qpel16_mc10_10_mmxext", "ff_mov_cenc_free", "av_rescale_q", "av_opt_set_dict", "av_frame_get_best_effort_timestamp", "av_mod_i", "swr_drop_output", "ff_mpa_synth_init_float", "ff_llauddsp_init_x86", "av_sha512_final", "ff_dct_end", "ff_rv34_get_start_offset", "av_bprint_append_data", "av_color_primaries_name", "ff_vorbis_comment", "ff_update_duplicate_context", "av_des_crypt", "ff_h264_idct_add_10_c", "av_get_packet", "av_packet_shrink_side_data", "av_rescale_rnd", "avpriv_split_xiph_headers", "av_format_get_open_cb", "av_format_set_video_codec", "av_get_time_base_q", "av_bitstream_filter_init", "av_probe_input_format", "ff_put_h264_qpel16_mc21_10_mmxext", "av_hwaccel_next", "ff_avc_write_annexb_extradata", "av_parser_change", "av_parse_video_rate", "ff_thread_free", "avformat_get_mov_video_tags", "ff_hevc_annexb2mp4_buf", "ff_put_qpel8_mc31_old_c", "av_frame_set_color_range", "av_opt_set_dict2", "av_gettime", "av_get_sample_fmt_string", "av_opt_get_video_rate", "ff_reset_entries", "ff_msmpeg4_decode_picture_header", "av_cpu_count", "av_stream_get_end_pts", "ff_dca_xll_flush", "avio_wb24", "ff_fft_end_fixed_32", "swri_noise_shaping_double", "ff_put_h264_qpel16_mc00_10_mmxext", "av_format_set_metadata_header_padding", "ff_ps_apply", "av_opt_set_image_size", "av_frame_copy_props", "av_opt_set_pixel_fmt", "ff_h264_free_tables", "av_hmac_alloc", "ff_tget_short", "ff_put_no_rnd_qpel8_mc33_old_c", "av_hash_init", "av_dynarray2_add", "av_get_padded_bits_per_pixel", "ff_mpeg4video_split", "rgb64tobgr48_nobswap", "av_picture_copy", "av_stereo3d_create_side_data", "ffurl_alloc", "av_pixelutils_get_sad_fn", "ff_mpv_motion", "av_opt_serialize", "avformat_alloc_output_context2", "avio_rl24", "av_buffer_default_free", "sws_scaleVec", "ff_thread_await_progress2", "avcodec_default_get_format", "ff_h263_pred_dc", "av_stristart", "av_get_channel_layout_channel_index", "av_expr_free", "ff_h264_direct_dist_scale_factor", "ff_hevc_frame_rps", "av_frame_alloc", "avcodec_string", "av_frame_unref", "ff_simple_idct_put_8", "av_opt_get_image_size", "av_escape", "ff_msmpeg4_common_init", "avcodec_profile_name", "av_interleaved_write_frame", "ff_rv34_decode_init", "avpicture_get_size", "av_opt_is_set_to_default", "av_md5_sum", "ff_init_scantable_permutation", "av_codec_get_max_lowres", "ff_mpv_common_end", "ff_fdctdsp_init_x86", "swr_set_matrix", "swresample_version", "ff_h264_fill_mbaff_ref_list", "ff_id3v2_match", "ff_avg_qpel8_mc33_old_c", "ff_vorbis_len2vlc", "ff_tget", "rgb12tobgr12", "ff_dv_frame_profile", "av_hmac_final", "av_vorbis_parse_frame_flags", "ff_avg_qpel16_mc12_old_c", "av_demuxer_open", "av_dup_packet", "ff_crc04C11DB7_update", "ff_aac_ac3_parse", "avcodec_encode_audio2", "av_picture_pad", "ff_h264_chroma_dc_dequant_idct_9_c", "ff_isom_write_hvcc", "ff_dca_core_close", "ff_h263_decode_mb", "av_samples_fill_arrays", "ff_get_bmp_header", "av_hmac_calc", "ff_h263_find_frame_end", "swr_next_pts", "ff_pcm_read_seek", "av_xtea_le_init", "av_timecode_make_smpte_tc_string", "ff_synth_filter_init_x86", "av_opt_freep_ranges", "ff_parse_mpeg2_descriptor", "av_aes_ctr_init", "av_fifo_alloc", "av_reduce", "rgb15tobgr32", "ff_hevc_extract_rbsp", "av_opt_find2", "av_get_channel_layout_string", "av_format_set_opaque", "ff_vc1_mc_4mv_chroma", "av_copy_packet", "ff_h264_decode_ref_pic_list_reordering", "av_sub_i", "av_opt_get_channel_layout", "ff_h264_decode_init_vlc", "ff_lock_avcodec", "ff_replaygain_export", "ff_h263_pred_motion", "ff_getSwsFunc", "ff_mpeg_draw_horiz_band", "ff_vc1_decode_end", "ff_eval_refl", "av_xtea_alloc", "ff_put_h264_qpel16_mc30_10_mmxext", "av_md5_alloc", "ff_rv34dsp_init_x86", "av_audio_resample_init", "ff_init_desc_hscale"], "allstrings": ["Dependent coupling is not supported together with LTP\n", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "TNS filter order %d is greater than maximum %d.\n", "ChannelElement %d.%d missing \n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "Audio specific config size is invalid\n", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "AAC data resilience (flags %x)", "Input buffer exhausted before END element found\n", "Non-byte-aligned audio-specific config", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Invalid Predictor Reset Group.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "Pulse tool not allowed in eight short sequence.\n", "error in spectral data, ESC overflow\n", "Pulse data corrupt or invalid.\n", "Unknown ER channel configuration %d", "channel element %d.%d is not allocated\n", "More than one AAC RDB per ADTS frame", "Error decoding AAC frame header.\n", "skip_data_stream_element: Input buffer exhausted before END element found\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "frame length mismatch %d << %d\n", "ADTS header detected, probably as result of configuration misparsing\n", "AAC LATM (Advanced Audio Coding LATM syntax)", "Select the channel to decode for dual mono", "Expected to read %d PS bits actually read %d.\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "Unsupported sample rate for SBR: %d\n", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Expected to read %d SBR bytes actually read %d.\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "envelope scalefactor overflow in dequant\n", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "bap %d is invalid in plain AC-3\n", "GAQ gain group code out-of-range\n", "invalid spectral extension range (%d >= %d)\n", "invalid spectral extension copy start bin (%d >= %d)\n", "coupling not allowed in mono or dual-mono\n", "invalid coupling range (%d >= %d)\n", "new coupling strategy must be present in block 0\n", "new coupling coordinates must be present in block 0\n", "Warning: new rematrixing strategy not present in block 0\n", "new bit allocation info must be present in block 0\n", "new snr offsets must be present in block 0\n", "new coupling leak info must be present in block 0\n", "delta bit allocation strategy reserved\n", "unsupported frame type : skipping frame\n", "unable to determine channel mode\n", "error decoding the audio block\n", "percentage of dynamic range compression to apply", "enable heavy dynamic range compression", "target level in -dBFS (0 not applied)", "max samples per frame invalid: %u\n", "Unsupported channel count: %d\n", "syntax element unsupported: %d\n", "invalid element channel count\n", "invalid samples per frame: %u\n", "sample count mismatch: %u != %d\n", "invalid zero block size of %d %d %d\n", "Failed to decode all channels\n", "no end tag found. incomplete packet.\n", "ALAC (Apple Lossless Audio Codec)", "Force non-standard decoding process", "Only mono and stereo is supported\n", "Compression Level: %d - Flags: %d\n", "Incorrect compression level %d\n", "packet size is not a multiple of 4. extra bytes at the end will be skipped.\n", "maximum number of samples decoded per call", "no maximum. decode all samples for each packet at once", "fast integer (experimental / for debugging)", "floating point AAN DCT (experimental / for debugging)", "floating point AAN IDCT (experimental / for debugging)", "(unsigned)pkt->size <= 2147483647 - 32", "size<=2147483647 && p - pkt->data >= size", "Internal error, put_bits buffer too small\n", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "Too long VLC (%d) in init_vlc\n", "MPEG-1/2 video XvMC (X-Video Motion Compensation)", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "H.263+ / H.263-1998 / H.263 version 2", "FLV / Sorenson Spark / Sorenson H.263 (Flash Video)", "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3", "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "Sony PlayStation MDEC (Motion DECoder)", "Westwood Studios VQA (Vector Quantized Animation) video", "LCL (LossLess Codec Library) MSZH", "LCL (LossLess Codec Library) ZLIB", "QuickTime Animation (RLE) video", "TechSmith Screen Capture Codec", "AVS (Audio Video Standard) video", "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)", "VMware Screen Codec / VMware Video", "Delphine Software International CIN video", "On2 VP6 (Flash version, with alpha channel)", "Intel Indeo Video Interactive 4", "Intel Indeo Video Interactive 5", "Multicolor charset for Commodore 64", "Multicolor charset for Commodore 64, extended with 5th color (colram)", "Silicon Graphics Motion Video Compressor 1", "Silicon Graphics Motion Video Compressor 2", "MS Windows Media Video V9 Screen", "Uncompressed packed MS 4:4:4:4", "Uncompressed packed QT 4:4:4:4", "H.265 / HEVC (High Efficiency Video Coding)", "Amazing Studio Packed Animation File Video", "AVFrame to AVPacket passthrough", "innoHeim/Rsupport Screen Capture Codec", "DirectDraw Surface image decoder", "DPX (Digital Picture Exchange) image", "GIF (Graphics Interchange Format)", "PGMYUV (Portable GrayMap YUV) image", "PNG (Portable Network Graphics) image", "Renderware TXD (TeXture Dictionary) image", "Windows Media Video 9 Image v2", "APNG (Animated Portable Network Graphics) image", "PCM signed 16-bit little-endian", "PCM unsigned 16-bit little-endian", "PCM unsigned 16-bit big-endian", "PCM signed 32-bit little-endian", "PCM unsigned 32-bit little-endian", "PCM unsigned 32-bit big-endian", "PCM signed 24-bit little-endian", "PCM unsigned 24-bit little-endian", "PCM unsigned 24-bit big-endian", "PCM D-Cinema audio signed 24-bit", "PCM signed 16-bit big-endian planar", "PCM signed 16-bit little-endian planar", "PCM signed 24-bit little-endian planar", "PCM signed 32-bit little-endian planar", "PCM signed 20|24-bit big-endian", "PCM 32-bit floating point big-endian", "PCM 32-bit floating point little-endian", "PCM 64-bit floating point big-endian", "PCM 64-bit floating point little-endian", "PCM signed 16|20|24-bit big-endian for Blu-ray media", "PCM signed 20-bit little-endian planar", "ADPCM Sound Blaster Pro 2.6-bit", "ADPCM Nintendo THP (Little-Endian)", "ADPCM IMA Electronic Arts SEAD", "ADPCM IMA Electronic Arts EACS", "ADPCM Electronic Arts Maxis CDROM XA", "AMR-NB (Adaptive Multi-Rate NarrowBand)", "AMR-WB (Adaptive Multi-Rate WideBand)", "MACE (Macintosh Audio Compression/Expansion) 3:1", "MACE (Macintosh Audio Compression/Expansion) 6:1", "FLAC (Free Lossless Audio Codec)", "ADU (Application Data Unit) MP3 (MPEG audio layer 3)", "Cook / Cooker / Gecko (RealAudio G2)", "Delphine Software International CIN audio", "MLP (Meridian Lossless Packing)", "ATRAC3 (Adaptive TRansform Acoustic Coding 3)", "Windows Media Audio 9 Professional", "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)", "MPEG-4 Audio Lossless Coding (ALS)", "ATRAC1 (Adaptive TRansform Acoustic Coding)", "Constrained Energy Lapped Transform (CELT)", "Digital Speech Standard - Standard Play mode (DSS SP)", "iLBC (Internet Low Bitrate Codec)", "Opus (Opus Interactive Audio Codec)", "TAK (Tom's lossless Audio Kompressor)", "Amazing Studio Packed Animation File Audio", "EVRC (Enhanced Variable Rate Codec)", "4GV (Fourth Generation Vocoder)", "DSD (Direct Stream Digital), least significant bit first", "DSD (Direct Stream Digital), most significant bit first", "DSD (Direct Stream Digital), least significant bit first, planar", "DSD (Direct Stream Digital), most significant bit first, planar", "SSA (SubStation Alpha) subtitle", "HDMV Presentation Graphic Stream subtitles", "SubRip subtitle with embedded timing", "PJS (Phoenix Japanimation Society) subtitle", "SMPTE 336M Key-Length-Value (KLV) metadata", "js_subband_start %d is too large\n", "different number of samples per channel!\n", "js_vlc_bits = %d, only >= %d and <= 6 allowed!\n", "Too many subpackets %d for channels %d\n", "subpacket %i Joint-stereo VLC used.\n", "MDCT initialized, order = %d.\n", "Invalid quantizer %d at position %d, outside [-63, 63] range\n", "frame subpacket size total > avctx->block_align!\n", "subpacket[%i] size %i js %i %i block_align %i\n", "Subband sample buffer overflow\n", "Invalid XBR bit allocation index\n", "Invalid number of bits for XBR scale factor index\n", "Invalid XBR scale factor index\n", "Failed to decode block code(s)\n", "Invalid joint scale factor code book\n", "Invalid joint scale factor index\n", "Invalid number of primary audio channels (%d) for audio channel arrangement (%d)\n", "Invalid XXCH channel set header checksum\n", "Invalid XXCH speaker layout mask (%#x)\n", "XXCH speaker layout mask (%#x) overlaps with core (%#x)\n", "Invalid XXCH downmix scale index (%d)\n", "Invalid XXCH downmix channel mapping mask (%#x)\n", "Invalid XXCH downmix coefficient index (%d)\n", "Invalid subband activity count\n", "Invalid joint intensity coding index\n", "Invalid scale factor code book\n", "Invalid bit allocation quantizer select\n", "Invalid LFE scale factor index\n", "Read past end of XXCH channel set header\n", "Invalid XXCH frame header checksum\n", "Invalid number of bits for XXCH speaker mask (%d)\n", "XXCH core speaker activity mask (%#x) disagrees with core (%#x)\n", "Read past end of XXCH frame header\n", "Read past end of XXCH channel set\n", "Invalid X96 channel set header checksum\n", "Invalid X96 subband start index (%d)\n", "Invalid X96 subband activity count (%d)\n", "Invalid X96 joint intensity coding index\n", "Invalid X96 scale factor code book\n", "Invalid X96 bit allocation index\n", "Invalid X96 joint scale factor code book\n", "Read past end of X96 channel set header\n", "Deficit samples are not supported\n", "Unsupported number of PCM sample blocks (%d)\n", "Invalid core frame size (%d bytes)\n", "Unsupported audio channel arrangement (%d)\n", "Invalid core audio sampling frequency\n", "Invalid low frequency effects flag\n", "Invalid source PCM resolution\n", "Invalid auxiliary data sync word\n", "Invalid primary channel set downmix type\n", "Invalid downmix coefficient index\n", "Invalid auxiliary data checksum\n", "Working around excessive core frame size (%d > %d)\n", "XCH with Cs speaker already present\n", "Invalid XBR frame header checksum\n", "Invalid number of active XBR subbands (%d)\n", "Invalid X96 frame header checksum\n", "Read past end of XBR frame header\n", "Read past end of XBR channel set\n", "Read past end of X96 frame header\n", "Read past end of X96 channel set\n", "Fixed point mode doesn't support LFF=1\n", "Packet too short for EXSS frame\n", "Speaker mask disabled yet there are remapping sets\n", "Invalid speaker layout mask for mixing configuration\n", "Read past end of EXSS asset descriptor\n", "Invalid extension size in EXSS asset descriptor\n", "Invalid isolated sample location\n", "Read past end of XLL band data\n", "Invalid XLL common header checksum\n", "Invalid XLL frame size (%d bytes)\n", "Too many segments per XLL frame\n", "Too few samples per XLL segment\n", "Too many samples per XLL segment\n", "Too many samples per XLL frame\n", "Invalid XLL sub-header checksum\n", "Invalid PCM bit resolution for XLL channel set (%d > %d)\n", "XLL sampling frequency modifier", "The first (and only) XLL channel set must be primary\n", "Invalid XLL primary channel set downmix type\n", "XLL channel set outside of hierarchy", "Invalid XLL downmix scale index\n", "Invalid XLL downmix coefficient index\n", "Custom XLL channel to speaker mapping", "Different XLL audio characteristics", "Invalid XLL original channel order\n", "Invalid XLL adaptive predicition order\n", "Invalid XLL reflection coefficient index\n", "LSB section missing with non-zero LSB width\n", "Invalid NAVI segment size (%d bytes)\n", "Read past end of XLL common header\n", "Read past end of XLL sub-header\n", "Residual encoded channels are present without core\n", "Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\n", "Number of samples per frame mismatch between core (%d) and XLL (%d)\n", "Residual encoded channel (%d) references unavailable core channel\n", "Invalid request_channel_layout\n", "((ch_mask & (DCA_SPEAKER_MASK_L | DCA_SPEAKER_MASK_R)) == (DCA_SPEAKER_MASK_L | DCA_SPEAKER_MASK_R))", "Decode core only without extensions", "Stream is old and may not work\n", "Stream may have unhandled features\n", "Dimensions must be an integer multiple of the chroma subsampling\n", "Unsupported picture coding mode %d", "internal error, slice end before start\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "Invalid TIFF tag type 0 found for %s with size %d\n", "invalid sample size code (%d)\n", "broken stream, invalid padding\n", "sample/frame number invalid; utf8 fscked\n", "extradata contains %d bytes too many.\n", "sample rate change detected in adjacent frames\n", "bits per sample change detected in adjacent frames\n", "blocking strategy change detected in adjacent frames\n", "number of channels change detected in adjacent frames\n", "sample/frame number mismatch in adjacent frames\n", "crc check failed from offset %i (frame %lld) to %i (frame %lld)\n", "couldn't reallocate wrap buffer of size %d", "couldn't allocate FLACHeaderMarker\n", "couldn't allocate link_penalty\n", "dropping low score %i frame header from offset %i to %i\n", "couldn't reallocate buffer of size %td\n", "find_new_headers couldn't allocate FLAC header\n", "s->flac_stream_info.max_blocksize", "illegal residual coding method %d\n", "invalid rice order: %i blocksize %i\n", "invalid predictor order: %i > %i\n", "skipping flac header packet 1\n", "bps not found in STREAMINFO or frame header\n", "switching bps mid-stream is not supported\n", "sample rate not found in STREAMINFO or frame header\n", "Invalid number of wasted bits > available bits (%d) - left=%d\n", "qlevel %d not supported, maybe buggy stream\n", "emulate old buggy lavc behavior", "h->mtype < (sizeof(ff_h261_mtype_map) / sizeof((ff_h261_mtype_map)[0]))", "s->current_picture.f->pict_type == s->current_picture_ptr->f->pict_type", "s->current_picture.f->pict_type == s->pict_type", "discarding %d junk bits at end, next would be %X\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "this codec does not support truncated bitstreams\n", "Discarding excessive bitstream in packed xvid\n", "Reverting picture dimensions change due to header decoding failure\n", "Reference not available for error concealing\n", "Increasing reorder buffer to %d\n", "top block unavailable for requested intra4x4 mode %d at %d %d\n", "left block unavailable for requested intra4x4 mode %d at %d %d\n", "out of range intra chroma pred mode at %d %d\n", "top block unavailable for requested intra mode at %d %d\n", "left block unavailable for requested intra mode at %d %d\n", "AVC: Consumed only %d bytes instead of %d\n", "Ignoring NAL %d in global header/extradata\n", "invalid mixed IDR / non IDR frames cannot be decoded in slice multithreading mode\n", "SPS decoding failure, trying again with the complete NAL\n", "next_avc - buf_index + consumed == nalsize", "Unknown NAL code: %d (%d bits)\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "Duplicating field %d to fill missing\n", "luma_log2_weight_denom %d is out of range\n", "chroma_log2_weight_denom %d is out of range\n", "reference overflow %u > %u or %u > %u\n", "Error resilience with slice threads is enabled. It is unsafe and unsupported and may crash. Use it at your own risk\n", "Enable error resilience on damaged frames (unsafe)", "overflow in decode_cabac_mb_mvd\n", "cabac decode of qscale diff failed at %d %d\n", "corrupted macroblock %d %d (total_coeff=%d)\n", "negative number of zero coeffs at %d %d\n", "offset == (sizeof(coeff_token_vlc_tables) / sizeof((coeff_token_vlc_tables)[0]))", "mb_type %d in %c slice too large at %d %d\n", "Not enough data for an intra PCM block.\n", "B sub_mb_type %u out of range at %d %d\n", "P sub_mb_type %u out of range at %d %d\n", "dquant out of range (%d) at %d %d\n", "Too big extradata size, corrupted stream or invalid MP4/AVCC bitstream\n", "Packet header is not contained in global extradata, corrupted stream or invalid MP4/AVCC bitstream\n", "Warning: SPS NALU missing or invalid. The resulting stream may not play.\n", "Warning: PPS NALU missing or invalid. The resulting stream may not play.\n", "SPS not present in the stream, nor in AVCC, stream may be unreadable\n", "PPS not present in the stream, nor in AVCC, stream may be unreadable\n", "AVC-parser: nal length size invalid\n", "AVC-parser: nal size %d remaining %d\n", "non-existing PPS %u referenced\n", "non-existing SPS %u referenced\n", "illegal reordering_of_pic_nums_idc %d\n", "illegal memory management control operation %d\n", "missing picture in access unit with size %d\n", "hardware accelerator failed to decode picture\n", "Truncating likely oversized SPS\n", "separate color planes are not supported\n", "Different chroma and luma bit depth", "illegal bit depth value (%d, %d)\n", "log2_max_frame_num_minus4 out of range (0-12): %d\n", "log2_max_poc_lsb (%d) is out of range\n", "discarding sps cropping, original values are l:%d r:%d t:%d b:%d\n", "Reducing left cropping to %d chroma samples to preserve alignment.\n", "crop values invalid %d %d %d %d / %d %d\n", "time_scale/num_units_in_tick invalid or unsupported (%u/%u)\n", "Clipping illegal num_reorder_frames %d\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %d/%d b%d reo:%d\n", "Truncating likely oversized PPS\n", "Unimplemented luma bit depth=%d\n", "Current profile doesn't provide more RBSP data in PPS, skipping\n", "pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s\n", "illegal modification_of_pic_nums_idc %u\n", "Missing reference picture, default is %d\n", "av_buffer_get_ref_count(sl->ref_list[list][index].parent->f->buf[0]) > 0", "Discarding mismatching reference\n", "reference picture missing during reorder\n", "MMCO opcode [%d, %d] at %d mismatches between slices\n", "Inconsistent MMCO state between slices [%d, %d]\n", "mmco: unref short %d count %d\n", "mmco: cannot assign current picture to short and long at the same time\n", "mmco: cannot assign current picture to 2 long term references\n", "illegal short term reference assignment for second field in complementary field pair (first field is long term)\n", "illegal short term buffer state detected\n", "number of reference frames (%d+%d) exceeds max (%d; probably corrupt input), discarding one\n", "illegal long ref in memory management control operation %d\n", "SEI type %d size %d truncated at %d\n", "non-existing SPS %d referenced in buffering period\n", "Green Metadata Info SEI message\n", "green_metadata_type                            = %d\n", "green_metadata_period_type                     = %d\n", "green_metadata_num_seconds                     = %d\n", "green_metadata_num_pictures                    = %d\n", "SEI GREEN Complexity Metrics                   = %f %f %f %f\n", "xsd_metric_type                                = %d\n", "xsd_metric_value                               = %f\n", "VDPAU decoding does not support video colorspace.\n", "too many threads/slices %d, reducing to %d\n", "Attempt to start a frame outside SETUP state\n", "h->block_offset[15] == (4 * ((scan8[15] - scan8[0]) & 7) << h->pixel_shift) + 4 * sl->linesize * ((scan8[15] - scan8[0]) >> 3)", "Slice overlaps with next at %d\n", "error while decoding MB %d %d, bytestream %td\n", "error while decoding MB %d %d\n", "h264_slice_header_init() failed", "Cannot decode multiple access units as slice threads\n", "slice type %d too large at %d\n", "A non-intra slice in an IDR NAL unit.\n", "PPS change from %d to %d forbidden\n", "SPS changed in the middle of the frame\n", "Delayed frames seen. Reenabling low delay requires a codec flush.\n", "h->sps.crop_right + h->sps.crop_left < (unsigned)h->width", "h->sps.crop_top + h->sps.crop_bottom < (unsigned)h->height", "Invalid cropped dimensions: %dx%d.\n", "Ignoring cropping information.\n", "changing width %d -> %d / height %d -> %d on slice %d\n", "Reinit context to %dx%d, pix_fmt: %s\n", "h264_slice_header_init() failed\n", "Cannot (re-)initialize context during parallel decoding.\n", "Frame num change from %d to %d\n", "This stream was generated by a broken encoder, invalid 8x8 inference\n", "Changing field mode (%d -> %d) between slices is not allowed\n", "unset cur_pic_ptr on slice %d\n", "Invalid field mode combination %d/%d\n", "Found reference and non-reference fields in the same frame, which", "deblocking_filter_idc %u out of range\n", "deblocking filter parameters %d %d out of range\n", "Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\nTo parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\nSetting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding but will generate non-standard-compliant output.\n", "Deblocking switched inside frame.\n", "Possibly too many slices (%d >= %d), increase MAX_SLICES and recompile if there are artifacts\n", "slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n", "context_count && h->slice_ctx[context_count - 1].mb_y < h->mb_height", "The cu_qp_delta %d is outside the valid range [%d, %d].\n", "cu_chroma_qp_offset_idx not yet tested.\n", "Invalid slice segment address: %u.\n", "Inter slices in an IRAP frame.\n", "Ignoring POC change between slices: %d -> %d\n", "Zero refs for a frame with P or B slices.\n", "Invalid collocated_ref_idx: %d.\n", "luma_log2_weight_denom %d is invalid\n", "Invalid number of merging MVP candidates: %d.\n", "Independent slice segment missing.\n", "num_entry_point_offsets %d is invalid\n", "too many slice_header_extension_data_bytes\n", "The slice_qp %d is outside the valid range [%d, 51].\n", "Overread slice header by %d bits\n", "Error splitting the input into NAL units.\n", "Error constructing the frame RPS.\n", "r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f)\n", "min_luminance=%f, max_luminance=%f\n", "First slice in a frame missing.\n", "Non-matching NAL types of the VCL NALUs: %d %d\n", "Error constructing the reference lists for the current slice.\n", "WPP ctb addresses are wrong (%d %d %d %d)\n", "entry_point_offset table is corrupted\n", "Invalid NAL unit size in extradata.\n", "Decoding nal unit %d %d from hvcC failed\n", "Verifying checksum for frame with POC %d: ", "mismatching checksum of plane %d - ", "Previous slice segment missing\n", "HEVC (High Efficiency Video Coding)", "Apply default display window from VUI", "stricly apply default display window size", "nal->skipped_bytes_pos_size >= nal->skipped_bytes", "nal_unit_type: %d(%s), nuh_layer_id: %d, temporal_id: %d\n", "Invalid NAL unit %d, skipping.\n", "missing picture in access unit\n", "!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)", "Main Still Picture profile bitstream\n", "Range Extension profile bitstream\n", "Not enough data for sublayer %i level_idc\n", "PTL information for sublayer %i too short\n", "Invalid delta in scaling list data: %d.\n", "Invalid default display window\n", "discarding vui default display window, original values are l:%u r:%u t:%u b:%u\n", "Strange VUI timing information, retrying...\n", "Invalid value of delta_idx in slice header RPS: %d > %d.\n", "Invalid value of abs_delta_rps: %d\n", "Too many refs in a short term RPS.\n", "vps_reserved_three_2bits is not three\n", "vps_reserved_ffff_16bits is not 0xffff\n", "vps_max_sub_layers out of range: %d\n", "vps_max_dec_pic_buffering_minus1 out of range: %d\n", "vps_max_num_reorder_pics out of range: %d\n", "too many layer_id_included_flags\n", "vps_num_hrd_parameters %d is invalid\n", "sps_max_sub_layers out of range: %d\n", "chroma_format_idc %d is invalid\n", "discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\n", "Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\n", "4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n", "chroma_format_idc is %d, depth is %d", "log2_max_pic_order_cnt_lsb_minus4 out range: %d\n", "sps_max_dec_pic_buffering_minus1 out of range: %d\n", "sps_max_num_reorder_pics out of range: %d\n", "Invalid value %d for log2_min_cb_size", "Invalid value %d for log2_diff_max_min_coding_block_size", "Invalid value for log2_min_tb_size", "Invalid value %d for log2_diff_max_min_transform_block_size", "PCM bit depth (%d) is greater than normal bit depth (%d)\n", "num_long_term_ref_pics_sps %d is out of range.\n", "extended_precision_processing_flag not yet implemented\n", "high_precision_offsets_enabled_flag not yet implemented\n", "cabac_bypass_alignment_enabled_flag not yet implemented\n", "Reducing left output window to %d chroma samples to preserve alignment.\n", "Invalid visible frame dimensions: %dx%d.\n", "Displaying the whole video surface.\n", "log2_ctb_size %d differs from the bounds of any known profile\n", "Invalid coded frame dimensions.\n", "max_transform_hierarchy_depth_inter out of range: %d\n", "max_transform_hierarchy_depth_intra out of range: %d\n", "max transform block size out of range: %d\n", "Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\n", "diff_cu_qp_delta_depth %d is invalid\n", "pps_cb_qp_offset out of range: %d\n", "pps_cr_qp_offset out of range: %d\n", "num_tile_columns_minus1 out of range: %d\n", "num_tile_rows_minus1 out of range: %d\n", "pps_beta_offset_div2 out of range: %d\n", "pps_tc_offset_div2 out of range: %d\n", "log2_parallel_merge_level_minus2 out of range: %d\n", "chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n", "cb_qp_offset_list not tested yet.\n", "!frame->hwaccel_picture_private", "Error allocating frame, DPB full.\n", "Could not find ref with POC %d\n", "Duplicate POC in a sequence: %d.\n", "num_sps_ids_minus1 %d invalid\n", "active_parameter_set_id %d invalid\n", "Internal error, IDCT permutation not set\n", "Marker bit missing at %d of %d %s\n", "Intel H263 free format not supported\n", "table size %i does not match needed %i\n", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", "Header looks like RTP instead of H.263\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "rectangular slices not supported\n", "unordered slices not supported\n", "internal error in cmp function selection\n", "static_size <= (sizeof(table) / sizeof((table)[0]))", "hardware accelerator failed to decode first field\n", "intra matrix specifies invalid DC quantizer %d, ignoring\n", "invalid mb type in I Frame at %d %d\n", "invalid mb type in P Frame at %d %d\n", "invalid mb type in B Frame at %d %d\n", "after concealment_motion_vectors", "MT_DMV in progressive_sequence\n", "qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n", "Invalid MXF data found in video stream\n", "skipped MB in I frame at %d %d\n", "Invalid horizontal or vertical size value.\n", "aspect ratio has forbidden 0 value\n", "frame_rate_index %d is invalid\n", "vbv buffer: %d, bitrate:%lld, aspect_ratio_info: %d \n", "ignoring SEQ_START_CODE after %X\n", "ignoring extra picture following a frame-picture\n", "Invalid frame dimensions %dx%d.\n", "profile: %d, level: %d ps: %d cf:%d vbv buffer: %d, bitrate:%lld\n", "Missing picture start code, guessing missing values\n", "ignoring pic cod ext after %X\n", "GOP (%s) closed_gop=%d broken_link=%d\n", "ignoring GOP_START_CODE after %X\n", "interlaced frame in progressive sequence, ignoring\n", "picture_structure %d invalid, ignoring\n", "current_picture not initialized\n", "mpeg_decode_postinit() failure\n", "FFmpeg v%d.%d.%d / libavcodec build: %d", "low_delay flag set incorrectly, clearing it\n", "time_increment_bits %d is invalid in relation to the current bitstream, this is likely caused by a missing VOL header\n", "time_increment_bits set to %d bits, based on bitstream analysis\n", "sprite_brightness_change not supported\n", "Error, header damaged or not MPEG4 header (qscale=0)\n", "Error, header damaged or not MPEG4 header (f_code=0)\n", "Error, header damaged or not MPEG4 header (b_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d time:%lld tincr:%d\n", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "texture corrupted at %d %d %d\n", "illegal mb_num in video packet (%d %d) \n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "after first_half_vbv_buffer_size", "after first_half_vbv_occupancy", "after latter_half_vbv_occupancy", "only rectangular vol supported\n", "before time_increment_resolution", "MPEG4 OBMC not supported (very likely buggy encoder)\n", "insufficient data for custom matrix\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "reduced resolution VOP not supported\n", "tb %d/%d, tincrbits:%d, qp_prec:%d, ps:%d,  %s%s%s%s\n", "Video uses a non-standard and wasteful way to store B-frames ('packed B-frames'). Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n", "Interlaced error concealment is not fully implemented\n", "libavcodec/mpegaudiodec_template.c", "offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))", "Codec extradata missing or too short.\n", "Invalid channel config number.\n", "overread, skip %d enddists: %d %d\n", "incorrect frame size - multiple frames in buffer?\n", "Error while decoding MPEG audio frame.\n", "Frame size smaller than header size\n", "frame channel count exceeds codec channel count\n", "failed to decode all channels\n", "Image too small, temporary buffers cannot function\n", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (stride changed)\n", "get_buffer() failed (uv stride mismatch)\n", "get_buffer() failed to allocate context scratch buffers.\n", "Internal error, picture buffer overflow\n", "failed to allocate context scratch buffers.\n", "decoding to AV_PIX_FMT_NONE is not supported.\n", "too many threads/slices (%d), reducing to %d\n", "!s->picture || s->picture != s1->picture", "Failed to allocate context scratch buffers.\n", "Context scratch buffers could not be allocated due to unknown size.\n", "allocating dummy last picture for B frame\n", "warning: first frame is no keyframe\n", "allocate dummy last picture for field based first keyframe\n", "s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f->buf[0])", "Adding %d MVs info to frame %d\n", "ref->size >= offset + s->mb_stride * ((f->height+15)/16)", "MPEG motion vector out of boundary (%d %d)\n", "I frame too long, ignoring ext header\n", "qscale:%d rlc:%d rl:%d dc:%d mbrl:%d slice:%d   \n", "skip:%d rl:%d rlc:%d dc:%d mv:%d mbrl:%d qp:%d   \n", "dc overflow- block: %d qscale: %d//\n", "\nerror while decoding block: %d x %d (%d)\n", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "use 1/4-pel motion compensation", "use internal 2-pass ratecontrol in first  pass mode", "use internal 2-pass ratecontrol in second pass mode", "error[?] variables will be set during encoding", "Input bitstream might be randomly truncated", "normalize adaptive quantization", "place global headers in extradata instead of every keyframe", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "Output even potentially corrupted frames", "allow non-spec-compliant speedup tricks", "ignore cropping information from sps", "place global headers at every keyframe instead of in extradata", "Frame data might be split into multiple chunks", "Show all frames before the first keyframe", "export motion vectors through frame side data", "do not skip samples and export skip information as frame side data", "zero motion estimation (fastest)", "full motion estimation (slowest)", "esa motion estimation (alias for full)", "diamond motion estimation (alias for EPZS)", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "video quantizer scale blur (VBR)", "minimum video quantizer scale (VBR)", "maximum video quantizer scale (VBR)", "maximum difference between the quantizer scales (VBR)", "set maximum number of B frames between non-B-frames", "QP factor between P- and B-frames", "strategy to choose between I/P/B-frames", "work around not autodetected encoder bugs", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "(autodetected if FOURCC == UMP4)", "illegal VLC bug (autodetected per FOURCC)", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "work around various bugs in Microsoft's broken decoders", "how strictly to follow the standards", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "allow non-standardized experimental things", "QP offset between P- and B-frames", "detect bitstream specification deviations", "detect improper bitstream length", "abort decoding on minor error detection", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "consider all spec non compliancies as errors", "consider things that a sane encoder should not do as an error", "use MPEG quantizers instead of H.263", "deprecated, use encoder private options instead", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "set ratecontrol buffer size (in bits)", "QP factor between P- and I-frames", "QP offset between P- and I-frames", "compresses bright areas stronger than medium ones", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "set error concealment strategy", "iterative motion vector (MV) search (slow)", "use strong deblock filter for damaged MBs", "favor predicting from the previous frame", "per-block quantization parameter (QP)", "memory management control operations (H.264)", "visualize quantization parameter (QP), lower QP are tinted greener", "visualize motion vectors (MVs) (deprecated)", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "interlaced DCT compare function", "diamond type & size for motion estimation", "amount of motion predictors from the previous frame", "pre motion estimation compare function", "sum of absolute differences, fast", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "sum of absolute vertical differences", "sum of squared vertical differences", "noise preserving sum of squared differences", "diamond type & size for motion estimation pre-pass", "sub-pel motion estimation quality", "limit motion vectors range (1023 for DivX player)", "variable length coder / Huffman coder", "macroblock decision algorithm (high quality mode)", "number of bits which should be loaded into the rc buffer before decoding starts", "autodetect a suitable number of threads to use", "number of macroblock rows at the top which are skipped", "number of macroblock rows at the bottom which are skipped", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "minimum macroblock Lagrange factor (VBR)", "maximum macroblock Lagrange factor (VBR)", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip loop filtering process for the selected frames", "skip IDCT/dequantization for the selected frames", "skip decoding for the selected frames", "discard all non-reference frames", "discard all bidirectional frames", "discard all frames except keyframes", "discard all frames except I frames", "refine the two motion vectors used in bidirectional macroblocks", "downscale frames for dynamic B-frame decision", "minimum interval between IDR-frames", "reference frames to consider for motion compensation", "rate-distortion optimal quantization", "multiplied by qscale for each frame and added to scene_change_score", "adjust sensitivity of b_frame_strategy 1", "GOP timecode frame start number, in non-drop-frame format", "color transfer characteristics", "set the number of slices, used in parallelized encoding", "sample format audio decoders should prefer", "set input text subtitles character encoding", "set input text subtitles character encoding mode", "set information dump field separator", "List of decoders that are allowed to be used", "Failed to reallocate parser buffer to %d\n", "unsupported sample depth (%d)\n", "reserved channel configuration (%d)\n", "pcm_dvd_parse_header: header = %02x%02x%02x\n", "PCM DVD unsupported sample depth %i\n", "block_size has changed %d != %d\n", "PCM signed 16|20|24-bit big-endian for DVD media", "Invalid PCM packet, data has size %d but at least a size of %d was expected\n", "Basic Animated Texture Profile", "Advanced Real Time Simple Profile", "Advanced Scalable Texture Profile", "JPEG 2000 codestream restriction 0", "JPEG 2000 codestream restriction 1", "JPEG 2000 no codestream restrictions", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "thread_release_buffer called on pic %p\n", "p->thread_count == avctx->thread_count", "Frame too small (%d bytes). Truncated file?\n", "Error! Input buffer is too small [%d<%d]\n", "Extradata is not groovy, dude\n", "Invalid coding parameters %d Hz %d ch\n", "Wrong packet's breath smells of wrong data!\n", "Wrong packet tails are wrong!\n", "too short packets are too short!\n", "Decoder's stomach is crying, it ate too many samples\n", "Sir, I got carsick in your office. Not decoding the rest of packet.\n", "avctx->bits_per_coded_sample == 1", "Invalid buffer size, packet size %d < expected frame_size %d\n", "Resampling with input channels greater than %d is unsupported.\n", "Unsupported audio resampling. Allowed output channels for %d input channel%s", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Audio sample format conversion failed\n", "attempting to change resolution to %dx%d\n", "messed up order, possible from seeking? skipping current b frame\n", "num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n", "s->pict_type != AV_PICTURE_TYPE_B || !s->low_delay", "Insufficient extradata - need at least %d bytes, got %d\n", "Incorrect intra prediction code\n", "Incorrect intra prediction mode\n", "First slice header is incorrect\n", "Invalid decoder state: B-frame without reference data.\n", "New frame but still %d MB left.\n", "Decoder needs full frames in frame multithreading mode (start MB is %d).\n", "Incorrect or unknown slice header\n", "Slice indicates MB offset %d, got %d\n", "marking unfished frame as finished\n", "Failed to set dimensions %d %d\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "PARAM_CHANGE side data too small.\n", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "Unable to get pixel format descriptor for format %s\n", "default_get_buffer called on pic %p\n", "default_get_buffer called on frame %p", "Inconsistent channel configuration.\n", "video_get_buffer: image parameters invalid\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %lld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %lld)\n", "Failed to allocate packet of size %lld\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "Provided packet is too small, needs to be %d\n", "AVFrame.width or height is not set\n", "start_display_time must be 0.\n", "Error applying parameter changes.\n", "!picture->extended_data || picture->extended_data == picture->data", "invalid packet: NULL data, size != 0\n", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "Could not update timestamps for discarded samples.\n", "Invalid media type for subtitles\n", "requesting subtitles recoding without iconv", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "Codec 0x%x is not in the full list.\n", "--prefix=/Users/Ricky/Downloads/ffmpeg-3.0.1/dist/x86 --disable-shared --enable-static --disable-doc --disable-programs --disable-everything --disable-avdevice --disable-avfilter --disable-doc --disable-symver --enable-decoder=aac --enable-decoder=aac_latm --enable-decoder=ac3 --enable-decoder=eac3 --enable-decoder=ape --enable-decoder=alac --enable-decoder=dca --enable-decoder=flac --enable-decoder=vorbis --enable-decoder=ra_144 --enable-decoder=ra_288 --enable-decoder=ralf --enable-decoder=cook --enable-decoder=pcm_f64le --enable-decoder=pcm_lxf --enable-decoder=pcm_mulaw --enable-decoder=pcm_s16be --enable-decoder=pcm_s16be_planar --enable-decoder=pcm_s16le --enable-decoder=pcm_s16le_planar --enable-decoder=pcm_s24be --enable-decoder=pcm_s24daud --enable-decoder=pcm_s24le --enable-decoder=pcm_s24le_planar --enable-decoder=pcm_s32be --enable-decoder=mp1 --enable-decoder=pcm_s32le --enable-decoder=mp1float --enable-decoder=pcm_s32le_planar --enable-decoder=mp2 --enable-decoder=pcm_s8 --enable-decoder=mp2float --enable-decoder=pcm_s8_planar --enable-decoder=mp3 --enable-decoder=pcm_u16be --enable-decoder=mp3adu --enable-decoder=pcm_u16le --enable-decoder=mp3adufloat --enable-decoder=pcm_u24be --enable-decoder=mp3float --enable-decoder=pcm_u24le --enable-decoder=mp3on4 --enable-decoder=pcm_u32be --enable-decoder=mp3on4float --enable-decoder=pcm_u32le --enable-decoder=pcm_u8 --enable-decoder=pcm_zork --enable-decoder=pcm_alaw --enable-decoder=pcm_bluray --enable-decoder=pcm_dvd --enable-decoder=pcm_f32be --enable-decoder=pcm_f32le --enable-decoder=pcm_f64be --enable-decoder=rawvideo --enable-decoder=mpeg4 --enable-decoder=hevc --enable-decoder=vc1 --enable-decoder=vp8 --enable-decoder=vp9 --enable-decoder=h261 --enable-decoder=h263 --enable-decoder=h263i --enable-decoder=h263p --enable-decoder=h264 --enable-decoder=h264_crystalhd --enable-decoder=h264_mmal --enable-decoder=h264_qsv --enable-decoder=h264_vda --enable-decoder=h264_vdpau --enable-decoder=mpeg1video --enable-decoder=mpeg2video --enable-decoder=mpegvideo --enable-decoder=msmpeg4_crystalhd --enable-decoder=msmpeg4v1 --enable-decoder=msmpeg4v2 --enable-decoder=msmpeg4v3 --enable-decoder=rv10 --enable-decoder=rv20 --enable-decoder=rv30 --enable-decoder=rv40 --enable-demuxer=m4v --enable-demuxer=mov --enable-demuxer=matroska --enable-demuxer=avi --enable-demuxer=asf --enable-demuxer=ogg --enable-demuxer=flv --enable-demuxer=rm --enable-demuxer=aac --enable-demuxer=ac3 --enable-demuxer=mp3 --enable-demuxer=mpegps --enable-demuxer=mpegts --enable-demuxer=mpegtsraw --enable-demuxer=mpegvideo --enable-demuxer=h261 --enable-demuxer=h263 --enable-demuxer=h264 --enable-demuxer=hevc --enable-demuxer=ape --enable-demuxer=pcm_alaw --enable-demuxer=pcm_f32be --enable-demuxer=pcm_f32le --enable-demuxer=pcm_f64be --enable-demuxer=pcm_f64le --enable-demuxer=pcm_mulaw --enable-demuxer=pcm_s16be --enable-demuxer=pcm_s16le --enable-demuxer=pcm_s24be --enable-demuxer=pcm_s24le --enable-demuxer=pcm_s32be --enable-demuxer=pcm_s32le --enable-demuxer=pcm_s8 --enable-demuxer=pcm_u16be --enable-demuxer=pcm_u16le --enable-demuxer=pcm_u24be --enable-demuxer=pcm_u24le --enable-demuxer=pcm_u32be --enable-demuxer=pcm_u32le --enable-demuxer=pcm_u8 --enable-demuxer=rawvideo --enable-demuxer=eac3 --enable-demuxer=flac --enable-demuxer=vc1 --enable-muxer=flv --enable-muxer=mp4 --enable-muxer=matroska --enable-parser=aac --enable-parser=mpegvideo --enable-parser=aac_latm --enable-parser=ac3 --enable-parser=flac --enable-parser=rv30 --enable-parser=h261 --enable-parser=rv40 --enable-parser=cook --enable-parser=h263 --enable-parser=dca --enable-parser=h264 --enable-parser=vc1 --enable-parser=hevc --enable-parser=vorbis --enable-parser=vp8 --enable-parser=mpeg4video --enable-parser=vp9 --enable-parser=mpegaudio --enable-protocol=file --enable-bsf=h264_mp4toannexb --cross-prefix=/Users/Ricky/Applications/android-ndk-r10e/toolchains/x86-4.8/prebuilt/darwin-x86_64/bin/i686-linux-android- --target-os=linux --arch=i686 --enable-cross-compile --sysroot=/Users/Ricky/Applications/android-ndk-r10e/platforms/android-9/arch-x86 --extra-cflags='-Os -fpic -fdiagnostics-color=auto ' --extra-ldflags= --disable-amd3dnow --disable-amd3dnowext", "libavcodec license: LGPL version 2.1 or later", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "Hardware accelerated decoding with frame threading is known to be unstable and its use is discouraged.\n", "Could not find an AVHWAccel for the pixel format: %s", "Ignoring experimental hwaccel: %s\n", "Insufficient thread locking. At least %d threads are calling avcodec_open2() at the same time right now.\n", "No lock manager is set, please see av_lockmgr_register()\n", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist '%s'\n", "Ignoring invalid width/height values\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "The 'vismv' option is deprecated, see the codecview filter instead.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "Specified bit depth %d not possible with the specified pixel formats depth %d\n", "Bitrate %lld is extremely low, maybe you mean %lldk\n", "ticks_per_frame %d too large for the timebase %d/%d.", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Specified channel layout '%s' is not supported\n", "WMV3 Complex Profile is not fully supported\n", "Only 4:2:0 chroma format supported\n", "Advanced Profile level %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, ChromaFormat=%i, Pulldown=%i, Interlace: %i\nTFCTRflag=%i, FINTERPflag=%i\n", "Progressive Segmented Frame mode: not supported (yet)\n", "Old interlaced mode is not supported\n", "LOOPFILTER shall not be enabled in Simple Profile\n", "FASTUVMC unavailable in Simple Profile\n", "Extended MVs unavailable in Simple Profile\n", "1 for reserved RES_TRANSTAB is forbidden\n", "RANGERED should be set to 0 in Simple Profile\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Profile %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, MultiRes=%i, FastUVMC=%i, Extended MV=%i\nRangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\nDQuant=%i, Quantizer mode=%i, Max B frames=%i\n", "Luma scaling is not supported, expect wrong picture\n", "Chroma scaling is not supported, expect wrong picture\n", "Entry point info:\nBrokenLink=%i, ClosedEntry=%i, PanscanFlag=%i\nRefDist=%i, Postproc=%i, FastUVMC=%i, ExtMV=%i\nDQuant=%i, VSTransform=%i, Overlap=%i, Qmode=%i\n", "MB MV Type plane encoding: Imode: %i, Invert: %i\n", "MB Skip plane encoding: Imode: %i, Invert: %i\n", "MB Direct Type plane encoding: Imode: %i, Invert: %i\n", "v->s.mb_height == v->s.height + 15 >> 4 || v->s.mb_height == (((v->s.height + 15 >> 4)+(2)-1)&~((2)-1))", "FIELDTX plane encoding: Imode: %i, Invert: %i\n", "ACPRED plane encoding: Imode: %i, Invert: %i\n", "CONDOVER plane encoding: Imode: %i, Invert: %i\n", "SKIPMB plane encoding: Imode: %i, Invert: %i\n", "MB Forward Type plane encoding: Imode: %i, Invert: %i\n", "Intensity compensation set for B picture\n", "Bits overconsumption: %i > %i\n", "Mixed field/frame direct mode not supported\n", "Bits overconsumption: %i > %i at %ix%i\n", "Mixed frame/field direct mode not supported\n", "Error in WVC1 interlaced frame\n", "Sprite decoder: expected I-frame\n", "Skipping B frame without reference frames\n", "parsing header for second field failed", "Slice %d starts beyond picture boundary (%d >= %d)\n", "first field slice count too large\n", "Extra data: %i bits left, value: %X\n", "Duplicate value found in floor 1 X coordinates\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "floor0 dec: booknumber too high!\n", " Vorbis id header packet corrupt (no vorbis signature). \n", " Vorbis id header packet corrupt (illegal blocksize). \n", " Vorbis id header packet corrupt (framing flag not set). \n", " Vorbis setup header packet corrupt (no vorbis signature). \n", " %u. Codebook setup data corrupt.\n", " %u. Codebook's dimension is invalid (%d).\n", " %u. Codebook has too many entries (%u).\n", " More codelengths than codes in codebook. \n", "Bug in codevector vector building code. \n", "Codebook lookup type not supported. \n", " Invalid code lengths while generating vlcs. \n", " Error generating vlc tables. \n", " Vorbis setup header packet corrupt (codebooks). \n", "Vorbis time domain transform data nonzero. \n", " Vorbis setup header packet corrupt (time domain transforms). \n", "floor_setup->data.t1.class_masterbook[j]", "A rangebits value of 0 is not compliant with the Vorbis I specification.\n", "Floor value is too large for blocksize: %u (%u)\n", "partition out of bounds: type, begin, end, size, blocksize: %u, %u, %u, %u, %u\n", "Other mappings than type 0 are not compliant with the Vorbis I specification. \n", "Square polar channel mapping with less than two channels is not compliant with the Vorbis I specification.\n", "%u. mapping setup data invalid.\n", "mapping_setup->submap_floor[j]", "mapping_setup->submap_residue[j]", " Vorbis setup header packet corrupt (framing flag). \n", " Vorbis setup header packet corrupt (floors). \n", " Vorbis setup header packet corrupt (residues). \n", " Vorbis setup header packet corrupt (mappings). \n", " Vorbis setup header packet corrupt (modes). \n", "Data packet before valid headers\n", "Invalid codebook in vorbis_floor_decode.\n", "Too many channels in vorbis_floor_decode.\n", "Invalid vlc code decoding %d channel.", " Invalid residue type while residue decode?! \n", "First header is not the id header.\n", "Third header is not the setup header.\n", "Insufficent data (%d) for header\n", "Header size larger than data provided\n", "Discarding interframe without a prior keyframe!\n", "Failed to allocate frame buffer %d\n", "RGB not supported in profile %d\n", "YUV 4:2:0 not supported in profile %d\n", "Profile %d color details reserved bit set\n", "Profile %d is not yet supported\n", "Not all references are available\n", "Ran out of memory during range coder init\n", "Ref pixfmt (%s) did not match current frame (%s)", "Invalid ref frame dimensions %dx%d for frame size %dx%d\n", "Invalid compressed header size\n", "Failed to initialize bitstream reader\n", "Failed to initialize decoder for %dx%d @ %d\n", "Requested reference %d not available\n", "Failed to allocate block buffers\n", "Invalid superframe packet size: %u frame size: %d\n", "raw ADTS AAC (Advanced Audio Coding)", "audio/aac,audio/aacp,audio/x-aac", "phdr->frame_size <= sizeof(buf3)", "Unsupported file version - %d.%02d\n", "Number of seek entries is less than number of frames: %zu vs. %u\n", "Decoding file - v%d.%02d, compression level %u\n", "Unsupported tag version. (>=%d)\n", "Non ASCII keys are not allowed\n", "Skip due to FRAME_HEADER_SIZE\n", "key:%d stream:%d seq:%d offset:%d replic_size:%d num:%X packet_property %X\n", "packet_replic_size %d is invalid\n", "unexpected packet_replic_size of %d\n", "packet_replic_size is invalid\n", "packet_frag_size is invalid (%d>%d-%d+%d)\n", "ff asf skip %d (unknown stream)\n", "skipping asf data pkt with fragment offset for stream:%d, expected:%d but got %d from pkt)\n", "freeing incomplete packet size %d, new %d\n", "Cannot append palette to packet\n", "new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n", "READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n", "packet fragment position invalid %u,%u not in %u\n", "pkt.size != ds_packet_size * ds_span (%d %d %d)\n", "offset + asf_st->ds_chunk_size <= asf_st->pkt.size", "idx + 1 <= asf_st->pkt.size / asf_st->ds_chunk_size", "ff asf bad header %x  at:%lld\n", "invalid packet_length %u at:%lld\n", "invalid packet header length %d for pktlen %u-%u at %lld\n", "packet: size=%d padsize=%d  left=%d\n", "asf->packet_size_left < FRAME_HEADER_SIZE || asf->packet_segments < 1", "Invalid attached picture size: %d.\n", "Unknown attached picture type: %d.\n", "Invalid attached picture data size: %d >= %d.\n", "Unknown attached picture mimetype: %s.\n", "Unsupported byte array in tag %s.\n", "Unsupported GUID value in tag %s.\n", "Unsupported value type %d in tag %s.\n", "%d stream %d name_len %2d type %d len %4d <%s>\n", "DRM protected stream detected, decoding will likely fail!\n", "Ext DRM protected stream detected, decoding will likely fail!\n", "ASF Extended Content Encryption", "gpos mismatch our pos=%llu, end=%lld\n", "i=%d, st->codec->codec_type:%d, asf->dar %d:%d sar=%d:%d\n", "pktnum:%d, pktct:%d  pts: %lld\n", "ASF (Advanced / Active Streaming Format)", "Don't try to resynchronize by looking for a certain optional start code", "Skipping foreign stream %d packet\n", "Invalid stream + prefix combination, assuming audio.\n", "best_ast->remaining <= best_ast->packet_size", "Failed to allocate data for palette\n", "dts:%lld offset:%lld %d/%d smpl_siz:%d base:%d st:%d size:%d\n", "Switching to NI mode, due to poor interleaving\n", "longs_pre_entry:%d index_type:%d entries_in_use:%d chunk_id:%X base:%16llX frame_num:%d\n", "Too deeply nested ODML indexes\n", "Failed to restore position after reading index\n", "%d: tag=0x%x flags=0x%x pos=0x%llx len=%d/", "Failed to find timestamp %lld in index %lld .. %lld\n", "fabs(av_q2d(st2->time_base) - ast2->scale / (double)ast2->rate) < av_q2d(st2->time_base) * 0.00000001", "This file has been generated by a totally broken muxer.\n", "pos:%llX %s: tag=%c%c%c%c size=0x%x\n", "%*3s%*[ ]%3s%*[ ]%2d%*[ ]%8s%*[ ]%4d", "scale/rate is %u/%u which is invalid. (This file has been generated by broken software.)\n", "crazy start time, iam scared, giving up\n", "Invalid sample_size %d at stream %d\n", "Invalid sample_size %d at stream %d setting it to 0\n", "File is truncated adjusting duration\n", "mov tag found in avi (fourcc %s)\n", "sample size (%d) != block align (%d)\n", "overriding invalid dshow_block_align of %d\n", "RIFF stream data tag type CASI (%u)", "RIFF stream data tag type Zora (%u)", "could not decoding EXIF data in stream header.\n", "Something went wrong during header parsing, I will ignore it and try to continue anyway.\n", "Non-interleaved AVI without index, switching to interleaved\n", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "No URL Protocols are registered. Missing call to av_register_all()?\n", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "Error parsing options string %s\n", "https protocol not found, recompile FFmpeg with openssl, gnutls,\nor securetransport enabled.\n", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "Protocol not on whitelist '%s'!\n", "Setting default whitelist '%s'\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || !strcmp(whitelist, e->value)", "List of protocols that are allowed to be used", "Invaid UTF8 sequence in avio_put_str16%s\n", "Failed to decrease buffer size\n", "Statistics: %d seeks, %d writeouts\n", "Statistics: %lld bytes read, %d seeks\n", "displaymatrix: rotation of %.2f degrees", "side by side (quincunx subsampling)", "quality factor: %d, pict_type: %c", "unknown side data type %d (%d bytes)", "truncate existing files on write", "set I/O operation maximum block size", "Could not read mimetype from an attached picture.\n", "Error reading attached picture description.\n", "Error reading attached picture data.\n", "Error parsing attached picture.\n", "error parsing VorbisComment metadata\n", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\n", "AMF_DATA_TYPE_STRING parsing failed\n", "Invalid keyframes object, skipping.\n", "Keyframe index parsing failed\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_OBJECT\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_MIXEDARRAY, found %d\n", "Open Broadcaster Software v0.%d", "type:%d, size:%d, last:%d, dts:%lld pos:%lld\n", "Found invalid index entries, clearing the index.\n", "Adjusting next position due to index mismatch\n", "Skipping flv packet: type %d, size %d, flags %d.\n", "%s stream discovered after head already parsed\n", "Negative cts, previous timestamps might be wrong.\n", "Allocate streams according to the onMetaData array", "Failed to update header with correct duration.\n", "Failed to update header with correct filesize.\n", "FLV only supports wideband (16kHz) Speex audio\n", "FLV only supports mono Speex audio\n", "FLV does not support sample rate %d, choose from (44100, 22050, 11025)\n", "Audio codec '%s' not compatible with FLV\n", "at most one video stream is supported in flv\n", "%s codec %s not compatible with flv\n", "Muxing VP6 in flv will produce flipped video on playback.\n", "at most one audio stream is supported in flv\n", "16-bit big-endian audio in flv is valid but most likely unplayable (hardware dependent); use s16le\n", "Subtitle codec '%s' for stream %d is not compatible with FLV\n", "Codec type '%s' for stream %d is not compatible with FLV\n", "AAC sequence header: %02x %02x.\n", "Codec %s is not supported in the official FLV specification,\n", "use vstrict=-1 / -strict -1 to use it anyway.\n", "Packets are not in the proper order with respect to DTS\n", "Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "Warning: Speex stream has more than 8 frames per packet. Adobe Flash Player cannot handle this!\n", "Too large packet with size %u >= %u\n", "Put AAC sequence header based on stream data", "Specified probe size value %u cannot be < %u\n", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "configurationVersion:                %u\n", "general_profile_space:               %u\n", "general_tier_flag:                   %u\n", "general_profile_idc:                 %u\n", "general_profile_compatibility_flags: 0x%08x\n", "general_constraint_indicator_flags:  0x%012llx\n", "general_level_idc:                   %u\n", "min_spatial_segmentation_idc:        %u\n", "parallelismType:                     %u\n", "chromaFormat:                        %u\n", "bitDepthLumaMinus8:                  %u\n", "bitDepthChromaMinus8:                %u\n", "avgFrameRate:                        %u\n", "constantFrameRate:                   %u\n", "numTemporalLayers:                   %u\n", "temporalIdNested:                    %u\n", "lengthSizeMinusOne:                  %u\n", "numOfArrays:                         %u\n", "array_completeness[%u]:               %u\n", "NAL_unit_type[%u]:                    %u\n", "numNalus[%u]:                         %u\n", "nalUnitLength[%u][%u]:                 %u\n", "Cannot read BOM value, input too short\n", "Error reading frame %s, skipped\n", "No AVFormatContext, skipped ID3 chapter data\n", "invalid extended header length", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to read compressed tag\n", "invalid frame id, assuming padding\n", "Error reading lyrics, skipped\n", "ID3v2.%d tag skipped, cannot handle %s\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "Error reading GEOB frame, data truncated.\n", "Lead artist/lead performer/soloist", "MPEG4 description: tag=0x%02x len=%d\n", "codec open in read_dec_config_descr\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "Skipping invalid tag with no TagName.\n", "Read error at pos. %llu (0x%llx)\n", "Invalid EBML number size tag 0x%02x at pos %llu (0x%llx)\n", "Compression size but no data in headerstrip\n", "Dropping apparently-broken index.\n", "Invalid stream %llu or size %u\n", "File is broken, keyframes not correctly marked!\n", "Corrupt int4 RM-style audio packet size\n", "Corrupt sipr RM-style audio packet size\n", "Corrupt generic RM-style audio packet size\n", "Error parsing a wavpack block.\n", "Invalid length 0x%llx > 0x%llx for syntax element %i\n", "File moves beyond max. allowed depth (%d)\n", "Too many level1 elements or circular seekheads.\n", "Max EBML element depth (%d) reached, cannot parse further.\n", "EBML header using unsupported features\n(EBML version %llu, doctype %s, doc version %llu)\n", "Unknown or unsupported track type %llu\n", "Invalid sample rate %f, defaulting to 8000 instead.\n", "Multiple combined encodings not supported", "Failed to decode codec private data\n", "Too large audio channel number %llu or bitdepth %llu. Skipping track.\n", "Unknown/unsupported AVCodecID %s.\n", "The tags at index %d refer to a non-existent attachment %lld.\n", "The tags at index %d refer to a non-existent chapter %lld.\n", "The tags at index %d refer to a non-existent track %lld.\n", "webm_dash_manifest_initialization_range", "webm_dash_manifest_track_number", "webm_dash_manifest_cluster_keyframe", "webm_dash_manifest_cue_timestamps", "audio/webm,audio/x-matroska,video/webm,video/x-matroska", "flag indicating that the input is a live file that only has the headers.", "Starting new cluster at offset %llu bytes, pts %lludts %llu\n", "tracknum>=0 && tracknum<num_tracks", "Invalid chapter start (%lld) or end (%lld).\n", "Error parsing AAC extradata, unable to determine samplerate.\n", "Raw RGB is not supported Natively in Matroska, you can use AVI or NUT or\nIf you would like to store it anyway using VFW mode, enable allow_raw_vfw (-allow_raw_vfw 1)\n", "Only VP8 or VP9 video and Vorbis or Opus audio and WebVTT subtitles are supported for WebM.\n", "The specified stereo mode is not valid.\n", "Subtitle codec %d is not supported.\n", "Only audio, video, and subtitles are supported for Matroska.\n", "Invalid extradata found, ALAC expects a 36-byte QuickTime atom.", "codec %s is not supported by this format\n", "No bmp codec tag found for codec %s\n", "No wav codec tag found for codec %s\n", "Writing block at offset %llu, size %d, pts %lld, dts %lld, duration %lld, keyframe %d\n", "Error stripping a WavPack packet.\n", "Can't write packet with unknown timestamp\n", "Starting new cluster due to timestamp\n", "Failed to open dynamic buffer\n", "Writing block at offset %llu, size %d, pts %lld, dts %lld, duration %lld, flags %d\n", "Could not write cached audio packet ret:%d\n", "Insufficient space reserved for cues: %d (needed: %lld).\n", "stream %d end duration = %llu\n", "Flushing cluster at offset %llu bytes\n", "The Matroska muxer does not yet support muxing %s\n", "Attachment stream %d has no filename tag.\n", "Attachment stream %d has no mimetype tag and it cannot be deduced from the codec id.\n", "Using %.16llx for attachment %d\n", "Reserve a given amount of space (in bytes) at the beginning of the file for the index (cues).", "Store at most the provided amount of bytes in a cluster. ", "Store at most the provided number of milliseconds in a cluster.", "Create a WebM file conforming to WebM DASH specification", "Track number for the DASH stream", "Write files assuming it is a live stream.", "Unknown MOV field order 0x%04x\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type: %08x '%.4s' parent:'%.4s' sz: %lld %lld %lld\n", "overread end of atom '%.4s' by %lld bytes\n", "Found duplicated MOOV Atom. Skipped it\n", "root atom offset 0x%llx: partial file\n", "read fragments, offset 0x%llx\n", "ISO: File Type Major Brand: %.4s\n", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %lld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %lld\n", "could not find corresponding trex\n", "could not find corresponding track id %d\n", "sample_count=%d, sample_duration=%d\n", "duration=%lld time=%lld rate=%f\n", "senc atom size %lld too small\n", "failed to read the auxiliary info", "unknown compression for cmov atom !\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "stream %d, sample %d, dts %lld\n", "stream has moof boxes, will look for a mfra\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "failed to seek back after looking for mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] error in drm blob decryption!\n", "unsupported color_parameter_type %s\n", "Unknown dref type 0x08%x size %d\n", "mov_update_dts_shift(): dts_shift set to %d\n", "found frag time %lld sc->dts_shift %d ctts.duration %d sc->time_offset %lld flags & MOV_TRUN_SAMPLE_CTS %d\n", "found frag time %lld, using it for dts\n", "AVIndex stream %d, sample %d, offset %llx, dts %lld, size %d, distance %d, keyframe %d\n", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "stream %d, timestamp %lld, sample %d\n", "The 'keys' atom with the invalid key count: %d\n", "The key# %d in meta has invalid size: %d\n", "Unhandled or malformed custom metadata of size %lld\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unexpected size %lld\n", "aclr not decoded - unable to add atom to extradata\n", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "stream %d, missing mandatory atoms, broken header\n", "multiple edit list entries, a/v desync might occur, patch welcome\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "Zero bytes per frame, but %d samples per frame", "AVIndex stream %d, chunk %d, offset %llx, dts %lld, size %d, duration %d\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "Invalid decryption key len %d expected %d\n", "ignoring stream duration which is shorter than chapters\n", "Forcing full parsing for mp3 stream\n", "Referenced QT chapter track not found\n", "stream %d, offset 0x%llx: partial file\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "no space for coordinates left (%d)\n", "The index of 'data' is out of range: %d >= %d.\n", "UDTA parsing failed retrying raw\n", "Failed to store the float32 number (%f) in string.\n", "tag \"%s\" value \"%s\" atom \"%.4s\" %d %lld\n", "sample_size = %d sample_count = %d\n", "Unsupported DTS audio channel layout", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "multiple fourcc not supported\n", "Concatenated H.264 or H.265 might not play correctly.\n", "size=%lld 4CC= %c%c%c%c/0x%08x codec_type=%d\n", "allow using absolute path when opening alias, this is a possible security issue", "Seek each stream individually to the to the closest point", "use mfra for fragment timestamps", "Export unrecognized metadata entries", "Secret bytes for Audible AAX files", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "The media decryption key (hex)", "Enable external track support.", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "Unknown hldr_type for %s / 0x%04X, writing dummy values\n", "PSP mode need one video and one audio stream\n", "Non-consecutive fragments, writing incorrect sidx\n", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "Could not locate DNxHD bit stream in vos_data\n", "Could not locate DNxHD bit stream, vos_data too small\n", "moov atom written before any packets, unable to write correct dvc1 atom. Set the delay_moov flag to fix this.\n", "gamma value unknown, unable to write gama atom\n", "Not writing 'gama' atom. Format is not MOV.\n", "color primaries unspecified, assuming bt709\n", "color primaries unspecified, assuming bt470bg\n", "color primaries unspecified, assuming smpte170\n", "color primaries unspecified, unable to assume anything\n", "track->mode == 0x02 || track->mode == 0x01", "Not writing 'colr' atom. Format is not MOV or MP4.\n", "not writing 'chan' tag due to lack of channel information\n", "reel_name length %llu is too large\n", "EDTS using dts:%lld cts:%d instead of dts:%lld cts:%lld tid:%d\n", "av_rescale_rnd(start_dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "Not writing any edit list even though one would have been required\n", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "Estimating the duration of the last packet in a fragment, consider setting the duration field in AVPacket instead.\n", "Unable to re-open %s output file for the second pass (faststart)\n", "Application provided duration: %lld / timestamp: %lld is out of range for mov/mp4 format\n", "Application provided duration: %lld is invalid\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Dropping invalid packet from start of the stream\n", "Multiple independent substreams", "Track %d starts with a nonzero dts %lld, while the moov already has been written. Set the delay_moov flag to handle this case.\n", "Starting second pass: moving the moov atom to the beginning of the file\n", "reserved_moov_size is too small, needed %lld additional\n", "Starting second pass: inserting sidx atoms\n", "No meaningful edit list will be written when using empty_moov without delay_moov\n", "Sample interleaving in fragments is mutually exclusive with omit_tfhd_offset and separate_moof\n", "muxer does not support non seekable output\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "Invalid encryption key len %d expected %d\n", "Invalid encryption kid len %d expected %d\n", "unsupported encryption scheme %s\n", "Warning, extension is not .m4a, .m4v nor  .m4b Quicktime/Ipod might not play the file\n", "unsupported height for dv codec\n", "%s rawvideo cannot be written to mov, output file will be unreadable\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "Resolution %dx%d too large for mov/mp4\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n", "track %d: muxing mp3 at %dhz is not standard in MP4\n", "%06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<meta name=\"creator\" content=\"%s\" />\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "maximum moov size so it can be placed at the begin", "Make the initial moov atom empty", "Write separate moof/mdat atoms for each track", "Flush fragments on caller requests", "Create a live smooth streaming feed (for pushing to a publishing point)", "Run a second pass to put the index (moov atom) at the beginning of the file", "Omit the base data offset in tfhd atoms", "Set the default-base-is-moof flag in tfhd atoms", "Write DASH compatible fragmented MP4", "Signal that the next fragment is discontinuous from earlier ones", "Delay writing the initial moov until the first fragment is cut, or until the first fragment flush", "Write a global sidx index at the start of the file", "Write colr atom (Experimental, may be renamed or changed, do not use from scripts)", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "Don't send RTCP sender reports", "Send RTCP BYE packets when finishing", "Number of lookahead entries for ISM files", "set timescale of all video tracks", "Fragment number of the next fragment", "Interleave samples within fragments (max number of consecutive samples, lower is tighter interleaving, but with more overhead)", "Configures the encryption scheme, allowed values are none, cenc-aes-ctr", "The media encryption key (hex)", "The media encryption key identifier (hex)", "CENC-AVC: remaining size %d smaller than nal length+type %d\n", "CENC-AVC: nal size %d remaining %d\n", "Unable to initialize hinting of stream %d\n", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "Cannot determine file size, skipping TOC table.\n", "Skipping %d bytes of junk at %lld.\n", "Further flags set but no bytes left\n", "%d: pts=%0.3f dts=%0.3f size=%d\n", "MPEG-PS (MPEG-2 Program Stream)", "max resync size reached, could not find sync byte\n", "All programs have pmt, headers found\n", "Continuity check failed for pid %d expected %d got %d\n", "cannot set stream info, codec is open\n", "stream=%d stream_type=%x pid=%x prog_reg_desc=%.4s\n", "pid=%x stream_type=%x probing\n", "Failed to allocate buffers for seekback\n", "score: %d, dvhs_score: %d, fec_score: %d \n", "Unable to seek back to the start\n", "start=%0.3f pcr=%0.3f incr=%d\n", "Could not detect TS packet size, defaulting to non-FEC/DVHS\n", "Tag %x length violation new length %d bytes remaining %d\n", "Maximum MP4 descriptor level exceeded\n", "DVB subtitles with multiple languages", "Opus in MPEG-TS - channel_config_code > 0x8", "sid=0x%x sec_num=%d/%d version=%d\n", "raw MPEG-TS (MPEG-2 Transport Stream)", "MPEG-TS (MPEG-2 Transport Stream)", "set size limit for looking up a new synchronization", "compute exact PCR for each transport stream packet", "output option carrying the raw packet size", "try to fix pts values of dvb teletext streams", "skip changing / adding streams / programs", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %lld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "pkt->size == ((-2147483647 - 1) / 3 * 2 + (int)sizeof(AVFrame))", "Delay between the first packet and last packet in the muxing queue is %lld > %lld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "New streams are not supposed to be added in between Ogg context save/restore operations.\n", "ogg page, unsupported version\n", "Changing stream parameters in multistream ogg", "failed to create or replace stream\n", "ogg_packet: idx=%d pstart=%d psize=%d segp=%d nsegs=%d\n", "Page at %lld is missing granule\n", "Broken file, %skeyframe not correctly marked.\n", "Header parsing failed for stream %d\n", "Headers mismatch for stream %d: expected %d received %d.\n", "Invalid timebase, assuming 30 FPS\n", "Too large gpshift %d (>= 32).\n", "Invalid number of planes %d in daala pixel format map.\n", "Unsupported pixel format - %i %i\n", "Last packet was truncated to %d due to end trimming.\n", "Unknown skeleton version %d.%d\n", "Serial number in fisbone doesn't match any stream\n", "Multiple fisbone for the same stream\n", "invalid channel count. Speex must be mono or stereo.\n", "Too old or unsupported Theora (%x)\n", "Invalid time base in theora stream, assuming 25 FPS\n", "out-of-memory error. Skipping cover art block.\n", "Failed to parse cover art block.\n", "%td bytes of comment header remain\n", "truncated comment header, %i comments not found\n", "Channel change is not supported\n", "Unknown VP8 header type 0x%02X\n", "number of bytes to probe file format", "reduce the latency by flushing out packets immediately", "do not fill in missing values that can be exactly calculated", "disable AVParsers, this needs nofillin too", "try to interleave outputted packets by dts", "reduce the latency introduced by optional buffering", "allow seeking to non-keyframes on demuxer level when supported", "do not write random/volatile data", "specify how many microseconds are analyzed to probe the input", "max memory used for timestamp index (per stream)", "max memory used for buffering real-time frames", "maximum muxing or demuxing delay in microseconds", "wall-clock time when stream begins (PTS==0)", "number of frames used to probe fps", "microseconds by which audio packets should be interleaved earlier", "set error detection flags (deprecated; use err_detect, save via avconv)", "consider things that a sane encoder shouldn't do as an error", "set number of bytes to skip before reading header and frames", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "set number of bytes to be written as padding in a metadata header", "maximum buffering duration for interleaving", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "allow non-standardized experimental variants", "maximum number of packets to read while waiting for the first timestamp", "shift timestamps so they start at 0", "enabled when required by target format", "shift timestamps so they are non negative", "List of demuxers that are allowed to be used", "st->codec->bits_per_coded_sample > 0", "PCM 32-bit floating-point little-endian", "PCM 32-bit floating-point big-endian", "PCM 64-bit floating-point little-endian", "PCM 64-bit floating-point big-endian", "WAVEFORMATEX support for RIFX files\n", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "Index size %d (%d pkts) is wrong, should be %d.\n", "DATA tag in middle of chunk, file may be broken.\n", "mismatching interleaver parameters", "Unsupported Name value property version\n", "Invalid stream index %d for index at pos %lld\n", "Nr. of packets in packet index for stream index %d exceeds filesize (%lld at %lld = %lld)\n", "Non-linear index detected, not supported\n", "Unsupported opcode=%d at %llX\n", "IVR (Internet Video Recording)", "nothing to probe for stream %d\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "libavformat license: LGPL version 2.1 or later", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist", "Failed to duplicate whitelist\n", "Truncating packet of size %d to %lld\n", "Attached picture on stream %d has invalid size, ignoring\n", "invalid dts/pts combination %lli\n", "first_dts %s not matching first dts %s (pts %s, duration %lld) in the queue\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%lld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "Reconfiguring buffers to size %lld\n", "pos_min=0x%llx pos_max=0x%llx dts_min=%s dts_max=%s\n", "%lld %lld %lld / %s %s %s target:%s limit:%lld start:%lld noc:%d\n", "read_timestamp() failed in the middle\n", "using cached pos_min=0x%llx dts_min=%s\n", "using cached pos_max=0x%llx pos_limit=0x%llx dts_max=%s\n", "Failed to read extradata of size %d\n", "Setting avg frame rate based on r frame rate\n", "Dropped corrupted packet (stream = %d)\n", "Failed to reallocate probe buffer for stream %d\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%lld, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%lld, flags=%d\n", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "Ignoring outlier non primary stream starttime %f\n", "unspecified number of channels", "no frame in rv30/40 and no sar", "Before avformat_find_stream_info() pos: %lld bytes read:%lld seeks:%d\n", "Failed to open codec in av_find_stream_info\n", "Probe buffer size limit of %lld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %lld, packet %d with DTS %lld\n", "DTS discontinuity in stream %d: packet %d with DTS %lld, packet %d with DTS %lld\n", "max_analyze_duration %lld reached at %lld microseconds st:%d\n", "decoding for stream %d failed\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "stream: start_time: %0.3f duration: %0.3f bitrate=%lld kb/s\n", "%d: start_time: %0.3f duration: %0.3f\n", "After avformat_find_stream_info() pos: %lld bytes read:%lld seeks:%d frames:%d\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "s->streams[ s->nb_streams - 1 ] == st", "Chapter end time %lld before start %lld\n", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "demuxer does not support additional id3 data, skipping\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "Failed to open bitstream filter %s for stream %d with codec %s", "Failed to parse creation_time %s\n", "plane_count == nb_components - 1", "source vertical chroma position in luma grid/256", "source horizontal chroma position in luma grid/256", "destination vertical chroma position in luma grid/256", "destination horizontal chroma position in luma grid/256", "n == s->plane[ii].available_lines", "Warning: dstStride is not aligned!\n         ->cannot do aligned memory accesses anymore\n", "Warning: data is not aligned! This can lead to a speedloss\n", "firstLumSrcY >= lastInLumBuf - vLumBufSize + 1", "firstChrSrcY >= lastInChrBuf - vChrBufSize + 1", "One of the input parameters to sws_scale() is NULL, please check the calling code\n", "Slice parameters %d, %d are invalid\n", "unsupported planar RGB conversion %s -> %s\n", "unsupported conversion to planar RGB %s -> %s\n", "internal error %s -> %s converter\n", "SwScaler: reducing / aligning filtersize %d -> %d\n", "(*filterPos)[i] + j < srcW || !filter[i * filterSize + j]", "SwScaler: zero vector in scaling\n", "libswscale license: LGPL version 2.1 or later", "deprecated pixel format used, make sure you did set range correctly\n", "%s is not supported as input pixel format\n", "%s is not supported as output pixel format\n", "Exactly one scaler algorithm must be chosen, got %X\n", "%dx%d -> %dx%d is invalid scaling dimension\n", "Forcing full internal H chroma due to odd output size\n", "Forcing full internal H chroma due to input having non subsampled chroma\n", "Desired dithering only supported in full chroma interpolation for destination format '%s'\n", "Ordered dither is not supported in full chroma interpolation for destination format '%s'\n", "%s output is not supported with half chroma resolution, switching to full\n", "full chroma interpolation for destination format '%s' not yet implemented\n", "output width is not a multiple of 32 -> no MMXEXT scaler\n", "Failed to allocate MMX2FilterCode\n", "mprotect failed, cannot use fast bilinear scaler\n", "lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "using alpha blendaway %s -> %s special converter\n", "using unscaled %s -> %s special converter\n", "YUV color matrix differs for YUV->YUV, using intermediate RGB to convert\n", "luma bicubic / chroma bilinear", "Optimized 2 tap filter code cannot be used\n", "./libswscale/swscale_internal.h", "No accelerated colorspace conversion found from %s to %s.\n", "%ibpp not supported by yuv2rgb\n", "ctx->channels == out->ch_count", "s->dither.method < SWR_DITHER_NB", "Requested noise shaping dither not available at this sampling rate, using triangular hp dither\n", "select triangular dither with high pass", "select Lipshitz noise shaping dither", "select Shibata noise shaping dither", "select low Shibata noise shaping dither", "select high Shibata noise shaping dither", "select f-weighted noise shaping dither", "select modified-e-weighted noise shaping dither", "select improved-e-weighted noise shaping dither", "set swr resampling filter size", "set swr resampling phase shift", "set soxr resampling precision (in bits)", "enable soxr Chebyshev passband & higher-precision irrational ratio approximation", "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied", "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.", "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.", "set maximum factor by which data is stretched/squeezed to make it match the timestamps.", "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)", "Assume the first pts should be this value (in samples).", "select Blackman Nuttall windowed sinc", "set swr number of output sample bits", "Input channel layout '%s' is not supported\n", "Output channel layout '%s' is not supported\n", "!s->out_ch_layout || out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout)", "!s-> in_ch_layout || in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout)", "phase_count == 1 || phase_count % 2 == 0", "libswresample license: LGPL version 2.1 or later", "Requested input sample format %d is invalid\n", "Requested output sample format %d is invalid\n", "Input channel layout 0x%llx is invalid or unsupported.\n", "Output channel layout 0x%llx is invalid or unsupported.\n", "Requested resampling engine is unavailable\n", "Input channel layout has a different number of channels than the number of used channels, ignoring layout\n", "Using %s internally between filters\n", "Requested sample format %s is not supported internally, S16/S32/FLT/DBL is supported\n", "Failed to initialize resampler\n", "Resampling only supported with internal s16/s32/flt/dbl\n", "Input channel count and layout are unset\n", "Output channel layout %s mismatches specified channel count %d\n", "Input channel layout %s mismatches specified channel count %d\n", "Rematrix is needed between %s and %s but there is not enough information to do it\n", "s->midbuf.ch_count == s->used_ch_count", "s->midbuf.ch_count == s->out.ch_count", "s->dither.noise.ch_count == preout->ch_count", "Context has not been initialized\n", "adding %d audio samples of silence\n", "s->out_sample_rate == s->in_sample_rate", "Failed to compensate for timestamp delta of %f\n", "compensating audio timestamp drift:%f compensation:%d in:%d\n", "MMX implied by specified flags\n", "Internal bug, should not have happened", "Generic error in an external library", "Invalid data found when processing input", "Not yet implemented in FFmpeg, patches welcome", "Server returned 400 Bad Request", "Server returned 401 Unauthorized (authorization failed)", "Server returned 403 Forbidden (access denied)", "Server returned 4XX Client Error, but not one of 40{0,1,3,4}", "Server returned 5XX Server Error reply", "Undefined constant or missing '(' in '%s'\n", "Missing ')' or too many args in '%s'\n", "Invalid chars '%s' at the end of expression '%s'\n", "Error occurred in fstat(): %s\n", "ff_tempfile: Cannot allocate file name\n", "ff_tempfile: Cannot open temporary file %s\n", "ATSC A53 Part 4 Closed Captions", "Metadata relevant to a downmix procedure", "Picture size %ux%u is invalid\n", "Formats with a palette require a minimum alignment of 4\n", "abs(src_linesize) >= bytewidth", "abs(dst_linesize) >= bytewidth", "    Last message repeated %d times\r", "    Last message repeated %d times\n", " is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "in_ts != ((int64_t)0x8000000000000000ULL)", "Unable to parse option value \"%s\" as %s\n", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "Unable to parse option value \"%s\" as color\n", "Unable to parse option value \"%s\" as image size\n", "Unable to parse option value \"%s\" as video rate\n", "AVOption type %d of option %s not implemented yet\n", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "The value set by option '%s' is not a %s format", "The value set by option '%s' is not a channel layout.\n", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a %s format.\n", "The value for option '%s' is not a channel layout.\n", "const_values array too small for %s\n", "Unable to parse option value \"%s\"\n", "false,n,no,disable,disabled,off", "Unable to parse option value \"%s\" as boolean\n", "Unable to parse option value \"%s\" as duration\n", "Unable to parse option value \"%s\" as channel layout\n", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "Error setting option %s to value %s.\n", "Not supported option type: %d, option name: %s\n", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step && !c->offset && !c->shift && !c->depth", "pixelutils support is required but libavutil is not compiled with it\n", "Timecode frame rate must be specified\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Using non-standard frame rate %d/%d\n", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "libavutil license: LGPL version 2.1 or later", "Remapped id too large\n", "Too many channels\n", "mono with CPE\n", "stereo with SCE\n", "SBR+", "960/120 MDCT window", "epConfig %d", "Low Delay SBR", "Audio object type %s%d", "audio config changed\n", "initializing latmctx\n", "Reserved bit set.\n", "invalid band type\n", "ms_present = 3 is reserved.\n", "no frame data found\n", "Elem type:%x id:%x\n", "extension type: %d len:%d\n", "FILL:%s\n", "libfaac %d.%d", "Multiple programs", "Multiple layers", "no decoder config found\n", "incomplete frame\n", "aac_latm", "AAC (Advanced Audio Coding)", "AAC decoder", "dual_mono_mode", "auto", "autoselection", "main", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "iid_mode %d is reserved.\n", "icc_mode %d is reserved.\n", "illegal iid\n", "illegal icc\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Invalid n_master: %d\n", "Invalid bs_stop_freq: %d\n", "libavcodec/aacsbr_template.c", "Assertion %s failed at %s:%d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "noise_facs_q %d is invalid\n", "env_facs_q %d is invalid\n", "bs_pointer >= 0", "patch construction failed\n", "Too many patches: %d\n", "Reserved SBR extensions", "SBR Extension over read.\n", "libavcodec/aacsbr.c", "temp1 <= 1E20", "sbr->data[ch].bs_num_env > 0", "exponent %d is out-of-range\n", "Enhanced coupling", "bandwidth code = %d > 60\n", "error in bit allocation\n", "Dependent substream decoding", "Reserved frame type\n", "Additional substreams", "Reduced sampling rate", "Block start info", "frame sync error\n", "invalid bitstream id\n", "invalid sample rate\n", "invalid frame size\n", "invalid frame type\n", "frame CRC mismatch\n", "eac3", "ATSC A/52B (AC-3, E-AC-3)", "E-AC3 decoder", "ATSC A/52A (AC-3)", "AC3 decoder", "drc_scale", "heavy_compr", "target_level", "dmix_mode", "Preferred Stereo Downmix Mode", "ltrt_cmixlev", "Lt/Rt Center Mix Level", "ltrt_surmixlev", "Lt/Rt Surround Mix Level", "loro_cmixlev", "Lo/Ro Center Mix Level", "loro_surmixlev", "Lo/Ro Surround Mix Level", "Cannot allocate memory.\n", "extradata is too small\n", "set_info failed\n", "Sample depth %d", "Invalid channel count\n", "Error allocating buffers\n", "bps is unsupported: %d\n", "Compression with rice limit 0", "unknown prediction type: %i\n", "Error : %d bits left\n", "alac", "extra_bits_bug", "Incorrect extradata\n", "%d bits per coded sample", "Too many bits: %d\n", "libavcodec/apedec.c", "s->samples >= 0", "Packet is too small\n", "Incorrect offset passed\n", "Invalid sample count: %u.\n", "pure silence mono\n", "pure silence stereo\n", "Error decoding frame\n", "Error reading frame header\n", "Monkey's Audio", "APE decoder", "max_samples", "AVDCT", "DCT algorithm", "autoselect a good one", "fastint", "accurate integer", "experimental / for debugging", "altivec", "faan", "idct", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "libavcodec/avpacket.c", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "p-pkt->data == pkt->size", "incorrect codes\n", "libavcodec/bitstream.c", "length <= put_bits_left(pb)", "libavcodec/put_bits.h", "s->buf_ptr < s->buf_end", "n <= s->buf_end - s->buf_ptr", "symbols_size <= 2 || !symbols", "Invalid code in init_vlc\n", "needed %d had %d\n", "ret >= 0", "mpeg1video", "MPEG-1 video", "mpeg2video", "MPEG-2 video", "mpegvideo_xvmc", "h261", "H.261", "h263", "rv10", "RealVideo 1.0", "rv20", "RealVideo 2.0", "mjpeg", "Motion JPEG", "mjpegb", "Apple MJPEG-B", "mpeg4", "MPEG-4 part 2", "rawvideo", "raw video", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "Windows Media Video 7", "wmv2", "Windows Media Video 8", "h263p", "h263i", "Intel H.263", "flv1", "svq1", "svq3", "dvvideo", "DV (Digital Video)", "huffyuv", "HuffYUV", "cyuv", "Creative YUV (CYUV)", "h264", "indeo3", "Intel Indeo 3", "On2 VP3", "theora", "Theora", "asv1", "ASUS V1", "asv2", "ASUS V2", "ffv1", "FFmpeg video codec #1", "4X Movie", "vcr1", "ATI VCR1", "cljr", "Cirrus Logic AccuPak", "mdec", "id RoQ video", "interplayvideo", "Interplay MVE video", "xan_wc3", "Wing Commander III / Xan", "xan_wc4", "Wing Commander IV / Xxan", "rpza", "QuickTime video (RPZA)", "cinepak", "Cinepak", "ws_vqa", "msrle", "Microsoft RLE", "msvideo1", "Microsoft Video 1", "idcin", "id Quake II CIN video", "8bps", "QuickTime 8BPS video", "QuickTime Graphics (SMC)", "flic", "Autodesk Animator Flic video", "truemotion1", "Duck TrueMotion 1.0", "vmdvideo", "Sierra VMD video", "mszh", "zlib", "qtrle", "snow", "Snow", "tscc", "ulti", "IBM UltiMotion", "qdraw", "Apple QuickDraw", "vixl", "Miro VideoXL", "qpeg", "Q-team QPEG", "ffvhuff", "Huffyuv FFmpeg variant", "rv30", "RealVideo 3.0", "rv40", "RealVideo 4.0", "SMPTE VC-1", "wmv3", "Windows Media Video 9", "loco", "LOCO", "wnv1", "Winnov WNV1", "aasc", "Autodesk RLE", "indeo2", "Intel Indeo 2", "fraps", "Fraps", "truemotion2", "Duck TrueMotion 2.0", "BMP (Windows and OS/2 bitmap)", "cscd", "CamStudio", "mmvideo", "American Laser Games MM Video", "zmbv", "Zip Motion Blocks Video", "smackvideo", "Smacker video", "NuppelVideo/RTJPEG", "kmvc", "Karl Morton's video codec", "flashsv", "Flash Screen Video v1", "cavs", "jpeg2000", "JPEG 2000", "vmnc", "On2 VP5", "On2 VP6", "vp6f", "On2 VP6 (Flash version)", "dsicinvideo", "tiertexseqvideo", "Tiertex Limited SEQ video", "Feeble Files/ScummVM DXA", "dnxhd", "VC3/DNxHD", "Nintendo Gamecube THP video", "Interplay C93", "bethsoftvid", "Bethesda VID video", "vp6a", "AMV Video", "Beam Software VB", "indeo4", "indeo5", "mimic", "Mimic", "RL2 video", "escape124", "Escape 124", "daala", "Daala", "dirac", "Dirac", "Brute Force & Ignorance", "Electronic Arts CMV video", "motionpixels", "Motion Pixels video", "Electronic Arts TGV video", "Electronic Arts TGQ video", "Electronic Arts TQI video", "aura", "Auravision AURA", "aura2", "Auravision Aura 2", "v210x", "Uncompressed 4:2:2 10-bit", "8088flex TMV", "v210", "Electronic Arts Madcow Video", "frwu", "Forward Uncompressed", "flashsv2", "Flash Screen Video v2", "cdgraphics", "CD Graphics video", "r210", "Uncompressed RGB 10-bit", "Deluxe Paint Animation", "binkvideo", "Bink video", "iff_ilbm", "IFF ILBM", "kgv1", "Kega Game Video", "Psygnosis YOP Video", "On2 VP8", "Google VP9", "pictor", "Pictor/PC Paint", "a64_multi", "a64_multi5", "r10k", "AJA Kona 10-bit RGB Codec", "mvc1", "mvc2", "mxpeg", "Mobotix MxPEG video", "lagarith", "Lagarith lossless", "prores", "Apple ProRes (iCodec Pro)", "Bitmap Brothers JV video", "Chronomaster DFA", "utvideo", "Ut Video", "bmv_video", "Discworld II BMV video", "vble", "VBLE Lossless Codec", "dxtory", "Dxtory", "v410", "Uncompressed 4:4:4 10-bit", "cdxl", "Commodore CDXL video", "zerocodec", "ZeroCodec Lossless Video", "mss1", "MS Screen 1", "msa1", "MS ATC Screen", "tscc2", "TechSmith Screen Codec 2", "mts2", "MS Expression Encoder Screen", "cllc", "Canopus Lossless Codec", "mss2", "Apple Intermediate Codec", "y41p", "Uncompressed YUV 4:1:1 12-bit", "escape130", "Escape 130", "avrp", "Avid 1:1 10-bit RGB Packer", "012v", "avui", "Avid Meridien Uncompressed", "ayuv", "targa_y216", "Pinnacle TARGA CineWave YUV16", "v308", "Uncompressed packed 4:4:4", "v408", "yuv4", "Uncompressed packed 4:2:0", "avrn", "Avid AVI Codec", "cpia", "CPiA video format", "xface", "X-face image", "smvjpeg", "Sigmatel Motion Video", "Go2Meeting", "hnm4video", "HNM 4 video", "hevc", "Mirillis FIC", "paf_video", "On2 VP7", "sanm", "LucasArts SANM/SMUSH video", "sgirle", "SGI RLE 8-bit", "Canopus HQX", "hq_hqa", "Canopus HQ/HQA", "Vidvox Hap decoder", "Resolume DXV", "screenpresso", "Screenpresso", "wrapped_avframe", "rscc", "alias_pix", "Alias/Wavefront PIX image", "ansi", "ASCII/ANSI art", "brender_pix", "BRender PIX image", "OpenEXR image", "jpegls", "JPEG-LS", "ljpeg", "Lossless JPEG", "PAM (Portable AnyMap) image", "PBM (Portable BitMap) image", "PC Paintbrush PCX image", "PGM (Portable GrayMap) image", "pgmyuv", "PPM (Portable PixelMap) image", "V.Flash PTX image", "SGI image", "sp5x", "Sunplus JPEG (SP5X)", "sunrast", "Sun Rasterfile image", "targa", "Truevision Targa image", "tdsc", "TDSC", "tiff", "TIFF image", "vc1image", "webp", "WebP", "wmv3image", "Windows Media Video 9 Image", "XBM (X BitMap) image", "XWD (X Window Dump) image", "apng", "cfhd", "Cineform HD", "pcm_s16le", "pcm_s16be", "PCM signed 16-bit big-endian", "pcm_u16le", "pcm_u16be", "pcm_s8", "PCM signed 8-bit", "pcm_u8", "PCM unsigned 8-bit", "pcm_mulaw", "PCM mu-law / G.711 mu-law", "pcm_alaw", "PCM A-law / G.711 A-law", "pcm_s32le", "pcm_s32be", "PCM signed 32-bit big-endian", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "PCM signed 24-bit big-endian", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "PCM Zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "SMPTE 302M", "pcm_s8_planar", "PCM signed 8-bit planar", "adpcm_ima_qt", "ADPCM IMA QuickTime", "adpcm_ima_wav", "ADPCM IMA WAV", "adpcm_ima_dk3", "ADPCM IMA Duck DK3", "adpcm_ima_dk4", "ADPCM IMA Duck DK4", "adpcm_ima_ws", "ADPCM IMA Westwood", "adpcm_ima_smjpeg", "ADPCM IMA Loki SDL MJPEG", "adpcm_ms", "ADPCM Microsoft", "adpcm_4xm", "ADPCM 4X Movie", "adpcm_xa", "ADPCM CDROM XA", "adpcm_adx", "SEGA CRI ADX ADPCM", "adpcm_ea", "ADPCM Electronic Arts", "adpcm_g726", "G.726 ADPCM", "adpcm_ct", "ADPCM Creative Technology", "adpcm_swf", "ADPCM Shockwave Flash", "adpcm_yamaha", "ADPCM Yamaha", "adpcm_sbpro_4", "ADPCM Sound Blaster Pro 4-bit", "adpcm_sbpro_3", "adpcm_sbpro_2", "ADPCM Sound Blaster Pro 2-bit", "adpcm_thp", "ADPCM Nintendo THP", "adpcm_thp_le", "adpcm_ima_amv", "ADPCM IMA AMV", "adpcm_ea_r1", "ADPCM Electronic Arts R1", "adpcm_ea_r3", "ADPCM Electronic Arts R3", "adpcm_ea_r2", "ADPCM Electronic Arts R2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "ADPCM Electronic Arts XAS", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "ADPCM IMA Funcom ISS", "adpcm_g722", "G.722 ADPCM", "adpcm_ima_apc", "ADPCM IMA CRYO APC", "adpcm_afc", "ADPCM Nintendo Gamecube AFC", "adpcm_ima_oki", "ADPCM IMA Dialogic OKI", "adpcm_dtk", "ADPCM Nintendo Gamecube DTK", "adpcm_ima_rad", "ADPCM IMA Radical", "adpcm_g726le", "G.726 ADPCM little-endian", "adpcm_vima", "LucasArts VIMA audio", "adpcm_psx", "ADPCM Playstation", "adpcm_aica", "ADPCM Yamaha AICA", "amr_nb", "amr_wb", "ra_144", "RealAudio 1.0 (14.4K)", "ra_288", "RealAudio 2.0 (28.8K)", "roq_dpcm", "DPCM id RoQ", "interplay_dpcm", "DPCM Interplay", "xan_dpcm", "DPCM Xan", "sol_dpcm", "DPCM Sol", "sdx2_dpcm", "DPCM Squareroot-Delta-Exact", "MP2 (MPEG audio layer 2)", "MP3 (MPEG audio layer 3)", "DCA (DTS Coherent Acoustics)", "vorbis", "Vorbis", "dvaudio", "DV audio", "wmav1", "Windows Media Audio 1", "wmav2", "Windows Media Audio 2", "mace3", "mace6", "vmdaudio", "Sierra VMD audio", "flac", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "Westwood Audio (SND1)", "qdm2", "QDesign Music Codec 2", "cook", "truespeech", "DSP Group TrueSpeech", "TTA (True Audio)", "smackaudio", "Smacker audio", "qcelp", "QCELP / PureVoice", "wavpack", "WavPack", "dsicinaudio", "IMC (Intel Music Coder)", "musepack7", "Musepack SV7", "gsm_ms", "GSM Microsoft variant", "atrac3", "voxware", "Voxware RT29 Metasound", "nellymoser", "Nellymoser Asao", "musepack8", "Musepack SV8", "speex", "Speex", "wmavoice", "Windows Media Audio Voice", "wmapro", "wmalossless", "Windows Media Audio Lossless", "atrac3p", "sipr", "RealAudio SIPR / ACELP.NET", "MP1 (MPEG audio layer 1)", "twinvq", "VQF TwinVQ", "truehd", "TrueHD", "mp4als", "atrac1", "binkaudio_rdft", "Bink Audio (RDFT)", "binkaudio_dct", "Bink Audio (DCT)", "qdmc", "QDesign Music", "celt", "g723_1", "G.723.1", "dss_sp", "g729", "G.729", "8svx_exp", "8SVX exponential", "8svx_fib", "8SVX fibonacci", "bmv_audio", "Discworld II BMV audio", "ralf", "RealAudio Lossless", "IAC (Indeo Audio Coder)", "ilbc", "wavesynth", "Wave synthesis pseudo-codec", "sonic", "Sonic", "sonicls", "Sonic lossless", "opus", "comfortnoise", "RFC 3389 Comfort Noise", "metasound", "Voxware MetaSound", "paf_audio", "On2 Audio for Video Codec", "evrc", "SMV (Selectable Mode Vocoder)", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "Interplay ACM", "xma1", "Xbox Media Audio 1", "xma2", "Xbox Media Audio 2", "dvd_subtitle", "DVD subtitles", "dvb_subtitle", "DVB subtitles", "text", "raw UTF-8 text", "xsub", "XSUB", "ASS (Advanced SSA) subtitle", "mov_text", "MOV text", "hdmv_pgs_subtitle", "dvb_teletext", "DVB teletext", "subrip", "SubRip subtitle", "microdvd", "MicroDVD subtitle", "mpl2", "MPL2 subtitle", "eia_608", "EIA-608 closed captions", "jacosub", "JACOsub subtitle", "sami", "SAMI subtitle", "realtext", "RealText subtitle", "Spruce subtitle format", "subviewer1", "SubViewer v1 subtitle", "subviewer", "SubViewer subtitle", "vplayer", "VPlayer subtitle", "webvtt", "WebVTT subtitle", "hdmv_text_subtitle", "HDMV Text subtitle", "TrueType font", "bintext", "Binary text", "xbin", "eXtended BINary text", "iCEDraw text", "OpenType font", "dvd_nav_packet", "DVD Nav packet", "timed_id3", "timed ID3 metadata", "bin_data", "binary data", "application/octet-stream", "application/vnd.ms-opentype", "application/x-truetype-font", "application/x-font", "image/png", "image/x-xwindowdump", "image/webp", "image/tiff", "image/x-targa", "image/x-tga", "image/x-pcx", "image/x-portable-pixmap", "image/gif", "image/jp2", "image/x-ms-bmp", "image/jpeg", "Deallocating memory.\n", "Memory deallocated.\n", "Necessary extradata missing!\n", "codecdata_length=%d\n", "Invalid number of channels\n", "subpacket[%i].cookversion=%x\n", "Container channels != 1", "MONO\n", "STEREO\n", "Container channels != 2", "JOINT_STEREO\n", "MULTI_CHANNEL\n", "Cook version %d", "total_subbands > 53", "subbands > 50", "subbands = 0", "subpackets > %d", "sqvh VLC init\n", "VLC tables initialized.\n", "samples_per_channel = %d", "decouple value too large\n", "subpacket[%i] %i %i\n", "XBR-DSYNC check failed\n", "Invalid bit allocation index\n", "Invalid scale factor index\n", "%d XXCH channels", "DSYNC check failed\n", "Invalid XXCH sync word\n", "%d XXCH channel sets", "X96-DSYNC check failed\n", "XCH sync word not found\n", "X96 sync word not found\n", "XXCH sync word not found\n", "Read past end of core frame\n", "Invalid XBR sync word\n", "Invalid X96 sync word\n", "Invalid X96 revision (%d)\n", "Read past end of XCH frame\n", "Read past end of X96 frame\n", "Invalid EXSS header checksum\n", "%d audio presentations", "%d audio assets", "EXSS asset out of bounds\n", "Read past end of EXSS header\n", "Invalid NAVI position\n", "Invalid XLL sync word\n", "XLL stream version %d", "%d XLL channel sets", "%d XLL channels", "%d-bit XLL storage resolution", "%d Hz XLL sampling frequency", "XLL replacement set", "Disabled XLL channel mask", "Invalid XLL channel mask\n", "Extra XLL frequency bands", "Invalid LSB section size\n", "Too many NAVI entries (%d)\n", "Invalid NAVI checksum\n", "Read past end of XLL frame\n", "Invalid core shift (%d bits)\n", "Invalid packet size\n", "libavcodec/dcadec.c", "DCA decoder", "core_only", "Unknown chroma format %d\n", "guess_dc() is out of memory\n", "libavcodec/error_resilience.c", "s->quarter_sample", "ignoring last missing slice\n", "Warning MVs not available\n", "%2X ", "0x%04X", "TIFF tag type (%u)", "invalid sync code\n", "invalid channel mode: %d\n", "reserved blocksize code: 0\n", "illegal sample rate code %d\n", "header crc mismatch\n", "extradata NULL or too small.\n", "extradata too small.\n", "invalid max blocksize: %d\n", "couldn't allocate fifo_buf\n", "Junk frame till offset %i\n", "libavcodec/flacdec.c", "skipping vorbis comment\n", "invalid frame header\n", "blocksize %d > %d\n", "  Max Blocksize: %d\n", "  Max Framesize: %d\n", "  Samplerate: %d\n", "  Channels: %d\n", "  Bits: %d\n", "invalid subframe padding\n", "Decorrelated bit depth > 32", "illegal pred order %d\n", "invalid coeff precision\n", "invalid coding type\n", "CRC error at PTS %lld\n", "overread: %d\n", "underread: %d orig size: %d\n", "invalid header\n", "decode_frame() failed\n", "FLAC decoder", "use_buggy_lpc", "Bad picture start code\n", "Bad picture format\n", "%c esc_type:%d, qp:%d num:%d\n", "qscale has forbidden 0 value\n", "illegal mba at %d %d\n", "Invalid mtype index %d\n", "libavcodec/h261dec.c", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d\n", "header damaged\n", "Error at MB: %d\n", "Unsupported codec %d\n", "L263", "S263", "Slice mismatch at MB: %d\n", "overreading %d bits\n", "format change not supported\n", "GEOV", "GEOX", "Reference invalid\n", "Invalid POC %d<%d\n", "libavcodec/h264.c", "pics <= 16", "no picture %s\n", "stereo_mode", "AVC: nal size %d\n", "NAL %d/%d at %d/%d length %d\n", "Invalid inter IDR frame\n", "data partitioning", "decode_slice_header error\n", "avcC %d too short\n", "buf_index <= buf_size", "Q264", "no frame!\n", "pict->buf[0] || !*got_frame", "Invalid UE golomb code\n", "pthread_once has failed.", "H264 Decoder", "is_avc", "is avc", "nal_length_size", "enable_er", "Reference %d >= %d\n", "gray chroma\n", "Invalid level prefix\n", "libavcodec/h264_cavlc.c", "ref %u overflow\n", "cbp too large (%u) at %d %d\n", "co located POCs unavailable\n", "private_spspps_buf", "h264_mp4toannexb", "pps_id %u out of range\n", "reference count %d overflow\n", "libavcodec/h264_picture.c", "!dst->f->buf[0]", "src->f->buf[0]", "cpb_count %d invalid\n", "PIC-AFF", "MB-AFF", "sps_id %u out of range\n", "chroma_format_idc %u", "poc_cycle_length overflow %d\n", "illegal POC type %d\n", "too many reference frames %d\n", "mb_width/height overflow\n", "illegal aspect ratio\n", "Truncated VUI\n", "Overread %s by %d bits\n", "8x8DCT", "REDU", "CONSTR", "LPAR", "weighted", "CABAC", "CAVLC", "Invalid luma bit depth=%d\n", "FMO not supported\n", "reference overflow (pps)\n", "remove short %d count %d\n", "%d %d %p\n", "libavcodec/h264_refs.c", "index < def_len", "short term list:\n", "%u fn:%d poc:%d %p\n", "long term list:\n", "len <= 32", "reference count overflow\n", "abs_diff_pic_num overflow\n", "long_term_pic_idx overflow\n", "no mmco here\n", "mmco:%d %d %d\n", "mmco: unref short failure\n", "mmco: unref long failure\n", "!h->cur_pic_ptr->long_ref", "SEI %d len:%d\n", "ct_type:%X pic_struct:%d\n", "x264 - core %d", "x264 - core 0000", "user data:\"%s\"\n", "sei_recovery_frame_cnt: %d\n", "SEI FPA %d %d %d %d %d %d\n", "unknown SEI type %d\n", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "mono", "Could not allocate memory\n", "Unsupported bit depth %d\n", "context_init() failed.\n", "libavcodec/h264_slice.c", "!pic->f->data[0]", "!pic->hwaccel_picture_private", "no frame buffer available\n", "bytestream overread %td\n", "TEMP", "SPAT", " IDR", " fix", "!h->setup_finished", "Too many fields\n", "Broken frame packetizing\n", "sl == h->slice_ctx", "PPS changed between slices\n", "h->cur_pic_ptr", "h->cur_pic_ptr->f->buf[0]", "Frame num gap %d %d\n", "first_mb_in_slice overflow\n", "cabac_init_idc %u overflow\n", "QP %u out of range\n", "libavcodec/h264dsp.c", "bit_depth<=8", "libavcodec/h264pred.c", "PPS id out of range: %d\n", "PPS changed between slices.\n", "Unknown slice type: %d.\n", "No ref lists in the SPS.\n", "Too many refs: %d/%d.\n", "offset_len %d is invalid\n", "Failed to allocate memory\n", "Impossible slice segment.\n", "Invalid long term RPS.\n", "Mastering Display Metadata:\n", "Skipping NAL unit %d\n", "Error parsing NAL unit #%d.\n", "libavcodec/bytestream.h", "buf_size >= 0", "plane %d - correct ", "%02x", " != ", "Decoded frame with POC %d.\n", "Impossible initial tile.\n", "HEVC decoder", "apply_defdispwin", "strict-displaywin", "CABAC_MAX_BIN : %d\n", "libavcodec/hevc_parse.c", "TRAIL_N", "TRAIL_R", "TSA_N", "TSA_R", "STSA_N", "STSA_R", "RADL_N", "RADL_R", "RASL_N", "RASL_R", "BLA_W_LP", "BLA_W_RADL", "BLA_N_LP", "IDR_W_RADL", "IDR_N_LP", "CRA_NUT", "EOS_NUT", "EOB_NUT", "FD_NUT", "SEI_PREFIX", "SEI_SUFFIX", "Invalid NAL unit size.\n", "No start code is found.\n", "Invalid NAL unit: %d\n", "SPS id out of range: %d\n", "libavcodec/hevc_ps.c", "PTL information too short\n", "Main profile bitstream\n", "Main 10 profile bitstream\n", "Unknown HEVC profile: %d\n", "nb_cpb %d invalid\n", "Decoding VUI\n", "Unknown SAR index: %u.\n", "Retry got %i/%i fps\n", "Decoding VPS\n", "VPS id out of range: %d\n", "Overread VPS by %d bits\n", "VPS %d does not exist\n", "Too many short term RPS: %d.\n", "CTB size out of range: 2^%d\n", "log2_ctb_size %d", "Overread SPS by %d bits\n", "Decoding SPS\n", "Decoding PPS\n", "SPS %u does not exist.\n", "Invalid tile widths.\n", "Invalid tile heights.\n", "Overread PPS by %d bits\n", "libavcodec/hevc_refs.c", "Output frame with POC %d.\n", "Zero refs in the frame RPS.\n", "Invalid reference index.\n", "Decoding SEI\n", "BOTTOM Field\n", "TOP Field\n", "Skipped PREFIX SEI %d\n", "Skipped SUFFIX SEI %d\n", "libavcodec/imgconvert.c", "desc", "after picture_number", "Bad H263 id\n", "SAC not supported\n", "Wrong Intel H263 format\n", "Bad value for reserved field\n", "Invalid marker\n", "in dimensions", "Invalid aspect ratio.\n", "libavcodec/intrax8.c", "s->mb_width>0", "run overflow at %dx%d i:%d\n", " LOOP", " AIV", " AIC", " LONG", " UMV", "before MBA", "after MBA", "after SQUANT", "cbpc damaged at %d %d\n", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "in PTYPE", "H263 SAC not supported\n", "Bad UFEP type (%d)\n", "zero framerate\n", "SEPB1", "SEPB2", " %5d", "ZYGO", "libavcodec/kbdwin.c", "n <= 1024", "libavcodec/mpeg12.c", "first field missing\n", "VCR2", "BW10", "matrix damaged\n", "skip with previntra\n", "invalid dc code at\n", "ac-tex damaged at %d %d\n", "libavcodec/mpeg12dec.c", "!s->progressive_sequence", "00 motion_type at %d %d\n", "invalid cbp %d at %d %d\n", "mb_y < s->mb_height", "qscale == 0\n", "first mb_incr damaged\n", "initial skip overflow\n", "end mismatch left=%d %0X\n", "mb incr damaged\n", "slice mismatch\n", "overread %d\n", "SLIF", "avctx->thread_count > 1", "%3X at %td left %d\n", "in sequence header", "sequence header damaged\n", "ignoring invalid SAR: %u/%u\n", "vbv_delay %d, ref %d type:%d\n", "ignoring pic after %X\n", "Chroma format invalid\n", "after bit rate extension", "ignoring seq ext after %X\n", "sde w:%d, h:%d\n", "pde (%d,%d) (%d,%d) (%d,%d)\n", "invalid frame_pred_frame_dct\n", "slice too small\n", "slice below image (%d >= %d)\n", "Missing picture start code\n", "picture in extradata\n", "mpegvideo", "Failed to parse extradata\n", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "DivX%dBuild%d%c", "DivX%db%d%c", "FFmpe%*[^b]b%d", "Lavc%d.%d.%d", "ffmpeg", "XviD%d", "before sprite_trajectory", "after sprite_trajectory", "after new_pred", " VOLC", "before time_increment", "before vop_coded", "vop not coded\n", "after width", "after height", "after hor_spat_ref", "Header truncated\n", "static sprite not supported\n", "illegal dc vlc\n", "dc marker bit missing\n", "reverse esc missing\n", "mcbpc damaged at %d %d\n", "P cbpy damaged at %d %d\n", "illegal MB_type\n", "marker does not match f_code\n", "untested\n", "mcbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "slice below monitor ...\n", "cbpy corrupted at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", "XVIX", "UMP4", "XVID", "RMP4", "ZMP4", "SIPP", "DIVX", "rvlc ", "partition ", "qpel ", "scalability ", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "Reserved", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "reserved", "System start", " at %d\n", "illegal chroma format\n", "after first_half_bitrate", "after latter_half_bitrate", "Gray shape not supported\n", "framerate==0\n", "before fixed_vop_rate", "before width", "before height", "Static Sprites not supported\n", "after sprite_width", "after sprite_height", "after sprite_left", "after sprite_top", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "VOL Header truncated\n", "new pred not supported\n", "scalability not supported\n", "GOP header invalid\n", "in gop_header", "WV1F", "QMP4", "MP4S", "MPEG4 Video Decoder", "quarter_sample", "1/4 subpel MC", "divx_packed", "divx style packed b frames", "MP3ADU full parser", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "bits_left=%d\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "discarding ID3 tag\n", "Header missing\n", "Invalid frame header\n", "Bad header, discard block\n", "failed to decode channel %d\n", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "libavcodec/mpegpicture.c", "pic->f->data[0]", "!pic->f->buf[0]", "get_buffer() failed (%d %p)\n", "Error allocating a picture.\n", "libavcodec/mpegvideo.c", "s != s1", "New frame, type: %c\n", "DCT coeffs of MB at %dx%d:\n", "Failed to set dimensions\n", "ext header missing, %d left\n", "invalid startcode\n", "invalid picture type\n", "invalid qscale\n", "invalid slice height %d\n", "error, slice code was %X\n", "dc overflow+ L qscale: %d//\n", "dc overflow+ C qscale: %d//\n", "ignoring overflow at %d %d\n", "cbpc %d invalid at %d %d\n", "cbpy %d invalid at %d %d\n", "illegal MV code at %d %d\n", "msmpeg4", "NULL", "libavcodec/options.c", "AVSubtitleRect", "type", "flags", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "format", "channel_layout", "sample_rate", "AVCodecContext", "set bitrate (in bits/s)", "unaligned", "qpel", "loop", "use loop filter", "qscale", "use fixed qscale", "use gmc", "always try a mb with mv=<0,0>", "input_preserved", "pass1", "pass2", "gray", "only decode/encode grayscale", "emu_edge", "do not draw edges", "psnr", "truncated", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "bitexact", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "fast", "flags2", "noout", "skip bitstream encoding", "ignorecrop", "local_header", "chunks", "showall", "export_mvs", "skip_manual", "me_method", "set motion estimation method", "zero", "full", "epzs", "EPZS motion estimation", "tesa", "tesa motion estimation", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter", "iter motion estimation", "time_base", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "delay", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "rc_strategy", "ratecontrol method", "b_strategy", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "padding bug (autodetected)", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "truncated frames", "strict", "very", "normal", "unofficial", "allow unofficial extensions", "experimental", "b_qoffset", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "buffer", "explode", "ignore_err", "ignore errors", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "minrate", "bufsize", "rc_buf_aggressivity", "i_qfactor", "i_qoffset", "rc_init_cplx", "fast integer", "floating point AAN DCT", "lumi_mask", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "floating point AAN IDCT", "slice_count", "guess_mvs", "deblock", "favor_inter", "bits_per_coded_sample", "pred", "prediction method", "left", "plane", "median", "aspect", "sample aspect ratio", "debug", "print specific debug info", "pict", "picture info", "rate control", "mb_type", "macroblock (MB) type", "motion vector", "dct_coeff", "green_metadata", "skip", "startcode", "error recognition", "mmco", "bugs", "vis_qp", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "vismv", "debug_mv", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "mbcmp", "macroblock compare function", "ildctcmp", "dia_size", "last_pred", "preme", "pre motion estimation", "precmp", "sum of squared errors", "satd", "rate distortion optimal, slow", "vsad", "vsse", "nsse", "dctmax", "chroma", "pre_dia_size", "subq", "dtg_active_format", "me_range", "ibias", "intra quant bias", "pbias", "inter quant bias", "global_quality", "coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context", "context model", "slice_flags", "xvmc_acceleration", "use mbcmp", "bits", "use fewest bits", "use best rate distortion", "stream_codec_tag", "sc_threshold", "scene change threshold", "lmin", "lmax", "noise reduction", "rc_init_occupancy", "error", "threads", "set the number of threads", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "skip_bottom", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "level", "lowres", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "discard no frame", "default", "discard useless frames", "noref", "bidir", "nokey", "nointra", "discard all frames", "bidir_refine", "brd_scale", "keyint_min", "refs", "chromaoffset", "chroma QP offset from luma", "trellis", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color primaries", "color_primaries_type", "bt709", "BT.709", "unspecified", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "film", "Film", "bt2020", "BT.2020", "smpte428_1", "SMPTE ST 428-1", "color_trc", "color_trc_type", "gamma22", "gamma28", "linear", "Linear", "log_sqrt", "Log square root", "iec61966_2_4", "IEC 61966-2-4", "bt1361", "BT.1361", "iec61966_2_1", "IEC 61966-2-1", "bt2020_10bit", "BT.2020 - 10 bit", "bt2020_12bit", "BT.2020 - 12 bit", "smpte2084", "SMPTE ST 2084", "colorspace", "color space", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "BT.2020 NCL", "bt2020_cl", "BT.2020 CL", "color_range", "color range", "color_range_type", "mpeg", "MPEG (219*2^(n-8))", "jpeg", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "bottom", "Bottom", "log_level_offset", "set the log level offset", "slices", "thread_type", "select multithreading type", "slice", "frame", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "dump_separator", "codec_whitelist", "pixel_format", "set pixel format", "video_size", "set video size", "libavcodec/parser.c", "index > -0x20000000", "PCM packet too small\n", "reserved sample rate (%d)\n", "PCM channels out of bounds\n", "Invalid sample_size\n", "codec ids mismatch\n", "Profile 0", "Profile 1", "Profile 2", "Profile 3", "Simple", "Main", "Complex", "Advanced", "Simple Profile", "Simple Scalable Profile", "Core Profile", "Main Profile", "N-bit Profile", "Scalable Texture Profile", "Simple Face Animation Profile", "Hybrid Profile", "Code Scalable Profile", "Advanced Coding Profile", "Advanced Core Profile", "Simple Studio Profile", "Advanced Simple Profile", "4:2:2", "High", "Spatially Scalable", "SNR Scalable", "JPEG 2000 digital cinema 2K", "JPEG 2000 digital cinema 4K", "Main 10", "Main Still Picture", "Rext", "Baseline", "Constrained Baseline", "Extended", "High 10", "High 10 Intra", "High 4:2:2", "High 4:2:2 Intra", "High 4:4:4", "High 4:4:4 Predictive", "High 4:4:4 Intra", "CAVLC 4:4:4", "DTS-ES", "DTS 96/24", "DTS-HD HRA", "DTS-HD MA", "DTS Express", "HE-AAC", "HE-AACv2", "libavcodec/pthread_frame.c", "%p finished %d field %d\n", "Final thread update failed\n", "thread_get_buffer() failed\n", "libavcodec/pthread_slice.c", "Overflow. Broken sample?\n", "real_144", "unsupported block align\n", "real_288", "LSD:", "Unknown version %X", "invalid frame size %d\n", "short packets are short!\n", "I'm pedaling backwards\n", "Invalid pixel format.\n", "BottomUp", "yuv2", "width is not set\n", "height is not set\n", "PACKET SIZE: %d, STRIDE: %d\n", "Packet too small (%d)\n", "libavcodec/rawdec.c", "I420", "rawdec", "top field first", "audioresample", "Could not allocate buffer\n", "ReSampleContext", "libavcodec/rl.c", "Extradata is too small.\n", "unknown header %X\n", "RV1/2 version", "ver:%X ver0:%X\n", "Invalid slice count: %d.\n", "marker missing\n", "pb frame", "Invalid qscale value: 0\n", "unknown frame type\n", "low delay B\n", "early B-frame\n", "reserved bit set\n", "Extradata too small.\n", "F %d/%d/%d\n", "libavcodec/rv10.c", "HEADER ERROR\n", "POS ERROR %d %d\n", "COUNT ERROR\n", "Slice type mismatch\n", "ERROR at MB %d %d\n", "update size from %d to %d\n", "chroma dc error\n", "Incorrect MB type code\n", "dquant needed\n", "rpr too large\n", "Slice offset is invalid\n", "Changing dimensions to %dx%d\n", "Slice size is invalid\n", "Size mismatch\n", "Need DQUANT\n", "Dquant for P-frame\n", "Dquant for B-frame\n", "%s%7i:%-7i", "%s%7i", "%s%.15g", "%s%5i", "%s%3i", "./libavutil/mem_internal.h", "val || !min_size", "Invalid channel count", "Invalid sample rate", "ignoring invalid SAR: %d/%d\n", "libavcodec/utils.c", "desc->flags & (1 << 4)", "frame->nb_extended_buf == 0", "Too many channels: %d.\n", "get_buffer() failed\n", "reget_buffer() failed\n", "extended_data is not set.\n", "avctx->codec->encode2", "AVFrame.format is not set\n", "ret <= 0", "Invalid media type for video\n", "Invalid media type for audio\n", "ret <= tmp.size", "skip %d/%d samples\n", "discard %d/%d samples\n", "unknown_codec", "[%d]", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s, ", "%s/%s/%s, ", "%dx%d", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", %dx%d", ", pass 1", ", pass 2", ", %lld kb/s", ", max. %lld kb/s", "n >= 1", "choices[n] != AV_PIX_FMT_NONE", "ff_avcodec_locked", "!ff_avcodec_locked", "!dst->progress", "encoder", "decoder", "Codec type or id mismatches\n", "Channel layout not specified\n", "dimensions not set\n", "p <= end", "invalid NORM-6 VLC\n", "Header: %0X\n", "Reserved LEVEL %i\n", "Display extended info:\n", "Display dimensions: %ix%i\n", "Aspect: %i:%i\n", "Unsupported sprite feature\n", "Entry point: %08X\n", "bfraction invalid\n", "VOP DQuant info\n", "libavcodec/vc1.c", "Pan-scan", "B Fields\n", "Illegal DC VLC\n", "Overriding invalid mquant %d\n", "libavcodec/vc1_block.c", "index < esc", "Referenced frame missing.\n", "libavcodec/vc1_pred.c", "!v->field_mode", "pict_type: %c\n", "image too short\n", "libavcodec/vc1dec.c", "mb_height > 0", "(s->mb_height & 1) == 0", "Field header damaged\n", "Slice header damaged\n", "end mb y %d %d invalid\n", "missing cbpcy_vlc\n", "Read %i bits in overflow\n", "Extradata size too small: %i\n", "Incomplete extradata\n", "odd sprites support", "Invalid packet\n", "Invalid mode in packet\n", "Extradata corrupt.\n", "Id header is too short\n", "Setup header is too short\n", "Out of memory\n", "Invalid Setup header\n", "Unsupported mode count: %d\n", "Vorbis parser", "Invalid samplerate\n", "libavcodec/vorbisdec.c", "Floor 0 order is 0.\n", "Floor 0 rate is 0.\n", "Floor 0 bark map size is 0.\n", "book_idx", "Invalid floor type!\n", "res_setup->classbook", "res_setup->books[j][k]", "mapping_setup->magnitude[j]", "mapping_setup->angle[j]", "mode_setup->mapping", "Id header corrupt.\n", "Ignoring comment header\n", "Setup header corrupt.\n", "Not a Vorbis I audio packet.\n", "mode_number", "Insufficient output buffer\n", "vr->classifications > 1", "Extradata missing.\n", "q-index", "lf-delta", "partial-golden-update", "blit-pitch", "Unknown profile %d\n", "Invalid start code 0x%x\n", "Upscaling", "Unspecified colorspace\n", "Invalid partitions\n", "Ran out of free frames!\n", "libavcodec/vp9.c", "Reserved bit set in RGB\n", "Invalid frame marker\n", "Invalid sync code\n", "w > 0 && h > 0", "Marker bit was set\n", "!f->hwaccel_picture_private", "libavcodec/vp9dsp.c", "bpp == 12", "libavformat/ac3dec.c", "raw E-AC-3", "raw AC-3", "invalid packet size: %d\n", "No frames in the file!\n", "Too many frames: %u\n", "File truncated\n", "ape,apl,mac", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "APETAGEX", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "WM/AlbumArtist", "album_artist", "WM/AlbumTitle", "album", "Author", "artist", "Description", "comment", "WM/Composer", "composer", "WM/EncodedBy", "encoded_by", "WM/EncodingSettings", "WM/Genre", "genre", "WM/Language", "language", "WM/OriginalFilename", "filename", "WM/PartOfSet", "disc", "WM/Publisher", "publisher", "WM/Tool", "WM/TrackNumber", "track", "WM/MediaStationCallSign", "service_provider", "WM/MediaStationName", "service_name", "libavformat/asfdec_f.c", "packet_obj_size %d invalid\n", "too long payload\n", "asf_st", "discarding ms fart\n", "ff asf bad non zero\n", "Invalid ECC byte\n", "invalid padsize %u at:%lld\n", "title", "WM/Picture", "%llu", "AspectRatioX", "AspectRatioY", "too many streams\n", "author", "copyright", "Payload extension %x %d\n", "Secret data:\n", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "encryption", "Digital signature detected!\n", "asf_read_pts failed\n", "itime:0x%llx, pct:%d, ict:%d\n", "SEEKTO: %lld\n", "asf demuxer", "no_resync_search", "export_xmp", "Export full XMP metadata", "GAB2", "%lld %d/%d %lld\n", "libavformat/avidec.c", "ODML index invalid\n", "pos:%lld, len:%X\n", "movi_end=0x%llx\n", "tag=%c%c%c%c size=0x%x\n", "%d cum_len=%lld\n", "MMES", "stream_index >= 0", "XX %lld %d %lld\n", "Seek failed\n", "creation_time", "maker", "model", "list", "movi end=%llx\n", "%.4d-%.2d-%.2d %s", "strh", "stream_index < s->nb_streams", "%u %u %d\n", "unknown stream type %X\n", "video", "overriding sample_size\n", "./libavcodec/bytestream.h", "vprp %d/%d %d/%d\n", "ISFT", "PotEncoder", "non-interleaved AVI\n", "use odml:%d\n", "Axan", "AVI (Audio Video Interleaved)", "strn", "use_odml", "use odml index", "subfile,", "libavformat/avio.c", "subfile", "start", "Key '%s' not found.\n", "https:", "protocol_whitelist", "No default whitelist set\n", "file", "URLContext", "libavformat/aviobuf.c", "!s->write_flag", "len >= s->orig_buffer_size", "AVIOContext", "%sMetadata:\n", "%s  %-16s: ", "\n%s  %-16s: ", "fps, ", "tbr, ", "tbn, ", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ": %s", ", SAR %d:%d DAR %d:%d", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "    ", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "h263 macroblock info", "replaygain: ", "invalid data", "track gain", "%s - ", "track peak", "album gain", "album peak", "stereo3d: ", "side by side", "top and bottom", "frame alternate", "checkerboard", "interleaved lines", "interleaved columns", " (inverted)", "audio service type: ", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "Output", "from", "Input", "%s #%d, %s, %s '%s':\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%d.%06d", ", bitrate: ", "%lld kb/s", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "name", "  Program %d %s\n", "  No Program\n", "file:", "file,crypto", "truncate", "blocksize", "Invalid picture type: %d.\n", "fLaC", "raw FLAC", "NGINX RTMP", "true", "false", "keyframes", "Skipping duplicate index\n", "times", "filepositions", "unsupported amf type %d\n", "duration", "videodatarate", "audiodatarate", "datastream", "videocodecid", "Video codec (%x)", "audiocodecid", "Audio codec (%x)", "audiosamplerate", "audiosamplesize", "stereo", "metadatacreator", "MEGA", "filesize", "framerate", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "Unknown type %s\n", "%d %X %d \n", "invalid timestamps %lld %lld\n", "Omnia A/XE", "Packet mismatch %d %d\n", "Encoder", "OnTextData packet", "live_flv", "live RTMP FLV (Flash Video)", "live_flvdec", "FLV (Flash Video)", "flvdec", "flv_metadata", "datasize", "lasttimestamp", "totalframes", "hasAudio", "hasVideo", "hasCuePoints", "hasMetadata", "hasKeyframes", "Ignoring metadata for %s\n", "Video", "Audio", "Data", "libavformat/flvenc.c", "size", "aac bitstream error\n", "Text", "video/x-flv", "flv muxer", "flvflags", "FLV muxer flags", "aac_seq_header_detect", "segment", "ssegment", "image2", "Probing %s score:%d size:%d\n", "mime_type", "raw H.261", "h261 demuxer", "raw H.263", "h263 demuxer", "raw H.264 video", "h26l,h264,264,avc", "h264 demuxer", "raw HEVC video", "hevc,h265,265", "hevc demuxer", "date", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Jazz", "Metal", "New Age", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Gangsta", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Ballad", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "Error opening memory stream\n", "Incorrect BOM value\n", "Unknown encoding\n", "TCON", "(%d)", "TXXX", "encrypted", "encrypted and compressed", "extended header too long.", "version", "compression", "Skipping %s ID3v2 frame %s.\n", "USLT", "CHAP", "PRIV", "Failed to alloc %d bytes\n", "Failed to alloc %ld bytes\n", "Failed to uncompress tag: %d\n", "lyrics-%s%s%s", "GEOB", "APIC", "Failed to alloc %zu bytes\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "compilation", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "TPUB", "TRCK", "TSSE", "lyrics", "ljpg", "mpg1-img", "mpg2-img", "mpg4-img", "ffv1-img", "im24", "im32", "sunras", "yuv10", "esds object type id 0x%02x\n", "Specific MPEG4 header len=%d\n", "raw MPEG-4 video", "m4v demuxer", "right", "background", "anaglyph_cyan_red", "anaglyph_green_magenta", "LEAD_PERFORMER", "PART_NUMBER", "%s/%s", "1.2.3", "Invalid track number %d\n", "EBML block data error\n", "Unknown entry 0x%X\n", "Duplicate element\n", "Invalid element\n", "Read error\n", "EBML header parsing failed\n", "matroska", "webm", "%Y-%m-%d %H:%M:%S", "Unsupported encoding type", "enc_key_id", "V_MS/VFW/FOURCC", "A_MS/ACM", "A_QUICKTIME", "V_QUICKTIME", "mov FourCC not found %s.\n", "MAIN", "TTA1", "Invalid FLAC private data\n", "alpha_mode", "%s_%d", "D_WEBVTT/CAPTIONS", "D_WEBVTT/DESCRIPTIONS", "D_WEBVTT/METADATA", "incomplete attachment\n", "mimetype", "Unknown EBML doctype '%s'\n", "SMI ", "Failed to read file headers\n", "webm_dash_manifest_duration", "webm_dash_manifest_file_name", "webm_dash_manifest_cues_start", "webm_dash_manifest_cues_end", "webm_dash_manifest_bandwidth", "%s%lld", "webm_dash_manifest", "WebM DASH Manifest", "matroska,webm", "Matroska / WebM", "mkv,mk3d,mka,mks", "WebM DASH Manifest demuxer", "live", "(none)", "aac_adtstoasc", "libavformat/matroskaenc.c", "num < (1ULL << 56) - 1", "bytes >= needed_bytes", "bytes <= 8", "size >= 2", "encoding_tool", "D_WEBVTT/SUBTITLES", "Lavf", "Lavf57.25.100", "Initial padding is invalid\n", "Overflow in display width\n", "0x%llx", "%.*s\n%.*s\n%.*s", "end duration = %llu\n", "%02d:%02d:%012.9f", "DURATION", "Matroska", "video/x-matroska", "matroska muxer", "reserve_index_space", "cluster_size_limit", "cluster_time_limit", "dash", "dash_track_number", "allow_raw_vfw", "allow RAW VFW mode", "enda %d\n", "Duplicated STPS atom\n", "Atoms too deeply nested\n", "ignoring multiple glbl\n", "root", "%d/%d", "qt  ", "major_brand", "minor_version", "compatible_brands", "Duplicated SBGP atom\n", "frag flags 0x%x\n", "track[%i].stts.entries = %i\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "keyframe_count = %d\n", "Duplicated STSS atom\n", "track[%i].stsc.entries = %i\n", "Duplicated STSC atom\n", "ctype= %.4s (0x%08x)\n", "stype= %.4s\n", "handler_name", "Duplicated ELST atom\n", "track[%i].edit_count = %i\n", "Duplicated STCO atom\n", "duplicate senc atom\n", "systemBitrate=\"", "get_wav_header failed\n", "rotate", "sidx version %u", "sidx reference_type 1", "stream has mfra\n", "found tfra\n", "moof offset %llx\n", "time scale = %i\n", "[aax] file checksum == ", "[aax] mismatch in checksums!\n", "nclx", "nclc", "%s: pri %d trc %d matrix %d", " full %u", "type %.4s size %d\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "flags 0x%x entries %d\n", "first sample flags 0x%x\n", "calculated into dts %lld\n", "Failed to add index entry\n", "stream %d, found sample %d\n", "iTunSMPB", "%*X %X %X %X", "cdec", "truncated extradata\n", "size: %dx%d\n", "palette: ", "%06x%s", "stream %d, timescale not set\n", "wrong sample count\n", "error unaligned chunk\n", "chunk count %d\n", "wrong chunk count %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%lld\n", "Chapter %d not found in file\n", "timecode", "tmcd", "track[%i].ctts.entries = %i\n", "count=%d, duration=%d\n", "CTTS invalid\n", "dts shift %d\n", "location", "warning", "subtitle", "original_source", "playback_requirements", "performers", "producer", "original_artist", "make", "host_computer", "grouping", "original_format", "edit_date", "disclaimer", "director", "chapter", "season_number", "show", "network", "episode_sort", "episode_id", "media_type", "sort_show", "sort_name", "sort_composer", "sort_artist", "sort_album", "sort_album_artist", "rating", "purchase_date", "gapless_playback", "podcast", "synopsis", "keywords", "hd_video", "episode_uid", "description", "category", "account_id", "account_type", "quicktime_version", "premiere_version", "loci too short\n", "place name too long\n", "%+08.4f%+09.4f", "%s-%s", "Unknown cover type: 0x%x.\n", "%.4s", "HandBrake %d.%d.%d", "lang \"%3s\" ", "Error parsing cover art.\n", "Invalid sample field size %d\n", "Duplicated STSZ atom\n", "Multiple mdhd?\n", "Version %d", "invalid size %lld in stsd\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "audio channels %d\n", "version =%d, isom =%d\n", "reel_name", "stsd", "avc1", "hvc1", "hev1", "mp4s", "mov,mp4,m4a,3gp,3g2,mj2", "QuickTime / MOV", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "ignore_chapters", "use_mfra_for", "export_all", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "a=control:streamid=%d\r\n", "libavformat/movenc.c", "next_dts >= 0", "disk", "trkn", "stss", "stps", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "url ", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "dhlr", "handler", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "yrrc", "albm", "next_dts <= 2147483647", "Lucida Grande", "XDCAM", " HD422", " %d%c", "./libavcodec/put_bits.h", "DpxE", "gamma value %g\n", "writing gama value %d\n", "track->mode == 0x02", "fps %d is too large\n", "lpcm", "Lavc57.24.102", "2006/04/01 11:11:11", "perf", "titl", "auth", "gnre", "dscp", "cprt", "aART", "ldes", "tvsh", "tven", "tvnn", "tmpo", "pts has no value\n", "wide", "free", "audio", "ipod", "ismv", "cenc-aes-ctr", "palette:", "size:", "<head>\n", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%lld\">\n", "systemBitrate", "trackID", "CodecPrivateData", "H264", "FourCC", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "MP4 (MPEG-4 Part 14)", "video/mp4", "mp4 muxer", "mov muxer", "movflags", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "empty_moov", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "Disable Nero chapter atom", "default_base_moof", "frag_discont", "delay_moov", "global_sidx", "write_colr", "write_gama", "Write deprecated gama atom", "rtpflags", "RTP muxer flags", "latm", "rfc2190", "skip_rtcp", "h264_mode0", "Use mode 0 for H264 in RTP", "send_bye", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "frag_duration", "Maximum fragment duration", "min_frag_duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "video_track_timescale", "brand", "Override major brand", "use_editlist", "use edit list", "fragment_index", "mov_gamma", "gamma value for gama atom", "frag_interleave", "encryption_scheme", "encryption_key", "encryption_kid", "rtpo", "pad %d %d\n", "MP2/3 (MPEG audio layer 2/3)", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "IMKH", "Sofdec", "ofdec", "pes_ext %X is invalid\n", "none (ret=%d)\n", "pos=0x%llx dts=0x%llx %0.3f\n", "PES packet size mismatch\n", "changing packet size to %d\n", "timestamp_len > 64", "Predefined SLConfigDescriptor", "Filter: pid=0x%x\n", "libavformat/mpegts.c", "pos >= 188", "Skipping after seek\n", "SDT:\n", "tag: 0x%02x len=%d\n", "HDMV", "HDPR", "pid=%x pes_code=%#x\n", "tuning done\n", "Found tag %x expected %x\n", "pid %x is not PES\n", "PAT:\n", "sid=0x%x pid=0x%x\n", "reg_desc=%.4s\n", "PMT: len %i\n", "pcr_pid=0x%x\n", "program tag: 0x%02x len=%d\n", "mpegtsraw", "mpegts", "mpegtsraw demuxer", "resync_size", "compute_pcr", "ts_packetsize", "mpegts demuxer", "fix_teletext_pts", "scan_all_pmts", "scan and combine all PMTs", "skip_changes", "skip_clear", "skip clearing programs", "raw MPEG video", "mpegvideo demuxer", "%lld", "sample rate not set\n", "encoder-", "libavformat/mux.c", "((AVFrame *)pkt->data)->buf", "s->oformat", "OggS", "libavformat/oggdec.c", "stream_index < ogg->nstreams", "cannot find sync word\n", "Cannot identify new stream\n", "ogg_packet: curidx=%i\n", "Codec not found\n", "non-", "found headers\n", "CELT    ", "Unknown header type %X\n", "KW-DIRAC", "Invalid timing values.\n", "OpusTags", "OpusHead", "Opus", "fishead", "fisbone", "speex packet too small\n", "Speex   ", "METADATA_BLOCK_PICTURE", "CHAPTER%03d", "%02d:%02d:%02d.%03d", "NAME", "Invalid OggVP8 header packet", "Unknown OggVP8 version %d.%d\n", "OVP80", "AVFormatContext", "avioflags", "direct", "reduce buffering", "probesize", "set probing size", "formatprobesize", "packetsize", "set packet size", "fflags", "flush_packets", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "noparse", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "enable RTP MP4A-LATM payload", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "decryption key", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "f_strict", "max_ts_probe", "avoid_negative_ts", "disabled", "do not change timestamps", "make_non_negative", "make_zero", "format_whitelist", "libavformat/pcmdec.c", "Asterisk raw pcm", "sln demuxer", "channels", "mulaw", "PCM mu-law", "mulaw demuxer", "alaw", "PCM A-law", "alaw demuxer", "u8 demuxer", "u16le", "u16le demuxer", "u16be", "u16be demuxer", "u24le", "u24le demuxer", "u24be", "u24be demuxer", "u32le", "u32le demuxer", "u32be", "u32be demuxer", "s8 demuxer", "s16le", "s16le demuxer", "s16be", "s16be demuxer", "s24le", "s24le demuxer", "s24be", "s24be demuxer", "s32le", "s32le demuxer", "s32be", "s32be demuxer", "f32le", "f32le demuxer", "f32be", "f32be demuxer", "f64le", "f64le demuxer", "f64be", "f64be demuxer", "No such pixel format: %s.\n", "yuv,cif,qcif,rgb", "rawvideo demuxer", "set frame size", "yuv420p", "set frame rate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "wav header size < 14", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "libavformat/riffenc.c", "(start&1) == 0", "LIST", ".REC", "%d %d-%d %lld %d\n", "codecdata_length too large\n", "bad SIPR file flavor %d\n", "sub_packet_size is invalid\n", "extradata size %u too large\n", "Unknown interleaver %X\n", "logical-fileinfo", "Unsupported version\n", "Unsupported stream type %08x\n", "%X %X\n", "Invalid framerate\n", "codec_data_size %u < size %d\n", "MLTI with multiple (%d) MDPR", "tag=%c%c%c%c (%08x) size=%d\n", "%s = '%s'\n", "%s = '0x", "StreamCount", "%s = %d\n", "Skipping unsupported key: %s\n", "OpaqueData", "Duration", "Insufficient data\n", "Insufficient remaining len\n", "Failed to read %d bytes\n", "Impossibly sized packet\n", "cur slice %d, too large\n", "outside videobufsize\n", "Failed to fully read block\n", "libavformat/rmdec.c", "rm->audio_pkt_cnt > 0", "size %u is invalid\n", "RDT demuxer", "RealMedia", "payload_type", "%s://", "libavformat/utils.c", "*pkt_buffer", "probing stream %d pp:%d\n", "probed stream %d\n", "probed stream %d failed\n", "Format not on whitelist '%s'\n", "st->codec->ticks_per_frame", "s->iformat", "DTS %lli < %lli out of order\n", "pipe", "cache", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_limit <= pos_max", "read_seek: %d %s\n", "index < st->nb_index_entries", "rfps: %f %f\n", "mp4v", "st->request_probe <= 0", "Invalid stream index %d\n", "metadata", "st->index_entries", "unspecified frame size", "unspecified pixel format", "unspecified size", "no decodable DTS frames", "unspecified sample rate", "unspecified sample format", "unknown codec", "interrupted\n", "All info found\n", "s->nb_streams>0", "new_program: id=0x%04x\n", "stream index %d is not valid\n", "%0*d", " \t\r\n", "copy", "dvbsub", "loas", "raw VC-1", "vc1 demuxer", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "libswscale/alphablend.c", "libswscale/swscale_internal.h", "swscaler", "SWScaler", "sws_flags", "scaler flags", "fast_bilinear", "fast bilinear", "bilinear", "bicubic", "neighbor", "nearest neighbor", "area", "averaging area", "bicublin", "luma bicubic, chroma bilinear", "gauss", "Gaussian", "sinc", "lanczos", "Lanczos", "spline", "natural bicubic spline", "print_info", "print info", "accurate_rnd", "accurate rounding", "full_chroma_int", "full chroma interpolation", "full_chroma_inp", "full chroma input", "error_diffusion", "error diffusion dither", "srcw", "source width", "srch", "source height", "dstw", "destination width", "dsth", "destination height", "src_format", "source format", "dst_format", "destination format", "src_range", "source is full range", "dst_range", "destination is full range", "param0", "scaler param 0", "param1", "scaler param 1", "src_v_chr_pos", "src_h_chr_pos", "dst_v_chr_pos", "dst_h_chr_pos", "sws_dither", "set dithering algorithm", "leave choice to sws", "bayer", "bayer dither", "error diffusion", "a_dither", "arithmetic addition dither", "x_dither", "arithmetic xor dither", "gamma", "gamma correct scaling", "alphablend", "mode for alpha -> non alpha", "ignore alpha", "uniform_color", "blend onto a uniform color", "blend onto a checkerboard", "libswscale/output.c", "libswscale/slice.c", "libswscale/swscale.c", "Slices start in the middle!\n", "bad src image pointers\n", "bad dst image pointers\n", "libswscale/swscale_unscaled.c", "srcSliceH > 1", "unsupported bayer conversion\n", "libswscale/utils.c", "sizeFactor > 0", "filter2Size > 0", "minFilterSize > 0", "filterSize > 0", "(*filterPos)[i] >= 0", "(*filterPos)[i] < srcW", "sws: initFilter failed\n", "%1.3f ", "ehh flags invalid?!", "dithered ", "MMXEXT", "c->dstBpc > 14", "c->chrDstH <= dstH", "%s scaler, from %s to %s%s ", "using %s\n", "%dx%d -> %dx%d\n", "area averaging", "nearest neighbor / point", "bicubic spline", "libswscale/x86/swscale.c", "c->srcBpc == 16", "c->dstBpc>8", "libswresample/audioconvert.c", "libswresample/dither.c", "!s->preout.count", "SWResampler", "set input channel count", "in_channel_count", "set output channel count", "out_channel_count", "set used channel count", "used_channel_count", "set input sample rate", "in_sample_rate", "set output sample rate", "out_sample_rate", "set input sample format", "in_sample_fmt", "set output sample format", "out_sample_fmt", "set internal sample format", "internal_sample_fmt", "set input channel layout", "in_channel_layout", "set output channel layout", "out_channel_layout", "clev", "set center mix level", "center_mix_level", "slev", "set surround mix level", "surround_mix_level", "set surround mix Level", "lfe_mix_level", "set LFE mix level", "rmvol", "set rematrix volume", "rematrix_volume", "rematrix_maxval", "set rematrix maxval", "set flags", "swr_flags", "force resampling", "dither_scale", "set dither scale", "dither_method", "set dither method", "rectangular", "select rectangular dither", "triangular", "select triangular dither", "triangular_hp", "lipshitz", "shibata", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "filter_size", "phase_shift", "linear_interp", "enable linear interpolation", "set cutoff frequency ratio", "resample_cutoff", "resampler", "set resampling Engine", "select SW Resampler", "soxr", "select SoX Resampler", "precision", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "set matrixed stereo encoding", "select none", "dolby", "select Dolby", "dplii", "select Dolby Pro Logic II", "filter_type", "select swr filter type", "cubic", "select cubic", "blackman_nuttall", "kaiser", "select Kaiser windowed sinc", "kaiser_beta", "set swr Kaiser window beta", "output_sample_bits", "Treating %s as mono\n", "libswresample/rematrix.c", "Matrix coefficients:\n", "%s: ", "%s:%f ", "libswresample/resample.c", "a->planar", "Unsupported sample format\n", "Filter length too large\n", "libswresample/swresample.c", "out->planar == in->planar", "out->bps == in->bps", "out->ch_count == in->ch_count", "Failed to set option\n", "!s->in_ch_layout", "s->used_ch_count", "s->out.ch_count", "a->bps", "a->ch_count", "s->in.planar", "s->drop_output", "!s->resample", "discarding %d audio samples\n", "+infinity", "+inf", "-infinity", "-inf", "+nan", "-nan", "infinity", "libavutil/avstring.c", "tail_len <= 5", "'\\''", "%d channels", "3.0(back)", "quad", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(back)", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "hexadecagonal", "downmix", "front left", "front right", "front center", "low frequency", "back left", "back right", "front left-of-center", "front right-of-center", "back center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "detected %d logical cores\n", "mmx2", "mmxext", "sse2", "sse2slow", "sse3", "sse3slow", "ssse3", "atom", "sse4.1", "sse4.2", "avxslow", "fma3", "fma4", "avx2", "bmi1", "bmi2", "3dnow", "3dnowext", "cmov", "aesni", "pentium2", "pentium3", "pentium4", "athlon", "athlonxp", "cpuflags", "Error number %d occurred", "BSF_NOT_FOUND", "Bitstream filter not found", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "FILTER_NOT_FOUND", "Filter not found", "INPUT_CHANGED", "Input changed", "INVALIDDATA", "MUXER_NOT_FOUND", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "OUTPUT_CHANGED", "Output changed", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "INPUT_AND_OUTPUT_CHANGED", "Input and output changed", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "Server returned 404 Not Found", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "Missing ')' in '%s'\n", "sinh", "cosh", "tanh", "asin", "acos", "time", "squish", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "clip", "Unknown function in '%s'\n", "atan", "QP2LAMBDA", "Eval", "Cannot read file '%s': %s\n", "Error occurred in mmap(): %s\n", "/tmp/%sXXXXXX", "FILE", "Failed to set close on exec\n", "AVPanScan", "Stereoscopic 3d metadata", "AVMatrixEncoding", "AVReplayGain", "3x3 displaymatrix", "Active format description", "Motion vectors", "Skip samples", "Audio service type", "Mastering display metadata", "GOP timecode", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA512/224", "SHA512/256", "SHA384", "SHA512", "CRC32", "adler32", "libavutil/imgutils.c", "av_image_get_linesize failed\n", "IMGUTILS", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "256color", "quiet", "verbose", "info", "fatal", "panic", "[%s @ %p] ", "[%s] ", "%s%s%s%s", "libavutil/lzo.c", "cnt >= 0", "libavutil/mathematics.c", "duration >= 0", "libavutil/mem_internal.h", "libavutil/opt.c", "size >= 25", "INT64_MAX", "INT64_MIN", "%lld:%02d:%02d.%06d", "%d:%02d.%06d", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "-FLT_MAX", "-FLT_MIN", "DBL_MAX", "DBL_MIN", "-DBL_MAX", "-DBL_MIN", "sample", "0x%08X", "%02X", "0x%02x%02x%02x%02x", "%d%*1[:/]%d%c", "true,y,yes,enable,enabled,on", "pixel format", "sample format", "Invalid option type.\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "pixel", "  %s%-17s ", "<flags>", "%-12s ", "<int>", "<int64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", "<boolean>", " (from ", " to ", " (default ", "%llX", "\"%s\"", "     %-15s ", "%s AVOptions:\n", "Invalid separator(s) found.", "%d:%d%c", "ntsc", "qntsc", "qpal", "sntsc", "spal", "ntsc-film", "bikeshed", "0123456789ABCDEFabcdef", "Cannot find color '%s'\n", "%H:%M:%S", "%Y - %m - %d", "%Y%m%d", "%H%M%S", "%J:%M:%S", "%M:%S", "%H:%M", "%H%M", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "sqcif", "qcif", "4cif", "16cif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "2kdci", "2kflat", "2kscope", "4kdci", "4kflat", "4kscope", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "bgra", "rgba", "rgb32", "bgr32", "%s%s", "name nb_components nb_bits", "%-11s %7d %10d", "yuvj", "libavutil/pixdesc.c", "d->log2_chroma_w <= 3", "d->log2_chroma_h <= 3", "d->nb_components <= 4", "d->name && d->name[0]", "c->step >= c->depth", "8*c->step >= c->depth", "bayer_", "tmp[0] == 0 && tmp[1] == 0", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "iec61966-2-4", "bt1361e", "iec61966-2-1", "bt2020-10", "bt2020-20", "smpte428-1", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "gray8,y8", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "0rgb", "rgb0", "0bgr", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "name   depth", "%-6s   %2d ", "%s%02d:%02d:%02d%c%02d", "%02u:%02u:%02u%c%02u", "%d:%d:%d%c%d", "3.0.1", "data", "attachment", "libavutil/utils.c", "!\"valid element size\"", "AuthenticAMD", "GenuineIntel", "@33*@", "6<5?", "))/113//+++((", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "Gray", "TMPGEXS", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "WwvfeUDDDDDD3DCDDEVfwP", "HwvfeUUDDC3334EUUfgwx`", "WgfveUDTDCC4CDDDEEUgw`", "WxwffUUDDC3#3DEUVffwx`", "I420", "IYUV", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUYVw", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "\fRGBt", "RBA@v", "BRA@s", "@RBAu", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\tE", "\t\u000b3YP", "Y3\n\tO", "\t\n3YL", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "I422!", "I444\f", "J420\r", "J422\"", "J444Z", "YUVA#", "I40AY", "RGB2.", "RV15,", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "I4AB:", "I4FL;", "I4FB,", "\t\t\t\t\t\t\t\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "\t\t\t\t\t\t\t\t\t", "@0` P00@@@P0 `0@@P `0P@0P@P0` P@", "FFmpeg version 3.0.1", "Index value %d out of range (0 - %d) for %s at %s:%i\n", "asf_read_packet", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "c608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "ssmv", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "text/plain", "application/x-truetype-font", "application/x-font", "application/vnd.ms-opentype", "binary", "image/gif", "image/jpeg", "image/png", "image/tiff", "A_AAC", "A_AC3", "A_ALAC", "A_DTS", "A_EAC3", "A_FLAC", "A_MLP", "A_MPEG/L2", "A_MPEG/L1", "A_MPEG/L3", "A_OPUS", "A_OPUS/EXPERIMENTAL", "A_PCM/FLOAT/IEEE", "A_PCM/FLOAT/IEEE", "A_PCM/INT/BIG", "A_PCM/INT/BIG", "A_PCM/INT/BIG", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_QUICKTIME/QDM2", "A_REAL/14_4", "A_REAL/28_8", "A_REAL/ATRC", "A_REAL/COOK", "A_REAL/SIPR", "A_TRUEHD", "A_TTA1", "A_VORBIS", "A_WAVPACK4", "D_WEBVTT/SUBTITLES", "D_WEBVTT/CAPTIONS", "D_WEBVTT/DESCRIPTIONS", "D_WEBVTT/METADATA", "S_TEXT/UTF8", "S_TEXT/UTF8", "S_TEXT/ASCII", "S_TEXT/ASS", "S_TEXT/SSA", "S_ASS", "S_SSA", "S_VOBSUB", "S_DVBSUB", "S_HDMV/PGS", "V_DIRAC", "V_MJPEG", "V_MPEG1", "V_MPEG2", "V_MPEG4/ISO/ASP", "V_MPEG4/ISO/AP", "V_MPEG4/ISO/SP", "V_MPEG4/ISO/AVC", "V_MPEGH/ISO/HEVC", "V_MPEG4/MS/V3", "V_PRORES", "V_REAL/RV10", "V_REAL/RV20", "V_REAL/RV30", "V_REAL/RV40", "V_SNOW", "V_THEORA", "V_UNCOMPRESSED", "V_VP8", "V_VP9", "avc1k", "VP6A]", "VP6F", "avc1\r", "mp4a", "tx3g", "avc1\r", "text", "drac", "HEVC", "VC-1", "BBCD", "U263\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "mjpa\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "RVTRE", "RV30F", "dnet", "LSD:", ".R1M", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "s16p", "s32p", "fltp", "dblp", "<fBBf<", "fffffff", "fff$", "000`", "<00000000<", "<\f\f\f\f\f\f\f\f<", "<ll>", "8ll8", "8ll8", "|||||||", "<fBBf<", "0xx00", "x00000x", "x`````x", "p000x", "p00000x", "p000x", "p000x", "p000x", "<ll>", "8ll8", "8ll8", "<<<<"], "stringidentifiers": ["WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "webm_dash_manifest_initialization_range", "webm_dash_manifest_track_number", "webm_dash_manifest_cluster_keyframe", "webm_dash_manifest_cue_timestamps", "aac_latm", "dual_mono_mode", "auto", "autoselection", "main", "both", "eac3", "drc_scale", "heavy_compr", "target_level", "dmix_mode", "ltrt_cmixlev", "ltrt_surmixlev", "loro_cmixlev", "loro_surmixlev", "alac", "extra_bits_bug", "max_samples", "AVDCT", "fastint", "altivec", "faan", "idct", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "HuffYUV", "cyuv", "h264", "indeo3", "theora", "Theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "Cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "Snow", "tscc", "ulti", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "LOCO", "wnv1", "aasc", "indeo2", "fraps", "Fraps", "truemotion2", "cscd", "CamStudio", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "indeo4", "indeo5", "mimic", "Mimic", "escape124", "daala", "Daala", "dirac", "Dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "bmv_video", "vble", "dxtory", "Dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "xface", "smvjpeg", "Go2Meeting", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "screenpresso", "Screenpresso", "wrapped_avframe", "rscc", "alias_pix", "ansi", "brender_pix", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "targa", "tdsc", "TDSC", "tiff", "vc1image", "webp", "WebP", "wmv3image", "apng", "cfhd", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_thp_le", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "adpcm_vima", "adpcm_psx", "adpcm_aica", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "vorbis", "Vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "WavPack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "voxware", "nellymoser", "musepack8", "speex", "Speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "sipr", "twinvq", "truehd", "TrueHD", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "qdmc", "celt", "g723_1", "dss_sp", "g729", "bmv_audio", "ralf", "ilbc", "wavesynth", "sonic", "Sonic", "sonicls", "opus", "comfortnoise", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "dvd_subtitle", "dvb_subtitle", "text", "xsub", "XSUB", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "core_only", "use_buggy_lpc", "L263", "S263", "GEOV", "GEOX", "stereo_mode", "Q264", "is_avc", "nal_length_size", "enable_er", "private_spspps_buf", "h264_mp4toannexb", "REDU", "CONSTR", "LPAR", "weighted", "CABAC", "CAVLC", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "mono", "TEMP", "SPAT", "apply_defdispwin", "TRAIL_N", "TRAIL_R", "TSA_N", "TSA_R", "STSA_N", "STSA_R", "RADL_N", "RADL_R", "RASL_N", "RASL_R", "BLA_W_LP", "BLA_W_RADL", "BLA_N_LP", "IDR_W_RADL", "IDR_N_LP", "CRA_NUT", "EOS_NUT", "EOB_NUT", "FD_NUT", "SEI_PREFIX", "SEI_SUFFIX", "desc", "SEPB1", "SEPB2", "ZYGO", "VCR2", "BW10", "SLIF", "mpegvideo", "ffmpeg", "XVIX", "UMP4", "XVID", "RMP4", "ZMP4", "SIPP", "DIVX", "Reserved", "reserved", "WV1F", "QMP4", "MP4S", "quarter_sample", "divx_packed", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "msmpeg4", "NULL", "AVSubtitleRect", "type", "flags", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "format", "channel_layout", "sample_rate", "AVCodecContext", "unaligned", "qpel", "loop", "qscale", "input_preserved", "pass1", "pass2", "gray", "emu_edge", "psnr", "truncated", "ildct", "low_delay", "global_header", "bitexact", "ilme", "cgop", "output_corrupt", "fast", "flags2", "noout", "ignorecrop", "local_header", "chunks", "showall", "export_mvs", "skip_manual", "me_method", "zero", "full", "epzs", "tesa", "phods", "iter", "time_base", "cutoff", "frame_size", "frame_number", "delay", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "rc_strategy", "b_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "strict", "very", "normal", "unofficial", "experimental", "b_qoffset", "err_detect", "crccheck", "bitstream", "buffer", "explode", "ignore_err", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "minrate", "bufsize", "rc_buf_aggressivity", "i_qfactor", "i_qoffset", "rc_init_cplx", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "deblock", "favor_inter", "bits_per_coded_sample", "pred", "left", "plane", "median", "aspect", "debug", "pict", "mb_type", "dct_coeff", "green_metadata", "skip", "startcode", "mmco", "bugs", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "nomc", "vismv", "debug_mv", "cmp_func", "subcmp", "mbcmp", "ildctcmp", "dia_size", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "chroma", "pre_dia_size", "subq", "dtg_active_format", "me_range", "ibias", "pbias", "global_quality", "coder", "deflate", "context", "slice_flags", "xvmc_acceleration", "bits", "stream_codec_tag", "sc_threshold", "lmin", "lmax", "rc_init_occupancy", "error", "threads", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "level", "lowres", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "default", "noref", "bidir", "nokey", "nointra", "bidir_refine", "brd_scale", "keyint_min", "refs", "chromaoffset", "trellis", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_primaries_type", "bt709", "unspecified", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "film", "Film", "bt2020", "smpte428_1", "color_trc", "color_trc_type", "gamma22", "gamma28", "linear", "Linear", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "smpte2084", "colorspace", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "mpeg", "jpeg", "chroma_sample_location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "bottomleft", "bottom", "Bottom", "log_level_offset", "slices", "thread_type", "slice", "frame", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "field_order", "progressive", "dump_separator", "codec_whitelist", "pixel_format", "video_size", "Simple", "Main", "Complex", "Advanced", "High", "Rext", "Baseline", "Extended", "real_144", "real_288", "BottomUp", "yuv2", "I420", "rawdec", "audioresample", "ReSampleContext", "unknown_codec", "ff_avcodec_locked", "encoder", "decoder", "book_idx", "mode_number", "Upscaling", "APETAGEX", "album_artist", "album", "Author", "artist", "Description", "comment", "composer", "encoded_by", "genre", "language", "filename", "disc", "publisher", "track", "service_provider", "service_name", "asf_st", "title", "AspectRatioX", "AspectRatioY", "author", "copyright", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "encryption", "no_resync_search", "export_xmp", "GAB2", "MMES", "creation_time", "maker", "model", "list", "strh", "video", "ISFT", "PotEncoder", "Axan", "strn", "use_odml", "subfile", "start", "protocol_whitelist", "file", "URLContext", "AVIOContext", "palette", "checkerboard", "effects", "dialogue", "comentary", "emergency", "karaoke", "Output", "from", "Input", "name", "truncate", "blocksize", "fLaC", "true", "false", "keyframes", "times", "filepositions", "duration", "videodatarate", "audiodatarate", "datastream", "videocodecid", "audiocodecid", "audiosamplerate", "audiosamplesize", "stereo", "metadatacreator", "MEGA", "filesize", "framerate", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "Encoder", "live_flv", "live_flvdec", "flvdec", "flv_metadata", "datasize", "lasttimestamp", "totalframes", "hasAudio", "hasVideo", "hasCuePoints", "hasMetadata", "hasKeyframes", "Video", "Audio", "Data", "size", "Text", "flvflags", "aac_seq_header_detect", "segment", "ssegment", "image2", "mime_type", "date", "Blues", "Country", "Dance", "Disco", "Funk", "Grunge", "Jazz", "Metal", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Gangsta", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Folk", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Ballad", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "TCON", "TXXX", "encrypted", "version", "compression", "USLT", "CHAP", "PRIV", "GEOB", "APIC", "TYER", "TDAT", "TIME", "Conductor", "Composer", "Illustration", "compilation", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "TPUB", "TRCK", "TSSE", "lyrics", "ljpg", "im24", "im32", "sunras", "yuv10", "right", "background", "anaglyph_cyan_red", "anaglyph_green_magenta", "LEAD_PERFORMER", "PART_NUMBER", "matroska", "webm", "enc_key_id", "A_QUICKTIME", "V_QUICKTIME", "MAIN", "TTA1", "alpha_mode", "mimetype", "webm_dash_manifest_duration", "webm_dash_manifest_file_name", "webm_dash_manifest_cues_start", "webm_dash_manifest_cues_end", "webm_dash_manifest_bandwidth", "webm_dash_manifest", "live", "aac_adtstoasc", "encoding_tool", "Lavf", "DURATION", "Matroska", "reserve_index_space", "cluster_size_limit", "cluster_time_limit", "dash", "dash_track_number", "allow_raw_vfw", "root", "major_brand", "minor_version", "compatible_brands", "handler_name", "rotate", "nclx", "nclc", "iTunSMPB", "cdec", "timecode", "tmcd", "location", "warning", "subtitle", "original_source", "playback_requirements", "performers", "producer", "original_artist", "make", "host_computer", "grouping", "original_format", "edit_date", "disclaimer", "director", "chapter", "season_number", "show", "network", "episode_sort", "episode_id", "media_type", "sort_show", "sort_name", "sort_composer", "sort_artist", "sort_album", "sort_album_artist", "rating", "purchase_date", "gapless_playback", "podcast", "synopsis", "keywords", "hd_video", "episode_uid", "description", "category", "account_id", "account_type", "quicktime_version", "premiere_version", "reel_name", "stsd", "avc1", "hvc1", "hev1", "mp4s", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "ignore_chapters", "use_mfra_for", "export_all", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "disk", "trkn", "stss", "stps", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "dhlr", "handler", "yrrc", "albm", "XDCAM", "DpxE", "lpcm", "perf", "titl", "auth", "gnre", "dscp", "cprt", "aART", "ldes", "tvsh", "tven", "tvnn", "tmpo", "wide", "free", "audio", "ipod", "ismv", "systemBitrate", "trackID", "CodecPrivateData", "H264", "FourCC", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "movflags", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "default_base_moof", "frag_discont", "delay_moov", "global_sidx", "write_colr", "write_gama", "rtpflags", "latm", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "frag_duration", "min_frag_duration", "frag_size", "ism_lookahead", "video_track_timescale", "brand", "use_editlist", "fragment_index", "mov_gamma", "frag_interleave", "encryption_scheme", "encryption_key", "encryption_kid", "rtpo", "usetoc", "IMKH", "Sofdec", "ofdec", "HDMV", "HDPR", "mpegtsraw", "mpegts", "resync_size", "compute_pcr", "ts_packetsize", "fix_teletext_pts", "scan_all_pmts", "skip_changes", "skip_clear", "OggS", "OpusTags", "OpusHead", "Opus", "fishead", "fisbone", "METADATA_BLOCK_PICTURE", "NAME", "OVP80", "AVFormatContext", "avioflags", "direct", "probesize", "formatprobesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "format_whitelist", "channels", "mulaw", "alaw", "u16le", "u16be", "u24le", "u24be", "u32le", "u32be", "s16le", "s16be", "s24le", "s24be", "s32le", "s32be", "f32le", "f32be", "f64le", "f64be", "yuv420p", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "LIST", "StreamCount", "OpaqueData", "Duration", "RealMedia", "payload_type", "pipe", "cache", "mp4v", "metadata", "copy", "dvbsub", "loas", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "swscaler", "SWScaler", "sws_flags", "fast_bilinear", "bilinear", "bicubic", "neighbor", "area", "bicublin", "gauss", "Gaussian", "sinc", "lanczos", "Lanczos", "spline", "print_info", "accurate_rnd", "full_chroma_int", "full_chroma_inp", "error_diffusion", "srcw", "srch", "dstw", "dsth", "src_format", "dst_format", "src_range", "dst_range", "param0", "param1", "src_v_chr_pos", "src_h_chr_pos", "dst_v_chr_pos", "dst_h_chr_pos", "sws_dither", "bayer", "a_dither", "x_dither", "gamma", "alphablend", "uniform_color", "MMXEXT", "SWResampler", "in_channel_count", "out_channel_count", "used_channel_count", "in_sample_rate", "out_sample_rate", "in_sample_fmt", "out_sample_fmt", "internal_sample_fmt", "in_channel_layout", "out_channel_layout", "clev", "center_mix_level", "slev", "surround_mix_level", "lfe_mix_level", "rmvol", "rematrix_volume", "rematrix_maxval", "swr_flags", "dither_scale", "dither_method", "rectangular", "triangular", "triangular_hp", "lipshitz", "shibata", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "filter_size", "phase_shift", "linear_interp", "resample_cutoff", "resampler", "soxr", "precision", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "dolby", "dplii", "filter_type", "cubic", "blackman_nuttall", "kaiser", "kaiser_beta", "output_sample_bits", "infinity", "quad", "hexagonal", "octagonal", "hexadecagonal", "downmix", "LFE2", "mmx2", "mmxext", "sse2", "sse2slow", "sse3", "sse3slow", "ssse3", "atom", "avxslow", "fma3", "fma4", "avx2", "bmi1", "bmi2", "cmov", "aesni", "pentium2", "pentium3", "pentium4", "athlon", "athlonxp", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INPUT_CHANGED", "INVALIDDATA", "MUXER_NOT_FOUND", "OPTION_NOT_FOUND", "OUTPUT_CHANGED", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "INPUT_AND_OUTPUT_CHANGED", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "sinh", "cosh", "tanh", "asin", "acos", "time", "squish", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "clip", "atan", "QP2LAMBDA", "Eval", "FILE", "AVPanScan", "AVMatrixEncoding", "AVReplayGain", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA384", "SHA512", "CRC32", "adler32", "IMGUTILS", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "quiet", "verbose", "info", "fatal", "panic", "INT64_MAX", "INT64_MIN", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "DBL_MAX", "DBL_MIN", "sample", "pixel", "ntsc", "qntsc", "qpal", "sntsc", "spal", "bikeshed", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "sqcif", "qcif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "bgra", "rgba", "rgb32", "bgr32", "yuvj", "bayer_", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "bt1361e", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "rgb0", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "data", "attachment", "AuthenticAMD", "GenuineIntel", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "Gray", "TMPGEXS", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "WwvfeUDDDDDD3DCDDEVfwP", "I420", "IYUV", "YUYVw", "BGR0C", "J444Z", "I40AY", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "asf_read_packet", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "c608", "sac3", "alac", "twos", "lpcm", "ssmv", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "binary", "A_AAC", "A_AC3", "A_ALAC", "A_DTS", "A_EAC3", "A_FLAC", "A_MLP", "A_OPUS", "A_TRUEHD", "A_TTA1", "A_VORBIS", "A_WAVPACK4", "S_ASS", "S_SSA", "S_VOBSUB", "S_DVBSUB", "V_DIRAC", "V_MJPEG", "V_MPEG1", "V_MPEG2", "V_PRORES", "V_SNOW", "V_THEORA", "V_UNCOMPRESSED", "V_VP8", "V_VP9", "avc1k", "VP6F", "mp4a", "tx3g", "text", "drac", "HEVC", "BBCD", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "RVTRE", "RV30F", "dnet", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "s16p", "s32p", "fltp", "dblp", "fffffff", "x00000x", "p000x", "p00000x", "p000x", "p000x", "p000x"], "debugstrings": ["H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "H.263+ / H.263-1998 / H.263 version 2", "On2 VP6 (Flash version, with alpha channel)", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "Audio sample format conversion failed\n", "libavcodec license: LGPL version 2.1 or later", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Unsupported file version - %d.%02d\n", "Unsupported tag version. (>=%d)\n", "configurationVersion:                %u\n", "EBML header using unsupported features\n(EBML version %llu, doctype %s, doc version %llu)\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "sid=0x%x sec_num=%d/%d version=%d\n", "ogg page, unsupported version\n", "Unknown skeleton version %d.%d\n", "Unsupported Name value property version\n", "libavformat license: LGPL version 2.1 or later", "unsupported planar RGB conversion %s -> %s\n", "unsupported conversion to planar RGB %s -> %s\n", "libswscale license: LGPL version 2.1 or later", "No accelerated colorspace conversion found from %s to %s.\n", "libswresample license: LGPL version 2.1 or later", "libavutil license: LGPL version 2.1 or later", "On2 VP6 (Flash version)", "subpacket[%i].cookversion=%x\n", "Cook version %d", "XLL stream version %d", "Unknown version %X", "RV1/2 version", "version", "minor_version", "sidx version %u", "quicktime_version", "premiere_version", "Version %d", "version =%d, isom =%d\n", "Unknown OggVP8 version %d.%d\n", "Unsupported version\n", "unsupported bayer conversion\n", "GPSVersionID", "FFmpeg version 3.0.1", "GCC: (GNU) 4.8"], "localsymbols": [""], "dependencies": ["libdl.so", "libc.so", "libstdc++.so", "libz.so", "libm.so"], "elfname": "libav.so"}