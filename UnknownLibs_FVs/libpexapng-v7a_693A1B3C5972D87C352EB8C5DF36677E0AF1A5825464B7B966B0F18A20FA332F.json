{"globalvars": ["_ZTVN10__cxxabiv117__class_type_infoE", "_ZTSN9__gnu_cxx20recursive_init_errorE", "_ZTSSt9exception", "_ZTVSt13bad_exception", "_ZTIN9__gnu_cxx20recursive_init_errorE", "_ZTISt13bad_exception", "_ZTSN10__cxxabiv115__forced_unwindE", "_ZTVN10__cxxabiv119__foreign_exceptionE", "_ZTISt8bad_cast", "_ZTSSt13bad_exception", "_ZTVN9__gnu_cxx20recursive_init_errorE", "_ZTVSt9bad_alloc", "_ZTIN10__cxxabiv115__forced_unwindE", "_ZTISt10bad_typeid", "_ZTSSt8bad_cast", "_ZTVN10__cxxabiv115__forced_unwindE", "_ZTSSt9bad_alloc", "_ZTIN10__cxxabiv117__class_type_infoE", "_ZTSN10__cxxabiv117__class_type_infoE", "_ZTVSt8bad_cast", "_ZTIN10__cxxabiv119__foreign_exceptionE", "_ZTVSt10bad_typeid", "_ZTVN10__cxxabiv120__si_class_type_infoE", "_ZTVSt9exception", "_ZN10__cxxabiv120__unexpected_handlerE", "_ZN10__cxxabiv119__terminate_handlerE", "_ZTSN10__cxxabiv119__foreign_exceptionE", "_ZTIN10__cxxabiv120__si_class_type_infoE", "_ZTSSt10bad_typeid", "_ZSt7nothrow", "_ZTISt9exception", "_ZTSN10__cxxabiv120__si_class_type_infoE", "_ZTISt9bad_alloc"], "importedglobals": ["__stack_chk_guard", "__sF"], "importedfunctions": ["__android_log_print", "strncmp", "abort", "syscall", "realloc", "fputs", "AndroidBitmap_getInfo", "strlen", "AndroidBitmap_unlockPixels", "memmove", "fstat", "setjmp", "dup", "inflateReset", "adler32", "rewind", "pow", "raise", "memcmp", "memset", "__stack_chk_fail", "write", "inflateInit_", "free", "strerror", "sprintf", "floor", "inflateEnd", "fclose", "inflate", "longjmp", "strcmp", "fdopen", "fread", "memcpy", "fputc", "crc32", "malloc", "fwrite", "calloc", "fprintf", "AndroidBitmap_lockPixels", "vsnprintf"], "exportedfunctions": ["_Znwj", "_ZNSt8bad_castD0Ev", "_ZSt14set_unexpectedPFvvE", "_Unwind_Resume_or_Rethrow", "_ZNSt9exceptionD0Ev", "_ZN10__cxxabiv117__class_type_infoD0Ev", "__gnu_Unwind_Backtrace", "__gnu_Unwind_Restore_WMMXD", "_ZN10__cxxabiv115__forced_unwindD2Ev", "_ZN10__cxxabiv120__si_class_type_infoD2Ev", "__restore_core_regs", "___Unwind_Backtrace", "___Unwind_RaiseException", "_Unwind_VRS_Pop", "_ZdaPv", "_ZNSt10bad_typeidD1Ev", "_ZN10__cxxabiv112__unexpectedEPFvvE", "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", "__gcclibcxx_demangle_callback", "__gnu_Unwind_Restore_VFP_D_16_to_31", "__gnu_Unwind_Save_VFP_D_16_to_31", "_Unwind_VRS_Set", "__ashldi3", "_ZNSt15__exception_ptr13exception_ptrC1Ev", "_ZNSt13bad_exceptionD2Ev", "__gnu_Unwind_Restore_WMMXC", "_ZSt9terminatev", "_ZN9__gnu_cxx27__verbose_terminate_handlerEv", "_ZN10__cxxabiv119__foreign_exceptionD0Ev", "_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_", "_ZNKSt15__exception_ptr13exception_ptrntEv", "_Unwind_GetDataRelBase", "_Znaj", "_ZNSt9bad_allocD2Ev", "_ZN10__cxxabiv115__forced_unwindD1Ev", "_ZN10__cxxabiv117__class_type_infoD2Ev", "___Unwind_Resume_or_Rethrow", "__gnu_ldivmod_helper", "_ZSt13get_terminatev", "_ZNSt8bad_castD2Ev", "__gnu_Unwind_Save_VFP_D", "_ZSt10unexpectedv", "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", "_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv", "JNI_OnLoad", "___Unwind_Resume", "_ZNSt15__exception_ptr13exception_ptrC1EMS0_FvvE", "_Unwind_Backtrace", "_ZNSt15__exception_ptr13exception_ptr18_M_safe_bool_dummyEv", "_ZN10__cxxabiv119__foreign_exceptionD1Ev", "_Unwind_GetLanguageSpecificData", "_ZN10__cxxabiv115__forced_unwindD0Ev", "_Unwind_GetRegionStart", "_ZNSt10bad_typeidD0Ev", "___Unwind_ForcedUnwind", "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", "_ZSt13set_terminatePFvvE", "__gnu_Unwind_Save_VFP", "_ZNSt15__exception_ptr13exception_ptrD2Ev", "_ZN10__cxxabiv120__si_class_type_infoD0Ev", "_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE", "_ZNSt13bad_exceptionD0Ev", "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", "_Unwind_RaiseException", "_ZNKSt10bad_typeid4whatEv", "restore_core_regs", "__lshrdi3", "_ZNSt15__exception_ptrneERKNS_13exception_ptrES2_", "_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE", "__gnu_unwind_execute", "_ZSt17current_exceptionv", "_ZNSt13bad_exceptionD1Ev", "_ZN10__cxxabiv119__foreign_exceptionD2Ev", "_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj", "__gnu_end_cleanup", "_ZN10__cxxabiv120__si_class_type_infoD1Ev", "_Unwind_GetTextRelBase", "_ZNSt9exceptionD1Ev", "_ZNSt15__exception_ptr13exception_ptrC2EMS0_FvvE", "_ZNSt15__exception_ptr13exception_ptrC1EPv", "_ZN9__gnu_cxx20recursive_init_errorD2Ev", "_ZN9__gnu_cxx20recursive_init_errorD0Ev", "__gnu_uldivmod_helper", "_Unwind_GetCFA", "_Unwind_VRS_Get", "__gnu_unwind_frame", "_Unwind_Resume", "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", "_ZSt15set_new_handlerPFvvE", "__udivdi3", "_ZN10__cxxabiv117__class_type_infoD1Ev", "_ZNSt9bad_allocD1Ev", "__divsi3", "__gnu_Unwind_RaiseException", "_ZSt15get_new_handlerv", "__gnu_Unwind_Save_WMMXC", "_ZNSt15__exception_ptr13exception_ptrC1ERKS0_", "_ZNKSt9bad_alloc4whatEv", "__gnu_Unwind_Resume_or_Rethrow", "_ZSt14get_unexpectedv", "_ZNSt8bad_castD1Ev", "__gnu_Unwind_Restore_VFP", "_ZNKSt8bad_cast4whatEv", "_Unwind_ForcedUnwind", "_ZNSt15__exception_ptr13exception_ptrC2ERKS0_", "_ZN10__cxxabiv111__terminateEPFvvE", "__udivsi3", "__gnu_Unwind_Restore_VFP_D", "_ZNKSt15__exception_ptr13exception_ptrcvMS0_FvvEEv", "_ZNSt15__exception_ptreqERKNS_13exception_ptrES2_", "_ZNSt15__exception_ptr13exception_ptrC2EPv", "_ZSt18uncaught_exceptionv", "_ZNSt10bad_typeidD2Ev", "__gnu_Unwind_Save_WMMXD", "_ZNSt9exceptionD2Ev", "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", "_Unwind_DeleteException", "__divdi3", "_ZNKSt9exception4whatEv", "_ZNSt15__exception_ptr13exception_ptraSERKS0_", "_ZN9__gnu_cxx20recursive_init_errorD1Ev", "_ZNSt9bad_allocD0Ev", "_ZdlPv", "_ZNKSt13bad_exception4whatEv", "_ZNSt15__exception_ptr13exception_ptrD1Ev", "__gnu_Unwind_Resume", "_Unwind_Complete", "_ZNSt15__exception_ptr13exception_ptrC2Ev"], "allstrings": ["PexodeJNI", "JNIEnv cannot be null", "byte array cannot be null", "byte array cannot be less than 0", "byte length cannot be less than 1", "offset moved length exceeded total size", "cannot allocate memory for reading", "broken file descriptor", "file size is 0", "dup file descriptor failed", "could not open file", "Failed to get the environment using GetEnv()\n", "gRewindStream_readMethodID call error, size=%d", "GetByteArrayRegion call error, size=%d, read=%d", "rewind stream cannot be null", "java/lang/IllegalStateException", "java/lang/OutOfMemoryError", "1.6.17", "png start processing failed", "png data processing failed", "png finish failed", "descriptor", "mNativePtr", "<init>", "(J)V", "rewind", "read", "([BII)I", "(JI)V", "APngImage Native already disposed", "APngFrame Native Already disposed", "Bad bitmap info", "Width or height is negative", "Bitmap width or height is too small", "Wrong color format", "Bad bitmap pixels", "Cannot alloc decode memory", "APngFrame Native already disposed", "IDAT", "nativeGetDurationMs", "nativeGetWidth", "nativeGetHeight", "nativeGetXOffset", "nativeGetYOffset", "nativeGetDisposalMode", "nativeGetBlendMode", "nativeRenderFrame", "(IILandroid/graphics/Bitmap;)V", "nativeDispose", "nativeFinalize", "nativeCreateFromBytes", "([BII)Lcom/taobao/pexode/decoder/APngImage;", "nativeCreateFromFd", "(Ljava/io/FileDescriptor;)Lcom/taobao/pexode/decoder/APngImage;", "nativeCreateFromRewindableStream", "(Lcom/taobao/pexode/entity/RewindableStream;[B)Lcom/taobao/pexode/decoder/APngImage;", "nativeGetDuration", "nativeGetFrameCount", "nativeGetFrameDurations", "()[I", "nativeGetLoopCount", "nativeGetFrame", "(I)Lcom/taobao/pexode/decoder/APngFrame;", "nativeGetSizeInBytes", "nativeLoadedVersionTest", "INFO", "IHDR", "TEMP", "com/taobao/pexode/entity/RewindableStream", "java/io/FileDescriptor", "com/taobao/pexode/decoder/APngFrame", "com/taobao/pexode/decoder/APngImage", "Potential overflow in png_zalloc()", "inconsistent chromaticities", "profile '", "Too many bytes for PNG signature", "Application built with libpng-", " but running with ", "Unknown freer parameter in png_data_freer", " +0000", "Ignoring invalid time value", "\nlibpng version 1.6.17 - March 26, 2015\nCopyright (c) 1998-2015 Glenn Randers-Pehrson\nCopyright (c) 1996-1997 Andreas Dilger\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n", " libpng version 1.6.17 - March 26, 2015\n\n", "unexpected zlib return code", "unexpected end of LZ stream", "missing LZ dictionary", "zlib IO error", "bad parameters to zlib", "damaged LZ stream", "insufficient memory", "truncated", "unsupported zlib version", "unexpected zlib return", "too short", "length does not match profile", "invalid length", "tag count too large", "invalid rendering intent", "intent outside defined range", "invalid signature", "PCS illuminant is not D50", "RGB color space not permitted on grayscale PNG", "Gray color space not permitted on RGB PNG", "invalid ICC profile color space", "invalid embedded Abstract ICC profile", "unexpected DeviceLink ICC profile class", "unexpected NamedColor ICC profile class", "unrecognized ICC profile class", "unexpected ICC PCS encoding", "ICC profile tag start not a multiple of 4", "ICC profile tag outside profile", "Image width is zero in IHDR", "Invalid image width in IHDR", "Image width is too large for this architecture", "Image width exceeds user limit in IHDR", "Image height is zero in IHDR", "Invalid image height in IHDR", "Image height exceeds user limit in IHDR", "Invalid bit depth in IHDR", "Invalid color type in IHDR", "Invalid color type/bit depth combination in IHDR", "Unknown interlace method in IHDR", "Unknown compression method in IHDR", "MNG features are not allowed in a PNG datastream", "Unknown filter method in IHDR", "Invalid filter method in IHDR", "Invalid IHDR data", "ASCII conversion buffer too small", "internal error handling cHRM coefficients", "internal error handling cHRM->XYZ", "gamma value out of range", "duplicate", "gamma value does not match sRGB", "gamma value does not match libpng estimate", "sRGB", "invalid sRGB rendering intent", "inconsistent rendering intents", "duplicate sRGB information ignored", "cHRM chunk does not match sRGB", "known incorrect sRGB profile", "out-of-date sRGB profile with no signature", "Not recognizing known sRGB profile that has been edited", "fixed point overflow ignored", "invalid end points", "internal error checking chromaticities", "invalid chromaticities", "gamma table being rebuilt", "libpng warning: %s", "undefined", "libpng error: %s", "fixed point overflow in ", "Libpng jmp_buf still allocated", "Application jmp_buf size changed", "bad longjmp: ", "internal error: array alloc", "internal error: array realloc", "Out of memory", "Out of Memory", "png_process_data_skip called inside png_process_data", "png_process_data_skip called with saved data", "Not a PNG file", "PNG file corrupted by ASCII conversion", "Potential overflow of save_buffer", "Insufficient memory for save_buffer", "Missing IHDR before IDAT", "Missing PLTE before IDAT", "Too many IDATs found", "Invalid IHDR length", "bad adaptive filter value", "progressive row overflow", "internal progressive row size calculation error", "No IDAT data (internal error)", "Truncated compressed data in IDAT", "Decompression error in IDAT", "Extra compressed data in IDAT", "Extra compression data in IDAT", "Not enough compressed data", "read beyond end of data", "invalid memory read", "unexpected encoding (internal error)", "color-map index out of range", "bad encoding (internal error)", "a background color must be supplied to remove alpha/transparency", "gray[8] color-map: too few entries", "gray[16] color-map: too few entries", "gray+alpha color-map: too few entries", "gray-alpha color-map: too few entries", "ga-alpha color-map: too few entries", "rgb[ga] color-map: too few entries", "rgb[gray] color-map: too few entries", "rgb+alpha color-map: too few entries", "rgb-alpha color-map: too few entries", "rgb color-map: too few entries", "palette color-map: too few entries", "invalid PNG color type", "bad data option (internal error)", "color map overflow (BAD internal error)", "bad background index (internal error)", "png_read_update_info/png_start_read_image: duplicate call", "png_start_read_image/png_read_update_info: duplicate call", "Invalid attempt to read row data", "sequential row overflow", "internal sequential row size calculation error", "png_read_image: unsupported transformation", "png_image_read: alpha channel lost", "unexpected alpha swap transformation", "png_read_image: invalid transformations", "lost rgb to gray", "unexpected compose", "lost/gained channels", "unexpected 8-bit transformation", "unknown interlace type", "unexpected bit depth", "bad color-map processing (internal error)", "Interlace handling should be turned on when using png_read_image", "Read palette index exceeding num_palette", "png_image_read: out of memory", "png_image_read: opaque pointer not NULL", "Image is too high to process with png_read_png()", "png_image_begin_read_from_stdio: invalid argument", "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_file: invalid argument", "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_memory: invalid argument", "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION", "png_image_finish_read[color-map]: no color-map", "png_image_finish_read: invalid argument", "png_image_finish_read: damaged PNG_IMAGE_VERSION", "Read Error", "Call to NULL read function", "Can't set both read_data_fn and write_data_fn in the same structure", "invalid after png_start_read_image or png_read_update_info", "invalid before the PNG header has been read", "gamma value", "Can't discard critical data on CRC error", "Application must supply a known background gamma", "png_set_background", "output gamma out of expected range", "invalid alpha mode", "conflicting calls to set alpha mode and background", "invalid file gamma in png_set_gamma", "invalid screen gamma in png_set_gamma", "invalid error action to rgb_to_gray", "ignoring out of range rgb_to_gray coefficients", "rgb to gray red coefficient", "rgb to gray green coefficient", "libpng does not support gamma+background+rgb_to_gray", "invalid background gamma type", "Palette is NULL in indexed image", "NULL row buffer", "Uninitialized row", "png_do_rgb_to_gray found nongray pixel", "png_do_encode_alpha: unexpected call", "png_do_quantize returned rowbytes=0", " using zstream", "1.2.3", "insufficient memory to read chunk", "zstream unclaimed", "extra compressed data", "PNG unsigned integer out of range", "CRC error", "unknown chunk exceeds memory limits", "out of place", "invalid", "missing IHDR", "ignored in grayscale PNG", "tRNS must be after", "hIST must be after", "bKGD must be after", "invalid values", "too many profiles", "out of memory", "bad compression method", "bad keyword", "No space in chunk cache for sPLT", "malformed sPLT chunk", "sPLT chunk has bad length", "sPLT chunk too long", "sPLT chunk requires too much memory", "invalid with alpha channel", "invalid index", "invalid parameter count", "unrecognized equation type", "invalid data", "invalid unit", "bad width format", "non-positive width", "bad height format", "non-positive height", "no space in chunk cache", "Insufficient memory to process text chunk", "unknown compression type", "bad compression info", "error in user chunk", "Saving unknown chunk:", "forcing save of an unhandled chunk; please call png_set_keep_unknown_chunks", "unhandled critical chunk", "invalid chunk type", "internal row logic error", "internal row size calculation error", "internal row width error", "invalid user transform pixel depth", "Not enough image data", "Extra compressed data", "Too much image data", "Row has too many bytes to allocate in memory", "png_set_unknown_chunks now expects a valid location", "invalid location in png_set_unknown_chunks", "cHRM White X", "cHRM White Y", "cHRM Red X", "cHRM Red Y", "cHRM Green X", "cHRM Green Y", "cHRM Blue X", "cHRM Blue Y", "cHRM Red Z", "png_set_gAMA", "Invalid palette size, hIST allocation skipped", "Insufficient memory for hIST chunk data", "Invalid pCAL equation type", "Invalid pCAL parameter count", "Invalid format for pCAL parameter", "Insufficient memory for pCAL purpose", "Insufficient memory for pCAL units", "Insufficient memory for pCAL params", "Insufficient memory for pCAL parameter", "Invalid sCAL unit", "Invalid sCAL width", "Invalid sCAL height", "Memory allocation failed while processing sCAL", "Invalid sCAL width ignored", "Invalid sCAL height ignored", "Invalid palette length", "Invalid palette", "Invalid iCCP compression method", "Insufficient memory to process iCCP chunk", "Insufficient memory to process iCCP profile", "too many text chunks", "text compression mode is out of range", "text chunk: out of memory", "Insufficient memory to store text", "tRNS chunk has out-of-range samples for bit_depth", "too many sPLT chunks", "png_set_sPLT: invalid sPLT", "sPLT out of memory", "too many unknown chunks", "unknown chunk: out of memory", "invalid unknown chunk location", "png_set_keep_unknown_chunks: invalid keep", "png_set_keep_unknown_chunks: no chunk list", "png_set_keep_unknown_chunks: too many chunks", "invalid compression buffer size", "Compression buffer size cannot be changed because it is in use", "Compression buffer size cannot be reduced below 6", "png_set_filler is invalid for low bit depth gray output", "png_set_filler: inappropriate color type", "info change after png_start_read_image or png_read_update_info", "0123456789ABCDEF0123456789ABCDEF", "deleted virtual method called\n", "%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::_S_create", "basic_string::append", "basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", "basic_string::copy", "basic_string::compare", "basic_string::erase", "basic_string::_M_replace_aux", "basic_string::assign", "basic_string::insert", "basic_string::resize", "basic_string::replace", "basic_string::_S_construct null not valid", "basic_string::basic_string", "basic_string::substr", "generic", "system", "std::bad_alloc", "std::bad_cast", "std::bad_typeid", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "std::exception", "std::bad_exception", "terminate called recursively\n", "terminate called after throwing an instance of '", "terminate called without an active exception\n", "  what():  ", "_GLOBAL_", "(anonymous namespace)", "auto", "string literal", "{default arg#", "JArray", "vtable for ", "VTT for ", "construction vtable for ", "typeinfo for ", "typeinfo name for ", "typeinfo fn for ", "non-virtual thunk to ", "virtual thunk to ", "covariant return thunk to ", "java Class for ", "guard variable for ", "TLS init function for ", "TLS wrapper function for ", "reference temporary #", " for ", "hidden alias for ", "transaction clone for ", "non-transaction clone for ", "operator", "operator ", "new ", "false", "true", "java resource ", "decltype (", "global constructors keyed to ", "global destructors keyed to ", "{lambda(", "{unnamed type#", " [clone ", " restrict", " volatile", "complex ", "imaginary ", " __vector(", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::basic_string<char, std::char_traits<char>, std::allocator<char> >", "std::istream", "std::basic_istream<char, std::char_traits<char> >", "basic_istream", "std::ostream", "std::basic_ostream<char, std::char_traits<char> >", "basic_ostream", "std::iostream", "std::basic_iostream<char, std::char_traits<char> >", "basic_iostream", "alignof ", "const_cast", "delete[] ", "dynamic_cast", "delete ", "operator\"\" ", "new[]", "reinterpret_cast", "static_cast", "sizeof ", "throw", "throw ", "signed char", "bool", "boolean", "char", "byte", "double", "long double", "float", "__float128", "unsigned char", "unsigned int", "unsigned", "long", "unsigned long", "__int128", "unsigned __int128", "short", "unsigned short", "void", "wchar_t", "long long", "unsigned long long", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "decltype(nullptr)", "*N12_GLOBAL__N_121system_error_categoryE", "St14error_category", "*N12_GLOBAL__N_122generic_error_categoryE", "St9bad_alloc", "St8bad_cast", "St10bad_typeid", "N10__cxxabiv117__class_type_infoE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "St9exception", "St13bad_exception", "N9__gnu_cxx20recursive_init_errorE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "St11logic_error", "St12length_error"], "stringidentifiers": ["PexodeJNI", "descriptor", "mNativePtr", "rewind", "read", "IDAT", "nativeGetDurationMs", "nativeGetWidth", "nativeGetHeight", "nativeGetXOffset", "nativeGetYOffset", "nativeGetDisposalMode", "nativeGetBlendMode", "nativeRenderFrame", "nativeDispose", "nativeFinalize", "nativeCreateFromBytes", "nativeCreateFromFd", "nativeCreateFromRewindableStream", "nativeGetDuration", "nativeGetFrameCount", "nativeGetFrameDurations", "nativeGetLoopCount", "nativeGetFrame", "nativeGetSizeInBytes", "nativeLoadedVersionTest", "INFO", "IHDR", "TEMP", "truncated", "duplicate", "sRGB", "undefined", "png_set_background", "invalid", "png_set_gAMA", "basic_string::_S_create", "basic_string::append", "basic_string::copy", "basic_string::compare", "basic_string::erase", "basic_string::_M_replace_aux", "basic_string::assign", "basic_string::insert", "basic_string::resize", "basic_string::replace", "basic_string::basic_string", "basic_string::substr", "generic", "system", "std::bad_alloc", "std::bad_cast", "std::bad_typeid", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "std::exception", "std::bad_exception", "_GLOBAL_", "auto", "JArray", "operator", "false", "true", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "const_cast", "dynamic_cast", "reinterpret_cast", "static_cast", "throw", "bool", "boolean", "char", "byte", "double", "float", "__float128", "unsigned", "long", "__int128", "short", "void", "wchar_t", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "St14error_category", "St9bad_alloc", "St8bad_cast", "St10bad_typeid", "N10__cxxabiv117__class_type_infoE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "St9exception", "St13bad_exception", "N9__gnu_cxx20recursive_init_errorE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "St11logic_error", "St12length_error"], "debugstrings": ["nativeLoadedVersionTest", " libpng version 1.6.17 - March 26, 2015\n\n", "unsupported zlib version", "ASCII conversion buffer too small", "PNG file corrupted by ASCII conversion", "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION", "png_image_finish_read: damaged PNG_IMAGE_VERSION", "GCC: (GNU) 4.9.x 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["libz.so", "libc.so", "libm.so", "liblog.so", "libjnigraphics.so", "libdl.so", "libstdc++.so"], "elfname": "libpexapng.so"}