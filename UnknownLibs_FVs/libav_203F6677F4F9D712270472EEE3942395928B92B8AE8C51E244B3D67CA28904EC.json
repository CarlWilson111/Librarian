{"globalvars": ["ff_pcm_s24le_demuxer", "ff_sin_8192", "yuv422ptoyuy2", "ff_vc1_imode_codes", "ff_mkv_codec_tags", "ff_mp3on4float_decoder", "ff_mpegvideo_demuxer", "ff_flac_parser", "ff_ac3_slow_decay_tab", "av_tree_node_size", "ff_aac_spectral_codes", "ff_h264_decoder", "ff_vc1_mv_diff_vlc", "ff_sine_512", "ff_cbpc_b_tab", "ff_w_tab_sr", "ff_codec_movvideo_tags", "yuy2toyv12", "ff_vp56_norm_shift", "ff_v2_intra_cbpc", "ff_speex_codec", "rgb16to15", "shuffle_bytes_0321", "ff_vc1_ttblk_codes", "ff_sin_1024", "ff_vc1_norm6_bits", "ff_aac_spectral_bits", "ff_mba_length", "ff_vc1_2ref_mvdata_codes", "ff_asf_header", "av_cast5_size", "ff_mb_pat_vlc", "ff_mv_tables", "ff_sine_256", "ff_codec_wav_guids", "ff_cos_256", "ff_add_pixels_clamped", "ff_vc1_ttfrm_to_tt", "yv12touyvy", "ff_mpeg1_default_non_intra_matrix", "ff_tns_max_bands_1024", "ff_pcm_f64be_decoder", "ff_vp8_parser", "planar2x", "ff_asf_comment_header", "ff_sine_32_fixed", "ff_pcm_u32le_demuxer", "ff_sin_32", "ff_jpeg2000_profiles", "rgb32tobgr15", "ff_vc1_if_mmv_mbmode_vlc", "ff_ogm_old_codec", "ff_tns_max_bands_128", "ff_asf_audio_conceal_none", "ff_vorbis_codec", "ff_dca_decoder", "ff_dca_channels", "ff_dca_lfe_fir_128", "ff_mpeg2_dc_scale_table", "ff_mdct_win_float", "ff_static_rl_table_store", "ffurl_context_class", "ff_aac_kbd_short_128", "ff_sine_64", "ff_msmp4_mb_i_table", "ff_sipr_subpk_size", "ff_vc1_adv_interlaced_4x4_zz", "ff_cos_64", "yuyvtoyuv422", "ff_mkv_image_mime_tags", "ff_pcm_u16be_demuxer", "ff_pcm_s24be_decoder", "rgb24tobgr32", "ff_cos_128_fixed", "ff_cos_16", "ff_h263_parser", "ff_eac3_gaq_remap_2_4_b", "ff_h261_mba_bits", "ff_pcm_s16be_demuxer", "ff_vc1_bfraction_lut", "ff_mb_type_b_tab", "ff_h263_rl_inter", "ff_asf_audio_stream", "ff_log2_tab", "ff_dca_vlc_offs", "ff_dither_2x2_8", "av_codec_ffversion", "ff_pcm_u16le_demuxer", "ff_mpa_synth_window_float", "ff_vp8_decoder", "ff_ac3_bin_to_band_tab", "ff_pcm_lxf_decoder", "ff_ac3_fast_decay_tab", "ff_riff_info_conv", "ff_h261_rl_table_store", "ff_vc1_4mv_block_pattern_bits", "ff_vc1_demuxer", "ff_mbincr_vlc", "ff_put_pixels_clamped", "av_tea_size", "ff_ogm_text_codec", "ff_cos_32", "ff_vc1_2mv_block_pattern_vlc", "ff_vc1_intfr_non4mv_mbmode_bits", "ff_flac_sample_rate_table", "ff_h263_hwaccel_pixfmt_list_420", "ff_inter_run", "ff_inverse", "ff_ogm_audio_codec", "ff_aac_parser", "ff_pcm_f64be_demuxer", "ff_dca_channel_reorder_lfe", "ff_mpeg4_DCtab_chrom", "ff_pcm_f32le_demuxer", "ff_vc1_bfraction_codes", "ff_inter_vlc", "ff_asf_head2_guid", "ff_rl_table", "ff_pcm_alaw_demuxer", "ff_dca_bits_per_sample", "ff_eac3_default_cpl_band_struct", "ff_cos_65536_fixed", "ff_vc1_ac_sizes", "ff_aac_num_swb_480", "rgb16to32", "ff_dca_lossless_quant", "deinterleaveBytes", "ff_asf_command_stream", "ff_energy_tab", "ff_matroska_video_stereo_mode", "ff_dca_profiles", "ff_vc1_norm6_codes", "ff_mov_muxer", "ff_vc1_icbpcy_vlc", "ff_eac3_mantissa_vq", "ff_mp4_obj_type", "ff_vc1_b_field_mvpred_scales", "ff_vc1_icbpcy_p_bits", "ff_celt_codec", "ff_mpegtsraw_demuxer", "ff_mpeg12_vlc_dc_lum_code", "ff_v2_mb_type", "ff_ac3_decoder", "ff_vc1_if_mmv_mbmode_bits", "ff_dca_lfe_fir_64", "ff_interleaved_dirac_golomb_vlc_code", "ff_pcm_u24le_demuxer", "ff_ac3_window", "ff_gain_val_tab", "ff_vc1_subblkpat_bits", "ff_ac3_frame_size_tab", "avpriv_cga_font", "ff_dca_scale_factor_quant7", "ff_eac3_default_spx_band_struct", "ff_vorbis_vwin", "ff_aac_num_swb_512", "ff_sin_64", "ff_ac3_bap_bits", "ff_mpeg12_mbAddrIncrTable", "interleaveBytes", "ff_pcm_u24le_decoder", "ff_vc1_adv_interlaced_8x8_zz", "ff_msmpeg4v2_decoder", "ff_h263_cbpy_tab", "ff_vc1_mbmode_intfrp", "ff_vorbis_encoding_channel_layout_offsets", "ff_id3v2_34_metadata_conv", "ff_matroska_video_stereo_plane", "ff_dither_8x8_73", "ff_ac3_enc_channel_map", "ff_sine_windows_fixed", "ff_rv40_parser", "ff_dca_adpcm_vb", "ff_h263_chroma_qscale_table", "ff_default_chroma_qscale_table", "rgb32to16", "ff_cos_4096", "ff_mvtab", "ff_codec_movsubtitle_tags", "ff_ac3_hearing_threshold_tab", "ff_dca_channel_reorder_nolfe", "ff_mpeg12_vlc_dc_chroma_bits", "ff_cook_decoder", "ff_ra_288_decoder", "ff_h263_inter_MCBPC_vlc", "ff_sin_16384", "ff_sine_512_fixed", "ff_rv30_parser", "rgb24to15", "ff_vc1_adv_progressive_8x4_zz", "avpriv_mpeg4audio_sample_rates", "ff_aac_codebook_vector_idx", "ff_vc1_intfr_4mv_mbmode_bits", "ff_mpeg4_DCtab_lum", "ff_mpeg4_video_profiles", "ff_dither_8x8_128", "ff_vc1_dqscale", "ff_sin_128", "ff_hevc_qpel_filters", "ff_rawvideo_decoder", "ff_sln_demuxer", "ff_mp4_muxer", "ff_sin_4096", "ff_swb_offset_512", "ff_cos_2048", "ff_mpeg4_c_dc_scale_table", "ff_h261_rl_tcoeff", "ff_h263_inter_MCBPC_bits", "ff_pcm_u16be_decoder", "ff_mp3adufloat_decoder", "ff_asf_demuxer", "ff_h261_parser", "ff_vc1_if_1mv_mbmode_codes", "avpriv_pix_fmt_bps_mov", "ff_alternate_horizontal_scan", "ff_h264_chroma_qp", "ff_flac_blocksize_table", "ff_rl_intra_aic", "ff_zigzag_direct", "ff_dca_fir_32bands_perfect_fixed", "ff_aac_eld_window_480_fixed", "ff_eac3_spx_atten_tab", "ff_aac_kbd_long_1024_fixed", "ff_dca_fir_32bands_nonperfect", "ff_vc1_adv_interlaced_4x8_zz", "ff_vc1_icbpcy_p_codes", "ff_vc1_norm6_vlc", "ff_mpeg12_vlc_dc_lum_bits", "yv12toyuy2", "ff_h263_format", "ff_mb_ptype_vlc", "ff_sine_8192", "ff_skeleton_codec", "ff_h263_intra_MCBPC_code", "ff_alac_channel_layout_offsets", "ff_id3v1_genre_str", "ff_vc1_if_1mv_mbmode_vlc", "ff_aac_kbd_short_128_fixed", "ff_vc1_fps_nr", "ff_asf_marker_header", "ff_flac_demuxer", "ff_mpegts_demuxer", "ff_aac_eld_window_512_fixed", "ff_asf_video_stream", "ff_golomb_vlc_len", "ff_cos_512", "ff_vc1_ttblk_vlc", "ff_vc1_adv_interlaced_8x4_zz", "ff_dc_chroma_vlc", "rgb24tobgr16", "ff_table1_dc_chroma", "ff_pcm_bluray_decoder", "ff_sine_128", "ff_flv_decoder", "ff_vc1_2mv_block_pattern_codes", "ff_vp9_parser", "ff_h261_mtype_code", "av_ripemd_size", "ff_rdt_demuxer", "ff_pcm_f32be_decoder", "ff_cb2_base", "ff_ape_decoder", "ff_mpeg1_dc_scale_table", "ff_rawvideo_options", "ff_ac3_channels_tab", "ff_asf_language_guid", "ff_mpeg4video_parser", "ff_h264_profiles", "ff_wmv1_y_dc_scale_table", "ff_mpeg12_vlc_dc_chroma_code", "ff_aac_latm_parser", "ff_dca_parser", "ff_lpc_refl_cb", "ff_sine_8192_fixed", "ff_sine_128_fixed", "ff_vc1_mv_pmode_table", "swri_resampler", "ff_cos_65536", "ff_table_inter_intra", "ff_vc1_intfr_non4mv_mbmode_vlc", "ff_mpeg12_mbPatTable", "ff_eac3_gaq_remap_2_4_a", "ff_vorbis_parser", "ff_aac_eld_window_512", "ff_vc1_pixel_aspect", "ff_aac_pred_sfb_max", "ff_mpeg4_dc_threshold", "ff_vp8_dct_cat_prob", "ff_cos_16384", "yuv422ptouyvy", "ff_dca_quant_levels", "ff_table1_dc_lum", "ff_dca_bit_rates", "ff_mp3adu_decoder", "ff_sine_windows", "ff_ue_golomb_vlc_code", "ff_msmpeg4v3_decoder", "ff_pcm_u24be_demuxer", "ff_swb_offset_128", "ff_asf_ext_stream_embed_stream_header", "ff_aac_codebook_vector_vals", "ff_pcm_f32le_decoder", "ff_h263i_decoder", "ff_dither_8x8_220", "ff_cos_8192_fixed", "ff_raw_pix_fmt_tags", "ff_ac3_log_add_tab", "ff_rv40_decoder", "rgb15to32", "ff_dca_sampling_freqs", "ff_h263_static_rl_table_store", "ff_sine_1024", "ff_h263p_decoder", "ff_avio_class", "ff_pcm_u8_demuxer", "ff_cos_tabs", "ff_hevc_demuxer", "ff_mp2float_decoder", "shuffle_bytes_2103", "av_sha512_size", "rgb32tobgr24", "ff_rvlc_rl_intra", "ff_ac3_sample_rate_tab", "ff_wmv1_c_dc_scale_table", "ff_cos_16384_fixed", "ff_eac3_default_chmap", "ff_vc1_mv_diff_bits", "ff_sprite_trajectory_tab", "yuyvtoyuv420", "ff_vc1_simple_progressive_4x4_zz", "uyvytoyuv420", "ff_vorbis_decoder", "avpriv_mpa_freq_tab", "ff_hevc_diag_scan8x8_y", "ff_wmv3_dc_scale_table", "ff_mpa_sblimit_table", "ff_cos_32768_fixed", "ff_wmv2_scantableA", "ff_dca_fir_64bands_fixed", "ff_se_golomb_vlc_code", "ff_aac_codebook_vectors", "rgb16tobgr24", "ff_mpeg1_aspect", "ff_eac3_decoder", "ff_yuv2rgb_coeffs", "ff_mpegvideo_parser", "ff_sin_512", "ff_pcm_u32be_demuxer", "ff_vc1_cbpcy_p_bits", "vu9_to_vu12", "ff_rl_mpeg1", "ff_mpeg4_resync_prefix", "ff_pcm_s16le_decoder", "ff_h263_inter_MCBPC_code", "ff_asf_head1_guid", "ff_mp3on4_decoder", "avpriv_mpa_bitrate_tab", "ff_dither_8x8_32", "ff_h264_parser", "ff_hevc_diag_scan4x4_x", "ff_vc1_norm2_bits", "ff_vorbis_channel_layouts", "ff_pcm_dvd_decoder", "ff_pcm_u32le_decoder", "ff_live_flv_demuxer", "av_format_ffversion", "ff_h264_mp4toannexb_bsf", "ff_h261_demuxer", "ff_flac_codec", "ff_eac3_gaq_remap_1", "ff_sin_32768", "ff_ac3_dec_channel_map", "ff_mpeg2_video_profiles", "av_camellia_size", "rgb32to15", "ff_vc1_bfraction_bits", "ff_mpegps_demuxer", "ff_cos_512_fixed", "ff_aac_spectral_sizes", "swr_ffversion", "ff_sin_65536", "ff_alac_channel_elements", "ff_rm_metadata", "ff_aac_num_swb_128", "ff_pcm_zork_decoder", "ff_vc1_intfr_4mv_mbmode_codes", "ff_table0_dc_lum", "ff_codec_movaudio_tags", "ff_pcm_s24le_decoder", "ff_pcm_u32be_decoder", "ff_mpegaudio_parser", "ff_asf_extended_stream_properties_object", "ff_wmv1_scantable", "ff_aac_profiles", "ff_pcm_s24be_demuxer", "ff_hevc_diag_scan8x8_x", "ff_vc1_ttblk_bits", "ff_flv_muxer", "ff_dither_4x4_16", "ff_avi_demuxer", "ff_vc1_ttmb_codes", "ff_hevc_decoder", "ff_h261_mtype_map", "ff_cook_parser", "ff_id3v2_mime_tags", "ff_sine_32", "ff_asf_my_guid", "ff_ogg_demuxer", "ff_pcm_s24daud_decoder", "ff_rv10_decoder", "rgb24tobgr15", "ff_cb1_vects", "ff_vc1_imode_vlc", "ff_sin_2048", "ff_mp3_decoder", "yvu9_to_yuy2", "ff_tns_max_bands_480", "ff_aac_latm_decoder", "ff_msmpeg4v1_decoder", "ff_vc1_norm2_codes", "ff_h263_decoder", "av_md5_size", "ff_vorbis_channel_layout_offsets", "ff_asf_file_header", "ff_sine_256_fixed", "ff_pcm_s16be_decoder", "ff_aac_decoder", "ff_asf_codec_comment_header", "ff_vc1_2ref_mvdata_bits", "ff_cos_tabs_fixed", "ff_alac_channel_layouts", "ff_tns_max_bands_512", "ff_cos_8192", "ff_swb_offset_1024", "ff_pcm_u24be_decoder", "ff_dither_2x2_4", "ff_avcodec_locked", "ff_matroska_demuxer", "ff_ogm_video_codec", "ff_mp3float_decoder", "ff_mp1float_decoder", "ff_eac3_frm_expstr", "ff_pcm_u16le_decoder", "ff_mpeg12_static_rl_table_store", "ff_log2_run", "ff_dca_fir_64bands", "ff_pcm_u8_decoder", "ff_table_mb_non_intra", "ff_id3v2_4_tags", "ff_interleaved_se_golomb_vlc_code", "rgb15to16", "ff_vc1_ac_coeff_table", "ff_aac_pow2sf_tab", "ff_vc1_1ref_mvdata_bits", "ff_aac_eld_window_480", "ff_inter_level", "ff_dca_lfe_fir_64_fixed", "ff_wmv2_inter_table", "ff_vp8_codec", "ff_webm_dash_manifest_demuxer", "ff_mpa_quant_bits", "ff_sine_2048_fixed", "ff_mkv_metadata_conv", "ff_h263_cbpy_vlc", "ff_sine_4096_fixed", "ff_sin_16", "rgb24tobgr24", "ff_h261_mba_code", "ff_asf_extended_content_header", "ff_hevc_diag_scan4x4_y", "ff_daala_codec", "ff_ape_demuxer", "ff_file_protocol", "av_sha_size", "ff_asf_audio_conceal_spread", "ff_vc1_norm2_vlc", "ff_dirac_codec", "ff_rawvideo_demuxer", "ff_vc1_decoder", "ff_rm_codec_tags", "ff_vc1_if_mmv_mbmode_codes", "ff_ac3_floor_tab", "ff_pcm_f64le_decoder", "ff_asf_ext_content_encryption", "ff_vc1_intfr_4mv_mbmode_vlc", "ff_img_tags", "ff_rm_demuxer", "ff_ra_144_decoder", "ff_cb1_base", "ff_interleaved_golomb_vlc_len", "ff_vp9_profiles", "ff_pcm_s16le_planar_decoder", "ff_vc1_field_mvpred_scales", "ff_cos_64_fixed", "ff_msmp4_dc_luma_vlc", "ff_ac3_slow_gain_tab", "ff_vc1_subblkpat_codes", "ff_asf_codec_comment1_header", "ff_interleaved_ue_golomb_vlc_code", "ff_eac3_demuxer", "ff_old_ff_y_dc_scale_table", "ff_mpegvideo_decoder", "ff_dca_dmixtable", "ff_mpeg2video_decoder", "ff_pcm_s8_planar_decoder", "ff_aac_scalefactor_code", "ff_vc1_profiles", "ff_vc1_1ref_mvdata_codes", "ff_cb2_vects", "ff_vc1_bfraction_vlc", "ff_gain_exp_tab", "ff_eac3_hebap_tab", "ff_asf_digital_signature", "ff_hevc_profiles", "ff_ac3_rematrix_band_tab", "ff_mp1_decoder", "ff_v2_dc_lum_table", "ff_aac_scalefactor_bits", "ff_id3v2_4_metadata_conv", "ff_mpeg4audio_channels", "ff_mpa_quant_steps", "ff_h264_demuxer", "ff_vorbis_floor1_inverse_db_table", "ff_asf_reserved_4", "ff_asf_metadata_header", "ff_cos_4096_fixed", "ff_fft_offsets_lut", "ff_vorbiscomment_metadata_conv", "ff_id3v2_picture_types", "ff_pcm_s32le_demuxer", "ff_ivr_demuxer", "rgb15tobgr24", "ff_vc1_subblkpat_vlc", "ff_pcm_s32be_decoder", "ff_dca_xll_refl_coeff", "ff_m4v_demuxer", "ff_asf_data_header", "ff_ac3_demuxer", "ff_dca_scale_factor_quant6", "ff_mpeg4_intra_level", "ff_vc1_parser", "ff_asf_ext_stream_audio_stream", "ff_mpeg2_frame_rate_tab", "ff_mba_max", "ff_mv_vlc", "ff_alternate_vertical_scan", "ff_h261_mtype_bits", "ff_h263_mbtype_b_tab", "ff_mpa_synth_window_fixed", "ff_msmp4_dc_chroma_vlc", "ff_mpeg2_aspect", "ff_mpeg2_non_linear_qscale", "ff_pcm_s16le_demuxer", "ff_codec_wav_tags", "ff_pcm_f64le_demuxer", "ff_aac_kbd_long_1024", "ff_pcm_f32be_demuxer", "ff_cos_1024_fixed", "ff_mpeg4_default_non_intra_matrix", "ff_alac_decoder", "ff_eac3_bits_vs_hebap", "ff_vc1_4mv_block_pattern_vlc", "ff_v2_dc_chroma_table", "ff_pcm_mulaw_decoder", "ff_sine_64_fixed", "ff_sqrt_tab", "ff_h263_pixel_aspect", "ff_pcm_s32le_planar_decoder", "ff_dca_xll_band_coeff", "ff_vc1_imode_bits", "ff_pcm_mulaw_demuxer", "ff_dca_lfe_index", "ff_dca_dmix_primary_nch", "ff_vc1_intfr_non4mv_mbmode_codes", "ff_h264_mb_sizes", "ff_cos_32768", "ff_ac3_fast_gain_tab", "ff_mpeg1video_decoder", "ff_asf_metadata_conv", "ff_ralf_decoder", "ff_ac3_db_per_bit_tab", "ff_ac3_bap_tab", "ff_msmp4_mb_i_vlc", "ff_rv20_decoder", "ff_mpeg12_frame_rate_tab", "ff_cos_128", "ff_square_tab", "avpriv_pix_fmt_bps_avi", "ff_sine_4096", "ff_reverse", "ff_mpa_alloc_tables", "ff_h263_demuxer", "ff_dca_inv_dmixtable", "ff_mb_btype_vlc", "ff_ac3_parser", "av_util_ffversion", "ff_vc1_mv_pmode_table2", "ff_mp2_decoder", "ff_pcm_alaw_decoder", "ff_sbr_noise_table", "ff_vc1_cbpcy_p_codes", "ff_dca_fir_32bands_perfect", "ff_mpeg4_rl_intra", "ff_mdct_win_fixed", "ff_rgb24toyv12", "ff_mpeg4_intra_run", "ff_crop_tab", "ff_vc1_4mv_block_pattern_codes", "ff_ue_golomb_len", "av_aes_size", "ff_mpeg4_y_dc_scale_table", "ff_dca_fir_32bands_nonperfect_fixed", "ff_table0_dc_chroma", "ff_dca_joint_scale_factors", "ff_asf_video_conceal_none", "ff_vp9_decoder", "ff_pcm_s8_demuxer", "ff_vc1_cbpcy_p_vlc", "ff_mb_non_intra_vlc", "ff_mpeg4_default_intra_matrix", "ff_swb_offset_480", "ff_inter_intra_vlc", "ff_mpeg4_intra_vlc", "ff_vc1_2mv_block_pattern_bits", "ff_aac_num_swb_1024", "ff_h261_mv_tab", "ff_codec_bmp_tags", "ff_vc1_ttmb_bits", "ff_old_flac_codec", "uyvytoyuv422", "ff_pcm_s32be_demuxer", "ff_pcm_s16be_planar_decoder", "ff_aac_demuxer", "ff_dca_lossy_quant", "ff_asf_stream_header", "ff_cos_32_fixed", "ff_ac3_band_start_tab", "ff_rvlc_rl_inter", "ff_opus_codec", "ff_sws_context_class", "ff_cos_256_fixed", "ff_dc_lum_vlc", "ff_rl_mpeg2", "ff_pcm_s24le_planar_decoder", "ff_dca_scale_factor_adj", "ff_flv_demuxer", "ff_sine_2048", "ff_asf_ext_stream_header", "ff_ac3_bitrate_tab", "ff_mov_demuxer", "ff_mpeg4_static_rl_table_store", "ff_sine_1024_fixed", "ff_wmv2_scantableB", "ff_mpeg12_mbMotionVectorTable", "ff_vc1_mv_diff_codes", "ff_asf_simple_index_header", "ff_h263_intra_MCBPC_vlc", "avpriv_ac3_channel_layout_tab", "ff_h264_cabac_tables", "av_twofish_size", "ff_vc1_1ref_mvdata_vlc", "ff_cos_16_fixed", "ff_pcm_s8_decoder", "rgb24to16", "rgb32tobgr16", "ff_h263_loop_filter_strength", "ff_hevc_epel_filters", "ff_theora_codec", "ff_vc1_ttmb_vlc", "ff_vc1_ttblk_to_tt", "ff_ac3_ungroup_3_in_5_bits_tab", "ff_asf_jfif_media", "ff_mp3_demuxer", "ff_id3v2_3_tags", "ff_aac_pow34sf_tab", "ff_cos_2048_fixed", "ff_asf_metadata_library_header", "ff_sin_256", "ff_flac_decoder", "ff_pcm_s32le_decoder", "ff_modified_quant_tab", "ff_vc1_adv_progressive_4x8_zz", "ff_mkv_mime_tags", "ff_mpeg1_default_intra_matrix", "ff_id3v2_tags", "ff_rv30_decoder", "ff_matroska_muxer", "avpriv_dca_sample_rates", "ff_hevc_pel_weight", "ff_mpa_enwindow", "ff_h261_cbp_tab", "ff_wmv1_decoder", "ff_vc1_if_1mv_mbmode_bits", "ff_hevc_parser", "ff_h261_decoder", "ff_old_dirac_codec", "ff_aic_dc_scale_table", "ff_dca_high_freq_vq", "ff_mpeg4_decoder", "ff_h263_intra_MCBPC_bits", "ff_vc1_fps_dr", "ff_asf_content_encryption", "ff_vc1_2ref_mvdata_vlc", "ff_vc1_pquant_table", "ff_cos_1024", "avpriv_vga16_font"], "importedglobals": ["__sF"], "importedfunctions": ["rename", "pthread_cond_broadcast", "__sched_cpucount", "lrintf", "fcntl", "cbrtf", "fputs", "sscanf", "gettimeofday", "nanosleep", "pthread_mutex_init", "pthread_cond_wait", "atan", "sin", "fabs", "lseek64", "fstat", "tan", "pthread_join", "atoi", "log2f", "closedir", "fprintf", "strerror_r", "snprintf", "mmap", "pthread_mutex_destroy", "exp", "atanf", "uncompress", "mktime", "gmtime_r", "write", "__assert2", "strtoll", "strspn", "inflateEnd", "strtol", "memmove", "cbrt", "posix_memalign", "munmap", "getenv", "strncmp", "memcpy", "atan2", "pthread_create", "vsnprintf", "memchr", "cosh", "frexp", "rmdir", "powf", "strchr", "strcmp", "strrchr", "unlink", "open", "ldexp", "localtime_r", "strstr", "strtod", "opendir", "pthread_mutex_lock", "sched_getaffinity", "lstat", "pthread_cond_destroy", "acos", "close", "hypot", "read", "log", "fwrite", "exp2", "strcspn", "cosf", "strftime", "clock_gettime", "pthread_mutex_unlock", "log10", "free", "abort", "pthread_once", "mkstemp", "fputc", "__errno", "bsearch", "inflate", "realloc", "memset", "asin", "lrint", "inflateInit_", "strlen", "pthread_cond_signal", "tanh", "arc4random", "pow", "memcmp", "isatty", "cos", "strcpy", "access", "fdopen", "fmod", "readdir", "atan2f", "pthread_cond_init", "sinf", "strtoul", "sinh"], "exportedfunctions": ["ff_thread_free", "av_vbprintf", "ff_get_guid", "av_timecode_make_string", "ff_thread_finish_setup", "shuffle_bytes_3210", "av_opt_set_double", "avformat_query_codec", "avio_wl32", "ff_pred16x16_128_dc_neon", "ff_faanidct_add", "ff_mp4_read_dec_config_descr", "av_tea_alloc", "ff_msmpeg4_decode_init", "avio_open_dyn_buf", "av_rescale_delta", "av_picture_pad", "ff_put_no_rnd_qpel16_mc12_old_c", "ff_mov_write_packet", "ff_startcode_find_candidate_c", "ff_h264_idct_add16intra_9_c", "ff_thread_get_buffer", "ff_mpeg12_common_init", "ff_put_pixels8_xy2_no_rnd_neon", "sws_convertPalette8ToPacked32", "ff_avg_pixels16x16_c", "ff_dca_core_parse", "ff_put_qpel8_mc13_old_c", "av_frame_set_channels", "avpriv_mpa_decode_header", "ff_mov_cenc_write_sinf_tag", "ff_h264_idct8_add_10_c", "av_format_get_subtitle_codec", "ff_rv34_decode_init", "ff_butterflies_float_neon", "av_gettime_relative", "av_freep", "avio_wb64", "av_get_channel_name", "ffio_rewind_with_probe_data", "av_audio_resample_init", "ff_get_format", "av_dump_format", "ff_h264_free_tables", "ff_avg_pixels8_y2_neon", "ff_avg_qpel8_mc33_old_c", "ff_mpeg4_decode_picture_header", "av_expr_parse_and_eval", "swscale_license", "av_audio_convert_alloc", "ffurl_write", "ff_mpeg4_decode_video_packet_header", "avio_get_str16le", "av_opt_set_image_size", "ffurl_handshake", "sws_getIdentityVec", "av_escape", "avpriv_dca_convert_bitstream", "ff_prores_idct", "av_thread_message_queue_send", "av_image_check_size", "sws_getConstVec", "avcodec_find_best_pix_fmt_of_list", "av_write_frame", "avcodec_dct_get_class", "ff_get_line", "ff_h263_decode_frame", "av_bprintf", "av_fifo_drain", "avformat_version", "av_image_fill_arrays", "avio_put_str", "ff_avg_h264_qpel16_mc03_neon", "av_opt_get_double", "ff_raw_audio_read_header", "av_format_set_audio_codec", "avio_size", "ff_sbr_apply", "rgb64to48_bswap", "av_fifo_realloc2", "av_probe_input_format2", "ff_init_cabac_decoder", "ff_faandct248", "avcodec_pix_fmt_to_codec_tag", "avcodec_get_name", "av_format_get_video_codec", "av_ripemd_alloc", "ff_put_qpel16_mc33_old_c", "av_thread_message_queue_free", "ff_mpeg1_clean_buffers", "ff_h264_idct_dc_add_14_c", "ff_put_wav_header", "ff_rtp_enc_name", "avformat_new_stream", "av_default_item_name", "ff_simple_idct_put_10", "ff_synth_filter_float_neon", "avcodec_fill_audio_frame", "av_frame_ref", "av_sha512_final", "ffio_fdopen", "ff_hevc_intra_chroma_pred_mode_decode", "av_opt_query_ranges", "ff_mpadsp_init_aarch64", "ff_biweight_h264_pixels_16_neon", "ff_rm_read_mdpr_codecdata", "ff_vc1_decode_end", "av_hmac_alloc", "av_channel_layout_extract_channel", "ff_thread_get_format", "av_frame_set_metadata", "ff_rv30dsp_init", "av_get_token", "av_aes_ctr_set_iv", "av_opt_next", "ff_avg_pixels16_y2_neon", "ff_vp9dsp_intrapred_init_10", "ff_thread_flush", "av_opt_flag_is_set", "ff_j_rev_dct", "ff_frame_thread_free", "ff_mpv_decode_defaults", "av_get_pix_fmt_loss", "av_opt_get_channel_layout", "ff_fft_init_fixed_32", "ff_h264_v_loop_filter_chroma_neon", "ff_sine_window_init", "av_hex_dump_log", "ff_fft_init", "ff_h264_idct_add8_422_12_c", "av_murmur3_init_seeded", "ff_avg_h264_qpel8_mc03_neon", "av_aes_ctr_alloc", "ff_mp4_parse_es_descr", "ff_put_h264_chroma_mc4_neon", "av_opt_set_channel_layout", "ff_avg_h264_qpel16_mc12_neon", "av_index_search_timestamp", "ff_rv40dsp_init_aarch64", "av_match_list", "av_opt_set_int", "av_samples_get_buffer_size", "ff_put_h264_qpel16_mc03_neon", "avcodec_default_execute2", "ff_put_qpel8_mc11_old_c", "ff_mov_cenc_avc_parse_nal_units", "av_parser_parse2", "ff_replaygain_export_raw", "ff_h264_v_loop_filter_luma_neon", "avpriv_solve_lls", "av_frame_copy", "ff_mdct_calc_neon", "av_stream_get_recommended_encoder_configuration", "ff_put_pixels16_neon", "ff_make_absolute_url", "ff_vc1_mc_1mv", "av_hash_freep", "ff_hevc_parse_sps", "ff_vorbisdsp_init_aarch64", "av_cpu_count", "av_malloc", "avutil_version", "ff_h264_idct_add_9_c", "ff_h264_chroma_dc_dequant_idct_12_c", "ff_vc1_decode_init_alloc_tables", "ff_synth_filter_init", "swri_audio_convert_free", "ff_put_pixels8_x2_neon", "ff_h264_idct_dc_add_9_c", "ff_rv_decode_dc", "ff_h264_decode_ref_pic_marking", "avcodec_get_pix_fmt_loss", "ffurl_read", "av_div_q", "av_frame_remove_side_data", "ff_id3v2_free_extra_meta", "av_chroma_location_name", "av_opt_get_pixel_fmt", "av_log2_16bit", "ff_h264_sei_stereo_mode", "av_vorbis_parse_reset", "av_append_path_component", "sws_printVec2", "ff_hevc_cu_qp_delta_abs", "av_q2intfloat", "av_get_sample_fmt_string", "av_packet_split_side_data", "ff_fdct_ifast", "swr_set_compensation", "ff_hevc_ref_idx_lx_decode", "ff_free_picture_tables", "ff_put_qpel16_mc31_old_c", "av_compare_mod", "av_program_add_stream_index", "ff_hevc_cabac_init", "ff_rm_free_rmstream", "ff_reget_buffer", "sws_isSupportedInput", "ff_h264_idct_add_12_c", "swr_alloc", "ff_h264_idct8_add_12_c", "ff_rgb24toyv12_c", "ff_eval_refl", "avcodec_get_context_defaults3", "av_codec_next", "ff_interleave_add_packet", "av_frame_set_color_range", "av_bitstream_filter_filter", "ff_avg_h264_qpel16_mc33_neon", "ff_hcscale_fast_c", "av_get_default_channel_layout", "ff_mov_cenc_write_packet", "ff_faanidct_put", "ff_h264_decode_seq_parameter_set", "ff_hevc_decode_nal_sei", "ff_h264_filter_mb_fast", "ff_vp9dsp_init_10", "ff_h264_idct_add8_10_c", "ff_h264_idct8_dc_add_12_c", "ff_mpeg4video_split", "av_ripemd_init", "ff_put_h264_qpel8_mc30_neon", "av_get_standard_channel_layout", "av_opt_set_video_rate", "ff_h264_idct_add8_8_c", "ff_pred8x8_hor_neon", "ff_ps_ctx_init", "av_sha_final", "av_get_channel_layout_nb_channels", "avpriv_toupper4", "swr_config_frame", "rgb64tobgr48_bswap", "av_fifo_space", "av_pixelutils_get_sad_fn", "ff_id3v2_read_dict", "av_md5_sum", "ff_hevc_decode_nal_vps", "ff_h264dsp_init", "avpicture_get_size", "ff_init_mpadsp_tabs_fixed", "av_buffer_pool_uninit", "ff_pcm_read_packet", "ff_imdct_half_neon", "av_shrink_packet", "ff_h263_loop_filter", "av_audio_fifo_read", "ff_er_frame_end", "ff_get_codec_guid", "av_bitstream_filter_init", "ff_avg_h264_chroma_mc2_neon", "ff_er_add_slice", "av_reduce", "ff_riff_write_info", "av_hash_final_b64", "av_image_check_sar", "ff_ps_read_data", "av_stream_get_end_pts", "av_get_channel_layout_channel_index", "ff_h264_field_end", "ff_avg_qpel8_mc11_old_c", "ff_mdct_calcw_c", "ff_dca_xll_close", "av_guess_sample_aspect_ratio", "rgb12tobgr12", "ff_pred8x8_plane_neon", "av_audio_fifo_realloc", "ff_slice_thread_free", "ff_update_cur_dts", "av_dict_set_int", "av_find_best_stream", "av_opt_get_q", "ff_vp8_decode_init", "ff_simple_idct48_add", "ffio_open_whitelist", "ff_pred16x16_dc_neon", "ff_sdp_write_media", "ff_h264_idct_add16_9_c", "ff_hevc_set_qPy", "sws_allocVec", "av_stream_set_r_frame_rate", "av_resample_init", "ff_put_qpel8_mc12_old_c", "ff_put_h264_qpel16_mc01_neon", "av_sub_q", "ff_mov_cenc_avc_write_nal_units", "ff_put_vc1_chroma_mc4_neon", "ff_mpv_report_decode_progress", "avcodec_default_get_buffer2", "av_mallocz", "ff_alloc_dir_entry", "rgb15tobgr15", "ff_avg_h264_qpel8_mc23_neon", "av_pix_fmt_desc_get_id", "av_get_sample_fmt", "ff_mov_get_lpcm_codec_id", "avformat_get_mov_audio_tags", "av_basename", "ff_put_pixels8x8_c", "av_lfg_init", "ff_tadd_doubles_metadata", "av_crc", "ffurl_shutdown", "avcodec_find_decoder", "ff_vc1_loop_filter_iblk", "sws_shiftVec", "av_opt_get_key_value", "ff_side_data_set_encoder_stats", "ff_j_rev_dct1", "avcodec_free_context", "avcodec_default_get_format", "avcodec_get_class", "ff_dca_core_close", "ff_h264_remove_all_refs", "av_opt_get", "av_opt_copy", "sws_freeFilter", "ff_h264_ref_picture", "av_i2int", "ff_alloc_packet2", "ff_write_chained", "ff_h264_chroma_dc_dequant_idct_10_c", "av_format_get_metadata_header_padding", "ff_idctdsp_init", "av_camellia_crypt", "avformat_flush", "ff_put_pixels16_xy2_neon", "av_dct_calc", "ff_intrax8_common_init", "ff_find_unused_picture", "ff_put_h264_qpel8_mc33_neon", "av_codec_set_lowres", "av_picture_crop", "swri_noise_shaping_int32", "ff_avg_h264_qpel8_mc02_neon", "avio_rl32", "av_frame_get_pkt_pos", "av_ripemd_update", "av_samples_alloc", "ff_h264chroma_init", "ff_thread_ref_frame", "ff_put_qpel8_mc32_old_c", "ff_thread_can_start_frame", "ffurl_size", "rgb64to48_nobswap", "ff_mov_read_stsd_entries", "ffio_set_buf_size", "av_dv_codec_profile", "avio_put_str16le", "ff_h263_decode_end", "av_expr_eval", "ff_sws_rgb2rgb_init", "ff_dca_core_filter_fixed", "av_opt_is_set_to_default", "av_find_best_pix_fmt_of_2", "av_write_trailer", "ff_parse_creation_time_metadata", "av_get_pix_fmt", "ff_vc1_loop_filter_iblk_delayed", "av_aes_ctr_increment_iv", "av_format_set_data_codec", "ff_psdsp_init", "av_free", "av_parse_time", "ff_mov_cenc_free", "avpriv_exif_decode_ifd", "av_frame_get_sample_rate", "ff_avg_h264_qpel16_mc02_neon", "ff_h264_luma_dc_dequant_idct_9_c", "av_frame_alloc", "av_add_q", "ff_hevc_cbf_cb_cr_decode", "ff_h261_common_init", "ff_mov_read_chan", "ff_aac_ac3_parse", "avpicture_free", "ff_h264_decode_sei", "avpriv_open", "av_mdct_end", "ff_hevc_annexb2mp4_buf", "av_parse_color", "ff_put_h264_qpel16_mc32_neon", "avcodec_align_dimensions", "ff_get_wav_header", "av_format_inject_global_side_data", "ff_init_buffer_info", "av_packet_unpack_dictionary", "av_write_uncoded_frame_query", "av_codec_set_pkt_timebase", "ff_find_last_ts", "av_hash_init", "ffio_read_varlen", "ff_hevc_unref_frame", "ff_tget_double", "swresample_version", "avformat_configuration", "ff_put_v", "avcodec_alloc_context3", "ff_put_no_rnd_qpel8_mc12_old_c", "ff_mpv_export_qp_table", "av_murmur3_init", "av_oformat_next", "av_buffer_pool_init", "ff_dca_check_crc", "ff_hevc_res_scale_sign_flag", "ff_thread_release_buffer", "avpriv_set_systematic_pal2", "av_get_output_timestamp", "avcodec_copy_context", "av_realloc", "av_sub_i", "ff_h264_idct8_add_9_c", "ff_tget_short", "av_strndup", "ff_pred8x8_l0t_dc_neon", "ffurl_accept", "ff_avg_h264_qpel8_mc00_neon", "ffio_close_null_buf", "av_register_input_format", "ff_avg_pixels16_x2_neon", "sws_convertPalette8ToPacked24", "av_samples_set_silence", "av_imdct_calc", "av_d2q", "ff_h264_direct_ref_list_init", "ff_put_no_rnd_qpel16_mc33_old_c", "av_fifo_generic_read", "ff_sine_window_init_fixed", "avcodec_decode_video2", "avcodec_align_dimensions2", "ff_h264_luma_dc_dequant_idct_10_c", "ff_audiodsp_init", "av_strlcpy", "ff_put_h264_qpel8_mc13_neon", "av_get_pix_fmt_name", "ff_avg_h264_qpel8_mc12_neon", "av_frame_get_best_effort_timestamp", "av_image_alloc", "av_strerror", "av_strncasecmp", "av_get_channel_description", "av_log_set_flags", "av_frame_get_colorspace", "av_image_get_buffer_size", "ff_hevc_cu_transquant_bypass_flag_decode", "ff_h264_luma_dc_dequant_idct_14_c", "av_qsv_alloc_context", "ff_parse_key_value", "ff_mdct_calc_c_fixed_32", "ff_interleave_packet_per_dts", "ff_avg_h264_qpel16_mc01_neon", "avio_rb16", "ff_pred16x16_top_dc_neon", "sws_isSupportedEndiannessConversion", "ff_rms", "ff_aac_sbr_ctx_close", "av_frame_side_data_name", "ff_mpeg_unref_picture", "av_frame_get_pkt_duration", "av_vorbis_parse_free", "av_hmac_update", "av_opt_set_sample_fmt", "ff_get_bmp_header", "ff_mp4_read_descr_len", "ff_end_tag", "ff_xvid_idct_init", "ff_put_pixels16_x2_neon", "ff_intrax8_decode_picture", "av_thread_message_flush", "av_opt_set_dict2", "avio_printf", "ff_put_h264_chroma_mc8_neon", "ff_thread_decode_frame", "av_format_get_probe_score", "ff_j_rev_dct4", "av_audio_fifo_drain", "av_fft_end", "ff_avg_qpel8_mc31_old_c", "ff_read_frame_flush", "sws_getGaussianVec", "avio_get_str16be", "ff_scalarproduct_float_neon", "av_parse_video_size", "av_color_transfer_name", "av_cpb_properties_alloc", "av_register_hwaccel", "av_get_exact_bits_per_sample", "ff_codec_get_tag", "av_fifo_alloc", "av_frame_set_pkt_pos", "av_parse_ratio", "avutil_configuration", "ff_eval_coefs", "av_hash_final", "ffurl_connect", "ff_raw_read_partial_packet", "av_read_play", "ff_mpa_synth_init_fixed", "avcodec_open2", "ff_h264_idct8_add4_8_c", "avcodec_close", "ff_mdct_end_fixed", "ff_set_ref_count", "ff_vp9dsp_init_8", "ff_id3v2_parse_apic", "avio_check", "av_log_format_line", "ff_vp78dsp_init", "ff_put_pixels8_xy2_neon", "ff_rv34dsp_init", "ff_hevc_inter_pred_idc_decode", "av_packet_alloc", "av_packet_side_data_name", "avpriv_mpegts_parse_close", "ff_avg_h264_qpel8_mc13_neon", "av_image_copy_to_buffer", "ff_hevc_pred_mode_decode", "avpriv_unlock_avformat", "av_blowfish_alloc", "ff_put_pixels8_y2_neon", "ff_h264_free_context", "ff_sbrdsp_init", "ffio_read_size", "ff_h264_init_cabac_states", "av_audio_convert_free", "avcodec_default_execute", "ff_put_pixels16_y2_no_rnd_neon", "av_fast_mallocz", "avformat_queue_attached_pictures", "ff_avg_h264_qpel8_mc33_neon", "ff_vorbis_nth_root", "avcodec_flush_buffers", "av_get_channel_layout", "av_file_unmap", "avformat_match_stream_specifier", "ff_avc_mp4_find_startcode", "av_get_planar_sample_fmt", "av_opt_serialize", "avio_wl24", "ff_jref_idct_add", "av_frame_clone", "ff_hevc_skip_flag_decode", "ff_pred16x16_plane_neon", "avio_open_dir", "av_log2", "avio_handshake", "avcodec_decode_subtitle2", "av_frame_make_writable", "av_stream_set_recommended_encoder_configuration", "ff_mpv_decode_init", "avio_rb24", "ff_reset_entries", "ff_h264_idct_add16intra_10_c", "av_packet_get_side_data", "av_hash_names", "ff_vector_fmul_scalar_neon", "avpriv_new_chapter", "av_version_info", "avpriv_report_missing_feature", "ff_h264_h_loop_filter_luma_neon", "ff_vp9dsp_scaled_mc_init_10", "audio_resample", "ff_vc1_pred_mv", "av_strnstr", "ffio_read_indirect", "av_interleaved_write_frame", "ff_weight_h264_pixels_8_neon", "av_bprint_init_for_buffer", "avio_read_to_bprint", "ff_free_filters", "avio_rl64", "ff_mpegvideodsp_init", "avformat_get_mov_video_tags", "ff_mpv_common_end", "ff_h264_idct_add16_8_c", "av_div_i", "swr_init", "avio_pause", "ff_init_ff_sine_windows", "av_frame_set_decode_error_flags", "avcodec_set_dimensions", "ff_subblock_synthesis", "ff_pixblockdsp_init", "av_codec_is_encoder", "av_hwaccel_next", "ff_avg_h264_qpel16_mc20_neon", "ff_biweight_h264_pixels_8_neon", "ff_dca_downmix_to_stereo_fixed", "av_xtea_le_init", "av_md5_update", "avio_rb32", "av_seek_frame", "avcodec_find_encoder_by_name", "ff_put_bmp_header", "ff_alloc_extradata", "ff_tdecode_header", "avcodec_get_type", "av_get_cpu_flags", "avio_wb24", "sws_init_context", "ff_mpv_decode_mb", "avcodec_descriptor_next", "av_murmur3_alloc", "ff_put_pixels16_y2_neon", "ff_put_no_rnd_qpel8_mc13_old_c", "av_stream_get_r_frame_rate", "ff_put_guid", "ff_rl_free", "ff_hevc_deblocking_boundary_strengths", "ff_flacdsp_init", "avcodec_get_subtitle_rect_class", "av_vlog", "av_tree_find", "av_packet_rescale_ts", "ff_h264_check_intra4x4_pred_mode", "rgb32to24", "ff_init_scantable_permutation", "av_format_get_open_cb", "av_get_padded_bits_per_pixel", "ff_h264chroma_init_aarch64", "av_mdct_calc", "ff_set_cmp", "avpriv_strtod", "ff_vc1_smooth_overlap_filter_iblk", "av_bprint_init", "av_display_rotation_get", "av_md5_final", "av_codec_get_chroma_intra_matrix", "ff_h264_idct_add8_9_c", "ff_thread_init", "ff_hevc_sao_offset_abs_decode", "ff_dcadct_init", "av_md5_alloc", "ffio_fill", "av_pix_fmt_swap_endianness", "av_des_crypt", "av_codec_set_chroma_intra_matrix", "av_get_bits_per_pixel", "ff_hevc_hls_mvd_coding", "swr_is_initialized", "av_get_audio_frame_duration", "av_get_pix_fmt_string", "ff_id3v1_read", "av_stream_get_parser", "av_log_set_callback", "avutil_license", "ff_hevc_hls_filters", "swri_noise_shaping_float", "avio_closep", "ff_init_slice_from_src", "av_strlcat", "av_audio_fifo_peek", "avio_get_str", "av_packet_merge_side_data", "ff_mpeg_flush", "swr_drop_output", "sws_getContext", "ff_vc1_parse_frame_header_adv", "sws_subVec", "av_thread_message_queue_alloc", "ff_alloc_entries", "av_opt_show2", "avio_read_dir", "ff_simple_idct84_add", "ff_vorbis_len2vlc", "av_tree_destroy", "av_opt_get_image_size", "avpriv_float_dsp_alloc", "av_opt_eval_double", "url_feof", "av_log_missing_feature", "ff_vorbiscomment_length", "av_thread_message_queue_set_err_recv", "av_format_set_opaque", "ff_dct32_float", "avpriv_h264_has_num_reorder_frames", "ff_imdct_half_c", "av_free_packet", "ff_hevc_sao_type_idx_decode", "av_aes_ctr_init", "ff_parse_close", "av_color_primaries_name", "avio_open", "ff_mpeg1_decode_block_intra", "av_fifo_alloc_array", "ff_pred16x16_left_dc_neon", "ff_celp_lp_synthesis_filterf", "avpriv_io_delete", "av_dynarray_add", "rgb15tobgr16", "ff_vc1dsp_init", "ff_wav_codec_get_id", "ff_put_no_rnd_qpel8_mc32_old_c", "av_audio_fifo_space", "ff_celp_convolve_circ", "av_probe_input_buffer2", "ff_hevc_flush_dpb", "ff_h264_idct_add_neon", "av_buffer_alloc", "av_hash_get_name", "ff_hevc_frame_rps", "ff_h264_chroma422_dc_dequant_idct_9_c", "av_rc4_crypt", "ff_simple_idct248_put", "av_dv_frame_profile", "av_pkt_dump2", "av_buffer_get_ref_count", "ff_ape_write_tag", "ff_vector_fmul_add_neon", "av_hmac_init", "ff_init_desc_hscale", "ff_pred8x8_0l0_dc_neon", "ff_hevc_prev_intra_luma_pred_flag_decode", "ff_ape_parse_tag", "ff_dca_core_parse_exss", "av_samples_fill_arrays", "ff_j_rev_dct2", "av_log_ask_for_sample", "av_frame_set_pkt_size", "ff_h264_idct_dc_add_neon", "ff_flac_decode_frame_header", "swresample_license", "ffio_ensure_seekback", "ff_h264_decode_mb_cavlc", "ff_avg_h264_qpel16_mc22_neon", "ff_h264_idct8_add4_10_c", "ff_h264_get_slice_type", "avpriv_mpegts_parse_open", "ff_mpv_idct_init", "ff_h264_decode_extradata", "avformat_free_context", "ff_h264_idct_add8_422_10_c", "ff_simple_idct_10", "ff_avg_h264_qpel8_mc11_neon", "ff_guess_image2_codec", "ff_rm_alloc_rmstream", "av_format_get_audio_codec", "ff_intel_h263_decode_picture_header", "ff_avg_qpel8_mc32_old_c", "ffio_init_checksum", "av_dict_set", "swri_dither_init", "ffio_get_checksum", "ff_mov_read_esds", "ff_h263_pred_motion", "ff_hevc_frame_nb_refs", "ff_vp8_decode_frame", "ff_h264_idct8_dc_add_10_c", "ff_tadd_shorts_metadata", "ff_crcA001_update", "av_frame_is_writable", "av_fifo_size", "ff_put_h264_qpel8_mc12_neon", "avpriv_align_put_bits", "ff_start_tag", "ff_put_h264_qpel8_mc02_neon", "ff_h264_execute_ref_pic_marking", "ff_hevc_dsp_init", "ff_get_buffer", "ff_avg_qpel16_mc11_old_c", "sws_addVec", "ff_rotate_slice", "ff_id3v2_match", "ff_thread_await_progress2", "av_find_nearest_q_idx", "ff_put_qpel8_mc33_old_c", "swr_get_out_samples", "ff_tis_ifd", "ff_vc1_decode_blocks", "avio_alloc_context", "ff_weight_h264_pixels_4_neon", "ff_put_h264_qpel16_mc23_neon", "ff_update_picture_tables", "av_sha512_update", "ff_rescale_rms", "ff_synth_filter_init_aarch64", "av_d3d11va_alloc_context", "sws_scale", "av_ripemd_final", "av_sample_fmt_is_planar", "ff_avc_parse_nal_units", "av_md5_init", "ff_put_h264_qpel8_mc32_neon", "av_strdup", "ff_imdct15_uninit", "ff_pred8x8_l00_dc_neon", "ff_avg_h264_qpel16_mc00_neon", "ff_isom_write_hvcc", "avio_read", "av_interleaved_write_uncoded_frame", "av_des_mac", "ff_hex_to_data", "ff_ac3_bit_alloc_calc_psd", "ff_h264_execute_decode_slices", "av_memcpy_backptr", "ff_avg_h264_qpel8_mc32_neon", "ff_avg_h264_qpel16_mc30_neon", "ff_h264_chroma422_dc_dequant_idct_10_c", "ff_yuv2rgb_get_func_ptr", "avio_close_dyn_buf", "av_frame_unref", "ff_choose_timebase", "ff_fdct248_islow_8", "ff_h264_idct_dc_add_8_c", "av_frame_get_metadata", "avcodec_configuration", "av_file_map", "ff_set_dimensions", "av_get_known_color_name", "av_xtea_crypt", "av_strcasecmp", "sws_getColorspaceDetails", "ff_faandct", "av_get_sample_fmt_name", "swri_audio_convert", "av_audio_fifo_reset", "avpriv_copy_bits", "ffurl_get_multi_file_handle", "av_opt_set_defaults2", "av_add_stable", "ff_h263_pred_dc", "av_bprint_channel_layout", "ff_mpeg4_set_direct_mv", "ff_h264_chroma_dc_dequant_idct_8_c", "av_codec_get_codec_descriptor", "ff_mpv_frame_start", "ff_put_h264_qpel16_mc13_neon", "swri_get_dither", "av_tea_crypt", "ff_int32_to_float_fmul_scalar_neon", "ff_vp9dsp_mc_init_10", "ff_put_pixels16_x2_no_rnd_neon", "av_stream_get_side_data", "sws_getCoefficients", "av_rescale_rnd", "av_mod_i", "ff_h264_filter_mb", "av_bitstream_filter_next", "av_opt_set_bin", "ffurl_closep", "ff_avg_qpel16_mc33_old_c", "av_frame_get_color_range", "ff_flac_parse_picture", "ff_me_cmp_init", "ff_rm_parse_packet", "av_thread_message_queue_recv", "ff_vc1_decode_sequence_header", "ff_url_join", "av_pkt_dump_log2", "ff_metadata_conv", "ff_msmpeg4_decode_picture_header", "ff_mdct_init", "ff_set_qscale", "ff_rtp_get_payload_type", "ff_h264_idct_dc_add_12_c", "ff_pred16x16_hor_neon", "ff_hevc_part_mode_decode", "ff_mov_cenc_write_stbl_atoms", "ff_h264_idct_add_10_c", "avcodec_register_all", "ffio_init_context", "av_dynarray_add_nofree", "swscale_version", "av_init_packet", "ff_h264_direct_dist_scale_factor", "ff_tget_long", "av_opt_query_ranges_default", "ff_ac3_bit_alloc_calc_mask", "ff_simple_idct_put_8", "av_get_media_type_string", "ff_avg_h264_qpel8_mc30_neon", "avpriv_set_pts_info", "ff_avc_parse_nal_units_buf", "av_dct_end", "ff_vc1_decode_entry_point", "av_add_i", "ff_vc1_init_common", "swri_rematrix", "sws_getCachedContext", "av_pix_fmt_get_chroma_sub_sample", "av_resample_close", "ff_riff_write_info_tag", "ff_avc_write_annexb_extradata", "av_parser_change", "avpriv_bprint_to_extradata", "ff_id3v2_read", "av_opt_eval_int64", "av_packet_clone", "rgb64tobgr48_nobswap", "ff_init_vscale", "ff_dca_downmix_to_stereo_float", "swr_set_channel_mapping", "ff_put_h264_qpel16_mc33_neon", "ff_avg_h264_qpel16_mc21_neon", "av_parse_video_rate", "av_timecode_init_from_string", "ff_pred8x8_vert_neon", "ff_hevc_no_residual_syntax_flag_decode", "avio_seek", "ff_put_no_rnd_qpel8_mc11_old_c", "ff_avg_qpel16_mc31_old_c", "av_frame_get_qp_table", "av_timecode_make_mpeg_tc_string", "av_get_time_base_q", "ff_avg_h264_qpel16_mc11_neon", "ff_mpadsp_apply_window_fixed_neon", "av_find_input_format", "sws_isSupportedOutput", "ff_pred8x8_top_dc_neon", "ff_h264_pred_init_aarch64", "ff_videodsp_init_aarch64", "ff_avg_vc1_chroma_mc8_neon", "av_base64_encode", "ff_hevc_sao_merge_flag_decode", "ffurl_protocol_next", "avpriv_mpa_decode_header2", "avio_feof", "avcodec_register", "ff_avg_qpel16_mc13_old_c", "avcodec_profile_name", "av_bmg_get", "ff_sws_init_output_funcs", "ff_avg_pixels8x8_c", "ff_flv_decode_picture_header", "av_memdup", "ff_wmv2dsp_init", "ff_generate_sliding_window_mmcos", "av_int2i", "av_copy_packet_side_data", "avcodec_string", "ff_intrax8_common_end", "av_adler32_update", "av_bprint_get_buffer", "ff_vc1_mc_4mv_chroma", "av_packet_add_side_data", "ff_hevc_pcm_flag_decode", "ff_fft_init_fixed", "ff_init_ff_cos_tabs_fixed_32", "av_fast_padded_malloc", "ff_h264_idct_add8_12_c", "ff_hevc_end_of_slice_flag_decode", "av_codec_get_pkt_timebase", "av_sha512_init", "ff_h264_fill_mbaff_ref_list", "av_rc4_alloc", "av_gcd", "ff_avg_h264_qpel8_mc31_neon", "ff_ntp_time", "avio_r8", "av_crc_get_table", "av_tree_enumerate", "ff_mpa_l2_select_table", "avsubtitle_free", "av_rdft_calc", "ff_imdct_calc_c_fixed_32", "avpriv_split_xiph_headers", "ff_get_cpu_flags_aarch64", "av_match_name", "ff_flac_set_channel_layout", "ff_init_scantable", "avcodec_find_encoder", "ff_rv40dsp_init", "ff_mov_close_hinting", "avpriv_lock_avformat", "ff_vc1_mc_4mv_luma", "avio_w8", "ff_mov_cenc_init", "audio_resample_close", "av_opt_set_dict_val", "sws_alloc_set_opts", "av_codec_get_tag", "rgb16to24", "ff_decode_sbr_extension", "avcodec_get_frame_class", "av_small_strptime", "ff_init_ff_cos_tabs_fixed", "ff_hevc_luma_mv_merge_mode", "av_cast5_crypt", "av_aes_ctr_free", "ff_dct32_fixed", "ff_put_no_rnd_qpel16_mc31_old_c", "av_match_ext", "av_register_codec_parser", "ff_h264_update_thread_context", "av_xtea_alloc", "ffio_limit", "av_buffer_default_free", "ff_print_debug_info", "ff_mov_get_channel_layout", "ff_put_qpel16_mc13_old_c", "av_iformat_next", "ff_h264_check_intra_pred_mode", "av_aes_ctr_crypt", "av_fft_init", "av_int_list_length_for_size", "av_opt_eval_flags", "ff_flac_is_extradata_valid", "av_lzo1x_decode", "ff_mdct_init_fixed", "av_strtod", "ff_put_h264_qpel16_mc22_neon", "ff_rdft_end", "ff_fmt_convert_init", "ff_avg_rv40_chroma_mc4_neon", "av_aes_crypt", "ff_frame_thread_init", "ff_put_h264_qpel8_mc21_neon", "ff_flac_is_native_layout", "ff_codec_get_id", "swr_alloc_set_opts", "av_get_picture_type_char", "ff_mp4_read_descr", "swresample_configuration", "ff_avg_h264_qpel16_mc13_neon", "ff_parse_mpeg2_descriptor", "avformat_seek_file", "ff_pred8x8_left_dc_neon", "av_hash_get_size", "ff_rfps_add_frame", "av_frame_set_channel_layout", "av_vorbis_parse_frame_flags", "ff_vc1_pred_mv_intfr", "avformat_open_input", "ff_put_h264_qpel8_mc10_neon", "ff_h264_idct_add8_422_9_c", "ff_put_pixels16_xy2_no_rnd_neon", "av_codec_set_codec_descriptor", "sws_scaleVec", "av_opt_set", "swri_resample_dsp_init", "av_timecode_init", "ff_put_pixels16x16_c", "ff_put_h264_qpel8_mc31_neon", "ff_weight_h264_pixels_16_neon", "ff_h264_idct8_add4_14_c", "ff_put_vc1_chroma_mc8_neon", "av_fifo_reset", "av_stristart", "ff_fdctdsp_init", "ff_hevc_cu_chroma_qp_offset_flag", "ff_brktimegm", "ff_put_h264_qpel8_mc23_neon", "ff_h264_decode_picture_parameter_set", "ff_rv34_decode_init_thread_copy", "av_gettime_relative_is_monotonic", "av_audio_fifo_size", "ff_add_param_change", "avpriv_io_move", "av_copy_packet", "ff_pred8x8_128_dc_neon", "avpriv_get_trc_function_from_trc", "ff_lock_avcodec", "ff_stream_add_bitstream_filter", "swr_get_class", "avpriv_get_gamma_from_trc", "ff_mpadsp_apply_window_fixed", "ff_h264_decode_mb_cabac", "av_register_output_format", "av_blowfish_init", "av_camellia_alloc", "av_hmac_free", "ff_h264_idct8_dc_add_8_c", "ff_jpeg_fdct_islow_10", "av_grow_packet", "ff_copy_whitelists", "ff_h264_idct_add8_neon", "av_probe_input_format", "ffurl_read_complete", "avformat_get_riff_video_tags", "ff_vector_dmul_scalar_neon", "ff_imdct_calc_c_fixed", "ff_id3v2_tag_len", "av_opt_free", "ff_put_h264_qpel16_mc12_neon", "ff_t_sqrt", "av_asprintf", "av_murmur3_final", "ff_fft_permute_neon", "avio_rl24", "ff_rv34_decode_end", "av_packet_from_data", "av_opt_get_video_rate", "ff_imdct_calc_neon", "ff_h264_slice_context_init", "av_buffer_is_writable", "ff_init_cabac_encoder", "avpicture_alloc", "ff_mdct_calc_c", "ff_rm_retrieve_cache", "av_twofish_alloc", "ff_vector_fmul_neon", "ff_h263_resync", "ff_put_h264_qpel16_mc31_neon", "avpriv_mpegaudio_decode_header", "avformat_network_init", "avpicture_fill", "av_log", "av_utf8_decode", "ff_mpv_common_init", "av_probe_input_buffer", "ff_get_extradata", "av_frame_set_sample_rate", "av_frame_set_colorspace", "ff_put_pixels8_x2_no_rnd_neon", "av_packet_new_side_data", "av_cmp_i", "ff_vc1dsp_init_aarch64", "av_get_pcm_codec", "avformat_license", "av_dirac_parse_sequence_header", "av_apply_bitstream_filters", "av_get_alt_sample_fmt", "av_opt_child_class_next", "sws_get_class", "av_bprint_finalize", "av_opt_freep_ranges", "avcodec_dct_init", "av_stereo3d_alloc", "av_pix_fmt_desc_next", "av_find_info_tag", "ff_imdct15_init_aarch64", "ff_h264_draw_horiz_band", "ff_hevc_merge_idx_decode", "rgb16tobgr15", "av_fifo_generic_peek", "ff_aac_sbr_ctx_init", "avformat_alloc_context", "swr_set_matrix", "av_image_fill_max_pixsteps", "ff_alloc_packet", "av_twofish_init", "ff_mpeg4_init_direct_mv", "ff_mpa_decode_header", "ff_vorbis_inverse_coupling_neon", "ff_fft_lut_init", "ffurl_alloc", "ff_check_pixfmt_descriptors", "ff_dca_set_channel_layout", "ff_vector_fmul_reverse_neon", "ffurl_open_whitelist", "ff_h264_idct8_dc_add_9_c", "ff_reduce_index", "av_mdct_init", "av_color_space_name", "av_frame_move_ref", "ff_h264_luma_dc_dequant_idct_8_c", "ff_put_h264_qpel16_mc10_neon", "avio_wb16", "avpriv_find_pix_fmt", "ff_h264_hl_decode_mb", "ff_codec_guid_get_id", "ff_hevc_cbf_luma_decode", "av_fast_realloc", "av_image_copy_plane", "ff_hevc_bump_frame", "rgb16tobgr32", "swr_close", "av_format_set_open_cb", "ff_h264_set_erpic", "ff_vorbiscomment_write", "av_codec_get_seek_preroll", "ff_h264_idct_add16_neon", "ff_simple_idct_12", "av_samples_alloc_array_and_samples", "av_realloc_array", "ff_dca_core_flush", "ff_dct_init", "av_resample_compensate", "av_dict_get_string", "av_frame_set_best_effort_timestamp", "av_opt_set_dict", "av_resample", "ff_init_vscale_pfn", "ff_add_index_entry", "ff_dca_xll_parse", "ff_h264_idct8_add_14_c", "ff_er_frame_start", "avio_put_str16be", "avio_write", "av_dynarray2_add", "av_rdft_init", "ff_vc1_parse_frame_header", "av_timecode_check_frame_rate", "ff_hevc_compute_poc", "av_guess_codec", "ff_h263_decode_motion", "ff_metadata_conv_ctx", "ff_ac3dsp_init", "ff_blockdsp_init", "av_blowfish_crypt", "avpriv_init_lls", "sws_freeContext", "av_packet_move_ref", "ff_h264_idct_add16intra_12_c", "ff_vp9dsp_init", "av_frame_get_channels", "av_fft_permute", "ff_avg_qpel16_mc12_old_c", "ffio_open2_wrapper", "avio_wl64", "ff_put_qpel8_mc31_old_c", "ff_imdct_calc_c", "ff_getSwsFunc", "av_fopen_utf8", "ff_get_pcm_codec_id", "av_get_channel_layout_string", "av_cast5_init", "ff_h264_h_loop_filter_chroma_neon", "avio_close_dir", "avcodec_descriptor_get", "ff_mpeg4_find_frame_end", "avpriv_codec_get_cap_skip_frame_fill_param", "ff_init_desc_no_chr", "ff_tadd_bytes_metadata", "ff_prefetch_aarch64", "av_des_init", "ff_vorbis_stream_comment", "ff_put_h264_qpel16_mc02_neon", "ff_mov_iso639_to_lang", "av_opt_set_pixel_fmt", "av_cast5_alloc", "av_rc4_init", "av_frame_new_side_data", "ff_int_to_int16", "ff_get_qtpalette", "av_image_copy", "av_timecode_make_smpte_tc_string", "ff_mpeg4_decode_partitions", "ff_rv34_decode_update_thread_context", "ff_h264qpel_init", "ff_put_qpel16_mc32_old_c", "ff_avc_find_startcode", "ff_msmpeg4_common_init", "ff_avg_pixels16_x2_no_rnd_neon", "ff_jref_idct_put", "av_tea_init", "av_stristr", "ff_vc1_pred_b_mv_intfi", "av_aes_ctr_get_iv", "av_twofish_crypt", "ff_mpeg12_init_vlcs", "av_rescale_q_rnd", "ffio_open_null_buf", "av_guess_format", "swscale_configuration", "av_packet_pack_dictionary", "av_stereo3d_create_side_data", "ff_pred8x8_dc_neon", "av_cast5_crypt2", "avpriv_aac_parse_header", "ff_hevc_mvp_lx_flag_decode", "ff_flac_parse_streaminfo", "av_opt_find", "ff_mdct_end", "ff_h263_decode_mb", "ff_interp", "av_guess_frame_rate", "av_dup_packet", "ff_mpadsp_apply_window_float_neon", "ff_hevc_hls_residual_coding", "ff_celp_lp_synthesis_filter", "av_gettime", "av_crc_init", "ff_put_no_rnd_qpel16_mc11_old_c", "av_frame_get_decode_error_flags", "ff_hevc_decode_nal_sps", "ff_h264_chroma_dc_dequant_idct_14_c", "av_get_random_seed", "av_read_pause", "avio_free_directory_entry", "ff_init_vlc_sparse", "av_read_image_line", "avio_find_protocol_name", "avio_rb64", "ff_h264_idct_add16intra_8_c", "ff_avg_h264_qpel16_mc10_neon", "ff_intrax8dsp_init", "av_format_get_control_message_cb", "av_strtok", "ff_put_h264_qpel16_mc21_neon", "ff_mpeg_update_thread_context", "ff_h264_idct_add8_422_8_c", "av_fifo_generic_peek_at", "avcodec_get_edge_width", "ff_mpeg_draw_horiz_band", "ff_vorbis_inverse_coupling", "ff_me_cmp_init_static", "ff_avg_qpel16_mc32_old_c", "avpriv_find_start_code", "av_opt_eval_q", "ff_irms", "swri_rematrix_init", "avcodec_encode_audio2", "ff_mpeg4_pred_ac", "ff_read_riff_info", "av_display_matrix_flip", "ff_put_rv40_chroma_mc4_neon", "ff_fdct_ifast248", "av_reallocp_array", "ff_kbd_window_init_fixed", "ff_init_desc_fmt_convert", "ff_qpeldsp_init", "av_image_fill_linesizes", "ff_mpa_synth_init_float", "avcodec_find_decoder_by_name", "ff_hevc_reset_sei", "avcodec_version", "ff_mpv_common_frame_size_change", "av_thread_message_queue_set_free_func", "av_codec_get_max_lowres", "ff_replaygain_export", "avcodec_dct_alloc", "av_audio_fifo_free", "avpriv_request_sample", "ff_init_ff_sine_windows_fixed", "ff_avg_qpel8_mc13_old_c", "ff_rdft_init", "ff_h263_decode_mba", "av_dict_parse_string", "ff_hevc_split_packet", "ff_celt_imdct_half_neon", "av_buffer_realloc", "av_opt_ptr", "ff_llauddsp_init", "ff_h264_idct_dc_add_10_c", "avpriv_frame_get_metadatap", "avpriv_mpegts_parse_packet", "ff_hevc_get_ref_list", "swri_realloc_audio", "avio_open2", "ff_vc1_init_transposed_scantables", "ff_vc1_apply_p_loop_filter", "ff_h264_alloc_tables", "av_des_alloc", "shuffle_bytes_1230", "ff_h264_pred_init", "avcodec_encode_video2", "ff_init_filters", "avformat_get_riff_audio_tags", "ff_h264_idct_add16_14_c", "ff_asfcrypt_dec", "avcodec_descriptor_get_by_name", "av_dirname", "ff_xvid_idct", "ff_read_packet", "av_lockmgr_register", "ff_yuv2rgb_c_init_tables", "ff_vp8dsp_init", "ff_dca_core_filter_frame", "ff_hevc_decode_short_term_rps", "avformat_find_stream_info", "av_usleep", "av_format_set_metadata_header_padding", "ff_float_dsp_init_aarch64", "ff_dca_core_init", "ff_h264_chroma422_dc_dequant_idct_12_c", "ff_hevc_hls_filter", "ff_get_v_length", "ff_msmpeg4_decode_block", "ff_aac_sbr_init", "ff_rv34_get_start_offset", "ff_h264_init_dequant_tables", "ff_h264_idct_add8_422_14_c", "ff_put_h264_qpel16_mc30_neon", "av_fifo_generic_write", "swri_rematrix_free", "ff_init_mpadsp_tabs_float", "av_bprint_escape", "ff_hevc_cu_qp_delta_sign_flag", "swr_inject_silence", "av_pix_fmt_desc_get", "ff_imdct36_blocks_fixed", "av_get_packet", "ff_simple_idct_8", "ff_h264_decode_slice_header", "ff_match_2uint16", "av_timecode_adjust_ntsc_framenum2", "ff_vc1_mc_4mv_chroma4", "ff_mpeg_ref_picture", "ff_sws_alphablendaway", "ff_hevc_log2_res_scale_abs", "av_fast_padded_mallocz", "av_sdp_create", "av_set_options_string", "ff_index_search_timestamp", "avcodec_is_open", "ff_fdct248_islow_10", "ff_mpeg_er_init", "ff_set_sar", "ff_jpeg_fdct_islow_8", "av_opt_get_int", "ff_vorbis_ready_floor1_list", "ff_vp56_init_range_decoder", "ff_put_h264_qpel8_mc20_neon", "ff_dca_exss_parse", "ff_avg_h264_qpel16_mc31_neon", "av_packet_unref", "av_frame_get_side_data", "ff_put_h264_qpel8_mc22_neon", "av_log2_i", "ff_avg_h264_qpel16_mc32_neon", "ff_fetch_timestamp", "ff_vector_fmul_window_neon", "av_buffer_create", "ff_fft_calc_neon", "av_filename_number_test", "av_opt_eval_int", "ff_emulated_edge_mc_8", "avio_enum_protocols", "ff_bswapdsp_init", "swri_noise_shaping_double", "ff_h264_decode_ref_pic_list_reordering", "ff_mpv_common_defaults", "av_fifo_grow", "ffurl_register_protocol", "swri_noise_shaping_int16", "ff_simple_idct_put_12", "av_shr_i", "rgb15to24", "ff_unlock_avcodec", "ff_vorbisdsp_init", "shuffle_bytes_3012", "ff_h264_idct_add16intra_14_c", "av_max_alloc", "swri_oldapi_conv_flt_to_s16_neon", "ff_mdct_calc_c_fixed", "av_parser_close", "ff_fft_init_aarch64", "ff_slice_thread_init", "avcodec_find_best_pix_fmt2", "av_append_packet", "ff_vorbis_floor1_render_list", "ffurl_close", "av_frame_get_plane_buffer", "ff_hevc_split_transform_flag_decode", "av_read_frame", "av_fifo_free", "av_rescale", "av_blowfish_crypt_ecb", "av_opt_set_defaults", "ff_vp9dsp_init_12", "ff_fft_end_fixed_32", "ff_avg_h264_qpel8_mc20_neon", "ff_mov_add_hinted_packet", "ff_avg_h264_qpel8_mc22_neon", "av_aes_init", "ff_dca_xll_filter_frame", "ff_init_desc_cfmt_convert", "swr_get_delay", "av_opt_get_sample_fmt", "swr_convert", "ff_pcm_read_seek", "ff_sws_init_input_funcs", "avcodec_license", "avcodec_find_best_pix_fmt_of_2", "av_bprint_clear", "ff_tadd_rational_metadata", "ff_avg_pixels8_neon", "ff_avg_pixels16_neon", "av_hmac_final", "av_format_set_video_codec", "ff_h264_idct_add_14_c", "av_demuxer_open", "ff_mpeg4_clean_buffers", "av_tree_insert", "av_realloc_f", "ff_put_h264_qpel8_mc00_neon", "av_opt_eval_float", "av_xtea_le_crypt", "ff_kbd_window_init", "ff_h263dsp_init", "ff_simple_idct44_add", "ff_alloc_picture", "ff_hevc_output_frame", "ff_mov_lang_to_iso639", "ff_seek_frame_binary", "ff_vector_fmac_scalar_neon", "av_compare_ts", "ff_clean_intra_table_entries", "avformat_network_deinit", "sws_cloneVec", "av_convert_lang_to", "av_base64_decode", "ff_h263_find_frame_end", "av_frame_free", "ff_mdct_end_fixed_32", "ff_avg_h264_qpel8_mc10_neon", "ff_hevc_luma_mv_mvp_mode", "ff_rv34_decode_frame", "ff_mpeg4_workaround_bugs", "av_sha_update", "ff_put_qpel16_mc12_old_c", "av_dict_get", "av_set_cpu_flags_mask", "ff_h263_decode_init", "ff_ps_init", "av_packet_free", "av_frame_set_qp_table", "ff_h263_decode_init_vlc", "ff_codec_open2_recursive", "ff_simple_idct_add_8", "ff_hevc_decode_nal_pps", "av_buffer_get_opaque", "ff_h263_pred_acdc", "ff_alacdsp_init", "ff_put_rv40_chroma_mc8_neon", "ff_add_cpb_side_data", "avformat_write_header", "swr_convert_frame", "ff_avg_rv40_chroma_mc8_neon", "av_hash_final_bin", "ff_flac_write_header", "av_get_bytes_per_sample", "ff_celp_lp_zero_synthesis_filterf", "av_expr_parse", "avio_wb32", "ff_celp_filter_init", "av_get_profile_name", "av_hash_final_hex", "ff_configure_buffers_for_index", "ff_data_to_hex", "av_dict_free", "swri_audio_convert_alloc", "av_tree_node_alloc", "ff_put_h264_qpel8_mc01_neon", "ff_draw_horiz_band", "avio_skip", "ff_init_ff_cos_tabs", "av_frame_copy_props", "av_vorbis_parse_init", "av_sha_init", "av_expr_free", "av_bprint_strftime", "avpriv_alloc_fixed_dsp", "av_get_packed_sample_fmt", "ff_hevc_sao_band_position_decode", "ff_avg_pixels16_xy2_neon", "ff_h264_idct8_add_8_c", "ff_free_stream", "av_packet_copy_props", "ff_h264_idct8_add4_9_c", "av_mastering_display_metadata_create_side_data", "ff_mdct_init_fixed_32", "ff_put_h264_qpel16_mc00_neon", "avio_wl16", "ff_h264dsp_init_aarch64", "rgb12to15", "av_buffer_make_writable", "swri_oldapi_conv_fltp_to_s16_nch_neon", "av_codec_get_codec_properties", "av_register_all", "ff_fft_end_fixed", "ff_rl_init", "avio_seek_time", "av_probe_input_format3", "ff_parse_specific_params", "avpriv_scalarproduct_float_c", "ff_h264_idct_add16_10_c", "ff_raw_video_read_header", "av_audio_convert", "ff_mpv_frame_end", "av_parser_next", "ff_avg_vc1_chroma_mc4_neon", "ff_faanidct", "av_get_bits_per_sample", "ff_flac_get_max_frame_size", "ff_put_h264_chroma_mc2_neon", "ff_avg_pixels8_xy2_neon", "ff_hevc_slice_rpl", "avpriv_get_raw_pix_fmt_tags", "avcodec_decode_audio4", "ff_free_vlc", "av_codec_get_lowres", "swr_next_pts", "ff_hyscale_fast_c", "ff_avg_h264_qpel16_mc23_neon", "ff_hpeldsp_init_aarch64", "av_xtea_init", "ffio_read_partial", "av_d2str", "ff_hevc_sao_eo_class_decode", "av_strstart", "ff_pred_weight_table", "av_rdft_end", "avio_rl16", "ff_avg_pixels8_x2_neon", "av_log_get_flags", "ff_put_h264_qpel8_mc03_neon", "sws_normalizeVec", "ff_h264_idct_add16intra_neon", "av_timegm", "av_codec_get_tag2", "ff_isom_write_avcc", "ff_hevc_clear_refs", "av_write_uncoded_frame", "ff_h264_decode_init", "av_mul_q", "av_format_get_opaque", "ff_h264qpel_init_aarch64", "ff_hpeldsp_init", "ff_celp_circ_addf", "ff_put_no_rnd_qpel16_mc13_old_c", "ff_h264_idct_add_8_c", "ff_mpa_synth_filter_float", "ff_avg_h264_chroma_mc4_neon", "ff_mpadsp_init", "ff_msmpeg4_decode_motion", "ff_choose_chroma_location", "av_hash_alloc", "ff_vp8_decode_free", "ff_init_block_index", "av_nearer_q", "avformat_alloc_output_context2", "av_packet_free_side_data", "ff_simple_idct_add_12", "ff_put_h264_qpel16_mc20_neon", "ff_h263_decode_picture_header", "ff_avg_h264_qpel8_mc21_neon", "av_log_get_level", "ff_videodsp_init", "av_frame_get_channel_layout", "av_picture_copy", "ffio_free_dyn_buf", "av_stream_new_side_data", "av_get_codec_tag_string", "av_image_get_linesize", "av_buffer_ref", "ff_pred16x16_vert_neon", "av_fft_calc", "av_codec_is_decoder", "av_calloc", "swri_oldapi_conv_fltp_to_s16_2ch_neon", "ff_avg_pixels16_xy2_no_rnd_neon", "ff_h264_idct8_dc_add_neon", "ff_msmpeg4_pred_dc", "av_format_set_control_message_cb", "ff_mov_get_channel_layout_tag", "ff_h264_idct_add16_12_c", "av_buffer_pool_get", "av_get_frame_filename", "ffio_open_dyn_packet_buf", "ff_msmpeg4_coded_block_pred", "ff_init_desc_chscale", "av_reallocp", "av_parse_cpu_caps", "av_format_get_data_codec", "av_fmt_ctx_get_duration_estimation_method", "av_opt_is_set_to_default_by_name", "av_packet_ref", "ff_emulated_edge_mc_16", "av_mul_i", "av_buffer_unref", "av_add_index_entry", "av_strlcatf", "av_display_rotation_set", "ff_h263_show_pict_info", "ff_thread_report_progress2", "av_opt_set_from_string", "av_find_program_from_stream", "ff_simple_idct_add_10", "ff_put_no_rnd_qpel16_mc32_old_c", "ff_find_stream_index", "av_frame_set_pkt_duration", "avcodec_enum_to_chroma_pos", "ff_mov_init_hinting", "av_bprint_append_data", "ff_avg_qpel8_mc12_old_c", "av_find_default_stream_index", "ff_rl_init_vlc", "ff_put_h264_qpel16_mc11_neon", "ff_mpadsp_apply_window_float", "ff_put_no_rnd_qpel8_mc33_old_c", "avio_flush", "av_default_get_category", "av_aes_alloc", "av_format_set_subtitle_codec", "rgb24to32", "av_buffer_allocz", "ff_get_unscaled_swscale", "av_register_bitstream_filter", "ff_h264_unref_picture", "ff_thread_report_progress", "ff_hevc_save_states", "ff_dct_end", "ff_check_interrupt", "av_packet_shrink_side_data", "ff_color_frame", "ff_compute_frame_duration", "ff_hevc_extract_rbsp", "av_frame_get_buffer", "ff_h264_idct8_add4_neon", "av_log_default_callback", "avformat_get_class", "av_xiphlacing", "ff_print_debug_info2", "av_url_split", "av_sha_alloc", "ff_mpeg_er_frame_start", "av_downmix_info_update_side_data", "ff_avg_h264_qpel8_mc01_neon", "ff_h264_luma_dc_dequant_idct_12_c", "av_vorbis_parse_frame", "ff_put_no_rnd_qpel8_mc31_old_c", "ff_hevc_set_new_ref", "av_hash_update", "ff_hevc_sao_offset_sign_decode", "avpriv_mpeg4audio_get_config", "av_hmac_calc", "avpicture_layout", "ff_h264_get_profile", "av_thread_message_queue_set_err_send", "ff_copy_and_dup", "av_opt_find2", "avpriv_copy_pce_data", "av_opt_get_dict_val", "ff_init_poc", "av_pix_fmt_count_planes", "avcodec_chroma_pos_to_enum", "sws_freeVec", "av_dct_init", "av_codec_set_seek_preroll", "ff_vorbis_comment", "sws_alloc_context", "av_log_set_level", "ff_format_io_close", "ff_rfps_calculate", "ff_mkv_stereo3d_conv", "ff_wv_parse_header", "ff_update_duplicate_context", "ff_put_qpel16_mc11_old_c", "ff_hevc_split_coding_unit_flag_decode", "ff_imdct_half_c_fixed_32", "ff_h264_chroma422_dc_dequant_idct_14_c", "ff_rtp_codec_id", "av_get_colorspace_name", "ff_dcadsp_init", "av_audio_fifo_write", "ff_gmc_c", "swri_audio_convert_init_aarch64", "av_aes_ctr_set_random_iv", "av_timecode_get_smpte_from_framenum", "ff_fmt_convert_init_aarch64", "ff_biweight_h264_pixels_4_neon", "ff_vc1_interp_mc", "ff_h264_idct8_add4_12_c", "sws_getDefaultFilter", "ff_h264_chroma_dc_dequant_idct_9_c", "av_mastering_display_metadata_alloc", "avpriv_ac3_parse_header", "av_force_cpu_flags", "rgb15tobgr32", "ff_side_data_update_matrix_encoding", "ff_fft_end", "ff_tget", "av_dict_copy", "ff_generate_avci_extradata", "ff_msmpeg4_decode_ext_header", "ff_thread_await_progress", "ff_avg_pixels16_y2_no_rnd_neon", "ff_hevc_rem_intra_luma_pred_mode_decode", "av_murmur3_update", "av_new_packet", "ff_h264_flush_change", "avio_close", "ff_hevc_cu_chroma_qp_offset_idx", "ff_tadd_long_metadata", "av_parse_cpu_flags", "ff_rtp_chain_mux_open", "av_bitstream_filter_close", "ff_hevc_annexb2mp4", "swr_free", "ff_int32_to_float_fmul_array8_neon", "ff_pred8x8_0lt_dc_neon", "avformat_close_input", "av_new_program", "ff_h264_idct_add8_14_c", "ff_put_h264_qpel8_mc11_neon", "avpriv_put_string", "av_parser_init", "av_camellia_init", "ff_ps_apply", "sws_setColorspaceDetails", "av_tempfile", "ff_put_pixels8_l2_8", "ff_crc04C11DB7_update", "rgb16tobgr16", "ff_sws_init_range_convert", "av_imdct_half", "ff_dv_frame_profile", "ff_mpeg1_find_frame_end", "ff_imdct_half_c_fixed", "ff_mpeg4_get_video_packet_prefix_length", "ff_init_gamma_convert", "ff_hevc_mpm_idx_decode", "ff_mpv_common_init_neon", "ff_rm_reorder_sipr_data", "av_bprint_chars", "ff_rtp_get_codec_info", "ff_h264_decode_nal", "av_fifo_freep", "ffurl_open", "ff_h264_idct8_dc_add_14_c", "ff_vc1_pred_b_mv", "av_codec_get_id", "ff_decode_frame_props", "av_color_range_name", "av_dv_codec_profile2", "ff_h264_decode_init_vlc", "av_opt_child_next", "av_fast_malloc", "ff_avg_h264_chroma_mc8_neon", "ff_combine_frame", "ff_tadd_string_metadata", "av_rescale_q", "ff_h264_idct8_add_neon", "ff_hevc_pred_init", "ff_h264_chroma422_dc_dequant_idct_8_c", "ff_mpeg_framesize_alloc", "rgb48tobgr48_nobswap", "ff_imdct15_init", "ff_h263_update_motion_val", "ff_mpv_motion", "av_sha512_alloc", "rgb48tobgr48_bswap", "ff_mpeg4_frame_end", "ff_hevc_set_neighbour_available", "av_audio_fifo_alloc", "ff_put_pixels8_neon", "avio_accept", "av_image_fill_pointers", "ffurl_get_file_handle", "av_hex_dump", "ff_gen_search", "av_samples_copy", "ff_put_pixels8_y2_no_rnd_neon", "ffurl_seek", "ff_tread_tag", "av_opt_set_q", "ff_imdct36_blocks_float", "ff_dca_xll_flush", "ff_check_alignment", "ff_mpa_synth_filter_fixed", "ff_mov_write_chan", "ff_raw_data_read_header", "av_dict_count", "ff_h264_pred_direct_motion", "sws_convVec", "av_write_image_line", "ff_h264_reset_sei", "ff_mpeg4videodec_static_init", "ff_h261_loop_filter", "avcodec_encode_subtitle", "avcodec_get_chroma_sub_sample", "ff_hevc_merge_flag_decode", "av_frame_get_pkt_size"], "allstrings": ["TNS filter order %d is greater than maximum %d.\n", "Reserved bit set.\n", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Invalid Predictor Reset Group.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "invalid band type\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "Pulse tool not allowed in eight short sequence.\n", "error in spectral data, ESC overflow\n", "Pulse data corrupt or invalid.\n", "ms_present = 3 is reserved.\n", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "ChannelElement %d.%d missing \n", "Remapped id too large\n", "Too many channels\n", "mono with CPE\n", "stereo with SCE\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "Unknown ER channel configuration %d", "channel element %d.%d is not allocated\n", "no frame data found\n", "960/120 MDCT window", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "AAC data resilience (flags %x)", "epConfig %d", "SBR+", "Audio specific config size is invalid\n", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "Low Delay SBR", "Input buffer exhausted before END element found\n", "Audio object type %s%d", "Non-byte-aligned audio-specific config", "audio config changed\n", "initializing latmctx\n", "More than one AAC RDB per ADTS frame", "Error decoding AAC frame header.\n", "Elem type:%x id:%x\n", "skip_data_stream_element: Input buffer exhausted before END element found\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "extension type: %d len:%d\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "FILL:%s\n", "libfaac %d.%d", "Multiple programs", "Multiple layers", "no decoder config found\n", "incomplete frame\n", "frame length mismatch %d << %d\n", "ADTS header detected, probably as result of configuration misparsing\n", "aac_latm", "AAC LATM (Advanced Audio Coding LATM syntax)", "AAC (Advanced Audio Coding)", "AAC decoder", "dual_mono_mode", "Select the channel to decode for dual mono", "auto", "autoselection", "main", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "iid_mode %d is reserved.\n", "icc_mode %d is reserved.\n", "illegal iid\n", "illegal icc\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Expected to read %d PS bits actually read %d.\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "env_facs_q %d is invalid\n", "noise_facs_q %d is invalid\n", "Unsupported sample rate for SBR: %d\n", "Invalid bs_stop_freq: %d\n", "Assertion %s failed at %s:%d\n", "libavcodec/aacsbr_template.c", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "bs_pointer >= 0", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "patch construction failed\n", "Too many patches: %d\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Reserved SBR extensions", "SBR Extension over read.\n", "Expected to read %d SBR bytes actually read %d.\n", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "envelope scalefactor overflow in dequant\n", "temp1 <= 1E20", "libavcodec/aacsbr.c", "sbr->data[ch].bs_num_env > 0", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "!!&((())%%%\"\"", "))/113//+++((", "GAQ gain group code out-of-range\n", "Dependent substream decoding", "Reserved frame type\n", "Additional substreams", "Reduced sampling rate", "Block start info", "exponent %d is out-of-range\n", "frame sync error\n", "invalid bitstream id\n", "invalid sample rate\n", "invalid frame size\n", "unsupported frame type : skipping frame\n", "invalid frame type\n", "frame CRC mismatch\n", "unable to determine channel mode\n", "invalid spectral extension range (%d >= %d)\n", "invalid spectral extension copy start bin (%d >= %d)\n", "coupling not allowed in mono or dual-mono\n", "Enhanced coupling", "invalid coupling range (%d >= %d)\n", "new coupling strategy must be present in block 0\n", "new coupling coordinates must be present in block 0\n", "Warning: new rematrixing strategy not present in block 0\n", "bandwidth code = %d > 60\n", "new bit allocation info must be present in block 0\n", "new snr offsets must be present in block 0\n", "new coupling leak info must be present in block 0\n", "delta bit allocation strategy reserved\n", "error in bit allocation\n", "error decoding the audio block\n", "eac3", "ATSC A/52B (AC-3, E-AC-3)", "E-AC3 decoder", "ATSC A/52A (AC-3)", "AC3 decoder", "drc_scale", "percentage of dynamic range compression to apply", "heavy_compr", "enable heavy dynamic range compression", "target_level", "target level in -dBFS (0 not applied)", "dmix_mode", "Preferred Stereo Downmix Mode", "ltrt_cmixlev", "Lt/Rt Center Mix Level", "ltrt_surmixlev", "Lt/Rt Surround Mix Level", "loro_cmixlev", "Lo/Ro Center Mix Level", "loro_surmixlev", "Lo/Ro Surround Mix Level", "Cannot allocate memory.\n", "extradata is too small\n", "max samples per frame invalid: %u\n", "set_info failed\n", "Sample depth %d", "Invalid channel count\n", "Unsupported channel count: %d\n", "Error allocating buffers\n", "syntax element unsupported: %d\n", "invalid element channel count\n", "bps is unsupported: %d\n", "invalid samples per frame: %u\n", "sample count mismatch: %u != %d\n", "Compression with rice limit 0", "invalid zero block size of %d %d %d\n", "unknown prediction type: %i\n", "Error : %d bits left\n", "Failed to decode all channels\n", "no end tag found. incomplete packet.\n", "alac", "ALAC (Apple Lossless Audio Codec)", "extra_bits_bug", "Force non-standard decoding process", "Only mono and stereo is supported\n", "%d bits per coded sample", "Compression Level: %d - Flags: %d\n", "Incorrect compression level %d\n", "s->samples >= 0", "libavcodec/apedec.c", "Packet is too small\n", "packet size is not a multiple of 4. extra bytes at the end will be skipped.\n", "Incorrect offset passed\n", "Invalid sample count: %u.\n", "pure silence mono\n", "pure silence stereo\n", "Error decoding frame\n", "Error reading frame header\n", "Too many bits: %d\n", "Monkey's Audio", "APE decoder", "max_samples", "maximum number of samples decoded per call", "no maximum. decode all samples for each packet at once", "AVDCT", "DCT algorithm", "autoselect a good one", "fastint", "fast integer (experimental / for debugging)", "accurate integer", "experimental / for debugging", "altivec", "faan", "floating point AAN DCT (experimental / for debugging)", "idct", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "floating point AAN IDCT (experimental / for debugging)", "simpleauto", "bits_per_sample", "(unsigned)pkt->size <= 2147483647 - 32", "libavcodec/avpacket.c", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "size<=2147483647 - 5 && p - pkt->data >= size", "p-pkt->data == pkt->size", "incorrect codes\n", "Internal error, put_bits buffer too small\n", "length <= put_bits_left(pb)", "libavcodec/bitstream.c", "s->buf_ptr < s->buf_end", "libavcodec/put_bits.h", "n <= s->buf_end - s->buf_ptr", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code in init_vlc\n", "needed %d had %d\n", "ret >= 0", "mpeg1video", "MPEG-1 video", "mpeg2video", "MPEG-2 video", "mpegvideo_xvmc", "MPEG-1/2 video XvMC (X-Video Motion Compensation)", "h261", "H.261", "h263", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "rv10", "RealVideo 1.0", "rv20", "RealVideo 2.0", "mjpeg", "Motion JPEG", "mjpegb", "Apple MJPEG-B", "mpeg4", "MPEG-4 part 2", "rawvideo", "raw video", "msmpeg4v1", "MPEG-4 part 2 Microsoft variant version 1", "msmpeg4v2", "MPEG-4 part 2 Microsoft variant version 2", "msmpeg4v3", "MPEG-4 part 2 Microsoft variant version 3", "wmv1", "Windows Media Video 7", "wmv2", "Windows Media Video 8", "h263p", "H.263+ / H.263-1998 / H.263 version 2", "h263i", "Intel H.263", "flv1", "FLV / Sorenson Spark / Sorenson H.263 (Flash Video)", "svq1", "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1", "svq3", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3", "dvvideo", "DV (Digital Video)", "huffyuv", "HuffYUV", "cyuv", "Creative YUV (CYUV)", "h264", "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "indeo3", "Intel Indeo 3", "On2 VP3", "theora", "Theora", "asv1", "ASUS V1", "asv2", "ASUS V2", "ffv1", "FFmpeg video codec #1", "4X Movie", "vcr1", "ATI VCR1", "cljr", "Cirrus Logic AccuPak", "mdec", "Sony PlayStation MDEC (Motion DECoder)", "id RoQ video", "interplayvideo", "Interplay MVE video", "xan_wc3", "Wing Commander III / Xan", "xan_wc4", "Wing Commander IV / Xxan", "rpza", "QuickTime video (RPZA)", "cinepak", "Cinepak", "ws_vqa", "Westwood Studios VQA (Vector Quantized Animation) video", "msrle", "Microsoft RLE", "msvideo1", "Microsoft Video 1", "idcin", "id Quake II CIN video", "8bps", "QuickTime 8BPS video", "QuickTime Graphics (SMC)", "flic", "Autodesk Animator Flic video", "truemotion1", "Duck TrueMotion 1.0", "vmdvideo", "Sierra VMD video", "mszh", "LCL (LossLess Codec Library) MSZH", "zlib", "LCL (LossLess Codec Library) ZLIB", "qtrle", "QuickTime Animation (RLE) video", "snow", "Snow", "tscc", "TechSmith Screen Capture Codec", "ulti", "IBM UltiMotion", "qdraw", "Apple QuickDraw", "vixl", "Miro VideoXL", "qpeg", "Q-team QPEG", "ffvhuff", "Huffyuv FFmpeg variant", "rv30", "RealVideo 3.0", "rv40", "RealVideo 4.0", "SMPTE VC-1", "wmv3", "Windows Media Video 9", "loco", "LOCO", "wnv1", "Winnov WNV1", "aasc", "Autodesk RLE", "indeo2", "Intel Indeo 2", "fraps", "Fraps", "truemotion2", "Duck TrueMotion 2.0", "BMP (Windows and OS/2 bitmap)", "cscd", "CamStudio", "mmvideo", "American Laser Games MM Video", "zmbv", "Zip Motion Blocks Video", "AVS (Audio Video Standard) video", "smackvideo", "Smacker video", "NuppelVideo/RTJPEG", "kmvc", "Karl Morton's video codec", "flashsv", "Flash Screen Video v1", "cavs", "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)", "jpeg2000", "JPEG 2000", "vmnc", "VMware Screen Codec / VMware Video", "On2 VP5", "On2 VP6", "vp6f", "On2 VP6 (Flash version)", "dsicinvideo", "Delphine Software International CIN video", "tiertexseqvideo", "Tiertex Limited SEQ video", "Feeble Files/ScummVM DXA", "dnxhd", "VC3/DNxHD", "Nintendo Gamecube THP video", "Interplay C93", "bethsoftvid", "Bethesda VID video", "vp6a", "On2 VP6 (Flash version, with alpha channel)", "AMV Video", "Beam Software VB", "indeo4", "Intel Indeo Video Interactive 4", "indeo5", "Intel Indeo Video Interactive 5", "mimic", "Mimic", "RL2 video", "escape124", "Escape 124", "daala", "Daala", "dirac", "Dirac", "Brute Force & Ignorance", "Electronic Arts CMV video", "motionpixels", "Motion Pixels video", "Electronic Arts TGV video", "Electronic Arts TGQ video", "Electronic Arts TQI video", "aura", "Auravision AURA", "aura2", "Auravision Aura 2", "v210x", "Uncompressed 4:2:2 10-bit", "8088flex TMV", "v210", "Electronic Arts Madcow Video", "frwu", "Forward Uncompressed", "flashsv2", "Flash Screen Video v2", "cdgraphics", "CD Graphics video", "r210", "Uncompressed RGB 10-bit", "Deluxe Paint Animation", "binkvideo", "Bink video", "iff_ilbm", "IFF ILBM", "kgv1", "Kega Game Video", "Psygnosis YOP Video", "On2 VP8", "Google VP9", "pictor", "Pictor/PC Paint", "a64_multi", "Multicolor charset for Commodore 64", "a64_multi5", "Multicolor charset for Commodore 64, extended with 5th color (colram)", "r10k", "AJA Kona 10-bit RGB Codec", "mvc1", "Silicon Graphics Motion Video Compressor 1", "mvc2", "Silicon Graphics Motion Video Compressor 2", "mxpeg", "Mobotix MxPEG video", "lagarith", "Lagarith lossless", "prores", "Apple ProRes (iCodec Pro)", "Bitmap Brothers JV video", "Chronomaster DFA", "utvideo", "Ut Video", "bmv_video", "Discworld II BMV video", "vble", "VBLE Lossless Codec", "dxtory", "Dxtory", "v410", "Uncompressed 4:4:4 10-bit", "cdxl", "Commodore CDXL video", "zerocodec", "ZeroCodec Lossless Video", "mss1", "MS Screen 1", "msa1", "MS ATC Screen", "tscc2", "TechSmith Screen Codec 2", "mts2", "MS Expression Encoder Screen", "cllc", "Canopus Lossless Codec", "mss2", "MS Windows Media Video V9 Screen", "Apple Intermediate Codec", "y41p", "Uncompressed YUV 4:1:1 12-bit", "escape130", "Escape 130", "avrp", "Avid 1:1 10-bit RGB Packer", "012v", "avui", "Avid Meridien Uncompressed", "ayuv", "Uncompressed packed MS 4:4:4:4", "targa_y216", "Pinnacle TARGA CineWave YUV16", "v308", "Uncompressed packed 4:4:4", "v408", "Uncompressed packed QT 4:4:4:4", "yuv4", "Uncompressed packed 4:2:0", "avrn", "Avid AVI Codec", "cpia", "CPiA video format", "xface", "X-face image", "smvjpeg", "Sigmatel Motion Video", "Go2Meeting", "hnm4video", "HNM 4 video", "hevc", "H.265 / HEVC (High Efficiency Video Coding)", "Mirillis FIC", "paf_video", "Amazing Studio Packed Animation File Video", "On2 VP7", "sanm", "LucasArts SANM/SMUSH video", "sgirle", "SGI RLE 8-bit", "Canopus HQX", "hq_hqa", "Canopus HQ/HQA", "Vidvox Hap decoder", "Resolume DXV", "screenpresso", "Screenpresso", "wrapped_avframe", "AVFrame to AVPacket passthrough", "rscc", "innoHeim/Rsupport Screen Capture Codec", "alias_pix", "Alias/Wavefront PIX image", "ansi", "ASCII/ANSI art", "brender_pix", "BRender PIX image", "DirectDraw Surface image decoder", "DPX (Digital Picture Exchange) image", "OpenEXR image", "GIF (Graphics Interchange Format)", "jpegls", "JPEG-LS", "ljpeg", "Lossless JPEG", "PAM (Portable AnyMap) image", "PBM (Portable BitMap) image", "PC Paintbrush PCX image", "PGM (Portable GrayMap) image", "pgmyuv", "PGMYUV (Portable GrayMap YUV) image", "PNG (Portable Network Graphics) image", "PPM (Portable PixelMap) image", "V.Flash PTX image", "SGI image", "sp5x", "Sunplus JPEG (SP5X)", "sunrast", "Sun Rasterfile image", "Truevision Targa image", "tdsc", "TDSC", "tiff", "TIFF image", "Renderware TXD (TeXture Dictionary) image", "vc1image", "Windows Media Video 9 Image v2", "webp", "WebP", "wmv3image", "Windows Media Video 9 Image", "XBM (X BitMap) image", "XWD (X Window Dump) image", "apng", "APNG (Animated Portable Network Graphics) image", "cfhd", "Cineform HD", "pcm_s16le", "PCM signed 16-bit little-endian", "pcm_s16be", "PCM signed 16-bit big-endian", "pcm_u16le", "PCM unsigned 16-bit little-endian", "pcm_u16be", "PCM unsigned 16-bit big-endian", "pcm_s8", "PCM signed 8-bit", "pcm_u8", "PCM unsigned 8-bit", "pcm_mulaw", "PCM mu-law / G.711 mu-law", "pcm_alaw", "PCM A-law / G.711 A-law", "pcm_s32le", "PCM signed 32-bit little-endian", "pcm_s32be", "PCM signed 32-bit big-endian", "pcm_u32le", "PCM unsigned 32-bit little-endian", "pcm_u32be", "PCM unsigned 32-bit big-endian", "pcm_s24le", "PCM signed 24-bit little-endian", "pcm_s24be", "PCM signed 24-bit big-endian", "pcm_u24le", "PCM unsigned 24-bit little-endian", "pcm_u24be", "PCM unsigned 24-bit big-endian", "pcm_s24daud", "PCM D-Cinema audio signed 24-bit", "pcm_zork", "PCM Zork", "pcm_s16be_planar", "PCM signed 16-bit big-endian planar", "pcm_s16le_planar", "PCM signed 16-bit little-endian planar", "pcm_s24le_planar", "PCM signed 24-bit little-endian planar", "pcm_s32le_planar", "PCM signed 32-bit little-endian planar", "pcm_dvd", "PCM signed 20|24-bit big-endian", "pcm_f32be", "PCM 32-bit floating point big-endian", "pcm_f32le", "PCM 32-bit floating point little-endian", "pcm_f64be", "PCM 64-bit floating point big-endian", "pcm_f64le", "PCM 64-bit floating point little-endian", "pcm_bluray", "PCM signed 16|20|24-bit big-endian for Blu-ray media", "pcm_lxf", "PCM signed 20-bit little-endian planar", "s302m", "SMPTE 302M", "pcm_s8_planar", "PCM signed 8-bit planar", "adpcm_ima_qt", "ADPCM IMA QuickTime", "adpcm_ima_wav", "ADPCM IMA WAV", "adpcm_ima_dk3", "ADPCM IMA Duck DK3", "adpcm_ima_dk4", "ADPCM IMA Duck DK4", "adpcm_ima_ws", "ADPCM IMA Westwood", "adpcm_ima_smjpeg", "ADPCM IMA Loki SDL MJPEG", "adpcm_ms", "ADPCM Microsoft", "adpcm_4xm", "ADPCM 4X Movie", "adpcm_xa", "ADPCM CDROM XA", "adpcm_adx", "SEGA CRI ADX ADPCM", "adpcm_ea", "ADPCM Electronic Arts", "adpcm_g726", "G.726 ADPCM", "adpcm_ct", "ADPCM Creative Technology", "adpcm_swf", "ADPCM Shockwave Flash", "adpcm_yamaha", "ADPCM Yamaha", "adpcm_sbpro_4", "ADPCM Sound Blaster Pro 4-bit", "adpcm_sbpro_3", "ADPCM Sound Blaster Pro 2.6-bit", "adpcm_sbpro_2", "ADPCM Sound Blaster Pro 2-bit", "adpcm_thp", "ADPCM Nintendo THP", "adpcm_thp_le", "ADPCM Nintendo THP (Little-Endian)", "adpcm_ima_amv", "ADPCM IMA AMV", "adpcm_ea_r1", "ADPCM Electronic Arts R1", "adpcm_ea_r3", "ADPCM Electronic Arts R3", "adpcm_ea_r2", "ADPCM Electronic Arts R2", "adpcm_ima_ea_sead", "ADPCM IMA Electronic Arts SEAD", "adpcm_ima_ea_eacs", "ADPCM IMA Electronic Arts EACS", "adpcm_ea_xas", "ADPCM Electronic Arts XAS", "adpcm_ea_maxis_xa", "ADPCM Electronic Arts Maxis CDROM XA", "adpcm_ima_iss", "ADPCM IMA Funcom ISS", "adpcm_g722", "G.722 ADPCM", "adpcm_ima_apc", "ADPCM IMA CRYO APC", "adpcm_afc", "ADPCM Nintendo Gamecube AFC", "adpcm_ima_oki", "ADPCM IMA Dialogic OKI", "adpcm_dtk", "ADPCM Nintendo Gamecube DTK", "adpcm_ima_rad", "ADPCM IMA Radical", "adpcm_g726le", "G.726 ADPCM little-endian", "adpcm_vima", "LucasArts VIMA audio", "adpcm_psx", "ADPCM Playstation", "adpcm_aica", "ADPCM Yamaha AICA", "amr_nb", "AMR-NB (Adaptive Multi-Rate NarrowBand)", "amr_wb", "AMR-WB (Adaptive Multi-Rate WideBand)", "ra_144", "RealAudio 1.0 (14.4K)", "ra_288", "RealAudio 2.0 (28.8K)", "roq_dpcm", "DPCM id RoQ", "interplay_dpcm", "DPCM Interplay", "xan_dpcm", "DPCM Xan", "sol_dpcm", "DPCM Sol", "sdx2_dpcm", "DPCM Squareroot-Delta-Exact", "MP2 (MPEG audio layer 2)", "MP3 (MPEG audio layer 3)", "DCA (DTS Coherent Acoustics)", "vorbis", "Vorbis", "dvaudio", "DV audio", "wmav1", "Windows Media Audio 1", "wmav2", "Windows Media Audio 2", "mace3", "MACE (Macintosh Audio Compression/Expansion) 3:1", "mace6", "MACE (Macintosh Audio Compression/Expansion) 6:1", "vmdaudio", "Sierra VMD audio", "flac", "FLAC (Free Lossless Audio Codec)", "mp3adu", "ADU (Application Data Unit) MP3 (MPEG audio layer 3)", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "Westwood Audio (SND1)", "qdm2", "QDesign Music Codec 2", "cook", "Cook / Cooker / Gecko (RealAudio G2)", "truespeech", "DSP Group TrueSpeech", "TTA (True Audio)", "smackaudio", "Smacker audio", "qcelp", "QCELP / PureVoice", "wavpack", "WavPack", "dsicinaudio", "Delphine Software International CIN audio", "IMC (Intel Music Coder)", "musepack7", "Musepack SV7", "MLP (Meridian Lossless Packing)", "gsm_ms", "GSM Microsoft variant", "atrac3", "ATRAC3 (Adaptive TRansform Acoustic Coding 3)", "voxware", "Voxware RT29 Metasound", "nellymoser", "Nellymoser Asao", "musepack8", "Musepack SV8", "speex", "Speex", "wmavoice", "Windows Media Audio Voice", "wmapro", "Windows Media Audio 9 Professional", "wmalossless", "Windows Media Audio Lossless", "atrac3p", "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)", "sipr", "RealAudio SIPR / ACELP.NET", "MP1 (MPEG audio layer 1)", "twinvq", "VQF TwinVQ", "truehd", "TrueHD", "mp4als", "MPEG-4 Audio Lossless Coding (ALS)", "atrac1", "ATRAC1 (Adaptive TRansform Acoustic Coding)", "binkaudio_rdft", "Bink Audio (RDFT)", "binkaudio_dct", "Bink Audio (DCT)", "qdmc", "QDesign Music", "celt", "Constrained Energy Lapped Transform (CELT)", "g723_1", "G.723.1", "dss_sp", "Digital Speech Standard - Standard Play mode (DSS SP)", "g729", "G.729", "8svx_exp", "8SVX exponential", "8svx_fib", "8SVX fibonacci", "bmv_audio", "Discworld II BMV audio", "ralf", "RealAudio Lossless", "IAC (Indeo Audio Coder)", "ilbc", "iLBC (Internet Low Bitrate Codec)", "wavesynth", "Wave synthesis pseudo-codec", "sonic", "Sonic", "sonicls", "Sonic lossless", "opus", "Opus (Opus Interactive Audio Codec)", "comfortnoise", "RFC 3389 Comfort Noise", "TAK (Tom's lossless Audio Kompressor)", "metasound", "Voxware MetaSound", "paf_audio", "Amazing Studio Packed Animation File Audio", "On2 Audio for Video Codec", "evrc", "EVRC (Enhanced Variable Rate Codec)", "SMV (Selectable Mode Vocoder)", "4GV (Fourth Generation Vocoder)", "dsd_lsbf", "DSD (Direct Stream Digital), least significant bit first", "dsd_msbf", "DSD (Direct Stream Digital), most significant bit first", "dsd_lsbf_planar", "DSD (Direct Stream Digital), least significant bit first, planar", "dsd_msbf_planar", "DSD (Direct Stream Digital), most significant bit first, planar", "interplayacm", "Interplay ACM", "xma1", "Xbox Media Audio 1", "xma2", "Xbox Media Audio 2", "dvd_subtitle", "DVD subtitles", "dvb_subtitle", "DVB subtitles", "raw UTF-8 text", "xsub", "XSUB", "ASS (Advanced SSA) subtitle", "SSA (SubStation Alpha) subtitle", "mov_text", "MOV text", "hdmv_pgs_subtitle", "HDMV Presentation Graphic Stream subtitles", "dvb_teletext", "DVB teletext", "SubRip subtitle with embedded timing", "subrip", "SubRip subtitle", "microdvd", "MicroDVD subtitle", "mpl2", "MPL2 subtitle", "eia_608", "EIA-608 closed captions", "jacosub", "JACOsub subtitle", "PJS (Phoenix Japanimation Society) subtitle", "sami", "SAMI subtitle", "realtext", "RealText subtitle", "Spruce subtitle format", "subviewer1", "SubViewer v1 subtitle", "subviewer", "SubViewer subtitle", "vplayer", "VPlayer subtitle", "webvtt", "WebVTT subtitle", "hdmv_text_subtitle", "HDMV Text subtitle", "TrueType font", "bintext", "Binary text", "xbin", "eXtended BINary text", "iCEDraw text", "OpenType font", "SMPTE 336M Key-Length-Value (KLV) metadata", "dvd_nav_packet", "DVD Nav packet", "timed_id3", "timed ID3 metadata", "bin_data", "binary data", "application/octet-stream", "application/vnd.ms-opentype", "application/x-truetype-font", "application/x-font", "image/png", "image/x-xwindowdump", "image/webp", "image/tiff", "image/x-targa", "image/x-tga", "image/x-pcx", "image/x-portable-pixmap", "image/gif", "image/jp2", "image/x-ms-bmp", "image/jpeg", "Deallocating memory.\n", "Memory deallocated.\n", "Necessary extradata missing!\n", "codecdata_length=%d\n", "Invalid number of channels\n", "js_subband_start %d is too large\n", "subpacket[%i].cookversion=%x\n", "Container channels != 1", "MONO\n", "STEREO\n", "Container channels != 2", "JOINT_STEREO\n", "MULTI_CHANNEL\n", "Cook version %d", "different number of samples per channel!\n", "total_subbands > 53", "js_vlc_bits = %d, only >= %d and <= 6 allowed!\n", "subbands > 50", "subbands = 0", "Too many subpackets %d for channels %d\n", "subpackets > %d", "sqvh VLC init\n", "subpacket %i Joint-stereo VLC used.\n", "VLC tables initialized.\n", "MDCT initialized, order = %d.\n", "samples_per_channel = %d", "Invalid quantizer %d at position %d, outside [-63, 63] range\n", "frame subpacket size total > avctx->block_align!\n", "subpacket[%i] size %i js %i %i block_align %i\n", "decouple value too large\n", "subpacket[%i] %i %i\n", "Subband sample buffer overflow\n", "Invalid XBR bit allocation index\n", "Invalid number of bits for XBR scale factor index\n", "Invalid XBR scale factor index\n", "Failed to decode block code(s)\n", "XBR-DSYNC check failed\n", "Invalid X96 channel set header checksum\n", "Invalid X96 subband start index (%d)\n", "Invalid X96 subband activity count (%d)\n", "Invalid X96 joint intensity coding index\n", "Invalid X96 scale factor code book\n", "Invalid X96 bit allocation index\n", "Invalid scale factor index\n", "Invalid X96 joint scale factor code book\n", "Invalid joint scale factor index\n", "X96-DSYNC check failed\n", "Read past end of X96 channel set header\n", "Invalid number of primary audio channels (%d) for audio channel arrangement (%d)\n", "Invalid XXCH channel set header checksum\n", "%d XXCH channels", "Invalid XXCH speaker layout mask (%#x)\n", "XXCH speaker layout mask (%#x) overlaps with core (%#x)\n", "Invalid XXCH downmix scale index (%d)\n", "Invalid XXCH downmix channel mapping mask (%#x)\n", "Invalid XXCH downmix coefficient index (%d)\n", "Invalid subband activity count\n", "Invalid joint intensity coding index\n", "Invalid scale factor code book\n", "Invalid bit allocation quantizer select\n", "Invalid bit allocation index\n", "Invalid joint scale factor code book\n", "Invalid LFE scale factor index\n", "DSYNC check failed\n", "Read past end of XXCH channel set header\n", "Invalid XXCH sync word\n", "Invalid XXCH frame header checksum\n", "Invalid number of bits for XXCH speaker mask (%d)\n", "%d XXCH channel sets", "XXCH core speaker activity mask (%#x) disagrees with core (%#x)\n", "Read past end of XXCH frame header\n", "Read past end of XXCH channel set\n", "Deficit samples are not supported\n", "Unsupported number of PCM sample blocks (%d)\n", "Invalid core frame size (%d bytes)\n", "Unsupported audio channel arrangement (%d)\n", "Invalid core audio sampling frequency\n", "Invalid low frequency effects flag\n", "Invalid source PCM resolution\n", "Invalid auxiliary data sync word\n", "Invalid primary channel set downmix type\n", "Invalid downmix coefficient index\n", "Invalid auxiliary data checksum\n", "XCH sync word not found\n", "X96 sync word not found\n", "XXCH sync word not found\n", "Working around excessive core frame size (%d > %d)\n", "Read past end of core frame\n", "XCH with Cs speaker already present\n", "Invalid XBR sync word\n", "Invalid XBR frame header checksum\n", "Invalid number of active XBR subbands (%d)\n", "Invalid X96 sync word\n", "Invalid X96 frame header checksum\n", "Invalid X96 revision (%d)\n", "Read past end of XCH frame\n", "Read past end of XBR frame header\n", "Read past end of XBR channel set\n", "Read past end of X96 frame header\n", "Read past end of X96 channel set\n", "Read past end of X96 frame\n", "Fixed point mode doesn't support LFF=1\n", "Invalid EXSS header checksum\n", "Packet too short for EXSS frame\n", "%d audio presentations", "%d audio assets", "EXSS asset out of bounds\n", "Speaker mask disabled yet there are remapping sets\n", "Invalid speaker layout mask for mixing configuration\n", "Read past end of EXSS asset descriptor\n", "Invalid extension size in EXSS asset descriptor\n", "Read past end of EXSS header\n", "Invalid XLL sync word\n", "XLL stream version %d", "Invalid XLL common header checksum\n", "Invalid XLL frame size (%d bytes)\n", "%d XLL channel sets", "Too many segments per XLL frame\n", "Too few samples per XLL segment\n", "Too many samples per XLL segment\n", "Too many samples per XLL frame\n", "Invalid XLL sub-header checksum\n", "%d XLL channels", "%d-bit XLL storage resolution", "Invalid PCM bit resolution for XLL channel set (%d > %d)\n", "%d Hz XLL sampling frequency", "XLL sampling frequency modifier", "XLL replacement set", "The first (and only) XLL channel set must be primary\n", "Invalid XLL primary channel set downmix type\n", "XLL channel set outside of hierarchy", "Invalid XLL downmix scale index\n", "Invalid XLL downmix coefficient index\n", "Disabled XLL channel mask", "Invalid XLL channel mask\n", "Custom XLL channel to speaker mapping", "Extra XLL frequency bands", "Different XLL audio characteristics", "Invalid XLL original channel order\n", "Invalid XLL adaptive predicition order\n", "Invalid XLL reflection coefficient index\n", "Invalid LSB section size\n", "LSB section missing with non-zero LSB width\n", "Too many NAVI entries (%d)\n", "Invalid NAVI segment size (%d bytes)\n", "Invalid NAVI checksum\n", "Invalid NAVI position\n", "Invalid isolated sample location\n", "Read past end of XLL common header\n", "Read past end of XLL sub-header\n", "Read past end of XLL band data\n", "Read past end of XLL frame\n", "Residual encoded channels are present without core\n", "Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\n", "Number of samples per frame mismatch between core (%d) and XLL (%d)\n", "Residual encoded channel (%d) references unavailable core channel\n", "Invalid core shift (%d bits)\n", "Invalid request_channel_layout\n", "((ch_mask & (DCA_SPEAKER_MASK_L | DCA_SPEAKER_MASK_R)) == (DCA_SPEAKER_MASK_L | DCA_SPEAKER_MASK_R))", "libavcodec/dcadec.c", "DCA decoder", "core_only", "Decode core only without extensions", "Stream is old and may not work\n", "Stream may have unhandled features\n", "Unknown chroma format %d\n", "Dimensions must be an integer multiple of the chroma subsampling\n", "Unsupported picture coding mode %d", "guess_dc() is out of memory\n", "s->quarter_sample", "libavcodec/error_resilience.c", "internal error, slice end before start\n", "ignoring last missing slice\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "0x%04X", "Invalid TIFF tag type 0 found for %s with size %d\n", "TIFF tag type (%u)", "invalid sync code\n", "invalid channel mode: %d\n", "invalid sample size code (%d)\n", "broken stream, invalid padding\n", "reserved blocksize code: 0\n", "illegal sample rate code %d\n", "header crc mismatch\n", "sample/frame number invalid; utf8 fscked\n", "extradata NULL or too small.\n", "extradata contains %d bytes too many.\n", "extradata too small.\n", "invalid max blocksize: %d\n", "couldn't allocate fifo_buf\n", "sample rate change detected in adjacent frames\n", "bits per sample change detected in adjacent frames\n", "blocking strategy change detected in adjacent frames\n", "number of channels change detected in adjacent frames\n", "sample/frame number mismatch in adjacent frames\n", "crc check failed from offset %i (frame %ld) to %i (frame %ld)\n", "couldn't reallocate wrap buffer of size %d", "couldn't allocate FLACHeaderMarker\n", "couldn't allocate link_penalty\n", "dropping low score %i frame header from offset %i to %i\n", "couldn't reallocate buffer of size %td\n", "find_new_headers couldn't allocate FLAC header\n", "Junk frame till offset %i\n", "s->flac_stream_info.max_blocksize", "libavcodec/flacdec.c", "illegal residual coding method %d\n", "invalid rice order: %i blocksize %i\n", "invalid predictor order: %i > %i\n", "skipping flac header packet 1\n", "skipping vorbis comment\n", "invalid frame header\n", "bps not found in STREAMINFO or frame header\n", "switching bps mid-stream is not supported\n", "blocksize %d > %d\n", "sample rate not found in STREAMINFO or frame header\n", "  Max Blocksize: %d\n", "  Max Framesize: %d\n", "  Samplerate: %d\n", "  Channels: %d\n", "  Bits: %d\n", "invalid subframe padding\n", "Invalid number of wasted bits > available bits (%d) - left=%d\n", "Decorrelated bit depth > 32", "illegal pred order %d\n", "invalid coeff precision\n", "qlevel %d not supported, maybe buggy stream\n", "invalid coding type\n", "CRC error at PTS %ld\n", "overread: %d\n", "underread: %d orig size: %d\n", "invalid header\n", "decode_frame() failed\n", "FLAC decoder", "use_buggy_lpc", "emulate old buggy lavc behavior", "333'\r", "Bad picture format\n", "%c esc_type:%d, qp:%d num:%d\n", "qscale has forbidden 0 value\n", "header damaged\n", "illegal mba at %d %d\n", "Invalid mtype index %d\n", "h->mtype < (sizeof(ff_h261_mtype_map) / sizeof((ff_h261_mtype_map)[0]))", "libavcodec/h261dec.c", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d\n", "Error at MB: %d\n", "s->current_picture.f->pict_type == s->current_picture_ptr->f->pict_type", "s->current_picture.f->pict_type == s->pict_type", "\u000b\r\r\r", "discarding %d junk bits at end, next would be %X\n", "overreading %d bits\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "Unsupported codec %d\n", "L263", "S263", "this codec does not support truncated bitstreams\n", "Discarding excessive bitstream in packed xvid\n", "Reverting picture dimensions change due to header decoding failure\n", "format change not supported\n", "GEOV", "GEOX", "Reference not available for error concealing\n", "Reference invalid\n", "Invalid POC %d<%d\n", "Increasing reorder buffer to %d\n", "pics <= 16", "libavcodec/h264.c", "no picture %s\n", "stereo_mode", "top block unavailable for requested intra4x4 mode %d at %d %d\n", "left block unavailable for requested intra4x4 mode %d at %d %d\n", "out of range intra chroma pred mode at %d %d\n", "top block unavailable for requested intra mode at %d %d\n", "left block unavailable for requested intra mode at %d %d\n", "AVC: nal size %d\n", "NAL %d/%d at %d/%d length %d\n", "AVC: Consumed only %d bytes instead of %d\n", "Ignoring NAL %d in global header/extradata\n", "Invalid inter IDR frame\n", "invalid mixed IDR / non IDR frames cannot be decoded in slice multithreading mode\n", "data partitioning", "SPS decoding failure, trying again with the complete NAL\n", "next_avc - buf_index + consumed == nalsize", "Unknown NAL code: %d (%d bits)\n", "decode_slice_header error\n", "avcC %d too short\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "buf_index <= buf_size", "Q264", "no frame!\n", "Duplicating field %d to fill missing\n", "pict->buf[0] || !*got_frame", "Invalid UE golomb code\n", "luma_log2_weight_denom %d is out of range\n", "chroma_log2_weight_denom %d is out of range\n", "reference overflow %u > %u or %u > %u\n", "pthread_once has failed.", "Error resilience with slice threads is enabled. It is unsafe and unsupported and may crash. Use it at your own risk\n", "H264 Decoder", "is_avc", "is avc", "nal_length_size", "enable_er", "Enable error resilience on damaged frames (unsafe)", "overflow in decode_cabac_mb_mvd\n", "Reference %d >= %d\n", "gray chroma\n", "cabac decode of qscale diff failed at %d %d\n", "Invalid level prefix\n", "negative number of zero coeffs at %d %d\n", "offset == (sizeof(coeff_token_vlc_tables) / sizeof((coeff_token_vlc_tables)[0]))", "libavcodec/h264_cavlc.c", "mb_type %d in %c slice too large at %d %d\n", "Not enough data for an intra PCM block.\n", "B sub_mb_type %u out of range at %d %d\n", "P sub_mb_type %u out of range at %d %d\n", "ref %u overflow\n", "cbp too large (%u) at %d %d\n", "dquant out of range (%d) at %d %d\n", "co located POCs unavailable\n", "private_spspps_buf", "Too big extradata size, corrupted stream or invalid MP4/AVCC bitstream\n", "Packet header is not contained in global extradata, corrupted stream or invalid MP4/AVCC bitstream\n", "Warning: SPS NALU missing or invalid. The resulting stream may not play.\n", "Warning: PPS NALU missing or invalid. The resulting stream may not play.\n", "SPS not present in the stream, nor in AVCC, stream may be unreadable\n", "PPS not present in the stream, nor in AVCC, stream may be unreadable\n", "h264_mp4toannexb", "AVC-parser: nal length size invalid\n", "AVC-parser: nal size %d remaining %d\n", "pps_id %u out of range\n", "non-existing PPS %u referenced\n", "non-existing SPS %u referenced\n", "illegal reordering_of_pic_nums_idc %d\n", "reference count %d overflow\n", "illegal memory management control operation %d\n", "missing picture in access unit with size %d\n", "!dst->f->buf[0]", "libavcodec/h264_picture.c", "src->f->buf[0]", "hardware accelerator failed to decode picture\n", "Gray", "MB-AFF", "Truncating likely oversized SPS\n", "sps_id %u out of range\n", "chroma_format_idc %u", "separate color planes are not supported\n", "Different chroma and luma bit depth", "illegal bit depth value (%d, %d)\n", "log2_max_frame_num_minus4 out of range (0-12): %d\n", "log2_max_poc_lsb (%d) is out of range\n", "poc_cycle_length overflow %d\n", "illegal POC type %d\n", "too many reference frames %d\n", "mb_width/height overflow\n", "discarding sps cropping, original values are l:%d r:%d t:%d b:%d\n", "Reducing left cropping to %d chroma samples to preserve alignment.\n", "crop values invalid %d %d %d %d / %d %d\n", "illegal aspect ratio\n", "Truncated VUI\n", "time_scale/num_units_in_tick invalid or unsupported (%u/%u)\n", "cpb_count %d invalid\n", "Clipping illegal num_reorder_frames %d\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %d/%d b%d reo:%d\n", "Overread %s by %d bits\n", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "8x8DCT", "Truncating likely oversized PPS\n", "Invalid luma bit depth=%d\n", "Unimplemented luma bit depth=%d\n", "FMO not supported\n", "reference overflow (pps)\n", "Current profile doesn't provide more RBSP data in PPS, skipping\n", "pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s\n", "libavcodec/h264_refs.c", "remove short %d count %d\n", "%d %d %p\n", "len <= 32", "Discarding mismatching reference\n", "short term list:\n", "%u fn:%d poc:%d %p\n", "long term list:\n", "reference count overflow\n", "abs_diff_pic_num overflow\n", "long_term_pic_idx overflow\n", "illegal modification_of_pic_nums_idc %u\n", "reference picture missing during reorder\n", "Missing reference picture, default is %d\n", "av_buffer_get_ref_count(sl->ref_list[list][index].parent->f->buf[0]) > 0", "MMCO opcode [%d, %d] at %d mismatches between slices\n", "Inconsistent MMCO state between slices [%d, %d]\n", "no mmco here\n", "mmco:%d %d %d\n", "mmco: unref short failure\n", "mmco: unref short %d count %d\n", "mmco: unref long failure\n", "mmco: cannot assign current picture to short and long at the same time\n", "mmco: cannot assign current picture to 2 long term references\n", "!h->cur_pic_ptr->long_ref", "illegal short term reference assignment for second field in complementary field pair (first field is long term)\n", "illegal short term buffer state detected\n", "number of reference frames (%d+%d) exceeds max (%d; probably corrupt input), discarding one\n", "illegal long ref in memory management control operation %d\n", "SEI %d len:%d\n", "SEI type %d size %d truncated at %d\n", "ct_type:%X pic_struct:%d\n", "x264 - core %d", "x264 - core 0000", "user data:\"%s\"\n", "sei_recovery_frame_cnt: %d\n", "non-existing SPS %d referenced in buffering period\n", "SEI FPA %d %d %d %d %d %d\n", "Green Metadata Info SEI message\n", "green_metadata_type                            = %d\n", "green_metadata_period_type                     = %d\n", "green_metadata_num_seconds                     = %d\n", "green_metadata_num_pictures                    = %d\n", "SEI GREEN Complexity Metrics                   = %f %f %f %f\n", "xsd_metric_type                                = %d\n", "xsd_metric_value                               = %f\n", "unknown SEI type %d\n", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "mono", "Could not allocate memory\n", "VDPAU decoding does not support video colorspace.\n", "Unsupported bit depth %d\n", "too many threads/slices %d, reducing to %d\n", "context_init() failed.\n", "Attempt to start a frame outside SETUP state\n", "no frame buffer available\n", "!pic->f->data[0]", "libavcodec/h264_slice.c", "!pic->hwaccel_picture_private", "h->block_offset[15] == (4 * ((scan8[15] - scan8[0]) & 7) << h->pixel_shift) + 4 * sl->linesize * ((scan8[15] - scan8[0]) >> 3)", "Slice overlaps with next at %d\n", "bytestream overread %td\n", "error while decoding MB %d %d, bytestream %td\n", "error while decoding MB %d %d\n", "h264_slice_header_init() failed", " fix", " IDR", "TEMP", "SPAT", "!h->setup_finished", "Too many fields\n", "Cannot decode multiple access units as slice threads\n", "Broken frame packetizing\n", "sl == h->slice_ctx", "slice type %d too large at %d\n", "A non-intra slice in an IDR NAL unit.\n", "PPS change from %d to %d forbidden\n", "PPS changed between slices\n", "SPS changed in the middle of the frame\n", "Delayed frames seen. Reenabling low delay requires a codec flush.\n", "h->sps.crop_right + h->sps.crop_left < (unsigned)h->width", "h->sps.crop_top + h->sps.crop_bottom < (unsigned)h->height", "Invalid cropped dimensions: %dx%d.\n", "Ignoring cropping information.\n", "changing width %d -> %d / height %d -> %d on slice %d\n", "Reinit context to %dx%d, pix_fmt: %s\n", "h264_slice_header_init() failed\n", "Cannot (re-)initialize context during parallel decoding.\n", "Frame num change from %d to %d\n", "This stream was generated by a broken encoder, invalid 8x8 inference\n", "Changing field mode (%d -> %d) between slices is not allowed\n", "unset cur_pic_ptr on slice %d\n", "h->cur_pic_ptr", "h->cur_pic_ptr->f->buf[0]", "Invalid field mode combination %d/%d\n", "Found reference and non-reference fields in the same frame, which", "Frame num gap %d %d\n", "first_mb_in_slice overflow\n", "cabac_init_idc %u overflow\n", "QP %u out of range\n", "deblocking_filter_idc %u out of range\n", "deblocking filter parameters %d %d out of range\n", "Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\nTo parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\nSetting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding but will generate non-standard-compliant output.\n", "Deblocking switched inside frame.\n", "Possibly too many slices (%d >= %d), increase MAX_SLICES and recompile if there are artifacts\n", "slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n", "context_count && h->slice_ctx[context_count - 1].mb_y < h->mb_height", "bit_depth<=8", "libavcodec/h264dsp.c", "libavcodec/h264pred.c", "The cu_qp_delta %d is outside the valid range [%d, %d].\n", "cu_chroma_qp_offset_idx not yet tested.\n", "Impossible initial tile.\n", "Previous slice segment missing\n", "PPS id out of range: %d\n", "PPS changed between slices.\n", "Invalid slice segment address: %u.\n", "Independent slice segment missing.\n", "Unknown slice type: %d.\n", "Inter slices in an IRAP frame.\n", "Ignoring POC change between slices: %d -> %d\n", "No ref lists in the SPS.\n", "Too many refs: %d/%d.\n", "Zero refs for a frame with P or B slices.\n", "Invalid collocated_ref_idx: %d.\n", "luma_log2_weight_denom %d is invalid\n", "Invalid number of merging MVP candidates: %d.\n", "num_entry_point_offsets %d is invalid\n", "offset_len %d is invalid\n", "Failed to allocate memory\n", "too many slice_header_extension_data_bytes\n", "The slice_qp %d is outside the valid range [%d, 51].\n", "Impossible slice segment.\n", "Overread slice header by %d bits\n", "Invalid long term RPS.\n", "Error splitting the input into NAL units.\n", "Error constructing the frame RPS.\n", "Mastering Display Metadata:\n", "r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f)\n", "min_luminance=%f, max_luminance=%f\n", "First slice in a frame missing.\n", "Non-matching NAL types of the VCL NALUs: %d %d\n", "Error constructing the reference lists for the current slice.\n", "WPP ctb addresses are wrong (%d %d %d %d)\n", "entry_point_offset table is corrupted\n", "Skipping NAL unit %d\n", "Error parsing NAL unit #%d.\n", "buf_size >= 0", "libavcodec/bytestream.h", "Invalid NAL unit size in extradata.\n", "Decoding nal unit %d %d from hvcC failed\n", "Verifying checksum for frame with POC %d: ", "plane %d - correct ", "%02x", "mismatching checksum of plane %d - ", " != ", "Decoded frame with POC %d.\n", "HEVC decoder", "apply_defdispwin", "Apply default display window from VUI", "strict-displaywin", "stricly apply default display window size", "nal->skipped_bytes_pos_size >= nal->skipped_bytes", "libavcodec/hevc_parse.c", "SEI_SUFFIX", "SEI_PREFIX", "FD_NUT", "EOB_NUT", "EOS_NUT", "CRA_NUT", "IDR_N_LP", "IDR_W_RADL", "BLA_N_LP", "BLA_W_RADL", "BLA_W_LP", "RASL_R", "RASL_N", "RADL_R", "RADL_N", "STSA_R", "STSA_N", "TSA_R", "TSA_N", "TRAIL_R", "TRAIL_N", "Invalid NAL unit size.\n", "No start code is found.\n", "Invalid NAL unit %d, skipping.\n", "nal_unit_type: %d(%s), nuh_layer_id: %d, temporal_id: %d\n", "Invalid NAL unit: %d\n", "SPS id out of range: %d\n", "missing picture in access unit\n", "PTL information too short\n", "Main profile bitstream\n", "Main 10 profile bitstream\n", "Main Still Picture profile bitstream\n", "Range Extension profile bitstream\n", "Unknown HEVC profile: %d\n", "Not enough data for sublayer %i level_idc\n", "PTL information for sublayer %i too short\n", "Invalid delta in scaling list data: %d.\n", "nb_cpb %d invalid\n", "Decoding VUI\n", "Unknown SAR index: %u.\n", "Invalid default display window\n", "discarding vui default display window, original values are l:%u r:%u t:%u b:%u\n", "Strange VUI timing information, retrying...\n", "Retry got %i/%i fps\n", "Invalid value of delta_idx in slice header RPS: %d > %d.\n", "Invalid value of abs_delta_rps: %d\n", "Too many refs in a short term RPS.\n", "Decoding VPS\n", "vps_reserved_three_2bits is not three\n", "vps_reserved_ffff_16bits is not 0xffff\n", "vps_max_sub_layers out of range: %d\n", "vps_max_dec_pic_buffering_minus1 out of range: %d\n", "vps_max_num_reorder_pics out of range: %d\n", "too many layer_id_included_flags\n", "vps_num_hrd_parameters %d is invalid\n", "Overread VPS by %d bits\n", "!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)", "libavcodec/hevc_ps.c", "VPS %d does not exist\n", "sps_max_sub_layers out of range: %d\n", "chroma_format_idc %d is invalid\n", "discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\n", "Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\n", "4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n", "chroma_format_idc is %d, depth is %d", "log2_max_pic_order_cnt_lsb_minus4 out range: %d\n", "sps_max_dec_pic_buffering_minus1 out of range: %d\n", "sps_max_num_reorder_pics out of range: %d\n", "Invalid value %d for log2_min_cb_size", "Invalid value %d for log2_diff_max_min_coding_block_size", "Invalid value for log2_min_tb_size", "Invalid value %d for log2_diff_max_min_transform_block_size", "PCM bit depth (%d) is greater than normal bit depth (%d)\n", "Too many short term RPS: %d.\n", "num_long_term_ref_pics_sps %d is out of range.\n", "extended_precision_processing_flag not yet implemented\n", "high_precision_offsets_enabled_flag not yet implemented\n", "cabac_bypass_alignment_enabled_flag not yet implemented\n", "Reducing left output window to %d chroma samples to preserve alignment.\n", "Invalid visible frame dimensions: %dx%d.\n", "Displaying the whole video surface.\n", "CTB size out of range: 2^%d\n", "log2_ctb_size %d differs from the bounds of any known profile\n", "log2_ctb_size %d", "Invalid coded frame dimensions.\n", "max_transform_hierarchy_depth_inter out of range: %d\n", "max_transform_hierarchy_depth_intra out of range: %d\n", "max transform block size out of range: %d\n", "Overread SPS by %d bits\n", "Decoding SPS\n", "Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\n", "Decoding PPS\n", "SPS %u does not exist.\n", "diff_cu_qp_delta_depth %d is invalid\n", "pps_cb_qp_offset out of range: %d\n", "pps_cr_qp_offset out of range: %d\n", "num_tile_columns_minus1 out of range: %d\n", "num_tile_rows_minus1 out of range: %d\n", "Invalid tile widths.\n", "Invalid tile heights.\n", "pps_beta_offset_div2 out of range: %d\n", "pps_tc_offset_div2 out of range: %d\n", "log2_parallel_merge_level_minus2 out of range: %d\n", "chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n", "cb_qp_offset_list not tested yet.\n", "Overread PPS by %d bits\n", "!frame->hwaccel_picture_private", "libavcodec/hevc_refs.c", "Error allocating frame, DPB full.\n", "Could not find ref with POC %d\n", "Duplicate POC in a sequence: %d.\n", "Output frame with POC %d.\n", "Zero refs in the frame RPS.\n", "Invalid reference index.\n", "Decoding SEI\n", "BOTTOM Field\n", "TOP Field\n", "Skipped PREFIX SEI %d\n", "num_sps_ids_minus1 %d invalid\n", "active_parameter_set_id %d invalid\n", "Skipped SUFFIX SEI %d\n", "Internal error, IDCT permutation not set\n", "desc", "libavcodec/imgconvert.c", "after picture_number", "Bad H263 id\n", "Intel H263 free format not supported\n", "SAC not supported\n", "Wrong Intel H263 format\n", "Bad value for reserved field\n", "Invalid marker\n", "in dimensions", "Invalid aspect ratio.\n", "s->mb_width>0", "libavcodec/intrax8.c", "run overflow at %dx%d i:%d\n", " UMV", " LONG", " AIC", " AIV", " LOOP", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", "before MBA", "after MBA", "after SQUANT", "cbpc damaged at %d %d\n", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "Header looks like RTP instead of H.263\n", "in PTYPE", "H263 SAC not supported\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "Bad UFEP type (%d)\n", "zero framerate\n", "rectangular slices not supported\n", "unordered slices not supported\n", "SEPB1", "SEPB2", " %5d", "ZYGO", "n <= 1024", "libavcodec/kbdwin.c", "internal error in cmp function selection\n", "static_size <= (sizeof(table) / sizeof((table)[0]))", "libavcodec/mpeg12.c", "TMPGEXS", "VCR2", "BW10", "mb_y < s->mb_height", "libavcodec/mpeg12dec.c", "qscale == 0\n", "first mb_incr damaged\n", "initial skip overflow\n", "qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n", "skip with previntra\n", "invalid mb type in I Frame at %d %d\n", "invalid mb type in P Frame at %d %d\n", "invalid mb type in B Frame at %d %d\n", "after concealment_motion_vectors", "invalid dc code at\n", "ac-tex damaged at %d %d\n", "!s->progressive_sequence", "MT_DMV in progressive_sequence\n", "00 motion_type at %d %d\n", "invalid cbp %d at %d %d\n", "Invalid MXF data found in video stream\n", "end mismatch left=%d %0X\n", "mb incr damaged\n", "slice mismatch\n", "skipped MB in I frame at %d %d\n", "overread %d\n", "SLIF", "avctx->thread_count > 1", "%3X at %td left %d\n", "Invalid horizontal or vertical size value.\n", "aspect ratio has forbidden 0 value\n", "frame_rate_index %d is invalid\n", "in sequence header", "matrix damaged\n", "intra matrix specifies invalid DC quantizer %d, ignoring\n", "sequence header damaged\n", "vbv buffer: %d, bitrate:%ld, aspect_ratio_info: %d \n", "ignoring SEQ_START_CODE after %X\n", "ignoring extra picture following a frame-picture\n", "Invalid frame dimensions %dx%d.\n", "ignoring invalid SAR: %u/%u\n", "vbv_delay %d, ref %d type:%d\n", "ignoring pic after %X\n", "Chroma format invalid\n", "after bit rate extension", "profile: %d, level: %d ps: %d cf:%d vbv buffer: %d, bitrate:%ld\n", "ignoring seq ext after %X\n", "sde w:%d, h:%d\n", "pde (%d,%d) (%d,%d) (%d,%d)\n", "Missing picture start code, guessing missing values\n", "ignoring pic cod ext after %X\n", "GOP (%s) closed_gop=%d broken_link=%d\n", "ignoring GOP_START_CODE after %X\n", "interlaced frame in progressive sequence, ignoring\n", "picture_structure %d invalid, ignoring\n", "invalid frame_pred_frame_dct\n", "slice too small\n", "slice below image (%d >= %d)\n", "Missing picture start code\n", "first field missing\n", "hardware accelerator failed to decode first field\n", "current_picture not initialized\n", "mpeg_decode_postinit() failure\n", "picture in extradata\n", "mpegvideo", "Failed to parse extradata\n", "DivX%dBuild%d%c", "DivX%db%d%c", "FFmpe%*[^b]b%d", "FFmpeg v%d.%d.%d / libavcodec build: %d", "Lavc%d.%d.%d", "ffmpeg", "XviD%d", "after new_pred", "before sprite_trajectory", "after sprite_trajectory", "illegal dc vlc\n", "dc marker bit missing\n", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "reverse esc missing\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "texture corrupted at %d %d %d\n", "mcbpc damaged at %d %d\n", "P cbpy damaged at %d %d\n", "illegal MB_type\n", "marker does not match f_code\n", "illegal mb_num in video packet (%d %d) \n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "untested\n", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "mcbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "slice below monitor ...\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "cbpy corrupted at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "XVIX", "UMP4", "XVID", "RMP4", "ZMP4", "SIPP", "DIVX", "scalability ", "qpel ", "partition ", "rvlc ", " VOLC", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "Reserved", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "reserved", "System start", "illegal chroma format\n", "after first_half_bitrate", "after latter_half_bitrate", "after first_half_vbv_buffer_size", "after first_half_vbv_occupancy", "after latter_half_vbv_occupancy", "only rectangular vol supported\n", "Gray shape not supported\n", "before time_increment_resolution", "framerate==0\n", "before fixed_vop_rate", "before width", "before height", "after height", "MPEG4 OBMC not supported (very likely buggy encoder)\n", "Static Sprites not supported\n", "after sprite_width", "after sprite_height", "after sprite_left", "after sprite_top", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "insufficient data for custom matrix\n", "VOL Header truncated\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "new pred not supported\n", "reduced resolution VOP not supported\n", "scalability not supported\n", "tb %d/%d, tincrbits:%d, qp_prec:%d, ps:%d,  %s%s%s%s\n", "GOP header invalid\n", "in gop_header", "low_delay flag set incorrectly, clearing it\n", "before time_increment", "time_increment_bits %d is invalid in relation to the current bitstream, this is likely caused by a missing VOL header\n", "time_increment_bits set to %d bits, based on bitstream analysis\n", "before vop_coded", "vop not coded\n", "after width", "after hor_spat_ref", "Header truncated\n", "sprite_brightness_change not supported\n", "static sprite not supported\n", "Error, header damaged or not MPEG4 header (qscale=0)\n", "Error, header damaged or not MPEG4 header (f_code=0)\n", "Error, header damaged or not MPEG4 header (b_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d time:%ld tincr:%d\n", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "WV1F", "QMP4", "MP4S", "Video uses a non-standard and wasteful way to store B-frames ('packed B-frames'). Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n", "MPEG4 Video Decoder", "quarter_sample", "1/4 subpel MC", "divx_packed", "divx style packed b frames", "Interlaced error concealment is not fully implemented\n", "MP3ADU full parser", "offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))", "libavcodec/mpegaudiodec_template.c", "Codec extradata missing or too short.\n", "Invalid channel config number.\n", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "overread, skip %d enddists: %d %d\n", "bits_left=%d\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "discarding ID3 tag\n", "Header missing\n", "incorrect frame size - multiple frames in buffer?\n", "Error while decoding MPEG audio frame.\n", "Invalid frame header\n", "Frame size smaller than header size\n", "Bad header, discard block\n", "frame channel count exceeds codec channel count\n", "failed to decode channel %d\n", "failed to decode all channels\n", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "Image too small, temporary buffers cannot function\n", "pic->f->data[0]", "libavcodec/mpegpicture.c", "!pic->f->buf[0]", "get_buffer() failed (%d %p)\n", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (stride changed)\n", "get_buffer() failed (uv stride mismatch)\n", "get_buffer() failed to allocate context scratch buffers.\n", "Error allocating a picture.\n", "Internal error, picture buffer overflow\n", "decoding to AV_PIX_FMT_NONE is not supported.\n", "too many threads/slices (%d), reducing to %d\n", "s != s1", "libavcodec/mpegvideo.c", "!s->picture || s->picture != s1->picture", "Failed to allocate context scratch buffers.\n", "Context scratch buffers could not be allocated due to unknown size.\n", "allocating dummy last picture for B frame\n", "warning: first frame is no keyframe\n", "allocate dummy last picture for field based first keyframe\n", "s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f->buf[0])", "Adding %d MVs info to frame %d\n", "New frame, type: %c\n", "ref->size >= offset + s->mb_stride * ((f->height+15)/16)", "DCT coeffs of MB at %dx%d:\n", "MPEG motion vector out of boundary (%d %d)\n", "Failed to set dimensions\n", "I frame too long, ignoring ext header\n", "invalid startcode\n", "invalid picture type\n", "invalid qscale\n", "invalid slice height %d\n", "error, slice code was %X\n", "qscale:%d rlc:%d rl:%d dc:%d mbrl:%d slice:%d   \n", "skip:%d rl:%d rlc:%d dc:%d mv:%d mbrl:%d qp:%d   \n", "dc overflow- block: %d qscale: %d//\n", "dc overflow+ L qscale: %d//\n", "dc overflow+ C qscale: %d//\n", "ignoring overflow at %d %d\n", "cbpc %d invalid at %d %d\n", "cbpy %d invalid at %d %d\n", "\nerror while decoding block: %d x %d (%d)\n", "illegal MV code at %d %d\n", "msmpeg4", "NULL", "libavcodec/options.c", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "AVSubtitleRect", "flags", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "sample_rate", "AVCodecContext", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "qpel", "use 1/4-pel motion compensation", "loop", "use loop filter", "qscale", "use fixed qscale", "use gmc", "always try a mb with mv=<0,0>", "input_preserved", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "gray", "only decode/encode grayscale", "emu_edge", "do not draw edges", "psnr", "error[?] variables will be set during encoding", "truncated", "Input bitstream might be randomly truncated", "normalize adaptive quantization", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "fast", "allow non-spec-compliant speedup tricks", "flags2", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "export_mvs", "export motion vectors through frame side data", "skip_manual", "do not skip samples and export skip information as frame side data", "me_method", "set motion estimation method", "zero", "zero motion estimation (fastest)", "full", "full motion estimation (slowest)", "epzs", "EPZS motion estimation", "esa motion estimation (alias for full)", "tesa", "tesa motion estimation", "diamond motion estimation (alias for EPZS)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter motion estimation", "time_base", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "delay", "qcomp", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "qblur", "video quantizer scale blur (VBR)", "qmin", "minimum video quantizer scale (VBR)", "qmax", "maximum video quantizer scale (VBR)", "qdiff", "maximum difference between the quantizer scales (VBR)", "set maximum number of B frames between non-B-frames", "b_qfactor", "QP factor between P- and B-frames", "rc_strategy", "ratecontrol method", "b_strategy", "strategy to choose between I/P/B-frames", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "work around not autodetected encoder bugs", "autodetect", "old_msmpeg4", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal VLC bug (autodetected per FOURCC)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "strict", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "buffer", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "mpeg_quant", "use MPEG quantizers instead of H.263", "qsquish", "deprecated, use encoder private options instead", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minrate", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "bufsize", "set ratecontrol buffer size (in bits)", "rc_buf_aggressivity", "i_qfactor", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "rc_init_cplx", "fast integer", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "deblock", "use strong deblock filter for damaged MBs", "favor_inter", "favor predicting from the previous frame", "bits_per_coded_sample", "pred", "prediction method", "plane", "median", "aspect", "sample aspect ratio", "debug", "print specific debug info", "pict", "picture info", "rate control", "mb_type", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "green_metadata", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "bugs", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "vismv", "visualize motion vectors (MVs) (deprecated)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "mbcmp", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "dia_size", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "dctmax", "chroma", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "subq", "sub-pel motion estimation quality", "dtg_active_format", "me_range", "limit motion vectors range (1023 for DivX player)", "ibias", "intra quant bias", "pbias", "inter quant bias", "global_quality", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp", "use fewest bits", "use best rate distortion", "stream_codec_tag", "sc_threshold", "scene change threshold", "lmin", "lmax", "noise reduction", "rc_init_occupancy", "number of bits which should be loaded into the rc buffer before decoding starts", "threads", "set the number of threads", "autodetect a suitable number of threads to use", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "lowres", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "border_mask", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "none", "discard no frame", "default", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "nointra", "discard all frames except I frames", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscale frames for dynamic B-frame decision", "keyint_min", "minimum interval between IDR-frames", "reference frames to consider for motion compensation", "chromaoffset", "chroma QP offset from luma", "trellis", "rate-distortion optimal quantization", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "b_sensitivity", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color primaries", "color_primaries_type", "bt709", "BT.709", "unspecified", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "film", "Film", "bt2020", "BT.2020", "smpte428_1", "SMPTE ST 428-1", "color_trc", "color transfer characteristics", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "Log square root", "iec61966_2_4", "IEC 61966-2-4", "bt1361", "BT.1361", "iec61966_2_1", "IEC 61966-2-1", "bt2020_10bit", "BT.2020 - 10 bit", "bt2020_12bit", "BT.2020 - 12 bit", "smpte2084", "SMPTE ST 2084", "colorspace", "color space", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "BT.2020 NCL", "bt2020_cl", "BT.2020 CL", "color_range", "color range", "color_range_type", "mpeg", "MPEG (219*2^(n-8))", "jpeg", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "Bottom", "log_level_offset", "set the log level offset", "slices", "set the number of slices, used in parallelized encoding", "thread_type", "select multithreading type", "slice", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "dump_separator", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "pixel_format", "set pixel format", "video_size", "set video size", "index > -0x20000000", "libavcodec/parser.c", "Failed to reallocate parser buffer to %d\n", "PCM packet too small\n", "unsupported sample depth (%d)\n", "reserved sample rate (%d)\n", "reserved channel configuration (%d)\n", "pcm_dvd_parse_header: header = %02x%02x%02x\n", "PCM DVD unsupported sample depth %i\n", "block_size has changed %d != %d\n", "PCM signed 16|20|24-bit big-endian for DVD media", "codec ids mismatch\n", "Invalid PCM packet, data has size %d but at least a size of %d was expected\n", "PCM channels out of bounds\n", "Profile 0", "Profile 1", "Profile 2", "Profile 3", "Simple", "Main", "Complex", "Advanced", "Simple Profile", "Simple Scalable Profile", "Core Profile", "Main Profile", "N-bit Profile", "Scalable Texture Profile", "Simple Face Animation Profile", "Basic Animated Texture Profile", "Hybrid Profile", "Advanced Real Time Simple Profile", "Code Scalable Profile", "Advanced Coding Profile", "Advanced Core Profile", "Advanced Scalable Texture Profile", "Simple Studio Profile", "Advanced Simple Profile", "4:2:2", "High", "Spatially Scalable", "SNR Scalable", "JPEG 2000 codestream restriction 0", "JPEG 2000 codestream restriction 1", "JPEG 2000 no codestream restrictions", "JPEG 2000 digital cinema 2K", "JPEG 2000 digital cinema 4K", "Main 10", "Main Still Picture", "Rext", "Baseline", "Constrained Baseline", "Extended", "High 10", "High 10 Intra", "High 4:2:2", "High 4:2:2 Intra", "High 4:4:4", "High 4:4:4 Predictive", "High 4:4:4 Intra", "CAVLC 4:4:4", "DTS-ES", "DTS 96/24", "DTS-HD HRA", "DTS-HD MA", "DTS Express", "HE-AAC", "HE-AACv2", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "libavcodec/pthread_frame.c", "%p finished %d field %d\n", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "Final thread update failed\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "thread_get_buffer() failed\n", "thread_release_buffer called on pic %p\n", "p->thread_count == avctx->thread_count", "libavcodec/pthread_slice.c", "Frame too small (%d bytes). Truncated file?\n", "real_144", "unsupported block align\n", "Error! Input buffer is too small [%d<%d]\n", "real_288", "WwvfeUDDDDDD3DCDDEVfwP", "HwvfeUUDDC3334EUUfgwx`", "WgfveUDTDCC4CDDDEEUgw`", "WxwffUUDDC3#3DEUVffwx`", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "Extradata is not groovy, dude\n", "Unknown version %X", "Invalid coding parameters %d Hz %d ch\n", "invalid frame size %d\n", "Wrong packet's breath smells of wrong data!\n", "Wrong packet tails are wrong!\n", "too short packets are too short!\n", "short packets are short!\n", "I'm pedaling backwards\n", "Decoder's stomach is crying, it ate too many samples\n", "Sir, I got carsick in your office. Not decoding the rest of packet.\n", "I420", "IYUV", "yv12", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUYVw", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "\fRGBt", "RBA@v", "BRA@s", "@RBAu", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\tE", "\t\u000b3YP", "Y3\n\tO", "\t\n3YL", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "I422!", "I444\f", "J420\r", "J422\"", "J444Z", "YUVA#", "I40AY", "RGB2.", "RV15,", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "I4AB:", "I4FL;", "I4FB,", "width is not set\n", "height is not set\n", "PACKET SIZE: %d, STRIDE: %d\n", "Packet too small (%d)\n", "avctx->bits_per_coded_sample == 1", "libavcodec/rawdec.c", "Invalid buffer size, packet size %d < expected frame_size %d\n", "I420", "yuv2", "Invalid pixel format.\n", "BottomUp", "rawdec", "top field first", "audioresample", "Resampling with input channels greater than %d is unsupported.\n", "Unsupported audio resampling. Allowed output channels for %d input channel%s", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Could not allocate buffer\n", "Audio sample format conversion failed\n", "ReSampleContext", "libavcodec/rl.c", "marker missing\n", "pb frame", "Invalid qscale value: 0\n", "unknown frame type\n", "early B-frame\n", "reserved bit set\n", "Extradata too small.\n", "attempting to change resolution to %dx%d\n", "F %d/%d/%d\n", "messed up order, possible from seeking? skipping current b frame\n", "num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n", "s->pict_type != AV_PICTURE_TYPE_B || !s->low_delay", "libavcodec/rv10.c", "HEADER ERROR\n", "POS ERROR %d %d\n", "COUNT ERROR\n", "Slice type mismatch\n", "ERROR at MB %d %d\n", "update size from %d to %d\n", "low delay B\n", "Extradata is too small.\n", "unknown header %X\n", "RV1/2 version", "ver:%X ver0:%X\n", "chroma dc error\n", "\t\t\t\t\t\t\t\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "\t\t\t\t\t\t\t\t\t", "Incorrect intra prediction mode\n", "rpr too large\n", "Insufficient extradata - need at least %d bytes, got %d\n", "Incorrect MB type code\n", "dquant needed\n", "Slice offset is invalid\n", "First slice header is incorrect\n", "Invalid decoder state: B-frame without reference data.\n", "New frame but still %d MB left.\n", "Changing dimensions to %dx%d\n", "Decoder needs full frames in frame multithreading mode (start MB is %d).\n", "Slice size is invalid\n", "Incorrect or unknown slice header\n", "Size mismatch\n", "Slice indicates MB offset %d, got %d\n", "Need DQUANT\n", "marking unfished frame as finished\n", "Dquant for B-frame\n", "@P `0P@0P@P0` P@@0` P00@@@P0 `0@", "%s%7i:%-7i", "%s%7i", "%s%.15g", "%s%5i", "%s%3i", "FFmpeg version 3.0.3", "val || !min_size", "./libavutil/mem_internal.h", "Failed to set dimensions %d %d\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "Invalid channel count", "Invalid sample rate", "PARAM_CHANGE side data too small.\n", "ignoring invalid SAR: %d/%d\n", "desc->flags & (1 << 4)", "libavcodec/utils.c", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "Unable to get pixel format descriptor for format %s\n", "default_get_buffer called on pic %p\n", "frame->nb_extended_buf == 0", "default_get_buffer called on frame %p", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "video_get_buffer: image parameters invalid\n", "get_buffer() failed\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "reget_buffer() failed\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %ld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %ld)\n", "Failed to allocate packet of size %ld\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "avctx->codec->encode2", "Provided packet is too small, needs to be %d\n", "AVFrame.format is not set\n", "AVFrame.width or height is not set\n", "ret <= 0", "start_display_time must be 0.\n", "Invalid media type for video\n", "Error applying parameter changes.\n", "!picture->extended_data || picture->extended_data == picture->data", "invalid packet: NULL data, size != 0\n", "Invalid media type for audio\n", "ret <= tmp.size", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "Invalid media type for subtitles\n", "requesting subtitles recoding without iconv", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "unknown_codec", "Codec 0x%x is not in the full list.\n", "[%d]", "--prefix=/Users/hanktsai/Downloads/ffmpeg/dist/aarch64-linux-android --disable-shared --enable-static --disable-doc --disable-programs --disable-everything --disable-avdevice --disable-avfilter --disable-doc --disable-symver --enable-decoder=aac --enable-decoder=aac_latm --enable-decoder=ac3 --enable-decoder=eac3 --enable-decoder=ape --enable-decoder=alac --enable-decoder=dca --enable-decoder=flac --enable-decoder=vorbis --enable-decoder=ra_144 --enable-decoder=ra_288 --enable-decoder=ralf --enable-decoder=cook --enable-decoder=pcm_f64le --enable-decoder=pcm_lxf --enable-decoder=pcm_mulaw --enable-decoder=pcm_s16be --enable-decoder=pcm_s16be_planar --enable-decoder=pcm_s16le --enable-decoder=pcm_s16le_planar --enable-decoder=pcm_s24be --enable-decoder=pcm_s24daud --enable-decoder=pcm_s24le --enable-decoder=pcm_s24le_planar --enable-decoder=pcm_s32be --enable-decoder=mp1 --enable-decoder=pcm_s32le --enable-decoder=mp1float --enable-decoder=pcm_s32le_planar --enable-decoder=mp2 --enable-decoder=pcm_s8 --enable-decoder=mp2float --enable-decoder=pcm_s8_planar --enable-decoder=mp3 --enable-decoder=pcm_u16be --enable-decoder=mp3adu --enable-decoder=pcm_u16le --enable-decoder=mp3adufloat --enable-decoder=pcm_u24be --enable-decoder=mp3float --enable-decoder=pcm_u24le --enable-decoder=mp3on4 --enable-decoder=pcm_u32be --enable-decoder=mp3on4float --enable-decoder=pcm_u32le --enable-decoder=pcm_u8 --enable-decoder=pcm_zork --enable-decoder=pcm_alaw --enable-decoder=pcm_bluray --enable-decoder=pcm_dvd --enable-decoder=pcm_f32be --enable-decoder=pcm_f32le --enable-decoder=pcm_f64be --enable-decoder=rawvideo --enable-decoder=mpeg4 --enable-decoder=hevc --enable-decoder=vc1 --enable-decoder=vp8 --enable-decoder=vp9 --enable-decoder=h261 --enable-decoder=h263 --enable-decoder=h263i --enable-decoder=h263p --enable-decoder=h264 --enable-decoder=h264_crystalhd --enable-decoder=h264_mmal --enable-decoder=h264_qsv --enable-decoder=h264_vda --enable-decoder=h264_vdpau --enable-decoder=mpeg1video --enable-decoder=mpeg2video --enable-decoder=mpegvideo --enable-decoder=msmpeg4_crystalhd --enable-decoder=msmpeg4v1 --enable-decoder=msmpeg4v2 --enable-decoder=msmpeg4v3 --enable-decoder=rv10 --enable-decoder=rv20 --enable-decoder=rv30 --enable-decoder=rv40 --enable-demuxer=m4v --enable-demuxer=mov --enable-demuxer=matroska --enable-demuxer=avi --enable-demuxer=asf --enable-demuxer=ogg --enable-demuxer=flv --enable-demuxer=rm --enable-demuxer=aac --enable-demuxer=ac3 --enable-demuxer=mp3 --enable-demuxer=mpegps --enable-demuxer=mpegts --enable-demuxer=mpegtsraw --enable-demuxer=mpegvideo --enable-demuxer=h261 --enable-demuxer=h263 --enable-demuxer=h264 --enable-demuxer=hevc --enable-demuxer=ape --enable-demuxer=pcm_alaw --enable-demuxer=pcm_f32be --enable-demuxer=pcm_f32le --enable-demuxer=pcm_f64be --enable-demuxer=pcm_f64le --enable-demuxer=pcm_mulaw --enable-demuxer=pcm_s16be --enable-demuxer=pcm_s16le --enable-demuxer=pcm_s24be --enable-demuxer=pcm_s24le --enable-demuxer=pcm_s32be --enable-demuxer=pcm_s32le --enable-demuxer=pcm_s8 --enable-demuxer=pcm_u16be --enable-demuxer=pcm_u16le --enable-demuxer=pcm_u24be --enable-demuxer=pcm_u24le --enable-demuxer=pcm_u32be --enable-demuxer=pcm_u32le --enable-demuxer=pcm_u8 --enable-demuxer=rawvideo --enable-demuxer=eac3 --enable-demuxer=flac --enable-demuxer=vc1 --enable-muxer=flv --enable-muxer=mp4 --enable-muxer=matroska --enable-parser=aac --enable-parser=mpegvideo --enable-parser=aac_latm --enable-parser=ac3 --enable-parser=flac --enable-parser=rv30 --enable-parser=h261 --enable-parser=rv40 --enable-parser=cook --enable-parser=h263 --enable-parser=dca --enable-parser=h264 --enable-parser=vc1 --enable-parser=hevc --enable-parser=vorbis --enable-parser=vp8 --enable-parser=mpeg4video --enable-parser=vp9 --enable-parser=mpegaudio --enable-protocol=file --enable-bsf=h264_mp4toannexb --cross-prefix=/Users/hanktsai/NDK/android-ndk-r14b/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android- --target-os=linux --arch=aarch64 --enable-cross-compile --sysroot=/Users/hanktsai/NDK/android-ndk-r14b/platforms/android-21/arch-arm64 --extra-cflags='-Os -fpic -fdiagnostics-color=auto ' --extra-ldflags=", "libavcodec license: LGPL version 2.1 or later", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s/%s/%s, ", "%dx%d", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", %dx%d", ", pass 1", ", pass 2", ", %ld kb/s", ", max. %ld kb/s", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "n >= 1", "Could not find an AVHWAccel for the pixel format: %s", "Ignoring experimental hwaccel: %s\n", "choices[n] != AV_PIX_FMT_NONE", "Hardware accelerated decoding with frame threading is known to be unstable and its use is discouraged.\n", "ff_avcodec_locked", "Insufficient thread locking. At least %d threads are calling avcodec_open2() at the same time right now.\n", "No lock manager is set, please see av_lockmgr_register()\n", "!ff_avcodec_locked", "!dst->progress", "encoder", "decoder", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist '%s'\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "The 'vismv' option is deprecated, see the codecview filter instead.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout not specified\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "Specified bit depth %d not possible with the specified pixel formats depth %d\n", "dimensions not set\n", "Bitrate %ld is extremely low, maybe you mean %ldk\n", "ticks_per_frame %d too large for the timebase %d/%d.", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Specified channel layout '%s' is not supported\n", "p <= end", "invalid NORM-6 VLC\n", "Header: %0X\n", "WMV3 Complex Profile is not fully supported\n", "Reserved LEVEL %i\n", "Only 4:2:0 chroma format supported\n", "Advanced Profile level %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, ChromaFormat=%i, Pulldown=%i, Interlace: %i\nTFCTRflag=%i, FINTERPflag=%i\n", "Progressive Segmented Frame mode: not supported (yet)\n", "Display extended info:\n", "Display dimensions: %ix%i\n", "Aspect: %i:%i\n", "Old interlaced mode is not supported\n", "LOOPFILTER shall not be enabled in Simple Profile\n", "FASTUVMC unavailable in Simple Profile\n", "Extended MVs unavailable in Simple Profile\n", "1 for reserved RES_TRANSTAB is forbidden\n", "RANGERED should be set to 0 in Simple Profile\n", "Unsupported sprite feature\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Profile %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, MultiRes=%i, FastUVMC=%i, Extended MV=%i\nRangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\nDQuant=%i, Quantizer mode=%i, Max B frames=%i\n", "Entry point: %08X\n", "Luma scaling is not supported, expect wrong picture\n", "Chroma scaling is not supported, expect wrong picture\n", "Entry point info:\nBrokenLink=%i, ClosedEntry=%i, PanscanFlag=%i\nRefDist=%i, Postproc=%i, FastUVMC=%i, ExtMV=%i\nDQuant=%i, VSTransform=%i, Overlap=%i, Qmode=%i\n", "bfraction invalid\n", "MB MV Type plane encoding: Imode: %i, Invert: %i\n", "MB Skip plane encoding: Imode: %i, Invert: %i\n", "VOP DQuant info\n", "MB Direct Type plane encoding: Imode: %i, Invert: %i\n", "v->s.mb_height == v->s.height + 15 >> 4 || v->s.mb_height == (((v->s.height + 15 >> 4)+(2)-1)&~((2)-1))", "libavcodec/vc1.c", "Pan-scan", "FIELDTX plane encoding: Imode: %i, Invert: %i\n", "ACPRED plane encoding: Imode: %i, Invert: %i\n", "CONDOVER plane encoding: Imode: %i, Invert: %i\n", "SKIPMB plane encoding: Imode: %i, Invert: %i\n", "B Fields\n", "MB Forward Type plane encoding: Imode: %i, Invert: %i\n", "Intensity compensation set for B picture\n", "Illegal DC VLC\n", "Bits overconsumption: %i > %i\n", "Overriding invalid mquant %d\n", "index < esc", "libavcodec/vc1_block.c", "Mixed field/frame direct mode not supported\n", "Bits overconsumption: %i > %i at %ix%i\n", "Mixed frame/field direct mode not supported\n", "libavcodec/vc1_pred.c", "pict_type: %c\n", "Sprite decoder: expected I-frame\n", "image too short\n", "Skipping B frame without reference frames\n", "parsing header for second field failed", "mb_height > 0", "libavcodec/vc1dec.c", "Slice %d starts beyond picture boundary (%d >= %d)\n", "(s->mb_height & 1) == 0", "Field header damaged\n", "Slice header damaged\n", "first field slice count too large\n", "end mb y %d %d invalid\n", "missing cbpcy_vlc\n", "Extra data: %i bits left, value: %X\n", "Read %i bits in overflow\n", "Extradata size too small: %i\n", "Incomplete extradata\n", "odd sprites support", "Duplicate value found in floor 1 X coordinates\n", "Invalid packet\n", "Invalid mode in packet\n", "Extradata corrupt.\n", "Id header is too short\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Setup header is too short\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "Out of memory\n", "Invalid Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "Unsupported mode count: %d\n", "Vorbis parser", "Index value %d out of range (0 - %d) for %s at %s:%i\n", " Vorbis id header packet corrupt (no vorbis signature). \n", "Invalid samplerate\n", " Vorbis id header packet corrupt (illegal blocksize). \n", " Vorbis id header packet corrupt (framing flag not set). \n", " Vorbis setup header packet corrupt (no vorbis signature). \n", " %u. Codebook setup data corrupt.\n", " %u. Codebook's dimension is invalid (%d).\n", " %u. Codebook has too many entries (%u).\n", " More codelengths than codes in codebook. \n", "Bug in codevector vector building code. \n", "Codebook lookup type not supported. \n", " Invalid code lengths while generating vlcs. \n", " Error generating vlc tables. \n", " Vorbis setup header packet corrupt (codebooks). \n", "Vorbis time domain transform data nonzero. \n", " Vorbis setup header packet corrupt (time domain transforms). \n", "floor_setup->data.t1.class_masterbook[j]", "libavcodec/vorbisdec.c", "A rangebits value of 0 is not compliant with the Vorbis I specification.\n", "Floor value is too large for blocksize: %u (%u)\n", "Floor 0 order is 0.\n", "Floor 0 rate is 0.\n", "Floor 0 bark map size is 0.\n", "book_idx", "Invalid floor type!\n", "partition out of bounds: type, begin, end, size, blocksize: %u, %u, %u, %u, %u\n", "res_setup->classbook", "res_setup->books[j][k]", "Other mappings than type 0 are not compliant with the Vorbis I specification. \n", "Square polar channel mapping with less than two channels is not compliant with the Vorbis I specification.\n", "mapping_setup->magnitude[j]", "mapping_setup->angle[j]", "%u. mapping setup data invalid.\n", "mapping_setup->submap_floor[j]", "mapping_setup->submap_residue[j]", "mode_setup->mapping", " Vorbis setup header packet corrupt (framing flag). \n", " Vorbis setup header packet corrupt (floors). \n", " Vorbis setup header packet corrupt (residues). \n", " Vorbis setup header packet corrupt (mappings). \n", " Vorbis setup header packet corrupt (modes). \n", "Id header corrupt.\n", "Ignoring comment header\n", "Setup header corrupt.\n", "Data packet before valid headers\n", "Not a Vorbis I audio packet.\n", "mode_number", "Invalid codebook in vorbis_floor_decode.\n", "Too many channels in vorbis_floor_decode.\n", "Insufficient output buffer\n", "Invalid vlc code decoding %d channel.", "vr->classifications > 1", " Invalid residue type while residue decode?! \n", "Extradata missing.\n", "First header is not the id header.\n", "Third header is not the setup header.\n", "q-index", "lf-delta", "partial-golden-update", "blit-pitch", "Insufficent data (%d) for header\n", "Unknown profile %d\n", "Header size larger than data provided\n", "Invalid start code 0x%x\n", "Upscaling", "Unspecified colorspace\n", "Invalid partitions\n", "Ran out of free frames!\n", "Discarding interframe without a prior keyframe!\n", "Reserved bit set in RGB\n", "RGB not supported in profile %d\n", "YUV 4:2:0 not supported in profile %d\n", "Profile %d color details reserved bit set\n", "Failed to allocate frame buffer %d\n", "libavcodec/vp9.c", "Failed to initialize bitstream reader\n", "Invalid frame marker\n", "Profile %d is not yet supported\n", "Invalid sync code\n", "Not all references are available\n", "w > 0 && h > 0", "Ran out of memory during range coder init\n", "Ref pixfmt (%s) did not match current frame (%s)", "Invalid ref frame dimensions %dx%d for frame size %dx%d\n", "Invalid compressed header size\n", "Marker bit was set\n", "Requested reference %d not available\n", "!f->hwaccel_picture_private", "Failed to initialize decoder for %dx%d @ %d\n", "Failed to allocate block buffers\n", "Inconsistent input frame sizes %d %d\n", "Invalid superframe packet size: %u frame size: %d\n", "bpp == 12", "libavcodec/vp9dsp.c", "raw ADTS AAC (Advanced Audio Coding)", "audio/aac,audio/aacp,audio/x-aac", "phdr->frame_size <= sizeof(buf3)", "libavformat/ac3dec.c", "raw E-AC-3", "raw AC-3", "invalid packet size: %d\n", "Unsupported file version - %d.%02d\n", "No frames in the file!\n", "Too many frames: %u\n", "Number of seek entries is less than number of frames: %zu vs. %u\n", "File truncated\n", "Decoding file - v%d.%02d, compression level %u\n", "ape,apl,mac", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "album_artist", "WM/AlbumTitle", "album", "Author", "artist", "Description", "comment", "WM/Composer", "composer", "WM/EncodedBy", "encoded_by", "WM/EncodingSettings", "WM/Genre", "genre", "WM/Language", "language", "WM/OriginalFilename", "filename", "WM/PartOfSet", "disc", "WM/Publisher", "publisher", "WM/Tool", "WM/TrackNumber", "WM/MediaStationCallSign", "service_provider", "WM/MediaStationName", "service_name", "asf_read_packet", "WM/Picture", "Invalid attached picture size: %d.\n", "Unknown attached picture type: %d.\n", "Invalid attached picture data size: %d >= %d.\n", "Unsupported byte array in tag %s.\n", "Unsupported GUID value in tag %s.\n", "Unsupported value type %d in tag %s.\n", "Unknown attached picture mimetype: %s.\n", "Skip due to FRAME_HEADER_SIZE\n", "libavformat/asfdec_f.c", "key:%d stream:%d seq:%d offset:%d replic_size:%d num:%X packet_property %X\n", "packet_replic_size %d is invalid\n", "packet_obj_size %d invalid\n", "too long payload\n", "unexpected packet_replic_size of %d\n", "packet_replic_size is invalid\n", "packet_frag_size is invalid (%d>%d-%d+%d)\n", "ff asf skip %d (unknown stream)\n", "asf_st", "skipping asf data pkt with fragment offset for stream:%d, expected:%d but got %d from pkt)\n", "freeing incomplete packet size %d, new %d\n", "Cannot append palette to packet\n", "new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n", "READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n", "packet fragment position invalid %u,%u not in %u\n", "discarding ms fart\n", "pkt.size != ds_packet_size * ds_span (%d %d %d)\n", "offset + asf_st->ds_chunk_size <= asf_st->pkt.size", "idx + 1 <= asf_st->pkt.size / asf_st->ds_chunk_size", "ff asf bad header %x  at:%ld\n", "ff asf bad non zero\n", "Invalid ECC byte\n", "invalid packet_length %u at:%ld\n", "invalid padsize %u at:%ld\n", "invalid packet header length %d for pktlen %u-%u at %ld\n", "packet: size=%d padsize=%d  left=%d\n", "asf->packet_size_left < FRAME_HEADER_SIZE || asf->packet_segments < 1", "%d stream %d name_len %2d type %d len %4d <%s>\n", "AspectRatioX", "AspectRatioY", "too many streams\n", "author", "copyright", "Payload extension %x %d\n", "DRM protected stream detected, decoding will likely fail!\n", "Secret data:\n", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "Ext DRM protected stream detected, decoding will likely fail!\n", "encryption", "ASF Extended Content Encryption", "Digital signature detected!\n", "gpos mismatch our pos=%lu, end=%ld\n", "i=%d, st->codec->codec_type:%d, asf->dar %d:%d sar=%d:%d\n", "asf_read_pts failed\n", "itime:0x%lx, pct:%d, ict:%d\n", "pktnum:%d, pktct:%d  pts: %ld\n", "SEEKTO: %ld\n", "ASF (Advanced / Active Streaming Format)", "asf demuxer", "no_resync_search", "Don't try to resynchronize by looking for a certain optional start code", "export_xmp", "Export full XMP metadata", "GAB2", "Skipping foreign stream %d packet\n", "Invalid stream + prefix combination, assuming audio.\n", "%ld %d/%d %ld\n", "best_ast->remaining <= best_ast->packet_size", "libavformat/avidec.c", "Failed to allocate data for palette\n", "dts:%ld offset:%ld %d/%d smpl_siz:%d base:%d st:%d size:%d\n", "Switching to NI mode, due to poor interleaving\n", "longs_pre_entry:%d index_type:%d entries_in_use:%d chunk_id:%X base:%16lX frame_num:%d\n", "ODML index invalid\n", "pos:%ld, len:%X\n", "Too deeply nested ODML indexes\n", "Failed to restore position after reading index\n", "movi_end=0x%lx\n", "tag=%c%c%c%c size=0x%x\n", "%d: tag=0x%x flags=0x%x pos=0x%lx len=%d/", "%d cum_len=%ld\n", "MMES", "stream_index >= 0", "Failed to find timestamp %ld in index %ld .. %ld\n", "XX %ld %d %ld\n", "fabs(av_q2d(st2->time_base) - ast2->scale / (double)ast2->rate) < av_q2d(st2->time_base) * 0.00000001", "Seek failed\n", "creation_time", "maker", "This file has been generated by a totally broken muxer.\n", "pos:%lX %s: tag=%c%c%c%c size=0x%x\n", "movi end=%lx\n", "%*3s%*[ ]%3s%*[ ]%2d%*[ ]%8s%*[ ]%4d", "%.4d-%.2d-%.2d %s", "strh", "stream_index < s->nb_streams", "scale/rate is %u/%u which is invalid. (This file has been generated by broken software.)\n", "crazy start time, iam scared, giving up\n", "%u %u %d\n", "unknown stream type %X\n", "Invalid sample_size %d at stream %d\n", "Invalid sample_size %d at stream %d setting it to 0\n", "File is truncated adjusting duration\n", "mov tag found in avi (fourcc %s)\n", "sample size (%d) != block align (%d)\n", "overriding invalid dshow_block_align of %d\n", "overriding sample_size\n", "./libavcodec/bytestream.h", "RIFF stream data tag type CASI (%u)", "RIFF stream data tag type Zora (%u)", "could not decoding EXIF data in stream header.\n", "vprp %d/%d %d/%d\n", "Something went wrong during header parsing, I will ignore it and try to continue anyway.\n", "PotEncoder", "Non-interleaved AVI without index, switching to interleaved\n", "non-interleaved AVI\n", "use odml:%d\n", "ISFT", "Axan", "AVI (Audio Video Interleaved)", "strn", "use_odml", "use odml index", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "libavformat/avio.c", "No URL Protocols are registered. Missing call to av_register_all()?\n", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "Key '%s' not found.\n", "Error parsing options string %s\n", "https:", "https protocol not found, recompile FFmpeg with openssl, gnutls,\nor securetransport enabled.\n", "protocol_whitelist", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "Protocol not on whitelist '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || !strcmp(whitelist, e->value)", "URLContext", "List of protocols that are allowed to be used", "Invaid UTF8 sequence in avio_put_str16%s\n", "!s->write_flag", "libavformat/aviobuf.c", "Failed to decrease buffer size\n", "len >= s->orig_buffer_size", "Statistics: %d seeks, %d writeouts\n", "Statistics: %ld bytes read, %d seeks\n", "AVIOContext", "%sMetadata:\n", "%s  %-16s: ", "\n%s  %-16s: ", "fps, ", "tbr, ", "tbn, ", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ", SAR %d:%d DAR %d:%d", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "    ", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "h263 macroblock info", "replaygain: ", "invalid data", "%s - ", "track gain", "track peak", "album gain", "album peak", "displaymatrix: rotation of %.2f degrees", "stereo3d: ", "side by side", "top and bottom", "frame alternate", "checkerboard", "interleaved lines", "interleaved columns", "side by side (quincunx subsampling)", " (inverted)", "audio service type: ", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "quality factor: %d, pict_type: %c", "unknown side data type %d (%d bytes)", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%d.%06d", ", bitrate: ", "%ld kb/s", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "  Program %d %s\n", "  No Program\n", "%s #%d, %s, %s '%s':\n", "Output", "Input", "from", "file:", "file,crypto", "truncate", "truncate existing files on write", "set I/O operation maximum block size", "Invalid picture type: %d.\n", "Could not read mimetype from an attached picture.\n", "Error reading attached picture description.\n", "Error reading attached picture data.\n", "Error parsing attached picture.\n", "error parsing VorbisComment metadata\n", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\n", "fLaC", "raw FLAC", "NGINX RTMP", "true", "false", "AMF_DATA_TYPE_STRING parsing failed\n", "keyframes", "Skipping duplicate index\n", "times", "filepositions", "Invalid keyframes object, skipping.\n", "Keyframe index parsing failed\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_OBJECT\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_MIXEDARRAY, found %d\n", "unsupported amf type %d\n", "duration", "videodatarate", "audiodatarate", "datastream", "videocodecid", "Video codec (%x)", "audiocodecid", "Audio codec (%x)", "audiosamplerate", "audiosamplesize", "stereo", "Open Broadcaster Software v0.%d", "metadatacreator", "MEGA", "filesize", "framerate", "type:%d, size:%d, last:%d, dts:%ld pos:%ld\n", "Found invalid index entries, clearing the index.\n", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "Unknown type %s\n", "Adjusting next position due to index mismatch\n", "Skipping flv packet: type %d, size %d, flags %d.\n", "%s stream discovered after head already parsed\n", "%d %X %d \n", "Negative cts, previous timestamps might be wrong.\n", "invalid timestamps %ld %ld\n", "Omnia A/XE", "Packet mismatch %d %d\n", "Encoder", "OnTextData packet", "live_flv", "live RTMP FLV (Flash Video)", "live_flvdec", "FLV (Flash Video)", "flvdec", "flv_metadata", "Allocate streams according to the onMetaData array", "Failed to update header with correct duration.\n", "Failed to update header with correct filesize.\n", "FLV only supports wideband (16kHz) Speex audio\n", "FLV only supports mono Speex audio\n", "FLV does not support sample rate %d, choose from (44100, 22050, 11025)\n", "Audio codec '%s' not compatible with FLV\n", "datasize", "lasttimestamp", "totalframes", "hasAudio", "hasVideo", "hasCuePoints", "hasMetadata", "hasKeyframes", "Ignoring metadata for %s\n", "Packets are not in the proper order with respect to DTS\n", "libavformat/flvenc.c", "Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "aac bitstream error\n", "Warning: Speex stream has more than 8 frames per packet. Adobe Flash Player cannot handle this!\n", "Too large packet with size %u >= %u\n", "Text", "at most one video stream is supported in flv\n", "%s codec %s not compatible with flv\n", "Muxing VP6 in flv will produce flipped video on playback.\n", "at most one audio stream is supported in flv\n", "Audio", "16-bit big-endian audio in flv is valid but most likely unplayable (hardware dependent); use s16le\n", "Data", "Subtitle codec '%s' for stream %d is not compatible with FLV\n", "Codec type '%s' for stream %d is not compatible with FLV\n", "AAC sequence header: %02x %02x.\n", "Codec %s is not supported in the official FLV specification,\n", "use vstrict=-1 / -strict -1 to use it anyway.\n", "video/x-flv", "flv muxer", "flvflags", "FLV muxer flags", "aac_seq_header_detect", "Put AAC sequence header based on stream data", "segment", "ssegment", "image2", "Probing %s score:%d size:%d\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "raw H.261", "h261 demuxer", "raw H.263", "h263 demuxer", "h26l,h264,264,avc", "h264 demuxer", "configurationVersion:                %u\n", "general_profile_space:               %u\n", "general_tier_flag:                   %u\n", "general_profile_idc:                 %u\n", "general_profile_compatibility_flags: 0x%08x\n", "general_constraint_indicator_flags:  0x%012lx\n", "general_level_idc:                   %u\n", "min_spatial_segmentation_idc:        %u\n", "parallelismType:                     %u\n", "chromaFormat:                        %u\n", "bitDepthLumaMinus8:                  %u\n", "bitDepthChromaMinus8:                %u\n", "avgFrameRate:                        %u\n", "constantFrameRate:                   %u\n", "numTemporalLayers:                   %u\n", "temporalIdNested:                    %u\n", "lengthSizeMinusOne:                  %u\n", "numOfArrays:                         %u\n", "array_completeness[%u]:               %u\n", "NAL_unit_type[%u]:                    %u\n", "numNalus[%u]:                         %u\n", "nalUnitLength[%u][%u]:                 %u\n", "raw HEVC video", "hevc,h265,265", "hevc demuxer", "date", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Jazz", "Metal", "New Age", "Oldies", "Other", "Reggae", "Techno", "Industrial", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Gangsta", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Ballad", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "Error reading frame %s, skipped\n", "TCON", "(%d)", "TXXX", "No AVFormatContext, skipped ID3 chapter data\n", "PRIV", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "APIC", "Failed to alloc %zu bytes\n", "Failed to alloc %d bytes\n", "Error reading GEOB frame, data truncated.\n", "GEOB", "encrypted", "encrypted and compressed", "extended header too long.", "invalid extended header length", "version", "compression", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Skipping %s ID3v2 frame %s.\n", "USLT", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to alloc %ld bytes\n", "Failed to read compressed tag\n", "Failed to uncompress tag: %d\n", "lyrics-%s%s%s", "invalid frame id, assuming padding\n", "Error reading lyrics, skipped\n", "ID3v2.%d tag skipped, cannot handle %s\n", "CHAP", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "compilation", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "TPUB", "TRCK", "TSSE", "lyrics", "ljpg", "mpg1-img", "mpg2-img", "mpg4-img", "ffv1-img", "im24", "im32", "sunras", "yuv10", "c608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "ssmv", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "MPEG4 description: tag=0x%02x len=%d\n", "codec open in read_dec_config_descr\n", "esds object type id 0x%02x\n", "Specific MPEG4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "raw MPEG-4 video", "m4v demuxer", "text/plain", "application/x-truetype-font", "application/x-font", "application/vnd.ms-opentype", "binary", "image/gif", "image/jpeg", "image/png", "image/tiff", "A_AAC", "A_AC3", "A_ALAC", "A_DTS", "A_EAC3", "A_FLAC", "A_MLP", "A_MPEG/L2", "A_MPEG/L1", "A_MPEG/L3", "A_OPUS", "A_OPUS/EXPERIMENTAL", "A_PCM/FLOAT/IEEE", "A_PCM/FLOAT/IEEE", "A_PCM/INT/BIG", "A_PCM/INT/BIG", "A_PCM/INT/BIG", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_QUICKTIME/QDM2", "A_REAL/14_4", "A_REAL/28_8", "A_REAL/ATRC", "A_REAL/COOK", "A_REAL/SIPR", "A_TRUEHD", "A_TTA1", "A_VORBIS", "A_WAVPACK4", "D_WEBVTT/SUBTITLES", "D_WEBVTT/CAPTIONS", "D_WEBVTT/DESCRIPTIONS", "D_WEBVTT/METADATA", "S_TEXT/UTF8", "S_TEXT/UTF8", "S_TEXT/ASCII", "S_TEXT/ASS", "S_TEXT/SSA", "S_ASS", "S_SSA", "S_VOBSUB", "S_DVBSUB", "S_HDMV/PGS", "V_DIRAC", "V_MJPEG", "V_MPEG1", "V_MPEG2", "V_MPEG4/ISO/ASP", "V_MPEG4/ISO/AP", "V_MPEG4/ISO/SP", "V_MPEG4/ISO/AVC", "V_MPEGH/ISO/HEVC", "V_MPEG4/MS/V3", "V_PRORES", "V_REAL/RV10", "V_REAL/RV20", "V_REAL/RV30", "V_REAL/RV40", "V_SNOW", "V_THEORA", "V_UNCOMPRESSED", "V_VP8", "V_VP9", "background", "anaglyph_cyan_red", "anaglyph_green_magenta", "LEAD_PERFORMER", "PART_NUMBER", "Skipping invalid tag with no TagName.\n", "%s/%s", "Read error at pos. %lu (0x%lx)\n", "Invalid EBML number size tag 0x%02x at pos %lu (0x%lx)\n", "Compression size but no data in headerstrip\n", "1.2.3", "Dropping apparently-broken index.\n", "Invalid track number %d\n", "size > 0", "libavformat/matroskadec.c", "EBML block data error\n", "Invalid stream %lu or size %u\n", "File is broken, keyframes not correctly marked!\n", "Corrupt int4 RM-style audio packet size\n", "Corrupt sipr RM-style audio packet size\n", "Corrupt generic RM-style audio packet size\n", "Error parsing a wavpack block.\n", "Unknown or unsupported track type %lu\n", "Invalid sample rate %f, defaulting to 8000 instead.\n", "Multiple combined encodings not supported", "Unsupported encoding type", "Failed to decode codec private data\n", "enc_key_id", "V_MS/VFW/FOURCC", "A_MS/ACM", "A_QUICKTIME", "V_QUICKTIME", "mov FourCC not found %s.\n", "MAIN", "TTA1", "Too large audio channel number %lu or bitdepth %lu. Skipping track.\n", "Invalid FLAC private data\n", "Unknown/unsupported AVCodecID %s.\n", "alpha_mode", "%s_%d", "D_WEBVTT/CAPTIONS", "D_WEBVTT/DESCRIPTIONS", "D_WEBVTT/METADATA", "SMI ", "Unknown entry 0x%X\n", "Invalid length 0x%lx > 0x%lx for syntax element %i\n", "File moves beyond max. allowed depth (%d)\n", "Too many level1 elements or circular seekheads.\n", "Duplicate element\n", "Invalid element\n", "Read error\n", "Max EBML element depth (%d) reached, cannot parse further.\n", "EBML header parsing failed\n", "EBML header using unsupported features\n(EBML version %lu, doctype %s, doc version %lu)\n", "webm", "%Y-%m-%d %H:%M:%S", "incomplete attachment\n", "mimetype", "The tags at index %d refer to a non-existent attachment %ld.\n", "The tags at index %d refer to a non-existent chapter %ld.\n", "The tags at index %d refer to a non-existent track %ld.\n", "Unknown EBML doctype '%s'\n", "Failed to read file headers\n", "webm_dash_manifest_duration", "webm_dash_manifest_initialization_range", "webm_dash_manifest_file_name", "webm_dash_manifest_track_number", "webm_dash_manifest_cues_start", "webm_dash_manifest_cues_end", "webm_dash_manifest_bandwidth", "webm_dash_manifest_cluster_keyframe", "%s%ld", "webm_dash_manifest_cue_timestamps", "webm_dash_manifest", "WebM DASH Manifest", "matroska,webm", "Matroska / WebM", "mkv,mk3d,mka,mks", "audio/webm,audio/x-matroska,video/webm,video/x-matroska", "WebM DASH Manifest demuxer", "live", "flag indicating that the input is a live file that only has the headers.", "(none)", "num < (1ULL << 56) - 1", "libavformat/matroskaenc.c", "bytes >= needed_bytes", "Starting new cluster at offset %lu bytes, pts %ludts %lu\n", "bytes <= 8", "tracknum>=0 && tracknum<num_tracks", "size >= 2", "encoding_tool", "Invalid chapter start (%ld) or end (%ld).\n", "Writing block at offset %lu, size %d, pts %ld, dts %ld, duration %ld, keyframe %d\n", "Error stripping a WavPack packet.\n", "Can't write packet with unknown timestamp\n", "Starting new cluster due to timestamp\n", "Failed to open dynamic buffer\n", "Writing block at offset %lu, size %d, pts %ld, dts %ld, duration %ld, flags %d\n", "%.*s\n%.*s\n%.*s", "Could not write cached audio packet ret:%d\n", "Insufficient space reserved for cues: %d (needed: %ld).\n", "end duration = %lu\n", "stream %d end duration = %lu\n", "%02d:%02d:%012.9f", "Flushing cluster at offset %lu bytes\n", "D_WEBVTT/SUBTITLES", "Lavf", "Lavf57.25.100", "The Matroska muxer does not yet support muxing %s\n", "Error parsing AAC extradata, unable to determine samplerate.\n", "Raw RGB is not supported Natively in Matroska, you can use AVI or NUT or\nIf you would like to store it anyway using VFW mode, enable allow_raw_vfw (-allow_raw_vfw 1)\n", "Initial padding is invalid\n", "Only VP8 or VP9 video and Vorbis or Opus audio and WebVTT subtitles are supported for WebM.\n", "The specified stereo mode is not valid.\n", "Overflow in display width\n", "Subtitle codec %d is not supported.\n", "Only audio, video, and subtitles are supported for Matroska.\n", "0x%lx", "Invalid extradata found, ALAC expects a 36-byte QuickTime atom.", "codec %s is not supported by this format\n", "No bmp codec tag found for codec %s\n", "No wav codec tag found for codec %s\n", "DURATION", "Attachment stream %d has no filename tag.\n", "Attachment stream %d has no mimetype tag and it cannot be deduced from the codec id.\n", "Using %.16lx for attachment %d\n", "Matroska", "video/x-matroska", "matroska muxer", "reserve_index_space", "Reserve a given amount of space (in bytes) at the beginning of the file for the index (cues).", "cluster_size_limit", "Store at most the provided amount of bytes in a cluster. ", "cluster_time_limit", "Store at most the provided number of milliseconds in a cluster.", "dash", "Create a WebM file conforming to WebM DASH specification", "dash_track_number", "Track number for the DASH stream", "Write files assuming it is a live stream.", "allow_raw_vfw", "allow RAW VFW mode", "Unknown MOV field order 0x%04x\n", "enda %d\n", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Duplicated STPS atom\n", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type: %08x '%.4s' parent:'%.4s' sz: %ld %ld %ld\n", "overread end of atom '%.4s' by %ld bytes\n", "ignoring multiple glbl\n", "Found duplicated MOOV Atom. Skipped it\n", "root atom offset 0x%lx: partial file\n", "read fragments, offset 0x%lx\n", "root", "%d/%d", "qt  ", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "compatible_brands", "Duplicated SBGP atom\n", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %ld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %ld\n", "frag flags 0x%x\n", "could not find corresponding trex\n", "could not find corresponding track id %d\n", "track[%i].stts.entries = %i\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "sample_count=%d, sample_duration=%d\n", "keyframe_count = %d\n", "Duplicated STSS atom\n", "track[%i].stsc.entries = %i\n", "Duplicated STSC atom\n", "ctype= %.4s (0x%08x)\n", "stype= %.4s\n", "handler_name", "Duplicated ELST atom\n", "track[%i].edit_count = %i\n", "duration=%ld time=%ld rate=%f\n", "Duplicated STCO atom\n", "duplicate senc atom\n", "senc atom size %ld too small\n", "failed to read the auxiliary info", "systemBitrate=\"", "unknown compression for cmov atom !\n", "get_wav_header failed\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "stream %d, sample %d, dts %ld\n", "rotate", "sidx version %u", "sidx reference_type 1", "stream has moof boxes, will look for a mfra\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "found tfra\n", "failed to seek back after looking for mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %lx\n", "time scale = %i\n", "[aax] file checksum == ", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "type %.4s size %d\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x08%x size %d\n", "flags 0x%x entries %d\n", "first sample flags 0x%x\n", "mov_update_dts_shift(): dts_shift set to %d\n", "found frag time %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\n", "calculated into dts %ld\n", "found frag time %ld, using it for dts\n", "Failed to add index entry\n", "AVIndex stream %d, sample %d, offset %lx, dts %ld, size %d, distance %d, keyframe %d\n", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "stream %d, timestamp %ld, sample %d\n", "stream %d, found sample %d\n", "The 'keys' atom with the invalid key count: %d\n", "The key# %d in meta has invalid size: %d\n", "iTunSMPB", "%*X %X %X %X", "cdec", "Unhandled or malformed custom metadata of size %ld\n", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "warning", "location", "loci too short\n", "place name too long\n", "no space for coordinates left (%d)\n", "%+08.4f%+09.4f", "%s-%s", "Unknown cover type: 0x%x.\n", "The index of 'data' is out of range: %d >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the float32 number (%f) in string.\n", "HandBrake %d.%d.%d", "lang \"%3s\" ", "tag \"%s\" value \"%s\" atom \"%.4s\" %d %ld\n", "Error parsing cover art.\n", "truncated extradata\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unexpected size %ld\n", "aclr not decoded - unable to add atom to extradata\n", "size: %dx%d\n", "palette: ", "%06x%s", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "stream %d, missing mandatory atoms, broken header\n", "stream %d, timescale not set\n", "multiple edit list entries, a/v desync might occur, patch welcome\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "Sample size %u is too large\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "chunk count %d\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %d\n", "AVIndex stream %d, chunk %d, offset %lx, dts %ld, size %d, duration %d\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%ld\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "timecode", "Forcing full parsing for mp3 stream\n", "Referenced QT chapter track not found\n", "tmcd", "track[%i].ctts.entries = %i\n", "count=%d, duration=%d\n", "CTTS invalid\n", "dts shift %d\n", "stream %d, offset 0x%lx: partial file\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "sample_size = %d sample_count = %d\n", "Invalid sample field size %d\n", "Duplicated STSZ atom\n", "Unsupported DTS audio channel layout", "Multiple mdhd?\n", "Version %d", "invalid size %ld in stsd\n", "multiple fourcc not supported\n", "Concatenated H.264 or H.265 might not play correctly.\n", "size=%ld 4CC= %c%c%c%c/0x%08x codec_type=%d\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "audio channels %d\n", "version =%d, isom =%d\n", "reel_name", "avc1", "stsd", "hvc1", "hev1", "mp4s", "mov,mp4,m4a,3gp,3g2,mj2", "QuickTime / MOV", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "export_all", "Export unrecognized metadata entries", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "decryption_key", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "avc1\r", "text", "avc1\r", "mp4a", "tx3g", "avc1k", "VP6A]", "VP6F", "a=control:streamid=%d\r\n", "next_dts >= 0", "libavformat/movenc.c", "disk", "trkn", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "CodecPrivateData", "stss", "stps", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "url ", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "dhlr", "Unknown hldr_type for %s / 0x%04X, writing dummy values\n", "handler", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "PSP mode need one video and one audio stream\n", "Non-consecutive fragments, writing incorrect sidx\n", "next_dts <= 2147483647", "yrrc", "albm", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<head>\n", "<meta name=\"creator\" content=\"%s\" />\n", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%ld\">\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "systemBitrate", "trackID", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "Lucida Grande", "./libavcodec/put_bits.h", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "XDCAM", " HD422", " %d%c", "Could not locate DNxHD bit stream in vos_data\n", "Could not locate DNxHD bit stream, vos_data too small\n", "moov atom written before any packets, unable to write correct dvc1 atom. Set the delay_moov flag to fix this.\n", "DpxE", "gamma value %g\n", "writing gama value %d\n", "track->mode == 0x02", "gamma value unknown, unable to write gama atom\n", "Not writing 'gama' atom. Format is not MOV.\n", "color primaries unspecified, assuming bt709\n", "color primaries unspecified, assuming bt470bg\n", "color primaries unspecified, assuming smpte170\n", "color primaries unspecified, unable to assume anything\n", "track->mode == 0x02 || track->mode == 0x01", "Not writing 'colr' atom. Format is not MOV or MP4.\n", "not writing 'chan' tag due to lack of channel information\n", "fps %d is too large\n", "reel_name length %lu is too large\n", "lpcm", "EDTS using dts:%ld cts:%d instead of dts:%ld cts:%ld tid:%d\n", "av_rescale_rnd(start_dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "Not writing any edit list even though one would have been required\n", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "Lavc57.24.102", "2006/04/01 11:11:11", "perf", "titl", "auth", "gnre", "dscp", "cprt", "aART", "ldes", "tvsh", "tven", "tvnn", "tmpo", "Estimating the duration of the last packet in a fragment, consider setting the duration field in AVPacket instead.\n", "Unable to re-open %s output file for the second pass (faststart)\n", "Application provided duration: %ld / timestamp: %ld is out of range for mov/mp4 format\n", "Application provided duration: %ld is invalid\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Dropping invalid packet from start of the stream\n", "Multiple independent substreams", "Track %d starts with a nonzero dts %ld, while the moov already has been written. Set the delay_moov flag to handle this case.\n", "pts has no value\n", "Starting second pass: moving the moov atom to the beginning of the file\n", "reserved_moov_size is too small, needed %ld additional\n", "Starting second pass: inserting sidx atoms\n", "wide", "free", "ipod", "ismv", "No meaningful edit list will be written when using empty_moov without delay_moov\n", "Sample interleaving in fragments is mutually exclusive with omit_tfhd_offset and separate_moof\n", "muxer does not support non seekable output\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "cenc-aes-ctr", "Invalid encryption key len %d expected %d\n", "Invalid encryption kid len %d expected %d\n", "unsupported encryption scheme %s\n", "Warning, extension is not .m4a, .m4v nor  .m4b Quicktime/Ipod might not play the file\n", "unsupported height for dv codec\n", "%s rawvideo cannot be written to mov, output file will be unreadable\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "Resolution %dx%d too large for mov/mp4\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n", "track %d: muxing mp3 at %dhz is not standard in MP4\n", "palette:", "%06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x", "size:", "MP4 (MPEG-4 Part 14)", "video/mp4", "mp4 muxer", "mov muxer", "movflags", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "maximum moov size so it can be placed at the begin", "empty_moov", "Make the initial moov atom empty", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "Write separate moof/mdat atoms for each track", "frag_custom", "Flush fragments on caller requests", "isml", "Create a live smooth streaming feed (for pushing to a publishing point)", "faststart", "Run a second pass to put the index (moov atom) at the beginning of the file", "omit_tfhd_offset", "Omit the base data offset in tfhd atoms", "disable_chpl", "Disable Nero chapter atom", "default_base_moof", "Set the default-base-is-moof flag in tfhd atoms", "Write DASH compatible fragmented MP4", "frag_discont", "Signal that the next fragment is discontinuous from earlier ones", "delay_moov", "Delay writing the initial moov until the first fragment is cut, or until the first fragment flush", "global_sidx", "Write a global sidx index at the start of the file", "write_colr", "Write colr atom (Experimental, may be renamed or changed, do not use from scripts)", "write_gama", "Write deprecated gama atom", "rtpflags", "RTP muxer flags", "latm", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "rfc2190", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "skip_rtcp", "Don't send RTCP sender reports", "h264_mode0", "Use mode 0 for H264 in RTP", "send_bye", "Send RTCP BYE packets when finishing", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "frag_duration", "Maximum fragment duration", "min_frag_duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "Number of lookahead entries for ISM files", "video_track_timescale", "set timescale of all video tracks", "brand", "Override major brand", "use_editlist", "use edit list", "fragment_index", "Fragment number of the next fragment", "mov_gamma", "gamma value for gama atom", "frag_interleave", "Interleave samples within fragments (max number of consecutive samples, lower is tighter interleaving, but with more overhead)", "encryption_scheme", "Configures the encryption scheme, allowed values are none, cenc-aes-ctr", "encryption_key", "The media encryption key (hex)", "encryption_kid", "The media encryption key identifier (hex)", "CENC-AVC: remaining size %d smaller than nal length+type %d\n", "CENC-AVC: nal size %d remaining %d\n", "Unable to initialize hinting of stream %d\n", "rtpo", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "Cannot determine file size, skipping TOC table.\n", "pad %d %d\n", "Skipping %d bytes of junk at %ld.\n", "MP2/3 (MPEG audio layer 2/3)", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "IMKH", "Sofdec", "ofdec", "Further flags set but no bytes left\n", "pes_ext %X is invalid\n", "none (ret=%d)\n", "pos=0x%lx dts=0x%lx %0.3f\n", "%d: pts=%0.3f dts=%0.3f size=%d\n", "MPEG-PS (MPEG-2 Program Stream)", "drac", "HEVC", "VC-1", "max resync size reached, could not find sync byte\n", "changing packet size to %d\n", "timestamp_len > 64", "Predefined SLConfigDescriptor", "Filter: pid=0x%x\n", "pos >= 188", "libavformat/mpegts.c", "All programs have pmt, headers found\n", "Continuity check failed for pid %d expected %d got %d\n", "Skipping after seek\n", "SDT:\n", "cannot set stream info, codec is open\n", "stream=%d stream_type=%x pid=%x prog_reg_desc=%.4s\n", "HDMV", "HDPR", "Failed to allocate buffers for seekback\n", "score: %d, dvhs_score: %d, fec_score: %d \n", "Unable to seek back to the start\n", "tuning done\n", "start=%0.3f pcr=%0.3f incr=%d\n", "Could not detect TS packet size, defaulting to non-FEC/DVHS\n", "Tag %x length violation new length %d bytes remaining %d\n", "Maximum MP4 descriptor level exceeded\n", "pid %x is not PES\n", "Found tag %x expected %x\n", "pid=%x pes_code=%#x\n", "pid=%x stream_type=%x probing\n", "PAT:\n", "sid=0x%x pid=0x%x\n", "DVB subtitles with multiple languages", "reg_desc=%.4s\n", "Opus in MPEG-TS - channel_config_code > 0x8", "PMT: len %i\n", "sid=0x%x sec_num=%d/%d version=%d\n", "pcr_pid=0x%x\n", "program tag: 0x%02x len=%d\n", "mpegtsraw", "raw MPEG-TS (MPEG-2 Transport Stream)", "mpegts", "MPEG-TS (MPEG-2 Transport Stream)", "mpegtsraw demuxer", "resync_size", "set size limit for looking up a new synchronization", "compute_pcr", "compute exact PCR for each transport stream packet", "ts_packetsize", "output option carrying the raw packet size", "mpegts demuxer", "fix_teletext_pts", "try to fix pts values of dvb teletext streams", "scan_all_pmts", "scan and combine all PMTs", "skip_changes", "skip changing / adding streams / programs", "skip_clear", "skip clearing programs", "raw MPEG video", "mpegvideo demuxer", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "NOPTS", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %ld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "sample rate not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "encoder-", "Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "pkt->size == ((-2147483647 - 1) / 3 * 2 + (int)sizeof(AVFrame))", "libavformat/mux.c", "((AVFrame *)pkt->data)->buf", "Delay between the first packet and last packet in the muxing queue is %ld > %ld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "New streams are not supposed to be added in between Ogg context save/restore operations.\n", "OggS", "cannot find sync word\n", "ogg page, unsupported version\n", "Changing stream parameters in multistream ogg", "failed to create or replace stream\n", "Cannot identify new stream\n", "ogg_packet: curidx=%i\n", "ogg_packet: idx=%d pstart=%d psize=%d segp=%d nsegs=%d\n", "Page at %ld is missing granule\n", "Codec not found\n", "invalid pts %ld\n", "stream_index < ogg->nstreams", "libavformat/oggdec.c", "non-", "Broken file, %skeyframe not correctly marked.\n", "found headers\n", "Header parsing failed for stream %d\n", "Headers mismatch for stream %d: expected %d received %d.\n", "CELT    ", "Invalid timebase, assuming 30 FPS\n", "Too large gpshift %d (>= 32).\n", "Invalid number of planes %d in daala pixel format map.\n", "Unsupported pixel format - %i %i\n", "Unknown header type %X\n", "BBCD", "KW-DIRAC", "Invalid timing values.\n", "OpusTags", "Unsupported huge granule pos %ld\n", "Last packet was truncated to %d due to end trimming.\n", "OpusHead", "Opus", "fishead", "Unknown skeleton version %d.%d\n", "fisbone", "Serial number in fisbone doesn't match any stream\n", "Multiple fisbone for the same stream\n", "speex packet too small\n", "invalid channel count. Speex must be mono or stereo.\n", "Speex   ", "Too old or unsupported Theora (%x)\n", "Invalid time base in theora stream, assuming 25 FPS\n", "METADATA_BLOCK_PICTURE", "out-of-memory error. Skipping cover art block.\n", "Failed to parse cover art block.\n", "CHAPTER%03d", "%02d:%02d:%02d.%03d", "NAME", "%td bytes of comment header remain\n", "truncated comment header, %i comments not found\n", "Channel change is not supported\n", "Invalid OggVP8 header packet", "Unknown OggVP8 version %d.%d\n", "Unknown VP8 header type 0x%02X\n", "OVP80", "AVFormatContext", "avioflags", "direct", "reduce buffering", "probesize", "set probing size", "formatprobesize", "number of bytes to probe file format", "packetsize", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "do not write random/volatile data", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "format_whitelist", "List of demuxers that are allowed to be used", "st->codec->bits_per_coded_sample > 0", "libavformat/pcmdec.c", "Asterisk raw pcm", "sln demuxer", "mulaw", "PCM mu-law", "mulaw demuxer", "alaw", "PCM A-law", "alaw demuxer", "u8 demuxer", "u16le", "u16le demuxer", "u16be", "u16be demuxer", "u24le", "u24le demuxer", "u24be", "u24be demuxer", "u32le", "u32le demuxer", "u32be", "u32be demuxer", "s8 demuxer", "s16le", "s16le demuxer", "s16be", "s16be demuxer", "s24le", "s24le demuxer", "s24be", "s24be demuxer", "s32le", "s32le demuxer", "s32be", "s32be demuxer", "f32le", "PCM 32-bit floating-point little-endian", "f32le demuxer", "f32be", "PCM 32-bit floating-point big-endian", "f32be demuxer", "f64le", "PCM 64-bit floating-point little-endian", "f64le demuxer", "f64be", "PCM 64-bit floating-point big-endian", "f64be demuxer", "No such pixel format: %s.\n", "yuv,cif,qcif,rgb", "rawvideo demuxer", "set frame size", "yuv420p", "set frame rate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "U263\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "mjpa\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "wav header size < 14", "WAVEFORMATEX support for RIFX files\n", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "(start&1) == 0", "libavformat/riffenc.c", "LIST", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "RVTRE", "RV30F", "dnet", "LSD:", ".R1M", ".REC", "Index size %d (%d pkts) is wrong, should be %d.\n", "DATA tag in middle of chunk, file may be broken.\n", "%d %d-%d %ld %d\n", "codecdata_length too large\n", "bad SIPR file flavor %d\n", "sub_packet_size is invalid\n", "extradata size %u too large\n", "mismatching interleaver parameters", "Unknown interleaver %X\n", "logical-fileinfo", "Unsupported version\n", "Unsupported Name value property version\n", "Unsupported stream type %08x\n", "%X %X\n", "Invalid framerate\n", "codec_data_size %u < size %d\n", "MLTI with multiple (%d) MDPR", "tag=%c%c%c%c (%08x) size=%d\n", "Invalid stream index %d for index at pos %ld\n", "Nr. of packets in packet index for stream index %d exceeds filesize (%ld at %ld = %ld)\n", "Non-linear index detected, not supported\n", "%s = '%s'\n", "%s = '0x", "StreamCount", "%s = %d\n", "Skipping unsupported key: %s\n", "OpaqueData", "Duration", "Insufficient data\n", "Insufficient remaining len\n", "Failed to read %d bytes\n", "Impossibly sized packet\n", "cur slice %d, too large\n", "outside videobufsize\n", "Failed to fully read block\n", "rm->audio_pkt_cnt > 0", "libavformat/rmdec.c", "size %u is invalid\n", "Unsupported opcode=%d at %lX\n", "IVR (Internet Video Recording)", "RDT demuxer", "RealMedia", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "%s://", "FFmpeg version 3.0.3", "0123456789abcdef0123456789ABCDEF", "*pkt_buffer", "libavformat/utils.c", "probing stream %d pp:%d\n", "nothing to probe for stream %d\n", "probed stream %d\n", "probed stream %d failed\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "libavformat license: LGPL version 2.1 or later", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist", "Failed to duplicate whitelist\n", "Truncating packet of size %d to %ld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "st->codec->ticks_per_frame", "s->iformat", "DTS %li < %li out of order\n", "invalid dts/pts combination %li\n", "first_dts %s not matching first dts %s (pts %s, duration %ld) in the queue\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%ld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "pipe", "cache", "Reconfiguring buffers to size %ld\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%lx pos_max=0x%lx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%ld %ld %ld / %s %s %s target:%s limit:%ld start:%ld noc:%d\n", "read_timestamp() failed in the middle\n", "read_seek: %d %s\n", "using cached pos_min=0x%lx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%lx pos_limit=0x%lx dts_max=%s\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "mp4v", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "Failed to reallocate probe buffer for stream %d\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "Ignoring outlier non primary stream starttime %f\n", "unspecified frame size", "unspecified pixel format", "unspecified size", "no decodable DTS frames", "unspecified number of channels", "no frame in rv30/40 and no sar", "unspecified sample rate", "unspecified sample format", "unknown codec", "Before avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d\n", "Failed to open codec in av_find_stream_info\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %ld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "DTS discontinuity in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "max_analyze_duration %ld reached at %ld microseconds st:%d\n", "decoding for stream %d failed\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "stream: start_time: %0.3f duration: %0.3f bitrate=%ld kb/s\n", "%d: start_time: %0.3f duration: %0.3f\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "new_program: id=0x%04x\n", "Chapter end time %ld before start %ld\n", "stream index %d is not valid\n", "%0*d", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "demuxer does not support additional id3 data, skipping\n", " \t\r\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "copy", "Failed to open bitstream filter %s for stream %d with codec %s", "Failed to parse creation_time %s\n", "dvbsub", "loas", "raw VC-1", "vc1 demuxer", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "plane_count == nb_components - 1", "libswscale/alphablend.c", "libswscale/swscale_internal.h", "swscaler", "SWScaler", "sws_flags", "scaler flags", "fast_bilinear", "fast bilinear", "bilinear", "bicubic", "nearest neighbor", "area", "averaging area", "bicublin", "luma bicubic, chroma bilinear", "gauss", "Gaussian", "sinc", "lanczos", "Lanczos", "natural bicubic spline", "print_info", "print info", "accurate_rnd", "accurate rounding", "full_chroma_int", "full chroma interpolation", "full_chroma_inp", "full chroma input", "error_diffusion", "error diffusion dither", "srcw", "source width", "srch", "source height", "dstw", "destination width", "dsth", "destination height", "src_format", "source format", "dst_format", "destination format", "src_range", "source is full range", "dst_range", "destination is full range", "param0", "scaler param 0", "param1", "scaler param 1", "src_v_chr_pos", "source vertical chroma position in luma grid/256", "src_h_chr_pos", "source horizontal chroma position in luma grid/256", "dst_v_chr_pos", "destination vertical chroma position in luma grid/256", "dst_h_chr_pos", "destination horizontal chroma position in luma grid/256", "sws_dither", "set dithering algorithm", "leave choice to sws", "bayer", "bayer dither", "error diffusion", "a_dither", "arithmetic addition dither", "x_dither", "arithmetic xor dither", "gamma", "gamma correct scaling", "alphablend", "mode for alpha -> non alpha", "ignore alpha", "uniform_color", "blend onto a uniform color", "blend onto a checkerboard", "n == s->plane[ii].available_lines", "libswscale/slice.c", "firstLumSrcY >= lastInLumBuf - vLumBufSize + 1", "libswscale/swscale.c", "firstChrSrcY >= lastInChrBuf - vChrBufSize + 1", "One of the input parameters to sws_scale() is NULL, please check the calling code\n", "Slice parameters %d, %d are invalid\n", "Slices start in the middle!\n", "bad src image pointers\n", "bad dst image pointers\n", "unsupported conversion to planar RGB %s -> %s\n", "srcSliceH > 1", "libswscale/swscale_unscaled.c", "internal error %s -> %s converter\n", "unsupported bayer conversion\n", "libswscale/utils.c", "filter2Size > 0", "minFilterSize > 0", "SwScaler: reducing / aligning filtersize %d -> %d\n", "(*filterPos)[i] >= 0", "(*filterPos)[i] < srcW", "(*filterPos)[i] + j < srcW || !filter[i * filterSize + j]", "SwScaler: zero vector in scaling\n", "sws: initFilter failed\n", "libswscale license: LGPL version 2.1 or later", "%1.3f ", "ehh flags invalid?!", "dithered ", "deprecated pixel format used, make sure you did set range correctly\n", "%s is not supported as input pixel format\n", "%s is not supported as output pixel format\n", "Exactly one scaler algorithm must be chosen, got %X\n", "%dx%d -> %dx%d is invalid scaling dimension\n", "Forcing full internal H chroma due to odd output size\n", "Forcing full internal H chroma due to input having non subsampled chroma\n", "Desired dithering only supported in full chroma interpolation for destination format '%s'\n", "Ordered dither is not supported in full chroma interpolation for destination format '%s'\n", "%s output is not supported with half chroma resolution, switching to full\n", "full chroma interpolation for destination format '%s' not yet implemented\n", "c->dstBpc > 14", "c->chrDstH <= dstH", "%s scaler, from %s to %s%s ", "using %s\n", "%dx%d -> %dx%d\n", "lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "using alpha blendaway %s -> %s special converter\n", "using unscaled %s -> %s special converter\n", "YUV color matrix differs for YUV->YUV, using intermediate RGB to convert\n", "area averaging", "luma bicubic / chroma bilinear", "nearest neighbor / point", "Optimized 2 tap filter code cannot be used\n", "No accelerated colorspace conversion found from %s to %s.\n", "%ibpp not supported by yuv2rgb\n", "libswresample/audioconvert.c", "libswresample/dither.c", "Requested noise shaping dither not available at this sampling rate, using triangular hp dither\n", "!s->preout.count", "SWResampler", "set input channel count", "in_channel_count", "set output channel count", "out_channel_count", "set used channel count", "used_channel_count", "set input sample rate", "in_sample_rate", "set output sample rate", "out_sample_rate", "set input sample format", "in_sample_fmt", "set output sample format", "out_sample_fmt", "set internal sample format", "internal_sample_fmt", "set input channel layout", "in_channel_layout", "set output channel layout", "out_channel_layout", "clev", "set center mix level", "center_mix_level", "slev", "set surround mix level", "surround_mix_level", "set surround mix Level", "lfe_mix_level", "set LFE mix level", "rmvol", "set rematrix volume", "rematrix_volume", "rematrix_maxval", "set rematrix maxval", "set flags", "swr_flags", "force resampling", "dither_scale", "set dither scale", "dither_method", "set dither method", "rectangular", "select rectangular dither", "triangular", "select triangular dither", "triangular_hp", "select triangular dither with high pass", "lipshitz", "select Lipshitz noise shaping dither", "shibata", "select Shibata noise shaping dither", "low_shibata", "select low Shibata noise shaping dither", "high_shibata", "select high Shibata noise shaping dither", "f_weighted", "select f-weighted noise shaping dither", "modified_e_weighted", "select modified-e-weighted noise shaping dither", "improved_e_weighted", "select improved-e-weighted noise shaping dither", "filter_size", "set swr resampling filter size", "phase_shift", "set swr resampling phase shift", "linear_interp", "enable linear interpolation", "set cutoff frequency ratio", "resample_cutoff", "resampler", "set resampling Engine", "select SW Resampler", "soxr", "select SoX Resampler", "precision", "set soxr resampling precision (in bits)", "cheby", "enable soxr Chebyshev passband & higher-precision irrational ratio approximation", "min_comp", "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied", "min_hard_comp", "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.", "comp_duration", "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.", "max_soft_comp", "set maximum factor by which data is stretched/squeezed to make it match the timestamps.", "async", "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)", "first_pts", "Assume the first pts should be this value (in samples).", "matrix_encoding", "set matrixed stereo encoding", "select none", "dolby", "select Dolby", "dplii", "select Dolby Pro Logic II", "filter_type", "select swr filter type", "cubic", "select cubic", "blackman_nuttall", "select Blackman Nuttall windowed sinc", "kaiser", "select Kaiser windowed sinc", "kaiser_beta", "set swr Kaiser window beta", "output_sample_bits", "set swr number of output sample bits", "Treating %s as mono\n", "Input channel layout '%s' is not supported\n", "Output channel layout '%s' is not supported\n", "libswresample/rematrix.c", "Matrix coefficients:\n", "%s: ", "%s:%f ", "!s->out_ch_layout || out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout)", "!s-> in_ch_layout || in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout)", "a->planar", "libswresample/resample.c", "Unsupported sample format\n", "Filter length too large\n", "phase_count == 1 || phase_count % 2 == 0", "FFmpeg version 3.0.3", "out->planar == in->planar", "libswresample/swresample.c", "out->bps == in->bps", "out->ch_count == in->ch_count", "libswresample license: LGPL version 2.1 or later", "Failed to set option\n", "Requested input sample format %d is invalid\n", "Requested output sample format %d is invalid\n", "Input channel layout 0x%lx is invalid or unsupported.\n", "Output channel layout 0x%lx is invalid or unsupported.\n", "Requested resampling engine is unavailable\n", "Input channel layout has a different number of channels than the number of used channels, ignoring layout\n", "Using %s internally between filters\n", "Requested sample format %s is not supported internally, S16/S32/FLT/DBL is supported\n", "Failed to initialize resampler\n", "Resampling only supported with internal s16/s32/flt/dbl\n", "!s->in_ch_layout", "Input channel count and layout are unset\n", "Output channel layout %s mismatches specified channel count %d\n", "Input channel layout %s mismatches specified channel count %d\n", "Rematrix is needed between %s and %s but there is not enough information to do it\n", "s->used_ch_count", "s->out.ch_count", "a->bps", "a->ch_count", "s->midbuf.ch_count == s->used_ch_count", "s->midbuf.ch_count == s->out.ch_count", "s->in.planar", "s->dither.noise.ch_count == preout->ch_count", "Context has not been initialized\n", "s->drop_output", "!s->resample", "discarding %d audio samples\n", "adding %d audio samples of silence\n", "s->out_sample_rate == s->in_sample_rate", "Failed to compensate for timestamp delta of %f\n", "compensating audio timestamp drift:%f compensation:%d in:%d\n", "+infinity", "+inf", "-infinity", "-inf", "+nan", "-nan", "infinity", "tail_len <= 5", "libavutil/avstring.c", "'\\''", "%d channels", "3.0(back)", "quad", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(back)", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "hexadecagonal", "downmix", "front left", "front right", "front center", "low frequency", "back left", "back right", "front left-of-center", "front right-of-center", "back center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "detected %d logical cores\n", "armv8", "neon", "cpuflags", "BSF_NOT_FOUND", "Bitstream filter not found", "Internal bug, should not have happened", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "Generic error in an external library", "FILTER_NOT_FOUND", "Filter not found", "INPUT_CHANGED", "Input changed", "INVALIDDATA", "Invalid data found when processing input", "MUXER_NOT_FOUND", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "OUTPUT_CHANGED", "Output changed", "PATCHWELCOME", "Not yet implemented in FFmpeg, patches welcome", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "INPUT_AND_OUTPUT_CHANGED", "Input and output changed", "HTTP_BAD_REQUEST", "Server returned 400 Bad Request", "HTTP_UNAUTHORIZED", "Server returned 401 Unauthorized (authorization failed)", "HTTP_FORBIDDEN", "Server returned 403 Forbidden (access denied)", "HTTP_NOT_FOUND", "Server returned 404 Not Found", "HTTP_OTHER_4XX", "Server returned 4XX Client Error, but not one of 40{0,1,3,4}", "HTTP_SERVER_ERROR", "Server returned 5XX Server Error reply", "Undefined constant or missing '(' in '%s'\n", "Missing ')' in '%s'\n", "Missing ')' or too many args in '%s'\n", "sinh", "cosh", "tanh", "asin", "acos", "time", "squish", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "clip", "Unknown function in '%s'\n", "atan", "Invalid chars '%s' at the end of expression '%s'\n", "QP2LAMBDA", "Eval", "Cannot read file '%s': %s\n", "Error occurred in fstat(): %s\n", "Error occurred in mmap(): %s\n", "ff_tempfile: Cannot allocate file name\n", "/tmp/%sXXXXXX", "ff_tempfile: Cannot open temporary file %s\n", "FILE", "Failed to set close on exec\n", "AVPanScan", "ATSC A53 Part 4 Closed Captions", "Stereoscopic 3d metadata", "AVMatrixEncoding", "Metadata relevant to a downmix procedure", "AVReplayGain", "3x3 displaymatrix", "Active format description", "Motion vectors", "Skip samples", "Audio service type", "Mastering display metadata", "GOP timecode", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA512/224", "SHA512/256", "SHA384", "SHA512", "CRC32", "adler32", "Picture size %ux%u is invalid\n", "Formats with a palette require a minimum alignment of 4\n", "abs(src_linesize) >= bytewidth", "libavutil/imgutils.c", "abs(dst_linesize) >= bytewidth", "av_image_get_linesize failed\n", "IMGUTILS", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "256color", "quiet", "verbose", "fatal", "panic", "[%s @ %p] ", "[%s] ", "%s%s%s%s", "    Last message repeated %d times\r", "    Last message repeated %d times\n", " is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "libavutil/lzo.c", "in_ts != ((int64_t)0x8000000000000000UL)", "libavutil/mathematics.c", "duration >= 0", "libavutil/mem_internal.h", "Unable to parse option value \"%s\" as %s\n", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "size >= 25", "libavutil/opt.c", "INT64_MAX", "INT64_MIN", "%ld:%02d:%02d.%06d", "%d:%02d.%06d", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "-FLT_MAX", "-FLT_MIN", "DBL_MAX", "DBL_MIN", "-DBL_MAX", "-DBL_MIN", "Unable to parse option value \"%s\" as color\n", "Unable to parse option value \"%s\" as image size\n", "Unable to parse option value \"%s\" as video rate\n", "AVOption type %d of option %s not implemented yet\n", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "The value set by option '%s' is not a %s format", "The value set by option '%s' is not a channel layout.\n", "0x%08X", "%02X", "0x%02x%02x%02x%02x", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a %s format.\n", "The value for option '%s' is not a channel layout.\n", "%d%*1[:/]%d%c", "const_values array too small for %s\n", "Unable to parse option value \"%s\"\n", "true,y,yes,enable,enabled,on", "false,n,no,disable,disabled,off", "Unable to parse option value \"%s\" as boolean\n", "pixel format", "sample format", "Unable to parse option value \"%s\" as duration\n", "Unable to parse option value \"%s\" as channel layout\n", "Invalid option type.\n", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "Error setting option %s to value %s.\n", "pixel", "  %s%-17s ", "%-12s ", "<flags>", "<int>", "<int64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", "<boolean>", " (from ", " to ", " (default ", "\"%s\"", "     %-15s ", "%s AVOptions:\n", "Not supported option type: %d, option name: %s\n", "Invalid separator(s) found.", "%d:%d%c", "ntsc", "qntsc", "qpal", "sntsc", "spal", "ntsc-film", "bikeshed", "0123456789ABCDEFabcdef", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Cannot find color '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "%H:%M:%S", "%Y - %m - %d", "%Y%m%d", "%H%M%S", "%J:%M:%S", "%M:%S", "%H:%M", "%H%M", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "sqcif", "qcif", "4cif", "16cif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "2kdci", "2kflat", "2kscope", "4kdci", "4kflat", "4kscope", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "rgba", "rgb32", "bgr32", "%s%s", "name nb_components nb_bits", "%-11s %7d %10d", "yuvj", "d->log2_chroma_w <= 3", "libavutil/pixdesc.c", "d->log2_chroma_h <= 3", "d->nb_components <= 4", "d->name && d->name[0]", "bayer_", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step && !c->offset && !c->shift && !c->depth", "c->step >= c->depth", "8*c->step >= c->depth", "tmp[0] == 0 && tmp[1] == 0", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "iec61966-2-4", "bt1361e", "iec61966-2-1", "bt2020-10", "bt2020-20", "smpte428-1", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "gray8,y8", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "0rgb", "rgb0", "0bgr", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "pixelutils support is required but libavutil is not compiled with it\n", "s16p", "s32p", "fltp", "dblp", "name   depth", "%-6s   %2d ", "%s%02d:%02d:%02d%c%02d", "%02u:%02u:%02u%c%02u", "Timecode frame rate must be specified\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Using non-standard frame rate %d/%d\n", "%d:%d:%d%c%d", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "FFmpeg version 3.0.3", "IPBSipb", "3.0.3", "libavutil license: LGPL version 2.1 or later", "attachment", "!\"valid element size\"", "libavutil/utils.c", "<fBBf<", "fffffff", "fff$", "000`", "<00000000<", "<\f\f\f\f\f\f\f\f<", "<ll>", "8ll8", "8ll8", "|||||||", "<fBBf<", "0xx00", "x00000x", "x`````x", "p000x", "p00000x", "p000x", "p000x", "p000x", "<ll>", "8ll8", "8ll8", "<<<<"], "stringidentifiers": ["aac_latm", "dual_mono_mode", "auto", "autoselection", "main", "both", "eac3", "drc_scale", "heavy_compr", "target_level", "dmix_mode", "ltrt_cmixlev", "ltrt_surmixlev", "loro_cmixlev", "loro_surmixlev", "alac", "extra_bits_bug", "max_samples", "AVDCT", "fastint", "altivec", "faan", "idct", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "HuffYUV", "cyuv", "h264", "indeo3", "theora", "Theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "Cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "Snow", "tscc", "ulti", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "LOCO", "wnv1", "aasc", "indeo2", "fraps", "Fraps", "truemotion2", "cscd", "CamStudio", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "indeo4", "indeo5", "mimic", "Mimic", "escape124", "daala", "Daala", "dirac", "Dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "bmv_video", "vble", "dxtory", "Dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "xface", "smvjpeg", "Go2Meeting", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "screenpresso", "Screenpresso", "wrapped_avframe", "rscc", "alias_pix", "ansi", "brender_pix", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "tdsc", "TDSC", "tiff", "vc1image", "webp", "WebP", "wmv3image", "apng", "cfhd", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_thp_le", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "adpcm_vima", "adpcm_psx", "adpcm_aica", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "vorbis", "Vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "WavPack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "voxware", "nellymoser", "musepack8", "speex", "Speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "sipr", "twinvq", "truehd", "TrueHD", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "qdmc", "celt", "g723_1", "dss_sp", "g729", "bmv_audio", "ralf", "ilbc", "wavesynth", "sonic", "Sonic", "sonicls", "opus", "comfortnoise", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "dvd_subtitle", "dvb_subtitle", "xsub", "XSUB", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "core_only", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "use_buggy_lpc", "L263", "S263", "GEOV", "GEOX", "stereo_mode", "Q264", "is_avc", "nal_length_size", "enable_er", "private_spspps_buf", "h264_mp4toannexb", "Gray", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "mono", "TEMP", "SPAT", "apply_defdispwin", "SEI_SUFFIX", "SEI_PREFIX", "FD_NUT", "EOB_NUT", "EOS_NUT", "CRA_NUT", "IDR_N_LP", "IDR_W_RADL", "BLA_N_LP", "BLA_W_RADL", "BLA_W_LP", "RASL_R", "RASL_N", "RADL_R", "RADL_N", "STSA_R", "STSA_N", "TSA_R", "TSA_N", "TRAIL_R", "TRAIL_N", "desc", "SEPB1", "SEPB2", "ZYGO", "TMPGEXS", "VCR2", "BW10", "SLIF", "mpegvideo", "ffmpeg", "XVIX", "UMP4", "XVID", "RMP4", "ZMP4", "SIPP", "DIVX", "Reserved", "reserved", "WV1F", "QMP4", "MP4S", "quarter_sample", "divx_packed", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "msmpeg4", "NULL", "AVSubtitleRect", "flags", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "sample_rate", "AVCodecContext", "unaligned", "qpel", "loop", "qscale", "input_preserved", "pass1", "pass2", "gray", "emu_edge", "psnr", "truncated", "ildct", "low_delay", "global_header", "bitexact", "ilme", "cgop", "output_corrupt", "fast", "flags2", "noout", "ignorecrop", "local_header", "showall", "export_mvs", "skip_manual", "me_method", "zero", "full", "epzs", "tesa", "phods", "time_base", "cutoff", "frame_size", "frame_number", "delay", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "rc_strategy", "b_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "strict", "very", "normal", "unofficial", "experimental", "b_qoffset", "err_detect", "crccheck", "bitstream", "buffer", "explode", "ignore_err", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "minrate", "bufsize", "rc_buf_aggressivity", "i_qfactor", "i_qoffset", "rc_init_cplx", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "deblock", "favor_inter", "bits_per_coded_sample", "pred", "plane", "median", "aspect", "debug", "pict", "mb_type", "dct_coeff", "green_metadata", "skip", "startcode", "mmco", "bugs", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "nomc", "vismv", "debug_mv", "cmp_func", "subcmp", "mbcmp", "ildctcmp", "dia_size", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "chroma", "pre_dia_size", "subq", "dtg_active_format", "me_range", "ibias", "pbias", "global_quality", "deflate", "context", "slice_flags", "xvmc_acceleration", "stream_codec_tag", "sc_threshold", "lmin", "lmax", "rc_init_occupancy", "threads", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "lowres", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "default", "noref", "bidir", "nokey", "nointra", "bidir_refine", "brd_scale", "keyint_min", "chromaoffset", "trellis", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_primaries_type", "bt709", "unspecified", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "film", "Film", "bt2020", "smpte428_1", "color_trc", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "smpte2084", "colorspace", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "mpeg", "jpeg", "chroma_sample_location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "bottomleft", "Bottom", "log_level_offset", "slices", "thread_type", "slice", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "field_order", "progressive", "dump_separator", "codec_whitelist", "pixel_format", "video_size", "Simple", "Main", "Complex", "Advanced", "High", "Rext", "Baseline", "Extended", "real_144", "real_288", "WwvfeUDDDDDD3DCDDEVfwP", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "I420", "IYUV", "yv12", "YUYVw", "BGR0C", "J444Z", "I40AY", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "I420", "yuv2", "BottomUp", "rawdec", "audioresample", "ReSampleContext", "unknown_codec", "ff_avcodec_locked", "encoder", "decoder", "book_idx", "mode_number", "Upscaling", "APETAGEX", "album_artist", "album", "Author", "artist", "Description", "comment", "composer", "encoded_by", "genre", "language", "filename", "disc", "publisher", "service_provider", "service_name", "asf_read_packet", "asf_st", "AspectRatioX", "AspectRatioY", "author", "copyright", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "encryption", "no_resync_search", "export_xmp", "GAB2", "MMES", "creation_time", "maker", "strh", "PotEncoder", "ISFT", "Axan", "strn", "use_odml", "subfile", "protocol_whitelist", "URLContext", "AVIOContext", "palette", "checkerboard", "effects", "dialogue", "comentary", "emergency", "karaoke", "Output", "Input", "from", "truncate", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "fLaC", "true", "false", "keyframes", "times", "filepositions", "duration", "videodatarate", "audiodatarate", "datastream", "videocodecid", "audiocodecid", "audiosamplerate", "audiosamplesize", "stereo", "metadatacreator", "MEGA", "filesize", "framerate", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "Encoder", "live_flv", "live_flvdec", "flvdec", "flv_metadata", "datasize", "lasttimestamp", "totalframes", "hasAudio", "hasVideo", "hasCuePoints", "hasMetadata", "hasKeyframes", "Text", "Audio", "Data", "flvflags", "aac_seq_header_detect", "segment", "ssegment", "image2", "mime_type", "date", "Blues", "Country", "Dance", "Disco", "Funk", "Grunge", "Jazz", "Metal", "Oldies", "Other", "Reggae", "Techno", "Industrial", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Gangsta", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Folk", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Ballad", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "TCON", "TXXX", "PRIV", "APIC", "GEOB", "encrypted", "version", "compression", "USLT", "CHAP", "TYER", "TDAT", "TIME", "Conductor", "Composer", "Illustration", "compilation", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "TPUB", "TRCK", "TSSE", "lyrics", "ljpg", "im24", "im32", "sunras", "yuv10", "c608", "sac3", "alac", "twos", "lpcm", "ssmv", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "binary", "A_AAC", "A_AC3", "A_ALAC", "A_DTS", "A_EAC3", "A_FLAC", "A_MLP", "A_OPUS", "A_TRUEHD", "A_TTA1", "A_VORBIS", "A_WAVPACK4", "S_ASS", "S_SSA", "S_VOBSUB", "S_DVBSUB", "V_DIRAC", "V_MJPEG", "V_MPEG1", "V_MPEG2", "V_PRORES", "V_SNOW", "V_THEORA", "V_UNCOMPRESSED", "V_VP8", "V_VP9", "background", "anaglyph_cyan_red", "anaglyph_green_magenta", "LEAD_PERFORMER", "PART_NUMBER", "enc_key_id", "A_QUICKTIME", "V_QUICKTIME", "MAIN", "TTA1", "alpha_mode", "webm", "mimetype", "webm_dash_manifest_duration", "webm_dash_manifest_initialization_range", "webm_dash_manifest_file_name", "webm_dash_manifest_track_number", "webm_dash_manifest_cues_start", "webm_dash_manifest_cues_end", "webm_dash_manifest_bandwidth", "webm_dash_manifest_cluster_keyframe", "webm_dash_manifest_cue_timestamps", "webm_dash_manifest", "live", "encoding_tool", "Lavf", "DURATION", "Matroska", "reserve_index_space", "cluster_size_limit", "cluster_time_limit", "dash", "dash_track_number", "allow_raw_vfw", "root", "major_brand", "minor_version", "compatible_brands", "handler_name", "rotate", "nclx", "nclc", "iTunSMPB", "cdec", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "warning", "location", "timecode", "tmcd", "reel_name", "avc1", "stsd", "hvc1", "hev1", "mp4s", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "ignore_chapters", "use_mfra_for", "export_all", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "text", "mp4a", "tx3g", "avc1k", "VP6F", "disk", "trkn", "CodecPrivateData", "stss", "stps", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "dhlr", "handler", "yrrc", "albm", "systemBitrate", "trackID", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "XDCAM", "DpxE", "lpcm", "perf", "titl", "auth", "gnre", "dscp", "cprt", "aART", "ldes", "tvsh", "tven", "tvnn", "tmpo", "wide", "free", "ipod", "ismv", "movflags", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "default_base_moof", "frag_discont", "delay_moov", "global_sidx", "write_colr", "write_gama", "rtpflags", "latm", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "frag_duration", "min_frag_duration", "frag_size", "ism_lookahead", "video_track_timescale", "brand", "use_editlist", "fragment_index", "mov_gamma", "frag_interleave", "encryption_scheme", "encryption_key", "encryption_kid", "rtpo", "usetoc", "IMKH", "Sofdec", "ofdec", "drac", "HEVC", "HDMV", "HDPR", "mpegtsraw", "mpegts", "resync_size", "compute_pcr", "ts_packetsize", "fix_teletext_pts", "scan_all_pmts", "skip_changes", "skip_clear", "NOPTS", "OggS", "BBCD", "OpusTags", "OpusHead", "Opus", "fishead", "fisbone", "METADATA_BLOCK_PICTURE", "NAME", "OVP80", "AVFormatContext", "avioflags", "direct", "probesize", "formatprobesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "format_whitelist", "mulaw", "alaw", "u16le", "u16be", "u24le", "u24be", "u32le", "u32be", "s16le", "s16be", "s24le", "s24be", "s32le", "s32be", "f32le", "f32be", "f64le", "f64be", "yuv420p", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "LIST", "RVTRE", "RV30F", "dnet", "StreamCount", "OpaqueData", "Duration", "RealMedia", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "pipe", "cache", "mp4v", "copy", "dvbsub", "loas", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "swscaler", "SWScaler", "sws_flags", "fast_bilinear", "bilinear", "bicubic", "area", "bicublin", "gauss", "Gaussian", "sinc", "lanczos", "Lanczos", "print_info", "accurate_rnd", "full_chroma_int", "full_chroma_inp", "error_diffusion", "srcw", "srch", "dstw", "dsth", "src_format", "dst_format", "src_range", "dst_range", "param0", "param1", "src_v_chr_pos", "src_h_chr_pos", "dst_v_chr_pos", "dst_h_chr_pos", "sws_dither", "bayer", "a_dither", "x_dither", "gamma", "alphablend", "uniform_color", "SWResampler", "in_channel_count", "out_channel_count", "used_channel_count", "in_sample_rate", "out_sample_rate", "in_sample_fmt", "out_sample_fmt", "internal_sample_fmt", "in_channel_layout", "out_channel_layout", "clev", "center_mix_level", "slev", "surround_mix_level", "lfe_mix_level", "rmvol", "rematrix_volume", "rematrix_maxval", "swr_flags", "dither_scale", "dither_method", "rectangular", "triangular", "triangular_hp", "lipshitz", "shibata", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "filter_size", "phase_shift", "linear_interp", "resample_cutoff", "resampler", "soxr", "precision", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "dolby", "dplii", "filter_type", "cubic", "blackman_nuttall", "kaiser", "kaiser_beta", "output_sample_bits", "infinity", "quad", "hexagonal", "octagonal", "hexadecagonal", "downmix", "LFE2", "armv8", "neon", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INPUT_CHANGED", "INVALIDDATA", "MUXER_NOT_FOUND", "OPTION_NOT_FOUND", "OUTPUT_CHANGED", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "INPUT_AND_OUTPUT_CHANGED", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "sinh", "cosh", "tanh", "asin", "acos", "time", "squish", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "clip", "atan", "QP2LAMBDA", "Eval", "FILE", "AVPanScan", "AVMatrixEncoding", "AVReplayGain", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA384", "SHA512", "CRC32", "adler32", "IMGUTILS", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "quiet", "verbose", "fatal", "panic", "INT64_MAX", "INT64_MIN", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "DBL_MAX", "DBL_MIN", "pixel", "ntsc", "qntsc", "qpal", "sntsc", "spal", "bikeshed", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "sqcif", "qcif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "rgba", "rgb32", "bgr32", "yuvj", "bayer_", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "bt1361e", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "rgb0", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "s16p", "s32p", "fltp", "dblp", "IPBSipb", "attachment", "fffffff", "x00000x", "p000x", "p00000x", "p000x", "p000x", "p000x"], "debugstrings": ["H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "H.263+ / H.263-1998 / H.263 version 2", "On2 VP6 (Flash version)", "On2 VP6 (Flash version, with alpha channel)", "subpacket[%i].cookversion=%x\n", "Cook version %d", "XLL stream version %d", "GPSVersionID", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "Unknown version %X", "Audio sample format conversion failed\n", "RV1/2 version", "FFmpeg version 3.0.3", "libavcodec license: LGPL version 2.1 or later", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Unsupported file version - %d.%02d\n", "Unsupported tag version. (>=%d)\n", "configurationVersion:                %u\n", "version", "EBML header using unsupported features\n(EBML version %lu, doctype %s, doc version %lu)\n", "minor_version", "sidx version %u", "premiere_version", "quicktime_version", "Version %d", "version =%d, isom =%d\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "sid=0x%x sec_num=%d/%d version=%d\n", "ogg page, unsupported version\n", "Unknown skeleton version %d.%d\n", "Unknown OggVP8 version %d.%d\n", "Unsupported version\n", "Unsupported Name value property version\n", "FFmpeg version 3.0.3", "libavformat license: LGPL version 2.1 or later", "unsupported conversion to planar RGB %s -> %s\n", "unsupported bayer conversion\n", "libswscale license: LGPL version 2.1 or later", "No accelerated colorspace conversion found from %s to %s.\n", "FFmpeg version 3.0.3", "libswresample license: LGPL version 2.1 or later", "FFmpeg version 3.0.3", "libavutil license: LGPL version 2.1 or later", "GCC: (GNU) 4.9.x 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["libm.so", "libdl.so", "libstdc++.so", "libz.so", "libc.so"], "elfname": "libav.so"}