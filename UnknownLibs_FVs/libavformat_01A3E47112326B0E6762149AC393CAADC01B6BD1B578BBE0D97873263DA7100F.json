{"globalvars": ["av_format_ffversion"], "importedglobals": ["avpriv_ac3_channel_layout_tab", "avpriv_mpa_bitrate_tab", "avpriv_mpa_freq_tab", "avpriv_pix_fmt_bps_mov"], "importedfunctions": ["send", "llrint", "av_strndup", "av_dynarray_add_nofree", "av_get_token", "avcodec_open2", "avcodec_parameters_copy", "avpriv_get_raw_pix_fmt_tags", "av_get_audio_frame_duration", "av_frame_alloc", "avpriv_strtod", "avpriv_get_gamma_from_trc", "av_aes_ctr_set_random_iv", "av_find_info_tag", "av_opt_free", "avcodec_receive_frame", "av_codec_set_pkt_timebase", "av_packet_pack_dictionary", "av_strlcpy", "lseek64", "inflate", "strtoull", "hypot", "av_rescale_rnd", "avpriv_mpegaudio_decode_header", "avcodec_parameters_free", "av_get_audio_frame_duration2", "av_get_pix_fmt_name", "av_crc", "av_codec_get_lowres", "strstr", "av_copy_packet_side_data", "raise", "av_stereo3d_type_name", "av_fourcc_make_string", "snprintf", "inflateEnd", "av_aes_init", "av_grow_packet", "av_buffer_create", "av_packet_copy_props", "av_codec_is_decoder", "av_codec_set_lowres", "av_append_path_component", "setsockopt", "av_free", "av_packet_ref", "av_aes_ctr_alloc", "av_parser_close", "av_bsf_init", "av_mallocz", "av_spherical_alloc", "av_dict_set_int", "strrchr", "av_malloc", "avcodec_parameters_to_context", "memmove", "av_md5_final", "av_hmac_final", "avcodec_find_decoder_by_name", "av_stereo3d_alloc", "av_shrink_packet", "av_strdup", "av_sha_update", "av_bsf_get_by_name", "av_dict_get", "strcpy", "av_md5_init", "av_get_channel_layout_nb_channels", "strcspn", "av_timecode_init_from_string", "av_default_item_name", "avpriv_dict_set_timestamp", "strspn", "avpriv_toupper4", "av_bsf_alloc", "av_aes_ctr_crypt", "socket", "av_timecode_check_frame_rate", "av_opt_set_defaults", "av_frame_get_pkt_duration", "av_log", "av_compare_ts", "write", "getaddrinfo", "av_init_packet", "av_packet_free", "avcodec_string", "av_packet_unref", "av_realloc_f", "av_realloc_array", "av_stristr", "av_reduce", "av_timecode_make_string", "av_get_bits_per_sample", "av_aes_alloc", "av_bsf_receive_packet", "av_md5_alloc", "av_hmac_free", "av_opt_get_dict_val", "av_spherical_tile_bounds", "av_gettime_relative", "strtol", "av_gettime", "lrintf", "avcodec_parameters_alloc", "av_hmac_alloc", "av_hmac_init", "av_memdup", "av_bprint_append_data", "avpriv_h264_has_num_reorder_frames", "av_opt_set_dict_val", "av_aes_ctr_get_iv", "av_get_channel_name", "av_strlcat", "av_base64_encode", "avpriv_ac3_parse_header", "closedir", "av_opt_copy", "avpriv_exif_decode_ifd", "av_rescale_q", "strchr", "av_strerror", "rename", "readdir", "av_dict_free", "av_get_picture_type_char", "av_packet_get_side_data", "av_opt_set_bin", "avcodec_decode_subtitle2", "av_spherical_projection_name", "av_lfg_init", "av_dynarray_add", "av_bprint_finalize", "fputs", "avcodec_free_context", "av_gcd", "av_fast_realloc", "av_bitstream_filter_close", "strlen", "avpriv_open", "av_reallocp", "av_aes_ctr_init", "recv", "bind", "av_strlcatf", "memcmp", "av_display_rotation_get", "shutdown", "rmdir", "av_freep", "opendir", "av_get_random_seed", "avpriv_request_sample", "av_buffer_unref", "atoi", "av_reallocp_array", "listen", "av_opt_set_dict", "av_rescale_q_rnd", "avcodec_send_packet", "freeaddrinfo", "avpriv_mpeg4audio_get_config", "av_get_pix_fmt", "read", "av_opt_ptr", "av_md5_update", "av_mul_q", "zlibCompileFlags", "avcodec_get_name", "av_rescale", "av_aes_ctr_free", "getsockopt", "av_opt_next", "av_aes_ctr_increment_iv", "av_crc_get_table", "av_color_space_name", "av_timecode_init", "unlink", "av_small_strptime", "avcodec_alloc_context3", "av_strcasecmp", "av_add_stable", "av_buffer_default_free", "av_dict_count", "av_sha_alloc", "uncompress", "av_pix_fmt_desc_get", "av_packet_new_side_data", "av_dict_parse_string", "accept", "av_compare_mod", "fputc", "strcmp", "fstat", "avpriv_find_start_code", "gmtime_r", "lrint", "avpriv_set_systematic_pal2", "avpriv_find_pix_fmt", "av_usleep", "fprintf", "av_frame_free", "av_buffer_alloc", "memset", "avcodec_parameters_from_context", "av_bsf_free", "lstat", "fcntl", "av_new_packet", "__errno", "av_asprintf", "av_bitstream_filter_filter", "av_opt_get_int", "avpriv_codec_get_cap_skip_frame_fill_param", "av_match_list", "av_opt_get", "getenv", "av_aes_crypt", "av_opt_set_from_string", "av_sha_final", "inflateInit_", "sscanf", "abort", "av_parse_time", "av_packet_merge_side_data", "avcodec_descriptor_get", "av_codec_next", "av_sha_init", "av_strtok", "av_div_q", "av_dict_set", "inflateInit2_", "av_timegm", "av_d2q", "connect", "poll", "av_bitstream_filter_init", "av_opt_flag_is_set", "gai_strerror", "avcodec_pix_fmt_to_codec_tag", "av_strncasecmp", "vsnprintf", "av_hmac_update", "av_fast_malloc", "inet_aton", "close", "av_aes_ctr_set_iv", "av_opt_set_dict2", "av_stristart", "av_color_transfer_name", "pthread_once", "avcodec_is_open", "av_opt_set", "av_packet_alloc", "avcodec_register_all", "av_pix_fmt_get_chroma_sub_sample", "av_color_primaries_name", "access", "avcodec_find_decoder", "av_packet_split_side_data", "av_parser_init", "avpriv_report_missing_feature", "av_match_name", "av_realloc", "memcpy", "av_strstart", "av_dict_copy", "av_bsf_send_packet", "strncmp", "av_parser_parse2", "avcodec_close", "stat", "av_copy_packet"], "exportedfunctions": ["av_guess_codec", "avformat_get_riff_video_tags", "av_stream_new_side_data", "av_register_all", "av_get_packet", "avio_rb64", "av_get_frame_filename", "avio_close", "avformat_query_codec", "ffurl_close", "avio_write_marker", "avio_get_str16be", "av_demuxer_open", "av_add_index_entry", "av_format_set_video_codec", "avio_wl64", "av_stream_get_side_data", "av_guess_format", "avio_put_str16be", "avio_rl24", "av_guess_frame_rate", "avformat_flush", "av_codec_get_tag", "avpriv_io_move", "avformat_init_output", "av_interleaved_write_uncoded_frame", "avformat_network_init", "ffurl_write", "av_write_uncoded_frame", "av_probe_input_format2", "av_fmt_ctx_get_duration_estimation_method", "av_format_get_audio_codec", "av_format_get_opaque", "av_read_pause", "url_feof", "avio_enum_protocols", "avio_read", "av_format_set_subtitle_codec", "avformat_seek_file", "avformat_write_header", "av_format_get_probe_score", "av_stream_set_recommended_encoder_configuration", "av_pkt_dump2", "av_codec_get_tag2", "av_match_ext", "ff_inet_aton", "av_codec_get_id", "av_get_frame_filename2", "avio_get_str", "av_dump_format", "av_register_output_format", "av_format_get_data_codec", "av_read_play", "av_stream_get_codec_timebase", "av_format_set_open_cb", "avio_open_dyn_buf", "av_append_packet", "av_sdp_create", "avio_pause", "avio_r8", "ffio_set_buf_size", "avio_close_dir", "av_program_add_stream_index", "avformat_open_input", "avio_find_protocol_name", "av_stream_get_r_frame_rate", "av_format_get_video_codec", "avformat_get_class", "avio_open_dir", "av_format_get_subtitle_codec", "av_pkt_dump_log2", "av_write_trailer", "av_format_set_control_message_cb", "avio_wb64", "avio_rl32", "avio_rb24", "avio_open", "av_register_input_format", "av_write_uncoded_frame_query", "avio_put_str16le", "avio_seek", "av_oformat_next", "av_format_get_open_cb", "avio_close_dyn_buf", "avformat_configuration", "avio_seek_time", "av_hex_dump_log", "av_format_set_opaque", "avformat_transfer_internal_stream_timing_info", "av_url_split", "avio_rl64", "avformat_match_stream_specifier", "avio_rl16", "avformat_free_context", "av_iformat_next", "avio_wb24", "avio_rb32", "avformat_get_mov_video_tags", "avio_read_dir", "av_stream_get_parser", "avio_free_directory_entry", "av_hex_dump", "avformat_close_input", "av_format_set_audio_codec", "avio_wl24", "av_stream_set_r_frame_rate", "av_find_best_stream", "avio_wl16", "avio_wl32", "av_probe_input_buffer", "av_find_program_from_stream", "avio_open2", "av_format_set_data_codec", "avpriv_io_delete", "av_interleaved_write_frame", "av_format_set_metadata_header_padding", "avio_put_str", "av_get_output_timestamp", "avio_printf", "avio_accept", "av_seek_frame", "avio_closep", "av_probe_input_buffer2", "avio_feof", "avio_w8", "avio_handshake", "av_new_program", "avformat_network_deinit", "av_probe_input_format3", "avio_rb16", "avio_skip", "avio_wb16", "av_index_search_timestamp", "av_format_inject_global_side_data", "avformat_alloc_context", "avio_write", "av_stream_add_side_data", "av_find_default_stream_index", "avformat_new_stream", "avio_flush", "avio_get_str16le", "av_find_input_format", "av_write_frame", "avformat_license", "av_guess_sample_aspect_ratio", "avio_size", "ffurl_open", "avpriv_set_pts_info", "av_stream_get_recommended_encoder_configuration", "av_format_get_metadata_header_padding", "av_probe_input_format", "avio_check", "ff_socket_nonblock", "av_format_get_control_message_cb", "avio_read_to_bprint", "avformat_find_stream_info", "av_filename_number_test", "av_apply_bitstream_filters", "avformat_version", "av_stream_get_end_pts", "avpriv_new_chapter", "avio_alloc_context", "av_read_frame", "avformat_queue_attached_pictures", "avformat_get_riff_audio_tags", "ffio_open_dyn_packet_buf", "avio_get_dyn_buf", "avio_wb32", "avformat_get_mov_audio_tags", "avformat_alloc_output_context2"], "allstrings": ["audio/aac,audio/aacp,audio/x-aac", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "GAB2", "title", "longs_per_entry:%d index_type:%d entries_in_use:%d chunk_id:%X base:%16llX frame_num:%d\n", "ODML index invalid\n", "pos:%lld, len:%X\n", "Too deeply nested ODML indexes\n", "Failed to restore position after reading index\n", "Skipping foreign stream %d packet\n", "Invalid stream + prefix combination, assuming audio.\n", "movi_end=0x%llx\n", "%d: tag=0x%x flags=0x%x pos=0x%llx len=%d/", "%d cum_len=%lld\n", "MMES", "Assertion %s failed at %s:%d\n", "stream_index >= 0", "libavformat/avidec.c", "Failed to find timestamp %lld in index %lld .. %lld\n", "XX %lld %d %lld\n", "Seek failed\n", "creation_time", "maker", "model", "This file has been generated by a totally broken muxer.\n", "use odml:%d\n", "pos:%llX %s: tag=%s size=0x%x\n", "list", "movi end=%llx\n", "%*3s%*[ ]%3s%*[ ]%2d%*[ ]%8s%*[ ]%4d", "%.4d-%.2d-%.2d %s", "strh", "stream_index < s->nb_streams", "scale/rate is %u/%u which is invalid. (This file has been generated by broken software.)\n", "crazy start time, iam scared, giving up\n", "%u %u %d\n", "unknown stream type %X\n", "Invalid sample_size %d at stream %d\n", "Invalid sample_size %d at stream %d setting it to 0\n", "File is truncated adjusting duration\n", "New extradata in strf chunk, freeing previous one.\n", "BottomUp", "video", "mov tag found in avi (fourcc %s)\n", "sample size (%d) != block align (%d)\n", "overriding invalid dshow_block_align of %d\n", "overriding sample_size\n", "New extradata in strd chunk, freeing previous one.\n", "buf_size >= 0", "./libavcodec/bytestream.h", "RIFF stream data tag type CASI (%u)", "RIFF stream data tag type Zora (%u)", "could not decoding EXIF data in stream header.\n", "vprp %d/%d %d/%d\n", "Something went wrong during header parsing, tag %s has size %u, I will ignore it and try to continue anyway.\n", "PotEncoder", "Non-interleaved AVI without index, switching to interleaved\n", "non-interleaved AVI\n", "ISFT", "Axan", "%lld %d/%d %lld\n", "best_ast->remaining <= best_ast->packet_size", "Failed to allocate data for palette\n", "Switching to NI mode, due to poor interleaving\n", "strn", "use_odml", "use odml index", "NULL", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "file", "libavformat/avio.c", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "start", "Key '%s' not found.\n", "Error parsing options string %s\n", "https:", "https protocol not found, recompile FFmpeg with openssl, gnutls or securetransport enabled.\n", "protocol_whitelist", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "protocol_blacklist", "!(e=av_dict_get(*options, \"protocol_blacklist\", ((void *)0), 0)) || (uc->protocol_blacklist && !strcmp(uc->protocol_blacklist, e->value))", "Protocol '%s' not on whitelist '%s'!\n", "Protocol '%s' on blacklist '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || !strcmp(whitelist, e->value)", "!blacklist || !(e=av_dict_get(*options, \"protocol_blacklist\", ((void *)0), 0)) || !strcmp(blacklist, e->value)", "URLContext", "List of protocols that are allowed to be used", "List of protocols that are not allowed to be used", "rw_timeout", "Timeout for IO operations (in microseconds)", "Invalid UTF8 sequence in avio_put_str16%s\n", "!s->write_flag", "libavformat/aviobuf.c", "Failed to decrease buffer size\n", "len >= s->orig_buffer_size", "Statistics: %d seeks, %d writeouts\n", "Statistics: %lld bytes read, %d seeks\n", "AVIOContext", "Match slave stream #%d with stream #%d id 0x%x\n", "Auto-inserting h264_mp4toannexb bitstream filter\n", "h264_mp4toannexb", "h264_mp4toannexb bitstream filter required for H.264 streams\n", "Impossible to open '%s'\n", "lavf.concatdec.start_time", "lavf.concatdec.duration", "NOPTS", "%lld", "%.6g", "ffconcat version 1.0", " \t\r\n", "Line %d: filename required\n", "duration", "inpoint", "outpoint", "Line %d: %s without file\n", "Line %d: invalid %s '%s'\n", "file_packet_metadata", "Line %d: packet metadata required\n", "Line %d: failed to parse metadata string\n", "stream", "exact_stream_id", "Line %d: exact_stream_id without stream\n", "ffconcat", "version", "Line %d: invalid version\n", "Line %d: unknown keyword '%s'\n", "Unsafe file name '%s'\n", "pkt2.buf", "libavformat/concatdec.c", "file:%d stream:%d pts:%s pts_time:%s dts:%s dts_time:%s", " -> pts:%s pts_time:%s dts:%s dts_time:%s\n", "concat", "concat demuxer", "safe", "enable safe mode", "auto_convert", "automatically convert bitstream format", "segment_time_metadata", "output file segment start time and duration as packet metadata", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", "%s - ", "unknown", "%sMetadata:\n", "language", "%s  %-16s: ", "\n%s  %-16s: ", "fps, ", "tbr, ", "tbn, ", "dump_separator", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ": %s", ", SAR %d:%d DAR %d:%d", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "    ", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "H.263 macroblock info", "replaygain: ", "invalid data", "track gain", "track peak", "album gain", "album peak", "displaymatrix: rotation of %.2f degrees", "stereo3d: ", " (inverted)", "audio service type: ", "main", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "quality factor: %d, pict_type: %c", "cpb: ", "bitrate max/min/avg: %d/%d/%d buffer size: %d vbv_delay: %lld", "Mastering Display Metadata, has_primaries:%d has_luminance:%d r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f) min_luminance=%f, max_luminance=%f", "spherical: ", "(%f/%f/%f) ", "[%zu, %zu, %zu, %zu] ", "[pad %u] ", "unknown side data type %d (%d bytes)", "Output", "Input", "from", "%s #%d, %s, %s '%s':\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%s%d.%06d", ", bitrate: ", "%lld kb/s", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "name", "  Program %d %s\n", "  No Program\n", "file:", "file,crypto", "truncate", "truncate existing files on write", "blocksize", "set I/O operation maximum block size", "follow", "Follow a file as it is being written", "segment", "ssegment", "image2", "Probing %s score:%d size:%d\n", "Probing %s score:%d increased to %d due to MIME type\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "NETSCAPE2.0", "GIF muxer supports only a single video GIF stream.\n", "video_par->format == AV_PIX_FMT_PAL8", "libavformat/gif.c", "Invalid palette extradata\n", "PAL8 packet is missing palette in extradata\n", "image/gif", "GIF muxer", "loop", "Number of times to loop the output: -1 - no loop, 0 - infinite loop", "final_delay", "Force delay (in centiseconds) after the last frame", "Graphic Control Extension block's size less than 4.\n", "lzw minimum code size must be >= 1\n", "invalid block label\n", "GIF demuxer", "min_delay", "minimum valid delay between frames (in hundredths of second)", "max_gif_delay", "maximum valid delay between frames (in hundredths of seconds)", "default_delay", "default delay between frames (in hundredths of second)", "ignore_loop", "ignore loop setting (netscape extension)", "h264", "h26l,h264,264,avc", "h264 demuxer", "configurationVersion:                %u\n", "general_profile_space:               %u\n", "general_tier_flag:                   %u\n", "general_profile_idc:                 %u\n", "general_profile_compatibility_flags: 0x%08x\n", "general_constraint_indicator_flags:  0x%012llx\n", "general_level_idc:                   %u\n", "min_spatial_segmentation_idc:        %u\n", "parallelismType:                     %u\n", "chromaFormat:                        %u\n", "bitDepthLumaMinus8:                  %u\n", "bitDepthChromaMinus8:                %u\n", "avgFrameRate:                        %u\n", "constantFrameRate:                   %u\n", "numTemporalLayers:                   %u\n", "temporalIdNested:                    %u\n", "lengthSizeMinusOne:                  %u\n", "numOfArrays:                         %u\n", "array_completeness[%u]:               %u\n", "NAL_unit_type[%u]:                    %u\n", "numNalus[%u]:                         %u\n", "nalUnitLength[%u][%u]:                 %u\n", "0\r\n\r\n", "%x\r\n", "text/plain", "Internal server error", "Not Found", "application/octet-stream", "Bad Request", "Forbidden", "HTTP/1.1 %03d %s\r\nContent-Type: %s\r\nContent-Length: %zu\r\n%s\r\n%03d %s\r\n", "HTTP/1.1 %03d %s\r\nContent-Type: %s\r\nTransfer-Encoding: chunked\r\n%s\r\n", "HTTP reply header: \n%s----\n", " \n\t\r", "%d%b%Y%H%M%S", "Chunked encoding data size: %llu'\n", "Invalid chunk size %llu\n", "Stream ends prematurely at %llu, should be %llu\n", "s->chunksize >= len", "libavformat/http.c", "expires", "sc->listen", "POST", "header='%s'\n", "Received method: %s\n", "Received and expected HTTP method do not match. (%s expected, %s received)\n", "Autodetected %s HTTP method\n", "Received and autodetected HTTP method did not match (%s autodetected %s received)\n", "Requested resource: %s\n", "HTTP/", "Malformed HTTP version string.\n", "HTTP version string: %s\n", "http_code=%d\n", "HTTP error %d %s\n", "Location", "Content-Length", "Content-Range", "bytes ", "Accept-Ranges", "bytes", "Transfer-Encoding", "chunked", "WWW-Authenticate", "Authentication-Info", "Proxy-Authenticate", "Connection", "close", "Server", "AkamaiGHost", "MediaGateway", "Content-Type", "Set-Cookie", "Unable to parse '%s'\n", "Icy-MetaInt", "Icy-", "%s: %s\n", "Content-Encoding", "gzip", "1.2.3", "deflate", "Error during zlib initialisation: %s\n", "Your zlib was compiled without gzip support.\n", "identity", "Unknown content coding: %s\n", "%s%s\n", "Transfer-Encoding: chunked\r\n", "Proxy-", "http_proxy", "no_proxy", "http://", "https", "Lavf/57.71.100", "the user-agent option is deprecated, please use user_agent option\n", "\r\nUser-Agent: ", "User-Agent: %s\r\n", "\r\nAccept: ", "Accept: */*\r\n", "\r\nRange: ", "Range: bytes=%llu-", "\r\nExpect: ", "Expect: 100-continue\r\n", "\r\nConnection: ", "Connection: keep-alive\r\n", "Connection: close\r\n", "\r\nHost: ", "Host: %s\r\n", "\r\nContent-Length: ", "Content-Length: %d\r\n", "\r\nContent-Type: ", "Content-Type: %s\r\n", "\r\nCookie: ", "domain", "path", "%s=%s", "%s; %s=%s", "Cookie: %s\r\n", "\r\nIcy-MetaData: ", "Icy-MetaData: %d\r\n", "%s %s HTTP/1.1\r\n%s%s%s%s%s\r\n", "request: %s\n", "overlong headers\n", "Lower protocol\n", "Read headers\n", "Reply code: %d\n", "listen", "inflate return value: %d, %s\n", "Will reconnect at %llu error=%s.\n", "Failed to reconnect at %llu.\n", "icy_metadata_packet", "No trailing CRLF found in HTTP header.\n", "http", "http,https,tls,rtp,tcp,udp,crypto,httpproxy", "seekable", "control seekability of connection", "chunked_post", "use chunked transfer-encoding for posts", "set HTTP proxy to tunnel through", "headers", "set custom HTTP headers, can override built in default headers", "content_type", "set a specific content type for the POST messages", "user_agent", "override User-Agent header", "user-agent", "multiple_requests", "use persistent connections", "post_data", "set custom HTTP post data", "export the MIME type", "cookies", "set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax", "request ICY metadata", "icy_metadata_headers", "return ICY metadata headers", "return current ICY metadata packet", "metadata", "metadata read from the bitstream", "auth_type", "HTTP authentication type", "none", "No auth method set, autodetect", "basic", "HTTP basic authentication", "send_expect_100", "Force sending an Expect: 100-continue header for POST", "location", "The actual location of the data received", "offset", "initial byte offset", "end_offset", "try to limit the request to bytes preceding this offset", "method", "Override the HTTP method or set the expected HTTP method from a client", "reconnect", "auto reconnect after disconnect before EOF", "reconnect_at_eof", "auto reconnect at EOF", "reconnect_streamed", "auto reconnect streamed / non seekable streams", "reconnect_delay_max", "max reconnect delay in seconds after which to give up", "listen on HTTP", "resource", "The resource requested by a client", "reply_code", "The http status code to return to a client", "nextnonce=", "realm=", "nonce=", "opaque=", "algorithm=", "qop=", "stale=", "Basic ", "Digest ", "auth", "true", "Authorization: Basic ", "%08x", "MD5-sess", "auth-int", "Authorization: Digest ", "username=\"%s\"", ", realm=\"%s\"", ", nonce=\"%s\"", ", uri=\"%s\"", ", response=\"%s\"", ", algorithm=\"%s\"", ", opaque=\"%s\"", ", qop=\"%s\"", ", cnonce=\"%s\"", ", nc=%s", "artist", "album", "date", "comment", "track", "genre", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Jazz", "Metal", "New Age", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Gangsta", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Ballad", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "PRIV", "Failed to alloc %zu bytes\n", "Failed to alloc %d bytes\n", "Error reading GEOB frame, data truncated.\n", "GEOB", "Error reading frame %s, skipped\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "APIC", "TCON", "(%d)", "TXXX", "No AVFormatContext, skipped ID3 chapter data\n", "COMM", "encrypted", "encrypted and compressed", "extended header too long.", "invalid extended header length", "compression", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Skipping %s ID3v2 frame %s.\n", "USLT", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to alloc %ld bytes\n", "Failed to read compressed tag\n", "Failed to uncompress tag: %d\n", "lyrics-%s%s%s", "Error reading comment frame, skipped\n", "invalid frame id, assuming padding\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "Error reading lyrics, skipped\n", "ID3v2.%d tag skipped, cannot handle %s\n", "CHAP", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "compilation", "encoded_by", "album_artist", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "composer", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "encoder", "lyrics", "%.2s%.2s", "ch%d", "No mimetype is known for stream %d, cannot write an attached picture.\n", "jpeg", "ljpg", "pgmyuv", "mpg1-img", "mpg2-img", "mpg4-img", "tiff", "pict", "im24", "im32", "sunras", "yuv10", "webp", "xface", "SDPX", "XPDS", "No such pixel format: %s.\n", "POSIX.1-2008 not supported, nanosecond file timestamps unavailable\n", "Could find no file with path '%s' and index in the range %d-%d\n", "Pattern type 'glob' was selected but globbing is not supported by this libavformat build\n", "Unknown value '%d' for pattern_type option\n", "Could not open file : %s\n", "xpm_pipe", "xpm demuxer", "webp_pipe", "webp demuxer", "tiff_pipe", "tiff demuxer", "sunrast_pipe", "sunrast demuxer", "sgi_pipe", "sgi demuxer", "qdraw_pipe", "qdraw demuxer", "psd_pipe", "psd demuxer", "ppm_pipe", "ppm demuxer", "png_pipe", "png demuxer", "pictor_pipe", "pictor demuxer", "pgmyuv_pipe", "pgmyuv demuxer", "pgm_pipe", "pgm demuxer", "pcx_pipe", "pcx demuxer", "pbm_pipe", "pbm demuxer", "pam_pipe", "pam demuxer", "jpegls_pipe", "jpegls demuxer", "jpeg_pipe", "jpeg demuxer", "j2k_pipe", "j2k demuxer", "exr_pipe", "exr demuxer", "dpx_pipe", "dpx demuxer", "dds_pipe", "dds demuxer", "bmp_pipe", "bmp demuxer", "image2 demuxer", "framerate", "set the video framerate", "force loop over input file sequence", "pattern_type", "set pattern type", "glob_sequence", "select glob/sequence pattern type", "glob", "select glob pattern type", "sequence", "select sequence pattern type", "disable pattern matching", "pixel_format", "set video pixel format", "start_number", "set first number in the sequence", "start_number_range", "set range for looking at the first sequence number", "video_size", "set video size", "frame_size", "force frame size in bytes", "ts_from_file", "set frame timestamp from file's one", "ts_type", "second precision", "nano second precision", "MPEG-4 description: tag=0x%02x len=%d\n", "esds object type id 0x%02x\n", "Specific MPEG-4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "Unknown MOV field order 0x%04x\n", "enda %d\n", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Duplicated STPS atom\n", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type:'%s' parent:'%s' sz: %lld %lld %lld\n", "overread end of atom '%.4s' by %lld bytes\n", "ignoring multiple glbl\n", "Found duplicated MOOV Atom. Skipped it\n", "root atom offset 0x%llx: partial file\n", "read fragments, offset 0x%llx\n", "root", "%d/%d", "STREAMINFO must be first FLACMetadataBlock\n", "non-STREAMINFO FLACMetadataBlock(s) ignored\n", "duplicate saiz atom\n", "saiz atom auxiliary_info_sizes size %lld invalid\n", "failed to read the auxiliary info sizes", "Duplicated SBGP atom\n", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %lld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %lld\n", "frag flags 0x%x\n", "could not find corresponding trex\n", "could not find corresponding track id %u\n", "track[%u].stts.entries = %u\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "sample_count=%d, sample_duration=%d\n", "keyframe_count = %u\n", "Duplicated STSS atom\n", "track[%u].stsc.entries = %u\n", "Duplicated STSC atom\n", "Duplicated ELST atom\n", "track[%u].edit_count = %i\n", "duration=%lld time=%lld rate=%f\n", "Track %d, edit %d: Invalid edit list media time=%lld\n", "Duplicated STCO atom\n", "ctype=%s\n", "stype=%s\n", "handler_name", "iTunSMPB", "%*X %X %X %X", "cdec", "Unhandled or malformed custom metadata of size %lld\n", "qt  ", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "compatible_brands", "Empty spherical video box\n", "Missing spherical video header\n", "Missing projection box\n", "Missing projection header box\n", "Unsupported cubemap layout %d\n", "Invalid bounding rectangle coordinates %u,%u,%u,%u\n", "Unknown projection type\n", "Empty stereoscopic video box\n", "Unknown st3d mode value %d\n", "duplicate senc atom\n", "senc atom size %lld invalid\n", "failed to read the auxiliary info", "systemBitrate=\"", "<GSpherical:StitchingSoftware>", "<GSpherical:Spherical>", "<GSpherical:Stitched>", "<GSpherical:ProjectionType>", "equirectangular", "<GSpherical:StereoMode>", "left-right", "top-bottom", "<GSpherical:InitialViewHeadingDegrees>", "<GSpherical:InitialViewPitchDegrees>", "<GSpherical:InitialViewRollDegrees>", "Invalid spherical metadata found\n", "unknown compression for cmov atom !\n", "get_wav_header failed\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "stream %d, sample %d, dts %lld\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "rotate", "stream has moof boxes, will look for a mfra\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "found tfra\n", "failed to seek back after looking for mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %llx\n", "[aax] file checksum == ", "%02x", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x%08x size %u\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "The 'keys' atom with the invalid key count: %u\n", "The key# %u in meta has invalid size:%u\n", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "firmware", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "subtitle", "warning", "loci too short\n", "place name too long\n", "loci too short (%u bytes left, need at least %d)\n", "%+08.4f%+09.4f", "%s-%s", "Unknown cover type: 0x%x.\n", "Error parsing cover art.\n", "The index of 'data' is out of range: %d < 1 or >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the number (%d) in string.\n", "Failed to store the number (%u) in string.\n", "Failed to store the float32 number (%f) in string.\n", "HandBrake %d.%d.%d", "truncated extradata\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unexpected size %lld\n", "aclr not decoded - unable to add atom to extradata\n", "size: %dx%d\n", "palette: ", "%06x%s", "creation_time is not representable\n", "Invalid mvhd time scale %d, defaulting to 1\n", "time scale = %i\n", "Multiple mdhd?\n", "Version %d", "Invalid mdhd time scale %d, defaulting to 1\n", "sample_size = %u sample_count = %u\n", "Invalid sample field size %u\n", "Duplicated STSZ atom\n", "sidx version %u", "Invalid sidx timescale 1/%d\n", "sidx reference_type 1", "could not find corresponding track id %d\n", "Invalid sample rate %d\n", "Unsupported DTS audio channel layout", "track[%u].ctts.entries = %u\n", "ignoring CTTS entry with count=%d duration=%d\n", "count=%d, duration=%d\n", "CTTS invalid\n", "mov_update_dts_shift(): dts_shift set to %d\n", "dts shift %d\n", "flags 0x%x entries %u\n", "first sample flags 0x%x\n", "found frag time %lld sc->dts_shift %d ctts.duration %d sc->time_offset %lld flags & MOV_TRUN_SAMPLE_CTS %d\n", "calculated into dts %lld\n", "found frag time %lld, using it for dts\n", "Failed to add index entry\n", "AVIndex stream %d, sample %u, offset %llx, dts %lld, size %u, distance %d, keyframe %d\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%lld\n", "Failed to retrieve first frame\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "timecode", "%02d:%02d:%02d%c%02d", "stream %d, timescale not set\n", "Forcing full parsing for mp3 stream\n", "Overflow during bit rate calculation %lld * 8 * %d\n", "Referenced QT chapter track not found\n", "tmcd", "rtmd", "stream %d, timestamp %lld, sample %d\n", "stream %d, found sample %d\n", "stream %d, offset 0x%llx: partial file\n", "Nonkey frame from stream %d discarded due to AVDISCARD_NONKEY\n", "Cannot append palette to packet\n", "current sample %lld greater than the number of auxiliary info sample sizes %zu\n", "auxiliary info offset %zu greater than auxiliary info size %zu\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "stream %d, missing mandatory atoms, broken header\n", "multiple edit list entries, Use -advanced_editlist to correctly decode otherwise a/v desync might occur\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "Sample size %u is too large\n", "AVIndex stream %d, sample %u, offset %llx, dts %lld, size %u, distance %u, keyframe %d\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "chunk count %u\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %u\n", "AVIndex stream %d, chunk %u, offset %llx, dts %lld, size %u, duration %u\n", "Cannot allocate index ranges buffer\n", "Offset DTS by ctts[%d].duration: %d\n", "st: %d edit list: %lld Missing key frame while searching for timestamp: %lld\n", "st: %d edit list %lld Cannot find an index entry before timestamp: %lld.\nRounding edit list media time to zero.\n", "shifted frame pts, curr_cts: %lld @ %lld, ctts: %d, ctts_count: %lld\n", "end_index >= 0 && end_index <= st->nb_index_entries", "libavformat/mov.c", "skip %d audio samples from curr_cts: %lld\n", "drop a frame at curr_cts: %lld @ %lld\n", "Cannot reallocate frame duration buffer\n", "Cannot add index entry\n", "Support for mvhd.timescale = 0 with editlists", "Processing st: %d, edit list %lld - media time: %lld, duration: %lld\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "Cannot add CTTS entry %lld - {%lld, %d}\n", "invalid size %lld in stsd\n", "multiple fourcc not supported\n", "size=%lld 4CC=%s codec_type=%d\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "audio channels %d\n", "version =%d, isom =%d\n", "reel_name", "stsd", "mp4s", "AV1x", "AVup", "apcn", "apch", "dvpp", "dvcp", "invalid STSD entries %d\n", "Duplicate STSD\n", "mov,mp4,m4a,3gp,3g2,mj2", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "Ignore the edit list atom.", "advanced_editlist", "Modify the AVIndex according to the editlists. Use this option to decode in the order specified by the edits.", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "auto", "export_all", "Export unrecognized metadata entries", "export_xmp", "Export full XMP metadata", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "decryption_key", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "Application provided duration: %lld / timestamp: %lld is out of range for mov/mp4 format\n", "Application provided duration: %lld is invalid\n", "Internal error, put_bits buffer too small\n", "aac_adtstoasc", "vp9_superframe", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "stss", "stps", "a=control:streamid=%d\r\n", "Non-consecutive fragments, writing incorrect sidx\n", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "url ", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "text", "dhlr", "Unknown hldr_type for %s, writing dummy values\n", "handler", "Lucida Grande", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "PSP mode need one video and one audio stream\n", "Frame rate %f outside supported range\n", "s->buf_ptr < s->buf_end", "./libavcodec/put_bits.h", "next_dts >= 0", "libavformat/movenc.c", "next_dts <= 2147483647", "malformed location metadata\n", "earth", "disk", "trkn", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "CodecPrivateData", "ipod", "ismv", "Empty MOOV enabled; disabling automatic bitstream filtering\n", "No meaningful edit list will be written when using empty_moov without delay_moov\n", "Sample interleaving in fragments is mutually exclusive with omit_tfhd_offset and separate_moof\n", "muxer does not support non seekable output\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "cenc-aes-ctr", "Invalid encryption key len %d expected %d\n", "Invalid encryption kid len %d expected %d\n", "unsupported encryption scheme %s\n", "Warning, extension is not .m4a, .m4v nor  .m4b Quicktime/Ipod might not play the file\n", "unsupported height for dv codec\n", "%s rawvideo cannot be written to mov, output file will be unreadable\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "Resolution %dx%d too large for mov/mp4\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "VP9 only supported in MP4.\n", "VP9 in MP4 support is experimental, add '-strict %d' if you want to use it.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n", "track %d: muxing mp3 at %dhz is not standard in MP4\n", "FLAC only supported in MP4.\n", "FLAC in MP4 support is experimental, add '-strict %d' if you want to use it.\n", "yrrc", "albm", "not writing 'chan' tag due to lack of channel information\n", "lpcm", "Lavf", "Lavf57.71.100", "XDCAM", " HD422", " %d%c", "Could not locate DNxHD bit stream in vos_data\n", "Could not locate DNxHD bit stream, vos_data too small\n", "moov atom written before any packets, unable to write correct dvc1 atom. Set the delay_moov flag to fix this.\n", "DpxE", "gamma value %g\n", "writing gama value %d\n", "track->mode == 0x02", "gamma value unknown, unable to write gama atom\n", "Not writing 'gama' atom. Format is not MOV.\n", "color primaries unspecified, assuming bt709\n", "color primaries unspecified, assuming bt470bg\n", "color primaries unspecified, assuming smpte170\n", "color primaries unspecified, unable to assume anything\n", "track->mode == 0x02 || track->mode == 0x01", "Not writing 'colr' atom. Format is not MOV or MP4.\n", "Unsupported stereo_3d flags %x. st3d not written.\n", "Unsupported stereo_3d type %s. st3d not written.\n", "Unsupported projection %d. sv3d not written.\n", "fps %d is too large\n", "reel_name length %llu is too large\n", "track width is too large\n", "track height is too large\n", "EDTS using dts:%lld cts:%d instead of dts:%lld cts:%lld tid:%d\n", "av_rescale_rnd(start_dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "Not writing any edit list even though one would have been required\n", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "Lavc57.89.100", "2006/04/01 11:11:11", "perf", "titl", "author", "gnre", "dscp", "cprt", "aART", "encoding_tool", "desc", "ldes", "tvsh", "tven", "tvnn", "tves", "tvsn", "stik", "hdvd", "pgap", "cpil", "tmpo", "Unable to re-open %s output file for the second pass (faststart)\n", "Estimating the duration of the last packet in a fragment, consider setting the duration field in AVPacket instead.\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "aac bitstream error\n", "Dropping invalid packet from start of the stream\n", "Multiple independent substreams", "Track %d starts with a nonzero dts %lld, while the moov already has been written. Set the delay_moov flag to handle this case.\n", "pts has no value\n", "Starting second pass: moving the moov atom to the beginning of the file\n", "reserved_moov_size is too small, needed %lld additional\n", "Starting second pass: inserting sidx atoms\n", "wide", "free", "audio", "palette:", "%06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x", "size:", "%dx%d", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<head>\n", "<meta name=\"creator\" content=\"%s\" />\n", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%lld\">\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "systemBitrate", "trackID", "systemLanguage", "trackName", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "video/mp4", "mp4 muxer", "mov muxer", "movflags", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "maximum moov size so it can be placed at the begin", "empty_moov", "Make the initial moov atom empty", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "Write separate moof/mdat atoms for each track", "frag_custom", "Flush fragments on caller requests", "isml", "Create a live smooth streaming feed (for pushing to a publishing point)", "faststart", "Run a second pass to put the index (moov atom) at the beginning of the file", "omit_tfhd_offset", "Omit the base data offset in tfhd atoms", "disable_chpl", "Disable Nero chapter atom", "default_base_moof", "Set the default-base-is-moof flag in tfhd atoms", "dash", "Write DASH compatible fragmented MP4", "frag_discont", "Signal that the next fragment is discontinuous from earlier ones", "delay_moov", "Delay writing the initial moov until the first fragment is cut, or until the first fragment flush", "global_sidx", "Write a global sidx index at the start of the file", "write_colr", "Write colr atom (Experimental, may be renamed or changed, do not use from scripts)", "write_gama", "Write deprecated gama atom", "use_metadata_tags", "Use mdta atom for metadata.", "skip_trailer", "Skip writing the mfra/tfra/mfro trailer for fragmented files", "rtpflags", "RTP muxer flags", "latm", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "rfc2190", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "skip_rtcp", "Don't send RTCP sender reports", "h264_mode0", "Use mode 0 for H.264 in RTP", "send_bye", "Send RTCP BYE packets when finishing", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "frag_duration", "Maximum fragment duration", "min_frag_duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "Number of lookahead entries for ISM files", "video_track_timescale", "set timescale of all video tracks", "brand", "Override major brand", "use_editlist", "use edit list", "fragment_index", "Fragment number of the next fragment", "mov_gamma", "gamma value for gama atom", "frag_interleave", "Interleave samples within fragments (max number of consecutive samples, lower is tighter interleaving, but with more overhead)", "encryption_scheme", "Configures the encryption scheme, allowed values are none, cenc-aes-ctr", "encryption_key", "The media encryption key (hex)", "encryption_kid", "The media encryption key identifier (hex)", "use_stream_ids_as_track_ids", "use stream ids as track ids", "write_tmcd", "force or disable writing tmcd", "CENC-AVC: remaining size %d smaller than nal length+type %d\n", "CENC-AVC: nal size %d remaining %d\n", "Unable to initialize hinting of stream %d\n", "rtpo", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "Could not seek to %lld.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "Cannot determine file size, skipping TOC table.\n", "pad %d %d\n", "Skipping %d bytes of junk at %lld.\n", "Invalid frame size (%d): Could not seek to %lld.\n", "Failed to read frame size: Could not seek to %lld.\n", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "Unsupported sample rate, not writing Xing header.\n", "Unsupported number of channels, not writing Xing header.\n", "best_bitrate_idx >= 0", "libavformat/mp3enc.c", "ret >= 0", "Lavc libmp3lame", "Lavf lame", "Invalid ID3v2 version requested: %d. Only 3, 4 or 0 (disabled) are allowed.\n", "Invalid audio stream. Exactly one MP3 audio stream is required.\n", "Only audio streams and pictures are allowed in MP3.\n", "No audio stream present.\n", "Attached pictures were requested, but the ID3v2 header is disabled.\n", "Audio packet of size %d (starting with %08X...) is invalid, writing it anyway.\n", "Not enough memory to buffer audio. Skipping picture streams\n", "Got more than one picture in stream %d, ignoring.\n", "No packets were sent for some of the attached pictures.\n", "Too many samples of initial padding.\n", "Too many samples of trailing padding.\n", "audio/mpeg", "MP3 muxer", "id3v2_version", "Select ID3v2 version to write. Currently 3 and 4 are supported.", "write_id3v1", "Enable ID3v1 writing. ID3v1 tags are written in UTF-8 which may not be supported by most software.", "write_xing", "Write the Xing header containing file duration.", "Not a Musepack file\n", "Can demux Musepack SV7, got version %02X\n", "Too many frames, seeking is not possible\n", "Cannot allocate seektable\n", "Container reports no frames\n", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "Failed to split side data before bitstream filter\n", "Failed to send packet to filter %s for stream %d\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "pkt->size == ((-2147483647 - 1) / 3 * 2 + (int)sizeof(AVFrame))", "libavformat/mux.c", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %lld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Out of memory\n", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "Using AVStream.codec to pass codec parameters to muxers is deprecated, use AVStream.codecpar instead.\n", "sample rate not set\n", "dimensions not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s incompatible with output codec id '%d' (%s)\n", "encoder-", "((AVFrame *)pkt->data)->buf", "Delay between the first packet and last packet in the muxing queue is %lld > %lld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "Using network protocols without global network initialization. Please use avformat_network_init(), this will become mandatory later.\n", "Failed to set close on exec\n", "setsockopt(SO_REUSEADDR) failed\n", "ff_socket_nonblock failed\n", "Connection to %s failed (%s), trying next address\n", "Connection to %s failed: %s\n", "writing", "reading", "Opening '%s' for %s\n", "AVFormatContext", "avioflags", "direct", "reduce buffering", "probesize", "set probing size", "formatprobesize", "number of bytes to probe file format", "packetsize", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "bitexact", "do not write random/volatile data", "shortest", "stop muxing with the shortest stream", "autobsf", "add needed bsfs automatically (delays header until each stream's first packet is written)", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "print specific debug info", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "buffer", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "strict", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "format_whitelist", "List of demuxers that are allowed to be used", "max_streams", "maximum number of streams", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "wav header size < 14", "WAVEFORMATEX support for RIFX files", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "(start&1) == 0", "libavformat/riffenc.c", "LIST", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "Unable to read as many bytes as AMF string signaled\n", "RTMP packet size mismatch %d != %d\n", "bytestream2_tell(&gb) >= 0 && bytestream2_tell(&gb) <= data_end - data", "libavformat/rtmppkt.c", " number %g\n", " bool %d\n", " string '%s'\n", " NULL\n", "  %s: ", "false", "chunk size", "bytes read", "ping", "server bandwidth", "client bandwidth", "audio packet", "video packet", "Flex shared stream", "Flex shared object", "Flex shared message", "notification", "shared object", "invoke", "RTMP packet type '%s'(%d) for channel %d, timestamp %d, extra field %d size %d\n", "Server BW = %d\n", "Client BW = %d\n", " %02X", "Client bandwidth report packet is less than 4 bytes long (%d)\n", "Incorrect client bandwidth %d\n", "Client bandwidth = %d\n", "Too short server bandwidth report packet (%d)\n", "Incorrect server bandwidth %d\n", "Server bandwidth = %d\n", "Too short chunk size change packet (%d)\n", "Incorrect chunk size %d\n", "New incoming chunk size = %d\n", "Unable to create response packet\n", "Seek on stream index %d at timestamp %lld with flags %08x\n", "Sending seek command for timestamp %lld\n", "seek", "Unable to send seek command on stream index %d at timestamp %lld with flags %08x\n", "Pause at timestamp %d\n", "Sending pause command for timestamp %d\n", "pause", "Unable to send pause command at timestamp %d\n", "_result", "FCSubscribe", "onStatus", "level", "status", "code", "%s is now published", "details", "Erroneous Message size %d not following standard\n", "received bytes read report\n", "Too short ping packet (%d)\n", "Sending SWF verification...\n", "Ignoring SWFVerification request.\n", "_error", "_checkbw", "releaseStream", "FCPublish", "getStreamLength", "connect", "authmod=adobe", "authmod=llnw", "Unknown connect error (unsupported authentication method?)\n", "No credentials set\n", "?reason=authfailed", "Incorrect username/password\n", "?reason=nosuchuser", "Incorrect username\n", "Authentication failed\n", "code=403 need auth", "?authmod=%s&user=%s", "?reason=needauth", "No auth parameters found\n", "user", "salt", "opaque", "challenge", "nonce", "Ignoring unsupported var %s\n", "Variable %s has NULL value\n", "adobe", "?authmod=%s&user=%s&challenge=%s&response=%s", "&opaque=%s", "live", "publish", "/_definst_", "00000001", "?authmod=%s&user=%s&nonce=%s&cnonce=%s&nc=%s&response=%s", "llnw", "Server error: %s\n", "Releasing stream...\n", "FCPublish stream...\n", "Creating stream...\n", "createStream", "Unexpected reply on connect()\n", "Sending publish command for '%s'\n", "Sending play command for '%s'\n", "play", "Unexpected reply on getStreamLength()\n", "error", "NetStream.Play.Start", "onBWDone", "Error in PT_INVOKE\n", "Unable to parse stream name - name too long?\n", "Unable to parse stream name\n", "Unable to find / in url %s, bad format\n", "Unexpected stream %s, expecting %s\n", "onFCPublish", "NetStream.Publish.Start", "Unknown packet type received 0x%02X\n", "NetStream.Play.Stop", "NetStream.Play.UnpublishNotify", "NetStream.Seek.Notify", "onMetaData", "|RtmpSampleAccess", "@setDataFrame", "Unable to write answer\n", "Sending bytes read report\n", "videocodecid", "audiocodecid", "Incomplete flv packets in RTMP_PT_METADATA packet\n", "UnPublishing stream...\n", "FCUnpublish", "Deleting stream...\n", "deleteStream", "Detected librtmp style URL parameters, these aren't supported by the libavformat internal RTMP handler currently enabled. See the documentation for the correct way to pass parameters.\n", "rtmp", "rtmp_listen not available for %s\n", "rtmpt", "rtmpts", "ffrtmphttp_tls", "ffrtmphttp", "rtmps", "rtmpe", "rtmpte", "ffrtmpcrypt_tunneling", "ffrtmpcrypt", "?listen&listen_timeout=%d", "Cannot open connection %s\n", "Cannot open connection %s.\n", "Genuine Adobe Flash Player 001", "rtmp_swfhash", "Handshaking...\n", "Cannot write RTMP handshake request\n", "Cannot read RTMP handshake response\n", "Type answer %d\n", "Server version %d.%d.%d.%d\n", "Server response validating failed\n", "Hash of the decompressed SWF file is not 32 bytes long.\n", "Signature mismatch\n", "Unable to read handshake\n", "RTMP protocol version mismatch\n", "Unable to write answer - RTMP S0\n", "RTMP Handshake C1 Error\n", "RTMP Handshake S1 Error\n", "RTMP Handshake S2 Error\n", "RTMP Handshake C2 Error\n", "Erroneous C2 Message epoch does not match up with C1 epoch\n", "Erroneous C2 Message random does not match up\n", "slist=", "/ondemand/", "ondemand", ".f4v", ".mp4", "mp4:", ".flv", "%s %d,%d,%d,%d", "FMLE/3.0 (compatible; %s)", "Proto = %s, path = %s, app = %s, fname = %s\n", "type", "nonprivate", "flashVer", "swfUrl", "tcUrl", "fpad", "capabilities", "audioCodecs", "videoCodecs", "videoFunction", "pageUrl", "Invalid AMF parameter: %s\n", "received abort message\n", "received acknowledgement\n", "Unknown control message type (%d)\n", "Unable to read command string\n", "Expecting connect, got %s\n", "SeqNum not found\n", "App field not found in connect\n", "App field don't match up: %s <-> %s\n", "fmsVer", "FMS/3,0,1,123", "NetConnection.Connect.Success", "Connection succeeded.", "objectEncoding", "rtmp_app", "Name of application to connect to on the RTMP server", "rtmp_buffer", "Set buffer time in milliseconds. The default is 3000.", "rtmp_conn", "Append arbitrary AMF data to the Connect message", "rtmp_flashver", "Version of the Flash plugin used to run the SWF player.", "rtmp_flush_interval", "Number of packets flushed in the same request (RTMPT only).", "rtmp_live", "Specify that the media is a live stream.", "both", "live stream", "recorded", "recorded stream", "rtmp_pageurl", "URL of the web page in which the media was embedded. By default no value will be sent.", "rtmp_playpath", "Stream identifier to play or to publish", "rtmp_subscribe", "Name of live stream to subscribe to. Defaults to rtmp_playpath.", "SHA256 hash of the decompressed SWF file (32 bytes).", "rtmp_swfsize", "Size of the decompressed SWF file, required for SWFVerification.", "rtmp_swfurl", "URL of the SWF player. By default no value will be sent", "rtmp_swfverify", "URL to player swf file, compute hash/size automatically.", "rtmp_tcurl", "URL of the target stream. Defaults to proto://host[:port]/app.", "rtmp_listen", "Listen for incoming rtmp connections", "timeout", "Maximum timeout (in seconds) to wait for incoming connections. -1 is infinite. Implies -rtmp_listen 1", "payload_type", "Port missing in uri\n", "listen_timeout", "Failed to resolve hostname %s: %s\n", "libavformat/tcp.c", "Listen for incoming connections", "set timeout (in microseconds) of socket I/O operations", "Connection awaiting timeout (in milliseconds)", "send_buffer_size", "Socket send buffer size (in bytes)", "recv_buffer_size", "Socket receive buffer size (in bytes)", "%s://", "unknown codec", "unspecified frame size", "unspecified sample format", "unspecified sample rate", "unspecified number of channels", "no decodable DTS frames", "unspecified size", "unspecified pixel format", "no frame in rv30/40 and no sar", "mp4v", "*pkt_buffer", "libavformat/utils.c", "probing stream %d pp:%d\n", "Failed to reallocate probe buffer for stream %d\n", "nothing to probe for stream %d\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "probed stream %d\n", "probed stream %d failed\n", "threads", "libavformat license: nonfree and unredistributable", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist && !dst->protocol_blacklist", "Failed to duplicate black/whitelist\n", "Truncating packet of size %d to %lld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "st->internal->avctx->ticks_per_frame", "s->iformat", "DTS %lli < %lli out of order\n", "invalid dts/pts combination %lli\n", "first_dts %s not matching first dts %s (pts %s, duration %lld) in the queue\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%lld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "pipe", "cache", "Reconfiguring buffers to size %lld\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%llx pos_max=0x%llx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%lld %lld %lld / %s %s %s target:%s limit:%lld start:%lld noc:%d\n", "read_timestamp() failed in the middle\n", "read_seek: %d %s\n", "using cached pos_min=0x%llx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%llx pos_limit=0x%llx dts_max=%s\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "Demuxer context update while decoder is open, closing and trying to re-open\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%lld, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%lld, flags=%d\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "Ignoring outlier non primary stream starttime %f\n", "Ignoring outlier non primary stream endtime %f\n", "missing_streams", "skip_clear", "mpeg", "mpegts", "Before avformat_find_stream_info() pos: %lld bytes read:%lld seeks:%d nb_streams:%d\n", "Failed to open codec in %s\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %lld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %lld, packet %d with DTS %lld\n", "DTS discontinuity in stream %d: packet %d with DTS %lld, packet %d with DTS %lld\n", "max_analyze_duration %lld reached at %lld microseconds st:%d\n", "decoding for stream %d failed\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "skip_changes", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "stream %d: start_time: %0.3f duration: %0.3f\n", "format: start_time: %0.3f duration: %0.3f bitrate=%lld kb/s\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %lld bytes read:%lld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "new_program: id=0x%04x\n", "Chapter end time %lld before start %lld\n", "stream index %d is not valid\n", "%0*d", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "Discarding ID3 tags because more suitable tags were found.\n", "demuxer does not support additional id3 data, skipping\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Number of streams exceeds max_streams parameter (%d), see the documentation if you wish to increase it\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "copy", "Failed to open bitstream filter %s for stream %d with codec %s", "Failed to parse creation_time %s\n", "Invalid palette side data\n", "mov,mp4,3gp,3g2,psp,ipod,ismv,f4v", "dvbsub", "dvbtxt", "eac3", "hevc", "loas", "mjpeg_2000", "mpegvideo", "truehd", "Unsupported pixel format (%d)\n", "Unsupported color space (%d)\n", "GIF87aGIF89a", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "c608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "fLaC", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "pxlt", "avc1\r", "text", "avc1\r", "mp4a", "tx3g", "avc1k", "VP6A]", "VP6F", "yuv2", "yuvs", "2vuy", "raw  ", "BGRA ", "RGBA ", "ABGR ", "b48r0", "\u000b\t\u000b\t", "\fencd", "VSM4\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "MNM4\r", "JR24\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TR20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "AV01", "IART", "IAS1", "IAS2", "IAS3", "IAS4", "IAS5", "IAS6", "IAS7", "IAS8", "IAS9", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "avformat_find_stream_info", "0123456789abcdef0123456789ABCDEF"], "stringidentifiers": ["APETAGEX", "GAB2", "title", "MMES", "creation_time", "maker", "model", "list", "strh", "BottomUp", "video", "PotEncoder", "ISFT", "Axan", "strn", "use_odml", "NULL", "file", "subfile", "start", "protocol_whitelist", "protocol_blacklist", "URLContext", "rw_timeout", "AVIOContext", "h264_mp4toannexb", "NOPTS", "duration", "inpoint", "outpoint", "file_packet_metadata", "stream", "exact_stream_id", "ffconcat", "version", "concat", "safe", "auto_convert", "segment_time_metadata", "unknown", "language", "dump_separator", "palette", "main", "effects", "dialogue", "comentary", "emergency", "karaoke", "Output", "Input", "from", "name", "truncate", "blocksize", "follow", "segment", "ssegment", "image2", "mime_type", "loop", "final_delay", "min_delay", "max_gif_delay", "default_delay", "ignore_loop", "h264", "Forbidden", "expires", "POST", "Location", "bytes", "chunked", "Connection", "close", "Server", "AkamaiGHost", "MediaGateway", "gzip", "deflate", "identity", "http_proxy", "no_proxy", "https", "domain", "path", "listen", "icy_metadata_packet", "http", "seekable", "chunked_post", "headers", "content_type", "user_agent", "multiple_requests", "post_data", "cookies", "icy_metadata_headers", "metadata", "auth_type", "none", "basic", "send_expect_100", "location", "offset", "end_offset", "method", "reconnect", "reconnect_at_eof", "reconnect_streamed", "reconnect_delay_max", "resource", "reply_code", "auth", "true", "artist", "album", "date", "comment", "track", "genre", "Blues", "Country", "Dance", "Disco", "Funk", "Grunge", "Jazz", "Metal", "Oldies", "Other", "Reggae", "Rock", "Techno", "Industrial", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Gangsta", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Folk", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Ballad", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "PRIV", "GEOB", "APIC", "TCON", "TXXX", "COMM", "encrypted", "compression", "USLT", "TYER", "TDAT", "TIME", "CHAP", "Conductor", "Composer", "Illustration", "compilation", "encoded_by", "album_artist", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "composer", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "encoder", "lyrics", "jpeg", "ljpg", "pgmyuv", "tiff", "pict", "im24", "im32", "sunras", "yuv10", "webp", "xface", "SDPX", "XPDS", "xpm_pipe", "webp_pipe", "tiff_pipe", "sunrast_pipe", "sgi_pipe", "qdraw_pipe", "psd_pipe", "ppm_pipe", "png_pipe", "pictor_pipe", "pgmyuv_pipe", "pgm_pipe", "pcx_pipe", "pbm_pipe", "pam_pipe", "jpegls_pipe", "jpeg_pipe", "j2k_pipe", "exr_pipe", "dpx_pipe", "dds_pipe", "bmp_pipe", "framerate", "pattern_type", "glob_sequence", "glob", "sequence", "pixel_format", "start_number", "start_number_range", "video_size", "frame_size", "ts_from_file", "ts_type", "root", "handler_name", "iTunSMPB", "cdec", "major_brand", "minor_version", "compatible_brands", "equirectangular", "rotate", "nclx", "nclc", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "firmware", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "subtitle", "warning", "timecode", "tmcd", "rtmd", "reel_name", "stsd", "mp4s", "AV1x", "AVup", "apcn", "apch", "dvpp", "dvcp", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "advanced_editlist", "ignore_chapters", "use_mfra_for", "auto", "export_all", "export_xmp", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "aac_adtstoasc", "vp9_superframe", "stss", "stps", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "hint", "HintHandler", "TimeCodeHandler", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "text", "dhlr", "handler", "earth", "disk", "trkn", "CodecPrivateData", "ipod", "ismv", "yrrc", "albm", "lpcm", "Lavf", "XDCAM", "DpxE", "perf", "titl", "author", "gnre", "dscp", "cprt", "aART", "encoding_tool", "desc", "ldes", "tvsh", "tven", "tvnn", "tves", "tvsn", "stik", "hdvd", "pgap", "cpil", "tmpo", "wide", "free", "audio", "systemBitrate", "trackID", "systemLanguage", "trackName", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "movflags", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "default_base_moof", "dash", "frag_discont", "delay_moov", "global_sidx", "write_colr", "write_gama", "use_metadata_tags", "skip_trailer", "rtpflags", "latm", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "frag_duration", "min_frag_duration", "frag_size", "ism_lookahead", "video_track_timescale", "brand", "use_editlist", "fragment_index", "mov_gamma", "frag_interleave", "encryption_scheme", "encryption_key", "encryption_kid", "use_stream_ids_as_track_ids", "write_tmcd", "rtpo", "usetoc", "id3v2_version", "write_id3v1", "write_xing", "writing", "reading", "AVFormatContext", "avioflags", "direct", "probesize", "formatprobesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "nobuffer", "seek2any", "bitexact", "shortest", "autobsf", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "err_detect", "crccheck", "bitstream", "buffer", "explode", "ignore_err", "careful", "compliant", "aggressive", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "strict", "very", "normal", "unofficial", "experimental", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "codec_whitelist", "format_whitelist", "max_streams", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "LIST", "false", "ping", "notification", "invoke", "seek", "pause", "_result", "FCSubscribe", "onStatus", "level", "status", "code", "details", "_error", "_checkbw", "releaseStream", "FCPublish", "getStreamLength", "connect", "user", "salt", "opaque", "challenge", "nonce", "adobe", "live", "publish", "llnw", "createStream", "play", "error", "onBWDone", "onFCPublish", "onMetaData", "videocodecid", "audiocodecid", "FCUnpublish", "deleteStream", "rtmp", "rtmpt", "rtmpts", "ffrtmphttp_tls", "ffrtmphttp", "rtmps", "rtmpe", "rtmpte", "ffrtmpcrypt_tunneling", "ffrtmpcrypt", "rtmp_swfhash", "ondemand", "type", "nonprivate", "flashVer", "swfUrl", "tcUrl", "fpad", "capabilities", "audioCodecs", "videoCodecs", "videoFunction", "pageUrl", "fmsVer", "objectEncoding", "rtmp_app", "rtmp_buffer", "rtmp_conn", "rtmp_flashver", "rtmp_flush_interval", "rtmp_live", "both", "recorded", "rtmp_pageurl", "rtmp_playpath", "rtmp_subscribe", "rtmp_swfsize", "rtmp_swfurl", "rtmp_swfverify", "rtmp_tcurl", "rtmp_listen", "timeout", "payload_type", "listen_timeout", "send_buffer_size", "recv_buffer_size", "mp4v", "threads", "pipe", "cache", "missing_streams", "skip_clear", "mpeg", "mpegts", "skip_changes", "copy", "dvbsub", "dvbtxt", "eac3", "hevc", "loas", "mjpeg_2000", "mpegvideo", "truehd", "GIF87aGIF89a", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "c608", "sac3", "alac", "twos", "lpcm", "fLaC", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "pxlt", "text", "mp4a", "tx3g", "avc1k", "VP6F", "yuv2", "yuvs", "b48r0", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TR20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "AV01", "IART", "IAS1", "IAS2", "IAS3", "IAS4", "IAS5", "IAS6", "IAS7", "IAS8", "IAS9", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "avformat_find_stream_info"], "debugstrings": ["Unsupported tag version. (>=%d)\n", "ffconcat version 1.0", "version", "Line %d: invalid version\n", "configurationVersion:                %u\n", "Malformed HTTP version string.\n", "HTTP version string: %s\n", "minor_version", "premiere_version", "quicktime_version", "Version %d", "sidx version %u", "version =%d, isom =%d\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "Invalid ID3v2 version requested: %d. Only 3, 4 or 0 (disabled) are allowed.\n", "id3v2_version", "Select ID3v2 version to write. Currently 3 and 4 are supported.", "Can demux Musepack SV7, got version %02X\n", "strictly conform to a older more strict version of the spec or reference software", "Server version %d.%d.%d.%d\n", "RTMP protocol version mismatch\n", "Version of the Flash plugin used to run the SWF player.", "GCC: (GNU) 4.8", "GCC: (GNU) 4.9 20140827 (prerelease)"], "localsymbols": [""], "dependencies": ["libavutil.so", "libavcodec.so", "libm.so", "libz.so", "libc.so"], "elfname": "libavformat.so"}