{"globalvars": ["av_format_ffversion"], "importedglobals": ["avpriv_ac3_channel_layout_tab", "avpriv_mpa_freq_tab"], "importedfunctions": ["avcodec_parameters_alloc", "strchr", "av_dict_get", "av_reallocp", "av_fast_realloc", "access", "av_opt_free", "snprintf", "av_fourcc_make_string", "avpriv_find_pix_fmt", "av_sha_alloc", "fprintf", "av_rescale", "av_div_q", "av_reduce", "strspn", "av_compare_ts", "av_frame_alloc", "avcodec_parameters_from_context", "av_spherical_tile_bounds", "av_gettime_relative", "fputc", "av_bsf_free", "strncmp", "av_opt_next", "av_fast_malloc", "avcodec_is_open", "av_parse_time", "av_realloc_f", "av_bsf_get_by_name", "av_get_bits_per_sample", "av_timecode_make_string", "av_rescale_rnd", "avcodec_alloc_context3", "av_packet_new_side_data", "av_aes_ctr_free", "readdir", "avcodec_send_packet", "av_packet_merge_side_data", "av_get_audio_frame_duration", "av_shrink_packet", "av_aes_ctr_crypt", "av_dict_free", "av_init_packet", "av_new_packet", "unlink", "read", "lseek64", "strlen", "uncompress", "avcodec_register_all", "hypot", "avpriv_report_missing_feature", "av_strlcatf", "av_packet_get_side_data", "avcodec_close", "av_aes_ctr_init", "memmove", "av_opt_ptr", "av_append_path_component", "av_bsf_alloc", "avcodec_parameters_copy", "av_opt_set_dict_val", "av_memdup", "av_opt_copy", "avpriv_dict_set_timestamp", "av_dynarray_add_nofree", "av_strcasecmp", "avpriv_codec_get_cap_skip_frame_fill_param", "av_codec_next", "atoi", "av_parser_close", "pthread_once", "av_aes_init", "av_strstart", "av_strdup", "av_rescale_q_rnd", "strcpy", "av_opt_get", "gmtime_r", "av_dynarray_add", "av_timecode_init", "av_compare_mod", "av_codec_set_lowres", "av_aes_crypt", "rename", "av_malloc", "av_opt_set_dict2", "av_mallocz", "closedir", "avcodec_find_decoder_by_name", "av_realloc_array", "memcpy", "av_reallocp_array", "av_crc_get_table", "av_opt_set_from_string", "strcmp", "av_sha_init", "fstat", "av_opt_set", "av_bsf_init", "av_match_name", "avpriv_mpeg4audio_get_config", "av_d2q", "av_buffer_alloc", "rmdir", "avcodec_open2", "av_packet_split_side_data", "avpriv_h264_has_num_reorder_frames", "av_sha_final", "av_stristr", "av_aes_ctr_set_iv", "av_frame_get_pkt_duration", "av_sha_update", "av_get_channel_layout_nb_channels", "av_packet_unref", "av_stereo3d_type_name", "avcodec_descriptor_get", "av_display_rotation_get", "av_opt_set_dict", "av_get_audio_frame_duration2", "av_packet_ref", "av_aes_alloc", "avcodec_decode_subtitle2", "av_rescale_q", "av_log", "avpriv_toupper4", "av_bsf_send_packet", "av_default_item_name", "av_color_space_name", "av_get_picture_type_char", "av_crc", "av_parser_init", "av_get_channel_name", "strrchr", "av_bsf_receive_packet", "av_mul_q", "write", "fputs", "avcodec_find_decoder", "av_opt_get_dict_val", "av_parser_parse2", "av_stereo3d_alloc", "vsnprintf", "strtol", "memcmp", "av_realloc", "av_strlcat", "av_aes_ctr_alloc", "av_dict_copy", "av_usleep", "av_dict_count", "av_buffer_default_free", "av_buffer_unref", "av_dict_set_int", "av_bprint_append_data", "strstr", "av_match_list", "av_codec_is_decoder", "av_grow_packet", "av_bprint_finalize", "av_dict_set", "avpriv_request_sample", "avpriv_open", "lrintf", "abort", "avcodec_string", "lrint", "__errno", "opendir", "av_gcd", "avpriv_get_raw_pix_fmt_tags", "avcodec_receive_frame", "av_strlcpy", "av_color_primaries_name", "av_buffer_create", "av_freep", "avcodec_pix_fmt_to_codec_tag", "av_opt_set_defaults", "strcspn", "av_spherical_projection_name", "av_codec_get_lowres", "av_pix_fmt_desc_get", "av_free", "avcodec_free_context", "memset", "avcodec_get_name", "av_asprintf", "av_strncasecmp", "lstat", "av_codec_set_pkt_timebase", "av_strndup", "avcodec_parameters_to_context", "av_frame_free", "avcodec_parameters_free", "av_bitstream_filter_filter", "close", "av_add_stable", "sscanf", "av_color_transfer_name", "av_spherical_alloc", "av_gettime"], "exportedfunctions": ["avpriv_io_move", "ffurl_write", "avio_open2", "av_format_set_open_cb", "av_pkt_dump_log2", "av_new_program", "avformat_free_context", "avio_enum_protocols", "avio_put_str16be", "avformat_get_riff_audio_tags", "av_stream_set_recommended_encoder_configuration", "avformat_open_input", "av_append_packet", "av_format_get_open_cb", "av_probe_input_buffer", "av_format_set_opaque", "avformat_version", "av_oformat_next", "av_get_frame_filename", "av_stream_set_r_frame_rate", "av_format_get_metadata_header_padding", "av_pkt_dump2", "avio_wb16", "av_codec_get_tag2", "avio_wb24", "avio_size", "avio_get_dyn_buf", "av_format_get_video_codec", "avformat_seek_file", "avformat_close_input", "av_format_set_video_codec", "av_program_add_stream_index", "avio_rl16", "ffurl_close", "avformat_get_class", "av_format_get_audio_codec", "av_format_get_probe_score", "av_find_program_from_stream", "avformat_match_stream_specifier", "av_add_index_entry", "avio_wl16", "av_format_set_subtitle_codec", "av_format_get_control_message_cb", "avio_pause", "avformat_queue_attached_pictures", "avformat_get_riff_video_tags", "avpriv_new_chapter", "av_stream_get_codec_timebase", "av_write_trailer", "avio_closep", "avio_handshake", "av_hex_dump_log", "av_format_set_control_message_cb", "av_stream_get_parser", "avio_skip", "avio_rb24", "av_interleaved_write_frame", "avformat_alloc_context", "avio_read_to_bprint", "av_stream_get_recommended_encoder_configuration", "avio_read", "avformat_find_stream_info", "avformat_new_stream", "avio_get_str16be", "avio_printf", "avio_w8", "avformat_write_header", "avformat_flush", "avio_write_marker", "avio_wl24", "avpriv_io_delete", "av_stream_get_end_pts", "av_guess_sample_aspect_ratio", "url_feof", "av_find_best_stream", "avformat_network_deinit", "avio_write", "avio_free_directory_entry", "avio_check", "av_probe_input_format3", "avio_seek", "av_demuxer_open", "av_guess_frame_rate", "av_find_default_stream_index", "ffio_open_dyn_packet_buf", "avformat_get_mov_video_tags", "avio_find_protocol_name", "avio_rl64", "av_read_play", "av_write_frame", "av_format_set_data_codec", "av_format_get_subtitle_codec", "ffio_set_buf_size", "avio_wb64", "avio_rl32", "avio_close", "avio_wl32", "avio_close_dyn_buf", "avformat_query_codec", "avio_rb16", "avio_rb32", "av_sdp_create", "avformat_configuration", "avformat_network_init", "av_seek_frame", "avio_close_dir", "av_format_set_metadata_header_padding", "av_url_split", "av_stream_get_r_frame_rate", "av_read_frame", "av_stream_get_side_data", "av_register_output_format", "avformat_init_output", "avio_wl64", "av_fmt_ctx_get_duration_estimation_method", "av_get_packet", "av_index_search_timestamp", "av_get_frame_filename2", "av_register_all", "avio_read_dir", "av_stream_add_side_data", "avio_open", "ffurl_open", "avio_accept", "av_write_uncoded_frame_query", "av_write_uncoded_frame", "avio_r8", "av_find_input_format", "avio_put_str", "av_interleaved_write_uncoded_frame", "av_probe_input_format2", "av_guess_format", "av_format_get_opaque", "av_format_inject_global_side_data", "avio_seek_time", "av_register_input_format", "av_apply_bitstream_filters", "avio_open_dir", "av_filename_number_test", "avio_alloc_context", "av_codec_get_tag", "av_iformat_next", "avformat_transfer_internal_stream_timing_info", "av_stream_new_side_data", "avio_rl24", "av_read_pause", "avpriv_set_pts_info", "avio_feof", "avio_rb64", "avio_get_str", "av_hex_dump", "av_dump_format", "av_format_set_audio_codec", "av_match_ext", "av_codec_get_id", "avformat_alloc_output_context2", "avio_get_str16le", "av_probe_input_buffer2", "av_guess_codec", "avio_flush", "avformat_get_mov_audio_tags", "av_probe_input_format", "avio_wb32", "avio_put_str16le", "av_get_output_timestamp", "avformat_license", "avio_open_dyn_buf", "av_format_get_data_codec"], "allstrings": ["NULL", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "Assertion %s failed at %s:%d\n", "libavformat/avio.c", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "start", "Key '%s' not found.\n", "Error parsing options string %s\n", "https:", "https protocol not found, recompile FFmpeg with openssl, gnutls or securetransport enabled.\n", "protocol_whitelist", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "!(e=av_dict_get(*options, \"protocol_blacklist\", ((void *)0), 0)) || (uc->protocol_blacklist && !strcmp(uc->protocol_blacklist, e->value))", "Protocol '%s' not on whitelist '%s'!\n", "Protocol '%s' on blacklist '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || !strcmp(whitelist, e->value)", "!blacklist || !(e=av_dict_get(*options, \"protocol_blacklist\", ((void *)0), 0)) || !strcmp(blacklist, e->value)", "URLContext", "List of protocols that are allowed to be used", "List of protocols that are not allowed to be used", "rw_timeout", "Timeout for IO operations (in microseconds)", "Invalid UTF8 sequence in avio_put_str16%s\n", "!s->write_flag", "libavformat/aviobuf.c", "Failed to decrease buffer size\n", "len >= s->orig_buffer_size", "Statistics: %d seeks, %d writeouts\n", "Statistics: %ld bytes read, %d seeks\n", "AVIOContext", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", "%s - ", "unknown", "%sMetadata:\n", "language", "\n%s  %-16s: ", "fps, ", "tbr, ", "tbn, ", "dump_separator", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ": %s", ", SAR %d:%d DAR %d:%d", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "    ", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "H.263 macroblock info", "replaygain: ", "invalid data", "track gain", "track peak", "album gain", "album peak", "displaymatrix: rotation of %.2f degrees", "stereo3d: ", " (inverted)", "audio service type: ", "main", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "quality factor: %d, pict_type: %c", "cpb: ", "bitrate max/min/avg: %d/%d/%d buffer size: %d vbv_delay: %ld", "Mastering Display Metadata, has_primaries:%d has_luminance:%d r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f) min_luminance=%f, max_luminance=%f", "spherical: ", "(%f/%f/%f) ", "[%zu, %zu, %zu, %zu] ", "[pad %u] ", "unknown side data type %d (%d bytes)", "Output", "Input", "from", "%s #%d, %s, %s '%s':\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%s%d.%06d", ", bitrate: ", "%ld kb/s", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "  Program %d %s\n", "  No Program\n", "file:", "file,crypto", "truncate", "truncate existing files on write", "blocksize", "set I/O operation maximum block size", "follow", "Follow a file as it is being written", "ssegment", "image2", "Probing %s score:%d size:%d\n", "Probing %s score:%d increased to %d due to MIME type\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "h26l,h264,264,avc", "h264 demuxer", "comment", "genre", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Grunge", "Hip-Hop", "New Age", "Oldies", "Other", "Reggae", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Trance", "Classical", "Instrumental", "Acid", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "PRIV", "Failed to alloc %zu bytes\n", "Failed to alloc %d bytes\n", "Error reading GEOB frame, data truncated.\n", "GEOB", "Error reading frame %s, skipped\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "APIC", "TCON", "(%d)", "TXXX", "No AVFormatContext, skipped ID3 chapter data\n", "COMM", "encrypted", "encrypted and compressed", "extended header too long.", "invalid extended header length", "compression", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Skipping %s ID3v2 frame %s.\n", "USLT", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to alloc %ld bytes\n", "Failed to read compressed tag\n", "Failed to uncompress tag: %d\n", "lyrics-%s%s%s", "Error reading comment frame, skipped\n", "invalid frame id, assuming padding\n", "Error reading lyrics, skipped\n", "ID3v2.%d tag skipped, cannot handle %s\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "CHAP", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "compilation", "encoded_by", "TCMP", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "encoder", "lyrics", "c608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "fLaC", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "pxlt", "MPEG-4 description: tag=0x%02x len=%d\n", "esds object type id 0x%02x\n", "Specific MPEG-4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "Unknown MOV field order 0x%04x\n", "enda %d\n", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Duplicated STPS atom\n", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type:'%s' parent:'%s' sz: %ld %ld %ld\n", "overread end of atom '%.4s' by %ld bytes\n", "ignoring multiple glbl\n", "Found duplicated MOOV Atom. Skipped it\n", "root atom offset 0x%lx: partial file\n", "read fragments, offset 0x%lx\n", "root", "STREAMINFO must be first FLACMetadataBlock\n", "non-STREAMINFO FLACMetadataBlock(s) ignored\n", "duplicate saiz atom\n", "saiz atom auxiliary_info_sizes size %ld invalid\n", "failed to read the auxiliary info sizes", "Duplicated SBGP atom\n", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %ld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %ld\n", "frag flags 0x%x\n", "could not find corresponding trex\n", "could not find corresponding track id %u\n", "track[%u].stts.entries = %u\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "sample_count=%d, sample_duration=%d\n", "keyframe_count = %u\n", "Duplicated STSS atom\n", "Duplicated ELST atom\n", "track[%u].edit_count = %i\n", "duration=%ld time=%ld rate=%f\n", "Track %d, edit %d: Invalid edit list media time=%ld\n", "Duplicated STCO atom\n", "ctype=%s\n", "stype=%s\n", "handler_name", "iTunSMPB", "%*X %X %X %X", "cdec", "Unhandled or malformed custom metadata of size %ld\n", "qt  ", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "compatible_brands", "Empty spherical video box\n", "Missing spherical video header\n", "Missing projection box\n", "Missing projection header box\n", "Unsupported cubemap layout %d\n", "Invalid bounding rectangle coordinates %u,%u,%u,%u\n", "Unknown projection type\n", "Empty stereoscopic video box\n", "Unknown st3d mode value %d\n", "duplicate senc atom\n", "senc atom size %ld invalid\n", "failed to read the auxiliary info", "systemBitrate=\"", "<GSpherical:StitchingSoftware>", "<GSpherical:Spherical>", "true", "<GSpherical:Stitched>", "<GSpherical:ProjectionType>", "equirectangular", "<GSpherical:StereoMode>", "left-right", "top-bottom", "<GSpherical:InitialViewHeadingDegrees>", "<GSpherical:InitialViewPitchDegrees>", "<GSpherical:InitialViewRollDegrees>", "Invalid spherical metadata found\n", "unknown compression for cmov atom !\n", "get_wav_header failed\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "stream %d, sample %d, dts %ld\n", "track[%u].stsc.entries = %u\n", "Duplicated STSC atom\n", "STSC entry %d is invalid (first=%d count=%d id=%d)\n", "sc->stsc_data[i+1].first >= 2", "libavformat/mov.c", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "rotate", "stream has moof boxes, will look for a mfra\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "found tfra\n", "failed to seek back after looking for mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %lx\n", "[aax] file checksum == ", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x%08x size %u\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "The 'keys' atom with the invalid key count: %u\n", "The key# %u in meta has invalid size:%u\n", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "firmware", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "model", "original_artist", "performers", "playback_requirements", "original_source", "subtitle", "warning", "location", "loci too short\n", "place name too long\n", "loci too short (%u bytes left, need at least %d)\n", "%+08.4f%+09.4f", "%s-%s", "Unknown cover type: 0x%x.\n", "Error parsing cover art.\n", "The index of 'data' is out of range: %d < 1 or >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the number (%d) in string.\n", "Failed to store the number (%u) in string.\n", "Failed to store the float32 number (%f) in string.\n", "HandBrake %d.%d.%d", "truncated extradata\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unexpected size %ld\n", "aclr not decoded - unable to add atom to extradata\n", "size: %dx%d\n", "palette: ", "%06x%s", "creation_time is not representable\n", "Invalid mvhd time scale %d, defaulting to 1\n", "time scale = %i\n", "Multiple mdhd?\n", "Version %d", "Invalid mdhd time scale %d, defaulting to 1\n", "sample_size = %u sample_count = %u\n", "Invalid sample field size %u\n", "Duplicated STSZ atom\n", "sidx version %u", "Invalid sidx timescale 1/%d\n", "sidx reference_type 1", "could not find corresponding track id %d\n", "Invalid sample rate %d\n", "Unsupported DTS audio channel layout", "track[%u].ctts.entries = %u\n", "ignoring CTTS entry with count=%d duration=%d\n", "count=%d, duration=%d\n", "CTTS invalid\n", "mov_update_dts_shift(): dts_shift set to %d\n", "dts shift %d\n", "flags 0x%x entries %u\n", "first sample flags 0x%x\n", "found frag time %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\n", "calculated into dts %ld\n", "found frag time %ld, using it for dts\n", "Failed to add index entry\n", "AVIndex stream %d, sample %u, offset %lx, dts %ld, size %u, distance %d, keyframe %d\n", "stream %d, timestamp %ld, sample %d\n", "stream %d, found sample %d\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%ld\n", "Failed to retrieve first frame\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "timecode", "%02d:%02d:%02d%c%02d", "stream %d, timescale not set\n", "Forcing full parsing for mp3 stream\n", "Overflow during bit rate calculation %ld * 8 * %d\n", "Referenced QT chapter track not found\n", "tmcd", "rtmd", "stream %d, offset 0x%lx: partial file\n", "Nonkey frame from stream %d discarded due to AVDISCARD_NONKEY\n", "Cannot append palette to packet\n", "current sample %ld greater than the number of auxiliary info sample sizes %zu\n", "auxiliary info offset %zu greater than auxiliary info size %zu\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "stream %d, missing mandatory atoms, broken header\n", "stream %d, contradictionary STSC and STCO\n", "multiple edit list entries, Use -advanced_editlist to correctly decode otherwise a/v desync might occur\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "Sample size %u is too large\n", "AVIndex stream %d, sample %u, offset %lx, dts %ld, size %u, distance %u, keyframe %d\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %u\n", "AVIndex stream %d, chunk %u, offset %lx, dts %ld, size %u, duration %u\n", "Cannot allocate index ranges buffer\n", "Offset DTS by ctts[%d].duration: %d\n", "st: %d edit list: %ld Missing key frame while searching for timestamp: %ld\n", "st: %d edit list %ld Cannot find an index entry before timestamp: %ld.\nRounding edit list media time to zero.\n", "shifted frame pts, curr_cts: %ld @ %ld, ctts: %d, ctts_count: %ld\n", "end_index >= 0 && end_index <= st->nb_index_entries", "skip %d audio samples from curr_cts: %ld\n", "drop a frame at curr_cts: %ld @ %ld\n", "Cannot reallocate frame duration buffer\n", "Cannot add index entry\n", "Support for mvhd.timescale = 0 with editlists", "Processing st: %d, edit list %ld - media time: %ld, duration: %ld\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "Cannot add CTTS entry %ld - {%ld, %d}\n", "invalid size %ld in stsd\n", "multiple fourcc not supported\n", "size=%ld 4CC=%s codec_type=%d\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "audio channels %d\n", "version =%d, isom =%d\n", "reel_name", "stsd", "AV1x", "AVup", "apcn", "apch", "dvpp", "dvcp", "mp4s", "invalid STSD entries %d\n", "Duplicate STSD\n", "mov,mp4,m4a,3gp,3g2,mj2", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "Ignore the edit list atom.", "advanced_editlist", "Modify the AVIndex according to the editlists. Use this option to decode in the order specified by the edits.", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "auto", "export_all", "Export unrecognized metadata entries", "export_xmp", "Export full XMP metadata", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "decryption_key", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "Failed to split side data before bitstream filter\n", "Failed to send packet to filter %s for stream %d\n", "NOPTS", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %ld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "pkt->size == ((-2147483647 - 1) / 3 * 2 + (int)sizeof(AVFrame))", "libavformat/mux.c", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Out of memory\n", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "Using AVStream.codec to pass codec parameters to muxers is deprecated, use AVStream.codecpar instead.\n", "sample rate not set\n", "dimensions not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s incompatible with output codec id '%d' (%s)\n", "Lavf57.71.100", "encoder-", "((AVFrame *)pkt->data)->buf", "Delay between the first packet and last packet in the muxing queue is %ld > %ld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "writing", "reading", "Opening '%s' for %s\n", "AVFormatContext", "avioflags", "direct", "reduce buffering", "set probing size", "formatprobesize", "number of bytes to probe file format", "packetsize", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "latm", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "bitexact", "do not write random/volatile data", "shortest", "stop muxing with the shortest stream", "autobsf", "add needed bsfs automatically (delays header until each stream's first packet is written)", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "print specific debug info", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "format_whitelist", "List of demuxers that are allowed to be used", "max_streams", "maximum number of streams", "framerate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "VSM4\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "MNM4\r", "JR24\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TR20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "AV01", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "wav header size < 14", "WAVEFORMATEX support for RIFX files", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "%s://", "avformat_find_stream_info", "0123456789abcdef0123456789ABCDEF", "unknown codec", "unspecified frame size", "unspecified sample format", "unspecified sample rate", "unspecified number of channels", "no decodable DTS frames", "unspecified size", "unspecified pixel format", "no frame in rv30/40 and no sar", "mp4v", "*pkt_buffer", "libavformat/utils.c", "probing stream %d pp:%d\n", "Failed to reallocate probe buffer for stream %d\n", "nothing to probe for stream %d\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "probed stream %d\n", "probed stream %d failed\n", "threads", "--prefix=/Users/wangjianjun/Alan/ffmpeg/ffmpegBuild/libs/ffmpeg-open264-merge/arm64-v8a --arch=arch-arm64 --target-os=android --cc=/Users/wangjianjun/AndroidDev/android-ndk-r15c/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android-gcc --cross-prefix=/Users/wangjianjun/AndroidDev/android-ndk-r15c/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android- --nm=/Users/wangjianjun/AndroidDev/android-ndk-r15c/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin/aarch64-linux-android-nm --sysroot=/Users/wangjianjun/AndroidDev/android-ndk-r15c/platforms/android-21/arch-arm64 --extra-cflags='-I/Users/wangjianjun/Alan/ffmpeg/ffmpegBuild/libs/openh264/arm64-v8a/include ' --extra-ldflags='-L/Users/wangjianjun/Alan/ffmpeg/ffmpegBuild/libs/openh264/arm64-v8a/lib ' --enable-cross-compile --disable-runtime-cpudetect --enable-asm --enable-neon --enable-gpl --enable-nonfree --enable-shared --disable-static --enable-small --enable-libopenh264 --enable-neon --enable-yasm --disable-encoders --disable-decoders --enable-decoder=libopenh264 --enable-decoder=h264 --enable-decoder=mpeg4 --disable-demuxers --enable-demuxer=h264 --enable-demuxer=mov --disable-muxers --disable-parsers --enable-parser=h264 --disable-protocols --enable-protocol=file --disable-debug --disable-doc --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-postproc --enable-avfilter --enable-avdevice --disable-symver", "libavformat license: nonfree and unredistributable", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist && !dst->protocol_blacklist", "Failed to duplicate black/whitelist\n", "Truncating packet of size %d to %ld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "st->internal->avctx->ticks_per_frame", "s->iformat", "DTS %li < %li out of order\n", "invalid dts/pts combination %li\n", "first_dts %s not matching first dts %s (pts %s, duration %ld) in the queue\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%ld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "pipe", "cache", "Reconfiguring buffers to size %ld\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%lx pos_max=0x%lx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%ld %ld %ld / %s %s %s target:%s limit:%ld start:%ld noc:%d\n", "read_timestamp() failed in the middle\n", "read_seek: %d %s\n", "using cached pos_min=0x%lx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%lx pos_limit=0x%lx dts_max=%s\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "Demuxer context update while decoder is open, closing and trying to re-open\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "Ignoring outlier non primary stream starttime %f\n", "Ignoring outlier non primary stream endtime %f\n", "missing_streams", "skip_clear", "mpeg", "mpegts", "Before avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d nb_streams:%d\n", "Failed to open codec in %s\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %ld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "DTS discontinuity in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "max_analyze_duration %ld reached at %ld microseconds st:%d\n", "decoding for stream %d failed\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "skip_changes", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "stream %d: start_time: %0.3f duration: %0.3f\n", "format: start_time: %0.3f duration: %0.3f bitrate=%ld kb/s\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "new_program: id=0x%04x\n", "Chapter end time %ld before start %ld\n", "stream index %d is not valid\n", "%0*d", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "Discarding ID3 tags because more suitable tags were found.\n", "demuxer does not support additional id3 data, skipping\n", " \t\r\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Number of streams exceeds max_streams parameter (%d), see the documentation if you wish to increase it\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "copy", "Failed to open bitstream filter %s for stream %d with codec %s", "Failed to parse creation_time %s\n", "Invalid palette side data\n", "mov,mp4,3gp,3g2,psp,ipod,ismv,f4v", "dvbsub", "dvbtxt", "eac3", "hevc", "loas", "mjpeg_2000", "mpegvideo", "truehd"], "stringidentifiers": ["NULL", "subfile", "start", "protocol_whitelist", "URLContext", "rw_timeout", "AVIOContext", "unknown", "language", "dump_separator", "palette", "main", "effects", "dialogue", "comentary", "emergency", "karaoke", "Output", "Input", "from", "truncate", "blocksize", "follow", "ssegment", "image2", "mime_type", "comment", "genre", "Blues", "Country", "Dance", "Disco", "Grunge", "Oldies", "Other", "Reggae", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Trance", "Classical", "Instrumental", "Acid", "Game", "Gospel", "Noise", "AlternRock", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "PRIV", "GEOB", "APIC", "TCON", "TXXX", "COMM", "encrypted", "compression", "USLT", "TYER", "TDAT", "TIME", "CHAP", "Conductor", "Composer", "Illustration", "compilation", "encoded_by", "TCMP", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "encoder", "lyrics", "c608", "sac3", "alac", "twos", "lpcm", "fLaC", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "pxlt", "root", "handler_name", "iTunSMPB", "cdec", "major_brand", "minor_version", "compatible_brands", "true", "equirectangular", "rotate", "nclx", "nclc", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "firmware", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "model", "original_artist", "performers", "playback_requirements", "original_source", "subtitle", "warning", "location", "timecode", "tmcd", "rtmd", "reel_name", "stsd", "AV1x", "AVup", "apcn", "apch", "dvpp", "dvcp", "mp4s", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "advanced_editlist", "ignore_chapters", "use_mfra_for", "auto", "export_all", "export_xmp", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "NOPTS", "writing", "reading", "AVFormatContext", "avioflags", "direct", "formatprobesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "latm", "nobuffer", "seek2any", "bitexact", "shortest", "autobsf", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "crccheck", "bitstream", "explode", "ignore_err", "careful", "compliant", "aggressive", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "very", "normal", "unofficial", "experimental", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "codec_whitelist", "format_whitelist", "max_streams", "framerate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TR20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "AV01", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "avformat_find_stream_info", "mp4v", "threads", "pipe", "cache", "missing_streams", "skip_clear", "mpeg", "mpegts", "skip_changes", "copy", "dvbsub", "dvbtxt", "eac3", "hevc", "loas", "mjpeg_2000", "mpegvideo", "truehd"], "debugstrings": ["minor_version", "premiere_version", "quicktime_version", "Version %d", "sidx version %u", "version =%d, isom =%d\n", "strictly conform to a older more strict version of the spec or reference software", "GCC: (GNU) 4.9.x 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["libc.so", "libavutil.so", "libavcodec.so", "libz.so", "libm.so"], "elfname": "libavformat.so"}