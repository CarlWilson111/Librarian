{"globalvars": ["icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_W7", "icv_g9_ownpi_AndC_16u_C4R", "icv_h9_ownpi_MaxIndx_32f_C1R", "icv_g9_ownpi_WarpAffine_L_16u_P4", "icv_h9_ownippsSqrt_64f", "icv_g9_ownpi_OrC_16u_C4R", "icv_g9_ownSharpenRow_32f_C1", "icv_g9_ownippiFilterMin_16u_Row", "icv_g9_owniConvert_8s32f_W7", "icv_g9_ownscrDftInv_Prime_64f", "icv_g9_ownpi_AndC_32s_C1R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_W7_sym", "icv_g9_ownippiThreshold_LV_32f_C4", "icv_g9_ownHipass5x5Row_32f", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_3", "icv_g9_ownippiThreshold_V_32f_AC4", "icv_g9_ownpi_Min_8u_C4R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7_sym", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_V8", "icv_g9_ownpi_Max_16s_AC4R", "icv_g9_ownNorm_L2_32f_C1MR_W7", "icv_g9_ownpi_dInterVector_L_32f_C3", "icv_h9_ownpi_Min_8u_C4R", "icv_h9_ownippiFilterMedian_16u_BC4R_5x5", "icv_g9_owniTplNormMean_8u32f_C1R", "icv_g9_ownippiFilterMedianHoriz_16u_C1R_3x1", "icv_g9_ippi_cDftSplit_32fc", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_W7", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C3R_X_V8", "icv_h9_ownpi_dInterVector_NN_16_P4", "own_ipps_dSinCos_G9_ttab", "icv_h9_ownsConj_32fc_T7", "icv_g9_ownippiFilterMin_16s_Row", "icv_g9_ownAConvert_Round32f_16u_AC4R", "icv_g9_ownpi_MinMax_16s_C4R", "icv_g9_ownippsCnvrtFin_32f8u_Sfs", "icv_g9_ownpi_Histogram_FS_32f_C3R", "icv_g9_ownpi_Histogram_16u_C1R", "icv_n0_own_ipps_dLn_P8_ctab", "icv_h9_ownippiFilterMedian_8u_BC4R_3x3", "icv_g9_ownippiFilterMedianCross_16s_C3R_5x5", "icv_g9_ownNorm_Inf_8s_C1MR_V8", "icv_h9_ownHipass5x5Col_8u_C3", "icv_g9_owniSwap_8u_C4C3R", "icv_g9_ownpi_Histogram_BS_16u_C1R", "icv_h9_ownpi_WarpAffine_L_8u_C4", "icv_h9_ownLaplace3x3Row_16s_AC4", "icv_h9_owniCopy32s_C3P3_W7_NT", "icv_h9_ownscDftFwd_Prime_64fc", "icv_h9_owniConvert_32f16s_AC4_W7", "icv_g9_ownpi_dInterVectorClip_L_8u_C4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_V8", "icv_g9_ownpi_Histogram_8u_C4R", "icv_g9_ownpi_Min_16s_C1R", "icv_g9_ownippiFilterMin_8u_Col_AC4", "icv_h9_ownCanny_32f8u_C1R_2_32s_W7", "icv_g9_ownpi_MinMax_16s_AC4R", "own_ipps_dInvSqrt_S9_ttab", "icv_g9_ownNormDiff_Inf_32f_C1MR_W7", "icv_h9_ownpi_WarpAffine_L_32f_C3", "icv_g9_ownippiFilterMedian_16s_C1R_5x5", "icv_g9_ownpi_dInterVectorClip_L_16u_P3", "icv_g9_owniAutoNormMean_8u32s_C1R", "icv_h9_ownpi_WarpAffine_L_32f_C1", "icv_h9_ownscrDftInv_Fact2_32f", "icv_g9_ownSum_8s_C3CMR_V8", "icv_g9_owniCopy32s_C4P4_W7", "icv_h9_ownpi_WarpAffine_L_8u_P3", "icv_g9_ownNormRel_L1_8s_C3CMR_V8", "icv_g9_owns_cBitRev1_Blk", "icv_g9_ownippiFilterMedian_16u_C4R_3x3", "icv_h9_ownippiFilterMedianCross_16s_C3R_5x5", "icv_g9_ownippiThreshold_GV_8u_C4", "icv_g9_ownippiFilterMedianHoriz_8u_BC4R_3x1", "icv_g9_ownpi_WarpAffine_NN_8_AC4", "icv_g9_ownippsCnvrt_16f32f", "own_ipps_dInvSqrt_V8_ctab", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_V8", "icv_h9_ownippiFilterMedianCross_16s_C1R_3x3", "icv_g9_ownpi_dInterVectorClip_L_32f_C1", "icv_g9_owniSet_8u_C1_W7", "icv_g9_ownpi_XorC_32s_C4R", "icv_g9_ownpi_Max_32f_C4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7", "icv_g9_ownpi_CountInRange_32f_C1R", "icv_g9_ownCanny_32f8u_C1R_Mag_W7", "icv_g9_ownippiFilterMedianCross_16u_C3R_5x5", "icv_h9_ownLaplace3x3Row_16s_C3", "icv_g9_ownNormDiff_L2_8u_C3CMR_V8", "icv_g9_owniFlip_32s_C4I_W7", "icv_g9_ownpi_dInterVectorClip_C_8u_C3", "icv_h9_ownscDftInv_Prime_64fc", "icv_h9_ownpi_dInterVector_NN_16_AC4", "icv_g9_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short", "icv_g9_ownippiFilterMedian_8u_C4R_3x3", "icv_g9_ownippiFilterMedian_8u_BC4R_3x3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_W7", "icv_g9_ownSharpenRow_16s_C3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_V8", "icv_h9_ownpi_Max_32f_AC4R", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C3R_3x3_V8", "icv_g9_ownHipass5x5Col_16s_C1", "icv_g9_ownippsCnvrtFin_32f32s_Sfs", "icv_g9_ownpi_AndC_16u_C3R", "icv_h9_ownpi_CountInRange_8u_AC4R", "icv_h9_ownippiFilterMedianHoriz_16u_BC4R_3x1", "icv_g9_ownsFloorOneF", "icv_g9_ownippiFilterMedianCross_16u_C3R_3x3", "own_ipps_sSqrt_P8_ttab", "icv_g9_ownippiFilterMedianHoriz_16s_C1R_5x1", "icv_g9_ownippiFilterMedian_16s_C4R_3x3", "icv_g9_ownpi_dInterVectorClip_NN_16_C1", "icv_h9_ownpi_dInterVector_NN_16_C4", "icv_h9_ownpis_Min_16s_C3", "icv_g9_ownpi_Max_32f_C3R", "icv_g9_ownippiFilterMedianCross_8u_C3R_3x3", "icv_g9_ownpi_WarpAffine_NN_32_C3", "icv_g9_ownippiFilterMedianHoriz_16s_C3R_5x1", "icv_g9_ownpi_dInterVector_NN_8_AC4", "icv_g9_ownCopySubpixIntersect_8u32f_C1R_W7", "icv_h9_ownPrewColV_32f", "icv_g9_ownpi_dInterPoint_C_Plane_32f", "icv_h9_ownippsSqrt_16s_ASM", "icv_g9_owniSwap_32s_C4C3R", "icv_g9_owniSet_16s_C1_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_W7", "icv_g9_ownCopySubpix_8u16u_C1R_Sfs_V8", "icv_g9_ownLaplace3x3Row_16s_AC4", "icv_h9_ownippiFilterMedianCross_8u_C1R_3x3", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_W7", "icv_h9_owniCopy_8u_C1_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_V8", "icv_g9_ownpi_dInterVector_NN_16_AC4", "icv_h9_ownpi_WarpAffine_NN_8_P3", "own_ipps_sAtan2_P8_ctab", "icv_g9_ownHipass5x5Col_8u_AC4", "icv_g9_ownRectStdDev_32s32f_C1R_V8", "icv_h9_ippiFilterMin_32f_Row_A6", "icv_g9_ownpi_Histogram_8u_C1R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_V8", "icv_h9_ownpi_WarpAffine_NN_32_AC4", "icv_h9_ownsPowOne_w7", "icv_g9_ownippiFilterMax_16u_Row", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_W7", "icv_g9_ownpi_OrC_32s_C3R", "icv_g9_ownCopySubpixIntersect_16u_C1R_W7", "own_ipps_sAtan2_P8_ttab", "_ZSt7nothrow", "icv_h9_ownippiFilterMedianCross_16u_C4R_5x5", "icv_h9_ownpi_WarpAffine_L_16u_C1", "icv_g9_ownippiFilterMedian_16s_BC4R_3x3", "icv_g9_ownLaplace3x3Row_8u_C1", "icv_h9_ownpi_Histogram_16u_C1R", "icv_g9_ownNorm_L1_8s_C1MR_V8", "icv_g9_owns_sBitRev1_Blk", "own_ipps_dRound_V8_ctab", "icv_h9_ownpi_dInterVectorClip_C_32f_P", "own_ipps_sSqrt_G9_ttab", "icv_h9_owniConvert_8u32f_AC4_W7", "icv_g9_ownpi_dInterVector_NN_32_C3", "icv_g9_ownscDftFwd_Fact_64fc", "_ZN3tbb8internal8governor22DefaultNumberOfThreadsE", "own_ipps_sAtan2_V8_ctab", "icv_h9_owniExchange_8u_I_A6", "icv_h9_ownsFloorOne", "icv_g9_ownSharpenRow_8u_C1", "icv_n0_own_ipps_sExp_S9_ctab", "own_ipps_sInvSqrt_S9_ttab", "icv_g9_owniTranspose_16u_C4IR_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_V8", "icv_h9_ownpi_idInterPoint_C_Plane_8u", "icv_h9_ownsSinOne_w7p8", "icv_g9_ownNormRel_L2_16u_C3CMR_V8", "icv_h9_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_W7", "icv_h9_ownCopySubpix_8u_C1R_W7", "icv_h9_ownpi_WarpAffine_L_32f_AC4", "icv_g9_ownscDft_Dir_64f", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_W7", "icv_g9_ownSum_32f_C1MR_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_W7", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_2", "icv_h9_ownCopySubpix_8u32f_C1R_new_W7", "icv_g9_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_W7", "icv_g9_ownsrDftInv_Dir_32f", "icv_g9_owns_BitRev2_D", "icv_h9_ownippiFilterMedianCross_8u_C1R_5x5", "icv_g9_ownCopySubpix_16u_C1R_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_V8", "own_ipps_sInvSqrt_S9_ctab", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_V8", "icv_h9_owniCopyConstBorder_C4R_W7", "icv_g9_ownpi_dInterVector_NN_8_C3", "icv_h9_ownpi_dInterVector_NN_32_P3", "icv_h9_ownpi_WarpAffine_L_16u_P4", "icv_g9_ownpi_dInterVector_L_32f_C4", "icv_h9_ownippsCnvrtFin_64f32s_Sfs", "icv_g9_ownpis_Min_8u_C4", "icv_g9_ownpi_WarpAffine_NN_8_C3", "icv_g9_ownSumSq_16u_C1MR_W7", "icv_g9_ippi_cDftMerge_32fc", "icv_g9_ownLaplRow5x5_8u_C3", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_W7", "icv_h9_ownpi_WarpAffine_L_16u_C3", "own_ipps_sAtan2_S9_ctab", "icv_g9_ownpi_AndC_32s_C3R", "own_ipps_dInvSqrt_G9_ctab", "icv_h9_ownscrDftFwd_Prime_64f", "icv_h9_ownpi_dInterVector_NN_32_C4", "icv_g9_ownpis_Min_16s_C4", "icv_g9_ownHipass5x5Col_16s_C3", "icv_h9_owniConvert_16u32f_AC4_W7", "icv_g9_ownippiFilterMedian_16u_C3R_3x3", "icv_g9_owniTranspose_32s_C1R_W7", "icv_h9_ownLaplace3x3Row_8u_C4", "icv_h9_ownscDftInv_Fact_32fc", "icv_h9_ownpis_Max_8u_AC4", "icv_h9_ownpi_idInterPoint_C_Pixel_8u", "icv_g9_ownippiFilterMin_8u_Row", "icv_h9_ownAFilterRow_8u_C1R", "icv_h9_owniTranspose_16u_C1R_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_W7", "icv_n0_own_ipps_dExp_S9_ctab", "_ZN3tbb8internal8governor11BlockingTSIE", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_V8", "icv_g9_ownNormRel_L2_8u_C1MR_V8", "icv_g9_ownpi_WarpAffine_NN_16_P3", "icv_h9_ownippsMagn_16sc16s_Sfs_ASM", "own_ipps_dSinCos_P8_ttab", "icv_n0_own_ipps_sCos_P8_ctab", "icv_n0_own_ipps_sCos_W7_ctab", "icv_g9_ownSq_32f_C3CMR_W7", "icv_h9_ownAConvert32s_16s", "icv_h9_ownpis_Indx_32f_C4", "icv_g9_ownpis_Min_16s_AC4", "icv_h9_ownippsSqrt_32s16s", "icv_g9_owniCorrectAutoNormMean_8u32s_C1R", "icv_h9_owniAutoNormMean_8u32s_C1R", "icv_h9_ownsrDftFwd_Dir_64f", "icv_h9_ownCanny_32f8u_C1R_3_16u_W7", "own_ipps_sCos_V8_ttab", "icv_n0_own_ipps_dSin_P8_ctab", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_W7", "icv_h9_owns_BitRev2_Z", "icv_g9_ownsExpOneF", "icv_g9_ownpi_Sum_16s_C1R", "icv_g9_owniCopy32s_C3P3_W7", "icv_g9_ownpi_WarpAffine_NN_16_P4", "icv_g9_ownippiFilterMedianVert_8u_1x3", "icv_g9_ownpi_WarpAffine_NN_16_C4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_W7", "icv_g9_ownpi_AndC_32s_C4R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_W7", "icv_h9_owns_BitRev2_S", "icv_h9_ownsSet_32s_G9", "icv_g9_ownippiFilterMedianHoriz_16u_BC4R_5x1", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_W7", "icv_n0_own_ipps_sLn_S9_ctab", "icv_g9_ownpi_Xor_8u_C1R", "icv_g9_ownippiFilterMedianVert_16s_1x3", "icv_g9_ownpi_XorC_32s_AC4R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C3R_3x3_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_3x3_V8", "icv_h9_ownpi_Histogram_16u_C4R", "icv_h9_ownCanny_32f8u_C1R_3_32s_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_V8", "icv_h9_ownpi_Max_8u_AC4R", "icv_g9_ownippiFilterMedianHoriz_16s_BC4R_3x1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_W7", "icv_g9_ownsSet_8u_G9", "icv_g9_owniFlip_8u_C4I_W7", "icv_g9_ownAFilterColumn_8u_C1R", "icv_g9_ownippiFilterMin_8u_Col", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7_sym", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_V8", "icv_h9_ownscrDftInv_Fact2_64f", "icv_g9_ownNormRel_L2_16u_C1MR_W7", "icv_g9_ownpi_XorC_16u_C3R", "icv_h9_ownscDftFwd_Fact2_64fc", "icv_g9_ownippsSqrt_16s_ASM", "own_ipps_dRound_P8_ctab", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_V8", "icv_n0_own_ipps_sSin_W7_ttab", "icv_g9_ownippiFilterMedianVert_16s_C4R_1x3", "icv_g9_ownCanny_16s8u_C1R_2_32s_W7", "icv_g9_ownpi_dInterVector_NN_32_P3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_V8", "icv_g9_ownNormDiff_L2_16u_C1MR_W7", "icv_g9_owniSet_8u_C4_W7", "icv_h9_ownpi_Histogram_BS_32f_C1R", "icv_h9_ownpi_Min_8u_C3R", "icv_g9_ownpi_WarpAffine_L_32f_P4", "icv_n0_own_ipps_dLn_S9_ttab", "icv_g9_ownpi_dInterVectorClip_NN_8_AC4", "icv_g9_ownpis_Max_16s_AC4", "icv_g9_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_g9_ownpi_WarpAffine_L_8u_AC4", "icv_g9_ownpi_AndC_8u_C3R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_W7_sym", "icv_h9_ownpi_CountInRange_32f_C3R", "icv_g9_ownsConj_64fc_T7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_W7", "icv_g9_ownippiFilterMedianHoriz_16s_C4R_3x1", "icv_g9_ownpi_dInterVectorClip_NN_16_P3", "icv_g9_owniConvert_32f8s_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_W7", "icv_g9_ownpi_dInterVectorClip_L_8u_C1", "own_ipps_dInvSqrt_W7_ttab", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_V8", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_V8", "icv_g9_ownAFilterRow_16s_C1R", "icv_g9_owniConvert_32f16s_AC4_W7", "icv_h9_ownLaplCol5x5_8u_C1", "icv_g9_ownpi_dInterVector_NN_32_P4", "icv_h9_owniTranspose_32s_C1IR_W7", "icv_g9_owniConvert_32s8s_AC4_W7", "icv_h9_ownpis_Max_16s_AC4", "icv_g9_ownpi_dInterPoint_C_Pixel_32f", "icv_g9_owniConvert_8s32s_AC4_W7", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C3R_5x5_V8", "icv_g9_ownippiThreshold_32f_C3", "icv_g9_ownpi_dInterVectorClip_L_32f_AC4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_W7", "icv_g9_ownpi_WarpAffine_NN_8_C1", "icv_g9_ownCopySubpix_16u32f_C1R_W7", "icv_h9_ownpi_dInterVectorClip_L_16u_P4", "icv_g9_owniTranspose_32s_C4IR_W7", "icv_g9_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_h9_ownippiFilterMedianCross_8u_C4R_3x3", "icv_g9_ownpi_Histogram_BS_32f_C4R", "own_ipps_dRound_V8_ttab", "icv_h9_ownpi_dInterVectorClip_L_32f_AC4", "icv_g9_ownpi_MinMax_8u_AC4R", "icv_g9_ownsSet_32s_G9", "icv_g9_owniCopy8u_AC4_W7", "icv_g9_ownpi_MinMax_8u_C3R", "icv_g9_owniTranspose_32s_C1R_W7_NT", "icv_n0_own_ipps_sLn_S9_ttab", "icv_h9_ownCanny_16s8u_C1R_3_16u_W7", "icv_g9_ownippiThreshold_GLV_32f_C3", "icv_g9_ownpi_Sum_8u_C3R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_V8", "_ZN6CvType5firstE", "_ZN3tbb8internal35the_context_state_propagation_mutexE", "icv_h9_ownscDft_Dir_32fc", "icv_g9_owns_BitRev2_C", "_ZN3tbb8internal8governor6theTLSE", "own_ipps_dRound_W7_ctab", "icv_g9_ownNorm_L2_8u_C3CMR_V8", "icv_h9_ownippiFilterMax_16s_Col", "icv_g9_ownNormDiff_L1_8u_C1MR_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_V8", "icv_g9_ownippiFilterMedianHoriz_16s_BC4R_5x1", "icv_h9_ownippiFilterMedianHoriz_8u_BC4R_3x1", "icv_g9_ownFilterRowBorderPipeline_16s_C1R_X_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_V8", "icv_h9_owniTranspose_8u_C1R_W7", "icv_g9_ownippiFilterMedianCross_8u_C3R_5x5", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_W7", "icv_g9_owniConvert_16s32f_W7", "icv_h9_ownpi_WarpAffine_NN_32_C1", "icv_h9_ownpi_Histogram_16u_C3R", "icv_h9_owns_BitRev2_D", "icv_h9_owniCopy_8u_C1C3R", "icv_h9_ownpi_Max_16s_AC4R", "icv_g9_ownpi_Histogram_BS_32f_C1R", "icv_h9_owniCopy_16s_C3AC4R", "icv_g9_ownCanny_32f8u_C1R_3_16u_W7", "icv_h9_ownippiFilterMedianHoriz_16u_C3R_3x1", "ippConstantOfINF_32f", "icv_g9_owniCopy_8u_C3C1R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7", "icv_h9_ownSharpenRow_32f_AC4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_W7", "icv_g9_ownpi_XorC_8u_C3R", "icv_g9_owniConvert_8u32s_W7", "icv_h9_ownpi_MinIndx_16s_C1R", "icv_h9_owniCopy8u_C4P4_48_A6", "own_ipps_dSin_G9_ctab", "icv_g9_ownpi_dInterVector_L_16u_C4", "icv_g9_ownippiFilterMedianCross_16u_C1R_5x5", "icv_h9_ownpi_dInterVectorClip_C_8u_AC4", "icv_g9_owniSwap_16s_C4C3R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_W7", "icv_h9_ownippsSqrt_16sc_ASM_SF_S", "_ZN3tbb8internal6market9theMarketE", "icv_h9_ownDistanceTransform_5x5_8u32f_C1R_21B", "icv_h9_ownHipass5x5Row_32f", "_ZN2cv15BriskScaleSpace13safetyFactor_E", "icv_h9_owniConvert_16u32f_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_V8", "icv_g9_ownscrDftFwd_Fact2_64f", "icv_h9_ownippiFilterMedianHoriz_8u_C4R_3x1", "icv_h9_ownscrDftInv_Prime_32f", "icv_h9_ownpi_dInterVectorClip_NN_32_C4", "icv_h9_ownpi_dInterVector_L_8u_AC4", "icv_h9_ownippiFilterMax_8u_Col", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_V8", "icv_g9_ownippiFilterMedianVert_8u_1x5", "icv_g9_ownippiFilterMedianHoriz_16u_BC4R_3x1", "icv_g9_owniSwapChannels_8u_C3IR", "icv_h9_ownCopySubpix_32f_C1R_W7_1", "icv_g9_ownpi_Max_8u_AC4R", "icv_g9_ownippiFilterMedianHoriz_16s_C3R_3x1", "icv_g9_ownpi_dInterVectorClip_NN_32_P3", "icv_g9_owns_BitRev1_C", "icv_h9_owns_BitRev1_S", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_V8", "icv_h9_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short", "icv_h9_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss", "icv_h9_ownFilterRowBorderPipeline_16s_C1R_3x3_V8", "_ZN3tbb8internal14__TBB_InitOnce5countE", "icv_g9_DotProd_64f64fc", "icv_g9_ownpi_WarpAffine_NN_16_C3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_V8", "icv_h9_ownpi_dInterVector_NN_16_P3", "icv_g9_ownpi_Min_32f_C4R", "icv_g9_ippiFilterMin_32f_Row_A6", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_W7", "icv_g9_ownpi_Max_8u_C4R", "icv_g9_ownNormDiff_Inf_16u_C3CMR_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_X_V8", "icv_g9_owniConvert_32s8s_W7", "own_ipps_dInvSqrt_V8_ttab", "icv_h9_owns_sBitRev1_Blk", "icv_h9_ownpi_dInterVector_L_16u_AC4", "icv_g9_ownpi_dInterVector_NN_16_C3", "icv_g9_ownpi_OrC_8u_C1R", "icv_g9_ownCopySubpix_8u16u_C1R_Sfs_W7", "icv_n0_own_ipps_dLn_W7_ttab", "icv_g9_owniConvert_32f8u_AC4_W7", "own_ipps_sInvSqrt_W7_ttab", "own_ipps_dSqrt_V8_ctab", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_V8", "icv_g9_ownscDftFwd_Prime_32fc", "icv_g9_owniCopy16sC3Mas", "icv_g9_owniCopy16sC4Mas", "icv_h9_ownHipass5x5Col_32f_AC4", "icv_g9_ownSharpenRow_16s_C1", "icv_g9_ownNormDiff_L1_16u_C1MR_W7", "icv_g9_owns_BitRev2_Z", "icv_h9_owniFlip_16u_C4I_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_V8", "icv_g9_ownpi_MinIndx_8u_C1R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_V8", "icv_h9_ownippiFilterMedianVert_16u_C4R_1x5", "icv_h9_ownippiFilterMedian_16s_BC4R_3x3", "icv_g9_ownippiThreshold_V_8u_C1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_W7", "icv_g9_ownpi_dInterVector_NN_32_C1", "icv_h9_ownippiFilterMedian_16u_C4R_5x5", "icv_h9_ownippiFilterMedianCross_8u_C3R_3x3", "icv_g9_owniCopy_8u_AC4C3R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_W7", "icv_h9_ownHipass5x5Col_32f_C1", "icv_g9_ownippiFilterMedianVert_8u_C4R_1x3", "icv_h9_owniTplNormMean_8u32f_C1R", "icv_g9_ownMean_16u_C1MR_W7", "icv_g9_ownpi_dInterVector_NN_16_P4", "own_ipps_sExp_G9_ttab", "icv_g9_ownippiFilterMedianHoriz_16s_C4R_5x1", "icv_h9_ownpi_dInterVectorClip_NN_16_C3", "icv_g9_ownippiThreshold_16s_C3", "icv_g9_ownDistanceTransform_3x3_8u32f_C1R_21F", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_W7", "icv_g9_ownAFilterRow_8u_C1R", "_ZN3tbb8internal8governor13UsePrivateRMLE", "icv_g9_ownsCopy_8u_repG9", "icv_h9_ownippiFilterMax_16s_Row", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_W7", "icv_h9_ownippsCnvrtFin_32f8s_Sfs", "icv_fft_fix_twiddle_table_32f", "icv_h9_owniCopyReplicateBorder_8u_C1R", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C1R_X_V8", "icv_g9_ownSumSq_8u_C1R_W7", "icv_g9_ownippiFilterMax_16s_Col", "icv_g9_ownippiFilterMedian_8u_C1R_5x5", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_W7", "icv_h9_ownsConj_32fc_I_T7", "icv_g9_ownippiThreshold_GLV_16s_C1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_W7", "icv_h9_ownippiFilterMedianHoriz_16u_BC4R_5x1", "icv_g9_ownCanny_32f8u_C1R_1_32s_W7", "icv_g9_ownippiFilterMax_8u_Col", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_V8", "icv_h9_ownpi_WarpAffine_NN_8_C4", "icv_h9_owniConvert_32s8u_W7", "icv_h9_ownpi_MinIndx_8u_C1R", "icv_g9_owniCorrectAutoNormMean_32f_C1R", "icv_g9_ownCopySubpix_32f_C1R_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_V8", "icv_h9_ownpi_Histogram_FS_32f_C3R", "icv_g9_ownSq_32f_C1MR_W7", "icv_g9_owniCopyConstBorder_C1R_W7", "own_ipps_sInvSqrt_W7_ctab", "icv_g9_ownpi_XorC_32s_C1R", "icv_h9_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK", "icv_g9_ownippiFilterMedianVert_16u_C4R_1x3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Wrap_V8", "icv_h9_ownSharpenRow_32f_C1", "icv_g9_ownDistanceTransform_3x3_8u_C1R_F", "icv_g9_ownippsSqrt_16sc_ASM_SF_S", "icv_n0_own_ipps_dExp_P8_ctab", "own_ipps_sInvSqrt_P8_ctab", "icv_g9_ownpi_WarpAffine_NN_8_P3", "icv_h9_ownCopySubpixIntersect_8u_C1R_W7", "icv_h9_ownCanny_32f8u_C1R_2_16u_W7", "own_ipps_sInvSqrt_P8_ttab", "icv_h9_ownippsSqrt_64fc", "icv_g9_ownpi_Histogram_BS_16s_C1R", "icv_h9_owniCopy_8u_C3AC4R", "icv_g9_ownpis_Max_32f_AC4", "icv_h9_ownpi_dInterVectorClip_L_8u_AC4", "icv_g9_ownscDftInv_Fact_32fc", "icv_g9_ownpi_dInterVectorClip_C_8u_C4", "icv_g9_ownsConvert_16s32s_W7", "icv_g9_ownCanny_16s8u_C1R_Mag_W7", "icv_g9_owniCopy8u_C4P4_44_A6", "icv_g9_ownpis_Max_8u_C3", "icv_g9_ownpi_Sum_8u_C1R", "icv_g9_ownsConvert_64s32s_SfPosFin_W7", "icv_g9_ownpi_XorC_16u_AC4R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7", "icv_h9_ownpi_dInterVectorClip_NN_32_C1", "icv_h9_ownAConvert_Round32s_8u_AC4R", "icv_h9_ownCopySubpix_32f_C1R_W7", "icv_g9_ownLaplRow5x5_32f_C4", "icv_g9_ownippiFilterMin_16u_Col_AC4", "icv_g9_ownsConvert_32s16s_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7", "icv_n0_own_ipps_sExp_W7_ctab", "icv_g9_ownpi_dInterVector_NN_8_P3", "icv_g9_ownippiFilterMin_16s_Col", "icv_g9_ownNormRel_L1_16u_C3CMR_V8", "icv_h9_owniTranspose_32s_C1R_W7", "icv_h9_ownHipass5x5Col_16s_C1", "icv_g9_ippiFilterMin_32f_Col_AC4_A6", "icv_g9_ownsSet_64sc", "icv_g9_ownpi_dInterVector_NN_8_P4", "icv_g9_ownpi_Histogram_16s_C4R", "icv_h9_owniSet16sC1Mas", "icv_g9_ownpi_dInterVector_NN_16_C1", "icv_h9_ownippiFilterMedian_8u_BC4R_5x5", "icv_h9_ownHipass5x5Row_16s", "icv_g9_ownippiThreshold_GLV_32f_C1", "icv_g9_ownscDftFwd_Fact2_32fc", "icv_h9_ownLaplace3x3Row_8u_AC4", "icv_h9_ownippiFilterMedian_16s_C3R_5x5", "icv_g9_ownHipass5x5Col_32f_AC4", "own_ipps_dLn_V8_ctab", "icv_g9_ownippiFilterMedianCross_16u_C4R_5x5", "icv_h9_ownHipass5x5Col_32f_C4", "icv_h9_ownpi_dInterVector_L_32f_C4", "icv_g9_ownNormDiff_Inf_8s_C3CMR_V8", "icv_g9_ownNorm_L1_32f_C3CMR_W7", "icv_n0_own_ipps_sExp_W7_ttab", "icv_g9_ownCopySubpix_8u_C1R_V8", "icv_h9_ownpi_dInterPoint_C_Plane_32f", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7", "icv_h9_owns_dBitRev1_Blk", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_W7", "own_ipps_dCos_G9_ttab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Repl_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_V8", "icv_n0_own_ipps_dCos_S9_ttab", "icv_g9_ownippiFilterMedianHoriz_8u_C3R_5x1", "icv_h9_ownpi_dInterVectorClip_C_8u_C1", "own_ipps_dSqrt_G9_ttab", "icv_g9_ownpi_Histogram_FS_32f_C4R", "icv_g9_ownAFilterRow_16s_C3R", "icv_g9_ownNorm_L2_16u_C1MR_W7", "icv_g9_ownippiFilterMedian_8u_C1R_3x3", "icv_g9_ownippsCnvrtFin_32f16s_Sfs", "icv_g9_ownippiFilterMedianHoriz_8u_BC4R_5x1", "icv_h9_ownippiFilterMin_32f_Row", "icv_h9_ownpi_dInterVector_NN_8_C4", "icv_h9_ownscrDftFwd_Fact2_32f", "icv_h9_ownAFilterColumn_8u_C1R", "icv_h9_ownippiFilterMax_32f_Col", "icv_g9_ownpi_dInterVectorClip_L_32f_P4", "icv_g9_ownpis_Min_32f_C3", "icv_g9_owniCopy8u_C1C4_W7", "icv_h9_ownscDftInv_Fact2_64fc", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C3R_5x5_V8", "icv_h9_ownpi_dInterVector_L_16u_P3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_W7", "icv_g9_ownLaplCol5x5_8u_C4", "icv_g9_ownpi_WarpAffine_NN_32_P3", "icv_g9_ownNorm_L2_32f_C3CMR_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_W7", "icv_n0_own_ipps_dCos_W7_ttab", "icv_h9_ownLaplRow5x5_8u_C1", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_V8", "icv_h9_ownippiFilterMedianHoriz_16s_BC4R_3x1", "icv_h9_owniTplNormMean_32f_C1R", "icv_h9_ownpi_WarpAffine_NN_8_P4", "icv_h9_owniTranspose_16u_C4IR_W7", "icv_h9_ownCopySubpixIntersect_8u16u_C1R_Sfs_W7", "icv_g9_ownippiFilterMedianCross_16u_C1R_3x3", "icv_g9_ownpi_WarpAffine_L_32f_AC4", "icv_g9_ownpis_Max_16s_C3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_W7", "icv_h9_ownCanny_16s8u_C1R_2_16u_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_W7", "icv_g9_ownLaplace3x3Row_16s_C3", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C1R_5x5_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_V8", "icv_h9_owniCopy8u_C4C1_W7", "icv_g9_ownPrewColV_32f", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_V8", "icv_ippJumpIndexForMergedLibs", "icv_g9_ownDistanceTransform_5x5_8u_C1R_Big_F_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_W7", "icv_h9_ownippsCnvrtFin_32f8u_Sfs", "icv_g9_ownpi_Max_8u_C3R", "icv_g9_ownpi_WarpAffine_NN_32_C4", "icv_g9_ownsCeilOne", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_W7", "icv_g9_owns_BitRev1_4", "icv_h9_ownippiFilterMedianHoriz_8u_C3R_5x1", "icv_g9_ownpi_WarpAffine_L_16u_AC4", "icv_g9_ownNormRel_Inf_8u_C1MR_W7", "icv_g9_ownpi_OrC_16u_AC4R", "icv_h9_ownpis_Max_32f_C3", "icv_g9_ownNorm_Inf_8u_C1MR_W7", "icv_g9_owniConvert_16u32f_AC4_W7", "icv_h9_ownpis_Min_8u_AC4", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_W7", "icv_h9_ownCopySubpix_16u_C1R_W7", "icv_g9_ownLaplace3x3Row_32f_AC4", "icv_h9_ippi_cDftMerge_32fc", "icv_g9_ownippiFilterMedian_16s_C3R_3x3", "icv_g9_ownippiFilterMedianVert_16u_1x5", "icv_h9_ownCanny_16s8u_C1R_1_32s_W7", "own_ipps_sSqrt_G9_ctab", "icv_g9_owniCopy32s_P4C4_W7", "icv_g9_owniTranspose_32s_C4R_W7", "icv_g9_ownippsSqrt_16sc_ASM_ZR", "own_ipps_dRound_S9_ttab", "own_ipps_sSqrt_W7_ttab", "icv_h9_ownpi_CountInRange_8u_C3R", "icv_g9_ownFilterRowBorderPipeline_16s_C1R_5x5_V8", "own_ipps_dRound_G9_ttab", "icv_g9_ownSharpenRow_32f_AC4", "own_ipps_dExp_G9_ttab", "icv_h9_ownSharpenRow_8u_C3", "icv_g9_ownippiFilterMedianHoriz_16u_C3R_3x1", "icv_h9_owniConvert_32s8u_AC4_W7", "icv_g9_ownLaplace3x3Row_8u_C4", "icv_g9_owniSwapChannels_8u_C3R", "icv_g9_ownLaplRow5x5_32f_C3", "icv_g9_ownpi_dInterVectorClip_NN_32_C1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7", "icv_g9_ownLaplRow5x5_16s_C3", "icv_g9_ownippiFilterMedianHoriz_8u_C3R_3x1", "icv_h9_ownippiFilterMedianCross_8u_C3R_5x5", "icv_g9_ownCanny_16s8u_C1R_1_16u_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7_sym", "icv_g9_ownpi_CountInRange_8u_AC4R", "icv_h9_ownpi_dInterVectorClip_C_8u_P4", "icv_g9_ownippiFilterMedianHoriz_16u_C4R_5x1", "icv_g9_owniSet_8u_C3_W7", "icv_g9_ownNorm_L1_32f_C1MR_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_W7", "icv_g9_ownippiFilterMin_16u_Col", "icv_g9_ownSumSq_8u_C3CR_W7", "icv_h9_ownHipass5x5Col_32f_C3", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7_sym", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_V8", "icv_h9_ownpi_dInterVector_NN_8_P3", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_V8", "icv_g9_ownHipass5x5Col_32f_C4", "icv_g9_ownLaplace3x3Row_32f_C4", "icv_g9_ownsSqrtOne", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_V8", "icv_h9_ownsConj_64fc_T7", "icv_g9_ownpi_Min_8u_C3R", "icv_g9_ownippsCnvrtFin_32f8s_Sfs", "own_ipps_dRound_W7_ttab", "own_ipps_sInvSqrt_G9_ctab", "icv_h9_ownsPowOne", "icv_h9_ownippiFilterMedianVert_8u_C4R_1x3", "icv_h9_owniCopy_8u_AC4_A6", "icv_g9_ownpi_dInterVectorClip_L_8u_P3", "icv_h9_ownpis_Min_8u_C3", "icv_h9_owniCopy8u_C1C4_W7", "icv_n0_own_ipps_sCos_P8_ttab", "icv_g9_ownAFilterRow_16s_AC4R", "icv_g9_ownNormDiff_Inf_8u_C1MR_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_V8", "icv_g9_ownDistanceTransform_3x3_8u32f_C1R_21B", "icv_g9_ownippiFilterMedianCross_8u_C4R_3x3", "icv_h9_ownHipass5x5Col_16s_C3", "icv_g9_ownsSinOne", "icv_g9_ownLaplace3x3Row_16s_C4", "icv_g9_ownemmssfen", "icv_g9_ownFilterRowBorderPipeline_16s_C1R_3x3_V8", "icv_n0_own_ipps_sSin_P8_ttab", "icv_h9_owniCopy16sC1Mas", "icv_g9_owniCopy_8u_C1_W7", "icv_h9_ownsFloorOneF", "icv_g9_owniCopy16s_AC4_W7", "icv_g9_ownLaplace3x3Row_32f_C3", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_3", "icv_g9_ownpi_idInterPoint_C_Plane_8u", "icv_g9_owniSet_8u_C1M_W7", "icv_h9_ownDistanceTransform_3x3_8u_C1R_F_ND", "icv_h9_ownippiFilterMedianHoriz_8u_BC4R_5x1", "icv_h9_owniTranspose_8u_C3R", "icv_g9_ownippiFilterMedianCross_8u_C1R_5x5", "icv_g9_ownpi_dInterVectorClip_L_16u_C1", "icv_g9_ownippiFilterMedianHoriz_8u_C4R_3x1", "icv_g9_ownNormRel_L1_8u_C1MR_W7", "icv_g9_ownBFilterColumn_8u_C1R", "icv_g9_ownpi_Sum_8u_C4R", "icv_g9_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK", "icv_h9_ownippiFilterMin_16u_Col_AC4", "icv_g9_ownsrDftFwd_Dir_64f", "icv_h9_ownscrDftFwd_Fact_64f", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_W7", "icv_h9_ownpi_dInterVectorClip_L_8u_C4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_V8", "icv_h9_ownpi_WarpAffine_NN_16_P3", "icv_g9_owniSwap_8u_C3C4R", "icv_h9_ownpi_dInterVectorClip_L_32f_C3", "icv_g9_ownippiThreshold_8u_C3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_W7", "own_ipps_dSinCos_S9_ttab", "icv_g9_owniCopyConstBorder_C4R_W7", "icv_n0_own_ipps_sCos_S9_ttab", "icv_h9_ownpi_dInterVector_L_8u_P4", "icv_g9_ownpi_MaxIndx_8u_C1R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7_sym", "icv_h9_ownippiFilterMin_16s_Col_AC4", "own_ipps_dExp_V8_ttab", "icv_h9_ownCanny_16s8u_C1R_1_16u_W7", "_ZN3tbb8internal8governor22is_speculation_enabledE", "icv_h9_ownippiFilterMedianHoriz_8u_C4R_5x1", "icv_g9_ownpis_Max_32f_C4", "icv_g9_ownRectStdDev_32f_C1R_W7", "icv_g9_ownCopySubpixIntersect_8u_C1R_W7", "icv_g9_ownpi_dInterVector_L_16u_P3", "own_ipps_dSin_V8_ctab", "icv_g9_ownpi_dInterVector_L_32f_C1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Mirr_V8", "icv_g9_ownsCopy_8u_G9", "icv_g9_ownippiThreshold_LV_8u_C4", "icv_h9_ownpi_WarpAffine_L_32f_P3", "icv_g9_ownCopySubpixIntersect_16u32f_C1R_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_V8", "icv_h9_ownippiFilterMedianHoriz_16s_C3R_3x1", "own_ipps_sCos_G9_ttab", "icv_g9_ownsSqrtOneF", "icv_n0_own_ipps_dExp_W7_ttab", "icv_h9_ownpi_Histogram_16s_C4R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_W7", "icv_h9_ownpi_MinMax_16s_AC4R", "icv_g9_ownNormDiff_L1_8u_C3CMR_V8", "icv_g9_ownLaplRow5x5_16s_C1", "icv_h9_ownLaplRow5x5_16s_C1", "icv_g9_ownAConvert_Round32s_8u_AC4R", "icv_g9_ownpi_OrC_32s_C4R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_W7", "icv_h9_ownHipass5x5Row_8u", "icv_g9_ownLaplCol5x5_32f_C4", "icv_g9_ownCopySubpixIntersect_32f_C1R_W7", "icv_g9_ownpi_dInterVectorClip_L_16u_P4", "icv_g9_ownCopySubpix_8u32f_C1R_V8", "icv_g9_ownCopySubpix_32f_C1R_V8_1", "icv_h9_ownsfen", "icv_g9_ownippiFilterMedianCross_16s_C3R_3x3", "own_ipps_dSqrt_W7_ctab", "icv_g9_owniSwap_32s_C3C4R", "icv_h9_ownLaplRow5x5_32f_C3", "icv_g9_ownpi_dInterVectorClip_NN_8_C3", "icv_h9_ownpi_WarpAffine_L_16u_C4", "icv_h9_ownSharpenRow_16s_C4", "icv_h9_ownpi_Histogram_FS_32f_C4R", "icv_h9_ownpi_dInterVector_L_8u_P3", "icv_h9_ownippiFilterMedianVert_8u_C4R_1x5", "icv_g9_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss", "icv_h9_ownSharpenRow_8u_AC4", "icv_g9_ownpi_WarpAffine_NN_32_AC4", "icv_n0_own_ipps_sExp_P8_ctab", "icv_g9_ownippiFilterMedian_16u_C1R_5x5", "icv_g9_owniCopy_8u_AC4_A6", "icv_g9_ownpi_And_16u_AC4R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_V8", "icv_g9_DotProd_64fc", "icv_g9_ownAFilterRow_8u_C3R", "icv_h9_ownLaplRow5x5_8u_C4", "own_ipps_dCos_V8_ctab", "icv_h9_ownpis_Max_32f_AC4", "icv_h9_ownpis_Max_8u_C4", "icv_g9_owniSwap_16s_C3C4R", "icv_h9_ownpi_Min_16s_AC4R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_V8", "icv_g9_ownpi_Max_8u_C1R", "icv_h9_ownAConvert_Round32s_8u", "icv_g9_ownpi_Histogram_FS_32f_AC4R", "icv_g9_ownpi_Or_8u_C1R", "icv_g9_ownpi_dInterVectorClip_C_8u_P3", "icv_h9_owniCopy_8u_strm", "icv_h9_ownpis_Max_16s_C3", "own_ipps_dRound_P8_ttab", "icv_g9_ownpi_dInterVector_NN_8_C4", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_V8", "icv_h9_ownpi_WarpAffine_L_8u_P4", "icv_h9_ownCanny_16s8u_C1R_Mag_W7", "icv_h9_owniFlip_8u_C4I_W7", "icv_h9_ownpis_Max_16s_C4", "icv_g9_ownsExpOneF_w7", "icv_g9_ownpi_dInterVector_NN_16_C4", "icv_g9_ownpi_Min_8u_AC4R", "icv_n0_own_ipps_dCos_P8_ttab", "icv_g9_ownNormDiff_L2_8s_C1MR_W7", "icv_h9_ownsCopy_8u_inv", "icv_h9_ownippiFilterMedian_16s_C3R_3x3", "icv_g9_ownSumSq_32f_C3CR_smallsize_W7", "icv_g9_owniSet_16s_C4_W7", "icv_h9_ownpi_Histogram_BS_32f_C4R", "icv_h9_owniCopy_8u_inv", "icv_g9_ownscrDftFwd_Fact_64f", "icv_g9_owniCopy16sC1Mas", "icv_g9_ownpi_dInterVectorClip_L_16u_AC4", "icv_g9_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss", "icv_g9_ownpi_MaxIndx_32f_C1R", "icv_g9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7", "icv_h9_ownippiFilterMin_16u_Row", "icv_h9_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK", "icv_h9_owniCopy8u_C4P4_44_A6", "icv_h9_ownpi_dInterVector_NN_32_P4", "icv_g9_ownpi_WarpAffine_NN_8_C4", "icv_g9_ownpi_Histogram_16s_C1R", "icv_g9_ownLaplCol5x5_16s_C1", "icv_g9_ownNorm_Inf_16u_C1MR_W7", "own_ipps_sLn_G9_ttab", "icv_h9_ownippiFilterMin_32f_Col_AC4", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_1", "icv_g9_ownAConvert_Round32s_16s_AC4R", "icv_g9_ownNorm_L2_8s_C1MR_W7", "icv_g9_ownLaplCol5x5_16s_C4", "icv_h9_ownpi_Min_16s_C4R", "icv_h9_ownpi_WarpAffine_NN_16_C3", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_V8", "icv_g9_owniSet_16s_C3_W7", "own_ipps_dRound_S9_ctab", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_W7", "icv_h9_ownpi_dInterVectorClip_NN_16_P3", "icv_h9_ownAConvertOffset32s_8u", "_ZN3tbb8internal14__TBB_InitOnce18InitializationDoneE", "icv_h9_ownsCosOne_w7p8", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_3x3_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_W7", "icv_g9_ownpi_And_32s_AC4R", "icv_g9_ownNormDiff_Inf_8u_C3CMR_V8", "icv_g9_ownSharpenRow_8u_AC4", "icv_g9_owniFlip_8u_C4_W7", "icv_g9_ownippsCnvrt_16f16s_Asm", "icv_g9_ownCopySubpix_8u32f_C1R_new_V8", "icv_h9_owniConvert_16s32f_W7", "own_ipps_sSin_G9_ctab", "icv_h9_ownpi_dInterVectorClip_NN_8_AC4", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_V8", "icv_g9_ownpi_WarpAffine_L_16u_C4", "icv_g9_ownSumSq_32f_C1MR_W7", "icv_h9_ownDistanceTransform_3x3_8u_C1R_F", "icv_h9_ownpi_dInterVectorClip_L_16u_C4", "icv_h9_ownippiFilterMax_16u_Col", "icv_g9_ownscDftFwd_Prime_64fc", "icv_h9_ownscDftInv_Prime_32fc", "icv_g9_ownAConvert32s_8u_AC4R", "icv_h9_ownpi_dInterVectorClip_L_8u_C3", "icv_h9_ownpi_WarpPC", "icv_g9_ownSumSq_16u_C3CR_W7", "icv_g9_ownSumSq_16u_C1R_W7", "icv_h9_ownsAtan2One", "icv_g9_ownCopySubpix_16u32f_C1R_new_V8", "icv_g9_ownpi_MinIndx_32f_C1R", "icv_h9_ownpi_dInterVector_L_32f_C3", "icv_h9_ownpis_Min_16s_AC4", "icv_g9_owns_BitRev2_4", "icv_g9_ippiThreshold_32f_AC4_A6asm", "icv_g9_ownNormRel_Inf_16u_C3CMR_V8", "icv_g9_ownpi_Histogram_8u_C3R", "icv_h9_ownHipass5x5Col_16s_AC4", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_V8", "icv_g9_owniCopy8u_P3C3_W7", "icv_g9_ownpi_dInterVectorClip_NN_16_AC4", "icv_g9_ownSumSq_32f_C3CMR_W7", "icv_h9_ownippiFilterMax_16s_Col_AC4", "icv_g9_owniCopy_16s_AC4C3R", "icv_h9_ownpi_Min_32f_AC4R", "icv_g9_ownDistanceTransform_3x3_8u_C1R_B", "icv_h9_ownsZero_8u_G9", "icv_h9_ownCopySubpixIntersect_32f_C1R_W7", "icv_g9_ownsPowOne", "icv_g9_ownippiThreshold_GLV_16s_C3", "icv_h9_ownsConj_64fc_I_T7", "icv_h9_ownpi_Max_8u_C4R", "icv_h9_ownpi_dInterVectorClip_NN_8_C3", "icv_g9_owniCrossCorrValid_32f_C1R", "icv_h9_ownpi_WarpAffine_L_16u_P3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_W7", "own_ipps_dSinCos_V8_ttab", "icv_g9_ownHipass5x5Col_8u_C4", "icv_h9_ownpi_WarpAffine_L_8u_AC4", "icv_g9_ownCopySubpix_8u32f_C1R_new_W7", "icv_h9_owniTranspose_16u_C4R_W7", "icv_h9_owniSet_32f_C4_W7", "icv_h9_ownpi_WarpAffine_NN_8_AC4", "icv_g9_ownCopySubpix_8u_C1R_W7", "icv_h9_ownippiFilterMedianHoriz_16u_C4R_3x1", "icv_g9_ownippsSqrt_64f", "icv_g9_ownSharpenRow_32f_C4", "icv_h9_ownippiFilterMedianCross_16u_C1R_5x5", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_V8", "icv_h9_ownLaplace3x3Row_32f_C3", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_W7", "icv_g9_ownscrDftInv_Fact_64f", "own_ipps_sAtan2_W7_ctab", "icv_g9_ownippiFilterMax_16s_Row", "icv_h9_ownBFilterColumn_8u_C1R", "icv_n0_own_ipps_dLn_S9_ctab", "icv_g9_ownNormRel_L1_8u_C3CMR_V8", "icv_h9_ownpi_Max_32f_C3R", "icv_h9_ownpi_MinMax_16s_C4R", "__svml4ipp_sexp_data", "icv_g9_ownippiFilterMin_16s_Col_AC4", "own_ipps_sLn_V8_ttab", "icv_g9_ownCopySubpix_8u32f_C1R_W7", "own_ipps_dSin_V8_ttab", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7_sym", "icv_h9_ownpi_dInterVectorClip_L_32f_P3", "icv_g9_ownAConvertOffset32s_8u", "own_ipps_dLn_G9_ctab", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_W7", "icv_n0_own_ipps_sSin_P8_ctab", "icv_g9_ownpi_Sum_32f_AC4R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_W7", "icv_h9_ownLaplRow5x5_32f_C1", "icv_g9_ownippiFilterMedianCross_8u_C1R_3x3", "icv_g9_ownippiThreshold_8u_C1", "icv_g9_ownCopySubpix_16u_C1R_V8", "icv_h9_ownDistanceTransform_3x3_8u32f_C1R_21B", "icv_g9_owniCopy_16s_C3AC4R", "icv_g9_ownpi_CountInRange_32f_AC4R", "icv_h9_ownpi_Histogram_BS_16s_C1R", "icv_h9_ownippiFilterMedian_8u_C3R_5x5", "icv_g9_ownscDft_Dir_32f", "icv_g9_ownscrDftFwd_Fact_32f", "icv_h9_ownippiFilterMax_8u_Col_AC4", "icv_g9_ownpi_dInterVectorClip_L_32f_C3", "icv_g9_owniAutoNormMean_32f_C1R", "icv_g9_ownNormRel_L2_8s_C3CMR_V8", "own_ipps_sInvSqrt_V8_ctab", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_V8", "icv_g9_ownpi_MinIndx_16s_C1R", "icv_g9_ownippiFilterMin_32f_Col_AC4", "icv_h9_ownpis_Indx_8u_C3", "icv_h9_ownpi_dInterVector_NN_8_AC4", "icv_h9_ownippiFilterMax_8u_Row", "icv_g9_owniExchange_8u_I_A6", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7", "icv_h9_ownsCopy_8u_G9", "icv_g9_ownpi_Min_16s_C4R", "own_ipps_sAtan2_G9_ctab", "icv_g9_ownLaplRow5x5_8u_C1", "icv_h9_owniCopy32s_P4C4_W7", "icv_h9_ownHipass5x5Col_8u_C4", "own_ipps_dExp_G9_ctab", "icv_g9_ownippiThreshold_32f_C1", "icv_g9_ownpi_dInterVector_L_32f_P4", "own_ipps_sExp_V8_ctab", "icv_h9_owniConvert_32s8s_W7", "icv_g9_ownippsCnvrt_32f16f_Asm", "icv_h9_ownippiFilterMedianHoriz_16s_C3R_5x1", "icv_g9_ownpi_dInterVector_NN_32_C4", "icv_h9_ownCanny_32f8u_C1R_1_32s_W7", "icv_g9_ownippsSqrt_32f", "icv_g9_ownNormRel_Inf_16u_C1MR_W7", "icv_g9_owniCopy_8u_C1C3R", "icv_h9_ownpi_dInterVector_NN_32_C3", "icv_g9_ownscrDftInv_Fact_32f", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_V8", "icv_g9_ownSum_16u_C3CMR_V8", "icv_h9_owniCopy_8u_strmfull", "icv_g9_ownpi_dInterVector_L_16u_C1", "icv_h9_ownpi_dInterVectorClip_C_32f_C", "icv_h9_ownAConvert32s_8u", "icv_h9_ownsrDftInv_Dir_32f", "icv_g9_ownpi_Or_32s_AC4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_W7", "icv_g9_ownpi_Or_8u_AC4R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_V8", "icv_n0_own_ipps_sCos_S9_ctab", "icv_g9_ippiFilterMax_32f_Col_AC4_A6", "icv_h9_ownpi_MinMax_8u_AC4R", "icv_h9_owns_BitRev1_D", "icv_h9_ownscDft_Dir_64f", "icv_g9_ownpi_CountInRange_8u_C3R", "icv_h9_ownSharpenRow_32f_C3", "icv_g9_ownippsCnvrt_32f16s_Sfs", "icv_h9_owniConvert_8s32s_AC4_W7", "ippConstantOfNAN_32f", "icv_h9_ownemmssfen", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_W7", "icv_h9_ownippiFilterMedianCross_16u_C3R_3x3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_V8", "own_ipps_sLn_G9_ctab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_V8", "icv_h9_owniFlip_32s_C4_W7", "icv_h9_ownippiFilterMedian_8u_C4R_3x3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_W7", "icv_h9_ownippiFilterMedianCross_16s_C4R_3x3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_V8", "icv_g9_ownDistanceTransform_5x5_8u32f_C1R_21B", "own_ipps_sSqrt_W7_ctab", "icv_h9_ownpi_dInterVectorClip_L_16u_AC4", "icv_g9_owniCopyReplicateBorder_8u_C1R", "icv_h9_ownpi_dInterVector_L_32f_P4", "icv_h9_ownpi_dInterVectorClip_NN_32_AC4", "icv_h9_ownpi_Histogram_16s_C3R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_W7", "icv_h9_owns_BitRev1_C", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_W7", "icv_h9_ownpi_Histogram_16s_C1R", "icv_h9_ownippiFilterMedian_16s_C4R_3x3", "icv_h9_owniConvert_16s32f_AC4_W7", "icv_h9_ownLaplace3x3Row_16s_C4", "icv_g9_ownippiThreshold_V_32f_C3", "icv_g9_ownippiFilterMedian_16s_BC4R_5x5", "icv_g9_ownpi_AndC_8u_C4R", "icv_g9_ownippiFilterMedianCross_16s_C4R_3x3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_W7", "_ZN3tbb8internal20AllocateSchedulerPtrE", "icv_h9_ownippiFilterMax_32f_Col_AC4", "icv_h9_ownDistanceTransform_3x3_8u_C1R_B", "icv_g9_ownpi_dInterVector_L_16u_AC4", "icv_h9_ownsrDftInv_Dir_64f", "icv_g9_ownCanny_32f8u_C1R_2_32s_W7", "_ZN2cv15BriskScaleSpace10basicSize_E", "icv_h9_owniCopy8u_P3C3_W7", "icv_h9_ownCanny_16s8u_C1R_3_32s_W7", "icv_g9_ownippiFilterMax_8u_Col_AC4", "icv_g9_owniConvert_16u8u_T7", "icv_g9_ownNorm_Inf_32f_C3CMR_W7", "icv_h9_ownpi_dInterVectorClip_C_8u_P3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_W7", "icv_g9_ownNorm_L2_16u_C3CMR_V8", "icv_h9_ownpis_Max_8u_C3", "icv_g9_ownippiThreshold_V_32f_C1", "icv_h9_ownFilterRowBorderPipeline_16s_C1R_5x5_V8", "icv_g9_ownpi_dInterVector_NN_8_C1", "own_ipps_sSin_V8_ttab", "own_ipps_sAtan2_S9_ttab", "icv_h9_ownscDft_Dir_64fc", "icv_g9_ownippiFilterMedian_16s_C1R_3x3", "icv_h9_ownsSet_8u_G9", "icv_h9_ownDistanceTransform_5x5_8u_C1R_New_F_W7", "icv_g9_owniConvert_32f16u_AC4_W7", "icv_h9_ownpi_dInterVector_L_16u_C3", "icv_g9_ownSumSq_16u_C3CMR_P8", "icv_g9_ownNorm_L1_8u_C1MR_W7", "icv_g9_ownpi_Xor_32s_AC4R", "icv_g9_ownHipass5x5Col_16s_C4", "icv_h9_ownippiFilterMin_16u_Col", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_W7", "icv_h9_owns_BitRev2_C", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_W7", "icv_g9_ownpi_WarpAffine_L_8u_P4", "icv_h9_owniTranspose_32s_C4R_W7", "icv_n0_own_ipps_dCos_W7_ctab", "icv_g9_owns_BitRev1_Z", "icv_g9_ownpi_dInterVectorClip_NN_16_P4", "icv_g9_ownsConvert_8s16s_W7", "icv_h9_ownLaplRow5x5_8u_C3", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_V8", "icv_h9_ownAFilterRow_8u_C3R", "icv_g9_ownNormRel_Inf_8u_C3CMR_V8", "icv_g9_ownippiThreshold_16s_C1", "icv_g9_ownHipass5x5Frs_8u", "icv_g9_ownCopySubpix_16u32f_C1R_new_W7", "icv_g9_ownSumSq_32f_C1R_smallsize_W7", "icv_g9_ownpi_dInterVector_NN_16_P3", "icv_h9_ownpi_dInterVector_L_8u_C4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7_sym", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Repl_V8", "icv_g9_ownippiThreshold_GLV_16s_AC4", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_W7", "icv_g9_ownLaplRow5x5_16s_C4", "icv_g9_ownpi_dInterVectorClip_NN_16_C3", "icv_h9_ownscrDftInv_Fact_64f", "icv_g9_owniConvert_32f16s_W7", "icv_g9_owns_dBitRev1_Blk", "icv_g9_ownpi_Sum_16s_AC4R", "own_ipps_sCos_G9_ctab", "icv_g9_ownpi_Max_16s_C3R", "icv_h9_ownCopySubpixIntersect_16u32f_C1R_W7", "icv_g9_ownCanny_16s8u_C1R_3_16u_W7", "icv_g9_ownpi_dInterVectorClip_NN_32_C4", "icv_h9_ownsExpOne_w7", "own_ipps_sSinCos_S9_ctab", "icv_h9_ownpi_WarpAffine_NN_8_C1", "icv_h9_owniCopy32s_C4P4_W7_NT", "icv_g9_ownippiFilterMedianCross_8u_C4R_5x5", "icv_h9_ownLaplCol5x5_8u_C4", "own_ipps_sSqrt_P8_ctab", "icv_g9_ownsConj_64fc_I_T7", "icv_h9_ownpi_dInterVectorClip_L_32f_C4", "icv_g9_ownpi_Min_32f_C3R", "icv_g9_ownippiFilterMedianHoriz_16u_C3R_5x1", "icv_g9_ownsrDftFwd_Dir_32f", "icv_g9_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK", "icv_g9_ownpis_Max_16s_C4", "icv_g9_ownpi_dInterVectorClip_NN_32_P4", "icv_h9_ownpi_Histogram_BS_32f_C3R", "icv_g9_ownNormDiff_Inf_8s_C1MR_W7", "icv_g9_ownscrDftInv_Fact2_64f", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7", "icv_h9_owns_BitRev1_8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_V8", "icv_g9_ownpi_WarpAffine_L_32f_C1", "icv_g9_ownpi_AndC_16u_AC4R", "icv_g9_ownippsMagn_32fc32f", "icv_h9_ownippsSqrt_16sc_ASM_ZR", "icv_h9_ownpi_dInterVector_NN_32_AC4", "icv_g9_ownpi_dInterVectorClip_NN_32_AC4", "icv_h9_ownscrDftFwd_Prime_32f", "own_ipps_dInvSqrt_S9_ctab", "icv_h9_ownippsCnvrtFin_32f16u_Sfs", "icv_g9_ownscDftInv_Fact_64fc", "icv_g9_ownippiFilterMedian_16u_C1R_3x3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_V8", "icv_g9_ownNorm_L2_8u_C1MR_W7", "icv_g9_ownippiFilterMedianVert_16u_C4R_1x5", "icv_h9_ownLaplace3x3Row_8u_C1", "icv_h9_ownippiFilterMedianVert_16u_C4R_1x3", "icv_g9_ownHipass5x5Col_8u_C1", "icv_h9_ownsSqrtOne", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Wrap_V8", "icv_g9_ownDistanceTransform_5x5_8u_C1R_New_F_W7", "icv_g9_ownsZero_8u_G9", "icv_h9_ownpi_Min_32f_C3R", "icv_h9_owniCorrectAutoNormMean_32f_C1R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_V8", "icv_h9_ippiFilterMin_32f_Col_AC4_A6", "icv_h9_ownpi_CountInRange_32f_C1R", "icv_h9_ownpi_WarpAffine_NN_32_C4", "icv_n0_own_ipps_dExp_W7_ctab", "icv_g9_ownpi_OrC_16u_C3R", "icv_h9_ownscDft_Dir_32f", "icv_g9_ownsConj_16sc_T7", "icv_g9_ownippiThreshold_LV_16s_C4", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_V8", "icv_g9_owniCopy32s_P3C3_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_V8", "icv_h9_ownpi_dInterVectorClip_L_16u_C1", "icv_h9_ownCopySubpix_16u32f_C1R_new_W7", "icv_h9_ownpi_dInterVectorClip_NN_8_C1", "icv_h9_ownsZero_8u_repG9", "icv_g9_ownpi_MinMax_16s_C1R", "icv_h9_ownpis_Min_8u_C4", "icv_g9_ownippiFilterMedian_8u_C4R_5x5", "icv_h9_ownSharpenRow_16s_AC4", "icv_g9_ownpi_dInterVectorClip_L_16u_C3", "icv_g9_ownpi_dInterVector_L_8u_C3", "icv_h9_ownpi_dInterVector_NN_8_C1", "icv_g9_ownpi_WarpAffine_L_32f_P3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_V8", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_W7", "icv_g9_ownippsCnvrt_32f8s_Sfs", "icv_g9_ownippiThreshold_32f_AC4", "icv_h9_ownpi_dInterVectorClip_L_32f_P4", "icv_g9_ownippiThreshold_V_16s_AC4", "icv_h9_ownpi_MinMax_8u_C4R", "icv_h9_ownAConvert32s_8u_AC4R", "icv_g9_ownsExpOne_w7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_V8", "icv_h9_ippiFilterMax_32f_Col_AC4_A6", "icv_n0_own_ipps_dSin_S9_ttab", "icv_n0_own_ipps_dSin_W7_ttab", "icv_h9_ownLaplRow5x5_16s_C4", "icv_h9_ownippiFilterMedian_16u_C3R_3x3_palign", "icv_h9_ownFilterRowBorderPipeline_16s_C1R_X_V8", "icv_g9_owniConvert_8u32f_AC4_W7", "icv_g9_ownscrDftFwd_Prime_64f", "icv_g9_ownLaplace3x3Row_8u_C3", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_X_W7", "icv_h9_owns_BitRev2_4", "icv_g9_ownSq_32f_C1R_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_W7", "icv_g9_ownSharpenRow_16s_AC4", "icv_g9_ownpis_Min_8u_C3", "icv_g9_ownpi_Min_32f_C1R", "icv_g9_ownpi_dInterVectorClip_C_32f_P", "icv_g9_owniCopy8u_C4P4_A6", "icv_h9_ownippiFilterMedian_16u_C4R_3x3", "icv_g9_ownippiFilterMedianCross_16u_C4R_3x3", "icv_g9_ownsSet_16u_G9", "own_ipps_sAtan2_G9_ttab", "icv_h9_ownscDftFwd_Fact_64fc", "icv_h9_ownippiFilterMedianCross_16u_C3R_5x5", "icv_h9_ownpi_MinMax_8u_C3R", "icv_h9_ownippiFilterMax_16u_Col_AC4", "icv_h9_ownCanny_32f8u_C1R_1_16u_W7", "icv_g9_ownpi_dInterVectorClip_NN_8_C4", "own_ipps_sSin_G9_ttab", "icv_h9_ownippsMagn_16s_Sfs_ASM", "icv_h9_ownpi_Histogram_8u_C1R", "icv_h9_ownpi_HistogramEven_16u_C1R", "icv_h9_ownLaplace3x3Row_16s_C1", "own_ipps_dSinCos_W7_ctab", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C3R_X_V8", "icv_g9_ownippiFilterMax_16s_Col_AC4", "icv_g9_ownNormDiff_L1_8s_C3CMR_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_V8", "own_ipps_dSinCos_W7_ttab", "icv_g9_ownippiFilterMedian_8u_C3R_3x3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_V8", "icv_h9_ownHipass5x5Col_8u_C1", "icv_g9_ownpi_MinMax_8u_C1R", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C1R_5x5_V8", "icv_g9_ownpi_WarpAffine_L_8u_C3", "icv_g9_ownNormDiff_Inf_32f_C3CMR_W7", "icv_h9_ownpi_dInterVectorClip_L_8u_P3", "icv_g9_ownippiFilterMedianHoriz_16u_C1R_5x1", "own_ipps_dSinCos_P8_ctab", "icv_h9_ownLaplace3x3Row_8u_C3", "icv_h9_ownpi_Max_16s_C3R", "icv_h9_owniConvert_32s8s_AC4_W7", "icv_g9_ownippsCnvrt_32f16u_Sfs", "icv_g9_ownippiFilterMin_32f_Row", "icv_h9_ownippiFilterMedianHoriz_16s_C4R_5x1", "icv_h9_ownpi_HistogramEven_16s_C1R", "icv_g9_ownippsMin_16s", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_W7", "icv_h9_ownpi_Min_8u_AC4R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_V8", "icv_g9_ownscDftFwd_Fact2_64fc", "icv_g9_ownsFloorOne", "icv_h9_ownsCeilOne", "icv_h9_ownAConvert_Round32f_16u_AC4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_W7", "icv_g9_ownDistanceTransform_5x5_8u32f_C1R_21F", "icv_g9_ownpi_XorC_32s_C3R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_W7", "icv_g9_owns_BitRev2_S", "icv_g9_ownpi_CountInRange_8u_C1R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_V8", "own_ipps_sAtan2_W7_ttab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_V8", "icv_g9_ownpi_And_8u_AC4R", "icv_g9_ownHipass5x5Col_32f_C1", "icv_h9_ownpi_Histogram_FS_32f_C1R", "icv_g9_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_V8", "own_ipps_sSqrt_S9_ctab", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Const_V8", "icv_g9_ownLaplace3x3Row_16s_C1", "icv_h9_ownsConvert_64s32s_SfPosFin_W7", "icv_g9_ownCopySubpix_32f_C1R_W7_1", "icv_g9_ownpi_CountInRange_32f_C3R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_W7", "icv_h9_ownpi_Histogram_BS_32f_AC4R", "icv_g9_ownDistanceTransform_3x3_8u_C1R_F_ND", "icv_g9_ownsSet_64s", "own_ipps_dInvSqrt_P8_ttab", "own_ipps_sInvSqrt_G9_ttab", "icv_h9_ownscrDftInv_Fact_32f", "icv_g9_ownippiFilterMax_32f_Row", "icv_h9_ownpi_Histogram_8u_C3R", "icv_g9_ownscDft_Dir_32fc", "icv_h9_ownsConj_16sc_I_T7", "icv_g9_ownsSinOne_w7p8", "icv_g9_ownSumSq_32f_C1R_W7_Al", "icv_g9_ownippiFilterMedian_16u_C4R_5x5", "icv_h9_ownpi_CountInRange_32f_AC4R", "icv_n0_own_ipps_dExp_P8_ttab", "own_ipps_dInvSqrt_P8_ctab", "icv_g9_ownippiThreshold_GLV_32f_AC4", "icv_h9_owniConvert_32f8s_AC4_W7", "icv_g9_ownNormRel_L1_8s_C1MR_V8", "own_ipps_sSinCos_P8_ttab", "icv_g9_ownippsCnvrt_32f32s_Sfs", "icv_g9_ownpi_dInterVector_L_16u_C3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_V8", "icv_h9_ownsSqrtOneF", "icv_h9_ownLaplCol5x5_32f_C4", "icv_g9_ownpis_Indx_8u_C3", "icv_g9_ownLaplace3x3Row_8u_AC4", "icv_h9_ownpi_dInterVectorClip_NN_32_C3", "icv_g9_ownscDftInv_Prime_32fc", "icv_h9_ownippiFilterMedianHoriz_16s_C4R_3x1", "icv_g9_ownpi_dInterVector_L_16u_P4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_W7", "icv_g9_ownpis_Indx_32f_C3", "icv_g9_ownpi_AndC_8u_AC4R", "_ZN3tbb8internal24the_global_observer_listE", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_V8", "own_ipps_dSin_G9_ttab", "icv_n0_own_ipps_sSin_S9_ctab", "icv_h9_ownippiFilterMedian_8u_C4R_5x5", "icv_h9_ownpi_dInterVectorClip_NN_16_C1", "icv_g9_ownpi_Sum_8u_AC4R", "icv_g9_ownscrDftFwd_Prime_32f", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_W7", "icv_g9_ownpi_dInterVector_L_32f_AC4", "icv_g9_ownpi_Histogram_16u_C4R", "icv_h9_ownpi_MaxIndx_16s_C1R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_V8", "icv_h9_ownpis_Min_16s_C4", "icv_g9_ownpi_Max_32f_C1R", "icv_g9_ownippiThreshold_V_16s_C3", "icv_g9_ownCanny_16s8u_C1R_3_32s_W7", "icv_h9_ownippiFilterMedianCross_8u_C4R_5x5", "icv_h9_ownpi_WarpAffine_NN_32_C3", "icv_g9_ownCopySubpixIntersect_32f_C1R_V8", "icv_h9_owniCopy32s_C3P3_W7", "icv_h9_owniCopy8u_C4P4_A6", "icv_g9_owniConvert_32s8u_W7", "icv_n0_own_ipps_sLn_P8_ttab", "icv_n0_own_ipps_dSin_S9_ctab", "own_ipps_dCos_G9_ctab", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_W7", "icv_g9_ownippiFilterMedian_8u_C3R_5x5", "icv_h9_ownippiFilterMin_8u_Col_AC4", "icv_g9_ownpi_dInterVectorClip_C_8u_AC4", "icv_h9_owniCopyConstBorder_C3R_W7", "own_ipps_sSqrt_V8_ctab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_V8", "icv_g9_ownscDftInv_Prime_64fc", "icv_h9_owniConvert_32f8u_AC4_W7", "own_ipps_dSinCos_V8_ctab", "icv_g9_ownippsSqrt_16u", "icv_g9_owns_zBitRev1_Blk", "icv_h9_owniTranspose_16u_C1IR_W7", "icv_g9_owniConvert_32s8u_AC4_W7", "icv_h9_ownAConvert_Round32s_16s", "icv_g9_owniCopy8u_C4C1_W7", "icv_g9_ownippsCnvrtFin_64f32s_Sfs", "icv_g9_ownpi_WarpAffine_NN_16_C1", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_W7", "icv_h9_ownpi_dInterVector_L_8u_C3", "icv_g9_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_W7", "icv_g9_ownAConvert_Round32s_8u", "icv_h9_ownCanny_32f8u_C1R_Mag_W7", "own_ipps_sSinCos_G9_ttab", "icv_g9_ownippiFilterMedianVert_16s_1x5", "icv_g9_ownpi_XorC_16u_C1R", "icv_g9_ownpi_dInterVectorClip_C_8u_P4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7", "icv_g9_ownHipass5x5Col_16s_AC4", "icv_g9_ownpi_And_8u_C1R", "icv_h9_owns_cBitRev1_Blk", "own_ipps_dSqrt_S9_ctab", "own_ipps_sSinCos_P8_ctab", "icv_h9_ownippiFilterMedian_16u_C3R_5x5", "icv_h9_ownCopySubpixIntersect_16u_C1R_W7", "icv_g9_ownpi_WarpAffine_L_32f_C3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_X_V8", "icv_g9_ownpi_OrC_8u_C3R", "icv_g9_owns_BitRev1_S", "icv_g9_ownSumSq_8u_C3CMR_V8", "icv_h9_owniCopy_8u_thin", "icv_g9_ownCanny_32f8u_C1R_2_16u_W7", "icv_g9_owns_BitRev2_8", "icv_g9_ownSumSq_32f_C3CR_W7", "icv_h9_ownscDftFwd_Fact_32fc", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_V8", "icv_g9_ownippsSqrt_64fc", "icv_g9_ownCopySubpixIntersect_16u32f_C1R_W7", "icv_h9_owniFlip_16u_C4_W7", "icv_n0_own_ipps_sSin_W7_ctab", "icv_h9_ownpi_dInterVector_L_32f_P3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_V8", "own_ipps_dSinCos_S9_ctab", "icv_g9_ownpi_HistogramEven_16s_C1R", "icv_h9_ownippiFilterMedianCross_16s_C3R_3x3", "icv_g9_ownLaplRow5x5_32f_C1", "icv_h9_ownLaplCol5x5_32f_C1", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_W7", "icv_g9_ownpi_dInterVectorClip_L_8u_P4", "icv_h9_owniCopy16sC4Mas", "icv_g9_ownpi_Min_32f_AC4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_W7", "icv_h9_ownpi_MaxIndx_8u_C1R", "icv_g9_ownpis_Min_32f_C4", "icv_g9_ownSum_8u_C1MR_W7", "icv_g9_ownLaplace3x3Row_32f_C1", "icv_g9_ownippsMagn_16s_Sfs_ASM", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_W7", "icv_h9_ownscDftInv_Fact2_32fc", "icv_g9_ownLaplCol5x5_8u_C1", "icv_g9_owniCopy_8u_C3AC4R", "own_ipps_dSinCos_G9_ctab", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_W7", "icv_h9_ippi_cDftSplit_32fc", "own_ipps_dSqrt_P8_ttab", "icv_g9_ownSq_32f_C3CR_W7", "icv_g9_owniSet16sC1Mas", "icv_g9_ownpi_dInterVectorClip_L_32f_P3", "icv_g9_owniTranspose_8u_C1R_W7", "icv_g9_ownpi_Histogram_16s_AC4R", "icv_h9_ownpi_Histogram_8u_AC4R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Const_V8", "icv_h9_owniSwapChannels_8u_C3IR", "icv_g9_owniSet_32f_C3_W7", "icv_g9_ownSharpenRow_32f_C3", "icv_h9_ownpi_WarpAffine_NN_32_P4", "own_ipps_sAtan2_V8_ttab", "icv_g9_ownpi_Max_16s_C1R", "own_ipps_dSqrt_G9_ctab", "icv_g9_owniTranspose_32s_C1IR_W7", "icv_h9_ownpi_Min_16s_C3R", "icv_h9_ownippiFilterMin_16s_Row", "icv_g9_ownHipass5x5Col_8u_C3", "icv_g9_owniFlip_16u_C4_W7", "icv_h9_ownscDftFwd_Prime_32fc", "icv_g9_ownAConvert_Round32s_16s", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_V8", "icv_g9_ownSumSq_32f_C3CR_W7_Al", "icv_g9_ownpi_WarpAffine_L_16u_P3", "icv_g9_ownSumSq_32f_C1R_W7", "icv_h9_owniCopy8u_AC4_W7", "icv_h9_ownsConj_16sc_T7", "_ZN3tbb8internal14__TBB_InitOnce18InitializationLockE", "icv_g9_ownpi_WarpAffine_L_16u_C3", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_V8", "icv_h9_ownpi_dInterPoint_C_Pixel_32f", "ippConstantOfINF_NEG_64f", "icv_h9_ownpi_WarpAffine_NN_16_AC4", "own_ipps_sExp_V8_ttab", "own_ipps_sInvSqrt_V8_ttab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_V8", "icv_g9_ownCopySubpix_16u32f_C1R_V8", "icv_g9_ownpi_WarpAffine_L_8u_C4", "icv_h9_ownpi_Histogram_8u_C4R", "icv_g9_owniCopy32s_C3P3_W7_NT", "icv_h9_ownippiFilterMedian_16u_C3R_3x3", "icv_g9_ownpi_Sum_16s_C4R", "icv_h9_ownPrewColV_8u", "icv_h9_ownHipass5x5Frs_16s", "icv_h9_ownCopySubpix_16u32f_C1R_W7", "_ZN3tbb8internal35the_context_state_propagation_epochE", "icv_g9_owniCopy8uas", "icv_h9_ownpi_WarpAffine_L_32f_P4", "icv_g9_ownpi_AndC_32s_AC4R", "icv_h9_ownpis_Indx_8u_C4", "icv_g9_owniFlip_32s_C4_W7", "icv_g9_ownpi_XorC_8u_C4R", "icv_h9_ownpi_dInterVectorClip_NN_16_P4", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_V8", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_V8", "icv_g9_ownippiFilterMedian_16s_C4R_5x5", "icv_g9_ownpi_dInterVectorClip_L_8u_C3", "icv_h9_ownpi_dInterVectorClip_NN_32_P4", "icv_h9_owniCopy32s_C4P4_W7", "icv_g9_ownippiThreshold_V_8u_C3", "icv_h9_ownsSinOne", "icv_h9_ownpi_WarpAffine_NN_16_C1", "icv_g9_ownpi_dInterVector_L_8u_C1", "icv_h9_ownDistanceTransform_5x5_8u32f_C1R_21F", "icv_g9_ownNormDiff_L2_8u_C1MR_W7", "icv_h9_ownpis_Max_32f_C4", "icv_g9_ownscDftFwd_Fact_32fc", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_V8", "icv_h9_ownpi_dInterVector_L_32f_C1", "icv_g9_ownippiThreshold_V_8u_AC4", "icv_g9_ownpi_dInterVectorClip_NN_16_C4", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_W7", "icv_g9_ownAFilterRow_8u_AC4R", "icv_g9_ownsConj_32fc_I_T7", "icv_h9_ownpi_dInterVector_NN_16_C1", "icv_g9_owniCopy8u_C4P4_48_A6", "icv_g9_ownNorm_L1_16u_C1MR_W7", "icv_g9_ownippsCnvrtFin_32f16u_Sfs", "icv_h9_ownippiFilterMedian_16u_BC4R_3x3", "icv_g9_ownippiFilterMedian_8u_BC4R_5x5", "icv_h9_ownpi_MinMax_16s_C3R", "icv_h9_ownpi_dInterVector_NN_16_C3", "icv_h9_ownpi_WarpAffine_NN_16_P4", "icv_h9_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_V8", "icv_g9_ownpi_Xor_16u_AC4R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_V8", "icv_g9_ownscDft_Dir_64fc", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_W7", "own_ipps_dExp_V8_ctab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_V8", "icv_g9_ownNormRel_L2_8u_C3CMR_V8", "icv_g9_ownCopySubpix_32f_C1R_V8", "icv_g9_ownippsMin_64f", "icv_h9_ownpi_WarpAffine_NN_8_C3", "icv_g9_ownippsMagn_16sc16s_Sfs_ASM", "icv_g9_ownNormRel_Inf_8s_C3CMR_V8", "icv_h9_ownHipass5x5Col_8u_AC4", "icv_h9_ownFilterRowBorderPipeline_8u16s_C3R_5x5_V8", "icv_g9_ownSumSq_8s_C1R_P8", "icv_h9_ownippiFilterMin_16s_Col", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_W7", "icv_g9_ownsZero_8u_repG9", "icv_g9_ownpi_MinMax_16s_C3R", "icv_g9_ownAConvert_Round32f_16u", "icv_g9_owniCopy_16u_AC4_A6", "icv_h9_ownsExpOne", "icv_h9_ownippiFilterMedianHoriz_16u_C3R_5x1", "icv_g9_ownsPowOne_w7", "icv_h9_ownpi_dInterVector_L_16u_C4", "icv_g9_ownpi_Histogram_16s_C3R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_W7", "icv_n0_own_ipps_sSin_S9_ttab", "icv_h9_ownippiFilterMedian_16s_C4R_5x5", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_V8", "_ZN3tbb8internal8governor19theRMLServerFactoryE", "epu32_maskArray", "icv_h9_ownpi_dInterVector_L_16u_C1", "icv_g9_ownippiFilterMedianHoriz_8u_C1R_5x1", "icv_g9_ownpi_dInterVectorClip_NN_8_P4", "icv_h9_ownpi_dInterVectorClip_L_16u_P3", "icv_g9_ownippiThreshold_16s_AC4", "icv_g9_ownIntegral_8u32s_C1R_V8", "icv_h9_ownpi_WarpAffine_NN_16_C4", "_ZN3tbb8internal6market14theMarketMutexE", "icv_g9_ownippiFilterMedianCross_16s_C1R_3x3", "own_ipps_sSinCos_S9_ttab", "icv_g9_ownHipass5x5Frs_16s", "icv_h9_ownippiFilterMin_8u_Row", "icv_g9_ownpi_dInterVectorClip_C_8u_C1", "icv_g9_ownpi_WarpAffine_L_8u_P3", "icv_h9_ownpi_dInterVectorClip_NN_8_P3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_V8", "icv_g9_ownpis_Max_8u_AC4", "icv_g9_ownscDftInv_Fact2_64fc", "icv_h9_owniConvert_32f8s_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_V8", "icv_g9_ownNormDiff_L2_16u_C3CMR_V8", "icv_g9_ownippiFilterMedian_16u_BC4R_3x3", "icv_g9_owniTplNormMean_32f_C1R", "icv_h9_ownAFilterRow_16s_C1R", "icv_h9_owniConvert_32f16s_W7", "icv_h9_ownpi_dInterVector_L_16u_P4", "icv_h9_owniConvert_8s32f_W7", "icv_g9_ownippiFilterMax_32f_Col", "icv_g9_ownippsSqrt_32fc", "icv_h9_ownpi_dInterVectorClip_C_8u_C3", "icv_n0_own_ipps_dCos_S9_ctab", "icv_g9_ownippiFilterMedianVert_16s_C4R_1x5", "icv_h9_ownippiFilterMax_32f_Row", "icv_g9_DotProd_64f", "icv_n0_own_ipps_sCos_W7_ttab", "icv_g9_ownscrDftInv_Fact2_32f", "icv_h9_owniCopyConstBorder_C1R_W7", "icv_h9_ownpi_Histogram_16s_AC4R", "icv_h9_ownCopySubpix_8u32f_C1R_W7", "icv_g9_ownCanny_16s8u_C1R_1_32s_W7", "icv_g9_ownpi_idInterPoint_C_Pixel_8u", "icv_h9_ownpi_dInterVector_NN_32_C1", "icv_h9_ownsCopy_8u_repG9", "icv_h9_ownpis_Indx_32f_C3", "icv_h9_ownpi_dInterVector_NN_8_C3", "icv_g9_ownippiFilterMedianHoriz_8u_C4R_5x1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_X_W7", "icv_n0_own_ipps_dLn_P8_ttab", "icv_g9_ownpi_dInterVectorClip_C_32f_C", "_ZN10__cxxabiv120__unexpected_handlerE", "icv_h9_ownLaplCol5x5_16s_C4", "icv_g9_ownpi_Min_16s_C3R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_V8", "icv_h9_ownpi_dInterVectorClip_L_8u_P4", "icv_g9_owniConvert_16u32f_W7", "own_ipps_dRound_G9_ctab", "icv_h9_ownpi_Histogram_BS_16u_C1R", "icv_h9_ownpi_Max_16s_C4R", "icv_g9_owniCopy_8u_C1M_W7", "icv_g9_ownNorm_Inf_16u_C3CMR_V8", "icv_h9_ownpi_dInterVector_L_32f_AC4", "icv_g9_ownpi_WarpAffine_NN_16_AC4", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_2", "icv_h9_owniCopy_8u_C3C1R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_V8", "ippConstantOfINF_NEG_32f", "icv_h9_owniConvert_8s32f_AC4_W7", "icv_h9_owniCrossCorrValid_32f_C1R", "icv_g9_owniConvert_32f8s_AC4_W7", "icv_g9_ownMinMaxIndx_8u_C1R_W7_2", "icv_g9_ownFilterRowBorderPipeline_8u16s_C3R_5x5_V8", "icv_n0_own_ipps_dLn_W7_ctab", "own_ipps_dSqrt_W7_ttab", "icv_g9_ownippiFilterMedian_16u_C3R_3x3_palign", "icv_g9_ownippiFilterMax_32f_Col_AC4", "icv_g9_ownSum_8u_C3CMR_V8", "icv_g9_ownpi_Histogram_8u_AC4R", "icv_g9_owniConvert_8s32s_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_W7", "icv_h9_ownpi_Max_8u_C3R", "own_ipps_sSqrt_V8_ttab", "icv_h9_ownippsMagn_32fc32f", "icv_h9_ownippiFilterMedian_8u_C3R_3x3", "icv_g9_owniTranspose_16u_C1R_W7", "icv_h9_ownsSet_16u_G9", "icv_h9_ownSharpenRow_8u_C4", "icv_g9_ownLaplRow5x5_8u_C4", "icv_g9_ownscDftInv_Fact2_32fc", "icv_h9_ownCopySubpix_8u16u_C1R_Sfs_W7", "icv_g9_owniCrossCorrValid_8u32s_C1R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_V8", "icv_h9_ownsrDftFwd_Dir_32f", "icv_n0_own_ipps_sExp_P8_ttab", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_W7", "icv_g9_owns_BitRev1_8", "icv_h9_owniConvert_8s32s_W7", "icv_g9_ownpis_Max_32f_C3", "icv_g9_ownpi_OrC_16u_C1R", "icv_h9_ownippiFilterMedian_16s_BC4R_5x5", "icv_g9_ownpi_Histogram_BS_32f_AC4R", "icv_h9_ownLaplCol5x5_16s_C1", "icv_g9_ownippiFilterMedianHoriz_16u_C4R_3x1", "own_ipps_sExp_G9_ctab", "icv_g9_ownNorm_L1_8u_C1MR_W7_B", "own_ipps_dSqrt_P8_ctab", "icv_g9_ownpi_WarpAffine_L_16u_C1", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_W7", "icv_g9_ownsCosOne", "icv_g9_ownsAtan2One", "icv_g9_ownippiFilterMedian_16u_BC4R_5x5", "icv_h9_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_W7", "icv_g9_ownippiThreshold_8u_AC4", "icv_h9_owns_BitRev1_Z", "icv_h9_owniConvert_32f16u_AC4_W7", "icv_g9_owniTranspose_16u_C1IR_W7", "icv_h9_ownsCopy_8u_nt", "icv_g9_ownAConvert32s_8u", "icv_g9_ownpi_dInterVectorClip_L_32f_C4", "icv_g9_ownippsCnvrt_32f8u_Sfs", "icv_g9_owniConvert_8s32f_AC4_W7", "icv_g9_owniTranspose_8u_C3R", "icv_g9_ownpi_dInterVector_NN_32_AC4", "icv_g9_ownNorm_L1_8u_C3CMR_V8", "icv_g9_ownpi_OrC_32s_AC4R", "icv_g9_ownippiFilterMedian_16s_C3R_5x5", "_ZN10__cxxabiv119__terminate_handlerE", "icv_h9_owniFlip_32s_C4I_W7", "icv_g9_ownpi_dInterVector_L_8u_C4", "icv_g9_owniTranspose_16u_C4R_W7", "icv_g9_ownpi_Histogram_FS_32f_C1R", "icv_h9_ownippiFilterMin_32f_Col", "icv_g9_ownpi_Max_32f_AC4R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_V8", "icv_g9_ownippiFilterMedian_16u_C3R_5x5", "icv_g9_ownpi_dInterVectorClip_NN_8_P3", "icv_h9_ownsCosOne", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_V8", "icv_h9_ownDistanceTransform_5x5_8u_C1R_Big_F_W7", "icv_h9_ownscrDftFwd_Fact2_64f", "icv_g9_ownpis_Indx_8u_C4", "icv_h9_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss", "icv_h9_ownLaplRow5x5_32f_C4", "icv_g9_ownAConvert32s_16s", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_W7", "icv_g9_ownpis_Min_8u_AC4", "icv_h9_ownHipass5x5Col_16s_C4", "icv_g9_ownscrDftFwd_Fact2_32f", "icv_g9_ownNormRel_Inf_8s_C1MR_V8", "icv_h9_ownippsSqrt_32fc", "icv_g9_ownNorm_L2_8s_C3CMR_V8", "icv_g9_ownpi_OrC_32s_C1R", "icv_h9_owniTranspose_32s_C4IR_W7", "icv_h9_ownpi_dInterVectorClip_NN_16_C4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_W7", "icv_h9_ownpis_Min_32f_C3", "icv_h9_ownAConvert_Round32s_16s_AC4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_W7", "icv_n0_own_ipps_sLn_W7_ctab", "icv_h9_ownpi_dInterVectorClip_L_16u_C3", "icv_g9_ownNorm_L1_16u_C3CMR_P8", "icv_g9_ownpi_dInterVectorClip_NN_8_C1", "icv_g9_ownpi_OrC_8u_C4R", "icv_n0_own_ipps_sLn_W7_ttab", "own_ipps_dCos_V8_ttab", "icv_g9_ownpi_HistogramEven_16u_C1R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Mirr_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_V8", "icv_g9_ownPrewColV_8u", "icv_g9_owniConvert_16s32f_AC4_W7", "own_ipps_sCos_V8_ctab", "icv_g9_owniFlip_16u_C4I_W7", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_V8", "icv_g9_ownNormRel_L1_16u_C1MR_W7", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_X_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_V8", "icv_g9_ownsConj_16sc_I_T7", "own_ipps_sLn_V8_ctab", "icv_g9_ownpi_WarpAffine_NN_32_C1", "icv_g9_owniTranspose_8u_C1IR_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_V8", "icv_h9_ownPrewColV_16s", "icv_n0_own_ipps_dSin_P8_ttab", "icv_n0_own_ipps_sLn_P8_ctab", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_W7", "icv_g9_ownpi_Histogram_BS_32f_C3R", "icv_g9_owniSet_32f_C4_W7", "icv_h9_ownSharpenRow_8u_C1", "icv_h9_ownpi_dInterVector_L_8u_C1", "icv_g9_ownSharpenRow_16s_C4", "icv_g9_ownpi_OrC_8u_AC4R", "icv_h9_ownpi_dInterVectorClip_L_32f_C1", "icv_g9_ownippiFilterMedianVert_8u_C4R_1x5", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_V8", "icv_g9_ownpi_dInterVectorClip_L_8u_AC4", "icv_g9_ownsCosOne_w7p8", "icv_g9_ownippiThreshold_GLV_8u_C1", "icv_h9_ownAFilterRow_16s_AC4R", "icv_h9_ownpi_dInterVectorClip_NN_32_P3", "icv_g9_ownpi_Histogram_16u_AC4R", "icv_h9_owniAutoNormMean_32f_C1R", "icv_g9_ownpi_Histogram_16u_C3R", "icv_g9_ownIntegralSq_8u32s64f_C1R_V8", "icv_g9_ownNormRel_L2_8s_C1MR_V8", "icv_g9_ippiFilterMax_32f_Row_A6", "icv_h9_ownscDftFwd_Fact2_32fc", "icv_g9_ownNormDiff_L1_8s_C1MR_W7", "icv_g9_ownpi_Min_16s_AC4R", "icv_g9_ownippiThreshold_GV_32f_C4", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_W7", "icv_g9_ownpis_Min_32f_AC4", "icv_g9_ownNormDiff_Inf_16u_C1MR_W7", "icv_fft_fix_twiddle_table_64f", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_W7", "_ZN6CvType4lastE", "icv_h9_ownpi_dInterVectorClip_L_8u_C1", "icv_h9_ownpi_dInterVector_NN_8_P4", "icv_g9_owns_BitRev1_D", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_W7", "icv_h9_owniTranspose_8u_C1IR_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_W7", "icv_h9_ownAFilterRow_16s_C3R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_V8", "own_ipps_sSin_V8_ctab", "icv_g9_ownpi_WarpPC", "icv_h9_ownscrDftFwd_Fact_32f", "icv_h9_ownpi_WarpAffine_NN_32_P3", "icv_g9_ownpi_Max_16s_C4R", "icv_g9_ownpi_Sum_16s_C3R", "icv_g9_ownNormDiff_L2_8s_C3CMR_V8", "icv_h9_owns_BitRev2_8", "icv_h9_ownAConvert_Round32f_16u", "icv_g9_ownHipass5x5Col_32f_C3", "icv_g9_ownippsSqrt_32s16s", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_V8", "icv_g9_ownFilterRowBorderPipeline_8u16s_C3R_3x3_V8", "icv_g9_ownippiFilterMedianCross_16s_C4R_5x5", "icv_g9_ownCanny_16s8u_C1R_2_16u_W7", "icv_h9_ownLaplace3x3Row_32f_C1", "icv_h9_ownHipass5x5Frs_32f", "icv_g9_ownsfen", "icv_g9_ownippiFilterMax_16u_Col", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_W7", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C3R_3x3_V8", "icv_g9_ownCanny_32f8u_C1R_3_32s_W7", "icv_g9_ownpi_dInterVectorClip_NN_32_C3", "icv_g9_ownNormDiff_L1_16u_C3CMR_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_W7", "icv_h9_ownpi_WarpAffine_L_8u_C3", "own_ipps_sSinCos_G9_ctab", "icv_h9_owniCopy_8u_fwd", "icv_g9_ownNorm_Inf_8u_C3CMR_V8", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_V8", "icv_g9_ownippsSqrt_16sc_ASM_SF", "icv_g9_ownpi_WarpAffine_L_32f_C4", "icv_g9_ownsConj_32fc_T7", "icv_h9_ownpi_Histogram_16u_AC4R", "icv_h9_ownsExpOneF_w7", "icv_h9_owniConvert_8u32s_W7", "icv_g9_ownippiFilterMedianVert_16u_1x3", "icv_h9_ownpi_Max_32f_C4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7_sym", "icv_h9_ownSharpenRow_16s_C3", "icv_h9_ownippiFilterMedianCross_16u_C4R_3x3", "icv_n0_own_ipps_sExp_S9_ttab", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_W7", "icv_g9_ownHipass5x5Frs_32f", "icv_h9_owniTranspose_32s_C1R_W7_NT", "icv_g9_ownippiThreshold_GLV_8u_AC4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7_sym", "own_ipps_sSqrt_S9_ttab", "icv_g9_ownCopySubpixIntersect_8u16u_C1R_Sfs_W7", "icv_g9_ownSharpenRow_8u_C3", "icv_h9_ownpi_dInterVectorClip_NN_8_C4", "icv_h9_ownippiFilterMin_8u_Col", "icv_h9_ownippiFilterMax_16u_Row", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_W7", "icv_g9_ownippiFilterMedianCross_16s_C1R_5x5", "icv_h9_ownscDftInv_Fact_64fc", "icv_h9_ownippiFilterMedianVert_16s_C4R_1x5", "icv_h9_ownpi_WarpAffine_L_16u_AC4", "own_ipps_dInvSqrt_W7_ctab", "icv_g9_ownpi_dInterVectorClip_L_16u_C4", "icv_g9_owniCopyConstBorder_C3R_W7", "icv_g9_ownPrewColV_16s", "icv_g9_ownSharpenRow_8u_C4", "icv_g9_ownippiThreshold_GV_16s_C4", "icv_h9_ownippiFilterMedianHoriz_8u_C3R_3x1", "own_ipps_dSqrt_S9_ttab", "icv_h9_ownpis_Min_32f_AC4", "icv_g9_ownpi_Min_8u_C1R", "icv_g9_ownHipass5x5Row_16s", "icv_g9_ownpi_MaxIndx_16s_C1R", "icv_h9_ownippiFilterMedianVert_16s_C4R_1x3", "icv_g9_ownippiFilterMax_16u_Col_AC4", "icv_h9_ownLaplace3x3Row_32f_C4", "icv_h9_ownsExpOneF", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_V8", "icv_h9_ownLaplace3x3Row_32f_AC4", "icv_g9_ownpi_dInterVector_L_8u_AC4", "VP8GetCPUInfo", "icv_h9_ippiFilterMax_32f_Row_A6", "icv_h9_ownFilterRowBorderPipeline_Low_16s_C1R_X_V8", "icv_g9_ownpi_Xor_8u_AC4R", "icv_h9_ownpis_Min_32f_C4", "icv_g9_ownippiFilterMin_32f_Col", "icv_g9_ownpis_Min_16s_C3", "icv_n0_own_ipps_dSin_W7_ctab", "icv_h9_owniCopy16s_AC4_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_W7", "icv_g9_ownpi_Or_16u_AC4R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_V8", "icv_g9_ownpi_dInterVector_L_8u_P3", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_V8", "icv_g9_ownippiThreshold_GLV_8u_C3", "icv_g9_ownLaplCol5x5_32f_C1", "icv_h9_ownCopySubpixIntersect_8u32f_C1R_W7", "icv_h9_ownpi_MinIndx_32f_C1R", "icv_h9_ownippsSqrt_16sc_ASM_SF", "icv_g9_ownpi_dInterVector_L_8u_P4", "icv_h9_ownippsSqrt_16u", "icv_h9_ownpi_WarpAffine_L_32f_C4", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_W7", "own_ipps_dInvSqrt_G9_ttab", "icv_g9_ownpi_Sum_32f_C4R", "icv_g9_ownpi_AndC_16u_C1R", "icv_h9_ownpi_dInterVectorClip_NN_16_AC4", "icv_h9_ownpi_Min_32f_C4R", "own_ipps_dLn_G9_ttab", "icv_g9_ownippiFilterMax_8u_Row", "icv_g9_ownippiThreshold_V_16s_C1", "own_ipps_dLn_V8_ttab", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_V8", "icv_h9_ownpi_Histogram_FS_32f_AC4R", "icv_g9_ownNorm_L1_8s_C3CMR_V8", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_W7", "icv_g9_ownpis_Max_8u_C4", "icv_h9_ownHipass5x5Frs_8u", "icv_g9_ownsrDftInv_Dir_64f", "icv_g9_ownNorm_Inf_8s_C3CMR_V8", "icv_h9_ownSharpenRow_32f_C4", "icv_h9_ownLaplRow5x5_16s_C3", "icv_h9_ownAFilterRow_8u_AC4R", "icv_g9_owniCopy32s_C4P4_W7_NT", "icv_h9_owniCopy_16u_AC4_A6", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_V8", "icv_h9_ownippiFilterMedianCross_16u_C1R_3x3", "icv_h9_owniCopy_8u_fwdfull", "icv_h9_ownippiFilterMedianCross_16s_C1R_5x5", "icv_g9_ownpi_WarpAffine_NN_32_P4", "icv_h9_ownippiFilterMedianCross_16s_C4R_5x5", "icv_h9_ownippiFilterMedianHoriz_16u_C4R_5x1", "icv_g9_ownippsCnvrt_16s16f", "icv_g9_ownHipass5x5Row_8u", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7_sym", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_V8", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_W7", "icv_h9_ownippiFilterMedianHoriz_16s_BC4R_5x1", "icv_h9_ownpi_dInterVectorClip_C_8u_C4", "icv_n0_own_ipps_dCos_P8_ctab", "icv_n0_own_ipps_dExp_S9_ttab", "icv_h9_owns_zBitRev1_Blk", "own_ipps_dSqrt_V8_ttab", "icv_g9_ownpi_WarpAffine_NN_8_P4", "icv_g9_ownCanny_32f8u_C1R_1_16u_W7", "icv_h9_ownCanny_16s8u_C1R_2_32s_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_W7", "icv_h9_owns_BitRev1_4", "icv_g9_ownpis_Indx_32f_C4", "icv_h9_ownpi_dInterVectorClip_NN_8_P4", "icv_g9_ownpi_dInterVector_L_32f_P3", "icv_g9_ownpi_XorC_16u_C4R", "icv_g9_ownsExpOne", "icv_g9_ownpi_MinMax_8u_C4R", "ippConstantOfNAN_64f", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_X_V8", "ippConstantOfINF_64f", "icv_h9_ownDistanceTransform_3x3_8u32f_C1R_21F", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_V8", "icv_g9_ownippsMin_32f", "icv_g9_ownscrDftInv_Prime_32f", "icv_h9_ownSharpenRow_16s_C1", "icv_g9_ownpi_AndC_8u_C1R", "icv_h9_ownscrDftInv_Prime_64f"], "importedglobals": ["__sF", "_tolower_tab_", "_toupper_tab_", "_ctype_"], "importedfunctions": ["sin", "pthread_self", "acos", "pthread_setspecific", "powf", "wcslen", "sscanf", "sem_destroy", "ungetc", "mmap", "unlink", "strcpy", "deflate", "pthread_cond_destroy", "pthread_attr_setstacksize", "adler32", "inflateSync", "atan2", "tanhf", "pthread_key_delete", "munmap", "AndroidBitmap_unlockPixels", "stat", "tanh", "vprintf", "strtoul", "calloc", "fopen", "strstr", "sem_init", "iswctype", "pthread_mutexattr_init", "realloc", "hypot", "clock", "strtoull", "wctype", "uncompress", "strerror", "strncpy", "strchr", "floor", "exp", "read", "deflateInit_", "strlen", "fgetc", "fread", "sem_post", "dlerror", "compress", "dl_iterate_phdr", "feof", "getpid", "tan", "ioctl", "printf", "wcsxfrm", "sinh", "ceilf", "malloc", "cosf", "__android_log_print", "strxfrm", "wmemmove", "memchr", "expf", "wmemcpy", "wcsftime", "getc", "pthread_create", "sem_wait", "gzeof", "fscanf", "fputc", "rewind", "strcat", "strftime", "strdup", "mbrtowc", "putc", "clock_gettime", "close", "closedir", "remove", "pthread_join", "pthread_cond_wait", "fegetenv", "open", "memcpy", "snprintf", "pthread_attr_getstack", "fflush", "pthread_mutex_init", "getenv", "fseeko", "syscall", "gzputs", "AndroidBitmap_getInfo", "setjmp", "crc32", "wcrtomb", "gzrewind", "poll", "towupper", "lseek", "vfprintf", "strcoll", "log", "fesetenv", "strrchr", "atan2f", "sched_yield", "inflateReset", "pthread_mutex_unlock", "putwc", "logf", "pthread_cond_signal", "wmemchr", "readdir", "ftello", "fstat", "AndroidBitmap_lockPixels", "ungetwc", "asin", "setenv", "log10", "gzopen", "memcmp", "gzclose", "modf", "pthread_mutex_destroy", "strcmp", "qsort", "pthread_getattr_np", "strtoll", "inflateInit_", "deflateParams", "longjmp", "getwc", "pthread_once", "pthread_cond_init", "bsearch", "abort", "fseek", "memset", "pthread_getspecific", "floorf", "free", "exit", "fclose", "towlower", "gzgets", "inflateEnd", "pow", "__errno", "memalign", "fwrite", "cos", "putchar", "vsnprintf", "pthread_mutex_lock", "pthread_mutex_trylock", "fputs", "wmemset", "memmove", "atan", "frexp", "ldexp", "vsprintf", "sinf", "setlocale", "sprintf", "deflateInit2_", "atoi", "fmod", "strtod", "fgets", "sqrt", "ftell", "lrand48", "strtok", "acosf", "pthread_detach", "wcscoll", "ceil", "btowc", "puts", "pthread_mutexattr_destroy", "strtol", "cbrt", "wctob", "__stack_chk_fail", "pthread_attr_destroy", "pthread_key_create", "deflateReset", "write", "deflateEnd", "inflate", "sqrtf", "writev", "fprintf", "opendir", "pthread_attr_init", "strncmp", "pthread_mutexattr_settype", "mkstemp"], "exportedfunctions": ["icv_g9_ippiFilterBilateralBorder_32f_C3R", "icv_w7_ownCalcBorderR4Lanczos3_32f", "ippicviResizeSuper_16s_C1R_L", "_ZN2cv3hal3expEPKfPfi", "icv_s8_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_w7_ippiMirror_32s_C3IR", "icv_h9_ippiSet_16u_C1MR", "icv_w7_ippiWarpAffineNearest_16s_C4R", "icv_p8_ownpi_WarpAffine_C_Const_16u_C3", "icv_h9_owniCopy_16s_P4C4R", "icv_w7_ownRow4Cubic16s", "icv_h9_ownippiFilterMax_8u_RowCol_C4_h9l9", "_ZN2cv15NAryMatIterator4initEPPKNS_3MatEPS1_PPhi", "icv_g9_ippsDFTFwd_CToC_64fc", "icv_s8_ownLaplace3x3Row_16s_C3", "icv_p8_ownSS1_41_16u", "icv_w7_ownippsMagn_16sc16s_Sfs_ASM", "icv_s8_ippsZero_32f", "_ZN2cv4cuda6GpuMat9adjustROIEiiii", "icv_s8_owniResizeGetSize", "icv_w7_owns_cFFTfwd_8_32fc", "icv_p8_ownFilterBoxBorder_8u_C4R", "icv_s8_ippiWarpGetBufferSize", "icv_g9_owniFilter32f_8u_C1R_g9e9_5", "icv_w7_ippiNormRel_L1_16u_C1MR", "icv_g9_owniGetRectComBF_32f_C1R", "icv_h9_piGradientSobel8u_c1", "cvGetNumThreads", "icv_s8_ownpi_dInterVectorClip_C_8u_C1", "Java_org_opencv_calib3d_Calib3d_findChessboardCorners_11", "icv_g9_ownpi_WarpAffineLinear_64f_C4R", "icv_h9_ownpi_WarpAffineSimpleCubic_8u_C4R", "_Z28Mat_to_vector_vector_Point2fRN2cv3MatERSt6vectorIS2_INS_6Point_IfEESaIS4_EESaIS6_EE", "icv_p8_ippiCopy_16u_C4R", "icv_p8_owniFilterBilateralR2_InMem_8u_C3R", "icv_p8_ippiResizeNearest_16s_C3R_L", "icv_s8_ippiCopy_8u_C1C4R", "icv_p8_ippiResizeNearestInit_L", "Java_org_opencv_photo_CalibrateRobertson_getThreshold_10", "icv_s8_ippiDFTFwd_CToC_32fc_C1R", "icv_p8_ippiHistogram_8u_C1R", "ippicviWarpAffineLinear_32f_C3R", "icv_h9_owniFilterBilateralCom_InMem_32f_C3R_L", "icv_w7_ownLaplRow5x5_8u_C4", "icv_s8_ownpi_dInterVectorClip_NN_8_AC4", "icv_w7_ownRow4Cubic16u", "icv_w7_ownpi_Rotate180_8_C4R", "icv_s8_ownCopySubpixIntersect_16u32f_C1R_V8", "icv_h9_ippiSwapChannels_16u_C3C4R", "icv_s8_ownippsCnvrt_32f8s_Sfs", "icv_p8_ownpi_dInterVectorClip_NN_32_C4", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_V8", "icv_g9_ippiMin_16s_C1R", "icv_w7_ownscDFTinv_6_64fc", "_ZN2cv17FlannBasedMatcherC2ERKNS_3PtrINS_5flann11IndexParamsEEERKNS1_INS2_12SearchParamsEEE", "icv_s8_ownippiFilterMedian_16u_C3R", "icv_w7_ownpi_MinMax_32f_C4R", "icv_s8_owniSet_16s_C1_W7", "icv_s8_ippiMean_16s_C3R", "_ZN2cv3expERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_h9_ownscDFTinv_10_32fc", "icv_p8_ownpi_WarpAffine_L_8u_AC4", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7_sym", "icv_h9_ownscDFTfwd_15_32fc", "icv_h9_owniTransposeWxH_32sC4", "_ZN2cv3hal6exp64fEPKdPdi", "icv_h9_ippiCopy_16u_C3C1R", "icv_h9_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "icv_s8_ippsPowOne", "ippicviTranspose_32s_C1IR", "icv_g9_ownsSub_16s_Bound", "icv_w7_ippiMorphBlackhat_8u_C3R_L", "icv_g9_computeTiles", "icv_s8_ippiMorphTophat_8u_C4R_L", "icv_h9_ownscDFTinv_14_64fc", "ippicviScaleC_16s8s_C1R", "icv_h9_ownResize3Cubic32f", "icv_h9_ippiCopyMirrorBorder_32s_C4R", "icv_p8_ippiFilterMedianBorder_32f_C1R", "Java_org_opencv_ml_EM_getCovarianceMatrixType_10", "icv_p8_owniFilterSobelVertBorder2_8u16s_C1R", "icv_w7_ippiResizeNearest_32f_C1R_L", "icv_s8_ownSumSq_32f_C1R_smallsize_W7", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_3x3_G9E9cn", "icv_p8_ownResize4Lanczos2_16u", "icv_g9_ippiCopy_16s_C4C1R", "icv_w7_ownRow4Lanczos3_16s", "icv_s8_ippiFilterLaplacianBorder_8u16s_C1R", "Java_org_opencv_core_Mat_n_1checkVector__JII", "Java_org_opencv_video_FarnebackOpticalFlow_getNumIters_10", "icv_w7_ownHipass5x5Frs_8u", "icv_w7_ippiConvert_8s32s_C1R", "icv_g9_ippiCopy_32f_C4MR", "icv_p8_owniScaleC_8s16s_C1R_acc", "icv_p8_ownSS1_32_16u", "icv_p8_ippiScaleC_8u8s_C1R", "_ZN2cv4UMat4onesENS_5Size_IiEEi", "icv_s8_ownWarpSimple1Nearest8u", "icv_p8_owniScaleC_8u64f_C1R_acc", "icv_s8_ippiCopy_16u_P4C4R", "_ZN2cv3maxERKNS_4UMatES2_RS0_", "icv_g9_owniFilter32f_16s_C1R_g9e9_7", "icv_p8_owniScaleC_8s8u_C1R_acc", "icv_w7_ownpi_Histogram_BS_32f_AC4R", "_ZNK2cv2ml6RTrees8getVotesERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_s8_ippiHLSToRGB_8u_C3R", "icv_s8_ownpi_NormL1_16s_C1R", "icv_w7_owniFlip_32s_C1", "_ZNK2cv16TLSDataContainer10gatherDataERSt6vectorIPvSaIS2_EE", "Java_org_opencv_imgproc_Imgproc_putText_12", "icv_g9_owniFilter32f_16s_C3R_g9e9_7", "_ZN2cv6detail16MultiBandBlender7prepareENS_5Rect_IiEE", "icv_p8_ownRow4Lanczos3_32f", "_ZN2cv4cuda6StreamC1Ev", "icv_s8_ownWarpSimple3Nearest16u", "icv_p8_ippiMean_8u_C1R", "icv_s8_ippiCopy_8u_C3C1R", "icv_g9_ippiFilterRowBorderPipeline_32f_C1R", "icv_w7_ownpis_Max_32f_AC4", "icv_s8_ippiScaleC_8u8s_C1R", "icv_w7_ownpi_dInterVectorClip_L_16u_P4", "icv_g9_ownsSet_8u", "Java_org_opencv_ml_NormalBayesClassifier_load_11", "Java_org_opencv_features2d_ORB_getPatchSize_10", "icv_g9_ownpi_WarpAffine_NN_Repl_64f_C3", "icv_p8_ownippiFilterxBrd32f_16s_C4R", "icv_s8_owns_cFFT_2_64fc", "icv_w7_owns_cFFTinv_32_32fc", "icv_w7_ownResize4Antialiasing_16s", "Java_org_opencv_features2d_Feature2D_delete", "icv_w7_ownNormDiff_L2_8s_C3CMR_W7", "icv_p8_ippiCopyReplicateBorder_16s_C4IR", "icv_h9_ownSSvsum_32f", "ippicviScaleC_8u16s_C1R", "icv_p8_ippiGetNormalizedCentralMoment_64f", "icv_h9_owniCrossCorrValid_NormLevel_8u32f_C1R", "cvRange", "icv_h9_ownSS1_81_8u", "icv_h9_ippiRGBToGray_32f_AC4C1R", "icv_s8_ownAdd_16u32f_C1IMR_W7", "icv_p8_ippiHarrisCornerGetBufferSize", "icv_s8_ippiCopySubpixIntersect_8u32f_C1R", "_ZN2cv8cubeRootEf", "icv_p8_ownsrDFTinv_3_32f", "icv_w7_ownpi_SimpleRotate_16u_C1R", "_ZNK2cv4cuda10DeviceInfo11computeModeEv", "icv_h9_ownpi_SimpleRotate_16u_C1R", "icv_h9_ippsDFTGetSize_R_32f", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_11", "icv_p8_ownResize1Nearest16u", "_ZN2cv5utils5trace7details12TraceManager11isActivatedEv", "cvMakeSeqHeaderForArray", "icv_s8_ippiResizeLinearInit_L", "icv_g9_ownpi_WarpSimpleCubic_32f_C1R", "icv_g9_owns_cFFT_1_32fc", "Java_org_opencv_ml_SVMSGD_getShift_10", "icv_s8_owniResizeSuper_16s_C3R", "icv_ipp_set_rc_ssx", "icv_w7_ownsrDFTfwd_13_64f", "icv_g9_ipMirror135_32uC1R", "icv_p8_ownLaplace3x3Row_8u_C3", "icv_g9_ippiResizeNearest_16s_C3R_L", "icv_g9_ownsAdd_8u", "_ZN2cv3ipp9setUseIPPEb", "_ZN2cv3ocl10haveOpenCLEv", "_ZN2cv3ocl13ProgramSourceC1ERKNS_6StringE", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_W7", "icv_g9_owniGetRectBottomBF_32f_C3R", "icv_w7_ownpi_WarpAffine_NN_Mem_64f_C1", "icv_s8_ownscDftFwd_Fact5_64fc", "icv_g9_ippiNorm_L1_16s_C1R", "_ZN2cv3ocl25predictOptimalVectorWidthERKNS_11_InputArrayES3_S3_S3_S3_S3_S3_S3_S3_NS0_17OclVectorStrategyE", "icv_s8_ippiResizeNearest_8u_C1R_L", "icv_w7_owns_rFFT_1_scale_64f", "_ZNK2cv3dnn19experimental_dnn_v13Net14getLayerShapesERKSt6vectorIiSaIiEEiPS3_IS5_SaIS5_EESA_", "_ZN2cv3ocl8internal14isOpenCLForcedEv", "icv_g9_ownpi_ClipLower", "icv_h9_ippiCopyMirrorBorder_32s_C1IR_L", "icv_h9_owniResizeCubic_16s_C3R", "Java_org_opencv_photo_CalibrateRobertson_getRadiance_10", "icv_s8_ownpi_NormInfDiff_16s_C1R", "icv_p8_ownSS3_53_32f", "icv_g9_ippiNorm_L1_8u_C1MR", "icv_s8_ownpi_WarpSimpleNearest_16u_C4R", "icv_w7_ippiCopyReplicateBorder_32s_C1IR", "_ZN2cv11colorChangeERKNS_11_InputArrayES2_RKNS_12_OutputArrayEfff", "icv_g9_ippiNorm_Inf_32f_C3CMR", "icv_s8_owniResizeLanczos_16u_C1R", "icv_h9_owniFilter32f_16u_C4R_g9e9_8", "icv_s8_ownpi_WarpAffine_L_Mem_8u_C1", "icv_h9_ippsAtan2_32f_A21", "_ZN2cv12completeSymmERKNS_17_InputOutputArrayEb", "_ZNK2cv3dnn19experimental_dnn_v13Net15getLayersShapesERKSt6vectorIS3_IiSaIiEESaIS5_EEPS5_PS3_IS7_SaIS7_EESD_", "_ZN2cv3dnn19experimental_dnn_v15LayerC1Ev", "_ZN3tbb8internal6market16update_allotmentEi", "icv_p8_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_w7_owniSet_32f_C3_W7", "icv_s8_ownNormRel_L1_8u_C3CMR_V8", "ippicviCopy_8u_C1C3R", "icv_w7_ownpi_Max_8u_C4R", "icv_h9_ownpi_SimpleRotate_8u_C4R", "icv_s8_ippiDistanceTransform_3x3_8u32f_C1R", "icv_h9_ippiMorphClose_8u_C4R_L", "_ZN2cv13createTonemapEf", "_ZNK2cv5MatOp6divideERKNS_7MatExprES3_RS1_d", "icv_p8_ownscDftFwd_Prime2_32fc", "icv_s8_owns_initTabTwd_L1_32f", "icv_s8_owns_cFFTinv_8_scale_64fc", "icv_g9_ownSS1_52_16u", "icv_s8_ippiAdd_32f_C1IR", "icv_g9_gres_NormL2Diff_16u_C1R", "_ZNK2cv2ml9StatModel5emptyEv", "icv_w7_ownpi_Max_32f_C4R", "icv_p8_owniFilterRobertsDownBorder2_16s_C1R", "_ZN3tbb8internal17generic_scheduler11local_spawnERNS_4taskERPS2_", "icv_s8_ippiWarpAffineNearest_16s_C4R", "icv_h9_owniResizeCubic_32f_C4R", "icv_h9_ippiCopy_16s_C4C1R", "icv_g9_ownscDFTinv_7_64fc", "icv_s8_owniExchange_8u_I_A6", "icv_s8_ownLaplace3x3Row_16s_C1", "icv_h9_owns_rFFTfwd_4_32f", "Java_org_opencv_imgproc_Subdiv2D_rotateEdge_10", "Java_org_opencv_objdetect_CascadeClassifier_isOldFormatCascade_10", "Java_org_opencv_features2d_FeatureDetector_create_10", "icv_g9_ownsMaxEvery_32f_AVX", "icv_s8_ownippiFilterMedian_16s_BC4R", "_ZN2cv7inpaintERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi", "Java_org_opencv_video_KalmanFilter_set_1transitionMatrix_10", "icv_s8_ownpis_Max_8u_C3", "Java_org_opencv_ml_SVMSGD_delete", "icv_p8_ownippiFilterMedian_16u_BC4R_5x5", "icv_w7_owns_rFFTfwd_8_scale_32f", "Java_org_opencv_ml_SVMSGD_getStepDecreasingPower_10", "icv_s8_ippiMul_16u_C1RSfs", "icv_p8_ownLanczosKernel3", "cvGraphVtxDegree", "icv_w7_ownpi_dInterVectorClip_NN_16_C4", "_Z23List_to_vector_MatShapeP7_JNIEnvP8_jobject", "icv_s8_ownpi_MinMax_32f_C3R", "ippicviDotProd_32s64f_C1R", "icv_s8_ippiNorm_L2_8u_C1MR", "ippicviWarpAffineNearest_8u_C3R", "icv_n0_own_ipps_dRound_S9HAynn", "icv_g9_ippsMaxEvery_32f", "icv_p8_ippiTranspose_16u_C1IR", "icv_p8_ippiResizeCubic_16s_C1R_L", "icv_s8_ownpi_WarpAffine_C_Transp_64f_C1", "icv_w7_ownippsCnvrt_16f16s_Asm", "icv_p8_ippiCopy_16u_C3P3R", "iwiResize_GetSrcRoi", "icv_h9_ownsrDFTinv_13_32f", "icv_p8_ownResize1Antialiasing_16s", "icv_w7_ippiFilterMedianBorder_8u_C1R", "ippicviWarpAffineNearest_16s_C3R", "icv_w7_owniResizeSuper_16s_C1R", "icv_h9_ippiResizeSuper_8u_C3R_L", "icv_p8_ippiFilterSobelVertSecondBorderGetBufferSize", "Java_org_opencv_ml_TrainData_getVarSymbolFlags_10", "icv_w7_ippiFilterMedianBorder_16s_C3R", "Java_org_opencv_imgproc_Imgproc_moments_11", "Java_org_opencv_features2d_GFTTDetector_setMaxFeatures_10", "icv_s8_ippiMorphClose_32f_C3R_L", "icv_s8_ownNorm_L2_8s_C1MR_W7", "icv_p8_ippiMinIndx_8u_C1R", "icv_h9_ownFilter_8u_C1R_h9l9_krn", "WebPInitDecBufferInternal", "icv_w7_ippiFilterBoxBorder_32f_C4R", "ippicviCopy_32f_C4P4R", "icv_h9_ippiScaleC_16s32s_C1R", "icv_s8_owniFilter_32f_C1R_v8u8_6NA", "icv_h9_ippiCopy_16s_P3C3R", "icv_h9_ownSS4_98_32f", "ippicviNormDiff_L2_16u_C1R", "_ZN2cv3ocl7Context7getProgERKNS0_13ProgramSourceERKNS_6StringERS5_", "Java_org_opencv_core_Mat_nPutB", "icv_s8_ownSS4_32_8u", "icv_h9_ippsFFTInv_PermToR_64f", "icv_s8_ownpi_Max_16s_C4R", "_ZN2cv6detail8resultTlERKSt6vectorINS_6Point_IiEESaIS3_EE", "_ZN2cv9Feature2D7computeERKNS_11_InputArrayERSt6vectorIS4_INS_8KeyPointESaIS5_EESaIS7_EERKNS_12_OutputArrayE", "Java_org_opencv_features2d_DescriptorMatcher_match_12", "icv_g9_ippiScaleC_64f_C1IR", "icv_h9_ownpi_Rotate90_32_C4R", "icv_p8_owniResizeCubic_16u_C3R", "icv_w7_owniCopy8u_AC4_W7", "icv_s8_ownsInitTabDftFwdRec_64f", "icv_w7_ownRow4Linear16s", "icv_p8_owns_crFftFwd_Fact4_Last_64f", "_ZNK2cv4cuda10DeviceInfo24kernelExecTimeoutEnabledEv", "icv_s8_ippi_cDftSplit_32fc", "icv_w7_owniSet_16s_C1M_W7", "icv_w7_ippiMorphBlackhat_32f_C4R_L", "_ZNK2cv7HammingclEPKhS2_i", "icv_g9_ippiFilterBorder_32f_C3R", "icv_w7_ippiSum_32f_C1R", "icv_g9_owniFilterBilateralCom_InMem_8u_C3R", "icv_p8_ownSS4_73_32f", "icv_g9_ippiMirror_8u_C3IR", "icv_g9_ownpi_SimpleRotate_32f_C3R", "icv_g9_ownpi_WarpAffineLinear_64f_C3R", "icv_h9_ownRow4Linear8u", "ippicviNorm_L2_32f_C3CMR", "icv_p8_ippiCopyMirrorBorder_16u_C1IR", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_W7", "_ZN2cv3dnn19experimental_dnn_v15Layer16inputNameToIndexENS_6StringE", "icv_s8_owniGetRectRightBF_32f_C1R", "icv_s8_ownippiFilterMedianVert_8u_C4R_1x3", "icv_g9_ownSS4_65_16s", "_ZN3tbb19task_scheduler_init19default_num_threadsEv", "icv_p8_ownSSvsum_16u", "icv_g9_ippiMirror_16u_C3R", "_ZN2cv3ocl9KernelArgC2Ev", "icv_s8_ownsSinCosHuge", "ippicvsDFTFwd_RToPack_32f", "icv_h9_ippiThreshold_LTVal_16s_C1IR", "icv_w7_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_s8_ownscDFTfwd_12_scale_64fc", "icv_w7_ownsrDFTinv_13_scale_32f", "icv_h9_ownSS4_32f", "icv_p8_ownSharpenRow_8u_C4", "icv_s8_ippiNormDiff_L2_16s_C1R", "icv_s8_owniFlipCopy_8u_C1", "icv_h9_ownResize4Linear32f", "_ZN2cv9FormatterD0Ev", "icv_p8_ownRow1Filter12_8u", "icv_h9_ownpi_CmpLT_8u_C1R", "icv_h9_owniScaleC_32f8s_C1R_fst", "icv_n0_own_ipps_dSqrt_G9LAynn", "icv_p8_ownpi_WarpAffine_CR_16u_C3", "icv_p8_ippiScaleC_16s32f_C1R", "icv_p8_ownpi_OrC_32s_C4R", "Java_org_opencv_calib3d_Calib3d_stereoRectify_10", "icv_h9_ippiResizeAntialiasing_16s_C4R_L", "icv_h9_ownRow1Filter10_16u", "icv_g9_owniResizeSuper_16u_C1R", "Java_org_opencv_ml_SVMSGD_getInitialStepSize_10", "icv_g9_ownSS4_54_16s", "_ZNK2cv3SVD9backSubstERKNS_11_InputArrayERKNS_12_OutputArrayE", "Java_org_opencv_calib3d_Calib3d_validateDisparity_10", "icv_g9_ippiAddProduct_16u32f_C1IMR", "icv_g9_ippsMagnitude_64f", "_ZNK2cv7MatExpr3colEi", "icv_s8_ippiNormRel_L2_8u_C1MR", "icv_g9_ownpi_WarpAffine_C_Const_64f_C4", "icv_p8_ownpi_GetAffineTransformInverse", "ippicviMul_8u_C1RSfs", "icv_h9_owniFilter32f_16s_C1R_g9e9_3", "_ZN2cv14setWindowTitleERKNS_6StringES2_", "icv_g9_ippiCopy_16s_C3R", "icv_g9_owns_cFFTfwd_64_32fc", "icv_h9_ippiSwapChannels_8u_C4C3R", "icv_w7_ippiDotProd_32f64f_C1R", "Java_org_opencv_imgproc_Imgproc_invertAffineTransform_10", "icv_p8_ippiCopy_8u_C4MR", "Java_org_opencv_features2d_FeatureDetector_detect_12", "icv_s8_ippiCopyMirrorBorder_8u_C4R", "icv_s8_ownpi_WarpAffine_CR_8u_C4", "icv_w7_ownippiFilterxBrd_8u_C4R", "icv_s8_ippsFabsOne", "icv_w7_owns_rFFTfwd_32_32f", "icv_h9_ippiAbsDiff_16u_C1R", "icv_w7_ippiMin_16u_C1R", "icv_s8_ippiHistogramInit", "_ZN2cv6detail12DpSeamFinder12estimateSeamERKNS_3MatES4_NS_6Point_IiEES6_iS6_S6_RSt6vectorIS6_SaIS6_EERb", "icv_s8_ownpi_GetRotateTransform", "icv_p8_ippiFilterBorder_32f_C4R", "icv_s8_ippiFilterBorder_8u_C3R", "_Z21Mat_to_vector_Point3fRN2cv3MatERSt6vectorINS_7Point3_IfEESaIS4_EE", "icv_p8_ownpi_WarpAffine_L_32f_C4", "icv_h9_ownpi_WarpAffine_C_Const_16u_C1", "icv_g9_ippiConvert_16s32f_C1R", "ippicviResizeGetSrcRoi_L", "icv_g9_ippiTranspose_16s_C4R", "icv_s8_ownpi_WarpSimpleCubic_8u_C4R", "_ZN2cv9videostab36TranslationBasedLocalOutlierRejectorC2Ev", "icv_w7_ippsConvert_32f16u_Sfs", "icv_w7_ippiNormRel_L2_16u_C1R", "icv_w7_owniFlip_16u_C4I_W7", "icv_h9_owns_getSizesTwd_Large_32f", "_ZN2cv4cuda6GpuMat16defaultAllocatorEv", "icv_s8_ippiScaleC_8u32s_C1R", "icv_w7_ippsConj_32fc", "_ZN3tbb18captured_exception5clearEv", "icv_g9_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_p8_ownpi_WarpAffineSimpleLinear_64f_C3R", "ippicvsMaxEvery_16u", "Java_org_opencv_features2d_MSER_setDelta_10", "icv_p8_owniConvert_32s8u_AC4_W7", "_ZN2cv2LUEPfjiS0_ji", "icv_s8_ownpi_Rotate90_B_32_C4R", "icv_p8_ownscDFTinv_7_scale_32fc", "icv_p8_ownscDFTinv_5_32fc", "icv_w7_ippiScaleC_16s64f_C1R", "Java_org_opencv_calib3d_Calib3d_solvePnPRansac_11", "icv_s8_ownpi_WarpAffineRectFP", "icv_p8_ownpi_MinMax_16s_C3R", "_ZN2cv6detail26BestOf2NearestRangeMatcherC2Eibfii", "icv_s8_owniResizeNearest_8u_C3R", "icv_p8_ippsZero_64fc", "icv_w7_ippiTranspose_8u_C4IR", "Java_org_opencv_imgproc_Imgproc_threshold_10", "icv_s8_ownSumSq_32f_C3CMR_W7", "icv_p8_ownsrDFTfwd_14_32f", "icv_s8_ownpis_Max_32f_C4", "icv_s8_ownSS4_73_16s", "icv_h9_owns_initTabTwdCcsRec_32f", "cvRead", "_ZNK2cv12_OutputArray5setToERKNS_11_InputArrayES3_", "icv_p8_ownsrDFTinv_14_32f", "_ZN2cv2ml18LogisticRegression6createEv", "icv_w7_ownpi_WarpSimpleGetSize", "icv_h9_ownCalcBorderR1Lanczos2_8u", "icv_h9_ippiMul_8u_C1RSfs", "icv_h9_ippiWarpAffineCubic_16u_C1R", "icv_s8_ippiMoments64f_32f_C1R", "icv_s8_ownAddProduct_16u32f_C1IR_W7", "icv_g9_ippiNormRel_L2_16s_C1R", "Java_org_opencv_core_Core_multiply_13", "Java_org_opencv_video_Video_createBackgroundSubtractorMOG2_11", "icv_h9_ownpi_WarpAffine_NN_Repl_16s_C4", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_V8", "icv_w7_owns_cFFT_2_32fc", "icv_p8_ownpi_dInterVectorClip_L_16u_AC4", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithStatsWithAlgorithm_10", "icv_h9_ownSS1_32f", "icv_s8_ownRow1Cubic32f", "icv_h9_ownResize3Cubic16u", "icv_g9_ippiMean_8u_C1MR", "Java_org_opencv_core_Core_scaleAdd_10", "icv_h9_ippiSet_32f_C3R", "icv_h9_ownsGetSizeTabDftBase_64f", "icv_s8_owns_cFftFwd_Large_64fc", "_ZN2cv3hal3logEPKdPdi", "icv_w7_ippiScaleC_64f16u_C1R", "icv_s8_ownpis_Indx_16u_C1", "icv_w7_ippiNormRel_L2_32f_C1MR", "cvSetImageROI", "icv_h9_ippiMirror_8u_C3R", "icv_p8_cv_ownippiFilterMin_32f_Msk", "icv_g9_owns_initTabTwd_Large_32f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_V8", "Java_org_opencv_video_Video_createBackgroundSubtractorMOG2_10", "Java_org_opencv_ml_TrainData_getTrainNormCatResponses_10", "icv_s8_ownpi_CheckResizeCall", "icv_p8_ownippiFilterMedianSqr_8u_C3R", "icv_g9_ippiResizeLinear_8u_C3R_L", "icv_w7_ownpi_WarpAffine_C_Repl_16u_C4", "icv_g9_owns_cFFTfwd_16_scale_32fc", "icv_h9_ippsZero_64fc", "icv_s8_owniFlipCopy_8u_C3", "icv_g9_ownRow4Lanczos3_16s", "Java_org_opencv_core_TickMeter_getTimeSec_10", "Java_org_opencv_video_BackgroundSubtractorKNN_getDetectShadows_10", "icv_g9_ownFilter_32f_C1R_g9e9", "icv_w7_owniCopy16s_C4P4_A6_NT", "icv_p8_ippiMarkSpecklesGetBufferSize", "icv_w7_ownsrDFTfwd_15_32f", "iwiFilterLaplacian", "icv_h9_ippiCopyConstBorder_32s_C3R", "icv_p8_owniFilter_32f_C3R_v8u8_3NA", "icv_p8_ownsrDFTinv_6_scale_64f", "icv_p8_ippiCopySubpixIntersect_8u_C1R", "ippicviMirror_32f_C4R", "icv_g9_ownpi_WarpAffine_L_Repl_16s_C4", "icv_s8_owniClipRectZeroTail_8u32f_C1R", "icv_w7_ownpi_WarpAffine_C_Transp_16u_C4", "icv_g9_ownippsCnvrtNear_32f8uA_AVX", "_ZN2cv6resizeERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEddi", "_ZN2cv6detail18GraphCutSeamFinder4Impl24setGraphWeightsColorGradERKNS_3MatES5_S5_S5_S5_S5_S5_S5_R7GCGraphIfE", "icv_g9_ownSS1_72_8u", "icv_s8_ippiFilterBorder_8u_C4R", "cvDrawChessboardCorners", "icv_g9_ippiScaleC_64f32f_C1R", "icv_h9_owns_cFftFwd_Fact4_64fc", "icv_p8_ownippiFilterMedian_16u_C4R_3x3", "icv_g9_ownpi_WarpSimpleLinear_16u_C3R", "Java_org_opencv_core_Core_multiply_11", "icv_w7_ippiCopy_16u_C4MR", "ippicviNormRel_Inf_8u_C1R", "icv_p8_owns_rFFTfwd_8_scale_32f", "icv_s8_IsOverlapedROI", "icv_h9_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_s8_ownsMul_8u_1Sfs", "icv_w7_ippiResizeAntialiasing_16s_C3R_L", "icv_h9_piGradientSobel32f_c1", "Java_org_opencv_video_DualTVL1OpticalFlow_setMedianFiltering_10", "icv_s8_ownFilterBilateralBorder", "icv_h9_ownpi_WarpAffine_NN_Const_16s_C4", "icv_p8_ippiSet_32f_C3R", "icv_p8_ippiFilterBoxBorder_16s_C3R", "icv_p8_ownSS3_32_16u", "_ZN2cv6detail10Timelapser13createDefaultEi", "icv_p8_ownPrewColV_32f", "icv_h9_ownippiFilterMax_8u_RowCol_C3_h9l9", "icv_s8_ownSumSq_8u_C1R_W7", "icv_w7_ownippiFilterMedianVert_16s_C4R", "_ZNSt15__exception_ptr13exception_ptrC1EPv", "ippicviScaleC_64f_C1IR", "_Z7cvRoundRKN2cv9softfloatE", "icv_w7_cv_ownippiFilterMin_16u_Col", "icv_s8_ippiFilterBilateralBorder_32f_C3R", "icv_s8_ownResize3Cubic8u", "icv_h9_ippiMean_StdDev_32f_C3CR", "icv_w7_ownAConvert32s_8u_AC4R", "icv_h9_ownpi_WarpAffine_NN_Const_32f_C4", "icv_p8_ownMinMaxIndx_32f_C1R_W7_2", "icv_h9_ippiResizeNearestInit_L", "icv_w7_ippiNormRel_L1_32f_C1MR", "icv_w7_ippiCopy_16u_C4C1R", "icv_h9_ippiTranspose_32f_C4R", "icv_s8_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_s8_ippiMinEigenValGetBufferSize_8u32f_C1R", "icv_h9_owniFilterBilateralCom_InMem_32f_C1R_L", "icv_s8_ownCalcBorderR4Cubic16u", "icv_h9_ippiSqrDistanceNorm_8u32f_C1R", "icv_s8_ownResize4Cubic8u", "icv_p8_ippiWarpAffineLinear_32f_C4R", "icv_s8_ippiWarpAffineLinearInit", "icv_s8_ownpi_Max_8u_AC4R", "icv_p8_ownpi_dInterVectorClip_L_16u_C3", "icv_g9_ippiCopyConstBorder_32f_C3R", "icv_h9_ownSS1_16u", "icv_s8_ownResize1Nearest32f", "_ZN3tbb4task4selfEv", "icv_p8_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "icv_p8_ippiMinEigenValGetBufferSize_8u32f_C1R", "icv_p8_ippiNormDiff_L2_16s_C1R", "icv_w7_ownpi_WarpAffine_NN_Const_64f_C4", "Java_org_opencv_ml_DTrees_getMaxDepth_10", "icv_g9_ownscDftFwd_Fact7_32fc", "icv_p8_ownSumSq_16u_C3CMR_P8", "icv_h9_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_s8_ippiNormDiff_Inf_32f_C1MR", "icv_s8_ownsrDFTfwd_3_32f", "icv_w7_owniConvert_32f8s_ccode", "icv_w7_ownscrDftInv_Prime8_64f", "_ZN2cv5flann5IndexC1ERKNS_11_InputArrayERKNS0_11IndexParamsEN7cvflann16flann_distance_tE", "icv_h9_ownCalcBorderR1Lanczos2_16u", "icv_h9_ownpi_NormL1Rel_8u_C1R", "icv_s8_ippiCopy_32f_C1C4R", "icv_h9_ownNormDiff_Inf_8u_C3CMR_HSW", "Java_org_opencv_imgproc_Subdiv2D_getVertex_10", "icv_w7_ownNormRel_L1_32f_C3CMR_W7", "icv_s8_ownpi_AndC_16u_C4R", "_ZNK2cv17FlannBasedMatcher5cloneEb", "Java_org_opencv_imgcodecs_Imgcodecs_imread_11", "icv_g9_ippiResizeSuperInit_L", "icv_w7_owniGetRectRightBF_8u_C3R", "icv_w7_owns_cFFTinv_32_64fc", "_ZN2cv3ogl9Texture2DC1ENS_5Size_IiEENS1_6FormatEjb", "icv_w7_ownpi_AndC_16u_C4R", "icv_s8_owns_cFFTfwd_16_32fc", "_ZN2cv10BriskLayerC2ERKNS_3MatEff", "icv_s8_ownpi_ClipRight", "icv_g9_ownRow4Cubic16u", "icv_s8_ippiSet_16u_C4MR", "icv_h9_ownColAntialiasing_8u", "icv_s8_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_w7_ownippsMagn_16s_Sfs_ASM", "icv_g9_owniResizeAntialiasing_32f_C1R_L", "cvCheckTermCriteria", "icv_h9_ownSS3_41_32f", "icv_s8_ippsLn_64f_A50", "icv_h9_ippiFilterScharrVertMaskBorder_32f_C1R", "_ZN2cv18minEnclosingCircleERKNS_11_InputArrayERNS_6Point_IfEERf", "icv_s8_ownResize3Antialiasing_16u", "TBB_runtime_interface_version", "ippicviHarrisCorner_8u32f_C1R", "icv_w7_ownResize1Linear32f", "icv_h9_ippiCopyMirrorBorder_32s_C1IR", "icv_g9_ownscDFTinv_15_scale_32fc", "icv_g9_owniResizeNearest_16s_C1R", "icv_s8_ippiResizeAntialiasing_16s_C1R_L", "icv_s8_ownpi_Xor_32s_AC4R", "icv_w7_ippiCopy_32f_C4R", "Java_org_opencv_calib3d_StereoSGBM_setMode_10", "icv_w7_ippiCopy_16s_P3C3R", "icv_p8_ownsrDFTfwd_9_64f", "icv_h9_ownpi_CmpEQ_32f_C1R", "icv_w7_ippiFilterBorderInit_16s", "icv_s8_ippiNormDiff_L1_8u_C1MR", "icv_s8_ippiCopy_8u_C4P4R", "icv_s8_ippiScaleC_32f32s_C1R", "cvCalcArrHist", "icv_s8_ippiResizeAntialiasing_16u_C1R_L", "icv_p8_ippiMirror_32s_C3IR", "icv_h9_ownscDFTfwd_14_scale_32fc", "Java_org_opencv_core_Core_completeSymm_11", "icv_w7_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_W7cn", "icv_w7_ownpi_CountInRange_32f_AC4R", "_ZN2cv12findContoursERKNS_17_InputOutputArrayERKNS_12_OutputArrayES5_iiNS_6Point_IiEE", "icv_h9_ippiCopy_16s_C4R", "icv_p8_ippiResizeLinear_16s_C1R_L", "_ZN2cv4KAZE6createEbbfiii", "icv_s8_ownpi_WarpAffine_L_Mem_16s_C4", "icv_s8_ownpi_WarpSimpleCubicInit", "icv_p8_ippiCopy_32f_C4P4R", "icv_p8_ownsrDFTfwd_15_32f", "icv_w7_owniConvert_8u8s_ccode", "icv_s8_ownCalcBorderR1Linear64f", "icv_w7_ippsSortRadixDescend_64f_I", "icv_h9_ownsrDFTinv_11_scale_64f", "ippicviResizeAntialiasing_8u_C1R_L", "_ZN2cv13HOGDescriptor4readERNS_8FileNodeE", "icv_w7_ownResize3Nearest32f", "icv_w7_ippsFFTFwd_RToPerm_64f", "icv_s8_ownpi_WarpAffine_L_Repl_16s_C4", "Java_org_opencv_core_Mat_nGetF", "icv_p8_ownsInitTabDftInvRec_32f", "icv_g9_ownippiFilterxBrd32f_16s_C3R", "Java_org_opencv_features2d_Params_set_1filterByColor_10", "icv_w7_ippiSet_32f_C3R", "icv_s8_ownpi_Histogram_BS_32f_AC4R", "ippicviNormRel_L2_32f_C1R", "icv_s8_ippiDCTInv_32f_C1R", "icv_p8_innerNumberTwo3x3", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_13", "icv_h9_owniCopyConstBorder_16s_C4R", "icv_s8_ownscDftFwd_Fact11_32fc", "ippicviResizeLanczos_16u_C3R_L", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_W7", "icv_h9_ownpi_Rotate180_8_C3R", "icv_s8_ownWarpSimple4Nearest8u", "Java_org_opencv_features2d_Feature2D_read_10", "_ZN2cv9videostab17WeightingDeblurer6deblurEiRNS_3MatE", "icv_w7_ownpi_Min_16s_AC4R", "icv_g9_ownRow3Antialiasing_16s", "Java_org_opencv_dnn_Dnn_createCaffeImporter_10", "icv_g9_ownsrDFTfwd_11_32f", "icv_h9_owniResizeNearest_16u_C4R", "icv_h9_owniResizeSuper_16u_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_W7", "icv_g9_ippiThreshold_GTVal_16s_C1R", "Java_org_opencv_photo_CalibrateDebevec_delete", "icv_h9_owns_rFFTfwd_16_64f", "icv_h9_owniFilter32f_16u_C4R_g9e9_6", "icv_g9_owniFilter_32f_C1R_g9e9_6", "icv_p8_ownsrDFTinv_12_scale_32f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_V8", "icv_w7_ippsFFTInv_PackToR_32f", "icv_p8_ownSS1_72_16u", "icv_p8_ownippiThreshold_GV_8u_C4", "_ZN2cv17FlannBasedMatcher3addERKNS_11_InputArrayE", "Java_org_opencv_imgproc_Imgproc_spatialGradient_11", "icv_g9_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "icv_w7_ownpi_WarpAffine_C_Mem_32f_C3", "icv_w7_ippiMorphBlackhat_16u_C1R_L", "cvTriangulatePoints", "_ZN2cv4normERKNS_9SparseMatEi", "icv_s8_owniNormLevel_8u32f_C1R", "icv_p8_ownsMinEvery_32f", "icv_h9_ippiCopyMirrorBorder_16u_C4IR", "icv_w7_owns_initTabDct_Dir_32f", "icv_w7_ownsInitTabDftInvRec_64f", "icv_w7_cv_ownippiFilterMin_16s_Row", "ippicviCopy_8u_C4P4R", "_ZN2cv9transposeERKNS_11_InputArrayERKNS_12_OutputArrayE", "ippicviNormDiff_Inf_16u_C1R", "icv_p8_owniResizeNearest_8u_C3R", "icv_s8_ippiTranspose_32f_C4IR", "Java_org_opencv_photo_MergeMertens_getContrastWeight_10", "icv_p8_owniGetRectComBF_8u_C1R", "icv_p8_owniGetRectBottomBF_32f_C1R", "_ZN3tbb8internal8governor17acquire_resourcesEv", "icv_p8_ippiScaleC_32s8u_C1R", "icv_h9_ippiNorm_L2_32f_C1MR", "_Z7cvFloorRKN2cv9softfloatE", "icv_s8_ownSS1_72_16s", "icv_s8_ownSShorisontal_16s", "icv_g9_ownpi_Min_16u_C1R", "icv_h9_ownSS4_21_32f", "_ZN2cv11cornerScoreILi12EEEiPKhPKii", "icv_w7_ownpi_MaxIndx_16s_C1R", "icv_w7_ippiConvert_16u8u_C1R", "icv_w7_ownLanczos3KernelAA", "icv_w7_ownResize4Lanczos3_32f", "_ZN2cv10BOWTrainerD2Ev", "icv_h9_ownsGetSizeTabDftInvRec_64f", "icv_s8_ippiFilterScharrVertMaskBorder_8u16s_C1R", "ippicviFilterBorder_16s_C4R", "_ZN3rml8internal14thread_monitor4joinEl", "_ZN2cv7fisheye42estimateNewCameraMatrixForUndistortRectifyERKNS_11_InputArrayES3_RKNS_5Size_IiEES3_RKNS_12_OutputArrayEdS7_d", "icv_p8_owniFilter_32f_C4R_v8u8_3", "icv_g9_ownSS3_8u", "icv_g9_ownpi_WarpAffine_L_Repl_16s_C1", "_ZNK2cv4cuda10DeviceInfo4nameEv", "icv_g9_ownpi_SimpleRotate_64f_C4R", "icv_w7_ippiResizeNearest_16s_C1R_L", "icv_g9_ownpi_WarpAffineNearest_64f_C3R", "icv_h9_owniScaleC_8u64f_C1R_acc", "icv_s8_ownAbsDiff_16u_C1R_W7", "icv_s8_ownpi_CountInRange_8u_AC4R", "Java_org_opencv_photo_CalibrateCRF_process_10", "icv_p8_ownpi_Rotate90_B_64_C3R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_W7", "icv_h9_owniResizeLinear_16u_C4R", "_ZN2cv24convertPointsHomogeneousERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_h9_ownsrDFTfwd_6_scale_32f", "icv_h9_ippiCopyReplicateBorder_8u_C1IR", "_ZN2cv3dnn19experimental_dnn_v19BNLLLayer6createERKNS1_11LayerParamsE", "icv_p8_ownpi_CountInRange_32f_C1R", "icv_s8_ownsMinEvery_64f", "icv_s8_owniFilter_32f_C3R_v8u8_2NA", "icv_w7_ippiMorphTophat_16u_C1R_L", "icv_s8_ownpi_And_16u_AC4R", "icv_h9_ippsFFTFwd_RToPack_32f", "_ZN2cv3ogl9Texture2DC1EiiNS1_6FormatEjb", "icv_w7_ownpi_Rotate90_B_64_C1R", "_ZN2cv3ocl6KernelC1EPKcRKNS0_13ProgramSourceERKNS_6StringEPS7_", "ippicviResizeLinear_16s_C4R_L", "icv_h9_ippiCopy_16u_C4P4R", "Java_org_opencv_features2d_Features2d_drawKeypoints_10", "icv_p8_owns_rFFT_2_64f", "icv_h9_ippiScaleC_32s16u_C1R", "icv_h9_ownpi_WarpAffineSimpleLinear_8u_C1R", "Java_org_opencv_objdetect_HOGDescriptor_get_1blockStride_10", "icv_p8_ownscrDftInv_Prime_64f", "icv_p8_ippiCountInRange_8u_C1R", "icv_w7_ownLaplRow5x5_32f_C4", "Java_org_opencv_calib3d_Calib3d_findHomography_10", "icv_s8_ippiCopyReplicateBorder_8u_C4R", "icv_h9_ippsSortRadixDescend_32s_I", "Java_org_opencv_core_Core_add_13", "icv_p8_owniResizeLinear_16u_C1R", "Java_org_opencv_calib3d_Calib3d_projectPoints_10", "icv_g9_ippiGradientVectorSobel_8u16s_C1R", "icv_s8_owniCorrectAutoNormMean_32f_C1R", "icv_h9_owniFilter32f_8u_C3R_g9e9_8", "Java_org_opencv_imgproc_Imgproc_warpAffine_12", "Java_org_opencv_features2d_Params_set_1minCircularity_10", "icv_w7_ownpi_WarpAffine_L_Mem_32f_C4", "icv_h9_ippiTranspose_32f_C3R", "icv_g9_owniResizeCubic_16s_C3R", "icv_w7_ownSumSq_32f_C3CMR_W7", "_ZN2cvltERKNS_3MatEd", "icv_h9_ownSS3_32_16s", "ippicviResizeSuper_16u_C4R_L", "icv_h9_ippsSortRadixIndexAscend_16u", "cvSetTrackbarPos", "icv_s8_ownCubicKernel1", "icv_w7_owns_BitRev2_Z", "icv_h9_owniGetRectBottomBF_8u_C3R", "icv_g9_ippiConvert_16u8u_C1R", "icv_p8_ippiAddProduct_16u32f_C1IR", "_ZN2cv17CascadeClassifier4readERKNS_8FileNodeE", "icv_s8_ippiResizeSuper_16u_C1R_L", "_ZN2cv3ocl14convertTypeStrEiiiPc", "_ZNSt10bad_typeidD2Ev", "icv_g9_ownpi_Rotate90_16_C3R", "icv_h9_owniFilter32f_16u_C3R_g9e9_6", "icv_w7_ippiCopy_16u_P3C3R", "icv_w7_owniConvert_32f8u_ccode", "icv_p8_ownSS4_65_16u", "_ZNK2cv13HOGDescriptor4saveERKNS_6StringES3_", "icv_p8_ownpi_WarpAffine_L_Mem_32f_C3", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_13", "_ZNK3tbb18task_group_context28is_group_execution_cancelledEv", "ippicvsSortRadixIndexDescend_16s", "icv_g9_ippsExpOneF", "icv_w7_ownsrDFTfwd_9_scale_64f", "icv_w7_ownSumSq_32f_C1R_smallsize_W7", "icv_w7_ownpi_WarpAffine_L_Repl_32f_C4", "_ZN2cv3SVD7computeERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_g9_ippsSortRadixIndexDescend_32s", "icv_g9_ownsFFTGetBufSize_C_32fc", "ippicviConvert_32s16s_C1RSfs", "Java_org_opencv_imgproc_Imgproc_minEnclosingTriangle_10", "icv_p8_owns_cFFTinv_16_32fc", "icv_h9_ownsSub_16s_NegSfs", "icv_s8_ownCalcBorderR3Linear32f", "_ZNK2cv3ocl6Device16maxParameterSizeEv", "Java_org_opencv_calib3d_StereoBM_setUniquenessRatio_10", "icv_w7_IsOverlapedROI", "_ZN2cv17CommandLineParserC1ERKS0_", "_ZN2cv9SparseMat3Hdr5clearEv", "icv_p8_ippiCopyMirrorBorder_32s_C1R_L", "ippicviFilterSobelVertSecondBorder_8u16s_C1R", "_ZN2cv21pyrMeanShiftFilteringERKNS_11_InputArrayERKNS_12_OutputArrayEddiNS_12TermCriteriaE", "icv_h9_ippsSin_64f_A53", "icv_h9_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_H9L9cn", "icv_h9_ippsPolarToCart_64f", "icv_w7_ownpi_Max_8u_C3R", "icv_w7_ownpi_Min_16s_C3R", "_ZN3tbb8internal17generic_scheduler16get_mailbox_taskEv", "icv_h9_ownpi_WarpAffineNearest_32f_C1R", "ippicviMin_16s_C1R", "_ZN2cv6detail13ProjectorBase15setCameraParamsERKNS_11_InputArrayES4_S4_", "icv_h9_ippiFilterLaplacianBorder_8u16s_C1R", "icv_s8_ippsMaxEvery_64f", "icv_g9_ownscDftInv_Fact4_32fc", "icv_p8_ownippiFilterMin_8u_Col", "icv_g9_owniGetRectBottom_32f", "_ZN2cv9videostab18InpaintingPipeline23setStabilizationMotionsERKSt6vectorINS_3MatESaIS3_EE", "_ZN2cv3ogl6Arrays14setVertexArrayERKNS_11_InputArrayE", "_Z19Mat_to_vector_PointRN2cv3MatERSt6vectorINS_6Point_IiEESaIS4_EE", "icv_s8_owns_crRadix4FwdNorm_32f", "Java_org_opencv_videoio_VideoCapture_retrieve_11", "icv_s8_ownpi_dInterVectorClip_L_16u_C1", "icv_h9_owns_cFFTinv_4_32fc", "icv_g9_ownsrDFTinv_14_scale_32f", "icv_p8_ownAConvert_Round32s_16s_AC4R", "icv_s8_ownpi_WarpAffine_L_Repl_8u_C3", "icv_h9_ownFilterBoxBorderInMem_32f_C4R", "icv_g9_ippsLn_64f_A50", "icv_w7_owniCopy8u_P4C4_W7", "icv_g9_owniConvert_8u32s_C1R", "icv_w7_ownsrDFTinv_14_64f", "Java_org_opencv_imgproc_Imgproc_grabCut_11", "icv_w7_ownNormDiff_Inf_16u_C1MR_W7", "icv_h9_owniThreshold_Val_32f_C1R", "icv_w7_owns_rFFT_2_64f", "icv_p8_owniSet_32s_C3MR", "icv_s8_ippiThreshold_GT_8u_C1R", "icv_s8_ippiCopyConstBorder_8u_C1R", "ippicviSet_32f_C1MR", "icv_h9_ippiSum_16s_C3R", "icv_p8_owniFilter_32f_C1R_v8u8_6", "icv_w7_ownippiFilterMedianVert_16s_1x3", "icv_g9_ownippiFilterMedian_16u_BC4R", "icv_h9_ippiCopy_16u_C4R", "icv_w7_ownCalcBorderR4Lanczos3_16s", "Java_org_opencv_imgproc_Imgproc_Sobel_11", "icv_p8_ownSS3_43_16s", "icv_p8_ippiCannyBorderGetSize", "icv_h9_ippiFilterSobelVertBorder_16s_C1R", "icv_w7_ownsSinOne", "icv_h9_ownsrDFTfwd_13_64f", "icv_s8_ownippiFilterMedian_16s_C4R_3x3", "ippicviApplyHaarClassifier_32f_C1R", "icv_h9_ippiCopy_8u_C4MR", "icv_s8_ippiCopy_32f_AC4R", "icv_w7_ownResize4Cubic16s", "_ZN2cv3dnn19experimental_dnn_v18ImporterD0Ev", "icv_p8_ownpi_WarpAffineNearest_16u_C4R", "_ZN2cv9videostab18InpaintingPipeline7inpaintEiRNS_3MatES3_", "icv_h9_ippiCopy_8u_C1MR", "icv_h9_ownpi_Max_16s_C1R", "Java_org_opencv_photo_CalibrateDebevec_getRandom_10", "icv_p8_owniGetRectTop_32f", "_ZNK2cv11_InputArray5depthEi", "icv_p8_ownAFilterRow_16s_C1R", "icv_w7_owniCorrectAutoNormMean_32f_C1R", "icv_s8_ippiScaleC_64f32f_C1R", "icv_p8_ownResize3Antialiasing_32f", "icv_w7_ownippsCnvrt_32f32s_Sfs", "icv_w7_ownsGetSizeTabDftBase_64f", "icv_g9_ownpi_WarpAffine", "cvLogPolar", "icv_s8_ownsrDftFwd_Conv_32f", "ippicvsDFTInit_C_64fc", "icv_s8_ownpi_Sum_16s_C1R", "ippicviMirror_32f_C1IR", "_ZN2cv5flann11IndexParamsD1Ev", "icv_h9_ownpi_WarpAffine_C_Repl_16u_C3", "icv_p8_ippiMinEigenVal_32f_C1R", "icv_p8_ippiCopy_32f_C4R", "ps_destroy_ssx", "icv_p8_ippiCopyReplicateBorder_32s_C3IR", "icv_h9_owniFilter32f_16u_C1R_g9e9_7", "icv_w7_ownippiFilterMedianCross_8u_C3R_5x5", "ippicviMaxIndx_16u_C1R", "icv_w7_ippiResizeSuper_16s_C4R_L", "_ZN2cv9ExceptionC1Ev", "icv_p8_owns_cFFTinv_4_64fc", "icv_s8_ownpi_WarpAffine_C_Repl_32f_C1", "icv_h9_ownsrDFTinv_14_scale_32f", "icv_w7_ippiTranspose_32f_C3IR", "Java_org_opencv_ml_ParamGrid_get_1maxVal_10", "icv_p8_owniFilter_32f_C3R_v8u8_5", "icv_p8_ippiSwapChannels_32s_C3R", "icv_w7_ippiFilterMedian_16s_C1R_3x3_A6", "icv_p8_ownAddSquare_8u32f_C1IMR_P8", "icv_p8_ownpi_WarpAffine_NN_8_AC4", "_ZNK2cv10softdoubleleERKS0_", "_ZN2cv11seqPopFrontEP5CvSeqPv", "icv_w7_owniCopy8u_C3P3_A6", "icv_h9_ippiScaleC_8s_C1R", "icv_p8_ippiConvert_32f8s_C1RSfs", "icv_s8_ippsSinCos_64f_A50", "icv_s8_ownpi_WarpAffine_L_Const_16u_C3", "icv_p8_owniConvert_32f32s_ccode", "icv_h9_owns_cFFTinv_16_scale_32fc", "icv_s8_ownscDFTinv_10_scale_64fc", "icv_h9_piFilterRow_32f_C3R_g9e9", "icv_w7_ippiWarpAffineLinear_64f_C3R", "icv_p8_ownpi_WarpSimpleLinear_16u_C1R", "icv_g9_ippiMaxIndx_16u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Wrap_V8", "icv_p8_owniConvert_8s16s_ccode", "icv_w7_ippiResizeNearest_32f_C4R_L", "icv_g9_ownsrDFTfwd_14_64f", "icv_w7_ownHipass5x5Row_32f", "WebPCopyPlane", "icv_g9_ippiCopyReplicateBorder_32s_C3R_L", "icv_g9_ownpi_WarpAffine_NN_Const_8u_C1", "icv_g9_ownpi_WarpAffine_C_Const_16u_C4", "ippicviSwapChannels_32f_C3R", "_ZN2cv5utils5trace7details6Region4Impl14registerRegionERNS2_23TraceManagerThreadLocalE", "icv_p8_ippiWarpAffineLinear_16s_C1R", "VP8LGetInfo", "icv_g9_ownpi_WarpAffineNearest_64f_C1R", "icv_h9_ippiMean_16u_C1MR", "Java_org_opencv_calib3d_Calib3d_solvePnP_10", "icv_g9_ownSuperKernel", "_ZN2cv7fitLineERKNS_11_InputArrayERKNS_12_OutputArrayEiddd", "icv_p8_ownsrDFTfwd_6_scale_32f", "icv_h9_ownippiFilterMax_32f_RowCol_C3_h9l9", "icv_p8_ippiMorphBlackhat_32f_C3R_L", "icv_h9_owniFilter_32f_C1R_g9e9_6", "icv_g9_ippsCosOne", "icv_w7_ownpi_WarpAffine_C_Repl_32f_C4", "_ZNK2cv11_InputArray4stepEi", "icv_p8_ownpi_WarpAffineLinear_16s_C4R", "icv_p8_ownpi_WarpSimpleNearest_16u_C4R", "icv_w7_ippiSet_32s_C1MR", "_ZNKSt15__exception_ptr13exception_ptrntEv", "icv_g9_ownippiFilterMedianHoriz_16s_BC4R", "icv_w7_ownResize4Linear16s", "icv_w7_ippiTranspose_32s_C3IR", "Java_org_opencv_core_Core_mean_11", "_ZN2cv8solvePnPERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_bi", "icv_w7_ippiCopyConstBorder_32f_C1R_L", "icv_p8_ippiCopy_16s_C1MR", "cvCartToPolar", "_Unwind_GetLanguageSpecificData", "icv_h9_ownpi_CheckResizeCall", "icv_w7_ippiResizeSuper_16u_C1R_L", "icv_h9_ownsrDFTfwd_5_scale_32f", "icv_s8_ownippiThreshold_GV_8u_C4", "icv_p8_ownsInitDftPrimeFact_32f_32f", "icv_g9_ippiCopy_32f_AC4R", "icv_w7_owns_cFFT_1_64fc", "icv_w7_ownscDFTfwd_7_64fc", "icv_h9_ippiCopyConstBorder_32f_C1R", "icv_s8_ownpi_WarpAffine_C_Repl_16s_C1", "icv_s8_ippiFilterRowBorderPipeline_32f_C3R", "icv_w7_ownippiThreshold_GV_8u_C4", "icv_p8_ownippiFilterMedian_8u_BC4R_5x5", "Java_org_opencv_core_Mat_n_1release", "icv_p8_ownpi_WarpAffine_L_Mem_16s_C1", "icv_s8_ownpi_getWarpSimpleRect_Mem", "icv_w7_ippiMorphGradient_16s_C1R_L", "icv_p8_owniFilter_32f_C3R_v8u8_8", "_ZN2cv6detail21BestOf2NearestMatcher14collectGarbageEv", "icv_s8_ownAFilterRow32f_16s_C3R", "icv_w7_ownpi_WarpAffine_NN_8_AC4", "icv_p8_ownCalcBorderR1Lanczos3_8u", "icv_p8_ownsrDFTinv_5_64f", "icv_w7_ippsMagnitude_64f", "icv_h9_ownpi_WarpAffine_NN_Mem_32f_C3", "icv_h9_ownpi_ClipUpper", "icv_s8_ownpi_WarpAffineLinear_8u_C3R", "icv_h9_owniGetRectLeft_16s", "icv_s8_ownResize4Lanczos3_32f", "icv_g9_owniFilter2_16s_C1R", "llwiCopySplit", "icv_s8_ownpi_Rotate90_32_C1R", "icv_p8_ownpi_WarpAffineSimpleNearest_16u_C4R", "_ZN2cv9videostab18FastMarchingMethod13heapRemoveMinEv", "cvReleaseCapture", "icv_h9_ippiFilterScharrHorizMaskBorder_16s_C1R", "icv_p8_owns_cFFTinv_16_scale_64fc", "icv_g9_ippiSum_8u_C4R", "icv_w7_ownsrDFTinv_7_scale_32f", "icv_h9_owniGetRectComBF_32f_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_W7", "icv_s8_ownSS1_65_16s", "icv_g9_owniScaleC_8u16u_C1R_fst", "Java_org_opencv_imgproc_Imgproc_cornerMinEigenVal_10", "own_ipps_sCos_SC_A11", "icv_p8_ippiMirror_32s_C1R", "icv_p8_ownsrDFTinv_14_scale_64f", "icv_p8_ownpi_HistogramEven_16u_C1R", "_ZN2cv3PCAC2ERKNS_11_InputArrayES3_id", "icv_p8_owniResizeNearest_8u_C1R", "icv_g9_ownCalcBorderR3Antialiasing_32f", "icv_w7_ownpis_Min_16s_C3", "icv_h9_ownippiFilterMedian_8u_C1R_3x3", "icv_g9_ippiCopy_16s_AC4C3R", "icv_p8_ownippiFilterMedianVert_16u_C4R_1x5", "icv_p8_ippiTranspose_16u_C4R", "icv_s8_ownsrDftInvRecombine_32f", "icv_w7_ownpi_WarpAffineLinear_16s_C3R", "icv_w7_ippiCopy_8u_C4P4R", "icv_s8_ippiNorm_L1_8u_C3CMR", "icv_s8_ippiFilterMedianBorder_8u_C3R", "icv_s8_ippiSet_32f_C1MR", "icv_s8_ippiResizeLanczos_8u_C4R_L", "icv_w7_owniConvert_16s16u_ccode", "icv_h9_ownRow4Lanczos3_16u", "icv_g9_owniTransposeWxH_32sC3", "icv_h9_ownSS3_52_16u", "icv_g9_ippiAddSquare_32f_C1IR", "Java_org_opencv_dnn_DictValue_isString_10", "_ZNK2cv4cuda10DeviceInfo11queryMemoryERjS2_", "icv_w7_ownCalcBorderR3Cubic16s", "icv_g9_ippiResizeAntialiasing_16s_C1R_L", "icv_p8_ownsMinEvery_16u", "icv_p8_ippiFilterSobelHorizBorder_16s_C1R", "icv_h9_ownscDFTfwd_13_32fc", "icv_s8_ippiDotProd_16s64f_C1R", "ippicviDFTInv_CToC_32fc_C1R", "_ZNK2cv5flann11IndexParams6getIntERKNS_6StringEi", "icv_g9_ownFilter32f_8u_C3R_g9e9", "_ZSt17current_exceptionv", "icv_p8_ippiIntegral_32f_C1R", "icv_p8_ownCalcBorderR3Cubic16s", "icv_s8_ownNorm_L2_8s_C3CMR_V8", "icv_h9_ownCalcBorderR3Cubic8u", "icv_w7_ownpi_Max_16s_AC4R", "icv_g9_ippiDilateInit_L", "icv_p8_owns_BitRev2_D", "icv_g9_ownSS1_43_32f", "icv_n0_own_ipps_sSinCos_G9LAynn", "icv_g9_owniScaleC_8u32s_C1R_fst", "icv_w7_ownpi_WarpAffine_L_32f_C1", "icv_h9_ownpi_WarpSimpleNearest_64f_C1R", "ippicviFilterLaplacianBorder_32f_C1R", "_ZNK2cv9Feature2D5writeERNS_11FileStorageE", "icv_h9_owniResizeCubic_8u_C3R", "icv_h9_ownMean_16u_C3MR_HSW", "icv_n0_own_ipps_sSin_G9LAynn", "icv_h9_ippiCopy_32f_C3R", "icv_h9_owniFilter32f_16s_C4R_g9e9_7", "icv_s8_owniConvert_16u16s_ccode", "icv_s8_ippiResizeSuper_16u_C3R_L", "icv_s8_owns_rFFTinv_4_scale_32f", "icv_w7_ownpi_SmoothPel", "_ZN2cv17DescriptorMatcher20DescriptorCollectionD2Ev", "icv_g9_ownRow4Cubic32f", "ippicviDotProd_32f64f_C1R", "icv_s8_ownNormRel_Inf_8u_C1MR_W7", "icv_p8_ippiThreshold_LTVal_16s_C1R", "icv_w7_ippiXor_8u_C1R", "icv_s8_ownCalcBorderR1Linear16s", "icv_h9_ippiDFTGetSize_R_32f", "icv_s8_ippiAddSquare_16u32f_C1IR", "icv_w7_ippsSortRadixDescend_16u_I", "icv_p8_ownscDFTfwd_14_scale_32fc", "_ZN2cv3hal9absdiff8sEPKajS2_jPajiiPv", "icv_p8_ippiWarpAffineLinear_16s_C4R", "icv_g9_ippiMul_8u_C1RSfs", "icv_h9_dct_8x8_inv_32f", "icv_s8_ownippiThreshold_8u_C1", "icv_g9_ippiThreshold_Val_32f_C1R", "icv_p8_owniFilterSobelHorizSecondBorder2_32f_C1R", "icv_p8_piFilterBoxBorder_32f_C1IR_1_v8u8_A", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_W7", "cvReshapeMatND", "icv_h9_owniThreshold_Val_8u_C1R", "icv_h9_ownippiFilterMedianVert_16s_1x3", "icv_s8_ownpi_WarpAffine_C_Const_32f_C4", "icv_g9_ownpi_WarpAffineSimpleCubic_16s_C4R", "icv_p8_ownpi_GetRotateTransform", "icv_p8_ownRow4Antialiasing_32f", "icv_g9_ippsMinEvery_8u", "icv_p8_ippiFilterBilateralBorderGetBufferSize_L", "icv_h9_ownpi_WarpSimpleNearestInit", "_ZNK2cv4cuda10DeviceInfo10ECCEnabledEv", "icv_p8_ownscDftInv_Fact3_64fc", "ippicviMorphTophat_32f_C3R_L", "icv_h9_ippiScaleC_16u8s_C1R", "icv_g9_owns_cFFT_2_64fc", "icv_h9_ippiSum_16s_C4R", "icv_h9_ownpi_Rotate90_16_C1R", "icv_s8_ownsInitTabDftFwdRec_32f", "_ZN2cv3ogl6Arrays14setAutoReleaseEb", "ippicviMirror_8u_C3IR", "icv_h9_ownpi_Rotate180_32_C4R", "icv_w7_ownpi_WarpAffine_NN_Mem_16s_C1", "icv_s8_ippiNormRel_Inf_16u_C1R", "icv_w7_ownAddProduct_32f_C1IR_W7", "icv_s8_ownNormRel_L2_8u_C1MR_V8", "icv_p8_ownpis_Indx_32f_C4", "icv_p8_ownpi_CmpLE_32f_C1R", "icv_p8_ownSS3_16s", "_ZN2cv5instr8NodeDataC1EPKcS3_iPvbNS0_4TYPEENS0_4IMPLE", "icv_h9_ippiResizeNearest_32f_C1R_L", "icv_w7_owns_cFFTinv_8_64fc", "icv_s8_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short", "icv_w7_ownpi_MinMax_32f_AC4R", "icv_s8_owns_sDctFwd_PostMul_32f", "icv_s8_ownpi_CmpEQ_16s_C1R", "icv_h9_ownpi_WarpSimpleLinear_16s_C3R", "_ZN2cv9undistortERKNS_11_InputArrayERKNS_12_OutputArrayES2_S2_S2_", "_ZNK3tbb8internal27allocate_continuation_proxy8allocateEj", "icv_p8_ownpi_Histogram_16u_C3R", "icv_s8_ownippiFilterMedianHoriz_16u_BC4R_5x1", "icv_s8_owns_crRadix4InvNorm_32f", "icv_p8_ippsSortRadixAscend_32s_I", "icv_s8_ippiResizeSuper_16s_C4R_L", "icv_s8_ippiCopy_16u_C3R", "_ZN2cv5flann11IndexParams9setStringERKNS_6StringES4_", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_V8", "ippicvsExp_64f_A50", "icv_h9_cv_ownippiFilterMax_8u_Col", "Java_org_opencv_core_Core_log_10", "icv_g9_ippiFilterBorder_8u_C4R", "icv_w7_ownpi_Rotate90_16_C3R", "icv_h9_owniCopyMirrorBorder_32s_C1IR", "Java_org_opencv_core_TickMeter_stop_10", "icv_h9_ippiMirror_16u_C3R", "icv_w7_ippiTranspose_32s_C4IR", "icv_w7_ippiCopy_16u_C3R", "icv_p8_ownpis_Max_16u_C1", "icv_w7_owniSet_16s_C3_W7", "icv_w7_ippiDFTInit_C_32fc", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_h9_ownpi_GetAffineTransformInverse", "icv_s8_owniCopy_8u_C3M_W7", "ippicviCompare_32f_C1R", "icv_h9_owniCopyMirrorBorder_32s_C1R", "icv_p8_ownWarpSimple1Nearest16u", "icv_w7_ownAdd_16u32f_C1IMR_W7", "icv_g9_ownpi_SimpleRotate_16u_C1R", "icv_w7_owns_initTabTwdRealRec_32f", "icv_w7_ownscDftInv_Prime5_32fc", "icv_s8_owniGetRectTopBF_8u_C3R", "ippicviWarpAffineCubic_16u_C3R", "icv_s8_ownsConvert_16s64f_W7", "icv_w7_ippiNorm_L2_32f_C3CMR", "icv_p8_owniResizeSuper_16s_C4R", "icv_s8_ownsrDFTfwd_12_64f", "icv_g9_ippiResizeNearest_8u_C4R_L", "icv_s8_ippsCopy_32f", "ippicviMorphTophat_32f_C1R_L", "cvGetRealND", "icv_h9_ippiAddWeighted_32f_C1IMR", "icv_h9_ownsrDFTinv_9_64f", "icv_g9_owns_cFFTfwd_4_32fc", "icv_s8_ownResize1Lanczos3_16s", "Java_org_opencv_videoio_VideoCapture_isOpened_10", "icv_h9_ippiScaleC_16s_C1IR", "icv_s8_ownWarpSimple3Nearest32f", "icv_g9_ownResize3Antialiasing_8u", "icv_h9_ownpi_WarpAffineSimpleNearest_64f_C4R", "icv_h9_ownpi_WarpAffineSimpleNearest_32f_C3R", "icv_s8_owniSet_16s_C3_W7", "icv_h9_owniFilterBilateralR2_InMem_32f_C1R", "icv_s8_owns_cFFTfwd_32_32fc", "icv_s8_ownscDFTinv_14_scale_32fc", "icv_w7_ownippiFilterMedian_16u_C3R", "Java_org_opencv_video_KalmanFilter_set_1processNoiseCov_10", "icv_p8_owns_cRadix4InvNorm_64fc", "icv_w7_owniResizeAntialiasing_16u_C1R_L", "icv_g9_ownSS4_54_8u", "icv_g9_owniScaleC_64f16s_C1R_acc", "ippicviCopySubpixIntersect_8u_C1R", "icv_p8_ownpi_WarpAffine_C_Repl_16s_C1", "icv_s8_ownCalcBorderR4Cubic8u", "_ZN2cv3dnn19experimental_dnn_v112ReshapeLayer6createERKNS1_11LayerParamsE", "icv_g9_ownpi_WarpAffine_NN_Mem_8u_C4", "_ZN3tbb8internal3rml14private_worker3runEv", "icv_p8_ippiDFTInit_C_32fc", "cvReleaseVideoWriter", "icv_g9_owniScaleC_32s64f_C1R_fst", "icv_p8_owniFilterMedianHoriz5x1_32f_C1R", "icv_h9_ownpi_WarpAffine", "ippicviScaleC_8u64f_C1R", "icv_p8_ownResize4Lanczos3_16u", "Java_org_opencv_imgproc_Imgproc_contourArea_10", "icv_g9_ippiScaleC_32f32s_C1R", "icv_s8_ownpi_dInterVectorClip_NN_32_C1", "icv_s8_ownSS3_41_16s", "_ZN2cv15isContourConvexERKNS_11_InputArrayE", "icv_w7_ownRow4AA_16u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_V8", "icv_h9_ippiCopyReplicateBorder_8u_C3R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Mirr_V8", "icv_g9_ippiMirror_8u_C1IR", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_V8", "_ZN2cv3dnn19experimental_dnn_v19LSTMLayer17outputNameToIndexENS_6StringE", "cvReleaseMemStorage", "icv_s8_ippiFilterBoxBorder_16u_C3R", "cvSetNumThreads", "icv_g9_ippiCopy_16s_C1C3R", "icv_g9_owns_cFFT_1_scale_32fc", "icv_s8_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_W7cn", "icv_h9_ownsMaxEvery_64f_AVX", "icv_p8_ownsMul_16s_Bound", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "icv_h9_ippiAbsDiff_32f_C1R", "icv_w7_ownpis_Min_8u_C4", "icv_g9_ippiSub_32f_C1R", "icv_n0_own_ipps_sAtan2_P8LAynn", "icv_ipp_get_cores_on_die", "Java_org_opencv_core_Algorithm_getDefaultName_10", "icv_p8_ippiCopyReplicateBorder_16s_C4R", "_ZN2cv7momentsERKNS_11_InputArrayEb", "icv_w7_ownscDftInv_Prime11_32fc", "icv_h9_owniResizeAntialiasing_32f_C1R_L", "icv_g9_ownRow3Lanczos3_16u", "icv_p8_owniFilter_32f_C4R_v8u8_2NA", "icv_g9_ownippiFilterxBrd32f_8u_C1R", "icv_s8_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_g9_owniFilterMedianSqr5x5_32f_C1R", "__register_frame_info", "Java_org_opencv_core_Mat_n_1dot", "Java_org_opencv_imgproc_Imgproc_undistortPoints_11", "cvSetReal1D", "icv_w7_ippiSum_16u_C1R", "icv_g9_ownSS4_a7_16u", "icv_h9_owniFlipCopy_16u_C1", "icv_g9_ownRow1Cubic32f", "ippicviSet_16u_C3MR", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_W7", "icv_w7_ippiFilterBoxBorder_32f_C1R", "icv_g9_ownpi_WarpAffine_C_Transp_32f_C1", "Java_org_opencv_ml_SVMSGD_load_10", "icv_s8_ippiScaleC_8u_C1IR", "icv_p8_owniScaleC_16u32f_C1R_acc", "icv_w7_ownpi_WarpAffineSimpleLinear_32f_C4R", "icv_w7_ippiWarpAffineCubic_16u_C4R", "icv_p8_ownpis_Min_32f_AC4", "icv_p8_owns_crRadix4InvNorm_64f", "icv_p8_ippiCopyReplicateBorder_32s_C1IR_L", "icv_s8_ownpi_WarpAffineNearest_16s_C1R", "ippicviMorphGradient_8u_C4R_L", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_X_AVX", "_ZN2cv9polylinesERKNS_17_InputOutputArrayERKNS_11_InputArrayEbRKNS_7Scalar_IdEEiii", "icv_h9_piGradient32f", "icv_h9_ippiCopyMirrorBorder_16s_C4R", "icv_s8_ownscDFTinv_10_scale_32fc", "icv_g9_ippiFilterScharrVertMaskBorder_16s_C1R", "icv_w7_owniGetRectTopBF_32f_C1R", "icv_s8_ownsMinEvery_8u", "icv_p8_DotProd_64fc", "icv_w7_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_p8_ippiMorphTophat_8u_C3R_L", "icv_s8_ownscDFTfwd_5_32fc", "icv_h9_ippiDilate_8u_C4R_L", "icv_s8_owniGetRectComBF_8u_C3R", "icv_p8_ownpi_WarpAffine_L_Const_8u_C4", "WebPEncodeBGRA", "ippicviWarpAffineCubic_32f_C4R", "_ZN2cv15spatialGradientERKNS_11_InputArrayERKNS_12_OutputArrayES5_ii", "icv_h9_ippiResizeLinear_16s_C3R_L", "icv_h9_ownWarpSimple1Nearest16s", "icv_p8_ippsFFTInv_PackToR_32f", "_ZN2cv9SparseMat5eraseEiiPj", "icv_g9_owniScaleC_16s64f_C1R_fst", "icv_s8_owniSet_32f_C3_W7", "icv_p8_ownHipass5x5Col_32f_C4", "icv_g9_ippiCopyReplicateBorder_16u_C4R", "WebPDecodeARGBInto", "icv_p8_ownpi_WarpSimpleNearestInit", "icv_g9_ippiNormDiff_Inf_16u_C1MR", "icv_p8_ownSS1_94_8u", "Java_org_opencv_core_Core_idft_10", "icv_ipp_is_mni_extension", "icv_g9_owniResizeAntialiasingLanczosInit_L", "icv_g9_owns_rFFTfwd_4_32f", "icv_p8_owniResizeCubic_16u_C1R", "icv_p8_owniFlip_32s_C1", "own_ipps_dCos_SC_A11", "icv_w7_owncvGetCacheSize", "icv_s8_ownpi_WarpAffine_L_Const_8u_C1", "_ZN2cv8clipLineENS_5Size_IxEERNS_6Point_IxEES4_", "icv_g9_ownsrDFTfwd_9_32f", "icv_s8_ownpi_WarpAffineSimpleCubic_16s_C1R", "icv_p8_ownpi_Histogram_BS_16s_C1R", "ippicviMorphOpen_16u_C1R_L", "icv_h9_owniGetRectBottomBF_32f_C3R", "icv_s8_ownsrDFTfwd_11_scale_64f", "_ZN2cv17DescriptorMatcher5matchERKNS_11_InputArrayERSt6vectorINS_6DMatchESaIS5_EES3_", "icv_g9_ownSS1_41_32f", "ippicvsSortRadixDescend_32s_I", "icv_h9_ippiTranspose_32s_C1R", "icv_g9_ownsrDFTfwd_7_64f", "icv_p8_ownpi_CmpLT_8u_C1R", "icv_s8_ownSum_8u_C1MR_W7", "icv_s8_ippsSortRadixIndexAscend_32s", "icv_h9_ippiResizeGetSrcRoi_L", "icv_w7_ownpi_WarpAffine_C_Mem_16s_C1", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "icv_p8_ownippiFilterMax_32f_Row", "_ZN2cv11VideoWriterD1Ev", "icv_w7_ownpi_WarpAffine_L_16u_AC4", "ippicviResizeAntialiasing_16s_C4R_L", "icv_s8_owniConvert_8s16u_ccode", "icv_h9_ownsrDFTfwd_12_32f", "icv_h9_owniFilter32f_16u_C3R_g9e9_4", "icv_s8_ownpi_Max_16s_C1R", "cvMorphologyEx", "icv_g9_owniScaleC_8u8u_C1R_acc", "icv_w7_ippiScaleC_8u_C1R", "icv_g9_owniGetRectLeftBF_8u_C1R", "icv_h9_ownSS4_72_32f", "icv_s8_ownsGetSizeDftConv_32f", "icv_w7_ownResize3Antialiasing_32f", "icv_h9_ownsrDFTinv_15_32f", "_ZN2cv13HOGDescriptor14setSVMDetectorERKNS_11_InputArrayE", "icv_w7_ownMorphAdvFunc", "icv_g9_owniGetRectBottomBF_8u_C3R", "icv_w7_ownpi_NormL2Diff_16s_C1R", "icv_p8_ownpi_WarpSimpleGetBufferSize", "_ZN2cv3ocl16convertFromImageEPvRNS_4UMatE", "icv_h9_ippiNorm_Inf_32f_C1R", "icv_w7_piGradientSobel32f_c1", "icv_h9_ownRow1Filter8_16u", "_ZN2cv3ocl13ProgramSourceC2ERKNS_6StringES4_S4_S4_", "icv_w7_ownpis_Min_8u_AC4", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_W7", "cvTrace", "icv_g9_ippiCopyConstBorder_16s_C1R", "icv_g9_ownpi_WarpSimpleNearest_64f_C4R", "_ZN2cv8calcHistEPKNS_3MatEiPKiRKNS_11_InputArrayERNS_9SparseMatEiS4_PPKfbb", "icv_s8_ownippiFilterMedianSqr_16u_C4R", "icv_w7_ippiScaleC_32s_C1R", "icv_g9_ownFilterBoxBorderInMem_16u_C1IR", "_ZN2cv3hal5QR64fEPdjiiiS1_jS1_", "_ZN2cv3ocl7ProgramaSERKS1_", "_ZN2cv3hal6sub16uEPKtjS2_jPtjiiPv", "icv_p8_ownpi_Rotate180_16_C1R", "icv_h9_owniFilter32f_16s_C1R_g9e9_1", "icv_w7_ippiWarpAffineLinear_64f_C4R", "icv_s8_ippiCopy_16s_C3AC4R", "icv_s8_piFilterBoxBorder_32f_C1R_v8u8_NA", "_ZN2cv3ocl7Image2DC1ERKNS_4UMatEbb", "icv_p8_ippiCrossCorrNorm_32f_C1R", "_ZN2cv21BaseCascadeClassifierD1Ev", "icv_s8_owniCopy8u_C3P3_A6", "icv_s8_ownpi_WarpAffineSimpleLinear_16u_C3R", "icv_s8_owniCopy_8u_P4C4R", "_ZN2cv17startWindowThreadEv", "_ZdlPv", "icv_s8_Plr2Crt_32f_WMT", "_ZN2cv3Mat6resizeEj", "icv_w7_ownpi_WarpSimpleLinear_8u_C3R", "icv_s8_ownSharpenRow_8u_C4", "cvRectangle", "icv_p8_ownpi_WarpAffine_L_Const_32f_C4", "icv_g9_ippiResizeAntialiasing_16s_C4R_L", "icv_p8_ownpi_XorC_32s_C4R", "icv_g9_ownpi_Rotate90_32_C4R", "icv_s8_ippiSet_16u_C4R", "icv_w7_ippiMean_32f_C3R", "icv_h9_ownCalcBorderR1Linear16u", "ippicviTranspose_32f_C3R", "icv_p8_ownNorm_Inf_8u_C1MR_W7", "icv_s8_ownpi_dInterVector_NN_16_P3", "icv_h9_ippiMirror_16u_C4R", "icv_s8_ippsDFTInit_C_64fc", "Java_org_opencv_imgproc_LineSegmentDetector_detect_11", "Java_org_opencv_video_BackgroundSubtractorMOG2_delete", "icv_g9_owns_initTabBitRevNorm", "icv_w7_ownResize3Cubic16s", "icv_p8_ownpi_Histogram_BS_32f_AC4R", "icv_s8_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_w7_ownFilterBoxBorderGetBufferSize", "_ZN2cv6detail11PlaneWarper7warpRoiENS_5Size_IiEERKNS_11_InputArrayES6_", "icv_p8_ownHipass5x5Col_16s_C1", "icv_w7_ownRow1Cubic8u", "_ZN2cv3ocl5QueueC2ERKNS0_7ContextERKNS0_6DeviceE", "_ZN2cv3PCAC2ERKNS_11_InputArrayES3_ii", "icv_w7_ownpi_WarpAffine_L_Mem_16u_C3", "icv_p8_ownpi_WarpAffine_NN_Repl_16u_C4", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_1", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_10", "icv_p8_ownSS1_54_8u", "ippicviResizeNearest_8u_C4R_L", "icv_s8_ippiScaleC_32s32f_C1R", "icv_s8_ownSS1_31_16s", "icv_p8_ownpi_AndC_8u_C1R", "icv_w7_ownRectStdDev_32s32f_C1R_W7", "icv_s8_owns_BitRev1_S", "_ZN2cv4cuda24printShortCudaDeviceInfoEi", "icv_w7_ownscrDftFwd_Prime_32f", "icv_g9_ownFilter32f_8u_C4R_g9e9", "icv_w7_ownippiFilterMin_32f_Col_AC4", "Java_org_opencv_ml_TrainData_getSample_10", "icv_g9_ownpi_WarpSimpleLinear_32f_C3R", "icv_s8_ownscDftFwd_Prime6_32fc", "icv_s8_ownSS4_52_16s", "icv_g9_ownsrDFTfwd_6_scale_64f", "icv_s8_ippiCopyMirrorBorder_32f_C1R", "icv_w7_ownpi_MinMax_8u_C1R", "icv_s8_ownFilterRowBorderPipeline_16s_C1R_X_V8", "Java_org_opencv_video_BackgroundSubtractorMOG2_getShadowThreshold_10", "icv_s8_ownBuildFilter_32f", "icv_w7_ippsDCTInvInit_32f", "Java_org_opencv_features2d_KAZE_create_11", "icv_p8_ownscDFTinv_10_64fc", "_ZN2cv3hal6min32sEPKijS2_jPijiiPv", "icv_s8_ownpi_WarpAffine_L_Const_8u_C4", "icv_s8_owniGetRectTop_32f", "icv_w7_ippiMirror_16u_C3R", "icv_s8_ownResize3Nearest32f", "icv_h9_ownippiFilterMedianSqr_16s_C4R", "icv_s8_ownSS1_73_16u", "icv_g9_ippiCopy_8u_C3MR", "icv_w7_owniResizeNearest_32f_C3R", "_ZN2cv3SVD7computeERKNS_11_InputArrayERKNS_12_OutputArrayES6_S6_i", "icv_g9_owniFilterBilateralR1_InMem_8u_C1R_L", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERSt6vectorINS0_13ImageFeaturesESaIS6_EERKS5_IS5_INS_5Rect_IiEESaISB_EESaISD_EE", "icv_s8_ownRow1Filter2_8u", "icv_s8_ippiWarpAffineCubic_16s_C1R", "icv_w7_ownSumSq_32f_C1R_W7", "icv_g9_ownpi_NormInfDiff_8u_C1R", "icv_g9_ippiCopyMirrorBorder_16s_C1R", "icv_w7_ownsrDFTfwd_6_scale_64f", "icv_p8_ownDistanceTransform_3x3_8u_C1R_B", "icv_p8_ownscrDftInv_Prime4_32f", "icv_w7_ownRow1Linear64f", "icv_w7_ownSharpenRow_32f_C4", "cvFree_", "icv_s8_ownscDFTinv_7_scale_32fc", "icv_p8_ippiCopy_32f_C4C1R", "icv_g9_ownpi_WarpAffine_NN_Repl_64f_C4", "icv_g9_ippsFFTInv_PermToR_64f", "_ZN2cv3hal5cmp8sEPKajS2_jPhjiiPv", "Java_org_opencv_photo_Photo_createCalibrateDebevec_10", "Java_org_opencv_core_Mat_n_1diag__JI", "icv_p8_ippiSum_16s_C1R", "icv_g9_ownResize3Lanczos3_8u", "_ZN2cv2ml3SVM14getDefaultGridEi", "icv_w7_owncvGetMaxNumThreads", "_ZN2cv18SimpleBlobDetector6Params4readERKNS_8FileNodeE", "ippicviThreshold_GTVal_8u_C1IR", "icv_p8_ippiSum_8u_C1R", "icv_w7_ippiMirror_32f_C1R", "icv_w7_ownippiFilterMedian_8u_C4R", "icv_p8_ownResize1Lanczos3_16u", "icv_g9_ownsSub_16s_1Sfs", "icv_s8_ippiNormRel_Inf_16u_C1MR", "icv_w7_ownpi_AndC_32s_C1R", "icv_s8_ippiResizeSuper_32f_C1R_L", "icv_g9_ownColLanczos3_32f", "icv_g9_ownLanczos3KernelAA", "icv_s8_ippiMin_8u_C1R", "icv_p8_ownCopySubpixIntersect_32f_C1R_W7", "cvCreateFileCapture", "icv_g9_ippiConvert_8s32s_C1R", "Java_org_opencv_ml_ParamGrid_create_10", "icv_p8_ippiResizeNearest_16u_C3R_L", "icv_g9_ownpi_WarpAffine_L_Repl_32f_C1", "icv_s8_ownpi_dInterVectorClip_C_16u_C4", "icv_s8_ippiWarpAffineLinear_32f_C3R", "icv_s8_owniResizeCubic_16s_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "icv_g9_ippsMul_32fc_I", "icv_s8_owniSet32sC1Mas", "icv_w7_ownpi_CountInRange_8u_C1R", "Java_org_opencv_features2d_AKAZE_delete", "icv_h9_ippiFilterSobelNegVertBorder_32f_C1R", "icv_p8_ownCalcBorderR3Linear16s", "_ZN2cv25fastNlMeansDenoisingMultiERKNS_11_InputArrayERKNS_12_OutputArrayEiifii", "ippicviFilterBorder_16u_C1R", "icv_p8_ippsMagnitude_16s_Sfs", "icv_w7_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "icv_h9_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_G9E9cn", "_ZNK2cv17CascadeClassifier18isOldFormatCascadeEv", "_ZNK2cv8KeyPoint4hashEv", "icv_p8_ippiResizeNearest_16s_C1R_L", "icv_h9_ippiResizeLinear_8u_C3R_L", "icv_h9_ippiWarpAffineLinear_16s_C1R", "icv_p8_ownResize1Linear64f", "icv_g9_ownCommonLoop_8u_C4R", "icv_g9_owniFilter_32f_C4R_g9e9_3", "icv_h9_owns_rFFTinv_8_32f", "icv_p8_owniScaleC_16s32s_C1R_fst", "icv_s8_ippiAddWeighted_16u32f_C1IR", "icv_g9_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_G9E9cn", "icv_w7_ownAConvert_Round32f_16u", "icv_w7_ownippiFilterMedian_16u_C1R_5x5", "icv_s8_ownscDftInv_Fact13_64fc", "icv_s8_ippiCopyMirrorBorder_32s_C3IR_L", "icv_g9_owns_initTabTwdRealRec_64f", "icv_s8_ippiResizeSuper_16s_C3R_L", "icv_g9_ownCalcBorderR4Cubic16u", "icv_p8_ownscDFTinv_10_scale_64fc", "icv_p8_ippiFFTInit_R_32f", "icv_p8_ippiScaleC_16u_C1IR", "icv_p8_ownpi_dInterVectorClip_NN_16_P4", "Java_org_opencv_imgproc_LineSegmentDetector_delete", "icv_h9_ownippiFilterMax_16u_Row_h9l9", "icv_s8_ownLaplRow5x5_8u_C1", "icv_g9_ownApplyHaarClassifier_32f_C1R_PRN", "icv_s8_ownpi_dInterVectorClip_C_32f_C", "icv_s8_ownSS1_81_16u", "icv_p8_owniCopy_8u_AC4C3R", "icv_s8_ownColLinear32f", "icv_w7_ippiFilterMedianHoriz_16s_C3R_3x1_A6", "icv_g9_ownippsCnvrtNear_32f16s_AVX", "Java_org_opencv_ml_LogisticRegression_getTermCriteria_10", "_ZN2cvplERKNS_7MatExprES2_", "icv_s8_ownpi_dInterPoint_C_Plane_32f", "icv_w7_ownippiThreshold_V_32f_C3", "Java_org_opencv_photo_CalibrateDebevec_getSamples_10", "icv_s8_owniCrossCorrValid_NormLevel_32f_C1R", "icv_h9_ownRow3Antialiasing_16u", "icv_s8_ippiNorm_Inf_16u_C1R", "_ZN2cv5utils5trace7details8traceArgERKNS2_8TraceArgEd", "icv_p8_ippiNormDiff_Inf_32f_C3CMR", "_ZN2cv6detail16MultiBandBlender4feedERKNS_11_InputArrayES4_NS_6Point_IiEE", "icv_p8_ownAConvert_Round32f_16u_AC4R", "icv_s8_ippiResizeLanczos_16s_C3R_L", "icv_g9_ippiFilterBoxBorder_16u_C3R", "icv_s8_ippiConvert_16u16s_C1RSfs", "icv_s8_myRGBToHLS_8u_C3R", "icv_g9_owniFlipCopy_16u_C1", "Java_org_opencv_ml_TrainData_getCatCount_10", "icv_g9_ippiCopy_32f_C1R_L", "icv_g9_ippiNorm_Inf_8u_C1MR", "_ZN2cv9BFMatcher12knnMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "icv_g9_ownsMaxEvery_16u", "icv_h9_ownippiFilterMin_8u_RowCol_C4_h9l9", "_ZN2cv9videostab14ColorInpainter7inpaintEiRNS_3MatES3_", "icv_w7_ownCalcBorderR3Linear16s", "icv_w7_ownHipass5x5Frs_16s", "icv_s8_ownNormRel_L1_16u_C3CMR_V8", "icv_p8_owns_cFFTfwd_4_scale_64fc", "_ZN2cv3hal8recip32sEPKijS2_jPijiiPv", "icv_p8_ipMirror135_16uC1R", "icv_w7_ownscDftFwd_Prime_32fc", "icv_p8_ownFilter_32f_C4R", "icv_w7_owniConvert_32f8s_AC4_W7", "_ZN2cv3hal5Morph6createEiiiiiiPhjiiiiiPKdibb", "icv_g9_ippiCopy_32f_C1R", "icv_p8_ownpi_WarpAffine_C_Mem_32f_C1", "_ZNK2cv10softdoubledvERKS0_", "Java_org_opencv_dnn_Dnn_createTensorflowImporter_10", "icv_w7_ownsrDFTfwd_12_64f", "icv_g9_owniFilter32f_16s_C4R_g9e9_0", "icv_w7_cv_ownippiFilterMax_32f_Row", "icv_s8_ippiNormDiff_L1_32f_C3CMR", "icv_w7_ownscDFTfwd_12_scale_64fc", "icv_p8_ippiScaleC_32f_C1R", "icv_w7_owniTplNormMean_32f_C1R", "icv_w7_ownHipass5x5Col_32f_C4", "ippicvsDFTFwd_RToPack_64f", "Java_org_opencv_core_Mat_n_1dataAddr", "icv_g9_ippiMorphBlackhat_32f_C1R_L", "icv_g9_owniCrossCorrNormGetSize", "Java_org_opencv_core_Core_batchDistance_12", "icv_p8_ownsrDFTfwd_7_scale_64f", "icv_p8_ippiSum_16s_C4R", "Java_org_opencv_imgproc_Imgproc_GaussianBlur_12", "ippicviResizeLanczos_32f_C3R_L", "icv_s8_ownNormRel_L2_16u_C3CMR_V8", "icv_s8_ownNorm_Inf_8u_C3CMR_V8", "icv_p8_ownippiFilterMedianVert_16u_C4R", "icv_p8_owniCopyBF_8u_C1R", "icv_p8_ownSS4_41_16u", "icv_w7_ownHipass5x5Col_8u_AC4", "icv_h9_ownMean_StdDev_8u_C3CMR_HSW", "icv_g9_ownBuildFilter_64f", "icv_s8_ippiResizeNearest_16s_C3R_L", "icv_s8_ippiNormRel_L1_8u_C1MR", "icv_p8_ippiCopy_16u_C1MR", "icv_p8_ownscDFTinv_7_32fc", "_ZN2cv9videostab17OnePassStabilizer27estimateStabilizationMotionEv", "icv_w7_ippiResizeCubic_32f_C1R_L", "_ZNK2cv3ocl6Device21nativeVectorWidthLongEv", "icv_g9_owniTranspose32s_C1R_core2", "icv_h9_ippiAddProduct_16u32f_C1IMR", "icv_s8_ippsFFTGetSize_C_32fc", "_ZN2cv15NAryMatIteratorC2EPPKNS_3MatEPPhi", "_ZN2cv3ogl6Arrays16setTexCoordArrayERKNS_11_InputArrayE", "icv_p8_ippsSortRadixIndexAscend_16u", "icv_s8_ownscDftFwd_Prime11_64fc", "icv_w7_owns_cRadix4InvNorm_32fc", "icv_g9_ippiMorphOpen_16s_C1R_L", "icv_g9_ippiErodeGetBufferSize_L", "ippicviMorphClose_32f_C1R_L", "Java_org_opencv_core_Core_cartToPolar_11", "icv_g9_ownsInitTabDftFwdRec_32f", "icv_p8_ownippiFilterMedianCross_16s_C3R_3x3", "icv_s8_ownpi_WarpAffineCubic_16s_C4R", "icv_g9_ownpi_WarpAffineNearest_16s_C3R", "icv_g9_ownRow1Cubic16u", "icv_p8_ownpi_dInterVectorClip_NN_8_P4", "icv_s8_ippiMirror_32f_C4IR", "icv_p8_ownpi_WarpAffine_NN_Mem_16u_C4", "Java_org_opencv_core_Core_checkRange_11", "icv_h9_ippiCopy_8u_C1R", "icv_p8_ownsrDFTfwd_9_32f", "icv_s8_ownippiThreshold_V_16s_AC4", "icv_h9_ownsGetSizeTabDftBase_32f", "icv_p8_ippiCopy_16u_P3C3R", "_ZN2cv11imreadmultiERKNS_6StringERSt6vectorINS_3MatESaIS4_EEi", "icv_p8_ownippiFilterMedianHoriz_8u_C3R_3x1", "icv_w7_ownpi_WarpAffine_C_Const_64f_C4", "icv_p8_ownpi_WarpSimpleLinear_16s_C4R", "Java_org_opencv_ml_SVM_getTermCriteria_10", "icv_s8_ippiHarrisCorner_32f_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C3R", "_ZN2cv3ocl5QueueD2Ev", "icv_g9_innerRGBToHLS_8u_C3R", "_ZNK2cv2ml6KDTree8getPointEiPi", "ippicviSqrDistanceNorm_32f_C1R", "cvGetCaptureProperty", "icv_p8_ownFilterRowBorderPipeline_32f_C1R", "_ZN2cv3ipp12getIppStatusEv", "icv_g9_owniConvert_32s16u_C1RSfs", "_ZN2cv8superres28createOptFlow_Farneback_CUDAEv", "icv_n0_own_ipps_sLn_V8HAynn", "icv_h9_ownsMinIndx_32f_AVX", "_ZN2cv8imdecodeERKNS_11_InputArrayEiPNS_3MatE", "icv_s8_ownNorm_L1_32f_C1MR_W7", "_ZN3tbb8internal17generic_scheduler16wait_until_emptyEv", "icv_p8_ippiResizeSuper_32f_C4R_L", "_ZN2cv9SparseMat5eraseEPKiPj", "icv_h9_owniCmpEq_16u_C1R", "icv_g9_ownippiFilterMedian_16u_C3R", "icv_s8_ownippiFilterMedianVert_16s", "_ZN2cv6kmeansERKNS_11_InputArrayEiRKNS_17_InputOutputArrayENS_12TermCriteriaEiiRKNS_12_OutputArrayE", "icv_p8_ippiResizeGetBorderSize_L", "_ZN2cv6detail12DpSeamFinder11getSeamTipsEiiRNS_6Point_IiEES4_", "icv_h9_owniScaleC_32f16u_C1R_fst", "icv_g9_ippiTranspose_16u_C4R", "ippicviSum_16s_C3R", "icv_s8_owniConvert_16s32f_AC4_W7", "icv_s8_ippiMean_8u_C1R", "icv_s8_ownippiThreshold_GV_16s_C4", "icv_h9_ippsDCTFwdInit_32f", "ippicviWarpAffineNearest_16u_C1R", "icv_g9_ownSS1_53_8u", "icv_h9_ippiNorm_Inf_16u_C1R", "icv_w7_ippiCopyConstBorder_8u_C4R", "icv_h9_ippiTranspose_16s_C1IR", "icv_p8_ippiMorphClose_8u_C4R_L", "icv_s8_ownpi_Histogram_8u_C3R", "_ZNK2cv10softdoublermERKS0_", "icv_h9_ownpi_SimpleRotate_16u_C3R", "icv_s8_owns_cFFTfwd_8_32fc", "icv_p8_ippiNormDiff_L1_8u_C1R", "icv_w7_owns_rFFTfwd_16_32f", "ippicviCopy_16u_C3AC4R", "icv_s8_ippsSortRadixIndexDescend_32f", "icv_h9_ippiMulPack_32f_C1IR", "icv_p8_ownpi_AndC_32s_C4R", "_ZN2cv3ogl6Buffer9unmapHostEv", "icv_g9_ownpi_Rotate180_8_C3R", "icv_w7_ownpi_WarpAffine_L_16u_C3", "icv_s8_ippiScaleC_32s64f_C1R", "_ZN2cv3hal14addWeighted32fEPKfjS2_jPfjiiPv", "icv_h9_ippiScaleC_8s8u_C1R", "icv_w7_ownAConvert_Round32s_8u", "_ZN2cv9videostab15VideoFileSource5widthEv", "_ZNK2cv5MatOp4sizeERKNS_7MatExprE", "icv_h9_ownsrDFTfwd_14_64f", "_ZN2cv29createBackgroundSubtractorKNNEidb", "icv_s8_owns_cRealRecombine_64f", "icv_s8_ippiCopyReplicateBorder_8u_C3IR_L", "icv_h9_ippiCompare_8u_C1R", "icv_g9_ownSS3_31_8u", "icv_w7_ownSumSq_8u_C1R_W7", "icv_h9_ippiSwapChannels_16u_C3R", "icv_s8_ownSumSq_32f_C1R_W7", "icv_w7_ippiNormDiff_Inf_16u_C3CMR", "icv_p8_ownpi_Min_32f_C1R", "_ZN3tbb8internal6market25update_arena_top_priorityERNS0_5arenaEi", "icv_p8_ownsSqrtOne", "icv_p8_owniScaleC_8s16u_C1R_fst", "_ZN2cv3hal14cvtBGRtoBGR5x5EPKhjPhjiiibi", "Java_org_opencv_core_Core_subtract_10", "icv_g9_ownResize4Linear64f", "_ZN2cv3hal23cvtMultipliedRGBAtoRGBAEPKhjPhjii", "icv_s8_ownscDftFwd_Prime8_64fc", "icv_s8_ownCalcBorderR4Lanczos3_16s", "icv_h9_owns_cFFT_2_scale_64fc", "ippicviWarpAffineNearest_16u_C4R", "_ZN2cv4UMataSERKNS_7Scalar_IdEE", "icv_g9_ippiCopyMirrorBorder_8u_C3IR", "Java_org_opencv_imgproc_Imgproc_putText_11", "icv_h9_ownCalcBorderR1Lanczos2_16s", "_ZN2cv5Mutex4lockEv", "icv_h9_ippiMean_StdDev_8u_C3CR", "_ZNK2cv16BOWKMeansTrainer7clusterERKNS_3MatE", "icv_h9_owniScaleC_32s8u_C1R_fst", "icv_h9_ownpi_getWarpSimpleRect_Mem", "icv_g9_ippiNormDiff_Inf_16s_C1R", "_ZN2cv7fisheye15undistortPointsERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_S3_S3_", "icv_w7_ownscDFTinv_7_32fc", "icv_s8_owniTransposeWxH_32sC1", "icv_s8_ownippiFilterMedianHoriz_8u_C1R_5x1", "icv_s8_ownpi_dInterVector_NN_32_C4", "_ZN2cv8Subdiv2DC2Ev", "icv_s8_ownAbsDiffC_16u_C1R_W7_B", "icv_p8_ownps_Mul_16u_Sfs", "icv_h9_ippsSortRadixDescend_32f_I", "_ZNK2cv5MatOp3roiERKNS_7MatExprERKNS_5RangeES6_RS1_", "icv_s8_owniCrossCorrNormGetSize", "icv_g9_ippiNormRel_L2_8u_C1R", "icv_s8_ipMirror135_16uC1R", "ippicviNormDiff_L2_32f_C1MR", "icv_w7_ippiSet_16s_C4R", "icv_s8_ownpi_WarpAffineSimpleNearest_32f_C1R", "icv_p8_ippiNormDiff_L1_32f_C1MR", "Java_org_opencv_ml_EM_getWeights_10", "ippicviMirror_16u_C3R", "icv_w7_ownsrDFTfwd_9_64f", "icv_h9_ownNormDiff_L1_8u_C3CMR_HSW", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "icv_g9_ippiMinIndx_32f_C1R", "icv_w7_ippiCopyReplicateBorder_8u_C1IR_L", "icv_h9_ownSS1_31_16s", "Java_org_opencv_core_Mat_n_1isSubmatrix", "icv_h9_ippiMoments64f_16u_C1R", "icv_s8_ippiCopyMirrorBorder_8u_C1R_L", "icv_n0_own_ipps_sExp_V8HAynn", "icv_h9_ownNorm_L1_8u_C3CMR_HSW", "ippicviMean_8u_C3R", "icv_s8_ippiFilterSobelHorizBorder_16s_C1R", "icv_s8_ippiNormRel_L1_8u_C1R", "icv_p8_ownCanny_32f8u_C1R_2_16u_W7", "Java_org_opencv_imgproc_Imgproc_Canny_12", "icv_p8_ownSS4_54_8u", "icv_w7_ippsFFTInit_C_32fc", "icv_w7_owniFilterBilateralCom_InMem_32f_C3R_px", "icv_p8_owniScaleC_32f8u_C1R_acc", "_ZNK3tbb8internal20allocate_child_proxy4freeERNS_4taskE", "icv_w7_ownscDFTfwd_7_scale_64fc", "icv_g9_ownippiFilterxBrd32f_16u_C4R", "icv_g9_owniFilter_32f_C3R_g9e9_4", "Java_org_opencv_core_Core_multiply_10", "icv_g9_ippiNormRel_L1_8u_C1MR", "_ZN2cv10setRNGSeedEi", "icv_p8_ownNormDiff_L2_32f_C3CMR_W7", "_ZN2cv3dnn19experimental_dnn_v18ImporterD2Ev", "_ZN2cv6detail20CylindricalWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_iiRS3_", "ippicviMean_8u_C1MR", "Java_org_opencv_photo_Tonemap_setGamma_10", "_ZNK2cv3ocl6Device22nativeVectorWidthFloatEv", "_ZNK2cv9softfloatgtERKS0_", "icv_p8_ownMorphEllipseGetBufferSize", "icv_s8_ownsrDFTfwd_13_32f", "icv_h9_owniSet_32s_C3R_L", "Java_org_opencv_video_DualTVL1OpticalFlow_setTau_10", "icv_h9_ownFilterBoxBorder_16s_C1R", "icv_s8_ownpi_WarpAffine_C_Repl_16s_C3", "icv_p8_owns_cRadix4Fwd_64fc", "icv_h9_ippiFilterBorderGetSize", "ippicviNormRel_L2_32f_C1MR", "_ZN2cv5flann5Index4loadERKNS_11_InputArrayERKNS_6StringE", "icv_h9_ippiCopyMirrorBorder_16u_C1R", "icv_s8_ownpi_AndC_8u_AC4R", "icv_g9_ippiGetAffineQuad", "Java_org_opencv_imgproc_Subdiv2D_edgeOrg_11", "cvMaxRect", "icv_p8_ippiNormDiff_L2_32f_C1R", "icv_p8_ippiResizeGetSrcRoi_L", "icv_p8_ippiNormDiff_Inf_16s_C1R", "icv_w7_ippiMorphOpen_8u_C4R_L", "_ZN2cv3hal11normHammingEPKhi", "icv_s8_ippiHistogram_16u_C1R", "icv_p8_ownippiFilterMedian_16u_C3R", "icv_h9_owns_rFFT_1_scale_64f", "icv_h9_ownsMinEvery_64f_AVX", "icv_s8_owniCopy16s_C3P3_A6_NT", "icv_h9_ownippsCnvrtFin_32f32s_Sfs", "icv_h9_ownippiFilterMedianHoriz_16u_C4R", "icv_h9_ippiWarpAffineGetSize", "icv_g9_ownCalcBorderR4Linear8u", "icv_g9_owns_cRealRecombine_32f", "_ZN2cv3ocl5QueueaSERKS1_", "_ZN2cv28convertPointsFromHomogeneousERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_h9_ownpi_WarpAffine_C_Const_16s_C4", "icv_p8_ownpi_WarpAffine_NN_32_C1", "icv_p8_ippiWarpAffineNearest_32f_C4R", "icv_w7_ippiErodeInit_L", "icv_h9_owniScaleC_64f16s_C1R_fst", "icv_w7_ippiCopy_8u_C1C3R", "icv_p8_ippsSortAscend_32f_I", "icv_h9_owniResizeLinear_8u_C4R", "_ZN2cvanERKNS_3MatES2_", "icv_p8_ownpi_WarpAffine_NN_Mem_64f_C4", "icv_g9_IsOverlapedROI", "icv_p8_owns_initTabTwdCcsRec_64f", "icv_g9_ownWarpSimple1Nearest32f", "icv_g9_ippiResizeNearest_16u_C3R_L", "icv_w7_ownscDFTfwd_5_scale_64fc", "Java_org_opencv_ml_ANN_1MLP_setBackpropMomentumScale_10", "icv_p8_owniResizeLinear_64f_C1R", "ippicviXor_8u_C1R", "icv_g9_ippiFilterSobelHorizSecondBorderGetBufferSize", "icv_s8_ownColCubic16u", "icv_p8_ippiIntegral_8u32s_C1R", "_ZN3tbb8internal5arena12enqueue_taskERNS_4taskEiRNS0_10FastRandomE", "icv_s8_ownpi_dInterVectorClip_L_32f_P4", "icv_w7_ippiCopy_16u_C4R", "icv_s8_ownpi_WarpAffine_C_Const_16u_C4", "_ZN2cv3hal8Filter2D6createEPhjiiiiiiiidiibb", "icv_g9_ippiDotProd_32f64f_C1R", "icv_s8_ippiSub_8u_C3RSfs", "icv_s8_ownpi_dInterVectorClip_L_8u_P4", "icv_p8_ownpi_SimpleRotate_16s_C1R", "icv_p8_ippiResizeAntialiasing_16u_C3R_L", "icv_w7_ownippiFilterMax_16u_Row", "icv_p8_ippiCopy_16s_C3AC4R", "icv_h9_ownpi_WarpAffineLinear_16s_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_W7", "icv_p8_ownResize4Linear64f", "_ZN2cv8Subdiv2D6insertENS_6Point_IfEE", "icv_w7_ippiCopyReplicateBorder_8u_C1IR", "icv_s8_ownpi_Sum_8u_AC4R", "icv_h9_owniFilterBilateralCom_InMem_8u_C1R", "_ZN2cv10warpAffineERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_5Size_IiEEiiRKNS_7Scalar_IdEE", "icv_h9_ippiCopyConstBorder_32f_C1R_L", "icv_w7_ownpi_Set_64f_C3R", "icv_s8_owniResizeAntialiasing_16s_C3R_L", "icv_g9_ippiDotProd_16u64f_C1R", "_ZNK2cv11_InputArray4rowsEi", "icv_h9_ownippiFilterxBrd_8u_C4R", "icv_p8_ownsMinFind_32f_W7", "icv_w7_ownsMul_16s", "icv_h9_ippiMorphGradient_16u_C1R_L", "ippicvsSortRadixIndexAscend_32s", "icv_w7_ippiCopy_16s_C4C1R", "icv_p8_owniScaleC_16u8u_C1R_acc", "icv_p8_ownpi_WarpAffine_L_Mem_64f_C1", "icv_g9_ippiTranspose_32f_C4R", "icv_g9_ippiScaleC_32s16s_C1R", "icv_s8_ownsrDFTfwd_11_scale_32f", "icv_p8_owniTranspose_32s_C4R_W7", "icv_w7_ownscDFTfwd_13_64fc", "icv_g9_ownpi_Set_64f_C1R", "icv_g9_ownSS3_41_16s", "icv_w7_ownippiThreshold_32f_C1", "icv_g9_owniFilter_32f_C4R_g9e9_5", "icv_p8_owns_cRadix4Inv_32fc", "_ZN2cv3LDAC2ERKNS_11_InputArrayES3_i", "Java_org_opencv_ml_ANN_1MLP_getRpropDW0_10", "icv_p8_ownscDFTfwd_15_scale_64fc", "icv_p8_ownResize3Nearest16s", "icv_g9_ownpi_Rotate90_8_C4R", "icv_p8_ippiMorphGradient_8u_C1R_L", "_ZN3tbb8internal3rml14private_serverD0Ev", "icv_p8_ownNorm_L1_8s_C3CMR_V8", "ippicviWarpAffineLinear_16u_C3R", "icv_s8_ownsrDFTinv_6_scale_32f", "icv_p8_owniScaleC_8s32s_C1R_acc", "icv_p8_owniFilter2_16s_C1R", "icv_p8_ippsFFTInv_CToC_32fc", "icv_g9_owniFilterBilateralCom_InMem_32f_C1R_L", "icv_s8_myHSVToRGB_8u_C3R", "icv_p8_ownResize3Lanczos3_32f", "icv_h9_ownWarpSimple1Nearest16u", "icv_s8_ownippiFilterMedianCross_16s_C1R_5x5", "icv_h9_ownpi_WarpAffine_CR_32f_C4", "ippicviFilterScharrHorizMaskBorder_32f_C1R", "icv_w7_ownpi_Max_8u_AC4R", "icv_p8_ownpi_WarpAffine_NN_Repl_8u_C1", "icv_h9_owns_cRadix4Fwd_64fc", "icv_g9_ownscDftFwd_Prime2_32fc", "_Z17vector_Mat_to_MatRSt6vectorIN2cv3MatESaIS1_EERS1_", "icv_h9_ippiMorphClose_16u_C1R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_W7", "icv_w7_ippiCopy_8u_P4C4R", "Java_org_opencv_calib3d_StereoMatcher_getBlockSize_10", "icv_w7_ownRow4Lanczos3_8u", "icv_g9_owns_cFftFwd_Fact4_64fc", "icv_s8_ippiNormDiff_L2_8u_C3CMR", "icv_h9_ownWarpSimple4Nearest16s", "_ZN2cv3hal12cvtBGRtoGrayEPKhjPhjiiiib", "icv_n0_own_ipps_sAtan2_V8HAynn", "icv_s8_owns_crFft_BlkSplit_32f", "icv_p8_ownCalcBorderR3Lanczos2_32f", "_ZN2cv6detail17CylindricalWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "icv_s8_ownsSub_16s", "icv_w7_ownpi_WarpSimpleLinear_16u_C1R", "_ZN2cv3dnn19experimental_dnn_v15Layer8finalizeERKSt6vectorIPNS_3MatESaIS5_EERS3_IS4_SaIS4_EE", "icv_p8_ownippiFilterMedian_8u_BC4R", "icv_p8_ownippiThreshold_V_8u_AC4", "icv_p8_owniCopy_16s_C4P4R_cn", "icv_w7_ippiCopyReplicateBorder_8u_C3R_L", "_ZN2cv3ogl11mapGLBufferERKNS0_6BufferEi", "icv_h9_owniScaleC_16s32f_C1R_fst", "icv_g9_ownRow4Linear16u", "icv_h9_owniGetRectTop_16s", "icv_w7_owniGetRectLeftBF_8u_C1R", "icv_p8_ippsPowOne", "icv_s8_ownpi_Rotate90_16_C4R", "icv_g9_ippiWarpAffineCubic_32f_C3R", "icv_h9_ownpi_MinMax_16u_C1R", "Java_org_opencv_features2d_AgastFeatureDetector_setThreshold_10", "icv_g9_ippiTranspose_8u_C1R", "icv_s8_ippsSortRadixIndexDescend_8u", "icv_w7_owniGetRectComBF_32f_C1R", "icv_w7_ippiSub_32f_C4R", "icv_g9_ippiFilterBorderInit_32f", "icv_w7_ownsrDFTinv_13_32f", "icv_s8_ownscrDftFwd_Prime3_64f", "icv_w7_ownAConvert_Round32s_8u_AC4R", "_ZN2cv9videostab17TwoPassStabilizer5resetEv", "Java_org_opencv_imgproc_Imgproc_integral3_10", "Java_org_opencv_video_DualTVL1OpticalFlow_getScaleStep_10", "icv_w7_ippiMorphTophat_32f_C3R_L", "Java_org_opencv_core_Core_setNumThreads_10", "icv_s8_ownSS1_83_32f", "_ZN2cv2ml7ANN_MLP4loadERKNS_6StringE", "icv_w7_ownRow3Linear16u", "icv_h9_ippsFFTInit_C_32fc", "icv_h9_ownsrDFTinv_14_scale_64f", "icv_g9_ownRow3Antialiasing_16u", "icv_p8_ippiAddWeighted_32f_C1IR", "Java_org_opencv_imgproc_Imgproc_boxFilter_11", "icv_h9_ippiConvert_8u16s_C1R", "_ZN2cv4idctERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_g9_owniResizeSuper_8u_C1R", "icv_g9_ippiMorphGradient_8u_C4R_L", "icv_w7_ownCopySubpix_8u32f_C1R_W7", "icv_w7_dct_8x8_inv_32f", "icv_p8_ownpi_WarpAffineSimpleCubic_32f_C1R", "icv_w7_ippiScaleC_8s32f_C1R", "icv_p8_ippiNorm_Inf_32f_C1R", "icv_g9_owniScaleC_16s8s_C1R_fst", "Java_org_opencv_imgproc_Imgproc_rotatedRectangleIntersection_10", "icv_w7_ippiMean_8u_C1MR", "icv_p8_ownColLinear16s", "icv_g9_ownResize1Lanczos3_16u", "icv_w7_ipMirror45_32uC1R", "icv_w7_ippiConvert_8u32s_C1R", "icv_g9_ownMinEigenVal_16s32f_C1R", "icv_h9_ownpi_WarpAffineSimpleCubic_16u_C4R", "icv_p8_owniTransposeWxH_16uC4", "icv_p8_ippiDCTInvInit_32f", "ippicviThreshold_GT_8u_C1IR", "icv_p8_ownResize1Nearest16s", "icv_g9_owniCopyMirrorBorder_32s_C3R", "icv_w7_ippsConvert_32f8s_Sfs", "ippicviMomentInit_64f", "icv_w7_ownippiFilterMedianVert_16u_1x3", "icv_p8_ippiTranspose_16u_C4IR", "icv_w7_owniConvert_16s8u_W7", "icv_s8_owniResizeAntialiasing_16s_C1R_L", "icv_s8_owns_crFftFwd_Fact4_Last_32f", "_ZN2cv3ocl12PlatformInfoC2Ev", "icv_s8_ippiScaleC_64f8u_C1R", "_ZNK2cv13HOGDescriptor5writeERNS_11FileStorageERKNS_6StringE", "Java_org_opencv_core_Mat_n_1setTo__JJ", "icv_w7_ownippiFilterMedian_8u_C4R_3x3", "_ZN2cv3dnn19experimental_dnn_v13Net8addLayerERKNS_6StringES5_RNS1_11LayerParamsE", "_ZN2cv3Mat5setToERKNS_11_InputArrayES3_", "icv_g9_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "icv_w7_ownsAddC_32f", "icv_h9_ippiAdd_8u_C1RSfs", "icv_p8_owniResizeNearest_32f_C4R", "icv_w7_cv_ownippiFilterMin_16u_Row", "icv_s8_ippiMirror_16s_C4IR", "icv_s8_ownRow3Antialiasing_16s", "icv_h9_ippsSortRadixAscend_64f_I", "icv_w7_ownCopySubpixIntersect_16u_C1R_W7", "icv_s8_owns_cFFTinv_32_64fc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_W7", "icv_h9_owns_cFFTfwd_8_32fc", "icv_w7_ownCalcBorderR1Lanczos3_8u", "icv_h9_ippiWarpAffineCubic_16s_C1R", "icv_g9_ippiConvert_32f8s_C1R", "icv_w7_ownpi_SimpleRotate_8u_C1R", "icv_w7_ownCalcBorderR4Linear8u", "icv_h9_ownSS1_53_8u", "icv_s8_ownippiFilterMedian_8u_BC4R_5x5", "_ZN2cv9videostab12calcFlowMaskERKNS_3MatES3_S3_fS3_S3_RS1_", "icv_s8_ownpi_Rotate180_8_C1R", "icv_g9_ownsrDFTfwd_12_scale_64f", "icv_s8_ownAdd_32f_C1IMR_W7", "icv_w7_ownpi_SimpleRotate_16s_C1R", "icv_g9_ippiNormDiff_L1_16s_C1R", "icv_p8_ownSS4_41_32f", "llwiFilterScharr", "icv_s8_owniSet16sC4Mas", "cvReleaseImage", "icv_g9_ownsrDFTinv_7_scale_32f", "cvReduce", "icv_g9_ippiConvert_8s8u_C1Rs", "icv_p8_ownFilterBorderConvert32s_8u", "icv_s8_owniTranspose16u_C4R_core2", "icv_h9_ownscDftFwd_Prime3_64fc", "Java_org_opencv_calib3d_Calib3d_undistortImage_10", "icv_s8_ownpi_NormL1Diff_32f_C1R", "icv_h9_ownpi_WarpAffine_NN_Const_64f_C1", "icv_s8_ownpi_WarpAffine_NN_Const_8u_C1", "ippicviFilterBorderGetSize", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkC1ERS0_NS_3PtrINS0_9IDetectorEEERKNS0_10ParametersE", "icv_s8_owns_cFFTfwd_4_64fc", "icv_w7_ownscDftInv_Fact7_32fc", "icv_p8_ippiMirror_32f_C1IR", "icv_s8_ownApplyHaarClassifierAllImg8Pix_W7", "icv_s8_ippiNorm_Inf_32f_C3CMR", "icv_p8_ownpi_dInterVector_L_32f_C1", "icv_w7_ippiNormDiff_Inf_16u_C1R", "icv_g9_ownippiFilterMedianVert_16u", "icv_g9_owns_rFFT_1_64f", "icv_h9_ownSS1_8u", "Java_org_opencv_imgproc_Imgproc_drawContours_12", "_ZN2cv7seqPushEP5CvSeqPKv", "icv_p8_owniCopy32s_C3P3_W7_NT", "Java_org_opencv_video_DualTVL1OpticalFlow_setLambda_10", "icv_p8_ownippsCnvrt_32f8s_Sfs", "icv_s8_ownscDFTinv_3_32fc", "_ZNK2cv4UMat9locateROIERNS_5Size_IiEERNS_6Point_IiEE", "icv_h9_ownLanczos3KernelAA", "icv_p8_ownpi_Rotate90_32_C3R", "icv_s8_ownCalcBorderR3Lanczos3_8u", "icv_s8_ownsGetSizeTabDftDir_64f", "icv_w7_owns_cRadix4FwdNorm_32fc", "icv_h9_ippiCopyMirrorBorder_32f_C1R_L", "icv_w7_ownsConvert_8s16s_W7", "icv_p8_ownsSub_8u_1Sfs", "icv_g9_ownRow1Filter10_16u", "_ZN2cv4cuda13nonLocalMeansERKNS_11_InputArrayERKNS_12_OutputArrayEfiiiRNS0_6StreamE", "icv_h9_owniFilterBilateralR2_InMem_8u_C1R", "icv_p8_ownSS4_32_32f", "icv_w7_ippiCopy_16s_C3C1R", "icv_w7_ownResize1Lanczos3_16u", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_V8", "icv_g9_ippiConvert_8s16s_C1R", "icv_p8_ownSS4_98_16u", "Java_org_opencv_calib3d_Calib3d_getOptimalNewCameraMatrix_10", "icv_h9_owns_cFFTfwd_16_32fc", "icv_g9_ownsrDFTinv_6_32f", "icv_p8_owniConvert_16s16u_ccode", "icv_s8_ippiNormRel_L1_16u_C1MR", "icv_w7_owniClipRectZeroTail_32f_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_create_11", "icv_w7_myRGBToGray_32f_C3C1R", "icv_p8_ippiMorphOpen_16u_C1R_L", "icv_p8_ownsGetSizeTabDftBase_32f", "icv_s8_ownSS4_31_16u", "icv_h9_ippsMaxEvery_16u", "icv_g9_ownResize3Lanczos2_32f", "icv_h9_ippiTranspose_32f_C3IR", "Java_org_opencv_imgproc_Imgproc_getDefaultNewCameraMatrix_11", "icv_p8_ippiSet_16s_C4R", "icv_w7_ippiScaleC_32f8s_C1R", "icv_w7_ownsConvert_32f64f_W7", "_ZN3tbb8internal26GetBoolEnvironmentVariableEPKc", "icv_w7_ippiSet_8u_C4MR", "icv_g9_ownpi_NormL1Diff_16u_C1R", "_ZNKSt15__exception_ptr13exception_ptrcvMS0_FvvEEv", "cvConvexityDefects", "ippicviMinMaxIndx_32f_C1MR", "icv_s8_ippiMinIndx_16s_C1R", "icv_g9_ippiCopyMirrorBorder_8u_C4IR", "icv_w7_ownCalcBorderR1Linear8u", "cvSeqRemove", "_ZN2cv6detail18PairwiseSeamFinder3runEv", "icv_p8_ownFilterBoxBorderGetBufferSize", "icv_g9_ownSS3_41_32f", "icv_w7_ownRow1AA_16u", "_ZN2cv6imshowERKNS_6StringERKNS_3ogl9Texture2DE", "icv_p8_ownCopySubpix_8u32f_C1R_V8", "icv_p8_ippiNormDiff_L2_16u_C1MR", "icv_p8_ownRow4Linear16s", "icv_s8_owniFilter_32f_C4R_v8u8_1", "icv_p8_ippiNorm_L1_8u_C1R", "icv_s8_ownSum_16u_C3CMR_V8", "icv_ipp_is_sse41_extension", "icv_s8_ownHipass5x5Row_32f", "icv_h9_piFilterBoxBorder_32f_C1R_1_v8u8_NA", "icv_g9_ippiCopyConstBorder_32s_C4R", "icv_p8_ippiConvert_16s8u_C1R", "icv_s8_owns_crFft_BlkSplit_64f", "icv_s8_ownippiFilterMin_8u_Row", "icv_w7_ownCalcBorderR3Antialiasing_16s", "icv_p8_ownHipass5x5Col_16s_C3", "_ZN2cv18createTonemapDragoEfff", "icv_s8_ippiSub_32f_C1R", "icv_s8_ownNormRel_L1_8u_C1MR_W7", "Java_org_opencv_features2d_Params_set_1filterByCircularity_10", "ippicvsMaxEvery_64f", "icv_s8_owniSwap_32s_C4C3R", "icv_p8_ownCalcBorderR1Linear64f", "icv_h9_owniFilter_32f_C4R_g9e9_5", "ippicviMinEigenVal_32f_C1R", "icv_g9_owniScaleC_64f8u_C1R_fst", "icv_s8_ownippiFilterMedianHoriz_16u_BC4R_3x1", "_ZN2cv9videostab17OnePassStabilizer5resetEv", "icv_s8_ippiScaleC_8u_C1R", "icv_p8_ippiResizeLinear_16s_C4R_L", "icv_p8_ippiGradientVectorScharr_32f_C1R", "icv_p8_owniScaleC_16u16s_C1R_acc", "icv_p8_ownscDftInv_Fact2_32fc", "_Z21vector_Point2d_to_MatRSt6vectorIN2cv6Point_IdEESaIS2_EERNS0_3MatE", "icv_h9_owns_cFftInv_Fact4_32fc", "icv_p8_ownscDFTfwd_9_32fc", "icv_p8_owniSwapChannels_16u_C4C3R", "icv_n0_own_ipps_sAtan2_W7HAynn", "icv_p8_ippiCopyConstBorder_16u_C3R", "icv_h9_ownpi_NormInf_8u_C1R", "_ZN10__cxxabiv117__pbase_type_infoD1Ev", "icv_h9_ippiWarpAffineCubic_64f_C4R", "icv_p8_ippiNormDiff_L2_8u_C1MR", "icv_s8_owniResizeSuper_16u_C1R", "_ZN2cv15KeyPointsFilter16runByImageBorderERSt6vectorINS_8KeyPointESaIS2_EENS_5Size_IiEEi", "icv_h9_ippiFilterBilateralBorderGetBufferSize_L", "icv_p8_ippiResizeAntialiasing_8u_C4R_L", "icv_w7_ippiFilterMedian_16u_C3R_3x3_A6", "icv_n0_own_ipps_dLn_G9LAynn", "icv_w7_ippiFilterBilateralBorderGetBufferSize", "icv_g9_ownpi_WarpAffine_C_Const_64f_C3", "icv_g9_ippsCopy_64f", "icv_w7_ownscDftInv_Prime2_64fc", "_ZNK2cv3ocl6Device16printfBufferSizeEv", "icv_w7_owns_initDctFwd_Conv_32f", "icv_w7_ownippiFilterMedianHoriz_8u_C4R_3x1", "icv_h9_owns_cRadix4Inv_32fc", "_ZN2cv9videostab34MoreAccurateMotionWobbleSuppressor8suppressEiRKNS_3MatERS2_", "icv_g9_ippiFilterBorder_32f_C4R", "icv_p8_ippiFilterRowBorderPipeline_32f_C1R", "icv_h9_ownpi_WarpAffine_C_Mem_8u_C1", "icv_w7_ownippiFilterMedianCross_16u_C4R_3x3", "icv_g9_ippiNorm_L2_16s_C1R", "ippicviScaleC_8s32f_C1R", "icv_g9_ownsAdd_8u_Bound", "icv_w7_ownpi_WarpAffineSimpleLinear_64f_C1R", "icv_s8_ownRectStdDev_32f_C1R_W7", "icv_h9_ownResize1Linear16u", "icv_g9_ippiCopyConstBorder_32s_C1R", "icv_g9_ownResize3Cubic16s", "_ZN2cv2ml6KDTreeC2ERKNS_11_InputArrayES4_b", "own_ipps_sCos_SC_HA", "icv_s8_ownscDftFwd_Prime_64fc", "icv_g9_ownSS4vertical_32f", "_ZN2cv3MatC1EiPKiiPvPKj", "icv_s8_ippiResizeLinear_8u_C3R_L", "icv_h9_ownSS1_a7_16u", "icv_w7_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short", "icv_g9_owniResizeNearest_16u_C4R", "icv_s8_ownscDftReord_32fc", "icv_w7_ownippiFilterMedianCross_8u_C3R_3x3", "Java_org_opencv_core_Core_mixChannels_10", "icv_h9_ownsrDftFwd_Conv_32f", "icv_g9_ippiGradientVectorScharr_32f_C1R", "icv_h9_ownpi_Rotate90_64_C3R", "icv_w7_ownRow3AA_16s", "icv_s8_ownCalcBorderR1Lanczos3_32f", "Java_org_opencv_dnn_Net_getLayerTypes_10", "icv_h9_owniFilter32f_16s_C4R_g9e9_1", "icv_p8_owns_crFft_BlkSplit_32f", "icv_s8_owniResizeAntialiasing_16s_C4R_L", "Java_org_opencv_imgproc_Imgproc_Canny_10", "Java_org_opencv_core_Core_repeat_10", "icv_w7_ippiResizeCubic_8u_C4R_L", "icv_h9_ownSS4_32_32f", "icv_w7_ownCalcBorderR1Lanczos2_32f", "icv_p8_ownsSubC_32f", "icv_s8_ownsrDFTfwd_9_scale_64f", "icv_g9_ownFilterRowBorderPipeline_32f_C1R", "_ZN2cv9videostab15MotionInpainterC2Ev", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarThresholdGen_10", "icv_p8_owns_rFFTinv_16_scale_64f", "icv_p8_owniScaleC_16s8s_C1R_fst", "icv_s8_piFilterBoxBorder_32f_C1IR_v8u8_A", "ippicviMinMax_16s_C1R", "icv_g9_ownResize1Lanczos3_32f", "icv_h9_ippiConvert_32s8u_C1R", "icv_g9_ippiScaleC_16s16u_C1R", "icv_g9_ippiCopyReplicateBorder_32s_C1IR", "icv_s8_ippsDFTGetSize_R_32f", "_ZN2cv3hal6sub64fEPKdjS2_jPdjiiPv", "icv_h9_ownpi_WarpAffine_L_Mem_16u_C3", "icv_w7_ownsGetSizeTabDftFwdRec_32f", "icv_h9_ownSS3_65_16u", "icv_w7_ownscDftInv_Prime6_32fc", "icv_h9_ippiTranspose_16u_C1R", "icv_s8_ippiScaleC_64f_C1IR", "icv_w7_ippiSwapChannels_16u_C3R", "_ZN2cv2ml3SVM9trainAutoERKNS_11_InputArrayEiS4_iNS_3PtrINS0_9ParamGridEEES7_S7_S7_S7_S7_b", "_ZN2cv3ogl6renderERKNS0_6ArraysEiNS_7Scalar_IdEE", "icv_s8_ownscDftFwd_Fact2_64fc", "cvPtrND", "Java_org_opencv_imgproc_Imgproc_createLineSegmentDetector_10", "icv_g9_ippiCopy_16u_C4P4R", "_ZN2cv4UMat5zerosENS_5Size_IiEEi", "_ZNK2cv5flann5Index4saveERKNS_6StringE", "icv_w7_ippiMean_StdDev_32f_C3CMR", "icv_p8_ownsMul_32fc_I", "icv_h9_ownSS4vertical_8u", "icv_s8_cv_ownippiFilterMin_16u_Row", "icv_w7_ownippsCnvrtFin_32f16u_Sfs", "_ZSt13set_terminatePFvvE", "icv_p8_ownpi_WarpAffine_NN_Repl_32f_C4", "icv_p8_ownRow4Antialiasing_8u", "icv_s8_ownPrewColV_32f", "icv_p8_ownpi_OrC_32s_C1R", "icv_p8_ippiNormRel_L2_16s_C1R", "icv_g9_ownpi_WarpAffine_L_Mem_64f_C3", "icv_w7_ownippiFilterMedian_16s_C3R_5x5", "_ZN2cv9ExceptionC1EiRKNS_6StringES3_S3_i", "icv_h9_ippsFFTFwd_CToC_64fc", "icv_p8_owniFilterNegSobelVertBorder2_8u16s_C1R", "icv_w7_ippiCopy_16u_C3MR", "icv_w7_ownpi_WarpAffine_C_Const_8u_C3", "_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE", "icv_h9_ippiWarpAffineCubic_16u_C3R", "icv_p8_ippiResizeCubicInit_L", "_ZN2cv10meanStdDevERKNS_11_InputArrayERKNS_12_OutputArrayES5_S2_", "icv_p8_owniGetRectTop_16s", "icv_w7_owniSet_32f_C1M_W7", "icv_s8_ownpi_WarpAffine_C_Const_16u_C3", "icv_g9_owniScaleC_64f16s_C1R_fst", "icv_p8_ippiMulC_32f_C1R", "icv_p8_ippiCannyBorder_8u_C1R", "ippicviSwapChannels_32f_C3C4R", "icv_p8_ippiScaleC_32f16s_C1R", "icv_h9_ownsrDFTinv_3_64f", "icv_h9_ippiSet_16s_C4MR", "icv_p8_ownFilterBoxBorderInMem5x5_16u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_V8", "icv_p8_ownscDft_Conv_64fc", "icv_g9_ownippiFilterMedian_16s_C4R", "icv_g9_cv_ownippiFilterMax_32f_Row", "icv_w7_ownpi_WarpAffine_L_32f_P4", "icv_p8_ownpi_AndC_8u_AC4R", "Java_org_opencv_core_Core_SVBackSubst_10", "icv_w7_ownpi_dInterVectorClip_L_32f_C3", "icv_p8_owniResizeCubic_16s_C3R", "icv_g9_owniCopyMirrorBorder_32s_C1R_L", "_ZN2cv12VideoCaptureC2Ei", "icv_p8_ippiCopy_8u_C3MR", "icv_p8_owniAutoCorr_C1R", "icv_p8_ownscDFTfwd_3_32fc", "icv_w7_ownippiFilterMedianCross_8u_C1R_3x3", "icv_g9_ippiCopy_16u_C1C3R", "icv_s8_owniCrossCorrValid_NormLevel_8u_C1R", "icv_g9_ippiCopyConstBorder_32s_C3R_L", "Java_org_opencv_ml_EM_setCovarianceMatrixType_10", "_ZN2cv11VideoWriter3setEid", "ippicviFilterMedianBorder_16u_C1R", "icv_g9_ippiWarpAffineNearest_16u_C1R", "_ZN2cv9boxPointsENS_11RotatedRectERKNS_12_OutputArrayE", "icv_s8_ownAConvert32s_8u_AC4R", "_ZN2cv3ocl7Image2DC1Ev", "icv_w7_ownscDFTfwd_6_scale_64fc", "icv_h9_owns_rFFTinv_4_32f", "icv_h9_ippiScaleC_32s32f_C1R", "icv_w7_ownpi_WarpAffine_L_8u_C1", "icv_s8_ownpi_WarpAffine_L_Mem_16u_C4", "icv_w7_ownpi_dInterVector_NN_16_C4", "icv_w7_ownsrDFTfwd_12_scale_32f", "Java_org_opencv_features2d_DescriptorMatcher_clear_10", "icv_p8_ownMorphInit_L", "_Unwind_Backtrace", "icv_s8_ownsCopyLine_8u", "_ZN2cv3ocl7ProgramC2ERKS1_", "icv_w7_ownSharpenRow_8u_C4", "icv_s8_ownippiFilterMedianHoriz_8u_C4R_3x1", "icv_p8_owniResizeAntialiasing_8u_C4R_L", "ippicviSqrDistanceNormGetBufferSize", "icv_h9_ownpi_WarpAffineCubic_16s_C4R", "icv_w7_ownpi_WarpSimpleNearest_64f_C4R", "_ZN2cv9AlgorithmD2Ev", "icv_w7_ownpi_dInterVectorClip_NN_8_C1", "_ZN2cv6detail17BundleAdjusterRay9calcErrorERNS_3MatE", "icv_w7_ippiMorphClose_32f_C4R_L", "icv_s8_ownpi_Rotate90_8_C4R", "icv_p8_innerNormL2_5x5", "icv_p8_ippiResizeCubic_16u_C4R_L", "icv_h9_ippiThreshold_LTVal_32f_C1R", "icv_p8_ippiFilterBorderGetSize", "_ZN2cv19connectedComponentsERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_g9_ippiResizeNearest_16u_C1R_L", "ippicviResizeLanczos_32f_C1R_L", "icv_h9_ownsGetSizeTabDftFwdRec_64f", "Java_org_opencv_imgproc_Imgproc_pyrDown_11", "Java_org_opencv_photo_CalibrateRobertson_setMaxIter_10", "_ZN2cv22SimpleBlobDetectorImplC2ERKNS_18SimpleBlobDetector6ParamsE", "icv_w7_owniResizeNearest_16u_C4R", "icv_g9_ownSShorisontal_16u", "icv_p8_ownpi_NormInf_16s_C1R", "icv_p8_ippiScaleC_64f8s_C1R", "icv_g9_ippiSub_8u_C4RSfs", "icv_p8_ownpi_dInterVectorClip_L_8u_C3", "icv_g9_ippiScaleC_16s8s_C1R", "icv_s8_ownSShorisontal_8u", "icv_n0_own_ipps_sSqrt_G9EPnnn", "WebPBlendAlpha", "_ZN2cv3hal9absdiff8uEPKhjS2_jPhjiiPv", "_ZN2cv3dnn19experimental_dnn_v110SplitLayer6createERKNS1_11LayerParamsE", "_ZN2cv17getOptimalDFTSizeEi", "icv_w7_ownpi_Histogram_FS_32f_C1R", "icv_p8_ownsrDFTinv_9_scale_64f", "Java_org_opencv_core_Mat_n_1submat_1rr", "icv_g9_ippiNorm_Inf_32f_C1R", "icv_p8_piGradientSobel8u_5x5_row_c1", "icv_p8_ownsGetSizeTabDftDir_64f", "icv_s8_ownColAntialiasing_32f", "_ZN2cv5flann11IndexParams6setIntERKNS_6StringEi", "icv_g9_ownFilterRow32f_16u_C4R_g9e9", "Java_org_opencv_imgproc_Imgproc_accumulateProduct_11", "icv_p8_ownSS1_16u", "_ZN2cv17FlannBasedMatcher6createEv", "icv_h9_owniCopy_8u_C3MR", "icv_g9_ippiFilterBoxBorder_16u_C4R", "icv_h9_ippiMean_16u_C3CMR", "icv_s8_ownscrDftFwd_Fact_32f", "icv_s8_ownRow4Antialiasing_8u", "icv_w7_ownpi_WarpAffine_L_Repl_16s_C1", "_ZN2cv9BFMatcherC2Eib", "icv_w7_owniResizeCubic_16u_C4R", "icv_s8_owniGetRectTopBF_32f_C1R", "icv_s8_ippiConvert_16s32f_C1R", "icv_s8_ippiCopyMirrorBorder_32f_C3R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "icv_s8_ownMean_16u_C1MR_W7", "_ZThn384_N2cv9videostab17OnePassStabilizer5resetEv", "icv_w7_ippiCopyReplicateBorder_32s_C3IR", "_ZN2cv9fastAtan2Eff", "icv_p8_ownscDFTinv_12_32fc", "icv_g9_ownscDFTfwd_14_scale_64fc", "icv_h9_owns_cRadix4InvNorm_64fc", "_ZN2cv6detail17OrbFeaturesFinder4findERKNS_11_InputArrayERNS0_13ImageFeaturesE", "icv_p8_ippiCopy_32f_AC4C3R", "icv_ps_set_ssx", "icv_w7_ippiResizeLanczosInit_L", "icv_s8_ownsrDFTfwd_5_scale_64f", "icv_g9_ownFilterBoxBorder_8u_C4IR", "Java_org_opencv_core_Core_randn_10", "icv_s8_ippsFFTInv_PackToR_32f", "_ZNK2cv3LDA4saveERKNS_6StringE", "icv_s8_ownCalcBorderR4Antialiasing_32f", "icv_s8_ownsGetSizeDftPrimeFact_32f_32f", "ippicviResizeNearest_16s_C3R_L", "icv_w7_ownResize1Nearest8u", "icv_h9_ownSS3_43_8u", "icv_s8_ownpi_MinIndx_16s_C1R", "icv_g9_owns_rFFTfwd_4_64f", "ippicvsMalloc_8u_L", "_ZNK2cv3Mat6copyToERKNS_12_OutputArrayE", "icv_w7_ippiMean_16u_C1R", "icv_g9_ownscDFTinv_3_32fc", "icv_g9_ippiScaleC_32f16u_C1R", "icv_s8_ippiScaleC_16s_C1IR", "icv_g9_ippiResizeLinear_8u_C1R_L", "icv_p8_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_W7cn", "Java_org_opencv_core_Mat_n_1eye__III", "icv_s8_cv_ownippiFilterMax_32f_Row", "icv_w7_ippiDilate_8u_C4R_L", "icv_n0_own_ipps_sSinCos_W7HAynn", "icv_w7_ownResize3Lanczos3_16u", "icv_p8_ownCalcBorderR1Linear32f", "icv_p8_ippiAddProduct_16u32f_C1IMR", "iwiImage_GetPtr", "icv_s8_ownpi_AndC_32s_C3R", "icv_s8_owniNormLevel_8u_C1R", "icv_w7_ownsrDftInv_PrimeFact_32f", "_ZN2cv7vconcatEPKNS_3MatEjRKNS_12_OutputArrayE", "icv_p8_ownNorm_L1_16u_C3CMR_P8", "_ZNK2cv12_OutputArray12getGpuMatRefEv", "_ZN3tbb8internal3rml11tbb_factory4openEv", "Java_org_opencv_features2d_FeatureDetector_detect_11", "_ZN2cv6detail17BundleAdjusterRay12calcJacobianERNS_3MatE", "icv_p8_owniResizeAntialiasing_16s_C4R_L", "icv_s8_ippiMean_16u_C3CMR", "icv_p8_ippiCopyConstBorder_32f_C1R_L", "icv_s8_ownpi_Rotate90_B_8_C4R", "_ZN2cv3hal8recip16sEPKsjS2_jPsjiiPv", "icv_w7_ownpi_dInterVectorClip_C_32f_C", "icv_h9_ippiTranspose_8u_C4R", "icv_w7_ownscrDftInv_Fact4_64f", "icv_h9_ippiMinMaxIndx_32f_C1R", "icv_p8_ownpi_WarpAffineNearest_32f_C4R", "icv_p8_ownCalcBorderR1Lanczos3_16u", "icv_p8_ownBFilterRow32f_16u_C3R", "icv_w7_owniCopy_8u_AC4_A6", "icv_s8_ippiAddProduct_8u32f_C1IR", "_ZN2cv3ocl7Program4readERKNS_6StringES4_", "_ZN2cv5flann5IndexC2ERKNS_11_InputArrayERKNS0_11IndexParamsEN7cvflann16flann_distance_tE", "WebPDecodeBGRAInto", "icv_p8_ownpi_NormL2Rel_32f_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_V8", "Java_org_opencv_features2d_KAZE_setExtended_10", "icv_h9_owniScaleC_8u16s_C1R_acc", "Java_org_opencv_core_Core_kmeans_10", "icv_w7_ippiCopyConstBorder_32f_C1R", "_ZN2cv4cuda6GpuMatC1ERKS1_NS_5RangeES4_", "_ZNK2cv11FileStorage9getFormatEv", "Java_org_opencv_ml_EM_load_10", "icv_p8_ownpi_WarpAffineSimpleNearest_8u_C1R", "Java_org_opencv_core_Core_absdiff_11", "icv_g9_ippiMorphBlackhat_8u_C4R_L", "_ZN2cv9SparseMat6createEiPKii", "icv_g9_ippiCanny_16s8u_C1R", "cvConvexHull2", "Java_org_opencv_calib3d_StereoSGBM_create_11", "icv_w7_ownsrDftInvRecombine_64f", "icv_s8_ownRow4Antialiasing_32f", "icv_w7_ippiScaleC_16s16u_C1R", "icv_h9_ippsSortRadixAscend_32s_I", "icv_h9_owns_initTabBitRev", "Java_org_opencv_imgproc_Subdiv2D_symEdge_10", "icv_w7_owniResizeLinear_8u_C4R", "icv_g9_ippiCopyMirrorBorder_8u_C1IR_L", "icv_p8_ippsDFTInv_CToC_32fc", "Java_org_opencv_features2d_Params_get_1maxInertiaRatio_10", "icv_g9_owniScaleC_32f32s_C1R_fst", "icv_h9_ippiDotProd_16s64f_C1R", "icv_s8_ippiMorphClose_32f_C1R_L", "icv_p8_ippiAbsDiff_8u_C1R", "icv_w7_ippiAddProduct_16u32f_C1IMR", "icv_g9_ippsSortRadixIndexAscend_32s", "Java_org_opencv_core_Mat_nGetI", "icv_p8_ippiGetAffineQuad", "icv_w7_ippiMorphGradient_32f_C3R_L", "icv_p8_ippiTranspose_32s_C4IR", "icv_s8_ownpi_WarpAffine_C_Transp_8u_C4", "icv_h9_ownCalcBorderR4Cubic32f", "Java_org_opencv_photo_AlignMTB_setCut_10", "_ZN2cv11VideoWriter6fourccEcccc", "icv_g9_ownSS4_73_8u", "icv_s8_ippiCompare_32f_C1R", "icv_p8_ippiMorphTophat_8u_C1R_L", "icv_w7_ownpi_dInterPoint_C_Plane_32f", "icv_p8_ownsMaxEvery_8u", "icv_h9_ownscDftInv_Fact4_64fc", "icv_g9_ownRow4Lanczos3_8u", "icv_s8_owniFilter_32f_C1R_v8u8_1NA", "_ZN2cv9selectROIERKNS_6StringERKNS_11_InputArrayEbb", "icv_s8_ownippiFilterMedianVert_8u", "icv_g9_owns_rFFTfwd_16_32f", "icv_w7_ownSharpenRow_16s_C4", "icv_h9_ownpi_Rotate90_B_16_C4R", "icv_p8_ippiFilterBorder_32f_C3R", "icv_h9_ownscDftInv_Prime13_32fc", "icv_w7_DotProd_64f", "icv_w7_ippsSortRadixIndexDescend_16s", "icv_p8_ownpi_Max_16s_AC4R", "icv_g9_owniFilter32f_8u_C4R_g9e9_8", "icv_w7_ippiFilterBoxBorderGetBufferSize", "_ZN2cv3dnn19experimental_dnn_v112PoolingLayer6createERKNS1_11LayerParamsE", "icv_p8_owniFilterBilateralR2_InMem_32f_C1R_L", "icv_h9_ippiWarpAffineNearest_16s_C3R", "icv_h9_owniFilter32f_16s_C1R_g9e9_8", "icv_h9_ownpi_CmpEQ_8u_C1R", "cvGetPerspectiveTransform", "_ZN2cv11blendLinearERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayE", "icv_g9_ownsrDFTinv_9_32f", "_ZN2cv3hal7recip8uEPKhjS2_jPhjiiPv", "icv_p8_ownSS1_83_32f", "ippicviFilterScharrVertMaskBorder_8u16s_C1R", "icv_g9_ownscDFTfwd_9_64fc", "icv_g9_ippiFFTInv_PackToR_32f_C1R", "icv_g9_cv_ownippiFilterMax_8u_Col", "icv_p8_ownRow3Lanczos3_32f", "icv_w7_ownCanny_32f8u_C1R_3_32s_W7", "icv_p8_ippiNormRel_L1_16u_C1R", "icv_s8_ippiColorToGray_32f_AC4C1R", "icv_g9_doubleCubicCoeffs", "icv_w7_ownRow3Cubic16u", "icv_s8_ippiScaleC_16u_C1IR", "cvCreateCameraCapture", "Java_org_opencv_core_Core_compare_11", "icv_g9_ownpi_WarpAffineSimpleNearest_8u_C3R", "icv_g9_ownippiFilterMedianSqr_16u_C4R", "icv_s8_ownCopySubpix_32f_C1R_W7", "icv_n0_own_ipps_dSqrt_P8HAynn", "icv_w7_owns_rFFT_2_scale_32f", "ippicvsSortRadixAscend_64f_I", "icv_w7_ippiCopyConstBorder_32s_C1R", "_ZN2cv3maxERKNS_3MatES2_RS0_", "icv_w7_ownCanny_32f8u_C1R_2_32s_W7", "Java_org_opencv_ml_TrainData_getDefaultSubstValues_10", "icv_s8_owniFilter2_16s_C1R", "icv_h9_ownFilterBoxBorder_8u_C1IR", "icv_p8_ownResize1Linear32f", "icv_h9_ownpi_WarpAffine_L_Repl_32f_C3", "icv_g9_ownsSet_32s", "icv_p8_ownpi_idInterPoint_C_Plane_8u", "icv_s8_ownpi_dInterVectorClip_NN_8_C3", "icv_w7_ownRow3Cubic16s", "cvError", "ippicviNormRel_L1_8u_C1R", "icv_w7_owns_sDctFwd_Conv_32f", "icv_h9_ownippiFilterMedianVert_16s", "Java_org_opencv_photo_CalibrateRobertson_getMaxIter_10", "icv_w7_ippiFilterBorder_32f_C3R", "icv_w7_ippiTranspose_16u_C1IR", "Java_org_opencv_photo_Photo_createTonemapDurand_11", "icv_s8_ippiCopy_8u_AC4R", "_ZN2cv3hal5div8sEPKajS2_jPajiiPv", "_ZN2cv4cuda14deviceSupportsENS0_10FeatureSetE", "icv_p8_ippiScaleC_32s16s_C1R", "_ZN2cv18findFundamentalMatERKNS_11_InputArrayES2_iddRKNS_12_OutputArrayE", "icv_s8_ownsAdd_16s_PosSfs", "Java_org_opencv_photo_AlignMTB_computeBitmaps_10", "_ZN2cv3Mat4onesEiii", "icv_g9_ippiCopy_8u_C3AC4R", "icv_p8_ownSS1_65_32f", "icv_p8_ownCommonLoop_8u_AC4R", "_ZNK2cv3ocl6Device13globalMemSizeEv", "icv_w7_owniResizeCubic_8u_C3R", "icv_h9_ownSSvsum_16u", "icv_h9_ownpi_WarpAffine_CR_32f_C1", "Java_org_opencv_ml_StatModel_predict_11", "icv_p8_ippiMean_StdDev_32f_C1MR", "icv_g9_ownGetPxl_8u", "_ZNK2cv21DetectionBasedTracker31calcTrackedObjectPositionToShowEiRNS0_12ObjectStatusE", "icv_p8_ownippiFilterMedian_8u_C4R_3x3", "icv_h9_ownpi_Set_64f_C3R", "icv_p8_owns_rFFTfwd_4_scale_32f", "Java_org_opencv_ml_LogisticRegression_getRegularization_10", "icv_w7_ippiFilterBoxBorder_16s_C4R", "icv_p8_ippiNormDiff_Inf_16u_C1MR", "icv_s8_ippiNormDiff_Inf_16u_C1MR", "_ZN2cv6detail21BlocksGainCompensator5applyEiNS_6Point_IiEERKNS_17_InputOutputArrayERKNS_11_InputArrayE", "icv_s8_ownDistanceTransform_3x3_8u32f_C1R_21B", "icv_s8_ownAddWeighted_8u32f_C1IR_W7", "icv_s8_ippsSqrtOneF", "icv_w7_ownpi_WarpAffineCubic_8u_C3R", "icv_w7_ownsCosOne", "icv_s8_ippiMean_StdDev_8u_C3CMR", "Java_org_opencv_video_BackgroundSubtractorMOG2_setBackgroundRatio_10", "icv_g9_ippiMorphTophat_32f_C3R_L", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7_sym", "icv_h9_ownpi_WarpAffineLinear_16u_C1R", "icv_h9_ippiAddWeighted_16u32f_C1IMR", "icv_s8_ippiSqrIntegral_8u32f64f_C1R", "icv_h9_ownpis_Min_16u_C1", "icv_s8_ownNormDiff_L1_8s_C3CMR_V8", "icv_w7_ippiThreshold_LTVal_16s_C1R", "ippicviNorm_Inf_32f_C1R", "iwiRoiPipeline_SetTile", "icv_w7_ippiConvert_8s32f_C1R", "icv_g9_owniCopyMirrorBorder_8u_C1IR", "icv_h9_ownpi_WarpSimpleCubic_8u_C4R", "icv_s8_ownAConvert_Round32s_8u_AC4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "icv_w7_ownpi_HistogramEven_16s_C1R", "icv_s8_ippsMul_64fc", "_ZN2cv8clearSeqEP5CvSeq", "icv_p8_ippiMaxIndx_16u_C1R", "icv_s8_ownRow1Lanczos3_32f", "icv_g9_owniScaleC_16s16s_C1R_acc", "icv_p8_ownsrDFTinv_9_32f", "_Z21Mat_to_vector_Point3dRN2cv3MatERSt6vectorINS_7Point3_IdEESaIS4_EE", "Java_org_opencv_ml_SVMSGD_setTermCriteria_10", "Java_org_opencv_ml_ANN_1MLP_setRpropDWMax_10", "icv_g9_ownRow4Cubic8u", "icv_h9_innerCommonLoopW5_32f_C3R", "icv_g9_ownResize4Lanczos2_32f", "icv_w7_ippsSqrtOneF", "Java_org_opencv_core_TickMeter_TickMeter_10", "icv_w7_owniResizeNearest_16s_C1R", "icv_s8_owns_getSizesTwd_Large_32f", "icv_s8_owniConvert_8u32f_W7", "icv_s8_ownippiThreshold_8u_AC4", "_ZN2cv14phaseCorrelateERKNS_11_InputArrayES2_S2_Pd", "icv_g9_ownpi_WarpSimpleNearest_16s_C1R", "icv_g9_ippsSqrt_32f", "icv_g9_ippiSet_32s_C3MR", "cvProjectPCA", "icv_p8_ownpi_WarpAffineSimpleNearest_16s_C4R", "icv_p8_ownSS3_32f", "icv_g9_ippiSwapChannels_8u_C3R", "icv_w7_ownsMul_8u_1Sfs", "icv_h9_ippiSet_16s_C4R", "icv_w7_ownsrDFTinv_3_scale_32f", "icv_h9_ippsSortRadixIndexDescend_16s", "_ZN7CvMatNDC2ERKN2cv3MatE", "_ZN3tbb8internal22AvailableHwConcurrencyEv", "icv_h9_ippiErodeGetSpecSize_L", "icv_h9_ownpi_WarpAffine_L_Mem_16s_C1", "icv_h9_cv_ownippiFilterMax_8u_Msk", "icv_s8_ippiTranspose_16s_C4IR", "ippicviResizeLinear_8u_C1R_L", "icv_h9_ippiNorm_L2_16u_C1R", "icv_p8_ippiWarpAffineCubic_32f_C3R", "icv_h9_ownippiFilterMin_8u_RowCol_C1_h9l9", "icv_h9_ownpi_MinMax_8u_C1R", "icv_w7_ownpi_WarpAffineCubic_32f_C1R", "icv_g9_ownCalcBorderR3Linear32f", "icv_g9_owniFilterMedianBorderInMem_32f_C1R", "icv_h9_ippiCopyReplicateBorder_32s_C4R", "icv_g9_ownpi_WarpAffine_C_Repl_8u_C3", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_3x3", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_W7", "_ZNK2cv4cuda10DeviceInfo19maxTexture2DLayeredEv", "icv_h9_ippsMinEvery_8u", "icv_s8_owns_cFFTfwd_16_scale_32fc", "_ZN2cv5instr8NodeDataC2ERS1_", "icv_s8_ownNormDiff_L1_16u_C3CMR_V8", "_ZN2cv11determinantERKNS_11_InputArrayE", "icv_p8_ownscDFTinv_10_32fc", "icv_h9_owniResizeLanczos_16u_C4R", "_ZN2cv6String8allocateEj", "_ZN2cv8filter2DERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_NS_6Point_IiEEdi", "icv_s8_ownippiThreshold_V_16s_C3", "icv_s8_ownNormRel_L2_8s_C1MR_V8", "icv_h9_ownscDftInv_Fact11_64fc", "icv_s8_ownpi_WarpAffine_C_Mem_16u_C1", "icv_s8_ippiFilterBoxBorderGetBufferSize", "icv_g9_owniFilter_32f_C1R_g9e9_7", "icv_p8_owniScaleC_64f16s_C1R_fst", "icv_p8_ownscDFTinv_5_scale_32fc", "icv_s8_ownBFilterRow32f_8u_C3R", "icv_h9_ippiCopy_32f_C1MR", "icv_p8_ownippiFilterMin_16s_Col_AC4", "_ZNSt15__exception_ptrneERKNS_13exception_ptrES2_", "_ZN3tbb8internal8governor7sign_onEPNS0_17generic_schedulerE", "icv_p8_ownCalcBorderR1Lanczos3_16s", "icv_w7_ippiResizeLinear_16u_C4R_L", "icv_s8_owns_rFFTfwd_8_scale_64f", "_ZN2cv3ocl6Kernel6createEPKcRKNS0_7ProgramE", "icv_n0_own_ipps_sExp_V8EPnnn", "icv_h9_ownSS3_31_8u", "icv_s8_ownpi_WarpAffine_C_Transp_16s_C1", "icv_s8_ownippiFilterMax_16u_Col", "icv_h9_ippiResizeNearest_16u_C4R_L", "icv_g9_ippiCopyMirrorBorder_8u_C4R", "icv_s8_ownResize3Linear8u", "icv_h9_ownResize1Nearest8u", "_ZN2cv6detail14FeatherBlender5blendERKNS_17_InputOutputArrayES4_", "_ZN3tbb8internal6market22insert_arena_into_listERNS0_5arenaE", "icv_g9_ownCalcBorderR1Cubic32f", "icv_g9_ippiMorphBlackhat_8u_C3R_L", "_ZN2cv11VideoWriterlsERKNS_3MatE", "Java_org_opencv_calib3d_Calib3d_filterSpeckles_10", "icv_g9_ippiMean_8u_C4R", "icv_g9_innerNormL1_3x3", "icv_h9_ownBuildFilter_32f", "icv_s8_ippsZero_32s", "icv_h9_ippiAddWeighted_16u32f_C1IR", "icv_s8_ippsMinEvery_16u", "icv_s8_ownscDftInv_Fact11_32fc", "icv_p8_ippiMorphClose_32f_C4R_L", "icv_g9_ippiNormDiff_L1_32f_C3CMR", "icv_g9_owniGetRectTopBF_32f_C3R", "icv_h9_ownscDftInv_Prime7_32fc", "icv_p8_ownCalcBorderR1Linear16u", "_ZN3tbb8internal6market22set_active_num_workersEj", "icv_p8_ownWarpSimple4Nearest32f", "icv_p8_ownscDFTfwd_13_64fc", "icv_g9_ippiWarpAffineNearest_8u_C4R", "_ZN2cv6detail17BundleAdjusterRay24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_s8_owniResizeSuper_16s_C4R", "icv_s8_ippiMirror_8u_C1IR", "icv_p8_ownSS3_16u", "icv_p8_ownsrDFTinv_6_64f", "icv_s8_ownsrDFTinv_9_scale_32f", "icv_g9_ownRow3Cubic32f", "_ZN3tbb8internal8NFS_FreeEPv", "icv_s8_ippiCopyMirrorBorder_8u_C1R", "icv_s8_ownpi_AndC_16u_AC4R", "icv_g9_ownSS1vertical_32f", "Java_org_opencv_features2d_ORB_create_11", "icv_h9_owniFilterBilateralCom_InMem_8u_C1R_L", "icv_h9_ippsAtan2One", "icv_h9_owniScaleC_8s64f_C1R_acc", "icv_s8_ownCalcBorderR3Cubic16u", "icv_h9_ippiMorphGradient_32f_C3R_L", "icv_h9_ownsMul_16u", "icv_s8_ippiResizeGetBorderSize_L", "Java_org_opencv_features2d_Params_Params_10", "icv_s8_ownSumSq_16u_C1R_W7", "icv_h9_ownippsCnvrtNear_32f8uA_AVX", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_V8", "Java_org_opencv_photo_Photo_seamlessClone_10", "iwiResize_Free", "__register_frame_info_bases", "icv_g9_ownResize4Linear16u", "icv_s8_owniFilter_32f_C4R_v8u8_4NA", "icv_g9_ippiResizeCubic_16u_C4R_L", "icv_w7_ippiResizeLinear_16s_C4R_L", "icv_p8_ownFilterBoxBorderInMem_32f_C3R", "icv_h9_owns_cFFT_1_32fc", "icv_g9_owns_cCcsRecombine_32f", "icv_h9_ippiResizeLanczos_16s_C3R_L", "cvClearSet", "icv_h9_ownpi_WarpAffine_NN_Repl_16u_C3", "icv_g9_ippiCopy_32f_C3AC4R", "icv_p8_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_W7cn", "icv_s8_owniCopy_16s_C3AC4R", "icv_w7_ownWarpSimple1Nearest64f", "icv_w7_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_w7_ownSS4_8u", "icv_g9_ippsCos_32f_A24", "icv_p8_owns_BitRev2_4", "icv_p8_owniCopy8u_AC4_W7", "icv_s8_ownpi_Histogram_BS_32f_C4R", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C1R_5x5_V8", "icv_p8_ownpi_WarpAffine_C_Transp_64f_C1", "icv_p8_owns_cFft_BlkSplit_64fc", "icv_h9_ownsMaxEvery_8u_avx2", "icv_s8_ippiCopy_16s_AC4C3R", "icv_s8_ownsrDftFwd_PrimeFact_32f", "icv_p8_ippsConvert_8s16s", "_ZN2cv5phaseERKNS_11_InputArrayES2_RKNS_12_OutputArrayEb", "_ZN2cv9SparseMat10removeNodeEjjj", "icv_w7_ownAConvertOffset32s_8u", "icv_w7_ippiMorphBlackhat_32f_C1R_L", "icv_g9_ownSS4_16s", "cvCreateSeq", "icv_s8_ippsFFTFwd_RToPerm_64f", "icv_p8_ippiFilterSobelVertBorder_16s_C1R", "icv_h9_ownpi_WarpAffineSimpleNearest_8u_C3R", "icv_p8_ippsDFTInv_CToC_64fc", "Java_org_opencv_dnn_DictValue_isReal_10", "icv_h9_owniScaleC_32s64f_C1R_fst", "icv_g9_owniResizeSuper_32f_C1R", "icv_w7_ippiIntegral_8u32f_C1R", "icv_g9_ownSS4_98_32f", "icv_g9_ownCalcBorderR1Linear16s", "Java_org_opencv_ml_StatModel_isClassifier_10", "icv_g9_ippiTranspose_16u_C1R", "icv_g9_ownSS3_73_32f", "icv_w7_owniResizeLanczos_32f_C4R", "icv_g9_owniScaleC_16u32s_C1R_fst", "icv_s8_ownsMul_8u_Bound", "icv_g9_owns_cRadix4Inv_32fc", "icv_p8_ownResize4Cubic16u", "_ZN3tbb8internal23allocate_via_handler_v3Ej", "icv_w7_ownippiFilterMedian_16s_BC4R_3x3", "__deregister_frame", "_ZN2cv3ogl6Arrays13setColorArrayERKNS_11_InputArrayE", "_ZNK2cv17CommandLineParser9getByNameERKNS_6StringEbiPv", "icv_s8_owniResizeLinear_8u_C3R", "icv_w7_ownsrDFTfwd_15_64f", "icv_s8_ippiCopyMirrorBorder_16s_C1R", "Java_org_opencv_videoio_VideoCapture_VideoCapture_11", "icv_s8_ownpi_WarpSimpleCubic_32f_C3R", "_ZN2cv9videostab14StabilizerBase5resetEv", "_ZNK2cv4cuda10DeviceInfo17maxTextureCubemapEv", "icv_p8_ippiAddSquare_16u32f_C1IMR", "icv_g9_ownscDftInv_Fact7_32fc", "icv_h9_innerCommonLoopW7_32f_C3IR", "Java_org_opencv_ml_RTrees_setActiveVarCount_10", "icv_g9_ownSS4_98_16s", "icv_w7_ownFilterRowBorderPipeline_32f_C1R", "icv_p8_ownLaplCol5x5_8u_C4", "icv_h9_ownscDftInv_Prime11_32fc", "icv_h9_owniFilter32f_16s_C3R_g9e9_5", "icv_g9_owniResizeAntialiasing_32f_C3R_L", "icv_g9_ownpi_GetRotateTransform", "icv_w7_ippiConvert_8s16s_C1R", "icv_g9_gres_NormL2Rel_16u_C1R", "icv_w7_ownpi_WarpAffine_NN_Repl_16u_C1", "_ZN2cv3hal5DFT2D6createEiiiiiii", "icv_g9_ippsZero_16s", "icv_g9_ownFilterBoxBorderGetBufferSize", "Java_org_opencv_ml_TrainData_getNAllVars_10", "icv_g9_ippiMinEigenVal_32f_C1R", "icv_w7_owns_crRadix4Inv_64f", "icv_h9_ippiCopy_8u_C1R_L", "Java_org_opencv_imgproc_Imgproc_remap_11", "icv_w7_ownsReducePi", "icv_h9_ownSS3_21_32f", "icv_s8_owniFilter_32f_C3R_v8u8_4NA", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_V8", "icv_w7_ownscDFTinv_15_64fc", "icv_h9_innerNormL1_5x5", "icv_g9_owniAutoCorrFull_C1R", "icv_h9_ippiHistogram_16u_C1R", "icv_w7_ownpi_WarpAffine_NN_16_C4", "icv_p8_ownFilterBoxBorderInMem5x5_8u_C1R", "icv_p8_owniFilter_32f_C4R_v8u8_7NA", "icv_p8_ownscDFTinv_11_32fc", "icv_g9_owniScaleC_16u8u_C1R_fst", "icv_g9_owniFilter32f_16u_C4R_g9e9_1", "icv_s8_ownscDFTinv_15_scale_32fc", "icv_h9_ippiCopy_16s_C3P3R", "Java_org_opencv_ml_ANN_1MLP_getWeights_10", "icv_h9_ownpi_WarpSimpleNearest_64f_C4R", "icv_s8_ownSS4_21_8u", "icv_g9_owniResizeNearest_16u_C1R", "icv_s8_owniAutoSS_C1R", "icv_s8_ownpi_SimpleRotate_64f_C1R", "icv_p8_ippiResizeAntialiasing_16u_C1R_L", "icv_g9_owniResizeLinear_32f_C3R", "ippicviMin_16u_C1R", "icv_w7_ippiNorm_L2_16s_C1R", "icv_p8_ownippiFilterMedianVert_16s", "icv_h9_ownNormDiff_Inf_16u_C3CMR_HSW", "icv_g9_owniRCPack2DConj_32f_C1IR", "icv_w7_ippiFilterBorder_8u_C3R", "_ZN2cv9videostab18LpMotionStabilizerC2ENS0_11MotionModelE", "icv_w7_ownpi_NormL1Rel_16s_C1R", "icv_p8_owniFilter_32f_C4R_v8u8_6", "icv_s8_ownscDFTinv_11_scale_32fc", "icv_w7_ownscDFTfwd_12_scale_32fc", "icv_w7_ownscDftFwd_Fact11_32fc", "cvReleasePyramid", "icv_w7_ownpi_NormL2_16u_C1R", "icv_g9_owniSet_32s_C3MR", "icv_s8_ownpi_WarpAffine_NN_Repl_16u_C4", "icv_w7_ownpi_dInterVector_L_32f_P4", "icv_h9_owns_cFft_BlkMerge_64fc", "icv_p8_ownpiDotProd_16u64f_C1R", "icv_w7_ownRow3AA_32f", "icv_w7_owns_crFft_BlkSplit_32f", "_ZNK2cv5MatOp6matmulERKNS_7MatExprES3_RS1_", "icv_h9_ownFilterBoxBorder_8u_AC4IR", "_ZNK2cv4cuda10DeviceInfo12majorVersionEv", "_ZN3tbb8internal3rml14private_serverC2ERNS1_10tbb_clientE", "icv_p8_owniFilterBilateralR2_InMem_32f_C1R_px", "icv_p8_ippiTranspose_8u_C3IR", "ippicviFilterScharrVertMaskBorderGetBufferSize", "icv_h9_ownpi_WarpAffineNearest_16u_C4R", "icv_p8_ippsInvSqrt_64f_A50", "icv_g9_piFilterRow_32f_C4R_g9e9", "icv_s8_ownippiFilterMedianVert_16s_C4R_1x3", "icv_h9_ippiTranspose_32f_C4IR", "icv_p8_owniScaleC_32f16s_C1R_fst", "icv_w7_ownSum_16u_C3CMR_W7", "cvCornerEigenValsAndVecs", "icv_p8_owniResizeLinear_32f_C3R", "icv_s8_ownSS3_41_8u", "icv_s8_ownSS3_43_8u", "icv_h9_owniCopyMirrorBorder_16u_C4IR", "icv_w7_ippiMirror_16u_C4IR", "icv_w7_ippiCopyReplicateBorder_16s_C1IR", "Java_org_opencv_objdetect_CascadeClassifier_load_10", "icv_w7_ippsFFTInv_PermToR_64f", "icv_g9_ownippiFilterMedianHoriz_8u_C3R", "icv_h9_ownsrDFTfwd_15_64f", "icv_p8_ippiDilate_8u_C1R_L", "icv_w7_owns_rFFTfwd_8_32f", "icv_p8_owniScaleC_8s32f_C1R_acc", "icv_s8_ownColAntialiasing_16u", "icv_g9_ownRow4Antialiasing_16s", "icv_p8_ownsrDftInv_PrimeFact_32f", "icv_s8_ownMinMaxIndx_8u_C1R_W7_1", "icv_w7_ownCubicKernel3", "icv_g9_ownsGetSizeTabDftFwdRec_32f", "own_ipps_sSin_SC_HA", "icv_p8_ippiCopy_32f_C3P3R", "_ZTv0_n12_N2cv9Feature2DD0Ev", "_ZN2cv21DetectionBasedTracker20updateTrackedObjectsERKSt6vectorINS_5Rect_IiEESaIS3_EE", "ippicvsLn_32f_A21", "_ZN2cv17FlannBasedMatcher4readERKNS_8FileNodeE", "icv_g9_ownsrDFTfwd_13_64f", "icv_p8_ownNorm_Inf_8s_C3CMR_V8", "icv_s8_ownNormRel_L2_32f_C3CMR_W7", "icv_s8_owniResizeLinear_16s_C1R", "icv_s8_ownsSub_8u_NegSfs", "icv_h9_ownpi_WarpAffine_NN_Mem_16u_C1", "icv_h9_ownpi_Rotate180_32_C1R", "icv_h9_gres_NormL2Diff_8u_C1R", "icv_w7_ippiNorm_Inf_8u_C1R", "icv_g9_ownps_Sub_16u_Sfs", "icv_g9_ownscDftFwd_Prime4_64fc", "icv_h9_ownResize1Antialiasing_16u", "_ZN2cv11FileStorageC1EP13CvFileStorageb", "_ZN2cv5utils5trace7details6Region4ImplC2ERNS2_23TraceManagerThreadLocalEPS3_RS3_RKNS3_21LocationStaticStorageEx", "icv_g9_ownpi_WarpAffine_NN_Repl_16u_C4", "icv_s8_ownNormDiff_L2_32f_C1MR_W7", "icv_h9_ownSS3vertical_32f", "ippicviMorphOpen_8u_C4R_L", "icv_g9_owniCopyMirrorBorder_16u_C1IR", "_ZN2cv6detail15GainCompensator4feedERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_4UMatESaIS9_EERKS2_ISt4pairIS9_hESaISF_EE", "Java_org_opencv_ml_SVM_getDefaultGridPtr_10", "icv_s8_ippiMorphBlackhat_8u_C3R_L", "icv_s8_ownsrDFTfwd_3_scale_32f", "icv_p8_ownpi_Histogram_8u_C1R", "icv_p8_ippiSet_16s_C1MR", "icv_p8_ownpi_Rotate90_B_32_C3R", "icv_h9_owniFilter32f_16s_C4R_g9e9_2", "icv_s8_ippiWarpAffineNearest_16u_C1R", "ippicviConvert_8u32f_C1R", "icv_s8_ippiSet_32f_C1R", "icv_p8_ownpi_Rotate90_8_C1R", "icv_h9_owniScaleC_16s32s_C1R_acc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_W7", "icv_p8_owniFilter_32f_C3R_v8u8_6", "icv_p8_ownippiFilterMedian_8u_C3R", "icv_s8_ippsDFTGetSize_C_32fc", "icv_h9_ownNorm_Inf_32f_C1MR_HSW", "icv_w7_ownpi_WarpAffine_C_Mem_32f_C1", "icv_g9_owns_rFFTfwd_4_scale_64f", "icv_p8_owniFilterPrewittVertBorder2_8u16s_C1R", "icv_w7_ownsrDFTinv_11_32f", "icv_s8_ippiCopy_32f_C1C3R", "icv_g9_ownSS3_65_32f", "icv_w7_owniGetRectTopBF_8u_C3R", "icv_g9_ownCalcBorderR4Lanczos2_32f", "icv_w7_ownpi_ClipRight", "icv_n0_own_ipps_sCos_S9HAynn", "icv_p8_owniConvert_32f16s_W7", "_ZN2cv17CommandLineParserC2ERKS0_", "icv_s8_ippiRectStdDev_32f_C1R", "icv_s8_ownSS4_32_16s", "icv_g9_ippiMax_16u_C1R", "icv_p8_owniFilterMedianSqr5x5_32f_C1R", "_Z21Mat_to_vector_Point2fRN2cv3MatERSt6vectorINS_6Point_IfEESaIS4_EE", "cvCalcProbDensity", "icv_g9_owniGetRectLeftBF_32f_C3R", "icv_g9_owniDenominatorFull_C1R", "_ZN2cv5utils5trace7details12TraceManagerD2Ev", "icv_h9_ownpi_WarpAffine_CR_16u_C4", "_ZN3tbb8internal8governor19terminate_schedulerEPNS0_17generic_schedulerEPKNS_19task_scheduler_initE", "icv_g9_ownpi_WarpAffine_C_Mem_16s_C3", "icv_g9_ippiMulC_32f_C1IR", "icv_h9_ippiWarpAffineNearest_16u_C1R", "icv_h9_owniNormLevel_8u_C1R", "icv_g9_ownRow1Linear8u", "icv_g9_ippiFilterLaplacianGetBufferSize_32f_C1R", "icv_n0_own_ipps_dSinCos_S9HAynn", "icv_s8_owns_rFFTfwd_32_scale_64f", "icv_p8_cv_ownippiFilterMax_16u_Msk", "icv_p8_ownscDFTinv_15_scale_32fc", "icv_h9_ippiCopyReplicateBorder_32f_C1R", "icv_p8_ownscrDftFwd_Prime_64f", "icv_p8_owniCopy8u_C4P4_44_A6", "icv_g9_ownSS3vertical_16u", "cvInpaint", "icv_g9_ippsDFTGetSize_C_64fc", "_ZN2cv20createMergeRobertsonEv", "icv_s8_ownpi_MinMax_16s_AC4R", "icv_w7_ownpi_CmpLE_32f_C1R", "icv_p8_ownpi_WarpAffine_NN_16_C4", "icv_s8_ownsrDFTinv_11_scale_64f", "icv_w7_ownsCosOne_w7p8", "icv_g9_owniScaleC_16u16u_C1R_acc", "_ZN2cv3hal14warpPerspectveEiPKhjiiPhjiiPKdiiS5_", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_W7", "icv_h9_ippiResizeLinear_64f_C1R_L", "icv_h9_ownRow4Cubic16u", "icv_w7_ownsMul_8u", "icv_g9_ippiScaleC_64f16u_C1R", "icv_w7_ownpis_Max_16s_C4", "icv_g9_ippiResizeCubic_8u_C4R_L", "icv_p8_owniFilterSobelVertSecondBorder2_32f_C1R", "icv_w7_cv_ownFilterMxMnCalcBuf", "_ZN2cv3MatC2ERKS0_PKNS_5RangeE", "icv_h9_ownSS4_52_32f", "_ZN2cv6detail19findMaxSpanningTreeEiRKSt6vectorINS0_11MatchesInfoESaIS2_EERNS0_5GraphERS1_IiSaIiEE", "icv_h9_ownippsCnvrtNear_32f16u_AVX", "icv_g9_ippiMaxIndx_16s_C1R", "icv_g9_owniFilter32f_16u_C4R_g9e9_0", "icv_g9_ippiGetCentralMoment_64f", "icv_s8_ownsrDFTfwd_7_scale_32f", "icv_p8_ippiFilterMedianBorder_8u_C1R", "Java_org_opencv_core_Core_getBuildInformation_10", "icv_w7_ownAddSquare_8s32f_C1IMR_W7", "icv_n0_own_ipps_dSqrt_G9HAynn", "ippicviScaleC_32f16s_C1R", "icv_h9_ippiCopy_8u_P3C3R", "icv_h9_ippiAddSquare_8u32f_C1IR", "icv_s8_ownSS4_65_16u", "icv_g9_ippiResizeNearest_16s_C4R_L", "ippicviWarpGetBufferSize", "icv_s8_ownSumSq_16u_C3CR_W7", "icv_p8_ippsSinCos_32f_A21", "icv_h9_IsOverlapedROI", "ippicviNorm_L2_8u_C3CMR", "_ZN2cv17validateDisparityERKNS_17_InputOutputArrayERKNS_11_InputArrayEiii", "icv_s8_ownpi_WarpAffine_CR_16u_C1", "Java_org_opencv_features2d_GFTTDetector_getMaxFeatures_10", "icv_w7_ownpi_WarpAffineSimpleLinear_16s_C3R", "icv_h9_ownCalcBorderR3Lanczos3_16s", "Java_org_opencv_imgproc_Imgproc_bilateralFilter_10", "icv_w7_ownippsCnvrt_8s32f", "icv_s8_ownResize3Lanczos2_32f", "icv_s8_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_h9_owns_cFFTinv_32_32fc", "ippicviMorphTophat_8u_C4R_L", "icv_p8_ownpi_SmoothBorder", "icv_p8_ownHipass5x5Col_16s_C4", "icv_w7_L1magnitude_16s", "icv_p8_ippsFFTInv_CToC_64fc", "cvSetRemove", "icv_s8_ippsDCTInv_32f", "icv_h9_ownFilterBoxBorderInMem7x7_8u_C1R", "Java_org_opencv_calib3d_Calib3d_estimateAffine3D_11", "_ZN2cv9videostab23MotionEstimatorRansacL28estimateERKNS_11_InputArrayES4_Pb", "icv_s8_owns_cFFTinv_32_32fc", "icv_s8_ownpi_WarpAffineNearest_32f_C4R", "icv_w7_ownpi_WarpAffineSimpleCubic_8u_C3R", "icv_s8_ownSumSq_8u_C1MR_W7", "icv_s8_ippsMinEvery_64f", "icv_h9_ippiTranspose_16s_C1R", "icv_g9_ippsZero_64f", "icv_s8_ippiCopyConstBorder_16s_C4R", "icv_n0_own_ipps_sLn_S9EPnnn", "icv_s8_ownpi_CmpLT_16s_C1R", "_ZN2cv9SparseMat3ptrEiibPj", "icv_w7_owns_cRadix4Fwd_32fc", "icv_w7_ownippiFilterMedianSqr_16u_AC4R", "icv_s8_ippiCopyMirrorBorder_32f_C3R_L", "icv_g9_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_h9_ownpi_Xor_8u_C1R", "ippicviMorphTophat_16u_C1R_L", "icv_h9_ownippsCnvrt_32f8u_Sfs", "icv_g9_ippiFilterBorder_8u_C3R", "icv_h9_computeCubicCoeffs", "icv_h9_owniResizeGetBufferSize", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_W7", "cvDrawContours", "icv_s8_ippiScaleC_32f_C1IR", "icv_g9_ownpi_WarpAffine_L_Repl_16s_C3", "icv_p8_ownscDFTfwd_15_32fc", "icv_h9_cv_ownippiFilterMin_32f_Col", "icv_h9_ownRow1Lanczos3_8u", "icv_w7_ownpi_NormL2_16s_C1R", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_10", "icv_p8_ownpi_WarpAffine_NN_Const_16u_C1", "icv_h9_cv_ownippiFilterMax_8u_Row", "WebPPictureImportBGRX", "icv_s8_ownSS1_a7_16s", "icv_h9_owniScaleC_16u32s_C1R_fst", "icv_g9_ownippiFilterMedianSqr_16s_AC4R", "_ZN2cv14createAlignMTBEiib", "icv_s8_ownResize1Linear16s", "icv_h9_ownNorm_Inf_32f_C3CMR_HSW", "icv_s8_ownResize4Lanczos3_16u", "ippicviDFTFwd_CToC_32fc_C1R", "icv_g9_ownpi_WarpAffine_NN_Repl_32f_C1", "icv_w7_ownDistanceTransform_5x5_8u_C1R_New_F_W7", "_ZN3tbb8internal14observer_proxy9is_globalEv", "icv_s8_ownCopySubpix_32f_C1R_V8_1", "icv_s8_owniResizeAntialiasing_32f_C4R_L", "icv_s8_ownCalcBorderR1Lanczos3_8u", "_ZN3tbb18task_group_context12set_priorityENS_10priority_tE", "cvPtr3D", "Java_org_opencv_ml_TrainData_setTrainTestSplit_11", "icv_g9_owniScaleC_32f8s_C1R_fst", "icv_p8_ownCalcBorderR4Lanczos2_16u", "icv_h9_ownpis_Max_16u_C1", "ippicviAdd_16s_C1RSfs", "icv_s8_ownpis_Indx_32f_C3", "_ZN2cv5splitERKNS_3MatEPS0_", "icv_p8_ownsrDFTinv_10_scale_64f", "icv_w7_ippiFilterBoxBorder_32f_C3R", "ippicviFilterSobelVertBorder_16s_C1R", "icv_w7_ownsrDFTfwd_5_64f", "icv_p8_owniFilter_32f_C1R_v8u8_3", "icv_s8_ownRow1Filter8_8u", "icv_h9_ownNormRel_L1_16u_C1MR_HSW", "icv_p8_ippiCopy_8u_C3R", "ippicviResizeCubic_32f_C3R_L", "icv_p8_owniScaleC_8u16s_C1R_fst", "icv_p8_ownAConvert_Round32s_8u_AC4R", "_ZN2cv3hal4sqrtEPKfPfi", "icv_h9_ownsrDFTinv_11_32f", "icv_w7_ownippiThreshold_V_8u_C3", "icv_g9_owniResizeNearest_32f_C3R", "icv_h9_owns_sDctFwd_Conv_32f", "icv_s8_owns_initTabTwdBase_32f", "ippicviMorphOpen_32f_C3R_L", "icv_w7_ippiCopy_16s_C1R", "_ZN2cv10haveOpenVXEv", "cvClipLine", "icv_p8_ownWarpSimple1Nearest64f", "icv_w7_ownNorm_L1_16u_C1MR_W7", "icv_g9_ippiMorphTophat_8u_C4R_L", "icv_g9_ownMinMaxIndx_32f_C1MR_1", "icv_w7_ownscDftInv_Prime7_64fc", "icv_g9_ippiCopy_32f_C4P4R", "_ZN2cv18findFundamentalMatERKNS_11_InputArrayES2_RKNS_12_OutputArrayEidd", "icv_w7_ippsZero_32fc", "icv_w7_ownpi_WarpAffine_C_Const_16s_C3", "icv_w7_ownpi_WarpAffine_L_Const_32f_C3", "icv_p8_ownpi_dInterVector_NN_8_C4", "icv_g9_ownscDFTfwd_5_scale_64fc", "icv_w7_ownpi_NormL2Rel_32f_C1R", "icv_w7_ippiAdd_32f_C1R", "_ZN2cv3ocl7haveSVMEv", "ippicviDFTInit_C_32fc", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7_sym", "ippicviTrueDistanceTransform_8u32f_C1R", "icv_p8_ownsInitTabDftFwdRec_32f", "icv_s8_ownpi_WarpAffine_NN_Mem_64f_C4", "icv_g9_ownpi_WarpAffine_NN_Mem_64f_C3", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_X_W7", "_ZN2cv3hal6max16sEPKsjS2_jPsjiiPv", "_ZNK2cv17CommandLineParser12printMessageEv", "icv_h9_owns_cFFTfwd_32_scale_64fc", "icv_g9_ippiMirror_16u_C4R", "icv_p8_ownscDFTfwd_11_64fc", "icv_p8_ownNorm_Inf_16u_C3CMR_V8", "icv_w7_ippiResizeSuper_16s_C3R_L", "icv_s8_ownippiFilterMedian_8u_BC4R", "icv_w7_ownscDFTinv_10_scale_64fc", "icv_h9_ippiGetNormalizedCentralMoment_64f", "icv_g9_owniResizeLanczos_16s_C1R", "icv_p8_ownpi_XorC_32s_AC4R", "icv_s8_ippiNormRel_Inf_32f_C1MR", "icv_h9_ownsrDFTinv_7_scale_32f", "icv_h9_owniScaleC_16u64f_C1R_acc", "icv_s8_ippiSet_16u_C1MR", "icv_p8_owniCopyMirrorBorder_32s_C4R", "icv_p8_owniResizeAntialiasing_32f_C3R_L", "llwiScale", "icv_s8_owniShiftClipRectZeroTail_8u32f_C1R", "icv_s8_ippiWarpAffineNearestInit", "icv_w7_ippiConvert_32f8s_C1RSfs", "ippicviDilate_32f_C4R_L", "ippicviMorphInit_L", "Java_org_opencv_ml_Boost_load_10", "icv_h9_owniScaleC_16s32f_C1R_acc", "icv_s8_ownpi_Histogram_16u_C3R", "_Z19vector_Point_to_MatRSt6vectorIN2cv6Point_IiEESaIS2_EERNS0_3MatE", "icv_g9_ippiCopyReplicateBorder_8u_C1R_L", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_p8_owniCopy_16s_P4C4R", "icv_g9_ippiFilterBoxBorder_32f_C4R", "_ZN2cv3PCAclERKNS_11_InputArrayES3_ii", "icv_p8_ownscDftInv_Prime7_64fc", "icv_w7_ownDistanceTransform_5x5_8u_C1R_Big_F_W7", "icv_s8_ownscDFTfwd_13_scale_64fc", "icv_s8_ippiResizeCubic_16s_C3R_L", "icv_g9_owniCopy_16s_C4P4R_cn", "icv_g9_owniFilterPrewittVertBorder2_32f_C1R", "icv_g9_ippiScaleC_8u_C1IR", "_ZN2cv3dnn19experimental_dnn_v112LayerFactory15unregisterLayerERKNS_6StringE", "icv_g9_ownpi_WarpSimpleCubic_8u_C4R", "icv_s8_ippiNormRel_L1_16u_C1R", "icv_p8_ownSS4_83_16s", "icv_p8_ippiCopy_8u_C1C3R", "Java_org_opencv_core_TickMeter_getTimeMilli_10", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_V8", "icv_s8_ownpi_WarpAffine_NN_8_P4", "icv_h9_ippiResizeCubic_8u_C4R_L", "icv_g9_innerNumberTwo3x3", "icv_p8_ippiDFTInv_CToC_32fc_C1R", "_ZN2cv3hal11cvtBGRtoLabEPKhjPhjiiiibbb", "icv_s8_ownNormRel_L1_8s_C1MR_V8", "icv_n0_own_ipps_sSinCos_S9EPnnn", "icv_g9_owniFilterBilateralR2_InMem_32f_C1R_L", "_ZN2cv8imdecodeERKNS_11_InputArrayEi", "icv_g9_owniSqrDistanceNorm_FullSame_32f_C1R", "icv_h9_ownFilterRow32f_16s_C3R_g9e9", "icv_p8_ippsDFTInit_R_64f", "icv_s8_ownsConvert_16s32f_W7", "icv_h9_ippiNormDiff_L1_16u_C1MR", "icv_h9_ownSSvsum_16s", "Java_org_opencv_core_Core_transform_10", "_ZN3tbb8internal14__TBB_InitOnce10remove_refEv", "icv_g9_ippsSet_32f", "icv_w7_ippiDilate_8u_C3R_L", "ippicviAbsDiff_16u_C1R", "ippicviCopy_32s_C3MR", "icv_w7_ownSq_32f_C1MR_W7", "icv_p8_ownpi_Histogram_FS_32f_C4R", "icv_w7_ownscDft_Dir_64fc", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork13resetTrackingEv", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_W7", "icv_h9_gres_NormL2Rel_16s_C1R", "icv_s8_owns_cRadix4FwdNorm_32fc", "icv_g9_owns_cFFTfwd_32_scale_64fc", "icv_s8_ownippiFilterMedianHoriz_16u_C3R_3x1", "icv_p8_ownAFilterRow32f_16u_C3R", "icv_h9_ownscDftFwd_Fact7_32fc", "icv_h9_ippiAddProduct_16u32f_C1IR", "icv_s8_ownippsMagn_32fc32f", "icv_w7_ownpi_XorC_16u_C4R", "icv_s8_ippiNormDiff_L1_32f_C1MR", "icv_g9_ippiCopyMirrorBorder_32f_C3R", "icv_p8_owniFilter_32f_C1R_v8u8_7", "icv_p8_owniTranspose16u_C4R_core2", "icv_s8_ippiScaleC_16s64f_C1R", "icv_p8_ownSS1_32_16s", "icv_p8_ownpi_Rotate90_8_C3R", "icv_w7_ownCalcBorderR1Lanczos3_32f", "icv_g9_ownpi_WarpAffine_C_Repl_64f_C4", "icv_p8_ownpi_dInterVectorClip_L_16u_P4", "icv_h9_owniResizeAntialiasing_8u_C4R_L", "icv_s8_ownSS1_a7_32f", "icv_w7_ippiCanny_32f8u_C1R", "icv_w7_ownpi_WarpAffine_NN_16_AC4", "_ZN2cv5utils5trace7details6Region7destroyEv", "icv_h9_ippiAddSquare_16u32f_C1IMR", "icv_p8_ippiMirror_16s_C3R", "icv_g9_ownResize1Lanczos3_16s", "cvDecomposeProjectionMatrix", "_ZN3tbb8internal17generic_scheduler26cleanup_local_context_listEv", "icv_s8_ownCalcBorderR3Antialiasing_8u", "icv_p8_ownDistanceTransform_3x3_8u32f_C1R_21B", "icv_w7_ippsSortRadixIndexGetBufferSize", "icv_s8_ownLanczosKernel2", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7", "iwiRoiPipeline_InitChild", "iwiResize_GetBorderSize", "ippicviMean_16s_C3R", "icv_p8_ownMorphologyBorderInit_1u_L", "icv_g9_ownpi_WarpAffine_C_Repl_16s_C1", "Java_org_opencv_features2d_BOWTrainer_getDescriptors_10", "Java_org_opencv_features2d_MSER_create_10", "Java_org_opencv_video_DualTVL1OpticalFlow_delete", "_ZN2cv9videostab36TranslationBasedLocalOutlierRejector7processENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayE", "Java_org_opencv_calib3d_StereoSGBM_getUniquenessRatio_10", "icv_g9_ippiTranspose_32f_C1IR", "icv_h9_ownSS1_98_16s", "icv_w7_ippiMinEigenValGetBufferSize_8u32f_C1R", "_ZNK2cv21DetectionBasedTracker10getObjectsERSt6vectorISt4pairINS_5Rect_IiEEiESaIS5_EE", "icv_s8_ippiTranspose_16s_C1R", "Java_org_opencv_ml_LogisticRegression_getIterations_10", "icv_w7_ippiWarpAffineCubic_8u_C1R", "icv_p8_ownippiFilterMedianCross_16u_C1R_5x5", "icv_h9_ownpi_WarpAffineCubic_16u_C4R", "icv_w7_ippiConvert_32f16u_C1RSfs", "icv_p8_ippsMalloc_8u_L", "icv_w7_ippiSet_16s_C3MR", "icv_s8_ownSS4vertical_16u", "icv_s8_ippiResizeAntialiasingLinearInit_L", "icv_p8_ownscDft_Dir_32f", "icv_p8_owns_zBitRev1_Blk", "icv_h9_cv_ownFilterMxMnCalcBuf_L", "icv_p8_ownsrDftInvRecombine_64f", "icv_g9_ownpi_WarpAffine_CR_16u_C3", "icv_g9_owniCopyMirrorBorder_32s_C4IR", "icv_s8_ownscDftInv_Fact5_32fc", "icv_w7_ippiMul_16s_C1RSfs", "icv_p8_ippsMin_32f", "_ZN2cv4UMatC2ERKS0_PKNS_5RangeE", "icv_g9_ippiCopy_32f_C1C4R", "ippicviSet_8u_C4R", "icv_h9_ippiScaleC_8u16s_C1R", "icv_g9_ownpi_WarpAffine_C_Const_8u_C4", "icv_h9_ownSuperKernel", "icv_g9_ownpi_CheckQuad", "Java_org_opencv_ml_NormalBayesClassifier_load_10", "_ZN2cv3ogl6Buffer8copyFromERKNS_11_InputArrayERNS_4cuda6StreamENS1_6TargetEb", "icv_g9_owns_cFFT_1_64fc", "icv_h9_ownNorm_L1_8u_C1MR_HSW", "icv_g9_ownpi_GetAffineTransform", "icv_g9_ippiDotProd_8u64f_C1R", "icv_h9_owniResizeCubic_16u_C3R", "icv_h9_cv_ownippiFilterMax_32f_Msk", "_ZN2cv12VideoCaptureC1Ev", "JNI_OnUnload", "ippicviScaleC_32f16u_C1R", "icv_h9_ownFilterBoxBorderInMem_16s_C1IR", "Java_org_opencv_core_Core_polarToCart_10", "icv_p8_ownpi_CmpEQ_16s_C1R", "Java_org_opencv_videoio_VideoWriter_VideoWriter_10", "icv_g9_ippiScaleC_32f64f_C1R", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_X_G9E9cn", "ippicviAddProduct_32f_C1IMR", "icv_n0_own_ipps_dCos_T7HAynn", "_ZN2cv7compareERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi", "icv_w7_ownpi_WarpAffine_L_Const_16u_C4", "icv_w7_ownsrDftInv_PrimeFact_64f", "_ZN3tbb8internal8governor18print_version_infoEv", "cvSeqPartition", "Java_org_opencv_imgproc_Imgproc_HoughCircles_11", "icv_g9_ownpi_Rotate180_16_C4R", "ippicviMean_16u_C1MR", "_ZN2cv21BaseCascadeClassifierD2Ev", "icv_s8_ippiGetAffineQuad", "icv_s8_owniResizeNearest_16s_C1R", "icv_s8_ownippsCnvrtFin_32f8s_Sfs", "_ZN2cv9videostab11LogToStdout5printEPKcz", "Java_org_opencv_objdetect_HOGDescriptor_save_11", "ippicviConvert_16u32f_C1R", "icv_g9_ippiRGBToHLS_8u_C3R", "icv_p8_ownpi_CountInRange_8u_C1R", "icv_g9_ownpi_WarpAffineSimpleLinear_16u_C1R", "icv_g9_ownpi_WarpSimpleNearest_64f_C3R", "icv_h9_ippiFilterRowBorderPipeline_32f_C3R", "icv_h9_ownResize1Lanczos2_16u", "icv_s8_ownscDftFwd_Prime4_64fc", "_ZNK2cv12MatAllocator8downloadEPNS_8UMatDataEPviPKjS5_S5_S5_", "icv_p8_ownCalcBorderR1Lanczos2_16u", "icv_s8_ownAdd_8u32f_C1IR_W7", "icv_h9_ownResize1Antialiasing_16s", "icv_w7_ippiNorm_L1_8u_C3CMR", "icv_s8_ippsDFTGetSize_C_64fc", "WebPPictureSharpARGBToYUVA", "icv_p8_ownHipass5x5Frs_16s", "icv_g9_ippiTranspose_16s_C4IR", "icv_p8_ippiResizeLinear_8u_C4R_L", "ippicviAdd_8u_C1RSfs", "Java_org_opencv_imgproc_Imgproc_remap_10", "icv_g9_ownsMul_8u_PosSfs", "icv_h9_ippsDFTGetSize_C_64fc", "ippicviCopy_32f_C4MR", "_ZN2cv4cuda18getNppErrorMessageEi", "icv_w7_ownAddWeighted_16u32f_C1IR_W7", "icv_p8_ippsSin_32f_A24", "_ZNK2cv11RotatedRect14boundingRect2fEv", "icv_h9_ownscDftInv_Prime11_64fc", "icv_s8_ownCalcBorderR4Lanczos2_16u", "icv_w7_ownHipass5x5Col_32f_AC4", "cvEndFindContours", "_ZN2cv27fastNlMeansDenoisingColoredERKNS_11_InputArrayERKNS_12_OutputArrayEffii", "icv_w7_ippiCopyMirrorBorder_8u_C3R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "icv_p8_ownippsCnvrt_64f32s_Sfs", "icv_n0_own_ipps_sSqrt_G9HAynn", "icv_g9_owniSet_16s_C4MR", "Java_org_opencv_dnn_Net_getLayerId_10", "icv_w7_owniFilterMedianBorderInMem_8u_C1R", "Java_org_opencv_imgproc_Imgproc_integral_11", "_ZN2cv8CholeskyEPfjiS0_ji", "icv_g9_ownpi_WarpAffineCubic_8u_C1R", "icv_g9_ownpi_WarpAffineSimpleCubic_32f_C1R", "icv_p8_ippiFilterLaplacianGetBufferSize_32f_C1R", "icv_ipp_set_cw_ssx", "ippicviAdd_16u_C1RSfs", "icv_s8_owniExchange_8u_I", "icv_p8_ownResize1Antialiasing_16u", "icv_g9_ippsConvert_64f32f", "_ZNK2cv9softfloatrmERKS0_", "icv_g9_ownCubicKernel2", "icv_p8_ownpi_WarpAffine_C_Repl_16s_C3", "icv_s8_ownCalcBorderR4Lanczos2_16s", "own_ipps_zCIS_SC", "icv_w7_ownscrDftFwd_Fact5_64f", "icv_h9_ownSS4_65_8u", "icv_s8_ownsrDFTfwd_13_64f", "Java_org_opencv_photo_Photo_edgePreservingFilter_11", "icv_w7_ownpi_dInterVectorClip_L_32f_C4", "Java_org_opencv_calib3d_StereoBM_delete", "ippicviResizeCubic_8u_C3R_L", "_ZN2cv3dnn19experimental_dnn_v13Net19setPreferableTargetEi", "icv_s8_ownNormDiff_L2_8s_C3CMR_V8", "Java_org_opencv_core_Core_getOptimalDFTSize_10", "icv_h9_owniScaleC_64f8s_C1R_fst", "_ZNK2cv10softdoublegtERKS0_", "icv_s8_ownsrDFTinv_5_32f", "icv_w7_owns_cFFTfwd_16_64fc", "_ZN2cv3dnn19experimental_dnn_v118ChannelsPReLULayer6createERKNS1_11LayerParamsE", "icv_g9_ippiMorphGradient_8u_C1R_L", "icv_p8_ownLaplace3x3Row_32f_C1", "Java_org_opencv_photo_AlignMTB_getExcludeRange_10", "icv_p8_ownSharpenRow_32f_C3", "icv_p8_ownRow4Linear64f", "icv_g9_ippiConvert_16u32s_C1R", "icv_p8_ownSS3_32_8u", "icv_s8_owniTransposeWxH_16uC1", "icv_p8_owniResizeAntialiasing_16s_C3R_L", "icv_p8_ownHipass5x5Col_8u_C3", "Java_org_opencv_video_BackgroundSubtractorMOG2_getNMixtures_10", "icv_s8_ownpi_WarpAffine_CR_8u_C3", "_ZN2cv8internal15NormalizePixelsERKNS_3MatERKNS0_15IntrinsicParamsE", "icv_w7_owniGetRectBottomBF_32f_C1R", "icv_g9_ippiThreshold_GTVal_32f_C1R", "icv_s8_ownRow4Cubic32f", "icv_h9_piGradientVectorParams", "Java_org_opencv_features2d_BOWTrainer_clear_10", "icv_h9_owns_cFFTfwd_4_scale_64fc", "icv_g9_ownpis_Sum_16u_C3", "icv_w7_ownsrDFTinv_11_scale_64f", "_ZN3tbb8internal17generic_scheduler25local_spawn_root_and_waitERNS_4taskERPS2_", "icv_g9_ownSS1_16u", "Java_org_opencv_core_Core_idct_10", "Java_org_opencv_features2d_GFTTDetector_create_10", "icv_h9_ownCubicKernel3", "icv_s8_owniGetRectRight_32f", "icv_w7_ownpi_Or_32s_AC4R", "Java_org_opencv_calib3d_Calib3d_calibrate_11", "ippicviScaleC_16u64f_C1R", "icv_s8_ownscDftInv_Fact5_64fc", "icv_h9_ippiTranspose_32s_C1IR", "icv_g9_ownscDftInv_Fact4_64fc", "icv_g9_owniScaleC_8s8s_C1R_acc", "icv_p8_ownAddSquare_16u32f_C1IR_W7", "icv_w7_ownscDFTfwd_5_64fc", "icv_s8_ippsConvert_8s16s", "icv_w7_ownsrDFTfwd_3_scale_64f", "icv_p8_ippiScaleC_8s64f_C1R", "ippicviWarpAffineLinear_8u_C1R", "icv_w7_ownippiFilterMedianSqr_8u_C3R", "icv_p8_owns_crRadix4Inv_32f", "Java_org_opencv_objdetect_CascadeClassifier_delete", "icv_h9_owniCorrectAutoNormMean_8u32s_C1R", "icv_g9_ownFilterBoxBorderInMem_32f_C4R", "icv_w7_owns_initTabTwdBase_32f", "ippicviFilterBoxBorder_8u_C4R", "icv_s8_owns_crFftFwd_CoreMT_64f", "icv_h9_ownColLinear64f", "Java_org_opencv_imgproc_Imgproc_morphologyEx_10", "icv_s8_owniFilter_32f_C1R_v8u8_3NA", "ippicviFilterBilateralBorder_32f_C3R", "icv_s8_ownsrDFTfwd_9_32f", "icv_g9_ippiResizeSuper_16u_C3R_L", "icv_s8_ippiResizeLinear_16u_C4R_L", "icv_h9_ippiScaleC_64f8s_C1R", "icv_w7_ownpi_WarpAffine_CR_32f_C4", "_ZN2cv15KeyPointsFilter15runByPixelsMaskERSt6vectorINS_8KeyPointESaIS2_EERKNS_3MatE", "_ZN2cv9videostab20NullWobbleSuppressor8suppressEiRKNS_3MatERS2_", "icv_p8_ippiCopy_32s_C3MR", "icv_h9_ownpi_Min_8u_C1R", "icv_s8_ownsrDFTfwd_14_scale_32f", "_ZN2cv5MutexaSERKS0_", "icv_w7_owniResizeLinearInit", "cvCreateVideoWriter", "icv_h9_ippiFilterSobelNegVertBorderGetBufferSize", "icv_s8_ownMinMaxIndx_8u_C1MR_W7_1", "icv_w7_ownippsMagn_32f", "icv_h9_ippiMinEigenVal_32f_C1R", "icv_p8_ippiCopyConstBorder_32f_C4R", "icv_s8_ownCalcBorderR1Antialiasing_16s", "icv_w7_ownscDftFwd_Prime2_32fc", "icv_g9_owniScaleC_16u8s_C1R_acc", "ippicviScaleC_16u_C1IR", "_ZN2cv6detail10Timelapser7processERKNS_11_InputArrayES4_NS_6Point_IiEE", "icv_h9_ippiScaleC_64f8u_C1R", "icv_w7_ippiResizeSuper_32f_C4R_L", "icv_h9_ippiMirror_8u_C1IR", "icv_g9_ippiSwapChannels_32f_C4R", "icv_g9_ownRow4Antialiasing_16u", "icv_g9_ownSS4_43_16s", "icv_w7_ippiNormDiff_L2_32f_C3CMR", "icv_g9_ownpi_FindPerimeter", "icv_s8_owns_initDctInv_Conv_32f", "icv_p8_ownpi_SimpleRotate_64f_C4R", "icv_w7_owniNormLevel_32f_C1R", "icv_s8_ownSS1_32_32f", "icv_h9_ippiFilterBoxBorder_16s_C4R", "_ZN2cv3hal14addWeighted16uEPKtjS2_jPtjiiPv", "icv_w7_ownpi_WarpAffineSimpleNearest_8u_C1R", "icv_p8_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK", "icv_g9_ippsFFTFwd_RToPerm_32f", "icv_h9_ippsMinEvery_16u", "icv_h9_ownpi_dInterVectorClip_C_16u_C1", "icv_g9_ippiMean_16s_C3R", "icv_h9_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "cvGetElemType", "icv_p8_owniGetRectBottomBF_32f_C3R", "_ZN3tbb8internal19allocate_root_proxy4freeERNS_4taskE", "_ZN2cv3ocl13ProgramSourceC2ERKNS_6StringE", "icv_w7_ippiResizeLanczos_16u_C3R_L", "Java_org_opencv_ml_SVM_getClassWeights_10", "icv_p8_ippiSub_8u_C1RSfs", "ippicviScaleC_32f_C1IR", "Java_org_opencv_features2d_ORB_setFastThreshold_10", "Java_org_opencv_features2d_KAZE_getDiffusivity_10", "icv_g9_ippiFilterSobelNegVertBorderGetBufferSize", "ippicviResizeNearestInit_L", "_ZN2cv9Feature2DD0Ev", "icv_g9_owniScaleC_8s32f_C1R_fst", "icv_p8_owns_rFFTfwd_4_64f", "icv_s8_ownSS1_81_32f", "icv_s8_ownpi_dInterVectorClip_L_32f_C4", "_ZN2cv3hal6max32sEPKijS2_jPijiiPv", "icv_p8_owniFilterBoxBorder_32f_C1R", "icv_p8_owns_cRadix4FwdNorm_64fc", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_V8", "Java_org_opencv_photo_TonemapReinhard_getColorAdaptation_10", "icv_p8_owniGetRectLeftBF_8u_C1R", "icv_n0_own_ipps_sExp_S9HAynn", "icv_w7_owns_sBitRev1_Blk", "ippicvsDFTInv_PackToR_32f", "icv_g9_ippiHistogramUniformInit", "icv_h9_ownNorm_L1_32f_C3CMR_HSW", "icv_h9_ippiNormDiff_L2_32f_C1MR", "icv_p8_ownNormDiff_L2_32f_C1MR_W7", "Java_org_opencv_ml_StatModel_getVarCount_10", "_ZN2cv20checkHardwareSupportEi", "icv_g9_ippiConvert_32f8u_C1RSfs", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7_sym", "icv_w7_owniTranspose_16u_C1R_W7", "icv_h9_ippiNormRel_Inf_8u_C1R", "icv_g9_owniCmpLessEq_16u_C1R", "icv_h9_ippiSqrDistanceNormGetBufferSize", "Java_org_opencv_video_FarnebackOpticalFlow_getPyrScale_10", "icv_s8_owns_cFftInv_Fact4_Last_32fc", "icv_p8_ownSS1_53_16u", "icv_h9_ownRow1Filter14_16s", "icv_g9_ownpi_WarpAffine_C_Const_32f_C1", "icv_g9_ippiResizeLanczos_16u_C1R_L", "icv_g9_ownpi_WarpAffine_L_Const_64f_C4", "icv_g9_ownpi_WarpAffineSimpleNearest_64f_C1R", "icv_w7_ippiFilterBilateralBorder_32f_C3R", "icv_p8_ippiCopyMirrorBorder_8u_C4R", "_ZN2cv7waitKeyEi", "icv_w7_ippiFilterBorder_32f_C4R", "icv_g9_ippiFilterSobelHorizBorderGetBufferSize", "icv_g9_ippiAbsDiff_8u_C1R", "icv_p8_ippiWarpAffineCubic_16u_C1R", "icv_w7_ownpi_WarpAffineNearest_32f_C3R", "icv_w7_owniConvert_32s8u_AC4_W7", "icv_g9_ownpi_WarpAffine_NN_Const_16s_C1", "icv_h9_ippiCopyReplicateBorder_8u_C3IR", "_ZNK2cv4cuda10DeviceInfo10integratedEv", "icv_w7_ownRow4Linear64f", "icv_w7_ippiMorphOpen_16u_C1R_L", "_ZN2cv17DescriptorMatcher20DescriptorCollection3setERKSt6vectorINS_3MatESaIS3_EE", "icv_s8_ownippiThreshold_GLV_8u_AC4", "icv_g9_ippiCopyConstBorder_32s_C3R", "icv_w7_ownscDFTinv_15_scale_32fc", "ippicviSum_16s_C4R", "icv_w7_owns_BitRev1_S", "icv_h9_ownDistanceTransform_5x5_8u32f_C1R_21B_g9e9", "Java_org_opencv_features2d_Feature2D_detect_11", "icv_p8_ippsFFTGetSize_C_32fc", "icv_p8_owniFilterBilateralR1_InMem_8u_C1R_L", "icv_g9_innerNormL2_5x5", "icv_g9_ippiWarpAffineCubic_64f_C3R", "icv_h9_ownResize4Antialiasing_16u", "icv_h9_ownFilterBoxBorderInMem3x3_16s_C1R", "icv_h9_ippiFilterLowpassGetBufferSize_32f_C1R", "icv_s8_ownSS1_72_8u", "_ZNK2cv5MatOp4diagERKNS_7MatExprEiRS1_", "icv_g9_ippiResizeAntialiasing_16s_C3R_L", "icv_g9_ippiCopyMirrorBorder_32s_C3R", "icv_ipp_finite", "icv_w7_ippiFFTInit_R_32f", "icv_g9_ownSS3_43_32f", "_ZN2cv3ocl6KernelC1Ev", "icv_g9_ownSS1_41_16u", "icv_w7_owns_BitRev1_8", "Java_org_opencv_dnn_Importer_delete", "icv_s8_owniCopy_8u_C1C3R", "_ZN2cv28rotatedRectangleIntersectionERKNS_11RotatedRectES2_RKNS_12_OutputArrayE", "icv_s8_ippiMirror_8u_C3R", "icv_w7_ippiHLSToRGB_8u_C3R", "icv_p8_ippiConvert_32s16s_C1RSfs", "icv_w7_ownpi_WarpAffineSimpleCubic_8u_C4R", "icv_g9_ippiResizeSuper_8u_C4R_L", "icv_h9_ownsGetSizeDftPrimeFact_64f_64f", "icv_s8_ownColLinear16u", "icv_s8_ownLanczos3KernelAA", "icv_h9_ownscDFTfwd_15_scale_32fc", "icv_s8_ownLaplCol5x5_32f_C1", "icv_g9_ownResize4Lanczos2_8u", "icv_w7_ownippiFilterMedian_8u_BC4R_3x3", "icv_w7_ownpi_WarpAffine_L_32f_AC4", "Java_org_opencv_core_Core_mulTransposed_10", "icv_g9_ownpi_WarpSimpleCubic_8u_C3R", "icv_g9_owniFilter32f_8u_C3R_g9e9_8", "icv_p8_ippiIntegral_8u32f_C1R", "icv_s8_ippiResizeAntialiasing_32f_C1R_L", "icv_g9_ippiTranspose_16s_C3R", "icv_g9_ownpi_WarpAffineSimpleNearest_16u_C1R", "_ZNK2cv4cuda10DeviceInfo12maxTexture1DEv", "icv_p8_owniResizeLinear_8u_C3R", "ippicviNorm_Inf_8u_C1R", "_ZN2cv11drawMatchesERKNS_11_InputArrayERKSt6vectorINS_8KeyPointESaIS4_EES2_S8_RKS3_IS3_INS_6DMatchESaIS9_EESaISB_EERKNS_17_InputOutputArrayERKNS_7Scalar_IdEESM_RKS3_IS3_IcSaIcEESaISO_EEi", "icv_w7_ippiNormDiff_L1_8u_C1MR", "icv_s8_ownpi_WarpSimpleLinear_8u_C1R", "icv_s8_ippiConvert_32f16u_C1RSfs", "icv_g9_ownsrDFTinv_10_scale_32f", "icv_h9_ippsSinCos_32f_A21", "Java_org_opencv_imgcodecs_Imgcodecs_imdecode_10", "icv_g9_ownsrDFTinv_13_32f", "icv_w7_ownAbsDiffC_32f_C1R_W7_B", "icv_w7_ownpi_NormInfRel_8u_C1R", "icv_s8_owniConvert_32s8u_AC4_W7", "icv_w7_owns_initTabTwd_L1_32f", "icv_w7_ownsrDFTinv_10_32f", "icv_h9_ippiCopy_16s_C3AC4R", "icv_p8_ownippsMin_16s", "ippicviThreshold_LTVal_16s_C1IR", "icv_s8_owns_cFFTfwd_8_scale_64fc", "icv_w7_ippiMean_16s_C4R", "icv_s8_ownpi_CmpLE_8u_C1R", "_ZN2cv3hal14addWeighted16sEPKsjS2_jPsjiiPv", "icv_p8_ownCalcBorderR1Cubic16s", "_ZN2cv15BriskScaleSpace12getKeypointsEiRSt6vectorINS_8KeyPointESaIS2_EE", "icv_h9_ownNormRel_L2_8u_C1MR_HSW", "icv_w7_owniFilter2_8u16s_C1R", "icv_h9_ippiWarpAffineCubic_16s_C3R", "icv_s8_ippsDFTFwd_RToPack_32f", "icv_w7_ownippiFilterMedianSqr_8u_C4R", "icv_s8_ownpi_dInterVector_L_16u_AC4", "_ZN2cv12denoise_TVL1ERKSt6vectorINS_3MatESaIS1_EERS1_di", "icv_s8_ownpi_WarpAffine_NN_Mem_16u_C3", "icv_s8_ownpi_WarpPC", "icv_s8_ownpi_Histogram_16u_C1R", "icv_p8_ownpi_WarpAffine_C_Repl_16u_C4", "icv_s8_ippiWarpAffineNearest_8u_C3R", "icv_g9_ippsDCTInvGetSize_32f", "icv_s8_ownscDFTinv_3_64fc", "icv_w7_ownCalcBorderR1Cubic16s", "icv_h9_ippiMirror_8u_C4IR", "icv_s8_ownMorphologyBorderInit_1u_L", "icv_h9_ippiMorphClose_16s_C1R_L", "_ZN2cv6detail12DisjointSets9mergeSetsEii", "icv_s8_ownippiFilterMedianCross_16u_C1R_5x5", "icv_h9_ownippiFilterMax_16u_RowCol_C1_h9l9", "icv_p8_owniSet_8u_C4_W7", "icv_h9_ippiCopyMirrorBorder_8u_C3IR_L", "cvSolvePoly", "icv_w7_owns_rFFTfwd_8_scale_64f", "icv_p8_ownscDFTinv_13_scale_64fc", "icv_g9_owniScaleC_8s8u_C1R_fst", "icv_g9_owns_rFFTinv_8_scale_64f", "_ZNK2cv3dnn19experimental_dnn_v13Net8getFLOPSERKSt6vectorIS3_IiSaIiEESaIS5_EE", "ippicviFilterBilateralBorderGetBufferSize", "icv_w7_ownpi_Histogram_BS_32f_C3R", "icv_p8_ownpi_WarpAffine_C_Mem_8u_C1", "icv_h9_ownpi_WarpAffineSimpleCubic_16s_C1R", "icv_w7_ippiMinIndx_8u_C1R", "icv_s8_ippiResizeAntialiasingCubicInit_L", "icv_h9_owniFilter32f_8u_C4R_g9e9_2", "ippicviScaleC_32f_C1R", "cvStartWriteSeq", "_ZN2cv11RNG_MT19937C1Ev", "icv_h9_ownResize1Cubic32f", "icv_h9_ownResize4Cubic16s", "icv_p8_ownpi_CmpLE_8u_C1R", "icv_g9_owniFlipCopy_16u_C3", "icv_p8_ownpi_WarpAffine_NN_32_C3", "icv_p8_ownscrDftFwd_Fact2_32f", "ippicviResizeCubic_16u_C4R_L", "icv_p8_ownSum_8u_C3CMR_V8", "icv_p8_owniResizeLinear_8u_C1R", "icv_g9_ownFilter32f_8u_C1R_g9e9", "icv_h9_owns_initTabTwdRealRec_64f", "icv_g9_ippsConj_32fc", "_ZNK2cv4cuda10DeviceInfo11pciDomainIDEv", "cvGetValidDisparityROI", "icv_w7_ippiNormRel_Inf_16u_C1R", "icv_s8_ownSS3vertical_32f", "icv_g9_owniFilterMedianBorderInMem_8u_C1R", "ippicvsDFTFwd_CToC_32fc", "icv_p8_ippiTrueDistanceTransform_8u32f_C1R", "icv_s8_ippiMean_32f_C1MR", "icv_g9_ippiResizeLinear_64f_C4R_L", "icv_w7_ownpi_Rotate90_B_16_C1R", "_ZN2cv3ocl6KernelC2ERKS1_", "_ZN6CvTypeD1Ev", "icv_h9_owns_rFFTfwd_32_64f", "_ZN2cv2ml6KDTreeC1Ev", "Java_org_opencv_features2d_Params_get_1minInertiaRatio_10", "icv_w7_ippiResizeSuper_16u_C4R_L", "icv_h9_ippiWarpAffineCubicInit", "icv_h9_owniResizeCubic_16u_C1R", "icv_w7_ownpi_WarpSimpleLinear_64f_C1R", "icv_h9_ippiFilterBorder_8u_C3R", "icv_p8_ownRow1Filter10_16u", "icv_p8_ownippiFilterMax_16u_Col", "icv_p8_ownscDftInv_Fact11_32fc", "icv_g9_ippiWarpAffineNearest_16u_C4R", "icv_h9_ownippiFilterMedian_16u_C1R_5x5", "icv_g9_ippiMirror_16u_C1R", "icv_h9_ownsrDFTfwd_9_32f", "icv_s8_ippiGradientVectorGetBufferSize", "icv_w7_ownpi_dInterVectorClip_NN_16_C1", "icv_p8_ippiResizeCubic_32f_C3R_L", "icv_h9_ownLanczosKernel2", "icv_h9_ownsrDFTfwd_6_32f", "_Z25vector_vector_char_to_MatRSt6vectorIS_IcSaIcEESaIS1_EERN2cv3MatE", "icv_h9_owns_cFFTfwd_4_32fc", "icv_w7_ownResize3Lanczos3_8u", "icv_p8_ippiCopyMirrorBorder_16u_C4IR", "_ZN2cv6reduceERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_g9_ownippiFilterxBrd32f_16u_C1R", "Java_org_opencv_core_Mat_n_1copyTo__JJ", "icv_s8_ippiCopyReplicateBorder_16s_C4IR", "icv_g9_ippiCopy_8u_C3P3R", "icv_s8_ippiCopyConstBorder_8u_C3R_L", "icv_g9_owniResizeNearest_16s_C3R", "icv_h9_ippiCannyBorderGetSize", "icv_h9_ippiScaleC_16u_C1IR", "icv_s8_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_W7cn", "icv_h9_ownsrDFTinv_6_scale_32f", "icv_h9_ownsrDFTinv_11_64f", "icv_h9_ownscDftFwd_Prime11_64fc", "icv_w7_ippiFilterSobelVertBorder_8u16s_C1R", "__register_frame_table", "icv_w7_ippiFilterMedianBorderGetBufferSize", "icv_p8_ownSS1_54_32f", "icv_s8_ownsSub_8u_Bound", "icv_p8_ownpi_SimpleRotate_8u_C3R", "_ZNK2cv2ml9StatModel11getVarCountEv", "icv_p8_ownCubicKernel3", "Java_org_opencv_calib3d_StereoBM_create_10", "icv_h9_ownpi_WarpAffine_C_Repl_32f_C3", "icv_g9_ownCalcBorderR4Antialiasing_8u", "Java_org_opencv_photo_Photo_detailEnhance_10", "icv_n0_own_ipps_sCos_G9EPnnn", "icv_h9_ippsZero_32f", "Java_org_opencv_features2d_Feature2D_detectAndCompute_11", "Java_org_opencv_ml_SVMSGD_setStepDecreasingPower_10", "icv_g9_ownippiFilterxBrd_8u_C1R", "icv_w7_CopyWithBorder8u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_W7", "icv_p8_ownpis_Max_32f_C4", "icv_s8_owns_cFFT_2_scale_64fc", "icv_g9_ownpi_WarpAffine_C_Repl_8u_C1", "icv_w7_ippsSin_32f_A24", "icv_w7_ownsMul_16s_Bound", "icv_g9_ippiWarpAffineLinear_16s_C4R", "icv_s8_ownRow1Linear32f", "icv_s8_owns_sDctInv_PreMul_32f", "icv_w7_ownippiFilterMedianHoriz_8u_BC4R_3x1", "icv_h9_cv_ownippiFilterMin_16u_Row", "icv_g9_ippiNormDiff_L1_16u_C1MR", "icv_h9_ippiWarpAffineLinear_16u_C4R", "Java_org_opencv_core_Mat_nPutD", "icv_p8_ownCalcBorderR4Antialiasing_16s", "icv_s8_ownpi_WarpSimpleCubic_16u_C1R", "icv_w7_owns_cRadix4Inv_32fc", "icv_w7_owniCopy8u_C3P3_48_A6", "icv_s8_ownSS4_21_16s", "icv_g9_ippsSortRadixIndexDescend_32f", "icv_p8_ownpi_dInterVectorClip_NN_32_C1", "icv_h9_ippiCopy_8u_AC4R", "icv_g9_ownResize4Cubic8u", "icv_h9_owniScaleC_32f64f_C1R_fst", "icv_s8_ippiCopyMirrorBorder_8u_C3R_L", "icv_p8_ippiAddWeighted_8u32f_C1IR", "icv_p8_ippiMinIndx_16s_C1R", "icv_w7_ownpi_OrC_16u_C3R", "icv_p8_owniCrossCorrValid_NormLevel_32f_C1R", "icv_s8_ownippiFilterMin_16u_Col", "icv_g9_owniFilter32f_16s_C3R_g9e9_5", "icv_p8_owniFilterScharrVertMaskBorder2_8u16s_C1R", "icv_h9_ippiMirror_16s_C3R", "_ZNK2cv4cuda10DeviceInfo24maxSurfaceCubemapLayeredEv", "_ZN2cv3hal8split64sEPKxPPxii", "icv_p8_ippiScaleC_8s16s_C1R", "icv_g9_ippiSqrIntegral_8u32f64f_C1R", "icv_s8_ippiIntegral_8u32f_C1R", "Java_org_opencv_dnn_Dnn_readNetFromTensorflow_10", "_ZN2cv3ocl7ProgramC1Ev", "icv_p8_ippiThreshold_GTVal_32f_C1R", "icv_s8_ownscDftFwd_PrimeFact_32fc", "icv_g9_ownCalcBorderR3Lanczos3_32f", "icv_g9_owns_cFftInv_Large_64fc", "icv_h9_doubleCubicCoeffs", "icv_g9_ownsGetSizeTabDftFwdRec_64f", "icv_h9_ownCalcBorderR3Lanczos3_8u", "icv_g9_owniResizeLinear_8u_C4R", "icv_s8_ownpi_WarpSimpleCubic_16u_C3R", "_ZN2cv3ocl7ContextC2ERKS1_", "icv_w7_ownLaplace3x3Row_32f_AC4", "cvFindGraphEdge", "icv_h9_ownWarpSimple4Nearest32f", "icv_n0_own_ipps_dExp_S9LAynn", "ippicviMean_StdDev_32f_C3CMR", "Java_org_opencv_imgproc_Imgproc_ellipse_10", "_ZN2cv25BOWImgDescriptorExtractorC1ERKNS_3PtrINS_9Feature2DEEERKNS1_INS_17DescriptorMatcherEEE", "icv_h9_owniFilter32f_8u_C1R_g9e9_0", "icv_w7_ownpi_WarpAffine_C_Transp_64f_C3", "icv_s8_ownAConvertOffset32s_8u", "icv_p8_ippiFilterBoxBorder_8u_C1R", "icv_p8_innerHSVToRGB_8u_C3R", "_ZN2cv14setTrackbarMinERKNS_6StringES2_i", "_ZN2cv22createMorphologyFilterEiiRKNS_11_InputArrayENS_6Point_IiEEiiRKNS_7Scalar_IdEE", "icv_s8_ownpi_GetAffineTransform", "WebPGetEncoderVersion", "icv_h9_ippiCopy_16u_P4C4R", "_ZNK2cv3ogl6Arrays4bindEv", "icv_h9_ownscDftFwd_Prime6_32fc", "_ZN2cv2ml6DTrees4NodeC1Ev", "_ZN2cv5flann17LinearIndexParamsC1Ev", "icv_p8_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss", "icv_p8_ownHipass5x5Col_32f_C3", "icv_w7_ownCopySubpix_32f_C1R_W7", "icv_w7_ownpi_XorC_32s_C3R", "Java_org_opencv_imgproc_Imgproc_cvtColor_10", "icv_w7_ippiCopy_16u_C3AC4R", "icv_g9_ownippiFilterxBrd_16s_C1R", "icv_w7_ownippiThreshold_V_16s_C1", "Java_org_opencv_imgproc_Imgproc_HuMoments_10", "Java_org_opencv_imgproc_Subdiv2D_insert_11", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_V8", "icv_s8_ownpi_Sum_8u_C4R", "Java_org_opencv_dnn_Net_getMemoryConsumption_13", "Java_org_opencv_calib3d_Calib3d_Rodrigues_10", "Java_org_opencv_ml_ANN_1MLP_getRpropDWPlus_10", "icv_s8_ippiFilterBoxBorder_8u_C3R", "icv_w7_ippiConvert_32f16u_C1R", "_ZN2cv15NAryMatIteratorppEv", "icv_h9_owniResizeLinear_8u_C1R", "icv_s8_ippiErode_32f_C4R_L", "Java_org_opencv_dnn_Net_getLayerShapes_10", "icv_s8_ownSharpenRow_8u_AC4", "icv_w7_owniClipRectZeroTail_16u32f_C1R", "_ZN2cv3hal6add32fEPKfjS2_jPfjiiPv", "icv_h9_owns_cFFT_1_scale_64fc", "icv_s8_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_V8", "icv_h9_ippiAddWeighted_32f_C1IR", "Java_org_opencv_core_Algorithm_clear_10", "icv_s8_ownpi_dInterPoint_CR_PixelB_16u", "_Unwind_GetGR", "icv_w7_ownpi_WarpAffineSimpleLinear_64f_C4R", "icv_h9_ownpi_dInterPoint_CR_PixelB_8u", "icv_w7_ownpi_WarpAffine_NN_Repl_16s_C1", "icv_s8_ownscDFTfwd_14_scale_64fc", "icv_h9_ownsrDFTinv_11_scale_32f", "cvLog", "icv_p8_ownpi_dInterVectorClip_NN_16_P3", "icv_h9_ownpi_WarpAffine_C_Repl_16s_C1", "icv_w7_ownpi_Rotate90_B_8_C3R", "icv_p8_owniConvert_16u32f_W7", "icv_h9_ippiCopyConstBorder_8u_C1R", "icv_s8_ownSS1_54_16s", "icv_h9_ownSS1_31_8u", "icv_s8_cv_ownippiFilterMin_16s_Col", "icv_p8_ippiSub_8u_C3RSfs", "icv_g9_ippiMean_32f_C3CMR", "cvCompleteSymm", "icv_g9_ippsConvert_16s8s_Sfs", "icv_g9_ownSS1_98_8u", "icv_p8_owniGetRectLeftBF_8u_C3R", "icv_p8_ownNorm_L1_32f_C3CMR_W7", "icv_h9_ippiCopy_32f_C4R", "icv_w7_ippiWarpAffineLinear_32f_C1R", "icv_h9_ippiCopySubpixIntersect_8u_C1R", "icv_g9_ownpi_WarpAffineSimpleLinear_8u_C1R", "icv_s8_ownLaplace3x3Row_8u_C1", "icv_s8_ownMinMaxIndx_16u_C1MR_W7_1", "icv_p8_owniResizeSuper_8u_C1R", "icv_g9_ownFilterBoxBorderInMem_32f_C4IR", "icv_g9_ippiMarkSpeckles_16s_C1IR", "icv_p8_ippiThreshold_GT_8u_C1IR", "icv_p8_ownscDftFwd_Fact2_32fc", "icv_p8_owniResizeLinear_16u_C4R", "icv_g9_owniFilter_32f_C4R_g9e9_8", "icv_h9_ownResize1Cubic16s", "icv_s8_ownNorm_Inf_8s_C3CMR_V8", "icv_g9_ippiIntegral_8u32f_C1R", "icv_s8_ownsrDftInv_Dir_32f", "icv_w7_ownBuildFilter_64f", "icv_g9_ownSS3_21_16s", "icv_g9_ownpi_WarpSimpleNearest_64f_C1R", "icv_s8_ownpi_SimpleRotate_32f_C3R", "icv_p8_ippiWarpAffineLinear_64f_C4R", "icv_h9_ownSS1_98_8u", "icv_w7_ownscDFTinv_12_32fc", "icv_g9_ippiNormDiff_L2_16u_C1R", "Java_org_opencv_photo_Photo_textureFlattening_10", "icv_p8_ippiCopyReplicateBorder_32f_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C3R_5x5", "ippicviSqrIntegral_8u32s64f_C1R", "icv_p8_ippiMean_StdDev_8u_C1MR", "icv_h9_ownSS4_53_32f", "icv_w7_ownpi_WarpAffineNearest_64f_C4R", "__TBB_machine_store8_slow", "icv_s8_ownsAdd_8u", "icv_p8_ippiScaleC_32s32f_C1R", "icv_h9_ippiSet_8u_C1R", "icv_h9_ownpi_NormL1Diff_16s_C1R", "icv_s8_ippiConvert_8u16s_C1R", "icv_s8_ownpi_Rotate180_32_C4R", "icv_w7_ownpi_WarpAffineNearest_16s_C1R", "icv_g9_ownsrDFTfwd_10_scale_64f", "ippicviWarpAffineLinear_8u_C4R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "icv_g9_ippiFilterSobelVertBorder_16s_C1R", "icv_p8_owniFilter_32f_C4R_v8u8_2", "icv_p8_ownpi_WarpAffine_L_Mem_16u_C4", "icv_g9_owniGetRectRight_16s", "icv_w7_ownippiThreshold_16s_C3", "ippicviMirror_32s_C4IR", "_ZN2cv11bitwise_notERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "icv_s8_owniResizeAntialiasing_16u_C3R_L", "icv_g9_ownsrDFTinv_5_scale_64f", "Java_org_opencv_video_BackgroundSubtractorMOG2_setHistory_10", "icv_w7_ownsrDFTfwd_11_scale_64f", "icv_w7_ippiMorphOpen_32f_C3R_L", "icv_h9_owniFilter_32f_C1R_g9e9_3", "own_ipps_dCos_SC_LA", "icv_s8_ippiMean_8u_C3CMR", "icv_w7_ownRow3Lanczos3_8u", "icv_p8_ownpi_WarpAffineSimpleLinear_8u_C3R", "Java_org_opencv_core_Mat_n_1cross", "_ZNK2cv5MatOp8subtractERKNS_7Scalar_IdEERKNS_7MatExprERS5_", "icv_s8_ippiSwapChannels_32f_C4C3R", "ippicviMorphBlackhat_32f_C3R_L", "icv_h9_ippiMorphGradient_32f_C4R_L", "icv_s8_ownRow3Antialiasing_16u", "icv_h9_ippiConvert_32s16s_C1RSfs", "icv_s8_owns_rFFTinv_8_64f", "icv_g9_owniThreshold_32f_C1R", "icv_g9_ippiNormDiff_L2_8u_C3CMR", "icv_h9_ownsrDftInv_PrimeFact_64f", "icv_w7_owns_rFFTinv_32_64f", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_W7", "_ZN2cvplERKNS_3MatERKNS_7MatExprE", "icv_s8_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK", "icv_g9_ownippiFilterMedian_8u_C3R", "icv_h9_ippsFFTFwd_RToPerm_64f", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_W7", "icv_g9_owns_cFFTfwd_4_scale_64fc", "icv_p8_owniConvert_32f8s_ccode", "icv_p8_ippiSub_16u_C1RSfs", "icv_h9_ownscDftFwd_Prime16_32fc", "icv_ipp_is_wni_extension", "icv_w7_ownpi_WarpAffineSimpleNearest_16s_C1R", "icv_s8_ownCalcBorderR3Lanczos2_16s", "icv_w7_piGradientVectorParams", "icv_h9_ownsrDFTinv_9_scale_64f", "icv_g9_ownCalcBorderR1Antialiasing_16u", "icv_g9_ownSS1_81_16u", "icv_g9_ippiWarpAffineCubic_32f_C1R", "icv_g9_ownpi_SimpleRotate_8u_C1R", "icv_s8_ownpi_WarpAffineLinear_32f_C1R", "icv_g9_ownResize1Cubic16s", "icv_h9_hswRGBToGray_32f_AC4C1R", "icv_h9_ownpi_WarpSimpleLinear_16u_C3R", "cvLoadImageM", "icv_s8_owns_cFFTinv_16_32fc", "icv_h9_ownSS1_73_8u", "icv_s8_ownSS1_94_16s", "icv_w7_ownsFFTGetBufSize_C_32fc", "icv_g9_ownpi_ClipUpper", "icv_g9_ippiScaleC_16u32s_C1R", "_ZN2cv9seqRemoveEP5CvSeqi", "icv_h9_ownscDftFwd_PrimeFact_64fc", "cvCompareHist", "icv_w7_ownCalcBorderR4Antialiasing_16u", "Java_org_opencv_core_Core_patchNaNs_10", "icv_h9_ownSS1_94_16u", "cvRunHaarClassifierCascade", "icv_w7_ownpi_dInterVector_L_8u_P4", "icv_p8_owniScaleC_8u32s_C1R_acc", "icv_p8_owniFilterSobelHorizBorder2_32f_C1R", "_ZN2cv2ml6KDTree5buildERKNS_11_InputArrayES4_b", "icv_p8_ippiMean_StdDev_32f_C1R", "icv_p8_ownpi_dInterVectorClip_NN_32_P3", "icv_s8_ippiCopyReplicateBorder_32s_C4IR", "Java_org_opencv_ml_Boost_setWeightTrimRate_10", "_ZN2cv2ml9TrainDataD0Ev", "icv_h9_ownpi_WarpAffineCubic_64f_C4R", "icv_p8_ownpi_WarpAffine_NN_16_C1", "icv_p8_ownippiFilterMedianVert_8u_1x3", "icv_h9_ownpi_Sum_16u_C4R", "icv_h9_ownscDFTinv_12_64fc", "icv_p8_owns_cFft_BlkMerge_32fc", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "icv_n0_own_ipps_sCos_V8EPnnn", "icv_p8_ownpi_NormL1_32f_C1R", "icv_g9_ippiCopyReplicateBorder_8u_C1IR", "icv_p8_ownscDFTinv_3_32fc", "icv_s8_ownWarpSimple1Nearest64f", "icv_p8_ownsrDFTfwd_9_scale_64f", "icv_w7_ippiResizeAntialiasing_8u_C3R_L", "icv_w7_ownsrDFTfwd_6_scale_32f", "icv_p8_ownpi_dInterVectorClip_C_16u_C1", "icv_s8_ippiDCTFwdInit_32f", "icv_p8_ownscDFTfwd_14_64fc", "icv_p8_ownCanny_16s8u_C1R_Mag_W7", "icv_s8_ownSS3_54_16u", "ippicviFilterSobelHorizBorder_8u16s_C1R", "icv_g9_ownRow3Linear16s", "icv_g9_ownResize4Cubic16u", "icv_s8_ownpi_WarpAffine_NN_Const_16s_C3", "icv_g9_ownRow1Linear32f", "_ZN2cv16MinProblemSolver8Function11getGradientEPKdPd", "_ZN2cv17textureFlatteningERKNS_11_InputArrayES2_RKNS_12_OutputArrayEffi", "icv_p8_ownCalcBorderR3Cubic8u", "Java_org_opencv_ml_SVM_getDecisionFunction_10", "_ZN2cv3ogl6Arrays15resetColorArrayEv", "icv_p8_ippsSqrt_64f_A50", "icv_s8_ippiResizeNearest_32f_C3R_L", "icv_s8_ownpi_Min_32f_C3R", "icv_s8_myHLSToRGB_8u_C3R", "icv_g9_ownRow1Filter12_32f", "icv_s8_ippiMean_StdDev_8u_C1MR", "icv_g9_ippiFilterRowBorderPipeline_32f_C3R", "icv_s8_ownpi_Sum_32f_C3R", "Java_org_opencv_ml_ANN_1MLP_setActivationFunction_11", "icv_g9_ippiNorm_L2_32f_C1MR", "ippicviFilterMedianBorder_16s_C3R", "_ZN2cv27CirclesGridFinderParametersC1Ev", "icv_p8_ownAdd_16u32f_C1IR_W7", "icv_g9_ownpi_NormL2Diff_32f_C1R", "icv_h9_ownscDFTinv_15_64fc", "icv_p8_ippsConvert_32f32s_Sfs", "icv_g9_ownsGetSizeTabDftDir_32f", "icv_w7_ownpi_WarpAffine_NN_8_C1", "icv_w7_ippiNormDiff_Inf_8u_C3CMR", "icv_h9_ownsrDFTfwd_3_64f", "_ZN3tbb8internal31Scheduler_OneTimeInitializationEb", "icv_g9_ippsDotProd_64f", "icv_h9_ownpi_WarpSimpleLinear_64f_C3R", "icv_p8_ownResize3Antialiasing_8u", "cvSort", "Java_org_opencv_ml_DTrees_getUseSurrogates_10", "icv_h9_ippiWarpAffineLinear_64f_C3R", "icv_w7_ippiMinMaxIndx_16u_C1R", "icv_p8_ippiResizeLanczosInit_L", "Java_org_opencv_ml_EM_trainEM_11", "icv_w7_ownpi_WarpAffine_C_Transp_16u_C3", "Java_org_opencv_photo_TonemapDrago_delete", "icv_s8_owns_BitRev1_D", "icv_p8_ownSS4_53_16s", "icv_s8_ownpi_WarpAffine_L_32f_P4", "ippicviIntegral_8u32f_C1R", "icv_s8_owns_rFFTfwd_4_32f", "icv_w7_ippiMax_16u_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_V8", "icv_s8_ownSS4_98_8u", "icv_s8_ippiMulC_32f_C1R", "icv_s8_owniFilterBilateralR1_InMem_8u_C3R_px", "icv_p8_ownSS4_53_32f", "cvScalarToRawData", "icv_w7_owns_cRadix4FwdNorm_64fc", "ippicviWarpAffineCubic_16s_C3R", "icv_s8_CV_BORDER_CHECK_PARSE_FLAGS_NEW", "icv_p8_ownpi_WarpAffine_C_Const_16u_C4", "icv_g9_owniResizeAntialiasing_16u_C3R_L", "icv_w7_ownpi_WarpAffine_L_Repl_64f_C3", "icv_n0_own_ipps_dSin_W7EPnnn", "icv_w7_ippiWarpAffineCubic_64f_C3R", "icv_s8_ownscDFTfwd_10_scale_32fc", "icv_g9_ownsrDFTfwd_12_64f", "icv_p8_ownSS3_21_8u", "icv_p8_ippiScaleC_8s_C1R", "icv_h9_ippiNorm_L2_16s_C1R", "icv_h9_ippiConvert_16u32s_C1R", "icv_p8_owniGetRectComBF_32f_C1R", "Java_org_opencv_video_SparsePyrLKOpticalFlow_create_10", "icv_p8_ownRow3Filter2_8u", "icv_n0_own_ipps_sInvSqrt_S9LAynn", "icv_p8_ownpi_dInterVector_L_16u_P3", "icv_h9_ownippsCnvrt_32f16u_Sfs", "_ZN2cv21DetectionBasedTrackerD0Ev", "Java_org_opencv_features2d_AKAZE_setDescriptorChannels_10", "_ZN2cv6detail26BestOf2NearestRangeMatcherclERKSt6vectorINS0_13ImageFeaturesESaIS3_EERS2_INS0_11MatchesInfoESaIS8_EERKNS_4UMatE", "icv_p8_ownpi_WarpSimpleLinear_16s_C1R", "_ZN2cv21DetectionBasedTracker14detectInRegionERKNS_3MatERKNS_5Rect_IiEERSt6vectorIS5_SaIS5_EE", "icv_p8_ippiResizeLanczos_8u_C1R_L", "icv_g9_ownSS1_31_32f", "icv_p8_ownSS1_a7_16s", "ippicviNorm_Inf_16u_C3CMR", "_ZN2cv2ml18LogisticRegression4loadERKNS_6StringES4_", "_ZN2cv10fastMallocEj", "icv_s8_ownscDftFwd_Fact2_32fc", "icv_w7_ownpi_CheckQuad", "icv_w7_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "icv_p8_owns_cFFTinv_8_32fc", "icv_w7_ippiIntegral_32f_C1R", "icv_p8_ownpi_WarpSimpleNearest_16s_C3R", "icv_h9_ippiCopyReplicateBorder_32f_C4R", "icv_p8_ippiResizeGetBufferSize_L", "icv_p8_ownpi_dInterVectorClip_NN_8_C3", "icv_s8_ippiResizeCubicInit_L", "Java_org_opencv_dnn_DictValue_getRealValue_10", "icv_h9_ownSS1_53_16u", "icv_p8_ownpi_Rotate180_16_C3R", "icv_g9_ownCalcBorderR1Lanczos3_16s", "icv_h9_ownpi_WarpAffine_L_Mem_64f_C4", "icv_p8_ownpi_Histogram_FS_32f_AC4R", "ippicviNormDiff_L2_16u_C3CMR", "icv_s8_ownippiFilterxBrd32f_16u_C1R", "icv_w7_ownscDFTinv_6_32fc", "icv_p8_ownsAdd_8u_1Sfs", "icv_w7_ownpi_NormInfDiff_16s_C1R", "icv_s8_ownippiFilterMedian_8u_BC4R_3x3", "icv_p8_ownippiFilterMedianHoriz_16u_C4R_3x1", "icv_w7_ippiTranspose_16u_C1R", "icv_h9_owniRCPack2DConj_32f_C1IR", "icv_s8_ownResize1Cubic16s", "icv_s8_ownRow1Filter14_32f", "icv_p8_ownsConvert_16s64f_W7", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C3R_5x5_V8", "_ZN2cv13batchDistanceERKNS_11_InputArrayES2_RKNS_12_OutputArrayEiS5_iiS2_ib", "icv_s8_ippiDistanceTransform_3x3_8u_C1R", "icv_s8_ownscDftInv_Prime13_32fc", "icv_s8_owniResizeLanczos_16u_C4R", "_ZN2cv3hal6sub32fEPKfjS2_jPfjiiPv", "icv_p8_ownpi_WarpAffineSimpleLinear_32f_C3R", "icv_h9_owns_cFFTinv_64_64fc", "_ZN2cv6detail17VoronoiSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_p8_owniScaleC_16s64f_C1R_fst", "icv_g9_ippiCopy_32f_C4R", "icv_p8_owniFilterBilateralCom_InMem_8u_C3R", "_ZNK2cv13HOGDescriptor6copyToERS0_", "icv_w7_owns_cRadix4InvNorm_64fc", "icv_s8_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_g9_ownippsMagn_64f", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_W7", "icv_g9_ippsCopy_32s", "icv_h9_ippiCopyMirrorBorder_32f_C3R_L", "icv_w7_ownLaplace3x3Row_16s_C1", "icv_s8_ippiCountInRange_32f_C1R", "icv_p8_ippiNorm_L2_16u_C1MR", "icv_p8_ownpi_WarpAffine_C_Mem_64f_C1", "icv_s8_ownSharpenRow_32f_C3", "icv_h9_ownpi_GetAffineTransformQ", "cvCanny", "icv_g9_ownsrDFTfwd_9_scale_32f", "Java_org_opencv_imgproc_Imgproc_convexityDefects_10", "icv_g9_ownCalcBorderR1Lanczos3_16u", "ippicviScaleC_8u16u_C1R", "Java_org_opencv_imgproc_Imgproc_accumulateProduct_10", "Java_org_opencv_core_Mat_n_1Mat__", "icv_s8_ippiMean_StdDev_16u_C1R", "Java_org_opencv_features2d_AKAZE_setDescriptorSize_10", "icv_s8_ownsrDFTinv_14_scale_64f", "ippicviMirror_16s_C3IR", "icv_h9_ippiMinIndx_16u_C1R", "icv_h9_ippiMirror_8u_C1R", "icv_p8_ippiHistogramInit", "_ZN2cv5utils5trace7details6Region17LocationExtraDataC1ERKNS3_21LocationStaticStorageE", "icv_w7_ownpi_Or_8u_C1R", "icv_w7_ownpi_WarpAffineCubic_8u_C1R", "icv_p8_piFilterBoxBorder_32f_C1IR_px", "icv_g9_ownpi_WarpAffineSimpleLinear_16u_C3R", "icv_h9_ownSS4_94_16u", "_ZNK2cv3ocl6Kernel20compileWorkGroupSizeEPj", "icv_s8_ippiFilterBilateralBorder_8u_C3R_L", "ippicviSum_8u_C4R", "ippicviScaleC_32s64f_C1R", "icv_h9_owniFilter32f_8u_C3R_g9e9_1", "_ZN2cv6detail21BestOf2NearestMatcher5matchERKNS0_13ImageFeaturesES4_RNS0_11MatchesInfoE", "Java_org_opencv_core_Core_copyMakeBorder_11", "icv_p8_ownSS3_52_16s", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C1R_5x5_V8", "_ZN2cv3PCAC1Ev", "icv_s8_ippiCopy_8u_C1R", "icv_w7_ownWarpSimple3Nearest16s", "icv_w7_ownColLinear16u", "icv_p8_ownpi_Set_64f_C1R", "icv_h9_owns_cFFTinv_8_32fc", "icv_p8_ippiCopyMirrorBorder_8u_C1IR_L", "Java_org_opencv_features2d_FastFeatureDetector_getNonmaxSuppression_10", "icv_g9_ownsrDFTfwd_13_scale_32f", "icv_w7_ippiConvert_16s16u_C1Rs", "ippicviSum_16s_C1R", "_ZN3tbb17assertion_failureEPKciS1_S1_", "icv_p8_ownRow1Filter10_16s", "icv_p8_ownpi_WarpAffine_NN_16_P3", "_ZN2cv12createButtonERKNS_6StringEPFviPvES3_ib", "Java_org_opencv_photo_TonemapDurand_setSaturation_10", "_ZN2cv17DescriptorMatcher3addERKNS_11_InputArrayE", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale3_10", "cvGetImageCOI", "Java_org_opencv_core_Core_solvePoly_10", "_ZN2cv17agast_cornerScoreILi1EEEiPKhPKii", "icv_w7_ownippiThreshold_V_8u_C1", "icv_s8_ownscDFTfwd_5_scale_32fc", "icv_w7_ownpi_Histogram_BS_32f_C4R", "icv_s8_ownpi_WarpAffine_L_16u_C4", "icv_p8_ownpi_WarpSimpleNearest_16s_C1R", "Java_org_opencv_ml_SVMSGD_setInitialStepSize_10", "_ZNK2cv4UMat6copyToERKNS_12_OutputArrayERKNS_11_InputArrayE", "cvGetRootFileNode", "icv_s8_ownsSet_32s", "icv_s8_ownippiFilterMax_32f_Row", "Java_org_opencv_videoio_VideoWriter_VideoWriter_12", "icv_h9_ownippiFilterMedianVert_8u", "_ZNK3tbb8internal32allocate_root_with_context_proxy8allocateEj", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_W7", "icv_w7_ippiConvert_16s8u_C1R", "Java_org_opencv_video_DenseOpticalFlow_collectGarbage_10", "_ZN2cv10BriskLayerC2ERKS0_i", "own_ipps_dCos_SC_HA", "_ZNK2cv3ocl6Device25preferredVectorWidthFloatEv", "icv_g9_ownsrDftInv_Conv_64f", "icv_h9_ownSS1_54_8u", "icv_g9_ownpi_dInterVectorClip_C_16u_C4", "icv_w7_cv_ownMorphologyGetSizeInitBuf_1u_L", "Java_org_opencv_features2d_DescriptorExtractor_compute_10", "icv_p8_ippiCopy_8u_C3R_L", "icv_h9_ownscDftFwd_Fact5_64fc", "icv_s8_ownpi_And_8u_C1R", "icv_p8_ownNorm_L2_16u_C3CMR_V8", "icv_s8_ownpi_WarpAffine_C_Const_64f_C3", "icv_g9_ippiWarpAffineNearest_16u_C3R", "icv_p8_ippiGradientVectorSobel_8u16s_C1R", "icv_w7_myRGBToHLS_8u_C3R", "icv_g9_ownSS1_65_8u", "icv_p8_ownpi_dInterVectorClip_NN_16_C1", "icv_h9_ippsSqrtOne", "icv_s8_owniSet32sC4Mas", "icv_s8_ippiSet_16s_C4R", "icv_g9_ownscDftFwd_Prime6_32fc", "icv_s8_ownpi_WarpAffineSimpleLinear_64f_C4R", "icv_w7_ownNorm_L2_8u_C3CMR_A6", "icv_h9_ippiCopySubpixIntersect_32f_C1R", "_ZN2cv18initCameraMatrix2DERKNS_11_InputArrayES2_NS_5Size_IiEEd", "icv_w7_ownpi_WarpAffine_NN_Mem_64f_C4", "icv_n0_own_ipps_dInvSqrt_G9EPnnn", "icv_h9_ownsAdd_16s_1Sfs", "ippicviErode_32f_C3R_L", "icv_s8_ippiNorm_Inf_16s_C1R", "icv_h9_owniFilter32f_8u_C1R_g9e9_1", "icv_h9_ippiResizeAntialiasingLanczosInit_L", "icv_p8_ownsMul_16s_PosSfs", "icv_h9_ippiFilterBilateralBorder_32f_C1R", "Java_org_opencv_core_Core_setErrorVerbosity_10", "_ZN2cv16findEssentialMatERKNS_11_InputArrayES2_dNS_6Point_IdEEiddRKNS_12_OutputArrayE", "icv_h9_owniFilter32f_16u_C4R_g9e9_3", "icv_p8_ownNorm_L2_32f_C3CMR_W7", "icv_s8_ippiScaleC_16u32f_C1R", "icv_w7_ownCubicKernel0", "icv_p8_ippiWarpAffineNearest_32f_C1R", "icv_g9_ippiFFTInit_R_32f", "icv_w7_ownCopySubpix_16u_C1R_W7", "icv_g9_ippiCopy_16u_C4C1R", "ippicviResizeCubic_16s_C1R_L", "_ZN2cv3ocl13ProgramSourceC1ERKS1_", "icv_p8_ippiWarpAffineNearest_8u_C4R", "_ZNSt10bad_typeidD0Ev", "_ZNK2cv2ml9StatModel9calcErrorERKNS_3PtrINS0_9TrainDataEEEbRKNS_12_OutputArrayE", "icv_n0_own_ipps_dSinCos_G9HAynn", "icv_s8_ownSS3_65_16s", "icv_p8_ownscrDftFwd_Prime2_64f", "icv_w7_ownpi_NormInfRel_32f_C1R", "icv_h9_ippiFilterLaplacianGetBufferSize_32f_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_V8", "icv_g9_ownRow4Linear32f", "_ZN2cv3hal6sub32sEPKijS2_jPijiiPv", "icv_h9_ownSS1_98_16u", "icv_p8_ownsrDFTinv_15_scale_32f", "icv_w7_ippiDFTGetSize_R_32f", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_W7", "icv_p8_ownSShorisontal_16u", "icv_w7_ownippiFilterMedianHoriz_16s_BC4R_5x1", "Java_org_opencv_features2d_DescriptorMatcher_match_11", "icv_g9_ippiMean_StdDev_8u_C3CMR", "icv_p8_ownpi_WarpAffineLinear_64f_C1R", "icv_w7_ippsMinEvery_64f", "icv_s8_ownCanny_16s8u_C1R_1_16u_W7", "icv_p8_piFilterBoxBorder_32f_C1R_2_v8u8_NA", "icv_h9_ownSS3_41_16u", "icv_s8_ownpi_WarpAffine_C_Mem_16u_C3", "_ZN2cv4cuda6GpuMat5setToENS_7Scalar_IdEERKNS_11_InputArrayERNS0_6StreamE", "_ZNK2cv10softdoubleplERKS0_", "icv_s8_ownSS3_16u", "_ZN2cv3MataSERKNS_7Scalar_IdEE", "icv_h9_ippiMean_16u_C4R", "icv_g9_ownSS1_52_16s", "icv_p8_ownpi_MinIndx_8u_C1R", "icv_s8_ownCalcBorderR1Cubic16u", "icv_p8_ownColCubic32f", "icv_w7_owniFFTFwd_RToPack_32f_C1R", "icv_h9_ippiTranspose_8u_C1R", "icv_g9_gres_NormL2_16u_C1R", "icv_w7_ippiMirror_8u_C3IR", "icv_g9_ippiResizeCubicInit_L", "icv_h9_ippiResizeSuper_16u_C4R_L", "icv_p8_ownpi_WarpAffine_L_Const_8u_C3", "_ZNK2cv3ocl6Device23preferredVectorWidthIntEv", "ippicviAddWeighted_32f_C1IMR", "icv_w7_ippiResizeSuper_32f_C3R_L", "icv_s8_ownpi_Sum_32f_C4R", "icv_s8_ippiDFTInv_CToC_32fc_C1R", "icv_h9_ownsrDFTfwd_13_scale_64f", "icv_s8_ippiCopyMirrorBorder_32s_C3R_L", "icv_s8_ownippiFilterMedian_16u_BC4R", "icv_g9_ippiScaleC_8s16u_C1R", "Java_org_opencv_dnn_Net_getFLOPS_11", "icv_p8_owns_rFFT_2_scale_64f", "icv_p8_owns_rFFTinv_4_scale_32f", "icv_w7_ownpi_GetAffineTransformQ", "icv_w7_ippsFFTFwd_CToC_32fc", "icv_w7_ownCanny_32f8u_C1R_1_16u_W7", "icv_p8_ownHipass5x5Col_16s_AC4", "icv_p8_ippiWarpAffineCubic_16s_C1R", "icv_h9_ippsSqrt_64f_A50", "icv_w7_ownippiFilterMedianHoriz_8u_BC4R", "icv_w7_ownCopySubpixIntersect_32f_C1R_W7", "icv_w7_ippiMean_StdDev_32f_C1MR", "icv_s8_owniFilterPrewittHorizBorder2_32f_C1R", "Java_org_opencv_calib3d_StereoBM_getROI2_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_W7", "icv_w7_owns_rFFTfwd_8_64f", "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", "Java_org_opencv_ml_RTrees_getVotes_10", "icv_h9_ownsrDFTfwd_13_32f", "icv_g9_ownscDFTinv_12_32fc", "icv_s8_ownsrDFTinv_13_scale_64f", "icv_h9_ownpi_WarpAffine_C_Transp_64f_C3", "icv_p8_ippiNormDiff_L2_32f_C1MR", "icv_p8_ownpi_NormL1Diff_16u_C1R", "_ZN2cv17DescriptorMatcherD0Ev", "icv_p8_owns_cFftFwd_Fact4_64fc", "icv_h9_ownsGetSizeTabDftFwdRec_32f", "icv_p8_ownpi_WarpAffine_CR_32f_C3", "icv_w7_ippiFilterScharrVertMaskBorderGetBufferSize", "Java_org_opencv_ml_DTrees_load_10", "_ZN2cv9softfloatC2Ex", "icv_g9_ownsrDFTinv_6_scale_32f", "icv_p8_owniResizeLinear_32f_C1R", "icv_g9_ownColAntialiasing_32f", "Java_org_opencv_features2d_FlannBasedMatcher_FlannBasedMatcher_10", "icv_s8_ownSS1_72_16u", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_W7", "ippicviCountInRange_32f_C1R", "icv_h9_ippiCopyReplicateBorder_32s_C3IR_L", "icv_w7_ownpi_WarpSimpleNearest_64f_C1R", "icv_w7_ownsrDFTfwd_7_scale_32f", "icv_p8_ownCopySubpixIntersect_16u32f_C1R_V8", "icv_w7_ownippiFilterMedianHoriz_16u_C1R_5x1", "icv_p8_ippiResizeAntialiasing_16u_C4R_L", "Java_org_opencv_imgproc_Imgproc_calcBackProject_10", "icv_s8_owniFilter_32f_C3R_v8u8_3", "icv_s8_ownResize1Nearest8u", "icv_g9_owns_cFFT_2_scale_32fc", "icv_p8_ownippiFilterMedianHoriz_16u_C3R_5x1", "icv_h9_ippiNormRel_L1_16u_C1MR", "icv_w7_ippiMoments64f_16u_C1R", "icv_p8_ownSS3_54_8u", "icv_s8_ippiCopyReplicateBorder_16u_C1R", "icv_p8_ownpi_WarpAffine_NN_Const_8u_C1", "icv_s8_ownscDFTfwd_7_scale_32fc", "icv_g9_owns_sDctFwd_Dir_32f", "icv_s8_cv_ownippiFilterMax_8u_Row", "icv_p8_ownColAntialiasing_8u", "icv_g9_ownResize3Linear32f", "Java_org_opencv_ml_ANN_1MLP_getTermCriteria_10", "icv_w7_ippiResizeLanczos_16s_C3R_L", "icv_s8_ownCanny_32f8u_C1R_3_16u_W7", "icv_s8_ownpi_WarpAffine_C_Repl_16s_C4", "icv_p8_owniConvert_8u8s_sse42", "icv_w7_ippiMirror_16s_C4R", "icv_p8_ownscDFTfwd_5_64fc", "icv_h9_ownippiFilterxBrd32f_8u_C3R", "Java_org_opencv_video_KalmanFilter_get_1measurementNoiseCov_10", "icv_p8_ippiCopyMirrorBorder_32f_C4R", "icv_p8_ownippiFilterMedianCross_8u_C3R_3x3", "icv_s8_ippiResizeLinear_64f_C3R_L", "cvGet1D", "icv_s8_ippiResizeCubic_8u_C1R_L", "icv_g9_ownSS3_52_8u", "Java_org_opencv_features2d_Features2d_drawMatches_10", "icv_s8_ownFilterRowBorderPipeline_16s_C1R_5x5_V8", "icv_h9_ippiWarpAffineLinear_32f_C1R", "_ZNK2cv3PCA5writeERNS_11FileStorageE", "_ZN2cv12cornerHarrisERKNS_11_InputArrayERKNS_12_OutputArrayEiidi", "ippicviFilterBilateralBorderInit", "icv_p8_ippiMinMaxIndx_8u_C1MR", "icv_p8_ownscrDftFwd_Prime5_32f", "icv_p8_innerHLSToRGB_8u_C3R", "icv_p8_owniConvert_32s8s_AC4_W7", "icv_p8_ownRow3Antialiasing_16u", "icv_g9_ippiSum_16u_C3R", "icv_s8_ownpi_Min_16s_C3R", "icv_s8_owniResizeSuper_32f_C1R", "_ZN2cv3hal11cvtHSVtoBGREPKhjPhjiiiibbb", "_ZN2cv9videostab25ConsistentMosaicInpainterC1Ev", "icv_p8_ippiAddWeighted_16u32f_C1IMR", "icv_w7_owniFlip_32s_C4_W7", "icv_h9_ownippiFilterMedian_8u_BC4R", "icv_w7_ownippiFilterMedian_16u_C4R", "icv_p8_ownpi_WarpSimpleLinear_64f_C1R", "_ZN2cv3powERKNS_10softdoubleES2_", "icv_p8_ownNormDiff_Inf_16u_C1MR_W7", "icv_g9_ippsMulC_32f_I", "icv_p8_ownippiFilterMedian_8u_C3R_5x5", "icv_w7_ownpi_dInterVectorClip_L_16u_AC4", "icv_p8_ownSumSq_32f_C3CR_W7", "ippicviConvert_8u16u_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_V8", "icv_h9_ownpi_CheckQuad", "cvCreateMat", "icv_p8_ownpi_WarpAffine_C_Repl_32f_C3", "icv_s8_ownpi_SmoothPel", "icv_g9_ippiGradientVectorGetBufferSize", "icv_p8_ippiFilterBoxBorder_16u_C3R", "icv_h9_ippiAddSquare_32f_C1IR", "_ZNK2cv3ocl6Device15image3DMaxWidthEv", "icv_s8_ownSS1_52_16s", "icv_h9_ownResize1Linear8u", "icv_h9_ownCalcBorderR3Antialiasing_32f", "icv_w7_ownippiFilterMedianHoriz_16u_C1R_3x1", "_ZN2cv9videostab18ToFileMotionWriterC1ERKNS_6StringENS_3PtrINS0_24ImageMotionEstimatorBaseEEE", "icv_s8_ownpi_WarpAffine_C_Transp_16u_C4", "icv_p8_owniConvert_16s8u_C1R", "icv_w7_ippiWarpAffineCubic_8u_C4R", "icv_s8_ownpi_WarpAffineCubic_32f_C1R", "icv_s8_ownscrDftFwd_Prime5_64f", "_ZN2cv7fisheye23initUndistortRectifyMapERKNS_11_InputArrayES3_S3_S3_RKNS_5Size_IiEEiRKNS_12_OutputArrayESA_", "_ZN2cv6divideERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi", "icv_h9_owns_cFFTfwd_16_scale_64fc", "icv_s8_ippiScaleC_64f8s_C1R", "icv_w7_ippsDFTGetSize_R_64f", "icv_p8_ownLaplace3x3Row_32f_C4", "icv_w7_ownscDftInv_Prime11_64fc", "Java_org_opencv_ml_SVM_getGamma_10", "icv_p8_owns_rFFTfwd_8_64f", "icv_p8_ownippiFilterMedianHoriz_8u_BC4R_3x1", "icv_p8_ippiNormDiff_Inf_16u_C1R", "_ZN2cv3ORB6createEifiiiiiii", "icv_h9_ownpi_Min_16s_C1R", "icv_g9_ownResize3Linear64f", "_ZN2cv8Subdiv2DC1ENS_5Rect_IiEE", "icv_g9_ippiTranspose_32s_C3IR", "icv_w7_ownippsCnvrtFin_32f16s_Sfs", "Java_org_opencv_imgproc_Imgproc_HoughLines_10", "icv_ipp_is_avx_extension", "icv_g9_ippiResizeAntialiasing_16u_C3R_L", "icv_g9_ownpi_MinMax_16u_C1R", "icv_s8_owniResizeLanczos_16s_C4R", "icv_w7_ownpi_XorC_8u_C4R", "icv_g9_ippiScaleC_16s32f_C1R", "icv_h9_ippiMean_StdDev_32f_C1MR", "icv_h9_ownSS4_98_8u", "_ZN2cv3EMDERKNS_11_InputArrayES2_iS2_PfRKNS_12_OutputArrayE", "_ZN2cv3hal23cvtRGBAtoMultipliedRGBAEPKhjPhjii", "icv_p8_ippiCopyConstBorder_8u_C3R", "icv_g9_ippiNorm_L2_8u_C1R", "_ZN2cv6detail19createLaplacePyrGpuERKNS_11_InputArrayEiRSt6vectorINS_4UMatESaIS5_EE", "icv_h9_ippiFilterScharrHorizMaskBorder_32f_C1R", "icv_p8_ippiNorm_L2_32f_C1R", "icv_g9_owniFilterRobertsUpBorder2_32f_C1R", "ippicviCopy_16u_C4C1R", "icv_w7_ownpi_WarpAffine_L_Const_64f_C4", "icv_h9_ownpi_WarpAffine_C_Const_64f_C4", "Java_org_opencv_features2d_Params_set_1filterByInertia_10", "icv_g9_ownSS1_83_16u", "icv_s8_ownpi_Min_16s_C4R", "icv_h9_ippiCopy_16u_AC4C3R", "icv_p8_ippiResizeNearest_16u_C4R_L", "icv_g9_owniSwapChannels_16u_C3C4R", "icv_h9_ownCalcBorderR4Cubic16u", "icv_p8_ownpi_NormL2_16s_C1R", "icv_h9_ippsConvert_32f8s_Sfs", "icv_h9_ippiSet_16u_C3MR", "icv_g9_ownscDFTinv_10_64fc", "icv_p8_owniScaleC_32f16u_C1R_fst", "icv_w7_ownResize3Cubic32f", "icv_h9_ownpis_Indx_16u_C1", "icv_p8_ippiNorm_L1_32f_C1MR", "icv_g9_owniFilterSobelHorizBorder2_16s_C1R", "icv_h9_ownippiFilterMedianSqr_16s_C3R", "Java_org_opencv_calib3d_Calib3d_correctMatches_10", "icv_s8_ownpi_dInterVector_L_8u_P3", "icv_s8_ownippsMagn_16s_Sfs_ASM", "icv_p8_ownpi_WarpAffine_C_Mem_16s_C3", "icv_g9_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_g9_ownscDFTfwd_10_scale_32fc", "icv_p8_ownAFilterRow32f_8u_C4R", "_ZN2cv3ocl7Image2DD2Ev", "icv_p8_ippiNormDiff_Inf_8u_C1R", "icv_g9_ownps_Add_16u_Sfs", "icv_w7_ippiSet_16s_C3R", "icv_g9_ownsMul_16s_1Sfs", "_ZN2cv8KeyPoint7convertERKSt6vectorIS0_SaIS0_EERS1_INS_6Point_IfEESaIS7_EERKS1_IiSaIiEE", "icv_h9_ippiFilterBoxBorder_8u_C3R", "icv_s8_ownippsMagn_32sc32s_Sfs_ASM", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7", "icv_s8_ownsrDftInv_Conv_64f", "icv_h9_ippiSum_32f_C4R", "icv_p8_ownResize4Antialiasing_8u", "icv_p8_ippiWarpAffineLinear_32f_C3R", "cvGetReal3D", "icv_h9_ownSS4_a7_16s", "cvStartReadChainPoints", "icv_s8_ownscDFTfwd_7_scale_64fc", "icv_p8_ownSq_32f_C3CMR_W7", "icv_g9_ippiCopy_32s_C4MR", "icv_w7_ownWarpSimple3Nearest64f", "_ZNK2cv4cuda10DeviceInfo24maxTextureCubemapLayeredEv", "_ZNK2cv3dnn19experimental_dnn_v13Net8getFLOPSERKSt6vectorIiSaIiEE", "icv_p8_ownCanny_32f8u_C1R_3_32s_W7", "icv_w7_ippiAddProduct_32f_C1IMR", "icv_w7_owns_initTabTwd_L1_64f", "icv_s8_owncvGetCacheSize", "icv_s8_ownResize3Antialiasing_16s", "icv_p8_ownippsCnvrtFin_64f32s_Sfs", "icv_s8_ownSShorisontal_32f", "cvReleasePOSITObject", "Java_org_opencv_calib3d_Calib3d_drawChessboardCorners_10", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EERS0_IiSaIiEERS0_IdSaIdEEid", "ippicviScaleC_16u8u_C1R", "icv_p8_ownippiFilterMedian_8u_C1R_5x5", "_ZN2cv20loadWindowParametersERKNS_6StringE", "icv_s8_ippiNot_8u_C1R", "_Z26Mat_to_vector_vector_PointRN2cv3MatERSt6vectorIS2_INS_6Point_IiEESaIS4_EESaIS6_EE", "Java_org_opencv_video_Video_calcOpticalFlowPyrLK_11", "icv_p8_owniResizeLinear_32f_C4R", "icv_s8_ownippiFilterMedianCross_8u_C3R_5x5", "icv_w7_ownCalcBorderR4Lanczos2_32f", "icv_h9_ippiCopy_16s_C3R", "icv_s8_ippiConvert_16u8s_C1RSfs", "icv_p8_ownippiFilterMedianHoriz_16s_C3R_3x1", "icv_ipp_get_pentium_ident", "icv_g9_owniFilterBilateralCom_InMem_8u_C3R_px", "icv_g9_ippiCopyReplicateBorder_32f_C1R", "icv_g9_ownCalcBorderR4Linear64f", "ippicviCopy_8u_C3C1R", "icv_s8_ownFilter_32f_C3R_v8u8", "icv_g9_ippiAbsDiff_32f_C1R", "icv_w7_ownAddSquare_32f_C1IR_W7", "icv_s8_ippiResizeLinear_16u_C1R_L", "icv_w7_ippiScaleC_32s16u_C1R", "icv_w7_ownRow4Linear8u", "icv_g9_ownCubicKernel0", "icv_g9_ownRow4Filter2_8u", "_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarThresholdGen_10", "icv_p8_owns_rFFTinv_32_scale_64f", "icv_w7_ippiCrossCorrNorm_8u32f_C1R", "icv_h9_ownpi_NormInfRel_32f_C1R", "icv_h9_ownscDftInv_Prime2_64fc", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setMaxLevel_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7", "icv_p8_ippiMorphBlackhat_16s_C1R_L", "_ZN2cv7MomentsC2Ev", "icv_s8_ownsrDFTinv_10_scale_32f", "Java_org_opencv_calib3d_Calib3d_estimateAffine3D_10", "Java_org_opencv_video_DualTVL1OpticalFlow_getScalesNumber_10", "icv_p8_owniFilterSobelHorizBorder2_8u16s_C1R", "icv_s8_ippsFFTInv_PermToR_32f", "Java_org_opencv_core_Mat_n_1row", "icv_w7_ownpi_WarpAffine_L_Repl_16u_C3", "icv_p8_ownscDFTfwd_11_scale_64fc", "_ZN2cv8internal18WriteStructContextC2ERNS_11FileStorageERKNS_6StringEiS6_", "icv_s8_owns_initTabTwdBase_64f", "icv_s8_ownpi_dInterVector_NN_16_P4", "ippicviNormRel_L2_8u_C1R", "icv_s8_ippiConvert_16s16u_C1Rs", "WebPMemoryWriterInit", "_ZNK2cv13HOGDescriptor7computeERKNS_11_InputArrayERSt6vectorIfSaIfEENS_5Size_IiEES9_RKS4_INS_6Point_IiEESaISB_EE", "cvEndWriteSeq", "ippicviFilterBoxBorder_8u_C1R", "icv_g9_ownFilter32f_16s_C3R_g9e9", "icv_h9_ownSS4_53_16s", "icv_p8_ippiCopyMirrorBorder_32f_C3R", "icv_p8_owniFilterPrewittVertBorder2_32f_C1R", "icv_h9_owniCopyMirrorBorder_8u_C3R_L", "icv_g9_ippiThreshold_GTVal_8u_C1R", "icv_p8_owniFilterBilateralCom_InMem_8u_C3R_px", "icv_g9_ownSS4_94_8u", "_ZN2cv12sqrBoxFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiNS_5Size_IiEENS_6Point_IiEEbi", "_ZN2cvgeERKNS_3MatES2_", "icv_w7_ippiConvert_32f16s_C1R", "icv_w7_ownLaplace3x3Row_16s_C3", "icv_h9_ippiResizeNearest_16s_C1R_L", "icv_p8_ownSharpenRow_8u_AC4", "icv_g9_ownpi_Rotate180_64_C3R", "icv_p8_ippiSet_32f_C4MR", "icv_g9_owniScaleC_16s16s_C1R_fst", "icv_p8_ownpi_Rotate90_B_32_C4R", "icv_g9_ownsrDFTinv_11_scale_64f", "icv_s8_ippiWarpAffineLinear_64f_C1R", "icv_s8_ippiCopyReplicateBorder_32s_C3R", "_ZN2cv9videostab18LpMotionStabilizerC1ENS0_11MotionModelE", "icv_p8_ownCanny_32f8u_C1R_1_16u_W7", "icv_p8_ownippiFilterMedianHoriz_16u_C1R_5x1", "llwiCopyMerge", "icv_p8_owns_cFFTfwd_16_scale_64fc", "icv_h9_ippiCompare_16s_C1R", "icv_w7_owniThreshold_32f_C1R", "_ZN2cv3ocl7Image2DD1Ev", "icv_g9_ownCalcBorderR3Lanczos3_16u", "icv_g9_ippiWarpAffineLinear_8u_C4R", "icv_w7_ippsConvert_8s16s", "icv_p8_ippiAdd_32f_C1R", "_ZN2cv3maxEdRKNS_3MatE", "_ZN2cv4UMat4diagERKS0_", "icv_h9_owniScaleC_32s32s_C1R_acc", "icv_g9_ownRow3Linear32f", "icv_g9_owniAutoCorr_C1R", "icv_n0_own_ipps_dExp_G9HAynn", "icv_p8_owniResizeCubic_32f_C3R", "icv_p8_ownResize3Lanczos3_8u", "icv_w7_ownNormRel_L2_8s_C1MR_W7", "_ZN2cv4cuda11setGlDeviceEi", "icv_w7_ippiScaleC_16u_C1IR", "icv_p8_ownpis_Max_8u_C4", "icv_g9_ippiResizeAntialiasingCubicInit_L", "icv_g9_ownSS4_21_32f", "icv_w7_ippiScaleC_8u16s_C1R", "icv_h9_ippsSortRadixAscend_16s_I", "icv_p8_ownCopySubpix_32f_C1R_W7", "icv_h9_ippiCopyMirrorBorder_8u_C1IR_L", "_ZNK2cv17CommandLineParser20getPathToApplicationEv", "_ZN3tbb8internal8governor16assume_schedulerEPNS0_17generic_schedulerE", "Java_org_opencv_imgproc_Imgproc_fillConvexPoly_10", "ippicviSub_32f_C1R", "icv_g9_ippiFilterBoxBorderGetBufferSize", "icv_p8_owns_cFFTinv_8_scale_32fc", "icv_p8_owniSwapChannels_8u_C3R", "icv_s8_ownRow4Cubic16u", "icv_w7_ownsrDFTinv_5_32f", "icv_p8_ippiResizeAntialiasing_8u_C1R_L", "icv_g9_owns_rFFT_1_scale_64f", "icv_s8_ippiCopy_32f_C4C1R", "Java_org_opencv_core_Mat_n_1zeros__III", "icv_h9_ownSS3_8u", "icv_p8_owniFilterPrewittVertBorder2_16s_C1R", "Java_org_opencv_videoio_VideoWriter_open_13", "icv_s8_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss", "ippicviSum_16u_C4R", "icv_p8_ippiHistogramUniformInit", "icv_w7_ownLaplCol5x5_32f_C4", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_10", "icv_w7_ippiFFTInv_PackToR_32f_C1R", "_ZN2cv6detail14PlaneWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_iiRS3_", "icv_p8_owniFilter_32f_C1R_v8u8_2NA", "icv_g9_ippiCopy_32f_P4C4R", "icv_h9_ownMorphInit_L", "icv_w7_ownpi_Rotate90_B_8_C4R", "icv_s8_ippsGetLibVersion", "Java_org_opencv_videoio_VideoCapture_delete", "icv_p8_ippiFilterSobelVertBorder_8u16s_C1R", "icv_p8_ippiCopyMirrorBorder_32s_C4R", "icv_g9_ippiSum_16u_C4R", "icv_p8_ippiNormDiff_L1_16u_C3CMR", "icv_g9_ippsConvert_16s32s", "icv_p8_owniFilter_32f_C3R_v8u8_8NA", "cvCheckHardwareSupport", "icv_h9_ippiMean_8u_C4R", "icv_w7_ownFilterRowBorderPipeline_32f_C3R_X", "icv_w7_ippiWarpAffineLinearInit", "icv_s8_owniFilter_32f_C4R_v8u8_2", "icv_h9_ippsZero_8u", "Java_org_opencv_imgproc_Imgproc_undistort_10", "icv_p8_owniScaleC_16s16s_C1R_fst", "icv_s8_ownsrDFTinv_15_32f", "_ZN2cv8UMatDataD2Ev", "icv_w7_ippiMoments64f_32f_C1R", "icv_p8_owniFilterBilateralR2_InMem_8u_C1R", "Java_org_opencv_dnn_Layer_forward_10", "Java_org_opencv_video_KalmanFilter_set_1controlMatrix_10", "icv_h9_ippiSwapChannels_32f_C4C3R", "icv_p8_ippiFilterLaplacianBorder_8u16s_C1R", "icv_g9_owniFlip_16u_C3", "icv_w7_ownpi_WarpAffine_C_Mem_16u_C4", "ippicviWarpAffineCubic_64f_C4R", "icv_p8_ippiDCT8x8Fwd_32f_C1", "icv_w7_owniResizeNearest_16u_C3R", "icv_n0_own_ipps_sLn_V8EPnnn", "icv_s8_ownCalcBorderR3Linear16u", "icv_s8_owniResizeLinear_32f_C4R", "icv_w7_ippiScaleC_32s_C1IR", "_ZN2cv10BOWTrainer5clearEv", "icv_s8_ownpi_WarpAffine_C_Const_16u_C1", "icv_p8_ippiMorphClose_16s_C1R_L", "icv_g9_ownFilterColumn_32f_C1R_g9e9", "icv_g9_ownFilterBoxBorderInMem5x5_8u_C1R", "icv_w7_ownscDftFwd_Fact_64fc", "icv_s8_owniResizeLinear_64f_C1R", "Java_org_opencv_objdetect_HOGDescriptor_getDaimlerPeopleDetector_10", "icv_w7_ippsSqrt_32f", "icv_s8_ippiNorm_L1_16u_C1MR", "icv_s8_ownsMinEvery_16u", "icv_h9_owniGetRectLeftBF_32f_C1R", "icv_p8_ownSumSq_16u_C1R_W7", "icv_g9_ownpi_WarpAffine_C_Mem_16u_C3", "icv_p8_owniFilterBilateralR1_InMem_8u_C3R_L", "icv_p8_ownippiFilterxBrd32f_8u_C1R", "_Z18Mat_to_vector_charRN2cv3MatERSt6vectorIcSaIcEE", "icv_s8_owniConvert_32f8u_AC4_W7", "_ZN2cv11setIdentityERKNS_17_InputOutputArrayERKNS_7Scalar_IdEE", "icv_s8_owniTranspose32s_C1R_core2", "icv_s8_ownpi_dInterVector_L_16u_C3", "cvUpdateWindow", "icv_p8_ownpi_NormL1Diff_16s_C1R", "_ZN3tbb8internal3rml14private_worker14release_handleElb", "icv_h9_owniResizeLinear_64f_C4R", "icv_g9_ownpi_WarpAffineSimpleNearest_64f_C4R", "icv_h9_owniCrossCorrValid_NormLevel_8u_C1R", "icv_p8_ownscDftInv_Fact_32fc", "icv_p8_ownippiThreshold_V_32f_C1", "icv_h9_ippiAddProduct_8u32f_C1IMR", "_ZN2cv3ocl7ProgramC2ERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_p8_ownsrDftFwd_Dir_32f", "ippicviWarpAffineNearest_16s_C4R", "_ZNK2cv3ocl6Device22nativeVectorWidthShortEv", "icv_h9_ownSS4_52_16s", "_ZN2cv6theRNGEv", "_ZNK2cv8Subdiv2D11checkSubdivEv", "icv_w7_ippiSet_32f_C4MR", "icv_p8_ownSS4_a7_8u", "_ZN2cv6detail12DpSeamFinderC2ENS1_12CostFunctionE", "icv_g9_ippiTranspose_8u_C3R", "Java_org_opencv_calib3d_StereoMatcher_compute_10", "icv_h9_ownRow4Lanczos3_32f", "icv_p8_ownsConvert_8s16s_W7", "icv_s8_ownscDftInv_PrimeFact_64fc", "icv_h9_ippiMean_StdDev_16u_C3CMR", "icv_w7_ownpi_GetAffineTransformInverse", "ippicviFilterMedianBorder_16u_C3R", "icv_w7_ownsFloorOne", "icv_s8_ippiAddSquare_8u32f_C1IMR", "Java_org_opencv_android_Utils_nBitmapToMat", "icv_w7_ippiNormRel_L1_16s_C1R", "icv_p8_owns_cFFTinv_8_scale_64fc", "icv_w7_ippiCopy_8u_P3C3R", "icv_h9_owniGetRectComBF_8u_C3R", "icv_s8_ownpi_dInterVectorClip_L_8u_C4", "icv_h9_ippiFilterBoxBorderGetBufferSize", "icv_g9_ownpi_WarpAffineSimpleCubic_16u_C4R", "icv_p8_ownscDftFwd_Prime8_32fc", "icv_h9_ownCalcBorderR1Lanczos3_8u", "icv_p8_ownpi_CheckQuad", "icv_s8_ownippiFilterMedianHoriz_16s_C3R", "icv_h9_ownpi_WarpAffineSimpleLinear_32f_C3R", "_ZN2cv8superres15SuperResolutionC2Ev", "icv_p8_ownsConj_16sc_I_T7", "icv_p8_owniFlipCopy_16u_C3", "icv_s8_ippiMean_16u_C4R", "icv_g9_ippiCopyConstBorder_32f_C4R", "icv_w7_ownCalcBorderR4Antialiasing_32f", "icv_s8_ippiWarpAffineLinear_32f_C4R", "_ZNK2cv3dnn19experimental_dnn_v13Net13getLayerTypesERSt6vectorINS_6StringESaIS4_EE", "icv_g9_owniConvert_8u32f_C1R", "__powisf2", "ippicviSwapChannels_8u_C4C3R", "icv_s8_ownippiThreshold_16s_C3", "icv_h9_innerSwapChannels_16u_C4R", "Java_org_opencv_imgproc_Imgproc_getDerivKernels_11", "_ZN2cv3MatC2ERKS0_RKNS_5RangeES5_", "iwGetLibVersion", "icv_s8_ippiSwapChannels_16u_C3C4R", "Java_org_opencv_ml_StatModel_empty_10", "ippicviDCTFwd_32f_C1R", "_ZN2cv4cuda5EventC1ENS1_11CreateFlagsE", "icv_g9_owniFilterPrewittHorizBorder2_16s_C1R", "icv_g9_owniFilter_32f_C4R_g9e9_4", "icv_s8_ownResize1Antialiasing_8u", "icv_g9_ownsGetSizeDftConv_32f", "_ZN2cv22SimpleBlobDetectorImpl6detectERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EES3_", "icv_s8_ownMinEigenVal_32f_C1R_W7", "icv_h9_ippiCopyConstBorder_32s_C1R", "icv_h9_ownsInitTabDftInvRec_32f", "cvCrossProduct", "icv_h9_ownippiFilterMedianVert_16s_1x5", "icv_p8_ownpi_WarpAffine_C_Const_32f_C3", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "_ZN2cv23estimateAffinePartial2DERKNS_11_InputArrayES2_RKNS_12_OutputArrayEidjdj", "icv_g9_ippiResizeLinear_16u_C4R_L", "ippicviMorphBlackhat_8u_C4R_L", "Java_org_opencv_ml_SVM_trainAuto_10", "_ZNK2cv5MatOp6invertERKNS_7MatExprEiRS1_", "icv_w7_ownsExpOneF", "cvGetDiag", "_ZNK2cv4UMat8ndoffsetEPj", "_ZN2cv9videostab17OnePassStabilizerC2Ev", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_descriptorType_10", "icv_s8_ippsMulC_32f_I", "icv_h9_ippsSortRadixDescend_16u_I", "llwiCopyMixed", "ippicviErode_8u_C3R_L", "icv_w7_ownRow4Linear16u", "icv_g9_ippsDFTInv_CToC_32fc", "icv_w7_ownscDFTfwd_10_scale_64fc", "icv_w7_ownscrDftInv_Fact2_64f", "icv_g9_ippiNormDiff_L1_16u_C1R", "ippicviNorm_L1_8u_C1MR", "icv_g9_ownSS1_32_16u", "icv_h9_ippiAbsDiff_8u_C1R", "icv_s8_ownNorm_L1_16u_C1MR_W7", "icv_p8_owniScaleC_32f64f_C1R_acc", "_Z7cvTruncRKN2cv9softfloatE", "icv_p8_owniResizeLanczos_32f_C4R", "icv_p8_ownLaplRow5x5_16s_C4", "iwiScale_GetScaleVals", "Java_org_opencv_imgproc_Imgproc_linearPolar_10", "icv_h9_ownSS1_81_32f", "icv_h9_owniScaleC_16s16u_C1R_fst", "icv_g9_ippiResizeSuper_16s_C1R_L", "icv_w7_ownpi_WarpAffine_NN_Const_16s_C4", "icv_p8_ownCalcBorderR3Linear32f", "icv_p8_owns_initTabTwdBase_64f", "icv_p8_ownpi_WarpAffine_NN_Const_32f_C3", "cvGetErrInfo", "icv_s8_ownpi_dInterVectorClip_NN_8_C1", "_ZN2cv3ocl7ProgramC1ERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_h9_owniFilter32f_16u_C1R_g9e9_0", "Java_org_opencv_imgproc_LineSegmentDetector_compareSegments_10", "icv_w7_ownNormDiff_L2_8u_C1MR_W7", "icv_p8_ownResize1Cubic32f", "icv_h9_ippiConvert_16u8u_C1R", "icv_h9_ownpi_NormInfRel_16u_C1R", "icv_p8_ownCalcBorderR4Antialiasing_32f", "icv_p8_ownpi_Min_16u_C1R", "icv_w7_ippiCopyMirrorBorder_8u_C1R_L", "_ZN2cv15extractImageCOIEPKvRKNS_12_OutputArrayEi", "icv_p8_ippiResizeLinear_64f_C4R_L", "icv_s8_ownpi_WarpAffine_NN_Mem_64f_C1", "_ZN2cv9videostab15VideoFileSource6heightEv", "icv_w7_myHSVToRGB_8u_C3R", "icv_s8_owns_rFFTinv_8_32f", "_ZN2cv3logERKNS_9softfloatE", "_ZN2cv3Mat19getDefaultAllocatorEv", "cvClearGraph", "icv_g9_ippiGradientVectorScharr_8u16s_C1R", "icv_g9_ownscDFTfwd_11_64fc", "icv_s8_ippiNorm_L2_8u_C3CMR", "icv_p8_ippiResizeAntialiasing_16s_C3R_L", "icv_p8_ippiSet_32s_C4MR", "icv_s8_ippiScaleC_16s32f_C1R", "icv_g9_ownsZero_8u", "icv_s8_ippiMorphOpen_8u_C3R_L", "_ZNK2cv9Feature2D5emptyEv", "icv_g9_ownSS4_31_16s", "_ZN2cv6detail20BundleAdjusterAffine12calcJacobianERNS_3MatE", "icv_s8_ownpi_WarpAffine_NN_Mem_16s_C3", "icv_h9_ippiCopyConstBorder_8u_C1R_L", "icv_p8_ippiWarpAffineNearest_64f_C1R", "_ZN2cv9videostab18InpaintingPipeline10setMotionsERKSt6vectorINS_3MatESaIS3_EE", "icv_h9_owns_initDctInv_Fft_32f", "_ZN2cv3Mat6createEiPKii", "icv_p8_ippiCopyMirrorBorder_8u_C3R", "icv_h9_owniScaleC_16u8s_C1R_fst", "icv_w7_ownippiFilterMedianVert_8u_C4R_1x5", "icv_p8_owniTransposeWxH_32sC3", "icv_h9_computeTiles", "Java_org_opencv_video_Video_meanShift_10", "icv_p8_ippsConvert_32f8u_Sfs", "icv_p8_ownLaplRow5x5_8u_C4", "icv_p8_ippiDCTFwdGetSize_32f", "icv_g9_ippiScaleC_64f32s_C1R", "Java_org_opencv_calib3d_Calib3d_triangulatePoints_10", "icv_g9_ownpi_NormInfDiff_32f_C1R", "icv_h9_ownsMul_16s_PosSfs", "icv_w7_ownpi_Min_8u_C3R", "icv_g9_ippiMean_StdDev_32f_C1MR", "icv_h9_owniSwapChannels_8u_C4C3R", "icv_w7_ippiSqrDistanceNorm_8u32f_C1R", "icv_s8_ownsrDFTinv_3_scale_64f", "icv_h9_ownBuildWarpFilter_32f", "cvAlloc", "icv_p8_ownpi_dInterVectorClip_C_8u_C3", "WebPPictureHasTransparency", "_ZN2cv5flann11IndexParamsC2Ev", "icv_s8_ippsDFTInit_C_32fc", "icv_p8_ownSS3_73_16u", "icv_g9_owniSwapChannels_16u_C3R", "_ZN2cv17DescriptorMatcher20DescriptorCollectionD0Ev", "icv_p8_ownsrDFTinv_5_32f", "icv_w7_ownpi_Sum_16s_C3R", "icv_p8_ownCalcBorderR4Lanczos2_16s", "Java_org_opencv_calib3d_StereoBM_getROI1_10", "cvDestroyAllWindows", "cvCloneGraph", "icv_h9_ownSS3_52_8u", "icv_p8_ippiCopyConstBorder_8u_C1R", "icv_h9_ippiScaleC_32s64f_C1R", "icv_w7_piGradientSobel32f", "icv_g9_ippiMinIndx_16u_C1R", "icv_p8_ippsAtan2One", "icv_w7_ippsMul_64fc", "icv_s8_ippiResizeCubic_16s_C4R_L", "icv_s8_ownpi_Min_8u_C4R", "icv_h9_owns_cRadix4FwdNorm_64fc", "icv_w7_owniFilterMedianBorderInMem_16s_C1R", "icv_s8_owns_crFftInv_CoreMT_64f", "icv_w7_ippiResizeLinear_16u_C1R_L", "_ZN2cv17FlannBasedMatcher5clearEv", "icv_w7_ownippiThreshold_GV_16s_C4", "icv_w7_ippiMinMaxIndx_8u_C1R", "icv_p8_ownscDftInv_Prime2_64fc", "icv_s8_ownPrewColV_16s", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringEi", "icv_g9_ippiNormDiff_L2_32f_C1MR", "cvNormalize", "_ZN2cv3Mat4onesEiPKii", "icv_h9_ippiDFTGetSize_C_32fc", "icv_w7_ownpi_WarpAffineLinear_16u_C1R", "icv_p8_ippiFilterBoxBorder_16u_C4R", "icv_h9_ippiCopyReplicateBorder_32s_C1R_L", "icv_w7_ownscDftInv_Prime16_64fc", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7_sym", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "icv_s8_ippiDilateGetBufferSize_L", "icv_w7_ippiResizeAntialiasing_16u_C4R_L", "icv_p8_ippiDFTGetSize_R_32f", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_h9_ownpi_WarpAffine_L_Repl_16u_C1", "icv_s8_ippsConvert_32f32s_Sfs", "icv_g9_ippiCopyMirrorBorder_32f_C1R", "icv_g9_cv_ownippiFilterMax_8u_Msk", "icv_s8_owns_cFFT_1_scale_32fc", "icv_h9_ownpi_WarpAffine_C_Mem_32f_C4", "icv_h9_owniScaleC_8u8s_C1R_acc", "icv_w7_ippiResizeLanczos_16s_C4R_L", "icv_w7_ownpi_WarpAffineCubic_64f_C4R", "icv_s8_ownpi_dInterVector_L_16u_C4", "icv_w7_ownscDftInv_Prime3_32fc", "_ZNK2cv3ocl7Image2D3ptrEv", "icv_g9_ippiDCT8x8Fwd_32f_C1", "icv_h9_ownpi_WarpAffineSimpleNearest_32f_C1R", "_ZNK3tbb10interface78internal15task_arena_base16internal_enqueueERNS_4taskEi", "_ZN2cv10accumulateERKNS_11_InputArrayERKNS_17_InputOutputArrayES2_", "icv_s8_ownRow1Filter10_32f", "icv_n0_own_ipps_sAtan2_P8EPnnn", "icv_s8_ippiFilterBorder_8u_C1R", "_ZN2cv3dnn19experimental_dnn_v13NetC2Ev", "icv_w7_ownpi_XorC_32s_C4R", "icv_p8_owniDenominatorFull_C1R", "_ZN2cv13stereoRectifyERKNS_11_InputArrayES2_S2_S2_NS_5Size_IiEES2_S2_RKNS_12_OutputArrayES7_S7_S7_S7_idS4_PNS_5Rect_IiEESA_", "iwiSetMask", "icv_s8_owniResizeCubic_16u_C1R", "icv_h9_ippiNormRel_Inf_32f_C1MR", "icv_s8_ippiAddWeighted_32f_C1IMR", "cvDisplayOverlay", "ippicviTranspose_32s_C4IR", "_ZN2cv5utils5trace7details12TraceManagerD1Ev", "icv_p8_owns_cFFT_1_scale_32fc", "icv_p8_ownResize3Lanczos2_8u", "cvSetTrackbarMax", "icv_w7_ownpi_WarpAffineNearest_8u_C1R", "ippicviRectStdDev_32f_C1R", "icv_w7_ippiCopyReplicateBorder_32s_C3R_L", "icv_s8_owniConvert_32f8s_ccode", "icv_h9_ownpi_WarpAffineSimpleLinear_8u_C3R", "icv_s8_ownpi_WarpAffineLinear_8u_C1R", "_ZN2cv3hal6cmp32sEPKijS2_jPhjiiPv", "icv_w7_ownscDftFwd_Fact4_64fc", "icv_s8_ownscDFTfwd_3_32fc", "icv_h9_ownsFFTGetBufSize_C_32fc", "icv_s8_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_s8_ownpi_dInterVectorClip_NN_32_AC4", "cvReadRawData", "icv_p8_ippiCopy_16u_C1R", "icv_s8_ownSS3vertical_16s", "_Unwind_Resume_or_Rethrow", "icv_n0_own_ipps_dInvSqrt_G9LAynn", "Java_org_opencv_features2d_Features2d_drawMatches2_11", "icv_g9_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "icv_s8_ownscrDftInv_Fact5_64f", "icv_p8_ippiConvert_8u16s_C1R", "icv_w7_ownpis_Max_16s_AC4", "icv_h9_ownscDftInv_Fact3_32fc", "icv_w7_owns_cFFTfwd_8_scale_32fc", "icv_h9_ownCalcBorderR3Lanczos2_16u", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_10", "icv_w7_ownAConvert32s_16s", "icv_w7_ownpi_WarpAffine_C_Mem_64f_C3", "icv_h9_owniScaleC_32s8u_C1R_acc", "_Z21vector_Point3d_to_MatRSt6vectorIN2cv7Point3_IdEESaIS2_EERNS0_3MatE", "icv_p8_ippiCannyGetSize", "_ZN3tbb8internal8governor12tls_value_ofEPNS0_17generic_schedulerE", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "_ZN2cv9videostab26estimateGlobalMotionRansacERKNS_11_InputArrayES3_iRKNS0_12RansacParamsEPfPi", "icv_p8_ownAConvert_Round32s_8u", "_ZN2cv21BaseCascadeClassifierD0Ev", "icv_h9_ownMean_StdDev_32f_C3CMR_2_HSW", "cvGetAffineTransform", "icv_w7_ownpi_WarpAffine_L_8u_P4", "icv_p8_ownRow3Lanczos3_8u", "cvGetRawData", "icv_g9_ownpi_WarpAffine_L_Const_8u_C1", "icv_g9_owniResizeCubic_32f_C1R", "_ZN3tbb8internal8governor6is_setEPNS0_17generic_schedulerE", "icv_h9_ownpi_WarpAffineCubic_16u_C3R", "icv_p8_ownpi_OrC_8u_C3R", "icv_p8_ippiResizeNearest_16u_C1R_L", "icv_s8_owns_sDctInv_Fft_32f", "icv_p8_ownpi_WarpSimpleNearest_32f_C1R", "_ZN2cv3hal21cvtThreePlaneYUVtoBGREPKhjPhjiiibi", "icv_g9_ownscDFTinv_7_scale_32fc", "icv_w7_ippsConvert_64f32f", "icv_p8_ownscDftFwd_Fact_32fc", "icv_w7_ippiResizeLinear_64f_C1R_L", "icv_h9_ownpi_WarpSimpleNearest_16s_C3R", "icv_s8_ownscDftInv_Prime16_32fc", "icv_s8_ippiMax_16s_C1R", "icv_s8_ownippiFilterxBrd32f_16s_C4R", "icv_s8_ippiScaleC_32s_C1IR", "ippicvsDFTInv_PackToR_64f", "ippicviFilterBoxBorder_16s_C3R", "icv_h9_ownSS3_54_16u", "icv_h9_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_h9_ownsMin_32f_AVX", "icv_g9_owniCopyMirrorBorder_8u_C3IR_L", "_ZNSt13bad_exceptionD0Ev", "icv_p8_ownsAdd_32f_I", "icv_w7_ippiFilterBoxBorder_8u_C1R", "icv_w7_owniConvert_32f8u_AC4_W7", "icv_g9_ippiSum_16s_C4R", "icv_s8_ownpi_WarpAffine_L_Repl_16s_C3", "cvCreateSparseMat", "_ZN2cv8UMatDataC2EPKNS_12MatAllocatorE", "icv_g9_ownpi_Rotate90_B_16_C1R", "icv_w7_ippiCopyMirrorBorder_16s_C1R", "icv_p8_ownpi_FindPerimeter", "icv_p8_ownsAdd_16s_NegSfs", "icv_s8_owniSet16sC1Mas", "ippicviNormDiff_L1_32f_C3CMR", "icv_p8_ownsFloorOne", "icv_p8_ownippiFilterMax_16u_Col_AC4", "icv_s8_owns_crRadix4FwdNorm_64f", "icv_h9_ownpi_Rotate90_B_32_C4R", "__register_frame_info_table_bases", "icv_h9_ownpi_WarpAffine_C_Repl_8u_C4", "Java_org_opencv_dnn_DictValue_getIntValue_10", "ippicvsSqrt_32f_A21", "icv_g9_ippiWarpAffineCubic_16s_C1R", "icv_h9_ippiFilterRowBorderPipeline_32f_C1R", "icv_g9_ippiThreshold_LTVal_16s_C1IR", "icv_p8_owns_cRealRecombine_32f", "icv_p8_ownpi_WarpAffine_C_Mem_8u_C3", "icv_h9_ippsLn_64f_A50", "icv_g9_ipMirror135_16uC1R", "icv_w7_owns_cFFTinv_8_scale_32fc", "icv_g9_ownpi_WarpAffineSimpleCubic_8u_C4R", "icv_s8_ownpi_WarpAffine_CR_32f_C3", "icv_g9_ownRow1Filter10_16s", "icv_p8_ownscDftInv_Prime16_32fc", "icv_g9_ippiNormRel_L2_16u_C1R", "icv_s8_ownSS1_65_32f", "icv_n0_own_ipps_sSinCos_G9HAynn", "ippicviConvert_32f32s_C1RSfs", "icv_s8_ippiCopyConstBorder_8u_C1R_L", "icv_w7_ippiCopyReplicateBorder_32s_C1IR_L", "icv_p8_ippsSortRadixAscend_8u_I", "icv_w7_ownpi_OrC_8u_C3R", "icv_s8_ippiWarpAffineLinear_16u_C4R", "icv_p8_ownippsSqrt_32fc", "_ZN2cv6detail19AKAZEFeaturesFinderC2Eiiifiii", "icv_g9_ippiNormRel_L2_32f_C1MR", "icv_p8_ownSS4_53_16u", "icv_g9_ippiMinEigenVal_8u32f_C1R", "icv_h9_ownippiFilterMedianSqr_16s_AC4R", "icv_w7_ownCalcBorderR3Antialiasing_16u", "icv_h9_owniResizeCubicInit", "Java_org_opencv_objdetect_HOGDescriptor_computeGradient_10", "icv_w7_ippiScaleC_32s8u_C1R", "Java_org_opencv_objdetect_HOGDescriptor_detect_10", "icv_w7_ownsrDFTfwd_9_scale_32f", "icv_p8_ippiCopyMirrorBorder_32s_C4IR", "icv_s8_ownippiFilterMedianCross_8u_C4R_5x5", "ippicviSum_8u_C1R", "icv_s8_owniResizeAntialiasing_32f_C1R_L", "Java_org_opencv_features2d_Params_delete", "icv_p8_cv_ownippiFilterMin_32f_Row", "icv_h9_ownLinearKernelAA", "_ZN2cv3dnn19experimental_dnn_v112PaddingLayer6createERKNS1_11LayerParamsE", "icv_h9_owniCopyMirrorBorder_32s_C3R", "icv_s8_owns_rFFTfwd_8_32f", "Java_org_opencv_photo_TonemapReinhard_setLightAdaptation_10", "icv_h9_ippiCopySubpixIntersect_8u32f_C1R", "icv_h9_ownippsCnvrtNear_32f16s_AVX", "icv_s8_ippiScaleC_8u64f_C1R", "icv_h9_owniFilter32f_16s_C4R_g9e9_8", "_ZNK2cv16MatConstIterator3posEv", "icv_p8_ownippiThreshold_V_16s_C1", "icv_s8_owniCorrectAutoNormMean_8u32s_C1R", "icv_g9_ippsMinEvery_64f", "icv_w7_ownpi_WarpAffineBack", "icv_h9_ippiFilterLowpassBorder_32f_C1R", "Java_org_opencv_video_KalmanFilter_get_1errorCovPre_10", "icv_h9_ownFilterBorderConvert32s_8u", "icv_p8_ippiMirror_16s_C3IR", "icv_p8_owniResizeLinear_16s_C3R", "ippicviMean_StdDev_16u_C1MR", "iwiRoi_SetTile", "icv_h9_owniResizeLanczos_32f_C1R", "icv_s8_ownscDFTinv_13_32fc", "Java_org_opencv_core_Mat_n_1total", "icv_h9_ippiNorm_Inf_32f_C1MR", "icv_g9_ownSS3_53_8u", "icv_p8_owns_rFFT_1_scale_64f", "icv_n0_own_ipps_sSqrt_S9HAynn", "_ZN2cv6detail20BundleAdjusterReproj9calcErrorERNS_3MatE", "icv_g9_ownRow1Filter14_32f", "icv_h9_owniGetRectTopBF_8u_C3R", "icv_s8_ownpi_WarpAffineSimpleNearest_16u_C1R", "_ZN2cv14createStitcherEb", "icv_s8_ownscDFTinv_5_64fc", "icv_p8_ownpi_WarpAffine_C_Const_16s_C1", "icv_p8_owniFilterBilateralR2_InMem_8u_C1R_L", "icv_w7_ippiNormRel_Inf_32f_C1R", "cvMin", "icv_p8_ippiMean_StdDev_16u_C1R", "icv_s8_ownsrDFTfwd_10_scale_64f", "ippicviNorm_L1_32f_C1R", "icv_h9_ownpi_WarpAffineCubic_32f_C1R", "icv_w7_ownNorm_Inf_8s_C3CMR_W7", "icv_h9_owniSet_8u_C4MR", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7_sym", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "_ZN2cv3hal14addWeighted32sEPKijS2_jPijiiPv", "icv_g9_ippiCopy_16s_C3C1R", "ippicviResizeSuper_16s_C4R_L", "icv_p8_ownSS4_94_16u", "_ZN2cv18SimpleBlobDetector6ParamsC2Ev", "icv_h9_ownippiFilterMedian_8u_C4R", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_5x5_W7cn", "icv_h9_ownpi_WarpAffine_C_Const_32f_C1", "icv_h9_ownSS3_21_8u", "icv_s8_ownSS1_32_8u", "Java_org_opencv_ml_TrainData_getNames_10", "cvSet3D", "ippicviMirror_16s_C1IR", "icv_h9_ippiCopyReplicateBorder_32s_C1R", "icv_s8_ownpi_dInterVector_L_32f_C3", "icv_p8_ownpi_Histogram_BS_32f_C3R", "icv_s8_ippiScaleC_16u32s_C1R", "Java_org_opencv_ml_TrainData_getTrainSamples_11", "icv_s8_ownRow1Cubic8u", "icv_p8_ownscDFTfwd_14_32fc", "icv_p8_ippiMorphOpen_32f_C3R_L", "_ZNK2cv9SparseMat9convertToERNS_3MatEidd", "icv_g9_ippiWarpGetBufferSize", "icv_s8_owniFilter_32f_C1R_v8u8_5NA", "_ZN3tbb8internal18dynamic_unlink_allEv", "icv_p8_ippsMulC_32f_I", "icv_g9_ownpi_CmpEQ_32f_C1R", "Java_org_opencv_features2d_DescriptorMatcher_add_10", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_V8", "icv_g9_ippiScaleC_8s16s_C1R", "icv_w7_owniResizeAntialiasing_16s_C3R_L", "icv_h9_ippsMulC_64f_I", "icv_g9_owns_initTabTwd_L1_32f", "icv_s8_ippiResizeLanczos_32f_C1R_L", "icv_g9_ownCalcBorderR3Lanczos2_16u", "_ZNSt9bad_allocD2Ev", "_ZN3tbb4task13note_affinityEt", "icv_s8_owniResizeNearest_16u_C1R", "_ZN2cv6detail12AffineWarper20getRTfromHomogeneousERKNS_11_InputArrayERNS_3MatES6_", "Java_org_opencv_ml_DTrees_delete", "icv_p8_owniSet_32f_C3_W7", "icv_p8_ownsMul_32fc", "icv_h9_ownMean_StdDev_32f_C1MR_HSW", "icv_s8_ippiSwapChannels_8u_C4C3R", "icv_g9_owniAutoSSFull_C1R", "icv_h9_ippiSub_8u_C4RSfs", "icv_w7_ippiCopyConstBorder_32s_C1R_L", "icv_p8_ippiCopy_16u_C3AC4R", "icv_w7_ippiCopyReplicateBorder_8u_C1R", "_ZNK2cv3ocl6Kernel13workGroupSizeEv", "icv_g9_ippiTranspose_32s_C1IR", "cvSetReal3D", "icv_h9_owniFilterMedianSqr3x3_32f_C1R", "iwiWarpAffine_GetDefaultParams", "icv_g9_ippiCompare_16u_C1R", "icv_p8_ippiFilterMedianBorder_16s_C3R", "icv_g9_owncvGetCacheSize", "icv_w7_ownscDFTinv_3_scale_64fc", "Java_org_opencv_features2d_KAZE_getExtended_10", "iwiWarpAffine_Free", "icv_w7_ippiSet_16u_C1MR", "icv_p8_ownpi_WarpAffine_C_Transp_32f_C3", "icv_h9_owniCCDiv_32f_C1IR", "icv_g9_ownscDFTinv_9_scale_32fc", "icv_w7_ippiMorphGetBufferSize_L", "WebPPictureFree", "icv_g9_owniSwapChannels_8u_C4C3R", "icv_w7_ownpi_NormInf_32f_C1R", "ippicviTranspose_16s_C4IR", "ippicviResizeLinear_32f_C3R_L", "icv_w7_owniResizeNearest_32f_C4R", "icv_p8_ownpi_WarpSimpleLinear_64f_C3R", "icv_p8_ownpi_WarpAffineSimpleLinear_16s_C3R", "icv_p8_ownpi_dInterVectorClip_C_16u_C4", "icv_p8_ownippiFilterMedian_16u_C1R_3x3", "icv_h9_owniGetRectLeftBF_8u_C3R", "icv_g9_ippiCopy_32s_C3MR", "_ZN2cv10wrapperEMDERKNS_11_InputArrayES2_iS2_NS_3PtrIfEERKNS_12_OutputArrayE", "icv_p8_owniCopy32s_P3C3_W7", "icv_s8_owniConvert_32s8s_AC4_W7", "icv_p8_ownscDftFwd_Fact5_64fc", "icv_h9_ippiSet_32s_C3R", "Java_org_opencv_imgproc_Imgproc_matchTemplate_10", "icv_p8_ownsrDftFwdRecombine_32f", "icv_h9_ownNorm_L2_32f_C1MR_HSW", "ippicviDilateGetSpecSize_L", "_ZN2cv3hal13addWeighted8sEPKajS2_jPajiiPv", "icv_s8_owniGetRectLeft_32f", "icv_w7_ownCalcBorderR3Lanczos2_32f", "icv_g9_ippiScaleC_8u64f_C1R", "_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_", "icv_w7_ippiTrueDistanceTransform_8u32f_C1R", "icv_s8_owniSwap_8u_C4C3R", "icv_h9_ownSS1vertical_16s", "icv_s8_ownSS3_73_8u", "icv_g9_ippsFFTFwd_RToPerm_64f", "icv_h9_ippiSet_32s_C3MR", "icv_g9_ippiCopy_8u_C4P4R", "icv_p8_ownpi_Max_16s_C4R", "icv_p8_ownscDft_Dir_64fc", "icv_s8_owniResizeAntialiasing_16u_C1R_L", "icv_p8_ownCopySubpix_32f_C1R_V8_1", "icv_w7_ownsExpOne", "_ZNK2cv7MatExpr4sizeEv", "icv_g9_ippiResizeCubic_16u_C1R_L", "icv_s8_ippiMoments64f_8u_C1R", "icv_s8_ippsDCTInvInit_32f", "icv_h9_ippsMul_64fc", "icv_g9_owniResizeLanczos_32f_C3R", "icv_s8_ownpi_WarpAffineNearest_8u_C3R", "icv_g9_ownSS1_73_16s", "_ZNK2cv3dnn19experimental_dnn_v13Net13getLayerNamesEv", "icv_w7_ownLaplace3x3Row_16s_AC4", "icv_s8_ippiScaleC_16s8s_C1R", "_ZNK2cv11VideoWriter3getEi", "Java_org_opencv_core_Core_sqrt_10", "icv_h9_ownRow4Cubic8u", "Java_org_opencv_features2d_DescriptorMatcher_match_13", "ippicvsMagnitude_32f", "icv_s8_ownscrDftInv_Fact4_32f", "icv_s8_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "_ZNK2cv3ogl9Texture2D4bindEv", "icv_p8_ippiDCTFwdInit_32f", "icv_s8_ownpi_WarpAffine_NN_Const_32f_C4", "_ZN2cv6detail15SphericalWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "icv_h9_ownMean_8u_C1MR_HSW", "icv_p8_ownNormRel_L1_8s_C3CMR_V8", "icv_g9_ownscDFTinv_6_32fc", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "icv_w7_owniCopyConstBorder_C1R_W7", "Java_org_opencv_core_Core_cartToPolar_10", "icv_w7_ownpi_Rotate180_16_C3R", "icv_s8_owniResizeLinear_32f_C1R", "icv_p8_ippiMax_16s_C1R", "icv_p8_ippsFloorOne", "cvWarpPerspective", "icv_g9_owniScaleC_16s64f_C1R_acc", "icv_g9_ownSS3_31_32f", "icv_g9_ippiSet_8u_C3R", "icv_g9_ippiCopy_8u_C3C1R", "Java_org_opencv_core_Core_vconcat_10", "_ZN2cv6detail17VoronoiSeamFinder10findInPairEjjNS_5Rect_IiEE", "Java_org_opencv_dnn_Layer_get_1type_10", "Java_org_opencv_dnn_Layer_finalize_11", "_ZN2cv16findTransformECCERKNS_11_InputArrayES2_RKNS_17_InputOutputArrayEiNS_12TermCriteriaES2_", "icv_p8_ownpi_WarpAffine_NN_Const_64f_C3", "_ZNK2cv3dnn19experimental_dnn_v15Layer20applyHalideSchedulerERNS_3PtrINS1_11BackendNodeEEERKSt6vectorIPNS_3MatESaIS9_EERKS7_IS8_SaIS8_EEi", "_ZN2cv16FileNodeIteratormIEi", "icv_s8_ownpi_WarpAffineLinear_16s_C3R", "icv_s8_ownSS4_43_16s", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_V8", "icv_s8_ownsrDFTfwd_13_scale_32f", "_ZN3tbb18task_group_context5resetEv", "icv_w7_ippiScaleC_16u8u_C1R", "icv_h9_owniScaleC_8s32f_C1R_acc", "Java_org_opencv_features2d_Params_set_1maxThreshold_10", "icv_s8_piFilterBoxBorder_32f_C1R_2_v8u8_NA", "icv_w7_ownResize1Lanczos3_32f", "icv_h9_ownsrDFTinv_14_64f", "ippicviHistogramGetBufferSize", "icv_g9_ownpi_WarpAffine_NN_Const_8u_C4", "_ZN2cv6detail12CameraParamsaSERKS1_", "icv_g9_ownpi_WarpSimpleLinear_8u_C3R", "icv_w7_ownsGetSizeTabDftFwdRec_64f", "icv_g9_ippiFilterMedianBorder_16u_C1R", "icv_s8_ownSS1_21_16u", "icv_h9_owniCrossCorrNorm_FullSame_32f_C1R", "icv_w7_ownpi_WarpAffine_NN_32_AC4", "icv_h9_ownippsCnvrtNear_32f8u_AVX", "Java_org_opencv_ml_LogisticRegression_load_10", "icv_w7_ownpi_dInterVector_NN_32_C3", "icv_w7_ippiDFTInv_PackToR_32f_C1R", "_ZN2cv15calibrateCameraERKNS_11_InputArrayES2_NS_5Size_IiEERKNS_17_InputOutputArrayES7_RKNS_12_OutputArrayESA_iNS_12TermCriteriaE", "_ZN2cv4UMatD1Ev", "icv_s8_innerHLSToRGB_8u_C3R", "icv_g9_ippiGetNormalizedCentralMoment_64f", "_ZN2cv15findCirclesGridERKNS_11_InputArrayENS_5Size_IiEERKNS_12_OutputArrayEiRKNS_3PtrINS_9Feature2DEEENS_27CirclesGridFinderParametersE", "icv_s8_owniCopy8u_C1C4_W7", "icv_h9_ownCalcBorderR4Lanczos3_8u", "icv_g9_owniSwapChannels_32u_C4C3R", "Java_org_opencv_features2d_FastFeatureDetector_delete", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_V8", "Java_org_opencv_imgcodecs_Imgcodecs_imwrite_11", "icv_p8_ownWarpSimple3Nearest16u", "_ZN2cv16MatConstIterator4seekEib", "icv_s8_ippiCopyMirrorBorder_16u_C4R", "icv_p8_ippiNormRel_L2_8u_C1MR", "icv_s8_ownpi_WarpAffine_NN_Repl_16u_C1", "icv_h9_ippiGetAffineQuad", "icv_p8_ownpi_WarpAffineCubic_16s_C1R", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8", "icv_g9_ippiResizeNearest_16s_C1R_L", "icv_h9_ownpi_SimpleRotate_8u_C3R", "Java_org_opencv_core_Mat_n_1reshape__JII", "icv_h9_ownFilterBoxBorderInMem_16u32f_C3R", "icv_g9_owniFilter_32f_C3R_g9e9_7", "_ZNK3tbb8internal34allocate_additional_child_of_proxy8allocateEj", "icv_w7_ownpi_NormInfRel_16s_C1R", "ippicviDCTInvGetSize_32f", "_ZN2cv9AlgorithmD1Ev", "icv_h9_ownpi_NormL1Rel_16u_C1R", "icv_p8_ippsConj_32fc", "ippicviFilterScharrHorizMaskBorder_8u16s_C1R", "icv_g9_ippiErodeGetSpecSize_L", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3", "icv_s8_ippsZero_16s", "Java_org_opencv_imgproc_LineSegmentDetector_detect_10", "icv_s8_ownippiThreshold_32f_C1", "icv_h9_ownpi_WarpAffineSimpleCubic_16s_C4R", "icv_s8_ownSS1_53_32f", "icv_s8_ippiWarpAffineNearest_16u_C4R", "icv_p8_ownippiThreshold_LV_16s_C4", "icv_g9_ownpi_WarpAffine_L_Mem_16s_C1", "icv_h9_owniScaleC_8s32s_C1R_acc", "icv_s8_ownscDftInv_Fact3_32fc", "icv_s8_ippsFFTFwd_CToC_64fc", "icv_g9_owns_sDctInv_Fft_32f", "icv_p8_ownNormRel_L2_32f_C3CMR_W7", "icv_p8_ownRow3Antialiasing_16s", "icv_w7_ippiSwapChannels_16u_C3C4R", "icv_w7_ippiSet_16u_C4MR", "icv_g9_ownsrDFTfwd_7_32f", "icv_s8_ownscDFTinv_13_64fc", "icv_p8_ippiAlphaPremul_8u_AC4R", "icv_g9_ownippiFilterMedianHoriz_8u_C4R", "icv_g9_owniResizeGetSize", "icv_p8_ippiCopy_8u_C1R_L", "icv_w7_ownpi_MinIndx_16s_C1R", "icv_h9_ippiCopyConstBorder_32f_C4R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_W7", "_ZNK2cv6detail20BundleAdjusterAffine25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_p8_ownsSub_8u", "icv_s8_ownpi_NormL2Rel_16u_C1R", "icv_g9_ownSS1_41_16s", "icv_p8_ownippiFilterMedianCross_16u_C4R_3x3", "Java_org_opencv_imgproc_Imgproc_sepFilter2D_12", "icv_s8_ownCanny_32f8u_C1R_2_32s_W7", "_ZN2cv19DualTVL1OpticalFlow6createEdddiidiiddib", "icv_p8_ownsrDftInv_Conv_32f", "Java_org_opencv_core_Core_multiply_14", "Java_org_opencv_ml_SVMSGD_setOptimalParameters_11", "Java_org_opencv_imgproc_Imgproc_GaussianBlur_10", "icv_w7_owniResizeCubicInit", "ippicviResizeNearest_32f_C4R_L", "icv_g9_ownSS4_43_8u", "icv_w7_ippsMinEvery_8u", "icv_g9_ownpi_WarpAffine_C_Transp_8u_C4", "icv_h9_ownsAdd_8u_Bound", "icv_w7_ownAddWeighted_8u32f_C1IMR_W7", "icv_h9_ownpi_NormL1_16s_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_W7", "icv_h9_owniScaleC_8s64f_C1R_fst", "icv_w7_ownscDftInv_Prime6_64fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_V8", "icv_p8_owniCopyConstBorder_C3R_W7", "icv_p8_ownSS1_83_16u", "Java_org_opencv_ml_DTrees_setRegressionAccuracy_10", "icv_h9_ippiCanny_16s8u_C1R", "icv_g9_owns_cFFTinv_4_scale_32fc", "icv_h9_ownResize1Lanczos2_8u", "icv_s8_ownCopySubpix_8u16u_C1R_Sfs_V8", "_ZN2cv9Feature2D4readERKNS_8FileNodeE", "icv_w7_ownpi_GetAffineTransform", "icv_w7_ownpi_WarpAffineLinear_32f_C3R", "icv_s8_ownscDFTfwd_6_scale_32fc", "icv_p8_owniFilter_32f_C3R_v8u8_2NA", "icv_h9_ownpi_WarpAffine_NN_Mem_8u_C3", "icv_p8_ownSS3_73_32f", "icv_w7_ippiCopy_8u_C3C1R", "cvSetZero", "icv_p8_ippiErode_32f_C3R_L", "icv_g9_ippiTranspose_32s_C4IR", "icv_p8_cv_ownippiFilterMin_8u_Msk", "icv_g9_owniScaleC_32f8u_C1R_acc", "_ZN2cv16TLSDataContainerD1Ev", "_ZN2cv11FileStorage7releaseEv", "icv_h9_ippsFFTInit_R_32f", "_ZN2cv14findHomographyERKNS_11_InputArrayES2_idRKNS_12_OutputArrayEid", "icv_p8_owniCopy_16s_AC4C3R", "icv_s8_ippiCopy_32f_C1R_L", "icv_p8_ownsSet_32s", "icv_s8_ownpi_NormL2_16u_C1R", "icv_h9_owniConvert_32f8u", "icv_s8_ippiThreshold_GTVal_16s_C1R", "icv_g9_ippiCopy_16u_C1C4R", "icv_w7_ownscDFTinv_12_scale_32fc", "icv_h9_owniCopy_8u_AC4C3R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_V8", "icv_h9_ippiSwapChannels_32s_C3R", "icv_w7_ownpi_WarpAffine_NN_Repl_8u_C3", "Java_org_opencv_dnn_Net_getParam_11", "icv_p8_ippiMulPack_32f_C1R", "icv_h9_ippiWarpAffineLinear_16s_C4R", "icv_h9_cv_ownippiFilterMin_32f_Row", "icv_p8_owniCopyMirrorBorder_16u_C3IR", "icv_w7_ownRow1Lanczos3_16s", "icv_h9_ownRow1Cubic32f", "icv_s8_ownpi_WarpAffine_C_Transp_64f_C3", "icv_p8_owns_cFftInv_Fact4_64fc", "icv_p8_ownSS1_94_16s", "icv_h9_ownsrDFTinv_14_32f", "icv_h9_ippiNorm_Inf_32f_C3CMR", "icv_p8_ownpi_WarpAffineNearest_64f_C3R", "icv_s8_owniSet_8u_C1M_W7", "icv_w7_ownippiThreshold_8u_AC4", "icv_g9_ownpi_WarpSimpleCubic_16u_C4R", "icv_w7_ownpi_WarpAffine_L_Mem_8u_C1", "icv_p8_ippiCopyMirrorBorder_8u_C1R", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_13", "icv_g9_ippiCopy_8u_C4R", "icv_g9_owniFilter32f_16u_C3R_g9e9_4", "icv_w7_ippsPolarToCart_32f", "icv_p8_ippiMean_8u_C1MR", "icv_w7_ippiAdd_32f_C1IR", "_ZN2cv9videostab17TwoPassStabilizer16postProcessFrameERKNS_3MatE", "icv_p8_ownpi_WarpAffineLinear_64f_C4R", "Java_org_opencv_videoio_VideoCapture_grab_10", "icv_p8_ippiCopyMirrorBorder_8u_C1IR", "icv_p8_ownSS3_31_16u", "ippicviWarpAffineNearest_8u_C4R", "_ZN2cv4cuda6GpuMat6uploadERKNS_11_InputArrayERNS0_6StreamE", "icv_s8_owniAutoCorrFull_C1R", "ippicvsExp_32f_A21", "_ZN3tbb18captured_exceptionD1Ev", "_ZN2cv11HoughLinesPERKNS_11_InputArrayERKNS_12_OutputArrayEddidd", "icv_g9_ippiMirror_16u_C3IR", "Java_org_opencv_features2d_AgastFeatureDetector_getNonmaxSuppression_10", "icv_p8_ippiNormDiff_Inf_32f_C1R", "icv_p8_innerRGBToGray_32f_C3C1R", "icv_s8_ownscrDftFwd_Prime_32f", "icv_p8_ownIntegral_8u32s_C1R_V8", "icv_h9_ownpi_WarpAffineNearest_64f_C1R", "icv_w7_ownCalcBorderR1Cubic8u", "icv_w7_ippsFFTInit_R_32f", "ippicvsDFTInit_R_64f", "icv_w7_ownCalcBorderR1Linear16u", "_ZN2cv9videostab14StabilizerBaseC1Ev", "icv_p8_ownSS4_43_32f", "_ZNK2cv3ocl6Device16image3DMaxHeightEv", "icv_g9_ownSS3_53_32f", "icv_w7_ippiNormDiff_Inf_8u_C1MR", "icv_p8_ownsSub_8u_PosSfs", "icv_s8_ownpi_WarpAffineSimpleLinear_64f_C3R", "icv_p8_ippiMirror_16u_C1IR", "icv_g9_ownpis_Sum_16u_C4", "icv_s8_owniFilter_32f_C3R_v8u8_1NA", "icv_p8_ippiWarpGetBufferSize", "_ZNK2cv3ocl6Device4typeEv", "_ZN3tbb8internal19cpu_has_speculationEv", "icv_p8_ippiScaleC_16s_C1IR", "icv_p8_ownscDFTinv_13_scale_32fc", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C1R_X_V8", "icv_h9_ippiSqrIntegral_8u32f64f_C1R", "ippicviMaxIndx_16s_C1R", "_ZN2cv11FileStorageC1Ev", "icv_g9_ownpi_WarpAffineCubic_16s_C3R", "icv_h9_ippsConj_32fc", "icv_g9_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "icv_s8_ownsCeilOne", "icv_w7_owns_rFFTinv_8_64f", "icv_s8_ownpi_WarpAffineCubic_32f_C4R", "ippicviMirror_8u_C1IR", "icv_h9_ippiNorm_Inf_16s_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "icv_p8_owniSwapChannels_8u_C3C4R", "icv_g9_owniResizeSuper_16u_C3R", "icv_w7_ownResize1Lanczos2_8u", "icv_p8_cv_ownippiFilterMax_8u_Row", "icv_p8_ippiFilterMin_32f_Row_A6", "_ZN3tbb10interface78internal15task_arena_base18internal_terminateEv", "ippicvsCopy_64f", "icv_w7_ownippiFilterxBrd_32f_C3R", "icv_g9_ownWarpSimple3Nearest64f", "icv_g9_owniTranspose32s_C1IR_AVX", "icv_s8_ownpi_WarpAffine_L_Repl_32f_C3", "cvGetRectSubPix", "_ZN2cv7ellipseERKNS_17_InputOutputArrayERKNS_11RotatedRectERKNS_7Scalar_IdEEii", "_ZN2cv3Mat4diagERKS0_", "icv_s8_ownscDFTfwd_9_64fc", "ippicviFilterSobelVertSecondBorder_32f_C1R", "icv_p8_ippiFilterBoxBorder_8u_C3R", "icv_w7_ownscDftInv_Prime2_32fc", "_ZNKSt10bad_typeid4whatEv", "icv_w7_ippiResizeLanczos_32f_C4R_L", "icv_g9_owniFilter32f_16s_C1R_g9e9_0", "icv_h9_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_G9E9cn", "_ZNK2cv4cuda6GpuMat8downloadERKNS_12_OutputArrayE", "icv_h9_ownscDFTinv_3_32fc", "icv_w7_ownpi_WarpAffineNearest_8u_C3R", "icv_p8_ippiCopy_32f_C1R_L", "icv_w7_ownResize3Lanczos2_8u", "icv_g9_ownSS3_52_16u", "icv_w7_ippsSortRadixDescend_32f_I", "icv_h9_ownpi_SimpleRotate_64f_C1R", "ippicviWarpAffineNearest_32f_C1R", "icv_p8_ippiResizeLanczos_16u_C1R_L", "_ZN2cv17DescriptorMatcher15isPossibleMatchERKNS_11_InputArrayEii", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getMaxLevel_10", "icv_h9_ippiWarpGetBufferSize", "icv_p8_ownpi_WarpAffine_CR_16u_C4", "icv_s8_ownSS4_73_16u", "Java_org_opencv_ml_KNearest_getIsClassifier_10", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_W7", "icv_s8_owns_cFFTfwd_8_scale_32fc", "icv_w7_cv_ownippiFilterMin_8u_Col", "_ZNK2cv10BOWTrainer14getDescriptorsEv", "icv_g9_cv_ownippiFilterMin_32f_Msk", "icv_w7_owniNormLevel_8u32f_C1R", "icv_w7_owns_cFftInv_Fact4_64fc", "icv_w7_owniResizeLinear_64f_C3R", "icv_w7_owns_rFFTinv_8_scale_32f", "icv_p8_ippiCopyReplicateBorder_32s_C1IR", "own_ipps_dSin_SC", "icv_s8_ippiMinMax_32f_C1R", "_ZNK2cv5MatOp4typeERKNS_7MatExprE", "icv_h9_owniScaleC_32s16u_C1R_acc", "icv_h9_ownSS3vertical_8u", "icv_s8_owniGetRectRight_16s", "cvRANSACUpdateNumIters", "icv_h9_owns_cFftFwd_Large_64fc", "_ZN10__cxxabiv116__enum_type_infoD0Ev", "icv_s8_ownpi_WarpAffine_C_Mem_8u_C3", "icv_h9_ownCalcBorderR3Cubic32f", "icv_g9_ippiMorphBlackhat_32f_C3R_L", "Java_org_opencv_imgproc_Imgproc_rectangle_10", "_ZNK2cv4UMat4diagEi", "icv_p8_ownRow1Filter12_16s", "icv_w7_ownpi_WarpAffineSimpleLinear_32f_C1R", "icv_p8_owniScaleC_32s8s_C1R_fst", "icv_s8_ownsrDFTfwd_10_scale_32f", "Java_org_opencv_calib3d_Calib3d_composeRT_11", "icv_s8_ippiResizeCubic_8u_C3R_L", "icv_s8_ownSharpenRow_16s_C4", "icv_p8_ippiHistogram_16u_C1R", "Java_org_opencv_imgproc_Imgproc_pyrUp_11", "icv_p8_owniResizeAntialiasing_32f_C1R_L", "_ZN2cv5instr8NodeDataD2Ev", "icv_p8_owniClipRectZeroTail_16u32f_C1R", "icv_h9_ownpi_WarpAffineLinear_16u_C3R", "icv_s8_ownsMul_16s_1Sfs", "ippicviResizeLanczos_16s_C1R_L", "icv_p8_ippiNormDiff_Inf_8u_C3CMR", "icv_h9_ippiResizeAntialiasing_16s_C1R_L", "icv_h9_ownMean_StdDev_32f_C3CMR_HSW", "icv_h9_ippiConvert_32s16u_C1RSfs", "WebPPictureImportRGB", "_ZN10__cxxabiv121__vmi_class_type_infoD1Ev", "icv_w7_ownippiThreshold_GLV_8u_C1", "icv_w7_ownippsMagn_32sc32s_Sfs_ASM", "icv_h9_owns_cRealRecombine_32f", "icv_s8_owniFilter_32f_C1R_v8u8_1", "icv_g9_ippiNorm_L1_8u_C3CMR", "iwVector_PopBack", "icv_s8_ippiFilterBorder_16u_C4R", "icv_w7_ownpi_Rotate90_B_16_C3R", "icv_s8_ownsrDFTfwd_6_scale_64f", "icv_w7_ownscDFTfwd_9_64fc", "icv_w7_ownpi_WarpAffine_L_Repl_16u_C4", "icv_p8_ownpi_MaxIndx_16s_C1R", "_ZNK2cv3ocl6Device17hostUnifiedMemoryEv", "icv_s8_ippiCopyReplicateBorder_16s_C1IR", "icv_s8_ownscDFTfwd_10_32fc", "icv_g9_ownSS4_16u", "icv_p8_owniCopy32s_C3P3_W7", "icv_w7_ownscDFTinv_7_scale_32fc", "icv_p8_ippiSet_32s_C3MR", "icv_h9_ippiMorphOpen_8u_C3R_L", "icv_p8_ownNormDiff_L2_16u_C3CMR_V8", "icv_g9_owns_rFFTinv_32_scale_32f", "icv_p8_ownsReducePi", "icv_g9_ippiMean_StdDev_16u_C1MR", "_ZNK2cv3ogl6Buffer5bufIdEv", "icv_s8_ownippsMagn_64f", "_ZN2cv14setTrackbarPosERKNS_6StringES2_i", "icv_p8_innerSwapChannels_8u_C4R", "_ZN10__cxxabiv123__fundamental_type_infoD0Ev", "icv_p8_ippiCopyMirrorBorder_8u_C3R_L", "ippicviThreshold_GT_32f_C1R", "icv_p8_ownippiFilterxBrd_8u_C3R", "icv_w7_ownNorm_L2_8s_C3CMR_A6", "_ZN2cv3ocl7ContextD2Ev", "icv_h9_ippiNormDiff_L2_16s_C1R", "icv_s8_owniThreshold_32f_C1R", "icv_h9_ippiResizeGetBufferSize_L", "icv_w7_ownpi_NormL1_8u_C1R", "icv_s8_ownRow1Linear8u", "icv_s8_ownAFilterRow_16s_C3R", "icv_w7_ownippsSqrt_16sc_ASM_SF_S", "icv_p8_ownPrewColV_8u", "icv_p8_ownscDftInv_Fact5_64fc", "icv_w7_ownRow4Lanczos3_16u", "icv_w7_owniSwap_8u_AC4", "icv_p8_owns_crFft_BlkMerge_32f", "icv_p8_ownippiFilterMedianHoriz_16s_C1R_5x1", "_ZN2cv9softfloatC1Ey", "cvStopLoop", "icv_g9_ippiCopyConstBorder_32f_C1R_L", "icv_p8_ownpi_WarpSimpleNearest_64f_C3R", "ippicviDotProd_16u64f_C1R", "icv_g9_ownRow4Lanczos3_32f", "icv_h9_ownscDFTfwd_3_scale_64fc", "__register_frame", "icv_w7_ownCubicKernel1", "icv_n0_own_ipps_dSin_V8LAynn", "icv_g9_ippiConvert_8u16s_C1R", "ippicviMean_StdDev_32f_C1MR", "icv_h9_owniFilter32f_16u_C1R_g9e9_5", "icv_p8_ippiAddWeighted_16u32f_C1IR", "icv_g9_ippsFabsOne", "icv_h9_ippiMorphClose_32f_C1R_L", "icv_w7_ippiTranspose_32f_C1R", "_Z27vector_vector_DMatch_to_MatRSt6vectorIS_IN2cv6DMatchESaIS1_EESaIS3_EERNS0_3MatE", "_ZN2cv9SparseMat7newNodeEPKij", "icv_g9_ippiConvert_16s16u_C1Rs", "icv_g9_ownRow1Filter12_16u", "icv_p8_ippiWarpAffineLinear_16s_C3R", "icv_p8_ippiNormDiff_L1_16u_C1MR", "icv_g9_ownpi_WarpSimpleCubic_16u_C3R", "Java_org_opencv_ml_StatModel_delete", "icv_s8_ippiFilterBorder_32f_C3R", "ippicviCopy_16u_C1MR", "icv_g9_ippiMul_16u_C1RSfs", "icv_h9_owniScaleC_8s32s_C1R_fst", "icv_s8_ownpi_Rotate90_B_8_C1R", "cvMoments", "icv_s8_owniFilter_32f_C1R_v8u8_8NA", "icv_g9_ownpi_WarpAffine_NN_Mem_32f_C3", "icv_p8_ownscDftInv_Prime11_64fc", "icv_w7_ippiCopyConstBorder_32f_C4R", "icv_p8_ownpi_ClipPolygon", "icv_s8_ownpi_NormL1Diff_16u_C1R", "icv_p8_ownpi_MaxIndx_32f_C1R", "icv_s8_ippiCopyReplicateBorder_16u_C3R", "icv_g9_ownSS4_54_16u", "icv_p8_ownpis_Sum_16u_C4", "icv_s8_ownpi_WarpAffine_NN_Mem_32f_C1", "iwiImage_Alloc", "icv_w7_ownAConvert_Round32s_16s", "Java_org_opencv_features2d_Params_get_1minCircularity_10", "icv_w7_ippiNormDiff_L1_32f_C1R", "_ZNK2cv4UMat6copyToERKNS_12_OutputArrayE", "icv_p8_owniCopy8u_C4P4_A6", "_ZN2cv3dnn19experimental_dnn_v13Net20setPreferableBackendEi", "icv_s8_ippiSum_8u_C3R", "icv_s8_ownsrDFTinv_13_scale_32f", "icv_s8_ownsrDFTinv_14_32f", "Java_org_opencv_core_Mat_locateROI_10", "Java_org_opencv_ml_Boost_getBoostType_10", "icv_s8_owniConvert_32f8s_W7", "icv_s8_ippiCannyGetSize", "_ZN2cv3ocl13ProgramSourceC2EPKc", "icv_s8_ownSharpenRow_32f_C4", "icv_h9_ownippsCnvrtFin_32f16u_AVX", "_ZN2cv4swapERNS_4UMatES1_", "icv_g9_ippiTranspose_32f_C3IR", "icv_h9_ownsrDFTinv_10_scale_32f", "ippicvsMaxEvery_32f", "icv_s8_ownCanny_32f8u_C1R_2_16u_W7", "icv_p8_owniConvert_32f8s_W7", "_ZN2cv3ogl22convertFromGLTexture2DERKNS0_9Texture2DERKNS_12_OutputArrayE", "icv_p8_owns_dBitRev1_Blk", "icv_h9_ippiCopyReplicateBorder_16u_C1R", "icv_h9_ownpi_WarpAffine_NN_Mem_8u_C4", "icv_h9_ownippiFilterMin_16s_Col_h9l9", "icv_h9_ownPutPxl256_8u", "_ZN2cv17DescriptorMatcher20DescriptorCollection5clearEv", "_ZN3tbb8internal17generic_scheduler12reload_tasksERPNS_4taskERPS3_i", "icv_s8_ownpi_Sum_16s_C3R", "icv_h9_ippiConvert_32f8s_C1RSfs", "ippicviMean_8u_C4R", "Java_org_opencv_imgproc_Imgproc_undistortPoints_10", "icv_w7_ownsGetSizeDftPrimeFact_64f_64f", "icv_n0_own_ipps_sSqrt_W7HAynn", "icv_g9_ippiMorphClose_8u_C1R_L", "icv_p8_ownpi_And_32s_AC4R", "Java_org_opencv_ml_RTrees_getCalculateVarImportance_10", "_ZN2cv3hal6sub16sEPKsjS2_jPsjiiPv", "icv_s8_owniSqrDistanceNormGetSize", "icv_s8_ippiMirror_32s_C4IR", "icv_w7_ownCanny_16s8u_C1R_1_32s_W7", "icv_s8_ippiAlphaPremul_8u_AC4R", "icv_w7_ownippiFilterMedian_8u_C1R_3x3", "icv_p8_ownippiThreshold_GLV_16s_C1", "icv_g9_ippiThreshold_GTVal_8u_C1IR", "icv_w7_ippiNormDiff_Inf_8u_C1R", "_ZN2cv6imshowERKNS_6StringERKNS_11_InputArrayE", "icv_h9_ippsFFTInv_PackToR_32f", "llwiFilterBilateral", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_W7", "icv_h9_ippiMean_StdDev_16u_C3CR", "icv_p8_ownpi_WarpAffineCubic_64f_C3R", "icv_s8_owniFilter_32f_C3R_v8u8_6NA", "icv_p8_ownpi_WarpAffineSimpleLinear_16u_C1R", "icv_g9_owniResizeAntialiasing_16s_C3R_L", "icv_h9_piGradientSobel8u_5x5_row_c1", "icv_w7_ippiConvert_16u16s_C1RSfs", "icv_h9_ownippiFilterMedianHoriz_8u_BC4R", "Java_org_opencv_photo_CalibrateDebevec_setRandom_10", "icv_h9_ownpi_WarpAffine_L_Const_8u_C1", "_ZN2cv8integralERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_ii", "icv_h9_ownippiFilterMedianHoriz_16u_C1R_3x1", "icv_p8_ippiResizeNearest_8u_C4R_L", "_ZNK2cv5MatOp8multiplyERKNS_7MatExprES3_RS1_d", "icv_g9_ownSS1_43_16u", "icv_p8_ownFilter_32f_C1R", "icv_h9_ippsCosOne", "_ZN2cv9FormatterD1Ev", "icv_p8_ippiMinMax_16s_C1R", "Java_org_opencv_calib3d_Calib3d_recoverPose_11", "icv_s8_owniResizeCubic_16s_C3R", "icv_p8_ownscDFTinv_7_scale_64fc", "icv_s8_ippiScaleC_32f64f_C1R", "icv_p8_ownsMulC_32f", "icv_p8_ownAConvert_Round32s_16s", "icv_h9_owniSqrDistanceNorm_Valid_32f_C1R", "ippicviWarpAffineNearest_32f_C3R", "icv_h9_ownCalcBorderR1Antialiasing_16u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7_sym", "icv_g9_ownRow1Linear16u", "icv_w7_owniGetRectLeft_32f", "icv_h9_ippiCountInRange_32f_C1R", "icv_h9_ownscDFTfwd_7_32fc", "_ZN2cv16TLSDataContainer7releaseEv", "icv_h9_ippsDFTInit_R_32f", "icv_w7_owns_sDctFwd_Fft_32f", "_ZN2cv17distanceTransformERKNS_11_InputArrayERKNS_12_OutputArrayES5_iii", "ownGetMaskFeatures", "icv_p8_ownCanny_16s8u_C1R_3_32s_W7", "icv_p8_ownSS1_8u", "icv_s8_ownscrDftInv_Prime5_32f", "Java_org_opencv_ml_TrainData_getTrainSampleWeights_10", "icv_p8_ownFilterBoxBorder_8u_C1R", "icv_w7_ippiWarpAffineNearest_8u_C1R", "icv_w7_ownpi_WarpAffineNearest_32f_C1R", "icv_g9_ownRow3Cubic8u", "icv_g9_ippsMinEvery_16u", "_ZN2cv6detail18GraphCutSeamFinderD1Ev", "icv_w7_ownSum_8u_C3CMR_W7", "_ZN2cv2ml6KDTreeC2ERKNS_11_InputArrayEb", "_ZN2cv8Subdiv2DC1Ev", "icv_w7_ippiMean_StdDev_8u_C1MR", "icv_g9_owniScaleC_16s16u_C1R_fst", "icv_s8_ownpi_Sum_16s_C4R", "icv_g9_ownpi_WarpAffineCubic_64f_C3R", "icv_s8_ownsrDFTinv_13_32f", "icv_p8_ownippiFilterMedianCross_16s_C3R_5x5", "icv_p8_ippiConvert_8s8u_C1Rs", "icv_s8_owns_rFFTfwd_32_32f", "icv_g9_ownscDftFwd_Prime8_32fc", "icv_h9_ownFilterRowBorderPipeline_32f_C1R", "icv_w7_ownpi_WarpAffine_C_Const_64f_C1", "_ZN3tbb8internal5arenaC2ERNS0_6marketEjj", "cvCreateHist", "icv_h9_ippiScaleC_16s64f_C1R", "icv_p8_ownpi_dInterVectorClip_C_8u_C1", "_ZNK2cv6detail20BundleAdjusterReproj25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_p8_ippiWarpAffineCubic_16s_C3R", "icv_s8_ownResize3Antialiasing_8u", "icv_s8_ownNormDiff_L2_8u_C1MR_W7", "icv_g9_ownpi_Rotate180_32_C1R", "icv_w7_ownps_Add_16u_Sfs", "ippicvMalloc", "icv_s8_ippiResizeGetSrcRoi_L", "icv_p8_ownsrDFTinv_11_scale_64f", "Java_org_opencv_dnn_Dnn_blobFromImage_10", "ippicviMax_32f_C1R", "icv_w7_ownippiFilterMin_8u_Col", "Java_org_opencv_features2d_Params_get_1minThreshold_10", "icv_p8_owniConvert_8s16u_ccode", "__powidf2", "_ZN2cv3hal7normL1_EPKhS2_i", "icv_g9_owniScaleC_64f32s_C1R_fst", "icv_p8_ownCalcBorderR3Antialiasing_32f", "icv_g9_ownsMul_16s_NegSfs", "ippicviCopy_8u_C1C4R", "_ZN2cv3ocl12PlatformInfoC1ERKS1_", "_ZN2cv4cuda6GpuMat5setToENS_7Scalar_IdEERNS0_6StreamE", "_ZN2cv22createCalibrateDebevecEifb", "icv_s8_ownpi_WarpAffine_CR_16u_C3", "_Znwj", "_ZN2cv10BOWTrainer3addERKNS_3MatE", "icv_w7_ownemmssfen", "icv_w7_ownsrDFTfwd_10_scale_64f", "icv_p8_ippiSub_32f_C3R", "icv_g9_ownRow1Filter8_16u", "_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERNS0_13ImageFeaturesERKSt6vectorINS_5Rect_IiEESaIS9_EE", "icv_p8_owniScaleC_32f64f_C1R_fst", "icv_s8_ownscDftFwd_Prime11_32fc", "icv_h9_ippiMean_32f_C1MR", "icv_g9_ownsrDFTfwd_6_32f", "icv_h9_piFilterRow_32f_C4R_g9e9", "_ZN2cv15NAryMatIteratorC1Ev", "icv_s8_ippiMirror_8u_C1R", "icv_g9_ippiSet_16s_C3MR", "ippicviWarpAffineLinear_32f_C4R", "icv_w7_ownCalcBorderR1Lanczos2_16s", "icv_h9_ownRow1Cubic8u", "icv_s8_ownNorm_Inf_16u_C1MR_W7", "icv_g9_ippsMin_32f", "icv_p8_ownsConj_32fc_T7", "icv_s8_ownSS4_83_32f", "icv_g9_ownsrDFTinv_5_64f", "cvWrite", "icv_s8_ownMinMaxIndx_32f_C1MR_W7_1", "icv_w7_ownpi_WarpSimpleNearest_64f_C3R", "icv_p8_ownFilterRowBorderPipeline_16s_C1R_X_V8", "Java_org_opencv_core_Core_reduce_11", "icv_w7_ownpi_WarpSimpleNearest_32f_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarMin_10", "icv_g9_owns_initTabTwdBase_64f", "Java_org_opencv_photo_Photo_illuminationChange_10", "icv_s8_ippiResizeAntialiasing_16u_C4R_L", "cvInvert", "_ZN2cv5flann11IndexParams8setFloatERKNS_6StringEf", "icv_w7_owns_cFftInv_Large_32fc", "icv_g9_owniResizeLanczos_8u_C3R", "ippicviNormDiff_Inf_8u_C1MR", "icv_p8_ownCalcBorderR4Cubic32f", "cvAddWeighted", "icv_s8_ippiMorphGetSpecSize_L", "icv_h9_ownColAntialiasing_16u", "icv_s8_owniCopyBF_8u_C3R", "icv_s8_ownippiFilterMedian_8u_C4R_3x3", "icv_g9_ippiCopy_8u_C1R_L", "Java_org_opencv_core_Mat_n_1convertTo__JJID", "_ZNK2cv9BFMatcher5cloneEb", "_ZN2cv6detail23SphericalPortraitWarper15detectResultRoiENS_5Size_IiEERNS_6Point_IiEES6_", "icv_g9_ownpi_WarpAffine_NN_Const_32f_C1", "icv_w7_ownpi_OrC_32s_C4R", "icv_g9_ippiResizeLinearInit_L", "icv_h9_ownsrDFTinv_7_scale_64f", "icv_s8_CopyWithBorder8u", "icv_w7_ippiSub_32f_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarThreshold_10", "icv_s8_ownpi_WarpAffineCubic_32f_C3R", "Java_org_opencv_features2d_ORB_setScaleFactor_10", "icv_h9_ippiNorm_L2_32f_C1R", "icv_p8_ippi_cDftSplit_32fc", "icv_p8_ownippiFilterMedianVert_8u_1x5", "icv_h9_ippsMul_64fc_I", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7", "_ZN2cv8superres12arrGetGpuMatERKNS_11_InputArrayERNS_4cuda6GpuMatE", "ippicviMarkSpeckles_8u_C1IR", "icv_w7_owniConvert_8u16s_W7", "ippicviFilterSobelHorizSecondBorderGetBufferSize", "icv_w7_ownippiThreshold_GLV_16s_AC4", "icv_s8_ippiFilterMedianBorder_8u_C1R", "icv_w7_ownpi_ClipUpper", "icv_p8_ippiCopyMirrorBorder_16u_C3R", "_ZN2cv3ogl6BufferC2ENS_5Size_IiEEijb", "icv_s8_ownippiFilterMedianHoriz_8u_BC4R_3x1", "icv_w7_ippiCopy_32f_C4P4R", "cvPow", "icv_h9_ownsInitTabDftFwdRec_32f", "icv_g9_ippiAddProduct_8u32f_C1IR", "icv_s8_ownscDFTfwd_12_64fc", "icv_g9_owns_cFFT_1_scale_64fc", "icv_s8_ownippiFilterMedianHoriz_16u_C4R", "icv_p8_ownNormDiff_L2_8s_C3CMR_V8", "icv_p8_ownsrDFTfwd_15_64f", "icv_h9_owniResizeNearest_8u_C3R", "icv_g9_ownippsMagn_32f", "icv_g9_ippsDFTInv_PackToR_64f", "Java_org_opencv_ml_NormalBayesClassifier_predictProb_10", "icv_s8_ownippiFilterMedianHoriz_8u_BC4R_5x1", "icv_s8_ownRow1Antialiasing_16s", "icv_h9_ippiFFTGetSize_R_32f", "icv_s8_cv_ownMorphologyBorderInit_L", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_W7", "icv_h9_ownpi_WarpAffine_C_Mem_32f_C1", "icv_h9_ownRow1Cubic16u", "_Z28vector_vector_Point2f_to_MatRSt6vectorIS_IN2cv6Point_IfEESaIS2_EESaIS4_EERNS0_3MatE", "Java_org_opencv_video_FarnebackOpticalFlow_getFlags_10", "icv_h9_owniFilterBilateralR1_InMem_32f_C1R", "icv_p8_owns_cFFTfwd_16_32fc", "icv_s8_ownDistanceTransform_5x5_8u32f_C1R_21B", "icv_p8_ownsrDFTinv_14_scale_32f", "icv_p8_ownpi_WarpAffine_L_8u_P3", "icv_g9_ippsConvert_32f8s_Sfs", "icv_p8_ownpi_Histogram_8u_C4R", "icv_s8_owniFilter_32f_C4R_v8u8_3", "icv_p8_ippiMinMaxIndx_32f_C1MR", "cvGraphAddEdgeByPtr", "Java_org_opencv_imgproc_Imgproc_watershed_10", "Java_org_opencv_core_Mat_n_1create__JIII", "icv_s8_ownpi_WarpAffineNearest_32f_C3R", "icv_h9_ippsCopy_32f", "cvShowImage", "icv_g9_getMaskFeature", "WebPSafeMalloc", "Java_org_opencv_imgproc_Imgproc_ellipse_15", "icv_g9_ownsrDFTfwd_5_32f", "icv_g9_owniFilter32f_8u_C4R_g9e9_6", "Java_org_opencv_core_Core_calcCovarMatrix_10", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C3R_X_V8", "icv_h9_ownpi_WarpAffine_L_Repl_64f_C3", "icv_h9_ippsMinEvery_32f", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_V8", "icv_p8_ownpi_Max_8u_C3R", "icv_h9_ippiDotProd_8u64f_C1R", "icv_p8_ippiAddProduct_8u32f_C1IR", "_ZN2cv3Mat10push_back_EPKv", "icv_p8_ownscrDftInv_Prime8_64f", "icv_s8_ippiMorphGradient_16u_C1R_L", "_ZN2cv5utils5trace7details6Region4Impl7releaseEv", "_ZN2cv4cuda18registerPageLockedERNS_3MatE", "icv_p8_ownpi_WarpAffine_C_Const_64f_C3", "_ZN2cv5MatOpC2Ev", "icv_s8_owniSet_8u_C4_W7", "_ZNK2cv12MatAllocator4copyEPNS_8UMatDataES2_iPKjS4_S4_S4_S4_b", "icv_h9_ippiFilterSobelVertSecondBorderGetBufferSize", "_ZN2cv16FileNodeIteratorpLEi", "icv_g9_ippiFilterMedianBorderGetBufferSize", "Java_org_opencv_ml_ANN_1MLP_load_10", "icv_w7_owns_rFFTfwd_16_scale_64f", "icv_n0_own_ipps_dCos_W7HAynn", "cvBoxPoints", "icv_s8_ownColAntialiasing_16s", "ippicviTranspose_16u_C4R", "icv_w7_ownpi_dInterVector_NN_16_P4", "icv_g9_ownscDFTfwd_7_32fc", "icv_w7_ownscDFTinv_12_64fc", "icv_g9_owniGetRectBottom_16s", "icv_h9_ippiMorphBlackhat_16u_C1R_L", "icv_g9_ownSS3_32_32f", "icv_h9_owniSet_16s_C1R", "icv_h9_ownResize3Cubic8u", "icv_w7_ownscDFTfwd_3_scale_32fc", "icv_g9_owniFilterBilateralR1_InMem_8u_C1R", "icv_p8_ownippiFilterxBrd32f_16s_C3R", "ippicviMax_8u_C1R", "icv_h9_ownsGetSizeDftConv_32f", "icv_w7_owns_cBitRev1_Blk", "icv_p8_ippiWarpAffineNearest_64f_C4R", "icv_p8_ownscrDftFwd_Prime5_64f", "_ZN3tbb18captured_exception8allocateEPKcS2_", "icv_s8_owniConvert_8s16s_ccode", "icv_s8_ownAddSquare_16u32f_C1IMR_W7", "icv_h9_ippiWarpAffineCubic_32f_C1R", "_ZN2cv2ml9TrainDataD2Ev", "icv_h9_ownSS1_72_16u", "_Z21List_to_vector_StringP7_JNIEnvP8_jobject", "icv_s8_ippiSub_16s_C1RSfs", "icv_w7_ownCopySubpix_16u32f_C1R_new_W7", "icv_s8_ownBFilterRow32f_16u_C3R", "icv_s8_ippiAdd_8u32f_C1IR", "icv_s8_ownResize3Linear16s", "icv_g9_ippsSortRadixAscend_32s_I", "_ZNK2cv3ogl9Texture2D5texIdEv", "icv_p8_owniFilterBilateralCom_InMem_32f_C1R_px", "icv_s8_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_n0_own_ipps_dInvSqrt_S9HAynn", "icv_g9_owniFilter32f_16s_C3R_g9e9_2", "_ZNSt15__exception_ptr13exception_ptr18_M_safe_bool_dummyEv", "icv_p8_ippiCopy_32f_P4C4R", "icv_p8_ownscDftFwd_PrimeFact_32fc", "Java_org_opencv_ml_Boost_delete", "_ZN2cv3ogl9Texture2DC1ERKNS_11_InputArrayEb", "icv_w7_ownpi_dInterPoint_CR_PixelB_8u", "icv_h9_ownResize3Lanczos3_16s", "icv_s8_ownpi_WarpAffine_L_Repl_16u_C3", "_ZN2cv22decomposeHomographyMatERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_S5_", "_ZN2cv11mixChannelsERKNS_11_InputArrayERKNS_17_InputOutputArrayEPKij", "icv_w7_ownippsMagn_32fc32f", "icv_p8_owns_initTabTwdCcsRec_32f", "_ZN2cv10StereoSGBM6createEiiiiiiiiiii", "icv_g9_ownpi_WarpAffine_C_Repl_16s_C3", "icv_w7_ippiConvert_16s32s_C1R", "icv_g9_ownpi_WarpAffineSimpleCubic_16s_C1R", "icv_s8_ippiThreshold_LT_32f_C1R", "icv_s8_ownscDFTinv_12_64fc", "icv_p8_ippiTranspose_32s_C3R", "_ZN6CvTypeD2Ev", "icv_h9_owniConvert_8u8s_avx2", "icv_h9_owniResizeSuper_8u_C4R", "_ZNK2cv3Mat1tEv", "_ZNK2cv3ocl6Device3ptrEv", "icv_h9_ippiSqrt_32f_C1R", "icv_p8_ownLaplRow5x5_32f_C4", "Java_org_opencv_dnn_Layer_finalize_10", "icv_g9_ippiConvert_32f32s_C1RSfs", "icv_n0_own_ipps_dLn_S9LAynn", "icv_p8_ownAConvert32s_8u", "icv_p8_ownippsSqrt_16sc_ASM_SF", "_ZN2cvdvERKNS_3MatES2_", "icv_g9_ippsMagnitude_16s_Sfs", "Java_org_opencv_imgproc_Imgproc_cornerEigenValsAndVecs_10", "icv_h9_owniCopy_16s_P3C3R", "_ZN2cv4cuda11TargetArchs17hasEqualOrLessPtxEii", "icv_w7_ownResize3Nearest16u", "icv_h9_owniFilter_32f_C3R_g9e9_8", "icv_s8_ownResize4Lanczos2_32f", "icv_h9_ippiSet_16u_C3R", "icv_p8_owniGetRectRightBF_8u_C3R", "icv_g9_piFilterBoxBorder_32f_C1IR_1_v8u8_NA", "icv_s8_ownsrDFTinv_6_64f", "icv_w7_ownsrDftInv_Conv_64f", "icv_w7_ippiSum_16s_C3R", "Java_org_opencv_features2d_GFTTDetector_create_11", "icv_w7_ownpi_dInterVectorClip_L_32f_C1", "Java_org_opencv_imgproc_Imgproc_getDerivKernels_10", "Java_org_opencv_features2d_GFTTDetector_getQualityLevel_10", "Java_org_opencv_video_Video_buildOpticalFlowPyramid_11", "icv_ownGetCacheSize", "Java_org_opencv_imgproc_Imgproc_blur_12", "icv_h9_ippiResizeCubic_16u_C3R_L", "icv_g9_owniTranspose8u_C1R_core2", "icv_s8_piFilterBoxBorder_32f_C1R_v8u8_A", "icv_s8_ownscrDftFwd_Prime2_32f", "_ZN2cv4UMat15getStdAllocatorEv", "icv_n0_own_ipps_sSqrt_W7EPnnn", "icv_w7_ownpi_dInterVectorClip_L_8u_C4", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_X", "icv_g9_ownsGetSizeTabDftBase_32f", "icv_s8_ownippiFilterMax_32f_Col_AC4", "icv_h9_ippiCopyMirrorBorder_32s_C3R_L", "icv_p8_ownpi_WarpAffine_NN_32_AC4", "icv_s8_ippiMulPack_32f_C1IR", "icv_p8_ownscDFTfwd_7_32fc", "icv_p8_owniResizeSuper_32f_C4R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_X_V8", "_ZNK2cv3ocl6Device16maxWorkItemSizesEPj", "icv_p8_ippsCeilOne", "_ZN2cv8Subdiv2D8QuadEdgeC1Ei", "icv_h9_ownResize4Nearest16s", "icv_p8_ownSS4_31_16u", "icv_g9_ippiConvert_8u16u_C1R", "_ZN2cv12VideoCaptureC2Ev", "_ZN2cv3hal5sub8sEPKajS2_jPajiiPv", "icv_s8_ownscDFTfwd_14_32fc", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_W7", "icv_g9_ippiFilterBorder_8u_C1R", "icv_h9_ownippsCnvrtNear_32f16sA_AVX", "icv_p8_ippiMorphSetMode_L", "icv_w7_owniSwap_8u_C3_A6", "icv_h9_ownsrDFTfwd_12_scale_32f", "Java_org_opencv_core_Mat_nPutI", "icv_w7_ippiFilterBilateralBorderGetBufferSize_L", "icv_g9_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_G9E9cn", "icv_w7_owniFilterBilateralR1_InMem_8u_C3R_px", "icv_h9_ownsrDFTinv_15_64f", "icv_g9_ownscDftFwd_Prime13_32fc", "icv_w7_ippiThreshold_GT_8u_C1R", "icv_p8_ippiMaxIndx_16s_C1R", "icv_s8_ownscDftInv_Prime3_64fc", "icv_s8_ownCalcBorderR3Lanczos2_8u", "icv_g9_ownSS4_43_32f", "icv_w7_ownAbsDiff_32f_C1R_W7", "_ZN2cv11mixChannelsERKNS_11_InputArrayERKNS_17_InputOutputArrayERKSt6vectorIiSaIiEE", "icv_p8_ownpis_Min_8u_C3", "icv_w7_ownpi_WarpAffine_L_16u_P3", "_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi", "icv_w7_owniResizeLinear_64f_C4R", "_ZNK2cv12_OutputArray6assignERKNS_3MatE", "_ZN2cv25getOptimalNewCameraMatrixERKNS_11_InputArrayES2_NS_5Size_IiEEdS4_PNS_5Rect_IiEEb", "icv_g9_ippiMorphGradient_8u_C3R_L", "icv_p8_ippiCopyReplicateBorder_32f_C3R_L", "Java_org_opencv_dnn_Net_getFLOPS_10", "icv_p8_ownsMul_64fc_I", "cvFindHomography", "icv_p8_ippiWarpAffineLinear_16u_C1R", "_ZN2cv12approxPolyDPERKNS_11_InputArrayERKNS_12_OutputArrayEdb", "_ZN2cv9Feature2D6detectERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EES3_", "icv_p8_ownscDFTinv_14_scale_64fc", "icv_h9_ippiDFTFwd_CToC_32fc_C1R", "icv_p8_owniScaleC_16u64f_C1R_acc", "icv_h9_ownResize4Lanczos2_8u", "icv_w7_ippiSqrt_32f_C1R", "_ZN2cv17CommandLineParserD1Ev", "icv_s8_ownColCubic32f", "icv_g9_piFilter_8u_C1R", "Java_org_opencv_features2d_DescriptorExtractor_compute_11", "icv_n0_own_ipps_sInvSqrt_S9EPnnn", "Java_org_opencv_ml_DTrees_create_10", "icv_w7_cv_ownMorphologyBorderInit_L", "icv_p8_ippiCopy_8u_C4C1R", "icv_w7_ownscrDftFwd_Fact3_32f", "_ZN3tbb8internal26task_scheduler_observer_v37observeEb", "ippicviFilterBorder_8u_C3R", "_ZN2cv3ogl13unmapGLBufferERNS_4UMatE", "Java_org_opencv_photo_Tonemap_delete", "icv_s8_owns_crRadix4Inv_64f", "icv_s8_owniCopy_16s_P4C4R", "icv_h9_ownippsMagn_32f", "icv_w7_ownSumSq_16u_C1MR_W7", "_ZNK2cv3dnn19experimental_dnn_v13Net5emptyEv", "icv_h9_ippiWarpAffineLinear_8u_C1R", "icv_g9_ippiCopyMirrorBorder_32f_C3R_L", "icv_s8_ippsSortRadixIndexDescend_16s", "_ZN2cv3ocl6finishEv", "_ZN3tbb8internal12NFS_AllocateEjjPv", "icv_h9_ownsrDftFwd_Conv_64f", "icv_g9_ownCalcBorderR4Linear16s", "icv_w7_ownRow3Cubic32f", "icv_s8_ownippsCnvrt_16u32f", "icv_w7_ownpis_Max_8u_C4", "Java_org_opencv_core_Mat_n_1Mat__III", "cvSave", "icv_s8_ippiScaleC_32f_C1R", "icv_h9_ownSS1_72_32f", "icv_s8_ownCalcBorderR4Antialiasing_16s", "icv_g9_ownpi_XorC_8u_C1R", "icv_h9_ownRow1Filter10_8u", "icv_g9_ippiErode_16s_C1R_L", "icv_s8_ownsrDftFwd_Dir_64f", "icv_h9_ownsrDFTfwd_10_scale_64f", "icv_w7_ippiCopyMirrorBorder_32f_C1R", "icv_h9_ippiConvert_32f16s_C1R", "Java_org_opencv_features2d_DescriptorExtractor_descriptorType_10", "icv_p8_ownAFilterRow_8u_C1R", "_ZN2cvmlERKNS_3MatEd", "icv_w7_ownWarpSimple3Nearest16u", "icv_p8_ippiMirror_32s_C1IR", "icv_p8_owniScaleC_8u32f_C1R_fst", "icv_h9_ippiErode_32f_C1R_L", "_ZN2cv6detail12DpSeamFinder14closeToContourEiiRKNS_4Mat_IhEE", "icv_s8_ownpi_CmpEQ_32f_C1R", "icv_p8_owniFilter_32f_C3R_v8u8_1NA", "icv_h9_ownFilterBoxBorderInMem_32f_C3R", "icv_w7_ippiScaleC_32s64f_C1R", "icv_p8_ownippiThreshold_V_16s_AC4", "icv_w7_ownpi_WarpAffine_NN_Mem_16s_C4", "icv_s8_ippiWarpAffineGetSize", "icv_g9_ownsSinCosHuge", "_ZN2cv3absERKNS_7MatExprE", "icv_g9_owniFilterMedianBorderInMem_16s_C1R", "icv_s8_ownpi_WarpAffine_NN_Const_64f_C3", "icv_s8_ippiCopy_8u_C1C3R", "cvClearHist", "icv_h9_ownsSub_8u_1Sfs", "ippicviSum_32f_C4R", "icv_g9_ownpi_WarpAffineSimpleNearest_32f_C4R", "icv_p8_ownpi_WarpAffine_C_Transp_8u_C4", "icv_p8_ownsrDFTfwd_14_64f", "icv_w7_owniCopy32s_C4P4_W7", "icv_s8_ownscDFTinv_11_32fc", "icv_w7_ownippiFilterMedianHoriz_16s_C4R_5x1", "icv_h9_ownscDFTfwd_3_32fc", "icv_p8_owniFlipCopy_8u_C3", "icv_h9_ippiNormDiff_L1_16u_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_V8", "icv_w7_ippiSet_32s_C3R", "icv_s8_ownRow1Filter12_16u", "icv_h9_ownsAdd_8u_1Sfs", "icv_g9_BUFSIZE_FUNC", "icv_s8_ownsAdd_16s", "Java_org_opencv_dnn_Net_empty_10", "icv_g9_ownpi_WarpAffineLinear_16s_C4R", "Java_org_opencv_calib3d_Calib3d_convertPointsFromHomogeneous_10", "icv_h9_ownFilter32f_16u_C1R_g9e9", "icv_w7_ownippiFilterMedianCross_16s_C3R_5x5", "icv_s8_owniResizeLinear_16u_C3R", "icv_g9_owniFilter32f_16u_C1R_g9e9_4", "ippicviResizeLanczos_32f_C4R_L", "icv_h9_ownResize1Antialiasing_8u", "icv_p8_ownpi_WarpAffine_NN_8_C1", "icv_s8_owniTransposeWxH_32sC3", "icv_h9_owniFlipCopy_8u_C3", "Java_org_opencv_video_KalmanFilter_correct_10", "ippicviScaleC_32s16u_C1R", "icv_s8_ownsGetSizeTabDftBase_64f", "icv_h9_owniResizeAntialiasing_16u_C4R_L", "icv_w7_ownpi_dInterVectorClip_NN_32_C3", "icv_p8_ownippiFilterMin_16u_Col", "_ZN2cv21intersectConvexConvexERKNS_11_InputArrayES2_RKNS_12_OutputArrayEb", "_ZN2cv16setOpenGlContextERKNS_6StringE", "icv_p8_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_W7cn", "icv_s8_ownpi_WarpAffine_L_32f_AC4", "_ZN7CvMatNDC1ERKN2cv3MatE", "icv_s8_ippsZero_32fc", "icv_h9_ippsDFTInit_C_64fc", "icv_p8_ownSS4_52_32f", "icv_g9_ippiFilterBilateralBorderGetBufferSize_L", "icv_h9_owniScaleC_8u64f_C1R_fst", "icv_w7_ownpi_SimpleRotate_32f_C1R", "icv_p8_owniResizeLanczos_16s_C4R", "icv_w7_ippiMin_8u_C1R", "icv_s8_ippiCopy_16u_C1MR", "icv_h9_owns_rFFTfwd_32_scale_64f", "icv_s8_ownpi_WarpAffine_NN_Mem_32f_C4", "icv_p8_ippiAddC_32f_C1R", "icv_h9_ownsrDFTfwd_15_scale_64f", "icv_p8_ippiConvert_32s32f_C1R", "icv_s8_owniShiftClipRectZeroTail_16u32f_C1R", "icv_g9_owniCopyMirrorBorder_8u_C3IR", "icv_s8_ippiResizeLinear_32f_C3R_L", "icv_w7_ippiCopyReplicateBorder_32s_C3R", "Java_org_opencv_imgproc_Imgproc_preCornerDetect_11", "icv_w7_owns_crRadix4Fwd_64f", "icv_s8_ippiFilterScharrVertMaskBorder_16s_C1R", "_ZN2cv3ocl5QueueC2ERKS1_", "Java_org_opencv_core_Core_pow_10", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithAlgorithm_10", "icv_s8_ownSS4_41_16u", "_ZN2cv3hal8merge16uEPPKtPtii", "icv_s8_ownscDFTfwd_9_scale_64fc", "Java_org_opencv_imgproc_Imgproc_filter2D_11", "icv_h9_ownFilter32f_16u_C3R_g9e9", "icv_g9_owns_cFFTinv_8_scale_64fc", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_5x5", "icv_p8_ippiCopyMirrorBorder_8u_C4IR", "icv_w7_ippsDCTFwd_32f", "Java_org_opencv_calib3d_Calib3d_findFundamentalMat_10", "icv_p8_ippiResizeSuper_8u_C1R_L", "icv_p8_ownpi_WarpAffineSimpleNearest_64f_C4R", "icv_s8_ownscDftInv_Prime2_32fc", "icv_h9_ownippsCnvrtFin_32f8u_AVX", "icv_n0_own_ipps_dSinCos_W7HAynn", "icv_g9_owniCopy_16s_P4C4R", "icv_g9_ippiCopyReplicateBorder_32f_C1R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_X", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_15", "icv_s8_setIndexCR", "icv_n0_own_ipps_sExp_S9EPnnn", "Java_org_opencv_core_Core_divide_17", "icv_w7_ippiMorphClose_16u_C1R_L", "icv_p8_ippiNormDiff_Inf_32f_C1MR", "icv_g9_owniFilterBoxBorder_32f_C1IR", "icv_p8_ownpi_OrC_16u_C3R", "icv_p8_ownscrDftInv_Fact4_32f", "icv_w7_ippiSet_32f_C1R", "_ZN2cv4UMat4onesEiPKii", "icv_h9_ownResize4Antialiasing_32f", "icv_s8_owns_cCcsRecombine_64f", "icv_p8_ownSS1_83_8u", "cvWriteComment", "icv_w7_ownAbsDiff_16u_C1R_W7_B", "icv_p8_ippsFFTInit_C_32fc", "icv_w7_ippiScaleC_16s_C1IR", "_ZN2cv23initUndistortRectifyMapERKNS_11_InputArrayES2_S2_S2_NS_5Size_IiEEiRKNS_12_OutputArrayES7_", "icv_p8_owniTranspose_32s_C1R_W7", "icv_p8_owniScaleC_8u16s_C1R_acc", "icv_p8_ownpi_WarpAffine_C_Repl_32f_C4", "icv_w7_ownippiFilterMedian_8u_BC4R_5x5", "icv_p8_ownpi_WarpAffineCubic_64f_C1R", "Java_org_opencv_core_Core_divide_12", "_ZN2cv3SVD9backSubstERKNS_11_InputArrayES3_S3_S3_RKNS_12_OutputArrayE", "ippicviTranspose_32s_C4R", "icv_w7_ownpi_WarpAffine_L_Const_16s_C3", "icv_w7_ownpi_Rotate90_32_C3R", "icv_h9_owniGetRectRightBF_8u_C1R", "icv_h9_ownpi_Rotate90_8_C3R", "icv_h9_ippiFilterMedianBorder_8u_C3R", "_ZNK2cv17DescriptorMatcher5emptyEv", "_ZN3tbb16spin_rw_mutex_v316internal_upgradeEv", "ippicviCompare_16u_C1R", "icv_w7_ippiFilterLowpassGetBufferSize_32f_C1R", "Java_org_opencv_ml_DTrees_setMaxDepth_10", "_ZN2cv14correctMatchesERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayES5_", "icv_h9_ippiResizeSuper_32f_C3R_L", "icv_s8_ownAddSquare_8s32f_C1IMR_W7", "_ZN2cv11recoverPoseERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayES5_dNS_6Point_IdEERKNS_17_InputOutputArrayE", "ippicviResizeCubic_32f_C1R_L", "icv_h9_owniGetRectTopBF_32f_C1R", "icv_g9_cv_ownippiFilterMax_16s_Msk", "icv_g9_ippiNorm_Inf_32f_C1MR", "icv_s8_ownApplyHaarClassifierAllImg8PixSparceMask_W7", "icv_g9_ownpi_WarpAffineLinear_16s_C1R", "icv_s8_ownsSqrtOne", "icv_g9_owniCopy_8u_C3P3R_cn", "icv_p8_ippiTranspose_32f_C4R", "icv_g9_owniScaleC_8s8u_C1R_acc", "icv_h9_ippiCopyReplicateBorder_32f_C1R_L", "icv_s8_ownSS1_83_8u", "Java_org_opencv_video_DualTVL1OpticalFlow_setGamma_10", "icv_p8_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_W7", "icv_s8_ownpi_WarpAffine_NN_8_C3", "icv_h9_ownippiFilterxBrd32f_16s_C3R", "icv_s8_ownippiThreshold_GLV_8u_C3", "icv_h9_ippiTranspose_8u_C3IR", "icv_g9_ownsInitDftConv_64f", "_ZN2cv5randuERKNS_17_InputOutputArrayERKNS_11_InputArrayES5_", "Java_org_opencv_ml_DTrees_getRegressionAccuracy_10", "_ZNK2cv2ml6KDTree4dimsEv", "_Z21Mat_to_vector_Point3iRN2cv3MatERSt6vectorINS_7Point3_IiEESaIS4_EE", "icv_p8_ownResize4Cubic8u", "icv_p8_ippiErode_16s_C1R_L", "icv_w7_ippiConvert_16s8s_C1RSfs", "icv_p8_ownpi_WarpSimpleCubic_16s_C1R", "_ZNK2cv5flann11IndexParams9getStringERKNS_6StringES4_", "_ZN2cv8Subdiv2D12clearVoronoiEv", "icv_g9_ippiWarpAffineLinear_16s_C1R", "icv_w7_ownSS4_32f", "icv_h9_ownSS4_16s", "icv_s8_ownscDFTinv_6_64fc", "_ZN2cv3ocl6DeviceD2Ev", "icv_s8_ippiNorm_L1_16s_C1R", "icv_w7_ownpi_WarpSimpleCubic_32f_C4R", "icv_w7_ownpi_WarpAffineSimpleNearest_16s_C3R", "icv_g9_ownSS3_65_16u", "icv_h9_owniGetRectBottomBF_8u_C1R", "ippicviDilateInit_L", "icv_s8_ippiWarpAffineLinear_8u_C4R", "icv_g9_ownippiFilterMedian_16s_C1R_1x7", "icv_p8_ippiNorm_L1_16s_C1R", "icv_w7_ownpi_WarpAffine_L_16u_C4", "_ZN2cv11FileStorage5writeERKNS_6StringERKNS_11_InputArrayE", "icv_s8_ippsConvert_32f16u_Sfs", "icv_s8_ippiGradientVectorScharr_8u16s_C1R", "icv_s8_ownsAdd_32f_I", "icv_g9_owniFilterScharrHorizMaskBorder2_16s_C1R", "_ZNK2cv10softdoublecvNS_9softfloatEEv", "_ZN2cv11linearPolarERKNS_11_InputArrayERKNS_12_OutputArrayENS_6Point_IfEEdi", "icv_h9_ippsDFTInv_CToC_32fc", "icv_p8_ownippiFilterMedianHoriz_16u_BC4R_3x1", "icv_w7_owns_cCcsRecombine_64f", "icv_p8_ippiScaleC_32f16u_C1R", "icv_s8_ownpi_Or_8u_AC4R", "icv_p8_ownippiFilterMax_8u_Col", "icv_w7_ippiSwapChannels_8u_C3R", "icv_s8_owniCrossCorrNorm_Valid_32f_C1R", "Java_org_opencv_core_Core_randu_10", "Java_org_opencv_imgproc_Imgproc_grabCut_10", "icv_s8_owniResizeLinear_64f_C4R", "icv_p8_ownsrDFTfwd_14_scale_64f", "icv_p8_ippiCopyReplicateBorder_32f_C3R", "icv_s8_ownpi_WarpAffine_L_16u_C1", "Java_org_opencv_core_Mat_n_1depth", "icv_p8_cv_ownippiFilterMax_16s_Msk", "_ZNK2cv8Subdiv2D7edgeOrgEiPNS_6Point_IfEE", "_Z20vector_double_to_MatRSt6vectorIdSaIdEERN2cv3MatE", "icv_w7_ownpi_SimpleRotate_32f_C4R", "icv_g9_ownpi_SimpleRotate_16s_C3R", "icv_p8_ownpi_Max_32f_C4R", "icv_p8_ippiWarpAffineCubic_16s_C4R", "icv_h9_ippiCopyConstBorder_32f_C3R_L", "cvGetND", "icv_p8_ownippsCnvrt_32f32s_Sfs", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_V8", "_ZN2cv4cuda12getOutputMatERKNS_12_OutputArrayEiiiRNS0_6StreamE", "icv_h9_ownpi_WarpAffineSimpleLinear_64f_C3R", "icv_h9_owniCopy_8u_C4P4_short", "iwiImage_InitExternal", "icv_w7_ownResize1Nearest32f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "_ZNK2cv3ocl6Device16maxReadImageArgsEv", "icv_w7_owns_rFFTfwd_32_scale_64f", "icv_s8_ownscrDftFwd_Fact2_32f", "icv_p8_cv_ownippiFilterMin_16s_Col", "llwiCopyMask", "icv_p8_ownpis_Min_16s_C4", "icv_g9_ownFilterRow32f_8u_C4R_g9e9", "ippicviFilterBoxBorder_32f_C3R", "icv_w7_ownpi_WarpAffine_NN_Const_64f_C1", "_ZNK2cv6detail17BundleAdjusterRay25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_w7_ownpi_WarpAffine_NN_Repl_64f_C3", "icv_p8_ownFilterRowBorderPipeline_8u16s_C3R_3x3_V8", "icv_w7_owniResizeLinear_8u_C1R", "icv_h9_owniScaleC_16s16s_C1R_fst", "icv_p8_owns_sDctInv_Fft_32f", "icv_w7_owns_sDctInv_Dir_32f", "icv_g9_ownsMaxEvery_8u", "_ZdaPv", "Java_org_opencv_core_Core_batchDistance_10", "icv_s8_ownRow4Lanczos3_16s", "_ZNSt15__exception_ptr13exception_ptrC2ERKS0_", "_ZN2cv11RotatedRectC1ERKNS_6Point_IfEES4_S4_", "icv_g9_ownpi_WarpAffineCubic_64f_C4R", "_ZN3tbb8internal6market13adjust_demandERNS0_5arenaEi", "icv_p8_ippiNorm_L1_8u_C1MR", "icv_p8_ownpi_OrC_32s_AC4R", "_Z20vector_Rect2d_to_MatRSt6vectorIN2cv5Rect_IdEESaIS2_EERNS0_3MatE", "Java_org_opencv_features2d_BFMatcher_create_10", "icv_s8_ownpi_WarpAffineRect", "icv_w7_ownsAdd_16s_PosSfs", "icv_p8_ippiMin_16s_C1R", "icv_w7_ippiThreshold_GTVal_16s_C1R", "Java_org_opencv_photo_AlignMTB_delete", "icv_p8_ownsrDftFwd_Conv_32f", "icv_w7_innerRGBToGray_32f_C3C1R", "_ZNK2cv5MatOp15augAssignDivideERKNS_7MatExprERNS_3MatE", "icv_w7_ownResize4Lanczos2_16u", "icv_w7_ownCalcBorderR4Linear16s", "icv_h9_ippiCopy_32f_C3P3R", "icv_s8_ownpi_NormInfRel_32f_C1R", "icv_p8_ippiSum_32f_C3R", "icv_g9_ippiMaxIndx_32f_C1R", "icv_s8_ownps_Sub_16u_Sfs", "icv_s8_ownpi_OrC_8u_C3R", "icv_h9_ippiNormDiff_Inf_16s_C1R", "icv_g9_ippiFilterMinBorderGetBufferSize", "icv_g9_ippiResizeLanczos_8u_C4R_L", "cvCircle", "own_ipps_sSinCos_SC_A11", "_ZN2cv5CannyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEddb", "icv_h9_ownFilter_32f_C4R_g9e9", "icv_s8_ownResize4Nearest16s", "Java_org_opencv_calib3d_Calib3d_recoverPose_15", "icv_p8_ownsrDFTfwd_7_32f", "_ZN2cv4cuda10BufferPoolC1ERNS0_6StreamE", "icv_s8_ownSumSq_32f_C3CR_W7_Al", "_ZN2cv2ml5Boost4loadERKNS_6StringES4_", "icv_p8_ownsConvert_16s32s_W7", "icv_p8_ippiThreshold_GT_32f_C1R", "icv_s8_ippsSortRadixGetBufferSize", "icv_s8_ownscrDftInv_Prime4_64f", "icv_h9_ownpi_WarpAffineNearest_16u_C3R", "icv_p8_ownSS4_73_8u", "Java_org_opencv_features2d_KAZE_getUpright_10", "_ZN2cv3ocl6Kernel3setEiPKvj", "_ZNK2cv12_OutputArray14createSameSizeERKNS_11_InputArrayEi", "_ZN2cv8superres27createOptFlow_DualTVL1_CUDAEv", "cvFitLine", "icv_s8_ippiCopyReplicateBorder_8u_C1IR", "icv_g9_ippiFilterMedianBorder_8u_C3R", "icv_p8_owniFlipCopy_16u_C1", "icv_g9_ippiWarpAffineLinear_32f_C1R", "Java_org_opencv_calib3d_Calib3d_calibrateCamera_12", "icv_g9_ownpi_WarpSimpleNearest_8u_C4R", "icv_p8_ippsCopy_16s", "icv_g9_ownSS4_65_32f", "icv_s8_owns_cFFTfwd_32_64fc", "icv_h9_ownRow1Lanczos3_16u", "icv_p8_ippiResizeNearest_16s_C4R_L", "icv_h9_owns_rFFTfwd_8_32f", "icv_p8_ownpi_Rotate90_16_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_V8", "ippicviResizeLanczosInit_L", "icv_s8_ownpi_Histogram_FS_32f_C4R", "icv_s8_ippiWarpAffineCubic_8u_C1R", "_ZN3tbb8internal13observer_list10remove_refEPNS0_14observer_proxyE", "cvDecodeImage", "icv_s8_owniTranspose_16u_C1IR_W7", "_ZNK2cv3ogl6Buffer5cloneENS1_6TargetEb", "icv_s8_ippsMul_32fc_I", "ippicviSet_32f_C4MR", "icv_p8_piFilter_8u_C1R", "icv_s8_ippiScaleC_16s16u_C1R", "icv_n0_own_ipps_dSinCos_W7EPnnn", "Java_org_opencv_features2d_KAZE_setUpright_10", "_ZN2cv9AlgorithmD0Ev", "icv_p8_ippiResizeCubic_32f_C4R_L", "icv_h9_ippiResizeAntialiasing_16u_C3R_L", "icv_p8_ippiDFTFwd_RToPack_32f_C1R", "ownSetFeatureMask", "ippicviMinIndx_16s_C1R", "icv_s8_ownpi_WarpAffine_L_Mem_32f_C3", "icv_w7_ownpi_WarpAffine_NN_Const_64f_C3", "_ZN2cv3ocl14vecopTypeToStrEi", "icv_s8_ownsMinEvery_32f", "_ZNK2cv4cuda6Stream15queryIfCompleteEv", "_ZN2cv16displayStatusBarERKNS_6StringES2_i", "Java_org_opencv_ml_TrainData_create_10", "icv_w7_ownsrDFTinv_3_64f", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C3R_3x3_V8", "_ZN2cv3logERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_g9_ippiSub_16s_C1RSfs", "Java_org_opencv_features2d_FastFeatureDetector_create_10", "icv_p8_ippiTranspose_32s_C1R", "icv_p8_ippiCopyReplicateBorder_32s_C3R", "icv_s8_ippiNorm_L1_16u_C3CMR", "icv_p8_ownSS3_73_16s", "icv_p8_ownsMul_64f_I", "Java_org_opencv_calib3d_Calib3d_projectPoints_11", "icv_w7_ownPrewColV_16s", "icv_p8_ippiMinMaxIndx_16u_C1MR", "Java_org_opencv_features2d_ORB_setMaxFeatures_10", "Java_org_opencv_photo_TonemapDrago_setBias_10", "icv_w7_ippiMorphGradient_16u_C1R_L", "icv_s8_owniClipRectZeroTail_32f_C1R", "icv_g9_ippiDFTFwd_CToC_32fc_C1R", "icv_w7_ownippiFilterMedianSqr_16u_C4R", "icv_g9_ippiFilterMedianBorder_16s_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7_sym", "icv_g9_ownpi_WarpAffine_NN_Mem_16u_C4", "icv_w7_ownpi_WarpAffine_NN_32_C4", "icv_h9_ownCubicKernelAA", "icv_s8_ippiScaleC_16u64f_C1R", "ippicviConvert_16s8u_C1R", "icv_g9_owniFilter32f_8u_C3R_g9e9_4", "icv_s8_owngetSizeBufferOfBorders", "icv_p8_ippiCopyMirrorBorder_32s_C3IR", "icv_w7_ownSq_32f_C3CMR_W7", "icv_w7_ownsrDFTfwd_11_scale_32f", "_ZN2cvneEdRKNS_3MatE", "icv_w7_ownAConvert_Round32s_16s_AC4R", "icv_w7_ippsFFTInv_CToC_32fc", "icv_w7_ownsrDFTinv_14_scale_32f", "icv_h9_ippiTranspose_32s_C3R", "icv_h9_ownSS3_31_16s", "icv_w7_ippiFilterMedianBorder_32f_C1R", "_ZN2cv6detail20BundleAdjusterReproj24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_h9_ownSS4_83_16s", "icv_g9_ippiCanny_32f8u_C1R", "_ZN2cv3ocl5QueueC1ERKNS0_7ContextERKNS0_6DeviceE", "icv_p8_ippiResizeLanczos_32f_C1R_L", "icv_g9_ownCubicKernelAA", "_ZNK2cv8Subdiv2D9isRightOfENS_6Point_IfEEi", "icv_w7_piGradient8u", "icv_s8_ownsExpOneF_w7", "icv_p8_ippsMinEvery_8u", "icv_w7_owniAutoNormMean_8u32s_C1R", "Java_org_opencv_core_Core_divide_11", "_ZN2cv8Subdiv2D6spliceEii", "icv_w7_ownscrDftFwd_Fact_64f", "icv_h9_ownResize4Lanczos3_8u", "icv_h9_ownscDftFwd_PrimeFact_32fc", "icv_s8_ippiCopy_16s_C3C1R", "icv_g9_ippiCrossCorrNormGetBufferSize", "icv_g9_ownFilterRow32f_16u_C1R_g9e9", "icv_h9_owniThreshold_32f_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_W7", "icv_g9_ippiConvert_32f8s_C1RSfs", "icv_w7_ippiMin_16s_C1R", "_ZN2cv12drawContoursERKNS_17_InputOutputArrayERKNS_11_InputArrayEiRKNS_7Scalar_IdEEiiS5_iNS_6Point_IiEE", "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", "icv_s8_ownpis_Min_32f_C4", "icv_p8_ownCanny_32f8u_C1R_2_32s_W7", "icv_s8_ippiCopy_32f_C3AC4R", "icv_p8_ownSS1_72_8u", "icv_s8_ownscrDftInv_Prime2_64f", "icv_s8_owniCopyConstBorder_C4R_W7", "icv_g9_ippiMulPack_32f_C1IR", "Java_org_opencv_videoio_VideoWriter_open_10", "icv_g9_ippsPolarToCart_64f", "icv_p8_ippiNorm_L2_16u_C1R", "icv_s8_ippiCopyReplicateBorder_32s_C3IR_L", "_ZN2cv3ocl8PlatformD2Ev", "icv_p8_owniScaleC_8u8s_C1R_fst", "icv_g9_cv_ownippiFilterMax_16s_Row", "Java_org_opencv_imgproc_Imgproc_cornerMinEigenVal_11", "icv_g9_ippiTranspose_8u_C3IR", "icv_w7_owniFlip_16u_C1", "icv_w7_ownCanny_32f8u_C1R_3_16u_W7", "icv_h9_owniGetRectLeftBF_32f_C3R", "icv_p8_ippiCopyConstBorder_32s_C4R", "icv_w7_ownpi_WarpAffineSimpleLinear_16u_C4R", "icv_g9_ippiFilterMedianBorder_16u_C3R", "icv_s8_ippiCopyConstBorder_32s_C1R_L", "ippicviTranspose_8u_C3IR", "icv_s8_ippiScaleC_8s32s_C1R", "icv_w7_owniCopyBF_32f_C3R", "icv_s8_ownpi_WarpAffineNearest_16u_C3R", "icv_s8_ownscDFTinv_6_32fc", "icv_w7_ownColLanczos3_16u", "icv_g9_ippiCannyBorder_8u_C1R", "icv_s8_owns_rFFTinv_8_scale_32f", "icv_p8_ownpi_WarpAffine_NN_Repl_64f_C1", "icv_s8_ownpi_WarpAffine_NN_Const_16s_C4", "Java_org_opencv_core_TickMeter_delete", "icv_h9_owniCopyMirrorBorder_8u_C3IR_L", "icv_w7_ippiMean_16u_C1MR", "icv_g9_ippiResizeSuper_16u_C1R_L", "Java_org_opencv_video_BackgroundSubtractorKNN_setDist2Threshold_10", "icv_h9_ownippiFilterMedianSqr_8u_AC4R", "icv_s8_owns_cFFTinv_4_32fc", "ippicviSwapChannels_8u_C4R", "_ZN3tbb8internal8governor19init_scheduler_weakEv", "icv_h9_ippsInvSqrt_32f_A21", "icv_p8_ippiNormDiff_L2_16u_C1R", "icv_w7_ownNorm_L2_8s_C1MR_W7", "icv_p8_ownpi_Min_8u_AC4R", "Java_org_opencv_core_Core_PCABackProject_10", "_ZN2cv3ocl13ProgramSourceD1Ev", "icv_g9_cv_ownFilterMxMnCalcBuf_L", "icv_s8_ippiMinIndx_32f_C1R", "Java_org_opencv_features2d_DescriptorMatcher_read_10", "icv_s8_ippiConvert_16u8u_C1R", "_ZNK2cv4cuda10DeviceInfo12maxSurface2DEv", "icv_h9_owniFilterMedianVert1x3_32f_C1R", "icv_s8_ippiTranspose_16s_C3IR", "icv_p8_ownNormRel_L2_8s_C1MR_V8", "Java_org_opencv_calib3d_Calib3d_rectify3Collinear_10", "icv_w7_ippiWarpAffineNearest_16u_C1R", "icv_p8_ownippiFilterMedianSqr_16s_C3R", "_ZN3tbb10interface78internal15task_arena_base19internal_initializeEv", "icv_g9_ippiSwapChannels_8u_C3C4R", "icv_h9_ippiMorphOpen_16u_C1R_L", "icv_g9_ippiCopyReplicateBorder_32s_C4IR", "Java_org_opencv_imgproc_Imgproc_cvtColor_11", "icv_g9_ownscDftFwd_Prime8_64fc", "icv_g9_ippiWarpAffineLinear_32f_C3R", "icv_p8_ownpi_dInterVector_L_8u_P3", "icv_g9_ownWarpSimple3Nearest16u", "icv_h9_ippiScaleC_64f16u_C1R", "icv_g9_ownRow3Linear64f", "icv_p8_ownippiFilterMedianHoriz_8u_BC4R", "icv_h9_ownRow1Linear16s", "cvSmooth", "_ZN2cv25computeCorrespondEpilinesERKNS_11_InputArrayEiS2_RKNS_12_OutputArrayE", "icv_s8_ownNormDiff_L2_8s_C1MR_W7", "_ZN3tbb18task_group_context22cancel_group_executionEv", "_ZN2cv3ocl7ProgramC2Ev", "icv_h9_ippiWarpAffineCubic_16u_C4R", "icv_h9_ippiMorphOpen_8u_C4R_L", "icv_g9_owniGetRectLeftBF_8u_C3R", "icv_w7_ippsZero_8u", "icv_p8_owniCmpEq_16u_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_W7", "icv_g9_ownpi_WarpAffineLinear_8u_C3R", "icv_g9_ownpi_WarpAffine_L_Const_32f_C3", "icv_w7_ippiRGBToGray_32f_AC4C1R", "icv_h9_ownSS4_65_16u", "icv_h9_ippiCopyReplicateBorder_8u_C3R_L", "icv_h9_owniFilter32f_8u_C1R_g9e9_6", "icv_w7_owniGetRectRight_32f", "icv_s8_ippiFilterBorder_16u_C1R", "cvInRange", "icv_w7_owniSqrDistanceNorm_FullSame_32f_C1R", "iwiRoi_GetTileBorder", "icv_s8_ownippiThreshold_32f_C3", "icv_s8_owniFilterScharrVertMaskBorder2_16s_C1R", "icv_p8_ippiCopyMirrorBorder_32s_C1IR", "_ZN3tbb8internal18concurrent_monitorD2Ev", "icv_w7_ownRow3Linear16s", "icv_s8_ownSS3_98_8u", "icv_p8_ownippiThreshold_GLV_32f_C3", "icv_w7_ownpi_WarpAffineNearest_16s_C4R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_W7", "_ZNK2cv6detail15GainCompensator5gainsEv", "icv_s8_owniCrossCorrValid_8u32s_C1R", "icv_g9_ownscDFTfwd_3_32fc", "icv_g9_owns_cFftInv_Fact4_32fc", "icv_p8_ownpi_SimpleRotate_64f_C3R", "icv_s8_ownSS1_98_8u", "_ZN2cv16FileNodeIteratormmEi", "icv_p8_ownpi_WarpAffine_L_Const_16s_C3", "icv_s8_ownSS3_16s", "Java_org_opencv_photo_MergeMertens_process_10", "icv_p8_owniFilter_32f_C1R_v8u8_5", "icv_s8_ownSS3_8u", "icv_g9_ownSS4_83_16s", "icv_h9_ownSS1_73_16s", "icv_h9_owns_initTabTwdCcsRec_64f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_V8", "icv_p8_ownpi_XorC_8u_C1R", "icv_s8_owniConvert_8u32s_AC4_W7", "icv_p8_ownWarpSimple1Nearest32f", "icv_p8_owniResizeAntialiasing_16u_C4R_L", "icv_w7_ippiResizeLanczos_16u_C1R_L", "cvGetTickCount", "icv_g9_ippiErode_8u_C4R_L", "_ZSt18uncaught_exceptionv", "icv_p8_ownCalcBorderR1Lanczos3_32f", "icv_p8_ippiTranspose_16s_C3R", "icv_w7_ownippsSqrt_16u", "ippicviMorphBlackhat_16u_C1R_L", "icv_h9_ownsSinCosHuge", "icv_s8_owns_cFftInv_CoreMT_32fc", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_11", "_ZN2cv3ocl13attachContextERKNS_6StringEPvS4_S4_", "icv_w7_ownpi_CheckResizeCall", "icv_w7_ownpi_WarpAffineSimpleNearest_64f_C3R", "icv_p8_ippiDotProd_16s64f_C1R", "_ZN2cv11cartToPolarERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_b", "_ZN2cv4FASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEibi", "icv_h9_ownLanczos2KernelAA", "icv_w7_ippiResizeLinear_16s_C3R_L", "icv_s8_ownscrDftFwd_Fact3_32f", "icv_s8_ippiNormDiff_L2_16u_C3CMR", "icv_p8_ownpi_MinMax_16s_C4R", "ippicviSet_8u_C1MR", "icv_w7_Angle_16s", "icv_p8_ownippiFilterMedianCross_16s_C4R_3x3", "icv_s8_ownCopySubpixIntersect_8u16u_C1R_Sfs_W7", "Java_org_opencv_video_BackgroundSubtractorMOG2_setDetectShadows_10", "icv_g9_ownsSub_16s", "icv_p8_ownCalcBorderR4Lanczos3_8u", "cvGetDimSize", "_ZN2cv3hal12magnitude64fEPKdS2_Pdi", "icv_p8_ownpi_NormL2Diff_32f_C1R", "icv_w7_ownippiFilterMedianHoriz_16s_C4R_3x1", "Java_org_opencv_imgproc_Imgproc_rectangle_11", "icv_h9_owniResizeNearest_16s_C3R", "_ZN2cv3ogl6BufferC2Eiiijb", "_ZN2cv3expERKNS_9softfloatE", "icv_s8_ownpi_WarpAffine_C_Mem_32f_C1", "_ZN2cv2ml9ParamGridC1Ev", "icv_p8_ownRow3Cubic16s", "icv_s8_ippiMinIndx_8u_C1R", "icv_p8_ownpi_WarpAffineSimpleCubic_32f_C3R", "icv_p8_ownippiFilterMin_16u_Col_AC4", "icv_w7_ownpi_NormL1Diff_32f_C1R", "icv_g9_ippiCopy_32f_C3R", "_ZN2cv3dnn19experimental_dnn_v13NetD2Ev", "icv_s8_ippiMul_32f_C1R", "icv_p8_ownSS4_98_16s", "icv_s8_ownLaplRow5x5_32f_C4", "icv_h9_ownCalcBorderR1Lanczos2_32f", "icv_w7_ippiFilterBoxBorder_8u_C3R", "icv_g9_owniFilter32f_16s_C4R_g9e9_3", "icv_w7_ownpi_dInterVectorClip_NN_32_C1", "icv_p8_ippiResizeSuper_16u_C4R_L", "icv_s8_owniFilter_32f_C4R_v8u8_7NA", "icv_h9_ippiNorm_L2_8u_C1MR", "icv_h9_ownpi_WarpAffine_C_Transp_16s_C3", "icv_w7_ippsCopy_8u", "icv_s8_ippiResizeLinear_8u_C1R_L", "icv_w7_ownippiFilterMax_16u_Col", "icv_g9_ownSS4_83_32f", "icv_h9_owniScaleC_8s8u_C1R_acc", "_ZN2cv5solveERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi", "icv_w7_ippiScaleC_8s64f_C1R", "icv_h9_ippiMean_8u_C1R", "icv_s8_ownscDFTinv_15_64fc", "icv_s8_ownCopySubpix_32f_C1R_V8", "icv_s8_ippiMirror_8u_C3IR", "icv_p8_owniResizeLanczos_8u_C4R", "icv_w7_ownpi_WarpAffine_C_Const_16s_C4", "icv_n0_own_ipps_sSin_G9HAynn", "icv_s8_ownNorm_L1_8u_C1MR_W7_B", "icv_g9_ownpi_WarpSimpleNearest_16u_C4R", "icv_w7_ownscDFTinv_10_64fc", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_delete", "icv_w7_ippiSum_32f_C3R", "_ZN2cv9ExceptionD0Ev", "icv_p8_ownippsCnvrt_8s32f", "icv_p8_ippiCountInRange_32f_C1R", "_ZN2cv3LDA3ldaERKNS_11_InputArrayES3_", "icv_h9_owns_rFFTfwd_32_scale_32f", "icv_s8_ippiFFTGetSize_R_32f", "icv_h9_ownpi_WarpSimpleCubic_16s_C4R", "icv_s8_ownpi_WarpAffine_NN_Mem_16u_C1", "icv_s8_ownpis_Indx_8u_C3", "_ZN2cv17agast_cornerScoreILi0EEEiPKhPKii", "_ZNK2cv14DefaultDeleterI11CvSparseMatEclEPS1_", "_ZN2cv3ogl6Arrays16resetNormalArrayEv", "_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj", "icv_g9_ippsPowOne", "icv_w7_ippiFilterSobelHorizBorderGetBufferSize", "icv_p8_ownscDftInv_Prime4_64fc", "icv_w7_ippiSub_16s_C1RSfs", "_ZN3tbb8internal17generic_scheduler5spawnERNS_4taskERPS2_", "icv_s8_ownsMul_8u", "icv_w7_ippiCopyMirrorBorder_16u_C1R", "icv_p8_ownippiFilterMedianHoriz_8u_C1R_5x1", "icv_w7_ownpi_dInterVectorClip_L_32f_P3", "_ZN2cv8internal17ComputeHomographyENS_3MatES1_", "icv_s8_ownpi_WarpAffine_L_16u_AC4", "icv_h9_ownpi_WarpAffine_C_Const_64f_C3", "icv_w7_ownpi_OrC_8u_C1R", "icv_h9_ippiResizeNearest_8u_C3R_L", "icv_p8_ippiFilterSobelNegVertBorder_8u16s_C1R", "_ZN2cv7MomentsC1Edddddddddd", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7", "icv_w7_ownpi_WarpAffineSimpleNearest_16u_C1R", "icv_g9_ownpi_WarpAffine_C_Repl_16u_C4", "icv_h9_owns_getSizeDct_Conv_32f", "Java_org_opencv_photo_Photo_textureFlattening_11", "icv_s8_ippiSwapChannels_32f_C3R", "icv_n0_own_ipps_dSqrt_S9HAynn", "icv_g9_owniResizeSuper_32f_C4R", "icv_h9_ippiResizeSuper_16s_C3R_L", "Java_org_opencv_core_TickMeter_getTimeTicks_10", "icv_g9_ippiCopyMirrorBorder_32s_C3IR", "cvMemStorageAllocString", "Java_org_opencv_imgproc_Imgproc_sqrBoxFilter_11", "icv_p8_ownippiFilterMedianHoriz_16u_C1R_3x1", "icv_g9_ownsAdd_16s", "icv_w7_ippiNormRel_L2_16u_C1MR", "_ZN2cv6detail11PlaneWarper7warpRoiENS_5Size_IiEERKNS_11_InputArrayES6_S6_", "icv_g9_ownscDftFwd_Prime3_32fc", "icv_h9_ippsMaxEvery_64f", "icv_w7_owns_cFFTinv_32_scale_64fc", "icv_g9_ippiNormRel_L1_16u_C1MR", "ippicviResizeSuper_32f_C3R_L", "icv_h9_owniResizeNearest_16s_C4R", "icv_w7_ownpi_WarpAffine_C_Const_64f_C3", "icv_s8_ownResize4Lanczos2_16s", "icv_g9_ippiFilterMaxBorderGetBufferSize", "icv_p8_ownsrDFTfwd_3_scale_32f", "icv_h9_ownpi_CmpEQ_16s_C1R", "icv_s8_ownRow4Antialiasing_16u", "icv_h9_ownpi_SimpleRotate_16s_C3R", "icv_s8_ownSS1_83_16u", "_ZN2cv8integralERKNS_11_InputArrayERKNS_12_OutputArrayES5_ii", "icv_p8_owns_sDctInv_Dir_32f", "ippicviTranspose_16s_C4R", "icv_w7_ownsAdd_16s_Bound", "icv_p8_ippiResizeSuperInit_L", "icv_w7_ownResize3Linear16s", "icv_p8_ownNormDiff_L1_8s_C3CMR_V8", "icv_w7_ippiNorm_Inf_8u_C1MR", "icv_g9_owniScaleC_64f16u_C1R_fst", "icv_h9_ippiNormDiff_L2_16u_C1R", "_ZN2cv9SparseMat3ptrEiiibPj", "icv_n0_own_ipps_sCos_W7HAynn", "icv_g9_ownsFFTGetBufSize_C_64fc", "icv_p8_owniSwap_16s_C4C3R", "_ZN2cv5flann17KDTreeIndexParamsC1Ei", "icv_w7_ippiAddWeighted_8u32f_C1IR", "Java_org_opencv_core_Core_findNonZero_10", "ippicviAddSquare_32f_C1IMR", "icv_g9_owniResizeAntialiasing_32f_C4R_L", "icv_g9_ippiNormDiff_L1_32f_C1MR", "Java_org_opencv_ml_StatModel_predict_10", "_ZNK2cv11_InputArray6copyToERKNS_12_OutputArrayE", "icv_s8_owns_initTabTwd_L1_64f", "_ZN2cv4idftERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_s8_ownpi_AndC_8u_C4R", "icv_g9_ippiFilterMedianBorder_8u_C1R", "_ZN2cv9rectangleERKNS_17_InputOutputArrayENS_6Point_IiEES4_RKNS_7Scalar_IdEEiii", "icv_w7_ownscDftFwd_Fact2_64fc", "icv_p8_ownRow1Filter14_8u", "icv_p8_ownsrDFTinv_13_scale_64f", "iwCleanup", "icv_g9_ownSS3_98_16u", "icv_p8_ippiScaleC_16s16u_C1R", "_ZN2cv17FlannBasedMatcher12knnMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "icv_s8_ippiTranspose_32s_C1IR", "icv_p8_ippiThreshold_LT_32f_C1R", "icv_s8_owns_dBitRev1_Blk", "icv_s8_ippiGetCentralMoment_64f", "icv_g9_ownSS4_32_16s", "icv_w7_owniResizeSuper_8u_C3R", "icv_s8_ownsrDFTinv_15_64f", "_ZN2cv3hal8split16uEPKtPPtii", "icv_w7_ippiCopyMirrorBorder_8u_C3IR_L", "icv_g9_ownpi_WarpAffineSimpleLinear_16u_C4R", "ippicviWarpAffineNearest_64f_C4R", "_Z20vector_size_t_to_MatRSt6vectorIjSaIjEERN2cv3MatE", "icv_s8_ippiSqrDistanceNormGetBufferSize", "icv_w7_owns_getSizeDct_Conv_32f", "icv_p8_ippiWarpAffineNearest_16u_C4R", "icv_g9_ownCalcBorderR1Lanczos3_32f", "Java_org_opencv_core_Mat_n_1delete", "_ZN2cv3hal6mul32sEPKijS2_jPijiiPv", "_ZN2cv9videostab17OnePassStabilizerC1Ev", "icv_s8_ownRow1Filter8_32f", "icv_g9_ownscDFTfwd_9_32fc", "ippicviDistanceTransform_3x3_8u32f_C1R", "icv_s8_ownippiFilterMedianHoriz_16u_C1R_5x1", "icv_s8_ownscDftFwd_Prime13_64fc", "icv_g9_ownpi_WarpAffine_CR_8u_C1", "icv_h9_ownpi_WarpAffineSimpleCubic_16u_C1R", "icv_s8_ippsFloorOne", "icv_h9_owniScaleC_64f8u_C1R_acc", "icv_s8_ippiSum_16s_C3R", "icv_s8_ownippiFilterMedian_16s_C1R_3x3", "_ZNK2cv3ocl6Device16image2DMaxHeightEv", "icv_p8_ippsMinIndx_32f", "icv_w7_ownpi_WarpAffine_NN_Mem_16s_C3", "icv_g9_cv_ownippiFilterMax_16u_Msk", "icv_p8_owniFilterBilateralCom_InMem_32f_C1R_L", "ippicviMorphGradient_32f_C1R_L", "icv_h9_ownpi_Rotate180_16_C4R", "ippicviRGBToGray_32f_AC4C1R", "icv_w7_ownpi_Rotate180_64_C1R", "Java_org_opencv_ml_RTrees_getTermCriteria_10", "icv_s8_ownsrDFTfwd_5_scale_32f", "icv_h9_ownRow1Filter12_32f", "icv_g9_ownippsCnvrtNear_32f16u_AVX", "icv_p8_ippiCopy_32f_AC4R", "iwiRoiPipeline_GetTileBorder", "Java_org_opencv_imgproc_Imgproc_convexHull_11", "icv_h9_ippsSinOne", "icv_p8_ownpi_Rotate90_B_32_C1R", "Java_org_opencv_features2d_GFTTDetector_setK_10", "icv_h9_ownscDftFwd_Fact13_32fc", "icv_w7_ownscDFTinv_5_32fc", "icv_p8_ippiNormRel_L1_8u_C1MR", "icv_g9_ownResize4Lanczos2_16u", "icv_p8_ippsExp_64f_A50", "icv_h9_ownSS4_98_16u", "icv_p8_owns_rFFTfwd_8_scale_64f", "icv_g9_ippiScaleC_8u8s_C1R", "icv_g9_ippiMorphTophat_32f_C1R_L", "icv_p8_owns_rFFTinv_16_32f", "icv_h9_ownscDftFwd_Prime13_32fc", "icv_p8_owniCopy_8u_C3AC4R", "icv_g9_ownSS1_53_32f", "icv_g9_ippiMean_32f_C1R", "_ZN2cv9transformERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "icv_s8_ownpi_ClipQuad", "icv_s8_ownRow1Filter12_16s", "icv_p8_ippsSortRadixAscend_16u_I", "icv_w7_ippiCopy_8u_AC4R", "icv_h9_ownpi_WarpSimpleLinear_64f_C4R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_W7", "_ZN2cv7hconcatERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_p8_ippiNormDiff_L1_8u_C1MR", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_3x3", "icv_s8_ippiNorm_L1_8u_C1MR", "_ZN2cv27computeRecallPrecisionCurveERKSt6vectorIS0_INS_6DMatchESaIS1_EESaIS3_EERKS0_IS0_IhSaIhEESaIS9_EERS0_INS_6Point_IfEESaISF_EE", "_ZN2cv6detail18GraphCutSeamFinderC2Eiff", "icv_h9_ownRow4Lanczos3_16s", "icv_h9_ippiWarpAffineCubic_32f_C3R", "icv_s8_owniFilterBilateralR1_InMem_32f_C3R_px", "icv_g9_ownpi_WarpAffineCubic_8u_C4R", "icv_h9_ownpi_WarpSimpleCubic_32f_C3R", "icv_h9_owncvMinMaxIndx_16u_C1MR_H9L9", "icv_s8_ownpi_dInterVectorClip_L_16u_C4", "icv_s8_ownsReducePi", "icv_h9_ippiFilterMedianBorder_8u_C4R", "icv_n0_own_ipps_dSin_G9HAynn", "Java_org_opencv_features2d_Params_set_1minConvexity_10", "_ZN2cv8KeyPoint7convertERKSt6vectorINS_6Point_IfEESaIS3_EERS1_IS0_SaIS0_EEffii", "icv_p8_ippiRGBToGray_32f_AC4C1R", "icv_p8_ownippiThreshold_V_32f_AC4", "icv_g9_ippiCopyMirrorBorder_32s_C3IR_L", "Java_org_opencv_objdetect_HOGDescriptor_detect_11", "ippicviCopy_32f_C1R", "icv_g9_ippsMul_64fc_I", "icv_p8_owniScaleC_8s8s_C1R_acc", "icv_h9_owniExchange_8u_I", "icv_s8_ownRow3Antialiasing_32f", "icv_h9_ownFilterRow32f_16u_C1R_g9e9", "icv_h9_ownSS4_94_16s", "Java_org_opencv_video_BackgroundSubtractorMOG2_setNMixtures_10", "Java_org_opencv_calib3d_StereoSGBM_setP1_10", "icv_w7_ownscDFTfwd_14_scale_32fc", "Java_org_opencv_core_Core_phase_11", "icv_p8_ippiMorphTophat_32f_C4R_L", "icv_w7_ippiScaleC_32s32f_C1R", "icv_w7_ippiCopy_32s_C4MR", "Java_org_opencv_core_Algorithm_save_10", "icv_s8_ownsrDFTfwd_14_scale_64f", "icv_g9_ownpi_SmoothBorderNew", "icv_p8_ippiHistogramGetBufferSize", "_ZN2cv11VideoWriterD0Ev", "icv_g9_owniScaleC_32s8u_C1R_fst", "ippicviFilterBorder_16s_C1R", "icv_w7_owniResizeNearest_8u_C4R", "icv_g9_ippiSum_16u_C1R", "ippicviNormDiff_L2_8u_C1MR", "icv_w7_owniConvert_16u32f_W7", "icv_h9_ippiMirror_16u_C1IR", "icv_p8_ippsSortRadixDescend_32f_I", "ippicviNormDiff_Inf_16s_C1R", "icv_h9_ownpi_WarpAffine_CR_8u_C3", "icv_p8_ippiFilterBorder_16s_C4R", "icv_w7_ippiHistogram_8u_C1R", "icv_h9_ownsrDFTinv_9_scale_32f", "icv_w7_ippiScaleC_64f_C1IR", "icv_p8_owniCopy_8u_C4P4R_cn", "Java_org_opencv_objdetect_HOGDescriptor_get_1L2HysThreshold_10", "icv_p8_ownNormDiff_Inf_8s_C1MR_W7", "icv_h9_ownCalcBorderR4Linear8u", "ippicviResizeCubic_8u_C1R_L", "Java_org_opencv_core_Core_norm_11", "Java_org_opencv_calib3d_Calib3d_stereoRectify_13", "icv_h9_ownSShorisontal_16u", "icv_s8_ippiAddProduct_32f_C1IMR", "icv_p8_ippiSum_32f_C4R", "_ZN2cv25stereoRectifyUncalibratedERKNS_11_InputArrayES2_S2_NS_5Size_IiEERKNS_12_OutputArrayES7_d", "icv_s8_ownsFFTGetBufSize_C_64fc", "_Unwind_GetIP", "icv_h9_owniCopyMirrorBorder_8u_C4IR", "icv_w7_owniResizeLinear_32f_C1R", "icv_g9_ownpi_WarpSimpleLinear_64f_C4R", "icv_w7_owniResizeGetBorderSize", "icv_p8_ownpi_WarpAffine_L_16u_C3", "icv_p8_ownNormRel_Inf_8s_C1MR_V8", "_ZN2cv3Mat8copySizeERKS0_", "icv_w7_ownpi_NormL1Diff_8u_C1R", "icv_w7_ippiScaleC_8s32s_C1R", "icv_g9_ownSS1_a7_16u", "icv_h9_owniConvert_32s32f_C1R", "icv_s8_owniConvert_16s8s_ccode", "icv_g9_ownpi_WarpAffineSimpleLinear_64f_C4R", "icv_h9_owniScaleC_16u8u_C1R_acc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_W7", "_ZNK2cv11_InputArray8channelsEi", "Java_org_opencv_video_DualTVL1OpticalFlow_setScaleStep_10", "Java_org_opencv_dnn_Net_getMemoryConsumption_12", "icv_s8_ownSS4_94_16s", "_ZN2cv5flann5Index7releaseEv", "icv_g9_ippiApplyHaarClassifier_32f_C1R", "icv_w7_ippiResizeCubic_16u_C3R_L", "icv_s8_ownCubicKernel2", "_ZN3tbb10interface914global_control12active_valueEi", "icv_p8_ownResize1Nearest8u", "icv_s8_ownsInitDftConv_32f", "icv_w7_ownNorm_Inf_32f_C1MR_W7", "icv_h9_ippiResizeLanczos_16s_C4R_L", "icv_h9_ownscDft_Conv_32fc", "icv_w7_ippiResizeAntialiasing_16u_C3R_L", "Java_org_opencv_features2d_AKAZE_setDiffusivity_10", "icv_w7_ippiMorphBlackhat_8u_C4R_L", "icv_w7_ownNormDiff_Inf_8s_C1MR_W7", "icv_s8_ownpi_WarpAffine_L_Mem_8u_C4", "icv_w7_ippiGradientVectorSobel_32f_C1R", "_ZN2cv3ocl6Kernel7runTaskEbRKNS0_5QueueE", "icv_p8_ownscDftFwd_Prime5_32fc", "icv_p8_ownpi_Xor_8u_C1R", "icv_w7_ippsDFTGetSize_R_32f", "icv_h9_ippiSub_32f_C4R", "icv_g9_ownFilterBoxBorder_16u_C1R", "_ZNK2cv17CommandLineParser4Impl18split_range_stringERKNS_6StringEcc", "icv_s8_ownAddSquare_8u32f_C1IMR_W7", "icv_g9_owniScaleC_16u16u_C1R_fst", "_ZNK2cv9Algorithm11writeFormatERNS_11FileStorageE", "icv_p8_owniFlip_16u_C4I_W7", "ownSharedMalloc", "icv_s8_ownscDFTfwd_3_64fc", "icv_s8_ippsDFTFwd_RToPack_64f", "Java_org_opencv_calib3d_StereoSGBM_setPreFilterCap_10", "icv_s8_ippiDotProd_8u64f_C1R", "icv_s8_ippiHarrisCorner_8u32f_C1R", "icv_h9_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_h9_ownSS3_32f", "icv_h9_ippiGetSpatialMoment_64f", "icv_w7_cv_ownippiFilterMin_32f_Col", "icv_s8_ownscDFTinv_7_32fc", "Java_org_opencv_imgproc_CLAHE_setClipLimit_10", "icv_s8_ownNormRel_L2_32f_C1MR_W7", "ippicviIntegral_32f_C1R", "icv_w7_ownpi_Set_64f_C1R", "icv_h9_ownpi_WarpAffine_NN_Mem_16u_C3", "icv_h9_ippsSortRadixIndexDescend_16u", "icv_h9_ippiMean_32f_C1R", "icv_w7_ownsSub_16s_NegSfs", "Java_org_opencv_imgproc_Imgproc_getGaussianKernel_11", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setTermCriteria_10", "icv_p8_ownLaplRow5x5_16s_C1", "icv_s8_ownscDftFwd_Prime3_64fc", "icv_w7_ownpi_WarpAffine_NN_16_P4", "icv_s8_ippsSortRadixDescend_16u_I", "icv_p8_owniCopy16sC1Mas", "Java_org_opencv_photo_TonemapReinhard_setColorAdaptation_10", "icv_s8_ippiNormRel_Inf_8u_C1MR", "icv_s8_ownpi_WarpAffine_L_Repl_16u_C4", "ippicvsPolarToCart_64f", "icv_p8_ippiScaleC_16u16s_C1R", "icv_p8_owniCmpLessEq_16u_C1R", "icv_s8_ownBuildFilter_64f", "icv_s8_owns_cFftInv_Fact4_64fc", "icv_s8_ippiFilterSobelNegVertBorder_32f_C1R", "_ZN2cv4cuda11TargetArchs6hasBinEii", "icv_p8_ownsExpOne", "icv_s8_ownscDftFwd_Fact13_32fc", "_ZN2cv8fastFreeEPv", "_ZN2cv3hal11cvtYUVtoBGREPKhjPhjiiiibb", "icv_s8_ownippiFilterMax_32f_Col", "icv_h9_ippiMirror_32s_C4IR", "icv_g9_ippsMagnitude_32f", "icv_p8_owniSqrDistanceNorm_Valid_32f_C1R", "icv_p8_ownRow3Antialiasing_32f", "icv_w7_ownpi_WarpAffineLinear_8u_C3R", "icv_h9_ippiDFTInit_R_32f", "Java_org_opencv_features2d_GFTTDetector_getK_10", "icv_p8_owniCopyMirrorBorder_16s_C3R", "icv_w7_ownNorm_L2_16u_C1MR_W7", "icv_p8_owniScaleC_16u16u_C1R_fst", "icv_p8_ippiCopyReplicateBorder_32s_C3R_L", "_ZN2cv12VideoCapturersERNS_3MatE", "icv_g9_owniResizeNearest_32f_C4R", "_ZN2cv3hal6SVD64fEPdjS1_S1_jS1_jiii", "icv_g9_ownSS1_31_8u", "icv_g9_ownSS1_83_8u", "Java_org_opencv_core_Core_add_11", "_ZNK2cv3ocl6Device16OpenCL_C_VersionEv", "icv_s8_ownNormDiff_L1_8u_C1MR_W7", "Java_org_opencv_calib3d_Calib3d_stereoRectifyUncalibrated_10", "icv_w7_ippiAdd_8u_C1RSfs", "icv_w7_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss", "icv_h9_ownCalcBorderR3Linear16s", "icv_p8_owniResizeAntialiasing_8u_C1R_L", "icv_s8_ownSS4_54_16u", "ippicviMarkSpeckles_16s_C1IR", "icv_p8_ownscDFTfwd_3_64fc", "icv_h9_ippsMul_32fc", "icv_g9_owns_cFftFwd_Fact4_32fc", "icv_w7_owniConvert_8s16s_ccode", "icv_p8_owniFilter_32f_C3R_v8u8_1", "icv_w7_ownLaplCol5x5_8u_C1", "Java_org_opencv_ml_TrainData_getValues_10", "icv_g9_ippiTranspose_8u_C1IR", "icv_h9_owniSet_8u_C1R", "icv_p8_cv_ownippiFilterMax_8u_Col", "icv_p8_ownpi_WarpAffineSimpleNearest_8u_C4R", "icv_g9_owniScaleC_64f8s_C1R_acc", "icv_h9_ownWarpSimple1Nearest32f", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_W7", "Java_org_opencv_imgproc_Imgproc_arcLength_10", "icv_g9_ownRow4Linear8u", "_ZN2cv17CascadeClassifierC2ERKNS_6StringE", "icv_h9_ownscDFTfwd_13_scale_32fc", "_ZNK2cv3Mat3mulERKNS_11_InputArrayEd", "icv_w7_ownCubicKernelAA", "icv_w7_owns_cFFTfwd_8_scale_64fc", "icv_p8_ippiFilterBilateralBorderInit", "_Z19vector_Vec4f_to_MatRSt6vectorIN2cv3VecIfLi4EEESaIS2_EERNS0_3MatE", "icv_g9_ownCalcBorderR3Lanczos2_32f", "Java_org_opencv_features2d_Params_get_1filterByArea_10", "icv_p8_ippiMorphClose_32f_C3R_L", "icv_h9_ownpi_XorC_8u_C1R", "icv_h9_ippiThreshold_GTVal_8u_C1IR", "icv_s8_ownippiFilterxBrd_8u_C4R", "icv_s8_ippiNorm_L2_16s_C1R", "icv_g9_owniCopyMirrorBorder_32s_C1IR_L", "icv_w7_ownSharpenRow_32f_C1", "Java_org_opencv_features2d_AKAZE_setNOctaves_10", "_ZN9CvLevMarq4stepEv", "icv_w7_ippiResizeCubic_16s_C1R_L", "icv_w7_ownHipass5x5Col_8u_C3", "icv_w7_ownscDftInv_Prime16_32fc", "icv_w7_ownippiFilterMin_16s_Row", "Java_org_opencv_calib3d_Calib3d_findHomography_12", "icv_h9_ownippiFilterMedianHoriz_16u_C1R_5x1", "icv_p8_owniScaleC_64f16s_C1R_acc", "icv_w7_ownpi_WarpAffine_NN_Mem_8u_C1", "icv_g9_ippiHistogramInit", "icv_h9_ownFilterColumn32f_8u_C1R_g9e9", "icv_s8_ownippiFilterxBrd_32f_C4R", "icv_p8_owniConvert_16u8s_ccode", "icv_h9_owniFilter32f_16u_C3R_g9e9_3", "icv_s8_owniResizeNearest_8u_C4R", "_ZN2cv6detail11MatchesInfoC1ERKS1_", "icv_w7_ownResize3Linear16u", "_ZN2cv6detail12AffineWarper9warpPointERKNS_6Point_IfEERKNS_11_InputArrayES8_", "Java_org_opencv_dnn_Net_deleteLayer_10", "icv_h9_ownscDFTfwd_7_scale_64fc", "icv_g9_ownSS1vertical_16s", "icv_w7_ownpi_WarpAffineSimpleCubic_16s_C4R", "icv_w7_ownpi_Max_16s_C1R", "icv_s8_ownSS4_65_32f", "icv_g9_ownFilterBoxBorderInMem_32f_C3R", "icv_s8_ippiCopy_16u_C3AC4R", "_ZN2cv8internal15IntrinsicParamsC2ENS_3VecIdLi2EEES3_NS2_IdLi4EEEd", "_ZNK3tbb18captured_exception4whatEv", "icv_h9_ippiNorm_L1_8u_C1R", "icv_h9_ippiFilterBilateralBorder_32f_C3R", "icv_g9_owniSwapChannels_8u_C3C4R", "icv_h9_ownRow1Filter10_32f", "icv_w7_ippiMean_32f_C4R", "icv_p8_ippiRectStdDev_32f_C1R", "_ZN3tbb8internal32itt_load_pointer_with_acquire_v3EPKv", "icv_n0_own_ipps_dSin_T7HAynn", "Java_org_opencv_features2d_AKAZE_create_10", "icv_s8_ippiCopy_32f_C3P3R", "icv_g9_owniFilter32f_8u_C1R_g9e9_3", "_ZN2cvleERKNS_3MatES2_", "icv_p8_ippiMorphBlackhat_8u_C3R_L", "ippicviCopy_32f_C3C1R", "icv_s8_ownscrDftInv_Prime3_64f", "icv_s8_owniConvert_32f8s_AC4_W7", "_Z21vector_String_to_ListP7_JNIEnvRSt6vectorIN2cv6StringESaIS3_EE", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_V8", "icv_p8_ownippiFilterMedianCross_16s_C1R_3x3", "icv_s8_ownRow3Linear16s", "icv_h9_owniCopyConstBorder_32s_C3R", "ippicviWarpAffineCubic_32f_C1R", "icv_g9_owniFilter32f_16s_C1R_g9e9_4", "icv_w7_ippiMulC_32f_C1IR", "icv_s8_owns_cFftInv_Large_32fc", "icv_s8_ownsSub_16s_Bound", "icv_g9_ownResize1Linear64f", "icv_h9_owniScaleC_16u8u_C1R_fst", "_ZNK2cv8FileNode4nameEv", "icv_s8_ownippiFilterMedian_8u_C4R", "icv_g9_ownscDFTinv_10_32fc", "icv_p8_owniFilter2_32f_C1R", "icv_p8_ippiWarpAffineCubic_64f_C4R", "icv_h9_ippiThreshold_GTVal_16s_C1IR", "icv_w7_ownpi_dInterVectorClip_L_8u_P4", "icv_p8_ippiCopySubpixIntersect_32f_C1R", "icv_s8_ownpi_WarpAffine_C_Mem_16s_C1", "icv_s8_ownRow1Filter10_16u", "cvMatchShapes", "icv_w7_ippsCopy_32s", "icv_h9_ippiScaleC_8u_C1R", "_ZN3tbb8internal18throw_exception_v4ENS0_12exception_idE", "icv_p8_ownpi_dInterVector_NN_16_AC4", "icv_h9_ippiSet_16s_C1MR", "icv_g9_ippiNorm_L2_16u_C1R", "icv_s8_ippiDFTInit_R_32f", "icv_s8_ownsMulC_32f_I", "icv_g9_owns_cFFTinv_16_64fc", "icv_p8_owniFilterMedianHoriz3x1_32f_C1R", "icv_g9_owns_rFFT_2_scale_32f", "Java_org_opencv_features2d_BOWTrainer_cluster_11", "icv_h9_owniFlipCopy_16u_C3", "icv_s8_owns_rFFTinv_4_scale_64f", "icv_s8_ownpi_MinMax_16u_C1R", "icv_p8_ownSumSq_32f_C3CR_W7_Al", "icv_s8_ownippsCnvrtFin_32f8u_Sfs", "icv_p8_owniGetRectLeft_32f", "icv_p8_owniScaleC_8u8s_C1R_acc", "_ZN3tbb8internal8governor17create_rml_serverERNS0_3rml10tbb_clientE", "icv_p8_ownscrDftInv_Prime3_32f", "icv_w7_owniCopyBF_8u_C3R", "icv_w7_ownpi_WarpAffine_NN_Mem_8u_C3", "icv_p8_ippiNormRel_L1_32f_C1R", "icv_s8_owns_crRadix4Fwd_64f", "Java_org_opencv_ml_NormalBayesClassifier_delete", "icv_s8_ippiNormDiff_L2_32f_C3CMR", "Java_org_opencv_ml_KNearest_findNearest_10", "icv_h9_ownpi_WarpAffineLinear_64f_C4R", "icv_s8_owns_rFFTinv_32_scale_64f", "Java_org_opencv_video_FarnebackOpticalFlow_getPolySigma_10", "_ZNK2cv8Subdiv2D11getEdgeListERSt6vectorINS_3VecIfLi4EEESaIS3_EE", "_ZN2cv3hal5cmp8uEPKhjS2_jPhjiiPv", "icv_p8_ownpi_Rotate180_64_C4R", "icv_p8_ownscDFTfwd_12_scale_32fc", "_ZN2cv16estimateAffine2DERKNS_11_InputArrayES2_RKNS_12_OutputArrayEidjdj", "icv_p8_ownsConvert_32s16s_W7", "icv_w7_ippiHistogramGetBufferSize", "icv_h9_owniFilter32f_16s_C1R_g9e9_2", "icv_s8_ippiMirror_16u_C4IR", "icv_g9_ippiMirror_32f_C3IR", "icv_w7_ownCalcBorderR1Antialiasing_8u", "icv_w7_ownpi_NormL2_8u_C1R", "Java_org_opencv_ml_SVM_create_10", "icv_p8_ownsAddC_32f", "icv_w7_ownpi_WarpAffine_C_Const_8u_C1", "icv_g9_owniConvert_32f16s_AVX", "icv_s8_ownpi_WarpAffine_C_Mem_16s_C3", "icv_w7_ippiMorphGetSpecSize_L", "icv_p8_ownpis_Max_8u_C3", "icv_p8_ownAFilterRow32f_16u_C1R", "icv_w7_ownAddSquare_32f_C1IMR_W7", "icv_h9_ownsrDFTfwd_11_scale_32f", "icv_g9_ownsrDFTinv_12_32f", "icv_w7_ownpi_MinMax_32f_C3R", "icv_w7_ownippiFilterMax_16s_Col_AC4", "icv_h9_ownscDftFwd_Prime6_64fc", "icv_p8_ippiSet_32f_C3MR", "icv_g9_owniFilter32f_8u_C1R_g9e9_2", "icv_h9_ownippiFilterMedianHoriz_8u_C4R", "icv_s8_owniSwap_8u_C3C4R", "icv_s8_ownpi_WarpAffine_L_16u_C3", "icv_g9_piGradientScharr8u_row_c1", "icv_h9_ippiMorphBlackhat_32f_C3R_L", "icv_g9_ippsMalloc_8u_L", "icv_h9_piFilterBoxBorder_32f_C1R_2_v8u8_NA", "cvPyrMeanShiftFiltering", "cvSet2D", "icv_p8_ownscDFTinv_14_scale_32fc", "icv_s8_ippiWarpAffineLinear_8u_C1R", "icv_s8_ownLaplace3x3Row_8u_C4", "_ZN10__cxxabiv123__fundamental_type_infoD1Ev", "icv_h9_owns_rFFT_2_32f", "icv_h9_ippsDCTInvInit_32f", "icv_h9_ownscDFTfwd_13_scale_64fc", "icv_h9_ownpi_WarpAffine_NN_Const_16s_C3", "icv_h9_ippiConvert_16u8s_C1RSfs", "icv_p8_ippiMorphTophat_16s_C1R_L", "icv_s8_owniConvert_16u32f_W7", "ippicviFilterRowBorderPipeline_32f_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_apply_11", "Java_org_opencv_calib3d_StereoMatcher_delete", "llwiSetUniform", "icv_s8_owniTranspose8u_C1R_core2", "icv_p8_ownCalcBorderR4Linear64f", "icv_w7_ippiCopy_32f_C4MR", "cvCalcOpticalFlowPyrLK", "Java_org_opencv_features2d_FastFeatureDetector_setNonmaxSuppression_10", "icv_h9_ownscDFTinv_9_32fc", "icv_s8_ownRow1Lanczos3_8u", "_ZNK2cv12MatAllocator5unmapEPNS_8UMatDataE", "icv_g9_ippiMulC_32f_C1R", "Java_org_opencv_core_Core_divide_15", "ippicviAddWeighted_8u32f_C1IR", "icv_p8_ownSumSq_16u_C1MR_W7", "cvGetCentralMoment", "icv_g9_ownpi_Rotate90_B_64_C4R", "_ZN2cv10solveCubicERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_s8_ownippiFilterMin_16u_Col_AC4", "icv_w7_ownNormRel_L2_16u_C3CMR_W7", "icv_n0_own_ipps_sCos_S9LAynn", "cvCloneImage", "icv_g9_ownFilterBoxBorder_8u_AC4R", "icv_p8_ownCopySubpix_8u32f_C1R_new_V8", "icv_g9_ownSS1_54_16u", "icv_s8_ippiFilterScharrHorizMaskBorder_16s_C1R", "icv_s8_ippiDilate_8u_C4R_L", "_ZN2cv3dnn19experimental_dnn_v110ShiftLayer6createERKNS1_11LayerParamsE", "_ZN2cv25BOWImgDescriptorExtractor7computeERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EERKNS_12_OutputArrayEPS4_IS4_IiSaIiEESaISD_EEPNS_3MatE", "icv_s8_ippiMirror_8u_C4IR", "_ZN2cv3hal11cvtBGRtoBGREPKhjPhjiiiiib", "ippicviResizeLinear_64f_C3R_L", "icv_g9_ownRow4Linear16s", "icv_p8_ippsDCTInv_32f", "Java_org_opencv_imgproc_Subdiv2D_getVoronoiFacetList_10", "icv_h9_ownpi_WarpAffine_NN_Mem_32f_C4", "icv_g9_owns_cFft_BlkSplit_32fc", "icv_s8_ownSS1_8u", "icv_p8_ownColLinear64f", "icv_p8_ownpi_WarpAffine_L_Repl_8u_C3", "_ZN2cv3hal6mul32fEPKfjS2_jPfjiiPv", "icv_w7_ownsAtan2One", "icv_p8_owniCopy_16s_C3P3R_cn", "icv_s8_ownRow4Linear64f", "_ZN2cv5MatOpC1Ev", "icv_s8_ownRow3Lanczos3_8u", "icv_g9_ownpi_WarpAffine_NN_Mem_32f_C4", "icv_s8_ownsrDFTinv_11_32f", "icv_h9_ownMean_StdDev_32f_C3CR_2_HSW", "icv_g9_ippiFilterBorder_16u_C1R", "icv_g9_ownCalcBorderR1Linear64f", "icv_w7_ippsDFTGetSize_C_32fc", "icv_w7_ownResize1Linear8u", "icv_w7_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_W7cn", "icv_h9_ownscDFTfwd_14_32fc", "icv_g9_ownResize4Nearest16u", "icv_g9_ippiMirror_16s_C1IR", "icv_s8_ownpi_XorC_32s_C1R", "icv_p8_ippiNormDiff_Inf_8u_C1MR", "icv_s8_ownpi_Max_32f_C3R", "icv_h9_ippsExp_32f_A21", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "icv_p8_ownippiFilterMedianHoriz_16u_C3R_3x1", "icv_w7_ownColCubic32f", "icv_p8_ippiSum_16u_C3R", "icv_g9_owniResizeNearest_8u_C1R", "Java_org_opencv_video_FarnebackOpticalFlow_delete", "_ZThn16_N2cv9videostab27SparsePyrLkOptFlowEstimator3runERKNS_11_InputArrayES4_S4_RKNS_17_InputOutputArrayERKNS_12_OutputArrayESA_", "icv_s8_ownColLinear64f", "icv_p8_owniSet_32f_C4_W7", "_ZN2cv16pointPolygonTestERKNS_11_InputArrayENS_6Point_IfEEb", "ippicvsSortRadixIndexDescend_8u", "icv_p8_owniResizeCubic_16u_C4R", "icv_p8_ownSS1_31_16u", "icv_h9_ippiResizeLanczos_8u_C3R_L", "icv_p8_ownscDftInv_Prime3_64fc", "icv_g9_owns_rFFTinv_8_64f", "icv_s8_ippiDilate_32f_C3R_L", "icv_g9_ippiFilterBorder_16u_C3R", "icv_w7_ownippiThreshold_32f_C3", "icv_g9_ippiSet_8u_C1MR", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C3R_5x5_V8", "icv_h9_ippiSum_16s_C1R", "_ZN2cv4cuda25getCudaEnabledDeviceCountEv", "icv_w7_ownMinMaxIndx_8u_C1R_W7_1", "icv_w7_ownpi_dInterVectorClip_C_8u_C3", "icv_p8_ownNormDiff_L2_16u_C1MR_W7", "icv_s8_ippiFilterMin_32f_Row_A6", "icv_h9_ippiThreshold_GTVal_16s_C1R", "icv_w7_ippiResizeSuper_8u_C3R_L", "_ZN2cv3ogl6Buffer7releaseEv", "icv_p8_ippiWarpAffineCubic_8u_C4R", "icv_h9_ownCalcBorderR4Lanczos3_32f", "icv_g9_ownpi_WarpAffineSimpleLinear_8u_C3R", "icv_s8_ownsConvert_32s16s_W7", "icv_g9_ownpi_WarpAffineNearest_32f_C1R", "icv_h9_ippiResizeGetBorderSize_L", "icv_h9_ownpi_WarpAffineNearest_8u_C3R", "icv_w7_ownsSet_8u", "icv_p8_cv_ownippiFilterMin_8u_Col", "icv_h9_ippiNorm_L2_16u_C3CMR", "icv_s8_ownCalcBorderR4Linear16u", "icv_p8_owniFilter_32f_C4R_v8u8_5NA", "icv_g9_ownSS3_65_16s", "icv_h9_ippiMinMaxIndx_16u_C1MR", "icv_s8_ippsPolarToCart_32f", "icv_h9_ownpi_WarpAffine_NN_Repl_32f_C1", "icv_w7_ippiAddSquare_16u32f_C1IR", "icv_p8_ownscrDftFwd_Fact2_64f", "icv_s8_owniFilterBilateralCom_InMem_32f_C3R_px", "icv_w7_ownsrDFTfwd_11_64f", "icv_g9_owns_initTabTwd_Large_64f", "icv_p8_ownpi_Rotate180_64_C1R", "icv_s8_ownscDftInv_Fact7_32fc", "cvSeqPopFront", "icv_g9_owns_cFFTfwd_32_32fc", "icv_h9_ippiWarpAffineCubic_8u_C3R", "cvGetThreadNum", "icv_p8_owniCrossCorrNorm_Valid_32f_C1R", "icv_h9_ippiNorm_Inf_8u_C1R", "icv_h9_owns_sDctInv_Conv_32f", "icv_s8_ippiCopyMirrorBorder_16u_C1IR", "_ZN2cv24calcOpticalFlowFarnebackERKNS_11_InputArrayES2_RKNS_17_InputOutputArrayEdiiiidi", "icv_p8_owniCopyMirrorBorder_8u_C4IR", "icv_w7_ownpi_Rotate90_16_C4R", "icv_w7_ownscDFTinv_13_scale_32fc", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_P8Y8cn", "icv_w7_ownpi_Sum_8u_AC4R", "icv_s8_owns_cFftFwd_Fact4_Last_64fc", "icv_g9_owniCopyMirrorBorder_8u_C1R", "icv_w7_ownscDFTfwd_6_scale_32fc", "icv_p8_ippiSet_16s_C1R", "icv_p8_owniFilterSobelVertSecondBorder2_8u16s_C1R", "icv_p8_owniFilterBilateralCom_InMem_32f_C3R", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_12", "_ZN3tbb8internal33throw_bad_last_alloc_exception_v4Ev", "icv_w7_ownpi_dInterPoint_CR_Pixel_16u", "icv_g9_ownCalcBorderR1Linear32f", "icv_g9_ownpi_WarpSimpleGetBufferSize", "icv_s8_owns_getSizeTwd_Large_64f", "icv_w7_ownCanny_16s8u_C1R_2_16u_W7", "icv_s8_ownSS1_72_32f", "Java_org_opencv_calib3d_Calib3d_recoverPose_16", "_ZN2cv24createCalibrateRobertsonEif", "_ZN2cv3hal19cvtTwoPlaneYUVtoBGREPKhjPhjiiibi", "ippicviAdd_32f_C1R", "Java_org_opencv_ml_LogisticRegression_setLearningRate_10", "icv_h9_ownResize4Lanczos3_32f", "icv_w7_owns_cFFTfwd_4_scale_64fc", "icv_h9_ippiNormRel_L1_8u_C1MR", "icv_h9_ownscDFTfwd_11_scale_32fc", "icv_w7_ippiConvert_32f8u_C1R", "icv_g9_ownSS4_54_32f", "icv_w7_ownpi_WarpAffineSimpleNearest_32f_C4R", "icv_g9_ippiSet_32s_C1MR", "_ZN2cv3hal6cmp16sEPKsjS2_jPhjiiPv", "icv_g9_ownippiFilterMedianVert_16s_C4R", "_ZN2cv17borderInterpolateEiii", "ippicviMorphGradient_32f_C3R_L", "Java_org_opencv_dnn_DictValue_getStringValue_11", "icv_s8_ownpi_WarpAffine_L_16u_P3", "ippicvsSortRadixDescend_8u_I", "icv_g9_ownMinMaxIndx_8u_C1R_1", "icv_s8_ippiCopy_16s_C1C3R", "icv_s8_ippiCopyReplicateBorder_8u_C3IR", "icv_g9_owns_cCcsRecombine_64f", "icv_p8_ippsDFTGetSize_C_32fc", "icv_p8_ippiCopy_16u_C3C1R", "icv_w7_ippiResizeAntialiasing_16s_C1R_L", "icv_h9_ownpi_WarpAffine_C_Const_32f_C3", "icv_s8_ippiFilterBoxBorder_8u_C1R", "Java_org_opencv_features2d_Feature2D_write_10", "Java_org_opencv_video_Video_createOptFlow_1DualTVL1_10", "icv_h9_ownpi_WarpAffine_C_Repl_64f_C1", "icv_h9_ownscDFTfwd_10_scale_32fc", "icv_p8_ownippiFilterxBrd32f_16u_C1R", "icv_p8_ownSS1_43_32f", "_ZN3tbb8internal3rml14private_server25adjust_job_count_estimateEi", "icv_h9_ownpi_Rotate90_B_16_C3R", "cvHaveImageReader", "Java_org_opencv_dnn_Net_setInputsNames_10", "icv_g9_ippiCopy_32s_C1MR", "icv_h9_ownippiFilterMin_8u_RowCol_C3_h9l9", "icv_g9_ippiCopyReplicateBorder_8u_C3R", "icv_p8_ownpi_WarpAffine_NN_Mem_16s_C1", "icv_h9_ownAbsDiff_16u_C1R", "icv_p8_piFilterBoxBorder_32f_C1R_v8u8_NA", "_ZN3tbb8internal17generic_scheduler18nested_arena_entryEPNS0_5arenaEjRNS0_20nested_arena_contextEb", "ownGetFeature", "ippicviFilterSobelHorizBorder_16s_C1R", "icv_s8_ownpi_WarpAffine_C_Repl_16u_C4", "icv_w7_ippiScaleC_64f16s_C1R", "icv_g9_ippiSet_32s_C3R", "icv_n0_own_ipps_zError", "icv_p8_ownsrDFTinv_11_64f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_V8", "ippicviMean_32f_C3R", "icv_w7_ownippiFilterMedianCross_16u_C1R_5x5", "icv_w7_ippiMean_StdDev_16u_C1MR", "icv_g9_ownpi_Rotate180_8_C4R", "_ZNK2cv4UMat11checkVectorEiib", "icv_h9_ippiCopyReplicateBorder_16s_C3IR", "_ZN2cv12cornerSubPixERKNS_11_InputArrayERKNS_17_InputOutputArrayENS_5Size_IiEES7_NS_12TermCriteriaE", "icv_h9_ippiRGBToHLS_8u_C3R", "icv_g9_owniFilter32f_8u_C4R_g9e9_5", "icv_g9_owniFilter32f_8u_C1R_g9e9_0", "_ZNK2cv2ml3SVM29getUncompressedSupportVectorsEv", "icv_s8_ownpi_WarpSimpleNearest_16s_C4R", "icv_p8_ippiAbsDiff_32f_C1R", "_Z29Mat_to_vector_vector_KeyPointRN2cv3MatERSt6vectorIS2_INS_8KeyPointESaIS3_EESaIS5_EE", "Java_org_opencv_photo_Photo_detailEnhance_11", "icv_p8_ownLinearKernelAA", "icv_h9_ownscDftInv_Prime6_64fc", "_ZN2cv16FileNodeIteratormmEv", "icv_s8_ownpi_WarpAffineSimpleCubic_16u_C3R", "icv_s8_ownResize1Lanczos3_8u", "ippicviScaleC_64f8s_C1R", "icv_h9_ownCalcBorderR4Lanczos2_32f", "_Z19Mat_to_vector_floatRN2cv3MatERSt6vectorIfSaIfEE", "icv_s8_ownscDFTinv_9_scale_32fc", "icv_p8_ownpi_dInterVector_NN_32_C1", "icv_s8_ippsMulC_64f_I", "iwTls_Init", "icv_h9_ippiScaleC_16s8u_C1R", "icv_h9_ippsMul_32f_I", "Java_org_opencv_core_Mat_n_1inv__JI", "icv_h9_ippiSqrIntegral_8u32s_C1R", "icv_p8_ownCopySubpix_32f_C1R_V8", "icv_w7_ownpi_WarpSimpleLinear_32f_C1R", "icv_g9_ippiMirror_32f_C3R", "icv_p8_ownscDftInv_Prime_32fc", "icv_w7_ownNormDiff_L1_8u_C1MR_W7", "icv_n0_own_ipps_dSqrt_W7EPnnn", "icv_g9_ownSS1_73_8u", "icv_w7_ippiCopyMirrorBorder_32s_C4R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_V8", "icv_p8_ownpi_dInterVector_L_16u_C1", "icv_w7_ippiWarpAffineNearest_32f_C4R", "icv_w7_ipMirror45_8uC1R", "icv_w7_ownCalcBorderR3Linear8u", "ippicviMean_32f_C4R", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_14", "_Z21vector_Point3i_to_MatRSt6vectorIN2cv7Point3_IiEESaIS2_EERNS0_3MatE", "icv_p8_ownRow1Antialiasing_16u", "icv_s8_ownSS1vertical_32f", "icv_s8_ownNormRel_L2_8u_C3CMR_V8", "_ZN2cv3minEdRKNS_3MatE", "icv_w7_ippiMinIndx_16u_C1R", "icv_p8_ippiConvert_16u8u_C1R", "_ZN2cv23evaluateFeatureDetectorERKNS_3MatES2_S2_PSt6vectorINS_8KeyPointESaIS4_EES7_RfRiRKNS_3PtrINS_9Feature2DEEE", "icv_p8_ownippiThreshold_GV_32f_C4", "icv_w7_ippiSet_32s_C4MR", "icv_p8_owns_crRadix4InvNorm_32f", "icv_s8_ownBuildFilterAA_32f", "icv_p8_ownpi_Histogram_BS_32f_C1R", "icv_g9_owniSet_8u_C4MR", "icv_h9_ownpi_NormL1Rel_32f_C1R", "icv_p8_ownsAdd_8u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_W7_sym", "icv_g9_ippiMorphOpen_16u_C1R_L", "icv_s8_owniFilterPrewittHorizBorder2_8u16s_C1R", "icv_p8_ownResize3Linear16s", "icv_ipp_get_pentium_counter", "_ZN2cv5instr8NodeDataaSERKS1_", "_ZNK2cv17CommandLineParser10getByIndexEibiPv", "icv_p8_ownpi_NormL2_32f_C1R", "icv_p8_ippiMorphGetSpecSize_L", "iwiSetUniform", "icv_g9_ownpi_NormL1Rel_16u_C1R", "icv_g9_owniScaleC_32f16s_C1R_acc", "icv_w7_ippiNormRel_Inf_8u_C1R", "icv_p8_ippsAtan2_32f_A21", "icv_g9_ownCalcBorderR4Lanczos3_32f", "icv_s8_owniCopy32s_C4P4_W7_NT", "icv_w7_ippiFilterMedian_16s_C3R_3x3_A6", "icv_p8_ippiResizeAntialiasingCubicInit_L", "icv_h9_piFilter_8u_C1R", "icv_h9_ownResize4Cubic16u", "icv_p8_ownLaplRow5x5_8u_C3", "_ZNK2cv9SparseMat6copyToERNS_3MatE", "icv_w7_ippiWarpAffineCubic_16u_C1R", "ippicviResizeLinear_16u_C3R_L", "iwiFilterScharr", "own_ipps_sCos_SC_LA", "icv_s8_owns_BitRev2_8", "_ZN2cv30createLMeDSPointSetRegistratorERKNS_3PtrINS_19PointSetRegistrator8CallbackEEEidi", "icv_g9_ownSS3_32f", "icv_g9_ownpi_WarpAffine_L_Repl_8u_C1", "icv_p8_piGradientVectorParams", "icv_g9_ownsMinEvery_64f_AVX", "icv_h9_ownippiFilterMedian_16s_C1R_3x3", "icv_s8_ownpi_WarpAffine_C_Const_16s_C4", "icv_w7_owns_zBitRev1_Blk", "icv_g9_ownpi_NormL1Diff_32f_C1R", "icv_g9_ownSS1vertical_16u", "_ZNK2cv10softdoubleltERKS0_", "Java_org_opencv_android_Utils_nMatToBitmap", "icv_s8_ippiResizeSuper_32f_C4R_L", "icv_g9_ownCalcBorderR3Lanczos2_8u", "icv_g9_ownFilterColumn32f_16u_C1R_g9e9", "icv_s8_ippiMinMaxIndx_32f_C1R", "icv_g9_ownscDFTfwd_14_32fc", "icv_h9_ippiNormRel_L2_32f_C1MR", "icv_p8_ownpi_WarpAffine_L_Mem_16s_C3", "icv_s8_owns_rFFT_2_scale_32f", "icv_s8_ippiNorm_L2_16u_C3CMR", "icv_p8_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "icv_s8_ippiCopyMirrorBorder_8u_C3IR", "Java_org_opencv_ml_LogisticRegression_load_11", "cvCbrt", "icv_p8_owniScaleC_8s16u_C1R_acc", "icv_h9_innerCommonLoopW3_8u32f_C3IR", "icv_h9_ownsSub_8u", "icv_w7_ownpi_dInterVectorClip_NN_32_AC4", "Java_org_opencv_ml_DTrees_load_11", "icv_p8_ippiThreshold_GTVal_8u_C1R", "icv_p8_owniGetRectLeftBF_32f_C3R", "icv_s8_piFilterBoxBorder_32f_C1IR_1_v8u8_NA", "icv_h9_ippiCopy_32s_C3MR", "icv_s8_ippiScaleC_32s8u_C1R", "icv_w7_owniSet_32f_C4_W7", "Java_org_opencv_dnn_Dnn_readNetFromCaffe_11", "_ZNK3tbb8internal34allocate_additional_child_of_proxy4freeERNS_4taskE", "icv_w7_ownpi_NormL2Rel_16s_C1R", "icv_p8_ippsConj_64fc", "icv_g9_ippiResizeGetSize_L", "Java_org_opencv_features2d_GFTTDetector_setMinDistance_10", "icv_w7_ownpi_WarpAffine_C_Repl_16s_C1", "icv_w7_ippsSqrtOne", "WebPPictureYUVAToARGB", "icv_h9_ippiTranspose_16u_C4R", "icv_g9_ippsSortAscend_32f_I", "icv_w7_ippiFilterBorder_16s_C4R", "icv_w7_ippsPowOne", "_ZN2cv8calcHistERKNS_11_InputArrayERKSt6vectorIiSaIiEES2_RKNS_12_OutputArrayES7_RKS3_IfSaIfEEb", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_getVocabulary_10", "icv_p8_ownpi_dInterVector_L_16u_C4", "icv_s8_ownpi_WarpSimpleNearest_16s_C1R", "icv_s8_ownpi_OrC_8u_C1R", "icv_s8_ownAddWeighted_16u32f_C1IMR_W7", "cvCalibrateCamera2", "icv_g9_ippiCopySubpixIntersect_8u32f_C1R", "icv_s8_ippsCopy_64f", "cvStereoRectifyUncalibrated", "icv_h9_ownNormDiff_L1_16u_C1MR_HSW", "ippicviMean_32f_C1MR", "icv_g9_owniTransposeWxH_16uC1", "icv_s8_ownpi_FindPerimeter", "icv_p8_ippiCopy_16s_C1C4R", "Java_org_opencv_calib3d_Calib3d_getValidDisparityROI_10", "_ZN2cv3LDAD1Ev", "ippicviConvert_8u32s_C1R", "icv_h9_ownResize4Lanczos3_16s", "ippicviSet_32s_C1MR", "icv_h9_ownsrDFTinv_12_32f", "Java_org_opencv_features2d_AgastFeatureDetector_getType_10", "_ZN3tbb8internal8governor22initialize_rml_factoryEv", "icv_g9_ownRow1Filter14_8u", "icv_w7_owniFilter2_16s_C1R", "icv_p8_ownCalcBorderR1Antialiasing_16u", "_ZN3tbb8internal28affinity_partitioner_base_v36resizeEj", "icv_w7_ownSS1_16u", "icv_p8_ownsrDFTinv_7_64f", "Java_org_opencv_ml_SVM_setKernel_10", "icv_g9_owniResizeSuper_8u_C4R", "icv_h9_ownscDftFwd_Fact4_32fc", "_ZNK2cv8FileNodeixEPKc", "icv_p8_ippsConvert_16s32s", "_ZN2cv18reprojectImageTo3DERKNS_11_InputArrayERKNS_12_OutputArrayES2_bi", "icv_p8_ownpi_dInterVector_NN_16_C4", "icv_h9_ownsSub_16s", "icv_h9_ownippiFilterxBrd32f_16u_C3R", "icv_s8_ippiThreshold_GT_16s_C1R", "_ZN2cv12VideoCaptureC2ERKNS_6StringE", "Java_org_opencv_dnn_Net_enableFusion_10", "icv_w7_ownNormDiff_L1_16u_C1MR_W7", "icv_s8_ippiCopyReplicateBorder_32s_C4R", "icv_h9_owns_sDctFwd_Fft_32f", "icv_p8_ownSS3_43_32f", "cvStartReadRawData", "icv_p8_ippiMorphInit_L", "icv_h9_ippiSet_16u_C1R", "ippicviMul_16s_C1RSfs", "_ZN2cv3hal8split32sEPKiPPiii", "icv_h9_ippiGradientVectorSobel_32f_C1R", "icv_p8_ownpi_WarpAffineSimpleNearest_32f_C1R", "icv_w7_ownpi_WarpAffineSimpleNearest_64f_C4R", "icv_g9_owns_cRadix4FwdNorm_64fc", "_ZNK2cv3ocl6Device7versionEv", "icv_s8_ownpi_WarpAffine_L_Repl_8u_C4", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_W7", "icv_s8_ippiMirror_32f_C1IR", "icv_w7_ownippiFilterMax_32f_Col_AC4", "icv_h9_ownpi_WarpAffine_L_Const_64f_C4", "cvGetSeqElem", "icv_s8_ownemmssfen", "cvAcc", "Java_org_opencv_imgproc_Imgproc_connectedComponents_11", "cvGetCols", "icv_h9_owniAutoCorrFull_C1R", "icv_p8_ippiCopy_32s_C1R", "icv_g9_ownpi_WarpSimpleLinear_16s_C3R", "icv_g9_owniScaleC_32f64f_C1R_acc", "_ZN2cv3dnn19experimental_dnn_v13Net14addLayerToPrevERKNS_6StringES5_RNS1_11LayerParamsE", "icv_s8_owns_initDctFwd_Conv_32f", "Java_org_opencv_photo_Tonemap_process_10", "icv_h9_ownCalcBorderR4Lanczos2_8u", "icv_w7_ownpi_dInterVectorClip_C_8u_P4", "icv_h9_owniFilter_32f_C1R_g9e9_8", "icv_s8_ownpi_WarpAffineSimpleLinear_32f_C1R", "icv_s8_ownNormRel_Inf_32f_C1MR_W7", "icv_p8_ownscDFTfwd_10_scale_32fc", "icv_w7_owniCrossCorrValid_8u32s_C1R", "icv_p8_ownpi_WarpAffine_NN_Const_16s_C1", "_ZN2cv4cuda11resetDeviceEv", "_ZNK2cv3Mat3invEi", "icv_h9_ippiNorm_L2_32f_C3CMR", "_ZN2cv9AlgorithmC1Ev", "icv_h9_ippiFilterMaxBorderGetBufferSize", "icv_s8_ownCalcBorderR3Antialiasing_16u", "icv_s8_owniResizeNearest_32f_C1R", "_ZN2cv8superres15SuperResolution9nextFrameERKNS_12_OutputArrayE", "icv_s8_ippsCopy_32s", "icv_p8_ownSS4_94_8u", "icv_s8_ippiScaleC_64f_C1R", "_ZN2cv12VideoCaptureC1ERKNS_6StringEi", "icv_p8_ownsSinOne", "icv_g9_ippiCopy_16s_C4P4R", "_ZN2cv9SparseMat3HdrC2EiPKii", "icv_h9_ippiCopyReplicateBorder_8u_C4IR", "icv_w7_ownsrDFTfwd_14_scale_32f", "_ZN2cv32createNormHistogramCostExtractorEiif", "cvWriteFrame", "icv_h9_ownNorm_L1_32f_C1MR_HSW", "_ZN2cv3ocl12PlatformInfoD2Ev", "icv_p8_ownpi_CmpEQ_8u_C1R", "_ZN2cv5Mutex6unlockEv", "icv_h9_ownpi_SimpleRotate_32f_C4R", "icv_p8_owniFilter_32f_C3R_v8u8_6NA", "icv_h9_owniScaleC_16u16u_C1R_fst", "icv_w7_ownApplyHaarClassifierAllImg8Pix_dw_W7", "icv_s8_ownpi_WarpSimpleLinear_64f_C1R", "icv_p8_ippiCopy_16s_C1C3R", "icv_g9_ownpi_WarpSimpleCubic_32f_C4R", "icv_s8_owns_BitRev2_C", "icv_p8_owniFilter_32f_C1R_v8u8_5NA", "ippicviSwapChannels_16u_C4C3R", "Java_org_opencv_core_Core_SVDecomp_11", "icv_p8_ownscDFTfwd_7_scale_32fc", "_ZN2cv3PCAC1ERKNS_11_InputArrayES3_ii", "cvMultiplyAcc", "icv_s8_ownpi_WarpAffine_L_Mem_32f_C4", "icv_p8_owniFilter_32f_C4R_v8u8_1", "icv_h9_ippiCannyBorder_8u_C1R", "icv_p8_ownippiFilterMedianCross_16s_C1R_5x5", "icv_p8_ownscrDftInv_Fact2_64f", "icv_h9_owniCopyMirrorBorder_32s_C1R_L", "icv_p8_ownpi_WarpAffine_C_Transp_16s_C1", "icv_g9_ownscDFTfwd_3_64fc", "ippicvsDFTInit_C_32fc", "Java_org_opencv_objdetect_HOGDescriptor_get_1derivAperture_10", "icv_w7_ownsrDftInvRecombine_32f", "_ZN2cv8multiplyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi", "icv_h9_owniScaleC_32f8u_C1R_fst", "icv_s8_ippiHistogram_32f_C1R", "icv_h9_ownpi_dInterPoint_CR_PixelB_32f", "icv_h9_owniScaleC_8u8s_C1R_fst", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_5x5_G9E9cn", "icv_h9_ownResize3Lanczos2_16u", "_ZN2cv5splitERKNS_11_InputArrayERKNS_12_OutputArrayE", "ippicviMean_16u_C3R", "icv_h9_owncvGetCacheSize", "ippicviMinMaxIndx_8u_C1MR", "icv_h9_owniFilter_32f_C1R_g9e9_5", "icv_w7_ippiWarpAffineCubic_16s_C3R", "Java_org_opencv_objdetect_HOGDescriptor_delete", "cvInitMatHeader", "cvGetOptimalNewCameraMatrix", "icv_w7_ownAdd_8u32f_C1IR_W7", "icv_s8_owns_cFftFwd_Large_32fc", "icv_p8_ownpi_SimpleRotate_16s_C3R", "Java_org_opencv_ml_ParamGrid_create_11", "icv_g9_ownsrDFTfwd_15_64f", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERSt6vectorINS0_13ImageFeaturesESaIS6_EE", "icv_h9_ownscDFTinv_6_32fc", "icv_s8_ownResize1Lanczos2_32f", "_ZN2cv11recoverPoseERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_RKNS_17_InputOutputArrayE", "Java_org_opencv_features2d_BRISK_create_13", "icv_w7_ownippiFilterMedianVert_16s_C4R_1x5", "icv_p8_owns_sDctInv_Conv_32f", "icv_g9_ippsSortRadixIndexAscend_16s", "icv_p8_ownSS3_41_8u", "Java_org_opencv_ml_LogisticRegression_setTrainMethod_10", "icv_p8_owniResizeSuper_16s_C1R", "icv_h9_owniFilterBilateralR1_InMem_8u_C1R", "icv_w7_ownscDftFwd_Fact13_32fc", "icv_g9_ippiCopy_16u_C1MR", "Java_org_opencv_core_Core_bitwise_1or_11", "icv_w7_ippiSet_32s_C3MR", "icv_h9_ownippiFilterMin_16u_Col_h9l9", "icv_p8_ownResize4Nearest16u", "icv_h9_owniConvert_8s16u_avx2", "icv_s8_ownippiFilterMedianHoriz_16s_BC4R_5x1", "Java_org_opencv_ml_ANN_1MLP_getLayerSizes_10", "_ZN2cv8superres13convertToTypeERKNS_4UMatEiRS1_S4_", "icv_h9_ownpi_SmoothPel", "icv_h9_ownpi_WarpAffine_L_Mem_16u_C1", "icv_g9_ownFilter_32f_C4R_g9e9", "icv_g9_owniFilterBilateralR1_InMem_8u_C3R", "_ZN2cv5utils5trace7details6RegionC1ERKNS3_21LocationStaticStorageE", "icv_h9_ippiFilterMedianBorder_16u_C1R", "ippicviWarpAffineGetSize", "_ZN3tbb8internal6market13global_marketEbjj", "icv_s8_ownpi_WarpAffineSimpleNearest_16u_C4R", "icv_s8_ownSS4_98_32f", "icv_g9_ownpi_WarpSimpleLinear_8u_C1R", "icv_g9_owniScaleC_8s32f_C1R_acc", "_ZNK3tbb10interface78internal15task_arena_base13internal_waitEv", "icv_p8_ownpis_Max_16s_C4", "icv_g9_owniScaleC_8u64f_C1R_fst", "icv_s8_ownSS3_32f", "icv_s8_owniResizeCubic_16s_C4R", "Java_org_opencv_calib3d_StereoBM_setPreFilterSize_10", "icv_g9_owns_cFFTfwd_32_64fc", "icv_h9_ownscDFTinv_15_scale_64fc", "icv_g9_ownFilterBoxBorderInMem7x7_8u_C1R", "icv_g9_ownpi_WarpSimpleCubic_8u_C1R", "icv_p8_ownFilterBoxBorder_8u_C4IR", "icv_s8_ippiCopyReplicateBorder_16s_C1R", "ippicviSet_32s_C3MR", "_ZN2cv7directx23convertToD3D11Texture2DERKNS_11_InputArrayEP15ID3D11Texture2D", "icv_w7_ownpi_WarpSimpleNearest_8u_C4R", "icv_w7_ippiCopyConstBorder_32s_C3R", "icv_w7_ippiThreshold_GTVal_16s_C1IR", "icv_g9_ippiFilterBoxBorder_8u_C4R", "icv_p8_ownpi_WarpAffineSimpleNearest_8u_C3R", "icv_s8_ippiCopy_32f_C3C1R", "icv_g9_ownscDFTinv_3_64fc", "_ZN2cv9videostab16MotionFilterBase9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_", "icv_h9_piFilterBoxBorder_32f_C1R_px", "icv_w7_ippiDilate_32f_C4R_L", "icv_s8_owniResizeLinear_16u_C1R", "icv_w7_ownRow4AA_32f", "icv_g9_ownRow1Filter14_16s", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_W7", "icv_w7_ownsSqrtOneF", "icv_w7_ipMirror135_8uC1R", "_ZN2cv3hal6cmp16uEPKtjS2_jPhjiiPv", "icv_p8_owniCopyMirrorBorder_32s_C4IR", "icv_s8_ippiSet_16u_C1R", "icv_h9_ownscDFTfwd_11_64fc", "icv_p8_owniCopyMirrorBorder_16s_C1R", "icv_g9_ownSS4_31_16u", "icv_g9_ownsMinEvery_32f_AVX", "icv_s8_Angle_16s", "icv_g9_ippiSum_8u_C3R", "icv_s8_ownpi_WarpSimpleLinear_16u_C3R", "icv_w7_ippiResizeNearest_16u_C3R_L", "Java_org_opencv_dnn_Net_connect_10", "icv_g9_owns_rFFTfwd_32_scale_64f", "icv_p8_ippiTranspose_32s_C1IR", "icv_h9_owns_cRadix4InvNorm_32fc", "icv_s8_owniFlip_8u_C1", "icv_w7_ownsConj_16sc_I_W7", "icv_w7_owns_BitRev2_S", "icv_h9_owniFilterBilateralR2_InMem_32f_C3R_L", "icv_g9_ownWarpSimple4Nearest16u", "_ZNK2cv13HOGDescriptor6detectERKNS_3MatERSt6vectorINS_6Point_IiEESaIS6_EERS4_IdSaIdEEdNS_5Size_IiEESE_RKS8_", "_ZN2cv12KalmanFilter7predictERKNS_3MatE", "icv_s8_ownpi_OrC_32s_C4R", "_ZN2cv3dnn19experimental_dnn_v13Net8setParamENS1_9DictValueEiRKNS_3MatE", "icv_w7_ownpi_CountInRange_32f_C3R", "_ZN2cv6detail17OrbFeaturesFinderC2ENS_5Size_IiEEifi", "icv_p8_ownippiFilterMedian_8u_C4R_5x5", "_ZNK2cv21DetectionBasedTracker31calcTrackedObjectPositionToShowEi", "icv_g9_ippiConvert_8s16u_C1Rs", "icv_g9_owniCopyMirrorBorder_8u_C1R_L", "icv_g9_ippiColorToGray_32f_C3C1R", "Java_org_opencv_objdetect_HOGDescriptor_get_1nbins_10", "icv_s8_ownpi_Histogram_FS_32f_C3R", "icv_g9_owniFilterMedianHoriz5x1_32f_C1R", "Java_org_opencv_imgproc_Imgproc_pyrDown_12", "icv_w7_ownscDftInv_Fact2_32fc", "_ZN2cv3dnn19experimental_dnn_v15LayerC2Ev", "icv_p8_ownSS1_52_8u", "_ZN2cv3ogl20convertToGLTexture2DERKNS_11_InputArrayERNS0_9Texture2DE", "icv_h9_ippiXor_8u_C1R", "icv_s8_ownippsCnvrt_16s32f", "icv_s8_ippsDotProd_64f", "icv_g9_ownResize3Lanczos3_16s", "icv_h9_ownscDFTfwd_6_64fc", "icv_s8_ippsSortRadixDescend_16s_I", "icv_g9_ownscDFTfwd_7_scale_64fc", "Java_org_opencv_core_Mat_n_1size", "icv_g9_ippiSqrDistanceNorm_8u32f_C1R", "icv_w7_ownscDFTfwd_12_32fc", "icv_w7_ippiResizeSuper_8u_C1R_L", "icv_p8_ippiMirror_32s_C3R", "Java_org_opencv_imgproc_Imgproc_clipLine_10", "ippicviTranspose_32s_C3IR", "icv_p8_ownippiFilterMedianCross_16u_C3R_5x5", "icv_p8_ownippiFilterMedianVert_16u_C4R_1x3", "_ZN2cv6formatEPKcz", "icv_s8_ownLaplRow5x5_16s_C3", "icv_h9_ippiMean_StdDev_16u_C1MR", "icv_g9_ownpi_WarpAffine_C_Transp_16u_C4", "icv_g9_ippiSwapChannels_8u_C4R", "icv_p8_ownpi_WarpAffine_NN_Const_64f_C1", "icv_h9_ownSS4_73_16u", "icv_p8_ippsMaxEvery_32f", "icv_s8_ippsDFTGetSize_R_64f", "icv_w7_ownResize1Nearest16u", "icv_p8_owns_sBitRev1_Blk", "icv_p8_ownSS1_31_16s", "icv_p8_ippsSortRadixIndexGetBufferSize", "icv_w7_owniConvert_32f8u_W7", "_ZN2cv3dnn19experimental_dnn_v114blobFromImagesERKSt6vectorINS_3MatESaIS3_EEdNS_5Size_IiEERKNS_7Scalar_IdEEb", "icv_h9_ownippiFilterMedian_16u_C1R_3x3", "icv_w7_ownsSubC_32f", "icv_p8_ownRow1Linear64f", "Java_org_opencv_imgproc_Imgproc_getRectSubPix_10", "icv_s8_owniGetRectComBF_8u_C1R", "icv_s8_ownpis_Max_8u_AC4", "Java_org_opencv_dnn_DictValue_DictValue_12", "icv_w7_ownscDFTfwd_14_64fc", "icv_s8_ippiTrueDistanceTransform_8u32f_C1R", "icv_s8_ownpi_WarpAffineSimpleLinear_8u_C4R", "icv_s8_ownsrDFTinv_9_32f", "ippicviMean_16s_C4R", "icv_w7_owniResizeLinear_16s_C3R", "_ZN2cv4UMat4onesEiii", "icv_p8_owniGetRectComBF_8u_C3R", "icv_h9_owniCopyMirrorBorder_8u_C3R", "ippicviDilate_32f_C3R_L", "icv_h9_ownMean_StdDev_32f_C1R_HSW", "icv_p8_ownSS1_a7_16u", "icv_p8_ownNormRel_L1_8u_C1MR_W7", "icv_w7_ownNormRel_Inf_8u_C3CMR_W7", "icv_g9_owns_getSizeDct_Fft_32f", "icv_h9_ippiMorphGetBufferSize_L", "icv_g9_ownSS3_98_8u", "Java_org_opencv_ml_SVM_setTermCriteria_10", "Java_org_opencv_imgproc_Imgproc_boxPoints_10", "icv_s8_piFilterBoxBorder_32f_C1R_1_v8u8_A", "_ZN2cv9patchNaNsERKNS_17_InputOutputArrayEd", "icv_g9_ownFilterRow32f_8u_C3R_g9e9", "icv_n0_own_ipps_dSinCos_G9EPnnn", "ownSharedFree", "icv_p8_ippiThreshold_GTVal_16s_C1R", "cvGetTrackbarPos", "icv_w7_ippiErode_32f_C3R_L", "icv_s8_owns_cFftFwd_CoreMT_64fc", "_ZN2cv3dnn19experimental_dnn_v19LSTMLayer6createERKNS1_11LayerParamsE", "icv_s8_ippsDFTInv_CToC_64fc", "ippicviNormDiff_L1_16u_C1MR", "icv_h9_ownscDFTinv_10_64fc", "icv_w7_ippiMirror_32s_C1R", "icv_p8_ownsConj_64fc_I_T7", "cvCalcCovarMatrix", "icv_h9_ippiNorm_L1_16u_C1MR", "_ZN2cv13detailEnhanceERKNS_11_InputArrayERKNS_12_OutputArrayEff", "iwTls_Set", "_ZN2cv6detail12DpSeamFinder16computeGradientsERKNS_3MatES4_", "icv_p8_ippsSortRadixIndexDescend_16s", "icv_s8_ownApplyHaarClassifierAllImg8Pix_dw_W7", "icv_g9_ippiAddWeighted_32f_C1IMR", "icv_p8_ownResize1Linear16u", "icv_p8_ownSS1_72_32f", "_ZN2cv6detail18SphericalWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RNS_4cuda6GpuMatES9_", "_Z19vector_uchar_to_MatRSt6vectorIhSaIhEERN2cv3MatE", "icv_h9_ippiAnd_8u_C1R", "icv_p8_owniFilterPrewittHorizBorder2_8u16s_C1R", "icv_w7_ownResize1Lanczos2_16s", "icv_g9_ippiFilterScharrVertMaskBorderGetBufferSize", "icv_p8_ownsGetSizeDftConv_32f", "icv_g9_owniCopyBF_32f_C3R", "icv_p8_ippiCopyMirrorBorder_16u_C4R", "ippicvsDFTGetSize_R_32f", "icv_p8_owns_sDctFwd_PostMul_32f", "icv_g9_ippiDCTFwdInit_32f", "icv_w7_ownpi_dInterVectorClip_NN_16_P4", "icv_h9_owniFilter32f_16u_C3R_g9e9_7", "Java_org_opencv_core_Core_mulTransposed_11", "icv_w7_ownSumSq_16u_C3CR_W7", "icv_w7_ownscDFTinv_6_scale_64fc", "ippicviCopy_32f_AC4C3R", "icv_s8_ownpi_WarpAffine_CR_16u_C4", "icv_s8_ownRow1Antialiasing_8u", "_ZNK2cv7MatExpr3rowEi", "icv_w7_ippiResizeGetSrcRoi_L", "icv_w7_ownscDFTfwd_15_32fc", "_ZN2cv6detail27BundleAdjusterAffinePartial9calcErrorERNS_3MatE", "icv_p8_owns_getSizeDct_Conv_32f", "icv_h9_ippsMul_64f_I", "_ZNK2cv8Subdiv2D6Vertex6isfreeEv", "ippicviAddSquare_16u32f_C1IMR", "icv_p8_owns_cFftFwd_Fact4_32fc", "icv_w7_ownCanny_32f8u_C1R_2_16u_W7", "icv_p8_ownpi_WarpAffine_NN_Mem_32f_C4", "icv_s8_ownpi_WarpAffineCubic_16u_C4R", "icv_w7_ippiMorphGradient_32f_C1R_L", "icv_s8_ownscDftInv_Prime8_64fc", "icv_w7_ownpi_AndC_16u_C1R", "icv_p8_ippiSet_32s_C1R", "icv_s8_ippiNormRel_Inf_32f_C1R", "icv_h9_ownscDFTfwd_10_scale_64fc", "icv_w7_ippiMin_32f_C1R", "icv_h9_ippiCopy_16s_C4MR", "icv_h9_ippiWarpAffineCubic_32f_C4R", "cvCreateGraph", "icv_p8_owns_cRadix4FwdNorm_32fc", "icv_p8_ownpi_WarpAffine_L_Mem_8u_C1", "Java_org_opencv_features2d_KAZE_setThreshold_10", "icv_g9_ownSS3_52_16s", "icv_w7_ownpi_SimpleRotate_16s_C3R", "icv_h9_ippiMorphClose_8u_C1R_L", "icv_w7_ippiCopy_32s_C1MR", "icv_p8_ownscDftInv_Prime13_32fc", "_ZN2cvdvERKNS_3MatERKNS_7MatExprE", "Java_org_opencv_objdetect_CascadeClassifier_empty_10", "icv_s8_ownsrDFTinv_15_scale_64f", "cvRectangleR", "icv_w7_ippiCopyMirrorBorder_8u_C3IR", "icv_h9_owniConvert_16s32f_avx2", "icv_w7_ippiNormDiff_L2_16s_C1R", "icv_h9_ippsConvert_32f32s_Sfs", "icv_w7_ownsrDftFwd_PrimeFact_32f", "icv_g9_owncvGetMaxNumThreads", "icv_s8_ownSum_32f_C1MR_W7", "icv_h9_ownSS4_72_8u", "_ZN2cv8Subdiv2D6VertexC1Ev", "icv_w7_ippiFilterBoxBorder_16u_C1R", "icv_g9_ownpi_WarpAffine_C_Repl_32f_C4", "icv_h9_ownRow1Linear16u", "icv_h9_owniFilter32f_8u_C4R_g9e9_6", "icv_p8_ippiConvert_32f8u_C1RSfs", "icv_w7_ownscDftFwd_Prime7_64fc", "icv_w7_ownRow1Linear8u", "icv_w7_ippiCopyMirrorBorder_32f_C4R", "icv_g9_ownpi_WarpAffineSimpleCubic_8u_C3R", "icv_s8_ownippiFilterxBrd_16s_C1R", "icv_p8_ippiFilterMin_32f_Col_AC4_A6", "icv_w7_ownRow4Cubic32f", "icv_g9_owniFilterBilateralR1_InMem_32f_C1R_L", "icv_s8_ownCalcBorderR1Lanczos2_32f", "_ZN2cv6detail21BlocksGainCompensator4feedERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_4UMatESaIS9_EERKS2_ISt4pairIS9_hESaISF_EE", "icv_n0_own_ipps_dSinCos_W7LAynn", "ippicviCopy_16u_C1C3R", "icv_w7_ownippiFilterMedian_16s_BC4R_5x5", "icv_h9_owniFlip_16u_C1", "icv_g9_ippiDilate_16u_C1R_L", "icv_s8_ownpi_NormInfRel_16s_C1R", "icv_n0_own_ipps_dRound_W7HAynn", "icv_w7_ownAbsDiffC_16u_C1R_W7", "icv_g9_ippiCopyMirrorBorder_8u_C3R_L", "Java_org_opencv_core_Core_split_10", "icv_h9_ownSS3vertical_16s", "icv_p8_owniCopy8uas", "icv_g9_ippiMirror_16s_C1R", "Java_org_opencv_imgproc_Imgproc_contourArea_11", "icv_g9_owniScaleC_64f8s_C1R_fst", "Java_org_opencv_core_Mat_n_1copyTo__JJJ", "icv_p8_ownCalcBorderR3Lanczos3_16u", "icv_h9_ippiMean_8u_C1MR", "icv_w7_ownWarpSimple1Nearest16s", "icv_w7_owniAutoSSFull_C1R", "icv_p8_ownHipass5x5Frs_32f", "Java_org_opencv_core_Core_min_10", "Java_org_opencv_imgproc_Imgproc_dilate_10", "icv_s8_ippiFilterSobelVertBorder_16s_C1R", "icv_p8_ownpi_HistogramEven_16s_C1R", "icv_g9_ippiSum_8u_C1R", "_ZN2cv17DescriptorMatcher5trainEv", "icv_p8_owniCopyMirrorBorder_8u_C4R", "icv_s8_ownpi_dInterVector_L_16u_P4", "_ZN2cv3hal5min8sEPKajS2_jPajiiPv", "icv_g9_ownpi_WarpAffine_L_Repl_8u_C3", "cvMemStorageAlloc", "icv_h9_ippiNormDiff_L1_32f_C1MR", "icv_h9_ownSS1_54_16u", "icv_s8_ownsrDFTfwd_6_64f", "icv_h9_ownPutPxl_8u", "icv_h9_Moments16uC1R_64f_FAST", "icv_g9_ownscDFTinv_7_scale_64fc", "_ZNK2cv3ocl6Device23nativeVectorWidthDoubleEv", "icv_g9_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_s8_owniFlipCopy_32s_C3", "icv_s8_ownRow3Cubic8u", "icv_g9_ownsrDFTinv_13_scale_64f", "icv_p8_ippiNorm_L2_16u_C3CMR", "icv_p8_ownippiThreshold_8u_AC4", "icv_w7_ownResize4Cubic32f", "icv_p8_ippiCompare_16u_C1R", "icv_p8_owns_rFFTinv_16_scale_32f", "icv_w7_ippiScaleC_16s32s_C1R", "icv_w7_ownpi_XorC_8u_AC4R", "icv_h9_ippiResizeLanczos_16u_C3R_L", "icv_p8_ippiNormRel_L1_16s_C1R", "icv_h9_piFilterRow_32f_C1R_g9e9", "icv_s8_ownippiFilterMedianCross_16u_C1R_3x3", "icv_g9_ippiDFTInit_R_32f", "ippicviColorToGray_32f_C3C1R", "icv_w7_ownpi_WarpAffine_L_Mem_16u_C1", "icv_s8_ownCalcBorderR1Cubic8u", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringES4_", "icv_s8_owniCopy8u_C4C1_W7", "icv_g9_ownSS4_8u", "icv_n0_own_ipps_dLn_G9HAynn", "icv_s8_ownscDftFwd_Prime3_32fc", "icv_h9_ippiResizeAntialiasing_8u_C4R_L", "icv_h9_ippiCrossCorrNorm_32f_C1R", "icv_h9_ippiWarpAffineNearest_8u_C3R", "icv_p8_ownippiFilterMedianHoriz_16s_BC4R_5x1", "icv_p8_ownscDFTfwd_10_scale_64fc", "icv_p8_ippiNormRel_Inf_8u_C1MR", "icv_h9_owns_sDctInv_Dir_32f", "Java_org_opencv_imgproc_Imgproc_phaseCorrelate_11", "icv_g9_owns_cFFTinv_64_64fc", "icv_s8_ownSS1_81_8u", "icv_w7_owniGetRectBottom_32f", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkD1Ev", "icv_s8_ownsMul_8u_PosSfs", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_X", "icv_h9_ownSq_32f_C1MR_HSW", "icv_s8_owniResizeAntialiasing_8u_C4R_L", "icv_p8_owniTplNormMean_32f_C1R", "icv_p8_ippiMorphGradient_8u_C4R_L", "icv_g9_ippiAdd_32f_C1R", "icv_h9_ownpi_WarpAffineNearest_16u_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_3x3_V8", "icv_g9_ippiIntegral_32f_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_getNSamples_10", "icv_p8_gres_NormL2Diff_8u_C1R", "icv_h9_ownpi_WarpAffine_NN_Mem_16s_C4", "_ZN2cv11VideoWriterD2Ev", "icv_s8_ownLaplace3x3Row_32f_C1", "icv_g9_ippiResizeAntialiasingLanczosInit_L", "icv_g9_ippiNormRel_Inf_32f_C1MR", "icv_s8_owniGetRectTopBF_32f_C3R", "_ZN10__cxxabiv121__vmi_class_type_infoD2Ev", "icv_h9_ownNormRel_L2_16u_C1MR_HSW", "icv_w7_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK", "Java_org_opencv_ml_SVM_setC_10", "icv_h9_ippiNorm_L1_16s_C1R", "icv_w7_ownNorm_L1_8u_C1MR_W7_B", "icv_w7_ownsGetSizeTabDftInvRec_64f", "icv_h9_ippiHistogram_8u_C1R", "icv_p8_ownscDftFwd_Fact3_64fc", "icv_g9_ownscDFTinv_5_scale_64fc", "icv_g9_ownscDFTfwd_6_scale_64fc", "icv_h9_ippiWarpAffineNearest_8u_C4R", "icv_p8_ownSS4_21_32f", "icv_h9_ownSS4_73_16s", "_ZN2cv3hal10invSqrt64fEPKdPdi", "icv_g9_ippiResizeLinear_32f_C4R_L", "icv_s8_ownscDftInv_Prime6_32fc", "icv_h9_owniFilterBilateralR1_InMem_8u_C1R_px", "icv_n0_own_ipps_sExp_S9LAynn", "icv_h9_ownsrDFTfwd_7_scale_64f", "icv_h9_ownpi_CmpLT_32f_C1R", "icv_p8_ownRow1Filter8_8u", "icv_p8_ippsCopy_64f", "icv_h9_ownpi_WarpAffine_C_Const_8u_C3", "icv_h9_ippiResizeLanczos_16u_C1R_L", "icv_h9_ownpi_WarpAffine_L_Const_32f_C1", "icv_g9_ownippsCnvrtFin_32f8s_AVX", "icv_h9_ownscDftInv_Prime3_64fc", "icv_s8_owniResizeAntialiasing_16u_C4R_L", "icv_h9_ownpi_WarpSimpleCubicInit", "icv_s8_ippsInvSqrt_64f_A50", "_ZN2cv12seqPushFrontEP5CvSeqPKv", "icv_h9_ippsZero_32s", "icv_h9_ownpi_SimpleRotate_64f_C3R", "ippicvsConvert_64f32f", "icv_h9_ippiDCT8x8Fwd_32f_C1", "icv_p8_ownpi_WarpAffine_C_Const_8u_C1", "icv_g9_owniSDDiv_32f_C1IR", "icv_p8_owns_getSizesTwd_Large_32f", "icv_w7_ownpi_WarpAffine_L_Const_64f_C1", "WebPSetWorkerInterface", "_ZNK2cv4cuda10DeviceInfo12regsPerBlockEv", "icv_p8_ippiSwapChannels_16u_C4C3R", "icv_s8_ownscrDftInv_Fact5_32f", "_ZN2cv9Feature2DD2Ev", "icv_p8_ippiMinEigenValGetBufferSize_32f_C1R", "icv_h9_ownSS3_31_16u", "_ZN2cv3dnn19experimental_dnn_v15LayerC1ERKNS1_11LayerParamsE", "icv_s8_ippiCompare_16u_C1R", "icv_s8_ippiGradientVectorScharr_32f_C1R", "icv_s8_ippiCopy_8u_C4R", "icv_w7_ownpi_dInterVectorClip_L_16u_C1", "icv_w7_ownippsMagn_16s_Sfs", "_ZN2cv3ocl12PlatformInfoC2ERKS1_", "icv_g9_ippiMorphClose_32f_C3R_L", "cvXorS", "_ZN2cv7directx3ocl38initializeContextFromDirect3DDevice9ExEP18IDirect3DDevice9Ex", "icv_p8_ippiFilterBorder_8u_C3R", "_ZN2cv3hal11normHammingEPKhii", "iwiCopy", "icv_p8_ownippiFilterMax_8u_Col_AC4", "_ZN2cv9BFMatcher15radiusMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "icv_w7_ownpi_XorC_16u_AC4R", "icv_p8_ownscDftFwd_Prime13_64fc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_W7", "icv_h9_owns_rFFTfwd_4_scale_32f", "icv_h9_ownSS4_94_32f", "Java_org_opencv_core_Core_compare_10", "icv_h9_ownFilterBoxBorderInMem_8u32f_C3IR", "icv_p8_ownSS1_81_16u", "icv_w7_ippiMean_32f_C1MR", "icv_g9_ippiHistogram_32f_C1R", "icv_w7_ownscDFTinv_14_scale_32fc", "_ZN2cv3hal10normL2Sqr_EPKfS2_i", "icv_g9_ippsFFTFwd_RToPack_32f", "icv_s8_ownpi_WarpAffine_NN_Const_8u_C4", "icv_s8_ownpi_idInterPoint_C_Pixel_8u", "ippicvsSortRadixIndexDescend_32s", "icv_p8_ippiScaleC_64f32s_C1R", "icv_s8_ippsSqrt_32f_A21", "_ZN2cv3MatC2ERKSt6vectorIiSaIiEEiPvPKj", "_ZNK2cv2ml6KDTree14findOrthoRangeERKNS_11_InputArrayES4_RKNS_12_OutputArrayES7_S7_", "icv_h9_ippiMirror_32f_C3IR", "_ZN2cv22SparseMatConstIteratorppEv", "icv_h9_owniFilter32f_16u_C1R_g9e9_4", "icv_w7_ippiNormDiff_Inf_32f_C3CMR", "Java_org_opencv_photo_Photo_stylization_10", "icv_h9_ippiMorphGradient_16s_C1R_L", "Java_org_opencv_videoio_VideoWriter_open_12", "icv_w7_ownsrDFTfwd_11_32f", "Java_org_opencv_core_Core_hconcat_10", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERNS0_13ImageFeaturesE", "icv_w7_owniCrossCorrNorm_Valid_32f_C1R", "Java_org_opencv_imgproc_Imgproc_integral3_11", "_ZNK3tbb10interface78internal15task_arena_base16internal_executeERNS1_13delegate_baseE", "Java_org_opencv_imgproc_CLAHE_collectGarbage_10", "_ZNK2cv13HOGDescriptor17getDescriptorSizeEv", "icv_h9_ippiFilterMinBorderGetBufferSize", "icv_g9_ownRow1Lanczos3_8u", "icv_w7_ownpi_NormL1Diff_16s_C1R", "_ZN2cv3ocl8PlatformC2ERKS1_", "_ZN2cv3ogl6renderERKNS0_6ArraysERKNS_11_InputArrayEiNS_7Scalar_IdEE", "Java_org_opencv_calib3d_StereoSGBM_setP2_10", "icv_g9_ippiWarpAffineLinear_16u_C1R", "icv_s8_ownpi_WarpAffine_C_Const_32f_C1", "icv_h9_ippiScaleC_64f_C1IR", "Java_org_opencv_imgcodecs_Imgcodecs_imencode_11", "icv_p8_ownpi_Max_16s_C3R", "icv_s8_owniResizeSuper_32f_C3R", "icv_g9_owns_cFFTinv_32_scale_32fc", "icv_w7_owniConvert_16u16s_ccode", "icv_s8_ownAFilterRow_8u_C1R", "icv_s8_ownpi_WarpAffine_L_Repl_64f_C4", "icv_p8_ownpi_dInterVectorClip_C_32f_P", "icv_g9_L1magnitude_32f", "icv_n0_own_ipps_dSin_G9LAynn", "icv_s8_ownscrDftFwd_Fact4_64f", "iwiRoi_GetMinTileSize", "icv_p8_ownippiFilterMin_16s_Col", "Java_org_opencv_imgproc_Imgproc_applyColorMap_10", "icv_p8_ownpi_getWarpSimpleRect_Mem", "icv_w7_ippiWarpAffineNearest_16u_C3R", "_ZN2cv9videostab14StabilizerBaseC2Ev", "icv_h9_owniResizeAntialiasing_32f_C3R_L", "_ZN2cv8Subdiv2D19getVoronoiFacetListERKSt6vectorIiSaIiEERS1_IS1_INS_6Point_IfEESaIS7_EESaIS9_EERS9_", "icv_w7_ownpi_WarpAffineLinear_16u_C4R", "icv_s8_ownpi_NormL2Rel_16s_C1R", "icv_h9_ippiResizeLinear_16s_C4R_L", "icv_s8_ownscDftFwd_Prime5_32fc", "_ZN2cv9videostab17TwoPassStabilizerC2Ev", "icv_g9_ippiHLSToRGB_8u_C3R", "icv_s8_ippiResizeLinear_16u_C3R_L", "Java_org_opencv_core_TickMeter_getTimeMicro_10", "icv_g9_owniGetRectComBF_8u_C3R", "icv_h9_ownRow3Linear16u", "icv_w7_ownpi_WarpAffineLinear_64f_C1R", "icv_w7_ownscDFTfwd_13_scale_64fc", "icv_w7_owniResizeAntialiasingLanczosInit_L", "icv_w7_ippiCopy_32f_C3AC4R", "icv_s8_ownDistanceTransform_3x3_8u_C1R_F_ND", "_ZN2cv3hal5div8uEPKhjS2_jPhjiiPv", "icv_g9_owniConvert_32f8u_ccode", "icv_w7_ownscDftFwd_Fact3_64fc", "cvSetImagesForHaarClassifierCascade", "icv_s8_ownsCosOne", "icv_h9_ownFilter16s_8u_C1R_h9l9", "ippicvGetEnabledCpuFeatures", "icv_g9_owniGetRectTop_32f", "icv_p8_ownpi_WarpAffine_C_Repl_16s_C4", "icv_w7_ownsCopy_8u", "ippicviMorphClose_8u_C3R_L", "Java_org_opencv_features2d_KAZE_setNOctaveLayers_10", "_ZN2cv12VideoCaptureD1Ev", "icv_w7_owniAutoCorr_C1R", "icv_w7_piGradient32f", "icv_w7_ownscDFTfwd_13_scale_32fc", "Java_org_opencv_calib3d_StereoMatcher_getMinDisparity_10", "icv_h9_owns_getSizeTwd_Large_64f", "icv_g9_ippiScaleC_32s_C1R", "icv_w7_ownippsSqrt_16s_ASM", "icv_p8_owniResizeGetBufferSize", "icv_n0_own_ipps_dCos_P8EPnnn", "icv_s8_ownippiFilterMedianCross_16u_C3R_5x5", "icv_h9_ownpi_WarpAffine_NN_Repl_16s_C3", "icv_w7_ownsSet_64sc", "icv_h9_ippiResizeLinear_32f_C3R_L", "icv_w7_ippiConvert_8u16s_C1R", "ippicviMinMax_32f_C1R", "_ZN2cv17CommandLineParser4Impl12apply_paramsERKNS_6StringES4_", "icv_s8_ippiScaleC_64f16u_C1R", "icv_p8_ippiMirror_8u_C4R", "icv_p8_owniScaleC_8u32s_C1R_fst", "icv_p8_ippiRGBToHLS_8u_C3R", "ippicviScaleC_32s_C1IR", "icv_h9_ownRow4Linear64f", "icv_p8_ownResize4Lanczos3_32f", "icv_s8_owniFilter_32f_C4R_v8u8_1NA", "icv_h9_ownpi_WarpAffine_C_Repl_16u_C1", "Java_org_opencv_dnn_Net_forward_12", "icv_h9_ippiMax_16s_C1R", "icv_h9_ownippiFilterMedianCom_8u", "icv_g9_ippiCopy_32f_C3C1R", "ippicviMean_StdDev_32f_C3CR", "icv_p8_ownAddSquare_32f_C1IR_W7", "icv_p8_ownpi_WarpSimpleNearest_64f_C1R", "icv_s8_ownsrDFTinv_15_scale_32f", "icv_s8_ownsGetSizeTabDftFwdRec_32f", "icv_h9_ownippsCnvrtNear_32f16uA_AVX", "icv_w7_ownscrDftFwd_Prime3_64f", "icv_g9_owniScaleC_16s8u_C1R_acc", "icv_h9_ippiWarpAffineLinear_32f_C4R", "icv_g9_ippiMorphBlackhat_32f_C4R_L", "icv_h9_owniResizeSuper_16u_C3R", "icv_w7_ippiCopyReplicateBorder_32s_C4IR", "_ZN2cv17CascadeClassifierD1Ev", "icv_s8_ownscDFTinv_13_scale_64fc", "icv_w7_ippiMean_16s_C1R", "icv_w7_ippiScaleC_8u64f_C1R", "Java_org_opencv_features2d_KAZE_create_10", "icv_g9_ippiTranspose_32s_C3R", "icv_p8_ippiAdd_32f_C1IMR", "_ZN2cv4cuda6GpuMatC2ERKS1_NS_5RangeES4_", "icv_p8_owniResizeLinear_16s_C4R", "Java_org_opencv_photo_TonemapMantiuk_setSaturation_10", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_V8", "icv_p8_ownippiFilterMedian_16u_C4R", "Java_org_opencv_dnn_DictValue_getStringValue_10", "icv_h9_ippiFilterSobelNegVertBorder_8u16s_C1R", "icv_p8_ownNormDiff_L1_32f_C1MR_W7", "icv_n0_own_ipps_dCos_V8LAynn", "icv_g9_ippiCopyReplicateBorder_32s_C1R", "_ZNK2cv7MatExpr1tEv", "icv_p8_ownsSqrtOneF", "icv_s8_ippiSwapChannels_8u_C4R", "icv_s8_ippiCopyConstBorder_16u_C1R", "Java_org_opencv_calib3d_StereoBM_setROI1_10", "icv_p8_ippiSubC_32f_C1R", "icv_h9_ippiMean_32f_C3CMR", "icv_s8_ippiNormRel_Inf_16s_C1R", "icv_w7_ownpi_XorC_8u_C3R", "icv_h9_ippiScaleC_16u_C1R", "icv_p8_ownpi_WarpAffine_L_Repl_64f_C4", "_Z7cvRoundRKN2cv10softdoubleE", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7", "_ZN2cv4lineERKNS_17_InputOutputArrayENS_6Point_IiEES4_RKNS_7Scalar_IdEEiii", "icv_p8_ippiSwapChannels_16u_C4R", "icv_h9_owniFilter_32f_C3R_g9e9_4", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_W7", "icv_g9_owniFilter32f_16u_C1R_g9e9_6", "icv_g9_owns_rFFTfwd_16_scale_64f", "icv_g9_ownRow3Lanczos3_16s", "icv_p8_ownpi_dInterVectorClip_NN_16_AC4", "icv_h9_ownSS1_31_16u", "icv_h9_ippiScaleC_32f8u_C1R", "icv_w7_ippiDFTFwd_CToC_32fc_C1R", "icv_g9_ippiMorphGetSpecSize_L", "Java_org_opencv_photo_Photo_denoise_1TVL1_11", "icv_w7_ippiNorm_L2_8u_C1R", "icv_w7_ippiWarpAffineLinear_8u_C4R", "icv_s8_ippiCopyReplicateBorder_32s_C1IR_L", "icv_s8_ownpi_ClipUpper", "_ZN2cv11VideoWriter7releaseEv", "icv_s8_ownippsCnvrt_32f16s_Sfs", "_ZN2cvanERKNS_7Scalar_IdEERKNS_3MatE", "icv_w7_ownAddWeighted_32f_C1IR_W7", "icv_g9_ownsInitTabDftBase_64f", "icv_s8_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_W7cn", "icv_g9_owniNormLevel_8u32f_C1R", "icv_g9_ippiMorphTophat_8u_C3R_L", "icv_g9_ownpi_WarpAffineCubic_32f_C1R", "icv_g9_ownscDFTfwd_6_64fc", "icv_s8_ippsInvSqrt_32f_A21", "icv_g9_ownsrDftInvRecombine_64f", "_ZNK2cv5MatOp9transposeERKNS_7MatExprERS1_", "icv_p8_ippiFilterScharrHorizMaskBorder_32f_C1R", "icv_p8_ownMinMaxIndx_32f_C1MR_W7_1", "icv_w7_ownsrDftInv_Dir_32f", "_ZN2cv3dnn19experimental_dnn_v112PermuteLayer6createERKNS1_11LayerParamsE", "_ZN2cv6detail21resultRoiIntersectionERKSt6vectorINS_6Point_IiEESaIS3_EERKS1_INS_5Size_IiEESaIS9_EE", "icv_w7_ownNormRel_L2_8u_C1MR_W7", "icv_g9_ownpi_Rotate90_8_C1R", "icv_p8_ownFilter_32f_C4R_v8u8", "_ZN2cv4swapERNS_3MatES1_", "Java_org_opencv_core_Core_mean_10", "icv_w7_ownCubicKernel2", "icv_w7_ownpis_Min_16s_C4", "icv_g9_ippsSortRadixAscend_8u_I", "icv_w7_ippiCopy_32f_C3MR", "icv_p8_ippiConvert_8s16u_C1Rs", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7_sym", "icv_p8_ownippiFilterMedianSqr_16s_C4R", "icv_s8_ippiMirror_32s_C3IR", "icv_s8_ippiCopyMirrorBorder_16s_C3R", "icv_p8_ownSS1_65_16u", "icv_h9_ownpi_WarpSimpleLinear_32f_C3R", "icv_h9_owns_rFFTfwd_8_scale_64f", "icv_h9_ippiCopyMirrorBorder_32f_C1R", "Java_org_opencv_photo_TonemapReinhard_getIntensity_10", "icv_g9_ownResize1Nearest16u", "icv_w7_ownpi_WarpSimpleLinear_32f_C4R", "ippicviAddProduct_8u32f_C1IR", "icv_h9_owns_cFFTinv_16_scale_64fc", "ippicviSet_32s_C1R", "icv_h9_ippiTranspose135_32s_C1R", "icv_p8_ownpi_WarpAffine_C_Mem_8u_C4", "Java_org_opencv_ml_StatModel_train_12", "icv_h9_ippiHarrisCornerGetBufferSize", "_ZN2cv3hal5max8sEPKajS2_jPajiiPv", "icv_w7_ippiFilterSobelHorizSecondBorderGetBufferSize", "icv_g9_ownCalcBorderR3Linear16s", "_ZN2cv12useOptimizedEv", "icv_p8_ownpi_WarpAffine_C_Mem_16u_C1", "icv_h9_ownpi_WarpSimpleCubic_32f_C4R", "icv_s8_ippiCopyMirrorBorder_8u_C4IR", "icv_s8_ownsrDFTinv_6_scale_64f", "icv_w7_ippiMorphOpen_8u_C3R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7", "icv_g9_ownsrDFTfwd_12_32f", "icv_p8_ownSS4_54_16u", "icv_w7_ownpi_WarpAffine_C_Transp_16s_C1", "icv_h9_ippiCopy_16s_C3C1R", "icv_s8_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "icv_w7_ippiDistanceTransform_3x3_8u32f_C1R", "_ZN2cv4UMat6createEiPKiiNS_14UMatUsageFlagsE", "icv_p8_ippiResizeCubic_32f_C1R_L", "icv_g9_ippiSub_32f_C4R", "icv_h9_ippiCopy_16u_C1R", "Java_org_opencv_core_Core_sortIdx_10", "icv_p8_ownsMulC_64f_I", "icv_h9_ippiCopyMirrorBorder_32s_C3IR_L", "WebPEncode", "icv_w7_ownLaplace3x3Row_8u_AC4", "icv_s8_owniConvert_8u32f_AC4_W7", "icv_w7_ippiFilterSobelVertSecondBorder_32f_C1R", "icv_s8_ownippiFilterMedianHoriz_8u_C3R", "icv_s8_ownippiFilterMedianHoriz_8u_C4R_5x1", "icv_s8_owniCopy_8u_C3C1R", "_ZN2cv6detail18GraphCutSeamFinderD2Ev", "icv_w7_ippiSwapChannels_8u_C4C3R", "cvSet", "ippicviScaleC_8u32s_C1R", "icv_g9_ownRow1Antialiasing_16u", "icv_w7_ownscDftFwd_Prime4_64fc", "icv_p8_ownippsMin_64f", "icv_h9_ippiScaleC_8u32s_C1R", "icv_p8_ownNormRel_L1_16u_C3CMR_V8", "icv_g9_ippiWarpAffineNearest_32f_C4R", "Java_org_opencv_video_BackgroundSubtractorKNN_setHistory_10", "_ZN2cv3dnn19experimental_dnn_v18MVNLayer6createERKNS1_11LayerParamsE", "Java_org_opencv_calib3d_StereoSGBM_delete", "icv_h9_ippiNormDiff_Inf_8u_C1MR", "icv_s8_ownSS1_43_16s", "icv_g9_ownpi_WarpAffine_NN_Mem_64f_C4", "icv_w7_ownpi_SimpleRotate_16u_C3R", "_ZNK2cv4cuda10DeviceInfo18maxThreadsPerBlockEv", "icv_w7_ippiGetSpatialMoment_64f", "icv_w7_owniSDDiv_32f_C1IR", "icv_s8_owniFilter_32f_C1R_v8u8_2", "icv_s8_ownSS4_41_32f", "icv_s8_ownpi_Min_32f_AC4R", "icv_s8_ippiMean_StdDev_8u_C3CR", "icv_g9_owns_cFftInv_Fact4_64fc", "icv_w7_ownpi_dInterVector_L_16u_C1", "icv_h9_ownpi_WarpAffineNearest_64f_C4R", "icv_s8_owniResizeLinear_32f_C3R", "icv_w7_L1magnitude_32f", "icv_h9_owns_rFFTfwd_16_32f", "_Z25cvHaarDetectObjectsForROCPKvP23CvHaarClassifierCascadeP12CvMemStorageRSt6vectorIiSaIiEERS5_IdSaIdEEdii6CvSizeSC_b", "ippicviMorphBlackhat_16s_C1R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_W7", "icv_s8_owniSwapChannels_8u_C3R", "Java_org_opencv_imgproc_Imgproc_equalizeHist_10", "_ZN2cv4cuda9setDeviceEi", "Java_org_opencv_ml_TrainData_setTrainTestSplitRatio_11", "icv_h9_ippiNormDiff_L2_16u_C3CMR", "icv_s8_ownSSvsum_16s", "icv_p8_ownSS1_73_32f", "icv_s8_ownSS4_72_16s", "icv_w7_ippsSortRadixIndexAscend_8u", "icv_s8_ippiMean_16s_C1R", "icv_s8_ownMorphEllipseGetBufferSize", "ippicviWarpAffineLinear_64f_C4R", "icv_h9_ownsrDFTfwd_15_32f", "icv_s8_ippiMorphOpen_16s_C1R_L", "icv_p8_ippiResizeLinear_16u_C1R_L", "icv_p8_piGradientSobel8u_3x3_row_c1", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_W7", "_ZN3tbb8internal17generic_scheduler10steal_taskERNS0_10arena_slotE", "icv_w7_ippiNormRel_Inf_32f_C1MR", "icv_w7_ownpi_WarpAffineCubic_64f_C1R", "Java_org_opencv_core_Core_dft_10", "icv_s8_ownSq_32f_C1R_W7", "Java_org_opencv_dnn_DictValue_DictValue_10", "icv_p8_owniScaleC_8u16u_C1R_acc", "icv_s8_ownpis_Max_16s_AC4", "icv_p8_ownResize1Linear16s", "ippicviSwapChannels_8u_C3R", "icv_w7_ownpi_Min_32f_C4R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Mirr_V8", "icv_s8_owns_rFFTfwd_4_scale_32f", "icv_s8_ippiCopy_16u_C1C3R", "icv_w7_ippiFilterSobelNegVertBorderGetBufferSize", "icv_p8_ownSS4_21_16u", "icv_h9_owniClipRectZeroTail_8u32f_C1R", "icv_w7_ippiCopy_16u_C1R", "icv_g9_owniFilterBilateralR1_InMem_32f_C3R_L", "icv_g9_ownColAntialiasing_16s", "icv_s8_ippsMagnitude_32f", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_W7", "_ZN2cv3hal6min64fEPKdjS2_jPdjiiPv", "icv_g9_ownpiDotProd_16u64f_C1R", "icv_h9_ippiCopy_16s_P4C4R", "icv_n0_own_ipps_sSin_W7HAynn", "icv_g9_ownSS3_32_8u", "_ZNK2cv3ocl6Device18deviceVersionMinorEv", "icv_s8_ippiGetSpatialMoment_64f", "icv_g9_owns_cFFTinv_4_scale_64fc", "icv_p8_owniGetRectRight_16s", "_ZN2cv11VideoWriterC2Ev", "icv_h9_ownMean_StdDev_32f_C1R2_HSW", "icv_p8_ippiRGBToGray_32f_C3C1R", "icv_w7_ownsrDFTinv_5_64f", "icv_w7_owniFilterBilateralR1_InMem_32f_C1R_px", "icv_h9_owniFilterBoxBorder_32f_C1R", "_ZN2cv31createChiHistogramCostExtractorEif", "icv_g9_ownsrDFTinv_5_scale_32f", "icv_p8_ownpi_NormL1Diff_32f_C1R", "icv_g9_ownscDftFwd_Prime7_64fc", "Java_org_opencv_video_DualTVL1OpticalFlow_setInnerIterations_10", "icv_s8_ownMinMaxIndx_32f_C1R_W7_1", "icv_w7_ownscDftInv_Prime4_32fc", "icv_g9_ippiFilterBoxBorder_16u_C1R", "_ZN2cv11createCLAHEEdNS_5Size_IiEE", "icv_p8_ippiCopy_16s_C3R", "icv_s8_ownCopySubpixIntersect_8u32f_C1R_W7", "icv_p8_ownDistanceTransform_5x5_8u_C1R_New_F_W7", "_Z25Mat_to_vector_vector_charRN2cv3MatERSt6vectorIS2_IcSaIcEESaIS4_EE", "icv_p8_ippiCanny_16s8u_C1R", "icv_p8_ownSSvsum_8u", "icv_p8_ownpi_WarpAffine_C_Repl_64f_C4", "Java_org_opencv_ml_DTrees_setMaxCategories_10", "icv_w7_ownSumSq_32f_C3CR_smallsize_W7", "icv_p8_ippiNormRel_L2_16u_C1R", "icv_h9_owniFilter_32f_C1R_g9e9_4", "icv_w7_ownpi_Rotate90_B_64_C3R", "Java_org_opencv_imgproc_Imgproc_fitEllipse_10", "_ZN2cv8superres23createOptFlow_FarnebackEv", "icv_p8_ownSS4_43_8u", "icv_s8_ownpi_Set_64f_C4R", "Java_org_opencv_core_Core_extractChannel_10", "icv_h9_ippiMirror_32s_C3IR", "icv_w7_ownNormDiff_L1_16u_C3CMR_W7", "icv_g9_piGradientSobel8u_c1", "icv_w7_ownsrDFTfwd_14_64f", "icv_h9_ippiMorphBlackhat_8u_C4R_L", "icv_w7_ownpi_Rotate90_32_C1R", "icv_s8_ippiSwapChannels_32f_C4R", "icv_s8_ownLaplRow5x5_32f_C3", "icv_p8_ownpi_WarpAffineLinear_8u_C3R", "icv_p8_ippiMorphClose_8u_C1R_L", "Java_org_opencv_ml_SVMSGD_setOptimalParameters_10", "ippicviAddWeighted_32f_C1IR", "icv_g9_ippiAlphaPremul_8u_AC4R", "icv_s8_ippiWarpAffineCubic_16u_C3R", "Java_org_opencv_core_TickMeter_getCounter_10", "icv_h9_owniConvert_32f8s_ccode", "icv_w7_ippiTranspose_16u_C4R", "Java_org_opencv_core_Mat_n_1submat", "icv_w7_ownLaplCol5x5_32f_C1", "icv_g9_ownRow4Linear64f", "cvWriteRawData", "icv_w7_ownNorm_Inf_8s_C1MR_W7", "icv_p8_ownsGetSizeDftPrimeFact_32f_32f", "icv_p8_ownSS4_83_16u", "_ZNK2cv4UMat7reshapeEiiPKi", "icv_n0_own_ipps_dSinCos_T7HAynn", "icv_s8_ippiConvert_32f8s_C1RSfs", "icv_s8_ownippiFilterMedianCross_16u_C4R_5x5", "icv_p8_ownBuildWarpFilter_32f", "icv_s8_owniCopy_8u_C3AC4R", "icv_w7_owns_cCcsRecombine_32f", "icv_s8_ownpi_WarpSimpleNearest_8u_C3R", "icv_s8_ownpi_SimpleRotate_32f_C1R", "icv_s8_owns_crRadix4InvNorm_64f", "icv_g9_ippiMomentInit_64f", "icv_g9_ippiResizeCubic_8u_C3R_L", "icv_s8_ownpi_dInterVectorClip_C_8u_AC4", "icv_p8_ippiSqrDistanceNormGetBufferSize", "icv_w7_ownpi_WarpAffine_C_Transp_16s_C4", "Java_org_opencv_features2d_BOWTrainer_descriptorsCount_10", "icv_p8_ownpi_WarpAffineSimpleNearest_16u_C1R", "icv_h9_ownWarpSimple3Nearest16u", "cvPyrDown", "Java_org_opencv_features2d_ORB_getScoreType_10", "cvSolveCubic", "ippicviResizeGetSize_L", "ippicviAnd_8u_C1R", "icv_s8_ownscDFTinv_9_scale_64fc", "icv_p8_ippiResizeSuper_16s_C4R_L", "icv_p8_ownSS1_43_16u", "_ZN3tbb18task_group_context26register_pending_exceptionEv", "icv_p8_ownSS4_21_8u", "icv_h9_L1magnitude_32f", "_ZN2cv6detail10overlapRoiENS_6Point_IiEES2_NS_5Size_IiEES4_RNS_5Rect_IiEE", "_ZNK2cv4cuda10DeviceInfo12maxSurface3DEv", "icv_p8_ippiFilterBorder_16s_C1R", "icv_s8_ippiMean_StdDev_32f_C3CR", "icv_g9_ippsCos_64f_A53", "icv_h9_owniScaleC_16u64f_C1R_fst", "icv_p8_ownpi_WarpAffineSimpleNearest_32f_C3R", "icv_w7_ippiMean_8u_C3CMR", "icv_h9_ippiRGBToGray_32f_C3C1R", "icv_p8_owns_rFFTfwd_16_64f", "icv_w7_ownpi_dInterVector_NN_32_C1", "_ZN2cv6detail27BundleAdjusterAffinePartial24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_w7_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_W7cn", "Java_org_opencv_video_KalmanFilter_KalmanFilter_11", "icv_p8_ippiAddSquare_8u32f_C1IR", "icv_g9_ownpi_Rotate180_32_C3R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_V8", "icv_s8_ownMinMaxIndx_32f_C1R_W7_2", "icv_s8_ippiDilate_8u_C1R_L", "icv_p8_ownpi_WarpAffineSimpleCubic_8u_C3R", "icv_h9_ownCalcBorderR3Cubic16u", "WebPDecodeRGB", "icv_w7_ownpi_WarpAffine_C_Transp_32f_C3", "icv_w7_ownippiThreshold_GLV_8u_C3", "icv_p8_ownNormDiff_L1_16u_C3CMR_V8", "icv_p8_ownpis_Min_32f_C4", "icv_s8_ownippiFilterMedianSqr_16u_AC4R", "icv_s8_ownsFFTGetBufSize_R_64f", "icv_s8_ippsMinEvery_8u", "icv_g9_ownpi_NormL1Diff_8u_C1R", "icv_h9_ownscDFTfwd_14_64fc", "icv_s8_ownWarpSimple1Nearest16u", "icv_h9_ownsrDftFwdRecombine_32f", "icv_p8_ownRow1Cubic16s", "ippicviNormRel_Inf_32f_C1R", "icv_p8_ippiMean_StdDev_32f_C3CR", "icv_s8_ownpi_Max_32f_AC4R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "icv_s8_ownResize3Lanczos2_16u", "Java_org_opencv_ml_ParamGrid_set_1minVal_10", "icv_h9_ippiCopy_32f_C3R_L", "icv_s8_ippiTranspose_32s_C4R", "icv_g9_ownscDFTinv_3_scale_32fc", "icv_s8_ippiCopyMirrorBorder_8u_C1IR_L", "icv_w7_ippiResizeLinear_16u_C3R_L", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "icv_s8_ownscDftFwd_Prime7_32fc", "icv_s8_ippsConj_64fc", "icv_w7_owniCopy_16s_C1M_W7", "icv_p8_ownNormDiff_Inf_8s_C3CMR_V8", "_ZN3tbb8internal8governor24does_client_join_workersERKNS0_3rml10tbb_clientE", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_W7", "icv_p8_ownscDFTinv_3_scale_32fc", "icv_s8_ownippiFilterMedianSqr_16s_C4R", "icv_g9_ownpi_WarpAffine_L_Const_16u_C4", "icv_s8_ownAddSquare_16u32f_C1IR_W7", "icv_w7_ownpi_Max_16s_C4R", "icv_h9_ownSS4_41_16s", "_ZN2cv12KalmanFilterC2Ev", "icv_p8_ownCopySubpix_16u_C1R_W7", "icv_s8_owniFilter_32f_C3R_v8u8_3NA", "icv_h9_ownpi_Rotate180_32_C3R", "_ZN2cv3dnn19experimental_dnn_v120DetectionOutputLayer6createERKNS1_11LayerParamsE", "_ZN2cv4cuda20fastNlMeansDenoisingERKNS_11_InputArrayERKNS_12_OutputArrayEfiiRNS0_6StreamE", "icv_w7_ippiWarpAffineNearest_16s_C1R", "icv_w7_ownpi_Rotate180_8_C3R", "icv_h9_ippiCopyMirrorBorder_8u_C1IR", "icv_w7_ownscrDftInv_Fact_32f", "icv_h9_ownSS4_54_8u", "icv_w7_ownippiFilterxBrd32f_16s_C4R", "icv_p8_ownpi_WarpSimpleNearest_64f_C4R", "icv_h9_owniConvert_16s8s_ccode", "icv_p8_ownippiFilterMedianHoriz_8u_C4R_3x1", "icv_p8_ownLaplCol5x5_32f_C4", "icv_h9_ippiCopy_32f_P4C4R", "_ZN2cv7MomentsC2Edddddddddd", "icv_p8_owniFilterBilateralR2_InMem_32f_C3R", "icv_w7_ownpi_dInterVector_NN_16_C1", "icv_w7_ownSumSq_32f_C1R_W7_Al", "icv_g9_ownpi_WarpAffine_C_Const_8u_C1", "icv_h9_ownSS1_32_8u", "iwValueRelToAbs", "icv_g9_owniResizeLinear_8u_C3R", "icv_g9_ownippiFilterxBrd_32f_C1R", "icv_g9_ownpi_WarpAffine_L_Repl_64f_C3", "Java_org_opencv_core_Core_patchNaNs_11", "Java_org_opencv_imgproc_Imgproc_drawMarker_11", "icv_h9_ownscDFTinv_11_scale_64fc", "icv_w7_owniResizeLanczos_8u_C1R", "icv_g9_ippsSortRadixDescend_16s_I", "_ZNK2cv13HOGDescriptor9detectROIERKNS_3MatERKSt6vectorINS_6Point_IiEESaIS6_EERS8_RS4_IdSaIdEEdNS_5Size_IiEESG_", "icv_g9_ownpi_WarpSimpleGetSize", "icv_p8_cv_ownippiFilterMxMnBorder_L", "icv_w7_ippiCopy_16u_C3C1R", "icv_p8_ownsrDFTfwd_6_scale_64f", "icv_h9_owniConvert_8s8u_avx2", "icv_w7_owniResizeLanczosInit", "icv_p8_ippsSin_64f_A53", "icv_w7_ownpi_dInterVector_NN_32_C4", "icv_p8_owniSet_8u_C4MR", "icv_w7_ownResize1Lanczos3_16s", "icv_w7_ippiNormRel_Inf_16u_C1MR", "ippicviResizeNearest_32f_C1R_L", "icv_w7_ownpi_WarpAffine_L_32f_C3", "icv_s8_owniCopy8u_C4P4_48_A6", "icv_g9_ippiTranspose_16u_C3R", "icv_p8_ownpi_WarpSimpleLinear_8u_C4R", "icv_w7_owniResizeCubic_16s_C3R", "_ZN2cv4UMat9adjustROIEiiii", "icv_h9_innerCommonLoopW3_32f_C3IR", "_ZNK2cv3ocl6Device10extensionsEv", "Java_org_opencv_ml_DTrees_getMinSampleCount_10", "icv_w7_ippsFabsOne", "icv_w7_owniResizeLinear_16u_C3R", "icv_s8_ippiNormDiff_Inf_16s_C1R", "icv_w7_ownsrDFTfwd_12_scale_64f", "_ZN2cv12VideoCapture7releaseEv", "_ZN10__cxxabiv119__foreign_exceptionD0Ev", "icv_w7_ownippsCnvrtFin_32f8u_Sfs", "Java_org_opencv_core_Core_sort_10", "_ZNK2cv5MatOp8multiplyERKNS_7MatExprEdRS1_", "icv_s8_ownpi_Min_32f_C1R", "icv_s8_ownpi_OrC_8u_C4R", "Java_org_opencv_photo_MergeRobertson_delete", "icv_s8_ownAConvert_Round32s_16s", "icv_p8_ownpi_WarpAffineCubic_16s_C3R", "icv_g9_owns_cFFTfwd_64_64fc", "icv_n0_own_ipps_sLn_W7EPnnn", "icv_s8_ownCalcBorderR3Cubic8u", "icv_p8_owniCopy_8u_P3C3R", "icv_w7_ippiFilterBoxBorder_16s_C1R", "icv_w7_ippiNorm_L1_16u_C1MR", "ippicvsDFTInit_R_32f", "icv_w7_cv_ownippiFilterMin_8u_Row", "icv_s8_ownscDFTinv_12_32fc", "icv_w7_ownsExpOneF_w7", "icv_h9_ownFilter_8u_32s_C1R_h9l9_krn", "icv_s8_ownpi_Rotate180_16_C3R", "icv_p8_ippiMax_8u_C1R", "_ZN2cv18createMergeDebevecEv", "icv_s8_ownSS1_73_32f", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7", "icv_s8_ownpi_WarpAffine_NN_32_AC4", "icv_s8_ipMirror135_32uC1R", "_ZN2cv16FileNodeIteratorC2EPK13CvFileStoragePK10CvFileNodej", "icv_p8_ippiMin_16u_C1R", "_ZN2cv5utils5trace7details6RegionC2ERKNS3_21LocationStaticStorageE", "icv_s8_ippiCopy_16s_C1R", "icv_s8_ippiMinMax_16s_C1R", "icv_h9_ownsMinEvery_16u_avx2", "_ZN2cv11RNG_MT199377uniformEff", "icv_g9_ippiCopy_8u_C3R", "icv_w7_ippiNormRel_L2_8u_C1MR", "Java_org_opencv_ml_LogisticRegression_setIterations_10", "icv_g9_ownResize3Antialiasing_16u", "icv_h9_ippiSet_32s_C4MR", "_ZN2cv8superres11FrameSourceD1Ev", "icv_h9_owns_sDctInv_Fft_32f", "icv_g9_ownSS4_52_16s", "icv_h9_ownippiFilterxBrd32f_16u_C4R", "icv_h9_ownscDftInv_Fact11_32fc", "icv_g9_ownsrDFTinv_7_32f", "icv_s8_ippsSortRadixDescend_32s_I", "_ZN3tbb8internal17generic_scheduler13create_workerERNS0_6marketEj", "icv_p8_owniCopy16sC4Mas", "Java_org_opencv_features2d_BOWKMeansTrainer_cluster_11", "icv_h9_piGradientScharr8u_row_c1", "icv_w7_ippsZero_64f", "icv_p8_ownscDFTinv_12_scale_32fc", "Java_org_opencv_ml_EM_predict_10", "icv_p8_ownscDftInv_Prime16_64fc", "icv_g9_ownSS4_65_16u", "icv_s8_ownCalcBorderR1Lanczos2_16s", "icv_s8_ownSharpenRow_16s_AC4", "_ZN2cv5flann20AutotunedIndexParamsC2Effff", "icv_w7_ownsMulC_32f_I", "icv_p8_ownSS4_83_32f", "icv_w7_ippiMorphTophat_8u_C1R_L", "icv_g9_ippiWarpAffineNearest_32f_C3R", "icv_s8_ownscDftInv_Prime13_64fc", "icv_g9_owniResizeCubic_16u_C3R", "ippicviDCTFwdGetSize_32f", "icv_p8_ippiFilterSobelVertBorderGetBufferSize", "icv_w7_ownscDFTfwd_3_scale_64fc", "icv_s8_ownMorphAdvFunc", "icv_g9_ippiNorm_L1_8u_C1R", "icv_s8_ippsSortRadixDescend_32f_I", "icv_h9_ippiAdd_32f_C1IR", "icv_h9_ippiNormDiff_Inf_32f_C3CMR", "Java_org_opencv_ml_DTrees_setUseSurrogates_10", "icv_w7_ownpi_WarpAffine_L_Const_16u_C3", "icv_p8_ownpi_dInterVectorClip_NN_32_P4", "icv_h9_ippiMorphClose_32f_C4R_L", "_ZNK2cv5MatOp17augAssignMultiplyERKNS_7MatExprERNS_3MatE", "icv_g9_ownpi_WarpAffine_CR_32f_C1", "own_ipps_dSinCos_SC_HA", "icv_s8_ownWarpSimple1Nearest16s", "_ZNK2cv10softdoublemiERKS0_", "icv_s8_ownpis_Max_32f_AC4", "Java_org_opencv_ml_ANN_1MLP_create_10", "icv_g9_ippiErode_32f_C4R_L", "icv_w7_ownpi_SimpleRotate_16u_C4R", "icv_s8_ownsfen", "icv_g9_ippsSortRadixDescend_16u_I", "icv_s8_owniResizeAntialiasingCubicInit_L", "icv_s8_ippiConvert_8s16u_C1Rs", "cvSetMouseCallback", "Java_org_opencv_imgproc_Imgproc_createLineSegmentDetector_11", "ippicviMirror_16s_C4R", "icv_s8_ippiSub_8u_C4RSfs", "icv_g9_owns_cFFTinv_8_scale_32fc", "icv_w7_ownscDft_Conv_32fc", "icv_h9_ippiSub_32f_C1R", "icv_s8_ownpi_WarpAffine_C_Transp_16u_C3", "icv_h9_owniScaleC_8u16u_C1R_acc", "icv_w7_owniConvert_8u32s_W7", "icv_s8_ownippiThreshold_GLV_8u_C1", "_ZNK2cv8FileNode7readObjEv", "icv_h9_GET_ANCHOR_BORDER", "icv_p8_ownsGetSizeTabDftInvRec_64f", "icv_p8_ownLanczosKernel2", "icv_h9_ownippiFilterMax_16u_Col_h9l9", "_ZNK2cv17CommandLineParser11printErrorsEv", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_V8", "Java_org_opencv_core_Core_getTickFrequency_10", "icv_s8_ownpi_NormL2Rel_8u_C1R", "icv_p8_ippiResizeAntialiasing_8u_C3R_L", "icv_s8_ippiCopyReplicateBorder_8u_C4IR", "icv_g9_ippsDCTFwd_32f", "icv_s8_ippiRGBToHLS_8u_C3R", "icv_h9_ownNormDiff_L1_32f_C3CMR_HSW", "icv_n0_own_ipps_dSqrt_W7HAynn", "icv_s8_ownLaplace3x3Row_8u_C3", "icv_g9_ippiScaleC_16u8u_C1R", "icv_s8_ippiConvert_16u32f_C1R", "icv_g9_owniGetRectLeft_16s", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_X", "_ZN2cv3dnn19experimental_dnn_v13Net8setInputERKNS_3MatERKNS_6StringE", "icv_h9_ownCalcBorderR3Cubic16s", "icv_p8_ownpi_SimpleRotate_16u_C4R", "icv_g9_owniFilterBilateralR2_InMem_32f_C1R", "icv_g9_ippiConvert_32s16s_C1RSfs", "_ZN2cv5instr10resetTraceEv", "icv_w7_ippiSqrIntegral_8u32s64f_C1R", "_ZN3tbb8internal21PrintExtraVersionInfoEPKcS2_z", "Java_org_opencv_video_KalmanFilter_set_1errorCovPre_10", "icv_w7_ippsSortRadixAscend_32s_I", "icv_h9_ippiFilterSobelVertBorder_32f_C1R", "Java_org_opencv_imgproc_CLAHE_getTilesGridSize_10", "_ZN2cv3ocl9KernelArgC2EiPNS_4UMatEiiPKvj", "icv_p8_owniResizeGetBorderSize", "icv_p8_ippsSortRadixIndexAscend_8u", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3", "icv_g9_ownSSvsum_32f", "icv_h9_ownippiFilterMin_32f_Row_avx2", "icv_s8_ownippsCnvrt_8s32f", "icv_g9_ownpi_GetAffineTransformInverse", "icv_h9_ownippiFilterMedian_16u_BC4R", "icv_g9_ownRow1Filter2_8u", "icv_w7_owns_crFft_BlkMerge_32f", "icv_n0_own_ipps_sInvSqrt_W7HAynn", "icv_p8_ownsrDFTinv_13_64f", "icv_ps_clear_fpu", "icv_w7_ippiNormDiff_Inf_16u_C1MR", "icv_h9_ippiCountInRange_8u_C1R", "icv_w7_ippiCopyConstBorder_16s_C3R", "cvFillConvexPoly", "Java_org_opencv_video_KalmanFilter_predict_11", "icv_g9_ownpi_WarpAffine_NN_Mem_8u_C3", "icv_s8_ippiNormDiff_L2_16u_C1R", "_ZN2cv9videostab28KeypointBasedMotionEstimatorC1ENS_3PtrINS0_19MotionEstimatorBaseEEE", "icv_p8_owniSet_8u_C3MR", "icv_g9_ippiWarpAffineNearest_64f_C1R", "icv_s8_ownpi_WarpAffine_C_Repl_64f_C1", "Java_org_opencv_objdetect_HOGDescriptor_checkDetectorSize_10", "_ZN3tbb18task_group_contextD1Ev", "icv_s8_ownSS1_81_16s", "icv_p8_ippiMoments64f_32f_C1R", "icv_s8_ownsrDFTfwd_9_64f", "ippicviScaleC_16u32s_C1R", "icv_w7_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "_ZN3tbb4task28internal_decrement_ref_countEv", "icv_w7_ippiErode_16s_C1R_L", "icv_g9_ownsAdd_16s_NegSfs", "icv_w7_ippiMirror_16s_C3IR", "_ZN2cv6detail10Timelapser10initializeERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_5Size_IiEESaISA_EE", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_W7", "icv_g9_owniCopyMirrorBorder_32s_C4R", "icv_p8_ownpi_WarpAffineSimpleCubic_16u_C4R", "icv_g9_ownResize4Antialiasing_32f", "Java_org_opencv_imgproc_Imgproc_HoughLines_11", "icv_s8_ownSS1_31_32f", "icv_w7_ownscDFTfwd_11_scale_64fc", "_ZN2cv13HOGDescriptor24getDaimlerPeopleDetectorEv", "icv_s8_ownFilterRowBorderPipeline_32f_C1R", "icv_w7_ownSS1_16s", "icv_h9_ownscDftFwd_Fact7_64fc", "icv_g9_ippiCopy_8u_C1R", "icv_g9_ownRow1Lanczos3_32f", "icv_h9_ownippsCnvrtFin_32f16s_AVX", "icv_p8_ippiSub_32f_C1R", "icv_w7_ippiResizeAntialiasingCubicInit_L", "icv_w7_ippiDotProd_8u64f_C1R", "icv_h9_owniScaleC_32f32f_C1R_acc", "Java_org_opencv_calib3d_StereoSGBM_getPreFilterCap_10", "icv_w7_ownpi_WarpAffine_L_Repl_16s_C4", "icv_p8_ownscDftFwd_Prime3_64fc", "icv_s8_ownFilter_32f_C1R", "icv_g9_ippiCrossCorrNorm_8u32f_C1R", "icv_g9_ippiNorm_L2_16u_C1MR", "icv_s8_ownSS4_54_32f", "_ZN2cv9videostab17OnePassStabilizer16postProcessFrameERKNS_3MatE", "_ZN2cv7sortIdxERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_p8_ownippiThreshold_GV_16s_C4", "icv_h9_ippiResizeLanczos_32f_C3R_L", "_ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv", "icv_s8_ippiFilterSobelHorizSecondBorderGetBufferSize", "icv_g9_owns_cRealRecombine_64f", "icv_h9_ippiMorphOpen_32f_C1R_L", "icv_s8_piFilterBoxBorder_32f_C1R_1_v8u8_NA", "icv_n0_own_ipps_sCos_W7EPnnn", "icv_w7_ownscDftFwd_Fact5_64fc", "_ZNK2cv4cuda10DeviceInfo14memoryBusWidthEv", "icv_w7_ownResize1Linear16s", "icv_p8_ownsrDFTfwd_12_64f", "icv_p8_ownCalcBorderR3Antialiasing_8u", "icv_p8_ownsrDFTinv_7_scale_32f", "icv_p8_ownpi_dInterVectorClip_NN_16_C3", "icv_g9_ownippiFilterxBrd_32f_C3R", "icv_s8_ownpi_dInterVectorClip_NN_16_C3", "_ZN2cv3hal9fastAtan2EPKfS2_Pfib", "_ZN2cv3sumERKNS_11_InputArrayE", "icv_w7_ippiMirror_16s_C4IR", "Java_org_opencv_calib3d_Calib3d_recoverPose_10", "icv_h9_owniAutoSS_C1R", "icv_s8_ippiWarpAffineCubic_64f_C1R", "icv_w7_ownNormDiff_Inf_32f_C3CMR_W7", "icv_p8_ownscDFTfwd_13_32fc", "icv_p8_ownSS3vertical_16s", "icv_w7_ippiDFTFwd_RToPack_32f_C1R", "icv_g9_owniResizeSuper_16s_C4R", "_ZN2cv11FileStorageC2Ev", "icv_w7_cv_ownMorphologyGetSize_1u_L", "ippicviSet_32f_C3R", "icv_g9_ippsSortRadixIndexAscend_16u", "icv_h9_owns_cFFTinv_4_scale_32fc", "icv_p8_owniScaleC_32s32f_C1R_fst", "cvReleaseStereoBMState", "icv_p8_ownNormRel_L1_8s_C1MR_V8", "_ZN2cv6detail18SurfFeaturesFinder4findERKNS_11_InputArrayERNS0_13ImageFeaturesE", "icv_s8_ippiNormDiff_L1_32f_C1R", "icv_g9_owns_cFFTfwd_8_64fc", "_ZNK2cv11_InputArray6copyToERKNS_12_OutputArrayERKS0_", "icv_h9_ippiSub_8u_C3RSfs", "Java_org_opencv_imgproc_Subdiv2D_Subdiv2D_11", "icv_p8_ippiResizeCubic_16u_C1R_L", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getFlags_10", "icv_w7_owniResizeNearest_8u_C3R", "ippicviMean_StdDev_16u_C3CMR", "Java_org_opencv_imgproc_Imgproc_putText_10", "icv_p8_innerNormL1_3x3", "WebPDecodeBGRInto", "icv_g9_ippiResizeLanczos_32f_C1R_L", "icv_p8_ownSS4_a7_16u", "icv_w7_ownscDFTinv_11_scale_32fc", "icv_p8_ownpi_WarpAffine_C_Repl_8u_C4", "icv_w7_ownpi_dInterVector_NN_16_P3", "icv_h9_owniSet_8u_C1MR", "icv_w7_ownpi_WarpSimpleNearest_16u_C1R", "icv_h9_ownpi_WarpSimpleNearest_8u_C1R", "icv_h9_ownSS1_94_8u", "_ZN3tbb8internal18concurrent_monitor14thread_context4initEv", "icv_s8_ownpi_CountInRange_32f_AC4R", "icv_p8_ownpi_Max_8u_C4R", "icv_h9_ownWarpSimple1Nearest64f", "icv_g9_ownpi_WarpAffine_CR_8u_C4", "Java_org_opencv_imgproc_Imgproc_adaptiveThreshold_10", "ippicviCopy_8u_P4C4R", "icv_p8_ownSharpenRow_8u_C1", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C1R_X_V8", "ippicviMirror_8u_C4R", "icv_w7_ippiWarpAffineCubic_64f_C4R", "Java_org_opencv_ml_SVM_getNu_10", "icv_p8_ownsCosOne", "_ZN2cv15getDerivKernelsERKNS_12_OutputArrayES2_iiibi", "icv_p8_ownscDftInv_Prime6_64fc", "icv_g9_owniTranspose32s_C4R_core2", "icv_p8_ownFilterBoxBorderInMem_32f_C4IR", "icv_h9_ownMean_StdDev_16u_C3CR_HSW", "_ZNK2cv4cuda10DeviceInfo12maxSurface1DEv", "_ZNK2cv11_InputArray11isSubmatrixEi", "Java_org_opencv_calib3d_StereoBM_setPreFilterType_10", "_Z18vector_char_to_MatRSt6vectorIcSaIcEERN2cv3MatE", "icv_s8_ippiErodeGetSpecSize_L", "icv_p8_ownsrDFTfwd_12_scale_64f", "icv_n0_own_ipps_dSqrt_W7LAynn", "icv_w7_ippiAddProduct_32f_C1IR", "Java_org_opencv_features2d_BOWTrainer_delete", "icv_h9_owniFilterBilateralCom_InMem_32f_C1R_px", "icv_p8_ownSS4_21_16s", "icv_g9_ownpi_WarpAffineSimpleNearest_8u_C1R", "icv_w7_ownpi_dInterVectorClip_L_16u_P3", "cvMinMaxLoc", "_ZThn4_N2cv8superres15SuperResolution5resetEv", "Java_org_opencv_calib3d_StereoMatcher_setMinDisparity_10", "Java_org_opencv_imgproc_Imgproc_resize_11", "icv_g9_owniScaleC_16u32f_C1R_fst", "icv_g9_owniResizeSuper_32f_C3R", "icv_w7_ownsrDFTfwd_12_32f", "icv_h9_ownsrDFTfwd_10_scale_32f", "icv_p8_owniFilterSobelVertBorder2_32f_C1R", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getWinSize_10", "icv_g9_owniFilterPrewittVertBorder2_16s_C1R", "icv_g9_ippiResizeSuper_8u_C1R_L", "icv_p8_ownscDFTinv_11_scale_64fc", "icv_w7_owniResizeNearestInit", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_X", "icv_h9_ownResize1Cubic8u", "Java_org_opencv_dnn_Net_getFLOPS_13", "icv_s8_owns_cFFT_2_scale_32fc", "icv_h9_ownpi_NormL2_8u_C1R", "icv_h9_ippiResizeCubic_32f_C3R_L", "icv_p8_ownscrDftFwd_Prime2_32f", "icv_h9_owns_cFFTfwd_4_64fc", "icv_p8_owniCopy_8u_C1C3R", "icv_p8_ownBFilterRow32f_16s_C4R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "_ZN2cv9videostab20GaussianMotionFilter9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiE", "_ZN2cv7decolorERKNS_11_InputArrayERKNS_12_OutputArrayES5_", "icv_s8_ippiCrossCorrNorm_8u32f_C1R", "_ZN2cv9FormatterD2Ev", "icv_s8_Moments8uC1R_64f_FAST", "cvCmp", "icv_g9_ownpi_WarpAffine_C_Transp_16s_C3", "_ZN2cv9videostab17TwoPassStabilizer27estimateStabilizationMotionEv", "icv_s8_ippiResizeAntialiasing_16s_C3R_L", "icv_g9_ownscDFTfwd_14_64fc", "icv_s8_ownpi_MinMax_16s_C3R", "Java_org_opencv_imgproc_Imgproc_cornerSubPix_10", "icv_w7_ownpi_WarpAffine_L_8u_C3", "icv_g9_ownscDFTinv_9_32fc", "icv_h9_ippiMean_StdDev_8u_C1MR", "icv_h9_ippiMorphGradient_8u_C3R_L", "icv_g9_ippiConvert_16u16s_C1RSfs", "icv_s8_ownippiFilterMin_32f_Col_AC4", "icv_s8_ownippiFilterMedianVert_8u_C4R", "icv_p8_ippiWarpAffineLinear_32f_C1R", "_ZN2cv17CommandLineParser4Impl12apply_paramsEiNS_6StringE", "icv_g9_cv_ownippiFilterMin_16u_Col", "icv_w7_ownAbsDiff_16u_C1R_W7", "icv_w7_ownAddProduct_32f_C1IMR_W7", "icv_p8_ippiNorm_L2_8u_C1R", "cvCreateTrackbar2", "_ZN3tbb8internal25deallocate_via_handler_v3EPv", "icv_s8_ownpi_WarpAffineSimpleNearest_16u_C3R", "icv_p8_owniTranspose_32s_C1R_W7_NT", "icv_s8_ownResize4Linear16u", "icv_w7_ownCalcBorderR4Cubic16s", "_ZN2cv3hal6add16sEPKsjS2_jPsjiiPv", "Java_org_opencv_features2d_AKAZE_getDiffusivity_10", "icv_h9_owniScaleC_32f16s_C1R_acc", "icv_p8_ownsrDFTfwd_6_64f", "icv_h9_ippiMirror_32f_C3R", "_ZNK2cv16MatConstIterator4lposEv", "_ZN2cv8Subdiv2D6locateENS_6Point_IfEERiS3_", "_ZN2cv3Mat6resizeEjRKNS_7Scalar_IdEE", "icv_s8_ippsSortRadixAscend_64f_I", "icv_s8_owniTransposeWxH_8uC1", "icv_g9_ippiNormRel_L1_16u_C1R", "icv_g9_ippsPolarToCart_32f", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7", "icv_s8_ippiNormRel_L2_16u_C1MR", "icv_w7_ippiSet_16s_C4MR", "icv_p8_ippiConvert_16s16u_C1Rs", "icv_h9_ownResize1Antialiasing_32f", "icv_w7_ownpi_WarpAffine_L_Repl_8u_C4", "ippicviResizeNearest_32f_C3R_L", "icv_w7_ippiNorm_L2_16u_C3CMR", "icv_s8_owniTranspose_16u_C4R_W7", "icv_g9_ownpi_WarpAffineCubic_16u_C1R", "icv_p8_ownpi_WarpSimpleCubic_16s_C4R", "icv_w7_ownpi_dInterVector_L_32f_AC4", "Java_org_opencv_video_FarnebackOpticalFlow_setNumLevels_10", "icv_s8_ippiMirror_32s_C1IR", "_ZN2cv8Subdiv2D8QuadEdgeC1Ev", "icv_s8_ownResize3Linear32f", "Java_org_opencv_ml_LogisticRegression_getTrainMethod_10", "icv_h9_ownResize4Antialiasing_16s", "icv_p8_ownSS4_52_16s", "_ZN2cv3RNG8gaussianEd", "icv_w7_owniFilterMedianBorderInMem_32f_C1R", "icv_w7_ippiTranspose_16u_C3R", "icv_p8_owniResizeAntialiasing_16u_C1R_L", "icv_s8_ippiSet_8u_C4MR", "icv_g9_piFilterBoxBorder_32f_C1R_px", "icv_g9_ownpi_NormInf_8u_C1R", "icv_g9_ownSS1_94_16u", "icv_w7_ownpi_dInterVectorClip_L_16u_C3", "icv_p8_owns_crFftFwd_CoreMT_64f", "icv_w7_ownAFilterColumn_8u_C1R", "icv_p8_ownippiFilterMedian_16u_C3R_3x3", "icv_s8_owniSet_8u_C3_W7", "icv_w7_ownpi_dInterPoint_CR_Pixel_8u", "icv_p8_owniFilter_32f_C4R_v8u8_3NA", "icv_s8_ownResize4Linear8u", "icv_w7_ownscrDftInv_Prime4_32f", "icv_h9_ownsReducePi", "icv_s8_ownpi_dInterVector_L_32f_P4", "icv_h9_ownSS3_43_16s", "_ZNK2cv3ocl7Program5writeERNS_6StringE", "icv_s8_owns_sDctFwd_Fft_32f", "icv_s8_ippsSortRadixAscend_32f_I", "_ZN2cv4UMatC1ERKS0_RKNS_5RangeES5_", "icv_p8_ownMinMaxIndx_8u_C1R_W7_1", "icv_p8_ownpi_WarpAffine_C_Repl_32f_C1", "_ZNK2cv8FileNode4typeEv", "icv_p8_ownpi_Max_8u_AC4R", "icv_p8_ippiErode_8u_C4R_L", "icv_h9_owniFilter32f_16u_C1R_g9e9_2", "icv_h9_ippiCopyConstBorder_32f_C3R", "icv_s8_owns_cFftFwd_Fact4_64fc", "icv_s8_ippiCopy_16u_C4R", "Java_org_opencv_imgproc_Imgproc_warpAffine_10", "ippicviTranspose_16s_C3R", "icv_w7_ippiResizeLanczos_8u_C3R_L", "_ZN2cvorERKNS_7Scalar_IdEERKNS_3MatE", "icv_g9_ownsrDftInv_PrimeFact_32f", "icv_w7_ippiMinMax_16s_C1R", "icv_p8_ownpi_dInterVector_NN_8_AC4", "icv_w7_ownpi_SmoothBorder", "icv_p8_ownpi_WarpAffine_CR_8u_C3", "icv_w7_ownpi_WarpAffine_C_Transp_16s_C3", "ippicviThreshold_GTVal_8u_C1R", "icv_h9_ownColCubic16s", "icv_g9_ownpi_WarpAffine_NN_Mem_16u_C3", "_ZN2cv5utils5trace7details12TraceManagerC2Ev", "icv_s8_ownColLanczos3_16s", "icv_p8_ownWarpSimple4Nearest16u", "icv_h9_ownpi_WarpAffineLinear_16s_C1R", "icv_s8_ownpi_Rotate90_64_C3R", "icv_w7_ippiResizeNearest_16u_C1R_L", "icv_h9_owniFilter32f_8u_C3R_g9e9_2", "icv_g9_ownMorphEllipseGetBufferSize", "icv_s8_ownpi_dInterVectorClip_L_8u_C1", "icv_h9_ownSShorisontal_8u", "icv_w7_ownpi_WarpAffineNearest_64f_C3R", "icv_w7_ippiErodeGetSpecSize_L", "icv_p8_ownsInitTabDftDir_32f", "icv_p8_ownSS1_32f", "icv_g9_ippiSet_8u_C3MR", "icv_p8_ownLaplace3x3Row_8u_C1", "__dynamic_cast", "icv_h9_owniConvert_16u8s_avx2", "icv_g9_ownscDFTfwd_15_scale_32fc", "icv_p8_ownpis_Min_16u_C1", "icv_s8_ippiFFTInit_R_32f", "Java_org_opencv_calib3d_Calib3d_decomposeHomographyMat_10", "icv_g9_owniFilter_32f_C4R_g9e9_2", "icv_h9_ownpi_Sum_16u_C1R", "ippicviMirror_32s_C1R", "icv_h9_ownscDftFwd_Prime13_64fc", "_ZN2cv17distanceTransformERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_n0_own_ipps_sInvSqrt_S9HAynn", "icv_h9_ippiAddWeighted_8u32f_C1IR", "icv_h9_ippiResizeSuper_8u_C1R_L", "icv_p8_ownDistanceTransform_5x5_8u32f_C1R_21B", "icv_g9_ownsSub_8u_PosSfs", "icv_p8_ownNormRel_Inf_8s_C3CMR_V8", "_ZN2cv13applyColorMapERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "icv_w7_ownpi_OrC_16u_C4R", "icv_w7_ownpi_WarpAffine_C_Mem_16s_C4", "icv_w7_ippiScaleC_16s_C1R", "icv_h9_ownscDFTinv_11_64fc", "icv_s8_ownNorm_L2_8u_C1MR_W7", "icv_s8_owniFilterRobertsDownBorder2_32f_C1R", "_ZNK2cv11_InputArray6sizendEPii", "_ZN2cv5flann5IndexC1Ev", "icv_w7_ippiThreshold_LTVal_16s_C1IR", "icv_w7_ownpi_dInterVectorClip_L_32f_AC4", "icv_h9_ownMean_StdDev_32f_C3CR_HSW", "Java_org_opencv_dnn_Dnn_readNetFromCaffe_10", "cvPointSeqFromMat", "icv_h9_owniCopy_8u_C1MR", "_ZNK2cv4UMat7reshapeEii", "Java_org_opencv_objdetect_HOGDescriptor_get_1gammaCorrection_10", "icv_g9_ippsDFTFwd_RToPack_32f", "_ZN2cv3ogl6Buffer9mapDeviceEv", "_ZN2cv3dnn19experimental_dnn_v116ConvolutionLayer6createERKNS1_11LayerParamsE", "_ZNK2cv5MatOp3absERKNS_7MatExprERS1_", "icv_h9_owniCopy_8u_C4MR", "icv_p8_ippiFilterBorder_16u_C4R", "icv_h9_owniConvert_32s16s_C1RSfs", "icv_g9_ownpi_WarpAffineCubic_64f_C1R", "icv_w7_owns_rFFTinv_8_scale_64f", "icv_g9_ippiCountInRange_32f_C1R", "icv_g9_ownColLanczos3_8u", "icv_w7_ownippiFilterMedianCom_8u", "cvConvertScale", "icv_p8_ownsrDftInv_Conv_64f", "ippicviConvert_32f8s_C1RSfs", "icv_s8_piFilterBoxBorder_32f_C1IR_2_v8u8_NA", "ippicviFilterRowBorderPipeline_32f_C1R", "icv_w7_ippiResizeCubic_8u_C1R_L", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_W7", "icv_h9_ownRow1Filter10_16s", "icv_h9_ownSS3_53_16u", "icv_g9_ownpi_WarpSimpleLinear_16s_C4R", "icv_s8_owniSet_16s_C4_W7", "icv_h9_ownSS1_94_16s", "icv_w7_ownippiFilterMedianHoriz_16s_BC4R_3x1", "icv_s8_ownCopySubpix_8u32f_C1R_W7", "icv_p8_ippiResizeAntialiasing_16s_C4R_L", "icv_w7_ownsPowOne_w7", "_ZN2cv3hal6min16sEPKsjS2_jPsjiiPv", "icv_p8_owns_BitRev1_C", "Java_org_opencv_calib3d_Calib3d_findCirclesGrid_11", "icv_p8_ownpi_Sum_16s_C3R", "icv_p8_gres_NormL2Diff_16u_C1R", "_Unwind_ForcedUnwind", "icv_p8_owniResizeNearest_32f_C3R", "ippicviSwapChannels_16u_C3R", "icv_s8_ippiNormDiff_Inf_16u_C1R", "icv_w7_owniResizeNearest_8u_C1R", "icv_p8_ippiSet_16s_C3MR", "icv_s8_ownpi_WarpAffine_NN_Mem_8u_C4", "_ZN2cv20calcOpticalFlowPyrLKERKNS_11_InputArrayES2_S2_RKNS_17_InputOutputArrayERKNS_12_OutputArrayES8_NS_5Size_IiEEiNS_12TermCriteriaEid", "icv_g9_ippiDCTFwd_32f_C1R", "icv_h9_owniScaleC_64f16u_C1R_acc", "Java_org_opencv_photo_TonemapMantiuk_getSaturation_10", "Java_org_opencv_calib3d_Calib3d_calibrateCameraExtended_10", "_ZNK2cv11VideoWriter8isOpenedEv", "icv_p8_ownsSub_8u_Bound", "ippicviFilterMedianBorderGetBufferSize", "icv_w7_owns_cFftFwd_Fact4_64fc", "icv_p8_ippiFilterMedianBorder_16u_C3R", "icv_h9_ippiNot_8u_C1R", "icv_h9_ownippiFilterMin_8u_Col_h9l9", "icv_p8_ippiWarpAffineCubic_32f_C4R", "_ZN2cv9videostab17WeightingDeblurerC1Ev", "icv_s8_ownpi_NormL2_8u_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_getLambda_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_V8", "icv_s8_ippsFFTFwd_CToC_32fc", "icv_w7_ownscrDftFwd_Fact5_32f", "icv_h9_owns_cFFTinv_32_64fc", "icv_s8_ippiCopyReplicateBorder_32s_C1IR", "icv_h9_ownSS3_43_16u", "icv_h9_ippiNormRel_Inf_16u_C1R", "icv_h9_owniCopy_16s_C3P3R_cn", "_ZN2cv9videostab25ensureInclusionConstraintERKNS_3MatENS_5Size_IiEEf", "_ZN2cvngERKNS_3MatE", "icv_w7_ippiGetNormalizedCentralMoment_64f", "_ZN3tbb8internal17generic_scheduler15leave_task_poolEv", "ippicviSet_16u_C3R", "icv_h9_ownSS4_65_16s", "icv_g9_ownpi_SimpleRotate_32f_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_W7", "icv_s8_owniGetRectRightBF_8u_C1R", "icv_p8_ownSum_8s_C3CMR_V8", "_ZN2cv9videostab21ColorAverageInpainter7inpaintEiRNS_3MatES3_", "icv_p8_ownpi_WarpAffine_NN_Repl_16s_C1", "icv_h9_ownSS1_65_16u", "icv_g9_ownSS4_72_32f", "ippicviMinIndx_16u_C1R", "icv_s8_owniCopy32sC4Mas", "icv_s8_ippiNormDiff_Inf_8u_C1R", "icv_g9_owniSet_16s_C3MR", "icv_h9_cv_ownippiFilterMin_8u_Row", "icv_h9_ownSS1_a7_16s", "ippicviDFTFwd_RToPack_32f_C1R", "icv_g9_ownSS4_41_32f", "Java_org_opencv_dnn_Net_setInput_11", "icv_p8_owniFlip_8u_C4I_W7", "icv_s8_owniFilter_32f_C4R_v8u8_6", "icv_p8_ownSS4_16u", "icv_g9_owniScaleC_16u64f_C1R_fst", "icv_h9_ownSS3_21_16s", "_ZN2cv2ml7ANN_MLP6createEv", "icv_w7_ownpi_Max_16s_C3R", "icv_w7_ippiSum_16s_C4R", "icv_s8_ippiAddProduct_16u32f_C1IR", "icv_w7_ownippiFilterMax_32f_Row", "icv_s8_owniResizeCubic_8u_C1R", "Java_org_opencv_ml_TrainData_setTrainTestSplit_10", "icv_g9_ownpi_WarpAffineSimpleLinear_32f_C1R", "icv_g9_owniFilter_32f_C1R_g9e9_5", "icv_p8_owniFilter_32f_C3R_v8u8_7", "_ZN2cv6detail5Graph7addEdgeEiif", "icv_w7_owniConvert_8s32f_W7", "icv_g9_owniFilter32f_16u_C4R_g9e9_2", "icv_w7_ownps_Mul_16u_Sfs", "_ZN2cv18getAffineTransformERKNS_11_InputArrayES2_", "icv_p8_ownippiFilterMedian_8u_BC4R_3x3", "icv_p8_ippiSwapChannels_32f_C4C3R", "icv_s8_ownscDftFwd_Fact4_32fc", "_ZN2cv3hal2LUEPfjiS1_ji", "Java_org_opencv_calib3d_StereoBM_setROI2_10", "icv_g9_ippiResizeLinear_8u_C4R_L", "icv_w7_ippiCopyReplicateBorder_32f_C1R_L", "icv_w7_ippiAddWeighted_32f_C1IR", "icv_p8_ippiScaleC_16u64f_C1R", "icv_w7_ippiCannyGetSize", "icv_w7_owniResizeLanczos_8u_C4R", "icv_p8_owniScaleC_32f32s_C1R_fst", "icv_h9_owniSet_32s_C3R", "Java_org_opencv_ml_SVM_setDegree_10", "icv_p8_ippiWarpAffineNearest_64f_C3R", "_ZN2cv15convertScaleAbsERKNS_11_InputArrayERKNS_12_OutputArrayEdd", "icv_p8_ownSS1_73_16u", "_ZN2cv5flann16SavedIndexParamsC2ERKNS_6StringE", "icv_p8_ownsConj_32fc_I_T7", "_ZN2cv3dnn19experimental_dnn_v15Layer13setActivationERKNS_3PtrINS1_15ActivationLayerEEE", "icv_s8_ownpi_WarpAffine_L_Const_64f_C1", "Java_org_opencv_photo_TonemapDurand_setSigmaColor_10", "Java_org_opencv_features2d_MSER_setPass2Only_10", "icv_s8_ownpi_dInterVectorClip_NN_8_C4", "_Z17cvCreateSparseMatRKN2cv9SparseMatE", "Java_org_opencv_core_Core_norm_12", "icv_s8_ownNormDiff_L2_8u_C3CMR_V8", "icv_g9_ownscDFTinv_10_scale_64fc", "icv_s8_ownsConvert_16s32s_W7", "icv_h9_ippiSub_8u_C1RSfs", "icv_g9_ippiScaleC_16s8u_C1R", "_ZN2cv11RNG_MT199374seedEj", "Java_org_opencv_imgproc_Imgproc_polylines_10", "icv_g9_owniCopyBF_8u_C1R", "icv_h9_ownpi_WarpAffine_NN_Repl_32f_C4", "icv_p8_ownippiFilterMedianVert_16u_1x3", "icv_p8_ownSumSq_8u_C3CR_W7", "_ZN2cv3absERKNS_3MatE", "icv_p8_ownColLanczos3_16u", "icv_h9_ownResize3Antialiasing_16s", "icv_g9_cv_ownippiFilterMin_8u_Col", "_ZN9CvLevMarqD2Ev", "icv_s8_ownsMul_16s_NegSfs", "icv_h9_ippiSub_16s_C1RSfs", "icv_p8_owniFilterScharrVertMaskBorder2_32f_C1R", "cvFirstType", "icv_w7_ippiMorphInit_L", "icv_w7_ippiResizeCubic_16u_C1R_L", "icv_p8_ownpi_WarpAffine_L_Const_64f_C3", "icv_p8_ownippiFilterMedianCross_16u_C3R_3x3", "icv_p8_ippiMean_16s_C1R", "icv_h9_ownsrDftFwd_PrimeFact_32f", "icv_h9_ippiMirror_16u_C4IR", "icv_p8_ownsrDFTfwd_13_64f", "icv_p8_ownpi_WarpAffine_NN_Repl_16u_C1", "icv_p8_owniExchange_8u_I_A6", "icv_s8_ippiDotProd_32f64f_C1R", "icv_w7_ownpi_WarpAffine_C_Mem_16s_C3", "icv_w7_owniCrossCorrNorm_FullSame_32f_C1R", "icv_p8_ippiScaleC_32f_C1IR", "icv_g9_ownResize1Linear16s", "icv_g9_owniResizeAntialiasingCubicInit_L", "icv_s8_ownpi_dInterVectorClip_NN_8_P3", "Java_org_opencv_imgproc_Imgproc_Scharr_12", "_ZN2cv11convertMapsERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_ib", "Java_org_opencv_ml_DTrees_setPriors_10", "icv_p8_ownippiFilterMedian_16u_C3R_5x5", "icv_g9_owniCrossCorrValid_NormLevel_32f_C1R", "icv_h9_ownpi_NormInf_16s_C1R", "icv_h9_ownsMaxEvery_16u_avx2", "icv_p8_owniFilter_32f_C1R_v8u8_3NA", "icv_s8_ownLaplace3x3Row_16s_AC4", "icv_w7_ownLaplRow5x5_8u_C1", "icv_p8_Moments8uC1R_64f_FAST", "icv_p8_ownRow4Linear32f", "icv_g9_ippiFilterBoxBorder_16s_C4R", "icv_g9_ownsrDFTinv_5_32f", "icv_w7_ippiNorm_L2_8u_C1MR", "icv_h9_ownscDftInv_Prime3_32fc", "icv_h9_ippiMorphBlackhat_8u_C3R_L", "icv_s8_ippiResizeLinear_16s_C1R_L", "_Unwind_GetTextRelBase", "icv_g9_owniFilter32f_16s_C4R_g9e9_5", "icv_s8_ippiNormRel_L1_32f_C1MR", "icv_p8_ippiScaleC_8u32f_C1R", "Java_org_opencv_imgproc_Imgproc_minEnclosingCircle_10", "_ZN2cv3maxERKNS_3MatEd", "_ZN2cv2ml12randMVNormalERKNS_11_InputArrayES3_iRKNS_12_OutputArrayE", "icv_h9_ippiDFTFwd_RToPack_32f_C1R", "icv_p8_ownsSub_16s_Bound", "icv_p8_owniCorrectAutoNormMean_32f_C1R", "icv_g9_ownSS4_73_16u", "icv_p8_ownAddProduct_8u32f_C1IMR_P8", "_ZN2cvleERKNS_3MatEd", "icv_w7_ippiSwapChannels_32f_C4R", "icv_p8_ownResize1Lanczos2_32f", "icv_w7_ippiResizeGetBorderSize_L", "icv_g9_ownRow3Antialiasing_8u", "icv_w7_ownscDftInv_Fact7_64fc", "_ZN2cv3hal5xor8uEPKhjS2_jPhjiiPv", "icv_s8_ownpi_MaxIndx_16s_C1R", "icv_h9_ownpi_WarpSimpleGetBufferSize", "icv_p8_ownSumSq_32f_C1R_smallsize_W7", "icv_w7_owns_cFftInv_Large_64fc", "icv_w7_ownscDftInv_Prime3_64fc", "icv_w7_ownsrDFTinv_12_32f", "_ZN2cv3ocl17convertFromBufferEPvjiiiRNS_4UMatE", "icv_p8_ippiScaleC_16u32s_C1R", "icv_p8_ippiFilterBorder_32f_C1R", "_ZN2cv3dnn19experimental_dnn_v112EltwiseLayer6createERKNS1_11LayerParamsE", "icv_h9_innerHSVToRGB_8u_C3R", "icv_s8_ownSS4_72_16u", "icv_s8_ownpi_WarpAffine_L_Const_16s_C3", "iwTls_Release", "icv_g9_ippiSwapChannels_32f_C4C3R", "Java_org_opencv_video_BackgroundSubtractorKNN_getHistory_10", "icv_s8_ownpi_Rotate90_8_C1R", "icv_s8_ownscrDftFwd_Fact_64f", "icv_w7_ownsConvert_32s16s_W7", "icv_p8_ownpi_Histogram_8u_C3R", "icv_p8_ippiFilterBorder_8u_C4R", "cvAbsDiff", "icv_p8_owns_cFftFwd_Fact4_Last_64fc", "icv_w7_ippiWarpAffineLinear_16u_C1R", "icv_w7_ippiColorToGray_32f_C3C1R", "icv_g9_ownResize4Linear16s", "icv_p8_owniScaleC_32f32s_C1R_acc", "icv_p8_ippiScaleC_16u32f_C1R", "icv_s8_ippiNorm_L2_32f_C1R", "ippicviDFTInv_PackToR_32f_C1R", "icv_h9_BUFSIZE_FUNC", "icv_w7_ownAFilterRow_16s_C3R", "icv_g9_owniFilterSobelVertBorder2_16s_C1R", "icv_h9_ippiMean_16s_C4R", "icv_g9_ippiMaxIndx_8u_C1R", "icv_g9_owniFilterBilateralR2_InMem_8u_C3R_L", "icv_g9_owniScaleC_32s32s_C1R_fst", "icv_h9_ownSS3_52_32f", "icv_h9_ippiCopy_32f_P3C3R", "icv_s8_ownpi_NormInf_16u_C1R", "Java_org_opencv_calib3d_Calib3d_findFundamentalMat_12", "icv_g9_ippiCopyMirrorBorder_32s_C1R_L", "icv_p8_ippiComputeThreshold_Otsu_8u_C1R", "icv_g9_ownscDFTfwd_12_32fc", "icv_p8_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_V8", "icv_p8_ownBFilterRow32f_16s_C3R", "icv_w7_ippiMean_16s_C3R", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringEd", "Java_org_opencv_ml_EM_getClustersNumber_10", "icv_s8_ownpi_MinMax_8u_AC4R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_V8", "icv_w7_ippsMalloc_8u_L", "icv_h9_ownippiFilterMedian_16u_C3R", "icv_h9_owniFilter32f_16u_C3R_g9e9_0", "Java_org_opencv_ml_LogisticRegression_getMiniBatchSize_10", "icv_s8_owniResizeCubic_32f_C1R", "icv_s8_ippsDFTInit_R_64f", "icv_p8_ownpis_Indx_8u_C3", "_Z20vector_DMatch_to_MatRSt6vectorIN2cv6DMatchESaIS1_EERNS0_3MatE", "_ZN2cv2ml9ParamGridC2Ev", "icv_w7_ownpis_Indx_32f_C4", "icv_s8_ownDistanceTransform_5x5_8u_C1R_New_F_W7", "Java_org_opencv_dnn_Layer_set_1blobs_10", "icv_g9_ippiMean_StdDev_16u_C3CR", "icv_p8_ownSS4_73_16s", "Java_org_opencv_ml_RTrees_load_10", "icv_p8_ippiCopy_8u_C1MR", "icv_s8_ownAbsDiffC_8u_C1R_W7", "Java_org_opencv_features2d_ORB_setScoreType_10", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_W7", "icv_w7_ippiCopyMirrorBorder_32f_C3R_L", "icv_s8_DotProd_64f", "Java_org_opencv_videoio_VideoWriter_isOpened_10", "iwiSet", "icv_s8_ippiFilterBilateralBorderInit", "icv_h9_ownscDftFwd_Prime7_64fc", "icv_h9_ownWarpSimple3Nearest8u", "icv_h9_ownSS4_94_8u", "icv_w7_ownscDftInv_Prime7_32fc", "icv_h9_ownsrDFTinv_6_64f", "icv_g9_ownResize1Lanczos2_32f", "icv_p8_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_h9_ippiFilterBoxBorder_32f_C4R", "icv_h9_ippiSet_32f_C1MR", "icv_s8_ippiHarrisCornerGetBufferSize", "_ZNK2cv10softdoubleneERKS0_", "icv_p8_owniScaleC_8s64f_C1R_fst", "icv_s8_ippiCopy_32f_C1R", "icv_h9_ownpi_WarpAffine_C_Transp_32f_C1", "icv_s8_ippiScaleC_8s16s_C1R", "icv_p8_ippiWarpAffineNearest_8u_C3R", "icv_s8_ownscDftInv_Fact11_64fc", "icv_s8_owns_rFFTinv_32_64f", "WebPEncodeLosslessBGR", "icv_w7_ownNormDiff_L2_16u_C1MR_W7", "icv_p8_ippiMean_8u_C3R", "icv_p8_ownippsCnvrt_16s32f", "icv_s8_ownSS4_31_16s", "icv_g9_owniShiftClipRectZeroTail_32f_C1R", "icv_s8_ownpi_dInterVector_NN_8_P4", "icv_p8_ownpi_WarpAffine_NN_Const_32f_C1", "_ZN2cv3PCAC1ERKNS_11_InputArrayES3_id", "icv_p8_ownpi_Min_8u_C3R", "_ZNK2cv3ocl6Device4nameEv", "icv_h9_ownpi_WarpAffineSimpleNearest_16u_C4R", "icv_h9_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_G9E9cn", "icv_g9_owniResizeLinear_64f_C3R", "icv_p8_ippiMinMaxIndx_32f_C1R", "icv_s8_ippiCopy_32f_C3R_L", "ippicvFree", "_ZNK2cv9softfloatcvNS_10softdoubleEEv", "icv_g9_owniScaleC_8u64f_C1R_acc", "icv_w7_ownscDftFwd_Prime_64fc", "icv_g9_owniScaleC_32f64f_C1R_fst", "icv_w7_ippiCopy_8u_C1R_L", "icv_w7_ownResize1Antialiasing_32f", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColoredMulti_10", "icv_w7_ippiResizeNearestInit_L", "icv_p8_ownippiThreshold_GLV_8u_C1", "Java_org_opencv_features2d_ORB_getNLevels_10", "Java_org_opencv_imgproc_Imgproc_accumulate_10", "Java_org_opencv_video_BackgroundSubtractorKNN_getDist2Threshold_10", "ippicviConvert_16s32f_C1R", "icv_h9_owns_initTabTwdRealRec_32f", "icv_h9_ownippiFilterMedianHoriz_16s_C1R_5x1", "icv_g9_ownpi_WarpAffineSimpleNearest_32f_C3R", "icv_g9_ippiMean_StdDev_8u_C1R", "icv_h9_ippiCopy_8u_C4C1R", "ippicviResizeAntialiasing_16u_C4R_L", "icv_g9_ippiResizeCubic_16s_C4R_L", "Java_org_opencv_dnn_Layer_get_1blobs_10", "icv_p8_owniCrossCorrValid_NormLevel_8u32f_C1R", "icv_g9_ippiErode_8u_C1R_L", "ippicviNorm_Inf_8u_C3CMR", "Java_org_opencv_calib3d_Calib3d_convertPointsToHomogeneous_10", "icv_p8_ownpi_WarpAffine_NN_Const_16s_C3", "icv_w7_ippiCopy_8u_C3MR", "_ZN2cv3ocl6DeviceC1ERKS1_", "ippicviSet_8u_C1R", "icv_h9_ippiCopy_32s_C4MR", "icv_w7_ippiCopy_16s_AC4R", "icv_s8_ownSS1vertical_8u", "icv_s8_ownippiFilterMedianCross_16s_C3R_3x3", "ippicviMorphOpen_32f_C4R_L", "_ZN2cv3ocl7Program9getPrefixERKNS_6StringE", "Java_org_opencv_photo_Photo_createTonemapMantiuk_11", "_ZN2cv4cuda6Stream9waitEventERKNS0_5EventE", "icv_g9_owniFilterBilateralCom_InMem_8u_C1R_L", "icv_s8_ownpi_WarpAffine_L_Repl_32f_C1", "icv_p8_ownSumSq_8u_C3CMR_V8", "icv_s8_ownippiFilterMax_16s_Col", "icv_g9_ippiSum_32f_C1R", "_ZN2cv12getThreadNumEv", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_V8", "icv_p8_ownsrDftFwd_PrimeFact_64f", "ippicviCopy_8u_C4C1R", "icv_h9_ippsDCTFwdGetSize_32f", "icv_h9_ownscDFTfwd_11_32fc", "_ZN2cv5flann11IndexParams9setDoubleERKNS_6StringEd", "_ZN3tbb18task_group_context19capture_fp_settingsEv", "Java_org_opencv_ml_EM_trainE_10", "icv_s8_ownpi_WarpSimpleCubic_8u_C3R", "icv_g9_ippiCopy_16s_AC4R", "_ZN2cv10getSeqElemEPK5CvSeqi", "_ZNK2cv3ocl6Device12endianLittleEv", "icv_g9_cv_ownippiFilterMin_8u_Msk", "icv_s8_ownSS1_52_32f", "icv_g9_owniCopyMirrorBorder_16s_C1R", "_ZN2cv23getPerspectiveTransformERKNS_11_InputArrayES2_", "Java_org_opencv_core_Core_randShuffle_11", "icv_h9_ownFilterBoxBorder_8u_AC4R", "icv_p8_ippiTranspose_8u_C4R", "icv_n0_own_ipps_sError", "_ZN10__cxxabiv120__si_class_type_infoD1Ev", "icv_p8_ownpi_Min_16s_C4R", "icv_s8_ippsExp_64f_A50", "icv_s8_ownpi_Max_8u_C3R", "icv_g9_ownsrDFTinv_15_32f", "icv_s8_owniResizeCubic_16u_C4R", "icv_p8_owniResizeNearest_8u_C4R", "Java_org_opencv_calib3d_Calib3d_composeRT_10", "icv_s8_ippiWarpAffineCubic_64f_C3R", "icv_w7_ownpi_WarpAffineLinear_8u_C4R", "icv_p8_ownsrDFTfwd_3_32f", "_ZN2cv8Subdiv2D6VertexC2Ev", "icv_h9_ownippiFilterMedianVert_16u", "icv_s8_owns_rFFTinv_32_scale_32f", "icv_s8_Moments32fC1R_64f_FAST", "_ZN2cv13HOGDescriptor12readALTModelENS_6StringE", "icv_w7_ippiAddC_32f_C1R", "icv_h9_ownpi_WarpAffineCubic_32f_C3R", "_ZN2cv3hal7normL1_EPKfS2_i", "icv_s8_ownpi_NormInfDiff_32f_C1R", "icv_g9_piGradient8u", "_ZN2cv3PCAclERKNS_11_InputArrayES3_id", "icv_w7_owniShiftClipRectZeroTail_32f_C1R", "icv_w7_ownsMul_64f_I", "icv_s8_ownpi_WarpAffine_NN_Repl_16s_C1", "__TBB_machine_store8_slow_perf_warning", "icv_s8_ippsExpOneF", "icv_s8_ownpi_NormL2Diff_16s_C1R", "Java_org_opencv_features2d_Feature2D_detect_10", "_ZN2cv5pyrUpERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_5Size_IiEEi", "icv_g9_ippiMoments64f_8u_C1R", "cvSubRS", "_Unwind_GetIPInfo", "icv_w7_ownippiFilterMedianVert_8u", "Java_org_opencv_photo_TonemapDrago_getBias_10", "icv_w7_ippiMaxIndx_32f_C1R", "icv_w7_ownColAA_16u", "_ZN2cv2ml3SVM17getDefaultGridPtrEi", "icv_h9_ownpi_WarpAffine_L_Repl_16s_C3", "icv_p8_ippiMin_32f_C1R", "icv_p8_ippiScaleC_16s8u_C1R", "icv_w7_ownsrDFTinv_14_32f", "icv_p8_owniTranspose32s_C4R_core2", "icv_s8_ownpi_CmpEQ_8u_C1R", "icv_p8_ippsSortRadixIndexDescend_8u", "icv_p8_owngetSizeBufferOfBorders", "icv_s8_ownpi_WarpAffine_NN_Mem_16u_C4", "icv_p8_ownResize4Cubic16s", "icv_w7_owniCopy_16u_AC4_A6", "icv_g9_ownSS3_21_16u", "_ZNK2cv2ml9TrainData17getVarSymbolFlagsEv", "icv_w7_ippiScaleC_16u_C1R", "icv_h9_ippsSortAscend_32f_I", "icv_s8_owniFilterSobelVertSecondBorder2_32f_C1R", "icv_n0_own_ipps_sExp_W7LAynn", "icv_g9_ownpi_WarpAffine_C_Mem_8u_C4", "icv_p8_ippiMin_8u_C1R", "_ZNK2cv16MinProblemSolver8Function14getGradientEpsEv", "icv_h9_ownSS1_83_16u", "icv_g9_ownpi_Rotate180_16_C1R", "Java_org_opencv_features2d_ORB_create_10", "icv_w7_ownsAdd_32f", "ippicviMirror_8u_C1R", "Java_org_opencv_imgproc_Imgproc_cornerEigenValsAndVecs_11", "icv_g9_innerNormL2_3x3", "_ZN2cv3dnn19experimental_dnn_v112SoftmaxLayer6createERKNS1_11LayerParamsE", "icv_w7_ippiThreshold_GTVal_8u_C1R", "icv_p8_ownscDftInv_Prime_64fc", "_ZN2cv12boundingRectERKNS_11_InputArrayE", "icv_s8_ownscrDftInv_Fact2_64f", "icv_h9_ippiMomentInit_64f", "icv_w7_ownCanny_32f8u_C1R_1_32s_W7", "_ZN2cv3ogl9Texture2DC2EiiNS1_6FormatEjb", "icv_p8_ippiMirror_8u_C1R", "icv_w7_ownscDFTinv_11_scale_64fc", "icv_p8_owniFilterSobelNegVertBorder2_32f_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_W7", "icv_g9_ippsMulC_64f_I", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_W7", "cvLoadHaarClassifierCascade", "icv_s8_ownpi_WarpAffine_C_Mem_8u_C4", "_ZN2cvmiERKNS_7Scalar_IdEERKNS_3MatE", "icv_p8_ippiTranspose_8u_C1IR", "_ZN3tbb8internal6market7processERN3rml3jobE", "icv_w7_owniConvert_32f16u_AC4_W7", "icv_w7_ippiMirror_16s_C1R", "icv_s8_owns_BitRev2_4", "icv_s8_ippiTranspose_8u_C4R", "Java_org_opencv_imgproc_Imgproc_demosaicing_11", "icv_g9_owniFilterBilateralCom_InMem_8u_C3R_L", "icv_s8_ownpi_WarpAffine_L_8u_P3", "icv_s8_ownpi_Min_8u_C3R", "icv_g9_owniFilterPrewittHorizBorder2_32f_C1R", "icv_h9_owniResizeGetBorderSize", "icv_s8_ownNorm_Inf_32f_C1MR_W7", "icv_p8_ownippiFilterMax_16s_Row", "icv_p8_ippiCopy_16s_C3P3R", "_ZN2cv3Mat8pop_backEj", "_ZN2cv7inRangeERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayE", "icv_p8_ownpi_WarpAffine_C_Repl_64f_C3", "icv_g9_ownpi_WarpSimpleCubic_16u_C1R", "icv_s8_cv_ownippiFilterMxMnBorder_L", "_ZN2cv3hal6div64fEPKdjS2_jPdjiiPv", "Java_org_opencv_features2d_BOWTrainer_cluster_10", "iwiImage_RoiSet", "icv_p8_ownRow1Linear8u", "icv_p8_ownSS4_a7_16s", "icv_s8_owniTranspose_32s_C1R_W7", "icv_p8_ippiFilterBorderInit_32f", "icv_w7_ippiConvert_8u16u_C1R", "icv_h9_ownResize1Lanczos2_32f", "icv_h9_ownSS4_54_16s", "_ZN2cv15NAryMatIteratorC1EPPKNS_3MatEPPhi", "icv_g9_ippiResizeLanczos_8u_C1R_L", "Java_org_opencv_videoio_VideoCapture_VideoCapture_10", "icv_h9_ownpi_NormL1_32f_C1R", "icv_p8_ownpi_And_8u_AC4R", "icv_w7_ownpi_dInterVector_NN_8_C3", "icv_h9_ownscDFTfwd_5_scale_64fc", "ippicvsSortRadixIndexDescend_16u", "icv_s8_ippsConvert_32s32f_Sfs", "icv_g9_ippiWarpAffineLinearInit", "icv_w7_ownCalcBorderR3Antialiasing_8u", "icv_p8_ippiMorphGradient_8u_C3R_L", "cvNormalizeHist", "icv_p8_ownpi_dInterVectorClip_NN_8_AC4", "icv_p8_owniScaleC_16s8s_C1R_acc", "icv_s8_ownpi_Xor_16u_AC4R", "icv_p8_ownSS1_a7_8u", "icv_g9_ippiScaleC_64f8s_C1R", "icv_w7_ippiCopy_16u_C3P3R", "icv_g9_ownsGetSizeTabDftInvRec_32f", "icv_p8_ownippiFilterMedianCross_8u_C3R_5x5", "icv_s8_ownpi_WarpAffine_NN_16_C1", "icv_w7_ownscDFTinv_12_scale_64fc", "icv_h9_ownSS3vertical_16u", "_Z19vector_float_to_MatRSt6vectorIfSaIfEERN2cv3MatE", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale_10", "icv_p8_owniResizeSuper_16u_C1R", "icv_s8_owniSwap_32s_C3C4R", "_ZN2cv4cuda6GpuMatC2ENS_5Size_IiEEiPvj", "icv_w7_ownpi_Sum_32f_C4R", "icv_s8_ippiResizeNearest_16u_C1R_L", "icv_g9_owns_rFFTinv_4_scale_32f", "icv_p8_owniGetRectTopBF_32f_C3R", "icv_p8_owniResizeSuper_16u_C3R", "icv_p8_ippsExpOneF", "icv_w7_ippiWarpGetBufferSize", "icv_p8_ownpi_WarpAffine_L_Const_32f_C1", "icv_w7_ownsrDFTinv_15_32f", "icv_s8_ippiSub_32f_C3R", "icv_p8_ippsSet_8u", "icv_g9_ippiMinMax_16u_C1R", "icv_w7_ownBuildFilter_32f", "icv_h9_owniFilter32f_8u_C1R_g9e9_7", "icv_h9_owniCopyBF_8u_C3R", "icv_p8_ippiAddProduct_32f_C1IR", "icv_g9_ippiSub_32f_C3R", "icv_p8_owniCrossCorrValid_8u32s_C1R", "icv_w7_ownpi_WarpAffine_NN_Repl_32f_C3", "icv_w7_ownpi_Rotate90_B_16_C4R", "_ZN2cv3hal11normHammingEPKhS2_ii", "icv_h9_ippsSqrt_32f_A21", "icv_h9_ippiResizeLinear_64f_C4R_L", "icv_g9_ownpi_WarpAffine_L_Mem_8u_C1", "icv_p8_ippiCopy_16s_C3MR", "Java_org_opencv_features2d_FastFeatureDetector_setType_10", "icv_s8_ippiResizeSuper_16s_C1R_L", "icv_w7_ownsConvert_64f32f_W7", "cvWriteString", "icv_h9_ownpi_Sum_16s_C1R", "icv_n0_own_ipps_dSinCos_V8EPnnn", "icv_p8_ipMirror135_8uC1R", "icv_h9_owniScaleC_32f8s_C1R_acc", "icv_g9_ippiFilterScharrVertMaskBorder_8u16s_C1R", "icv_h9_ippiConvert_16u32f_C1R", "icv_g9_ownscDFTfwd_12_64fc", "_ZNSt15__exception_ptr13exception_ptrC2Ev", "icv_w7_piFilter_8u_C1R", "Java_org_opencv_photo_Photo_createTonemapReinhard_10", "icv_s8_ippsFFTGetSize_R_64f", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_14", "icv_g9_ownRow3Lanczos3_32f", "_ZN2cv15NAryMatIteratorppEi", "icv_w7_ippiNorm_L1_32f_C1MR", "icv_h9_owns_rFFT_2_64f", "_ZN2cv3dnn19experimental_dnn_v15Layer8finalizeERKSt6vectorINS_3MatESaIS4_EE", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_W7", "icv_g9_ownippsCnvrtFin_32f8u_AVX", "icv_h9_ownpi_WarpAffineLinear_64f_C3R", "ippicviDFTGetSize_C_32fc", "icv_h9_owniShiftClipRectZeroTail_16u32f_C1R", "icv_g9_ippiMorphTophat_8u_C1R_L", "ippicviAdd_32f_C1IMR", "icv_h9_ownSS3_73_16s", "icv_s8_ownpi_WarpAffine_L_32f_P3", "icv_g9_owns_sDctInv_PreMul_32f", "_ZN2cv8va_intel3ocl23initializeContextFromVAEPvb", "ippicviFilterBoxBorder_16s_C4R", "icv_p8_ownMinMaxIndx_8u_C1R_W7_2", "icv_h9_owniResizeNearest_8u_C1R", "icv_h9_ownSS4_53_16u", "icv_g9_ownSSvsum_16s", "_ZN2cv3ogl6Buffer14setAutoReleaseEb", "icv_w7_ownpi_dInterVector_NN_16_AC4", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "Java_org_opencv_features2d_Params_set_1minDistBetweenBlobs_10", "Java_org_opencv_core_Core_checkRange_10", "icv_p8_ippiMul_16s_C1RSfs", "icv_w7_ippiCopyConstBorder_32s_C3R_L", "_ZN2cvmiERKNS_3MatERKNS_7MatExprE", "ippicviFilterBorder_16s_C3R", "ippicviScaleC_64f8u_C1R", "_ZN2cv2ml6SVMSGD6createEv", "_ZN2cv6detail15SphericalWarper15detectResultRoiENS_5Size_IiEERNS_6Point_IiEES6_", "icv_h9_ownsAdd_16u", "icv_s8_ownsConvert_32s16s_SfsNeg_W7", "icv_p8_ownpi_Min_32f_C4R", "Java_org_opencv_video_DualTVL1OpticalFlow_create_10", "icv_h9_ippiMinMax_8u_C1R", "icv_p8_ownNormRel_L2_8s_C3CMR_V8", "icv_p8_ownpi_NormInfRel_32f_C1R", "_ZN2cv23createAffineTransformerEb", "icv_g9_cv_ownippiFilterMin_8u_Row", "_ZN2cv19goodFeaturesToTrackERKNS_11_InputArrayERKNS_12_OutputArrayEiddS2_ibd", "icv_g9_owniResizeLanczos_8u_C1R", "icv_w7_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "icv_h9_ownRow3Cubic32f", "icv_h9_ownscDFTinv_9_64fc", "icv_p8_ownpi_WarpAffine_L_Mem_16s_C4", "_ZN2cv6detail12AffineWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "icv_g9_ownpi_NormInfRel_16u_C1R", "icv_h9_ownResize4Cubic8u", "icv_s8_ippiWarpAffineLinear_32f_C1R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_X", "_ZN2cv9videostab20WobbleSuppressorBaseC2Ev", "icv_p8_owniFilterBilateralR2_InMem_32f_C1R", "icv_w7_ownpi_dInterVector_L_16u_AC4", "_ZN2cv12pencilSketchERKNS_11_InputArrayERKNS_12_OutputArrayES5_fff", "icv_h9_ownpi_WarpSimpleNearest_64f_C3R", "icv_g9_ownResize4Nearest16s", "icv_s8_ownAddWeighted_16u32f_C1IR_W7", "icv_w7_ownColAA_16s", "Java_org_opencv_core_Core_transpose_10", "icv_s8_ownSS4_43_8u", "Java_org_opencv_core_Core_SVDecomp_10", "icv_g9_ownpi_WarpAffine_C_Repl_32f_C1", "icv_h9_owniConvert_16u32s_avx2", "Java_org_opencv_core_Mat_nGetD", "icv_p8_ippsInvSqrt_32f_A21", "icv_p8_computeTiles", "icv_g9_ownSS3_16u", "icv_g9_owns_cFftFwd_Large_32fc", "icv_s8_ownpi_OrC_16u_C3R", "icv_h9_ownpi_WarpAffine_C_Repl_8u_C3", "icv_h9_ippiNormRel_L1_16u_C1R", "ippicviFilterSobelVertSecondBorderGetBufferSize", "icv_h9_ippsPolarToCart_32f", "icv_w7_ippiMorphClose_8u_C3R_L", "icv_p8_ownpi_WarpAffineRect", "icv_h9_ippiTranspose_16s_C3R", "icv_p8_ippsSet_16s", "icv_s8_ippiWarpAffineLinear_64f_C4R", "icv_h9_ippsSortRadixGetBufferSize", "icv_s8_ippsFFTInit_C_64fc", "icv_h9_ippiNorm_L1_32f_C3CMR", "icv_p8_ippiCopy_16u_C3MR", "_ZN2cv26createGeneralizedHoughGuilEv", "Java_org_opencv_video_DualTVL1OpticalFlow_getTheta_10", "icv_n0_own_ipps_dSin_S9HAynn", "icv_p8_owniConvert_8u32s_W7", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_W7", "icv_w7_ownpi_CmpLT_16s_C1R", "icv_w7_ownippiFilterMin_16u_Col_AC4", "icv_p8_ownSS3_41_16u", "icv_h9_ownscDftInv_Fact7_64fc", "_ZN3tbb10interface914global_control15internal_createEv", "icv_p8_ippiSet_8u_C1MR", "_ZN2cv12VideoCapture4grabEv", "cvGetFileNodeByName", "icv_w7_owns_rFFT_2_32f", "icv_p8_ownpi_WarpAffineSimpleLinear_32f_C1R", "icv_h9_ownscDFTfwd_15_scale_64fc", "cvCopyHist", "icv_s8_ownsSubC_32f", "icv_g9_ownpi_SimpleRotate_64f_C3R", "icv_g9_ippiResizeAntialiasingLinearInit_L", "icv_s8_owniDenominator_C1R", "Java_org_opencv_core_Core_absdiff_10", "_ZN3tbb16spin_rw_mutex_v323internal_release_writerEv", "ippicviAddWeighted_8u32f_C1IMR", "icv_w7_ippiFilterBilateralBorderInit", "icv_g9_owns_rFFTinv_32_32f", "icv_s8_ippiFilterScharrVertMaskBorderGetBufferSize", "icv_w7_ippiCannyBorderGetSize", "_ZN2cv3dftERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_s8_ippiErode_8u_C3R_L", "icv_h9_ownResize3Lanczos3_8u", "Java_org_opencv_imgproc_Imgproc_floodFill_11", "Java_org_opencv_ml_ANN_1MLP_getRpropDWMax_10", "icv_s8_owns_getSizeDct_Conv_32f", "icv_p8_ownpi_Histogram_16s_C4R", "icv_g9_ippsMul_64fc", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_W7", "cvNextTreeNode", "ippicviMean_StdDev_32f_C1R", "icv_w7_dct_8x8_fwd_32f", "icv_p8_ippiMorphOpen_8u_C4R_L", "icv_p8_owniTranspose_32s_C1IR_W7", "icv_g9_ownpi_WarpAffineNearest_32f_C4R", "icv_w7_ippiCopyConstBorder_8u_C1R_L", "icv_p8_ippiNormDiff_L2_32f_C3CMR", "icv_w7_ownippiFilterMedianHoriz_16s_C3R_3x1", "ippicviWarpAffineLinear_16s_C4R", "icv_h9_ippiColorToGray_32f_AC4C1R", "icv_p8_ownpi_ClipLower", "ippicvsSortRadixAscend_16u_I", "icv_p8_ownemmssfen", "icv_w7_ownRow1Lanczos3_8u", "Java_org_opencv_ml_KNearest_getAlgorithmType_10", "icv_p8_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_W7cn", "icv_s8_ippiNormDiff_Inf_8u_C1MR", "icv_g9_ownsFFTGetBufSize_R_32f", "icv_s8_ownsConj_64fc_T7", "_ZNK2cv3ocl6Device17maxWriteImageArgsEv", "icv_p8_ownRow4Antialiasing_16u", "ippicviNormDiff_L2_16u_C1MR", "icv_h9_ippiResizeAntialiasing_32f_C4R_L", "icv_w7_ippsMul_64fc_I", "icv_w7_ippiFilterBoxBorder_8u_C4R", "icv_p8_owniConvert_8u16s_C1R", "_ZN2cv15stereoCalibrateERKNS_11_InputArrayES2_S2_RKNS_17_InputOutputArrayES5_S5_S5_NS_5Size_IiEERKNS_12_OutputArrayESA_SA_SA_iNS_12TermCriteriaE", "icv_s8_ownFilterRowBorderPipeline_32f_C3R", "icv_h9_ippiResizeLinear_16u_C1R_L", "icv_g9_owniFilterSobelNegVertBorder2_32f_C1R", "icv_w7_ownpi_dInterVectorClip_NN_32_C4", "icv_s8_ownippiThreshold_GLV_16s_C1", "icv_h9_ippiFilterSobelHorizBorder_16s_C1R", "icv_h9_ippiErode_16s_C1R_L", "_ZN2cv3SVDclERKNS_11_InputArrayEi", "icv_h9_ownMorphInit_1u_L", "icv_w7_ippiApplyHaarClassifier_32f_C1R", "icv_w7_ownAddProduct_16u32f_C1IMR_W7", "icv_s8_ownpi_WarpAffine_C_Const_16s_C3", "Java_org_opencv_core_Core_add_14", "icv_p8_ownippiFilterMedianHoriz_16u_C4R_5x1", "icv_p8_ownpi_dInterVector_L_8u_P4", "_ZN3tbb8internal5arena26restore_priorities_if_needEv", "icv_p8_ownsZero_8u", "Java_org_opencv_imgproc_Imgproc_bilateralFilter_11", "icv_s8_ownippiThreshold_V_8u_C3", "icv_s8_ownippiFilterMedianVert_16s_1x5", "icv_s8_ownpi_Or_16u_AC4R", "icv_s8_ippiMin_16u_C1R", "icv_s8_owns_cFft_BlkMerge_64fc", "_ZN2cv6detail18GraphCutSeamFinderD0Ev", "icv_h9_ownpi_WarpAffine_NN_Const_16s_C1", "icv_g9_ippiMarkSpeckles_8u_C1IR", "icv_g9_ownscDFTfwd_10_32fc", "icv_h9_ippiNormDiff_L2_8u_C1MR", "_ZN2cv4cuda11TargetArchs20hasEqualOrGreaterPtxEii", "icv_w7_owniTranspose_32s_C1R_W7_NT", "icv_p8_owniFilterScharrVertMaskBorder2_16s_C1R", "icv_w7_ownsfen", "icv_s8_owniFilterBilateralR2_InMem_32f_C3R_px", "_ZN3tbb8internal19itt_load_pointer_v3EPKv", "icv_s8_ownpi_WarpAffineNearest_64f_C1R", "icv_p8_owniCrossCorrValid_32f_C1R", "Java_org_opencv_ml_DTrees_setUse1SERule_10", "icv_s8_ownpi_WarpAffineCubic_8u_C4R", "ippicviMean_16u_C3CMR", "icv_w7_owns_initTabBitRevNorm", "icv_g9_ippiDilate_8u_C3R_L", "_ZN2cv8superres15SuperResolutionC1Ev", "icv_p8_ownResize4Lanczos2_32f", "icv_p8_ownscDftInv_Prime13_64fc", "Java_org_opencv_imgproc_Imgproc_demosaicing_10", "_ZNK2cv3ocl6Device10vendorNameEv", "icv_w7_ippiSet_16u_C1R", "icv_s8_owniSet_8u_C1_W7", "icv_w7_owniTplNormMean_8u32f_C1R", "cvCalcPCA", "ippicviSwapChannels_16u_C3C4R", "icv_s8_ownSS4_98_16u", "icv_h9_ownpi_WarpSimpleLinear_8u_C4R", "icv_s8_ownSS4_98_16s", "icv_s8_ippiNorm_Inf_8u_C1MR", "icv_p8_ownsrDFTfwd_9_scale_32f", "icv_w7_ownippiThreshold_LV_8u_C4", "icv_g9_ippiResizeNearestInit_L", "icv_h9_ippiConvert_8s32f_C1R", "icv_p8_ownpi_AndC_8u_C3R", "icv_w7_owniFilterBilateralCom_InMem_8u_C1R_px", "icv_g9_owns_cFFTinv_16_32fc", "icv_g9_ownpi_WarpAffine_NN_Repl_16u_C1", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_W7", "icv_w7_ownscDFTinv_14_scale_64fc", "icv_p8_ownpi_dInterVector_L_32f_AC4", "_ZNK2cv8FileNode4sizeEv", "icv_p8_ownNorm_Inf_32f_C3CMR_P8Y8", "icv_s8_ippiMinMaxIndx_8u_C1R", "icv_g9_ownResize1Nearest16s", "icv_w7_ownCalcBorderR1Cubic32f", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "icv_w7_ippsMaxEvery_64f", "icv_g9_ownCalcBorderR3Cubic32f", "icv_p8_ippiSet_32s_C3R", "icv_s8_ownpi_WarpAffine_NN_Repl_64f_C4", "icv_h9_ownpi_Set_64f_C4R", "_ZN2cv6detail16MultiBandBlenderC2Eiii", "icv_g9_ownpi_WarpAffineNearest_8u_C4R", "icv_p8_ownpi_WarpAffineSimpleLinear_32f_C4R", "icv_p8_ownippiFilterxBrd32f_16u_C3R", "icv_w7_ownpi_WarpAffine_NN_Repl_32f_C1", "icv_h9_ownpi_NormL2Diff_16s_C1R", "_ZN2cv2ml30createConcentricSpheresTestSetEiiiRKNS_12_OutputArrayES3_", "icv_p8_owniGetRectRightBF_32f_C3R", "icv_h9_ippiMoments64f_8u_C1R", "Java_org_opencv_imgproc_Imgproc_filter2D_12", "icv_s8_ippiCanny_16s8u_C1R", "icv_w7_owniAutoCorrFull_C1R", "ippicviWarpAffineLinear_8u_C3R", "cvRetrieveFrame", "_ZN2cv6detail27BundleAdjusterAffinePartial12calcJacobianERNS_3MatE", "icv_w7_owns_rFFTfwd_16_scale_32f", "icv_w7_ippiDCT8x8Fwd_32f_C1", "_ZNK2cv5MatOp12augAssignXorERKNS_7MatExprERNS_3MatE", "_ZN2cv8internal21EstimateUncertaintiesERKNS_11_InputArrayES3_RKNS0_15IntrinsicParamsES3_S3_RS4_RNS_3VecIdLi2EEEdiRd", "icv_w7_ownRow4AA_8u", "icv_p8_ippiFilterMedianBorder_16s_C4R", "icv_s8_ownippiFilterMedianHoriz_16s_C3R_3x1", "ippicviNormRel_Inf_8u_C1MR", "_ZN2cv3hal6add16uEPKtjS2_jPtjiiPv", "_ZNK2cv9softfloatleERKS0_", "icv_w7_ippiErode_32f_C1R_L", "icv_g9_owniGetRectRightBF_32f_C3R", "ippicviDilateGetBufferSize_L", "icv_s8_ownpi_WarpAffineBack", "ippicviSet_8u_C4MR", "icv_s8_ippiNormDiff_L2_8u_C1R", "icv_g9_ownpi_WarpAffine_CR_8u_C3", "icv_h9_owniResizeAntialiasingCubicInit_L", "icv_s8_cv_ownippiFilterMax_16u_Row", "icv_s8_ownFilterBoxBorderGetBufferSize", "Java_org_opencv_objdetect_HOGDescriptor_setSVMDetector_10", "_ZNK2cv3ocl6Device26preferredVectorWidthDoubleEv", "icv_g9_ownCalcBorderR4Lanczos3_16s", "_ZNSt9exceptionD1Ev", "cvLUT", "icv_s8_ippiFilterBoxBorder_32f_C3R", "icv_p8_ownSS3_31_8u", "_ZN3tbb8internal14observer_proxyC1ERNS0_26task_scheduler_observer_v3E", "icv_h9_ippiScaleC_64f16s_C1R", "icv_g9_cv_ownippiFilterMax_16s_Col", "icv_p8_ippiDilateGetBufferSize_L", "icv_h9_ippiThreshold_GT_16s_C1IR", "icv_p8_owniScaleC_8s64f_C1R_acc", "icv_w7_owniCopy_32f_C3M_W7", "icv_g9_owniScaleC_16s16u_C1R_acc", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_5x5_G9E9cn", "icv_s8_cv_ownippiFilterMin_16u_Col", "icv_g9_ownscDFTinv_15_64fc", "icv_h9_ownSS3_43_32f", "_ZN2cv9waitKeyExEi", "icv_g9_ippiMorphSetMode_L", "icv_h9_ownResize3Cubic16s", "icv_g9_owniScaleC_16s32s_C1R_acc", "icv_s8_ownResize3Lanczos3_32f", "_ZN2cv5utils5trace7details15getTraceManagerEv", "icv_w7_ippiMorphBlackhat_32f_C3R_L", "_ZN3tbb8internal15NFS_GetLineSizeEv", "icv_h9_owniResizeLanczos_32f_C3R", "icv_p8_ownpi_Rotate180_32_C1R", "icv_p8_ownCalcBorderR4Lanczos2_32f", "icv_h9_ippiResizeNearest_8u_C4R_L", "icv_s8_ippiCopy_16u_C3P3R", "icv_p8_owns_crFftInv_Fact4_Last_64f", "Java_org_opencv_core_Core_PSNR_10", "icv_w7_ippiCopyMirrorBorder_16u_C4IR", "icv_g9_ippiNormDiff_Inf_32f_C3CMR", "icv_p8_ownSS1_a7_32f", "icv_h9_ippiNormRel_L1_8u_C1R", "icv_g9_ownsrDFTinv_3_scale_64f", "ippicviTranspose_32s_C1R", "_ZN2cv5mergeERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_w7_owniSet_8u_C3_W7", "icv_g9_ownFilterRow32f_16s_C1R_g9e9", "icv_g9_ownResize3Linear8u", "icv_g9_ownscDftInv_Prime4_64fc", "icv_p8_owniConvert_8u32f_C1R", "icv_w7_ownpi_WarpAffine_NN_16_C1", "icv_s8_ownscDFTfwd_9_32fc", "icv_g9_ippiMinMax_32f_C1R", "icv_w7_ippiCopyReplicateBorder_8u_C4IR", "icv_h9_ownNormRel_L1_8u_C1MR_HSW", "icv_p8_owns_rFFT_1_scale_32f", "icv_h9_ippiMean_StdDev_8u_C1R", "icv_h9_owniScaleC_8s16s_C1R_fst", "Java_org_opencv_core_Core_max_11", "ippicviFilterScharrVertMaskBorder_32f_C1R", "_ZNK2cv21DetectionBasedTracker13getParametersEv", "icv_p8_ippiResizeSuper_8u_C4R_L", "Java_org_opencv_ml_SVMSGD_setSvmsgdType_10", "_ZN2cvdvEdRKNS_7MatExprE", "cvDFT", "icv_p8_dct_8x8_fwd_32f", "icv_g9_ownsrDFTinv_13_scale_32f", "_ZNK2cv12_OutputArray10getUMatRefEi", "icv_s8_ippsSet_8u", "icv_s8_ownippiFilterMedian_8u_C4R_5x5", "icv_p8_ownpi_WarpAffine_L_32f_C3", "icv_p8_ownippsSqrt_16sc_ASM_SF_S", "icv_g9_ownResize4Lanczos3_8u", "icv_p8_ownpi_WarpAffine_NN_Repl_64f_C4", "icv_h9_ippiMorphOpen_16s_C1R_L", "icv_p8_ownscDFTfwd_5_32fc", "icv_w7_ippiErode_32f_C4R_L", "icv_h9_ownscDftFwd_Prime7_32fc", "icv_p8_ownSS4_16s", "icv_h9_ippiResizeNearest_16u_C3R_L", "icv_g9_ownpi_dInterPoint_CR_PixelB_32f", "icv_p8_ownSS1_98_16u", "ippicviNorm_L1_32f_C1MR", "icv_h9_ownpiDotProd_16s64f_C1R", "icv_w7_ippiCopy_32f_C1C4R", "icv_p8_ownCalcBorderR3Lanczos3_16s", "icv_s8_ippiConvert_32f16s_C1R", "_ZN2cv3ogl9Texture2DC2Ev", "icv_s8_ownpi_Max_8u_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_V8", "icv_p8_owniConvert_32s8u_W7", "icv_h9_ownippiFilterMin_16s_Row_h9l9", "ippicviCrossCorrNorm_8u32f_C1R", "icv_h9_ownsMinEvery_8u_avx2", "icv_s8_ownscDftFwd_Prime2_64fc", "cvUndistort2", "Java_org_opencv_ml_SVM_getDegree_10", "icv_p8_ippiMirror_32s_C4IR", "icv_h9_ownpi_WarpAffineNearest_16s_C4R", "Java_org_opencv_core_Mat_n_1checkVector__JIIZ", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_V8", "Java_org_opencv_video_DualTVL1OpticalFlow_getUseInitialFlow_10", "icv_h9_ownsMul_8u_NegSfs", "_ZNK2cv5MatOp11augAssignOrERKNS_7MatExprERNS_3MatE", "_ZN2cv3hal11fastAtan64fEPKdS2_Pdib", "icv_s8_ownSS3_32_32f", "icv_w7_ownscDftInv_PrimeFact_32fc", "icv_h9_owniConvert_32f16u", "icv_h9_ownippiFilterxBrd_8u_C1R", "icv_p8_owniConvert_32f8u_AC4_W7", "icv_p8_ippiFilterBilateralBorder_32f_C1R", "icv_g9_cv_ownippiFilterMax_16u_Col", "icv_s8_ownpis_Sum_16u_C3", "cv2DRotationMatrix", "icv_p8_ippiCopy_16u_AC4C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_W7", "_ZN2cv3hal8CholeskyEPfjiS1_ji", "icv_h9_owniFlip_16u_C3", "icv_s8_ownLaplRow5x5_32f_C1", "icv_p8_ownpi_dInterVectorClip_L_16u_C1", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_V8", "icv_p8_ownSS3_43_8u", "cvEllipse", "_ZNK2cv11_InputArray5totalEi", "icv_h9_ippiWarpAffineLinear_64f_C4R", "icv_w7_ownpi_WarpSimpleLinear_32f_C3R", "icv_s8_owns_initTabTwdRealRec_64f", "icv_h9_ownNorm_Inf_8u_C1MR_HSW", "icv_h9_owniGetRectTop_32f", "icv_g9_ownpi_dInterPoint_CR_PixelB_16u", "icv_g9_owns_cFFT_2_32fc", "WebPFree", "ippicviFilterSobelHorizSecondBorder_8u16s_C1R", "_ZN2cv13HOGDescriptor24getDefaultPeopleDetectorEv", "icv_h9_ownRow3Cubic16u", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setWinSize_10", "icv_g9_ownscDftFwd_Fact13_32fc", "icv_w7_ownscrDftFwd_Fact4_64f", "_ZNK2cv3ocl6Device15maxComputeUnitsEv", "icv_s8_ownscDFTfwd_5_64fc", "cvStartWriteStruct", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_W7", "icv_p8_ippiMirror_16s_C1IR", "_Z21vector_Point2f_to_MatRSt6vectorIN2cv6Point_IfEESaIS2_EERNS0_3MatE", "icv_h9_ippiScaleC_64f32s_C1R", "icv_w7_ownippiFilterMedian_16s_BC4R", "_ZN2cv14seqInsertSliceEP5CvSeqiPKv", "_Z26Copy_vector_String_to_ListP7_JNIEnvRSt6vectorIN2cv6StringESaIS3_EEP8_jobject", "Java_org_opencv_core_Core_subtract_12", "icv_p8_ownResize4Linear16s", "icv_g9_ippiMirror_32f_C4R", "icv_s8_ownsCosOne_w7p8", "icv_w7_ippiDCTInvInit_32f", "icv_w7_ippsFree", "icv_h9_ippiNormDiff_L2_32f_C3CMR", "_ZN2cv13insertChannelERKNS_11_InputArrayERKNS_17_InputOutputArrayEi", "icv_h9_owniFlip_8u_C3", "icv_p8_ownippiFilterMedianHoriz_16u_C4R", "icv_w7_ownAddSquare_8u32f_C1IR_W7", "icv_g9_ippiResizeLanczos_8u_C3R_L", "icv_w7_owns_rFFTfwd_4_scale_64f", "icv_h9_ownpi_WarpSimpleLinear_8u_C3R", "icv_h9_owniResizeCubic_16u_C4R", "icv_g9_owniCopyMirrorBorder_16u_C4IR", "_ZN2cv3hal6div16sEPKsjS2_jPsjiiPv", "icv_w7_ippiSet_8u_C3MR", "icv_p8_ownSS4_94_32f", "icv_p8_ippiAddSquare_32f_C1IMR", "icv_g9_owniFilter_32f_C4R_g9e9_6", "icv_g9_ippiSum_32f_C3R", "icv_h9_ownpi_WarpSimpleNearest_32f_C4R", "icv_p8_ownippiFilterMax_8u_Row", "icv_g9_ownsMul_8u_NegSfs", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "icv_h9_ippsMul_32fc_I", "icv_h9_ownpi_WarpAffine_NN_Repl_8u_C1", "cvMinS", "icv_s8_ownRow4Cubic16s", "iwiCopyMask", "_ZN2cvmiERKNS_3MatERKNS_7Scalar_IdEE", "icv_h9_cv_ownippiFilterMin_16s_Msk", "_ZN2cv16TLSDataContainerC2Ev", "Java_org_opencv_features2d_AKAZE_setThreshold_10", "icv_g9_ippiTranspose_16s_C1IR", "_ZN2cv3hal11Cholesky32fEPfjiS1_ji", "icv_g9_owniConvert_32f32s_ccode", "Java_org_opencv_calib3d_Calib3d_getOptimalNewCameraMatrix_11", "icv_w7_ownpi_WarpAffine_L_Const_16u_C1", "icv_h9_ippiMirror_16u_C1R", "_ZN2cvorERKNS_3MatES2_", "icv_g9_ownpi_Rotate90_B_32_C4R", "icv_s8_ownSharpenRow_32f_AC4", "icv_p8_owniResizeNearest_16u_C3R", "icv_p8_ippiMarkSpeckles_16s_C1IR", "cvProjectPoints2", "icv_h9_ownSS1_a7_32f", "Java_org_opencv_imgproc_Imgproc_erode_11", "icv_s8_ownscDFTinv_7_64fc", "icv_p8_ownpi_WarpAffine_C_Mem_64f_C4", "icv_h9_ownFilterBoxBorderInMem_16s32f_C3R", "icv_w7_ownscDFTinv_13_scale_64fc", "icv_p8_ownscDFTinv_14_64fc", "icv_s8_owniFilter_32f_C4R_v8u8_4", "icv_w7_ippiMorphTophat_32f_C1R_L", "icv_s8_ownWarpSimple3Nearest16s", "icv_p8_ownpis_Min_8u_C4", "icv_h9_ippiWarpAffineLinear_16s_C3R", "icv_g9_owniResizeCubic_16u_C1R", "icv_w7_ippiResizeLinear_64f_C3R_L", "icv_w7_ownpi_NormL2Diff_32f_C1R", "cvInRangeS", "icv_w7_ownpi_WarpAffine_NN_Mem_32f_C1", "cvArcLength", "icv_s8_ownippiFilterMedian_16u_BC4R_5x5", "cvEstimateRigidTransform", "Java_org_opencv_ml_KNearest_getEmax_10", "ippicviResizeLanczos_8u_C1R_L", "icv_w7_ownCopySubpix_8u16u_C1R_Sfs_W7", "__register_frame_info_table", "icv_w7_ippiConvert_32s32f_C1R", "_ZN2cv9videostab15VideoFileSourceC2ERKNS_6StringEb", "Java_org_opencv_core_Mat_nPutS", "icv_h9_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_G9E9cn", "icv_s8_ownpi_ClipPolygon", "icv_s8_owniResizeNearest_16u_C3R", "icv_s8_ippiMorphGetBufferSize_L", "icv_g9_ippiCopyReplicateBorder_16s_C1R", "icv_g9_owniScaleC_64f32f_C1R_fst", "icv_h9_ownpi_WarpAffine_L_Repl_16u_C4", "icv_p8_ownLaplace3x3Row_16s_C3", "icv_p8_ippiScaleC_8u16s_C1R", "icv_p8_ippiCopy_16s_AC4R", "_ZN2cv4cuda6GpuMat7releaseEv", "icv_g9_ownSS4_41_16s", "_ZN3tbb16spin_rw_mutex_v327internal_try_acquire_readerEv", "Java_org_opencv_calib3d_Calib3d_stereoRectifyUncalibrated_11", "icv_p8_ownippiFilterMedianHoriz_16s_C3R", "icv_s8_owns_cFFTinv_16_64fc", "icv_w7_ippiMean_8u_C4R", "Java_org_opencv_ml_TrainData_getTestSampleIdx_10", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7_sym", "icv_s8_owniGetRectBottomBF_32f_C1R", "icv_w7_ippiResizeLinear_8u_C4R_L", "_ZN2cv3ocl6KernelC1EPKcRKNS0_7ProgramE", "icv_h9_ippiFilterSobelVertBorder_8u16s_C1R", "icv_g9_ippiMin_16u_C1R", "icv_g9_ippiNormRel_Inf_8u_C1MR", "_ZNK2cv3ocl6Device15image2DMaxWidthEv", "icv_s8_ownpi_Rotate90_B_32_C3R", "icv_s8_ownResize3Nearest8u", "icv_w7_ippiNormDiff_L2_16u_C1MR", "icv_w7_ownscrDftInv_Prime5_32f", "_ZN2cv4cuda18setBufferPoolUsageEb", "_ZNK3tbb4task26is_owned_by_current_threadEv", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_V8", "icv_p8_owniScaleC_16u8u_C1R_fst", "Java_org_opencv_core_Core_eigen_11", "icv_p8_ownpi_WarpAffine_L_8u_C4", "icv_p8_ownpi_WarpAffine_NN_8_C3", "icv_p8_owniScaleC_64f16u_C1R_acc", "icv_h9_ownpiDotProd_32f64f_C1R", "icv_w7_ownResize1Linear16u", "icv_h9_ownpi_WarpAffineSimpleNearest_16s_C3R", "_ZN2cv3MatC1ERKS0_RKNS_5RangeES5_", "icv_s8_ownRow4Lanczos3_16u", "icv_s8_ownIntegralSq_8u32s64f_C1R_V8", "_ZNK2cv6detail27BundleAdjusterAffinePartial25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_s8_ownpi_WarpSimpleLinear_32f_C1R", "icv_g9_ownpi_WarpAffineSimpleLinear_16s_C3R", "icv_h9_ownpi_NormInf_32f_C1R", "icv_p8_ownpi_MinMax_16s_AC4R", "Java_org_opencv_photo_MergeMertens_process_11", "Java_org_opencv_core_Core_magnitude_10", "icv_s8_ownpi_WarpAffine_NN_Repl_8u_C3", "icv_n0_own_ipps_dLn_S9EPnnn", "icv_w7_ippsCeilOne", "icv_s8_ownpi_dInterVectorClip_C_8u_P3", "icv_p8_ownsSinCosHuge", "_ZN2cv17DescriptorMatcher11isMaskedOutERKNS_11_InputArrayEi", "icv_w7_ippiMirror_8u_C4R", "icv_g9_owniResizeCubic_8u_C3R", "icv_g9_ownCalcBorderR3Antialiasing_16u", "_ZN2cv9floodFillERKNS_17_InputOutputArrayENS_6Point_IiEENS_7Scalar_IdEEPNS_5Rect_IiEES6_S6_i", "icv_p8_ippiDilate_32f_C1R_L", "_ZN10__cxxabiv117__pbase_type_infoD0Ev", "Java_org_opencv_calib3d_Calib3d_projectPoints_13", "icv_s8_ippiSet_32s_C3MR", "icv_s8_owns_cFFTinv_8_32fc", "icv_s8_ownCalcBorderR4Cubic32f", "icv_s8_ownippiFilterMedian_8u_C3R", "icv_p8_ownpi_WarpAffine_L_Mem_8u_C3", "icv_g9_ownscDFTfwd_13_scale_32fc", "icv_h9_ippiFilterSobelVertSecondBorder_32f_C1R", "_ZN2cv9RodriguesERKNS_11_InputArrayERKNS_12_OutputArrayES5_", "icv_s8_ippiMirror_16s_C4R", "icv_s8_ownAFilterRow32f_8u_C3R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_H9L9cn", "icv_h9_owniFilter32f_16u_C3R_g9e9_1", "_ZN2cv5Mutex7trylockEv", "icv_h9_ownpiDotProd_8u64f_C1R", "_ZNK2cv9SparseMat6copyToERS0_", "icv_s8_owns_initTabTwdCcsRec_64f", "icv_p8_cv_ownippiFilterMax_32f_Row", "icv_p8_ownscDftFwd_Fact7_32fc", "Java_org_opencv_photo_AlignExposures_process_10", "_ZN2cv8superres15SuperResolution5resetEv", "icv_w7_ownNormDiff_L1_8u_C3CMR_W7", "icv_w7_ownCalcBorderR4Lanczos3_16u", "icv_s8_ownpi_SimpleRotate_16u_C1R", "icv_h9_ownRow1Filter12_8u", "icv_w7_ownscrDftInv_Prime3_32f", "ippicviDCTInv_32f_C1R", "_ZNK2cv8Subdiv2D7symEdgeEi", "icv_s8_owniFilterScharrHorizMaskBorder2_8u16s_C1R", "icv_w7_owniResizeNearest_16s_C3R", "ippicviSwapChannels_8u_C3C4R", "icv_p8_ownpi_MinMax_8u_C3R", "_ZNK2cv2ml9TrainData8getNamesERSt6vectorINS_6StringESaIS3_EE", "icv_g9_ippiHSVToRGB_8u_C3R", "ippicvsMinEvery_64f", "icv_w7_ownippsCnvrtFin_32f8s_Sfs", "icv_p8_owniConvert_8s32s_W7", "_Unwind_Resume", "_ZN2cv8Subdiv2D8newPointENS_6Point_IfEEbi", "Java_org_opencv_features2d_AKAZE_getDescriptorChannels_10", "icv_g9_owniFilter32f_16u_C3R_g9e9_1", "icv_w7_ippsLn_64f_A50", "cvCreateSet", "icv_w7_ownpi_WarpAffineNearest_64f_C1R", "icv_s8_ownpi_WarpAffine_L_Mem_64f_C4", "ippicviMinMaxIndx_32f_C1R", "icv_w7_ownscDftInv_Fact5_64fc", "icv_g9_ippiThreshold_GT_8u_C1IR", "icv_w7_ownpi_WarpSimpleNearest_8u_C1R", "icv_g9_owniFilterBilateralR2_InMem_8u_C3R_px", "icv_h9_ownCalcBorderR3Lanczos2_32f", "_ZNK2cv3ocl6Device24preferredVectorWidthHalfEv", "icv_h9_owniFilter32f_16s_C1R_g9e9_0", "icv_g9_ownpi_WarpSimpleCubic_16s_C4R", "_Z17Mat_to_vector_MatRN2cv3MatERSt6vectorIS0_SaIS0_EE", "_ZN2cv5flann11IndexParams12setAlgorithmEi", "icv_w7_ownscDftFwd_Prime11_64fc", "icv_s8_owns_rFFTinv_16_32f", "icv_p8_ownippiFilterMedian_16s_C4R_5x5", "_ZN2cv7hconcatEPKNS_3MatEjRKNS_12_OutputArrayE", "icv_w7_ippiSqrDistanceNorm_32f_C1R", "icv_w7_ippiFilterMedianBorder_16s_C1R", "icv_w7_ippsConvert_32f8u_Sfs", "icv_s8_ownAddProduct_32f_C1IR_W7", "Java_org_opencv_video_BackgroundSubtractorMOG2_getShadowValue_10", "icv_p8_ippiCopy_32f_C3R_L", "icv_s8_ippiDilateGetSpecSize_L", "icv_s8_ownNormDiff_L1_32f_C1MR_W7", "icv_p8_ownCanny_16s8u_C1R_3_16u_W7", "icv_p8_ownsMaxFind_16s_W7", "icv_p8_ownFilterBilateralBorder", "iwiRoiPipeline_GetBoundedDstRect", "icv_s8_ownsAdd_32f", "icv_g9_ownsrDFTfwd_7_scale_64f", "icv_s8_ippiConvert_32f32s_C1RSfs", "_ZN2cvgeERKNS_3MatEd", "icv_s8_ippiCopyConstBorder_8u_C4R", "icv_w7_owns_rFFT_1_scale_32f", "icv_g9_ippiWarpAffineLinear_32f_C4R", "icv_s8_ippiDCTFwd_32f_C1R", "icv_g9_cv_ownippiFilterMax_16u_Row", "icv_s8_ownResize4Cubic16s", "icv_g9_ownscDftInv_Prime2_64fc", "icv_s8_ippiCopyConstBorder_16s_C1R", "_ZN2cv3PCAC2Ev", "icv_p8_ippiNormRel_Inf_16u_C1MR", "icv_h9_ippiMorphTophat_16s_C1R_L", "icv_p8_owniFilter_32f_C4R_v8u8_4", "cvInitFont", "icv_s8_ippiSwapChannels_32f_C3C4R", "Java_org_opencv_core_Core_idct_11", "icv_g9_ownsSub_8u_NegSfs", "icv_g9_ippiScaleC_16u64f_C1R", "icv_h9_ownResize4Nearest32f", "cvRepeat", "icv_s8_ownsrDFTinv_9_64f", "_ZN2cv3ocl8PlatformD1Ev", "icv_w7_ippiFilterBorderInit_32f", "_ZNK2cv3dnn19experimental_dnn_v13Net20getMemoryConsumptionERKSt6vectorIiSaIiEERS5_RS3_IjSaIjEESB_", "icv_s8_ippiMorphTophat_32f_C1R_L", "ippicviMorphGetSpecSize_L", "icv_g9_owniFilter32f_16u_C3R_g9e9_8", "icv_g9_ippiSqrIntegral_8u32s_C1R", "_ZN3tbb10interface78internal15task_arena_base21internal_current_slotEv", "icv_g9_ownSS1_21_16u", "icv_h9_ippiDFTInv_CToC_32fc_C1R", "icv_w7_piGradientSobel8u_c1", "_ZNK2cv12_OutputArray9fixedTypeEv", "icv_h9_ippiScaleC_8s32f_C1R", "icv_p8_ownSS1vertical_8u", "_ZN2cv11bitwise_xorERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_", "_ZN2cv6divideEdRKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_h9_ownpi_WarpAffine_L_Mem_8u_C4", "WebPGetColorPalette", "icv_p8_ownSS1_31_8u", "icv_g9_ippiDFTFwd_RToPack_32f_C1R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_G9E9cn", "icv_w7_owniCopy8u_C4P4_44_A6", "icv_h9_owns_cRadix4Fwd_32fc", "icv_s8_ownRow4Cubic8u", "icv_s8_ippiFilterBorder_16s_C3R", "icv_p8_ownSS3_31_32f", "icv_g9_ippiSubC_32f_C1R", "icv_p8_ippiMorphTophat_8u_C4R_L", "ippicvsRound_64f", "icv_h9_ownResize4Lanczos3_16u", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_V8", "Java_org_opencv_core_Mat_n_1setTo__JDDDD", "Java_org_opencv_calib3d_Calib3d_Rodrigues_11", "icv_g9_CopyWithBorder32f", "_ZN2cv3hal6min32fEPKfjS2_jPfjiiPv", "icv_s8_ippiDilate_16s_C1R_L", "icv_w7_ownpi_WarpAffine_NN_Const_16s_C3", "icv_h9_ownpi_ClipLower", "icv_w7_ippiCopyMirrorBorder_32f_C1R_L", "icv_w7_ownpi_dInterVectorClip_C_8u_C4", "Java_org_opencv_imgproc_Imgproc_floodFill_10", "icv_s8_ippiMean_32f_C3R", "_ZN10__cxxabiv120__si_class_type_infoD0Ev", "_ZN10__cxxabiv111__terminateEPFvvE", "icv_w7_ownNormRel_L2_32f_C3CMR_W7", "icv_g9_ippiSet_16s_C4R", "icv_p8_ownpi_WarpAffine_L_Mem_16u_C1", "_ZN2cv9Feature2DD1Ev", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "icv_p8_ownpi_dInterVector_L_32f_P4", "icv_s8_owniCopy_16u_AC4_A6", "Java_org_opencv_features2d_FastFeatureDetector_getType_10", "icv_g9_ownResize3Lanczos2_16u", "icv_g9_ownResize3Nearest8u", "icv_g9_ippiConvert_8u8s_C1RSfs", "icv_n0_own_ipps_dSin_S9EPnnn", "icv_s8_ippiMean_StdDev_16u_C3CR", "icv_s8_ownpi_dInterVectorClip_L_16u_C3", "icv_p8_owniScaleC_16s8u_C1R_fst", "icv_h9_ippiFFTInit_R_32f", "_ZN3tbb8internal18concurrent_monitor12prepare_waitERNS1_14thread_contextEj", "icv_s8_ownsConvert_64f32f_W7", "icv_w7_ippiHarrisCorner_8u32f_C1R", "icv_p8_ownpi_OrC_8u_C4R", "icv_ipp_set_rcpc_fpu", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3", "icv_n0_own_ipps_sLn_G9LAynn", "icv_s8_ownpi_Rotate180_64_C4R", "icv_p8_ownFilterBoxBorderInMem5x5_16s_C1R", "icv_g9_ippiMean_StdDev_32f_C3CMR", "icv_p8_ippsSortRadixDescend_64f_I", "_ZN2cv5flann12SearchParamsC1Eifb", "icv_p8_owns_cFFTfwd_8_scale_64fc", "icv_p8_ippsDFTGetSize_R_32f", "_ZNK2cv16MatConstIterator3posEPi", "icv_s8_ippiNorm_Inf_32f_C1MR", "icv_p8_ownSS4vertical_16s", "icv_p8_owniTplNormMean_8u32f_C1R", "icv_w7_ownMinMaxIndx_8u_C1R_W7_2", "icv_s8_ownSS4_53_16u", "icv_g9_owniScaleC_16u8u_C1R_acc", "icv_p8_ownRow4Cubic32f", "icv_w7_owniCopy_8u_C1M_W7", "icv_g9_owniCrossCorrNorm_FullSame_32f_C1R", "icv_g9_ownpi_WarpAffine_C_Repl_16s_C4", "icv_s8_ownpi_WarpAffineNearest_64f_C3R", "icv_w7_ownCopySubpixIntersect_8u32f_C1R_W7", "icv_w7_ownpi_dInterVectorClip_NN_16_P3", "Java_org_opencv_objdetect_HOGDescriptor_compute_10", "icv_g9_ownpi_WarpAffine_L_Const_8u_C3", "icv_g9_ippiCopy_32f_C3P3R", "_ZN3tbb8internal8governor8sign_offEPNS0_17generic_schedulerE", "icv_p8_ippiResizeNearest_8u_C1R_L", "icv_s8_ownpi_dInterVectorClip_NN_32_P4", "icv_w7_ownResize4Nearest8u", "icv_p8_ownCalcBorderR1Antialiasing_32f", "icv_p8_ownpi_WarpAffine_NN_32_C4", "icv_g9_ownsAdd_8u_NegSfs", "icv_p8_ownpi_WarpAffineCubic_16u_C1R", "ippicviMax_16s_C1R", "_ZNK2cv3ocl6Device21intelSubgroupsSupportEv", "icv_h9_owniCopy_8u_C3P3_short", "icv_w7_ippiResizeNearest_8u_C4R_L", "_ZN2cv3ocl7Image2D14canCreateAliasERKNS_4UMatE", "icv_w7_ownNormRel_Inf_16u_C1MR_W7", "icv_h9_owniConvert_16s8u", "ippicviResizeNearest_8u_C3R_L", "icv_s8_ippsDFTFwd_CToC_64fc", "ippicviScaleC_64f_C1R", "icv_h9_ippiRectStdDev_32f_C1R", "icv_s8_owniResizeLinear_64f_C3R", "icv_s8_ownSS3_21_16u", "icv_w7_ippiFilterBorder_8u_C1R", "ippicviNormDiff_Inf_8u_C1R", "_ZN2cv3LDAC1Ei", "icv_s8_owniConvert_8s8u_ccode", "icv_p8_ownSS3_52_16u", "icv_h9_ippiSet_8u_C4R", "icv_h9_owniScaleC_64f32s_C1R_fst", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3", "icv_s8_ippiCopyMirrorBorder_32f_C1R_L", "icv_s8_ownLinearKernelAA", "icv_h9_ippiWarpAffineCubic_64f_C1R", "_ZNK2cv3ocl6Device25preferredVectorWidthShortEv", "icv_p8_ownLaplace3x3Row_8u_AC4", "icv_w7_ownpi_WarpSimpleCubic_8u_C3R", "cvSetData", "_ZNK2cv11FileStorage4rootEi", "icv_w7_ownResize4Antialiasing_8u", "Java_org_opencv_imgproc_Imgproc_accumulateWeighted_10", "cvGraphRemoveVtx", "icv_p8_computeCubicCoeffs", "icv_h9_ownsrDFTfwd_14_scale_32f", "Java_org_opencv_calib3d_Calib3d_reprojectImageTo3D_10", "icv_s8_ownsCopy_8u", "icv_s8_ownippiFilterMedianVert_16s_C4R_1x5", "icv_g9_owniResizeCubicInit", "icv_p8_ippiCopy_32f_C1R", "icv_h9_ownscDFTinv_15_scale_32fc", "icv_p8_ownFilter_32f_C3R_v8u8", "icv_w7_ippiAddProduct_16u32f_C1IR", "icv_w7_ownscDftFwd_Prime13_64fc", "ownSetCpuFeaturesAndIdx", "_ZN2cv11RNG_MT19937C2Ej", "icv_p8_ippiMean_8u_C4R", "icv_g9_ownsAdd_16s_PosSfs", "icv_g9_ippiWarpAffineLinear_64f_C4R", "icv_g9_owniGetRectBottomBF_8u_C1R", "icv_p8_ownCubicKernelAA", "icv_s8_ownSS4_a7_32f", "icv_p8_ownsrDFTfwd_13_32f", "cvEllipse2Poly", "icv_g9_ippsDCTFwdGetSize_32f", "icv_w7_ippiCopyConstBorder_16u_C3R", "icv_w7_owns_cFFTinv_16_scale_64fc", "icv_n0_own_ipps_dInvSqrt_G9HAynn", "icv_w7_ippiGradientVectorScharr_8u16s_C1R", "icv_h9_ownSS3_65_8u", "icv_h9_ippiMul_32f_C1R", "icv_h9_cv_ownMorphologyGetSize_1u_L", "icv_w7_owns_cFft_BlkMerge_64fc", "_ZN2cv3ocl13ProgramSourceaSERKS1_", "cvSetErrStatus", "icv_p8_ownSS4_98_8u", "icv_s8_ownsAdd_16s_NegSfs", "icv_g9_ownSS3vertical_16s", "Java_org_opencv_video_FarnebackOpticalFlow_getWinSize_10", "_ZN3tbb8internal13observer_list6insertEPNS0_14observer_proxyE", "_ZN2cv3dnn19experimental_dnn_v118DeconvolutionLayer6createERKNS1_11LayerParamsE", "icv_g9_ippiFilterBilateralBorder_8u_C1R_L", "icv_p8_cv_ownippiFilterMax_16s_Row", "icv_s8_ownpi_WarpAffine_C_Transp_16s_C3", "_ZN2cv5BRISK6createERKSt6vectorIfSaIfEERKS1_IiSaIiEEffS9_", "icv_g9_ownColLinear8u", "icv_h9_owns_sDctInv_PreMul_32f", "icv_p8_ownColLanczos3_8u", "icv_h9_ippsMinIndx_32f", "_ZNK2cv3Mat6copyToERKNS_12_OutputArrayERKNS_11_InputArrayE", "_ZN2cv4cuda16createContinuousEiiiRKNS_12_OutputArrayE", "icv_p8_ippiConvert_8u8s_C1RSfs", "icv_g9_ippiWarpAffineNearest_16s_C1R", "icv_h9_owns_rFFTinv_4_scale_32f", "icv_w7_ippiErode_16u_C1R_L", "icv_g9_ippiNormRel_Inf_8u_C1R", "iwiMirror", "icv_g9_ownpi_WarpAffine_C_Mem_32f_C3", "_ZN2cv6detail18BundleAdjusterBase8estimateERKSt6vectorINS0_13ImageFeaturesESaIS3_EERKS2_INS0_11MatchesInfoESaIS8_EERS2_INS0_12CameraParamsESaISD_EE", "icv_g9_ownSS3_54_16s", "icv_g9_ownSS4_94_32f", "Java_org_opencv_core_Core_norm_10", "Java_org_opencv_imgproc_Imgproc_boundingRect_10", "icv_g9_ippsDFTGetSize_C_32fc", "icv_s8_ownSS3_52_8u", "icv_w7_ippiTranspose_8u_C3IR", "_ZN2cv30createBackgroundSubtractorMOG2Eidb", "icv_w7_ownsSub_8u_PosSfs", "_ZN2cv4cuda11TargetArchs9builtWithENS0_10FeatureSetE", "Java_org_opencv_dnn_Net_forward_11", "Java_org_opencv_core_Core_subtract_13", "ippicviWarpAffineNearest_16s_C1R", "icv_w7_ownColCubic16u", "icv_s8_ownpi_dInterPoint_CR_PixelB_32f", "icv_g9_ownscDFTfwd_10_scale_64fc", "icv_w7_ownsSinCosHuge", "icv_h9_ippiCopy_16u_C4MR", "_ZN3tbb8internal6market22remove_arena_from_listERNS0_5arenaE", "icv_h9_ownpi_WarpAffineLinear_64f_C1R", "icv_p8_ippiThreshold_LTVal_16s_C1IR", "icv_g9_ownCalcBorderR4Antialiasing_16s", "icv_g9_owniScaleC_8s32s_C1R_acc", "icv_s8_ippiMinEigenVal_8u32f_C1R", "icv_g9_ippiGetSpatialMoment_64f", "icv_h9_ippiThreshold_GTVal_8u_C1R", "icv_w7_ippiCopy_32f_C1MR", "Java_org_opencv_core_Mat_n_1assignTo__JJI", "Java_org_opencv_core_Core_kmeans_11", "icv_g9_ippsGetLibVersion", "icv_g9_ownCalcBorderR4Cubic8u", "icv_h9_owniScaleC_8u16s_C1R_fst", "icv_s8_ownpi_NormL1_32f_C1R", "icv_w7_cv_ownippiFilterMax_8u_Row", "icv_p8_ippiCopyReplicateBorder_8u_C4IR", "icv_p8_ownpi_CountInRange_32f_C3R", "icv_s8_ownippiFilterMedianHoriz_8u_C3R_3x1", "icv_h9_ownpi_WarpAffine_C_Mem_8u_C3", "icv_g9_ippiResizeGetSrcRoi_L", "icv_g9_ippiScaleC_32s16u_C1R", "ippicviFilterMedianBorder_8u_C3R", "icv_h9_owniScaleC_16u16s_C1R_fst", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarMin_10", "_ZN2cv20perspectiveTransformERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "_ZN3tbb8internal18call_itt_notify_v5EiPv", "icv_h9_ippsConvert_32f16u_Sfs", "icv_s8_owns_rFFTinv_4_64f", "cvEncodeImage", "icv_w7_ownpi_And_16u_AC4R", "icv_w7_ippsZero_16s", "icv_g9_ownpi_Rotate180_64_C1R", "icv_w7_piGradientScharr8u_c1", "icv_g9_ownPutPxl_8u", "icv_g9_ownRow1Filter14_16u", "_ZN2cv5flann11IndexParamsD2Ev", "icv_w7_ownpi_dInterVectorClip_NN_8_P3", "ippicviFilterSobelHorizBorder_32f_C1R", "icv_p8_ownsPowOne", "_ZN2cv9arcLengthERKNS_11_InputArrayEb", "_ZN2cv8clipLineENS_5Size_IiEERNS_6Point_IiEES4_", "icv_p8_ownsrDftInv_Dir_64f", "icv_w7_ownpi_SimpleRotate_16s_C4R", "icv_s8_ippiScaleC_32s8s_C1R", "_ZN2cv4blurERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEENS_6Point_IiEEi", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_W7_sym", "icv_h9_ippiNormRel_L2_8u_C1MR", "icv_p8_cv_ownippiFilterMax_8u_Msk", "_ZNK2cv4cuda10DeviceInfo19maxTexture1DLayeredEv", "icv_g9_piGradientSobel8u_3x3_row_c1", "icv_w7_ippiCopy_16s_C1C4R", "icv_p8_owniScaleC_32s32s_C1R_acc", "icv_ownGetReg", "icv_w7_ownippsCnvrt_32f16s_Sfs", "icv_s8_ownsMul_64f_I", "icv_h9_ownpi_NormL1Diff_32f_C1R", "icv_s8_ownscrDftFwd_Fact5_32f", "icv_p8_ippiDCT8x8Inv_32f_C1", "Java_org_opencv_imgproc_Imgproc_dilate_12", "icv_w7_ownsrDFTinv_10_scale_32f", "Java_org_opencv_videoio_VideoCapture_open_11", "icv_g9_ownscDftInv_Fact11_32fc", "_ZN2cv17DescriptorMatcherD1Ev", "icv_p8_ippiCopy_8u_C3P3R", "icv_h9_ippsFFTGetSize_R_64f", "icv_p8_ownpi_WarpAffineCubic_8u_C3R", "cvSeqPushMulti", "icv_g9_ippiScaleC_32s32f_C1R", "icv_h9_ippiScaleC_8s16u_C1R", "icv_w7_ownscDFTfwd_10_32fc", "icv_g9_owns_sDctInv_Dir_32f", "Java_org_opencv_imgproc_CLAHE_setTilesGridSize_10", "icv_s8_owns_rFFT_1_64f", "icv_s8_ippiSwapChannels_16u_C3R", "_ZNK2cv3ocl6Device17maxClockFrequencyEv", "icv_h9_ownscDftFwd_Fact11_64fc", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "cvXor", "icv_p8_ownippiThreshold_GLV_16s_C3", "icv_w7_ownpi_idInterPoint_C_Pixel_8u", "__frame_state_for", "icv_p8_ownpi_NormInf_8u_C1R", "icv_w7_cv_ownippiFilterMxMnBorder_L", "cvQueryFrame", "_ZNK2cv4cuda10DeviceInfo12maxTexture3DEv", "_ZN2cv5AGASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEib", "icv_s8_ownNormRel_Inf_32f_C3CMR_W7", "icv_h9_owniScaleC_8s16u_C1R_fst", "_ZNK2cv4cuda10DeviceInfo12isCompatibleEv", "icv_h9_ownpi_ClipQuad", "cvGetSpatialMoment", "cvMulSpectrums", "icv_p8_owniResizeSuper_8u_C3R", "_ZNK2cv4cuda10DeviceInfo11l2CacheSizeEv", "_ZN2cv6detail18PairwiseSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_s8_ippiNormDiff_L2_32f_C1R", "icv_g9_ippiSet_32s_C4MR", "icv_p8_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_s8_owns_rFFT_1_scale_64f", "icv_h9_ippiNormRel_L1_16s_C1R", "Java_org_opencv_features2d_DescriptorMatcher_getTrainDescriptors_10", "icv_s8_ownscDftFwd_Fact3_64fc", "icv_p8_ownBFilterRow32f_16u_C1R", "icv_n0_own_ipps_sAtan2_W7LAynn", "icv_h9_ippiMorphBlackhat_32f_C1R_L", "icv_p8_ippiScaleC_8s8u_C1R", "icv_h9_ownCalcBorderR1Antialiasing_16s", "_ZN2cv2ml2EM4loadERKNS_6StringES4_", "icv_h9_ownSS1_21_32f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_V8", "icv_w7_ownResize3Lanczos2_16s", "icv_h9_owniScaleC_16u32s_C1R_acc", "icv_w7_ownippiFilterMedianHoriz_16u_C3R_5x1", "icv_g9_ownpi_WarpAffineNearest_16s_C4R", "icv_p8_cv_ownippiFilterMax_16s_Col", "icv_g9_owns_initTabTwdBase_32f", "icv_h9_ownCalcBorderR4Antialiasing_8u", "icv_h9_ownpi_WarpSimpleLinear_16u_C1R", "icv_g9_ownpi_WarpAffineSimpleLinear_16s_C1R", "icv_s8_ippiFilterBoxBorder_16u_C1R", "icv_p8_ippiResizeNearest_32f_C1R_L", "ippicviResizeSuper_16u_C3R_L", "icv_w7_ippiMirror_32f_C1IR", "icv_p8_ownSS3_65_16s", "icv_g9_ownBuildFilterAA_32f", "icv_g9_ippiFilterBoxBorder_32f_C1R", "icv_g9_ownSS1_a7_16s", "icv_s8_ippiFilterMaxBorderGetBufferSize", "icv_p8_ownippiThreshold_GLV_8u_AC4", "icv_s8_ownscDFTinv_15_scale_64fc", "Java_org_opencv_photo_TonemapDrago_setSaturation_10", "icv_s8_ownSS1_43_8u", "Java_org_opencv_core_Mat_n_1reshape__JI", "icv_p8_ownSS1_53_32f", "icv_h9_owniScaleC_16u32f_C1R_fst", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_V8", "icv_w7_ippiFilterMedianVert_16s_1x5_A6", "icv_w7_ownscDftFwd_Prime11_32fc", "icv_s8_ownippiFilterMedianVert_8u_C4R_1x5", "icv_p8_ippiSwapChannels_8u_C3C4R", "icv_g9_ownsrDftFwdRecombine_64f", "icv_h9_ownSS1_72_16s", "icv_h9_ownpi_WarpAffine_C_Const_32f_C4", "icv_w7_ownsSub_16s_PosSfs", "Java_org_opencv_ml_SVMSGD_load_11", "icv_g9_owniFilterSobelHorizBorder2_32f_C1R", "icv_g9_ippiWarpAffineCubic_16u_C1R", "icv_s8_ippiCopy_16s_AC4R", "icv_h9_ippsInvSqrt_64f_A50", "icv_h9_ownscDFTfwd_3_64fc", "icv_s8_ownCanny_16s8u_C1R_1_32s_W7", "icv_w7_ownippiFilterMedian_8u_C3R_3x3", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_W7", "icv_w7_ippsSqrt_32f_A21", "icv_w7_owncalcMinValues_W7", "_ZN2cv10softdoubleC2Ey", "icv_g9_ownpi_WarpAffine_NN_Mem_16s_C1", "icv_h9_ownpi_WarpAffine_C_Transp_16u_C3", "icv_h9_ownpi_WarpAffine_NN_Repl_8u_C3", "icv_s8_ippiMean_16u_C1MR", "icv_p8_owniScaleC_32s32s_C1R_fst", "icv_s8_ippiNorm_L1_32f_C3CMR", "cvAvg", "icv_w7_ownColLinear8u", "icv_p8_ownFilterBoxBorderInMem_16s_C1IR", "icv_h9_ippiHistogramUniformInit", "icv_w7_ownpi_dInterVectorClip_L_16u_C4", "icv_g9_owniGetRectRight_32f", "icv_g9_ippiCopyReplicateBorder_8u_C1IR_L", "icv_p8_ownResize1Cubic16u", "icv_h9_ippiGradientVectorGetBufferSize", "icv_p8_ownpi_idInterPoint_C_Pixel_8u", "Java_org_opencv_photo_Photo_pencilSketch_11", "icv_p8_ownFilterBoxBorderInMem7x7_8u_C1R", "ippicviMean_StdDev_8u_C3CMR", "icv_p8_ownscrDftInv_Fact3_32f", "icv_w7_ownSS4_16u", "icv_g9_ippiNormRel_L2_32f_C1R", "icv_h9_ownpi_Rotate90_B_8_C4R", "icv_s8_owniConvert_32f16u_AC4_W7", "icv_w7_ownscDftFwd_Fact2_32fc", "icv_w7_ownpi_dInterVectorClip_L_32f_P4", "icv_h9_ownCalcBorderR4Cubic16s", "icv_s8_owns_initTabBitRevNorm", "icv_w7_owns_rFFT_1_32f", "_ZN2cv12LineIteratorC2ERKNS_3MatENS_6Point_IiEES5_ib", "icv_s8_ownIntegral_8u32f_C1R_V8", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_W7_sym", "icv_p8_owniCopyMirrorBorder_16s_C4R", "icv_s8_ownpis_Sum_16u_C4", "icv_g9_ippiCopyMirrorBorder_32s_C4R", "_ZNK2cv9softfloatgeERKS0_", "icv_p8_ownscDftInv_Fact13_32fc", "icv_w7_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "Java_org_opencv_photo_TonemapMantiuk_setScale_10", "icv_w7_ippiSqrIntegral_8u32s_C1R", "_ZN2cv13setNumThreadsEi", "icv_p8_owns_cFFT_1_64fc", "icv_h9_piGradientScharr32f_row_c1", "icv_w7_ownpi_WarpSimpleNearest_16s_C1R", "icv_p8_ippiScaleC_16u8u_C1R", "icv_s8_ownSS1_43_16u", "icv_w7_owniFlip_32s_C3", "icv_w7_ippiNormDiff_L1_32f_C1MR", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_3", "Java_org_opencv_imgproc_Imgproc_sepFilter2D_10", "icv_p8_ownsConj_16sc_T7", "icv_p8_owns_BitRev2_C", "icv_h9_ownpi_WarpAffine_L_Const_16u_C3", "llwiFilterBilateral_classic", "icv_s8_ippiSum_16u_C1R", "icv_w7_ippiSet_16u_C4R", "Java_org_opencv_core_Mat_n_1cols", "icv_h9_ownscDFTinv_6_scale_64fc", "icv_p8_ippsZero_32s", "icv_h9_ownFilterBoxBorderInMem5x5_8u_C1R", "icv_w7_ippiDistanceTransform_5x5_8u32f_C1R", "_ZN2cv10BriskLayer14getAgastPointsEiRSt6vectorINS_8KeyPointESaIS2_EE", "icv_w7_ownippiFilterMin_8u_Row", "icv_h9_ownResize4Antialiasing_8u", "icv_g9_ippiCopy_16s_P3C3R", "icv_w7_ownCalcBorderR4Linear16u", "icv_s8_ownpi_NormL2_32f_C1R", "icv_h9_owniResizeLinear_32f_C4R", "icv_s8_ownippiThreshold_16s_AC4", "icv_s8_owniResizeNearest_16u_C4R", "icv_w7_ippiResizeLanczos_8u_C4R_L", "icv_g9_ippiSet_8u_C1R", "icv_g9_ippiTranspose_16u_C3IR", "icv_s8_ownAConvert32s_8u", "_ZN2cv6dilateERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE", "_ZN2cv5flann12SearchParamsC2Eifb", "icv_w7_ownscrDftInv_Prime_32f", "icv_p8_ippsDFTFwd_RToPack_32f", "icv_h9_ippiCopy_16u_C1C3R", "_ZN2cv6detail27AffineBestOf2NearestMatcher5matchERKNS0_13ImageFeaturesES4_RNS0_11MatchesInfoE", "_ZN2cv9startLoopEPFiiPPcEiS1_", "_ZN2cv9floodFillERKNS_17_InputOutputArrayES2_NS_6Point_IiEENS_7Scalar_IdEEPNS_5Rect_IiEES6_S6_i", "iwiResize_InitAlloc", "icv_w7_ownBuildWarpFilter_64f", "icv_s8_ippiResizeCubic_8u_C4R_L", "icv_g9_ippiConvert_32s8u_C1R", "icv_w7_owniResizeLinear_16u_C1R", "icv_h9_ownpi_WarpSimpleCubic_8u_C1R", "icv_p8_ownCalcBorderR3Antialiasing_16s", "icv_s8_ippiWarpAffineNearest_16s_C3R", "_ZN3rml8internal14thread_monitor13detach_threadEl", "icv_w7_ownsConvert_16s64f_Sfs_W7", "icv_h9_ownpi_WarpAffine_C_Mem_64f_C3", "icv_p8_ownsMul_64fc", "icv_g9_ippiMirror_16u_C4IR", "icv_p8_ippiCopyConstBorder_16s_C1R", "cvErode", "icv_g9_ippiScaleC_16u_C1R", "icv_s8_ownSS4_a7_16u", "icv_h9_ownNorm_L2_16u_C1MR_HSW", "icv_p8_ownAdd_32f_C1IMR_W7", "icv_h9_owns_cFFTfwd_8_scale_64fc", "icv_h9_ownscDftInv_Prime4_64fc", "icv_h9_ippsSortRadixAscend_16u_I", "icv_g9_ippiSum_32f_C4R", "icv_h9_ownsMul_16s_1Sfs", "icv_s8_ippiCopyReplicateBorder_16s_C4R", "icv_h9_ownscDFTfwd_10_32fc", "icv_g9_ippiMorphOpen_32f_C1R_L", "icv_w7_ippsSortRadixIndexAscend_32f", "icv_p8_owniShiftClipRectZeroTail_16u32f_C1R", "icv_s8_ippiMorphGradient_32f_C4R_L", "icv_s8_ownSharpenRow_8u_C1", "icv_w7_ownpi_WarpAffine_L_Mem_16s_C1", "own_ipps_zCIS_SC_HA", "icv_g9_ippiRGBToGray_32f_C3C1R", "icv_w7_ownPrewColV_32f", "icv_p8_owniCopy_32s_C4MR", "icv_w7_owns_cFFTfwd_16_32fc", "icv_g9_ippiNorm_Inf_8u_C1R", "_ZN2cv2ml21NormalBayesClassifier4loadERKNS_6StringES4_", "_ZNK2cv3ocl6Device14singleFPConfigEv", "icv_n0_own_ipps_sInvSqrt_W7LAynn", "icv_w7_ownippiFilterMedian_16u_C1R_3x3", "icv_w7_owniConvert_16s32f_W7", "icv_h9_ippiCopy_32f_C1C4R", "icv_s8_ownpi_dInterVector_NN_16_C4", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "_ZN2cv4cuda6GpuMatC2ERKS1_NS_5Rect_IiEE", "icv_w7_ownpi_WarpAffine_NN_16_P3", "llwiResize", "ippicviAddProduct_8u32f_C1IMR", "icv_p8_ippiSwapChannels_8u_C4R", "icv_p8_ippiSwapChannels_8u_C3R", "icv_w7_ownpis_Max_32f_C3", "_ZNK2cv4cuda10DeviceInfo19maxSurface1DLayeredEv", "icv_s8_ownpi_WarpAffine_NN_Mem_8u_C1", "icv_w7_ownsrDftFwd_PrimeFact_64f", "icv_s8_owns_cFFT_2_32fc", "icv_s8_ownpi_WarpAffine_C_Repl_16u_C1", "Java_org_opencv_photo_Photo_createMergeMertens_10", "icv_p8_ownippsMagn_16sc16s_Sfs_ASM", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_11", "_ZN2cv3hal7split8uEPKhPPhii", "icv_w7_ownippiFilterMedianCross_8u_C1R_5x5", "icv_n0_own_ipps_sAtan2_G9LAynn", "_ZNK2cv3ocl8internal12ProgramEntrycvRNS0_13ProgramSourceEEv", "_ZN2cv9softfloatC1Ej", "_ZN2cv4UMatC1ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_g9_ippiScaleC_8u16u_C1R", "icv_w7_ippsExp_32f_A21", "icv_h9_ippiMorphTophat_8u_C4R_L", "icv_w7_owniGetRectComBF_8u_C3R", "icv_w7_ippiSub_16u_C1RSfs", "icv_p8_owniScaleC_16u32s_C1R_fst", "icv_w7_ownsMul_64fc", "icv_s8_ownpi_dInterVectorClip_NN_16_C1", "cvCopy", "icv_g9_ownFilterBoxBorder_8u_C4R", "icv_p8_ippsSinCos_64f_A50", "icv_s8_cv_ownippiFilterMax_16s_Row", "ippicviAddSquare_16u32f_C1IR", "icv_h9_owniSwapChannels_16u_C3C4R", "icv_p8_ippsSortRadixAscend_16s_I", "icv_s8_ippiResizeSuperInit_L", "icv_s8_ippiWarpAffineLinear_64f_C3R", "icv_s8_owniConvert_32f16s_AC4_W7", "_ZN2cv4cuda9getDeviceEv", "icv_p8_ippiCopyReplicateBorder_8u_C4R", "icv_g9_owniResizeLinear_8u_C1R", "icv_p8_owniFilter_32f_C1R_v8u8_1NA", "icv_p8_ownippiFilterxBrd32f_8u_C4R", "ippicviNormRel_Inf_16u_C1R", "icv_s8_ownSS1_54_32f", "icv_s8_ownpi_WarpAffineNearest_8u_C1R", "icv_s8_ownippiFilterxBrd_32f_C3R", "icv_h9_ippsLn_32f_A21", "icv_p8_ownSShorisontal_8u", "icv_s8_ownSumSq_32f_C1R_W7_Al", "icv_h9_ippsSortRadixIndexGetBufferSize", "icv_g9_owniFilter32f_16u_C3R_g9e9_0", "iwiWarpAffine_Process", "icv_w7_ippsDFTInit_R_64f", "_ZNK2cv8Subdiv2D10rotateEdgeEii", "icv_h9_ippiFilterSobelHorizSecondBorderGetBufferSize", "icv_s8_cv_ownippiFilterMin_8u_Row", "icv_h9_ownsMul_8u_1Sfs", "icv_p8_ownAConvert_Round32f_16u", "icv_g9_ownFilterRowBorderPipeline_32f_C3R", "icv_h9_owniScaleC_8u16u_C1R_fst", "icv_s8_ownscDftInv_Fact2_64fc", "icv_g9_ippsSortRadixAscend_64f_I", "icv_w7_cv_ownippiFilterMin_16s_Col", "_ZNK2cv12_OutputArray9getMatRefEi", "icv_s8_ippiMorphGradient_32f_C1R_L", "icv_h9_ownpi_WarpAffine_L_Mem_64f_C1", "Java_org_opencv_photo_TonemapDurand_delete", "_Unwind_Find_FDE", "Java_org_opencv_ml_DTrees_setMinSampleCount_10", "icv_s8_ippiMirror_32f_C3R", "icv_s8_ippiCopy_8u_AC4C3R", "_ZN3tbb8internal19PrintRMLVersionInfoEPvPKc", "icv_s8_owniRCPack2DConj_32f_C1IR", "icv_g9_ownSS1_73_32f", "_ZNK2cv3dnn19experimental_dnn_v15Layer15getMemoryShapesERKSt6vectorIS3_IiSaIiEESaIS5_EEiRS7_SA_", "icv_s8_ownscDFTinv_12_scale_32fc", "_ZN2cv11bitwise_andERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_", "_ZN2cv5errorERKNS_9ExceptionE", "icv_g9_ownSS1_72_32f", "icv_w7_ippiMorphGradient_8u_C3R_L", "icv_g9_ippiScaleC_32f_C1R", "icv_p8_ippiResizeLanczos_16s_C4R_L", "icv_w7_ownWarpSimple3Nearest32f", "icv_w7_ownsrDFTinv_7_scale_64f", "icv_p8_ownSS3_65_32f", "icv_p8_ownsMul_8u", "icv_h9_ownRow3Lanczos3_16u", "icv_w7_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_W7", "icv_h9_ownscDFTfwd_3_scale_32fc", "icv_s8_ownippiFilterMedianSqr_8u_C3R", "_ZN2cv22SimpleBlobDetectorImplC1ERKNS_18SimpleBlobDetector6ParamsE", "icv_w7_ownippiFilterMedianCross_8u_C4R_5x5", "icv_s8_ownpi_WarpSimpleLinear_16u_C1R", "ippicviResizeLinear_16u_C4R_L", "icv_s8_ownAbsDiffC_32f_C1R_W7", "icv_g9_owniCopyMirrorBorder_8u_C3R", "icv_g9_owniFilter_32f_C4R_g9e9_1", "icv_p8_ownSS4vertical_16u", "icv_p8_ownCalcBorderR3Lanczos2_16u", "icv_s8_ownsrDftInv_Dir_64f", "icv_p8_ownscDft_Dir_64f", "ippicviNorm_Inf_32f_C3CMR", "icv_p8_ippiCopy_16s_C4C1R", "icv_w7_owniFlipCopy_32s_C1", "icv_s8_ownippsMagn_32f", "icv_s8_ippiIntegral_32f_C1R", "Java_org_opencv_imgproc_Imgproc_morphologyEx_11", "ippicviAddSquare_8u32f_C1IMR", "icv_w7_ownpi_Xor_8u_AC4R", "icv_g9_ownpi_WarpAffine_L_Repl_32f_C4", "icv_s8_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "icv_p8_ippiTranspose_32s_C3IR", "_ZN2cv21decomposeEssentialMatERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_", "Java_org_opencv_ml_ANN_1MLP_setRpropDWPlus_10", "icv_s8_ippiResizeAntialiasing_32f_C4R_L", "icv_g9_ownColLanczos3_16u", "icv_w7_ippiMorphOpen_16s_C1R_L", "icv_p8_owns_crRadix4FwdNorm_32f", "Java_org_opencv_core_Core_polarToCart_11", "_ZN2cv10HoughLinesERKNS_11_InputArrayERKNS_12_OutputArrayEddidddd", "Java_org_opencv_ml_KNearest_setEmax_10", "ippicviMean_16u_C1R", "icv_h9_owniCopyConstBorder_16s_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_W7", "icv_p8_ippiDCTFwd_32f_C1R", "_ZN2cv3ogl6Buffer6unbindENS1_6TargetE", "Java_org_opencv_ml_ANN_1MLP_getRpropDWMinus_10", "icv_h9_owniResizeSuper_32f_C3R", "icv_g9_ownFilter32f_16u_C4R_g9e9", "Java_org_opencv_ml_TrainData_delete", "icv_h9_ippiResizeNearest_8u_C1R_L", "icv_h9_ownMorphAdvFunc", "icv_s8_ippiCopyMirrorBorder_16u_C3IR", "icv_h9_ownsInitDftConv_32f", "icv_s8_owns_crFftInv_CoreMT_32f", "icv_g9_owniFilter32f_8u_C1R_g9e9_8", "icv_h9_ownsInitTabDftDir_64f", "icv_p8_owniResizeCubicInit", "icv_w7_ownpi_dInterVector_L_16u_P4", "icv_p8_ippiFilterMaxBorderGetBufferSize", "ippicviSum_8u_C3R", "_ZNK2cv3ocl6Device21nativeVectorWidthHalfEv", "icv_p8_owniSqrDistanceNormGetSize", "Java_org_opencv_core_Core_sumElems_10", "icv_p8_ippsConvert_32f16u_Sfs", "icv_p8_ownAddProduct_32f_C1IR_W7", "Java_org_opencv_ml_ANN_1MLP_setLayerSizes_10", "icv_g9_ownSS4_43_16u", "icv_p8_ippiWarpAffineLinear_64f_C3R", "icv_w7_ippiMirror_16s_C3R", "icv_p8_ownippsMagn_16s_Sfs_ASM", "icv_s8_ownippiThreshold_GLV_32f_C1", "icv_g9_ownpi_CheckResizeCall", "icv_g9_ippiMinMaxIndx_8u_C1R", "icv_w7_ippiMirror_8u_C1IR", "icv_h9_ownColLinear16s", "icv_p8_ippiCopy_16s_C1R", "icv_g9_ipMirror45_32uC1R", "icv_s8_ippiMorphBlackhat_32f_C1R_L", "icv_w7_ownpi_CmpLT_32f_C1R", "_ZN2cv8Stitcher15composePanoramaERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_p8_owniSet_8u_C3_W7", "icv_w7_ownAConvert_Round32f_16u_AC4R", "llwiCannyDeriv", "cvCreatePyramid", "icv_w7_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_p8_ippsSortRadixDescend_16u_I", "icv_p8_ownpi_dInterVectorClip_L_32f_C1", "_ZN3tbb8internal6market33mandatory_concurrency_enable_implEPNS0_5arenaEPb", "_ZNK2cv12MatAllocator6uploadEPNS_8UMatDataEPKviPKjS6_S6_S6_", "Java_org_opencv_core_Mat_n_1rows", "icv_w7_ownsrDFTfwd_9_32f", "icv_h9_owniScaleC_16s64f_C1R_acc", "icv_s8_ownsrDFTinv_6_32f", "icv_p8_ownNorm_Inf_32f_C1MR_W7", "VP8CheckSignature", "icv_s8_ippiWarpAffineLinear_16s_C1R", "icv_h9_ownsSub_8u_NegSfs", "icv_g9_owniConvert_8s8u_sse42", "icv_w7_ownpi_WarpAffineLinear_32f_C4R", "ippicviColorToGray_32f_AC4C1R", "icv_s8_ippiSwapChannels_8u_C3C4R", "icv_w7_owns_cFftFwd_Fact4_32fc", "icv_h9_ownpi_WarpSimpleLinear_64f_C1R", "icv_w7_ownpi_OrC_16u_C1R", "icv_s8_ownAConvert_Round32s_8u", "_ZN2cv4UMatC1ERKS0_PKNS_5RangeE", "icv_s8_ipMirror45_8uC1R", "icv_w7_ownippiFilterMedianVert_8u_1x3", "icv_s8_owniFilterRobertsUpBorder2_16s_C1R", "icv_h9_ownsrDFTinv_5_scale_64f", "icv_p8_owniCopyMirrorBorder_8u_C1R_L", "Java_org_opencv_core_Mat_n_1clone", "Java_org_opencv_calib3d_Calib3d_recoverPose_12", "icv_g9_ownscDFTfwd_9_scale_32fc", "icv_h9_ownSS1_73_16u", "icv_p8_ippiFFTInv_PackToR_32f_C1R", "icv_p8_ownpi_WarpAffine_C_Mem_16s_C1", "_ZN2cv3dnn19experimental_dnn_v18LRNLayer6createERKNS1_11LayerParamsE", "icv_p8_ippiMorphGradient_32f_C3R_L", "icv_w7_ippsDFTInit_C_64fc", "icv_h9_ownippiFilterMin_16u_Row_h9l9", "icv_w7_ownpi_SimpleRotate_32f_C3R", "Java_org_opencv_dnn_Net_setParam_10", "_ZN2cv9boxFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiNS_5Size_IiEENS_6Point_IiEEbi", "icv_p8_ownSS3_43_16u", "Java_org_opencv_imgproc_Imgproc_warpPerspective_11", "icv_p8_ownRow4Lanczos3_16s", "_ZN2cv15setBreakOnErrorEb", "icv_s8_ownpi_Histogram_8u_AC4R", "icv_s8_ipMirror45_32uC1R", "_ZN3tbb8internal17generic_scheduler14cleanup_masterEb", "icv_p8_ippsZero_16s", "_ZNK2cv14DefaultDeleterI23CvHaarClassifierCascadeEclEPS1_", "icv_w7_owniCopy8u_C4C1_W7", "icv_w7_ownscDFTinv_9_32fc", "icv_w7_ownCalcBorderR1Lanczos3_16s", "icv_h9_ippiThreshold_GT_8u_C1R", "icv_h9_owniFilter32f_8u_C3R_g9e9_6", "icv_g9_ippiFilterSobelVertBorderGetBufferSize", "icv_h9_ippiCopyMirrorBorder_16u_C3IR", "cvDisplayStatusBar", "_ZN2cv7directx25convertFromD3D10Texture2DEP15ID3D10Texture2DRKNS_12_OutputArrayE", "icv_p8_ownpi_WarpAffine_CR_32f_C4", "icv_w7_ownResize4Lanczos2_8u", "icv_s8_ownscDftFwd_Prime5_64fc", "icv_h9_owniResizeLanczos_16u_C3R", "icv_w7_ownippiFilterMedian_8u_C1R_5x5", "Java_org_opencv_imgproc_Imgproc_sepFilter2D_11", "icv_w7_ownippiFilterMedianHoriz_16u_C4R_5x1", "icv_p8_owns_initTabTwdBase_32f", "icv_w7_ownsGetSizeDftConv_64f", "cvStartReadSeq", "_ZN2cv3MatC1ERKSt6vectorIiSaIiEEiPvPKj", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_W7", "Java_org_opencv_dnn_DictValue_getRealValue_11", "_ZN3tbb8internal6market7cleanupERN3rml3jobE", "icv_p8_ippsMinEvery_64f", "ippicviFilterBilateralBorder_8u_C3R_L", "icv_s8_ippiDilate_32f_C1R_L", "icv_g9_ownResize3Cubic16u", "icv_p8_ownippsCnvrtFin_32f32s_Sfs", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_W7", "_ZN2cv9HuMomentsERKNS_7MomentsERKNS_12_OutputArrayE", "_ZN2cv17CommandLineParserC2EiPKPKcRKNS_6StringE", "icv_s8_ippiNorm_L2_16u_C1MR", "icv_p8_ownpi_Sum_16s_C4R", "icv_g9_ownscDFTinv_14_scale_32fc", "Java_org_opencv_features2d_ORB_setWTA_1K_10", "ippicviResizeAntialiasing_8u_C4R_L", "icv_s8_owns_cFft_BlkSplit_32fc", "icv_p8_owniFilterRobertsUpBorder2_32f_C1R", "icv_p8_ownHipass5x5Col_32f_AC4", "_ZNK2cv3ocl6Device12localMemSizeEv", "ippicviWarpAffineCubic_32f_C3R", "icv_s8_ownpi_WarpAffineLinear_64f_C1R", "ippicviFilterSobelVertBorder_8u16s_C1R", "icv_p8_ownNormDiff_L1_8s_C1MR_W7", "icv_g9_ownpi_WarpAffineSimpleNearest_16u_C3R", "icv_g9_ownResize4Nearest8u", "Java_org_opencv_video_KalmanFilter_set_1statePost_10", "icv_w7_ippiWarpAffineNearest_32f_C1R", "icv_w7_ownpi_CmpEQ_8u_C1R", "icv_p8_ownSharpenRow_16s_AC4", "icv_h9_ownRow4Linear32f", "_ZNK2cv17CascadeClassifier21getOriginalWindowSizeEv", "icv_h9_ownMean_16u_C1MR_HSW", "Java_org_opencv_core_Core_inRange_10", "cvGraphVtxDegreeByPtr", "icv_w7_ownRow3Linear32f", "_ZN2cv9videostab14StabilizerBase17logProcessingTimeEv", "icv_s8_ippiWarpAffineNearest_64f_C3R", "_ZN2cv3hal10absdiff32sEPKijS2_jPijiiPv", "_ZN2cv17agast_cornerScoreILi3EEEiPKhPKii", "icv_p8_owniResizeLinear_8u_C4R", "_ZNSt10bad_typeidD1Ev", "icv_p8_ownSS1_98_8u", "icv_s8_ownpi_WarpAffine_NN_8_AC4", "icv_w7_ippiSqrDistanceNormGetBufferSize", "icv_s8_ippiResizeLanczos_32f_C4R_L", "_ZNK2cv17DescriptorMatcher11radiusMatchERKNS_11_InputArrayES3_RSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "icv_g9_ippiConvert_32f16u_C1R", "icv_w7_ownCalcBorderR3Lanczos2_8u", "ippicviNormDiff_L1_16u_C3CMR", "icv_p8_owniSwapChannels_16u_C3C4R", "icv_w7_ownSuperKernel", "Java_org_opencv_ml_Boost_setBoostType_10", "icv_p8_ownpi_WarpAffine_L_Repl_16s_C1", "icv_s8_ownsInitTabDftDir_64f", "icv_p8_owniSet_8u_C1M_W7", "icv_w7_ownResize3Nearest8u", "_ZN2cv14seqRemoveSliceEP5CvSeq7CvSlice", "icv_p8_ownsConvert_64s32s_SfPosFin_W7", "icv_w7_ippiMinMax_16u_C1R", "icv_g9_owniFilter32f_8u_C3R_g9e9_3", "icv_g9_ownSS1_54_16s", "Java_org_opencv_ml_NormalBayesClassifier_create_10", "_ZN2cv22estimateRigidTransformERKNS_11_InputArrayES2_b", "icv_s8_ippiHistogramUniformInit", "icv_p8_owniGetRectLeftBF_32f_C1R", "icv_p8_ownColAntialiasing_16s", "icv_g9_ippsExp_32f_A21", "icv_s8_piGradientSobel32f_c1", "icv_g9_ownpi_WarpAffine_C_Mem_8u_C3", "_ZN2cv5utils11getThreadIDEv", "icv_h9_ownNorm_L2_16u_C3CMR_HSW", "icv_w7_ownpi_WarpAffineSimpleNearest_8u_C4R", "_ZN2cv15BriskScaleSpaceD1Ev", "icv_w7_ownpi_WarpAffine_L_Const_16s_C1", "icv_s8_ownResize3Linear16u", "_ZN9CvLevMarqD1Ev", "ippicviTranspose_8u_C1IR", "icv_h9_ownSS3_31_32f", "_ZNK2cv5MatOp12augAssignAddERKNS_7MatExprERNS_3MatE", "icv_g9_ownpi_WarpAffineSimpleNearest_16s_C1R", "icv_w7_ownMinMaxIndx_32f_C1R_W7_2", "Java_org_opencv_core_Core_setUseIPP_10", "icv_w7_ippiWarpAffineLinear_32f_C3R", "icv_w7_ownsrDFTfwd_3_64f", "icv_g9_ownpi_WarpAffineSimpleCubic_8u_C1R", "icv_h9_ippiNormRel_L2_8u_C1R", "icv_g9_ippiCopy_16s_P4C4R", "icv_n0_own_ipps_sCos_W7LAynn", "_ZN2cv3dnn19experimental_dnn_v18ImporterD1Ev", "icv_p8_ippiFilterSobelVertBorder_32f_C1R", "Java_org_opencv_calib3d_Calib3d_sampsonDistance_10", "icv_g9_ippiMorphGradient_16s_C1R_L", "icv_h9_owniFlip_32s_C1", "icv_w7_ownscDFTinv_13_32fc", "icv_s8_ownLanczosKernel3", "Java_org_opencv_ml_TrainData_getLayout_10", "icv_g9_ownscDftInv_Prime8_64fc", "icv_p8_ownpi_WarpAffine_C_Transp_16s_C4", "Java_org_opencv_videoio_VideoWriter_set_10", "icv_w7_ownscDFTfwd_10_64fc", "icv_g9_ownpi_WarpAffine_NN_Mem_16s_C4", "icv_s8_owniGetRectRightBF_8u_C3R", "icv_s8_ownpi_WarpSimpleNearest_64f_C3R", "icv_p8_ownNorm_Inf_8s_C1MR_V8", "icv_h9_ippsFree", "icv_h9_ownpi_WarpAffine_C_Transp_16s_C4", "icv_g9_owniFilterRobertsDownBorder2_16s_C1R", "icv_h9_cv_ownippiFilterMin_16s_Col", "icv_h9_ownpi_WarpSimpleCubic_16s_C1R", "icv_p8_ownpi_NormInfRel_16s_C1R", "icv_p8_ownpi_dInterVector_NN_8_C3", "icv_h9_ownpi_ClipPolygon", "_ZN2cv3dnn19experimental_dnn_v13Net14getLayerInputsENS1_9DictValueE", "_ZN2cv9ExceptionD1Ev", "_ZN2cv3hal6cmp64fEPKdjS2_jPhjiiPv", "_ZN2cv7directx25convertFromD3D11Texture2DEP15ID3D11Texture2DRKNS_12_OutputArrayE", "icv_p8_ownscDFTinv_12_64fc", "icv_p8_ownWarpSimple1Nearest8u", "icv_s8_ownDistanceTransform_3x3_8u_C1R_F", "ippicviCopy_16u_P4C4R", "icv_s8_ownpi_dInterPoint_CR_PixelB_8u", "cvAdd", "icv_g9_ownscDftInv_Prime16_32fc", "_Z20Mat_to_vector_size_tRN2cv3MatERSt6vectorIjSaIjEE", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_V8", "icv_w7_ownsConj_64fc_W7", "icv_g9_owniFilter32f_16s_C3R_g9e9_6", "icv_w7_ippiNorm_Inf_16u_C3CMR", "icv_s8_ownsrDFTfwd_7_32f", "_ZN2cveqEdRKNS_3MatE", "icv_s8_ownippiFilterMedian_16u_C4R_5x5", "icv_s8_ownippiFilterMin_32f_Row", "icv_h9_ownResize1Linear32f", "icv_h9_ownSS1vertical_32f", "_ZN2cv3ocl8internal26isPerformanceCheckBypassedEv", "icv_s8_ippiWarpAffineLinear_16u_C1R", "Java_org_opencv_ml_TrainData_getClassLabels_10", "icv_h9_ownpi_NormL2Diff_32f_C1R", "icv_s8_owns_cFFTfwd_4_scale_32fc", "icv_s8_ownSharpenRow_32f_C1", "icv_g9_ownSS1_98_32f", "iwValueCastToType", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_W7", "icv_g9_ippiThreshold_GTVal_16s_C1IR", "icv_h9_ippiFilterMedianBorder_32f_C1R", "icv_g9_owns_rFFTinv_4_64f", "_ZN2cv31createRANSACPointSetRegistratorERKNS_3PtrINS_19PointSetRegistrator8CallbackEEEiddi", "icv_p8_ownippiFilterMedianCross_16u_C1R_3x3", "Java_org_opencv_ml_LogisticRegression_get_1learnt_1thetas_10", "icv_g9_ippsFFTInit_C_32fc", "icv_s8_ownSS1_65_16u", "icv_g9_ownSS3_16s", "icv_s8_ownpi_WarpAffineNearest_16u_C4R", "icv_h9_ippiAddProduct_32f_C1IMR", "icv_s8_ownsConj_16sc_T7", "icv_h9_ownippsCnvrt_32f8s_Sfs", "Java_org_opencv_photo_MergeMertens_getExposureWeight_10", "icv_g9_ownpi_NormL1Rel_16s_C1R", "icv_h9_ownpi_WarpAffine_L_Repl_16u_C3", "icv_g9_owniResizeLinear_16u_C3R", "icv_g9_ippiMean_8u_C1R", "icv_w7_owniConvert_16s32f_AC4_W7", "icv_s8_ippiSet_16s_C4MR", "icv_w7_ippiCopyMirrorBorder_32s_C3IR_L", "icv_p8_ownRow3Lanczos3_16u", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "icv_p8_ownippiFilterxBrd32f_8u_C3R", "icv_s8_ownpis_Max_16u_C1", "icv_s8_ippiFilterBorderInit_32f", "icv_p8_ippiScaleC_32f8s_C1R", "icv_g9_owniFilterMedianVert1x3_32f_C1R", "icv_s8_ownNorm_L2_16u_C1MR_W7", "icv_h9_ownSS4_a7_8u", "icv_g9_ownpi_WarpAffineSimpleNearest_8u_C4R", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColored_11", "icv_p8_ownpi_Rotate90_B_8_C4R", "icv_s8_ownsrDFTinv_7_32f", "icv_g9_owniFilter32f_8u_C3R_g9e9_6", "icv_h9_ownsMul_16s_Bound", "icv_s8_ownippiFilterMin_8u_Col_AC4", "_ZN3tbb8internal36get_initial_auto_partitioner_divisorEv", "icv_w7_ippiSet_8u_C1R", "WebPDecodeRGBA", "icv_g9_ippiMean_16u_C1MR", "icv_w7_owns_sDctFwd_Dir_32f", "icv_g9_ownSS4_98_8u", "icv_p8_ownpi_dInterVector_NN_32_P4", "icv_w7_ownResize3Lanczos3_32f", "icv_p8_ownPutPxl_8u", "icv_g9_ownSS1_54_32f", "icv_p8_ippiSet_16s_C4MR", "_ZN2cv9videostab15MotionInpainter7inpaintEiRNS_3MatES3_", "icv_s8_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK", "icv_p8_ownAddSquare_16u32f_C1IMR_W7", "icv_g9_ippiCopyReplicateBorder_32s_C3R", "icv_p8_ownSS4_a7_32f", "icv_g9_owniScaleC_8s16s_C1R_acc", "icv_w7_ownscDftFwd_Fact3_32fc", "icv_p8_ownpi_WarpAffineSimpleCubic_16u_C3R", "icv_g9_ownpi_WarpAffineLinear_16u_C3R", "icv_p8_ownNorm_L1_8u_C3CMR_V8", "icv_w7_ownpi_WarpAffine_C_Repl_64f_C4", "_ZN2cv6detail11PlaneWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "icv_h9_ippiFilterScharrVertMaskBorder_8u16s_C1R", "icv_s8_ippiSet_32s_C3R", "icv_h9_ownscDFTfwd_7_64fc", "icv_p8_ownpi_WarpAffine_NN_Const_8u_C4", "icv_w7_ownpi_WarpAffine_L_Mem_8u_C3", "icv_s8_ownippiThreshold_V_8u_C1", "WebPEncodeLosslessRGBA", "icv_g9_owniFilterNegSobelVertBorder2_8u16s_C1R", "icv_s8_cv_ownFilterMxMnCalcBuf_L", "_ZN2cv8Stitcher6createENS0_4ModeEb", "_ZN2cv6detail9resultRoiERKSt6vectorINS_6Point_IiEESaIS3_EERKS1_INS_4UMatESaIS8_EE", "icv_g9_ownsInitTabDftFwdRec_64f", "icv_p8_innerHSVToRGB_8u_AC4R", "icv_p8_ownscDftFwd_Prime16_32fc", "Java_org_opencv_imgproc_Imgproc_warpPerspective_10", "icv_p8_ownFilterBoxBorderInMem_32f_C3IR", "icv_p8_ippsCopy_8u", "icv_h9_ownSS4_72_16u", "icv_s8_ownpi_WarpAffineSimpleNearest_32f_C3R", "icv_w7_ippsSortRadixIndexDescend_32s", "icv_g9_ippiResizeGetBufferSize_L", "icv_s8_ownpi_Rotate90_B_64_C3R", "icv_w7_ippiCopy_16s_C1C3R", "cvFindType", "icv_g9_ownsrDFTfwd_15_scale_32f", "icv_g9_ownpi_WarpAffine_C_Mem_64f_C1", "_ZN2cv17CommandLineParserC1EiPKPKcRKNS_6StringE", "icv_w7_ownpi_WarpAffineSimpleNearest_8u_C3R", "icv_g9_ippiSqrIntegral_8u32s64f_C1R", "icv_h9_ownSS4_a7_32f", "icv_p8_ownsrDFTfwd_5_32f", "icv_p8_ownippiThreshold_LV_8u_C4", "icv_s8_ownSS3_98_32f", "icv_g9_ownSS1_32f", "_ZN2cv3ogl9Texture2D8copyFromERKNS_11_InputArrayEb", "icv_w7_ownippiFilterxBrd_32f_C1R", "icv_n0_own_ipps_sExp_W7EPnnn", "icv_p8_ownpi_WarpAffine_L_16u_P4", "icv_g9_owniFilterMedianHoriz3x1_32f_C1R", "_ZN2cv10softdoubleC2Ex", "_ZN2cv9minMaxLocERKNS_11_InputArrayEPdS3_PNS_6Point_IiEES6_S2_", "icv_p8_owniAutoSSFull_C1R", "ippicviCopy_32s_C1MR", "icv_w7_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_h9_ippiMean_16s_C3R", "icv_h9_innerSwapChannels_8u_C4R", "icv_s8_owniGetRectBottomBF_8u_C1R", "icv_w7_ownscDftInv_Prime4_64fc", "icv_p8_ippiMirror_16s_C4IR", "icv_h9_owns_cFFT_1_64fc", "icv_s8_owns_cFFTinv_4_scale_64fc", "icv_g9_owniConvert_32s8u_C1R", "icv_w7_ippiConvert_8s16u_C1Rs", "icv_g9_ownSS1_81_8u", "icv_h9_ownpi_WarpAffineNearest_8u_C1R", "icv_p8_ownsInitTabDftInvRec_64f", "_ZN2cv8subtractERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_i", "Java_org_opencv_core_Core_batchDistance_11", "icv_s8_ownsrDFTfwd_7_scale_64f", "icv_w7_ownippiFilterxBrd32f_16u_C4R", "icv_p8_ippiCopy_16u_C1C3R", "icv_h9_owniResizeAntialiasing_16s_C3R_L", "icv_h9_ownSS4_73_32f", "icv_s8_ownpi_WarpAffine_NN_Const_64f_C4", "Java_org_opencv_imgproc_Imgproc_line_12", "icv_p8_ownpi_dInterVector_L_32f_C4", "Java_org_opencv_features2d_Params_set_1minInertiaRatio_10", "icv_g9_ippiMirror_16s_C3IR", "Java_org_opencv_features2d_ORB_getFirstLevel_10", "_ZN3tbb18captured_exception3setEPKcS2_", "icv_h9_ippiResizeSuper_16u_C3R_L", "_ZNK3tbb8internal27allocate_continuation_proxy4freeERNS_4taskE", "icv_p8_ippsMul_64fc", "icv_w7_ippiNormDiff_Inf_32f_C1R", "icv_w7_owniResizeLanczos_16u_C3R", "icv_h9_owniCopyBF_8u_C1R", "icv_s8_ownpi_Histogram_FS_32f_C1R", "icv_p8_ownRow1Lanczos3_8u", "icv_h9_owniCopyMirrorBorder_8u_C1IR_L", "icv_h9_ownColCubic32f", "icv_p8_ownpi_Rotate90_32_C4R", "icv_h9_ippiConvert_8u32s_C1R", "ippicviSum_16u_C3R", "icv_w7_owniSwap_8u_210_C3I_A6", "_ZN2cv3minERKNS_4UMatES2_RS0_", "icv_p8_ownAddWeighted_16u32f_C1IR_W7", "icv_w7_ownscrDftFwd_Fact3_64f", "icv_p8_ownSS3_21_32f", "icv_p8_ownpis_Min_32f_C3", "icv_w7_owniResizeSuper_16u_C4R", "icv_p8_ownAFilterRow_8u_C3R", "icv_w7_ownippiFilterMedianHoriz_8u_C3R_5x1", "icv_h9_ownpi_WarpAffineCubic_16s_C1R", "cvGetWindowHandle", "_ZN2cv15KeyPointsFilter17runByKeypointSizeERSt6vectorINS_8KeyPointESaIS2_EEff", "icv_g9_ownSS4_32_32f", "icv_h9_owniCopyMirrorBorder_16u_C1IR", "Java_org_opencv_features2d_KAZE_getNOctaveLayers_10", "icv_h9_ippiFilterBorderInit_16s", "icv_s8_ownResize4Cubic32f", "icv_p8_owniScaleC_32s32f_C1R_acc", "icv_h9_ownpi_WarpAffine_L_Const_32f_C4", "icv_s8_ownResize3Lanczos2_8u", "Java_org_opencv_calib3d_Calib3d_distortPoints_11", "icv_w7_owniFilterBilateralR2_InMem_32f_C3R_px", "icv_s8_ownCalcBorderR1Lanczos2_8u", "icv_w7_ownpis_Sum_16u_C1", "icv_s8_ippiMorphTophat_32f_C3R_L", "icv_w7_ownNormDiff_Inf_8u_C1MR_W7", "_ZN2cv11drawMatchesERKNS_11_InputArrayERKSt6vectorINS_8KeyPointESaIS4_EES2_S8_RKS3_INS_6DMatchESaIS9_EERKNS_17_InputOutputArrayERKNS_7Scalar_IdEESK_RKS3_IcSaIcEEi", "icv_p8_ownippiFilterMedianHoriz_16s_C4R_5x1", "icv_p8_ownSum_32f_C1MR_W7", "icv_g9_ippsDFTInit_C_64fc", "icv_g9_ownFilter_32f_C3R_g9e9", "Java_org_opencv_features2d_BOWKMeansTrainer_cluster_10", "_ZNK2cv5MatOp17augAssignSubtractERKNS_7MatExprERNS_3MatE", "icv_g9_ippiFilterBorderInit_16s", "icv_s8_ippiAbsDiff_8u_C1R", "icv_g9_owniResizeLanczos_32f_C4R", "icv_p8_ippiNorm_L2_8u_C1MR", "cvConvertMaps", "ippicviSet_32f_C1R", "icv_s8_ippsDCTFwd_32f", "ippicviResizeLinear_16u_C1R_L", "icv_p8_ownpi_Sum_16s_C1R", "icv_p8_ownCopySubpix_32f_C1R_W7_1", "icv_g9_ownSS4_73_32f", "icv_g9_ownsrDFTfwd_13_scale_64f", "icv_g9_ippiMean_StdDev_8u_C3CR", "_ZNK2cv3PCA7projectERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_w7_ippiMorphOpen_32f_C1R_L", "icv_w7_ippiResizeAntialiasing_16s_C4R_L", "icv_s8_ippiMarkSpeckles_8u_C1IR", "_ZN2cv3ocl7Image2DC2ERKNS_4UMatEbb", "icv_p8_ownSharpenRow_32f_AC4", "icv_w7_ownippiFilterMedianCross_16s_C1R_5x5", "icv_h9_ippsMagnitude_16s_Sfs", "icv_s8_ownsrDftInv_PrimeFact_32f", "icv_w7_ippiMean_StdDev_32f_C3CR", "icv_p8_ippiResizeSuper_32f_C3R_L", "_ZN2cv7grabCutERKNS_11_InputArrayERKNS_17_InputOutputArrayENS_5Rect_IiEES5_S5_ii", "icv_s8_ownCalcBorderR3Cubic32f", "icv_s8_ownSS1_32_16s", "_ZN2cv3dnn19experimental_dnn_v15Layer14supportBackendEi", "icv_p8_ownpi_WarpSimpleNearest_16u_C3R", "icv_h9_ippiFilterScharrVertMaskBorderGetBufferSize", "icv_s8_cv_ownippiFilterMin_16s_Row", "icv_w7_ownRow1AA_8u", "icv_h9_owniFilter32f_16s_C1R_g9e9_4", "icv_h9_ippiFilterMedianBorder_16s_C3R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "_ZN2cv7fisheye14undistortImageERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_S3_RKNS_5Size_IiEE", "icv_g9_ownscDFTfwd_11_scale_64fc", "icv_p8_ownNormRel_Inf_16u_C1MR_W7", "icv_p8_ownRow3Lanczos3_16s", "icv_w7_owns_initTabTwdBase_64f", "icv_s8_ownpi_WarpAffineLinear_16u_C3R", "Java_org_opencv_ml_SVM_load_10", "icv_p8_owns_sDctFwd_Fft_32f", "icv_p8_owniThreshold_32f_C1R", "icv_h9_ippiScaleC_16u32f_C1R", "icv_p8_ownippsMagn_32sc32s_Sfs_ASM", "Java_org_opencv_photo_AlignMTB_getMaxBits_10", "_ZN2cv6detail15FeaturesMatcherclERKSt6vectorINS0_13ImageFeaturesESaIS3_EERS2_INS0_11MatchesInfoESaIS8_EERKNS_4UMatE", "icv_w7_ownLaplace3x3Row_8u_C3", "icv_g9_ippiAdd_8u_C1RSfs", "icv_g9_ippsSqrtOne", "icv_g9_ownpi_WarpAffine_NN_Const_64f_C4", "icv_p8_owniCopyBF_8u_C3R", "icv_p8_ippiCopyConstBorder_16s_C3R", "iwiCopySplit", "icv_p8_ownscDFTfwd_12_64fc", "icv_g9_piGradient32f", "icv_s8_ownBuildFilter_32f_Q14", "icv_s8_ownHipass5x5Col_8u_C4", "ippicviNorm_L1_8u_C3CMR", "icv_h9_ippiWarpAffineNearest_64f_C4R", "Java_org_opencv_calib3d_Calib3d_computeCorrespondEpilines_10", "icv_p8_ownpi_dInterVectorClip_L_8u_C4", "icv_h9_ippiWarpAffineNearest_16u_C4R", "icv_p8_ippiCopyConstBorder_8u_C3R_L", "own_ipps_dSin_SC_LA", "icv_w7_ownpi_WarpAffine_C_Transp_16u_C1", "cvGetHashedKey", "icv_s8_owniConvert_8s32f_W7", "icv_s8_ippiMorphClose_16u_C1R_L", "_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv", "icv_s8_ippiScaleC_16u16s_C1R", "icv_s8_ownpi_WarpAffine_L_Mem_64f_C3", "icv_p8_ownsrDFTfwd_10_scale_32f", "icv_w7_ownpi_WarpAffine_CR_32f_C3", "icv_p8_owniFilterBilateralR1_InMem_32f_C1R_L", "icv_p8_owniFilterBilateralCom_InMem_8u_C3R_L", "icv_s8_ippiCopyReplicateBorder_8u_C1IR_L", "icv_w7_ownDistanceTransform_5x5_8u32f_C1R_21F", "icv_h9_owniGetRectBottom_32f", "icv_w7_ownMinMaxIndx_16u_C1MR_W7_1", "icv_p8_ippsFFTFwd_RToPack_32f", "icv_g9_ownpi_Rotate90_B_16_C4R", "_ZN2cv19getBuildInformationEv", "icv_g9_ownsInitDftPrimeFact_64f_64f", "icv_h9_owniFilterBilateralCom_InMem_8u_C1R_px", "icv_h9_ownpi_WarpAffineCubic_8u_C1R", "cvCreateImage", "icv_n0_own_ipps_sAtan2_S9LAynn", "icv_w7_ownResize3Linear64f", "cvInitUndistortRectifyMap", "icv_w7_ownscDftFwd_Prime8_32fc", "icv_w7_ownAbsDiffC_32f_C1R_W7", "_ZN2cv6mulAddERKNS_9softfloatES2_S2_", "icv_w7_ippiDCTFwd_32f_C1R", "icv_p8_owniResizeSuperInit", "_ZN2cv6detail12DisjointSets17createOneElemSetsEi", "icv_g9_ownSS4_72_16u", "_ZN10__cxxabiv117__pbase_type_infoD2Ev", "icv_g9_ownippiFilterMedianSqr_8u_C4R", "icv_w7_ownpi_dInterVector_NN_8_C4", "icv_s8_ownSS1vertical_16s", "icv_p8_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "icv_h9_ippiTranspose_16u_C1IR", "_ZNK2cv4cuda10DeviceInfo27maxThreadsPerMultiProcessorEv", "icv_g9_ippsDFTInv_PackToR_32f", "icv_g9_ownResize1Lanczos2_16s", "cvFlushSeqWriter", "cvCloneMatND", "icv_s8_ownippiFilterMedianHoriz_8u_C3R_5x1", "icv_s8_ippsFFTFwd_RToPerm_32f", "icv_w7_ownpi_Rotate90_64_C4R", "icv_p8_ownpi_Rotate180_8_C3R", "icv_s8_ownippiFilterMedianHoriz_16s_C4R", "icv_w7_ownColAA_8u", "icv_g9_owniScaleC_64f8u_C1R_acc", "icv_p8_ownpi_WarpAffine_C_Repl_8u_C1", "icv_g9_ownscDFTfwd_13_32fc", "icv_h9_ippiAdd_8u32f_C1IMR", "icv_g9_ownpi_WarpAffineSimpleLinear_32f_C3R", "icv_p8_owniSwap_8u_C4C3R", "Java_org_opencv_video_Video_findTransformECC_10", "icv_w7_ownpi_WarpAffine_L_Mem_32f_C3", "icv_p8_ownscDFTfwd_7_64fc", "icv_w7_ippiNorm_Inf_16u_C1MR", "cvHoughCircles", "icv_g9_ippiCopy_8u_P3C3R", "ippicviScaleC_8s64f_C1R", "WebPDecodeRGBInto", "icv_p8_ippiCopyMirrorBorder_32s_C1IR_L", "icv_w7_ippsSortRadixDescend_16s_I", "_ZNK3tbb12missing_wait4whatEv", "icv_h9_ippiFilterMedianBorder_16s_C1R", "WebPPictureAlloc", "icv_s8_owns_rFFTfwd_16_64f", "icv_h9_ippiFilterBoxBorder_8u_C1R", "icv_h9_ownpi_WarpAffineCubic_32f_C4R", "_ZN2cv11RNG_MT19937cvjEv", "icv_p8_ownPrewColV_16s", "icv_p8_ownNormDiff_L1_8u_C1MR_W7", "icv_p8_Moments32fC1R_64f_FAST", "icv_g9_ippiCopy_16s_C4MR", "icv_p8_owniFilterPrewittHorizBorder2_32f_C1R", "Java_org_opencv_objdetect_HOGDescriptor_get_1nlevels_10", "icv_h9_ownSS4_52_16u", "ippicviCopy_16u_C3C1R", "icv_w7_ippiCountInRange_32f_C1R", "icv_w7_ownHipass5x5Row_16s", "_ZNK2cv17DescriptorMatcher19getTrainDescriptorsEv", "icv_p8_owniCopy16sC3Mas", "icv_w7_ownpi_WarpAffineSimpleLinear_16u_C1R", "icv_h9_ownWarpSimple3Nearest32f", "icv_s8_ownpi_MinMax_8u_C3R", "icv_w7_ownsConj_64fc_I_W7", "icv_w7_ownpi_WarpAffineLinear_16s_C1R", "icv_h9_ownpi_WarpAffine_L_Const_8u_C3", "icv_h9_owniResizeNearest_16u_C3R", "icv_p8_owniFilterSobelHorizBorder2_16s_C1R", "Java_org_opencv_core_Mat_n_1ones__III", "icv_g9_ownpi_WarpAffine_L_Mem_16u_C3", "icv_g9_ownRow1Filter12_16s", "_ZNK2cv17DescriptorMatcher20DescriptorCollection13getDescriptorEii", "icv_p8_ownpi_NormL1Rel_32f_C1R", "ippicviTranspose_32f_C1R", "icv_s8_ippiAddProduct_32f_C1IR", "ippicviNormDiff_L1_32f_C1R", "icv_s8_ippiTranspose_32f_C3R", "_ZN2cv3hal7recip8sEPKajS2_jPajiiPv", "icv_s8_ippiNormRel_L2_16s_C1R", "icv_s8_ippiResizeLinear_16s_C3R_L", "icv_h9_ownscDftFwd_Prime8_32fc", "icv_p8_ipMirror45_32uC1R", "icv_g9_owniResizeLanczos_16s_C3R", "icv_g9_ippsConj_64fc", "_Z22Mat_to_vector_KeyPointRN2cv3MatERSt6vectorINS_8KeyPointESaIS3_EE", "icv_p8_ippsMinEvery_16u", "icv_p8_owniGetRectBottom_32f", "_ZN2cv3ocl11kernelToStrERKNS_11_InputArrayEiPKc", "icv_g9_owniScaleC_32s32s_C1R_acc", "icv_g9_ownpi_WarpAffine_C_Mem_8u_C1", "icv_p8_ippiCopy_8u_C1R", "ippicviConvert_16s8s_C1RSfs", "icv_s8_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_W7cn", "WebPCleanupTransparentArea", "icv_h9_ownSS3_32_8u", "icv_h9_ippiMarkSpecklesGetBufferSize", "icv_p8_ownpi_CheckResizeCall", "icv_p8_owniFilter_32f_C1R_v8u8_2", "icv_p8_owniScaleC_32f16u_C1R_acc", "Java_org_opencv_imgproc_Imgproc_line_10", "Java_org_opencv_ml_KNearest_setDefaultK_10", "llwiCanny", "icv_p8_ownHipass5x5Col_8u_C4", "icv_g9_ownsSet_16u", "icv_p8_owniFilterBilateralCom_InMem_8u_C1R", "ippicviDistanceTransform_3x3_8u_C1R", "_ZN2cv11RNG_MT19937clEv", "_ZN2cv5utils5trace7details8traceArgERKNS2_8TraceArgEi", "icv_g9_ipMirror45_8uC1R", "icv_w7_ippiCopyConstBorder_8u_C3R", "icv_g9_ippiCopy_8u_AC4R", "icv_s8_ownsGetSizeDftConv_64f", "icv_g9_owniCopyMirrorBorder_8u_C1IR_L", "icv_w7_ippiSub_8u_C4RSfs", "icv_w7_ippiDFTInit_R_32f", "icv_p8_ippiDilate_32f_C4R_L", "Java_org_opencv_features2d_DescriptorMatcher_write_10", "icv_n0_own_ipps_dInvSqrt_W7LAynn", "icv_p8_ippiMirror_16s_C1R", "_ZN2cv3ocl5QueueD1Ev", "_ZN2cv21drawChessboardCornersERKNS_17_InputOutputArrayENS_5Size_IiEERKNS_11_InputArrayEb", "icv_h9_ownSS4_65_32f", "icv_p8_ownFilter_32f_C1R_v8u8", "cvStartLoop", "_ZN2cv9FormattedD0Ev", "icv_p8_ownsGetSizeTabDftBase_64f", "_ZN2cv11FileStorageD0Ev", "_ZN2cv6invertERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_h9_owniResizeLinear_64f_C3R", "cvCornerMinEigenVal", "icv_w7_ippi_cDftSplit_32fc", "icv_g9_ippiResizeSuper_32f_C1R_L", "icv_w7_ippiResizeCubic_32f_C3R_L", "icv_p8_ippiNorm_L1_8u_C3CMR", "icv_s8_owns_cFFTinv_16_scale_64fc", "icv_g9_ownSS1_81_32f", "_ZN2cvmlEdRKNS_7MatExprE", "icv_p8_ippiSet_32f_C1R", "icv_h9_piGradientSobel32f_5x5_row_c1", "icv_p8_ownCanny_16s8u_C1R_2_16u_W7", "icv_p8_ownResize4Lanczos2_16s", "icv_g9_ippiNormDiff_L2_16u_C3CMR", "ippicviConvert_32s16u_C1RSfs", "_ZN2cv8Stitcher20estimateCameraParamsEv", "_ZN2cv6detail11MatchesInfoaSERKS1_", "icv_w7_ownNormDiff_L2_8u_C3CMR_W7", "icv_p8_ownIntegralSq_8u32s64f_C1R_V8", "icv_s8_ippiErode_32f_C3R_L", "icv_w7_ownpi_WarpAffine_C_Const_32f_C4", "icv_s8_ippsFree", "Java_org_opencv_imgproc_Imgproc_polylines_11", "icv_g9_ownSS1_21_8u", "icv_p8_ippiMean_16s_C4R", "icv_w7_ownCalcBorderR1Linear16s", "_ZN2cv9videostab14StabilizerBase19nextStabilizedFrameEv", "icv_w7_ownpi_Rotate180_32_C1R", "icv_h9_ippiTranspose135_16u_C1R", "icv_s8_ownCalcBorderR4Linear8u", "ippicviMirror_16u_C1IR", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_W7", "icv_g9_ownpi_NormL1Rel_8u_C1R", "icv_w7_ippiMirror_8u_C1R", "icv_p8_ownippiFilterMedianVert_8u_C4R_1x3", "Java_org_opencv_features2d_BOWKMeansTrainer_BOWKMeansTrainer_11", "icv_w7_ownResize4Antialiasing_32f", "_ZNK2cv12_OutputArray6createENS_5Size_IiEEiibi", "ippicviCopy_32f_C1MR", "icv_p8_owniConvert_16u8u_T7", "_ZN2cv11FileStorage8writeRawERKNS_6StringEPKhj", "_ZNK2cv5flann5Index12getAlgorithmEv", "icv_w7_ownscDFTinv_3_32fc", "icv_h9_ownpi_NormInf_16u_C1R", "icv_w7_ownSumSq_32f_C1MR_W7", "icv_n0_own_ipps_sSqrt_T7HAynn", "icv_h9_owniSqrDistanceNorm_FullSame_32f_C1R", "icv_p8_piFilterBoxBorder_32f_C1IR_2_v8u8_NA", "icv_h9_ownippiFilterMax_32f_RowCol_C4_h9l9", "icv_g9_ownsInitTabDftInvRec_32f", "icv_p8_ippsRound_64f", "icv_w7_ownscDftInv_Prime8_64fc", "icv_s8_owniConvert_8s32f_AC4_W7", "_ZN2cv3hal8recip16uEPKtjS2_jPtjiiPv", "_ZN3tbb19task_scheduler_init10initializeEij", "icv_s8_ownippiFilterMedianHoriz_8u_BC4R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_W7", "icv_p8_ownResize3Lanczos3_16s", "icv_s8_ownsMulC_64f_I", "_ZNK2cv3ocl6Device18globalMemCacheSizeEv", "icv_g9_ippiScaleC_16u32f_C1R", "icv_w7_ownscDFTfwd_11_64fc", "icv_s8_ippiFilterMedianBorder_16u_C3R", "icv_w7_owniGetRectRight_16s", "_ZN2cv10bitwise_orERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_", "icv_s8_ownippiFilterMedianHoriz_8u_C4R", "icv_g9_ownsrDFTinv_3_64f", "icv_g9_ownBuildFilter_32f_Q14", "_ZN2cv25BOWImgDescriptorExtractorC2ERKNS_3PtrINS_17DescriptorMatcherEEE", "icv_s8_ippsFFTInit_R_32f", "cvLine", "icv_h9_ippiResizeNearest_16u_C1R_L", "_ZN2cv3dnn19experimental_dnn_v13NetD1Ev", "icv_g9_ownSS4_83_8u", "Java_org_opencv_imgproc_Subdiv2D_getEdge_10", "icv_p8_ownpi_Sum_8u_C4R", "icv_h9_owniSqrDistanceNormGetSize", "_ZN2cv3ocl7Context6createEi", "Java_org_opencv_video_Video_CamShift_10", "icv_w7_ippiCopy_16u_AC4C3R", "_ZN2cv12GFTTDetector6createEiddibd", "ippicviTranspose_16u_C1IR", "ippicviGetSpatialMoment_64f", "icv_w7_ownAdd_32f_C1IMR_W7", "icv_h9_owniScaleC_16u16u_C1R_acc", "icv_w7_ownpi_WarpAffine_NN_32_C3", "icv_w7_ippsFFTFwd_RToPerm_32f", "icv_w7_owns_crRadix4FwdNorm_32f", "icv_g9_ippiAddC_32f_C1R", "icv_p8_ownSS1_72_16s", "icv_w7_ownippiFilterMedianHoriz_16s_BC4R", "icv_g9_ippiAnd_8u_C1R", "icv_s8_ippiScaleC_8s_C1R", "ippicviSum_16u_C1R", "cvMinAreaRect2", "icv_s8_ippiAddSquare_32f_C1IR", "icv_s8_ownpi_WarpAffine_NN_16_AC4", "icv_h9_ownRow1Filter8_16s", "Java_org_opencv_calib3d_StereoSGBM_getP1_10", "icv_s8_ownRow1Linear16u", "icv_w7_ippiAddWeighted_32f_C1IMR", "icv_w7_ownpi_dInterVector_NN_32_P4", "icv_g9_owns_rFFT_1_scale_32f", "Java_org_opencv_videoio_VideoWriter_open_11", "icv_p8_ippiScaleC_32f8u_C1R", "icv_w7_ownippiFilterxBrd_8u_C1R", "_ZN2cv3hal5LU32fEPfjiS1_ji", "icv_s8_ownpi_XorC_8u_C3R", "icv_s8_ownpi_WarpAffine_C_Const_8u_C1", "icv_p8_ownpi_WarpAffine_L_Repl_64f_C1", "icv_w7_ownpi_NormInf_16u_C1R", "_ZN2cv3hal5add8sEPKajS2_jPajiiPv", "icv_g9_owniFilterSobelVertSecondBorder2_8u16s_C1R", "icv_g9_ippiResizeNearest_32f_C1R_L", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_V8", "icv_s8_ownpi_WarpSimpleNearest_64f_C1R", "icv_s8_ownSharpenRow_16s_C1", "_ZN2cv6detail17OrbFeaturesFinderC1ENS_5Size_IiEEifi", "icv_p8_ownippiThreshold_GLV_32f_C1", "icv_g9_owniFilterSobelVertSecondBorder2_32f_C1R", "Java_org_opencv_video_KalmanFilter_get_1transitionMatrix_10", "icv_p8_ownscDFTinv_6_scale_64fc", "ippicviHarrisCorner_32f_C1R", "icv_p8_ippiMean_16u_C4R", "icv_w7_ippiMinMaxIndx_8u_C1MR", "icv_p8_owniGetRectTopBF_8u_C1R", "icv_p8_ippiWarpAffineCubic_64f_C3R", "icv_s8_ownpi_WarpSimpleNearest_16s_C3R", "icv_w7_ippsMaxEvery_8u", "Java_org_opencv_imgproc_Imgproc_Laplacian_12", "cvWriteReal", "icv_s8_ownippiFilterMedian_16u_C4R_3x3", "icv_g9_ownFilterBoxBorderInMem_32f_C3IR", "icv_w7_cv_ownMorphologyGetSize_L", "icv_g9_ownRow1Antialiasing_32f", "icv_p8_ownResize4Linear16u", "icv_p8_ippiHarrisCorner_8u32f_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_W7", "icv_h9_ownSS4_21_16s", "icv_w7_owniGetRectRightBF_32f_C3R", "icv_w7_ownCalcBorderR3Cubic16u", "_ZN2cv11compareHistERKNS_9SparseMatES2_i", "icv_p8_ownpi_Or_8u_C1R", "icv_s8_ownippsCnvrt_32f16u_Sfs", "icv_p8_ownsGetSizeDftConv_64f", "icv_w7_ippiTranspose_8u_C1IR", "icv_w7_ippsFFTInv_CToC_64fc", "_ZNK2cv3ocl6Kernel5emptyEv", "icv_s8_ownscDFTfwd_6_64fc", "icv_g9_ownpi_WarpAffine_C_Mem_16u_C1", "Java_org_opencv_imgproc_Imgproc_Canny_13", "icv_h9_ownippiFilterMax_8u_RowCol_C1_h9l9", "icv_s8_ownpi_WarpAffine_NN_Const_32f_C1", "icv_h9_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "cvGet2D", "icv_s8_owniResizeSuperInit", "icv_p8_ownResize1Antialiasing_8u", "icv_p8_ownSS4_72_32f", "icv_w7_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "icv_s8_ownCopySubpix_16u32f_C1R_V8", "icv_h9_ownippiFilterxBrd_8u_C3R", "icv_s8_ownippiFilterxBrd_8u_C3R", "icv_p8_ownSS3_41_32f", "icv_s8_ippiScaleC_16s8u_C1R", "Java_org_opencv_core_Core_divide_16", "_ZN2cv6detail7Blender7prepareENS_5Rect_IiEE", "icv_h9_ippiAdd_16s_C1RSfs", "icv_p8_ippiCopySubpixIntersect_8u32f_C1R", "icv_w7_ipMirror45_16uC1R", "icv_g9_ownResize4Lanczos3_32f", "icv_w7_ownWarpSimple1Nearest8u", "icv_s8_piGradient8u", "icv_w7_ownCalcBorderR3Lanczos3_32f", "icv_w7_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_p8_ippiSwapChannels_32f_C4R", "icv_w7_ownscrDftInv_Prime_64f", "icv_p8_ownSS4_8u", "icv_h9_ippsMagnitude_32f", "icv_w7_ownpi_WarpAffineSimpleLinear_16s_C4R", "icv_g9_ownpi_WarpAffineCubic_16s_C1R", "ippicviMirror_8u_C4IR", "icv_h9_ippsDFTFwd_CToC_32fc", "icv_h9_ownResize1Lanczos3_16u", "icv_g9_ownscDftInv_PrimeFact_64fc", "icv_g9_ownsMul_8u_1Sfs", "icv_w7_ownippsSqrt_16sc_ASM_ZR", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_W7", "Java_org_opencv_imgproc_Imgproc_sqrBoxFilter_12", "icv_g9_ownsrDFTfwd_10_64f", "icv_p8_owniScaleC_32f32f_C1R_acc", "icv_w7_ippiScaleC_16s32f_C1R", "ippicviFilterBoxBorderGetBufferSize", "icv_w7_ippiSub_32f_C1R", "icv_s8_ownNormRel_Inf_16u_C1MR_W7", "icv_p8_ownpis_Indx_16u_C1", "Java_org_opencv_imgproc_Imgproc_moments_10", "icv_p8_ownsrDFTfwd_5_scale_64f", "icv_p8_ownippsSqrt_64fc", "icv_h9_ownsAdd_8u_NegSfs", "_ZN2cv4cuda10BufferPoolC2ERNS0_6StreamE", "_ZN2cv10checkRangeERKNS_11_InputArrayEbPNS_6Point_IiEEdd", "icv_h9_owniFilter_32f_C4R_g9e9_7", "_ZN2cv3ocl11haveAmdBlasEv", "icv_s8_ownpi_Set_64f_C3R", "icv_p8_ownscDftReord_32fc", "_ZNK2cv3ocl13ProgramSource4hashEv", "icv_g9_owniScaleC_16s32f_C1R_acc", "icv_p8_owns_BitRev1_Z", "icv_w7_ippsMul_32fc_I", "_ZN2cv21DetectionBasedTracker9addObjectERKNS_5Rect_IiEE", "ippicviCopy_8u_C3P3R", "icv_s8_ownCalcBorderR4Antialiasing_8u", "icv_p8_ownColFilter2_8u", "iwTls_Get", "cvFindCornerSubPix", "_ZN2cv9getRecallERKSt6vectorINS_6Point_IfEESaIS2_EEf", "icv_s8_ownpi_Rotate90_B_8_C3R", "ippicviCopy_8u_C1R_L", "icv_h9_ownpi_Rotate180_64_C4R", "icv_s8_owns_cFFTfwd_4_scale_64fc", "icv_w7_ownDistanceTransform_3x3_8u32f_C1R_21B", "icv_h9_owniScaleC_16u32f_C1R_acc", "icv_s8_owns_rFFTfwd_16_32f", "icv_p8_owniResizeGetSrcRoi", "icv_w7_ippiCopy_16s_C3MR", "icv_g9_ownippiFilterMedianHoriz_16u_BC4R", "icv_p8_ownCalcBorderR3Linear8u", "icv_p8_ippiNorm_L2_32f_C1MR", "icv_p8_ownippiFilterMedianCross_8u_C4R_3x3", "icv_g9_ownscDftFwd_PrimeFact_32fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "icv_g9_ownpi_WarpSimpleNearest_16u_C1R", "icv_p8_ippiFilterBorder_16u_C1R", "icv_h9_owniFilterBilateralR1_InMem_32f_C1R_px", "icv_h9_owns_cFFT_1_scale_32fc", "Java_org_opencv_ml_EM_trainM_10", "icv_p8_ownResize3Antialiasing_16u", "icv_s8_ownpi_dInterVectorClip_NN_32_P3", "_ZN2cv12VideoCaptureD2Ev", "cvGetFileNodeName", "icv_h9_owniCmpLess_16u_C1R", "icv_w7_ownsMul_32fc", "icv_w7_ownpi_WarpAffine_C_Const_32f_C3", "icv_h9_ownFilterBoxBorderInMem5x5_16u_C1R", "ippicviAdd_8u32f_C1IR", "icv_w7_ippiNormDiff_L1_8u_C1R", "ippicviNorm_L1_16u_C1R", "icv_p8_ippiGradientVectorScharr_8u16s_C1R", "icv_h9_ownpi_WarpAffine_C_Transp_16u_C4", "icv_h9_ippiResizeNearest_16s_C3R_L", "icv_h9___svml4ipp_expf8", "Java_org_opencv_videoio_VideoCapture_set_10", "Java_org_opencv_photo_Photo_createTonemapDrago_11", "icv_p8_ippsZero_32fc", "icv_w7_owniFlipCopy_8u_C3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "_ZN3tbb8internal14dynamic_unlinkEPv", "icv_g9_ippiScaleC_16s32s_C1R", "_ZN2cv9SparseMat5clearEv", "ippicviHistogram_32f_C1R", "icv_p8_ippiSet_8u_C3R", "icv_g9_ippsZero_32fc", "Java_org_opencv_features2d_ORB_getEdgeThreshold_10", "icv_p8_ippiResizeLinear_32f_C3R_L", "icv_w7_ippiDotProd_32s64f_C1R", "Java_org_opencv_ml_ParamGrid_set_1maxVal_10", "icv_h9_ippiMaxIndx_8u_C1R", "Java_org_opencv_features2d_DescriptorMatcher_create_10", "_ZNK2cv11FileStorageixEPKc", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_11", "icv_p8_ownLaplace3x3Row_16s_C1", "icv_g9_ippiResizeSuper_16s_C4R_L", "icv_s8_ippiFilterLaplacianGetBufferSize_32f_C1R", "icv_p8_ownippiThreshold_GLV_32f_AC4", "icv_g9_ippiSet_16s_C3R", "icv_h9_gres_NormL2_16u_C1R", "icv_h9_ownSShorisontal_32f", "_ZN2cv7noArrayEv", "icv_w7_ippiFilterMax_32f_Col_AC4_A6", "icv_s8_ippiMulPack_32f_C1R", "Java_org_opencv_ml_SVMSGD_setMarginRegularization_10", "icv_p8_ownippsMagn_16s_Sfs", "_ZN2cv11findNonZeroERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_h9_ippiScaleC_16u16s_C1R", "_ZNK2cv3ocl6Device13OpenCLVersionEv", "icv_h9_ippiMean_32f_C3R", "icv_h9_owniGetRectComBF_32f_C1R", "icv_s8_ownippsCnvrt_32f8u_Sfs", "icv_w7_ownFilterRowBorderPipeline_32f_C3R_3x3", "icv_g9_ownscDftFwd_Prime7_32fc", "icv_w7_ownippiFilterMax_16s_Col", "icv_w7_ippsSqrt_64f_A50", "icv_h9_ownpi_Rotate90_B_8_C1R", "icv_h9_ippiResizeLanczosInit_L", "icv_s8_ownippiFilterMedian_16u_C3R_3x3", "_ZN2cv7solveLPERKNS_3MatES2_RS0_", "icv_p8_ownSS3_21_16s", "Java_org_opencv_calib3d_Calib3d_initCameraMatrix2D_11", "icv_s8_owns_cFftFwd_CoreMT_32fc", "icv_p8_owns_crFft_BlkSplit_64f", "icv_s8_ownpi_Histogram_16u_AC4R", "_ZN2cv11FileStorage5writeERKNS_6StringEd", "_ZN2cv8clipLineENS_5Rect_IiEERNS_6Point_IiEES4_", "icv_s8_ownBFilterRow32f_16u_C4R", "icv_s8_ownippiFilterMedianHoriz_16u_C4R_3x1", "icv_w7_owns_cFFTinv_16_64fc", "icv_w7_ownsrDFTfwd_5_32f", "icv_p8_ownRow4Cubic16s", "icv_h9_ippiSet_32f_C3MR", "icv_s8_owniFilterBilateralCom_InMem_32f_C1R_px", "icv_w7_ownNormDiff_Inf_8u_C3CMR_W7", "icv_g9_ippiAdd_16u32f_C1IMR", "icv_p8_ownNormDiff_Inf_8u_C3CMR_V8", "_ZN2cv14displayOverlayERKNS_6StringES2_i", "icv_s8_ownCopySubpixIntersect_16u_C1R_W7", "_ZN2cv9videostab15VideoFileSourceC1ERKNS_6StringEb", "icv_w7_ownpi_WarpAffine_NN_16_C3", "_ZN2cv11matMulDerivERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_", "icv_s8_ippiFilterMedianBorder_16s_C4R", "icv_s8_ownNormRel_L1_16u_C1MR_W7", "icv_s8_ownSS1_73_16s", "icv_s8_ownSS1_32f", "_Z18Mat_to_vector_RectRN2cv3MatERSt6vectorINS_5Rect_IiEESaIS4_EE", "_ZN2cv10BOWTrainerD0Ev", "icv_g9_ippiMirror_32f_C4IR", "icv_w7_ippiScaleC_32s16s_C1R", "icv_p8_ippiMorphBlackhat_8u_C4R_L", "icv_h9_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_w7_ippiCopy_32f_C3R_L", "icv_s8_ownCalcBorderR3Lanczos3_16u", "icv_w7_ownscDftFwd_Prime3_64fc", "icv_g9_ippiMinMaxIndx_32f_C1MR", "ippicviThreshold_GT_16s_C1R", "icv_g9_ippiFilterLowpassGetBufferSize_32f_C1R", "Java_org_opencv_ml_ANN_1MLP_getTrainMethod_10", "ippicviConvert_8s16u_C1Rs", "icv_s8_ippiHistogramGetBufferSize", "Java_org_opencv_core_Core_bitwise_1not_11", "icv_n0_own_ipps_sSin_S9HAynn", "icv_s8_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "_ZN2cv3ocl7Context9setUseSVMEb", "icv_p8_ownWarpSimple3Nearest16s", "Java_org_opencv_photo_Photo_createCalibrateDebevec_11", "_ZN3tbb8internal6market28mandatory_concurrency_enableEPNS0_5arenaE", "icv_g9_ippiCopyReplicateBorder_8u_C3IR_L", "icv_g9_ownCalcBorderR1Lanczos3_8u", "icv_p8_ownpi_dInterPoint_CR_PixelB_16u", "_ZN2cv10convexHullERKNS_11_InputArrayERKNS_12_OutputArrayEbb", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3", "cvFastArctan", "ippicviMean_StdDev_8u_C1MR", "icv_s8_owns_cFFTfwd_32_scale_32fc", "cvSeqSlice", "icv_p8_ippiNorm_Inf_16s_C1R", "_ZN2cv3ocl6KernelaSERKS1_", "icv_s8_ippiWarpAffineLinear_16u_C3R", "icv_h9_ownpi_WarpAffine_C_Repl_64f_C4", "icv_p8_gres_NormL1_16u_C1R", "icv_s8_ownCanny_16s8u_C1R_2_16u_W7", "icv_s8_ippsDFTInit_R_32f", "Java_org_opencv_ml_SVM_getCoef0_10", "icv_g9_ippiGradientVectorSobel_32f_C1R", "icv_p8_ippsMulC_64f_I", "icv_w7_ownscDftFwd_Prime5_64fc", "icv_s8_ownResize4Antialiasing_16u", "icv_p8_ippiWarpAffineNearest_16s_C4R", "icv_s8_ownpi_dInterVector_L_8u_AC4", "_ZN2cv3ogl6BufferC2ERKNS_11_InputArrayENS1_6TargetEb", "icv_w7_ownSS3_16u", "icv_g9_ippiDilate_32f_C1R_L", "icv_h9_ippiNorm_L2_16u_C1MR", "icv_p8_ippiFilterMedianBorder_16s_C1R", "icv_s8_ippiCopy_8u_C3MR", "icv_p8_ownpi_WarpAffineLinear_16u_C4R", "icv_h9_ippiScaleC_8s32s_C1R", "icv_w7_ippiFilterSobelVertBorder_16s_C1R", "icv_h9_ownpi_WarpSimpleNearest_16u_C1R", "Java_org_opencv_features2d_DescriptorExtractor_create_10", "icv_s8_ownpi_SimpleRotate_16s_C3R", "icv_h9_ownsInitTabDftFwdRec_64f", "_ZNK2cv3ocl6Device18imageMaxBufferSizeEv", "icv_g9_ippiAddSquare_8u32f_C1IMR", "icv_s8_ippiNormDiff_L1_16u_C3CMR", "icv_s8_ownpi_WarpAffineSimpleLinear_16s_C3R", "icv_s8_ownippiThreshold_V_32f_C1", "icv_p8_owns_cFftInv_CoreMT_64fc", "Java_org_opencv_imgproc_Imgproc_convertMaps_10", "icv_p8_ownpi_WarpAffineLinear_32f_C1R", "icv_h9_ippsCopy_32s", "icv_g9_ownResize3Lanczos2_8u", "icv_p8_ownNorm_L1_32f_C1MR_W7", "icv_w7_owniResizeSuper_16s_C3R", "_ZN2cv6mulAddERKNS_10softdoubleES2_S2_", "icv_p8_ownLaplace3x3Row_8u_C4", "icv_h9_owns_rFFTinv_8_64f", "icv_s8_ownpi_WarpAffine_NN_Repl_64f_C3", "icv_w7_owniResizeLanczos_32f_C3R", "icv_g9_ippiFilterSobelHorizBorder_16s_C1R", "iwiImage_GetRoiImage", "cvGetQuadrangleSubPix", "_ZN10__cxxabiv120__si_class_type_infoD2Ev", "icv_p8_owniResizeAntialiasing_16u_C3R_L", "icv_g9_ownCalcBorderR3Cubic8u", "icv_w7_ippiAdd_16s_C1RSfs", "ippicvGetMaxCacheSizeB", "icv_s8_ownsrDFTinv_3_scale_32f", "ippicviFilterLaplacianGetBufferSize_8u16s_C1R", "Java_org_opencv_objdetect_HOGDescriptor_get_1cellSize_10", "icv_w7_owniResizeCubic_32f_C3R", "cvSetRealND", "icv_w7_ippiFilterMaxBorderGetBufferSize", "Java_org_opencv_imgproc_Imgproc_rectangle_12", "Java_org_opencv_features2d_Params_get_1filterByConvexity_10", "_ZN2cv5flann20CompositeIndexParamsC1EiiiN7cvflann20flann_centers_init_tEf", "icv_s8_ownippiFilterMedianSqr_8u_AC4R", "icv_s8_ownSS4vertical_16s", "icv_s8_ippiCopy_8u_C3R_L", "ippicviMinMaxIndx_8u_C1R", "_ZN2cv7vconcatERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_w7_ownpi_dInterVector_L_32f_C3", "icv_g9_ippiTrueDistanceTransform_8u32f_C1R", "icv_w7_ippsSinCos_64f_A50", "icv_h9_owniResizeNearestInit", "icv_s8_ownscDftInv_Prime16_64fc", "icv_s8_owniResizeCubic_32f_C4R", "icv_p8_ownFilterBoxBorder_8u_AC4IR", "icv_g9_owniConvert_16u16s_ccode", "icv_s8_ownpi_XorC_32s_C3R", "icv_p8_ownscDftInv_Fact7_64fc", "icv_h9_owniScaleC_16u16s_C1R_acc", "icv_g9_ippsSet_16s", "icv_g9_owniFilterScharrHorizMaskBorder2_32f_C1R", "icv_g9_owniConvert_16s16u_ccode", "icv_p8_owns_cFftInv_CoreMT_32fc", "icv_p8_ownsSub_32f", "icv_w7_ownpi_WarpAffineCubic_32f_C4R", "Java_org_opencv_ml_TrainData_getNVars_10", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_W7", "icv_s8_owniCopy_8u_C1M_W7", "icv_p8_ippiCopyReplicateBorder_32s_C4R", "icv_h9_ownsrDFTinv_12_64f", "icv_w7_ippiScaleC_8s8u_C1R", "icv_h9_ownippiFilterMedianHoriz_8u_C1R_5x1", "icv_p8_ippiCompare_8u_C1R", "icv_p8_ownResize1Lanczos2_8u", "icv_g9_ippiResizeAntialiasing_16u_C1R_L", "icv_h9_owniGetRectLeftBF_8u_C1R", "icv_h9_piGradientSobel8u_3x3_row_c1", "icv_w7_ownMinEigenVal_16s32f_C1R_W7", "icv_p8_owniSet_16s_C4MR", "icv_s8_ippiConvert_32s16s_C1RSfs", "Java_org_opencv_imgproc_Imgproc_calcHist_10", "icv_s8_ippsCopy_16s", "icv_s8_ownpi_dInterVectorClip_NN_16_C4", "icv_w7_ownpi_OrC_8u_C4R", "icv_s8_ippiNormDiff_L1_16u_C1MR", "cvGetDims", "icv_h9_ippiDilate_32f_C4R_L", "icv_g9_ownsrDFTfwd_13_32f", "icv_g9_owns_cFFTfwd_8_scale_32fc", "icv_p8_ippiNormRel_L1_32f_C1MR", "icv_p8_ownpi_Rotate90_64_C4R", "icv_h9_owniCopyMirrorBorder_32s_C4IR", "icv_g9_ippiCopyConstBorder_16s_C4R", "icv_s8_ippiTranspose_32f_C4R", "icv_s8_ippiCopyMirrorBorder_16u_C4IR", "icv_w7_owns_cFFTfwd_4_32fc", "icv_g9_ownpi_WarpAffineLinear_8u_C1R", "icv_w7_ippiCopy_8u_C4R", "icv_h9_ippiMean_StdDev_8u_C3CMR", "icv_p8_ownpi_AndC_32s_AC4R", "Java_org_opencv_core_Core_flip_10", "_ZN2cv7directx3ocl32initializeContextFromD3D10DeviceEP12ID3D10Device", "icv_g9_owniScaleC_16u16s_C1R_fst", "icv_g9_ownpi_NormL2Diff_16s_C1R", "icv_p8_owns_BitRev1_D", "_ZNK2cv4UMat9convertToERKNS_12_OutputArrayEidd", "_ZN2cv3maxERKNS_3MatES2_", "icv_s8_ippiDilate_32f_C4R_L", "icv_s8_ownippiFilterMin_16s_Col_AC4", "icv_p8_ippsSinOne", "icv_p8_owns_cFftFwd_Large_64fc", "icv_p8_ownpi_WarpSimpleCubic_32f_C4R", "icv_p8_ownsrDftFwd_Dir_64f", "icv_w7_ippiResizeLinear_8u_C1R_L", "icv_g9_ownCalcBorderR3Linear8u", "icv_p8_ippiMorphOpen_8u_C1R_L", "_ZN2cv12VideoCapture3setEid", "icv_h9_ownpi_WarpAffine_C_Transp_32f_C4", "icv_w7_owniSet_16s_C1_W7", "icv_g9_ownscDFTfwd_13_64fc", "icv_s8_owniResizeLanczos_16u_C3R", "icv_s8_ownSS4_72_32f", "icv_p8_ownippiFilterMedianCom_8u", "icv_w7_ownNorm_Inf_16u_C1MR_W7", "icv_s8_ownpi_WarpAffineSimpleLinear_32f_C4R", "icv_s8_ippiCopy_16s_C4R", "icv_p8_ownSq_32f_C1R_W7", "icv_p8_ownpi_WarpAffine_C_Mem_16u_C3", "icv_w7_ippiHistogramUniformInit", "icv_g9_ippiResizeSuper_32f_C4R_L", "icv_g9_owniFilter32f_8u_C1R_g9e9_4", "icv_h9_ownRow1Filter8_32f", "icv_p8_setIndexCR", "icv_s8_ippiMirror_32f_C3IR", "icv_g9_ownsrDftInvRecombine_32f", "cvInitIntrinsicParams2D", "icv_p8_ippiTranspose_16u_C3IR", "icv_p8_owns_cFFT_2_scale_32fc", "_ZN2cv3MatC1ERKS0_PKNS_5RangeE", "icv_p8_ippiCopyConstBorder_32f_C3R_L", "icv_w7_ownpi_WarpSimpleLinear_8u_C4R", "icv_h9_ownSS3_73_8u", "_ZNK2cv18SimpleBlobDetector6Params5writeERNS_11FileStorageE", "icv_s8_owniFilter_32f_C3R_v8u8_5", "ippicviMorphGradient_16s_C1R_L", "Java_org_opencv_core_Mat_n_1mul__JJ", "icv_h9_ownCalcBorderR3Lanczos3_32f", "icv_p8_ownpi_Rotate180_32_C3R", "icv_h9_ownscDFTinv_9_scale_32fc", "icv_w7_ownippiFilterMedianHoriz_16u_C4R_3x1", "icv_g9_owniCCDiv_32f_C1IR", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_15", "icv_w7_ippiFilterMedianVert_16u_1x5_A6", "icv_w7_ippsDFTFwd_CToC_64fc", "icv_p8_ownpi_WarpAffine_L_8u_C1", "_ZNK2cv3PCA11backProjectERKNS_11_InputArrayE", "_ZTv0_n12_N2cv9Feature2DD1Ev", "_ZNSt15__exception_ptr13exception_ptrC2EMS0_FvvE", "icv_g9_ownscDftInv_Fact3_64fc", "llwiWarpAffine", "icv_g9_ownCalcBorderR4Linear32f", "_ZN2cv16BOWKMeansTrainerD1Ev", "Java_org_opencv_features2d_MSER_setMinArea_10", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "_ZNK2cv13HOGDescriptor6detectERKNS_3MatERSt6vectorINS_6Point_IiEESaIS6_EEdNS_5Size_IiEESB_RKS8_", "icv_g9_ownpi_WarpAffine_L_Repl_64f_C4", "icv_p8_ownsMinEvery_64f", "icv_s8_ownscDftFwd_Prime_32fc", "icv_g9_ownpi_WarpAffineLinear_32f_C3R", "icv_w7_ownLaplace3x3Row_16s_C4", "icv_p8_ownNormDiff_L2_8s_C1MR_W7", "icv_w7_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK", "icv_s8_ippiResizeAntialiasingLanczosInit_L", "Java_org_opencv_features2d_Params_set_1filterByArea_10", "icv_s8_ownSS4_32f", "icv_g9_owniFilter32f_16s_C4R_g9e9_4", "icv_h9_ownpi_WarpAffine_L_Repl_64f_C1", "icv_p8_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_w7_ippsMagnitude_16s_Sfs", "icv_g9_ownCalcBorderR3Linear16u", "icv_h9_ippiCopy_16s_C1C4R", "ippicviFilterBorder_32f_C1R", "_ZN2cv10medianBlurERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_s8_ownsMul_16s_PosSfs", "icv_w7_ippiMorphOpen_8u_C1R_L", "icv_p8_ownColLanczos3_32f", "icv_s8_ippiNormDiff_L2_32f_C1MR", "icv_p8_ippiResizeAntialiasing_32f_C1R_L", "icv_g9_ippiCopy_16s_C3AC4R", "icv_h9_ippsSortRadixIndexDescend_32s", "icv_s8_ippiCopy_8u_C4C1R", "icv_s8_ippiDFTGetSize_R_32f", "icv_s8_owniFilterPrewittHorizBorder2_16s_C1R", "icv_p8_owniCopy_8u_P4C4R", "_ZN2cv17adaptiveThresholdERKNS_11_InputArrayERKNS_12_OutputArrayEdiiid", "_ZNK2cv3ocl7Context8ndevicesEv", "_ZN2cv3ocl9KernelArg8ConstantERKNS_3MatE", "icv_p8_owniResizeCubic_32f_C1R", "_ZN2cv3ogl6Buffer6createEiiiNS1_6TargetEb", "icv_s8_ownpi_WarpSimpleNearest_16u_C1R", "icv_s8_ippiSum_32f_C4R", "_ZN2cv5BRISK6createEiif", "icv_s8_ippiMirror_16u_C3IR", "icv_w7_ownpi_WarpAffineSimpleLinear_8u_C3R", "icv_s8_ippiCopyMirrorBorder_16u_C3R", "icv_p8_ownpi_WarpAffineLinear_8u_C1R", "icv_g9_ownippiFilterMedianSqr_8u_C3R", "icv_w7_ownpi_NormInfRel_16u_C1R", "icv_g9_ownscDftInv_Prime7_32fc", "icv_s8_ownResize1Linear32f", "icv_h9_ownsrDFTinv_5_32f", "icv_p8_ownsrDFTfwd_11_scale_32f", "icv_g9_ippiTranspose_16s_C1R", "icv_g9_ownpi_WarpAffine_L_Const_16s_C3", "icv_p8_ownscDFTinv_9_scale_64fc", "icv_s8_ownippsMagn_16sc16s_Sfs_ASM", "ippicviCopy_16u_C3MR", "icv_w7_ownpi_WarpAffineCubic_32f_C3R", "icv_h9_owniResizeLinear_16s_C3R", "icv_p8_ownsSub_8u_NegSfs", "icv_p8_ownCubicKernel2", "icv_h9_owniCopy_16s_C4P4R_cn", "Java_org_opencv_core_Core_fastAtan2_10", "icv_h9_ippiCopyMirrorBorder_32s_C4IR", "icv_w7_ippiNormDiff_L2_8u_C1R", "icv_p8_ownpi_WarpAffine_L_32f_AC4", "Java_org_opencv_core_Mat_n_1dims", "ippicviResizeNearest_16s_C4R_L", "icv_h9_ippiCopyReplicateBorder_32f_C3R_L", "_ZN2cv6detail21leaveBiggestComponentERSt6vectorINS0_13ImageFeaturesESaIS2_EERS1_INS0_11MatchesInfoESaIS6_EEf", "_ZNK2cv12_OutputArray15getGpuMatVecRefEv", "icv_p8_ownippiFilterMedian_16u_BC4R_3x3", "ippicviWarpAffineLinear_16u_C1R", "icv_g9_ownippiFilterxBrd_32f_C4R", "icv_s8_ippiSet_32f_C4R", "icv_p8_ownAddSquare_8u32f_C1IR_P8", "icv_s8_owniResizeSuper_8u_C3R", "icv_w7_ownpi_MinIndx_32f_C1R", "icv_g9_ownFilterColumn32f_8u_C1R_g9e9", "Java_org_opencv_ml_SVM_setType_10", "_ZN2cv8Subdiv2D11calcVoronoiEv", "icv_g9_ippiNormRel_L1_32f_C1MR", "icv_w7_ownpi_WarpAffineCubic_16s_C3R", "icv_p8_ownAFilterRow32f_16u_C4R", "icv_p8_ownpi_SimpleRotate_8u_C4R", "icv_s8_ownpi_WarpAffine_NN_Mem_8u_C3", "icv_s8_ippiIntegral_8u32s_C1R", "icv_p8_ippiCopy_32f_C1C4R", "icv_p8_ownpi_SimpleRotate_32f_C3R", "icv_p8_ownpi_WarpAffineBack", "icv_s8_ownAFilterRow32f_16s_C4R", "icv_w7_ippiCopy_16u_C1MR", "icv_s8_ippiScaleC_8s32f_C1R", "icv_p8_ownpi_WarpAffine_C_Mem_32f_C3", "icv_s8_ippiAnd_8u_C1R", "icv_h9_ownMorphologyBorderInit_1u_L", "icv_h9_owniFilter_32f_C1R_g9e9_7", "icv_h9_ownsrDftInv_Conv_64f", "icv_s8_ownpi_Min_16s_C1R", "icv_p8_ownippiFilterMin_16s_Row", "icv_p8_ownpi_WarpAffine_C_Transp_32f_C4", "icv_p8_ownNormRel_L1_32f_C1MR_W7", "_ZN2cv3dnn19experimental_dnn_v124createTensorflowImporterERKNS_6StringE", "icv_p8_ippiAddWeighted_8u32f_C1IMR", "icv_h9_owniThreshold_8u_C1R", "icv_p8_ippiCopyConstBorder_32s_C3R_L", "icv_g9_ippiSqrt_32f_C1R", "icv_s8_ownscDftInv_Fact_64fc", "icv_p8_ownCubicKernel1", "icv_w7_owniResizeSuperInit", "_ZN2cv7fisheye15stereoCalibrateERKNS_11_InputArrayES3_S3_RKNS_17_InputOutputArrayES6_S6_S6_NS_5Size_IiEERKNS_12_OutputArrayESB_iNS_12TermCriteriaE", "icv_g9_ippiFilterBorder_16s_C4R", "icv_s8_ownAFilterRow32f_8u_C1R", "icv_h9_ippiMinEigenValGetBufferSize_8u32f_C1R", "Java_org_opencv_features2d_ORB_setFirstLevel_10", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_s8_owniResizeLinear_8u_C1R", "icv_p8_ippiSum_16s_C3R", "icv_p8_ownCalcBorderR4Lanczos2_8u", "icv_p8_ownpi_Rotate90_8_C4R", "icv_g9_ippiWarpAffineGetSize", "_ZN2cv9videostab20GaussianMotionFilter9setParamsEif", "Java_org_opencv_video_KalmanFilter_get_1errorCovPost_10", "icv_g9_piFilterBoxBorder_32f_C1IR_px", "icv_p8_ippsConvert_64f32f", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_W7", "icv_g9_ownFilter32f_16s_C4R_g9e9", "ippicviThreshold_GTVal_32f_C1R", "icv_h9_owniGetRectRightBF_32f_C3R", "icv_w7_ownLaplace3x3Row_32f_C1", "_ZN10__cxxabiv119__pointer_type_infoD0Ev", "icv_s8_ownpi_Rotate90_B_64_C4R", "icv_p8_owniFilterBilateralR1_InMem_8u_C1R", "Java_org_opencv_ml_TrainData_getMissing_10", "icv_h9_ownpi_WarpAffineSimpleLinear_16s_C1R", "icv_s8_ippiSet_8u_C1MR", "Java_org_opencv_core_Core_exp_10", "Java_org_opencv_core_Core_setRNGSeed_10", "icv_g9_owns_getSizeDct_Conv_32f", "icv_h9_ippiResizeCubic_16s_C3R_L", "icv_g9_ownRow1Linear64f", "icv_w7_owniResizeCubic_32f_C1R", "icv_s8_ownpi_Rotate90_16_C3R", "icv_w7_ownsFFTGetBufSize_R_64f", "icv_g9_ippiMulPack_32f_C1R", "icv_h9_ownsrDFTfwd_3_32f", "icv_p8_ownSumSq_16u_C3CR_W7", "icv_w7_ownippiFilterMedianCross_8u_C4R_3x3", "Java_org_opencv_features2d_Params_set_1minRepeatability_10", "icv_h9_calcMinValues", "icv_g9_ippsDCTFwdInit_32f", "icv_w7_ownpi_WarpAffine_NN_Mem_16u_C1", "icv_g9_ownCalcBorderR4Lanczos2_16u", "icv_h9_owns_cFftFwd_Fact4_32fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_V8", "icv_p8_ownSS1_94_16u", "icv_h9_ownSS1_81_16s", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_W7", "icv_p8_ownLaplCol5x5_32f_C1", "icv_g9_ippiMul_16s_C1RSfs", "icv_p8_ippsDotProd_64f", "_ZN2cv14getTrackbarPosERKNS_6StringES2_", "icv_h9_ownippsMagn_64f", "icv_w7_ownippiThreshold_16s_C1", "icv_w7_ownsrDFTfwd_3_32f", "icv_g9_ownRow3Linear8u", "icv_g9_ippiCopy_16u_C1R", "icv_p8_ippiSum_8u_C3R", "icv_h9_ownSS1_43_32f", "icv_p8_ownpi_dInterVector_NN_16_C3", "icv_p8_owniFlip_16u_C4_W7", "Java_org_opencv_features2d_DescriptorMatcher_isMaskSupported_10", "icv_s8_ownippiThreshold_8u_C3", "_ZN3tbb8internal6market13arena_in_needERNS0_14intrusive_listINS0_5arenaEEERPS3_", "_ZNK2cv3Mat4diagEi", "icv_h9_ippiOr_8u_C1R", "icv_w7_ownpi_AndC_8u_C3R", "icv_g9_ownWarpSimple3Nearest8u", "icv_s8_ownSS3_31_8u", "icv_s8_ippsDFTInv_CToC_32fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_V8", "icv_g9_ownColLanczos3_16s", "icv_p8_ownAFilterRow32f_16s_C4R", "_ZN2cv8Subdiv2D7newEdgeEv", "icv_p8_ownSumSq_32f_C3CR_smallsize_W7", "_ZN2cv3dnn19experimental_dnn_v119createCaffeImporterERKNS_6StringES4_", "ippicviMul_16u_C1RSfs", "_ZN2cv5flann17KMeansIndexParamsC1EiiN7cvflann20flann_centers_init_tEf", "icv_h9_owniCrossCorrValid_8u32s_C1R", "icv_w7_ownscDftFwd_PrimeFact_64fc", "icv_s8_ippiCannyBorderGetSize", "_ZN2cv17CascadeClassifierD2Ev", "_ZNK2cv7MatExpr4diagEi", "icv_w7_ownpi_dInterVector_L_8u_C3", "cvChangeSeqBlock", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_W7", "icv_g9_ownscDftFwd_Fact3_64fc", "icv_g9_ownRow3Filter2_8u", "_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj", "icv_w7_ippiMirror_32f_C4IR", "icv_p8_ownpi_Histogram_16u_C1R", "icv_p8_owns_initTabBitRevLarge", "icv_p8_ownscDFTfwd_12_32fc", "icv_p8_ownCalcBorderR3Lanczos3_32f", "icv_h9_innerHLSToRGB_8u_C3R", "icv_w7_ippsSortRadixIndexDescend_16u", "_ZN2cv4readERKNS_8FileNodeERNS_6StringERKS3_", "icv_s8_ownpi_WarpAffineSimpleCubic_8u_C1R", "icv_s8_ownpi_NormL2_16s_C1R", "_ZN3tbb8internal17generic_scheduler7enqueueERNS_4taskEPv", "ippicviResizeLanczos_8u_C3R_L", "icv_g9_ownpi_WarpAffine_CR_32f_C3", "_ZN3tbb8internal6marketC1Ejjj", "icv_w7_ippiWarpAffineCubic_16s_C1R", "icv_h9_owns_cFFTfwd_32_32fc", "icv_g9_ownpi_SimpleRotate_16u_C4R", "icv_p8_ippiResizeLinear_32f_C1R_L", "icv_h9_owniScaleC_64f32s_C1R_acc", "iwiMirror_GetSrcRoi", "_ZNK2cv3ocl12PlatformInfo7versionEv", "Java_org_opencv_video_KalmanFilter_get_1statePost_10", "icv_g9_ownpi_WarpAffineBack", "icv_g9_ippiMirror_16u_C1IR", "_ZN2cv3ogl6Arrays14setNormalArrayERKNS_11_InputArrayE", "icv_h9_ippiResizeLinear_8u_C1R_L", "icv_g9_ippsCeilOne", "icv_h9_ippiResizeNearest_16s_C4R_L", "icv_p8_ippiSwapChannels_8u_C4C3R", "icv_g9_ippiNorm_Inf_16u_C1MR", "ippicviConvert_8u16s_C1R", "icv_h9_ownSS1_65_8u", "icv_g9_ippsAtan2One", "icv_s8_ippiCopyReplicateBorder_32f_C3R_L", "icv_p8_ippiErode_32f_C1R_L", "icv_h9_ippiCopyConstBorder_16u_C3R", "icv_h9_ippiNormDiff_Inf_16u_C1MR", "icv_g9_myHSVToRGB_8u_C3R", "icv_w7_ownpi_dInterVector_NN_8_P4", "ippicviWarpAffineCubic_8u_C4R", "_ZN2cv10drawMarkerERNS_3MatENS_6Point_IiEERKNS_7Scalar_IdEEiiii", "icv_p8_ippiConvert_16u32s_C1R", "icv_n0_own_ipps_sSinCos_S9HAynn", "icv_p8_ippiCopyReplicateBorder_16u_C1R", "icv_w7_ownscrDftFwd_Prime2_32f", "icv_s8_ownpis_Max_16s_C4", "icv_w7_ownpi_WarpAffine_CR_16u_C3", "icv_g9_ownsMul_8u_Bound", "ippicviNormRel_Inf_16s_C1R", "icv_w7_ownsConvert_32s16s_SfsNeg_W7", "_ZNK2cv16TLSDataContainer7getDataEv", "Java_org_opencv_imgproc_Subdiv2D_findNearest_10", "icv_s8_ippiDFTInit_C_32fc", "icv_g9_ippiResizeAntialiasing_8u_C4R_L", "icv_w7_ownscDftInv_Prime5_64fc", "icv_p8_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_h9_ippiConvert_32s8s_C1R", "ippicviScaleC_32f8u_C1R", "icv_g9_ippiResizeCubic_32f_C1R_L", "icv_p8_cv_ownippiFilterMin_16u_Col", "icv_p8_ownCalcBorderR4Lanczos3_16s", "icv_g9_ownpi_Rotate90_32_C3R", "icv_h9_ownFilterBoxBorder_8u_C4IR", "Java_org_opencv_features2d_FlannBasedMatcher_delete", "icv_p8_ownpi_WarpAffine_L_Repl_16u_C4", "icv_w7_ownpi_SimpleRotate_64f_C4R", "icv_s8_ippiResizeNearest_16u_C4R_L", "icv_w7_ownippiThreshold_GLV_32f_C3", "Java_org_opencv_features2d_AKAZE_getDescriptorSize_10", "icv_s8_ippiSet_16s_C3R", "icv_p8_ownsrDFTinv_3_scale_64f", "icv_p8_ownippiFilterMedianVert_16s_C4R", "icv_g9_ippiNormRel_Inf_16u_C1R", "icv_h9_owniFilterBilateralCom_InMem_32f_C1R", "icv_h9_ippiSet_8u_C3MR", "icv_s8_ippiNorm_L2_32f_C3CMR", "ippicviCopy_32f_C3MR", "cvCornerHarris", "icv_g9_owniFilterScharrVertMaskBorder2_16s_C1R", "icv_n0_own_ipps_dExp_W7HAynn", "icv_h9_ownFilterBoxBorder_8u_C4R", "icv_h9_owniSwapChannels_32u_C4C3R", "icv_p8_ippiScaleC_16s64f_C1R", "icv_g9_ownSS4_73_16s", "icv_w7_ownpi_WarpSimpleCubic_16u_C3R", "icv_s8_ownpi_MinMax_32f_C1R", "_ZN3tbb8internal5arena14is_out_of_workEv", "_ZdlPvRKSt9nothrow_t", "icv_w7_owns_getSizeDct_Fft_32f", "icv_s8_ippiSwapChannels_16u_C4R", "icv_w7_ownpi_AndC_16u_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_W7", "icv_p8_ippiResizeLinear_8u_C1R_L", "icv_p8_ownpi_WarpAffine_NN_Repl_16s_C4", "icv_w7_piGradientScharr32f_c1", "_ZTv0_n24_N2cv9Feature2D4readERKNS_8FileNodeE", "icv_h9_ippiTranspose_16u_C3R", "_ZNK2cv11_InputArray9getGpuMatEv", "icv_p8_ownBFilterColumn_8u_C1R", "cvWriteInt", "Java_org_opencv_imgproc_Imgproc_intersectConvexConvex_11", "_ZN2cv10BOWTrainerD1Ev", "icv_s8_ownpi_Rotate90_32_C4R", "icv_p8_owniResizeNearest_16u_C1R", "icv_h9_owniFilterBilateralR2_InMem_32f_C1R_L", "icv_p8_ownpi_WarpAffine_L_Repl_8u_C1", "icv_p8_ownResize4Lanczos3_8u", "icv_w7_ownsSub_8u", "icv_p8_ownsSub_16s_1Sfs", "cvNot", "WebPPictureImportRGBX", "_ZN2cv3ocl6DeviceC1EPv", "icv_p8_ippiCopy_16s_C4MR", "icv_h9_ownscDftInv_Fact3_64fc", "_ZN2cv8Stitcher6stitchERKNS_11_InputArrayERKSt6vectorIS4_INS_5Rect_IiEESaIS6_EESaIS8_EERKNS_12_OutputArrayE", "icv_p8_ippiResizeLanczos_16u_C4R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_W7", "icv_p8_ownSS1_65_16s", "icv_h9_ownpi_WarpSimpleNearest_16s_C1R", "icv_p8_owniSet_16s_C3_W7", "icv_h9_ownscDFTfwd_13_64fc", "icv_p8_ownpi_WarpAffine_L_16u_C4", "icv_s8_ownpi_dInterVector_NN_16_C1", "icv_w7_ownpi_MinMax_8u_AC4R", "icv_p8_piGradientSobel8u_c1", "cvInitMatNDHeader", "_ZN2cv8superres11FrameSourceD2Ev", "icv_n0_own_ipps_dSin_V8EPnnn", "icv_h9_ownscDftInv_Prime13_64fc", "icv_w7_ippiTranspose_32s_C4R", "icv_w7_ownsConvert_16s64f_W7", "icv_p8_ownsrDFTfwd_5_scale_32f", "icv_p8_ownippiFilterMedianCross_8u_C1R_5x5", "_ZNK2cv3ocl6Device11maxSamplersEv", "Java_org_opencv_photo_CalibrateDebevec_setLambda_10", "icv_s8_ippiFilterBoxBorder_16s_C1R", "icv_g9_ownSS4vertical_8u", "icv_p8_ownscDFTinv_6_scale_32fc", "icv_h9_ownscDftInv_Fact4_32fc", "icv_w7_owniConvert_32f8s_W7", "icv_p8_ownCopySubpix_16u32f_C1R_new_W7", "icv_h9_ownsrDFTinv_15_scale_32f", "icv_s8_ownippiFilterMedian_16s_BC4R_5x5", "Java_org_opencv_imgproc_Imgproc_HoughCircles_10", "icv_h9_ownsAdd_16s_PosSfs", "icv_p8_ownippiFilterMedianSqr_16u_C4R", "_ZN2cv17CascadeClassifierC2Ev", "_ZN2cv2ml3SVM6createEv", "_ZN2cv3ogl6BufferC1ERKNS_11_InputArrayENS1_6TargetEb", "ippicvsSortRadixIndexGetBufferSize", "icv_g9_owniFilter32f_16u_C1R_g9e9_0", "icv_s8_ippiCopyReplicateBorder_16s_C3R", "icv_p8_owns_cFFTinv_32_64fc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_W7", "Java_org_opencv_ml_TrainData_getVarType_10", "Java_org_opencv_features2d_FeatureDetector_detect_10", "icv_s8_ownBFilterColumn_8u_C1R", "icv_h9_ownCalcBorderR3Linear32f", "_ZN2cv4cuda20unregisterPageLockedERNS_3MatE", "icv_p8_ippiAdd_16u32f_C1IMR", "icv_w7_owniCopy32s_C3P3_W7_NT", "icv_s8_ownpi_WarpSimpleNearest_32f_C1R", "icv_w7_owniResizeLinear_8u_C3R", "icv_p8_ownRow1Filter14_16u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_W7", "icv_p8_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_w7_ownHipass5x5Frs_32f", "WebPFreeDecBuffer", "icv_w7_ippiMaxIndx_8u_C1R", "icv_p8_owns_cFftFwd_Large_32fc", "icv_h9_ownpi_WarpAffine_L_Repl_8u_C3", "icv_p8_CV_BORDER_CHECK_PARSE_FLAGS_NEW", "icv_g9_ownpi_WarpAffineLinear_8u_C4R", "icv_s8_ownsrDftInvRecombine_64f", "icv_h9_owniFlipCopy_32s_C1", "ippicviScaleC_8s32s_C1R", "icv_p8_owniScaleC_16u8s_C1R_fst", "icv_h9_ippiScaleC_32f64f_C1R", "icv_p8_owns_cFFTfwd_32_32fc", "Java_org_opencv_photo_Photo_createMergeDebevec_10", "icv_s8_ownNorm_L2_8u_C3CMR_V8", "icv_w7_ippiSum_16u_C3R", "icv_g9_ippiSwapChannels_16u_C4R", "_ZN2cv6circleERKNS_17_InputOutputArrayENS_6Point_IiEEiRKNS_7Scalar_IdEEiii", "icv_s8_ownCopySubpixIntersect_16u32f_C1R_W7", "icv_g9_ownpi_NormL2Rel_8u_C1R", "icv_n0_own_ipps_sAtan2_S9HAynn", "icv_g9_ippiSet_32f_C1MR", "icv_w7_owns_rFFTinv_4_64f", "icv_w7_ownippiFilterMedianHoriz_8u_C3R_3x1", "ippicviResizeLinear_16s_C3R_L", "icv_p8_ownpi_Rotate90_64_C1R", "icv_p8_owniTransposeWxH_8uC1", "icv_p8_ippiCopyConstBorder_16u_C4R", "icv_w7_ownpi_WarpAffineSimpleCubic_32f_C1R", "icv_g9_ownpi_WarpAffine_C_Transp_8u_C1", "Java_org_opencv_imgproc_CLAHE_getClipLimit_10", "icv_s8_ippiNorm_Inf_16u_C1MR", "icv_p8_ownpi_WarpAffine_L_Repl_32f_C3", "icv_h9_owniResizeSuper_8u_C3R", "icv_p8_ownpi_WarpAffine_NN_16_C3", "icv_g9_ippiFilterBilateralBorder_8u_C3R_L", "_ZN2cv3hal11normHammingEPKhS2_i", "icv_g9_ownsGetSizeTabDftInvRec_64f", "icv_p8_ownpi_dInterVectorClip_L_8u_P4", "icv_h9_ippiCopy_16s_C1MR", "icv_s8_ownpi_Rotate180_16_C4R", "icv_w7_ippiWarpAffineCubic_64f_C1R", "icv_p8_ippiNorm_L1_32f_C3CMR", "icv_s8_ownResize3Cubic16u", "icv_w7_ippiTranspose_16s_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_W7", "icv_s8_owniResizeLanczos_8u_C1R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_X_AVX", "icv_ipp_tst_daz_ssx", "Java_org_opencv_ml_SVM_setNu_10", "ippicviMorphTophat_8u_C1R_L", "icv_g9_ippiCopyConstBorder_8u_C4R", "icv_g9_ownpi_WarpAffineNearest_16u_C3R", "icv_p8_owniFilter_32f_C3R_v8u8_2", "icv_h9_owns_cFftFwd_Large_32fc", "icv_p8_ippiSub_16s_C1RSfs", "icv_p8_ippiScaleC_32s_C1IR", "_ZN2cv8KeyPoint7overlapERKS0_S2_", "icv_p8_owniSqrDistanceNorm_FullSame_32f_C1R", "_ZNK2cv3ocl6Device17compilerAvailableEv", "icv_g9_ippiAdd_8u32f_C1IR", "icv_w7_ownippiFilterMedianCross_16s_C4R_3x3", "Java_org_opencv_core_Mat_n_1type", "icv_w7_ownpi_dInterVector_L_16u_C3", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale2_11", "icv_w7_ownscrDftInv_Fact3_64f", "icv_s8_ownippiFilterxBrd32f_16s_C1R", "icv_s8_ippiCopyMirrorBorder_32s_C1R_L", "icv_h9_ownpi_Rotate90_16_C4R", "Java_org_opencv_core_TickMeter_reset_10", "icv_h9_ippiDilate_8u_C3R_L", "icv_g9_ippiCopy_16s_C4R", "icv_p8_owns_initTabTwd_Large_64f", "icv_g9_ippsMaxEvery_16u", "ippicviMin_8u_C1R", "icv_w7_ownsInitDftConv_32f", "icv_s8_ownippiFilterMin_16s_Col", "icv_p8_ippiTranspose_16s_C3IR", "icv_p8_ownCalcBorderR4Linear32f", "Java_org_opencv_dnn_Dnn_readNetFromTorch_10", "icv_p8_ownippiThreshold_V_8u_C3", "icv_s8_ownpi_WarpAffine_NN_Repl_16s_C4", "icv_s8_owniCopyBF_32f_C1R", "icv_h9_piFilterBoxBorder_32f_C1R_v8u8_NA", "icv_g9_ippiCopy_8u_C3R_L", "icv_h9_ownsrDFTinv_13_scale_64f", "cvGrabFrame", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_W7", "ippicviAdd_32f_C1IR", "icv_s8_ownSS3_73_16s", "icv_w7_ownpi_WarpSimpleLinear_16s_C3R", "icv_h9_ippiScaleC_8u16u_C1R", "icv_g9_owniScaleC_16s8s_C1R_acc", "icv_p8_ippiConvert_16s32s_C1R", "icv_w7_ownRectStdDev_32f_C1R_W7", "icv_p8_ownpi_MinMax_32f_AC4R", "ippicviCompare_8u_C1R", "icv_h9_ownSS3_32_32f", "icv_h9_ownsInitTabDftBase_64f", "icv_s8_ippiFilterSobelVertSecondBorder_32f_C1R", "icv_w7_ownpi_WarpAffine_CR_32f_C1", "icv_p8_ownippiFilterMedianCross_16s_C4R_5x5", "Java_org_opencv_features2d_Features2d_drawMatchesKnn_10", "icv_s8_ownpi_NormL1Rel_8u_C1R", "_ZN2cv3LDA7computeERKNS_11_InputArrayES3_", "Java_org_opencv_photo_Photo_createTonemap_10", "icv_w7_ownLaplRow5x5_32f_C3", "icv_n0_own_ipps_dLn_W7EPnnn", "icv_g9_ownWarpSimple4Nearest16s", "icv_g9_owns_cRadix4InvNorm_64fc", "_ZNK2cv7MatExpr3dotERKNS_3MatE", "icv_w7_ownpi_WarpAffine_C_Const_16u_C1", "icv_p8_ownpi_Max_16s_C1R", "icv_p8_cv_ownippiFilterMin_16u_Msk", "_ZN2cv2ml6KDTree5buildERKNS_11_InputArrayEb", "icv_w7_ownpi_dInterVectorClip_NN_8_C3", "icv_g9_ownsrDFTinv_14_scale_64f", "icv_g9_ownsrDFTfwd_15_32f", "icv_h9_Moments32fC1R_64f_FAST", "icv_p8_ippiNorm_Inf_8u_C3CMR", "icv_h9_ownColLanczos3_16s", "cvRodrigues2", "icv_p8_ownNorm_L1_16u_C1MR_W7", "icv_h9_ownpi_NormL1Diff_8u_C1R", "ippicviMean_8u_C3CMR", "icv_s8_ippiCopy_32f_C4R", "_ZNK2cv4cuda7HostMem18createGpuMatHeaderEv", "icv_h9_ownscDftFwd_Fact4_64fc", "icv_p8_ownpi_WarpAffine_C_Const_64f_C1", "icv_h9_ippsSortRadixDescend_8u_I", "icv_h9_owniFilter_32f_C4R_g9e9_6", "Java_org_opencv_features2d_KAZE_setNOctaves_10", "icv_g9_ippiDotProd_16s64f_C1R", "icv_h9_ownsrDFTfwd_14_32f", "icv_s8_ippsCosOne", "icv_h9_ippiScaleC_32f16u_C1R", "icv_h9_ippiDCTInvInit_32f", "icv_h9_owniScaleC_32s16s_C1R_acc", "icv_p8_ownSumSq_8s_C1R_P8", "cvReprojectImageTo3D", "icv_g9_owniFilter_32f_C3R_g9e9_5", "icv_w7_ownpi_dInterPoint_CR_PixelB_32f", "icv_w7_ippiWarpAffineCubicInit", "icv_s8_ownpi_WarpAffine_L_8u_AC4", "icv_p8_ippiMoments64f_16u_C1R", "icv_p8_ownpi_WarpAffineNearest_8u_C3R", "ippicviResizeAntialiasing_16u_C3R_L", "icv_w7_ippiScaleC_8s16u_C1R", "icv_h9_ippiConvert_8s16s_C1R", "icv_p8_ownpi_NormL2Diff_16s_C1R", "icv_g9_ippiNorm_L1_16u_C1MR", "icv_g9_ippsSortRadixDescend_8u_I", "icv_h9_ippiMinIndx_8u_C1R", "icv_h9_ownpi_WarpAffine_C_Const_16u_C3", "icv_h9_ownippsMagn_16s_Sfs", "_ZN2cv4globENS_6StringERSt6vectorIS0_SaIS0_EEb", "icv_s8_ownResize4Nearest16u", "icv_g9_owns_getSizesTwd_Large_32f", "icv_h9_ownscDFTfwd_15_64fc", "icv_s8_ownpi_WarpAffineSimpleCubic_32f_C4R", "icv_s8_ownResize3Lanczos3_8u", "icv_h9_ippiResizeAntialiasing_16u_C4R_L", "icv_s8_ownscDftFwd_Fact3_32fc", "icv_h9_ippiSet_32f_C1R", "icv_p8_owniCrossCorrNormGetSize", "icv_p8_ownHipass5x5Frs_8u", "icv_g9_owniFlip_8u_C3", "icv_w7_ownAFilterRow_8u_C3R", "icv_w7_owniConvert_32f16u_W7", "_ZN2cv16FileNodeIterator7readRawERKNS_6StringEPhj", "_ZN2cv20AgastFeatureDetector6createEibi", "icv_s8_owniCopy16s_AC4_W7", "icv_h9_ippiNormDiff_L2_8u_C1R", "ippicviTrueDistanceTransformGetBufferSize_8u32f_C1R", "icv_h9_ownpi_WarpAffine_NN_Const_16u_C3", "icv_g9_ippiConvert_32s16u_C1RSfs", "icv_s8_ownpi_WarpAffineSimpleCubic_16s_C3R", "icv_w7_ippiScaleC_8u32s_C1R", "_ZN2cvngERKNS_7MatExprE", "icv_h9_ippiMirror_16s_C4IR", "Java_org_opencv_calib3d_Calib3d_estimateAffine2D_11", "icv_s8_ownpi_SmoothBorderNew", "icv_p8_ippiConvert_8s16s_C1R", "icv_w7_ownpi_WarpAffine_NN_Const_32f_C1", "icv_s8_ippiScaleC_8s64f_C1R", "icv_w7_ippiWarpAffineNearest_8u_C3R", "icv_s8_ippiMinMaxIndx_8u_C1MR", "icv_w7_owniCopy_32f_C1M_W7", "icv_s8_ippiNorm_Inf_16u_C3CMR", "_ZN2cv17FlannBasedMatcher15radiusMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "cvCreatePOSITObject", "icv_g9_owniResizeGetBufferSize", "icv_w7_owns_getSizeTwd_Large_64f", "icv_p8_owniFilter_32f_C4R_v8u8_8", "_ZN2cv4sortERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_h9_ippiWarpAffineCubic_16s_C4R", "_ZN2cv3ocl7Program6createERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_g9_piGradientSobel8u_5x5_row_c1", "icv_w7_ownpi_WarpAffine", "icv_w7_ownApplyHaarClassifierAllImg8PixSparceMask_dw_W7", "_ZN2cv3hal6add32sEPKijS2_jPijiiPv", "icv_s8_ownpi_WarpAffine_L_Const_16u_C4", "icv_g9_owniScaleC_32f16u_C1R_fst", "_ZN2cv4cuda27fastNlMeansDenoisingColoredERKNS_11_InputArrayERKNS_12_OutputArrayEffiiRNS0_6StreamE", "icv_p8_owniResizeSuper_8u_C4R", "icv_w7_ownippiFilterMedianSqr_16s_C3R", "icv_w7_ownpi_dInterVectorClip_NN_32_P3", "icv_s8_ippiConvert_32s32f_C1R", "icv_h9_owniScaleC_8s8u_C1R_fst", "_ZN2cv2ml5Boost6createEv", "icv_p8_ownpi_dInterVector_NN_32_P3", "icv_p8_ownippiFilterMedian_16s_C1R_3x3", "icv_p8_ownpi_WarpAffine_C_Const_16s_C4", "icv_g9_owniResizeCubic_32f_C4R", "icv_s8_owniFlip_32s_C1", "icv_h9_owns_cFFTfwd_16_scale_32fc", "icv_s8_ownSS1_54_8u", "ippicviScaleC_32s8u_C1R", "icv_p8_ippiMirror_32f_C1R", "icv_s8_ownpi_WarpAffineSimpleNearest_8u_C3R", "icv_w7_ippiWarpAffineLinear_64f_C1R", "icv_s8_ippiSet_16s_C1MR", "icv_g9_owniScaleC_32s32f_C1R_acc", "icv_s8_ippiMaxIndx_16u_C1R", "icv_w7_ippiCopy_8u_C3R", "icv_w7_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_w7_ownscDft_Dir_32fc", "icv_g9_ownCalcBorderR3Lanczos2_16s", "icv_h9_ownpi_SmoothBorderNew", "icv_p8_owniScaleC_16u16u_C1R_acc", "icv_p8_ippiSet_8u_C4MR", "icv_g9_ippiCannyBorderGetSize", "icv_w7_ippiSwapChannels_16u_C4R", "icv_s8_ownscDftInv_Fact7_64fc", "icv_h9_ownippiFilterMedianHoriz_16u_C3R", "_ZN2cv3ipp19getIppErrorLocationEv", "_ZN2cv2ml6KDTreeC2Ev", "icv_w7_owns_crFft_BlkSplit_64f", "_ZNK2cv3ogl6Buffer4bindENS1_6TargetE", "icv_g9_ownBuildWarpFilter_32f_Q14", "icv_g9_ippsConvert_32f32s_Sfs", "WebPDecodeYUVInto", "_ZN2cv3ocl6KernelD2Ev", "icv_s8_ownSS4_31_32f", "icv_g9_ippiCopy_16u_C3P3R", "icv_h9_ownsSet_32s", "icv_s8_owniCopy16sC4Mas", "icv_p8_ippiWarpAffineGetSize", "icv_s8_ownsrDFTfwd_11_64f", "icv_w7_ippiNormDiff_Inf_32f_C1MR", "icv_s8_ownscDFTfwd_14_64fc", "icv_g9_ownpi_Rotate90_B_8_C3R", "icv_s8_ippiThreshold_LTVal_16s_C1IR", "icv_g9_ownSS4_32_8u", "icv_h9_ippiResizeCubic_16u_C1R_L", "icv_h9_ownFilterBoxBorderInMem3x3_8u_C1R", "icv_p8_ownsMul_16s_1Sfs", "icv_h9_ownSS3_98_32f", "icv_p8_ownRow1Antialiasing_16s", "icv_p8_ownippiFilterMedianVert_8u_C4R", "icv_w7_ownApplyHaarClassifierAllImg8Pix_W7", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKNS_9SparseMatE", "icv_h9_ownColFilter2_8u", "icv_p8_ownsrDFTinv_6_32f", "icv_s8_ippiCopy_32s_C3MR", "icv_h9_ippsSortRadixDescend_64f_I", "icv_s8_ownRow3Lanczos3_16s", "icv_g9_ownscDftInv_Prime4_32fc", "icv_s8_ownResize1Linear8u", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_V8", "icv_g9_ippsFFTInit_R_32f", "icv_p8_owniFilterBilateralCom_InMem_8u_C1R_px", "icv_w7_ownRow1Lanczos3_32f", "ippicviMirror_32s_C3IR", "icv_g9_ownResize4Nearest32f", "_ZN2cv6detail15SphericalWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "icv_w7_owns_rFFTfwd_16_64f", "icv_g9_owniScaleC_16u8s_C1R_fst", "icv_p8_ownpi_Min_16s_C3R", "icv_g9_owniResizeLanczosInit", "icv_h9_ownpi_WarpAffine_CR_16u_C3", "icv_h9_ippiThreshold_GTVal_32f_C1R", "_ZNK2cv3ogl6Buffer6copyToERKNS_12_OutputArrayE", "icv_p8_ownsrDftInvRecombine_32f", "icv_w7_ownippsMagn_64f", "icv_s8_ownSq_32f_C1MR_W7", "icv_ipp_has_rdtsc", "_ZN2cv3ocl13ProgramSourceC1ERKNS_6StringES4_S4_S4_", "icv_w7_ippiResizeLinearInit_L", "icv_s8_ownSS4_a7_8u", "icv_g9_ippiResizeCubic_16s_C3R_L", "icv_w7_owniCopyConstBorder_C3R_W7", "cvSeqRemoveSlice", "icv_s8_owniConvert_32f16u_W7", "icv_s8_ownippiFilterMedianHoriz_16s_C4R_5x1", "icv_g9_ownippiFilterMedian_16s_C1R_7x1", "icv_p8_ownsGetSizeTabDftFwdRec_32f", "icv_w7_ippiCopyReplicateBorder_16s_C4R", "_Z17Mat_to_vector_intRN2cv3MatERSt6vectorIiSaIiEE", "icv_p8_ownResize1Antialiasing_32f", "icv_w7_ownWarpSimple4Nearest16s", "icv_s8_owniFilter_32f_C1R_v8u8_2NA", "icv_w7_ippiComputeThreshold_Otsu_8u_C1R", "Java_org_opencv_ml_SVMSGD_getTermCriteria_10", "icv_p8_ownscDftInv_PrimeFact_32fc", "_ZN2cv3ocl6Device3setEPv", "icv_w7_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_g9_ownsAdd_16s_Bound", "icv_s8_owns_BitRev1_Z", "_ZN2cv3ocl5QueueC2Ev", "Java_org_opencv_video_Video_findTransformECC_11", "icv_p8_ownscDftInv_Fact5_32fc", "icv_g9_owniFilterSobelHorizSecondBorder2_32f_C1R", "icv_s8_ownpi_WarpSimpleCubic_32f_C4R", "_ZN2cv9videostab18FastMarchingMethod8heapDownEi", "icv_s8_innerSwapChannels_8u_C4R", "icv_p8_owniSwapChannels_16u_C3R", "icv_w7_ippiMulC_32f_C1R", "cvReleaseData", "icv_h9_ippiFilterBorder_8u_C1R", "icv_s8_ownsConvert_32s16s_SfsPos_W7", "icv_p8_ippiCopyReplicateBorder_8u_C3R_L", "icv_p8_ippiScaleC_64f_C1IR", "icv_p8_ownpis_Sum_16u_C1", "ippicvsMinEvery_32f", "icv_h9_ownpi_Rotate90_32_C3R", "icv_p8_owniResizeCubic_32f_C4R", "cvReleaseSparseMat", "icv_h9_ippiFilterBoxBorder_16s_C3R", "icv_p8_ownpi_WarpAffine_NN_Mem_8u_C3", "icv_w7_ippiResizeLanczos_32f_C3R_L", "icv_g9_ownSS1_31_16s", "icv_s8_ownippsCnvrt_8u32f", "icv_w7_owniResizeGetSize", "icv_g9_owniSet_32s_C4MR", "icv_p8_owns_cFFTinv_4_32fc", "_ZN2cv5errorEiRKNS_6StringEPKcS4_i", "icv_h9_ippiMorphOpen_8u_C1R_L", "icv_h9_owns_cFft_BlkMerge_32fc", "icv_s8_ownscDFTinv_9_32fc", "icv_g9_ippiScaleC_8s_C1IR", "icv_g9_ownscDFTfwd_10_64fc", "icv_ipp_status87", "icv_g9_ippiCopy_16u_C3MR", "icv_h9_owniFilterMedianBorderInMem_32f_C1R", "_ZN2cv19getRotationMatrix2DENS_6Point_IfEEdd", "Java_org_opencv_imgproc_Imgproc_Canny_11", "_ZN2cv11FileStorage12writeCommentERKNS_6StringEb", "_ZNK2cv4cuda10DeviceInfo14totalGlobalMemEv", "icv_h9_ownsMul_16u_Bound", "icv_h9_owniFlip_32s_C3", "icv_h9_ippiAdd_16u32f_C1IMR", "icv_p8_ownpi_Max_8u_C1R", "icv_w7_ownippiThreshold_GLV_16s_C1", "icv_g9_ownResize4Cubic16s", "icv_s8_ownscDFTfwd_13_scale_32fc", "_ZN2cv3ipp12setIppStatusEiPKcS2_i", "icv_p8_ownSS4_32_8u", "icv_g9_ownSS4_72_8u", "icv_w7_ippiResizeLanczos_32f_C1R_L", "icv_h9_owniCopyMirrorBorder_8u_C4R", "icv_g9_ippiSqrDistanceNorm_32f_C1R", "icv_g9_gres_NormL2Rel_16s_C1R", "icv_s8_ownpi_WarpAffine_L_Repl_32f_C4", "icv_s8_ownLaplRow5x5_16s_C1", "icv_h9_owniExchange_8u", "_ZN2cv6imreadERKNS_6StringEi", "_ZN2cv3ocl14memopTypeToStrEi", "icv_p8_ippiMirror_32f_C3R", "icv_h9_ippiThreshold_Val_32f_C1R", "icv_p8_ownpi_Histogram_BS_32f_C4R", "icv_s8_ippiCopySubpixIntersect_8u_C1R", "icv_p8_ownsMul_16s_NegSfs", "icv_g9_ownCalcBorderR3Antialiasing_8u", "_ZN2cv25fastNlMeansDenoisingMultiERKNS_11_InputArrayERKNS_12_OutputArrayEiiRKSt6vectorIfSaIfEEiii", "icv_p8_ippiTranspose_16s_C1R", "Java_org_opencv_ml_TrainData_getTestSampleWeights_10", "ippicviFilterLaplacianGetBufferSize_32f_C1R", "WebPDecodeARGB", "icv_s8_ippiAbsDiff_32f_C1R", "icv_s8_owniCopy8u_AC4_W7", "ippicviResizeLanczos_16u_C4R_L", "icv_g9_ownsrDFTinv_10_32f", "icv_s8_ownResize4Antialiasing_8u", "icv_w7_ippiTranspose_8u_C1R", "_ZN2cv6detail26BestOf2NearestRangeMatcherC1Eibfii", "_ZN2cv6detail17stitchingLogLevelEv", "icv_p8_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "ippicviMorphClose_16u_C1R_L", "icv_s8_ownCalcBorderR1Antialiasing_8u", "icv_p8_ownAFilterRow_16s_C3R", "_ZN9CvLevMarqC1Ev", "icv_g9_owniCrossCorrValid_NormLevel_8u32f_C1R", "icv_p8_ownFilterRowBorderPipeline_16s_C1R_5x5_V8", "_ZN2cv12KalmanFilter4initEiiii", "icv_h9_ippiConvert_16u16s_C1RSfs", "icv_w7_ownsrDFTinv_7_32f", "icv_s8_ippiConvert_32f8s_C1R", "icv_h9_owniSet_16s_C4R", "icv_g9_owniFlip_8u_C1", "icv_s8_ownSS3_53_32f", "_ZN2cv12VideoCaptureD0Ev", "icv_p8_owniConvert_32s16u_C1RSfs", "icv_w7_ownSharpenRow_8u_AC4", "icv_p8_ownSS4_31_16s", "icv_g9_ippiMorphClose_32f_C4R_L", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Wrap_V8", "icv_s8_cv_ownippiFilterMax_16u_Col", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "icv_p8_owniScaleC_16u32s_C1R_acc", "_ZN2cv8logPolarERKNS_11_InputArrayERKNS_12_OutputArrayENS_6Point_IfEEdi", "icv_h9_ownippiFilterxBrd32f_16s_C1R", "icv_h9_ippiAdd_16u32f_C1IR", "icv_h9_ippiHLSToRGB_8u_C3R", "icv_w7_owniSwap_8u_C3I_A6", "icv_w7_ownSharpenRow_16s_C1", "icv_p8_owniFilterBilateralCom_InMem_32f_C3R_L", "icv_s8_ownpi_WarpAffine_NN_32_C4", "Java_org_opencv_photo_AlignMTB_getCut_10", "icv_s8_ippiOr_8u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_V8", "icv_g9_ippiNormDiff_Inf_32f_C1R", "icv_p8_ownpi_SmoothPel", "icv_p8_piFilterBoxBorder_32f_C1R_v8u8_A", "icv_p8_ownsPowOne_w7", "cvHaarDetectObjects", "icv_s8_ownAFilterRow32f_8u_C4R", "icv_p8_ownpi_Sum_8u_C3R", "icv_h9_ownsrDFTinv_13_scale_32f", "_Z21vector_Point3f_to_MatRSt6vectorIN2cv7Point3_IfEESaIS2_EERNS0_3MatE", "icv_w7_ippiCountInRange_8u_C1R", "Java_org_opencv_features2d_AgastFeatureDetector_create_11", "_ZN2cv25BOWImgDescriptorExtractorD0Ev", "icv_s8_ownippiThreshold_V_32f_C3", "icv_p8_ownNormDiff_Inf_16u_C1MR_P8Y8", "icv_p8_ownSS3_98_16s", "icv_s8_ippiResizeLanczos_16s_C1R_L", "icv_h9_ippiResizeAntialiasing_32f_C3R_L", "icv_p8_owniSwap_32s_C3C4R", "iwiCopyMerge", "ippicviTranspose_32f_C3IR", "_ZN3tbb16spin_rw_mutex_v323internal_acquire_readerEv", "icv_w7_ippiFilterMedianHoriz_16u_C3R_3x1_A6", "icv_g9_ownCalcBorderR4Lanczos3_8u", "icv_g9_ippsMul_32fc", "Java_org_opencv_imgcodecs_Imgcodecs_imreadmulti_11", "icv_w7_owniGetRectLeftBF_8u_C3R", "icv_w7_ownippiFilterMedian_16s_C1R_5x5", "icv_w7_ownsAdd_8u", "icv_s8_ownscDftInv_Fact3_64fc", "icv_h9_ippsMulC_32f_I", "icv_g9_ownpi_WarpAffineSimpleLinear_32f_C4R", "icv_p8_ownpi_WarpAffineCubic_8u_C4R", "icv_w7_ownResize1Cubic8u", "icv_h9_owniScaleC_32s32f_C1R_acc", "Java_org_opencv_features2d_Feature2D_descriptorSize_10", "icv_s8_owniFilterBilateralCom_InMem_8u_C1R_px", "icv_p8_ippiMean_StdDev_16u_C1MR", "icv_w7_ownpi_WarpAffineSimpleLinear_16s_C1R", "icv_h9_ownSS1_21_16s", "icv_p8_owniScaleC_8u64f_C1R_fst", "icv_p8_ippiMean_16u_C3R", "ippicvsSortRadixIndexAscend_32f", "_ZSt14__convert_to_vIeEvPKcRT_RSt12_Ios_IostateRKPi", "Java_org_opencv_calib3d_Calib3d_matMulDeriv_10", "icv_p8_ownNorm_Inf_16u_C1MR_P8Y8", "icv_h9_ownSS3_21_16u", "icv_s8_ownsrDftInv_Conv_32f", "icv_p8_owniFilterBilateralR2_InMem_8u_C1R_px", "icv_p8_ippiFilterBoxBorder_16u_C1R", "icv_h9_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_p8_owniFilter_32f_C1R_v8u8_7NA", "icv_h9_owniFilter32f_16u_C4R_g9e9_1", "icv_s8_ownDistanceTransform_5x5_8u_C1R_Big_F_W7", "icv_w7_ippiResizeCubic_16u_C4R_L", "icv_s8_ippiMean_StdDev_32f_C1MR", "icv_g9_ippsSinCos_32f_A21", "icv_g9_ippiCopy_16u_C4MR", "ippicviResizeSuper_8u_C3R_L", "icv_g9_ippiSwapChannels_32s_C4R", "icv_h9_ippiWarpAffineLinear_8u_C3R", "ippicviAddProduct_16u32f_C1IR", "Java_org_opencv_core_Core_eigen_10", "icv_p8_ippiResizeLinear_16s_C3R_L", "ippicviNormRel_L2_16u_C1R", "icv_h9_ownpi_Rotate90_B_64_C4R", "icv_p8_ownSS3_65_8u", "icv_g9_ownscDftInv_Prime13_64fc", "icv_w7_ippiFilterBoxBorder_16s_C3R", "_ZN2cv6detail20focalsFromHomographyERKNS_3MatERdS4_RbS5_", "icv_g9_ownpiDotProd_16s64f_C1R", "_ZN2cv11VideoWriter5writeERKNS_3MatE", "ippicviFilterBoxBorder_16u_C3R", "Java_org_opencv_features2d_KAZE_delete", "_ZN3tbb8internal17generic_scheduler24free_nonlocal_small_taskERNS_4taskE", "icv_p8_ownscDFTfwd_9_scale_64fc", "icv_g9_ownscDFTinv_14_64fc", "icv_p8_ippiMulPack_32f_C1IR", "cvClearND", "ippicviSet_32f_C3MR", "icv_w7_ownpi_WarpSimpleLinear_16s_C1R", "_ZN2cv37createThinPlateSplineShapeTransformerEd", "icv_w7_ippiThreshold_GT_32f_C1R", "icv_w7_ownColLinear32f", "icv_w7_ownippiFilterMedianSqr_16s_C4R", "_ZNK2cv4cuda10DeviceInfo19maxSurface2DLayeredEv", "cvKalmanCorrect", "cvAttrValue", "Java_org_opencv_calib3d_Calib3d_undistortPoints_11", "icv_p8_ownSShorisontal_16s", "icv_w7_ippiFilterBilateralBorder_8u_C1R_L", "icv_s8_ownpi_Min_16u_C1R", "icv_h9_ippiDCTInvGetSize_32f", "icv_w7_ippiScaleC_64f8s_C1R", "icv_n0_own_ipps_sAtan2_W7EPnnn", "icv_h9_ippiResizeAntialiasing_16s_C3R_L", "_ZNK2cv9Feature2D14descriptorTypeEv", "icv_p8_ippiErodeInit_L", "_ZN2cv11FileStorage8writeObjERKNS_6StringEPKv", "icv_s8_ownscDFTfwd_7_64fc", "icv_s8_ownippiFilterMedianCross_8u_C1R_5x5", "icv_p8_ownColAntialiasing_32f", "icv_p8_ownpi_NormL1Rel_16u_C1R", "icv_s8_ownpi_Rotate180_8_C3R", "icv_s8_ownAbsDiff_8u_C1R_W7", "icv_h9_ippiNormRel_L1_32f_C1R", "icv_w7_Moments32fC1R_64f_FAST", "icv_w7_owns_cRealRecombine_32f", "icv_s8_ippiDCTFwdGetSize_32f", "icv_h9_owniFlipCopy_8u_C1", "_ZN2cv11stylizationERKNS_11_InputArrayERKNS_12_OutputArrayEff", "icv_s8_ownpi_dInterVectorClip_L_32f_C3", "icv_h9_owniScaleC_8s16s_C1R_acc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_W7", "Java_org_opencv_calib3d_StereoBM_setTextureThreshold_10", "_ZN2cv15calcBackProjectEPKNS_3MatEiPKiRKNS_11_InputArrayERKNS_12_OutputArrayEPPKfdb", "Java_org_opencv_imgproc_Imgproc_getPerspectiveTransform_10", "icv_h9_ownscDFTfwd_6_32fc", "icv_h9_ownscDftInv_Fact5_32fc", "icv_s8_ippiWarpAffineNearest_32f_C1R", "_ZN2cv2ml9StatModel5trainERKNS_3PtrINS0_9TrainDataEEEi", "icv_p8_owniScaleC_8s32f_C1R_fst", "_ZN2cv4sqrtERKNS_10softdoubleE", "WebPEncodeRGBA", "cvEndWriteStruct", "icv_g9_owniResizeLinear_64f_C4R", "icv_w7_ippiMinMaxIndx_32f_C1MR", "icv_h9_ownFilter32f_16s_C3R_g9e9", "icv_w7_ippiCopy_16s_C3AC4R", "icv_h9_ownResize3Linear8u", "Java_org_opencv_dnn_Importer_populateNet_10", "_ZN2cv3dnn19experimental_dnn_v15Layer9tryAttachERKNS_3PtrINS1_11BackendNodeEEE", "Java_org_opencv_features2d_GFTTDetector_getHarrisDetector_10", "ippicviCompare_16s_C1R", "icv_w7_ownpi_FindPerimeter", "icv_w7_ownscDftInv_Fact11_32fc", "icv_s8_owniFilterBilateralCom_InMem_8u_C3R_px", "_ZNK2cv4cuda10DeviceInfo8warpSizeEv", "_ZN2cv3hal3expEPKdPdi", "icv_h9_owniConvert_32s16u_C1RSfs", "icv_w7_owniResizeCubic_16s_C1R", "_ZN2cv3ogl6renderERKNS0_9Texture2DENS_5Rect_IdEES5_", "icv_w7_ippiColorToGray_32f_AC4C1R", "icv_g9_ippsSqrtOneF", "_ZN2cv12resizeWindowERKNS_6StringEii", "icv_w7_ippiAddSquare_8u32f_C1IMR", "_ZN2cv4cuda6GpuMat19setDefaultAllocatorEPNS1_9AllocatorE", "icv_p8_owniScaleC_32s16u_C1R_acc", "icv_h9_ownSS1_98_32f", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_W7", "icv_g9_ownpi_WarpAffine_NN_Repl_64f_C1", "icv_g9_ownsMul_8u", "icv_p8_ownResize4Nearest8u", "icv_p8_ownpi_dInterVectorClip_L_8u_C1", "icv_h9_owniGetRectRight_16s", "icv_s8_ownpi_WarpAffine_C_Repl_8u_C1", "icv_p8_owniScaleC_8u16u_C1R_fst", "icv_h9_ippiResizeAntialiasingLinearInit_L", "icv_g9_ownResize3Nearest16u", "icv_h9_ownsrDFTinv_13_64f", "icv_p8_ownSum_16u_C3CMR_V8", "Java_org_opencv_calib3d_Calib3d_estimateAffinePartial2D_11", "icv_h9_ippiMorphTophat_32f_C4R_L", "icv_w7_ownpi_WarpAffineSimpleCubic_16s_C1R", "_ZN2cv16FileNodeIteratorC2ERKS0_", "icv_w7_ippiCopy_16s_C4R", "icv_s8_ownscDftInv_Fact13_32fc", "icv_p8_ownsrDFTinv_13_32f", "icv_g9_ownRow1Filter8_8u", "_ZN2cv6detail12DpSeamFinder16resolveConflictsERKNS_3MatES4_NS_6Point_IiEES6_RS2_S7_", "icv_w7_ownpi_dInterVectorClip_C_8u_AC4", "icv_g9_ownscDftInv_Prime7_64fc", "icv_g9_ownMinMaxIndx_32f_C1R_1", "icv_p8_owniScaleC_16s16s_C1R_acc", "ippicviMirror_32f_C3IR", "icv_p8_ippiColorToGray_32f_C3C1R", "icv_h9_ownscDftFwd_Fact11_32fc", "_ZN2cv11cornerScoreILi16EEEiPKhPKii", "icv_h9_owns_cFFTinv_8_scale_32fc", "_ZN2cv17CascadeClassifier16getMaskGeneratorEv", "_ZN2cv11polarToCartERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_b", "icv_h9_setIndexCR", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_V8", "icv_s8_ippiNormDiff_L2_16u_C1MR", "icv_p8_ownsAdd_16s_Bound", "icv_h9_ownscDftInv_Prime8_32fc", "icv_p8_ownpi_WarpAffine_C_Const_64f_C4", "icv_s8_ippiTranspose_32f_C3IR", "Java_org_opencv_core_Mat_n_1elemSize", "icv_w7_ippiMorphClose_32f_C3R_L", "icv_w7_ippiTranspose_32f_C4IR", "cvPointPolygonTest", "Java_org_opencv_video_FarnebackOpticalFlow_getFastPyramids_10", "icv_h9_owniFilter32f_8u_C3R_g9e9_3", "_ZN2cv17destroyAllWindowsEv", "icv_s8_owniCopy16s_C4P4_A6_NT", "icv_g9_ownscDftInv_Prime6_32fc", "icv_h9_ownFilterRow32f_16u_C3R_g9e9", "ippicviResizeAntialiasingLanczosInit_L", "icv_s8_ippiMorphGradient_8u_C4R_L", "icv_p8_ownpi_WarpAffine_NN_Mem_16s_C3", "ippicviMean_StdDev_16u_C3CR", "ippicviNorm_L2_32f_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_X_V8", "Java_org_opencv_imgproc_Imgproc_logPolar_10", "icv_w7_ippiCopy_16s_C3P3R", "icv_s8_ownpi_WarpSimpleLinear_64f_C4R", "icv_g9_ownSS1_a7_8u", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_V8", "icv_g9_ownMorphAdvFunc", "icv_s8_owniFilter_32f_C4R_v8u8_3NA", "_ZN2cv16convexityDefectsERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_g9_owniResizeSuper_8u_C3R", "icv_w7_ippiGetAffineQuad", "_ZN2cv3dnn19experimental_dnn_v13Net7forwardERKNS_6StringE", "icv_g9_ownFilter32f_16u_C3R_g9e9", "icv_w7_owns_initTabTwdCcsRec_64f", "icv_h9_owniCopyConstBorder_32s_C4R", "ippicviErode_8u_C4R_L", "icv_w7_ownpi_WarpAffine_L_Mem_32f_C1", "_ZN2cv4cuda6StreamC1ERKNS_3PtrINS0_6GpuMat9AllocatorEEE", "_ZN2cv3ogl6BufferC2Ev", "icv_h9_ownBuildFilter_32f_Q14", "icv_g9_owniFilter32f_16u_C3R_g9e9_3", "_ZTv0_n24_N2cv22SimpleBlobDetectorImpl4readERKNS_8FileNodeE", "_ZN2cv9videostab17TwoPassStabilizerC1Ev", "icv_w7_owniCorrectAutoNormMean_8u32s_C1R", "icv_p8_ownscDftFwd_Fact5_32fc", "icv_w7_ownpi_WarpAffineSimpleLinear_8u_C4R", "icv_g9_ownResize1Linear32f", "icv_h9_ippsSortRadixDescend_16s_I", "icv_h9_ippiCopyConstBorder_16s_C3R", "icv_s8_ownBuildWarpFilter_32f_Q14", "icv_w7_ippiScaleC_32f32s_C1R", "icv_s8_ippsMagnitude_64f", "icv_p8_ownpi_WarpAffine_C_Mem_32f_C4", "icv_h9_ownpi_WarpAffine_NN_Const_16u_C4", "_ZN2cv13mulTransposedERKNS_11_InputArrayERKNS_12_OutputArrayEbS2_di", "cvGetWindowProperty", "icv_p8_owniFilter_32f_C3R_v8u8_4NA", "icv_s8_owniCopy16sC1Mas", "icv_s8_ippiTranspose_16u_C3IR", "icv_p8_owniCopyMirrorBorder_32s_C3R", "icv_s8_ownpis_Sum_16u_C1", "icv_p8_ippiMax_32f_C1R", "ippicviResizeSuper_16s_C3R_L", "icv_s8_ippiCopyConstBorder_32f_C4R", "icv_g9_ippiCopy_16u_C3AC4R", "icv_h9_ownsrDFTinv_6_scale_64f", "icv_h9_ownsSet_8u", "icv_g9_ownpi_Rotate180_64_C4R", "icv_p8_ownippiFilterMedian_8u_C3R_3x3", "iwiFilterBilateral", "Java_org_opencv_features2d_Params_get_1minArea_10", "icv_g9_owniCopy_32s_C4MR", "icv_h9_owns_cFFTinv_8_scale_64fc", "icv_p8_ownsMul_32f_I", "_ZNK3tbb13improper_lock4whatEv", "icv_p8_piGradientSobel32f", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_3x3_G9E9cn", "icv_w7_ownpi_WarpAffine_NN_Repl_16u_C3", "icv_w7_ownscDftFwd_Prime13_32fc", "icv_p8_ownpi_Min_8u_C1R", "_ZN2cv12VideoCaptureC2ERKNS_6StringEi", "icv_p8_ippiConvert_8u32s_C1R", "icv_w7_ownsConj_32fc_W7", "icv_g9_ippiCopy_32f_C1C3R", "icv_h9_ownRow1Antialiasing_16u", "icv_s8_ownBuildWarpFilter_32f", "icv_g9_ippiResizeNearest_16u_C4R_L", "icv_p8_ippiNormRel_L1_8u_C1R", "_ZN2cv9videostab18ToFileMotionWriterC2ERKNS_6StringENS_3PtrINS0_24ImageMotionEstimatorBaseEEE", "icv_p8_ownscDftFwd_Prime_64fc", "Java_org_opencv_ml_Boost_getWeakCount_10", "icv_g9_ownSS4_41_8u", "icv_s8_ippiSwapChannels_32s_C3R", "icv_s8_ownpi_NormInfDiff_8u_C1R", "icv_h9_ippiScaleC_16s_C1R", "icv_p8_ownpi_WarpAffine_C_Repl_8u_C3", "icv_s8_ippiWarpAffineNearest_64f_C1R", "own_ipps_zCIS_SC_LA", "icv_s8_owniResizeAntialiasing_8u_C1R_L", "icv_w7_ownpi_WarpAffine_C_Mem_8u_C1", "icv_g9_ippiMirror_16s_C4R", "icv_s8_ippiSqrDistanceNorm_8u32f_C1R", "icv_w7_ownpi_WarpAffine_L_16u_P4", "icv_s8_ownSS3_43_32f", "icv_g9_ownCalcBorderR3Cubic16s", "ownAlignedMalloc", "icv_w7_ippiFilterMedianBorder_16u_C3R", "icv_w7_innerHSVToRGB_8u_AC4R", "icv_p8_ownpi_WarpAffineNearest_16s_C4R", "icv_p8_ippiMean_StdDev_16u_C3CMR", "icv_s8_ippiWarpAffineNearest_8u_C1R", "cvFilter2D", "icv_h9_ownSS1_43_16s", "icv_g9_owns_rFFT_1_32f", "ippicviFilterSobelHorizSecondBorder_32f_C1R", "Java_org_opencv_ml_RTrees_getVarImportance_10", "icv_p8_ownpi_WarpAffine_C_Repl_16u_C3", "icv_p8_piFilterBoxBorder_32f_C1R_1_v8u8_NA", "icv_w7_ownpis_Min_8u_C3", "icv_h9_owniResizeLinear_32f_C3R", "icv_h9_ippiMulPack_32f_C1R", "icv_h9_ownRow3Linear64f", "icv_p8_ownAddSquare_32f_C1IMR_W7", "icv_h9_ownscDFTinv_5_scale_32fc", "icv_w7_ownpi_SimpleRotate_64f_C3R", "icv_h9_owns_initTabBitRevLarge", "icv_w7_owniResizeLanczos_8u_C3R", "icv_p8_ownpi_dInterVector_L_8u_C3", "icv_s8_ownippiFilterxBrd_32f_C1R", "icv_s8_ownpi_NormL1Rel_32f_C1R", "ippicviMirror_32s_C4R", "icv_h9_innerCommonLoopW5_8u32f_C3IR", "icv_s8_ippiConvert_32s16u_C1RSfs", "icv_w7_ippiAddWeighted_16u32f_C1IMR", "icv_w7_ippiHistogram_16u_C1R", "icv_p8_ownpi_dInterVector_NN_8_P4", "icv_g9_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_w7_ownCalcBorderR3Lanczos3_8u", "icv_s8_ownpi_Min_32f_C4R", "_ZN2cv3hal8gemm32fcEPKfjS2_jfS2_jfPfjiiii", "icv_g9_ippiSet_32f_C1R", "iwRelease", "icv_g9_ownpi_WarpAffine_NN_Mem_8u_C1", "icv_g9_owns_cFFTfwd_16_64fc", "icv_w7_ippiFilterMedianBorder_16s_C4R", "icv_p8_ownsrDFTinv_11_32f", "icv_g9_ownpi_WarpAffine_L_Mem_32f_C1", "icv_s8_ownsrDftFwd_PrimeFact_64f", "icv_g9_ippiFilterMedianBorder_16s_C3R", "Java_org_opencv_ml_EM_predict_11", "icv_g9_ippiSet_32f_C4MR", "_ZN2cv21DetectionBasedTrackerD2Ev", "icv_p8_ippiCopyMirrorBorder_16s_C1R", "icv_w7_ownpi_WarpAffineSimpleNearest_16u_C3R", "icv_s8_ippiAddC_32f_C1R", "_ZNK2cv4cuda10DeviceInfo17unifiedAddressingEv", "icv_s8_ippiCopy_32f_C1MR", "ippicviCopy_16u_C4MR", "cvSetImageCOI", "icv_g9_ownpi_CmpLE_32f_C1R", "icv_p8_ownpi_CmpLE_16s_C1R", "icv_h9_ippiMirror_8u_C3IR", "_ZN3tbb8internal17generic_scheduler17nested_arena_exitERNS0_20nested_arena_contextE", "icv_h9_ippiSum_8u_C4R", "icv_p8_ownpi_CountInRange_8u_AC4R", "ippicvsPolarToCart_32f", "Java_org_opencv_ml_TrainData_getTrainSampleIdx_10", "Java_org_opencv_ml_TrainData_getVarIdx_10", "icv_g9_ownippiFilterxBrd32f_8u_C4R", "icv_h9_ippiTranspose_8u_C3R", "icv_p8_ippiResizeAntialiasing_32f_C3R_L", "icv_s8_owniFilter_32f_C4R_v8u8_5NA", "icv_h9_ownResize1Cubic16u", "icv_w7_ownSharpenRow_16s_C3", "icv_h9_ownResize4Cubic32f", "icv_g9_ownNorm_Inf_16u_C1MR_P8Y8", "Java_org_opencv_video_BackgroundSubtractorMOG2_getDetectShadows_10", "icv_h9_ownpi_Set_64f_C1R", "icv_g9_ownpi_Rotate90_8_C3R", "icv_s8_ownippiFilterMedianCross_16s_C1R_3x3", "icv_h9_ippiFilterMedianBorder_16u_C4R", "icv_h9_owniFilter_32f_C3R_g9e9_3", "icv_s8_ownscrDftFwd_Prime8_64f", "_ZN10__cxxabiv123__fundamental_type_infoD2Ev", "icv_h9_ownpi_WarpAffineCubic_8u_C4R", "icv_s8_ippsMinEvery_32f", "icv_p8_ippiNormRel_Inf_32f_C1R", "ownAlignedFree", "icv_s8_ownscDFTinv_7_scale_64fc", "icv_w7_ownippiFilterxBrd_16s_C1R", "icv_w7_ownpi_WarpAffineCubic_16u_C3R", "icv_p8_ownippiFilterxBrd32f_16s_C1R", "icv_w7_ownSharpenRow_32f_AC4", "icv_s8_owniGetRectBottomBF_8u_C3R", "icv_w7_ownResize3Cubic8u", "icv_s8_ownpi_WarpAffineCubic_16u_C3R", "_ZNK2cv4cuda6GpuMat8downloadERKNS_12_OutputArrayERNS0_6StreamE", "icv_g9_ownResize3Lanczos3_32f", "icv_w7_ippiNormDiff_L1_16u_C1R", "icv_w7_ippiMorphGradient_8u_C1R_L", "icv_h9_ownCalcBorderR1Antialiasing_8u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_W7", "icv_h9_ippiApplyHaarClassifier_32f_C1R", "icv_w7_ippsMul_64f_I", "icv_g9_ippiMinMaxIndx_32f_C1R", "_ZNK2cv13HOGDescriptor15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS3_EERS1_IdSaIdEEid", "icv_s8_ippiNormRel_Inf_8u_C1R", "icv_s8_ownscDftFwd_Prime13_32fc", "icv_s8_owniSqrDistanceNorm_Valid_32f_C1R", "icv_g9_owniCopyMirrorBorder_16u_C3IR", "icv_h9_owns_cFFTinv_16_64fc", "_ZNK2cv17DescriptorMatcher5writeERNS_11FileStorageE", "icv_h9_ownCalcBorderR3Antialiasing_8u", "icv_p8_owniResizeLanczos_8u_C1R", "icv_s8_ownpi_idInterPoint_C_Plane_8u", "icv_p8_ownsCosOne_w7p8", "icv_p8_ownscrDftInv_Prime5_64f", "Java_org_opencv_dnn_Dnn_blobFromImages_11", "icv_s8_ownNormDiff_L1_8u_C3CMR_V8", "icv_g9_ownippiFilterMedianSqr_16s_C3R", "icv_w7_ownCalcBorderR1Lanczos2_8u", "icv_w7_ownpi_WarpAffine_L_8u_P3", "cvCheckArr", "_ZN2cv3hal7invSqrtEPKdPdi", "icv_g9_ippiMean_StdDev_16u_C3CMR", "_ZN2cv4cuda6Stream19enqueueHostCallbackEPFviPvES2_", "Java_org_opencv_ml_StatModel_calcError_10", "_ZNK2cv3Mat3dotERKNS_11_InputArrayE", "icv_s8_ippiThreshold_GT_16s_C1IR", "icv_p8_ownpi_WarpAffine_L_Const_16u_C3", "icv_p8_ownpi_dInterVector_L_8u_C1", "icv_n0_own_ipps_sCos_G9LAynn", "Java_org_opencv_features2d_GFTTDetector_delete", "Java_org_opencv_imgproc_Imgproc_fillPoly_11", "icv_p8_ownSumSq_32f_C1MR_W7", "icv_p8_owns_initDctFwd_Fft_32f", "icv_s8_ippiCopyConstBorder_16u_C4R", "icv_g9_ownpi_WarpAffineSimpleNearest_16u_C4R", "icv_g9_ippiResizeSuper_8u_C3R_L", "icv_p8_ippiCopy_8u_C4P4R", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "icv_w7_ownscDftInv_Fact13_64fc", "icv_g9_ippiFilterBoxBorder_8u_C1R", "icv_h9_owniFilter32f_16u_C1R_g9e9_1", "icv_g9_ownpi_WarpAffine_C_Mem_64f_C4", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_W7", "icv_p8_ownAConvertOffset32s_8u", "icv_p8_ownSS1_21_8u", "icv_s8_cv_ownippiFilterMax_16s_Col", "icv_p8_ownAFilterRow32f_8u_C3R", "icv_w7_ownpi_WarpSimpleGetBufferSize", "_ZN2cv6detail12AffineWarper7warpRoiENS_5Size_IiEERKNS_11_InputArrayES6_", "icv_p8_owniConvert_8u32s_C1R", "icv_p8_owniTransposeWxH_16uC1", "iwiResize_Process", "_ZN2cv15getNumberOfCPUsEv", "icv_s8_ownNormRel_L2_8s_C3CMR_V8", "icv_w7_owniResizeAntialiasing_8u_C1R_L", "icv_s8_ownsMul_64fc", "icv_g9_ippiResizeLanczos_16s_C4R_L", "Java_org_opencv_calib3d_StereoMatcher_getDisp12MaxDiff_10", "icv_s8_ownpi_WarpAffine_NN_16_P3", "_ZN2cv3dnn19experimental_dnn_v15Layer8finalizeERKSt6vectorINS_3MatESaIS4_EERS6_", "icv_p8_ownsrDFTinv_15_64f", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_V8", "_ZNK2cv13HOGDescriptor17checkDetectorSizeEv", "icv_h9_ownSS3_16u", "icv_w7_ippiCopyMirrorBorder_32s_C1R_L", "_ZN2cv8superres28createFrameSource_Video_CUDAERKNS_6StringE", "icv_w7_ippiGetCentralMoment_64f", "icv_g9_ownpi_WarpSimpleNearest_16u_C3R", "Java_org_opencv_dnn_Dnn_createTorchImporter_10", "icv_p8_ownSS3_32_16s", "icv_g9_ownpi_WarpAffine_C_Transp_16s_C4", "icv_w7_ownpi_XorC_16u_C3R", "icv_p8_ownpi_dInterVector_NN_32_C4", "Java_org_opencv_dnn_Net_Net_10", "icv_g9_ownSS3_54_16u", "icv_h9_ownscDftInv_Fact7_32fc", "icv_p8_ippiThreshold_LTVal_32f_C1R", "icv_s8_ippiScaleC_8u16s_C1R", "icv_w7_ownippiFilterMedian_16s_C4R", "_ZN2cv9videostab17TwoPassStabilizer14estimateMotionEv", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_descriptorSize_10", "icv_w7_owns_rFFTinv_32_32f", "icv_h9_ownscDFTfwd_9_32fc", "cvCloneSparseMat", "cvValidateDisparity", "icv_g9_ippiFilterBilateralBorder_32f_C1R", "icv_h9_ownsInitDftConv_64f", "_ZN2cv4meanERKNS_11_InputArrayES2_", "icv_h9_ippiMirror_16u_C3IR", "icv_h9_ownippiFilterMedian_8u_C1R_5x5", "_ZNK2cv7MatExpr4typeEv", "Java_org_opencv_ml_TrainData_getResponseType_10", "icv_s8_owns_rFFTinv_8_scale_64f", "icv_g9_owniResizeLanczos_16u_C4R", "icv_w7_ownsAdd_8u_NegSfs", "icv_p8_ownpi_WarpAffine_C_Transp_64f_C4", "icv_s8_ownResize1Lanczos3_32f", "icv_h9_ippiMirror_32f_C1IR", "icv_w7_ownpi_Sum_32f_C3R", "icv_s8_Plr2Crt_32fc_WMT", "icv_w7_ippiResizeNearest_16s_C3R_L", "icv_g9_ippiDilateGetBufferSize_L", "icv_g9_gres_NormL1_16u_C1R", "iwVector_Reserve", "icv_s8_ippsSet_16s", "icv_s8_ownscDftFwd_Prime4_32fc", "icv_s8_ippiConvert_8s8u_C1Rs", "icv_h9_owniScaleC_8u8u_C1R_acc", "icv_h9_owns_cRadix4Inv_64fc", "icv_p8_owns_cFftInv_Large_32fc", "icv_p8_ippiAddWeighted_32f_C1IMR", "icv_h9_ownResize3Nearest16s", "icv_s8_ownNormRel_Inf_8s_C3CMR_V8", "icv_w7_ippiResizeNearest_8u_C3R_L", "Java_org_opencv_imgproc_Imgproc_circle_12", "icv_h9_owniCopyBF_32f_C1R", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithStats_10", "icv_w7_ippiMean_StdDev_16u_C3CR", "_ZNK2cv14DefaultDeleterI9_IplImageEclEPS1_", "icv_w7_ownsrDFTfwd_14_32f", "icv_w7_ippiNorm_Inf_32f_C1R", "icv_g9_ownpi_WarpAffine_NN_Repl_32f_C3", "icv_s8_ippiResizeLanczos_8u_C1R_L", "icv_p8_ippiMean_32f_C1R", "icv_s8_ippiSet_32s_C1R", "icv_s8_owniFilter_32f_C3R_v8u8_2", "Java_org_opencv_ml_EM_setClustersNumber_10", "_ZN2cv22SparseMatConstIteratorC1EPKNS_9SparseMatE", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_V8", "icv_p8_ownpi_WarpSimpleCubic_16s_C3R", "icv_g9_innerSwapChannels_16u_C4R", "icv_g9_ownsInitDftConv_32f", "icv_p8_ownpiDotProd_16s64f_C1R", "icv_p8_ownpi_NormL1Diff_8u_C1R", "_ZN2cv15calibrateCameraERKNS_11_InputArrayES2_NS_5Size_IiEERKNS_17_InputOutputArrayES7_RKNS_12_OutputArrayESA_SA_SA_SA_iNS_12TermCriteriaE", "_ZN2cvneERKNS_3MatES2_", "icv_p8_owns_BitRev2_S", "icv_h9_ownsMul_16u_PosSfs", "icv_s8_ownSS3_43_16s", "Java_org_opencv_ml_EM_delete", "icv_p8_ownpi_dInterVectorClip_C_8u_P3", "icv_w7_owniCrossCorrValid_NormLevel_8u32f_C1R", "icv_p8_owns_rFFTinv_8_32f", "Java_org_opencv_features2d_MSER_delete", "icv_w7_ownpi_WarpAffine_C_Repl_8u_C4", "icv_g9_owniResizeSuperInit", "icv_p8_owniScaleC_32f8u_C1R_fst", "icv_s8_ownippiFilterMin_8u_Col", "icv_p8_ownResize3Cubic8u", "icv_w7_ownpi_WarpAffine_NN_Repl_32f_C4", "cvCvtSeqToArray", "icv_s8_ownsMaxEvery_16u", "icv_p8_ownMinMaxIndx_8u_C1MR_W7_1", "icv_p8_ownpi_Histogram_16s_AC4R", "icv_g9_owniFilter2_8u16s_C1R", "ippicviNormDiff_L2_16s_C1R", "ippicviMorphClose_32f_C4R_L", "icv_p8_owniFilterBilateralR2_InMem_8u_C3R_px", "icv_g9_ippsSin_64f_A53", "icv_s8_ownSq_32f_C3CMR_W7", "WebPPictureImportBGRA", "icv_w7_owniGetRectRightBF_32f_C1R", "icv_g9_ownscDftFwd_Prime13_64fc", "_ZN3tbb8internal6market12detach_arenaERNS0_5arenaE", "icv_n0_own_ipps_dRound_G9HAynn", "icv_s8_ownpi_WarpAffine_NN_Const_16u_C3", "_ZN2cv11RNG_MT19937clEj", "_ZNK2cv14DefaultDeleterI7CvMatNDEclEPS1_", "icv_w7_ownColLinear16s", "icv_s8_ownRow1Filter14_8u", "_ZN2cv5instr8getTraceEv", "icv_w7_owns_cFFT_1_32fc", "icv_g9_piGradientSobel32f_3x3_row_c1", "icv_s8_ippiMomentInit_64f", "_ZN2cv4cuda7HostMem12getAllocatorENS1_9AllocTypeE", "icv_s8_ownSS1_41_16s", "icv_s8_ownscDftInv_Prime_64fc", "Java_org_opencv_imgproc_Imgproc_pyrUp_10", "icv_g9_ownscDFTinv_15_scale_64fc", "icv_h9_ownippiFilterMedian_16s_BC4R", "icv_h9_ownscDFTinv_5_32fc", "icv_p8_ownippiFilterMax_32f_Col_AC4", "icv_s8_ownpi_OrC_16u_AC4R", "icv_w7_ownscDftInv_Prime13_64fc", "_ZNK2cv11RotatedRect6pointsEPNS_6Point_IfEE", "_ZN2cv17CascadeClassifier7convertERKNS_6StringES3_", "_ZN2cv3dnn19experimental_dnn_v15LayerD2Ev", "Java_org_opencv_imgproc_Imgproc_GaussianBlur_11", "Java_org_opencv_features2d_Feature2D_detect_12", "icv_w7_owniResizeCubic_16u_C1R", "cvEqualizeHist", "icv_h9_ippiSet_16s_C3MR", "icv_p8_ippiCopy_16u_C4P4R", "icv_w7_owniResizeLinear_32f_C4R", "icv_p8_ownsExpOneF", "_ZN2cv16TLSDataContainer7cleanupEv", "icv_h9_ippiSwapChannels_16u_C4C3R", "icv_g9_ownscDftFwd_Prime3_64fc", "icv_h9_ownippiFilterMedianVert_16u_C4R", "icv_g9_ownippiFilterMedianVert_8u", "_ZNK2cv3ocl7Program9getPrefixEv", "icv_w7_ownippiFilterxBrd_32f_C4R", "icv_g9_ownsSub_8u", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "icv_p8_myRGBToHLS_8u_C3R", "icv_s8_ippsSqrt_32f", "icv_s8_ownippiFilterMax_16s_Col_AC4", "icv_g9_ownpi_WarpSimpleLinear_32f_C1R", "icv_h9_ippsDFTInv_PackToR_32f", "icv_g9_owniFilterMedianVert1x5_32f_C1R", "icv_s8_ippiSet_32s_C4MR", "icv_g9_ownpi_dInterPoint_CR_PixelB_8u", "icv_h9_owniSwapChannels_8u_C3C4R", "icv_p8_ownpi_WarpAffineSimpleCubic_16u_C1R", "icv_s8_ippiResizeSuper_8u_C1R_L", "icv_s8_ownLanczos2KernelAA", "cvFloodFill", "icv_s8_ownippiFilterMedianHoriz_16s_BC4R_3x1", "WebPGetDecoderVersion", "_ZN2cv15undistortPointsERKNS_11_InputArrayERKNS_12_OutputArrayES2_S2_S2_S2_", "icv_h9_cv_ownMorphologyGetSizeInitBuf_1u_L", "Java_org_opencv_ml_DTrees_getPriors_10", "icv_p8_ippiConvert_16s32f_C1R", "icv_p8_ippiMirror_8u_C4IR", "icv_g9_ownpi_WarpSimpleLinearInit", "icv_w7_owniFlip_16u_C4_W7", "_ZN2cv8superres11FrameSourceD0Ev", "icv_h9_ippiMulC_32f_C1IR", "icv_w7_ownCalcBorderR4Lanczos2_16s", "Java_org_opencv_core_Core_meanStdDev_10", "icv_h9_ownpi_WarpAffine_NN_Repl_16u_C4", "icv_s8_ippiCopy_16s_P3C3R", "icv_p8_ippiCopyReplicateBorder_32s_C1R_L", "icv_h9_owniConvert_8u32f", "Java_org_opencv_calib3d_Calib3d_decomposeEssentialMat_10", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_X_V8", "icv_s8_owniFilterSobelVertSecondBorder2_8u16s_C1R", "icv_w7_owniCopy16s_C3P3_A6", "icv_p8_owniResizeCubic_8u_C4R", "icv_w7_ownsrDFTinv_11_64f", "_ZN2cv15warpPerspectiveERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_5Size_IiEEiiRKNS_7Scalar_IdEE", "icv_s8_ippsLn_32f_A21", "ippicviMorphOpen_8u_C3R_L", "icv_p8_ownippiFilterxBrd_8u_C1R", "_ZN3tbb8internal5arena14allocate_arenaERNS0_6marketEjj", "icv_s8_ippiMorphInit_L", "_ZN2cv6detail12CameraParamsC1ERKS1_", "icv_p8_ippiMirror_16s_C4R", "icv_p8_ippiAdd_8u32f_C1IR", "icv_h9_ownColCubic16u", "icv_p8_ownResize4Nearest16s", "icv_h9_ownippiFilterxBrd32f_8u_C1R", "ippicviDilate_8u_C1R_L", "Java_org_opencv_objdetect_HOGDescriptor_getWinSigma_10", "icv_p8_ownsrDFTinv_11_scale_32f", "icv_s8_ownsInitTabDftInvRec_32f", "icv_h9_owniResizeAntialiasing_16u_C1R_L", "icv_h9_ownsrDFTinv_7_64f", "icv_g9_ippiCopy_32f_C3MR", "icv_s8_ippiCopyReplicateBorder_32s_C1R", "icv_p8_ownCalcBorderR1Cubic16u", "icv_h9_ippiTranspose_32s_C3IR", "icv_w7_ownpi_WarpAffineLinear_64f_C3R", "icv_p8_ownscDftFwd_Fact4_32fc", "ippicviResizeCubic_16u_C1R_L", "icv_g9_owns_cFFTinv_64_scale_32fc", "_ZN2cv21DetectionBasedTracker7processERKNS_3MatE", "_ZN2cv9HuMomentsERKNS_7MomentsEPd", "icv_s8_ownscDftInv_Prime2_64fc", "Java_org_opencv_imgproc_Subdiv2D_getEdgeList_10", "icv_g9_owns_rFFTinv_8_scale_32f", "icv_g9_ownRow1Lanczos3_16u", "icv_p8_ownNorm_L2_32f_C1MR_W7", "_ZN2cv9videostab18ToFileMotionWriter8estimateERKNS_3MatES4_Pb", "icv_g9_ownpi_WarpAffineCubic_16s_C4R", "icv_h9_ippiConvert_8u8s_C1RSfs", "icv_w7_ippiFilterBorder_16u_C3R", "Java_org_opencv_core_Core_getNumThreads_10", "icv_p8_owniResizeLanczos_16u_C1R", "icv_p8_ownpi_WarpAffine_L_Const_64f_C4", "icv_h9_ownCalcBorderR4Lanczos2_16s", "icv_p8_ippiFilterBoxBorderGetBufferSize", "icv_h9_ownResize4Linear8u", "icv_s8_ownscDftInv_Prime8_32fc", "WebPMemoryWrite", "icv_g9_ippiThreshold_LTVal_8u_C1IR", "icv_g9_ownscDftInv_Prime13_32fc", "icv_w7_ownResize4Lanczos3_8u", "icv_g9_ownSS1_98_16s", "cvMeanShift", "ippicviAddProduct_32f_C1IR", "icv_w7_ownpi_NormL1Diff_16u_C1R", "_Unwind_RaiseException", "icv_w7_owns_rFFTfwd_4_32f", "llwiMirror", "icv_g9_owniFilterRobertsUpBorder2_16s_C1R", "_ZN2cvdvERKNS_7MatExprEd", "_ZN2cv16ParallelLoopBodyD0Ev", "cvMulTransposed", "icv_p8_ippsSqrtOneF", "_ZN2cv3dnn19experimental_dnn_v13Net7forwardERSt6vectorIS3_INS_3MatESaIS4_EESaIS6_EERKS3_INS_6StringESaISA_EE", "ippicviCopy_32s_C1R", "_ZNK2cv17FlannBasedMatcher5writeERNS_11FileStorageE", "icv_h9_owniConvert_32f8u_ccode", "_ZN2cv6detail18GraphCutSeamFinderC1Eiff", "icv_p8_ownsGetSizeTabDftFwdRec_64f", "icv_w7_ippiSet_32f_C4R", "icv_h9_ownscDftFwd_Prime3_32fc", "_ZN2cv3Mat15getStdAllocatorEv", "icv_p8_ownscDftFwd_Prime8_64fc", "_ZN2cv16FileNodeIteratorC1EPK13CvFileStoragePK10CvFileNodej", "icv_p8_ippsSortRadixDescend_32s_I", "icv_p8_ownpi_AndC_16u_AC4R", "icv_p8_owniResizeLinear_16s_C1R", "icv_s8_owniFlip_32s_C4I_W7", "Java_org_opencv_features2d_Feature2D_compute_11", "ippicviMean_16u_C4R", "ippicviSwapChannels_32f_C4R", "icv_p8_ownpi_Rotate90_B_16_C3R", "_ZNK2cv3ocl6Device24preferredVectorWidthLongEv", "_ZN2cv5flann14LshIndexParamsC1Eiii", "icv_h9_ippiScaleC_32f32s_C1R", "cvGetSeqReaderPos", "icv_w7_ownsGetSizeTabDftInvRec_32f", "icv_w7_ownippiFilterMedian_16u_BC4R", "icv_h9_ownpi_WarpAffine_L_Const_16s_C1", "_ZN2cv10softdoubleC1Ex", "icv_w7_ownippiFilterMedian_16s_C1R_3x3", "Java_org_opencv_core_Core_multiply_15", "icv_w7_owniFlip_16u_C3", "icv_p8_ownSS1_65_8u", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_V8", "icv_s8_ippiNormDiff_L1_8u_C3CMR", "icv_s8_owniCopy32s_C3P3_W7_NT", "icv_s8_ippiMean_32f_C1R", "_ZN2cv8Stitcher13createDefaultEb", "icv_w7_ownpi_WarpAffineCubic_16s_C1R", "icv_h9_ownFilterBoxBorderInMem5x5_16s_C1R", "icv_h9_ippiCopyReplicateBorder_8u_C1IR_L", "cvGetReal1D", "Java_org_opencv_imgproc_Imgproc_fillConvexPoly_11", "_ZNK3tbb18task_group_context8priorityEv", "icv_h9_cv_ownippiFilterMax_32f_Row", "icv_w7_owniSet_8u_C3M_W7", "_ZN2cv3Mat9push_backERKS0_", "icv_w7_ippiCopyMirrorBorder_32f_C3R", "ippicvsDFTGetSize_R_64f", "_ZN2cv12VideoCapture8retrieveERKNS_12_OutputArrayEi", "icv_g9_ownpis_Indx_16u_C1", "icv_h9_CV_BORDER_CHECK_PARSE_FLAGS_NEW", "icv_p8_ownpi_WarpAffineCubic_32f_C3R", "icv_g9_ippiSet_16u_C4R", "icv_g9_ownRow4Antialiasing_8u", "Java_org_opencv_core_Mat_nGetS", "icv_w7_ownpi_NormL2Diff_8u_C1R", "icv_g9_ownsInitTabDftInvRec_64f", "icv_w7_ippiNorm_L1_16s_C1R", "_ZN2cv9ExceptionD2Ev", "icv_w7_ownippiThreshold_GLV_8u_AC4", "icv_h9_ownpi_WarpAffine_C_Const_8u_C1", "icv_g9_ownResize1Linear8u", "icv_p8_ippiDistanceTransform_3x3_8u_C1R", "icv_w7_ippiResizeSuper_16s_C1R_L", "cvWatershed", "icv_s8_ippiSet_16u_C3MR", "icv_p8_ippiScaleC_64f32f_C1R", "icv_s8_ippsSqrt_64f_A50", "icv_g9_ippsSortRadixDescend_64f_I", "cvSaveWindowParameters", "icv_w7_ippiWarpAffineCubic_16s_C4R", "icv_p8_owniSet_16s_C3MR", "icv_h9_ippiDFTInv_PackToR_32f_C1R", "icv_h9_ippiCopy_32f_C3MR", "icv_p8_ownsInitTabDftFwdRec_64f", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "ippicviHistogramInit", "icv_w7_ownscrDftInv_Prime4_64f", "icv_s8_ippiTranspose_16u_C1R", "icv_w7_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_W7", "_ZN2cv12ellipse2PolyENS_6Point_IdEENS_5Size_IdEEiiiiRSt6vectorIS1_SaIS1_EE", "icv_s8_ippiSum_16u_C3R", "icv_w7_ippiTranspose_16s_C3IR", "ippicviConvert_16u8s_C1RSfs", "icv_g9_owniFilter32f_16s_C1R_g9e9_5", "_ZN3tbb16spin_rw_mutex_v327internal_try_acquire_writerEv", "icv_g9_ownpi_NormL1Rel_32f_C1R", "icv_s8_ippsExp_32f_A21", "icv_p8_owniGetRectTopBF_32f_C1R", "icv_w7_ippiResizeLinear_32f_C4R_L", "icv_s8_ownippiThreshold_GLV_32f_AC4", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKNS_3MatE", "ippicviScaleC_32s_C1R", "icv_g9_ownMinEigenVal_32f_C1R", "icv_s8_ownpi_WarpAffineSimpleNearest_16s_C4R", "icv_s8_ownpi_WarpAffine_C_Repl_64f_C3", "icv_s8_ippsSortRadixIndexAscend_16u", "ippicviNormRel_L1_16u_C1R", "icv_p8_ownpi_And_8u_C1R", "icv_s8_ownscDftInv_Prime5_64fc", "icv_w7_ownippiFilterMedianSqr_8u_AC4R", "icv_h9_ownscDftInv_Prime7_64fc", "icv_w7_ippiSwapChannels_32s_C3R", "icv_n0_own_ipps_sSinCos_W7EPnnn", "icv_p8_ownpi_Min_32f_AC4R", "icv_s8_owniGetRectComBF_32f_C3R", "icv_p8_ownpi_AndC_16u_C1R", "icv_w7_ownpi_WarpAffine_L_Const_32f_C1", "Java_org_opencv_imgproc_Imgproc_ellipse_12", "icv_h9_ownNormDiff_Inf_16u_C1MR_HSW", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_G9E9cn", "icv_w7_ippiCopyMirrorBorder_16u_C3IR", "icv_s8_owniFilterPrewittVertBorder2_16s_C1R", "icv_g9_ownpi_Rotate90_B_64_C1R", "icv_s8_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "icv_p8_ownsGetSizeDftPrimeFact_64f_64f", "icv_s8_ownippiFilterMedian_16u_C1R_5x5", "ippicviNorm_L2_16u_C1MR", "_ZN2cv15BriskScaleSpaceD2Ev", "icv_s8_ownRow4Linear16u", "icv_s8_ippiThreshold_GTVal_16s_C1IR", "icv_p8_ownpi_CmpEQ_32f_C1R", "icv_s8_owniCmpEq_16u_C1R", "icv_w7_ownippiFilterxBrd32f_8u_C1R", "icv_p8_ownSumSq_32f_C1R_W7_Al", "icv_p8_ownSS4_83_8u", "icv_p8_ownSS4_54_32f", "icv_g9_owns_cFFTinv_32_64fc", "icv_h9_ownFilterBoxBorderInMem_32f_C3IR", "ippicviCopy_8u_C1MR", "_ZN2cv6detail7Blender13createDefaultEib", "icv_s8_ippiSum_32f_C1R", "ippicviTranspose_32f_C4R", "icv_s8_ownMorphInit_L", "icv_h9_ownscDFTfwd_6_scale_64fc", "icv_s8_ownpi_WarpAffine_C_Mem_32f_C4", "ippicviMorphGradient_8u_C1R_L", "icv_h9_ownSS1_53_32f", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_13", "icv_g9_ownSS3_43_16s", "icv_p8_ownLanczos2KernelAA", "Java_org_opencv_photo_TonemapDurand_getSigmaSpace_10", "icv_p8_ownippiThreshold_32f_AC4", "icv_s8_owniGetRectLeft_16s", "Java_org_opencv_features2d_KAZE_setDiffusivity_10", "icv_g9_ownpi_NormL2_8u_C1R", "icv_h9_ippiMin_8u_C1R", "icv_s8_ownSS3_41_16u", "_ZN2cv3ocl12PlatformInfoC1EPv", "icv_w7_ippsLn_32f_A21", "icv_w7_ownsrDFTfwd_10_32f", "icv_s8_ownpi_ClipLower", "icv_w7_ippsSortRadixIndexAscend_32s", "icv_w7_ownippiFilterMedian_16u_C3R_5x5", "icv_s8_ippiCopyReplicateBorder_32f_C1R_L", "icv_h9_owniScaleC_8u8u_C1R_fst", "icv_w7_ownsMul_64fc_I", "icv_g9_ownippiFilterMedianSqr_16u_AC4R", "_ZN2cv6detail16MultiBandBlender5blendERKNS_17_InputOutputArrayES4_", "icv_w7_ippiSwapChannels_16u_C4C3R", "icv_h9_piGradientScharr32f_c1", "_ZN2cv4UMatC2ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_h9_ippiCopyMirrorBorder_32f_C3R", "icv_s8_ownRow1Filter8_16s", "icv_p8_ippiDFTInit_R_32f", "_ZN2cv11convertFp16ERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_g9_ippiScaleC_32f16s_C1R", "icv_p8_ownsSub_16s_NegSfs", "icv_s8_ippiMinIndx_16u_C1R", "icv_n0_own_ipps_sAtan2_S9EPnnn", "icv_w7_ownpis_Max_8u_C3", "Java_org_opencv_photo_Photo_createMergeMertens_11", "icv_h9_ownippiFilterMedian_16u_C4R", "icv_p8_ippiResizeCubic_8u_C1R_L", "icv_w7_ownpi_Rotate90_8_C4R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_W7_sym", "_ZN2cv3ocl8PlatformaSERKS1_", "icv_w7_ownpi_WarpAffine_NN_Const_16u_C3", "Java_org_opencv_imgproc_Imgproc_drawContours_10", "icv_p8_ownpi_WarpSimpleCubic_16u_C4R", "Java_org_opencv_imgproc_CLAHE_apply_10", "icv_s8_ippiNorm_Inf_8u_C3CMR", "icv_h9_owniFilter32f_16u_C3R_g9e9_2", "icv_g9_ownscDftInv_Fact13_32fc", "icv_g9_owniResizeNearest_8u_C4R", "icv_p8_ippiMorphClose_16u_C1R_L", "icv_h9_ownpi_WarpAffine_C_Transp_8u_C3", "icv_p8_ippsSortRadixAscend_32f_I", "icv_p8_ownsrDFTinv_12_32f", "icv_g9_ippsDCTInv_32f", "_ZN2cv3ocl6Kernel3setEiRKNS0_7Image2DE", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_W7", "icv_s8_ownsMul_16s_Bound", "icv_s8_ownpi_SimpleRotate_8u_C1R", "icv_w7_ippiWarpAffineCubic_32f_C4R", "icv_s8_ownSS4_43_16u", "icv_g9_ownpi_WarpAffine_C_Mem_16u_C4", "icv_s8_ownSS1_41_8u", "icv_h9_ownscDftFwd_Fact5_32fc", "_ZN2cv6repeatERKNS_3MatEii", "icv_g9_ippiScaleC_16s64f_C1R", "icv_p8_ownRow1Filter8_16u", "_ZN3tbb8internal14observer_proxy15get_v6_observerEv", "Java_org_opencv_photo_TonemapMantiuk_delete", "icv_w7_ownNormDiff_L1_8s_C3CMR_W7", "ippicviNorm_Inf_32f_C1MR", "icv_p8_owniScaleC_8s8u_C1R_fst", "icv_h9_ippiScaleC_8u32f_C1R", "icv_w7_ippsZero_32f", "icv_p8_ownSSvsum_16s", "icv_p8_ownippiFilterMedianCross_8u_C1R_3x3", "icv_s8_ownBFilterRow32f_16u_C1R", "icv_g9_ownResize4Antialiasing_16u", "icv_s8_ownpi_WarpAffine_L_Const_16s_C1", "icv_g9_ownColAntialiasing_16u", "icv_g9_ippiCopySubpixIntersect_32f_C1R", "icv_p8_ownsMaxEvery_64f", "cvFindStereoCorrespondenceBM", "icv_s8_ownsrDFTinv_11_64f", "_ZNK2cv13HOGDescriptor16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EEdNS_5Size_IiEESB_ddb", "icv_p8_ownpi_dInterPoint_C_Pixel_32f", "icv_g9_owniScaleC_32s32f_C1R_fst", "_ZNK2cv4cuda10DeviceInfo16textureAlignmentEv", "_ZN2cv8imencodeERKNS_6StringERKNS_11_InputArrayERSt6vectorIhSaIhEERKS6_IiSaIiEE", "_ZN2cvneERKNS_3MatEd", "icv_p8_ippiMean_16u_C1MR", "Java_org_opencv_photo_AlignMTB_shiftMat_10", "icv_p8_ownpi_OrC_8u_C1R", "Java_org_opencv_core_Core_mulSpectrums_10", "icv_g9_ippiCopy_16s_C1R", "_ZNK2cv11_InputArray8sameSizeERKS0_", "_ZN3tbb8internal5arena25occupy_free_slot_in_rangeERNS0_17generic_schedulerEjj", "icv_g9_ippsDFTFwd_RToPack_64f", "icv_w7_ownpi_WarpAffine_C_Repl_64f_C1", "_ZNK2cv12_OutputArray6neededEv", "_ZN2cv3hal5LU64fEPdjiS1_ji", "icv_h9_ippiGetCentralMoment_64f", "Java_org_opencv_photo_Photo_colorChange_11", "icv_s8_owniFilterMedianBorderInMem_8u_C1R", "Java_org_opencv_videoio_VideoWriter_VideoWriter_11", "_ZN2cveoERKNS_7Scalar_IdEERKNS_3MatE", "icv_w7_ownCanny_16s8u_C1R_Mag_W7", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_W7", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_V8", "ippicviMorphGradient_32f_C4R_L", "icv_s8_ownippiFilterMedian_8u_C3R_5x5", "icv_g9_owniFlip_16u_C1", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_W7", "icv_s8_ownpi_WarpAffine_L_Mem_32f_C1", "icv_g9_ippiMomentGetStateSize_64f", "_ZN2cv14ConjGradSolver6createERKNS_3PtrINS_16MinProblemSolver8FunctionEEENS_12TermCriteriaE", "Java_org_opencv_dnn_Net_getMemoryConsumption_15", "Java_org_opencv_photo_MergeExposures_delete", "cvPtr1D", "icv_w7_ippsDFTFwd_RToPack_32f", "icv_ipp_set_cw_fpu", "icv_h9_owns_rFFTinv_8_scale_64f", "Java_org_opencv_ml_SVM_setP_10", "icv_h9_ippiMirror_32f_C4IR", "icv_h9_ownpi_WarpAffineSimpleCubic_32f_C1R", "icv_w7_ippsMinEvery_32f", "icv_g9_ownRow1Antialiasing_8u", "_ZN2cv3dnn19experimental_dnn_v19ReLULayer6createERKNS1_11LayerParamsE", "_ZN3tbb8internal18concurrent_monitor18notify_all_relaxedEv", "icv_h9_ownscDFTinv_11_scale_32fc", "icv_s8_owniConvert_32f8u_ccode", "icv_g9_ownscDftFwd_Prime2_64fc", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_10", "icv_s8_ippiResizeCubic_32f_C4R_L", "_ZN2cv8Subdiv2DC2ENS_5Rect_IiEE", "icv_g9_ippiResizeLinear_16u_C1R_L", "_ZNK2cv4cuda10DeviceInfo18maxTexture2DGatherEv", "icv_p8_ownpi_CmpLT_16s_C1R", "Java_org_opencv_objdetect_HOGDescriptor_get_1blockSize_10", "icv_w7_ippiMorphClose_8u_C4R_L", "icv_g9_ippiScaleC_64f8u_C1R", "icv_g9_ownscDFTfwd_9_scale_64fc", "icv_p8_ippiAbsDiff_16u_C1R", "icv_w7_ippiCopyReplicateBorder_16s_C3IR", "icv_p8_ippiTranspose_16s_C4IR", "icv_p8_ownippiThreshold_16s_C1", "_ZN3tbb8internal13handle_perrorEiPKc", "icv_s8_ippiResizeLanczos_32f_C3R_L", "icv_p8_ownNormRel_L2_32f_C1MR_W7", "icv_h9_ownscDftReord_32fc", "icv_p8_owns_cFFTinv_16_scale_32fc", "icv_w7_owniGetRectBottomBF_8u_C3R", "ippicviFilterMedianBorder_16s_C4R", "icv_s8_ownSS4_83_16s", "_ZN2cv3ocl5Queue6createERKNS0_7ContextERKNS0_6DeviceE", "icv_g9_ippiScaleC_16u16s_C1R", "icv_p8_ippiScaleC_64f_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_X", "icv_w7_ownsrDFTfwd_15_scale_32f", "icv_w7_ippsCopy_64f", "icv_w7_ownLaplCol5x5_8u_C4", "icv_h9_ippiConvert_32f8u_C1R", "icv_w7_ownippiThreshold_GLV_16s_C3", "icv_s8_ownippiFilterMax_16u_Row", "icv_p8_ippiScaleC_16u_C1R", "icv_h9_owniResizeSuperInit", "icv_h9_ownsrDFTfwd_7_32f", "icv_s8_ownpi_WarpAffine_NN_32_C3", "icv_p8_ippiCompare_32f_C1R", "icv_g9_ownResize3Nearest16s", "icv_g9_ippsFFTGetSize_R_64f", "icv_w7_ownResize3Lanczos2_32f", "_Z28vector_vector_Point3f_to_MatRSt6vectorIS_IN2cv7Point3_IfEESaIS2_EESaIS4_EERNS0_3MatE", "icv_g9_owns_initDctFwd_Fft_32f", "icv_s8_ippiCopy_16s_C3P3R", "icv_s8_ownAddSquare_8u32f_C1IR_W7", "Java_org_opencv_core_Core_solve_10", "_ZN2cv11FileStorageD1Ev", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_W7", "icv_s8_ippiSum_32f_C3R", "_ZN3tbb8internal34initialize_cache_aligned_allocatorEv", "Java_org_opencv_core_Mat_nGet", "_ZN2cv3ocl13ProgramSourceC1EPKc", "icv_g9_ownsrDFTinv_14_64f", "_ZN2cv3hal6log64fEPKdPdi", "icv_p8_ippiThreshold_LTVal_8u_C1R", "icv_h9_cv_ownippiFilterMin_16s_Row", "icv_g9_ownscDFTinv_10_scale_32fc", "icv_g9_ownpi_WarpAffine_L_Const_64f_C3", "icv_p8_ippiFilterMax_32f_Row_A6", "icv_h9_ippsSinCos_64f_A50", "icv_w7_ownpi_WarpAffine_NN_Mem_32f_C4", "icv_s8_ippiCopyConstBorder_32f_C3R_L", "icv_p8_ownpi_dInterVectorClip_NN_8_P3", "cvResetImageROI", "icv_p8_DotProd_64f", "icv_g9_piFilterBoxBorder_32f_C1IR_2_v8u8_NA", "Java_org_opencv_ml_TrainData_getNSamples_10", "icv_n0_own_ipps_dRound_P8HAynn", "Java_org_opencv_imgproc_Imgproc_distanceTransform_11", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_W7", "icv_g9_ippiSub_8u_C1RSfs", "icv_h9_ownAbsDiff_8u_C1R", "Java_org_opencv_features2d_DescriptorExtractor_read_10", "icv_p8_ippiTranspose_16u_C1R", "icv_g9_ownpi_WarpSimpleNearest_8u_C1R", "_ZN2cv20initWideAngleProjMapERKNS_11_InputArrayES2_NS_5Size_IiEEiiRKNS_12_OutputArrayES7_id", "_ZN2cv11SVBackSubstERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayE", "WebPGetFeaturesInternal", "icv_h9_ownscDFTinv_9_scale_64fc", "icv_p8_owniCmpLess_16u_C1R", "_ZN2cv14createTrackbarERKNS_6StringES2_PiiPFviPvES4_", "cvThreshold", "icv_g9_owniFilter32f_16u_C4R_g9e9_4", "Java_org_opencv_objdetect_HOGDescriptor_load_11", "icv_h9_ownpi_WarpSimpleGetSize", "icv_s8_ippiFilterSobelHorizBorderGetBufferSize", "icv_p8_ownsSet_8u", "Java_org_opencv_video_BackgroundSubtractorMOG2_setShadowThreshold_10", "icv_w7_ippiMirror_8u_C3R", "_ZN2cv9videostab15VideoFileSource5resetEv", "ippicviTranspose_16s_C1R", "icv_w7_ownResize1Nearest16s", "icv_w7_ownpi_XorC_32s_C1R", "icv_h9_ippiFilterBoxBorder_16s_C1R", "icv_g9_ippsSin_32f_A24", "_ZN2cv3dnn19experimental_dnn_v15Layer8setScaleERKNS_3PtrINS1_10ScaleLayerEEE", "icv_h9_owniCrossCorrValid_NormLevel_32f_C1R", "icv_s8_ownippiThreshold_LV_8u_C4", "_ZN2cv2ml9ParamGrid6createEddd", "icv_s8_ownpi_NormInfRel_8u_C1R", "icv_h9_owniResizeAntialiasing_16u_C3R_L", "icv_s8_ippiCopy_16s_C1MR", "icv_p8_ownpi_WarpAffineSimpleLinear_8u_C1R", "icv_s8_ownCubicKernelAA", "icv_p8_ownsSet_64s", "ippicviMinMaxIndx_16u_C1R", "icv_w7_owniResizeSuper_16u_C3R", "icv_h9_ownscDftFwd_Prime5_32fc", "icv_s8_ownsConvert_16s64f_Sfs_W7", "icv_g9_ownsSub_8u_Bound", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_10", "icv_g9_ippiHistogram_16u_C1R", "icv_s8_ownpi_CountInRange_32f_C1R", "_ZNK2cv8Subdiv2D7edgeDstEiPNS_6Point_IfEE", "icv_w7_ownippsCnvrt_16s32f", "icv_h9_ippiScaleC_32f_C1R", "icv_s8_ownsrDftFwdRecombine_64f", "icv_w7_ownCalcBorderR4Antialiasing_8u", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_3x3", "icv_w7_ippiNormDiff_L1_32f_C3CMR", "icv_p8_ownsrDFTinv_7_scale_64f", "icv_p8_ippiFilterMedianBorderGetBufferSize", "icv_w7_ownippiFilterMin_16s_Col", "_ZN3tbb8internal17generic_scheduler17publish_task_poolEv", "Java_org_opencv_ml_EM_load_11", "icv_p8_ownSS3_52_32f", "Java_org_opencv_imgproc_Imgproc_getGaussianKernel_10", "icv_s8_ownsrDFTinv_7_scale_64f", "Java_org_opencv_features2d_GFTTDetector_getBlockSize_10", "icv_s8_owns_rFFTinv_16_64f", "WebPInitDecoderConfigInternal", "icv_g9_ownpi_WarpAffineSimpleCubic_16u_C1R", "icv_p8_owns_rFFTfwd_32_64f", "icv_g9_cv_ownippiFilterMin_16s_Msk", "icv_s8_ownpi_Set_64f_C1R", "_ZNK2cv3ocl6Device13driverVersionEv", "icv_w7_ownscDFTinv_14_64fc", "Java_org_opencv_calib3d_Calib3d_findChessboardCorners_10", "icv_w7_ippiCopyReplicateBorder_32f_C3R_L", "icv_w7_ownCalcBorderR4Antialiasing_16s", "icv_g9_owniScaleC_8u8s_C1R_acc", "icv_s8_ownsAdd_8u_1Sfs", "cvWarpAffine", "icv_w7_owniSet_8u_C4_W7", "icv_w7_ownNorm_Inf_32f_C3CMR_W7", "icv_s8_ownpi_dInterVector_NN_8_C3", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithStats_11", "icv_p8_ippiResizeCubic_8u_C4R_L", "icv_p8_ippsCopy_32f", "icv_p8_ownpi_WarpAffine_L_Mem_64f_C3", "icv_w7_ownSumSq_32f_C3CR_W7_Al", "icv_w7_ownpi_Rotate180_32_C4R", "icv_w7_owns_cFFTinv_4_64fc", "icv_g9_ippiScaleC_32f_C1IR", "Java_org_opencv_core_Mat_n_1channels", "icv_w7_ippiMirror_32s_C4IR", "icv_w7_ownpi_And_8u_C1R", "Java_org_opencv_calib3d_StereoBM_getPreFilterSize_10", "icv_p8_ownippiFilterxBrd_32f_C3R", "icv_h9_ownippiFilterMedianHoriz_8u_C3R", "icv_g9_ownpi_WarpSimpleNearestInit", "icv_g9_ippiCopyReplicateBorder_8u_C3R_L", "icv_p8_ownscDftFwd_Prime_32fc", "icv_p8_ownsrDFTinv_15_32f", "_ZNK2cv3ocl6Device22imageFromBufferSupportEv", "icv_w7_owns_cFFTfwd_4_64fc", "_ZN2cv3ocl5Queue10getDefaultEv", "icv_w7_ippiMinMaxIndx_16u_C1MR", "icv_s8_ownpi_WarpAffine_NN_32_P4", "icv_h9_ippsFFTGetSize_C_32fc", "icv_g9_ownpi_CmpLE_8u_C1R", "icv_s8_ippiScaleC_64f16s_C1R", "Java_org_opencv_objdetect_HOGDescriptor_get_1svmDetector_10", "icv_p8_ippiDilateGetSpecSize_L", "icv_h9_owniThreshold_Val_16s_C1R", "icv_s8_ownscDFTinv_14_32fc", "Java_org_opencv_ml_TrainData_getSubVector_10", "icv_s8_ownpi_dInterVector_L_8u_C1", "icv_s8_ownscDFTinv_14_scale_64fc", "icv_g9_ownippiFilterMedianSqr_16s_C4R", "ippicvsSortRadixIndexAscend_16s", "icv_s8_ownsAdd_8u_Bound", "icv_w7_ownpi_WarpAffine_NN_Repl_8u_C4", "icv_s8_ownsrDFTfwd_12_scale_64f", "icv_s8_ownpi_Rotate180_64_C1R", "icv_p8_ownNormRel_Inf_16u_C3CMR_V8", "icv_n0_own_ipps_sLn_S9HAynn", "icv_p8_ownpi_Rotate180_16_C4R", "icv_p8_ownAFilterRow_16s_AC4R", "icv_p8_ippiFilterScharrVertMaskBorder_32f_C1R", "icv_g9_ownippiFilterxBrd32f_8u_C3R", "icv_p8_ownpi_WarpAffine_L_Const_16u_C4", "icv_g9_owns_rFFT_2_64f", "icv_w7_ownsSub_8u_Bound", "icv_p8_owns_sDctFwd_Conv_32f", "icv_s8_ippiScaleC_32f16s_C1R", "_ZN2cv9softfloatC2Ei", "icv_s8_owniFilterScharrHorizMaskBorder2_16s_C1R", "ippicviScaleC_16s32s_C1R", "icv_s8_owniClipRectZeroTail_16u32f_C1R", "Java_org_opencv_dnn_Net_setInput_10", "icv_w7_ippsMulC_32f_I", "icv_s8_owniSwapChannels_8u_AC4R", "icv_g9_owniFilterMedianSqr3x3_32f_C1R", "icv_p8_ippsMagnitude_32f", "icv_g9_ownsrDFTfwd_7_scale_32f", "icv_g9_ownResize1Nearest32f", "icv_s8_ownWarpSimple4Nearest64f", "Java_org_opencv_imgproc_Subdiv2D_nextEdge_10", "icv_h9_ippiColorToGray_32f_C3C1R", "icv_p8_ownpi_WarpSimpleNearest_8u_C3R", "icv_h9_ippiCrossCorrNorm_8u32f_C1R", "icv_s8_ippiResizeLinear_32f_C4R_L", "_ZN2cv33createEMDL1HistogramCostExtractorEif", "icv_s8_ownpi_WarpAffineCubic_16s_C1R", "icv_p8_ippiResizeNearest_32f_C3R_L", "Java_org_opencv_features2d_BFMatcher_BFMatcher_11", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_V8", "_ZN2cv4cuda6GpuMatC1ENS_5Size_IiEEiPvj", "_ZN2cv3ocl7ContextaSERKS1_", "icv_p8_ippsMagnitude_64f", "Java_org_opencv_calib3d_Calib3d_validateDisparity_11", "ippicviNormDiff_Inf_32f_C3CMR", "icv_s8_ownscDftFwd_Prime7_64fc", "icv_p8_ownResize1Lanczos2_16s", "icv_h9_ownpi_WarpAffine_L_Repl_32f_C1", "icv_s8_ippiFilterBoxBorder_32f_C4R", "cvSaveMemStoragePos", "ippicviMarkSpecklesGetBufferSize", "icv_p8_ownscrDftFwd_Fact4_32f", "icv_p8_ippiMirror_32f_C4R", "icv_s8_ownpi_WarpAffine_CR_32f_C1", "icv_w7_ippiGradientVectorSobel_8u16s_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_X_V8", "icv_g9_ippiCopyReplicateBorder_32s_C4R", "icv_p8_owniScaleC_32s16s_C1R_acc", "icv_h9_ownsrDFTfwd_14_scale_64f", "icv_g9_owniFilter32f_16s_C4R_g9e9_2", "_ZN3tbb4task12change_groupERNS_18task_group_contextE", "cvPolarToCart", "icv_g9_ownpi_WarpAffine_C_Const_8u_C3", "icv_s8_ippiResizeNearestInit_L", "icv_s8_ownpi_dInterVector_NN_32_C1", "icv_p8_ownsAddC_32f_I", "icv_w7_ownpi_dInterVectorClip_L_8u_C3", "icv_h9_ownCubicKernel1", "icv_p8_owniCopyMirrorBorder_8u_C3R", "icv_n0_own_ipps_sAtan2_G9HAynn", "icv_p8_ippiResizeCubic_16u_C3R_L", "icv_h9_ippiWarpAffineLinear_16u_C1R", "icv_w7_ownippiFilterMedian_16u_C4R_3x3", "_ZN2cv16FileNodeIteratorC1Ev", "icv_w7_ownsPowOne", "icv_w7_ownsrDFTinv_10_scale_64f", "icv_s8_ippiTranspose_16s_C3R", "icv_s8_ownsConvert_32f64f_W7", "icv_g9_owniScaleC_32s8s_C1R_acc", "icv_s8_ownSS3_54_8u", "icv_p8_owniSet16sC1Mas", "ippicviFilterSobelNegVertBorder_8u16s_C1R", "icv_p8_ownippiThreshold_V_8u_C1", "icv_h9_ippiNorm_Inf_16u_C1MR", "_ZN2cv3dnn19experimental_dnn_v13NetC1Ev", "icv_s8_owniSet_32f_C4_W7", "icv_h9_ippiMorphOpen_32f_C4R_L", "icv_h9_owns_cFFTinv_4_scale_64fc", "icv_p8_ippsDFTFwd_CToC_32fc", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "icv_s8_owniFilterMedianBorderInMem_16s_C1R", "icv_s8_ownippiFilterMedianHoriz_16s_C3R_5x1", "icv_s8_ippiMorphTophat_8u_C3R_L", "_ZN2cv4cuda6GpuMat6createEiii", "icv_p8_ippiConvert_32s8s_C1R", "cvNorm", "icv_g9_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_s8_ownsrDFTinv_5_64f", "ippicviThreshold_GTVal_16s_C1R", "icv_s8_ippiNormDiff_L1_16u_C1R", "icv_g9_ownscDFTinv_9_scale_64fc", "cvComposeRT", "_ZN2cv4normERKNS_11_InputArrayEiS2_", "_ZN2cv12VideoCapture4openEii", "icv_p8_ownpi_WarpAffine_L_Const_16s_C4", "icv_p8_ippiCopy_16u_C3R", "icv_w7_ippiFilterMedian_8u_C1R_3x3_A6", "_ZNK2cv22SimpleBlobDetectorImpl5writeERNS_11FileStorageE", "icv_p8_ownColAntialiasing_16u", "icv_g9_ownippiFilterMedian_16u_C4R", "icv_s8_ownpi_WarpAffine_NN_Const_64f_C1", "Java_org_opencv_imgproc_Imgproc_circle_10", "icv_w7_ownpi_WarpAffineSimpleNearest_32f_C3R", "icv_p8_ippiWarpAffineLinearInit", "Java_org_opencv_core_Core_bitwise_1or_10", "Java_org_opencv_photo_MergeDebevec_process_11", "icv_h9_owniScaleC_32s64f_C1R_acc", "icv_s8_ownSumSq_32f_C1MR_W7", "icv_w7_ownSum_8u_C1MR_W7", "icv_p8_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short", "icv_w7_ownippsCnvrt_32f16f_Asm", "icv_p8_ownCopySubpix_8u_C1R_V8", "icv_h9_owns_rFFTinv_32_64f", "icv_w7_ownpi_WarpAffine_L_Mem_16s_C4", "Java_org_opencv_features2d_FeatureDetector_empty_10", "_ZN2cv2ml8KNearest6createEv", "icv_s8_owniCopy_8u_AC4C3R", "icv_w7_ippiCopyMirrorBorder_32s_C3R_L", "icv_p8_owniCCDiv_32f_C1IR", "icv_w7_owniResizeLinear_32f_C3R", "icv_s8_owniGetRectLeftBF_8u_C3R", "icv_p8_ippiResizeCubic_8u_C3R_L", "icv_p8_ownAddSquare_8u32f_C1IMR_W7", "_ZN2cv6detail18GraphCutSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_p8_owns_rFFTfwd_4_32f", "_ZNK2cv3PCA11backProjectERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_p8_ippiConvert_32f16u_C1RSfs", "Java_org_opencv_video_DualTVL1OpticalFlow_setTheta_10", "icv_p8_ippiScaleC_32s8s_C1R", "icv_p8_ipMirror45_16uC1R", "_ZN2cv5flann14LshIndexParamsC2Eiii", "ippicviHistogram_8u_C1R", "icv_h9_owniCopy8uas", "ippicviWarpAffineCubic_16s_C4R", "icv_s8_ownAConvert32s_16s", "icv_p8_ownsrDFTfwd_7_scale_32f", "icv_s8_ippiConvert_8s32f_C1R", "icv_w7_ippiMirror_32f_C3IR", "_ZN2cv3ocl13ProgramSourceC2Ev", "_ZNSt15__exception_ptr13exception_ptrC1Ev", "icv_w7_ownCalcBorderR4Lanczos2_16u", "icv_p8_owns_initDctInv_Conv_32f", "cvSeqInsertSlice", "icv_s8_ownscDFTfwd_11_32fc", "icv_s8_ownpi_Sum_32f_C1R", "icv_h9_ownpi_WarpAffine_C_Transp_64f_C4", "icv_p8_ownpi_WarpAffine_NN_Repl_32f_C3", "cvMinEnclosingCircle", "icv_w7_ownsrDFTfwd_13_32f", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_W7", "_ZN2cv3dnn19experimental_dnn_v113PriorBoxLayer6createERKNS1_11LayerParamsE", "ippicviMoments64f_32f_C1R", "icv_h9_ownippiFilterMax_8u_Row_h9l9", "icv_p8_ownAdd_8u32f_C1IMR_W7", "Java_org_opencv_ml_ANN_1MLP_setTrainMethod_10", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_V8", "icv_g9_owniSwapChannels_16u_C4C3R", "icv_n0_own_ipps_dSinCos_P8EPnnn", "icv_s8_ownpi_Sum_8u_C3R", "icv_h9_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_s8_owniGetRectBottom_16s", "icv_h9_ownSS4_32_16s", "Java_org_opencv_video_KalmanFilter_get_1controlMatrix_10", "icv_w7_owniCopyConstBorder_C4R_W7", "icv_w7_ippiScaleC_8s_C1R", "icv_s8_ippiErode_32f_C1R_L", "icv_g9_ippsFFTInv_CToC_64fc", "icv_w7_innerHLSToRGB_8u_C3R", "icv_s8_ippiCopyReplicateBorder_8u_C1R", "icv_w7_ownCalcBorderR3Lanczos3_16u", "icv_g9_ownpi_WarpAffine_NN_Const_16u_C3", "icv_w7_ippiSwapChannels_8u_C4R", "icv_p8_owns_initTabTwd_Large_32f", "ippicviNormDiff_L1_8u_C1R", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_X_G9E9cn", "icv_w7_ownpi_dInterVectorClip_NN_8_P4", "ippicviHistogram_16u_C1R", "ippicviMirror_16u_C1R", "icv_h9_ippiWarpAffineNearest_32f_C3R", "icv_g9_ippiConvert_16s8s_C1RSfs", "icv_s8_ownpi_WarpAffineSimpleLinear_8u_C1R", "icv_g9_owniCopy_8u_P3C3R", "icv_w7_ownpi_WarpAffineLinear_32f_C1R", "_ZN3tbb8internal13observer_list24do_notify_exit_observersEPNS0_14observer_proxyEb", "ippicviWarpAffineNearest_64f_C1R", "_ZN2cv3RNG4fillERKNS_17_InputOutputArrayEiRKNS_11_InputArrayES6_b", "icv_h9_piFilterBoxBorder_32f_C1IR_2_v8u8_NA", "_ZN2cv12findContoursERKNS_17_InputOutputArrayERKNS_12_OutputArrayEiiNS_6Point_IiEE", "icv_g9_owniFilterBilateralR1_InMem_8u_C3R_L", "icv_s8_ownpis_Min_16u_C1", "icv_h9_ownippiFilterxBrd32f_8u_C4R", "icv_h9_ippsFFTInv_PermToR_32f", "icv_s8_ippiFilterSobelVertBorder_8u16s_C1R", "icv_h9_ownRow3Filter2_8u", "icv_g9_dct_8x8_fwd_32f", "icv_p8_ownSS4_73_16u", "_ZN2cv3hal4or8uEPKhjS2_jPhjiiPv", "icv_h9_owniFilterBilateralR2_InMem_8u_C3R_px", "icv_p8_ippiSwapChannels_16u_C3C4R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork3runEv", "icv_s8_ownpis_Min_8u_AC4", "icv_p8_ownpi_dInterVector_NN_32_C3", "icv_w7_owniFlip_32s_C4I_W7", "icv_s8_ippiCopyMirrorBorder_32s_C4R", "icv_p8_ippiFilterBilateralBorder_8u_C1R_L", "icv_w7_ownippiThreshold_LV_16s_C4", "icv_p8_ownippiFilterMedianHoriz_16s_C4R_3x1", "_ZN2cv4cbrtERKNS_9softfloatE", "icv_s8_ownpi_WarpAffineSimpleLinear_16u_C4R", "icv_g9_ownWarpSimple4Nearest64f", "icv_p8_ippiCopyReplicateBorder_16u_C3R", "icv_s8_ownscDft_Conv_64fc", "icv_w7_ownippiFilterMedianHoriz_16u_C3R_3x1", "icv_w7_ippiThreshold_LTVal_8u_C1R", "icv_h9_ownsAdd_16s", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC1ERKS1_", "icv_g9_ippiWarpAffineLinear_16u_C3R", "_ZN2cv20createTonemapMantiukEfff", "icv_s8_owniFilter_32f_C3R_v8u8_4", "icv_s8_owniResizeCubicInit", "Java_org_opencv_ml_DTrees_getCVFolds_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_W7", "icv_h9_owns_cRealRecombine_64f", "ippicvsDFTInv_CToC_64fc", "icv_p8_owniFilter_32f_C1R_v8u8_1", "icv_p8_ownWarpSimple3Nearest64f", "icv_s8_ippiResizeAntialiasing_8u_C3R_L", "icv_s8_ownRow3Antialiasing_8u", "icv_g9_ownpi_Sum_32f_C3R_gs", "icv_w7_ownippiFilterMin_16u_Col", "icv_g9_ownscDftInv_PrimeFact_32fc", "icv_h9_ippiCopy_16u_C1C4R", "icv_p8_ippiSwapChannels_32s_C4R", "icv_g9_ownMorphInit_L", "icv_s8_ownsMul_32fc_I", "_ZN2cv3hal10warpAffineEiPKhjiiPhjiiPKdiiS5_", "icv_p8_ownSS1_52_32f", "icv_w7_ownRow1Cubic16u", "icv_s8_ippiThreshold_32f_AC4_A6asm", "_ZN2cv7ellipseERKNS_17_InputOutputArrayENS_6Point_IiEENS_5Size_IiEEdddRKNS_7Scalar_IdEEiii", "icv_w7_owniRCPack2DConj_32f_C1IR", "icv_h9_ippsCopy_8u", "icv_g9_ownsrDFTinv_15_scale_32f", "icv_p8_ownSS4_32f", "icv_h9_ownscDFTinv_3_scale_32fc", "icv_s8_ownCalcBorderR4Linear16s", "icv_h9_owniResizeSuper_16s_C1R", "Java_org_opencv_core_Core_convertFp16_10", "cvColorToScalar", "icv_s8_ownscDFTfwd_6_scale_64fc", "icv_s8_ownNorm_L1_8u_C3CMR_V8", "icv_g9_ownpi_WarpAffine_C_Transp_64f_C4", "icv_g9_ownpi_WarpAffineRect", "icv_g9_owniResizeLanczos_32f_C1R", "icv_h9_ownsrDFTinv_3_32f", "icv_g9_owniFilter32f_16u_C4R_g9e9_6", "cvReleaseMat", "icv_h9_ippiResizeLinear_16u_C3R_L", "icv_p8_ownNormDiff_L2_8u_C1MR_W7", "icv_g9_ownpi_CmpLE_16s_C1R", "_ZN2cv6detail7Blender4feedERKNS_11_InputArrayES4_NS_6Point_IiEE", "icv_s8_owniConvert_8u32s_W7", "icv_h9_owniResizeLanczos_16u_C1R", "icv_g9_ippiDCT8x8Inv_32f_C1", "icv_h9_owns_cFFTfwd_64_32fc", "ippicviSum_32f_C1R", "icv_g9_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "icv_p8_ippsSortRadixAscend_64f_I", "icv_s8_ownSuperKernel", "icv_h9_ippiWarpAffineLinear_8u_C4R", "icv_s8_owniFilterNegSobelVertBorder2_8u16s_C1R", "icv_h9_ippiMinMaxIndx_32f_C1MR", "icv_h9_ownResize3Lanczos3_32f", "icv_h9_ippiFilterScharrVertMaskBorder_16s_C1R", "icv_p8_ownCanny_16s8u_C1R_1_32s_W7", "icv_h9_ownscDFTfwd_12_scale_64fc", "icv_h9_ownGetPxl_8u", "icv_g9_ownpi_WarpAffine_L_Repl_8u_C4", "icv_w7_ownpi_WarpSimpleLinear_64f_C4R", "ippicviDilate_8u_C4R_L", "icv_s8_ownColLinear16s", "icv_g9_ippiNormDiff_Inf_8u_C1MR", "icv_w7_ownpi_WarpAffineNearest_8u_C4R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_W7", "icv_p8_ownAdd_8u32f_C1IR_W7", "icv_h9_owns_rFFTinv_16_32f", "icv_p8_ippiCopyMirrorBorder_8u_C3IR", "icv_h9_ippiResizeSuper_32f_C1R_L", "icv_s8_ownpi_Histogram_8u_C1R", "icv_h9_owniFilter_32f_C3R_g9e9_6", "Java_org_opencv_ml_LogisticRegression_create_10", "icv_s8_ownSS1_16s", "icv_g9_ownSS1_52_8u", "icv_w7_ownpi_CmpLE_16s_C1R", "Java_org_opencv_features2d_BRISK_create_10", "ippicviScaleC_8s8u_C1R", "icv_w7_ownpi_WarpAffine_NN_32_C1", "icv_w7_ownsExpOne_w7", "icv_h9_ownRow1Lanczos3_16s", "icv_g9_ippiFilterBorder_16u_C4R", "icv_g9_ippiScaleC_16u_C1IR", "_ZNK2cv4UMat6handleEi", "cvGraphRemoveEdgeByPtr", "icv_p8_ownippsCnvrt_32s64f", "icv_p8_ownsMinEvery_8u", "icv_h9_owniExchange256_8u", "icv_p8_ownSS4_32_16u", "_ZN2cv32createHausdorffDistanceExtractorEif", "icv_p8_ownsMul_8u_NegSfs", "icv_s8_ippiMean_StdDev_16u_C1MR", "icv_p8_owns_cCcsRecombine_32f", "ippicviFilterSobelHorizBorderGetBufferSize", "icv_g9_ippsDFTGetSize_R_64f", "_ZN2cv5AGASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEibi", "icv_s8_ownNormRel_L1_8s_C3CMR_V8", "icv_s8_ippiConvert_8u32f_C1R", "_ZN2cv3Mat19setDefaultAllocatorEPNS_12MatAllocatorE", "icv_h9_ippiNorm_Inf_8u_C3CMR", "Java_org_opencv_features2d_MSER_getDelta_10", "icv_w7_ownippiFilterMedian_8u_C3R_5x5", "icv_p8_ownpi_dInterVectorClip_L_32f_P4", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_W7", "icv_w7_owns_rFFTfwd_32_scale_32f", "icv_h9_ippiScaleC_8s64f_C1R", "icv_p8_owniCopy_8u_C3P3R_cn", "icv_w7_owniSqrDistanceNorm_Valid_32f_C1R", "icv_g9_ippiScaleC_32s64f_C1R", "icv_p8_ownSS4_94_16s", "_ZN9CvLevMarqC1Eii14CvTermCriteriab", "Java_org_opencv_features2d_BOWKMeansTrainer_BOWKMeansTrainer_10", "icv_w7_ownpi_dInterVector_L_16u_C4", "icv_g9_ippiAdd_32f_C1IMR", "icv_g9_ownsInitTabDftDir_64f", "icv_w7_ownCalcBorderR4Linear32f", "icv_g9_owniResizeSuper_16s_C1R", "icv_p8_ippiCopyMirrorBorder_32f_C1R", "icv_s8_ownNormDiff_Inf_8u_C3CMR_V8", "icv_h9_ownsrDFTfwd_15_scale_32f", "icv_w7_ownpi_NormL1_16s_C1R", "icv_g9_ownRow1Filter10_8u", "Java_org_opencv_video_SparsePyrLKOpticalFlow_create_11", "icv_g9_ownscDFTinv_12_64fc", "icv_w7_ownResize1Cubic32f", "ippicviWarpAffineCubic_8u_C3R", "icv_g9_ippiCopyConstBorder_8u_C1R_L", "icv_h9_ownippiFilterMedianVert_8u_1x3", "_ZN2cv3ogl6BufferC1Eiiijb", "icv_p8_ippiWarpAffineNearest_16u_C3R", "icv_s8_owniResizeLinear_16s_C4R", "icv_g9_owniTransposeWxH_32sC4", "icv_p8_ownColCubic8u", "icv_w7_ownMean_16u_C1MR_W7", "icv_g9_ownpi_WarpAffine_NN_Const_16u_C4", "_ZN2cv5traceERKNS_11_InputArrayE", "ippicviNormDiff_L2_8u_C1R", "icv_s8_ippiScaleC_16u8u_C1R", "icv_h9_ownpi_Rotate90_B_64_C1R", "ippicviWarpAffineNearest_64f_C3R", "icv_s8_ippiThreshold_LTVal_16s_C1R", "icv_p8_ownCanny_16s8u_C1R_1_16u_W7", "icv_g9_ippiMorphTophat_32f_C4R_L", "icv_p8_ippiCopy_32f_C3C1R", "icv_w7_ippiMirror_16u_C3IR", "icv_g9_ownscDFTfwd_15_scale_64fc", "icv_p8_ownpi_MinMax_32f_C4R", "icv_w7_ippsRound_64f", "icv_g9_owniFilter32f_16s_C1R_g9e9_3", "_ZN9CvLevMarq5clearEv", "_ZN2cv6detail21BestOf2NearestMatcherC2Ebfii", "_ZN2cv3ocl9KernelArgC1Ev", "icv_n0_own_ipps_sExp_G9LAynn", "icv_s8_owniFlip_16u_C3", "icv_g9_cv_ownippiFilterMax_32f_Msk", "icv_g9_ippiMorphOpen_32f_C3R_L", "icv_s8_ownpi_AndC_16u_C3R", "icv_h9_ownMean_StdDev_16u_C1MR_HSW", "icv_h9_ownpi_WarpAffine_L_Repl_8u_C4", "icv_p8_ownRow1Filter12_32f", "icv_w7_ownNorm_L2_8u_C1MR_W7", "icv_w7_ownpi_dInterVectorClip_L_8u_AC4", "icv_h9_owniFilter32f_8u_C1R_g9e9_2", "icv_g9_ownSS4_52_16u", "icv_s8_ownAddWeighted_32f_C1IMR_W7", "icv_w7_ownResize4Linear8u", "icv_h9_ownsrDFTfwd_9_64f", "_ZN2cv9softfloatC1Ei", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_V8", "icv_h9_ippiDilate_32f_C3R_L", "icv_p8_ownsIppsConvert_16s8s_Sfs", "icv_h9_ippiThreshold_LT_32f_C1R", "icv_s8_ownsInitTabDftDir_32f", "icv_h9_owniResizeAntialiasing_16s_C4R_L", "Java_org_opencv_core_Core_rotate_10", "icv_p8_ownSS3_52_8u", "icv_s8_ownRow3Cubic16s", "Java_org_opencv_photo_CalibrateCRF_delete", "icv_s8_ownpi_Rotate180_8_C4R", "icv_g9_owniScaleC_32f32f_C1R_acc", "icv_g9_ippiCopy_16u_P4C4R", "icv_s8_ownsrDFTinv_3_32f", "ippicviScaleC_16s16u_C1R", "icv_h9_ippiConvert_32f32s_C1RSfs", "icv_h9_ownpiDotProd_32s64f_C1R", "icv_g9_ownsSub_8u_1Sfs", "icv_w7_ippiNormDiff_L1_16u_C1MR", "icv_h9_ownResize1Nearest16s", "icv_h9_owniGetRectRight_32f", "cvCountNonZero", "icv_h9_ownsrDFTfwd_11_32f", "icv_s8_ownCopySubpix_16u_C1R_V8", "cvDestroyWindow", "icv_g9_ownSS4_65_8u", "icv_w7_ownippiFilterMedian_16s_C4R_3x3", "icv_s8_ownSS4_16s", "icv_s8_ownpi_WarpAffine_C_Mem_64f_C3", "ippicviSet_16u_C4R", "icv_s8_owniCopy8u_C4P4_A6", "icv_w7_setIndexCR", "icv_p8_ippsSqrt_32f_A21", "_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi", "icv_p8_ippiResizeLinear_16u_C4R_L", "icv_h9_gres_NormL2Rel_16u_C1R", "icv_p8_ownpi_WarpAffine_NN_8_C4", "icv_h9_ippiCopyMirrorBorder_8u_C3R", "icv_w7_ownSS1_8u", "icv_h9_ownCalcBorderR1Cubic16s", "icv_w7_ippiResizeLinear_64f_C4R_L", "icv_h9_ippiSwapChannels_8u_C3C4R", "ippicvsMinEvery_16u", "icv_w7_ownsrDftFwd_Conv_32f", "icv_p8_ippsCosOne", "Java_org_opencv_imgcodecs_Imgcodecs_imwrite_10", "icv_s8_ippiCopyConstBorder_32s_C3R_L", "icv_s8_ownpi_WarpAffine_NN_Const_16u_C4", "icv_s8_ownpi_GetAffineTransformInverse", "icv_w7_ippiNormRel_L1_32f_C1R", "icv_s8_ownSS4_21_32f", "icv_g9_ownsrDFTinv_14_32f", "ippicviNorm_L2_32f_C1MR", "icv_p8_ippiCopy_32f_C1MR", "_ZN2cv20edgePreservingFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiff", "icv_h9_ownNormDiff_Inf_32f_C3CMR_HSW", "Java_org_opencv_core_Core_bitwise_1xor_10", "icv_s8_owniFilter_32f_C4R_v8u8_8", "icv_g9_ownpi_WarpAffine_L_Mem_64f_C1", "cvRemoveNodeFromTree", "icv_s8_ownResize3Nearest16u", "icv_h9_ownCalcBorderR3Lanczos2_16s", "icv_g9_owns_cFFTinv_8_32fc", "_ZN2cv12VideoCapture4openERKNS_6StringE", "icv_g9_ippiSet_32f_C3R", "icv_s8_ippiScaleC_16s32s_C1R", "icv_g9_owniResizeNearest_32f_C1R", "_ZN2cv3ocl7ContextC1Ev", "Java_org_opencv_core_Mat_n_1colRange", "icv_g9_ippiCopy_16u_C3R", "icv_p8_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_s8_ippiCopy_8u_C3AC4R", "Java_org_opencv_core_Core_perspectiveTransform_10", "icv_w7_ownsrDFTfwd_5_scale_64f", "icv_w7_ippiMulPack_32f_C1R", "icv_p8_ownpi_WarpAffine_C_Transp_8u_C3", "icv_g9_ownsrDFTinv_13_64f", "icv_w7_ownSq_32f_C1R_W7", "icv_s8_ownpi_WarpAffine_C_Transp_16s_C4", "icv_p8_owncvGetMaxNumThreads", "icv_p8_ownResize1Cubic8u", "icv_h9_ownpi_WarpAffine_C_Transp_64f_C1", "icv_g9_ownRow3Lanczos3_8u", "cvDilate", "icv_h9_ippiResizeCubic_8u_C3R_L", "icv_w7_ippiWarpAffineNearest_64f_C4R", "icv_s8_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_h9_ownResize3Antialiasing_16u", "icv_s8_owns_crFftFwd_Fact4_Last_64f", "icv_p8_ownpi_WarpAffine_NN_32_P4", "_ZN2cv4cuda5Event11elapsedTimeERKS1_S3_", "icv_s8_ownpi_dInterVector_NN_8_C1", "icv_g9_ippiCopyReplicateBorder_32f_C4R", "icv_h9_ownRow3Lanczos3_8u", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_V8", "Java_org_opencv_core_Core_addWeighted_11", "icv_h9_ownCalcBorderR4Cubic8u", "icv_p8_ownpi_WarpAffineRectFP", "ippicviMirror_16s_C4IR", "_ZN2cvplERKNS_3MatERKNS_7Scalar_IdEE", "icv_h9_owniTransposeWxH_32sC3", "icv_p8_ownpi_WarpAffine_C_Mem_16u_C4", "icv_g9_ippiCopyMirrorBorder_16u_C4IR", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_W7", "cvSetIPLAllocators", "icv_s8_innerRGBToHLS_8u_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_W7", "icv_w7_ownsZero_8u", "icv_p8_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_g9_ownsrDFTfwd_11_64f", "_ZN2cv8integralERKNS_11_InputArrayERKNS_12_OutputArrayEi", "_ZN2cv3maxERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "_ZN2cv3hal10absdiff16sEPKsjS2_jPsjiiPv", "Java_org_opencv_photo_AlignMTB_process_11", "_ZN2cv9videostab25ConsistentMosaicInpainterC2Ev", "_ZN2cv8superres24createFrameSource_CameraEi", "icv_p8_ownRow4Cubic16u", "icv_h9_ippiCopyConstBorder_32s_C4R", "icv_w7_ownpi_WarpSimpleCubic_32f_C1R", "icv_s8_ownSS4_52_8u", "icv_p8_ownpi_WarpAffineCubic_16u_C3R", "icv_g9_ownpi_WarpAffine_NN_Repl_16u_C3", "icv_w7_cv_ownippiFilterMin_32f_Row", "icv_g9_ownsrDftFwd_PrimeFact_64f", "_ZNK2cv12MatAllocator23getBufferPoolControllerEPKc", "_ZN2cv4UMat3eyeENS_5Size_IiEEi", "icv_p8_owns_crFftInv_Fact4_Last_32f", "_ZN10__cxxabiv117__class_type_infoD1Ev", "cvCreateStereoBMState", "Java_org_opencv_calib3d_StereoSGBM_create_10", "icv_g9_ippiCopyReplicateBorder_16s_C3R", "_ZN9CvLevMarq9updateAltERPK5CvMatRPS0_S5_RPd", "icv_h9_ippiCopyReplicateBorder_32s_C1IR_L", "icv_p8_owns_cFFTfwd_4_64fc", "icv_w7_owniCopy32s_C3P3_W7", "icv_w7_owniResizeCubic_32f_C4R", "icv_g9_ownsrDFTinv_6_64f", "icv_g9_owniCopy_16s_C3P3R_cn", "icv_p8_ownpi_WarpAffine_L_Mem_32f_C1", "icv_g9_owns_rFFTinv_16_64f", "icv_p8_ownpi_WarpSimpleCubic_8u_C1R", "Java_org_opencv_features2d_ORB_getFastThreshold_10", "icv_h9_ippiScaleC_16u32s_C1R", "icv_p8_ownpi_dInterVector_L_8u_C4", "icv_g9_ippiMorphClose_8u_C3R_L", "icv_g9_ownps_Mul_16u_Sfs", "icv_g9_ownCubicKernel3", "_ZN2cv17rectify3CollinearERKNS_11_InputArrayES2_S2_S2_S2_S2_S2_S2_NS_5Size_IiEES2_S2_S2_S2_RKNS_12_OutputArrayES7_S7_S7_S7_S7_S7_dS4_PNS_5Rect_IiEESA_i", "icv_g9_ippiWarpAffineNearest_32f_C1R", "icv_p8_ippiNorm_Inf_8u_C1R", "icv_h9_ippsSet_32s", "icv_h9_owniScaleC_8s32f_C1R_fst", "icv_w7_owniCopy32s_P4C4_W7", "icv_w7_owniFilterBilateralR2_InMem_32f_C1R_px", "icv_h9_ownFilter32f_8u_C4R_g9e9", "icv_p8_ownCalcBorderR4Lanczos3_32f", "icv_g9_ippiRGBToGray_32f_AC4C1R", "icv_g9_ownFilterBoxBorderInMem3x3_8u_C1R", "_ZN3tbb8internal6market16update_allotmentERNS0_14intrusive_listINS0_5arenaEEEii", "icv_g9_owniFilter_32f_C3R_g9e9_2", "_ZN2cv3ogl9Texture2DC1Ev", "icv_p8_ownpi_Rotate180_32_C4R", "icv_w7_ippiCompare_8u_C1R", "icv_g9_ippiFilterMedianBorder_16u_C4R", "icv_g9_owniResizeNearest_16s_C4R", "icv_h9_ippiNormDiff_L1_16s_C1R", "icv_w7_owniResizeLinear_16u_C4R", "icv_s8_ownippiThreshold_V_16s_C1", "icv_g9_ippiFilterSobelHorizBorder_32f_C1R", "icv_p8_ownSS3vertical_8u", "Java_org_opencv_features2d_MSER_getMinArea_10", "icv_s8_owniCopyBF_32f_C3R", "icv_p8_ownAddWeighted_8u32f_C1IMR_P8", "cvGetSize", "_ZN2cv16setMouseCallbackERKNS_6StringEPFviiiiPvES3_", "icv_h9_ownsSub_16s_PosSfs", "_ZN2cv2ml6DTrees4loadERKNS_6StringES4_", "icv_w7_ownpi_WarpAffineSimpleNearest_64f_C1R", "icv_g9_owns_initTabBitRev", "icv_g9_ippiFilterBilateralBorderInit_L", "icv_p8_ippiScaleC_32s16u_C1R", "icv_s8_ownpi_NormL1Rel_16s_C1R", "icv_g9_ownscDFTinv_14_32fc", "icv_h9_ownSS1_52_16s", "_ZN2cv7directx23convertToD3D10Texture2DERKNS_11_InputArrayEP15ID3D10Texture2D", "ippicviFilterBorderInit_16s", "icv_s8_ownSS1_98_16s", "icv_p8_owniResizeCubic_8u_C1R", "icv_g9_ownpi_WarpAffine_NN_Mem_64f_C1", "iwiRoi_CorrectBordersOverlap", "icv_s8_ownMorphInit_1u_L", "icv_s8_ownsExpOne", "icv_p8_ownSS4_43_16s", "_ZN2cv4readERKNS_8FileNodeERii", "icv_p8_ippiCopyConstBorder_32f_C1R", "icv_g9_owniResizeLinear_16u_C1R", "icv_w7_ownpi_MaxIndx_8u_C1R", "icv_p8_ownpi_dInterVectorClip_L_32f_P3", "icv_w7_ownColLanczos3_32f", "icv_p8_ownpi_WarpAffineSimpleLinear_64f_C1R", "icv_s8_ownpi_WarpAffine_L_Const_32f_C1", "icv_g9_ippiNorm_Inf_16u_C1R", "icv_s8_owniCrossCorrNorm_FullSame_32f_C1R", "icv_s8_ownHipass5x5Frs_16s", "icv_p8_ippiScaleC_8u64f_C1R", "icv_p8_owniClipRectZeroTail_32f_C1R", "icv_s8_ippiSet_32s_C4R", "icv_w7_ownscDftFwd_Prime4_32fc", "icv_p8_ownSS4_43_16u", "ippicviMirror_32f_C3R", "Java_org_opencv_imgproc_Imgproc_pyrMeanShiftFiltering_11", "icv_g9_owniFilter32f_16s_C3R_g9e9_4", "_Unwind_SetIP", "icv_s8_ownippiThreshold_GLV_32f_C3", "icv_s8_CopyWithBorder32f", "icv_h9_ownSS1_21_16u", "icv_p8_ippiConvert_32f32s_C1RSfs", "_ZN2cv8Stitcher6stitchERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZNSt15__exception_ptreqERKNS_13exception_ptrES2_", "icv_p8_ownpi_WarpAffineSimpleLinear_16s_C1R", "icv_h9_ippiCopy_32f_C1R", "icv_w7_ownpi_AndC_32s_C4R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7", "icv_g9_ownscDftInv_Prime3_32fc", "icv_s8_ownSS4_52_16u", "icv_w7_ownCalcBorderR3Lanczos2_16u", "icv_g9_ippiCopyMirrorBorder_16u_C3R", "icv_s8_owns_crFftInv_Fact4_Last_32f", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EEid", "icv_w7_ippiSum_8u_C1R", "_ZN10__cxxabiv116__enum_type_infoD1Ev", "icv_h9_ippiMinMaxIndx_8u_C1MR", "icv_g9_ownscDftFwd_Prime11_32fc", "Java_org_opencv_video_KalmanFilter_set_1errorCovPost_10", "icv_g9_ippiWarpAffineLinear_8u_C3R", "icv_h9_ownscDFTinv_3_64fc", "icv_h9_ownSS1_52_16u", "_ZNK2cv4cuda10DeviceInfo17maxSurfaceCubemapEv", "icv_h9_ippiFilterBilateralBorderInit", "icv_p8_ownpi_WarpSimpleNearest_32f_C4R", "_ZN2cv11VideoWriterC2ERKNS_6StringEiidNS_5Size_IiEEb", "icv_h9_ownCalcBorderR3Lanczos2_8u", "icv_g9_ownColLinear64f", "icv_h9_owniFilter_32f_C4R_g9e9_8", "icv_p8_ippiDFTInv_PackToR_32f_C1R", "icv_w7_ownsrDFTinv_12_64f", "icv_h9_ippiNormDiff_Inf_8u_C1R", "_ZN3tbb8internal17generic_scheduler14free_schedulerEv", "_ZN2cv4UMat5zerosEiii", "icv_g9_ippiDCTInvGetSize_32f", "icv_w7_ippiScaleC_16u32f_C1R", "icv_s8_ownSS1_53_8u", "icv_p8_owns_BitRev2_8", "icv_g9_L1magnitude_16s", "icv_h9_ownNorm_L1_16u_C3CMR_HSW", "icv_w7_ownRow4Cubic8u", "icv_p8_ownAFilterRow32f_16s_C1R", "icv_s8_ippiMorphBlackhat_16u_C1R_L", "icv_w7_ownResize4Lanczos3_16u", "icv_s8_DotProd_64fc", "icv_h9_ippiCopyMirrorBorder_32s_C3IR", "icv_w7_ownpi_CmpEQ_32f_C1R", "icv_g9_ownpi_WarpAffineSimpleCubic_16s_C3R", "_ZN2cv4cuda6GpuMatC1EiiiPvj", "_ZN10__cxxabiv119__pointer_type_infoD1Ev", "icv_w7_ownippsCnvrt_16u32f", "icv_s8_ippiTranspose_32f_C1R", "icv_s8_ownCalcBorderR1Linear8u", "icv_p8_innerRGBToHLS_8u_C3R", "icv_h9_ownLanczosKernel3", "Java_org_opencv_ml_SVMSGD_getMarginType_10", "icv_w7_ownpi_WarpAffine_C_Transp_8u_C1", "icv_g9_ownCalcBorderR4Linear16u", "icv_p8_owniScaleC_16s64f_C1R_acc", "icv_p8_cv_ownippiFilterMin_32f_Col", "icv_g9_owniFilterPrewittVertBorder2_8u16s_C1R", "icv_w7_ippiDilateInit_L", "icv_w7_owniResizeNearest_32f_C1R", "_ZN2cvgtEdRKNS_3MatE", "icv_w7_ownpi_AndC_8u_C4R", "icv_w7_ownNormRel_Inf_16u_C3CMR_W7", "icv_w7_owniTranspose_32s_C4R_W7", "icv_h9_ownpi_WarpAffineCubic_64f_C1R", "_ZN2cv6seqPopEP5CvSeqPv", "icv_w7_ownsrDFTfwd_10_scale_32f", "_ZN2cv3ocl6Device10getDefaultEv", "icv_w7_ownSumSq_32f_C3CR_W7", "icv_w7_ownCalcBorderR4Lanczos2_8u", "icv_h9_owns_cFFTinv_32_scale_64fc", "icv_w7_ownpi_dInterVector_L_8u_AC4", "icv_h9_ippiResizeLinear_16u_C4R_L", "cvBackProjectPCA", "icv_p8_ownRow3Linear64f", "icv_h9_ippsCos_64f_A53", "_ZN2cv13matchTemplateERKNS_11_InputArrayES2_RKNS_12_OutputArrayEiS2_", "icv_w7_ownpi_NormL2_32f_C1R", "icv_h9_ippiCopy_16u_C1MR", "icv_g9_ippiSet_8u_C4MR", "icv_w7_owniFilterBilateralR1_InMem_32f_C3R_px", "icv_p8_owns_initTabBitRev", "icv_p8_owniFilterPrewittHorizBorder2_16s_C1R", "icv_g9_ownscDFTinv_6_scale_32fc", "icv_p8_ippiCopyMirrorBorder_32s_C3IR_L", "icv_s8_ippiWarpAffineNearest_8u_C4R", "icv_s8_owniFilter_32f_C3R_v8u8_8", "icv_w7_ownpi_dInterVector_L_16u_P3", "iwiFilterCanny", "_ZN2cv17DescriptorMatcher4readERKNS_8FileNodeE", "icv_w7_ownpi_WarpAffine_C_Mem_64f_C1", "Java_org_opencv_features2d_Features2d_drawMatchesKnn_11", "_ZN2cv3powERKNS_9softfloatES2_", "icv_w7_owniResizeAntialiasing_32f_C3R_L", "icv_w7_piFilterBoxBorder_32f_C1R_px", "_ZN2cv3ocl6DeviceC2ERKS1_", "icv_p8_owns_BitRev2_Z", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_W7", "Java_org_opencv_imgproc_Imgproc_dilate_11", "icv_h9_ownSS4_8u", "icv_w7_owns_rFFTinv_8_32f", "cvGetNormalizedCentralMoment", "icv_s8_ownpi_WarpSimpleCubic_16u_C4R", "icv_w7_ownNormRel_Inf_32f_C3CMR_W7", "JNI_OnLoad", "_ZN2cv6detail14FeatherBlender4feedERKNS_11_InputArrayES4_NS_6Point_IiEE", "icv_s8_ownAConvert_Round32s_16s_AC4R", "ippicvsSortRadixGetBufferSize", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "icv_h9_innerNormL2_5x5", "icv_g9_owniConvert_16s8s_ccode", "icv_g9_owniScaleC_8s32s_C1R_fst", "icv_p8_ippiScaleC_8u_C1R", "icv_g9_ownippiFilterMedianVert_16u_C4R", "icv_p8_ownCopySubpix_16u_C1R_V8", "icv_w7_ownpi_WarpSimpleLinear_16s_C4R", "icv_g9_ownpi_WarpAffineSimpleCubic_32f_C4R", "icv_g9_ippiNormRel_Inf_16u_C1MR", "_Z6cvCeilRKN2cv10softdoubleE", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_W7", "Java_org_opencv_photo_TonemapDurand_setContrast_10", "icv_w7_ippiFilterBilateralBorder_8u_C3R_L", "icv_s8_ownCopySubpix_16u32f_C1R_W7", "_ZNK2cv11_InputArray13getUMatVectorERSt6vectorINS_4UMatESaIS2_EE", "icv_p8_ownpi_OrC_32s_C3R", "icv_h9_ippiTranspose_16s_C3IR", "icv_w7_ownpi_WarpAffine_CR_8u_C3", "icv_p8_ownCalcBorderR4Cubic8u", "icv_s8_ippsDFTInv_PackToR_32f", "iwiRoiPipeline_Init", "_ZN2cv3hal9magnitudeEPKdS2_Pdi", "icv_n0_own_ipps_dCos_S9EPnnn", "icv_s8_ownippiFilterMedianCross_16u_C3R_3x3", "icv_w7_ippiNorm_L1_8u_C1R", "_ZN2cv8SVDecompERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_i", "icv_p8_ownippiFilterMedian_16s_C1R_7x1", "icv_h9_innerCommonLoopW5_8u32f_C3R", "icv_s8_ownpis_Max_32f_C3", "Java_org_opencv_calib3d_StereoMatcher_getSpeckleRange_10", "icv_g9_ownpi_WarpAffine_C_Repl_64f_C1", "icv_p8_ippiScaleC_64f8u_C1R", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarThreshold_10", "icv_h9_ownpi_SmoothBorder", "icv_s8_ownBFilterRow32f_8u_C4R", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "icv_s8_ownpi_dInterVectorClip_L_32f_C1", "icv_p8_ownBFilterRow32f_8u_C1R", "icv_h9_ownippiFilterMedian_16s_C4R", "cvMerge", "Java_org_opencv_core_Core_norm_13", "_ZN2cv11matchShapesERKNS_11_InputArrayES2_id", "icv_s8_piFilter_8u_C1R", "icv_s8_ippiFilterLowpassGetBufferSize_32f_C1R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "icv_s8_ownpi_WarpAffine_L_Repl_8u_C1", "Java_org_opencv_imgproc_Imgproc_applyColorMap_11", "icv_g9_owniTranspose_32s_C1R_AVX", "icv_h9_owns_rFFTinv_16_scale_32f", "icv_w7_myHLSToRGB_8u_C3R", "icv_p8_ownRow3Linear32f", "icv_h9_ownColLinear8u", "icv_h9_owniConvert_16u32f", "icv_w7_ownpis_Indx_32f_C3", "icv_s8_ippiCopy_16u_AC4C3R", "icv_g9_owniScaleC_8u32f_C1R_fst", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_12", "cvReadChainPoint", "icv_h9_ippiNormDiff_Inf_32f_C1MR", "icv_h9_ippiDilate_16u_C1R_L", "icv_s8_ownippiFilterxBrd32f_8u_C4R", "ippicviNorm_Inf_16u_C1R", "icv_w7_ownippiFilterMedianVert_16u_C4R_1x3", "_ZN2cv8superres23createOptFlow_Brox_CUDAEv", "icv_g9_owniFilterScharrHorizMaskBorder2_8u16s_C1R", "icv_p8_ippiGradientVectorSobel_32f_C1R", "icv_s8_ownpi_WarpAffineLinear_32f_C3R", "icv_g9_ownRow3Cubic16s", "icv_n0_own_ipps_sExp_G9HAynn", "ippicviScaleC_16s_C1IR", "icv_s8_ownippiFilterMedianVert_16u_C4R", "cvRunningAvg", "icv_h9_ownSS4vertical_16u", "cvCreateSeqBlock", "icv_g9_ippiMinEigenValGetBufferSize_32f_C1R", "icv_s8_ownpi_dInterVectorClip_L_16u_P4", "Java_org_opencv_imgproc_Subdiv2D_insert_10", "icv_p8_ownCalcBorderR4Linear16s", "_Z26vector_vector_Point_to_MatRSt6vectorIS_IN2cv6Point_IiEESaIS2_EESaIS4_EERNS0_3MatE", "icv_p8_ownsExpOneF_w7", "icv_g9_ownscDftInv_Fact5_64fc", "icv_p8_ownscDFTfwd_9_64fc", "icv_w7_owns_cFFTinv_16_32fc", "icv_h9_ippiResizeSuper_16u_C1R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_3x3", "_ZNK2cv3dnn19experimental_dnn_v13Net20getMemoryConsumptionERKSt6vectorIS3_IiSaIiEESaIS5_EERjSA_", "icv_p8_ownAddSquare_8s32f_C1IMR_W7", "_Z21Mat_to_vector_Point2dRN2cv3MatERSt6vectorINS_6Point_IdEESaIS4_EE", "own_ipps_sSinCos_SC_HA", "iwiFilterCannyDeriv", "icv_g9_owniScaleC_8s16u_C1R_fst", "_ZN2cv3hal6add64fEPKdjS2_jPdjiiPv", "VP8GetInfo", "icv_s8_ownsExpOne_w7", "icv_s8_ownRow1Filter10_8u", "icv_p8_ownNorm_L2_16u_C1MR_W7", "icv_p8_owniResizeNearest_16s_C3R", "ippicviErodeGetSpecSize_L", "icv_p8_owniScaleC_32s64f_C1R_acc", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarMax_10", "icv_g9_ownDistanceTransform_5x5_8u32f_C1R_21B_g9e9", "icv_p8_ownResize3Nearest16u", "icv_w7_ippiFilterMedianCross_16u_C3R_5x5_A6", "icv_s8_ownpi_XorC_16u_AC4R", "_ZN2cv5flann17KDTreeIndexParamsC2Ei", "icv_s8_ippiCrossCorrNormGetBufferSize", "icv_h9_owniResizeLanczos_8u_C3R", "icv_p8_ippsFFTFwd_CToC_32fc", "_ZN2cv3dnn19experimental_dnn_v110ScaleLayer6createERKNS1_11LayerParamsE", "icv_g9_ippiSet_16u_C4MR", "icv_s8_ownpi_WarpAffine_NN_8_C4", "icv_g9_ownsrDFTinv_9_scale_64f", "icv_w7_ownpi_WarpSimpleNearest_8u_C3R", "icv_p8_ownFilterBoxBorderInMem3x3_16u_C1R", "icv_g9_ownscDFTinv_5_64fc", "_ZN2cv21DetectionBasedTracker10ParametersC1Ev", "icv_w7_ownpi_WarpAffine_C_Transp_32f_C4", "icv_s8_ownscrDftInv_Fact3_32f", "icv_w7_ownsrDFTinv_6_64f", "icv_h9_ownpi_Max_8u_C1R", "icv_h9_ownippiFilterMedianHoriz_16s_C4R", "icv_w7_ownsFloorOneF", "icv_s8_ippiCopyConstBorder_16s_C3R", "icv_s8_owns_rFFT_2_32f", "icv_s8_ownippsCnvrt_32s32f", "icv_s8_ownpi_WarpAffine_NN_Repl_64f_C1", "icv_w7_ippiFilterScharrVertMaskBorder_32f_C1R", "icv_s8_owns_cRadix4Inv_32fc", "Java_org_opencv_video_FarnebackOpticalFlow_setPolySigma_10", "icv_h9_cv_ownippiFilterMin_8u_Msk", "icv_p8_owniResizeGetSize", "icv_h9_ownpi_Max_32f_C1R", "icv_g9_ownscDftFwd_Prime16_32fc", "_ZNK2cv8Subdiv2D8QuadEdge6isfreeEv", "icv_h9_ippiCopyConstBorder_32s_C3R_L", "icv_w7_ownAbsDiff_8u_C1R_W7", "icv_h9_owniFilterMedianHoriz5x1_32f_C1R", "icv_h9_ippiNorm_L1_8u_C3CMR", "icv_p8_ownpi_dInterVectorClip_L_32f_C4", "_ZN2cv3hal13addWeighted8uEPKhjS2_jPhjiiPv", "icv_g9_ippiWarpAffineCubicInit", "icv_w7_ownpi_WarpAffine_NN_8_C3", "icv_p8_cv_ownippiFilterMin_16s_Msk", "_ZN2cveoERKNS_3MatES2_", "icv_s8_ippsSortRadixDescend_8u_I", "icv_h9_ownscDFTinv_12_scale_32fc", "icv_g9___svml4ipp_sexp_cout_rare", "icv_g9_owniClipRectZeroTail_32f_C1R", "icv_p8_myHLSToRGB_8u_C3R", "icv_w7_ippiCopySubpixIntersect_8u32f_C1R", "_ZN2cv9videostab18InpaintingPipeline9setRadiusEi", "icv_g9_ownpi_Rotate90_B_16_C3R", "icv_g9_piFilterBoxBorder_32f_C1R_1_v8u8_NA", "icv_h9_owniGetRectRightBF_32f_C1R", "Java_org_opencv_core_Mat_n_1eye__DDI", "icv_h9_owniGetRectComBF_8u_C1R", "icv_w7_ownSharpenRow_8u_C1", "ippicviNorm_Inf_16s_C1R", "icv_s8_ownscDft_Dir_64f", "icv_s8_ownNormDiff_Inf_8s_C1MR_W7", "icv_g9_ippiCopyReplicateBorder_16s_C1IR", "icv_g9_ownscDFTinv_3_scale_64fc", "icv_s8_ownippiFilterMedian_8u_C3R_3x3", "ippicviMirror_32s_C1IR", "icv_g9_ippsFFTGetSize_C_64fc", "_ZNK2cv14DefaultDeleterI13CvFileStorageEclEPS1_", "icv_h9_owniFilter32f_8u_C3R_g9e9_5", "icv_p8_ownRow4Linear8u", "cvGetOptimalDFTSize", "icv_h9_ippiAddProduct_32f_C1IR", "icv_h9_ownpi_dInterVectorClip_C_16u_C3", "_ZN2cv4UMatD2Ev", "_ZN2cv6detail23calibrateRotatingCameraERKSt6vectorINS_3MatESaIS2_EERS2_", "icv_s8_ippsDFTInv_PackToR_64f", "_ZN2cv5utils5trace7details6Region4ImplD1Ev", "icv_s8_ownCubicKernel3", "icv_h9_ownpi_WarpAffine_L_Mem_32f_C4", "icv_w7_ownpi_WarpAffine_L_Repl_32f_C1", "icv_w7_ownpi_idInterPoint_C_Plane_8u", "icv_g9_ippiWarpAffineLinear_64f_C3R", "icv_g9_ownpi_WarpSimpleLinear_16u_C1R", "icv_h9_ownpi_WarpAffine_NN_Mem_64f_C1", "Java_org_opencv_photo_Photo_createAlignMTB_10", "icv_s8_ippiScaleC_16u_C1R", "icv_h9_ownFilterRow32f_8u_C3R_g9e9", "icv_s8_ippiFilterSobelNegVertBorderGetBufferSize", "_ZN2cv3hal7gemm64fEPKdjS2_jdS2_jdPdjiiii", "Java_org_opencv_video_Video_findTransformECC_12", "icv_s8_owniFilter_32f_C3R_v8u8_7NA", "icv_p8_ownpi_WarpAffine_NN_Mem_64f_C1", "icv_p8_ownSS3_21_16u", "icv_s8_ippiCopy_16s_C4P4R", "icv_p8_ownippiFilterMedianSqr_8u_AC4R", "icv_p8_owniFilter_32f_C4R_v8u8_1NA", "icv_s8_ippiCopy_8u_P3C3R", "icv_w7_ippiScaleC_16s8s_C1R", "icv_s8_ownSS1_98_32f", "icv_h9_owniGetRectTopBF_8u_C1R", "icv_s8_ippiScaleC_32s16u_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_W7", "icv_g9_ownpi_WarpAffine_NN_Const_32f_C3", "icv_h9_owns_cFftInv_Large_32fc", "Java_org_opencv_core_Core_gemm_11", "Java_org_opencv_dnn_Net_getLayer_10", "icv_s8_ippiResizeLanczosInit_L", "ippicviMorphBlackhat_8u_C1R_L", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "icv_s8_ippiNormDiff_Inf_16u_C3CMR", "icv_w7_owniResizeLinear_16s_C4R", "icv_p8_ownDistanceTransform_3x3_8u_C1R_F_ND", "icv_p8_ownscrDftFwd_Prime4_32f", "ippicvsInvSqrt_64f_A50", "icv_s8_ippiCopy_32f_C4P4R", "icv_w7_ownWarpSimple4Nearest64f", "icv_h9_ownsZero_8u", "WebPGetInfo", "icv_s8_ippiNormDiff_L1_16s_C1R", "icv_s8_ownpi_SimpleRotate_16u_C4R", "icv_h9_owniConvert_32s8u", "icv_h9_ownippiFilterMedianSqr_16u_AC4R", "icv_h9_ippiScaleC_64f_C1R", "_ZN2cv11FileStorageD2Ev", "Java_org_opencv_imgproc_Imgproc_Scharr_11", "Java_org_opencv_video_FarnebackOpticalFlow_setNumIters_10", "icv_s8_ownSS3_53_16u", "icv_g9_owns_cFFTinv_64_32fc", "icv_h9_ownscDFTinv_12_scale_64fc", "icv_p8_ippiMean_8u_C3CMR", "icv_w7_ippiWarpAffineCubic_32f_C3R", "icv_w7_ippiFilterBorder_16s_C1R", "_ZN2cv9videostab18LpMotionStabilizer9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_", "Java_org_opencv_features2d_GFTTDetector_setHarrisDetector_10", "icv_w7_ownResize4Linear64f", "icv_g9_ownpi_NormInfDiff_16u_C1R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkC2ERS0_NS_3PtrINS0_9IDetectorEEERKNS0_10ParametersE", "icv_s8_ippiCopyConstBorder_32s_C1R", "icv_g9_ownippiFilterMedianCom_8u", "icv_p8_ippiFilterLaplacianBorder_32f_C1R", "icv_w7_ownNormRel_L1_16u_C1MR_W7", "icv_p8_ownippiFilterMedianHoriz_16s_BC4R_3x1", "icv_w7_owns_cFFT_2_scale_32fc", "icv_s8_owniResizeSuper_16u_C3R", "icv_h9_ownMean_StdDev_8u_C1MR_HSW", "icv_g9_ippsConvert_32f8u_Sfs", "icv_w7_owns_cFFTfwd_4_scale_32fc", "icv_w7_ippsCopy_32f", "icv_h9_owniFilter32f_16u_C4R_g9e9_4", "_ZN2cv4cuda5Event17waitForCompletionEv", "icv_h9_ippiCopy_8u_C4P4R", "icv_s8_owniCopy32sC1Mas", "icv_h9_owns_cFft_BlkSplit_64fc", "icv_h9_ippiCopy_32f_C4P4R", "icv_g9_ownippiFilterxBrd_8u_C3R", "_ZN2cv17getWindowPropertyERKNS_6StringEi", "icv_h9_ownColLinear32f", "ippicviFilterRowBorderPipelineGetBufferSize_32f_C3R", "icv_h9_ippiThreshold_LTVal_8u_C1R", "icv_g9_ownpi_WarpAffine_L_Mem_8u_C4", "icv_p8_ippiNormDiff_Inf_16u_C3CMR", "Java_org_opencv_ml_LogisticRegression_delete", "Java_org_opencv_imgproc_Imgproc_distanceTransform_10", "_Unwind_GetRegionStart", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "icv_p8_ownscrDftFwd_Fact_32f", "icv_w7_ownLaplCol5x5_16s_C4", "_ZN2cveoERKNS_3MatERKNS_7Scalar_IdEE", "_ZN2cv9FormattedD2Ev", "icv_g9_owns_rFFTfwd_16_64f", "icv_w7_ownscDFTinv_5_scale_32fc", "_ZN2cvmiERKNS_3MatES2_", "icv_p8_owniResizeSuper_32f_C3R", "_ZN2cv3hal8merge32sEPPKiPiii", "icv_s8_ownippiFilterMedianSqr_16u_C3R", "icv_g9_ownSS3_31_16u", "icv_w7_owniResizeNearest_16s_C4R", "icv_w7_owniFlip_8u_C1", "Java_org_opencv_calib3d_StereoBM_getPreFilterType_10", "icv_s8_ippiCopyConstBorder_32f_C1R_L", "cvCvtColor", "icv_h9_ownsCopy_8u", "Java_org_opencv_video_DualTVL1OpticalFlow_getInnerIterations_10", "own_ipps_cCIS_SC_HA", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "_ZN2cv5utils5trace7details6Region4Impl11enterRegionERNS2_23TraceManagerThreadLocalE", "_ZN2cv8UMatData4lockEv", "icv_g9_ippiResizeAntialiasing_8u_C3R_L", "icv_h9_owniResizeLinear_16u_C3R", "icv_p8_ownpi_WarpAffine_C_Const_8u_C4", "Java_org_opencv_ml_ANN_1MLP_setRpropDWMin_10", "Java_org_opencv_objdetect_HOGDescriptor_getDescriptorSize_10", "icv_h9_ippsFFTInv_CToC_32fc", "cvSVBkSb", "icv_g9_owniFilter_32f_C1R_g9e9_4", "_ZNK2cv5MatOp12augAssignAndERKNS_7MatExprERNS_3MatE", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_12", "ippicviScaleC_8u8s_C1R", "icv_h9_ippiMirror_32s_C1IR", "_ZN2cv3ogl6Buffer8copyFromERKNS_11_InputArrayENS1_6TargetEb", "icv_w7_ownResize4Lanczos2_16s", "_ZN2cv4UMat6createERKSt6vectorIiSaIiEEiNS_14UMatUsageFlagsE", "Java_org_opencv_imgproc_Imgproc_createHanningWindow_10", "icv_p8_ownscDftFwd_Prime6_64fc", "_ZNK2cv17DescriptorMatcher5matchERKNS_11_InputArrayES3_RSt6vectorINS_6DMatchESaIS5_EES3_", "ippicviSet_32s_C4MR", "_ZN2cv8Stitcher17estimateTransformERKNS_11_InputArrayE", "icv_s8_ippiFilterMax_32f_Col_AC4_A6", "icv_w7_ownSharpenRow_32f_C3", "icv_h9_ownscDFTfwd_9_scale_64fc", "icv_w7_ippiTranspose_16s_C4IR", "icv_p8_owniFlip_32s_C3", "icv_p8_ownRow1Filter8_16s", "ippicviMax_16u_C1R", "icv_w7_ownMorphInit_1u_L", "icv_h9_ownpiDotProd_16u64f_C1R", "icv_p8_ippiMarkSpeckles_8u_C1IR", "icv_s8_ippiMorphTophat_32f_C4R_L", "Java_org_opencv_imgproc_Imgproc_ellipse2Poly_10", "_ZN2cv3hal14cvtBGR5x5toBGREPKhjPhjiiibi", "Java_org_opencv_core_Core_LUT_10", "icv_p8_ownNormRel_L2_16u_C1MR_W7", "ippicviCopy_8u_C3MR", "ippicvsMinEvery_8u", "icv_h9_ippiCopyReplicateBorder_16s_C3R", "icv_s8_ippiFilterLowpassBorder_32f_C1R", "Java_org_opencv_core_Mat_n_1convertTo__JJI", "_ZN3tbb8internal27initialize_handler_pointersEv", "icv_h9_ownippiFilterxBrd32f_16s_C4R", "_Z20Mat_to_vector_DMatchRN2cv3MatERSt6vectorINS_6DMatchESaIS3_EE", "icv_w7_cv_ownFilterMxMnCalcBuf_L", "icv_h9_cv_ownippiFilterMin_32f_Msk", "icv_p8_ownippiFilterMedianHoriz_8u_C3R_5x1", "icv_h9_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "_ZN2cv3dnn19experimental_dnn_v116readNetFromTorchERKNS_6StringEb", "icv_p8_ownAdd_16u32f_C1IMR_W7", "icv_g9_ippiMorphTophat_16u_C1R_L", "icv_h9_ippiErodeInit_L", "icv_s8_ippiMorphOpen_8u_C4R_L", "_ZN2cv12HoughCirclesERKNS_11_InputArrayERKNS_12_OutputArrayEiddddii", "icv_p8_ownpi_Max_16u_C1R", "icv_s8_ownpi_WarpAffine_C_Const_16s_C1", "icv_s8_ippiConvert_32s8s_C1R", "icv_h9_ippiWarpAffineNearest_8u_C1R", "icv_h9_ownscDftFwd_Prime8_64fc", "icv_w7_ownFilterRowBorderPipeline_32f_C3R_X_W7cn", "icv_p8_ownpi_WarpAffine_L_8u_C3", "_ZN2cv5utils5trace7details6Region4Impl11leaveRegionERNS2_23TraceManagerThreadLocalE", "icv_s8_ownpi_WarpAffine_C_Repl_8u_C3", "Java_org_opencv_imgproc_Imgproc_initWideAngleProjMap_10", "icv_p8_ippiNorm_Inf_16u_C1R", "icv_w7_ownpi_WarpSimpleLinear_8u_C1R", "icv_p8_ownippiFilterMedian_16u_C1R_5x5", "icv_s8_ippiScaleC_64f32s_C1R", "icv_h9_ownSS4_73_8u", "icv_p8_ownscDFTinv_6_32fc", "ownFeaturesToIdx", "icv_p8_owniScaleC_16u8s_C1R_acc", "icv_h9_ownpi_WarpSimpleLinear_32f_C1R", "icv_h9_ownpi_NormL2Rel_32f_C1R", "icv_g9_owniFilter32f_16u_C3R_g9e9_5", "icv_h9_ownSS1_41_32f", "icv_g9_ownpi_WarpAffine_C_Repl_32f_C3", "icv_g9_ownpi_WarpAffine_NN_Const_16s_C3", "icv_s8_ownpi_AndC_32s_C4R", "icv_p8_ownpi_WarpAffine_L_Const_8u_C1", "icv_g9_owns_cFFTinv_16_scale_32fc", "icv_s8_ownippiFilterMedianSqr_16s_AC4R", "Java_org_opencv_video_Video_buildOpticalFlowPyramid_10", "icv_h9_ownRow1Filter12_16s", "icv_h9_innerCommonLoopW5_32f_C3IR", "icv_g9_ownSS3_53_16u", "icv_w7_ownpi_Rotate90_16_C1R", "icv_p8_ownLaplace3x3Row_32f_AC4", "icv_h9_ownCopySubpixIntersect_8u32f_C1R_h9l9", "_ZN2cv11VideoWriter4openERKNS_6StringEidNS_5Size_IiEEb", "icv_n0_own_ipps_sSin_G9EPnnn", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_W7", "icv_p8_ownpi_dInterVectorClip_L_32f_C3", "icv_p8_owniCopyMirrorBorder_8u_C1IR_L", "icv_w7_ownippiFilterMedian_16u_C3R_3x3", "icv_s8_ippsConvert_32f8s_Sfs", "icv_p8_ownNorm_Inf_8u_C3CMR_V8", "_ZN2cv6detail15GainCompensator5applyEiNS_6Point_IiEERKNS_17_InputOutputArrayERKNS_11_InputArrayE", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_V8", "icv_h9_ownpi_WarpAffine_L_Repl_16s_C1", "icv_w7_ownpi_dInterVector_L_32f_C1", "_ZN2cv20fastNlMeansDenoisingERKNS_11_InputArrayERKNS_12_OutputArrayERKSt6vectorIfSaIfEEiii", "icv_w7_ownpi_NormInfDiff_8u_C1R", "_ZN2cv5flann5IndexD2Ev", "icv_g9_ownsrDFTfwd_14_32f", "icv_s8_ownpi_WarpAffine_NN_32_P3", "icv_s8_ownscrDftFwd_Prime3_32f", "_ZN2cv3ogl6Arrays16resetVertexArrayEv", "icv_g9_ownscDFTinv_11_scale_64fc", "icv_h9_ippiNormDiff_Inf_16u_C1R", "icv_h9_ippiCopyConstBorder_32s_C1R_L", "icv_s8_ownCanny_16s8u_C1R_3_16u_W7", "icv_s8_ownNorm_L2_16u_C3CMR_V8", "icv_s8_ippiCopyMirrorBorder_32s_C4IR", "icv_p8_owns_initTabBitRevNorm", "icv_s8_ownsConvert_16s32f_Sfs_W7", "icv_s8_ippiAbsDiff_16u_C1R", "icv_w7_CV_BORDER_CHECK_PARSE_FLAGS_NEW", "icv_g9_ownResize4Linear32f", "icv_p8_ippiAddSquare_32f_C1IR", "icv_h9_ownSS3_73_32f", "icv_s8_owniCopy32s_P4C4_W7", "icv_g9_ownpi_Rotate90_B_32_C3R", "icv_w7_ownResize1Antialiasing_8u", "icv_g9_ippiWarpAffineNearest_8u_C3R", "icv_w7_ownpi_WarpAffineSimpleCubic_8u_C1R", "icv_ps_set_cw_fpu", "icv_h9_owniScaleC_32s8s_C1R_acc", "Java_org_opencv_core_Core_min_11", "icv_g9_owniScaleC_8u16s_C1R_acc", "ippicviOr_8u_C1R", "icv_p8_ippsFFTInit_R_64f", "icv_w7_ownps_Sub_16u_Sfs", "Java_org_opencv_imgproc_Imgproc_drawMarker_10", "icv_h9_owniFilterMedianHoriz3x1_32f_C1R", "_ZN2cv3dnn19experimental_dnn_v18RNNLayer6createERKNS1_11LayerParamsE", "icv_p8_ownSS1_41_16s", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_X_W7", "icv_h9_ownResize3Nearest16u", "icv_s8_ownippiFilterMedianCross_8u_C4R_3x3", "_ZN2cv3ogl6Arrays7releaseEv", "icv_p8_ownLaplCol5x5_8u_C1", "icv_s8_ownpi_dInterVectorClip_NN_8_P4", "icv_h9_ownSS4_16u", "icv_g9_ippiCopyReplicateBorder_16s_C4IR", "icv_p8_ippsFFTInit_C_64fc", "icv_w7_ippsConvert_32s16s_Sfs", "icv_w7_ownpi_WarpAffine_NN_Const_32f_C4", "icv_h9_owniFFTFwd_RToPack_32f_C1R", "icv_p8_ownpi_Rotate90_B_8_C1R", "icv_h9_ippiSet_8u_C1MR", "icv_h9_ippiFilterBorder_16u_C3R", "icv_s8_owns_rFFT_1_32f", "icv_s8_ippiCopy_16s_C4MR", "icv_h9_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "icv_w7_ippiConvert_16s32f_C1R", "_ZN2cv3dnn19experimental_dnn_v15Layer3runERKSt6vectorINS_3MatESaIS4_EERS6_S9_", "_ZN2cv4cuda6Stream17waitForCompletionEv", "_ZN2cv17CascadeClassifier16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EERS4_IiSaIiEERS4_IdSaIdEEdiiNS_5Size_IiEESH_b", "icv_h9_ippiSet_32s_C1R", "_ZNK2cv3ocl6Device24preferredVectorWidthCharEv", "ippicviScaleC_8s_C1R", "ippicviMoments64f_8u_C1R", "icv_p8_ownFilter_32f_C3R", "icv_g9_ownResize3Nearest32f", "icv_s8_ippiMirror_16u_C4R", "_ZN3tbb19task_scheduler_init10initializeEi", "_ZN2cv7absdiffERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "_ZN2cv3dnn19experimental_dnn_v114MaxUnpoolLayer6createERKNS1_11LayerParamsE", "icv_s8_ippiThreshold_GTVal_8u_C1IR", "ippicviNormDiff_Inf_8u_C3CMR", "icv_h9_ippiFilterLaplacianBorder_32f_C1R", "icv_s8_ownippsCnvrt_32f32s_Sfs", "icv_w7_ownpi_Min_32f_AC4R", "icv_s8_ippiResizeCubic_16u_C1R_L", "icv_s8_owns_rFFTfwd_32_64f", "icv_p8_ownSS1_94_32f", "icv_g9_dct_8x8_inv_32f", "icv_w7_ippiResizeAntialiasingLinearInit_L", "cvInitTreeNodeIterator", "_ZN2cv4MSER6createEiiiddiddi", "icv_h9_ippiSqrIntegral_8u32s64f_C1R", "icv_h9_ownpi_WarpAffine_NN_Repl_16u_C1", "icv_s8_ippiMulC_32f_C1IR", "Java_org_opencv_features2d_Feature2D_defaultNorm_10", "ippicviDilate_32f_C1R_L", "Java_org_opencv_ml_EM_predict2_10", "Java_org_opencv_features2d_KAZE_getNOctaves_10", "icv_g9_ownRow1Filter12_8u", "icv_g9_ownsrDFTinv_7_64f", "icv_w7_ownsrDFTinv_6_scale_32f", "icv_w7_owniResizeLanczos_16s_C1R", "Java_org_opencv_core_Mat_n_1inv__J", "icv_g9_owniCopy_8u_C3MR", "icv_g9_owniFilter32f_16s_C4R_g9e9_8", "icv_s8_ownsSub_8u_1Sfs", "icv_g9_ownpi_WarpAffineSimpleLinear_64f_C1R", "icv_w7_ippsDFTFwd_RToPack_64f", "_ZN2cv10softdoubleC1Ej", "icv_s8_ippiWarpAffineNearest_16u_C3R", "icv_h9_ownColAntialiasing_32f", "ippicviTranspose_8u_C3R", "icv_w7_ownpi_WarpSimpleNearestInit", "icv_p8_ownAConvert32s_16s", "_ZN2cv11RQDecomp3x3ERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_S5_S5_", "icv_p8_ownsrDFTfwd_5_64f", "icv_h9_ippiSet_16s_C3R", "icv_p8_owniCopy8u_P3C3_W7", "Java_org_opencv_dnn_Net_getMemoryConsumption_10", "_ZN2cv3dnn19experimental_dnn_v13Net8getLayerENS1_9DictValueE", "icv_s8_ippsZero_64fc", "icv_p8_owns_cFftInv_Fact4_Last_32fc", "icv_w7_ownpi_XorC_16u_C1R", "icv_p8_ownBuildFilter_64f", "icv_p8_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_s8_ownWarpSimple4Nearest16s", "icv_w7_ownscrDftInv_Prime3_64f", "icv_w7_owniTranspose_16u_C1IR_W7", "Java_org_opencv_dnn_Net_getMemoryConsumption_14", "icv_s8_ownpi_WarpSimpleLinear_16s_C3R", "icv_p8_owniCopy_32s_C3MR", "_ZSt14set_unexpectedPFvvE", "icv_p8_ownSS3_54_32f", "icv_p8_owniFilter_32f_C3R_v8u8_3", "icv_h9_ownCalcBorderR1Lanczos3_16s", "icv_g9_ownpi_WarpAffine_L_Repl_16u_C1", "icv_g9_ownsReducePi", "_ZNK2cv3ocl7Program3ptrEv", "icv_p8_owniScaleC_64f8u_C1R_fst", "icv_w7_ownscDFTinv_15_scale_64fc", "icv_s8_ownpi_Or_8u_C1R", "ippicviConvert_16u16s_C1RSfs", "icv_g9_ownpi_CmpLT_16s_C1R", "icv_h9_owniResizeLinear_16s_C4R", "icv_g9_owniFilter_32f_C1R_g9e9_1", "icv_h9_cv_ownippiFilterMax_16u_Col", "icv_s8_owniCopy16s_C3P3_A6", "ippicviWarpAffineCubic_16u_C4R", "icv_g9_ippiDistanceTransform_5x5_8u32f_C1R", "icv_h9_ippsConvert_64f32f", "icv_w7_ippiConvert_8u32f_C1R", "icv_s8_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_w7_ownLaplRow5x5_32f_C1", "_ZN3tbb8internal17generic_schedulerC2ERNS0_6marketE", "icv_h9_myHLSToRGB_8u_C3R", "icv_p8_owniCopy_8u_C1M_W7", "icv_w7_ippiMean_16u_C4R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_V8", "icv_s8_ownSS1_53_16s", "icv_g9_ippiFFTGetSize_R_32f", "icv_p8_owniScaleC_32s16u_C1R_fst", "icv_h9_owniResizeAntialiasing_32f_C4R_L", "icv_h9_owniResizeSuper_16u_C4R", "icv_w7_ippiMinMaxIndx_32f_C1R", "_ZNK2cv4cuda6GpuMat6copyToERKNS_12_OutputArrayE", "cvReleaseHist", "_ZN2cv4UMat5setToERKNS_11_InputArrayES3_", "icv_p8_ippiCopyReplicateBorder_32f_C4R", "icv_s8_ownSS4vertical_8u", "_ZN2cv6detail12CameraParamsC2Ev", "_ZNK2cv5flann11IndexParams6getAllERSt6vectorINS_6StringESaIS3_EERS2_IiSaIiEES6_RS2_IdSaIdEE", "icv_h9_cv_ownMorphologyBorderInit_L", "ippicviCopy_32f_C3AC4R", "icv_s8_ownCalcBorderR3Cubic16s", "Java_org_opencv_core_Mat_n_1adjustROI", "icv_w7_ownSum_32f_C1MR_W7", "icv_s8_ownpi_Rotate90_64_C4R", "icv_s8_ippiResizeLinear_64f_C4R_L", "icv_s8_ownpi_WarpAffineSimpleLinear_32f_C3R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_V8", "icv_h9_owns_rFFTinv_16_scale_64f", "icv_s8_ippiSum_16u_C4R", "icv_h9_ownpi_WarpAffineSimpleLinear_16u_C3R", "icv_g9_ippiNorm_L2_32f_C1R", "icv_s8_ownRow4Lanczos3_32f", "ippicviConvert_32s8u_C1R", "icv_w7_ownpi_AndC_16u_AC4R", "icv_w7_ippiTranspose_32f_C3R", "icv_g9_ippiAdd_16u32f_C1IR", "icv_g9_ippiConvert_16u32f_C1R", "icv_p8_ownpi_dInterVectorClip_C_8u_AC4", "icv_p8_ownpi_WarpAffine_NN_Mem_16u_C3", "icv_w7_ownpi_Rotate180_64_C3R", "icv_s8_owniConvert_8s32s_AC4_W7", "icv_g9_ippiResizeCubic_32f_C4R_L", "icv_w7_ippiMean_8u_C3R", "ippicviResizeAntialiasing_32f_C3R_L", "icv_w7_ownippsSqrt_32s16s", "icv_p8_ownpi_Sum_16s_AC4R", "Java_org_opencv_ml_ANN_1MLP_getBackpropMomentumScale_10", "icv_g9_ippiCopyReplicateBorder_16u_C3R", "icv_h9_owncvMinMaxIndx_8u_C1R_H9L9", "ippicviNormRel_Inf_32f_C1MR", "icv_p8_ippiCopy_8u_C3C1R", "icv_g9_owniTransposeWxH_8uC1", "icv_h9_ippiCopyMirrorBorder_32f_C4R", "icv_g9_owniResizeAntialiasing_8u_C3R_L", "icv_s8_ownLaplCol5x5_8u_C1", "Java_org_opencv_calib3d_Calib3d_filterSpeckles_11", "_ZN2cv16BOWKMeansTrainerD2Ev", "icv_g9_ownpi_WarpAffineSimpleNearest_16s_C4R", "icv_p8_CopyWithBorder32f", "icv_g9_ippiCompare_8u_C1R", "icv_g9_ownBuildWarpFilter_64f", "Java_org_opencv_features2d_MSER_getPass2Only_10", "icv_s8_ownpi_OrC_16u_C4R", "icv_g9_ippiDotProd_32s64f_C1R", "icv_w7_ownippiFilterMedianCross_16s_C3R_3x3", "icv_p8_ippiCanny_32f8u_C1R", "icv_p8_ownsrDFTinv_10_64f", "icv_g9_owniCopy_8u_P4C4R", "icv_s8_ownSS4_73_8u", "_ZNSt8bad_castD2Ev", "icv_g9_ownscDFTinv_14_scale_64fc", "icv_s8_ownCalcBorderR3Lanczos2_32f", "icv_w7_ownLaplace3x3Row_8u_C4", "icv_g9_owniGetRectComBF_32f_C3R", "icv_s8_ippiMorphGradient_8u_C3R_L", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_V8", "icv_s8_ownLaplace3x3Row_32f_C3", "icv_h9_owniSwapChannels_32u_C3C4R", "icv_s8_ownsConj_32fc_I_T7", "icv_p8_owniCopyBF_32f_C3R", "cvMixChannels", "ippicviMinEigenVal_8u32f_C1R", "_ZN2cv3ocl6DeviceC1Ev", "_ZN2cv6detail12CameraParamsC2ERKS1_", "icv_h9_ippiDilate_16s_C1R_L", "cvCreateChildMemStorage", "icv_h9_ippiCopyConstBorder_8u_C3R_L", "Java_org_opencv_core_Mat_n_1setTo__JJJ", "_ZN2cv8Stitcher17estimateTransformERKNS_11_InputArrayERKSt6vectorIS4_INS_5Rect_IiEESaIS6_EESaIS8_EE", "icv_s8_ownSS4_32_32f", "icv_h9_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_G9E9cn", "icv_p8_ownCopySubpix_16u32f_C1R_V8", "icv_s8_ownpi_XorC_16u_C3R", "icv_s8_ownscDftInv_Prime11_64fc", "icv_p8_ownAddWeighted_16u32f_C1IMR_W7", "_ZNK2cv8Subdiv2D15getTriangleListERSt6vectorINS_3VecIfLi6EEESaIS3_EE", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_W7", "icv_s8_ownpi_CmpLT_8u_C1R", "icv_s8_ownCopySubpix_16u32f_C1R_new_V8", "icv_w7_ownippiFilterMin_8u_Col_AC4", "icv_w7_ownsGetSizeTabDftBase_32f", "icv_g9_ownpi_WarpAffine_NN_Mem_16s_C3", "icv_p8_ippiTranspose_32f_C1R", "icv_g9_ownColFilter2_8u", "ippicviWarpAffineLinear_16s_C3R", "icv_p8_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_g9_ippiMean_8u_C3CMR", "icv_g9_owns_cFFTfwd_64_scale_64fc", "icv_h9_ippiCopyReplicateBorder_8u_C3IR_L", "icv_g9_ownpi_WarpSimpleCubic_16s_C3R", "icv_h9_ippiHarrisCorner_32f_C1R", "Java_org_opencv_video_FarnebackOpticalFlow_setFlags_10", "icv_s8_owns_sDctInv_Conv_32f", "icv_w7_ippiSwapChannels_32f_C4C3R", "ippicviResizeLinear_64f_C1R_L", "icv_w7_ownscDftInv_Prime_32fc", "icv_w7_ownpi_WarpAffine_C_Repl_16u_C3", "icv_s8_ownsrDFTinv_12_64f", "icv_h9_ippiMirror_8u_C4R", "icv_s8_ownSS4_16u", "cvScaleAdd", "icv_w7_ownNormDiff_Inf_32f_C1MR_W7", "_ZN2cv3ocl18getOpenCLAllocatorEv", "ippicviFilterMedianBorder_8u_C1R", "icv_w7_ippiCopyReplicateBorder_32s_C1R_L", "icv_w7_owniGetRectTop_16s", "icv_h9_ownsrDFTfwd_5_32f", "icv_h9_ippiErodeGetBufferSize_L", "icv_g9_ippiTranspose_8u_C4IR", "icv_s8_ownpis_Min_8u_C3", "icv_w7_owniResizeSuper_32f_C3R", "icv_w7_owniCrossCorrNormGetSize", "icv_p8_ippiCopyReplicateBorder_32s_C3IR_L", "icv_g9_ippiConvert_8s32f_C1R", "icv_p8_ownscDftInv_Fact13_64fc", "icv_w7_ownscDftInv_Prime8_32fc", "icv_w7_ippiMean_StdDev_8u_C3CMR", "icv_h9_ippiCopyConstBorder_16s_C4R", "icv_h9_ippiCopyMirrorBorder_8u_C4R", "_ZN2cv9composeRTERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_S5_S5_S5_S5_S5_S5_S5_S5_", "icv_g9_ippiMean_StdDev_32f_C1R", "icv_s8_ippiCopy_8u_C1MR", "icv_s8_ownpi_WarpAffine_C_Mem_64f_C4", "icv_w7_ippsZero_64fc", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_5x5_P8Y8cn", "icv_p8_ownsrDFTinv_3_64f", "icv_h9_ownFilter32f_8u_C3R_g9e9", "icv_s8_ownpi_WarpAffineNearest_32f_C1R", "icv_h9_ippiMinMax_16s_C1R", "Java_org_opencv_features2d_Features2d_drawMatches_11", "icv_g9_ippsFFTGetSize_C_32fc", "icv_s8_ownsInitTabDftInvRec_64f", "icv_w7_ippsDCTInvGetSize_32f", "icv_h9_ownpi_WarpAffineRect", "icv_g9_ippiFilterSobelVertBorder_8u16s_C1R", "Java_org_opencv_core_Core_gemm_10", "icv_w7_ippiMomentGetStateSize_64f", "icv_h9_ownCalcBorderR1Cubic32f", "icv_h9_ownscDFTinv_5_64fc", "icv_g9_owniFilter32f_8u_C3R_g9e9_0", "icv_h9_ownSS1_54_16s", "Java_org_opencv_ml_LogisticRegression_getLearningRate_10", "icv_g9_ippiWarpAffineNearest_16s_C3R", "icv_p8_owniFlipCopy_32s_C3", "icv_w7_ownCalcBorderR3Cubic32f", "Java_org_opencv_objdetect_CascadeClassifier_getFeatureType_10", "icv_h9_ippiAdd_32f_C1IMR", "icv_s8_ippiFilterRowBorderPipeline_32f_C1R", "Java_org_opencv_ml_RTrees_delete", "icv_g9_owns_rFFTfwd_8_32f", "ippicviConvert_8s32f_C1R", "_ZN2cv3hal19cvtOnePlaneYUVtoBGREPKhjPhjiiibii", "icv_g9_owns_cFFTfwd_16_scale_64fc", "icv_g9_ownRow1Antialiasing_16s", "icv_s8_owniFilterBilateralR2_InMem_8u_C1R_px", "icv_s8_ownSSvsum_8u", "ippicviTranspose_16u_C3R", "icv_w7_ownpi_Histogram_FS_32f_AC4R", "icv_h9_ownRow4Linear16s", "icv_p8_ownCalcBorderR1Cubic32f", "icv_s8_ownSS4_41_8u", "icv_s8_ippiScaleC_32f8s_C1R", "Java_org_opencv_features2d_DescriptorExtractor_write_10", "icv_h9_owniResizeLanczos_16s_C3R", "icv_g9_ownpi_WarpAffineLinear_16s_C3R", "_ZN2cv9Feature2D4readERKNS_6StringE", "icv_g9_ippiFilterBorder_32f_C1R", "icv_h9_owniScaleC_16s8s_C1R_fst", "icv_s8_owns_crRadix4Fwd_32f", "icv_w7_ownpi_WarpSimpleNearest_16s_C3R", "icv_p8_ippiMomentGetStateSize_64f", "icv_s8_ownsConvert_8s16s_W7", "ippicviMinMaxIndx_16u_C1MR", "icv_w7_owniResizeLanczos_16s_C3R", "icv_w7_ippiAnd_8u_C1R", "Java_org_opencv_dnn_Net_getLayerInputs_10", "icv_w7_ownNorm_Inf_8u_C1MR_W7", "icv_p8_ippiMirror_16u_C3R", "cvSetOpenGlContext", "icv_g9_ownResize4Lanczos3_16s", "icv_s8_ownSS4_a7_16s", "icv_g9_ownColAntialiasing_8u", "_ZNK2cv9SparseMat9convertToERS0_id", "icv_w7_ippiConvert_16u32s_C1R", "Java_org_opencv_dnn_DictValue_delete", "_ZN2cv3dnn19experimental_dnn_v112FlattenLayer6createERKNS1_11LayerParamsE", "Java_org_opencv_ml_TrainData_shuffleTrainTest_10", "icv_w7_ownDistanceTransform_5x5_8u32f_C1R_21B", "Java_org_opencv_ml_SVMSGD_create_10", "icv_g9_ownpi_WarpAffineSimpleCubic_16u_C3R", "icv_w7_ownpi_WarpAffine_NN_Repl_16u_C4", "icv_p8_ippiHLSToRGB_8u_C3R", "icv_s8_ownscrDftFwd_Fact2_64f", "icv_p8_ownps_Sub_16u_Sfs", "_ZNK2cv3ocl12PlatformInfo6vendorEv", "icv_h9_ownsInitDftPrimeFact_64f_64f", "_ZN3tbb8internal24DoOneTimeInitializationsEv", "icv_p8_owniFilterMedianVert1x5_32f_C1R", "_ZN2cv17triangulatePointsERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayE", "icv_h9_ippsMinEvery_64f", "icv_h9_ownSS1_41_16s", "icv_w7_ownpi_WarpAffineNearest_16s_C3R", "icv_h9_ippiMorphGradient_8u_C4R_L", "icv_w7_ownpis_Sum_16u_C4", "icv_w7_owniResizeAntialiasing_16s_C4R_L", "icv_p8_ownpi_WarpAffine_C_Transp_32f_C1", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_V8", "_ZNK3tbb8internal20allocate_child_proxy8allocateEj", "_ZN2cv9videostab20WobbleSuppressorBaseC1Ev", "icv_w7_ownippiFilterxBrd32f_8u_C4R", "icv_s8_ownpi_Max_16s_AC4R", "icv_p8_ownpis_Max_16s_AC4", "icv_w7_ownNormDiff_L2_16u_C3CMR_W7", "icv_h9_owniScaleC_64f32f_C1R_fst", "_ZN3tbb8internal17generic_scheduler17prepare_task_poolEj", "icv_g9_ownippiFilterMedianSqr_8u_AC4R", "ippicviSet_32s_C4R", "icv_h9_ownFilterRow32f_16s_C1R_g9e9", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_11", "icv_g9_ownResize3Cubic32f", "cvSetAdd", "_ZN2cv21DetectionBasedTrackerC1ENS_3PtrINS0_9IDetectorEEES3_RKNS0_10ParametersE", "ippicviResizeNearest_8u_C1R_L", "_ZN2cv14solvePnPRansacERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_bifdS5_i", "icv_p8_ownResize4Linear32f", "icv_s8_ippiMul_8u_C1RSfs", "icv_p8_ippiMorphTophat_16u_C1R_L", "icv_h9_owniAutoSSFull_C1R", "icv_h9_owniResizeSuper_32f_C4R", "icv_g9_owniFilterBilateralR2_InMem_8u_C3R", "icv_s8_getMaskFeature", "icv_h9_ownpi_WarpAffineSimpleLinear_8u_C4R", "icv_s8_owns_cFftFwd_Fact4_32fc", "icv_g9_ippiResizeLinear_16s_C4R_L", "icv_p8_ownSharpenRow_16s_C1", "icv_w7_ownsrDFTinv_10_64f", "_ZN2cv5utils5trace7details6Region4ImplD2Ev", "icv_w7_ownLaplace3x3Row_32f_C3", "icv_g9_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_p8_ownpi_WarpAffine_L_8u_P4", "Java_org_opencv_calib3d_Calib3d_calibrateCamera_10", "_ZN2cv3hal6div16uEPKtjS2_jPtjiiPv", "icv_s8_ippiMirror_16u_C1IR", "icv_w7_owniGetRectLeftBF_32f_C3R", "icv_s8_ownpi_OrC_16u_C1R", "icv_g9_ownSS1_72_16s", "Java_org_opencv_objdetect_HOGDescriptor_get_1winSize_10", "icv_w7_ownpi_WarpAffine_L_Const_8u_C1", "icv_h9_owns_cFFTinv_64_scale_64fc", "icv_s8_ownsrDFTinv_10_64f", "icv_w7_ippsPolarToCart_64f", "icv_g9_owniAutoSS_C1R", "_ZNK2cv3ocl7Context6deviceEj", "icv_w7_ownpi_GetRotateTransform", "icv_w7_ownippiFilterMedian_8u_BC4R", "icv_s8_ownpi_dInterVector_NN_8_AC4", "ippicviRGBToGray_32f_C3C1R", "icv_s8_ippiMirror_16u_C1R", "icv_g9_ownsGetSizeDftConv_64f", "_ZN2cv2ml9StatModel5trainERKNS_11_InputArrayEiS4_", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_V8", "icv_h9_owniCopy_8u_P3C3R", "cvCreateImageHeader", "icv_s8_owns_cFft_BlkMerge_32fc", "icv_p8_ippiErodeGetSpecSize_L", "Java_org_opencv_core_Core_addWeighted_10", "icv_s8_ippiTranspose_16u_C1IR", "icv_s8_ownpi_SmoothBorder", "Java_org_opencv_imgproc_Imgproc_medianBlur_10", "icv_h9_ippsFFTInit_C_64fc", "_ZN2cv12KalmanFilter7correctERKNS_3MatE", "icv_p8_ippiMul_8u_C1RSfs", "icv_s8_ownpi_dInterVectorClip_L_8u_C3", "icv_p8_ippiFilterLowpassBorder_32f_C1R", "icv_p8_ippsDCTInvInit_32f", "icv_g9_ownResize1Antialiasing_16u", "icv_s8_owns_sDctInv_Dir_32f", "icv_w7_owns_cFftInv_Fact4_32fc", "icv_g9_ippiFilterScharrVertMaskBorder_32f_C1R", "icv_h9_owniFilterMedianBorderInMem_8u_C1R", "icv_w7_ownscDFTinv_6_scale_32fc", "icv_p8_ownsMinFind_16s_W7", "icv_w7_ownpi_dInterVectorClip_NN_16_AC4", "_ZNK2cv17DescriptorMatcher10checkMasksERKNS_11_InputArrayEi", "icv_s8_ownpi_XorC_8u_C4R", "icv_p8_ippiFilterBoxBorder_8u_C4R", "icv_g9_owniFilter32f_16u_C1R_g9e9_3", "Java_org_opencv_dnn_Net_getParam_10", "_ZNK2cv3ogl9Texture2D6copyToERKNS_12_OutputArrayEib", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_W7", "icv_h9_ippiMorphOpen_32f_C3R_L", "icv_p8_ownsrDFTfwd_11_scale_64f", "icv_s8_ownRow4Linear32f", "icv_h9_ippsSortRadixIndexAscend_32f", "_ZN2cv25BOWImgDescriptorExtractorC2ERKNS_3PtrINS_9Feature2DEEERKNS1_INS_17DescriptorMatcherEEE", "icv_g9_ippiCopyReplicateBorder_32s_C1IR_L", "icv_h9_ippiCopy_8u_C3P3R", "icv_p8_ownippsCnvrt_16f16s_Asm", "icv_g9_ippiMirror_32s_C1R", "icv_n0_own_ipps_dLn_G9EPnnn", "Java_org_opencv_ml_TrainData_getTestSamples_10", "icv_p8_ownCalcBorderR4Cubic16s", "icv_s8_ippiScaleC_32f8u_C1R", "icv_w7_ownippiFilterMedianSqr_16s_AC4R", "icv_s8_ownpi_OrC_32s_AC4R", "cvSetHistBinRanges", "ippicviConvert_32f8u_C1RSfs", "icv_n0_own_ipps_dRound_S9LAynn", "ippicviConvert_8s32s_C1R", "icv_p8_owniFilterBilateralR1_InMem_8u_C1R_px", "icv_s8_ippiFilterBoxBorder_32f_C1R", "icv_p8_ownSS1_52_16u", "Java_org_opencv_calib3d_Calib3d_recoverPose_14", "_ZNK2cv2ml6KDTree9getPointsERKNS_11_InputArrayERKNS_12_OutputArrayES7_", "icv_s8_ownscrDftFwd_Prime_64f", "icv_g9_ownSS1_65_16s", "_ZN2cv3LDA7projectERKNS_11_InputArrayE", "Java_org_opencv_imgproc_Imgproc_getDefaultNewCameraMatrix_10", "icv_w7_ownpi_Histogram_FS_32f_C4R", "icv_w7_ippiConvert_32s16s_C1RSfs", "iwSetThreadsNum", "cvNextNArraySlice", "icv_h9_ippsSortRadixIndexDescend_8u", "Java_org_opencv_video_SparseOpticalFlow_calc_10", "_ZN2cv8Subdiv2D11findNearestENS_6Point_IfEEPS2_", "icv_n0_own_ipps_sInvSqrt_G9LAynn", "_ZN2cvgtERKNS_3MatES2_", "icv_w7_ownpis_Min_32f_C4", "cvSplit", "icv_p8_ippiNormRel_L2_8u_C1R", "icv_g9_ownSS3_53_16s", "icv_p8_ippiCopy_16u_P4C4R", "icv_p8_ownippsCnvrt_32f16u_Sfs", "icv_p8_ownippiFilterMedianHoriz_8u_C4R", "icv_w7_ownBuildFilterAA_32f", "icv_w7_owniResizeSuper_32f_C1R", "icv_h9_ownscDFTfwd_7_scale_32fc", "icv_w7_ippiHSVToRGB_8u_C3R", "icv_h9_ownpi_CmpLT_16s_C1R", "icv_h9_ownMinEigenVal_32f_C1R", "icv_s8_ippiResizeCubic_16s_C1R_L", "icv_w7_ippiMinEigenVal_32f_C1R", "_ZN2cv3hal8recip64fEPKdjS2_jPdjiiPv", "_ZN2cv6detail14PlaneWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RNS_4cuda6GpuMatES9_", "icv_p8_ownippiFilterMin_32f_Col", "icv_h9_ownResize1Nearest16u", "icv_g9_ippiNormDiff_Inf_32f_C1MR", "icv_p8_ownpi_MaxIndx_8u_C1R", "icv_w7_ippiAdd_8u32f_C1IMR", "icv_h9_owniAutoCorr_C1R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_W7", "cvDiv", "icv_g9_ippiErode_32f_C1R_L", "icv_h9_ippsDCTInvGetSize_32f", "icv_h9_ippsZero_32fc", "icv_g9_owns_cFFT_2_scale_64fc", "cvCloneMat", "icv_h9_ownpi_WarpAffineSimpleNearest_32f_C4R", "icv_h9_ownscDftFwd_Fact3_64fc", "cvCalcBayesianProb", "_ZN2cv20minEnclosingTriangleERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_s8_ownpi_dInterVector_NN_32_C3", "icv_s8_ownSS4_72_8u", "icv_p8_ippiResizeSuper_32f_C1R_L", "icv_p8_owniShiftClipRectZeroTail_32f_C1R", "_ZN2cv4cuda6Stream4NullEv", "icv_h9_ownNormDiff_L2_8u_C1MR_HSW", "icv_h9_ippiNormDiff_L2_8u_C3CMR", "icv_h9_ippiAddSquare_16u32f_C1IR", "icv_s8_owniFilter_32f_C1R_v8u8_7NA", "icv_s8_ownippiFilterMedianVert_8u_1x5", "icv_g9_ownippiFilterMedian_8u_BC4R", "icv_w7_ippiMirror_16u_C1IR", "_ZN2cv4cuda11TargetArchs6hasPtxEii", "icv_s8_ownscrDftInv_Prime_64f", "icv_g9_owniScaleC_8s16u_C1R_acc", "_ZNK2cv25BOWImgDescriptorExtractor14descriptorTypeEv", "icv_s8_owniFilterBoxBorder_32f_C1IR", "icv_g9_ippiCopyMirrorBorder_16s_C3R", "icv_h9_ippiHistogram_32f_C1R", "icv_p8_ownpi_Histogram_8u_AC4R", "_ZN2cv3hal9magnitudeEPKfS2_Pfi", "icv_g9_ownscDFTfwd_7_64fc", "icv_h9_ownpi_WarpAffine_C_Transp_16s_C1", "icv_p8_ownscDftInv_PrimeFact_64fc", "icv_w7_ownpi_Sum_16s_AC4R", "icv_w7_ippiResizeCubic_16s_C4R_L", "icv_w7_ippsMulC_64f_I", "icv_h9_ippiDotProd_32f64f_C1R", "ippicviAddWeighted_16u32f_C1IR", "Java_org_opencv_ml_RTrees_setCalculateVarImportance_10", "icv_p8_ownpi_Min_8u_C4R", "icv_p8_ownpi_WarpAffine_L_32f_C1", "icv_p8_owniCopyMirrorBorder_8u_C1IR", "icv_h9_getMaskFeature", "Java_org_opencv_core_Mat_n_1Mat__JIIII", "ippicviCopy_32f_P3C3R", "icv_w7_ownsrDFTinv_15_64f", "icv_s8_ownscDftFwd_Prime16_32fc", "Java_org_opencv_features2d_BOWTrainer_add_10", "icv_w7_owns_rFFTinv_16_32f", "icv_g9_owns_sDctFwd_Conv_32f", "_ZN2cv3minERKNS_3MatEd", "icv_h9_CopyWithBorder8u", "_ZN2cv3hal6max32fEPKfjS2_jPfjiiPv", "_ZN2cv3hal5add8uEPKhjS2_jPhjiiPv", "_ZN2cv3hal5QR32fEPfjiiiS1_jS1_", "icv_g9_ippiMinEigenValGetBufferSize_8u32f_C1R", "icv_h9_ownsInitDftPrimeFact_32f_32f", "icv_h9_owniClipRectZeroTail_32f_C1R", "icv_g9_ownResize1Antialiasing_32f", "icv_s8_ippiMoments64f_16u_C1R", "icv_w7_ownpi_WarpAffine_C_Const_32f_C1", "icv_g9_ippiWarpAffineCubic_16s_C4R", "icv_h9_ownscDft_Conv_64fc", "icv_p8_ippiDilate_16s_C1R_L", "Java_org_opencv_calib3d_Calib3d_stereoRectify_12", "icv_g9_ippiResizeNearest_8u_C1R_L", "icv_w7_ippiCopy_32f_C3C1R", "icv_s8_ownpis_Min_8u_C4", "Java_org_opencv_photo_TonemapDurand_getSigmaColor_10", "icv_w7_ownpi_WarpAffine_C_Mem_8u_C3", "icv_g9_ownscDFTinv_9_64fc", "_ZN2cv9BFMatcherC1Eib", "icv_w7_owniResizeLinear_64f_C1R", "icv_w7_owniFilterBilateralCom_InMem_32f_C1R_px", "icv_h9_ownippiFilterMedianVert_8u_C4R", "_ZN2cv13destroyWindowERKNS_6StringE", "icv_w7_ownippiFilterMax_32f_Col", "icv_h9_ownMean_StdDev_8u_C3CR_HSW", "icv_s8_ownsMul_32f", "icv_w7_ippiThreshold_LTVal_32f_C1R", "icv_g9_ownpi_NormL1_16s_C1R", "icv_p8_ownippsSqrt_16s_ASM", "cvNamedWindow", "icv_w7_ownSumSq_16u_C3CMR_W7", "icv_w7_ownsMul_16s_PosSfs", "icv_s8_ippiResizeNearest_8u_C3R_L", "icv_g9_ippiMirror_32s_C4R", "cvStartWindowThread", "icv_g9_ownSS3_21_32f", "icv_g9_ownscDftFwd_Fact4_64fc", "icv_w7_ippsSortRadixAscend_16u_I", "icv_h9_ownResize3Antialiasing_8u", "icv_w7_owniFilterBoxBorder_32f_C1R", "icv_p8_ownCalcBorderR3Lanczos2_8u", "icv_w7_ownApplyHaarClassifierAllImg4Pix_W7", "_ZN2cv9ExceptionC2EiRKNS_6StringES3_S3_i", "icv_p8_ippiTranspose_32f_C4IR", "icv_w7_ownscDftFwd_Prime6_32fc", "icv_h9_ippiResizeSuper_16s_C1R_L", "icv_g9_ippiMirror_32s_C3R", "icv_h9_ownMean_StdDev_8u_C1R_HSW", "icv_p8_ippiWarpAffineLinear_64f_C1R", "icv_s8_ownCalcBorderR1Linear16u", "icv_p8_ippiCopyMirrorBorder_8u_C3IR_L", "icv_s8_ippiMorphOpen_32f_C3R_L", "Java_org_opencv_calib3d_Calib3d_reprojectImageTo3D_12", "_ZNK2cv12_OutputArray9fixedSizeEv", "icv_p8_ippiResizeLanczos_32f_C3R_L", "icv_w7_ippiFFTGetSize_R_32f", "icv_s8_ippsDCTInvGetSize_32f", "icv_s8_owniResizeGetBufferSize", "icv_w7_ownscDftInv_Prime13_32fc", "icv_p8_ownBuildFilter_32f_Q14", "icv_g9_owns_rFFTinv_16_scale_64f", "iwVector_PushBack", "Java_org_opencv_video_DenseOpticalFlow_delete", "icv_s8_owniAutoNormMean_8u32s_C1R", "_ZN2cv3ocl5QueueC1Ev", "icv_g9_ownpi_WarpSimpleCubicInit", "icv_h9_ownRow3Antialiasing_8u", "icv_g9_owniFilterBilateralR1_InMem_8u_C1R_px", "icv_s8_ownsSub_16s_PosSfs", "Java_org_opencv_core_Core_PCACompute_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7", "icv_p8_ippiSet_16u_C4MR", "_ZN3tbb8internal17generic_scheduler16winnow_task_poolEv", "icv_s8_ownpi_WarpAffine_L_32f_C1", "icv_w7_ownRow1AA_32f", "WebPEncodeRGB", "ippicviMomentGetStateSize_64f", "icv_h9_ownCalcBorderR4Antialiasing_32f", "Java_org_opencv_ml_ANN_1MLP_setTermCriteria_10", "icv_s8_owniCopy8u_P3C3_W7", "icv_s8_owniTranspose_32s_C1R_W7_NT", "icv_p8_ippiMirror_32f_C3IR", "icv_p8_ownpi_WarpAffineCubic_16u_C4R", "Java_org_opencv_imgproc_Imgproc_cornerMinEigenVal_12", "icv_p8_ownscDFTfwd_5_scale_32fc", "icv_p8_ownippiFilterMedian_16u_C4R_5x5", "icv_p8___svml4ipp_sexp_cout_rare", "_ZN3tbb18captured_exception7destroyEv", "icv_w7_cv_ownippiFilterMax_16s_Row", "icv_h9_owniFilter32f_16s_C3R_g9e9_2", "icv_w7_ippsDFTInv_PackToR_32f", "icv_g9_owniCopyMirrorBorder_32s_C3IR_L", "_ZN2cv6detail20matchesGraphAsStringERSt6vectorINS_6StringESaIS2_EERS1_INS0_11MatchesInfoESaIS6_EEf", "ippicviMaxIndx_32f_C1R", "icv_p8_owns_BitRev1_8", "_ZN2cv17CascadeClassifierC1Ev", "_ZN2cv3ocl7ContextC1ERKS1_", "icv_g9_ownResize1Antialiasing_16s", "icv_h9_owniFilter32f_16u_C4R_g9e9_0", "icv_p8_ippiFilterBoxBorder_16s_C1R", "icv_s8_ownippiThreshold_GLV_16s_C3", "icv_s8_ippiAdd_16u_C1RSfs", "icv_p8_ownResize3Antialiasing_16s", "icv_s8_owniFilterSobelHorizBorder2_16s_C1R", "icv_s8_ippiTranspose_8u_C1R", "Java_org_opencv_core_Core_dft_11", "icv_w7_ippiRGBToGray_32f_C3C1R", "icv_s8_ownMinMaxIndx_16u_C1R_W7_1", "icv_g9_ownsAdd_16s_1Sfs", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_V8", "_ZN9CvLevMarq4initEii14CvTermCriteriab", "_ZN2cv6detail12DpSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_g9_owns_rFFT_2_scale_64f", "icv_w7_ippiNormDiff_L2_8u_C3CMR", "icv_s8_owniFilterSobelHorizBorder2_32f_C1R", "Java_org_opencv_imgcodecs_Imgcodecs_imencode_10", "icv_s8_ownsFloorOne", "icv_w7_ownAdd_16u32f_C1IR_W7", "icv_w7_owns_cFftFwd_Large_64fc", "icv_g9_ownpi_NormInf_32f_C1R", "_ZN2cv5MatOpD0Ev", "icv_w7_ippsAtan2_32f_A21", "_ZN2cv15preCornerDetectERKNS_11_InputArrayERKNS_12_OutputArrayEii", "ippicviAddProduct_16u32f_C1IMR", "icv_h9_ippiCopyMirrorBorder_32s_C1R_L", "icv_s8_ownCopySubpix_8u32f_C1R_new_V8", "_ZN2cv3dnn19experimental_dnn_v13Net7forwardERSt6vectorINS_3MatESaIS4_EERKNS_6StringE", "icv_w7_ownpi_WarpAffine_CR_16u_C1", "icv_s8_ownRow1Linear16s", "icv_ipp_max_cpuid_input", "icv_h9_ippiScaleC_16u64f_C1R", "icv_p8_owniResizeAntialiasingLanczosInit_L", "icv_h9_ownscDftInv_Prime16_64fc", "Java_org_opencv_dnn_Dnn_createTorchImporter_11", "_ZN2cv6detail10Timelapser10test_pointENS_6Point_IiEE", "icv_p8_ippiSet_8u_C3MR", "icv_p8_ownCopySubpix_8u16u_C1R_Sfs_V8", "icv_p8_ownippsSqrt_64f", "icv_h9_ownscDFTfwd_5_scale_32fc", "icv_s8_piGradientScharr8u_c1", "icv_h9_ownpi_WarpAffineSimpleLinear_64f_C4R", "_ZN2cv17DescriptorMatcher6createERKNS_6StringE", "cvCreateFileCaptureWithPreference", "icv_g9_ippiMean_StdDev_16u_C1R", "icv_h9_ownSS1_54_32f", "icv_s8_ownAFilterRow32f_16u_C3R", "icv_w7_ownsrDFTinv_7_64f", "_ZN2cv9videostab17TwoPassStabilizer21runPrePassIfNecessaryEv", "icv_w7_owns_initDctFwd_Fft_32f", "icv_s8_ownscDft_Dir_32f", "_ZN2cv3hal8integralEiiiPKhjPhjS3_jS3_jiii", "icv_g9_ownpi_Rotate90_B_8_C1R", "icv_w7_innerHSVToRGB_8u_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_X_W7cn", "icv_w7_ownpi_WarpAffineSimpleCubic_16s_C3R", "icv_w7_owniFlipCopy_32s_C3", "icv_h9_ippiCopyReplicateBorder_16u_C3R", "icv_p8_owniFilterMedianBorderInMem_8u_C1R", "icv_s8_ownpi_Histogram_16u_C4R", "icv_s8_ownpi_WarpAffine_L_Mem_16s_C3", "icv_h9_ownGetPxl256_8u", "icv_g9_owniResizeLinear_16s_C4R", "_ZSt15set_new_handlerPFvvE", "icv_p8_ownsGetSizeTabDftInvRec_32f", "_ZN2cv14DownhillSolver6createERKNS_3PtrINS_16MinProblemSolver8FunctionEEERKNS_11_InputArrayENS_12TermCriteriaE", "icv_s8_owns_cFFTinv_8_scale_32fc", "icv_s8_ippiFilterBoxBorder_16u_C4R", "icv_s8_owniSet_8u_C3M_W7", "icv_h9_ownRow3Linear32f", "icv_w7_ippiMean_StdDev_16u_C1R", "icv_n0_own_ipps_dSqrt_S9EPnnn", "icv_p8_ownLaplace3x3Row_16s_AC4", "_Z18vector_Rect_to_MatRSt6vectorIN2cv5Rect_IiEESaIS2_EERNS0_3MatE", "icv_g9_ippiCopyConstBorder_32f_C3R_L", "icv_s8_ownSumSq_8u_C3CMR_V8", "icv_s8_ownpi_dInterVector_NN_8_P3", "Java_org_opencv_features2d_Feature2D_detectAndCompute_10", "icv_w7_ownResize3Antialiasing_16s", "icv_h9_ownsInitTabDftInvRec_64f", "icv_p8_cv_ownFilterMxMnCalcBuf", "ippicviResizeGetBufferSize_L", "icv_s8_ownpi_CountInRange_32f_C3R", "_ZN9_IplImageC2ERKN2cv3MatE", "icv_p8_ownpi_WarpAffine_L_16u_C1", "_ZN2cv9SparseMat3ptrEibPj", "icv_p8_ownippiFilterMedian_16s_C1R_5x5", "icv_p8_owniCorrectAutoNormMean_8u32s_C1R", "icv_g9_owniFilterBilateralR1_InMem_32f_C1R", "Java_org_opencv_video_BackgroundSubtractorMOG2_setComplexityReductionThreshold_10", "icv_p8_ippiCopyConstBorder_32s_C1R", "_ZN2cv9AlgorithmC2Ev", "icv_g9_owniFilter32f_16u_C3R_g9e9_7", "_ZN2cv9videostab18InpaintingPipeline14setMotionModelENS0_11MotionModelE", "icv_ipp_clear_ssx", "_ZN3tbb8internal9schedulerD2Ev", "icv_p8_ippiCopyConstBorder_16s_C4R", "icv_p8_ownMinEigenVal_32f_C1R_W7", "icv_h9_ippiAddC_32f_C1R", "icv_s8_ownscrDftInv_Prime2_32f", "icv_p8_ownAddProduct_8u32f_C1IR_W7", "icv_g9_ippiCopyConstBorder_16u_C3R", "icv_g9_ownpi_WarpAffine_L_Mem_64f_C4", "icv_h9_ownippsCnvrtFin_32f8s_AVX", "icv_h9_owniResizeLanczos_32f_C4R", "icv_h9_ippiScaleC_16s16u_C1R", "icv_g9_CopyWithBorder8u", "icv_s8_ownAddProduct_8u32f_C1IR_W7", "icv_s8_ownLaplCol5x5_16s_C1", "Java_org_opencv_imgproc_Imgproc_warpPerspective_12", "icv_w7_ippiCopyReplicateBorder_8u_C3IR", "icv_w7_ippsCos_32f_A24", "icv_h9_owniNormLevel_32f_C1R", "WebPEncodeLosslessBGRA", "icv_w7_ippiCopyReplicateBorder_32f_C3R", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_11", "icv_w7_ownCalcBorderR1Linear64f", "icv_p8_ippsZero_64f", "icv_h9_ippiSet_32s_C1MR", "icv_h9_ownResize3Linear32f", "_ZN3tbb8internal3rml14private_serverC1ERNS1_10tbb_clientE", "_ZN2cv5utils5trace7details6Region17LocationExtraData4initERKNS3_21LocationStaticStorageE", "_ZN2cv11RNG_MT199377uniformEii", "icv_s8_ownscDftFwd_Fact7_64fc", "icv_p8_ownsrDFTfwd_11_64f", "icv_s8_ownpi_Max_32f_C4R", "icv_g9_owniFilter32f_16u_C1R_g9e9_1", "icv_w7_ownscrDftFwd_Fact4_32f", "icv_h9_ippiIntegral_8u32f_C1R", "Java_org_opencv_photo_Photo_createTonemap_11", "icv_s8_ippiAddWeighted_16u32f_C1IMR", "icv_s8_ownAFilterRow_8u_C3R", "icv_p8_owniFilterBilateralR1_InMem_8u_C3R", "icv_w7_ownsConvert_16s32f_Sfs_W7", "icv_w7_owniCopy8u_C3P3_88_A6", "icv_g9_ippiNormDiff_L1_8u_C1MR", "icv_h9_ownResize3Lanczos2_8u", "icv_h9_ippiCopy_32f_C3C1R", "icv_p8_ownscDFTfwd_3_scale_32fc", "_ZN2cv3ocl6Kernel3setEiRKNS0_9KernelArgE", "_ZNK2cv21DetectionBasedTracker10getObjectsERSt6vectorINS_5Rect_IiEESaIS3_EE", "icv_h9_owniResizeLinear_32f_C1R", "icv_w7_ownscDFTinv_15_32fc", "icv_s8_ownsrDFTfwd_6_scale_32f", "icv_g9_ownpi_WarpAffine_L_Repl_16u_C4", "icv_g9_ownsrDftFwd_PrimeFact_32f", "icv_h9_ippiNormDiff_Inf_16u_C3CMR", "icv_p8_owniResizeAntialiasingCubicInit_L", "_ZNK2cv3ocl5Queue3ptrEv", "icv_g9_ippiFilterMedianBorder_16s_C4R", "_ZNK2cv4cuda10DeviceInfo21texturePitchAlignmentEv", "icv_s8_cv_ownippiFilterMin_32f_Col", "icv_p8_ownpi_WarpAffine_C_Const_32f_C4", "icv_h9_owniCopyMirrorBorder_8u_C3IR", "icv_h9_ownpi_WarpSimpleNearest_8u_C3R", "icv_h9_ippiScaleC_8u_C1IR", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_W7", "icv_p8_ippiMinIndx_32f_C1R", "icv_w7_ownApplyHaarClassifierAllImg8PixSparceMask_W7", "Java_org_opencv_core_Mat_nDump", "Java_org_opencv_features2d_Params_get_1minDistBetweenBlobs_10", "icv_g9_ownpi_Rotate90_B_8_C4R", "icv_g9_ippiNormDiff_L1_8u_C3CMR", "icv_w7_ippiSwapChannels_32f_C3R", "icv_w7_ippiFilterBorder_16u_C1R", "icv_w7_ownippsSqrt_64f", "icv_g9_ownpi_WarpAffine_NN_Mem_32f_C1", "icv_p8_ownSS1_21_16u", "icv_h9_ownColLanczos3_8u", "icv_w7_ippiCopy_32f_P3C3R", "icv_s8_ownpi_dInterVector_L_16u_C1", "_ZN3tbb19task_scheduler_init9terminateEv", "icv_p8_ownNormRel_L1_8u_C3CMR_V8", "icv_p8_ippiFilterRowBorderPipeline_32f_C3R", "icv_g9_ownpi_WarpAffine_NN_Const_16u_C1", "icv_w7_ippiMorphClose_32f_C1R_L", "icv_w7_ownpi_Sum_8u_C3R", "ippicvsSortRadixAscend_16s_I", "_ZNK3tbb8internal3rml11tbb_factory21call_with_server_infoEPFvPvPKcES3_", "icv_g9_ownpi_WarpSimpleLinear_64f_C3R", "icv_g9_ippiMean_8u_C3R", "ippicviGetNormalizedCentralMoment_64f", "icv_s8_ippiMinMax_8u_C1R", "ippicviTranspose_16u_C3IR", "_ZN2cv3logERKNS_10softdoubleE", "ippicviResizeGetBorderSize_L", "icv_p8_ippiSub_8u_C4RSfs", "_ZN2cv12GaussianBlurERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEddi", "icv_w7_ownResize4Linear16u", "icv_g9_ownSS4_32f", "icv_p8_ownCalcBorderR3Lanczos3_8u", "_ZN2cv3ocl32buildOptionsAddMatrixDescriptionERNS_6StringERKS1_RKNS_11_InputArrayE", "_ZN2cv3LDA19subspaceReconstructERKNS_11_InputArrayES3_S3_", "icv_s8_ownpi_WarpAffineSimpleLinear_8u_C3R", "icv_g9_ippiErode_8u_C3R_L", "ippicviCannyBorderGetSize", "_ZN2cv11minAreaRectERKNS_11_InputArrayE", "icv_w7_ownsConvert_16s32s_W7", "_ZN2cv4UMatC1ERKS0_RKNS_5Rect_IiEE", "ippicviErode_32f_C1R_L", "icv_p8_ownpi_Sum_8u_AC4R", "icv_p8_ownscDftFwd_Prime2_64fc", "icv_p8_ownNorm_L1_8u_C1MR_W7", "icv_p8_ownpi_dInterPoint_C_Plane_32f", "_ZN2cv12setUseOpenVXEb", "icv_h9_ownippiFilterMedianHoriz_16s_BC4R", "icv_p8_owniTranspose_32s_C4IR_W7", "icv_g9_ippsSqrt_64f_A50", "icv_s8_ownSS3_98_16u", "icv_g9_ownippiFilterxBrd32f_16s_C4R", "icv_w7_ippiMorphTophat_8u_C4R_L", "icv_h9_ownscDFTfwd_10_64fc", "_ZN2cv11RNG_MT19937cvfEv", "icv_h9_ownSS3_54_8u", "icv_s8_ippiFilterMedianBorder_8u_C4R", "icv_p8_ippiScaleC_32f32s_C1R", "icv_p8_ownpi_WarpAffine_NN_8_P3", "icv_p8_ippsPolarToCart_64f", "icv_h9_ownsrDFTfwd_3_scale_64f", "icv_p8_innerNormL1_5x5", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_3x3_P8Y8cn", "icv_h9_ippiCopy_16s_AC4R", "icv_h9_ownscDftFwd_Prime2_32fc", "icv_g9_ownippsCnvrtFin_32f16s_AVX", "ippicviMorphOpen_8u_C1R_L", "icv_w7_ippiConvert_32s16u_C1RSfs", "icv_w7_ownAFilterRow_16s_AC4R", "icv_n0_own_ipps_sExp_W7HAynn", "icv_p8_owniScaleC_16u16s_C1R_fst", "icv_n0_own_ipps_sSqrt_S9EPnnn", "icv_s8_ippiCopyMirrorBorder_16u_C1R", "icv_w7_ownsMulC_64f_I", "icv_w7_ownpi_Sum_16s_C1R", "Java_org_opencv_core_Core_dct_10", "icv_h9_ownRow4Cubic32f", "icv_h9_ownippiFilterMax_8u_Row_avx2", "_ZN2cv13getRectSubPixERKNS_11_InputArrayENS_5Size_IiEENS_6Point_IfEERKNS_12_OutputArrayEi", "ippicviScaleC_8u_C1R", "icv_w7_ownscDftFwd_Prime6_64fc", "icv_p8_owns_initDctFwd_Conv_32f", "icv_w7_ownpi_WarpAffineSimpleCubic_16u_C4R", "icv_p8_ownippiFilterMedianHoriz_8u_C4R_5x1", "ippicviResizeNearest_16u_C1R_L", "icv_p8_cv_ownMorphologyBorderInit_L", "icv_w7_ippiCopy_32f_C1C3R", "icv_s8_ippiThreshold_LTVal_8u_C1R", "icv_w7_owns_cFFTinv_4_32fc", "icv_p8_getMaskFeature", "icv_g9_ownsrDFTinv_10_scale_64f", "_ZNK2cv3dnn19experimental_dnn_v13Net23getUnconnectedOutLayersEv", "icv_w7_owniCopy16s_C4P4_A6", "icv_w7_owniSet_16s_C3M_W7", "icv_p8_ownAddProduct_16u32f_C1IMR_W7", "icv_w7_ownNorm_L1_8u_C3CMR_A6", "icv_p8_ownippiFilterMedianCross_16u_C4R_5x5", "llwiCopy", "icv_w7_ownscDftFwd_Prime16_64fc", "_ZN2cv18illuminationChangeERKNS_11_InputArrayES2_RKNS_12_OutputArrayEff", "icv_s8_ownsrDFTfwd_7_64f", "icv_h9_ippiTranspose_8u_C1IR", "icv_g9_ippsSortRadixIndexAscend_8u", "icv_s8_ownsrDFTfwd_12_scale_32f", "icv_h9_owniResizeGetSrcRoi", "icv_h9_owniFilter32f_16s_C3R_g9e9_4", "icv_p8_ownSS1_52_16s", "Java_org_opencv_core_Core_setIdentity_10", "Java_org_opencv_imgproc_Imgproc_cornerHarris_11", "icv_w7_ippiFilterMedianCross_8u_C3R_5x5_A6", "_ZN2cv6detail7Blender5blendERKNS_17_InputOutputArrayES4_", "icv_g9_owniCopy_32s_C3MR", "Java_org_opencv_features2d_Params_set_1maxConvexity_10", "icv_s8_ownLaplRow5x5_16s_C4", "icv_p8_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "icv_p8_ippiWarpAffineCubic_8u_C1R", "icv_g9_ownLinearKernelAA", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "_ZN2cv9videostab17MotionEstimatorL1C1ENS0_11MotionModelE", "Java_org_opencv_imgproc_Subdiv2D_initDelaunay_10", "icv_p8_owns_cFftInv_Fact4_Last_64fc", "icv_s8_ownippiFilterxBrd32f_16s_C3R", "icv_s8_ippiMirror_16s_C1IR", "_ZN2cv3ocl6Kernel3runEiPjS2_bRKNS0_5QueueE", "icv_w7_ippiSet_32s_C1R", "icv_s8_ippiFilterSobelHorizBorder_32f_C1R", "icv_h9_ownippiFilterMin_16u_RowCol_C1_h9l9", "icv_w7_ippiConvert_16u32f_C1R", "icv_w7_ownpi_WarpAffine_NN_Mem_8u_C4", "_ZN2cv6detail13estimateFocalERKSt6vectorINS0_13ImageFeaturesESaIS2_EERKS1_INS0_11MatchesInfoESaIS7_EERS1_IdSaIdEE", "icv_h9_ownippiFilterMax_16s_Row_h9l9", "icv_w7_owniSqrDistanceNormGetSize", "icv_w7_ownAdd_8u32f_C1IMR_W7", "icv_s8_ownpi_WarpAffine_NN_Repl_32f_C4", "_ZN2cv3Mat10deallocateEv", "icv_p8_ownpi_WarpAffine_C_Const_8u_C3", "icv_s8_ownippiFilterMedianHoriz_16u_C1R_3x1", "icv_h9_ippsMin_32f", "icv_h9_ippiDotProd_32s64f_C1R", "icv_w7_ippsDFTInit_C_32fc", "_ZN2cv6detail11PlaneWarper9warpPointERKNS_6Point_IfEERKNS_11_InputArrayES8_", "icv_s8_ownippiFilterxBrd32f_8u_C1R", "icv_s8_ownpi_WarpAffineSimpleCubic_16u_C1R", "icv_n0_own_ipps_dCos_V8EPnnn", "icv_w7_ownpi_SimpleRotate_8u_C3R", "icv_p8_ownpi_Rotate90_B_16_C4R", "icv_s8_ownippiFilterMedianVert_16u", "icv_n0_own_ipps_sLn_S9LAynn", "icv_w7_ownscDFTfwd_3_64fc", "icv_g9_ippiMorphClose_16u_C1R_L", "icv_p8_ownscDftInv_Fact4_32fc", "icv_s8_ownCalcBorderR4Lanczos2_8u", "icv_g9_ippiWarpAffineCubic_8u_C3R", "icv_p8_ownpi_NormL1_8u_C1R", "Java_org_opencv_core_Core_divide_13", "_ZNSt8bad_castD1Ev", "icv_p8_ownNormDiff_Inf_32f_C1MR_W7", "ippicviSqrIntegral_8u32s_C1R", "icv_g9_ippiCopyReplicateBorder_32f_C3R", "Java_org_opencv_calib3d_Calib3d_calibrateCamera_11", "icv_s8_ownCalcBorderR1Lanczos3_16u", "icv_g9_owns_rFFTfwd_32_scale_32f", "icv_s8_ownippsMagn_16sc32f", "icv_p8_owniSwapChannels_32u_C4C3R", "icv_h9_ippiSet_16u_C4R", "_ZN2cv20FarnebackOpticalFlow6createEidbiiidi", "icv_g9_cv_ownMorphologyGetSize_L", "icv_p8_ownscDftInv_Prime6_32fc", "icv_h9_ownippiFilterMedianSqr_8u_C4R", "icv_g9_owniFilterBoxBorder_32f_C1R", "icv_p8_ippiMean_32f_C4R", "icv_s8_ownpi_MinMax_32f_AC4R", "_ZNK11CvSparseMat15copyToSparseMatERN2cv9SparseMatE", "icv_s8_ippiFilterSobelVertBorderGetBufferSize", "icv_h9_ownsAdd_8u", "_ZN2cv12VideoCapture4openERKNS_6StringEi", "_ZN2cv7addTextERKNS_3MatERKNS_6StringENS_6Point_IiEERKNS_6QtFontE", "Java_org_opencv_core_Core_bitwise_1and_11", "icv_s8_owniFilter_32f_C3R_v8u8_6", "icv_w7_ownpi_OrC_32s_C1R", "icv_p8_ownSS1_81_32f", "icv_s8_ippiFFTInv_PackToR_32f_C1R", "icv_h9_ownsrDFTfwd_3_scale_32f", "icv_n0_own_ipps_dExp_W7EPnnn", "icv_h9_ownscDFTfwd_12_64fc", "icv_s8_ownCanny_16s8u_C1R_2_32s_W7", "_ZN2cv3ocl6KernelC2EPKcRKNS0_13ProgramSourceERKNS_6StringEPS7_", "icv_h9_owns_cCcsRecombine_32f", "_ZN2cv5EMDL1ERKNS_11_InputArrayES2_", "icv_p8_ippsFFTGetSize_R_32f", "_ZN2cv12VideoCapture4openEi", "icv_p8_owns_cCcsRecombine_64f", "_ZNK2cv3ocl6Device15image3DMaxDepthEv", "icv_h9_ownResize3Antialiasing_32f", "icv_w7_ownCalcBorderR3Cubic8u", "_ZN2cv9softfloatC1Ex", "icv_h9_ippiCopy_8u_C3R", "icv_h9_ownpi_WarpAffine_L_Mem_16u_C4", "icv_s8_ippiFilterMin_32f_Col_AC4_A6", "iwiScale", "icv_p8_ownpi_WarpAffineNearest_32f_C1R", "_ZN2cv6detail19ExposureCompensator13createDefaultEi", "_ZN2cveqERKNS_3MatES2_", "icv_p8_ownSS3_53_16u", "icv_h9_owniConvert_32f32s_ccode", "icv_p8_ippiMirror_8u_C3IR", "icv_s8_ownCopySubpix_32f_C1R_W7_1", "icv_p8_ownsMul_16s", "icv_p8_ippsSortRadixIndexAscend_16s", "icv_h9_owniFilter_32f_C4R_g9e9_4", "icv_p8_ownscrDftFwd_Prime_32f", "icv_w7_ownHipass5x5Col_16s_C1", "icv_s8_ippiNorm_L1_32f_C1MR", "icv_w7_ippiFilterRowBorderPipeline_32f_C1R", "icv_g9_ownpi_WarpAffine_L_Mem_32f_C3", "icv_s8_ownpis_Indx_32f_C4", "icv_g9_owniFilter32f_16s_C3R_g9e9_8", "Java_org_opencv_features2d_ORB_setPatchSize_10", "icv_g9_ownWarpSimple1Nearest16s", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_X", "icv_p8_ippiSqrIntegral_8u32s64f_C1R", "icv_g9_owniFilter32f_16u_C1R_g9e9_2", "icv_w7_ownscDftInv_Fact13_32fc", "_ZN2cv15calcCovarMatrixEPKNS_3MatEiRS0_S3_ii", "icv_w7_ownCalcBorderR3Linear32f", "icv_g9_ippiCopy_16u_C4R", "icv_s8_ownscDFTfwd_3_scale_32fc", "Java_org_opencv_ml_DTrees_getTruncatePrunedTree_10", "icv_h9_ownpi_Max_16u_C1R", "Java_org_opencv_objdetect_CascadeClassifier_CascadeClassifier_11", "icv_g9_owniFilter_32f_C3R_g9e9_3", "icv_h9_ownsrDFTinv_5_scale_32f", "icv_w7_ownSS3_8u", "_ZN2cv3ocl7Image2DaSERKS1_", "icv_h9_ippiDistanceTransform_3x3_8u_C1R", "icv_h9_ownpi_WarpAffine_C_Transp_32f_C3", "_ZN3tbb10interface78internal15task_arena_base15internal_attachEv", "icv_g9_ippiTranspose_32s_C4R", "icv_h9_cv_ownMorphologyGetSize_L", "icv_g9_ownpi_SimpleRotate_8u_C3R", "icv_w7_owns_BitRev1_C", "Java_org_opencv_dnn_Dnn_blobFromImage_11", "icv_p8_ownFilterRowBorderPipeline_16s_C1R_3x3_V8", "icv_p8_ownpi_WarpAffine_NN_Const_8u_C3", "icv_p8_ownpi_Histogram_FS_32f_C3R", "icv_s8_ownHipass5x5Col_8u_C3", "icv_s8_owns_cFFTinv_4_scale_32fc", "icv_g9_owniExchange_8u_I", "icv_h9_ownFilterBilateralBorder", "icv_h9_ownsrDftInvRecombine_32f", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_V8", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7_sym", "icv_w7_ippiSet_8u_C1MR", "icv_s8_ownpi_WarpAffine_C_Transp_64f_C4", "icv_w7_ownippiFilterMedianHoriz_16u_BC4R_5x1", "_ZN2cv2ml6SVMSGD4loadERKNS_6StringES4_", "icv_p8_ippiCopyMirrorBorder_16s_C4R", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale2_10", "icv_s8_ippiSet_32s_C1MR", "icv_s8_ownscDftFwd_Fact7_32fc", "icv_w7_ippiDFTGetSize_C_32fc", "icv_p8_ownFilter_32f_AC4R", "icv_h9_ippiCopy_32s_C1MR", "icv_w7_ownippsCnvrt_16s16f", "icv_h9_ippiMul_16s_C1RSfs", "_ZN3tbb16spin_rw_mutex_v323internal_acquire_writerEv", "icv_w7_ippsFFTFwd_CToC_64fc", "icv_s8_ownippiFilterMedianHoriz_16u_C4R_5x1", "Java_org_opencv_features2d_ORB_setEdgeThreshold_10", "icv_h9_ownsrDFTinv_10_scale_64f", "_ZN2cv5MutexC2Ev", "icv_p8_ownsCopy_8u", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5_G9E9cn", "icv_p8_ippiScaleC_16s8s_C1R", "icv_s8_ownippiFilterMedianCross_8u_C1R_3x3", "icv_h9_ownNormDiff_Inf_32f_C1MR_HSW", "icv_g9_ownpi_WarpAffine_L_Mem_16s_C4", "icv_w7_ownpi_WarpAffine_L_Repl_32f_C3", "icv_h9_ownApplyHaarClassifier_32f_C1R_HSW", "icv_g9_ippiAddProduct_32f_C1IMR", "Java_org_opencv_features2d_BRISK_create_11", "icv_g9_ownSShorisontal_16s", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_W7", "icv_h9_ownippiFilterMedianSqr_8u_C3R", "icv_s8_ownippiFilterMedian_16s_C4R_5x5", "icv_g9_ownsrDFTfwd_3_32f", "_ZN2cv3hal8recip32fEPKfjS2_jPfjiiPv", "icv_w7_ownpi_Min_16u_C1R", "_ZN3tbb18captured_exceptionD2Ev", "Java_org_opencv_imgproc_Imgproc_arrowedLine_11", "_ZN2cv3Mat7reserveEj", "icv_s8_ownpi_MinMax_16s_C4R", "cvUndistortPoints", "icv_g9_ownpi_ClipLeft", "Java_org_opencv_ml_EM_getTermCriteria_10", "icv_w7_ippiThreshold_GTVal_32f_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_setDetectShadows_10", "icv_h9_ippiCopyReplicateBorder_32s_C3R", "icv_g9_owniScaleC_16s32s_C1R_fst", "icv_s8_ippiTranspose_8u_C1IR", "icv_h9_gres_NormL1_16u_C1R", "_ZNK2cv8Subdiv2D8nextEdgeEi", "_ZN2cv3hal6mul64fEPKdjS2_jPdjiiPv", "_ZN2cv3hal6resizeEiPKhjiiPhjiiddi", "_ZNK2cv7MatExpr3mulERKS0_d", "icv_ipp_is_movbe", "icv_w7_ippiCopy_32f_C1R_L", "icv_h9_ownBuildWarpFilter_32f_Q14", "icv_w7_ownNormRel_Inf_8u_C1MR_W7", "icv_g9_ownFilterColumn32f_16s_C1R_g9e9", "Java_org_opencv_imgproc_Imgproc_initWideAngleProjMap_11", "ippicviWarpAffineCubicInit", "Java_org_opencv_video_BackgroundSubtractorKNN_delete", "icv_s8_ownsrDFTfwd_9_scale_32f", "icv_p8_ownsrDFTinv_9_64f", "_ZN2cv8Subdiv2D10deleteEdgeEi", "icv_h9_ownpi_Rotate90_B_64_C3R", "icv_p8_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_p8_owniFilterRobertsUpBorder2_16s_C1R", "Java_org_opencv_calib3d_StereoBM_setSmallerBlockSize_10", "icv_s8_ippiWarpAffineCubic_8u_C3R", "icv_g9_ownColLinear16s", "icv_g9_ipMirror45_16uC1R", "icv_w7_ownpi_WarpAffineSimpleNearest_32f_C1R", "icv_g9_ownpi_Rotate90_16_C4R", "icv_w7_ippiMul_32f_C1R", "icv_h9_ownscDftInv_PrimeFact_64fc", "icv_h9_ippiMinEigenValGetBufferSize_32f_C1R", "icv_g9_ippiMorphBlackhat_16u_C1R_L", "icv_p8_ownscDFTfwd_7_scale_64fc", "_ZN2cv15KeyPointsFilter16removeDuplicatedERSt6vectorINS_8KeyPointESaIS2_EE", "icv_s8_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_W7", "icv_g9_owniResizeAntialiasing_8u_C1R_L", "_ZNK2cv4UMat3invEi", "ippicviScaleC_16s8u_C1R", "_ZN2cvmiERKNS_7MatExprERKNS_7Scalar_IdEE", "icv_w7_ippsSortRadixAscend_8u_I", "icv_g9_ownSS1_21_32f", "icv_g9_ownFilterBoxBorderInMem5x5_16u_C1R", "ippicviMorphOpen_16s_C1R_L", "icv_g9_owniResizeLinear_32f_C1R", "icv_g9_ippiTranspose_32s_C1R", "icv_h9_owniResizeNearest_32f_C3R", "icv_s8_ippiCopyConstBorder_8u_C3R", "_ZN2cv6detail12DpSeamFinder9findEdgesEv", "icv_p8_ippiCopy_16s_C4P4R", "icv_g9_ippiSwapChannels_32f_C3C4R", "cvSubstituteContour", "icv_w7_owniAutoNormMean_32f_C1R", "icv_g9_ownscDftFwd_PrimeFact_64fc", "_ZN2cv3MatC2EiPKiiPvPKj", "icv_w7_ownNorm_L2_32f_C3CMR_W7", "icv_h9_owniResizeSuper_16s_C4R", "icv_s8_ownSS3_65_8u", "icv_h9_ownRow1Filter12_16u", "cvFindContours", "Java_org_opencv_imgproc_Imgproc_accumulate_11", "icv_s8_ownscDFTinv_11_64fc", "ippicviThreshold_LTVal_8u_C1IR", "icv_h9_ownpi_WarpAffineLinear_8u_C3R", "icv_p8_ippiDilateInit_L", "icv_s8_ownResize3Lanczos2_16s", "icv_p8_ownscDftInv_Fact4_64fc", "icv_p8_ippiCopy_32f_C3MR", "icv_s8_ownsMul_64fc_I", "icv_g9_ippiMean_16u_C3CMR", "icv_g9_ippsDFTGetSize_R_32f", "icv_w7_ippiMul_8u_C1RSfs", "icv_g9_owniConvert_32s32f_C1R", "icv_w7_ownsrDFTinv_12_scale_32f", "ippicviMorphGradient_16u_C1R_L", "icv_h9_owniFilterBilateralR2_InMem_8u_C3R", "icv_p8_ippiScaleC_8s_C1IR", "icv_s8_ownpi_WarpAffineLinear_16u_C1R", "icv_p8_owns_initDctInv_Fft_32f", "icv_w7_ippiHarrisCorner_32f_C1R", "icv_s8_owniFlipCopy_32s_C1", "icv_p8_L1magnitude_32f", "Java_org_opencv_calib3d_Calib3d_estimateAffine2D_10", "icv_w7_ownCanny_16s8u_C1R_2_32s_W7", "Java_org_opencv_features2d_BFMatcher_BFMatcher_10", "icv_s8_ownHipass5x5Col_32f_C1", "icv_h9_owniScaleC_32f8u_C1R_acc", "icv_g9_owniFilter32f_16u_C4R_g9e9_8", "icv_p8_ownpi_WarpAffineSimpleCubic_8u_C4R", "icv_s8_ippiSub_16u_C1RSfs", "_ZN2cv3ocl9useOpenCLEv", "icv_h9_ownColLanczos3_32f", "icv_p8_ippiWarpAffineLinear_16u_C3R", "icv_h9_ownscDFTinv_12_32fc", "icv_h9_ippiCopyConstBorder_8u_C4R", "icv_s8_ippsFFTGetSize_R_32f", "_ZN2cv3dnn19experimental_dnn_v110BlankLayer6createERKNS1_11LayerParamsE", "_ZN3tbb8internal6marketC2Ejjj", "icv_h9_owniFilterBilateralR1_InMem_8u_C3R_L", "Java_org_opencv_ml_ParamGrid_get_1minVal_10", "_ZN2cv6detail19AKAZEFeaturesFinder4findERKNS_11_InputArrayERNS0_13ImageFeaturesE", "_ZN2cv21getStructuringElementEiNS_5Size_IiEENS_6Point_IiEE", "icv_s8_ippiResizeAntialiasing_16u_C3R_L", "icv_g9_ownsrDFTinv_11_scale_32f", "icv_p8_ownpi_WarpAffineSimpleCubic_32f_C4R", "icv_s8_ippiXor_8u_C1R", "icv_g9_ownpi_NormL1_32f_C1R", "ippicviScaleC_64f32s_C1R", "icv_s8_ownpi_WarpAffine_C_Mem_32f_C3", "icv_s8_ownSS3_98_16s", "icv_s8_ownippiFilterMedian_16s_C3R", "WebPDecodeRGBAInto", "icv_w7_ippiMorphTophat_16s_C1R_L", "_ZNK2cv9softfloatmlERKS0_", "icv_p8_ownsrDFTfwd_7_64f", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "icv_h9_ippiResizeAntialiasingCubicInit_L", "icv_p8_ownpi_OrC_16u_C4R", "icv_s8_ownippiThreshold_16s_C1", "icv_p8_ippiWarpAffineNearest_16s_C3R", "icv_w7_ippiMirror_32s_C3R", "icv_s8_ippsAtan2One", "icv_w7_ownResize3Antialiasing_8u", "icv_p8_ownscDftFwd_Fact2_64fc", "_ZNK2cv4cuda10DeviceInfo16asyncEngineCountEv", "icv_s8_ownNormRel_L2_16u_C1MR_W7", "_ZNK2cv3ocl6Device16maxWorkGroupSizeEv", "_ZN3tbb8internal6market29mandatory_concurrency_disableEPNS0_5arenaE", "icv_p8_ipMirror135_32uC1R", "icv_g9_ownpi_dInterVectorClip_C_16u_C1", "icv_s8_ownSS1_41_16u", "icv_h9_ippiDCT8x8Inv_32f_C1", "cvClone", "ippicvsInvSqrt_32f_A21", "icv_w7_ippiDCTFwdGetSize_32f", "icv_s8_ippiWarpAffineCubic_16s_C4R", "icv_w7_ownippiFilterMedianCross_16u_C4R_5x5", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_W7", "icv_w7_ownpis_Indx_8u_C4", "icv_p8_owniCopy_8u_C4MR", "icv_s8_ownpi_WarpAffineCubic_64f_C3R", "icv_w7_ownippsCnvrt_32f8u_Sfs", "icv_w7_ownscDFTinv_13_64fc", "icv_g9_ownsrDftFwd_Conv_64f", "icv_s8_ippsConvert_64f32f", "Java_org_opencv_calib3d_Calib3d_calibrateCameraExtended_11", "Java_org_opencv_video_FarnebackOpticalFlow_setFastPyramids_10", "_ZN2cv6detail11MatchesInfoC1Ev", "_ZNSt8bad_castD0Ev", "_ZN2cv20fastNlMeansDenoisingERKNS_11_InputArrayERKNS_12_OutputArrayEfii", "cvSetIdentity", "_ZN2cv19createHanningWindowERKNS_12_OutputArrayENS_5Size_IiEEi", "Java_org_opencv_photo_Photo_decolor_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_W7", "icv_w7_ownpi_WarpAffine_L_Const_8u_C3", "icv_h9_ippiMin_32f_C1R", "icv_s8_ippiAddProduct_8u32f_C1IMR", "ippicviNormRel_L2_8u_C1MR", "_ZNK2cv4cuda10DeviceInfo11maxGridSizeEv", "icv_h9_ownpi_WarpAffine_NN_Mem_64f_C3", "ippicviResizeCubic_16u_C3R_L", "icv_w7_ownippiFilterMedian_16s_C3R", "_ZN3tbb8internal5arena22orphan_offloaded_tasksERNS0_17generic_schedulerE", "icv_g9_owniCopy_8u_C4P4R_cn", "icv_w7_ownscDftFwd_Prime16_32fc", "icv_s8_ippiResizeNearest_32f_C1R_L", "icv_s8_ippiConvert_8u32s_C1R", "icv_h9_ippiCopy_32f_C1C3R", "icv_w7_ownsMul_32f", "icv_g9_ippsDFTInit_R_64f", "Java_org_opencv_core_Mat_n_1elemSize1", "icv_g9_ownSS4_31_8u", "icv_h9_ownsFFTGetBufSize_C_64fc", "icv_g9_owniConvert_16s8u_C1R", "Java_org_opencv_photo_MergeRobertson_process_10", "icv_p8_ownSS3_32_32f", "icv_h9_owniScaleC_16s64f_C1R_fst", "icv_s8_ippiFilterMedianBorder_16u_C1R", "icv_p8_owniFilterMedianSqr3x3_32f_C1R", "Java_org_opencv_core_Core_subtract_14", "Java_org_opencv_ml_NormalBayesClassifier_predictProb_11", "icv_s8_ownpi_dInterVectorClip_NN_16_P4", "icv_p8_ownpi_WarpAffine_C_Mem_64f_C3", "_ZN2cv17DescriptorMatcher20DescriptorCollectionD1Ev", "_ZNK2cv17DescriptorMatcher20DescriptorCollection4sizeEv", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_W7", "Java_org_opencv_photo_Photo_createTonemapDurand_10", "cvRandShuffle", "icv_g9_ownSS3_54_32f", "icv_p8_ownsConvert_32f64f_W7", "icv_w7_ippiFilterBilateralBorder_32f_C1R", "icv_s8_owniFilterSobelHorizSecondBorder2_32f_C1R", "Java_org_opencv_photo_AlignMTB_process_10", "_ZN2cv3dnn19experimental_dnn_v112SigmoidLayer6createERKNS1_11LayerParamsE", "icv_g9_ownippiFilterMedian_16s_BC4R", "icv_h9_owncvMinMaxIndx_32f_C1R_H9L9", "icv_w7_ownpi_WarpAffine_NN_Mem_32f_C3", "_ZNK2cv3Mat9locateROIERNS_5Size_IiEERNS_6Point_IiEE", "icv_p8_ownCalcBorderR3Linear16u", "_ZN2cv18createMergeMertensEfff", "icv_s8_ippsMalloc_8u_L", "icv_h9_ippiResizeLanczos_32f_C4R_L", "icv_p8_ownSS3vertical_32f", "ippicviNormDiff_L1_32f_C1MR", "icv_h9_ownpi_WarpAffine_C_Mem_16u_C4", "icv_s8_ippiCopy_8u_C1R_L", "icv_p8_ownippiFilterMin_16u_Row", "icv_s8_owniResizeLinearInit", "Java_org_opencv_imgproc_Imgproc_warpAffine_11", "cvCalcArrBackProject", "Java_org_opencv_calib3d_Calib3d_decomposeProjectionMatrix_10", "ippicviSet_8u_C3MR", "icv_s8_ownpi_WarpSimpleLinear_16s_C4R", "icv_p8_ownCopySubpix_8u16u_C1R_Sfs_W7", "icv_w7_ownpi_WarpAffine_C_Repl_16s_C4", "icv_w7_ownippiFilterMedianHoriz_16s_C4R", "_ZN2cv9videostab15VideoFileSource3fpsEv", "icv_w7_ownpi_ClipLeft", "icv_w7_ownsMul_8u_Bound", "icv_p8_ownSS3_54_16s", "icv_g9_owniScaleC_32s8s_C1R_fst", "icv_s8_ownHipass5x5Col_32f_AC4", "icv_p8_ownscDftInv_Prime4_32fc", "icv_w7_ownpi_dInterVectorClip_C_8u_C1", "_ZThn384_N2cv9videostab17TwoPassStabilizer9nextFrameEv", "icv_g9_owngetSizeBufferOfBorders", "icv_g9_ippiDistanceTransform_3x3_8u32f_C1R", "_ZNK2cv3ocl6Kernel3ptrEv", "icv_p8_ownippiFilterMax_16s_Col", "icv_s8_owniResizeLanczos_8u_C3R", "cvGraphAddEdge", "Java_org_opencv_features2d_Params_get_1maxArea_10", "icv_s8_ippiWarpAffineCubic_16u_C4R", "icv_w7_owniTranspose_16u_C4IR_W7", "icv_s8_ownpi_Or_32s_AC4R", "icv_p8_ownSS3vertical_16u", "icv_p8_ownpis_Min_16s_AC4", "icv_p8_ippiMean_16s_C3R", "icv_w7_ownippiFilterMedian_16u_C4R_5x5", "cvGraphRemoveVtxByPtr", "ippicviErode_32f_C4R_L", "icv_p8_ippiFilterBilateralBorder_32f_C3R", "icv_w7_ippiTranspose_16u_C3IR", "icv_p8_ippsDCTFwd_32f", "_ZN10__cxxabiv119__foreign_exceptionD2Ev", "ippicviTranspose_16s_C1IR", "icv_s8_ippiMorphSetMode_L", "icv_s8_ippiCopy_32s_C1MR", "Java_org_opencv_dnn_Net_forward_14", "ippicviWarpAffineCubic_8u_C1R", "icv_g9_ippiConvert_16s8u_C1R", "icv_s8_ippiSqrDistanceNorm_32f_C1R", "ippicvsSortRadixDescend_32f_I", "icv_p8_ownSS1_83_16s", "Java_org_opencv_features2d_MSER_create_11", "icv_p8_ownsSet_16u", "icv_s8_owniFlip_32s_C3", "icv_h9_ownNormDiff_L1_8u_C1MR_HSW", "_ZNK2cv8Subdiv2D6Vertex9isvirtualEv", "icv_g9_ippiNormDiff_Inf_16u_C1R", "icv_h9_ownpi_WarpAffineCubic_16u_C1R", "icv_g9_ownscDftFwd_Fact7_64fc", "icv_p8_ownippiFilterMedian_16s_BC4R_3x3", "icv_s8_ownscrDftInv_Fact3_64f", "_ZN2cv9videostab28KeypointBasedMotionEstimatorC2ENS_3PtrINS0_19MotionEstimatorBaseEEE", "cvReleaseGraphScanner", "icv_s8_ownpi_dInterVectorClip_L_16u_P3", "_ZNK2cv9Exception4whatEv", "_ZN2cv8va_intel20convertFromVASurfaceEPvjNS_5Size_IiEERKNS_12_OutputArrayE", "_ZN2cveqERKNS_3MatEd", "icv_g9_piFilterRow_32f_C1R_g9e9", "icv_s8_ippiTranspose_8u_C4IR", "_ZN2cv9videostab17MotionEstimatorL18estimateERKNS_11_InputArrayES4_Pb", "icv_s8_ownsSet_8u", "icv_w7_ippiScaleC_64f_C1R", "icv_h9_ippiConvert_8s32s_C1R", "icv_p8_ippiDCTInv_32f_C1R", "_ZNK2cv3ocl7Context3ptrEv", "_ZN3tbb8internal5arenaC1ERNS0_6marketEjj", "icv_w7_owns_cFFTinv_8_32fc", "icv_h9_ownRow3Cubic16s", "icv_h9_ownscDFTinv_14_32fc", "_ZNK2cv4cuda10DeviceInfo18maxTexture1DMipmapEv", "icv_w7_ownpi_dInterVector_NN_32_AC4", "icv_p8_ippiTranspose_8u_C3R", "icv_g9_ownpi_WarpAffine_L_Const_16u_C3", "icv_h9_ownsrDFTfwd_12_64f", "icv_p8_ownHipass5x5Row_8u", "icv_w7_ownippiThreshold_GLV_32f_AC4", "icv_p8_ippsMul_64f_I", "icv_p8_ownsfen", "_ZN2cv8superres7arrCopyERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_w7_ippsFFTGetSize_R_32f", "icv_p8_ownscrDftInv_Prime5_32f", "icv_n0_own_ipps_cError", "icv_g9_owniResizeCubic_32f_C3R", "icv_w7_ippiCopyReplicateBorder_8u_C3R", "Java_org_opencv_video_KalmanFilter_set_1measurementMatrix_10", "icv_p8_ippsMul_64fc_I", "_ZN10__cxxabiv119__foreign_exceptionD1Ev", "_ZN2cv6detail18SurfFeaturesFinderC2Ediiii", "icv_h9_ownpi_SimpleRotate_32f_C1R", "_ZN2cv5flann17LinearIndexParamsC2Ev", "icv_p8_ownNormDiff_L1_32f_C3CMR_W7", "icv_p8_ownsrDftFwd_PrimeFact_32f", "icv_w7_ownscDftFwd_Prime2_64fc", "Java_org_opencv_imgproc_Imgproc_getRotationMatrix2D_10", "icv_p8_ownNorm_L2_8s_C1MR_W7", "cvAddS", "icv_h9_ippiCopyMirrorBorder_32s_C3R", "icv_h9_ippiWarpAffineNearest_64f_C3R", "icv_g9_ownResize4Lanczos3_16u", "icv_w7_cv_ownippiFilterMax_16u_Col", "icv_p8_ippiThreshold_Val_32f_C1R", "icv_s8_ownippiThreshold_GV_32f_C4", "iwiFilterMorphology_GetBorderSize", "icv_p8_ownNorm_L1_8s_C1MR_V8", "icv_p8_ippiNormDiff_L1_8u_C3CMR", "icv_s8_ippiNormRel_L2_8u_C1R", "icv_s8_ippiCopy_16u_C1R", "icv_g9_ippiCopy_32f_C4C1R", "_ZNK2cv14DefaultDeleterI9CvCaptureEclEPS1_", "icv_s8_ownHipass5x5Col_8u_C1", "_ZN2cv3hal8merge64sEPPKxPxii", "ippicviMul_32f_C1R", "icv_p8_ippiThreshold_GT_16s_C1R", "icv_s8_ownCalcBorderR3Lanczos3_16s", "_ZN2cv3ocl7ContextC2Ev", "icv_w7_ownpi_WarpAffine_C_Repl_64f_C3", "cvGraphRemoveEdge", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_W7", "ippicviWarpAffineCubic_16s_C1R", "icv_h9_owns_rFFT_1_32f", "__gcclibcxx_demangle_callback", "icv_p8_ippiDCTInvGetSize_32f", "_ZN2cv9videostab19NullOutlierRejector7processENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayE", "icv_g9_owniGetRectTop_16s", "Java_org_opencv_core_Core_n_1minMaxLocManual", "_ZN3tbb8internal3rml14private_serverD2Ev", "ippicviMinMax_16u_C1R", "icv_p8_owniFilter_32f_C1R_v8u8_4", "icv_s8_ownAdd_16u32f_C1IR_W7", "icv_w7_ownscrDftFwd_Fact_32f", "_ZNK2cv7MatExprclERKNS_5RangeES3_", "_ZN2cv3dnn19experimental_dnn_v15Layer17outputNameToIndexENS_6StringE", "icv_p8_owniCopy_16s_C3AC4R", "icv_h9_ownpi_WarpAffine_NN_Repl_32f_C3", "icv_w7_ippiDotProd_16u64f_C1R", "icv_g9_ownSS4_94_16u", "icv_w7_ippiMirror_32s_C1IR", "_ZN2cv16MatConstIterator4seekEPKib", "icv_p8_ownResize3Nearest8u", "icv_w7_ippiFilterMedianBorder_16u_C4R", "icv_w7_ownippiFilterMedianVert_16s_C4R_1x3", "icv_s8_ippiNormDiff_Inf_8u_C3CMR", "icv_w7_ownsrDFTfwd_14_scale_64f", "icv_s8_ippiMorphOpen_32f_C1R_L", "icv_p8_ippiNormRel_L1_16u_C1MR", "icv_p8_owniCopy_8u_C1_W7", "icv_p8_owniResizeAntialiasingLinearInit_L", "icv_p8_ownSq_32f_C1MR_W7", "_ZN7cvflann17set_distance_typeENS_16flann_distance_tEi", "icv_w7_ippiScaleC_32f16s_C1R", "icv_h9_owns_cFFTinv_32_scale_32fc", "_ZN2cv22SparseMatConstIteratorC2EPKNS_9SparseMatE", "Java_org_opencv_videoio_VideoCapture_retrieve_10", "icv_g9_ownscDFTinv_11_scale_32fc", "icv_g9_ownBuildFilter_32f", "Java_org_opencv_videoio_VideoWriter_fourcc_10", "icv_p8_ownResize3Linear8u", "icv_g9_owniResizeLinearInit", "icv_p8_ownSS1_53_16s", "_ZNK2cv10BOWTrainer16descriptorsCountEv", "icv_h9_ippiResizeLanczos_8u_C1R_L", "icv_h9_ownResize4Lanczos2_16u", "icv_w7_ownpi_SmoothBorderNew", "icv_g9_owns_rFFTfwd_8_scale_32f", "icv_g9_ippiAddWeighted_32f_C1IR", "icv_h9_ownCopySubpixIntersect_8u_C1R_h9l9", "icv_w7_ownpi_WarpAffine_C_Repl_16s_C3", "icv_w7_ippiDCT8x8Inv_32f_C1", "icv_w7_ownsrDFTfwd_3_scale_32f", "icv_g9_ippiDFTGetSize_C_32fc", "icv_s8_ownCanny_32f8u_C1R_Mag_W7", "icv_p8_owniCopy8u_C4P4_48_A6", "Java_org_opencv_photo_MergeMertens_delete", "icv_g9_ippsInvSqrt_32f_A21", "icv_p8_ownpi_dInterVector_L_8u_AC4", "icv_s8_innerHSVToRGB_8u_AC4R", "icv_h9_owniFilterBilateralR1_InMem_8u_C3R_px", "icv_s8_ownRow1Cubic16s", "_ZN3tbb8internal3rml11tbb_factory5closeEv", "icv_w7_ownWarpSimple3Nearest8u", "_ZN2cv3hal6div32sEPKijS2_jPijiiPv", "icv_h9_ownscDftInv_Prime6_32fc", "icv_p8_ownscDFTfwd_6_scale_64fc", "icv_g9_ippsMaxEvery_64f", "_ZN2cv3PCA4readERKNS_8FileNodeE", "icv_w7_ownsConvert_16s32f_W7", "icv_g9_ippiMirror_32s_C1IR", "icv_w7_ownNormDiff_L1_32f_C1MR_W7", "icv_s8_ownSharpenRow_16s_C3", "_ZN2cv4cuda6GpuMatC2EiiiPvj", "iwiResize", "icv_h9_ippiMean_32f_C4R", "icv_s8_ownSharpenRow_8u_C3", "icv_h9_ippiCopyReplicateBorder_16s_C4R", "icv_w7_owns_getSizesTwd_Large_32f", "_ZNK2cv4cuda6GpuMat6copyToERKNS_12_OutputArrayERKNS_11_InputArrayERNS0_6StreamE", "icv_w7_ownNormDiff_L1_8s_C1MR_W7", "icv_p8_ippsSortRadixIndexDescend_16u", "icv_s8_ippiConvert_16u32s_C1R", "Java_org_opencv_ml_EM_create_10", "icv_g9_ippiNorm_Inf_8u_C3CMR", "icv_p8_ownNorm_L2_8u_C1MR_W7", "icv_s8_ownpi_WarpAffine_L_Const_64f_C4", "icv_g9_ippiFilterSobelVertBorder_32f_C1R", "_ZN2cv9selectROIERKNS_11_InputArrayEbb", "icv_p8_ownippiFilterMedianVert_8u_C4R_1x5", "icv_h9_ippiFilterBorder_16u_C4R", "_ZN2cv13getNumThreadsEv", "icv_n0_own_ipps_sSin_W7EPnnn", "icv_p8_ownscDFTfwd_11_32fc", "icv_s8_owns_cFftInv_Fact4_Last_64fc", "Java_org_opencv_ml_RTrees_getActiveVarCount_10", "ippicviMirror_32f_C1R", "icv_s8_owniResizeLanczos_8u_C4R", "icv_g9_innerNormL1_5x5", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_W7", "icv_s8_ownscDFTinv_13_scale_32fc", "icv_h9_ownsMaxEvery_32f_AVX", "icv_p8_piGradient32f", "icv_w7_ippsSin_64f_A53", "icv_s8_ownsrDFTinv_14_64f", "ippicviResizeSuper_16u_C1R_L", "icv_w7_ippsDCTInv_32f", "icv_s8_ippiAdd_32f_C1R", "cvThreshHist", "icv_w7_owns_cFFTinv_4_scale_32fc", "icv_h9_ownColAntialiasing_16s", "_ZN2cv2ml6RTrees6createEv", "icv_p8_ownResize4Antialiasing_16u", "Java_org_opencv_core_Core_bitwise_1not_10", "icv_h9_ippiCopyReplicateBorder_16u_C4R", "Java_org_opencv_core_Core_Mahalanobis_10", "icv_s8_ownCopySubpix_8u_C1R_V8", "icv_p8_ippiErode_32f_C4R_L", "icv_s8_ownCalcBorderR1Cubic32f", "icv_w7_ownResize1Lanczos2_32f", "icv_w7_ownpi_Rotate90_B_8_C1R", "ippicviNorm_L1_16s_C1R", "Java_org_opencv_ml_EM_trainE_11", "icv_g9_ownWarpSimple4Nearest8u", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_W7", "ippicvsMaxEvery_8u", "_ZN2cv3ocl6KernelC2Ev", "icv_g9_ownResize1Cubic16u", "icv_w7_ippiAlphaPremul_8u_AC4R", "_ZN2cv3hal11cvtXYZtoBGREPKhjPhjiiiib", "icv_g9_ippiMinMax_16s_C1R", "_ZN2cv7directx25convertToDirect3DSurface9ERKNS_11_InputArrayEP17IDirect3DSurface9Pv", "icv_h9_ownpi_NormInfDiff_32f_C1R", "icv_w7_ownCopySubpixIntersect_8u_C1R_W7", "icv_s8_ippiMomentGetStateSize_64f", "icv_s8_owniFilterScharrVertMaskBorder2_32f_C1R", "icv_p8_ownpi_Histogram_16s_C3R", "icv_p8_owns_rFFTfwd_16_32f", "icv_w7_ippiScaleC_8u32f_C1R", "icv_s8_owniFilterBoxBorder_32f_C1R", "icv_w7_ownpi_WarpAffine_C_Transp_8u_C4", "icv_w7_ownpi_NormInf_16s_C1R", "icv_g9_owniFilterBilateralR2_InMem_32f_C1R_px", "icv_w7_owns_initTabBitRev", "icv_w7_ownSS1_32f", "_ZNK2cv3ocl6Device14doubleFPConfigEv", "icv_p8_ownsrDFTinv_5_scale_64f", "icv_w7_ownscDFTinv_9_scale_32fc", "_ZN2cv3ocl6KernelC1ERKS1_", "icv_p8_ippiConvert_16u8s_C1RSfs", "icv_h9_ownpi_Rotate90_16_C3R", "icv_s8_owniResizeCubic_8u_C4R", "icv_s8_ownCalcBorderR3Linear64f", "icv_w7_owniFlip_8u_C4_W7", "icv_s8_owniConvert_16s8u_T7", "icv_w7_ownpi_WarpAffine_C_Const_16s_C1", "icv_w7_ownpi_CountInRange_8u_AC4R", "Java_org_opencv_imgcodecs_Imgcodecs_imread_10", "icv_w7_ownsrDFTinv_11_scale_32f", "icv_g9_ownResize4Linear8u", "icv_w7_ippiAdd_16u32f_C1IMR", "icv_p8_ownAddProduct_8u32f_C1IMR_W7", "icv_p8_ippiErode_8u_C3R_L", "icv_p8_ippiMorphGetBufferSize_L", "icv_h9_owniFilter_32f_C1R_g9e9_2", "cvFindChessboardCorners", "icv_w7_ownpi_CmpLT_8u_C1R", "icv_h9_ippiCopy_16s_C4P4R", "icv_s8_ownippiFilterMedianSqr_16s_C3R", "Java_org_opencv_features2d_AKAZE_getDescriptorType_10", "icv_p8_owniCopy32s_C4P4_W7", "icv_p8_ownRow4Antialiasing_16s", "icv_h9_ippsDotProd_64f", "icv_h9_owns_initTabTwd_L1_64f", "icv_g9_ippiResizeLinear_16s_C1R_L", "icv_w7_ippsSet_16s", "Java_org_opencv_features2d_Feature2D_compute_10", "ippicviNormDiff_Inf_16u_C1MR", "icv_h9_owncvMinMaxIndx_8u_C1MR_H9L9", "icv_g9_ownFilterBoxBorderInMem_16s_C1IR", "icv_p8_ippiWarpAffineLinear_8u_C3R", "icv_w7_owns_rFFTinv_4_scale_32f", "icv_p8_ippiCopy_32f_P3C3R", "icv_p8_ippiSet_32f_C1MR", "_ZNK2cv3ocl6Device24profilingTimerResolutionEv", "icv_p8_ownpi_Max_32f_AC4R", "icv_w7_ippiCopyConstBorder_32f_C3R", "icv_p8_ownpi_WarpAffine_L_Mem_8u_C4", "icv_h9_ownResize1Lanczos3_8u", "icv_h9_ownps_Add_16u_Sfs", "icv_h9_ownsrDFTinv_15_scale_64f", "icv_s8_ownpi_Rotate180_32_C3R", "icv_s8_ownWarpSimple4Nearest32f", "icv_p8_ippiFilterMedianBorder_8u_C4R", "icv_h9_owns_rFFTinv_16_64f", "icv_p8_ownpi_Rotate180_8_C1R", "_ZN2cv17CascadeClassifier16setMaskGeneratorERKNS_3PtrINS_21BaseCascadeClassifier13MaskGeneratorEEE", "icv_w7_ippiNorm_L2_32f_C1MR", "icv_g9_ippsSortRadixAscend_16u_I", "Java_org_opencv_ml_TrainData_getTestResponses_10", "ippicvsSortRadixAscend_32f_I", "icv_s8_ippiFilterMedianBorder_16s_C1R", "_ZN2cv3ocl23checkOptimalVectorWidthEPKiRKNS_11_InputArrayES5_S5_S5_S5_S5_S5_S5_S5_NS0_17OclVectorStrategyE", "icv_s8_ippsSortRadixAscend_32s_I", "icv_h9_CopyWithBorder32f", "_ZN2cv8internal18WriteStructContextC1ERNS_11FileStorageERKNS_6StringEiS6_", "icv_n0_own_ipps_sCos_S9EPnnn", "icv_w7_ownHipass5x5Col_16s_AC4", "icv_h9_owns_rFFTfwd_4_scale_64f", "icv_s8_ownCanny_32f8u_C1R_1_32s_W7", "_ZN2cv3dnn19experimental_dnn_v13Net7connectENS_6StringES3_", "_ZN2cv3ogl9Texture2D7releaseEv", "icv_p8_owniTranspose32s_C3R_core2", "icv_s8_ippiCopyConstBorder_32s_C3R", "icv_h9_owniCopyConstBorder_32s_C3R_L", "icv_s8_L1magnitude_16s", "icv_g9_ownCalcBorderR4Lanczos3_16u", "ippicviConvert_16s16u_C1Rs", "icv_p8_ownscrDftInv_Fact4_64f", "icv_h9_ippiScaleC_32s8u_C1R", "_ZN2cv17FlannBasedMatcherC1ERKNS_3PtrINS_5flann11IndexParamsEEERKNS1_INS2_12SearchParamsEEE", "icv_s8_owniFilter_32f_C1R_v8u8_6", "icv_g9_owns_cFFTinv_16_scale_64fc", "icv_h9_owniScaleC_64f32f_C1R_acc", "icv_h9_ippsFFTGetSize_C_64fc", "icv_s8_ownSS1_54_16u", "icv_s8_ippiDistanceTransform_5x5_8u32f_C1R", "Java_org_opencv_imgproc_Subdiv2D_edgeDst_10", "icv_p8_ownSS4_98_32f", "icv_g9_ippiDistanceTransform_3x3_8u_C1R", "icv_s8_ippiSet_8u_C3R", "icv_h9_ownpi_WarpAffineSimpleNearest_8u_C4R", "icv_h9_ownippiFilterxBrd32f_16u_C1R", "icv_h9_ippiConvert_8s16u_C1Rs", "icv_w7_ownscDFTinv_11_64fc", "icv_g9_ownSS1_31_16u", "icv_s8_owniCopy8uas", "icv_s8_ownscrDftFwd_Fact5_64f", "icv_w7_ippiFilterLaplacianBorder_8u16s_C1R", "icv_h9_ippsSortRadixAscend_8u_I", "icv_p8_ownpi_WarpAffineSimpleLinear_16u_C4R", "icv_g9_cv_ownMorphologyBorderInit_L", "_ZN2cv3ocl6KernelD1Ev", "Java_org_opencv_core_Core_divide_10", "cvSaveImage", "icv_s8_ownIntegralSq_8u32f_C1R_V8", "icv_g9_ippiDFTGetSize_R_32f", "icv_g9_ownpis_Min_16u_C1", "icv_p8_ownsAdd_16s_1Sfs", "icv_g9_ownSS3_31_16s", "icv_s8_dct_8x8_fwd_32f", "_ZN2cv6detail20AffineBasedEstimator8estimateERKSt6vectorINS0_13ImageFeaturesESaIS3_EERKS2_INS0_11MatchesInfoESaIS8_EERS2_INS0_12CameraParamsESaISD_EE", "icv_p8_ownsGetSizeTabDftDir_32f", "_ZN3tbb8internal6market12create_arenaEiij", "ippicviWarpAffineLinear_16u_C4R", "ippicviHLSToRGB_8u_C3R", "icv_s8_ownscDft_Dir_32fc", "_ZN2cv8internal15IntrinsicParamsaSERKNS_3MatE", "icv_s8_owniSet16sC3Mas", "icv_w7_ownCalcBorderR4Lanczos3_8u", "icv_g9_ippiHarrisCorner_8u32f_C1R", "icv_w7_ownippsCnvrt_16f32f", "icv_g9_ownSS1_83_32f", "icv_w7_owns_rFFT_2_scale_64f", "icv_g9_ownpi_WarpAffine_L_Mem_16s_C3", "icv_h9_owniScaleC_32s16s_C1R_fst", "icv_g9_ownWarpSimple3Nearest16s", "icv_h9_ownSS1_65_16s", "icv_s8_ownscrDftFwd_Prime5_32f", "icv_h9_owniFilter32f_8u_C4R_g9e9_5", "icv_h9_ippsSet_8u", "icv_h9_owniFilterBilateralCom_InMem_8u_C3R_L", "icv_w7_ownippiThreshold_16s_AC4", "icv_p8_ownscDftInv_Prime3_32fc", "icv_p8_ownSS3_54_16u", "icv_w7_ownsrDftFwd_Dir_64f", "icv_h9_ownpi_Rotate90_8_C1R", "icv_w7_ippiMax_32f_C1R", "icv_p8_owns_rFFTfwd_4_scale_64f", "icv_g9_owniScaleC_16u32s_C1R_acc", "icv_s8_ownSSvsum_16u", "icv_g9_owniCopyMirrorBorder_16s_C3R", "icv_s8_ownpi_Histogram_16s_C3R", "icv_p8_ownippsCnvrtFin_32f8s_Sfs", "icv_h9_ownResize3Linear16u", "_ZNK2cv3ocl6Device8vendorIDEv", "ippicviNorm_L2_16s_C1R", "icv_g9_ownpi_WarpAffine_NN_Const_8u_C3", "_ZN2cv3ipp6useIPPEv", "icv_g9_owns_cFft_BlkMerge_32fc", "icv_p8_ownpi_WarpAffineLinear_16s_C3R", "icv_s8_owniResizeNearest_32f_C4R", "_ZN2cv5flann5Index5buildERKNS_11_InputArrayERKNS0_11IndexParamsEN7cvflann16flann_distance_tE", "icv_s8_ownscrDftInv_Fact2_32f", "icv_s8_ownippiFilterMedianCross_16s_C4R_3x3", "icv_h9_ownCalcBorderR1Cubic16u", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EERS0_IiSaIiEEid", "icv_w7_ownippsCnvrt_32f8s_Sfs", "icv_s8_ownpi_dInterVectorClip_NN_16_AC4", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_13", "icv_s8_piGradientSobel32f", "icv_w7_ownippiThreshold_V_32f_C1", "icv_p8_ownpi_Sum_32f_C1R", "_ZN2cv15BriskScaleSpace16constructPyramidERKNS_3MatE", "icv_p8_owns_cBitRev1_Blk", "icv_w7_ownippiFilterMedianHoriz_8u_C3R", "icv_p8_ippiThreshold_32f_AC4_A6asm", "icv_g9_ownippiFilterxBrd_8u_C4R", "icv_s8_ippiSet_16u_C3R", "icv_s8_ownsrDFTfwd_15_scale_64f", "icv_s8_ippiCopy_32f_C4MR", "icv_h9_ownpi_WarpAffine_C_Mem_16u_C1", "icv_g9_owns_cRadix4InvNorm_32fc", "icv_g9_ippiNorm_L1_16u_C3CMR", "icv_p8_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK", "icv_g9_owniSqrDistanceNorm_Valid_32f_C1R", "_ZN2cv21DetectionBasedTracker3runEv", "icv_w7_ippiCopy_16s_AC4C3R", "icv_p8_owniScaleC_16s8u_C1R_acc", "icv_p8_ownSS4_41_8u", "icv_g9_ippiResizeLinear_64f_C3R_L", "icv_s8_owniTransposeWxH_32sC4", "_ZN2cv3ogl9Texture2DC2ENS_5Size_IiEENS1_6FormatEjb", "icv_g9_ippiCopyReplicateBorder_8u_C4IR", "icv_h9_owns_cFftInv_Large_64fc", "icv_p8_owniCrossCorrNorm_FullSame_32f_C1R", "icv_h9_ippsCos_32f_A24", "_ZN2cv3ocl7Image2DC1ERKS1_", "icv_s8_ownSS4_54_16s", "icv_s8_owniCopy_16s_P3C3R", "icv_s8_ownippiFilterMedianHoriz_16s_BC4R", "icv_p8_owniTranspose_8u_C1R_W7", "icv_g9_ownsInitTabDftDir_32f", "icv_p8_ownSharpenRow_16s_C4", "icv_g9_ownResize3Antialiasing_16s", "icv_p8_owns_getSizeTwd_Large_64f", "icv_p8_ippiCopyConstBorder_16u_C1R", "icv_p8_ownscDftFwd_PrimeFact_64fc", "_ZNK2cv3ocl6Kernel12localMemSizeEv", "icv_g9_ownippsCnvrtNear_32f16uA_AVX", "icv_h9_ownpi_Rotate180_16_C3R", "icv_p8_ownSS4_72_8u", "_ZN2cv8Stitcher11matchImagesEv", "icv_p8_ippiResizeGetSize_L", "icv_g9_ippiAdd_16s_C1RSfs", "icv_h9_owns_getSizeDct_Fft_32f", "icv_h9_ippsDFTFwd_RToPack_32f", "icv_s8_ownpi_dInterVector_L_32f_C4", "icv_p8_ownCalcBorderR1Lanczos2_32f", "icv_h9_ownpi_WarpAffine_C_Transp_8u_C1", "icv_s8_ownpi_WarpAffine_C_Const_8u_C3", "icv_h9_ownpi_WarpAffine_L_Mem_16s_C4", "Java_org_opencv_ml_LogisticRegression_predict_10", "icv_h9_ownMean_StdDev_16u_C3CMR_HSW", "icv_w7_ippsZero_32s", "icv_s8_ownsSub_16s_NegSfs", "icv_s8_owniFilterBilateralR2_InMem_32f_C1R_px", "icv_h9_owniFilter32f_16s_C4R_g9e9_0", "icv_w7_ownscDFTfwd_9_scale_64fc", "ippicviNorm_L1_16u_C3CMR", "icv_p8_ownpi_WarpAffine_L_Repl_64f_C3", "icv_p8_ownsAdd_16s", "icv_g9_ownpi_WarpAffine_NN_Repl_16s_C3", "icv_s8_ownSS4_73_32f", "_ZN3tbb16spin_rw_mutex_v323internal_release_readerEv", "icv_g9_ownippiDotProd_32f64f_C1R_e9cn", "icv_s8_ippsFFTInit_R_64f", "icv_g9_owniResizeAntialiasing_8u_C4R_L", "icv_s8_ippiFilterBilateralBorderGetBufferSize_L", "icv_p8_ownsrDFTfwd_15_scale_64f", "icv_p8_ownNorm_L1_8u_C1MR_W7_B", "icv_w7_ippiCopyMirrorBorder_16u_C1IR", "icv_p8_ownsSet_64sc", "_ZNSt15__exception_ptr13exception_ptrC1EMS0_FvvE", "icv_n0_own_ipps_dSin_G9EPnnn", "icv_h9_ownWarpSimple4Nearest64f", "_ZN2cv12mulSpectrumsERKNS_11_InputArrayES2_RKNS_12_OutputArrayEib", "icv_s8_owns_BitRev2_S", "icv_w7_ownpi_Max_16u_C1R", "icv_s8_ownsrDFTinv_12_scale_32f", "_ZN3tbb8internal8governor13one_time_initEv", "_ZNK2cv3ocl6Device15maxMemAllocSizeEv", "Java_org_opencv_photo_TonemapDurand_getSaturation_10", "icv_h9_ownpi_WarpAffine_C_Repl_32f_C4", "icv_g9_owniFilter_32f_C3R_g9e9_8", "_ZN2cv4cuda6StreamC2Ev", "icv_h9_ownippiFilterMedian_16s_C1R_7x1", "icv_g9_ownFilter32f_16s_C1R_g9e9", "icv_g9_ippiResizeCubic_16s_C1R_L", "icv_p8_ownsrDftInv_Dir_32f", "icv_s8_ownpi_WarpAffine_L_Const_16u_C1", "icv_s8_ownpis_Max_16s_C3", "icv_g9_CV_BORDER_CHECK_PARSE_FLAGS_NEW", "Java_org_opencv_calib3d_StereoMatcher_setSpeckleWindowSize_10", "cvGraphAddVtx", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_p8_owns_cRadix4InvNorm_32fc", "icv_g9_ippiMirror_8u_C4R", "icv_s8_owns_initDctFwd_Fft_32f", "icv_w7_ippiDilateGetBufferSize_L", "icv_w7_ippiScaleC_8s_C1IR", "icv_s8_ownAbsDiffC_16u_C1R_W7", "icv_s8_ippiCopyConstBorder_32f_C1R", "icv_w7_owns_crRadix4FwdNorm_64f", "icv_s8_ownpi_WarpAffineNearest_8u_C4R", "Java_org_opencv_video_SparseOpticalFlow_delete", "_ZNK2cv3ocl13ProgramSource6sourceEv", "icv_p8_ownCalcBorderR3Linear64f", "icv_w7_ownpi_Max_32f_C1R", "WebPConfigInitInternal", "icv_g9_ippiAddProduct_16u32f_C1IR", "icv_p8_ownCalcBorderR4Lanczos3_16u", "Java_org_opencv_features2d_Params_get_1maxCircularity_10", "icv_s8_ownpi_CmpLT_32f_C1R", "icv_s8_ownpi_WarpAffine_L_8u_C3", "icv_w7_ownpi_NormL1Rel_8u_C1R", "ippicviWarpAffineNearest_16u_C3R", "icv_h9_ippsDCTInv_32f", "Java_org_opencv_imgproc_Imgproc_integral_10", "cvWriteRawDataBase64", "icv_p8_ownscDFTinv_6_64fc", "icv_s8_ippiSubC_32f_C1R", "icv_s8_owns_cFftInv_Fact4_32fc", "Java_org_opencv_calib3d_Calib3d_projectPoints_12", "icv_h9_ownResize3Lanczos3_16u", "icv_w7_ippiCopyMirrorBorder_32s_C4IR", "icv_g9_owniFilter32f_8u_C4R_g9e9_0", "_ZN2cv9SparseMat5eraseEiiiPj", "_ZN2cv2ml6KDTreeC1ERKNS_11_InputArrayEb", "Java_org_opencv_calib3d_Calib3d_undistortImage_11", "icv_p8_ownippiFilterMedianHoriz_8u_BC4R_5x1", "icv_p8_owns_sDctFwd_Dir_32f", "icv_g9_ownsrDFTinv_7_scale_64f", "Java_org_opencv_imgproc_Imgproc_goodFeaturesToTrack_10", "icv_h9_L1magnitude_16s", "icv_g9_ippiAddWeighted_8u32f_C1IMR", "icv_p8_ownRow1Filter10_32f", "icv_g9_ownsrDftFwdRecombine_32f", "Java_org_opencv_core_Core_solveCubic_10", "icv_s8_ownpi_Sum_32f_AC4R", "ippicviResizeAntialiasing_16u_C1R_L", "icv_g9_ownWarpSimple1Nearest64f", "icv_w7_owns_cFFTinv_8_scale_64fc", "icv_s8_ownResize3Nearest16s", "icv_p8_ownippiThreshold_V_32f_C3", "_ZN2cv3ogl6Buffer11unmapDeviceEv", "cvWriteFileNode", "_ZN2cv16ParallelLoopBodyD2Ev", "icv_g9_ownpi_Set_64f_C4R", "icv_p8_ownippsCnvrt_32s32f", "icv_s8_owns_sBitRev1_Blk", "icv_h9_ownpi_WarpAffine_L_Mem_32f_C3", "cvSetND", "icv_s8_ownRow1Linear64f", "Java_org_opencv_core_Core_reduce_10", "icv_g9_owniFilter32f_16u_C4R_g9e9_5", "_ZN2cv5instr8NodeDataC1ERS1_", "_ZN2cv17CascadeClassifier16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EERS4_IiSaIiEEdiiNS_5Size_IiEESE_", "icv_w7_ownpi_WarpAffine_NN_32_P3", "icv_w7_ownpi_WarpSimpleLinear_16u_C4R", "icv_w7_owns_initDctInv_Fft_32f", "icv_p8_owniScaleC_8s32s_C1R_fst", "icv_p8_ippiCopyReplicateBorder_16s_C1R", "icv_g9_ownscDFTfwd_15_64fc", "icv_h9_ippiDFTInit_C_32fc", "icv_n0_own_ipps_dCos_S9HAynn", "icv_p8_ownFilterBoxBorderInMem_16u_C1IR", "icv_w7_ownpis_Max_16s_C3", "icv_g9_ownippiFilterMedianHoriz_16s_C3R", "icv_p8_ownSS4vertical_32f", "icv_p8_ownippiFilterxBrd32f_16u_C4R", "icv_w7_ippiResizeNearest_16u_C4R_L", "icv_s8_ippiScaleC_32s16s_C1R", "icv_s8_ownFilterBorderConvert32s_8u", "icv_h9_ownNormDiff_Inf_8u_C1MR_HSW", "icv_s8_ownpi_WarpSimpleNearest_32f_C3R", "cvGoodFeaturesToTrack", "icv_n0_own_ipps_sExp_G9EPnnn", "icv_h9_ownsSub_8u_PosSfs", "_ZN2cv3dnn19experimental_dnn_v15LayerC2ERKNS1_11LayerParamsE", "icv_g9_ippiSet_32s_C4R", "icv_g9_ownsrDFTfwd_15_scale_64f", "icv_g9_owniResizeAntialiasing_16u_C4R_L", "icv_w7_ownMorphEllipseGetBufferSize", "icv_s8_ippiResizeLanczos_16u_C1R_L", "icv_g9_ippsFFTFwd_CToC_32fc", "cvLoadImage", "icv_g9_ownpi_WarpAffine_L_Repl_32f_C3", "icv_p8_ownpis_Max_16s_C3", "icv_p8_owns_cFftInv_Large_64fc", "Java_org_opencv_imgproc_Subdiv2D_findNearest_11", "icv_s8_ownpi_Sum_16s_AC4R", "icv_s8_ippiMirror_32s_C1R", "cvSeqPushFront", "icv_h9_ownscDftFwd_Prime5_64fc", "icv_p8_ippiErodeGetBufferSize_L", "icv_h9_ownpi_NormL1_8u_C1R", "_ZN2cvmlERKNS_7MatExprEd", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_V8", "_ZNK2cv12_OutputArray15getOGlBufferRefEv", "icv_p8_owns_rFFT_1_32f", "icv_s8_owniNormLevel_32f_C1R", "icv_p8_ownSSvsum_32f", "Java_org_opencv_imgproc_Imgproc_findContours_11", "_ZN2cv9videostab18FastMarchingMethod7heapAddERKNS1_3DXYE", "icv_w7_ownsGetSizeDftConv_32f", "_ZNK2cv8FileNodeixEi", "icv_g9_ownpi_WarpSimpleLinear_16u_C4R", "_ZN2cv7directx3ocl32initializeContextFromD3D11DeviceEP12ID3D11Device", "_ZN2cv2ml6RTrees4loadERKNS_6StringES4_", "_ZN2cv11VideoWriterC1ERKNS_6StringEiidNS_5Size_IiEEb", "icv_g9_ippsSet_8u", "icv_h9_ownNormRel_Inf_8u_C1MR_HSW", "icv_h9_ownpi_WarpAffine_L_Mem_64f_C3", "icv_ipp_is_pni_extension", "icv_h9_ippiCopy_32f_C4C1R", "icv_h9_ownSS4_31_16s", "ippicviNorm_Inf_8u_C1MR", "_ZN2cv3ocl6Kernel3setEiRKNS_4UMatE", "icv_h9_ownpi_WarpAffineCubic_8u_C3R", "icv_p8_owns_rFFTinv_32_64f", "_ZN2cv16BOWKMeansTrainerD0Ev", "_ZN2cv11VideoWriter4openERKNS_6StringEiidNS_5Size_IiEEb", "icv_s8_ippiWarpAffineCubic_8u_C4R", "icv_s8_ownpi_WarpSimpleLinear_64f_C3R", "icv_s8_ippiMorphTophat_8u_C1R_L", "_Unwind_GetDataRelBase", "icv_h9_ownFilter32f_16s_C4R_g9e9", "iwGetDebugInfo", "ippicviMorphBlackhat_32f_C1R_L", "icv_w7_ownippsCnvrt_32f16u_Sfs", "icv_w7_ownscDftInv_Fact11_64fc", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_W7", "icv_s8_ownpi_WarpSimpleLinear_16s_C1R", "icv_p8_ownResize3Cubic32f", "icv_w7_ownscDftInv_Fact3_32fc", "icv_g9_ippiMorphClose_8u_C4R_L", "icv_p8_ippiThreshold_GT_16s_C1IR", "icv_p8_ownpi_MinMax_32f_C1R", "icv_s8_owniCopyConstBorder_C3R_W7", "icv_h9_ippiResizeLanczos_16u_C4R_L", "icv_p8_ippiConvert_8s32f_C1R", "icv_s8_ownippiFilterxBrd32f_16u_C4R", "_ZN2cv19createTonemapDurandEfffff", "icv_p8_ownpi_WarpAffine_L_Repl_32f_C4", "_ZN2cv3hal5mul8sEPKajS2_jPajiiPv", "icv_w7_ownResize1Cubic16u", "icv_h9_ippiMul_16u_C1RSfs", "icv_g9_owniCopyBF_32f_C1R", "Java_org_opencv_ml_ANN_1MLP_getRpropDWMin_10", "icv_w7_ippiWarpAffineCubic_8u_C3R", "icv_p8_ippiMorphClose_8u_C3R_L", "_ZN2cv21DetectionBasedTracker4stopEv", "icv_w7_ownsrDFTinv_6_32f", "icv_p8_ownCommonLoop_8u_C4R", "cvOpenFileStorage", "_ZN2cv6detail11waveCorrectERSt6vectorINS_3MatESaIS2_EENS0_15WaveCorrectKindE", "Java_org_opencv_core_Mat_n_1zeros__DDI", "icv_p8_ownsrDFTinv_10_scale_32f", "icv_w7_ippiCopy_32f_C3P3R", "icv_p8_ownpi_SimpleRotate_64f_C1R", "icv_p8_ippiCopyMirrorBorder_32f_C3R_L", "icv_h9_ownRow4Lanczos3_8u", "icv_g9_ownpi_Rotate90_64_C1R", "icv_g9_ownpi_WarpSimpleLinear_16s_C1R", "icv_g9_owniScaleC_8u8u_C1R_fst", "icv_w7_ippiCopy_16s_P4C4R", "icv_s8_owniFilter_32f_C1R_v8u8_4NA", "icv_g9_owniFilter32f_16s_C1R_g9e9_8", "Java_org_opencv_ml_KNearest_getDefaultK_10", "icv_s8_ippiCompare_16s_C1R", "icv_s8_ippiNormRel_L1_32f_C1R", "_ZN3tbb18task_group_contextD2Ev", "icv_s8_ownAddProduct_32f_C1IMR_W7", "icv_n0_own_ipps_sSinCos_G9EPnnn", "icv_s8_ippiFilterBorder_16s_C4R", "icv_p8_ippiMorphGradient_16u_C1R_L", "icv_p8_ownpi_dInterVectorClip_C_8u_C4", "icv_w7_ownRow1Linear32f", "icv_w7_ippiMean_StdDev_8u_C3CR", "_ZNK2cv7MatExprclERKNS_5Rect_IiEE", "icv_g9_ippiNormDiff_Inf_8u_C1R", "icv_p8_ippsZero_32f", "icv_p8_ippiCopy_16s_C3C1R", "icv_w7_ownippiFilterMedianHoriz_16u_C4R", "Java_org_opencv_calib3d_Calib3d_stereoRectify_11", "icv_w7_ownpi_Min_8u_AC4R", "icv_h9_owns_cRadix4FwdNorm_32fc", "_ZNK2cv3ocl6Device19imagePitchAlignmentEv", "cvMahalanobis", "icv_h9_owns_rFFTfwd_8_scale_32f", "icv_p8_ippiMoments64f_8u_C1R", "icv_p8_owns_crFft_BlkMerge_64f", "icv_p8_owniScaleC_32s8u_C1R_fst", "_Z19vector_Vec4i_to_MatRSt6vectorIN2cv3VecIiLi4EEESaIS2_EERNS0_3MatE", "_ZNK2cv4cuda10DeviceInfo18maxTexture1DLinearEv", "icv_p8_ownNorm_Inf_32f_C3CMR_W7", "icv_h9_ippiNorm_Inf_8u_C1MR", "icv_g9_ippiScaleC_32f8s_C1R", "Java_org_opencv_photo_MergeMertens_setContrastWeight_10", "icv_w7_ippsConvert_16s8s_Sfs", "icv_w7_ippiNormRel_L1_8u_C1R", "_ZN2cv5SobelERKNS_11_InputArrayERKNS_12_OutputArrayEiiiiddi", "icv_h9_ownSS4_98_16s", "Java_org_opencv_calib3d_Calib3d_findHomography_11", "icv_p8_ippsSortRadixIndexAscend_32s", "icv_p8_ippiMinMaxIndx_8u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_V8", "icv_w7_ownsInitTabDftFwdRec_64f", "icv_p8_ippiConvert_32f16u_C1R", "cvConvertImage", "icv_p8_owniScaleC_64f32s_C1R_acc", "icv_w7_ownsAdd_8u_PosSfs", "Java_org_opencv_core_Core_add_12", "ippicviCrossCorrNormGetBufferSize", "icv_p8_innerSwapChannels_32s_C4R", "icv_p8_ippiResizeNearest_32f_C4R_L", "icv_w7_ownBuildWarpFilter_32f", "_ZN2cv3ocl6DeviceC2EPv", "icv_p8_ippiDotProd_16u64f_C1R", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_1", "icv_h9_ownRow1Filter8_8u", "icv_p8_dct_8x8_inv_32f", "_ZN2cv3ocl7Image2DC2ERKS1_", "icv_h9_ownpi_And_8u_C1R", "icv_p8_L1magnitude_16s", "Java_org_opencv_ml_TrainData_getNTestSamples_10", "icv_s8_ownpi_WarpAffine_L_8u_C1", "icv_g9_ownscDFTfwd_6_scale_32fc", "icv_g9_ippiTranspose_8u_C4R", "cvGetTextSize", "icv_w7_ownippiFilterMedian_8u_C3R", "Java_org_opencv_core_Mat_n_1Mat__DDIDDDD", "Java_org_opencv_calib3d_StereoMatcher_setDisp12MaxDiff_10", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_W7", "icv_w7_ownpi_NormL1Rel_32f_C1R", "icv_p8_owns_initTabTwd_L1_32f", "cvGetFileNode", "icv_p8_ippiNormRel_L2_32f_C1MR", "icv_w7_ownColLanczos3_16s", "icv_w7_ippiCanny_16s8u_C1R", "icv_w7_owniSet_32f_C3M_W7", "Java_org_opencv_calib3d_Calib3d_calibrate_12", "icv_p8_owniCopy_16s_P3C3R", "icv_h9_ownpi_Rotate90_B_32_C3R", "icv_h9_ippiIntegral_8u32s_C1R", "icv_w7_owniGetRectTop_32f", "Java_org_opencv_ml_SVM_delete", "icv_w7_ownpi_WarpAffine_L_Mem_64f_C1", "icv_s8_ippiMean_16u_C3R", "icv_h9_ippsDFTInit_C_32fc", "_ZN2cv3ocl12setUseOpenCLEb", "icv_p8_ownippiFilterMedianVert_16s_C4R_1x5", "icv_p8_owns_cFFTfwd_8_scale_32fc", "icv_g9_ownpi_SimpleRotate_64f_C1R", "icv_w7_ippiSet_32f_C3MR", "icv_h9_owniTranspose16u_C4R_core2", "icv_h9_owniFilter32f_16s_C4R_g9e9_3", "ippicviResizeAntialiasing_16s_C3R_L", "Java_org_opencv_imgproc_Imgproc_HoughLinesP_11", "icv_p8_ippiFilterBorder_16s_C3R", "icv_p8_ippiCopyMirrorBorder_16u_C1R", "icv_g9_ippiWarpAffineLinear_8u_C1R", "icv_p8_ownAdd_8u32f_C1IMR_P8", "_ZNK2cv4cuda10DeviceInfo9clockRateEv", "_ZN2cvmlEdRKNS_3MatE", "icv_g9_cv_ownippiFilterMax_32f_Col", "icv_p8_CopyWithBorder8u", "icv_h9_ownCalcBorderR4Lanczos3_16s", "icv_h9_ippiNormDiff_L1_8u_C3CMR", "icv_s8_cv_ownFilterMxMnCalcBuf", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_W7", "icv_p8_ippiMinMax_16u_C1R", "icv_p8_ippiTranspose_8u_C1R", "icv_g9_ownpi_WarpAffine_L_Mem_32f_C4", "icv_p8_myRGBToGray_32f_C3C1R", "icv_p8_ownscDFTinv_7_64fc", "cvCalcMatMulDeriv", "icv_g9_ownpi_WarpAffine_NN_Repl_8u_C4", "_ZNK2cv12MatAllocator3mapEPNS_8UMatDataEi", "icv_g9_ippsMul_64f_I", "icv_w7_ippiFilterScharrVertMaskBorder_8u16s_C1R", "icv_g9_ownpi_WarpAffineCubic_16u_C3R", "icv_p8_owniSwapChannels_8u_C3IR", "icv_s8_ownsMul_8u_NegSfs", "icv_w7_ownpi_WarpSimpleLinear_16u_C3R", "icv_w7_ownippiThreshold_8u_C3", "icv_h9_ippi_AlphaPremul_AC4S_8u", "icv_g9_ippiResizeLanczos_32f_C4R_L", "_ZNK2cv3ocl6Device12localMemTypeEv", "_ZN3tbb8internal17generic_scheduler13create_masterEPNS0_5arenaE", "icv_w7_ownippiFilterMedian_16s_C3R_3x3", "icv_w7_ownCopySubpixIntersect_16u32f_C1R_W7", "icv_p8_ownResize1Nearest32f", "icv_s8_ownAbsDiff_16u_C1R_W7_B", "icv_p8_ownpi_WarpAffine_NN_Const_32f_C4", "icv_w7_ownippsSqrt_64fc", "Java_org_opencv_core_Core_solve_11", "icv_g9_ippiConvert_16s32s_C1R", "ippicviWarpAffineLinear_64f_C1R", "icv_w7_owns_crFft_BlkMerge_64f", "icv_s8_ippiMean_8u_C1MR", "icv_s8_owniResizeCubic_16u_C3R", "Java_org_opencv_calib3d_StereoMatcher_setSpeckleRange_10", "icv_g9_ownpis_Max_16u_C1", "icv_s8_owniTranspose_32s_C4IR_W7", "icv_p8_owns_cFft_BlkMerge_64fc", "_ZNK2cv3ogl6Buffer6copyToERKNS_12_OutputArrayERNS_4cuda6StreamE", "icv_s8_owniCrossCorrValid_32f_C1R", "icv_w7_ownWarpSimple4Nearest32f", "icv_h9_ownMinEigenVal_16s32f_C1R", "icv_s8_ippiMinMaxIndx_32f_C1MR", "icv_w7_ippiFilterSobelVertBorderGetBufferSize", "icv_g9_ippiMorphOpen_8u_C4R_L", "icv_w7_ippiResizeSuperInit_L", "cvTranspose", "cvStereoCalibrate", "icv_w7_ownsrDFTinv_9_scale_32f", "icv_g9_ownColCubic16s", "ippicviFilterBoxBorder_16s_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_V8", "icv_s8_ippiApplyHaarClassifier_32f_C1R", "Java_org_opencv_dnn_Dnn_readNetFromTorch_11", "icv_w7_ownsAdd_16s_1Sfs", "icv_g9_ippsZero_64fc", "icv_w7_ownResize3Lanczos3_16s", "_ZN2cv3Mat6createERKSt6vectorIiSaIiEEi", "icv_s8_ownscrDftInv_Prime3_32f", "_ZN2cv16BOWKMeansTrainerC2EiRKNS_12TermCriteriaEii", "icv_w7_ippsConvert_16s32s", "icv_g9_ippiWarpAffineLinear_16u_C4R", "icv_w7_owns_rFFTinv_16_scale_64f", "icv_w7_ownsrDFTfwd_5_scale_32f", "icv_g9_ippiAdd_32f_C1IR", "icv_p8_ownNorm_L2_8s_C3CMR_V8", "icv_s8_ownsrDFTfwd_12_32f", "cvCreateButton", "icv_w7_ownippiFilterMedian_8u_C4R_5x5", "icv_s8_ownHipass5x5Col_8u_AC4", "_ZN2cv9videostab17TwoPassStabilizer5setUpERKNS_3MatE", "icv_s8_owniCopy32sC3Mas", "icv_p8_owniSet_16s_C1_W7", "icv_s8_ownCubicKernel0", "icv_g9_ippiThreshold_LTVal_16s_C1R", "icv_w7_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "icv_h9_owniCopyMirrorBorder_32s_C3R_L", "icv_w7_CopyWithBorder32f", "_ZN2cv3ocl13ProgramSourceC2ERKS1_", "icv_h9_ownpi_WarpAffineSimpleLinear_32f_C4R", "icv_w7_ownsSqrtOne", "icv_s8_ownscDFTfwd_11_64fc", "icv_h9_ownRow1Cubic16s", "icv_p8_owniResizeLanczos_16s_C1R", "icv_g9_ownpi_CmpEQ_8u_C1R", "icv_h9_ownpi_WarpAffine_L_8u_C1", "_ZN2cv9FormattedD1Ev", "icv_s8_owniResizeAntialiasingLinearInit_L", "icv_p8_ownResize4Lanczos2_8u", "Java_org_opencv_core_Core_setIdentity_11", "icv_w7_owniConvert_32f32s_ccode", "icv_h9_ownpi_CmpLE_8u_C1R", "icv_s8_owniFlip_16u_C4", "icv_g9_ownSS1_73_16u", "Java_org_opencv_features2d_FlannBasedMatcher_create_10", "icv_g9_ippiCopy_16s_C3P3R", "icv_s8_ippiWarpAffineNearest_64f_C4R", "icv_s8_ippiDFTInv_PackToR_32f_C1R", "icv_h9_ippiFilterBorder_16u_C1R", "icv_h9_ownscDFTinv_7_scale_32fc", "icv_g9_ippiCopy_8u_C1C3R", "Java_org_opencv_photo_Photo_illuminationChange_11", "icv_s8_ownpi_WarpAffineSimpleLinear_16s_C4R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "icv_h9_ippiNormRel_Inf_16s_C1R", "icv_s8_ownAddProduct_8u32f_C1IMR_W7", "icv_p8_ippiFilterSobelHorizBorder_32f_C1R", "Java_org_opencv_photo_MergeDebevec_process_10", "icv_w7_owniResizeAntialiasing_16u_C4R_L", "_ZN2cv3hal6exp32fEPKfPfi", "icv_w7_ippiScaleC_8u8s_C1R", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "icv_w7_ippiNorm_Inf_32f_C3CMR", "icv_w7_ippiNormRel_Inf_16s_C1R", "icv_s8_ownSS3_21_8u", "icv_s8_ownippiFilterMedianVert_16u_C4R_1x5", "icv_p8_ippiSet_16u_C4R", "Java_org_opencv_android_Utils_nMatToBitmap2", "icv_s8_ippsSinOne", "ippicviMinIndx_32f_C1R", "icv_g9_owniGetRectRightBF_8u_C1R", "Java_org_opencv_core_Mat_n_1t", "icv_g9_ownsGetSizeTabDftDir_64f", "icv_g9_cv_ownMorphologyGetSize_1u_L", "Java_org_opencv_imgproc_Imgproc_spatialGradient_10", "icv_p8_ownpi_WarpAffineNearest_16u_C1R", "icv_w7_ownCalcBorderR3Linear16u", "icv_h9_ippiMax_16u_C1R", "icv_p8_owniCrossCorrValid_NormLevel_8u_C1R", "icv_s8_ownippiFilterMedianVert_16u_1x3", "icv_p8_ippsSqrt_32f", "icv_g9_ownpi_WarpAffine_C_Transp_16u_C1", "icv_h9_ownippiFilterMedianSqr_16u_C4R", "icv_s8_ippsSortRadixIndexGetBufferSize", "icv_p8_ownpi_dInterVectorClip_L_32f_AC4", "icv_p8_owniTranspose16u_C1R_core2", "Java_org_opencv_imgproc_Subdiv2D_edgeOrg_10", "icv_w7_ownpi_dInterVector_L_32f_P3", "icv_w7_ippiCopyReplicateBorder_32s_C4R", "icv_h9_cv_ownippiFilterMax_32f_Col", "icv_s8_ownscDftFwd_PrimeFact_64fc", "icv_w7_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_h9_owniFilter_32f_C1R_g9e9_1", "_ZN2cv15getCPUTickCountEv", "_ZN2cv7putTextERKNS_17_InputOutputArrayERKNS_6StringENS_6Point_IiEEidNS_7Scalar_IdEEiib", "icv_g9_ownpi_WarpAffine_C_Mem_32f_C4", "icv_p8_ippiCopyReplicateBorder_32s_C1R", "icv_p8_owniFilter_32f_C4R_v8u8_6NA", "icv_g9_ippiCopy_32f_C3R_L", "icv_h9_ownSS3_98_16u", "icv_p8_ownpi_WarpSimpleCubic_8u_C3R", "icv_g9_ownLanczosKernel2", "_ZSt10unexpectedv", "icv_s8_ippiConvert_32f8u_C1RSfs", "_ZN3tbb8internal18concurrent_monitor18notify_one_relaxedEv", "icv_w7_owniCopy32s_P3C3_W7", "icv_p8_ownpi_WarpAffine_CR_16u_C1", "icv_p8_owniFilterBilateralR1_InMem_8u_C3R_px", "icv_s8_ippsCopy_8u", "Java_org_opencv_ml_LogisticRegression_setRegularization_10", "icv_p8_ownRow3Antialiasing_8u", "icv_s8_ownFilter_32f_C3R", "icv_w7_ownpi_Min_32f_C1R", "icv_s8_ownsConvert_64s32s_SfPosFin_W7", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_W7", "icv_s8_ownNorm_L1_32f_C3CMR_W7", "icv_h9_ownscDFTinv_6_64fc", "ippicviFilterMedianBorder_8u_C4R", "icv_w7_ownscrDftFwd_Prime2_64f", "icv_s8_dct_8x8_inv_32f", "_ZN2cv5erodeERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE", "icv_s8_ippiAddProduct_16u32f_C1IMR", "Java_org_opencv_ml_SVM_trainAuto_11", "icv_g9_owniFilter32f_16s_C1R_g9e9_1", "_ZN2cv3dnn19experimental_dnn_v19LSTMLayer16inputNameToIndexENS_6StringE", "icv_p8_ownsrDFTfwd_13_scale_32f", "icv_s8_ippiAdd_16s_C1RSfs", "icv_s8_owns_initTabTwdRealRec_32f", "icv_p8_ownRow3Cubic32f", "icv_w7_ownscDFTfwd_6_64fc", "icv_s8_owniGetRectTop_16s", "icv_w7_owns_cFFTfwd_32_64fc", "icv_s8_owniFilter_32f_C1R_v8u8_8", "icv_s8_ownippiFilterMin_16u_Row", "ippicviResizeSuper_8u_C1R_L", "icv_h9_ownRow3Cubic8u", "icv_g9_piGradientSobel32f", "icv_s8_ippiCopy_32f_C3MR", "icv_p8_owniResizeNearestInit", "icv_s8_ippiCopyReplicateBorder_8u_C1R_L", "icv_s8_ippiFilterBorder_32f_C4R", "_ZNK2cv3dnn19experimental_dnn_v13Net14getLayerShapesERKSt6vectorIS3_IiSaIiEESaIS5_EEiPS7_SA_", "icv_p8_ippiMinIndx_16u_C1R", "_ZN2cv3hal6cmp32fEPKfjS2_jPhjiiPv", "icv_g9_ippiMin_32f_C1R", "icv_w7_ippiResizeLinear_16s_C1R_L", "icv_p8_ownscrDftFwd_Fact5_32f", "_ZNK2cv14DefaultDeleterI5CvMatEclEPS1_", "_ZN2cv2ml6KDTreeC1ERKNS_11_InputArrayES4_b", "icv_s8_ownscDftInv_Fact4_32fc", "icv_s8_ownResize3Lanczos3_16u", "icv_g9_ownNorm_Inf_32f_C3CMR_P8Y8", "_ZN2cv3dnn19experimental_dnn_v19CropLayer6createERKNS1_11LayerParamsE", "icv_g9_ownsMinEvery_8u", "icv_g9_owniTransposeWxH_16uC4", "icv_w7_ownippsCnvrt_64f32s_Sfs", "_ZNK2cv25BOWImgDescriptorExtractor14descriptorSizeEv", "icv_s8_ownsSub_32f", "icv_w7_ownpi_dInterVector_NN_16_C3", "icv_g9_ownpi_NormInf_16u_C1R", "icv_s8_ownsrDftInv_PrimeFact_64f", "icv_p8_ippiFilterScharrVertMaskBorder_8u16s_C1R", "icv_g9_owniFilter_32f_C1R_g9e9_2", "icv_p8_ownResize1Linear8u", "icv_s8_ownpi_Rotate90_B_32_C1R", "icv_w7_ownAddSquare_16u32f_C1IR_W7", "icv_h9_owns_initTabBitRevNorm", "icv_s8_owniFilterSobelHorizBorder2_8u16s_C1R", "icv_p8_ownpi_WarpSimpleLinear_16u_C3R", "icv_s8_ownDistanceTransform_5x5_8u32f_C1R_21F", "_ZN2cv3hal7sqrt64fEPKdPdi", "_ZNK2cv9Feature2D11defaultNormEv", "icv_p8_ownscDftInv_Prime8_64fc", "icv_h9_owns_initTabTwd_L1_32f", "icv_w7_ownscDftInv_Fact3_64fc", "icv_p8_ippiWarpAffineLinear_8u_C1R", "icv_h9_ippiConvert_16s32s_C1R", "icv_s8_ownsSinOne_w7p8", "icv_s8_owniSwapChannels_8u_C3IR", "ippicviResizeLanczos_16s_C3R_L", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "icv_g9_ownpi_WarpAffine_NN_Repl_16s_C4", "icv_p8_owniFilter_32f_C3R_v8u8_4", "icv_p8_ippiSet_32s_C1MR", "icv_w7_ownpi_OrC_8u_AC4R", "Java_org_opencv_ml_SVM_getType_10", "icv_w7_ippiNorm_L1_16u_C1R", "icv_p8_ownAddWeighted_8u32f_C1IMR_W7", "icv_w7_ownHipass5x5Col_16s_C4", "icv_p8_ownMorphAdvFunc", "icv_s8_owniFilterBilateralR1_InMem_32f_C1R_px", "icv_s8_ippiDCTInvGetSize_32f", "Java_org_opencv_ml_SVMSGD_setMarginType_10", "ippicviCopy_8u_P3C3R", "icv_p8_ownscDFTinv_15_32fc", "own_ipps_cCIS_SC_LA", "ippicviResizeLinear_8u_C4R_L", "icv_g9_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "icv_h9_cv_ownippiFilterMax_16u_Msk", "icv_p8_ownpi_ClipLeft", "icv_p8_ownSS4_65_32f", "icv_s8_ownCopySubpix_8u32f_C1R_V8", "icv_p8_ownpi_WarpSimpleGetSize", "Java_org_opencv_imgproc_Imgproc_ellipse_11", "icv_w7_ippsDFTInit_R_32f", "ippicvsDFTInv_CToC_32fc", "Java_org_opencv_calib3d_Calib3d_estimateNewCameraMatrixForUndistortRectify_11", "icv_s8_ownRow1Filter14_16s", "icv_w7_ownsrDFTinv_5_scale_64f", "icv_g9_ippiSub_8u_C3RSfs", "icv_g9_ownsMul_16s", "icv_g9_owniFilter32f_8u_C1R_g9e9_7", "icv_h9_ownSS1vertical_8u", "icv_w7_ownsSinOne_w7p8", "Java_org_opencv_videoio_VideoWriter_VideoWriter_13", "icv_p8_ippiGetSpatialMoment_64f", "icv_w7_ownNorm_L1_8s_C3CMR_A6", "_ZN2cv6detail11PlaneWarper9warpPointERKNS_6Point_IfEERKNS_11_InputArrayES8_S8_", "icv_p8_ownscDftFwd_Prime16_64fc", "icv_w7_ownResize4Nearest32f", "Java_org_opencv_calib3d_StereoBM_setPreFilterCap_10", "Java_org_opencv_ml_StatModel_train_10", "icv_w7_ownMorphInit_L", "icv_p8_owniFilter2_8u16s_C1R", "icv_s8_owns_crFftInv_Fact4_Last_64f", "icv_w7_ippiMirror_8u_C4IR", "icv_g9_ownResize3Cubic8u", "icv_g9_owniResizeGetBorderSize", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_W7", "icv_h9_ownpi_WarpAffineLinear_8u_C1R", "icv_n0_own_ipps_sSin_S9LAynn", "icv_w7_ippiCopyMirrorBorder_8u_C4R", "Java_org_opencv_imgproc_Imgproc_getAffineTransform_10", "icv_w7_ownNormRel_L2_8s_C3CMR_W7", "_ZN2cv3Mat9adjustROIEiiii", "icv_w7_owniGetRectRightBF_8u_C1R", "_ZNK2cv3ocl6Device22errorCorrectionSupportEv", "icv_p8_owniScaleC_32f8s_C1R_fst", "icv_g9_owniFilterSobelHorizSecondBorder2_8u16s_C1R", "_ZN10__cxxabiv116__enum_type_infoD2Ev", "icv_w7_ownpi_WarpAffine_L_8u_AC4", "ippicviScaleC_16s32f_C1R", "icv_h9_innerHSVToRGB_8u_AC4R", "icv_s8_ippiMean_8u_C3R", "icv_h9_ownpi_SimpleRotate_16u_C4R", "icv_s8_owniFilterSobelNegVertBorder2_32f_C1R", "icv_s8_ownscrDftFwd_Prime4_64f", "icv_h9_ownpi_WarpAffine_L_Repl_32f_C4", "icv_w7_ippiMax_8u_C1R", "icv_g9_Moments32fC1R_64f_FAST", "icv_g9_owns_cFFTinv_4_64fc", "Java_org_opencv_video_DualTVL1OpticalFlow_getWarpingsNumber_10", "icv_g9_ownResize1Linear16u", "icv_w7_ownpi_dInterVectorClip_NN_32_P4", "icv_h9_ownippsSqrt_32f", "icv_g9_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_G9E9cn", "icv_g9_owniFilter32f_8u_C1R_g9e9_1", "icv_s8_ownNormDiff_L2_32f_C3CMR_W7", "cvInitUndistortMap", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7_sym", "icv_h9_ownResize3Lanczos2_16s", "_ZN2cv9SparseMat3ptrEPKibPj", "icv_g9_ownscDFTfwd_11_32fc", "icv_g9_owns_rFFTfwd_4_scale_32f", "icv_h9_ippiMorphBlackhat_16s_C1R_L", "icv_w7_ippiTranspose_32f_C4R", "icv_p8_ownpi_WarpAffine_NN_Mem_16u_C1", "icv_h9_ippiNormDiff_Inf_8u_C3CMR", "icv_g9_ownscDftInv_Prime11_32fc", "icv_p8_ownscDFTinv_11_64fc", "icv_w7_ownippiFilterxBrd32f_16u_C3R", "icv_w7_ownpi_XorC_32s_AC4R", "_Z6cvCeilRKN2cv9softfloatE", "ippicviConvert_8u8s_C1RSfs", "ippicviResizeSuper_32f_C4R_L", "icv_h9_ippiFilterBoxBorder_32f_C3R", "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", "icv_w7_owns_cRadix4Inv_64fc", "ippicviNorm_L2_16u_C3CMR", "icv_s8_ippiMul_16s_C1RSfs", "icv_p8_ownippiFilterMedian_16s_BC4R_5x5", "icv_p8_ippiSqrIntegral_8u32s_C1R", "icv_h9_ownNormRel_Inf_16u_C1MR_HSW", "icv_s8_ippiMorphBlackhat_32f_C3R_L", "icv_p8_ownSS4_65_16s", "icv_g9_ownscDFTfwd_5_32fc", "icv_s8_ownpi_Histogram_16s_C1R", "_ZNK2cv11_InputArray4colsEi", "icv_h9_ippiWarpAffineNearest_32f_C1R", "icv_g9_ippsSortRadixIndexDescend_16s", "_ZN2cv5randnERKNS_17_InputOutputArrayERKNS_11_InputArrayES5_", "icv_h9_ownResize4Linear16u", "icv_s8_ippiMorphTophat_16u_C1R_L", "icv_w7_owns_cFFTinv_16_scale_32fc", "cvMax", "_ZN2cv3hal6div32fEPKfjS2_jPfjiiPv", "icv_h9_ownpi_WarpAffineSimpleNearest_16u_C3R", "icv_p8_owniGetRectRight_32f", "icv_h9_ippiCopy_8u_C4R", "icv_h9_owns_cCcsRecombine_64f", "icv_g9_ippiMax_16s_C1R", "icv_h9_ownFilter_32f_C3R_g9e9", "Java_org_opencv_ml_RTrees_load_11", "icv_h9_ippsDFTFwd_RToPack_64f", "Java_org_opencv_photo_CalibrateRobertson_delete", "_ZN2cv11writeScalarERNS_11FileStorageEd", "icv_h9_ownscDFTfwd_14_scale_64fc", "icv_g9_ippiScaleC_8u32s_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_V8", "icv_w7_ownscrDftFwd_Prime4_64f", "Java_org_opencv_dnn_Dnn_readTorchBlob_11", "icv_s8_ippiConvert_32f16u_C1R", "icv_g9_ippiCopyMirrorBorder_16u_C4R", "icv_w7_ownpi_WarpAffine_C_Transp_32f_C1", "icv_w7_ippiCopy_8u_C3R_L", "icv_p8_ownippiFilterMedian_16s_C3R", "icv_h9_owniCopy_32s_AC4C3R", "_ZNK2cv4cuda6StreamcvMS1_KFvvEEv", "icv_g9_ippiConvert_32f16u_C1RSfs", "icv_w7_ownsConvert_32s16s_SfsPos_W7", "icv_w7_owns_rFFTfwd_4_scale_32f", "icv_s8_ownpi_WarpAffine_C_Const_8u_C4", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EEidPS0_IiSaIiEEPS0_IdSaIdEE", "icv_p8_owniSDDiv_32f_C1IR", "_ZNKSt9exception4whatEv", "icv_s8_ownsGetSizeTabDftInvRec_64f", "icv_s8_ownSS3_43_16u", "icv_h9_ownscDFTinv_13_scale_32fc", "icv_w7_ippiCopy_8u_C3P3R", "icv_p8_ownpi_WarpAffineSimpleNearest_16u_C3R", "icv_h9_ownscDftFwd_Fact13_64fc", "icv_s8_ownCalcBorderR1Linear32f", "icv_w7_ownippiFilterMedianVert_8u_C4R", "icv_p8_ownLaplCol5x5_16s_C4", "icv_g9_owns_initTabDct_Dir_32f", "icv_p8_ownpi_SimpleRotate_32f_C1R", "icv_n0_own_ipps_sAtan2_V8LAynn", "ippicviScaleC_8u32f_C1R", "icv_w7_ippiCopyConstBorder_8u_C3R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_W7", "ippicvsGetLibVersion", "icv_g9_ownscDFTinv_11_32fc", "icv_s8_ownippiFilterMedianVert_16s_C4R", "icv_g9_ippiHistogram_8u_C1R", "cvGetMat", "icv_s8_owniResizeCubic_8u_C3R", "icv_w7_ippiAbsDiff_32f_C1R", "_ZN2cv3dnn19experimental_dnn_v13Net18setHalideSchedulerERKNS_6StringE", "icv_h9_ownpi_Sum_8u_C3R", "_ZN2cv8calcHistEPKNS_3MatEiPKiRKNS_11_InputArrayERKNS_12_OutputArrayEiS4_PPKfbb", "icv_g9_ippiCopyReplicateBorder_16u_C1R", "ippicviResizeSuperInit_L", "icv_s8_ownpis_Indx_8u_C4", "icv_w7_ippsInvSqrt_32f_A21", "icv_g9_ippsDFTInit_R_32f", "icv_s8_ippiFilterBorderInit_16s", "icv_h9_ownSS4_31_16u", "icv_p8_ippsLn_32f_A21", "_ZNK2cv4cuda10DeviceInfo8pciBusIDEv", "icv_p8_ownResize3Cubic16s", "icv_g9_ownscDFTfwd_15_32fc", "icv_h9_ownpi_WarpAffine_CR_32f_C3", "icv_h9_ippiFilterBilateralBorder_8u_C3R_L", "_ZN2cv15sampsonDistanceERKNS_11_InputArrayES2_S2_", "icv_p8_cv_ownMorphologyGetSize_L", "icv_s8_ownpi_WarpAffine_L_Repl_16s_C1", "icv_p8_ippiThreshold_LTVal_8u_C1IR", "icv_p8_ownpi_WarpAffine", "icv_w7_owniCopy16s_P3C3_A6", "icv_g9_ownSS4_a7_8u", "icv_h9_ownpi_WarpAffine_C_Const_16s_C3", "icv_g9_owniNormLevel_8u_C1R", "_ZNK2cv11_InputArray6offsetEi", "icv_w7_owns_sDctInv_Fft_32f", "_ZN2cv3hal6SVD32fEPfjS1_S1_jS1_jiii", "icv_g9_ippsSinCos_64f_A50", "icv_w7_owniCopy16s_C3P3_A6_NT", "icv_p8_ippiSet_32s_C4R", "icv_p8_ownscDFTfwd_14_scale_64fc", "_ZN2cv3minERKNS_3MatES2_RS0_", "icv_s8_ownResize1Lanczos2_16u", "icv_g9_ownsrDftInv_Conv_32f", "icv_p8_ippsFFTInv_PermToR_32f", "icv_s8_ownLaplCol5x5_16s_C4", "icv_s8_ippiMaxIndx_32f_C1R", "_ZN2cv11FileStorage19releaseAndGetStringEv", "icv_g9_ownpi_WarpAffineLinear_64f_C1R", "ippicviMulC_32f_C1IR", "icv_w7_ippiCopyReplicateBorder_16u_C3R", "icv_g9_owniCopyBF_8u_C3R", "icv_s8_ippiMorphOpen_32f_C4R_L", "icv_p8_ippiWarpAffineLinear_16u_C4R", "icv_p8_ownSharpenRow_16s_C3", "icv_w7_ippiDistanceTransform_3x3_8u_C1R", "_ZN2cv3dnn19experimental_dnn_v119createTorchImporterERKNS_6StringEb", "Java_org_opencv_video_FarnebackOpticalFlow_setPolyN_10", "_ZNK2cv3ocl6Device15linkerAvailableEv", "icv_h9_ippiCopy_8u_P4C4R", "icv_n0_own_ipps_sSin_W7LAynn", "_ZNK2cv4cuda6GpuMat9convertToERKNS_12_OutputArrayEiRNS0_6StreamE", "icv_p8_ippsFFTInv_PermToR_64f", "icv_s8_owniConvert_32f32s_ccode", "Java_org_opencv_ml_TrainData_getCatMap_10", "ippicvsDFTGetSize_C_64fc", "icv_h9_owniCopyMirrorBorder_16s_C3R", "icv_w7_ownpi_dInterVector_L_8u_P3", "icv_w7_ippiCannyBorder_8u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Repl_V8", "icv_h9_owniFilterBilateralR2_InMem_8u_C3R_L", "icv_w7_ownResize1Cubic16s", "icv_s8_ownpi_WarpSimpleLinear_8u_C3R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_W7", "icv_g9_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_G9E9cn", "ippicviMorphTophat_16s_C1R_L", "icv_s8_ippsConj_32fc", "llwiFilterSobel", "icv_g9_owniResizeLanczos_8u_C4R", "iwiImage_BorderAdd", "icv_s8_ownSS1_16u", "icv_s8_ownpi_WarpAffine_NN_16_C4", "_ZNK2cv9softfloateqERKS0_", "Java_org_opencv_imgproc_Imgproc_preCornerDetect_10", "icv_w7_ownNorm_Inf_16u_C3CMR_W7", "icv_p8_ownscDFTfwd_11_scale_32fc", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC2Ev", "Java_org_opencv_features2d_AgastFeatureDetector_delete", "icv_w7_ownpis_Max_16u_C1", "icv_h9_ippiHarrisCorner_8u32f_C1R", "icv_w7_ownpi_WarpAffine_L_Const_32f_C4", "icv_p8_ownpi_WarpAffine_C_Transp_64f_C3", "icv_h9_ippiScaleC_32s_C1R", "icv_h9_ippiCopyConstBorder_8u_C3R", "icv_p8_owniFilterBilateralR1_InMem_32f_C1R", "icv_h9_owniSwapChannels_32u_C3R", "icv_h9_ippiTranspose_32f_C1IR", "icv_p8_ownSS3_31_16s", "icv_p8_owns_crFftFwd_CoreMT_32f", "icv_s8_ownpi_WarpAffine_C_Const_64f_C1", "icv_g9_cv_ownippiFilterMin_16u_Msk", "icv_g9_ippiWarpAffineCubic_16s_C3R", "icv_p8_ownippiThreshold_8u_C1", "icv_h9_owns_rFFTfwd_16_scale_64f", "icv_w7_owniTranspose_32s_C1IR_W7", "icv_h9_ippiDilate_32f_C1R_L", "icv_w7_ippiFilterScharrHorizMaskBorder_32f_C1R", "_ZN2cv9videostab20FromFileMotionReaderC1ERKNS_6StringE", "icv_w7_ownResize1Linear64f", "icv_h9_ippiMean_8u_C3CMR", "icv_s8_ownscDFTfwd_5_scale_64fc", "icv_g9_ippiWarpAffineNearest_64f_C4R", "icv_p8_ownsConvert_16s32f_W7", "icv_w7_ippsConvert_32s32f_Sfs", "icv_p8_owniNormLevel_8u32f_C1R", "icv_p8_ownippiFilterMedian_8u_C1R_3x3", "icv_h9_ippsFFTGetSize_R_32f", "ippicviNormRel_L1_16u_C1MR", "icv_p8_owniResizeAntialiasing_8u_C3R_L", "icv_p8_owniScaleC_32f16s_C1R_acc", "icv_h9_ippiSwapChannels_32f_C4R", "icv_g9_owniConvert_32s16s_C1RSfs", "ippicviResizeAntialiasing_32f_C1R_L", "icv_p8_ippiScaleC_8u16u_C1R", "icv_w7_ownpi_AndC_32s_C3R", "icv_w7_ownippiFilterMedianHoriz_16u_BC4R", "icv_p8_owns_crRadix4FwdNorm_64f", "icv_p8_ownpi_WarpAffine_C_Transp_16u_C3", "WebPPictureSmartARGBToYUVA", "_ZN2cv6rotateERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_g9_owniClipRectZeroTail_8u32f_C1R", "icv_p8_ownpi_XorC_16u_C1R", "icv_s8_ownSS4_83_8u", "_ZNK2cv4cuda10DeviceInfo16surfaceAlignmentEv", "_Unwind_GetCFA", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_W7", "icv_g9_ownpi_CmpEQ_16s_C1R", "icv_p8_ownpi_WarpAffine_NN_Mem_8u_C1", "icv_s8_ownsInitDftConv_64f", "icv_p8_owns_cFFTfwd_8_32fc", "Java_org_opencv_ml_TrainData_getTrainSamples_10", "icv_g9_owniFilterSobelVertBorder2_32f_C1R", "icv_g9_ownSS4_31_32f", "Java_org_opencv_imgproc_Imgproc_getStructuringElement_10", "icv_h9_ownpi_WarpAffine_CR_8u_C4", "icv_g9_ippiSet_16u_C1MR", "icv_n0_own_ipps_sSqrt_G9LAynn", "icv_s8_ownpi_WarpAffineSimpleLinear_16s_C1R", "icv_s8_ippsAtan2_32f_A21", "icv_h9_ownResize4Linear16s", "icv_h9_ippiCopyConstBorder_16s_C1R", "icv_p8_ippsSqrtOne", "icv_g9_ownpi_getWarpSimpleRect_Mem", "icv_g9_ownscDftInv_Fact7_64fc", "icv_h9_ownscDFTfwd_11_scale_64fc", "icv_s8_ownAFilterRow32f_16u_C1R", "icv_w7_ownpi_MinMax_16s_C3R", "icv_p8_ownSS1_81_8u", "_ZNK2cv11_InputArray4typeEi", "icv_g9_ownpi_WarpAffine_C_Transp_32f_C3", "icv_p8_ippsConvert_32f16s_Sfs", "ippicviScaleC_16u8s_C1R", "icv_s8_ownResize4Antialiasing_16s", "icv_p8_ippiScaleC_32s64f_C1R", "icv_g9_ippiFilterSobelVertSecondBorderGetBufferSize", "ippicviResizeCubic_32f_C4R_L", "_ZN2cv11FileStorage20getDefaultObjectNameERKNS_6StringE", "icv_p8_ownpi_WarpSimpleLinear_64f_C4R", "icv_h9_owniFilter32f_8u_C4R_g9e9_3", "_ZN2cv4readERKNS_8FileNodeERff", "icv_h9_ownMean_StdDev_16u_C1R_HSW", "ippicviNorm_L2_8u_C1R", "icv_h9_ippiFilterMedianBorder_8u_C1R", "icv_w7_ownMinMaxIndx_16u_C1R_W7_1", "icv_s8_ownsrDFTinv_11_scale_32f", "_ZN2cvplERKNS_3MatES2_", "_ZN2cv11sepFilter2DERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_S2_NS_6Point_IiEEdi", "_ZTv0_n20_NK2cv22SimpleBlobDetectorImpl5writeERNS_11FileStorageE", "_ZN2cv10selectROIsERKNS_6StringERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS8_EEbb", "Java_org_opencv_video_BackgroundSubtractor_getBackgroundImage_10", "icv_g9_ownpi_WarpSimpleCubic_32f_C3R", "_ZN2cv17DescriptorMatcher6createEi", "icv_g9_ownsrDFTfwd_6_scale_32f", "icv_p8_ownAFilterRow32f_16s_C3R", "icv_h9_ippiMean_StdDev_32f_C3CMR", "Java_org_opencv_imgproc_Subdiv2D_getTriangleList_10", "icv_p8_ownsAdd_8u_NegSfs", "icv_g9_ownpi_WarpAffineSimpleLinear_8u_C4R", "icv_h9_ippiFilterBorder_8u_C4R", "icv_w7_ownpi_WarpAffine_L_Const_16s_C4", "_ZNSt13bad_exceptionD2Ev", "icv_p8_ippiMorphBlackhat_16u_C1R_L", "cvAvgSdv", "_ZNK2cv3ocl7Program6sourceEv", "icv_g9_owniGetRectTopBF_32f_C1R", "icv_w7_ownpi_Rotate90_64_C1R", "_ZN2cv15calcBackProjectERKNS_11_InputArrayERKSt6vectorIiSaIiEES2_RKNS_12_OutputArrayERKS3_IfSaIfEEd", "_ZN2cv9videostab28completeFrameAccordingToFlowERKNS_3MatES3_S3_S3_S3_fRS1_S4_", "icv_s8_ippiCopy_16u_C1C4R", "icv_p8_ownNorm_L2_8u_C3CMR_V8", "icv_g9_ownippsMagn_16s_Sfs", "icv_p8_owns_cFFTfwd_8_64fc", "icv_w7_ippiHistogram_32f_C1R", "icv_s8_ownResize1Cubic32f", "icv_s8_ownpi_Rotate90_B_16_C4R", "icv_g9_ownscDftInv_Fact11_64fc", "cvConvertPointsHomogeneous", "icv_p8_owniScaleC_16s16u_C1R_acc", "icv_p8_ippiTranspose_16u_C3R", "Java_org_opencv_features2d_DescriptorMatcher_delete", "icv_s8_ownCopySubpixIntersect_32f_C1R_V8", "icv_w7_ownSS4_16s", "icv_p8_ippiScaleC_32f64f_C1R", "icv_g9_ippiMorphBlackhat_16s_C1R_L", "icv_h9_ownpi_WarpAffineCubic_64f_C3R", "_ZN2cv8stopLoopEv", "icv_w7_ownResize1Antialiasing_16s", "_ZN2cv12VideoCapture4readERKNS_12_OutputArrayE", "icv_s8_innerSwapChannels_32s_C4R", "icv_s8_owniResizeSuper_8u_C1R", "icv_h9_ippiSwapChannels_16u_C4R", "icv_s8_ownRow1Lanczos3_16s", "_ZN2cv11cornerScoreILi8EEEiPKhPKii", "icv_w7_ownippiFilterMedianCross_16u_C3R_3x3", "icv_g9_owns_cFftFwd_Large_64fc", "icv_h9_ippsSqrtOneF", "icv_s8_ownpi_WarpAffine_NN_Repl_16s_C3", "_ZN3tbb8internal6market17try_destroy_arenaEPNS0_5arenaEj", "icv_p8_ownsrDFTfwd_12_scale_32f", "icv_s8_owns_initTabBitRevLarge", "icv_g9_ippiResizeNearest_8u_C3R_L", "icv_s8_owniFilterPrewittVertBorder2_32f_C1R", "icv_p8_ownscDftInv_Prime11_32fc", "icv_g9_owniTransposeWxH_32sC1", "icv_g9_ippiFilterBoxBorder_16s_C1R", "icv_w7_owniFilterBilateralCom_InMem_8u_C3R_px", "_ZNK2cv17CommandLineParser3hasERKNS_6StringE", "icv_w7_ownCalcBorderR3Lanczos2_16s", "icv_g9_ippiWarpAffineCubic_16u_C4R", "icv_h9_ippiCopy_16u_C3R", "icv_g9_ownpi_WarpAffineCubic_8u_C3R", "icv_h9_owniConvert_16s32s_avx2", "icv_w7_ownippiFilterMedianHoriz_16s_C1R_5x1", "_ZN2cv8superres23createFrameSource_EmptyEv", "_ZNK2cv3dnn19experimental_dnn_v13Net20getMemoryConsumptionEiRKSt6vectorIiSaIiEERjS8_", "icv_g9_ippiConvert_8u32f_C1R", "_ZN2cv9videostab27MotionStabilizationPipeline9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_", "icv_h9_ippiCopyMirrorBorder_8u_C1R_L", "ippicviNormDiff_Inf_16u_C3CMR", "_ZN2cv14createLMSolverERKNS_3PtrINS_8LMSolver8CallbackEEEi", "_ZNK2cv6detail12CameraParams1KEv", "_ZNK2cv11_InputArray15getGpuMatVectorERSt6vectorINS_4cuda6GpuMatESaIS3_EE", "icv_g9_ippiAddSquare_16u32f_C1IMR", "icv_s8_ownippiFilterMax_16u_Col_AC4", "icv_s8_ownLaplace3x3Row_32f_C4", "Java_org_opencv_features2d_BRISK_delete", "_ZNK2cv9softfloatplERKS0_", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarInit_10", "cvFlip", "icv_w7_ownippiFilterMedianHoriz_16u_C3R", "_ZNK2cv4UMat3dotERKNS_11_InputArrayE", "icv_h9_ownsMul_8u", "icv_p8_owniCopy16s_AC4_W7", "Java_org_opencv_core_Core_PCAProject_10", "icv_s8_ippiMirror_32f_C1R", "icv_p8_owniFlipCopy_32s_C1", "_ZN2cv15bilateralFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiddi", "icv_s8_ownippiFilterMax_16s_Row", "_ZN2cvgeEdRKNS_3MatE", "ippicviMinEigenValGetBufferSize_32f_C1R", "cvCheckChessboard", "icv_p8_ownippiFilterxBrd_32f_C1R", "icv_w7_ippiCopyReplicateBorder_16s_C1R", "_ZN2cv13seamlessCloneERKNS_11_InputArrayES2_S2_NS_6Point_IiEERKNS_12_OutputArrayEi", "ippicviWarpAffineCubic_64f_C3R", "icv_p8_ownResize4Antialiasing_16s", "icv_w7_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_s8_ownpi_WarpSimpleLinear_16u_C4R", "icv_g9_ippsConvert_8s16s", "Java_org_opencv_imgproc_Subdiv2D_getLeadingEdgeList_10", "icv_g9_myRGBToHLS_8u_C3R", "icv_n0_own_ipps_sSinCos_W7LAynn", "Java_org_opencv_core_Core_norm_14", "icv_w7_ippiWarpAffineNearestInit", "_ZN2cv13redirectErrorEPFiiPKcS1_S1_iPvES2_PS2_", "_ZN2cv4readERKNS_8FileNodeERSt6vectorINS_6DMatchESaIS4_EE", "icv_s8_ownpi_OrC_32s_C1R", "icv_s8_owniDenominatorFull_C1R", "icv_g9_ownpiDotProd_8u64f_C1R", "icv_p8_ownsAdd_8u_Bound", "icv_s8_ippsSortRadixAscend_16s_I", "cvRandArr", "icv_s8_ippiResizeNearest_16u_C3R_L", "icv_g9_ippiCopy_32s_C1R", "icv_n0_own_ipps_dError", "icv_s8_ippiConvert_16s32s_C1R", "icv_g9_owniNormLevel_32f_C1R", "Java_org_opencv_videoio_VideoCapture_VideoCapture_12", "_ZNK2cv9videostab18FastMarchingMethod5solveEiiii", "_ZN2cv9videostab28KeypointBasedMotionEstimator8estimateERKNS_3MatES4_Pb", "icv_w7_ownpi_NormInfDiff_32f_C1R", "icv_s8_ownpi_dInterVector_L_32f_AC4", "icv_h9_ownsMul_16s_NegSfs", "icv_s8_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_h9_ownpi_WarpAffine_NN_Repl_64f_C4", "icv_w7_ownpi_WarpAffineLinear_8u_C1R", "icv_h9_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "icv_s8_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "icv_h9_ippsMaxEvery_8u", "icv_w7_owniConvert_16u8s_ccode", "Java_org_opencv_ml_Boost_create_10", "_ZN2cv3hal6min16uEPKtjS2_jPtjiiPv", "_ZN2cv3dnn19experimental_dnn_v15Layer13unsetAttachedEv", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_W7", "icv_p8_owniGetRectLeft_16s", "icv_g9_ownSS1_83_16s", "icv_s8_ownpi_WarpAffine_NN_Const_16u_C1", "icv_w7_ownpi_WarpAffine_C_Repl_16u_C1", "_ZN2cv8superres10arrGetUMatERKNS_11_InputArrayERNS_4UMatE", "icv_h9_ippiTranspose_16s_C4IR", "icv_w7_ippiThreshold_GTVal_8u_C1IR", "_ZN2cv3Mat4onesENS_5Size_IiEEi", "icv_g9_ownRow4Cubic16s", "icv_s8_owniCopyBF_8u_C1R", "icv_s8_ownscDFTinv_10_64fc", "WebPDecodeBGRA", "icv_w7_ippiConvert_32f8u_C1RSfs", "_ZN2cv7MatExprC1ERKNS_3MatE", "icv_h9_ownscDFTinv_15_32fc", "icv_w7_owniConvert_8s16u_ccode", "icv_p8_ownRow1Filter10_8u", "_ZN2cv5flann33HierarchicalClusteringIndexParamsC1EiN7cvflann20flann_centers_init_tEii", "_ZTv0_n28_NK2cv9Feature2D5emptyEv", "icv_p8_ownpi_WarpAffineSimpleLinear_8u_C4R", "iwiWarpAffine", "icv_s8_ownSS4_94_8u", "icv_p8_ippiNormDiff_L1_32f_C1R", "icv_g9_ownpi_Rotate180_16_C3R", "icv_w7_ippiSet_16u_C3R", "icv_p8_ippiMulC_32f_C1IR", "icv_w7_ownpi_Sum_8u_C4R", "icv_s8_ownNormDiff_L2_16u_C1MR_W7", "_ZN2cv8superres13convertToTypeERKNS_4cuda6GpuMatEiRS2_S5_", "icv_p8_ownippiThreshold_GLV_8u_C3", "icv_g9_piGradientVectorParams", "icv_g9_ownCalcBorderR1Antialiasing_32f", "ippicviScaleC_64f16u_C1R", "icv_w7_ippiWarpAffineGetSize", "Java_org_opencv_core_Core_mulTransposed_12", "icv_s8_ownippiFilterMedianCross_16u_C4R_3x3", "icv_p8_ownpi_Rotate90_B_64_C1R", "icv_h9_ownpi_WarpAffine_L_Repl_16s_C4", "_ZN2cv9videostab18InpaintingPipeline9setFramesERKSt6vectorINS_3MatESaIS3_EE", "icv_g9_owniFFTFwd_RToPack_32f_C1R", "icv_p8_ownippiFilterMin_32f_Col_AC4", "icv_w7_ownpi_WarpAffine_C_Repl_32f_C1", "icv_w7_ownscDFTinv_3_scale_32fc", "_ZN3tbb8internal6market28acknowledge_close_connectionEv", "icv_p8_ownBFilterRow32f_8u_C4R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_V8", "icv_h9_ownpi_WarpAffineNearest_16s_C3R", "_ZN2cv7addTextERKNS_3MatERKNS_6StringENS_6Point_IiEES5_iNS_7Scalar_IdEEiii", "icv_h9_ippiFilterBoxBorder_32f_C1R", "icv_g9_ownsrDFTfwd_6_64f", "icv_h9_ownMorphEllipseGetBufferSize", "Java_org_opencv_video_Video_createBackgroundSubtractorKNN_10", "icv_g9_owniGetRectRightBF_32f_C1R", "icv_p8_ownpi_WarpSimpleNearest_16s_C4R", "icv_p8_ippsSortRadixIndexAscend_32f", "icv_w7_ippsDFTInv_CToC_64fc", "icv_s8_ownscrDftInv_Prime5_64f", "icv_s8_ippiThreshold_GTVal_8u_C1R", "icv_g9_ownCalcBorderR1Antialiasing_16s", "icv_w7_ownpi_WarpAffine_NN_32_P4", "_ZN9CvLevMarqC2Eii14CvTermCriteriab", "icv_p8_ownpi_WarpAffine_L_32f_P4", "icv_s8_ownpi_WarpAffine_L_Const_32f_C4", "icv_w7_ownpi_WarpSimpleCubic_16u_C4R", "icv_h9_ippsFabsOne", "icv_p8_owns_rFFTinv_8_scale_32f", "icv_h9_ownscDFTinv_7_64fc", "icv_g9_owniConvert_32f8u_AVX", "icv_w7_ownNormRel_L1_32f_C1MR_W7", "icv_g9_ownippiFilterxBrd32f_16s_C1R", "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", "ippicviAbsDiff_32f_C1R", "icv_g9_owniFlip_32s_C1", "_ZN2cv7MatExprC2ERKNS_3MatE", "icv_h9_ippiMean_16u_C1R", "icv_p8_owniCopyConstBorder_C1R_W7", "Java_org_opencv_imgproc_Imgproc_accumulateSquare_11", "icv_p8_ownLaplRow5x5_16s_C3", "icv_w7_ippsConj_64fc", "_ZN2cv12KalmanFilterC2Eiiii", "ippicviWarpAffineLinear_16s_C1R", "icv_w7_ippiNorm_L2_32f_C1R", "_ZN2cv3ocl7ProgramC1ERKS1_", "icv_w7_ownpi_Rotate180_16_C1R", "icv_w7_ownpi_MinMax_16s_C1R", "icv_s8_owniResizeLanczos_32f_C1R", "icv_p8_ippsLn_64f_A50", "icv_g9_ownpi_WarpAffine_C_Const_16s_C1", "icv_w7_ownscDftFwd_Fact5_32fc", "icv_p8_ippiDilate_16u_C1R_L", "icv_g9_ippiMorphOpen_8u_C1R_L", "icv_h9_ownSS3_41_16s", "icv_w7_owniResizeAntialiasing_32f_C1R_L", "icv_p8_ippiFilterMedianBorder_8u_C3R", "icv_p8_owniTranspose32s_C1R_core2", "icv_g9_ownpi_Rotate90_64_C3R", "Java_org_opencv_features2d_ORB_getScaleFactor_10", "icv_s8_ownResize3Lanczos3_16s", "icv_s8_ippiSwapChannels_16u_C4C3R", "icv_p8_owns_crFftInv_CoreMT_64f", "icv_h9_ownippiFilterMin_32f_RowCol_C4_h9l9", "icv_p8_ownLaplRow5x5_32f_C3", "_ZN10__cxxabiv119__pointer_type_infoD2Ev", "icv_s8_ownpi_Histogram_BS_32f_C3R", "icv_w7_ippiFilterMedianBorder_8u_C4R", "icv_w7_owns_crRadix4InvNorm_32f", "iwVector_Release", "icv_g9_ownsrDFTfwd_3_scale_64f", "icv_h9_ippsConvert_32f8u_Sfs", "icv_h9_ownRow1Linear32f", "_ZN2cv15BriskScaleSpaceC1Ei", "ippicviHistogramUniformInit", "icv_h9_ownpi_GetAffineTransform", "icv_p8_ippiMirror_16u_C3IR", "_ZNSt15__exception_ptr13exception_ptrC1ERKS0_", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Const_V8", "icv_g9_owniSqrDistanceNormGetSize", "icv_g9_ownsrDFTfwd_10_scale_32f", "icv_p8_ownsrDftInv_PrimeFact_64f", "icv_s8_owns_cFFTfwd_16_64fc", "icv_s8_ownRow3Cubic16u", "WebPValidateConfig", "icv_w7_ownpi_Max_32f_AC4R", "ippicviThreshold_LTVal_32f_C1R", "icv_w7_ippiScaleC_8u16u_C1R", "icv_w7_ippiMean_StdDev_8u_C1R", "icv_n0_own_ipps_sLn_G9EPnnn", "Java_org_opencv_dnn_DictValue_getIntValue_11", "icv_w7_ippiConvert_16u8s_C1RSfs", "_ZN2cv3ipp14getIppFeaturesEv", "icv_s8_ownNormDiff_L1_16u_C1MR_W7", "icv_w7_ownNorm_L1_32f_C1MR_W7", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_W7", "icv_p8_ownSuperKernel", "icv_h9_ippiCopy_16u_C3P3R", "icv_s8_ownscDFTfwd_15_scale_32fc", "icv_g9_ownsrDftInv_PrimeFact_64f", "cvResize", "_ZN2cv8UMatDataD1Ev", "icv_s8_ownpis_Min_16s_AC4", "icv_w7_ippiCopyReplicateBorder_16u_C4R", "_ZSt9terminatev", "cvErrorFromIppStatus", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_W7", "iwiCopyMixed", "icv_w7_owns_cFft_BlkSplit_32fc", "icv_g9_ippiCopyReplicateBorder_32f_C3R_L", "icv_s8_ippiMorphTophat_16s_C1R_L", "icv_p8_ippiScaleC_8u32s_C1R", "icv_p8_ippiSwapChannels_32f_C3C4R", "icv_p8_ippiThreshold_GTVal_16s_C1IR", "Java_org_opencv_features2d_Params_set_1thresholdStep_10", "icv_p8_ownSum_8u_C1MR_W7", "icv_h9_ownpi_Sum_8u_C4R", "icv_s8_ownSS3_31_16s", "icv_s8_ownpi_Sum_8u_C1R", "icv_p8_ippiWarpAffineCubic_16u_C4R", "icv_w7_ownpis_Min_32f_AC4", "icv_p8_ownippiFilterMedian_16u_BC4R", "icv_s8_ownippiFilterMedianCom_8u", "cvDet", "icv_w7_ownSq_32f_C3CR_W7", "icv_s8_ippiTranspose_16s_C4R", "icv_p8_ippiThreshold_GTVal_8u_C1IR", "icv_h9_ippiThreshold_GT_8u_C1IR", "icv_s8_ownRow3Lanczos3_16u", "ippicviNormDiff_Inf_32f_C1R", "icv_h9_ippsDFTGetSize_R_64f", "icv_p8_ippiCopy_8u_AC4R", "_ZN3tbb8internal6market21app_parallelism_limitEv", "icv_s8_ippsSortRadixIndexDescend_32s", "icv_w7_ippiCopy_8u_C1R", "icv_n0_own_ipps_sLn_W7HAynn", "icv_p8_cv_ownFilterMxMnCalcBuf_L", "icv_p8_ownSumSq_32f_C3CMR_W7", "icv_w7_ownsMulC_32f", "icv_h9_ownpi_Sum_32f_C4R_vlang", "icv_s8_ippiAdd_16u32f_C1IMR", "WebPEncodeBGR", "ippicviMean_32f_C3CMR", "Java_org_opencv_calib3d_StereoBM_getPreFilterCap_10", "_ZN2cv3ocl13ProgramSourceD2Ev", "icv_s8_ownpi_dInterVectorClip_C_16u_C1", "icv_w7_owniFlipCopy_16u_C1", "_ZN2cv3hal8filter2DEiiiPhjS1_jiiiiiiS1_jiiiidib", "icv_h9_ippiSum_32f_C3R", "icv_h9_owns_initTabTwd_Large_64f", "icv_p8_ippsDFTFwd_CToC_64fc", "icv_w7_ippsDCTFwdInit_32f", "icv_s8_ownLaplace3x3Row_32f_AC4", "icv_w7_ownpi_MinMax_16u_C1R", "Java_org_opencv_imgproc_Imgproc_getGaborKernel_10", "icv_g9_ippiMean_16s_C1R", "icv_w7_ownippiFilterMedianVert_16u", "icv_p8_owns_cFftFwd_CoreMT_64fc", "icv_s8_ownpi_MinIndx_8u_C1R", "icv_g9_ownsGetSizeTabDftBase_64f", "icv_s8_ownpi_WarpAffineCubic_64f_C4R", "ippicviResizeCubic_16s_C4R_L", "ippicviScaleC_32f32s_C1R", "icv_w7_ownpi_WarpSimpleCubic_8u_C1R", "icv_s8_owniTranspose_16u_C4IR_W7", "icv_g9_ippsDFTInit_C_32fc", "_ZN2cvcoERKNS_3MatE", "icv_w7_ownscDftInv_Fact_64fc", "_ZN2cv3LDAC1ERKNS_11_InputArrayES3_i", "icv_p8_ownscrDftFwd_Fact4_64f", "icv_s8_owniCmpLess_16u_C1R", "ippicviMorphTophat_8u_C3R_L", "icv_w7_ownpi_WarpAffine_L_Repl_64f_C4", "icv_w7_ippsFloorOne", "cvHaveImageWriter", "icv_g9_ownsrDFTinv_10_64f", "icv_w7_ownippsSqrt_32f", "_ZN2cv16FileNodeIteratorppEv", "_Z28Mat_to_vector_vector_Point3fRN2cv3MatERSt6vectorIS2_INS_7Point3_IfEESaIS4_EESaIS6_EE", "icv_g9_ownscDftFwd_Prime16_64fc", "icv_w7_ippiMaxIndx_16s_C1R", "icv_g9_ippiMarkSpecklesGetBufferSize", "icv_p8_ownNormDiff_Inf_32f_C3CMR_P8Y8", "_ZNK2cv4cuda10DeviceInfo17sharedMemPerBlockEv", "WebPEncodeLosslessRGB", "icv_p8_ownResize3Linear32f", "icv_w7_ownpi_WarpAffineLinear_16u_C3R", "icv_s8_ownpi_WarpAffine_C_Mem_8u_C1", "icv_g9_ippiNorm_L2_32f_C3CMR", "cvCalibrationMatrixValues", "icv_g9_ownpi_WarpAffine_C_Mem_16s_C1", "icv_g9_owniFilter32f_8u_C4R_g9e9_7", "icv_s8_ippiSet_32f_C3MR", "icv_g9_owniFilterSobelHorizBorder2_8u16s_C1R", "icv_p8_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_w7_ownNormDiff_L2_32f_C1MR_W7", "icv_p8_ownSS1_43_16s", "icv_h9_ippiAdd_32f_C1R", "icv_h9_owns_rFFTinv_8_scale_32f", "icv_w7_owniSet_8u_C1_W7", "icv_g9_ownFilterRow32f_8u_C1R_g9e9", "icv_p8_ownsMaxIndx_64f_W7", "icv_s8_ownSS3_53_8u", "icv_h9_ippiCopy_32s_P3C3R", "icv_h9_ownsSub_16s_Bound", "icv_s8_ippiTranspose_16s_C1IR", "icv_s8_ippiCopyMirrorBorder_32s_C1IR_L", "icv_w7_ippiSet_8u_C4R", "icv_p8_ownAFilterRow32f_8u_C1R", "_ZN2cv17DescriptorMatcherD2Ev", "icv_w7_ownpis_Max_32f_C4", "_ZN2cv7MomentsC1Ev", "icv_p8_ownippiFilterMin_32f_Row", "icv_w7_ippiMean_32f_C3CMR", "icv_s8_ownscDFTinv_12_scale_64fc", "Java_org_opencv_video_DualTVL1OpticalFlow_getEpsilon_10", "icv_p8_ippiDilate_32f_C3R_L", "icv_h9_ippiConvert_16s16u_C1Rs", "icv_p8_ippiNorm_L2_16s_C1R", "Java_org_opencv_videoio_VideoWriter_VideoWriter_14", "icv_g9_innerHSVToRGB_8u_C3R", "icv_g9_ownFilterBoxBorderInMem5x5_16s_C1R", "icv_g9_ippiCopy_8u_C4MR", "icv_p8_ownpi_Rotate90_16_C4R", "icv_h9_ownpi_NormL1Rel_16s_C1R", "icv_h9_ippiDistanceTransform_3x3_8u32f_C1R", "icv_p8_ownsrDFTfwd_15_scale_32f", "icv_p8_owns_cFFTfwd_16_64fc", "icv_w7_ippiCopy_32s_C1R", "_ZN2cv13HOGDescriptor4loadERKNS_6StringES3_", "icv_h9_ippiCopyReplicateBorder_8u_C4R", "icv_s8_ownpi_dInterVectorClip_C_8u_P4", "icv_w7_ownpi_WarpSimpleCubic_16s_C3R", "icv_p8_ownsCeilOne", "cvSVD", "_ZN2cv3hal10absdiff32fEPKfjS2_jPfjiiPv", "icv_g9_ownscDFTfwd_12_scale_32fc", "icv_h9_ippiWarpAffineCubic_8u_C1R", "icv_h9_owniScaleC_32f32f_C1R_fst", "icv_g9_ippiConvert_8u32s_C1R", "Java_org_opencv_ml_ParamGrid_set_1logStep_10", "icv_s8_ownNormRel_L1_32f_C3CMR_W7", "_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj", "icv_s8_ownpi_dInterVector_L_8u_C3", "icv_s8_ippsSortRadixIndexAscend_8u", "icv_h9_ippiMirror_16s_C4R", "icv_p8_ippi_cDftMerge_32fc", "icv_w7_ownscrDftInv_Fact5_32f", "icv_w7_ippiNorm_L1_32f_C3CMR", "ippicviScaleC_64f16s_C1R", "ippicviNormRel_L1_32f_C1MR", "icv_h9_ippiResizeCubic_16u_C4R_L", "icv_w7_owniCopy8u_C4P4_48_A6", "icv_g9_ownNormDiff_Inf_32f_C3CMR_P8Y8", "icv_s8_ownFilterRowBorderPipeline_16s_C1R_3x3_V8", "icv_h9_ownCalcBorderR4Antialiasing_16u", "icv_s8_ownpi_SimpleRotate_64f_C4R", "Java_org_opencv_features2d_DescriptorMatcher_empty_10", "Java_org_opencv_core_Mat_n_1checkVector__JI", "icv_w7_ownCalcBorderR4Cubic16u", "icv_p8_ippiFilterSobelHorizSecondBorderGetBufferSize", "icv_w7_ownscrDftFwd_Prime3_32f", "icv_p8_owns_rFFTfwd_32_32f", "Java_org_opencv_photo_Photo_createMergeRobertson_10", "icv_s8_ownsSub_16s_1Sfs", "icv_s8_ippiSqrIntegral_8u32s_C1R", "icv_g9_ownSS3_98_32f", "icv_w7_ippsGetLibVersion", "ippicviFilterBorder_8u_C1R", "icv_p8_owns_rFFT_1_64f", "icv_g9_ownippsCnvrtNear_32f8u_AVX", "icv_s8_ownHipass5x5Col_16s_C3", "icv_s8_owns_crFft_BlkMerge_32f", "icv_w7_ownColCubic8u", "icv_g9_owns_cFftInv_Large_32fc", "ippicviConvert_32f16u_C1RSfs", "icv_p8_ownpi_WarpAffineNearest_8u_C1R", "icv_w7_ownscDftFwd_Fact7_32fc", "_ZN2cv8Subdiv2D9swapEdgesEi", "icv_w7_ownpi_WarpAffineCubic_16s_C4R", "icv_p8_ownResize1Lanczos3_32f", "icv_w7_ippiNot_8u_C1R", "icv_p8_ownpi_WarpAffine_CR_32f_C1", "_ZN2cv11writeScalarERNS_11FileStorageERKNS_6StringE", "icv_g9_ippiScaleC_16u8s_C1R", "icv_w7_ownpi_WarpAffineCubic_16u_C1R", "icv_w7_ownscrDftFwd_Fact2_64f", "icv_p8_ownippiFilterMedianVert_8u", "icv_p8_owniResizeLinearInit", "icv_s8_ownsrDFTfwd_11_32f", "icv_s8_ownpi_MinIndx_32f_C1R", "icv_s8_ippiNorm_L2_8u_C1R", "icv_w7_owns_cFFTinv_4_scale_64fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_V8", "icv_h9_owns_rFFTfwd_4_64f", "icv_s8_ownpi_MinMax_32f_C4R", "_ZN2cv8superres23createFrameSource_VideoERKNS_6StringE", "icv_s8_ippsConvert_16s32s", "icv_w7_ippiThreshold_GT_8u_C1IR", "icv_g9_ippsSqrt_32f_A21", "icv_p8_ownippiFilterxBrd_32f_C4R", "icv_p8_ownRow4Filter2_8u", "cvApproxChains", "icv_s8_ippsSortRadixAscend_8u_I", "icv_s8_owns_rFFT_2_scale_64f", "icv_w7_ownscDFTinv_10_scale_32fc", "Java_org_opencv_video_BackgroundSubtractor_apply_11", "icv_s8_ownNorm_L1_8s_C3CMR_V8", "icv_w7_ownpis_Max_8u_AC4", "icv_s8_ownippiFilterMedianVert_16s_1x3", "icv_w7_ownsrDFTinv_6_scale_64f", "icv_h9_ownpi_NormInfDiff_16s_C1R", "ippicviAdd_8u32f_C1IMR", "icv_s8_ippiSwapChannels_8u_C3R", "icv_n0_own_ipps_sInvSqrt_G9HAynn", "icv_h9_owniFilter32f_16s_C3R_g9e9_8", "icv_g9_ippiMean_32f_C1MR", "icv_g9_owniFilter32f_8u_C4R_g9e9_3", "icv_s8_ippsMagnitude_16s_Sfs", "icv_p8_ippiFilterBilateralBorderInit_L", "icv_s8_owniResizeCubic_32f_C3R", "icv_s8_ippiMorphGradient_16s_C1R_L", "icv_p8_ippiCopyMirrorBorder_16s_C3R", "icv_h9_ownpi_WarpAffine_C_Mem_16s_C3", "_ZN2cv8StereoBM6createEii", "icv_g9_ippiResizeAntialiasing_32f_C4R_L", "icv_w7_ownpi_WarpAffineSimpleLinear_64f_C3R", "icv_s8_owniFilter_32f_C1R_v8u8_4", "icv_p8_owniTranspose8u_C1R_core2", "icv_p8_ownpi_WarpSimpleCubic_8u_C4R", "icv_g9_ownpi_WarpAffine_L_Const_16u_C1", "Java_org_opencv_calib3d_StereoBM_getTextureThreshold_10", "icv_w7_ownippiFilterMedianHoriz_8u_C1R_5x1", "icv_s8_ownpi_WarpAffine_L_8u_C4", "icv_p8_ownBuildWarpFilter_64f", "icv_p8_ownCalcBorderR1Linear16s", "icv_p8_ownRow4Linear16u", "_ZN2cv11VideoWriterC2ERKNS_6StringEidNS_5Size_IiEEb", "cvCreateMatHeader", "icv_h9_ippsDFTFwd_CToC_64fc", "icv_g9_owniScaleC_8u16s_C1R_fst", "icv_g9_ownsGetSizeDftPrimeFact_32f_32f", "icv_h9_ippiAdd_8u32f_C1IR", "icv_s8_ownNormDiff_Inf_16u_C1MR_W7", "ippicviNormDiff_L2_8u_C3CMR", "icv_s8_ownpi_dInterVector_L_32f_P3", "icv_w7_ippiFilterMax_32f_Row_A6", "icv_s8_ownscDftInv_Fact_32fc", "icv_p8_ippsGetLibVersion", "iwTypeGetMin", "icv_w7_ippsConvert_32f32s_Sfs", "_ZN2cv6detail12DpSeamFinder18hasOnlyOneNeighborEi", "icv_w7_ownscrDftInv_Prime2_64f", "_ZN2cv2ml6DTrees6createEv", "_ZN2cv3dnn19experimental_dnn_v13Net12enableFusionEb", "ippicviWarpAffineCubic_16u_C1R", "icv_h9_cv_ownippiFilterMax_16s_Col", "icv_p8_ownippiFilterMedianVert_16s_1x3", "icv_w7_ownsMul_32fc_I", "icv_p8_owniTransposeWxH_32sC4", "_ZN2cv9softfloatC2Ey", "icv_w7_ippiFilterScharrHorizMaskBorder_16s_C1R", "icv_g9_ippiSet_16s_C4MR", "icv_p8_ownNormRel_L2_16u_C3CMR_V8", "icv_p8_ownsIndx_16s_W7", "icv_w7_ownippiThreshold_V_32f_AC4", "icv_g9_ownpi_NormInfRel_16s_C1R", "Java_org_opencv_features2d_Params_get_1filterByColor_10", "icv_g9_cv_ownippiFilterMin_16s_Col", "icv_g9_ownscDftInv_Fact5_32fc", "icv_h9_ippiSub_16u_C1RSfs", "icv_g9_ippiMinIndx_16s_C1R", "icv_s8_ownpi_SimpleRotate_32f_C4R", "icv_s8_ownpi_Rotate180_64_C3R", "icv_s8_owniGetRectTopBF_8u_C1R", "_ZN2cv5MatOpD1Ev", "icv_h9_owniMirrorHorizontal_16u_C1", "icv_p8_owniResizeLanczos_32f_C3R", "icv_s8_ownNorm_Inf_16u_C3CMR_V8", "Java_org_opencv_video_DualTVL1OpticalFlow_getMedianFiltering_10", "icv_g9_ippiCopyReplicateBorder_32s_C3IR_L", "_ZN2cv4cuda10syncOutputERKNS0_6GpuMatERKNS_12_OutputArrayERNS0_6StreamE", "icv_w7_owns_BitRev2_8", "icv_p8_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_s8_ownpi_WarpAffine_L_16u_P4", "icv_s8_owniFilterPrewittVertBorder2_8u16s_C1R", "icv_g9_piGradientScharr32f_c1", "icv_n0_own_ipps_dInvSqrt_W7HAynn", "icv_p8_ippiResizeLanczos_16s_C1R_L", "icv_g9_owniFilter32f_16u_C1R_g9e9_7", "_ZNK2cv3dnn19experimental_dnn_v13Net8getFLOPSEiRKSt6vectorIiSaIiEE", "icv_p8_ownippsMin_32f", "icv_h9_ippiDCTFwd_32f_C1R", "icv_s8_ippiResizeNearest_16s_C4R_L", "icv_g9_ippiCopyMirrorBorder_16u_C3IR", "icv_g9_ippiResizeCubic_32f_C3R_L", "Java_org_opencv_objdetect_HOGDescriptor_detectMultiScale_10", "icv_w7_ippiCopyConstBorder_16s_C4R", "_ZN3tbb8internal17generic_scheduler12reload_tasksEv", "icv_w7_ippiCopy_32f_C4C1R", "icv_w7_ippsSortRadixGetBufferSize", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_W7", "icv_h9_ownpi_WarpAffine_C_Const_8u_C4", "icv_h9_owns_cFFTinv_16_32fc", "icv_s8_ownsrDFTfwd_6_32f", "icv_w7_owns_cRadix4Fwd_64fc", "icv_w7_computeTiles", "icv_h9_ippiScaleC_32s8s_C1R", "Java_org_opencv_ml_TrainData_getCatOfs_10", "icv_g9_ownscDftFwd_Fact5_32fc", "icv_w7_ownpi_WarpAffine_NN_8_P4", "icv_p8_owniResizeLanczos_16s_C3R", "icv_p8_ownpi_Rotate180_64_C3R", "icv_g9_owniFlipCopy_8u_C3", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale3_11", "icv_s8_ownsGetSizeTabDftBase_32f", "icv_w7_ownNormDiff_Inf_16u_C3CMR_W7", "icv_w7_ippiDCTInv_32f_C1R", "icv_g9_ownpi_WarpSimpleCubic_16s_C1R", "icv_s8_owniFlipCopy_16u_C3", "_Z27Mat_to_vector_vector_DMatchRN2cv3MatERSt6vectorIS2_INS_6DMatchESaIS3_EESaIS5_EE", "icv_s8_owns_cRadix4Inv_64fc", "Java_org_opencv_imgproc_Imgproc_pyrDown_10", "icv_w7_ippiCopyMirrorBorder_32s_C3IR", "icv_w7_ownpi_WarpAffine_NN_Const_16u_C4", "icv_h9_ownscDFTinv_10_scale_64fc", "_ZN2cv3LDAC2Ei", "icv_w7_ippiMarkSpecklesGetBufferSize", "Java_org_opencv_features2d_DescriptorExtractor_delete", "_ZN2cv15NAryMatIteratorC2EPPKNS_3MatEPS1_i", "icv_p8_ownsMul_8u_1Sfs", "icv_g9_ippsMinEvery_32f", "cvStartAppendToSeq", "icv_g9_ownsMul_16s_Bound", "icv_s8_ownsrDFTfwd_14_32f", "icv_p8_ownSumSq_8u_C1R_W7", "icv_w7_ownNormDiff_Inf_8s_C3CMR_W7", "icv_n0_own_ipps_sSin_S9EPnnn", "icv_g9_ownpi_WarpAffine_C_Mem_16s_C4", "ippicviTranspose_16u_C1R", "icv_s8_ownNorm_L2_32f_C3CMR_W7", "_ZNK2cv3PCA7projectERKNS_11_InputArrayE", "icv_w7_ippiFilterMedianVert_16s_1x3_A6", "icv_w7_ownpi_ClipPolygon", "Java_org_opencv_ml_SVM_setGamma_10", "icv_h9_ippiDCTInv_32f_C1R", "icv_g9_ippsFFTFwd_CToC_64fc", "icv_g9_ownNormDiff_Inf_16u_C1MR_P8Y8", "Java_org_opencv_imgproc_Imgproc_undistort_11", "icv_g9_ippiCopy_8u_AC4C3R", "icv_h9_owniHistogram_32f_C1R_uniform", "_ZN9_IplImageC1ERKN2cv3MatE", "icv_h9_ownpi_WarpSimpleCubic_32f_C1R", "icv_s8_ownSS1_65_8u", "icv_g9_owniCmpLess_16u_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_setShadowThreshold_10", "icv_s8_ownSS1_41_32f", "_ZN2cv25BOWImgDescriptorExtractorD2Ev", "icv_w7_ownpi_MinMax_32f_C1R", "icv_s8_owns_sDctFwd_Conv_32f", "icv_h9_cv_ownippiFilterMin_8u_Col", "icv_p8_ownCanny_32f8u_C1R_3_16u_W7", "icv_p8_ownSS3_53_16s", "icv_h9_ippiNormRel_L1_32f_C1MR", "ippicviDilate_16u_C1R_L", "icv_g9_ownscDftFwd_Prime11_64fc", "icv_p8_owniCopyMirrorBorder_8u_C3IR", "icv_g9_ownpi_SmoothPel", "ippicviMorphClose_8u_C4R_L", "icv_p8_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "icv_p8_owniScaleC_64f8s_C1R_fst", "icv_h9_owniFilter32f_8u_C4R_g9e9_7", "Java_org_opencv_core_Mat_n_1col", "Java_org_opencv_videoio_VideoCapture_open_10", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getMinEigThreshold_10", "icv_h9_ownscDFTfwd_9_scale_32fc", "icv_h9_ippiFilterBorder_32f_C4R", "ippicviTranspose_16u_C4IR", "icv_s8_ownpi_NormInf_8u_C1R", "icv_h9_ownSS3_16s", "Java_org_opencv_core_Core_getNumberOfCPUs_10", "icv_p8_DotProd_64f64fc", "icv_p8_owniCopy_8u_C3MR", "icv_w7_ippiCopy_8u_C3AC4R", "icv_p8_ownpi_Xor_8u_AC4R", "icv_g9_ownSS1_98_16u", "icv_h9_ownResize4Nearest16u", "icv_h9_ownpi_WarpAffine_C_Transp_16u_C1", "_ZN2cv9videostab36TranslationBasedLocalOutlierRejectorC1Ev", "icv_s8_ownResize4Nearest32f", "icv_s8_ownscDFTfwd_11_scale_32fc", "icv_p8_owns_cFFTfwd_32_scale_32fc", "icv_p8_ownscDFTfwd_10_32fc", "icv_h9_ippiTranspose_8u_C4IR", "icv_h9_ippiFilterBoxBorder_8u_C4R", "Java_org_opencv_objdetect_BaseCascadeClassifier_delete", "icv_s8_ownpi_WarpAffine_L_Mem_16u_C1", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_V8", "icv_g9_innerHSVToRGB_8u_AC4R", "icv_n0_own_ipps_dExp_G9LAynn", "icv_h9_ownSS1_41_16u", "icv_s8_ownResize3Cubic16s", "_ZN2cv3dnn19experimental_dnn_v19TanHLayer6createERKNS1_11LayerParamsE", "ippicviNormRel_L1_16s_C1R", "icv_p8_ownNormRel_Inf_16u_C1MR_P8Y8", "_ZN2cv25BOWImgDescriptorExtractor13setVocabularyERKNS_3MatE", "icv_g9_ippiCopyMirrorBorder_32s_C4IR", "icv_s8_ippiThreshold_LTVal_32f_C1R", "icv_w7_ippiScaleC_64f32f_C1R", "icv_p8_ippiSub_32f_C4R", "icv_s8_ownpi_Rotate90_8_C3R", "icv_s8_ownpi_WarpAffine_NN_Repl_16u_C3", "icv_s8_ownsAtan2One", "icv_p8_owniSwap_32s_C4C3R", "icv_h9_ippiResizeNearest_32f_C3R_L", "icv_w7_owns_BitRev1_Z", "_ZNK2cv17CascadeClassifier5emptyEv", "icv_h9_ownscDFTinv_13_scale_64fc", "_ZN2cv3Mat3eyeENS_5Size_IiEEi", "icv_w7_ownCopySubpix_16u32f_C1R_W7", "icv_s8_ownSS4_32_16u", "_ZN2cv21DetectionBasedTracker15InnerParametersC2Ev", "_ZNK2cv17DescriptorMatcher20DescriptorCollection13getDescriptorEi", "icv_w7_ippiResizeLanczos_8u_C1R_L", "icv_s8_owniFilter_32f_C1R_v8u8_5", "icv_h9_ippiFilterSobelHorizBorderGetBufferSize", "icv_h9_ownpi_WarpAffineNearest_64f_C3R", "icv_g9_ownsrDFTinv_15_64f", "icv_w7_ownpi_MaxIndx_32f_C1R", "icv_g9_ippsSortRadixIndexGetBufferSize", "ippicviNormRel_L1_8u_C1MR", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale_11", "_ZN2cv13drawKeypointsERKNS_11_InputArrayERKSt6vectorINS_8KeyPointESaIS4_EERKNS_17_InputOutputArrayERKNS_7Scalar_IdEEi", "icv_p8_ownpi_dInterVector_L_16u_C3", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7", "icv_p8_ownscDFTfwd_13_scale_32fc", "_ZN3tbb8internal17generic_scheduler14cleanup_workerEPvb", "icv_s8_ownWarpSimple3Nearest64f", "icv_w7_ownippiFilterMedianHoriz_8u_C4R_5x1", "Java_org_opencv_features2d_ORB_setNLevels_10", "icv_p8_ownpi_NormL2Rel_8u_C1R", "icv_p8_ownsMul_8u_PosSfs", "_ZN3tbb8internal17generic_schedulerC1ERNS0_6marketE", "icv_p8_ownWarpSimple3Nearest8u", "icv_p8_ownSShorisontal_32f", "_ZN2cv17DescriptorMatcher11radiusMatchERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "_ZN2cv3addERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_i", "icv_g9_ippiResizeLinear_64f_C1R_L", "icv_p8_owniCopyMirrorBorder_32s_C3IR_L", "icv_s8_ownNormDiff_Inf_8u_C1MR_W7", "icv_h9_ippiCopy_16u_C3MR", "icv_g9_ownpi_WarpAffine_NN_Const_64f_C3", "Java_org_opencv_ml_SVMSGD_getWeights_10", "Java_org_opencv_calib3d_StereoSGBM_getMode_10", "icv_g9_ownsrDFTinv_3_32f", "icv_w7_ownsConj_32fc_I_W7", "Java_org_opencv_core_Core_add_10", "icv_g9_ippiDFTInv_PackToR_32f_C1R", "ippicviThreshold_GT_16s_C1IR", "icv_h9_ippiScaleC_16s8s_C1R", "icv_p8_ownpi_WarpAffine_NN_8_P4", "icv_w7_ippiSub_8u_C1RSfs", "icv_g9_ownResize4Antialiasing_16s", "icv_g9_ippiMinMaxIndx_16u_C1MR", "icv_h9_ownSS4_43_8u", "icv_g9_ippiTranspose_16u_C1IR", "icv_g9_ownpi_WarpAffineNearest_16s_C1R", "icv_w7_owns_crRadix4Fwd_32f", "ippicviFilterBorder_32f_C3R", "icv_w7_ippiSwapChannels_8u_C3C4R", "icv_s8_ownpi_dInterVectorClip_NN_32_C3", "ippicviFilterBoxBorder_16u_C1R", "_ZN2cv3dnn19experimental_dnn_v15LayerD1Ev", "icv_p8_ownAddWeighted_32f_C1IMR_W7", "icv_s8_ownippiFilterMin_16s_Row", "ippicviMaxIndx_8u_C1R", "Java_org_opencv_dnn_Net_delete", "icv_p8_ownpi_WarpAffine_L_Mem_32f_C4", "icv_h9_ippiNormDiff_L1_32f_C3CMR", "_ZNK2cv4cuda10DeviceInfo19multiProcessorCountEv", "icv_w7_ippiCopy_16u_C1C3R", "_Z15Mat_to_MatShapeRN2cv3MatERSt6vectorIiSaIiEE", "Java_org_opencv_calib3d_StereoBM_getSmallerBlockSize_10", "icv_g9_ownscDftInv_Prime2_32fc", "icv_g9_ownscDftInv_Fact3_32fc", "icv_p8_ownpi_WarpAffine_NN_Mem_64f_C3", "_ZN2cv3ogl9Texture2DC2ERKNS_11_InputArrayEb", "icv_w7_ippiFilterSobelNegVertBorder_32f_C1R", "icv_w7_ownippiFilterMax_16u_Col_AC4", "Java_org_opencv_objdetect_Objdetect_groupRectangles_11", "icv_g9_ownRow1Filter10_32f", "icv_s8_ownpi_WarpAffine_C_Repl_16u_C3", "icv_p8_owniFilterBilateralR1_InMem_32f_C1R_px", "ippicviScaleC_64f32f_C1R", "icv_p8_ownpi_dInterVectorClip_L_16u_P3", "icv_w7_ownpi_WarpAffine_C_Mem_64f_C4", "icv_s8_ownResize3Cubic32f", "icv_g9_ownpi_WarpAffine_NN_Mem_16u_C1", "icv_p8_ownscrDftInv_Fact3_64f", "icv_h9_ippiWarpAffineCubic_64f_C3R", "icv_h9_ownscDFTfwd_12_scale_32fc", "icv_p8_ippiMean_32f_C1MR", "Java_org_opencv_dnn_DictValue_DictValue_11", "icv_h9_ownSS1_16s", "icv_w7_ownCanny_16s8u_C1R_3_32s_W7", "ippicviScaleC_32f64f_C1R", "icv_s8_ownpi_NormL2Rel_32f_C1R", "icv_w7_ippiNorm_L2_16u_C1R", "_ZNK2cv4UMat3mulERKNS_11_InputArrayEd", "icv_g9_ownpi_SimpleRotate_16s_C4R", "icv_p8_piGradientScharr32f_c1", "icv_g9_owniScaleC_32f32f_C1R_fst", "icv_w7_ippiResizeCubic_8u_C3R_L", "icv_p8_ownSS3_98_16u", "icv_h9_ippiResizeCubic_32f_C4R_L", "_ZN2cv6detail11MatchesInfoC2Ev", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_W7", "icv_g9_ippiNormRel_L1_32f_C1R", "icv_w7_owns_cFft_BlkSplit_64fc", "icv_p8_owniResizeSuper_16u_C4R", "icv_w7_ippsSortRadixAscend_32f_I", "cvLaplace", "icv_s8_ownsGetSizeTabDftDir_32f", "_ZN3tbb16spin_rw_mutex_v318internal_constructEv", "icv_s8_owns_rFFT_2_64f", "icv_s8_ownpi_MinMax_8u_C4R", "Java_org_opencv_videoio_VideoCapture_get_10", "_ZN2cv3ocl7ProgramD2Ev", "icv_p8_ownRow1Lanczos3_16u", "icv_w7_ippsDotProd_64f", "icv_s8_owniFFTFwd_RToPack_32f_C1R", "icv_w7_owniResizeLanczos_16u_C4R", "_ZN2cv22SimpleBlobDetectorImpl4readERKNS_8FileNodeE", "icv_g9_ownSS4_21_8u", "icv_h9_ippiCopy_16s_AC4C3R", "icv_s8_owniResizeSuper_32f_C4R", "Java_org_opencv_imgproc_Imgproc_integral2_11", "icv_h9_ownSS3_54_32f", "icv_h9_ippiFFTInv_PackToR_32f_C1R", "icv_h9_ippiWarpAffineLinear_32f_C3R", "ippicviThreshold_LTVal_16s_C1R", "_ZN2cv21DetectionBasedTracker13resetTrackingEv", "icv_p8_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "icv_s8_ownResize1Lanczos3_16u", "icv_s8_ownAddSquare_32f_C1IMR_W7", "icv_w7_ownAbsDiffC_8u_C1R_W7", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_V8", "icv_p8_owniFilter_32f_C1R_v8u8_8NA", "_ZN2cv6detail20CylindricalWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RNS_4cuda6GpuMatES9_", "icv_p8_ippiMirror_32s_C4R", "icv_p8_owniCopyMirrorBorder_8u_C3IR_L", "icv_w7_ippiConvert_32f32s_C1RSfs", "icv_h9_owniFilter32f_8u_C1R_g9e9_8", "icv_s8_ownpi_NormL1Diff_16s_C1R", "icv_s8_ownAFilterRow_16s_C1R", "icv_h9_owniCopyMirrorBorder_16s_C1R", "icv_g9_ownsrDFTfwd_9_scale_64f", "_ZN2cv17CommandLineParseraSERKS0_", "icv_p8_owns_crFftFwd_Fact4_Last_32f", "icv_s8_owniResizeNearest_16s_C3R", "icv_w7_ippiScaleC_32f16u_C1R", "icv_g9_ownippsCnvrtNear_32f16sA_AVX", "icv_w7_ownpi_Rotate90_32_C4R", "icv_h9_ippiFilterBilateralBorder_8u_C1R_L", "icv_h9_owniResizeCubic_16s_C1R", "icv_g9_owniGetRectTopBF_8u_C3R", "icv_g9_ippiCopy_16s_C1C4R", "icv_s8_ippiNormRel_L1_16s_C1R", "icv_p8_ownsrDFTfwd_12_32f", "icv_g9_owns_cFft_BlkMerge_64fc", "_ZN2cv12morphologyExERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE", "icv_w7_ownscDft_Conv_64fc", "icv_p8_owns_cFFTinv_8_64fc", "icv_h9_ippiNormRel_Inf_32f_C1R", "icv_s8_ownsConj_32fc_T7", "icv_s8_ownscDft_Dir_64fc", "_ZN2cvplERKNS_7MatExprERKNS_7Scalar_IdEE", "_ZN2cv19connectedComponentsERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_g9_ownSS3_32_16s", "icv_s8_ownsMulC_32f", "icv_h9_ownSS1_32_16u", "icv_p8_ownpi_XorC_32s_C1R", "icv_s8_ownsrDFTfwd_3_scale_64f", "icv_w7_ownpi_WarpAffineSimpleCubic_16u_C1R", "icv_w7_ippiCopy_8u_AC4C3R", "icv_h9_ippiScaleC_32f8s_C1R", "icv_p8_owns_cFftInv_Fact4_32fc", "_ZN2cv5flann20CompositeIndexParamsC2EiiiN7cvflann20flann_centers_init_tEf", "icv_g9_ippiResizeSuper_32f_C3R_L", "icv_w7_ippsDCTFwdGetSize_32f", "icv_w7_ippiWarpAffineNearest_64f_C3R", "icv_w7_ownippiFilterMedianCross_16s_C1R_3x3", "_ZN2cv6detail12DpSeamFinder12computeCostsERKNS_3MatES4_NS_6Point_IiEES6_iRNS_4Mat_IfEES9_", "icv_p8_ippiCopy_8u_P3C3R", "icv_p8_ownsrDFTfwd_6_32f", "icv_p8_ippiCopyMirrorBorder_32s_C3R", "icv_p8_ippiNorm_L1_16u_C1R", "icv_g9_ippiResizeSuper_16u_C4R_L", "icv_h9_ippiSubC_32f_C1R", "icv_p8_ownscDft_Conv_32fc", "icv_s8_ippsFFTInv_CToC_64fc", "icv_p8_ownpi_WarpAffine_NN_Repl_64f_C3", "cvFillPoly", "icv_h9_ippsConj_64fc", "icv_s8_ippiDotProd_32s64f_C1R", "icv_h9_ownpi_WarpAffine_L_Mem_8u_C1", "icv_p8_ippiMorphOpen_16s_C1R_L", "icv_g9_ownSS3_32_16u", "_ZN2cvltEdRKNS_3MatE", "ippicvsLn_64f_A50", "icv_h9_ownippiFilterMedianHoriz_16s_C3R", "icv_h9_ownippiFilterxBrd_32f_C3R", "ippicviDotProd_16s64f_C1R", "Java_org_opencv_features2d_Params_get_1minConvexity_10", "icv_p8_ippsDCTFwdGetSize_32f", "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", "_ZN2cv7fisheye9calibrateERKNS_11_InputArrayES3_RKNS_5Size_IiEERKNS_17_InputOutputArrayESA_RKNS_12_OutputArrayESD_iNS_12TermCriteriaE", "icv_p8_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_W7cn", "icv_h9_ippiResizeLanczos_32f_C1R_L", "cvCreateKalman", "icv_s8_ippsCos_32f_A24", "icv_w7_ownpi_Histogram_FS_32f_C3R", "Java_org_opencv_photo_Photo_inpaint_10", "icv_p8_myHSVToRGB_8u_C3R", "icv_w7_cv_ownippiFilterMax_32f_Col", "icv_s8_ippsFFTGetSize_C_64fc", "icv_h9_ownSS4_41_8u", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_W7", "icv_s8_ippiWarpAffineCubic_32f_C1R", "icv_p8_ownpi_Set_64f_C3R", "icv_w7_owniFlip_8u_C3", "icv_w7_ippiSum_32f_C4R", "Java_org_opencv_ml_TrainData_getNTrainSamples_10", "icv_s8_ippiMean_16s_C4R", "icv_s8_owniConvert_32s8u_W7", "Java_org_opencv_videoio_VideoCapture_release_10", "icv_s8_ownippsCnvrtFin_32f16u_Sfs", "icv_h9_ippsDFTInit_R_64f", "Java_org_opencv_video_DualTVL1OpticalFlow_setUseInitialFlow_10", "_ZNK2cv4cuda6GpuMat6copyToERKNS_12_OutputArrayERNS0_6StreamE", "icv_s8_owniCopy16s_C4P4_A6", "ippicviCopy_8u_AC4C3R", "icv_s8_ownpi_WarpAffineCubic_64f_C1R", "icv_g9_ippiWarpAffineCubic_64f_C4R", "icv_w7_ownDistanceTransform_3x3_8u32f_C1R_21F", "icv_g9_ippiMorphGradient_16u_C1R_L", "icv_h9_ownCubicKernel0", "Java_org_opencv_videoio_VideoWriter_delete", "icv_w7_ownpi_MinMax_16s_C4R", "icv_w7_ippiCopyReplicateBorder_8u_C4R", "ippicviResizeNearest_16s_C1R_L", "icv_g9_Moments8uC1R_64f_FAST", "icv_p8_ippiCopyMirrorBorder_32s_C3R_L", "icv_g9_ownscDFTinv_5_scale_32fc", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_V8", "_ZN2cv7imwriteERKNS_6StringERKNS_11_InputArrayERKSt6vectorIiSaIiEE", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_12", "_ZN2cv3hal12magnitude32fEPKfS2_Pfi", "Java_org_opencv_calib3d_Calib3d_calibrateCameraExtended_12", "icv_p8_ownpi_WarpAffineNearest_16s_C3R", "icv_w7_ownResize3Cubic16u", "icv_s8_ownResize4Lanczos3_8u", "icv_g9_ippiCopyMirrorBorder_32f_C1R_L", "icv_w7_owniShiftClipRectZeroTail_8u32f_C1R", "icv_h9_ippiMorphClose_32f_C3R_L", "icv_g9_ownSS1_94_32f", "_ZNK2cv3ocl6Kernel29preferedWorkGroupSizeMultipleEv", "icv_g9_ownpi_Max_16u_C1R", "icv_h9_ippiMinMaxIndx_8u_C1R", "icv_w7_ippiResizeAntialiasingLanczosInit_L", "ippicviCopy_8u_C3AC4R", "icv_n0_own_ipps_dLn_W7HAynn", "ippicviCopy_16u_P3C3R", "icv_p8_ownpi_Or_16u_AC4R", "icv_w7_ownsrDftInv_Dir_64f", "icv_ipp_clear87", "ippicviCopy_16s_C1R", "icv_s8_ippiCopyReplicateBorder_8u_C3R_L", "icv_w7_ownpi_WarpAffine_NN_8_P3", "icv_s8_ippiResizeNearest_8u_C4R_L", "icv_h9_ippiAlphaPremul_8u_AC4R", "icv_p8_ippsDFTInit_C_64fc", "icv_s8_ippiGradientVectorSobel_8u16s_C1R", "icv_w7_ownsrDFTfwd_13_scale_32f", "icv_g9_ownpi_WarpAffineSimpleNearest_32f_C1R", "_ZN2cv6detail18GraphCutSeamFinder4Impl4findERKSt6vectorINS_4UMatESaIS4_EERKS3_INS_6Point_IiEESaISA_EERS6_", "icv_h9_ippiCopyConstBorder_16u_C1R", "icv_w7_ippiScaleC_32f8u_C1R", "icv_p8_ownippiFilterMedianSqr_16u_AC4R", "icv_p8_ownSS3_65_16u", "icv_p8_ippiMirror_16u_C4R", "icv_h9_owns_rFFT_1_64f", "_ZN2cv11namedWindowERKNS_6StringEi", "WebPSafeCalloc", "icv_s8_ownNormRel_Inf_16u_C3CMR_V8", "icv_p8_ippsFFTFwd_RToPerm_64f", "icv_s8_owns_initTabTwd_Large_32f", "icv_s8_ownippsMagn_16s_Sfs", "icv_p8_owniFilterBilateralCom_InMem_32f_C1R", "icv_p8_owniScaleC_16s32f_C1R_fst", "Java_org_opencv_ml_SVM_setCoef0_10", "cvDistTransform", "icv_g9_ippiAddSquare_32f_C1IMR", "icv_g9_owniFlip_32s_C3", "icv_w7_ownpi_dInterVector_L_8u_C1", "Java_org_opencv_imgproc_Imgproc_getGaborKernel_11", "icv_g9_ownsrDFTfwd_3_64f", "icv_w7_ownpi_Xor_32s_AC4R", "icv_h9_ippiNorm_L2_8u_C1R", "icv_h9_ownFilterColumn_32f_C1R_g9e9", "icv_s8_ippiMean_32f_C4R", "icv_h9_ownpi_WarpAffine_L_Repl_64f_C4", "icv_h9_ownpi_WarpAffineBack", "icv_p8_ippiResizeCubic_16s_C3R_L", "ippicviTranspose_32f_C4IR", "icv_h9_ownWarpSimple4Nearest16u", "icv_g9_myHLSToRGB_8u_C3R", "icv_h9_ippsSin_32f_A24", "cvSolve", "icv_g9_ippiHistogramGetBufferSize", "icv_h9_ippiSum_32f_C1R", "icv_h9_ownsrDFTfwd_7_64f", "icv_g9_ownscDFTfwd_5_scale_32fc", "ippicviResizeLinearInit_L", "icv_g9_ippiMinMax_8u_C1R", "icv_p8_piGradientScharr8u_row_c1", "icv_s8_ippiMarkSpecklesGetBufferSize", "_ZN2cv5flann5Index12radiusSearchERKNS_11_InputArrayERKNS_12_OutputArrayES7_diRKNS0_12SearchParamsE", "icv_p8_ownNormDiff_L1_8u_C3CMR_V8", "icv_s8_ownsInitTabDftBase_32f", "icv_s8_ownAddWeighted_32f_C1IR_W7", "icv_g9_owniFilter_32f_C4R_g9e9_7", "icv_w7_ippiFilterLaplacianBorder_32f_C1R", "icv_g9_ownCalcBorderR4Lanczos2_8u", "icv_g9_owniScaleC_16u16s_C1R_acc", "ippicviRGBToHLS_8u_C3R", "icv_w7_owniFlipCopy_16u_C3", "icv_w7_ownscrDftFwd_Fact2_32f", "ippicviResizeAntialiasing_32f_C4R_L", "icv_p8_owns_cFFTinv_16_64fc", "icv_w7_ippiWarpAffineLinear_32f_C4R", "icv_g9_ownsrDFTinv_12_64f", "_ZN2cv9rectangleERNS_3MatENS_5Rect_IiEERKNS_7Scalar_IdEEiii", "_ZN3tbb8internal13observer_list5clearEv", "ippicviSet_16u_C1R", "ippicviCanny_32f8u_C1R", "icv_p8_ippiResizeLanczos_8u_C4R_L", "_ZN2cv9ExceptionC2Ev", "icv_p8_ownSS1_41_8u", "icv_p8_owniFilter_32f_C1R_v8u8_6NA", "icv_p8_ownRow1Filter14_16s", "icv_s8_ownscrDftFwd_Prime2_64f", "icv_g9_ippiResizeLinear_16u_C3R_L", "icv_h9_ippiMean_16s_C1R", "icv_s8_ownippiFilterMedianCross_16s_C4R_5x5", "icv_p8_ownLaplace3x3Row_16s_C4", "icv_w7_ownsMul_8u_PosSfs", "icv_g9_ippiCopyConstBorder_32f_C1R", "icv_p8_ippiColorToGray_32f_AC4C1R", "icv_h9_owniFilter_32f_C4R_g9e9_3", "icv_g9_owns_rFFTinv_8_32f", "icv_s8_ippiMorphBlackhat_8u_C1R_L", "icv_w7_ownsrDFTfwd_15_scale_64f", "icv_w7_ippsSortRadixIndexAscend_16u", "icv_p8_ownpi_WarpAffine_C_Const_16s_C3", "icv_w7_ippiAdd_16u32f_C1IR", "icv_s8_ownNormDiff_Inf_8s_C3CMR_V8", "icv_p8_ownsSub_16s_PosSfs", "icv_p8_ownBuildFilterAA_32f", "icv_s8_ownscDFTfwd_13_64fc", "icv_s8_ownBFilterRow32f_16s_C3R", "icv_h9_ippsConvert_16s8s_Sfs", "icv_g9_ownRow1Filter8_16s", "icv_w7_ippiConvert_8u8s_C1RSfs", "icv_s8_ippsFFTInit_C_32fc", "icv_w7_ownLaplRow5x5_16s_C1", "icv_w7_ippsSortRadixAscend_64f_I", "icv_g9_owniFilter32f_8u_C4R_g9e9_1", "_ZN2cv6detail7Blender7prepareERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_5Size_IiEESaISA_EE", "_Z22vector_KeyPoint_to_MatRSt6vectorIN2cv8KeyPointESaIS1_EERNS0_3MatE", "icv_s8_owns_BitRev2_D", "icv_p8_ownscrDftInv_Prime4_64f", "cvGetImageROI", "icv_h9_ownscDFTinv_7_scale_64fc", "icv_g9_owns_rFFT_2_32f", "icv_h9_ownsMinEvery_32f_AVX", "icv_p8_ippiConvert_32s16u_C1RSfs", "icv_w7_ownscDftFwd_Prime5_32fc", "icv_w7_ippiFilterSobelVertSecondBorderGetBufferSize", "icv_p8_owniAutoCorrFull_C1R", "icv_g9_ippiAdd_16u_C1RSfs", "icv_s8_ownsAdd_8u_NegSfs", "_ZN2cv3expERKNS_10softdoubleE", "icv_s8_owniFilter_32f_C3R_v8u8_7", "icv_p8_ippiMorphOpen_32f_C4R_L", "icv_p8_ippiResizeLinear_64f_C3R_L", "_ZN2cv25groupRectangles_meanshiftERSt6vectorINS_5Rect_IiEESaIS2_EERS0_IdSaIdEES8_dNS_5Size_IiEE", "icv_h9_ippiAddWeighted_8u32f_C1IMR", "icv_p8_ippiCopyMirrorBorder_32s_C1R", "Java_org_opencv_video_BackgroundSubtractor_delete", "icv_g9_owniCopyMirrorBorder_8u_C4R", "icv_p8_ownscDFTfwd_6_64fc", "_ZN3tbb4task22internal_set_ref_countEi", "_ZN2cv9videostab17OnePassStabilizer14estimateMotionEv", "icv_s8_ownSS3_65_16u", "icv_s8_ippiSet_8u_C3MR", "_ZN9__gnu_cxx27__verbose_terminate_handlerEv", "_ZN2cv8internal18WriteStructContextD2Ev", "icv_p8_ownAddProduct_16u32f_C1IR_W7", "icv_g9_ownpi_MinMax_32f_C1R", "icv_h9_ownpi_WarpAffine_L_Const_32f_C3", "_ZN2cv3hal6mul16uEPKtjS2_jPtjiiPv", "Java_org_opencv_ml_EM_trainEM_10", "_ZN2cv18getAffineTransformEPKNS_6Point_IfEES3_", "icv_h9_ippiCopyReplicateBorder_32s_C3R_L", "icv_w7_ownNorm_L1_8s_C1MR_W7", "icv_s8_owniResizeSuper_16u_C4R", "icv_g9_ownsrDFTfwd_10_32f", "icv_w7_ownsMul_8u_NegSfs", "icv_p8_ownCalcBorderR1Antialiasing_8u", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "Java_org_opencv_ml_EM_trainM_11", "icv_g9_ownpi_WarpAffine_L_Const_64f_C1", "Java_org_opencv_imgproc_Imgproc_erode_12", "icv_s8_ownpi_Max_32f_C1R", "icv_h9_ownpi_WarpAffine_NN_Mem_8u_C1", "icv_w7_ippiSet_32f_C1MR", "icv_h9_ownSS1_43_16u", "icv_g9_owniScaleC_32f16s_C1R_fst", "icv_w7_ippiCopy_8u_C1MR", "icv_g9_ownsMaxEvery_64f_AVX", "_ZN2cvgtERKNS_3MatEd", "icv_g9_ippiTranspose_32f_C4IR", "Java_org_opencv_features2d_Params_set_1filterByConvexity_10", "icv_p8_ownpi_Histogram_BS_16u_C1R", "icv_s8_owniCopy8u_C3P3_48_A6", "icv_s8_ownCalcBorderR3Antialiasing_32f", "icv_w7_ownpi_SimpleRotate_64f_C1R", "icv_s8_owniAutoCorr_C1R", "icv_h9_ownsrDFTfwd_9_scale_32f", "icv_g9_ippiNormDiff_L1_32f_C1R", "icv_w7_ownscDFTinv_7_scale_64fc", "icv_p8_ippiCopyMirrorBorder_16u_C3IR", "_ZThn384_N2cv9videostab17TwoPassStabilizer5resetEv", "icv_p8_piFilterBoxBorder_32f_C1IR_v8u8_NA", "icv_h9_ippsCopy_64f", "icv_g9_ownippiFilterMedian_16s_C3R", "icv_s8_ippiCopyReplicateBorder_32f_C3R", "icv_h9_owniFilter32f_16s_C4R_g9e9_4", "icv_g9_ownsrDFTinv_11_32f", "icv_w7_owniResizeGetBufferSize", "icv_h9_owniConvert_32f8s_AVX", "icv_p8_owniResizeSuper_32f_C1R", "icv_h9_owns_cFFT_2_scale_32fc", "icv_w7_ownscDFTfwd_15_scale_32fc", "icv_h9_ippiMean_16u_C3R", "cvKMeans2", "_ZN2cv6detail21BestOf2NearestMatcherC1Ebfii", "_ZN2cv3hal5max8uEPKhjS2_jPhjiiPv", "icv_g9_ownscDftInv_Fact13_64fc", "icv_h9_ippiCopyReplicateBorder_32f_C3R", "icv_p8_ownsFloorOneF", "icv_p8_ippiScaleC_64f16s_C1R", "icv_s8_ownSS1_31_16u", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork30communicateWithDetectingThreadERKNS_3MatERSt6vectorINS_5Rect_IiEESaIS7_EE", "icv_g9_ippiMean_32f_C3R", "icv_s8_owns_cFftInv_CoreMT_64fc", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_W7", "ippicviFilterBilateralBorderInit_L", "icv_s8_ippiCopySubpixIntersect_32f_C1R", "_ZN3tbb18task_group_context13register_withEPNS_8internal17generic_schedulerE", "_Z7cvTruncRKN2cv10softdoubleE", "icv_g9_ownMorphologyBorderInit_1u_L", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_h9_ippiSum_16u_C4R", "_ZNSt15__exception_ptr13exception_ptrD2Ev", "icv_s8_ownippiFilterMedian_16u_C3R_3x3_palign", "icv_s8_ownpi_WarpAffineCubic_16s_C3R", "icv_w7_owniGetRectLeftBF_32f_C1R", "icv_s8_ownSS4_21_16u", "icv_w7_ippiCopyReplicateBorder_8u_C1R_L", "icv_w7_ownpi_CmpLE_8u_C1R", "_ZN2cv28connectedComponentsWithStatsERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_iii", "icv_w7_ippiSum_16u_C4R", "icv_g9_ippiSet_16u_C1R", "icv_h9_ownpi_WarpAffine_C_Repl_32f_C1", "icv_w7_ippiResizeAntialiasing_8u_C4R_L", "_ZN2cv22createOptFlow_DualTVL1Ev", "icv_g9_ownsrDFTfwd_9_64f", "icv_w7_ippsDFTFwd_CToC_32fc", "icv_w7_ownAFilterRow_8u_C1R", "WebPDecodeBGR", "iwTypeToLen", "icv_s8_ownNormDiff_L1_32f_C3CMR_W7", "icv_s8_owns_initTabTwd_Large_64f", "icv_h9_ownsAdd_8u_PosSfs", "icv_p8_ippiSum_32f_C1R", "Java_org_opencv_imgproc_Imgproc_Scharr_10", "_ZN2cv6detail17VoronoiSeamFinder4findERKSt6vectorINS_5Size_IiEESaIS4_EERKS2_INS_6Point_IiEESaISA_EERS2_INS_4UMatESaISF_EE", "icv_w7_ippiWarpAffineLinear_8u_C1R", "icv_w7_ippiFilterScharrVertMaskBorder_16s_C1R", "icv_w7_ownippsMagn_16sc32f", "icv_s8_ownSS4_52_32f", "icv_p8_ownSS1_81_16s", "icv_p8_ownpi_WarpAffine_NN_Const_16u_C3", "icv_p8_ownNormDiff_L1_16u_C1MR_W7", "icv_w7_ippiNorm_L2_16u_C1MR", "icv_p8_ownsrDFTinv_10_32f", "icv_s8_ownpi_WarpAffineNearest_16u_C1R", "icv_w7_ippiWarpAffineCubic_32f_C1R", "icv_h9_owniConvert_16s16u_avx2", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "icv_s8_ippiTranspose_32s_C3R", "icv_p8_owniScaleC_8u32f_C1R_acc", "icv_w7_ownsAdd_16s", "_ZN2cv3hal10absdiff64fEPKdjS2_jPdjiiPv", "icv_p8_owns_cFFTinv_32_32fc", "Java_org_opencv_video_DualTVL1OpticalFlow_getGamma_10", "_ZN2cv5flann16SavedIndexParamsC1ERKNS_6StringE", "icv_p8_ownscDFTinv_3_64fc", "icv_g9_owniTranspose16u_C4R_core2", "cvInitImageHeader", "icv_h9_cv_ownFilterMxMnCalcBuf", "icv_p8_ownCopySubpix_8u32f_C1R_new_W7", "icv_h9_ownpi_WarpAffine_C_Const_64f_C1", "icv_s8_ownsrDFTfwd_15_scale_32f", "ippicviNormDiff_L2_32f_C3CMR", "icv_h9_owniResizeCubic_8u_C4R", "icv_w7_ownippiFilterMin_32f_Row", "_ZNK3tbb8internal32allocate_root_with_context_proxy4freeERNS_4taskE", "icv_p8_ownsrDFTfwd_10_scale_64f", "icv_s8_ownippiThreshold_GLV_16s_AC4", "icv_p8_ownLanczos3KernelAA", "icv_g9_ippiCopyMirrorBorder_32s_C1IR", "icv_h9_ownMean_32f_C1MR_HSW", "_ZN2cv14copyMakeBorderERKNS_11_InputArrayERKNS_12_OutputArrayEiiiiiRKNS_7Scalar_IdEE", "icv_w7_ippiCopy_32f_P4C4R", "icv_w7_ownpi_dInterVector_NN_8_C1", "_ZN2cv6detail12DpSeamFinder14findComponentsEv", "icv_s8_ippiFilterMedianBorderGetBufferSize", "icv_p8_ownpi_WarpAffine_L_Repl_16u_C1", "icv_h9_ownpi_Rotate90_B_8_C3R", "icv_s8_owns_BitRev1_8", "icv_h9_ippiSet_8u_C4MR", "icv_h9_ippiMoments64f_32f_C1R", "_ZN2cv10BOWTrainerC1Ev", "_ZN2cv8cvtColorERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_w7_ownpi_Rotate90_8_C1R", "icv_w7_ippiCopySubpixIntersect_32f_C1R", "ippicviMorphGetBufferSize_L", "Java_org_opencv_dnn_Dnn_createCaffeImporter_11", "icv_h9_ownscDftInv_Prime2_32fc", "icv_h9_ownpi_WarpAffineSimpleLinear_16u_C4R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_V8", "icv_w7_ownsConvert_32s16s_Sfs0_W7", "icv_h9_ownpi_WarpAffineLinear_32f_C1R", "icv_s8_ippiSet_32f_C3R", "icv_h9_ippiCopy_16u_P3C3R", "cvSliceLength", "icv_g9_ownSS4_41_16u", "icv_g9_ownCalcBorderR3Lanczos3_8u", "icv_g9_ownscDftInv_Prime3_64fc", "icv_p8_ippiDotProd_32s64f_C1R", "icv_w7_ownsrDFTfwd_6_32f", "icv_g9_ownpi_WarpSimpleNearest_32f_C4R", "icv_g9_ippiConvert_16u8s_C1RSfs", "Java_org_opencv_imgproc_Imgproc_morphologyEx_12", "icv_s8_ownscDFTinv_10_32fc", "icv_w7_ownpi_MinMax_8u_C4R", "icv_g9_ownLanczos2KernelAA", "icv_s8_owniFilter_32f_C4R_v8u8_5", "icv_s8_owns_cRadix4Fwd_64fc", "_ZN2cv16estimateAffine3DERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_dd", "icv_p8_owniConvert_32s32f_C1R", "_ZN2cv4cuda19setBufferPoolConfigEiji", "icv_s8_ippiCopy_16s_P4C4R", "icv_s8_owniFilter2_8u16s_C1R", "icv_w7_ownpi_WarpAffine_NN_Mem_16u_C3", "icv_g9_ippiScaleC_64f16s_C1R", "icv_h9_ownAbsDiff_32f_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_W7", "icv_h9_ownscDftFwd_Prime11_32fc", "icv_s8_ownsMul_16s", "icv_s8_ippiCopyReplicateBorder_16s_C3IR", "icv_p8_ownWarpSimple1Nearest16s", "icv_p8_owniScaleC_16s32f_C1R_acc", "_ZN3tbb8internal3rml14private_worker14start_shutdownEv", "icv_g9_ownpi_CmpLT_8u_C1R", "icv_s8_ippiMean_StdDev_16u_C3CMR", "icv_s8_ownpi_WarpAffineNearest_16s_C3R", "Java_org_opencv_features2d_Feature2D_detect_13", "icv_s8_ownpi_MinMax_8u_C1R", "icv_s8_ownscDFTinv_5_scale_32fc", "icv_p8_ippiNorm_Inf_32f_C1MR", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7", "_ZNK2cv11RotatedRect12boundingRectEv", "own_ipps_cCIS_SC_A11", "icv_s8_ownLaplace3x3Row_16s_C4", "icv_w7_ippiCopy_16u_C1C4R", "icv_p8_owniSwap_16s_C3C4R", "icv_s8_innerSwapChannels_16u_C4R", "icv_s8_ownscDftInv_Prime7_32fc", "icv_p8_cv_ownippiFilterMin_8u_Row", "icv_s8_ownippiFilterMedianVert_16u_C4R_1x3", "icv_h9_ownippiFilterMin_8u_Row_avx2", "icv_w7_owniShiftClipRectZeroTail_16u32f_C1R", "icv_p8_piGradient8u", "_ZNK2cv13HOGDescriptor15computeGradientERKNS_3MatERS1_S4_NS_5Size_IiEES6_", "_ZNK2cv8Subdiv2D9getVertexEiPi", "icv_g9_ownscDFTinv_5_32fc", "icv_h9_owniSet_8u_C3MR", "icv_g9_ownsrDFTinv_15_scale_64f", "ippicviCopy_16u_C3P3R", "icv_g9_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "icv_h9_ownpi_WarpAffineSimpleLinear_16u_C1R", "icv_g9_ownColCubic8u", "icv_g9_cv_ownippiFilterMax_8u_Row", "icv_g9_owniFilterBilateralR2_InMem_8u_C1R", "iwiSetUniformMask", "icv_s8_ippiMorphClose_8u_C3R_L", "icv_w7_ownsrDFTfwd_6_64f", "_ZN2cv12VideoCaptureC1Ei", "icv_p8_ippiScaleC_64f16u_C1R", "icv_h9_ownpi_WarpAffine_C_Repl_16s_C4", "icv_w7_ownpi_WarpAffine_CR_16u_C4", "icv_g9_ownSS4_83_16u", "icv_h9_owniSDDiv_32f_C1IR", "icv_w7_ownpi_AndC_8u_AC4R", "icv_h9_owniSet_32s_C3MR", "icv_g9_ippiResizeAntialiasing_32f_C3R_L", "icv_h9_ippiNorm_L1_16u_C1R", "icv_g9_owniScaleC_64f32s_C1R_acc", "icv_p8_Moments16uC1R_64f_FAST", "icv_s8_ippiCopyMirrorBorder_32s_C1R", "icv_w7_ownpi_WarpAffine_L_Repl_8u_C3", "icv_s8_ownscDFTfwd_13_32fc", "icv_s8_ippiAdd_8u_C1RSfs", "icv_p8_owniScaleC_64f8u_C1R_acc", "icv_w7_ippiDilate_16u_C1R_L", "icv_s8_ownsAddC_32f_I", "icv_h9_owns_rFFTinv_32_scale_64f", "_ZN2cv9BFMatcher6createEib", "_ZN2cv6detail23normalizeUsingWeightMapERKNS_11_InputArrayERKNS_17_InputOutputArrayE", "icv_h9_ippiMorphGradient_32f_C1R_L", "icv_h9_ownColLanczos3_16u", "_ZN3tbb18task_group_context4initEv", "icv_p8_ownResize4Antialiasing_32f", "icv_s8_ownFilter_32f_AC4R", "icv_g9_ippiScaleC_8s32f_C1R", "cvReleaseStructuringElement", "Java_org_opencv_imgproc_Imgproc_convexHull_10", "icv_s8_owniCopyReplicateBorder_8u_C1R", "icv_s8_ippiScaleC_32f16u_C1R", "icv_g9_ownFilterBoxBorder_8u_AC4IR", "icv_h9_ownpi_Rotate90_B_32_C1R", "icv_p8_ownippiThreshold_LV_32f_C4", "icv_h9_ippiMirror_32s_C4R", "icv_w7_owniResizeAntialiasingLinearInit_L", "icv_s8_ownscDFTfwd_7_32fc", "icv_w7_ippiScaleC_16u64f_C1R", "icv_h9_ippiConvert_16s8u_C1R", "icv_w7_ownpi_NormL1_32f_C1R", "icv_p8_ownscDftInv_Fact_64fc", "icv_g9_ippiHarrisCornerGetBufferSize", "icv_g9_owns_rFFTinv_16_32f", "own_ipps_dSinCos_SC_A11", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_V8", "icv_s8_ownDistanceTransform_3x3_8u_C1R_B", "icv_g9_ippiWarpAffineLinear_16s_C3R", "icv_g9_ippiCopyMirrorBorder_16u_C1IR", "icv_h9_owns_sDctFwd_Dir_32f", "icv_h9_ownRow1Filter14_32f", "_ZN3tbb8internal9schedulerD0Ev", "icv_p8_ownpi_WarpAffine_L_Repl_16s_C4", "Java_org_opencv_imgproc_LineSegmentDetector_compareSegments_11", "_ZN3tbb8internal17generic_scheduler15init_stack_infoEv", "icv_p8_ippiSqrDistanceNorm_8u32f_C1R", "icv_h9_ownSS3_98_16s", "icv_h9_owniFilterMedianSqr5x5_32f_C1R", "icv_p8_ownpi_WarpAffineSimpleNearest_16s_C3R", "icv_p8_ownpi_CmpLT_32f_C1R", "icv_h9_owniResizeAntialiasing_8u_C3R_L", "icv_p8_ippiSet_16u_C1MR", "icv_s8_ownsrDFTfwd_15_32f", "icv_g9_ownMinMaxIndx_16u_C1MR_1", "_ZN2cv6detail20BundleAdjusterAffine9calcErrorERNS_3MatE", "_ZN2cv5flann17KMeansIndexParamsC2EiiN7cvflann20flann_centers_init_tEf", "icv_w7_ippiMorphGradient_8u_C4R_L", "icv_s8_ownpi_Histogram_16s_AC4R", "icv_s8_owniResizeLanczos_16s_C1R", "icv_w7_ippiNormRel_L2_32f_C1R", "_ZN2cv2ml9TrainDataD1Ev", "icv_s8_ippiTranspose_16u_C3R", "icv_p8_owniDenominator_C1R", "icv_h9_ownpi_FindPerimeter", "icv_h9_ippiErode_32f_C3R_L", "icv_s8_ownWarpSimple4Nearest16u", "icv_p8_ownsMaxEvery_16u", "icv_p8_ownpi_WarpAffine_NN_Repl_8u_C3", "icv_g9_ippiMean_16u_C1R", "icv_s8_ippiDCTInvInit_32f", "cvMaxS", "icv_w7_owns_sDctInv_Conv_32f", "icv_p8_owniNormLevel_8u_C1R", "icv_h9_owniCrossCorrNormGetSize", "icv_p8_ippiNot_8u_C1R", "_ZN2cv3hal5not8uEPKhjS2_jPhjiiPv", "icv_s8_owns_rFFTfwd_16_scale_64f", "icv_g9_ownippiFilterMedianVert_16s", "icv_p8_ownscrDftInv_Fact2_32f", "icv_h9_ownpi_WarpAffine_L_Repl_8u_C1", "icv_h9_ippiResizeGetSize_L", "icv_s8_ippiWarpAffineCubic_16u_C1R", "icv_s8_ownpis_Min_32f_C3", "icv_h9_owniFilter32f_16u_C4R_g9e9_5", "icv_h9_ownpi_WarpAffine_NN_Const_32f_C3", "Java_org_opencv_imgproc_Imgproc_accumulateSquare_10", "_ZNK2cv5MatOp11elementWiseERKNS_7MatExprE", "_ZN2cv10softdoubleC2Ej", "icv_g9_owniFilter32f_16u_C4R_g9e9_3", "icv_s8_ownSq_32f_C3CR_W7", "icv_s8_ownSS1_98_16u", "icv_g9_owniScaleC_8u32s_C1R_acc", "icv_p8_ownsAdd_16s_PosSfs", "icv_s8_ownscDFTfwd_15_32fc", "icv_s8_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "icv_s8_ippiMean_32f_C3CMR", "icv_p8_ownippiFilterMedianVert_16s_C4R_1x3", "icv_h9_ownCubicKernel2", "icv_w7_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_g9_ownscDftInv_Prime6_64fc", "icv_g9_ownsrDFTfwd_5_scale_32f", "icv_p8_ippiFilterScharrVertMaskBorderGetBufferSize", "_ZN2cv2ml9TrainData11loadFromCSVERKNS_6StringEiiiS4_cc", "_ZN2cv7directx20getTypeFromD3DFORMATEi", "icv_p8_owniFilterMedianBorderInMem_16s_C1R", "icv_h9_owniShiftClipRectZeroTail_32f_C1R", "cvTransform", "icv_s8_ippiFilterBoxBorder_16s_C3R", "icv_w7_ippiFilterSobelHorizBorder_16s_C1R", "Java_org_opencv_video_Video_calcOpticalFlowPyrLK_12", "icv_p8_ownippsCnvrtFin_32f16s_Sfs", "_ZN2cv11demosaicingERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_s8_ownResize1Antialiasing_16s", "icv_w7_ippsSortRadixDescend_8u_I", "icv_g9_ippiFilterLowpassBorder_32f_C1R", "ippicvsFree", "icv_h9_owns_cFft_BlkSplit_32fc", "icv_s8_ippiCopy_16s_C3MR", "icv_g9_ippiTranspose_32f_C1R", "icv_h9_owniFilter32f_16s_C3R_g9e9_6", "icv_w7_ownpis_Indx_16u_C1", "_ZN2cv25createLineSegmentDetectorEiddddddi", "_ZN2cv3dnn19experimental_dnn_v13Net11deleteLayerENS1_9DictValueE", "icv_g9_ippiResizeNearest_32f_C4R_L", "icv_w7_ownippiFilterMedianHoriz_8u_C4R", "icv_s8_ownpi_WarpAffine_L_Const_8u_C3", "icv_h9_ownNormDiff_L2_16u_C3CMR_HSW", "Java_org_opencv_imgproc_Imgproc_phaseCorrelate_10", "icv_s8_ownMinMaxIndx_8u_C1R_W7_2", "icv_s8_ownCopySubpix_16u_C1R_W7", "Java_org_opencv_features2d_Params_set_1maxInertiaRatio_10", "icv_s8_owniGetRectLeftBF_32f_C3R", "icv_p8_ippiCrossCorrNorm_8u32f_C1R", "icv_h9_ownpi_WarpAffine_CR_16u_C1", "_ZN3tbb8internal19allocate_root_proxy8allocateEj", "Java_org_opencv_core_Mat_n_1rowRange", "icv_h9_ownpi_WarpAffine_NN_Const_32f_C1", "icv_h9___svml4ipp_sexp_cout_rare", "_ZNSt15__exception_ptr13exception_ptraSERKS0_", "icv_p8_ippiMirror_8u_C1IR", "Java_org_opencv_core_Core_meanStdDev_11", "icv_p8_ippiMean_StdDev_32f_C3CMR", "Java_org_opencv_imgproc_Imgproc_HoughLinesP_10", "icv_h9_ownscDftInv_Fact13_32fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_V8", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkD0Ev", "icv_g9_ownpi_WarpAffine_L_Const_32f_C1", "icv_w7_ippiResizeLinear_32f_C1R_L", "icv_s8_ownRow4Filter2_8u", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setFlags_10", "icv_w7_ownpi_WarpAffineNearest_16u_C1R", "icv_s8_owns_crRadix4Inv_32f", "icv_s8_owniResizeLanczos_32f_C3R", "icv_h9_innerNormL2_3x3", "icv_h9_owniFilterBilateralR1_InMem_8u_C1R_L", "icv_s8_ippsZero_64f", "icv_w7_ownpi_Rotate180_64_C4R", "_ZN2cv3hal7invSqrtEPKfPfi", "cvFindExtrinsicCameraParams2", "icv_s8_owniCopy8u_C4P4_44_A6", "icv_p8_ippiFilterBoxBorder_32f_C3R", "icv_s8_ownpi_Max_16u_C1R", "icv_s8_ownResize1Lanczos2_8u", "icv_g9_ippiColorToGray_32f_AC4C1R", "icv_h9_piFilterBoxBorder_32f_C1IR_1_v8u8_NA", "Java_org_opencv_imgproc_Imgproc_integral2_10", "icv_h9_ownpi_WarpSimpleLinear_8u_C1R", "icv_w7_ippiMorphSetMode_L", "_ZN2cvmlERKNS_3MatES2_", "icv_w7_ippiSet_16u_C3MR", "icv_w7_ownpi_WarpAffine_L_Repl_8u_C1", "icv_w7_ownpi_dInterVectorClip_C_32f_P", "icv_p8_ownsrDFTfwd_3_scale_64f", "icv_h9_ippiCopy_32f_AC4R", "icv_h9_owniFilter32f_16u_C4R_g9e9_7", "icv_p8_owniScaleC_16s16u_C1R_fst", "icv_p8_ippsCos_64f_A53", "icv_h9_ippiNormDiff_Inf_32f_C1R", "icv_s8_cv_ownippiFilterMax_32f_Msk", "icv_p8_ippsMaxEvery_8u", "icv_w7_ippiMomentInit_64f", "icv_s8_ownSS3_32_8u", "_ZN2cv3ocl15getPlatfomsInfoERSt6vectorINS0_12PlatformInfoESaIS2_EE", "icv_w7_ownpi_WarpAffine_C_Mem_16u_C1", "icv_s8_ippiMorphGradient_32f_C3R_L", "icv_h9_ippiResizeLinear_32f_C4R_L", "cvInitSystem", "icv_w7_ippiAdd_8u32f_C1IR", "icv_w7_ownscDFTinv_14_32fc", "_ZN2cv6repeatERKNS_11_InputArrayEiiRKNS_12_OutputArrayE", "icv_w7_ownCopySubpixIntersect_8u16u_C1R_Sfs_W7", "icv_g9_ippiMorphGradient_32f_C3R_L", "icv_g9_piFilterBoxBorder_32f_C1R_2_v8u8_NA", "icv_w7_ippiCompare_16u_C1R", "icv_s8_piGradient32f", "_ZN2cv3LDA15subspaceProjectERKNS_11_InputArrayES3_S3_", "icv_h9_ownRow1Linear64f", "icv_w7_ownsSub_8u_NegSfs", "icv_h9_ownpi_WarpAffine_L_Const_16u_C1", "icv_p8_ownippiFilterMedianHoriz_16u_BC4R_5x1", "icv_w7_ownsrDFTfwd_10_64f", "icv_s8_ownscDFTfwd_15_scale_64fc", "icv_g9_ippsFFTGetSize_R_32f", "icv_p8_ownscDFTfwd_5_scale_64fc", "icv_g9_owns_cFFTinv_64_scale_64fc", "icv_s8_cv_ownMorphologyGetSize_1u_L", "icv_g9_ippsSinOne", "icv_h9_owniFilter_32f_C3R_g9e9_7", "icv_p8_ownResize3Lanczos2_16u", "icv_g9_owniResizeCubic_8u_C4R", "icv_s8_ippsFFTInv_PermToR_64f", "icv_h9_ownsSub_8u_Bound", "icv_g9_owniFilterBilateralR2_InMem_32f_C3R_L", "icv_p8_ownCopySubpix_16u32f_C1R_W7", "icv_p8_ippiFilterSobelNegVertBorderGetBufferSize", "_ZN2cv3hal3logEPKfPfi", "_ZN3tbb8internal12PrintVersionEv", "Java_org_opencv_videoio_VideoCapture_read_10", "icv_w7_ippiMirror_16u_C4R", "icv_w7_DotProd_64f64fc", "icv_g9_ippiResizeCubic_8u_C1R_L", "icv_w7_ownpi_WarpSimpleNearest_32f_C4R", "Java_org_opencv_video_KalmanFilter_get_1processNoiseCov_10", "own_ipps_dSinCos_SC_LA", "icv_p8_ownsrDFTinv_14_64f", "icv_p8_ownippiFilterMedianHoriz_16s_BC4R", "_ZN2cv6detail20BundleAdjusterReproj12calcJacobianERNS_3MatE", "icv_g9_ownippiFilterMedianHoriz_16u_C3R", "icv_h9_ownNorm_Inf_16u_C3CMR_HSW", "icv_h9_ownRow4Cubic16s", "icv_g9_owniResizeAntialiasing_16u_C1R_L", "Java_org_opencv_core_Core_normalize_10", "ippicviMirror_32s_C3R", "icv_p8_ippiResizeSuper_16u_C1R_L", "ippicviScaleC_32s32f_C1R", "icv_g9_ownpi_GetAffineTransformQ", "ippicviAlphaPremul_8u_AC4R", "icv_s8_ownAddWeighted_8u32f_C1IMR_W7", "icv_g9_owniFilter_32f_C1R_g9e9_3", "icv_p8_ippiSqrDistanceNorm_32f_C1R", "icv_h9_ownFilterRowBorderPipeline_32f_C3R_5x5", "icv_p8_ippiCopyReplicateBorder_32f_C1R_L", "icv_w7_ippiMean_StdDev_16u_C3CMR", "icv_s8_ippsZero_8u", "icv_s8_ownscDFTinv_3_scale_64fc", "icv_w7_ownSumSq_8u_C1MR_W7", "icv_w7_ownippiFilterxBrd32f_8u_C3R", "icv_p8_ippiWarpAffineLinear_8u_C4R", "icv_s8_ownSS3_21_32f", "icv_g9_ownpi_WarpAffineSimpleNearest_16s_C3R", "icv_h9_owns_rFFTinv_32_32f", "icv_p8_owns_cFFT_1_32fc", "icv_s8_ownAFilterRow_8u_AC4R", "icv_w7_ippiScaleC_32s8s_C1R", "icv_g9_ownCalcBorderR1Antialiasing_8u", "icv_h9_owniFlip_8u_C1", "icv_w7_owniCopy8u_C1C4_W7", "icv_p8_ownCopySubpixIntersect_8u_C1R_W7", "icv_w7_ippiCopy_32f_C3R", "icv_s8_ownCalcBorderR3Lanczos3_32f", "icv_g9_ippiMul_32f_C1R", "icv_s8_ownsrDFTinv_3_64f", "icv_g9_ippsSortRadixAscend_16s_I", "icv_g9_ownpi_WarpAffine_C_Const_16u_C3", "_ZN2cv3ocl6DeviceD1Ev", "icv_g9_ippiNorm_L1_32f_C1R", "icv_h9_ippiCopy_32f_C3AC4R", "Java_org_opencv_core_Core_normalize_12", "icv_h9_owns_cFFTfwd_32_64fc", "icv_g9_owniScaleC_64f16u_C1R_acc", "VP8LCheckSignature", "cvSeqPush", "icv_w7_ippiThreshold_GT_16s_C1IR", "_ZNK2cv12_OutputArray7releaseEv", "_ZN2cv13parallel_for_ERKNS_5RangeERKNS_16ParallelLoopBodyEd", "icv_w7_ippiSum_8u_C4R", "icv_w7_owniFlip_8u_C4I_W7", "icv_p8_ownpi_dInterVectorClip_NN_8_C4", "icv_w7_ippiNorm_L2_8u_C3CMR", "ippicviScaleC_8s16s_C1R", "icv_g9_cv_ownippiFilterMin_32f_Col", "icv_h9_owns_cFFTfwd_64_scale_64fc", "_Z24vector_Ptr_Layer_to_ListP7_JNIEnvRSt6vectorIN2cv3PtrINS2_3dnn19experimental_dnn_v15LayerEEESaIS7_EE", "_ZN2cv22cornerEigenValsAndVecsERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_s8_ownippiFilterMedianHoriz_16s_C4R_3x1", "icv_g9_owniResizeAntialiasingLinearInit_L", "icv_p8_ownpi_WarpAffine_C_Repl_16u_C1", "_Z17vector_int_to_MatRSt6vectorIiSaIiEERN2cv3MatE", "Java_org_opencv_photo_Photo_stylization_11", "icv_p8_ownsFFTGetBufSize_C_64fc", "_ZNK3tbb10user_abort4whatEv", "Java_org_opencv_core_Core_phase_10", "icv_s8_ippiFilterSobelNegVertBorder_8u16s_C1R", "icv_h9_ownSS4_a7_16u", "icv_g9_ownRow1Cubic8u", "icv_w7_ownResize4Antialiasing_16u", "icv_h9_ippiResizeLinear_16s_C1R_L", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_V8", "icv_w7_ippiResizeNearest_32f_C3R_L", "icv_s8_owniGetRectBottomBF_32f_C3R", "icv_p8_ippiCopyReplicateBorder_16u_C4R", "icv_w7_ownNormRel_Inf_32f_C1MR_W7", "Java_org_opencv_photo_AlignMTB_setExcludeRange_10", "cvPutText", "_ZN2cv6detail12DpSeamFinder21updateLabelsUsingSeamEiiRKSt6vectorINS_6Point_IiEESaIS4_EEb", "icv_g9_cv_ownippiFilterMin_16u_Row", "icv_s8_ownpi_GetAffineTransformQ", "ippicviConvert_16u8u_C1R", "icv_g9_ippiResizeLinear_16s_C3R_L", "icv_p8_ownpi_WarpAffine_NN_Mem_32f_C1", "_ZN2cv11addWeightedERKNS_11_InputArrayEdS2_ddRKNS_12_OutputArrayEi", "icv_p8_owniCopy_16u_AC4_A6", "Java_org_opencv_features2d_BRISK_create_12", "icv_w7_ownNorm_L2_16u_C3CMR_W7", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_W7", "icv_h9_owniSet_32s_C4MR", "icv_s8_ippiSub_32f_C4R", "icv_s8_owniGetRectComBF_32f_C1R", "icv_h9_owniFilterMedianVert1x5_32f_C1R", "icv_w7_ippiCompare_32f_C1R", "_ZN2cv3hal5mul8uEPKhjS2_jPhjiiPv", "_ZN2cv14fillConvexPolyERKNS_17_InputOutputArrayERKNS_11_InputArrayERKNS_7Scalar_IdEEii", "icv_s8_ownCopySubpix_8u16u_C1R_Sfs_W7", "cvCalcEMD2", "icv_g9_ownpi_WarpAffine_C_Const_64f_C1", "icv_w7_owns_rFFT_1_64f", "_ZN2cv16FileNodeIteratorC2Ev", "icv_h9_ippiMean_8u_C3R", "icv_h9_ippiCopyConstBorder_16u_C4R", "icv_h9_owniFilter32f_16s_C3R_g9e9_0", "icv_s8_ownps_Mul_16u_Sfs", "icv_g9_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_p8_ownBFilterRow32f_16s_C1R", "icv_p8_ownsrDFTinv_3_scale_32f", "icv_w7_ippsExp_64f_A50", "icv_s8_owncalcMinValues_W7", "ippicviFilterScharrHorizMaskBorder_16s_C1R", "icv_g9_ownpi_WarpAffine_C_Mem_64f_C3", "icv_g9_owniResizeLinear_64f_C1R", "icv_w7_owniResizeAntialiasing_16s_C1R_L", "icv_g9_owniFilterSobelVertBorder2_8u16s_C1R", "icv_w7_ippsFFTFwd_RToPack_32f", "_ZN2cv10softdoubleC1Ey", "icv_g9_ippsInvSqrt_64f_A50", "icv_p8_owniCopy_8u_AC4_A6", "icv_s8_owniResizeLanczosInit", "icv_g9_owniFilter32f_16u_C4R_g9e9_7", "icv_h9_ownpi_WarpAffine_C_Const_16u_C4", "icv_g9_ownscDFTinv_13_scale_32fc", "icv_s8_ownscDftInv_Prime6_64fc", "icv_p8_ippiAdd_32f_C1IR", "Java_org_opencv_calib3d_Calib3d_undistortPoints_10", "icv_h9_ownSS4_83_16u", "icv_p8_ownResize3Lanczos3_16u", "icv_h9_ippiNormRel_L2_16u_C1R", "icv_w7_ippiTranspose_16s_C1IR", "icv_s8_ippiTranspose_16u_C4IR", "_ZN2cv3ocl10haveAmdFftEv", "icv_h9_owniResizeCubic_8u_C1R", "icv_w7_ippiResizeGetBufferSize_L", "icv_p8_ownColCubic16s", "icv_w7_ippiCopy_16s_C4P4R", "icv_g9_ippiFilterBilateralBorderGetBufferSize", "Java_org_opencv_features2d_FeatureDetector_write_10", "icv_w7_ownpi_WarpAffine_C_Const_16u_C3", "icv_h9_ippiWarpAffineNearestInit", "icv_w7_ownpi_WarpAffine_C_Const_8u_C4", "icv_w7_owniResizeAntialiasing_32f_C4R_L", "icv_p8_ippiResizeNearest_8u_C3R_L", "icv_g9_ownscDFTinv_7_32fc", "_ZN2cv9videostab15VideoFileSource9nextFrameEv", "icv_g9_ownsrDFTfwd_5_64f", "icv_h9_ippiErode_16u_C1R_L", "icv_h9_owns_cFftInv_Fact4_64fc", "icv_w7_ownpi_WarpAffine_NN_Const_16u_C1", "_ZN2cv17CascadeClassifier4loadERKNS_6StringE", "_ZN2cv9LaplacianERKNS_11_InputArrayERKNS_12_OutputArrayEiiddi", "icv_w7_ippiCopyReplicateBorder_32f_C1R", "icv_p8_ippsConvert_16s8s_Sfs", "icv_g9_ippiHarrisCorner_32f_C1R", "icv_w7_ownpi_WarpAffine_C_Transp_64f_C1", "icv_s8_ownpi_WarpAffine_L_32f_C3", "icv_g9_owniFilter32f_16s_C4R_g9e9_6", "icv_h9_ownippiFilterMedianVert_16s_C4R", "icv_w7_ownNorm_Inf_8u_C3CMR_W7", "icv_s8_ownsInitDftPrimeFact_64f_64f", "icv_g9_ippiResizeLinear_32f_C1R_L", "icv_s8_ownSumSq_32f_C3CR_W7", "icv_p8_ownpi_Rotate90_16_C1R", "icv_w7_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_p8_ownpi_SimpleRotate_16s_C4R", "icv_h9_owniFilter32f_16s_C4R_g9e9_6", "icv_p8_ippiDFTGetSize_C_32fc", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_W7", "ippicviMinIndx_8u_C1R", "_ZN2cv3ogl6BufferC1ENS_5Size_IiEEijb", "icv_w7_ippsCos_64f_A53", "icv_p8_ownscrDftInv_Fact5_64f", "icv_h9_owniCmpLessEq_16u_C1R", "icv_s8_owns_BitRev1_4", "icv_g9_ownscDftFwd_Fact5_64fc", "icv_s8_ownSS3_31_32f", "icv_w7_ippiCopyMirrorBorder_16u_C4R", "icv_w7_ownsInitDftPrimeFact_64f_64f", "icv_s8_ownscDFTfwd_6_32fc", "cvSetErrMode", "icv_p8_owniConvert_16s8s_ccode", "icv_w7_ownscDFTfwd_15_64fc", "icv_s8_ippiScaleC_8s16u_C1R", "icv_w7_ippiCopySubpixIntersect_8u_C1R", "icv_s8_owniResizeNearestInit", "icv_h9_ownpi_Sum_16u_C3R", "icv_g9_ownpi_WarpAffine_C_Repl_64f_C3", "icv_p8_ippiCopyReplicateBorder_8u_C3IR", "ippicviMorphBlackhat_32f_C4R_L", "icv_s8_ownscrDftInv_Fact4_64f", "_ZN2cvltERKNS_3MatES2_", "_ZN2cv4readERKNS_8FileNodeERSt6vectorINS_8KeyPointESaIS4_EE", "icv_p8_ippiGetCentralMoment_64f", "icv_h9_owniFilterBoxBorder_32f_C1IR", "Java_org_opencv_features2d_Params_get_1maxThreshold_10", "icv_h9_owns_rFFTfwd_32_32f", "Java_org_opencv_core_Mat_n_1Mat__DDI", "icv_s8_ippiResizeAntialiasing_8u_C1R_L", "_ZN2cv2ml2EM6createEv", "icv_s8_ownNormDiff_L2_16u_C3CMR_V8", "icv_h9_innerSwapChannels_32s_C4R", "_ZN2cv11RNG_MT19937cvdEv", "icv_s8_ownAbsDiff_32f_C1R_W7_B", "icv_w7_ownpi_ClipQuad", "icv_s8_ippiScaleC_8s8u_C1R", "icv_g9_ownpi_SimpleRotate_16s_C1R", "_ZNK2cv22SimpleBlobDetectorImpl9findBlobsERKNS_11_InputArrayES3_RSt6vectorINS0_6CenterESaIS5_EE", "icv_p8_ownRow1Antialiasing_8u", "icv_w7_ownResize4Linear32f", "icv_w7_ownCopySubpix_32f_C1R_W7_1", "icv_h9_ownscDftFwd_Prime2_64fc", "icv_s8_ippiAddWeighted_32f_C1IR", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_2", "icv_p8_ippiResizeLanczos_16s_C3R_L", "icv_p8_ippiMaxIndx_32f_C1R", "icv_h9_owniTranspose32s_C3R_core2", "icv_h9_owniScaleC_16u8s_C1R_acc", "_ZNK2cv10softdoubleeqERKS0_", "icv_w7_ippiResizeAntialiasing_8u_C1R_L", "icv_p8_ippiMorphTophat_32f_C3R_L", "icv_h9_ownSShorisontal_16s", "_ZNK2cv13HOGDescriptor11getWinSigmaEv", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_12", "icv_h9_ippsSortRadixIndexAscend_32s", "icv_w7_ippiTranspose_32s_C1R", "icv_g9_ownSShorisontal_8u", "icv_p8_ownpi_ClipQuad", "ippicviThreshold_GTVal_16s_C1IR", "icv_w7_ippiAddProduct_8u32f_C1IR", "ippicviTranspose_16s_C3IR", "icv_s8_ownSS3_32_16u", "icv_p8_ownpi_WarpAffineSimpleNearest_64f_C1R", "_ZN2cv6detail11PlaneWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "icv_g9_ippiScaleC_32s8u_C1R", "icv_w7_ippiRGBToHLS_8u_C3R", "icv_w7_owniTranspose_8u_C1R_W7", "icv_s8_ownRow1Filter12_32f", "icv_p8_owniFilter_32f_C3R_v8u8_5NA", "Java_org_opencv_imgproc_Imgproc_approxPolyDP_10", "icv_p8_ippiMorphGradient_16s_C1R_L", "icv_p8_owniGetRectBottom_16s", "_ZN2cv3dnn19experimental_dnn_v111ConcatLayer6createERKNS1_11LayerParamsE", "icv_p8_ownscDftInv_Prime5_64fc", "icv_p8_ownsMaxFind_32f_W7", "icv_s8_owniFilter2_32f_C1R", "icv_w7_ippiWarpAffineLinear_16s_C1R", "icv_h9_ownsAdd_16s_NegSfs", "icv_s8_ownippiFilterMedian_16s_C3R_3x3", "icv_w7_ownCalcBorderR4Linear64f", "icv_h9_ippiScaleC_8s16s_C1R", "icv_h9_ownsGetSizeTabDftInvRec_32f", "icv_p8_ownpi_WarpAffineCubic_64f_C4R", "_ZNK2cv4cuda7HostMem7reshapeEii", "icv_s8_ippiMarkSpeckles_16s_C1IR", "Java_org_opencv_features2d_DescriptorMatcher_match_10", "_ZN2cv3Mat5zerosENS_5Size_IiEEi", "_ZN3tbb8internal17generic_scheduler19spawn_root_and_waitERNS_4taskERPS2_", "_ZN3tbb8internal8governor14auto_terminateEPv", "icv_s8_ownSS1_94_32f", "icv_p8_owniScaleC_64f32f_C1R_acc", "ippicviFilterMedianBorder_16s_C1R", "icv_p8_ownpi_Min_16s_C1R", "icv_s8_ownscrDftFwd_Fact3_64f", "icv_w7_ippiFilterMedian_16u_C1R_3x3_A6", "_ZN2cv9meanShiftERKNS_11_InputArrayERNS_5Rect_IiEENS_12TermCriteriaE", "_ZN3tbb8internal6market20lower_arena_priorityERNS0_5arenaEij", "Java_org_opencv_core_Mat_nPutF", "icv_g9_ippiResizeLanczos_16u_C3R_L", "Java_org_opencv_objdetect_HOGDescriptor_getDefaultPeopleDetector_10", "icv_s8_ownpi_Rotate90_16_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "icv_h9_owniFilterBilateralR2_InMem_32f_C3R", "Java_org_opencv_features2d_Params_get_1filterByCircularity_10", "icv_p8_owns_rFFTinv_16_64f", "icv_p8_owniScaleC_8u8u_C1R_fst", "Java_org_opencv_features2d_AKAZE_setDescriptorType_10", "icv_g9_cv_ownMorphologyGetSizeInitBuf_1u_L", "icv_s8_ippiSet_8u_C1R", "icv_g9_owniFilter32f_8u_C1R_g9e9_6", "icv_s8_owns_cFFTinv_32_scale_64fc", "icv_p8_ownpi_XorC_32s_C3R", "icv_w7_ownpi_WarpAffine_NN_Repl_64f_C1", "icv_p8_ownRow1Filter8_32f", "ippicviDFTGetSize_R_32f", "icv_s8_ownRow3Lanczos3_32f", "icv_h9_ownpi_WarpAffine_NN_Const_64f_C3", "ippicviSub_16u_C1RSfs", "_ZN2cv7directx3ocl36initializeContextFromDirect3DDevice9EP16IDirect3DDevice9", "icv_w7_owniConvert_8u32s_AC4_W7", "cvReleaseKalman", "icv_p8_owniRCPack2DConj_32f_C1IR", "icv_s8_ownpi_WarpSimpleLinear_32f_C4R", "icv_w7_ownSharpenRow_8u_C3", "Java_org_opencv_ml_KNearest_create_10", "icv_p8_ownpi_WarpAffineSimpleCubic_8u_C1R", "_ZN2cv3hal5min8uEPKhjS2_jPhjiiPv", "icv_p8_owniScaleC_32s16s_C1R_fst", "icv_g9_ippiNormRel_L1_8u_C1R", "icv_s8_ownpi_AndC_32s_C1R", "icv_s8_ownSS1_31_8u", "icv_p8_ownResize3Cubic16u", "icv_s8_ippiErode_8u_C1R_L", "icv_h9_owniResizeNearest_16u_C1R", "ippicviSqrIntegral_8u32f64f_C1R", "icv_w7_owns_rFFTinv_32_scale_64f", "icv_h9_ippiCopyReplicateBorder_16s_C1IR", "icv_g9_ownSS1_32_32f", "_ZN2cv12buildPyramidERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_h9_ippiCopy_8u_AC4C3R", "_ZN2cv11FileStorageC2ERKNS_6StringEiS3_", "icv_w7_ippiWarpAffineNearest_16s_C3R", "icv_p8_piGradientSobel32f_c1", "icv_h9_ownpi_WarpAffineSimpleLinear_64f_C1R", "icv_w7_ownippiFilterxBrd32f_16s_C1R", "icv_p8_ownpis_Max_32f_AC4", "_ZN2cv4UMatC2ERKS0_RKNS_5RangeES5_", "Java_org_opencv_photo_AlignMTB_calculateShift_10", "icv_s8_ippiWarpAffineLinear_16s_C3R", "icv_s8_owniCopy32s_C3P3_W7", "icv_s8_ownpi_WarpSimpleGetBufferSize", "icv_g9_ippiCopy_16s_C1MR", "icv_w7_ownLanczosKernel2", "icv_s8_ownWarpSimple1Nearest32f", "_ZN2cv29createGeneralizedHoughBallardEv", "icv_h9_ippiNorm_L2_8u_C3CMR", "icv_g9_ownRow3Cubic16u", "cvReleaseHaarClassifierCascade", "icv_s8_ownpi_WarpSimpleNearest_64f_C4R", "icv_w7_ownsInitTabDftBase_64f", "icv_p8_ippsDCTFwdInit_32f", "icv_s8_ownSS3_41_32f", "icv_s8_ownBuildWarpFilter_64f", "icv_s8_ownscDftFwd_Prime2_32fc", "icv_w7_ippiCopy_8u_C4C1R", "icv_g9_ownColLinear16u", "icv_w7_Moments8uC1R_64f_FAST", "icv_w7_ippiCopyReplicateBorder_8u_C3IR_L", "ippicviFilterBoxBorder_32f_C1R", "icv_s8_ippiCopy_16u_C3C1R", "_ZN2cv8Subdiv2D12initDelaunayENS_5Rect_IiEE", "icv_p8_ippiNormDiff_L2_8u_C1R", "icv_w7_owniConvert_8s32s_W7", "cvMul", "icv_h9_ownSS3_98_8u", "icv_s8_ownsSinOne", "icv_w7_ownNormRel_Inf_8s_C3CMR_W7", "icv_s8_ownResize1Antialiasing_32f", "icv_h9_ownSS3_53_8u", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_2", "icv_s8_ownSS3_53_16s", "icv_w7_ownpi_dInterVectorClip_C_8u_P3", "icv_s8_ownSS1_83_16s", "icv_w7_ownWarpSimple4Nearest16u", "icv_p8_ippiWarpAffineNearest_16u_C1R", "cvAnd", "icv_p8_ownpi_NormInfDiff_32f_C1R", "icv_p8_ippsSortRadixIndexDescend_32f", "Java_org_opencv_imgproc_Imgproc_isContourConvex_10", "icv_g9_ownpi_ClipQuad", "_ZN2cv6detail12AffineWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "icv_p8_ownpis_Min_16s_C3", "icv_p8_ownCopySubpix_16u32f_C1R_new_V8", "icv_g9_owniShiftClipRectZeroTail_8u32f_C1R", "_ZN2cv5flann5IndexC2Ev", "icv_p8_ippiCopyMirrorBorder_32f_C1R_L", "icv_s8_ownscDftInv_Prime11_32fc", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getTermCriteria_10", "icv_s8_owniResizeGetSrcRoi", "ippicviFilterBoxBorder_8u_C3R", "icv_h9_ippiCopyMirrorBorder_16u_C4R", "icv_p8_ippsFFTInit_R_32f", "Java_org_opencv_imgproc_Subdiv2D_Subdiv2D_10", "_ZN2cv5MutexC1ERKS0_", "Java_org_opencv_calib3d_StereoSGBM_setUniquenessRatio_10", "_ZNK2cv3Mat7reshapeEiRKSt6vectorIiSaIiEE", "icv_p8_owniResizeLinear_16u_C3R", "icv_p8_ownpis_Max_8u_AC4", "cvGetCaptureDomain", "icv_w7_ownpi_WarpAffineSimpleLinear_16u_C3R", "icv_p8_ippiMirror_32f_C4IR", "Java_org_opencv_features2d_DescriptorMatcher_train_10", "icv_s8_ippiDFTFwd_RToPack_32f_C1R", "icv_g9_ippiMirror_32f_C1R", "icv_p8_ownCopySubpixIntersect_8u32f_C1R_W7", "icv_g9_ownResize3Linear16s", "icv_p8_ownpi_ClipRight", "Java_org_opencv_features2d_AKAZE_setNOctaveLayers_10", "icv_p8_ownCalcBorderR1Antialiasing_16s", "icv_g9_ippsDFTInv_CToC_64fc", "icv_w7_ippiConvert_8s8u_C1Rs", "_ZN2cv7pyrDownERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_5Size_IiEEi", "icv_g9_ownscDFTinv_13_64fc", "icv_w7_ownResize1Antialiasing_16u", "icv_h9_owniScaleC_8s8s_C1R_acc", "icv_p8_ownGetPxl_8u", "icv_s8_ownsrDFTinv_12_scale_64f", "icv_g9_ippiDilateGetSpecSize_L", "icv_ipp_has_cpuid", "icv_s8_ownpi_WarpAffine_C_Mem_16u_C4", "icv_g9_owniResizeNearestInit", "icv_p8_ownpi_WarpSimpleLinear_16u_C4R", "icv_s8_ownpi_WarpSimpleNearest_8u_C4R", "icv_p8_ownAdd_8u32f_C1IR_P8", "icv_h9_ippiTranspose_16s_C4R", "icv_w7_ippiScaleC_32f_C1R", "icv_p8_ippiNorm_L1_32f_C1R", "icv_w7_ippiNormRel_L1_8u_C1MR", "icv_g9_owniFilter32f_16s_C3R_g9e9_0", "icv_w7_ownHipass5x5Col_16s_C3", "ippicviWarpAffineLinearInit", "icv_w7_ippiThreshold_LTVal_8u_C1IR", "icv_g9_ippiConvert_32s32f_C1R", "icv_s8_ownpi_And_32s_AC4R", "icv_s8_ippsSqrtOne", "_ZN2cv3ocl6DeviceaSERKS1_", "_ZN2cv9videostab9getMotionEiiRKSt6vectorINS_3MatESaIS2_EE", "icv_p8_ippiCopyReplicateBorder_8u_C3IR_L", "icv_p8_ownscDftInv_Fact7_32fc", "icv_h9_owns_cFFT_2_32fc", "icv_h9_hswRGBToGray_32f_C3C1R", "icv_h9_ippiErode_8u_C3R_L", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_W7", "Java_org_opencv_features2d_BFMatcher_delete", "Java_org_opencv_imgproc_Subdiv2D_edgeDst_11", "icv_s8_ownResize1Cubic8u", "icv_h9_owniThreshold_16s_C1R", "icv_h9_owns_rFFTfwd_8_64f", "icv_h9_ownsMul_16u_NegSfs", "icv_w7_ownpi_dInterVector_L_8u_C4", "cvGetImage", "icv_g9_ippiCrossCorrNorm_32f_C1R", "icv_h9_owniNormLevel_8u32f_C1R", "icv_p8_owniConvert_32s8u_C1R", "icv_s8_ownLaplCol5x5_32f_C4", "Java_org_opencv_core_Core_insertChannel_10", "ippicviResizeSuper_8u_C4R_L", "icv_h9_owniFilter_32f_C4R_g9e9_1", "icv_w7_ippiAdd_32f_C1IMR", "icv_p8_owns_cRadix4Inv_64fc", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_V8", "icv_w7_ownsInitTabDftDir_64f", "_ZN2cv15calcCovarMatrixERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_17_InputOutputArrayEii", "_ZN2cv8CholeskyEPdjiS0_ji", "icv_s8_ownpi_WarpAffineSimpleNearest_32f_C4R", "icv_s8_ownRow1Antialiasing_16u", "_ZN2cv11recoverPoseERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_dRKNS_17_InputOutputArrayES5_", "icv_g9_ownSS1_65_16u", "icv_h9_ippiCompare_32f_C1R", "Java_org_opencv_features2d_FastFeatureDetector_getThreshold_10", "icv_w7_ownDistanceTransform_3x3_8u_C1R_B", "icv_p8_owns_rFFTfwd_16_scale_32f", "icv_s8_ippiColorToGray_32f_C3C1R", "icv_p8_ownpi_Histogram_16u_C4R", "icv_g9_owniCopy_16s_P3C3R", "icv_g9_ownSS4_98_16u", "icv_s8_ownpi_HistogramEven_16s_C1R", "icv_w7_ownpi_WarpAffineNearest_16u_C4R", "icv_s8_ownpi_WarpAffine_NN_Mem_16s_C1", "icv_w7_ippiFilterBoxBorder_16u_C3R", "icv_g9_ippiNormDiff_L2_32f_C1R", "ippicviResizeAntialiasing_16s_C1R_L", "Java_org_opencv_core_Core_solvePoly_11", "Java_org_opencv_videoio_VideoWriter_write_10", "_ZN2cv7fisheye13projectPointsERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_7Affine3IdEES3_S3_dS6_", "icv_h9_ownpi_WarpAffineSimpleCubic_32f_C4R", "icv_w7_ippiConvert_32s8s_C1R", "_ZN2cv5utils5trace7details6Region17LocationExtraDataC2ERKNS3_21LocationStaticStorageE", "_ZN2cv17DescriptorMatcher5clearEv", "icv_h9_ippiMinIndx_32f_C1R", "icv_s8_ownpi_WarpAffine_L_Mem_16u_C3", "iwiMaskToSize", "icv_w7_ownsInitTabDftFwdRec_32f", "_ZN2cv11writeScalarERNS_11FileStorageEf", "icv_g9_ippiWarpAffineCubic_8u_C1R", "icv_p8_owns_rFFT_2_32f", "icv_w7_ownColAA_32f", "icv_p8_ippiNormDiff_L2_8u_C3CMR", "icv_w7_ippiCopyMirrorBorder_16u_C3R", "_ZNK2cv3ocl6Device12halfFPConfigEv", "icv_w7_ownsrDftInv_Conv_32f", "icv_h9_ownpi_WarpAffine_C_Mem_16u_C3", "icv_s8_owniCopy16sC3Mas", "icv_h9_ownscDftInv_Prime5_64fc", "icv_g9_ownippiFilterMedianVert_8u_C4R", "icv_p8_ownSS4_41_16s", "icv_g9_ownResize3Lanczos2_16s", "icv_w7_ippiAddSquare_16u32f_C1IMR", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_p8_ownpi_WarpSimpleLinear_32f_C3R", "icv_w7_ownpi_CountInRange_8u_C3R", "icv_g9_ownRow1Filter8_32f", "icv_s8_ownscDFTinv_15_32fc", "icv_s8_ownRow4Antialiasing_16s", "icv_h9_ownpi_WarpAffineSimpleLinear_32f_C1R", "icv_h9_ownpi_WarpAffineNearest_32f_C4R", "icv_h9_ownpi_WarpSimpleLinearInit", "icv_p8_ippiNorm_L2_32f_C3CMR", "icv_s8_ippiGetNormalizedCentralMoment_64f", "icv_s8_ownippiFilterxBrd32f_8u_C3R", "Java_org_opencv_core_Core_normalize_13", "icv_s8_ownpi_XorC_16u_C1R", "_ZN2cv5mergeEPKNS_3MatEjRKNS_12_OutputArrayE", "icv_s8_owns_initDctInv_Fft_32f", "icv_s8_ippiCopy_8u_C3R", "icv_w7_ownAbsDiff_32f_C1R_W7_B", "icv_h9_ownpi_WarpAffineSimpleNearest_16s_C1R", "icv_s8_ownpi_CountInRange_8u_C1R", "icv_w7_owns_rFFTinv_16_scale_32f", "icv_h9_ownRow1Filter14_8u", "icv_p8_ownsAtan2One", "icv_h9_ippiFilterBilateralBorderInit_L", "icv_p8_ownpi_WarpAffine_L_Const_16s_C1", "icv_h9_ownSS1_21_8u", "icv_g9_owniResizeLinear_16s_C1R", "icv_h9_ownpi_GetRotateTransform", "icv_p8_ippiNorm_L1_16u_C1MR", "icv_p8_ippiMul_16u_C1RSfs", "ippicviResizeNearest_16u_C4R_L", "_ZN10__cxxabiv117__class_type_infoD2Ev", "_ZN2cv4gemmERKNS_11_InputArrayES2_dS2_dRKNS_12_OutputArrayEi", "icv_g9_ippiWarpAffineNearestInit", "icv_g9_ippiThreshold_LTVal_8u_C1R", "icv_s8_piGradientVectorParams", "icv_p8_ownSS1_43_8u", "icv_g9_ippiCopyMirrorBorder_8u_C1R_L", "icv_g9_ippiAddWeighted_16u32f_C1IR", "icv_h9_ownippiFilterMedian_16s_C3R", "icv_g9_ippiFilterSobelVertSecondBorder_32f_C1R", "icv_h9_ownNormDiff_L2_8u_C3CMR_HSW", "icv_h9_innerCommonLoopW3_32f_C3R", "icv_h9_owns_cFFTfwd_32_scale_32fc", "icv_p8_ownpi_WarpSimpleLinear_32f_C1R", "icv_h9_ownCalcBorderR4Linear64f", "_ZN2cv11RNG_MT19937C2Ev", "_ZN2cv6detail12DisjointSets13findSetByElemEi", "icv_w7_ownHipass5x5Col_32f_C3", "icv_w7_ownpi_WarpAffine_C_Transp_64f_C4", "_ZN2cv4UMatC2ERKS0_RKNS_5Rect_IiEE", "icv_s8_ownpi_dInterVectorClip_L_16u_AC4", "icv_s8_ownpi_WarpAffineSimpleNearest_64f_C1R", "icv_w7_ownscDFTfwd_3_32fc", "icv_w7_ownippiFilterMedianSqr_16u_C3R", "Java_org_opencv_calib3d_StereoBM_create_11", "icv_s8_piFilterBoxBorder_32f_C1R_px", "Java_org_opencv_features2d_AKAZE_getNOctaveLayers_10", "_ZNK2cv3ocl6Device22globalMemCacheLineSizeEv", "icv_g9_ownscDftFwd_Prime5_64fc", "icv_s8_owniConvert_16s32f_W7", "icv_h9_owncvMinMaxIndx_16u_C1R_H9L9", "icv_s8_ownpi_Rotate90_B_16_C1R", "icv_p8_owniResizeLanczosInit", "Java_org_opencv_photo_MergeMertens_setExposureWeight_10", "icv_w7_ownscDFTinv_7_64fc", "icv_s8_ownippiFilterMedian_16u_C3R_5x5", "Java_org_opencv_video_BackgroundSubtractorMOG2_getComplexityReductionThreshold_10", "icv_h9_ippiSet_32f_C4MR", "icv_p8_ippiCopy_8u_C4R", "_ZN10__cxxabiv115__forced_unwindD2Ev", "icv_h9_ownCalcBorderR3Linear8u", "icv_h9_ippiTranspose_32s_C4IR", "icv_w7_owniCopy_8u_C1_W7", "icv_p8_ippiFilterBorderInit_16s", "icv_g9_owns_cFFTfwd_4_scale_32fc", "icv_g9_ownSS3_73_16u", "icv_w7_ownpi_Min_16s_C4R", "icv_h9_owngetSizeBufferOfBorders", "cvGetSubRect", "icv_g9_ownpi_WarpAffine_NN_Repl_8u_C3", "_ZN2cv8superres15SuperResolution14collectGarbageEv", "_ZN2cv18getMouseWheelDeltaEi", "_Z20Mat_to_vector_Rect2dRN2cv3MatERSt6vectorINS_5Rect_IdEESaIS4_EE", "_ZN2cv7directx22getTypeFromDXGI_FORMATEi", "icv_g9_ippiFilterBorder_16s_C3R", "icv_g9_owniFilter_32f_C3R_g9e9_6", "_ZN2cv3hal5DFT1D6createEiiiiPb", "icv_s8_ownSS3_73_16u", "icv_s8_owniFlip_8u_C4", "icv_w7_owns_BitRev2_C", "icv_s8_owniFilter_32f_C4R_v8u8_7", "icv_h9_ownscDFTinv_13_32fc", "icv_p8_ippiConvert_8u16u_C1R", "Java_org_opencv_ml_KNearest_delete", "icv_s8_ownSS1vertical_16u", "icv_p8_ownpi_WarpPC", "_ZN3tbb8internal17generic_scheduler12attach_arenaEPNS0_5arenaEjb", "icv_n0_own_ipps_dSinCos_S9EPnnn", "_ZN2cv3ogl6Buffer11unmapDeviceERNS_4cuda6StreamE", "_ZN2cv3dnn19experimental_dnn_v13Net7forwardERSt6vectorINS_3MatESaIS4_EERKS3_INS_6StringESaIS8_EE", "ownMaskIsFeatures", "__deregister_frame_info", "icv_h9_ippiGradientVectorScharr_32f_C1R", "Java_org_opencv_video_SparseOpticalFlow_calc_11", "icv_g9_ownscDFTfwd_7_scale_32fc", "icv_h9_owniMirrorHorizontal_32s_C1", "ippicviNorm_L1_16u_C1MR", "icv_h9_myRGBToHLS_8u_C3R", "icv_p8_cv_ownippiFilterMin_16s_Row", "icv_g9_owniFilterBilateralCom_InMem_8u_C1R", "icv_w7_owniConvert_8s32s_AC4_W7", "icv_h9_ownsrDFTinv_10_64f", "icv_h9_owniSet_16s_C3R", "Java_org_opencv_core_Core_randShuffle_10", "icv_p8_ippiResizeLinear_8u_C3R_L", "icv_p8_ownpi_WarpAffine_C_Transp_8u_C1", "icv_g9_ownCalcBorderR1Lanczos2_32f", "icv_p8_ippiMean_16u_C1R", "icv_h9_ownscDFTinv_7_32fc", "icv_h9_ippiTranspose_16u_C3IR", "icv_w7_owns_initTabBitRevLarge", "icv_p8_ippiXor_8u_C1R", "icv_h9_ownpi_SimpleRotate_32f_C3R", "icv_w7_ownpi_getWarpSimpleRect_Mem", "cvGetWindowName", "icv_g9_ippiCopyMirrorBorder_8u_C3R", "icv_s8_ownpi_AndC_8u_C1R", "_ZNK2cv14DefaultDeleterI13CvVideoWriterEclEPS1_", "icv_p8_ownResize3Linear64f", "icv_g9_ownpi_WarpSimpleNearest_16s_C3R", "icv_g9_cv_ownFilterMxMnCalcBuf", "icv_h9_ippiResizeAntialiasing_8u_C1R_L", "_ZN2cv3ocl6DeviceC2Ev", "_ZN2cv4readERKNS_8FileNodeERSsRKSs", "icv_s8_ownFilter_32f_C4R_v8u8", "icv_w7_ownpi_MinMax_8u_C3R", "icv_h9_ownsIppsConvert_16s8s_Sfs", "icv_g9_setIndexCR", "icv_w7_ippiResizeAntialiasing_32f_C4R_L", "cvCalcOpticalFlowFarneback", "icv_p8_owns_initTabTwdRealRec_64f", "icv_p8_ippiTranspose_32f_C3R", "icv_p8_ippiResizeLanczos_16u_C3R_L", "icv_p8_ownpi_Rotate90_B_16_C1R", "icv_p8_owns_BitRev1_S", "icv_p8_ownBFilterRow32f_8u_C3R", "icv_s8_ippiDilate_8u_C3R_L", "iwGetThreadsNum", "icv_p8_ippiMinMax_8u_C1R", "icv_h9_ownSS1_53_16s", "icv_g9_piGradientSobel32f_c1", "icv_s8_ownSS3_54_32f", "icv_s8_ownpi_MinMax_16s_C1R", "icv_h9_ippiFilterMedianBorder_16s_C4R", "_ZN2cv3ocl7Image2D17isFormatSupportedEiib", "icv_w7_ippiNorm_L1_32f_C1R", "icv_g9_owniConvert_16u8s_ccode", "icv_w7_owniResizeLanczos_16u_C1R", "icv_p8_ippiWarpAffineCubic_8u_C3R", "_ZN2cv8superres22createOptFlow_DualTVL1Ev", "icv_g9_owniCopyMirrorBorder_16s_C4R", "icv_s8_owniResizeLanczos_16s_C3R", "icv_w7_owns_cFFTfwd_8_64fc", "icv_g9_owns_cFFTinv_4_32fc", "icv_p8_ownRow1Cubic8u", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_W7", "icv_h9_piGradientSobel32f_3x3_row_c1", "icv_p8_owns_getSizeDct_Fft_32f", "icv_g9_ippi_AlphaPremul_AC4S_8u", "icv_g9_ippiDilate_16s_C1R_L", "ippicviFilterMedianBorder_16u_C4R", "_ZN3tbb8internal17generic_scheduler13allocate_taskEjPNS_4taskEPNS_18task_group_contextE", "icv_g9_ownSS1_32_8u", "_ZNK2cv3ocl6Device11addressBitsEv", "icv_g9_owniScaleC_16u64f_C1R_acc", "icv_s8_ownNormDiff_Inf_32f_C3CMR_W7", "icv_p8_ownscDFTfwd_6_32fc", "_ZN2cv3LDAD2Ev", "icv_s8_ownsrDFTinv_13_64f", "icv_h9_ippiFilterBorderInit_32f", "icv_w7_ownscrDftInv_Prime2_32f", "Java_org_opencv_core_Mat_n_1Mat__JII", "_ZNK2cv11_InputArray12getMatVectorERSt6vectorINS_3MatESaIS2_EE", "icv_s8_ippiCopyMirrorBorder_32f_C4R", "icv_g9_ownpi_WarpAffine_C_Transp_64f_C3", "icv_p8_cv_ownMorphologyGetSizeInitBuf_1u_L", "icv_h9_ownsInitTabDftDir_32f", "icv_g9_owniTranspose16u_C1R_core2", "icv_s8_ownippiThreshold_LV_16s_C4", "icv_p8_ippiCopyReplicateBorder_32s_C4IR", "icv_s8_ownCopySubpixIntersect_32f_C1R_W7", "icv_g9_ownCalcBorderR4Cubic32f", "icv_h9_ippsZero_64f", "_ZNK2cv17DescriptorMatcher20DescriptorCollection14getDescriptorsEv", "icv_p8_ownpi_Min_16s_AC4R", "icv_w7_ippiResizeCubic_32f_C4R_L", "icv_s8_ippiFilterMedianBorder_16u_C4R", "ippicviCopy_32f_P4C4R", "icv_w7_ownpi_WarpAffine_L_8u_C4", "icv_g9_owniResizeSuper_16u_C4R", "icv_h9_ippiCopyReplicateBorder_32s_C4IR", "Java_org_opencv_photo_Photo_createTonemapMantiuk_10", "icv_p8_ownsrDFTinv_13_scale_32f", "icv_s8_ownpi_Rotate90_32_C3R", "icv_h9_ippiCopy_32f_C1R_L", "icv_w7_ownCopySubpix_8u_C1R_W7", "icv_p8_ippiMorphTophat_32f_C1R_L", "_ZN3tbb16spin_rw_mutex_v318internal_downgradeEv", "Java_org_opencv_ml_ANN_1MLP_setBackpropWeightScale_10", "ippicviResizeCubic_8u_C4R_L", "_ZNK2cv4cuda10DeviceInfo16canMapHostMemoryEv", "icv_w7_ippiSum_16s_C1R", "icv_g9_ownsrDFTfwd_3_scale_32f", "icv_s8_ippiMinEigenValGetBufferSize_32f_C1R", "icv_s8_owniConvert_8u8s_ccode", "_ZN2cv18accumulateWeightedERKNS_11_InputArrayERKNS_17_InputOutputArrayEdS2_", "icv_g9_ownRow4Lanczos3_16u", "icv_g9_ownSS3_43_8u", "_ZN2cv3ocl28predictOptimalVectorWidthMaxERKNS_11_InputArrayES3_S3_S3_S3_S3_S3_S3_S3_", "icv_s8_ippiCopyConstBorder_16u_C3R", "icv_w7_ippiWarpAffineLinear_16s_C3R", "icv_s8_ippiSet_32f_C4MR", "icv_h9_ownSS4_41_32f", "icv_g9_ippiNorm_L1_32f_C1MR", "Java_org_opencv_ml_StatModel_isTrained_10", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_W7", "icv_w7_owniCopy_8u_C3M_W7", "icv_s8_ownsrDFTinv_5_scale_32f", "ippicviNorm_L1_8u_C1R", "_ZN2cv4cuda5Event6recordERNS0_6StreamE", "icv_h9_ownpi_Rotate90_B_16_C1R", "icv_s8_ippiSum_8u_C4R", "ippicviFilterBorder_16u_C3R", "Java_org_opencv_imgproc_Imgproc_Sobel_12", "icv_w7_ownHipass5x5Col_32f_C1", "Java_org_opencv_photo_Photo_createTonemapReinhard_11", "icv_s8_ownNorm_Inf_8s_C1MR_V8", "icv_h9_ownSS1_32_16s", "icv_p8_ippiConvert_32f16s_C1R", "icv_p8_owniGetRectComBF_32f_C3R", "icv_w7_ippiMirror_32f_C3R", "icv_g9_ownscDftReord_32fc", "icv_s8_ownResize1Nearest16u", "icv_s8_owniFilterSobelVertBorder2_16s_C1R", "icv_h9_ownps_Sub_16u_Sfs", "icv_w7_owns_BitRev1_4", "icv_g9_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_h9_owns_rFFT_2_scale_64f", "icv_g9_ownSS4_21_16u", "icv_h9_ownResize1Lanczos3_16s", "_ZN3tbb8internal17is_malloc_used_v3Ev", "icv_p8_ownippiFilterMedianSqr_8u_C4R", "_ZNK2cv3ocl6Device15maxConstantArgsEv", "_ZN3tbb8internal5arena10free_arenaEv", "ippicviMorphBlackhat_8u_C3R_L", "icv_h9_ownippsSqrt16_32f", "_Z15MatShape_to_MatRSt6vectorIiSaIiEERN2cv3MatE", "icv_h9_ownSS4_72_16s", "icv_p8_ownippiDotProd_32f64f_C1R", "icv_w7_ownsrDFTfwd_13_scale_64f", "icv_s8_ippiMorphBlackhat_8u_C4R_L", "icv_p8_ownscDftFwd_Prime6_32fc", "_ZN2cv3Mat5zerosEiii", "icv_g9_ippiDCTInvInit_32f", "_ZN2cv8va_intel18convertToVASurfaceEPvRKNS_11_InputArrayEjNS_5Size_IiEE", "icv_p8_ownpi_OrC_16u_C1R", "icv_s8_ownpi_WarpAffineLinear_32f_C4R", "icv_s8_ippiSum_16s_C1R", "icv_s8_ownHipass5x5Col_16s_C4", "ippicviSwapChannels_32f_C4C3R", "icv_g9_calcMinValues", "Java_org_opencv_imgproc_Imgproc_intersectConvexConvex_10", "icv_p8_ownippiFilterMax_32f_Col", "ippicviWarpAffineNearest_32f_C4R", "icv_h9_ippiSwapChannels_8u_C4R", "icv_p8_ownscrDftInv_Prime2_32f", "Java_org_opencv_features2d_AgastFeatureDetector_setType_10", "icv_s8_ownscDftFwd_Prime6_64fc", "icv_s8_ippiAddSquare_8u32f_C1IR", "icv_p8_ownsrDFTinv_7_32f", "icv_h9_ownsGetSizeDftConv_64f", "icv_h9_ownSS1_65_32f", "icv_s8_ippsConvert_32f8u_Sfs", "icv_s8_ippiMorphGradient_8u_C1R_L", "Java_org_opencv_ml_DTrees_getMaxCategories_10", "icv_w7_ippiMinEigenValGetBufferSize_32f_C1R", "icv_p8_ownippiFilterMedianVert_16s_1x5", "icv_g9_ownFilterBoxBorder_8u_C1R", "Java_org_opencv_core_Core_divide_14", "icv_p8_ippiAddProduct_8u32f_C1IMR", "icv_s8_ippiScaleC_8u32f_C1R", "icv_g9_ippiSet_16s_C1MR", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "ippicviResizeLinear_32f_C4R_L", "icv_h9_ownpi_WarpAffineSimpleNearest_16u_C1R", "icv_h9_ippiNormDiff_L2_32f_C1R", "icv_p8_ownpi_WarpAffineSimpleNearest_16s_C1R", "icv_h9_owniFilter32f_16u_C1R_g9e9_6", "icv_h9_ippiHistogramInit", "ippicviResizeCubicInit_L", "icv_h9_owniResizeAntialiasing_8u_C1R_L", "icv_p8_ippiSet_16u_C3R", "icv_s8_ownpi_XorC_8u_AC4R", "icv_p8_ownRow3Cubic8u", "_ZN2cv32fastNlMeansDenoisingColoredMultiERKNS_11_InputArrayERKNS_12_OutputArrayEiiffii", "icv_g9_ownSS1_53_16s", "icv_h9_ippiFilterBorder_16s_C3R", "icv_w7_ippiResizeNearest_8u_C1R_L", "icv_h9_ownRow1Antialiasing_16s", "cvGEMM", "Java_org_opencv_calib3d_Calib3d_estimateAffinePartial2D_10", "icv_w7_ownNorm_L1_8u_C1MR_W7", "icv_g9_ippiFilterSobelNegVertBorder_8u16s_C1R", "icv_p8_ownNormRel_L1_16u_C1MR_W7", "_ZN2cv25getDefaultNewCameraMatrixERKNS_11_InputArrayENS_5Size_IiEEb", "icv_s8_ippiCompare_8u_C1R", "icv_g9_ippiWarpAffineNearest_64f_C3R", "icv_h9_ownscDFTfwd_5_64fc", "icv_w7_ownscrDftInv_Fact4_32f", "_ZN2cv17DescriptorMatcher8knnMatchERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "Java_org_opencv_features2d_MSER_detectRegions_10", "icv_g9_ippiCopyReplicateBorder_32s_C1R_L", "_ZN2cv5flann5IndexD0Ev", "icv_w7_ippiDilate_16s_C1R_L", "icv_w7_ownAddWeighted_16u32f_C1IMR_W7", "icv_s8_ownRow1Filter10_16s", "icv_s8_ownpi_dInterVectorClip_C_8u_C3", "icv_p8_owniCopy_8u_C3C1R", "icv_h9_ippiCopyMirrorBorder_16s_C1R", "icv_s8_ownsFloorOneF", "icv_g9_ownSS1_16s", "cvConvertScaleAbs", "icv_h9_ippiErode_32f_C4R_L", "icv_s8_ownippiFilterMedian_16s_BC4R_3x3", "icv_g9_owniScaleC_16s8u_C1R_fst", "icv_w7_ippiCopy_32f_AC4R", "icv_s8_ippiMean_StdDev_32f_C1R", "icv_p8_ownCanny_32f8u_C1R_Mag_W7", "icv_s8_owniTranspose_8u_C3R", "icv_p8_ownRow4Lanczos3_8u", "Java_org_opencv_imgproc_Imgproc_n_1getTextSize", "icv_w7_ownsrDFTinv_15_scale_32f", "icv_h9_cv_ownippiFilterMax_16u_Row", "icv_p8_owniConvert_32f8u_ccode", "_ZN2cv3hal15cvtGraytoBGR5x5EPKhjPhjiii", "icv_p8_ownResize3Nearest32f", "icv_g9_ownpi_SimpleRotate_32f_C4R", "icv_p8_owniSwap_8u_C3C4R", "icv_h9_owniSwapChannels_8u_C3R", "cvSetOpenGlDrawCallback", "icv_h9_owns_rFFTfwd_16_scale_32f", "icv_p8_ownWarpSimple4Nearest8u", "icv_h9_ownpi_dInterVectorClip_C_16u_C4", "icv_p8_ownpi_WarpAffine_NN_16_AC4", "icv_w7_ownRow3Lanczos3_32f", "Java_org_opencv_imgproc_Imgproc_connectedComponents_10", "ippicviResizeCubic_16s_C3R_L", "icv_g9_ownscDft_Conv_32fc", "icv_h9_owniFilter32f_16u_C3R_g9e9_8", "icv_p8_ownResize1Lanczos3_16s", "icv_g9_ownResize1Cubic8u", "icv_g9_owns_sDctFwd_PostMul_32f", "_ZN3tbb18task_group_context16copy_fp_settingsERKS0_", "icv_s8_ownSS3vertical_8u", "_ZN2cv23getPerspectiveTransformEPKNS_6Point_IfEES3_", "icv_p8_ippiScaleC_16u8s_C1R", "icv_w7_ownNormRel_L2_32f_C1MR_W7", "icv_p8_ownApplyHaarClassifier_32f_C1R_PRN", "icv_g9_ownSS1_8u", "icv_w7_ownscDftInv_Fact4_32fc", "icv_h9_ippiDilate_8u_C1R_L", "icv_g9_owniScaleC_8u32f_C1R_acc", "Java_org_opencv_objdetect_Objdetect_groupRectangles_10", "ippicviResizeLinear_16s_C1R_L", "icv_h9_ippsDFTInv_PackToR_64f", "icv_h9_owniCopy_32s_C3MR", "icv_p8_ippiSum_16u_C1R", "icv_g9_ownscDFTfwd_14_scale_32fc", "icv_s8_ownSS1_53_16u", "icv_w7_ippsExpOneF", "icv_h9_ownpi_WarpAffine_C_Const_16s_C1", "icv_g9_ippiMorphGetBufferSize_L", "icv_g9_ownSSvsum_16u", "icv_h9_ippsSortRadixIndexAscend_8u", "icv_w7_ippiMinMax_8u_C1R", "icv_h9_ownpi_WarpSimpleCubic_16s_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_V8", "icv_p8_ownpi_dInterVector_NN_8_C1", "icv_w7_ippiNormDiff_L2_32f_C1R", "icv_w7_ownpi_WarpAffineNearest_16u_C3R", "icv_p8_ownNormRel_Inf_8u_C1MR_W7", "icv_g9_ownsrDFTinv_6_scale_64f", "icv_h9_ownSS1_73_32f", "icv_g9_ippiFilterSobelNegVertBorder_32f_C1R", "icv_p8_ownpi_Rotate90_64_C3R", "icv_p8_ownscrDftFwd_Prime4_64f", "_ZN2cv2ml9TrainData6createERKNS_11_InputArrayEiS4_S4_S4_S4_S4_", "icv_p8_ippiSet_8u_C1R", "Java_org_opencv_imgproc_Imgproc_blur_11", "icv_p8_ownpi_WarpAffine_C_Transp_16s_C3", "_ZN2cv3dnn19experimental_dnn_v15Layer10initHalideERKSt6vectorINS_3PtrINS1_14BackendWrapperEEESaIS6_EE", "icv_g9_ippiMean_StdDev_32f_C3CR", "icv_w7_ownippiThreshold_V_16s_AC4", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_V8", "icv_g9_ippiWarpAffineLinear_64f_C1R", "cvSobel", "icv_w7_BUFSIZE_FUNC", "icv_p8_ownsrDFTinv_5_scale_32f", "icv_s8_ownpi_dInterPoint_C_Pixel_32f", "Java_org_opencv_core_Core_bitwise_1and_10", "icv_s8_owns_crFft_BlkMerge_64f", "_ZN2cv15setUseOptimizedEb", "icv_s8_ownColFilter2_8u", "icv_w7_ippsMul_32fc", "_ZN2cv12KalmanFilterC1Eiiii", "icv_p8_ippiMinMax_32f_C1R", "Java_org_opencv_photo_Photo_createAlignMTB_11", "icv_p8_ownpi_WarpAffine_L_Repl_8u_C4", "_ZN2cv3ocl7ContextC1Ei", "icv_n0_own_ipps_sLn_W7LAynn", "icv_w7_ownpi_WarpAffine_NN_Mem_16u_C4", "icv_g9_ownpi_WarpAffineLinear_32f_C1R", "_ZN2cv12getTickCountEv", "icv_w7_ippiCopyMirrorBorder_32s_C3R", "ippicvsSortRadixAscend_32s_I", "icv_p8_ownRow1Cubic16u", "_ZN2cv8Stitcher15composePanoramaERKNS_12_OutputArrayE", "Java_org_opencv_objdetect_CascadeClassifier_convert_10", "icv_w7_owns_BitRev1_D", "icv_g9_cv_ownippiFilterMin_32f_Row", "icv_p8_owniScaleC_32s8u_C1R_acc", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_W7", "icv_g9_ownpi_WarpAffineNearest_16u_C4R", "icv_h9_ownSS3_41_8u", "_ZN2cv9normalizeERKNS_9SparseMatERS0_di", "icv_g9_owniShiftClipRectZeroTail_16u32f_C1R", "icv_h9_ownNormDiff_L1_16u_C3CMR_HSW", "icv_s8_ippiRGBToGray_32f_AC4C1R", "icv_g9_ippiMirror_8u_C1R", "icv_s8_owniSqrDistanceNorm_FullSame_32f_C1R", "icv_h9_ippiCopyReplicateBorder_16s_C1R", "icv_h9_ippiMorphTophat_8u_C3R_L", "cvInitSparseMatIterator", "icv_w7_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_W7cn", "icv_h9_ownpi_WarpAffine_L_Mem_8u_C3", "icv_p8_ippiFilterBorder_8u_C1R", "icv_g9_ippiFilterBoxBorder_16s_C3R", "_ZN2cv11FileStorage4openERKNS_6StringEiS3_", "icv_w7_ippiMinEigenVal_8u32f_C1R", "icv_h9_ownsrDftInv_PrimeFact_32f", "icv_h9_owniScaleC_32s32s_C1R_fst", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_V8", "_ZN2cv5instr8getFlagsEv", "icv_s8_ippiNormRel_L2_32f_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_V8", "Java_org_opencv_video_BackgroundSubtractorKNN_getShadowValue_10", "icv_s8_ippiMax_8u_C1R", "icv_w7_ippiFilterBilateralBorderInit_L", "icv_w7_ownippiFilterMedianHoriz_8u_BC4R_5x1", "icv_w7_ownippiThreshold_V_8u_AC4", "icv_h9_ippiConvert_8u32f_C1R", "icv_p8_owniConvert_32f16s_AC4_W7", "icv_p8_ownpi_NormInfDiff_8u_C1R", "icv_g9_ippiMean_16u_C3R", "ippicviIntegral_8u32s_C1R", "icv_w7_owniCopy16s_P4C4_W7", "icv_p8_ownResize3Linear16u", "icv_s8_ippiMirror_16s_C3R", "icv_s8_ippiFilterBilateralBorder_8u_C1R_L", "icv_s8_owniConvert_16s16u_ccode", "icv_p8_ownSS4_72_16s", "icv_s8_ownAFilterColumn_8u_C1R", "icv_p8_ownippiFilterxBrd_8u_C4R", "ippicviNormRel_L2_16s_C1R", "Java_org_opencv_videoio_VideoWriter_release_10", "icv_w7_ownpi_WarpAffine_L_Repl_16u_C1", "icv_w7_ippiAddWeighted_16u32f_C1IR", "_ZN2cv3hal4sqrtEPKdPdi", "icv_p8_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "icv_g9_ownSS4vertical_16s", "Java_org_opencv_imgproc_Imgproc_resize_10", "icv_w7_ippiSubC_32f_C1R", "icv_g9_ownSS1_65_32f", "icv_w7_owniGetRectBottomBF_8u_C1R", "icv_p8_ownippsCnvrtFin_32f16u_Sfs", "Java_org_opencv_ml_KNearest_setIsClassifier_10", "icv_h9_ownpi_WarpSimpleNearest_16u_C4R", "icv_p8_ippiApplyHaarClassifier_32f_C1R", "icv_p8_ownpi_AndC_32s_C3R", "icv_p8_ownpi_Histogram_16s_C1R", "icv_p8_ownpi_dInterVector_L_32f_C3", "icv_s8_ippiMorphBlackhat_16s_C1R_L", "icv_h9_owniFilterBilateralR2_InMem_32f_C1R_px", "_ZN2cv3hal21cvtBGRtoThreePlaneYUVEPKhjPhjiiibi", "icv_w7_ippiCompare_16s_C1R", "icv_w7_ownpi_WarpAffine_L_Mem_64f_C3", "icv_s8_ownpi_Histogram_BS_16s_C1R", "cvClearSeq", "icv_w7_ippsCopy_16s", "icv_h9_ownpi_SimpleRotate_64f_C4R", "ippicviMorphOpen_32f_C1R_L", "icv_p8_owniResizeCubic_16s_C1R", "icv_p8_ownAddProduct_8u32f_C1IR_P8", "icv_s8_ippiFilterLaplacianBorder_32f_C1R", "icv_s8_ownSS4_41_16s", "icv_s8_piGradientScharr32f_c1", "icv_s8_owniGetRectLeftBF_8u_C1R", "ippicviFilterBoxBorder_32f_C4R", "icv_s8_ownResize1Nearest16s", "icv_w7_owniFilterBilateralR1_InMem_8u_C1R_px", "icv_p8_piFilterBoxBorder_32f_C1R_px", "icv_s8_ippiSum_16s_C4R", "_ZN2cv11RNG_MT199374nextEv", "_ZN2cv16accumulateSquareERKNS_11_InputArrayERKNS_17_InputOutputArrayES2_", "Java_org_opencv_ml_TrainData_getSamples_10", "icv_g9_ownscDFTinv_6_64fc", "icv_s8_ippiDCT8x8Fwd_32f_C1", "icv_p8_ownSS1_32_8u", "icv_p8_owniFilterSobelVertBorder2_16s_C1R", "icv_s8_ippiMirror_32s_C3R", "icv_g9_ownResize1Cubic32f", "icv_p8_ownsrDFTinv_15_scale_64f", "_ZN2cv3dnn19experimental_dnn_v116readNetFromCaffeERKNS_6StringES4_", "_ZNK2cv17CascadeClassifier14getFeatureTypeEv", "_ZN2cv21createTonemapReinhardEffff", "icv_s8_ippiFilterScharrHorizMaskBorder_32f_C1R", "icv_p8_ippiMorphClose_32f_C1R_L", "Java_org_opencv_core_Mat_n_1ones__DDI", "icv_p8_owniScaleC_8s16s_C1R_fst", "_ZN2cv27CirclesGridFinderParametersC2Ev", "icv_s8_owniResizeNearest_16s_C4R", "Java_org_opencv_photo_MergeMertens_setSaturationWeight_10", "icv_p8_ownscDFTfwd_9_scale_32fc", "icv_g9_ownpi_NormInfRel_8u_C1R", "Java_org_opencv_dnn_Layer_delete", "icv_p8_ippsFFTGetSize_R_64f", "Java_org_opencv_imgproc_Imgproc_arrowedLine_10", "icv_p8_ippiCopyMirrorBorder_8u_C1R_L", "icv_h9_ippsSqrt_32f", "_ZN2cv8internal15IntrinsicParamsC1Ev", "icv_p8_ippiFilterSobelHorizBorderGetBufferSize", "icv_s8_ownpi_WarpAffine_C_Transp_8u_C3", "icv_h9_owniFlipCopy_32s_C3", "Java_org_opencv_core_Core_invert_10", "icv_h9_ippiMin_16s_C1R", "icv_h9_ippiMinMax_16u_C1R", "icv_w7_ownResize4Cubic8u", "icv_w7_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_W7cn", "_ZN2cv8superres15SuperResolution8setInputERKNS_3PtrINS0_11FrameSourceEEE", "icv_h9_ownCalcBorderR3Antialiasing_16s", "icv_h9_owniSet_8u_C3R", "icv_w7_ippiMean_16u_C3CMR", "icv_p8_ownSS4_72_16u", "icv_s8_owns_cRealRecombine_32f", "icv_g9_ippiCopyMirrorBorder_32s_C3R_L", "icv_h9_ownippiFilterMedianVert_16u_1x5", "icv_w7_ippsSinOne", "icv_p8_owniFilterBilateralR2_InMem_8u_C3R_L", "Java_org_opencv_ml_EM_getCovs_10", "icv_s8_ownpi_Rotate90_B_64_C1R", "icv_g9_ippiThreshold_GT_16s_C1IR", "icv_h9_ownpi_WarpAffineNearest_16s_C1R", "_ZN2cv11arrowedLineERKNS_17_InputOutputArrayENS_6Point_IiEES4_RKNS_7Scalar_IdEEiiid", "icv_p8_owniResizeCubic_8u_C3R", "icv_p8_ownippsSqrt_16sc_ASM_ZR", "icv_w7_ippiTranspose_16s_C4R", "icv_h9_ownpi_WarpSimpleNearest_16s_C4R", "icv_h9_ippiConvert_32f16u_C1RSfs", "icv_g9_ownpi_NormInf_16s_C1R", "icv_h9_ippiSet_32s_C4R", "icv_s8_ownsrDFTinv_10_32f", "icv_g9_ownSS4_52_32f", "Java_org_opencv_ml_SVM_getKernelType_10", "cvCreateMemStorage", "icv_p8_ownippiFilterMedianHoriz_16u_BC4R", "icv_g9_owns_initDctInv_Fft_32f", "_ZNK2cv3ocl6Device21nativeVectorWidthCharEv", "icv_g9_ippiNormDiff_L1_16u_C3CMR", "icv_s8_ippsSortRadixDescend_64f_I", "icv_g9_ownRow3Antialiasing_32f", "icv_w7_ippsDFTGetSize_C_64fc", "icv_p8_owniConvert_8s32f_AC4_W7", "icv_g9_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_G9E9cn", "icv_s8_ownippiThreshold_V_8u_AC4", "icv_h9_ownCalcBorderR4Linear32f", "icv_h9_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_H9L9cn", "icv_p8_ownsInitTabDftBase_32f", "icv_w7_ownippiThreshold_8u_C1", "icv_s8_ownscrDftInv_Fact_64f", "_ZNK2cv3Mat9convertToERKNS_12_OutputArrayEidd", "Java_org_opencv_photo_CalibrateRobertson_setThreshold_10", "icv_h9_ownpi_WarpSimpleCubic_16u_C1R", "icv_s8_ownRow1Lanczos3_16u", "_ZN2cv3dnn19experimental_dnn_v15Layer12setBatchNormERKNS_3PtrINS1_14BatchNormLayerEEE", "icv_g9_ownpi_WarpAffine_NN_Const_16s_C4", "icv_ipp_is_sse42_extension", "icv_g9_ownscDftInv_Prime5_64fc", "icv_s8_ippiCopy_16s_C4C1R", "icv_p8_ippiSet_16s_C3R", "icv_g9_ippiMean_16s_C4R", "icv_h9_owniResizeSuper_8u_C1R", "icv_s8_ippiWarpAffineCubic_32f_C3R", "icv_p8_owniFilterMedianBorderInMem_32f_C1R", "_ZN7cvflann19flann_distance_typeEv", "icv_p8_ippiResizeLinear_32f_C4R_L", "icv_h9_ippiSwapChannels_32s_C4R", "icv_w7_ippiScaleC_32f_C1IR", "icv_n0_own_ipps_sInvSqrt_W7EPnnn", "icv_w7_ippiCopyMirrorBorder_32s_C1R", "_ZN3tbb8internal9schedulerD1Ev", "Java_org_opencv_features2d_FastFeatureDetector_setThreshold_10", "icv_s8_ippiCopyConstBorder_32s_C4R", "icv_g9_ownscDftFwd_Fact3_32fc", "icv_p8_ownpi_WarpAffine_NN_Repl_8u_C4", "ippicviMinMax_8u_C1R", "icv_p8_ownscDFTinv_12_scale_64fc", "Java_org_opencv_features2d_AKAZE_getNOctaves_10", "Java_org_opencv_features2d_Params_set_1maxCircularity_10", "icv_h9_owns_cFFTfwd_64_64fc", "icv_g9_ownBuildWarpFilter_32f", "ippicviCopy_32f_C4C1R", "icv_p8_ownCalcBorderR4Linear16u", "icv_g9_ownCalcBorderR3Lanczos3_16s", "icv_g9_ippiMinMaxIndx_8u_C1MR", "icv_s8_ippiConvert_8u8s_C1RSfs", "icv_w7_DotProd_64fc", "icv_w7_owniCrossCorrValid_NormLevel_8u_C1R", "icv_h9_ownFilterRow32f_16s_C4R_g9e9", "_ZN2cv11RNG_MT19937cviEv", "icv_p8_ownpi_WarpSimpleNearest_16u_C1R", "_ZN2cv11RotatedRectC2ERKNS_6Point_IfEES4_S4_", "_ZNSt15__exception_ptr13exception_ptrD1Ev", "icv_g9_owniFilterScharrVertMaskBorder2_8u16s_C1R", "icv_p8_ownscrDftInv_Fact_64f", "icv_g9_ippiOr_8u_C1R", "icv_p8_ownNormRel_Inf_32f_C1MR_W7", "icv_p8_ownsConvert_16s32f_Sfs_W7", "icv_h9_ippiWarpAffineLinear_64f_C1R", "icv_s8_ownippiFilterMedianHoriz_16u_C3R", "icv_p8_ippsFFTFwd_CToC_64fc", "ippicviScaleC_8s_C1IR", "_ZN2cv11FileStorageC1ERKNS_6StringEiS3_", "_ZN2cv9Feature2D7computeERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EERKNS_12_OutputArrayE", "icv_p8_ippsAddC_32f_I", "icv_g9_ippiTranspose_16s_C3IR", "icv_h9_ippiMorphBlackhat_32f_C4R_L", "icv_g9_ippiCopy_32f_AC4C3R", "icv_h9_ownpi_Sum_16s_C3R", "_ZN2cvmiERKNS_7Scalar_IdEERKNS_7MatExprE", "icv_g9_ippiScaleC_8s_C1R", "icv_h9_ippiSum_8u_C1R", "icv_s8_ownsrDFTfwd_3_64f", "icv_h9_ippiMinMaxIndx_16u_C1R", "_ZN2cv9polylinesERNS_3MatEPKPKNS_6Point_IiEEPKiibRKNS_7Scalar_IdEEiii", "icv_g9_ownpi_WarpAffineNearest_32f_C3R", "icv_h9_innerNumberTwo3x3", "icv_g9_ippsFFTInit_R_64f", "icv_h9_ownsMul_16s", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_3x3_V8", "_ZN2cv3hal7gemm32fEPKfjS2_jfS2_jfPfjiiii", "icv_s8_ownsMul_32fc", "_ZN2cv7fisheye13stereoRectifyERKNS_11_InputArrayES3_S3_S3_RKNS_5Size_IiEES3_S3_RKNS_12_OutputArrayESA_SA_SA_SA_iS7_dd", "icv_w7_ownCalcBorderR1Cubic16u", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_13", "icv_w7_ownRow3Cubic8u", "icv_g9_owniScaleC_16s32f_C1R_fst", "icv_g9_ownResize3Linear16u", "icv_w7_ippiMorphGradient_32f_C4R_L", "icv_h9_ippiCopy_32f_AC4C3R", "icv_h9_ownsrDFTfwd_5_scale_64f", "icv_p8_ownscDftInv_Fact2_64fc", "_ZN2cv6detail11MatchesInfoC2ERKS1_", "icv_s8_owns_rFFT_1_scale_32f", "icv_s8_BUFSIZE_FUNC", "icv_p8_ippsExp_32f_A21", "icv_h9_ippiMaxIndx_32f_C1R", "icv_s8_ownsZero_8u", "icv_p8_ownRow1Linear32f", "_ZN6CvTypeC1EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E", "icv_w7_ippiResizeLinear_8u_C3R_L", "Java_org_opencv_objdetect_HOGDescriptor_save_10", "icv_h9_ownscDftInv_Fact5_64fc", "icv_s8_ippiCopy_16u_C3MR", "icv_s8_ownLaplace3x3Row_8u_AC4", "icv_w7_ownAFilterRow_8u_AC4R", "_ZN2cv9videostab28KeypointBasedMotionEstimator8estimateERKNS_11_InputArrayES4_Pb", "icv_p8_ippiErode_16u_C1R_L", "icv_g9_ippiAddProduct_32f_C1IR", "_ZN3tbb8internal6market7releaseEb", "icv_p8_ownHipass5x5Col_8u_C1", "icv_p8_ippiWarpAffineNearest_16s_C1R", "icv_g9_innerSwapChannels_8u_C4R", "icv_w7_ownscDFTfwd_11_32fc", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringEf", "_ZN2cv17CascadeClassifier13getOldCascadeEv", "icv_h9_ippiFilterBoxBorder_16u_C3R", "icv_p8_ownpi_Or_8u_AC4R", "_ZN2cv14findHomographyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEid", "icv_s8_ownAbsDiffC_32f_C1R_W7_B", "icv_g9_ippiScaleC_8s32s_C1R", "icv_g9_ippiErode_32f_C3R_L", "icv_w7_owniResizeSuper_8u_C1R", "icv_w7_ownHipass5x5Col_8u_C4", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_W7", "icv_p8_ippiNormDiff_L1_16s_C1R", "icv_w7_owns_cFFT_1_scale_32fc", "cvEigenVV", "icv_h9_owniShiftClipRectZeroTail_8u32f_C1R", "icv_s8_ownscDFTinv_5_32fc", "icv_ipp_is_mmx_extension", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_W7", "icv_p8_owniAutoSS_C1R", "icv_g9_ownpi_WarpAffine_NN_Repl_32f_C4", "icv_s8_ippsMul_64fc_I", "icv_w7_ippiCopyConstBorder_8u_C1R", "icv_w7_ownippiFilterMedianCross_16u_C1R_3x3", "icv_h9_owniFilter32f_8u_C3R_g9e9_4", "icv_p8_ippiCopy_16s_C4R", "icv_h9_owniResizeLanczos_8u_C4R", "icv_w7_ippiDCTInvGetSize_32f", "icv_h9_ownSS1vertical_16u", "icv_w7_ownscDFTinv_9_64fc", "icv_p8_ippiTranspose_32s_C4R", "icv_g9_ownResize3Antialiasing_32f", "icv_h9_owniScaleC_64f64f_C1R", "icv_p8_ownRow4Cubic8u", "Java_org_opencv_photo_TonemapDurand_getContrast_10", "icv_w7_ippiCrossCorrNormGetBufferSize", "cvClearMemStorage", "icv_w7_ippiResizeSuper_8u_C4R_L", "icv_w7_ownpi_NormL2Rel_8u_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_W7", "Java_org_opencv_video_BackgroundSubtractorKNN_setNSamples_10", "_ZN2cv10PCAProjectERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayE", "icv_p8_owns_cFFTfwd_16_scale_32fc", "icv_s8_ippiFilterBoxBorder_16s_C4R", "Java_org_opencv_features2d_FeatureDetector_read_10", "_ZN2cv3LUTERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "_ZNK2cv7MatExpr5crossERKNS_3MatE", "icv_s8_ippiAddWeighted_8u32f_C1IMR", "Java_org_opencv_core_Core_max_10", "_ZN2cv3ocl6KernelC2EPKcRKNS0_7ProgramE", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_W7", "icv_s8_owniResizeSuper_16s_C1R", "_ZNK2cv17FlannBasedMatcher15isMaskSupportedEv", "icv_w7_ippiScaleC_16u16s_C1R", "icv_p8_ownippsCnvrt_8u32f", "icv_p8_ownResize4Linear8u", "icv_s8_ippiMirror_16s_C3IR", "icv_h9_ippiThreshold_LTVal_16s_C1R", "icv_w7_ownColLinear64f", "icv_h9_ownpi_WarpAffine_NN_Mem_16u_C4", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_compute_10", "icv_w7_ownscrDftInv_Prime5_64f", "icv_g9_ownSS3vertical_32f", "icv_s8_owncvGetMaxNumThreads", "icv_g9_ownSS1_41_8u", "icv_g9_ippiAddWeighted_16u32f_C1IMR", "icv_s8_ownSum_8s_C3CMR_V8", "icv_g9_ippiNorm_L1_32f_C3CMR", "icv_p8_ownippsMagn_32f", "icv_w7_ippsSortRadixIndexDescend_32f", "icv_h9_ownippiFilterMax_16s_Col_h9l9", "icv_w7_ownsSet_16u", "icv_g9_ownscDftFwd_Prime6_64fc", "ippicviErode_8u_C1R_L", "icv_w7_ippiErode_8u_C3R_L", "icv_g9_ippiCopyMirrorBorder_8u_C1R", "Java_org_opencv_ml_KNearest_findNearest_11", "_ZNK2cv8Subdiv2D18getLeadingEdgeListERSt6vectorIiSaIiEE", "icv_h9_ownRow4Antialiasing_32f", "icv_g9_ippiDCTFwdGetSize_32f", "cvSetSeqBlockSize", "icv_h9_owniCopyMirrorBorder_32s_C4R", "Java_org_opencv_imgproc_Imgproc_EMD_11", "icv_h9_owniCopyBF_32f_C3R", "icv_p8_ownNormDiff_Inf_16u_C3CMR_V8", "icv_w7_ownsrDFTfwd_7_32f", "_ZNK2cv5flann11IndexParams9getDoubleERKNS_6StringEd", "icv_p8_ippsMaxEvery_64f", "icv_p8_ownsrDftFwdRecombine_64f", "icv_g9_ownpi_WarpAffine_NN_Const_32f_C4", "icv_g9_ownSS1_21_16s", "icv_w7_ownsGetSizeDftPrimeFact_32f_32f", "icv_g9_ownpi_WarpAffine_L_Const_16s_C4", "_ZN2cv6detail24HomographyBasedEstimator8estimateERKSt6vectorINS0_13ImageFeaturesESaIS3_EERKS2_INS0_11MatchesInfoESaIS8_EERS2_INS0_12CameraParamsESaISD_EE", "icv_n0_own_ipps_sSqrt_S9LAynn", "icv_h9_ownpi_WarpAffine_NN_Const_8u_C1", "icv_h9_ippiFilterBorder_32f_C3R", "icv_h9_ippiTrueDistanceTransform_8u32f_C1R", "icv_w7_ownpi_MinIndx_8u_C1R", "icv_h9_ippiCopyReplicateBorder_16s_C4IR", "icv_p8_ownpi_WarpAffineSimpleLinear_16u_C3R", "icv_h9_ownFilter32f_16u_C4R_g9e9", "icv_p8_ownippsCnvrt_32f16s_Sfs", "icv_h9_ippiWarpAffineCubic_8u_C4R", "icv_h9_ownpi_dInterPoint_CR_PixelB_16u", "Java_org_opencv_photo_Photo_createCalibrateRobertson_10", "icv_h9_ownCalcBorderR1Linear16s", "icv_s8_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "icv_g9_ippiNormRel_Inf_16s_C1R", "icv_w7_ippiCopy_16s_C4MR", "icv_g9_ippiAbsDiff_16u_C1R", "icv_s8_ippiCannyBorder_8u_C1R", "icv_g9_ippiXor_8u_C1R", "cvTreeToNodeSeq", "icv_g9_ownCalcBorderR4Antialiasing_32f", "icv_s8_ownAFilterRow32f_16u_C4R", "icv_g9_owniFilter32f_16s_C4R_g9e9_7", "_ZN2cv3dnn19experimental_dnn_v15Layer7forwardERKSt6vectorINS_3MatESaIS4_EERS6_S9_", "icv_g9_owniGetRectRightBF_8u_C3R", "_ZN2cvdvEdRKNS_3MatE", "icv_s8_owniCopy32s_C4P4_W7", "icv_p8_ippiMirror_16u_C4IR", "icv_p8_ownippiThreshold_32f_C3", "icv_p8_ippiCompare_16s_C1R", "Java_org_opencv_imgproc_Imgproc_pointPolygonTest_10", "icv_p8_ownsMulC_32f_I", "Java_org_opencv_photo_Tonemap_getGamma_10", "icv_p8_owniCopyMirrorBorder_8u_C3R_L", "icv_s8_ownsInitTabDftBase_64f", "icv_s8_ownpi_NormL2Diff_8u_C1R", "ippicviNormDiff_L1_8u_C3CMR", "icv_p8_ownscDFTinv_9_64fc", "icv_g9_owniResizeLanczos_16s_C4R", "icv_g9_ippsMinIndx_32f", "_ZNK3tbb27invalid_multiple_scheduling4whatEv", "_ZNK2cv12_OutputArray6assignERKNS_4UMatE", "ippicvsSortRadixDescend_16s_I", "icv_w7_ippiThreshold_GT_16s_C1R", "_ZNK2cv12_OutputArray6createEiPKiiibi", "icv_g9_ownsrDftFwd_Conv_32f", "icv_s8_ownpi_WarpAffine_C_Const_64f_C4", "icv_h9_ownpi_WarpAffine_C_Transp_8u_C4", "icv_h9_owns_cFFTinv_8_64fc", "icv_g9_owniConvert_32f16u_AVX", "Java_org_opencv_core_Core_invert_11", "icv_p8_ippiFilterLowpassGetBufferSize_32f_C1R", "icv_p8_owniTranspose_16u_C4IR_W7", "_ZN2cv3ocl5Queue6finishEv", "icv_s8_ownHipass5x5Col_16s_C1", "icv_s8_owns_cFftFwd_Fact4_Last_32fc", "icv_s8_ownFilter_32f_C1R_v8u8", "icv_s8_ippiResizeGetSize_L", "icv_p8_ownCopySubpix_8u32f_C1R_W7", "icv_s8_ownCalcBorderR4Lanczos2_32f", "icv_g9_owniFilter32f_16s_C3R_g9e9_1", "icv_h9_ownpi_WarpAffine_C_Mem_16s_C4", "_ZN2cv12equalizeHistERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_s8_ownpi_WarpSimpleNearest_32f_C4R", "icv_p8_ippiFilterBilateralBorderGetBufferSize", "icv_g9_owniGetRectBottomBF_32f_C1R", "icv_s8_ownpi_WarpAffine_NN_Repl_32f_C3", "icv_w7_ownLanczosKernel3", "icv_g9_ownpi_WarpAffine_C_Const_16s_C4", "icv_h9_ownsFFTGetBufSize_R_32f", "Java_org_opencv_core_Core_idft_11", "icv_w7_owns_initTabTwd_Large_32f", "icv_w7_ippiCopyReplicateBorder_16u_C1R", "icv_p8_ownpi_SimpleRotate_8u_C1R", "icv_h9_ownsrDftFwd_PrimeFact_64f", "icv_s8_ippsConvert_32s16s_Sfs", "icv_s8_ownRow3Filter2_8u", "_ZN2cv5flann11IndexParamsC1Ev", "icv_s8_ownAFilterRow32f_16s_C1R", "icv_s8_ownippiFilterMedianVert_8u_1x3", "icv_h9_piGradientScharr8u_c1", "icv_s8_ippiMaxIndx_16s_C1R", "icv_p8_owniScaleC_32f32f_C1R_fst", "icv_g9_ownpi_NormL2_32f_C1R", "icv_s8_ippiNormDiff_Inf_32f_C1R", "icv_w7_ownpi_MinMax_16s_AC4R", "_ZN2cv3hal11SepFilter2D6createEiiiPhiS2_iiidi", "icv_w7_owniResizeNearest_16u_C1R", "ippicviDilate_16s_C1R_L", "icv_p8_owns_rFFTinv_32_scale_32f", "icv_s8_ownNorm_L1_8u_C1MR_W7", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_X", "icv_s8_ippsMul_64f_I", "icv_p8_ownpi_Max_32f_C3R", "ippicviMirror_32f_C4IR", "icv_h9_ippiMean_StdDev_16u_C1R", "icv_s8_cv_ownMorphologyGetSizeInitBuf_1u_L", "icv_s8_ownSumSq_16u_C1MR_W7", "icv_p8_owniFilter_32f_C4R_v8u8_5", "icv_h9_ippsPowOne", "icv_w7_ippiNormDiff_Inf_16s_C1R", "icv_w7_ownRow1AA_16s", "icv_w7_ownSumSq_8u_C3CR_W7", "icv_w7_ownpi_And_8u_AC4R", "icv_s8_ownResize1Lanczos2_16s", "icv_g9_ippiCopyMirrorBorder_8u_C3IR_L", "icv_g9_ownpi_WarpAffine_L_Const_16s_C1", "icv_w7_ownNorm_L1_16u_C3CMR_W7", "_ZN2cv9videostab18InpaintingPipeline19setStabilizedFramesERKSt6vectorINS_3MatESaIS3_EE", "_ZN2cv3dnn19experimental_dnn_v15Layer13setParamsFromERKNS1_11LayerParamsE", "icv_s8_ippiCopy_32f_P4C4R", "icv_s8_ippiMorphClose_8u_C4R_L", "_ZN2cvleEdRKNS_3MatE", "_ZN2cv3ocl5QueueC1ERKS1_", "icv_s8_ownpi_WarpAffine_L_32f_C4", "icv_s8_ownsrDFTinv_12_32f", "icv_p8_ownpi_WarpAffineSimpleLinear_64f_C4R", "icv_w7_ownpi_NormInfDiff_16u_C1R", "cvGuiBoxReport", "Java_org_opencv_ml_SVMSGD_getMarginRegularization_10", "icv_w7_ownscDftReord_32fc", "icv_p8_ownpi_XorC_8u_C4R", "icv_g9_ownFilterBorderConvert32s_8u", "icv_w7_ownRow4AA_16s", "icv_s8_ownSS1_73_8u", "icv_s8_owniFilterBilateralR1_InMem_8u_C1R_px", "icv_p8_ownippiFilterMedian_16s_C1R_1x7", "icv_w7_ownAFilterRow_16s_C1R", "cvGetErrStatus", "icv_s8_owns_cFft_BlkSplit_64fc", "icv_g9_ippiMorphGradient_32f_C4R_L", "icv_w7_owniFilter2_32f_C1R", "icv_h9_owniFilterBilateralR1_InMem_32f_C3R_L", "icv_s8_ippiNorm_Inf_32f_C1R", "icv_h9_ownpi_NormL2_16s_C1R", "_ZN2cv5remapERKNS_11_InputArrayERKNS_12_OutputArrayES2_S2_iiRKNS_7Scalar_IdEE", "WebPGetWorkerInterface", "icv_w7_ownResize4Lanczos2_32f", "icv_p8_ownRow1Cubic32f", "icv_w7_owns_cFFTfwd_16_scale_64fc", "icv_p8_ippsFFTGetSize_C_64fc", "icv_s8_ownpi_XorC_8u_C1R", "icv_s8_ownpi_NormL1Diff_8u_C1R", "ippGetCacheParams", "ippicviAddWeighted_16u32f_C1IMR", "icv_h9_ippiMorphTophat_16u_C1R_L", "_ZN2cv9videostab23MotionEstimatorRansacL2C1ENS0_11MotionModelE", "Java_org_opencv_video_KalmanFilter_delete", "icv_g9_owns_initDctFwd_Conv_32f", "icv_g9_ippiMirror_16s_C4IR", "icv_h9_owniCopy_32s_P3C3R", "icv_p8_ippsSortRadixGetBufferSize", "icv_w7_ippiMean_8u_C1R", "_ZN2cv10softdoubleC1Ei", "icv_w7_ippiScaleC_16s8u_C1R", "_ZN2cv3dnn19experimental_dnn_v15LayerD0Ev", "icv_h9_ownippiFilterMedian_8u_C3R", "icv_p8_ownpi_WarpAffine_C_Repl_64f_C1", "Java_org_opencv_video_FarnebackOpticalFlow_create_10", "_ZNK2cv4cuda6GpuMat9convertToERKNS_12_OutputArrayEiddRNS0_6StreamE", "Java_org_opencv_core_Core_trace_10", "icv_s8_ownCopySubpix_8u32f_C1R_new_W7", "Java_org_opencv_video_FarnebackOpticalFlow_getNumLevels_10", "icv_w7_ippiCrossCorrNorm_32f_C1R", "icv_h9_ippiMirror_32f_C4R", "icv_p8_ownippiFilterMedian_16s_C4R", "icv_p8_ownpi_WarpAffineSimpleNearest_32f_C4R", "icv_s8_ownResize1Linear64f", "llwiFilterLaplacian", "Java_org_opencv_features2d_Params_set_1maxArea_10", "icv_w7_ippiTranspose_8u_C4R", "icv_w7_ippsFFTGetSize_C_64fc", "icv_w7_ownpi_WarpAffine_L_Const_8u_C4", "icv_p8_ownippiFilterMedianHoriz_8u_C3R", "icv_s8_ownsInitDftPrimeFact_32f_32f", "icv_w7_ownpi_Sum_16s_C4R", "Java_org_opencv_core_Core_subtract_11", "icv_g9_ippiThreshold_GT_16s_C1R", "icv_w7_ippiFilterLaplacianGetBufferSize_32f_C1R", "icv_p8_ownpi_WarpAffine_NN_Mem_8u_C4", "icv_s8_owniTplNormMean_32f_C1R", "Java_org_opencv_imgproc_Imgproc_findContours_10", "icv_h9_ownSS4_43_16s", "icv_h9_ownSS4_32_8u", "icv_w7_owniResizeSuper_32f_C4R", "icv_p8_ownscDFTinv_15_64fc", "_ZNK2cv3dnn19experimental_dnn_v13Net20getMemoryConsumptionEiRKSt6vectorIS3_IiSaIiEESaIS5_EERjSA_", "icv_s8_ownpi_WarpSimpleCubic_16s_C3R", "icv_w7_ownsInitTabDftBase_32f", "icv_s8_ownSumSq_16u_C3CMR_V8", "icv_h9_ippsFloorOne", "icv_s8_ownsSub_8u_PosSfs", "icv_h9_owniFilterBilateralR1_InMem_8u_C3R", "icv_s8_ownHipass5x5Frs_8u", "icv_h9_ownSS1_31_32f", "Java_org_opencv_features2d_FeatureDetector_delete", "icv_p8_ownpi_dInterVectorClip_C_32f_C", "_ZnwjRKSt9nothrow_t", "icv_h9_owniResizeNearest_8u_C4R", "icv_s8_ownscDftInv_Prime5_32fc", "Java_org_opencv_video_BackgroundSubtractorKNN_setShadowValue_10", "icv_w7_ippiMorphBlackhat_16s_C1R_L", "icv_g9_owns_rFFTinv_32_scale_64f", "icv_p8_ippiCopy_8u_C3AC4R", "icv_p8_ownLaplCol5x5_16s_C1", "ippicviFilterSobelNegVertBorderGetBufferSize", "icv_w7_ownsrDftFwd_Conv_64f", "icv_g9_ownSS3_54_8u", "_ZN2cv3ocl9KernelArgC1EiPNS_4UMatEiiPKvj", "icv_h9_ownpi_WarpAffine_NN_Const_16u_C1", "icv_h9_ippiMorphSetMode_L", "icv_s8_ippiConvert_16s8s_C1RSfs", "icv_h9_ippiResizeAntialiasing_8u_C3R_L", "icv_g9_owniResizeAntialiasing_16s_C4R_L", "_ZNSt13bad_exceptionD1Ev", "icv_s8_ownpi_WarpAffine_C_Repl_8u_C4", "icv_w7_ippiThreshold_Val_32f_C1R", "ippicviNormRel_Inf_16u_C1MR", "icv_w7_ippiFilterMedianBorder_16u_C1R", "ippicviFilterSobelVertBorder_32f_C1R", "_ZN2cv6detail11PlaneWarper15detectResultRoiENS_5Size_IiEERNS_6Point_IiEES6_", "icv_s8_ownsrDftFwd_Dir_32f", "_ZN2cvdvERKNS_3MatEd", "icv_g9_ippiNormRel_L2_16u_C1MR", "_ZN2cv21findChessboardCornersERKNS_11_InputArrayENS_5Size_IiEERKNS_12_OutputArrayEi", "icv_w7_ownpi_Min_16s_C1R", "icv_s8_ownsAddC_32f", "icv_g9_ownCalcBorderR3Cubic16u", "icv_w7_Plr2Crt_32fc_WMT", "icv_w7_ippsMinEvery_16u", "icv_h9_ippiNormRel_Inf_16u_C1MR", "icv_w7_ippsSortRadixIndexAscend_16s", "icv_g9_ippiWarpAffineNearest_16s_C4R", "Java_org_opencv_objdetect_HOGDescriptor_compute_11", "icv_p8_ippiDistanceTransform_5x5_8u32f_C1R", "icv_h9_ownsrDFTfwd_13_scale_32f", "icv_p8_ownpi_XorC_16u_AC4R", "icv_s8_ownippiFilterMedian_16u_BC4R_3x3", "Java_org_opencv_calib3d_Calib3d_solvePnPRansac_10", "icv_w7_ippiCopyMirrorBorder_32s_C1IR_L", "Java_org_opencv_core_Core_copyMakeBorder_10", "Java_org_opencv_core_Core_dct_11", "icv_w7_ippsFFTInit_R_64f", "ippicviMin_32f_C1R", "icv_w7_ownpi_WarpAffine_NN_Const_32f_C3", "icv_h9_myHSVToRGB_8u_C3R", "_ZN2cv2ml9TrainData12getSubVectorERKNS_3MatES4_", "icv_s8_ownscDftFwd_Fact13_64fc", "_ZN2cv11contourAreaERKNS_11_InputArrayEb", "icv_h9_owniFilter32f_16s_C1R_g9e9_7", "icv_g9_ownscDFTfwd_12_scale_64fc", "icv_p8_ownpi_WarpAffine_L_Repl_16u_C3", "icv_s8_owns_cFFTfwd_8_64fc", "icv_h9_ownSS4_54_16u", "icv_g9_owniScaleC_32s64f_C1R_acc", "icv_p8_gres_NormL2_16u_C1R", "icv_s8_ownLaplRow5x5_8u_C4", "icv_s8_ownpi_WarpSimpleNearest_8u_C1R", "icv_s8_computeTiles", "icv_g9_ownscDftFwd_Fact13_64fc", "_ZN2cv25decomposeProjectionMatrixERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_S5_S5_S5_S5_", "cvSeqElemIdx", "ippicviNorm_Inf_16u_C1MR", "icv_p8_ippsDFTInit_C_32fc", "icv_w7_ippiScaleC_32f64f_C1R", "icv_s8_ownNormRel_L1_32f_C1MR_W7", "icv_w7_owns_dBitRev1_Blk", "_ZN2cv4PSNRERKNS_11_InputArrayES2_", "icv_s8_innerRGBToGray_32f_C3C1R", "icv_h9_ownRow4Antialiasing_8u", "icv_w7_ownRow1Cubic16s", "ippicvsMagnitude_64f", "icv_h9_owniCopy_8u_C3P3R_cn", "icv_p8_owniCopyMirrorBorder_32s_C1IR_L", "icv_s8_ownpi_WarpAffine_NN_Const_8u_C3", "cvRedirectError", "icv_h9_ownscDftInv_PrimeFact_32fc", "icv_w7_ippsSet_32f", "icv_s8_ownpi_Rotate90_B_16_C3R", "_ZN2cv7fisheye13distortPointsERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_d", "icv_h9_ippiCopyReplicateBorder_8u_C1R", "icv_w7_ippiAddWeighted_8u32f_C1IMR", "icv_s8_owns_rFFTinv_16_scale_32f", "cvPerspectiveTransform", "icv_w7_ownsFFTGetBufSize_R_32f", "icv_s8_ippiMin_32f_C1R", "icv_g9_ippsMaxEvery_8u", "icv_h9_owniResizeLanczos_16s_C4R", "ippicviCountInRange_8u_C1R", "icv_g9_ippiErodeInit_L", "icv_h9_ippiCannyGetSize", "icv_w7_owniFlipCopy_8u_C1", "cvSetWindowProperty", "_ZN2cv15calcBackProjectEPKNS_3MatEiPKiRKNS_9SparseMatERKNS_12_OutputArrayEPPKfdb", "icv_s8_ownpi_dInterVectorClip_NN_16_P3", "icv_h9_ippiTranspose_32f_C1R", "icv_p8_ippiCopy_32f_C3R", "_ZN10__cxxabiv115__forced_unwindD1Ev", "icv_w7_ippiCopyReplicateBorder_32s_C1R", "icv_p8_ippiResizeAntialiasingLanczosInit_L", "_ZN2cv25BOWImgDescriptorExtractor7computeERKNS_11_InputArrayERKNS_12_OutputArrayEPSt6vectorIS7_IiSaIiEESaIS9_EE", "icv_g9_owns_rFFTinv_16_scale_32f", "icv_h9_ippiComputeThreshold_Otsu_8u_C1R", "icv_p8_owns_cFFT_2_32fc", "icv_g9_ippiConvert_32s8s_C1R", "icv_h9_ippiFilterBorder_16s_C1R", "icv_g9_ownColCubic32f", "Java_org_opencv_calib3d_StereoBM_getUniquenessRatio_10", "Java_org_opencv_video_Video_estimateRigidTransform_10", "icv_h9_ippiScaleC_16s32f_C1R", "icv_g9_ippiScaleC_32f8u_C1R", "icv_h9_ippiFilterMedianBorder_16u_C3R", "icv_g9_ippiDilate_32f_C3R_L", "icv_g9_ippiMirror_8u_C3R", "icv_s8_ownscDFTinv_3_scale_32fc", "icv_s8_ownsPowOne_w7", "icv_h9_owniCopy_16s_C3MR", "icv_g9_owns_initTabBitRevLarge", "icv_p8_ownsConvert_16s64f_Sfs_W7", "icv_h9_gres_NormL2Diff_16u_C1R", "icv_p8_ownColCubic16u", "icv_h9_ippiResizeCubic_16s_C4R_L", "icv_s8_ownpi_SimpleRotate_64f_C3R", "icv_p8_ownRow1Filter12_16u", "icv_g9_ownCalcBorderR4Cubic16s", "icv_p8_owniResizeNearest_32f_C1R", "icv_p8_ippiScaleC_16s_C1R", "icv_s8_ownippsCnvrt_64f32s_Sfs", "icv_p8_ownAddSquare_8s32f_C1IMR_P8", "icv_w7_ownpi_WarpAffine_CR_8u_C4", "icv_w7_ippsSortRadixAscend_16s_I", "icv_s8_ippiNorm_L1_32f_C1R", "icv_w7_ippiSet_16s_C1MR", "icv_w7_owns_initTabTwdCcsRec_32f", "icv_p8_ippiAdd_16u_C1RSfs", "icv_g9_ippiTranspose_32f_C3R", "icv_w7_ownpi_AndC_32s_AC4R", "icv_s8_ownSS3_32_16s", "Java_org_opencv_video_KalmanFilter_KalmanFilter_12", "icv_p8_ownippiFilterMedianSqr_16s_AC4R", "_ZN2cv8Subdiv2D8QuadEdgeC2Ei", "icv_w7_ownippiFilterxBrd_8u_C3R", "Java_org_opencv_core_Mat_nGetB", "Java_org_opencv_features2d_FastFeatureDetector_create_11", "icv_g9_ownSS4_53_8u", "icv_g9_ownpi_ClipRight", "icv_w7_ippiFilterMedianBorder_8u_C3R", "icv_p8_owns_cFFT_1_scale_64fc", "Java_org_opencv_imgproc_Imgproc_filter2D_10", "icv_w7_ownpi_WarpAffineSimpleCubic_16u_C3R", "icv_w7_ownippiFilterMedian_16u_BC4R_3x3", "icv_w7_ownRow3Lanczos3_16s", "icv_g9_ownpi_NormL2Rel_32f_C1R", "Java_org_opencv_video_Video_calcOpticalFlowPyrLK_10", "icv_p8_owniResizeLanczos_8u_C3R", "icv_w7_ippiMorphTophat_32f_C4R_L", "icv_g9_ownFilterBilateralBorder", "icv_s8_ippiSqrIntegral_8u32s64f_C1R", "icv_g9_owniResizeCubic_8u_C1R", "icv_h9_ownpi_WarpSimpleNearest_32f_C1R", "icv_w7_ippiMorphTophat_8u_C3R_L", "icv_p8_owniTranspose_16u_C4R_W7", "icv_p8_owniResizeLanczos_32f_C1R", "_ZN2cv9minMaxLocERKNS_9SparseMatEPdS3_PiS4_", "icv_s8_ownWarpSimple3Nearest8u", "icv_w7_ownpi_WarpAffine_L_Repl_16s_C3", "icv_s8_ownpi_Rotate180_16_C1R", "icv_p8_ownpi_WarpAffineSimpleLinear_16s_C4R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_G9E9cn", "icv_h9_owniResizeCubic_32f_C3R", "iwTypeIsFloat", "icv_h9_owns_cFFTfwd_16_64fc", "icv_p8_ownSS1_98_32f", "_ZN2cv4sqrtERKNS_9softfloatE", "icv_h9_ownCalcBorderR1Antialiasing_32f", "icv_h9_ownCalcBorderR3Linear64f", "cvGet3D", "_ZNK2cv16BOWKMeansTrainer7clusterEv", "icv_h9_owniFilter_32f_C3R_g9e9_2", "icv_w7_ownippiFilterMedianVert_16u_C4R_1x5", "_ZNK2cv10softdoublegeERKS0_", "icv_s8_ownpi_dInterVectorClip_C_16u_C3", "icv_g9_owniFilterBilateralR2_InMem_32f_C3R", "icv_w7_ownMinMaxIndx_32f_C1MR_W7_1", "ippicviFilterLaplacianBorder_8u16s_C1R", "ippicvsDotProd_64f", "icv_s8_ippiCopy_16u_C4C1R", "icv_p8_ippiHistogram_32f_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_W7", "icv_p8_ippiCopyConstBorder_8u_C1R_L", "icv_h9_cv_ownippiFilterMax_16s_Row", "icv_w7_ownHipass5x5Row_8u", "Java_org_opencv_core_Mat_n_1create__JDDI", "icv_s8_ownpi_WarpAffine_NN_16_P4", "icv_g9_ippiFilterBorder_16s_C1R", "icv_w7_ownpi_WarpAffine_C_Repl_8u_C1", "icv_p8_ownpi_dInterVector_L_32f_P3", "icv_h9_ownpi_NormInfRel_16s_C1R", "ippicvsZero_8u", "icv_s8_ownippiFilterMedianHoriz_16u_BC4R", "iwiWarpAffine_InitAlloc", "icv_w7_ownpi_Rotate90_B_32_C4R", "Java_org_opencv_video_SparsePyrLKOpticalFlow_delete", "icv_s8_ownscDFTinv_5_scale_64fc", "icv_w7_ippiFilterBorder_16s_C3R", "_ZN3tbb8internal33itt_store_pointer_with_release_v3EPvS1_", "icv_h9_owniScaleC_32s8s_C1R_fst", "_ZN2cv6detail12DpSeamFinder7processERKNS_3MatES4_NS_6Point_IiEES6_RS2_S7_", "icv_s8_ownpi_WarpAffineSimpleNearest_16s_C1R", "icv_h9_owniCopyMirrorBorder_32s_C1IR_L", "icv_h9_ownpi_Rotate180_8_C4R", "_ZNK2cv3ocl6Device18deviceVersionMajorEv", "icv_h9_ownCalcBorderR1Lanczos3_16u", "icv_h9_ownpi_WarpAffine_L_Const_8u_C4", "icv_w7_ownpi_WarpSimpleNearest_16u_C3R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "icv_g9_ippiCopyConstBorder_8u_C3R", "ippicviMean_32f_C1R", "Java_org_opencv_dnn_Net_forward_10", "icv_h9_ippiCopyMirrorBorder_8u_C3IR", "_ZN2cv8internal15IntrinsicParamsC2Ev", "icv_w7_ownpi_dInterVector_NN_8_AC4", "icv_s8_ippiCrossCorrNorm_32f_C1R", "icv_s8_owniFilterSobelHorizSecondBorder2_8u16s_C1R", "_Z19Mat_to_vector_ucharRN2cv3MatERSt6vectorIhSaIhEE", "icv_w7_ippiTranspose_32s_C3R", "icv_g9_ippsRound_64f", "icv_g9_ownpi_WarpSimpleLinear_8u_C4R", "icv_h9_owniScaleC_32f32s_C1R_fst", "icv_g9_ownFilterBoxBorder_16s_C1R", "icv_p8_ownippsCnvrt_32f8u_Sfs", "icv_p8_ippiCopy_32s_C1MR", "icv_g9_ownpi_WarpAffine_NN_Repl_16s_C1", "icv_w7_ownpi_WarpAffine_L_Mem_16s_C3", "WebPMemoryWriterClear", "icv_s8_ownSS4_54_8u", "Java_org_opencv_photo_TonemapReinhard_delete", "icv_h9_ownippiFilterxBrd_32f_C4R", "_ZN2cv4cuda28getCudaDriverApiErrorMessageEi", "icv_s8_ownscDFTinv_6_scale_32fc", "icv_g9_ippiCountInRange_8u_C1R", "cvMatchTemplate", "_ZNK2cv3ocl6Device17imageMaxArraySizeEv", "icv_s8_owniTranspose32s_C3R_core2", "icv_h9_ownCalcBorderR4Linear16s", "icv_h9_ownpi_WarpAffine_NN_Const_64f_C4", "icv_g9_ippiSum_16s_C1R", "icv_p8_ownpi_WarpAffine_NN_Const_16u_C4", "icv_n0_own_ipps_sLn_V8LAynn", "icv_w7_ippiMinIndx_32f_C1R", "icv_h9_ippsExpOneF", "icv_h9_ippiCopyMirrorBorder_8u_C3R_L", "_ZNK2cv11_InputArray5emptyEv", "icv_p8_ownColLanczos3_16s", "icv_w7_ownAddProduct_8u32f_C1IR_W7", "icv_g9_owniResizeCubic_16u_C4R", "_ZN2cv2ml21NormalBayesClassifier6createEv", "icv_p8_ippsSet_32f", "Java_org_opencv_video_KalmanFilter_get_1statePre_10", "icv_p8_piFilterBoxBorder_32f_C1IR_1_v8u8_NA", "icv_p8_ownippiFilterMax_16u_Row", "icv_w7_ownpi_WarpAffineLinear_64f_C4R", "icv_h9_owniResizeAntialiasing_16s_C1R_L", "icv_w7_ippiFilterRowBorderPipeline_32f_C3R", "icv_g9_owniFilter2_32f_C1R", "icv_w7_ownsSub_16s_Bound", "icv_h9_ippiConvert_16s32f_C1R", "icv_s8_ownRow4Linear8u", "icv_h9_owniFilterBilateralCom_InMem_32f_C3R", "cvCorrectMatches", "icv_w7_ippsCosOne", "icv_g9_ippiResizeLanczos_32f_C3R_L", "_ZN2cv3ocl7Context6createEv", "_ZNK2cv12VideoCapture3getEi", "icv_s8_ownpi_dInterVector_L_32f_C1", "icv_w7_ippsFFTInv_PermToR_32f", "icv_h9_ippiScaleC_8u64f_C1R", "icv_p8_ownMorphInit_1u_L", "icv_g9_ippiNorm_L2_8u_C3CMR", "icv_g9_ippiCopyReplicateBorder_16s_C3IR", "icv_p8_ownscrDftInv_Prime2_64f", "icv_h9_ownpi_WarpAffineCubic_16s_C3R", "icv_h9_ownpi_Min_32f_C1R", "icv_h9_ownpi_SimpleRotate_16s_C4R", "icv_w7_ownippiThreshold_V_16s_C3", "icv_h9_ippiFilterBorder_16s_C4R", "icv_h9_innerCommonLoopW7_32f_C3R", "icv_g9_ippiNot_8u_C1R", "icv_h9_ownscDFTinv_6_scale_32fc", "icv_w7_ownAddWeighted_8u32f_C1IR_W7", "icv_h9_ownpi_CountInRange_8u_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_getkNNSamples_10", "ippicvsSortRadixDescend_16u_I", "Java_org_opencv_features2d_BFMatcher_create_11", "Java_org_opencv_ml_ANN_1MLP_setRpropDWMinus_10", "icv_g9_ownResize1Antialiasing_8u", "icv_p8_ownpi_ClipUpper", "icv_s8_ownsSet_64sc", "_ZN2cvlsERNS_11FileStorageERKNS_6StringE", "icv_g9_ippiSet_32s_C1R", "icv_p8_owniConvert_32f16u_W7", "icv_p8_ippiFilterSobelVertSecondBorder_32f_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_setOuterIterations_10", "_ZN2cv2LUEPdjiS0_ji", "icv_p8___svml4ipp_expf4", "icv_g9_owniScaleC_8u16u_C1R_acc", "icv_h9_ownBuildFilterAA_32f", "icv_w7_ownippiThreshold_LV_32f_C4", "icv_h9_ownpi_WarpAffine_NN_Mem_16s_C3", "icv_s8_ippiConvert_16s8u_C1R", "ippicviMirror_16u_C4R", "Java_org_opencv_imgproc_Imgproc_Sobel_10", "icv_w7_ownResize3Nearest16s", "icv_w7_ippsSet_8u", "icv_p8_owniConvert_16u16s_ccode", "icv_s8_owniFilter_32f_C1R_v8u8_3", "icv_w7_ownsGetSizeTabDftDir_64f", "icv_s8_ippiFilterBorderGetSize", "icv_s8_ippiAddWeighted_8u32f_C1IR", "icv_s8_ownpi_WarpAffine_L_Repl_64f_C1", "Java_org_opencv_photo_AlignMTB_setMaxBits_10", "icv_g9_myRGBToGray_32f_C3C1R", "icv_g9_owniFilter32f_16u_C3R_g9e9_6", "icv_h9_ownNormRel_Inf_32f_C1MR_HSW", "icv_w7_ownsrDFTinv_13_64f", "icv_p8_ownpi_MinIndx_32f_C1R", "icv_w7_ownpi_WarpAffine_NN_Repl_16s_C4", "icv_s8_ownSS4_65_8u", "icv_p8_ownpis_Sum_16u_C3", "icv_s8_ownippsCnvrtFin_32f32s_Sfs", "cvIntegral", "icv_s8_ownpi_NormL1Rel_16u_C1R", "cvFindFundamentalMat", "_ZN2cv9videostab15VideoFileSource5countEv", "icv_g9_owniScaleC_32f16u_C1R_acc", "icv_s8_ownCalcBorderR4Cubic16s", "_ZN2cv6detail17CylindricalWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "icv_p8_ownAFilterColumn_8u_C1R", "icv_s8_owns_cFFT_1_64fc", "Java_org_opencv_objdetect_HOGDescriptor_get_1signedGradient_10", "icv_h9_ownippiFilterMin_8u_Row_h9l9", "_ZN2cv9SparseMat13resizeHashTabEj", "icv_g9_ippiMean_16u_C4R", "icv_h9_ownSS1_72_8u", "icv_s8_ownpi_AndC_8u_C3R", "icv_h9_ownippiFilterxBrd_32f_C1R", "icv_p8_ippiMorphBlackhat_32f_C4R_L", "icv_p8_ippsMul_32fc", "icv_h9_ippiConvert_8u16u_C1R", "icv_g9_owniFilter32f_16s_C1R_g9e9_6", "icv_p8_ownNormRel_L2_8u_C1MR_V8", "icv_h9_ippiDilateInit_L", "icv_h9_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_H9L9cn", "icv_s8_ownpi_Rotate90_64_C1R", "icv_h9_ownpi_WarpAffine_NN_Repl_64f_C1", "iwTypeGetMax", "_ZN2cv4UMat3eyeEiii", "icv_w7_ippiMaxIndx_16u_C1R", "Java_org_opencv_imgproc_Imgproc_boxFilter_10", "_ZNK2cv3ocl12PlatformInfo9getDeviceERNS0_6DeviceEi", "icv_h9_ippiResizeLinear_32f_C1R_L", "ippicviDotProd_8u64f_C1R", "icv_p8_ownSS1_21_16s", "icv_h9_ownscDftInv_Prime16_32fc", "cvDotProduct", "icv_w7_ownResize1Lanczos3_8u", "icv_g9_ownpi_SimpleRotate_16u_C3R", "icv_p8_owniScaleC_16s32s_C1R_acc", "icv_h9_ippsMaxEvery_32f", "icv_p8_ippsMinEvery_32f", "icv_h9_owns_cFFTfwd_8_scale_32fc", "icv_h9_ownFilterColumn32f_16u_C1R_g9e9", "_ZNSt9exceptionD2Ev", "icv_p8_ownscDFTinv_15_scale_64fc", "icv_p8_ownCopySubpixIntersect_16u32f_C1R_W7", "icv_g9_ownsrDFTfwd_5_scale_64f", "icv_h9_ownSS4_21_16u", "icv_p8_owniScaleC_16u64f_C1R_fst", "icv_p8_ownAddWeighted_8u32f_C1IR_P8", "icv_p8_ownsInitTabDftDir_64f", "ippicvsSqrt_64f_A50", "icv_s8_owniGetRectBottom_32f", "Java_org_opencv_imgproc_Subdiv2D_delete", "icv_p8_ownpi_WarpAffineLinear_16u_C1R", "icv_w7_ippiErode_8u_C1R_L", "icv_w7_Moments16uC1R_64f_FAST", "icv_w7_ownFilterBilateralBorder", "llwiSet", "icv_h9_ippiMorphGetSpecSize_L", "_ZN2cv4FASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEib", "_ZN2cv17FlannBasedMatcher5trainEv", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_W7", "icv_w7_ownpi_WarpAffineSimpleNearest_16u_C4R", "ippicviScaleC_16s64f_C1R", "icv_s8_cv_ownippiFilterMax_8u_Col", "icv_g9_ownsFFTGetBufSize_R_64f", "icv_h9_ippiMirror_16s_C3IR", "icv_h9_ownpi_Or_8u_C1R", "icv_s8_ownpi_SimpleRotate_16s_C1R", "icv_w7_ownsrDftFwdRecombine_32f", "icv_s8_ippsSin_64f_A53", "icv_p8_ownscDftFwd_Fact4_64fc", "icv_p8_ownpi_WarpAffine_NN_Repl_32f_C1", "icv_g9_ippiSwapChannels_16u_C3R", "icv_g9_ippiMorphInit_L", "icv_h9_owniFilter32f_8u_C1R_g9e9_4", "icv_g9_ippiResizeGetBorderSize_L", "icv_p8_ownpi_WarpSimpleCubicInit", "icv_h9_owns_rFFTinv_32_scale_32f", "icv_s8_ownpi_WarpAffine_NN_8_P3", "icv_p8_ownCalcBorderR3Cubic32f", "ippicviCopy_16u_C4P4R", "icv_s8_ownippiFilterMedian_16s_C1R_5x5", "_ZN2cv4cuda7HostMem7releaseEv", "_ZN2cv8scaleAddERKNS_11_InputArrayEdS2_RKNS_12_OutputArrayE", "icv_w7_ownpi_WarpAffine_L_Const_64f_C3", "Java_org_opencv_video_FarnebackOpticalFlow_getPolyN_10", "icv_s8_ownCanny_32f8u_C1R_3_32s_W7", "icv_h9_ippiScaleC_32f_C1IR", "icv_h9_ownResize1Linear64f", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC1Ev", "icv_p8_ownpi_dInterVector_L_16u_P4", "_ZN10__cxxabiv121__vmi_class_type_infoD0Ev", "icv_p8_ippiScaleC_8s32s_C1R", "_ZN2cv6detail18SurfFeaturesFinderC1Ediiii", "_ZN2cv3hal8CholeskyEPdjiS1_ji", "icv_p8_ownsrDFTfwd_3_64f", "Java_org_opencv_dnn_Net_getMemoryConsumption_11", "icv_h9_ippiMorphClose_8u_C3R_L", "icv_w7_ownscDftInv_Fact_32fc", "icv_w7_owniAutoSS_C1R", "Java_org_opencv_imgproc_Imgproc_spatialGradient_12", "_ZN2cv10PCAComputeERKNS_11_InputArrayERKNS_17_InputOutputArrayERKNS_12_OutputArrayEd", "icv_p8_owns_cFFT_2_scale_64fc", "ippicviDFTInit_R_32f", "icv_s8_ownpi_WarpAffine_C_Transp_32f_C3", "icv_s8_ippiAddSquare_32f_C1IMR", "own_ipps_reduce_pio2d", "cvUnregisterType", "icv_p8_owniCopyMirrorBorder_32s_C1R", "_ZN2cv10BOWTrainerC2Ev", "icv_p8_ippiNorm_Inf_32f_C3CMR", "icv_s8_ippiMinMaxIndx_16u_C1MR", "icv_p8_owniFlip_32s_C4I_W7", "icv_s8_ownResize1Antialiasing_16u", "icv_p8_ownNormRel_Inf_32f_C3CMR_W7", "icv_p8_owniTranspose_16u_C1R_W7", "icv_w7_ownNormDiff_L1_32f_C3CMR_W7", "icv_s8_ownippsCnvrtFin_64f32s_Sfs", "ippicviResizeAntialiasingLinearInit_L", "icv_p8_BUFSIZE_FUNC", "icv_h9_ownippiFilterMin_32f_RowCol_C3_h9l9", "icv_g9_owns_cFft_BlkSplit_64fc", "icv_s8_ownSum_8u_C3CMR_V8", "icv_g9_owniCopyMirrorBorder_32s_C3IR", "_ZN10__cxxabiv117__class_type_infoD0Ev", "ippicviResizeSuper_32f_C1R_L", "icv_g9_owniResizeNearest_8u_C3R", "icv_s8_ownpi_WarpAffineCubic_8u_C1R", "icv_s8_owns_rFFTfwd_32_scale_32f", "_ZNK2cv7MatExpr3mulERKNS_3MatEd", "_ZN3tbb10interface58internal9task_base7destroyERNS_4taskE", "icv_h9_ownsrDFTfwd_6_scale_64f", "icv_p8_ownCalcBorderR4Antialiasing_8u", "icv_w7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "icv_w7_ownpi_dInterPoint_C_Pixel_32f", "icv_p8_owniResizeLinear_64f_C3R", "icv_s8_ippiMinMax_16u_C1R", "_ZN2cv13applyColorMapERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_w7_owniNormLevel_8u_C1R", "icv_w7_owniConvert_8s8u_ccode", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_W7", "icv_s8_ippiCopy_32s_C4MR", "icv_p8_ownBuildWarpFilter_32f_Q14", "icv_p8_ippiScaleC_8s16u_C1R", "icv_p8_ownSharpenRow_8u_C3", "icv_p8_ownippsCnvrtFin_32f8u_Sfs", "cvPyrUp", "icv_s8_ippiCopyReplicateBorder_32f_C4R", "icv_w7_ippiMirror_32f_C4R", "icv_h9_ownSS4_31_32f", "icv_s8_ownRectStdDev_32s32f_C1R_V8", "_ZN2cv3powERKNS_11_InputArrayEdRKNS_12_OutputArrayE", "icv_h9_owniScaleC_8u32s_C1R_acc", "cvPrevTreeNode", "icv_g9_ippiScaleC_8u_C1R", "icv_g9_owniCrossCorrValid_NormLevel_8u_C1R", "_ZN2cv3hal15cvtBGR5x5toGrayEPKhjPhjiii", "icv_s8_owniTranspose_16u_C1R_W7", "icv_s8_ippiResizeLinear_16s_C4R_L", "icv_g9_ownCalcBorderR1Cubic16u", "Java_org_opencv_ml_ParamGrid_get_1logStep_10", "_ZN2cv5instr8NodeDataD1Ev", "icv_s8_cv_ownippiFilterMin_8u_Col", "icv_w7_owniConvert_8u32f_AC4_W7", "ippicvInit", "icv_h9_ownSS3_65_32f", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_X_W7cn", "_ZN2cv14fillConvexPolyERNS_3MatEPKNS_6Point_IiEEiRKNS_7Scalar_IdEEii", "icv_h9_ownResize1Nearest32f", "icv_p8_ownLaplRow5x5_32f_C1", "icv_g9_ippsSortRadixIndexAscend_32f", "icv_s8_ownSS1_21_16s", "icv_w7_ownNorm_L2_32f_C1MR_W7", "icv_s8_owns_rFFTinv_16_scale_64f", "icv_p8_ippiMinEigenVal_8u32f_C1R", "_ZN2cv17FlannBasedMatcher17convertToDMatchesERKNS_17DescriptorMatcher20DescriptorCollectionERKNS_3MatES7_RSt6vectorIS8_INS_6DMatchESaIS9_EESaISB_EE", "icv_h9_owns_cFFTfwd_8_64fc", "iwVector_Resize", "icv_s8_ownsrDFTfwd_5_64f", "icv_h9_ownpi_WarpAffineLinear_16s_C4R", "icv_h9_owniSet_8u_C4R", "cvSum", "icv_g9_owniSet_8u_C3MR", "icv_g9_ippiAddProduct_8u32f_C1IMR", "icv_p8_ippiAddSquare_16u32f_C1IR", "icv_g9_ownColCubic16u", "icv_w7_ownWarpSimple4Nearest8u", "icv_s8_ippiTranspose_32s_C4IR", "icv_p8_ownRow4Lanczos3_16u", "icv_h9_owniScaleC_16s8u_C1R_acc", "icv_p8_ownpi_OrC_16u_AC4R", "Java_org_opencv_ml_ANN_1MLP_setActivationFunction_10", "icv_w7_ownpi_dInterVectorClip_NN_16_C3", "icv_p8_ownColLinear32f", "icv_w7_ippiSub_8u_C3RSfs", "icv_s8_ownpi_NormInfRel_16u_C1R", "icv_g9_ownpi_Rotate90_B_32_C1R", "icv_p8_owniCopy32s_C4P4_W7_NT", "icv_p8_ownAConvert32s_8u_AC4R", "icv_g9_ippiRectStdDev_32f_C1R", "icv_g9_ownResize4Lanczos2_16s", "ippicviResizeLanczos_8u_C4R_L", "icv_s8_ippsDCTFwdGetSize_32f", "icv_p8_ownpi_AndC_8u_C4R", "icv_g9_owniGetRectLeftBF_32f_C1R", "icv_h9_ownsrDftFwdRecombine_64f", "icv_g9_computeCubicCoeffs", "icv_s8_ownpi_WarpAffine_NN_32_C1", "cvMakeHistHeaderForArray", "icv_h9_ippiMarkSpeckles_16s_C1IR", "ippicviMoments64f_16u_C1R", "icv_s8_ownscDFTfwd_11_scale_64fc", "icv_s8_ippiResizeCubic_16u_C3R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_P8Y8cn", "icv_s8_ownCalcBorderR4Linear64f", "icv_h9_ippiDotProd_16u64f_C1R", "_ZN2cv16FileNodeIteratorppEi", "icv_g9_ownCalcBorderR3Linear64f", "icv_p8_owns_cFft_BlkSplit_32fc", "icv_w7_owns_cFftFwd_Large_32fc", "icv_w7_ippiMirror_16u_C1R", "icv_s8_owniFilter_32f_C4R_v8u8_8NA", "icv_w7_ownLaplace3x3Row_32f_C4", "icv_w7_ownpi_WarpSimpleNearest_16u_C4R", "icv_s8_ownscDftFwd_Fact_32fc", "_ZN2cv9videostab17MotionEstimatorL1C2ENS0_11MotionModelE", "Java_org_opencv_core_Mat_n_1Mat__IIIDDDD", "icv_g9_ippiSet_32f_C4R", "icv_p8_ownSS1_98_16s", "_ZN2cv9SparseMatC2ERKNS_3MatE", "icv_s8_ownpi_WarpAffine_C_Transp_16u_C1", "icv_h9_ippiResizeSuper_16s_C4R_L", "icv_g9_ippiCopy_8u_P4C4R", "icv_g9_ownResize1Lanczos3_8u", "icv_p8_ownRectStdDev_32s32f_C1R_V8", "Java_org_opencv_video_DualTVL1OpticalFlow_getTau_10", "icv_g9_ownSS4_53_32f", "icv_s8_ownpi_WarpAffine_L_Const_16s_C4", "icv_p8_ippiWarpAffineCubic_64f_C1R", "own_ipps_dSin_SC_HA", "icv_w7_ippiScaleC_8u_C1IR", "icv_p8_owniFlip_8u_C3", "icv_p8_ownpi_Sum_32f_C4R", "icv_g9_owniFlipCopy_32s_C3", "icv_w7_ownscrDftFwd_Prime5_64f", "_ZN2cv2ml9ParamGridC1Eddd", "icv_w7_owniConvert_8s32f_AC4_W7", "icv_s8_ippiWarpAffineNearest_16s_C1R", "icv_p8_ownpi_AndC_32s_C1R", "icv_h9_ownSS1_83_32f", "icv_s8_piGradientSobel8u_c1", "icv_p8_ownsrDFTfwd_11_32f", "Java_org_opencv_photo_Photo_createTonemapDrago_10", "icv_s8_ippiMorphClose_16s_C1R_L", "icv_h9_owniCopyMirrorBorder_8u_C1IR", "icv_w7_ownpi_WarpSimpleCubic_8u_C4R", "icv_g9_owniFilter32f_16u_C3R_g9e9_2", "cvInitLineIterator", "icv_p8_ippiFilterBorder_16u_C3R", "icv_s8_ownsAdd_8u_PosSfs", "icv_h9_ownpi_WarpAffine_L_Mem_32f_C1", "Java_org_opencv_videoio_VideoCapture_open_13", "icv_p8_ownscrDftFwd_Prime8_64f", "icv_p8_ownscDftInv_Fact3_32fc", "icv_h9_ippiNormRel_L2_16u_C1MR", "icv_g9_ownLanczosKernel3", "_Znaj", "WebPPictureImportRGBA", "icv_s8_ippiMax_16u_C1R", "icv_p8_ownpi_WarpAffine_L_Mem_64f_C4", "Java_org_opencv_calib3d_Calib3d_findFundamentalMat_11", "ippicviDistanceTransform_5x5_8u32f_C1R", "icv_h9_ippiResizeSuper_8u_C4R_L", "_ZN2cv6detail18GraphCutSeamFinder4Impl20setGraphWeightsColorERKNS_3MatES5_S5_S5_R7GCGraphIfE", "icv_s8_ownsrDFTfwd_5_32f", "icv_g9_ownSS3_43_16u", "_ZNK2cv4cuda10DeviceInfo8memPitchEv", "icv_h9_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_s8_ownSS1_52_16u", "icv_s8_ownpi_WarpAffineLinear_64f_C4R", "icv_p8_ownNormRel_L2_8u_C3CMR_V8", "icv_w7_owniConvert_16u32f_AC4_W7", "icv_p8_ownpi_WarpSimpleLinearInit", "icv_g9_ownCalcBorderR1Linear16u", "_ZN3tbb8internal15runtime_warningEPKcz", "_ZN2cv21invertAffineTransformERKNS_11_InputArrayERKNS_12_OutputArrayE", "Java_org_opencv_ml_LogisticRegression_setTermCriteria_10", "icv_g9_owniScaleC_32s8u_C1R_acc", "icv_s8_ippsMaxEvery_32f", "icv_s8_ownscDftFwd_Fact4_64fc", "icv_w7_ippiTranspose_16s_C3R", "icv_w7_ownNormRel_L1_16u_C3CMR_W7", "icv_w7_ownippiFilterMax_16s_Row", "icv_w7_ippiNormRel_L2_8u_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_setEpsilon_10", "icv_s8_ippiTranspose_8u_C3IR", "icv_h9_ippiNormDiff_L1_32f_C1R", "ippicviThreshold_GT_8u_C1R", "icv_p8_ownpi_dInterVectorClip_L_16u_C4", "icv_g9_owns_cRadix4Fwd_64fc", "icv_p8_ownpi_WarpAffineLinear_32f_C3R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_V8", "icv_h9_ippiWarpAffineLinearInit", "cvOr", "icv_p8_ippiCopyReplicateBorder_8u_C1R", "icv_p8_owniAutoNormMean_32f_C1R", "icv_p8_ownFilterBoxBorderInMem3x3_16s_C1R", "ippicviResizeAntialiasing_8u_C3R_L", "_ZN2cv3ocl6Kernel6createEPKcRKNS0_13ProgramSourceERKNS_6StringEPS7_", "_ZN2cv3dnn19experimental_dnn_v112LayerFactory19createLayerInstanceERKNS_6StringERNS1_11LayerParamsE", "icv_w7_ippiTranspose_32s_C1IR", "icv_g9_owniFilter_32f_C1R_g9e9_8", "icv_p8_ownsrDFTinv_12_64f", "ippicviScaleC_16u16s_C1R", "icv_h9_ownpi_WarpAffine_C_Repl_16u_C4", "icv_p8_ownNormDiff_Inf_32f_C3CMR_W7", "icv_g9_ippiMorphOpen_8u_C3R_L", "icv_h9_ownRow1Antialiasing_8u", "icv_h9_ownRow3Lanczos3_16s", "icv_s8_ippiResizeLanczos_16s_C4R_L", "icv_s8_ownColLanczos3_16u", "Java_org_opencv_features2d_DescriptorMatcher_create_11", "icv_s8_ippiMirror_32s_C4R", "icv_w7_cv_ownippiFilterMax_32f_Msk", "icv_w7_ownResize3Linear8u", "_ZN2cv8superres9arrGetMatERKNS_11_InputArrayERNS_3MatE", "Java_org_opencv_imgproc_Imgproc_goodFeaturesToTrack_11", "Java_org_opencv_features2d_Params_get_1maxConvexity_10", "_ZN2cv11VideoWriterC1ERKNS_6StringEidNS_5Size_IiEEb", "icv_g9_ippsCopy_8u", "icv_p8_ippiResizeAntialiasing_16s_C1R_L", "icv_h9_owns_initDctFwd_Fft_32f", "Java_org_opencv_features2d_GFTTDetector_setQualityLevel_10", "Java_org_opencv_ml_TrainData_getResponses_10", "icv_w7_ownsAdd_32f_I", "icv_h9_ownNorm_Inf_8u_C3CMR_HSW", "icv_h9_ippiCopy_16s_C1R", "icv_g9_ippiErode_16u_C1R_L", "icv_s8_ippsDFTFwd_CToC_32fc", "Java_org_opencv_core_Core_getCPUTickCount_10", "icv_p8_ippiConvert_8u32f_C1R", "icv_g9_ownSS3_52_32f", "icv_h9_ippiNormDiff_L1_8u_C1R", "_ZN2cv3hal5sub8uEPKhjS2_jPhjiiPv", "icv_g9_ippiAddWeighted_8u32f_C1IR", "cvStartNextStream", "icv_s8_ownpi_dInterVectorClip_NN_32_C4", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_G9E9cn", "icv_h9_ippiWarpAffineNearest_16s_C4R", "icv_s8_ippiScaleC_32s_C1R", "icv_s8_ippiMean_16u_C1R", "icv_s8_ownippiFilterMedianHoriz_16s_C1R_5x1", "icv_h9_ippsFFTInit_R_64f", "icv_s8_ownscDftFwd_Fact11_64fc", "icv_s8_ownpi_OrC_8u_AC4R", "icv_g9_ownWarpSimple4Nearest32f", "_Z24List_to_vector_Ptr_LayerP7_JNIEnvP8_jobject", "icv_p8_ownpi_WarpAffine_C_Const_16u_C1", "icv_h9_ownpi_Sum_8u_C1R", "icv_g9_ownpi_WarpAffineNearest_64f_C4R", "icv_g9_ownpi_WarpSimpleLinear_32f_C4R", "icv_w7_ippiMorphBlackhat_8u_C1R_L", "icv_w7_ownscDFTfwd_15_scale_64fc", "_ZN3tbb8internal5arena7processERNS0_17generic_schedulerE", "ippicviTranspose_8u_C4IR", "icv_g9_owniScaleC_32f8u_C1R_fst", "icv_w7_ippiGradientVectorGetBufferSize", "_ZN2cv3dnn19experimental_dnn_v13Net7connectEiiii", "icv_w7_owniResizeAntialiasingCubicInit_L", "icv_w7_ownpi_CmpEQ_16s_C1R", "icv_w7_owniFilterBilateralR2_InMem_8u_C1R_px", "icv_w7_owns_cFFTfwd_16_scale_32fc", "icv_s8_ownSS1_94_8u", "icv_w7_owniGetRectBottomBF_32f_C3R", "icv_s8_owns_cFFTinv_16_scale_32fc", "icv_p8_ownLaplRow5x5_8u_C1", "icv_h9_ippsCeilOne", "ippicviResizeAntialiasingCubicInit_L", "icv_h9_owniFilterMedianBorderInMem_16s_C1R", "Java_org_opencv_core_Mat_n_1empty", "icv_w7_ownippsSqrt_16sc_ASM_SF", "icv_g9_owniResizeLanczos_16u_C3R", "icv_h9_ownpi_WarpSimpleNearest_16u_C3R", "icv_w7_ownpi_OrC_32s_AC4R", "_ZN2cv8UMatDataC1EPKNS_12MatAllocatorE", "icv_w7_ippiDilate_32f_C1R_L", "icv_h9_owniFilter32f_16s_C3R_g9e9_3", "icv_s8_ownColLanczos3_8u", "icv_w7_ippiCopyMirrorBorder_8u_C1R", "icv_p8_owniFilterBilateralR1_InMem_32f_C3R_L", "icv_g9_ownMinMaxIndx_16u_C1R_1", "icv_p8_ownpi_Sum_8u_C1R", "cvCreateMatNDHeader", "icv_h9_owniResizeLanczos_8u_C1R", "icv_p8_ownSS4_32_16s", "icv_p8_ippiSet_16u_C1R", "_ZN3tbb8internal6market13arena_in_needEPNS0_5arenaE", "icv_w7_owns_cFFTfwd_32_scale_64fc", "icv_h9_owniFilterBilateralR1_InMem_32f_C1R_L", "icv_h9_ownscDFTfwd_12_32fc", "icv_w7_ippiAdd_16u_C1RSfs", "Java_org_opencv_core_Core_cubeRoot_10", "icv_p8_ownippiFilterMedianVert_16u_1x5", "icv_w7_cv_ownippiFilterMax_16s_Col", "icv_h9_owniFilter_32f_C4R_g9e9_2", "icv_h9_owniScaleC_8u32s_C1R_fst", "icv_h9_ownsGetSizeDftPrimeFact_32f_32f", "icv_s8_ownCalcBorderR4Lanczos3_32f", "icv_s8_ippiWarpAffineNearest_32f_C3R", "_ZN2cv8solveP3PERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_i", "icv_w7_ownscDft_Dir_64f", "icv_w7_ownLaplCol5x5_16s_C1", "ippicviSet_32f_C4R", "icv_s8_owns_rFFTinv_4_32f", "icv_w7_ownpi_WarpAffine_NN_Repl_64f_C4", "icv_w7_ippiHistogramInit", "icv_w7_owniTranspose_8u_C1IR_W7", "icv_h9_ownpi_NormInfDiff_8u_C1R", "_ZNK2cv12_OutputArray6createEiiiibi", "icv_s8_ownpi_WarpSimpleGetSize", "_ZN2cv21DetectionBasedTracker13setParametersERKNS0_10ParametersE", "icv_s8_ownpi_SimpleRotate_16u_C3R", "_ZNK2cv3ocl7Context6useSVMEv", "icv_w7_owngetSizeBufferOfBorders", "icv_s8_ownscDftFwd_Prime16_64fc", "icv_h9_ippiWarpAffineNearest_16s_C1R", "Java_org_opencv_video_KalmanFilter_get_1measurementMatrix_10", "icv_g9_ownpi_WarpAffine_L_Repl_64f_C1", "icv_h9_ownpi_WarpAffine_NN_Repl_64f_C3", "_ZNK2cv9Feature2D14descriptorSizeEv", "icv_g9_ippiNormDiff_Inf_8u_C3CMR", "icv_h9_owniTranspose32s_C4R_core2", "icv_p8_owniClipRectZeroTail_8u32f_C1R", "icv_g9_owniFilterBilateralR2_InMem_8u_C1R_L", "ippicviWarpAffineCubic_64f_C1R", "icv_p8_ownpi_Xor_32s_AC4R", "icv_p8_ownippsCnvrt_16f32f", "icv_h9_owniFilter32f_16u_C1R_g9e9_3", "icv_s8_ippiFilterBorder_16s_C1R", "icv_w7_ownAddWeighted_32f_C1IMR_W7", "icv_s8_owns_cRadix4Fwd_32fc", "icv_s8_ownSS3_21_16s", "icv_w7_ippiResizeCubic_16s_C3R_L", "Java_org_opencv_ml_ANN_1MLP_delete", "_ZN2cvmlERKNS_7MatExprES2_", "icv_h9_ippiFilterBoxBorder_16u_C1R", "icv_h9_ownCalcBorderR1Linear64f", "icv_p8_ippiResizeSuper_16s_C1R_L", "icv_h9_owniCopy_8u_P4C4R", "icv_w7_ownRow1Cubic32f", "_ZN2cv9videostab17WeightingDeblurerC2Ev", "icv_p8_owncalcMinValues_W7", "icv_s8_ownpi_NormInf_16s_C1R", "icv_p8_ownsrDFTinv_6_scale_32f", "icv_w7_ownpi_CountInRange_32f_C1R", "icv_h9_ownsrDFTfwd_9_scale_64f", "_ZN2cv12countNonZeroERKNS_11_InputArrayE", "icv_h9_owniResizeAntialiasingLanczosInit_L", "Java_org_opencv_video_BackgroundSubtractorKNN_setkNNSamples_10", "icv_h9_owniCopyMirrorBorder_8u_C1R_L", "icv_g9_owniScaleC_32s16s_C1R_acc", "icv_s8_ownNorm_Inf_32f_C3CMR_W7", "_ZN2cv9videostab17TwoPassStabilizer9nextFrameEv", "icv_p8_ownpis_Max_32f_C3", "icv_w7_ownpi_WarpAffine_L_Repl_64f_C1", "icv_w7_ownscDftFwd_PrimeFact_32fc", "cvCreateMatND", "icv_s8_ippiSub_8u_C1RSfs", "icv_h9_owniResizeNearest_16s_C1R", "icv_p8_IsOverlapedROI", "icv_w7_ownCopySubpix_8u32f_C1R_new_W7", "Java_org_opencv_imgproc_CLAHE_delete", "icv_p8_ownSS1vertical_16s", "icv_g9_owniFlipCopy_32s_C1", "icv_p8_ippiWarpAffineCubicInit", "icv_s8_ippiCopy_32f_P3C3R", "ippicviFilterBoxBorder_16u_C4R", "icv_w7_owniTranspose_16u_C4R_W7", "icv_g9_ippiCopyConstBorder_16u_C4R", "icv_s8_ownpi_NormL2Diff_32f_C1R", "icv_p8_ippiCopyConstBorder_8u_C4R", "icv_w7_ownscDFTfwd_9_scale_32fc", "icv_s8_owniResizeGetBorderSize", "icv_g9_ownpi_WarpAffineSimpleLinear_16s_C4R", "icv_g9_ippiSet_32f_C3MR", "Java_org_opencv_core_Mat_n_1mul__JJD", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_12", "_ZN2cv22SparsePyrLKOpticalFlow6createENS_5Size_IiEEiNS_12TermCriteriaEid", "icv_s8_ownFilter_32f_C4R", "icv_s8_ownpi_WarpSimpleCubic_16s_C4R", "cvRawDataToScalar", "icv_h9_owniGetRectLeft_32f", "icv_g9_ownsGetSizeDftPrimeFact_64f_64f", "icv_w7_ipMirror135_16uC1R", "_ZN2cv3dnn19experimental_dnn_v110PowerLayer6createERKNS1_11LayerParamsE", "icv_g9_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_n0_own_ipps_dCos_W7EPnnn", "icv_g9_ippiFilterBoxBorder_8u_C3R", "icv_g9_ippiFilterMedianBorder_8u_C4R", "icv_s8_ownps_Add_16u_Sfs", "icv_p8_ownSS4_54_16s", "ippicviThreshold_LTVal_8u_C1R", "icv_w7_owns_rFFTfwd_4_64f", "icv_g9_ownFilterRow32f_16u_C3R_g9e9", "icv_w7_owniGetRectLeft_16s", "_ZN3tbb8internal20itt_set_sync_name_v3EPvPKc", "icv_w7_ownippiFilterMedianVert_8u_1x5", "icv_g9_ippsLn_32f_A21", "icv_s8_ownscDFTfwd_10_scale_64fc", "icv_s8_ownCopySubpix_8u_C1R_W7", "icv_h9_owniGetRectTopBF_32f_C3R", "icv_p8_owns_cFFTinv_32_scale_32fc", "icv_w7_owniConvert_32s8s_AC4_W7", "icv_s8_owniConvert_8s32s_W7", "icv_p8_owniConvert_8u32f_AC4_W7", "icv_w7_ownscDFTinv_11_32fc", "icv_p8_ownscDftFwd_Fact7_64fc", "icv_s8_ownippiFilterMedianCross_8u_C3R_3x3", "_ZNK2cv3Mat11checkVectorEiib", "icv_s8_ippiCopyConstBorder_32f_C3R", "icv_p8_ippiFilterMax_32f_Col_AC4_A6", "icv_w7_ownippiFilterMedianVert_16u_1x5", "icv_g9_owns_sDctFwd_Fft_32f", "icv_s8_ippiAdd_16u32f_C1IR", "icv_p8_ippiAnd_8u_C1R", "icv_p8_ippiWarpAffineNearest_8u_C1R", "icv_w7_ippiMirror_16s_C1IR", "icv_p8_ownDistanceTransform_3x3_8u_C1R_F", "icv_w7_owniResizeLanczos_32f_C1R", "icv_w7_ippiResizeSuper_16u_C3R_L", "icv_s8_owniAutoSSFull_C1R", "icv_s8_ownscrDftInv_Prime8_64f", "icv_p8_ownscDFTinv_14_32fc", "_ZN10__cxxabiv112__unexpectedEPFvvE", "icv_w7_ownpis_Min_32f_C3", "ippicviScaleC_16u_C1R", "icv_g9_ippiDilate_32f_C4R_L", "_ZN2cv5instr8setFlagsENS0_5FLAGSE", "icv_s8_ownpi_WarpAffine_NN_Repl_8u_C4", "icv_p8_ippiFilterScharrVertMaskBorder_16s_C1R", "icv_p8_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_h9_owniFilter32f_8u_C3R_g9e9_7", "_ZNK2cv11FileStorageixERKNS_6StringE", "icv_p8_ownpi_WarpAffine_L_32f_P3", "icv_p8_ownippiFilterMedianHoriz_16s_C3R_5x1", "icv_p8_owns_cFFTinv_32_scale_64fc", "Java_org_opencv_video_Video_calcOpticalFlowFarneback_10", "icv_p8_owniGetRectRightBF_8u_C1R", "icv_p8_owniFilterBilateralCom_InMem_8u_C1R_L", "icv_p8_owncvGetCacheSize", "icv_g9_ippiDilate_8u_C4R_L", "icv_p8_ownscDFTinv_9_32fc", "ippicviNormDiff_L2_32f_C1R", "icv_s8_ippiCopyMirrorBorder_32s_C1IR", "ippicviSwapChannels_16u_C4R", "_ZN2cv5instr18useInstrumentationEv", "icv_w7_ownpi_WarpAffine_NN_Const_8u_C3", "icv_g9_ownpi_WarpAffineSimpleNearest_64f_C3R", "icv_w7_ownCalcBorderR1Lanczos3_16u", "icv_g9_ownCalcBorderR1Cubic16s", "icv_ipp_is_htt_extension", "icv_p8_ippiResizeLinear_64f_C1R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_W7", "icv_h9_ippiCopy_8u_C3R_L", "icv_g9_ippsCopy_32f", "_ZN2cv5flann5IndexD1Ev", "icv_p8_ippiDotProd_32f64f_C1R", "icv_w7_ownscDFTfwd_7_32fc", "Java_org_opencv_calib3d_Calib3d_initUndistortRectifyMap_10", "_ZNK2cv2ml6KDTree11findNearestERKNS_11_InputArrayEiiRKNS_12_OutputArrayES7_S7_S7_", "icv_w7_ippiFilterMedian_8u_C3R_3x3_A6", "Java_org_opencv_ml_TrainData_create_11", "_ZN2cv4cuda6StreamC2ERKNS_3PtrINS0_6GpuMat9AllocatorEEE", "icv_w7_ownpi_ClipLower", "icv_h9_ownNormDiff_L2_16u_C1MR_HSW", "icv_p8_ownscDftFwd_Prime3_32fc", "cvCheckContourConvexity", "icv_p8_owniFilter_32f_C1R_v8u8_4NA", "icv_g9_ownResize3Lanczos3_16u", "icv_s8_ippiNormDiff_L2_8u_C1MR", "icv_p8_ownFilterBoxBorder_8u_AC4R", "ippicviFilterBorder_8u_C4R", "_ZN2cv21find4QuadCornerSubpixERKNS_11_InputArrayERKNS_17_InputOutputArrayENS_5Size_IiEE", "icv_g9_ippiNorm_L2_8u_C1MR", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarInit_10", "icv_p8_ippsCopy_32s", "icv_g9_ownpis_Sum_16u_C1", "icv_s8_owniFilter_32f_C4R_v8u8_2NA", "icv_s8_ownSS4_94_16u", "_ZNK2cv4cuda10DeviceInfo18maxTexture2DLinearEv", "icv_h9_ownNormDiff_L1_32f_C1MR_HSW", "icv_w7_ownpi_And_32s_AC4R", "icv_s8_ippiScaleC_8s_C1IR", "icv_h9_ownCommonLoop_8u_AC4R", "Java_org_opencv_features2d_MSER_getMaxArea_10", "icv_h9_ippsSortRadixIndexDescend_32f", "_ZN3tbb8internal3rml11tbb_factory11make_serverERPNS1_10tbb_serverERNS1_10tbb_clientE", "icv_h9_ownpi_WarpAffineSimpleNearest_64f_C3R", "icv_p8_piGradientScharr8u_c1", "llwiSetMask", "icv_w7_owniCopyBF_32f_C1R", "icv_p8_ippsDFTInv_PackToR_64f", "icv_w7_owns_initTabTwdRealRec_64f", "icv_p8_ippiCopy_16u_C4C1R", "WebPPictureARGBToYUVA", "_Unwind_SetGR", "cvResizeWindow", "icv_w7_ownpi_WarpAffineSimpleNearest_16s_C4R", "Java_org_opencv_calib3d_Calib3d_calibrationMatrixValues_10", "icv_ipp_is_em64t_extension", "icv_g9_ippiSwapChannels_16u_C3C4R", "_ZN2cv17CommandLineParser5aboutERKNS_6StringE", "Java_org_opencv_core_Core_useIPP_10", "icv_s8_ownpi_AndC_32s_AC4R", "icv_h9_ippiSwapChannels_32f_C3R", "_ZN2cv17CascadeClassifier16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EEdiiNS_5Size_IiEESB_", "icv_g9_ownpi_WarpSimpleNearest_32f_C1R", "icv_w7_ippiCopyMirrorBorder_8u_C1IR", "icv_g9_ippsDFTFwd_CToC_32fc", "Java_org_opencv_core_Mat_n_1step1__JI", "icv_w7_owniCopyBF_8u_C1R", "icv_s8_ownsFFTGetBufSize_C_32fc", "icv_p8_ippiNorm_Inf_16u_C1MR", "_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_", "Java_org_opencv_objdetect_HOGDescriptor_detectMultiScale_11", "icv_h9_ippsDFTInv_CToC_64fc", "_ZN3tbb4task22spawn_and_wait_for_allERNS_9task_listE", "icv_w7_ownpi_WarpAffineSimpleLinear_32f_C3R", "icv_g9_ownSS4vertical_16u", "icv_p8_ownNorm_Inf_16u_C1MR_W7", "ippicviFilterBorder_32f_C4R", "icv_p8_ownippiFilterMedian_8u_C4R", "icv_s8_ownscDftInv_Prime7_64fc", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_V8", "icv_w7_owniCrossCorrValid_NormLevel_32f_C1R", "icv_w7_ownpi_Sum_32f_C1R", "_ZN2cv3hal11cvtLabtoBGREPKhjPhjiiiibbb", "icv_h9_owniDenominator_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_W7_sym", "Java_org_opencv_dnn_Net_getLayerShapes_11", "icv_h9_ippiMax_8u_C1R", "icv_p8_ownSS3_8u", "icv_h9_ippiMaxIndx_16s_C1R", "icv_p8_ippiWarpAffineNearest_32f_C3R", "icv_w7_ownscDFTinv_5_64fc", "icv_w7_ippiFilterSobelHorizBorder_32f_C1R", "icv_s8_ownpi_WarpAffineSimpleNearest_64f_C4R", "icv_p8_owniFilter_32f_C4R_v8u8_8NA", "icv_s8_ownippiFilterMedianCross_16s_C3R_5x5", "icv_p8_ippiTranspose_32f_C3IR", "icv_p8_ownsAdd_8u_PosSfs", "icv_s8_ownSS3_52_16s", "icv_s8_ippiErode_16s_C1R_L", "_ZN2cv6detail19ExposureCompensator4feedERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_4UMatESaIS9_EESD_", "icv_p8_innerSwapChannels_16u_C4R", "icv_w7_ippiMarkSpeckles_8u_C1IR", "icv_h9_ippiResizeSuper_32f_C4R_L", "_ZN2cv3hal5DCT2D6createEiiii", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8", "icv_s8_ownippiFilterMedian_16u_C4R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_W7", "icv_w7_owns_initTabTwd_Large_64f", "icv_g9_owns_rFFTinv_32_64f", "icv_w7_ownpi_Rotate90_8_C3R", "icv_w7_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "icv_s8_owniFilter_32f_C4R_v8u8_6NA", "icv_w7_ownscDFTfwd_14_scale_64fc", "icv_s8_ownCopySubpix_16u32f_C1R_new_W7", "_ZN2cv5utils5trace7details8traceArgERKNS2_8TraceArgEx", "_ZNK2cv4cuda10DeviceInfo17concurrentKernelsEv", "icv_h9_ownsrDftInvRecombine_64f", "icv_s8_ippiMinMaxIndx_16u_C1R", "icv_w7_ownRow4Linear32f", "icv_p8_ownpi_WarpAffine_NN_Const_16s_C4", "icv_w7_ownsrDFTinv_5_scale_32f", "icv_h9_ippiCanny_32f8u_C1R", "icv_s8_ownpi_WarpAffineNearest_64f_C4R", "cvContourArea", "icv_s8_ownsrDFTfwd_15_64f", "icv_h9_ownSS4_43_32f", "icv_w7_ownippiThreshold_32f_AC4", "_ZN2cv9videostab14StabilizerBase14stabilizeFrameEv", "icv_p8_ownFilterBoxBorderInMem3x3_8u_C1R", "cvInitNArrayIterator", "icv_p8_ownsInitTabDftBase_64f", "icv_h9_ownSS1_52_8u", "icv_s8_ownsrDftFwdRecombine_32f", "icv_h9_ownsrDFTinv_10_32f", "icv_p8_ownpi_dInterVectorClip_NN_16_C4", "icv_p8_ippiMorphOpen_8u_C3R_L", "icv_p8_ownWarpSimple4Nearest64f", "Java_org_opencv_video_KalmanFilter_predict_10", "icv_p8_ippsDFTInit_R_32f", "cvKalmanPredict", "icv_s8_ippiHistogram_8u_C1R", "_ZN2cv4normERKNS_11_InputArrayES2_iS2_", "ippicviErode_16u_C1R_L", "icv_p8_owniResizeNearest_16s_C1R", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_setVocabulary_10", "cvPOSIT", "Java_org_opencv_video_FarnebackOpticalFlow_setWinSize_10", "_ZN2cv18SimpleBlobDetector6ParamsC1Ev", "icv_w7_owniGetRectComBF_8u_C1R", "Java_org_opencv_video_KalmanFilter_set_1statePre_10", "ippicviSum_32f_C3R", "icv_s8_myRGBToGray_32f_C3C1R", "icv_g9_ownCalcBorderR1Cubic8u", "icv_h9_cv_ownippiFilterMin_16u_Msk", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C3R_3x3_V8", "icv_p8_ownsMaxEvery_32f", "icv_w7_ippiFilterSobelVertBorder_32f_C1R", "icv_g9_ippiResizeLinear_32f_C3R_L", "icv_h9_ippiConvert_32f8u_C1RSfs", "icv_n0_own_ipps_sLn_P8EPnnn", "icv_p8_owniScaleC_16u32f_C1R_fst", "icv_g9_owns_initTabTwdCcsRec_32f", "_ZNK2cv3Mat7getUMatEiNS_14UMatUsageFlagsE", "icv_p8_ownscrDftFwd_Fact5_64f", "icv_p8_ownpi_Rotate90_B_64_C4R", "icv_p8_ippiConvert_16u16s_C1RSfs", "icv_g9_owniFilterBilateralR1_InMem_32f_C1R_px", "icv_g9_owniScaleC_8s64f_C1R_acc", "_ZN2cv9videostab27SparsePyrLkOptFlowEstimator3runERKNS_11_InputArrayES4_S4_RKNS_17_InputOutputArrayERKNS_12_OutputArrayESA_", "ippicviMirror_16s_C1R", "icv_h9_ippiCopyMirrorBorder_8u_C4IR", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_W7", "icv_g9_ippiNorm_Inf_16u_C3CMR", "icv_s8_ippiMirror_16s_C1R", "_ZN2cv10BriskLayerC1ERKS0_i", "icv_s8_ippiErode_8u_C4R_L", "icv_s8_ippiCopy_16u_P3C3R", "icv_h9_owniScaleC_16s16s_C1R_acc", "icv_g9_owniFilterBilateralR1_InMem_32f_C3R", "ippicviNorm_L1_32f_C3CMR", "icv_g9_ownpi_Rotate90_B_64_C3R", "Java_org_opencv_imgproc_Imgproc_distanceTransformWithLabels_11", "icv_w7_ownpi_WarpAffine_C_Mem_8u_C4", "icv_s8_ippiCanny_32f8u_C1R", "_ZN2cv3dnn19experimental_dnn_v113blobFromImageERKNS_3MatEdRKNS_5Size_IiEERKNS_7Scalar_IdEEb", "icv_w7_ownpi_Sum_8u_C1R", "icv_h9_owniConvert_16u16s_avx2", "icv_s8_owns_initTabTwdCcsRec_32f", "icv_s8_ownSumSq_32f_C3CR_smallsize_W7", "icv_s8_ippiScaleC_16u8s_C1R", "icv_h9_owns_cFFT_2_64fc", "icv_p8_ippiNormRel_Inf_32f_C1MR", "icv_w7_owns_rFFTfwd_32_64f", "icv_h9_ownippiFilterMedianVert_8u_1x5", "icv_p8_ownSS1_41_32f", "_ZN2cv3ocl12PlatformInfoC1Ev", "cvGetRows", "icv_s8_ownResize4Lanczos2_8u", "_ZN2cv23calibrationMatrixValuesERKNS_11_InputArrayENS_5Size_IiEEddRdS5_S5_RNS_6Point_IdEES5_", "Java_org_opencv_photo_MergeMertens_getSaturationWeight_10", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_W7", "icv_s8_ownBFilterRow32f_16s_C1R", "icv_g9_ippiWarpAffineCubic_32f_C4R", "icv_g9_ownSS3_21_8u", "icv_h9_owniResizeSuper_32f_C1R", "icv_h9_ownpi_WarpAffineSimpleLinear_16s_C3R", "cvPreCornerDetect", "_ZN2cv7vconcatERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "WebPPictureInitInternal", "Java_org_opencv_calib3d_StereoMatcher_getNumDisparities_10", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_11", "icv_g9_piGradientSobel32f_5x5_row_c1", "icv_g9_ippiMirror_32f_C1IR", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC2ERKS1_", "icv_s8_ownpi_dInterVectorClip_L_8u_P3", "icv_g9_ippiCopy_32f_P3C3R", "_ZN2cv12VideoCaptureC1ERKNS_6StringE", "ippicviMirror_16s_C3R", "_ZN2cv3ocl8PlatformC1ERKS1_", "icv_w7_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "_ZN2cv25BOWImgDescriptorExtractorD1Ev", "icv_h9_ownMean_32f_C3MR_HSW", "icv_p8_ownscDFTinv_9_scale_32fc", "icv_p8_owns_cFFTfwd_4_scale_32fc", "icv_h9_ownCommonLoop_8u_C4R", "icv_s8_ownpi_WarpAffine_C_Repl_64f_C4", "icv_w7_ipMirror135_32uC1R", "icv_w7_ownAConvert32s_8u", "icv_s8_ownCalcBorderR1Antialiasing_32f", "_ZN3tbb8internal6market12wait_workersEv", "icv_g9_ownippiFilterMedian_8u_C4R", "icv_p8_ownResize1Cubic16s", "icv_p8_ownpi_XorC_8u_C3R", "iwiImage_BorderSub", "icv_h9_ippiTranspose_16u_C4IR", "icv_g9_ownpi_Rotate90_32_C1R", "icv_p8_owniFilter_32f_C4R_v8u8_4NA", "_ZN2cv6detail12DpSeamFinderC1ENS1_12CostFunctionE", "icv_p8_ownsFFTGetBufSize_R_32f", "cvSeqInvert", "icv_g9_ownSS3_41_8u", "icv_p8_owniFlip_16u_C3", "icv_p8_ownResize4Cubic32f", "icv_w7_owniConvert_16u8u_W7", "icv_p8_ownResize1Lanczos2_16u", "ippicviConvert_8s8u_C1Rs", "icv_p8_ownsrDFTfwd_13_scale_64f", "icv_s8_DotProd_64f64fc", "icv_p8_ippiHSVToRGB_8u_C3R", "icv_p8_ownscDFTfwd_10_64fc", "cvGetHuMoments", "icv_g9___svml4ipp_expf8", "icv_h9_ownFilterBoxBorder_8u_C1R", "cvInsertNodeIntoTree", "_ZN2cv11compareHistERKNS_11_InputArrayES2_i", "icv_w7_ippsFFTGetSize_R_64f", "icv_w7_cv_ownippiFilterMax_16u_Row", "icv_h9_ownpi_WarpAffine_NN_Const_8u_C3", "icv_w7_ippiMul_16u_C1RSfs", "icv_p8_ownpi_NormL1Rel_8u_C1R", "icv_g9_owns_cFFTfwd_4_64fc", "icv_p8_ownpi_WarpAffine_L_Const_16u_C1", "icv_s8_ownpi_Min_8u_C1R", "icv_g9_ownSS3_73_16s", "ippicviCanny_16s8u_C1R", "icv_p8_ippiCopyConstBorder_32s_C3R", "ippicviNormDiff_L1_16s_C1R", "icv_s8_ownpi_SimpleRotate_8u_C3R", "icv_g9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "icv_g9_owniCrossCorrNorm_Valid_32f_C1R", "icv_p8_ownpi_NormInfRel_8u_C1R", "icv_w7_ownAddSquare_8u32f_C1IMR_W7", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_10", "icv_w7_ownMorphologyBorderInit_1u_L", "icv_h9_ownRow1Lanczos3_32f", "icv_p8_ownResize4Lanczos3_16s", "icv_h9_ownpi_WarpAffine_L_Const_16u_C4", "icv_n0_own_ipps_dSqrt_G9EPnnn", "_ZN2cv9useOpenVXEv", "icv_w7_ownpi_WarpAffine_NN_Const_16s_C1", "icv_h9_owniResizeLinear_8u_C3R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_W7", "icv_w7_ownRow4Lanczos3_32f", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_V8", "icv_p8_ownpi_dInterVector_NN_8_P3", "icv_p8_ownFilterRowBorderPipeline_8u16s_C3R_5x5_V8", "_ZN2cv8fillPolyERNS_3MatEPPKNS_6Point_IiEEPKiiRKNS_7Scalar_IdEEiiS3_", "icv_w7_ownpi_WarpAffine_C_Repl_8u_C3", "icv_g9_ownsMul_16s_PosSfs", "cvHoughLines2", "icv_p8_owniScaleC_8u8u_C1R_acc", "icv_h9_ownscDftFwd_Prime4_64fc", "icv_w7_ownippsCnvrt_32s32f", "icv_h9_ippiGradientVectorScharr_8u16s_C1R", "icv_w7_ownDistanceTransform_3x3_8u_C1R_F", "_ZNK2cv11_InputArray12isContinuousEi", "icv_h9_ownCalcBorderR4Lanczos3_16u", "icv_s8_ippsMul_32fc", "icv_p8_ownSharpenRow_32f_C1", "icv_w7_ownRow3Linear8u", "icv_w7_ownsrDFTinv_13_scale_64f", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_V8", "icv_p8_ownRow1Lanczos3_16s", "_Unwind_FindEnclosingFunction", "_ZN2cv15KeyPointsFilter10retainBestERSt6vectorINS_8KeyPointESaIS2_EEi", "icv_s8_owns_cFFT_1_scale_64fc", "icv_p8_ownpi_WarpAffineSimpleCubic_16s_C4R", "icv_p8_owniConvert_32f8u_W7", "_ZNK2cv11_InputArray4dimsEi", "icv_h9_owniScaleC_16s8u_C1R_fst", "icv_w7_ownpi_WarpSimpleLinearInit", "cvCreateTrackbar", "icv_h9_ippiWarpAffineNearest_32f_C4R", "icv_s8_ownpi_SimpleRotate_16s_C4R", "icv_p8_ippsCos_32f_A24", "icv_h9_ownippiFilterxBrd_16s_C1R", "icv_w7_ippsDFTInv_PackToR_64f", "icv_h9_owniFilter32f_8u_C4R_g9e9_4", "icv_g9_ippsZero_8u", "cvAbsDiffS", "icv_w7_cv_ownippiFilterMin_32f_Msk", "_ZN2cv3dnn19experimental_dnn_v117InnerProductLayer6createERKNS1_11LayerParamsE", "_ZN2cv3ocl7ContextD1Ev", "icv_s8_ippsDCTFwdInit_32f", "_ZN2cv4UMat10deallocateEv", "ippicviDCTFwdInit_32f", "icv_s8_ownsConj_64fc_I_T7", "icv_s8_ownCopySubpixIntersect_8u_C1R_W7", "_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE", "icv_p8_ownSumSq_32f_C1R_W7", "icv_s8_owns_rFFTinv_32_32f", "icv_p8_ownscDftFwd_Prime4_32fc", "_ZN2cv17CommandLineParserD2Ev", "icv_s8_ownResize4Cubic16u", "icv_s8_ippsFFTFwd_RToPack_32f", "icv_p8_ownDistanceTransform_3x3_8u32f_C1R_21F", "icv_p8_ownscrDftFwd_Fact_64f", "_ZN2cv8CamShiftERKNS_11_InputArrayERNS_5Rect_IiEENS_12TermCriteriaE", "icv_p8_ownpi_CountInRange_8u_C3R", "icv_p8_ownpi_MinMax_16u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Const_V8", "icv_p8_ippiCopy_16s_P3C3R", "icv_s8_ownSS1_a7_8u", "Java_org_opencv_video_FarnebackOpticalFlow_create_11", "icv_p8_ownFilterRowBorderPipeline_32f_C3R", "icv_g9_ownSS1_43_16s", "icv_s8_ippsAddC_32f_I", "icv_w7_ownpi_NormL1Rel_16u_C1R", "icv_h9_ownpi_WarpAffineLinear_8u_C4R", "ippicvsDFTFwd_CToC_64fc", "icv_s8_ippiNormDiff_L1_8u_C1R", "icv_p8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_V8_3", "icv_s8_ippiThreshold_LTVal_8u_C1IR", "icv_h9_ippiSqrDistanceNorm_32f_C1R", "cvSeqSort", "icv_s8_ippiResizeLanczos_16u_C4R_L", "icv_h9_ownWarpSimple3Nearest64f", "icv_h9_ownSS4_32_16u", "icv_s8_ownSS4_8u", "icv_p8_owniFlip_32s_C4_W7", "icv_w7_ownscDftFwd_Prime8_64fc", "icv_g9_ownippsCnvrtFin_32f16u_AVX", "icv_g9_piGradientScharr32f_row_c1", "icv_p8_ippsDFTInv_PackToR_32f", "_ZN2cv16findEssentialMatERKNS_11_InputArrayES2_S2_iddRKNS_12_OutputArrayE", "icv_s8_ownpi_WarpAffine_C_Repl_32f_C4", "_ZN3tbb8internal18concurrent_monitor11cancel_waitERNS1_14thread_contextE", "icv_s8_ownippiFilterMax_8u_Col_AC4", "icv_p8_ippiMean_StdDev_8u_C3CR", "_ZNK2cv3ocl12PlatformInfo12deviceNumberEv", "icv_s8_ownscDFTfwd_14_scale_32fc", "iwiResize_GetDefaultParams", "icv_h9_ippiScaleC_32s_C1IR", "icv_h9_ownpi_WarpSimpleLinear_16s_C1R", "icv_p8_ownps_Add_16u_Sfs", "icv_h9_owniFilter32f_16s_C1R_g9e9_5", "_ZN3tbb8internal18concurrent_monitorD1Ev", "icv_g9_owniFilter32f_16s_C4R_g9e9_1", "icv_g9_ownpi_Rotate180_32_C4R", "icv_s8_ownscrDftInv_Fact_32f", "_ZNK2cv3LDA4saveERNS_11FileStorageE", "icv_g9_ippiCopy_16u_AC4C3R", "_ZN2cv3hal2LUEPdjiS1_ji", "icv_w7_ownCalcBorderR4Cubic8u", "icv_n0_own_ipps_dCos_S9LAynn", "icv_g9_owniFilter32f_16s_C1R_g9e9_2", "icv_h9_ownDistanceTransform_3x3_8u32f_C1R_21B_g9e9", "icv_p8_owns_cFFT_2_64fc", "cvCalcArrBackProjectPatch", "icv_s8_ownpi_WarpAffine", "_ZNK2cv3dnn19experimental_dnn_v13Net8getFLOPSEiRKSt6vectorIS3_IiSaIiEESaIS5_EE", "icv_p8_ownCanny_32f8u_C1R_1_32s_W7", "icv_p8_ownippiThreshold_8u_C3", "icv_p8_owns_crRadix4Fwd_32f", "_ZN2cv10fitEllipseERKNS_11_InputArrayE", "icv_w7_ippiNormDiff_L2_8u_C1MR", "icv_s8_ownSS4_65_16s", "icv_h9_ownpi_WarpAffineSimpleLinear_16s_C4R", "icv_g9_owniScaleC_8u8s_C1R_fst", "icv_w7_ownCalcBorderR1Linear32f", "_ZN3tbb10interface914global_control16internal_destroyEv", "icv_w7_ownpi_WarpSimpleNearest_16s_C4R", "_ZN2cv3ocl7Image2DC2Ev", "icv_p8_ownSS1_54_16s", "icv_w7_ownpi_WarpAffine_C_Transp_8u_C3", "icv_s8_ownpi_dInterVector_NN_16_AC4", "_ZN3tbb8internal8governor20setBlockingTerminateEPKNS_19task_scheduler_initE", "icv_g9_ownscDftFwd_Prime5_32fc", "icv_h9_ippiFilterBoxBorder_16u_C4R", "icv_p8_ippiMirror_16u_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_W7", "icv_s8_ippiResizeGetBufferSize_L", "icv_h9_ippiConvert_32s32f_C1R", "icv_p8_ownsInitDftConv_32f", "ippicvsSortRadixDescend_64f_I", "icv_w7_ownpi_dInterVectorClip_C_16u_P", "Java_org_opencv_ml_TrainData_getSampleWeights_10", "icv_p8_ownResize1Lanczos3_8u", "icv_s8_cv_ownippiFilterMax_32f_Col", "_ZN2cvdvERKNS_7MatExprES2_", "icv_s8_ownpi_Histogram_BS_32f_C1R", "icv_p8_ownRow1Antialiasing_32f", "icv_s8_ownLaplCol5x5_8u_C4", "icv_h9_ownRow1Filter14_16u", "icv_p8_ownpi_WarpAffine_NN_Repl_16s_C3", "own_ipps_dSinCos_SC", "_ZN2cv16FileNodeIteratorC1ERKS0_", "_ZNK2cv4cuda6GpuMat9locateROIERNS_5Size_IiEERNS_6Point_IiEE", "icv_s8_ippiResizeNearest_16s_C1R_L", "icv_p8_ownSS3_98_32f", "icv_g9_ownResize4Antialiasing_8u", "cvFindNextContour", "icv_w7_owniCopy8u_C3P3_84_A6", "icv_s8_ownpi_dInterVectorClip_L_32f_P3", "icv_p8_ippsMul_32fc_I", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_V8", "icv_p8_ownSS4_52_16u", "icv_s8_ownpi_WarpSimpleNearest_16u_C3R", "Java_org_opencv_core_Core_countNonZero_10", "ippicvSetCpuFeaturesMask", "icv_s8_ownippiFilterMedianHoriz_16u_C3R_5x1", "icv_p8_ownpis_Min_8u_AC4", "icv_g9_ownpi_WarpSimpleNearest_32f_C3R", "icv_s8_ownpi_OrC_32s_C3R", "icv_p8_ownpi_NormInfDiff_16u_C1R", "icv_h9_ippiFilterSobelVertSecondBorder_8u16s_C1R", "iwiRoiPipeline_GetMinTileSize", "icv_g9_ippiResizeAntialiasing_16u_C4R_L", "icv_g9_ownSS4_a7_32f", "icv_h9_owniCopy_32s_C4MR", "icv_p8_ippiNormDiff_L1_16u_C1R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "icv_h9_owniFilter32f_16u_C3R_g9e9_5", "icv_p8_ownippiFilterMedian_16s_C4R_3x3", "Java_org_opencv_dnn_DictValue_isInt_10", "icv_w7_ippiHarrisCornerGetBufferSize", "icv_g9_owniFilter32f_8u_C4R_g9e9_2", "icv_s8_ippiCopyReplicateBorder_32s_C3R_L", "icv_p8_ippiScaleC_32s_C1R", "_ZNK2cv9softfloatmiERKS0_", "icv_p8_ownippiFilterMin_8u_Row", "icv_p8_ownscDftFwd_Fact11_32fc", "icv_h9_ownscDftInv_Prime5_32fc", "icv_g9_ippiFilterLaplacianBorder_8u16s_C1R", "_ZN2cvplERKNS_7Scalar_IdEERKNS_3MatE", "icv_w7_ippiResizeNearest_16s_C4R_L", "icv_h9_ownpi_NormInfDiff_16u_C1R", "icv_s8_ownpi_WarpAffine_CR_8u_C1", "Java_org_opencv_core_Mat_n_1assignTo__JJ", "icv_s8_ippiNormDiff_Inf_32f_C3CMR", "cvDecodeImageM", "icv_p8_innerNormL2_3x3", "icv_h9_ippiMax_32f_C1R", "icv_h9_ippiSet_16u_C4MR", "_ZN2cv3ocl8PlatformC1Ev", "icv_p8_ownRow3Linear8u", "_ZN2cv21DetectionBasedTrackerC2ENS_3PtrINS0_9IDetectorEEES3_RKNS0_10ParametersE", "icv_s8_ippiMax_32f_C1R", "icv_p8_ownpi_dInterVectorClip_NN_32_AC4", "ippicvsSortRadixIndexAscend_8u", "icv_h9_ownCalcBorderR1Cubic8u", "icv_h9_ownRow3Antialiasing_16s", "Java_org_opencv_dnn_Net_getLayersCount_10", "cvCamShift", "icv_s8_ownippiFilterMedian_16s_C3R_5x5", "icv_s8_owniFilterBilateralR2_InMem_8u_C3R_px", "icv_h9_ownpi_WarpAffine_NN_Mem_32f_C1", "_ZN2cv14getGaborKernelENS_5Size_IiEEdddddi", "icv_w7_ippiMax_16s_C1R", "icv_h9_owns_initTabTwdBase_64f", "icv_p8_ippiDotProd_8u64f_C1R", "icv_g9_ownpi_WarpAffine_C_Const_32f_C4", "icv_s8_ippiResizeLanczos_16u_C3R_L", "_ZNK2cv11_InputArray4sizeEi", "icv_s8_ownippiThreshold_32f_AC4", "icv_w7_ownsMul_16s_1Sfs", "icv_g9_ippiMinMaxIndx_16u_C1R", "_ZN2cv3hal7merge8uEPPKhPhii", "_ZN2cv21DetectionBasedTrackerD1Ev", "icv_w7_ownpi_NormL2Diff_16u_C1R", "icv_h9_ownResize4Linear64f", "_ZN2cvplERKNS_7Scalar_IdEERKNS_7MatExprE", "icv_w7_ownCalcBorderR4Cubic32f", "icv_h9_ippiResizeCubic_16s_C1R_L", "icv_h9_ownippiFilterMax_32f_RowCol_C1_h9l9", "_ZN3tbb8internal3rml14private_server9wake_someEi", "icv_g9_ownpi_WarpAffineSimpleCubic_32f_C3R", "icv_s8_owns_cFFTinv_4_64fc", "icv_h9_owns_cFFTfwd_4_scale_32fc", "icv_p8_ownscrDftFwd_Fact3_32f", "_ZN2cv4readERKNS_8FileNodeERdd", "icv_p8_ownpi_WarpAffineSimpleCubic_16s_C3R", "icv_w7_ippiWarpAffineNearest_64f_C1R", "icv_g9_Moments16uC1R_64f_FAST", "icv_w7_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_p8_cv_ownippiFilterMax_32f_Msk", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_W7", "icv_g9_owns_rFFTfwd_32_64f", "icv_h9_innerNormL1_3x3", "icv_s8_ippiResizeSuper_32f_C3R_L", "icv_h9_ippiNormRel_Inf_8u_C1MR", "icv_w7_owns_cRealRecombine_64f", "icv_h9_ownsrDFTinv_12_scale_64f", "_ZN2cv5instr8NodeDataC2EPKcS3_iPvbNS0_4TYPEENS0_4IMPLE", "icv_g9_ownpi_WarpAffineSimpleLinear_64f_C3R", "icv_h9_ippiNorm_L1_32f_C1MR", "icv_h9_ownpi_NormL2Rel_8u_C1R", "icv_w7_ownCalcBorderR3Linear64f", "icv_p8_owns_crRadix4Inv_64f", "icv_w7_ownpi_Min_8u_C4R", "icv_h9_owniFilter32f_8u_C4R_g9e9_8", "icv_w7_ownpi_XorC_8u_C1R", "icv_s8_ownpi_Max_16s_C3R", "icv_s8_ownsrDFTinv_7_scale_32f", "icv_s8_owns_cRadix4InvNorm_64fc", "icv_h9_owniResizeLinear_16u_C1R", "_ZN2cv8superres24createOptFlow_PyrLK_CUDAEv", "icv_s8_ownpi_Histogram_FS_32f_AC4R", "icv_p8_ownColLinear16u", "icv_w7_ownpi_WarpSimpleLinear_64f_C3R", "_ZNK2cv11FileStorage8isOpenedEv", "icv_s8_ippi_cDftMerge_32fc", "icv_p8_ippiResizeLinearInit_L", "icv_h9_owniDenominatorFull_C1R", "_ZN2cv3ocl12PlatformInfoC2EPv", "icv_w7_ownscDFTinv_10_32fc", "icv_p8_ownscDftInv_Prime7_32fc", "icv_p8_ownippiFilterMedianHoriz_16s_C4R", "icv_s8_ownsMaxEvery_8u", "_ZNK2cv17CommandLineParser4Impl12split_stringERKNS_6StringEcb", "Java_org_opencv_features2d_Feature2D_empty_10", "icv_s8_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_W7cn", "icv_w7_ippiSwapChannels_32s_C4R", "icv_s8_ownpis_Min_16s_C3", "icv_p8_owniCopyMirrorBorder_32s_C3IR", "icv_p8_piGradientScharr32f_row_c1", "icv_w7_ownResize4Nearest16u", "icv_w7_ownscDftInv_PrimeFact_64fc", "ippicviResizeLanczos_16s_C4R_L", "icv_h9_ownpi_NormL1Diff_16u_C1R", "icv_w7_ownscDFTfwd_11_scale_32fc", "icv_h9_owniCopyMirrorBorder_16s_C4R", "icv_s8_ippiErodeInit_L", "icv_w7_ippiMorphClose_8u_C1R_L", "icv_p8_ownMinMaxIndx_16u_C1R_W7_1", "icv_p8_ownpi_WarpSimpleLinear_8u_C3R", "icv_s8_ownLaplRow5x5_8u_C3", "icv_w7_ippiFilterBoxBorder_16u_C4R", "icv_w7_owniResizeSuper_16u_C1R", "icv_g9_ippiComputeThreshold_Otsu_8u_C1R", "icv_h9_owniFilter32f_8u_C1R_g9e9_5", "icv_w7_ownpi_WarpAffine_L_32f_C4", "icv_p8_ownsrDFTfwd_14_scale_32f", "Java_org_opencv_features2d_DescriptorExtractor_descriptorSize_10", "icv_w7_ippiTranspose_16u_C4IR", "icv_s8_ippiCopyMirrorBorder_16s_C4R", "icv_g9_ippiSum_16s_C3R", "icv_p8_ippiMean_StdDev_8u_C1R", "icv_s8_owniGetRectRightBF_32f_C3R", "Java_org_opencv_photo_TonemapDrago_getSaturation_10", "icv_p8_ippiFilterBoxBorder_32f_C1R", "icv_s8_ownpi_WarpAffine_NN_Mem_64f_C3", "icv_ipp_control87", "icv_h9_owniCopy_8u_C4P4R_cn", "icv_h9_owniSwapChannels_16u_C3R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "icv_g9_ippsFFTInv_PackToR_32f", "icv_s8_ownscDftInv_Fact2_32fc", "_ZN2cv6detail18selectRandomSubsetEiiRSt6vectorIiSaIiEE", "icv_w7_ownBFilterColumn_8u_C1R", "_ZNK2cv6detail14FeaturesFinder12isThreadSafeEv", "_ZN2cv5utils5trace7details12TraceManagerC1Ev", "icv_g9_ownscDFTfwd_13_scale_64fc", "icv_h9_owncvMinMaxIndx_32f_C1MR_H9L9", "Java_org_opencv_imgproc_Imgproc_cornerHarris_10", "_Z29vector_vector_KeyPoint_to_MatRSt6vectorIS_IN2cv8KeyPointESaIS1_EESaIS3_EERNS0_3MatE", "ippicviCopy_32f_C1C4R", "icv_p8_ownscDftFwd_Fact13_32fc", "ippicvGetCpuFeatures", "icv_w7_ippiScaleC_64f32s_C1R", "icv_s8_ippiResizeLinear_64f_C1R_L", "Java_org_opencv_photo_CalibrateDebevec_setSamples_10", "icv_w7_ownNorm_L1_32f_C3CMR_W7", "cvRestoreMemStoragePos", "Java_org_opencv_core_Core_getTickCount_10", "icv_w7_owns_rFFTinv_4_scale_64f", "_ZN2cv3ogl6Buffer9mapDeviceERNS_4cuda6StreamE", "icv_p8_owns_rFFTfwd_32_scale_32f", "icv_w7_ownRow1Linear16u", "icv_s8_ippiNorm_Inf_8u_C1R", "_ZN2cv7hconcatERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_s8_ippiMorphClose_32f_C4R_L", "_ZN2cv18SimpleBlobDetector6createERKNS0_6ParamsE", "icv_w7_ippiWarpAffineLinear_16u_C3R", "WebPSafeFree", "icv_h9_ownippiFilterMedianSqr_16u_C3R", "ippicviHSVToRGB_8u_C3R", "icv_g9_ippiResizeCubic_16u_C3R_L", "icv_p8_owns_sDctInv_PreMul_32f", "icv_g9_ownscDftInv_Prime5_32fc", "icv_p8_ownscDftFwd_Fact3_32fc", "icv_s8_ownSS4_53_32f", "Java_org_opencv_calib3d_Calib3d_estimateNewCameraMatrixForUndistortRectify_10", "icv_s8_ownippsCnvrtFin_32f16s_Sfs", "icv_g9_ippiWarpAffineCubic_16u_C3R", "icv_g9_ippiNormDiff_L2_16u_C1MR", "icv_h9_owniFilter32f_8u_C1R_g9e9_3", "icv_p8_ownpi_WarpAffine_C_Transp_16u_C1", "ippicviSet_8u_C3R", "icv_p8_ownSharpenRow_32f_C4", "icv_g9_ownpi_WarpAffine_C_Repl_16u_C1", "icv_n0_own_ipps_dSinCos_G9LAynn", "icv_g9_ippiResizeLanczosInit_L", "icv_s8_owniTranspose32s_C4R_core2", "icv_p8_owns_rFFT_2_scale_32f", "icv_h9_ippiCopy_32f_C4MR", "icv_w7_ippiErode_8u_C4R_L", "_ZN2cv3hal6max16uEPKtjS2_jPtjiiPv", "icv_w7_owniResizeCubic_16u_C3R", "icv_p8_ownippsMagn_64f", "ippicvMalloc_L", "icv_p8_ownpi_dInterVector_L_16u_AC4", "icv_s8_ippiResizeLinear_32f_C1R_L", "icv_p8_ownCopySubpix_8u_C1R_W7", "icv_h9_owniResizeLanczos_16s_C1R", "icv_s8_owniConvert_32f16s_W7", "icv_p8_owniCopyMirrorBorder_16u_C4IR", "icv_h9_owns_rFFTinv_4_64f", "icv_p8_ownsSub_16s", "icv_w7_ippiResizeAntialiasing_32f_C1R_L", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_W7", "icv_h9_ippiMomentGetStateSize_64f", "icv_g9_ownsrDFTfwd_14_scale_64f", "icv_p8_ippiResizeLinear_16u_C3R_L", "_ZN2cv8superres32createSuperResolution_BTVL1_CUDAEv", "icv_h9_ippiIntegral_32f_C1R", "icv_s8_ippiWarpAffineCubic_16s_C3R", "icv_h9_ownCalcBorderR1Lanczos3_32f", "icv_w7_ippiCopy_16s_C3R", "icv_g9_ippiNormDiff_Inf_16u_C3CMR", "icv_h9_owniFilterBilateralCom_InMem_8u_C3R_px", "icv_w7_ownpi_WarpSimpleCubic_32f_C3R", "icv_h9_ippiMirror_16s_C1R", "icv_s8_ownResize4Nearest8u", "icv_s8_ownSS3vertical_16u", "icv_g9_owniScaleC_8s16s_C1R_fst", "icv_h9_ownpi_WarpAffine_C_Repl_8u_C1", "icv_p8_ownpi_WarpAffine_NN_Mem_32f_C3", "icv_p8_ippiNormRel_L2_32f_C1R", "icv_w7_owniDenominatorFull_C1R", "icv_s8_owns_rFFTfwd_4_scale_64f", "icv_w7_owniConvert_32s8s_W7", "icv_p8_ownpi_WarpAffineCubic_8u_C1R", "_ZN2cv8Subdiv2D12connectEdgesEii", "iwGetThreadsNumDefault", "icv_g9_ownFilterBoxBorderInMem3x3_16s_C1R", "icv_n0_own_ipps_dExp_S9HAynn", "icv_w7_ownpis_Sum_16u_C3", "icv_w7_ownLaplace3x3Row_8u_C1", "icv_p8_ippsFree", "icv_g9_ippiCopyReplicateBorder_8u_C3IR", "icv_h9_ownSS1_32_32f", "icv_s8_ownFilterRowBorderPipeline_32f_C3R_3x3_W7cn", "icv_w7_ippsDFTInv_CToC_32fc", "icv_h9_owniCrossCorrNorm_Valid_32f_C1R", "icv_w7_owniExchange_8u_I", "Java_org_opencv_objdetect_CascadeClassifier_getOriginalWindowSize_10", "icv_h9_ippsFFTInv_CToC_64fc", "Java_org_opencv_imgproc_Imgproc_sqrBoxFilter_10", "Java_org_opencv_features2d_BOWKMeansTrainer_delete", "Java_org_opencv_core_TickMeter_start_10", "icv_h9_ippiFilterSobelHorizBorder_32f_C1R", "icv_g9_ippiNormRel_Inf_32f_C1R", "icv_s8_ownsConvert_32s16s_Sfs0_W7", "icv_p8_ownsExpOne_w7", "_ZN2cv5eigenERKNS_11_InputArrayERKNS_12_OutputArrayES5_", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_W7", "Java_org_opencv_imgproc_Imgproc_getRectSubPix_11", "icv_g9_ownpi_Set_64f_C3R", "icv_w7_cv_ownippiFilterMax_8u_Col", "_ZN2cv2ml6DTrees5SplitC1Ev", "icv_w7_ownFilterRowBorderPipeline_32f_C3R_3x3_W7cn", "ippicviConvert_16s32s_C1R", "icv_w7_ownippiFilterMedianVert_16s", "icv_g9_ippiNorm_Inf_16s_C1R", "icv_g9_ippsSortRadixDescend_32f_I", "cvCopyMakeBorder", "_ZN2cv6detail11PlaneWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_S6_RKNS_12_OutputArrayES9_", "_ZN2cv2ml3SVM4loadERKNS_6StringE", "icv_s8_owniFlip_32s_C4", "icv_h9_owniScaleC_32f16u_C1R_acc", "icv_h9_owniFilterBilateralR2_InMem_8u_C1R_L", "Java_org_opencv_imgproc_Imgproc_EMD_10", "icv_w7_ownsCeilOne", "icv_h9_owniResizeSuper_16s_C3R", "icv_g9_ippiCopyMirrorBorder_32f_C4R", "icv_g9_ippiMorphGradient_32f_C1R_L", "icv_p8_ownippsMagn_16sc32f", "icv_w7_ippiCopy_8u_C1C4R", "icv_h9_owniTransposeWxH_16uC4", "icv_p8_ipMirror45_8uC1R", "icv_h9_ownscDftFwd_Prime4_32fc", "icv_w7_ownscDFTfwd_10_scale_32fc", "icv_w7_ippiCopyMirrorBorder_32s_C1IR", "icv_s8_ownpi_dInterVectorClip_L_32f_AC4", "icv_n0_own_ipps_dCos_G9HAynn", "icv_s8_ippsSortRadixIndexAscend_32f", "icv_g9_owns_cFFTfwd_8_scale_64fc", "icv_w7_ownNormRel_L1_8s_C1MR_W7", "_ZN2cv5MutexD2Ev", "icv_w7_ippiCopyMirrorBorder_8u_C3R_L", "icv_w7_ownippsCnvrtFin_64f32s_Sfs", "icv_g9_owniFilter32f_8u_C4R_g9e9_4", "icv_p8_ownpi_XorC_16u_C3R", "ippicviResizeLinear_64f_C4R_L", "icv_s8_owniResizeLinear_16u_C4R", "_ZN2cv20getValidDisparityROIENS_5Rect_IiEES1_iii", "icv_h9_ownpi_Rotate180_8_C1R", "icv_g9_ippiCopyReplicateBorder_8u_C4R", "icv_p8_ownCalcBorderR3Cubic16u", "icv_s8_ownCalcBorderR3Antialiasing_16s", "icv_h9_ownpi_ClipRight", "icv_g9_ownpi_ClipPolygon", "_ZN9CvLevMarqC2Ev", "icv_p8_ownippsMagn_32fc32f", "icv_g9_ippiConvert_32f16s_C1R", "icv_h9_ownpi_WarpAffine_NN_Repl_16s_C1", "Java_org_opencv_calib3d_StereoMatcher_setBlockSize_10", "icv_w7_ippiCopy_16u_C4P4R", "icv_s8_ownpi_WarpAffine_C_Repl_32f_C3", "icv_w7_ownsSub_8u_1Sfs", "icv_g9_ippsAtan2_32f_A21", "_ZN2cvmiERKNS_7MatExprERKNS_3MatE", "icv_s8_ownResize1Cubic16u", "_ZN2cv3ocl13ProgramSourceC1Ev", "icv_g9_ippiConvert_32f8u_C1R", "icv_p8_ippiMax_16u_C1R", "icv_p8_owniFlip_8u_C4_W7", "icv_s8_ownpi_WarpAffineCubic_8u_C3R", "icv_p8_ownpi_WarpAffine_C_Transp_16u_C4", "icv_p8_owns_BitRev1_4", "icv_g9_ownsAdd_8u_1Sfs", "_ZNK2cv5MatOp8subtractERKNS_7MatExprES3_RS1_", "icv_g9_ownpi_WarpAffineNearest_16u_C1R", "icv_g9_ownscDFTinv_15_32fc", "icv_h9_ippiDistanceTransform_5x5_8u32f_C1R", "icv_s8_owniTranspose_32s_C4R_W7", "icv_p8_ippiCopy_16u_C4MR", "icv_w7_ownippiFilterMedianVert_8u_C4R_1x3", "icv_p8_ownsrDFTinv_9_scale_32f", "icv_g9_ownscDFTfwd_3_scale_64fc", "cvNulDevReport", "icv_s8_ownNorm_L2_32f_C1MR_W7", "icv_p8_owniAutoNormMean_8u32s_C1R", "icv_w7_ownsSub_16s_1Sfs", "Java_org_opencv_features2d_Params_get_1thresholdStep_10", "icv_g9_ippiMoments64f_16u_C1R", "icv_w7_ownsrDFTfwd_7_scale_64f", "icv_w7_ownCanny_32f8u_C1R_Mag_W7", "icv_s8_owns_BitRev1_C", "icv_p8_ownscDftFwd_Fact_64fc", "icv_p8_ippiConvert_32s8u_C1R", "icv_h9_ippiScaleC_32s16s_C1R", "icv_s8_ippiHSVToRGB_8u_C3R", "icv_g9_owniScaleC_32s16u_C1R_acc", "_ZN2cv10cvarrToMatEPKvbbiPNS_10AutoBufferIdLj136EEE", "icv_s8_ownpi_NormL2Diff_16u_C1R", "_ZN2cv6detail11PlaneWarper4warpERKNS_11_InputArrayES4_S4_S4_iiRKNS_12_OutputArrayE", "icv_p8_ownippiFilterMedian_16s_C3R_5x5", "icv_s8_ownpi_dInterVector_NN_32_P3", "_ZN3tbb18task_group_context7bind_toEPNS_8internal17generic_schedulerE", "icv_w7_ownscrDftInv_Fact3_32f", "icv_s8_owniTplNormMean_8u32f_C1R", "icv_g9_owniScaleC_32f32s_C1R_acc", "icv_p8_ownDistanceTransform_5x5_8u_C1R_Big_F_W7", "_ZN2cv9SparseMatC1ERKNS_3MatE", "WebPPictureImportBGR", "icv_s8_owniFilterRobertsUpBorder2_32f_C1R", "icv_g9_owniResizeGetSrcRoi", "icv_g9_owniResizeLanczos_16u_C1R", "icv_w7_ownpi_WarpAffineRectFP", "icv_w7_ippiDilate_8u_C1R_L", "icv_w7_owniResizeAntialiasing_16u_C3R_L", "cvSquareAcc", "icv_s8_ippiDFTGetSize_C_32fc", "Java_org_opencv_ml_Boost_setWeakCount_10", "icv_p8_ownpi_WarpSimpleCubic_32f_C3R", "icv_p8_ownippiFilterxBrd_16s_C1R", "icv_g9_ownscDFTinv_13_scale_64fc", "icv_w7_getMaskFeature", "icv_s8_ownAConvert_Round32f_16u", "icv_g9_ippiCopyReplicateBorder_16s_C4R", "_ZNSt9bad_allocD1Ev", "icv_s8_ippiResizeLinear_8u_C4R_L", "icv_h9_owniFilter32f_8u_C4R_g9e9_1", "icv_s8_ownpi_WarpAffine_L_Mem_8u_C3", "_ZN2cv5utils5trace7details6Region4ImplC1ERNS2_23TraceManagerThreadLocalEPS3_RS3_RKNS3_21LocationStaticStorageEx", "icv_g9_owniScaleC_8s64f_C1R_fst", "icv_w7_ownpi_NormL2Rel_16u_C1R", "_ZN2cv3ogl6Arrays18resetTexCoordArrayEv", "_ZN2cv3ogl9Texture2D14setAutoReleaseEb", "_ZN2cv26convertPointsToHomogeneousERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_w7_ownCanny_16s8u_C1R_1_16u_W7", "icv_s8_cv_ownippiFilterMin_32f_Msk", "icv_h9_ippiMaxIndx_16u_C1R", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_12", "_ZN3tbb8internal3rml14private_serverD1Ev", "Java_org_opencv_ml_SVMSGD_getSvmsgdType_10", "icv_s8_ownsAdd_16s_Bound", "icv_h9_ownCalcBorderR1Linear32f", "cvStdErrReport", "icv_g9_ownSS4_a7_16s", "icv_g9_ownpi_WarpAffine_L_Mem_16u_C4", "icv_h9_ownPrepareTaps16s_16s_h9l9", "icv_s8_ownAConvert32s_16s_AC4R", "icv_p8_owniFilter_32f_C3R_v8u8_7NA", "icv_g9_owniFilterRobertsDownBorder2_32f_C1R", "icv_p8_ownscDFTinv_5_64fc", "icv_h9_ownpi_WarpAffine_CR_8u_C1", "icv_h9_ippiAddSquare_8u32f_C1IMR", "icv_h9_ippiSwapChannels_8u_C3R", "icv_s8_Moments16uC1R_64f_FAST", "_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi", "iwTypeGetRange", "icv_g9_ownpi_WarpAffineCubic_16u_C4R", "icv_p8_ownNormRel_Inf_8u_C3CMR_V8", "icv_w7_ownpi_WarpAffineNearest_32f_C4R", "icv_s8_owniResizeAntialiasingLanczosInit_L", "icv_g9_innerSwapChannels_32s_C4R", "icv_p8_ownsrDFTfwd_10_32f", "cvFitEllipse2", "icv_p8_owniScaleC_32s8s_C1R_acc", "icv_h9_ownSS3_73_16u", "icv_s8_ippsConvert_32f16s_Sfs", "icv_s8_ippiWarpAffineLinear_8u_C3R", "icv_s8_ippiAddSquare_16u32f_C1IMR", "icv_w7_ownippiFilterMax_8u_Col", "icv_g9_ownRow4Antialiasing_32f", "cvCmpS", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "icv_g9_ippiCopyMirrorBorder_32s_C1IR_L", "icv_s8_ownResize3Linear64f", "icv_g9_ippiMorphClose_16s_C1R_L", "_ZN2cv8UMatData6unlockEv", "icv_h9_ippiResizeCubicInit_L", "icv_s8_owniCopy32s_P3C3_W7", "icv_s8_ownpi_WarpAffineSimpleCubic_32f_C1R", "icv_p8_ippiTranspose_32f_C1IR", "icv_s8_ippiCopyMirrorBorder_32s_C3IR", "_ZN2cv4cuda18ensureSizeIsEnoughEiiiRKNS_12_OutputArrayE", "icv_s8_ownsrDFTinv_14_scale_32f", "icv_p8_ippiNormRel_Inf_16s_C1R", "icv_s8_ownResize4Linear64f", "icv_s8_ownsrDFTfwd_14_64f", "icv_g9_piFilterBoxBorder_32f_C1R_v8u8_NA", "icv_p8_ownscDFTfwd_12_scale_64fc", "icv_w7_ippiFilterLowpassBorder_32f_C1R", "icv_p8_ownCalcBorderR4Linear8u", "_ZNK2cv4cuda10DeviceInfo12maxTexture2DEv", "icv_s8_ownpi_WarpAffine_C_Transp_32f_C1", "_ZNK2cv12_OutputArray5clearEv", "icv_g9_ippsZero_32f", "icv_s8_ownCalcBorderR4Lanczos3_8u", "icv_g9_ownCubicKernel1", "icv_w7_ippiNormDiff_L2_16u_C3CMR", "icv_p8_piGradientSobel32f_5x5_row_c1", "cvStereoRectify", "icv_h9_owns_rFFT_2_scale_32f", "_ZN2cv9Feature2D6detectERKNS_11_InputArrayERSt6vectorIS4_INS_8KeyPointESaIS5_EESaIS7_EES3_", "icv_h9_ippiCopyMirrorBorder_16u_C3R", "_ZN2cv15NAryMatIteratorC1EPPKNS_3MatEPS1_i", "icv_s8_ownscDftInv_Fact4_64fc", "icv_h9_ippiMorphTophat_32f_C3R_L", "icv_w7_ownHipass5x5Col_8u_C1", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColored_10", "icv_g9_ippiFilterBorderGetSize", "_ZNSt15__exception_ptr13exception_ptrC2EPv", "icv_p8_owniTransposeWxH_32sC1", "icv_s8_owniResizeLinear_16s_C3R", "icv_p8_owniResizeSuper_16s_C3R", "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", "icv_h9_ownscDFTfwd_9_64fc", "icv_h9_ownpi_MinMax_16s_C1R", "ipp_get_cpuid", "icv_g9_ippiMorphOpen_32f_C4R_L", "icv_s8_owniFlipCopy_16u_C1", "icv_s8_ippiDilateInit_L", "icv_g9_ownsAdd_8u_PosSfs", "icv_p8_ownpi_NormInf_32f_C1R", "icv_g9_ippsSortRadixIndexDescend_8u", "own_ipps_sSinCos_SC_LA", "icv_g9_ippiMirror_32s_C4IR", "icv_s8_ippiCopy_16u_C4MR", "icv_p8_ownpi_GetAffineTransform", "icv_p8_ownscDftInv_Prime5_32fc", "icv_p8_ownsConvert_64f32f_W7", "icv_n0_own_ipps_sSinCos_S9LAynn", "icv_w7_ownpi_WarpAffineCubic_8u_C4R", "icv_s8_ownippiFilterxBrd_8u_C1R", "icv_s8_owniFilter_32f_C3R_v8u8_1", "icv_p8_ippiTranspose_8u_C4IR", "icv_h9_ownpi_WarpAffine_C_Mem_64f_C1", "cvSampleLine", "icv_p8_owniCopyMirrorBorder_32s_C1IR", "icv_p8_owniScaleC_32s64f_C1R_fst", "icv_s8_ippiGradientVectorSobel_32f_C1R", "icv_g9_owniCopyMirrorBorder_32s_C1IR", "icv_s8_ownscrDftInv_Prime4_32f", "icv_s8_ippiCopy_8u_P4C4R", "icv_h9_owniResizeNearest_32f_C1R", "icv_n0_own_ipps_dInvSqrt_S9EPnnn", "Java_org_opencv_calib3d_Calib3d_findCirclesGrid_10", "icv_g9_ippsFFTInit_C_64fc", "icv_h9_ippiCompare_16u_C1R", "ippicviTranspose_8u_C1R", "icv_h9_ownSS1_94_32f", "Java_org_opencv_objdetect_HOGDescriptor_computeGradient_11", "icv_w7_ownResize3Lanczos2_16u", "icv_h9_ownSS1_a7_8u", "_ZN2cv3dnn19experimental_dnn_v13Net14setInputsNamesERKSt6vectorINS_6StringESaIS4_EE", "icv_w7_ippiMean_32f_C1R", "icv_g9_ippiTranspose_16u_C4IR", "_ZNK2cv9softfloatltERKS0_", "icv_g9_ippiSwapChannels_32s_C3R", "icv_g9_ippiSet_16s_C1R", "icv_h9_ippiTranspose135_8u_C1R", "icv_h9_ippsFFTFwd_CToC_32fc", "icv_s8_ippiAdd_32f_C1IMR", "icv_w7_ownpi_WarpAffine_CR_8u_C1", "icv_p8_ownpi_WarpAffineNearest_64f_C4R", "icv_p8_ownHipass5x5Row_32f", "icv_g9_ownpi_NormL1_8u_C1R", "icv_w7_ippiResizeLinear_32f_C3R_L", "icv_w7_ownSS3_16s", "_ZN2cv3MatC1ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_w7_ippiSet_16s_C1R", "icv_p8_ippiDistanceTransform_3x3_8u32f_C1R", "icv_w7_ownSumSq_16u_C1R_W7", "Java_org_opencv_features2d_AgastFeatureDetector_getThreshold_10", "icv_w7_ippiMean_StdDev_32f_C1R", "icv_h9_ownResize3Nearest32f", "icv_h9_owncvGetMaxNumThreads", "icv_h9_ownSS4vertical_32f", "ippicvGetL2CacheSize", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_X_W7", "icv_w7_ownscDftFwd_Fact13_64fc", "icv_p8_owniConvert_32f8s_AC4_W7", "icv_h9_ownResize3Linear64f", "cvPtr2D", "Java_org_opencv_calib3d_Calib3d_initCameraMatrix2D_10", "ippicviScaleC_16u32f_C1R", "icv_s8_ippiCountInRange_8u_C1R", "Java_org_opencv_core_Mat_n_1convertTo__JJIDD", "Java_org_opencv_imgproc_Imgproc_matchTemplate_11", "icv_w7_owns_crRadix4Inv_32f", "_ZN3tbb18captured_exception4moveEv", "cvSeqSearch", "ippicviSub_8u_C1RSfs", "icv_p8_ownpi_MinIndx_16s_C1R", "icv_g9_ippiCopy_8u_C1MR", "icv_g9_ownCalcBorderR4Antialiasing_16u", "icv_h9_ownpi_WarpAffine_NN_Const_8u_C4", "icv_p8_ippiOr_8u_C1R", "_ZN2cv5AKAZE6createEiiifiii", "icv_w7_ownNormDiff_L2_32f_C3CMR_W7", "icv_s8_ownsrDFTfwd_10_64f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C3R_5x5_V8", "icv_h9_ownpi_Sum_32f_C3R_gs", "Java_org_opencv_ml_TrainData_getTrainResponses_10", "icv_s8_ippiFilterSobelVertBorder_32f_C1R", "icv_h9_ownpi_WarpAffineSimpleCubic_8u_C3R", "icv_s8_ownpi_WarpAffine_L_Mem_64f_C1", "icv_s8_ippiRGBToGray_32f_C3C1R", "icv_p8_ippsDFTGetSize_C_64fc", "icv_n0_own_ipps_sSqrt_W7LAynn", "icv_g9_ippiMirror_8u_C4IR", "icv_g9_ownSShorisontal_32f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_V8", "icv_p8_owns_rFFTinv_8_scale_64f", "_ZN2cv15getNearestPointERKSt6vectorINS_6Point_IfEESaIS2_EEf", "icv_g9_ippiNormRel_L2_8u_C1MR", "icv_w7_ownscrDftFwd_Prime5_32f", "Java_org_opencv_imgproc_Imgproc_accumulateWeighted_11", "_ZThn4_N2cv8superres15SuperResolution9nextFrameERKNS_12_OutputArrayE", "icv_s8_ownpi_CmpLE_16s_C1R", "icv_p8_ippiScaleC_16s32s_C1R", "cvAddText", "icv_s8_ownpi_WarpAffineNearest_16s_C4R", "_ZN2cv5CannyERKNS_11_InputArrayERKNS_12_OutputArrayEddib", "icv_s8_ownippiDotProd_32f64f_C1R", "_ZN2cv9Feature2D16detectAndComputeERKNS_11_InputArrayES3_RSt6vectorINS_8KeyPointESaIS5_EERKNS_12_OutputArrayEb", "icv_w7_ownLaplRow5x5_16s_C3", "icv_w7_ownResize4Cubic16u", "Java_org_opencv_android_Utils_nBitmapToMat2", "icv_w7_ippiIntegral_8u32s_C1R", "icv_p8_ownSS3_41_16s", "icv_g9_ippiCopyMirrorBorder_32s_C1R", "icv_p8_ippiNormRel_Inf_8u_C1R", "icv_s8_ownscDftFwd_Fact_64fc", "_ZN2cv4cuda5EventC2ENS1_11CreateFlagsE", "_ZN2cv35createShapeContextDistanceExtractorEiiffiRKNS_3PtrINS_22HistogramCostExtractorEEERKNS0_INS_16ShapeTransformerEEE", "icv_p8_ownpi_dInterVector_NN_16_C1", "icv_p8_ownsIndx_32f_W7", "icv_w7_ownsInitDftPrimeFact_32f_32f", "icv_s8_ownpi_WarpAffine_C_Mem_16s_C4", "icv_s8_ownSShorisontal_16u", "icv_w7_ippiResizeGetSize_L", "_ZNK3tbb18captured_exception4nameEv", "icv_w7_ownpi_Rotate180_16_C4R", "icv_p8_owniScaleC_64f8s_C1R_acc", "icv_s8_ownResize3Antialiasing_32f", "icv_p8_ownpi_WarpAffine_CR_8u_C1", "ippicviNorm_L2_16u_C1R", "Java_org_opencv_ml_Boost_load_11", "icv_s8_ownsSet_16u", "icv_w7_ippiResizeAntialiasing_32f_C3R_L", "icv_s8_ownSumSq_8u_C3CR_W7", "icv_h9_ownSS4_31_8u", "icv_w7_owniResizeGetSrcRoi", "_ZN2cv6fontQtERKNS_6StringEiNS_7Scalar_IdEEiii", "__deregister_frame_info_bases", "icv_s8_ownpi_WarpAffine_NN_Mem_32f_C3", "icv_p8_ownpi_OrC_8u_AC4R", "icv_g9_ownpi_WarpAffineCubic_32f_C4R", "icv_h9_ownSS3_32_16u", "icv_w7_ippiWarpAffineLinear_16s_C4R", "icv_h9_ippsSet_32f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_V8", "cvApproxPoly", "icv_p8_ownSS3_53_8u", "icv_s8_ownscDFTfwd_12_32fc", "icv_s8_ownSS1_94_16u", "icv_g9_owns_rFFTinv_4_scale_64f", "iwiRoiPipeline_GetBoundedSrcRect", "icv_w7_ippiMulPack_32f_C1IR", "icv_h9_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_w7_ownRow1Lanczos3_16u", "icv_h9_ownsrDFTinv_6_32f", "Java_org_opencv_video_BackgroundSubtractorMOG2_apply_10", "icv_h9_ippiAdd_16u_C1RSfs", "Java_org_opencv_core_Core_convertScaleAbs_10", "icv_h9_owniSwapChannels_16u_C4C3R", "icv_g9_ippiDFTInit_C_32fc", "Java_org_opencv_imgproc_Imgproc_compareHist_10", "icv_h9_ippiMean_StdDev_32f_C1R", "_ZN2cv11RNG_MT19937C1Ej", "icv_ipp_is_ssx_extension", "icv_p8_ownpi_Histogram_FS_32f_C1R", "Java_org_opencv_dnn_Dnn_readTorchBlob_10", "icv_h9_owns_cFFTinv_4_64fc", "icv_p8_ownippiThreshold_V_16s_C3", "icv_w7_owniResizeLanczos_16s_C4R", "icv_w7_ownsSet_64s", "icv_n0_own_ipps_dSinCos_S9LAynn", "_ZN2cv7directx27convertFromDirect3DSurface9EP17IDirect3DSurface9RKNS_12_OutputArrayEPv", "icv_s8_ownColLanczos3_32f", "icv_p8_owniCopy8u_C4C1_W7", "icv_s8_owns_sDctFwd_Dir_32f", "_ZN2cv6detail26restoreImageFromLaplacePyrERSt6vectorINS_4UMatESaIS2_EE", "icv_h9_ownsSub_16s_1Sfs", "icv_s8_ownpis_Max_8u_C4", "icv_w7_ownRow1Linear16s", "icv_h9_ippiSwapChannels_32f_C3C4R", "icv_w7_ownpi_dInterVectorClip_L_8u_P3", "icv_s8_ippsRound_64f", "icv_s8_ippiCopyMirrorBorder_32s_C3R", "icv_g9_ippiFilterBoxBorder_32f_C3R", "icv_p8_ippiCopyConstBorder_32s_C1R_L", "icv_h9_ownRow4Antialiasing_16s", "icv_s8_ippiScaleC_8u16u_C1R", "ippicviNormDiff_L1_8u_C1MR", "icv_p8_ownippsSqrt_32f", "icv_h9_ownRow4Linear16u", "Java_org_opencv_video_KalmanFilter_KalmanFilter_10", "icv_g9_owns_cFFTinv_8_64fc", "icv_g9_ownscDFTfwd_11_scale_32fc", "icv_h9_ownpi_WarpAffineSimpleCubic_32f_C3R", "icv_s8_ownpi_WarpSimpleLinear_32f_C3R", "icv_w7_ippiNormRel_Inf_8u_C1MR", "ippicviMean_StdDev_16u_C1R", "icv_w7_ippiCopy_16u_P4C4R", "cvSeqPopMulti", "icv_w7_ownRow3AA_16u", "icv_p8_ippiMaxIndx_8u_C1R", "icv_s8_owniTranspose16u_C1R_core2", "icv_h9_ownsInitTabDftBase_32f", "icv_s8_ownpis_Min_16s_C4", "icv_p8_ownSS3_73_8u", "icv_s8_owniFilterScharrHorizMaskBorder2_32f_C1R", "icv_w7_ownscDFTfwd_13_32fc", "icv_h9_ippiCopy_16s_C3MR", "icv_p8_ippiConvert_16s8s_C1RSfs", "_ZNK2cv11_InputArray7getMat_Ei", "icv_s8_ownAFilterRow_16s_AC4R", "icv_s8_ownRow3Linear32f", "icv_s8_owns_zBitRev1_Blk", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_W7", "icv_g9_owniFilterBilateralCom_InMem_32f_C3R", "icv_g9_owniScaleC_32s16u_C1R_fst", "icv_h9_ippiThreshold_GT_32f_C1R", "icv_n0_own_ipps_dCos_G9EPnnn", "icv_g9_ippsFFTInv_PermToR_32f", "icv_p8_ippiResizeLanczos_8u_C3R_L", "icv_p8_ippiScaleC_8u_C1IR", "icv_g9_ownSS4_52_8u", "icv_g9_ownSS3vertical_8u", "icv_s8_ownscDftInv_Prime4_64fc", "icv_p8_ownNormDiff_L2_8u_C3CMR_V8", "Java_org_opencv_imgproc_Imgproc_minAreaRect_10", "icv_p8_ownAddWeighted_32f_C1IR_W7", "icv_p8_ippiFilterMedianBorder_16u_C1R", "icv_h9_ownFilterRow32f_8u_C1R_g9e9", "icv_w7_ownSharpenRow_16s_AC4", "icv_p8_cv_ownMorphologyGetSize_1u_L", "icv_w7_ippiConvert_32s8u_C1R", "icv_p8_ippiMean_StdDev_8u_C3CMR", "icv_p8_ippiFFTGetSize_R_32f", "Java_org_opencv_core_Core_normalize_11", "icv_g9_ownsrDFTfwd_11_scale_32f", "icv_s8_ownSS3_65_32f", "icv_g9_owniCopy_8u_C4MR", "icv_p8_ippsFFTFwd_RToPerm_32f", "icv_w7_ippiDilateGetSpecSize_L", "_ZN2cv3dnn19experimental_dnn_v113readTorchBlobERKNS_6StringEb", "own_ipps_dSin_SC_A11", "icv_g9_owniResizeAntialiasing_16s_C1R_L", "_ZN2cvmlERKNS_7MatExprERKNS_3MatE", "icv_p8_ippiFilterSobelNegVertBorder_32f_C1R", "icv_g9_owniFlipCopy_8u_C1", "icv_h9_ippiNormDiff_L1_16u_C3CMR", "icv_p8_ownpi_WarpAffineNearest_16s_C1R", "icv_w7_ippiDilate_32f_C3R_L", "icv_s8_owniResizeNearest_8u_C1R", "icv_p8_ownippiFilterMin_8u_Col_AC4", "icv_h9_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_p8_owns_cFFTfwd_32_scale_64fc", "icv_g9_ippiMorphClose_32f_C1R_L", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork23workcycleObjectDetectorEv", "icv_h9_piGradientSobel32f", "icv_p8_piFilterBoxBorder_32f_C1R_1_v8u8_A", "icv_w7_owns_BitRev2_D", "icv_s8_ippiCopyMirrorBorder_8u_C3R", "icv_w7_ippiNorm_Inf_16u_C1R", "icv_s8_owniTransposeWxH_16uC4", "icv_p8_ownpi_CountInRange_32f_AC4R", "icv_p8_ownscDftInv_Prime8_32fc", "icv_w7_ownMinEigenVal_32f_C1R_W7", "icv_w7_ownscDftFwd_Prime3_32fc", "icv_w7_ownippiFilterMedianVert_16s_1x5", "ippicviHarrisCornerGetBufferSize", "icv_h9_ownMean_8u_C3MR_HSW", "_ZNK2cv4UMat6getMatEi", "icv_h9_ownsrDFTfwd_12_scale_64f", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_V8", "icv_h9_ownippiFilterMedianVert_16u_1x3", "icv_s8_ownBFilterRow32f_8u_C1R", "icv_h9_ownpi_WarpSimpleNearest_32f_C3R", "icv_w7_ippiFilterMin_32f_Col_AC4_A6", "_ZNK2cv4cuda10DeviceInfo11pciDeviceIDEv", "icv_s8_cv_ownMorphologyGetSize_L", "icv_g9_ippiMirror_16s_C3R", "icv_s8_owniResizeLanczos_32f_C4R", "icv_w7_ownpi_WarpAffine_C_Mem_16u_C3", "icv_s8_owns_cFFTfwd_16_scale_64fc", "icv_s8_ownpi_WarpAffineLinear_8u_C4R", "icv_w7_owniConvert_32f16s_W7", "icv_p8_ownpi_dInterVectorClip_L_8u_AC4", "_ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E", "icv_p8_owniTranspose_8u_C3R", "_ZNK2cv3dnn19experimental_dnn_v13Net20getMemoryConsumptionERKSt6vectorIiSaIiEERjS8_", "icv_s8_ownpi_CheckQuad", "icv_p8_owniScaleC_64f16u_C1R_fst", "icv_w7_ownpi_SimpleRotate_8u_C4R", "icv_s8_ownNormDiff_L1_8s_C1MR_W7", "Java_org_opencv_video_BackgroundSubtractorMOG2_getBackgroundRatio_10", "icv_w7_ownscDftFwd_Fact7_64fc", "icv_h9_ownscDFTinv_13_64fc", "_ZN2cvanERKNS_3MatERKNS_7Scalar_IdEE", "icv_h9_ippiThreshold_LTVal_8u_C1IR", "icv_s8_ownpi_Xor_8u_C1R", "icv_w7_ippiNormDiff_L1_16u_C3CMR", "_ZN2cv8internal18WriteStructContextD1Ev", "icv_s8_ownCalcBorderR1Lanczos2_16u", "icv_s8_ownRow1Filter14_16u", "icv_h9_ownpi_WarpSimpleLinear_32f_C4R", "icv_p8_ownCalcBorderR3Antialiasing_16u", "icv_w7_ippiErodeGetBufferSize_L", "icv_p8_owniExchange_8u_I", "_ZN2cv5MatOpD2Ev", "icv_g9_ownsrDFTfwd_12_scale_32f", "Java_org_opencv_ml_SVM_getP_10", "icv_g9_ippiSet_16u_C3R", "icv_h9_ownsFFTGetBufSize_R_64f", "_ZNK2cv3ocl6Device16memBaseAddrAlignEv", "icv_s8_ippiCopy_16s_C3R", "icv_h9_ownscDFTinv_3_scale_64fc", "icv_h9_ownpi_Rotate90_32_C1R", "ippicviWarpAffineLinear_64f_C3R", "icv_h9_ownsrDFTinv_5_64f", "Java_org_opencv_core_Core_borderInterpolate_10", "icv_p8_ownMinMaxIndx_32f_C1R_W7_1", "icv_h9_Angle_16s", "Java_org_opencv_ml_ANN_1MLP_setTrainMethod_11", "icv_s8_ipMirror45_16uC1R", "icv_g9_ippiCopyMirrorBorder_16s_C4R", "_ZNK2cv13HOGDescriptor19detectMultiScaleROIERKNS_3MatERSt6vectorINS_5Rect_IiEESaIS6_EERS4_INS_12DetectionROIESaISA_EEdi", "icv_w7_ippiWarpAffineLinear_8u_C3R", "icv_p8_piGradientSobel32f_3x3_row_c1", "icv_h9_ippiConvert_32f8s_C1R", "icv_h9_ownNormDiff_L2_32f_C3CMR_HSW", "Java_org_opencv_objdetect_CascadeClassifier_CascadeClassifier_10", "_ZN2cv9magnitudeERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_s8_ippiFilterBorder_32f_C1R", "Java_org_opencv_imgproc_Imgproc_fitLine_10", "icv_g9_ownResize1Lanczos2_16u", "icv_w7_ippiWarpAffineNearest_8u_C4R", "ippicviFilterSobelNegVertBorder_32f_C1R", "icv_s8_ippiCopy_16s_C1C4R", "_ZN2cv9watershedERKNS_11_InputArrayERKNS_17_InputOutputArrayE", "icv_w7_ownscDftInv_Fact2_64fc", "icv_w7_ownippiFilterMedian_16s_C4R_5x5", "ippicviNot_8u_C1R", "icv_w7_ownCanny_16s8u_C1R_3_16u_W7", "icv_p8_owniScaleC_8s8s_C1R_fst", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_V8", "icv_s8_owns_initTabBitRev", "icv_g9_owniCopyMirrorBorder_32s_C3R_L", "icv_w7_owniCopy32s_C4P4_W7_NT", "_ZN3tbb8internal14observer_proxyC2ERNS0_26task_scheduler_observer_v3E", "icv_s8_owniGetRectLeftBF_32f_C1R", "icv_s8_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss", "cvReleaseFileStorage", "icv_w7_ownscDFTinv_5_scale_64fc", "icv_h9_ownCalcBorderR4Antialiasing_16s", "icv_g9_ippiCompare_16s_C1R", "icv_h9_ippiNormDiff_L1_8u_C1MR", "icv_g9_ippiScaleC_32s_C1IR", "_ZN2cv25BOWImgDescriptorExtractorC1ERKNS_3PtrINS_17DescriptorMatcherEEE", "ippicviMirror_16u_C4IR", "icv_s8_owniFilterRobertsDownBorder2_16s_C1R", "icv_w7_ownMinMaxIndx_32f_C1R_W7_1", "ippicviTranspose_32f_C1IR", "icv_w7_ownpi_Rotate180_8_C1R", "Java_org_opencv_photo_Photo_edgePreservingFilter_10", "_ZN2cv4readERKNS_8FileNodeERNS_3MatERKS3_", "icv_p8_ownpi_Min_32f_C3R", "icv_g9_ownSS1_94_8u", "icv_w7_ownpi_WarpSimpleCubic_16u_C1R", "icv_s8_ownippiFilterMedianVert_16u_1x5", "icv_h9_ownpi_Rotate180_64_C1R", "icv_h9_ownNormRel_L1_32f_C1MR_HSW", "_ZN2cv6ScharrERKNS_11_InputArrayERKNS_12_OutputArrayEiiiddi", "icv_p8_ownpi_MinMax_32f_C3R", "_ZN2cv3dnn19experimental_dnn_v110SliceLayer6createERKNS1_11LayerParamsE", "_ZN2cv5flann11IndexParams7setBoolERKNS_6StringEb", "icv_h9_ownpi_WarpSimpleNearest_8u_C4R", "icv_w7_ownippiFilterMedianVert_16u_C4R", "icv_h9_ownCalcBorderR1Linear8u", "_ZN2cv11VideoWriterC1Ev", "icv_s8_ownpi_NormInf_32f_C1R", "icv_w7_ippiCopyMirrorBorder_8u_C1IR_L", "icv_s8_ippiSet_8u_C4R", "icv_p8_ownpi_NormInf_16u_C1R", "icv_w7_ippiFilterBorder_8u_C4R", "icv_s8_ippiWarpAffineNearest_32f_C4R", "icv_h9_ownpi_WarpAffineLinear_32f_C4R", "Java_org_opencv_calib3d_Calib3d_reprojectImageTo3D_11", "icv_s8_ownMinEigenVal_16s32f_C1R_W7", "icv_p8_ippiFilterMinBorderGetBufferSize", "icv_p8_owniFilterScharrHorizMaskBorder2_8u16s_C1R", "Java_org_opencv_imgproc_Imgproc_boxFilter_12", "icv_s8_ippiMirror_32f_C4R", "icv_p8_ownpi_WarpAffineNearest_16u_C3R", "ippicviCopySubpixIntersect_8u32f_C1R", "Java_org_opencv_core_Core_getThreadNum_10", "icv_w7_ippsMagnitude_32f", "Java_org_opencv_calib3d_Calib3d_distortPoints_10", "icv_p8_ownpi_Histogram_16u_AC4R", "icv_g9_ippiCopy_16u_P3C3R", "_ZN2cv6detail14FeatherBlender7prepareENS_5Rect_IiEE", "icv_s8_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "Java_org_opencv_calib3d_Calib3d_solveP3P_10", "icv_g9_ippiResizeLanczos_16s_C1R_L", "icv_g9_ippsExp_64f_A50", "_ZN2cv8internal15IntrinsicParams4InitERKNS_3VecIdLi2EEES5_RKNS2_IdLi4EEERKd", "icv_p8_cv_ownippiFilterMax_16u_Col", "Java_org_opencv_ml_DTrees_getUse1SERule_10", "icv_p8_ownAddProduct_32f_C1IMR_W7", "_ZN2cv3hal5and8uEPKhjS2_jPhjiiPv", "icv_h9_ippiCopy_16u_C3AC4R", "icv_s8_ownpi_WarpAffine_L_Repl_16u_C1", "icv_s8_ippiWarpAffineLinear_16s_C4R", "icv_g9_ownsrDFTinv_12_scale_64f", "_ZN2cv11FileStorage5writeERKNS_6StringES3_", "_ZNK2cv3dnn19experimental_dnn_v13Net14getLayersCountERKNS_6StringE", "icv_w7_ownLaplRow5x5_8u_C3", "icv_p8_ippiCopyReplicateBorder_16s_C3IR", "icv_w7_ownNormRel_Inf_8s_C1MR_W7", "icv_p8_ownpi_MinMax_8u_C4R", "_ZNK2cv3ocl6Device20nativeVectorWidthIntEv", "icv_s8_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_W7", "icv_w7_ownWarpSimple1Nearest16u", "icv_h9_ownResize3Linear16s", "icv_p8_owniGetRectRightBF_32f_C1R", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColoredMulti_11", "ippicviMorphClose_16s_C1R_L", "ippicviCannyBorder_8u_C1R", "icv_h9_ippiDilateGetSpecSize_L", "icv_s8_ownpi_WarpAffine_C_Mem_64f_C1", "icv_w7_ownCalcBorderR1Antialiasing_32f", "Java_org_opencv_features2d_GFTTDetector_setBlockSize_10", "icv_g9_ippiSwapChannels_16u_C4C3R", "icv_g9_owniClipRectZeroTail_16u32f_C1R", "icv_g9_ippiMoments64f_32f_C1R", "icv_g9_ippiAddSquare_16u32f_C1IR", "icv_w7_ownpi_WarpAffine_C_Repl_32f_C3", "_Z7cvFloorRKN2cv10softdoubleE", "_ZNK2cv9Algorithm14getDefaultNameEv", "icv_s8_ownCalcBorderR4Lanczos3_16u", "icv_h9_ippiFilterMedianBorderGetBufferSize", "icv_s8_ownSS3_31_16u", "icv_s8_ownpi_WarpAffine_C_Transp_8u_C1", "icv_s8_ownSSvsum_32f", "icv_p8_owns_cFFTinv_4_scale_32fc", "_ZNK2cv5MatOp3addERKNS_7MatExprERKNS_7Scalar_IdEERS1_", "icv_s8_ownsrDFTinv_5_scale_64f", "icv_h9_ownFilterRow32f_8u_C4R_g9e9", "icv_w7_ownsrDFTfwd_7_64f", "_ZNK2cv5MatOp3addERKNS_7MatExprES3_RS1_", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_W7", "_ZN2cv9videostab14StabilizerBase16postProcessFrameERKNS_3MatE", "icv_s8_ownpi_WarpAffineSimpleLinear_16u_C1R", "icv_w7_ippi_cDftMerge_32fc", "icv_h9_owniFilter32f_16s_C3R_g9e9_1", "icv_h9_ownBuildFilter_64f", "icv_p8_owniSet_16s_C4_W7", "icv_w7_ippiDotProd_16s64f_C1R", "icv_p8_ippiTranspose_16s_C4R", "_ZN2cv9videostab23MotionEstimatorRansacL2C2ENS0_11MotionModelE", "icv_h9_ownippiFilterMedianHoriz_16u_BC4R", "icv_g9_ippiWarpAffineNearest_8u_C1R", "icv_h9_ownRow1Linear8u", "icv_p8_ownscrDftFwd_Prime3_32f", "icv_s8_ownscDftFwd_Prime8_32fc", "icv_h9_ownSS1_43_8u", "icv_w7_ownscDFTfwd_9_32fc", "Java_org_opencv_calib3d_Calib3d_solvePnP_11", "icv_p8_ippiMorphGradient_32f_C4R_L", "Java_org_opencv_imgproc_Imgproc_initUndistortRectifyMap_10", "icv_p8_owns_rFFTinv_8_64f", "_ZN2cv3LDA11reconstructERKNS_11_InputArrayE", "Java_org_opencv_features2d_AgastFeatureDetector_setNonmaxSuppression_10", "icv_h9_ownResize4Lanczos2_32f", "icv_h9_ownRow1Filter2_8u", "icv_s8_owniFilterMedianBorderInMem_32f_C1R", "cvGetMinMaxHistValue", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKSt6vectorINS_8KeyPointESaIS6_EE", "_ZN2cv3Mat3eyeEiii", "icv_w7_ippiResizeLanczos_16s_C1R_L", "icv_w7_ippiCopyConstBorder_16s_C1R", "_ZN2cv8Subdiv2D11deletePointEi", "ippicviScaleC_32f8s_C1R", "ippicviAdd_16u32f_C1IMR", "icv_p8_ownMinEigenVal_16s32f_C1R_W7", "icv_s8_owns_crFftFwd_CoreMT_32f", "icv_w7_ownscrDftInv_Fact2_32f", "icv_w7_ippiCopyConstBorder_16u_C1R", "icv_n0_own_ipps_sCos_G9HAynn", "_Z19vector_Vec6f_to_MatRSt6vectorIN2cv3VecIfLi6EEESaIS2_EERNS0_3MatE", "icv_g9_ownpi_WarpAffineLinear_16u_C1R", "Java_org_opencv_calib3d_StereoSGBM_getP2_10", "Java_org_opencv_core_Core_bitwise_1xor_11", "Java_org_opencv_core_Mat_n_1step1__J", "icv_h9_owniResizeNearest_32f_C4R", "icv_h9_ownpi_WarpAffine_NN_Mem_16s_C1", "_ZN2cv8internal15IntrinsicParamsplERKNS_3MatE", "icv_w7_ippiCopy_16s_C1MR", "_ZN2cv5MutexC2ERKS0_", "icv_h9_owniResizeLinearInit", "icv_s8_ownRow4Lanczos3_8u", "icv_w7_ownRow3AA_8u", "icv_g9_ippiAdd_8u32f_C1IMR", "icv_g9_ownpi_WarpAffineLinear_32f_C4R", "icv_w7_ownCalcBorderR1Antialiasing_16s", "icv_g9_ownscDFTinv_6_scale_64fc", "icv_p8_ownResize3Lanczos2_32f", "cvCreateData", "icv_p8_ownpis_Indx_32f_C3", "icv_g9_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "icv_w7_owniExchange_8u_I_A6", "Java_org_opencv_ml_ANN_1MLP_setRpropDW0_10", "_ZN2cv5flann33HierarchicalClusteringIndexParamsC2EiN7cvflann20flann_centers_init_tEii", "icv_s8_owniFilterSobelVertBorder2_8u16s_C1R", "icv_s8_ippiCopyReplicateBorder_32f_C1R", "icv_w7_ippiRectStdDev_32f_C1R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_W7", "icv_g9_ownsrDFTfwd_11_scale_64f", "icv_h9_ownsrDFTfwd_5_64f", "icv_g9_ownscDFTfwd_3_scale_32fc", "icv_g9_ippiCompare_32f_C1R", "icv_h9_owniFilterBilateralR1_InMem_32f_C3R", "_ZNK2cv8Subdiv2D7getEdgeEii", "icv_g9_ownpi_NormInfDiff_16s_C1R", "icv_p8_ownSS1_16s", "iwVector_Init", "Java_org_opencv_ml_StatModel_train_11", "Java_org_opencv_video_BackgroundSubtractor_apply_10", "icv_s8_ownpi_Rotate180_32_C1R", "_ZNK2cv17DescriptorMatcher8knnMatchERKNS_11_InputArrayES3_RSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "_ZN2cv6detail9resultRoiERKSt6vectorINS_6Point_IiEESaIS3_EERKS1_INS_5Size_IiEESaIS9_EE", "icv_p8_owns_cFftFwd_Fact4_Last_32fc", "icv_g9_ownSS3_98_16s", "icv_g9_owniResizeCubic_16s_C4R", "icv_w7_ownscDFTfwd_6_32fc", "icv_s8_owniResizeSuper_8u_C4R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_V8", "ippicviAbsDiff_8u_C1R", "icv_h9_ownFilterBoxBorderInMem_16u_C1IR", "icv_p8_ippiCopy_8u_P4C4R", "icv_h9_ippiMinEigenVal_8u32f_C1R", "icv_h9_ippiMorphInit_L", "Java_org_opencv_ml_SVM_setClassWeights_10", "icv_g9_ownpi_NormL2_16s_C1R", "_ZN2cv10moveWindowERKNS_6StringEii", "icv_p8_ippiResizeAntialiasing_32f_C4R_L", "icv_h9_ownscDftFwd_Fact3_32fc", "icv_p8_owniFilterScharrHorizMaskBorder2_16s_C1R", "iwiFilterMorphology", "icv_h9_owniResizeCubic_32f_C1R", "icv_w7_ippiAddSquare_8u32f_C1IR", "_ZN2cv5MutexC1Ev", "icv_g9_ownpi_SimpleRotate_8u_C4R", "icv_g9_ippiMax_32f_C1R", "icv_w7_owniTranspose_32s_C1R_W7", "ippicviScaleC_16s_C1R", "icv_g9_ippsCopy_16s", "icv_s8_ownpi_WarpSimpleLinearInit", "icv_s8_ippiResizeNearest_32f_C4R_L", "_ZN2cv9videostab14StabilizerBase5setUpERKNS_3MatE", "_ZNK2cv11_InputArray12getOGlBufferEv", "icv_h9_ownscDftInv_Prime8_64fc", "_ZN2cv4cuda7HostMem6createEiii", "icv_g9_ownResize1Nearest8u", "icv_w7_ippiSum_8u_C3R", "icv_g9_owniResizeLinear_32f_C4R", "icv_g9_ippsDCTInvInit_32f", "icv_s8_ownSS4_31_8u", "icv_w7_ownpi_WarpSimpleCubic_16s_C1R", "Java_org_opencv_features2d_AgastFeatureDetector_create_10", "icv_s8_owniSet32sC3Mas", "ippicvsSortRadixAscend_8u_I", "icv_p8_ownpi_MinMax_8u_AC4R", "icv_g9_owniFilterBilateralR1_InMem_8u_C3R_px", "icv_w7_ownRow3Lanczos3_16u", "icv_h9_ownpi_WarpAffineNearest_32f_C3R", "icv_s8_owns_cBitRev1_Blk", "_ZN2cv6detail29restoreImageFromLaplacePyrGpuERSt6vectorINS_4UMatESaIS2_EE", "icv_w7_ownippiFilterMedianCross_16s_C4R_5x5", "icv_s8_ippiMorphOpen_8u_C1R_L", "icv_s8_owniCCDiv_32f_C1IR", "icv_s8_ippiMorphOpen_16u_C1R_L", "_ZN2cv11mixChannelsEPKNS_3MatEjPS0_jPKij", "icv_p8_ownpi_AndC_16u_C3R", "icv_p8_ippiFilterBilateralBorder_8u_C3R_L", "icv_g9_ownpi_dInterVectorClip_C_16u_C3", "icv_w7_ippiResizeAntialiasing_16u_C1R_L", "icv_h9_ownpi_CmpLE_32f_C1R", "icv_h9_cv_ownippiFilterMax_16s_Msk", "icv_g9_owniConvert_8s16u_ccode", "icv_g9_ownWarpSimple1Nearest8u", "icv_p8_ownSS1_31_32f", "Java_org_opencv_core_Core_merge_10", "icv_h9_ownSS4_53_8u", "icv_s8_ippiMinEigenVal_32f_C1R", "icv_h9_ownSS1_83_8u", "icv_s8_ownCalcBorderR4Antialiasing_16u", "icv_s8_ownCanny_16s8u_C1R_3_32s_W7", "icv_p8_ownSS1_73_16s", "icv_p8_ownAddWeighted_8u32f_C1IR_W7", "icv_g9_ownpi_NormL1Diff_16s_C1R", "icv_w7_ownsAdd_8u_Bound", "icv_p8_ownscDFTfwd_15_64fc", "icv_p8_ippiThreshold_GT_8u_C1R", "WebPDecode", "icv_s8_ownpi_WarpAffineSimpleNearest_8u_C1R", "_ZN2cv4cuda19printCudaDeviceInfoEi", "icv_p8_ippiErode_8u_C1R_L", "icv_h9_ippsMagnitude_64f", "icv_h9_ownBuildWarpFilter_64f", "icv_s8_owniCopy_8u_P3C3R", "icv_s8_ownResize1Linear16u", "icv_h9_ownpi_Sum_16s_C4R", "icv_w7_ownscDftFwd_Prime7_32fc", "_ZNK2cv4cuda6GpuMat7reshapeEii", "icv_p8_owniCopyReplicateBorder_8u_C1R", "icv_g9_owns_sDctInv_Conv_32f", "WebPPictureARGBToYUVADithered", "Java_org_opencv_imgproc_Imgproc_polylines_12", "icv_g9_ownCalcBorderR1Lanczos2_16s", "icv_h9_owniScaleC_32s32f_C1R_fst", "icv_w7_ownscDftFwd_Fact11_64fc", "icv_p8_ownFilterBoxBorder_16u_C1R", "icv_s8_owniFlip_8u_C4I_W7", "ippicviMean_StdDev_8u_C3CR", "cvSetReal2D", "icv_h9_ownSSvsum_8u", "icv_s8_owniCmpLessEq_16u_C1R", "icv_w7_ippiFilterMedianCross_16s_C3R_5x5_A6", "icv_s8_owns_cRadix4FwdNorm_64fc", "icv_h9_ippiCopy_16u_C4C1R", "icv_p8_ippiResizeSuper_16s_C3R_L", "icv_w7_ownAddProduct_8u32f_C1IMR_W7", "icv_s8_ippiResizeSuper_16u_C4R_L", "icv_w7_ownResize3Antialiasing_16u", "_ZNK2cv8FileNode7isNamedEv", "_ZN2cv4cuda6GpuMatC1ERKS1_NS_5Rect_IiEE", "cvTypeOf", "icv_p8_ownCalcBorderR4Antialiasing_16u", "icv_s8_ippiConvert_32s8u_C1R", "icv_p8_ownpi_WarpAffine_L_Const_32f_C3", "icv_p8_ownRow3Cubic16u", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork4stopEv", "icv_p8_owniNormLevel_32f_C1R", "icv_s8_ownscDft_Conv_32fc", "icv_h9_ippiCopyReplicateBorder_8u_C1R_L", "icv_g9_ippiMorphBlackhat_8u_C1R_L", "icv_p8_owniConvert_32s8s_W7", "icv_h9_ippiResizeLinearInit_L", "icv_p8_owniCopyConstBorder_C4R_W7", "icv_p8_ownscrDftInv_Fact_32f", "icv_s8_owniSwap_16s_C3C4R", "Java_org_opencv_video_DenseOpticalFlow_calc_10", "icv_ipp_isnan", "icv_w7_ownippiFilterxBrd32f_16u_C1R", "icv_s8_ippiSet_16s_C1R", "icv_n0_own_ipps_dLn_S9HAynn", "icv_w7_ownsAdd_16s_NegSfs", "icv_h9_owniFilterBilateralR2_InMem_8u_C1R_px", "icv_w7_ownippiFilterMin_16s_Col_AC4", "icv_w7_ownpi_HistogramEven_16u_C1R", "icv_s8_ippiCopyMirrorBorder_8u_C1IR", "icv_g9_ippiScaleC_8s64f_C1R", "_ZNK2cv4cuda10DeviceInfo12minorVersionEv", "icv_p8_owniFlip_8u_C1", "icv_p8_owns_crFftInv_CoreMT_32f", "icv_w7_ownSumSq_8u_C3CMR_W7", "icv_g9_ippiDilate_8u_C1R_L", "icv_s8_ippiResizeAntialiasing_32f_C3R_L", "icv_p8_ownRectStdDev_32f_C1R_W7", "icv_p8_ownCalcBorderR4Cubic16u", "icv_h9_ippiMorphBlackhat_8u_C1R_L", "ippicviConvert_32s8s_C1R", "_ZN2cv3ocl8internal10isCLBufferERNS_4UMatE", "Java_org_opencv_core_Core_PCACompute_11", "icv_p8_ippiSqrt_32f_C1R", "icv_s8_ippiSum_8u_C1R", "_ZN2cvdvERKNS_7MatExprERKNS_3MatE", "icv_h9_piFilterBoxBorder_32f_C1IR_px", "Java_org_opencv_features2d_Params_get_1filterByInertia_10", "icv_g9_owniFilter32f_16s_C3R_g9e9_3", "icv_w7_ippiCopyMirrorBorder_16s_C3R", "icv_s8_ippiResizeSuper_8u_C4R_L", "icv_p8_owniResizeLanczos_16u_C3R", "_ZN2cv10softdoubleC2Ei", "icv_w7_ownResize4Lanczos3_16s", "icv_s8_ippiTranspose_32s_C3IR", "_ZN2cv3Mat5zerosEiPKii", "icv_g9_ippiThreshold_GT_8u_C1R", "icv_g9_ownsrDFTinv_11_64f", "icv_p8_ippiAdd_8u32f_C1IMR", "icv_g9_ownpi_WarpAffineRectFP", "icv_w7_owniConvert_32f16s_AC4_W7", "icv_s8_ownippiFilterMax_8u_Row", "icv_s8_ownpi_Xor_8u_AC4R", "icv_p8_ownRow1Linear16s", "icv_p8_ownDistanceTransform_5x5_8u32f_C1R_21F", "ippicviFilterMedianBorder_32f_C1R", "icv_g9_ownDistanceTransform_3x3_8u32f_C1R_21B_g9e9", "icv_g9_ippiAddSquare_8u32f_C1IR", "icv_g9_ippiNormDiff_L2_8u_C1MR", "icv_g9_owniScaleC_64f32f_C1R_acc", "Java_org_opencv_imgproc_Imgproc_erode_10", "icv_p8_ownpi_Or_32s_AC4R", "icv_h9_ownFilter32f_16s_C1R_g9e9", "icv_g9_owniCmpEq_16u_C1R", "icv_g9_ownFilterRow32f_16s_C3R_g9e9", "_ZN2cv28connectedComponentsWithStatsERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_ii", "icv_h9_ippiCrossCorrNormGetBufferSize", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_W7", "_ZNK2cv3ocl6Device12imageSupportEv", "icv_g9_ownSS1_a7_32f", "icv_w7_ownLinearKernelAA", "Java_org_opencv_ml_LogisticRegression_setMiniBatchSize_10", "_ZN2cv9SparseMat3HdrC1EiPKii", "icv_h9_ownRow3Linear16s", "icv_p8_ippiNormRel_Inf_16u_C1R", "icv_h9_ownpi_Rotate90_64_C1R", "Java_org_opencv_photo_Photo_colorChange_10", "icv_w7_owniCopy8u_C4P4_A6", "icv_p8_owns_cFftFwd_CoreMT_32fc", "icv_h9_ownippiFilterMedian_16s_C1R_5x5", "icv_s8_owns_initTabDct_Dir_32f", "iwInit", "icv_p8_ownpi_MinMax_8u_C1R", "icv_p8_ownSS1vertical_32f", "_ZN2cv15BriskScaleSpaceC2Ei", "ippicviFilterScharrHorizMaskBorderGetBufferSize", "ippicviCrossCorrNorm_32f_C1R", "icv_h9_ownsrDFTfwd_10_32f", "_ZNK2cv9softfloatneERKS0_", "icv_w7_owns_cFFTfwd_32_scale_32fc", "icv_h9_ippiResizeLinear_8u_C4R_L", "icv_h9_ownpi_WarpAffineLinear_32f_C3R", "_ZN2cv9Exception13formatMessageEv", "_ZN2cv3ocl7ProgramD1Ev", "icv_p8_owniResizeLinear_64f_C4R", "icv_s8_ippiWarpAffineCubic_64f_C4R", "icv_w7_owns_cFFT_2_64fc", "_ZN2cv3ogl9Texture2D6createEiiNS1_6FormatEb", "_ZN2cv4readERKNS_8FileNodeERNS_9SparseMatERKS3_", "icv_p8_owns_rFFTfwd_8_32f", "icv_h9_ownpi_WarpAffine_C_Repl_16s_C3", "icv_w7_ownCalcBorderR1Lanczos2_16u", "icv_h9_ippiScaleC_32f16s_C1R", "icv_g9_ippiDCTInv_32f_C1R", "_ZN2cv8Subdiv2D6VertexC1ENS_6Point_IfEEbi", "_ZNK2cv3ocl6Device9availableEv", "Java_org_opencv_ml_RTrees_create_10", "icv_s8_ippiNorm_L2_16u_C1R", "icv_w7_owns_cFFT_2_scale_64fc", "icv_s8_owniTranspose_32s_C1IR_W7", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkD2Ev", "icv_h9_owniScaleC_32s16u_C1R_fst", "_ZN2cv12ellipse2PolyENS_6Point_IiEENS_5Size_IiEEiiiiRSt6vectorIS1_SaIS1_EE", "icv_s8_ippiDCT8x8Inv_32f_C1", "icv_w7_ownscDFTinv_3_64fc", "icv_g9_owns_initDctInv_Conv_32f", "icv_s8_ownResize4Lanczos2_16u", "icv_s8_ownsrDftFwd_Conv_64f", "icv_p8_owniGetRectBottomBF_8u_C3R", "icv_p8_ownscDFTinv_13_64fc", "icv_g9_owniConvert_8u8s_sse42", "icv_p8_ownippiThreshold_GLV_16s_AC4", "icv_s8_ippsPolarToCart_64f", "icv_w7_ownColLanczos3_8u", "icv_h9_ownsrDFTfwd_11_64f", "icv_w7_ownsInitTabDftDir_32f", "Java_org_opencv_imgproc_Imgproc_pyrUp_12", "icv_p8_ownpi_WarpAffineLinear_64f_C3R", "icv_s8_ownippiFilterMin_32f_Col", "icv_h9_owniResizeLinear_16s_C1R", "icv_h9_ippiResizeNearest_32f_C4R_L", "icv_p8_ownpi_SimpleRotate_16u_C1R", "icv_p8_ownscDFTinv_13_32fc", "Java_org_opencv_core_Algorithm_delete", "_ZN2cv13projectPointsERKNS_11_InputArrayES2_S2_S2_S2_RKNS_12_OutputArrayES5_d", "_ZN2cv17accumulateProductERKNS_11_InputArrayES2_RKNS_17_InputOutputArrayES2_", "icv_s8_ippiMirror_16u_C3R", "icv_s8_ownsrDFTinv_10_scale_64f", "icv_p8_ownpi_WarpAffineSimpleNearest_64f_C3R", "icv_g9_ownFilterRow32f_16s_C4R_g9e9", "icv_s8_ownBFilterRow32f_16s_C4R", "icv_s8_ownColAntialiasing_8u", "icv_g9_ippiCopy_32f_C1MR", "_ZN3tbb18captured_exceptionD0Ev", "_ZN2cv11writeScalarERNS_11FileStorageEi", "icv_g9_ownpi_WarpAffine_L_Mem_8u_C3", "_ZNK2cv17CommandLineParser5checkEv", "icv_g9_ownpi_WarpAffine_L_Const_32f_C4", "icv_h9_ippiFilterBilateralBorderGetBufferSize", "_ZN2cv10BriskLayerC1ERKNS_3MatEff", "icv_p8_ownCopySubpixIntersect_32f_C1R_V8", "icv_w7_ownpi_Rotate90_64_C3R", "ippicviMean_StdDev_8u_C1R", "icv_h9_ippiCopyMirrorBorder_32s_C1R", "icv_p8_ippsSortRadixIndexDescend_32s", "icv_s8_ownpi_WarpAffineLinear_16u_C4R", "icv_w7_owniCopy_16s_C3M_W7", "icv_p8_ownSS1_54_16u", "icv_p8_ownsMul_8u_Bound", "_ZNK3tbb14bad_last_alloc4whatEv", "icv_g9_ippiThreshold_LTVal_32f_C1R", "icv_s8_ownscDFTinv_14_64fc", "icv_w7_ippsSortRadixDescend_32s_I", "Java_org_opencv_photo_Photo_pencilSketch_10", "icv_g9_ownippiFilterMedianSqr_16u_C3R", "icv_h9_ownpi_WarpAffine_C_Mem_16s_C1", "_ZNK2cv11_InputArray4kindEv", "ippicviMinEigenValGetBufferSize_8u32f_C1R", "icv_p8_ippiNorm_Inf_16u_C3CMR", "_ZN2cv9videostab20FromFileMotionReader8estimateERKNS_3MatES4_Pb", "icv_g9_owniFilterBilateralCom_InMem_8u_C1R_px", "_ZN2cv4cuda6GpuMat6uploadERKNS_11_InputArrayE", "icv_h9_ownippiFilterMax_32f_Row_avx2", "icv_s8_ippiFilterBilateralBorder_32f_C1R", "icv_w7_ownpi_WarpAffine_C_Mem_32f_C4", "icv_s8_ownSS4_53_16s", "icv_w7_ippiMinMax_32f_C1R", "Java_org_opencv_core_Core_PCACompute_12", "icv_p8_cv_ownippiFilterMin_16u_Row", "_ZN2cv2ml9ParamGridC2Eddd", "icv_g9_innerHLSToRGB_8u_C3R", "icv_p8_owniResizeCubic_16s_C4R", "_ZN3tbb8internal8governor17release_resourcesEv", "icv_w7_ownSS3_32f", "icv_p8_owniConvert_16u32f_AC4_W7", "icv_h9_ippiCopy_8u_C1C3R", "_ZNK2cv8FileNodeixERKNS_6StringE", "icv_g9_ippiCopy_16u_C3C1R", "icv_w7_owns_cFFTinv_32_scale_32fc", "Java_org_opencv_ml_DTrees_setCVFolds_10", "icv_h9_ownpi_WarpAffineSimpleNearest_64f_C1R", "icv_g9_ownpi_WarpSimpleNearest_8u_C3R", "icv_p8_ippiCopy_32f_C3AC4R", "icv_s8_ownsrDFTinv_9_scale_64f", "icv_s8_owniSwap_16s_C4C3R", "icv_s8_ownSS1_a7_16u", "icv_p8_owniShiftClipRectZeroTail_8u32f_C1R", "icv_s8_ownpi_dInterVector_NN_32_P4", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "icv_s8_ippiResizeAntialiasing_8u_C4R_L", "ippicviConvert_16u32s_C1R", "_ZN2cv17agast_cornerScoreILi2EEEiPKhPKii", "icv_s8_piFilterBoxBorder_32f_C1IR_px", "_ZN2cv6detail14TimelapserCrop10initializeERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_5Size_IiEESaISA_EE", "ippicviFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_w7_ippiScaleC_64f8u_C1R", "icv_w7_ownLaplRow5x5_16s_C4", "icv_w7_ippiNorm_L1_16u_C3CMR", "_ZN2cv12updateWindowERKNS_6StringE", "icv_w7_ownpi_WarpSimpleNearest_32f_C1R", "_ZN2cv14setTrackbarMaxERKNS_6StringES2_i", "Java_org_opencv_photo_MergeDebevec_delete", "_ZNK2cv3ocl6Device21executionCapabilitiesEv", "icv_p8_ownscDft_Dir_32fc", "icv_h9_ownpi_WarpAffineSimpleNearest_16s_C4R", "icv_s8_ownAbsDiff_32f_C1R_W7", "icv_s8_owniFilter_32f_C1R_v8u8_7", "icv_s8_owniResizeLinear_8u_C4R", "icv_w7_owniResizeCubic_8u_C4R", "icv_h9_ippiSum_8u_C3R", "icv_g9_ownpi_NormInfRel_32f_C1R", "icv_p8_ownRow1Filter2_8u", "icv_h9_ownRow3Lanczos3_32f", "icv_h9_owniGetRectBottomBF_32f_C1R", "icv_p8_ownscDFTinv_3_scale_64fc", "icv_h9_ippiMirror_32s_C3R", "icv_s8_ippsSortRadixIndexAscend_16s", "icv_p8_ippiScaleC_8s32f_C1R", "icv_h9_ownNorm_L1_16u_C1MR_HSW", "icv_w7_ippiCopy_32s_C3MR", "icv_h9_ippiDilateGetBufferSize_L", "icv_p8_owniFilterBoxBorder_32f_C1IR", "icv_s8_ownpi_Histogram_BS_16u_C1R", "cvLoad", "icv_h9_owniResizeAntialiasingLinearInit_L", "icv_h9_ownFilterRow32f_16u_C4R_g9e9", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_h9_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "icv_w7_ownpi_OrC_32s_C3R", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_W7", "_ZNK2cv12_OutputArray13getHostMemRefEv", "ippicviMirror_16u_C3IR", "icv_p8_ownscDFTinv_11_scale_32fc", "icv_s8_ownCanny_16s8u_C1R_Mag_W7", "cvSeqPop", "icv_w7_ownscDFTfwd_12_64fc", "icv_g9_ownpi_CmpLT_32f_C1R", "icv_s8_ownippiFilterMedian_8u_C1R_3x3", "Java_org_opencv_ml_TrainData_getTestNormCatResponses_10", "icv_p8_ippiCopy_32f_C1C3R", "icv_g9_ownpi_WarpAffine_C_Repl_16u_C3", "icv_p8_ippsZero_8u", "icv_h9_owniCopyMirrorBorder_16u_C3IR", "icv_w7_ownsrDFTinv_3_32f", "icv_g9_ippiSet_16u_C3MR", "_ZN2cv21DetectionBasedTracker15InnerParametersC1Ev", "icv_p8_ownscDFTfwd_15_scale_32fc", "_ZN2cv3hal7sqrt32fEPKfPfi", "_ZNK2cv4cuda10DeviceInfo9tccDriverEv", "_ZN2cv3hal5morphEiiiPhjS1_jiiiiiiiiiiiS1_jiiiiiPKdib", "icv_w7_owniResizeSuper_16s_C4R", "Java_org_opencv_ml_DTrees_setTruncatePrunedTree_10", "icv_s8_ippiResizeSuper_8u_C3R_L", "icv_g9_owns_initTabTwdCcsRec_64f", "icv_p8_ownpi_NormL1Rel_16s_C1R", "icv_h9_ownpi_Rotate180_16_C1R", "icv_w7_ownpi_dInterVector_NN_32_P3", "icv_s8_owniFilterSobelVertBorder2_32f_C1R", "_ZN2cv8Subdiv2D8QuadEdgeC2Ev", "icv_p8_ownscDftFwd_Prime4_64fc", "icv_w7_ownsAdd_8u_1Sfs", "_ZN2cv9videostab14calcBlurrinessERKNS_3MatE", "icv_w7_ippiTranspose_8u_C3R", "icv_w7_owniResizeLinear_16s_C1R", "icv_s8_ownsrDFTfwd_10_32f", "icv_s8_ownippiThreshold_LV_32f_C4", "icv_w7_owniResizeSuper_8u_C4R", "icv_h9_piFilterBoxBorder_32f_C1IR_v8u8_NA", "icv_p8_ippiConvert_16u32f_C1R", "icv_h9_ownscDftInv_Fact13_64fc", "icv_w7_ownsConj_16sc_W7", "WebPCopyPixels", "icv_p8_ownippsSqrt_16u", "icv_g9_ownWarpSimple1Nearest16u", "cvLinearPolar", "_ZN2cv3LDA4loadERKNS_11FileStorageE", "icv_w7_ownsrDFTinv_12_scale_64f", "icv_w7_owns_crRadix4InvNorm_64f", "icv_h9_owniFilterBilateralCom_InMem_8u_C3R", "icv_s8_ownPrewColV_8u", "icv_g9_ownsInitDftPrimeFact_32f_32f", "icv_s8_ownpi_SimpleRotate_8u_C4R", "icv_s8_ippiThreshold_GTVal_32f_C1R", "icv_w7_ownAddProduct_16u32f_C1IR_W7", "icv_p8_ippiSet_8u_C4R", "icv_w7_ippsMaxEvery_16u", "Java_org_opencv_videoio_VideoCapture_open_12", "own_ipps_sSin_SC_LA", "_ZN2cv2ml6DTrees5SplitC2Ev", "icv_p8_ippiMinMaxIndx_16u_C1R", "icv_w7_ownpi_Set_64f_C4R", "icv_p8_ownpi_Set_64f_C4R", "icv_w7_ownpi_dInterVector_NN_8_P3", "icv_p8_ippiDilate_8u_C4R_L", "_ZN3tbb8internal6market7destroyEv", "icv_w7_ownpi_Max_8u_C1R", "icv_h9_ownippiFilterMin_32f_RowCol_C1_h9l9", "icv_w7_owniSet_16s_C4_W7", "icv_h9_dct_8x8_fwd_32f", "icv_h9_ippiFilterSobelVertBorderGetBufferSize", "Java_org_opencv_imgproc_Imgproc_convertMaps_11", "icv_g9_ippiCopyConstBorder_8u_C3R_L", "ippicviMorphTophat_32f_C4R_L", "icv_s8_owniCopy_16s_AC4C3R", "icv_g9_owniScaleC_32s16s_C1R_fst", "icv_s8_ippsSin_32f_A24", "_ZN2cv15scalarToRawDataERKNS_7Scalar_IdEEPvii", "icv_w7_owniConvert_8u32f_W7", "icv_s8_ippiMin_16s_C1R", "_ZN2cv2ml6DTrees4NodeC2Ev", "icv_g9_owns_rFFTfwd_16_scale_32f", "icv_s8_ownSS1_21_8u", "icv_s8_ownsGetSizeTabDftFwdRec_64f", "ippicviNorm_L2_8u_C1MR", "icv_p8_ippiCopy_8u_C1C4R", "icv_s8_ownRow1Cubic16u", "icv_p8_ownpi_Max_32f_C1R", "cvPolyLine", "icv_g9_gres_NormL2Diff_8u_C1R", "icv_h9_ownNorm_L2_32f_C3CMR_HSW", "icv_w7_ippsMaxEvery_32f", "ippicviConvert_32s32f_C1R", "icv_h9_ownNorm_L2_8u_C3CMR_HSW", "icv_h9_ownResize3Nearest8u", "icv_g9_owns_getSizeTwd_Large_64f", "icv_w7_ownResize3Linear32f", "icv_g9_ownsrDFTinv_12_scale_32f", "icv_g9_ippiScaleC_16s_C1IR", "icv_s8_ownpi_AndC_16u_C1R", "icv_p8_ippiWarpAffineCubic_32f_C1R", "icv_p8_ippiCopy_16s_P4C4R", "icv_p8_ownpi_And_16u_AC4R", "icv_w7_ippiWarpAffineNearest_16u_C4R", "_ZN2cv3MatC2ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_w7_ownpi_Rotate180_32_C3R", "icv_h9_ippiScaleC_64f32f_C1R", "icv_p8_ownCubicKernel0", "icv_g9_ownpi_WarpSimpleLinear_64f_C1R", "icv_s8_ownAddSquare_32f_C1IR_W7", "_ZNKSt9bad_alloc4whatEv", "icv_g9_ippiMean_StdDev_8u_C1MR", "icv_s8_ownsSub_8u", "ippicviFilterScharrVertMaskBorder_16s_C1R", "icv_w7_owniClipRectZeroTail_8u32f_C1R", "cvAndS", "icv_h9_ownpi_CmpLE_16s_C1R", "ippicviWarpAffineLinear_32f_C1R", "icv_h9_ippiNorm_Inf_16u_C3CMR", "icv_p8_ippiWarpAffineNearestInit", "icv_s8_owns_rFFTfwd_16_scale_32f", "icv_p8_ippiCopyConstBorder_32f_C3R", "icv_s8_ownpi_WarpAffine_L_8u_P4", "icv_s8_ippiNorm_L1_16u_C1R", "icv_w7_ownpi_OrC_16u_AC4R", "icv_p8_ownSS1vertical_16u", "icv_p8_ownHipass5x5Col_8u_AC4", "_ZN2cv3ocl8Platform10getDefaultEv", "_ZN2cv3dnn19experimental_dnn_v121readNetFromTensorflowERKNS_6StringE", "ippicvSetCpuFeatures", "Java_org_opencv_imgproc_Imgproc_ellipse_13", "icv_h9_ownNormDiff_L2_32f_C1MR_HSW", "icv_w7_ownpi_WarpAffineCubic_64f_C3R", "_ZN2cv3dnn19experimental_dnn_v114BatchNormLayer6createERKNS1_11LayerParamsE", "icv_h9_ownSS1_81_16u", "icv_w7_ownippiFilterxBrd32f_16s_C3R", "icv_h9_owniScaleC_64f8u_C1R_fst", "icv_h9_ownpi_WarpAffine_C_Mem_64f_C4", "icv_p8_ownSS1_21_32f", "icv_s8_L1magnitude_32f", "icv_g9_ippiResizeSuper_16s_C3R_L", "icv_p8_ippiResizeSuper_8u_C3R_L", "icv_s8_ippiFilterBilateralBorderGetBufferSize", "icv_h9_ownpi_Min_16u_C1R", "icv_p8_owns_rFFTinv_4_32f", "icv_s8_owns_rFFTfwd_8_scale_32f", "icv_h9_ippiConvert_16s8s_C1RSfs", "icv_w7_owniSet_8u_C1M_W7", "icv_p8_ownpi_WarpSimpleNearest_32f_C3R", "icv_p8_ippiWarpAffineCubic_16u_C3R", "icv_h9_ippiErode_8u_C4R_L", "icv_s8_ippiDotProd_16u64f_C1R", "_ZN10__cxxabiv115__forced_unwindD0Ev", "icv_p8_ippsConvert_32f8s_Sfs", "_ZN2cv9videostab25ConsistentMosaicInpainter7inpaintEiRNS_3MatES3_", "icv_ps_get_sw_fpu", "icv_s8_ownRow1Filter8_16u", "ippicviNormRel_L1_32f_C1R", "icv_h9_ippsMalloc_8u_L", "icv_g9_ownSS4_72_16s", "icv_h9_owniResizeLinear_64f_C1R", "icv_h9_ownpi_SimpleRotate_8u_C1R", "icv_p8_ownpi_MinMax_16s_C1R", "icv_p8_ownAFilterRow_8u_AC4R", "icv_h9_ownRow3Antialiasing_32f", "icv_p8_ownpi_WarpSimpleLinear_16s_C3R", "icv_p8_ownColLinear8u", "icv_p8_ownCalcBorderR1Lanczos2_8u", "Java_org_opencv_imgproc_Subdiv2D_getVertex_11", "icv_w7_owniCCDiv_32f_C1IR", "Java_org_opencv_features2d_ORB_delete", "icv_p8_ownscDftInv_Prime2_32fc", "icv_p8_owns_cFFTfwd_32_64fc", "icv_h9_owniConvert_8u16s", "icv_h9_owniScaleC_32f64f_C1R_acc", "icv_h9_ippiMorphTophat_32f_C1R_L", "icv_w7_ownscDFTfwd_5_scale_32fc", "icv_s8_ownsFFTGetBufSize_R_32f", "Java_org_opencv_features2d_FeatureDetector_detect_13", "icv_s8_ownCalcBorderR4Linear32f", "icv_s8_owniConvert_16u32f_AC4_W7", "icv_p8_ownpi_NormInfRel_16u_C1R", "icv_w7_ownippiFilterMedianCross_16u_C3R_5x5", "icv_h9_owniResizeLanczosInit", "Java_org_opencv_objdetect_HOGDescriptor_get_1winSigma_10", "icv_p8_ownpi_dInterVectorClip_C_8u_P4", "icv_g9_owniConvert_8u16s_C1R", "icv_g9_ownFilter32f_16u_C1R_g9e9", "icv_g9_ippiResizeAntialiasing_32f_C1R_L", "_ZN2cv16ParallelLoopBodyD1Ev", "icv_w7_ownWarpSimple1Nearest32f", "icv_p8_ippiSet_16u_C3MR", "icv_s8_owniFilterScharrVertMaskBorder2_8u16s_C1R", "iwiFilterSobel", "icv_h9_ownResize1Linear16s", "icv_g9_owns_rFFTfwd_8_64f", "icv_s8_ownsGetSizeTabDftInvRec_32f", "Java_org_opencv_imgproc_Imgproc_calcHist_11", "icv_n0_own_ipps_sSqrt_P8HAynn", "icv_p8_ownResize3Lanczos2_16s", "Java_org_opencv_core_Core_convertScaleAbs_11", "Java_org_opencv_features2d_Features2d_drawMatches2_10", "Java_org_opencv_video_KalmanFilter_set_1measurementNoiseCov_10", "icv_p8_owns_rFFTfwd_16_scale_64f", "Java_org_opencv_imgproc_LineSegmentDetector_drawSegments_10", "icv_g9_ippiFilterBilateralBorderInit", "Java_org_opencv_photo_MergeRobertson_process_11", "icv_g9_owniFilterScharrVertMaskBorder2_32f_C1R", "_ZNK2cv4UMat1tEv", "icv_s8_ippiMean_8u_C4R", "ipp_get_cache_line_size", "_ZN2cv6detail18SphericalWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_iiRS3_", "_ZNK2cv3ocl6Device25imageBaseAddressAlignmentEv", "icv_p8_ippiCopy_16s_AC4C3R", "icv_w7_ippiMirror_32s_C4R", "ippicvsSortRadixIndexAscend_16u", "icv_w7_ownpi_Rotate90_B_64_C4R", "_ZNK2cv3dnn19experimental_dnn_v13Net20getMemoryConsumptionERKSt6vectorIS3_IiSaIiEESaIS5_EERS5_RS3_IjSaIjEESD_", "icv_p8_ownippsCnvrt_32f16f_Asm", "icv_h9_ownpi_WarpAffineSimpleNearest_8u_C1R", "icv_p8_ownpi_NormL1_16s_C1R", "ippicviFilterSobelVertBorderGetBufferSize", "icv_p8_ownRow1Lanczos3_32f", "icv_w7_ownLanczos2KernelAA", "icv_p8_ownpi_WarpSimpleLinear_8u_C1R", "icv_g9_ippiCopyMirrorBorder_16u_C1R", "icv_p8_owniConvert_8s32f_W7", "icv_h9_owns_cFFTinv_64_scale_32fc", "icv_s8_ownpi_WarpAffine_C_Const_32f_C3", "icv_w7_ippiFilterSobelNegVertBorder_8u16s_C1R", "Java_org_opencv_dnn_Net_getLayerNames_10", "_ZN2cv10PCAComputeERKNS_11_InputArrayERKNS_17_InputOutputArrayERKNS_12_OutputArrayEi", "icv_s8_owniResizeNearest_32f_C3R", "icv_p8_ownscrDftFwd_Prime3_64f", "icv_h9_owniCopy_16s_AC4C3R", "_ZN2cv3dctERKNS_11_InputArrayERKNS_12_OutputArrayEi", "ippicviSet_16u_C4MR", "icv_g9_ownpi_WarpAffineNearest_8u_C3R", "icv_s8_ownpi_CmpLE_32f_C1R", "icv_h9_ippiSet_32f_C4R", "icv_w7_ownAbsDiffC_16u_C1R_W7_B", "_ZNK2cv9Algorithm4saveERKNS_6StringE", "icv_p8_owniFilterMedianVert1x3_32f_C1R", "icv_s8_ippiCopy_16u_C4P4R", "icv_s8_ippiErodeGetBufferSize_L", "_ZN2cv9videostab20FromFileMotionReaderC2ERKNS_6StringE", "Java_org_opencv_features2d_AKAZE_getThreshold_10", "ippicviMorphClose_32f_C3R_L", "icv_h9_ownpi_WarpAffine_L_Mem_16s_C3", "icv_s8_ownpi_Histogram_8u_C4R", "icv_p8_ownpi_WarpSimpleNearest_8u_C4R", "icv_s8_ownpi_WarpSimpleLinear_8u_C4R", "icv_s8_ippiResizeLanczos_8u_C3R_L", "_ZN2cv4UMat5zerosEiPKii", "icv_h9_ippiSub_32f_C3R", "_ZN2cv3hal11fastAtan32fEPKfS2_Pfib", "icv_g9_ownsrDFTinv_9_64f", "cvUseOptimized", "icv_s8_ownpi_WarpAffine_NN_Repl_32f_C1", "ippicviNormDiff_L1_16u_C1R", "Java_org_opencv_ml_Boost_getWeightTrimRate_10", "icv_s8_piFilterBoxBorder_32f_C1IR_v8u8_NA", "icv_h9_ownsAdd_16s_Bound", "icv_g9_ippiNormRel_L1_16s_C1R", "icv_h9_owniScaleC_64f8s_C1R_acc", "icv_g9_ippiCopyReplicateBorder_32s_C3IR", "_ZNK2cv3ocl6Device18globalMemCacheTypeEv", "icv_p8_ippiMorphBlackhat_8u_C1R_L", "ippicviResizeLinear_8u_C3R_L", "icv_p8_owniCopyMirrorBorder_32s_C1R_L", "icv_w7_ippiCopy_32f_C1R", "icv_s8_ownpi_WarpAffine_NN_Const_16s_C1", "icv_h9_ownsrDFTinv_3_scale_64f", "icv_g9_owns_cFFTfwd_8_32fc", "icv_h9_ownpi_WarpAffine_L_Const_16s_C4", "icv_s8_ippiFilterBorder_16u_C3R", "icv_g9_ownRow1Lanczos3_16s", "icv_s8_ownpi_WarpAffineLinear_16s_C1R", "icv_s8_ownscDftFwd_Fact5_32fc", "icv_w7_ownsrDFTinv_3_scale_64f", "icv_s8_ownCalcBorderR1Cubic16s", "icv_g9_ownWarpSimple3Nearest32f", "icv_s8_ownscDftInv_PrimeFact_32fc", "icv_h9_ownpi_WarpAffine_C_Repl_64f_C3", "icv_p8_ownippiThreshold_32f_C1", "icv_p8_owniConvert_16s32f_AC4_W7", "icv_h9_ownpi_Rotate90_8_C4R", "_ZN2cv3dnn19experimental_dnn_v13Net10getLayerIdERKNS_6StringE", "icv_w7_ippiAddSquare_32f_C1IMR", "icv_w7_ownscrDftFwd_Prime8_64f", "icv_w7_ownpi_NormInf_8u_C1R", "icv_s8_ippiMorphBlackhat_32f_C4R_L", "icv_h9_owniSet_16s_C4MR", "_ZNK2cv11_InputArray7getUMatEi", "Java_org_opencv_imgproc_Imgproc_Laplacian_11", "_ZN2cv9videostab15MotionInpainterC1Ev", "icv_p8_owniTranspose_8u_C1IR_W7", "ippicviDCTInvInit_32f", "_ZN2cv3ogl3ocl23initializeContextFromGLEv", "icv_p8_ownscrDftInv_Fact5_32f", "icv_p8_ownCalcBorderR1Cubic8u", "icv_s8_ownSS4vertical_32f", "icv_h9_ownResize4Nearest8u", "icv_p8_ownippiFilterMedian_16u_C3R_3x3_palign", "iwiImage_Init", "icv_s8_owns_cFFTinv_8_64fc", "_ZN2cv6detail14PlaneWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_S6_RNS_4cuda6GpuMatES9_", "icv_g9_ippiMorphTophat_16s_C1R_L", "icv_g9_owniFilterPrewittHorizBorder2_8u16s_C1R", "icv_g9_ownColLinear32f", "ippicviMorphSetMode_L", "icv_p8_ippiDilate_8u_C3R_L", "_ZN2cv21DetectionBasedTracker10ParametersC2Ev", "icv_w7_ippiScaleC_8s16s_C1R", "cvGetTickFrequency", "icv_s8_ownsPowOne", "_ZN2cv3hal8gemm64fcEPKdjS2_jdS2_jdPdjiiii", "icv_g9_ownpi_Rotate90_16_C1R", "_ZN2cv6detail18GraphCutSeamFinder4Impl10findInPairEjjNS_5Rect_IiEE", "_ZN2cv3ocl12PlatformInfoaSERKS1_", "_ZN2cv16TLSDataContainerD2Ev", "icv_s8_ippiErode_16u_C1R_L", "icv_s8_ownscDFTinv_9_64fc", "icv_w7_ownpi_WarpAffine_NN_Const_8u_C4", "icv_s8_ippiComputeThreshold_Otsu_8u_C1R", "icv_w7_ownsrDFTinv_9_scale_64f", "icv_g9_ippiCopyConstBorder_32s_C1R_L", "Java_org_opencv_core_Core_norm_15", "_ZN2cv3hal14addWeighted64fEPKdjS2_jPdjiiPv", "icv_g9_ippiNorm_L1_16u_C1R", "icv_g9_ownscDFTinv_11_64fc", "icv_s8_ownHipass5x5Col_32f_C3", "Java_org_opencv_core_Core_determinant_10", "Java_org_opencv_photo_TonemapDurand_setSigmaSpace_10", "icv_s8_ownNormDiff_Inf_16u_C3CMR_V8", "icv_w7_ippiMean_16u_C3R", "cvSet1D", "icv_h9_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_s8_ippiDilate_16u_C1R_L", "icv_s8_ownpi_WarpAffine_C_Transp_32f_C4", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_W7", "icv_s8_ownpi_WarpAffine_L_Const_64f_C3", "icv_h9_ownsMul_8u_Bound", "icv_w7_ownAddSquare_16u32f_C1IMR_W7", "Java_org_opencv_core_Core_completeSymm_10", "icv_p8_ownpi_Rotate180_8_C4R", "icv_p8_ippiCopy_32s_C4MR", "cvRQDecomp3x3", "icv_g9_owns_cRadix4Fwd_32fc", "icv_w7_ownsrDFTinv_15_scale_64f", "icv_g9_ownpi_WarpAffine_L_Const_8u_C4", "Java_org_opencv_imgproc_Imgproc_line_11", "icv_h9_ownFilterBoxBorder_16u_C1R", "icv_g9_ownRow3Linear16u", "Java_org_opencv_imgcodecs_Imgcodecs_imreadmulti_10", "_ZN2cv3hal6log32fEPKfPfi", "icv_w7_ownippiFilterMedianHoriz_16s_C3R_5x1", "icv_p8_ownscDftFwd_Prime11_64fc", "icv_h9_ownsMul_8u_PosSfs", "_ZN2cv3ocl12PlatformInfoD1Ev", "icv_s8_ownsrDFTinv_7_64f", "icv_h9_ownpi_WarpSimpleCubic_16u_C4R", "icv_s8_ownRow4Linear16s", "icv_s8_ippiThreshold_GT_32f_C1R", "icv_h9_ownpi_WarpAffine_C_Mem_32f_C3", "icv_p8_ownpi_dInterPoint_CR_PixelB_8u", "Java_org_opencv_features2d_DescriptorExtractor_empty_10", "icv_h9_ippiMirror_32s_C1R", "Java_org_opencv_photo_TonemapReinhard_setIntensity_10", "icv_s8_ippiCopyReplicateBorder_8u_C3R", "icv_p8_ownSq_32f_C3CR_W7", "icv_p8_ippiConvert_8s32s_C1R", "icv_w7_ippiCopyConstBorder_16u_C4R", "icv_p8_ownpi_dInterVectorClip_NN_32_C3", "icv_s8_ownpi_WarpAffine_NN_Mem_16s_C4", "icv_h9_ownFilter32f_8u_C1R_g9e9", "icv_w7_ownscrDftFwd_Prime4_32f", "__divdc3", "ippicviErodeInit_L", "icv_w7_ownNormRel_L1_8u_C1MR_W7", "icv_h9_ownColCubic8u", "icv_g9_ownSS1_72_16u", "icv_s8_ownpi_WarpAffine_NN_8_C1", "icv_s8_ownSS3_52_16u", "icv_p8_ippsDFTFwd_RToPack_64f", "icv_s8_ownHipass5x5Col_32f_C4", "icv_p8_ippiAdd_16s_C1RSfs", "icv_p8_owniConvert_8s32s_AC4_W7", "icv_h9_ippiCopy_16s_C1C3R", "icv_p8_ownSS4_65_8u", "icv_s8_ownpi_WarpAffineSimpleNearest_64f_C3R", "icv_w7_owns_rFFTinv_16_64f", "cvGetErrMode", "icv_g9_ownFilterRowBorderPipeline_32f_C3R_5x5", "icv_p8_ippiDFTFwd_CToC_32fc_C1R", "icv_p8_owniFilterSobelHorizSecondBorder2_8u16s_C1R", "icv_p8_ippsPolarToCart_32f", "icv_p8_ippiCopyReplicateBorder_16s_C3R", "icv_p8_ippiAdd_16u32f_C1IR", "_ZN2cv7fisheye13projectPointsERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_S3_S3_dS6_", "_ZN3tbb8internal13observer_list25do_notify_entry_observersERPNS0_14observer_proxyEb", "icv_p8_ownpi_WarpAffineNearest_8u_C4R", "icv_p8_ownscrDftFwd_Fact3_64f", "Java_org_opencv_videoio_VideoWriter_get_10", "icv_w7_ownpi_Or_16u_AC4R", "icv_g9_ippiSub_16u_C1RSfs", "icv_p8_ownippsSqrt_32s16s", "icv_s8_ownpis_Min_32f_AC4", "icv_h9_owniScaleC_8s16u_C1R_acc", "icv_w7_ippsSortRadixIndexDescend_8u", "icv_h9_ownsrDFTinv_12_scale_32f", "icv_w7_ownsSet_32s", "icv_w7_ippiMorphOpen_32f_C4R_L", "icv_h9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "icv_s8_ownippsCnvrt_32s64f", "icv_h9_ippiResizeAntialiasing_32f_C1R_L", "icv_h9_ownscDFTinv_14_scale_32fc", "icv_p8_ownippiFilterMedianVert_16u", "icv_p8_ownsMinIndx_64f_W7", "icv_h9_ownsrDFTinv_9_32f", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_W7", "icv_g9_ownpi_WarpAffineCubic_32f_C3R", "icv_h9_ippiCopy_8u_C3MR", "icv_s8_owniCopyConstBorder_C1R_W7", "icv_p8_ippiConvert_32f8s_C1R", "icv_h9_owniScaleC_16s32s_C1R_fst", "icv_h9_owniScaleC_16s16u_C1R_acc", "icv_s8_ippsSortRadixAscend_16u_I", "_ZN2cv3LDA4loadERKNS_6StringE", "icv_p8_ippiMorphOpen_32f_C1R_L", "cvAdaptiveThreshold", "icv_h9_ownpi_NormInfRel_8u_C1R", "_ZN2cv17getGaussianKernelEidi", "_ZN2cv3ocl7ContextC2Ei", "icv_h9_ippsGetLibVersion", "icv_h9_ippiMulC_32f_C1R", "icv_w7_Plr2Crt_32f_WMT", "icv_p8_ippiFilterMedianBorder_16u_C4R", "icv_ps_get_ssx", "icv_w7_ownFilterRowBorderPipeline_32f_C3R_5x5_W7cn", "icv_w7_ippiFilterMin_32f_Row_A6", "icv_p8_ownscDFTfwd_6_scale_32fc", "icv_s8_ippsFFTInv_CToC_32fc", "icv_g9_ippsSortRadixIndexDescend_16u", "icv_s8_ownsMaxEvery_32f", "ippicviMirror_8u_C3R", "icv_p8_ownpi_WarpSimpleNearest_8u_C1R", "_ZN2cv17setWindowPropertyERKNS_6StringEid", "icv_w7_ownpi_Rotate90_B_32_C1R", "icv_h9_ownpi_WarpAffine_C_Mem_8u_C4", "icv_p8_ippiSqrIntegral_8u32f64f_C1R", "icv_s8_ippiTranspose_32f_C1IR", "Java_org_opencv_features2d_Params_set_1minThreshold_10", "icv_s8_ownsAdd_16s_1Sfs", "icv_h9_ippiMin_16u_C1R", "ippicviResizeNearest_16u_C3R_L", "Java_org_opencv_ml_EM_setTermCriteria_10", "ippicviErode_16s_C1R_L", "icv_g9_ownRow1Cubic16s", "icv_p8_ownpi_SmoothBorderNew", "_ZN2cv8tempfileEPKc", "_ZN2cv8internal15IntrinsicParamsC1ENS_3VecIdLi2EEES3_NS2_IdLi4EEEd", "icv_h9_ippiConvert_32f16u_C1R", "icv_s8_ownpi_WarpAffineSimpleLinear_64f_C1R", "icv_p8_owniResizeNearest_16u_C4R", "icv_g9_ippiScaleC_8s8u_C1R", "icv_h9_ownResize1Lanczos2_16s", "icv_p8_ownSS4_31_32f", "icv_h9_owniFilter_32f_C3R_g9e9_1", "icv_w7_ippiScaleC_16u8s_C1R", "icv_p8_owniScaleC_64f32f_C1R_fst", "icv_g9_ownCalcBorderR4Lanczos2_16s", "icv_h9_ownscDFTinv_10_scale_32fc", "cvSetCaptureProperty", "_ZN3tbb8internal3rml19make_private_serverERNS1_10tbb_clientE", "icv_s8_ippiMaxIndx_8u_C1R", "icv_w7_ippiCopyReplicateBorder_16s_C3R", "icv_g9_ippiCopyMirrorBorder_8u_C1IR", "icv_s8_ownippiThreshold_V_32f_AC4", "icv_p8_ownscDftFwd_Prime13_32fc", "icv_p8_ippiResizeAntialiasingLinearInit_L", "icv_w7_ownpi_WarpAffine_L_32f_P3", "icv_p8_ippiMean_16u_C3CMR", "icv_g9_owniConvert_32f8s_AVX", "_ZN2cv3Mat13reserveBufferEj", "icv_s8_ownsConj_16sc_I_T7", "icv_p8_owns_initTabTwd_L1_64f", "icv_p8_owniSet_8u_C1_W7", "icv_s8_ippiWarpAffineCubicInit", "icv_s8_ownpi_MaxIndx_32f_C1R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_W7", "_ZN2cv3hal11Cholesky64fEPdjiS1_ji", "icv_p8_ownpi_WarpSimpleCubic_16u_C3R", "icv_s8_ippiTranspose_32s_C1R", "icv_s8_ownippiFilterMax_8u_Col", "_ZN2cv11RNG_MT199377uniformEdd", "icv_w7_ownpi_dInterPoint_CR_Pixel_32f", "icv_p8_owns_rFFTinv_4_scale_64f", "icv_w7_ippsFFTInit_C_64fc", "icv_w7_ippiOr_8u_C1R", "ippicviSet_16u_C1MR", "icv_g9_owniFilter32f_8u_C3R_g9e9_5", "Java_org_opencv_video_DualTVL1OpticalFlow_getOuterIterations_10", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Repl_V8", "icv_p8_ownpi_WarpAffine_L_16u_AC4", "icv_s8_ownNorm_L1_8s_C1MR_V8", "icv_s8_ippiMean_StdDev_8u_C1R", "icv_s8_ippiCopy_8u_C3P3R", "Java_org_opencv_core_Mat_n_1isContinuous", "Java_org_opencv_core_Mat_n_1setTo__JDDDDJ", "_ZNK2cv2ml9TrainData14getTestSamplesEv", "icv_g9_ippsFFTInv_CToC_32fc", "icv_g9_ownippiFilterMedianHoriz_16s_C4R", "icv_p8_ownpi_WarpAffine_L_Repl_32f_C1", "icv_s8_ippiFilterMedianBorder_16s_C3R", "_ZN2cv11MahalanobisERKNS_11_InputArrayES2_S2_", "icv_g9_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "icv_p8_ownscDftFwd_Prime7_64fc", "icv_w7_ownpi_WarpAffine_L_Mem_16u_C4", "icv_p8_ownNormRel_L1_32f_C3CMR_W7", "icv_s8_ippiSqrt_32f_C1R", "icv_h9_ownpi_SimpleRotate_16s_C1R", "icv_s8_ownpi_WarpAffineCubic_16u_C1R", "Java_org_opencv_imgproc_Imgproc_getStructuringElement_11", "icv_p8_ippiCopyReplicateBorder_8u_C1R_L", "icv_w7_owniGetRectBottom_16s", "icv_w7_ownscDFTfwd_14_32fc", "Java_org_opencv_ml_SVM_getC_10", "icv_w7_ownscDFTinv_9_scale_64fc", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_V8", "icv_g9_ownpi_WarpAffine_CR_32f_C4", "Java_org_opencv_imgproc_Imgproc_circle_11", "_ZN2cv6detail19AKAZEFeaturesFinderC1Eiiifiii", "icv_p8_ownpi_AndC_16u_C4R", "icv_p8_owniCopyMirrorBorder_16u_C1IR", "icv_s8_ownscrDftInv_Prime_32f", "_ZN2cv8Subdiv2D6insertERKSt6vectorINS_6Point_IfEESaIS3_EE", "icv_p8_owns_cRadix4Fwd_32fc", "icv_w7_ippiThreshold_LT_32f_C1R", "icv_g9_ownSS1_54_8u", "icv_w7_innerRGBToHLS_8u_C3R", "_ZNK2cv3Mat7reshapeEii", "icv_h9_owniFilter_32f_C3R_g9e9_5", "_ZNK2cv4cuda10DeviceInfo13totalConstMemEv", "icv_s8_ownpi_dInterVector_NN_32_AC4", "Java_org_opencv_imgproc_Imgproc_fillPoly_10", "icv_g9_Angle_16s", "icv_g9_ippsSortRadixAscend_32f_I", "icv_h9_ippiResizeSuperInit_L", "icv_n0_own_ipps_dSin_S9LAynn", "icv_s8_ownAddProduct_16u32f_C1IMR_W7", "icv_g9_owns_cFFTfwd_64_scale_32fc", "icv_w7_ownippsCnvrtFin_32f32s_Sfs", "icv_w7_ownippiFilterMedianHoriz_16s_C3R", "Java_org_opencv_imgproc_Imgproc_createCLAHE_11", "_ZN2cv17CommandLineParser4Impl11sort_paramsEv", "_ZN2cvmiERKNS_7MatExprES2_", "icv_p8_ippiFilterScharrHorizMaskBorder_16s_C1R", "icv_s8_ippiFilterSobelVertSecondBorderGetBufferSize", "_ZNK2cv13HOGDescriptor16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EERS4_IdSaIdEEdNS_5Size_IiEESE_ddb", "icv_g9_ippiWarpAffineCubic_8u_C4R", "ippicviFilterBilateralBorderGetBufferSize_L", "icv_g9_ownCalcBorderR1Lanczos2_8u", "icv_g9_ownsrDFTinv_9_scale_32f", "icv_h9_ownCalcBorderR4Linear16u", "icv_p8_ippiNorm_L2_8u_C3CMR", "ippicviTranspose_32s_C3R", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKSt6vectorINS_6DMatchESaIS6_EE", "icv_h9_ippiCopy_32s_C1R", "icv_h9_owniScaleC_32f16s_C1R_fst", "icv_h9_owniScaleC_8u32f_C1R_acc", "icv_p8_ownpi_Rotate90_32_C1R", "_ZN3tbb8internal6market14create_one_jobEv", "icv_h9_ownippsCnvrt_32f32s_Sfs", "_ZN2cv3dnn19experimental_dnn_v112LayerFactory13registerLayerERKNS_6StringEPFNS_3PtrINS1_5LayerEEERNS1_11LayerParamsEE", "icv_p8_ownpi_WarpAffineLinear_8u_C4R", "icv_h9_ownSS4_43_16u", "icv_p8_ownFilterRowBorderPipeline_32f_C3R_5x5", "Java_org_opencv_imgproc_Subdiv2D_locate_10", "_ZN2cv5flann5Index9knnSearchERKNS_11_InputArrayERKNS_12_OutputArrayES7_iRKNS0_12SearchParamsE", "icv_w7_owniFilterBilateralR2_InMem_8u_C3R_px", "icv_p8_gres_NormL2Rel_16u_C1R", "icv_h9_ippiNormRel_L2_32f_C1R", "icv_p8_ownsInitDftConv_64f", "icv_h9_ownpi_MinMax_32f_C1R", "icv_w7_ownNormDiff_L2_8s_C1MR_W7", "icv_g9_ownResize4Cubic32f", "icv_h9_ownpi_WarpSimpleLinear_16s_C4R", "icv_g9_ippiMin_8u_C1R", "cvExp", "icv_w7_ippiResizeCubicInit_L", "_ZN2cv9softfloatC2Ej", "icv_s8_ownpi_XorC_32s_AC4R", "icv_g9_owniCopyMirrorBorder_8u_C3R_L", "icv_p8_ownscDFTfwd_13_scale_64fc", "icv_h9_ownSS1_41_8u", "icv_p8_owniFilterBilateralR1_InMem_32f_C3R", "icv_w7_ownippsCnvrt_32s64f", "icv_g9_ippiDFTInv_CToC_32fc_C1R", "icv_w7_ippiFilterMedianVert_8u_1x5_A6", "icv_h9_ippiDCTFwdInit_32f", "icv_g9_owns_cFFTinv_32_32fc", "icv_h9_ownRow4Filter2_8u", "icv_g9_ippiScaleC_8u16s_C1R", "Java_org_opencv_calib3d_Calib3d_decomposeProjectionMatrix_11", "icv_h9_ippiNorm_L1_32f_C1R", "_ZNK2cv12VideoCapture8isOpenedEv", "ippicviAddSquare_32f_C1IR", "Java_org_opencv_ml_LogisticRegression_predict_11", "icv_h9_ownpi_WarpAffineSimpleCubic_16s_C3R", "icv_h9_ippsConvert_8s16s", "icv_h9_ippiNorm_L1_16u_C3CMR", "icv_w7_ippiSet_8u_C3R", "icv_s8_owns_cFFT_1_32fc", "icv_p8_ippsFabsOne", "icv_w7_ownsConvert_64s32s_SfPosFin_W7", "icv_h9_ippsDCTFwd_32f", "icv_h9_ownpi_WarpAffineSimpleCubic_8u_C1R", "Java_org_opencv_video_FarnebackOpticalFlow_setPyrScale_10", "icv_g9_ownscDftInv_Prime16_64fc", "iwiImage_Release", "icv_s8_ippiConvert_8s32s_C1R", "Java_org_opencv_imgproc_Imgproc_distanceTransformWithLabels_10", "ippicviFilterBilateralBorder_32f_C1R", "icv_h9_owns_initDctInv_Conv_32f", "icv_s8_ownpi_dInterVector_L_8u_C4", "icv_h9_ownsrDftInv_Conv_32f", "cvSeqInsert", "_ZNK2cv4cuda5Event15queryIfCompleteEv", "icv_w7_ippiCopy_32f_AC4C3R", "icv_w7_ippiWarpAffineNearest_32f_C3R", "icv_w7_owniResizeCubic_8u_C1R", "icv_p8_ippiNormRel_L2_16u_C1MR", "icv_s8_owniTranspose_8u_C1IR_W7", "icv_h9_ownpi_WarpAffine_L_Const_64f_C1", "icv_s8_owniFlip_8u_C3", "icv_h9_ownpi_Sum_32f_C1R_gs", "icv_p8_ippiCopyReplicateBorder_8u_C1IR", "cvNextGraphItem", "icv_s8_ownpi_WarpAffineSimpleCubic_8u_C4R", "_ZN2cv3minERKNS_3MatES2_", "icv_g9_ownsMinIndx_32f_AVX", "icv_n0_own_ipps_sLn_G9HAynn", "ippicviSqrDistanceNorm_8u32f_C1R", "icv_w7_ippiNormDiff_L2_16u_C1R", "_ZN2cv12VideoCapturersERNS_4UMatE", "icv_w7_ownCalcBorderR3Antialiasing_32f", "icv_g9_owniScaleC_16u32f_C1R_acc", "icv_s8_ownCalcBorderR1Lanczos3_16s", "icv_g9_piFilterRow_32f_C3R_g9e9", "_ZN2cv9Formatter3getEi", "icv_p8_owniCopyMirrorBorder_8u_C1R", "Java_org_opencv_core_Mat_n_1push_1back", "icv_w7_ownpi_dInterVector_L_32f_C4", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_W7", "icv_w7_owniResizeCubic_16s_C4R", "icv_p8_ippiMirror_8u_C3R", "icv_p8_owniResizeLanczos_16u_C4R", "icv_h9_owniConvert_8u32s_C1R", "icv_p8_ippiMorphGradient_32f_C1R_L", "icv_g9_ippiWarpAffineCubic_64f_C1R", "icv_w7_owniConvert_16s8s_ccode", "icv_p8_ownpi_NormInfDiff_16s_C1R", "icv_g9_ownpi_WarpAffineLinear_16u_C4R", "icv_g9_owniFilterBilateralCom_InMem_32f_C1R_px", "icv_h9_ippsRound_64f", "icv_g9_ippsConvert_32f16u_Sfs", "_ZN2cv3ocl7Context10getDefaultEb", "icv_g9_owniFilter32f_16u_C1R_g9e9_8", "Java_org_opencv_features2d_Feature2D_descriptorType_10", "icv_h9_innerCommonLoopW3_8u32f_C3R", "icv_s8_ippiTranspose_8u_C3R", "icv_s8_ownpi_WarpSimpleCubic_32f_C1R", "icv_g9_ownscDftInv_Prime11_64fc", "icv_p8_owniResizeAntialiasing_16s_C1R_L", "icv_w7_owniGetRectComBF_32f_C3R", "icv_s8_ownRow1Filter12_8u", "icv_g9_ippiSwapChannels_8u_C4C3R", "icv_h9_ippsFFTFwd_RToPerm_32f", "icv_s8_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_w7_ippiNormRel_L2_16s_C1R", "ippicviCopy_16u_C1C4R", "_ZN2cv15NAryMatIteratorC2Ev", "icv_p8_ownpi_WarpAffine_L_Const_64f_C1", "icv_g9_ippiCopyReplicateBorder_8u_C1R", "icv_g9_owniConvert_32f8s_ccode", "ippicviMorphClose_8u_C1R_L", "_ZN3tbb8internal13observer_list6removeEPNS0_14observer_proxyE", "icv_h9_owniResizeGetSize", "icv_p8_ownpi_WarpAffineLinear_16u_C3R", "icv_p8_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss", "icv_h9_ownsrDFTinv_7_32f", "icv_h9_ippsSortRadixAscend_32f_I", "icv_p8_ownpi_WarpAffine_NN_Repl_16u_C3", "icv_p8_ownpis_Indx_8u_C4", "icv_p8_ippiNormDiff_L2_16u_C3CMR", "icv_s8_ownRow3Cubic32f", "icv_h9_ownpi_Rotate180_64_C3R", "icv_h9_ownNormRel_L2_32f_C1MR_HSW", "icv_g9_owns_cFFTinv_32_scale_64fc", "icv_s8_ownSS4_43_32f", "icv_g9_ownFilterBoxBorderInMem3x3_16u_C1R", "own_ipps_dCos_SC", "icv_w7_owniCopy8u_P3C3_W7", "icv_g9_ownSS1_32_16s", "_ZN2cvorERKNS_3MatERKNS_7Scalar_IdEE", "cvCreateGraphScanner", "Java_org_opencv_photo_MergeExposures_process_10", "icv_s8_owniCrossCorrValid_NormLevel_8u32f_C1R", "icv_s8_ippiResizeAntialiasing_16s_C4R_L", "icv_p8_ownpi_WarpSimpleCubic_16u_C1R", "icv_s8_ownColCubic8u", "_ZN2cv6detail16createLaplacePyrERKNS_11_InputArrayEiRSt6vectorINS_4UMatESaIS5_EE", "icv_p8_ownRow1Linear16u", "icv_s8_ippiFilterBoxBorder_8u_C4R", "icv_h9_owniFilter32f_16s_C4R_g9e9_5", "icv_p8_ownpi_WarpAffineNearest_32f_C3R", "icv_g9_ownSS4_21_16s", "icv_h9_ippiErode_8u_C1R_L", "ippicviErodeGetBufferSize_L", "icv_p8_owniResizeAntialiasing_32f_C4R_L", "icv_p8_owniSet_32s_C4MR", "icv_p8_ownpi_NormL2_8u_C1R", "icv_w7_ownpi_WarpAffineCubic_16u_C4R", "icv_p8_owns_rFFTinv_32_32f", "icv_h9_ownNorm_L2_8u_C1MR_HSW", "_ZN2cv12KalmanFilterC1Ev", "icv_p8_owniScaleC_32f8s_C1R_acc", "icv_w7_ownscDftFwd_Fact_32fc", "icv_p8_owns_cFFTinv_4_scale_64fc", "cvComputeCorrespondEpilines", "Java_org_opencv_dnn_Net_getUnconnectedOutLayers_10", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_V8", "icv_p8_ownippiFilterMedianCross_8u_C4R_5x5", "_Unwind_DeleteException", "icv_h9_owns_sDctFwd_PostMul_32f", "icv_g9_ippiFilterLaplacianBorder_32f_C1R", "icv_s8_owniFilter_32f_C3R_v8u8_5NA", "icv_p8_ippiSum_16u_C4R", "Java_org_opencv_calib3d_Calib3d_calibrate_10", "icv_w7_ownRow3Linear64f", "icv_p8_ippiTranspose_16s_C1IR", "_ZN3tbb8internal3rml14private_worker14thread_routineEPv", "ippicviResizeLinear_32f_C1R_L", "Java_org_opencv_ml_ParamGrid_delete", "icv_g9_ownpi_WarpAffine_C_Transp_8u_C3", "icv_g9_ownSS3_73_8u", "icv_w7_ownpi_dInterVectorClip_NN_8_C4", "icv_g9_owniScaleC_32f8s_C1R_acc", "icv_h9_ownpi_Rotate90_64_C4R", "icv_g9_ownpi_WarpAffine_C_Repl_8u_C4", "icv_p8_ownsSinOne_w7p8", "icv_s8_ownscDFTfwd_15_64fc", "icv_p8_owniCopy8u_C1C4_W7", "_ZNK2cv9Feature2D5writeERKNS_6StringE", "icv_h9_ownFilterBoxBorderGetBufferSize", "icv_w7_ippiNormRel_L1_16u_C1R", "icv_w7_ownscDFTfwd_5_32fc", "icv_s8_ownHipass5x5Row_8u", "_ZN2cv5MutexD1Ev", "icv_p8_ownCanny_16s8u_C1R_2_32s_W7", "icv_p8_ownsrDftFwd_Conv_64f", "icv_w7_ippiFilterBorder_32f_C1R", "icv_g9_ownCommonLoop_8u_AC4R", "icv_h9_ownFilterBoxBorderInMem_8u32f_C3R", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_W7_sym", "icv_p8_ownHipass5x5Row_16s", "cvOrS", "icv_w7_ownColCubic16s", "icv_s8_ownpi_dInterVectorClip_C_32f_P", "Java_org_opencv_imgproc_Imgproc_drawContours_11", "_ZNK2cv3Mat7reshapeEiiPKi", "icv_p8_owniFilterScharrHorizMaskBorder2_32f_C1R", "icv_g9_ownsInitTabDftBase_32f", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "icv_s8_ippsMaxEvery_8u", "icv_p8_ownpi_WarpAffine_L_Repl_16s_C3", "icv_h9_owniConvert_32f16s_AVX", "icv_h9_ippiHistogramGetBufferSize", "Java_org_opencv_calib3d_Calib3d_recoverPose_13", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_W7", "_ZNK2cv3ocl12PlatformInfo4nameEv", "icv_h9_ippsDFTGetSize_C_32fc", "icv_s8_ippiNormRel_L2_16u_C1R", "cvMoveWindow", "_ZNK2cv3ocl8Platform3ptrEv", "icv_w7_ownippiFilterMedian_16u_BC4R_5x5", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setMinEigThreshold_10", "icv_w7_ownippiFilterMin_32f_Col", "icv_h9_ippiCopy_8u_C3AC4R", "icv_w7_ownpi_Rotate90_B_32_C3R", "icv_s8_owns_cFFTfwd_4_32fc", "ippicviCopy_32f_C1C3R", "icv_s8_ippiThreshold_GT_8u_C1IR", "_ZNK2cv25BOWImgDescriptorExtractor13getVocabularyEv", "cvDCT", "icv_w7_ownsGetSizeTabDftDir_32f", "icv_h9_ippiMorphTophat_8u_C1R_L", "icv_s8_ippiCopyMirrorBorder_8u_C3IR_L", "icv_g9_ownscDftFwd_Prime4_32fc", "icv_p8_ownippiFilterMedianHoriz_16u_C3R", "Java_org_opencv_core_Mat_n_1diag__J", "icv_g9_ippiResizeAntialiasing_8u_C1R_L", "icv_w7_ownippiThreshold_GV_32f_C4", "icv_h9_ownpi_WarpSimpleCubic_16u_C3R", "icv_s8_owns_cCcsRecombine_32f", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarMax_10", "icv_g9_ownpi_Rotate90_64_C4R", "Java_org_opencv_core_Core_add_15", "own_ipps_zCIS_SC_A11", "icv_g9_owniFilter32f_8u_C3R_g9e9_1", "ippicviMean_8u_C1R", "icv_s8_ownscrDftFwd_Prime4_32f", "icv_w7_ownpi_Xor_8u_C1R", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_p8_ippiFilterBoxBorder_16s_C4R", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_W7", "icv_w7_ownpi_WarpAffineSimpleCubic_32f_C4R", "icv_s8_ippsSet_32f", "icv_p8_ippiSwapChannels_32f_C3R", "icv_h9_ippiWarpAffineLinear_16u_C3R", "icv_h9_ippiMinMax_32f_C1R", "icv_h9_owniScaleC_64f16u_C1R_fst", "icv_s8_ownpi_WarpSimpleNearestInit", "icv_h9_ownippiFilterMax_8u_Col_h9l9", "icv_p8_ippiMorphBlackhat_32f_C1R_L", "icv_g9_ownpi_Rotate180_8_C1R", "icv_s8_ownColLinear8u", "icv_w7_ownpi_WarpAffine_L_Mem_64f_C4", "icv_s8_ippiMirror_8u_C4R", "icv_p8_ippiSum_8u_C4R", "icv_h9_ownSS1_83_16s", "Java_org_opencv_ml_TrainData_setTrainTestSplitRatio_10", "icv_s8_ownpi_WarpSimpleCubic_8u_C1R", "icv_s8_owns_cRadix4InvNorm_32fc", "icv_w7_ownpi_Min_32f_C3R", "icv_h9_ownpi_WarpAffineRectFP", "icv_g9_owns_rFFTfwd_8_scale_64f", "icv_s8_ownpi_WarpAffineSimpleCubic_16u_C4R", "icv_w7_ownResize4Nearest16s", "icv_p8_ippiSet_32f_C4R", "_ZN2cv11randShuffleERKNS_17_InputOutputArrayEdPNS_3RNGE", "Java_org_opencv_imgproc_Imgproc_blur_10", "icv_p8_ippsDFTGetSize_R_64f", "icv_g9_ippiSqrDistanceNormGetBufferSize", "Java_org_opencv_dnn_Net_forward_13", "icv_h9_ippiTranspose_32s_C4R", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_V8", "icv_s8_ippiSwapChannels_32s_C4R", "icv_p8_cv_ownippiFilterMax_16u_Row", "icv_g9_ownpi_WarpAffine_C_Const_32f_C3", "own_ipps_sSin_SC_A11", "icv_h9_ownSS4_83_32f", "icv_g9_ownscDFTinv_12_scale_32fc", "icv_s8_ownFilterRowBorderPipeline_Low_16s_C3R_X_V8", "icv_p8_ownpi_dInterVector_NN_16_P4", "icv_g9_ippiCopyConstBorder_16s_C3R", "icv_s8_ownHipass5x5Row_16s", "icv_h9_ownSS4_52_8u", "icv_p8_ownpi_WarpAffine_NN_32_P3", "icv_s8_ownpi_NormInfDiff_16u_C1R", "icv_s8_ownResize4Lanczos3_16s", "_ZNK2cv21DetectionBasedTracker10getObjectsERSt6vectorINS0_9ExtObjectESaIS2_EE", "icv_s8_owniConvert_32f8u_W7", "Java_org_opencv_dnn_Dnn_blobFromImages_10", "icv_g9_owns_cFFTfwd_16_32fc", "icv_s8_ownpi_dInterVector_NN_8_C4", "icv_w7_ownippiFilterMax_8u_Col_AC4", "icv_g9_ownpi_WarpAffine_C_Const_16u_C1", "icv_g9_ippiFilterScharrHorizMaskBorder_16s_C1R", "_ZNK2cv4cuda10DeviceInfo13maxThreadsDimEv", "icv_w7_ownpis_Indx_8u_C3", "icv_h9_ownFilterBoxBorderInMem3x3_16u_C1R", "icv_p8_ippiNorm_Inf_8u_C1MR", "icv_g9_ownscDftInv_Prime8_32fc", "Java_org_opencv_videoio_VideoCapture_VideoCapture_13", "Java_org_opencv_objdetect_HOGDescriptor_load_10", "icv_g9_ippsZero_32s", "icv_h9_ownscDFTfwd_6_scale_32fc", "icv_h9_ownSS3_65_16s", "icv_p8_ownSS1_53_8u", "icv_w7_ownCalcBorderR3Lanczos3_16s", "icv_p8_owniConvert_32f16u_AC4_W7", "Java_org_opencv_calib3d_Calib3d_RQDecomp3x3_10", "icv_h9_ownFilter_32f_C1R_g9e9", "_ZN2cv16BOWKMeansTrainerC1EiRKNS_12TermCriteriaEii", "ippicviScaleC_32s16s_C1R", "icv_s8_ippiSet_16s_C3MR", "icv_g9_ownMinMaxIndx_32f_C1R_2", "_ZN2cv6detail20BundleAdjusterAffine24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_g9_ippiCopy_16s_C3MR", "icv_h9_ownpi_WarpAffine_NN_Repl_8u_C4", "icv_h9_ownpi_ClipLeft", "Java_org_opencv_features2d_GFTTDetector_getMinDistance_10", "icv_g9_cv_ownippiFilterMxMnBorder_L", "icv_w7_ippiNorm_Inf_16s_C1R", "icv_h9_ippiMarkSpeckles_8u_C1IR", "icv_p8_ownCopySubpixIntersect_16u_C1R_W7", "icv_h9_ippiAddSquare_32f_C1IMR", "_ZNK2cv3ocl6Device21maxConstantBufferSizeEv", "Java_org_opencv_features2d_MSER_setMaxArea_10", "icv_h9_ownsGetSizeTabDftDir_64f", "icv_s8_owniFlip_16u_C4I_W7", "icv_w7_ippiAbsDiff_8u_C1R", "icv_p8_owns_cFFTfwd_4_32fc", "icv_p8_ownCalcBorderR1Lanczos2_16s", "icv_g9_ippiCopy_8u_C1C4R", "icv_p8_owniConvert_16s32f_W7", "icv_h9_ippiScaleC_8s_C1IR", "Java_org_opencv_core_Core_multiply_12", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_V8", "Java_org_opencv_video_BackgroundSubtractorKNN_getShadowThreshold_10", "icv_w7_ownscrDftFwd_Prime_64f", "icv_s8_ippiResizeCubic_32f_C3R_L", "icv_s8_ownpi_MaxIndx_8u_C1R", "icv_g9_ippiNormDiff_L2_32f_C3CMR", "icv_p8_ownsrDFTfwd_10_64f", "icv_p8_ownCalcBorderR3Lanczos2_16s", "_ZN2cv14filterSpecklesERKNS_17_InputOutputArrayEdidS2_", "icv_h9_ippiSet_16s_C1R", "icv_s8_ownHipass5x5Frs_32f", "icv_s8_ownAConvert_Round32f_16u_AC4R", "icv_w7_ownpi_WarpAffineRect", "icv_h9_ippiScaleC_16u8u_C1R", "icv_s8_ownpi_WarpAffineSimpleCubic_32f_C3R", "icv_w7_owns_rFFTinv_32_scale_32f", "icv_s8_owniAutoNormMean_32f_C1R", "icv_w7_ippiSet_32s_C4R", "icv_p8_ownpi_dInterVectorClip_L_8u_P3", "_ZN2cv9videostab14StabilizerBase14doOneIterationEv", "icv_p8_ownpi_WarpSimpleLinear_32f_C4R", "Java_org_opencv_video_Video_createBackgroundSubtractorKNN_11", "ippicviScaleC_8s16u_C1R", "icv_w7_ownpi_WarpAffineLinear_16s_C4R", "_ZN2cv19FastFeatureDetector6createEibi", "ippicviFilterBilateralBorder_8u_C1R_L", "icv_p8_owniScaleC_64f64f_C1R", "icv_s8_ownpi_WarpAffineSimpleNearest_8u_C4R", "icv_g9_ownpi_WarpAffine_NN_Const_64f_C1", "icv_g9_ippiThreshold_GT_32f_C1R", "icv_g9_ownsSub_16s_NegSfs", "icv_p8_ownscDftFwd_Prime11_32fc", "icv_p8_ownpi_Xor_16u_AC4R", "_ZN2cv3hal12cvtGraytoBGREPKhjPhjiiii", "icv_p8_ownscDftFwd_Prime7_32fc", "icv_p8_ippiMomentInit_64f", "ippicviConvert_8s16s_C1R", "icv_s8_ippiResizeCubic_16u_C4R_L", "icv_g9_ownpi_WarpAffine_L_Mem_16u_C1", "cvBoundingRect", "ippicviNormRel_L2_16u_C1MR", "icv_w7_ownpi_Sum_32f_AC4R", "ippicviCopy_32s_C4MR", "icv_s8_ownNormRel_Inf_8u_C3CMR_V8", "icv_s8_ownpi_dInterVector_L_8u_P4", "_ZN2cv3hal11cvtBGRtoHSVEPKhjPhjiiiibbb", "_ZN2cv32createFaceDetectionMaskGeneratorEv", "cvRemap", "icv_h9_ippiResizeLanczos_8u_C4R_L", "icv_s8_ownpi_dInterVector_L_16u_P3", "icv_h9_ownRow4Antialiasing_16u", "icv_s8_ownNormDiff_Inf_32f_C1MR_W7", "icv_p8_ownscDFTinv_5_scale_64fc", "icv_g9_ippiMax_8u_C1R", "cvFindGraphEdgeByPtr", "icv_g9_ownSS4_32_16u", "_ZN2cv3minERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_s8_ownAdd_8u32f_C1IMR_W7", "icv_s8_ownpi_dInterVectorClip_C_8u_C4", "icv_p8_owniScaleC_64f32s_C1R_fst", "icv_h9_owns_cFFTinv_64_32fc", "icv_p8_ownpi_WarpAffineLinear_16s_C1R", "icv_h9_ownSS3_53_32f", "icv_s8_owniCopy8u_C3P3_84_A6", "_ZN2cv3hal10absdiff16uEPKtjS2_jPtjiiPv", "icv_h9_ownsGetSizeTabDftDir_32f", "icv_p8_ownpi_WarpSimpleCubic_32f_C1R", "icv_h9_ippiSet_8u_C3R", "icv_s8_ippsMaxEvery_16u", "_ZN2cv23buildOpticalFlowPyramidERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEibiib", "_ZN2cv8fillPolyERKNS_17_InputOutputArrayERKNS_11_InputArrayERKNS_7Scalar_IdEEiiNS_6Point_IiEE", "icv_g9_ippiCopyConstBorder_16u_C1R", "icv_g9_ownippiFilterMedianHoriz_16u_C4R", "icv_h9_ippiAddProduct_8u32f_C1IR", "icv_s8_ownpi_ClipLeft", "icv_w7_ownpi_WarpPC", "icv_w7_ippiFilterBorderGetSize", "icv_w7_owniConvert_32s8u_W7", "icv_s8_ownpi_HistogramEven_16u_C1R", "icv_p8_ownCalcBorderR1Linear8u", "icv_w7_ownFilterBorderConvert32s_8u", "icv_g9_ippiScaleC_16s_C1R", "Java_org_opencv_photo_CalibrateDebevec_getLambda_10", "_ZN2cv5instr21setUseInstrumentationEb", "icv_w7_ippiNormDiff_L1_8u_C3CMR", "ippicviScaleC_32s8s_C1R", "icv_h9_owniScaleC_32f32s_C1R_acc", "icv_s8_ippiCopyReplicateBorder_16u_C4R", "icv_s8_owns_getSizeDct_Fft_32f", "icv_s8_ownpi_Histogram_16s_C4R", "_ZN2cv15findCirclesGridERKNS_11_InputArrayENS_5Size_IiEERKNS_12_OutputArrayEiRKNS_3PtrINS_9Feature2DEEE", "Java_org_opencv_photo_TonemapMantiuk_getScale_10", "icv_h9_ownWarpSimple4Nearest8u", "icv_p8_ownscDFTfwd_3_scale_64fc", "icv_w7_ownippsCnvrt_8u32f", "icv_w7_ippiFilterBorder_16u_C4R", "ippicviNormDiff_Inf_32f_C1MR", "icv_p8_ownscDftFwd_Prime5_64fc", "icv_w7_owns_cFFT_1_scale_64fc", "icv_h9_ippiResizeAntialiasing_16u_C1R_L", "icv_g9_owns_cFFTfwd_32_scale_32fc", "icv_p8_ippiCopyReplicateBorder_8u_C1IR_L", "icv_h9_ownpi_WarpSimpleCubic_8u_C3R", "icv_p8_ippiNormDiff_L1_32f_C3CMR", "icv_s8_ownRow1Antialiasing_32f", "_ZN3tbb8internal18concurrent_monitor17abort_all_relaxedEv", "__gxx_personality_v0", "icv_w7_ownippiThreshold_GLV_32f_C1", "_ZN2cv4cuda11getInputMatERKNS_11_InputArrayERNS0_6StreamE", "icv_g9_ownscDftFwd_Fact11_64fc", "icv_h9_owniSet_16s_C3MR", "icv_g9_ownscDftFwd_Fact11_32fc", "icv_p8_ownpi_WarpAffineCubic_16s_C4R", "_ZN2cv3ocl9typeToStrEi", "_ZN2cv21setOpenGlDrawCallbackERKNS_6StringEPFvPvES3_", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_W7", "icv_g9_ownMinMaxIndx_8u_C1MR_1", "cvReleaseImageHeader", "icv_p8_ownpi_WarpAffine_NN_16_P4", "WebPConfigLosslessPreset", "icv_w7_ippiCopyMirrorBorder_16s_C4R", "icv_w7_owns_BitRev2_4", "icv_s8_ownpi_Max_8u_C4R", "icv_w7_ippiMorphClose_16s_C1R_L", "icv_n0_own_ipps_dCos_G9LAynn", "icv_g9_ippiMean_32f_C4R", "icv_h9_owns_rFFTinv_4_scale_64f", "ippicviSet_32s_C3R", "icv_h9_owniConvert_8s16s_ccode", "icv_p8_owns_initTabTwdRealRec_32f", "icv_p8_ippiFilterBoxBorder_32f_C4R", "icv_h9_ownpi_WarpAffine_NN_Mem_64f_C4", "_ZN2cv14PCABackProjectERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayE", "icv_w7_ippiDCTFwdInit_32f", "icv_s8_owniResizeAntialiasing_32f_C3R_L", "cvSetSeqReaderPos", "icv_s8_owniCopy8u_C3P3_88_A6", "_ZN2cv4sqrtERKNS_11_InputArrayERKNS_12_OutputArrayE", "Java_org_opencv_imgproc_Imgproc_Laplacian_10", "icv_s8_owniSDDiv_32f_C1IR", "icv_p8_ownWarpSimple4Nearest16s", "icv_w7_owns_cFFTfwd_32_32fc", "icv_h9_ippiNormRel_L2_16s_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_V8", "icv_w7_ippiAddSquare_32f_C1IR", "icv_s8_ownSS1_32_16u", "icv_w7_ippiCopyReplicateBorder_16s_C4IR", "icv_s8_ownSS3_52_32f", "icv_p8_ownRow3Linear16u", "icv_s8_ownColCubic16s", "_ZN2cv3MatC2ERKS0_RKNS_5Rect_IiEE", "_ZN2cv9minMaxIdxERKNS_11_InputArrayEPdS3_PiS4_S2_", "_ZN2cv9videostab17OnePassStabilizer5setUpERKNS_3MatE", "icv_w7_ownpi_WarpAffine_NN_Mem_64f_C3", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "icv_h9_ippiCopyReplicateBorder_32s_C1IR", "icv_p8_ownscDFTinv_10_scale_32fc", "_ZNK2cv10softdoublemlERKS0_", "_ZN3tbb8internal6market21update_arena_priorityERNS0_5arenaEi", "icv_h9_ippsZero_16s", "icv_w7_ownsrDFTinv_14_scale_64f", "icv_w7_owns_initDctInv_Conv_32f", "icv_h9_ownpi_WarpAffine_L_Const_64f_C3", "_ZN3tbb8internal14__TBB_InitOnce7add_refEv", "icv_h9_ownColLinear16u", "Java_org_opencv_video_DualTVL1OpticalFlow_setWarpingsNumber_10", "iwiImage_BorderSet", "icv_h9_ippiDCTFwdGetSize_32f", "icv_p8_ownpi_Rotate90_B_8_C3R", "icv_h9_ownResize1Lanczos3_32f", "icv_s8_owns_cFftInv_Large_64fc", "icv_s8_ownsSet_64s", "Java_org_opencv_ml_ANN_1MLP_getBackpropWeightScale_10", "icv_p8_ippiCopy_16u_C1C4R", "icv_p8_piFilterBoxBorder_32f_C1IR_v8u8_A", "icv_g9_ippiFilterScharrHorizMaskBorder_32f_C1R", "icv_w7_ownippsSqrt_32fc", "_ZNKSt8bad_cast4whatEv", "icv_p8_ownscDftFwd_Fact13_64fc", "icv_s8_ownscDFTfwd_10_64fc", "icv_s8_ippiCopy_32f_C3R", "icv_p8_owns_initTabDct_Dir_32f", "Java_org_opencv_calib3d_StereoMatcher_setNumDisparities_10", "icv_w7_ownpi_dInterVectorClip_L_8u_C1", "icv_p8_ippiAdd_8u_C1RSfs", "icv_p8_ownpi_WarpAffine_L_16u_P3", "icv_n0_own_ipps_sInvSqrt_G9EPnnn", "icv_h9_ippiResizeCubic_32f_C1R_L", "icv_s8_ownSS1_21_32f", "cvRegisterType", "icv_p8_ownSS4vertical_8u", "icv_g9_ownSS1_53_16u", "_ZN2cv14insertImageCOIERKNS_11_InputArrayEPvi", "icv_s8_ippsCos_64f_A53", "Java_org_opencv_calib3d_StereoMatcher_getSpeckleWindowSize_10", "icv_h9_owniFilter32f_16u_C1R_g9e9_8", "icv_g9_owns_rFFTfwd_32_32f", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_W7", "icv_h9_ownpi_NormL2_32f_C1R", "_ZN2cv20saveWindowParametersERKNS_6StringE", "icv_s8_ownApplyHaarClassifierAllImg4Pix_W7", "icv_h9_ownCalcBorderR4Lanczos2_16u", "Java_org_opencv_ml_RTrees_setTermCriteria_10", "icv_w7_ownDistanceTransform_3x3_8u_C1R_F_ND", "icv_g9_owniGetRectLeft_32f", "icv_h9_ippiResizeCubic_8u_C1R_L", "icv_g9_owniResizeLinear_16u_C4R", "icv_w7_ownippiFilterMin_16u_Row", "icv_s8_ownApplyHaarClassifierAllImg8PixSparceMask_dw_W7", "icv_g9_ownpi_Sum_32f_C4R_vlang", "Java_org_opencv_objdetect_HOGDescriptor_get_1histogramNormType_10", "ippicviTranspose_8u_C4R", "icv_s8_ownippiFilterMedianSqr_8u_C4R", "icv_p8_ippiMean_32f_C3CMR", "icv_g9_ownSSvsum_8u", "icv_p8_owniSwapChannels_8u_C4C3R", "icv_s8_ownpi_WarpAffineLinear_64f_C3R", "icv_w7_ownscDftInv_Fact4_64fc", "_Z20Mat_to_vector_doubleRN2cv3MatERSt6vectorIdSaIdEE", "icv_h9_ownsrDFTfwd_11_scale_64f", "icv_p8_ownNormDiff_Inf_8u_C1MR_W7", "icv_s8_owniCopy_8u_AC4_A6", "icv_s8_ownResize4Linear32f", "icv_p8_ippsSortRadixDescend_8u_I", "ippicviCannyGetSize", "icv_w7_ownpi_WarpAffine_L_16u_C1", "icv_g9_ippiNormDiff_L2_16s_C1R", "icv_p8_owniFilter_32f_C4R_v8u8_7", "icv_g9_piFilterBoxBorder_32f_C1IR_v8u8_NA", "icv_g9_ownsIppsConvert_16s8s_Sfs", "_ZN2cv9normalizeERKNS_11_InputArrayERKNS_17_InputOutputArrayEddiiS2_", "_ZN2cv8Subdiv2D6VertexC2ENS_6Point_IfEEbi", "icv_s8_ippiNorm_L2_32f_C1MR", "_ZN2cv16TLSDataContainerC1Ev", "icv_w7_owniCopy16s_AC4_W7", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_W7", "icv_p8_owniFilterRobertsDownBorder2_32f_C1R", "icv_w7_ownpi_WarpAffine_NN_Const_8u_C1", "icv_h9_ownRow3Linear8u", "icv_h9_owns_initTabTwd_Large_32f", "cvSub", "icv_p8_ownpi_WarpAffine_C_Const_32f_C1", "_ZN2cv4flipERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_s8_ownpi_WarpAffineSimpleCubic_16s_C4R", "icv_s8_ownIntegral_8u32s_C1R_V8", "icv_g9_ippsSortRadixGetBufferSize", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_W7", "icv_w7_ownippiFilterMax_8u_Row", "icv_w7_ippiNorm_Inf_32f_C1MR", "icv_p8_ippi_AlphaPremul_AC4S_8u", "icv_w7_ownPrewColV_8u", "icv_w7_ownsFFTGetBufSize_C_64fc", "icv_p8_owniGetRectBottomBF_8u_C1R", "icv_p8_ippiCrossCorrNormGetBufferSize", "icv_w7_ownscDft_Dir_32f", "icv_h9_ownWarpSimple3Nearest16s", "icv_p8_ownippiFilterMedian_16s_BC4R", "_ZN9CvLevMarq6updateERPK5CvMatRPS0_S5_", "icv_w7_ownpi_AndC_8u_C1R", "icv_p8_owniGetRectTopBF_8u_C3R", "icv_h9_owniFilter32f_8u_C3R_g9e9_0", "icv_h9_owniCopyMirrorBorder_32s_C3IR", "icv_h9_owniGetRectBottom_16s", "icv_w7_ownpi_Xor_16u_AC4R", "ippicviWarpAffineNearest_8u_C1R", "Java_org_opencv_core_Core_calcCovarMatrix_11", "icv_h9_ownscDFTinv_11_32fc", "icv_g9_ownsSub_16s_PosSfs", "icv_s8_ownsSqrtOneF", "icv_p8_ownpi_WarpAffine_NN_Mem_16s_C4", "icv_s8_ownippiFilterMedian_16u_C1R_3x3", "icv_w7_ownsrDFTinv_9_64f", "icv_g9_owniCopyMirrorBorder_32s_C1R", "icv_g9_ownSS4_94_16s", "icv_p8_ownpi_dInterVector_NN_32_AC4", "icv_g9_ippiScaleC_8u32f_C1R", "ippicviFilterBorder_16u_C4R", "icv_p8_ownHipass5x5Col_32f_C1", "icv_h9_owns_initTabTwdBase_32f", "_ZN2cv9solvePolyERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_h9_ownFilterColumn32f_16s_C1R_g9e9", "icv_p8_gres_NormL2Rel_16s_C1R", "icv_p8_ownpi_WarpAffine_NN_Const_64f_C4", "_ZNK2cv3ocl6Device15maxWorkItemDimsEv", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_V8", "icv_g9_ownSS4_53_16s", "Java_org_opencv_video_KalmanFilter_get_1gain_10", "icv_h9_ownscDFTfwd_5_32fc", "icv_g9_ownpi_WarpAffine_C_Transp_32f_C4", "icv_h9_owniScaleC_64f16s_C1R_acc", "icv_h9_ippiCopy_8u_C1C4R", "icv_g9_ownMorphInit_1u_L", "icv_s8_ownpi_WarpAffine_L_Repl_64f_C3", "icv_s8_ownpi_WarpAffine_L_Mem_16s_C1", "icv_g9_ippiCopySubpixIntersect_8u_C1R", "icv_w7_ownsMul_16s_NegSfs", "ippicviMorphGradient_8u_C3R_L", "icv_g9_ownscDft_Conv_64fc", "icv_p8_ippiGradientVectorGetBufferSize", "icv_p8_owns_rFFTinv_4_64f", "_ZN2cv9videostab32estimateGlobalMotionLeastSquaresERKNS_17_InputOutputArrayES3_iPf", "icv_s8_ownscDFTinv_6_scale_64fc", "WebPDecodeYUV", "icv_h9_ippiMinIndx_16s_C1R", "_ZN2cv16getTickFrequencyEv", "icv_g9_ownpi_WarpAffine_CR_16u_C1", "icv_p8_ownpi_dInterVectorClip_C_16u_C3", "icv_h9_ippsExp_64f_A50", "icv_g9_ownNormRel_Inf_16u_C1MR_P8Y8", "icv_g9_ippsSortRadixDescend_32s_I", "icv_g9_ownscDFTfwd_6_32fc", "cvWaitKey", "icv_h9_ippiThreshold_GT_16s_C1R", "icv_s8_ownSS1_43_32f", "_ZN2cv6detail12CameraParamsC1Ev", "_ZN2cv8superres13convertToTypeERKNS_3MatEiRS1_S4_", "icv_g9_ippiNormDiff_L1_8u_C1R", "Java_org_opencv_features2d_ORB_getWTA_1K_10", "ippicviSub_16s_C1RSfs", "icv_h9_ownResize4Lanczos2_16s", "icv_s8_ownSS3_54_16s", "icv_s8_ownSS4_83_16u", "icv_g9_ownippiFilterMedianHoriz_8u_BC4R", "icv_w7_ownpi_dInterPoint_CR_PixelB_16u", "icv_p8_owniFilterBilateralR2_InMem_32f_C3R_L", "icv_s8_ownpi_And_8u_AC4R", "_ZN2cv14extractChannelERKNS_11_InputArrayERKNS_12_OutputArrayEi", "Java_org_opencv_imgproc_Imgproc_createCLAHE_10", "icv_g9_ownpi_WarpSimpleNearest_16s_C4R", "_ZN2cv6String10deallocateEv", "Java_org_opencv_dnn_Net_getFLOPS_12", "icv_w7_ippiNormDiff_L1_16s_C1R", "icv_w7_ippiCopyReplicateBorder_32s_C3IR_L", "Java_org_opencv_video_BackgroundSubtractorMOG2_setShadowValue_10", "icv_w7_ownpis_Min_16s_AC4", "icv_g9_ownRow1Linear16s", "icv_g9_owniResizeNearest_16u_C3R", "icv_s8_ownResize4Linear16s", "icv_s8_ownpi_WarpAffineSimpleNearest_16s_C3R", "icv_g9_ippiSet_8u_C4R", "icv_g9_piGradientScharr8u_c1", "icv_h9_ownSS4_54_32f", "icv_p8_ippsSortRadixDescend_16s_I", "icv_h9_piGradient8u", "icv_g9_ippiResizeLanczos_16u_C4R_L", "icv_h9_ownSS4_41_16u", "icv_g9_owniResizeSuper_16s_C3R", "icv_w7_ippiFilterMedianVert_8u_1x3_A6", "icv_w7_ownsrDftFwdRecombine_64f", "_ZN2cv3dnn19experimental_dnn_v18ELULayer6createERKNS1_11LayerParamsE", "_ZN2cv3hal11sepFilter2DEiiiPhjS1_jiiiiiiS1_iS1_iiidi", "icv_g9_ownippiFilterxBrd32f_16u_C3R", "icv_p8_ownpi_Sum_32f_C3R", "icv_s8_innerHSVToRGB_8u_C3R", "icv_w7_owniGetRectTopBF_32f_C3R", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_13", "icv_g9_ownscDFTinv_12_scale_64fc", "icv_p8_ownpi_SimpleRotate_32f_C4R", "icv_s8_ownpi_XorC_32s_C4R", "icv_s8_ownDistanceTransform_3x3_8u32f_C1R_21F", "icv_h9_ownscDftInv_Prime4_32fc", "icv_h9_owns_rFFT_1_scale_32f", "icv_w7_ippiAbsDiff_16u_C1R", "ippicviResizeLanczos_16u_C1R_L", "icv_w7_ownNormRel_L2_8u_C3CMR_W7", "icv_g9_ownCalcBorderR3Antialiasing_16s", "_ZNK2cv3dnn19experimental_dnn_v13Net15getLayersShapesERKSt6vectorIiSaIiEEPS5_PS3_IS3_IS5_SaIS5_EESaISA_EESD_", "icv_s8_ownsGetSizeDftPrimeFact_64f_64f", "icv_s8_ippiCopyReplicateBorder_32s_C1R_L", "_ZNK2cv17DescriptorMatcher20DescriptorCollection11getLocalIdxEiRiS2_", "icv_h9_ippiCopyMirrorBorder_16s_C3R", "Java_org_opencv_core_Core_mulSpectrums_11", "icv_s8_ippiMean_StdDev_32f_C3CMR", "icv_s8_ippiThreshold_Val_32f_C1R", "_ZN2cv4cuda10BufferPool9getBufferEiii", "icv_h9_ownSS3_52_16s", "_ZN2cvplERKNS_7MatExprERKNS_3MatE", "icv_p8_ownsFFTGetBufSize_C_32fc", "ippicviWarpAffineNearestInit", "icv_p8_ownpi_WarpAffine_C_Mem_16s_C4", "icv_g9_owniScaleC_64f64f_C1R", "icv_h9_owniCopyMirrorBorder_8u_C1R", "icv_g9_ownpi_WarpAffine_L_Repl_16u_C3", "icv_w7_ippsFFTGetSize_C_32fc", "icv_p8_owns_cRealRecombine_64f", "Java_org_opencv_features2d_Features2d_drawKeypoints_11", "icv_s8_ownpi_WarpAffine_NN_16_C3", "icv_p8_ippiCopyReplicateBorder_16s_C1IR", "icv_h9_owniGetRectRightBF_8u_C3R", "icv_h9_ownFilterRowBorderPipeline_32f_C1R_3x3_G9E9cn", "icv_h9_ownippiFilterMedian_16s_C1R_1x7", "_ZN2cv17setErrorVerbosityEb", "icv_s8_ownCalcBorderR3Linear16s", "icv_s8_ownscDftInv_Prime_32fc", "icv_p8_ownWarpSimple3Nearest32f", "icv_w7_owns_cFft_BlkMerge_32fc", "icv_g9_ownSS4_53_16u", "icv_s8_owniResizeAntialiasing_8u_C3R_L", "icv_p8_ownRow1Filter14_32f", "icv_p8_ippsMaxEvery_16u", "Java_org_opencv_features2d_Params_get_1minRepeatability_10", "icv_h9_owniResizeCubic_16s_C4R", "icv_g9_innerRGBToGray_32f_C3C1R", "icv_s8_ippiFilterScharrVertMaskBorder_32f_C1R", "icv_s8_ippiResizeCubic_32f_C1R_L", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_W7", "icv_s8_ownpi_XorC_16u_C4R", "icv_p8_ippiResizeCubic_16s_C4R_L", "icv_g9_ownpi_Sum_32f_C1R_gs", "icv_s8_ippiNorm_L1_8u_C1R", "icv_s8_owns_BitRev2_Z", "icv_s8_ownRow3Linear8u", "icv_w7_ownscrDftInv_Fact5_64f", "icv_g9_owniScaleC_8s8s_C1R_fst", "Java_org_opencv_features2d_AKAZE_create_11", "icv_s8_ownippiFilterMedian_8u_C1R_5x5", "icv_w7_ippiCopyConstBorder_32f_C3R_L", "icv_h9_ownpi_WarpAffineSimpleCubic_16u_C3R", "icv_s8_ownpi_NormL1_8u_C1R", "cvSetTrackbarMin", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_W7", "icv_h9_ippiHSVToRGB_8u_C3R", "icv_g9_ownSS1vertical_8u", "icv_s8_ippsSortRadixIndexDescend_16u", "icv_s8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_V8", "icv_h9_owniClipRectZeroTail_16u32f_C1R", "icv_h9_owns_cFFTfwd_64_scale_32fc", "icv_h9_ownpi_WarpSimpleLinear_16u_C4R", "_ZN2cv5utils5trace7details8traceArgERKNS2_8TraceArgEPKc", "ippicviAddSquare_8u32f_C1IR", "icv_g9_ownpi_WarpAffine_C_Const_16s_C3", "_ZN2cv4cuda11TargetArchs20hasEqualOrGreaterBinEii", "Java_org_opencv_photo_AlignExposures_delete", "icv_w7_ownMinMaxIndx_8u_C1MR_W7_1", "icv_p8_ownippiThreshold_16s_AC4", "icv_g9_ippiNorm_L2_16u_C3CMR", "_ZNK2cv4cuda10DeviceInfo15memoryClockRateEv", "icv_p8_ownSS4_53_8u", "icv_g9_ownpi_WarpAffine_NN_Repl_8u_C1", "icv_w7_ippsAtan2One", "icv_n0_own_ipps_dExp_W7LAynn", "icv_w7_ippiFilterMinBorderGetBufferSize", "icv_s8_ownFilterRowBorderPipeline_8u16s_C3R_3x3_V8", "icv_p8_ownSS1_73_8u", "Java_org_opencv_ml_TrainData_getNormCatResponses_10", "icv_s8_ippiFilterMax_32f_Row_A6", "icv_w7_ownsInitDftConv_64f", "icv_h9_owns_initTabDct_Dir_32f", "icv_s8_ownCalcBorderR3Lanczos2_16u", "icv_h9_ownResize3Lanczos2_32f", "icv_h9_ownFilterBoxBorderInMem_32f_C4IR", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "icv_p8_ownippiFilterMedianSqr_16u_C3R", "icv_h9_innerRGBToHLS_8u_C3R", "icv_s8_ownippiFilterxBrd32f_16u_C3R", "icv_p8_ippiCopy_8u_AC4C3R", "icv_g9_ownSS1_81_16s", "icv_p8_ownsFFTGetBufSize_R_64f", "cvCreateStructuringElementEx", "icv_w7_ownpi_WarpSimpleCubic_16s_C4R", "icv_h9_ownsrDFTfwd_7_scale_32f", "icv_s8_owns_rFFTfwd_4_64f", "icv_p8_ippsDCTInvGetSize_32f", "icv_s8_ownpi_CountInRange_8u_C3R", "Java_org_opencv_ml_KNearest_setAlgorithmType_10", "icv_p8_owns_crRadix4Fwd_64f", "icv_g9_owniTranspose32s_C3R_core2", "icv_w7_ownResize1Lanczos2_16u", "icv_s8_ownippiFilterMedian_16s_C4R", "icv_p8_ownsAdd_32f", "icv_s8_owniConvert_16u8u_T7", "icv_h9_owniFilter32f_16u_C4R_g9e9_2", "icv_s8_ownpi_Min_16s_AC4R", "icv_g9_owniFilterBilateralCom_InMem_32f_C1R", "_ZN2cv5flann20AutotunedIndexParamsC1Effff", "icv_h9_ownRow1Antialiasing_32f", "icv_w7_ownpi_Max_32f_C3R", "icv_p8_ownscrDftInv_Prime3_64f", "icv_p8_cv_ownippiFilterMax_32f_Col", "icv_p8_ownpi_dInterPoint_CR_PixelB_32f", "_ZNK2cv4cuda10DeviceInfo18maxTexture2DMipmapEv", "icv_p8_ownSS4_31_8u", "icv_p8_ownpi_WarpAffineCubic_32f_C4R", "icv_h9_owniFilter32f_8u_C4R_g9e9_0", "_ZN3tbb8internal8governor14init_schedulerEijb", "icv_s8_ownscDFTfwd_3_scale_64fc", "icv_w7_ownsSub_16s", "icv_n0_own_ipps_dSqrt_S9LAynn", "icv_g9_owniDenominator_C1R", "icv_h9_ownCalcBorderR3Linear16u", "icv_p8_ippiAddSquare_8u32f_C1IMR", "ippicviAdd_16u32f_C1IR", "icv_g9_ippiSwapChannels_32f_C3R", "icv_w7_ownpi_WarpAffine_NN_8_C4", "_ZN2cv8superres27createSuperResolution_BTVL1Ev", "icv_s8_ownscDftInv_Prime3_32fc", "icv_w7_ippiCopyMirrorBorder_8u_C4IR", "icv_h9_ownsrDFTinv_3_scale_32f", "icv_g9_ippiMirror_32s_C3IR", "icv_h9_ippiWarpAffineNearest_16u_C3R", "ippicviFilterBorderInit_32f", "icv_s8_ippiTranspose_16u_C4R", "icv_s8_ownpi_Min_8u_AC4R", "_ZN2cv3hal10invSqrt32fEPKfPfi", "icv_h9_ownSS3_53_16s", "icv_s8_ownpi_WarpAffine_NN_Const_32f_C3", "icv_g9_ippsFloorOne", "icv_s8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "_ZN2cv6detail14PlaneWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_S8_iiRS3_", "icv_g9_ippiCannyGetSize", "icv_w7_ownpi_Or_8u_AC4R", "icv_g9_owniFilterBilateralR2_InMem_8u_C1R_px", "icv_h9_ownFilterRowBorderPipeline_32f_C3R", "icv_p8_owns_rFFTfwd_32_scale_64f", "icv_p8_ippiSwapChannels_16u_C3R", "icv_g9_ippiFilterMedianBorder_32f_C1R", "icv_s8_ownRow3Linear16u", "icv_s8_ownNorm_L1_16u_C3CMR_V8", "icv_g9_ownsrDFTinv_3_scale_32f", "cvGetReal2D", "icv_h9_ippiFilterBorder_32f_C1R", "icv_w7_ownpi_WarpAffineSimpleLinear_8u_C1R", "icv_p8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_V8", "icv_w7_ownscDftInv_Prime_64fc", "ippicviMean_16s_C1R", "icv_p8_ownResize4Nearest32f", "icv_w7_owniSwap_8u_210_AC4_W7", "icv_s8_ownCalcBorderR1Antialiasing_16u", "icv_w7_ippiResizeLanczos_16u_C4R_L", "icv_s8_ownRow3Linear64f", "icv_g9_ownCalcBorderR1Lanczos2_16u", "icv_p8_ownMean_16u_C1MR_W7", "icv_g9_owniFilter32f_8u_C3R_g9e9_2", "icv_p8_owniResizeNearest_16s_C4R", "icv_s8_ownsrDFTfwd_13_scale_64f", "cvReshape", "icv_s8_ippiConvert_32f8u_C1R", "icv_s8_ippiFilterMinBorderGetBufferSize", "icv_g9_ownpi_WarpAffine_C_Transp_16u_C3", "icv_h9_cv_ownippiFilterMin_16u_Col", "_ZNK2cv7MatExpr3invEi", "icv_g9_owniResizeLinear_16s_C3R", "icv_g9_owns_cRadix4FwdNorm_32fc", "icv_h9_ownpi_WarpAffine_L_Const_16s_C3", "_ZN2cv3ocl8PlatformC2Ev", "icv_h9_owns_initDctFwd_Conv_32f", "icv_h9_ippiSum_16u_C1R", "_ZN3tbb21set_assertion_handlerEPFvPKciS1_S1_E", "icv_w7_ownscrDftInv_Fact_64f", "icv_h9_ownSS4_83_8u", "icv_p8_ownippiFilterMax_16s_Col_AC4", "Java_org_opencv_ml_SVM_getSupportVectors_10", "Java_org_opencv_imgproc_Imgproc_ellipse_14", "_ZN3tbb8internal12dynamic_linkEPKcPKNS0_23dynamic_link_descriptorEjPPvi", "_ZN2cv3hal6mul16sEPKsjS2_jPsjiiPv", "icv_h9_owniScaleC_16s8s_C1R_acc", "_ZNKSt13bad_exception4whatEv", "icv_s8_ownSS3_73_32f", "icv_h9_ippiScaleC_8u8s_C1R", "icv_p8_ownRow3Linear16s", "_ZN2cv3hal11cvtBGRtoYUVEPKhjPhjiiiibb", "Java_org_opencv_features2d_ORB_getMaxFeatures_10", "icv_p8_ownsrDFTinv_12_scale_64f", "Java_org_opencv_features2d_Params_set_1minArea_10", "icv_s8_ippiCopy_32f_AC4C3R", "_ZN2cv3dnn19experimental_dnn_v13Net8getParamENS1_9DictValueEi", "ippicviDilate_8u_C3R_L", "icv_p8_ownscrDftInv_Prime_32f", "icv_g9_ownscDftFwd_Fact4_32fc", "icv_w7_ippiMinIndx_16s_C1R", "icv_s8_ownsExpOneF", "icv_g9_owns_rFFTinv_4_32f", "Java_org_opencv_features2d_DescriptorMatcher_clone_11", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_W7", "icv_w7_ippiDFTInv_CToC_32fc_C1R", "icv_s8_ippsCeilOne", "icv_s8_owniCopy_8u_C1_W7", "icv_h9_ippsSortRadixIndexAscend_16s", "icv_h9_ippiCopyMirrorBorder_8u_C1R", "icv_ipp_is_GenuineIntel", "icv_h9_ownWarpSimple1Nearest8u", "icv_s8_ippiWarpAffineCubic_32f_C4R", "icv_w7_owniResizeAntialiasing_8u_C3R_L", "icv_p8_owniCopyMirrorBorder_32s_C3R_L", "icv_h9_ownNorm_Inf_16u_C1MR_HSW", "icv_w7_ippiWarpAffineLinear_16u_C4R", "icv_g9_owniResizeCubic_16s_C1R", "ippicviScaleC_8u_C1IR", "icv_s8_owns_cFFTfwd_32_scale_64fc", "icv_w7_ownpi_WarpAffine_C_Const_16u_C4", "icv_h9_cv_ownippiFilterMxMnBorder_L", "icv_w7_ownpi_Min_8u_C1R", "icv_s8_ippiNormRel_L2_32f_C1MR", "icv_h9_ippiWarpAffineNearest_64f_C1R", "icv_p8_ownpi_SimpleRotate_16u_C3R", "cvErrorStr", "icv_s8_ownscDFTfwd_9_scale_32fc", "icv_s8_owns_rFFTfwd_8_64f", "_ZN2cv17CascadeClassifierC1ERKNS_6StringE", "icv_h9_owniFilter32f_16s_C1R_g9e9_6", "icv_h9_owniConvert_16u8u", "icv_p8_ownpi_XorC_16u_C4R", "icv_p8_ownpiDotProd_8u64f_C1R", "icv_g9_owns_initTabTwdRealRec_32f", "icv_s8_ownpi_WarpAffineLinear_16s_C4R", "_ZNK2cv5MatOp6divideEdRKNS_7MatExprERS1_", "icv_g9_ownsMinEvery_16u", "icv_p8_ownpi_WarpAffineNearest_64f_C1R", "icv_g9_ownpi_WarpAffine_CR_16u_C4", "icv_w7_ownCalcBorderR1Antialiasing_16u", "Java_org_opencv_features2d_KAZE_getThreshold_10", "icv_p8_ownippiFilterMedian_16s_C3R_3x3", "icv_s8_ippiFilterMedianBorder_32f_C1R", "icv_w7_owniDenominator_C1R", "icv_p8_ownpi_WarpAffineLinear_32f_C4R", "icv_h9_ownSS4_21_8u", "_ZN2cv9videostab24estimateOptimalTrimRatioERKNS_3MatENS_5Size_IiEE", "icv_p8_ownpi_GetAffineTransformQ", "icv_g9_ownCalcBorderR1Linear8u", "icv_p8_owniConvert_32s16s_C1RSfs", "cvReadRawDataSlice", "_ZNK2cv9softfloatdvERKS0_", "icv_s8_ownpi_dInterVectorClip_L_8u_AC4", "icv_h9_ownCopySubpixIntersect_32f_C1R_h9l9", "icv_h9_owniFilter32f_16s_C3R_g9e9_7", "icv_w7_ippiMoments64f_8u_C1R", "Java_org_opencv_video_BackgroundSubtractorMOG2_getHistory_10", "icv_h9_ownSS4vertical_16s", "icv_w7_ownNormRel_L2_16u_C1MR_W7", "icv_g9_ippiMinIndx_8u_C1R", "icv_p8_ownscDftInv_Fact11_64fc", "icv_s8_owns_cFFTinv_32_scale_32fc", "icv_g9_ippiResizeLanczos_16s_C3R_L", "icv_s8_ownscDFTfwd_12_scale_32fc", "icv_w7_ippiGradientVectorScharr_32f_C1R", "icv_w7_owniGetRectTopBF_8u_C1R", "icv_s8_ownpi_WarpAffine_NN_Repl_8u_C1", "icv_g9_ippiCopyConstBorder_8u_C1R", "icv_h9_ippiNormDiff_L2_16u_C1MR", "icv_s8_owniConvert_32s8s_W7", "icv_n0_own_ipps_dSin_W7HAynn", "icv_g9_owniFilter_32f_C3R_g9e9_1", "Java_org_opencv_photo_Photo_createCalibrateRobertson_11", "icv_s8_owniConvert_8u16s_W7", "icv_g9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "icv_p8_owniConvert_8s8u_sse42", "icv_g9_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_s8_ownscDFTinv_11_scale_64fc", "icv_s8_ippiMorphClose_8u_C1R_L", "_ZN2cv3hal11cvtBGRtoXYZEPKhjPhjiiiib", "icv_w7_ippiCopyConstBorder_32s_C4R", "icv_w7_ippiScaleC_16u32s_C1R", "iwiRoiPipeline_GetDstBufferSize", "icv_h9_owniCopyMirrorBorder_32s_C3IR_L", "icv_w7_ippiSqrIntegral_8u32f64f_C1R", "icv_s8_piFilterBoxBorder_32f_C1IR_1_v8u8_A", "Java_org_opencv_core_Core_subtract_15", "icv_g9_ippsFree", "Java_org_opencv_ml_EM_getMeans_10", "_ZN2cv9videostab18FastMarchingMethod6heapUpEi", "icv_s8_ownNormRel_Inf_8s_C1MR_V8", "icv_w7_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss", "ippicvsSortRadixIndexDescend_32f", "icv_s8_owniConvert_16u8s_ccode", "_ZN2cv3ogl6BufferC1Ev", "_ZN2cv6detail16MultiBandBlenderC1Eiii", "ippicviCopy_16u_AC4C3R", "icv_p8_ippiMul_32f_C1R", "_ZN2cv12LineIteratorC1ERKNS_3MatENS_6Point_IiEES5_ib", "icv_p8_ownLaplace3x3Row_32f_C3", "icv_p8_ownsConj_64fc_T7", "icv_w7_ippiAddProduct_8u32f_C1IMR", "cvStartFindContours", "icv_s8_owniShiftClipRectZeroTail_32f_C1R", "icv_s8_ownSS4_94_32f", "icv_p8_owniTranspose_16u_C1IR_W7", "icv_p8_ownSS1_32_32f", "icv_w7_ownscDFTfwd_7_scale_32fc", "icv_w7_ownpi_WarpAffine_NN_Repl_16s_C3", "Java_org_opencv_dnn_Layer_get_1name_10", "_ZN2cv11FileStorageC2EP13CvFileStorageb", "ippFpuSsx4TS", "_ZN2cv8Subdiv2D13setEdgePointsEiii", "_ZN2cv3dnn19experimental_dnn_v18AbsLayer6createERKNS1_11LayerParamsE", "icv_h9_Moments8uC1R_64f_FAST", "Java_org_opencv_calib3d_Calib3d_RQDecomp3x3_11", "icv_p8_owniCopyBF_32f_C1R", "icv_s8_ippiScaleC_16s_C1R", "icv_p8_ownpi_dInterVectorClip_NN_8_C1", "icv_s8_owniTranspose_8u_C1R_W7", "icv_s8_ownpi_dInterVector_NN_16_C3", "icv_h9_ippiResizeLanczos_16s_C1R_L", "icv_h9_ownCalcBorderR3Antialiasing_16u", "icv_h9_ippiConvert_8s8u_C1Rs", "icv_p8_ownsMul_32f", "_ZN2cv6detail14FeatherBlender16createWeightMapsERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_h9_ownscDFTinv_5_scale_64fc", "icv_s8_ownNorm_Inf_8u_C1MR_W7", "icv_g9_owns_cRadix4Inv_64fc", "icv_g9_ownpi_WarpAffine_C_Transp_16s_C1", "icv_p8_ownSS4_52_8u", "icv_g9_ippiScaleC_64f_C1R", "icv_h9_ippiCopyMirrorBorder_16u_C1IR", "icv_w7_ownsInitTabDftInvRec_32f", "icv_ps_get_cw_fpu", "icv_p8_ownFilterBoxBorderInMem_32f_C4R", "icv_w7_ippiNorm_Inf_8u_C3CMR", "cvRelease", "icv_p8_ownippiThreshold_16s_C3", "icv_w7_ownpi_dInterVectorClip_C_16u_C", "icv_s8_ownpi_WarpAffine_L_Const_32f_C3", "icv_h9_ownsrDFTfwd_6_64f", "icv_s8_ownCalcBorderR3Linear8u", "icv_p8_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_W7", "icv_h9_ownscDFTinv_14_scale_64fc", "icv_p8_ownpi_WarpAffineSimpleCubic_16s_C1R", "icv_g9_ownpi_WarpAffine_C_Transp_64f_C1", "icv_s8_ippiConvert_8s16s_C1R", "ippicvsDFTGetSize_C_32fc", "icv_s8_ipMirror135_8uC1R", "icv_p8_ippiCopy_32f_C4MR", "icv_g9_ippiResizeNearest_32f_C3R_L", "icv_w7_ippiResizeSuper_32f_C1R_L", "icv_w7_ippsInvSqrt_64f_A50", "_ZN2cv3hal6max64fEPKdjS2_jPdjiiPv", "icv_g9_ownSS3_65_8u", "_ZNSt9exceptionD0Ev", "Java_org_opencv_ml_SVM_getUncompressedSupportVectors_10", "icv_p8_ownpi_dInterVector_NN_16_P3", "icv_p8_ownsInitDftPrimeFact_64f_64f", "icv_p8_ippiConvert_32f8u_C1R", "icv_w7_ownpi_WarpSimpleCubicInit", "icv_p8_ippiNorm_L1_16u_C3CMR", "_ZN2cv3ogl6Buffer7mapHostENS1_6AccessE", "icv_p8_ippiAddProduct_32f_C1IMR", "Java_org_opencv_features2d_DescriptorMatcher_clone_10", "icv_p8_ippiMean_StdDev_16u_C3CR", "icv_g9_owniFilter32f_8u_C3R_g9e9_7", "icv_p8_ownpi_WarpAffine_L_Mem_16u_C3", "icv_g9_ownsrDFTfwd_14_scale_32f", "icv_g9_owniGetRectTopBF_8u_C1R", "icv_g9_ownSS1_52_32f", "ippicviCopy_32f_C3P3R", "_ZN2cv31createEMDHistogramCostExtractorEiif", "icv_w7_ownpi_WarpAffineSimpleCubic_32f_C3R", "icv_h9_ippiMirror_16s_C1IR", "icv_w7_ippiWarpAffineCubic_16u_C3R", "icv_w7_owniResizeAntialiasing_8u_C4R_L", "icv_g9_ippiCopy_8u_C4C1R", "icv_p8_ownSS3_98_8u", "Java_org_opencv_imgproc_Imgproc_pyrMeanShiftFiltering_10", "icv_s8_owniFlip_16u_C1", "icv_p8_owniFilter_32f_C1R_v8u8_8", "Java_org_opencv_photo_TonemapReinhard_getLightAdaptation_10", "ippicviComputeThreshold_Otsu_8u_C1R", "icv_p8_ownpi_Sum_32f_AC4R", "icv_w7_ownsrDftFwd_Dir_32f", "icv_s8_ownpi_WarpSimpleCubic_16s_C1R", "icv_p8_ippiResizeSuper_16u_C3R_L", "icv_w7_ownscDftFwd_Fact4_32fc", "Java_org_opencv_imgproc_Imgproc_matchShapes_10", "icv_g9_owns_initTabTwd_L1_64f", "icv_p8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_W7", "icv_g9_ippsMul_32f_I", "icv_h9_owniScaleC_8u32f_C1R_fst", "_ZN2cv16TLSDataContainerD0Ev", "icv_p8_ownFilterBoxBorder_16s_C1R", "icv_p8_ippiMean_32f_C3R", "icv_h9_ippiSum_16u_C3R", "icv_p8_ownMinMaxIndx_16u_C1MR_W7_1", "icv_g9_ownpi_WarpAffine_C_Mem_32f_C1", "icv_w7_owns_rFFTinv_4_32f", "icv_h9_ownCalcBorderR3Lanczos3_16u", "icv_g9_ownscDFTinv_13_32fc", "icv_g9_ownMinMaxIndx_32f_C1MR_2", "icv_p8_ownscDftFwd_Fact11_64fc", "icv_h9_ownpi_WarpAffineLinear_16u_C4R", "Java_org_opencv_video_KalmanFilter_set_1gain_10", "icv_g9_ipMirror135_8uC1R", "icv_s8_ippiCopyReplicateBorder_32s_C3IR", "icv_g9_ownpi_WarpAffineNearest_8u_C1R", "icv_w7_ownpi_dInterVectorClip_NN_8_AC4", "icv_w7_ownpi_WarpAffine_NN_Repl_8u_C1", "icv_g9_ownSS1_43_8u", "icv_g9_ownpi_WarpAffine_L_8u_C1", "ippicviGetCentralMoment_64f", "icv_w7_owniCrossCorrValid_32f_C1R", "icv_p8_ippiCopyReplicateBorder_8u_C3R", "icv_h9_ippiMorphGradient_8u_C1R_L", "icv_g9_ippiIntegral_8u32s_C1R", "icv_w7_ownippiFilterMedianHoriz_16u_BC4R_3x1", "Java_org_opencv_photo_Photo_denoise_1TVL1_10", "icv_h9_ippiGradientVectorSobel_8u16s_C1R", "_ZNSt9bad_allocD0Ev", "icv_w7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_W7", "icv_p8_Angle_16s", "icv_s8_ippiFilterBilateralBorderInit_L", "icv_s8_ownsMaxEvery_64f", "_ZN2cv4UMat8copySizeERKS0_", "icv_w7_ippiCopyReplicateBorder_32f_C4R", "_ZN2cv11getTextSizeERKNS_6StringEidiPi", "icv_w7_owniTranspose_32s_C4IR_W7", "icv_p8_ownBFilterRow32f_16u_C4R", "icv_w7_ownsrDFTinv_9_32f", "icv_w7_ownpi_WarpAffine_L_Mem_8u_C4", "icv_p8_ownippsCnvrt_16u32f", "icv_h9_ownSS3_54_16s", "icv_w7_ippiNorm_L1_8u_C1MR", "icv_s8_cv_ownippiFilterMin_32f_Row", "icv_s8_ownpi_WarpAffineSimpleCubic_8u_C3R", "icv_g9_owniConvert_8s16s_ccode", "icv_p8_owniFlip_16u_C1", "icv_h9_ownscDftFwd_Prime16_64fc", "icv_h9_ownSS1_52_32f", "icv_h9_ownpi_WarpAffineNearest_8u_C4R", "icv_g9_owniFilter32f_16u_C1R_g9e9_5", "llwiFilterMorphology", "icv_g9_owniGetRectComBF_8u_C1R", "icv_g9_owniCopyMirrorBorder_8u_C4IR", "_ZNK2cv5flann5Index11getDistanceEv", "icv_w7_ippiFilterMedianVert_16u_1x3_A6", "icv_g9_ownSS1_94_16s", "icv_w7_ippiMarkSpeckles_16s_C1IR", "icv_h9_owniScaleC_8s8s_C1R_fst", "icv_w7_ownsSub_32f", "_ZN2cv6detail15createWeightMapERKNS_11_InputArrayEfRKNS_17_InputOutputArrayE", "icv_w7_ownpis_Min_16u_C1", "icv_g9_ippiScaleC_32s8s_C1R", "icv_w7_ippiConvert_32f8s_C1R", "icv_h9_ippiNorm_L1_8u_C1MR", "icv_g9_ownResize1Lanczos2_8u", "icv_s8_ownscrDftFwd_Fact4_32f", "icv_s8_ownscDftInv_Prime4_32fc", "icv_s8_ownHipass5x5Col_16s_AC4", "icv_p8_ownpi_WarpAffineCubic_32f_C1R", "icv_p8_ownCopySubpixIntersect_8u16u_C1R_Sfs_W7", "icv_h9_ippiResizeLinear_64f_C3R_L", "icv_g9_cv_ownippiFilterMin_16s_Row", "ippicviCopySubpixIntersect_32f_C1R", "icv_p8_owniCopy32s_P4C4_W7", "icv_p8_ippsMul_32f_I", "icv_s8_ownSS4_53_8u", "icv_s8_ippiAdd_8u32f_C1IMR", "icv_p8_owniFFTFwd_RToPack_32f_C1R", "icv_w7_ippiTranspose_32f_C1IR", "icv_p8_owniFlipCopy_8u_C1", "icv_h9_ownsrDFTfwd_10_64f", "icv_h9_ippiMirror_32f_C1R", "_ZN2cvmlERKNS_3MatERKNS_7MatExprE", "_ZN2cv3MatC1ERKS0_RKNS_5Rect_IiEE", "icv_w7_ippiNormDiff_L2_32f_C1MR", "icv_s8_ownResize4Antialiasing_32f", "icv_s8_ownCanny_32f8u_C1R_1_16u_W7", "icv_h9_ippiCopy_8u_C3C1R", "_ZNK2cv3Mat5crossERKNS_11_InputArrayE", "_ZN2cv24currentParallelFrameworkEv", "icv_n0_own_ipps_sAtan2_G9EPnnn", "_ZNK2cv14DefaultDeleterI12CvMemStorageEclEPS1_", "icv_g9_ownscDFTfwd_5_64fc", "icv_g9_ippiNormDiff_L2_8u_C1R", "icv_s8_ownpi_WarpAffine_CR_32f_C4", "icv_s8_ownSS1_52_8u", "icv_s8_ippsConvert_16s8s_Sfs", "_ZTv0_n20_NK2cv9Feature2D5writeERNS_11FileStorageE", "icv_p8_ippiHarrisCorner_32f_C1R", "icv_p8_ippiResizeLanczos_32f_C4R_L", "icv_g9_ownSS3_41_16u", "Java_org_opencv_dnn_Layer_run_10", "icv_w7_ippiSwapChannels_32f_C3C4R", "_ZN2cv17cornerMinEigenValERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_g9_ownpi_SmoothBorder", "icv_w7_ownscDftInv_Fact5_32fc", "icv_p8_ownBuildFilter_32f", "Java_org_opencv_video_DualTVL1OpticalFlow_setScalesNumber_10", "icv_h9_ippiCopyReplicateBorder_32s_C3IR", "icv_p8_ownippsCnvrt_16s16f", "icv_s8_ippiCopy_32s_C1R", "icv_p8_ownpi_WarpAffine_CR_8u_C4", "icv_g9_ippiThreshold_LT_32f_C1R", "icv_g9_owniFilterBilateralCom_InMem_32f_C3R_L", "icv_s8_owniFilter_32f_C3R_v8u8_8NA", "icv_s8_ippiConvert_8u16u_C1R"], "allstrings": ["java/util/ArrayList", "(I)V", "<init>", "(Ljava/lang/Object;)Z", "clear", "vector::reserve", "size", "((I)Ljava/lang/Object;", "org.opencv.android.Utils", "org/opencv/core/CvException", "java/lang/Exception", "unknown exception", "std::exception", "%s caught %s", "org.opencv.core.Mat", "cv::Exception", "org/opencv/dnn/Layer", "(J)V", "org/opencv/core/MatOfInt", "nativeObj", "org.opencv.core", "org.opencv.imgproc", "org.opencv.ml", "org.opencv.objdetect", "org.opencv.photo", "org.opencv.video", "org.opencv.dnn", "org.opencv.imgcodecs", "org.opencv.videoio", "org.opencv.features2d", "org.opencv.calib3d", "name", "vectors", "values", "mean", "vector::_M_fill_insert", "Failed to allocate %llu bytes", "\n(:, :, %d) = \n", "(:, :, %d) = \n", "%%.%dg", "], dtype='%s')", "uint8", "int8", "uint16", "int16", "int32", "float32", "float64", "uint64", "func != 0", "rows == mat->cols", "OPENCV_TEMP_PATH", "status", "error", "No Error", "Backtrace", "Unspecified error", "Internal error", "Insufficient memory", "Bad argument", "Iterations do not converge", "Autotrace call", "Incorrect size of input array", "Null pointer", "Division by zero occurred", "Image step is wrong", "Input COI is not supported", "Bad number of channels", "Bad parameter of type CvPoint", "Bad type of mask argument", "Parsing error", "Assertion failed", "No CUDA support", "Gpu API call", "No OpenGL support", "OpenGL API call", "Unknown %s code %d", "unknown function", "cv::error()", "%s:%d: error: (%d) %s\n", "OpenCVThread-%03d", "Unknown feature", "OPENCV_DUMP_CONFIG", "SSE2", "SSE3", "SSSE3", "SSE4.1", "SSE4.2", "POPCNT", "FP16", "AVX2", "FMA3", "AVX512F", "AVX512BW", "AVX512CD", "AVX512DQ", "AVX512ER", "AVX512IFMA", "AVX512PF", "AVX512VBMI", "AVX512VL", "NEON", "\nRequired baseline features:\n", "%s - OK\n", "%s - NOT AVAILABLE\n", "OPENCV_CPU_DISABLE", "OPENCV_IPP", "disabled", "sse2", "sse3", "ssse3", "sse41", "sse42", "avx2", "True", "true", "TRUE", "False", "false", "FALSE", "%s:%d %s", "IPP:(ipp_mean(src, mask, s))", "IPP:(ipp_sum(src, _res))", "%d-%d", "range.end", "range.start", "parallel_for_body", "nstripes", "parallel_for", "num_components", "eigenvalues", "eigenvectors", "GRAY", "BGRA", "could not open directory: %s", "%d%c", "-.Inf", ".Inf", "%.16e", "%s(%d): %s", "<!-- %s -->", "...\n", "---\n", "type_id", "\n<!-- next stream -->\n", "The storage is not opened", "Comments are not allowed here", "Unexpected end of line", "Abort at parse time", "Tabs are prohibited in YAML!", "Invalid character", "Incorrect indentation", "Duplicated key", "Key may not start with '-'", "Missing ':'", "An empty key", "width", "height", "origin", "layout", "interleaved", "data", "sizes", "rows", "cols", "flags", "vertex_dt", "edge_dt", "vertex_count", "edge_count", "oriented", "header_dt", "header_user_data", "%df%s", "vertices", "edges", "count", "curve", "closed", "hole", "untyped", "rect", "color", "sequences", "level", "\"$base64$", "binary", "x%02x", "!!%s %c", "!!%s", "#x%02x", "</opencv_storage>\n", "vector::_M_insert_aux", "Extra closing '%c'", "Incorrect element name %s", "%.8e", "opencv-nd-matrix", "opencv-matrix", "top-left", "bottom-left", "planar", "opencv-image", "opencv-sparse-matrix", "opencv-graph", "2if%s", "opencv-sequence", "recursive", "opencv-sequence-tree", "Empty tags are not supported", "Unrecognized Base64 header", "Mismatched closing tag", "Closing \" is expected", "apos", "quot", "Too long string literal", "Invalid `dt` in Base64 header", "Invalid Base64 data.", "Preliminary end of the stream", "Tag should start with '<'", "Unknown tag type", "<tag:yaml.org,2002:", "Empty type name", "float", "The wrong closing bracket", "Unexpected End-Of-File", "$base64$", "basic_string::at", "Invalid escape character", "null", "Unrecognized value", "ptr is NULL", "Key must end with '\"'", "Key is empty", "Unexpected character", "NULL or empty filename", "NULL or empty buffer", "basic_string::substr", "base64", ".xml", ".xml.gz", ".json", ".json.gz", "UTF-16", "utf-16", "Utf-16", "<?xml version=\"1.0\"?>\n", "<opencv_storage>\n", " <!-- resumed -->", "%YAML:1.0\n---\n", "...\n---\n", "%YAML", "<?xml", "opencv_storage", "%YAML:1.", "%YAML 1.", "Invalid or unsupported syntax", "bool", "unsigned", "unsigned long long", "double", "string", "unknown", "can not convert: [%s] to [%s]", "<none>", "undeclared key '%s' requested", "Parameter '", "Parameter #%d: ", "Missing parameter #%d\n", "\nERRORS:\n%s\n", "Usage: %s [params] ", " (value:%s)", "\n\t\t%s\n", "error in split_range_string(", "u != 0", "Exception: %s\n", "OPENCV_OPENCL_RAISE_ERROR", "DIG(", "HOST_ALLOC", "entry.clBuffer_ != NULL", "reservedEntries_.empty()", "entry.capacity_ != 0", "OpenCL ", "Advanced Micro Devices, Inc.", "Intel(R) Corporation", "Intel", "Iris", "NVIDIA Corporation", "cl_khr_image2d_from_buffer", "%08llx", "_sat", "noconvert", "convert_%s", "convert_%s%s_rte", "convert_%s_sat", "COEFF", " -D %s=%s", "OPENCV_OPENCL_FORCE", "clGetPlatformInfo failed!", "retval == 0", "vectorWidths", "src1.isMat() || src1.isUMat()", "src2.isMat() || src2.isUMat()", "src3.isMat() || src3.isUMat()", "src4.isMat() || src4.isUMat()", "src5.isMat() || src5.isUMat()", "src6.isMat() || src6.isUMat()", "src7.isMat() || src7.isUMat()", "src8.isMat() || src8.isUMat()", "src9.isMat() || src9.isUMat()", "OPENCV_OPENCL_DEVICE", "dgpu", "igpu", "accelerator", "status == 0 || status == -1", "    Platform: ", "    Device types: ", "    Device name: ", "clGetPlatformIDs failed!", "no OpenCL platform available!", "clRetainContext failed!", " -D INTEL_DEVICE", "err == 0", "_globalsize != 0", "clFinish(qq) == 0", "u->origdata", "u->mapcount == 0", "u->origdata == data", "clFinish(q) == 0", "u->handle != 0", "u->data != NULL", "dims <= 3", "dst->refcount == 0", "OpenCL runtime not found!", "cn <= 4", "Image format is not supported", "!alias", "clFlush(queue) == 0", "devData != NULL", "!src.empty()", "!alias || canCreateAlias(src)", "OPENCV_OPENCL_PROGRAM_CACHE", "codehash=%08llx ", "data == 0", "u->origdata != 0", "uchar", "short", "uchar3", "int2", "int4", "char", "char3", "ushort", "ushort3", "short3", "int3", "ulong", "ulong2", "ulong3", "ulong4", "ulong8", "ulong16", "uchar2", "uchar4", "uchar8", "uchar16", "char2", "char4", "char8", "char16", "ushort2", "ushort4", "ushort8", "ushort16", "short2", "short4", "short8", "short16", "float2", "float3", "float4", "float8", "float16", "double2", "double3", "double4", "double8", "double16", "scaleFunc != 0", "IPP:ipp_split(src, mv, cn)", "type == CV_64FC2", "nsamples > 0", "_mean.size() == size", "mean.size() == size", "total() == 0 || data != NULL", "i < (int)vv.size()", "i < sz.height", "i < 0", "(flags & FIXED_TYPE) != 0", "(size_t)i < vv.size()", "narrays <= 1000", "i < (int)v.size()", "m.dims == d", "!fixedSize() || len == len0", "!fixedType() && !fixedSize()", "dst.cols == dst.rows", "src.data != dst.data", "IPP:ipp_sort(src, dst, flags)", "IPP:ipp_transpose(src, dst)", "OpenCVTrace", "[ INFO:", "Trace: Total events: ", "[ WARN:", "Trace: Total skipped events: ", "<unknown>", ".txt", "#version: 1.0", "l,%lld,\"%s\",%d,\"%s\",0x%llX\n", "%s-%03d.txt", "#thread file: %s\n", "b,%d,%lld,%lld,%lld", ",parentThread=%d,parent=%lld", "skipped trace entries", "tIPP", "e,%d,%lld,%lld,%lld,%lld", ",skip=%d", ",tIPP=%lld", "<null>", "OPENCV_TRACE", "OPENCV_TRACE_DEPTH_OPENCV", "OPENCV_TRACE_MAX_CHILDREN", "OPENCV_TRACE_LOCATION", "OPENCV_TRACE_ITT_PARENT", "[empty_any]", "maxResults > 0", "Building kmeans tree...\n", "Building kdtree tree...\n", "Failed to allocate memory.\n", "Cannot read from file", "algorithm", "trees", "branching", "iterations", "centers_init", "cb_index", "target_precision", "build_weight", "memory_weight", "sample_fraction", "leaf_size", "table_number", "key_size", "multi_probe_level", "filename", "checks", "sorted", "' in the parameters given", "Missing parameter '", "Unknown index type", "FLANN_INDEX", "leaf_max_size", "reorder", "type=%d\n", "matches.cols=%d, nn=%d\n", "Got as close as I can\n", "Start linear estimation\n", "Computing ground truth\n", "Estimating number of checks\n", "Optimum cb_index: %g\n", "Computing ground truth... \n", "Autotuning parameters...\n", "Autotuned parameters:\n", "Search parameters:\n", "ssize.area() > 0", "Unknown interpolation method", "nnfunc != 0", "_src.channels() <= 4", "ifunc != 0", "M should be >0", "dsize.area() > 0", "func != 0 && cn <= 4", "cn == 4", "Unknown distance", "ccn == 1 || delta == 0", "the input arrays are too big", "src && dst && count > 0", "dstY <= roi.height", "_kernel.channels() == 1", "rowFilter && columnFilter", "cn == CV_MAT_CN(_dstType)", "constVal != NULL", "finalPass", "global_hysteresis", "hysteresis", "magnitude", "gradient", "opencv-hist", "type", "is_uniform", "have_ranges", "bins", "thresh", "Unknown comparison method", "NULL ranges pointer", "depth == CV_8U", "H0.isContinuous()", "nimages > 0", "Null double array pointer", "nimages > 0 && dims > 0", "csz == 0 || csz == dims", "!_src.empty()", "scn == 3 || scn == 4", "scn == 2 && depth == CV_8U", "scn == 1 && depth == CV_8U", "MWRMNV RMVV PSTS", "MXVNTMRMPNOPOSPURVTVVU", "MWOMOV OMRMTNUPUSTURVOV", "MWOMOV OMUM OQSQ OVUV", "MVOMOV OMUM OQSQ", "MXVNTMRMPNOPOSPURVTVVUVR SRVR", "MWOMOV UMUV OQUQ", "PTRMRV", "NUSMSTRVPVOTOS", "MWOMOV UMOS QQUV", "MVOMOV OVUV", "LXNMNV NMRV VMRV VMVV", "MWOMOV OMUV UMUV", "MXRMPNOPOSPURVSVUUVSVPUNSMRM", "MWOMOV OMSMUNUQSROR", "MWOMOV OMSMUNUQSROR RRUV", "MWUNSMQMONOOPPTRUSUUSVQVOU", "MWRMRV NMVM", "MXOMOSPURVSVUUVSVM", "MWNMRV VMRV", "LXNMPV RMPV RMTV VMTV", "MWOMUV UMOV", "MWNMRQRV VMRQ", "MWUMOV OMUM OVUV", "MVOMOV OMUM", "MWRMNV RMVV NVVV", "MWRMNV RMVV", "MWOMUM PQTR TQPR OVUV", "MWOMOV UMUV OMUM", "MWOMRQOV OMUM OVUV", "MWNONNOMPMQNRPRV VOVNUMTMSNRP", "LXRMRV PONPNSPTTTVSVPTOPO", "LXRMRV NOOPOSQTSTUSUPVO", "MXOVQVOROPPNRMSMUNVPVRTVVV", "MWSMMV SMUV OSTS", "LXVPUNTMRMPNOONQNSOUPVRVTUUT", "MXQMNV QMUMVOVQUTTURVNV", "MVQMNV QMVM PQSQ NVSV", "MVQMNV QMVM PQSQ", "MXQMNV WMTV PQUQ", "PUTMQV", "OVUMSSRUQVPVOUOT", "MVQMNV VMOS RQTV", "NVRMOV OVTV", "LYPMMV PMQV XMQV XMUV", "MXQMNV QMTV WMTV", "MWQMNV QMUMVNVPUQSRPR", "MWVNTMRMPNPPQQTRUSUUSVPVNU", "MVSMPV PMVM", "LXPMNSNUOVRVTUUSWM", "MWOMQV WMQV", "KXNMNV SMNV SMSV XMSV", "NWQMTV WMNV", "NWQMSQQV WMSQ", "MWQMWMNVTV", "LXNMRV VMRV NMVM", "MWNLVX", "LXRONU ROVU", "MWNVVV", "PVRMUQ", "MWMMOKQKTMVMWK", "NWQPTPUQUV URQSPTPUQVSVUU", "MWOMOV OSPURVTUUSTQRPPQOS", "MWUQSPRPPQOSPURVSVUU", "MWUMUV USTQRPPQOSPURVTUUS", "MWOSUSTQRPPQOSPURVTV", "NVUNTMSMRNRV PPTP", "MWOMOV OSPQRPTQUSUV", "PTRLQMRNSMRL RPRV", "PUSLRMSNTMSL SPSXRYQYPX", "NWPMPV UPPT RSUV", "MWOPOV OSPQRPTQUSUV", "MWRPPQOSPURVTUUSTQRP", "MWOPOY OSPURVTUUSTQRPPQOS", "MWUPUY USTQRPPQOSPURVTUUS", "NVPPPV PSQQSPTP", "NWUQTPQPPQPRQSTSUTUUTVQVPU", "NVRMRUSVTVUU PPTP", "MWUPUV OPOSPURVTUUS", "NVOPRV UPRV", "LXNPPV RPPV RPTV VPTV", "MWOPUV UPOV", "MWOPRV UPRVQXPYOY", "MWOPUPOVUV", "MXVPUSTURVPUOSPQRPTQUUVV", "MXNQOPQPRQRSQW VPURSTQWPY", "NWUQSPQPPQPRQS SSQSPTPUQVSVUU", "OVRPQSQURVSVTU", "MWQPOV UPTPRQPS PSQUSVTV", "MWOMPMQNRPUV RPOV", "MWNPOPOV UPTSRUOV", "MXOQQPVP QPQRPV TPTRUV", "MWOSPURVTUUSTQRPPQOSNY", "MXVPRPPQOSPURVTUUSTQRP", "MXOQQPVP SPRV", "KXMQNPOPPQPUQVSVTUUSVP", "MWOPPPQQSXTYUY UPTRPWOY", "KYTMRY MQNPOPPQPUQVTVUUVSWP", "LXOPNRNTOVQVRTRR UPVRVTUVSVRT", "MWQMOSPURVTUUSTQRPPQOS", "MWUQSPRPPQOSPURVTV", "MWOSTSURUQSPRPPQOSPURVTV", "OVVMUMTNSPQVPXOYNY QPUP", "MVQMNV OSPQQPSPTQTRSTSUTVUV", "PUSMSNTNTMSM QPRPSQSRRTRUSVTV", "NVRMOV UPTPRQPS PSQUSVTV", "OTSMQSQURVSV", "MXUSTQRPPQOSPURVTUUS VPSY", "MVOPPPQQQSPV UQTPSPRQQS", "NVTQSPQPPQPRQSRSSTSURVPVOU", "NUSMQSQURVSV PPTP", "MWNPOPPQPROTOUPVRVTUURUP", "NVUPOV PQQPSPTQ PUQVSVTU", "MWUSTQRPPQOSPURVTUUSUPTNRMQM", "MWUQSPRPPQOSPURVSVUU OSSS", "MWTMQY RPPQOSPURVSVUUVSUQSPRP", "MWUQSPQPOQOSPTRUSVSWRXQX", "MWUNORUV", "MWONUROV", "OUTKQKQYTY", "OUPKSKSYPY", "OUTKSLRNROSQQRSSRURVSXTY", "OUPKQLRNROQQSRQSRURVQXPY", "MWRMPNOPOSPURVTUUSUPTNRM", "MWPORMRV", "MWONQMSMUNUPTROVUV", "MWONQMSMUNUPSQ RQSQURUUSVQVOU", "MWSMSV SMNSVS", "MWPMOQQPRPTQUSTURVQVOU PMTM", "MWTMRMPNOPOSPURVTUUSTQRPPQOS", "MWUMQV OMUM", "MWUPTRRSPROPPNRMTNUPUSTURVPV", "PURURVSVSURU", "PUSVRVRUSUSWRY", "PURPRQSQSPRP RURVSVSURU", "PURPRQSQSPRP SVRVRUSUSWRY", "PURMRR SMSR RURVSVSURU", "PTRMRQ", "NVPMPQ TMTQ", "NVQMPNPPQQSQTPTNSMQM", "MWVLNX", "OUTKRNQQQSRVTY", "OUPKRNSQSSRVPY", "PTRKRY", "LXNRVR", "LXRNRV NRVR", "LXNPVP NTVT", "MWOOUU UOOU", "MWRORU OPUT UPOT", "PURQRRSRSQRQ", "PUSMRORQSQSPRP", "PUSNRNRMSMSORQ", "LXSOVRSU NRVR", "MXQLQY TLTY OQVQ OTVT", "H\\NRMQLRMSNR VRWQXRWSVR", "I[KRYR", "H\\RUJPRTZPRU", "CaGO]OXI L[GU]U", "D`F^^^^FFFF^", "H\\IR[R", "H\\IR[R IQ[Q", "E_IM[M IR[R IW[W K[YI", "H\\LBL[ RBR[ XBX[", "I[RFJ[ RFZ[ MTWT", "H[LFL[ LFYF LPTP L[Y[", "HZLFL[ LFYF LPTP", "G]KFK[ YFY[ KPYP", "NVRFR[", "JZVFVVUYTZR[P[NZMYLVLT", "G\\KFK[ YFKT POY[", "HYLFL[ L[X[", "F^JFJ[ JFR[ ZFR[ ZFZ[", "G]KFK[ KFY[ YFY[", "G\\KFK[ KFTFWGXHYJYMXOWPTQKQ", "JZRFR[ KFYF", "G]KFKULXNZQ[S[VZXXYUYF", "I[JFR[ ZFR[", "F^HFM[ RFM[ RFW[ \\FW[", "H\\KFY[ YFK[", "I[JFRPR[ ZFRP", "H\\YFK[ KFYF K[Y[", "HYLFL[ LFXF", "I[RFJ[ RFZ[ J[Z[", "I[RFJ[ RFZ[", "I[KFYF OPUP K[Y[", "G]KFK[ YFY[ KFYF", "I[KFRPK[ KFYF K[Y[", "H\\KFY[ K[YF", "I[JFR[ ZFR[ JFZF", "G]IL[b", "E_RJIZ RJ[Z", "I[J[Z[", "I[J[Z[ZZJZJ[", "MYWFUFSGRJR[ OMVM", "I\\MFM[ MQPNRMUMWNXQX[", "NVQFRGSFREQF RMR[", "MWRFSGTFSERF SMS^RaPbNb", "IZMFM[ WMMW QSX[", "I\\MMM[ MQPNRMUMWNXQX[", "KXOMO[ OSPPRNTMWM", "MYRFRWSZU[W[ OMVM", "I\\MMMWNZP[S[UZXW XMX[", "JZLMR[ XMR[", "G]JMN[ RMN[ RMV[ ZMV[", "J[MMX[ XMM[", "JZLMR[ XMR[P_NaLbKb", "J[XMM[ MMXM M[X[", "LWRMPTOXOZP[R[TYUW", "JZKFMFOGPHX[ RML[", "I[LMOMNSMXL[ YMXPWRUURXOZL[", "G]PML[ UMVSWXX[ IPKNNM[M", "H\\SMP[ JPLNOMZM", "I[KMMMOOU`WbYb ZMYOWRM]K`Jb", "MXTTTSSRQROSNTMVMXNZP[S[VYXV", "F^ZIJRZ[", "F^JIZRJ[", "KYOBOb OBVB ObVb", "KYUBUb NBUB NbUb", "H\\NJPISFS[", "H\\UFKTZT UFU[", "H\\YFO[ KFYF", "MWRYQZR[SZRY", "MWSZR[QZRYSZS\\R^Q_", "MWRMQNROSNRM RYQZR[SZRY", "MWRMQNROSNRM SZR[QZRYSZS\\R^Q_", "MWRFRT RYQZR[SZRY", "NVRFRM", "JZNFNM VFVM", "KYQFOGNINKOMQNSNUMVKVIUGSFQF", "G][BIb", "KYVBTDRGPKOPOTPYR]T`Vb", "KYNBPDRGTKUPUTTYR]P`Nb", "NVRBRb", "E_IR[R", "E_RIR[ IR[R", "E_IO[O IU[U", "G]KKYY YKKY", "JZRLRX MOWU WOMU", "MWRQQRRSSRRQ", "MWSFRGQIQKRLSKRJ", "MWRHQGRFSGSIRKQL", "E_UMXP[RXTUW IR[R", "G]OFOb UFUb JQZQ JWZW", "KYOBO[ UBU[", "F^RBR[ I[[[", "F^[BI[[[", "NVPOTU TOPU NRVR", "LRLFLRRRLF LIPQ LLOR LOMQ", "MWRKQMOPMR RKSMUPWR", "MWWRWQVOUNSMQMONNOMQMR", "G]]R]P\\MZJWHTGPGMHJJHMGPGR", "MWMRMSNUOVQWSWUVVUWSWR", "LXLPNRQSSSVRXP", "RURUTTURTPRO", "RVRRUPVNVLUKTK", "NRRROPNNNLOKPK", ">f>RfR", "D`D``D", "RRR>Rf", "D`DD``", "D`DR`R", "F^FY^K", "KYK^YF", "KYKFY^", "F^FK^Y", "KYKRYR", "MWMWWM", "MWMMWW", "D`DOGQKSPTTTYS]Q`O", "PUUDSGQKPPPTQYS]U`", "OTODQGSKTPTTSYQ]O`", "D`DUGSKQPPTPYQ]S`U", "KYRJYNKVRZ", "JZJRNKVYZR", "KYKVKNYVYN", "JZLXJPZTXL", "D`DRJR ORUR ZR`R", "D`DUDO`O`U", "JZRDJR RDZR", "D`DR`R JYZY P`T`", "D`DR`R DRRb `RRb", "LXLLLXXXXLLL", "KYRJKVYVRJ", "LXRHLRR\\XRRH", "JZRIPOJOOSMYRUWYUSZOTORI", "KYRKRY KRYR", "MWMMWW WMMW", "MWRLRX MOWU WOMU", "MWRLRX OOUO MUOWQXSXUWWU", "LXRLRX LQMOWOXQ PWTW", "KYMNWX WNMX OLLOKQ ULXOYQ", "G[MJSV KPSL G\\[\\[RG\\", "LXPLPPLPLTPTPXTXTTXTXPTPTLPL", "KYRJKVYVRJ RZYNKNRZ", "I[IPKR LKNP RGRO XKVP [PYR", "QSRQQRRSSRRQ", "PTQPPQPSQTSTTSTQSPQP", "NVQNOONQNSOUQVSVUUVSVQUOSNQN", "NWRKRX SKSX PKUK PXUX", "KXOKOX PKPX MKRK MXWXWTVX", "KZRKRX SKSX NKMOMKXKXOWK PXUX", "KYMKRX NKRU WKRX KKPK TKYK", "LYVKNX WKOX OKNONKWK NXWXWTVX", "KXOKOX PKPX MKWKWOVK MXRX", "KYRKLX RMWX RKXX MWVW LXXX", "KYRKMX RNVX RKWX KXPX TXYX", "NWTKPX UKQX RKWK NXSX", "KXQKMX RKNX OKTK KXUXVUTX", "KZTKPX UKQX PKNNOKZKYNYK NXSX", "KYOKPX PKQV YKPX MKRK VK[K", "LYXKLX YKMX QKONPKYK LXUXVUTX", "KZMHX\\", "JZRMLW RMXW", "NWRKRX SKSX PKSK PXUX", "LWPKPVRXTXUWUV QKQVRX NOTO", "KYNORX OORV VORX LOQO TOXO", "LXUONX VOOX OONQNOVO NXVXVVUX", "NWROPVPWQXSXUWVU SOQVQWRX", "LXLKNKPLWX NKOLVX RPMX RPNX", "KZSPQX SPRX MQOOXO MQOPXP", "NWRORX SOSX POSO PXUX", "LYPNSKSX RLRX OXVX", "LYSMSX TKTX TKMTXT QXVX", "NVRVQWRXSWRV", "NVSWRXQWRVSWSYQ[", "NVROQPRQSPRO RVQWRXSWRV", "NVROQPRQSPRO SWRXQWRVSWSYQ[", "NVRKQLRSSLRK RLRO RVQWRXSWRV", "OVRKRP SKRP", "LXOKOP PKOP UKUP VKUP", "MWQKPLPNQOSOTNTLSKQK", "MWRJRP OKUO UKOO", "KZXHM\\", "MWPHP\\ QHQ\\ PHUH P\\U\\", "MWSHS\\ THT\\ OHTH O\\T\\", "MWTHPRT\\", "MWPHTRP\\", "OURHR\\", "MWPHP\\ THT\\", "I[LRXR", "I[RLRX LRXR", "JZRMRX MRWR MXWX", "JZRMRX MMWM MRWR", "JZMMWW WMMW", "NVRQQRRSSRRQ", "I[RLQMRNSMRL LRXR RVQWRXSWRV", "I[LPXP LTXT", "I[WLMX LPXP LTXT", "I[LNXN LRXR LVXV", "JZWLMRWX", "JZMLWRMX", "JZWKMOWS MTWT MXWX", "JZMKWOMS MTWT MXWX", "JZMSRPWS MSRQWS", "NVSKPO SKTLPO", "NVQKTO QKPLTO", "LXNKOMQNSNUMVK NKONQOSOUNVK", "NVSLRMQLRKSLSNQP", "NVSKQMQORPSORNQO", "NVQLRMSLRKQLQNSP", "NVQKSMSORPQORNSO", "JZWMQMONNOMQMSNUOVQWWW", "JZMMMSNUOVQWSWUVVUWSWM", "JZMMSMUNVOWQWSVUUVSWMW", "JZMWMQNOONQMSMUNVOWQWW", "JZWMQMONNOMQMSNUOVQWWW MRUR", "I[TOUPXRUTTU UPWRUT LRWR", "MWRMRX OPPORLTOUP PORMTO", "I[POOPLROTPU OPMROT MRXR", "MWRLRW OTPURXTUUT PURWTU", "JZLKRX MKRV XKRX LKXK NLWL", "G[IOLORW KORX [FRX", "KYPKP[ TKT[ MQWQ MUWU", "LYVKVX NKVK QQVQ NXVX", "KYPMTW TMPW MPWT WPMT", "KYOBOb PBPb OBVB ObVb", "KYTBTb UBUb NBUB NbUb", "AXCRGRR` GSRa FSRb X:Rb", "MXRFR[ SFS[ OFVF O[V[", "I[NFN[ OFO[ KFRF K[Z[ZUY[", "I\\RFR[ SFS[ LFKLKFZFZLYF O[V[", "H\\KFR[ LFRX YFR[ IFOF UF[F", "H\\XFK[ YFL[ LFKLKFYF K[Y[YUX[", "I[NFN[ OFO[ KFZFZLYF K[R[", "H\\RFJ[ RFZ[ RIY[ KZYZ J[Z[", "H\\RFK[ RFY[ RIX[ I[O[ U[[[", "LYUFO[ VFP[ RFYF L[S[", "H\\QFK[ RFL[ NFUF H[W[YUV[", "H]UFO[ VFP[ OFLLNF]F\\L\\F L[S[", "H\\NFO[ OFPY \\FO[ LFRF XF^F", "G][FH[ \\FI[ OFLLNF\\F H[V[XUU[", "G]IB[b", "F^RJIZ RJ[Z", "MXRFR[ SFS[ OFSF O[V[", "I[LMR[ MMRY XMR[ JMPM TMZM", "I[WML[ XMM[ MMLQLMXM L[X[XWW[", "LXRMPTOXOZP[S[UYVW SMQTPXPZQ[", "H\\SNP[ SNQ[ JPLNOMZM JPLOONZN", "MXRMR[ SMS[ OMSM O[V[", "H\\NJPISFS[ RGR[ N[W[", "H\\THT[ UFU[ UFJUZU Q[X[", "MWR[QZRYSZS\\R^Q_", "MWRMQNROSNRM R[QZRYSZS\\R^Q_", "MWRFQHRTSHRF RHRN RYQZR[SZRY", "NVRFQM SFQM", "JZNFMM OFMM VFUM WFUM", "JZRFRR MIWO WIMO", "KYUBNRUb", "KYOBVROb", "KYOBOb UBUbbDMIMRY HNR[ b:R[", "I\\XFX[ KFXF PPXP K[X[", "H\\OKUY UKOY KOYU YOKU", "I[KYYK QLULYKXOXS ULXLXO", "I[YKKY LQLUKYOXSX LULXOX", "I[YYKK SLOLKKLOLS OLLLLO", "I[KKYY QXUXYYXUXQ UXXXXU", "NVQQQSSSSQQQ QQSS SQQS", "I[M+MRMy N+NRNy M+X+ MyXy", "I[V+VRVy W+WRWy L+W+ LyWy", "7Z:RARRo @RQo ?RRr Z\"VJRr", "NWRFR[S[ RFSFS[", "IZMFM[ MFNFNZ NZYZY[ M[Y[", "J[RGR[ SGS[R[ LFYFYG LFLGYG", "H\\JFR[ JFKFRX ZFYFRX ZFR[", "H\\KFX[Y[ KFLFY[ YFXFK[ YFL[K[", "MXRFR[S[ RFSFS[ OMVMVN OMONVN", "JZLMR[ LMMMRY XMWMRY XMR[", "I[LMW[X[ LMMMX[ XMWML[ XMM[L[", "H\\NJPISFS[ NJNKPJRHR[S[", "H\\KFYFO[ KFKGXG XFN[O[", "G^[BIbJb [B\\BJb", "F_JQ[Q[R JQJR[R", "F_RIRZSZ RISISZ JQ[Q[R JQJR[R", "F_JM[M[N JMJN[N JU[U[V JUJV[V", "NWSFRGRM SGRM SFTGRM", "F^ZIJRZ[ ZIZJLRZZZ[", "F^JIZRJ[ JIJJXRJZJ[", "H]TJO[ VFP[ VFSIPKNL UIQKNL", "H]XGR[ YFS[ YFJUZU", "MXPYOZP[QZPY", "MXP[OZPYQZQ[P]N_", "MXSMRNSOTNSM PYOZP[QZ", "MXSMRNSOTNSM P[OZPYQZQ[P]N_", "MXVFTHSJSKTLUKTJ", "MXUHTGUFVGVHUJSL", "G]_BEb", "J[TFTR OIYO YIOO", "NWUFSM VFSM", "I[PFNM QFNM YFWM ZFWM", "KZSFQGPIPKQMSNUNWMXKXIWGUFSF", "H]SFLb YFRb LQZQ KWYW", "HZMMM[ NMN[ JMXMXRWM J[Q[", "I\\RMR[ SMS[ MMLRLMYMYRXM O[V[", "H]WJR[T[ ZFXJS[ ZFT[ ZFJUZU", "G^_BEbFb _B`BFb", "MWUFTGRM UGRM UFVGRM", "IPP:(ipp_moments(mat, m))", "count >= 0", "src.channels() == 1", "Unsupported data type (=%d)", "image.type() == CV_8UC1", "NULL storage pointer", "GAUSSIAN", "IDENTITY", "SIGMOID_SYM", "activation_function", "activation_function_id", "f_param1", "f_param2", "min_val", "max_val", "min_val1", "max_val1", "training_params", "train_method", "BACKPROP", "dw_scale", "moment_scale", "RPROP", "dw_plus", "dw_minus", "dw_min", "dw_max", "term_criteria", "epsilon", "n == 1", "layer_sizes", "input_scale", "output_scale", "inv_output_scale", "weights", "vector::_M_range_check", "n >= 0", "impl != 0", "ridx1 > ridx0", "nvars == (int)rowvals.size()", "Unknown kernel type", "SVM::getDefaultGrid", "C_SVC", "NU_SVC", "ONE_CLASS", "EPS_SVR", "NU_SVR", "Uknown_%d", "LINEAR", "POLY", "SIGMOID", "CHI2", "INTER", "Unknown_%d", "degree", "gamma", "coef0", "var_count", "class_count", "class_labels", "class_weights", "sv_total", "support_vectors", "uncompressed_sv_total", "uncompressed_support_vectors", "decision_functions", "index", "sv_count == sv_total", "the class is not SVMImpl", "Custom kernel is not set", "svm_type", "svmType", "kernel", "SVM kernel tag is not found", "Missing or invalid SVM type", "sv_count", "alpha", "optimize_linear", "select_working_set_func != 0", "calc_rho_func != 0", "get_row_func != 0", "_samples.type() == CV_32F", "sv_count != 0", "sv_tab[df_index[i]] > 0", "k_fold >= 2", "samples.type() == CV_32F", "norm", "mini_batch_size", "learnt_thetas", "o_labels", "n_labels", "ntrees", "nodes", "RealAdaboost", "DiscreteAdaboost", "LogitBoost", "Unknown", "GentleAdaboost", "boosting_type", "weight_trimming_rate", "svmsgdType", "ASGD", "marginType", "SOFT_MARGIN", "HARD_MARGIN", "marginRegularization", "initialStepSize", "stepDecreasingPower", "shift", "unknown_%d", "means", "probs", "!covsEigenValues.empty()", "!means.empty()", "!covs.empty()", "meansFlt.type() == CV_32FC1", "weights.empty()", "invCovsEigenValues.empty()", "nclusters", "cov_mat_type", "spherical", "diagonal", "generic", "covs", "var_all", "var_idx", "cls_labels", "productsum", "inv_eigen_values", "cov_rotate_mats", "is_classifier", "default_k", "samples", "responses", "opencv_ml_knn", "opencv_ml_knn_kd", "not_in", "!roots.empty()", "value", "norm_class_idx", "splits", "quality", "sample.type() == CV_32F", "use_surrogates", "max_categories", "regression_accuracy", "max_depth", "min_sample_count", "cross_validation_folds", "use_1se_rule", "priors", "var_type", "format", "cat_map", "cat_count", "vector::_M_range_insert", "cat_ofs", "missing_subst", "global_var_idx", "oob_error", "var_importance", "nactive_vars", "stages", "stage_threshold", "feature", "tilted", "rects", "threshold", "left_val", "left_node", "right_val", "right_node", "opencv-haar-classifier", "stage %d", "parent", "next", "tree %d", "node %d", "Invalid stage %d", "%d%n", "%d%d%d%d%d%f%n", "%99s%n", "%f%d%d%n", "%f%n", "%d%d%n", "!cascade.data.stumps.empty()", "stageType", "BOOST", "featureType", "HAAR", "featureParams", "maxCatCount", "weakClassifiers", "leafValues", "internalNodes", "stageThreshold", "features", "file not exist", "version?", "V6.01", "version doesnot match", "winSize", "blockSize", "blockStride", "cellSize", "nbins", "derivAperture", "winSigma", "histogramNormType", "L2HysThreshold", "gammaCorrection", "nlevels", "signedGradient", "SVMDetector", "opencv-object-detector-hog", "OBJECT_DETECTOR", "bias", "saturation", "scale", "intensity", "light_adapt", "color_adapt", "contrast", "sigma_color", "sigma_space", "contrast_weight", "saturation_weight", "exposure_weight", "images[0].depth() == CV_8U", "max_bits", "exclude_range", "max_iter", "lambda", "random", "srcImgs.size() > 0", "history", "nsamples", "nKNN", "dist2Threshold", "detectShadows", "shadowValue", "shadowThreshold", "nmixtures", "backgroundRatio", "varThreshold", "varThresholdGen", "varInit", "varMin", "varMax", "complexityReductionThreshold", "status != NULL", "cn == 1 || cn == 3 || cn == 4", "function.proto", "CHECK failed: file != NULL: ", "MapKey::GetStringValue", " type does not match\n", "  Expected : ", "  Actual   : ", "Should never be called.", "tensorflow.OpDef.ArgDef.name", "tensorflow.OpDef.name", "tensorflow.OpDef.summary", "tensorflow.OpDef.description", "tensorflow.OpDef.AttrDef.name", "tensorflow.OpDef.AttrDef.type", "op_def.proto", "attr_value.proto", "tensorflow.NameAttrList.name", "types.proto", "versions.proto", "tensor.proto", "graph.proto", "tensorflow.NodeDef.name", "tensorflow.NodeDef.op", "tensorflow.NodeDef.input", "tensorflow.NodeDef.device", "tensor_shape.proto", "caffe.proto", "constant", "warp", "_param", "Can't find output blob \"", "accuracy", "bnll", "concat", "conv", "dropout", "euclidean_loss", "flatten", "hdf5_data", "hdf5_output", "im2col", "images", "infogain_loss", "innerproduct", "multinomial_logistic_loss", "pool", "relu", "sigmoid", "softmax", "softmax_loss", "split", "tanh", "window_data", "FATAL", "Unknown layer name: ", "BatchNorm", "AbsVal", "Accuracy", "ArgMax", "BNLL", "Concat", "ContrastiveLoss", "Convolution", "Deconvolution", "Data", "Dropout", "DummyData", "EuclideanLoss", "Eltwise", "Flatten", "HDF5Data", "HDF5Output", "HingeLoss", "Im2col", "ImageData", "InfogainLoss", "InnerProduct", "MemoryData", "MultinomialLogisticLoss", "Pooling", "Power", "ReLU", "Sigmoid", "SigmoidCrossEntropyLoss", "Silence", "Softmax", "SoftmaxWithLoss", "Split", "Slice", "TanH", "WindowData", "Threshold", "CHECK", "fs.is_open()", "Can't open \"", "Unknown blob_share_mode: ", "ERROR", "Upgrade of input layer ", " failed.", "Unknown pool method ", "padding", "Unknown blob input ", " to layer ", "source_layer.bottom_size()=1", "source_layer.top_size()=1", "V0LayerParameter: ", "INFO", "V0LayerParameter", "transformation parameters: ", "V1LayerParameter: ", "V1LayerParameter", "params: ", "params.", "Input layer not found: ", "size == (int)dstBlob.total()", "CHECK failed: it != end(): ", "Const kernel input not found", "Unsupported kernel input", "map::at", "ksize", "Unsupported ksize", "strides", "Unsupported strides", "Identity", "Const", "Conv2D", "bias_term", "BiasAdd", "dims == 4", "kernel_h", "kernel_w", "num_output", "Shift", "layer.input_size() == 2", "Reshape", "reorder_dims", "beta", "depth_radius", "local_size", "norm_by_size", "ConcatV2", "axis", "AvgPool", "Placeholder", "slice_point", "prod", "Expected NHWC data format", "padding_dim", "Padding", "FusedBatchNorm", "has_weight", "has_bias", "Tanh", "Relu", "dtype", "transpose_a", "transpose_b", " ... ", " more", "Tensor type is not supported", "MatMul", "MaxPool", "operation", "fracpart == 0.0", "isInt() || isReal()", "isReal() || isInt()", "isString()", "Double", "Float", "Cuda", "Byte", "Char", "Short", "Long", "Unknown type \"", "\" of torch class \"", "file && THFile_isOpened(file)", "torch.", "Storage", "stride_h", "stride_w", "padH", "pad_h", "padW", "pad_w", "Sequential", "dimension", "torchSplit", "torchMerge", "Parallel", "inputDimension", "outputDimension", "num_axes", "torchReshape", "ConcatTable", "JoinTable", "CAddTable", "torchCAddTable", "SpatialMaxUnpooling", "indices_blob_id", "pool_k_h", "pool_k_w", "pool_stride_h", "pool_stride_w", "pool_pad_h", "pool_pad_w", "torchMaxUnpooling", "MaxUnpool", "poolingLayer.first != -1", "Unexpected torch container: ", "Tensor", "cunn.", "cudnn.", "fbcunn.", "torch_index", "weight", "tensorParams.count(\"weight\")", "nOutputPlane", "SpatialMaxPooling", "SpatialAveragePooling", "indices", "scalarParams.has(\"size\")", "batchMode", "SpatialBatchNormalization", "running_var", "running_mean", "scalarParams.has(\"eps\")", "PReLU", "ChannelsPReLU", "negative_slope", "SpatialDropout", "scalarParams.has(\"p\")", "scale > 0", "nInputDim", "input_dims", "SpatialDilatedConvolution", "dilationW", "dilation_w", "dilationH", "dilation_h", "SpatialFullConvolution", "adjW", "adj_w", "adjH", "adj_h", "weights.dims == 4", "tensorParams.count(\"indices\")", "SoftMax", "LogSoftMax", "log_softmax", "Unknown nn class \"", "Unsupported Torch class \"", "SpatialConvolution", "Linear", "importer->tensors.size() == 1", "rootModule == NULL", "unable to seek at end of file", "unable to seek at position %d", "%d\n\r", "can not allocate buffer", "error: cannot disable buffer", "cannot open <%s> in mode %c%c", "image0.dims == 2", "image.depth() == CV_32F", "nch == 1", "image.dims == 2 && (nch == 1)", "image.size() == image0.size()", "\" not found", "Can't create layer \"", "\" of type \"", "\" already was registered", "Added layer name \"", "\" must not contain dot symbol", "Layer \"", "\" already into net", "of layer \"", "\" already was connected", "inputs.size()", "layer != impl->layers.end()", "Requested blob \"", "haveHalide()", "Unknown backend identifier", "\" produce only ", " outputs, the #", " was requsted", "refIt != refCounter.end()", "mapIt != reuseMap.end()", "refIt->second > 0", "it != layers.end()", "inShapes.size() == ids.size()", "scheduler", "targetId", "backendId", "ACROSS_CHANNELS", "WITHIN_CHANNEL", " parameter.", "variance", "min_size", "flip", "clip", "aspect_ratio", "step_h", "step_w", "step", "PriorBox", "stochastic", "across_spatial", "channel_shared", "NormalizeBBox", "VALID", "SAME", "kernel_size", "stride", "dilation", "num_classes", "share_location", "background_label_id", "variance_encoded_in_target", "keep_top_k", "confidence_threshold", "top_k", "corner", "center_size", "nms_threshold", "DetectionOutput", "count == numKept", "Inner function failed.", "Destination image must be 8u", "P%c\n%d %d\n%d\n", "% 4d", "% 6d", "WIDTH %d\n", "HEIGHT %d\n", "DEPTH %d\n", "MAXVAL %d\n", "TUPLTYPE %s\n", "1.6.24", "RGBE", "GAMMA=%g\n", "EXPOSURE=%g\n", "FORMAT=32-bit_rle_rgbe\n\n", "-Y %d +X %d\n", "#?%s\n", "FORMAT=32-bit_rle_rgbe\n", "GAMMA=%g", "missing FORMAT specifier", "-Y %d +X %d", "missing image size specifier", "EXPOSURE=%g", "wrong scanline width", "bad scanline data", "OPENCV_VIDEOCAPTURE_DEBUG", "VIDEOIO(%s): trying ...\n", "VIDEOIO(%s): result=%p ...\n", ".avi", ".AVI", ".Avi", "%c%c%c%c", "cvNamedWindow", "cvDestroyWindow", "cvDestroyAllWindows", "cvShowImage", "cvResizeWindow", "cvMoveWindow", "cvCreateTrackbar", "cvCreateTrackbar2", "cvSetMouseCallback", "cvGetTrackbarPos", "cvSetTrackbarPos", "cvSetTrackbarMax", "cvSetTrackbarMin", "cvGetWindowHandle", "cvGetWindowName", "cvWaitKey", "OPENCV_LEGACY_WAITKEY", "cvInitSystem", "cvStartWindowThread", "cvAddText", "cvDisplayStatusBar", "cvStartLoop", "cvStopLoop", "cvSaveWindowParameters", "cvCreateButton", "extended", "upright", "octaves", "sublevels", "diffusivity", "descriptor", "descriptor_channels", "descriptor_size", "evolution_.size() > 0", "indexParams", "ip.type() == FileNode::SEQ", "searchParams", "sp.type() == FileNode::SEQ", "masks.size() == imageCount", "typename", "FlannBased", "BruteForce", "BruteForce-SL2", "BruteForce-L1", "BruteForce-Hamming", "BruteForce-HammingLUT", "BruteForce-Hamming(2)", "imageCount > 0", "dim > 0", "thresholdStep", "minThreshold", "maxThreshold", "minRepeatability", "minDistBetweenBlobs", "filterByColor", "blobColor", "filterByArea", "minArea", "maxArea", "filterByCircularity", "minCircularity", "maxCircularity", "filterByInertia", "minInertiaRatio", "maxInertiaRatio", "filterByConvexity", "minConvexity", "maxConvexity", "A->cols == B->rows", "cols >= 0", "Q.size() == Size(4,4)", "minDisparity", "numDisparities", "speckleWindowSize", "speckleRange", "disp12MaxDiff", "preFilterType", "preFilterSize", "preFilterCap", "textureThreshold", "uniquenessRatio", "StereoMatcher.BM", "!corners.empty()", "!centers.empty()", "samples is empty", "filteredSamples is empty", "Unknown pattern type", "centers.type() == CV_32FC1", "Basis size is not 2", "degenerate basis", "D.empty() || (D.total() == 4)", "mode", "StereoMatcher.SGBM", "nRads", "nAngs", "iters", "beWei", "scWei", "iaWei", "costF", "sigma", "regularization", "distance", "rank", "affine_type", "dummies", "default", "flag", "scale_ > 1", "iterations_ > 0", "tau_ > 0.0", "alpha_ > 0.0", "btvKernelSize_ > 0", "blurKernelSize_ > 0", "blurSigma_ >= 0.0", "m >= 1", "graph matches_graph{\n", "\" -- \"", "[label=\"Nm=", ", Ni=", ", C=", "\"];\n", "weight.type() == CV_16SC1", "mask.type() == CV_8U", "imgs.size() == imgs_.size()", "states_[comp] & INTERS", "seam.front() == p1", "seam.back() == p2", "states_[comp1] & INTERS", "\nprocessing time: %.3f sec\n", "processing frames", "estimated trim ratio: %f\n", "Detailed description: %s\n", "TBB Warning: %s\n", "%s: %s", "Step must be positive", "Index is not allocated", "Resource deadlock would occur", "Operation not permitted", "Invalid hash load factor", "invalid key", "Illegal tagged_msg cast", "TBB: %s\t%s\n", "Unidentified exception", "BlockingTSI!=tsi_ptr", "private", "shared", "!my_scheduler", "!thread_stack_size", "scalable_malloc", "malloc", "libtbbmalloc.so", "ALLOCATOR", "scalable_free", "scalable_aligned_malloc", "scalable_aligned_free", "TBB_VERSION", "Tools support", "__RML_open_factory", "__TBB_make_rml_server", "__RML_close_factory", "libirml.so.1", "%u-%u", "thread_monitor %s in %s\n", "pthread_join", "pthread_detach", "pthread_attr_init", "pthread_attr_setstack_size", "pthread_create", "pthread_attr_destroy", "CHECK failed: false: ", "Can't ", "parse", " message of type \"", "%d.%d.%d", "%lld", "%llu", "pthread_mutex_unlock: ", "pthread_mutex_lock: ", "CANCELLED", "UNKNOWN", "INVALID_ARGUMENT", "DEADLINE_EXCEEDED", "NOT_FOUND", "ALREADY_EXISTS", "PERMISSION_DENIED", "UNAUTHENTICATED", "RESOURCE_EXHAUSTED", "FAILED_PRECONDITION", "ABORTED", "OUT_OF_RANGE", "UNIMPLEMENTED", "INTERNAL", "UNAVAILABLE", "DATA_LOSS", "parsing", "serializing", " '%s'", "String field", " contains invalid ", "UTF-8 data when ", " a protocol ", "bytes. ", "proto2", "proto3", "can't reach here.", " -> ", "uninterpreted_option", "CHECK failed: field != NULL: ", "$0// $1\n", "Entry", "No default value", "\" is not defined.", "\" seems to be defined in \"", "\", which is not imported by \"", "\" is resolved to \"", "Missing name.", "\" is not a valid identifier.", "Import \"", "\" was listed twice.", "Option \"", "\" was already set.", "\" has not been loaded.", "FileOptions", "MessageOptions", "FieldOptions", "EnumOptions", "EnumValueOptions", "ServiceOptions", "MethodOptions", "google.protobuf.", "proto", "Enum type \"", "google.protobuf.FileOptions", "google.protobuf.FieldOptions", "google.protobuf.EnumOptions", "google.protobuf.MethodOptions", "google.protobuf.StreamOptions", "Import ", " but not used.", "\" is already defined.", "\" is already defined in \"", "UNKNOWN_ENUM_VALUE_%s_%d", "$0option $1;\n", "stream ", " {\n$0$1}\n", "service $0 {\n", "$0$1 = $2", " [$0]", "$0enum $1 {\n", "$0}\n", "$0message $1", "$0  extensions $1 to $2;\n", "$0  }\n", "$0  extend .$1 {\n", "$0  reserved ", "$0, ", "$0 to $1, ", "\"$0\", ", "map<$0, $1>", "$0$1$2 $3 = $4", " [default = $0", "json_name = \"", " { ... };\n", "extend .$0 {\n", "$0 oneof $1 {", " ... }\n", "Expanded map entry type ", "the global scope", "\" must be unique within ", ", not just within \"", "-inf", ".dummy", "syntax = \"$0\";\n\n", "package $0;\n\n", "import public \"$0\";\n", "import weak \"$0\";\n", "import \"$0\";\n", "Field name \"$0\" is reserved.", "\" conflicts with field \"", "\". This is not ", "allowed in proto3.", "\" which is.", "CHECK failed: builder_: ", ".foo = value\".", "\" has no value named \"", "\" for option \"", "Option must have a name.", "\" is resolved to \"(", "\" unknown.", "Option field \"", "Unrecognized syntax: ", "basic_string::erase", ".placeholder.proto", "PLACEHOLDER_VALUE", ".PLACEHOLDER_VALUE", "\" is not a message type.", "\" is not a type.", "\" is not an enum type.", "google.protobuf.Empty", "optional", "required", "repeated", "int64", "uint32", "enum", "message", "fixed64", "fixed32", "group", "bytes", "sfixed32", "sfixed64", "sint32", "sint64", "Symbol name \"", "Invalid symbol name: ", "Can't get here.", "\n  Message type: ", "\n  Field       : ", "\n  Problem     : ", "\n    Actual    : ", "\n    Field type: ", "\"MutableRawRepeatedField\"", "MutableRawRepeatedField", "subtype mismatch", "wrong submessage type", "\"GetRawRepeatedField\"", "GetRawRepeatedField", "type or int32).", "SetRepeatedString", "AddString", "SetRepeatedUInt32", "SetRepeatedBool", "SetRepeatedFloat", "SetRepeatedInt64", "SetRepeatedUInt64", "SetRepeatedDouble", "Field is not a map field.", "\"GetMapData\"", "\"DeleteMapValue\"", "SetRepeatedInt32", "\"InsertOrLookupMapValue\"", "GetMessage", "GetRepeatedUInt32", "GetRepeatedFloat", "GetRepeatedBool", "GetRepeatedStringReference", "GetRepeatedInt64", "GetRepeatedUInt64", "GetRepeatedDouble", "MutableMessage", "GetRepeatedString", "GetStringReference", "GetBool", "GetFloat", "GetUInt32", "GetUInt64", "GetDouble", "GetInt64", "MutableRepeatedMessage", "SetFloat", "SetUInt32", "SetBool", "SetUInt64", "SetInt64", "SetDouble", "GetString", "\"MapSize\"", "GetRepeatedEnumValue", "GetRepeatedInt32", "\"LookupMapValue\"", "RemoveLast", "Swap", "GetInt32", "GetEnumValue", "SetInt32", "\"MapBegin\"", "\"MapEnd\"", "SetEnum", "SetEnumValue", " unexpected for field ", "SetRepeatedEnum", "value ", "SetAllocatedMessage", "ReleaseMessage", "SetString", "GetRepeatedMessage", "FieldSize", "AddMessage", "HasField", "ClearField", "Unimplemented type: ", "AddEnum", "AddInt32", "AddUInt32", "AddUInt64", "AddInt64", "AddFloat", "AddDouble", "ReleaseLast", "AddBool", "AddAllocatedMessage", "INVALID_CPPTYPE", "CPPTYPE_INT32", "CPPTYPE_INT64", "CPPTYPE_UINT32", "CPPTYPE_UINT64", "CPPTYPE_DOUBLE", "CPPTYPE_FLOAT", "CPPTYPE_BOOL", "CPPTYPE_ENUM", "CPPTYPE_STRING", "CPPTYPE_MESSAGE", "%.1f", "CHECK failed: (size) <= (6): ", "Unexpected end of string.", "  Comment started here.", "\\U%08x", "Unsupported", "Unsupported: type mismatch", "MapValueRef::GetMessageValue", "MapKey::GetInt64Value", "MapKey::GetInt32Value", "MapKey::GetUInt64Value", "MapKey::GetUInt32Value", "MapKey::GetBoolValue", "MapValueRef::GetStringValue", "MapValueRef::GetInt64Value", "MapValueRef::GetInt32Value", "MapValueRef::GetUInt64Value", "MapValueRef::GetUInt32Value", "MapValueRef::GetBoolValue", "MapValueRef::GetDoubleValue", "MapValueRef::GetFloatValue", "MapValueRef::GetEnumValue", "Unimplemented EnumValue API.", "Not implemented.", "Message class \"", ", from: ", "Should not reach here.", "Message of type \"", "File is already registered: ", "Type is already registered: ", "registered: ", "(merge ", " to ", "\", but only ", "Warning parsing text-format ", "Error parsing text-format ", "Field: ", "Invalid key for map field.", ": 0x", "Expected identifier, got: ", "\", found \"", "Expected \"", "Integer out of range (", "infinity", "Expected double, got: ", "Expected integer, got: ", "Invalid float number: ", "Expected string, got: ", "\". Value: \"", "\" for field \"", "CHECK failed: trees: ", "Could not find type \"", "Value of type \"", "Extension \"", "Message type \"", "\" has no field named \"", "Field \"", "\", another member of oneof \"", "Non-repeated field \"", "Proto type ", " not found", ": failed to parse contents", "...<truncated>...", "Extension not found.", "\", field number ", "StringOutputStream.", "'callback' must not be NULL", "AuthenticAMD", "CHECK failed: dest: ", "\\x%02x", "\\%03o", "CHECK failed: i >= 0: ", "0123456789abcdef", "%.*g", "CHECK failed: value != NULL: ", "NULL output boolean given.", "CHECK failed: s != NULL: ", "Logic problem? szsrc = ", "INTEL_LIBITTNOTIFY32", "/data/local/tmp/", "%s%s", "/proc/%d/cmdline", "/data/data/%s/%s", "pthread_mutexattr_init", "pthread_mutexattr_settype", "pthread_mutex_init", "pthread_mutexattr_destroy", "__itt_api_fini", "KMP_FOR_TPROFILE", "INTEL_ITTNOTIFY_GROUPS", "libittnotify.so", "__itt_api_init", "__itt_api_version", "__itt_domain_create", "__itt_string_handle_create", "__itt_counter_create", "__itt_counter_create_typed", "__itt_pause", "__itt_resume", "__itt_thread_set_name", "__itt_thread_ignore", "__itt_thr_name_set", "__itt_thr_ignore", "__itt_enable_attach", "__itt_detach", "__itt_sync_create", "__itt_sync_rename", "__itt_sync_destroy", "__itt_sync_prepare", "__itt_sync_cancel", "__itt_sync_acquired", "__itt_sync_releasing", "__itt_suppress_push", "__itt_suppress_pop", "__itt_suppress_mark_range", "__itt_suppress_clear_range", "__itt_model_site_begin", "__itt_model_site_end", "__itt_model_task_begin", "__itt_model_task_end", "__itt_model_lock_acquire", "__itt_model_lock_release", "__itt_model_record_allocation", "__itt_model_induction_uses", "__itt_model_reduction_uses", "__itt_model_observe_uses", "__itt_model_clear_uses", "__itt_model_site_beginA", "__itt_model_site_beginAL", "__itt_model_task_beginA", "__itt_model_task_beginAL", "__itt_model_iteration_taskA", "__itt_model_iteration_taskAL", "__itt_model_site_end_2", "__itt_model_task_end_2", "__itt_model_lock_acquire_2", "__itt_model_lock_release_2", "__itt_model_aggregate_task", "__itt_model_disable_push", "__itt_model_disable_pop", "__itt_heap_function_create", "__itt_heap_allocate_begin", "__itt_heap_allocate_end", "__itt_heap_free_begin", "__itt_heap_free_end", "__itt_heap_reallocate_begin", "__itt_heap_reallocate_end", "__itt_heap_reset_detection", "__itt_heap_record", "__itt_id_create", "__itt_id_destroy", "__itt_get_timestamp", "__itt_region_begin", "__itt_region_end", "__itt_frame_begin_v3", "__itt_frame_end_v3", "__itt_frame_submit_v3", "__itt_task_group", "__itt_task_begin", "__itt_task_begin_fn", "__itt_task_end", "__itt_counter_inc_v3", "__itt_counter_inc_delta_v3", "__itt_counter_dec_v3", "__itt_counter_dec_delta_v3", "__itt_marker", "__itt_metadata_add", "__itt_metadata_str_add", "__itt_relation_add_to_current", "__itt_relation_add", "__itt_event_create", "__itt_event_start", "__itt_event_end", "__itt_sync_set_name", "__itt_notify_sync_name", "__itt_notify_sync_prepare", "__itt_notify_sync_cancel", "__itt_notify_sync_acquired", "__itt_notify_sync_releasing", "__itt_memory_read", "__itt_memory_write", "__itt_memory_update", "__itt_state_get", "__itt_state_set", "__itt_obj_mode_set", "__itt_thr_mode_set", "__itt_frame_create", "__itt_frame_begin", "__itt_frame_end", "__itt_counter_destroy", "__itt_counter_inc", "__itt_counter_inc_delta", "__itt_counter_dec", "__itt_counter_dec_delta", "__itt_counter_set_value", "__itt_counter_set_value_ex", "__itt_mark_create", "__itt_mark", "__itt_mark_off", "__itt_mark_global", "__itt_mark_global_off", "__itt_stack_caller_create", "__itt_stack_caller_destroy", "__itt_stack_callee_enter", "__itt_stack_callee_leave", "__itt_clock_domain_create", "__itt_clock_domain_reset", "__itt_id_create_ex", "__itt_id_destroy_ex", "__itt_task_begin_ex", "__itt_task_begin_fn_ex", "__itt_task_end_ex", "__itt_task_begin_overlapped", "__itt_task_end_overlapped", "__itt_task_end_overlapped_ex", "__itt_marker_ex", "__itt_metadata_add_with_scope", "__itt_relation_add_ex", "__itt_track_group_create", "__itt_track_create", "__itt_set_track", "__itt_av_save", "__itt_module_load", "KMP_FOR_TCHECK", "control", "thread", "mark", "sync", "fsync", "model", "counter", "frame", "stitch", "heap", "structure", "suppress", "arrays", "JPEGMEM", "%ld%c", "Bogus message code %d", "Bogus buffer control mode", "Invalid crop request", "DCT coefficient out of range", "Bogus input colorspace", "Bogus JPEG colorspace", "Bogus marker length", "Invalid memory pool code %d", "Bogus sampling factors", "Bogus virtual array access", "Suspension not allowed here", "Bogus DAC index %d", "Bogus DAC value 0x%x", "Bogus DHT index %d", "Bogus DQT index %d", "Read from EMS failed", "Write to EMS failed", "Input file read error", "Empty input file", "Premature end of input file", "Not implemented yet", "Backing store not supported", "Insufficient memory (case %d)", "Read failed on temporary file", "Seek failed on temporary file", "Read from XMS failed", "Write to XMS failed", "9  13-Jan-2013", "Define Huffman Table 0x%02x", "Define Restart Interval %u", "Freed EMS handle %u", "Obtained EMS handle %u", "End Of Image", "Unexpected marker 0x%02x", "Quantizing to %d colors", "RST%d", "Start of Image", "Start Of Scan: %d components", "    Component %d: dc=%d ac=%d", "  Ss=%d, Se=%d, Ah=%d, Al=%d", "Closed temporary file %s", "Opened temporary file %s", "Freed XMS handle %u", "Obtained XMS handle %u", "Premature end of JPEG file", "RIFF", "WEBP", "VP8X", "ALPH", "VP8 ", "VP8L", "Could not decode alpha data.", "Frame setup failed", "thread initialization failed.", "no object", "Truncated header.", "Frame not displayable.", "cannot parse picture header", "Bad code word", "bad partition length", "cannot parse segment header", "cannot parse filter header", "cannot parse partitions", "Not a key frame.", "Output aborted.", "Read Error", "Call to NULL read function", "libpng warning: %s", "undefined", "libpng error: %s", "bad longjmp: ", "read beyond end of data", "invalid memory read", "Missing IHDR before IDAT", "Missing PLTE before IDAT", "Too many IDATs found", "color-map index out of range", "bad encoding (internal error)", "invalid PNG color type", "bad adaptive filter value", "sequential row overflow", "lost rgb to gray", "unexpected compose", "lost/gained channels", "unknown interlace type", "unexpected bit depth", ".Too many IDATs found", "..Too many IDATs found", "png_image_read: out of memory", "gamma value", "png_set_background", "invalid alpha mode", "rgb to gray green coefficient", "rgb to gray red coefficient", "invalid background gamma type", "NULL row buffer", "Uninitialized row", "internal error: array alloc", "internal error: array realloc", "Out of memory", "Out of Memory", "Write Error", "Call to NULL write function", " using zstream", "1.2.3", "zstream unclaimed", "extra compressed data", "Not a PNG file", "CRC error", "out of place", "invalid", "missing IHDR", "duplicate", "ignored in grayscale PNG", "tRNS must be after", "hIST must be after", "bKGD must be after", "invalid values", "too many profiles", "out of memory", "bad keyword", "bad compression method", "truncated", "too short", "malformed sPLT chunk", "sPLT chunk has bad length", "sPLT chunk too long", "invalid with alpha channel", "invalid index", "invalid parameter count", "unrecognized equation type", "invalid data", "invalid unit", "bad width format", "non-positive width", "bad height format", "non-positive height", "no space in chunk cache", "insufficient memory", "unknown compression type", "bad compression info", "error in user chunk", "Saving unknown chunk:", "unhandled critical chunk", "invalid chunk type", "internal row logic error", "internal row width error", "Not enough image data", "Extra compressed data", "Too much image data", "inconsistent chromaticities", "profile '", " but running with ", " +0000", "Ignoring invalid time value", "unexpected zlib return code", "unexpected end of LZ stream", "missing LZ dictionary", "zlib IO error", "bad parameters to zlib", "damaged LZ stream", "unsupported zlib version", "unexpected zlib return", "length does not match profile", "invalid length", "tag count too large", "invalid rendering intent", "intent outside defined range", "invalid signature", "PCS illuminant is not D50", "unexpected ICC PCS encoding", "Image width is zero in IHDR", "Invalid image width in IHDR", "Image height is zero in IHDR", "Invalid image height in IHDR", "Invalid bit depth in IHDR", "Invalid color type in IHDR", "Unknown filter method in IHDR", "Invalid filter method in IHDR", "Invalid IHDR data", "gamma value out of range", "invalid sRGB rendering intent", "sRGB", "known incorrect sRGB profile", "fixed point overflow ignored", "invalid end points", "invalid chromaticities", "gamma table being rebuilt", "No IDATs written into file", "Unknown custom filter method", "memory image too large", "supplied row stride too small", "image row stride too large", "cHRM Blue Y", "cHRM Blue X", "cHRM Green Y", "cHRM Green X", "cHRM Red Y", "cHRM Red X", "cHRM White Y", "cHRM White X", "cHRM Blue Z", "cHRM Green Z", "cHRM Red Z", "png_set_gAMA", "Invalid pCAL equation type", "Invalid pCAL parameter count", "Invalid sCAL unit", "Invalid sCAL width", "Invalid sCAL height", "Invalid sCAL width ignored", "Invalid sCAL height ignored", "Invalid palette length", "Invalid palette", "too many text chunks", "text chunk: out of memory", "too many sPLT chunks", "png_set_sPLT: invalid sPLT", "sPLT out of memory", "too many unknown chunks", "unknown chunk: out of memory", "keyword truncated", "in use by IDAT", "deflateEnd failed (ignored)", "compressed data too long", "length exceeds PNG maximum", "Invalid filter type specified", "No profile for iCCP chunk", "ICC profile too short", "iCCP: invalid keyword", "sPLT: invalid keyword", "Invalid sBIT depth specified", "tEXt: invalid keyword", "tEXt: text too long", "zTXt: invalid keyword", "iTXt: invalid keyword", "iTXt: invalid compression", "pCAL: invalid keyword", "Tag ", "pseudo-", "_TIFFVGetField", "DotRange", "TIFFSetField", "custom tag binary object", "%s: Bad value %u for \"%s\" tag", "Error fetching directory link", "%s: Unknown %stag %u", "Directory %d does not exist", "Error writing directory link", "%s: \n", "Setting up field info failed", "_TIFFSetupFields", "TIFFFieldWithTag", "TIFFFieldWithName", "Tag %d", "ExposureTime", "FNumber", "ExposureProgram", "SpectralSensitivity", "ISOSpeedRatings", "OptoelectricConversionFactor", "ExifVersion", "DateTimeOriginal", "DateTimeDigitized", "ComponentsConfiguration", "CompressedBitsPerPixel", "ShutterSpeedValue", "ApertureValue", "BrightnessValue", "ExposureBiasValue", "MaxApertureValue", "SubjectDistance", "MeteringMode", "LightSource", "Flash", "FocalLength", "SubjectArea", "MakerNote", "UserComment", "SubSecTime", "SubSecTimeOriginal", "SubSecTimeDigitized", "FlashpixVersion", "ColorSpace", "PixelXDimension", "PixelYDimension", "RelatedSoundFile", "FlashEnergy", "SpatialFrequencyResponse", "FocalPlaneXResolution", "FocalPlaneYResolution", "FocalPlaneResolutionUnit", "SubjectLocation", "ExposureIndex", "SensingMethod", "FileSource", "SceneType", "CFAPattern", "CustomRendered", "ExposureMode", "WhiteBalance", "DigitalZoomRatio", "FocalLengthIn35mmFilm", "SceneCaptureType", "GainControl", "Contrast", "Saturation", "Sharpness", "DeviceSettingDescription", "SubjectDistanceRange", "ImageUniqueID", "SubfileType", "OldSubfileType", "ImageWidth", "ImageLength", "BitsPerSample", "Compression", "PhotometricInterpretation", "Threshholding", "CellWidth", "CellLength", "FillOrder", "DocumentName", "ImageDescription", "Make", "Model", "StripOffsets", "Orientation", "SamplesPerPixel", "RowsPerStrip", "StripByteCounts", "MinSampleValue", "MaxSampleValue", "XResolution", "YResolution", "PlanarConfiguration", "PageName", "XPosition", "YPosition", "FreeOffsets", "FreeByteCounts", "GrayResponseUnit", "GrayResponseCurve", "ResolutionUnit", "PageNumber", "ColorResponseUnit", "TransferFunction", "Software", "DateTime", "Artist", "HostComputer", "WhitePoint", "PrimaryChromaticities", "ColorMap", "HalftoneHints", "TileWidth", "TileLength", "TileOffsets", "TileByteCounts", "SubIFD", "InkSet", "InkNames", "NumberOfInks", "TargetPrinter", "ExtraSamples", "SampleFormat", "SMinSampleValue", "SMaxSampleValue", "ClipPath", "XClipPathUnits", "YClipPathUnits", "YCbCrCoefficients", "YCbCrSubsampling", "YCbCrPositioning", "ReferenceBlackWhite", "XMLPacket", "Matteing", "DataType", "ImageDepth", "TileDepth", "ImageFullWidth", "ImageFullLength", "TextureFormat", "TextureWrapModes", "FieldOfViewCotangent", "MatrixWorldToScreen", "MatrixWorldToCamera", "Copyright", "RichTIFFIPTC", "Photoshop", "EXIFIFDOffset", "ICC Profile", "GPSIFDOffset", "FaxRecvParams", "FaxSubAddress", "FaxRecvTime", "FaxDcs", "StoNits", "InteroperabilityIFDOffset", "DNGVersion", "DNGBackwardVersion", "UniqueCameraModel", "LocalizedCameraModel", "CFAPlaneColor", "CFALayout", "LinearizationTable", "BlackLevelRepeatDim", "BlackLevel", "BlackLevelDeltaH", "BlackLevelDeltaV", "WhiteLevel", "DefaultScale", "BestQualityScale", "DefaultCropOrigin", "DefaultCropSize", "ColorMatrix1", "ColorMatrix2", "CameraCalibration1", "CameraCalibration2", "ReductionMatrix1", "ReductionMatrix2", "AnalogBalance", "AsShotNeutral", "AsShotWhiteXY", "BaselineExposure", "BaselineNoise", "BaselineSharpness", "BayerGreenSplit", "LinearResponseLimit", "CameraSerialNumber", "LensInfo", "ChromaBlurRadius", "AntiAliasStrength", "ShadowScale", "DNGPrivateData", "MakerNoteSafety", "CalibrationIlluminant1", "CalibrationIlluminant2", "RawDataUniqueID", "OriginalRawFileName", "OriginalRawFileData", "ActiveArea", "MaskedAreas", "AsShotICCProfile", "AsShotPreProfileMatrix", "CurrentICCProfile", "CurrentPreProfileMatrix", "PerSample", "to read TIFF directory", "Can not read TIFF directory", "for \"StripByteCounts\" array", "Incorrect count for \"%s\"", "Incompatible type for \"%s\"", "Incorrect value for \"%s\"", "Out of memory reading of \"%s\"", "ReadDirEntryArray", "unknown tagname", "for strip array", "TIFFFetchNormalTag", "tiles", "strips", "for IFD list", "Colormap", "Cannot handle zero tile size", "Cannot handle zero strip size", "No space for strip buffer", "gtStripSeparate", "Integer overflow in %s", "No space for tile buffer", "gtTileSeparate", "Assuming 8-bit colormap", "Missing needed %s tag", "Samples/pixel", "Color channels", "Planarconfiguration", "No \"get\" routine setup", "\"%s\": Bad mode", "Cannot read TIFF header", "Error writing TIFF header", "File not open for reading", "Integer overflow", "TIFFNumberOfStrips", "Invalid YCbCr subsampling", "Integer arithmetic overflow", "TIFFTileRowSize", "TIFFNumberOfTiles", "Seek error at scanline %lu", "Write error at scanline %lu", "tile", "strip", "File not open for writing", "No space for %s arrays", "No space for output buffer", "%s: ", "Warning, ", "%s: Cannot open", "scanline", "TIFFRegisterCODEC", "TIFFUnRegisterCODEC", "IO error writing tag data", "IO error writing directory", "Error updating TIFF header", "%s: Could not find tag %d.", "for field buffer.", "None", "PackBits", "ThunderScan", "NeXT", "JPEG", "Old-style JPEG", "CCITT RLE", "CCITT RLE/W", "CCITT Group 3", "CCITT Group 4", "ISO JBIG", "Deflate", "AdobeDeflate", "PixarLog", "SGILog", "SGILog24", "LZMA", "Premature EOL", "Line length mismatch", "  Group 4 Options:", "%suncompressed data", "  Group 3 Options:", "%s2-d encoding", "%sEOL padding", " (%lu = 0x%lx)\n", "  Fax Data:", " clean", " receiver regenerated", " uncorrected errors", " (%u = 0x%x)\n", "  Bad Fax Lines: %lu\n", "InitCCITTFax3", "No space for state block", "for Group 3/4 run arrays", "TIFFInitCCITTFax3", "TIFFInitCCITTFax4", "Group4Options", "Group3Options", "FaxMode", "FaxFillFunc", "BadFaxLines", "CleanFaxData", "ConsecutiveBadFaxLines", "must be either LogLUV or LogL", "Y, L", "XYZ, Luv", "SGILogDataFmt", "SGILogEncode", "No space for LZW hash table", "No space for LZW state block", "No space for LZW code table", "ZLib error: %s", "Unsupported bits/sample: %d", "Encoder error: %s", "  Predictor: ", "none ", "horizontal differencing ", "floating point predictor ", "%u (0x%x)\n", "TIFFPredictorInit", "Predictor", "Not enough", "Too much", "No space for ZIP state block", "cannot write SOC marker\n", "cannot write SIZ marker\n", "Creator: JasPer Version %s", "cannot write COM marker\n", "cannot write COD marker\n", "lyrno = %02d\n", "success %d goodthresh %f\n", "  tcmpt %5d %5d %5d %5d\n", "    rlvl %5d %5d %5d %5d\n", "      band %5d %5d %5d %5d\n", "unsupported image type\n", "ignoring invalid mode %s\n", "invalid tile width %lu\n", "invalid tile height %lu\n", "invalid precinct width\n", "invalid precinct height\n", "invalid code block width %d\n", "invalid code block height %d\n", "code block size too large\n", "too many layers\n", "invalid number of guard bits\n", "cannot open tmp file\n", "cannot write SOT marker\n", "cannot write SOD marker\n", "cannot write EOI marker\n", "invalid JP encoder options\n", "dotile failed\n", "real", "lrcp", "rlcp", "rpcl", "pcrl", "cprl", "debug", "imgareatlx", "imgareatly", "tilegrdtlx", "tilegrdtly", "tilewidth", "tileheight", "prcwidth", "prcheight", "cblkwidth", "cblkheight", "nomct", "numrlvls", "lazy", "termall", "segsym", "vcausal", "pterm", "resetprob", "numgbits", "rate", "ilyrrates", "_jp2overhead", "string = \"%s\"\n", "ascii = \"%s\"\n", "uclangcode = %d; uclen = %d\n", "sccode = %d\n", "maclen = %d\n", "(%f, %f, %f)\n", "e[%d][%d]=%f ", "number of entires = %d\n", "gamma = %f\n", "entry[%d] = %f\n", "cannot get header\n", "cannot get tab table\n", "numattrs=%d\n", "/tmp/", "%s/tmp.XXXXXXXXXX", "%08x:", " %02x", "%s\n_jp2overhead=%lu\n", "1.900.1", "%02x ", "hoff[%d] = %d; voff[%d] = %d\n", "seqno = %d;\n", "po[%d] = %d; ", "cs[%d] = %d; ce[%d] = %d; ", "rs[%d] = %d; re[%d] = %d; ", "le[%d] = %d\n", "caps = 0x%02x;\n", "csty = 0x%02x;\n", "prg = %d; numlyrs = %d;\n", "regid = %d;\n", "data = ", "ind=%d; len = %d;\n", "data =\n", "type = 0x%04x (%s);", " len = %d;", "channo=%d; type=%d; assoc=%d\n", "numchans = %d\n", "cmptno=%d; map=%d; pcol=%d\n", "numents=%d; numchans=%d\n", "LUT[%d][%d]=%d\n", "method=%d; pri=%d; approx=%d\n", "csid=%d\n", "JP2 box: ", "cannot copy box data\n", "cannot parse box data\n", "FTYP", "JP2H", "IHDR", "BPCC", "COLR", "PCLR", "CMAP", "CDEF", "RESC", "RESD", "JP2C", "JP2I", "UUID", "UINF", "ULST", "error: cannot get box\n", "incorrect magic number\n", "expecting file type box\n", "box type %s\n", "error: no code stream found\n", "error: missing IHDR box\n", "error: no components\n", "error: no COLR box\n", "ICC Profile CS %08x\n", "error: no memory\n", "%04x:", "jpc_dec_decodecblks failed\n", "write component failed\n", "cannot get marker segment\n", "RESOLUTION LEVEL %d\n", "BAND %d\n", "CODE BLOCK GROUP %d\n", "CODE BLOCK %d\n", "jpc_dec_decodepkts failed\n", "read error\n", "maxlyrs", "maxpkts", "missing SOP marker segment\n", "alignment failed\n", "hdrlen=%lu bodylen=%lu \n", "missing EPH marker segment\n", "packet body offset=%06ld\n", "warning: corrupt code stream\n", "unrecognized exception", "preview", "Unexpected attribute type.", "Cannot overwrite scan line ", "\" to image file \"", "\" failed. \"", "Cannot open image file \"", "Pixel type of \"", "\" channel of output file \"", "chromaticities", "whiteLuminance", "adoptedNeutral", "xDensity", "utcOffset", "longitude", "latitude", "altitude", "focus", "expTime", "aperture", "isoSpeed", "envmap", "keyCode", "timeCode", "framesPerSecond", "worldToCamera", "worldToNDC", "renderingTransform", "lookModTransform", "owner", "comments", "capDate", "wrapmodes", "multiView", "timecode", "Integer addition overflow.", "Invalid ", ": it is more than ", " characters long.", "Cannot find image attribute \"", "displayWindow", "dataWindow", "pixelAspectRatio", "screenWindowCenter", "screenWindowWidth", "channels", "lineOrder", "compression", "pixels.", "\" image channel is invalid.", "\" channel is not 1.", "\" channel is invalid.", "\" channel.", "File is not an image file.", "Cannot read version ", "attribute name", "attribute type name", "\" to image attribute \"", "box2i", "box2f", "stringvector", "Cannot read image file \"", "Unknown pixel data type.", "chlist", "channel name", "rational", "File output failed.", "Early end of file: read ", " out of ", " requested bytes.", "Unexpected end of file.", "(string)", "Scan line ", " is missing.", "Unexpected data block length.", "\" channel of input file \"", "m33f", "m33d", "m44f", "m44d", "Cannot initialize mutex (%T).", "Cannot lock mutex (%T).", "Cannot unlock mutex (%T).", "Unknown pixel type.", "tiledesc", "Data decoding (rle) failed.", "keycode", "Arguments not in valid range.", "Unexpected tile block length.", "Tile (", ") is not a valid tile.", ") is missing.", "Unexpected tile x coordinate.", "Unexpected tile y coordinate.", "Argument not in valid range.", "Unknown LevelMode format.", "\" to an attribute of type \"", "std::bad_exception", "pure virtual method called\n", "std::bad_alloc", "basic_ios::clear", "POSIX", "%.*Lf", "%m/%d/%y", "%H:%M", "%H:%M:%S", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "basic_string::copy", "basic_string::compare", "basic_string::_S_create", "basic_string::_M_replace_aux", "basic_string::insert", "basic_string::replace", "basic_string::assign", "basic_string::append", "basic_string::resize", "basic_string::basic_string", "std::bad_typeid", "std::bad_cast", "-+xX0123456789abcdefABCDEF", "-0123456789", "AKST", "space", "print", "cntrl", "upper", "lower", "digit", "punct", "xdigit", "alnum", "graph", "system", "terminate called recursively\n", "  what():  ", "_GLOBAL_", "(anonymous namespace)", "string literal", "auto", "[abi:", "{default arg#", "JArray", "vtable for ", "VTT for ", "construction vtable for ", "-in-", "typeinfo for ", "typeinfo name for ", "typeinfo fn for ", "non-virtual thunk to ", "virtual thunk to ", "covariant return thunk to ", "java Class for ", "guard variable for ", "TLS init function for ", "TLS wrapper function for ", "reference temporary #", " for ", "hidden alias for ", "transaction clone for ", "non-transaction clone for ", "_Sat ", "_Accum", "_Fract", "operator", "operator ", "new ", "java resource ", "decltype (", "this", "{parm#", "global constructors keyed to ", "global destructors keyed to ", "{lambda(", "{unnamed type#", " [clone ", " restrict", " volatile", " const", "complex ", "imaginary ", " __vector(", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "alignof ", "const_cast", "delete[] ", "dynamic_cast", "delete ", "operator\"\" ", "new[]", "reinterpret_cast", "static_cast", "sizeof ", "throw", "throw ", "signed char", "boolean", "byte", "long double", "__float128", "unsigned char", "unsigned int", "long", "unsigned long", "__int128", "unsigned __int128", "unsigned short", "void", "wchar_t", "long long", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "decltype(nullptr)", "/build/master_pack-android/opencv/modules/java/generator/src/cpp/utils.cpp", "info.format == ANDROID_BITMAP_FORMAT_RGBA_8888 || info.format == ANDROID_BITMAP_FORMAT_RGB_565", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/mat.inl.hpp", "nBitmapToMat catched cv::Exception: %s", "nBitmapToMat catched unknown exception (...)", "Unknown exception in JNI code {nBitmapToMat}", "src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols", "src.type() == CV_8UC1 || src.type() == CV_8UC3 || src.type() == CV_8UC4", "nMatToBitmap catched cv::Exception: %s", "nMatToBitmap catched unknown exception (...)", "Unknown exception in JNI code {nMatToBitmap}", "Unknown exception in JNI code {core::minMaxLoc()}", "Unknown exception in JNI code {core::getTextSize()}", "/build/master_pack-android/opencv/modules/dnn/include/opencv2/dnn/dnn.inl.hpp", "(idx == -1 && ps->size() == 1) || (idx >= 0 && idx < (int)ps->size())", "/build/master_pack-android/opencv/modules/features2d/misc/java/src/cpp/features2d_manual.hpp", "/build/master_pack-android/opencv/modules/core/src/directx.cpp", "/build/master_pack-android/opencv/modules/core/src/pca.cpp", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/persistence.hpp", "!mean.empty() && !eigenvectors.empty() && ((mean.rows == 1 && mean.cols == data.cols) || (mean.cols == 1 && mean.rows == data.rows))", "!mean.empty() && !eigenvectors.empty() && ((mean.rows == 1 && eigenvectors.rows == data.cols) || (mean.cols == 1 && eigenvectors.rows == data.rows))", "/build/master_pack-android/opencv/modules/core/src/types.cpp", "/build/master_pack-android/opencv/modules/core/src/alloc.cpp", "/build/master_pack-android/opencv/modules/core/src/out.cpp", "(Func.rows==1 && (Constr.cols-Func.cols==1))|| (Func.cols==1 && (Constr.cols-Func.rows==1))", "/build/master_pack-android/opencv/modules/core/src/lpsolver.cpp", "termcrit.type == (TermCriteria::MAX_ITER + TermCriteria::EPS) && termcrit.epsilon > 0 && termcrit.maxCount > 0", "/build/master_pack-android/opencv/modules/core/src/downhill_simplex.cpp", "(x.cols == 1 && x.rows == ndim) || (x.cols == ndim && x.rows == 1)", "std::min(_step.cols, _step.rows) == 1 && std::max(_step.cols, _step.rows) >= 2 && _step.type() == CV_64FC1", "src1.size() == src2.size() && type == src2.type() && (depth == CV_32F || depth == CV_64F)", "/build/master_pack-android/opencv/modules/core/src/mathfuncs.cpp", "X.size == Y.size && type == Y.type() && (depth == CV_32F || depth == CV_64F)", "the value at (%d, %d)=%s is out of range [%f, %f)", "(coeffs.size() == Size(n0, 1) || coeffs.size() == Size(n0+1, 1) || coeffs.size() == Size(1, n0) || coeffs.size() == Size(1, n0+1))", "coeffs0.rows == 1 || coeffs0.cols == 1", "(depth == CV_32F || depth == CV_64F) && (src1.empty() || src1.type() == type)", "Mag.empty() || Angle.size == Mag.size", "IPP:(ipp_polarToCart(Mag, Angle, X, Y))", "/build/master_pack-android/opencv/modules/core/src/lapack.cpp", "w.type() == u.type() && u.type() == vt.type() && u.data && vt.data && w.data", "u.cols >= nm && vt.rows >= nm && (w.size() == Size(nm, 1) || w.size() == Size(1, nm) || w.size() == Size(vt.rows, u.cols))", "(method != DECOMP_LU && method != DECOMP_CHOLESKY) || is_normal || src.rows == src.cols", "w.type() == type && (w.size() == cv::Size(nm,1) || w.size() == cv::Size(1, nm) || w.size() == cv::Size(nm, nm) || w.size() == cv::Size(n, m))", "src.type() == dst.type() && src.rows == dst.cols && src.cols == dst.rows", "/build/master_pack-android/opencv/modules/core/src/va_intel.cpp", "\nGeneral configuration for OpenCV 3.3.0 =====================================\n  Version control:               3.3.0\n\n  Platform:\n    Timestamp:                   2017-08-04T00:43:27Z\n    Host:                        Linux 4.8.0-58-generic x86_64\n    Target:                      Linux 1 i686\n    CMake:                       2.8.12.2\n    CMake generator:             Ninja\n    CMake build tool:            /usr/bin/ninja\n    Configuration:               Release\n\n  CPU/HW features:\n    Baseline:                    SSE SSE2\n      requested:                 SSE2\n    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2\n      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2\n      SSE4_1 (2 files):          + SSE3 SSSE3 SSE4_1\n      SSE4_2 (1 files):          + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2\n      FP16 (1 files):            + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX\n      AVX (5 files):             + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2 AVX\n      AVX2 (7 files):            + SSE3 SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2\n\n  C/C++:\n    Built as dynamic libs?:      NO\n    C++ Compiler:                /usr/bin/ccache /opt/android/android-ndk-r10e/toolchains/x86-4.8/prebuilt/linux-x86_64/bin/i686-linux-android-g++ (ver 4.8)\n    C++ flags (Release):         -fexceptions -frtti -fpic --sysroot=/opt/android/android-ndk-r10e/platforms/android-9/arch-x86 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -march=i686 -fomit-frame-pointer  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fvisibility-inlines-hidden -fomit-frame-pointer -fstrict-aliasing -O2 -DNDEBUG  -DNDEBUG\n    C++ flags (Debug):           -fexceptions -frtti -fpic --sysroot=/opt/android/android-ndk-r10e/platforms/android-9/arch-x86 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Winit-self -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -march=i686 -fomit-frame-pointer  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fvisibility-inlines-hidden -fno-omit-frame-pointer -fno-strict-aliasing -O0 -g -DDEBUG -D_DEBUG  -DDEBUG -D_DEBUG\n    C Compiler:                  /usr/bin/ccache /opt/android/android-ndk-r10e/toolchains/x86-4.8/prebuilt/linux-x86_64/bin/i686-linux-android-gcc\n    C flags (Release):           -fexceptions -fpic --sysroot=/opt/android/android-ndk-r10e/platforms/android-9/arch-x86 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -march=i686 -fomit-frame-pointer  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fomit-frame-pointer -fstrict-aliasing -O2 -DNDEBUG  -DNDEBUG\n    C flags (Debug):             -fexceptions -fpic --sysroot=/opt/android/android-ndk-r10e/platforms/android-9/arch-x86 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Winit-self -Wno-narrowing -Wno-comment -fdiagnostics-show-option -march=i686 -fomit-frame-pointer  -msse -msse2 -mfpmath=sse -fvisibility=hidden -fno-omit-frame-pointer -fno-strict-aliasing -O0 -g -DDEBUG -D_DEBUG  -DDEBUG -D_DEBUG\n    Linker flags (Release):      -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now \n    Linker flags (Debug):        -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now \n    ccache:                      YES\n    Precompiled headers:         NO\n    Extra dependencies:          z dl m log\n    3rdparty dependencies:       cpufeatures ittnotify libprotobuf libjpeg libwebp libpng libtiff libjasper IlmImf tbb ipp_iw ippicv\n\n  OpenCV modules:\n    To be built:                 core flann imgproc ml objdetect photo video dnn imgcodecs shape videoio highgui superres features2d calib3d java stitching videostab\n    Disabled:                    world\n    Disabled by dependency:      -\n    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev python2 python3 ts viz\n\n  Android: \n    Android ABI:                 x86\n    STL type:                    gnustl_static\n    Native API level:            android-9\n    SDK target:                  android-11\n    Android NDK:                 /opt/android/android-ndk-r10e (toolchain: x86-4.8)\n    android tool:                /opt/android/android-sdk-java7/tools/android (Android SDK Tools, revision 25.2.2.)\n    Google Play manager:         NO\n    Android examples:            YES\n\n  GUI: \n    GTK+:                        NO\n    GThread :                    NO\n    GtkGlExt:                    NO\n    OpenGL support:              NO\n    VTK support:                 NO\n\n  Media I/O: \n    ZLib:                        z (ver 1.2.3)\n    JPEG:                        build (ver 90)\n    WEBP:                        build (ver encoder: 0x020e)\n    PNG:                         build (ver 1.6.24)\n    TIFF:                        build (ver 42 - 4.0.2)\n    JPEG 2000:                   build (ver 1.900.1)\n    OpenEXR:                     build (ver 1.7.1)\n    GDAL:                        NO\n    GDCM:                        NO\n\n  Video I/O:\n\n  Parallel framework:            TBB (ver 4.4 interface 9003)\n\n  Trace:                         YES (with Intel ITT)\n\n  Other third-party libraries:\n    Use Intel IPP:               2017.0.2 [2017.0.2]\n               at:               /build/master_pack-android/build/o4a/3rdparty/ippicv/ippicv_lnx\n    Use Intel IPP IW:            prebuilt binaries (2017.0.2)\n    Use Intel IPP Async:         NO\n    Use Eigen:                   NO\n    Use Cuda:                    NO\n    Use OpenCL:                  NO\n    Use OpenVX:                  NO\n    Use custom HAL:              NO\n\n  Python 2:\n    Interpreter:                 /usr/bin/python2.7 (ver 2.7.6)\n\n  Python 3:\n    Interpreter:                 /usr/bin/python3.4 (ver 3.4.3)\n\n  Python (for build):            /usr/bin/python2.7\n\n  Java:\n    ant:                         /usr/bin/ant (ver 1.9.3)\n    Java wrappers:               YES\n    Java tests:                  NO\n\n  Matlab:                        NO\n\n  Tests and samples:\n    Tests:                       NO\n    Performance tests:           NO\n    C/C++ Examples:              NO\n\n  Install path:                  /build/master_pack-android/build/o4a/install\n\n  cvconfig.h is in:              /build/master_pack-android/build/o4a\n-----------------------------------------------------------------\n\n", "Inplace operation is not supported", "Requested object was not found", "Input image depth is not supported by function", "Formats of input arguments do not match", "Sizes of input arguments do not match", "One of arguments' values is out of range", "Unsupported format or combination of formats", "Bad flag (parameter or structure field)", "The function/feature is not implemented", "Memory block has been corrupted", "OpenCV Error: %s (%s) in %s, file %s, line %d", "/build/master_pack-android/opencv/modules/core/src/system.cpp", "%s:%d: error: (%d) %s in function %s\n", "\nOpenCV build configuration is:\n%s\n", "\n******************************************************************\n* FATAL ERROR:                                                   *\n* This OpenCV build doesn't support current CPU/HW configuration *\n*                                                                *\n* Use OPENCV_DUMP_CONFIG=1 environment variable for details      *\n******************************************************************\n", "Missing support for required CPU baseline features. Check OpenCV build configuration and required CPU/HW setup.", "OPENCV: Trying to disable unavailable CPU feature on the current platform: '%s'.\n", "OPENCV: Trying to disable unknown CPU feature: '%s'.\n", "OPENCV: Trying to disable baseline CPU feature: '%s'. This has very limited effect, because code optimizations for this feature are executed unconditionally in the most cases.\n", "WARNING: IPP was disabled by OPENCV_IPP environment variable", "ERROR: Improper value of OPENCV_IPP: ", "Invalid value for %s parameter: %s", "key_ != -1 && \"Can't fetch data from terminated TLS container.\"", "0 <= rowRange_.start && rowRange_.start <= rowRange_.end && rowRange_.end <= m.rows", "/build/master_pack-android/opencv/modules/core/src/cuda_gpu_mat.cpp", "0 <= colRange_.start && colRange_.start <= colRange_.end && colRange_.end <= m.cols", "0 <= roi.x && 0 <= roi.width && roi.x + roi.width <= m.cols && 0 <= roi.y && 0 <= roi.height && roi.y + roi.height <= m.rows", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/private.cuda.hpp", "The matrix is not continuous, thus its number of rows can not be changed", "The total number of matrix elements is not divisible by the new number of rows", "/build/master_pack-android/opencv/modules/core/src/stat.cpp", "dst.type() == CV_64F && dst.isContinuous() && (dst.cols == 1 || dst.rows == 1) && dcn >= cn", "(cn == 1 && (_mask.empty() || _mask.type() == CV_8U)) || (cn > 1 && _mask.empty() && !minIdx && !maxIdx)", "type == src2.type() && src1.cols == src2.cols && (type == CV_32F || type == CV_8U)", "The combination of type=%d, dtype=%d and normType=%d is not supported", "normType == NORM_INF || normType == NORM_L1 || normType == NORM_L2 || normType == NORM_L2SQR || ((normType == NORM_HAMMING || normType == NORM_HAMMING2) && _src.type() == CV_8U)", "normType == NORM_INF || normType == NORM_L1 || normType == NORM_L2 || normType == NORM_L2SQR || ((normType == NORM_HAMMING || normType == NORM_HAMMING2) && src1.type() == CV_8U)", "IPP:(ipp_norm(_src1, _src2, normType, _mask, _result))", "IPP:(ipp_norm(src, normType, mask, _result))", "IPP:ipp_minMaxIdx(src, minVal, maxVal, minIdx, maxIdx, mask)", "IPP:(ipp_meanStdDev(src, _mean, _sdv, mask))", "IPP:ipp_countNonZero(src, res)", "/sys/devices/system/cpu/possible", "/build/master_pack-android/opencv/modules/core/src/parallel.cpp", "/build/master_pack-android/opencv/modules/core/src/lda.cpp", "Wrong shapes for given matrices. Was size(src) = (%d,%d), size(W) = (%d,%d).", "Wrong mean shape for the given data matrix. Expected %d, but was %d.", "Wrong mean shape for the given eigenvector matrix. Expected %d, but was %d.", "At least two classes are needed to perform a LDA. Reason: Only one class was given!", "The number of samples must equal the number of labels. Given %d labels, %d samples. ", "Warning: Less observations than feature dimension given!", "Computation will probably fail.", "Wrong shape of input matrix! Expected a matrix with one row or column.", "Wrong number of elements in matrix #%d! Expected %d was %d.", "InputArray Datatype %d is not supported.", "The data is expected as InputArray::STD_VECTOR_MAT (a std::vector<Mat>) or _InputArray::STD_VECTOR_VECTOR (a std::vector< std::vector<...> >).", "Either all the pointers should be null or they all should be non-null", "/build/master_pack-android/opencv/modules/core/src/array.cpp", "Images with planar data layout should be used with COI selected", "Mask should have 8uC1 or 8sC1 data type", "The matrix is not continuous so the number of rows can not be changed", "The total matrix width is not divisible by the new number of columns", "The last dimension full size is not divisible by new number of channels", "Simultaneous change of shape and number of channels is not supported. Do it by 2 separate calls", "Number of elements in the original and reshaped array is different", "rect.width >= 0 && rect.height >= 0 && rect.x < image->width && rect.y < image->height && rect.x + rect.width >= (int)(rect.width > 0) && rect.y + rect.height >= (int)(rect.height > 0)", "Iterations flag is set and maximum number of iterations is <= 0", "Neither accuracy nor maximum iterations number flags are set in criteria type", "(termcrit.type==(TermCriteria::MAX_ITER+TermCriteria::EPS) && termcrit.epsilon>0 && termcrit.maxCount>0) || ((termcrit.type==TermCriteria::MAX_ITER) && termcrit.maxCount>0)", "/build/master_pack-android/opencv/modules/core/src/conjugate_gradient.cpp", "/build/master_pack-android/opencv/modules/core/src/glob.cpp", "basic_string::_S_construct null not valid", "/build/master_pack-android/opencv/modules/core/src/persistence.cpp", "Bad format of floating-point constant", "An attempt to add element without a key to a map, or add element with key to sequence", "Key name may only contain alphanumeric characters [a-zA-Z0-9], '-' and '_'", "Some collection type: CV_NODE_SEQ or CV_NODE_MAP must be specified", "Invalid character in the stream", "Too long string or a last string w/o newline", "Not supported escape character", "Sequence element should not have name (use <_></_>)", "The size of element calculated from \"dt\" and the elem_size do not match", "Size of sequence element (elem_size) is inconsistent with seq->flags", "The matrix size does not match to the number of stored elements", "One of \"header_dt\" and \"header_user_data\" is there, while the other is not", "Only one of \"header_user_data\", \"rect\" and \"origin\" tags may occur", "Some of required function pointers (is_instance, release, read or write) are NULL", "opencv-sequence-tree instance should contain a field \"sequences\" that should be a sequence", "Key names may only contain alphanumeric characters [a-zA-Z0-9], '-', '_' and ' '", "Some collection type - CV_NODE_SEQ or CV_NODE_MAP, must be specified", "fs->is_write_struct_delayed == false", "function 'cvStartWriteStruct' calls cannot be nested if using Base64.", "The closing '%c' does not match the opening '%c'", "The size of header calculated from \"header_dt\" is greater than header_size", "Map element should have a name", "Directive tags are not allowed here", "data size not matches elememt size", "There should be space between literals", "Invalid numeric value (inconsistent explicit type specification?)", "Literal \" is not allowed within a string. Use &quot;", "Literal ' or > are not allowed. Use &apos; or &gt;", "Invalid numeric value in the string", "Invalid character in the symbol entity name", "The actual type is different from the specified type", "Closing tag should not contain any attributes", "Attribute name should be followed by '='", "Attribute value should be put into single or double quotes", "Invalid closing tag for <?xml ...", "There should be space between attributes", "Name should start with a letter or underscore", "Byte size not match elememt size", "Missing , between the elements", "Complex keys are not supported", "Multi-line text literals are not supported", "Block sequence elements must be preceded with '-'", "'\"' - right-quote of string is missing", "'\\uXXXX' currently not supported", "Value 'null' is not supported by this parser", "'{' - left-brace of map is missing", "Missing ':' between key and value", "\"type_id\" should be of type string", "'}' - right-brace of map is missing", "'[' - left-brace of seq is missing", "']' - right-brace of seq is missing", "CV_STORAGE_APPEND and CV_STORAGE_MEMORY are not currently compatible", "<?xml version=\"1.0\" encoding=\"%s\"?>\n", "Valid XML should start with '<?xml ...?>'", "<opencv_storage> tag is missing", "</opencv_storage> tag is missing", "Unsupported YAML version (it must be 1.x)", "The YAML streams must start with '---', except the first one", "Only collections as YAML streams are supported by this parser", "left-brace of top level is missing", "Could not open the file storage. Check the path and permissions", "NULL memory storage is passed - the loaded dynamic structure can not be stored", "/build/master_pack-android/opencv/modules/core/src/gl_core_3_1.cpp", "/build/master_pack-android/opencv/modules/core/src/command_line_parser.cpp", "undeclared position %d requested", "/build/master_pack-android/opencv/modules/core/src/algorithm.cpp", "/build/master_pack-android/opencv/modules/core/src/matrix_decomp.cpp", "/build/master_pack-android/opencv/modules/core/src/matop.cpp", "IPP:((ippicvsLn_64f_A50)(src, dst, n)) >= 0", "/build/master_pack-android/opencv/modules/core/src/mathfuncs_core.dispatch.cpp", "IPP:((ippicvsLn_32f_A21)(src, dst, n)) >= 0", "IPP:((ippicvsExp_64f_A50)(src, dst, n)) >= 0", "IPP:((ippicvsExp_32f_A21)(src, dst, n)) >= 0", "IPP:((ippicvsSqrt_64f_A50)(src, dst, len)) >= 0", "IPP:((ippicvsSqrt_32f_A21)(src, dst, len)) >= 0", "IPP:((ippicvsInvSqrt_64f_A50)(src, dst, len)) >= 0", "IPP:((ippicvsInvSqrt_32f_A21)(src, dst, len)) >= 0", "IPP:(((ippicvsMagnitude_64f)(x, y, mag, len)) >= 0)", "IPP:(((ippicvsMagnitude_32f)(x, y, mag, len)) >= 0)", "/build/master_pack-android/opencv/modules/core/src/mathfuncs_core.simd.hpp", "/build/master_pack-android/opencv/modules/core/src/kmeans.cpp", "(best_labels.cols == 1 || best_labels.rows == 1) && best_labels.cols*best_labels.rows == N && best_labels.type() == CV_32S && best_labels.isContinuous()", "/build/master_pack-android/opencv/modules/core/src/umatrix.cpp", "r == Range::all() || (0 <= r.start && r.start < r.end && r.end <= m.size[i])", "0 <= _rowRange.start && _rowRange.start <= _rowRange.end && _rowRange.end <= m.rows", "0 <= _colRange.start && _colRange.start <= _colRange.end && _colRange.end <= m.cols", "Copy dimension (which has zero size) is not present in source matrix", "Reshaping of n-dimensional non-continuous matrices is not supported yet", "/build/master_pack-android/opencv/modules/core/src/ocl.cpp", "getBufferPoolController(): unknown BufferPool ID\n", "_findAndRemoveEntryFromAllocatedList(entry, buffer)", "clGetPlatformInfo(handle, 0x0903, sizeof(buf), buf, &len) == 0", "clGetDeviceInfo(p->handle, 0x1005, MAX_DIMS*sizeof(sizes[0]), &sizes[0], &retsz) == 0", "-D %s_T=%s -D %s_T1=%s -D %s_CN=%d -D %s_TSIZE=%d -D %s_T1SIZE=%d -D %s_DEPTH=%d", "OPENCV_OPENCL_PERF_CHECK_BYPASS", "clSetKernelArg(p->handle, (cl_uint)i, sizeof(h), &h) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+1), sizeof(u2d.step), &u2d.step) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+2), sizeof(u2d.offset), &u2d.offset) == 0", "clSetKernelArg(p->handle, (cl_uint)i, sizeof(u2d.rows), &u2d.rows) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+1), sizeof(cols), &cols) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+1), sizeof(u3d.slicestep), &u3d.slicestep) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+2), sizeof(u3d.step), &u3d.step) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+3), sizeof(u3d.offset), &u3d.offset) == 0", "clSetKernelArg(p->handle, (cl_uint)i, sizeof(u3d.slices), &u3d.slices) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+1), sizeof(u3d.rows), &u3d.rows) == 0", "clSetKernelArg(p->handle, (cl_uint)(i+2), sizeof(u3d.cols), &cols) == 0", "clSetKernelArg(p->handle, (cl_uint)i, arg.sz, arg.obj) == 0", "ERROR: Invalid configuration string for OpenCL device", "clGetPlatformIDs(0, __null, &numPlatforms) == 0", "clGetPlatformIDs(numPlatforms, &platforms[0], &numPlatforms) == 0", "ERROR: Can't find OpenCL platform by name: ", "ERROR: Unsupported device type for OpenCL device (GPU, CPU, ACCELERATOR): ", "ERROR: Requested OpenCL device not found, check configuration: ", "getStringInfo(clGetPlatformInfo, platforms[i], 0x0902, name) == 0", "getStringInfo(clGetDeviceInfo, devices[i], 0x102B, name) == 0", "clGetDeviceIDs(platform, (cl_device_type)Device::TYPE_ALL, 0, __null, &numDevices) == 0", "clGetDeviceIDs(platform, (cl_device_type)Device::TYPE_ALL, numDevices, &devices[0], &numDevices) == 0", "clGetDeviceIDs( pl, dtype, 0, 0, &nd0 ) == 0", "clGetDeviceIDs( pl, dtype, nd0, dlist, &nd0 ) == 0", "clReleaseContext(impl->handle) == 0", "clGetDeviceInfo(d, 0x1031, sizeof(cl_platform_id), &pl, __null) == 0", "No matched platforms available!", "OpenCL program build log: %s\n%s\n", "name=%s\ndriver=%s\nbuildflags=%s\n", "clSetEventCallback(asyncEvent, 0x0, oclCleanupCallback, p) == 0", "clEnqueueReadBuffer(q, (cl_mem)u->handle, 1, 0, u->size, alignedPtr.getAlignedPtr(), 0, 0, 0) == 0", "u->originalUMatData->data == data", "clEnqueueUnmapMemObject(q, (cl_mem)u->handle, data, 0, 0, 0) == 0", "u->refcount == 0 && \"UMat deallocation error: some derived Mat is still alive\"", "clEnqueueReadBuffer(q, (cl_mem)u->handle, CL_TRUE, 0, u->size, alignedPtr.getAlignedPtr(), 0, 0, 0) == CL_SUCCESS", "(retval = clEnqueueUnmapMemObject(q, (cl_mem)u->handle, u->data, 0, 0, 0)) == CL_SUCCESS", "(retval = clEnqueueWriteBuffer(q, (cl_mem)u->handle, CL_TRUE, 0, u->size, alignedPtr.getAlignedPtr(), 0, 0, 0)) == CL_SUCCESS", "clEnqueueReadBuffer(q, (cl_mem)u->handle, CL_TRUE, srcrawofs, total, alignedPtr.getAlignedPtr(), 0, 0, 0) >= 0", "clEnqueueReadBufferRect(q, (cl_mem)u->handle, CL_TRUE, new_srcofs, new_dstofs, new_sz, new_srcstep[0], 0, new_dststep[0], 0, ptr, 0, 0, 0) >= 0", "clEnqueueWriteBuffer(q, (cl_mem)u->handle, CL_TRUE, dstrawofs, total, alignedPtr.getAlignedPtr(), 0, 0, 0) >= 0", "clEnqueueWriteBufferRect(q, (cl_mem)u->handle, CL_TRUE, new_dstofs, new_srcofs, new_sz, new_dststep[0], 0, new_srcstep[0], 0, ptr, 0, 0, 0) >= 0", "(retval = clEnqueueCopyBuffer(q, (cl_mem)src->handle, (cl_mem)dst->handle, srcrawofs, dstrawofs, total, 0, 0, 0)) == CL_SUCCESS", "(retval = clEnqueueCopyBufferRect(q, (cl_mem)src->handle, (cl_mem)dst->handle, new_srcofs, new_dstofs, new_sz, new_srcstep[0], 0, new_dststep[0], 0, 0, 0, 0)) == CL_SUCCESS", "clGetMemObjectInfo(clImage, CL_MEM_TYPE, sizeof(cl_mem_object_type), &mem_type, 0) == CL_SUCCESS", "clGetImageInfo(clImage, CL_IMAGE_FORMAT, sizeof(cl_image_format), &fmt, 0) == CL_SUCCESS", "Not supported image_channel_data_type", "Not supported image_channel_order", "clGetImageInfo(clImage, CL_IMAGE_ROW_PITCH, sizeof(size_t), &step, 0) == CL_SUCCESS", "clGetImageInfo(clImage, CL_IMAGE_WIDTH, sizeof(size_t), &w, 0) == CL_SUCCESS", "clGetImageInfo(clImage, CL_IMAGE_HEIGHT, sizeof(size_t), &h, 0) == CL_SUCCESS", "clEnqueueCopyImageToBuffer(q, clImage, clBuffer, src_origin, region, offset, 0, NULL, NULL) == CL_SUCCESS", "ocl::Device::getDefault().imageSupport()", "clEnqueueCopyBufferRect(queue, (cl_mem)src.handle(ACCESS_READ), devData, origin, origin, roi, src.step, 0, src.cols * src.elemSize(), 0, 0, NULL, NULL) == CL_SUCCESS", "clEnqueueCopyBufferToImage(queue, devData, handle, 0, origin, region, 0, __null, 0) == 0", "clReleaseMemObject(devData) == 0", "Incorrect UMat, handle is null", "\nWARNING: OpenCV-OpenCL:\n    In-memory cache for OpenCL programs is full, older programs will be unloaded.\n    You can change cache size via OPENCV_OPENCL_PROGRAM_CACHE environment variable\n", "OPENCV_OPENCL_BUFFERPOOL_LIMIT", "OPENCV_OPENCL_HOST_PTR_BUFFERPOOL_LIMIT", "clGetMemObjectInfo(memobj, CL_MEM_TYPE, sizeof(cl_mem_object_type), &mem_type, 0) == CL_SUCCESS", "clGetMemObjectInfo(memobj, CL_MEM_SIZE, sizeof(size_t), &total, 0) == CL_SUCCESS", "clRetainMemObject(memobj) == CL_SUCCESS", "(int)step >= cols * CV_ELEM_SIZE(type)", "/build/master_pack-android/opencv/modules/core/src/copy.cpp", "value[0] == value[1] && value[0] == value[2] && value[0] == value[3]", "(coi1 != 0 || src.channels() == 1) && (coi2 != 0 || dst.channels() == 1)", "src.type() == dst.type() && dst.rows % src.rows == 0 && dst.cols % src.cols == 0", "IPP:ipp_copyMakeBorder(src, dst, top, bottom, left, right, borderType, value)", "IPP:ipp_flip(src, dst, flip_mode)", "IPP:ipp_Mat_setTo_Mat(*this, value, mask)", "IPP:ipp_copyTo(*this, dst, mask)", "IPP:((ippicviCopy_8u_C1R_L)(sptr, (int)step, dptr, (int)dst.step, ippiSizeL((int)(cols*elemSize()), rows))) >= 0", "IPP:((ippicviCopy_8u_C1MR)(_src, (int)sstep, _dst, (int)dstep, ippiSize(size), mask, (int)mstep)) >= 0", "IPP:((ippicviCopy_16u_C1MR)((const Ipp16u *)_src, (int)sstep, (Ipp16u *)_dst, (int)dstep, ippiSize(size), mask, (int)mstep)) >= 0", "IPP:((ippicviCopy_8u_C3MR)((const Ipp8u *)src, (int)sstep, (Ipp8u *)dst, (int)dstep, ippiSize(size), (const Ipp8u *)mask, (int)mstep)) >= 0", "IPP:((ippicviCopy_32s_C1MR)((const Ipp32s *)src, (int)sstep, (Ipp32s *)dst, (int)dstep, ippiSize(size), (const Ipp8u *)mask, (int)mstep)) >= 0", "IPP:((ippicviCopy_16u_C3MR)((const Ipp16u *)src, (int)sstep, (Ipp16u *)dst, (int)dstep, ippiSize(size), (const Ipp8u *)mask, (int)mstep)) >= 0", "IPP:((ippicviCopy_32s_C3MR)((const Ipp32s *)src, (int)sstep, (Ipp32s *)dst, (int)dstep, ippiSize(size), (const Ipp8u *)mask, (int)mstep)) >= 0", "IPP:((ippicviCopy_32s_C4MR)((const Ipp32s *)src, (int)sstep, (Ipp32s *)dst, (int)dstep, ippiSize(size), (const Ipp8u *)mask, (int)mstep)) >= 0", "/build/master_pack-android/opencv/modules/core/src/rand.cpp", "_param1.channels() == 1 && (_param1.rows == 1 || _param1.cols == 1) && (_param1.rows + _param1.cols - 1 == cn || _param1.rows + _param1.cols - 1 == 1 || (_param1.size() == Size(1, 4) && _param1.type() == CV_64F && cn <= 4))", "_param2.channels() == 1 && (((_param2.rows == 1 || _param2.cols == 1) && (_param2.rows + _param2.cols - 1 == cn || _param2.rows + _param2.cols - 1 == 1 || (_param1.size() == Size(1, 4) && _param1.type() == CV_64F && cn <= 4))) || (_param2.rows == cn && _param2.cols == cn && disttype == NORMAL))", "/build/master_pack-android/opencv/modules/core/src/ovx.cpp", "/build/master_pack-android/opencv/modules/core/src/datastructs.cpp", "Specified element size doesn't match to the size of the specified element type (try to use 0 for element type)", "Element size doesn't match to the size of predefined element type (try to use 0 for sequence element type)", "/build/master_pack-android/opencv/modules/core/src/opengl.cpp", "depth == CV_16S || depth == CV_32S || depth == CV_32F || depth == CV_64F", "depth == CV_8S || depth == CV_16S || depth == CV_32S || depth == CV_32F || depth == CV_64F", "/build/master_pack-android/opencv/modules/core/src/convert.cpp", "(lutcn == cn || lutcn == 1) && _lut.total() == 256 && _lut.isContinuous() && (depth == CV_8U || depth == CV_8S)", "dst.size() == src.size() && dst.type() == CV_MAKETYPE(lut.depth(), src.channels())", "svec[j].size == dst.size && svec[j].depth() == dst.depth() && svec[j].channels() == 1 && i < dst.channels()", "IPP:ipp_convertTo(src, dst, alpha, beta )", "IPP:(((ippicviConvert_8s8u_C1Rs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16u8u_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16s8u_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_32s8u_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_32f8u_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_8u8s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_16u8s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_16s8s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_32s8s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_32f8s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_8u16u_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_8s16u_C1Rs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16s16u_C1Rs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_32s16u_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_32f16u_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_8u16s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_8s16s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16u16s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_32s16s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_8u32s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_8s32s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16u32s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16s32s_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_32f32s_C1RSfs)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height), ippRndFinancial, 0)) >= 0)", "IPP:(((ippicviConvert_8u32f_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_8s32f_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16u32f_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_16s32f_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:(((ippicviConvert_32s32f_C1R)(src, (int)sstep, dst, (int)dstep, ippiSize(size.width, size.height))) >= 0)", "IPP:ipp_extractInsertChannel(src, dst, coi)", "IPP:ipp_merge(mv, dst, (int)n)", "/build/master_pack-android/opencv/modules/core/src/matmul.cpp", "(evals0.cols == 1 || evals0.rows == 1) && ecount0 <= ecount && evects0.cols == evects.cols && evects0.rows == ecount0", "type == B.type() && (type == CV_32FC1 || type == CV_64FC1 || type == CV_32FC2 || type == CV_64FC2)", "C.type() == type && (((flags&GEMM_3_T) == 0 && C.rows == d_size.height && C.cols == d_size.width) || ((flags&GEMM_3_T) != 0 && C.rows == d_size.width && C.cols == d_size.height))", "delta.channels() == 1 && (delta.rows == src.rows || delta.rows == 1) && (delta.cols == src.cols || delta.cols == 1)", "((flags & CV_COVAR_ROWS) != 0) ^ ((flags & CV_COVAR_COLS) != 0)", "(D.rows == ((flags & CV_GEMM_A_T) == 0 ? A.rows : A.cols)) && (D.cols == ((flags & CV_GEMM_B_T) == 0 ? B.cols : B.rows)) && D.type() == A.type()", "type == v2.type() && type == icovar.type() && sz == v2.size() && len == icovar.rows && len == icovar.cols", "IPP:((ippicviDotProd_8u64f_C1R)(src1, len*sizeof(uchar), src2, len*sizeof(uchar), ippiSize(len, 1), &r)) >= 0", "IPP:((ippicviDotProd_16u64f_C1R)(src1, len*sizeof(ushort), src2, len*sizeof(ushort), ippiSize(len, 1), &r)) >= 0", "IPP:((ippicviDotProd_16s64f_C1R)(src1, len*sizeof(short), src2, len*sizeof(short), ippiSize(len, 1), &r)) >= 0", "IPP:((ippicviDotProd_32s64f_C1R)(src1, len*sizeof(int), src2, len*sizeof(int), ippiSize(len, 1), &r)) >= 0", "IPP:((ippicviDotProd_32f64f_C1R)(src1, len*sizeof(float), src2, len*sizeof(float), ippiSize(len, 1), &r, ippAlgHintFast)) >= 0", "IPP:((ippicvsDotProd_64f)(src1, src2, len, &r)) >= 0", "/build/master_pack-android/opencv/modules/core/src/matrix.cpp", "0 <= _dims && _dims <= CV_MAX_DIM", "You should explicitly call mapDevice/unmapDevice methods for ogl::Buffer object", "You should explicitly call mapHost/unmapHost methods for ogl::Buffer object", "You should explicitly call download method for cuda::GpuMat object", "Unknown/unsupported array type", "ch.size == mat.size && ch.depth() == mat.depth() && 0 <= coi && coi < mat.channels()", "checkScalar(value, type(), arr.kind(), _InputArray::CUDA_GPU_MAT)", "dims <= 2 && m.dims <= 2 && size() == m.size() && tp == m.type() && ((rows == 3 && cols == 1) || (cols*channels() == 3 && rows == 1))", "labels.isContinuous() && labels.type() == CV_32S && (labels.cols == 1 || labels.rows == 1) && labels.cols + labels.rows - 1 == data.rows", "normType == NORM_INF || normType == NORM_L1 || normType == NORM_L2", "abs(vecs[0].dot(vecs[1])) / (norm(vecs[0]) * norm(vecs[1])) <= FLT_EPSILON", "mtype == type0 || (CV_MAT_CN(mtype) == 1 && ((1 << type0) & fixedDepthMask) != 0)", "d == 2 && ((sizes[0] == sz.height && sizes[1] == sz.width) || (allowTransposed && sizes[0] == sz.width && sizes[1] == sz.height))", "d == 2 && (sizes[0] == 1 || sizes[1] == 1 || sizes[0]*sizes[1] == 0)", "mtype == type0 || (CV_MAT_CN(mtype) == CV_MAT_CN(type0) && ((1 << type0) & fixedDepthMask) != 0)", "Vectors with element size %d are not supported. Please, modify OutputArray::create()\n", "create() called for the missing output array", "CV_MAT_TYPE(mtype) == m.type()", "d == 2 && sz.area() == sizes[0]*sizes[1]", "!fixedSize() || len == vv.size()", "!fixedSize() || len == ((std::vector<uchar>*)v)->size() / esz", "src.size() == idx.size() && idx.type() == CV_32S && src.data != idx.data", "!fixedSize() || ((Mat*)obj)->size.operator()() == Size(_cols, _rows)", "!fixedSize() || ((UMat*)obj)->size.operator()() == Size(_cols, _rows)", "!fixedSize() || ((cuda::GpuMat*)obj)->size() == Size(_cols, _rows)", "!fixedSize() || ((ogl::Buffer*)obj)->size() == Size(_cols, _rows)", "!fixedSize() || ((cuda::HostMem*)obj)->size() == Size(_cols, _rows)", "src[i].dims <= 2 && src[i].rows == src[0].rows && src[i].type() == src[0].type()", "src[i].dims <= 2 && src[i].cols == src[0].cols && src[i].type() == src[0].type()", "src.rows == dst.cols && src.cols == dst.rows && src.type() == dst.type()", "op == CV_REDUCE_SUM || op == CV_REDUCE_MAX || op == CV_REDUCE_MIN || op == CV_REDUCE_AVG", "IPP:ipp_sortIdx(src, dst, flags)", "IPP:ipp_reduceSumC_8u16u16s32f_64f(srcmat, dstmat)", "IPP:ipp_reduceMaxC8u(srcmat, dstmat)", "IPP:ipp_reduceMaxC16u(srcmat, dstmat)", "IPP:ipp_reduceMaxC16s(srcmat, dstmat)", "IPP:ipp_reduceMaxC32f(srcmat, dstmat)", "IPP:ipp_reduceMinC8u(srcmat, dstmat)", "IPP:ipp_reduceMinC16u(srcmat, dstmat)", "IPP:ipp_reduceMinC16s(srcmat, dstmat)", "IPP:ipp_reduceMinC32f(srcmat, dstmat)", "/build/master_pack-android/opencv/modules/core/src/dxt.cpp", "type == CV_32FC1 || type == CV_32FC2 || type == CV_64FC1 || type == CV_64FC2", "This mode (using nonzero_rows with a single-column matrix) breaks the function's logic, so it is prohibited.\nFor fast convolution/correlation use 2-column matrix or single-row matrix instead", "IPP:(ippi_DCT_32f(src, src_step, dst, dst_step, width, height, isInverse, isRowTransform))", "#description: OpenCV trace file", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/utility.hpp", "/build/master_pack-android/opencv/modules/core/src/trace.cpp", "OpenCV parent region exceeds children count. Bailout", "Parent region exceeds children count. Bailout", "Region location is disabled. Bailout", "OPENCV_TRACE_MAX_CHILDREN_OPENCV", "/build/master_pack-android/opencv/modules/core/src/cuda_host_mem.cpp", "/build/master_pack-android/opencv/modules/core/src/stat.dispatch.cpp", "/build/master_pack-android/opencv/modules/core/src/arithm.cpp", "The operation is neither 'array op array' (where arrays have the same size and type), nor 'array op scalar', nor 'scalar op array'", "The operation is neither 'array op array' (where arrays have the same size and the same number of channels), nor 'array op scalar', nor 'scalar op array'", "When the input arrays in add/subtract/multiply/divide functions have different types, the output array type must be explicitly specified", "The lower bounary is neither an array of the same size and same type as src, nor a scalar", "The upper bounary is neither an array of the same size and same type as src, nor a scalar", "op == CMP_LT || op == CMP_LE || op == CMP_EQ || op == CMP_NE || op == CMP_GE || op == CMP_GT", "The operation is neither 'array op array' (where arrays have the same size and the same type), nor 'array op scalar', nor 'scalar op array'", "/build/master_pack-android/opencv/modules/core/src/convert.fp16.cpp", "[WARNING] The cvflann::set_distance_type function is deperecated, use cv::flann::GenericIndex<Distance> instead.", "[ERROR] cvflann::set_distance_type only provides backwards compatibility for the L1 and L2 distances. For other distance types you must use cv::flann::GenericIndex<Distance>", "LSH is not implemented for that type", "Unknown/unsupported distance type", "/build/master_pack-android/opencv/modules/flann/src/miniflann.cpp", "LSH index does not support radiusSearch operation", "query.type() == type && indices.type() == CV_32S && dists.type() == dtype", "query.isContinuous() && indices.isContinuous() && dists.isContinuous()", "/build/master_pack-android/opencv/modules/flann/include/opencv2/flann/general.h", "Invalid key_size (=%d). Valid values for your system are %d <= key_size < %d.", "/build/master_pack-android/opencv/modules/flann/include/opencv2/flann/lsh_table.h", "Can not open file %s for writing FLANN index\n", "I can only search one feature at a time for range search\n", "Unknown algorithm for choosing initial centers.", "Invalid index file, cannot read", "Invalid index file, wrong signature", "Datatype of saved index is different than of the one to be created.", "The index saved belongs to a different dataset", "Only continuous arrays are supported", "Reading FLANN index error: unsupported feature type %d for the index type %d\n", "Reading FLANN index error: unsupported distance type %d\n", "Reading FLANN index error: the saved data size (%d, %d) or type (%d) is different from the passed one (%d, %d), %d\n", "DataType<ElementType>::type == data.type() && data.isContinuous()", "Ground truth is not computed for as many neighbors as requested", "%8d %10.4g %10.5g %10.5g %10.5g\n", "  Nodes  Precision(%)   Time(s)   Time/vec(ms)  Mean dist\n", "---------------------------------------------------------\n", "No need for linear estimation\n", "KMeans algorithm, estimating cluster border factor\n", "Required number of checks: %d \n", "It doesn't make any sense to use more than one tree for exact search", "Branching factor must be at least 2", "KD-TREE, Step 1: Exploring parameter space\n", "KDTree using params: trees=%d\n", "KDTree buildTime=%g, searchTime=%g\n", "KMEANS, Step 1: Exploring parameter space\n", "KMeansTree using params: max_iterations=%d, branching=%d\n", "KMeansTree buildTime=%g, searchTime=%g, build_weight=%g\n", "Entering autotuning, dataset size: %d, sampleSize: %d, testSampleSize: %d, target precision: %g\n", "Choosing linear, dataset too small\n", "----------------------------------------------------\n", "/build/master_pack-android/opencv/modules/imgproc/src/imgwarp.cpp", "Unknown/unsupported interpolation type", "dst.cols < SHRT_MAX && dst.rows < SHRT_MAX && src.cols < SHRT_MAX && src.rows < SHRT_MAX", "((map1.type() == CV_32FC2 || map1.type() == CV_16SC2) && map2.empty()) || (map1.type() == CV_32FC1 && map2.type() == CV_32FC1)", "dstm1type == CV_16SC2 || dstm1type == CV_32FC1 || dstm1type == CV_32FC2", "(m1type == CV_16SC2 && (nninterpolate || m2type == CV_16UC1 || m2type == CV_16SC1)) || (m2type == CV_16SC2 && (nninterpolate || m1type == CV_16UC1 || m1type == CV_16SC1)) || (m1type == CV_32FC1 && m2type == CV_32FC1) || (m1type == CV_32FC2 && m2->empty())", "(M0.type() == CV_32F || M0.type() == CV_64F) && M0.rows == 3 && M0.cols == 3", "src.checkVector(2, CV_32F) == 4 && dst.checkVector(2, CV_32F) == 4", "src.checkVector(2, CV_32F) == 3 && dst.checkVector(2, CV_32F) == 3", "(dst_width * dst_height > 0) || (inv_scale_x > 0 && inv_scale_y > 0)", "_src.channels() <= 4 || (interpolation != INTER_LANCZOS4 && interpolation != INTER_CUBIC)", "(M0.type() == CV_32F || M0.type() == CV_64F) && M0.rows == 2 && M0.cols == 3", "IPP:ipp_resize(src_data, src_step, src_width, src_height, dst_data, dst_step, dsize.width, dsize.height, inv_scale_x, inv_scale_y, depth, cn, interpolation)", "/build/master_pack-android/opencv/modules/imgproc/src/linefit.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/samplers.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/grabcut.cpp", "mask element value must be equal GC_BGD or GC_FGD or GC_PR_BGD or GC_PR_FGD", "_model must have CV_64FC1 type, rows == 1 and cols == 13*componentsCount", "/build/master_pack-android/opencv/modules/imgproc/src/gcgraph.hpp", "/build/master_pack-android/opencv/modules/imgproc/src/geometry.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/templmatch.cpp", "depth == tdepth || tdepth == CV_32F", "corrsize.height <= img.rows + templ.rows - 1 && corrsize.width <= img.cols + templ.cols - 1", "(depth == CV_8U || depth == CV_32F) && type == _templ.type() && _img.dims() <= 2", "_img.size().height <= _templ.size().height && _img.size().width <= _templ.size().width", "result.size() == cv::Size(std::abs(img.cols - templ.cols) + 1, std::abs(img.rows - templ.rows) + 1) && result.type() == CV_32F", "IPP:ipp_matchTemplate(img, templ, result, method)", "/build/master_pack-android/opencv/modules/imgproc/src/gabor.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/rotcalipers.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/filter.cpp", "wholeSize.width > 0 && wholeSize.height > 0", "kernel.type() == DataType<DT>::type && (kernel.rows == 1 || kernel.cols == 1)", "(symmetryType & (KERNEL_SYMMETRICAL | KERNEL_ASYMMETRICAL)) != 0 && this->ksize <= 5", "cn == CV_MAT_CN(bufType) && ddepth >= std::max(sdepth, CV_32S) && kernel.type() == ddepth", "Unsupported combination of source format (=%d), and buffer format (=%d)", "kernel.type() == DataType<ST>::type && (kernel.rows == 1 || kernel.cols == 1)", "cn == CV_MAT_CN(bufType) && sdepth >= std::max(ddepth, CV_32S) && kernel.type() == sdepth", "Unsupported combination of buffer format (=%d), and destination format (=%d)", "columnBorderType != BORDER_WRAP", "0 <= anchor.x && anchor.x < ksize.width && 0 <= anchor.y && anchor.y < ksize.height", "kernelX.type() == kernelY.type() && (kernelX.cols == 1 || kernelX.rows == 1) && (kernelY.cols == 1 || kernelY.rows == 1)", "roi.x >= 0 && roi.y >= 0 && roi.width >= 0 && roi.height >= 0 && roi.x + roi.width <= wholeSize.width && roi.y + roi.height <= wholeSize.height", "ktype == CV_8U || ktype == CV_32S || ktype == CV_32F || ktype == CV_64F", "/build/master_pack-android/opencv/modules/imgproc/src/filterengine.hpp", "Unsupported combination of source format (=%d), and destination format (=%d)", "anchor.inside(Rect(0, 0, ksize.width, ksize.height))", "/build/master_pack-android/opencv/modules/imgproc/src/sumpixels.cpp", "sum.data == sum0.data && sqsum.data == sqsum0.data && tilted.data == tilted0.data", "IPP:ipp_integral(depth, sdepth, sqdepth, src, srcstep, sum, sumstep, sqsum, sqsumstep, tilted, tstep, width, height, cn)", "/build/master_pack-android/opencv/modules/imgproc/src/featureselect.cpp", "_mask.empty() || (_mask.type() == CV_8UC1 && _mask.sameSize(_image))", "/build/master_pack-android/opencv/modules/imgproc/src/thresh.cpp", "src.size == dst.size && src.channels() == dst.channels() && (src.depth() == dst.depth() || dst.depth() == CV_8U)", "IPP:(ipp_getThreshVal_Otsu_8u(_src.ptr(), step, size, thresh))", "/build/master_pack-android/opencv/modules/imgproc/src/shapedescr.cpp", "Only curves with integer coordinates are supported in case of contour slice", "/build/master_pack-android/opencv/modules/imgproc/src/deriv.cpp", "IPP:(ipp_Laplacian(_src, _dst, ksize, scale, delta, borderType))", "IPP:(ipp_Deriv(_src, _dst, dx, dy, 0, scale, delta, borderType))", "IPP:(ipp_Deriv(_src, _dst, dx, dy, ksize, scale, delta, borderType))", "/build/master_pack-android/opencv/modules/imgproc/src/canny.cpp", "(_dst.getObj() != _src.getObj() || _src.type() == CV_8UC1) && \"Inplace parameters are not supported\"", "src.size == dst.size && src.depth() == CV_8U && dst.type() == CV_8U", "deque::_M_new_elements_at_front", "deque::_M_new_elements_at_back", "IPP:ipp_Canny(Mat(), dx, dy, dst, (float)low_thresh, (float)high_thresh, L2gradient, 0)", "IPP:ipp_Canny(src, Mat(), Mat(), dst, (float)low_thresh, (float)high_thresh, L2gradient, aperture_size)", "/build/master_pack-android/opencv/modules/imgproc/src/histogram.cpp", "mutex: pthread_mutex_lock failed", "H1.type() == H2.type() && H1.depth() == CV_32F", "it.planes[0].isContinuous() && it.planes[1].isContinuous()", "dims > 0 && dims == H2.dims() && H1.type() == H2.type() && H1.type() == CV_32F", "Only uniform bin ranges can be used here (to avoid memory allocation)", "Too small number of histograms", "Either ranges, either uniform ranges should be provided", "mutex: pthread_mutex_init failed", "mask.size() == imsize && mask.channels() == 1", "csz == 0 || csz == dims || (csz == 1 && _1d)", "rsz == dims*2 || (rsz == 2 && _1d) || (rsz == 0 && images.depth(0) == CV_8U)", "_dst.size() == images[0].size() && _dst.depth() == images[0].depth()", "rsz == dims*2 || (rsz == 0 && images.depth(0) == CV_8U)", "Bad normalization factor (set it to 1.0 if unsure)", "The output map must be (W-w+1 x H-h+1), where the input images are (W x H) each and the patch is (w x h)", "IPP:(ipp_calchist(images[0], hist, histSize[0], ranges, uniform, accumulate))", "/build/master_pack-android/opencv/modules/imgproc/src/blend.cpp", "size == _src2.size() && size == _weights1.size() && size == _weights2.size()", "type == _src2.type() && _weights1.type() == CV_32FC1 && _weights2.type() == CV_32FC1", "/build/master_pack-android/opencv/modules/imgproc/src/undistort.cpp", "A.size() == Size(3,3) && A.size() == R.size()", "distCoeffs.size() == Size(1, 4) || distCoeffs.size() == Size(4, 1) || distCoeffs.size() == Size(1, 5) || distCoeffs.size() == Size(5, 1) || distCoeffs.size() == Size(1, 8) || distCoeffs.size() == Size(8, 1) || distCoeffs.size() == Size(1, 12) || distCoeffs.size() == Size(12, 1) || distCoeffs.size() == Size(1, 14) || distCoeffs.size() == Size(14, 1)", "CV_IS_MAT(_src) && CV_IS_MAT(_dst) && (_src->rows == 1 || _src->cols == 1) && (_dst->rows == 1 || _dst->cols == 1) && _src->cols + _src->rows - 1 == _dst->rows + _dst->cols - 1 && (CV_MAT_TYPE(_src->type) == CV_32FC2 || CV_MAT_TYPE(_src->type) == CV_64FC2) && (CV_MAT_TYPE(_dst->type) == CV_32FC2 || CV_MAT_TYPE(_dst->type) == CV_64FC2)", "CV_IS_MAT(_cameraMatrix) && _cameraMatrix->rows == 3 && _cameraMatrix->cols == 3", "CV_IS_MAT(_distCoeffs) && (_distCoeffs->rows == 1 || _distCoeffs->cols == 1) && (_distCoeffs->rows*_distCoeffs->cols == 4 || _distCoeffs->rows*_distCoeffs->cols == 5 || _distCoeffs->rows*_distCoeffs->cols == 8 || _distCoeffs->rows*_distCoeffs->cols == 12 || _distCoeffs->rows*_distCoeffs->cols == 14)", "CV_IS_MAT(matP) && matP->rows == 3 && (matP->cols == 3 || matP->cols == 4)", "src.isContinuous() && (src.depth() == CV_32F || src.depth() == CV_64F) && ((src.rows == 1 && src.channels() == 2) || src.cols*src.channels() == 2)", "(distCoeffs0.cols == 1 || distCoeffs0.rows == 1) && (ndcoeffs == 4 || ndcoeffs == 5 || ndcoeffs == 8 || ndcoeffs == 12 || ndcoeffs == 14)", "/build/master_pack-android/opencv/modules/imgproc/src/phasecorr.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/utils.cpp", "The matrix can not be converted to point sequence because of inappropriate element type", "The matrix converted to point sequence must be 1-dimensional and continuous", "/build/master_pack-android/opencv/modules/imgproc/src/demosaicing.cpp", "Bayer->RGB Edge-Aware demosaicing only currently supports 8u and 16u types", "unused method in UserColormap init(%d).", "/build/master_pack-android/opencv/modules/imgproc/src/colormap.cpp", "cv::ColorMap only supports source images of type CV_8UC1 or CV_8UC3", "ssize.width > 0 && ssize.height > 0 && std::abs(dsize.width*2 - ssize.width) <= 2 && std::abs(dsize.height*2 - ssize.height) <= 2", "/build/master_pack-android/opencv/modules/imgproc/src/pyramids.cpp", "std::abs(dsize.width - ssize.width*2) == dsize.width % 2 && std::abs(dsize.height - ssize.height*2) == dsize.height % 2", "IPP:(ipp_buildpyramid( _src, _dst, maxlevel, borderType))", "IPP:(ipp_pyrup( _src, _dst, _dsz, borderType))", "IPP:(ipp_pyrdown( _src, _dst, _dsz, borderType))", "coeffs[i*3] >= 0 && coeffs[i*3+1] >= 0 && coeffs[i*3+2] >= 0 && softfloat(coeffs[i*3]) + softfloat(coeffs[i*3+1]) + softfloat(coeffs[i*3+2]) < softfloat(1.5f)", "/build/master_pack-android/opencv/modules/imgproc/src/color.cpp", "coeffs[i*3] >= 0 && coeffs[i*3+1] >= 0 && coeffs[i*3+2] >= 0 && coeffs[i*3] + coeffs[i*3+1] + coeffs[i*3+2] < 2*(1 << lab_shift)", "c0 >= 0 && c1 >= 0 && c2 >= 0 && c0 + c1 + c2 < softfloat((int)LAB_CBRT_TAB_SIZE)", "(dcn == 3 || dcn == 4) && scn == 2 && depth == CV_8U", "scn == 1 && (dcn == 3 || dcn == 4)", "scn == 3 && (dcn == 3 || dcn == 4)", "(scn == 3 || scn == 4) && (depth == CV_8U || depth == CV_32F)", "scn == 3 && (dcn == 3 || dcn == 4) && (depth == CV_8U || depth == CV_32F)", "(scn == 3 || scn == 4) && depth == CV_8U", "/build/master_pack-android/opencv/modules/imgproc/src/matchcontours.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/floodfill.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/clahe.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/smooth.cpp", "Unsupported combination of sum format (=%d), and destination format (=%d)", "ksize.width > 0 && ksize.width % 2 == 1 && ksize.height > 0 && ksize.height % 2 == 1", "(src.type() == CV_8UC1 || src.type() == CV_8UC3) && src.data != dst.data", "(src.type() == CV_32FC1 || src.type() == CV_32FC3) && src.data != dst.data", "dst.size() == src.size() && (smooth_type == CV_BLUR_NO_SCALE || dst.type() == src.type())", "IPP:ipp_bilateralFilter(src, dst, d, sigmaColor, sigmaSpace, borderType)", "IPP:ipp_medianFilter(src0, dst, ksize)", "IPP:(ipp_GaussianBlur( _src, _dst, ksize, sigma1, sigma2, borderType))", "IPP:ipp_boxfilter(src, dst, ksize, anchor, normalize, borderType)", "/build/master_pack-android/opencv/modules/imgproc/src/drawing.cpp", "pts && npts && ncontours >= 0 && 0 <= thickness && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT", "radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT", "axes.width >= 0 && axes.height >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT", "box.size.width >= 0 && box.size.height >= 0 && thickness <= MAX_THICKNESS", "/build/master_pack-android/opencv/modules/imgproc/src/approx.cpp", "header_size is negative. Pass 0 to make the destination header_size == input header_size", "CV_SEQ_ELTYPE(src_seq) == CV_32SC2 || CV_SEQ_ELTYPE(src_seq) == CV_32FC2", "/build/master_pack-android/opencv/modules/imgproc/src/generalized_hough.cpp", "templDx_.type() == CV_32FC1 && templDx_.size() == templEdges_.size()", "templDy_.type() == templDx_.type() && templDy_.size() == templEdges_.size()", "imageDy_.type() == imageDx_.type() && imageDy_.size() == imageSize_", "levels_ > 0 && r_table_.size() == static_cast<size_t>(levels_ + 1)", "imageDx_.type() == CV_32FC1 && imageDx_.size() == imageEdges_.size()", "imageDy_.type() == imageDx_.type() && imageDy_.size() == imageEdges_.size()", "minAngle_ >= 0.0 && minAngle_ < maxAngle_ && maxAngle_ <= 360.0", "/build/master_pack-android/opencv/modules/imgproc/src/min_enclosing_triangle.cpp", "(pointsMat.checkVector(2) > 0) && ((pointsMat.depth() == CV_32F) || (pointsMat.depth() == CV_32S))", "The position of the vertex C on side B could not be determined, because the considered lines do not intersect.", "The position of side B could not be determined, because gamma(b) could not be computed.", "MWOMOV OMSMUNUPSQ OQSQURUUSVOV", "MXRMPNOPOSPURVSVUUVSVPUNSMRM STVW", "MXRMPNOPOSPURVSVUUVSVPUNSMRM QQTR TQQR", "MWQMNV QMTMVNVPSQPQ SQURUTTURVNV", "LXVPUNTMRMPNOONQNSOUPVRVTUUSRS", "LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM", "LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM QVPUPTQSRSSTTVUWVW", "MWQMNV QMUMVNVPUQSRPR QRRUSVTVUU", "MWUPUVTXRYPY USTQRPPQOSPURVTUUS", "KYMPMV MSNQOPPPQQRSRV RSSQTPUPVQWSWV", "MWOTQVSVTUTSSRPQRQTPUOUNTMRMQNPPOTNY", "MWTNSMRMQNQORPTQUSTURVPUOSPQRP", "NWTMSNSOTP UPSPQQPSPUQVSWSXRYQY", "LXNQOPPPQQQSPV QSRQTPUPVQVSUVTY", "LXNQOPPPQQQURVSVTUUSVPVNUMTMSNSPTRUSWT", "LYPPMY UPTSSUQVPVOUOS TSTUUVVVWU", "NWTMSNSOTP UPSPQQQRRSTS SSQTPUPVQWSXSYRZQZ", "MXPPOQOSPURVSVUUVSVQUPTPSQRSQY", "LWTSSQQPOQNSOUQVSUTS UPTSTUUVVV", "LWTSSQQPOQNSOUQVSUTS VMTSTUUVVV", "MXUSTQRPPQOSPURVTUUS VPTVSXRYPYOX", "OUSMSNTNTMSM QPRPSQSRRVQXPYOYNX", "JYKPLPMQMSLV MSNQOPQPRQRSQV RSSQTPVPWQWRVTVUWVXV", "MWNPOPPQPSOV PSQQRPTPUQURTTTUUVVV", "MXNPOPPQPSNY PSQUSVUUVSUQSPQQPS", "MWNPOPPQPROTOUPVRVSUTS UPTSTUUVVV", "KYLPMPNQNRMTMUNVPVQURSSP RSRUSVUVVUWRWP", "MWOQPPQPRQRUSVTVUU VQUPTPSQQUPVOVNU", "MWNPOPPQPROTOUPVRVSUTS UPSVRXQYOYNX", "MWRMQNPPOSOVPWRWSVTTUQUNTMRM PRTR", "KYTPTSUTVTWSWQVOUNSMQMONNOMQMSNUOVQWSWUV TQSPQPPQPSQTSTTS", "LYPMQNQOPPOPNONNOMPMSNUNWMNV USTTTUUVVVWUWTVSUS", "MWQMONOPQQSQUPUNSMQM QQOROUQVSVUUURSQ", "NWPNRMSMUNUPRQRRSRSQUP RURVSVSURU", "MWRKRX UNSMQMONOPQQTRUSUUSVQVOU", "LXVRURTSSURVOVNUNSORRQSPSNRMPMONOPQSSUUVVV", "LXNNOQOSNV VNUQUSVV NNQOSOVN NVQUSUVV", "LYRQQPOPNQNSOTQTRSSQTPVPWQWSVTTTSSRQ", "H\\MPLQLRMSNSOROQNPMP MQMRNRNQMQ WPVQVRWSXSYRYQXPWP WQWRXRXQWQ", "F^ISJQLPNPPQTTVUXUZT[Q ISJPLONOPPTSVTXTZS[Q IYJWLVNVPWTZV[X[ZZ[W IYJVLUNUPVTYVZXZZY[W", "F^ISJQLPNPPQTTVUXUZT[Q ISJPLONOPPTSVTXTZS[Q IW[W I[[[", "KYQVOUNSNQOOQNSNUOVQVSUUSVQV SVVS QVVQ OUUO NSSN NQQN", "LYPFSCSP RDRP OPVP MRXR OVOWNWNVOUQTTTVUWWVYTZQ[O\\N^Na TTUUVWUYTZ N`O_P_S`V`W_ P_SaVaW_W^", "LYPFSCSP RDRP OPVP MRXR OVOWNWNVOUQTTTVUWWVYTZ TTUUVWUYTZ RZTZV[W]W^V`TaQaO`N_N^O^O_ TZU[V]V^U`Ta", "LYPFSCSP RDRP OPVP MRXR VVVWWWWVVUTTRTPUOVNYN^O`QaTaV`W^W\\VZTYQYN[ RTPVOYO^P`Qa TaU`V^V\\UZTY", "LYPFSCSP RDRP OPVP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYOEOFNFNEODQCTCVDWFVHTIQJOKNMNP TCUDVFUHTI NOONPNSOVOWN PNSPVPWNWM MRXR OVOWNWNVOUQTTTVUWWVYTZ TTUUVWUYTZ RZTZV[W]W^V`TaQaO`N_N^O^O_ TZU[V]V^U`Ta", "LYOEOFNFNEODQCTCVDWFVHTI TCUDVFUHTI RITIVJWLWMVOTPQPOONNNMOMON TIUJVLVMUOTP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYOCNI OCVC ODSDVC NIOHQGTGVHWJWMVOTPQPOONNNMOMON TGUHVJVMUOTP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYNCNG VERLPP WCTIQP NEPCRCUE NEPDRDUEVE MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYOCNI OCVC ODSDVC NIOHQGTGVHWJWMVOTPQPOONNNMOMON TGUHVJVMUOTP MRXR VVVWWWWVVUTTRTPUOVNYN^O`QaTaV`W^W\\VZTYQYN[ RTPVOYO^P`Qa TaU`V^V\\UZTY", "LYPFSCSP RDRP OPVP MRXR SVSa TTTa TTM]X] QaVa", "LYOEOFNFNEODQCTCVDWFVHTI TCUDVFUHTI RITIVJWLWMVOTPQPOONNNMOMON TIUJVLVMUOTP MRXR SVSa TTTa TTM]X] QaVa", "F^YXWZU[R[PZMXKWIWHXHZI[K[MZOWPURQTKWGYFZF[G\\H[IZH[G[FZFYFWGVHTLRPPVNZMZ OPUP", "E^P[MZJXHUGRGOHLJIMGPFTFWGYI[L\\O\\R[UYXVZS[P[ NJNW OJOW LJSJVKWMWNVPSQOQ SJUKVMVNUPSQ LWQW SQTRUVVWWWXV SQURVVWW", "E^P[MZJXHUGRGOHLJIMGPFTFWGYI[L\\O\\R[UYXVZS[P[ UKVJVNUKSJPJNKMLLOLRMUNVPWSWUVVT PJNLMOMRNUPW", "CaaOdNfLgKfKdLaN^P\\SZWX", "F^MMKLJJJIKGMFNFPGQIQKPONULYJ[H[GZGX ^I^G]F\\FZGXIVLTNROPO ROSQSXTZU[V[XZYY[V", "I\\MRORSQVOXMYKYHXFVFUGTISNRSQVPXNZL[J[IZIXJWLWNXQZT[V[YZ[X", "@aEMCLBJBICGEFFFHGIIIKHPGTE[ GTJLLHMGOFPFRGSISKRPQTO[ QTTLVHWGYFZF\\G]I]K\\PZWZZ[[\\[^Z_YaaF_G\\JYNVTS[", "F^NLLLKKKILGNFPFRGSISLQUQXRZT[V[XZYXYVXUVU ]I]G\\FZFXGVITLPUNXLZJ[H[GZGX", "F]KMILHJHIIGKFLFNGOIOKNOMRLVLXMZN[P[RZTXVUWSYM [FYMVWT]RbPfNgMfMdNaP^S[VY[V", "H]ULTNSOQPOPNNNLOIQGTFWFYGZIZMYPWTTWPZN[K[JZJXKWNWPXQYR[R^QaPcNfLgKfKdLaN^Q[TYZV", "I\\XMX[ XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "H[LFL[ LPNNPMSMUNWPXSXUWXUZS[P[NZLX", "I[XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "I\\XFX[ XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "I[LSXSXQWOVNTMQMONMPLSLUMXOZQ[T[VZXX", "I\\XMX]W`VaTbQbOa XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "CaGMG[ GQJNLMOMQNRQR[ RQUNWMZM\\N]Q][", "I\\QMONMPLSLUMXOZQ[T[VZXXYUYSXPVNTMQM", "H[LMLb LPNNPMSMUNWPXSXUWXUZS[P[NZLX", "I\\XMXb XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "J[XPWNTMQMNNMPNRPSUTWUXWXXWZT[Q[NZMX", "H]QMONMPLRKUKXLZN[P[RZUWWTYPZM QMSMTNUPWXXZY[Z[", "I\\UFSGQIOMNPMTLZKb UFWFYHYKXMWNUORO ROTPVRWTWWVYUZS[Q[OZNYMV", "I\\JPLNNMOMQNROSRSVR[ ZMYPXRR[P_Ob", "I[TMQMONMPLSLVMYNZP[R[TZVXWUWRVOTMRKQIQGRFTFVGXI", "JZWOVNTMQMONOPPRSS SSOTMVMXNZP[S[UZWX", "JYTFRGQHQIRJUKXK XKTMQONRMUMWNYP[S]T_TaSbQbP`", "H\\IQJOLMNMONOPNTL[ NTPPRNTMVMXOXRWWTb", "G\\HQIOKMMMNNNPMUMXNZO[Q[SZUWVUWRXMXJWGUFSFRHRJSMUPWRZT", "I[OMK[ YNXMWMUNQROSNS NSPTQUSZT[U[VZ", "H]OMIb NQMVMYO[Q[SZUXWT YMWTVXVZW[Y[[Y\\W", "JZTFRGQHQIRJUKXK UKRLPMOOOQQSTTVT TTPUNVMXMZO\\S^T_TaRbPb", "J[RMPNNPMSMVNYOZQ[S[UZWXXUXRWOVNTMRM", "I[MSMVNYOZQ[S[UZWXXUXRWOVNTMRMPNNPMSIb", "I][MQMONMPLSLVMYNZP[R[TZVXWUWRVOUNSM", "H\\IQJOLMNMONOPMVMYO[Q[TZVXXTYPYM", "G]ONMOKQJTJWKYLZN[Q[TZWXYUZRZOXMVMTORSPXMb", "F]VFNb GQHOJMLMMNMPLULXMZO[Q[TZVXXUZP[M", "F]NMLNJQITIWJZK[M[OZQW RSQWRZS[U[WZYWZTZQYNXM", "L\\UUTSRRPRNSMTLVLXMZO[Q[SZTXVRUWUZV[W[YZZY\\V", "M[MVOSRNSLTITGSFQGPIOMNTNZO[P[RZTXUUURVVWWYW[V", "L\\UUTSRRPRNSMTLVLXMZO[Q[SZTXZF VRUWUZV[W[YZZY\\V", "NXOYQXRWSUSSRRQROSNUNXOZQ[S[UZVYXV", "OWOVSQUNVLWIWGVFTGSIQQNZKaJdJfKgMfNcOZP[R[TZUYWV", "L[UUTSRRPRNSMTLVLXMZO[Q[SZTY VRTYPdOfMgLfLdMaP^S\\U[XY[V", "M\\MVOSRNSLTITGSFQGPIOMNSM[ M[NXOVQSSRURVSVUUXUZV[W[YZZY\\V", "PWSMSNTNTMSM PVRRPXPZQ[R[TZUYWV", "PWSMSNTNTMSM PVRRLdKfIgHfHdIaL^O\\Q[TYWV", "M[MVOSRNSLTITGSFQGPIOMNSM[ M[NXOVQSSRURVSVUTVQV QVSWTZU[V[XZYY[V", "OWOVQSTNULVIVGUFSGRIQMPTPZQ[R[TZUYWV", "E^EVGSIRJSJTIXH[ IXJVLSNRPRQSQTPXO[ PXQVSSURWRXSXUWXWZX[Y[[Z\\Y^V", "J\\JVLSNROSOTNXM[ NXOVQSSRURVSVUUXUZV[W[YZZY\\V", "LZRRPRNSMTLVLXMZO[Q[SZTYUWUUTSRRQSQURWTXWXYWZV", "KZKVMSNQMUGg MUNSPRRRTSUUUWTYSZQ[ MZO[R[UZWYZV", "L[UUTSRRPRNSMTLVLXMZO[Q[SZ VRUUSZPaOdOfPgRfScS\\U[XY[V", "MZMVOSPQPSSSTTTVSYSZT[U[WZXYZV", "NYNVPSQQQSSVTXTZR[ NZP[T[VZWYYV", "OXOVQSSO VFPXPZQ[S[UZVYXV PNWN", "L[LVNRLXLZM[O[QZSXUU VRTXTZU[V[XZYY[V", "L[LVNRMWMZN[O[RZTXUUUR URVVWWYW[V", "I^LRJTIWIYJ[L[NZPX RRPXPZQ[S[UZWXXUXR XRYVZW\\W^V", "JZJVLSNRPRQSQZR[U[XYZV WSVRTRSSOZN[L[KZ", "L[LVNRLXLZM[O[QZSXUU VRPdOfMgLfLdMaP^S\\U[XY[V", "LZLVNSPRRRTTTVSXQZN[P\\Q^QaPdOfMgLfLdMaP^S\\WYZV", "J\\K[NZQXSVUSWOXKXIWGUFSGRHQJPOPTQXRZT[V[XZYY", "I[WUWRVOUNSMQMONMPLSLVMYNZP[R[TZVXWUXPXKWHVGTFRFPGNI", "JZWNUMRMPNNPMSMVNYOZQ[T[VZ MTUT", "J[TFRGPJOLNOMTMXNZO[Q[SZUWVUWRXMXIWGVFTF NPWP", "H\\VFNb QMNNLPKSKVLXNZQ[S[VZXXYUYRXPVNSMQM", "I[XOWNTMQMNNMOLQLSMUOWSZT\\T^S_Q_", "DaWNVLTKQKOLNMMOMRNTOUQVTVVUWS WKWSXUYV[V\\U]S]O\\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYY", "KYTBQEPHPJQMSOSPORSTSUQWPZP\\Q_Tb", "KYPBSETHTJSMQOQPURQTQUSWTZT\\S_Pb`OacPALBJCGEEGCJBLAPATBXCZE]G_JaLbPcTcXbZa]__]aZbXcTcPbLaJ_G]EZCXBTAPA", "<hP<K=G?DAAD?G=K<P<T=Y?]A`DcGeKgPhThYg]e`cc`e]gYhThPgKeGcD`A]?Y=T<P<", "){O)I*E+@-;073370;-@+E*I)O)U*[+_-d0i3m7q;t@wEyIzO{U{[z_ydwitmqqmtiwdy_z[{U{OzIyEw@t;q7m3i0d-_+[*U)O)", ">fRAPCMDJDGCEA>H@JAMAZB]D_G`M`PaRc RATCWDZD]C_AfHdJcMcZb]`_]`W`TaRc", "AcRAPCMDJDGCEABGAKAPBTDXG\\L`Rc RATCWDZD]C_AbGcKcPbT`X]\\X`Rc BHbH", "H[WPVQWRXQXPVNTMQMNNLPKSKULXNZQ[S[VZXX QMONMPLSLUMXOZQ[ LbXF", "KYRKMX RNVX RKWX OTTT KXPX TXYX", "JZNKNX OKOX LKSKVLWNVPSQ SKULVNUPSQ OQSQVRWTWUVWSXLX SQURVTVUUWSX", "KYVLWKWOVLTKQKOLNMMPMSNVOWQXTXVWWU QKOMNPNSOVQX", "JZNKNX OKOX LKSKVLWMXPXSWVVWSXLX SKULVMWPWSVVUWSX", "JYNKNX OKOX SOSS LKVKVOUK OQSQ LXVXVTUX", "JXNKNX OKOX SOSS LKVKVOUK OQSQ LXQX", "K[VLWKWOVLTKQKOLNMMPMSNVOWQXTXVW QKOMNPNSOVQX TXUWVU VSVX WSWX TSYS", "J[NKNX OKOX VKVX WKWX LKQK TKYK OQVQ LXQX TXYX", "LXSKSURWQX TKTUSWQXPXNWMUNTOUNV QKVK", "JZNKNX OKOX WKOS QQVX RQWX LKQK TKYK LXQX TXYX", "I\\MKMX NNRX NKRU WKRX WKWX XKXX KKNK WKZK KXOX UXZX", "JZNKNX OMVX OKVV VKVX LKOK TKXK LXPX", "KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK", "JYNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXQX", "KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK PWPUQTSTTUUZV[W[XZ TUUXVZW[", "JZNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXQX SRTSUWVXWXXW SRUSVWWX", "KZVMWKWOVMULSKQKOLNMNOOPQQTRVSWT NNOOQPTQVRWSWVVWTXRXPWOVNTNXOV", "J[NKNUOWQXTXVWWUWK OKOUPWQX LKQK UKYK", "I[LKOX MKOT RKOX RKUX SKUT XKUX JKOK VKZK", "KZNKVX OKWX WKNX LKQK TKYK LXQX TXYX", "LYNKRRRX OKSR WKSRSX LKQK TKYK PXUX", "KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK QOQT TOTT QQTQ QRTR", "JZMJLM XJWM PPOS UPTS MVLY XVWY MKWK MLWL PQTQ PRTR MWWW MXWX", "J[NKNX OKOX VKVX WKWX LKYK LXQX TXYX", "K[MKRQ NKSQMX MKWKXOVK NWWW MXWXXTVX", "KZMONLOKPKQLRORX XOWLVKUKTLSOSX MONMOLPLQMRO XOWMVLULTMSO PXUX", "KZRKRX SKSX QNNOMQMRNTQUTUWTXRXQWOTNQN QNOONQNROTQU TUVTWRWQVOTN PKUK PXUX", "J[RKRX SKSX LPMONOOSQU TUVSWOXOYP MONROTQUTUVTWRXO PKUK PXUX", "KZMVNXQXMRMONMOLQKTKVLWMXOXRTXWXXV OUNRNOOMQK TKVMWOWRVU NWPW UWWW", "KYTKKX SMTX TKUX NTTT IXNX RXWX", "JYPKLX QKMX NKUKWLWNVPSQ UKVLVNUPSQ OQRQTRUSUUTWQXJX RQTSTUSWQX", "KXVLWLXKWNVLTKRKPLOMNOMRMUNWPXRXTWUU RKPMOONRNVPX", "JYPKLX QKMX NKTKVLWNWQVTUVTWQXJX TKULVNVQUTTVSWQX", "JYPKLX QKMX SORS NKXKWNWK OQRQ JXTXUUSX", "JXPKLX QKMX SORS NKXKWNWK OQRQ JXOX", "KYVLWLXKWNVLTKRKPLOMNOMRMUNWPXRXTWUVVS RKPMOONRNVPX RXTVUS SSXS", "J[PKLX QKMX XKTX YKUX NKSK VK[K OQVQ JXOX RXWX", "LXUKRUQWPX VKSURWPXOXMWLUMTNUMV SKXK", "JZPKLX QKMX YKOR RPTX SPUX NKSK VK[K JXOX RXWX", "I\\OKKX OMPX PKQV YKPX YKUX ZKVX MKPK YK\\K IXMX SXXX", "JZPKLX PKTX QKTU XKTX NKQK VKZK JXNX", "KYRKPLOMNOMRMUNWPXRXTWUVVTWQWNVLTKRK RKPMOONRNVPX RXTVUTVQVMTK", "JYPKLX QKMX NKUKWLXMXOWQTROR UKWMWOVQTR JXOX", "KYRKPLOMNOMRMUNWPXRXTWUVVTWQWNVLTKRK RKPMOONRNVPX RXTVUTVQVMTK OWOVPUQURVRZS[T[UZ RVSZT[", "JZPKLX QKMX NKUKWLXMXOWQTROR UKWMWOVQTR SRTWUXVXWW SRTSUWVX JXOX", "KZWLXLYKXNWLUKRKPLOMOOPPUSVT ONPOURVSVVUWSXPXNWMULXMWNW", "J[PKMUMWOXSXUWVUYK QKNUNWOX NKSK WK[K", "I[NKMX OKNV TKMX TKSX UKTV ZKSX LKQK XK\\K", "KZPKTX QKUX YKLX NKSK VK[K JXOX RXWX", "LYPKRQPX QKSQ YKSQQX NKSK VK[K NXSX", "LZQOPPPQOQOPQOTOVQVWWXXX TOUQUWWX URRSPTOUOWPXSXTWUU RSPUPWQX", "JYNKNX OKOX ORPPROTOVPWRWUVWTXRXPWOU TOUPVRVUUWTX LKOK", "LXVQUQURVRVQUPSOQOOPNRNUOWQXSXUWVV QOPPOROUPWQX", "L[VKVX WKWX VRUPSOQOOPNRNUOWQXSXUWVU QOPPOROUPWQX TKWK VXYX", "LXOSVSVRUPSOQOOPNRNUOWQXSXUWVV USUQSO QOPPOROUPWQX", "LWTKULUMVMVLTKRKPMPX RKQMQX NOSO NXSX", "LYQOOQOSQUSUUSUQSOQO QOPQPSQU SUTSTQSO TPUOVO PTOUOXPYTYVZ OWPXTXVYV[T\\P\\N[NYPX", "J[NKNX OKOX ORPPROTOVPWRWX TOUPVRVX LKOK LXQX TXYX", "NWRKRLSLSKRK RORX SOSX POSO PXUX", "NWSKSLTLTKSK SOSZR\\ TOTZR\\P\\O[OZPZP[O[ QOTO", "JZNKNX OKOX WOOU RSVX SSWX LKOK TOYO LXQX TXYX", "F_JOJX KOKX KRLPNOPORPSRSX POQPRRRX SRTPVOXOZP[R[X XOYPZRZX HOKO HXMX PXUX XX]X", "J[NONX OOOX ORPPROTOVPWRWX TOUPVRVX LOOO LXQX TXYX", "LYQOOPNRNUOWQXTXVWWUWRVPTOQO QOPPOROUPWQX TXUWVUVRUPTO", "JYNON\\ OOO\\ ORPPROTOVPWRWUVWTXRXPWOU TOUPVRVUUWTX LOOO L\\Q\\", "KYUOU\\ VOV\\ URTPROPONPMRMUNWPXRXTWUU POOPNRNUOWPX S\\X\\", "KXOOOX POPX PRQPSOUOVPVQUQUPVP MOPO MXRX", "LYTOUPUQVQVPTOQOOPORQSTTVU OQQRTSVTVWTXQXOWOVPVPWQX", "J[NONUOWQXSXUWVU OOOUPWQX VOVX WOWX LOOO TOWO VXYX", "I[LOOX MOOU ROOX ROUX SOUU XOUX JOOO VOZO", "KYNOUX OOVX VONX LOQO TOXO LXPX SXXX", "KYNORX OORV VORXP[N\\M\\L[LZMZM[L[ LOQO TOXO", "K[QOOPNQMSMUNWPXQXSWUUWRXO QOOQNSNUOWPX QOSOUPWWXX SOTPVWXXYX", "KXRKPMOOMUK\\ QLPNNTL\\ RKTKVLVNUPRQ TKULUNTPRQ RQTRUTUVTWRXQXOWNT RQSRTTTVRX", "KYLQNOPORPSSSXR\\ LQNPPPRQSS WOVRSXQ\\", "KYSOQOOPNQMSMUNWPXRXTWUVVTVRUPRNQLQKRJTJUKVM QOOQNSNVPX RXTVUTUQSO QLRKTKVM", "LXVPTOQOOPOQPRRS QOPPPQRS RSOTNUNWPXSXUW RSPTOUOWPX", "LWRKQLQMSNVNVMSNPOOPNRNTOVPWRXSYS[R\\P\\O[ SNQOPPOROTPVRX", "IYJRKPLONOOPOQMX MONPNQLX OQPPROTOVPVRS\\ TOUPURR\\", "IYJSKQLPNPOQOVPX MPNQNUOWPXQXSWTVUTVQVNULTKRKQLQNRPURWS QXSVTTUQUNTK", "KYOOLX POMX UOVPWPVOTORQOR ORPSRWTXVWWU ORQSSWTX", "KZOOK\\ POL\\ NUNWOXQXSWTV VOTVTWUXWXXWYU WOUVUWVX", "JYNOMX OONUMX VRVOWOVRTUQWNXMX LOOO", "MXRKQLQMSNVN TNQOPPPRRSUS TNROQPQRRS SSPTOUOWQXSYTZT[S\\Q\\ SSQTPUPWQX", "KXQOOPNQMSMUNWPXRXTWUVVTVRUPSOQO QOOQNSNVPX RXTVUTUQSO", "IZPPMX PPNX TPSX TPTX KQMOXO KQMPXP", "JXSOQOOPNQMSJ\\ QOOQNSK\\ SOUPVRVTUVTWRXPXNWMU SOUQUTTVRX", "K[YOQOOPNQMSMUNWPXRXTWUVVTVRUPYP QOOQNSNVPX RXTVUTUQSO", "JXKRLPMOOOPPPROUOWPX NOOPORNUNWPXQXSWUUVRVOUOVP", "KZOPNQMSMUNWPXRXUWWUXRXPWOUOTPSRRUO\\ MUNVPWRWUVWTXR XQWPUPSR RUQXP\\", "KXMONOPPS[T\\ NOOPR[T\\U\\ VOTRNYL\\", "I[TKQ\\ UKP\\ JRKPLONOOPOVPWSWUVWT MONPNTOWPXSXUWWTXRYO", "JZNPPPPONPMQLSLUMWNXPXQWRUSR LUNWPWRU RRRWSXUXWVXTXRWPVOVPWP RUSWUWWV", "KZVOTVTWUXWXXWYU WOUVUWVX USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX", "JXOKMR PKNRNVPX NROPQOSOUPVRVTUVTWRXPXNWMUMR SOUQUTTVRX MKPK", "KXUPUQVQUPSOQOOPNQMSMUNWPXRXTWUV QOOQNSNVPX", "KZWKTVTWUXWXXWYU XKUVUWVX USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX UKXK", "KWNURTTSURUPSOQOOPNQMSMUNWPXRXTWUV QOOQNSNVPX", "MXWKXLXKVKTLSNPYO[N\\ VKULTNQYP[N\\L\\L[M\\ POVO", "KYVOTVSYR[ WOUVTYR[P\\M\\L[M[N\\ USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX", "KZPKLX QKMX OQPPROTOVPVRUUUWVX TOUPURTUTWUXWXXWYU NKQK", "MWSKSLTLTKSK NROPPOROSPSRRURWSX QORPRRQUQWRXTXUWVU", "MWTKTLULUKTK ORPPQOSOTPTRRYQ[O\\M\\M[N\\ ROSPSRQYP[O\\", "KXPKLX QKMX VPUQVQVPUOTORQPROR ORPSQWRXTXUWVU ORQSRWSX NKQK", "NVSKPVPWQXSXTWUU TKQVQWRX QKTK", "F^GRHPIOKOLPLQJX JOKPKQIX LQMPOOQOSPSQQX QORPRQPX SQTPVOXOZPZRYUYWZX XOYPYRXUXWYX[X\\W]U", "J[KRLPMOOOPPPQNX NOOPOQMX PQQPSOUOWPWRVUVWWX UOVPVRUUUWVXXXYWZU", "JYKRLPMOOOPPPQM\\ NOOPOQL\\ PQROTOVPWRWTVVUWSXQXOVOT TOVQVTUVSX J\\O\\", "KYVOR\\ WOS\\ USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX P\\U\\", "LXMRNPOOQORPRQPX POQPQQOX RQSPUOVOWPWQVQWP", "LYVPVQWQVPTOQOOPORQSTTVU OQQRTSVTVWTXQXOWNVOVOW", "NWSKPVPWQXSXTWUU TKQVQWRX POUO", "IZJRKPLONOOPORNUNWOX MONPNRMUMWOXQXSWTV VOTVTWUXWXXWYU WOUVUWVX", "H\\IRJPKOMONPNRMUMWNX LOMPMRLULWNXOXQWRV TORVRWTX UOSVSWTXUXWWYUZRZOYOZP", "JZMRNPPOROSPSR QORPRRQUPWNXMXLWLVMVLW XPWQXQXPWOVOTPSRRURWSX QUQWRXTXVWWU", "IYJRKPLONOOPORNUNWOX MONPNRMUMWOXQXSWTV VOTVSYR[ WOUVTYR[P\\M\\L[M[N\\", "KYWOWPVQNVMWMX NQOOROUQ OPRPUQVQ NVOVRWUW OVRXUXVV", "H[RKSLSMTMTLRKOKMLLNLX OKNLMNMX XKYLYMZMZLXKVKTMTX VKUMUX JOWO JXOX RXWX", "J[UKVLWLWKQKOLNNNX QKPLONOX VOVX WOWX LOWO LXQX TXYX", "J[WKQKOLNNNX QKPLONOX UKVLVX WKWX LOVO LXQX TXYX", "F_PKQLQMRMRLPKMKKLJNJX MKLLKNKX YKZL[L[KUKSLRNRX UKTLSNSX ZOZX [O[X HO[O HXMX PXUX XX]X", "F_PKQLQMRMRLPKMKKLJNJX MKLLKNKX [KUKSLRNRX UKTLSNSX YKZLZX [K[X HOZO HXMX PXUX XX]X", "LXVPTOROPPOQNSNUOWQXSXUW ROPQOSOVQX OSSS", "LYSKQLPMOONRNUOWPXRXTWUVVTWQWNVLUKSK SKQMPOOSOVPX RXTVUTVPVMUK OQVQ", "KZTKQ\\ UKP\\ QONPMRMUNWQXTXWWXUXRWPTOQO QOOPNRNUOWQX TXVWWUWRVPTO", "LXUPVRVQUPSOQOOPNRNTOVRX QOOQOTPVRXSYS[R\\P\\", "I[VKWLXLVKSKQLPMOOLYK[J\\ SKQMPOMYL[J\\H\\H[I\\ ZK[L[KYKWLVNSYR[Q\\ YKXLWNTYS[Q\\O\\O[P\\ LOYO", "IZVKWLXLXKSKQLPMOOLYK[J\\ SKQMPOMYL[J\\H\\H[I\\ VOTVTWUXWXXWYU WOUVUWVX LOWO", "IZVKWL XKSKQLPMOOLYK[J\\ SKQMPOMYL[J\\H\\H[I\\ WKTVTWUXWXXWYU XKUVUWVX LOVO", "F^SKTLTM ULSKPKNLMMLOIYH[G\\ PKNMMOJYI[G\\E\\E[F\\ ZK[L\\L\\KWKUL TMSOPYO[N\\ WKUMTOQYP[N\\L\\L[M\\ ZOXVXWYX[X\\W]U [OYVYWZX IO[O", "F^SKTLTM ULSKPKNLMMLOIYH[G\\ PKNMMOJYI[G\\E\\E[F\\ ZK[L \\KWKUL TMSOPYO[N\\ WKUMTOQYP[N\\L\\L[M\\ [KXVXWYX[X\\W]U \\KYVYWZX IOZO", "MWNROPPOROSPSRRURWSX QORPRRQUQWRXTXUWVU", "LYQKOLNONTOWQXTXVWWTWOVLTKQK QKPLOOOTPWQX TXUWVTVOULTK", "LYOMONNNNMOLQKTKVLWNVPTQQROSNUNX TKULVNUPTQ NWOVPVSWVWWV PVSXVXWVWU", "LYOMONNNNMOLQKTKVLWNVPTQ TKULVNUPTQ RQTQVRWTWUVWTXQXOWNVNUOUOV TQURVTVUUWTX", "LYOKNQ OKVK OLSLVK NQOPQOTOVPWRWUVWTXQXOWNVNUOUOV TOUPVRVUUWTX", "LYVMVNWNWMVLTKRKPLOMNPNUOWQXTXVWWUWSVQTPQPNR RKPMOPOUPWQX TXUWVUVSUQTP", "LYNKNO VMRTPX WKTQQX NMPKRKUM NMPLRLUMVM", "LYQKOLNNOPQQTQVPWNVLTKQK QKPLONPPQQ TQUPVNULTK QQORNTNUOWQXTXVWWUWTVRTQ QQPROTOUPWQX TXUWVUVTURTQ", "LYOVOUNUNVOWQXSXUWVVWSWNVLTKQKOLNNNPORQSTSWQ SXUVVSVNULTK QKPLONOPPRQS", "LYNNONOONONNOLQKTKVLWNWOVQSRRSRTST TKVMVPUQSR RWRXSXSWRW", "MWUHSJQMPPPTQWSZU\\ SJRLQPQTRXSZ", "MWOHQJSMTPTTSWQZO\\ QJRLSPSTRXQZ", "LWSHRIQKQMRORPPRRTRUQWQYR[S\\ RIQM QKRO RUQY QWR[", "MXQHRISKSMRORPTRRTRUSWSYR[Q\\ RISM SKRO RUSY SWR[", "H[YUWUUTTSRPQOONNNLOKQKRLTNUOUQTRSTPUOWNYN", "JZLTLRMPOPUSWSXR LRMQOQUTWTXRXP", "KYVSUPSOQOOPNQMSMUNWPXRXTWUVVTWQWNVLTKQKPLQLRK QOOQNSNVPX RXTVUTVQVNULTK", "I[XIXJYJYIXHVHTJSLROQUPYO[ UITKSORUQXPZN\\L\\K[KZLZL[", "I[XIXJYJYIXHVHTJSLROQUPYO[ UITKSORUQXPZN\\L\\K[KZLZL[ QNOONQNSOUQVSVUUVSVQUOSNQN", "H\\ZRYTWUVUTTSSQPPONNMNKOJQJRKTMUNUPTQSSPTOVNWNYOZQZR", "JZXKLX OKPLPNOOMOLNLLMKOKSLVLXK UTTUTWUXWXXWXUWTUT", "J[YPXPXQYQYPXOWOVPUTTVSWQXOXMWLVLTMSORRPSNSLRKPKOLONPQUWWXXXYW OXMVMTOR ONPPVWWX", "J[UPSOQOPQPRQTSTUS UOUSVTXTYRYQXNVLSKRKOLMNLQLRMUOWRXSXVW", "KZQHQ\\ THT\\ WLVLVMWMWLUKPKNLNNOPVSWT NNOOVRWTWVVWTXQXOWNVNUOUOVNV", "LXTLSLSMTMTLSKQKPLPNQPTRUS PNQOTQUSUUSW QPOROTPVSXTY OTPUSWTYT[S\\Q\\P[PZQZQ[P[", "LXRKQLRMSLRK RMRQ RQQSRVSSRQ RVR\\ POONNOOPPOTOUNVOUPTO", "LXRMSLRKQLRMRQQRSURV RQSRQURVRZQ[R\\S[RZ POONNOOPPOTOUNVOUPTO PXOWNXOYPXTXUWVXUYTX", "H\\QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK RQQRRSSRRQ", "LYQKPLPMQN TKULUMTN RNPOOQORPTRUSUUTVRVQUOSNRN RURY SUSY OWVW", "LYRKPLONOOPQRRSRUQVOVNULSKRK RRRX SRSX OUVU", "H\\QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK RKRY KRYR", "JYRRPQOQMRLTLUMWOXPXRWSUSTRR WMRR RMWMWR RMVNWR", "JZLLMKOKQLRNRPQRPSNT OKPLQNQQPS VKUX WKTX NTXT", "JYNKNU OKNR NROPQOSOUPVQVTTVTXUYVYWX SOUQUTTV LKOK", "LYONRKRQ VNSKSQ RQPROTOUPWRXSXUWVUVTURSQ RTRUSUSTRT", "JZRKRY MKMPNRPSTSVRWPWK LMMKNM QMRKSM VMWKXM OVUV", "JYNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXVXVUUX", "LYWKTKQLONNQNSOVQXTYWY WKTLRNQQQSRVTXWY", "JZRRPQOQMRLTLUMWOXPXRWSUSTRR SLQQ WMRR XQSS", "J[OUMULVLXMYOYPXPVNTMRMONMOLQKTKVLWMXOXRWTUVUXVYXYYXYVXUVU NMPLULWM", "J[OOMOLNLLMKOKPLPNNPMRMUNWOXQYTYVXWWXUXRWPUNULVKXKYLYNXOVO NWPXUXWW", "F^KHK\\ LHL\\ XHX\\ YHY\\ HH\\H H\\O\\ U\\\\\\", "H]KHRQJ\\ JHQQ JHYHZMXH K[X[ J\\Y\\ZWX\\", "KYVBTDRGPKOPOTPYR]T`Vb TDRHQKPPPTQYR\\T`", "KYNBPDRGTKUPUTTYR]P`Nb PDRHSKTPTTSYR\\P`", "JYTBQEPHPJQMSOSPORSTSUQWPZP\\Q_Tb RDQGQKRN RVQYQ]R`", "KZPBSETHTJSMQOQPURQTQUSWTZT\\S_Pb RDSGSKRN RVSYS]R`", "KYU@RCPFOIOLPOSVTYT\\S_Ra RCQEPHPKQNTUUXU[T^RaOd", "KYO@RCTFUIULTOQVPYP\\Q_Ra RCSETHTKSNPUOXO[P^RaUd", "F^[CZD[E\\D\\C[BYBWCUETGSJRNPZO^N` VDUFTJRVQZP]O_MaKbIbHaH`I_J`Ia`Y``NFH[ NFO[ OFPY \\FO[ \\FV[ ]FW[ KFOF \\F`F E[K[ S[Z[", "F_OFI[ OFVX OIV[ \\FV[ LFOF YF_F F[L[", "G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF SFQGOIMLLOKSKVLYN[ Q[SZUXWUXRYNYKXHVF", "F]OFI[ PFJ[ LFXF[G\\I\\K[NYPUQMQ XFZG[I[KZNXPUQ F[M[", "G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF SFQGOIMLLOKSKVLYN[ Q[SZUXWUXRYNYKXHVF LYLXMVOUPURVSXS_T`V`W^W] SXT^U_V_W^", "F^OFI[ PFJ[ LFWFZG[I[KZNYOVPMP WFYGZIZKYNXOVP RPTQURVZW[Y[ZYZX URWYXZYZZY F[M[", "G^ZH[H\\F[L[JZHYGVFRFOGMIMKNMONVRXT MKOMVQWRXTXWWYVZS[O[LZKYJWJUI[JYKY", "F_NFKQJUJXKZN[R[UZWXXU\\F OFLQKUKXLZN[ KFRF YF_F", "E_MFK[ NFLY UFK[ UFS[ VFTY ]FS[ JFQF ZF`F", "G]NFU[ OFV[ \\FH[ LFRF XF^F F[L[ R[X[", "H]NFRPO[ OFSPP[ ]FSP LFRF YF_F L[S[", "H\\KILKXWYYY[ LLXX KIKKLMXYY[ PPLTKVKXLZK[ KVMZ LTLVMXMZK[ SSXN VIVLWNYNYLWKVI VIWLYN", "H\\QIK[ SIY[ RIX[ MUVU I[O[ U[[[ QBOCNENGOIQJSJUIVGVEUCSBQB", "I]NONPMPMONNPMTMVNWOXQXXYZZ[ WOWXXZZ[[[ WQVRPSMTLVLXMZP[S[UZWX PSNTMVMXNZP[", "G\\LFL[ MFM[ MPONQMSMVNXPYSYUXXVZS[Q[OZMX SMUNWPXSXUWXUZS[ IFMF", "H[WPVQWRXQXPVNTMQMNNLPKSKULXNZQ[S[VZXX QMONMPLSLUMXOZQ[", "H]WFW[ XFX[ WPUNSMQMNNLPKSKULXNZQ[S[UZWX QMONMPLSLUMXOZQ[ TFXF W[[[", "H[LSXSXQWOVNTMQMNNLPKSKULXNZQ[S[VZXX WSWPVN QMONMPLSLUMXOZQ[", "KXUGTHUIVHVGUFSFQGPIP[ SFRGQIQ[ MMUM M[T[", "I\\QMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM ONNPNTOV UVVTVPUN VOWNYMYNWN NUMVLXLYM[P\\U\\X]Y^ LYMZP[U[X\\Y^Y_XaUbObLaK_K^L\\O[", "G]LFL[ MFM[ MPONRMTMWNXPX[ TMVNWPW[ IFMF I[P[ T[[[", "MXRFQGRHSGRF RMR[ SMS[ OMSM O[V[", "MXSFRGSHTGSF TMT_SaQbObNaN`O_P`Oa SMS_RaQb PMTM", "G\\LFL[ MFM[ WMMW RSX[ QSW[ IFMF TMZM I[P[ T[Z[", "BcGMG[ HMH[ HPJNMMOMRNSPS[ OMQNRPR[ SPUNXMZM]N^P^[ ZM\\N]P][ DMHM D[K[ O[V[ Z[a[", "G]LML[ MMM[ MPONRMTMWNXPX[ TMVNWPW[ IMMM I[P[ T[[[", "H\\QMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMQM QMONMPLSLUMXOZQ[ S[UZWXXUXSWPUNSM", "G\\LMLb MMMb MPONQMSMVNXPYSYUXXVZS[Q[OZMX SMUNWPXSXUWXUZS[ IMMM IbPb", "H\\WMWb XMXb WPUNSMQMNNLPKSKULXNZQ[S[UZWX QMONMPLSLUMXOZQ[ Tb[b", "IZNMN[ OMO[ OSPPRNTMWMXNXOWPVOWN KMOM K[R[", "J[WOXMXQWOVNTMPMNNMOMQNRPSUUWVXW MPNQPRUTWUXVXYWZU[Q[OZNYMWM[NY", "KZPFPWQZS[U[WZXX QFQWRZS[ MMUM", "G]LMLXMZP[R[UZWX MMMXNZP[ WMW[ XMX[ IMMM TMXM W[[[", "F^JMN[ KMNX RMN[ RMV[ SMVX ZMV[ GMNM WM]M", "H\\LMW[ MMX[ XML[ JMPM TMZM J[P[ T[Z[", "H[LMR[ MMRY XMR[P_NaLbKbJaK`La JMPM TMZM", "G^QMNNLPKRJUJXKZN[P[RZUWWTYPZM QMONMPLRKUKXLZN[ QMSMUNVPXXYZZ[ SMTNUPWXXZZ[[[", "G\\TFQGOIMMLPKTJZIb TFRGPINMMPLTKZJb TFVFXGYHYKXMWNTOPO VFXHXKWMVNTO POTPVRWTWWVYUZR[P[NZMYLV POSPURVTVWUYTZR[", "H\\IPKNMMOMQNROSRSVRZOb JOLNPNRO ZMYPXRSYP^Nb YMXPWRSY", "I\\VNTMRMONMQLTLWMYNZP[R[UZWWXTXQWOSJRHRFSEUEWFYH RMPNNQMTMXNZ R[TZVWWTWPVNTKSISGTFVFYH", "I[XPVNTMPMNNNPPRSS PMONOPQRSS SSNTLVLXMZP[S[UZWX SSOTMVMXNZP[", "I[TFRGQHQIRJUKZKZJWKSMPOMRLULWMYP[S]T_TaSbQbPa ULQONRMUMWNYP[", "G]HQIOKMNMONOPNTL[ MMNNNPMTK[ NTPPRNTMVMXNYOYRXWUb VMXOXRWWTb", "F]GQHOJMMMNNNPMUMXNZO[ LMMNMPLULXMZO[Q[SZUXWUXRYMYIXGVFTFRHRJSMUPWRZT SZUWVUWRXMXIWGVF", "H\\NMJ[ OMK[ XMYNZNYMWMUNQROSMS OSQTSZT[ OSPTRZS[U[WZYW", "H\\KFMFOGPHQJWXXZY[ MFOHPJVXWZY[Z[ RMJ[ RMK[", "F]MMGb NMHb MPLVLYN[P[RZTXVU XMUXUZV[Y[[Y\\W YMVXVZW[", "H\\NML[ OMNSMXL[ YMXQVU ZMYPXRVUTWQYOZL[ KMOM", "IZTFRGQHQIRJUKXK UKQLOMNONQPSSTVT UKRLPMOOOQQSST STOUMVLXLZN\\S^T_TaRbPb STPUNVMXMZO\\S^", "I[RMONMQLTLWMYNZP[R[UZWWXTXQWOVNTMRM RMPNNQMTMXNZ R[TZVWWTWPVN", "G]PNL[ PNM[ VNV[ VNW[ IPKNNM[M IPKONN[N", "H[LVMYNZP[R[UZWWXTXQWOVNTMRMONMQLTHb R[TZVWWTWPVN RMPNNQMTIb", "H][MQMNNLQKTKWLYMZO[Q[TZVWWTWQVOUNSM QMONMQLTLXMZ Q[SZUWVTVPUN UN[N", "H\\IQJOLMOMPNPPNVNYP[ NMONOPMVMYNZP[Q[TZVXXUYRYOXMWNXOYR XUYO", "G]ONMOKQJTJWKYLZN[Q[TZWXYUZRZOXMVMTORSPXMb JWLYNZQZTYWWYU ZOXNVNTPRSPYNb", "I[KMMMONPPU_VaWb MMNNOPT_UaWbYb ZMYOWRM]K`Jb", "F]UFOb VFNba XFVHUJTNRWQ[P^O`NaLbJbIaI`J_K`Ja OMYM", "H\\YMU[T^RaObLbJaI`I_J^K_J` XMT[S^QaOb VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ", "H]PFJ[ QFK[ MTOPQNSMUMWNXOXQVWVZW[ UMWOWQUWUZV[Y[[Y\\W MFQF", "LYUFTGUHVGUF MQNOPMSMTNTQRWRZS[ RMSNSQQWQZR[U[WYXW", "LYVFUGVHWGVF NQOOQMTMUNUQR[Q^P`OaMbKbJaJ`K_L`Ka SMTNTQQ[P^O`Mb", "H\\PFJ[ QFK[ XNWOXPYOYNXMWMUNQROSMS OSQTSZT[ OSPTRZS[U[WZYW MFQF", "MYUFQTPXPZQ[T[VYWW VFRTQXQZR[ RFVF", "AbBQCOEMHMINIPHTF[ GMHNHPGTE[ HTJPLNNMPMRNSOSQP[ PMRORQO[ RTTPVNXMZM\\N]O]Q[W[Z\\[ ZM\\O\\QZWZZ[[^[`YaW", "F]GQHOJMMMNNNPMTK[ LMMNMPLTJ[ MTOPQNSMUMWNXOXQVWVZW[ UMWOWQUWUZV[Y[[Y\\W", "G\\HQIOKMNMONOPNTJb MMNNNPMTIb NTOQQNSMUMWNXOYQYTXWVZS[Q[OZNWNT WNXPXTWWUZS[ FbMb", "H\\XMRb YMSb VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ ObVb", "IZJQKOMMPMQNQPPTN[ OMPNPPOTM[ PTRPTNVMXMYNYOXPWOXN", "J[XOXPYPYOXNUMRMONNONQORVVWW NPOQVUWVWYVZS[P[MZLYLXMXMY", "KYTFPTOXOZP[S[UYVW UFQTPXPZQ[ NMWM", "F]GQHOJMMMNNNQLWLYN[ LMMNMQKWKYLZN[P[RZTXVT XMVTUXUZV[Y[[Y\\W YMWTVXVZW[", "H\\IQJOLMOMPNPQNWNYP[ NMONOQMWMYNZP[Q[TZVXXUYQYMXMYO", "C`DQEOGMJMKNKQIWIYK[ IMJNJQHWHYIZK[M[OZQXRV TMRVRYSZU[W[YZ[X\\V]R]M\\M]O UMSVSYU[", "H\\KQMNOMRMSOSR QMRORRQVPXNZL[K[JZJYKXLYKZ QVQYR[U[WZYW YNXOYPZOZNYMXMVNTPSRRVRYS[", "G\\HQIOKMNMONOQMWMYO[ MMNNNQLWLYMZO[Q[SZUXWT ZMV[U^SaPbMbKaJ`J_K^L_K` YMU[T^RaPb", "H\\YMXOVQNWLYK[ LQMOOMRMVO MOONRNVOXO LYNYRZUZWY NYR[U[WYXW", "G^VGUHVIWHWGUFRFOGMILLL[ RFPGNIMLM[ \\G[H\\I]H]G\\FZFXGWIW[ ZFYGXIX[ IM[M I[P[ T[[[", "G]WGVHWIXHWGUFRFOGMILLL[ RFPGNIMLM[ WMW[ XMX[ IMXM I[P[ T[[[", "G]VGUHVIWHWGUF XFRFOGMILLL[ RFPGNIMLM[ WHW[ XFX[ IMWM I[P[ T[[[", "BcRGQHRISHRGPFMFJGHIGLG[ MFKGIIHLH[ ]G\\H]I^H]G[FXFUGSIRLR[ XFVGTISLS[ ]M][ ^M^[ DM^M D[K[ O[V[ Z[a[", "BcRGQHRISHRGPFMFJGHIGLG[ MFKGIIHLH[ \\G[H\\I]H]G[F ^FXFUGSIRLR[ XFVGTISLS[ ]H][ ^F^[ DM]M D[K[ O[V[ Z[a[", "IZWNUMRMONMPLSLVMYNZQ[T[VZ RMPNNPMSMVNYOZQ[ MTUT", "I\\TFQGOJNLMOLTLXMZO[Q[TZVWWUXRYMYIXGVFTF TFRGPJOLNOMTMXNZO[ Q[SZUWVUWRXMXIWGVF NPWP", "G]UFOb VFNb QMMNKPJSJVKXMZP[S[WZYXZUZRYPWNTMQM QMNNLPKSKVLXNZP[ S[VZXXYUYRXPVNTM", "I[TMVNXPXOWNTMQMNNMOLQLSMUOWSZ QMONNOMQMSNUSZT\\T^S_Q_", "G]LMKNJPJRKUOYP[ JRKTOXP[P]O`MbLbKaJ_J\\KXMTOQRNTMVMYNZPZTYXWZU[T[SZSXTWUXTY VMXNYPYTXXWZ", "E_YGXHYIZHYGWFTFQGOINKMNLRJ[I_Ha TFRGPIOKNNLWK[J^I`HaFbDbCaC`D_E`Da _G^H_I`H`G_F]F[GZHYJXMU[T_Sa ]F[HZJYNWWV[U^T`SaQbObNaN`O_P`Oa IM^M", "F^[GZH[I\\H[GXFUFRGPIOKNNMRK[J_Ia UFSGQIPKONMWL[K^J`IaGbEbDaD`E_F`Ea YMWTVXVZW[Z[\\Y]W ZMXTWXWZX[ JMZM", "F^YGXHYIZHZGXF \\FUFRGPIOKNNMRK[J_Ia UFSGQIPKONMWL[K^J`IaGbEbDaD`E_F`Ea [FWTVXVZW[Z[\\Y]W \\FXTWXWZX[ JMYM", "@cTGSHTIUHTGRFOFLGJIIKHNGRE[D_Ca OFMGKIJKINGWF[E^D`CaAb?b>a>`?_@`?a `G_H`IaH`G]FZFWGUITKSNRRP[O_Na ZFXGVIUKTNRWQ[P^O`NaLbJbIaI`J_K`Ja ^M\\T[X[Z\\[_[aYbW _M]T\\X\\Z][ DM_M", "@cTGSHTIUHTGRFOFLGJIIKHNGRE[D_Ca OFMGKIJKINGWF[E^D`CaAb?b>a>`?_@`?a ^G]H^I_H_G]F aFZFWGUITKSNRRP[O_Na ZFXGVIUKTNRWQ[P^O`NaLbJbIaI`J_K`Ja `F\\T[X[Z\\[_[aYbW a` VDUFTJRVQZP]O_MaKbIbHaH`I_J`Ia QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK", "F_\\S[UYVWVUUTTQPPONNLNJOIQISJULVNVPUQTTPUOWNYN[O\\Q\\S", "F^[FI[ NFPHPJOLMMKMIKIIJGLFNFPGSHVHYG[F WTUUTWTYV[X[ZZ[X[VYTWT", "F_[NZO[P\\O\\N[MZMYNXPVUTXRZP[M[JZIXIUJSPORMSKSIRGPFNGMIMKNNPQUXWZZ[[[\\Z\\Y M[KZJXJUKSMQ MKNMVXXZZ[", "E`WNVLTKQKOLNMMPMSNUPVSVUUVS QKOMNPNSOUPV WKVSVUXVZV\\T]Q]O\\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYZX XKWSWUXV", "H\\PBP_ TBT_ XIWJXKYJYIWGTFPFMGKIKKLMMNOOUQWRYT KKMMONUPWQXRYTYXWZT[P[MZKXKWLVMWLX", "JZUITJUKVJVIUGSFQFOGNINKOMQOVR OMTPVRWTWVVXTZ PNNPMRMTNVPXU[ NVSYU[V]V_UaSbQbOaN_N^O]P^O_", "JZRFQHRJSHRF RFRb RQQTRbSTRQ LMNNPMNLLM LMXM TMVNXMVLTM", "JZRFQHRJSHRF RFRT RPQRSVRXQVSRRP RTRb R^Q`RbS`R^ LMNNPMNLLM LMXM TMVNXMVLTM L[N\\P[NZL[ L[X[ T[V\\X[VZT[", "E`QFNGKIILHOHRIUKXNZQ[T[WZZX\\U]R]O\\LZIWGTFQF ROQPQQRRSRTQTPSORO RPRQSQSPRP", "J[PFNGOIQJ PFOGOI UFWGVITJ UFVGVI QJOKNLMNMQNSOTQUTUVTWSXQXNWLVKTJQJ RUR[ SUS[ NXWX", "I\\RFOGMILLLMMPORRSSSVRXPYMYLXIVGSFRF RSR[ SSS[ NWWW", "D`PFMGJIHLGOGSHVJYM[P\\T\\W[ZY\\V]S]O\\LZIWGTFPF RFR\\ GQ]Q", "G`fHfIeIdHcGcFdFfGhIiKiNhPfQdR`RUQ;Q4R/S-U,V,X-Y/Y3X6W8U;P?JCHEFHEJDNDREVGYJ[N\\R\\V[XZZW[T[PZMYKWITHPHMIKKJNJRKUMW GdGeHeHdGd U;Q?LCIFGIFKENERFVGXJ[ R\\U[WZYWZTZPYMXKVITH", "EfNSOUQVSVUUVSVQUOSNQNOONPMSMVNYP[S\\V\\Y[[Y\\W]T]P\\MZJXIUHRHOIMJKLIOHSHXI]KaMcPeTfYf]e`cba KLJNIRIXJ\\L`NbQdUeYe]d_cba POTO OPUP NQVQ NRVR NSVS OTUT PUTU aLaNcNcLaL bLbN aMcM aVaXcXcVaV bVbX aWcW", "D`H@Hd M@Md W@Wd \\@\\d MMWK MNWL MOWM MWWU MXWV MYWW", "H\\PMMNLOKQKSLUMVPWTWWVXUYSYQXOWNTMPM MNLPLSMUNVPW WVXTXQWOVNTM", "JZQCVMRTRU ULQS TITKPRRUUY W\\UYSXQXOYN[N]O_Ra W\\UZSYOYO]P_Ra SXPZN]", "JZPOOMOKMKMMNNPOSOUNWL NKNN MLOL MMSO POUN WLSY", "IjNQOOQNSNUOVQVSUUSVQVOUNTMQMNNKPISHWH[I^K`NaRaW`[_]]`ZcVfQiMk WHZI]K_N`R`W_[^]\\`YcTgQi POTO OPUP NQVQ NRVR NSVS OTUT PUTU eLeNgNgLeL fLfN eMgM eVeXgXgVeV fVfX eWgW", "D`H>Hf I>If M>Mf QBSBSDQDQAR?T>W>Y?[A\\D\\I[LYNWOUOSNRLQNOQNROSQVRXSVUUWUYV[X\\[\\`[cYeWfTfReQcQ`S`SbQb RBRD QCSC Y?ZA[D[IZLYN RLRNPQNRPSRVRX YVZX[[[`ZcYe R`Rb QaSa", "AcHBHb IBIb [B[b \\B\\b DB`B DbMb Wb`b", "BaGBQPFb FBPP EBPQ EB\\B^I[B Ga\\a Fb\\b^[[b", "I[X+U1R8P=OANFMNMVN^OcPgRlUsXy U1S6Q<P@OFNNNVO^PdQhSnUs", "I[L+O1R8T=UAVFWNWVV^UcTgRlOsLy O1Q6S<T@UFVNVVU^TdShQnOs", "H[V+R1P5O:O>PBTJTLSNROMRRUSVTXTZPbOfOjPoRsVy T.R2Q5P:P>QCRF R^QaPfPjQoRrTv", "I\\N+R1T5U:U>TBPJPLQNROWRRUQVPXPZTbUfUjToRsNy P.R2S5T:T>SCRF R^SaTfTjSoRrPv", "I[V.S1Q4O8N=NCOIPMSXT\\UbUgTlSoQs S1Q5P8O=OBPHQLTWU[VaVgUlSpQsNv", "I[N.Q1S4U8V=VCUITMQXP\\ObOgPlQoSs Q1S5T8U=UBTHSLPWO[NaNgOlQpSsVv", "Ca].\\.[/[0\\1]1^0^.],[+Y+W,U.T0S3R:QJQjPsOv \\/\\0]0]/\\/ R:Rj U.T1S:SZRjQqPtOvMxKyIyGxFvFtGsHsItIuHvGv GtGuHuHtGt`RFNOKUIXGZE[C[BZBXCWDXCY RFPMOQNVNZP[ RFQJPOOVOZP[ [FWORXP[ [FYMXQWVWZY[Z[\\Z^X [FZJYOXVXZY[", "G^RFQJOPMULWJZH[F[EZEXFWGXFY RFRKSVT[ RFSKTVT[ `G_H`IaHaG``F^G\\IZLWUUYS[", "H\\PKOLMLLKLIMGOFQFSGTITLSPQUOXMZJ[H[GZGXHWIXHY QFRGSISLRPPUNXLZJ[ ]G\\H]I^H^G]F[FYGWIULSPRURXSZT[U[WZYX", "G]JJLGNFOFQGQIOOORPT OFPGPINONRPTRTUSWQYNZL \\FZLWTUX ]F[LYQWUUXSZP[L[JZIXIWJVKWJX", "G\\ZHYJWOVRUTSWQYOZL[ SLRNPONOMMMKNIPGSF]F[GZHYKXOVUTXQZL[H[GZGXHWJWLXOZQ[T[WZYX VFZG[G", "H\\WMW[X[ WMXMX[ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX", "H\\LFL[M[ LFMFM[ MPONQMTMVNXPYSYUXXVZT[Q[OZMX MPQNTNVOWPXSXUWXVYTZQZMX", "I[XPVNTMQMONMPLSLUMXOZQ[T[VZXX XPWQVOTNQNOONPMSMUNXOYQZTZVYWWXX", "H\\WFW[X[ WFXFX[ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX", "I[MTXTXQWOVNTMQMONMPLSLUMXOZQ[T[VZXX MSWSWQVOTNQNOONPMSMUNXOYQZTZVYWWXX", "LZWFUFSGRJR[S[ WFWGUGSH TGSJS[ OMVMVN OMONVN", "H\\XMWMW\\V_U`SaQaO`N_L_ XMX\\W_UaSbPbNaL_ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX", "H\\LFL[M[ LFMFM[ MQPNRMUMWNXQX[ MQPORNTNVOWQW[X[", "NWRFQGQHRISITHTGSFRF RGRHSHSGRG RMR[S[ RMSMS[", "NWRFQGQHRISITHTGSFRF RGRHSHSGRG RMRbSb RMSMSb", "H[LFL[M[ LFMFM[ XMWMMW XMMX PTV[X[ QSX[", "CbGMG[H[ GMHMH[ HQKNMMPMRNSQS[ HQKOMNONQORQR[S[ SQVNXM[M]N^Q^[ SQVOXNZN\\O]Q][^[", "H\\LML[M[ LMMMM[ MQPNRMUMWNXQX[ MQPORNTNVOWQW[X[", "I\\QMONMPLSLUMXOZQ[T[VZXXYUYSXPVNTMQM QNOONPMSMUNXOYQZTZVYWXXUXSWPVOTNQN", "H\\LMLbMb LMMMMb MPONQMTMVNXPYSYUXXVZT[Q[OZMX MPQNTNVOWPXSXUWXVYTZQZMX", "H\\WMWbXb WMXMXb WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX", "KYOMO[P[ OMPMP[ PSQPSNUMXM PSQQSOUNXNXM", "J[XPWNTMQMNNMPNRPSUUWV VUWWWXVZ WYTZQZNY OZNXMX XPWPVN WOTNQNNO ONNPOR NQPRUTWUXWXXWZT[Q[NZMX", "H\\LMLWMZO[R[TZWW LMMMMWNYPZRZTYWW WMW[X[ WMXMX[", "F^IMN[ IMJMNX RMNX RPN[ RPV[ RMVX [MZMVX [MV[", "JZLMR[ LMMMRY XMWMRYNb XMR[ObNb", "I[VNL[ XMNZ LMXM LMLNVN NZXZX[ L[X[", "K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ VRTXTZV[XZYY[V WRUXUZV[", "LZLVNSPO SFMXMZO[P[RZTXUUURVVWWXWZV TFNXNZO[", "LXTSSTTTTSSRQROSNTMVMXNZP[S[VYXV QROTNVNYP[", "K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ ZFTXTZV[XZYY[V [FUXUZV[", "LXOYQXRWSUSSRRQROSNTMVMXNZP[S[VYXV QROTNVNYP[", "OXRRUOWLXIXGWFUGTIKdKfLgNfOcPZQ[S[UZVYXV TISNRRO[M`Kd", "K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ VRPd WRT[R`PdOfMgLfLdMaO_R]V[YY[V", "L[LVNSPO SFL[ TFM[ OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V", "NVSLRMSNTMSL QROXOZQ[SZTYVV RRPXPZQ[", "NVSLRMSNTMSL QRKd RRO[M`KdJfHgGfGdHaJ_M]Q[TYVV", "LZLVNSPO SFL[ TFM[ URUSVSURTRRTOU OURVSZT[ OUQVRZT[U[XYZV", "NVNVPSRO UFOXOZQ[SZTYVV VFPXPZQ[", "E^EVGSIRKSKUI[ IRJSJUH[ KUMSORPRRSRUP[ PRQSQUO[ RUTSVRWRYSYUXXXZY[ WRXSXUWXWZY[[Z\\Y^V", "I[IVKSMROSOUM[ MRNSNUL[ OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V", "KYRRPRNSMTLVLXMZO[Q[SZTYUWUUTSRRQSQURWTXVXXWYV PRNTMVMYO[", "L[LVNSPO QLHg RLIg OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V", "K[UUTSRRPRNSMTLVLXMZO[Q[SZ PRNTMVMYO[ VRPdPfQgSfTcT[V[YY[V WRT[R`Pd", "LZLVNSPRRSRUP[ PRQSQUO[ RUTSVRWRVU VRVUWWXWZV", "NZNVPSQQQSTUUWUYTZR[ QSSUTWTYR[ NZP[U[XYZV", "NVNVPSRO UFOXOZQ[SZTYVV VFPXPZQ[ PNVN", "K[NRLXLZN[O[QZSXUU ORMXMZN[ VRTXTZV[XZYY[V WRUXUZV[", "KZNRMTLWLZN[O[RZTXUUUR ORNTMWMZN[ URVVWWXWZV", "H]LRJTIWIZK[L[NZPX MRKTJWJZK[ RRPXPZR[S[UZWXXUXR SRQXQZR[ XRYVZW[W]V", "JZJVLSNRPRQSQUPXOZM[L[KZKYLYKZ WSVTWTWSVRURSSRUQXQZR[U[XYZV QSRU SSQU PXQZ QXOZ", "K[NRLXLZN[O[QZSXUU ORMXMZN[ VRPd WRT[R`PdOfMgLfLdMaO_R]V[YY[V", "LYLVNSPRRRTSTVSXPZN[ RRSSSVRXPZ N[P\\Q^QaPdNfLgKfKdLaO^R\\VYYV N[O\\P^PaOdNf`UbVb UBVBTDRGPKOPOTPYR]T`Vb", "KYNBPDRGTKUPUTTYR]P`NbOb NBOBQDSGUKVPVTUYS]Q`Ob", "JZRFQGSQRR RFRR RFSGQQRR MINIVOWO MIWO MIMJWNWO WIVINOMO WIMO WIWJMNMO", "I[NFMGMM NGMM NFOGMM WFVGVM WGVM WFXGVM", "KYQFOGNINKOMQNSNUMVKVIUGSFQF QFNIOMSNVKUGQF SFOGNKQNUMVISF", "G^OFObPb OFPFPb UFUbVb UFVFVb JP[P[Q JPJQ[Q JW[W[X JWJX[X", "F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FH[I[ [F\\FI[ YTWTUUTWTYV[X[ZZ[X[VYT NFJGIKMMPJNF LFIIKMOLPHLF YTUUTYX[[XYT WTTWV[ZZ[VWT", "E``Qb VESIQMPPOUOZP_Qb", "JYSBTDUGVLVPUUSYQ\\N_Jb SBTEUJUOTTSWQ[N_", "E_^F\\GXHUHQGOFMFKGJIJKLMNMPLQJQHOF ^FF[ XTVTTUSWSYU[W[YZZXZVXT", "G]LFL[ MFM[ IFYFYLXF MPUPXQYRZTZWYYXZU[I[ UPWQXRYTYWXYWZU[", "F^NFNLMTLXKZJ[ XFX[ YFY[ KF\\F G[\\[ G[Gb H[Gb [[\\b \\[\\b", "CbRFR[ SFS[ OFVF GGHHGIFHFGGFHFIGJIKMLONPWPYOZM[I\\G]F^F_G_H^I]H^G NPLQKSJXIZH[ NPMQLSKXJZI[G[FZEX WPYQZS[X\\Z][ WPXQYSZX[Z\\[^[_Z`X O[V[", "H\\LIKFKLLINGPFTFWGXIXLWNTOQO TFVGWIWLVNTO TOVPXRYTYWXYWZT[O[MZLYKWKVLUMVLW WQXTXWWYVZT[", "F^KFK[ LFL[ XFX[ YFY[ HFOF UF\\F XHLY H[O[ U[\\[", "F^KFK[ LFL[ XFX[ YFY[ HFOF UF\\F XHLY H[O[ U[\\[ N@N?M?M@NBPCTCVBW@", "F^KFK[ LFL[ HFOF LPSPUOVMWIXGYFZF[G[HZIYHZG SPUQVSWXXZY[ SPTQUSVXWZX[Z[[Z\\X H[O[", "E^MFMLLTKXJZI[H[GZGYHXIYHZ XFX[ YFY[ JF\\F U[\\[", "H]KFRV LFSV ZFSVQYPZN[M[LZLYMXNYMZ IFOF VF\\F", "F_RFR[ SFS[ OFVF PILJJLIOIRJULWPXUXYW[U\\R\\O[LYJUIPI PIMJKLJOJRKUMWPX UXXWZU[R[OZLXJUI O[V[", "F^KFK[ LFL[ XFX[ YFY[ HFOF UF\\F H[\\[ [[\\b \\[\\b", "F]KFKQLSOTRTUSWQ LFLQMSOT WFW[ XFX[ HFOF TF[F T[[[", "BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[", "BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[ `[ab a[ab", "F`PFP[ QFQ[ IFHLHFTF QPXP[Q\\R]T]W\\Y[ZX[M[ XPZQ[R\\T\\W[YZZX[", "CaHFH[ IFI[ EFLF IPPPSQTRUTUWTYSZP[E[ PPRQSRTTTWSYRZP[ [F[[ \\F\\[ XF_F X[_[", "H]MFM[ NFN[ JFQF NPUPXQYRZTZWYYXZU[J[ UPWQXRYTYWXYWZU[", "H]LIKFKLLINGQFSFVGXIYKZNZSYVXXVZS[P[MZLYKWKVLUMVLW SFUGWIXKYNYSXVWXUZS[ PPYP", "CbHFH[ IFI[ EFLF E[L[ VFSGQIPKOOORPVQXSZV[X[[Z]X^V_R_O^K]I[GXFVF VFTGRIQKPOPRQVRXTZV[ X[ZZ\\X]V^R^O]K\\IZGXF IPOP", "G]WFW[ XFX[ [FOFLGKHJJJLKNLOOPWP OFMGLHKJKLLNMOOP RPPQORLYKZJZIY PQOSMZL[J[IYIX T[[[", "H\\XFWGQINKLNKQKULXNZQ[S[VZXXYUYSXPVNSMQMNNLPKS XFWHUIQJNLLN QMONMPLSLUMXOZQ[ S[UZWXXUXSWPUNSM", "H\\MMM[ NMN[ JMUMXNYPYQXSUT UMWNXPXQWSUT NTUTXUYWYXXZU[J[ UTWUXWXXWZU[", "F]NMNQMWLZK[ WMW[ XMX[ KM[M I[H`H[[[[`Z[", "E`aLbKbJaK`La JMPM TMZM", "H]RFRb SFSb OFSF RPQNPMNMLNKQKWLZN[P[QZRX NMMNLQLWMZN[ WMXNYQYWXZW[ SPTNUMWMYNZQZWYZW[U[TZSX ObVb", "G]LML[ MMM[ WMW[ XMX[ IMPM TM[M I[[[[`Z[", "G]LMLTMVPWRWUVWT MMMTNVPW WMW[ XMX[ IMPM TM[M T[[[", "CbHMH[ IMI[ RMR[ SMS[ \\M\\[ ]M][ EMLM OMVM YM`M E[`[", "CbHMH[ IMI[ RMR[ SMS[ \\M\\[ ]M][ EMLM OMVM YM`M E[`[``_[", "H]QMQ[ RMR[ LMKRKMUM RTVTYUZWZXYZV[N[ VTXUYWYXXZV[", "E_JMJ[ KMK[ GMNM KTOTRUSWSXRZO[G[ OTQURWRXQZO[ YMY[ ZMZ[ VM]M V[][", "J[OMO[ PMP[ LMSM PTTTWUXWXXWZT[L[ TTVUWWWXVZT[", "I\\MOLMLQMONNPMSMVNXPYSYUXXVZS[P[NZLXLWMVNWMX SMUNWPXSXUWXUZS[ RTXT", "Da`Y`Z^Z\\ V\\W^X_Y_ UXW]X^Y^Z]", "G]LFL[ MGMZ NFN[ IFUFXGYHZJZLYNXOUPNP XHYJYLXN UFWGXIXMWOUP RPTQUSWYX[Z[[Y[W WWXYYZZZ TQURXXYYZY[X I[Q[ JFLG KFLH OFNH PFNG LZJ[ LYK[ NYO[ NZP[", "H\\XIYFYLXIVGSFPFMGKIKLLNOPURWSXUXXWZ LLMNOOUQWRXT MGLILKMMONUPXRYTYWXYWZT[Q[NZLXKUK[LX", "H\\JFJL QFQ[ RGRZ SFS[ ZFZL JFZF N[V[ KFJL LFJI MFJH OFJG UFZG WFZH XFZI YFZL QZO[ QYP[ SYT[ SZU[", "F^KFKULXNZQ[S[VZXXYUYG LGLVMX MFMVNYOZQ[ HFPF VF\\F IFKG JFKH NFMH OFMG WFYG [FYG", "H\\KFR[ LFRXR[ MFSX YGR[ IFPF UF[F JFLH NFMH OFMG WFYG ZFYG", "F^JFN[ KFNVN[ LFOV RFOVN[ RFV[ SFVVV[ TFWV ZGWVV[ GFOF RFTF WF]F HFKG IFKH MFLH NFLG XFZG \\FZG", "H\\KFW[ LFX[ MFY[ XGLZ IFPF UF[F I[O[ T[[[ JFMH NFMH OFMG VFXG ZFXG LZJ[ LZN[ WZU[ WYV[ WYZ[", "G]JFQQQ[ KFRQRZ LFSQS[ YGSQ HFOF VF\\F N[V[ IFKG NFLG WFYG [FYG QZO[ QYP[ SYT[ SZU[", "H\\YFKFKL WFK[ XFL[ YFM[ K[Y[YU LFKL MFKI NFKH PFKG T[YZ V[YY W[YX X[YU", "I[NFN[ OGOZ PFP[ KFZFZL K[S[ LFNG MFNH QFPH RFPG UFZG WFZH XFZI YFZL NYM[ NZL[ PYQ[ PZR[", "H\\RFJ[ QIX[ RIY[ RFZ[ KYXY KZXZ J[Z[", "G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF MILKKNKSLVMX WXXVYSYNXKWI QFOGMJLNLSMWOZQ[ S[UZWWXSXNWJUGSF OMOT UMUT OPUP OQUQ ONPP OOQP UNTP UOSP PQOS QQOR SQUR TQUS", "H\\RFKZ QIW[ RIX[ RFY[ I[O[ T[[[ KZJ[ KZM[ WZU[ WYV[ XYZ[", "G]JEJL ZEZL OMOT UMUT JUJ\\ ZUZ\\ JGZG JHZH JIZI OPUP OQUQ JXZX JYZY JZZZ JFMH ZFWH KIJK LIJJ XIZJ YIZK ONPP OOQP UNTP UOSP PQOS QQOR SQUR TQUS JVKX JWLX ZWXX ZVYX MYJ[ WYZ[", "F^KFK[ LGLZ MFM[ WFW[ XGXZ YFY[ HF\\F H[P[ T[\\[ IFKG JFKH NFMH OFMG UFWG VFWH ZFYH [FYG KZI[ KYJ[ MYN[ MZO[ WZU[ WYV[ YYZ[ YZ[[", "G]IFPPQQ JFQP KFRPI[ IFYFZLYIWF VFYH TFYG KYYY JZYZ I[Y[ZUYXWY", "H\\JMKILGMFOFPGQIRM LHMGOGPH JMKJMHOHPIQMQ[ RMR[ ZMYJWHUHTISMS[ XHWGUGTH ZMYIXGWFUFTGSIRM N[V[ QYP[ QZO[ SZU[ SYT[", "G]QFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[ OKLLKMJOJRKTLUOVUVXUYTZRZOYMXLUKOK LMKOKRLT XTYRYOXM OKMLLOLRMUOV UVWUXRXOWLUK", "F^QFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[ HMIMJNKQLSMTPUTUWTXSYQZN[M\\M LRKNJLILKN HMIKJKKLLPMSNTPU YN[LZLYNXR TUVTWSXPYLZK[K\\M", "G]NYKYJWK[O[MVKRJOJLKIMGPFTFWGYIZLZOYRWVU[Y[ZWYYVY LSKOKLLI XIYLYOXS O[MULPLKMHNGPF TFVGWHXKXPWUU[ KZNZ VZYZ", "H\\UFIZ SJT[ THUZ UFUHVYV[ LUTU F[L[ Q[X[ IZG[ IZK[ TZR[ TYS[ VYW[", "F^OFI[ PFJ[ QFK[ LFWFZG[I[KZNYOVP YGZIZKYNXO WFXGYIYKXNVP NPVPXQYSYUXXVZR[F[ WQXSXUWXUZ VPWRWUVXTZR[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[", "H]ZH[H\\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[S[UZWXXV QHOJNLMOLSLWMY TFRGPJOLNOMSMXNZP[", "F]OFI[ PFJ[ QFK[ LFUFXGYHZKZOYSWWUYSZO[F[ WGXHYKYOXSVWTY UFWHXKXOWSUWRZO[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[", "F]OFI[ PFJ[ QFK[ ULST LF[FZL NPTP F[U[WV MFPG NFOH RFPH SFPG WFZG XFZH YFZI ZFZL ULSPST TNRPSR TOQPSQ JZG[ JYH[ KYL[ JZM[ P[UZ R[UY UYWV", "F\\OFI[ PFJ[ QFK[ ULST LF[FZL NPTP F[N[ MFPG NFOH RFPH SFPG WFZG XFZH YFZI ZFZL ULSPST TNRPSR TOQPSQ JZG[ JYH[ KYL[ JZM[", "H^ZH[H\\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[R[UZWXYT QHOJNLMOLSLWMY VXWWXT TFRGPJOLNOMSMXNZP[ R[TZVWWT TT\\T UTWU VTWW ZTXV [TXU", "E_NFH[ OFI[ PFJ[ ZFT[ [FU[ \\FV[ KFSF WF_F LPXP E[M[ Q[Y[ LFOG MFNH QFOH RFOG XF[G YFZH ]F[H ^F[G IZF[ IYG[ JYK[ IZL[ UZR[ UYS[ VYW[ UZX[", "KYTFN[ UFO[ VFP[ QFYF K[S[ RFUG SFTH WFUH XFUG OZL[ OYM[ PYQ[ OZR[", "I\\WFRWQYO[ XFTSSVRX YFUSSXQZO[M[KZJXJVKULUMVMWLXKX KVKWLWLVKV TF\\F UFXG VFWH ZFXH [FXG", "F]OFI[ PFJ[ QFK[ \\GMR QOU[ ROV[ SNWZ LFTF YF_F F[N[ R[Y[ MFPG NFOH RFPH SFPG ZF\\G ^F\\G JZG[ JYH[ KYL[ JZM[ UZS[ UYT[ VYX[", "H\\QFK[ RFL[ SFM[ NFVF H[W[YU OFRG PFQH TFRH UFRG LZI[ LYJ[ MYN[ LZO[ R[WZ T[XX V[YU", "D`MFGZ MGNYN[ NFOY OFPX [FPXN[ [FU[ \\FV[ ]FW[ JFOF [F``V``aUbObLaK_K^L\\O[ ObMaL_L^M\\O[", "G^LFL[ MGMZ IFNFN[ NQOOPNRMUMWNXOYRY[ WOXRXZ UMVNWQW[ I[Q[ T[\\[ JFLG KFLH LZJ[ LYK[ NYO[ NZP[ WZU[ WYV[ YYZ[ YZ[[", "LXQFQHSHSFQF RFRH QGSG QMQ[ RNRZ NMSMS[ N[V[ OMQN PMQO QZO[ QYP[ SYT[ SZU[", "KXRFRHTHTFRF SFSH RGTG RMR^QaPb SNS]R` OMTMT]S`RaPbMbLaL_N_NaMaM` PMRN QMRO", "G]LFL[ MGMZ IFNFN[ WNNW RSY[ RTX[ QTW[ TM[M I[Q[ T[[[ JFLG KFLH UMWN ZMWN LZJ[ LYK[ NYO[ NZP[ WYU[ VYZ[", "LXQFQ[ RGRZ NFSFS[ N[V[ OFQG PFQH QZO[ QYP[ SYT[ SZU[", "AcFMF[ GNGZ CMHMH[ HQIOJNLMOMQNROSRS[ QORRRZ OMPNQQQ[ SQTOUNWMZM\\N]O^R^[ \\O]R]Z ZM[N\\Q\\[ C[K[ N[V[ Y[a[ DMFN EMFO FZD[ FYE[ HYI[ HZJ[ QZO[ QYP[ SYT[ SZU[ \\ZZ[ \\Y[[ ^Y_[ ^Z`[", "G^LML[ MNMZ IMNMN[ NQOOPNRMUMWNXOYRY[ WOXRXZ UMVNWQW[ I[Q[ T[\\[ JMLN KMLO LZJ[ LYK[ NYO[ NZP[ WZU[ WYV[ YYZ[ YZ[[", "H\\QMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMQM MPLRLVMX WXXVXRWP QMONNOMRMVNYOZQ[ S[UZVYWVWRVOUNSM", "G\\LMLb MNMa IMNMNb NPONQMSMVNXPYSYUXXVZS[Q[OZNX WPXRXVWX SMUNVOWRWVVYUZS[ IbQb JMLN KMLO LaJb L`Kb N`Ob NaPb", "H\\VNVb WOWa UNWNXMXb VPUNSMQMNNLPKSKULXNZQ[S[UZVX MPLRLVMX QMONNOMRMVNYOZQ[ Sb[b VaTb V`Ub X`Yb XaZbaLbJbIaI_K_KaJaJ` JMQM TMZM KMNO PMNN VMXN YMXN", "I[VML[ WMM[ XMN[ XMLMLQ L[X[XW MMLQ NMLP OMLO QMLN S[XZ U[XY V[XX W[XW", "G^[MZQYTWXUZR[P[MZKXJUJSKPMNPMRMUNVOWQYXZZ[[\\[ ZMYQXTWVUYTZR[ LXKVKRLP P[NZMYLVLRMONNPM RMTNUOVQXXYZ[[", "G\\QFNGMHLJKNKb NHMJLNLa QFOGNIMNMb QFSFVGWHXJXLWNVOSP PPTPWQXRYTYWXYWZT[Q[OZNYMW VHWJWLVN WRXTXWWY SFUGVIVMUOSP TPVQWSWXVZT[ KbMb", "F\\HRINKMMMONPOQRRYSb IOKNMNOOPP HRIPKOMOOPPQQTRYRa XMWPVRTUSWR[Qb YMWQ ZMYOWRTVSXR[ XMZM QbSb", "H\\SMQMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMPLNKMJMHNGPFSFWH MPLSLUMX WXXUXSWP QMONNOMRMVNYOZQ[ S[UZVYWVWRVOUNOKNJNIOHQGTGWH", "I[SMUNVOWOVNSMQMMNLOLQMRQS SSQSMTKVKXMZP[S[VZXXWXVZ NNMOMQNR MULVLXMY QMONNONQORQS QSNTMVMXNZP[", "I[QHRGRFQFPGPIQJTKXKYKYJXJUKSLPNNPMRLULWMYNZP[S\\U]V_VaUbSbRaR`S`Sa POOPNRMUMWNYOZ UKRMQNOQNTNWOYQ[S\\", "G]JMKNLPL[ KMLNMPMZ HPINJMLMMNNPN[ UMVNWQWb WOXRXa NQOOPNRMUMWNXOYRYb L[N[ WbYb", "F]IMJNKPKTLWMYNZQ[S[VZWYXWYRYOXJVGTFRFPGOIOKPMSOVP[Q JMKNLPLTMWNY VYWWXRXOWJVHTG GPHNIMKMLNMPMTNXOZQ[ S[UZVXWSWNVJUHSGQGOI", "KZNMONPPPXQZS[U[WZXX OMPNQPQXRZ LPMNNMPMQNRPRXSZT[", "G]JMKNLPL[ KMLNMPMZ HPINJMLMMNNPN[ SOUNWNXOXPZPZNXMVMTNQQOTNW XNYOYP PSQSWYYYZX TWWZYZ RTUZV[X[YZZX L[N[", "H\\JGKFMFOGQIXXYZZ[ OHPIWXXY MFNGOIVXXZZ[[[ RMJZJ[K[RM", "G]KMKb LNLa MMMb VMVXWZX[Z[[Z\\X WNWXXZY[ XMXXYZZ[ MXNZP[R[TZUYVW KMMM VMXM KbMb", "G]JMKNLPMTN[ KMLNMPNTOZ HPINJMLMMNNPOTPZ VVWTXQXMYMZNYQXSVVTXQZN[ XRYOYM", "JZPGSFRFPGOHOIPJSKVLWKVJSKPLNMMOMQNRPSSTVUWTVSSTOUMVLXLZM[O\\S]U^V_VaTbRbOaPaRb OMNONQOR NVMXMZN[ VKSKQLPMOOOQQSST VTSTPUOVNXNZP\\S]", "G]IQJOKNMM[M KOMNZN IQJPLO[O OONZM[LZMWOO UOVZW[XZWWUO [M[O OOMZ UOWZ", "G\\QMNNLPKTKb MPLTLa QMONNOMSMb MWNYOZQ[S[VZXXYUYSXPVNSMQM WXXVXRWP S[UZVYWVWRVOUNSM KbMb", "G]PMMNKPJSJUKXMZP[R[UZWXXUXSWPUNRM LPKRKVLX VXWVWRVP PMNNMOLRLVMYNZP[ R[TZUYVVVRUOTNRM RMZO[N[MPM RMZN", "H\\JQKOLNNMZM LONNYN JQKPMOZO ROQZR[SZRO ZMZO RORZ", "G\\JMKNLPLUMXOZQ[S[UZWXXVYRYNXMWMXPXSWWUZ KMLNMPMUNX WMXNXO HPINJMLMMNNPNVOYQ[", "G]RQQNPMNMLNKOJRJUKXMZP[T[WZYXZUZRYOXNVMTMSNRQ LOKRKULX XXYUYRXO NMMNLQLVMYNZP[ T[VZWYXVXQWNVM RQQb RQRa RQSb QbSb", "H\\LMMNNPT_VaXbZb[a NOOPU_V` INJMLMNNPPV_WaXb VSXPYMZMYOVSN\\K`JbKbL_N\\", "F]HNINJPJUKXMZP[T[VZXXYVZRZNYMXMYPYSXWVZ JNKPKULX XMYNYO GPHNIMJMKNLPLVMYNZP[ QFSb RGRa SFQb QFSF QbSb", "F^NMLNJPISIWJYKZM[O[QZRYSWSTRSQTQWRYSZU[W[YZZY[W[SZPXNVM KPJSJWKY RTRX YYZWZSYP NMLOKRKWLZM[ W[XZYWYRXOVM", "G]WMUTUXVZW[Y[[Y\\W XMVTVZ WMYMWTVX UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT NNLQKTKWLY PMNOMQLTLWMZN[", "I\\PFNMMSMWNYOZQ[S[VZXWYTYRXOWNUMSMQNPOOQNT QFOMNQNWOZ VYWWXTXQWO MFRFPMNT S[UYVWWTWQVNUM NFQG OFPH", "I[WQWPVPVRXRXPWNUMRMONMQLTLVMYNZP[R[UZWW OONQMTMWNY RMPOOQNTNWOZP[", "G]YFVQUUUXVZW[Y[[Y\\W ZFWQVUVZ VF[FWTVX UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT MOLQKTKWLY PMNOMQLTLWMZN[ WFZG XFYH", "I[MVQUTTWRXPWNUMRMONMQLTLVMYNZP[R[UZWX OONQMTMWNY RMPOOQNTNWOZP[", "JZZHZGYGYI[I[GZFXFVGTISKRNQRO[N^M`Kb TJSMRRP[O^ XFVHUJTMSRQZP]O_MaKbIbHaH_J_JaIaI` NMYM", "H]XMT[S^QaOb YMU[S_ XMZMV[T_RaObLbJaI`I^K^K`J`J_ VTVQUNSMQMNNLQKTKVLYMZO[Q[SZTYUWVT NOMQLTLWMY QMOONQMTMWNZO[", "G]OFI[K[ PFJ[ LFQFK[ MTOPQNSMUMWNXPXSVX WNWRVVVZ WPUUUXVZW[Y[[Y\\W MFPG NFOH", "KXTFTHVHVFTF UFUH TGVG LQMOOMQMRNSPSSQX RNRRQVQZ RPPUPXQZR[T[VYWW", "KXUFUHWHWFUF VFVH UGWG MQNOPMRMSNTPTSRZQ]P_NaLbJbIaI_K_KaJaJ` SNSSQZP]O_ SPRTP[O^N`Lb", "G]OFI[K[ PFJ[ LFQFK[ YOYNXNXPZPZNYMWMUNQROS MSOSQTRUTYUZWZ QUSYTZ OSPTRZS[U[WZYW MFPG NFOH", "LXTFQQPUPXQZR[T[VYWW UFRQQUQZ QFVFRTQX RFUG SFTH", "@cAQBODMFMGNHPHSF[ GNGSE[ GPFTD[F[ HSJPLNNMPMRNSPSSQ[ RNRSP[ RPQTO[Q[ SSUPWNYM[M]N^P^S\\X ]N]R\\V\\Z ]P[U[X\\Z][_[aYbW", "F^GQHOJMLMMNNPNSL[ MNMSK[ MPLTJ[L[ NSPPRNTMVMXNYPYSWX XNXRWVWZ XPVUVXWZX[Z[\\Y]W", "H\\QMNNLQKTKVLYMZP[S[VZXWYTYRXOWNTMQM NOMQLTLWMY VYWWXTXQWO QMOONQMTMWNZP[ S[UYVWWTWQVNTM", "G]HQIOKMMMNNOPOSNWKb NNNSMWJb NPMTIb OTPQQORNTMVMXNYOZRZTYWWZT[R[PZOWOT XOYQYTXWWY VMWNXQXTWWVYT[ FbNb JaGb J`Hb K`Lb JaMb", "G\\WMQb XMRb WMYMSb UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT MOLQKTKWLY PMNOMQLTLWMZN[ NbVb RaOb R`Pb S`Tb RaUb", "I[JQKOMMOMPNQPQTO[ PNPTN[ PPOTM[O[ YOYNXNXPZPZNYMWMUNSPQT", "J[XPXOWOWQYQYOXNUMRMONNONQOSQTTUVVWX ONNQ ORQSTTVU WVVZ NOOQQRTSVTWVWXVZS[P[MZLYLWNWNYMYMX", "KYTFQQPUPXQZR[T[VYWW UFRQQUQZ TFVFRTQX NMXM", "F^GQHOJMLMMNNPNSLX MNMRLVLZ MPKUKXLZN[P[RZTXVU XMVUVXWZX[Z[\\Y]W YMWUWZ XMZMXTWX", "H\\IQJOLMNMONPPPSNX ONORNVNZ OPMUMXNZP[R[TZVXXUYQYMXMXNYP", "CaDQEOGMIMJNKPKSIX JNJRIVIZ JPHUHXIZK[M[OZQXRU TMRURXSZU[W[YZ[X]U^Q^M]M]N^P UMSUSZ TMVMTTSX", "G]JQLNNMPMRNSPSR PMQNQRPVOXMZK[I[HZHXJXJZIZIY RORRQVQY ZOZNYNYP[P[NZMXMVNTPSRRVRZS[ PVPXQZS[U[WZYW", "G]HQIOKMMMNNOPOSMX NNNRMVMZ NPLULXMZO[Q[SZUXWT YMU[T^RaPb ZMV[T_ YM[MW[U_SaPbMbKaJ`J^L^L`K`K_", "H\\YMXOVQNWLYK[ XOOOMPLR VORNONNO VORMOMMOLR LYUYWXXV NYRZUZVY NYR[U[WYXV", "H\\WQVOUNSMQMNNLPKSKULXNZQ[S[VZWYXWYSYNXJWHVGSFQFNGMHNHOGQF MPLRLVMX VYWWXSXNWJVH QMONNOMRMVNYOZQ[ S[UZVXWTWMVIUGSF", "I[UMWNXOYOXNUMRMONMPLSLUMXOZR[U[XZYYXYWZU[ NPMSMUNX RMPNOONRNVOYPZR[ NTTUUTTSNT NTTT", "H\\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF NHMJLNLSMWNY VYWWXSXNWJVH QFOGNIMNMSNXOZQ[ S[UZVXWSWNVIUGSF LPXQ LQXP", "G]PMMNKPJSJUKXMZP[T[WZYXZUZSYPWNTMPM LPKSKULX XXYUYSXP PMNNMOLRLVMYNZP[T[VZWYXVXRWOVNTM QFSb RGRa SFQb QFSF QbSb`Ub QHPKOOOUPYQ\\ SDRFQIPOPUQ[R^S`", "KYOBQDSGUKVPVTUYS]Q`Ob SHTKUOUUTYS\\ QDRFSITOTUS[R^Q`", "F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FH[ [FI[ [FJ[ YTWTUUTWTYV[X[ZZ[X[VYT OGLFIIJLMMPJOG NFJGIK KMOLPH ZUWTTWUZX[[XZU YTUUTY V[ZZ[V H[J[", "E`b SHQKOONTN\\ ZBWDTGRJQLPOOSN\\ NTO]P`Qb", "JZSBUEVHWLWQVUTYR\\O_LaJb VHVPUUSYQ\\ SBTDUGVP VHUQTUSXRZP]M`Jb", "J[TFSGUQTR TFTR TFUGSQTR OIPIXOYO OIYO OIOJYNYO YIXIPOOO YIOO YIYJONOO", "H\\PFOGMM PGMM PFQGMM ZFYGWM ZGWM ZF[GWM", "KZSFQGPIPKQMSNUNWMXKXIWGUFSF SFPIQMUNXKWGSF UFQGPKSNWMXIUF", "G^SFKbLb SFTFLb YFQbRb YFZFRb KP\\P\\Q KPKQ\\Q IWZWZX IWIXZX", "E^^F\\GXHUHQGOFMFKGJIJKLMNMPLQJQHOF ^FE[ ^FF[ ^FG[ XTVTTUSWSYU[W[YZZXZVXT PGMFJIKLNMQJPG OFKGJK LMPLQH YUVTSWTZW[ZXYU XTTUSY U[YZZV E[G[", "E`UQUNTLRKPKNLMMLPLSMUOVQVSUTTUQ OLNMMPMSNU RKPLOMNPNSOUPV VKUQUSVUXVZV\\U]R]O\\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYXYWZ WKVQVSWU VKXKWQWSXUZV", "/build/master_pack-android/opencv/modules/imgproc/src/intersection.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/accum.cpp", "_mask.empty() || (_src1.sameSize(_mask) && _mask.type() == CV_8U)", "IPP:(ipp_accumulate_weighted(_src, _dst, alpha, _mask))", "IPP:(ipp_accumulate_product(_src1, _src2, _dst, _mask))", "IPP:(ipp_accumulate_square(_src, _dst, _mask))", "IPP:(ipp_accumulate(_src, _dst, _mask))", "/build/master_pack-android/opencv/modules/imgproc/src/convhull.cpp", "Convex hull must represented as a sequence of indices or sequence of pointers", "/build/master_pack-android/opencv/modules/imgproc/src/precomp.hpp", "The hull matrix should be continuous and have a single row or a single column", "The hull matrix must have the same type as input or 32sC1 (integers)", "/build/master_pack-android/opencv/modules/imgproc/src/connectedcomponents.cpp", "ccltype == CCL_GRANA || ccltype == CCL_WU || ccltype == CCL_DEFAULT", "The arrays must have equal number of columns (which is number of dimensions but 1)", "/build/master_pack-android/opencv/modules/imgproc/src/emd.cpp", "Only one of cost matrix or distance function should be non-NULL in case of user-defined distance", "The lower boundary can not be calculated if the cost matrix is used", "In case of user-defined distance Distance function is undefined", "Number of dimensions can be 0 only if a user-defined metric is used", "/build/master_pack-android/opencv/modules/imgproc/src/moments.cpp", "contour.depth() == CV_32S || contour.depth() == CV_32F", "/build/master_pack-android/opencv/modules/imgproc/src/cornersubpix.cpp", "win.width > 0 && win.height > 0", "src.cols >= win.width*2 + 5 && src.rows >= win.height*2 + 5", "_scale > 0 && _sigma_scale > 0 && _quant >= 0 && _ang_th > 0 && _ang_th < 180 && _density_th >= 0 && _density_th < 1 && _n_bins > 0", "/build/master_pack-android/opencv/modules/imgproc/src/lsd.cpp", "!(double_equal(Ixx, 0) && double_equal(Iyy, 0) && double_equal(Ixy, 0))", "!_image.empty() && (_image.channels() == 1 || _image.channels() == 3)", "/build/master_pack-android/opencv/modules/imgproc/src/segmentation.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/morph.cpp", "shape == MORPH_RECT || shape == MORPH_CROSS || shape == MORPH_ELLIPSE", "cols > 0 && rows > 0 && anchor.inside(cv::Rect(0,0,cols,rows)) && (shape != CV_SHAPE_CUSTOM || values != 0)", "depth == CV_8U || depth == CV_16U || depth == CV_16S || depth == CV_32F || depth == CV_64F", "IPP:ippMorph(op, src_type, dst_type, src_data, src_step, dst_data, dst_step, width, height, roi_width, roi_height, roi_x, roi_y, roi_width2, roi_height2, roi_x2, roi_y2, kernel_type, kernel_data, kernel_step, kernel_width, kernel_height, anchor_x, anchor_y, borderType, borderValue, iterations, isSubmatrix)", "/build/master_pack-android/opencv/modules/imgproc/src/corner.cpp", "src.rows == dst.rows && src.cols*6 == dst.cols*dst.channels() && dst.depth() == CV_32F", "IPP:(ipp_cornerHarris( src, dst, blockSize, ksize, k, borderType ))", "IPP:(ipp_cornerMinEigenVal( _src, _dst, blockSize, ksize, borderType ))", "/build/master_pack-android/opencv/modules/imgproc/src/subdivision2d.cpp", "getEdge(getEdge(getEdge(e,NEXT_AROUND_LEFT),NEXT_AROUND_LEFT),NEXT_AROUND_LEFT) == e", "getEdge(getEdge(getEdge(e,NEXT_AROUND_RIGHT),NEXT_AROUND_RIGHT),NEXT_AROUND_RIGHT) == e", "Subdiv2D::locate returned invalid location = %d", "/build/master_pack-android/opencv/modules/imgproc/src/hough.cpp", "The destination matrix should be continuous and have a single row or a single column", "The destination matrix data type is inappropriate, see the manual", "dp, min_dist, canny_threshold and acc_threshold must be all positive numbers", "/build/master_pack-android/opencv/modules/imgproc/src/contours.cpp", "[Start]FindContours supports only CV_8UC1 images when mode != CV_RETR_FLOODFILL otherwise supports CV_32SC1 images only", "(_contours.kind() == _InputArray::STD_VECTOR_VECTOR || _contours.kind() == _InputArray::STD_VECTOR_MAT || _contours.kind() == _InputArray::STD_VECTOR_UMAT)", "_contours.empty() || (_contours.channels() == 2 && _contours.depth() == CV_32S)", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/core_c.h", "/build/master_pack-android/opencv/modules/imgproc/src/distransform.cpp", "distType == CV_DIST_C || distType == CV_DIST_L1 || distType == CV_DIST_L2", "/build/master_pack-android/opencv/modules/imgproc/src/spatialgradient.cpp", "idxmat.isContinuous() && idxmat.type() == CV_32S && (idxmat.cols == 1 || idxmat.rows == 1)", "/build/master_pack-android/opencv/modules/ml/src/kdtree.cpp", "vecmat.isContinuous() && vecmat.type() == CV_32F && vecmat.total() == (size_t)points.cols", "lowerBound.size == upperBound.size && lowerBound.isContinuous() && upperBound.isContinuous() && lowerBound.type() == upperBound.type() && lowerBound.type() == CV_32F && lowerBound.total() == (size_t)ptdims", "/build/master_pack-android/opencv/modules/ml/src/inner_functions.cpp", "/build/master_pack-android/opencv/modules/ml/src/ann_mlp.cpp", "Some of new output training vector components run exceed the original range too much", "The network has not been created. Use method create or the appropriate constructor", "input training data should be a floating-point matrix with the number of rows equal to the number of training samples and the number of columns equal to the size of 0-th (input) layer", "output training data should be a floating-point matrix with the number of rows equal to the number of training samples and the number of columns equal to the size of last (output) layer", "The network has not been trained or loaded", "(type == CV_32F || type == CV_64F) && inputs.cols == layer_sizes[0]", "there should be at least one input and one output and every hidden layer must have more than 1 neuron", "/build/master_pack-android/opencv/modules/ml/src/data.cpp", "type == CV_32S || type == CV_32F || type == CV_64F", "type spec is not correct; it should have format \"cat\", \"ord\" or \"ord[n1,n2-n3,n4-n5,...]cat[m1-m2,m3,m4-m5,...]\", where n's and m's are 0-based variable indices", "type of some variables is not specified", "(data.cols == 1 || data.rows == 1) && (data.type() == CV_32S || data.type() == CV_32F)", "_layout == ROW_SAMPLE || _layout == COL_SAMPLE", "(sampleIdx.checkVector(1, CV_32S, true) > 0 && checkRange(sampleIdx, true, 0, 0, nsamples)) || sampleIdx.checkVector(1, CV_8U, true) == nsamples", "(varIdx.checkVector(1, CV_32S, true) > 0 && checkRange(varIdx, true, 0, 0, ninputvars)) || varIdx.checkVector(1, CV_8U, true) == ninputvars", "(layout == ROW_SAMPLE && responses.rows == nsamples) || (layout == COL_SAMPLE && responses.cols == nsamples)", "varType.checkVector(1, CV_8U, true) == nvars && checkRange(varType, true, 0, VAR_ORDERED, VAR_CATEGORICAL+1)", "samples.type() == CV_32F || samples.type() == CV_32S", "responses.type() == CV_32F || responses.type() == CV_32S", "missing.size() == samples.size() && missing.type() == CV_8U", "invalid CSV format; no data found", "(!varTypesSet && vtypes[i] == rowtypes[i]) || (varTypesSet && (vtypes[i] == rowtypes[i] || rowtypes[i] == VAR_ORDERED))", "If responses are vector values, not scalars, they must be marked as ordered responses", "/build/master_pack-android/opencv/modules/ml/src/svm.cpp", "INTERNAL ERROR: Unknown SVM type, the SVM structure is probably corrupted", "Invalid type of parameter (use one of SVM::C, SVM::GAMMA et al.)", "SVM model data is invalid, check sv_count, var_* and class_count tags", "No element name has been given", "Unknown/unsupported kernel type", "gamma parameter of the kernel must be positive", "The kernel parameter <coef0> must be positive or zero", "The kernel parameter <degree> must be positive", "The parameter C must be positive", "Invalid SVM kernel type (or custom kernel)", "(int)sv_node.size() == sv_total", "(int)uncompressed_sv_node.size() == uncompressed_sv_total", "(int)df_node.size() == df_count", "Array of class labels is missing or invalid", "svmType == C_SVC || svmType == NU_SVC", "_responses.isContinuous() && _responses.checkVector(1, CV_32S) == nsamples", "While cross-validation one or more of the classes have been fell out of the sample. Try to reduce <Params::k_fold>", "params.class_weights must be 1d floating-point vector containing as many elements as the number of classes", "in the case of classification problem the responses must be categorical; either specify varType when creating TrainData, or pass integer responses", "/build/master_pack-android/opencv/modules/ml/src/lr.cpp", "Logistic Regression Classifier", "params.CVFolds should be =0 (the tree is not pruned) or n>0 (tree is pruned using n-fold cross-validation)", "/build/master_pack-android/opencv/modules/ml/src/precomp.hpp", "/build/master_pack-android/opencv/modules/ml/src/boost.cpp", "/build/master_pack-android/opencv/modules/ml/src/svmsgd.cpp", "params.termCrit.type & TermCriteria::COUNT || params.termCrit.type & TermCriteria::EPS", "(params.marginType == SOFT_MARGIN || params.marginType == HARD_MARGIN) && (extendedWeights.type() == CV_32FC1)", "(params.termCrit.type & TermCriteria::COUNT || params.termCrit.type & TermCriteria::EPS)", "/build/master_pack-android/opencv/modules/ml/src/testset.cpp", "covMatType == COV_MAT_SPHERICAL || covMatType == COV_MAT_DIAGONAL || covMatType == COV_MAT_GENERIC", "/build/master_pack-android/opencv/modules/ml/src/em.cpp", "startStep == START_AUTO_STEP || startStep == START_E_STEP || startStep == START_M_STEP", "covMatType == COV_MAT_GENERIC || covMatType == COV_MAT_DIAGONAL || covMatType == COV_MAT_SPHERICAL", "!probs || (!probs->empty() && probs->rows == nsamples && probs->cols == nclusters && (probs->type() == CV_32FC1 || probs->type() == CV_64FC1))", "!weights || (!weights->empty() && (weights->cols == 1 || weights->rows == 1) && static_cast<int>(weights->total()) == nclusters && (weights->type() == CV_32FC1 || weights->type() == CV_64FC1))", "!means || (!means->empty() && means->rows == nclusters && means->cols == dim && means->channels() == 1)", "!covs || (!covs->empty() && static_cast<int>(covs->size()) == nclusters)", "(stype == CV_32F || stype == CV_64F) && (ptype == CV_32F || ptype == CV_64F)", "sample.size() == Size(means.cols, 1)", "The input samples must be 32f matrix with the number of columns = nallvars", "/build/master_pack-android/opencv/modules/ml/src/nbayes.cpp", "When the number of input samples is >1, the output vector of results must be passed", "The field \"var_count\" of NBayes classifier is missing or non-positive", "The new training data is inconsistent with the original training data; varIdx and the class labels should be the same", "/build/master_pack-android/opencv/modules/ml/src/knearest.cpp", "test_samples.type() == CV_32F && test_samples.cols == samples.cols", "new_samples.cols == samples.cols && new_responses.cols == responses.cols", "/build/master_pack-android/opencv/modules/ml/src/tree.cpp", "/build/master_pack-android/opencv/modules/ml/src/rtrees.cpp", "/build/master_pack-android/opencv/modules/objdetect/src/haar.cpp", "header of the stage classifier #%d is invalid (has null pointers or non-positive classfier count)", "rectangle #%d of the classifier #%d of the stage classifier #%d is not inside the reference (original) cascade window", "Trees node is not a valid sequence. (stage %d)", "Tree node is not a valid sequence. (stage %d, tree %d)", "Tree node %d is not a valid map. (stage %d, tree %d)", "Feature node is not a valid map. (stage %d, tree %d, node %d)", "Rects node is not a valid sequence. (stage %d, tree %d, node %d)", "Rect %d is not a valid sequence. (stage %d, tree %d, node %d)", "x coordinate must be non-negative integer. (stage %d, tree %d, node %d, rect %d)", "y coordinate must be non-negative integer. (stage %d, tree %d, node %d, rect %d)", "width must be positive integer and (x + width) must not exceed window width. (stage %d, tree %d, node %d, rect %d)", "height must be positive integer and (y + height) must not exceed window height. (stage %d, tree %d, node %d, rect %d)", "weight must be real number. (stage %d, tree %d, node %d, rect %d)", "tilted must be 0 or 1. (stage %d, tree %d, node %d)", "threshold must be real number. (stage %d, tree %d, node %d)", "left node must be valid node number. (stage %d, tree %d, node %d)", "left node or left value must be specified. (stage %d, tree %d, node %d)", "left value must be real number. (stage %d, tree %d, node %d)", "Tree structure is broken: too many values. (stage %d, tree %d, node %d)", "right node must be valid node number. (stage %d, tree %d, node %d)", "right node or right value must be specified. (stage %d, tree %d, node %d)", "right value must be real number. (stage %d, tree %d, node %d)", "Tree structure is broken: too few values. (stage %d, tree %d)", "stage threshold must be real number. (stage %d)", "parent must be integer number. (stage %d)", "next must be integer number. (stage %d)", "Hidden cascade has not been created.\nUse cvSetImagesForHaarClassifierCascade", "Only (32s, 64f, 32s) combination of (sum,sqsum,tilted_sum) formats is allowed", "Sum and tilted_sum must have the same stride (step, widthStep)", "%s%s%d/AdaBoostCARTHaarClassifier.txt", "%s/%d/AdaBoostCARTHaarClassifier.txt", "/build/master_pack-android/opencv/modules/objdetect/src/cascadedetect.cpp", "/build/master_pack-android/opencv/modules/objdetect/src/cascadedetect.hpp", "sqsum.u == u && sqsum.size() == s.szi && sqsum.type()==CV_32S", "HOG cascade is not supported in 3.0", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/operations.hpp", "blockSize.width % cellSize.width == 0 && blockSize.height % cellSize.height == 0", "/build/master_pack-android/opencv/modules/objdetect/src/hog.cpp", "(winSize.width - blockSize.width) % blockStride.width == 0 && (winSize.height - blockSize.height) % blockStride.height == 0", "pt.x % cacheStride.width == 0 && pt.y % cacheStride.height == 0", "pt0.x % cacheStride.width == 0 && pt0.y % cacheStride.height == 0", "/build/master_pack-android/opencv/modules/objdetect/src/detection_based_tracker.cpp", "\n %s: ERROR: OpenCV Exception caught: \n'%s'\n\n", "\n %s: ERROR: Exception caught: \n'%s'\n\n", "\n %s: ERROR: UNKNOWN Exception caught\n\n", "DetectionBasedTracker: workcycleObjectDetectorFunction: ERROR concerning pointer, received as the function parameter", "/build/master_pack-android/opencv/modules/photo/src/tonemap.cpp", "/build/master_pack-android/opencv/modules/photo/src/denoise_tvl1.cpp", "minxd >= 0 && minyd >= 0 && maxxd <= dest.rows && maxyd <= dest.cols", "/build/master_pack-android/opencv/modules/photo/src/seamless_cloning.cpp", "/build/master_pack-android/opencv/modules/photo/src/merge.cpp", "response.rows == LDR_SIZE && response.cols == 1 && response.channels() == channels", "log_response.rows == LDR_SIZE && log_response.cols == 1 && log_response.channels() == channels", "/build/master_pack-android/opencv/modules/photo/src/seamless_cloning_impl.cpp", "/build/master_pack-android/opencv/modules/photo/src/contrast_preserve.cpp", "/build/master_pack-android/opencv/modules/photo/src/align.cpp", "/build/master_pack-android/opencv/modules/photo/src/calibrate.cpp", "images.size() == times.total()", "channels >= 1 && channels <= 3", "/build/master_pack-android/opencv/modules/photo/src/hdr_common.cpp", "/build/master_pack-android/opencv/modules/photo/src/denoising.cpp", "imgToDenoiseIndex and temporalWindowSize should be chosen corresponding srcImgs size!", "/build/master_pack-android/opencv/modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp", "/build/master_pack-android/opencv/modules/photo/src/fast_nlmeans_denoising_invoker.hpp", "srcImgs[0].channels() == pixelInfo<T>::channels", "template_window_size_ <= 46340", "Unsupported number of channels! Only 1, 2, 3, and 4 are supported", "Unsupported depth! Only CV_8U and CV_16U are supported for NORM_L1", "Unsupported image format! Only CV_8U, CV_8UC2, CV_8UC3 and CV_8UC4 are supported", "Type of input images should be CV_8UC3!", "/build/master_pack-android/opencv/modules/photo/src/npr.cpp", "/build/master_pack-android/opencv/modules/photo/src/inpaint.cpp", "8-bit, 16-bit unsigned or 32-bit float 1-channel and 8-bit 3-channel input/output images are supported", "The flags argument must be one of CV_INPAINT_TELEA or CV_INPAINT_NS", "/build/master_pack-android/opencv/modules/video/src/ecc.cpp", "motionType == MOTION_TRANSLATION || motionType == MOTION_EUCLIDEAN || motionType == MOTION_AFFINE || motionType == MOTION_HOMOGRAPHY", "motionType == MOTION_AFFINE || motionType == MOTION_HOMOGRAPHY || motionType == MOTION_EUCLIDEAN || motionType == MOTION_TRANSLATION", "criteria.type & TermCriteria::COUNT || criteria.type & TermCriteria::EPS", "The algorithm stopped before its convergence. The correlation is going to be minimized. Images may be uncorrelated or non-overlapped", "/build/master_pack-android/opencv/modules/video/src/kalman.cpp", "/build/master_pack-android/opencv/modules/video/src/bgfg_KNN.cpp", "/build/master_pack-android/opencv/modules/video/src/camshift.cpp", "/build/master_pack-android/opencv/modules/video/src/bgfg_gaussmix2.cpp", "frameType == CV_8UC1 || frameType == CV_8UC3 || frameType == CV_32FC1 || frameType == CV_32FC3", "state and measurement vectors must have positive number of dimensions", "/build/master_pack-android/opencv/modules/video/src/compat_video.cpp", "/build/master_pack-android/opencv/modules/video/src/tvl1flow.cpp", "!useInitialFlow || (_flow.size() == I0.size() && _flow.type() == CV_32FC2)", "/build/master_pack-android/opencv/modules/video/src/lkpyramid.cpp", "img.depth() == CV_8U && winSize.width > 2 && winSize.height > 2", "ofs.x >= winSize.width && ofs.y >= winSize.height && ofs.x + prevPyr[lvlStep1].cols + winSize.width <= fullSize.width && ofs.y + prevPyr[lvlStep1].rows + winSize.height <= fullSize.height", "ofs.x >= winSize.width && ofs.y >= winSize.height && ofs.x + nextPyr[lvlStep2].cols + winSize.width <= fullSize.width && ofs.y + nextPyr[lvlStep2].rows + winSize.height <= fullSize.height", "prevPyr[level * lvlStep1].size() == nextPyr[level * lvlStep2].size()", "prevPyr[level * lvlStep1].type() == nextPyr[level * lvlStep2].type()", "Both input images must have either 8uC1 or 8uC3 type", "Both input images must have the same size", "prev0.size() == next0.size() && prev0.channels() == next0.channels() && prev0.channels() == 1 && pyrScale_ < 1", "/build/master_pack-android/opencv/modules/video/src/optflowgf.cpp", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/map_entry_lite.h", "CHECK failed: default_instance_ != NULL: ", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/function.pb.cc", "tensorflow.GradientDef.function_name", "tensorflow.GradientDef.gradient_func", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/map.h", "Protocol Buffer map usage error:\n", "MapKey::type MapKey is not initialized. ", "Call set methods to initialize MapKey.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/map_entry.h", "CHECK failed: (&from) != (this): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/stubs/hash.h", "tensorflow.FunctionDef.Node.ret", "tensorflow.FunctionDef.Node.op", "tensorflow.FunctionDef.Node.arg", "tensorflow.FunctionDef.Node.dep", "tensorflow.FunctionDef.Node.AttrEntry.key", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/map_field_inl.h", "CHECK failed: *MapFieldBase::entry_descriptor_ != NULL: ", "CHECK failed: default_entry_ != NULL: ", "CHECK failed: MapFieldBase::repeated_field_ != NULL: ", "tensorflow.OpDef.ArgDef.description", "tensorflow.OpDef.ArgDef.type_attr", "tensorflow.OpDef.ArgDef.number_attr", "tensorflow.OpDef.ArgDef.type_list_attr", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/op_def.pb.cc", "tensorflow.OpDeprecation.explanation", "tensorflow.OpDef.AttrDef.description", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/attr_value.pb.cc", "tensorflow.AttrValue.placeholder", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/repeated_field.h", "CHECK failed: (static_cast<size_t>(new_size)) <= ((std::numeric_limits<size_t>::max() - kRepHeaderSize) / sizeof(Element)): ", "Requested size is too large to fit into size_t.", "tensorflow.NameAttrList.AttrEntry.key", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/types.pb.cc", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/versions.pb.cc", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/tensor.pb.cc", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/graph.pb.cc", "tensorflow.NodeDef.AttrEntry.key", "tensorflow.TensorShapeProto.Dim.name", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/tensor_shape.pb.cc", "/build/master_pack-android/opencv/modules/dnn/misc/caffe/caffe.pb.cc", "/build/master_pack-android/opencv/modules/dnn/src/caffe/caffe_importer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/caffe/caffe_io.cpp", "Unknown V1LayerParameter layer type: ", "Input NetParameter has V0 layer -- ignoring.", "Input NetParameter to be upgraded already specifies 'layer' ", "fields; these will be ignored for the upgrade.", "Unknown parameter num_output for layer type ", "Unknown parameter biasterm for layer type ", "Unknown parameter weight_filler for layer type ", "Unknown parameter bias_filler for layer type ", "Unknown parameter pad for layer type ", "Unknown parameter kernelsize for layer type ", "Unknown parameter group for layer type ", "Unknown parameter stride for layer type ", "Unknown parameter pool for layer type ", "Unknown parameter dropout_ratio for layer type ", "Unknown parameter local_size for layer type ", "Unknown parameter alpha for layer type ", "Unknown parameter beta for layer type ", "Unknown parameter k for layer type ", "Unknown parameter source for layer type ", "Unknown parameter batchsize for layer type ", "Unknown parameter rand_skip for layer type ", "Unknown parameter shuffle for layer type ", "Unknown parameter new_height for layer type ", "Unknown parameter new_width for layer type ", "Unknown parameter concat_dim for layer type ", "Unknown parameter det_fg_threshold for layer type ", "Unknown parameter det_bg_threshold for layer type ", "Unknown parameter det_fg_fraction for layer type ", "Unknown parameter det_context_pad for layer type ", "Unknown parameter det_crop_mode for layer type ", "Unknown parameter hdf5_output_param for layer type ", "(layer_param.type() == \"conv\") || (layer_param.type() == \"pool\")", "Padding layer input to non-convolutional / non-pooling layer type ", "layer_connection.bottom_size()=1", "Conv Layer takes a single blob as input.", "Padding Layer takes a single blob as input.", "Padding Layer produces a single blob as output.", "Attempting to upgrade input file specified using deprecated ", "Warning: had one or more problems upgrading ", "V0NetParameter to NetParameter (see above); continuing anyway.", "Successfully upgraded file specified using deprecated ", "Note that future Caffe releases will not support ", "V0NetParameter; use ./build/tools/upgrade_net_proto_text for ", "prototxt and ./build/tools/upgrade_net_proto_binary for model ", "weights upgrade this and any other net protos to the new format.", "data transformation parameters.", "Note that future Caffe releases will only support ", "transform_param messages for transformation fields.", "V1LayerParameter (see above); continuing anyway.", "Attempting to upgrade batch norm layers using deprecated ", "Successfully upgraded batch norm layers using deprecated ", "ReadProtoFromBinaryFile(param_file, param)", "Failed to parse NetParameter file: ", "ReadProtoFromTextFile(param_file, param)", "/build/master_pack-android/opencv/modules/dnn/src/tensorflow/tf_io.cpp", "ReadProtoFromBinaryFileTF(param_file, param)", "Failed to parse GraphDef file: ", "/build/master_pack-android/opencv/modules/dnn/src/tensorflow/tf_importer.cpp", "Const input blob for weights not found", "tensor.dtype() == tensorflow::DT_FLOAT", "sizeof(int32_t) * values.size() == paddings.tensor_content().size()", "Only single padding operation per layer is supported", "Expected gamma, beta, mean and std", "Unknown layer type %s in op %s", "!haveConst || layer.input_size() == 2", "(idx == -1 && size() == 1) || (idx >= 0 && idx < size())", "/build/master_pack-android/opencv/modules/dnn/src/torch/torch_importer.cpp", "typeidx == TYPE_TORCH || (typeidx == TYPE_NIL && ndims == 0)", "typeStorage >= 0 && typeTensor == typeStorage", "Storage has insufficent number of elemements for requested Tensor", "module->params.has(\"indices_blob_id\")", "tensorParams.count(\"running_var\") && tensorParams.count(\"running_mean\")", "tensorParams[\"weight\"].second.total() == outputChannels", "tensorParams[\"weight\"].second.total() == 1", "scalarParams.has(\"pad\") && scalarParams.has(\"dim\")", "scalarParams.has(\"padW\") && scalarParams.has(\"padH\")&& scalarParams.has(\"dW\")&& scalarParams.has(\"dH\")&& scalarParams.has(\"dilationW\")&& scalarParams.has(\"dilationH\")&& scalarParams.has(\"kW\")&& scalarParams.has(\"kH\")&& scalarParams.has(\"nOutputPlane\")", "scalarParams.has(\"padW\") && scalarParams.has(\"padH\")&& scalarParams.has(\"dW\")&& scalarParams.has(\"dH\")&& scalarParams.has(\"adjW\")&& scalarParams.has(\"adjH\")&& scalarParams.has(\"kW\")&& scalarParams.has(\"kH\")&& scalarParams.has(\"nOutputPlane\")", "luaType == TYPE_TABLE && readedIndexes.count(index) == 0", "/build/master_pack-android/opencv/modules/dnn/src/torch/THDiskFile.cpp", "unable to obtain disk file offset (maybe a long overflow occurred)", "read error: read %d blocks instead of %d", "(strlen(format) >= 2 ? (format[0] == '*') && (format[1] == 'a' || format[1] == 'l') : 0)", "read error: failed to allocate buffer", "read error: read 0 blocks instead of 1", "cannot allocate memory for self", "cannot allocate memory for self->name", "/build/master_pack-android/opencv/modules/dnn/src/dnn.cpp", "start < (int)shape.size() && end <= (int)shape.size() && start <= end", "/build/master_pack-android/opencv/modules/dnn/include/opencv2/dnn/shape_utils.hpp", "Layer with requested id=%d not found", "image.dims == 2 && (nch == 3 || nch == 4)", "layerDesc.isInt() || layerDesc.isString()", "Requested layer \"%s\" was not initialized", "backendId != DNN_BACKEND_DEFAULT", "preferableTarget == DNN_TARGET_CPU", "reuseMap.find(host) != reuseMap.end()", "memHosts.find(lp) == memHosts.end()", "ld.requiredOutputs.size() <= outShapes.size()", "layerShapesIt != layersShapes.end()", "!ldBot.backendNodes[preferableBackend].empty()", "preferableBackend == DNN_BACKEND_HALIDE", "!ld.backendNodes[DNN_BACKEND_HALIDE].empty()", "output_slice.isContinuous() && output_slice.size == curr_output.size", "!layers[0].outputBlobs.empty()", "inShapes.size() == outShapes.size()", "src.size == dst.size && src.type() == dst.type() && src.isContinuous() && dst.isContinuous() && src.type() == CV_32F", "/build/master_pack-android/opencv/modules/dnn/src/layers/elementwise_layers.cpp", "srcMat.dims == 2 && srcMat.cols == weights.cols && dstMat.rows == srcMat.rows && dstMat.cols == weights.rows && srcMat.type() == weights.type() && weights.type() == dstMat.type() && srcMat.type() == CV_32F && (biasMat.empty() || (biasMat.type() == srcMat.type() && biasMat.isContinuous() && (int)biasMat.total() == dstMat.cols))", "/build/master_pack-android/opencv/modules/dnn/src/layers/fully_connected_layer.cpp", "blobs[0].dims >= 2 && (size_t)(innerSize * numOutput) == blobs[0].total()", "!bias || (blobs.size() == 2 && (size_t)numOutput == blobs[1].total())", "/build/master_pack-android/opencv/modules/dnn/src/layers/concat_layer.cpp", "inp.isContinuous() && inp.type() == CV_32F && inp.dims == 4 && inp.size[0] == output.size[0] && inp.size[2] == output.size[2] && inp.size[3] == output.size[3]", "/build/master_pack-android/opencv/modules/dnn/src/layers/softmax_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/eltwise_layer.cpp", "srcs[i]->size == dst.size && srcs[i]->type() == dst.type() && srcs[i]->isContinuous()", "/build/master_pack-android/opencv/modules/dnn/src/layers/flatten_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/blank_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/max_unpooling_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/reshape_layer.cpp", "0 <= srcRange.start && srcRange.start <= srcRange.end && srcRange.end <= srcShapeSize", "Copy dim[%d] (which has zero size) is out of the source shape bounds", "/build/master_pack-android/opencv/modules/dnn/src/layers/lrn_layer.cpp", " layer parameter does not contain ", "/build/master_pack-android/opencv/modules/dnn/src/layers/prior_box_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/mvn_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/pooling_layer.cpp", "src.isContinuous() && dst.isContinuous() && src.type() == CV_32F && src.type() == dst.type() && src.dims == 4 && dst.dims == 4 && src.size[0] == dst.size[0] && src.size[1] == dst.size[1] && (mask.empty() || (mask.type() == src.type() && mask.size == dst.size))", "/build/master_pack-android/opencv/modules/dnn/src/layers/shift_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/batch_norm_layer.cpp", "blobs[1].total() == n && blobs[0].isContinuous() && blobs[1].isContinuous() && blobs[0].type() == CV_32F && blobs[1].type() == CV_32F", "/build/master_pack-android/opencv/modules/dnn/src/layers/normalize_bbox_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/scale_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/layers_common.cpp", "In global_pooling mode, kernel_size (or kernel_h and kernel_w) cannot be specified", "In global_pooling mode, pad_h and pad_w must be = 0, and stride_h and stride_w must be = 1", "/build/master_pack-android/opencv/modules/dnn/src/layers/detection_output_layer.cpp", "Could not find location predictions for label %d", "Could not find confidence predictions for label %d", "/build/master_pack-android/opencv/modules/dnn/src/layers/slice_layer.cpp", "Slice indices should be positive, increased and don't exceed size of sliced dimension", "/build/master_pack-android/opencv/modules/dnn/src/layers/padding_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/layers/permute_layer.cpp", "out.size[0] == inp.size[order[0]] && out.size[1] == inp.size[order[1]] && out.size[2] == inp.size[order[2]] && out.size[3] == inp.size[order[3]]", "Orders of dimensions in Permute layer parametermust be in [0...3] interval", "/build/master_pack-android/opencv/modules/dnn/src/layers/convolution_layer.cpp", "blobs[0].dims == 4 && blobs[0].size[3] == kernel.width && blobs[0].size[2] == kernel.height", "input.dims == 4 && (input.type() == CV_32F || input.type() == CV_64F)", "inputs[i]->size[2] == input.size[2] && inputs[i]->size[3] == input.size[3]", "(bias && l->blobs.size() == 2) || (!bias && l->blobs.size() == 1)", "l->adjustPad.width < l->stride.width && l->adjustPad.height < l->stride.height", "input.dims == 4 && output.dims == 4 && input.size[0] == output.size[0] && weights.rows == output.size[1] && weights.cols == (input.size[1]/ngroups)*kernel.width*kernel.height && input.type() == output.type() && input.type() == weights.type() && input.type() == CV_32F && input.isContinuous() && output.isContinuous() && biasvec.size() == (size_t)output.size[1]+2", "inputs.size() == (size_t)1 && inputs[0]->size[1] % blobs[0].size[1] == 0", "scale.isContinuous() && shift.isContinuous() && scale.type() == CV_32F && shift.type() == CV_32F && scale.total() == (size_t)outCn && shift.total() == (size_t)outCn", "scale2.isContinuous() && scale2.type() == CV_32F && scale2.total() == (size_t)outCn", "shift2.isContinuous() && shift2.type() == CV_32F && shift2.total() == (size_t)outCn", "m.isContinuous() && m.type() == CV_32F && (int)m.total() == outCn", "/build/master_pack-android/opencv/modules/dnn/src/layers/recurrent_layers.cpp", "W_hh.size[0] == W_xh.size[0] && W_hh.size[0] == W_hh.size[1] && (int)b_h.total() == W_xh.size[0]", "/build/master_pack-android/opencv/modules/dnn/src/layers/crop_layer.cpp", "number of offset values specified must be equal to the number of dimensions following axis.", "/build/master_pack-android/opencv/modules/dnn/src/layers/split_layer.cpp", "/build/master_pack-android/opencv/modules/dnn/src/init.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/loadsave.cpp", "image.channels() == 1 || image.channels() == 3 || image.channels() == 4", "/build/master_pack-android/opencv/modules/imgcodecs/src/utils.cpp", "Source image must have 1, 3 or 4 channels", "Destination image must have 1 or 3 channels", "Unsupported combination of input/output formats", "/build/master_pack-android/opencv/modules/imgcodecs/src/grfmt_base.cpp", "JPEG 2000 LOADER ERROR: cannot convert colorspace\n", "JPEG 2000 LOADER ERROR: unable to create colorspace\n", "JPEG2000 LOADER ERROR: colorspace conversion failed\n", "/build/master_pack-android/opencv/modules/imgcodecs/src/grfmt_hdr.cpp", "params.empty() || params[0] == HDR_NONE || params[0] == HDR_RLE", "/build/master_pack-android/opencv/modules/imgcodecs/src/grfmt_png.cpp", "PNG input buffer is incomplete", "/build/master_pack-android/opencv/modules/imgcodecs/src/bitstrm.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/rgbe.cpp", "missing blank line after FORMAT specifier", "unable to allocate buffer space", "cvCreateVideoWriter_Images(filename)", "VIDEOIO(%s): raised OpenCV exception:\n\n%s\n", "VIDEOIO(%s): raised C++ exception:\n\n%s\n", "VIDEOIO(%s): raised unknown C++ exception!\n\n", "cvCreateFileCapture_Images (filename)", "/build/master_pack-android/opencv/modules/videoio/src/cap.cpp", "/build/master_pack-android/opencv/modules/videoio/src/cap_images.cpp", "/build/master_pack-android/opencv/modules/videoio/src/cap_mjpeg_encoder.cpp", "Invalid combination of specified video colorspace and the input image colorspace", "Unexpected end of file while searching for %s list\n", "Unexpected element. Expected: %s. Got: %s.\n", "Unexpected list type. Expected: %s. Got: %s.\n", "Unexpected end of file while searching for %s chunk\n", "More than one video stream found within AVI/AVIX list. Stream %c%cdc would be ignored\n", "/build/master_pack-android/opencv/modules/videoio/src/cap_mjpeg_decoder.cpp", "Frame offset points outside movi section.\n", "Failed to parse avi: index was not found\n", "/build/master_pack-android/opencv/modules/highgui/src/window.cpp", "The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Carbon support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script", "Select a ROI and then press SPACE or ENTER button!", "Cancel the selection process by pressing c button!", "Finish the selection process by pressing ESC button!", "/build/master_pack-android/opencv/modules/features2d/src/keypoint.cpp", "/build/master_pack-android/opencv/modules/features2d/src/gftt.cpp", "/build/master_pack-android/opencv/modules/features2d/src/fast.cpp", "/build/master_pack-android/opencv/modules/features2d/src/draw.cpp", "/build/master_pack-android/opencv/modules/features2d/src/agast_score.cpp", "/build/master_pack-android/opencv/modules/features2d/src/kaze.cpp", "/build/master_pack-android/opencv/modules/features2d/src/bagofwords.cpp", "/build/master_pack-android/opencv/modules/features2d/src/brisk.cpp", "/build/master_pack-android/opencv/modules/features2d/src/orb.cpp", "/build/master_pack-android/opencv/modules/features2d/src/akaze.cpp", "(descriptors.empty() || descriptors.cols() == descriptorSize())", "(descriptors.empty() || (descriptors.type() == descriptorType()))", "/build/master_pack-android/opencv/modules/features2d/src/fast_score.cpp", "/build/master_pack-android/opencv/modules/features2d/src/kaze/KAZEFeatures.cpp", "0 <= kpts[i].class_id && kpts[i].class_id < static_cast<int>(evolution_.size())", "/build/master_pack-android/opencv/modules/features2d/src/kaze/AKAZEFeatures.cpp", "nbits <= ssz && \"Descriptor size can't be bigger than full descriptor (486 = 162*3 - 3 channels)\"", "/build/master_pack-android/opencv/modules/features2d/src/kaze/nldiffusion_functions.cpp", "/build/master_pack-android/opencv/modules/features2d/src/mser.cpp", "/build/master_pack-android/opencv/modules/features2d/src/evaluation.cpp", "fdetector must not be empty when keypoints1 or keypoints2 is empty", "/build/master_pack-android/opencv/modules/features2d/src/matchers.cpp", "masks[i].rows == queryDescriptorsCount && masks[i].cols == rows && masks[i].type() == CV_8UC1", "deep clone functionality is not implemented, because Flann::Index has not copy constructor or clone method ", "trainDescCollection.size() == 0", "_queryDescriptors.type() == trainDescType", "(int64)imgCount*IMGIDX_ONE < INT_MAX", "_descriptors.isUMat() || _descriptors.isUMatVector() || _descriptors.isMat() || _descriptors.isMatVector()", "/build/master_pack-android/opencv/modules/features2d/src/agast.cpp", "/build/master_pack-android/opencv/modules/features2d/src/blobdetector.cpp", "/build/master_pack-android/opencv/modules/features2d/src/feature2d.cpp", "FM0.cols == 3 && FM0.rows % 3 == 0 && FM.cols == 3 && FM.rows % 3 == 0 && FM.channels() == 1", "/build/master_pack-android/opencv/modules/calib3d/src/compat_ptsetreg.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/p3p.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/fundam.cpp", "npoints >= 0 && (depth == CV_32S || depth == CV_32F || depth == CV_64F)", "The input should be a 2D or 3D point set", "(mask.cols == 1 || mask.rows == 1) && (int)mask.total() == npoints", "_pt1.type() == CV_64F && _pt2.type() == CV_64F && _F.type() == CV_64F", "_w.data == (uchar*)&w.val[0] && _u.data == (uchar*)&u.val[0] && _vt.data == (uchar*)&vt.val[0]", "objectPoints should contain vector of vectors of points of type Point3f", "/build/master_pack-android/opencv/modules/calib3d/src/calibration.cpp", "imagePoints1 should contain vector of vectors of points of type Point2f", "nimages > 0 && nimages == (int)imagePoints1.total() && (!imgPtMat2 || nimages == (int)imagePoints2.total())", "CV_ARE_TYPES_EQ(A, B) && (CV_MAT_TYPE(A->type) == CV_32F || CV_MAT_TYPE(A->type) == CV_64F)", "CV_ARE_TYPES_EQ(A, dABdA) && dABdA->rows == A->rows*B->cols && dABdA->cols == A->rows*A->cols", "CV_ARE_TYPES_EQ(A, dABdB) && dABdB->rows == A->rows*B->cols && dABdB->cols == B->rows*B->cols", "stype == CV_8UC1 || stype == CV_16SC1 || stype == CV_32SC1 || stype == CV_32FC1", "dtype == CV_16SC3 || dtype == CV_32SC3 || dtype == CV_32FC3", "CV_IS_MAT(matrixM) && CV_IS_MAT(matrixR) && CV_IS_MAT(matrixQ) && matrixM->cols == 3 && matrixM->rows == 3 && CV_ARE_SIZES_EQ(matrixM, matrixR) && CV_ARE_SIZES_EQ(matrixM, matrixQ)", "Output matrix must be 3x3, single-channel floating point matrix", "Output matrix must be 1x3 or 3x1", "CV_MAT_TYPE(_rvec1->type) == CV_32F || CV_MAT_TYPE(_rvec1->type) == CV_64F", "_rvec1->rows == 3 && _rvec1->cols == 1 && CV_ARE_SIZES_EQ(_rvec1, _rvec2)", "CV_ARE_SIZES_EQ(_tvec1, _tvec2) && CV_ARE_SIZES_EQ(_tvec1, _rvec1)", "Both object points and image points must be 2D", "object points and image points must be a single-row matrices", "CV_IS_MAT(_points1) && CV_IS_MAT(_points2) && CV_ARE_SIZES_EQ(_points1, _points2)", "One of required arguments is not a valid matrix", "Homogeneous coordinates are not supported", "Rotation must be represented by 1x3 or 3x1 floating-point rotation vector, or 3x3 rotation matrix", "Translation vector must be 1x3 or 3x1 floating-point vector", "Instrinsic parameters must be 3x3 floating-point matrix", "Distortion coefficients must be 1x4, 4x1, 1x5, 5x1, 1x8, 8x1, 1x12, 12x1, 1x14 or 14x1 floating-point vector", "dp/drot must be 2Nx3 floating-point matrix", "dp/dT must be 2Nx3 floating-point matrix", "dp/df must be 2Nx2 floating-point matrix", "dp/dc must be 2Nx2 floating-point matrix", "distCoeffs is NULL while dpdk is not", "dp/df must be 2Nx14, 2Nx12, 2Nx8, 2Nx5, 2Nx4 or 2Nx2 floating-point matrix", "CV_IS_MAT(objectPoints) && CV_IS_MAT(imagePoints) && CV_IS_MAT(A) && CV_IS_MAT(rvec) && CV_IS_MAT(tvec)", "(CV_MAT_DEPTH(rvec->type) == CV_64F || CV_MAT_DEPTH(rvec->type) == CV_32F) && (rvec->rows == 1 || rvec->cols == 1) && rvec->rows*rvec->cols*CV_MAT_CN(rvec->type) == 3", "(CV_MAT_DEPTH(tvec->type) == CV_64F || CV_MAT_DEPTH(tvec->type) == CV_32F) && (tvec->rows == 1 || tvec->cols == 1) && tvec->rows*tvec->cols*CV_MAT_CN(tvec->type) == 3", "One of required vector arguments is not a valid matrix", "image width and height must be positive", "the array of point counters must be 1-dimensional integer vector", "The tilted sensor model must have 14 parameters in the distortion matrix", "Thin prism model must have 12 parameters in the distortion matrix", "the output array of translation vectors must be 3-channel 1xn or nx1 array or 1-channel nx3 array, where n is the number of views", "the output array of standard deviations vectors must be 1-channel 1x(n*6 + NINTRINSIC) or (n*6 + NINTRINSIC)x1 array, where n is the number of views, NINTRINSIC = 18", "Intrinsic parameters must be 3x3 floating-point matrix", "The number of points in the view #%d is < 4", "Non-zero skew is not supported by the function", "The specified aspect ratio (= cameraMatrix[0][0] / cameraMatrix[1][1]) is incorrect", "the output array of rotation vectors must be 3-channel 1xn or nx1 array or 1-channel nx3 or nx9 array, where n is the number of views", "Focal length (fx and fy) must be positive", "Principal point must be within the image", "The intrinsic matrix must have [fx 0 cx; 0 fy cy; 0 0 1] shape", "For non-planar calibration rigs the initial intrinsic matrix must be specified", "CV_IS_MAT(_imagePoints1) && CV_IS_MAT(_imagePoints2) && CV_IS_MAT(_objectPoints) && CV_IS_MAT(_npoints) && CV_IS_MAT(matR) && CV_IS_MAT(matT)", "CV_ARE_TYPES_EQ(_imagePoints1, _imagePoints2) && CV_ARE_DEPTHS_EQ(_imagePoints1, _objectPoints)", "(_npoints->cols == 1 || _npoints->rows == 1) && CV_MAT_TYPE(_npoints->type) == CV_32SC1", "(CV_MAT_DEPTH(_imagePoints1->type) == CV_32F || CV_MAT_DEPTH(_imagePoints1->type) == CV_64F) && ((_imagePoints1->rows == pointsTotal && _imagePoints1->cols*cn == 2) || (_imagePoints1->rows == 1 && _imagePoints1->cols == pointsTotal && cn == 2))", "/build/master_pack-android/opencv/modules/calib3d/src/ptsetreg.cpp", "err.isContinuous() && err.type() == CV_32F && mask.isContinuous() && mask.type() == CV_8U", "(bestMask.cols == 1 || bestMask.rows == 1) && (int)bestMask.total() == count", "errf.isContinuous() && errf.type() == CV_32F && (int)errf.total() == count", "(mask.cols == 1 || mask.rows == 1) && (int)mask.total() == count", "npoints >= 4 && npoints == std::max(ipoints.checkVector(2, CV_32F), ipoints.checkVector(2, CV_64F))", "/build/master_pack-android/opencv/modules/calib3d/src/solvepnp.cpp", "(rtype == CV_32F || rtype == CV_64F) && (ttype == CV_32F || ttype == CV_64F)", "(rsize == Size(1, 3) || rsize == Size(3, 1)) && (tsize == Size(1, 3) || tsize == Size(3, 1))", "The flags argument must be one of SOLVEPNP_ITERATIVE, SOLVEPNP_P3P, SOLVEPNP_EPNP or SOLVEPNP_DLS", "npoints == 3 && npoints == std::max(ipoints.checkVector(2, CV_32F), ipoints.checkVector(2, CV_64F))", "(opoints.rows == 1 && opoints.channels() == 3) || opoints.cols*opoints.channels() == 3", "(ipoints.rows == 1 && ipoints.channels() == 2) || ipoints.cols*ipoints.channels() == 2", "/build/master_pack-android/opencv/modules/calib3d/src/checkchessboard.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/calibinit.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/posit.cpp", "(icvPOSIT( pObject, imagePoints,(float) focalLength, criteria, rotation, translation )) >= 0", "/build/master_pack-android/opencv/modules/calib3d/src/homography_decomp.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/stereobm.cpp", "SADWindowSize must be odd, be within 5..255 and be not larger than image width or height", "/build/master_pack-android/opencv/modules/calib3d/src/circlesgrid.cpp", "basisGraphs[0].getVerticesCount() == basisGraphs[1].getVerticesCount()", "largeHoles != 0 && smallHoles != 0", "Number of basis graphs is not 2", "(param0.cols == 1 || param0.rows == 1) && (ptype == CV_32F || ptype == CV_64F)", "/build/master_pack-android/opencv/modules/calib3d/src/levmarq.cpp", "************************************************************************************", "\titr\tnfJ\t\tSUM(r^2)\t\tx\t\tdx\t\tl\t\tlc", "%c%10d %10d %15.4e %16.4e %17.4e %16.4e %17.4e\n", "/build/master_pack-android/opencv/modules/calib3d/src/compat_stereo.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/triangulate.cpp", "The point-matrices must have one row, and an equal number of columns", "The first set of points must contain two channels; one for x and one for y", "The second set of points must contain two channels; one for x and one for y", "The first output matrix must have the same dimensions as the input matrices", "The first output matrix must have two channels; one for x and one for y", "The second output matrix must have the same dimensions as the input matrices", "The second output matrix must have two channels; one for x and one for y", "/build/master_pack-android/opencv/modules/calib3d/src/quadsubpix.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/fisheye.cpp", "K.size() == Size(3,3) && (K.type() == CV_32F || K.type() == CV_64F) && D.total() == 4", "data && dims <= 2 && (rows == 1 || cols == 1) && rows + cols - 1 == n && channels() == 1", "R.empty() || R.size() == Size(3, 3) || R.total() * R.channels() == 3", "D.total() == 4 && K.size() == Size(3, 3) && (K.depth() == CV_32F || K.depth() == CV_64F)", "K.size() == Size(3, 3) && (K.depth() == CV_32F || K.depth() == CV_64F)", "D.empty() || ((D.total() == 4) && (D.depth() == CV_32F || D.depth() == CV_64F))", "(_R.size() == Size(3, 3) || _R.total() * _R.channels() == 3) && (_R.depth() == CV_32F || _R.depth() == CV_64F)", "_tvec.total() * _tvec.channels() == 3 && (_tvec.depth() == CV_32F || _tvec.depth() == CV_64F)", "m1type == CV_16SC2 || m1type == CV_32F || m1type <=0", "(K.depth() == CV_32F || K.depth() == CV_64F) && (D.depth() == CV_32F || D.depth() == CV_64F)", "P.empty() || P.size() == Size(3, 3) || P.size() == Size(4, 3)", "(P.empty() || P.depth() == CV_32F || P.depth() == CV_64F) && (R.empty() || R.depth() == CV_32F || R.depth() == CV_64F)", "K.size() == Size(3, 3) && (D.empty() || D.total() == 4)", "_tvec.getMat().isContinuous() && _rvec.getMat().isContinuous()", "objectPoints.type() == CV_32FC3 || objectPoints.type() == CV_64FC3", "_rvec.total() * _rvec.channels() == 3 && (_rvec.depth() == CV_32F || _rvec.depth() == CV_64F)", "_K.size() == Size(3,3) && (_K.type() == CV_32F || _K.type() == CV_64F) && _D.type() == _K.type() && _D.total() == 4", "!objectPoints.empty() && objectPoints.type() == CV_64FC3", "!imagePoints.empty() && imagePoints.type() == CV_64FC2", "CALIB_CHECK_COND - Ill-conditioned matrix for input array %d", "!objectPoints.empty() && (objectPoints.type() == CV_32FC3 || objectPoints.type() == CV_64FC3)", "!imagePoints.empty() && (imagePoints.type() == CV_32FC2 || imagePoints.type() == CV_64FC2)", "omc.type() == CV_64FC3 || Tc.type() == CV_64FC3", "svd.w.at<double>(0) / svd.w.at<double>(svd.w.rows - 1) < thresh_cond", "!omc.empty() && omc.type() == CV_64FC3", "!Tc.empty() && Tc.type() == CV_64FC3", "!objectPoints.empty() && !imagePoints.empty() && objectPoints.total() == imagePoints.total()", "imagePoints.type() == CV_32FC2 || imagePoints.type() == CV_64FC2", "rvecs.empty() || (rvecs.channels() == 3)", "tvecs.empty() || (tvecs.channels() == 3)", "(!K.empty() && !D.empty()) || !(flags & CALIB_USE_INTRINSIC_GUESS)", "K.empty() || (K.size() == Size(3,3))", "!objectPoints.empty() && !imagePoints1.empty() && !imagePoints2.empty()", "objectPoints.total() == imagePoints1.total() || imagePoints1.total() == imagePoints2.total()", "imagePoints1.type() == CV_32FC2 || imagePoints1.type() == CV_64FC2", "imagePoints2.type() == CV_32FC2 || imagePoints2.type() == CV_64FC2", "D1.empty() || (D1.total() == 4)", "D2.empty() || (D1.total() == 4)", "(!K1.empty() && !K2.empty() && !D1.empty() && !D2.empty()) || !(flags & CALIB_FIX_INTRINSIC)", "K1.empty() || (K1.size() == Size(3,3))", "K2.empty() || (K1.size() == Size(3,3))", "npoints >= 0 && points2.checkVector(2) == npoints && points1.type() == points2.type()", "/build/master_pack-android/opencv/modules/calib3d/src/five-point.cpp", "cameraMatrix.rows == 3 && cameraMatrix.cols == 3 && cameraMatrix.channels() == 1", "/build/master_pack-android/opencv/modules/calib3d/src/ap3p.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/stereosgbm.cpp", "numberOfDisparities > 0 && disp.type() == CV_16S && (costType == CV_16S || costType == CV_32S) && disp.size() == cost.size()", "left.size() == right.size() && left.type() == right.type() && left.depth() == CV_8U", "IPP:ipp_filterSpeckles(img, maxSpeckleSize, newVal, maxDiff, _buf)", "/build/master_pack-android/opencv/modules/shape/src/sc_dis.cpp", "(set1.channels()==2) && (set1.cols>0)", "(set2.channels()==2) && (set2.cols>0)", "(!image1.empty()) && (!image2.empty())", "/build/master_pack-android/opencv/modules/shape/src/tps_trans.cpp", "(pts1.channels()==2) && (pts1.cols>0) && (pts2.channels()==2) && (pts2.cols>0)", "/build/master_pack-android/opencv/modules/shape/src/haus_dis.cpp", "/build/master_pack-android/opencv/modules/shape/src/emdL1.cpp", "(sig1.rows==sig2.rows) && (sig1.cols==sig2.cols) && (!sig1.empty()) && (!sig2.empty())", "/build/master_pack-android/opencv/modules/shape/src/aff_trans.cpp", "/build/master_pack-android/opencv/modules/shape/src/hist_cost.cpp", "/build/master_pack-android/opencv/modules/superres/src/input_array_utility.cpp", "The called functionality is disabled for current build or platform", "/build/master_pack-android/opencv/modules/superres/src/btv_l1.cpp", "/build/master_pack-android/opencv/modules/superres/src/frame_source.cpp", "/build/master_pack-android/opencv/modules/superres/src/btv_l1_cuda.cpp", "/build/master_pack-android/opencv/modules/superres/src/optical_flow.cpp", "/build/master_pack-android/opencv/modules/superres/src/super_resolution.cpp", "/build/master_pack-android/opencv/modules/stitching/src/autocalib.cpp", "/build/master_pack-android/opencv/modules/stitching/src/motion_estimators.cpp", "unsupported kind of wave correction", "centers.size() > 0 && centers.size() <= 2", "/build/master_pack-android/opencv/modules/stitching/src/util.cpp", "/build/master_pack-android/opencv/modules/stitching/src/blenders.cpp", "img.type() == CV_16SC3 || img.type() == CV_8UC3", "/build/master_pack-android/opencv/modules/stitching/src/warpers.cpp", "(T.size() == Size(1, 3) || T.size() == Size(3, 1)) && T.type() == CV_32F", "src_br.x - src_tl.x + 1 == size.width && src_br.y - src_tl.y + 1 == size.height", "/build/master_pack-android/opencv/modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp", "/build/master_pack-android/opencv/modules/stitching/src/exposure_compensate.cpp", "corners.size() == images.size() && images.size() == masks.size()", "/build/master_pack-android/opencv/modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp", "/build/master_pack-android/opencv/modules/stitching/src/stitcher.cpp", "/build/master_pack-android/opencv/modules/stitching/src/timelapsers.cpp", "/build/master_pack-android/opencv/modules/stitching/src/matchers.cpp", "features2.descriptors.depth() == CV_8U || features2.descriptors.depth() == CV_32F", "(image.type() == CV_8UC3) || (image.type() == CV_8UC4) || (image.type() == CV_8UC1)", "mask.empty() || (mask.type() == CV_8U && mask.cols == num_images && mask.rows)", "/build/master_pack-android/opencv/modules/stitching/src/seam_finders.cpp", "/build/master_pack-android/opencv/modules/stitching/src/../../imgproc/src/gcgraph.hpp", "unsupported pixel similarity measure", "/build/master_pack-android/opencv/modules/videostab/src/global_motion.cpp", "/build/master_pack-android/opencv/modules/videostab/include/opencv2/videostab/motion_core.hpp", "/build/master_pack-android/opencv/modules/videostab/src/deblurring.cpp", "/build/master_pack-android/opencv/modules/videostab/src/wobble_suppression.cpp", "first pass: estimating motions", "\nmotion estimation time: %.3f sec\n", "motion stabilization time: %.3f sec\n", "/build/master_pack-android/opencv/modules/videostab/src/frame_source.cpp", "/build/master_pack-android/opencv/modules/videostab/src/motion_stabilizing.cpp", "/build/master_pack-android/opencv/modules/videostab/src/outlier_rejection.cpp", "points0.getMat().checkVector(2) == points1.getMat().checkVector(2)", "/build/master_pack-android/opencv/modules/videostab/src/inpainting.cpp", "/build/master_pack-android/opencv/modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp", "bad allocation in previous or concurrent attempt", "attempted recursive lock on critical section or non-recursive mutex", "User-initiated abort has terminated this operation", "The same task_handle object cannot be executed more than once", "wait() was not called on the structured_task_group", "Assertion %s failed on line %d of file %s\n", "Index out of requested size range", "Index out of allocated segment slots", "Wait on condition variable failed", "[backward compatibility] Invalid number of buckets", "swap() is invalid on non-equal allocators", "reservation size exceeds permitted max size", "Nesting of blocking termination is impossible", "atomic store on misaligned 8-byte location %p is slow", "Exact exception propagation is requested by application but the linked library is built without support for it", "The number of workers is currently limited to %u. The request for %u workers is ignored. Further requests for more workers will be silently ignored until the limit changes.\n", "Thread stack size has been already set to %u. The request for larger stack (%u) cannot be satisfied.\n", "RML might limit the number of workers to %u while %u is requested.\n", "TBB failed to initialize task scheduler TLS\n", "failed to destroy task scheduler TLS: %s", "rml::tbb_factory::make_server failed with status %x, falling back on private rml", "Attempt to terminate nested scheduler in blocking mode", "3rdparty/tbb/tbb-4.4.3/src/tbb/governor.cpp", "task_scheduler_init already initialized", "number_of_threads for task_scheduler_init must be automatic or positive", "number_of_threads==automatic || number_of_threads > 0", "deferred initialization ignores stack size setting", "task_scheduler_init::terminate without corresponding task_scheduler_init::initialize()", "my_param < global_control::parameter_max", "3rdparty/tbb/tbb-4.4.3/src/tbb/tbb_main.cpp", "param < global_control::parameter_max", "__TBB_call_with_my_server_info", "/sys/devices/system/cpu/present", "ippSP AVX2 (h9)", "2017.0.2 (-)", "Jan 31 2017", "ippSP SSE4.2 (p8)", "ippSP AVX (g9)", "ippSP Atom (s8)", "ippSP SSE2 (w7)", "vsSqrt", "vsExp", "vsInvSqrt", "vdSqrt", "vdLn", "vsLn", "vdInvSqrt", "vdExp", "vdSin", "vdSinCos", "vdCos", "sSinCos_HA", "sSinCos_LA", "sSinCos_A11", "dSinCos_HA", "dSinCos_LA", "dSinCos_A11", "zCIS_HA", "zCIS_LA", "zCIS_A11", "sCos_HA", "sCos_LA", "sCos_A11", "dCos_HA", "dCos_LA", "dCos_A11", "sSin_HA", "sSin_LA", "sSin_A11", "dSin_HA", "dSin_LA", "dSin_A11", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/arena.cc", "CHECK failed: (options_.initial_block_size) >= (sizeof(Block)): ", ": Initial block size too small for header.", "CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/generated_message_util.cc", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/io/coded_stream.cc", "The total number of bytes read was ", "A protocol message was rejected because it was too big (more than ", " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.", "Reading dangerously large protocol message.  If the message turns out to be larger than ", " bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.", "CHECK failed: (buffer_size) >= (0): ", "(cannot determine missing fields for lite message)", "\" because it is missing required fields: ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/message_lite.cc", "CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): ", " was modified concurrently during serialization.", "CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): ", "Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of ", "This shouldn't be called if all the sizes are equal.", "Exceeded maximum protobuf size of 2GB.", "CHECK failed: !coded_out.HadError(): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/repeated_field.cc", "CHECK failed: (new_size) <= ((std::numeric_limits<size_t>::max() - kRepHeaderSize) / sizeof(old_rep->elements[0])): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/stubs/common.cc", "This program requires version ", " of the Protocol Buffer runtime library, but the installed version is ", ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"", "This program was compiled against version ", " of the Protocol Buffer runtime library, which is not compatible with the installed version (", ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/wire_format_lite.cc", "CHECK failed: (value.size()) <= (kint32max): ", "buffer. Use the 'bytes' type if you intend to send raw ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/descriptor.cc", "CHECK failed: generated_database_->Add(encoded_file_descriptor, size): ", "Cannot copy json_name to a proto of a different size.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/stubs/logging.h", "'out_location' must not be NULL", "Invalid proto descriptor for file \"", "File recursively imports itself: ", "Extension numbers must be positive integers.", "Extension range end number must be greater than start number.", "Reserved numbers must be positive integers.", "The first enum value must be zero in proto3.", "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.", "Invalid wire type for CPPTYPE_INT32: ", "Invalid wire type for CPPTYPE_INT64: ", "Invalid wire type for CPPTYPE_UINT32: ", "Invalid wire type for CPPTYPE_UINT64: ", "Key in map fields cannot be enum types.", "Key in map fields cannot be float/double, bytes or message types.", "Enum value in map must define 0 as the first value.", "[lazy = true] can only be specified for submessage fields.", "MessageSets cannot have fields, only extensions.", "map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.", "[packed = true] can only be specified for repeated primitive fields.", "Extensions of MessageSets must be optional messages.", "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.", "CHECK failed: has_default_value(): ", "Messages can't have default values!", "Can't get here: failed to get default value as string", "\".  To use it here, please add the necessary import.", "\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \".", "\") to start from the outermost scope.", "Invalid wire type for CPPTYPE_MESSAGE: ", "\" was not found or had errors.", "Required fields are not allowed in proto3.", "Explicit default values are not allowed in proto3.", "\" is not a proto3 enum, but is used in \"", "\" which is a proto3 message type.", "Groups are not supported in proto3 syntax.", "Extensions in proto3 are only allowed for defining options.", "google.protobuf.MessageOptions", "google.protobuf.EnumValueOptions", "google.protobuf.ServiceOptions", "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.", "\" is already defined in file \"", "\" is already defined (as something other than a package) in file \"", "$0rpc $1($4.$2) returns ($5.$3)", " conflicts with an existing nested message type.", " conflicts with an existing field.", " conflicts with an existing enum type.", " conflicts with an existing oneof type.", "Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, \"", "Message extensions cannot have required fields.", "Boolean default must be true or false.", "Messages can't have default values.", "Field numbers must be positive integers.", "Field numbers cannot be greater than $0.", "Field numbers $0 through $1 are reserved for the protocol buffer library implementation.", "FieldDescriptorProto.extendee not set for extension field.", "FieldDescriptorProto.oneof_index should not be set for extensions.", "FieldDescriptorProto.extendee set for non-extension field.", "FieldDescriptorProto.oneof_index $0 is out of range for type \"$1\".", "Repeated fields can't have default values.", "Couldn't parse default value \"", "When enum name is stripped and label is PascalCased (", "), this value label conflicts with ", "Enums must contain at least one value.", "Field name \"$0\" is reserved multiple times.", "Extension range $0 to $1 includes field \"$2\" ($3).", "Field \"$0\" uses reserved number $1.", "Extension range $0 to $1 overlaps with reserved range $2 to $3.", "Extension range $0 to $1 overlaps with already-defined range $2 to $3.", "Reserved range $0 to $1 overlaps with already-defined range $2 to $3.", "Extension ranges are not allowed in proto3.", "MessageSet is not supported in proto3.", "The JSON camel-case name of field \"", "\" uses the same enum value as \"", "\". If this is intended, set 'option allow_alias = true;' to the enum definition.", "Extension numbers cannot be greater than $0.", "Files that do not use optimize_for = LITE_RUNTIME cannot import files which do use this option.  This file is not lite, but it imports \"", "\" is a message. To set the entire message, use syntax like \"", " = { <proto text format> }\". To set fields within it, use syntax like \"", "CHECK failed: dynamic.get() != NULL: ", "Could not create an instance of ", "Error while parsing option value for \"", "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ", "Value out of range for int32 option \"", "Value must be integer for int32 option \"", "Value out of range for int64 option \"", "Value must be integer for int64 option \"", "Value out of range for uint32 option \"", "Value must be non-negative integer for uint32 option \"", "Value must be non-negative integer for uint64 option \"", "Value must be number for float option \"", "Value must be number for double option \"", "Value must be identifier for boolean option \"", "Value must be \"true\" or \"false\" for boolean option \"", "Value must be identifier for enum-valued option \"", "\". This appears to be a value from a sibling type.", "Value must be quoted string for string option \"", "Option must not use reserved name \"uninterpreted_option\".", "CHECK failed: options_descriptor: ", ")\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \"(.", "\" is not a field or extension of message \"", "\" is an atomic type, not a message.", "\" is a repeated message. Repeated message options must be initialized using an aggregate value.", "CHECK failed: !out.HadError(): ", "Unexpected failure while serializing option submessage ", "Missing field: FileDescriptorProto.name.", "A file with this name is already in the pool.", "CHECK failed: uninterpreted_options_field != NULL: ", "No field named \"uninterpreted_option\" in the Options proto.", "CHECK failed: original_uninterpreted_options_field != NULL: ", "CHECK failed: options->AppendPartialToString(&buf): ", "Protocol message could not be serialized.", "CHECK failed: options->ParsePartialFromString(buf): ", "Protocol message serialized itself in invalid fashion.", "Options could not be fully parsed using the proto descriptors compiled into this binary. Missing required fields: ", "Invalid public dependency index.", "Invalid weak dependency index.", "CHECK failed: fallback_database_ == NULL: ", "Cannot call BuildFile on a DescriptorPool that uses a DescriptorDatabase.  You must instead find a way to get your file into the underlying database.", "CHECK failed: mutex_ == NULL: ", "Fields of oneofs must themselves have label LABEL_OPTIONAL.", "Default value for an enum field must be an identifier.", "Field with primitive type has type_name.", "Extension number $0 has already been used in \"$1\" by extension \"$2\".", "Field number $0 has already been used in \"$1\" by field \"$2\".", "Extension number $0 has already been used in \"$1\" by extension \"$2\" defined in $3.", "\"$0\" does not declare $1 as an extension number.", "Field with message or enum type missing type_name.", "Oneof must have at least one field.", "Fields in the same oneof must be defined consecutively. \"$0\" cannot be defined before the completion of the \"$1\" oneof definition.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/descriptor.pb.cc", "google/protobuf/descriptor.proto", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/descriptor_database.cc", "Extension conflicts with extension already in database: extend ", "\" conflicts with the existing symbol \"", "File already exists in database: ", "Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/dynamic_message.cc", "CHECK failed: is_prototype(): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/extension_set_heavy.cc", "CHECK failed: output->message_prototype != NULL: ", "Extension factory's GetPrototype() returned NULL for extension: ", "Non-primitive types can't be packed.", "Invalid message set extension.", "CHECK failed: prototype != NULL: ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/generated_message_reflection.cc", "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::", "\n  Problem     : Enum value did not match field type:\n    Expected  : ", "\n  Problem     : Field is not the right type for this message:\n    Expected  : ", "Field is singular; the method requires a repeated field.", "CHECK failed: (field->options().ctype()) == (ctype): ", "CHECK failed: (field->message_type()) == (desc): ", "CHECK failed: field->is_repeated(): ", "CHECK failed: field->cpp_type() == cpp_type || (field->cpp_type() == FieldDescriptor::CPPTYPE_ENUM && cpp_type == FieldDescriptor::CPPTYPE_INT32): ", "The type parameter T in RepeatedFieldRef<T> API doesn't match ", "the actual field type (for enums T should be the generated enum ", "CHECK failed: (message_type) == (field->message_type()): ", "Field does not match message type.", "Field is repeated; the method requires a singular field.", "SetEnumValue accepts only valid integer values: value ", "SetRepeatedEnumValue accepts only valid integer values: ", "AddEnumValue accepts only valid integer values: value ", "CHECK failed: (&other) != (this): ", "CHECK failed: (message1->GetReflection()) == (this): ", "First argument to Swap() (of type \"", "\") is not compatible with this reflection object (which is for type \"", "\").  Note that the exact same class is required; not just the same descriptor.", "CHECK failed: (message2->GetReflection()) == (this): ", "Second argument to Swap() (of type \"", "First argument to SwapFields() (of type \"", "Second argument to SwapFields() (of type \"", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/io/strtod.cc", "CHECK failed: (temp[0]) == ('1'): ", "CHECK failed: (temp[size-1]) == ('5'): ", "String literals cannot cross line boundaries.", "Expected four hex digits for \\u escape sequence.", "Expected eight hex digits up to 10ffff for \\U escape sequence", "Expected hex digits for escape sequence.", "Invalid escape sequence in string literal.", "Numbers starting with leading zero must be in octal.", "\"e\" must be followed by exponent.", "Already saw decimal point or exponent; can't have another one.", "Hex and octal numbers must be integers.", "\"0x\" must be followed by hex digits.", "Need space between number and identifier.", "End-of-file inside block comment.", "\"/*\" inside block comment.  Block comments cannot be nested.", "Need space between identifier and decimal point.", "Interpreting non ascii codepoint %d.", "Invalid control characters encountered in text.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/io/tokenizer.cc", " Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: ", " Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: ", "Proto file starts with 0xEF but not UTF-8 BOM. Only UTF-8 is accepted for proto file.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/map_field.cc", "CHECK failed: entry_descriptor_ != NULL: ", "CHECK failed: assign_descriptor_callback_ != NULL: ", "MapValueRef::type MapValueRef is not initialized.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/message.cc", "\" implements neither SetCachedSize() nor ByteSize().  Must implement one or the other.", "CHECK failed: (from.GetDescriptor()) == (descriptor): ", ": Tried to merge from a message with a different type.  to: ", ": Tried to copy from a message with a different type. to: ", "Unimplemented Map Reflection API.", "CHECK failed: IsInitialized(): ", "\" is missing required fields: ", "File appears to be in generated pool but wasn't registered: ", "Type appears to be in generated pool but wasn't ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/reflection_internal.h", "CHECK failed: this == other_mutator: ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/reflection_ops.cc", "CHECK failed: (&from) != (to): ", "CHECK failed: (to->GetDescriptor()) == (descriptor): ", "Tried to merge messages of different types ", "strings::Substitute format string invalid: asked for \"$", " args were given.  Full format string was: \"", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/stubs/substitute.cc", "Invalid strings::Substitute() format string: \"", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/text_format.cc", "Index must be in range of repeated field values. ", "Index must be -1 for singular fields.", " Outdent() without matching Indent().", "Expect a decimal number, got: ", "TextFormat::Parser for Any supports only type.googleapis.com and type.googleprod.com, but found \"", "Unknown enumeration value of \"", "Reached an unintended state: CPPTYPE_MESSAGE", "Invalid value for boolean field \"", "Expected integer or identifier, got: ", "\" stored in google.protobuf.Any.", "\" stored in google.protobuf.Any has missing required fields", "\" is not defined or is not an extension of \"", "CHECK failed: allow_unknown_field_: ", "\" is specified multiple times.", "\" is specified along with field \"", "text format contains deprecated field \"", "Non-repeated Any specified multiple times.", "Message missing required fields: ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/wire_format.cc", "CHECK failed: (output->ByteCount()) == (expected_endpoint): ", ": Protocol message serialized to a size different from what was originally expected.  Perhaps it was modified by another thread during serialization?", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/extension_set.cc", "Don't lookup extension types if they aren't present (2). ", "Don't lookup extension types if they aren't present (1). ", "CHECK failed: iter != extensions_.end(): ", "Index out-of-bounds (field is empty).", "CHECK failed: iter == extensions_.end(): ", "Multiple extension registrations for type \"", "CHECK failed: type == WireFormatLite::TYPE_MESSAGE || type == WireFormatLite::TYPE_GROUP: ", "CHECK failed: (type) == (WireFormatLite::TYPE_ENUM): ", "CHECK failed: (type) != (WireFormatLite::TYPE_ENUM): ", "CHECK failed: (type) != (WireFormatLite::TYPE_MESSAGE): ", "CHECK failed: (type) != (WireFormatLite::TYPE_GROUP): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream.cc", "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", "CHECK failed: (last_returned_size_) > (0): ", "BackUp() can only be called after a successful Next().", "CHECK failed: (count) <= (last_returned_size_): ", "CHECK failed: (count) >= (0): ", "CHECK failed: target_ != NULL: ", "CHECK failed: (buffer_used_) == (buffer_size_): ", " BackUp() can only be called after Next().", "CHECK failed: (count) <= (buffer_used_): ", " Can't back up over more bytes than were returned by the last call to Next().", "CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: ", " Parameter to BackUp() can't be negative.", "CHECK failed: (count) <= (target_->size()): ", "Cannot allocate buffer larger than kint32max for ", "CHECK failed: (backup_bytes_) == (0): ", "/build/master_pack-android/opencv/3rdparty/protobuf/src/google/protobuf/stubs/strutil.cc", "CHECK failed: result != NULL: ", "FastHexToBuffer() wants non-negative integers, not ", "This can't happen; base64 decoder state = ", "/data/data/com.intel.vtune/perfrun/lib32/runtime/libittnotify.so", "com.intel.itt.collector_lib_32", "__itt_model_record_deallocation", "__itt_heap_internal_access_begin", "__itt_heap_internal_access_end", "__itt_heap_record_memory_growth_begin", "__itt_heap_record_memory_growth_end", "__itt_task_begin_overlapped_ex", "__itt_metadata_str_add_with_scope", "__itt_relation_add_to_current_ex", "ALIGN_TYPE is wrong, please fix", "MAX_ALLOC_CHUNK is wrong, please fix", "Invalid component ID %d in SOS", "DCT scaled block size %dx%d not supported", "Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c", "Bogus Huffman table definition", "Wrong JPEG library version: library is %d, caller expects %d", "Sampling factors too large for interleaved scan", "Unsupported JPEG data precision %d", "Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d", "Invalid progressive parameters at scan script entry %d", "Invalid scan script at entry %d", "Improper call to JPEG library in state %d", "JPEG parameter struct mismatch: library thinks size is %u, caller expects %u", "Buffer passed to JPEG library is too small", "CCIR601 sampling not implemented yet", "Too many color components: %d, max %d", "Unsupported color conversion request", "Empty JPEG image (DNL not supported)", "Didn't expect more than one scan", "Output file write error --- out of disk space?", "Fractional sampling not implemented yet", "Huffman code size table overflow", "Missing Huffman code table entry", "Maximum supported image dimension is %u pixels", "Cannot transcode due to multiple use of quantization table %d", "Scan script does not transmit all data", "Invalid color quantization mode change", "Requested feature was omitted at compile time", "Arithmetic table 0x%02x was not defined", "Huffman table 0x%02x was not defined", "JPEG datastream contains no image", "Quantization table 0x%02x was not defined", "Not a JPEG file: starts with 0x%02x 0x%02x", "Cannot quantize more than %d color components", "Cannot quantize to fewer than %d colors", "Cannot quantize to more than %d colors", "Invalid JPEG file structure: %s before SOF", "Invalid JPEG file structure: two SOF markers", "Invalid JPEG file structure: missing SOS marker", "Unsupported JPEG process: SOF type 0x%02x", "Invalid JPEG file structure: two SOI markers", "Failed to create temporary file %s", "Write failed on temporary file --- out of disk space?", "Application transferred too few scanlines", "Unsupported marker type 0x%02x", "Virtual array controller messed up", "Image too wide for this implementation", "Copyright (C) 2013, Thomas G. Lane, Guido Vollbeding", "Caution: quantization tables are too coarse for baseline JPEG", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "Unknown APP0 marker (not JFIF), length %u", "Unknown APP14 marker (not Adobe), length %u", "Define Arithmetic Table 0x%02x: 0x%02x", "Define Quantization Table %d  precision %d", "        %3d %3d %3d %3d %3d %3d %3d %3d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "Warning: thumbnail image size does not match data length %u", "JFIF extension marker: type 0x%02x, length %u", "    with %d x %d thumbnail image", "Miscellaneous marker 0x%02x, length %u", "        %4u %4u %4u %4u %4u %4u %4u %4u", "Quantizing to %d = %d*%d*%d colors", "Selected %d colors for quantization", "At marker 0x%02x, recovery action %d", "Smoothing not supported with nonstandard sampling ratios", "Start Of Frame 0x%02x: width=%u, height=%u, components=%d", "    Component %d: %dhx%dv q=%d", "JFIF extension marker: JPEG-compressed thumbnail image, length %u", "JFIF extension marker: palette thumbnail image, length %u", "JFIF extension marker: RGB thumbnail image, length %u", "Unrecognized component IDs %d %d %d, assuming YCbCr", "Unknown Adobe color transform code %d", "Corrupt JPEG data: bad arithmetic code", "Inconsistent progression sequence for component %d coefficient %d", "Corrupt JPEG data: %u extraneous bytes before marker 0x%02x", "Corrupt JPEG data: premature end of data segment", "Corrupt JPEG data: bad Huffman code", "Warning: unknown JFIF revision number %d.%02d", "Corrupt JPEG data: found marker 0x%02x instead of RST%d", "Invalid SOS parameters for sequential JPEG", "Application transferred too many scanlines", "no memory during frame initialization.", "null VP8Io passed to VP8GetHeaders()", "Incorrect keyframe parameters.", "NULL VP8Io parameter in VP8Decode().", "Premature end-of-partition0 encountered.", "Premature end-of-file encountered.", "Can't set both read_data_fn and write_data_fn in the same structure", "Libpng jmp_buf still allocated", "Application jmp_buf size changed", "unexpected encoding (internal error)", "background color must be supplied to remove alpha/transparency", "gray[8] color-map: too few entries", "gray[16] color-map: too few entries", "gray+alpha color-map: too few entries", "gray-alpha color-map: too few entries", "ga-alpha color-map: too few entries", "rgb[ga] color-map: too few entries", "rgb[gray] color-map: too few entries", "rgb+alpha color-map: too few entries", "rgb-alpha color-map: too few entries", "rgb color-map: too few entries", "palette color-map: too few entries", "bad data option (internal error)", "color map overflow (BAD internal error)", "bad background index (internal error)", "png_read_update_info/png_start_read_image: duplicate call", "png_start_read_image/png_read_update_info: duplicate call", "Invalid attempt to read row data", "internal sequential row size calculation error", "png_read_image: unsupported transformation", "png_image_read: alpha channel lost", "unexpected alpha swap transformation", "png_read_image: invalid transformations", "unexpected 8-bit transformation", "bad color-map processing (internal error)", "Interlace handling should be turned on when using png_read_image", "Read palette index exceeding num_palette", "png_image_read: opaque pointer not NULL", "Image is too high to process with png_read_png()", "png_image_begin_read_from_stdio: invalid argument", "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_file: invalid argument", "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_memory: invalid argument", "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION", "png_image_finish_read[color-map]: no color-map", "png_image_finish_read: image too large", "png_image_finish_read: invalid argument", "png_image_finish_read: row_stride too large", "png_image_finish_read: damaged PNG_IMAGE_VERSION", "invalid after png_start_read_image or png_read_update_info", "invalid before the PNG header has been read", "Can't discard critical data on CRC error", "Application must supply a known background gamma", "output gamma out of expected range", "conflicting calls to set alpha mode and background", "invalid file gamma in png_set_gamma", "invalid screen gamma in png_set_gamma", "invalid error action to rgb_to_gray", "ignoring out of range rgb_to_gray coefficients", "libpng does not support gamma+background+rgb_to_gray", "Palette is NULL in indexed image", "png_do_rgb_to_gray found nongray pixel", "png_do_encode_alpha: unexpected call", "png_do_quantize returned rowbytes=0", "insufficient memory to read chunk", "PNG unsigned integer out of range", "PNG file corrupted by ASCII conversion", "unknown chunk exceeds memory limits", "No space in chunk cache for sPLT", "sPLT chunk requires too much memory", "Insufficient memory to process text chunk", "forcing save of an unhandled chunk; please call png_set_keep_unknown_chunks", "internal row size calculation error", "invalid user transform pixel depth", "Row has too many bytes to allocate in memory", "Potential overflow in png_zalloc()", "Too many bytes for PNG signature", "Application built with libpng-", "Unknown freer parameter in png_data_freer", "\nlibpng version 1.6.24 - August 4, 2016\nCopyright (c) 1998-2002,2004,2006-2016 Glenn Randers-Pehrson\nCopyright (c) 1996-1997 Andreas Dilger\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n", " libpng version 1.6.24 - August 4, 2016\n\n", "RGB color space not permitted on grayscale PNG", "Gray color space not permitted on RGB PNG", "invalid ICC profile color space", "invalid embedded Abstract ICC profile", "unexpected DeviceLink ICC profile class", "unexpected NamedColor ICC profile class", "unrecognized ICC profile class", "ICC profile tag start not a multiple of 4", "ICC profile tag outside profile", "Image width is too large for this architecture", "Image width exceeds user limit in IHDR", "Image height exceeds user limit in IHDR", "Invalid color type/bit depth combination in IHDR", "Unknown interlace method in IHDR", "Unknown compression method in IHDR", "MNG features are not allowed in a PNG datastream", "ASCII conversion buffer too small", "internal error handling cHRM coefficients", "internal error handling cHRM->XYZ", "gamma value does not match sRGB", "gamma value does not match libpng estimate", "inconsistent rendering intents", "duplicate sRGB information ignored", "cHRM chunk does not match sRGB", "out-of-date sRGB profile with no signature", "Not recognizing known sRGB profile that has been edited", "internal error checking chromaticities", "png_image_write_to_memory: PNG too big", "Writing zero-length unknown chunk", "profile matches sRGB but writing iCCP instead", "Valid palette required for paletted images", "Wrote palette index exceeding num_palette", "png_write_info was never called before png_write_row", "internal write transform logic error", "png_write_image: internal call error", "png_image_write_: out of memory", "Unknown row filter for method 0", "png_set_filter: UP/AVG/PAETH cannot be added after start", "no color-map for color-mapped image", "png_write_image: unsupported transformation", "Only compression windows <= 32k supported by PNG", "Only compression windows >= 256 supported by PNG", "Only compression method 8 is supported by PNG", "no rows for png_write_image to write", "PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported", "png_image_write_to_memory: invalid argument", "png_image_write_to_memory: incorrect PNG_IMAGE_VERSION", "png_image_write_to_stdio: invalid argument", "png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION", "png_image_write_to_file: invalid argument", "png_image_write_to_file: incorrect PNG_IMAGE_VERSION", "png_set_unknown_chunks now expects a valid location", "invalid location in png_set_unknown_chunks", "Invalid palette size, hIST allocation skipped", "Insufficient memory for hIST chunk data", "Invalid format for pCAL parameter", "Insufficient memory for pCAL purpose", "Insufficient memory for pCAL units", "Insufficient memory for pCAL params", "Insufficient memory for pCAL parameter", "Memory allocation failed while processing sCAL", "Invalid iCCP compression method", "Insufficient memory to process iCCP chunk", "Insufficient memory to process iCCP profile", "text compression mode is out of range", "Insufficient memory to store text", "tRNS chunk has out-of-range samples for bit_depth", "invalid unknown chunk location", "png_set_keep_unknown_chunks: invalid keep", "png_set_keep_unknown_chunks: no chunk list", "png_set_keep_unknown_chunks: too many chunks", "invalid compression buffer size", "Compression buffer size cannot be changed because it is in use", "Compression buffer size cannot be reduced below 6", "keyword \"@1\": bad character '0x@2'", "error writing ancillary chunked compressed data", "Invalid bit depth for grayscale image", "Invalid bit depth for RGB image", "Invalid bit depth for paletted image", "Invalid bit depth for grayscale+alpha image", "Invalid bit depth for RGBA image", "Invalid image color type specified", "Invalid compression type specified", "Invalid interlace type specified", "Invalid number of colors in palette", "Ignoring request to write a PLTE chunk in grayscale PNG", "Z_OK on Z_FINISH with output space", "Invalid sRGB rendering intent specified", "ICC profile length invalid (not a multiple of 4)", "Invalid number of transparent colors specified", "Ignoring attempt to write tRNS chunk out-of-range for bit_depth", "Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8", "Can't write tRNS with an alpha channel", "Invalid background palette index", "Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8", "Ignoring attempt to write bKGD chunk out-of-range for bit_depth", "Invalid number of histogram entries specified", "zTXt: invalid compression type", "iTXt: uncompressed text too long", "Unrecognized unit type for oFFs chunk", "Unrecognized equation type for pCAL chunk", "Can't write sCAL (buffer too small)", "Unrecognized unit type for pHYs chunk", "Invalid time specified for tIME chunk", "%s: Invalid %stag \"%s\" (not supported by codec)", "Nonstandard tile width %d, convert file", "Nonstandard tile length %d, convert file", "%s: Sorry, cannot nest SubIFDs", "%s: Invalid InkNames value; expecting %d names, found %d", "%s: Failed to allocate space for list of custom values", "%s: Bad field type %d for \"%s\"", "%s: Null count for \"%s\" (type %d, writecount %d, passcount %d)", "Error fetching directory count", "Sanity check on directory count failed", "%s: Error fetching directory count", "%s: Error fetching directory link", "%s: Cannot modify tag \"%s\" while writing", "Can not unlink directory in read-only file", "field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n", "Failed to allocate fields array", "Internal error, unknown tag 0x%x", "Internal error, unknown tag %s", "%s: Seek error accessing TIFF directory", "%s: Can not read TIFF directory count", "Sanity check on directory count failed, this is probably not a valid IFD offset", "%.100s: Can not read TIFF directory", "Can not read TIFF directory count", "Sanity check on directory count failed, zero tag directories not supported", "Cannot determine size of unknown tag type %d", "Invalid TIFF directory; tags are not sorted in ascending order", "IO error during reading of \"%s\"", "Cannot handle different values per sample for \"%s\"", "Sanity check on size of \"%s\" value failed", "Incorrect count for \"%s\"; tag ignored", "Incompatible type for \"%s\"; tag ignored", "IO error during reading of \"%s\"; tag ignored", "Incorrect value for \"%s\"; tag ignored", "Cannot handle different values per sample for \"%s\"; tag ignored", "Sanity check on size of \"%s\" value failed; tag ignored", "Out of memory reading of \"%s\"; tag ignored", "No definition found for tag %d", "ASCII value for tag \"%s\" contains null byte in value; value incorrectly truncated during reading due to implementation limitations", "ASCII value for tag \"%s\" does not end in null byte", "Failed to read directory at offset %llu", "Unknown field with tag %d (0x%x) encountered", "Registering anonymous field with tag %d (0x%x) failed", "Planarconfig tag value assumed incorrect, assuming data is contig instead of chunky", "TIFF directory is missing required \"%s\" field", "Cannot handle zero number of %s", "Photometric tag is missing, assuming data is YCbCr", "Photometric tag value assumed incorrect, assuming data is YCbCr instead of RGB", "BitsPerSample tag is missing, assuming 8 bits per sample", "SamplesPerPixel tag is missing, assuming correct SamplesPerPixel value is 3", "SamplesPerPixel tag is missing, applying correct SamplesPerPixel value of 3", "TIFF directory is missing required \"StripByteCounts\" field, calculating from imagelength", "Bogus \"StripByteCounts\" field, ignoring and calculating from imagelength", "Wrong \"StripByteCounts\" field, ignoring and calculating from imagelength", "for chopped \"StripByteCounts\" array", "for chopped \"StripOffsets\" array", "Cannot handle zero scanline size", "Failed to read custom directory at offset %llu", "Wrong data type %d for \"%s\"; tag ignored", "incorrect count for field \"%s\" (%llu, expecting %u); tag ignored", "incorrect count for field \"%s\" (%llu, expecting %u); tag trimmed", "No space for YCbCr->RGB conversion state", "No space for photometric conversion table", "No space for B&W mapping table", "No space for Palette mapping table", "Sorry, can not handle images with %d-bit samples", "Sorry, can not handle contiguous data with %s=%d, and %s=%d and Bits/Sample=%d", "Sorry, can not handle RGB image with %s=%d", "Sorry, can not handle separated image with %s=%d", "Sorry, LogL data must have %s=%d", "Sorry, LogLuv data must have %s=%d or %d", "Sorry, can not handle LogLuv images with %s=%d", "Sorry, can not handle image with %s=%d", "No space for CIE L*a*b*->RGB conversion state.", "Failed to initialize CIE L*a*b*->RGB conversion state.", "No \"put\" routine setupl; probably can not handle image format", "Can't use TIFFReadRGBAStrip() with tiled file.", "Row passed to TIFFReadRGBAStrip() must be first in a strip.", "Can't use TIFFReadRGBATile() with stripped file.", "Row/col passed to TIFFReadRGBATile() must be topleft corner of a tile.", "%s: Out of memory (TIFF structure)", "One of the client procedures is NULL pointer.", "Not a TIFF or MDI file, bad magic number %d (0x%x)", "Not a TIFF file, bad version number %d (0x%x)", "Not a TIFF file, bad BigTIFF offsetsize %d (0x%x)", "Not a TIFF file, bad BigTIFF unused %d (0x%x)", "Can not read tiles from a stripped image", "Can not read scanlines from a tiled image", "Seek error at scanline %lu, strip %lu", "Read error at scanline %lu; got %llu bytes, expected %llu", "Read error at scanline %lu, strip %lu; got %llu bytes, expected %llu", "Seek error at row %lu, col %lu, tile %lu", "Read error at row %lu, col %lu; got %llu bytes, expected %llu", "Read error at row %lu, col %lu, tile %lu; got %llu bytes, expected %llu", "%lu: Strip out of range, max %lu", "Compression scheme does not support access to raw uncompressed data", "%llu: Invalid strip byte count, strip %lu", "%lu: Tile out of range, max %lu", "No space for data buffer at scanline %lu", "Invalid strip byte count %llu, strip %lu", "Read error on strip %lu; got %llu bytes, expected %llu", "Data buffer too small to hold strip %lu", "%llu: Invalid tile byte count, tile %lu", "Data buffer too small to hold tile %lu", "%lu: Row out of range, max %lu", "%lu: Sample out of range, max %lu", "Invalid td_samplesperpixel value", "Invalid YCbCr subsampling (%dx%d)", "%lu: Col out of range, max %lu", "%lu: Depth out of range, max %lu", "Maximum TIFF file size exceeded", "No space to expand strip arrays", "Can not write tiles to a stripped image", "Can not write scanlines to a tiled image", "Must set \"ImageWidth\" before writing data", "Must set \"PlanarConfiguration\" before writing data", "Can not grow image by strips when using separate planes", "Tile %lu out of range, max %lu", "Can not change \"ImageLength\" when using separate planes", "Failed to allocate memory for %s (%ld elements of %ld bytes each)", "No space for \"TransferFunction\" tag", "Compression algorithm does not support random access", "%s %s encoding is not implemented", "Compression scheme %u %s encoding is not implemented", "%s %s decoding is not implemented", "Compression scheme %u %s decoding is not implemented", "No space to register compression scheme %s", "Cannot remove compression scheme %s; not registered", "Attempt to write value larger than 0xFFFFFFFF in Classic TIFF file.", "Error post-encoding before directory write", "Error flushing data before directory write", "Error writing SubIFD directory link", "Sanity check on tag count failed, likely corrupt TIFF", "Memory mapped files not currently supported for this operation.", "Attempt to reset field on directory not already on disk.", "%s: Can not read TIFF directory entry.", "Value exceeds 32bit range of output type.", "%s: Can not write TIFF directory entry.", "%s compression support is not configured", "Not enough data for scanline %lu, expected a request for at most %lld bytes, got a request for %lld bytes", "Bad code word at line %u of %s %u (x %u)", "Premature EOF at line %u of %s %u (x %u)", "%s at line %u of %s %u (got %u, expected %u)", "Fractional scanlines cannot be read", "Uncompressed data (not supported) at line %u of %s %u (x %u)", "  Consecutive Bad Fax Lines: %lu\n", "Merging common CCITT Fax codec-specific tags failed", "Fractional scanlines cannot be written", "Bits/sample must be 1 for Group 3/4 encoding/decoding", "Row pixels integer overflow (rowpixels %u)", "No space for Group 3/4 reference line", "Merging CCITT Fax 3 codec-specific tags failed", "Merging CCITT Fax 4 codec-specific tags failed", "Not enough data at row %lu (short %llu pixels)", "Unknown data format %d for LogLuv compression", "Unknown encoding %d for LogLuv compression", "SGILog compression cannot handle non-contiguous data", "No support for converting user data format to LogLuv", "No space for SGILog translation buffer", "No support for converting user data format to LogL", "Inappropriate photometric interpretation %d for SGILog compression; %s", "SGILog compression supported only for %s, or raw data", "Merging SGILog codec-specific tags failed", "%s: No space for LogLuv state block", "LZWDecode: Strip %d not terminated with EOI code", "LZWDecode: Corrupted LZW table at scanline %d", "Corrupted LZW table at scanline %d", "Wrong length of decoded string: data probably corrupted at scanline %d", "Bogus encoding, loop in the code table; scanline %d", "Not enough data at scanline %d (short %llu bytes)", "Old-style LZW codes, convert file", "Not enough data for scanline %ld", "Discarding %lu bytes to avoid buffer overrun", "Not enough data for scanline %lu", "%d bit input not supported in PixarLog", "Decoding error at scanline %lu, %s", "Not enough data at scanline %lu (short %llu bytes)", "stride %lu is not a multiple of sample count, %lu, data truncated.", "ZLib cannot deal with buffers this size", "PixarLog compression can't handle %d bit linear encodings", "PixarLog compression can't handle bits depth/data format combination (depth: %d)", "Merging PixarLog codec-specific tags failed", "No space for PixarLog state block", "Horizontal differencing \"Predictor\" not supported with %d-bit samples", "Floating point \"Predictor\" not supported with %d data format", "\"Predictor\" value %d not supported", "Out of memory allocating %zd byte temp buffer.", "Merging Predictor codec-specific tags failed", "Wrong bitspersample value (%d), Thunder decoder only supports 4bits per sample.", "%s data at scanline %lu (%llu != %llu)", "Merging Deflate codec-specific tags failed", "JPEG-2000 JP2 File Format Syntax (ISO/IEC 15444-1)", "JPEG-2000 Code Stream Syntax (ISO/IEC 15444-1)", "start=%d end=%d type=%d term=%d lyrno=%d firstchar=%02x size=%ld pos=%ld\n", "lyrno=%02d cmptno=%02d rlvlno=%02d bandno=%02d prcno=%02d cblkno=%03d passno=%03d\n", "min rdslope = %f max rdslope = %f\n", "maxlen=%08ld actuallen=%08ld thresh=%f\n", "warning: empty layer generated\n", "        prc %5d %5d %5d %5d (%5d %5d)\n", "         cblk %5d %5d %5d %5d\n", "ignoring invalid progression order %s\n", "ignoring bad rate specifier %s\n", "warning: invalid intermediate layer rates specifier ignored (%s)\n", "warning: ignoring invalid option %s\n", "warning: overriding imgareatlx value\n", "warning: overriding imgareatly value\n", "warning: color space apparently not RGB\n", "invalid tile grid offset (%lu, %lu)\n", "cannot use real mode for lossless coding\n", "must be at least one resolution level\n", "warning: specified rate is unreasonably large (%lu > %lu)\n", "intermediate layer rates must increase monotonically\n", "warning: intermediate layer rates must be less than overall rate\n", "error: too few guard bits (need at least %d)\n", "numinchans=%d, numoutchans=%d, clutlen=%d\n", "numintabents=%d, numouttabents=%d\n", "refcnt = %d; type = 0x%08x %s\n", "attrno=%d; attrname=\"%s\"(0x%08x); attrtype=\"%s\"(0x%08x)\n", "compno = %d; qntsty = %d; numguard = %d; numstepsizes = %d\n", "expn[%d] = 0x%04x; mant[%d] = 0x%04x;\n", "qntsty = %d; numguard = %d; numstepsizes = %d\n", "compno = %d; roisty = %d; roishift = %d\n", "compno = %d; csty = 0x%02x; numdlvls = %d;\n", "cblkwidthval = %d; cblkheightval = %d; cblksty = 0x%02x; qmfbid = %d;\n", "width = %d; height = %d; xoff = %d; yoff = %d;\n", "tilewidth = %d; tileheight = %d; tilexoff = %d; tileyoff = %d;\n", "prec[%d] = %d; sgnd[%d] = %d; hsamp[%d] = %d; vsamp[%d] = %d\n", "tileno = %d; len = %d; partno = %d; numparts = %d\n", "numdlvls = %d; qmfbid = %d; mctrans = %d\n", "cblkwidthval = %d; cblkheightval = %d; cblksty = 0x%02x;\n", "prcwidth[%d] = %d, prcheight[%d] = %d\n", "warning: trailing garbage in marker segment (%ld bytes)\n", "type=%c%s%c (0x%08x); length=%d\n", "warning: cannot handle large 64-bit box length\n", "error: expecting signature box\n", "error: cannot decode code stream\n", "warning: number of components mismatch\n", "warning: component data type mismatch\n", "error: unsupported compression type\n", "warning: superfluous BPCC box\n", "warning: missing PCLR box or superfluous CMAP box\n", "warning: missing CMAP box or superfluous PCLR box\n", "error: invalid component number in CMAP box\n", "error: invalid CMAP LUT index\n", "invalid component number in RGN marker segment\n", "warning: ignoring unknown marker segment\n", "warning: possibly corrupt code stream\n", "invalid component number in COC marker segment\n", "invalid component number in QCC marker segment\n", "unexpected marker segment type\n", "xs =%d, ys = %d, xe = %d, ye = %d, w = %d, h = %d\n", "warning: ignoring trailing garbage (%lu bytes)\n", "warning: not enough tile data (%lu bytes)\n", "invalid tile number in SOT marker segment\n", "warning: stopping decode prematurely as requested\n", "packet offset=%08ld prg=%d cmptno=%02d rlvlno=%02d prcno=%03d lyrno=%02d\n", "cannot get (EPH) marker segment\n", "warning: bad segmentation symbol\n", "coding pass failed passtype=%d segtype=%d\n", "warning: bad termination pattern detected\n", "Cannot determine current file position (%T).", "Cannot update preview image pixels. File \"", "\" does not contain a preview image.", "Cannot update preview image pixels for file \"", ". The scan line has not yet been stored in file \"", "No frame buffer specified as pixel data source.", "Tried to write more scan lines than specified by the data window.", "Failed to write pixel data to image file \"", "Cannot copy pixels from image file \"", "\". The input file is tiled, but the output file is not. Try using TiledOutputFile::copyPixels instead.", "\". The files have different data windows.", "Quick pixel copy from image file \"", "\" failed. The files have different line orders.", "\" failed. The files use different compression methods.", "\" failed.  The files have different channel lists.", "\" already contains pixel data.", "\" is not compatible with the frame buffer's pixel type.", "X and/or y subsampling factors of \"", "\" are not compatible with the frame buffer's subsampling factors.", "Cannot find frame buffer slice \"", "Frame buffer slice name cannot be an empty string.", "Cannot register image file attribute type \"", "\". The type has already been registered.", "Cannot create image file attribute of unknown type \"", "Integer multiplication overflow.", "Data compression (zlib) failed.", "Data decompression (zlib) failed.", "Invalid key code film manufacturer code (must be between 0 and 99).", "Invalid key code film type (must be between 0 and 99).", "Invalid key code prefix (must be between 0 and 999999).", "Invalid key code count (must be between 0 and 9999).", "Invalid key code perforation offset (must be between 0 and 119).", "Invalid key code number of perforations per frame (must be between 1 and 15).", "Invalid key code number of perforations per count (must be between 20 and 120).", "Invalid display window in image header.", "Invalid data window in image header.", "The width of the data window exceeds the maximum width of ", "Invalid pixel aspect ratio in image header.", "Invalid screen window width in image header.", "Tiled image has no tile description attribute.", "Invalid tile size in image header.", "The width of the tiles exceeds the maximum width of ", "Invalid level mode in image header.", "Invalid level rounding mode in image header.", "Invalid line order in image header.", "Unknown compression type in image header.", "The x subsampling factor for the \"", "The y subsampling factor for the \"", "The minimum x coordinate of the image's data window is not a multiple of the x subsampling factor of the \"", "The minimum y coordinate of the image's data window is not a multiple of the y subsampling factor of the \"", "Number of pixels per row in the image's data window is not a multiple of the x subsampling factor of the \"", "Number of pixels per column in the image's data window is not a multiple of the y subsampling factor of the \"", " image files.  Current file format version is ", "The file format version number's flag field contains unrecognized flags.", "Unexpected type for image attribute \"", "Image attribute name cannot be an empty string.", "Cannot assign a value of type \"", "Image channel name cannot be an empty string.", "Error decompressing data (input data are shorter than expected).", "Error decompressing data (input data are longer than expected).", "Tried to read scan line outside the image file's data window.", "Tried to read a raw scanline from a tiled image.", "Error reading pixel data from image file \"", "Tried to read a raw tile from a scanline-based image.", "Error reading tile data from image file \"", "Cannot get a TiledInputFile pointer from an InputFile that is not tiled.", "Error in header for PIZ-compressed data (invalid bitmap size).", "Unexpected data block y coordinate.", "No frame buffer specified as pixel data destination.", "Attempt to perform a memory-mapped read on a file that is not memory mapped.", "Cannot initialize semaphore (%T).", "Post operation on semaphore failed (%T).", "Cannot read semaphore value (%T).", "Attempt to set the number of threads in a thread pool to a negative value.", "Error calling numLevels() on image file \"", "\" (numLevels() is not defined for files with RIPMAP level mode).", "Error calling levelWidth() on image file \"", "Error calling levelHeight() on image file \"", "Error calling numXTiles() on image file \"", "\" (Argument is not in valid range).", "Error calling numYTiles() on image file \"", "Error calling dataWindowForLevel() on image file \"", "Error calling dataWindowForTile() on image file \"", "Tried to read a tile outside the image file's data window.", "Unexpected tile x level number coordinate.", "Unexpected tile y level number coordinate.", "Expected a tiled file but the file is not tiled.", "Cannot copy the value of an image file attribute of type \"", "Error in Huffman-encoded data (decoded data are shorter than expected).", "Error in Huffman-encoded data (unexpected end of code table data).", "Error in Huffman-encoded data (code table is longer than expected).", "Error in Huffman-encoded data (invalid code table entry).", "Error in Huffman-encoded data (decoded data are longer than expected).", "Error in Huffman-encoded data (invalid code).", "Error in Huffman-encoded data (invalid code table size).", "Error in header for Huffman-encoded data (invalid number of bits).", "Cannot create new thread (%T).", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "deleted virtual method called\n", "locale::facet::_S_create_c_locale name not valid", "basic_filebuf::underflow codecvt::max_length() is not valid", "basic_filebuf::underflow incomplete character in file", "basic_filebuf::underflow invalid byte sequence in file", "basic_filebuf::underflow error reading the file", "basic_filebuf::xsgetn error reading the file", "basic_filebuf::_M_convert_to_external conversion error", "-+xX0123456789abcdef0123456789ABCDEF", "terminate called after throwing an instance of '", "terminate called without an active exception\n", "std::basic_string<char, std::char_traits<char>, std::allocator<char> >", "std::basic_istream<char, std::char_traits<char> >", "std::basic_ostream<char, std::char_traits<char> >", "std::basic_iostream<char, std::char_traits<char> >", "void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void Java_org_opencv_android_Utils_nBitmapToMat2(JNIEnv*, jclass, jobject, jlong, jboolean)", "cv::Mat::Mat(int, int, int, void*, size_t)", "Mat::nGet()", "Mat::nPutD()", "Mat::n_1zeros__DDI()", "Mat::n_1zeros__III()", "Mat::n_1t()", "Mat::n_1submat()", "Mat::n_1submat_1rr()", "Mat::n_1size()", "Mat::n_1setTo__JJ()", "Mat::n_1setTo__JJJ()", "Mat::n_1setTo__JDDDDJ()", "Mat::n_1setTo__JDDDD()", "Mat::n_1rowRange()", "Mat::n_1row()", "Mat::n_1reshape__JI()", "Mat::n_1reshape__JII()", "Mat::n_1release()", "Mat::n_1push_1back()", "Mat::n_1ones__DDI()", "Mat::n_1ones__III()", "Mat::n_1mul__JJ()", "Mat::n_1mul__JJD()", "core::locateROI_10()", "Mat::n_1inv__J()", "Mat::n_1inv__JI()", "Mat::n_1eye__DDI()", "Mat::n_1eye__III()", "Mat::n_1dot()", "Mat::n_1diag__J()", "Mat::n_1diag__JI()", "Mat::n_1cross()", "Mat::n_1create__JDDI()", "Mat::n_1create__JIII()", "Mat::n_1copyTo__JJJ()", "Mat::n_1copyTo__JJ()", "Mat::n_1convertTo__JJI()", "Mat::n_1convertTo__JJID()", "Mat::n_1convertTo__JJIDD()", "Mat::n_1colRange()", "Mat::n_1col()", "Mat::n_1clone()", "Mat::n_1checkVector__JI()", "Mat::n_1checkVector__JII()", "Mat::n_1checkVector__JIIZ()", "Mat::n_1assignTo__JJ()", "Mat::n_1assignTo__JJI()", "Mat::n_1adjustROI()", "Mat::n_1Mat__JII()", "Mat::n_1Mat__JIIII()", "Mat::n_1Mat__DDIDDDD()", "Mat::n_1Mat__IIIDDDD()", "Mat::n_1Mat__DDI()", "Mat::n_1Mat__III()", "Mat::nGetD()", "Mat::nPutF()", "Mat::nGetF()", "Mat::nPutI()", "Mat::nGetI()", "Mat::nPutS()", "Mat::nGetS()", "Mat::nPutB()", "Mat::nGetB()", "@Y>)F", "cv::Mat::Mat(int, int, int, void*, size_t)", "core::stop_10()", "core::start_10()", "core::getTimeSec_10()", "core::getTimeMilli_10()", "core::getTimeMicro_10()", "core::TickMeter_10()", "core::save_10()", "core::clear_10()", "core::getDefaultName_10()", "core::setUseIPP_10()", "core::vconcat_10()", "core::transpose_10()", "core::transform_10()", "core::subtract_15()", "core::subtract_14()", "core::subtract_13()", "core::subtract_12()", "core::subtract_11()", "core::subtract_10()", "core::sqrt_10()", "core::split_10()", "core::sortIdx_10()", "core::sort_10()", "core::setRNGSeed_10()", "core::setNumThreads_10()", "core::setIdentity_11()", "core::setIdentity_10()", "core::setErrorVerbosity_10()", "core::scaleAdd_10()", "core::rotate_10()", "core::repeat_10()", "core::reduce_11()", "core::reduce_10()", "core::randu_10()", "core::randn_10()", "core::randShuffle_11()", "core::randShuffle_10()", "core::pow_10()", "core::polarToCart_11()", "core::polarToCart_10()", "core::phase_11()", "core::phase_10()", "core::perspectiveTransform_10()", "core::patchNaNs_11()", "core::patchNaNs_10()", "core::normalize_13()", "core::normalize_12()", "core::normalize_11()", "core::normalize_10()", "core::multiply_15()", "core::multiply_14()", "core::multiply_13()", "core::multiply_12()", "core::multiply_11()", "core::multiply_10()", "core::mulTransposed_12()", "core::mulTransposed_11()", "core::mulTransposed_10()", "core::mulSpectrums_11()", "core::mulSpectrums_10()", "core::mixChannels_10()", "core::min_11()", "core::min_10()", "core::merge_10()", "core::meanStdDev_11()", "core::meanStdDev_10()", "core::max_11()", "core::max_10()", "core::magnitude_10()", "core::log_10()", "core::insertChannel_10()", "core::inRange_10()", "core::idft_11()", "core::idft_10()", "core::idct_11()", "core::idct_10()", "core::hconcat_10()", "core::gemm_11()", "core::gemm_10()", "core::flip_10()", "core::findNonZero_10()", "core::extractChannel_10()", "core::exp_10()", "core::divide_17()", "core::divide_16()", "core::divide_15()", "core::divide_14()", "core::divide_13()", "core::divide_12()", "core::divide_11()", "core::divide_10()", "core::dft_11()", "core::dft_10()", "core::dct_11()", "core::dct_10()", "core::copyMakeBorder_11()", "core::copyMakeBorder_10()", "core::convertScaleAbs_11()", "core::convertScaleAbs_10()", "core::convertFp16_10()", "core::completeSymm_11()", "core::completeSymm_10()", "core::compare_11()", "core::compare_10()", "core::cartToPolar_11()", "core::cartToPolar_10()", "core::calcCovarMatrix_11()", "core::calcCovarMatrix_10()", "core::bitwise_1xor_11()", "core::bitwise_1xor_10()", "core::bitwise_1or_11()", "core::bitwise_1or_10()", "core::bitwise_1not_11()", "core::bitwise_1not_10()", "core::bitwise_1and_11()", "core::bitwise_1and_10()", "core::batchDistance_12()", "core::batchDistance_11()", "core::batchDistance_10()", "core::addWeighted_11()", "core::addWeighted_10()", "core::add_15()", "core::add_14()", "core::add_13()", "core::add_12()", "core::add_11()", "core::add_10()", "core::absdiff_11()", "core::absdiff_10()", "core::SVDecomp_11()", "core::SVDecomp_10()", "core::SVBackSubst_10()", "core::PCAProject_10()", "core::PCACompute_12()", "core::PCACompute_11()", "core::PCACompute_10()", "core::PCABackProject_10()", "core::LUT_10()", "core::getTickCount_10()", "core::getCPUTickCount_10()", "core::solveCubic_10()", "core::getThreadNum_10()", "core::getOptimalDFTSize_10()", "core::getNumberOfCPUs_10()", "core::getNumThreads_10()", "core::countNonZero_10()", "core::borderInterpolate_10()", "core::fastAtan2_10()", "core::cubeRoot_10()", "core::solvePoly_11()", "core::solvePoly_10()", "core::norm_15()", "core::norm_14()", "core::norm_13()", "core::norm_12()", "core::norm_11()", "core::norm_10()", "core::kmeans_11()", "core::kmeans_10()", "core::invert_11()", "core::invert_10()", "core::getTickFrequency_10()", "core::determinant_10()", "core::PSNR_10()", "core::Mahalanobis_10()", "core::useIPP_10()", "core::solve_11()", "core::solve_10()", "core::eigen_11()", "core::eigen_10()", "core::checkRange_11()", "core::checkRange_10()", "core::getBuildInformation_10()", "core::trace_10()", "core::sumElems_10()", "core::mean_11()", "core::mean_10()", "imgproc::setTilesGridSize_10()", "imgproc::setClipLimit_10()", "imgproc::collectGarbage_10()", "imgproc::apply_10()", "imgproc::getClipLimit_10()", "imgproc::getTilesGridSize_10()", "imgproc::watershed_10()", "imgproc::warpPerspective_12()", "imgproc::warpPerspective_11()", "imgproc::warpPerspective_10()", "imgproc::warpAffine_12()", "imgproc::warpAffine_11()", "imgproc::warpAffine_10()", "imgproc::undistortPoints_11()", "imgproc::undistortPoints_10()", "imgproc::undistort_11()", "imgproc::undistort_10()", "imgproc::sqrBoxFilter_12()", "imgproc::sqrBoxFilter_11()", "imgproc::sqrBoxFilter_10()", "imgproc::spatialGradient_12()", "imgproc::spatialGradient_11()", "imgproc::spatialGradient_10()", "imgproc::sepFilter2D_12()", "imgproc::sepFilter2D_11()", "imgproc::sepFilter2D_10()", "imgproc::resize_11()", "imgproc::resize_10()", "imgproc::remap_11()", "imgproc::remap_10()", "imgproc::rectangle_12()", "imgproc::rectangle_11()", "imgproc::rectangle_10()", "imgproc::pyrUp_12()", "imgproc::pyrUp_11()", "imgproc::pyrUp_10()", "imgproc::pyrMeanShiftFiltering_11()", "imgproc::pyrMeanShiftFiltering_10()", "imgproc::pyrDown_12()", "imgproc::pyrDown_11()", "imgproc::pyrDown_10()", "imgproc::putText_12()", "imgproc::putText_11()", "imgproc::putText_10()", "imgproc::preCornerDetect_11()", "imgproc::preCornerDetect_10()", "imgproc::polylines_12()", "imgproc::polylines_11()", "imgproc::polylines_10()", "imgproc::morphologyEx_12()", "imgproc::morphologyEx_11()", "imgproc::morphologyEx_10()", "imgproc::minEnclosingCircle_10()", "imgproc::medianBlur_10()", "imgproc::matchTemplate_11()", "imgproc::matchTemplate_10()", "imgproc::logPolar_10()", "imgproc::linearPolar_10()", "imgproc::line_12()", "imgproc::line_11()", "imgproc::line_10()", "imgproc::invertAffineTransform_10()", "imgproc::integral_11()", "imgproc::integral_10()", "imgproc::integral2_11()", "imgproc::integral2_10()", "imgproc::integral3_11()", "imgproc::integral3_10()", "imgproc::initUndistortRectifyMap_10()", "imgproc::grabCut_11()", "imgproc::grabCut_10()", "imgproc::goodFeaturesToTrack_11()", "imgproc::goodFeaturesToTrack_10()", "imgproc::getRectSubPix_11()", "imgproc::getRectSubPix_10()", "imgproc::getDerivKernels_11()", "imgproc::getDerivKernels_10()", "imgproc::fitLine_10()", "imgproc::findContours_11()", "imgproc::findContours_10()", "imgproc::filter2D_12()", "imgproc::filter2D_11()", "imgproc::filter2D_10()", "imgproc::fillPoly_11()", "imgproc::fillPoly_10()", "imgproc::fillConvexPoly_11()", "imgproc::fillConvexPoly_10()", "imgproc::erode_12()", "imgproc::erode_11()", "imgproc::erode_10()", "imgproc::equalizeHist_10()", "imgproc::ellipse2Poly_10()", "imgproc::ellipse_15()", "imgproc::ellipse_14()", "imgproc::ellipse_13()", "imgproc::ellipse_12()", "imgproc::ellipse_11()", "imgproc::ellipse_10()", "imgproc::drawMarker_11()", "imgproc::drawMarker_10()", "imgproc::drawContours_12()", "imgproc::drawContours_11()", "imgproc::drawContours_10()", "imgproc::distanceTransform_11()", "imgproc::distanceTransform_10()", "imgproc::distanceTransformWithLabels_11()", "imgproc::distanceTransformWithLabels_10()", "imgproc::dilate_12()", "imgproc::dilate_11()", "imgproc::dilate_10()", "imgproc::demosaicing_11()", "imgproc::demosaicing_10()", "imgproc::cvtColor_11()", "imgproc::cvtColor_10()", "imgproc::createHanningWindow_10()", "imgproc::cornerSubPix_10()", "imgproc::cornerMinEigenVal_12()", "imgproc::cornerMinEigenVal_11()", "imgproc::cornerMinEigenVal_10()", "imgproc::cornerHarris_11()", "imgproc::cornerHarris_10()", "imgproc::cornerEigenValsAndVecs_11()", "imgproc::cornerEigenValsAndVecs_10()", "imgproc::convexityDefects_10()", "imgproc::convexHull_11()", "imgproc::convexHull_10()", "imgproc::convertMaps_11()", "imgproc::convertMaps_10()", "imgproc::circle_12()", "imgproc::circle_11()", "imgproc::circle_10()", "imgproc::calcHist_11()", "imgproc::calcHist_10()", "imgproc::calcBackProject_10()", "imgproc::boxPoints_10()", "imgproc::boxFilter_12()", "imgproc::boxFilter_11()", "imgproc::boxFilter_10()", "imgproc::blur_12()", "imgproc::blur_11()", "imgproc::blur_10()", "imgproc::bilateralFilter_11()", "imgproc::bilateralFilter_10()", "imgproc::arrowedLine_11()", "imgproc::arrowedLine_10()", "imgproc::approxPolyDP_10()", "imgproc::applyColorMap_11()", "imgproc::applyColorMap_10()", "imgproc::adaptiveThreshold_10()", "imgproc::accumulateWeighted_11()", "imgproc::accumulateWeighted_10()", "imgproc::accumulateSquare_11()", "imgproc::accumulateSquare_10()", "imgproc::accumulateProduct_11()", "imgproc::accumulateProduct_10()", "imgproc::accumulate_11()", "imgproc::accumulate_10()", "imgproc::Sobel_12()", "imgproc::Sobel_11()", "imgproc::Sobel_10()", "imgproc::Scharr_12()", "imgproc::Scharr_11()", "imgproc::Scharr_10()", "imgproc::Laplacian_12()", "imgproc::Laplacian_11()", "imgproc::Laplacian_10()", "imgproc::HuMoments_10()", "imgproc::HoughLinesP_11()", "imgproc::HoughLinesP_10()", "imgproc::HoughLines_11()", "imgproc::HoughLines_10()", "imgproc::HoughCircles_11()", "imgproc::HoughCircles_10()", "imgproc::GaussianBlur_12()", "imgproc::GaussianBlur_11()", "imgproc::GaussianBlur_10()", "imgproc::Canny_13()", "imgproc::Canny_12()", "imgproc::Canny_11()", "imgproc::Canny_10()", "imgproc::rotatedRectangleIntersection_10()", "imgproc::floodFill_11()", "imgproc::floodFill_10()", "imgproc::connectedComponentsWithStats_11()", "imgproc::connectedComponentsWithStats_10()", "imgproc::connectedComponentsWithStatsWithAlgorithm_10()", "imgproc::connectedComponents_11()", "imgproc::connectedComponents_10()", "imgproc::connectedComponentsWithAlgorithm_10()", "imgproc::EMD_11()", "imgproc::EMD_10()", "imgproc::intersectConvexConvex_11()", "imgproc::intersectConvexConvex_10()", "imgproc::initWideAngleProjMap_11()", "imgproc::initWideAngleProjMap_10()", "imgproc::threshold_10()", "imgproc::pointPolygonTest_10()", "imgproc::minEnclosingTriangle_10()", "imgproc::matchShapes_10()", "imgproc::contourArea_11()", "imgproc::contourArea_10()", "imgproc::compareHist_10()", "imgproc::arcLength_10()", "imgproc::isContourConvex_10()", "imgproc::clipLine_10()", "imgproc::minAreaRect_10()", "imgproc::fitEllipse_10()", "imgproc::boundingRect_10()", "imgproc::createLineSegmentDetector_11()", "imgproc::createLineSegmentDetector_10()", "imgproc::createCLAHE_11()", "imgproc::createCLAHE_10()", "imgproc::phaseCorrelate_11()", "imgproc::phaseCorrelate_10()", "imgproc::moments_11()", "imgproc::moments_10()", "imgproc::getStructuringElement_11()", "imgproc::getStructuringElement_10()", "imgproc::getRotationMatrix2D_10()", "imgproc::getPerspectiveTransform_10()", "imgproc::getGaussianKernel_11()", "imgproc::getGaussianKernel_10()", "imgproc::getGaborKernel_11()", "imgproc::getGaborKernel_10()", "imgproc::getDefaultNewCameraMatrix_11()", "imgproc::getDefaultNewCameraMatrix_10()", "imgproc::getAffineTransform_10()", "imgproc::insert_11()", "imgproc::initDelaunay_10()", "imgproc::getVoronoiFacetList_10()", "imgproc::getTriangleList_10()", "imgproc::getLeadingEdgeList_10()", "imgproc::getEdgeList_10()", "imgproc::symEdge_10()", "imgproc::rotateEdge_10()", "imgproc::nextEdge_10()", "imgproc::locate_10()", "imgproc::insert_10()", "imgproc::getEdge_10()", "imgproc::findNearest_11()", "imgproc::findNearest_10()", "imgproc::edgeOrg_11()", "imgproc::edgeOrg_10()", "imgproc::edgeDst_11()", "imgproc::edgeDst_10()", "imgproc::getVertex_11()", "imgproc::getVertex_10()", "imgproc::Subdiv2D_11()", "imgproc::Subdiv2D_10()", "imgproc::drawSegments_10()", "imgproc::detect_11()", "imgproc::detect_10()", "imgproc::compareSegments_11()", "imgproc::compareSegments_10()", "ml::setCalculateVarImportance_10()", "ml::setActiveVarCount_10()", "ml::getVotes_10()", "ml::getActiveVarCount_10()", "ml::getCalculateVarImportance_10()", "ml::getTermCriteria_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::getVarImportance_10()", "ml::getVarCount_10()", "ml::predict_11()", "ml::predict_10()", "ml::calcError_10()", "ml::train_12()", "ml::train_11()", "ml::train_10()", "ml::isTrained_10()", "ml::isClassifier_10()", "ml::empty_10()", "ml::setTrainMethod_11()", "ml::setTrainMethod_10()", "ml::setTermCriteria_10()", "ml::setRpropDWPlus_10()", "ml::setRpropDWMinus_10()", "ml::setRpropDWMin_10()", "ml::setRpropDWMax_10()", "ml::setRpropDW0_10()", "ml::setLayerSizes_10()", "ml::setBackpropWeightScale_10()", "ml::setBackpropMomentumScale_10()", "ml::setActivationFunction_11()", "ml::setActivationFunction_10()", "ml::getTrainMethod_10()", "ml::getRpropDWPlus_10()", "ml::getRpropDWMinus_10()", "ml::getRpropDWMin_10()", "ml::getRpropDWMax_10()", "ml::getRpropDW0_10()", "ml::getBackpropWeightScale_10()", "ml::getBackpropMomentumScale_10()", "ml::getTermCriteria_10()", "ml::load_10()", "ml::create_10()", "ml::getWeights_10()", "ml::getLayerSizes_10()", "ml::setUseSurrogates_10()", "ml::setUse1SERule_10()", "ml::setTruncatePrunedTree_10()", "ml::setRegressionAccuracy_10()", "ml::setPriors_10()", "ml::setMinSampleCount_10()", "ml::setMaxDepth_10()", "ml::setMaxCategories_10()", "ml::setCVFolds_10()", "ml::getMinSampleCount_10()", "ml::getMaxDepth_10()", "ml::getMaxCategories_10()", "ml::getCVFolds_10()", "ml::getRegressionAccuracy_10()", "ml::getUseSurrogates_10()", "ml::getUse1SERule_10()", "ml::getTruncatePrunedTree_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::getPriors_10()", "ml::setTermCriteria_10()", "ml::setSvmsgdType_10()", "ml::setStepDecreasingPower_10()", "ml::setOptimalParameters_11()", "ml::setOptimalParameters_10()", "ml::setMarginType_10()", "ml::setMarginRegularization_10()", "ml::setInitialStepSize_10()", "ml::getSvmsgdType_10()", "ml::getMarginType_10()", "ml::getStepDecreasingPower_10()", "ml::getShift_10()", "ml::getMarginRegularization_10()", "ml::getInitialStepSize_10()", "ml::getTermCriteria_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::getWeights_10()", "ml::setIsClassifier_10()", "ml::setEmax_10()", "ml::setDefaultK_10()", "ml::setAlgorithmType_10()", "ml::getEmax_10()", "ml::getDefaultK_10()", "ml::getAlgorithmType_10()", "ml::findNearest_11()", "ml::findNearest_10()", "ml::getIsClassifier_10()", "ml::create_10()", "ml::create_11()", "ml::create_10()", "ml::setTrainMethod_10()", "ml::setTermCriteria_10()", "ml::setRegularization_10()", "ml::setMiniBatchSize_10()", "ml::setLearningRate_10()", "ml::setIterations_10()", "ml::getTrainMethod_10()", "ml::getRegularization_10()", "ml::getMiniBatchSize_10()", "ml::getIterations_10()", "ml::predict_11()", "ml::predict_10()", "ml::getLearningRate_10()", "ml::getTermCriteria_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::get_1learnt_1thetas_10()", "ml::setWeightTrimRate_10()", "ml::setWeakCount_10()", "ml::setBoostType_10()", "ml::getWeakCount_10()", "ml::getBoostType_10()", "ml::getWeightTrimRate_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::shuffleTrainTest_10()", "ml::setTrainTestSplitRatio_11()", "ml::setTrainTestSplitRatio_10()", "ml::setTrainTestSplit_11()", "ml::setTrainTestSplit_10()", "ml::getValues_10()", "ml::getSample_10()", "ml::getNames_10()", "ml::getResponseType_10()", "ml::getNVars_10()", "ml::getNTrainSamples_10()", "ml::getNTestSamples_10()", "ml::getNSamples_10()", "ml::getNAllVars_10()", "ml::getLayout_10()", "ml::getCatCount_10()", "ml::create_11()", "ml::create_10()", "ml::getVarType_10()", "ml::getVarSymbolFlags_10()", "ml::getVarIdx_10()", "ml::getTrainSamples_11()", "ml::getTrainSamples_10()", "ml::getTrainSampleWeights_10()", "ml::getTrainSampleIdx_10()", "ml::getTrainResponses_10()", "ml::getTrainNormCatResponses_10()", "ml::getTestSamples_10()", "ml::getTestSampleWeights_10()", "ml::getTestSampleIdx_10()", "ml::getTestResponses_10()", "ml::getTestNormCatResponses_10()", "ml::getSubVector_10()", "ml::getSamples_10()", "ml::getSampleWeights_10()", "ml::getResponses_10()", "ml::getNormCatResponses_10()", "ml::getMissing_10()", "ml::getDefaultSubstValues_10()", "ml::getClassLabels_10()", "ml::getCatOfs_10()", "ml::getCatMap_10()", "ml::predictProb_11()", "ml::predictProb_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::setType_10()", "ml::setTermCriteria_10()", "ml::setP_10()", "ml::setNu_10()", "ml::setKernel_10()", "ml::setGamma_10()", "ml::setDegree_10()", "ml::setCoef0_10()", "ml::setClassWeights_10()", "ml::setC_10()", "ml::getType_10()", "ml::getKernelType_10()", "ml::getP_10()", "ml::getNu_10()", "ml::getGamma_10()", "ml::getDegree_10()", "ml::getDecisionFunction_10()", "ml::getCoef0_10()", "ml::getC_10()", "ml::trainAuto_11()", "ml::trainAuto_10()", "ml::getTermCriteria_10()", "ml::load_10()", "ml::create_10()", "ml::getDefaultGridPtr_10()", "ml::getUncompressedSupportVectors_10()", "ml::getSupportVectors_10()", "ml::getClassWeights_10()", "ml::setTermCriteria_10()", "ml::setCovarianceMatrixType_10()", "ml::setClustersNumber_10()", "ml::getCovs_10()", "ml::getCovarianceMatrixType_10()", "ml::getClustersNumber_10()", "ml::predict_11()", "ml::predict_10()", "ml::trainM_11()", "ml::trainM_10()", "ml::trainEM_11()", "ml::trainEM_10()", "ml::trainE_11()", "ml::trainE_10()", "ml::predict2_10()", "ml::getTermCriteria_10()", "ml::load_11()", "ml::load_10()", "ml::create_10()", "ml::getWeights_10()", "ml::getMeans_10()", "objdetect::groupRectangles_11()", "objdetect::groupRectangles_10()", "objdetect::get_1svmDetector_10()", "objdetect::get_1cellSize_10()", "objdetect::get_1blockStride_10()", "objdetect::get_1blockSize_10()", "objdetect::get_1winSize_10()", "objdetect::setSVMDetector_10()", "objdetect::save_11()", "objdetect::save_10()", "objdetect::detectMultiScale_11()", "objdetect::detectMultiScale_10()", "objdetect::detect_11()", "objdetect::detect_10()", "objdetect::computeGradient_11()", "objdetect::computeGradient_10()", "objdetect::compute_11()", "objdetect::compute_10()", "objdetect::getDefaultPeopleDetector_10()", "objdetect::getDaimlerPeopleDetector_10()", "objdetect::getDescriptorSize_10()", "objdetect::getWinSigma_10()", "objdetect::load_11()", "objdetect::load_10()", "objdetect::checkDetectorSize_10()", "objdetect::HOGDescriptor_13()", "objdetect::HOGDescriptor_12()", "objdetect::HOGDescriptor_11()", "objdetect::HOGDescriptor_10()", "objdetect::detectMultiScale3_11()", "objdetect::detectMultiScale3_10()", "objdetect::detectMultiScale2_11()", "objdetect::detectMultiScale2_10()", "objdetect::detectMultiScale_11()", "objdetect::detectMultiScale_10()", "objdetect::getFeatureType_10()", "objdetect::load_10()", "objdetect::isOldFormatCascade_10()", "objdetect::empty_10()", "objdetect::convert_10()", "objdetect::getOriginalWindowSize_10()", "objdetect::CascadeClassifier_11()", "objdetect::CascadeClassifier_10()", "photo::setGamma_10()", "photo::process_10()", "photo::getGamma_10()", "photo::process_11()", "photo::process_10()", "photo::process_10()", "photo::setSaturationWeight_10()", "photo::setExposureWeight_10()", "photo::setContrastWeight_10()", "photo::process_11()", "photo::process_10()", "photo::getSaturationWeight_10()", "photo::getExposureWeight_10()", "photo::getContrastWeight_10()", "photo::process_11()", "photo::process_10()", "photo::shiftMat_10()", "photo::setMaxBits_10()", "photo::setExcludeRange_10()", "photo::setCut_10()", "photo::process_11()", "photo::process_10()", "photo::computeBitmaps_10()", "photo::getMaxBits_10()", "photo::getExcludeRange_10()", "photo::getCut_10()", "photo::calculateShift_10()", "photo::setSaturation_10()", "photo::setBias_10()", "photo::getSaturation_10()", "photo::getBias_10()", "photo::process_10()", "photo::process_10()", "photo::textureFlattening_11()", "photo::textureFlattening_10()", "photo::stylization_11()", "photo::stylization_10()", "photo::seamlessClone_10()", "photo::pencilSketch_11()", "photo::pencilSketch_10()", "photo::inpaint_10()", "photo::illuminationChange_11()", "photo::illuminationChange_10()", "photo::fastNlMeansDenoisingMulti_13()", "photo::fastNlMeansDenoisingMulti_12()", "photo::fastNlMeansDenoisingMulti_11()", "photo::fastNlMeansDenoisingMulti_10()", "photo::fastNlMeansDenoisingColoredMulti_11()", "photo::fastNlMeansDenoisingColoredMulti_10()", "photo::fastNlMeansDenoisingColored_11()", "photo::fastNlMeansDenoisingColored_10()", "photo::fastNlMeansDenoising_13()", "photo::fastNlMeansDenoising_12()", "photo::fastNlMeansDenoising_11()", "photo::fastNlMeansDenoising_10()", "photo::edgePreservingFilter_11()", "photo::edgePreservingFilter_10()", "photo::detailEnhance_11()", "photo::detailEnhance_10()", "photo::denoise_1TVL1_11()", "photo::denoise_1TVL1_10()", "photo::decolor_10()", "photo::colorChange_11()", "photo::colorChange_10()", "photo::createTonemapReinhard_11()", "photo::createTonemapReinhard_10()", "photo::createTonemapMantiuk_11()", "photo::createTonemapMantiuk_10()", "photo::createTonemapDurand_11()", "photo::createTonemapDurand_10()", "photo::createTonemapDrago_11()", "photo::createTonemapDrago_10()", "photo::createTonemap_11()", "photo::createTonemap_10()", "photo::createMergeRobertson_10()", "photo::createMergeMertens_11()", "photo::createMergeMertens_10()", "photo::createMergeDebevec_10()", "photo::createCalibrateRobertson_11()", "photo::createCalibrateRobertson_10()", "photo::createCalibrateDebevec_11()", "photo::createCalibrateDebevec_10()", "photo::createAlignMTB_11()", "photo::createAlignMTB_10()", "photo::setLightAdaptation_10()", "photo::setIntensity_10()", "photo::setColorAdaptation_10()", "photo::getLightAdaptation_10()", "photo::getIntensity_10()", "photo::getColorAdaptation_10()", "photo::setSamples_10()", "photo::setRandom_10()", "photo::setLambda_10()", "photo::getSamples_10()", "photo::getLambda_10()", "photo::getRandom_10()", "photo::setSigmaSpace_10()", "photo::setSigmaColor_10()", "photo::setSaturation_10()", "photo::setContrast_10()", "photo::getSigmaSpace_10()", "photo::getSigmaColor_10()", "photo::getSaturation_10()", "photo::getContrast_10()", "photo::setScale_10()", "photo::setSaturation_10()", "photo::getScale_10()", "photo::getSaturation_10()", "photo::setThreshold_10()", "photo::setMaxIter_10()", "photo::getMaxIter_10()", "photo::getThreshold_10()", "photo::getRadiance_10()", "video::setkNNSamples_10()", "video::setShadowValue_10()", "video::setShadowThreshold_10()", "video::setNSamples_10()", "video::setHistory_10()", "video::setDist2Threshold_10()", "video::setDetectShadows_10()", "video::getkNNSamples_10()", "video::getShadowValue_10()", "video::getNSamples_10()", "video::getHistory_10()", "video::getShadowThreshold_10()", "video::getDist2Threshold_10()", "video::getDetectShadows_10()", "video::setVarThresholdGen_10()", "video::setVarThreshold_10()", "video::setVarMin_10()", "video::setVarMax_10()", "video::setVarInit_10()", "video::setShadowValue_10()", "video::setShadowThreshold_10()", "video::setNMixtures_10()", "video::setHistory_10()", "video::setDetectShadows_10()", "video::setComplexityReductionThreshold_10()", "video::setBackgroundRatio_10()", "video::apply_11()", "video::apply_10()", "video::getShadowValue_10()", "video::getNMixtures_10()", "video::getHistory_10()", "video::getVarThresholdGen_10()", "video::getVarThreshold_10()", "video::getVarMin_10()", "video::getVarMax_10()", "video::getVarInit_10()", "video::getShadowThreshold_10()", "video::getComplexityReductionThreshold_10()", "video::getBackgroundRatio_10()", "video::getDetectShadows_10()", "video::set_1errorCovPost_10()", "video::get_1errorCovPost_10()", "video::set_1gain_10()", "video::get_1gain_10()", "video::set_1errorCovPre_10()", "video::get_1errorCovPre_10()", "video::set_1measurementNoiseCov_10()", "video::get_1measurementNoiseCov_10()", "video::set_1processNoiseCov_10()", "video::get_1processNoiseCov_10()", "video::set_1measurementMatrix_10()", "video::get_1measurementMatrix_10()", "video::set_1controlMatrix_10()", "video::get_1controlMatrix_10()", "video::set_1transitionMatrix_10()", "video::get_1transitionMatrix_10()", "video::set_1statePost_10()", "video::get_1statePost_10()", "video::set_1statePre_10()", "video::get_1statePre_10()", "video::predict_11()", "video::predict_10()", "video::correct_10()", "video::KalmanFilter_12()", "video::KalmanFilter_11()", "video::KalmanFilter_10()", "video::calcOpticalFlowPyrLK_12()", "video::calcOpticalFlowPyrLK_11()", "video::calcOpticalFlowPyrLK_10()", "video::calcOpticalFlowFarneback_10()", "video::meanShift_10()", "video::buildOpticalFlowPyramid_11()", "video::buildOpticalFlowPyramid_10()", "video::findTransformECC_12()", "video::findTransformECC_11()", "video::findTransformECC_10()", "video::CamShift_10()", "video::createOptFlow_1DualTVL1_10()", "video::createBackgroundSubtractorMOG2_11()", "video::createBackgroundSubtractorMOG2_10()", "video::createBackgroundSubtractorKNN_11()", "video::createBackgroundSubtractorKNN_10()", "video::estimateRigidTransform_10()", "video::getBackgroundImage_10()", "video::apply_11()", "video::apply_10()", "video::collectGarbage_10()", "video::calc_10()", "video::calc_11()", "video::calc_10()", "video::setWinSize_10()", "video::setPyrScale_10()", "video::setPolySigma_10()", "video::setPolyN_10()", "video::setNumLevels_10()", "video::setNumIters_10()", "video::setFlags_10()", "video::setFastPyramids_10()", "video::getWinSize_10()", "video::getPolyN_10()", "video::getNumLevels_10()", "video::getNumIters_10()", "video::getFlags_10()", "video::getPyrScale_10()", "video::getPolySigma_10()", "video::getFastPyramids_10()", "video::create_11()", "video::create_10()", "video::setWinSize_10()", "video::setTermCriteria_10()", "video::setMinEigThreshold_10()", "video::setMaxLevel_10()", "video::setFlags_10()", "video::getMaxLevel_10()", "video::getFlags_10()", "video::getMinEigThreshold_10()", "video::getTermCriteria_10()", "video::getWinSize_10()", "video::create_11()", "video::create_10()", "video::setWarpingsNumber_10()", "video::setUseInitialFlow_10()", "video::setTheta_10()", "video::setTau_10()", "video::setScalesNumber_10()", "video::setScaleStep_10()", "video::setOuterIterations_10()", "video::setMedianFiltering_10()", "video::setLambda_10()", "video::setInnerIterations_10()", "video::setGamma_10()", "video::setEpsilon_10()", "video::getWarpingsNumber_10()", "video::getScalesNumber_10()", "video::getOuterIterations_10()", "video::getMedianFiltering_10()", "video::getInnerIterations_10()", "video::getTheta_10()", "video::getTau_10()", "video::getScaleStep_10()", "video::getLambda_10()", "video::getGamma_10()", "video::getEpsilon_10()", "video::getUseInitialFlow_10()", "video::create_11()", "video::create_10()", "dnn::setParam_10()", "dnn::setInputsNames_10()", "dnn::setInput_11()", "dnn::setInput_10()", "dnn::getMemoryConsumption_15()", "dnn::getMemoryConsumption_14()", "dnn::getMemoryConsumption_13()", "dnn::getMemoryConsumption_12()", "dnn::getMemoryConsumption_11()", "dnn::getMemoryConsumption_10()", "dnn::getLayerTypes_10()", "dnn::getLayerShapes_11()", "dnn::getLayerShapes_10()", "dnn::forward_14()", "dnn::forward_13()", "dnn::forward_12()", "dnn::enableFusion_10()", "dnn::deleteLayer_10()", "dnn::connect_10()", "dnn::getUnconnectedOutLayers_10()", "dnn::getLayerNames_10()", "dnn::getLayerInputs_10()", "dnn::getFLOPS_13()", "dnn::getFLOPS_12()", "dnn::getFLOPS_11()", "dnn::getFLOPS_10()", "dnn::getLayersCount_10()", "dnn::getLayerId_10()", "dnn::empty_10()", "dnn::getLayer_10()", "dnn::getParam_11()", "dnn::getParam_10()", "dnn::forward_11()", "dnn::forward_10()", "dnn::Net_10()", "dnn::getIntValue_11()", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "dnn::getIntValue_10()", "dnn::getRealValue_11()", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "dnn::getRealValue_10()", "dnn::getStringValue_11()", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "dnn::getStringValue_10()", "dnn::DictValue_12()", "dnn::DictValue_11()", "dnn::DictValue_10()", "dnn::populateNet_10()", "dnn::createTorchImporter_11()", "dnn::createTorchImporter_10()", "dnn::createTensorflowImporter_10()", "dnn::createCaffeImporter_11()", "dnn::createCaffeImporter_10()", "dnn::readNetFromTorch_11()", "dnn::readNetFromTorch_10()", "dnn::readNetFromTensorflow_10()", "dnn::readNetFromCaffe_11()", "dnn::readNetFromCaffe_10()", "dnn::readTorchBlob_11()", "dnn::readTorchBlob_10()", "dnn::blobFromImages_11()", "dnn::blobFromImages_10()", "dnn::blobFromImage_11()", "dnn::blobFromImage_10()", "dnn::get_1type_10()", "dnn::get_1name_10()", "dnn::set_1blobs_10()", "dnn::get_1blobs_10()", "dnn::run_10()", "dnn::forward_10()", "dnn::finalize_11()", "dnn::finalize_10()", "imgcodecs::imwrite_11()", "imgcodecs::imwrite_10()", "imgcodecs::imreadmulti_11()", "imgcodecs::imreadmulti_10()", "imgcodecs::imencode_11()", "imgcodecs::imencode_10()", "imgcodecs::imread_11()", "imgcodecs::imread_10()", "imgcodecs::imdecode_10()", "videoio::release_10()", "videoio::get_10()", "videoio::set_10()", "videoio::retrieve_11()", "videoio::retrieve_10()", "videoio::read_10()", "videoio::open_13()", "videoio::open_12()", "videoio::open_11()", "videoio::open_10()", "videoio::isOpened_10()", "videoio::grab_10()", "videoio::VideoCapture_13()", "videoio::VideoCapture_12()", "videoio::VideoCapture_11()", "videoio::VideoCapture_10()", "videoio::write_10()", "videoio::release_10()", "videoio::fourcc_10()", "videoio::get_10()", "videoio::set_10()", "videoio::open_13()", "videoio::open_12()", "videoio::open_11()", "videoio::open_10()", "videoio::isOpened_10()", "videoio::VideoWriter_14()", "videoio::VideoWriter_13()", "videoio::VideoWriter_12()", "videoio::VideoWriter_11()", "videoio::VideoWriter_10()", "features2d::FlannBasedMatcher_10()", "features2d::cluster_11()", "features2d::cluster_10()", "features2d::BOWKMeansTrainer_11()", "features2d::BOWKMeansTrainer_10()", "features2d::setPass2Only_10()", "features2d::setMinArea_10()", "features2d::setMaxArea_10()", "features2d::setDelta_10()", "features2d::detectRegions_10()", "features2d::getMinArea_10()", "features2d::getMaxArea_10()", "features2d::getDelta_10()", "features2d::getPass2Only_10()", "features2d::create_11()", "features2d::create_10()", "features2d::setWTA_1K_10()", "features2d::setScoreType_10()", "features2d::setScaleFactor_10()", "features2d::setPatchSize_10()", "features2d::setNLevels_10()", "features2d::setMaxFeatures_10()", "features2d::setFirstLevel_10()", "features2d::setFastThreshold_10()", "features2d::setEdgeThreshold_10()", "features2d::getWTA_1K_10()", "features2d::getScoreType_10()", "features2d::getPatchSize_10()", "features2d::getNLevels_10()", "features2d::getMaxFeatures_10()", "features2d::getFirstLevel_10()", "features2d::getFastThreshold_10()", "features2d::getEdgeThreshold_10()", "features2d::getScaleFactor_10()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::read_10()", "features2d::compute_11()", "features2d::compute_10()", "features2d::descriptorType_10()", "features2d::descriptorSize_10()", "features2d::empty_10()", "static cv::Ptr<cv::javaDescriptorExtractor> cv::javaDescriptorExtractor::create(int)", "features2d::create_10()", "features2d::clear_10()", "features2d::add_10()", "features2d::getDescriptors_10()", "features2d::descriptorsCount_10()", "features2d::cluster_11()", "features2d::cluster_10()", "features2d::Params_10()", "features2d::setThreshold_10()", "features2d::setNOctaves_10()", "features2d::setNOctaveLayers_10()", "features2d::setDiffusivity_10()", "features2d::setDescriptorType_10()", "features2d::setDescriptorSize_10()", "features2d::setDescriptorChannels_10()", "features2d::getNOctaves_10()", "features2d::getNOctaveLayers_10()", "features2d::getDiffusivity_10()", "features2d::getDescriptorType_10()", "features2d::getDescriptorSize_10()", "features2d::getDescriptorChannels_10()", "features2d::getThreshold_10()", "features2d::create_11()", "features2d::create_10()", "features2d::drawMatchesKnn_11()", "features2d::drawMatchesKnn_10()", "features2d::drawMatches2_11()", "features2d::drawMatches2_10()", "features2d::drawMatches_11()", "features2d::drawMatches_10()", "features2d::drawKeypoints_11()", "features2d::drawKeypoints_10()", "features2d::setUpright_10()", "features2d::setThreshold_10()", "features2d::setNOctaves_10()", "features2d::setNOctaveLayers_10()", "features2d::setExtended_10()", "features2d::setDiffusivity_10()", "features2d::getNOctaves_10()", "features2d::getNOctaveLayers_10()", "features2d::getDiffusivity_10()", "features2d::getThreshold_10()", "features2d::getUpright_10()", "features2d::getExtended_10()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::train_10()", "features2d::read_10()", "features2d::radiusMatch_13()", "features2d::radiusMatch_12()", "features2d::radiusMatch_11()", "features2d::radiusMatch_10()", "features2d::match_13()", "features2d::match_12()", "features2d::match_11()", "features2d::match_10()", "features2d::knnMatch_13()", "features2d::knnMatch_12()", "features2d::knnMatch_11()", "features2d::knnMatch_10()", "features2d::clear_10()", "features2d::add_10()", "features2d::getTrainDescriptors_10()", "features2d::isMaskSupported_10()", "features2d::empty_10()", "features2d::create_11()", "features2d::create_10()", "features2d::clone_11()", "features2d::clone_10()", "features2d::setQualityLevel_10()", "features2d::setMinDistance_10()", "features2d::setMaxFeatures_10()", "features2d::setK_10()", "features2d::setHarrisDetector_10()", "features2d::setBlockSize_10()", "features2d::getMaxFeatures_10()", "features2d::getBlockSize_10()", "features2d::getQualityLevel_10()", "features2d::getMinDistance_10()", "features2d::getK_10()", "features2d::getHarrisDetector_10()", "features2d::create_11()", "features2d::create_10()", "features2d::setType_10()", "features2d::setThreshold_10()", "features2d::setNonmaxSuppression_10()", "features2d::getType_10()", "features2d::getThreshold_10()", "features2d::getNonmaxSuppression_10()", "features2d::create_11()", "features2d::create_10()", "features2d::create_11()", "features2d::create_10()", "features2d::BFMatcher_11()", "features2d::BFMatcher_10()", "features2d::create_13()", "features2d::create_12()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::read_10()", "features2d::detectAndCompute_11()", "features2d::detectAndCompute_10()", "features2d::detect_13()", "features2d::detect_12()", "features2d::detect_11()", "features2d::detect_10()", "features2d::compute_11()", "features2d::compute_10()", "features2d::descriptorType_10()", "features2d::descriptorSize_10()", "features2d::defaultNorm_10()", "features2d::empty_10()", "features2d::setType_10()", "features2d::setThreshold_10()", "features2d::setNonmaxSuppression_10()", "features2d::getType_10()", "features2d::getThreshold_10()", "features2d::getNonmaxSuppression_10()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::read_10()", "features2d::detect_13()", "features2d::detect_12()", "features2d::detect_11()", "features2d::detect_10()", "features2d::empty_10()", "static cv::Ptr<cv::javaFeatureDetector> cv::javaFeatureDetector::create(int)", "features2d::create_10()", "features2d::setVocabulary_10()", "features2d::compute_10()", "features2d::descriptorType_10()", "features2d::descriptorSize_10()", "features2d::getVocabulary_10()", "N2cv6detail8PtrOwnerE", "N2cv6detail12PtrOwnerImplINS_5flann17KDTreeIndexParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann12SearchParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_19javaFeatureDetectorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_23javaDescriptorExtractorENS_14DefaultDeleterIS2_EEEE", "calib3d::undistortPoints_11()", "calib3d::undistortPoints_10()", "calib3d::undistortImage_11()", "calib3d::undistortImage_10()", "calib3d::stereoRectify_13()", "calib3d::stereoRectify_12()", "calib3d::projectPoints_13()", "calib3d::projectPoints_12()", "calib3d::initUndistortRectifyMap_10()", "calib3d::estimateNewCameraMatrixForUndistortRectify_11()", "calib3d::estimateNewCameraMatrixForUndistortRectify_10()", "calib3d::distortPoints_11()", "calib3d::distortPoints_10()", "calib3d::validateDisparity_11()", "calib3d::validateDisparity_10()", "calib3d::triangulatePoints_10()", "calib3d::stereoRectify_11()", "calib3d::stereoRectify_10()", "calib3d::reprojectImageTo3D_12()", "calib3d::reprojectImageTo3D_11()", "calib3d::reprojectImageTo3D_10()", "calib3d::projectPoints_11()", "calib3d::projectPoints_10()", "calib3d::matMulDeriv_10()", "calib3d::filterSpeckles_11()", "calib3d::filterSpeckles_10()", "calib3d::drawChessboardCorners_10()", "calib3d::decomposeProjectionMatrix_11()", "calib3d::decomposeProjectionMatrix_10()", "calib3d::decomposeEssentialMat_10()", "calib3d::correctMatches_10()", "calib3d::convertPointsToHomogeneous_10()", "calib3d::convertPointsFromHomogeneous_10()", "calib3d::computeCorrespondEpilines_10()", "calib3d::composeRT_11()", "calib3d::composeRT_10()", "calib3d::calibrationMatrixValues_10()", "calib3d::Rodrigues_11()", "calib3d::Rodrigues_10()", "calib3d::solveP3P_10()", "calib3d::recoverPose_16()", "calib3d::recoverPose_15()", "calib3d::recoverPose_14()", "calib3d::recoverPose_13()", "calib3d::recoverPose_12()", "calib3d::recoverPose_11()", "calib3d::recoverPose_10()", "calib3d::estimateAffine3D_11()", "calib3d::estimateAffine3D_10()", "calib3d::decomposeHomographyMat_10()", "calib3d::rectify3Collinear_10()", "calib3d::stereoCalibrate_15()", "calib3d::stereoCalibrate_14()", "calib3d::stereoCalibrate_13()", "calib3d::calibrate_12()", "calib3d::calibrate_11()", "calib3d::calibrate_10()", "calib3d::stereoCalibrate_12()", "calib3d::stereoCalibrate_11()", "calib3d::stereoCalibrate_10()", "calib3d::sampsonDistance_10()", "calib3d::calibrateCamera_12()", "calib3d::calibrateCamera_11()", "calib3d::calibrateCamera_10()", "calib3d::calibrateCameraExtended_12()", "calib3d::calibrateCameraExtended_11()", "calib3d::calibrateCameraExtended_10()", "calib3d::stereoRectifyUncalibrated_11()", "calib3d::stereoRectifyUncalibrated_10()", "calib3d::solvePnPRansac_11()", "calib3d::solvePnPRansac_10()", "calib3d::solvePnP_11()", "calib3d::solvePnP_10()", "calib3d::findCirclesGrid_11()", "calib3d::findCirclesGrid_10()", "calib3d::findChessboardCorners_11()", "calib3d::findChessboardCorners_10()", "calib3d::RQDecomp3x3_11()", "calib3d::RQDecomp3x3_10()", "calib3d::getValidDisparityROI_10()", "calib3d::initCameraMatrix2D_11()", "calib3d::initCameraMatrix2D_10()", "calib3d::getOptimalNewCameraMatrix_11()", "calib3d::getOptimalNewCameraMatrix_10()", "calib3d::findHomography_12()", "calib3d::findHomography_11()", "calib3d::findHomography_10()", "calib3d::findFundamentalMat_12()", "calib3d::findFundamentalMat_11()", "calib3d::findFundamentalMat_10()", "calib3d::findEssentialMat_15()", "calib3d::findEssentialMat_14()", "calib3d::findEssentialMat_13()", "calib3d::findEssentialMat_12()", "calib3d::findEssentialMat_11()", "calib3d::findEssentialMat_10()", "calib3d::estimateAffinePartial2D_11()", "calib3d::estimateAffinePartial2D_10()", "calib3d::estimateAffine2D_11()", "calib3d::estimateAffine2D_10()", "calib3d::setSpeckleWindowSize_10()", "calib3d::setSpeckleRange_10()", "calib3d::setNumDisparities_10()", "calib3d::setMinDisparity_10()", "calib3d::setDisp12MaxDiff_10()", "calib3d::setBlockSize_10()", "calib3d::compute_10()", "calib3d::getSpeckleWindowSize_10()", "calib3d::getSpeckleRange_10()", "calib3d::getNumDisparities_10()", "calib3d::getMinDisparity_10()", "calib3d::getDisp12MaxDiff_10()", "calib3d::getBlockSize_10()", "calib3d::setUniquenessRatio_10()", "calib3d::setTextureThreshold_10()", "calib3d::setSmallerBlockSize_10()", "calib3d::setROI2_10()", "calib3d::setROI1_10()", "calib3d::setPreFilterType_10()", "calib3d::setPreFilterSize_10()", "calib3d::setPreFilterCap_10()", "calib3d::getUniquenessRatio_10()", "calib3d::getTextureThreshold_10()", "calib3d::getSmallerBlockSize_10()", "calib3d::getPreFilterType_10()", "calib3d::getPreFilterSize_10()", "calib3d::getPreFilterCap_10()", "calib3d::getROI2_10()", "calib3d::getROI1_10()", "calib3d::create_11()", "calib3d::create_10()", "calib3d::setUniquenessRatio_10()", "calib3d::setPreFilterCap_10()", "calib3d::setP2_10()", "calib3d::setP1_10()", "calib3d::setMode_10()", "calib3d::getUniquenessRatio_10()", "calib3d::getPreFilterCap_10()", "calib3d::getP2_10()", "calib3d::getP1_10()", "calib3d::getMode_10()", "calib3d::create_11()", "calib3d::create_10()", "void cv::directx::convertFromDirect3DSurface9(IDirect3DSurface9*, cv::OutputArray, void*)", "void cv::directx::convertToDirect3DSurface9(cv::InputArray, IDirect3DSurface9*, void*)", "void cv::directx::convertFromD3D10Texture2D(ID3D10Texture2D*, cv::OutputArray)", "void cv::directx::convertToD3D10Texture2D(cv::InputArray, ID3D10Texture2D*)", "void cv::directx::convertFromD3D11Texture2D(ID3D11Texture2D*, cv::OutputArray)", "void cv::directx::convertToD3D11Texture2D(cv::InputArray, ID3D11Texture2D*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromDirect3DDevice9(IDirect3DDevice9*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromDirect3DDevice9Ex(IDirect3DDevice9Ex*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromD3D10Device(ID3D10Device*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromD3D11Device(ID3D11Device*)", "int cv::directx::getTypeFromD3DFORMAT(int)", "int cv::directx::getTypeFromDXGI_FORMAT(int)", "void cv::PCABackProject(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::PCAProject(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::PCACompute(cv::InputArray, cv::InputOutputArray, cv::OutputArray, double)", "void cv::PCACompute(cv::InputArray, cv::InputOutputArray, cv::OutputArray, int)", "void cv::PCA::backProject(cv::InputArray, cv::OutputArray) const", "void cv::PCA::project(cv::InputArray, cv::OutputArray) const", "cv::PCA& cv::PCA::operator()(cv::InputArray, cv::InputArray, int, double)", "void cv::PCA::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "void cv::PCA::write(cv::FileStorage&) const", "cv::PCA& cv::PCA::operator()(cv::InputArray, cv::InputArray, int, int)", "static void cv::KeyPoint::convert(const std::vector<cv::Point_<float> >&, std::vector<cv::KeyPoint>&, float, float, int, int)", "static void cv::KeyPoint::convert(const std::vector<cv::KeyPoint>&, std::vector<cv::Point_<float> >&, const std::vector<int>&)", "void* cv::OutOfMemoryError(size_t)", "cv::FormattedImpl::FormattedImpl(cv::String, cv::String, cv::Mat, char*, bool, bool, int)", "N2cv9FormattedE", "N2cv9FormatterE", "N2cv13FormattedImplE", "N2cv13FormatterBaseE", "N2cv16DefaultFormatterE", "N2cv15MatlabFormatterE", "N2cv15PythonFormatterE", "N2cv14NumpyFormatterE", "N2cv12CSVFormatterE", "N2cv10CFormatterE", "N2cv6detail12PtrOwnerImplINS_13FormattedImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16DefaultFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15MatlabFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12CSVFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15PythonFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_14NumpyFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10CFormatterENS_14DefaultDeleterIS2_EEEE", "int cv::solveLP(const cv::Mat&, const cv::Mat&, cv::Mat&)", "\"K\"K\"K\"K\"K\"K\"K\"K", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::DownhillSolverImpl::updateCoordSum(const cv::Mat&, cv::Mat&)", "double cv::DownhillSolverImpl::calc_f(const double*)", "double cv::DownhillSolverImpl::innerDownhillSimplex(cv::Mat&, double, double, int&, int)", "void cv::DownhillSolverImpl::createInitialSimplex(const cv::Mat&, cv::Mat&, cv::Mat&)", "virtual double cv::DownhillSolverImpl::minimize(cv::InputOutputArray)", "virtual void cv::DownhillSolverImpl::setTermCriteria(const cv::TermCriteria&)", "N2cv16MinProblemSolverE", "N2cv14DownhillSolverE", "N2cv18DownhillSolverImplE", "N2cv6detail12PtrOwnerImplINS_18DownhillSolverImplENS_14DefaultDeleterIS2_EEEE", "void cvSolvePoly(const CvMat*, CvMat*, int, int)", "int cvSolveCubic(const CvMat*, CvMat*)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "double cv::solvePoly(cv::InputArray, cv::OutputArray, int)", "int cv::solveCubic(cv::InputArray, cv::OutputArray)", "void cvPow(const CvArr*, CvArr*, double)", "void cvLog(const CvArr*, CvArr*)", "void cvExp(const CvArr*, CvArr*)", "void cvPolarToCart(const CvArr*, const CvArr*, CvArr*, CvArr*, int)", "void cvCartToPolar(const CvArr*, const CvArr*, CvArr*, CvArr*, int)", "void cv::patchNaNs(cv::InputOutputArray, double)", "bool cv::checkRange(cv::InputArray, bool, cv::Point*, double, double)", "void cv::sqrt(cv::InputArray, cv::OutputArray)", "void cv::pow(cv::InputArray, double, cv::OutputArray)", "void cv::log(cv::InputArray, cv::OutputArray)", "void cv::exp(cv::InputArray, cv::OutputArray)", "void cv::cartToPolar(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, bool)", "void cv::phase(cv::InputArray, cv::InputArray, cv::OutputArray, bool)", "void cv::magnitude(cv::InputArray, cv::InputArray, cv::OutputArray)", "float cv::cubeRoot(float)", "void cvSVBkSb(const CvArr*, const CvArr*, const CvArr*, const CvArr*, CvArr*, int)", "void cvSVD(CvArr*, CvArr*, CvArr*, CvArr*, int)", "void cvEigenVV(CvArr*, CvArr*, CvArr*, double, int, int)", "int cvSolve(const CvArr*, const CvArr*, CvArr*, int)", "double cvInvert(const CvArr*, CvArr*, int)", "double cvDet(const CvArr*)", "void cv::SVBackSubst(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::SVDecomp(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int)", "static void cv::SVD::backSubst(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "static void cv::SVD::compute(cv::InputArray, cv::OutputArray, int)", "void cv::_SVDcompute(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int)", "static void cv::SVD::compute(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int)", "bool cv::eigen(cv::InputArray, cv::OutputArray, cv::OutputArray)", "bool cv::solve(cv::InputArray, cv::InputArray, cv::OutputArray, int)", "double cv::invert(cv::InputArray, cv::OutputArray, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "double cv::determinant(cv::InputArray)", "bool cv::Cholesky(double*, size_t, int, double*, size_t, int)", "bool cv::Cholesky(float*, size_t, int, float*, size_t, int)", "int cv::LU(double*, size_t, int, double*, size_t, int)", "int cv::LU(float*, size_t, int, float*, size_t, int)", "void cv::va_intel::convertFromVASurface(VADisplay, VASurfaceID, cv::Size, cv::OutputArray)", "void cv::va_intel::convertToVASurface(VADisplay, cv::InputArray, VASurfaceID, cv::Size)", "cv::ocl::Context& cv::va_intel::ocl::initializeContextFromVA(VADisplay, bool)", "void cv::HWFeatures::readSettings(const int*, int)", "void cv::HWFeatures::initialize()", "size_t cv::utils::getConfigurationParameterSizeT(const char*, size_t)", "bool cv::utils::getConfigurationParameterBool(const char*, bool)", "void cv::TlsStorage::setData(size_t, void*)", "void* cv::TlsStorage::getData(size_t) const", "void* cv::TLSDataContainer::getData() const", "void cv::TlsStorage::releaseSlot(size_t, std::vector<void*>&, bool)", "void cv::TlsStorage::gather(size_t, std::vector<void*>&)", "virtual cv::TLSDataContainer::~TLSDataContainer()", "size_t cv::TlsStorage::reserveSlot()", "void cv::TlsAbstraction::SetData(void*)", "cv::TlsAbstraction::~TlsAbstraction()", "cv::TlsAbstraction::TlsAbstraction()", "cv::String cv::format(const char*, ...)", "*N2cv7TLSDataINS_12_GLOBAL__N_18ThreadIDEEE", "N2cv9ExceptionE", "N2cv16TLSDataContainerE", "N2cv7TLSDataINS_5instr11NodeDataTlsEEE", "N2cv7TLSDataINS_11CoreTLSDataEEE", "void throw_no_cuda()", "cv::cuda::GpuMat cv::cuda::GpuMat::reshape(int, int) const", "cv::cuda::GpuMat::GpuMat(const cv::cuda::GpuMat&, cv::Rect)", "cv::cuda::GpuMat::GpuMat(const cv::cuda::GpuMat&, cv::Range, cv::Range)", "CvScalar cvAvg(const void*, const void*)", "CvScalar cvSum(const CvArr*)", "double cv::PSNR(cv::InputArray, cv::InputArray)", "void cv::findNonZero(cv::InputArray, cv::OutputArray)", "void cv::batchDistance(cv::InputArray, cv::InputArray, cv::OutputArray, int, cv::OutputArray, int, int, cv::InputArray, int, bool)", "double cv::norm(cv::InputArray, cv::InputArray, int, cv::InputArray)", "double cv::norm(cv::InputArray, int, cv::InputArray)", "void cv::minMaxLoc(cv::InputArray, double*, double*, cv::Point*, cv::Point*, cv::InputArray)", "void cv::minMaxIdx(cv::InputArray, double*, double*, int*, int*, cv::InputArray)", "void cv::meanStdDev(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::InputArray)", "bool cv::ipp_mean(cv::Mat&, cv::Mat&, cv::Scalar&)", "cv::Scalar cv::mean(cv::InputArray, cv::InputArray)", "int cv::countNonZero(cv::InputArray)", "bool cv::ipp_sum(cv::Mat&, cv::Scalar&)", "cv::Scalar cv::sum(cv::InputArray)", "*N12_GLOBAL__N_113ProxyLoopBodyE", "*N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN12_GLOBAL__N_113ProxyLoopBodyEKNS_16auto_partitionerEEE", "N2cv16ParallelLoopBodyE", "N3tbb10interface98internal9flag_taskE", "cv::Mat cv::asRowMatrix(cv::InputArrayOfArrays, int, double, double)", "void cv::LDA::compute(cv::InputArrayOfArrays, cv::InputArray)", "void cv::sortMatrixColumnsByIndices(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat cv::argsort(cv::InputArray, bool)", "void cv::EigenvalueDecomposition::compute(cv::InputArray)", "void cv::LDA::lda(cv::InputArrayOfArrays, cv::InputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "void cv::LDA::load(const cv::String&)", "void cv::LDA::save(const cv::String&) const", "static cv::Mat cv::LDA::subspaceReconstruct(cv::InputArray, cv::InputArray, cv::InputArray)", "static cv::Mat cv::LDA::subspaceProject(cv::InputArray, cv::InputArray, cv::InputArray)", "CvTermCriteria cvCheckTermCriteria(CvTermCriteria, double, int)", "IplImage* cvCloneImage(const IplImage*)", "int cvGetImageCOI(const IplImage*)", "void cvSetImageCOI(IplImage*, int)", "CvRect cvGetImageROI(const IplImage*)", "void cvResetImageROI(IplImage*)", "void cvSetImageROI(IplImage*, CvRect)", "void cvReleaseImage(IplImage**)", "void cvReleaseImageHeader(IplImage**)", "IplImage* cvInitImageHeader(IplImage*, CvSize, int, int, int, int)", "IplImage* cvGetImage(const CvArr*, IplImage*)", "CvMat* cvReshape(const CvArr*, CvMat*, int, int)", "CvArr* cvReshapeMatND(const CvArr*, int, CvArr*, int, int, int*)", "CvMat* cvGetMat(const CvArr*, CvMat*, int*, int)", "void icvDeleteNode(CvSparseMat*, const int*, unsigned int*)", "void cvSetRealND(CvArr*, const int*, double)", "void cvSetReal3D(CvArr*, int, int, int, double)", "void cvSetReal2D(CvArr*, int, int, double)", "void cvSetReal1D(CvArr*, int, double)", "void cvSet2D(CvArr*, int, int, CvScalar)", "void cvSet1D(CvArr*, int, CvScalar)", "double cvGetRealND(const CvArr*, const int*)", "double cvGetReal3D(const CvArr*, int, int, int)", "double cvGetReal2D(const CvArr*, int, int)", "double cvGetReal1D(const CvArr*, int)", "CvScalar cvGet2D(const CvArr*, int, int)", "CvScalar cvGet1D(const CvArr*, int)", "uchar* cvPtrND(const CvArr*, const int*, int*, int, unsigned int*)", "uchar* cvPtr3D(const CvArr*, int, int, int, int*)", "uchar* cvPtr2D(const CvArr*, int, int, int*)", "uchar* icvGetNodePtr(CvSparseMat*, const int*, int*, int, unsigned int*)", "uchar* cvPtr1D(const CvArr*, int, int*)", "void cvRawDataToScalar(const void*, int, CvScalar*)", "void cvScalarToRawData(const CvScalar*, void*, int, int)", "CvMat* cvGetDiag(const CvArr*, CvMat*, int)", "CvMat* cvGetCols(const CvArr*, CvMat*, int, int)", "CvMat* cvGetRows(const CvArr*, CvMat*, int, int, int)", "CvMat* cvGetSubRect(const CvArr*, CvMat*, CvRect)", "CvSize cvGetSize(const CvArr*)", "int cvGetDimSize(const CvArr*, int)", "int cvGetDims(const CvArr*, int*)", "int cvGetElemType(const CvArr*)", "void cvGetRawData(const CvArr*, uchar**, int*, CvSize*)", "void cvReleaseData(CvArr*)", "void cvSetData(CvArr*, void*, int)", "void cvCreateData(CvArr*)", "CvSparseNode* cvInitSparseMatIterator(const CvSparseMat*, CvSparseMatIterator*)", "CvSparseMat* cvCloneSparseMat(const CvSparseMat*)", "void cvReleaseSparseMat(CvSparseMat**)", "CvSparseMat* cvCreateSparseMat(int, const int*, int)", "CvMatND* cvGetMatND(const CvArr*, CvMatND*, int*)", "int cvInitNArrayIterator(int, CvArr**, const CvArr*, CvMatND*, CvNArrayIterator*, int)", "CvMatND* cvCloneMatND(const CvMatND*)", "CvMatND* cvCreateMatNDHeader(int, const int*, int)", "CvMatND* cvInitMatNDHeader(CvMatND*, int, const int*, int, void*)", "CvMat* cvCloneMat(const CvMat*)", "void cvReleaseMat(CvMat**)", "CvMat* cvInitMatHeader(CvMat*, int, int, int, void*, int)", "CvMat* cvCreateMatHeader(int, int, int)", "void cvSetIPLAllocators(Cv_iplCreateImageHeader, Cv_iplAllocateImageData, Cv_iplDeallocate, Cv_iplCreateROI, Cv_iplCloneImage)", "virtual void cv::ConjGradSolverImpl::setTermCriteria(const cv::TermCriteria&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual double cv::ConjGradSolverImpl::minimize(cv::InputOutputArray)", "N2cv16MinProblemSolver8FunctionE", "N2cv14ConjGradSolverE", "N2cv18ConjGradSolverImplE", "N2cv6detail12PtrOwnerImplINS_18ConjGradSolverImplENS_14DefaultDeleterIS2_EEEE", "void glob_rec(const cv::String&, const cv::String&, std::vector<cv::String>&, bool)", "void cv::glob(cv::String, std::vector<cv::String>&, bool)", "void* icvReadSeq(CvFileStorage*, CvFileNode*)", "void* icvReadSeqTree(CvFileStorage*, CvFileNode*)", "void icvReleaseGraph(void**)", "void* icvReadGraph(CvFileStorage*, CvFileNode*)", "void icvWriteHeaderData(CvFileStorage*, const CvSeq*, CvAttrList*, int)", "char* icvGetFormat(const CvSeq*, const char*, CvAttrList*, int, char*)", "void* icvReadSparseMat(CvFileStorage*, CvFileNode*)", "void* icvReadImage(CvFileStorage*, CvFileNode*)", "void icvWriteImage(CvFileStorage*, const char*, const void*, CvAttrList)", "void* icvReadMat(CvFileStorage*, CvFileNode*)", "int icvDecodeSimpleFormat(const char*)", "void* icvReadMatND(CvFileStorage*, CvFileNode*)", "void base64::cvWriteRawDataBase64(CvFileStorage*, const void*, int, const char*)", "void base64::BinaryToCvSeqConvertor::make_funcs(const char*)", "base64::BinaryToCvSeqConvertor::BinaryToCvSeqConvertor(const void*, int, const char*)", "void base64::Base64Writer::check_dt(const char*)", "void base64::RawDataToBinaryConvertor::make_to_binary_funcs(const string&)", "base64::RawDataToBinaryConvertor::RawDataToBinaryConvertor(const void*, int, const string&)", "base64::Base64ContextEmitter::Base64ContextEmitter(CvFileStorage*)", "base64::Base64Writer::Base64Writer(CvFileStorage*)", "bool base64::Base64ContextParser::flush()", "base64::Base64ContextParser& base64::Base64ContextParser::read(const uchar*, const uchar*)", "std::string base64::make_base64_header(const char*)", "void cv::read(const cv::FileNode&, cv::SparseMat&, const cv::SparseMat&)", "void cv::read(const cv::FileNode&, cv::Mat&, const cv::Mat&)", "cv::FileNodeIterator& cv::FileNodeIterator::readRaw(const cv::String&, uchar*, size_t)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "void cv::FileStorage::writeRaw(const cv::String&, const uchar*, size_t)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const cv::String&)", "int cv::FileStorage::getFormat() const", "virtual bool cv::FileStorage::open(const cv::String&, int, const cv::String&)", "void* cvLoad(const char*, CvMemStorage*, const char*, const char**)", "void cvSave(const char*, const void*, const char*, const char*, CvAttrList)", "void cvWrite(CvFileStorage*, const char*, const void*, CvAttrList)", "void* cvRead(CvFileStorage*, CvFileNode*, CvAttrList*)", "void* cvClone(const void*)", "void cvRelease(void**)", "void cvRegisterType(const CvTypeInfo*)", "void icvWriteFileNode(CvFileStorage*, const char*, const CvFileNode*)", "void cvWriteFileNode(CvFileStorage*, const char*, const CvFileNode*, int)", "void cvReadRawData(const CvFileStorage*, const CvFileNode*, void*, const char*)", "void cvReadRawDataSlice(const CvFileStorage*, CvSeqReader*, int, void*, const char*)", "void cvStartReadRawData(const CvFileStorage*, const CvFileNode*, CvSeqReader*)", "void cvWriteRawData(CvFileStorage*, const void*, int, const char*)", "void cvStartNextStream(CvFileStorage*)", "void cvWriteComment(CvFileStorage*, const char*, int)", "void cvWriteString(CvFileStorage*, const char*, const char*, int)", "void cvWriteReal(CvFileStorage*, const char*, double)", "void cvWriteInt(CvFileStorage*, const char*, int)", "void cvEndWriteStruct(CvFileStorage*)", "void make_write_struct_delayed(CvFileStorage*, const char*, int, const char*)", "void cvStartWriteStruct(CvFileStorage*, const char*, int, const char*, CvAttrList)", "char* icvJSONParseSeq(CvFileStorage*, char*, CvFileNode*)", "char* icvJSONParseValue(CvFileStorage*, char*, CvFileNode*)", "char* icvJSONParseKey(CvFileStorage*, char*, CvFileNode*, CvFileNode**)", "char* icvJSONParseMap(CvFileStorage*, char*, CvFileNode*)", "char* icvJSONSkipSpaces(CvFileStorage*, char*)", "void icvJSONParse(CvFileStorage*)", "char* icvYMLSkipSpaces(CvFileStorage*, char*, int, int)", "char* icvYMLParseKey(CvFileStorage*, char*, CvFileNode*, CvFileNode**)", "void icvYMLGetMultilineStringContent(CvFileStorage*, char*, int, char*&, char*&)", "char* icvYMLParseBase64(CvFileStorage*, char*, int, CvFileNode*)", "char* icvYMLParseValue(CvFileStorage*, char*, CvFileNode*, int, int)", "void icvYMLParse(CvFileStorage*)", "char* icvXMLSkipSpaces(CvFileStorage*, char*, int)", "char* icvXMLParseTag(CvFileStorage*, char*, CvStringHashNode**, CvAttrList**, int*)", "void icvFSCreateCollection(CvFileStorage*, int, CvFileNode*)", "void icvProcessSpecialDouble(CvFileStorage*, char*, double*, char**)", "int icvDecodeFormat(const char*, int*, int)", "void icvXMLGetMultilineStringContent(CvFileStorage*, char*, char*&, char*&)", "char* icvXMLParseBase64(CvFileStorage*, char*, CvFileNode*)", "char* icvXMLParseValue(CvFileStorage*, char*, CvFileNode*, int)", "void icvXMLParse(CvFileStorage*)", "char* icvGets(CvFileStorage*, char*, int)", "void icvXMLStartWriteStruct(CvFileStorage*, const char*, int, const char*)", "void icvXMLEndWriteStruct(CvFileStorage*)", "void icvXMLWriteTag(CvFileStorage*, const char*, int, CvAttrList)", "void icvXMLWriteScalar(CvFileStorage*, const char*, const char*, int)", "void icvXMLWriteString(CvFileStorage*, const char*, const char*, int)", "void icvXMLWriteComment(CvFileStorage*, const char*, int)", "void icvYMLStartWriteStruct(CvFileStorage*, const char*, int, const char*)", "void icvYMLEndWriteStruct(CvFileStorage*)", "void icvYMLWrite(CvFileStorage*, const char*, const char*)", "void icvYMLWriteString(CvFileStorage*, const char*, const char*, int)", "void icvYMLWriteComment(CvFileStorage*, const char*, int)", "void icvJSONStartWriteStruct(CvFileStorage*, const char*, int, const char*)", "void icvJSONEndWriteStruct(CvFileStorage*)", "void switch_to_Base64_state(CvFileStorage*, base64::fs::State)", "void icvJSONWrite(CvFileStorage*, const char*, const char*)", "void icvJSONWriteString(CvFileStorage*, const char*, const char*, int)", "void icvJSONWriteComment(CvFileStorage*, const char*, int)", "CvFileStorage* cvOpenFileStorage(const char*, CvMemStorage*, int, const char*)", "CvFileNode* cvGetRootFileNode(const CvFileStorage*, int)", "CvFileNode* cvGetFileNodeByName(const CvFileStorage*, const CvFileNode*, const char*)", "CvFileNode* cvGetFileNode(CvFileStorage*, CvFileNode*, const CvStringHashNode*, int)", "void icvPuts(CvFileStorage*, const char*)", "void icvClose(CvFileStorage*, cv::String*)", "void cvReleaseFileStorage(CvFileStorage**)", "static cv::String cv::FileStorage::getDefaultObjectName(const cv::String&)", "ucwsifdr", "N2cv11FileStorageE", "N2cv6detail12PtrOwnerImplI11CvSparseMatNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvFileStorageNS_14DefaultDeleterIS2_EEEE", "?456789:;<=", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "void* IntGetProcAddress(const char*)", "bool cv::CommandLineParser::has(const cv::String&) const", "void cv::CommandLineParser::getByIndex(int, bool, int, void*) const", "void cv::from_str(const cv::String&, int, void*)", "void cv::CommandLineParser::getByName(const cv::String&, bool, int, void*) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "void cv::Algorithm::writeFormat(cv::FileStorage&) const", "virtual cv::String cv::Algorithm::getDefaultName() const", "virtual void cv::Algorithm::save(const cv::String&) const", "virtual cv::Algorithm::~Algorithm()", "cv::Algorithm::Algorithm()", "N2cv9AlgorithmE", "int cv::hal::QR64f(double*, size_t, int, int, int, double*, size_t, double*)", "int cv::hal::QR32f(float*, size_t, int, int, int, float*, size_t, float*)", "bool cv::hal::Cholesky64f(double*, size_t, int, double*, size_t, int)", "bool cv::hal::Cholesky32f(float*, size_t, int, float*, size_t, int)", "int cv::hal::LU64f(double*, size_t, int, double*, size_t, int)", "int cv::hal::LU32f(float*, size_t, int, float*, size_t, int)", "static cv::MatExpr cv::Mat::eye(cv::Size, int)", "static cv::MatExpr cv::Mat::eye(int, int, int)", "static cv::MatExpr cv::Mat::ones(int, const int*, int)", "static cv::MatExpr cv::Mat::ones(cv::Size, int)", "static cv::MatExpr cv::Mat::ones(int, int, int)", "static cv::MatExpr cv::Mat::zeros(int, const int*, int)", "static cv::MatExpr cv::Mat::zeros(cv::Size, int)", "static cv::MatExpr cv::Mat::zeros(int, int, int)", "cv::MatExpr cv::Mat::mul(cv::InputArray, double) const", "cv::MatExpr cv::Mat::inv(int) const", "cv::MatExpr cv::Mat::t() const", "virtual void cv::MatOp_Initializer::multiply(const cv::MatExpr&, double, cv::MatExpr&) const", "virtual void cv::MatOp_Initializer::assign(const cv::MatExpr&, cv::Mat&, int) const", "virtual void cv::MatOp_GEMM::transpose(const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_GEMM::multiply(const cv::MatExpr&, double, cv::MatExpr&) const", "virtual void cv::MatOp_GEMM::subtract(const cv::MatExpr&, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_GEMM::add(const cv::MatExpr&, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_T::transpose(const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_T::multiply(const cv::MatExpr&, double, cv::MatExpr&) const", "virtual void cv::MatOp_Bin::divide(double, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_Bin::multiply(const cv::MatExpr&, double, cv::MatExpr&) const", "virtual void cv::MatOp_Bin::assign(const cv::MatExpr&, cv::Mat&, int) const", "virtual void cv::MatOp_AddEx::abs(const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_AddEx::transpose(const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_AddEx::divide(double, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_AddEx::multiply(const cv::MatExpr&, double, cv::MatExpr&) const", "virtual void cv::MatOp_AddEx::subtract(const Scalar&, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp_AddEx::add(const cv::MatExpr&, const Scalar&, cv::MatExpr&) const", "virtual void cv::MatOp_Identity::assign(const cv::MatExpr&, cv::Mat&, int) const", "int cv::MatExpr::type() const", "cv::MatExpr cv::abs(const cv::MatExpr&)", "cv::MatExpr cv::abs(const cv::Mat&)", "cv::MatExpr cv::max(double, const cv::Mat&)", "cv::MatExpr cv::max(const cv::Mat&, double)", "cv::MatExpr cv::max(const cv::Mat&, const cv::Mat&)", "cv::MatExpr cv::min(double, const cv::Mat&)", "cv::MatExpr cv::min(const cv::Mat&, double)", "cv::MatExpr cv::min(const cv::Mat&, const cv::Mat&)", "virtual int cv::MatOp::type(const cv::MatExpr&) const", "virtual void cv::MatOp::transpose(const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp::abs(const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp::divide(double, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp::divide(const cv::MatExpr&, const cv::MatExpr&, cv::MatExpr&, double) const", "virtual void cv::MatOp::multiply(const cv::MatExpr&, double, cv::MatExpr&) const", "virtual void cv::MatOp::multiply(const cv::MatExpr&, const cv::MatExpr&, cv::MatExpr&, double) const", "virtual void cv::MatOp::subtract(const Scalar&, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp::subtract(const cv::MatExpr&, const cv::MatExpr&, cv::MatExpr&) const", "virtual void cv::MatOp::add(const cv::MatExpr&, const Scalar&, cv::MatExpr&) const", "virtual void cv::MatOp::add(const cv::MatExpr&, const cv::MatExpr&, cv::MatExpr&) const", "N2cv5MatOpE", "N2cv14MatOp_IdentityE", "N2cv11MatOp_AddExE", "N2cv9MatOp_BinE", "N2cv9MatOp_CmpE", "N2cv10MatOp_GEMME", "N2cv12MatOp_InvertE", "N2cv7MatOp_TE", "N2cv11MatOp_SolveE", "N2cv17MatOp_InitializerE", "void cv::hal::log64f(const double*, double*, int)", "void cv::hal::log32f(const float*, float*, int)", "void cv::hal::exp64f(const double*, double*, int)", "void cv::hal::exp32f(const float*, float*, int)", "void cv::hal::sqrt64f(const double*, double*, int)", "void cv::hal::sqrt32f(const float*, float*, int)", "void cv::hal::invSqrt64f(const double*, double*, int)", "void cv::hal::invSqrt32f(const float*, float*, int)", "void cv::hal::magnitude64f(const double*, const double*, double*, int)", "void cv::hal::magnitude32f(const float*, const float*, float*, int)", "void cv::hal::fastAtan2(const float*, const float*, float*, int, bool)", "void cv::hal::fastAtan64f(const double*, const double*, double*, int, bool)", "void cv::hal::fastAtan32f(const float*, const float*, float*, int, bool)", "void cv::generateCentersPP(const cv::Mat&, cv::Mat&, int, cv::RNG&, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "double cv::kmeans(cv::InputArray, int, cv::InputOutputArray, cv::TermCriteria, int, int, cv::OutputArray)", "virtual void cv::KMeansPPDistanceComputer::operator()(const cv::Range&) const", "N2cv24KMeansPPDistanceComputerE", "N2cv22KMeansDistanceComputerE", "double cv::UMat::dot(cv::InputArray) const", "cv::UMat& cv::UMat::setTo(cv::InputArray, cv::InputArray)", "void cv::UMat::convertTo(cv::OutputArray, int, double, double) const", "void cv::UMat::copyTo(cv::OutputArray, cv::InputArray) const", "void cv::UMat::copyTo(cv::OutputArray) const", "void* cv::UMat::handle(int) const", "cv::Mat cv::UMat::getMat(int) const", "cv::UMat cv::UMat::reshape(int, int, const int*) const", "static cv::UMat cv::UMat::diag(const cv::UMat&)", "cv::UMat cv::UMat::reshape(int, int) const", "cv::UMat& cv::UMat::adjustROI(int, int, int, int)", "void cv::UMat::locateROI(cv::Size&, cv::Point&) const", "cv::UMat cv::UMat::diag(int) const", "cv::UMat::UMat(const cv::UMat&, const std::vector<cv::Range>&)", "cv::UMat::UMat(const cv::UMat&, const cv::Range*)", "cv::UMat::UMat(const cv::UMat&, const Rect&)", "cv::UMat::UMat(const cv::UMat&, const cv::Range&, const cv::Range&)", "void cv::UMat::create(int, const int*, int, cv::UMatUsageFlags)", "cv::UMat cv::Mat::getUMat(int, cv::UMatUsageFlags) const", "void cv::setSize(cv::UMat&, int, const int*, const size_t*, bool)", "cv::UMatData::~UMatData()", "void cv::ocl::OpenCLBufferPoolBaseImpl<Derived, BufferEntry, T>::release(T) [with Derived = cv::ocl::OpenCLBufferPoolImpl; BufferEntry = cv::ocl::CLBufferEntry; T = _cl_mem*]", "void cv::ocl::OpenCLBufferPoolImpl::_allocateBufferEntry(cv::ocl::OpenCLBufferPoolImpl::BufferEntry&, size_t)", "void cv::ocl::OpenCLBufferPoolImpl::_releaseBufferEntry(const BufferEntry&)", "cv::ocl::OpenCLBufferPoolBaseImpl<Derived, BufferEntry, T>::~OpenCLBufferPoolBaseImpl() [with Derived = cv::ocl::OpenCLBufferPoolImpl; BufferEntry = cv::ocl::CLBufferEntry; T = _cl_mem*]", "static bool cv::ocl::Image2D::Impl::isFormatSupported(cl_image_format)", "int cv::ocl::checkOptimalVectorWidth(const int*, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::ocl::OclVectorStrategy)", "cv::String cv::ocl::kernelToStr(cv::InputArray, int, const char*)", "void cv::ocl::getPlatforms(std::vector<_cl_platform_id*>&)", "void cv::ocl::PlatformInfo::getDevice(cv::ocl::Device&, int) const", "void cv::ocl::getDevices(std::vector<_cl_device_id*>&, cl_platform_id)", "void cv::ocl::convertFromImage(void*, cv::UMat&)", "void cv::ocl::convertFromBuffer(void*, size_t, int, int, int, cv::UMat&)", "virtual cv::BufferPoolController* cv::ocl::OpenCLAllocator::getBufferPoolController(const char*) const", "virtual void cv::ocl::OpenCLAllocator::copy(cv::UMatData*, cv::UMatData*, int, const size_t*, const size_t*, const size_t*, const size_t*, const size_t*, bool) const", "virtual void cv::ocl::OpenCLAllocator::upload(cv::UMatData*, const void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "bool cv::ocl::OpenCLAllocator::checkContinuous(int, const size_t*, const size_t*, const size_t*, const size_t*, const size_t*, size_t&, size_t*, size_t&, size_t*, size_t*, size_t&, size_t*, size_t*) const", "virtual void cv::ocl::OpenCLAllocator::download(cv::UMatData*, void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "virtual void cv::ocl::OpenCLAllocator::unmap(cv::UMatData*) const", "virtual void cv::ocl::OpenCLAllocator::map(cv::UMatData*, int) const", "virtual void cv::ocl::OpenCLAllocator::deallocate(cv::UMatData*) const", "virtual bool cv::ocl::OpenCLAllocator::allocate(cv::UMatData*, int, cv::UMatUsageFlags) const", "virtual cv::UMatData* cv::ocl::OpenCLAllocator::allocate(int, const int*, int, void*, size_t*, int, cv::UMatUsageFlags) const", "void cv::ocl::OpenCLAllocator::deallocate_(cv::UMatData*) const", "cv::ocl::ProgramSource::hash_t cv::ocl::ProgramSource::hash() const", "const cv::String& cv::ocl::ProgramSource::source() const", "cv::ocl::Program::Impl::Impl(const cv::String&, const cv::String&)", "bool cv::ocl::Kernel::runTask(bool, const cv::ocl::Queue&)", "bool cv::ocl::Kernel::run(int, size_t*, size_t*, bool, const cv::ocl::Queue&)", "void cv::ocl::Kernel::Impl::addUMat(const cv::UMat&, bool)", "int cv::ocl::Kernel::set(int, const cv::ocl::KernelArg&)", "int cv::ocl::Kernel::set(int, const void*, size_t)", "cv::ocl::Kernel::Impl::Impl(const char*, const cv::ocl::Program&)", "static cv::ocl::KernelArg cv::ocl::KernelArg::Constant(const cv::Mat&)", "cv::ocl::KernelArg::KernelArg(int, cv::UMat*, int, int, const void*, size_t)", "void cv::ocl::Queue::finish()", "cv::ocl::Queue::Impl::Impl(const cv::ocl::Context&, const cv::ocl::Device&)", "void cv::ocl::initializeContextFromHandle(cv::ocl::Context&, void*, void*, void*)", "void cv::ocl::get_platform_name(cl_platform_id, cv::String&)", "void cv::ocl::attachContext(const cv::String&, void*, void*, void*)", "void cv::ocl::Context::setUseSVM(bool)", "_cl_device_id* cv::ocl::selectOpenCLDevice()", "void cv::ocl::Context::Impl::setDefault()", "cv::ocl::Context::Impl::Impl(int)", "void cv::ocl::Device::maxWorkItemSizes(size_t*) const", "void cv::ocl::Platform::Impl::init()", "N2cv20BufferPoolControllerE", "N2cv3ocl16OpenCLBufferPoolIP7_cl_memEE", "N2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memEE", "N2cv3ocl20OpenCLBufferPoolImplE", "N2cv3ocl15OpenCLAllocatorE", "void cvRepeat(const CvArr*, CvArr*)", "void cvFlip(const CvArr*, CvArr*, int)", "void cvCopy(const void*, void*, const void*)", "void cv::copyMakeBorder(cv::InputArray, cv::OutputArray, int, int, int, int, int, const Scalar&)", "int cv::borderInterpolate(int, int, int)", "void cv::repeat(cv::InputArray, int, int, cv::OutputArray)", "void cv::rotate(cv::InputArray, cv::OutputArray, int)", "void cv::flip(cv::InputArray, cv::OutputArray, int)", "cv::Mat& cv::Mat::setTo(cv::InputArray, cv::InputArray)", "cv::Mat& cv::Mat::operator=(const Scalar&)", "void cv::Mat::copyTo(cv::OutputArray, cv::InputArray) const", "void cv::Mat::copyTo(cv::OutputArray) const", "N3ipp11IwExceptionE", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = unsigned char]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = short unsigned int]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<unsigned char, 3>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = int]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<short unsigned int, 3>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 2>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 3>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 4>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 6>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 8>]", "void cv::randShuffle(cv::InputOutputArray, double, cv::RNG*)", "void cv::randn(cv::InputOutputArray, cv::InputArray, cv::InputArray)", "void cv::randu(cv::InputOutputArray, cv::InputArray, cv::InputArray)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "void cv::RNG::fill(cv::InputOutputArray, int, cv::InputArray, cv::InputArray, bool)", "void cv::setUseOpenVX(bool)", "void* cvPrevTreeNode(CvTreeNodeIterator*)", "void* cvNextTreeNode(CvTreeNodeIterator*)", "void cvInitTreeNodeIterator(CvTreeNodeIterator*, const void*, int)", "void cvRemoveNodeFromTree(void*, void*)", "void cvInsertNodeIntoTree(void*, void*, void*)", "CvSeq* cvTreeToNodeSeq(const void*, int, CvMemStorage*)", "CvGraph* cvCloneGraph(const CvGraph*, CvMemStorage*)", "schar* icvSeqFindNextElem(CvSeq*, int, int, int, int*)", "int cvNextGraphItem(CvGraphScanner*)", "void cvReleaseGraphScanner(CvGraphScanner**)", "void icvSeqElemsClearFlags(CvSeq*, int, int)", "CvGraphScanner* cvCreateGraphScanner(CvGraph*, CvGraphVtx*, int)", "int cvGraphVtxDegree(const CvGraph*, int)", "int cvGraphVtxDegreeByPtr(const CvGraph*, const CvGraphVtx*)", "void cvGraphRemoveEdge(CvGraph*, int, int)", "void cvGraphRemoveEdgeByPtr(CvGraph*, CvGraphVtx*, CvGraphVtx*)", "int cvGraphAddEdge(CvGraph*, int, int, const CvGraphEdge*, CvGraphEdge**)", "int cvGraphAddEdgeByPtr(CvGraph*, CvGraphVtx*, CvGraphVtx*, const CvGraphEdge*, CvGraphEdge**)", "CvGraphEdge* cvFindGraphEdge(const CvGraph*, int, int)", "CvGraphEdge* cvFindGraphEdgeByPtr(const CvGraph*, const CvGraphVtx*, const CvGraphVtx*)", "int cvGraphRemoveVtx(CvGraph*, int)", "int cvGraphRemoveVtxByPtr(CvGraph*, CvGraphVtx*)", "int cvGraphAddVtx(CvGraph*, const CvGraphVtx*, CvGraphVtx**)", "void cvClearGraph(CvGraph*)", "CvGraph* cvCreateGraph(int, int, int, int, CvMemStorage*)", "void cvSetRemove(CvSet*, int)", "int cvSetAdd(CvSet*, CvSetElem*, CvSetElem**)", "CvSet* cvCreateSet(int, int, int, CvMemStorage*)", "int cvSeqPartition(const CvSeq*, CvMemStorage*, CvSeq**, CvCmpFunc, void*)", "schar* cvSeqSearch(CvSeq*, const void*, CvCmpFunc, int, int*, void*)", "void cvSeqSort(CvSeq*, CvCmpFunc, void*)", "void cvSeqInsertSlice(CvSeq*, int, const CvArr*)", "void cvSeqRemoveSlice(CvSeq*, CvSlice)", "CvSeq* cvSeqSlice(const CvSeq*, CvSlice, CvMemStorage*, int)", "void cvClearSeq(CvSeq*)", "void cvSeqPopMulti(CvSeq*, void*, int, int)", "void cvSeqPushMulti(CvSeq*, const void*, int, int)", "void cvSeqRemove(CvSeq*, int)", "schar* cvSeqInsert(CvSeq*, int, const void*)", "void cvSeqPopFront(CvSeq*, void*)", "schar* cvSeqPushFront(CvSeq*, const void*)", "void cvSeqPop(CvSeq*, void*)", "schar* cvSeqPush(CvSeq*, const void*)", "void cvSetSeqReaderPos(CvSeqReader*, int, int)", "int cvGetSeqReaderPos(CvSeqReader*)", "void cvChangeSeqBlock(void*, int)", "void cvStartReadSeq(const CvSeq*, CvSeqReader*, int)", "void icvGrowSeq(CvSeq*, int)", "void cvCreateSeqBlock(CvSeqWriter*)", "CvSeq* cvEndWriteSeq(CvSeqWriter*)", "void cvFlushSeqWriter(CvSeqWriter*)", "void cvStartWriteSeq(int, int, int, CvMemStorage*, CvSeqWriter*)", "void cvStartAppendToSeq(CvSeq*, CvSeqWriter*)", "CvSeq* cvMakeSeqHeaderForArray(int, int, int, void*, int, CvSeq*, CvSeqBlock*)", "void* cvCvtSeqToArray(const CvSeq*, void*, CvSlice)", "int cvSeqElemIdx(const CvSeq*, const void*, CvSeqBlock**)", "void cvSetSeqBlockSize(CvSeq*, int)", "CvSeq* cvCreateSeq(int, size_t, size_t, CvMemStorage*)", "void icvGoNextMemBlock(CvMemStorage*)", "void* cvMemStorageAlloc(CvMemStorage*, size_t)", "void cvRestoreMemStoragePos(CvMemStorage*, CvMemStoragePos*)", "void cvSaveMemStoragePos(const CvMemStorage*, CvMemStoragePos*)", "void cvClearMemStorage(CvMemStorage*)", "void icvDestroyMemStorage(CvMemStorage*)", "void cvReleaseMemStorage(CvMemStorage**)", "CvMemStorage* cvCreateChildMemStorage(CvMemStorage*)", "void icvInitMemStorage(CvMemStorage*, int)", "cv::UMat cv::ogl::mapGLBuffer(const cv::ogl::Buffer&, int)", "void cv::ogl::convertFromGLTexture2D(const cv::ogl::Texture2D&, cv::OutputArray)", "void cv::ogl::convertToGLTexture2D(cv::InputArray, cv::ogl::Texture2D&)", "cv::ocl::Context& cv::ogl::ocl::initializeContextFromGL()", "void cv::ogl::Arrays::setTexCoordArray(cv::InputArray)", "void cv::ogl::Arrays::setNormalArray(cv::InputArray)", "void cv::ogl::Arrays::setColorArray(cv::InputArray)", "void cv::ogl::Arrays::setVertexArray(cv::InputArray)", "void {anonymous}::throw_no_ogl()", "void cvNormalize(const CvArr*, CvArr*, double, double, int, const CvArr*)", "void cvLUT(const void*, void*, const void*)", "void cvConvertScale(const void*, void*, double, double)", "void cvConvertScaleAbs(const void*, void*, double, double)", "void cvMerge(const void*, const void*, const void*, const void*, void*)", "void cvSplit(const void*, void*, void*, void*, void*)", "void cv::normalize(cv::InputArray, cv::InputOutputArray, double, double, int, int, cv::InputArray)", "void cv::LUT(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::Mat::convertTo(cv::OutputArray, int, double, double) const", "void cv::convertFp16(cv::InputArray, cv::OutputArray)", "void cv::convertScaleAbs(cv::InputArray, cv::OutputArray, double, double)", "void cv::insertChannel(cv::InputArray, cv::InputOutputArray, int)", "void cv::extractChannel(cv::InputArray, cv::OutputArray, int)", "void cv::mixChannels(cv::InputArrayOfArrays, cv::InputOutputArrayOfArrays, const std::vector<int>&)", "void cv::mixChannels(cv::InputArrayOfArrays, cv::InputOutputArrayOfArrays, const int*, size_t)", "void cv::mixChannels(const cv::Mat*, size_t, cv::Mat*, size_t, const int*, size_t)", "void cv::merge(cv::InputArrayOfArrays, cv::OutputArray)", "void cv::merge(const cv::Mat*, size_t, cv::OutputArray)", "void cv::split(cv::InputArray, cv::OutputArrayOfArrays)", "void cv::split(const cv::Mat&, cv::Mat*)", "N2cv15LUTParallelBodyE", "N2cv6detail12PtrOwnerImplINS_16ParallelLoopBodyENS_14DefaultDeleterIS2_EEEE", "void cvBackProjectPCA(const CvArr*, const CvArr*, const CvArr*, CvArr*)", "void cvProjectPCA(const CvArr*, const CvArr*, const CvArr*, CvArr*)", "void cvCalcPCA(const CvArr*, CvArr*, CvArr*, CvArr*, int)", "void cvCalcCovarMatrix(const CvArr**, int, CvArr*, CvArr*, int)", "void cvScaleAdd(const CvArr*, CvScalar, const CvArr*, CvArr*)", "void cvPerspectiveTransform(const CvArr*, CvArr*, const CvMat*)", "void cvTransform(const CvArr*, CvArr*, const CvMat*, const CvMat*)", "void cvGEMM(const CvArr*, const CvArr*, double, const CvArr*, double, CvArr*, int)", "double cv::Mat::dot(cv::InputArray) const", "void cv::mulTransposed(cv::InputArray, cv::OutputArray, bool, cv::InputArray, double, int)", "double cv::Mahalanobis(cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::calcCovarMatrix(cv::InputArray, cv::OutputArray, cv::InputOutputArray, int, int)", "void cv::calcCovarMatrix(const cv::Mat*, int, cv::Mat&, cv::Mat&, int, int)", "void cv::scaleAdd(cv::InputArray, double, cv::InputArray, cv::OutputArray)", "void cv::perspectiveTransform(cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::transform(cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::gemm(cv::InputArray, cv::InputArray, double, cv::InputArray, double, cv::OutputArray, int)", "void cv::gemmImpl(cv::Mat, cv::Mat, double, cv::Mat, double, cv::Mat, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "_IplImage::_IplImage(const cv::Mat&)", "cv::RotatedRect::RotatedRect(const Point2f&, const Point2f&, const Point2f&)", "void cv::normalize(const cv::SparseMat&, cv::SparseMat&, double, int)", "void cv::minMaxLoc(const cv::SparseMat&, double*, double*, int*, int*)", "double cv::norm(const cv::SparseMat&, int)", "void cv::SparseMat::erase(const int*, size_t*)", "void cv::SparseMat::erase(int, int, int, size_t*)", "void cv::SparseMat::erase(int, int, size_t*)", "uchar* cv::SparseMat::ptr(const int*, bool, size_t*)", "uchar* cv::SparseMat::ptr(int, int, int, bool, size_t*)", "uchar* cv::SparseMat::ptr(int, int, bool, size_t*)", "uchar* cv::SparseMat::ptr(int, bool, size_t*)", "void cv::SparseMat::convertTo(cv::Mat&, int, double, double) const", "void (* cv::getConvertScaleElem(int, int))(const void*, void*, int, double, double)", "void (* cv::getConvertElem(int, int))(const void*, void*, int)", "void cv::SparseMat::convertTo(cv::SparseMat&, int, double) const", "void cv::SparseMat::copyTo(cv::Mat&) const", "void cv::SparseMat::create(int, const int*, int)", "void cv::MatConstIterator::pos(int*) const", "void cv::NAryMatIterator::init(const cv::Mat**, cv::Mat*, uchar**, int)", "cv::Mat cv::Mat::reshape(int, const std::vector<int>&) const", "cv::Mat cv::Mat::reshape(int, int, const int*) const", "int cvKMeans2(const CvArr*, int, CvArr*, CvTermCriteria, int, CvRNG*, int, CvArr*, double*)", "void cvSort(const CvArr*, CvArr*, CvArr*, int)", "CvArr* cvRange(CvArr*, double, double)", "void cvReduce(const CvArr*, CvArr*, int, int)", "void cvCrossProduct(const CvArr*, const CvArr*, CvArr*)", "void cvTranspose(const CvArr*, CvArr*)", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = unsigned char]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = signed char]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = short unsigned int]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = short int]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = int]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = float]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = double]", "void cv::sortIdx(cv::InputArray, cv::OutputArray, int)", "void cv::sort(cv::InputArray, cv::OutputArray, int)", "void reduceSumC_8u16u16s32f_64f(const cv::Mat&, cv::Mat&)", "void cv::reduce(cv::InputArray, cv::OutputArray, int, int, int)", "cv::Mat cv::Mat::cross(cv::InputArray) const", "void cv::completeSymm(cv::InputOutputArray, bool)", "void cv::transpose(cv::InputArray, cv::OutputArray)", "cv::Scalar cv::trace(cv::InputArray)", "void cv::setIdentity(cv::InputOutputArray, const Scalar&)", "void cv::vconcat(cv::InputArray, cv::OutputArray)", "void cv::vconcat(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::vconcat(const cv::Mat*, size_t, cv::OutputArray)", "void cv::hconcat(cv::InputArray, cv::OutputArray)", "void cv::hconcat(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::hconcat(const cv::Mat*, size_t, cv::OutputArray)", "void cv::_OutputArray::assign(const cv::Mat&) const", "void cv::_OutputArray::assign(const cv::UMat&) const", "void cv::_OutputArray::setTo(const cv::_InputArray&, const cv::_InputArray&) const", "cv::cuda::HostMem& cv::_OutputArray::getHostMemRef() const", "cv::ogl::Buffer& cv::_OutputArray::getOGlBufferRef() const", "std::vector<cv::cuda::GpuMat>& cv::_OutputArray::getGpuMatVecRef() const", "cv::cuda::GpuMat& cv::_OutputArray::getGpuMatRef() const", "cv::UMat& cv::_OutputArray::getUMatRef(int) const", "cv::Mat& cv::_OutputArray::getMatRef(int) const", "void cv::_OutputArray::clear() const", "void cv::_OutputArray::release() const", "void cv::_OutputArray::create(int, const int*, int, int, bool, int) const", "void cv::_OutputArray::create(int, int, int, int, bool, int) const", "void cv::_OutputArray::create(cv::Size, int, int, bool, int) const", "void cv::_InputArray::copyTo(const cv::_OutputArray&, const cv::_InputArray&) const", "void cv::_InputArray::copyTo(const cv::_OutputArray&) const", "size_t cv::_InputArray::step(int) const", "size_t cv::_InputArray::offset(int) const", "bool cv::_InputArray::isSubmatrix(int) const", "bool cv::_InputArray::isContinuous(int) const", "bool cv::_InputArray::empty() const", "int cv::_InputArray::type(int) const", "size_t cv::_InputArray::total(int) const", "int cv::_InputArray::dims(int) const", "int cv::_InputArray::sizend(int*, int) const", "cv::Size cv::_InputArray::size(int) const", "cv::ogl::Buffer cv::_InputArray::getOGlBuffer() const", "cv::cuda::GpuMat cv::_InputArray::getGpuMat() const", "void cv::_InputArray::getUMatVector(std::vector<cv::UMat>&) const", "void cv::_InputArray::getMatVector(std::vector<cv::Mat>&) const", "cv::UMat cv::_InputArray::getUMat(int) const", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "cv::Mat cv::_InputArray::getMat_(int) const", "void cv::scalarToRawData(const Scalar&, void*, int, int)", "static cv::Mat cv::Mat::diag(const cv::Mat&)", "cv::Mat cv::Mat::reshape(int, int) const", "void cv::insertImageCOI(cv::InputArray, CvArr*, int)", "void cv::extractImageCOI(const CvArr*, cv::OutputArray, int)", "cv::Mat& cv::Mat::adjustROI(int, int, int, int)", "void cv::Mat::locateROI(cv::Size&, cv::Point&) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat cv::iplImageToMat(const IplImage*, bool)", "cv::Mat cv::cvarrToMat(const CvArr*, bool, bool, int, cv::AutoBuffer<double>*)", "void cv::Mat::push_back(const cv::Mat&)", "void cv::Mat::resize(size_t)", "void cv::Mat::reserve(size_t)", "void cv::Mat::pop_back(size_t)", "cv::Mat cv::Mat::diag(int) const", "cv::Mat::Mat(const cv::Mat&, const std::vector<cv::Range>&)", "cv::Mat::Mat(const cv::Mat&, const cv::Range*)", "cv::Mat::Mat(const cv::Mat&, const Rect&)", "cv::Mat::Mat(const cv::Mat&, const cv::Range&, const cv::Range&)", "void cv::setSize(cv::Mat&, int, const int*, const size_t*, bool)", "void cv::Mat::create(int, const int*, int)", "virtual void cv::StdMatAllocator::deallocate(cv::UMatData*) const", "virtual cv::UMatData* cv::StdMatAllocator::allocate(int, const int*, int, void*, size_t*, int, cv::UMatUsageFlags) const", "virtual void cv::MatAllocator::copy(cv::UMatData*, cv::UMatData*, int, const size_t*, const size_t*, const size_t*, const size_t*, const size_t*, bool) const", "virtual void cv::MatAllocator::upload(cv::UMatData*, const void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "virtual void cv::MatAllocator::download(cv::UMatData*, void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "N2cv12MatAllocatorE", "N2cv25DummyBufferPoolControllerE", "N2cv15StdMatAllocatorE", "void cvDCT(const CvArr*, CvArr*, int)", "void cvMulSpectrums(const CvArr*, const CvArr*, CvArr*, int)", "void cvDFT(const CvArr*, CvArr*, int, int)", "void cv::idct(cv::InputArray, cv::OutputArray, int)", "void cv::dct(cv::InputArray, cv::OutputArray, int)", "virtual void cv::OcvDctImpl::apply(const uchar*, size_t, uchar*, size_t)", "void cv::mulSpectrums(cv::InputArray, cv::InputArray, cv::OutputArray, int, bool)", "void cv::idft(cv::InputArray, cv::OutputArray, int, int)", "void cv::dft(cv::InputArray, cv::OutputArray, int, int)", "static cv::Ptr<cv::hal::DFT2D> cv::hal::DFT2D::create(int, int, int, int, int, int, int)", "void cv::RealDFT(const cv::OcvDftOptions&, const T*, T*) [with T = float]", "void cv::DFT(const cv::OcvDftOptions&, const cv::Complex<_Tp>*, cv::Complex<_Tp>*) [with T = float]", "void cv::CCSIDFT(const cv::OcvDftOptions&, const T*, T*) [with T = float]", "void cv::RealDFT(const cv::OcvDftOptions&, const T*, T*) [with T = double]", "void cv::DFT(const cv::OcvDftOptions&, const cv::Complex<_Tp>*, cv::Complex<_Tp>*) [with T = double]", "void cv::CCSIDFT(const cv::OcvDftOptions&, const T*, T*) [with T = double]", "void cv::OcvDftBasicImpl::init(int, int, int, int, bool*)", "virtual void cv::OcvDftImpl::apply(const uchar*, size_t, uchar*, size_t)", "0Y\r@:i\r", "PF SdF", " [@W:[", "N2cv3hal5DFT2DE", "N2cv3hal5DCT2DE", "N2cv10OcvDftImplE", "N2cv15OcvDftBasicImplE", "N2cv18DctIPPLoop_InvokerE", "N2cv10OcvDctImplE", "N2cv21Dft_C_IPPLoop_InvokerINS_16IPPDFT_C_FunctorEEE", "N2cv21Dft_R_IPPLoop_InvokerINS_16IPPDFT_R_FunctorEEE", "N2cv6detail12PtrOwnerImplINS_15OcvDftBasicImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDftImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDctImplENS_14DefaultDeleterIS2_EEEE", "void cv::utils::trace::details::traceArg(const cv::utils::trace::details::TraceArg&, int64)", "void cv::utils::trace::details::traceArg(const cv::utils::trace::details::TraceArg&, int)", "void cv::utils::trace::details::traceArg(const cv::utils::trace::details::TraceArg&, const char*)", "void cv::utils::trace::details::parallelForSetRootRegion(const cv::utils::trace::details::Region&, const cv::utils::trace::details::TraceManagerThreadLocal&)", "                                                               ", "T& cv::TLSData<T>::getRef() const [with T = cv::utils::trace::details::TraceManagerThreadLocal]", "N2cv5utils5trace7details12TraceStorageE", "N2cv7TLSDataINS_5utils5trace7details23TraceManagerThreadLocalEEE", "N2cv5utils5trace7details17AsyncTraceStorageE", "N2cv5utils5trace7details16SyncTraceStorageE", "N2cv6detail12PtrOwnerImplINS_5utils5trace7details17AsyncTraceStorageENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_5utils5trace7details16SyncTraceStorageENS_14DefaultDeleterIS5_EEEE", "cv::cuda::HostMem cv::cuda::HostMem::reshape(int, int) const", "void throw_no_cuda()", "int cv::hal::normHamming(const uchar*, const uchar*, int)", "int cv::hal::normHamming(const uchar*, int)", "void throw_no_cuda()", "void cv::hal::mul32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::mul16s(const short int*, size_t, const short int*, size_t, short int*, size_t, int, int, void*)", "void cv::hal::mul16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::mul8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp32f(const float*, size_t, const float*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp16s(const short int*, size_t, const short int*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp16u(const ushort*, size_t, const ushort*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::not8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::xor8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::or8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::and8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::absdiff32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::absdiff16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::absdiff8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::min64f(const double*, size_t, const double*, size_t, double*, size_t, int, int, void*)", "void cv::hal::min32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::min16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::min8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::max64f(const double*, size_t, const double*, size_t, double*, size_t, int, int, void*)", "void cv::hal::max32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::max16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::max8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::sub32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::sub16s(const short int*, size_t, const short int*, size_t, short int*, size_t, int, int, void*)", "void cv::hal::sub16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::sub8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::add32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::add16s(const short int*, size_t, const short int*, size_t, short int*, size_t, int, int, void*)", "void cv::hal::add16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::add8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cvMaxS(const void*, double, void*)", "void cvMinS(const void*, double, void*)", "void cvMax(const void*, const void*, void*)", "void cvMin(const void*, const void*, void*)", "void cvCmpS(const void*, double, void*, int)", "void cvCmp(const void*, const void*, void*, int)", "void cvInRangeS(const void*, CvScalar, CvScalar, void*)", "void cvInRange(const void*, const void*, const void*, void*)", "void cvAbsDiffS(const CvArr*, CvArr*, CvScalar)", "void cvAbsDiff(const CvArr*, const CvArr*, CvArr*)", "void cvAddWeighted(const CvArr*, double, const CvArr*, double, double, CvArr*)", "void cvDiv(const CvArr*, const CvArr*, CvArr*, double)", "void cvMul(const CvArr*, const CvArr*, CvArr*, double)", "void cvSubRS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvAddS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvSub(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvAdd(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvXorS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvOrS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvAndS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvXor(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvOr(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvAnd(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvNot(const CvArr*, CvArr*)", "void cv::inRange(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::compare(cv::InputArray, cv::InputArray, cv::OutputArray, int)", "void cv::addWeighted(cv::InputArray, double, cv::InputArray, double, double, cv::OutputArray, int)", "void cv::divide(double, cv::InputArray, cv::OutputArray, int)", "void cv::divide(cv::InputArray, cv::InputArray, cv::OutputArray, double, int)", "void cv::multiply(cv::InputArray, cv::InputArray, cv::OutputArray, double, int)", "void cv::absdiff(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::subtract(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray, int)", "void cv::arithm_op(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray, int, void (**)(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*), bool, void*, int)", "void cv::add(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray, int)", "void cv::min(const cv::UMat&, const cv::UMat&, cv::UMat&)", "void cv::max(const cv::UMat&, const cv::UMat&, cv::UMat&)", "void cv::min(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void cv::max(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void cv::min(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::max(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::bitwise_not(cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::bitwise_xor(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::bitwise_or(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::binary_op(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray, void (* const*)(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*), bool, int)", "void cv::bitwise_and(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::convertAndUnrollScalar(const cv::Mat&, int, uchar*, size_t)", "void cv::hal::opt_SSE2::log64f(const double*, double*, int)", "void cv::hal::opt_SSE2::log32f(const float*, float*, int)", "void cv::hal::opt_SSE2::exp64f(const double*, double*, int)", "void cv::hal::opt_SSE2::exp32f(const float*, float*, int)", "void cv::hal::opt_SSE2::sqrt64f(const double*, double*, int)", "void cv::hal::opt_SSE2::sqrt32f(const float*, float*, int)", "void cv::hal::opt_SSE2::invSqrt64f(const double*, double*, int)", "void cv::hal::opt_SSE2::invSqrt32f(const float*, float*, int)", "void cv::hal::opt_SSE2::magnitude64f(const double*, const double*, double*, int)", "void cv::hal::opt_SSE2::magnitude32f(const float*, const float*, float*, int)", "void cv::hal::opt_SSE2::fastAtan64f(const double*, const double*, double*, int, bool)", "void cv::hal::opt_SSE2::fastAtan32f(const float*, const float*, float*, int, bool)", "void cv::opt_FP16::cvtScaleHalf_SIMD32f16f(const float*, size_t, short int*, size_t, cv::Size)", "void cv::hal::opt_AVX::log64f(const double*, double*, int)", "void cv::hal::opt_AVX::log32f(const float*, float*, int)", "void cv::hal::opt_AVX::exp64f(const double*, double*, int)", "void cv::hal::opt_AVX::exp32f(const float*, float*, int)", "void cv::hal::opt_AVX::sqrt64f(const double*, double*, int)", "void cv::hal::opt_AVX::sqrt32f(const float*, float*, int)", "void cv::hal::opt_AVX::invSqrt64f(const double*, double*, int)", "void cv::hal::opt_AVX::invSqrt32f(const float*, float*, int)", "void cv::hal::opt_AVX::magnitude64f(const double*, const double*, double*, int)", "void cv::hal::opt_AVX::magnitude32f(const float*, const float*, float*, int)", "void cv::hal::opt_AVX::fastAtan64f(const double*, const double*, double*, int, bool)", "void cv::hal::opt_AVX::fastAtan32f(const float*, const float*, float*, int, bool)", "void cv::hal::opt_AVX2::log32f(const float*, float*, int)", "void cv::hal::opt_AVX2::exp64f(const double*, double*, int)", "void cv::hal::opt_AVX2::exp32f(const float*, float*, int)", "void cv::hal::opt_AVX2::sqrt64f(const double*, double*, int)", "void cv::hal::opt_AVX2::sqrt32f(const float*, float*, int)", "void cv::hal::opt_AVX2::invSqrt64f(const double*, double*, int)", "void cv::hal::opt_AVX2::invSqrt32f(const float*, float*, int)", "void cv::hal::opt_AVX2::magnitude64f(const double*, const double*, double*, int)", "void cv::hal::opt_AVX2::magnitude32f(const float*, const float*, float*, int)", "void cv::hal::opt_AVX2::fastAtan64f(const double*, const double*, double*, int, bool)", "void cv::hal::opt_AVX2::fastAtan32f(const float*, const float*, float*, int, bool)", "N7cvflann17flann_algorithm_tE", "N7cvflann20flann_centers_init_tE", "N7cvflann7anyimpl15base_any_policyE", "N7cvflann7anyimpl21typed_base_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl21typed_base_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl21typed_base_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl14big_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl21typed_base_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl14big_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl9empty_anyE", "N7cvflann7anyimpl21typed_base_any_policyIPKcEE", "N7cvflann7anyimpl16small_any_policyIPKcEE", "N7cvflann7anyimpl21typed_base_any_policyIiEE", "N7cvflann7anyimpl16small_any_policyIiEE", "N7cvflann7anyimpl21typed_base_any_policyIfEE", "N7cvflann7anyimpl16small_any_policyIfEE", "N7cvflann7anyimpl21typed_base_any_policyIbEE", "N7cvflann7anyimpl16small_any_policyIbEE", "N7cvflann7anyimpl21typed_base_any_policyIjEE", "N7cvflann7anyimpl16small_any_policyIjEE", "void cvflann::lsh::LshTable<ElementType>::initialize(size_t) [with ElementType = unsigned char; size_t = unsigned int]", "bool cv::flann::loadIndex_(cv::flann::Index*, void*&, const cv::Mat&, FILE*, const Distance&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >; FILE = __sFILE]", "bool cv::flann::loadIndex_(cv::flann::Index*, void*&, const cv::Mat&, FILE*, const Distance&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >; FILE = __sFILE]", "bool cv::flann::loadIndex_(cv::flann::Index*, void*&, const cv::Mat&, FILE*, const Distance&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>; FILE = __sFILE]", "virtual void cv::flann::Index::save(const cv::String&) const", "int cv::flann::runRadiusSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, double, const cv::flann::SearchParams&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >]", "int cv::flann::runRadiusSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, double, const cv::flann::SearchParams&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >]", "int cv::flann::runRadiusSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, double, const cv::flann::SearchParams&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>]", "virtual int cv::flann::Index::radiusSearch(cv::InputArray, cv::OutputArray, cv::OutputArray, double, int, const cv::flann::SearchParams&)", "void cv::flann::runKnnSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::flann::SearchParams&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >]", "void cv::flann::runKnnSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::flann::SearchParams&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >]", "void cv::flann::runKnnSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::flann::SearchParams&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>]", "virtual void cv::flann::Index::knnSearch(cv::InputArray, cv::OutputArray, cv::OutputArray, int, const cv::flann::SearchParams&)", "virtual void cv::flann::Index::release()", "void cv::flann::buildIndex_(void*&, const cv::Mat&, const cv::flann::IndexParams&, const Distance&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >]", "void cv::flann::buildIndex_(void*&, const cv::Mat&, const cv::flann::IndexParams&, const Distance&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >]", "virtual void cv::flann::Index::build(cv::InputArray, const cv::flann::IndexParams&, cvflann::flann_distance_t)", "N7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "N7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "N7cvflann18KNNSimpleResultSetIfEE", "N7cvflann11KMeansIndexINS_2L1IfEEE22KMeansDistanceComputerE", "N7cvflann11KMeansIndexINS_2L2IfEEE22KMeansDistanceComputerE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann12KNNResultSetIfEE", "N2cv5flann5IndexE", "N7cvflann14FLANNExceptionE", "N7cvflann7anyimpl12bad_any_castE", "N7cvflann7NNIndexINS_10HammingLUTEEE", "N7cvflann5IndexINS_10HammingLUTEEE", "N7cvflann7NNIndexINS_2L2IfEEEE", "N7cvflann5IndexINS_2L2IfEEEE", "N7cvflann7NNIndexINS_2L1IfEEEE", "N7cvflann5IndexINS_2L1IfEEEE", "N7cvflann7anyimpl21typed_base_any_policyIdEE", "N7cvflann7anyimpl14big_any_policyIdEE", "N7cvflann9ResultSetIiEE", "N7cvflann15UniqueResultSetIiEE", "N7cvflann18KNNUniqueResultSetIiEE", "N7cvflann9ResultSetIfEE", "N7cvflann15UniqueResultSetIfEE", "N7cvflann18KNNUniqueResultSetIfEE", "N7cvflann21RadiusUniqueResultSetIiEE", "N7cvflann21RadiusUniqueResultSetIfEE", "N7cvflann11LinearIndexINS_10HammingLUTEEE", "N7cvflann27HierarchicalClusteringIndexINS_10HammingLUTEEE", "N7cvflann8LshIndexINS_10HammingLUTEEE", "N7cvflann11LinearIndexINS_2L2IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L2IfEEEE", "N7cvflann11KDTreeIndexINS_2L2IfEEEE", "N7cvflann11KMeansIndexINS_2L2IfEEEE", "N7cvflann14CompositeIndexINS_2L2IfEEEE", "N7cvflann14AutotunedIndexINS_2L2IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L2IfEEEE", "N7cvflann8LshIndexINS_2L2IfEEEE", "N7cvflann11LinearIndexINS_2L1IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L1IfEEEE", "N7cvflann11KDTreeIndexINS_2L1IfEEEE", "N7cvflann11KMeansIndexINS_2L1IfEEEE", "N7cvflann14CompositeIndexINS_2L1IfEEEE", "N7cvflann14AutotunedIndexINS_2L1IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L1IfEEEE", "N7cvflann8LshIndexINS_2L1IfEEEE", "int cv::ResizeAreaFastVec_SIMD_8u::operator()(const uchar*, uchar*, int) const", "int cv::ResizeAreaFastVec<T, SIMDVecOp>::operator()(const T*, T*, int) const [with T = unsigned char; SIMDVecOp = cv::ResizeAreaFastVec_SIMD_8u]", "int cv::ResizeAreaFastVec_SIMD_16u::operator()(const ushort*, ushort*, int) const", "int cv::ResizeAreaFastVec<T, SIMDVecOp>::operator()(const T*, T*, int) const [with T = short unsigned int; SIMDVecOp = cv::ResizeAreaFastVec_SIMD_16u]", "int cv::ResizeAreaFastVec_SIMD_16s::operator()(const short int*, short int*, int) const", "int cv::ResizeAreaFastVec<T, SIMDVecOp>::operator()(const T*, T*, int) const [with T = short int; SIMDVecOp = cv::ResizeAreaFastVec_SIMD_16s]", "void cv::linearPolar(cv::InputArray, cv::OutputArray, cv::Point2f, double, int)", "void cvLinearPolar(const CvArr*, CvArr*, CvPoint2D32f, double, int)", "void cv::logPolar(cv::InputArray, cv::OutputArray, cv::Point2f, double, int)", "void cvLogPolar(const CvArr*, CvArr*, CvPoint2D32f, double, int)", "CvMat* cvGetAffineTransform(const CvPoint2D32f*, const CvPoint2D32f*, CvMat*)", "CvMat* cvGetPerspectiveTransform(const CvPoint2D32f*, const CvPoint2D32f*, CvMat*)", "CvMat* cv2DRotationMatrix(CvPoint2D32f, double, double, CvMat*)", "void cvRemap(const CvArr*, CvArr*, const CvArr*, const CvArr*, int, CvScalar)", "void cvWarpPerspective(const CvArr*, CvArr*, const CvMat*, int, CvScalar)", "void cvWarpAffine(const CvArr*, CvArr*, const CvMat*, int, CvScalar)", "void cvResize(const CvArr*, CvArr*, int)", "cv::Mat cv::getAffineTransform(cv::InputArray, cv::InputArray)", "cv::Mat cv::getPerspectiveTransform(cv::InputArray, cv::InputArray)", "void cv::invertAffineTransform(cv::InputArray, cv::OutputArray)", "cv::Mat cv::getPerspectiveTransform(const Point2f*, const Point2f*)", "cv::Mat cv::getRotationMatrix2D(cv::Point2f, double, double)", "void cv::warpPerspective(cv::InputArray, cv::OutputArray, cv::InputArray, cv::Size, int, int, const Scalar&)", "void cv::warpAffine(cv::InputArray, cv::OutputArray, cv::InputArray, cv::Size, int, int, const Scalar&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::convertMaps(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, int, bool)", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::FixedPtCast<int, unsigned char, 15>; VecOp = cv::RemapVec_8u; AT = short int; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<float, float>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<double, double>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::initInterTab1D(int, float*, int)", "const void* cv::initInterTab2D(int, bool)", "void cv::remap(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, int, int, const Scalar&)", "void cv::resize(cv::InputArray, cv::OutputArray, cv::Size, double, double, int)", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<unsigned char, int, short int>; VResize = cv::VResizeLanczos4<unsigned char, int, short int, cv::FixedPtCast<int, unsigned char, 22>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = short int; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<short unsigned int, float, float>; VResize = cv::VResizeLanczos4<short unsigned int, float, float, cv::Cast<float, short unsigned int>, cv::VResizeLanczos4Vec_32f16u>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<short int, float, float>; VResize = cv::VResizeLanczos4<short int, float, float, cv::Cast<float, short int>, cv::VResizeLanczos4Vec_32f16s>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<float, float, float>; VResize = cv::VResizeLanczos4<float, float, float, cv::Cast<float, float>, cv::VResizeLanczos4Vec_32f>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<double, double, float>; VResize = cv::VResizeLanczos4<double, double, float, cv::Cast<double, double>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<unsigned char, int, short int>; VResize = cv::VResizeCubic<unsigned char, int, short int, cv::FixedPtCast<int, unsigned char, 22>, cv::VResizeCubicVec_32s8u>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = short int; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<short unsigned int, float, float>; VResize = cv::VResizeCubic<short unsigned int, float, float, cv::Cast<float, short unsigned int>, cv::VResizeCubicVec_32f16<-32768> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<short int, float, float>; VResize = cv::VResizeCubic<short int, float, float, cv::Cast<float, short int>, cv::VResizeCubicVec_32f16<0> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<float, float, float>; VResize = cv::VResizeCubic<float, float, float, cv::Cast<float, float>, cv::VResizeCubicVec_32f>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<double, double, float>; VResize = cv::VResizeCubic<double, double, float, cv::Cast<double, double>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<unsigned char, int, short int, 2048, cv::HResizeNoVec>; VResize = cv::VResizeLinear<unsigned char, int, short int, cv::FixedPtCast<int, unsigned char, 22>, cv::VResizeLinearVec_32s8u>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = short int; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<short unsigned int, float, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<short unsigned int, float, float, cv::Cast<float, short unsigned int>, cv::VResizeLinearVec_32f16<-32768> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<short int, float, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<short int, float, float, cv::Cast<float, short int>, cv::VResizeLinearVec_32f16<0> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<float, float, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<float, float, float, cv::Cast<float, float>, cv::VResizeLinearVec_32f>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<double, double, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<double, double, float, cv::Cast<double, double>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "void cv::hal::resize(int, const uchar*, size_t, int, int, uchar*, size_t, int, int, double, double, int)", "N2cv15resizeNNInvokerE", "N2cv18ipp_resizeParallelE", "N2cv24ipp_resizeAffineParallelE", "N2cv12RemapInvokerE", "N2cv17WarpAffineInvokerE", "N2cv22WarpPerspectiveInvokerE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_22VResizeLinearVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_22VResizeLinearVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_22VResizeLinearVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_20VResizeLinearVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIhisEENS_12VResizeCubicIhisNS_11FixedPtCastIihLi22EEENS_21VResizeCubicVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicItffEENS_12VResizeCubicItffNS_4CastIftEENS_21VResizeCubicVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIsffEENS_12VResizeCubicIsffNS_4CastIfsEENS_21VResizeCubicVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIfffEENS_12VResizeCubicIfffNS_4CastIffEENS_19VResizeCubicVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIddfEENS_12VResizeCubicIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IhisEENS_15VResizeLanczos4IhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4ItffEENS_15VResizeLanczos4ItffNS_4CastIftEENS_25VResizeLanczos4Vec_32f16uEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IsffEENS_15VResizeLanczos4IsffNS_4CastIfsEENS_25VResizeLanczos4Vec_32f16sEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IfffEENS_15VResizeLanczos4IfffNS_4CastIffEENS_22VResizeLanczos4Vec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IddfEENS_15VResizeLanczos4IddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_25ResizeAreaFastVec_SIMD_8uEEEEE", "N2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_26ResizeAreaFastVec_SIMD_16uEEEEE", "N2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_26ResizeAreaFastVec_SIMD_16sEEEEE", "N2cv22resizeAreaFast_InvokerIffNS_26ResizeAreaFastVec_SIMD_32fEEE", "N2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEEE", "N2cv18ResizeArea_InvokerIhfEE", "N2cv18ResizeArea_InvokerItfEE", "N2cv18ResizeArea_InvokerIsfEE", "N2cv18ResizeArea_InvokerIffEE", "N2cv18ResizeArea_InvokerIddEE", "N2cv6detail12PtrOwnerImplI5CvMatNS_14DefaultDeleterIS2_EEEE", "void cvFitLine(const CvArr*, int, double, double, double, float*)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::fitLine3D(cv::Point3f*, int, int, float, float, float, float*)", "void cv::fitLine2D(const Point2f*, int, int, float, float, float, float*)", "void cv::fitLine(cv::InputArray, cv::OutputArray, int, double, double, double)", "int cvSampleLine(const void*, CvPoint, CvPoint, void*, int)", "void cvGetQuadrangleSubPix(const void*, void*, const CvMat*)", "void cvGetRectSubPix(const void*, void*, CvPoint2D32f)", "void cv::getRectSubPix(cv::InputArray, cv::Size, cv::Point2f, cv::OutputArray, int)", "bool GCGraph<TWeight>::inSourceSegment(int) [with TWeight = double]", "TWeight GCGraph<TWeight>::maxFlow() [with TWeight = double]", "void GCGraph<TWeight>::addEdges(int, int, TWeight, TWeight) [with TWeight = double]", "void GCGraph<TWeight>::addTermWeights(int, TWeight, TWeight) [with TWeight = double]", "void checkMask(const cv::Mat&, const cv::Mat&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void initGMMs(const cv::Mat&, const cv::Mat&, GMM&, GMM&)", "void cv::grabCut(cv::InputArray, cv::InputOutputArray, cv::Rect, cv::InputOutputArray, cv::InputOutputArray, int, int)", "void GMM::calcInverseCovAndDeterm(int)", "double GMM::operator()(int, cv::Vec3d) const", "GMM::GMM(cv::Mat&)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "float cv::intersectConvexConvex(cv::InputArray, cv::InputArray, cv::OutputArray, bool)", "double cv::pointPolygonTest(cv::InputArray, cv::Point2f, bool)", "void cvBoxPoints(CvBox2D, CvPoint2D32f*)", "void cvMatchTemplate(const CvArr*, const CvArr*, CvArr*, int)", "void cv::common_matchTemplate(cv::Mat&, cv::Mat&, cv::Mat&, int, int)", "void cv::matchTemplateMask(cv::InputArray, cv::InputArray, cv::OutputArray, int, cv::InputArray)", "void cv::matchTemplate(cv::InputArray, cv::InputArray, cv::OutputArray, int, cv::InputArray)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::crossCorr(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Size, int, cv::Point, double, int)", "cv::Mat cv::getGaborKernel(cv::Size, double, double, double, double, double, int)", "void cv::boxPoints(cv::RotatedRect, cv::OutputArray)", "void cv::rotatingCalipers(const Point2f*, int, int, float*)", "cv::RotatedRect cv::minAreaRect(cv::InputArray)", "int cv::RowVec_32f::ippiOperator(const uchar*, uchar*, int, int) const", "void cvFilter2D(const CvArr*, CvArr*, const CvMat*, CvPoint)", "void cv::sepFilter2D(cv::InputArray, cv::OutputArray, int, cv::InputArray, cv::InputArray, cv::Point, double, int)", "void cv::filter2D(cv::InputArray, cv::OutputArray, int, cv::InputArray, cv::Point, double, int)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "cv::Ptr<cv::FilterEngine> cv::createLinearFilter(int, int, cv::InputArray, cv::Point, double, int, int, const Scalar&)", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = double; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = float; CastOp = cv::Cast<float, float>; VecOp = cv::FilterVec_32f; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short int; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short int; CastOp = cv::Cast<float, float>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short int; CastOp = cv::Cast<float, short int>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short unsigned int; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short unsigned int; CastOp = cv::Cast<float, float>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short unsigned int; CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, float>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, short int>; VecOp = cv::FilterVec_8u16s; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, unsigned char>; VecOp = cv::FilterVec_8u; cv::Point = cv::Point_<int>]", "cv::Point cv::normalizeAnchor(cv::Point, cv::Size)", "cv::Ptr<cv::BaseFilter> cv::getLinearFilter(int, int, cv::InputArray, cv::Point, double, int)", "void cv::preprocess2DKernel(const cv::Mat&, std::vector<cv::Point_<int> >&, std::vector<unsigned char>&)", "cv::Ptr<cv::FilterEngine> cv::createSeparableLinearFilter(int, int, cv::InputArray, cv::InputArray, cv::Point, double, int, int, const Scalar&)", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, double>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnVec_32f]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnVec_32f]", "cv::SymmColumnVec_32f::SymmColumnVec_32f(const cv::Mat&, int, int, double)", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::SymmColumnVec_32f16s]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::SymmColumnVec_32f16s]", "cv::SymmColumnVec_32f16s::SymmColumnVec_32f16s(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnVec_32s8u::SymmColumnVec_32s8u(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnSmallVec_32f]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnSmallVec_32f]", "cv::SymmColumnSmallFilter<CastOp, VecOp>::SymmColumnSmallFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnSmallVec_32f]", "cv::SymmColumnSmallVec_32f::SymmColumnSmallVec_32f(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::SymmColumnSmallVec_32s16s]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::SymmColumnSmallVec_32s16s]", "cv::SymmColumnSmallFilter<CastOp, VecOp>::SymmColumnSmallFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::SymmColumnSmallVec_32s16s]", "cv::SymmColumnSmallVec_32s16s::SymmColumnSmallVec_32s16s(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::SymmColumnVec_32s8u]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::SymmColumnVec_32s8u]", "cv::SymmColumnSmallFilter<CastOp, VecOp>::SymmColumnSmallFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::SymmColumnVec_32s8u]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, double>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::Ptr<cv::BaseColumnFilter> cv::getLinearColumnFilter(int, int, cv::InputArray, int, int, double, int)", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = double; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = float; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = float; DT = float; VecOp = cv::RowVec_32f]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short int; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short int; DT = float; VecOp = cv::RowVec_16s32f]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short unsigned int; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short unsigned int; DT = float; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = float; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = int; VecOp = cv::RowVec_8u32s]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = float; DT = float; VecOp = cv::SymmRowSmallVec_32f]", "cv::SymmRowSmallFilter<ST, DT, VecOp>::SymmRowSmallFilter(const cv::Mat&, int, int, const VecOp&) [with ST = float; DT = float; VecOp = cv::SymmRowSmallVec_32f]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = int; VecOp = cv::SymmRowSmallVec_8u32s]", "cv::SymmRowSmallFilter<ST, DT, VecOp>::SymmRowSmallFilter(const cv::Mat&, int, int, const VecOp&) [with ST = unsigned char; DT = int; VecOp = cv::SymmRowSmallVec_8u32s]", "cv::Ptr<cv::BaseRowFilter> cv::getLinearRowFilter(int, int, cv::InputArray, int, int)", "int cv::getKernelType(cv::InputArray, cv::Point)", "virtual void cv::FilterEngine::apply(const cv::Mat&, cv::Mat&, const Size&, const Point&)", "virtual int cv::FilterEngine::proceed(const uchar*, int, int, uchar*, int)", "virtual int cv::FilterEngine::start(const Size&, const Size&, const Point&)", "void cv::FilterEngine::init(const cv::Ptr<cv::BaseFilter>&, const cv::Ptr<cv::BaseRowFilter>&, const cv::Ptr<cv::BaseColumnFilter>&, int, int, int, int, int, const Scalar&)", "N2cv13BaseRowFilterE", "N2cv16BaseColumnFilterE", "N2cv10BaseFilterE", "N2cv12FilterEngineE", "N2cv9RowFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv9RowFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv9RowFilterIhiNS_12RowVec_8u32sEEE", "N2cv9RowFilterIhfNS_8RowNoVecEEE", "N2cv9RowFilterIhdNS_8RowNoVecEEE", "N2cv9RowFilterItfNS_8RowNoVecEEE", "N2cv9RowFilterItdNS_8RowNoVecEEE", "N2cv9RowFilterIsfNS_13RowVec_16s32fEEE", "N2cv9RowFilterIsdNS_8RowNoVecEEE", "N2cv9RowFilterIffNS_10RowVec_32fEEE", "N2cv9RowFilterIfdNS_8RowNoVecEEE", "N2cv9RowFilterIddNS_8RowNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv12ColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv12ColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv6detail12PtrOwnerImplINS_12FilterEngineENS_14DefaultDeleterIS2_EEEE", "N2cv8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEE", "N2cv8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEE", "N2cv8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEE", "N2cv8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhiNS_12RowVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsfNS_13RowVec_16s32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIffNS_10RowVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIfdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIddNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "void cvIntegral(const CvArr*, CvArr*, CvArr*, CvArr*)", "void cv::integral(cv::InputArray, cv::OutputArray, cv::OutputArray, int, int)", "void cv::integral(cv::InputArray, cv::OutputArray, int)", "void cv::integral(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, int)", "void cv::hal::integral(int, int, int, const uchar*, size_t, uchar*, size_t, uchar*, size_t, uchar*, size_t, int, int, int)", "void cvGoodFeaturesToTrack(const void*, void*, void*, CvPoint2D32f*, int*, double, double, const void*, int, int, double)", "void cv::goodFeaturesToTrack(cv::InputArray, cv::OutputArray, int, double, double, cv::InputArray, int, bool, double)", "void cvAdaptiveThreshold(const void*, void*, double, int, int, int, double)", "double cvThreshold(const void*, void*, double, double, int)", "void cv::adaptiveThreshold(cv::InputArray, cv::OutputArray, double, int, int, int, double)", "double cv::threshold(cv::InputArray, cv::OutputArray, double, double, int)", "void cv::thresh_64f(const cv::Mat&, cv::Mat&, double, double, int)", "void cv::thresh_32f(const cv::Mat&, cv::Mat&, float, float, int)", "void cv::thresh_16s(const cv::Mat&, cv::Mat&, short int, short int, int)", "void cv::thresh_8u(const cv::Mat&, cv::Mat&, uchar, uchar, int)", "N2cv15ThresholdRunnerE", "CvRect cvBoundingRect(CvArr*, int)", "double cvArcLength(const void*, CvSlice, int)", "void icvMemCopy(double**, double**, double**, int*)", "double icvContourSecArea(CvSeq*, CvSlice)", "double cvContourArea(const void*, CvSlice, int)", "cv::Rect cv::pointSetBoundingRect(const cv::Mat&)", "cv::Rect cv::maskBoundingRect(const cv::Mat&)", "cv::Rect cv::boundingRect(cv::InputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::RotatedRect cv::fitEllipse(cv::InputArray)", "double cv::contourArea(cv::InputArray, bool)", "double cv::arcLength(cv::InputArray, bool)", "void cv::minEnclosingCircle(cv::InputArray, cv::Point2f&, float&)", "void cvLaplace(const void*, void*, int)", "void cvSobel(const void*, void*, int, int, int)", "void cv::Laplacian(cv::InputArray, cv::OutputArray, int, int, double, double, int)", "void cv::Scharr(cv::InputArray, cv::OutputArray, int, int, int, double, double, int)", "void cv::Sobel(cv::InputArray, cv::OutputArray, int, int, int, int, double, double, int)", "void cv::getSobelKernels(cv::OutputArray, cv::OutputArray, int, int, int, bool, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::getScharrKernels(cv::OutputArray, cv::OutputArray, int, int, bool, int)", "void cvCanny(const CvArr*, CvArr*, double, double, int)", "void cv::Canny(cv::InputArray, cv::InputArray, cv::OutputArray, double, double, bool)", "void cv::Canny(cv::InputArray, cv::OutputArray, double, double, int, bool)", "virtual void cv::parallelCanny::operator()(const cv::Range&) const", "N2cv13parallelCannyE", "N2cv9finalPassE", "void* icvReadHist(CvFileStorage*, CvFileNode*)", "void cv::equalizeHist(cv::InputArray, cv::OutputArray)", "void cvCalcProbDensity(const CvHistogram*, const CvHistogram*, CvHistogram*, double)", "void cvCalcBayesianProb(CvHistogram**, int, CvHistogram**)", "void cvCalcArrBackProjectPatch(CvArr**, CvArr*, CvSize, CvHistogram*, int, double)", "void cvCalcArrBackProject(CvArr**, CvArr*, const CvHistogram*)", "void cvCalcArrHist(CvArr**, CvHistogram*, int, const CvArr*)", "void cvSetHistBinRanges(CvHistogram*, float**, int)", "void cvCopyHist(const CvHistogram*, CvHistogram**)", "double cvCompareHist(const CvHistogram*, const CvHistogram*, int)", "void cvGetMinMaxHistValue(const CvHistogram*, float*, float*, int*, int*)", "void cvNormalizeHist(CvHistogram*, double)", "void cvThreshHist(CvHistogram*, double)", "void cvClearHist(CvHistogram*)", "void cvReleaseHist(CvHistogram**)", "CvHistogram* cvMakeHistHeaderForArray(int, int*, CvHistogram*, float*, float**, int)", "CvHistogram* cvCreateHist(int, int*, CvHistType, float**, int)", "double cv::compareHist(const cv::SparseMat&, const cv::SparseMat&, int)", "double cv::compareHist(cv::InputArray, cv::InputArray, int)", "void cv::calcBackProject(cv::InputArrayOfArrays, const std::vector<int>&, cv::InputArray, cv::OutputArray, const std::vector<float>&, double)", "void cv::calcSparseBackProj_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, const cv::SparseMat&, int, const float**, const double*, float, bool) [with T = float; BT = float; cv::Size = cv::Size_<int>]", "void cv::calcSparseBackProj_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, const cv::SparseMat&, int, const float**, const double*, float, bool) [with T = short unsigned int; BT = short unsigned int; cv::Size = cv::Size_<int>]", "void cv::calcBackProject(const cv::Mat*, int, const int*, const cv::SparseMat&, cv::OutputArray, const float**, double, bool)", "void cv::calcBackProj_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, const cv::Mat&, int, const float**, const double*, float, bool) [with T = float; BT = float; cv::Size = cv::Size_<int>]", "void cv::calcBackProj_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, const cv::Mat&, int, const float**, const double*, float, bool) [with T = short unsigned int; BT = short unsigned int; cv::Size = cv::Size_<int>]", "void cv::calcBackProject(const cv::Mat*, int, const int*, cv::InputArray, cv::OutputArray, const float**, double, bool)", "void cv::calcHist(cv::InputArrayOfArrays, const std::vector<int>&, cv::InputArray, cv::OutputArray, const std::vector<int>&, const std::vector<float>&, bool)", "void cv::calcSparseHist_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, cv::SparseMat&, int, const float**, const double*, bool) [with T = float; cv::Size = cv::Size_<int>]", "void cv::calcSparseHist_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, cv::SparseMat&, int, const float**, const double*, bool) [with T = short unsigned int; cv::Size = cv::Size_<int>]", "void cv::calcHist(const cv::Mat*, int, const int*, const cv::Mat&, cv::SparseMat&, int, const int*, const float**, bool, bool, bool)", "void cv::calcHist(const cv::Mat*, int, const int*, cv::InputArray, cv::SparseMat&, int, const int*, const float**, bool, bool)", "void cv::calcHist_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, cv::Mat&, int, const float**, const double*, bool) [with T = float; cv::Size = cv::Size_<int>]", "void cv::calcHist_(std::vector<unsigned char*>&, const std::vector<int>&, cv::Size, cv::Mat&, int, const float**, const double*, bool) [with T = short unsigned int; cv::Size = cv::Size_<int>]", "void cv::calcHistLookupTables_8u(const cv::Mat&, const cv::SparseMat&, int, const float**, const double*, bool, bool, std::vector<unsigned int>&)", "void cv::histPrepareImages(const cv::Mat*, int, const int*, const cv::Mat&, int, const int*, const float**, bool, std::vector<unsigned char*>&, std::vector<int>&, cv::Size&, std::vector<double, std::allocator<double> >&)", "void cv::calcHist(const cv::Mat*, int, const int*, cv::InputArray, cv::OutputArray, int, const int*, const float**, bool, bool)", "N2cv7TLSDataINS_23ipp_calcHistParallelTLSEEE", "N2cv20ipp_calcHistParallelE", "28EqualizeHistCalcHist_Invoker", "23EqualizeHistLut_Invoker", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist2D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist3D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist1D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerIfEEKNS_16auto_partitionerEEE", "void cv::blendLinear(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "N2cv18BlendLinearInvokerIhEE", "N2cv18BlendLinearInvokerIfEE", "cv::Point2f cv::mapPointSpherical(const Point2f&, float, cv::Vec4d*, int)", "float cv::initWideAngleProjMap(cv::InputArray, cv::InputArray, cv::Size, int, int, cv::OutputArray, cv::OutputArray, int, double)", "void cv::undistortPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cvUndistortPoints(const CvMat*, CvMat*, const CvMat*, const CvMat*, const CvMat*, const CvMat*)", "void cvInitUndistortRectifyMap(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvArr*, CvArr*)", "void cvInitUndistortMap(const CvMat*, const CvMat*, CvArr*, CvArr*)", "void cvUndistort2(const CvArr*, CvArr*, const CvMat*, const CvMat*, const CvMat*)", "void cv::undistort(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::initUndistortRectifyMap(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::Size, int, cv::OutputArray, cv::OutputArray)", "void cv::createHanningWindow(cv::OutputArray, cv::Size, int)", "cv::Point2d cv::weightedCentroid(cv::InputArray, cv::Point, cv::Size, double*)", "void cv::divSpectrums(cv::InputArray, cv::InputArray, cv::OutputArray, int, bool)", "void cv::magSpectrums(cv::InputArray, cv::OutputArray)", "cv::Point2d cv::phaseCorrelate(cv::InputArray, cv::InputArray, cv::InputArray, double*)", "void cvCopyMakeBorder(const CvArr*, CvArr*, CvPoint, int, CvScalar)", "CvSeq* cvPointSeqFromMat(int, const CvArr*, CvContour*, CvSeqBlock*)", "void cv::demosaicing(cv::InputArray, cv::OutputArray, int, int)", "N2cv17Bayer2RGB_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "void cv::applyColorMap(cv::InputArray, cv::OutputArray, int)", "void cv::sortMatrixRowsByIndices(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat cv::argsort(cv::InputArray, bool)", "cv::Mat cv::interp1(cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::colormap::ColorMap::operator()(cv::InputArray, cv::OutputArray) const", "virtual void cv::colormap::UserColorMap::init(int)", "N2cv8colormap8ColorMapE", "N2cv8colormap6AutumnE", "N2cv8colormap4BoneE", "N2cv8colormap3JetE", "N2cv8colormap6WinterE", "N2cv8colormap7RainbowE", "N2cv8colormap5OceanE", "N2cv8colormap6SummerE", "N2cv8colormap6SpringE", "N2cv8colormap4CoolE", "N2cv8colormap3HSVE", "N2cv8colormap4PinkE", "N2cv8colormap3HotE", "N2cv8colormap6ParulaE", "N2cv8colormap12UserColorMapE", "CvMat** cvCreatePyramid(const CvArr*, int, double, const CvSize*, CvArr*, int, int)", "void cvReleasePyramid(CvMat***, int)", "void cvPyrUp(const void*, void*, int)", "void cvPyrDown(const void*, void*, int)", "void cv::buildPyramid(cv::InputArray, cv::OutputArrayOfArrays, int, int)", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<unsigned char, 6>; VecOp = cv::PyrUpVec_32s8u]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short int, 6>; VecOp = cv::PyrUpVec_32s16s]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short unsigned int, 6>; VecOp = cv::PyrUpNoVec<int, short unsigned int>]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<float, 6>; VecOp = cv::PyrUpVec_32f]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<double, 6>; VecOp = cv::PyrUpNoVec<double, double>]", "void cv::pyrUp(cv::InputArray, cv::OutputArray, const Size&, int)", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<unsigned char, 8>; VecOp = cv::PyrDownVec_32s8u]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short int, 8>; VecOp = cv::PyrDownVec_32s16s]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short unsigned int, 8>; VecOp = cv::PyrDownNoVec<int, short unsigned int>]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<float, 8>; VecOp = cv::PyrDownVec_32f]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<double, 8>; VecOp = cv::PyrDownNoVec<double, double>]", "void cv::pyrDown(cv::InputArray, cv::OutputArray, const Size&, int)", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2RGB<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2RGB<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2RGB<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2RGB5x5]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB5x52RGB]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Gray<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Gray<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Gray<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Gray2RGB<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Gray2RGB<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Gray2RGB<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB5x52Gray]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Gray2RGB5x5]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2YCrCb_i<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2YCrCb_i<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2YCrCb_f<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::YCrCb2RGB_i<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::YCrCb2RGB_i<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::YCrCb2RGB_f<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2XYZ_i<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2XYZ_i<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2XYZ_f<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::XYZ2RGB_i<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::XYZ2RGB_i<short unsigned int>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::XYZ2RGB_f<float>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2HSV_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2HSV_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2HLS_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2HLS_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::HSV2RGB_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::HSV2RGB_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::HLS2RGB_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::HLS2RGB_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Lab_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Lab_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Luv_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGB2Luv_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Lab2RGB_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Lab2RGB_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Luv2RGB_b]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::Luv2RGB_f]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::RGBA2mRGBA<unsigned char>]", "void cv::CvtColorLoop_Invoker<Cvt>::operator()(const cv::Range&) const [with Cvt = cv::mRGBA2RGBA<unsigned char>]", "void cvCvtColor(const CvArr*, CvArr*, int)", "void cv::cvtColor(cv::InputArray, cv::OutputArray, int, int)", "void cv::hal::cvtMultipliedRGBAtoRGBA(const uchar*, size_t, uchar*, size_t, int, int)", "void cv::hal::cvtRGBAtoMultipliedRGBA(const uchar*, size_t, uchar*, size_t, int, int)", "void cv::hal::cvtOnePlaneYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int, int)", "void cv::hal::cvtBGRtoThreePlaneYUV(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "void cv::hal::cvtThreePlaneYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "void cv::hal::cvtTwoPlaneYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "void cv::hal::cvtLabtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool, bool, bool)", "cv::RGB2Luv_f::RGB2Luv_f(int, int, const float*, const float*, bool)", "cv::RGB2Lab_f::RGB2Lab_f(int, int, const float*, const float*, bool)", "cv::RGB2Lab_b::RGB2Lab_b(int, int, const float*, const float*, bool)", "void cv::hal::cvtBGRtoLab(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool, bool, bool)", "void cv::hal::cvtHSVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool, bool, bool)", "cv::RGB2HSV_b::RGB2HSV_b(int, int, int)", "void cv::hal::cvtBGRtoHSV(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool, bool, bool)", "void cv::hal::cvtXYZtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool)", "void cv::hal::cvtBGRtoXYZ(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool)", "void cv::hal::cvtYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool, bool)", "void cv::hal::cvtBGRtoYUV(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool, bool)", "void cv::hal::cvtGraytoBGR5x5(const uchar*, size_t, uchar*, size_t, int, int, int)", "void cv::hal::cvtBGR5x5toGray(const uchar*, size_t, uchar*, size_t, int, int, int)", "void cv::hal::cvtGraytoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, int)", "void cv::hal::cvtBGRtoGray(const uchar*, size_t, uchar*, size_t, int, int, int, int, bool)", "void cv::hal::cvtBGR5x5toBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "void cv::hal::cvtBGRtoBGR5x5(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "void cv::hal::cvtBGRtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, int, int, bool)", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPReorderFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_10RGB2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_10RGB5x52RGBEEE", "N2cv23CvtColorIPPLoop_InvokerINS_20IPPColor2GrayFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayItEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_18IPPGray2BGRFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_19IPPGray2BGRAFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB5x52GrayEEE", "N2cv20CvtColorLoop_InvokerINS_11Gray2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_fIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPReorderGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_fEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPGeneralReorderFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_fEEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi1EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi1EEE", "N2cv21YUV420p2RGB888InvokerILi0EEE", "N2cv21YUV420p2RGB888InvokerILi2EEE", "N2cv23YUV420p2RGBA8888InvokerILi0EEE", "N2cv23YUV420p2RGBA8888InvokerILi2EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi2EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi2EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi0ELi1ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi2ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi1ELi0EEE", "N2cv20CvtColorLoop_InvokerINS_10RGBA2mRGBAIhEEEE", "N2cv20CvtColorLoop_InvokerINS_10mRGBA2RGBAIhEEEE", "double cv::matchShapes(cv::InputArray, cv::InputArray, int, double)", "int cv::floodFill(cv::InputOutputArray, cv::Point, cv::Scalar, cv::Rect*, cv::Scalar, cv::Scalar, int)", "int cv::floodFill(cv::InputOutputArray, cv::InputOutputArray, cv::Point, cv::Scalar, cv::Rect*, cv::Scalar, cv::Scalar, int)", "virtual void {anonymous}::CLAHE_Impl::apply(cv::InputArray, cv::OutputArray)", "*N12_GLOBAL__N_110CLAHE_ImplE", "*N12_GLOBAL__N_118CLAHE_CalcLut_BodyIhLi256ELi0EEE", "*N12_GLOBAL__N_118CLAHE_CalcLut_BodyItLi65536ELi0EEE", "*N12_GLOBAL__N_124CLAHE_Interpolation_BodyIhLi0EEE", "*N12_GLOBAL__N_124CLAHE_Interpolation_BodyItLi0EEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_118CLAHE_CalcLut_BodyIhLi256ELi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_118CLAHE_CalcLut_BodyItLi65536ELi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_124CLAHE_Interpolation_BodyIhLi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_124CLAHE_Interpolation_BodyItLi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_110CLAHE_ImplENS_14DefaultDeleterIS3_EEEE", "N2cv5CLAHEE", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = unsigned char; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = short unsigned int; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = short int; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = float; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = int; T = double; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = double; uchar = unsigned char]", "void cvSmooth(const void*, void*, int, int, int, double, double)", "void cv::bilateralFilter_32f(const cv::Mat&, cv::Mat&, int, double, double, int)", "void cv::bilateralFilter_8u(const cv::Mat&, cv::Mat&, int, double, double, int)", "void cv::bilateralFilter(cv::InputArray, cv::OutputArray, int, double, double, int)", "virtual void cv::BilateralFilter_32f_Invoker::operator()(const cv::Range&) const", "void cv::medianBlur_8u_O1(const cv::Mat&, cv::Mat&, int)", "void cv::medianBlur_8u_Om(const cv::Mat&, cv::Mat&, int)", "void cv::medianBlur(cv::InputArray, cv::OutputArray, int)", "void cv::GaussianBlur(cv::InputArray, cv::OutputArray, cv::Size, double, double, int)", "void cv::createGaussianKernels(cv::Mat&, cv::Mat&, int, cv::Size, double, double)", "cv::Mat cv::getGaussianKernel(int, double, int)", "cv::Ptr<cv::BaseRowFilter> cv::getSqrRowSumFilter(int, int, int, int)", "void cv::sqrBoxFilter(cv::InputArray, cv::OutputArray, int, cv::Size, cv::Point, bool, int)", "void cv::blur(cv::InputArray, cv::OutputArray, cv::Size, cv::Point, int)", "void cv::boxFilter(cv::InputArray, cv::OutputArray, int, cv::Size, cv::Point, bool, int)", "cv::Ptr<cv::BaseColumnFilter> cv::getColumnSumFilter(int, int, int, int, double)", "cv::Ptr<cv::BaseRowFilter> cv::getRowSumFilter(int, int, int, int)", "virtual void cv::ColumnSum<int, float>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<int, int>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<int, short unsigned int>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<int, short int>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<short unsigned int, unsigned char>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<int, unsigned char>::operator()(const uchar**, uchar*, int, int, int)", "N2cv9ColumnSumIihEE", "N2cv9ColumnSumIthEE", "N2cv9ColumnSumIisEE", "N2cv9ColumnSumIitEE", "N2cv9ColumnSumIiiEE", "N2cv9ColumnSumIifEE", "N2cv26BilateralFilter_8u_InvokerE", "N2cv27BilateralFilter_32f_InvokerE", "N2cv27ipp_bilateralFilterParallelE", "N2cv6RowSumIhiEE", "N2cv6RowSumIhtEE", "N2cv6RowSumIhdEE", "N2cv6RowSumItiEE", "N2cv6RowSumItdEE", "N2cv6RowSumIsiEE", "N2cv6RowSumIiiEE", "N2cv6RowSumIsdEE", "N2cv6RowSumIfdEE", "N2cv6RowSumIddEE", "N2cv9ColumnSumIdhEE", "N2cv9ColumnSumIdtEE", "N2cv9ColumnSumIdsEE", "N2cv9ColumnSumIdfEE", "N2cv9ColumnSumIidEE", "N2cv9ColumnSumIddEE", "N2cv9SqrRowSumIhiEE", "N2cv9SqrRowSumIhdEE", "N2cv9SqrRowSumItdEE", "N2cv9SqrRowSumIsdEE", "N2cv9SqrRowSumIfdEE", "N2cv9SqrRowSumIddEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIihEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIthEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdhEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIitEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIisEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdsEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIifEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdfEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIidEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIddEENS_14DefaultDeleterIS3_EEEE", "void cvGetTextSize(const char*, const CvFont*, CvSize*, int*)", "void cvInitFont(CvFont*, int, double, double, double, int, int)", "void cvPutText(CvArr*, const char*, CvPoint, const CvFont*, CvScalar)", "int cvInitLineIterator(const CvArr*, CvPoint, CvPoint, CvLineIterator*, int, int)", "int cvClipLine(CvSize, CvPoint*, CvPoint*)", "void cvDrawContours(void*, CvSeq*, CvScalar, CvScalar, int, int, int, CvPoint)", "void cv::drawContours(cv::InputOutputArray, cv::InputArrayOfArrays, int, const Scalar&, int, int, cv::InputArray, int, cv::Point)", "void cv::polylines(cv::InputOutputArray, cv::InputArrayOfArrays, bool, const Scalar&, int, int, int)", "void cv::fillPoly(cv::InputOutputArray, cv::InputArrayOfArrays, const Scalar&, int, int, cv::Point)", "void cv::fillConvexPoly(cv::InputOutputArray, cv::InputArray, const Scalar&, int, int)", "const int* cv::getFontData(int)", "void cv::putText(cv::InputOutputArray, const cv::String&, cv::Point, int, double, cv::Scalar, int, int, bool)", "void cv::polylines(cv::Mat&, const Point* const*, const int*, int, bool, const Scalar&, int, int, int)", "void cv::fillPoly(cv::Mat&, const Point**, const int*, int, const Scalar&, int, int, cv::Point)", "void cv::fillConvexPoly(cv::Mat&, const Point*, int, const Scalar&, int, int)", "void cv::ellipse(cv::InputOutputArray, const cv::RotatedRect&, const Scalar&, int, int)", "void cv::ellipse(cv::InputOutputArray, cv::Point, cv::Size, double, double, double, const Scalar&, int, int, int)", "void cv::circle(cv::InputOutputArray, cv::Point, int, const Scalar&, int, int, int)", "void cv::rectangle(cv::Mat&, cv::Rect, const Scalar&, int, int, int)", "void cv::rectangle(cv::InputOutputArray, cv::Point, cv::Point, const Scalar&, int, int, int)", "void cv::arrowedLine(cv::InputOutputArray, cv::Point, cv::Point, const Scalar&, int, int, int, double)", "void cv::PolyLine(cv::Mat&, const Point2l*, int, bool, const void*, int, int, int)", "void cv::line(cv::InputOutputArray, cv::Point, cv::Point, const Scalar&, int, int, int)", "void cv::ellipse2Poly(cv::Point2d, cv::Size2d, int, int, int, int, std::vector<cv::Point_<double> >&)", "cv::LineIterator::LineIterator(const cv::Mat&, cv::Point, cv::Point, int, bool)", "bool cv::clipLine(cv::Rect, cv::Point&, cv::Point&)", "bool cv::clipLine(cv::Size2l, cv::Point2l&, cv::Point2l&)", "CvSeq* cvApproxPoly(const void*, int, CvMemStorage*, int, double, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::approxPolyDP(cv::InputArray, cv::OutputArray, double, bool)", "CvSeq* cvApproxChains(CvSeq*, CvMemStorage*, int, double, int, int)", "CvSeq* icvApproximateChainTC89(CvChain*, int, CvMemStorage*, int)", "void {anonymous}::GeneralizedHoughGuilImpl::calcPosition(double, int, double, int)", "void {anonymous}::GeneralizedHoughGuilImpl::calcScale(double)", "void {anonymous}::GeneralizedHoughGuilImpl::calcOrientation()", "void {anonymous}::GeneralizedHoughGuilImpl::getContourPoints(const cv::Mat&, const cv::Mat&, const cv::Mat&, std::vector<{anonymous}::GeneralizedHoughGuilImpl::ContourPoint>&)", "void {anonymous}::GeneralizedHoughGuilImpl::buildFeatureList(const cv::Mat&, const cv::Mat&, const cv::Mat&, std::vector<std::vector<{anonymous}::GeneralizedHoughGuilImpl::Feature> >&, cv::Point2d)", "void {anonymous}::GeneralizedHoughBase::setTemplateImpl(cv::InputArray, cv::InputArray, cv::InputArray, cv::Point)", "void {anonymous}::GeneralizedHoughBase::calcEdges(cv::InputArray, cv::Mat&, cv::Mat&, cv::Mat&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void {anonymous}::GeneralizedHoughBase::convertTo(cv::OutputArray, cv::OutputArray)", "void {anonymous}::GeneralizedHoughBase::filterMinDist()", "void {anonymous}::GeneralizedHoughBase::detectImpl(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "virtual void {anonymous}::GeneralizedHoughBallardImpl::processTempl()", "void {anonymous}::GeneralizedHoughBallardImpl::findPosInHist()", "void {anonymous}::GeneralizedHoughBallardImpl::calcHist()", "*N12_GLOBAL__N_120GeneralizedHoughBaseE", "*N12_GLOBAL__N_127GeneralizedHoughBallardImplE", "*N12_GLOBAL__N_124GeneralizedHoughGuilImplE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_127GeneralizedHoughBallardImplENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_124GeneralizedHoughGuilImplENS_14DefaultDeleterIS3_EEEE", "N2cv16GeneralizedHoughE", "N2cv23GeneralizedHoughBallardE", "N2cv20GeneralizedHoughGuilE", "void minEnclosingTriangle::updateSideB(const std::vector<cv::Point_<float> >&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&, cv::Point2f&, cv::Point2f&)", "cv::Point2f minEnclosingTriangle::findVertexCOnSideB(const std::vector<cv::Point_<float> >&, unsigned int, unsigned int, unsigned int, const Point2f&, const Point2f&, const Point2f&, const Point2f&)", "void minEnclosingTriangle::lineEquationDeterminedByPoints(const Point2f&, const Point2f&, double&, double&, double&)", "void minEnclosingTriangle::createConvexHull(cv::InputArray, std::vector<cv::Point_<float> >&)", "int cv::rotatedRectangleIntersection(const cv::RotatedRect&, const cv::RotatedRect&, cv::OutputArray)", "void cv::accumulateWeighted(cv::InputArray, cv::InputOutputArray, double, cv::InputArray)", "void cv::accumulateProduct(cv::InputArray, cv::InputArray, cv::InputOutputArray, cv::InputArray)", "void cv::accumulateSquare(cv::InputArray, cv::InputOutputArray, cv::InputArray)", "void cv::accumulate(cv::InputArray, cv::InputOutputArray, cv::InputArray)", "int cvCheckContourConvexity(const CvArr*)", "CvSeq* cvConvexityDefects(const CvArr*, const CvArr*, CvMemStorage*)", "bool isStorageOrMat(void*)", "CvSeq* cvConvexHull2(const CvArr*, void*, int, int)", "bool cv::isContourConvex(cv::InputArray)", "void cv::convexityDefects(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::convexHull(cv::InputArray, cv::OutputArray, bool, bool)", "LabelT cv::connectedcomponents::LabelingGranaParallel<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingWuParallel<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "int cv::connectedComponents_sub1(const cv::Mat&, cv::Mat&, int, int, StatsOp&) [with StatsOp = cv::connectedcomponents::CCStatsOp]", "int cv::connectedComponentsWithStats(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, int, int)", "LabelT cv::connectedcomponents::LabelingGranaParallel<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingWuParallel<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "int cv::connectedComponents_sub1(const cv::Mat&, cv::Mat&, int, int, StatsOp&) [with StatsOp = cv::connectedcomponents::NoOp]", "int cv::connectedComponents(cv::InputArray, cv::OutputArray, int, int, int)", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_4NoOpEE22FirstScan8ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_4NoOpEE22FirstScan4ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_4NoOpEE10SecondScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_4NoOpEE9FirstScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_4NoOpEE10SecondScanE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_9CCStatsOpEE22FirstScan8ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_9CCStatsOpEE22FirstScan4ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_9CCStatsOpEE10SecondScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_9CCStatsOpEE9FirstScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_9CCStatsOpEE10SecondScanE", "float cv::EMD(cv::InputArray, cv::InputArray, int, cv::InputArray, float*, cv::OutputArray)", "bool icvNewSolution(CvEMDState*)", "int icvInitEMD(const float*, int, const float*, int, int, CvDistanceFunction, void*, const float*, int, CvEMDState*, float*, cv::AutoBuffer<char>&)", "float cvCalcEMD2(const CvArr*, const CvArr*, int, CvDistanceFunction, const CvArr*, CvArr*, float*, void*)", "void cvGetHuMoments(CvMoments*, CvHuMoments*)", "double cvGetCentralMoment(CvMoments*, int, int)", "double cvGetSpatialMoment(CvMoments*, int, int)", "void cvMoments(const CvArr*, CvMoments*, int)", "void cv::HuMoments(const cv::Moments&, cv::OutputArray)", "void cv::HuMoments(const cv::Moments&, double*)", "cv::Moments cv::contourMoments(const cv::Mat&)", "cv::Moments cv::moments(cv::InputArray, bool)", "void cv::cornerSubPix(cv::InputArray, cv::InputOutputArray, cv::Size, cv::Size, cv::TermCriteria)", "virtual int cv::LineSegmentDetectorImpl::compareSegments(const Size&, cv::InputArray, cv::InputArray, cv::InputOutputArray)", "virtual void cv::LineSegmentDetectorImpl::drawSegments(cv::InputOutputArray, cv::InputArray)", "double cv::LineSegmentDetectorImpl::rect_nfa(const cv::LineSegmentDetectorImpl::rect&) const", "double cv::LineSegmentDetectorImpl::get_theta(const std::vector<cv::LineSegmentDetectorImpl::RegionPoint>&, const double&, const double&, const double&, const double&) const", "void cv::LineSegmentDetectorImpl::region2rect(const std::vector<cv::LineSegmentDetectorImpl::RegionPoint>&, double, double, double, cv::LineSegmentDetectorImpl::rect&) const", "virtual void cv::LineSegmentDetectorImpl::detect(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "cv::LineSegmentDetectorImpl::LineSegmentDetectorImpl(int, double, double, double, double, double, double, int)", "N2cv19LineSegmentDetectorE", "N2cv23LineSegmentDetectorImplE", "N2cv6detail12PtrOwnerImplINS_23LineSegmentDetectorImplENS_14DefaultDeleterIS2_EEEE", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::pyrMeanShiftFiltering(cv::InputArray, cv::OutputArray, double, double, int, cv::TermCriteria)", "void cv::watershed(cv::InputArray, cv::InputOutputArray)", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin8u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin16u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin16s; uchar = unsigned char]", "int cv::MorphColumnFVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin32f; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax8u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax16u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax16s; uchar = unsigned char]", "int cv::MorphColumnFVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax32f; uchar = unsigned char]", "void cvMorphologyEx(const void*, void*, void*, IplConvKernel*, int, int)", "void cvDilate(const CvArr*, CvArr*, IplConvKernel*, int)", "void cvErode(const CvArr*, CvArr*, IplConvKernel*, int)", "void cvReleaseStructuringElement(IplConvKernel**)", "IplConvKernel* cvCreateStructuringElementEx(int, int, int, int, int, int*)", "void cv::morphologyEx(cv::InputArray, cv::OutputArray, int, cv::InputArray, cv::Point, int, int, const Scalar&)", "void cv::dilate(cv::InputArray, cv::OutputArray, cv::InputArray, cv::Point, int, int, const Scalar&)", "void cv::morphOp(int, cv::InputArray, cv::OutputArray, cv::InputArray, cv::Point, int, int, const Scalar&)", "void cv::erode(cv::InputArray, cv::OutputArray, cv::InputArray, cv::Point, int, int, const Scalar&)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "cv::Mat cv::getStructuringElement(int, cv::Size, cv::Point)", "cv::Ptr<cv::FilterEngine> cv::createMorphologyFilter(int, int, cv::InputArray, cv::Point, int, int, const Scalar&)", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<double>; VecOp = cv::MorphNoVec; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<float>; VecOp = cv::MorphFVec<cv::VMax32f>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<short int>; VecOp = cv::MorphIVec<cv::VMax16s>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<short unsigned int>; VecOp = cv::MorphIVec<cv::VMax16u>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<unsigned char>; VecOp = cv::MorphIVec<cv::VMax8u>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<double>; VecOp = cv::MorphNoVec; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<float>; VecOp = cv::MorphFVec<cv::VMin32f>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<short int>; VecOp = cv::MorphIVec<cv::VMin16s>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<short unsigned int>; VecOp = cv::MorphIVec<cv::VMin16u>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<unsigned char>; VecOp = cv::MorphIVec<cv::VMin8u>; cv::Point = cv::Point_<int>]", "cv::Point cv::normalizeAnchor(cv::Point, cv::Size)", "cv::Ptr<cv::BaseFilter> cv::getMorphologyFilter(int, int, cv::InputArray, cv::Point)", "cv::Ptr<cv::BaseColumnFilter> cv::getMorphologyColumnFilter(int, int, int, int)", "cv::Ptr<cv::BaseRowFilter> cv::getMorphologyRowFilter(int, int, int, int)", "N2cv14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEE", "N2cv14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEE", "N2cv14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEE", "N2cv14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEE", "N2cv14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEE", "N2cv14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEE", "N2cv17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEE", "N2cv17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEE", "N2cv11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEE", "N2cv11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEE", "N2cv11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEE", "N2cv11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEE", "N2cv11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEE", "N2cv11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEE", "N2cv11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEE", "N2cv11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEE", "N2cv11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEE", "N2cv11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "void cvPreCornerDetect(const void*, void*, int)", "void cvCornerEigenValsAndVecs(const void*, void*, int, int)", "void cvCornerHarris(const CvArr*, CvArr*, int, int, double)", "void cvCornerMinEigenVal(const CvArr*, CvArr*, int, int)", "void cv::preCornerDetect(cv::InputArray, cv::OutputArray, int, int)", "void cv::cornerEigenValsAndVecs(cv::InputArray, cv::OutputArray, int, int, int)", "void cv::cornerHarris(cv::InputArray, cv::OutputArray, int, int, double, int)", "void cv::cornerEigenValsVecs(const cv::Mat&, cv::Mat&, int, int, int, double, int)", "void cv::cornerMinEigenVal(cv::InputArray, cv::OutputArray, int, int, int)", "void cv::Subdiv2D::checkSubdiv() const", "int cv::Subdiv2D::findNearest(cv::Point2f, cv::Point2f*)", "void cv::Subdiv2D::initDelaunay(cv::Rect)", "void cv::Subdiv2D::insert(const std::vector<cv::Point_<float> >&)", "int cv::Subdiv2D::insert(cv::Point2f)", "int cv::Subdiv2D::locate(cv::Point2f, int&, int&)", "void cv::HoughCircles(cv::InputArray, cv::OutputArray, int, double, double, double, double, int, int)", "CvSeq* cvHoughCircles(CvArr*, void*, int, double, double, double, double, int, int)", "bool isStorageOrMat(void*)", "CvSeq* cvHoughLines2(CvArr*, void*, int, double, double, int, double, double, double, double)", "void cv::HoughLinesProbabilistic(cv::Mat&, float, float, int, int, int, std::vector<cv::Vec<int, 4> >&, int)", "void cv::HoughLinesP(cv::InputArray, cv::OutputArray, double, double, int, double, double)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::HoughLinesSDiv(const cv::Mat&, float, float, int, int, int, std::vector<cv::Vec<float, 2> >&, int, double, double)", "void cv::HoughLinesStandard(const cv::Mat&, float, float, int, std::vector<cv::Vec<float, 2> >&, int, double, double)", "void cv::HoughLines(cv::InputArray, cv::OutputArray, double, double, int, double, double, double, double)", "N2cv6detail12PtrOwnerImplI12CvMemStorageNS_14DefaultDeleterIS2_EEEE", "void cv::findContours(cv::InputOutputArray, cv::OutputArrayOfArrays, int, int, cv::Point)", "cv::Seq<_Tp>::Seq(const CvSeq*) [with _Tp = CvSeq*; CvSeq = CvSeq]", "void cv::findContours(cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArray, int, int, cv::Point)", "int icvFindContoursInInterval(const CvArr*, CvMemStorage*, CvSeq**, int)", "int cvFindContours_Impl(void*, CvMemStorage*, CvSeq**, int, int, int, CvPoint, int)", "CvSeq* cvEndFindContours(_CvContourScanner**)", "void icvFetchContourEx(schar*, int, CvPoint, CvSeq*, int, int, CvRect*)", "void icvFetchContourEx_32s(int*, int, CvPoint, CvSeq*, int, CvRect*)", "void icvFetchContour(schar*, int, CvPoint, CvSeq*, int)", "int icvTraceContour(schar*, int, schar*, int)", "int icvTraceContour_32s(int*, int, int*, int)", "CvSeq* cvFindNextContour(CvContourScanner)", "void cvSubstituteContour(CvContourScanner, CvSeq*)", "_CvContourScanner* cvStartFindContours_Impl(void*, CvMemStorage*, int, int, int, CvPoint, int)", "CvPoint cvReadChainPoint(CvChainPtReader*)", "void cvStartReadChainPoints(CvChain*, CvChainPtReader*)", "void cv::distanceATS_L1_8u(const cv::Mat&, cv::Mat&)", "void cv::distanceTransform_L1_8U(cv::InputArray, cv::OutputArray)", "void cv::distanceTransform(cv::InputArray, cv::OutputArray, int, int, int)", "void cv::getDistanceTransformMask(int, float*)", "void cv::trueDistTrans(const cv::Mat&, cv::Mat&)", "void cv::distanceTransform(cv::InputArray, cv::OutputArray, cv::OutputArray, int, int, int)", "N2cv15DTColumnInvokerE", "N2cv12DTRowInvokerE", "void cv::spatialGradient(cv::InputArray, cv::OutputArray, cv::OutputArray, int, int)", "N2cv10opt_SSE4_124WarpPerspectiveLine_SSE4E", "N2cv10opt_SSE4_119resizeNNInvokerSSE2E", "N2cv10opt_SSE4_119resizeNNInvokerSSE4E", "N2cv10opt_SSE4_129WarpPerspectiveLine_SSE4_ImplE", "N2cv6detail12PtrOwnerImplINS_10opt_SSE4_129WarpPerspectiveLine_SSE4_ImplENS_14DefaultDeleterIS3_EEEE", "N2cv8opt_AVX219resizeNNInvokerAVX4E", "N2cv8opt_AVX219resizeNNInvokerAVX2E", "const float* cv::ml::KDTree::getPoint(int, int*) const", "void cv::ml::KDTree::getPoints(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "void cv::ml::KDTree::findOrthoRange(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "int cv::ml::KDTree::findNearest(cv::InputArray, int, int, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "float cv::ml::medianPartition(size_t*, int, int, const float*)", "void cv::ml::KDTree::build(cv::InputArray, cv::InputArray, bool)", "void cv::ml::Cholesky(const cv::Mat&, cv::Mat&)", "void cv::ml::randMVNormal(cv::InputArray, cv::InputArray, int, cv::OutputArray)", "virtual float cv::ml::StatModel::calcError(const cv::Ptr<cv::ml::TrainData>&, bool, cv::OutputArray) const", "virtual bool cv::ml::StatModel::train(cv::InputArray, int, cv::InputArray)", "virtual bool cv::ml::StatModel::train(const cv::Ptr<cv::ml::TrainData>&, int)", "cv::ml::ParamGrid::ParamGrid(double, double, double)", "N2cv2ml9StatModelE", "N2cv6detail12PtrOwnerImplINS_2ml9ParamGridENS_14DefaultDeleterIS3_EEEE", "virtual cv::Mat cv::ml::ANN_MLPImpl::getWeights(int) const", "void cv::ml::ANN_MLPImpl::read_params(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "void cv::ml::ANN_MLPImpl::write_params(cv::FileStorage&) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<int>]", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "int cv::ml::ANN_MLPImpl::train_rprop(const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::TermCriteria)", "void cv::ml::ANN_MLPImpl::calc_output_scale(const cv::Mat&, int)", "void cv::ml::ANN_MLPImpl::prepare_to_train(const cv::Mat&, const cv::Mat&, cv::Mat&, int)", "void cv::ml::ANN_MLPImpl::calc_activ_func(cv::Mat&, const cv::Mat&) const", "virtual float cv::ml::ANN_MLPImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual void cv::ml::ANN_MLPImpl::setLayerSizes(cv::InputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::ml::ANN_MLPImpl::setActivationFunction(int, double, double)", "N2cv2ml7ANN_MLPE", "N2cv2ml11ANN_MLPImpl9RPropLoopE", "N2cv2ml11ANN_MLPImplE", "N2cv6detail12PtrOwnerImplINS_2ml11ANN_MLPImplENS_14DefaultDeleterIS3_EEEE", "static cv::Ptr<cv::ml::TrainData> cv::ml::TrainData::create(cv::InputArray, int, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::ml::TrainDataImpl::preprocessCategorical(const cv::Mat&, cv::Mat*, std::vector<int>&, std::vector<int>*, std::vector<int>&)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "void cv::ml::TrainDataImpl::setData(cv::InputArray, int, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::ml::TrainDataImpl::setVarTypes(const cv::String&, int, std::vector<unsigned char>&) const", "bool cv::ml::TrainDataImpl::loadCSV(const cv::String&, int, int, int, const cv::String&, char, char)", "static cv::Ptr<cv::ml::TrainData> cv::ml::TrainData::loadFromCSV(const cv::String&, int, int, int, const cv::String&, char, char)", "cv::Mat cv::ml::TrainData::getVarSymbolFlags() const", "void cv::ml::TrainData::getNames(std::vector<cv::String>&) const", "virtual void cv::ml::TrainDataImpl::getSample(cv::InputArray, int, float*) const", "virtual void cv::ml::TrainDataImpl::getNormCatValues(int, cv::InputArray, int*) const", "virtual void cv::ml::TrainDataImpl::getValues(int, cv::InputArray, float*) const", "virtual void cv::ml::TrainDataImpl::shuffleTrainTest()", "virtual void cv::ml::TrainDataImpl::setTrainTestSplit(int, bool)", "virtual void cv::ml::TrainDataImpl::setTrainTestSplitRatio(double, bool)", "virtual int cv::ml::TrainDataImpl::getCatCount(int) const", "static cv::Mat cv::ml::TrainData::getSubVector(const cv::Mat&, const cv::Mat&)", "N2cv2ml9TrainDataE", "N2cv2ml13TrainDataImplE", "N2cv6detail12PtrOwnerImplINS_2ml13TrainDataImplENS_14DefaultDeleterIS3_EEEE", "bool cv::ml::SVM::trainAuto(cv::InputArray, int, cv::InputArray, int, cv::Ptr<cv::ml::ParamGrid>, cv::Ptr<cv::ml::ParamGrid>, cv::Ptr<cv::ml::ParamGrid>, cv::Ptr<cv::ml::ParamGrid>, cv::Ptr<cv::ml::ParamGrid>, cv::Ptr<cv::ml::ParamGrid>, bool)", "cv::Mat cv::ml::SVM::getUncompressedSupportVectors() const", "void cv::ml::SVMImpl::read_params(const cv::FileNode&)", "virtual void cv::ml::SVMImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "virtual void cv::ml::SVMImpl::write(cv::FileStorage&) const", "virtual double cv::ml::SVMImpl::getDecisionFunction(int, cv::OutputArray, cv::OutputArray) const", "virtual float cv::ml::SVMImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual void cv::ml::SVMImpl::PredictBody::operator()(const cv::Range&) const", "void cv::ml::checkParamGrid(const cv::ml::ParamGrid&)", "virtual bool cv::ml::SVMImpl::trainAuto(const cv::Ptr<cv::ml::TrainData>&, int, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, bool)", "void cv::ml::sortSamplesByClasses(const cv::Mat&, const cv::Mat&, std::vector<int>&, std::vector<int>&)", "static bool cv::ml::SVMImpl::Solver::solve_nu_svr(const cv::Mat&, const std::vector<float>&, double, double, const cv::Ptr<cv::ml::SVM::Kernel>&, std::vector<double, std::allocator<double> >&, cv::ml::SVMImpl::Solver::SolutionInfo&, cv::TermCriteria)", "static bool cv::ml::SVMImpl::Solver::solve_eps_svr(const cv::Mat&, const std::vector<float>&, double, double, const cv::Ptr<cv::ml::SVM::Kernel>&, std::vector<double, std::allocator<double> >&, cv::ml::SVMImpl::Solver::SolutionInfo&, cv::TermCriteria)", "cv::ml::SVMImpl::Solver::Solver(const cv::Mat&, const std::vector<signed char>&, std::vector<double, std::allocator<double> >&, const std::vector<double, std::allocator<double> >&, double, double, const cv::Ptr<cv::ml::SVM::Kernel>&, cv::ml::SVMImpl::Solver::GetRow, cv::ml::SVMImpl::Solver::SelectWorkingSet, cv::ml::SVMImpl::Solver::CalcRho, cv::TermCriteria)", "bool cv::ml::SVMImpl::do_train(const cv::Mat&, const cv::Mat&)", "void cv::ml::SVMImpl::checkParams()", "virtual bool cv::ml::SVMImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::ml::SVMKernelImpl::calc(int, int, const float*, const float*, cv::ml::Qfloat*)", "N2cv2ml3SVM6KernelE", "N2cv2ml3SVME", "N2cv2ml13SVMKernelImplE", "N2cv2ml7SVMImpl11PredictBodyE", "N2cv2ml7SVMImplE", "N2cv6detail12PtrOwnerImplINS_2ml13SVMKernelImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml7SVMImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::LogisticRegressionImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "virtual void cv::ml::LogisticRegressionImpl::write(cv::FileStorage&) const", "cv::Mat cv::ml::LogisticRegressionImpl::remap_labels(const cv::Mat&, const std::map<int, int>&) const", "cv::Mat cv::ml::LogisticRegressionImpl::mini_batch_gradient_descent(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "cv::Mat cv::ml::LogisticRegressionImpl::batch_gradient_descent(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "void cv::ml::LogisticRegressionImpl::compute_gradient(const cv::Mat&, const cv::Mat&, const cv::Mat&, double, cv::Mat&)", "double cv::ml::LogisticRegressionImpl::compute_cost(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "cv::Mat cv::ml::LogisticRegressionImpl::calc_sigmoid(const cv::Mat&) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::Mat::push_back(const _Tp&) [with _Tp = int]", "virtual float cv::ml::LogisticRegressionImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual bool cv::ml::LogisticRegressionImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "N2cv2ml18LogisticRegressionE", "N2cv2ml22LogisticRegressionImplE", "N2cv2ml43LogisticRegressionImpl_ComputeDradient_ImplE", "N2cv6detail12PtrOwnerImplINS_2ml22LogisticRegressionImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::DTreesImplForBoost::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::ml::DTreesImplForBoost::write(cv::FileStorage&) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::ml::DTreesImplForBoost::updateWeightsAndTrim(int, std::vector<int>&)", "void cv::ml::TreeParams::setRegressionAccuracy(float)", "void cv::ml::TreeParams::setCVFolds(int)", "void cv::ml::TreeParams::setMaxDepth(int)", "void cv::ml::TreeParams::setMaxCategories(int)", "N2cv2ml6DTreesE", "N2cv2ml5BoostE", "N2cv2ml18DTreesImplForBoostE", "N2cv2ml9BoostImplE", "N2cv6detail12PtrOwnerImplINS_2ml9BoostImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::SVMSGDImpl::setOptimalParameters(int, int)", "void cv::ml::SVMSGDImpl::readParams(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "virtual void cv::ml::SVMSGDImpl::write(cv::FileStorage&) const", "virtual float cv::ml::SVMSGDImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual bool cv::ml::SVMSGDImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "float cv::ml::SVMSGDImpl::calcShift(cv::InputArray, cv::InputArray) const", "static void cv::ml::SVMSGDImpl::normalizeSamples(cv::Mat&, cv::Mat&, float&)", "N2cv2ml6SVMSGDE", "N2cv2ml10SVMSGDImplE", "N2cv6detail12PtrOwnerImplINS_2ml10SVMSGDImplENS_14DefaultDeleterIS3_EEEE", "void cv::ml::createConcentricSpheresTestSet(int, int, int, cv::OutputArray, cv::OutputArray)", "void cv::ml::EMImpl::read_params(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual cv::Vec2d cv::ml::EMImpl::predict2(cv::InputArray, cv::OutputArray) const", "cv::Vec2d cv::ml::EMImpl::computeProbabilities(const cv::Mat&, cv::Mat*, int) const", "void cv::ml::EMImpl::computeLogWeightDivDet()", "void cv::ml::EMImpl::decomposeCovs()", "void cv::ml::EMImpl::clusterTrainSamples()", "bool cv::ml::EMImpl::doTrain(int, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "static void cv::ml::EMImpl::checkTrainData(int, const cv::Mat&, int, int, const cv::Mat*, const cv::Mat*, const std::vector<cv::Mat>*, const cv::Mat*)", "virtual void cv::ml::EMImpl::setCovarianceMatrixType(int)", "virtual void cv::ml::EMImpl::setClustersNumber(int)", "N2cv2ml6EMImplE", "N2cv6detail12PtrOwnerImplINS_2ml6EMImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::NormalBayesClassifierImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual float cv::ml::NormalBayesClassifierImpl::predictProb(cv::InputArray, cv::OutputArray, cv::OutputArray, int) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual bool cv::ml::NormalBayesClassifierImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "N2cv2ml21NormalBayesClassifierE", "N2cv2ml25NormalBayesClassifierImpl13NBPredictBodyE", "N2cv2ml25NormalBayesClassifierImplE", "N2cv6detail12PtrOwnerImplINS_2ml25NormalBayesClassifierImplENS_14DefaultDeleterIS3_EEEE", "bool cv::ml::Impl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual float cv::ml::KDTreeImpl::findNearest(cv::InputArray, int, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "virtual float cv::ml::BruteForceImpl::findNearest(cv::InputArray, int, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "N2cv2ml8KNearestE", "N2cv2ml4ImplE", "N2cv2ml14BruteForceImpl19findKNearestInvokerE", "N2cv2ml14BruteForceImplE", "N2cv2ml10KDTreeImplE", "N2cv2ml12KNearestImplE", "N2cv6detail12PtrOwnerImplINS_2ml14BruteForceImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10KDTreeImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml12KNearestImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::DTreesImpl::read(const cv::FileNode&)", "virtual int cv::ml::DTreesImpl::readSplit(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<float>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<int>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<cv::Vec<int, 2> >]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<unsigned char>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = bool]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual float cv::ml::DTreesImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual float cv::ml::DTreesImpl::predictTrees(const cv::Range&, const cv::Mat&, int) const", "virtual int cv::ml::DTreesImpl::calcDir(int, const std::vector<int>&, std::vector<int>&, std::vector<int>&)", "virtual cv::ml::DTreesImpl::WSplit cv::ml::DTreesImpl::findSplitCatClass(int, const std::vector<int>&, double, int*)", "virtual int cv::ml::DTreesImpl::findBestSplit(const std::vector<int>&)", "virtual int cv::ml::DTreesImpl::addNodeAndTrySplit(int, const std::vector<int>&)", "virtual int cv::ml::DTreesImpl::addTree(const std::vector<int>&)", "virtual void cv::ml::DTreesImpl::initCompVarIdx()", "virtual void cv::ml::DTreesImpl::startTraining(const cv::Ptr<cv::ml::TrainData>&, int)", "void cv::ml::TreeParams::setRegressionAccuracy(float)", "void cv::ml::TreeParams::setCVFolds(int)", "void cv::ml::TreeParams::setMaxDepth(int)", "void cv::ml::TreeParams::setMaxCategories(int)", "N2cv2ml10DTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImpl8WorkDataENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImplENS_14DefaultDeleterIS3_EEEE", "void cv::ml::DTreesImplForRTrees::getVotes(cv::InputArray, cv::OutputArray, int) const", "void cv::ml::RTreesImpl::getVotes_(cv::InputArray, cv::OutputArray, int) const", "void cv::ml::RTrees::getVotes(cv::InputArray, cv::OutputArray, int) const", "static cv::Ptr<cv::ml::RTrees> cv::ml::RTrees::load(const cv::String&, const cv::String&)", "cv::ml::DTreesImplForRTrees::DTreesImplForRTrees()", "static cv::Ptr<cv::ml::RTrees> cv::ml::RTrees::create()", "virtual void cv::ml::RTreesImpl::read(const cv::FileNode&)", "virtual void cv::ml::RTreesImpl::write(cv::FileStorage&) const", "virtual float cv::ml::RTreesImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual bool cv::ml::RTreesImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "virtual void cv::ml::DTreesImplForRTrees::read(const cv::FileNode&)", "virtual void cv::ml::DTreesImplForRTrees::readParams(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<float>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "virtual void cv::ml::DTreesImplForRTrees::write(cv::FileStorage&) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::ml::DTreesImplForRTrees::writeTrainingParams(cv::FileStorage&) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual bool cv::ml::DTreesImplForRTrees::train(const cv::Ptr<cv::ml::TrainData>&, int)", "virtual void cv::ml::DTreesImplForRTrees::endTraining()", "virtual void cv::ml::DTreesImplForRTrees::startTraining(const cv::Ptr<cv::ml::TrainData>&, int)", "virtual const std::vector<int>& cv::ml::DTreesImplForRTrees::getActiveVars()", "virtual void cv::ml::DTreesImplForRTrees::clear()", "cv::ml::RTreeParams::RTreeParams()", "void cv::ml::TreeParams::setRegressionAccuracy(float)", "void cv::ml::TreeParams::setCVFolds(int)", "void cv::ml::TreeParams::setMaxDepth(int)", "void cv::ml::TreeParams::setMaxCategories(int)", "N2cv2ml6RTreesE", "N2cv2ml19DTreesImplForRTreesE", "N2cv2ml10RTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10RTreesImplENS_14DefaultDeleterIS3_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "void* icvReadHaarClassifier(CvFileStorage*, CvFileNode*)", "CvHaarClassifierCascade* icvCreateHaarClassifierCascade(int)", "CvHaarClassifierCascade* icvLoadCascadeCART(const char**, int, CvSize)", "CvHaarClassifierCascade* cvLoadHaarClassifierCascade(const char*, CvSize)", "cv::Mat::Mat(int, int, int, void*, size_t)", "CvSeq* cvHaarDetectObjectsForROC(const CvArr*, CvHaarClassifierCascade*, CvMemStorage*, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, int, int, CvSize, CvSize, bool)", "virtual void cv::HaarDetectObjects_ScaleCascade_Invoker::operator()(const cv::Range&) const", "virtual void cv::HaarDetectObjects_ScaleImage_Invoker::operator()(const cv::Range&) const", "int cvRunHaarClassifierCascadeSum(const CvHaarClassifierCascade*, CvPoint, double&, int)", "int cvRunHaarClassifierCascade(const CvHaarClassifierCascade*, CvPoint, int)", "CvHidHaarClassifierCascade* icvCreateHidHaarClassifierCascade(CvHaarClassifierCascade*)", "void cvSetImagesForHaarClassifierCascade(CvHaarClassifierCascade*, const CvArr*, const CvArr*, const CvArr*, double)", "N2cv36HaarDetectObjects_ScaleImage_InvokerE", "N2cv38HaarDetectObjects_ScaleCascade_InvokerE", "cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator> cv::CascadeClassifier::getMaskGenerator()", "void cv::CascadeClassifier::setMaskGenerator(const cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>&)", "void* cv::CascadeClassifier::getOldCascade()", "int cv::CascadeClassifier::getFeatureType() const", "cv::Size cv::CascadeClassifier::getOriginalWindowSize() const", "bool cv::CascadeClassifier::isOldFormatCascade() const", "void cv::CascadeClassifier::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, int, int, cv::Size, cv::Size, bool)", "void cv::CascadeClassifier::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, double, int, int, cv::Size, cv::Size)", "void cv::CascadeClassifier::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, double, int, int, cv::Size, cv::Size)", "void cv::clipObjects(cv::Size, std::vector<cv::Rect_<int> >&, std::vector<int>*, std::vector<double, std::allocator<double> >*)", "bool cv::CascadeClassifierImpl::Data::read(const cv::FileNode&)", "virtual void cv::CascadeClassifierImpl::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, double, int, int, cv::Size, cv::Size)", "virtual void cv::CascadeClassifierImpl::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, double, int, int, cv::Size, cv::Size)", "cv::Seq<_Tp>::Seq(const CvSeq*) [with _Tp = CvAvgComp; CvSeq = CvSeq]", "virtual void cv::CascadeClassifierImpl::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, int, int, cv::Size, cv::Size, bool)", "void cv::CascadeClassifierImpl::detectMultiScaleNoGrouping(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, cv::Size, cv::Size, bool)", "virtual void cv::CascadeClassifierInvoker::operator()(const cv::Range&) const", "int cv::predictCategorical(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&) [with FEval = cv::LBPEvaluator]", "int cv::predictOrdered(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&) [with FEval = cv::HaarEvaluator]", "int cv::predictCategoricalStump(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&) [with FEval = cv::LBPEvaluator]", "int cv::predictOrderedStump(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&) [with FEval = cv::HaarEvaluator]", "int cv::CascadeClassifierImpl::runAt(cv::Ptr<cv::FeatureEvaluator>&, cv::Point, int, double&)", "virtual bool cv::LBPEvaluator::setWindow(cv::Point, int)", "const cv::FeatureEvaluator::ScaleData& cv::FeatureEvaluator::getScaleData(int) const", "virtual void cv::HaarEvaluator::computeOptFeatures()", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "virtual void cv::HaarEvaluator::computeChannels(int, cv::InputArray)", "virtual bool cv::HaarEvaluator::read(const cv::FileNode&, cv::Size)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual bool cv::FeatureEvaluator::setImage(cv::InputArray, const std::vector<float>&)", "void cv::groupRectangles_meanshift(std::vector<cv::Rect_<int> >&, std::vector<double, std::allocator<double> >&, std::vector<double, std::allocator<double> >&, double, cv::Size)", "void cv::groupRectangles(std::vector<cv::Rect_<int> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, int, double)", "void cv::groupRectangles(std::vector<cv::Rect_<int> >&, std::vector<int>&, int, double)", "void cv::groupRectangles(std::vector<cv::Rect_<int> >&, int, double)", "int cv::partition(const std::vector<_Tp>&, std::vector<int>&, _EqPredicate) [with _Tp = cv::Rect_<int>; _EqPredicate = cv::SimilarRects]", "void cv::groupRectangles(std::vector<cv::Rect_<int> >&, int, double, std::vector<int>*, std::vector<double, std::allocator<double> >*)", "N2cv21BaseCascadeClassifierE", "N2cv16FeatureEvaluatorE", "N2cv21CascadeClassifierImplE", "N2cv13HaarEvaluatorE", "N2cv12LBPEvaluatorE", "N2cv24CascadeClassifierInvokerE", "N2cv6detail12PtrOwnerImplINS_13HaarEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12LBPEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_16FeatureEvaluator9ScaleDataESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplI23CvHaarClassifierCascadeNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_21CascadeClassifierImplENS_14DefaultDeleterIS2_EEEE", "void cv::HOGDescriptor::groupRectangles(std::vector<cv::Rect_<int> >&, std::vector<double, std::allocator<double> >&, int, double) const", "void cv::HOGDescriptor::readALTModel(cv::String)", "readALTModel", "virtual void cv::HOGDescriptor::detectMultiScaleROI(const cv::Mat&, std::vector<cv::Rect_<int> >&, std::vector<cv::DetectionROI>&, double, int) const", "virtual void cv::HOGDescriptor::detectROI(const cv::Mat&, const std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<double, std::allocator<double> >&, double, cv::Size, cv::Size) const", "virtual void cv::HOGConfInvoker::operator()(const cv::Range&) const", "virtual void cv::HOGDescriptor::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, double, cv::Size, cv::Size, double, double, bool) const", "virtual void cv::HOGDescriptor::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<double, std::allocator<double> >&, double, cv::Size, cv::Size, double, double, bool) const", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "virtual void cv::HOGDescriptor::detect(const cv::Mat&, std::vector<cv::Point_<int> >&, double, cv::Size, cv::Size, const std::vector<cv::Point_<int> >&) const", "virtual void cv::HOGDescriptor::detect(const cv::Mat&, std::vector<cv::Point_<int> >&, std::vector<double, std::allocator<double> >&, double, cv::Size, cv::Size, const std::vector<cv::Point_<int> >&) const", "virtual void cv::HOGDescriptor::compute(cv::InputArray, std::vector<float>&, cv::Size, cv::Size, const std::vector<cv::Point_<int> >&) const", "const float* cv::HOGCache::getBlock(cv::Point, float*)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::HOGDescriptor::computeGradient(const cv::Mat&, cv::Mat&, cv::Mat&, cv::Size, cv::Size) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<float>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = bool]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Size_<int>]", "virtual bool cv::HOGDescriptor::read(cv::FileNode&)", "virtual void cv::HOGDescriptor::setSVMDetector(cv::InputArray)", "size_t cv::HOGDescriptor::getDescriptorSize() const", "N2cv13HOGDescriptorE", "N2cv8HOGCacheE", "N2cv10HOGInvokerE", "N2cv14HOGConfInvokerE", "void cv::DetectionBasedTracker::updateTrackedObjects(const std::vector<cv::Rect_<int> >&)", "virtual void cv::DetectionBasedTracker::process(const cv::Mat&)", "cv::DetectionBasedTracker::DetectionBasedTracker(cv::Ptr<cv::DetectionBasedTracker::IDetector>, cv::Ptr<cv::DetectionBasedTracker::IDetector>, const cv::DetectionBasedTracker::Parameters&)", "void cv::DetectionBasedTracker::SeparateDetectionWork::workcycleObjectDetector()", "void* cv::workcycleObjectDetectorFunction(void*)", "cv::DetectionBasedTracker::SeparateDetectionWork::SeparateDetectionWork(cv::DetectionBasedTracker&, cv::Ptr<cv::DetectionBasedTracker::IDetector>, const cv::DetectionBasedTracker::Parameters&)", "N2cv21DetectionBasedTrackerE", "N2cv21DetectionBasedTracker21SeparateDetectionWorkE", "N2cv6detail12PtrOwnerImplINS_21DetectionBasedTracker21SeparateDetectionWorkENS_14DefaultDeleterIS3_EEEE", "virtual void cv::TonemapMantiukImpl::read(const cv::FileNode&)", "virtual void cv::TonemapMantiukImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapReinhardImpl::read(const cv::FileNode&)", "virtual void cv::TonemapReinhardImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapDurandImpl::read(const cv::FileNode&)", "virtual void cv::TonemapDurandImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapDragoImpl::read(const cv::FileNode&)", "virtual void cv::TonemapDragoImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::TonemapImpl::process(cv::InputArray, cv::OutputArray)", "N2cv7TonemapE", "N2cv12TonemapDragoE", "N2cv13TonemapDurandE", "N2cv15TonemapReinhardE", "N2cv14TonemapMantiukE", "N2cv11TonemapImplE", "N2cv16TonemapDragoImplE", "N2cv17TonemapDurandImplE", "N2cv19TonemapReinhardImplE", "N2cv18TonemapMantiukImplE", "N2cv6detail12PtrOwnerImplINS_11TonemapImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16TonemapDragoImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17TonemapDurandImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19TonemapReinhardImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18TonemapMantiukImplENS_14DefaultDeleterIS2_EEEE", "void cv::denoise_TVL1(const std::vector<cv::Mat>&, cv::Mat&, double, int)", "void throw_no_cuda()", "void cv::textureFlattening(cv::InputArray, cv::InputArray, cv::OutputArray, float, float, int)", "void cv::illuminationChange(cv::InputArray, cv::InputArray, cv::OutputArray, float, float)", "void cv::colorChange(cv::InputArray, cv::InputArray, cv::OutputArray, float, float, float)", "void cv::seamlessClone(cv::InputArray, cv::InputArray, cv::InputArray, cv::Point, cv::OutputArray, int)", "virtual void cv::MergeRobertsonImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray)", "virtual void cv::MergeRobertsonImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray, cv::InputArray)", "virtual void cv::MergeMertensImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::MergeMertensImpl::process(cv::InputArrayOfArrays, cv::OutputArray)", "virtual void cv::MergeMertensImpl::process(cv::InputArrayOfArrays, cv::OutputArrayOfArrays, cv::InputArray, cv::InputArray)", "virtual void cv::MergeDebevecImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray)", "virtual void cv::MergeDebevecImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray, cv::InputArray)", "N2cv14MergeExposuresE", "N2cv12MergeDebevecE", "N2cv12MergeMertensE", "N2cv14MergeRobertsonE", "N2cv16MergeDebevecImplE", "N2cv16MergeMertensImplE", "N2cv18MergeRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_16MergeDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16MergeMertensImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18MergeRobertsonImplENS_14DefaultDeleterIS2_EEEE", "void cv::Cloning::illuminationChange(cv::Mat&, cv::Mat&, cv::Mat&, cv::Mat&, float, float)", "void cv::decolor(cv::InputArray, cv::OutputArray, cv::OutputArray)", "virtual void cv::AlignMTBImpl::computeBitmaps(cv::InputArray, cv::OutputArray, cv::OutputArray)", "virtual void cv::AlignMTBImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::AlignMTBImpl::shiftMat(cv::InputArray, cv::OutputArray, cv::Point)", "virtual cv::Point cv::AlignMTBImpl::calculateShift(cv::InputArray, cv::InputArray)", "virtual void cv::AlignMTBImpl::process(cv::InputArrayOfArrays, std::vector<cv::Mat>&)", "virtual void cv::AlignMTBImpl::process(cv::InputArrayOfArrays, std::vector<cv::Mat>&, cv::InputArray, cv::InputArray)", "N2cv14AlignExposuresE", "N2cv8AlignMTBE", "N2cv12AlignMTBImplE", "N2cv6detail12PtrOwnerImplINS_12AlignMTBImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::CalibrateRobertsonImpl::read(const cv::FileNode&)", "virtual void cv::CalibrateRobertsonImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray)", "virtual void cv::CalibrateDebevecImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::CalibrateDebevecImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray)", "N2cv12CalibrateCRFE", "N2cv16CalibrateDebevecE", "N2cv18CalibrateRobertsonE", "N2cv20CalibrateDebevecImplE", "N2cv22CalibrateRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_20CalibrateDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22CalibrateRobertsonImplENS_14DefaultDeleterIS2_EEEE", "void cv::checkImageDimensions(const std::vector<cv::Mat>&)", "void cv::fastNlMeansDenoisingColoredMulti(cv::InputArrayOfArrays, cv::OutputArray, int, int, float, float, int, int)", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoisingMulti_(const std::vector<cv::Mat>&, cv::Mat&, int, int, const std::vector<float>&, int, int) [with ST = short unsigned int; IT = long long int; UIT = long long unsigned int; D = DistAbs]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoisingMulti_(const std::vector<cv::Mat>&, cv::Mat&, int, int, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistAbs]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 4>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 3>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 2>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "void fastNlMeansDenoisingMulti_(const std::vector<cv::Mat>&, cv::Mat&, int, int, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistSquared]", "void fastNlMeansDenoisingMultiCheckPreconditions(const std::vector<cv::Mat>&, int, int, int, int)", "void cv::fastNlMeansDenoisingMulti(cv::InputArrayOfArrays, cv::OutputArray, int, int, const std::vector<float>&, int, int, int)", "void cv::fastNlMeansDenoisingMulti(cv::InputArrayOfArrays, cv::OutputArray, int, int, float, int, int)", "void cv::fastNlMeansDenoisingColored(cv::InputArray, cv::OutputArray, float, float, int, int)", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = short unsigned int; IT = long long int; UIT = long long unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoising_(const cv::Mat&, cv::Mat&, const std::vector<float>&, int, int) [with ST = short unsigned int; IT = long long int; UIT = long long unsigned int; D = DistAbs]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoising_(const cv::Mat&, cv::Mat&, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistAbs]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 4>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 3>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 2>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "void fastNlMeansDenoising_(const cv::Mat&, cv::Mat&, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistSquared]", "void cv::fastNlMeansDenoising(cv::InputArray, cv::OutputArray, const std::vector<float>&, int, int, int)", "void cv::fastNlMeansDenoising(cv::InputArray, cv::OutputArray, float, int, int)", "27FastNlMeansDenoisingInvokerIhij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquaredNS1_IiLi2EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquaredNS1_IiLi3EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquaredNS1_IiLi4EEEE", "27FastNlMeansDenoisingInvokerIhij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsNS1_IiLi2EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsNS1_IiLi3EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsNS1_IiLi4EEEE", "27FastNlMeansDenoisingInvokerItxy7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi2EEExy7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi2EEExy7DistAbsNS1_IiLi2EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi3EEExy7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi3EEExy7DistAbsNS1_IiLi3EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi4EEExy7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi4EEExy7DistAbsNS1_IiLi4EEEE", "32FastNlMeansMultiDenoisingInvokerIhij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquaredNS1_IiLi2EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquaredNS1_IiLi3EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquaredNS1_IiLi4EEEE", "32FastNlMeansMultiDenoisingInvokerIhij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsNS1_IiLi2EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsNS1_IiLi3EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsNS1_IiLi4EEEE", "32FastNlMeansMultiDenoisingInvokerIhxy7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi2EEExy7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi2EEExy7DistAbsNS1_IiLi2EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi3EEExy7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi3EEExy7DistAbsNS1_IiLi3EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi4EEExy7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi4EEExy7DistAbsNS1_IiLi4EEEE", "void cv::stylization(cv::InputArray, cv::OutputArray, float, float)", "void cv::pencilSketch(cv::InputArray, cv::OutputArray, cv::OutputArray, float, float, float)", "void cv::detailEnhance(cv::InputArray, cv::OutputArray, float, float)", "void cv::edgePreservingFilter(cv::InputArray, cv::OutputArray, int, float, float)", "void cv::inpaint(cv::InputArray, cv::InputArray, cv::OutputArray, double, int)", "void cvInpaint(const CvArr*, const CvArr*, CvArr*, double, int)", "N2cv6detail12PtrOwnerImplI14_IplConvKernelNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI20CvPriorityQueueFloatNS_14DefaultDeleterIS2_EEEE", "void update_warping_matrix_ECC(cv::Mat&, const cv::Mat&, int)", "void project_onto_jacobian_ECC(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_euclidean_ECC(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_translation_ECC(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_homo_ECC(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_affine_ECC(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "double cv::findTransformECC(cv::InputArray, cv::InputArray, cv::InputOutputArray, int, cv::TermCriteria, cv::InputArray)", "const cv::Mat& cv::KalmanFilter::correct(const cv::Mat&)", "const cv::Mat& cv::KalmanFilter::predict(const cv::Mat&)", "void cv::KalmanFilter::init(int, int, int, int)", "virtual void cv::BackgroundSubtractorKNNImpl::getBackgroundImage(cv::OutputArray) const", "virtual void cv::BackgroundSubtractorKNNImpl::apply(cv::InputArray, cv::OutputArray, double)", "virtual void cv::BackgroundSubtractorKNNImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "N2cv20BackgroundSubtractorE", "N2cv23BackgroundSubtractorKNNE", "N2cv27BackgroundSubtractorKNNImplE", "N2cv6detail12PtrOwnerImplINS_27BackgroundSubtractorKNNImplENS_14DefaultDeleterIS2_EEEE", "cv::RotatedRect cv::CamShift(cv::InputArray, cv::Rect&, cv::TermCriteria)", "int cv::meanShift(cv::InputArray, cv::Rect&, cv::TermCriteria)", "void cv::BackgroundSubtractorMOG2Impl::getBackgroundImage_intern(cv::OutputArray) const [with T = float; int CN = 3; cv::OutputArray = const cv::_OutputArray&]", "void cv::BackgroundSubtractorMOG2Impl::getBackgroundImage_intern(cv::OutputArray) const [with T = float; int CN = 1; cv::OutputArray = const cv::_OutputArray&]", "void cv::BackgroundSubtractorMOG2Impl::getBackgroundImage_intern(cv::OutputArray) const [with T = unsigned char; int CN = 3; cv::OutputArray = const cv::_OutputArray&]", "void cv::BackgroundSubtractorMOG2Impl::getBackgroundImage_intern(cv::OutputArray) const [with T = unsigned char; int CN = 1; cv::OutputArray = const cv::_OutputArray&]", "virtual void cv::BackgroundSubtractorMOG2Impl::getBackgroundImage(cv::OutputArray) const", "void cv::BackgroundSubtractorMOG2Impl::initialize(cv::Size, int)", "virtual void cv::BackgroundSubtractorMOG2Impl::apply(cv::InputArray, cv::OutputArray, double)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::BackgroundSubtractorMOG2Impl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "N2cv24BackgroundSubtractorMOG2E", "N2cv28BackgroundSubtractorMOG2ImplE", "N2cv11MOG2InvokerE", "N2cv6detail12PtrOwnerImplINS_28BackgroundSubtractorMOG2ImplENS_14DefaultDeleterIS2_EEEE", "void cvCalcOpticalFlowFarneback(const CvArr*, const CvArr*, CvArr*, double, int, int, int, int, double, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cvCalcOpticalFlowPyrLK(const void*, const void*, void*, void*, const CvPoint2D32f*, CvPoint2D32f*, int, CvSize, int, char*, float*, CvTermCriteria, int)", "const CvMat* cvKalmanCorrect(CvKalman*, const CvMat*)", "const CvMat* cvKalmanPredict(CvKalman*, const CvMat*)", "void cvReleaseKalman(CvKalman**)", "CvKalman* cvCreateKalman(int, int, int)", "virtual void {anonymous}::OpticalFlowDual_TVL1::calc(cv::InputArray, cv::InputArray, cv::InputOutputArray)", "*N12_GLOBAL__N_120OpticalFlowDual_TVL1E", "*N12_GLOBAL__N_116BuildFlowMapBodyE", "*N12_GLOBAL__N_120CenteredGradientBodyE", "*N12_GLOBAL__N_119ForwardGradientBodyE", "*N12_GLOBAL__N_114DivergenceBodyE", "*N12_GLOBAL__N_115CalcGradRhoBodyE", "*N12_GLOBAL__N_113EstimateVBodyE", "*N12_GLOBAL__N_125EstimateDualVariablesBodyE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_120OpticalFlowDual_TVL1ENS_14DefaultDeleterIS3_EEEE", "N2cv16DenseOpticalFlowE", "N2cv19DualTVL1OpticalFlowE", "void cv::getRTMatrix(const Point2f*, const Point2f*, int, cv::Mat&, bool)", "cv::Mat cv::estimateRigidTransform(cv::InputArray, cv::InputArray, bool)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::{anonymous}::SparsePyrLKOpticalFlowImpl::calc(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputOutputArray, cv::OutputArray, cv::OutputArray)", "void {anonymous}::calcSharrDeriv(const cv::Mat&, cv::Mat&)", "int cv::buildOpticalFlowPyramid(cv::InputArray, cv::OutputArrayOfArrays, cv::Size, int, bool, int, int, bool)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "virtual void cv::detail::LKTrackerInvoker::operator()(const cv::Range&) const", "*N2cv12_GLOBAL__N_126SparsePyrLKOpticalFlowImplE", "*N2cv6detail12PtrOwnerImplINS_12_GLOBAL__N_126SparsePyrLKOpticalFlowImplENS_14DefaultDeleterIS3_EEEE", "N2cv17SparseOpticalFlowE", "N2cv22SparsePyrLKOpticalFlowE", "N2cv6detail16LKTrackerInvokerE", "void cv::FarnebackPolyExp(const cv::Mat&, cv::Mat&, int, double)", "virtual void cv::{anonymous}::FarnebackOpticalFlowImpl::calc(cv::InputArray, cv::InputArray, cv::InputOutputArray)", "void cv::calcOpticalFlowFarneback(cv::InputArray, cv::InputArray, cv::InputOutputArray, double, int, int, int, int, double, int)", "*N2cv12_GLOBAL__N_124FarnebackOpticalFlowImplE", "*N2cv6detail12PtrOwnerImplINS_12_GLOBAL__N_124FarnebackOpticalFlowImplENS_14DefaultDeleterIS3_EEEE", "N2cv20FarnebackOpticalFlowE", "N6google8protobuf8internal20RepeatedPtrFieldBaseE", "N6google8protobuf4hashISsEE", "St3mapISsPN6google8protobuf7MapPairISsN10tensorflow9AttrValueEEENS1_4hashISsEENS1_3MapISsS4_E12MapAllocatorISt4pairIKSsS6_EEEE", "N6google8protobuf16RepeatedPtrFieldINS0_7MessageEEE", "N6google8protobuf8internal12MapEntryBaseE", "N6google8protobuf8internal23TypeDefinedMapFieldBaseISsN10tensorflow9AttrValueEEE", "N6google8protobuf8internal12MapFieldLiteISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N6google8protobuf8internal8MapFieldISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N10tensorflow18FunctionDefLibraryE", "N10tensorflow16FunctionDef_NodeE", "N10tensorflow11FunctionDefE", "N10tensorflow11GradientDefE", "N6google8protobuf8internal12MapEntryLiteISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N6google8protobuf8internal8MapEntryISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N6google8protobuf8internal25InternalMetadataWithArena9ContainerE", "N6google8protobuf8internal12MapEntryLiteISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EE15MapEntryWrapperISsS4_LS6_9ELS6_11ELi0EEE", "N6google8protobuf3MapISsN10tensorflow9AttrValueEEE", "N6google8protobuf8hash_mapISsPNS0_7MapPairISsN10tensorflow9AttrValueEEENS0_4hashISsEESt8equal_toISsENS0_3MapISsS4_E12MapAllocatorISt4pairIKSsS6_EEEEE", "N6google8protobuf3MapISsN10tensorflow9AttrValueEE8InnerMapE", "N10tensorflow12OpDef_ArgDefE", "N10tensorflow13OpDef_AttrDefE", "N10tensorflow5OpDefE", "N10tensorflow13OpDeprecationE", "N10tensorflow6OpListE", "N10tensorflow19AttrValue_ListValueE", "N10tensorflow9AttrValueE", "N10tensorflow12NameAttrListE", "N10tensorflow10VersionDefE", "N10tensorflow11TensorProtoE", "N10tensorflow8GraphDefE", "N10tensorflow7NodeDefE", "N10tensorflow20TensorShapeProto_DimE", "N10tensorflow16TensorShapeProtoE", "N5caffe9BlobShapeE", "N5caffe9BlobProtoE", "N5caffe15BlobProtoVectorE", "N5caffe16PermuteParameterE", "N5caffe22NormalizeBBoxParameterE", "N5caffe17PriorBoxParameterE", "N5caffe24DetectionOutputParameterE", "N5caffe5DatumE", "N5caffe15FillerParameterE", "N5caffe12NetParameterE", "N5caffe15SolverParameterE", "N5caffe11SolverStateE", "N5caffe8NetStateE", "N5caffe12NetStateRuleE", "N5caffe9ParamSpecE", "N5caffe14LayerParameterE", "N5caffe23TransformationParameterE", "N5caffe13LossParameterE", "N5caffe17AccuracyParameterE", "N5caffe15ArgMaxParameterE", "N5caffe15ConcatParameterE", "N5caffe18BatchNormParameterE", "N5caffe13BiasParameterE", "N5caffe24ContrastiveLossParameterE", "N5caffe20ConvolutionParameterE", "N5caffe13CropParameterE", "N5caffe13DataParameterE", "N5caffe30NonMaximumSuppressionParameterE", "N5caffe19SaveOutputParameterE", "N5caffe16DropoutParameterE", "N5caffe18DummyDataParameterE", "N5caffe16EltwiseParameterE", "N5caffe12ELUParameterE", "N5caffe14EmbedParameterE", "N5caffe12ExpParameterE", "N5caffe16FlattenParameterE", "N5caffe17HDF5DataParameterE", "N5caffe19HDF5OutputParameterE", "N5caffe18HingeLossParameterE", "N5caffe18ImageDataParameterE", "N5caffe21InfogainLossParameterE", "N5caffe21InnerProductParameterE", "N5caffe14InputParameterE", "N5caffe12LogParameterE", "N5caffe12LRNParameterE", "N5caffe19MemoryDataParameterE", "N5caffe12MVNParameterE", "N5caffe18ParameterParameterE", "N5caffe16PoolingParameterE", "N5caffe14PowerParameterE", "N5caffe15PythonParameterE", "N5caffe18RecurrentParameterE", "N5caffe18ReductionParameterE", "N5caffe13ReLUParameterE", "N5caffe16ReshapeParameterE", "N5caffe14ScaleParameterE", "N5caffe16SigmoidParameterE", "N5caffe14SliceParameterE", "N5caffe16SoftmaxParameterE", "N5caffe13TanHParameterE", "N5caffe13TileParameterE", "N5caffe18ThresholdParameterE", "N5caffe19WindowDataParameterE", "N5caffe12SPPParameterE", "N5caffe16V1LayerParameterE", "N5caffe16V0LayerParameterE", "N5caffe14PReLUParameterE", "N5caffe14NormalizedBBoxE", "void cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::addOutput(const caffe::LayerParameter&, int, int)", "void cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::addInput(const string&, int, int, cv::dnn::experimental_dnn_v1::Net&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::blobShapeFromProto(const caffe::BlobProto&, cv::dnn::experimental_dnn_v1::MatShape&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::blobFromProto(const caffe::BlobProto&, cv::Mat&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::addParam(const google::protobuf::Message&, const google::protobuf::FieldDescriptor*, cv::dnn::experimental_dnn_v1::LayerParams&)", "virtual void cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::populateNet(cv::dnn::experimental_dnn_v1::Net)", "cv::dnn::experimental_dnn_v1::{anonymous}::CaffeImporter::CaffeImporter(const char*, const char*)", "*N2cv3dnn19experimental_dnn_v112_GLOBAL__N_113CaffeImporterE", "*N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v112_GLOBAL__N_113CaffeImporterENS_14DefaultDeleterIS5_EEEE", "void cv::dnn::ReadNetParamsFromBinaryFileOrDie(const char*, caffe::NetParameter*)", "void cv::dnn::ReadNetParamsFromTextFileOrDie(const char*, caffe::NetParameter*)", "bool cv::dnn::ReadProtoFromBinaryFile(const char*, google::protobuf::Message*)", "bool cv::dnn::ReadProtoFromTextFile(const char*, google::protobuf::Message*)", "const char* cv::dnn::UpgradeV1LayerType(caffe::V1LayerParameter_LayerType)", "bool cv::dnn::UpgradeV1LayerParameter(const caffe::V1LayerParameter&, caffe::LayerParameter*)", "bool cv::dnn::UpgradeV1Net(const caffe::NetParameter&, caffe::NetParameter*)", "bool cv::dnn::UpgradeNetAsNeeded(const string&, caffe::NetParameter*)", "caffe::V1LayerParameter_LayerType cv::dnn::UpgradeV0LayerType(const string&)", "bool cv::dnn::UpgradeV0LayerParameter(const caffe::V1LayerParameter&, caffe::V1LayerParameter*)", "void cv::dnn::UpgradeV0PaddingLayers(const caffe::NetParameter&, caffe::NetParameter*)", "void cv::dnn::ReadTFNetParamsFromBinaryFileOrDie(const char*, tensorflow::GraphDef*)", "bool cv::dnn::ReadProtoFromBinaryFileTF(const char*, google::protobuf::Message*)", "void cv::dnn::experimental_dnn_v1::{anonymous}::printTensor(const tensorflow::TensorProto&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::TFImporter::connect(const std::map<cv::String, int>&, cv::dnn::experimental_dnn_v1::Net&, const cv::dnn::experimental_dnn_v1::{anonymous}::Pin&, int, int)", "void cv::dnn::experimental_dnn_v1::{anonymous}::parseTensor(const tensorflow::TensorProto&, cv::Mat&) [with T = double]", "void cv::dnn::experimental_dnn_v1::{anonymous}::parseTensor(const tensorflow::TensorProto&, cv::Mat&) [with T = float]", "void cv::dnn::experimental_dnn_v1::{anonymous}::blobFromTensor(const tensorflow::TensorProto&, cv::Mat&)", "const tensorflow::TensorProto& cv::dnn::experimental_dnn_v1::{anonymous}::TFImporter::getConstBlob(const tensorflow::NodeDef&, std::map<cv::String, int>, int, int*)", "void cv::dnn::experimental_dnn_v1::{anonymous}::blobShapeFromTensor(const tensorflow::TensorProto&, cv::dnn::experimental_dnn_v1::MatShape&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::setStrides(cv::dnn::experimental_dnn_v1::LayerParams&, const tensorflow::NodeDef&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::setKSize(cv::dnn::experimental_dnn_v1::LayerParams&, const tensorflow::NodeDef&)", "cv::dnn::experimental_dnn_v1::DictValue cv::dnn::experimental_dnn_v1::{anonymous}::parseDims(const tensorflow::TensorProto&)", "void cv::dnn::experimental_dnn_v1::{anonymous}::TFImporter::kernelFromTensor(const tensorflow::TensorProto&, cv::Mat&)", "virtual void cv::dnn::experimental_dnn_v1::{anonymous}::TFImporter::populateNet(cv::dnn::experimental_dnn_v1::Net)", "*N2cv3dnn19experimental_dnn_v112_GLOBAL__N_110TFImporterE", "*N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v112_GLOBAL__N_110TFImporterENS_14DefaultDeleterIS5_EEEE", "cv::dnn::experimental_dnn_v1::Net cv::dnn::experimental_dnn_v1::readNetFromTorch(const cv::String&, bool)", "cv::Mat cv::dnn::experimental_dnn_v1::readTorchBlob(const cv::String&, bool)", "cv::dnn::experimental_dnn_v1::TorchImporter::TorchImporter(cv::String, bool)", "int cv::dnn::experimental_dnn_v1::TorchImporter::fill(cv::dnn::experimental_dnn_v1::TorchImporter::Module*, std::vector<std::pair<int, cv::dnn::experimental_dnn_v1::TorchImporter::Module*> >&, int, int)", "void cv::dnn::experimental_dnn_v1::TorchImporter::readTorchTable(cv::dnn::experimental_dnn_v1::Dict&, cv::dnn::experimental_dnn_v1::TorchImporter::TensorsMap&)", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "void cv::dnn::experimental_dnn_v1::TorchImporter::readTorchStorage(int, int)", "void cv::dnn::experimental_dnn_v1::TorchImporter::readTorchTensor(int, int)", "static int cv::dnn::experimental_dnn_v1::TorchImporter::parseTorchType(const cv::String&, const char*, const char*)", "void cv::dnn::experimental_dnn_v1::TorchImporter::readTorchObject(int)", "void cv::dnn::experimental_dnn_v1::TorchImporter::readObject()", "virtual void cv::dnn::experimental_dnn_v1::TorchImporter::populateNet(cv::dnn::experimental_dnn_v1::Net)", "N2cv3dnn19experimental_dnn_v113TorchImporterE", "N2cv6detail12PtrOwnerImplIN2TH8THFile__EPFvPS3_EEE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v113TorchImporter6ModuleENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v113TorchImporterENS_14DefaultDeleterIS4_EEEE", "long int TH::THDiskFile_readByte(TH::THFile*, unsigned char*, long int)", "long int TH::THDiskFile_readChar(TH::THFile*, char*, long int)", "long int TH::THDiskFile_readShort(TH::THFile*, short int*, long int)", "long int TH::THDiskFile_readInt(TH::THFile*, int*, long int)", "long int TH::THDiskFile_readLong(TH::THFile*, int64*, long int)", "long int TH::THDiskFile_readFloat(TH::THFile*, float*, long int)", "long int TH::THDiskFile_readDouble(TH::THFile*, double*, long int)", "long int TH::THDiskFile_readString(TH::THFile*, const char*, char**)", "void TH::THDiskFile_seek(TH::THFile*, long int)", "void TH::THDiskFile_seekEnd(TH::THFile*)", "long int TH::THDiskFile_position(TH::THFile*)", "void TH::THDiskFile_close(TH::THFile*)", "TH::THFile* TH::THDiskFile_new(const char*, const char*, int)", "static cv::Ptr<cv::dnn::experimental_dnn_v1::Layer> cv::dnn::experimental_dnn_v1::LayerFactory::createLayerInstance(const cv::String&, cv::dnn::experimental_dnn_v1::LayerParams&)", "static void cv::dnn::experimental_dnn_v1::LayerFactory::unregisterLayer(const cv::String&)", "static void cv::dnn::experimental_dnn_v1::LayerFactory::registerLayer(const cv::String&, cv::dnn::experimental_dnn_v1::LayerFactory::Constuctor)", "virtual bool cv::dnn::experimental_dnn_v1::Layer::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "void cv::dnn::experimental_dnn_v1::Layer::run(const std::vector<cv::Mat>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "void cv::dnn::experimental_dnn_v1::Layer::forward(const std::vector<cv::Mat>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "std::vector<cv::Mat> cv::dnn::experimental_dnn_v1::Layer::finalize(const std::vector<cv::Mat>&)", "void cv::dnn::experimental_dnn_v1::Layer::finalize(const std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual cv::Ptr<cv::dnn::experimental_dnn_v1::BackendNode> cv::dnn::experimental_dnn_v1::Layer::initHalide(const std::vector<cv::Ptr<cv::dnn::experimental_dnn_v1::BackendWrapper> >&)", "void cv::dnn::experimental_dnn_v1::Net::setHalideScheduler(const cv::String&)", "void cv::dnn::experimental_dnn_v1::Net::getMemoryConsumption(const std::vector<std::vector<int> >&, std::vector<int>&, std::vector<unsigned int>&, std::vector<unsigned int>&) const", "void cv::dnn::experimental_dnn_v1::Net::getMemoryConsumption(const std::vector<std::vector<int> >&, size_t&, size_t&) const", "void cv::dnn::experimental_dnn_v1::Net::getMemoryConsumption(int, const std::vector<std::vector<int> >&, size_t&, size_t&) const", "int64 cv::dnn::experimental_dnn_v1::Net::getFLOPS(int, const std::vector<std::vector<int> >&) const", "int64 cv::dnn::experimental_dnn_v1::Net::getFLOPS(const std::vector<std::vector<int> >&) const", "std::vector<cv::Ptr<cv::dnn::experimental_dnn_v1::Layer> > cv::dnn::experimental_dnn_v1::Net::getLayerInputs(cv::dnn::experimental_dnn_v1::Net::LayerId)", "void cv::dnn::experimental_dnn_v1::Net::deleteLayer(cv::dnn::experimental_dnn_v1::Net::LayerId)", "void cv::dnn::experimental_dnn_v1::Net::setParam(cv::dnn::experimental_dnn_v1::Net::LayerId, int, const cv::Mat&)", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "cv::dnn::experimental_dnn_v1::LayerData& cv::dnn::experimental_dnn_v1::Net::Impl::getLayerData(const cv::dnn::experimental_dnn_v1::DictValue&)", "cv::Mat cv::dnn::experimental_dnn_v1::Net::getParam(cv::dnn::experimental_dnn_v1::Net::LayerId, int)", "void cv::dnn::experimental_dnn_v1::Net::setInput(const cv::Mat&, const cv::String&)", "void cv::dnn::experimental_dnn_v1::Net::setInputsNames(const std::vector<cv::String>&)", "void cv::dnn::experimental_dnn_v1::Net::setPreferableTarget(int)", "void cv::dnn::experimental_dnn_v1::Net::setPreferableBackend(int)", "void cv::dnn::experimental_dnn_v1::Net::forward(std::vector<std::vector<cv::Mat> >&, const std::vector<cv::String>&)", "void cv::dnn::experimental_dnn_v1::Net::forward(std::vector<cv::Mat>&, const std::vector<cv::String>&)", "void cv::dnn::experimental_dnn_v1::Net::forward(std::vector<cv::Mat>&, const cv::String&)", "cv::Mat cv::dnn::experimental_dnn_v1::Net::Impl::getBlob(const cv::dnn::experimental_dnn_v1::LayerPin&)", "void cv::dnn::experimental_dnn_v1::Net::Impl::forwardLayer(cv::dnn::experimental_dnn_v1::LayerData&)", "void cv::dnn::experimental_dnn_v1::Net::Impl::forwardToLayer(cv::dnn::experimental_dnn_v1::LayerData&, bool)", "cv::dnn::experimental_dnn_v1::LayerData& cv::dnn::experimental_dnn_v1::Net::Impl::getLayerData(const cv::String&)", "void cv::dnn::experimental_dnn_v1::Net::Impl::compileHalide()", "cv::Ptr<cv::dnn::experimental_dnn_v1::BackendWrapper> cv::dnn::experimental_dnn_v1::BackendWrapManager::wrapUser(const cv::Ptr<cv::dnn::experimental_dnn_v1::BackendWrapper>&, const MatShape&)", "cv::Ptr<cv::dnn::experimental_dnn_v1::BackendWrapper> cv::dnn::experimental_dnn_v1::BackendWrapManager::wrapHost(const cv::Mat&, int, int)", "cv::Ptr<cv::dnn::experimental_dnn_v1::BackendWrapper> cv::dnn::experimental_dnn_v1::BackendWrapManager::wrap(const cv::Mat&, int, int)", "void cv::dnn::experimental_dnn_v1::BackendWrapManager::reset()", "void cv::dnn::experimental_dnn_v1::Net::Impl::initBackend()", "void cv::dnn::experimental_dnn_v1::Net::Impl::computeNetOutputLayers()", "void cv::dnn::experimental_dnn_v1::Net::Impl::fuseLayers(const std::vector<cv::dnn::experimental_dnn_v1::LayerPin>&)", "void cv::dnn::experimental_dnn_v1::BlobManager::releaseReference(const cv::dnn::experimental_dnn_v1::LayerPin&)", "void cv::dnn::experimental_dnn_v1::BlobManager::addHost(const cv::dnn::experimental_dnn_v1::LayerPin&, const cv::Mat&)", "void cv::dnn::experimental_dnn_v1::BlobManager::reuse(const cv::dnn::experimental_dnn_v1::LayerPin&, const cv::dnn::experimental_dnn_v1::LayerPin&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "int cv::dnn::experimental_dnn_v1::BlobManager::numReferences(const cv::dnn::experimental_dnn_v1::LayerPin&)", "void cv::dnn::experimental_dnn_v1::BlobManager::allocateBlobsForLayer(cv::dnn::experimental_dnn_v1::LayerData&, const cv::dnn::experimental_dnn_v1::{anonymous}::LayerShapes&, std::vector<cv::dnn::experimental_dnn_v1::LayerPin>&, bool)", "void cv::dnn::experimental_dnn_v1::Net::Impl::allocateLayer(int, const LayersShapesMap&)", "void cv::dnn::experimental_dnn_v1::BlobManager::reset()", "void cv::dnn::experimental_dnn_v1::Net::Impl::allocateLayers(const std::vector<cv::dnn::experimental_dnn_v1::LayerPin>&)", "void cv::dnn::experimental_dnn_v1::Net::Impl::clear()", "void cv::dnn::experimental_dnn_v1::Net::Impl::setUpNet(const std::vector<cv::dnn::experimental_dnn_v1::LayerPin>&)", "cv::Mat cv::dnn::experimental_dnn_v1::Net::forward(const cv::String&)", "cv::Ptr<cv::dnn::experimental_dnn_v1::Layer> cv::dnn::experimental_dnn_v1::LayerData::getLayerInstance()", "void cv::dnn::experimental_dnn_v1::Net::connect(cv::String, cv::String)", "static void cv::dnn::experimental_dnn_v1::Net::Impl::addLayerInput(cv::dnn::experimental_dnn_v1::LayerData&, int, cv::dnn::experimental_dnn_v1::LayerPin)", "cv::dnn::experimental_dnn_v1::LayerData& cv::dnn::experimental_dnn_v1::Net::Impl::getLayerData(int)", "void cv::dnn::experimental_dnn_v1::Net::Impl::connect(int, int, int, int)", "void cv::dnn::experimental_dnn_v1::Net::connect(int, int, int, int)", "int cv::dnn::experimental_dnn_v1::Net::addLayerToPrev(const cv::String&, const cv::String&, cv::dnn::experimental_dnn_v1::LayerParams&)", "cv::dnn::experimental_dnn_v1::LayerData::LayerData(int, const cv::String&, const cv::String&, cv::dnn::experimental_dnn_v1::LayerParams&)", "int cv::dnn::experimental_dnn_v1::Net::addLayer(const cv::String&, const cv::String&, cv::dnn::experimental_dnn_v1::LayerParams&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat cv::dnn::experimental_dnn_v1::blobFromImages(const std::vector<cv::Mat>&, double, cv::Size, const Scalar&, bool)", "cv::Mat cv::dnn::experimental_dnn_v1::blobFromImage(const cv::Mat&, double, const Size&, const Scalar&, bool)", "N2cv3dnn19experimental_dnn_v15LayerE", "N2cv3dnn19experimental_dnn_v18ImporterE", "N2cv3dnn19experimental_dnn_v112PoolingLayerE", "N2cv3dnn19experimental_dnn_v111ConcatLayerE", "N2cv3dnn19experimental_dnn_v115ActivationLayerE", "N2cv3dnn19experimental_dnn_v114BatchNormLayerE", "N2cv3dnn19experimental_dnn_v110ScaleLayerE", "N2cv3dnn19experimental_dnn_v19DataLayerE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v19DataLayerENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v13Net4ImplENS_14DefaultDeleterIS5_EEEE", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::ReLUFunctor]", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::TanHFunctor]", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::SigmoidFunctor]", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::ELUFunctor]", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::AbsValFunctor]", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::BNLLFunctor]", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::PowerFunctor]", "void cv::dnn::ChannelsPReLUFunctor::apply(const float*, float*, int, size_t, int, int) const", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "void cv::dnn::ElementWiseLayer<Func>::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&) [with Func = cv::dnn::ChannelsPReLUFunctor]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "N2cv3dnn16ElementWiseLayerINS0_20ChannelsPReLUFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_12PowerFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_11BNLLFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_13AbsValFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_10ELUFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_14SigmoidFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_11TanHFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_11ReLUFunctorEE5PBodyE", "N2cv3dnn19experimental_dnn_v19ReLULayerE", "N2cv3dnn19experimental_dnn_v118ChannelsPReLULayerE", "N2cv3dnn19experimental_dnn_v18ELULayerE", "N2cv3dnn19experimental_dnn_v19TanHLayerE", "N2cv3dnn19experimental_dnn_v112SigmoidLayerE", "N2cv3dnn19experimental_dnn_v19BNLLLayerE", "N2cv3dnn19experimental_dnn_v18AbsLayerE", "N2cv3dnn19experimental_dnn_v110PowerLayerE", "N2cv3dnn16ElementWiseLayerINS0_11ReLUFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_11TanHFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_14SigmoidFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_10ELUFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_13AbsValFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_11BNLLFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_12PowerFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_20ChannelsPReLUFunctorEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_11ReLUFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_11TanHFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_14SigmoidFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_10ELUFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_13AbsValFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_11BNLLFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_12PowerFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_20ChannelsPReLUFunctorEEENS_14DefaultDeleterIS5_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "cv::dnn::FullyConnectedLayerImpl::FullyConnectedLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "static void cv::dnn::FullyConnectedLayerImpl::FullyConnected::run(const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&, const cv::dnn::experimental_dnn_v1::ActivationLayer*, int)", "size_t cv::Mat::total(int, int) const", "virtual void cv::dnn::FullyConnectedLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual bool cv::dnn::FullyConnectedLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v117InnerProductLayerE", "N2cv3dnn23FullyConnectedLayerImpl14FullyConnectedE", "N2cv3dnn23FullyConnectedLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn23FullyConnectedLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "static void cv::dnn::ConcatLayerImpl::ChannelConcatInvoker::run(std::vector<cv::Mat*>&, cv::Mat&, int)", "virtual void cv::dnn::ConcatLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::ConcatLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn15ConcatLayerImpl20ChannelConcatInvokerE", "N2cv3dnn15ConcatLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn15ConcatLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "size_t cv::Mat::total(int, int) const", "virtual void cv::dnn::SoftMaxLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn19experimental_dnn_v112SoftmaxLayerE", "N2cv3dnn16SoftMaxLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16SoftMaxLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "cv::dnn::EltwiseLayerImpl::EltwiseLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual int64 cv::dnn::EltwiseLayerImpl::getFLOPS(const std::vector<std::vector<int> >&, const std::vector<std::vector<int> >&) const", "static void cv::dnn::EltwiseLayerImpl::EltwiseInvoker::run(const cv::Mat**, int, cv::Mat&, const std::vector<float>&, cv::dnn::experimental_dnn_v1::EltwiseLayer::EltwiseOp, const cv::dnn::experimental_dnn_v1::ActivationLayer*, int)", "virtual void cv::dnn::EltwiseLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::EltwiseLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v112EltwiseLayerE", "N2cv3dnn16EltwiseLayerImpl14EltwiseInvokerE", "N2cv3dnn16EltwiseLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16EltwiseLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "virtual void cv::dnn::FlattenLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual bool cv::dnn::FlattenLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v112FlattenLayerE", "N2cv3dnn16FlattenLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16FlattenLayerImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::dnn::BlankLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn19experimental_dnn_v110BlankLayerE", "N2cv3dnn14BlankLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14BlankLayerImplENS_14DefaultDeleterIS3_EEEE", "cv::Mat cv::dnn::experimental_dnn_v1::getPlane(const cv::Mat&, int, int)", "virtual void cv::dnn::MaxUnpoolLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual bool cv::dnn::MaxUnpoolLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v114MaxUnpoolLayerE", "N2cv3dnn18MaxUnpoolLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn18MaxUnpoolLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "cv::dnn::ReshapeLayerImpl::ReshapeLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "virtual void cv::dnn::ReshapeLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual void cv::dnn::ReshapeLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "void cv::dnn::computeShapeByReshapeMask(const MatShape&, const MatShape&, cv::Range, cv::dnn::experimental_dnn_v1::MatShape&)", "N2cv3dnn19experimental_dnn_v112ReshapeLayerE", "N2cv3dnn16ReshapeLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16ReshapeLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "cv::dnn::LRNLayerImpl::LRNLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual int64 cv::dnn::LRNLayerImpl::getFLOPS(const std::vector<std::vector<int> >&, const std::vector<std::vector<int> >&) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat cv::dnn::experimental_dnn_v1::getPlane(const cv::Mat&, int, int)", "virtual void cv::dnn::LRNLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn19experimental_dnn_v18LRNLayerE", "N2cv3dnn12LRNLayerImpl10ChannelLRNE", "N2cv3dnn12LRNLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn12LRNLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::PriorBoxLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = float; std::string = std::basic_string<char>; size_t = unsigned int]", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "void cv::dnn::PriorBoxLayerImpl::getVariance(const cv::dnn::experimental_dnn_v1::LayerParams&)", "void cv::dnn::PriorBoxLayerImpl::getAspectRatios(const cv::dnn::experimental_dnn_v1::LayerParams&)", "T cv::dnn::PriorBoxLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = bool; std::string = std::basic_string<char>; size_t = unsigned int]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::PriorBoxLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = unsigned int; std::string = std::basic_string<char>; size_t = unsigned int]", "cv::dnn::PriorBoxLayerImpl::PriorBoxLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::dnn::PriorBoxLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::PriorBoxLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v113PriorBoxLayerE", "N2cv3dnn17PriorBoxLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn17PriorBoxLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual void cv::dnn::MVNLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn19experimental_dnn_v18MVNLayerE", "N2cv3dnn12MVNLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn12MVNLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "cv::dnn::PoolingLayerImpl::PoolingLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual bool cv::dnn::PoolingLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "static void cv::dnn::PoolingLayerImpl::PoolingInvoker::run(const cv::Mat&, cv::Mat&, cv::Mat&, cv::Size, cv::Size, cv::Size, int, bool, int)", "virtual void cv::dnn::PoolingLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual void cv::dnn::PoolingLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "N2cv3dnn16PoolingLayerImpl14PoolingInvokerE", "N2cv3dnn16PoolingLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16PoolingLayerImplENS_14DefaultDeleterIS3_EEEE", "cv::dnn::ShiftLayerImpl::ShiftLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::dnn::ShiftLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "N2cv3dnn19experimental_dnn_v110ShiftLayerE", "N2cv3dnn14ShiftLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14ShiftLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "cv::dnn::BatchNormLayerImpl::BatchNormLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::dnn::BatchNormLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn18BatchNormLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn18BatchNormLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "T cv::dnn::NormalizeBBoxLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = bool; std::string = std::basic_string<char>; size_t = unsigned int]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::dnn::NormalizeBBoxLayerImpl::checkInputs(const std::vector<cv::Mat*>&)", "virtual void cv::dnn::NormalizeBBoxLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn19experimental_dnn_v118NormalizeBBoxLayerE", "N2cv3dnn22NormalizeBBoxLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn22NormalizeBBoxLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "cv::Mat cv::dnn::experimental_dnn_v1::getPlane(const cv::Mat&, int, int)", "virtual void cv::dnn::ScaleLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "N2cv3dnn14ScaleLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14ScaleLayerImplENS_14DefaultDeleterIS3_EEEE", "void cv::dnn::getConvPoolOutParams(const Size&, const Size&, const Size&, const cv::String&, cv::Size&)", "void cv::dnn::getConvolutionKernelParams(const cv::dnn::experimental_dnn_v1::LayerParams&, int&, int&, int&, int&, int&, int&, int&, int&, cv::String&)", "void cv::dnn::getPoolingKernelParams(const cv::dnn::experimental_dnn_v1::LayerParams&, int&, int&, bool&, int&, int&, int&, int&, cv::String&)", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "void cv::dnn::util::getStrideAndPadding(const cv::dnn::experimental_dnn_v1::LayerParams&, int&, int&, int&, int&, cv::String&)", "void cv::dnn::util::getKernelSize(const cv::dnn::experimental_dnn_v1::LayerParams&, int&, int&)", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "T cv::dnn::DetectionOutputLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = float; std::string = std::basic_string<char>; size_t = unsigned int]", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = cv::String]", "T cv::dnn::DetectionOutputLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = int; std::string = std::basic_string<char>; size_t = unsigned int]", "T cv::dnn::DetectionOutputLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = bool; std::string = std::basic_string<char>; size_t = unsigned int]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "T cv::dnn::DetectionOutputLayerImpl::getParameter(const cv::dnn::experimental_dnn_v1::LayerParams&, const string&, const size_t&, bool, const T&) [with T = unsigned int; std::string = std::basic_string<char>; size_t = unsigned int]", "cv::dnn::DetectionOutputLayerImpl::DetectionOutputLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "size_t cv::dnn::DetectionOutputLayerImpl::outputDetections_(int, float*, const LabelBBox&, const std::vector<std::vector<float> >&, const std::map<int, std::vector<int> >&)", "static void cv::dnn::DetectionOutputLayerImpl::ApplyNMSFast(const std::vector<caffe::NormalizedBBox>&, const std::vector<float>&, float, float, float, int, std::vector<int>&)", "size_t cv::dnn::DetectionOutputLayerImpl::processDetections_(const LabelBBox&, const std::vector<std::vector<float> >&, std::vector<std::map<int, std::vector<int> > >&)", "static void cv::dnn::DetectionOutputLayerImpl::DecodeBBox(const caffe::NormalizedBBox&, const std::vector<float>&, cv::dnn::DetectionOutputLayerImpl::CodeType, bool, const caffe::NormalizedBBox&, caffe::NormalizedBBox&) [with bool variance_encoded_in_target = false; cv::dnn::DetectionOutputLayerImpl::CodeType = caffe::PriorBoxParameter_CodeType]", "static void cv::dnn::DetectionOutputLayerImpl::DecodeBBox(const caffe::NormalizedBBox&, const std::vector<float>&, cv::dnn::DetectionOutputLayerImpl::CodeType, bool, const caffe::NormalizedBBox&, caffe::NormalizedBBox&) [with bool variance_encoded_in_target = true; cv::dnn::DetectionOutputLayerImpl::CodeType = caffe::PriorBoxParameter_CodeType]", "static void cv::dnn::DetectionOutputLayerImpl::DecodeBBoxes(const std::vector<caffe::NormalizedBBox>&, const std::vector<std::vector<float> >&, cv::dnn::DetectionOutputLayerImpl::CodeType, bool, bool, const std::vector<caffe::NormalizedBBox>&, std::vector<caffe::NormalizedBBox>&)", "static void cv::dnn::DetectionOutputLayerImpl::DecodeBBoxesAll(const std::vector<std::map<int, std::vector<caffe::NormalizedBBox> > >&, const std::vector<caffe::NormalizedBBox>&, const std::vector<std::vector<float> >&, int, bool, int, int, cv::dnn::DetectionOutputLayerImpl::CodeType, bool, bool, std::vector<std::map<int, std::vector<caffe::NormalizedBBox> > >&)", "static void cv::dnn::DetectionOutputLayerImpl::GetLocPredictions(const float*, int, int, int, bool, std::vector<std::map<int, std::vector<caffe::NormalizedBBox> > >&)", "virtual void cv::dnn::DetectionOutputLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::DetectionOutputLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v120DetectionOutputLayerE", "N2cv3dnn24DetectionOutputLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn24DetectionOutputLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "virtual void cv::dnn::SliceLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::SliceLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v110SliceLayerE", "N2cv3dnn14SliceLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14SliceLayerImplENS_14DefaultDeleterIS3_EEEE", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = double]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "cv::dnn::PaddingLayerImpl::PaddingLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "virtual void cv::dnn::PaddingLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::PaddingLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v112PaddingLayerE", "N2cv3dnn16PaddingLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16PaddingLayerImplENS_14DefaultDeleterIS3_EEEE", "void cv::dnn::PermuteLayerImpl::checkCurrentOrder(int)", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "cv::dnn::PermuteLayerImpl::PermuteLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "static void cv::dnn::PermuteLayerImpl::PermuteInvoker::run(const cv::Mat&, cv::Mat&, const std::vector<unsigned int>&, int)", "virtual void cv::dnn::PermuteLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual void cv::dnn::PermuteLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual bool cv::dnn::PermuteLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v112PermuteLayerE", "N2cv3dnn16PermuteLayerImpl14PermuteInvokerE", "N2cv3dnn16PermuteLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16PermuteLayerImplENS_14DefaultDeleterIS3_EEEE", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "void cv::dnn::initConvDeconvLayerFromCaffe(cv::Ptr<cv::dnn::experimental_dnn_v1::BaseConvolutionLayer>, const cv::dnn::experimental_dnn_v1::LayerParams&)", "virtual int64 cv::dnn::DeConvolutionLayerImpl::getFLOPS(const std::vector<std::vector<int> >&, const std::vector<std::vector<int> >&) const", "virtual void cv::dnn::DeConvolutionLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::DeConvolutionLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual int64 cv::dnn::ConvolutionLayerImpl::getFLOPS(const std::vector<std::vector<int> >&, const std::vector<std::vector<int> >&) const", "static void cv::dnn::ConvolutionLayerImpl::ParallelConv::run(const cv::Mat&, cv::Mat&, const cv::Mat&, const std::vector<float>&, const std::vector<float>&, cv::Size, cv::Size, cv::Size, cv::Size, const cv::dnn::experimental_dnn_v1::ActivationLayer*, int, int)", "virtual void cv::dnn::ConvolutionLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::ConvolutionLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "virtual void cv::dnn::BaseConvolutionLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "N2cv3dnn19experimental_dnn_v120BaseConvolutionLayerE", "N2cv3dnn19experimental_dnn_v116ConvolutionLayerE", "N2cv3dnn24BaseConvolutionLayerImplE", "N2cv3dnn20ConvolutionLayerImpl12ParallelConvE", "N2cv3dnn20ConvolutionLayerImplE", "N2cv3dnn22DeConvolutionLayerImpl13MatMulInvokerE", "N2cv3dnn22DeConvolutionLayerImpl13Col2ImInvokerE", "N2cv3dnn22DeConvolutionLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn20ConvolutionLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn22DeConvolutionLayerImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::dnn::RNNLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual void cv::dnn::RNNLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::RNNLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "virtual void cv::dnn::RNNLayerImpl::setWeights(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&)", "void cv::dnn::tanh(const cv::Mat&, cv::Mat&)", "virtual void cv::dnn::LSTMLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual void cv::dnn::LSTMLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::LSTMLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "virtual void cv::dnn::LSTMLayerImpl::setWeights(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "int cv::dnn::experimental_dnn_v1::total(const MatShape&, int, int)", "virtual void cv::dnn::LSTMLayerImpl::setOutShape(const MatShape&)", "virtual void cv::dnn::LSTMLayerImpl::setProduceCellOutput(bool)", "virtual void cv::dnn::LSTMLayerImpl::setUseTimstampsDim(bool)", "N2cv3dnn19experimental_dnn_v19LSTMLayerE", "N2cv3dnn19experimental_dnn_v18RNNLayerE", "N2cv3dnn13LSTMLayerImplE", "N2cv3dnn12RNNLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn13LSTMLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn12RNNLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "virtual void cv::dnn::CropLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual void cv::dnn::CropLayerImpl::finalize(const std::vector<cv::Mat*>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::CropLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v19CropLayerE", "N2cv3dnn13CropLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn13CropLayerImplENS_14DefaultDeleterIS3_EEEE", "int cv::dnn::experimental_dnn_v1::DictValue::size() const", "T cv::dnn::experimental_dnn_v1::DictValue::get(int) const [with T = long long int]", "const cv::dnn::experimental_dnn_v1::DictValue& cv::dnn::experimental_dnn_v1::Dict::get(const cv::String&) const", "cv::dnn::SplitLayerImpl::SplitLayerImpl(const cv::dnn::experimental_dnn_v1::LayerParams&)", "virtual void cv::dnn::SplitLayerImpl::forward(std::vector<cv::Mat*>&, std::vector<cv::Mat>&, std::vector<cv::Mat>&)", "virtual bool cv::dnn::SplitLayerImpl::getMemoryShapes(const std::vector<std::vector<int> >&, int, std::vector<std::vector<int> >&, std::vector<std::vector<int> >&) const", "N2cv3dnn19experimental_dnn_v110SplitLayerE", "N2cv3dnn14SplitLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14SplitLayerImplENS_14DefaultDeleterIS3_EEEE", "void cv::dnn::experimental_dnn_v1::initializeLayerFactory()", "cv::Mat::Mat(int, int, int, void*, size_t)", "IplImage* cvDecodeImage(const CvMat*, int)", "bool cv::imencode(const cv::String&, cv::InputArray, std::vector<unsigned char>&, const std::vector<int>&)", "cv::Mat cv::imdecode(cv::InputArray, int, cv::Mat*)", "void* cv::imdecode_(const cv::Mat&, int, int, cv::Mat*)", "cv::Mat cv::imdecode(cv::InputArray, int)", "bool cv::imwrite_(const cv::String&, const cv::Mat&, const std::vector<int>&, bool)", "bool cv::imwrite(const cv::String&, cv::InputArray, const std::vector<int>&)", "bool cv::imreadmulti(const cv::String&, std::vector<cv::Mat>&, int)", "cv::Mat cv::imread(const cv::String&, int)", "*N12_GLOBAL__N_116ByteStreamBufferE", "N2cv6detail12PtrOwnerImplINS_10BmpDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10BmpEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMEncoderENS_14DefaultDeleterIS2_EEEE", "virtual void cv::BaseImageEncoder::throwOnEror() const", "N2cv16BaseImageDecoderE", "N2cv16BaseImageEncoderE", "*N2cv5._268E", "N2cv10PxMDecoderE", "N2cv10PxMEncoderE", "N2cv10ExrDecoderE", "N2cv10ExrEncoderE", "N2cv11WebPDecoderE", "N2cv11WebPEncoderE", "N2cv16SunRasterDecoderE", "N2cv16SunRasterEncoderE", "N2cv11JpegDecoderE", "N2cv11JpegEncoderE", "N2cv11TiffDecoderE", "N2cv11TiffEncoderE", "N2cv13Jpeg2KDecoderE", "N2cv13Jpeg2KEncoderE", "*N2cv5._268E", "ENDHDR", "HEIGHT", "WIDTH", "DEPTH", "MAXVAL", "TUPLTYPE", "N2cv10PAMDecoderE", "N2cv10PAMEncoderE", "N2cv10BmpEncoderE", "virtual bool cv::HdrEncoder::write(const cv::Mat&, const std::vector<int>&)", "N2cv10HdrDecoderE", "N2cv10HdrEncoderE", "static void cv::PngEncoder::writeDataToBuf(void*, uchar*, size_t)", "static void cv::PngDecoder::readDataFromBuf(void*, uchar*, size_t)", "N2cv10PngDecoderE", "N2cv10PngEncoderE", "virtual bool cv::RBaseStream::open(const cv::Mat&)", "*N2cv5._268E", "N2cv11RBaseStreamE", "N2cv12RLByteStreamE", "N2cv12RMByteStreamE", "N2cv11WBaseStreamE", "N2cv12WLByteStreamE", "N2cv12WMByteStreamE", "int rgbe_error(int, const char*)", "virtual cv::VideoWriter& cv::VideoWriter::operator<<(const cv::Mat&)", "virtual void cv::VideoWriter::write(const cv::Mat&)", "bool cv::VideoWriter::open(const cv::String&, int, int, double, cv::Size, bool)", "virtual cv::VideoCapture& cv::VideoCapture::operator>>(cv::UMat&)", "virtual bool cv::VideoCapture::read(cv::OutputArray)", "virtual bool cv::VideoCapture::retrieve(cv::OutputArray, int)", "virtual bool cv::VideoCapture::grab()", "virtual void cv::VideoCapture::release()", "bool cv::VideoCapture::open(int, int)", "virtual bool cv::VideoCapture::open(int)", "virtual bool cv::VideoCapture::open(const cv::String&)", "virtual bool cv::VideoCapture::open(const cv::String&, int)", "virtual cv::VideoCapture::~VideoCapture()", "cv::VideoCapture::VideoCapture(int)", "cv::VideoCapture::VideoCapture(const cv::String&)", "cv::VideoCapture::VideoCapture(const cv::String&, int)", "N2cv12VideoCaptureE", "N2cv11VideoWriterE", "N2cv6detail12PtrOwnerImplI9CvCaptureNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvVideoWriterNS_14DefaultDeleterIS2_EEEE", "char* icvExtractPattern(const char*, unsigned int*)", "9CvCapture", "13CvVideoWriter", "16CvCapture_Images", "20CvVideoWriter_Images", "bool cv::mjpeg::MotionJpegWriter::open(const cv::String&, double, cv::Size, bool)", "static bool cv::mjpeg::BitStream::createEncodeHuffmanTable(const int*, unsigned int*, int)", "void cv::mjpeg::BitStream::putBytes(const uchar*, int)", "void cv::mjpeg::MotionJpegWriter::writeFrameData(const uchar*, int, int, int)", "virtual void cv::mjpeg::MotionJpegWriter::write(cv::InputArray)", "void cv::mjpeg::BitStream::writeBlock()", "void cv::mjpeg::BitStream::patchInt(int, size_t)", "N2cv5mjpeg16MotionJpegWriterE", "N2cv5mjpeg12MjpegEncoderE", "N2cv6detail12PtrOwnerImplINS_5mjpeg16MotionJpegWriterENS_14DefaultDeleterIS3_EEEE", "bool cv::AviMjpegStream::parseHdrlList(cv::MjpegInputStream&)", "N2cv13IVideoCaptureE", "N2cv17MotionJpegCaptureE", "N2cv6detail12PtrOwnerImplINS_17MotionJpegCaptureENS_14DefaultDeleterIS2_EEEE", "void cv::setWindowTitle(const cv::String&, const cv::String&)", "int cv::createButton(const cv::String&, cv::ButtonCallback, void*, int, bool)", "void cv::loadWindowParameters(const cv::String&)", "void cv::saveWindowParameters(const cv::String&)", "void cv::stopLoop()", "int cv::startLoop(int (*)(int, char**), int, char**)", "void cv::displayOverlay(const cv::String&, const cv::String&, int)", "void cv::displayStatusBar(const cv::String&, const cv::String&, int)", "void cv::addText(const cv::Mat&, const cv::String&, cv::Point, const cv::String&, int, cv::Scalar, int, int, int)", "void cv::addText(const cv::Mat&, const cv::String&, cv::Point, const cv::QtFont&)", "cv::QtFont cv::fontQt(const cv::String&, int, cv::Scalar, int, int, int)", "void cvUpdateWindow(const char*)", "void cvSetOpenGlContext(const char*)", "void cvSetOpenGlDrawCallback(const char*, CvOpenGlDrawCallback, void*)", "void cv::imshow(const cv::String&, const cv::ogl::Texture2D&)", "void cv::imshow(const cv::String&, cv::InputArray)", "void cv::updateWindow(const cv::String&)", "void cv::setOpenGlContext(const cv::String&)", "void cv::setOpenGlDrawCallback(const cv::String&, cv::OpenGlDrawCallback, void*)", "int cv::startWindowThread()", "int cv::getMouseWheelDelta(int)", "void cv::setMouseCallback(const cv::String&, cv::MouseCallback, void*)", "int cv::getTrackbarPos(const cv::String&, const cv::String&)", "void cv::setTrackbarMin(const cv::String&, const cv::String&, int)", "void cv::setTrackbarMax(const cv::String&, const cv::String&, int)", "void cv::setTrackbarPos(const cv::String&, const cv::String&, int)", "int cv::createTrackbar(const cv::String&, const cv::String&, int*, int, cv::TrackbarCallback, void*)", "int cv::waitKey(int)", "int cv::waitKeyEx(int)", "double cv::getWindowProperty(const cv::String&, int)", "void cv::setWindowProperty(const cv::String&, int, double)", "void cv::moveWindow(const cv::String&, int, int)", "void cv::resizeWindow(const cv::String&, int, int)", "void cv::destroyAllWindows()", "void cv::destroyWindow(const cv::String&)", "void cv::namedWindow(const cv::String&, int)", "static void cv::KeyPointsFilter::runByPixelsMask(std::vector<cv::KeyPoint>&, const cv::Mat&)", "static void cv::KeyPointsFilter::runByKeypointSize(std::vector<cv::KeyPoint>&, float, float)", "virtual void cv::GFTTDetector_Impl::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "N2cv12GFTTDetectorE", "N2cv17GFTTDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_17GFTTDetector_ImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::FastFeatureDetector_Impl::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "void cv::FAST(cv::InputArray, std::vector<cv::KeyPoint>&, int, bool)", "void cv::FAST(cv::InputArray, std::vector<cv::KeyPoint>&, int, bool, int)", "N2cv19FastFeatureDetectorE", "N2cv24FastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_24FastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::drawMatches(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputArray, const std::vector<cv::KeyPoint>&, const std::vector<std::vector<cv::DMatch> >&, cv::InputOutputArray, const Scalar&, const Scalar&, const std::vector<std::vector<char> >&, int)", "void cv::_prepareImgAndDrawKeypoints(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputOutputArray, cv::Mat&, cv::Mat&, const Scalar&, int)", "void cv::drawMatches(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputArray, const std::vector<cv::KeyPoint>&, const std::vector<cv::DMatch>&, cv::InputOutputArray, const Scalar&, const Scalar&, const std::vector<char>&, int)", "void cv::_drawKeypoint(cv::InputOutputArray, const cv::KeyPoint&, const Scalar&, int)", "void cv::drawKeypoints(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputOutputArray, const Scalar&, int)", "void cv::makeAgastOffsets(int*, int, int)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::KAZE_Impl::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "N2cv4KAZEE", "N2cv9KAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_9KAZE_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::BOWImgDescriptorExtractor::compute(cv::InputArray, cv::OutputArray, std::vector<std::vector<int> >*)", "void cv::BOWImgDescriptorExtractor::compute(cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, std::vector<std::vector<int> >*, cv::Mat*)", "virtual cv::Mat cv::BOWKMeansTrainer::cluster(const cv::Mat&) const", "virtual cv::Mat cv::BOWKMeansTrainer::cluster() const", "void cv::BOWTrainer::add(const cv::Mat&)", "N2cv10BOWTrainerE", "N2cv16BOWKMeansTrainerE", "N2cv25BOWImgDescriptorExtractorE", "static void cv::BriskLayer::twothirdsample(const cv::Mat&, cv::Mat&)", "static void cv::BriskLayer::halfsample(const cv::Mat&, cv::Mat&)", "float cv::BriskScaleSpace::getScoreMaxAbove(int, int, int, int, bool&, float&, float&) const", "float cv::BriskScaleSpace::getScoreMaxBelow(int, int, int, int, bool&, float&, float&) const", "void cv::BRISK_Impl::computeDescriptorsAndOrOrientation(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool, bool, bool) const", "void cv::BRISK_Impl::generateKernel(const std::vector<float>&, const std::vector<int>&, float, float, const std::vector<int>&)", "N2cv5BRISKE", "N2cv10BRISK_ImplE", "N2cv6detail12PtrOwnerImplINS_10BRISK_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::computeOrbDescriptors(const cv::Mat&, const std::vector<cv::Rect_<int> >&, const std::vector<float>&, std::vector<cv::KeyPoint>&, cv::Mat&, const std::vector<cv::Point_<int> >&, int, int)", "void cv::HarrisResponses(const cv::Mat&, const std::vector<cv::Rect_<int> >&, std::vector<cv::KeyPoint>&, int, float)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::ORB_Impl::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "N2cv3ORBE", "N2cv8ORB_ImplE", "N2cv6detail12PtrOwnerImplINS_8ORB_ImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::AKAZE_Impl::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "N2cv5AKAZEE", "N2cv10AKAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_10AKAZE_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::makeOffsets(int*, int, int)", "void cv::KAZEFeatures::Feature_Description(std::vector<cv::KeyPoint>&, cv::Mat&)", "int cv::KAZEFeatures::Create_Nonlinear_Scale_Space(const cv::Mat&)", "N2cv32MultiscaleDerivativesKAZEInvokerE", "N2cv23FindExtremumKAZEInvokerE", "N2cv23KAZE_Descriptor_InvokerE", "void cv::generateDescriptorSubsample(cv::Mat&, cv::Mat&, int, int, int)", "void cv::Upright_MLDB_Descriptor_Subset_Invoker::Get_Upright_MLDB_Descriptor_Subset(const cv::KeyPoint&, unsigned char*, int) const", "void cv::MLDB_Descriptor_Subset_Invoker::Get_MLDB_Descriptor_Subset(const cv::KeyPoint&, unsigned char*, int) const", "void cv::MLDB_Full_Descriptor_Invoker::Get_MLDB_Full_Descriptor(const cv::KeyPoint&, unsigned char*, int) const", "void cv::MLDB_Full_Descriptor_Invoker::MLDB_Fill_Values(float*, int, int, float, float, float, float, float) const", "void cv::Upright_MLDB_Full_Descriptor_Invoker::Get_Upright_MLDB_Full_Descriptor(const cv::KeyPoint&, unsigned char*, int) const", "void cv::MSURF_Descriptor_64_Invoker::Get_MSURF_Descriptor_64(const cv::KeyPoint&, float*, int) const", "void cv::MSURF_Upright_Descriptor_64_Invoker::Get_MSURF_Upright_Descriptor_64(const cv::KeyPoint&, float*, int) const", "void cv::AKAZEFeatures::Compute_Keypoints_Orientation(std::vector<cv::KeyPoint>&) const", "void cv::quantized_counting_sort(const float*, int, float, int, int*, int*)", "cv::Sample_Derivative_Response_Radius6(const cv::Mat&, const cv::Mat&, int, int, int, float*, float*)::gtable::gtable()", "void cv::Sample_Derivative_Response_Radius6(const cv::Mat&, const cv::Mat&, int, int, int, float*, float*)", "void cv::AKAZEFeatures::Compute_Descriptors(std::vector<cv::KeyPoint>&, cv::OutputArray)", "void cv::AKAZEFeatures::Do_Subpixel_Refinement(std::vector<cv::Mat>&, std::vector<cv::KeyPoint>&)", "void cv::AKAZEFeatures::Find_Scale_Space_Extrema(std::vector<cv::Mat>&)", "void cv::AKAZEFeatures::Feature_Detection(std::vector<cv::KeyPoint>&)", "void cv::AKAZEFeatures::Compute_Determinant_Hessian_Response()", "void cv::compute_determinant(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, float)", "void cv::non_linear_diffusion_step(cv::InputArray, cv::InputArray, cv::OutputArray, float)", "void cv::compute_diffusivity(cv::InputArray, cv::InputArray, cv::OutputArray, float, int)", "float cv::compute_kcontrast(const cv::Mat&, const cv::Mat&, float, int)", "void cv::AKAZEFeatures::Create_Nonlinear_Scale_Space(cv::InputArray)", "void cv::nld_step_scalar_one_lane(const cv::Mat&, const cv::Mat&, cv::Mat&, float, int, int)", "void cv::AKAZEFeatures::Allocate_Memory_Evolution()", "N2cv28NonLinearScalarDiffusionStepE", "N2cv26DeterminantHessianResponseE", "N2cv22FindKeypointsSameScaleE", "N2cv35MSURF_Upright_Descriptor_64_InvokerE", "N2cv27MSURF_Descriptor_64_InvokerE", "N2cv36Upright_MLDB_Full_Descriptor_InvokerE", "N2cv38Upright_MLDB_Descriptor_Subset_InvokerE", "N2cv28MLDB_Full_Descriptor_InvokerE", "N2cv30MLDB_Descriptor_Subset_InvokerE", "N2cv26ComputeKeypointOrientationE", "void cv::nld_step_scalar(cv::Mat&, const cv::Mat&, cv::Mat&, float)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::compute_derivative_kernels(cv::OutputArray, cv::OutputArray, int, int, int)", "float cv::compute_k_percentile(const cv::Mat&, float, float, int, int, int)", "void cv::pm_g2(cv::InputArray, cv::InputArray, cv::OutputArray, float)", "N2cv23Nld_Step_Scalar_InvokerE", "virtual void cv::MSER_Impl::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "void cv::MSER_Impl::pass(const cv::Mat&, std::vector<std::vector<cv::Point_<int> > >&, std::vector<cv::Rect_<int> >&, cv::Size, const int*, int)", "virtual void cv::MSER_Impl::detectRegions(cv::InputArray, std::vector<std::vector<cv::Point_<int> > >&, std::vector<cv::Rect_<int> >&)", "N2cv9MSER_ImplE", "N2cv6detail12PtrOwnerImplINS_9MSER_ImplENS_14DefaultDeleterIS2_EEEE", "void IntersectAreaCounter::operator()(const BlockedRange&)", "int cv::getNearestPoint(const std::vector<cv::Point_<float> >&, float)", "float cv::getRecall(const std::vector<cv::Point_<float> >&, float)", "void cv::computeRecallPrecisionCurve(const std::vector<std::vector<cv::DMatch> >&, const std::vector<std::vector<unsigned char> >&, std::vector<cv::Point_<float> >&)", "void cv::evaluateFeatureDetector(const cv::Mat&, const cv::Mat&, const cv::Mat&, std::vector<cv::KeyPoint>*, std::vector<cv::KeyPoint>*, float&, int&, const cv::Ptr<cv::Feature2D>&)", "static void EllipticKeyPoint::calcProjection(const std::vector<EllipticKeyPoint>&, const cv::Mat_<double>&, std::vector<EllipticKeyPoint>&)", "static void EllipticKeyPoint::convert(const std::vector<cv::KeyPoint>&, std::vector<EllipticKeyPoint>&)", "N3tbb10interface98internal13finish_reduceI20IntersectAreaCounterEE", "N3tbb10interface98internal12start_reduceINS_13blocked_rangeIiEE20IntersectAreaCounterKNS_16auto_partitionerEEE", "virtual void cv::FlannBasedMatcher::radiusMatchImpl(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, float, cv::InputArrayOfArrays, bool)", "virtual void cv::FlannBasedMatcher::knnMatchImpl(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, int, cv::InputArrayOfArrays, bool)", "virtual cv::Ptr<cv::DescriptorMatcher> cv::FlannBasedMatcher::clone(bool) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = short int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = short unsigned int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = char]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = unsigned char]", "virtual void cv::FlannBasedMatcher::read(const cv::FileNode&)", "virtual void cv::FlannBasedMatcher::train()", "virtual void cv::FlannBasedMatcher::add(cv::InputArrayOfArrays)", "cv::FlannBasedMatcher::FlannBasedMatcher(const cv::Ptr<cv::flann::IndexParams>&, const cv::Ptr<cv::flann::SearchParams>&)", "static cv::Ptr<cv::DescriptorMatcher> cv::DescriptorMatcher::create(int)", "static cv::Ptr<cv::DescriptorMatcher> cv::DescriptorMatcher::create(const cv::String&)", "virtual void cv::BFMatcher::radiusMatchImpl(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, float, cv::InputArrayOfArrays, bool)", "virtual void cv::BFMatcher::knnMatchImpl(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, int, cv::InputArrayOfArrays, bool)", "void cv::DescriptorMatcher::radiusMatch(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, float, cv::InputArrayOfArrays, bool)", "void cv::DescriptorMatcher::knnMatch(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, int, cv::InputArrayOfArrays, bool)", "void cv::DescriptorMatcher::checkMasks(cv::InputArrayOfArrays, int) const", "void cv::convertMatches(const std::vector<std::vector<cv::DMatch> >&, std::vector<cv::DMatch>&)", "void cv::DescriptorMatcher::match(cv::InputArray, std::vector<cv::DMatch>&, cv::InputArrayOfArrays)", "void cv::DescriptorMatcher::radiusMatch(cv::InputArray, cv::InputArray, std::vector<std::vector<cv::DMatch> >&, float, cv::InputArray, bool) const", "void cv::DescriptorMatcher::knnMatch(cv::InputArray, cv::InputArray, std::vector<std::vector<cv::DMatch> >&, int, cv::InputArray, bool) const", "void cv::DescriptorMatcher::match(cv::InputArray, cv::InputArray, std::vector<cv::DMatch>&, cv::InputArray) const", "virtual void cv::DescriptorMatcher::add(cv::InputArrayOfArrays)", "void cv::DescriptorMatcher::DescriptorCollection::getLocalIdx(int, int&, int&) const", "const cv::Mat cv::DescriptorMatcher::DescriptorCollection::getDescriptor(int) const", "const cv::Mat cv::DescriptorMatcher::DescriptorCollection::getDescriptor(int, int) const", "void cv::DescriptorMatcher::DescriptorCollection::set(const std::vector<cv::Mat>&)", "N2cv17DescriptorMatcher20DescriptorCollectionE", "N2cv17DescriptorMatcherE", "N2cv9BFMatcherE", "N2cv17FlannBasedMatcherE", "N2cv6detail12PtrOwnerImplINS_9BFMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17FlannBasedMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann5IndexENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann11IndexParamsENS_14DefaultDeleterIS3_EEEE", "void cv::AGAST(cv::InputArray, std::vector<cv::KeyPoint>&, int, bool, int)", "virtual void cv::AgastFeatureDetector_Impl::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "void cv::AGAST(cv::InputArray, std::vector<cv::KeyPoint>&, int, bool)", "N2cv20AgastFeatureDetectorE", "N2cv25AgastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_25AgastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::SimpleBlobDetectorImpl::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "virtual void cv::SimpleBlobDetectorImpl::findBlobs(cv::InputArray, cv::InputArray, std::vector<cv::SimpleBlobDetectorImpl::Center>&) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "N2cv18SimpleBlobDetectorE", "N2cv22SimpleBlobDetectorImplE", "N2cv6detail12PtrOwnerImplINS_22SimpleBlobDetectorImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::Feature2D::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "virtual void cv::Feature2D::compute(cv::InputArrayOfArrays, std::vector<std::vector<cv::KeyPoint> >&, cv::OutputArrayOfArrays)", "virtual void cv::Feature2D::compute(cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray)", "virtual void cv::Feature2D::detect(cv::InputArrayOfArrays, std::vector<std::vector<cv::KeyPoint> >&, cv::InputArrayOfArrays)", "virtual void cv::Feature2D::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "N2cv9Feature2DE", "void cvConvertPointsHomogeneous(const CvMat*, CvMat*)", "void cvComputeCorrespondEpilines(const CvMat*, int, const CvMat*, CvMat*)", "int cvFindFundamentalMat(const CvMat*, const CvMat*, CvMat*, int, double, double, CvMat*)", "bool CvLevMarq::updateAlt(const CvMat*&, CvMat*&, CvMat*&, double*&)", "bool p3p::solve(cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&)", "double cv::sampsonDistance(cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::convertPointsHomogeneous(cv::InputArray, cv::OutputArray)", "void cv::convertPointsToHomogeneous(cv::InputArray, cv::OutputArray)", "void cv::convertPointsFromHomogeneous(cv::InputArray, cv::OutputArray)", "void cv::computeCorrespondEpilines(cv::InputArray, int, cv::InputArray, cv::OutputArray)", "cv::Mat cv::findFundamentalMat(cv::InputArray, cv::InputArray, int, double, double, cv::OutputArray)", "static void cv::SVD::compute(const cv::Matx<_Tp, m, n>&, cv::Matx<_Tp, nm, 1>&, cv::Matx<_Tp, m, l>&, cv::Matx<_Tp, m, n>&) [with _Tp = double; int m = 3; int n = 3; int nm = 3]", "int cv::run8Point(const cv::Mat&, const cv::Mat&, cv::Mat&)", "cv::Mat cv::findHomography(cv::InputArray, cv::InputArray, int, double, cv::OutputArray, int, double)", "virtual bool cv::HomographyRefineCallback::compute(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "N2cv8LMSolver8CallbackE", "N2cv19PointSetRegistrator8CallbackE", "N2cv27HomographyEstimatorCallbackE", "N2cv24HomographyRefineCallbackE", "N2cv19FMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_27HomographyEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24HomographyRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19FMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "void cv::adjust3rdMatrix(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "void cv::decomposeProjectionMatrix(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "cv::Vec3d cv::RQDecomp3x3(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "cv::Mat cv::getOptimalNewCameraMatrix(cv::InputArray, cv::InputArray, cv::Size, double, cv::Size, cv::Rect*, bool)", "bool cv::stereoRectifyUncalibrated(cv::InputArray, cv::InputArray, cv::InputArray, cv::Size, cv::OutputArray, cv::OutputArray, double)", "void cv::calibrationMatrixValues(cv::InputArray, cv::Size, double, double, double&, double&, double&, cv::Point2d&, double&)", "cv::Mat cv::prepareDistCoeffs(cv::Mat&, int, int)", "double cv::calibrateCamera(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::Size, cv::InputOutputArray, cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, cv::TermCriteria)", "double cv::calibrateCamera(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::Size, cv::InputOutputArray, cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, int, cv::TermCriteria)", "void cv::collectCalibrationData(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::Mat&, cv::Mat&, cv::Mat*, cv::Mat&)", "cv::Mat cv::initCameraMatrix2D(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::Size, double)", "void cv::projectPoints(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, double)", "void cv::matMulDeriv(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "void cv::Rodrigues(cv::InputArray, cv::OutputArray, cv::OutputArray)", "void cvDecomposeProjectionMatrix(const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvPoint3D64f*)", "void cvRQDecomp3x3(const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvPoint3D64f*)", "void cvReprojectImageTo3D(const CvArr*, CvArr*, const CvMat*, int)", "void cv::reprojectImageTo3D(cv::InputArray, cv::OutputArray, cv::InputArray, bool, int)", "int cvStereoRectifyUncalibrated(const CvMat*, const CvMat*, const CvMat*, CvSize, CvMat*, CvMat*, double)", "void cvCalibrationMatrixValues(const CvMat*, CvSize, double, double, double*, double*, double*, CvPoint2D64f*, double*)", "double cvCalibrateCamera2Internal(const CvMat*, const CvMat*, const CvMat*, CvSize, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, int, CvTermCriteria)", "void cvInitIntrinsicParams2D(const CvMat*, const CvMat*, const CvMat*, CvSize, CvMat*, double)", "void cvFindExtrinsicCameraParams2(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, int)", "void cvProjectPoints2(const CvMat*, const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, double)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = double; int m = 3; int n = 3]", "int cvRodrigues2(const CvMat*, CvMat*, CvMat*)", "void cvComposeRT(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*)", "void cvCalcMatMulDeriv(const CvMat*, const CvMat*, CvMat*, CvMat*)", "N2cv8RHO_HESTE", "N2cv13RHO_HEST_REFCE", "N2cv6detail12PtrOwnerImplINS_13RHO_HEST_REFCENS_14DefaultDeleterIS2_EEEE", "cv::Mat cv::estimateAffinePartial2D(cv::InputArray, cv::InputArray, cv::OutputArray, int, double, size_t, double, size_t)", "cv::Mat cv::estimateAffine2D(cv::InputArray, cv::InputArray, cv::OutputArray, int, double, size_t, double, size_t)", "int cv::estimateAffine3D(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, double, double)", "virtual bool cv::AffinePartial2DRefineCallback::compute(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "virtual bool cv::Affine2DRefineCallback::compute(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "virtual void cv::Affine2DEstimatorCallback::computeError(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray) const", "virtual bool cv::Affine3DEstimatorCallback::checkSubset(cv::InputArray, cv::InputArray, int) const", "virtual void cv::Affine3DEstimatorCallback::computeError(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray) const", "virtual bool cv::LMeDSPointSetRegistrator::run(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray) const", "int cv::RANSACPointSetRegistrator::findInliers(const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, double) const", "bool cv::RANSACPointSetRegistrator::getSubset(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, cv::RNG&, int) const", "virtual bool cv::RANSACPointSetRegistrator::run(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray) const", "int cv::RANSACUpdateNumIters(double, double, int, int)", "N2cv19PointSetRegistratorE", "N2cv25RANSACPointSetRegistratorE", "N2cv24LMeDSPointSetRegistratorE", "N2cv25Affine3DEstimatorCallbackE", "N2cv25Affine2DEstimatorCallbackE", "N2cv32AffinePartial2DEstimatorCallbackE", "N2cv22Affine2DRefineCallbackE", "N2cv29AffinePartial2DRefineCallbackE", "N2cv6detail12PtrOwnerImplINS_25RANSACPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24LMeDSPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine3DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22Affine2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_32AffinePartial2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29AffinePartial2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "int cv::solveP3P(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, int)", "void cv::Mat::push_back(const _Tp&) [with _Tp = int]", "bool cv::solvePnPRansac(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, bool, int, float, double, cv::OutputArray, int)", "bool cv::solvePnP(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, bool, int)", "N2cv17PnPRansacCallbackE", "N2cv6detail12PtrOwnerImplINS_17PnPRansacCallbackENS_14DefaultDeleterIS2_EEEE", "int checkChessboardBinary(const cv::Mat&, const Size&)", "int checkChessboard(const cv::Mat&, const Size&)", "bool cv::findCirclesGrid(cv::InputArray, cv::Size, cv::OutputArray, int, const cv::Ptr<cv::Feature2D>&, cv::CirclesGridFinderParameters)", "void cv::drawChessboardCorners(cv::InputOutputArray, cv::Size, cv::InputArray, bool)", "bool cv::findChessboardCorners(cv::InputArray, cv::Size, cv::OutputArray, int)", "void cvDrawChessboardCorners(CvArr*, CvSize, CvPoint2D32f*, int, int)", "int icvGenerateQuads(CvCBQuad**, CvCBCorner**, CvMemStorage*, const cv::Mat&, int, int*)", "bool icvBinarizationHistogramBased(cv::Mat&)", "int cvFindChessboardCorners(const void*, CvSize, CvPoint2D32f*, int*, int)", "void cvPOSIT(CvPOSITObject*, CvPoint2D32f*, double, CvTermCriteria, float*, float*)", "CvPOSITObject* cvCreatePOSITObject(CvPoint3D32f*, int)", "int cv::decomposeHomographyMat(cv::InputArray, cv::InputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = double; int m = 3; int n = 1]", "cv::Mat::Mat(int, int, int, void*, size_t)", "N2cv23HomographyDecomposition16HomographyDecompE", "N2cv23HomographyDecomposition21HomographyDecompInriaE", "N2cv6detail12PtrOwnerImplINS_23HomographyDecomposition21HomographyDecompInriaENS_14DefaultDeleterIS3_EEEE", "virtual void cv::StereoBMImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FindStereoCorrespInvoker::FindStereoCorrespInvoker(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::StereoBMParams*, int, size_t, bool, cv::Rect, cv::Mat&, cv::Mat&)", "virtual void cv::StereoBMImpl::compute(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::findStereoCorrespondenceBM(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, const cv::StereoBMParams&, uchar*, int, int, int) [with mType = int; uchar = unsigned char]", "void cv::findStereoCorrespondenceBM(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, const cv::StereoBMParams&, uchar*, int, int, int) [with mType = short int; uchar = unsigned char]", "N2cv13StereoMatcherE", "N2cv8StereoBME", "N2cv16PrefilterInvokerE", "N2cv24FindStereoCorrespInvokerE", "N2cv12StereoBMImplE", "N2cv6detail12PtrOwnerImplINS_12StereoBMImplENS_14DefaultDeleterIS2_EEEE", "size_t CirclesGridFinder::getFirstCorner(std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&) const", "void CirclesGridFinder::getCornerSegments(const std::vector<std::vector<unsigned int> >&, std::vector<std::vector<CirclesGridFinder::Segment> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&) const", "void CirclesGridFinder::getAsymmetricHoles(std::vector<cv::Point_<float> >&) const", "size_t CirclesGridFinder::findLongestPath(std::vector<Graph>&, Path&)", "void computePredecessorMatrix(const cv::Mat&, int, cv::Mat&)", "void CirclesGridFinder::findBasis(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&, std::vector<Graph>&)", "void CirclesGridFinder::filterOutliersByDensity(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "float CirclesGridFinder::computeGraphConfidence(const std::vector<Graph>&, bool, const std::vector<unsigned int>&, const std::vector<unsigned int>&)", "static void CirclesGridFinder::insertWinner(float, float, float, bool, const std::vector<unsigned int>&, const std::vector<unsigned int>&, std::vector<std::vector<unsigned int> >&)", "void CirclesGridFinder::findCandidateHoles(std::vector<unsigned int>&, std::vector<unsigned int>&, bool, cv::Point2f, std::vector<unsigned int>&, std::vector<unsigned int>&)", "void CirclesGridFinder::findCandidateLine(std::vector<unsigned int>&, size_t, bool, cv::Point2f, std::vector<unsigned int>&)", "static cv::Mat CirclesGridFinder::rectifyGrid(cv::Size, const std::vector<cv::Point_<float> >&, const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "bool CirclesGridFinder::isDetectionCorrect()", "bool CirclesGridFinder::findHoles()", "CirclesGridFinder::CirclesGridFinder(cv::Size, const std::vector<cv::Point_<float> >&, const cv::CirclesGridFinderParameters&)", "const Neighbors& Graph::getNeighbors(size_t) const", "void Graph::floydWarshall(cv::Mat&, int) const", "size_t Graph::getDegree(size_t) const", "bool Graph::areVerticesAdjacent(size_t, size_t) const", "void Graph::removeEdge(size_t, size_t)", "void Graph::addEdge(size_t, size_t)", "void Graph::addVertex(size_t)", "void CirclesGridClusterFinder::findOutsideCorners(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "void CirclesGridClusterFinder::findCorners(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "virtual int cv::LMSolverImpl::run(cv::InputOutputArray) const", "N2cv8LMSolverE", "N2cv12LMSolverImplE", "N2cv6detail12PtrOwnerImplINS_12LMSolverImplENS_14DefaultDeleterIS2_EEEE", "void cvFindStereoCorrespondenceBM(const CvArr*, const CvArr*, CvArr*, CvStereoBMState*)", "void cvReleaseStereoBMState(CvStereoBMState**)", "void cv::correctMatches(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "void cv::triangulatePoints(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "void cvCorrectMatches(CvMat*, CvMat*, CvMat*, CvMat*, CvMat*)", "static void cv::SVD::compute(const cv::Matx<_Tp, m, n>&, cv::Matx<_Tp, nm, 1>&, cv::Matx<_Tp, m, l>&, cv::Matx<_Tp, m, n>&) [with _Tp = double; int m = 4; int n = 4; int nm = 4]", "void cvTriangulatePoints(CvMat*, CvMat*, CvMat*, CvMat*, CvMat*)", "void cv::findCorner(const std::vector<cv::Point_<float> >&, cv::Point2f, cv::Point2f&)", "bool cv::find4QuadCornerSubpix(cv::InputArray, cv::InputOutputArray, cv::Size)", "cv::Vec3d cv::internal::median3d(cv::InputArray)", "double cv::internal::median(const cv::Mat&)", "void cv::internal::dAB(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "void cv::internal::EstimateUncertainties(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::internal::IntrinsicParams&, cv::InputArray, cv::InputArray, cv::internal::IntrinsicParams&, cv::Vec2d&, double, int, double&)", "void cv::internal::ComputeJacobians(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::internal::IntrinsicParams&, cv::InputArray, cv::InputArray, const int&, const double&, cv::Mat&, cv::Mat&)", "void cv::internal::CalibrateExtrinsics(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::internal::IntrinsicParams&, int, double, cv::InputOutputArray, cv::InputOutputArray)", "void cv::internal::InitExtrinsics(const cv::Mat&, const cv::Mat&, const cv::internal::IntrinsicParams&, cv::Mat&, cv::Mat&)", "cv::Mat cv::internal::NormalizePixels(const cv::Mat&, const cv::internal::IntrinsicParams&)", "cv::Mat cv::internal::ComputeHomography(cv::Mat, cv::Mat)", "void cv::internal::ComputeExtrinsicRefine(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::internal::IntrinsicParams&, double)", "void cv::internal::projectPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, const cv::internal::IntrinsicParams&, cv::OutputArray)", "cv::internal::IntrinsicParams& cv::internal::IntrinsicParams::operator=(const cv::Mat&)", "cv::internal::IntrinsicParams cv::internal::IntrinsicParams::operator+(const cv::Mat&)", "cv::Mat::operator cv::Vec<_Tp, m>() const [with _Tp = double; int n = 3]", "void cv::{anonymous}::subMatrix(const cv::Mat&, cv::Mat&, const std::vector<unsigned char>&, const std::vector<unsigned char>&)", "double cv::fisheye::stereoCalibrate(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::InputOutputArray, cv::InputOutputArray, cv::InputOutputArray, cv::InputOutputArray, cv::Size, cv::OutputArray, cv::OutputArray, int, cv::TermCriteria)", "double cv::fisheye::calibrate(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const Size&, cv::InputOutputArray, cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, int, cv::TermCriteria)", "void cv::fisheye::stereoRectify(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, const Size&, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, const Size&, double, double)", "void cv::fisheye::estimateNewCameraMatrixForUndistortRectify(cv::InputArray, cv::InputArray, const Size&, cv::InputArray, cv::OutputArray, double, const Size&, double)", "void cv::fisheye::undistortImage(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, const Size&)", "void cv::fisheye::initUndistortRectifyMap(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, const Size&, int, cv::OutputArray, cv::OutputArray)", "void cv::fisheye::undistortPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::fisheye::distortPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, double)", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = float; int m = 3; int n = 3]", "void cv::fisheye::projectPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, double, cv::OutputArray)", "void cv::fisheye::projectPoints(cv::InputArray, cv::OutputArray, const Affine3d&, cv::InputArray, cv::InputArray, double, cv::OutputArray)", "void cv::decomposeEssentialMat(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "int cv::recoverPose(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, double, cv::InputOutputArray, cv::OutputArray)", "cv::Mat cv::findEssentialMat(cv::InputArray, cv::InputArray, double, cv::Point2d, int, double, double, cv::OutputArray)", "cv::Mat cv::findEssentialMat(cv::InputArray, cv::InputArray, cv::InputArray, int, double, double, cv::OutputArray)", "N2cv19EMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_19EMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "int cv::ap3p::solve(std::vector<cv::Mat>&, std::vector<cv::Mat>&, const cv::Mat&, const cv::Mat&)", "bool cv::ap3p::solve(cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&)", "void cv::validateDisparity(cv::InputOutputArray, cv::InputArray, int, int, int)", "void cv::filterSpeckles(cv::InputOutputArray, double, int, double, cv::InputOutputArray)", "virtual void cv::StereoSGBMImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "void cv::computeDisparitySGBM(const cv::Mat&, const cv::Mat&, cv::Mat&, const cv::StereoSGBMParams&, cv::Mat&)", "void cv::computeDisparitySGBM_HH4(const cv::Mat&, const cv::Mat&, cv::Mat&, const cv::StereoSGBMParams&, cv::Mat&)", "virtual void cv::StereoSGBMImpl::compute(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::SGBM3WayMainLoop::SGBM3WayMainLoop(cv::Mat*, const cv::Mat&, const cv::Mat&, cv::Mat*, const cv::StereoSGBMParams&, cv::PixType*, int, int)", "N2cv10StereoSGBME", "N2cv16CalcVerticalSumsE", "N2cv18CalcHorizontalSumsE", "N2cv16SGBM3WayMainLoopE", "N2cv14StereoSGBMImplE", "N2cv6detail12PtrOwnerImplINS_14StereoSGBMImplENS_14DefaultDeleterIS2_EEEE", "void cv::SCDMatcher::buildCostMatrix(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Ptr<cv::HistogramCostExtractor>&) const", "virtual float cv::ShapeContextDistanceExtractorImpl::computeDistance(cv::InputArray, cv::InputArray)", "virtual void cv::ShapeContextDistanceExtractorImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = bool]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "virtual void cv::ShapeContextDistanceExtractorImpl::setIterations(int)", "virtual void cv::ShapeContextDistanceExtractorImpl::getImages(cv::OutputArray, cv::OutputArray) const", "virtual void cv::ShapeContextDistanceExtractorImpl::setImages(cv::InputArray, cv::InputArray)", "virtual void cv::ShapeContextDistanceExtractorImpl::setOuterRadius(float)", "virtual void cv::ShapeContextDistanceExtractorImpl::setInnerRadius(float)", "virtual void cv::ShapeContextDistanceExtractorImpl::setRadialBins(int)", "virtual void cv::ShapeContextDistanceExtractorImpl::setAngularBins(int)", "N2cv16ShapeTransformerE", "N2cv31ThinPlateSplineShapeTransformerE", "N2cv22ShapeDistanceExtractorE", "N2cv29ShapeContextDistanceExtractorE", "N2cv33ShapeContextDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_33ShapeContextDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::ThinPlateSplineShapeTransformerImpl::estimateTransformation(cv::InputArray, cv::InputArray, std::vector<cv::DMatch>&)", "virtual float cv::ThinPlateSplineShapeTransformerImpl::applyTransformation(cv::InputArray, cv::OutputArray)", "virtual void cv::ThinPlateSplineShapeTransformerImpl::warpImage(cv::InputArray, cv::OutputArray, int, int, const Scalar&) const", "virtual void cv::ThinPlateSplineShapeTransformerImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "N2cv35ThinPlateSplineShapeTransformerImplE", "N2cv6detail12PtrOwnerImplINS_35ThinPlateSplineShapeTransformerImplENS_14DefaultDeleterIS2_EEEE", "virtual float cv::HausdorffDistanceExtractorImpl::computeDistance(cv::InputArray, cv::InputArray)", "virtual void cv::HausdorffDistanceExtractorImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::HausdorffDistanceExtractorImpl::setRankProportion(float)", "N2cv26HausdorffDistanceExtractorE", "N2cv30HausdorffDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30HausdorffDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "float cv::EMDL1(cv::InputArray, cv::InputArray)", "void EmdL1::findNewSolution()", "void EmdL1::initBVTree()", "float EmdL1::getEMDL1(cv::Mat&, cv::Mat&)", "virtual float cv::AffineTransformerImpl::applyTransformation(cv::InputArray, cv::OutputArray)", "virtual void cv::AffineTransformerImpl::estimateTransformation(cv::InputArray, cv::InputArray, std::vector<cv::DMatch>&)", "virtual void cv::AffineTransformerImpl::warpImage(cv::InputArray, cv::OutputArray, int, int, const Scalar&) const", "virtual void cv::AffineTransformerImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "N2cv17AffineTransformerE", "N2cv21AffineTransformerImplE", "N2cv6detail12PtrOwnerImplINS_21AffineTransformerImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::EMDL1HistogramCostExtractorImpl::buildCostMatrix(cv::InputArray, cv::InputArray, cv::OutputArray)", "virtual void cv::EMDL1HistogramCostExtractorImpl::read(const cv::FileNode&)", "virtual void cv::ChiHistogramCostExtractorImpl::buildCostMatrix(cv::InputArray, cv::InputArray, cv::OutputArray)", "virtual void cv::ChiHistogramCostExtractorImpl::read(const cv::FileNode&)", "virtual void cv::EMDHistogramCostExtractorImpl::buildCostMatrix(cv::InputArray, cv::InputArray, cv::OutputArray)", "virtual void cv::EMDHistogramCostExtractorImpl::read(const cv::FileNode&)", "virtual void cv::NormHistogramCostExtractorImpl::buildCostMatrix(cv::InputArray, cv::InputArray, cv::OutputArray)", "virtual void cv::NormHistogramCostExtractorImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "N2cv22HistogramCostExtractorE", "N2cv26NormHistogramCostExtractorE", "N2cv25EMDHistogramCostExtractorE", "N2cv25ChiHistogramCostExtractorE", "N2cv27EMDL1HistogramCostExtractorE", "N2cv30NormHistogramCostExtractorImplE", "N2cv29EMDHistogramCostExtractorImplE", "N2cv29ChiHistogramCostExtractorImplE", "N2cv31EMDL1HistogramCostExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30NormHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29EMDHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29ChiHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_31EMDL1HistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "cv::UMat cv::superres::convertToType(const cv::UMat&, int, cv::UMat&, cv::UMat&)", "void {anonymous}::convertToDepth(cv::InputArray, cv::OutputArray, int)", "void {anonymous}::convertToCn(cv::InputArray, cv::OutputArray, int)", "cv::Mat cv::superres::convertToType(const cv::Mat&, int, cv::Mat&, cv::Mat&)", "void cv::superres::arrCopy(cv::InputArray, cv::OutputArray)", "void {anonymous}::calcBtvRegularization(cv::InputArray, cv::OutputArray, int, const std::vector<float>&, const cv::UMat&)", "void {anonymous}::upscale(cv::InputArray, cv::OutputArray, int)", "void {anonymous}::BTVL1_Base::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArrayOfArrays, cv::InputArrayOfArrays, int)", "void {anonymous}::BTVL1::processFrame(int)", "void {anonymous}::BTVL1::readNextFrame(cv::Ptr<cv::superres::FrameSource>&)", "virtual void {anonymous}::BTVL1::processImpl(cv::Ptr<cv::superres::FrameSource>&, cv::OutputArray)", "*N12_GLOBAL__N_110BTVL1_BaseE", "*N12_GLOBAL__N_15BTVL1E", "*N12_GLOBAL__N_121BtvRegularizationBodyIfEE", "*N12_GLOBAL__N_121BtvRegularizationBodyIN2cv7Point3_IfEEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_15BTVL1ENS_14DefaultDeleterIS3_EEEE", "cv::Ptr<cv::superres::FrameSource> cv::superres::createFrameSource_Video_CUDA(const cv::String&)", "virtual void {anonymous}::CameraFrameSource::reset()", "virtual void {anonymous}::VideoFrameSource::reset()", "virtual void {anonymous}::CaptureFrameSource::nextFrame(cv::OutputArray)", "*N12_GLOBAL__N_116EmptyFrameSourceE", "*N12_GLOBAL__N_118CaptureFrameSourceE", "*N12_GLOBAL__N_116VideoFrameSourceE", "*N12_GLOBAL__N_117CameraFrameSourceE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_116EmptyFrameSourceENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_116VideoFrameSourceENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_117CameraFrameSourceENS_14DefaultDeleterIS3_EEEE", "N2cv8superres11FrameSourceE", "cv::Ptr<cv::superres::SuperResolution> cv::superres::createSuperResolution_BTVL1_CUDA()", "cv::Ptr<cv::superres::PyrLKOpticalFlow> cv::superres::createOptFlow_PyrLK_CUDA()", "cv::Ptr<cv::superres::BroxOpticalFlow> cv::superres::createOptFlow_Brox_CUDA()", "cv::Ptr<cv::superres::DualTVL1OpticalFlow> cv::superres::createOptFlow_DualTVL1_CUDA()", "cv::Ptr<cv::superres::FarnebackOpticalFlow> cv::superres::createOptFlow_Farneback_CUDA()", "virtual void {anonymous}::DualTVL1::calc(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "virtual void {anonymous}::CpuOpticalFlow::calc(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "virtual void {anonymous}::Farneback::calc(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "*N12_GLOBAL__N_114CpuOpticalFlowE", "*N12_GLOBAL__N_19FarnebackE", "*N12_GLOBAL__N_18DualTVL1E", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_19FarnebackENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_18DualTVL1ENS_14DefaultDeleterIS3_EEEE", "N2cv8superres19DenseOpticalFlowExtE", "N2cv8superres20FarnebackOpticalFlowE", "N2cv8superres19DualTVL1OpticalFlowE", "virtual void cv::superres::SuperResolution::nextFrame(cv::OutputArray)", "N2cv8superres15SuperResolutionE", "void throw_no_cuda()", "bool cv::detail::calibrateRotatingCamera(const std::vector<cv::Mat>&, cv::Mat&)", "void cv::detail::focalsFromHomography(const cv::Mat&, double&, double&, bool&, bool&)", "void cv::detail::findMaxSpanningTree(int, const std::vector<cv::detail::MatchesInfo>&, cv::detail::Graph&, std::vector<int>&)", "void cv::detail::waveCorrect(std::vector<cv::Mat>&, cv::detail::WaveCorrectKind)", "virtual void cv::detail::BundleAdjusterAffinePartial::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "virtual void cv::detail::BundleAdjusterAffine::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "virtual void cv::detail::BundleAdjusterRay::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::detail::BundleAdjusterReproj::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "N2cv6detail9EstimatorE", "N2cv6detail24HomographyBasedEstimatorE", "N2cv6detail20AffineBasedEstimatorE", "N2cv6detail18BundleAdjusterBaseE", "N2cv6detail20BundleAdjusterReprojE", "N2cv6detail17BundleAdjusterRayE", "N2cv6detail20BundleAdjusterAffineE", "N2cv6detail27BundleAdjusterAffinePartialE", "cv::Rect cv::detail::resultRoiIntersection(const std::vector<cv::Point_<int> >&, const std::vector<cv::Size_<int> >&)", "cv::Rect cv::detail::resultRoi(const std::vector<cv::Point_<int> >&, const std::vector<cv::Size_<int> >&)", "void cv::detail::restoreImageFromLaplacePyrGpu(std::vector<cv::UMat>&)", "void cv::detail::createLaplacePyrGpu(cv::InputArray, int, std::vector<cv::UMat>&)", "void cv::detail::createWeightMap(cv::InputArray, float, cv::InputOutputArray)", "void cv::detail::normalizeUsingWeightMap(cv::InputArray, cv::InputOutputArray)", "virtual void cv::detail::MultiBandBlender::feed(cv::InputArray, cv::InputArray, cv::Point)", "cv::detail::MultiBandBlender::MultiBandBlender(int, int, int)", "virtual void cv::detail::FeatherBlender::feed(cv::InputArray, cv::InputArray, cv::Point)", "virtual void cv::detail::Blender::feed(cv::InputArray, cv::InputArray, cv::Point)", "static cv::Ptr<cv::detail::Blender> cv::detail::Blender::createDefault(int, bool)", "N2cv6detail7BlenderE", "N2cv6detail14FeatherBlenderE", "N2cv6detail16MultiBandBlenderE", "N2cv6detail12PtrOwnerImplINS0_7BlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14FeatherBlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_16MultiBandBlenderENS_14DefaultDeleterIS2_EEEE", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::PlaneProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::SphericalPortraitProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::SphericalProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::CylindricalProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::AffineWarper::getRTfromHomogeneous(cv::InputArray, cv::Mat&, cv::Mat&)", "void cv::detail::ProjectorBase::setCameraParams(cv::InputArray, cv::InputArray, cv::InputArray)", "N2cv6detail14RotationWarperE", "N2cv6detail18RotationWarperBaseINS0_14PlaneProjectorEEE", "N2cv6detail11PlaneWarperE", "N2cv6detail12AffineWarperE", "N2cv6detail18RotationWarperBaseINS0_18SphericalProjectorEEE", "N2cv6detail15SphericalWarperE", "N2cv6detail18RotationWarperBaseINS0_20CylindricalProjectorEEE", "N2cv6detail17CylindricalWarperE", "N2cv6detail18RotationWarperBaseINS0_26SphericalPortraitProjectorEEE", "N2cv6detail23SphericalPortraitWarperE", "virtual void cv::detail::BlocksGainCompensator::apply(int, cv::Point, cv::InputOutputArray, cv::InputArray)", "virtual void cv::detail::BlocksGainCompensator::feed(const std::vector<cv::Point_<int> >&, const std::vector<cv::UMat>&, const std::vector<std::pair<cv::UMat, unsigned char> >&)", "virtual void cv::detail::GainCompensator::apply(int, cv::Point, cv::InputOutputArray, cv::InputArray)", "virtual void cv::detail::GainCompensator::feed(const std::vector<cv::Point_<int> >&, const std::vector<cv::UMat>&, const std::vector<std::pair<cv::UMat, unsigned char> >&)", "static cv::Ptr<cv::detail::ExposureCompensator> cv::detail::ExposureCompensator::createDefault(int)", "N2cv6detail19ExposureCompensatorE", "N2cv6detail21NoExposureCompensatorE", "N2cv6detail15GainCompensatorE", "N2cv6detail21BlocksGainCompensatorE", "N2cv6detail12PtrOwnerImplINS0_21NoExposureCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_15GainCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BlocksGainCompensatorENS_14DefaultDeleterIS2_EEEE", "cv::Ptr<cv::Stitcher> cv::createStitcher(bool)", "cv::Stitcher::Status cv::Stitcher::stitch(cv::InputArrayOfArrays, const std::vector<std::vector<cv::Rect_<int> > >&, cv::OutputArray)", "cv::Stitcher::Status cv::Stitcher::stitch(cv::InputArrayOfArrays, cv::OutputArray)", "cv::Stitcher::Status cv::Stitcher::composePanorama(cv::InputArrayOfArrays, cv::OutputArray)", "cv::Stitcher::Status cv::Stitcher::composePanorama(cv::OutputArray)", "cv::Stitcher::Status cv::Stitcher::estimateTransform(cv::InputArrayOfArrays, const std::vector<std::vector<cv::Rect_<int> > >&)", "cv::Stitcher::Status cv::Stitcher::estimateTransform(cv::InputArrayOfArrays)", "static cv::Ptr<cv::Stitcher> cv::Stitcher::create(cv::Stitcher::Mode, bool)", "void cv::detail::BundleAdjusterBase::setRefinementMask(const cv::Mat&)", "N2cv13WarperCreatorE", "N2cv12AffineWarperE", "N2cv15SphericalWarperE", "N2cv6detail15FeaturesMatcherE", "N2cv6detail12PtrOwnerImplINS0_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17BundleAdjusterRayENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17OrbFeaturesFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_8StitcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27AffineBestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27BundleAdjusterAffinePartialENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_20AffineBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_24HomographyBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "virtual void cv::detail::Timelapser::process(cv::InputArray, cv::InputArray, cv::Point)", "static cv::Ptr<cv::detail::Timelapser> cv::detail::Timelapser::createDefault(int)", "N2cv6detail10TimelapserE", "N2cv6detail14TimelapserCropE", "N2cv6detail12PtrOwnerImplINS0_10TimelapserENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14TimelapserCropENS_14DefaultDeleterIS2_EEEE", "void cv::detail::BestOf2NearestRangeMatcher::operator()(const std::vector<cv::detail::ImageFeatures>&, std::vector<cv::detail::MatchesInfo>&, const cv::UMat&)", "virtual void cv::detail::BestOf2NearestMatcher::match(const cv::detail::ImageFeatures&, const cv::detail::ImageFeatures&, cv::detail::MatchesInfo&)", "virtual void {anonymous}::CpuMatcher::match(const cv::detail::ImageFeatures&, const cv::detail::ImageFeatures&, cv::detail::MatchesInfo&)", "void cv::detail::FeaturesMatcher::operator()(const std::vector<cv::detail::ImageFeatures>&, std::vector<cv::detail::MatchesInfo>&, const cv::UMat&)", "virtual void cv::detail::AKAZEFeaturesFinder::find(cv::InputArray, cv::detail::ImageFeatures&)", "virtual void cv::detail::OrbFeaturesFinder::find(cv::InputArray, cv::detail::ImageFeatures&)", "virtual void cv::detail::SurfFeaturesFinder::find(cv::InputArray, cv::detail::ImageFeatures&)", "cv::detail::SurfFeaturesFinder::SurfFeaturesFinder(double, int, int, int, int)", "void cv::detail::FeaturesFinder::operator()(cv::InputArrayOfArrays, std::vector<cv::detail::ImageFeatures>&, const std::vector<std::vector<cv::Rect_<int> > >&)", "*N12_GLOBAL__N_114MatchPairsBodyE", "*N12_GLOBAL__N_116FindFeaturesBodyE", "*N12_GLOBAL__N_110CpuMatcherE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_110CpuMatcherENS_14DefaultDeleterIS3_EEEE", "N2cv6detail14FeaturesFinderE", "N2cv6detail18SurfFeaturesFinderE", "N2cv6detail17OrbFeaturesFinderE", "N2cv6detail19AKAZEFeaturesFinderE", "N2cv6detail21BestOf2NearestMatcherE", "N2cv6detail26BestOf2NearestRangeMatcherE", "N2cv6detail27AffineBestOf2NearestMatcherE", "bool GCGraph<TWeight>::inSourceSegment(int) [with TWeight = float]", "TWeight GCGraph<TWeight>::maxFlow() [with TWeight = float]", "virtual void cv::detail::GraphCutSeamFinder::Impl::findInPair(size_t, size_t, cv::Rect)", "void GCGraph<TWeight>::addEdges(int, int, TWeight, TWeight) [with TWeight = float]", "void GCGraph<TWeight>::addTermWeights(int, TWeight, TWeight) [with TWeight = float]", "virtual void cv::detail::GraphCutSeamFinder::Impl::find(const std::vector<cv::UMat>&, const std::vector<cv::Point_<int> >&, std::vector<cv::UMat>&)", "bool cv::detail::DpSeamFinder::estimateSeam(const cv::Mat&, const cv::Mat&, cv::Point, cv::Point, int, cv::Point, cv::Point, std::vector<cv::Point_<int> >&, bool&)", "void cv::detail::DpSeamFinder::computeCosts(const cv::Mat&, const cv::Mat&, cv::Point, cv::Point, int, cv::Mat_<float>&, cv::Mat_<float>&)", "int cv::partition(const std::vector<_Tp>&, std::vector<int>&, _EqPredicate) [with _Tp = cv::Point_<int>; _EqPredicate = cv::detail::DpSeamFinder::ClosePoints]", "bool cv::detail::DpSeamFinder::getSeamTips(int, int, cv::Point&, cv::Point&)", "void cv::detail::DpSeamFinder::computeGradients(const cv::Mat&, const cv::Mat&)", "void cv::detail::DpSeamFinder::process(const cv::Mat&, const cv::Mat&, cv::Point, cv::Point, cv::Mat&, cv::Mat&)", "N2cv6detail22GraphCutSeamFinderBaseE", "N2cv6detail10SeamFinderE", "N2cv6detail18PairwiseSeamFinderE", "N2cv6detail17VoronoiSeamFinderE", "N2cv6detail12DpSeamFinderE", "N2cv6detail18GraphCutSeamFinderE", "N2cv6detail18GraphCutSeamFinder4ImplE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinder4ImplENS_14DefaultDeleterIS3_EEEE", "cv::Mat cv::videostab::getMotion(int, int, const std::vector<cv::Mat>&)", "cv::videostab::ToFileMotionWriter::ToFileMotionWriter(const cv::String&, cv::Ptr<cv::videostab::ImageMotionEstimatorBase>)", "cv::videostab::FromFileMotionReader::FromFileMotionReader(const cv::String&)", "virtual cv::Mat cv::videostab::MotionEstimatorL1::estimate(cv::InputArray, cv::InputArray, bool*)", "virtual cv::Mat cv::videostab::MotionEstimatorRansacL2::estimate(cv::InputArray, cv::InputArray, bool*)", "static cv::videostab::RansacParams cv::videostab::RansacParams::default2dMotion(cv::videostab::MotionModel)", "cv::Mat cv::videostab::estimateGlobalMotionRansac(cv::InputArray, cv::InputArray, int, const cv::videostab::RansacParams&, float*, int*)", "cv::Mat cv::videostab::estimateGlobalMotionLeastSquares(cv::InputOutputArray, cv::InputOutputArray, int, float*)", "N2cv9videostab23ISparseOptFlowEstimatorE", "N2cv9videostab25PyrLkOptFlowEstimatorBaseE", "N2cv9videostab16IOutlierRejectorE", "N2cv9videostab19MotionEstimatorBaseE", "N2cv9videostab23MotionEstimatorRansacL2E", "N2cv9videostab17MotionEstimatorL1E", "N2cv9videostab24ImageMotionEstimatorBaseE", "N2cv9videostab20FromFileMotionReaderE", "N2cv9videostab18ToFileMotionWriterE", "N2cv9videostab28KeypointBasedMotionEstimatorE", "N2cv6detail12PtrOwnerImplINS_9videostab27SparsePyrLkOptFlowEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab19NullOutlierRejectorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab4ILogE", "N2cv9videostab11LogToStdoutE", "virtual void cv::videostab::WeightingDeblurer::deblur(int, cv::Mat&)", "float cv::videostab::calcBlurriness(const cv::Mat&)", "N2cv9videostab12DeblurerBaseE", "N2cv9videostab17WeightingDeblurerE", "virtual void cv::videostab::MoreAccurateMotionWobbleSuppressor::suppress(int, const cv::Mat&, cv::Mat&)", "N2cv9videostab20WobbleSuppressorBaseE", "N2cv9videostab20NullWobbleSuppressorE", "N2cv9videostab38MoreAccurateMotionWobbleSuppressorBaseE", "N2cv9videostab34MoreAccurateMotionWobbleSuppressorE", "N2cv6detail12PtrOwnerImplINS_9videostab23MotionEstimatorRansacL2ENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab28KeypointBasedMotionEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab17IMotionStabilizerE", "N2cv9videostab12IFrameSourceE", "N2cv9videostab15NullFrameSourceE", "N2cv9videostab13InpainterBaseE", "N2cv9videostab13NullInpainterE", "N2cv9videostab12NullDeblurerE", "N2cv9videostab14StabilizerBaseE", "N2cv9videostab17OnePassStabilizerE", "N2cv9videostab17TwoPassStabilizerE", "N2cv6detail12PtrOwnerImplINS_9videostab11LogToStdoutENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab15NullFrameSourceENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab12NullDeblurerENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab13NullInpainterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20GaussianMotionFilterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20NullWobbleSuppressorENS_14DefaultDeleterIS3_EEEE", "virtual void cv::videostab::{anonymous}::VideoFileSourceImpl::reset()", "*N2cv9videostab12_GLOBAL__N_119VideoFileSourceImplE", "*N2cv6detail12PtrOwnerImplINS_9videostab12_GLOBAL__N_119VideoFileSourceImplENS_14DefaultDeleterIS4_EEEE", "N2cv9videostab15VideoFileSourceE", "N2cv9videostab27SparsePyrLkOptFlowEstimatorE", "float cv::videostab::estimateOptimalTrimRatio(const cv::Mat&, cv::Size)", "cv::Mat cv::videostab::ensureInclusionConstraint(const cv::Mat&, cv::Size, float)", "virtual void cv::videostab::LpMotionStabilizer::stabilize(int, const std::vector<cv::Mat>&, std::pair<int, int>, cv::Mat*)", "N2cv9videostab27MotionStabilizationPipelineE", "N2cv9videostab16MotionFilterBaseE", "N2cv9videostab20GaussianMotionFilterE", "N2cv9videostab18LpMotionStabilizerE", "virtual void cv::videostab::TranslationBasedLocalOutlierRejector::process(cv::Size, cv::InputArray, cv::InputArray, cv::OutputArray)", "virtual void cv::videostab::NullOutlierRejector::process(cv::Size, cv::InputArray, cv::InputArray, cv::OutputArray)", "N2cv9videostab19NullOutlierRejectorE", "N2cv9videostab36TranslationBasedLocalOutlierRejectorE", "void cv::videostab::completeFrameAccordingToFlow(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, float, cv::Mat&, cv::Mat&)", "void cv::videostab::calcFlowMask(const cv::Mat&, const cv::Mat&, const cv::Mat&, float, const cv::Mat&, const cv::Mat&, cv::Mat&)", "virtual void cv::videostab::ColorInpainter::inpaint(int, cv::Mat&, cv::Mat&)", "Inpaint cv::videostab::FastMarchingMethod::run(const cv::Mat&, Inpaint) [with Inpaint = cv::videostab::ColorAverageInpaintBody]", "virtual void cv::videostab::ColorAverageInpainter::inpaint(int, cv::Mat&, cv::Mat&)", "Inpaint cv::videostab::FastMarchingMethod::run(const cv::Mat&, Inpaint) [with Inpaint = cv::videostab::MotionInpaintBody]", "float cv::videostab::alignementError(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&)", "virtual void cv::videostab::MotionInpainter::inpaint(int, cv::Mat&, cv::Mat&)", "cv::videostab::MotionInpainter::MotionInpainter()", "virtual void cv::videostab::ConsistentMosaicInpainter::inpaint(int, cv::Mat&, cv::Mat&)", "virtual void cv::videostab::InpaintingPipeline::inpaint(int, cv::Mat&, cv::Mat&)", "N2cv9videostab18InpaintingPipelineE", "N2cv9videostab25ConsistentMosaicInpainterE", "N2cv9videostab15MotionInpainterE", "N2cv9videostab21ColorAverageInpainterE", "N2cv9videostab14ColorInpainterE", "TBB: VERSION\t\t4.4\nTBB: INTERFACE VERSION\t9003\nTBB: BUILD_DATE\t\tJul 21 201723:30:01\nTBB: BUILD_HOST\t    Unknown\nTBB: BUILD_OS\t\tAndroid\nTBB: BUILD_KERNEL\tUnknown\nTBB: BUILD_GCC\t\tgcc version 4.4.3\nTBB: BUILD_GLIBC\tUnknown\nTBB: BUILD_LD\t\tUnknown\nTBB: BUILD_TARGET\tUnknown\nTBB: BUILD_COMMAND\tuse cv::getBuildInformation() for details\nTBB: TBB_USE_DEBUG\t0\nTBB: TBB_USE_ASSERT\t0\n", "N3tbb14bad_last_allocE", "N3tbb13improper_lockE", "N3tbb10user_abortE", "N3tbb12missing_waitE", "N3tbb27invalid_multiple_schedulingE", "N3tbb8internal7no_copyE", "N3tbb10interface58internal9task_baseE", "N3tbb8internal9no_assignE", "N3tbb4taskE", "N3tbb18captured_exceptionE", "N3rml16versioned_objectE", "N3rml6clientE", "N3tbb8internal3rml10tbb_clientE", "N3tbb8internal6marketE", "N3tbb10empty_taskE", "N3tbb10interface78internal14delegated_taskE", "N3tbb10interface78internal9wait_taskE", "N3tbb8internal15control_storageE", "N3tbb8internal11padded_baseINS0_15control_storageELj128ELj16EEE", "N3tbb8internal6paddedINS0_15control_storageELj128EEE", "N3tbb8internal27allowed_parallelism_controlE", "N3tbb8internal18stack_size_controlE", "N3tbb8internal15scheduler_stateE", "N3tbb8internal19intrusive_list_nodeE", "N3rml3jobE", "N3tbb8internal9schedulerE", "N3tbb8internal17generic_schedulerE", "N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE", "N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE", "N3rml6serverE", "N3tbb8internal3rml10tbb_serverE", "N3tbb8internal3rml14private_serverE", "`0_tL", "\"t1?\"t1?\"t1?\"t1?", "+Xc=+Xc=+Xc=+Xc=", "Px=F", "\f ?.\ta7", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "`0_tL", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "I*z7Azv", "i!\"4i!\"4i!\"4i!\"4", "`0_tL", "`0_tL", "`0_tL", "`0_tL", "`0_tL", "\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?", "+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=", "\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?", "+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=", "`0_tL", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "`0_tL", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "`0_tL", "`0_tL", "i!\"4i!\"4i!\"4i!\"4", "i!\"4i!\"4i!\"4i!\"4", "`0_tL", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "`0_tL", "`0_tL", "`0_tL", "N6google8protobuf11MessageLiteE", "N6google8protobuf7ClosureE", "N6google8protobuf8internal16FunctionClosure0E", "N6google8protobuf14FatalExceptionE", "N6google8protobuf8internal12FieldSkipperE", "*N6google8protobuf12_GLOBAL__N_123AggregateErrorCollectorE", "N6google8protobuf17DescriptorBuilder17OptionInterpreter21AggregateOptionFinderE", "N6google8protobuf8internal16FunctionClosure1IPSt4pairIPKNS0_20FileDescriptorTablesEPKNS0_14SourceCodeInfoEEEE", "N6google8protobuf17FileDescriptorSetE", "N6google8protobuf19FileDescriptorProtoE", "N6google8protobuf30DescriptorProto_ExtensionRangeE", "N6google8protobuf29DescriptorProto_ReservedRangeE", "N6google8protobuf15DescriptorProtoE", "N6google8protobuf20FieldDescriptorProtoE", "N6google8protobuf20OneofDescriptorProtoE", "N6google8protobuf19EnumDescriptorProtoE", "N6google8protobuf24EnumValueDescriptorProtoE", "N6google8protobuf22ServiceDescriptorProtoE", "N6google8protobuf21MethodDescriptorProtoE", "N6google8protobuf11FileOptionsE", "N6google8protobuf14MessageOptionsE", "N6google8protobuf12FieldOptionsE", "N6google8protobuf12OneofOptionsE", "N6google8protobuf11EnumOptionsE", "N6google8protobuf16EnumValueOptionsE", "N6google8protobuf14ServiceOptionsE", "N6google8protobuf13MethodOptionsE", "N6google8protobuf28UninterpretedOption_NamePartE", "N6google8protobuf19UninterpretedOptionE", "N6google8protobuf23SourceCodeInfo_LocationE", "N6google8protobuf14SourceCodeInfoE", "N6google8protobuf28GeneratedCodeInfo_AnnotationE", "N6google8protobuf17GeneratedCodeInfoE", "N6google8protobuf18DescriptorDatabaseE", "N6google8protobuf25EncodedDescriptorDatabaseE", "N6google8protobuf21DynamicMessageFactoryE", "N6google8protobuf14DynamicMessageE", "N6google8protobuf8internal29DescriptorPoolExtensionFinderE", "N6google8protobuf16RepeatedPtrFieldINS0_11MessageLiteEEE", "N6google8protobuf8internal26GeneratedMessageReflectionE", "N6google8protobuf2io14ErrorCollectorE", "N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE", "N6google8protobuf2io18IstreamInputStreamE", "N6google8protobuf8internal12MapFieldBaseE", "N6google8protobuf8internal23TypeDefinedMapFieldBaseINS0_6MapKeyENS0_11MapValueRefEEE", "N6google8protobuf8internal15DynamicMapFieldE", "*N6google8protobuf12_GLOBAL__N_123GeneratedMessageFactoryE", "N6google8protobuf7MessageE", "N6google8protobuf10ReflectionE", "N6google8protobuf14MessageFactoryE", "N6google8protobuf8internal21RepeatedFieldAccessorE", "N6google8protobuf8internal33RandomAccessRepeatedFieldAccessorE", "N6google8protobuf8internal16MapFieldAccessorE", "N6google8protobuf8internal23RepeatedPtrFieldWrapperISsEE", "N6google8protobuf8internal30RepeatedPtrFieldStringAccessorE", "N6google8protobuf8internal23RepeatedPtrFieldWrapperINS0_7MessageEEE", "N6google8protobuf8internal31RepeatedPtrFieldMessageAccessorE", "N6google8protobuf8internal20RepeatedFieldWrapperIiEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIiEE", "N6google8protobuf8internal20RepeatedFieldWrapperIjEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIjEE", "N6google8protobuf8internal20RepeatedFieldWrapperIxEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIxEE", "N6google8protobuf8internal20RepeatedFieldWrapperIyEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIyEE", "N6google8protobuf8internal20RepeatedFieldWrapperIfEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIfEE", "N6google8protobuf8internal20RepeatedFieldWrapperIdEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIdEE", "N6google8protobuf8internal20RepeatedFieldWrapperIbEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIbEE", "*N6google8protobuf12_GLOBAL__N_129FieldValuePrinterUtf8EscapingE", "N6google8protobuf10TextFormat17FieldValuePrinterE", "N6google8protobuf10TextFormat6FinderE", "N6google8protobuf10TextFormat6Parser10ParserImpl20ParserErrorCollectorE", "N6google8protobuf8internal27UnknownFieldSetFieldSkipperE", "N6google8protobuf8internal15ExtensionFinderE", "N6google8protobuf8internal24GeneratedExtensionFinderE", "N6google8protobuf13RepeatedFieldIiEE", "N6google8protobuf13RepeatedFieldIxEE", "N6google8protobuf13RepeatedFieldIjEE", "N6google8protobuf13RepeatedFieldIyEE", "N6google8protobuf13RepeatedFieldIfEE", "N6google8protobuf13RepeatedFieldIdEE", "N6google8protobuf13RepeatedFieldIbEE", "N6google8protobuf16RepeatedPtrFieldISsEE", "N6google8protobuf2io19ZeroCopyInputStreamE", "N6google8protobuf2io20ZeroCopyOutputStreamE", "N6google8protobuf2io16ArrayInputStreamE", "N6google8protobuf2io17ArrayOutputStreamE", "N6google8protobuf2io18StringOutputStreamE", "N6google8protobuf2io18CopyingInputStreamE", "N6google8protobuf2io25CopyingInputStreamAdaptorE", "type.googleapis.com/", "google.protobuf.Any", "ITT-API-Version 0.0.0 (20151119)", "\n@(#) $Revision: 481659 $\n", "0123456789ABCDEF", "0123456789ABCDEF", "_TIFFMergeFields", "for fields array", "MissingRequired", "TIFFFetchNormalTag", "TIFFFetchStripThing", "TIFFReadDirectoryCheckOrder", "TIFFFetchDirectory", "TIFFReadDirectory", "initYCbCrConversion", "BuildMapBitdepth16To8", "BuildMapUaToAa", "TIFFReadBufferSetup", "TIFFFillTile", "TIFFReadEncodedTile", "TIFFFillStrip", "TIFFReadEncodedStrip", "TIFFScanlineSize", "TIFFScanlineSize64", "TIFFStripSize", "TIFFVStripSize", "TIFFVStripSize64", "TIFFComputeStrip", "TIFFVTileSize64", "TIFFTileRowSize", "TIFFWriteBufferSetup", "TIFFAppendToStrip", "TIFFWriteEncodedStrip", "TIFFWriteScanline", "TIFFOpen", "TIFFRewriteDirectory", "TIFFLinkDirectory", "TIFFWriteDirectoryTagIfdIfd8Array", "TIFFWriteDirectoryTagCheckedSrationalArray", "TIFFWriteDirectoryTagCheckedRationalArray", "TIFFWriteDirectoryTagSubifd", "TIFFWriteDirectoryTagTransferfunction", "TIFFWriteDirectoryTagSampleformatArray", "TIFFWriteDirectoryTagShortPerSample", "TIFFWriteDirectoryTagColormap", "TIFFWriteDirectoryTagLongLong8Array", "TIFFWriteDirectoryTagData", "TIFFWriteDirectorySec", "DumpModeDecode", "Fax4Decode", "Fax4Encode", "Fax3Decode2D", "Fax3SetupState", "Fax3Decode1D", "Fax3Encode", "InitCCITTFax3", "LogLuvDecode24", "LogLuvDecode32", "LogL16Decode", "LogLuvSetupDecode", "LogL16InitState", "LogLuvInitState", "LogLuvSetupEncode", "LogLuvVSetField", "TIFFInitSGILog", "LZWDecodeCompat", "LZWPreDecode", "LZWDecode", "LZWSetupEncode", "TIFFInitLZW", "NeXTDecode", "PackBitsDecode", "PixarLogDecode", "PixarLogSetupEncode", "PixarLogPostEncode", "PixarLogEncode", "PixarLogVSetField", "TIFFInitPixarLog", "PredictorEncodeTile", "ThunderSetupDecode", "ThunderDecode", "ThunderDecodeRow", "ZIPSetupDecode", "ZIPDecode", "ZIPSetupEncode", "ZIPPostEncode", "ZIPEncode", "TIFFInitZIP", "N3Iex6ArgExcE", "N3Iex5IoExcE", "N3Iex7TypeExcE", "N3Imf10OutputFileE", "N3Imf14TypedAttributeINS_12PreviewImageEEE", "N3Imf10OutputFile4DataE", "N3Imf9AttributeE", "N3Imf14TypedAttributeINS_14ChromaticitiesEEE", "N3Imf14TypedAttributeINS_6EnvmapEEE", "N3Imf14TypedAttributeIfEE", "N3Imf14TypedAttributeINS_7KeyCodeEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IfEEEE", "N3Imf14TypedAttributeINS_8RationalEEE", "N3Imf14TypedAttributeISsEE", "N3Imf14TypedAttributeISt6vectorISsSaISsEEEE", "N3Imf14TypedAttributeINS_8TimeCodeEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IfEEEE", "N3Imf10CompressorE", "N3Iex11OverflowExcE", "N3Iex8InputExcE", "N3Imf13ZipCompressorE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IiEEEEEE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IfEEEEEE", "N3Imf14TypedAttributeINS_11ChannelListEEE", "N3Imf14TypedAttributeINS_11CompressionEEE", "N3Imf14TypedAttributeIdEE", "N3Imf14TypedAttributeIiEE", "N3Imf14TypedAttributeINS_9LineOrderEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IfEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IdEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IdEEEE", "N3Imf14TypedAttributeINS_15TileDescriptionEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IdEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IfEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IdEEEE", "N3Imf15Pxr24CompressorE", "N3Imf9InputFileE", "N3Imf9InputFile4DataE", "N3Imf13PizCompressorE", "N3Imf11StdIFStreamE", "N3Imf11StdOFStreamE", "N3Imf11StdOSStreamE", "N3Iex8ErrnoExcE", "*N3Imf12_GLOBAL__N_114LineBufferTaskE", "N3Imf17ScanLineInputFileE", "N3Imf17ScanLineInputFile4DataE", "N3Imf7IStreamE", "N3Imf7OStreamE", "N3Iex9EnoentExcE", "N3Iex8EsrchExcE", "N3Iex8EintrExcE", "N3Iex6EioExcE", "N3Iex8EnxioExcE", "N3Iex8E2bigExcE", "N3Iex10EnoexecExcE", "N3Iex8EbadfExcE", "N3Iex9EchildExcE", "N3Iex9EagainExcE", "N3Iex9EnomemExcE", "N3Iex9EaccesExcE", "N3Iex9EfaultExcE", "N3Iex10EnotblkExcE", "N3Iex8EbusyExcE", "N3Iex9EexistExcE", "N3Iex8ExdevExcE", "N3Iex9EnodevExcE", "N3Iex10EnotdirExcE", "N3Iex9EisdirExcE", "N3Iex9EinvalExcE", "N3Iex9EnfileExcE", "N3Iex9EmfileExcE", "N3Iex9EnottyExcE", "N3Iex10EtxtbsyExcE", "N3Iex8EfbigExcE", "N3Iex9EnospcExcE", "N3Iex9EspipeExcE", "N3Iex8ErofsExcE", "N3Iex9EmlinkExcE", "N3Iex8EpipeExcE", "N3Iex7EdomExcE", "N3Iex9ErangeExcE", "N3Iex9EnomsgExcE", "N3Iex8EidrmExcE", "N3Iex9EchrngExcE", "N3Iex11El2nsyncExcE", "N3Iex9El3hltExcE", "N3Iex9El3rstExcE", "N3Iex9ElnrngExcE", "N3Iex10EunatchExcE", "N3Iex9El2hltExcE", "N3Iex10EdeadlkExcE", "N3Iex9EnolckExcE", "N3Iex8EbadeExcE", "N3Iex8EbadrExcE", "N3Iex9ExfullExcE", "N3Iex9EnoanoExcE", "N3Iex10EbadrqcExcE", "N3Iex10EbadsltExcE", "N3Iex9EbfontExcE", "N3Iex9EnostrExcE", "N3Iex10EnodataExcE", "N3Iex8EtimeExcE", "N3Iex8EnosrExcE", "N3Iex9EnonetExcE", "N3Iex9EnopkgExcE", "N3Iex10EremoteExcE", "N3Iex10EnolinkExcE", "N3Iex7EadvExcE", "N3Iex9EsrmntExcE", "N3Iex8EcommExcE", "N3Iex9EprotoExcE", "N3Iex12EmultihopExcE", "N3Iex10EbadmsgExcE", "N3Iex15EnametoolongExcE", "N3Iex12EoverflowExcE", "N3Iex11EnotuniqExcE", "N3Iex9EbadfdExcE", "N3Iex10EremchgExcE", "N3Iex10ElibaccExcE", "N3Iex10ElibbadExcE", "N3Iex10ElibscnExcE", "N3Iex10ElibmaxExcE", "N3Iex11ElibexecExcE", "N3Iex9EilseqExcE", "N3Iex9EnosysExcE", "N3Iex8EloopExcE", "N3Iex11ErestartExcE", "N3Iex11EstrpipeExcE", "N3Iex12EnotemptyExcE", "N3Iex9EusersExcE", "N3Iex11EnotsockExcE", "N3Iex15EdestaddrreqExcE", "N3Iex11EmsgsizeExcE", "N3Iex13EprototypeExcE", "N3Iex14EnoprotooptExcE", "N3Iex18EprotonosupportExcE", "N3Iex18EsocktnosupportExcE", "N3Iex13EopnotsuppExcE", "N3Iex15EpfnosupportExcE", "N3Iex15EafnosupportExcE", "N3Iex13EaddrinuseExcE", "N3Iex16EaddrnotavailExcE", "N3Iex11EnetdownExcE", "N3Iex14EnetunreachExcE", "N3Iex12EnetresetExcE", "N3Iex15EconnabortedExcE", "N3Iex13EconnresetExcE", "N3Iex10EnobufsExcE", "N3Iex10EisconnExcE", "N3Iex11EnotconnExcE", "N3Iex12EshutdownExcE", "N3Iex15EtoomanyrefsExcE", "N3Iex12EtimedoutExcE", "N3Iex15EconnrefusedExcE", "N3Iex12EhostdownExcE", "N3Iex15EhostunreachExcE", "N3Iex11EalreadyExcE", "N3Iex14EinprogressExcE", "N3Iex9EstaleExcE", "N3Iex10EucleanExcE", "N3Iex10EnotnamExcE", "N3Iex10EnavailExcE", "N3Iex9EisnamExcE", "N3Iex12EremoteioExcE", "N3Iex12EcanceledExcE", "N3Iex9EdquotExcE", "N3Iex7BaseExcE", "N9IlmThread5MutexE", "N9IlmThread9SemaphoreE", "*N9IlmThread12_GLOBAL__N_112WorkerThreadE", "N9IlmThread10ThreadPoolE", "N9IlmThread4TaskE", "N3Imf13B44CompressorE", "N3Imf13RleCompressorE", "*N3Imf12_GLOBAL__N_114TileBufferTaskE", "N3Imf14TiledInputFileE", "N3Imf14TiledInputFile4DataE", "N3Imf15OpaqueAttributeE", "N9IlmThread6ThreadE", "N10__cxxabiv121__vmi_class_type_infoE", "N10__cxxabiv116__enum_type_infoE", "N10__cxxabiv120__si_class_type_infoE", "N10__cxxabiv117__class_type_infoE", "N10__cxxabiv119__pointer_type_infoE", "N10__cxxabiv123__fundamental_type_infoE", "PKDs", "PKDi", "PKDf", "PKDd", "PKDe", "PKDn", "St9exception", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "St9bad_alloc", "St9basic_iosIcSt11char_traitsIcEE", "St9basic_iosIwSt11char_traitsIwEE", "St11logic_error", "St16invalid_argument", "St12length_error", "St12out_of_range", "St13runtime_error", "St11range_error", "St15basic_streambufIcSt11char_traitsIcEE", "St15basic_streambufIwSt11char_traitsIwEE", "St8ios_base", "St10ctype_base", "St10money_base", "St13messages_base", "St12codecvt_base", "St7collateIcE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "St13basic_istreamIwSt11char_traitsIwEE", "St15basic_stringbufIcSt11char_traitsIcESaIcEE", "St19basic_istringstreamIcSt11char_traitsIcESaIcEE", "St19basic_ostringstreamIcSt11char_traitsIcESaIcEE", "St18basic_stringstreamIcSt11char_traitsIcESaIcEE", "St5ctypeIwE", "N9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE", "N9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE", "NSt6locale5facetE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St13basic_ostreamIwSt11char_traitsIwEE", "St13basic_filebufIcSt11char_traitsIcEE", "St14basic_ifstreamIcSt11char_traitsIcEE", "St14basic_ofstreamIcSt11char_traitsIcEE", "St9type_info", "St10bad_typeid", "N10__cxxabiv117__pbase_type_infoE", "St8bad_cast", "*N12_GLOBAL__N_122generic_error_categoryE", "*N12_GLOBAL__N_121system_error_categoryE", "St14error_category"], "stringidentifiers": ["clear", "vector::reserve", "size", "std::exception", "cv::Exception", "nativeObj", "name", "vectors", "values", "mean", "vector::_M_fill_insert", "uint8", "int8", "uint16", "int16", "int32", "float32", "float64", "uint64", "OPENCV_TEMP_PATH", "status", "error", "Backtrace", "OPENCV_DUMP_CONFIG", "SSE2", "SSE3", "SSSE3", "POPCNT", "FP16", "AVX2", "FMA3", "AVX512F", "AVX512BW", "AVX512CD", "AVX512DQ", "AVX512ER", "AVX512IFMA", "AVX512PF", "AVX512VBMI", "AVX512VL", "NEON", "OPENCV_CPU_DISABLE", "OPENCV_IPP", "disabled", "sse2", "sse3", "ssse3", "sse41", "sse42", "avx2", "True", "true", "TRUE", "False", "false", "FALSE", "parallel_for_body", "nstripes", "parallel_for", "num_components", "eigenvalues", "eigenvectors", "GRAY", "BGRA", "type_id", "width", "height", "origin", "layout", "interleaved", "data", "sizes", "rows", "cols", "flags", "vertex_dt", "edge_dt", "vertex_count", "edge_count", "oriented", "header_dt", "header_user_data", "vertices", "edges", "count", "curve", "closed", "hole", "untyped", "rect", "color", "sequences", "level", "binary", "vector::_M_insert_aux", "planar", "recursive", "apos", "quot", "float", "basic_string::at", "null", "basic_string::substr", "base64", "opencv_storage", "bool", "unsigned", "double", "string", "unknown", "OPENCV_OPENCL_RAISE_ERROR", "HOST_ALLOC", "Intel", "Iris", "cl_khr_image2d_from_buffer", "_sat", "noconvert", "COEFF", "OPENCV_OPENCL_FORCE", "vectorWidths", "OPENCV_OPENCL_DEVICE", "dgpu", "igpu", "accelerator", "OPENCV_OPENCL_PROGRAM_CACHE", "uchar", "short", "uchar3", "int2", "int4", "char", "char3", "ushort", "ushort3", "short3", "int3", "ulong", "ulong2", "ulong3", "ulong4", "ulong8", "ulong16", "uchar2", "uchar4", "uchar8", "uchar16", "char2", "char4", "char8", "char16", "ushort2", "ushort4", "ushort8", "ushort16", "short2", "short4", "short8", "short16", "float2", "float3", "float4", "float8", "float16", "double2", "double3", "double4", "double8", "double16", "OpenCVTrace", "tIPP", "OPENCV_TRACE", "OPENCV_TRACE_DEPTH_OPENCV", "OPENCV_TRACE_MAX_CHILDREN", "OPENCV_TRACE_LOCATION", "OPENCV_TRACE_ITT_PARENT", "algorithm", "trees", "branching", "iterations", "centers_init", "cb_index", "target_precision", "build_weight", "memory_weight", "sample_fraction", "leaf_size", "table_number", "key_size", "multi_probe_level", "filename", "checks", "sorted", "FLANN_INDEX", "leaf_max_size", "reorder", "finalPass", "global_hysteresis", "hysteresis", "magnitude", "gradient", "type", "is_uniform", "have_ranges", "bins", "thresh", "MXVNTMRMPNOPOSPURVTVVU", "PTRMRV", "NUSMSTRVPVOTOS", "MXRMPNOPOSPURVSVUUVSVPUNSMRM", "MWUNSMQMONOOPPTRUSUUSVQVOU", "MXOMOSPURVSVUUVSVM", "MXOVQVOROPPNRMSMUNVPVRTVVV", "LXVPUNTMRMPNOONQNSOUPVRVTUUT", "PUTMQV", "OVUMSSRUQVPVOUOT", "MWVNTMRMPNPPQQTRUSUUSVPVNU", "LXPMNSNUOVRVTUUSWM", "MWQMWMNVTV", "MWNLVX", "MWNVVV", "PVRMUQ", "MWMMOKQKTMVMWK", "MWUQSPRPPQOSPURVSVUU", "MWOSUSTQRPPQOSPURVTV", "MWRPPQOSPURVTUUSTQRP", "NWUQTPQPPQPRQSTSUTUUTVQVPU", "MWOPUPOVUV", "MXVPUSTURVPUOSPQRPTQUUVV", "OVRPQSQURVSVTU", "MWOSPURVTUUSTQRPPQOSNY", "MXVPRPPQOSPURVTUUSTQRP", "KXMQNPOPPQPUQVSVTUUSVP", "MWQMOSPURVTUUSTQRPPQOS", "MWUQSPRPPQOSPURVTV", "MWOSTSURUQSPRPPQOSPURVTV", "OTSMQSQURVSV", "NVTQSPQPPQPRQSRSSTSURVPVOU", "MWNPOPPQPROTOUPVRVTUURUP", "MWUSTQRPPQOSPURVTUUSUPTNRMQM", "MWUQSPQPOQOSPTRUSVSWRXQX", "MWUNORUV", "MWONUROV", "OUTKQKQYTY", "OUPKSKSYPY", "OUTKSLRNROSQQRSSRURVSXTY", "OUPKQLRNROQQSRQSRURVQXPY", "MWRMPNOPOSPURVTUUSUPTNRM", "MWPORMRV", "MWONQMSMUNUPTROVUV", "MWTMRMPNOPOSPURVTUUSTQRPPQOS", "MWUPTRRSPROPPNRMTNUPUSTURVPV", "PURURVSVSURU", "PUSVRVRUSUSWRY", "PTRMRQ", "NVQMPNPPQQSQTPTNSMQM", "MWVLNX", "OUTKRNQQQSRVTY", "OUPKRNSQSSRVPY", "PTRKRY", "LXNRVR", "PURQRRSRSQRQ", "PUSMRORQSQSPRP", "PUSNRNRMSMSORQ", "NVRFRM", "KYQFOGNINKOMQNSNUMVKVIUGSFQF", "NVRBRb", "MWRQQRRSSRRQ", "MWSFRGQIQKRLSKRJ", "MWRHQGRFSGSIRKQL", "MWWRWQVOUNSMQMONNOMQMR", "MWMRMSNUOVQWSWUVVUWSWR", "LXLPNRQSSSVRXP", "RURUTTURTPRO", "RVRRUPVNVLUKTK", "NRRROPNNNLOKPK", "KYKRYR", "MWMWWM", "MWMMWW", "KYRJYNKVRZ", "JZJRNKVYZR", "KYKVKNYVYN", "JZLXJPZTXL", "LXLLLXXXXLLL", "KYRJKVYVRJ", "JZRIPOJOOSMYRUWYUSZOTORI", "LXPLPPLPLTPTPXTXTTXTXPTPTLPL", "QSRQQRRSSRRQ", "PTQPPQPSQTSTTSTQSPQP", "NVQNOONQNSOUQVSVUUVSVQUOSNQN", "NVRVQWRXSWRV", "MWQKPLPNQOSOTNTLSKQK", "NVRQQRRSSRRQ", "JZWLMRWX", "JZMLWRMX", "NVSLRMQLRKSLSNQP", "NVSKQMQORPSORNQO", "NVQLRMSLRKQLQNSP", "NVQKSMSORPQORNSO", "JZWMQMONNOMQMSNUOVQWWW", "JZMMMSNUOVQWSWUVVUWSWM", "JZMMSMUNVOWQWSVUUVSWMW", "JZMWMQNOONQMSMUNVOWQWW", "KYUBNRUb", "KYOBVROb", "MWRHSGRFQGQIRKSL", "MWQFRGSISKRLQKRJ", "MXVFTHSJSKTLUKTJ", "MXUHTGUFVGVHUJSL", "KZSFQGPIPKQMSNUNWMXKXIWGUFSF", "GAUSSIAN", "IDENTITY", "SIGMOID_SYM", "activation_function", "activation_function_id", "f_param1", "f_param2", "min_val", "max_val", "min_val1", "max_val1", "training_params", "train_method", "BACKPROP", "dw_scale", "moment_scale", "RPROP", "dw_plus", "dw_minus", "dw_min", "dw_max", "term_criteria", "epsilon", "layer_sizes", "input_scale", "output_scale", "inv_output_scale", "weights", "vector::_M_range_check", "SVM::getDefaultGrid", "C_SVC", "NU_SVC", "ONE_CLASS", "EPS_SVR", "NU_SVR", "LINEAR", "POLY", "SIGMOID", "CHI2", "INTER", "degree", "gamma", "coef0", "var_count", "class_count", "class_labels", "class_weights", "sv_total", "support_vectors", "uncompressed_sv_total", "uncompressed_support_vectors", "decision_functions", "index", "svm_type", "svmType", "kernel", "sv_count", "alpha", "optimize_linear", "norm", "mini_batch_size", "learnt_thetas", "o_labels", "n_labels", "ntrees", "nodes", "RealAdaboost", "DiscreteAdaboost", "LogitBoost", "Unknown", "GentleAdaboost", "boosting_type", "weight_trimming_rate", "svmsgdType", "ASGD", "marginType", "SOFT_MARGIN", "HARD_MARGIN", "marginRegularization", "initialStepSize", "stepDecreasingPower", "shift", "means", "probs", "nclusters", "cov_mat_type", "spherical", "diagonal", "generic", "covs", "var_all", "var_idx", "cls_labels", "productsum", "inv_eigen_values", "cov_rotate_mats", "is_classifier", "default_k", "samples", "responses", "opencv_ml_knn", "opencv_ml_knn_kd", "not_in", "value", "norm_class_idx", "splits", "quality", "use_surrogates", "max_categories", "regression_accuracy", "max_depth", "min_sample_count", "cross_validation_folds", "use_1se_rule", "priors", "var_type", "format", "cat_map", "cat_count", "vector::_M_range_insert", "cat_ofs", "missing_subst", "global_var_idx", "oob_error", "var_importance", "nactive_vars", "stages", "stage_threshold", "feature", "tilted", "rects", "threshold", "left_val", "left_node", "right_val", "right_node", "parent", "next", "stageType", "BOOST", "featureType", "HAAR", "featureParams", "maxCatCount", "weakClassifiers", "leafValues", "internalNodes", "stageThreshold", "features", "winSize", "blockSize", "blockStride", "cellSize", "nbins", "derivAperture", "winSigma", "histogramNormType", "L2HysThreshold", "gammaCorrection", "nlevels", "signedGradient", "SVMDetector", "OBJECT_DETECTOR", "bias", "saturation", "scale", "intensity", "light_adapt", "color_adapt", "contrast", "sigma_color", "sigma_space", "contrast_weight", "saturation_weight", "exposure_weight", "max_bits", "exclude_range", "max_iter", "lambda", "random", "history", "nsamples", "nKNN", "dist2Threshold", "detectShadows", "shadowValue", "shadowThreshold", "nmixtures", "backgroundRatio", "varThreshold", "varThresholdGen", "varInit", "varMin", "varMax", "complexityReductionThreshold", "MapKey::GetStringValue", "constant", "warp", "_param", "accuracy", "bnll", "concat", "conv", "dropout", "euclidean_loss", "flatten", "hdf5_data", "hdf5_output", "im2col", "images", "infogain_loss", "innerproduct", "multinomial_logistic_loss", "pool", "relu", "sigmoid", "softmax", "softmax_loss", "split", "tanh", "window_data", "FATAL", "BatchNorm", "AbsVal", "Accuracy", "ArgMax", "BNLL", "Concat", "ContrastiveLoss", "Convolution", "Deconvolution", "Data", "Dropout", "DummyData", "EuclideanLoss", "Eltwise", "Flatten", "HDF5Data", "HDF5Output", "HingeLoss", "Im2col", "ImageData", "InfogainLoss", "InnerProduct", "MemoryData", "MultinomialLogisticLoss", "Pooling", "Power", "ReLU", "Sigmoid", "SigmoidCrossEntropyLoss", "Silence", "Softmax", "SoftmaxWithLoss", "Split", "Slice", "TanH", "WindowData", "Threshold", "CHECK", "ERROR", "padding", "INFO", "V0LayerParameter", "V1LayerParameter", "map::at", "ksize", "strides", "Identity", "Const", "Conv2D", "bias_term", "BiasAdd", "kernel_h", "kernel_w", "num_output", "Shift", "Reshape", "reorder_dims", "beta", "depth_radius", "local_size", "norm_by_size", "ConcatV2", "axis", "AvgPool", "Placeholder", "slice_point", "prod", "padding_dim", "Padding", "FusedBatchNorm", "has_weight", "has_bias", "Tanh", "Relu", "dtype", "transpose_a", "transpose_b", "MatMul", "MaxPool", "operation", "Double", "Float", "Cuda", "Byte", "Char", "Short", "Long", "Storage", "stride_h", "stride_w", "padH", "pad_h", "padW", "pad_w", "Sequential", "dimension", "torchSplit", "torchMerge", "Parallel", "inputDimension", "outputDimension", "num_axes", "torchReshape", "ConcatTable", "JoinTable", "CAddTable", "torchCAddTable", "SpatialMaxUnpooling", "indices_blob_id", "pool_k_h", "pool_k_w", "pool_stride_h", "pool_stride_w", "pool_pad_h", "pool_pad_w", "torchMaxUnpooling", "MaxUnpool", "Tensor", "torch_index", "weight", "nOutputPlane", "SpatialMaxPooling", "SpatialAveragePooling", "indices", "batchMode", "SpatialBatchNormalization", "running_var", "running_mean", "PReLU", "ChannelsPReLU", "negative_slope", "SpatialDropout", "nInputDim", "input_dims", "SpatialDilatedConvolution", "dilationW", "dilation_w", "dilationH", "dilation_h", "SpatialFullConvolution", "adjW", "adj_w", "adjH", "adj_h", "SoftMax", "LogSoftMax", "log_softmax", "SpatialConvolution", "Linear", "scheduler", "targetId", "backendId", "ACROSS_CHANNELS", "WITHIN_CHANNEL", "variance", "min_size", "flip", "clip", "aspect_ratio", "step_h", "step_w", "step", "PriorBox", "stochastic", "across_spatial", "channel_shared", "NormalizeBBox", "VALID", "SAME", "kernel_size", "stride", "dilation", "num_classes", "share_location", "background_label_id", "variance_encoded_in_target", "keep_top_k", "confidence_threshold", "top_k", "corner", "center_size", "nms_threshold", "DetectionOutput", "RGBE", "OPENCV_VIDEOCAPTURE_DEBUG", "cvNamedWindow", "cvDestroyWindow", "cvDestroyAllWindows", "cvShowImage", "cvResizeWindow", "cvMoveWindow", "cvCreateTrackbar", "cvCreateTrackbar2", "cvSetMouseCallback", "cvGetTrackbarPos", "cvSetTrackbarPos", "cvSetTrackbarMax", "cvSetTrackbarMin", "cvGetWindowHandle", "cvGetWindowName", "cvWaitKey", "OPENCV_LEGACY_WAITKEY", "cvInitSystem", "cvStartWindowThread", "cvAddText", "cvDisplayStatusBar", "cvStartLoop", "cvStopLoop", "cvSaveWindowParameters", "cvCreateButton", "extended", "upright", "octaves", "sublevels", "diffusivity", "descriptor", "descriptor_channels", "descriptor_size", "indexParams", "searchParams", "typename", "FlannBased", "BruteForce", "thresholdStep", "minThreshold", "maxThreshold", "minRepeatability", "minDistBetweenBlobs", "filterByColor", "blobColor", "filterByArea", "minArea", "maxArea", "filterByCircularity", "minCircularity", "maxCircularity", "filterByInertia", "minInertiaRatio", "maxInertiaRatio", "filterByConvexity", "minConvexity", "maxConvexity", "minDisparity", "numDisparities", "speckleWindowSize", "speckleRange", "disp12MaxDiff", "preFilterType", "preFilterSize", "preFilterCap", "textureThreshold", "uniquenessRatio", "mode", "nRads", "nAngs", "iters", "beWei", "scWei", "iaWei", "costF", "sigma", "regularization", "distance", "rank", "affine_type", "dummies", "default", "flag", "private", "shared", "scalable_malloc", "malloc", "ALLOCATOR", "scalable_free", "scalable_aligned_malloc", "scalable_aligned_free", "TBB_VERSION", "__RML_open_factory", "__TBB_make_rml_server", "__RML_close_factory", "pthread_join", "pthread_detach", "pthread_attr_init", "pthread_attr_setstack_size", "pthread_create", "pthread_attr_destroy", "parse", "CANCELLED", "UNKNOWN", "INVALID_ARGUMENT", "DEADLINE_EXCEEDED", "NOT_FOUND", "ALREADY_EXISTS", "PERMISSION_DENIED", "UNAUTHENTICATED", "RESOURCE_EXHAUSTED", "FAILED_PRECONDITION", "ABORTED", "OUT_OF_RANGE", "UNIMPLEMENTED", "INTERNAL", "UNAVAILABLE", "DATA_LOSS", "parsing", "serializing", "proto2", "proto3", "uninterpreted_option", "Entry", "FileOptions", "MessageOptions", "FieldOptions", "EnumOptions", "EnumValueOptions", "ServiceOptions", "MethodOptions", "proto", "basic_string::erase", "PLACEHOLDER_VALUE", "optional", "required", "repeated", "int64", "uint32", "enum", "message", "fixed64", "fixed32", "group", "bytes", "sfixed32", "sfixed64", "sint32", "sint64", "MutableRawRepeatedField", "GetRawRepeatedField", "SetRepeatedString", "AddString", "SetRepeatedUInt32", "SetRepeatedBool", "SetRepeatedFloat", "SetRepeatedInt64", "SetRepeatedUInt64", "SetRepeatedDouble", "SetRepeatedInt32", "GetMessage", "GetRepeatedUInt32", "GetRepeatedFloat", "GetRepeatedBool", "GetRepeatedStringReference", "GetRepeatedInt64", "GetRepeatedUInt64", "GetRepeatedDouble", "MutableMessage", "GetRepeatedString", "GetStringReference", "GetBool", "GetFloat", "GetUInt32", "GetUInt64", "GetDouble", "GetInt64", "MutableRepeatedMessage", "SetFloat", "SetUInt32", "SetBool", "SetUInt64", "SetInt64", "SetDouble", "GetString", "GetRepeatedEnumValue", "GetRepeatedInt32", "RemoveLast", "Swap", "GetInt32", "GetEnumValue", "SetInt32", "SetEnum", "SetEnumValue", "SetRepeatedEnum", "SetAllocatedMessage", "ReleaseMessage", "SetString", "GetRepeatedMessage", "FieldSize", "AddMessage", "HasField", "ClearField", "AddEnum", "AddInt32", "AddUInt32", "AddUInt64", "AddInt64", "AddFloat", "AddDouble", "ReleaseLast", "AddBool", "AddAllocatedMessage", "INVALID_CPPTYPE", "CPPTYPE_INT32", "CPPTYPE_INT64", "CPPTYPE_UINT32", "CPPTYPE_UINT64", "CPPTYPE_DOUBLE", "CPPTYPE_FLOAT", "CPPTYPE_BOOL", "CPPTYPE_ENUM", "CPPTYPE_STRING", "CPPTYPE_MESSAGE", "Unsupported", "MapValueRef::GetMessageValue", "MapKey::GetInt64Value", "MapKey::GetInt32Value", "MapKey::GetUInt64Value", "MapKey::GetUInt32Value", "MapKey::GetBoolValue", "MapValueRef::GetStringValue", "MapValueRef::GetInt64Value", "MapValueRef::GetInt32Value", "MapValueRef::GetUInt64Value", "MapValueRef::GetUInt32Value", "MapValueRef::GetBoolValue", "MapValueRef::GetDoubleValue", "MapValueRef::GetFloatValue", "MapValueRef::GetEnumValue", "infinity", "AuthenticAMD", "INTEL_LIBITTNOTIFY32", "pthread_mutexattr_init", "pthread_mutexattr_settype", "pthread_mutex_init", "pthread_mutexattr_destroy", "__itt_api_fini", "KMP_FOR_TPROFILE", "INTEL_ITTNOTIFY_GROUPS", "__itt_api_init", "__itt_api_version", "__itt_domain_create", "__itt_string_handle_create", "__itt_counter_create", "__itt_counter_create_typed", "__itt_pause", "__itt_resume", "__itt_thread_set_name", "__itt_thread_ignore", "__itt_thr_name_set", "__itt_thr_ignore", "__itt_enable_attach", "__itt_detach", "__itt_sync_create", "__itt_sync_rename", "__itt_sync_destroy", "__itt_sync_prepare", "__itt_sync_cancel", "__itt_sync_acquired", "__itt_sync_releasing", "__itt_suppress_push", "__itt_suppress_pop", "__itt_suppress_mark_range", "__itt_suppress_clear_range", "__itt_model_site_begin", "__itt_model_site_end", "__itt_model_task_begin", "__itt_model_task_end", "__itt_model_lock_acquire", "__itt_model_lock_release", "__itt_model_record_allocation", "__itt_model_induction_uses", "__itt_model_reduction_uses", "__itt_model_observe_uses", "__itt_model_clear_uses", "__itt_model_site_beginA", "__itt_model_site_beginAL", "__itt_model_task_beginA", "__itt_model_task_beginAL", "__itt_model_iteration_taskA", "__itt_model_iteration_taskAL", "__itt_model_site_end_2", "__itt_model_task_end_2", "__itt_model_lock_acquire_2", "__itt_model_lock_release_2", "__itt_model_aggregate_task", "__itt_model_disable_push", "__itt_model_disable_pop", "__itt_heap_function_create", "__itt_heap_allocate_begin", "__itt_heap_allocate_end", "__itt_heap_free_begin", "__itt_heap_free_end", "__itt_heap_reallocate_begin", "__itt_heap_reallocate_end", "__itt_heap_reset_detection", "__itt_heap_record", "__itt_id_create", "__itt_id_destroy", "__itt_get_timestamp", "__itt_region_begin", "__itt_region_end", "__itt_frame_begin_v3", "__itt_frame_end_v3", "__itt_frame_submit_v3", "__itt_task_group", "__itt_task_begin", "__itt_task_begin_fn", "__itt_task_end", "__itt_counter_inc_v3", "__itt_counter_inc_delta_v3", "__itt_counter_dec_v3", "__itt_counter_dec_delta_v3", "__itt_marker", "__itt_metadata_add", "__itt_metadata_str_add", "__itt_relation_add_to_current", "__itt_relation_add", "__itt_event_create", "__itt_event_start", "__itt_event_end", "__itt_sync_set_name", "__itt_notify_sync_name", "__itt_notify_sync_prepare", "__itt_notify_sync_cancel", "__itt_notify_sync_acquired", "__itt_notify_sync_releasing", "__itt_memory_read", "__itt_memory_write", "__itt_memory_update", "__itt_state_get", "__itt_state_set", "__itt_obj_mode_set", "__itt_thr_mode_set", "__itt_frame_create", "__itt_frame_begin", "__itt_frame_end", "__itt_counter_destroy", "__itt_counter_inc", "__itt_counter_inc_delta", "__itt_counter_dec", "__itt_counter_dec_delta", "__itt_counter_set_value", "__itt_counter_set_value_ex", "__itt_mark_create", "__itt_mark", "__itt_mark_off", "__itt_mark_global", "__itt_mark_global_off", "__itt_stack_caller_create", "__itt_stack_caller_destroy", "__itt_stack_callee_enter", "__itt_stack_callee_leave", "__itt_clock_domain_create", "__itt_clock_domain_reset", "__itt_id_create_ex", "__itt_id_destroy_ex", "__itt_task_begin_ex", "__itt_task_begin_fn_ex", "__itt_task_end_ex", "__itt_task_begin_overlapped", "__itt_task_end_overlapped", "__itt_task_end_overlapped_ex", "__itt_marker_ex", "__itt_metadata_add_with_scope", "__itt_relation_add_ex", "__itt_track_group_create", "__itt_track_create", "__itt_set_track", "__itt_av_save", "__itt_module_load", "KMP_FOR_TCHECK", "control", "thread", "mark", "sync", "fsync", "model", "counter", "frame", "stitch", "heap", "structure", "suppress", "arrays", "JPEGMEM", "RIFF", "WEBP", "VP8X", "ALPH", "VP8L", "undefined", "png_set_background", "invalid", "duplicate", "truncated", "sRGB", "png_set_gAMA", "_TIFFVGetField", "DotRange", "TIFFSetField", "_TIFFSetupFields", "TIFFFieldWithTag", "TIFFFieldWithName", "ExposureTime", "FNumber", "ExposureProgram", "SpectralSensitivity", "ISOSpeedRatings", "OptoelectricConversionFactor", "ExifVersion", "DateTimeOriginal", "DateTimeDigitized", "ComponentsConfiguration", "CompressedBitsPerPixel", "ShutterSpeedValue", "ApertureValue", "BrightnessValue", "ExposureBiasValue", "MaxApertureValue", "SubjectDistance", "MeteringMode", "LightSource", "Flash", "FocalLength", "SubjectArea", "MakerNote", "UserComment", "SubSecTime", "SubSecTimeOriginal", "SubSecTimeDigitized", "FlashpixVersion", "ColorSpace", "PixelXDimension", "PixelYDimension", "RelatedSoundFile", "FlashEnergy", "SpatialFrequencyResponse", "FocalPlaneXResolution", "FocalPlaneYResolution", "FocalPlaneResolutionUnit", "SubjectLocation", "ExposureIndex", "SensingMethod", "FileSource", "SceneType", "CFAPattern", "CustomRendered", "ExposureMode", "WhiteBalance", "DigitalZoomRatio", "FocalLengthIn35mmFilm", "SceneCaptureType", "GainControl", "Contrast", "Saturation", "Sharpness", "DeviceSettingDescription", "SubjectDistanceRange", "ImageUniqueID", "SubfileType", "OldSubfileType", "ImageWidth", "ImageLength", "BitsPerSample", "Compression", "PhotometricInterpretation", "Threshholding", "CellWidth", "CellLength", "FillOrder", "DocumentName", "ImageDescription", "Make", "Model", "StripOffsets", "Orientation", "SamplesPerPixel", "RowsPerStrip", "StripByteCounts", "MinSampleValue", "MaxSampleValue", "XResolution", "YResolution", "PlanarConfiguration", "PageName", "XPosition", "YPosition", "FreeOffsets", "FreeByteCounts", "GrayResponseUnit", "GrayResponseCurve", "ResolutionUnit", "PageNumber", "ColorResponseUnit", "TransferFunction", "Software", "DateTime", "Artist", "HostComputer", "WhitePoint", "PrimaryChromaticities", "ColorMap", "HalftoneHints", "TileWidth", "TileLength", "TileOffsets", "TileByteCounts", "SubIFD", "InkSet", "InkNames", "NumberOfInks", "TargetPrinter", "ExtraSamples", "SampleFormat", "SMinSampleValue", "SMaxSampleValue", "ClipPath", "XClipPathUnits", "YClipPathUnits", "YCbCrCoefficients", "YCbCrSubsampling", "YCbCrPositioning", "ReferenceBlackWhite", "XMLPacket", "Matteing", "DataType", "ImageDepth", "TileDepth", "ImageFullWidth", "ImageFullLength", "TextureFormat", "TextureWrapModes", "FieldOfViewCotangent", "MatrixWorldToScreen", "MatrixWorldToCamera", "Copyright", "RichTIFFIPTC", "Photoshop", "EXIFIFDOffset", "GPSIFDOffset", "FaxRecvParams", "FaxSubAddress", "FaxRecvTime", "FaxDcs", "StoNits", "InteroperabilityIFDOffset", "DNGVersion", "DNGBackwardVersion", "UniqueCameraModel", "LocalizedCameraModel", "CFAPlaneColor", "CFALayout", "LinearizationTable", "BlackLevelRepeatDim", "BlackLevel", "BlackLevelDeltaH", "BlackLevelDeltaV", "WhiteLevel", "DefaultScale", "BestQualityScale", "DefaultCropOrigin", "DefaultCropSize", "ColorMatrix1", "ColorMatrix2", "CameraCalibration1", "CameraCalibration2", "ReductionMatrix1", "ReductionMatrix2", "AnalogBalance", "AsShotNeutral", "AsShotWhiteXY", "BaselineExposure", "BaselineNoise", "BaselineSharpness", "BayerGreenSplit", "LinearResponseLimit", "CameraSerialNumber", "LensInfo", "ChromaBlurRadius", "AntiAliasStrength", "ShadowScale", "DNGPrivateData", "MakerNoteSafety", "CalibrationIlluminant1", "CalibrationIlluminant2", "RawDataUniqueID", "OriginalRawFileName", "OriginalRawFileData", "ActiveArea", "MaskedAreas", "AsShotICCProfile", "AsShotPreProfileMatrix", "CurrentICCProfile", "CurrentPreProfileMatrix", "PerSample", "ReadDirEntryArray", "TIFFFetchNormalTag", "tiles", "strips", "Colormap", "gtStripSeparate", "gtTileSeparate", "Planarconfiguration", "TIFFNumberOfStrips", "TIFFTileRowSize", "TIFFNumberOfTiles", "tile", "strip", "scanline", "TIFFRegisterCODEC", "TIFFUnRegisterCODEC", "None", "PackBits", "ThunderScan", "NeXT", "JPEG", "Deflate", "AdobeDeflate", "PixarLog", "SGILog", "SGILog24", "LZMA", "InitCCITTFax3", "TIFFInitCCITTFax3", "TIFFInitCCITTFax4", "Group4Options", "Group3Options", "FaxMode", "FaxFillFunc", "BadFaxLines", "CleanFaxData", "ConsecutiveBadFaxLines", "SGILogDataFmt", "SGILogEncode", "TIFFPredictorInit", "Predictor", "real", "lrcp", "rlcp", "rpcl", "pcrl", "cprl", "debug", "imgareatlx", "imgareatly", "tilegrdtlx", "tilegrdtly", "tilewidth", "tileheight", "prcwidth", "prcheight", "cblkwidth", "cblkheight", "nomct", "numrlvls", "lazy", "termall", "segsym", "vcausal", "pterm", "resetprob", "numgbits", "rate", "ilyrrates", "_jp2overhead", "FTYP", "JP2H", "IHDR", "BPCC", "COLR", "PCLR", "CMAP", "CDEF", "RESC", "RESD", "JP2C", "JP2I", "UUID", "UINF", "ULST", "maxlyrs", "maxpkts", "preview", "chromaticities", "whiteLuminance", "adoptedNeutral", "xDensity", "utcOffset", "longitude", "latitude", "altitude", "focus", "expTime", "aperture", "isoSpeed", "envmap", "keyCode", "timeCode", "framesPerSecond", "worldToCamera", "worldToNDC", "renderingTransform", "lookModTransform", "owner", "comments", "capDate", "wrapmodes", "multiView", "timecode", "displayWindow", "dataWindow", "pixelAspectRatio", "screenWindowCenter", "screenWindowWidth", "channels", "lineOrder", "compression", "box2i", "box2f", "stringvector", "chlist", "rational", "m33f", "m33d", "m44f", "m44d", "tiledesc", "keycode", "std::bad_exception", "std::bad_alloc", "basic_ios::clear", "POSIX", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "basic_string::copy", "basic_string::compare", "basic_string::_S_create", "basic_string::_M_replace_aux", "basic_string::insert", "basic_string::replace", "basic_string::assign", "basic_string::append", "basic_string::resize", "basic_string::basic_string", "std::bad_typeid", "std::bad_cast", "AKST", "space", "print", "cntrl", "upper", "lower", "digit", "punct", "xdigit", "alnum", "graph", "system", "_GLOBAL_", "auto", "JArray", "_Accum", "_Fract", "operator", "this", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "const_cast", "dynamic_cast", "reinterpret_cast", "static_cast", "throw", "boolean", "byte", "__float128", "long", "__int128", "void", "wchar_t", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "OPENCV_OPENCL_PERF_CHECK_BYPASS", "OPENCV_OPENCL_BUFFERPOOL_LIMIT", "OPENCV_OPENCL_HOST_PTR_BUFFERPOOL_LIMIT", "OPENCV_TRACE_MAX_CHILDREN_OPENCV", "deque::_M_new_elements_at_front", "deque::_M_new_elements_at_back", "LXVPUNTMRMPNOONQNSOUPVRVTUUSRS", "LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM", "MWOTQVSVTUTSSRPQRQTPUOUNTMRMQNPPOTNY", "MWTNSMRMQNQORPTQUSTURVPUOSPQRP", "LXNQOPPPQQQURVSVTUUSVPVNUMTMSNSPTRUSWT", "MXPPOQOSPURVSVUUVSVQUPTPSQRSQY", "LXVRURTSSURVOVNUNSORRQSPSNRMPMONOPQSSUUVVV", "LYRQQPOPNQNSOTQTRSSQTPVPWQWSVTTTSSRQ", "KYQKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK", "MWQMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM", "__TBB_call_with_my_server_info", "vsSqrt", "vsExp", "vsInvSqrt", "vdSqrt", "vdLn", "vsLn", "vdInvSqrt", "vdExp", "vdSin", "vdSinCos", "vdCos", "sSinCos_HA", "sSinCos_LA", "sSinCos_A11", "dSinCos_HA", "dSinCos_LA", "dSinCos_A11", "zCIS_HA", "zCIS_LA", "zCIS_A11", "sCos_HA", "sCos_LA", "sCos_A11", "dCos_HA", "dCos_LA", "dCos_A11", "sSin_HA", "sSin_LA", "sSin_A11", "dSin_HA", "dSin_LA", "dSin_A11", "__itt_model_record_deallocation", "__itt_heap_internal_access_begin", "__itt_heap_internal_access_end", "__itt_heap_record_memory_growth_begin", "__itt_heap_record_memory_growth_end", "__itt_task_begin_overlapped_ex", "__itt_metadata_str_add_with_scope", "__itt_relation_add_to_current_ex", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "N2cv6detail8PtrOwnerE", "N2cv6detail12PtrOwnerImplINS_5flann17KDTreeIndexParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann12SearchParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_19javaFeatureDetectorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_23javaDescriptorExtractorENS_14DefaultDeleterIS2_EEEE", "N2cv9FormattedE", "N2cv9FormatterE", "N2cv13FormattedImplE", "N2cv13FormatterBaseE", "N2cv16DefaultFormatterE", "N2cv15MatlabFormatterE", "N2cv15PythonFormatterE", "N2cv14NumpyFormatterE", "N2cv12CSVFormatterE", "N2cv10CFormatterE", "N2cv6detail12PtrOwnerImplINS_13FormattedImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16DefaultFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15MatlabFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12CSVFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15PythonFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_14NumpyFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10CFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv16MinProblemSolverE", "N2cv14DownhillSolverE", "N2cv18DownhillSolverImplE", "N2cv6detail12PtrOwnerImplINS_18DownhillSolverImplENS_14DefaultDeleterIS2_EEEE", "N2cv9ExceptionE", "N2cv16TLSDataContainerE", "N2cv7TLSDataINS_5instr11NodeDataTlsEEE", "N2cv7TLSDataINS_11CoreTLSDataEEE", "N2cv16ParallelLoopBodyE", "N3tbb10interface98internal9flag_taskE", "N2cv16MinProblemSolver8FunctionE", "N2cv14ConjGradSolverE", "N2cv18ConjGradSolverImplE", "N2cv6detail12PtrOwnerImplINS_18ConjGradSolverImplENS_14DefaultDeleterIS2_EEEE", "ucwsifdr", "N2cv11FileStorageE", "N2cv6detail12PtrOwnerImplI11CvSparseMatNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvFileStorageNS_14DefaultDeleterIS2_EEEE", "N2cv9AlgorithmE", "N2cv5MatOpE", "N2cv14MatOp_IdentityE", "N2cv11MatOp_AddExE", "N2cv9MatOp_BinE", "N2cv9MatOp_CmpE", "N2cv10MatOp_GEMME", "N2cv12MatOp_InvertE", "N2cv7MatOp_TE", "N2cv11MatOp_SolveE", "N2cv17MatOp_InitializerE", "N2cv24KMeansPPDistanceComputerE", "N2cv22KMeansDistanceComputerE", "N2cv20BufferPoolControllerE", "N2cv3ocl16OpenCLBufferPoolIP7_cl_memEE", "N2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memEE", "N2cv3ocl20OpenCLBufferPoolImplE", "N2cv3ocl15OpenCLAllocatorE", "N3ipp11IwExceptionE", "N2cv15LUTParallelBodyE", "N2cv6detail12PtrOwnerImplINS_16ParallelLoopBodyENS_14DefaultDeleterIS2_EEEE", "N2cv12MatAllocatorE", "N2cv25DummyBufferPoolControllerE", "N2cv15StdMatAllocatorE", "N2cv3hal5DFT2DE", "N2cv3hal5DCT2DE", "N2cv10OcvDftImplE", "N2cv15OcvDftBasicImplE", "N2cv18DctIPPLoop_InvokerE", "N2cv10OcvDctImplE", "N2cv21Dft_C_IPPLoop_InvokerINS_16IPPDFT_C_FunctorEEE", "N2cv21Dft_R_IPPLoop_InvokerINS_16IPPDFT_R_FunctorEEE", "N2cv6detail12PtrOwnerImplINS_15OcvDftBasicImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDftImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDctImplENS_14DefaultDeleterIS2_EEEE", "N2cv5utils5trace7details12TraceStorageE", "N2cv7TLSDataINS_5utils5trace7details23TraceManagerThreadLocalEEE", "N2cv5utils5trace7details17AsyncTraceStorageE", "N2cv5utils5trace7details16SyncTraceStorageE", "N2cv6detail12PtrOwnerImplINS_5utils5trace7details17AsyncTraceStorageENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_5utils5trace7details16SyncTraceStorageENS_14DefaultDeleterIS5_EEEE", "N7cvflann17flann_algorithm_tE", "N7cvflann20flann_centers_init_tE", "N7cvflann7anyimpl15base_any_policyE", "N7cvflann7anyimpl21typed_base_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl21typed_base_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl21typed_base_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl14big_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl21typed_base_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl14big_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl9empty_anyE", "N7cvflann7anyimpl21typed_base_any_policyIPKcEE", "N7cvflann7anyimpl16small_any_policyIPKcEE", "N7cvflann7anyimpl21typed_base_any_policyIiEE", "N7cvflann7anyimpl16small_any_policyIiEE", "N7cvflann7anyimpl21typed_base_any_policyIfEE", "N7cvflann7anyimpl16small_any_policyIfEE", "N7cvflann7anyimpl21typed_base_any_policyIbEE", "N7cvflann7anyimpl16small_any_policyIbEE", "N7cvflann7anyimpl21typed_base_any_policyIjEE", "N7cvflann7anyimpl16small_any_policyIjEE", "N7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "N7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "N7cvflann18KNNSimpleResultSetIfEE", "N7cvflann11KMeansIndexINS_2L1IfEEE22KMeansDistanceComputerE", "N7cvflann11KMeansIndexINS_2L2IfEEE22KMeansDistanceComputerE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann12KNNResultSetIfEE", "N2cv5flann5IndexE", "N7cvflann14FLANNExceptionE", "N7cvflann7anyimpl12bad_any_castE", "N7cvflann7NNIndexINS_10HammingLUTEEE", "N7cvflann5IndexINS_10HammingLUTEEE", "N7cvflann7NNIndexINS_2L2IfEEEE", "N7cvflann5IndexINS_2L2IfEEEE", "N7cvflann7NNIndexINS_2L1IfEEEE", "N7cvflann5IndexINS_2L1IfEEEE", "N7cvflann7anyimpl21typed_base_any_policyIdEE", "N7cvflann7anyimpl14big_any_policyIdEE", "N7cvflann9ResultSetIiEE", "N7cvflann15UniqueResultSetIiEE", "N7cvflann18KNNUniqueResultSetIiEE", "N7cvflann9ResultSetIfEE", "N7cvflann15UniqueResultSetIfEE", "N7cvflann18KNNUniqueResultSetIfEE", "N7cvflann21RadiusUniqueResultSetIiEE", "N7cvflann21RadiusUniqueResultSetIfEE", "N7cvflann11LinearIndexINS_10HammingLUTEEE", "N7cvflann27HierarchicalClusteringIndexINS_10HammingLUTEEE", "N7cvflann8LshIndexINS_10HammingLUTEEE", "N7cvflann11LinearIndexINS_2L2IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L2IfEEEE", "N7cvflann11KDTreeIndexINS_2L2IfEEEE", "N7cvflann11KMeansIndexINS_2L2IfEEEE", "N7cvflann14CompositeIndexINS_2L2IfEEEE", "N7cvflann14AutotunedIndexINS_2L2IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L2IfEEEE", "N7cvflann8LshIndexINS_2L2IfEEEE", "N7cvflann11LinearIndexINS_2L1IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L1IfEEEE", "N7cvflann11KDTreeIndexINS_2L1IfEEEE", "N7cvflann11KMeansIndexINS_2L1IfEEEE", "N7cvflann14CompositeIndexINS_2L1IfEEEE", "N7cvflann14AutotunedIndexINS_2L1IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L1IfEEEE", "N7cvflann8LshIndexINS_2L1IfEEEE", "N2cv15resizeNNInvokerE", "N2cv18ipp_resizeParallelE", "N2cv24ipp_resizeAffineParallelE", "N2cv12RemapInvokerE", "N2cv17WarpAffineInvokerE", "N2cv22WarpPerspectiveInvokerE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_22VResizeLinearVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_22VResizeLinearVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_22VResizeLinearVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_20VResizeLinearVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIhisEENS_12VResizeCubicIhisNS_11FixedPtCastIihLi22EEENS_21VResizeCubicVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicItffEENS_12VResizeCubicItffNS_4CastIftEENS_21VResizeCubicVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIsffEENS_12VResizeCubicIsffNS_4CastIfsEENS_21VResizeCubicVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIfffEENS_12VResizeCubicIfffNS_4CastIffEENS_19VResizeCubicVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIddfEENS_12VResizeCubicIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IhisEENS_15VResizeLanczos4IhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4ItffEENS_15VResizeLanczos4ItffNS_4CastIftEENS_25VResizeLanczos4Vec_32f16uEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IsffEENS_15VResizeLanczos4IsffNS_4CastIfsEENS_25VResizeLanczos4Vec_32f16sEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IfffEENS_15VResizeLanczos4IfffNS_4CastIffEENS_22VResizeLanczos4Vec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IddfEENS_15VResizeLanczos4IddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_25ResizeAreaFastVec_SIMD_8uEEEEE", "N2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_26ResizeAreaFastVec_SIMD_16uEEEEE", "N2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_26ResizeAreaFastVec_SIMD_16sEEEEE", "N2cv22resizeAreaFast_InvokerIffNS_26ResizeAreaFastVec_SIMD_32fEEE", "N2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEEE", "N2cv18ResizeArea_InvokerIhfEE", "N2cv18ResizeArea_InvokerItfEE", "N2cv18ResizeArea_InvokerIsfEE", "N2cv18ResizeArea_InvokerIffEE", "N2cv18ResizeArea_InvokerIddEE", "N2cv6detail12PtrOwnerImplI5CvMatNS_14DefaultDeleterIS2_EEEE", "N2cv13BaseRowFilterE", "N2cv16BaseColumnFilterE", "N2cv10BaseFilterE", "N2cv12FilterEngineE", "N2cv9RowFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv9RowFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv9RowFilterIhiNS_12RowVec_8u32sEEE", "N2cv9RowFilterIhfNS_8RowNoVecEEE", "N2cv9RowFilterIhdNS_8RowNoVecEEE", "N2cv9RowFilterItfNS_8RowNoVecEEE", "N2cv9RowFilterItdNS_8RowNoVecEEE", "N2cv9RowFilterIsfNS_13RowVec_16s32fEEE", "N2cv9RowFilterIsdNS_8RowNoVecEEE", "N2cv9RowFilterIffNS_10RowVec_32fEEE", "N2cv9RowFilterIfdNS_8RowNoVecEEE", "N2cv9RowFilterIddNS_8RowNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv12ColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv12ColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv6detail12PtrOwnerImplINS_12FilterEngineENS_14DefaultDeleterIS2_EEEE", "N2cv8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEE", "N2cv8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEE", "N2cv8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEE", "N2cv8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhiNS_12RowVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsfNS_13RowVec_16s32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIffNS_10RowVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIfdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIddNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv15ThresholdRunnerE", "N2cv13parallelCannyE", "N2cv9finalPassE", "N2cv7TLSDataINS_23ipp_calcHistParallelTLSEEE", "N2cv20ipp_calcHistParallelE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist2D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist3D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist1D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerIfEEKNS_16auto_partitionerEEE", "N2cv18BlendLinearInvokerIhEE", "N2cv18BlendLinearInvokerIfEE", "N2cv17Bayer2RGB_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv8colormap8ColorMapE", "N2cv8colormap6AutumnE", "N2cv8colormap4BoneE", "N2cv8colormap3JetE", "N2cv8colormap6WinterE", "N2cv8colormap7RainbowE", "N2cv8colormap5OceanE", "N2cv8colormap6SummerE", "N2cv8colormap6SpringE", "N2cv8colormap4CoolE", "N2cv8colormap3HSVE", "N2cv8colormap4PinkE", "N2cv8colormap3HotE", "N2cv8colormap6ParulaE", "N2cv8colormap12UserColorMapE", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPReorderFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_10RGB2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_10RGB5x52RGBEEE", "N2cv23CvtColorIPPLoop_InvokerINS_20IPPColor2GrayFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayItEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_18IPPGray2BGRFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_19IPPGray2BGRAFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB5x52GrayEEE", "N2cv20CvtColorLoop_InvokerINS_11Gray2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_fIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPReorderGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_fEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPGeneralReorderFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_fEEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi1EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi1EEE", "N2cv21YUV420p2RGB888InvokerILi0EEE", "N2cv21YUV420p2RGB888InvokerILi2EEE", "N2cv23YUV420p2RGBA8888InvokerILi0EEE", "N2cv23YUV420p2RGBA8888InvokerILi2EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi2EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi2EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi0ELi1ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi2ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi1ELi0EEE", "N2cv20CvtColorLoop_InvokerINS_10RGBA2mRGBAIhEEEE", "N2cv20CvtColorLoop_InvokerINS_10mRGBA2RGBAIhEEEE", "N2cv5CLAHEE", "N2cv9ColumnSumIihEE", "N2cv9ColumnSumIthEE", "N2cv9ColumnSumIisEE", "N2cv9ColumnSumIitEE", "N2cv9ColumnSumIiiEE", "N2cv9ColumnSumIifEE", "N2cv26BilateralFilter_8u_InvokerE", "N2cv27BilateralFilter_32f_InvokerE", "N2cv27ipp_bilateralFilterParallelE", "N2cv6RowSumIhiEE", "N2cv6RowSumIhtEE", "N2cv6RowSumIhdEE", "N2cv6RowSumItiEE", "N2cv6RowSumItdEE", "N2cv6RowSumIsiEE", "N2cv6RowSumIiiEE", "N2cv6RowSumIsdEE", "N2cv6RowSumIfdEE", "N2cv6RowSumIddEE", "N2cv9ColumnSumIdhEE", "N2cv9ColumnSumIdtEE", "N2cv9ColumnSumIdsEE", "N2cv9ColumnSumIdfEE", "N2cv9ColumnSumIidEE", "N2cv9ColumnSumIddEE", "N2cv9SqrRowSumIhiEE", "N2cv9SqrRowSumIhdEE", "N2cv9SqrRowSumItdEE", "N2cv9SqrRowSumIsdEE", "N2cv9SqrRowSumIfdEE", "N2cv9SqrRowSumIddEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIihEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIthEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdhEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIitEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIisEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdsEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIifEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdfEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIidEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv16GeneralizedHoughE", "N2cv23GeneralizedHoughBallardE", "N2cv20GeneralizedHoughGuilE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_4NoOpEE22FirstScan8ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_4NoOpEE22FirstScan4ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_4NoOpEE10SecondScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_4NoOpEE9FirstScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_4NoOpEE10SecondScanE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_9CCStatsOpEE22FirstScan8ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_9CCStatsOpEE22FirstScan4ConnectivityE", "N2cv19connectedcomponents18LabelingWuParallelIihNS0_9CCStatsOpEE10SecondScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_9CCStatsOpEE9FirstScanE", "N2cv19connectedcomponents21LabelingGranaParallelIihNS0_9CCStatsOpEE10SecondScanE", "N2cv19LineSegmentDetectorE", "N2cv23LineSegmentDetectorImplE", "N2cv6detail12PtrOwnerImplINS_23LineSegmentDetectorImplENS_14DefaultDeleterIS2_EEEE", "N2cv14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEE", "N2cv14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEE", "N2cv14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEE", "N2cv14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEE", "N2cv14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEE", "N2cv14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEE", "N2cv17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEE", "N2cv17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEE", "N2cv11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEE", "N2cv11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEE", "N2cv11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEE", "N2cv11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEE", "N2cv11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEE", "N2cv11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEE", "N2cv11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEE", "N2cv11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEE", "N2cv11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEE", "N2cv11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplI12CvMemStorageNS_14DefaultDeleterIS2_EEEE", "N2cv15DTColumnInvokerE", "N2cv12DTRowInvokerE", "N2cv10opt_SSE4_124WarpPerspectiveLine_SSE4E", "N2cv10opt_SSE4_119resizeNNInvokerSSE2E", "N2cv10opt_SSE4_119resizeNNInvokerSSE4E", "N2cv10opt_SSE4_129WarpPerspectiveLine_SSE4_ImplE", "N2cv6detail12PtrOwnerImplINS_10opt_SSE4_129WarpPerspectiveLine_SSE4_ImplENS_14DefaultDeleterIS3_EEEE", "N2cv8opt_AVX219resizeNNInvokerAVX4E", "N2cv8opt_AVX219resizeNNInvokerAVX2E", "N2cv2ml9StatModelE", "N2cv6detail12PtrOwnerImplINS_2ml9ParamGridENS_14DefaultDeleterIS3_EEEE", "N2cv2ml7ANN_MLPE", "N2cv2ml11ANN_MLPImpl9RPropLoopE", "N2cv2ml11ANN_MLPImplE", "N2cv6detail12PtrOwnerImplINS_2ml11ANN_MLPImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml9TrainDataE", "N2cv2ml13TrainDataImplE", "N2cv6detail12PtrOwnerImplINS_2ml13TrainDataImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml3SVM6KernelE", "N2cv2ml3SVME", "N2cv2ml13SVMKernelImplE", "N2cv2ml7SVMImpl11PredictBodyE", "N2cv2ml7SVMImplE", "N2cv6detail12PtrOwnerImplINS_2ml13SVMKernelImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml7SVMImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml18LogisticRegressionE", "N2cv2ml22LogisticRegressionImplE", "N2cv2ml43LogisticRegressionImpl_ComputeDradient_ImplE", "N2cv6detail12PtrOwnerImplINS_2ml22LogisticRegressionImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6DTreesE", "N2cv2ml5BoostE", "N2cv2ml18DTreesImplForBoostE", "N2cv2ml9BoostImplE", "N2cv6detail12PtrOwnerImplINS_2ml9BoostImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6SVMSGDE", "N2cv2ml10SVMSGDImplE", "N2cv6detail12PtrOwnerImplINS_2ml10SVMSGDImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6EMImplE", "N2cv6detail12PtrOwnerImplINS_2ml6EMImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml21NormalBayesClassifierE", "N2cv2ml25NormalBayesClassifierImpl13NBPredictBodyE", "N2cv2ml25NormalBayesClassifierImplE", "N2cv6detail12PtrOwnerImplINS_2ml25NormalBayesClassifierImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml8KNearestE", "N2cv2ml4ImplE", "N2cv2ml14BruteForceImpl19findKNearestInvokerE", "N2cv2ml14BruteForceImplE", "N2cv2ml10KDTreeImplE", "N2cv2ml12KNearestImplE", "N2cv6detail12PtrOwnerImplINS_2ml14BruteForceImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10KDTreeImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml12KNearestImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml10DTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImpl8WorkDataENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6RTreesE", "N2cv2ml19DTreesImplForRTreesE", "N2cv2ml10RTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10RTreesImplENS_14DefaultDeleterIS3_EEEE", "N2cv36HaarDetectObjects_ScaleImage_InvokerE", "N2cv38HaarDetectObjects_ScaleCascade_InvokerE", "N2cv21BaseCascadeClassifierE", "N2cv16FeatureEvaluatorE", "N2cv21CascadeClassifierImplE", "N2cv13HaarEvaluatorE", "N2cv12LBPEvaluatorE", "N2cv24CascadeClassifierInvokerE", "N2cv6detail12PtrOwnerImplINS_13HaarEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12LBPEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_16FeatureEvaluator9ScaleDataESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplI23CvHaarClassifierCascadeNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_21CascadeClassifierImplENS_14DefaultDeleterIS2_EEEE", "readALTModel", "N2cv13HOGDescriptorE", "N2cv8HOGCacheE", "N2cv10HOGInvokerE", "N2cv14HOGConfInvokerE", "N2cv21DetectionBasedTrackerE", "N2cv21DetectionBasedTracker21SeparateDetectionWorkE", "N2cv6detail12PtrOwnerImplINS_21DetectionBasedTracker21SeparateDetectionWorkENS_14DefaultDeleterIS3_EEEE", "N2cv7TonemapE", "N2cv12TonemapDragoE", "N2cv13TonemapDurandE", "N2cv15TonemapReinhardE", "N2cv14TonemapMantiukE", "N2cv11TonemapImplE", "N2cv16TonemapDragoImplE", "N2cv17TonemapDurandImplE", "N2cv19TonemapReinhardImplE", "N2cv18TonemapMantiukImplE", "N2cv6detail12PtrOwnerImplINS_11TonemapImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16TonemapDragoImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17TonemapDurandImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19TonemapReinhardImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18TonemapMantiukImplENS_14DefaultDeleterIS2_EEEE", "N2cv14MergeExposuresE", "N2cv12MergeDebevecE", "N2cv12MergeMertensE", "N2cv14MergeRobertsonE", "N2cv16MergeDebevecImplE", "N2cv16MergeMertensImplE", "N2cv18MergeRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_16MergeDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16MergeMertensImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18MergeRobertsonImplENS_14DefaultDeleterIS2_EEEE", "N2cv14AlignExposuresE", "N2cv8AlignMTBE", "N2cv12AlignMTBImplE", "N2cv6detail12PtrOwnerImplINS_12AlignMTBImplENS_14DefaultDeleterIS2_EEEE", "N2cv12CalibrateCRFE", "N2cv16CalibrateDebevecE", "N2cv18CalibrateRobertsonE", "N2cv20CalibrateDebevecImplE", "N2cv22CalibrateRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_20CalibrateDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22CalibrateRobertsonImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI14_IplConvKernelNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI20CvPriorityQueueFloatNS_14DefaultDeleterIS2_EEEE", "N2cv20BackgroundSubtractorE", "N2cv23BackgroundSubtractorKNNE", "N2cv27BackgroundSubtractorKNNImplE", "N2cv6detail12PtrOwnerImplINS_27BackgroundSubtractorKNNImplENS_14DefaultDeleterIS2_EEEE", "N2cv24BackgroundSubtractorMOG2E", "N2cv28BackgroundSubtractorMOG2ImplE", "N2cv11MOG2InvokerE", "N2cv6detail12PtrOwnerImplINS_28BackgroundSubtractorMOG2ImplENS_14DefaultDeleterIS2_EEEE", "N2cv16DenseOpticalFlowE", "N2cv19DualTVL1OpticalFlowE", "N2cv17SparseOpticalFlowE", "N2cv22SparsePyrLKOpticalFlowE", "N2cv6detail16LKTrackerInvokerE", "N2cv20FarnebackOpticalFlowE", "N6google8protobuf8internal20RepeatedPtrFieldBaseE", "N6google8protobuf4hashISsEE", "St3mapISsPN6google8protobuf7MapPairISsN10tensorflow9AttrValueEEENS1_4hashISsEENS1_3MapISsS4_E12MapAllocatorISt4pairIKSsS6_EEEE", "N6google8protobuf16RepeatedPtrFieldINS0_7MessageEEE", "N6google8protobuf8internal12MapEntryBaseE", "N6google8protobuf8internal23TypeDefinedMapFieldBaseISsN10tensorflow9AttrValueEEE", "N6google8protobuf8internal12MapFieldLiteISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N6google8protobuf8internal8MapFieldISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N10tensorflow18FunctionDefLibraryE", "N10tensorflow16FunctionDef_NodeE", "N10tensorflow11FunctionDefE", "N10tensorflow11GradientDefE", "N6google8protobuf8internal12MapEntryLiteISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N6google8protobuf8internal8MapEntryISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EEE", "N6google8protobuf8internal25InternalMetadataWithArena9ContainerE", "N6google8protobuf8internal12MapEntryLiteISsN10tensorflow9AttrValueELNS1_14WireFormatLite9FieldTypeE9ELS6_11ELi0EE15MapEntryWrapperISsS4_LS6_9ELS6_11ELi0EEE", "N6google8protobuf3MapISsN10tensorflow9AttrValueEEE", "N6google8protobuf8hash_mapISsPNS0_7MapPairISsN10tensorflow9AttrValueEEENS0_4hashISsEESt8equal_toISsENS0_3MapISsS4_E12MapAllocatorISt4pairIKSsS6_EEEEE", "N6google8protobuf3MapISsN10tensorflow9AttrValueEE8InnerMapE", "N10tensorflow12OpDef_ArgDefE", "N10tensorflow13OpDef_AttrDefE", "N10tensorflow5OpDefE", "N10tensorflow13OpDeprecationE", "N10tensorflow6OpListE", "N10tensorflow19AttrValue_ListValueE", "N10tensorflow9AttrValueE", "N10tensorflow12NameAttrListE", "N10tensorflow10VersionDefE", "N10tensorflow11TensorProtoE", "N10tensorflow8GraphDefE", "N10tensorflow7NodeDefE", "N10tensorflow20TensorShapeProto_DimE", "N10tensorflow16TensorShapeProtoE", "N5caffe9BlobShapeE", "N5caffe9BlobProtoE", "N5caffe15BlobProtoVectorE", "N5caffe16PermuteParameterE", "N5caffe22NormalizeBBoxParameterE", "N5caffe17PriorBoxParameterE", "N5caffe24DetectionOutputParameterE", "N5caffe5DatumE", "N5caffe15FillerParameterE", "N5caffe12NetParameterE", "N5caffe15SolverParameterE", "N5caffe11SolverStateE", "N5caffe8NetStateE", "N5caffe12NetStateRuleE", "N5caffe9ParamSpecE", "N5caffe14LayerParameterE", "N5caffe23TransformationParameterE", "N5caffe13LossParameterE", "N5caffe17AccuracyParameterE", "N5caffe15ArgMaxParameterE", "N5caffe15ConcatParameterE", "N5caffe18BatchNormParameterE", "N5caffe13BiasParameterE", "N5caffe24ContrastiveLossParameterE", "N5caffe20ConvolutionParameterE", "N5caffe13CropParameterE", "N5caffe13DataParameterE", "N5caffe30NonMaximumSuppressionParameterE", "N5caffe19SaveOutputParameterE", "N5caffe16DropoutParameterE", "N5caffe18DummyDataParameterE", "N5caffe16EltwiseParameterE", "N5caffe12ELUParameterE", "N5caffe14EmbedParameterE", "N5caffe12ExpParameterE", "N5caffe16FlattenParameterE", "N5caffe17HDF5DataParameterE", "N5caffe19HDF5OutputParameterE", "N5caffe18HingeLossParameterE", "N5caffe18ImageDataParameterE", "N5caffe21InfogainLossParameterE", "N5caffe21InnerProductParameterE", "N5caffe14InputParameterE", "N5caffe12LogParameterE", "N5caffe12LRNParameterE", "N5caffe19MemoryDataParameterE", "N5caffe12MVNParameterE", "N5caffe18ParameterParameterE", "N5caffe16PoolingParameterE", "N5caffe14PowerParameterE", "N5caffe15PythonParameterE", "N5caffe18RecurrentParameterE", "N5caffe18ReductionParameterE", "N5caffe13ReLUParameterE", "N5caffe16ReshapeParameterE", "N5caffe14ScaleParameterE", "N5caffe16SigmoidParameterE", "N5caffe14SliceParameterE", "N5caffe16SoftmaxParameterE", "N5caffe13TanHParameterE", "N5caffe13TileParameterE", "N5caffe18ThresholdParameterE", "N5caffe19WindowDataParameterE", "N5caffe12SPPParameterE", "N5caffe16V1LayerParameterE", "N5caffe16V0LayerParameterE", "N5caffe14PReLUParameterE", "N5caffe14NormalizedBBoxE", "N2cv3dnn19experimental_dnn_v113TorchImporterE", "N2cv6detail12PtrOwnerImplIN2TH8THFile__EPFvPS3_EEE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v113TorchImporter6ModuleENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v113TorchImporterENS_14DefaultDeleterIS4_EEEE", "N2cv3dnn19experimental_dnn_v15LayerE", "N2cv3dnn19experimental_dnn_v18ImporterE", "N2cv3dnn19experimental_dnn_v112PoolingLayerE", "N2cv3dnn19experimental_dnn_v111ConcatLayerE", "N2cv3dnn19experimental_dnn_v115ActivationLayerE", "N2cv3dnn19experimental_dnn_v114BatchNormLayerE", "N2cv3dnn19experimental_dnn_v110ScaleLayerE", "N2cv3dnn19experimental_dnn_v19DataLayerE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v19DataLayerENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn19experimental_dnn_v13Net4ImplENS_14DefaultDeleterIS5_EEEE", "N2cv3dnn16ElementWiseLayerINS0_20ChannelsPReLUFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_12PowerFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_11BNLLFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_13AbsValFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_10ELUFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_14SigmoidFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_11TanHFunctorEE5PBodyE", "N2cv3dnn16ElementWiseLayerINS0_11ReLUFunctorEE5PBodyE", "N2cv3dnn19experimental_dnn_v19ReLULayerE", "N2cv3dnn19experimental_dnn_v118ChannelsPReLULayerE", "N2cv3dnn19experimental_dnn_v18ELULayerE", "N2cv3dnn19experimental_dnn_v19TanHLayerE", "N2cv3dnn19experimental_dnn_v112SigmoidLayerE", "N2cv3dnn19experimental_dnn_v19BNLLLayerE", "N2cv3dnn19experimental_dnn_v18AbsLayerE", "N2cv3dnn19experimental_dnn_v110PowerLayerE", "N2cv3dnn16ElementWiseLayerINS0_11ReLUFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_11TanHFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_14SigmoidFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_10ELUFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_13AbsValFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_11BNLLFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_12PowerFunctorEEE", "N2cv3dnn16ElementWiseLayerINS0_20ChannelsPReLUFunctorEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_11ReLUFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_11TanHFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_14SigmoidFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_10ELUFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_13AbsValFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_11BNLLFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_12PowerFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn16ElementWiseLayerINS2_20ChannelsPReLUFunctorEEENS_14DefaultDeleterIS5_EEEE", "N2cv3dnn19experimental_dnn_v117InnerProductLayerE", "N2cv3dnn23FullyConnectedLayerImpl14FullyConnectedE", "N2cv3dnn23FullyConnectedLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn23FullyConnectedLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn15ConcatLayerImpl20ChannelConcatInvokerE", "N2cv3dnn15ConcatLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn15ConcatLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v112SoftmaxLayerE", "N2cv3dnn16SoftMaxLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16SoftMaxLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v112EltwiseLayerE", "N2cv3dnn16EltwiseLayerImpl14EltwiseInvokerE", "N2cv3dnn16EltwiseLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16EltwiseLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v112FlattenLayerE", "N2cv3dnn16FlattenLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16FlattenLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v110BlankLayerE", "N2cv3dnn14BlankLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14BlankLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v114MaxUnpoolLayerE", "N2cv3dnn18MaxUnpoolLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn18MaxUnpoolLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v112ReshapeLayerE", "N2cv3dnn16ReshapeLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16ReshapeLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v18LRNLayerE", "N2cv3dnn12LRNLayerImpl10ChannelLRNE", "N2cv3dnn12LRNLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn12LRNLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v113PriorBoxLayerE", "N2cv3dnn17PriorBoxLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn17PriorBoxLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v18MVNLayerE", "N2cv3dnn12MVNLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn12MVNLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn16PoolingLayerImpl14PoolingInvokerE", "N2cv3dnn16PoolingLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16PoolingLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v110ShiftLayerE", "N2cv3dnn14ShiftLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14ShiftLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn18BatchNormLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn18BatchNormLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v118NormalizeBBoxLayerE", "N2cv3dnn22NormalizeBBoxLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn22NormalizeBBoxLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn14ScaleLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14ScaleLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v120DetectionOutputLayerE", "N2cv3dnn24DetectionOutputLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn24DetectionOutputLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v110SliceLayerE", "N2cv3dnn14SliceLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14SliceLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v112PaddingLayerE", "N2cv3dnn16PaddingLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16PaddingLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v112PermuteLayerE", "N2cv3dnn16PermuteLayerImpl14PermuteInvokerE", "N2cv3dnn16PermuteLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn16PermuteLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v120BaseConvolutionLayerE", "N2cv3dnn19experimental_dnn_v116ConvolutionLayerE", "N2cv3dnn24BaseConvolutionLayerImplE", "N2cv3dnn20ConvolutionLayerImpl12ParallelConvE", "N2cv3dnn20ConvolutionLayerImplE", "N2cv3dnn22DeConvolutionLayerImpl13MatMulInvokerE", "N2cv3dnn22DeConvolutionLayerImpl13Col2ImInvokerE", "N2cv3dnn22DeConvolutionLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn20ConvolutionLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn22DeConvolutionLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v19LSTMLayerE", "N2cv3dnn19experimental_dnn_v18RNNLayerE", "N2cv3dnn13LSTMLayerImplE", "N2cv3dnn12RNNLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn13LSTMLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_3dnn12RNNLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v19CropLayerE", "N2cv3dnn13CropLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn13CropLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv3dnn19experimental_dnn_v110SplitLayerE", "N2cv3dnn14SplitLayerImplE", "N2cv6detail12PtrOwnerImplINS_3dnn14SplitLayerImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_10BmpDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10BmpEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv16BaseImageDecoderE", "N2cv16BaseImageEncoderE", "N2cv10PxMDecoderE", "N2cv10PxMEncoderE", "N2cv10ExrDecoderE", "N2cv10ExrEncoderE", "N2cv11WebPDecoderE", "N2cv11WebPEncoderE", "N2cv16SunRasterDecoderE", "N2cv16SunRasterEncoderE", "N2cv11JpegDecoderE", "N2cv11JpegEncoderE", "N2cv11TiffDecoderE", "N2cv11TiffEncoderE", "N2cv13Jpeg2KDecoderE", "N2cv13Jpeg2KEncoderE", "ENDHDR", "HEIGHT", "WIDTH", "DEPTH", "MAXVAL", "TUPLTYPE", "N2cv10PAMDecoderE", "N2cv10PAMEncoderE", "N2cv10BmpEncoderE", "N2cv10HdrDecoderE", "N2cv10HdrEncoderE", "N2cv10PngDecoderE", "N2cv10PngEncoderE", "N2cv11RBaseStreamE", "N2cv12RLByteStreamE", "N2cv12RMByteStreamE", "N2cv11WBaseStreamE", "N2cv12WLByteStreamE", "N2cv12WMByteStreamE", "N2cv12VideoCaptureE", "N2cv11VideoWriterE", "N2cv6detail12PtrOwnerImplI9CvCaptureNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvVideoWriterNS_14DefaultDeleterIS2_EEEE", "N2cv5mjpeg16MotionJpegWriterE", "N2cv5mjpeg12MjpegEncoderE", "N2cv6detail12PtrOwnerImplINS_5mjpeg16MotionJpegWriterENS_14DefaultDeleterIS3_EEEE", "N2cv13IVideoCaptureE", "N2cv17MotionJpegCaptureE", "N2cv6detail12PtrOwnerImplINS_17MotionJpegCaptureENS_14DefaultDeleterIS2_EEEE", "N2cv12GFTTDetectorE", "N2cv17GFTTDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_17GFTTDetector_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv19FastFeatureDetectorE", "N2cv24FastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_24FastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv4KAZEE", "N2cv9KAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_9KAZE_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv10BOWTrainerE", "N2cv16BOWKMeansTrainerE", "N2cv25BOWImgDescriptorExtractorE", "N2cv5BRISKE", "N2cv10BRISK_ImplE", "N2cv6detail12PtrOwnerImplINS_10BRISK_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv3ORBE", "N2cv8ORB_ImplE", "N2cv6detail12PtrOwnerImplINS_8ORB_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv5AKAZEE", "N2cv10AKAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_10AKAZE_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv32MultiscaleDerivativesKAZEInvokerE", "N2cv23FindExtremumKAZEInvokerE", "N2cv23KAZE_Descriptor_InvokerE", "N2cv28NonLinearScalarDiffusionStepE", "N2cv26DeterminantHessianResponseE", "N2cv22FindKeypointsSameScaleE", "N2cv35MSURF_Upright_Descriptor_64_InvokerE", "N2cv27MSURF_Descriptor_64_InvokerE", "N2cv36Upright_MLDB_Full_Descriptor_InvokerE", "N2cv38Upright_MLDB_Descriptor_Subset_InvokerE", "N2cv28MLDB_Full_Descriptor_InvokerE", "N2cv30MLDB_Descriptor_Subset_InvokerE", "N2cv26ComputeKeypointOrientationE", "N2cv23Nld_Step_Scalar_InvokerE", "N2cv9MSER_ImplE", "N2cv6detail12PtrOwnerImplINS_9MSER_ImplENS_14DefaultDeleterIS2_EEEE", "N3tbb10interface98internal13finish_reduceI20IntersectAreaCounterEE", "N3tbb10interface98internal12start_reduceINS_13blocked_rangeIiEE20IntersectAreaCounterKNS_16auto_partitionerEEE", "N2cv17DescriptorMatcher20DescriptorCollectionE", "N2cv17DescriptorMatcherE", "N2cv9BFMatcherE", "N2cv17FlannBasedMatcherE", "N2cv6detail12PtrOwnerImplINS_9BFMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17FlannBasedMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann5IndexENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann11IndexParamsENS_14DefaultDeleterIS3_EEEE", "N2cv20AgastFeatureDetectorE", "N2cv25AgastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_25AgastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv18SimpleBlobDetectorE", "N2cv22SimpleBlobDetectorImplE", "N2cv6detail12PtrOwnerImplINS_22SimpleBlobDetectorImplENS_14DefaultDeleterIS2_EEEE", "N2cv9Feature2DE", "N2cv8LMSolver8CallbackE", "N2cv19PointSetRegistrator8CallbackE", "N2cv27HomographyEstimatorCallbackE", "N2cv24HomographyRefineCallbackE", "N2cv19FMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_27HomographyEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24HomographyRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19FMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv8RHO_HESTE", "N2cv13RHO_HEST_REFCE", "N2cv6detail12PtrOwnerImplINS_13RHO_HEST_REFCENS_14DefaultDeleterIS2_EEEE", "N2cv19PointSetRegistratorE", "N2cv25RANSACPointSetRegistratorE", "N2cv24LMeDSPointSetRegistratorE", "N2cv25Affine3DEstimatorCallbackE", "N2cv25Affine2DEstimatorCallbackE", "N2cv32AffinePartial2DEstimatorCallbackE", "N2cv22Affine2DRefineCallbackE", "N2cv29AffinePartial2DRefineCallbackE", "N2cv6detail12PtrOwnerImplINS_25RANSACPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24LMeDSPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine3DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22Affine2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_32AffinePartial2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29AffinePartial2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv17PnPRansacCallbackE", "N2cv6detail12PtrOwnerImplINS_17PnPRansacCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv23HomographyDecomposition16HomographyDecompE", "N2cv23HomographyDecomposition21HomographyDecompInriaE", "N2cv6detail12PtrOwnerImplINS_23HomographyDecomposition21HomographyDecompInriaENS_14DefaultDeleterIS3_EEEE", "N2cv13StereoMatcherE", "N2cv8StereoBME", "N2cv16PrefilterInvokerE", "N2cv24FindStereoCorrespInvokerE", "N2cv12StereoBMImplE", "N2cv6detail12PtrOwnerImplINS_12StereoBMImplENS_14DefaultDeleterIS2_EEEE", "N2cv8LMSolverE", "N2cv12LMSolverImplE", "N2cv6detail12PtrOwnerImplINS_12LMSolverImplENS_14DefaultDeleterIS2_EEEE", "N2cv19EMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_19EMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv10StereoSGBME", "N2cv16CalcVerticalSumsE", "N2cv18CalcHorizontalSumsE", "N2cv16SGBM3WayMainLoopE", "N2cv14StereoSGBMImplE", "N2cv6detail12PtrOwnerImplINS_14StereoSGBMImplENS_14DefaultDeleterIS2_EEEE", "N2cv16ShapeTransformerE", "N2cv31ThinPlateSplineShapeTransformerE", "N2cv22ShapeDistanceExtractorE", "N2cv29ShapeContextDistanceExtractorE", "N2cv33ShapeContextDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_33ShapeContextDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv35ThinPlateSplineShapeTransformerImplE", "N2cv6detail12PtrOwnerImplINS_35ThinPlateSplineShapeTransformerImplENS_14DefaultDeleterIS2_EEEE", "N2cv26HausdorffDistanceExtractorE", "N2cv30HausdorffDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30HausdorffDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv17AffineTransformerE", "N2cv21AffineTransformerImplE", "N2cv6detail12PtrOwnerImplINS_21AffineTransformerImplENS_14DefaultDeleterIS2_EEEE", "N2cv22HistogramCostExtractorE", "N2cv26NormHistogramCostExtractorE", "N2cv25EMDHistogramCostExtractorE", "N2cv25ChiHistogramCostExtractorE", "N2cv27EMDL1HistogramCostExtractorE", "N2cv30NormHistogramCostExtractorImplE", "N2cv29EMDHistogramCostExtractorImplE", "N2cv29ChiHistogramCostExtractorImplE", "N2cv31EMDL1HistogramCostExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30NormHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29EMDHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29ChiHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_31EMDL1HistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv8superres11FrameSourceE", "N2cv8superres19DenseOpticalFlowExtE", "N2cv8superres20FarnebackOpticalFlowE", "N2cv8superres19DualTVL1OpticalFlowE", "N2cv8superres15SuperResolutionE", "N2cv6detail9EstimatorE", "N2cv6detail24HomographyBasedEstimatorE", "N2cv6detail20AffineBasedEstimatorE", "N2cv6detail18BundleAdjusterBaseE", "N2cv6detail20BundleAdjusterReprojE", "N2cv6detail17BundleAdjusterRayE", "N2cv6detail20BundleAdjusterAffineE", "N2cv6detail27BundleAdjusterAffinePartialE", "N2cv6detail7BlenderE", "N2cv6detail14FeatherBlenderE", "N2cv6detail16MultiBandBlenderE", "N2cv6detail12PtrOwnerImplINS0_7BlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14FeatherBlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_16MultiBandBlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail14RotationWarperE", "N2cv6detail18RotationWarperBaseINS0_14PlaneProjectorEEE", "N2cv6detail11PlaneWarperE", "N2cv6detail12AffineWarperE", "N2cv6detail18RotationWarperBaseINS0_18SphericalProjectorEEE", "N2cv6detail15SphericalWarperE", "N2cv6detail18RotationWarperBaseINS0_20CylindricalProjectorEEE", "N2cv6detail17CylindricalWarperE", "N2cv6detail18RotationWarperBaseINS0_26SphericalPortraitProjectorEEE", "N2cv6detail23SphericalPortraitWarperE", "N2cv6detail19ExposureCompensatorE", "N2cv6detail21NoExposureCompensatorE", "N2cv6detail15GainCompensatorE", "N2cv6detail21BlocksGainCompensatorE", "N2cv6detail12PtrOwnerImplINS0_21NoExposureCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_15GainCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BlocksGainCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv13WarperCreatorE", "N2cv12AffineWarperE", "N2cv15SphericalWarperE", "N2cv6detail15FeaturesMatcherE", "N2cv6detail12PtrOwnerImplINS0_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17BundleAdjusterRayENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17OrbFeaturesFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_8StitcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27AffineBestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27BundleAdjusterAffinePartialENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_20AffineBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_24HomographyBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail10TimelapserE", "N2cv6detail14TimelapserCropE", "N2cv6detail12PtrOwnerImplINS0_10TimelapserENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14TimelapserCropENS_14DefaultDeleterIS2_EEEE", "N2cv6detail14FeaturesFinderE", "N2cv6detail18SurfFeaturesFinderE", "N2cv6detail17OrbFeaturesFinderE", "N2cv6detail19AKAZEFeaturesFinderE", "N2cv6detail21BestOf2NearestMatcherE", "N2cv6detail26BestOf2NearestRangeMatcherE", "N2cv6detail27AffineBestOf2NearestMatcherE", "N2cv6detail22GraphCutSeamFinderBaseE", "N2cv6detail10SeamFinderE", "N2cv6detail18PairwiseSeamFinderE", "N2cv6detail17VoronoiSeamFinderE", "N2cv6detail12DpSeamFinderE", "N2cv6detail18GraphCutSeamFinderE", "N2cv6detail18GraphCutSeamFinder4ImplE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinder4ImplENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab23ISparseOptFlowEstimatorE", "N2cv9videostab25PyrLkOptFlowEstimatorBaseE", "N2cv9videostab16IOutlierRejectorE", "N2cv9videostab19MotionEstimatorBaseE", "N2cv9videostab23MotionEstimatorRansacL2E", "N2cv9videostab17MotionEstimatorL1E", "N2cv9videostab24ImageMotionEstimatorBaseE", "N2cv9videostab20FromFileMotionReaderE", "N2cv9videostab18ToFileMotionWriterE", "N2cv9videostab28KeypointBasedMotionEstimatorE", "N2cv6detail12PtrOwnerImplINS_9videostab27SparsePyrLkOptFlowEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab19NullOutlierRejectorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab4ILogE", "N2cv9videostab11LogToStdoutE", "N2cv9videostab12DeblurerBaseE", "N2cv9videostab17WeightingDeblurerE", "N2cv9videostab20WobbleSuppressorBaseE", "N2cv9videostab20NullWobbleSuppressorE", "N2cv9videostab38MoreAccurateMotionWobbleSuppressorBaseE", "N2cv9videostab34MoreAccurateMotionWobbleSuppressorE", "N2cv6detail12PtrOwnerImplINS_9videostab23MotionEstimatorRansacL2ENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab28KeypointBasedMotionEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab17IMotionStabilizerE", "N2cv9videostab12IFrameSourceE", "N2cv9videostab15NullFrameSourceE", "N2cv9videostab13InpainterBaseE", "N2cv9videostab13NullInpainterE", "N2cv9videostab12NullDeblurerE", "N2cv9videostab14StabilizerBaseE", "N2cv9videostab17OnePassStabilizerE", "N2cv9videostab17TwoPassStabilizerE", "N2cv6detail12PtrOwnerImplINS_9videostab11LogToStdoutENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab15NullFrameSourceENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab12NullDeblurerENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab13NullInpainterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20GaussianMotionFilterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20NullWobbleSuppressorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab15VideoFileSourceE", "N2cv9videostab27SparsePyrLkOptFlowEstimatorE", "N2cv9videostab27MotionStabilizationPipelineE", "N2cv9videostab16MotionFilterBaseE", "N2cv9videostab20GaussianMotionFilterE", "N2cv9videostab18LpMotionStabilizerE", "N2cv9videostab19NullOutlierRejectorE", "N2cv9videostab36TranslationBasedLocalOutlierRejectorE", "N2cv9videostab18InpaintingPipelineE", "N2cv9videostab25ConsistentMosaicInpainterE", "N2cv9videostab15MotionInpainterE", "N2cv9videostab21ColorAverageInpainterE", "N2cv9videostab14ColorInpainterE", "N3tbb14bad_last_allocE", "N3tbb13improper_lockE", "N3tbb10user_abortE", "N3tbb12missing_waitE", "N3tbb27invalid_multiple_schedulingE", "N3tbb8internal7no_copyE", "N3tbb10interface58internal9task_baseE", "N3tbb8internal9no_assignE", "N3tbb4taskE", "N3tbb18captured_exceptionE", "N3rml16versioned_objectE", "N3rml6clientE", "N3tbb8internal3rml10tbb_clientE", "N3tbb8internal6marketE", "N3tbb10empty_taskE", "N3tbb10interface78internal14delegated_taskE", "N3tbb10interface78internal9wait_taskE", "N3tbb8internal15control_storageE", "N3tbb8internal11padded_baseINS0_15control_storageELj128ELj16EEE", "N3tbb8internal6paddedINS0_15control_storageELj128EEE", "N3tbb8internal27allowed_parallelism_controlE", "N3tbb8internal18stack_size_controlE", "N3tbb8internal15scheduler_stateE", "N3tbb8internal19intrusive_list_nodeE", "N3rml3jobE", "N3tbb8internal9schedulerE", "N3tbb8internal17generic_schedulerE", "N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE", "N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE", "N3rml6serverE", "N3tbb8internal3rml10tbb_serverE", "N3tbb8internal3rml14private_serverE", "N6google8protobuf11MessageLiteE", "N6google8protobuf7ClosureE", "N6google8protobuf8internal16FunctionClosure0E", "N6google8protobuf14FatalExceptionE", "N6google8protobuf8internal12FieldSkipperE", "N6google8protobuf17DescriptorBuilder17OptionInterpreter21AggregateOptionFinderE", "N6google8protobuf8internal16FunctionClosure1IPSt4pairIPKNS0_20FileDescriptorTablesEPKNS0_14SourceCodeInfoEEEE", "N6google8protobuf17FileDescriptorSetE", "N6google8protobuf19FileDescriptorProtoE", "N6google8protobuf30DescriptorProto_ExtensionRangeE", "N6google8protobuf29DescriptorProto_ReservedRangeE", "N6google8protobuf15DescriptorProtoE", "N6google8protobuf20FieldDescriptorProtoE", "N6google8protobuf20OneofDescriptorProtoE", "N6google8protobuf19EnumDescriptorProtoE", "N6google8protobuf24EnumValueDescriptorProtoE", "N6google8protobuf22ServiceDescriptorProtoE", "N6google8protobuf21MethodDescriptorProtoE", "N6google8protobuf11FileOptionsE", "N6google8protobuf14MessageOptionsE", "N6google8protobuf12FieldOptionsE", "N6google8protobuf12OneofOptionsE", "N6google8protobuf11EnumOptionsE", "N6google8protobuf16EnumValueOptionsE", "N6google8protobuf14ServiceOptionsE", "N6google8protobuf13MethodOptionsE", "N6google8protobuf28UninterpretedOption_NamePartE", "N6google8protobuf19UninterpretedOptionE", "N6google8protobuf23SourceCodeInfo_LocationE", "N6google8protobuf14SourceCodeInfoE", "N6google8protobuf28GeneratedCodeInfo_AnnotationE", "N6google8protobuf17GeneratedCodeInfoE", "N6google8protobuf18DescriptorDatabaseE", "N6google8protobuf25EncodedDescriptorDatabaseE", "N6google8protobuf21DynamicMessageFactoryE", "N6google8protobuf14DynamicMessageE", "N6google8protobuf8internal29DescriptorPoolExtensionFinderE", "N6google8protobuf16RepeatedPtrFieldINS0_11MessageLiteEEE", "N6google8protobuf8internal26GeneratedMessageReflectionE", "N6google8protobuf2io14ErrorCollectorE", "N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE", "N6google8protobuf2io18IstreamInputStreamE", "N6google8protobuf8internal12MapFieldBaseE", "N6google8protobuf8internal23TypeDefinedMapFieldBaseINS0_6MapKeyENS0_11MapValueRefEEE", "N6google8protobuf8internal15DynamicMapFieldE", "N6google8protobuf7MessageE", "N6google8protobuf10ReflectionE", "N6google8protobuf14MessageFactoryE", "N6google8protobuf8internal21RepeatedFieldAccessorE", "N6google8protobuf8internal33RandomAccessRepeatedFieldAccessorE", "N6google8protobuf8internal16MapFieldAccessorE", "N6google8protobuf8internal23RepeatedPtrFieldWrapperISsEE", "N6google8protobuf8internal30RepeatedPtrFieldStringAccessorE", "N6google8protobuf8internal23RepeatedPtrFieldWrapperINS0_7MessageEEE", "N6google8protobuf8internal31RepeatedPtrFieldMessageAccessorE", "N6google8protobuf8internal20RepeatedFieldWrapperIiEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIiEE", "N6google8protobuf8internal20RepeatedFieldWrapperIjEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIjEE", "N6google8protobuf8internal20RepeatedFieldWrapperIxEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIxEE", "N6google8protobuf8internal20RepeatedFieldWrapperIyEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIyEE", "N6google8protobuf8internal20RepeatedFieldWrapperIfEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIfEE", "N6google8protobuf8internal20RepeatedFieldWrapperIdEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIdEE", "N6google8protobuf8internal20RepeatedFieldWrapperIbEE", "N6google8protobuf8internal30RepeatedFieldPrimitiveAccessorIbEE", "N6google8protobuf10TextFormat17FieldValuePrinterE", "N6google8protobuf10TextFormat6FinderE", "N6google8protobuf10TextFormat6Parser10ParserImpl20ParserErrorCollectorE", "N6google8protobuf8internal27UnknownFieldSetFieldSkipperE", "N6google8protobuf8internal15ExtensionFinderE", "N6google8protobuf8internal24GeneratedExtensionFinderE", "N6google8protobuf13RepeatedFieldIiEE", "N6google8protobuf13RepeatedFieldIxEE", "N6google8protobuf13RepeatedFieldIjEE", "N6google8protobuf13RepeatedFieldIyEE", "N6google8protobuf13RepeatedFieldIfEE", "N6google8protobuf13RepeatedFieldIdEE", "N6google8protobuf13RepeatedFieldIbEE", "N6google8protobuf16RepeatedPtrFieldISsEE", "N6google8protobuf2io19ZeroCopyInputStreamE", "N6google8protobuf2io20ZeroCopyOutputStreamE", "N6google8protobuf2io16ArrayInputStreamE", "N6google8protobuf2io17ArrayOutputStreamE", "N6google8protobuf2io18StringOutputStreamE", "N6google8protobuf2io18CopyingInputStreamE", "N6google8protobuf2io25CopyingInputStreamAdaptorE", "_TIFFMergeFields", "MissingRequired", "TIFFFetchNormalTag", "TIFFFetchStripThing", "TIFFReadDirectoryCheckOrder", "TIFFFetchDirectory", "TIFFReadDirectory", "initYCbCrConversion", "BuildMapBitdepth16To8", "BuildMapUaToAa", "TIFFReadBufferSetup", "TIFFFillTile", "TIFFReadEncodedTile", "TIFFFillStrip", "TIFFReadEncodedStrip", "TIFFScanlineSize", "TIFFScanlineSize64", "TIFFStripSize", "TIFFVStripSize", "TIFFVStripSize64", "TIFFComputeStrip", "TIFFVTileSize64", "TIFFTileRowSize", "TIFFWriteBufferSetup", "TIFFAppendToStrip", "TIFFWriteEncodedStrip", "TIFFWriteScanline", "TIFFOpen", "TIFFRewriteDirectory", "TIFFLinkDirectory", "TIFFWriteDirectoryTagIfdIfd8Array", "TIFFWriteDirectoryTagCheckedSrationalArray", "TIFFWriteDirectoryTagCheckedRationalArray", "TIFFWriteDirectoryTagSubifd", "TIFFWriteDirectoryTagTransferfunction", "TIFFWriteDirectoryTagSampleformatArray", "TIFFWriteDirectoryTagShortPerSample", "TIFFWriteDirectoryTagColormap", "TIFFWriteDirectoryTagLongLong8Array", "TIFFWriteDirectoryTagData", "TIFFWriteDirectorySec", "DumpModeDecode", "Fax4Decode", "Fax4Encode", "Fax3Decode2D", "Fax3SetupState", "Fax3Decode1D", "Fax3Encode", "InitCCITTFax3", "LogLuvDecode24", "LogLuvDecode32", "LogL16Decode", "LogLuvSetupDecode", "LogL16InitState", "LogLuvInitState", "LogLuvSetupEncode", "LogLuvVSetField", "TIFFInitSGILog", "LZWDecodeCompat", "LZWPreDecode", "LZWDecode", "LZWSetupEncode", "TIFFInitLZW", "NeXTDecode", "PackBitsDecode", "PixarLogDecode", "PixarLogSetupEncode", "PixarLogPostEncode", "PixarLogEncode", "PixarLogVSetField", "TIFFInitPixarLog", "PredictorEncodeTile", "ThunderSetupDecode", "ThunderDecode", "ThunderDecodeRow", "ZIPSetupDecode", "ZIPDecode", "ZIPSetupEncode", "ZIPPostEncode", "ZIPEncode", "TIFFInitZIP", "N3Iex6ArgExcE", "N3Iex5IoExcE", "N3Iex7TypeExcE", "N3Imf10OutputFileE", "N3Imf14TypedAttributeINS_12PreviewImageEEE", "N3Imf10OutputFile4DataE", "N3Imf9AttributeE", "N3Imf14TypedAttributeINS_14ChromaticitiesEEE", "N3Imf14TypedAttributeINS_6EnvmapEEE", "N3Imf14TypedAttributeIfEE", "N3Imf14TypedAttributeINS_7KeyCodeEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IfEEEE", "N3Imf14TypedAttributeINS_8RationalEEE", "N3Imf14TypedAttributeISsEE", "N3Imf14TypedAttributeISt6vectorISsSaISsEEEE", "N3Imf14TypedAttributeINS_8TimeCodeEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IfEEEE", "N3Imf10CompressorE", "N3Iex11OverflowExcE", "N3Iex8InputExcE", "N3Imf13ZipCompressorE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IiEEEEEE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IfEEEEEE", "N3Imf14TypedAttributeINS_11ChannelListEEE", "N3Imf14TypedAttributeINS_11CompressionEEE", "N3Imf14TypedAttributeIdEE", "N3Imf14TypedAttributeIiEE", "N3Imf14TypedAttributeINS_9LineOrderEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IfEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IdEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IdEEEE", "N3Imf14TypedAttributeINS_15TileDescriptionEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IdEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IfEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IdEEEE", "N3Imf15Pxr24CompressorE", "N3Imf9InputFileE", "N3Imf9InputFile4DataE", "N3Imf13PizCompressorE", "N3Imf11StdIFStreamE", "N3Imf11StdOFStreamE", "N3Imf11StdOSStreamE", "N3Iex8ErrnoExcE", "N3Imf17ScanLineInputFileE", "N3Imf17ScanLineInputFile4DataE", "N3Imf7IStreamE", "N3Imf7OStreamE", "N3Iex9EnoentExcE", "N3Iex8EsrchExcE", "N3Iex8EintrExcE", "N3Iex6EioExcE", "N3Iex8EnxioExcE", "N3Iex8E2bigExcE", "N3Iex10EnoexecExcE", "N3Iex8EbadfExcE", "N3Iex9EchildExcE", "N3Iex9EagainExcE", "N3Iex9EnomemExcE", "N3Iex9EaccesExcE", "N3Iex9EfaultExcE", "N3Iex10EnotblkExcE", "N3Iex8EbusyExcE", "N3Iex9EexistExcE", "N3Iex8ExdevExcE", "N3Iex9EnodevExcE", "N3Iex10EnotdirExcE", "N3Iex9EisdirExcE", "N3Iex9EinvalExcE", "N3Iex9EnfileExcE", "N3Iex9EmfileExcE", "N3Iex9EnottyExcE", "N3Iex10EtxtbsyExcE", "N3Iex8EfbigExcE", "N3Iex9EnospcExcE", "N3Iex9EspipeExcE", "N3Iex8ErofsExcE", "N3Iex9EmlinkExcE", "N3Iex8EpipeExcE", "N3Iex7EdomExcE", "N3Iex9ErangeExcE", "N3Iex9EnomsgExcE", "N3Iex8EidrmExcE", "N3Iex9EchrngExcE", "N3Iex11El2nsyncExcE", "N3Iex9El3hltExcE", "N3Iex9El3rstExcE", "N3Iex9ElnrngExcE", "N3Iex10EunatchExcE", "N3Iex9El2hltExcE", "N3Iex10EdeadlkExcE", "N3Iex9EnolckExcE", "N3Iex8EbadeExcE", "N3Iex8EbadrExcE", "N3Iex9ExfullExcE", "N3Iex9EnoanoExcE", "N3Iex10EbadrqcExcE", "N3Iex10EbadsltExcE", "N3Iex9EbfontExcE", "N3Iex9EnostrExcE", "N3Iex10EnodataExcE", "N3Iex8EtimeExcE", "N3Iex8EnosrExcE", "N3Iex9EnonetExcE", "N3Iex9EnopkgExcE", "N3Iex10EremoteExcE", "N3Iex10EnolinkExcE", "N3Iex7EadvExcE", "N3Iex9EsrmntExcE", "N3Iex8EcommExcE", "N3Iex9EprotoExcE", "N3Iex12EmultihopExcE", "N3Iex10EbadmsgExcE", "N3Iex15EnametoolongExcE", "N3Iex12EoverflowExcE", "N3Iex11EnotuniqExcE", "N3Iex9EbadfdExcE", "N3Iex10EremchgExcE", "N3Iex10ElibaccExcE", "N3Iex10ElibbadExcE", "N3Iex10ElibscnExcE", "N3Iex10ElibmaxExcE", "N3Iex11ElibexecExcE", "N3Iex9EilseqExcE", "N3Iex9EnosysExcE", "N3Iex8EloopExcE", "N3Iex11ErestartExcE", "N3Iex11EstrpipeExcE", "N3Iex12EnotemptyExcE", "N3Iex9EusersExcE", "N3Iex11EnotsockExcE", "N3Iex15EdestaddrreqExcE", "N3Iex11EmsgsizeExcE", "N3Iex13EprototypeExcE", "N3Iex14EnoprotooptExcE", "N3Iex18EprotonosupportExcE", "N3Iex18EsocktnosupportExcE", "N3Iex13EopnotsuppExcE", "N3Iex15EpfnosupportExcE", "N3Iex15EafnosupportExcE", "N3Iex13EaddrinuseExcE", "N3Iex16EaddrnotavailExcE", "N3Iex11EnetdownExcE", "N3Iex14EnetunreachExcE", "N3Iex12EnetresetExcE", "N3Iex15EconnabortedExcE", "N3Iex13EconnresetExcE", "N3Iex10EnobufsExcE", "N3Iex10EisconnExcE", "N3Iex11EnotconnExcE", "N3Iex12EshutdownExcE", "N3Iex15EtoomanyrefsExcE", "N3Iex12EtimedoutExcE", "N3Iex15EconnrefusedExcE", "N3Iex12EhostdownExcE", "N3Iex15EhostunreachExcE", "N3Iex11EalreadyExcE", "N3Iex14EinprogressExcE", "N3Iex9EstaleExcE", "N3Iex10EucleanExcE", "N3Iex10EnotnamExcE", "N3Iex10EnavailExcE", "N3Iex9EisnamExcE", "N3Iex12EremoteioExcE", "N3Iex12EcanceledExcE", "N3Iex9EdquotExcE", "N3Iex7BaseExcE", "N9IlmThread5MutexE", "N9IlmThread9SemaphoreE", "N9IlmThread10ThreadPoolE", "N9IlmThread4TaskE", "N3Imf13B44CompressorE", "N3Imf13RleCompressorE", "N3Imf14TiledInputFileE", "N3Imf14TiledInputFile4DataE", "N3Imf15OpaqueAttributeE", "N9IlmThread6ThreadE", "N10__cxxabiv121__vmi_class_type_infoE", "N10__cxxabiv116__enum_type_infoE", "N10__cxxabiv120__si_class_type_infoE", "N10__cxxabiv117__class_type_infoE", "N10__cxxabiv119__pointer_type_infoE", "N10__cxxabiv123__fundamental_type_infoE", "PKDs", "PKDi", "PKDf", "PKDd", "PKDe", "PKDn", "St9exception", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "St9bad_alloc", "St9basic_iosIcSt11char_traitsIcEE", "St9basic_iosIwSt11char_traitsIwEE", "St11logic_error", "St16invalid_argument", "St12length_error", "St12out_of_range", "St13runtime_error", "St11range_error", "St15basic_streambufIcSt11char_traitsIcEE", "St15basic_streambufIwSt11char_traitsIwEE", "St8ios_base", "St10ctype_base", "St10money_base", "St13messages_base", "St12codecvt_base", "St7collateIcE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "St13basic_istreamIwSt11char_traitsIwEE", "St15basic_stringbufIcSt11char_traitsIcESaIcEE", "St19basic_istringstreamIcSt11char_traitsIcESaIcEE", "St19basic_ostringstreamIcSt11char_traitsIcESaIcEE", "St18basic_stringstreamIcSt11char_traitsIcESaIcEE", "St5ctypeIwE", "N9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE", "N9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE", "NSt6locale5facetE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St13basic_ostreamIwSt11char_traitsIwEE", "St13basic_filebufIcSt11char_traitsIcEE", "St14basic_ifstreamIcSt11char_traitsIcEE", "St14basic_ofstreamIcSt11char_traitsIcEE", "St9type_info", "St10bad_typeid", "N10__cxxabiv117__pbase_type_infoE", "St8bad_cast", "St14error_category"], "debugstrings": ["<?xml version=\"1.0\"?>\n", "#version: 1.0", "version?", "version doesnot match", "versions.proto", "TBB_VERSION", "__itt_api_version", "unsupported zlib version", "OptoelectricConversionFactor", "ExifVersion", "FlashpixVersion", "DNGVersion", "DNGBackwardVersion", "Creator: JasPer Version %s", "Cannot read version ", "<?xml version=\"1.0\" encoding=\"%s\"?>\n", "Unsupported YAML version (it must be 1.x)", "/build/master_pack-android/opencv/modules/dnn/misc/tensorflow/versions.pb.cc", "JPEG2000 LOADER ERROR: colorspace conversion failed\n", "This program requires version ", " of the Protocol Buffer runtime library, but the installed version is ", "This program was compiled against version ", " of the Protocol Buffer runtime library, which is not compatible with the installed version (", "Wrong JPEG library version: library is %d, caller expects %d", "Unsupported color conversion request", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION", "png_image_finish_read: damaged PNG_IMAGE_VERSION", "PNG file corrupted by ASCII conversion", " libpng version 1.6.24 - August 4, 2016\n\n", "ASCII conversion buffer too small", "png_image_write_to_memory: incorrect PNG_IMAGE_VERSION", "png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION", "png_image_write_to_file: incorrect PNG_IMAGE_VERSION", "No space for YCbCr->RGB conversion state", "No space for photometric conversion table", "No space for CIE L*a*b*->RGB conversion state.", "Failed to initialize CIE L*a*b*->RGB conversion state.", "Not a TIFF file, bad version number %d (0x%x)", " image files.  Current file format version is ", "The file format version number's flag field contains unrecognized flags.", "basic_filebuf::_M_convert_to_external conversion error", "N10tensorflow10VersionDefE", "N3rml16versioned_objectE", "ITT-API-Version 0.0.0 (20151119)", "initYCbCrConversion", "GCC: (GNU) 4.8", "GCC: (GNU) 4.4.7 20120313 (Red Hat 4.4.7-3)"], "localsymbols": [""], "dependencies": ["libz.so", "libm.so", "libjnigraphics.so", "libdl.so", "liblog.so", "libc.so"], "elfname": "libopencv_java3.so"}