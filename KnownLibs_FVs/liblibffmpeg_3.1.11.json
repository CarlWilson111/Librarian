{"globalvars": ["ff_dca_scale_factor_adj", "ff_swb_offset_1024", "ff_dca_vlc_fst_rsd_amp", "ff_mpjpeg_demuxer", "ff_image_sunrast_pipe_demuxer", "ff_gsm_demuxer", "ff_vf_dctdnoiz", "ff_h264_chroma422_dc_scan", "ff_h263_rfc2190_dynamic_handler", "ff_g726_32_dynamic_handler", "ff_vf_cropdetect", "ff_cos_32_fixed", "ff_dca_xll_refl_coeff", "ff_iff_demuxer", "rgb24to16", "ff_vf_setpts", "ff_wmav1_decoder", "ff_h264_quant_rem6", "ff_opus_muxer", "ff_v210_demuxer", "ff_sox_demuxer", "ff_on2avc_tab_20_2", "ff_vc1_ac_sizes", "ff_tta_decoder", "ff_pcm_u8_demuxer", "ff_af_abench", "ff_vf_nnedi", "uyvytoyuv422", "ff_asrc_aevalsrc", "ff_mpeg4audio_channels", "ff_g729_parser", "ff_on2avc_decoder", "ff_vf_inflate", "avpriv_mjpeg_bits_ac_luminance", "ff_asf_mutex_language", "ff_vf_codecview", "ff_dirac_muxer", "ff_vf_trim", "ff_on2avc_tab_40_1", "ff_ac3_bitrate_tab", "ff_dca_avg_g3_freqs", "ff_h264_p_sub_mb_type_info", "ff_vc1_norm2_bits", "ff_pcm_bluray_decoder", "rgb32to16", "ff_g722_demuxer", "ff_concat_demuxer", "ff_mb_ptype_vlc", "ff_af_ashowinfo", "ff_eac3_gaq_remap_2_4_a", "ff_adp_demuxer", "ff_on2avc_tab_10_1", "ff_dca_bank_coeff", "ff_pcm_mulaw_demuxer", "ff_mp3_header_decompress_bsf", "ff_interleaved_golomb_vlc_len", "ff_dca_sampling_freqs", "ff_smacker_decoder", "ff_opus_codec", "ff_cos_512", "ff_mpeg12_static_rl_table_store", "ff_adpcm_g726_decoder", "ff_sine_512_fixed", "ff_vf_dilation", "ff_pcm_s24be_demuxer", "ff_log2_run", "ff_twinvq_wtype_to_ftype_table", "ff_tcp_protocol", "ff_mp3on4float_decoder", "ff_filmstrip_muxer", "av_util_ffversion", "ff_af_treble", "ff_af_channelsplit", "ff_amrwb_decoder", "ff_af_flanger", "ff_alac_channel_layouts", "avpriv_mjpeg_bits_ac_chrominance", "ff_dca_rsd_level_8", "rgb24tobgr15", "ff_asf_head2_guid", "ff_ogm_text_codec", "ff_tty_demuxer", "ff_sin_65536", "avpriv_mjpeg_bits_dc_luminance", "ff_quicktime_rtp_aud_handler", "ff_dts_muxer", "ff_aac_num_swb_1024", "ff_af_aperms", "ff_aac_kbd_short_128_fixed", "ff_adpcm_psx_decoder", "ff_metasound_mode0808s", "ff_ilbc_demuxer", "ff_mpc_demuxer", "ff_m4v_muxer", "ff_asf_video_conceal_none", "ff_ac3_decoder", "ff_pjs_demuxer", "ff_qdm2_dynamic_handler", "ff_webvtt_demuxer", "ff_vf_fieldorder", "ff_hls_demuxer", "ff_aac_eld_window_512_fixed", "ff_on2avc_modes_40", "ff_aac_parser", "ff_latm_muxer", "ff_af_bass", "ff_af_acompressor", "ff_vf_vstack", "ff_h261_dynamic_handler", "ff_smjpeg_demuxer", "ff_ac3_window", "ff_mpeg4_dc_threshold", "ff_h263_1998_dynamic_handler", "ff_mxf_d10_muxer", "ff_a64_muxer", "ff_vf_deshake", "ff_adpcm_sbpro_3_decoder", "ff_adx_parser", "ff_h264_demuxer", "rgb15tobgr24", "ff_gsm_apcm_bits", "ff_mpeg4_resync_prefix", "ff_yuv2rgb_coeffs", "ff_avr_demuxer", "ff_vf_loop", "ff_vf_tile", "ff_metasound_mode4440", "ff_mlp_muxer", "ff_mpa_synth_window_fixed", "ff_zigzag_scan", "ff_ivf_demuxer", "ff_dca_rsd_level_16", "ff_af_highpass", "ff_mpeg2video_muxer", "ff_mpsub_demuxer", "ff_metasound_mode2224", "rgb32to15", "ff_dss_sp_decoder", "ff_swf_codec_tags", "ff_ac3_parser", "ff_pcm_s8_demuxer", "ff_on2avc_quad_cb_syms", "ff_pcm_s24be_muxer", "ff_cine_demuxer", "ff_au_muxer", "ff_vsink_nullsink", "ff_sdr2_demuxer", "ff_nelly_dequantization_table", "ff_pcm_f32le_decoder", "ff_alac_channel_elements", "ff_mediatype_video", "ff_sdx2_dpcm_decoder", "ff_asf_data_header", "ff_aac_kbd_long_1024", "ff_cdg_demuxer", "ff_rm_demuxer", "ff_eac3_bits_vs_hebap", "ff_cos_4096_fixed", "ff_vc1_norm6_codes", "ff_vf_phase", "ff_pcm_u16le_decoder", "ff_on2avc_tab_40_2", "ff_webvtt_muxer", "ff_metasound_mode0806s", "ff_pcm_s32le_planar_decoder", "ff_avs_demuxer", "ff_vf_detelecine", "ff_adpcm_4xm_decoder", "ff_srt_muxer", "ff_dv_muxer", "ff_qt_rtp_vid_handler", "ff_interplay_dpcm_decoder", "ff_mpeg4_intra_level", "ff_asrc_sine", "ff_eac3_default_spx_band_struct", "ff_h264_dequant4_coeff_init", "ff_image_exr_pipe_demuxer", "ff_on2avc_tabs_20_84_1", "ff_dts_demuxer", "ff_au_demuxer", "ff_sin_1024", "ff_vc1_mv_pmode_table2", "ff_h264_i_mb_type_info", "ff_af_sidechaingate", "ff_dca_sb_reorder", "ff_vf_decimate", "ff_xa_demuxer", "ff_mpa_sblimit_table", "ff_af_acrossfade", "ff_aac_swb_size_128", "ff_old_flac_codec", "ff_nut_demuxer", "avfilter_all_channel_layouts", "ff_uncodedframecrc_muxer", "ff_vp3_parser", "ff_h263_pixel_aspect", "ff_codec_wav_guids", "ff_wv_muxer", "ff_image2_brender_pix_demuxer", "ff_vc1_2ref_mvdata_codes", "ff_thp_demuxer", "ff_af_pan", "ff_h263_inter_MCBPC_bits", "ff_af_silencedetect", "ff_aac_codebook_vector_idx", "ff_af_anequalizer", "ff_on2avc_window_long_24000", "ff_af_equalizer", "ff_af_arealtime", "ff_cavsvideo_muxer", "ff_h263_format", "ff_xma1_decoder", "ff_sup_demuxer", "ff_tns_max_bands_1024", "ff_ogm_audio_codec", "ff_alac_decoder", "ff_vc1_norm2_codes", "ff_codec_ast_tags", "ff_g722_muxer", "ff_pcm_lxf_decoder", "ff_nut_audio_extra_tags", "ff_wve_demuxer", "ff_vf_selectivecolor", "ff_ads_demuxer", "ff_vf_transpose", "ff_vc2hq_dynamic_handler", "av_ripemd_size", "ff_asf_content_encryption", "ff_vag_demuxer", "ff_ac3_dec_channel_map", "ff_eac3_spx_atten_tab", "ff_vf_shuffleplanes", "ff_pcm_s32be_muxer", "ff_avf_aphasemeter", "ff_dca_rsd_pack_5_in_8", "ff_adpcm_ima_apc_decoder", "ff_hevc_dynamic_handler", "ff_dca_freq_ranges", "ff_wmv2_scantableA", "ff_ipmovie_demuxer", "ff_yuv4mpegpipe_muxer", "ff_tns_max_bands_480", "ff_mpeg12_mbPatTable", "ff_ac3_frame_size_tab", "ff_vorbiscomment_metadata_conv", "ff_pcm_u16be_decoder", "ff_sap_demuxer", "ff_webp_muxer", "avpriv_mpa_freq_tab", "ff_vf_framepack", "ff_vf_curves", "ff_vc1_1ref_mvdata_vlc", "ff_adpcm_oki_step_table", "ff_vf_fifo", "ff_vf_setfield", "ff_dca_vlc_rsd_amp", "ff_vc1_intfr_4mv_mbmode_vlc", "ff_ac3_ungroup_3_in_5_bits_tab", "ff_dither_8x8_32", "ff_adpcm_index_table", "ff_vf_swapuv", "ff_flv_muxer", "ff_mpeg1vcd_muxer", "ff_cook_decoder", "ff_vc1_mv_diff_vlc", "ff_dsf_demuxer", "ff_smackaud_decoder", "ff_sin_256", "ff_amr_wb_dynamic_handler", "ff_id3v1_genre_str", "ff_on2avc_tab_10_2", "ff_dirac_codec", "ff_rawvideo_muxer", "ff_reverse", "ff_h263_loop_filter_strength", "ff_vf_smartblur", "ff_wma_lsp_codebook", "ff_pcm_f32le_demuxer", "ff_img_tags", "rgb32tobgr15", "rgb32tobgr16", "ff_vsrc_testsrc", "ff_asf_video_stream", "ff_mtv_demuxer", "ff_flac_muxer", "ff_qcp_demuxer", "ff_se_golomb_vlc_code", "ff_af_stereotools", "ff_cos_16_fixed", "ff_ffm_demuxer", "ff_pcm_f64be_muxer", "ff_asf_simple_index_header", "ff_rsd_demuxer", "ff_dvbsub_parser", "ff_mkv_mime_tags", "ff_af_asetrate", "ff_mpeg4_default_intra_matrix", "ff_mace6_decoder", "ff_vf_maskedmerge", "ff_sine_256", "ff_vf_il", "ff_vf_ciescope", "ff_rm_metadata", "ff_pow_0_5", "ff_adpcm_ima_oki_decoder", "ff_sol_dpcm_decoder", "ff_vsrc_allrgb", "ff_mpeg4_DCtab_lum", "ff_hevc_mp4toannexb_bsf", "ff_pcm_u16be_muxer", "ff_cos_2048_fixed", "ff_vf_gradfun", "ff_vf_repeatfields", "avpriv_cga_font", "ff_asf_ext_content_encryption", "ff_vc1_intfr_non4mv_mbmode_vlc", "ff_asf_language_guid", "ff_vf_fade", "ff_h263_2000_dynamic_handler", "ff_gif_muxer", "ff_als_decoder", "ff_flac_decoder", "ff_rl_intra_aic", "ff_tns_max_bands_512", "ff_vc1_mv_pmode_table", "ff_video_guids", "ff_af_aemphasis", "avpriv_mpeg4audio_sample_rates", "ff_mxf_pixel_format_uls", "ff_asf_jfif_media", "ff_h263_parser", "ff_pcm_s16le_decoder", "ff_img_options", "ff_xbin_demuxer", "ff_pcm_zork_decoder", "ff_rtp_muxer", "ff_ue_golomb_vlc_code", "ff_DSATTRIB_TRANSPORT_PROPERTIES", "ff_ac3_db_per_bit_tab", "ff_vc1_1ref_mvdata_bits", "ff_dca_vlc_damp", "ff_nut_video_tags", "ff_h263_hwaccel_pixfmt_list_420", "ff_vf_rotate", "ff_jacosub_muxer", "ff_mp2_decoder", "ff_xmv_demuxer", "ff_mpeg4_decoder", "ff_nut_audio_tags", "avpriv_mjpeg_bits_dc_chrominance", "ff_vf_blackframe", "ff_g722_low_inv_quant4", "ff_adpcm_ms_decoder", "avpriv_dca_sample_rates", "ff_ue_golomb_len", "ff_aac_kbd_long_1024_fixed", "ff_ilbc_muxer", "ff_vc1_bfraction_codes", "ff_dca_st_coeff", "ff_vc1_norm6_bits", "ff_adpcm_ea_r2_decoder", "ff_h261_demuxer", "ff_realtext_demuxer", "ff_theora_dynamic_handler", "ff_vc1_adv_interlaced_8x4_zz", "ff_aac_latm_decoder", "ff_avi_muxer", "ff_ogg_muxer", "ff_vsrc_smptebars", "ff_vf_framestep", "ff_theora_codec", "ff_vf_vflip", "ff_tta_shift_1", "ff_vf_colorlevels", "rgb15to16", "ff_dcstr_demuxer", "ff_inter_level", "ff_subviewer_demuxer", "ff_cos_2048", "ff_gif_demuxer", "ff_dca_quant_levels", "avpriv_mjpeg_val_ac_luminance", "ff_codec_movaudio_tags", "ff_vf_colorkey", "ff_vf_w3fdif", "ff_vf_split", "ff_vc1_icbpcy_p_bits", "ff_mlp_demuxer", "ff_vc1_intfr_non4mv_mbmode_codes", "ff_pcm_f64le_demuxer", "ff_dither_8x8_128", "ff_asf_group_mutual_exclusion_object", "ff_h264_muxer", "rgb24tobgr16", "ff_vf_fieldhint", "ff_v210x_demuxer", "ff_aac_latm_parser", "ff_on2avc_pair_cb_elems", "ff_smjpeg_muxer", "ff_nut_codec_tags", "ff_vf_find_rect", "ff_mp3float_decoder", "ff_af_join", "ff_microdvd_muxer", "ff_cbrt_tab_fixed", "ff_mpeg2_non_linear_qscale", "ff_g723_1_decoder", "ff_id3v2_4_tags", "ff_pcm_f32be_decoder", "ff_vf_pp7", "ff_bit_muxer", "ff_h264_mp4toannexb_bsf", "ff_rawvideo_demuxer", "ff_avf_showwaves", "ff_wmv2_scantableB", "ff_vf_hqdn3d", "ff_ffmetadata_muxer", "ff_rgb24toyv12", "ff_pnm_parser", "rgb16to32", "ff_rtsp_muxer", "ff_cos_32768_fixed", "ff_mp4_muxer", "ff_mpegvideo_parser", "ff_sine_512", "ff_vf_eq", "ff_h264_dequant8_coeff_init", "ff_metasound_mode4432", "ff_truespeech_decoder", "ff_image_pgmyuv_pipe_demuxer", "ff_vc1_pixel_aspect", "ff_aac_demuxer", "ff_adpcm_ima_amv_decoder", "ff_mpeg2_aspect", "avpriv_pix_fmt_bps_mov", "ff_daud_muxer", "ff_rdt_demuxer", "rgb16to15", "ff_matroska_audio_muxer", "ff_vf_convolution", "ff_avm2_muxer", "ff_put_pixels_clamped", "ff_dtshd_demuxer", "ff_adpcm_sbpro_4_decoder", "ff_mb_type_b_tab", "ff_vc1_intfr_4mv_mbmode_bits", "ff_vc1_if_mmv_mbmode_codes", "ff_vf_hue", "ff_mp2_muxer", "ff_webm_dash_manifest_demuxer", "ff_vf_lenscorrection", "ff_cavsvideo_demuxer", "__DTOR_LIST__", "ff_vf_lutyuv", "ff_dca_ph0_shift", "ff_adpcm_AdaptCoeff2", "ff_on2avc_pair_cb_syms", "ff_segafilm_demuxer", "ff_mlp_parser", "ff_oma_chid_to_native_layout", "ff_gxf_demuxer", "ff_adpcm_ima_dk4_decoder", "ff_vf_setdar", "ff_mov_muxer", "ff_ac3_log_add_tab", "ff_af_dynaudnorm", "ff_pcm_u32be_muxer", "ff_image2_muxer", "ff_wav_muxer", "ff_cos_1024_fixed", "ff_spdif_demuxer", "ff_ea_demuxer", "ff_bintext_demuxer", "ff_genh_demuxer", "ff_adpcm_adx_decoder", "ff_rso_muxer", "ff_pcm_s32be_decoder", "mpjpeg_options", "ff_ws_snd1_decoder", "ff_asf_marker_header", "ff_af_sidechaincompress", "ff_mmf_muxer", "ff_ico_muxer", "ff_cdxl_demuxer", "ff_image2_demuxer", "ff_vc1_b_field_mvpred_scales", "ff_af_chorus", "ff_dc_lum_vlc", "ff_b60_sinc", "ff_vp9_superframe_bsf", "ff_adpcm_ima_dk3_decoder", "ff_sap_muxer", "ff_interleaved_ue_golomb_vlc_code", "ff_h263_static_rl_table_store", "ff_metasound_mode1616", "ff_epaf_demuxer", "ff_framemd5_muxer", "ff_vc1_icbpcy_vlc", "ff_asf_audio_conceal_spread", "ff_h264_b_mb_type_info", "ff_vc1_fps_nr", "ff_sine_32", "ff_dca_lfe_fir_64_fixed", "ff_txd_demuxer", "ff_mpeg1_default_non_intra_matrix", "ff_pcm_f32be_muxer", "ff_nut_dispositions", "ff_vplayer_demuxer", "ff_dca_bits_per_sample", "ff_eac3_mantissa_vq", "ff_aac_swb_size_1024", "ff_dca_vlc_avg_g3", "ff_adpcm_dtk_decoder", "ff_vf_copy", "ff_fourxm_demuxer", "ff_avf_adrawgraph", "ff_mpeg4_default_non_intra_matrix", "ff_af_afade", "ff_fc_2pulses_9bits_track2_gray", "ff_af_asendcmd", "ff_gxf_muxer", "ff_mlv_demuxer", "ff_w64_guid_data", "ff_g726_24_dynamic_handler", "ff_vc1_bfraction_lut", "ff_pcm_u8_muxer", "ff_hevc_diag_scan8x8_y", "ff_interleaved_dirac_golomb_vlc_code", "ff_mp3_muxer", "ff_mpeg1_default_intra_matrix", "ff_mbincr_vlc", "ff_oma_muxer", "ff_adpcm_thp_decoder", "ff_dsd_lsbf_decoder", "ff_sbr_noise_table_fixed", "ff_vc1_ttblk_bits", "ff_g726_40_dynamic_handler", "ff_aac_spectral_bits", "planar2x", "ff_dca_lfe_fir_64", "ff_dither_2x2_8", "ff_vc1_subblkpat_vlc", "ff_ac3_enc_channel_map", "ff_ac3_band_start_tab", "ff_dca_parser", "ff_mpc7_decoder", "ff_sine_4096_fixed", "ff_dca_inv_dmixtable", "ff_ingenient_demuxer", "ff_aac_pow34sf_tab", "ff_h263_decoder", "ff_avf_showfreqs", "ff_af_volumedetect", "ff_adpcm_sbpro_2_decoder", "ff_af_earwax", "ff_mkv_codec_tags", "ff_dvaudio_parser", "ff_codec_smjpeg_audio_tags", "ff_vf_realtime", "ff_vf_vectorscope", "rgb16tobgr24", "ff_vf_idet", "ff_dca_core_bsf", "ff_adpcm_afc_coeffs", "ff_metasound_mode4432s", "ff_mba_length", "rgb24tobgr32", "ff_framehash_muxer", "shuffle_bytes_0321", "ff_imx_dump_header_bsf", "ff_wsvqa_demuxer", "ff_subviewer1_demuxer", "ff_on2avc_tab_84_3", "ff_siff_demuxer", "ff_vf_format", "av_filter_ffversion", "ff_dca_scf_to_grid_2", "ff_af_afftfilt", "ff_adpcm_yamaha_difflookup", "ff_af_aformat", "ff_vf_bwdif", "ff_vf_thumbnail", "ff_aac_kbd_short_128", "ff_ircam_muxer", "ff_h263_inter_MCBPC_vlc", "ff_vf_deflate", "ff_vf_interlace", "ff_tak_demuxer", "ff_mpegts_demuxer", "ff_af_astats", "ff_ass_muxer", "ff_adpcm_ima_dat4_decoder", "ff_mpa_synth_window_float", "ff_af_adelay", "ff_yuv4mpegpipe_demuxer", "ff_alternate_vertical_scan", "ff_vf_owdenoise", "ff_idf_demuxer", "ff_on2avc_tabs_20_84_3", "ff_mkv_image_mime_tags", "ff_mv_demuxer", "ff_pcm_s32le_muxer", "ff_atrac1_decoder", "ff_mpa_quant_steps", "ff_vc1_ttblk_vlc", "ff_amr_muxer", "ff_celt_window2", "ff_voc_codec_tags", "ff_h263_intra_MCBPC_vlc", "ff_vc1_2mv_block_pattern_bits", "ff_id3v2_picture_types", "ff_table_0_entries_time_le16", "ff_vf_hwupload", "ff_wmalossless_decoder", "ff_mpeg4_generic_dynamic_handler", "ff_h264_dequant8_coeff_init_scan", "ff_zigzag_direct", "ff_psp_muxer", "ff_af_hdcd", "ff_vc1_if_mmv_mbmode_vlc", "ff_smoothstreaming_muxer", "ff_vc1_cbpcy_p_vlc", "ff_avf_showspectrum", "ff_ac3_demuxer", "ff_ac3_bin_to_band_tab", "ff_caf_demuxer", "ff_lrc_demuxer", "ff_g729_demuxer", "ff_eac3_hebap_tab", "ff_adpcm_mtaf_decoder", "ff_af_vibrato", "ff_pva_demuxer", "ff_live_flv_demuxer", "ff_vf_drawbox", "ff_dca_lfe_delta_index_24", "ff_sbr_noise_table", "ff_s302m_decoder", "ff_mpeg4_unpack_bframes_bsf", "ff_bmv_demuxer", "ff_amrnb_decoder", "ff_rtsp_demuxer", "ff_vf_fps", "ff_pcm_s32be_demuxer", "ff_nistsphere_demuxer", "ff_vorbis_floor1_inverse_db_table", "ff_eac3_frm_expstr", "ff_inter_vlc", "ff_vf_perspective", "ff_dnxhd_parser", "ff_tgp_muxer", "ff_sine_256_fixed", "ff_oma_demuxer", "ff_hash_muxer", "ff_metasound_mode1110", "ff_h261_muxer", "ff_vf_blackdetect", "ff_dca_fir_32bands_perfect_fixed", "ff_adpcm_ima_wav_decoder", "ff_on2avc_tabs_4_10_1", "ff_wavpack_decoder", "ff_mxf_demuxer", "ff_format_waveformatex", "ff_w64_guid_fmt", "ff_mtaf_demuxer", "ff_adpcm_afc_decoder", "avpriv_mjpeg_val_ac_chrominance", "ff_mlp_huffman_tables", "ff_sbg_demuxer", "ff_mpeg12_frame_rate_tab", "ff_mpeg1system_muxer", "ff_ass_demuxer", "ff_network_inited_globally", "ff_alac_channel_layout_offsets", "ff_dca_joint_scale_factors", "ff_af_atempo", "ff_msnwc_tcp_demuxer", "ff_af_bandreject", "ff_mpeg2svcd_muxer", "ff_vc1_fps_dr", "ff_dfa_demuxer", "ff_flv_demuxer", "ff_af_asetnsamples", "ff_mov2textsub_bsf", "ff_vf_metadata", "ff_vf_showpalette", "ff_vf_deband", "ff_cos_256_fixed", "ff_wma_hgain_huffcodes", "ff_avf_showcqt", "ff_nuv_demuxer", "ff_tta_filter_configs", "ff_mpeg4_rl_intra", "ff_format_videoinfo2", "ff_chomp_bsf", "ff_image_pictor_pipe_demuxer", "ff_sipr_decoder", "ff_vorbis_decoder", "ff_sine_128_fixed", "ff_aea_demuxer", "ff_cos_8192", "ff_cos_512_fixed", "ff_wtv_demuxer", "ff_lrc_metadata_conv", "ff_rso_demuxer", "ff_sine_8192_fixed", "ff_acm_demuxer", "ff_dsicinaudio_decoder", "ff_fsb_demuxer", "ff_h263_inter_MCBPC_code", "yuv422ptoyuy2", "ff_h261_parser", "ff_dca_vlc_quant_index", "ff_asf_metadata_conv", "ff_h263_intra_MCBPC_code", "ff_h264_dynamic_handler", "ff_vf_hqx", "ff_flac_blocksize_table", "swr_ffversion", "ff_vf_elbg", "ff_mp3_decoder", "ff_dither_8x8_220", "ff_vf_datascope", "ff_vc1_demuxer", "ff_vc1_intfr_non4mv_mbmode_bits", "ff_sin_32", "ff_vc1_simple_progressive_4x4_zz", "ff_sln_demuxer", "ff_flac_parser", "ff_h264_parser", "ff_adpcm_ima_qt_decoder", "ff_mm_demuxer", "ff_pcm_f64be_demuxer", "ff_asf_file_header", "ff_af_apulsator", "ff_udplite_protocol", "ff_dca_lfe_delta_index_16", "ff_mpa_enwindow", "avpriv_mjpeg_val_dc", "ff_dca_fir_64bands", "ff_aac_eld_window_480", "ff_mjpeg2jpeg_bsf", "ff_vf_pixdesctest", "ff_adpcm_ima_iss_decoder", "av_md5_size", "ff_aac_scalefactor_bits", "ff_sami_demuxer", "ff_sox_muxer", "ff_w64_guid_wave", "ff_on2avc_ctab_2", "ff_wsaud_demuxer", "ff_on2avc_ctab_4", "ff_eac3_gaq_remap_1", "ff_vf_random", "ff_lvf_demuxer", "ff_vf_reverse", "ff_vorbis_dynamic_handler", "ff_vc1_cbpcy_p_bits", "ff_vf_bench", "ff_smacker_demuxer", "avpriv_pix_fmt_bps_avi", "ff_adx_muxer", "ff_cos_64_fixed", "ff_xma2_decoder", "ff_vf_atadenoise", "ff_c93_demuxer", "ff_dxa_demuxer", "ff_vsrc_haldclutsrc", "ff_mediatype_audio", "ff_af_lowpass", "ff_asf_ext_stream_audio_stream", "ff_vf_null", "ff_adf_demuxer", "ff_mpa_quant_bits", "ff_celt_codec", "ff_vsrc_allyuv", "ff_ircam_demuxer", "ff_dca_vlc_tnl_scf", "ff_w64_muxer", "ff_rvlc_rl_inter", "ff_asf_o_demuxer", "ff_twinvq_decoder", "ff_vf_zoompan", "ff_dca_rsd_level_2b", "ff_skeleton_codec", "ff_pcm_f64le_muxer", "ff_nelly_band_sizes_table", "ff_mb_btype_vlc", "ff_dca_vlc_rsd", "ff_metasound_mode4448", "ff_pcm_s24le_planar_decoder", "ff_pcm_s16be_muxer", "ff_file_protocol", "ff_table_0_entries_legacy_attrib_le16", "ff_mpeg2dvd_muxer", "ff_vsrc_buffer", "ff_hls_muxer", "ff_avf_showwavespic", "ff_opus_decoder", "__popcount_tab", "ff_pcm_u32be_demuxer", "ff_aac_spectral_sizes", "ff_quicktime_rtp_vid_handler", "ff_old_dirac_codec", "ff_vf_drawgraph", "yuv422ptouyvy", "ff_metasound_mode1616s", "ff_avf_showvolume", "ff_mpeg_video_dynamic_handler", "__CTOR_LIST__", "ff_dca_fir_32bands_nonperfect_fixed", "ff_boa_demuxer", "ff_mpeg2_dc_scale_table", "ff_dsd_lsbf_planar_decoder", "ff_rtp_mpegts_muxer", "av_cast5_size", "ff_gsm_parser", "ff_flac_codec", "ff_vf_removegrain", "ff_aac_num_swb_128", "ff_vf_hflip", "ff_metasound_mode1110s", "ff_ac3_hearing_threshold_tab", "ff_codec_ircam_le_tags", "ff_sine_windows", "ff_ralf_decoder", "ff_ac3_floor_tab", "ff_mpeg4video_parser", "ff_dc_chroma_vlc", "ff_vf_blend", "ff_brstm_demuxer", "ff_ogm_video_codec", "ff_asf_ext_stream_embed_stream_header", "ff_vf_overlay", "ff_sin_4096", "ff_pcm_u16le_muxer", "ff_asf_command_stream", "ff_mpeg1_dc_scale_table", "ff_on2avc_tab_20_1", "ff_dv_demuxer", "ff_dvd_nav_parser", "ff_fc_4pulses_8bits_tracks_13", "ff_adpcm_thp_le_decoder", "ff_on2avc_window_long_32000", "ff_vf_tblend", "ff_adts_muxer", "yuyvtoyuv420", "ff_webm_dash_manifest_muxer", "ff_metasound_decoder", "ff_image2pipe_demuxer", "ff_aac_pow2sf_tab", "ff_g729_decoder", "ff_vc1_mv_diff_codes", "ff_vmd_demuxer", "ff_qt_rtp_aud_handler", "ff_dca_channels", "ff_vf_noise", "ff_vf_boxblur", "ff_vf_colorchannelmixer", "ff_atrac_sf_table", "ff_ac3_slow_decay_tab", "ff_sqrt_tab", "ff_daala_codec", "ff_vf_dejudder", "ff_gsm_dequant_tab", "ff_dca_quant_amp", "ff_mpeg4_y_dc_scale_table", "ff_vf_streamselect", "ff_af_compensationdelay", "ff_qcelp_decoder", "ff_pcm_u32le_demuxer", "ff_nsv_demuxer", "ff_metasound_mode4440s", "ff_raw_pix_fmt_tags", "ff_truehd_decoder", "ff_oma_chid_to_num_channels", "ff_vc1_mv_diff_bits", "ff_asf_reserved_4", "ff_adpcm_ct_decoder", "ff_aac_num_swb_480", "rgb15to32", "ff_inverse", "ff_ivf_muxer", "ff_asf_extended_stream_properties_object", "ff_vf_hwdownload", "ff_nellymoser_decoder", "ff_wma_critical_freqs", "ff_index_guid", "ff_asf_stream_header", "ff_redspark_demuxer", "ff_ac3_sample_rate_tab", "ff_mp1_decoder", "ff_on2avc_tabs_20_84_2", "ff_pvf_demuxer", "ff_mlp_layout", "ff_mp3on4_decoder", "ff_stl_demuxer", "ff_vf_colorspace", "ff_vf_scale", "ff_xvag_demuxer", "ff_mpeg12_mbAddrIncrTable", "ff_amr_nb_dynamic_handler", "ff_cos_128_fixed", "ff_log2_tab", "ff_dca_bit_rates", "ff_flic_demuxer", "ff_modified_quant_tab", "ff_ms_rtp_asf_pfa_handler", "ff_rtsp_options", "ff_vf_waveform", "ff_sine_windows_fixed", "ff_vorbis_channel_layout_offsets", "ff_vf_alphaextract", "ff_vf_psnr", "ff_hds_muxer", "ff_daud_demuxer", "ff_rvlc_rl_intra", "ff_sine_1024_fixed", "ff_mlp_decoder", "ff_matroska_demuxer", "ff_imc_decoder", "ff_aac_swb_size_1024_len", "ff_remove_extradata_bsf", "ff_pcm_mulaw_muxer", "ff_str_demuxer", "ff_mpeg4_intra_vlc", "ff_af_bandpass", "ff_af_dcshift", "ff_vsrc_life", "ff_vf_lut3d", "ff_shorten_demuxer", "ff_square_tab", "ff_sipr_subpk_size", "ff_act_demuxer", "ff_vf_displace", "ff_mpc8_decoder", "ff_vc1_adv_interlaced_4x4_zz", "ff_mpeg12_vlc_dc_chroma_bits", "ff_mjpega_dump_header_bsf", "ff_text2movsub_bsf", "ff_pcm_s16be_decoder", "ff_asf_metadata_header", "ff_cos_131072", "ff_sdp_demuxer", "ff_bmv_audio_decoder", "ff_vf_separatefields", "ff_xan_dpcm_decoder", "ff_truehd_muxer", "ff_vf_colormatrix", "ff_on2avc_quad_cb_elems", "ff_on2avc_quad_cb_codes", "ff_adpcm_step_table", "ff_dca_synth_env", "ff_ac3_bap_tab", "ff_mp3adu_decoder", "ff_on2avc_window_short", "ff_asf_demuxer", "ff_sine_8192", "ff_vc1_icbpcy_p_codes", "ff_vaf_spectrumsynth", "ff_sine_1024", "ff_roq_demuxer", "ff_tiertexseq_demuxer", "ff_mpeg4_DCtab_chrom", "ff_vf_lut", "ff_vf_chromakey", "ff_amr_demuxer", "ff_mpeg12_mbMotionVectorTable", "avpriv_ac3_channel_layout_tab", "av_camellia_size", "ff_image_sgi_pipe_demuxer", "ff_atrac3_decoder", "ff_pcm_u8_decoder", "ff_mp4v_es_dynamic_handler", "ff_ape_decoder", "ff_mpeg12_vlc_dc_lum_code", "ff_singlejpeg_muxer", "ff_ac3_slow_gain_tab", "ff_nut_metadata_conv", "ff_vc1_mbmode_intfrp", "ff_aac_encoder", "ff_vf_uspp", "ff_mxg_demuxer", "ff_sine_128", "avpriv_mpa_bitrate_tab", "ff_swb_offset_128", "ff_cbpc_b_tab", "ff_pcm_s24le_demuxer", "ff_dca_grid_1_weights", "ff_dsd_msbf_decoder", "ff_asrc_abuffer", "ff_vc1_2mv_block_pattern_codes", "ff_ac3_fast_gain_tab", "ff_dca_vlc_grid_2", "ff_ogm_old_codec", "ff_vf_colorbalance", "ff_pcm_u24le_decoder", "av_aes_size", "ff_ivr_demuxer", "ff_dca_vlc_st_grid", "ff_mpeg2_frame_rate_tab", "ff_avio_class", "ff_cos_tabs", "ff_asrc_anullsrc", "ff_mov_demuxer", "ff_frm_demuxer", "ff_dca_lossy_quant", "ff_paf_audio_decoder", "ff_vf_crop", "ff_vc1_adv_interlaced_4x8_zz", "ff_spx_muxer", "interleaveBytes", "ff_vf_removelogo", "ff_pcm_s32le_decoder", "ff_dnxhd_demuxer", "ff_vc1_imode_bits", "ff_sprite_trajectory_tab", "ff_vc1t_muxer", "ff_af_aphaser", "ff_h263_demuxer", "ff_dca_vlc_tnl_grp", "ff_tg2_muxer", "ff_rv30_parser", "ff_af_stereowiden", "ff_dca_adpcm_vb", "ff_af_aresample", "ff_riff_info_conv", "ff_caf_muxer", "ff_vsrc_nullsrc", "ff_asf_head1_guid", "ff_aac_coders", "ff_adpcm_ima_ws_decoder", "ff_matroska_video_stereo_plane", "ff_avcodec_locked", "ff_ac3_channels_tab", "ff_sync_guid", "ff_vf_edgedetect", "ff_aac_spectral_codes", "ff_vorbis_vwin", "ff_vpk_demuxer", "ff_pcm_s16be_planar_decoder", "ff_image_qdraw_pipe_demuxer", "ff_sin_2048", "ff_af_amerge", "ff_format_none", "ff_vf_kerndeint", "ff_vf_showinfo", "ff_framecrc_muxer", "ff_vc1_ac_coeff_table", "ff_aac_swb_size_128_len", "ff_pow_0_75", "ff_vc1_imode_codes", "ff_on2avc_tabs_4_10_2", "ff_vf_field", "ff_msf_demuxer", "ff_opus_parser", "ff_vc1_pquant_table", "ff_adpcm_AdaptCoeff1", "ff_asrc_anoisesrc", "ff_sin_16384", "ff_adpcm_index_tables", "ff_pcm_alaw_demuxer", "ff_vf_sab", "ff_vf_mergeplanes", "ff_mpl2_demuxer", "ff_vf_mcdeint", "ff_wsd_demuxer", "ff_vc1_imode_vlc", "ff_metasound_mode2224s", "ff_dnxhd_muxer", "ff_mpeg1_aspect", "ff_adpcm_yamaha_decoder", "ff_codec_rso_tags", "ff_cos_16384_fixed", "ff_cook_parser", "ff_webm_chunk_muxer", "ff_mpeg1video_muxer", "ff_mpegts_dynamic_handler", "ff_metadata_guid", "ff_h264_golomb_to_inter_cbp", "ff_dir_entry_guid", "ff_adpcm_ea_xas_decoder", "ff_udp_protocol", "ff_fft_offsets_lut", "deinterleaveBytes", "ff_adpcm_ea_r1_decoder", "ff_format_cpfilters_processed", "ff_codec_wav_tags", "ff_h263_cbpy_vlc", "ff_wtv_guid", "ff_mjpeg_demuxer", "ff_dca_rsd_level_5", "ff_qdm2_decoder", "ff_png_parser", "ff_spdif_muxer", "ff_bfstm_demuxer", "ff_adpcm_ima_ea_eacs_decoder", "ff_adpcm_ea_maxis_xa_decoder", "ff_vc1_2ref_mvdata_vlc", "ff_vc1_if_1mv_mbmode_codes", "av_sha_size", "ff_pcm_dvd_decoder", "ff_vc1_norm6_vlc", "ff_afc_demuxer", "ff_rtp_demuxer", "ff_dca_high_freq_vq", "ff_aac_psy_model", "ff_vc1_dqscale", "ff_fc_4pulses_8bits_track_4", "ff_vf_fspp", "ff_ogg_demuxer", "ff_vsrc_testsrc2", "ff_vf_fftfilt", "ff_dash_muxer", "ff_dst_decoder", "ff_asf_digital_signature", "ff_af_asettb", "ff_crc_muxer", "ff_codec_caf_tags", "ff_vc1_ttblk_to_tt", "ff_pow_0_7", "ff_dca_scale_factor_quant7", "ff_pcm_s16le_demuxer", "ff_hevc_muxer", "rgb32tobgr24", "ff_vf_xbr", "ff_sws_context_class", "ff_dca_decoder", "ff_dither_8x8_73", "ff_image_jpeg_pipe_demuxer", "ff_bfi_demuxer", "ff_swf_muxer", "ff_dirac_parser", "ff_tak_parser", "ff_wmapro_decoder", "av_twofish_size", "ff_swf_demuxer", "ff_aac_codebook_vector_vals", "ff_image_png_pipe_demuxer", "ff_vorbis_channel_layouts", "ff_on2avc_tab_84_4", "swri_resampler", "ff_sine_64_fixed", "ff_gsm_decoder", "ff_timestamp_guid", "ff_h264_chroma_qp", "ff_mba_max", "yuyvtoyuv422", "ff_adpcm_vima_decoder", "ff_pcm_s8_planar_decoder", "ff_vf_lutrgb", "ff_voc_demuxer", "ff_asf_audio_stream", "ff_aac_eld_window_480_fixed", "ff_cos_131072_fixed", "ff_dca_rsd_level_3", "ff_vf_tinterlace", "ff_mpeg12_vlc_dc_lum_bits", "ff_mxf_codec_uls", "ff_vf_yadif", "ff_pow_0_55", "ff_bethsoftvid_demuxer", "ff_vc1_bfraction_vlc", "ff_pcm_s8_decoder", "ff_dca_lfe_fir_128", "ff_sine_4096", "ff_iac_decoder", "ff_vorbis_parser", "ff_asf_audio_conceal_none", "ff_pcm_u24le_demuxer", "ff_pcm_s16le_planar_decoder", "ff_asink_anullsink", "ff_musx_demuxer", "ff_pcm_s24daud_decoder", "ff_adpcm_ima_rad_decoder", "ff_dca_vlc_bit_allocation", "ff_adpcm_swf_decoder", "ff_dvaudio_decoder", "ff_wmv3_dc_scale_table", "ff_on2avc_tabs_19_40_2", "ff_vf_mpdecimate", "ff_adpcm_yamaha_indexscale", "ff_ilbc_dynamic_handler", "ff_image_dpx_pipe_demuxer", "ff_vsink_buffer", "ff_g723_1_muxer", "ff_matroska_video_stereo_mode", "ff_dump_extradata_bsf", "ff_oma_codec_tags", "ff_data_guid", "ff_sine_32_fixed", "ff_cos_1024", "ff_nelly_init_table", "ff_af_tremolo", "ff_mpegps_demuxer", "ff_af_ainterleave", "ff_vf_haldclut", "ff_nc_demuxer", "ff_stream_segment_muxer", "ff_tta_demuxer", "ff_aac_pred_sfb_max", "ff_ac3_rematrix_band_tab", "ff_on2avc_tabs_20_84_4", "ff_mb_pat_vlc", "ff_af_asplit", "ff_vqf_demuxer", "ff_jacosub_demuxer", "ff_g723_1_demuxer", "ff_cos_4096", "ff_af_astreamselect", "ff_dca_fir_32bands_nonperfect", "ff_af_alimiter", "ff_sin_16", "ff_threedostr_demuxer", "ff_dca_vlc_rsd_apprx", "ff_roq_muxer", "ff_mdct_win_fixed", "ff_f4v_muxer", "ff_tak_decoder", "ff_on2avc_pair_cb_codes", "ff_eac3_muxer", "ff_af_extrastereo", "ff_pcm_f32be_demuxer", "ff_dss_demuxer", "ff_dca_lossless_quant", "ff_vf_readvitc", "ff_vc1_ttfrm_to_tt", "ff_cbrt_tab", "ff_vc1_ttblk_codes", "ff_segment_muxer", "ff_vsrc_smptehdbars", "yvu9_to_yuy2", "ff_asink_abuffer", "ff_asf_extended_content_header", "ff_eac3_demuxer", "ff_vf_spp", "ff_af_asetpts", "ff_crop_tab", "ff_bit_demuxer", "ff_mpegvideo_demuxer", "ff_interleaved_se_golomb_vlc_code", "ff_vf_paletteuse", "ff_pcm_u32le_muxer", "ff_w64_guid_summarylist", "ff_bmp_parser", "ff_vf_unsharp", "ff_dca_vlc_scale_factor", "rgb24to15", "ff_evrc_decoder", "ff_svq3_dynamic_handler", "ff_dca_corr_cf", "ff_pcm_mulaw_decoder", "ff_sin_8192", "ff_vf_histeq", "ff_h264_golomb_to_pict_type", "__clz_tab", "ff_vc1_adv_progressive_8x4_zz", "ff_dca_long_window", "ff_dnxhd_cid_table", "ff_truehd_demuxer", "ff_cos_32768", "ff_vf_cover_rect", "ff_mpeg4_c_dc_scale_table", "ff_vc1_ttmb_vlc", "ff_on2avc_tab_84_2", "ff_svag_demuxer", "ff_golomb_vlc_len", "ff_h263_intra_MCBPC_bits", "ff_vivo_demuxer", "ff_aac_adtstoasc_bsf", "ff_mkvtimestamp_v2_muxer", "ff_cos_65536", "av_tea_size", "ff_rv40_parser", "ff_stream1_guid", "ff_af_aselect", "ff_vf_setsar", "ff_vf_fieldmatch", "ff_voc_muxer", "ff_af_areverse", "ff_vc1_intfr_4mv_mbmode_codes", "ff_vc1_bfraction_bits", "ff_on2avc_tabs_19_40_1", "ff_roq_dpcm_decoder", "ff_pcm_alaw_decoder", "ff_vf_vignette", "ff_asf_my_guid", "ff_adpcm_g722_decoder", "ff_pcm_s32le_demuxer", "ff_data_demuxer", "ff_vp8_parser", "ff_on2avc_pair_cb_bits", "ff_vf_swaprect", "ff_cos_tabs_fixed", "ff_vp8_codec", "ff_vf_drawgrid", "ff_pmp_demuxer", "ff_jpeg_dynamic_handler", "ff_af_ametadata", "ff_aiff_demuxer", "ff_af_afifo", "ff_af_aeval", "ff_vf_framerate", "ff_flac_sample_rate_table", "ff_on2avc_tabs_9_20_1", "ff_vc1_parser", "ff_aiff_muxer", "ff_image_bmp_pipe_demuxer", "ff_on2avc_ctab_3", "ff_cos_65536_fixed", "ff_h264_chroma_dc_scan", "ff_paf_demuxer", "ff_vc1_subblkpat_bits", "ff_asf_metadata_library_header", "ff_vf_erosion", "ff_http_protocol", "ff_m4v_demuxer", "ff_adpcm_mtaf_stepsize", "ff_avi_demuxer", "ff_dsicin_demuxer", "ff_pcm_u24be_decoder", "ff_ac3_muxer", "ff_mp3_demuxer", "ff_mp2float_decoder", "ff_vsrc_mptestsrc", "ff_wtv_muxer", "ff_aqtitle_demuxer", "ff_af_compand", "ff_oga_muxer", "ff_rtp_protocol", "ff_dvbsub_demuxer", "ff_adpcm_ima_smjpeg_decoder", "ff_ico_demuxer", "ff_mpegaudio_parser", "ff_vc1_adv_interlaced_8x8_zz", "ff_avsrc_amovie", "ff_mxf_data_definition_uls", "ff_image_pbm_pipe_demuxer", "ff_on2avc_tab_84_1", "ff_cos_64", "ff_vc1_4mv_block_pattern_codes", "ff_metasound_mode0806", "ff_aa_demuxer", "ff_mpeg2vob_muxer", "ff_dca_fst_amp", "ff_nut_data_tags", "ff_tta_shift_16", "ff_gsm_long_term_gain_tab", "ff_format_mpeg2_video", "ff_codec_movvideo_tags", "ff_avf_showspectrumpic", "ff_vf_ssim", "ff_cos_16", "ff_vmdaudio_decoder", "ff_vf_signalstats", "ff_codec_smjpeg_video_tags", "ff_lmlm4_demuxer", "ff_mvi_demuxer", "ff_af_agate", "ff_mpegtsraw_demuxer", "ff_id3v2_mime_tags", "ff_hevc_diag_scan8x8_x", "ff_sine_64", "ff_id3v2_4_metadata_conv", "ff_vf_geq", "ff_id3v2_3_tags", "ff_rm_codec_tags", "ff_adpcm_xa_decoder", "ff_ast_demuxer", "ff_on2avc_scale_diff_codes", "ff_lrc_muxer", "ff_vf_sendcmd", "ff_asf_muxer", "ff_on2avc_quad_cb_bits", "ff_mxf_opatom_muxer", "ff_vobsub_demuxer", "ff_g722_high_inv_quant", "ff_af_aecho", "ff_mpeg_audio_dynamic_handler", "ff_h264_golomb_to_intra4x4_cbp", "ff_pcm_f64be_decoder", "ff_idcin_demuxer", "ff_af_channelmap", "ff_adpcm_ea_r3_decoder", "ff_adpcm_g726le_decoder", "ff_vf_perms", "ff_sin_32768", "ff_dsd_msbf_planar_decoder", "yv12toyuy2", "ff_vc1t_demuxer", "ff_vf_interleave", "ff_vc1_field_mvpred_scales", "ff_vf_telecine", "ff_h263p_decoder", "ff_vp8_dynamic_handler", "ff_vc1_ttmb_codes", "ff_dither_2x2_4", "ff_codec_bmp_tags", "ff_speex_codec", "ff_wv_demuxer", "ff_tmv_demuxer", "ff_vc1_subblkpat_codes", "ff_mpeg_audio_robust_dynamic_handler", "ff_mgsts_demuxer", "ff_dca_dmixtable", "ff_vf_super2xsai", "ff_filmstrip_demuxer", "ff_id3v2_tags", "ff_h263_mbtype_b_tab", "ff_vf_settb", "ff_vf_extractplanes", "ff_qcelp_dynamic_handler", "ff_vf_scale2ref", "ff_af_volume", "ff_h264_b_sub_mb_type_info", "ff_webm_muxer", "ff_mpc8_demuxer", "ff_bink_demuxer", "ff_ffmetadata_demuxer", "ff_avsrc_movie", "ff_vc1_norm2_vlc", "ff_sin_128", "ff_image_webp_pipe_demuxer", "ff_pcm_f64le_decoder", "ff_apng_demuxer", "ff_hevc_parser", "ff_asf_stream_muxer", "av_sha512_size", "ff_vf_qp", "ff_null_muxer", "ff_mediasubtype_cpfilters_processed", "ff_af_replaygain", "ff_vf_negate", "ff_pcm_f32le_muxer", "yuy2toyv12", "ff_h263_muxer", "ff_smush_demuxer", "ff_avf_ahistogram", "ff_rawvideo_options", "ff_codec_movsubtitle_tags", "ff_pcm_s8_muxer", "ff_vf_bbox", "ff_avf_avectorscope", "ff_wc3_demuxer", "ff_aic_dc_scale_table", "ff_shorten_decoder", "ff_aac_num_swb_512", "ff_adpcm_ima_ea_sead_decoder", "ff_wav_demuxer", "ff_add_pixels_clamped", "ff_wmavoice_decoder", "ff_dca_freq_to_sb", "ff_pcm_u32be_decoder", "ff_w64_guid_riff", "ff_vsrc_cellauto", "ff_aac_decoder", "ff_wma_hgain_huffbits", "ff_voc_magic", "ff_vf_shuffleframes", "ff_binkaudio_dct_decoder", "ff_af_atrim", "ff_mkv_metadata_conv", "uyvytoyuv420", "ff_dca_grid_1_to_scf", "ff_pcm_s24le_muxer", "ff_tns_max_bands_128", "ff_r3d_demuxer", "ff_metasound_mode0808", "ff_image_j2k_pipe_demuxer", "ff_vc1_adv_progressive_4x8_zz", "ff_image_tiff_pipe_demuxer", "ff_apc_demuxer", "ff_dca_rsd_pack_3_in_7", "ff_w64_demuxer", "ff_tee_muxer", "ff_aac_eld_window_512", "ff_ac3_fixed_decoder", "ff_h263_rl_inter", "ff_nelly_delta_table", "ff_dca_vlc_grid_3", "ff_fc_2pulses_9bits_track1_gray", "ff_vsrc_rgbtestsrc", "ff_id3v2_34_metadata_conv", "ff_on2avc_modes_44", "ff_loas_demuxer", "ff_pcm_s24be_decoder", "ff_hevc_demuxer", "ff_dca_lfe_iir", "ff_tedcaptions_demuxer", "ff_oma_srate_tab", "av_tree_node_size", "ff_adpcm_ea_decoder", "ff_af_firequalizer", "ff_dca_lfe_step_size_16", "ff_aac_fixed_decoder", "ff_dca_rsd_level_2a", "ff_mp3adufloat_decoder", "ff_af_allpass", "ff_iss_demuxer", "ff_image_dds_pipe_demuxer", "ff_fc_2pulses_9bits_track1", "rgb24tobgr24", "ff_mjpeg_parser", "ff_vorbis_encoding_channel_layout_offsets", "ff_af_amix", "ff_ffm_muxer", "ff_on2avc_tabs_9_20_2", "ff_asf_codec_comment1_header", "ff_binkaudio_rdft_decoder", "ff_vf_delogo", "ff_dvbtxt_demuxer", "ff_flac_demuxer", "ff_vc1_if_1mv_mbmode_bits", "ff_md5_muxer", "ff_mxf_codec_tag_uls", "ff_dpx_parser", "ff_af_biquad", "ff_image_ppm_pipe_demuxer", "ff_eac3_default_chmap", "ff_vc1_if_mmv_mbmode_bits", "ff_pcm_alaw_muxer", "ff_metasound_mode4448s", "yv12touyvy", "ff_rl_mpeg2", "ff_asf_comment_header", "ff_gsm_muxer", "ff_asf_ext_stream_header", "ff_ismv_muxer", "ff_srt_demuxer", "ff_mpeg12_vlc_dc_chroma_code", "ff_g722_low_inv_quant6", "ff_vf_hstack", "ff_sine_2048", "ff_nut_muxer", "ff_rm_muxer", "ff_pcm_u24le_muxer", "ff_vc1_4mv_block_pattern_vlc", "ff_image_pgm_pipe_demuxer", "ff_vf_select", "ff_cavsvideo_parser", "ff_comfortnoise_decoder", "ff_image2_alias_pix_demuxer", "ff_adpcm_AdaptationTable", "ff_xwma_demuxer", "ff_aix_demuxer", "ff_pcm_u24be_demuxer", "ff_microdvd_demuxer", "ff_acelp_interp_filter", "ff_cos_8192_fixed", "ff_cos_32", "ff_adx_demuxer", "ff_mpa_alloc_tables", "ff_dca_fir_32bands_perfect", "ff_af_anull", "av_format_ffversion", "ff_anm_demuxer", "ff_dca_scale_factor_quant6", "ff_h264_p_mb_type_info", "ff_sin_64", "ff_vf_alphamerge", "ff_dca_vlc_transition_mode", "ff_dca_grid_2_to_scf", "ff_hevc_diag_scan4x4_y", "shuffle_bytes_2103", "ff_ac3_fast_decay_tab", "ff_alternate_horizontal_scan", "ff_vc1_cbpcy_p_codes", "ff_mvtab", "ff_sin_512", "ff_cos_16384", "ff_mpegts_muxer", "ff_rpl_demuxer", "ff_mdct_win_float", "min_weight_sum", "ff_cos_256", "ff_dither_4x4_16", "ff_mp4_obj_type", "ff_vorbis_codec", "ff_SBE2_STREAM_DESC_EVENT", "ff_image_jpegls_pipe_demuxer", "ff_yop_demuxer", "ff_pcm_u24be_muxer", "ff_adpcm_aica_decoder", "ff_vf_pullup", "ff_pcm_u16be_demuxer", "ff_timeline_le16", "ff_mpeg4_intra_run", "ff_sine_2048_fixed", "ff_dirac_demuxer", "ff_mxf_muxer", "ff_dvdsub_parser", "ff_h264_quant_div6", "ff_vc1_4mv_block_pattern_bits", "ff_mp1float_decoder", "ff_af_silenceremove", "ff_g726_16_dynamic_handler", "ff_aac_scalefactor_code", "ff_noise_bsf", "ff_rl2_demuxer", "ff_lxf_demuxer", "ff_vc1_2mv_block_pattern_vlc", "ff_ape_demuxer", "ff_h263_cbpy_tab", "ff_image2pipe_muxer", "ff_pcm_s24le_decoder", "ff_pcm_u16le_demuxer", "ff_ea_cdata_demuxer", "ff_sonic_decoder", "ff_vp9_dynamic_handler", "ff_gsm_ms_decoder", "ff_inter_run", "ff_apng_muxer", "ff_dca_lfe_step_size_24", "ff_pcm_u32le_decoder", "ff_h263_chroma_qscale_table", "ff_vf_remap", "vu9_to_vu12", "ff_iv8_demuxer", "ff_ac3_bap_bits", "ff_asf_codec_comment_header", "ffurl_context_class", "ff_dca_vlc_dph", "ff_vf_noformat", "ff_on2avc_scale_diff_bits", "ff_stream2_guid", "ff_dca_dmix_primary_nch", "ff_dca_fir_64bands_fixed", "ff_w64_guid_fact", "ff_nut_subtitle_tags", "ff_image_pcx_pipe_demuxer", "ff_pcm_s16be_demuxer", "ff_mjpeg_muxer", "ff_sol_demuxer", "ff_dv_dynamic_handler", "ff_avf_concat", "ff_vf_pad", "ff_vf_histogram", "ff_swb_offset_512", "ff_swb_offset_480", "ff_jv_demuxer", "ff_mpjpeg_muxer", "ff_vc1_ttmb_bits", "ff_vc1_if_1mv_mbmode_vlc", "ff_mv_vlc", "ff_vf_stereo3d", "ff_ms_rtp_asf_pfv_handler", "ff_codec_ircam_be_tags", "av_codec_ffversion", "ff_ac3_dynamic_handler", "ff_vsrc_mandelbrot", "ff_af_ebur128", "ff_vc1_1ref_mvdata_codes", "ff_mp4a_latm_dynamic_handler", "ff_eac3_default_cpl_band_struct", "avpriv_vga16_font", "ff_mpeg4_static_rl_table_store", "ff_ipod_muxer", "ff_cos_128", "ff_vp9_parser", "ff_aac_codebook_vectors", "ff_vc1_muxer", "ff_mmf_demuxer", "ff_pcm_s16le_muxer", "ff_asf_header", "ff_eac3_decoder", "ff_w_tab_sr", "ff_data_muxer", "ff_rl_mpeg1", "ff_default_chroma_qscale_table", "ff_wmav2_decoder", "ff_vsrc_color", "ff_hevc_diag_scan4x4_x", "ff_timeline_table_0_entries_Events_le16", "ff_vc1_2ref_mvdata_bits", "ff_image_pam_pipe_demuxer", "ff_ast_muxer", "ff_on2avc_ctab_1", "ff_af_aloop", "ff_eac3_gaq_remap_2_4_b", "ff_hnm_demuxer", "ff_af_apad", "ff_matroska_muxer", "ff_vf_palettegen", "ff_dca_scf_to_grid_1", "ff_mace3_decoder", "ff_dca_xll_band_coeff"], "importedglobals": ["__sF"], "importedfunctions": ["vfprintf", "mkdir", "__assert2", "qsort", "strspn", "__errno", "pthread_create", "sendto", "memcmp", "strcmp", "sinh", "tanh", "log2", "connect", "fseek", "pthread_cond_wait", "socket", "cbrtf", "modf", "mktime", "gai_strerror", "read", "getaddrinfo", "rmdir", "sinf", "mmap", "atan2", "fprintf", "clock_gettime", "opendir", "ldexp", "sched_getaffinity", "exp2", "inflate", "shutdown", "uncompress", "strlen", "atan2f", "pthread_cond_signal", "tan", "memmove", "fgets", "strchr", "recv", "getpeername", "__isfinite", "exp", "strcpy", "pthread_mutex_destroy", "lstat", "fwrite", "fread", "munmap", "fcntl", "memchr", "frexp", "strerror", "rename", "nanosleep", "setsockopt", "bsearch", "recvfrom", "atanf", "inet_aton", "dl_iterate_phdr", "pthread_cond_destroy", "__sched_cpucount", "__isinff", "freeaddrinfo", "inflateInit_", "acos", "getnameinfo", "ftell", "arc4random", "pow", "strcat", "atof", "sscanf", "__isnanf", "close", "cosh", "gmtime_r", "getsockopt", "fabs", "hypot", "closedir", "cosf", "pthread_cond_init", "ldexpf", "zlibCompileFlags", "log2f", "stat", "gethostname", "unlink", "fclose", "pthread_join", "posix_memalign", "erf", "exp2f", "strncpy", "gettimeofday", "atan", "lrintf", "asin", "strstr", "lseek64", "time", "isatty", "logf", "log10", "powf", "getenv", "strcspn", "strtoul", "cbrt", "fputc", "malloc", "pthread_once", "open", "access", "log", "bind", "log10f", "free", "fputs", "cos", "inflateEnd", "readdir", "write", "lrint", "memcpy", "strtol", "vsnprintf", "inflateInit2_", "realloc", "strtod", "fstat", "sin", "fmod", "poll", "pthread_mutex_init", "expf", "getsockname", "send", "mkstemp", "localtime_r", "accept", "snprintf", "memset", "strrchr", "pthread_mutex_unlock", "atoi", "calloc", "abort", "strtoll", "pthread_cond_broadcast", "strtoull", "fopen", "listen", "strerror_r", "pthread_mutex_lock", "strncmp", "fflush", "fdopen", "strftime"], "exportedfunctions": ["ff_dnxhd_print_profiles", "avfilter_graph_parse", "av_lfg_init", "ff_simple_idct_add_12", "ff_faandct248", "swr_close", "ff_avg_qpel8_mc32_old_c", "avio_rb16", "ff_rl_free", "av_realloc_f", "ff_acelp_decode_9bit_to_1st_delay6", "ff_aac_search_for_pred", "rgb64tobgr48_nobswap", "av_xtea_crypt", "ff_filter_graph_remove_filter", "av_format_set_video_codec", "av_fifo_space", "ff_make_format_list", "av_get_token", "ff_celt_init", "ffurl_close", "ff_mdct_init_fixed_32", "ff_af_queue_close", "av_buffersink_get_frame", "avpriv_find_pix_fmt", "ff_h264_idct_add8_9_c", "ff_imdct36_blocks_fixed", "ff_set_sar", "av_color_transfer_name", "ff_fft_end_fixed", "av_register_codec_parser", "ff_get_audio_buffer", "ff_null_get_audio_buffer", "rgb48tobgr48_nobswap", "ff_idctdsp_init", "ff_draw_init", "ff_aac_sbr_ctx_close_fixed", "av_get_pix_fmt_name", "avfilter_inout_alloc", "ff_mlp_rematrix_channel", "__divtc3", "av_get_audio_frame_duration", "av_parser_init", "av_aes_ctr_get_iv", "av_channel_layout_extract_channel", "avpriv_aac_parse_header", "avio_put_str", "av_tree_find", "ff_simple_idct84_add", "avfilter_init_str", "ff_is_multicast_address", "ff_g723_1_inverse_quant", "ff_mov_cenc_avc_parse_nal_units", "av_bsf_next", "ff_put_pixels8x8_c", "__absvti2", "ff_slice_thread_init", "ff_mkv_stereo3d_conv", "avpriv_unlock_avformat", "ff_g729_postfilter", "av_set_options_string", "avfilter_configuration", "ff_tls_init", "ff_mpv_frame_start", "avfilter_free", "av_frame_set_metadata", "ff_h264_init_poc", "avio_wb24", "ff_find_stream_index", "av_timecode_make_string", "av_get_alt_sample_fmt", "ff_tadd_string_metadata", "ffurl_seek", "av_seek_frame", "__register_frame_table", "av_image_fill_max_pixsteps", "av_buffersink_get_frame_rate", "av_d3d11va_alloc_context", "ff_tdecode_header", "avpriv_bprint_to_extradata", "avpriv_request_sample", "avio_skip", "_Unwind_Find_FDE", "ff_h264_idct_dc_add_10_c", "ff_dca_xll_parse", "av_reallocp_array", "ffio_init_checksum", "av_stream_set_r_frame_rate", "ff_mpadsp_apply_window_fixed", "avcodec_set_dimensions", "ff_ape_parse_tag", "avio_close_dyn_buf", "ff_fdct248_islow_10", "__lshrti3", "swr_next_pts", "avio_close_dir", "ff_alloc_picture", "avio_alloc_context", "av_frame_free", "av_log_default_callback", "av_sha512_update", "ff_thread_finish_setup", "swri_get_dither", "av_thread_message_queue_set_err_send", "ff_tget", "ff_video_frame_pool_init", "ff_network_wait_fd_timeout", "av_image_fill_linesizes", "av_parse_ratio", "ff_thread_release_buffer", "ff_jref_idct_add", "url_feof", "av_rdft_end", "ff_frame_thread_encoder_init", "avcodec_send_frame", "ff_sipr_init_16k", "av_frame_copy_props", "av_murmur3_final", "ff_calculate_bounding_box", "avio_wl64", "avcodec_get_chroma_sub_sample", "ff_free_stream", "ff_g723_1_normalize_bits", "ff_h264_idct_add16intra_12_c", "ff_init_slice_from_src", "sws_printVec2", "ff_decode_sbr_extension", "av_format_get_control_message_cb", "ff_replaygain_export", "av_bprint_append_data", "ff_put_bmp_header", "ff_gradfun_blur_line_c", "__divtf3", "av_buffersrc_parameters_alloc", "__subtf3", "avcodec_find_best_pix_fmt2", "__mulvsi3", "ff_acelp_update_past_gain", "ff_init_vscale_pfn", "__multi3", "avpriv_mpa_decode_header2", "av_bsf_alloc", "av_packet_rescale_ts", "ff_faanidct_add", "ff_h264_idct_dc_add_14_c", "av_frame_move_ref", "ff_flac_set_channel_layout", "avformat_close_input", "avio_feof", "av_tree_enumerate", "ff_llauddsp_init", "ff_merge_channel_layouts", "ff_rtsp_read_reply", "av_bitstream_filter_init", "ff_dca_lbr_parse", "ff_rtp_send_punch_packets", "ff_acelp_weighted_vector_sum", "avfilter_version", "av_log2_i", "ff_hevc_annexb2mp4", "ff_dca_xll_flush", "av_hex_dump_log", "av_frame_set_colorspace", "avfilter_sub_matrix", "av_frame_get_metadata", "avpriv_dnxhd_parse_header_prefix", "ff_spdif_read_packet", "ff_dca_core_flush", "avcodec_get_name", "ff_fft_end_fixed_32", "av_xiphlacing", "av_gettime_relative_is_monotonic", "sws_convertPalette8ToPacked24", "ff_mpv_decode_defaults", "avformat_get_mov_video_tags", "av_sample_fmt_is_planar", "av_dict_get", "ff_sine_window_init_fixed", "ff_subtitles_queue_insert", "__popcountdi2", "av_opt_next", "ff_simple_idct_put_8", "ff_draw_supported_pixel_formats", "ff_pcm_read_seek", "av_buffersrc_add_frame_flags", "ff_metadata_conv_ctx", "ff_lsb2full", "ff_h264_idct_add16_14_c", "ffurl_get_file_handle", "avcodec_default_get_format", "avcodec_default_execute2", "ff_hevc_parse_sps", "__fixdfti", "avpriv_mpegts_parse_packet", "ff_h263_loop_filter", "av_hmac_calc", "av_hwdevice_ctx_alloc", "ff_guess_image2_codec", "ff_frame_thread_init", "ff_rtp_finalize_packet", "ff_srtp_set_crypto", "avio_rb32", "ff_udp_set_remote_url", "av_get_output_timestamp", "ff_faanidct_put", "av_packet_new_side_data", "ff_init_scantable", "ff_alloc_packet", "__subvsi3", "ff_mpeg4_set_direct_mv", "__multc3", "__powisf2", "ff_h264_chroma_dc_dequant_idct_14_c", "ff_find_unused_picture", "ff_audio_rechunk_interleave", "ff_simple_idct_add_10", "__ctzdi2", "av_rescale", "ff_put_qpel8_mc32_old_c", "av_buffer_is_writable", "ff_parse_time_base", "av_des_mac", "av_buffer_allocz", "ff_vorbis_nth_root", "av_ripemd_alloc", "ff_dct32_float", "ff_rfps_calculate", "av_thread_message_queue_alloc", "ff_mov_cenc_write_sinf_tag", "av_bitstream_filter_close", "ff_init_range_decoder", "av_add_index_entry", "avcodec_descriptor_get_by_name", "av_log", "av_guess_frame_rate", "ff_rtp_reset_packet_queue", "av_image_check_size", "ff_h264_idct_dc_add_12_c", "ff_celt_flush", "ff_subtitles_read_chunk", "__subvti3", "ff_listen_bind", "ff_formats_unref", "ff_id3v2_tag_len", "ff_h264_idct_add8_12_c", "avpriv_solve_lls", "ff_get_v_length", "ff_id3v2_match", "av_buffersrc_write_frame", "ff_thread_video_encode_frame", "av_strtod", "av_codec_get_max_lowres", "av_packet_free", "ff_aac_search_for_tns", "ff_rtp_handler_find_by_id", "ff_mlp_read_major_sync", "ff_set_qscale", "ff_vorbiscomment_length", "ff_framesync_uninit", "av_sha_init", "ff_make_absolute_url", "av_frame_get_buffer", "av_realloc", "avpriv_exif_decode_ifd", "av_format_set_metadata_header_padding", "ff_frame_thread_encoder_free", "av_twofish_init", "ff_alloc_dir_entry", "rgb32to24", "avcodec_descriptor_next", "av_stream_get_r_frame_rate", "ff_imdct_half_c", "__lttf2", "ff_psdsp_init", "ff_h263_find_frame_end", "avcodec_get_pix_fmt_loss", "av_opt_get_pixel_fmt", "ff_dualinput_uninit", "ff_h264_idct_add_10_c", "ff_dca_lbr_flush", "avio_rl24", "av_display_matrix_flip", "avio_write_marker", "av_frame_get_pkt_size", "av_jni_get_java_vm", "sws_getGaussianVec", "av_bsf_free", "av_opt_get_int", "av_read_image_line", "rgb15to24", "ff_faanidct", "ff_yuv2rgb_c_init_tables", "ff_subtitles_queue_seek", "__subvdi3", "ff_ac3dsp_init", "__negvsi2", "ff_audiodsp_init", "avio_wb64", "av_gettime_relative", "ff_mov_cenc_init", "av_murmur3_alloc", "avpriv_mpegaudio_decode_header", "ff_init_gamma_convert", "ff_mpa_decode_header", "ff_framesync_filter_frame", "av_tree_node_alloc", "av_bprint_strftime", "ff_simple_idct_put_10", "swr_set_compensation", "av_parse_color", "ff_acelp_decode_4bit_to_2nd_delay3", "avcodec_decode_video2", "ff_tadd_shorts_metadata", "av_get_time_base_q", "ff_text_peek_r8", "ff_emulated_edge_mc_16", "ffurl_connect", "av_hwdevice_ctx_init", "ff_avfilter_graph_update_heap", "ff_read_packet", "av_nearer_q", "av_md5_alloc", "__register_frame_info", "ff_parse_sample_format", "av_image_copy_to_buffer", "av_downmix_info_update_side_data", "avio_seek", "_Unwind_Resume", "av_opt_eval_int64", "av_packet_add_side_data", "avio_find_protocol_name", "ff_rac_terminate", "ff_seek_frame_binary", "avpriv_mpegts_parse_open", "ff_subtitles_queue_clean", "ff_vorbis_stream_comment", "ff_vorbis_comment", "sws_isSupportedInput", "ff_avg_qpel16_mc11_old_c", "__mulvti3", "ff_put_no_rnd_qpel8_mc13_old_c", "ff_add_cpb_side_data", "ff_mp4_read_dec_config_descr", "ff_acelp_reorder_lsf", "ff_celp_circ_addf", "ff_subtitles_read_text_chunk", "ff_id3v2_free_extra_meta", "ff_mpeg4video_split", "av_realloc_array", "avpriv_dca_convert_bitstream", "av_image_get_buffer_size", "av_hmac_final", "av_cmp_i", "ff_twinvq_decode_frame", "avfilter_graph_dump", "av_frame_copy", "ff_get_extradata", "avutil_configuration", "ff_parse_close", "ff_thread_report_progress2", "ff_dca_init_vlcs", "ff_id3v1_read", "av_audio_resample_init", "avcodec_chroma_pos_to_enum", "av_strlcatf", "ff_amrwb_lsp2lpc", "ff_end_tag", "av_blowfish_init", "sws_subVec", "av_hwframe_transfer_data", "av_crc", "av_dict_free", "av_free", "ff_hevc_decode_nal_pps", "ff_rdt_parse_open", "ffio_free_dyn_buf", "av_hmac_free", "ffio_set_buf_size", "av_opt_set_dict_val", "av_ripemd_final", "av_codec_is_decoder", "av_vorbis_parse_reset", "av_add_q", "__bswapdi2", "ff_text_pos", "ff_init_desc_no_chr", "__ffsti2", "rgb64to48_bswap", "av_rc4_crypt", "__register_frame_info_table", "ff_pnm_decode_header", "ff_decode_10_pulses_35bits", "av_log_format_line2", "__divdc3", "av_log_ask_for_sample", "ff_flac_is_extradata_valid", "ff_er_frame_start", "av_probe_input_buffer2", "rgb16to24", "avcodec_open2", "av_stereo3d_type_name", "ff_imdct_calc_c_fixed_32", "ff_h263_decode_init", "ff_mpc_init", "ff_rtp_enc_name", "av_asprintf", "av_dict_count", "av_frame_set_sample_rate", "av_opt_get", "ff_j_rev_dct4", "ff_videodsp_init", "ff_mpa_synth_filter_fixed", "_Unwind_GetDataRelBase", "ff_log2_q15", "ff_parse_specific_params", "ff_h264_sei_decode", "ff_line_noise_c", "av_frame_set_channel_layout", "av_dynarray2_add", "ff_get_codec_guid", "av_bsf_receive_packet", "ff_dca_core_parse", "avcodec_get_frame_class", "avio_wb32", "ff_avc_mp4_find_startcode", "avcodec_get_context_defaults3", "av_demuxer_open", "av_hwdevice_get_hwframe_constraints", "ff_rtsp_tcp_write_packet", "av_get_planar_sample_fmt", "av_timecode_make_smpte_tc_string", "ff_nut_add_sp", "av_stereo3d_alloc", "av_get_default_channel_layout", "ff_acelp_interpolate", "avpriv_strtod", "avpriv_copy_bits", "ff_hyscale_fast_c", "ff_raw_audio_read_header", "ffio_init_context", "ff_smil_extract_next_text_chunk", "ff_wma_run_level_decode", "ff_format_io_close", "av_base64_encode", "av_color_space_name", "ff_aac_sbr_init", "av_vorbis_parse_frame", "avio_wl16", "ff_mpeg4_clean_buffers", "av_timecode_get_smpte_from_framenum", "ff_subtitles_queue_read_packet", "ff_celp_lp_zero_synthesis_filterf", "av_opt_set_video_rate", "av_gettime", "av_aes_ctr_set_iv", "av_crc_get_table", "ff_celp_convolve_circ", "avio_rb64", "ffio_rewind_with_probe_data", "ff_put_qpel16_mc32_old_c", "avfilter_graph_send_command", "ff_metadata_conv", "__clzti2", "ff_rtp_get_payload_type", "avio_open2", "av_chroma_location_name", "ffurl_shutdown", "ffio_ensure_seekback", "ff_iir_filter_init", "ff_rtp_set_remote_url", "ff_h264_handle_frag_packet", "av_get_padded_bits_per_pixel", "ff_rtsp_undo_setup", "ff_inet_aton", "__mulsc3", "ff_command_queue_pop", "av_bprint_get_buffer", "avio_open", "av_write_uncoded_frame_query", "av_xtea_alloc", "av_bprint_finalize", "avfilter_graph_request_oldest", "ff_avg_pixels8x8_c", "ff_stream_add_bitstream_filter", "av_opt_set_double", "ff_dca_core_filter_fixed", "av_get_audio_frame_duration2", "__extenddftf2", "av_image_alloc", "ff_psy_preprocess_init", "av_thread_message_queue_recv", "av_timecode_init_from_string", "__absvdi2", "ff_unlock_avcodec", "ff_mdct_end", "avio_write", "ff_iir_filter_init_coeffs", "ff_gen_search", "ff_mpv_frame_end", "ff_framesync_get_frame", "av_timecode_check_frame_rate", "ff_id3v2_start", "ff_h263_decode_end", "ff_hevc_decode_nal_vps", "avcodec_fill_audio_frame", "ff_start_tag", "ff_init_block_index", "__eprintf", "__gttf2", "ff_request_frame", "av_get_packet", "ff_init_buffer_info", "avfilter_add_matrix", "avfilter_register", "avpriv_align_put_bits", "ff_free_picture_tables", "avcodec_copy_context", "ff_mpeg4_decode_partitions", "__udivmodti4", "ffio_get_checksum", "ff_flac_write_header", "ff_dct_end", "ff_h264_idct_add16intra_8_c", "rgb12tobgr12", "__register_frame_info_bases", "sws_scale", "ff_mdct_calcw_c", "avcodec_send_packet", "ff_channel_layouts_ref", "av_frame_set_color_range", "ff_avc_parse_nal_units_buf", "ff_fdct248_islow_8", "av_stereo3d_create_side_data", "ff_mov_write_packet", "ff_h264_idct8_add4_9_c", "ff_mpeg4_pred_ac", "ff_query_formats_all", "ff_planar_sample_fmts", "ff_put_no_rnd_qpel8_mc32_old_c", "ff_rtsp_open_transport_ctx", "sws_freeVec", "av_dct_calc", "ff_ps_read_data", "av_rdft_calc", "ff_configure_buffers_for_index", "ff_tadd_rational_metadata", "av_fifo_realloc2", "avio_wb16", "ff_raw_video_read_header", "ff_mdct_init", "ff_add_param_change", "ff_rtp_handler_find_by_name", "ff_merge_formats", "ff_acelp_fc_pulse_per_track", "ff_mpeg4_frame_end", "avpriv_ac3_parse_header", "av_twofish_alloc", "ffio_fdopen", "av_aes_ctr_alloc", "ff_aac_sbr_init_fixed", "ff_set_fixed_vector", "ff_sws_alphablendaway", "avfilter_graph_alloc_filter", "ff_h264_idct_add16_9_c", "av_get_random_seed", "av_codec_get_id", "ff_parse_mpeg2_descriptor", "ff_h263_find_resync_marker_reverse", "av_codec_get_chroma_intra_matrix", "swr_free", "av_format_get_open_cb", "ff_silk_free", "ff_text_init_buf", "avfilter_init_dict", "ff_init_mpadsp_tabs_float", "avpriv_do_elbg", "ff_socket", "ff_jpeg_fdct_islow_10", "ff_network_init", "__divti3", "ff_rtp_send_h264_hevc", "av_new_packet", "ff_weighted_vector_sumf", "rgb15tobgr32", "av_parser_next", "av_opt_set_sample_fmt", "av_get_channel_layout_nb_channels", "__unordtf2", "__addvti3", "ff_put_qpel8_mc33_old_c", "ff_h264_decode_picture_parameter_set", "ff_rtp_parse_close", "ff_nelly_get_sample_bits", "ff_put_qpel8_mc12_old_c", "avio_r8", "ff_parse_key_value", "avcodec_get_subtitle_rect_class", "ff_side_data_set_encoder_stats", "swr_convert", "__negvdi2", "__fixtfti", "av_image_fill_arrays", "rgb48tobgr48_bswap", "ff_channel_layouts_unref", "ff_tlog_link", "ff_h264_handle_aggregated_packet", "ff_clear_fixed_vector", "ff_mpv_decode_mb", "ff_acelp_lsf2lspd", "av_opt_find", "avcodec_find_encoder", "av_image_check_size2", "ff_mpv_export_qp_table", "_Unwind_GetCFA", "ff_clean_intra_table_entries", "av_bprintf", "av_opt_ptr", "ff_text_read", "av_imdct_half", "__powitf2", "av_opt_set", "ff_mpeg4_init_direct_mv", "ff_mpeg12_common_init", "avfilter_link_free", "ff_id3v2_write_apic", "av_timecode_init", "av_sub_q", "ff_flac_parse_picture", "av_audio_fifo_reset", "avfilter_graph_parse2", "__addvdi3", "ff_dca_downmix_to_stereo_fixed", "ff_mp4_parse_es_descr", "ff_wms_parse_sdp_a_line", "ff_socket_nonblock", "ff_rtsp_connect", "ff_thread_decode_frame", "audio_resample", "ff_compute_frame_duration", "ff_avg_qpel8_mc12_old_c", "av_camellia_crypt", "__modti3", "_Unwind_GetGR", "ff_check_alignment", "ff_copy_rectangle", "ff_rm_read_mdpr_codecdata", "ff_psy_preprocess_end", "av_strndup", "avio_close", "ff_mpeg4_workaround_bugs", "__divsc3", "av_samples_fill_arrays", "ff_psy_end", "__muldc3", "ff_dca_core_filter_frame", "ff_codec_guid_get_id", "__negvti2", "__extendsftf2", "__popcountti2", "av_sha_final", "ff_mov_lang_to_iso639", "avfilter_init_filter", "ff_acelp_decode_6bit_to_2nd_delay6", "ff_rdt_parse_close", "ff_crcA001_update", "ff_h264_idct_add8_422_12_c", "av_md5_final", "ffurl_read_complete", "av_buffersrc_get_nb_failed_requests", "av_mastering_display_metadata_alloc", "avformat_flush", "__ctzti2", "ff_thread_ref_frame", "ff_formats_ref", "ff_aac_ac3_parse", "ff_init_ff_sine_windows_fixed", "ff_acelp_lsp2lpc", "ff_isom_write_avcc", "ff_parse_pixel_format", "avcodec_encode_subtitle", "av_get_channel_layout", "ff_acelp_interpolatef", "ff_vorbiscomment_write", "_Unwind_GetLanguageSpecificData", "ff_simple_idct_12", "ff_all_channel_counts", "av_tree_insert", "ff_blend_init", "ff_blend_rectangle", "av_mdct_init", "ff_rtp_queued_packet_time", "ff_h264_chroma_dc_dequant_idct_10_c", "av_tree_destroy", "ff_mpeg_framesize_alloc", "ffio_close_null_buf", "av_vorbis_parse_free", "av_write_image_line", "ff_http_averror", "shuffle_bytes_3012", "ff_tak_check_crc", "av_get_media_type_string", "ff_subtitles_queue_finalize", "sws_freeFilter", "av_memdup", "avpriv_mpeg4audio_get_config", "avcodec_decode_subtitle2", "ff_dct_init", "ff_prores_idct", "ff_put_pixels16x16_c", "ff_init_ff_sine_windows", "av_opt_serialize", "ff_kbd_window_init_fixed", "ff_er_add_slice", "ff_h263_decode_motion", "ff_index_search_timestamp", "av_audio_fifo_write", "av_md5_update", "av_format_get_probe_score", "ff_psy_preprocess", "av_packet_shrink_side_data", "av_file_unmap", "av_base64_decode", "ff_put_no_rnd_qpel16_mc11_old_c", "avformat_network_deinit", "av_default_item_name", "av_buffer_realloc", "av_buffer_get_opaque", "av_small_strptime", "ff_h264_idct8_add4_10_c", "avio_read_dir", "avpicture_fill", "av_audio_fifo_realloc", "ff_set_common_samplerates", "ff_spdif_bswap_buf16", "av_opt_is_set_to_default", "av_color_range_name", "ff_tget_double", "av_xtea_init", "av_frame_set_channels", "ff_interleaved_peek", "avformat_license", "av_codec_get_tag2", "__fixunstfsi", "av_timecode_make_mpeg_tc_string", "ff_bgmc_decode", "_Unwind_SetIP", "ff_simple_idct_add_8", "av_dv_codec_profile", "av_get_sample_fmt_name", "ff_put_no_rnd_qpel16_mc32_old_c", "ff_thread_report_progress", "av_i2int", "ff_video_frame_pool_get", "ff_h263_decode_frame", "av_reallocp", "ff_rtp_send_h263_rfc2190", "ff_init_dsd_data", "ff_startcode_find_candidate_c", "ff_wv_parse_header", "__fixunsdfti", "av_hash_final", "av_xtea_le_crypt", "swscale_license", "avfilter_pad_count", "ff_psdsp_init_fixed", "av_find_default_stream_index", "av_murmur3_init_seeded", "ff_mlp_calculate_parity", "ff_mpc_dequantize_and_synth", "av_hash_get_name", "ff_lpc_calc_ref_coefs_f", "ff_draw_color", "av_find_best_pix_fmt_of_2", "av_fast_padded_malloc", "ff_mpv_motion", "av_buffer_pool_init2", "ff_acelp_lp_decode", "av_des_init", "av_frame_get_qp_table", "av_frame_ref", "ff_h264_get_profile", "av_apply_bitstream_filters", "av_opt_set_defaults", "ff_get_unscaled_swscale", "ffurl_alloc", "av_bsf_get_by_name", "avio_w8", "avcodec_descriptor_get", "__aarch64_sync_cache_range", "ff_video_frame_pool_uninit", "av_codec_set_pkt_timebase", "ff_rdt_subscribe_rule", "ff_mpadsp_init", "ff_alloc_packet2", "ff_isom_write_vpcc", "ff_g722dsp_init", "av_copy_packet", "avformat_write_header", "ff_sdp_write_media", "av_pixelutils_get_sad_fn", "ff_rm_alloc_rmstream", "rgb64to48_nobswap", "ff_h264_idct_add16_12_c", "ff_network_close", "av_parse_cpu_caps", "ff_rtp_send_vc2hq", "av_get_profile_name", "ff_mpeg_update_thread_context", "swri_audio_convert_alloc", "av_fifo_free", "__deregister_frame_info_bases", "ff_vorbis_inverse_coupling", "ff_mdct_end_fixed", "ff_aac_apply_main_pred", "av_log_format_line", "ff_wma_get_large_val", "sws_getContext", "ff_h264_idct_add8_422_14_c", "ff_sws_init_output_funcs", "av_samples_copy", "av_frame_get_pkt_duration", "av_frame_get_best_effort_timestamp", "ff_mpv_common_frame_size_change", "avio_seek_time", "ff_rtp_send_latm", "avcodec_align_dimensions2", "av_parse_video_rate", "shuffle_bytes_3210", "ff_rtsp_parse_line", "av_frame_alloc", "ff_get_guid", "ff_lpc_end", "ff_imdct36_blocks_float", "avpriv_frame_get_metadatap", "ff_h264_luma_dc_dequant_idct_12_c", "sws_getCachedContext", "avfilter_next", "ff_silk_init", "ff_rdt_calc_response_and_checksum", "avcodec_profile_name", "av_match_name", "av_codec_set_chroma_intra_matrix", "ff_data_to_hex", "ff_acelp_lsf2lsp", "avio_rb24", "ff_h264_idct_add16intra_10_c", "av_dict_copy", "av_fifo_grow", "av_buffersink_params_alloc", "ff_mpv_common_init", "ff_h264_chroma_dc_dequant_idct_8_c", "ff_mpeg_draw_horiz_band", "swr_convert_frame", "av_samples_get_buffer_size", "ff_ac3_bit_alloc_calc_psd", "ff_dv_frame_profile", "av_buffer_pool_uninit", "avfilter_graph_alloc", "ff_dca_exss_parse", "av_opt_get_double", "av_mdct_calc", "av_q2intfloat", "av_parser_parse2", "__fixtfdi", "avfilter_link_get_channels", "avio_read", "av_dup_packet", "ff_register_dynamic_payload_handler", "ff_subtitles_read_line", "avfilter_process_command", "av_format_set_data_codec", "av_register_all", "ffio_read_varlen", "ffio_open_null_buf", "ff_celp_math_init", "ffio_open2_wrapper", "ff_url_join", "av_get_bytes_per_sample", "av_fmt_ctx_get_duration_estimation_method", "ff_alloc_extradata", "av_mdct_end", "av_packet_move_ref", "avio_printf", "ff_tget_short", "av_blowfish_alloc", "ff_register_rdt_dynamic_payload_handlers", "av_jni_set_java_vm", "av_image_check_sar", "ff_put_qpel8_mc13_old_c", "ff_put_pixels8_l2_8", "ff_insert_pad", "av_murmur3_init", "av_audio_fifo_free", "avpriv_dnxhd_get_interlaced", "av_get_sample_fmt_string", "__netf2", "ff_h264_luma_dc_dequant_idct_8_c", "ff_put_no_rnd_qpel8_mc33_old_c", "ff_aac_update_ltp", "ff_avg_qpel16_mc13_old_c", "ff_combine_frame", "ff_codec_get_tag", "__emutls_get_address", "av_log_set_level", "ff_draw_round_to_sub", "av_frame_get_channel_layout", "ff_idet_filter_line_c_16bit", "ff_cbrt_tableinit", "av_frame_get_colorspace", "avpriv_io_move", "__eqtf2", "ff_init_ff_cos_tabs", "ff_iir_filter_free_coeffsp", "ff_raw_data_read_header", "ff_atrac_init_gain_compensation", "ff_twinvq_decode_close", "ff_text_eof", "ff_rtp_send_jpeg", "av_fast_mallocz", "av_thread_message_flush", "ff_avg_pixels16x16_c", "__trunctfsf2", "ff_imdct15_uninit", "av_reduce", "ff_hpeldsp_init", "ff_framesync_init", "ff_add_channel_layout", "ff_tls_deinit", "ff_me_cmp_init_static", "ff_set_common_channel_layouts", "avformat_new_stream", "ff_rm_free_rmstream", "av_new_program", "ff_raw_read_partial_packet", "ffio_open_whitelist", "ff_msgsm_decode_block", "ff_mdct_calc_c", "avcodec_parameters_from_context", "ff_smil_get_attr_ptr", "avfilter_graph_get_filter", "ff_lock_avcodec", "ff_h264_idct_add8_10_c", "ff_h264_chroma422_dc_dequant_idct_9_c", "ff_dca_xll_close", "avfilter_transform", "av_register_input_format", "avio_handshake", "_Unwind_GetRegionStart", "av_aes_ctr_free", "av_opt_set_pixel_fmt", "ff_mdct_calc_c_fixed_32", "ff_put_no_rnd_qpel8_mc12_old_c", "av_dv_codec_profile2", "ff_fill_line_with_color", "av_cast5_alloc", "av_stereo3d_from_name", "__bswapsi2", "av_frame_get_color_range", "ff_rtp_get_local_rtp_port", "ffurl_get_multi_file_handle", "ff_h264_luma_dc_dequant_idct_9_c", "av_packet_from_data", "av_codec_get_pkt_timebase", "av_packet_ref", "avcodec_encode_audio2", "av_bprint_init_for_buffer", "av_hash_names", "ff_rtsp_next_attr_and_value", "avformat_network_init", "ff_mov_cenc_free", "ff_mpeg1_decode_block_intra", "ff_scale_vector_to_given_sum_of_squares", "shuffle_bytes_1230", "av_get_channel_layout_string", "avfilter_pad_get_name", "ff_h2645_packet_split", "ff_mpeg_er_frame_start", "ff_make_formatu64_list", "ff_mpv_report_decode_progress", "av_register_output_format", "ff_h264_chroma422_dc_dequant_idct_10_c", "av_thread_message_queue_send", "ff_ac3_bit_alloc_calc_mask", "ff_h264_idct_add16intra_9_c", "avpriv_find_start_code", "avfilter_config_links", "av_packet_alloc", "av_strerror", "ff_framesync_drop", "ff_isom_write_hvcc", "ff_ps_ctx_init", "av_opt_query_ranges_default", "av_packet_get_side_data", "ff_g723_1_gen_acb_excitation", "av_opt_child_class_next", "av_buffer_create", "ff_h264_idct_add16_8_c", "ff_default_query_formats", "av_bprint_channel_layout", "ff_id3v2_parse_apic", "ff_gmc_c", "ffurl_open_whitelist", "av_vorbis_parse_init", "ff_dca_core_parse_exss", "av_ripemd_init", "ff_img_read_packet", "av_opt_set_defaults2", "av_probe_input_format3", "swresample_configuration", "av_aes_init", "sws_convVec", "ff_mpv_idct_init", "av_md5_init", "ff_accept", "av_picture_copy", "av_sub_i", "av_image_fill_pointers", "ff_dca_lbr_init", "__fixtfsi", "avio_accept", "avfilter_graph_config", "av_fft_calc", "ff_silk_decode_superframe", "__fixunstfti", "av_opt_set_q", "ff_hevc_decode_nal_sps", "av_dict_set_int", "ff_ps_init", "ff_flac_is_native_layout", "sws_allocVec", "ff_fft_init_fixed_32", "ff_sws_init_input_funcs", "ff_h2645_packet_uninit", "av_vorbis_parse_frame_flags", "av_sdp_create", "av_dirac_parse_sequence_header", "ff_print_debug_info2", "av_format_get_subtitle_codec", "ff_check_pixfmt_descriptors", "av_format_get_audio_codec", "av_compare_mod", "avformat_alloc_context", "av_hmac_alloc", "av_audio_fifo_space", "ff_mpeg4_get_video_packet_prefix_length", "av_audio_fifo_drain", "ff_h264_idct8_add_9_c", "av_find_info_tag", "av_parse_video_size", "__register_frame_info_table_bases", "ff_sdp_parse", "av_buffer_make_writable", "ff_bgmc_decode_init", "av_get_sample_fmt", "avcodec_free_context", "ff_avg_qpel16_mc32_old_c", "swr_config_frame", "ffio_read_partial", "av_frame_get_sample_rate", "ff_standardize_creation_time", "__frame_state_for", "ff_srtp_encrypt", "av_escape", "av_codec_get_codec_properties", "av_lockmgr_register", "ff_filter_graph_run_once", "swri_dither_init", "ff_mpeg_ref_picture", "ff_mjpeg_build_huffman_codes", "ff_mpegvideodsp_init", "ff_mpeg_unref_picture", "avcodec_version", "av_write_uncoded_frame", "av_packet_pack_dictionary", "av_memcpy_backptr", "av_hash_get_size", "av_stream_get_side_data", "av_lzo1x_decode", "av_codec_get_codec_descriptor", "ff_mov_write_chan", "ff_cbrt_tableinit_fixed", "av_audio_convert_free", "rgb16tobgr15", "ff_rtp_codec_id", "ff_h264_idct8_add4_8_c", "ff_mdct_end_fixed_32", "__trunctfdf2", "av_bprint_clear", "ff_sws_rgb2rgb_init", "ff_tlog_ref", "swri_rematrix", "ff_simple_idct_put_12", "avcodec_close", "ff_celt_free", "av_dct_init", "ff_silk_flush", "ff_urlcontext_child_class_next", "ff_fdct_ifast", "__absvsi2", "ff_read_riff_info", "ff_wav_codec_get_id", "av_parse_time", "ffurl_accept", "ff_rtp_send_vp8", "__fixunssfdi", "ff_mov_cenc_write_packet", "av_samples_alloc_array_and_samples", "av_hwdevice_hwconfig_alloc", "av_log_set_flags", "av_dynarray_add_nofree", "ff_thread_get_buffer", "av_cpu_count", "ff_id3v2_read", "av_buffer_unref", "avpriv_lock_avformat", "av_get_bits_per_sample", "av_strcasecmp", "ff_aac_apply_tns", "ff_srtp_free", "ff_jpeg_fdct_islow_8", "avcodec_is_open", "avpriv_init_lls", "audio_resample_close", "ff_riff_write_info", "ff_vorbisdsp_init", "av_fifo_alloc_array", "__addvsi3", "av_write_frame", "av_sha512_init", "av_find_input_format", "ff_h264_parse_sprop_parameter_sets", "ff_h264_chroma_dc_dequant_idct_9_c", "av_stristart", "ff_avc_find_startcode", "ff_avfilter_link_set_in_status", "ff_avg_qpel16_mc33_old_c", "__register_frame", "av_frame_set_best_effort_timestamp", "av_bsf_get_class", "av_opt_get_q", "av_max_alloc", "avcodec_get_class", "avfilter_graph_add_filter", "__emutls_register_common", "av_fft_end", "av_rc4_alloc", "av_get_pix_fmt_loss", "avfilter_register_all", "ff_http_init_auth_state", "av_guess_sample_aspect_ratio", "av_rescale_delta", "ff_copy_rectangle2", "__fixsfti", "av_dump_format", "av_thread_message_queue_free", "av_format_inject_global_side_data", "ff_h264_idct8_dc_add_10_c", "av_append_packet", "avpicture_free", "av_audio_convert", "av_get_colorspace_name", "ff_h264_parse_ref_count", "ff_h264_parse_framesize", "rgb15tobgr16", "ff_imdct_calc_c_fixed", "av_filter_next", "sws_setColorspaceDetails", "av_frame_set_pkt_pos", "ff_choose_chroma_location", "ff_h264_idct8_dc_add_8_c", "__ashlti3", "av_basename", "ff_nut_free_sp", "avcodec_encode_video2", "av_opt_get_video_rate", "ff_mdct_init_fixed", "avpriv_dv_init_demux", "ff_h2645_extract_rbsp", "av_frame_get_channels", "ff_rtp_chain_mux_open", "ff_synth_filter_init", "ff_rtsp_skip_packet", "avformat_version", "ff_mpa_synth_init_fixed", "swri_noise_shaping_float", "avfilter_graph_create_filter", "ff_ps_read_data_fixed", "avpriv_get_trc_function_from_trc", "ff_quantize_band_cost_cache_init", "__gcc_bcmp", "ff_acelp_apply_order_2_transfer_function", "ff_line_noise_avg_c", "ff_rl_init", "ff_mpeg4_find_frame_end", "av_image_get_linesize", "av_d2q", "av_pix_fmt_swap_endianness", "av_frame_set_qp_table", "av_utf8_decode", "ff_rdft_init", "ff_acelp_lspd2lpc", "ff_check_h264_startcode", "av_buffer_pool_init", "av_hash_alloc", "ff_g722_update_low_predictor", "ff_wma_end", "swr_get_out_samples", "ff_h264_luma_dc_dequant_idct_10_c", "ff_http_match_no_proxy", "av_opt_free", "swri_realloc_audio", "avpriv_tempfile", "ff_vorbis_len2vlc", "av_opt_is_set_to_default_by_name", "av_fifo_generic_peek", "av_strtok", "av_free_packet", "avpriv_set_systematic_pal2", "av_div_q", "ff_h264_idct_add16intra_14_c", "ff_er_frame_end", "av_resample", "avcodec_default_execute", "av_md5_sum", "avcodec_flush_buffers", "av_imdct_calc", "ff_h264_idct8_dc_add_9_c", "ff_http_auth_create_response", "swr_set_channel_mapping", "ff_rtp_send_h261", "ff_id3v2_read_dict", "avformat_get_class", "ff_h264_chroma422_dc_dequant_idct_8_c", "ff_parse_fmtp", "av_get_pix_fmt_string", "ff_parse_creation_time_metadata", "ff_h263_decode_picture_header", "ffurl_get_protocols", "av_format_get_data_codec", "ff_mpeg4_decode_video_packet_header", "ff_put_no_rnd_qpel16_mc12_old_c", "ff_video_frame_pool_get_config", "ff_fft_lut_init", "av_opt_query_ranges", "av_opt_show2", "swscale_configuration", "ff_update_duplicate_context", "av_d2str", "ff_rtsp_send_cmd_async", "avformat_match_stream_specifier", "swri_rematrix_init", "ff_h264_idct_add_12_c", "__enable_execute_stack", "av_hash_final_hex", "av_oformat_next", "av_rescale_q", "ff_mlp_restart_checksum", "ff_default_get_video_buffer", "avpriv_put_string", "av_frame_get_decode_error_flags", "ff_g723_1_get_residual", "ff_dcadsp_init", "ff_tilt_compensation", "av_bmg_get", "ff_rotate_slice", "ff_get_video_buffer", "ff_h264_idct8_add4_12_c", "ff_set_min_dist_lsf", "ff_put_no_rnd_qpel8_mc11_old_c", "ff_simple_idct_10", "av_resample_compensate", "ff_avg_qpel16_mc31_old_c", "ff_codec_get_id", "ff_generate_wave_table", "ff_h264_idct8_add_10_c", "ff_null_get_video_buffer", "av_fifo_generic_read", "av_twofish_crypt", "ff_h264_idct_add16_10_c", "ff_mlp_checksum16", "ff_mov_close_hinting", "ff_h264_chroma422_dc_dequant_idct_14_c", "__powidf2", "avcodec_register", "av_add_i", "ff_vorbis_ready_floor1_list", "swri_audio_convert_free", "ff_h263_pred_dc", "ff_acelp_decode_8bit_to_1st_delay3", "ff_replaygain_export_raw", "av_dynarray_add", "avcodec_receive_frame", "ff_h264_idct_add8_14_c", "ff_mpa_synth_filter_float", "ff_tadd_doubles_metadata", "av_strstart", "ff_dct32_fixed", "av_packet_free_side_data", "_Unwind_GetIP", "ff_ttadsp_init", "_Unwind_RaiseException", "av_register_hwaccel", "rgb12to15", "ff_vc1_decode_sequence_header", "ff_srtp_decrypt", "av_pix_fmt_count_planes", "swri_noise_shaping_int32", "av_get_exact_bits_per_sample", "av_fifo_alloc", "swri_noise_shaping_int16", "rgb64tobgr48_bswap", "ff_put_no_rnd_qpel16_mc31_old_c", "ff_psy_init", "av_shr_i", "avformat_query_codec", "av_packet_clone", "avpriv_set_pts_info", "ff_hcscale_fast_c", "av_buffer_alloc", "ff_dot_productf", "avcodec_parameters_alloc", "av_opt_get_sample_fmt", "avutil_license", "av_fifo_generic_peek_at", "av_register_bitstream_filter", "av_opt_freep_ranges", "ffurl_write", "avio_enum_protocols", "avio_rl16", "ff_h263_decode_init_vlc", "ff_thread_flush", "ff_tak_decode_frame_header", "avfilter_link_set_closed", "ff_mlp_pack_output", "avcodec_license", "ff_mpadsp_apply_window_float", "av_fast_padded_mallocz", "ff_update_cur_dts", "avcodec_find_best_pix_fmt_of_list", "av_strdup", "av_aes_ctr_set_random_iv", "ff_af_queue_remove", "av_probe_input_buffer", "av_find_nearest_q_idx", "swr_drop_output", "_Unwind_ForcedUnwind", "av_probe_input_format2", "ff_mov_read_chan", "ff_vc1_parse_frame_header", "ff_adx_calculate_coeffs", "avpicture_get_size", "ff_channel_layouts_changeref", "ff_framesync_add_frame", "av_hash_final_bin", "ff_update_link_current_pts", "av_blowfish_crypt", "avpriv_toupper4", "avio_wl32", "ff_tta_rice_init", "avpicture_layout", "ff_bgmc_end", "ff_celp_lp_synthesis_filterf", "av_format_set_control_message_cb", "ff_check_interrupt", "swr_alloc", "ff_mxf_get_samples_per_frame", "av_fft_permute", "av_log2", "swresample_license", "av_fifo_freep", "avio_put_str16le", "av_interleaved_write_frame", "sws_getIdentityVec", "av_read_frame", "av_buffersink_get_frame_flags", "av_opt_set_dict2", "ff_hex_to_data", "ff_h264_idct_add8_8_c", "ff_put_guid", "av_iformat_next", "av_parser_close", "ff_rgb24toyv12_c", "avfilter_open", "av_dv_frame_profile", "ff_formats_changeref", "ff_http_do_new_request", "ff_raw_write_packet", "av_format_get_metadata_header_padding", "ffio_read_size", "ff_fft_init", "av_stream_get_end_pts", "av_expr_free", "avio_get_str", "ff_fmt_is_in", "sws_normalizeVec", "ff_put_qpel16_mc13_old_c", "avpriv_codec_get_cap_skip_frame_fill_param", "avfilter_make_format64_list", "av_strncasecmp", "sws_isSupportedEndiannessConversion", "ff_id3v2_write_metadata", "avcodec_decode_audio4", "av_codec_get_seek_preroll", "ff_framesync_request_frame", "avio_open_dir", "ff_avg_qpel8_mc33_old_c", "ff_dca_lbr_close", "avcodec_dct_get_class", "ff_get_wav_header", "av_crc_init", "ff_h263dsp_init", "rgb16tobgr16", "_Unwind_Backtrace", "avpriv_dnxhd_get_frame_size", "av_get_picture_type_char", "ff_h264_chroma_dc_dequant_idct_12_c", "ff_rtsp_send_cmd", "ff_init_desc_chscale", "av_frame_side_data_name", "ff_fft_end", "ff_celt_decode_frame", "av_hash_init", "avcodec_get_type", "_Unwind_FindEnclosingFunction", "ff_put_qpel8_mc11_old_c", "swri_audio_convert", "ff_h264_check_intra_pred_mode", "av_opt_set_int", "av_thread_message_queue_set_err_recv", "av_buffersink_set_frame_size", "ff_framesync_configure", "ff_merge_samplerates", "ff_dv_print_profiles", "av_opt_get_image_size", "ff_dualinput_request_frame", "avpriv_alloc_fixed_dsp", "av_opt_eval_float", "av_bprint_init", "ff_twinvq_decode_init", "sws_alloc_context", "av_opt_find2", "_Unwind_Resume_or_Rethrow", "avcodec_find_decoder", "ff_lpc_calc_coefs", "ff_request_frame_to_filter", "av_cast5_init", "ff_adx_decode_header", "av_cast5_crypt", "ff_aac_sbr_ctx_init_fixed", "av_frame_set_pkt_duration", "av_dct_end", "av_bsf_send_packet", "ff_dca_xll_filter_frame", "ff_sort_nearly_sorted_floats", "ff_add_format", "ff_g722_update_high_predictor", "ff_avg_qpel8_mc13_old_c", "ff_print_debug_info", "ff_mov_iso639_to_lang", "av_frame_unref", "av_codec_set_codec_descriptor", "av_get_packed_sample_fmt", "ff_acelp_vectors_init", "ff_thread_can_start_frame", "ff_h264_idct_add_8_c", "ff_iir_filter_free_statep", "ff_aac_is_encoding_err", "ff_mpeg1_clean_buffers", "ff_init_ff_cos_tabs_fixed", "ff_rtp_send_h263", "av_opt_set_dict", "ff_dnxhd_get_cid_table", "av_opt_get_dict_val", "ff_rdft_end", "ff_reduce_index", "ffio_fill", "ff_rtsp_close_streams", "ff_dualinput_init", "av_guess_codec", "ff_rtsp_make_setup_request", "ff_load_image", "av_mul_q", "ff_j_rev_dct", "ff_j_rev_dct2", "ff_rtp_send_data", "av_index_search_timestamp", "__ashrti3", "ff_rtp_parse_set_dynamic_protocol", "_Unwind_SetGR", "avpicture_alloc", "ff_tadd_bytes_metadata", "av_tempfile", "ff_listen_connect", "av_opt_set_bin", "ff_thread_init", "avformat_open_input", "av_opt_copy", "ff_mp4_read_descr_len", "ff_rtsp_close_connections", "av_sha_update", "ff_pcm_read_packet", "ff_h264_pred_weight_table", "ff_sine_window_init", "av_rdft_init", "avpriv_io_delete", "ff_rtsp_setup_input_streams", "rgb16tobgr32", "ff_parse_sample_rate", "av_frame_new_side_data", "av_stream_get_recommended_encoder_configuration", "ff_h264_check_intra4x4_pred_mode", "avio_get_str16be", "ff_mov_get_channel_layout", "avpriv_report_missing_feature", "ff_dualinput_filter_frame", "ff_spdif_probe", "ff_jref_idct_put", "av_pix_fmt_desc_next", "ff_pixblockdsp_init", "ff_rtp_get_codec_info", "av_aes_crypt", "ff_rtp_send_mpegvideo", "ffurl_read", "ff_imdct_half_c_fixed", "av_hwframe_ctx_init", "avcodec_string", "ff_put_v", "av_get_channel_layout_channel_index", "ff_dnxhd_find_cid", "ff_frame_thread_free", "ff_nut_reset_ts", "ff_framehash_write_header", "avio_free_directory_entry", "av_dirname", "av_stream_set_recommended_encoder_configuration", "ff_put_qpel16_mc12_old_c", "ffurl_open", "__fixunssfti", "ff_h264dsp_init", "av_shrink_packet", "avfilter_pad_get_type", "av_buffersink_get_samples", "__clear_cache", "ff_mlp_checksum8", "avpriv_dv_get_packet", "ff_init_vscale", "ff_ps_apply", "ff_rtp_get_local_rtcp_port", "avformat_queue_attached_pictures", "avcodec_pix_fmt_to_codec_tag", "ff_aac_ltp_insert_new_frame", "__mulvdi3", "ff_h264_idct8_add_12_c", "av_malloc", "__clzdi2", "ffurl_handshake", "av_strnstr", "ff_opus_parse_packet", "ff_put_no_rnd_qpel16_mc33_old_c", "ff_ape_write_tag", "sws_convertPalette8ToPacked32", "ff_draw_rectangle", "av_rescale_rnd", "ff_all_formats", "ff_aac_adjust_common_pred", "av_color_primaries_name", "ff_atrac_generate_tables", "avpriv_scalarproduct_float_c", "av_fifo_reset", "avfilter_uninit", "av_format_set_subtitle_codec", "ff_color_frame", "av_sha512_alloc", "avutil_version", "swresample_version", "ff_init_desc_hscale", "ff_reshuffle_raw_rgb", "ff_bprint_to_codecpar_extradata", "__negtf2", "av_match_ext", "ff_mov_read_esds", "avformat_find_stream_info", "ff_rtp_parse_open", "av_compare_ts", "avpriv_float_dsp_alloc", "av_filename_number_test", "__addtf3", "av_samples_set_silence", "ff_put_qpel16_mc11_old_c", "av_guess_format", "ff_put_wav_header", "ff_exp2", "avpriv_init_elbg", "av_adler32_update", "av_get_known_color_name", "ff_dv_offset_reset", "av_opt_child_next", "ff_mlpdsp_init", "ff_blend_mask", "av_hwframe_transfer_get_formats", "ff_mxf_decode_pixel_layout", "av_frame_get_pkt_pos", "ff_iir_filter_init_state", "ff_rdt_parse_packet", "ff_lsp2polyf", "ff_img_read_header", "av_aes_ctr_crypt", "avpriv_mpegts_parse_close", "ff_init_desc_cfmt_convert", "ff_build_rac_states", "ff_register_rtp_dynamic_payload_handlers", "ff_draw_horiz_band", "ff_psy_find_group", "ff_side_data_update_matrix_encoding", "ff_avc_write_annexb_extradata", "ff_celp_lp_synthesis_filter", "av_tea_crypt", "av_write_trailer", "ff_h264_decode_seq_parameter_set", "av_camellia_init", "av_read_pause", "avfilter_graph_set_auto_convert", "ff_rtsp_send_cmd_with_content", "ff_rtp_send_amr", "avsubtitle_free", "av_timecode_adjust_ntsc_framenum2", "ff_opencl_register_filter_kernel_code_all", "ff_mov_cenc_avc_write_nal_units", "av_match_list", "ff_alloc_entries", "av_bsf_init", "avfilter_graph_queue_command", "sws_cloneVec", "ff_init_filters", "avcodec_find_encoder_by_name", "ff_mpeg4videodec_static_init", "ff_filter_frame", "av_display_rotation_set", "ff_avg_qpel8_mc11_old_c", "av_log_get_level", "ff_text_init_avio", "av_dict_get_string", "av_opt_eval_q", "ff_g723_1_scale_vector", "ff_text_r8", "ff_vc1_decode_entry_point", "__sfp_handle_exceptions", "ff_sbrdsp_init", "__udivti3", "ffurl_size", "avcodec_parameters_copy", "ff_lpc_calc_ref_coefs", "avfilter_mul_matrix", "ffio_open_dyn_packet_buf", "sws_getDefaultFilter", "ff_vc1dsp_init", "ff_sws_init_range_convert", "ff_iir_filter_flt", "av_xtea_le_init", "ff_emulated_edge_mc_8", "__deregister_frame", "ff_aac_encode_main_pred", "ff_flac_decode_frame_header", "avio_check", "_Unwind_GetTextRelBase", "avcodec_parameters_free", "ff_all_channel_layouts", "ff_h264_idct_dc_add_9_c", "av_audio_convert_alloc", "__clrsbti2", "av_bitstream_filter_filter", "avcodec_receive_packet", "ff_thread_get_format", "ff_rm_parse_packet", "av_packet_unpack_dictionary", "av_convert_lang_to", "ff_h263_handle_packet", "av_frame_get_side_data", "av_audio_fifo_peek", "av_hwframe_ctx_alloc", "av_buffer_ref", "avpriv_dv_produce_packet", "ff_all_samplerates", "ff_brktimegm", "ff_wma_init", "av_codec_set_seek_preroll", "ff_graph_thread_init", "swri_resample_dsp_init", "av_opt_eval_flags", "swri_noise_shaping_double", "ff_imdct_calc_c", "__ffsdi2", "ff_aac_adjust_common_ltp", "ff_avg_qpel8_mc31_old_c", "ff_nut_sp_pos_cmp", "ff_h264_idct8_dc_add_12_c", "ff_fetch_timestamp", "ff_mpeg_flush", "sws_shiftVec", "ff_colorspacedsp_init", "av_force_cpu_flags", "av_rc4_init", "av_opt_flag_is_set", "av_aes_ctr_init", "avfilter_get_by_name", "ff_h264_chroma422_dc_dequant_idct_12_c", "avio_wl24", "avio_rl64", "ff_avg_qpel16_mc12_old_c", "ff_thread_await_progress", "ff_simple_idct44_add", "av_file_map", "ff_codec_open2_recursive", "ff_mlp_init_crc", "avpriv_copy_pce_data", "ff_rtp_send_vp9", "avcodec_enum_to_chroma_pos", "ff_rm_retrieve_cache", "av_mallocz", "av_get_channel_name", "ff_rtp_send_rtcp_feedback", "ff_get_format", "avcodec_dct_alloc", "ff_put_qpel16_mc33_old_c", "ff_dca_set_channel_layout", "av_hwframe_constraints_free", "__deregister_frame_info", "ff_fmt_convert_init", "ff_h264_idct_add_14_c", "__getf2", "av_probe_input_format", "av_resample_close", "ff_get_pcm_codec_id", "av_usleep", "av_hwframe_get_buffer", "ff_sbrdsp_init_fixed", "ff_rtsp_parse_streaming_commands", "swr_get_delay", "ff_asfcrypt_dec", "ff_h264_ps_uninit", "av_version_info", "avcodec_parameters_to_context", "ff_thread_await_progress2", "ff_h264_sei_uninit", "avformat_seek_file", "ff_h264_decode_extradata", "av_dict_parse_string", "av_set_cpu_flags_mask", "ff_tadd_long_metadata", "ff_put_qpel16_mc31_old_c", "ff_add_index_entry", "ff_sbr_apply", "av_qsv_alloc_context", "ff_dsd2pcm_translate", "ff_aac_sbr_ctx_init", "ff_put_no_rnd_qpel16_mc13_old_c", "ff_interleave_packet_per_dts", "ff_acelp_high_pass_filter", "ffurl_closep", "av_strlcpy", "av_gcd", "__udiv_w_sdiv", "av_pix_fmt_desc_get_id", "av_cpb_properties_alloc", "__fixunstfdi", "ff_fill_rectangle", "av_pkt_dump2", "__letf2", "sws_scaleVec", "__multf3", "ff_h264_idct8_dc_add_14_c", "ff_get_bmp_header", "ff_flac_get_max_frame_size", "avio_put_str16be", "ff_aac_encode_tns_info", "ff_rdt_parse_header", "swri_rematrix_free", "av_buffersrc_parameters_set", "ff_mpeg4_decode_picture_header", "rgb15tobgr15", "avio_rl32", "av_fast_malloc", "av_frame_is_writable", "ff_rtsp_setup_output_streams", "ff_imdct15_init", "av_picture_crop", "ff_simple_idct_8", "__gcc_personality_v0", "av_fifo_drain", "sws_alloc_set_opts", "ff_http_auth_handle_header", "avformat_configuration", "ff_h264chroma_init", "ff_ps_init_fixed", "ff_flac_parse_streaminfo", "ff_filter_alloc", "ff_af_queue_add", "ff_id3v2_finish", "ff_tis_ifd", "ff_poll_frame", "av_mul_i", "ff_rtp_send_xiph", "av_mastering_display_metadata_create_side_data", "av_codec_get_lowres", "avformat_get_riff_video_tags", "av_copy_packet_side_data", "avcodec_register_all", "av_int_list_length_for_size", "ff_atrac_gain_compensation", "av_format_get_opaque", "ff_reget_buffer", "ff_mpa_l2_select_table", "ff_framesync_next", "__paritydi2", "ff_celp_filter_init", "ff_update_picture_tables", "sws_init_context", "sws_addVec", "av_hash_final_b64", "ff_nut_sp_pts_cmp", "avio_read_to_bprint", "av_hmac_update", "ff_adaptive_gain_control", "ff_alacdsp_init", "av_audio_fifo_alloc", "ff_dca_downmix_to_stereo_float", "avcodec_find_decoder_by_name", "avfilter_inout_free", "av_des_alloc", "__umodti3", "av_blowfish_crypt_ecb", "av_mod_i", "sws_isSupportedOutput", "ff_sauce_read", "ff_hevc_decode_short_term_rps", "av_codec_set_lowres", "ff_h263_pred_motion", "av_parser_change", "avfilter_get_class", "av_format_get_video_codec", "av_display_rotation_get", "av_log_set_callback", "ff_fill_rgba_map", "ff_acelp_decode_5_6_bit_to_2nd_delay3", "av_packet_copy_props", "av_read_play", "ff_imdct_half_c_fixed_32", "ff_put_qpel8_mc31_old_c", "ff_h263_update_motion_val", "av_audio_fifo_size", "av_bprint_chars", "ff_h263_resync", "ff_hevc_annexb2mp4_buf", "av_stream_new_side_data", "avformat_get_riff_audio_tags", "ff_rfps_add_frame", "ff_init_desc_fmt_convert", "ff_g723_1_dot_product", "avpriv_new_chapter", "av_vlog", "av_get_frame_filename", "av_get_cpu_flags", "ff_aac_search_for_is", "ff_amr_set_fixed_gain", "ff_bsf_child_class_next", "ff_default_get_audio_buffer", "__fixunsdfdi", "ff_write_chained", "ff_atrac_iqmf", "swr_get_class", "av_hmac_init", "av_frame_set_pkt_size", "ff_init_range_encoder", "avcodec_align_dimensions", "av_buffer_get_ref_count", "swscale_version", "ff_match_2uint16", "ff_mov_read_stsd_entries", "av_find_program_from_stream", "av_int2i", "ff_idet_filter_line_c", "ff_ntp_time", "av_calloc", "av_get_codec_tag_string", "avcodec_find_best_pix_fmt_of_2", "av_camellia_alloc", "av_murmur3_update", "av_freep", "ff_mpv_common_end", "av_frame_make_writable", "__ucmpti2", "av_parse_cpu_flags", "swr_set_matrix", "av_opt_get_key_value", "av_packet_split_side_data", "av_audio_fifo_read", "av_sha512_final", "ff_listen", "ff_h264_idct_add8_422_10_c", "ff_avc_parse_nal_units", "avfilter_insert_filter", "av_expr_eval", "av_aes_alloc", "avio_pause", "ff_mpv_common_defaults", "ff_mov_get_channel_layout_tag", "av_strlcat", "ff_h263_show_pict_info", "avformat_get_mov_audio_tags", "ff_simple_idct48_add", "ff_h264_idct_dc_add_8_c", "av_cast5_crypt2", "av_fifo_generic_write", "ff_tta_filter_init", "ff_kbd_window_init", "ff_faandct", "ff_graph_thread_free", "ff_blockdsp_init", "av_codec_is_encoder", "ff_simple_idct248_put", "__cmpti2", "av_thread_message_queue_set_free_func", "av_get_pcm_codec", "ff_sipr_decode_frame_16k", "av_get_channel_description", "ff_gradfun_filter_line_c", "ff_vc1_parse_frame_header_adv", "__clrsbdi2", "ff_reset_entries", "ff_get_line", "av_get_bits_per_pixel", "av_rescale_q_rnd", "ff_dcadct_init", "av_init_packet", "av_bprint_escape", "av_frame_clone", "avpriv_get_gamma_from_trc", "av_resample_init", "av_append_path_component", "ff_aac_sbr_ctx_close", "av_format_set_open_cb", "avfilter_graph_free", "ff_audio_interleave_close", "ff_parse_channel_layout", "swr_is_initialized", "ff_bsf_get_packet", "av_buffersrc_add_frame", "ff_aac_encode_ltp_info", "av_buffer_pool_get", "__parityti2", "ff_g723_1_gen_dirac_train", "avpriv_tak_parse_streaminfo", "swr_inject_silence", "ff_rm_reorder_sipr_data", "ff_h264_idct_add8_422_8_c", "av_opt_set_from_string", "ff_mpv_decode_init", "sws_getColorspaceDetails", "av_opt_get_channel_layout", "ff_udp_get_local_port", "av_pkt_dump_log2", "ff_acelp_filter_init", "ff_h264_idct8_add_14_c", "avcodec_default_get_buffer2", "ff_wma_get_frame_len_bits", "ff_rtp_check_and_send_back_rr", "ff_bgmc_init", "ff_h263_pred_acdc", "ff_af_queue_init", "ff_mpeg_er_init", "ff_ps_ctx_init_fixed", "avformat_alloc_output_context2", "avformat_free_context", "av_frame_get_plane_buffer", "av_packet_side_data_name", "av_hex_dump", "ff_bgmc_decode_end", "av_expr_parse", "ff_j_rev_dct1", "av_des_crypt", "ff_aac_search_for_ltp", "ff_bswapdsp_init", "ff_dca_core_init", "sws_getConstVec", "ff_ps_apply_fixed", "ff_network_wait_fd", "ff_generate_avci_extradata", "av_hash_update", "ff_avfilter_link_set_out_status", "ff_rtp_send_aac", "ff_sbr_apply_fixed", "av_stristr", "ff_init_mpadsp_tabs_fixed", "ff_alloc_a53_sei", "ff_iir_filter", "av_grow_packet", "av_log2_16bit", "ff_vc1_init_common", "_Unwind_DeleteException", "av_bitstream_filter_next", "av_vbprintf", "ff_free_vlc", "ff_copy_whiteblacklists", "ff_h263_decode_mb", "ff_tread_tag", "ff_set_cmp", "ff_rtsp_tcp_read_packet", "av_codec_next", "ff_set_common_formats", "swr_init", "av_ripemd_update", "sws_freeContext", "ff_mpeg12_init_vlcs", "avio_flush", "ff_mov_cenc_write_stbl_atoms", "av_packet_unref", "av_tea_init", "ff_decode_frame_props", "swr_alloc_set_opts", "ff_dca_core_close", "ff_rtsp_fetch_packet", "av_opt_set_channel_layout", "ff_dot_product", "ff_tget_long", "avfilter_get_matrix", "ff_read_frame_flush", "avcodec_configuration", "av_audio_fifo_peek_at", "av_format_set_opaque", "ff_urldecode", "ff_takdsp_init", "ff_get_buffer", "ff_mpa_synth_init_float", "ff_get_packet_palette", "av_fft_init", "ff_decode_sbr_extension_fixed", "ff_g729_adaptive_gain_control", "av_hwaccel_next", "ff_mov_get_lpcm_codec_id", "av_format_set_audio_codec", "ff_opus_parse_extradata", "avfilter_link", "av_stream_get_parser", "ff_crc04C11DB7_update", "av_image_copy_plane", "av_get_pix_fmt", "ff_h264_sei_stereo_mode", "ff_dca_lbr_filter_frame", "av_fopen_utf8", "avfilter_license", "ff_audio_interleave_init", "av_opt_set_image_size", "ff_slice_thread_free", "ff_g723_1_lsp_interpolate", "ff_get_qtpalette", "av_get_standard_channel_layout", "ff_thread_free", "avio_size", "av_find_best_stream", "av_opt_eval_double", "ff_interleave_add_packet", "ff_fdct_ifast248", "ff_h264_luma_dc_dequant_idct_14_c", "ff_mp4_read_descr", "av_add_stable", "avfilter_graph_parse_ptr", "ff_scale_image", "ff_init_ff_cos_tabs_fixed_32", "avpriv_get_raw_pix_fmt_tags", "av_fifo_size", "av_packet_merge_side_data", "avcodec_alloc_context3", "sws_getCoefficients", "av_dict_set", "av_log_missing_feature", "ff_lpc_init", "avio_open_dyn_buf", "av_hwdevice_ctx_create", "av_hash_freep", "av_samples_alloc", "av_tea_alloc", "av_picture_pad", "av_frame_set_decode_error_flags", "ff_real_parse_sdp_a_line", "ff_id3v2_write_simple", "ff_generate_window_func", "ff_wma_total_gain_to_bits", "av_image_copy", "ff_voc_get_packet", "ff_fdctdsp_init", "av_expr_parse_and_eval", "av_fast_realloc", "ff_h264_idct_add8_422_9_c", "ff_rtp_parse_set_crypto", "av_pix_fmt_get_chroma_sub_sample", "ff_flacdsp_init", "ff_qpeldsp_init", "_Unwind_GetIPInfo", "ff_find_last_ts", "av_frame_remove_side_data", "av_pix_fmt_desc_get", "ff_mov_add_hinted_packet", "ff_truehd_layout", "ff_acelp_decode_gain_code", "av_url_split", "av_default_get_category", "av_sha_alloc", "ff_yuv2rgb_get_func_ptr", "avio_closep", "ff_vorbis_floor1_render_list", "ff_mdct_calc_c_fixed", "ff_riff_write_info_tag", "av_timegm", "av_aes_ctr_increment_iv", "ff_h264_idct8_add_8_c", "avpriv_mpa_decode_header", "avpriv_open", "ff_h264_idct8_add4_14_c", "av_interleaved_write_uncoded_frame", "avcodec_get_edge_width", "sws_get_class", "ff_free_filters", "rgb24to32", "ff_put_no_rnd_qpel8_mc31_old_c", "ff_h263_decode_mba", "av_abuffersink_params_alloc", "ff_getSwsFunc", "av_program_add_stream_index", "ff_init_scantable_permutation", "__negti2", "ff_choose_timebase", "ff_fft_init_fixed", "ff_rl_init_vlc", "av_log_get_flags", "ff_decode_pitch_lag", "ff_mpeg1_find_frame_end", "av_opt_eval_int", "ff_set_dimensions", "avio_get_str16le", "ffio_read_indirect", "ff_init_vlc_sparse", "ff_framesync_process_frame", "av_codec_get_tag", "ffio_limit", "avcodec_dct_init", "av_buffer_default_free", "ff_h264_idct_add_9_c", "av_div_i", "ff_rtp_parse_packet", "avpriv_split_xiph_headers", "ff_mov_init_hinting", "ff_me_cmp_init"], "allstrings": ["Internal error, put_bits buffer too small\n", "Assertion %s failed at %s:%d\n", "s->buf_ptr < s->buf_end", "Error parsing ADTS frame header!\n", "Multiple RDBs per frame with CRC", "PCE-based channel configuration without PCE as first syntax element", "Input packet too small\n", "aac_adtstoasc", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Invalid Predictor Reset Group.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "TNS filter order %d is greater than maximum %d.\n", "Dependent coupling is not supported together with LTP\n", "Remapped id too large\n", "Too many channels\n", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "mono with CPE\n", "stereo with SCE\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "ChannelElement %d.%d missing \n", "libavcodec/aacdec_template.c", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "960/120 MDCT window", "AAC data resilience (flags %x)", "epConfig %d", "SBR+", "Audio specific config size is invalid\n", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "Low Delay SBR", "Audio object type %s%d", "Non-byte-aligned audio-specific config", "audio config changed\n", "initializing latmctx\n", "invalid band type\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "Pulse tool not allowed in eight short sequence.\n", "error in spectral data, ESC overflow\n", "Pulse data corrupt or invalid.\n", "ms_present = 3 is reserved.\n", "Unknown ER channel configuration %d", "channel element %d.%d is not allocated\n", "no frame data found\n", "More than one AAC RDB per ADTS frame", "Error decoding AAC frame header.\n", "Elem type:%x id:%x\n", "skip_data_stream_element: Input buffer exhausted before END element found\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "extension type: %d len:%d\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "FILL:%s\n", "libfaac %d.%d", "Multiple programs", "Multiple layers", "no decoder config found\n", "incomplete frame\n", "frame length mismatch %d << %d\n", "ADTS header detected, probably as result of configuration misparsing\n", "aac_latm", "AAC decoder", "dual_mono_mode", "Select the channel to decode for dual mono", "autoselection", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "aac_fixed", "Qavg: %.3f\n", "Unsupported number of channels: %d\n", "Unsupported sample rate %d\n", "Too many bits %f > %d per frame requested, clamping to max\n", "Main prediction unavailable in the \"mpeg2_aac_low\" profile\n", "LTP prediction unavailable in the \"mpeg2_aac_low\" profile\n", "PNS unavailable in the \"mpeg2_aac_low\" profile, turning off\n", "Main prediction unavailable in the \"aac_ltp\" profile\n", "LTP prediction unavailable in the \"aac_main\" profile\n", "Chainging profile to \"aac_ltp\"\n", "Chainging profile to \"aac_main\"\n", "Coders other than twoloop require -strict -2 and some may be removed in the future\n", "The LPT profile requires experimental compliance, add -strict -2 to enable!\n", "Cannot allocate memory.\n", "Lavc57.48.101", "Input contains (near) NaN/+-Inf\n", "diff >= 0 && diff <= 120", "libavcodec/aacenc.c", "AAC encoder", "aac_coder", "Coding algorithm", "anmr", "ANMR method", "twoloop", "Two loop searching method", "Constant quantizer", "aac_ms", "Force M/S stereo coding", "aac_is", "Intensity stereo coding", "aac_pns", "Perceptual noise substitution", "aac_tns", "Temporal noise shaping", "aac_ltp", "Long term prediction", "aac_pred", "AAC-Main prediction", "iid_mode %d is reserved.\n", "icc_mode %d is reserved.\n", "illegal iid\n", "illegal icc\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Expected to read %d PS bits actually read %d.\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "env_facs_q %d is invalid\n", "noise_facs_q %d is invalid\n", "Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "bs_pointer >= 0", "libavcodec/aacsbr_template.c", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "Unsupported sample rate for SBR: %d\n", "Invalid bs_stop_freq: %d\n", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "patch construction failed\n", "Too many patches: %d\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Reserved SBR extensions", "SBR Extension over read.\n", "Expected to read %d SBR bytes actually read %d.\n", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "envelope scalefactor overflow in dequant\n", "temp1 <= 1E20", "libavcodec/aacsbr.c", "sbr->data[ch].bs_num_env > 0", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "Overflow in sbr_hf_assemble, shift=%d,%d\n", "Overflow in sbr_hf_assemble, shift=%d\n", "sbr_qmf_analysis: value %09d too large, setting to %09d\n", "sbr_qmf_analysis: value %09d too small, setting to %09d\n", "!!&((())%%%\"\"", "))/113//+++((", "band_struct_size >= start_subband + n_subbands", "libavcodec/ac3dec.c", "bap %d is invalid in plain AC-3\n", "GAQ gain group code out-of-range\n", "Dependent substream decoding", "Reserved frame type\n", "Additional substreams", "Reduced sampling rate", "Block start info", "frame sync error\n", "invalid bitstream id\n", "invalid sample rate\n", "invalid frame size\n", "unsupported frame type %d: skipping frame\n", "invalid frame type\n", "frame CRC mismatch\n", "unable to determine channel mode\n", "invalid spectral extension range (%d >= %d)\n", "invalid spectral extension copy start bin (%d >= %d)\n", "coupling not allowed in mono or dual-mono\n", "Enhanced coupling", "invalid coupling range (%d >= %d)\n", "new coupling strategy must be present in block 0\n", "new coupling coordinates must be present in block 0\n", "Warning: new rematrixing strategy not present in block 0\n", "bandwidth code = %d > 60\n", "new bit allocation info must be present in block 0\n", "new snr offsets must be present in block 0\n", "new coupling leak info must be present in block 0\n", "delta bit allocation strategy reserved\n", "error in bit allocation\n", "error decoding the audio block\n", "ac3_fixed", "Fixed-Point AC-3 Decoder", "drc_scale", "percentage of dynamic range compression to apply", "heavy_compr", "enable heavy dynamic range compression", "target_level", "target level in -dBFS (0 not applied)", "dmix_mode", "Preferred Stereo Downmix Mode", "ltrt_cmixlev", "Lt/Rt Center Mix Level", "ltrt_surmixlev", "Lt/Rt Surround Mix Level", "loro_cmixlev", "Lo/Ro Center Mix Level", "loro_surmixlev", "Lo/Ro Surround Mix Level", "overflow that would need clipping in ff_acelp_interpolate()\n", "libavcodec/acelp_vectors.c", "Invalid number of channels\n", "buf_size >= 0", "invalid number of samples in packet\n", "mismatch in coded sample count\n", "ERROR: step_index[%d] = %i\n", "ERROR: block_predictor[0] = %d\n", "ERROR: block_predictor[1] = %d\n", "ERROR: step_index = %i/%i\n", "unknown XA-ADPCM filter %d", "per-channel sample count mismatch\n", "ERROR: step_index = %i\n", "Missing coeff table\n", "Nothing consumed\n", "Overread of %d < %d\n", "adpcm_yamaha", "adpcm_xa", "adpcm_thp", "adpcm_thp_le", "adpcm_swf", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_psx", "adpcm_mtaf", "adpcm_ms", "adpcm_ima_ws", "adpcm_ima_wav", "adpcm_ima_smjpeg", "adpcm_ima_rad", "adpcm_ima_qt", "adpcm_ima_oki", "adpcm_ima_iss", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ima_dk4", "adpcm_ima_dk3", "adpcm_ima_dat4", "adpcm_ima_apc", "adpcm_ima_amv", "adpcm_ea_xas", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ea_r1", "adpcm_ea_maxis_xa", "adpcm_ea", "adpcm_dtk", "adpcm_ct", "adpcm_aica", "adpcm_afc", "adpcm_4xm", "0<sb", "(c)CRI", "Support for this ADX format", "adpcm_adx", "extradata is too small\n", "max samples per frame invalid: %u\n", "set_info failed\n", "Sample depth %d", "Invalid channel count\n", "Unsupported channel count: %d\n", "Error allocating buffers\n", "syntax element unsupported: %d\n", "invalid element channel count\n", "bps is unsupported: %d\n", "invalid samples per frame: %u\n", "sample count mismatch: %u != %d\n", "Compression with rice limit 0", "invalid zero block size of %d %d %d\n", "unknown prediction type: %i\n", "Error : %d bits left\n", "Failed to decode all channels\n", "no end tag found. incomplete packet.\n", "extra_bits_bug", "Force non-standard decoding process", "end %td smaller than time diff index %d.\n", "sample pointer range [%p, %p] not contained in raw_buffer [%p, %p].\n", "Invalid channel correlation.\n", "Block length is not evenly divisible by the number of subblocks.\n", "k invalid for rice code.\n", "Predictor order too large.\n", "quant_cof %d is out of range.\n", "Invalid channel pair.\n", "Invalid channel data.\n", "Invalid block length %u in channel data!\n", "Invalid master channel.\n", "Damaged channel data.\n", "Overread %d\n", "Reading frame data failed. Skipping RA unit.\n", "Missing required ALS extradata.\n", "Invalid channel reordering.\n", "Reading ALSSpecificConfig failed.\n", "Floating point decoding", "Adaptive RLS-LMS prediction", "Bits per raw sample %d larger than 32.\n", "Allocating buffer memory failed.\n", "multi-channel AMR", "Corrupt bitstream\n", "dtx mode", "Note: libopencore_amrnb supports dtx\n", "The file is corrupted, pitch_lag = 0 is not allowed\n", "amrnb", "8CRoo", "Invalid mode %d\n", "Frame too small (%d bytes). Truncated file?\n", "Encountered a bad or corrupted frame\n", "SID mode", "amrwb", "Only mono and stereo is supported\n", "%d bits per coded sample", "Compression Level: %d - Flags: %d\n", "Incorrect compression level %d\n", "Too many bits: %d\n", "s->samples >= 0", "libavcodec/apedec.c", "Packet is too small\n", "packet size is not a multiple of 4. extra bytes at the end will be skipped.\n", "Incorrect offset passed\n", "Invalid sample count: %u.\n", "decoded_buffer_size <= 2147483647", "pure silence mono\n", "pure silence stereo\n", "Error decoding frame\n", "Error reading frame header\n", "APE decoder", "max_samples", "maximum number of samples decoded per call", "no maximum. decode all samples for each packet at once", "Error initializing MDCT\n", "Not enough data to decode!\n", "atrac1", "JS mono Sound Unit id != 3.\n", "Sound Unit id != 0x28.\n", "Channel configuration error!\n", "[0-1] %d\n", "[8-9] %d\n", "[12-13] %d\n", "Unknown frame/channel/frame_factor configuration %d/%d/%d\n", "Unknown extradata size %d.\n", "Version %d != 4.\n", "Unknown amount of samples per frame %d.\n", "Unknown amount of delay %x != 0x88E.\n", "Normal stereo detected.\n", "Invalid coding mode\n", "Joint stereo detected.\n", "Unknown channel coding mode %x!\n", "Offset of %d", "Frame decoding error!\n", "atrac3", "%d frames left in the queue on closing\n", "Queue input is backward in time\n", "Trying to remove %d samples, but the queue is empty\n", "!afq->frame_count", "libavcodec/audio_frame_queue.c", "afq->remaining_samples == afq->remaining_delay", "Trying to remove %d more samples than there are in the queue\n", "AVDCT", "DCT algorithm", "autoselect a good one", "fastint", "fast integer (experimental / for debugging)", "accurate integer", "experimental / for debugging", "altivec", "faan", "floating point AAN DCT (experimental / for debugging)", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "floating point AAN IDCT (experimental / for debugging)", "simpleauto", "bits_per_sample", "(unsigned)pkt->size <= 2147483647 - 32", "libavcodec/avpacket.c", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "MPEGTS Stream ID", "Mastering display metadata", "size<=2147483647 - 5 && p - pkt->data >= size", "p-pkt->data == pkt->size", "Incomplete packet\n", "binkaudio_dct", "binkaudio_rdft", "incorrect codes\n", "length <= put_bits_left(pb)", "libavcodec/bitstream.c", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code %x for %d in init_vlc\n", "needed %d had %d\n", "ret >= 0", "private_spspps_buf", "expected %d bytes, got %d\n", "bmv_audio", "Codec '%s' (%d) is not supported by the bitstream filter '%s'. Supported codecs are: ", "%s (%d) ", "A non-NULL packet sent after an EOF.\n", "AVBSFContext", "chomp", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "rv10", "rv20", "mjpegb", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "indeo3", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "8bps", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "tscc", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "loco", "wnv1", "aasc", "indeo2", "fraps", "truemotion2", "cscd", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "indeo4", "indeo5", "mimic", "escape124", "dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "m101", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "bmv_video", "vble", "dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "012v", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "xface", "smvjpeg", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "screenpresso", "wrapped_avframe", "rscc", "alias_pix", "ansi", "brender_pix", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "tdsc", "vc1image", "wmv3image", "apng", "cfhd", "truemotion2rt", "magicyuv", "sheervideo", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_g726", "adpcm_g722", "adpcm_g726le", "adpcm_vima", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "mp3adu", "mp3on4", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "dsicinaudio", "musepack7", "gsm_ms", "voxware", "nellymoser", "musepack8", "speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "sipr", "twinvq", "truehd", "mp4als", "qdmc", "celt", "dss_sp", "g729", "8svx_exp", "8svx_fib", "ralf", "ilbc", "wavesynth", "sonic", "sonicls", "opus", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "dvd_subtitle", "dvb_subtitle", "xsub", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "eia_608", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "application/octet-stream", "application/vnd.ms-opentype", "application/x-truetype-font", "application/x-font", "image/png", "image/x-xwindowdump", "image/webp", "image/tiff", "image/x-targa", "image/x-tga", "image/x-pcx", "image/x-portable-pixmap", "image/gif", "image/jp2", "image/x-ms-bmp", "image/jpeg", "Deallocating memory.\n", "Memory deallocated.\n", "Invalid quantizer %d at position %d, outside [-63, 63] range\n", "Necessary extradata missing!\n", "codecdata_length=%d\n", "js_subband_start %d is too large\n", "subpacket[%i].cookversion=%x\n", "Container channels != 1", "MONO\n", "Container channels != 2", "JOINT_STEREO\n", "MULTI_CHANNEL\n", "Cook version %d", "different number of samples per channel!\n", "total_subbands > 53", "js_vlc_bits = %d, only >= %d and <= 6 allowed!\n", "subbands > 50", "subbands = 0", "Too many subpackets %d for channels %d\n", "subpackets > %d", "sqvh VLC init\n", "subpacket %i Joint-stereo VLC used.\n", "VLC tables initialized.\n", "MDCT initialized, order = %d.\n", "samples_per_channel = %d", "frame subpacket size total > avctx->block_align!\n", "subpacket[%i] size %i js %i %i block_align %i\n", "decouple value too large\n", "subpacket[%i] %i %i\n", "Invalid scale factor index\n", "Invalid joint scale factor index\n", "Failed to decode block code(s)\n", "Subband sample buffer overflow\n", "Invalid XBR bit allocation index\n", "Invalid number of bits for XBR scale factor index\n", "Invalid XBR scale factor index\n", "XBR-DSYNC check failed\n", "Invalid number of primary audio channels (%d) for audio channel arrangement (%d)\n", "Invalid XXCH channel set header checksum\n", "%d XXCH channels", "Invalid XXCH speaker layout mask (%#x)\n", "XXCH speaker layout mask (%#x) overlaps with core (%#x)\n", "Invalid XXCH downmix scale index (%d)\n", "Invalid XXCH downmix channel mapping mask (%#x)\n", "Invalid XXCH downmix coefficient index (%d)\n", "Invalid subband activity count\n", "Invalid joint intensity coding index\n", "Invalid scale factor code book\n", "Invalid bit allocation quantizer select\n", "Read past end of XXCH channel set header\n", "Invalid bit allocation index\n", "Invalid joint scale factor code book\n", "Invalid LFE scale factor index\n", "Invalid XXCH sync word\n", "Invalid XXCH frame header checksum\n", "Invalid number of bits for XXCH speaker mask (%d)\n", "%d XXCH channel sets", "XXCH core speaker activity mask (%#x) disagrees with core (%#x)\n", "Read past end of XXCH frame header\n", "Read past end of XXCH channel set\n", "Invalid X96 channel set header checksum\n", "Invalid X96 subband start index (%d)\n", "Invalid X96 subband activity count (%d)\n", "Invalid X96 joint intensity coding index\n", "Invalid X96 scale factor code book\n", "Read past end of X96 channel set header\n", "Invalid X96 bit allocation index\n", "Invalid X96 joint scale factor code book\n", "X96-DSYNC check failed\n", "Deficit samples are not supported\n", "Unsupported number of PCM sample blocks (%d)\n", "Invalid core frame size (%d bytes)\n", "Unsupported audio channel arrangement (%d)\n", "Invalid core audio sampling frequency\n", "Invalid low frequency effects flag\n", "Invalid source PCM resolution\n", "Invalid auxiliary data sync word\n", "Invalid primary channel set downmix type\n", "Invalid downmix coefficient index\n", "Invalid auxiliary data checksum\n", "X96 sync word not found\n", "XXCH sync word not found\n", "Read past end of core frame\n", "XCH with Cs speaker already present\n", "Read past end of XCH frame\n", "Invalid XBR sync word\n", "Invalid XBR frame header checksum\n", "Invalid number of active XBR subbands (%d)\n", "Read past end of XBR frame header\n", "Read past end of XBR channel set\n", "Invalid X96 sync word\n", "Invalid X96 frame header checksum\n", "Invalid X96 revision (%d)\n", "Read past end of X96 frame header\n", "Read past end of X96 channel set\n", "Read past end of X96 frame\n", "Fixed point mode doesn't support LFF=1\n", "dca_core", "Packet too short for EXSS frame\n", "%d audio presentations", "%d audio assets", "EXSS asset out of bounds\n", "Speaker mask disabled yet there are remapping sets\n", "Invalid speaker layout mask for mixing configuration\n", "Read past end of EXSS asset descriptor\n", "Invalid extension size in EXSS asset descriptor\n", "Read past end of EXSS header\n", "Invalid EXSS header checksum\n", "libavcodec/dca_lbr.c", "Tonal group chunk too short\n", "Invalid tonal frequency diff\n", "Invalid spectral line offset\n", "Invalid scale factor distance\n", "Invalid LBR sync word\n", "LBR decoder not initialized\n", "Invalid LBR sample rate\n", "%d Hz LBR sample rate", "LBR channel mask %#x", "LBR stream version %#x", "LBR multi-channel downmix", "%d Hz LFE interpolation", "LBR band limit %#x", "Invalid LBR band limit for frequency range\n", "Invalid number of channels for LBR stereo downmix\n", "Embedded LBR stereo downmix", "Invalid LBR header type\n", "LBR frame chunk was truncated\n", "Invalid LBR checksum\n", "Invalid LBR frame chunk ID\n", "LBR chunk %#x was truncated\n", "Invalid LFE step size index\n", "LFE chunk too short\n", "Tonal scale factor chunk too short\n", "First grid chunk too short\n", "libavcodec/dca_parser.c", "Invalid XLL sync word\n", "XLL stream version %d", "Invalid XLL common header checksum\n", "Invalid XLL frame size (%d bytes)\n", "%d XLL channel sets", "Too many segments per XLL frame\n", "Too few samples per XLL segment\n", "Too many samples per XLL segment\n", "Too many samples per XLL frame\n", "Invalid XLL sub-header checksum\n", "%d XLL channels", "%d-bit XLL storage resolution", "Invalid PCM bit resolution for XLL channel set (%d > %d)\n", "%d Hz XLL sampling frequency", "XLL sampling frequency modifier", "XLL replacement set", "The first (and only) XLL channel set must be primary\n", "Invalid XLL primary channel set downmix type\n", "XLL channel set outside of hierarchy", "Invalid XLL downmix scale index\n", "Invalid XLL downmix coefficient index\n", "Disabled XLL channel mask", "Invalid XLL channel mask\n", "Custom XLL channel to speaker mapping", "Extra XLL frequency bands", "Different XLL audio characteristics", "Invalid XLL original channel order\n", "Invalid XLL adaptive predicition order\n", "Invalid XLL reflection coefficient index\n", "Invalid LSB section size\n", "LSB section missing with non-zero LSB width\n", "Too many NAVI entries (%d)\n", "Invalid NAVI segment size (%d bytes)\n", "Invalid NAVI checksum\n", "Invalid NAVI position\n", "Invalid isolated sample location\n", "Read past end of XLL common header\n", "Read past end of XLL sub-header\n", "Read past end of XLL band data\n", "Read past end of XLL frame\n", "Residual encoded channels are present without core\n", "Sample rate mismatch between core (%d Hz) and XLL (%d Hz)\n", "Number of samples per frame mismatch between core (%d) and XLL (%d)\n", "Residual encoded channel (%d) references unavailable core channel\n", "Invalid core shift (%d bits)\n", "Not a valid DCA frame\n", "Forcing XLL recovery mode\n", "No valid DCA sub-stream found\n", "Consider disabling 'core_only' option\n", "Invalid request_channel_layout\n", "((ch_mask & (DCA_SPEAKER_MASK_L | DCA_SPEAKER_MASK_R)) == (DCA_SPEAKER_MASK_L | DCA_SPEAKER_MASK_R))", "libavcodec/dcadec.c", "DCA decoder", "core_only", "Decode core only without extensions", "Stream is old and may not work\n", "Stream may have unhandled features\n", "Unknown chroma format %d\n", "Dimensions must be an integer multiple of the chroma subsampling\n", "Unsupported picture coding mode %d", "\n>\u000b\f\r", " \"&*(&$##&*++*(&'++*)++*,.--./.,,-...22//11113531598424885556::", " !\"$%%$\"!\"#%&()('&%\"!\"%(,0451/-*&$$&)+,.14661,,,/33430245522666", " \"#$$$%$%'()((())*))+,,-.07<942114457:>AIRRPNIDGRZZXWZ_dkga_]cc", " #$$#$')+-,)'(*++-00022233334563134489766787:::<=>>;9::=;;;=>>>", "  \"\"\"\"###$%$$#$&&&&&&&&&&'),+)(((('()('(+..,,,*)+.027:5027:=>>>", " #$$#$')+-,)'(*++-01342233334563134489766787:::<=>>;9::=;;;<>??", "  !\"###\"\"#$$$$$%&&&&&''&&')++*)(('())''(*/2/-..,-./16:60169<>??", " $%$%'')++*)))*+++,,,./.----.,,-,*)+.-,---...-,-,-//010.-.//0//", "  !!#######\"#&('%%%$#$&()*,-,*)(&$$%&(+,------)')-//000.,-//0//", " %*---,&%(*,13/)(+,.0363//-/231./1/277301334466114566557;?><<<<", " !!\"#$#!!#$%%&%%%$%%%&'%$%(*-.,)*,-/120.0124421/022332113431///", " $&%%()((**))))*+,,-..-,----./.-,*)+--/000.//./.--/01210.010111", " !\"\"#$%$%&&&''((&&'&%'))*+--./.-+'%%(,--...//.,*+-/01210./00111", " ###\"\"#'+--)'()*,07;?A;5447=>::?BBAFJFBADKMJJMLIIIILPYZRMPVTRRR", "  !\"!!!!!!!!#%%$$#$&&$#$%&)*)'&&&')*)''()+,,,,,-///12333579:;99", " $''&')-39:50/37:BKQSRNIHJMSUSRYc`Z^acimi_Y\\_^]\\XYZ]_`aadhfbbcc", " !\"\"$%$$%&&&'),+)().1/./136<>;768:=AB@?BINOPONNRWYZ]_`aadhfbbcc", " !\"\"!\"#%(+*'&')+,/27=?80.16;:7:?ACJTRKHFJTWW^]QKNSY[VRUZZUOIIII", "yuv422p10", "yuv422p", "Frame size: %dx%d%c; bitrate: %dMbps; pixel format: %s; framerate: %d/%d\n", "@invalid number of channels\n", "Unknown SOL subcodec\n", "packet is too small\n", "channels have differing number of samples\n", "Expected %d bytes, got %d - skipping packet.\n", "combined_pitch was too large\n", "Not Same Segmentation", "Not Same Segmentation For All Channels", "Not End Of Channel Segmentation", "Not Same Mapping", "dump_extra", "dump_extradata bsf", "When do dump extradata", "PPPPPP@@ppppPP", "Frame size: %dx%d; pixel format: %s, framerate: %d/%d\n", "SL25", "dvsd", "CDVC", "Junk in packet\n", "Parser input %d too small\n", "s->quarter_sample", "libavcodec/error_resilience.c", "guess_dc() is out of memory\n", "internal error, slice end before start\n", "ignoring last missing slice\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "?&SU?", "Buffer is too small for the claimed bitrate.\n", "Bitrate byte is missing, guessing the bitrate from packet size.\n", "Frame #%d, %s\n", "bitrate cannot be determined.", "frame erasure\n", "enable postfilter", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "0x%04X", "Invalid TIFF tag type 0 found for %s with size %d\n", "TIFF tag type (%u)", "invalid sync code\n", "invalid channel mode: %d\n", "invalid sample size code (%d)\n", "broken stream, invalid padding\n", "sample/frame number invalid; utf8 fscked\n", "reserved blocksize code: 0\n", "illegal sample rate code %d\n", "header crc mismatch\n", "extradata NULL or too small.\n", "extradata contains %d bytes too many.\n", "extradata too small.\n", "invalid max blocksize: %d\n", "couldn't reallocate wrap buffer of size %d", "couldn't allocate fifo_buf\n", "sample rate change detected in adjacent frames\n", "bits per sample change detected in adjacent frames\n", "blocking strategy change detected in adjacent frames\n", "number of channels change detected in adjacent frames\n", "sample/frame number mismatch in adjacent frames\n", "crc check failed from offset %i (frame %ld) to %i (frame %ld)\n", "couldn't allocate FLACHeaderMarker\n", "couldn't allocate link_penalty\n", "dropping low score %i frame header from offset %i to %i\n", "couldn't reallocate buffer of size %td\n", "find_new_headers couldn't allocate FLAC header\n", "Junk frame till offset %i\n", "s->flac_stream_info.max_blocksize", "libavcodec/flacdec.c", "illegal residual coding method %d\n", "invalid rice order: %i blocksize %i\n", "invalid predictor order: %i > %i\n", "skipping flac header packet 1\n", "skipping vorbis comment\n", "invalid frame header\n", "bps not found in STREAMINFO or frame header\n", "switching bps mid-stream is not supported\n", "blocksize %d > %d\n", "sample rate not found in STREAMINFO or frame header\n", "  Max Blocksize: %d\n", "  Max Framesize: %d\n", "  Samplerate: %d\n", "  Channels: %d\n", "  Bits: %d\n", "invalid subframe padding\n", "Invalid number of wasted bits > available bits (%d) - left=%d\n", "Decorrelated bit depth > 32", "illegal pred order %d\n", "invalid coeff precision\n", "qlevel %d not supported, maybe buggy stream\n", "invalid coding type\n", "decode_frame() failed\n", "CRC error at PTS %ld\n", "overread: %d\n", "underread: %d orig size: %d\n", "FLAC decoder", "use_buggy_lpc", "emulate old buggy lavc behavior", "000$\f", "Forcing thread count to 1 for MJPEG encoding, use -thread_type slice or a constant quantizer if you want to use multiple cpu cores\n", "MJPEG CBR encoding works badly with frame multi-threading, consider using -threads 1, -thread_type slice or a constant quantizer.\n", "context", "non_deterministic", "!avctx->internal->frame_thread_encoder", "libavcodec/frame_thread_encoder.c", "!thread_avctx->internal->frame_thread_encoder", "ff_frame_thread_encoder_init failed\n", "Forcing thread count to 1 for huffyuv encoding with first pass or context 1\n", "bits_per_codeword", "Bits per G722 codeword", "G.723.1 decoder", "Invalid number of bits %d\n", "Frame invalidly split, missing parser?\n", "Only mono sound is supported (requested channels: %d).\n", "Packet type: %s\n", "G.729 @ 8kbit/s", "G.729D @ 6.4kbit/s", "Packet size %d is unknown.\n", "pitch_delay_int %d is too large\n", "Invalid block alignment %d\n", "Missing GSM magic!\n", "\u000b\r\r\r", "L263", "S263", "Slice mismatch at MB: %d\n", "Error at MB: %d\n", "discarding %d junk bits at end, next would be %X\n", "overreading %d bits\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "this codec does not support truncated bitstreams\n", "Discarding excessive bitstream in packed xvid\n", "Reverting picture dimensions change due to header decoding failure\n", "header damaged\n", "format change not supported\n", "GEOV", "GEOX", "libavcodec/h2645_parse.c", "TRAIL_N", "TRAIL_R", "STSA_N", "STSA_R", "RADL_N", "RADL_R", "RASL_N", "RASL_R", "BLA_W_LP", "BLA_W_RADL", "BLA_N_LP", "IDR_W_RADL", "IDR_N_LP", "CRA_NUT", "EOS_NUT", "EOB_NUT", "FD_NUT", "SEI_PREFIX", "SEI_SUFFIX", "Invalid nal size %d\n", "Exceeded next NALFF position, re-syncing.\n", "No start code is found.\n", "NALFF: Consumed only %d bytes instead of %d\n", "nal_unit_type: %d(%s), nuh_layer_id: %d, temporal_id: %d\n", "nal_unit_type: %d, nal_ref_idc: %d\n", "Invalid NAL unit %d, skipping.\n", "SPS not present in the stream, nor in AVCC, stream may be unreadable\n", "PPS not present in the stream, nor in AVCC, stream may be unreadable\n", "The input looks like it is Annex B already\n", "Too big extradata size, corrupted stream or invalid MP4/AVCC bitstream\n", "Packet header is not contained in global extradata, corrupted stream or invalid MP4/AVCC bitstream\n", "Warning: SPS NALU missing or invalid. The resulting stream may not play.\n", "Warning: PPS NALU missing or invalid. The resulting stream may not play.\n", "Invalid extradata size: %d\n", "h264_mp4toannexb", "Ignoring NAL type %d in extradata\n", "Invalid UE golomb code\n", "SPS decoding failure, trying again after escaping the NAL\n", "luma_log2_weight_denom %d is out of range\n", "chroma_log2_weight_denom %d is out of range\n", "top block unavailable for requested intra mode %d\n", "left block unavailable for requested intra4x4 mode %d\n", "out of range intra chroma pred mode\n", "top block unavailable for requested intra mode\n", "left block unavailable for requested intra mode\n", "reference overflow %u > %u or %u > %u\n", "avcC %d too short\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "AVC-parser: nal length size invalid\n", "AVC-parser: nal size %d remaining %d\n", "illegal reordering_of_pic_nums_idc %d\n", "reference count %d overflow\n", "illegal memory management control operation %d\n", "Q264", "pps_id %u out of range\n", "non-existing PPS %u referenced\n", "non-existing SPS %u referenced\n", "missing picture in access unit with size %d\n", "Gray", "cpb_count %d invalid\n", "PIC-AFF", "MB-AFF", "Truncating likely oversized SPS\n", "sps_id %u out of range\n", "chroma_format_idc %u", "separate color planes are not supported\n", "Different chroma and luma bit depth", "illegal bit depth value (%d, %d)\n", "log2_max_frame_num_minus4 out of range (0-12): %d\n", "log2_max_poc_lsb (%d) is out of range\n", "poc_cycle_length overflow %d\n", "illegal POC type %d\n", "too many reference frames %d\n", "mb_width/height overflow\n", "discarding sps cropping, original values are l:%d r:%d t:%d b:%d\n", "Reducing left cropping to %d chroma samples to preserve alignment.\n", "crop values invalid %d %d %d %d / %d %d\n", "illegal aspect ratio\n", "Truncated VUI\n", "time_scale/num_units_in_tick invalid or unsupported (%u/%u)\n", "Clipping illegal num_reorder_frames %d\n", "Overread %s by %d bits\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %d/%d b%d reo:%d\n", "CABAC", "CAVLC", "LPAR", "CONSTR", "REDU", "8x8DCT", "Truncating likely oversized PPS\n", "Invalid luma bit depth=%d\n", "Unimplemented luma bit depth=%d\n", "FMO not supported\n", "reference overflow (pps)\n", "Current profile doesn't provide more RBSP data in PPS, skipping\n", "pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s\n", "SEI type %d size %d truncated at %d\n", "SPS unavailable in decode_picture_timing\n", "ct_type:%X pic_struct:%d\n", "x264 - core %d", "x264 - core 0000", "user data:\"%s\"\n", "non-existing SPS %d referenced in buffering period\n", "unknown SEI type %d\n", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "libavcodec/h264dsp.c", "Invalid NAL unit type in extradata: %d\n", "No parameter sets in the extradata\n", "hevc_mp4toannexb", "Invalid NAL unit: %d\n", "PPS id out of range: %d\n", "Main profile bitstream\n", "Main 10 profile bitstream\n", "Main Still Picture profile bitstream\n", "Range Extension profile bitstream\n", "Unknown HEVC profile: %d\n", "PTL information too short\n", "PTL information for sublayer %i too short\n", "Not enough data for sublayer %i level_idc\n", "Invalid delta in scaling list data: %d.\n", "!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)", "libavcodec/hevc_ps.c", "nb_cpb %d invalid\n", "Invalid value of delta_idx in slice header RPS: %d > %d.\n", "Invalid value of abs_delta_rps: %d\n", "Invalid num_delta_pocs: %d\n", "Too many refs in a short term RPS.\n", "Invalid value of delta_poc: %d\n", "Decoding VPS\n", "VPS id out of range: %d\n", "vps_reserved_three_2bits is not three\n", "vps_reserved_ffff_16bits is not 0xffff\n", "vps_max_sub_layers out of range: %d\n", "vps_max_dec_pic_buffering_minus1 out of range: %d\n", "vps_max_num_reorder_pics out of range: %d\n", "too many layer_id_included_flags\n", "vps_num_hrd_parameters %d is invalid\n", "Overread VPS by %d bits\n", "VPS %d does not exist\n", "sps_max_sub_layers out of range: %d\n", "SPS id out of range: %d\n", "chroma_format_idc %d is invalid\n", "discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\n", "Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\n", "4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n", "chroma_format_idc is %d, depth is %d", "log2_max_pic_order_cnt_lsb_minus4 out range: %d\n", "sps_max_dec_pic_buffering_minus1 out of range: %d\n", "sps_max_num_reorder_pics out of range: %d\n", "Invalid value %d for log2_min_cb_size", "Invalid value %d for log2_diff_max_min_coding_block_size", "Invalid value for log2_min_tb_size", "Invalid value %d for log2_diff_max_min_transform_block_size", "PCM bit depth (%d, %d) is greater than normal bit depth (%d)\n", "Too many short term RPS: %d.\n", "num_long_term_ref_pics_sps %d is out of range.\n", "Decoding VUI\n", "Unknown SAR index: %u.\n", "Invalid default display window\n", "discarding vui default display window, original values are l:%u r:%u t:%u b:%u\n", "Strange VUI timing information, retrying...\n", "Retry got %i/%i fps\n", "extended_precision_processing_flag not yet implemented\n", "high_precision_offsets_enabled_flag not yet implemented\n", "cabac_bypass_alignment_enabled_flag not yet implemented\n", "Reducing left output window to %d chroma samples to preserve alignment.\n", "Invalid visible frame dimensions: %dx%d.\n", "Displaying the whole video surface.\n", "CTB size out of range: 2^%d\n", "log2_ctb_size %d differs from the bounds of any known profile\n", "log2_ctb_size %d", "Invalid coded frame dimensions.\n", "max_transform_hierarchy_depth_inter out of range: %d\n", "max_transform_hierarchy_depth_intra out of range: %d\n", "max transform block size out of range: %d\n", "Overread SPS by %d bits\n", "Decoding SPS\n", "Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\n", "Decoding PPS\n", "SPS %u does not exist.\n", "diff_cu_qp_delta_depth %d is invalid\n", "pps_cb_qp_offset out of range: %d\n", "pps_cr_qp_offset out of range: %d\n", "num_tile_columns_minus1 out of range: %d\n", "num_tile_rows_minus1 out of range: %d\n", "Invalid tile widths.\n", "Invalid tile heights.\n", "pps_beta_offset_div2 out of range: %d\n", "pps_tc_offset_div2 out of range: %d\n", "log2_parallel_merge_level_minus2 out of range: %d\n", "chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n", "cb_qp_offset_list not tested yet.\n", "Overread PPS by %d bits\n", "Internal error, IDCT permutation not set\n", "Butterworth filter currently only supports low-pass filter mode\n", "Butterworth filter currently only supports even filter orders\n", "Biquad filter currently only supports high-pass and low-pass filter modes\n", "Biquad filter must have order of 2\n", "filter type is not currently implemented\n", "Number of channels > 2", "FFT init failed\n", "frame too small!\n", "frame header check failed!\n", "got %X.\n", "scalefactor out of range\n", "flcoeffs5 %f invalid\n", "Bit allocations failed\n", "Potential problem on band %i, coefficient %i: cw_len=%i\n", "Inverse quantization of coefficients failed\n", "libavcodec/imgconvert.c", "imxdump", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d i:%d\n", "Marker bit missing at %d of %d %s\n", " UMV", " LONG", " AIC", " AIV", " LOOP", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", "before MBA", "after SQUANT", "after MBA", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "Header looks like RTP instead of H.263\n", "Bad picture start code\n", "in PTYPE", "Bad H.263 id\n", "H.263 SAC not supported\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "Bad UFEP type (%d)\n", "in dimensions", "zero framerate\n", "rectangular slices not supported\n", "unordered slices not supported\n", "SEPB1", "SEPB2", " %5d", "ZYGO", "n <= 1024", "libavcodec/kbdwin.c", "lpc_type == FF_LPC_TYPE_CHOLESKY || lpc_type == FF_LPC_TYPE_LEVINSON", "libavcodec/lpc.c", "internal error in cmp function selection\n", "VX04\f", "VOXj\n", "VOXq ", "VOXr(", "VOXs0", "VOXv ", "VOXw0", "VOXx@", "VOXyP", "VOXz`", "Could not find tag %08X\n", "Unsupported number of channels: %i\n", "This version does not support %d kHz - %d kbit/s/ch mode.\n", "Invalid window type, broken sample?\n", "input is truncated\n", "input is not MJPEG\n", "mjpeg2jpeg", "mjpg", "bitstream already formatted\n", "could not find SOS marker in bitstream\n", "mjpegadump", "packet too short, unable to read major sync\n", "major sync info header checksum error\n", "ff_combine_frame failed\n", "mlpparse: Parity check failed.\n", "libavcodec/mlpdec.c", "Filters may change only once per access unit.\n", "%cIR filter order %d is greater than maximum %d.\n", "%cIR filter coeff_bits must be between 1 and 16.\n", "Sum of coeff_bits and coeff_shift for %cIR filter must be 16 or less.\n", "FIR filter has state data specified.\n", "invalid/unknown bits per sample\n", "Channel group 2 cannot have more bits per sample than group 1.\n", "Channel groups with differing sample rates are not currently supported.\n", "invalid/unknown sampling rate\n", "Sampling rate %d is greater than the supported maximum (%d).\n", "Block size %d is greater than the supported maximum (%d).\n", "Block size pow2 %d is greater than the supported maximum (%d).\n", "MLP only supports up to 2 substreams.\n", "%d substreams (more than the maximum supported by the decoder)", "unexpected stream_type %X in MLP", "unexpected stream_type %X in !MLP", "Mono stream with 2 substreams, ignoring 2nd\n", "Stream parameters not seen; skipping frame.\n", "There must be no extraword for MLP.\n", "Insuffient data for headers\n", "Invalid nonrestart_substr.\n", "Indicated length of substream %d data goes off end of packet.\n", "Indicated end offset of substream %d data is smaller than calculated start offset.\n", "restart header sync incorrect (got 0x%04x)\n", "MLP must have 0x31ea sync word.\n", "Max matrix channel cannot be greater than %d.\n", "Max channel must be equal max matrix channel.\n", "%d channels (more than the maximum supported by the decoder)", "Substream min channel cannot be greater than max channel.\n", "Extracting %d-channel downmix (0x%lx) from substream %d. Further substreams will be skipped.\n", "Lossless check failed - expected %02x, calculated %02x.\n", "Assignment of matrix channel %d to invalid output channel %d", "restart header checksum error\n", "Invalid blocksize.\n", "Matrices may change only once per access unit.\n", "Number of primitive matrices cannot be greater than %d.\n", "Invalid channel %d specified as output from matrix.\n", "Too many fractional bits specified.\n", "Total filter orders too high.\n", "FIR and IIR filters must use the same precision.\n", "Invalid huff_lsbs.\n", "Substreams with VLC block size check info", "too many audio samples in frame\n", "block data length mismatch\n", "End of stream indicated.\n", "Substream %d parity check failed.\n", "Substream %d checksum failed.\n", "No restart header present in substream %d.\n", "channel count mismatch\n", "No samples to output.\n", "substream %d length mismatch\n", "mov2textsub", "text2movsub", "FFCMP3 0.0", "Extradata invalid %d\n", "Could not find bitrate_index.\n", "mp3decomp", "subband index invalid\n", "Error decoding frame: used %i of %i bits\n", "Too small extradata size (%i)!\n", "Too many bands: %i\n", "IS: %d, MSS: %d, TG: %d, LFL: %d, bands: %d\n", "Initing VLC\n", "Cannot init SCFI VLC\n", "Cannot init DSCF VLC\n", "Cannot init HDR VLC\n", "Cannot init QUANT VLC %i,%i\n", "mpc7", "maxbands %d too high\n", "Multichannel MPC SV8", "mpc8", "static_size <= (sizeof(table) / sizeof((table)[0]))", "libavcodec/mpeg12.c", "invalid dc code at\n", "Updating DivX userdata (remove trailing 'p') in extradata.\n", "Found %d VOP startcode(s) in this packet.\n", "Missing one N-VOP packet, discarding one B-frame.\n", "Found %d VOP headers in one packet, only unpacking one.\n", "Skipping N-VOP.\n", "Updating DivX userdata (remove trailing 'p').\n", "mpeg4_unpack_bframes", "Failed to parse extradata\n", "DivX%dBuild%d%c", "DivX%db%d%c", "FFmpe%*[^b]b%d", "FFmpeg v%d.%d.%d / libavcodec build: %d", "Lavc%d.%d.%d", "ffmpeg", "XviD%d", "after new_pred", "before sprite_trajectory", "after sprite_trajectory", "Too large sprite shift, delta or offset", "Overflow on sprite points", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "illegal dc vlc\n", "dc marker bit missing\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "reverse esc missing\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "ac-tex damaged at %d %d\n", "mcbpc damaged at %d %d\n", "P cbpy damaged at %d %d\n", "illegal MB_type\n", "texture corrupted at %d %d %d\n", "marker does not match f_code\n", "illegal mb_num in video packet (%d %d) \n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "untested\n", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "mcbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "slice below monitor ...\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "XVID", "XVIX", "RMP4", "ZMP4", "SIPP", "DIVX", "UMP4", "scalability ", "qpel ", "partition ", "rvlc ", " VOLC", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "Reserved", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "System start", "Multiple VOL headers", "illegal chroma format\n", "after first_half_bitrate", "after latter_half_bitrate", "after first_half_vbv_buffer_size", "after first_half_vbv_occupancy", "after latter_half_vbv_occupancy", "only rectangular vol supported\n", "Gray shape not supported\n", "before time_increment_resolution", "framerate==0\n", "before fixed_vop_rate", "before width", "before height", "after height", "MPEG-4 OBMC not supported (very likely buggy encoder)\n", "Static Sprites not supported\n", "after sprite_width", "after sprite_height", "after sprite_left", "after sprite_top", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "insufficient data for custom matrix\n", "VOL Header truncated\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "new pred not supported\n", "reduced resolution VOP not supported\n", "scalability not supported\n", "tb %d/%d, tincrbits:%d, qp_prec:%d, ps:%d, low_delay:%d  %s%s%s%s\n", "GOP header invalid\n", "in gop_header", "low_delay flag set incorrectly, clearing it\n", "before time_increment", "time_increment_bits %d is invalid in relation to the current bitstream, this is likely caused by a missing VOL header\n", "time_increment_bits set to %d bits, based on bitstream analysis\n", "before vop_coded", "vop not coded\n", "after width", "after hor_spat_ref", "sprite_brightness_change not supported\n", "static sprite not supported\n", "Error, header damaged or not MPEG-4 header (qscale=0)\n", "Error, header damaged or not MPEG-4 header (f_code=0)\n", "Error, header damaged or not MPEG4 header (b_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d time:%ld tincr:%d\n", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "WV1F", "QMP4", "MP4S", "Video uses a non-standard and wasteful way to store B-frames ('packed B-frames'). Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n", "MPEG4 Video Decoder", "1/4 subpel MC", "divx_packed", "divx style packed b frames", "Interlaced error concealment is not fully implemented\n", "MP3ADU full parser", "offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))", "libavcodec/mpegaudiodec_template.c", "Codec extradata missing or too short.\n", "Invalid channel config number.\n", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "overread, skip %d enddists: %d %d\n", "bits_left=%d\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "discarding ID3 tag\n", "Header missing\n", "incorrect frame size - multiple frames in buffer?\n", "Error while decoding MPEG audio frame.\n", "Invalid frame header\n", "Frame size smaller than header size\n", "Bad header, discard block\n", "frame channel count exceeds codec channel count\n", "failed to decode channel %d\n", "failed to decode all channels\n", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "Image too small, temporary buffers cannot function\n", "pic->f->data[0]", "libavcodec/mpegpicture.c", "!pic->f->buf[0]", "get_buffer() failed (%d %p)\n", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (stride changed)\n", "get_buffer() failed (uv stride mismatch)\n", "get_buffer() failed to allocate context scratch buffers.\n", "Error allocating a picture.\n", "!dst->f->buf[0]", "src->f->buf[0]", "Internal error, picture buffer overflow\n", "decoding to AV_PIX_FMT_NONE is not supported.\n", "too many threads/slices (%d), reducing to %d\n", "s != s1", "libavcodec/mpegvideo.c", "!s->picture || s->picture != s1->picture", "Failed to allocate context scratch buffers.\n", "Context scratch buffers could not be allocated due to unknown size.\n", "Attempt to start a frame outside SETUP state\n", "no frame buffer available\n", "allocating dummy last picture for B frame\n", "warning: first frame is no keyframe\n", "allocate dummy last picture for field based first keyframe\n", "s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f->buf[0])", "Adding %d MVs info to frame %d\n", "New frame, type: %c\n", "ref->size >= offset + s->mb_stride * ((f->height+15)/16)", "DCT coeffs of MB at %dx%d:\n", "Failed to set dimensions\n", "Decoding more than 2 channels", "0x500 version should be mono\n", "Stereo mode support is not good, patch is welcome\n", "Cannot init VLC\n", "enh bit set\n", "stereo mode window for mono audio\n", "Invalid band type run\n", "Invalid scale value %d\n", "Invalid subframe size %d\n", "No subframes present\n", "on2avc", "NULL", "libavcodec/options.c", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "AVSubtitleRect", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVCodecContext", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "use 1/4-pel motion compensation", "use loop filter", "use fixed qscale", "use gmc", "always try a mb with mv=<0,0>", "input_preserved", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "only decode/encode grayscale", "emu_edge", "do not draw edges", "psnr", "error[?] variables will be set during encoding", "Input bitstream might be randomly truncated", "normalize adaptive quantization", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "allow non-spec-compliant speedup tricks", "flags2", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "export_mvs", "export motion vectors through frame side data", "skip_manual", "do not skip samples and export skip information as frame side data", "ass_ro_flush_noop", "do not reset ASS ReadOrder field on flush", "me_method", "set motion estimation method", "zero motion estimation (fastest)", "full motion estimation (slowest)", "epzs", "EPZS motion estimation", "esa motion estimation (alias for full)", "tesa", "tesa motion estimation", "diamond motion estimation (alias for EPZS)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter motion estimation", "time_base", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "set cutoff bandwidth", "frame_size", "frame_number", "qcomp", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "qblur", "video quantizer scale blur (VBR)", "qmin", "minimum video quantizer scale (VBR)", "qmax", "maximum video quantizer scale (VBR)", "qdiff", "maximum difference between the quantizer scales (VBR)", "set maximum number of B-frames between non-B-frames", "b_qfactor", "QP factor between P- and B-frames", "rc_strategy", "ratecontrol method", "b_strategy", "strategy to choose between I/P/B-frames", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "skip_count", "misc_bits", "frame_bits", "work around not autodetected encoder bugs", "old_msmpeg4", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal VLC bug (autodetected per FOURCC)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "set error detection flags", "crccheck", "verify embedded CRCs", "detect bitstream specification deviations", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "mpeg_quant", "use MPEG quantizers instead of H.263", "qsquish", "deprecated, use encoder private options instead", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minrate", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "set ratecontrol buffer size (in bits)", "rc_buf_aggressivity", "i_qfactor", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "rc_init_cplx", "fast integer", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "deblock", "use strong deblock filter for damaged MBs", "favor_inter", "favor predicting from the previous frame", "bits_per_coded_sample", "prediction method", "median", "print specific debug info", "pict", "picture info", "rate control", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "green_metadata", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "vismv", "visualize motion vectors (MVs) (deprecated)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "dctmax", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "subq", "sub-pel motion estimation quality", "dtg_active_format", "me_range", "limit motion vectors range (1023 for DivX player)", "ibias", "intra quant bias", "pbias", "inter quant bias", "global_quality", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp", "use fewest bits", "use best rate distortion", "stream_codec_tag", "sc_threshold", "noise reduction", "rc_init_occupancy", "number of bits which should be loaded into the rc buffer before decoding starts", "set the number of threads", "autodetect a suitable number of threads to use", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "aac_main", "aac_ssr", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "lowres", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "border_mask", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "discard no frame", "default", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "nointra", "discard all frames except I frames", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscale frames for dynamic B-frame decision", "keyint_min", "minimum interval between IDR-frames", "reference frames to consider for motion compensation", "chromaoffset", "chroma QP offset from luma", "trellis", "rate-distortion optimal quantization", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "b_sensitivity", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "color_primaries", "color_primaries_type", "bt709", "BT.709", "unspecified", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "Film", "bt2020", "BT.2020", "smpte428_1", "SMPTE ST 428-1", "color_trc", "color transfer characteristics", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "Log square root", "iec61966_2_4", "IEC 61966-2-4", "bt1361", "BT.1361", "iec61966_2_1", "IEC 61966-2-1", "bt2020_10bit", "BT.2020 - 10 bit", "bt2020_12bit", "BT.2020 - 12 bit", "smpte2084", "SMPTE ST 2084", "color space", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "BT.2020 NCL", "bt2020_cl", "BT.2020 CL", "color_range", "color_range_type", "MPEG (219*2^(n-8))", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "Bottom", "log_level_offset", "set the log level offset", "set the number of slices, used in parallelized encoding", "thread_type", "select multithreading type", "slice", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "sub_text_format", "set decoded text subtitle format", "ass_with_timings", "refcounted_frames", "side_data_only_packets", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "dump_separator", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "pixel_format", "set pixel format", "video_size", "set video size", "Multichannel configuration without extradata.\n", "Extradata version %d", "Zero channel count specified in the extadata\n", "Channel mapping 0 is only specified for up to 2 channels\n", "Invalid stream/stereo stream count: %d/%d\n", "Channel mapping 1 is only specified for up to 8 channels\n", "Mapping type %d", "Invalid channel map for output channel %d: %d\n", "Invalid start/end band: %d %d\n", "Invalid CELT frame size: %d\n", "Invalid number of output channels: %d\n", "Error parsing Ogg extradata.\n", "Error parsing Opus packet header.\n", "Invalid parameters passed to the SILK decoder.\n", "LBRR frames present; this is unsupported\n", "Error decoding the redundancy frame.\n", "in_sample_fmt", "out_sample_fmt", "in_channel_layout", "out_channel_layout", "out_sample_rate", "Error parsing the packet header.\n", "Mismatching coded sample count in substream %d.\n", "Wrong number of flushed samples: %d\n", "Wrong number of CELT delay samples.\n", "Error opening the resampler.\n", "Error feeding initial silence to the resampler.\n", "Error decoding a SILK frame.\n", "Error resampling SILK data.\n", "Invalid redundancy frame size.\n", "Spurious CELT delay samples present.\n", "Error decoding an Opus frame.\n", "Error flushing the resampler.\n", "index > -0x20000000", "libavcodec/parser.c", "Failed to reallocate parser buffer to %d\n", "PCM packet too small\n", "unsupported sample depth (%d)\n", "reserved sample rate (%d)\n", "reserved channel configuration (%d)\n", "pcm_dvd_parse_header: header = %02x%02x%02x\n", "PCM DVD unsupported sample depth %i\n", "block_size has changed %d != %d\n", "codec ids mismatch\n", "Invalid PCM packet, data has size %d but at least a size of %d was expected\n", "PCM channels out of bounds\n", "HEIGHT", "DEPTH", "MAXVAL", "TUPLTYPE", "TUPLETYPE", "ENDHDR", "Invalid maxval: %d\n", "Unsupported pixel format\n", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "libavcodec/pthread_frame.c", "%p finished %d field %d\n", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "Final thread update failed\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "thread_get_buffer() failed\n", "thread_release_buffer called on pic %p\n", "p->thread_count == avctx->thread_count", "libavcodec/pthread_slice.c", "Frame #%d, IFQ: %s\n", "Bitrate byte missing, guessing bitrate from packet size.\n", "Blank frame handling", "Bitrate cannot be determined.", "Bitrate is 1/8 and first 16 bits are on.", "Wrong data in reserved frame area.", "Cannot initialize pitch filter.", "Badly received packets in frame.", "Codebook gain sanity check failed.", "?333?", "Subpacket: type=%d size=%d start_offs=%x\n", "extradata missing or truncated\n", "frmaQDM", "not enough extradata (%i)\n", "QDMC version 1", "extradata size too small, %i < %i\n", "invalid extradata, expecting QDCA\n", "data block size too large (%u)\n", "Unknown FFT order %d", "FFT size %d not power of 2.\n", "value %d in qdm2_get_vlc too large\n", "This file triggers some untested code. Please contact the developers.\n", "Invalid 8bit codeword\n", "Invalid 7bit codeword\n", "index %d out of type30_dequant array\n", "index %d out of type34_delta array\n", "coding method invalid\n", "!superblocktype_2_3", "overread in qdm2_fft_decode_tones()\n", "Superblock follows\n", "bad superblock type\n", "bad packet checksum\n", "This file triggers some missing code. Please contact the developers.\nPosition: %s\n", "too many packet bytes", "packet type 8", "packet type 15", "has errors, and C list is not empty", "WwvfeUDDDDDD3DCDDEVfwP", "HwvfeUUDDC3334EUUfgwx`", "WgfveUDTDCC4CDDDEEUgw`", "WxwffUUDDC3#3DEUVffwx`", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "Extradata is not groovy, dude\n", "Unknown version %X", "Invalid coding parameters %d Hz %d ch\n", "invalid frame size %d\n", "Wrong packet's breath smells of wrong data!\n", "Wrong packet tails are wrong!\n", "too short packets are too short!\n", "short packets are short!\n", "I'm pedaling backwards\n", "Decoder's stomach is crying, it ate too many samples\n", "Sir, I got carsick in your office. Not decoding the rest of packet.\n", "I420", "IYUV", "yv12", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUYVw", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "\fRGBt", "RBA@v", "BRA@s", "@RBAu", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\tE", "\t\u000b3YP", "Y3\n\tO", "\t\n3YL", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "I422!", "I444\f", "J420\r", "J422\"", "J444Z", "YUVA#", "I40AY", "RGB2.", "RV15,", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "I4AB:", "I4FL;", "I4FB,", "remove_extra", "remove_extradata", "audioresample", "Resampling with input channels greater than %d is unsupported.\n", "Unsupported audio resampling. Allowed output channels for %d input channel%s", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Could not allocate buffer\n", "Audio sample format conversion failed\n", "ReSampleContext", "libavcodec/rl.c", "frame is too short\n", "frame has invalid header\n", "S302 non PCM mode with data type %d not supported\n", "SMPTE 302M Decoder", "non_pcm_mode", "Chooses what to do with NON-PCM", "Pass NON-PCM through unchanged", "Drop NON-PCM", "decode_copy", "Decode if possible else passthrough", "decode_drop", "Decode if possible else drop", "Overflow in sbr_hf_apply_noise, shift=%d\n", "error allocating bitstream buffer\n", "missing shorten magic 'ajkg'\n", "No channels reported\n", "too many channels: %d\n", "invalid or unsupported block size: %d\n", "maxnlpc is: %d\n", "invalid skip_bytes: %d\n", "missing verbatim section at beginning of stream\n", "header is wrong size: %d\n", "missing WAVE tag\n", "no fmt chunk found\n", "fmt chunk was too short\n", "unsupported wave format\n", "unsupported number of bits per sample: %d\n", "%d header bytes unparsed\n", "missing AIFF tag\n", "no COMM chunk found\n", "COMM chunk was too short\n", "exp %d is out of range\n", "unsupported bit packing %X", "nmean too large\n", "s->blocksize + s->nwrap too large\n", "unknown audio type\n", "unknown shorten function %d\n", "bitshift %d is invalid\n", "Increasing block size is not supported\n", "invalid pred_order %d\n", "missing RIFF tag\n", "missing FORM tag\n", "ajkg", "Invalid block_align: %d. Mode %s guessed based on bitrate: %ld\n", "Mode: %s\n", "length too long\n", "Tree size exceeded!\n", "packet is too big\n", "Sound: no data\n", "channels mismatch\n", "sample format mismatch\n", "unp_size %d is odd\n", "Cannot build VLC table\n", "invalid vlc\n", "Skipping low bytes tree\n", "Skipping high bytes tree\n", "Huffman codes out of range\n", "Extradata missing!\n", "Skipping MMAP tree\n", "Skipping MCLR tree\n", "Skipping FULL tree\n", "Skipping TYPE tree\n", "smackaud", "smackvid", "No mandatory headers present\n", "Unsupported Sonic version, please report\n", "Invalid sample_rate_index %d\n", "Sonicv2 chans: %d samprate: %d\n", "Only mono and stereo streams are supported by now\n", "invalid decorrelation %d\n", "invalid downsampling value\n", "Custom quant table\n", "number of taps times channels (%d * %d) larger than frame size %d\n", "Sonic: ver: %d.%d ls: %d dr: %d taps: %d block: %d frame: %d downsamp: %d\n", "missing sync id\n", "unsupported data type: %d\n", "unsupported number of channels: %d\n", "unsupported/invalid number of samples\n", "invalid/unsupported bits per sample: %d\n", "invalid channel 2 (%d) for %d channel(s)\n", "underread\n", "%s%7i:%-7i", "%s%7i", "%s%.15g", "%s%5i", "%s%3i", "Invalid format\n", "Missing password for encrypted stream. Please use the -password option\n", "Invalid samplerate\n", "Invalid/unsupported sample format.\n", "sample_rate too large\n", "format: %d chans: %d bps: %d rate: %d block: %d\n", "data_length: %d frame_length: %d last: %d total: %d\n", "frame_length too large\n", "Wrong extradata present\n", "TTA1", "TTA Decoder", "Set decoding password", "\n\t\n\f", "Block align is %d bits, expected %d\n", "Too many frames per packet (%d)\n", "Unsupported sample rate\n", "Bad bitrate per channel value %d\n", "VQF TwinVQ should have only one frame per packet\n", "FFmpeg version 3.1.11", "9:59:59.99,", "%d:%02d:%02d.%02d,", "val || !min_size", "./libavutil/mem_internal.h", "Failed to set dimensions %d %d\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "Invalid channel count", "Invalid sample rate", "PARAM_CHANGE side data too small.\n", "Error applying parameter changes.\n", "ignoring invalid SAR: %d/%d\n", "desc->flags & (1 << 4)", "libavcodec/utils.c", "pic->data[*]!=NULL in avcodec_default_get_buffer\n", "Unable to get pixel format descriptor for format %s\n", "default_get_buffer called on pic %p\n", "frame->nb_extended_buf == 0", "default_get_buffer called on frame %p", "ignoring invalid SAR: %u/%u\n", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "video_get_buffer: image parameters invalid\n", "pic->data[*]!=NULL in get_buffer_internal\n", "frame->data[i]", "Buffer returned by get_buffer2() did not zero unused plane pointers\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "reget_buffer() failed\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %ld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %ld)\n", "Failed to allocate packet of size %ld\n", "This encoder requires using the avcodec_send_frame() API.\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "avctx->codec->encode2", "Provided packet is too small, needs to be %d\n", "AVFrame.format is not set\n", "AVFrame.width or height is not set\n", "ret <= 0", "!avctx->internal->buffer_pkt->data || avctx->internal->buffer_pkt->buf", "start_display_time must be 0.\n", "Invalid media type for video\n", "This decoder requires using the avcodec_send_packet() API.\n", "!picture->extended_data || picture->extended_data == picture->data", "invalid packet: NULL data, size != 0\n", "Invalid media type for audio\n", "ret <= tmp.size", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "ret <= avpkt->size", "!avctx->internal->buffer_frame->buf[0]", "Invalid media type for subtitles\n", "requesting subtitles recoding without iconv", "Dialogue: ", "Dialogue: %ld,", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "unknown_codec", "Codec 0x%x is not in the full list.\n", "[%d]", "--prefix=/Users/Alan/Documents/Android/inshot/ScreenRecorder/trunk/ScreenRecorder/shell/toolchain-android --target-os=linux --cross-prefix=/Users/Alan/Documents/Android/inshot/ScreenRecorder/trunk/ScreenRecorder/shell/toolchain-android/bin/aarch64-linux-android- --arch=aarch64 --disable-shared --enable-runtime-cpudetect --enable-gpl --enable-small --enable-cross-compile --disable-debug --enable-static --disable-encoders --enable-encoder=aac --disable-decoders --enable-decoder='8svx_*' --enable-decoder='aac*' --enable-decoder='ac3*' --enable-decoder=g722 --enable-decoder=g726 --enable-decoder=g726le --enable-decoder='adpcm_*' --enable-decoder=alac --enable-decoder=alac_at --enable-decoder=amrnb --enable-decoder=amr_nb_at --enable-decoder=amrwb --enable-decoder=ape --enable-decoder=atrac1 --enable-decoder=atrac3 --enable-decoder=atrac3al --enable-decoder=atrac3plus --enable-decoder=atrac3plusal --enable-decoder=on2avc --enable-decoder=binkaudio_dct --enable-decoder=binkaudio_rdft --enable-decoder=bmv_audio --enable-decoder=comfortnoise --enable-decoder=cook --enable-decoder=dolby_e --enable-decoder='dsd_*' --enable-decoder='dsd_*' --enable-decoder='dsd_*' --enable-decoder='dsd_*' --enable-decoder=dsicinaudio --enable-decoder=dss_sp --enable-decoder=dst --enable-decoder=dca --enable-decoder=dvaudio --enable-decoder=eac3 --enable-decoder=eac3_at --enable-decoder=evrc --enable-decoder=flac --enable-decoder=g723_1 --enable-decoder=g729 --enable-decoder=gremlin_dpcm --enable-decoder=gsm --enable-decoder=gsm_ms --enable-decoder=gsm_ms_at --enable-decoder=iac --enable-decoder=ilbc_at --enable-decoder=imc --enable-decoder=interplay_dpcm --enable-decoder=interplayacm --enable-decoder=mace3 --enable-decoder=mace6 --enable-decoder=metasound --enable-decoder=mlp --enable-decoder=mp1 --enable-decoder=mp1float --enable-decoder=mp1_at --enable-decoder=mp2 --enable-decoder=mp2float --enable-decoder=mp2_at --enable-decoder=mp3 --enable-decoder=mp3float --enable-decoder=mp3_at --enable-decoder=mp3adu --enable-decoder=mp3adufloat --enable-decoder=mp3on4 --enable-decoder=mp3on4float --enable-decoder=als --enable-decoder=mpc7 --enable-decoder=mpc8 --enable-decoder=nellymoser --enable-decoder=opus --enable-decoder=paf_audio --enable-decoder='pcm_*' --enable-decoder=qcelp --enable-decoder=qdm2 --enable-decoder=qdm2_at --enable-decoder=qdmc --enable-decoder=qdmc_at --enable-decoder=real_144 --enable-decoder=real_288 --enable-decoder=ralf --enable-decoder=roq_dpcm --enable-decoder=s302m --enable-decoder=sdx2_dpcm --enable-decoder=shorten --enable-decoder=sipr --enable-decoder=smackaud --enable-decoder=sol_dpcm --enable-decoder=sonic --enable-decoder=tak --enable-decoder=truehd --enable-decoder=truespeech --enable-decoder=tta --enable-decoder=twinvq --enable-decoder=vmdaudio --enable-decoder=vorbis --enable-decoder=wavesynth --enable-decoder=wavpack --enable-decoder=ws_snd1 --enable-decoder=wmalossless --enable-decoder=wmapro --enable-decoder=wmav1 --enable-decoder=wmav2 --enable-decoder=wmavoice --enable-decoder=xan_dpcm --enable-decoder=xma1 --enable-decoder=xma2 --disable-protocols --enable-protocol=file --disable-doc --disable-asm --enable-inline-asm --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-postproc --disable-avdevice --disable-symver --extra-cflags=-I/Users/Alan/Documents/Android/inshot/ScreenRecorder/trunk/ScreenRecorder/shell/toolchain-android/include --extra-ldflags=-L/Users/Alan/Documents/Android/inshot/ScreenRecorder/trunk/ScreenRecorder/shell/toolchain-android/lib", "libavcodec license: GPL version 2 or later", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s/%s/%s, ", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", %dx%d", ", pass 1", ", pass 2", ", %ld kb/s", ", max. %ld kb/s", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "Hardware accelerated decoding with frame threading is known to be unstable and its use is discouraged.\n", "Could not find an AVHWAccel for the pixel format: %s", "Ignoring experimental hwaccel: %s\n", "choices[n] != AV_PIX_FMT_NONE", "Insufficient thread locking. At least %d threads are calling avcodec_open2() at the same time right now.\n", "No lock manager is set, please see av_lockmgr_register()\n", "!ff_avcodec_locked", "!dst->progress", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist '%s'\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "The 'vismv' option is deprecated, see the codecview filter instead.\n", "The encoder timebase is not set.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout not specified\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "Specified bit depth %d not possible with the specified pixel formats depth %d\n", "dimensions not set\n", "Bitrate %ld is extremely low, maybe you mean %ldk\n", "ticks_per_frame %d too large for the timebase %d/%d.", "Mismatching AVCodecContext.pix_fmt and AVHWFramesContext.format\n", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Specified channel layout '%s' is not supported\n", "p <= end", "bfraction invalid\n", "invalid NORM-6 VLC\n", "Header: %0X\n", "WMV3 Complex Profile is not fully supported\n", "Reserved LEVEL %i\n", "Only 4:2:0 chroma format supported\n", "Advanced Profile level %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, ChromaFormat=%i, Pulldown=%i, Interlace: %i\nTFCTRflag=%i, FINTERPflag=%i\n", "Progressive Segmented Frame mode: not supported (yet)\n", "Display extended info:\n", "Display dimensions: %ix%i\n", "Aspect: %i:%i\n", "Old interlaced mode is not supported\n", "LOOPFILTER shall not be enabled in Simple Profile\n", "FASTUVMC unavailable in Simple Profile\n", "Extended MVs unavailable in Simple Profile\n", "1 for reserved RES_TRANSTAB is forbidden\n", "RANGERED should be set to 0 in Simple Profile\n", "Unsupported sprite feature\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Profile %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, MultiRes=%i, FastUVMC=%i, Extended MV=%i\nRangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\nDQuant=%i, Quantizer mode=%i, Max B-frames=%i\n", "Entry point: %08X\n", "Luma scaling is not supported, expect wrong picture\n", "Chroma scaling is not supported, expect wrong picture\n", "Entry point info:\nBrokenLink=%i, ClosedEntry=%i, PanscanFlag=%i\nRefDist=%i, Postproc=%i, FastUVMC=%i, ExtMV=%i\nDQuant=%i, VSTransform=%i, Overlap=%i, Qmode=%i\n", "MB MV Type plane encoding: Imode: %i, Invert: %i\n", "MB Skip plane encoding: Imode: %i, Invert: %i\n", "VOP DQuant info\n", "MB Direct Type plane encoding: Imode: %i, Invert: %i\n", "v->s.mb_height == v->s.height + 15 >> 4 || v->s.mb_height == (((v->s.height + 15 >> 4)+(2)-1)&~((2)-1))", "libavcodec/vc1.c", "Pan-scan", "FIELDTX plane encoding: Imode: %i, Invert: %i\n", "ACPRED plane encoding: Imode: %i, Invert: %i\n", "CONDOVER plane encoding: Imode: %i, Invert: %i\n", "SKIPMB plane encoding: Imode: %i, Invert: %i\n", "B Fields\n", "MB Forward Type plane encoding: Imode: %i, Invert: %i\n", "Intensity compensation set for B picture\n", "@skipping small junk packet\n", "unknown block type: %d\n", "avctx->block_align * silent_chunks <= frame->nb_samples * avctx->channels", "libavcodec/vmdaudio.c", "(buf_size & (avctx->channels > 1)) == 0", "invalid block align\n", "%d channels, %d bits/sample, block align = %d, sample rate = %d\n", "Duplicate value found in floor 1 X coordinates\n", "Invalid packet\n", "Invalid mode in packet\n", "Extradata corrupt.\n", "Id header is too short\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Setup header is too short\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "Out of memory\n", "Invalid Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "Unsupported mode count: %d\n", "Vorbis parser", "Index value %d out of range (0 - %d) for %s at %s:%i\n", " Vorbis id header packet corrupt (no vorbis signature). \n", " Vorbis id header packet corrupt (illegal blocksize). \n", " Vorbis id header packet corrupt (framing flag not set). \n", " Vorbis setup header packet corrupt (no vorbis signature). \n", " %u. Codebook setup data corrupt.\n", " %u. Codebook's dimension is invalid (%d).\n", " %u. Codebook has too many entries (%u).\n", " More codelengths than codes in codebook. \n", "Bug in codevector vector building code. \n", "Codebook lookup type not supported. \n", " Invalid code lengths while generating vlcs. \n", " Error generating vlc tables. \n", " Vorbis setup header packet corrupt (codebooks). \n", "Vorbis time domain transform data nonzero. \n", " Vorbis setup header packet corrupt (time domain transforms). \n", "floor_setup->data.t1.class_masterbook[j]", "libavcodec/vorbisdec.c", "A rangebits value of 0 is not compliant with the Vorbis I specification.\n", "Floor value is too large for blocksize: %u (%u)\n", "Floor 0 order is 0.\n", "Floor 0 rate is 0.\n", "Floor 0 bark map size is 0.\n", "book_idx", "Invalid floor type!\n", "partition out of bounds: type, begin, end, size, blocksize: %u, %u, %u, %u, %u\n", "res_setup->classbook", "res_setup->books[j][k]", "Other mappings than type 0 are not compliant with the Vorbis I specification. \n", "Square polar channel mapping with less than two channels is not compliant with the Vorbis I specification.\n", "mapping_setup->magnitude[j]", "mapping_setup->angle[j]", "%u. mapping setup data invalid.\n", "mapping_setup->submap_floor[j]", "mapping_setup->submap_residue[j]", "mode_setup->mapping", " Vorbis setup header packet corrupt (framing flag). \n", " Vorbis setup header packet corrupt (floors). \n", " Vorbis setup header packet corrupt (residues). \n", " Vorbis setup header packet corrupt (mappings). \n", " Vorbis setup header packet corrupt (modes). \n", "Id header corrupt.\n", "Ignoring comment header\n", "Setup header corrupt.\n", "Data packet before valid headers\n", "Not a Vorbis I audio packet.\n", "mode_number", "Invalid codebook in vorbis_floor_decode.\n", "Too many channels in vorbis_floor_decode.\n", "Insufficient output buffer\n", "Invalid vlc code decoding %d channel.", "vr->classifications > 1", " Invalid residue type while residue decode?! \n", "Extradata missing.\n", "First header is not the id header.\n", "Third header is not the setup header.\n", "Inconsistent input frame sizes %d %d\n", "Invalid superframe packet size: %u frame size: %d\n", "Mixing of superframe syntax and naked VP9 frames not supported", "Too many invisible frames", "s->n_cache > 0", "libavcodec/vp9_superframe_bsf.c", "ptr == &out->data[out->size]", "vp9_superframe", "k %d is too large\n", "Too few bits (%d) left\n", "Invalid number of samples: %d\n", "Block %d has invalid size (size %d vs. %d bytes left)\n", "Context for block %d is not present\n", "Mismatching number of samples in a sequence: %d and %d\n", "Got incorrect block %02X with size %i\n", "Block size %i is out of bounds\n", "Too many decorrelation terms\n", "No decorrelation terms met\n", "Too many decorrelation weights\n", "Entropy vars size should be %i, got %i.\n", "Invalid INT32INFO, size = %i\n", "Invalid INT32INFO, extra_bits = %d (> 30)\n", "Invalid FLOATINFO, size = %i\n", "Invalid FLOATINFO, shift = %d (> 31)\n", "Invalid EXTRABITS, size = %i\n", "Insufficient channel information\n", "%i channels signalled instead of %i.\n", "Invalid channel info size %d\n", "Invalid custom sample rate.\n", "No block with decorrelation terms\n", "No block with decorrelation weights\n", "No block with decorrelation samples\n", "No block with entropy info\n", "Hybrid config not found\n", "Packed samples not found\n", "Float information not found\n", "Too small EXTRABITS\n", "Custom sample rate missing.\n", "Too many channels coded in a packet.\n", "sample %d %d too large\n", "Extra bits CRC error\n", "Not enough channels coded in a packet.\n", "Error creating frame decode context\n", "byte_offset_bits %d is too large\n", "broken escape sequence\n", "overflow (%d > %d) in spectral RLE, ignoring\n", "Disabling use_variable_block_len, if this fails contact the ffmpeg developers and send us the file\n", "prev_block_len_bits %d out of range\n", "next_block_len_bits %d out of range\n", "block_len_bits not initialized to a valid value\n", "frame_len overflow\n", "total_gain overread\n", "hgain vlc invalid\n", "Exponent vlc invalid\n", "Exponent out of range: %d\n", "Input packet size too small (%d < %d)\n", "nb_frames is %d bits left %d\n", "Invalid last frame bit offset %d > buf size %d (%d)\n", "len %d invalid\n", "Decoding audio at 24 bit-depth\n", "Unknown bit-depth: %u\n", "Unsupported extradata size", "s->samples_per_frame <= (1 << 14)", "libavcodec/wmalosslessdec.c", "invalid number of subframes %u\n", "invalid number of channels %d\n", "More than %d channels", "Too small input buffer", "Found empty subframe\n", "broken frame: subframe_len %i\n", "broken frame: num subframes > 31\n", "broken frame: channel len(%u) > samples_per_frame(%u)\n", "Arithmetic coding", "Order[%d][%d] %d > max (%d), not supported\n", "CDLMS of order %d", "Waiting for seekable tile\n", "Expect wrong output since inverse LPC filter", "Invalid number of padding bits in raw PCM tile\n", "broken subframe\n", "frame[%u] would have to skip %i bits\n", "Bitstream splicing", "Packet loss detected! seq %x vs %x\n", "bits per sample is %d", "Unknown extradata size", ">2 channels support", "Large block align", "14-bit block sizes", "invalid number of subframes %d\n", "min_samples_per_subframe of %d too small\n", "num_sfb invalid\n", " %s = %d\n", "ed sample bit depth", " %s = %x\n", "ed decode flags", "log2 frame size", "max num subframes", "len prefix", "num channels", "len <= put_bits_left(&s->pb)", "libavcodec/wmaprodec.c", "broken frame: channel len > samples_per_frame\n", "invalid number of fill bits\n", "Reserved bit", "Channel transform bit", "Unknown channel transform type", "Coupled channels > 6", "s->subframe_len <= (1 << 13)", "num_vec_coeffs %d is too large\n", "num_vec_coeffs + offset <= (sizeof(s->channel[c].out) / sizeof((s->channel[c].out)[0]))", "negative quant step\n", "invalid scale factor coding\n", "Input packet too small (%d < %d)\n", "8`u?", "S:>@;I>", "Invalid denoise filter strength %d (max=11)\n", "Invalid VBM tree; broken extradata?\n", "Invalid pitch range; broken extradata?\n", "Unsupported samplerate %d (min=%d, max=%d)\n", "Invalid delta pitch hrange; broken extradata?\n", "WMAPro-in-WMAVoice", "Superframe encodes >480 samples (%d), not allowed\n", "Invalid frame type VLC code, skipping\n", "size <= 160 / 2", "libavcodec/wmavoice.c", "Trying to skip %d bytes in packet of size %d\n", "ws_snd1", "aeval", "Mismatch between the specified number of channel expressions '%d' and the number of expected output channels '%d' for the specified channel layout\n", "same", "Invalid number of channels '%d' provided\n", "sample_rate:%d chlayout:%s duration:%ld\n", "exprs", "set the '|'-separated list of channels expressions", "set channel layout", "aevalsrc", "nb_samples", "set the number of samples per requested frame", "set the sample rate", "44100", "set audio duration", "nb_in_channels", "nb_out_channels", "At least one delay >0 must be specified.\n", "adelay", "set list of delays for each channel", "Nothing to echo - missing delay samples.\n", "out_gain %f can cause saturation of output\n", "Missing delays and/or decays.\n", "Number of delays %d differs from number of decays %d.\n", "At least one decay & delay must be set.\n", "delay[%d]: %f is out of allowed range: (0, 90000]\n", "decay[%d]: %f is out of allowed range: (0, 1]\n", "nb_echoes:%d\n", "aecho", "in_gain", "set signal input gain", "out_gain", "set signal output gain", "set list of signal delays", "1000", "set list of signal decays", "level_in", "set input gain", "level_out", "set output gain", "set filter mode", "reproduction", "set filter type", "Columbia", "BSI (78RPM)", "riaa", "RIAA", "Compact Disc (CD)", "50fm", "75fm", "50kf", "75kf", "Inputs must have the same sample rate %d for in0 vs %d for in1\n", "acrossfade", "crossfade0", "crossfade1", "set number of samples for cross fade duration", "set cross fade duration", "overlap 1st stream end with 2nd stream start", "curve1", "set fade curve type for 1st stream", "linear slope", "esin", "exponential sine wave", "ipar", "inverted parabola", "quadratic", "cubic root", "exponential", "iqsin", "inverted quarter of sine wave", "ihsin", "inverted half of sine wave", "dese", "double-exponential seat", "desi", "double-exponential sigmoid", "curve2", "set fade curve type for 2nd stream", "afade", "set the fade direction", "fade-in", "start_sample", "set number of first sample to start fading", "set number of samples for fade duration", "set time to start fading", "set fade duration", "set fade curve type", "real", "set channels real expressions", "imag", "set channels imaginary expressions", "set window size", "w128", "w256", "w512", "w1024", "w2048", "w4096", "w8192", "w16384", "w32768", "w65536", "w131072", "win_func", "set window function", "Rectangular", "bartlett", "Bartlett", "hanning", "Hanning", "hamming", "Hamming", "sine", "Sine", "set window overlap", "This syntax is deprecated, use '|' to separate %s.\n", "Error parsing sample format: %s.\n", "Error parsing sample rate: %s.\n", "Error parsing channel layout: %s.\n", "aformat", "sample_fmts", "A '|'-separated list of sample formats.", "sample_rates", "A '|'-separated list of sample rates.", "channel_layouts", "A '|'-separated list of channel layouts.", "i < 2", "libavfilter/af_agate.c", "sidechaingate", "sidechain", "agate", "set input level", "set max gain reduction", "set threshold", "set ratio", "set attack", "set release", "makeup", "set makeup gain", "set knee", "set detection", "set link", "average", "maximum", "level_sc", "set sidechain gain", "set output level", "set limit", "enable asc", "asc_level", "set asc level", "auto level", "Using \"%s\" for input %d\n", "Too many channels (max %d)\n", "Input channel layouts overlap: output layout will be determined by the number of distinct input channels\n", "in%d", "Inputs must have the same sample rate %d for in%d vs %d\n", "%sin%d:", " -> out:", "Buffer queue overflow, dropping.\n", "queue->available", "specify the number of inputs", "libavfilter/af_amix.c", "unknown input link\n", "frame_list->end", "s->nb_inputs > 1", "s->frame_list->nb_frames > 0", "input%d", "inputs:%d fmt:%s srate:%d cl:%s\n", "amix", "Number of inputs.", "How to determine the end-of-stream.", "longest", "Duration of longest input.", "shortest", "Duration of shortest input.", "Duration of first input.", "dropout_transition", "Transition time, in seconds, for volume renormalization when an input stream ends.", "%d|f=%lf|w=%lf|g=%lf", "c%d f=%lf w=%lf g=%lf t=%d", "c%d f=%lf w=%lf g=%lf", "out0", "out1", "anequalizer", "draw frequency response curves", "hd720", "mgain", "set max gain", "fscale", "set frequency scale", "set channels curves colors", "red|green|blue|yellow|orange|lime|pink|magenta|brown", "anull", "padding n_out:%d pad_len_left:%ld\n", "outsamplesref->sample_rate == outlink->sample_rate", "libavfilter/af_apad.c", "outsamplesref->nb_samples == n_out", "n_out:%d whole_len_left:%ld\n", "Both whole and pad length are set, this is not possible\n", "apad", "set silence packet size", "pad_len", "set number of samples of silence to add", "whole_len", "set minimum target number of samples in the audio stream", "channels > 0", "libavfilter/af_aphaser.c", "in_gain may cause clipping\n", "out_gain may cause clipping\n", "delay is too small\n", "aphaser", "set delay in milliseconds", "set decay", "set modulation speed", "set modulation type", "triangular", "sinusoidal", "libavfilter/af_apulsator.c", "apulsator", "set mode", "triangle", "square", "sawup", "sawdown", "set modulation", "offset_l", "set offset L", "offset_r", "set offset R", "set pulse width", "set timing", "set BPM", "set ms", "set frequency", "outlink->sample_rate == out_rate", "libavfilter/af_aresample.c", "outlink->channel_layout == out_layout || !outlink->channel_layout", "outlink->format == out_format", "ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n", "aresample", "nb_out_samples:%d pad:%d\n", "No space for %d samples, stretching audio fifo\n", "Stretching audio fifo failed, discarded %d samples\n", "asetnsamples", "nb_out_samples", "set the number of per-frame output samples", "pad last frame with zeros", "Time base is inaccurate\n", "asetrate", "%s - ", "NOPTS", "%.6g", "n:%ld pts:%s pts_time:%s pos:%ld fmt:%s channels:%d chlayout:%s rate:%d nb_samples:%d checksum:%08X ", "plane_checksums: [ ", "  side data - ", "matrix encoding: ", "invalid data", "Dolby Surround", "Dolby Pro Logic IIx", "Dolby Pro Logic IIz", "Dolby EX", "Dolby Headphone", "downmix: ", "preferred downmix type - ", "Lo/Ro", "Lt/Rt", " Mix levels: center %f (%f ltrt) - surround %f (%f ltrt) - lfe %f", "replaygain: ", "track gain", "track peak", "album gain", "album peak", "audio service type: ", "unknown side data type: %d, size %d bytes", "ashowinfo", "Channel: %d\n", "DC offset: %f\n", "Min level: %f\n", "Max level: %f\n", "Min difference: %f\n", "Max difference: %f\n", "Mean difference: %f\n", "Peak level dB: %f\n", "RMS level dB: %f\n", "RMS peak dB: %f\n", "RMS trough dB: %f\n", "Crest factor: %f\n", "Flat factor: %f\n", "Peak count: %ld\n", "Bit depth: %u\n", "Overall\n", "Peak count: %f\n", "Number of samples: %ld\n", "lavfi.astats.%d.%s", "lavfi.astats.%s", "Crest_factor", "Overall.DC_offset", "Overall.Min_level", "Overall.Max_level", "Overall.Min_difference", "Overall.Max_difference", "Overall.Mean_difference", "Overall.Peak_level", "Overall.RMS_level", "Overall.RMS_peak", "Overall.RMS_trough", "Overall.Flat_factor", "Overall.Peak_count", "Overall.Bit_depth", "Overall.Number_of_samples", "astats", "set the window length", "inject metadata in the filtergraph", "recalculate stats after this many frames", "Tempo value %f exceeds [0.5, 2.0] range\n", "start_here <= stop_here && frag->position[1] <= start_here && overlap <= frag->nsamples", "libavfilter/af_atempo.c", "read_size <= atempo->ring", "atempo->position[0] <= stop_here", "zeros != nsamples", "nsamples <= zeros + na + nb", "pot <= atempo->window", "start_here <= stop_here && frag->position[1] <= start_here", "atempo", "set tempo scale factor", "Invalid frequency %f and/or width %f <= 0\n", "Invalid frequency %f. Frequency must be less than half the sample-rate %d.\n", "libavfilter/af_biquads.c", "clipping %d times. Please reduce gain.\n", "biquad", "allpass", "set central frequency", "width_type", "set filter-width type", "Q-Factor", "octave", "set filter-width", "highpass", "set width", "set number of poles", "lowpass", "bandreject", "set band-width", "bandpass", "use constant skirt gain", "treble", "set shelf transition steep", "set gain", "bass", "Failed to parse channel map\n", "input channel '%s' not available from input layout '%s'\n", "input channel #%d not available from input layout '%s'\n", "This syntax is deprecated, use '|' to separate the mappings.\n", "Too many channels mapped: '%d'.\n", "Error parsing channel layout: '%s'.\n", "Output channel layout '%s' does not match the list of channel mapped: '%s'.\n", "Output channel layout %s does not match the number of channels mapped %d.\n", "Output channel layout is not set and cannot be guessed from the maps.\n", "channelmap", "A comma-separated list of input channel numbers in output order.", "Output channel layout.", "Error parsing channel layout '%s'.\n", "channelsplit", "Input channel layout.", "Number of delays & decays & speeds & depths given must be same.\n", "At least one delay & decay & speed & depth must be set.\n", "output gain can cause saturation or clipping of output\n", "chorus", "set delays", "set decays", "set speeds", "set depths", "Invalid number of channels: %d\n", "Number of attacks/decays bigger than number of channels.\n", "Number of attacks %d differs from number of decays %d.\n", "%lf/%lf", "Invalid and/or missing input/output value.\n", "Transfer function input values must be increasing.\n", "%d: x=%f y=%f\n", "compand", "attacks", "set time over which increase of volume is determined", "set time over which decrease of volume is determined", "set points of transfer function", "-70/-70|-60/-20", "set soft-knee", "set initial volume", "set delay for samples before sending them to volume adjuster", "set mm distance", "set cm distance", "set meter distance", "set dry amount", "set wet amount", "set DC shift", "limitergain", "set limiter gain", "(aggressiveness >= 0.0) && (aggressiveness <= 1.0)", "libavfilter/af_dynaudnorm.c", "cqueue_size(s->gain_history_original[channel]) == s->filter_size", "cqueue_size(s->gain_history_minimum[channel]) == s->filter_size", "./libavfilter/bufferqueue.h", "frame len %d\n", "dynaudnorm", "set the frame length in msec", "set the filter size", "set the peak value", "set the max amplification", "set the target RMS", "set channel coupling", "set DC correction", "set alternative boundary mode", "set the compress factor", "extrastereo", "set the difference coefficient", "enable clipping", "nan frequency (%g, %g).\n", "unsorted frequency (%g, %g).\n", "gain_interpolate", "nb_gain_entry = %d.\n", "libavfilter/af_firequalizer.c", "filter kernel contains nan or infinity.\n", "gain_entry", "sample_rate = %d, channels = %d, analysis_rdft_len = %d, rdft_len = %d, fir_len = %d, nsamples_max = %d.\n", "too large delay, please decrease it.\n", "too small accuracy, please increase it.\n", "firequalizer", "chlayout", "set gain curve", "gain_interpolate(f)", "set gain entry", "set delay", "set accuracy", "wfunc", "rectangular", "rectangular window", "hann window", "hamming window", "blackman", "blackman window", "mnuttall3", "minimum 3-term nuttall window", "bnuttall", "blackman-nuttall window", "bharris", "blackman-harris window", "set fixed frame samples", "set multi channels mode", "zero_phase", "set zero phase mode", "base delay in milliseconds", "added swept delay in milliseconds", "regen", "percentage regeneration (delayed signal feedback)", "percentage of delayed signal mixed with original", "sweeps per second (Hz)", "swept wave shape", "swept wave percentage phase-shift for multi-channel", "delay-line interpolation", "itype", "Channel %d: counter A: %d, B: %d, C: %d\n", "samples == samples_end", "libavfilter/af_hdcd.c", "samples + lead * stride + stride * (count - lead) <= samples_end", "samples + envelope_run * stride <= samples_end", "samples + lead * stride <= samples_end", "hdcd", "Missing separator '-' in channel map '%s'\n", "Invalid output channel: %s.\n", "Channel map describes more than one output channel.\n", "Output channel '%s' is not present in requested channel layout.\n", "Multiple maps for output channel '%s'.\n", "Invalid input stream index: %d.\n", "Invalid input channel: %s.\n", "Channel map describes more than one input channel.\n", "Requested channel %s is not present in input stream #%d.\n", "Could not find input channel for output channel '%s'.\n", "mappings: ", "%d.%s => %s ", "No channels are used from input stream %d.\n", "i < ctx->nb_inputs", "libavfilter/af_join.c", "!s->input_frames[i]", "join", "Number of input streams.", "Channel layout of the output stream.", "A comma-separated list of channels maps in the format 'input_stream.input_channel-output_channel.", "%7[A-Z]%n", "c%d%n", "pan filter needs a channel layout and a set of channel definitions as parameter\n", "Expected out channel name, got \"%.8s\"\n", "Channel \"%.8s\" does not exist in the chosen layout\n", "Invalid out channel name \"%.8s\"\n", "Syntax error after channel name in \"%.8s\"\n", "%lf%n *%n", "Expected in channel name, got \"%.8s\"\n", "Can not mix named and numbered channels\n", "Syntax error near \"%.8s\"\n", "af_pan supports a maximum of %d channels. Feel free to ask for a higher limit.\n", "Degenerate coefficients while renormalizing\n", "%s%.3g i%d", "o%d = %s\n", "Pure channel mapping detected:", "args", "track_peak = %.6f\n", "i < (sizeof(freqinfos) / sizeof((freqinfos)[0]))", "libavfilter/af_replaygain.c", "replaygain", "acompressor", "sidechaincompress", "set make up gain", "set link type", "set mix", "lavfi.silence_start", "silence_start: %s\n", "lavfi.silence_end", "lavfi.silence_duration", "silence_end: %s | silence_duration: %s\n", "silencedetect", "set noise tolerance", "set minimum duration in seconds", "start_periods", "start_duration", "start_threshold", "stop_periods", "stop_duration", "stop_threshold", "leave_silence", "sample rate is too small\n", "stereotools", "set level in", "set level out", "balance_in", "set balance in", "balance_out", "set balance out", "enable softclip", "mutel", "mute L", "muter", "mute R", "phasel", "phase L", "phase R", "set stereo mode", "lr>lr", "lr>ms", "ms>lr", "lr>ll", "lr>rr", "lr>l+r", "lr>rl", "slev", "set side level", "sbal", "set side balance", "mlev", "set middle level", "set middle pan", "set stereo base", "sclevel", "set S/C level", "set stereo phase", "stereowiden", "set delay time", "feedback", "set feedback gain", "crossfeed", "set cross feed", "drymix", "set dry-mix", "set frequency in hertz", "set depth as percentage", "Error when evaluating the volume expression '%s'\n", "Invalid value NaN for volume\n", "Invalid value NaN for volume, setting to 0\n", "n:%f t:%f pts:%f precision:%s ", "volume_i:%d/255 ", "volume:%f volume_dB:%f\n", "tb:%f sample_rate:%f nb_channels:%f\n", "Both ReplayGain gain values are unknown.\n", "Using gain %f dB from replaygain side data.\n", "set volume adjustment expression", "select mathematical precision", "select 8-bit fixed-point", "select 32-bit floating-point", "double", "select 64-bit floating-point", "specify when to evaluate expressions", "eval volume expression once", "eval volume expression per-frame", "Apply replaygain side data when present", "replaygain side data is dropped", "ignore", "replaygain side data is ignored", "track gain is preferred", "album gain is preferred", "replaygain_preamp", "Apply replaygain pre-amplification", "replaygain_noclip", "Apply replaygain clipping prevention", "nb_channels", "nb_consumed_samples", "startpts", "startt", "n_samples: %ld\n", "power <= 0x8000 * 0x8000", "libavfilter/af_volumedetect.c", "mean_volume: %.1f dB\n", "max_volume: %.1f dB\n", "histogram_%ddb: %ld\n", "volumedetect", "anullsink", "set sample rate", "set amplitude", "set duration", "set noise color", "colour", "pink", "set random seed", "sample_rate:%d channel_layout:'%s' nb_samples:%d\n", "anullsrc", "set channel_layout", "set the sine frequency", "beep_factor", "set the beep frequency factor", "set the audio duration", "samples_per_frame", "set the number of samples per frame", "channels == av_get_channel_layout_nb_channels(link->channel_layout) || !av_get_channel_layout_nb_channels(link->channel_layout)", "libavfilter/audio.c", "ahistogram", "dmode", "set method to display channels", "single", "all channels use single histogram", "separate", "each channel have own histogram", "set video rate", "set display scale", "cbrt", "rlog", "reverse logarithmic", "ascale", "set amplitude scale", "acount", "how much frames to accumulate", "rheight", "set histogram ratio of window height", "slide", "set sonogram sliding", "replace old rows with new", "scroll from top to bottom", "aphasemeter", "800x400", "set red contrast", "set green contrast", "set blue contrast", "set median phase color", "avectorscope", "lissajous", "lissajous_xy", "polar", "400x400", "set alpha contrast", "set red fade", "set green fade", "set blue fade", "set alpha fade", "set zoom factor", "set draw mode", "Input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding output link %s parameters (%dx%d, SAR %d:%d)\n", "EOF on %s, %d streams left in segment.\n", "Frame after EOF on input %s\n", "in%d:%c%d", "out:%c%d", "Segment finished at pts=%ld\n", "specify the number of segments", "specify the number of video streams", "specify the number of audio streams", "unsafe", "enable unsafe mode", "fullhd option is deprecated, use size/s option instead.\n", "fullhd set to 0 but with custom dimension.\n", "invalid dimension.\n", "fft_time         = %16.3f s.\n", "cqt_time         = %16.3f s.\n", "process_cqt_time = %16.3f s.\n", "update_sono_time = %16.3f s.\n", "alloc_time       = %16.3f s.\n", "bar_time         = %16.3f s.\n", "axis_time        = %16.3f s.\n", "sono_time        = %16.3f s.\n", "plot_time        = %16.3f s.\n", "[%d] %s is nan, setting it to %g.\n", "[%d] %s is too low (%g), setting it to %g.\n", "[%d] %s it too high (%g), setting it to %g.\n", "nb_cqt_coeffs = %d.\n", "changing pts from %ld (%.3f) to %ld (%.3f).\n", "EF G A BC D ", "freetype is not available, ignoring fontfile option.\n", "midi", "font axis rendering is not implemented in non-default frequency range, please use axisfile option instead.\n", "video: %dx%d %s %d/%d fps, bar_h = %d, axis_h = %d, sono_h = %d.\n", "a_weighting", "b_weighting", "c_weighting", "sono_v", "bar_v", "fft_len = %d, cqt_len = %d.\n", "loading axis image failed, fallback to font rendering.\n", "loading axis font failed, disable text drawing.\n", "audio: %d Hz, step = %d + %d/%d.\n", "fractional step.\n", "audio: %d Hz, step = %d.\n", "showcqt", "1920x1080", "bar_h", "set bargraph height", "axis_h", "set axis height", "sono_h", "set sonogram height", "fullhd", "set fullhd size", "set sonogram volume", "set bargraph volume", "volume2", "sono_g", "set sonogram gamma", "bar_g", "set bargraph gamma", "gamma2", "set timeclamp", "basefreq", "set base frequency", "endfreq", "set end frequency", "set coeffclamp", "set tlength", "384*tc/(384+tc*f)", "set transform count", "fcount", "set frequency count", "fontfile", "set axis font", "fontcolor", "set font color", "st(0, (midi(f)-59.5)/12);st(1, if(between(ld(0),0,1), 0.5-0.5*cos(2*PI*ld(0)), 0));r(1-ld(1)) + b(ld(1))", "axisfile", "set axis image", "draw axis", "overlap %f too big\n", "libavfilter/avf_showfreqs.c", "showfreqs", "1024x512", "set display mode", "show lines", "show bars", "show dots", "Blackman", "welch", "Welch", "flattop", "Flat-top", "Blackman-Harris", "Blackman-Nuttall", "bhann", "Bartlett-Hann", "lanczos", "Lanczos", "gauss", "Gauss", "tukey", "Tukey", "set time averaging", "set channels colors", "cmode", "set channel mode", "combined", "show all channels in same window", "show each channel in own window", "showspectrumpic", "s:%dx%d FFT window size:%d\n", "libavfilter/avf_showspectrum.c", "fin->nb_samples == s->win_size", "CREATED BY LIBAVFILTER", "%.2f", "%.2fh", "%.2fm", "%.2fs", "FREQUENCY (Hz)", "4096x2048", "set channel display mode", "combined mode", "separate mode", "set channel coloring", "separate color for each channel", "intensity based coloring", "rainbow", "rainbow based coloring", "moreland", "moreland based coloring", "nebulae", "nebulae based coloring", "fire", "fire based coloring", "fiery", "fiery based coloring", "fruit", "fruit based coloring", "cool", "cool based coloring", "4thrt", "4th root", "5thrt", "5th root", "saturation", "color saturation multiplier", "set orientation", "vertical", "horizontal", "set scale gain", "draw legend", "showspectrum", "640x512", "set sliding mode", "replace old columns with new", "scroll from right to left", "rscroll", "scroll from left to right", "fullframe", "return full frames", "set data mode", "magnitude", "set border width", "set channel width", "set channel height", "set fade", "set volume color expression", "if(gte(VOLUME,-6), if(gte(VOLUME,-2), if(gte(VOLUME,-1), if(gt(VOLUME,0), 0xff0000ff, 0xff0066ff), 0xff00ffff),0xff00ff00),0xffff0000)", "display channel names", "display volume value", "set step size", "VOLUME", "CHANNEL", "showwavespic", "Too few samples\n", "Create frame averaging %ld samples per column\n", "col < outlink->w", "libavfilter/avf_showwaves.c", "Could not allocate showwaves buffer\n", "s:%dx%d r:%f n:%d\n", "600x240", "split_channels", "draw channels separately", "showwaves", "select display mode", "draw a point for each sample", "draw a line for each sample", "draw a line between samples", "cline", "draw a centered line for each sample", "set how many samples to show in the same point", "FFmpeg version 3.1.11", "Timeline ('enable' option) not supported with filter '%s'\n", "Error when evaluating the expression '%s' for enable\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "libavfilter license: GPL version 2 or later", "Media type mismatch between the '%s' filter output pad %d (%s) and the '%s' filter input pad %d (%s)\n", "auto-inserting filter '%s' between the filter '%s' and the filter '%s'\n", "Not all input and output are properly linked (%d).\n", "circular filter chain detected\n", "Source filters and filters with more than one input must set config_props() callbacks on all outputs\n", "Failed to configure output pad on %s\n", "Video source filters must set their output link's width and height\n", "Failed to configure input pad on %s\n", "pong from:%s %s\n", "enable", "Copying data in avfilter.\n", "Processing command time:%f command:%s arg:%s\n", "(filter->flags & ((1 << 16) | (1 << 17))) != ((1 << 16) | (1 << 17))", "libavfilter/avfilter.c", "Error applying generic filter options.\n", "Error applying options to the filter.\n", "This filter does not take any options, but options were provided: %s.\n", "noformat", "frei0r", "frei0r_src", "This syntax is deprecated. Use '|' to separate the list items.\n", "compat: called with args=[%s]\n", "No such option: %s.\n", "Format change is not supported\n", "Channel count change is not supported\n", "Channel layout change is not supported\n", "Sample rate change is not supported\n", "Samples dropped due to memory allocation failure.\n", "AVFilter", "Allowed thread types", "set enable expression", "libavfilter/avfiltergraph.c", "picking %s out of %d ref:%s alpha:%d\n", "picking %s out of %d ref:%s\n", "Cannot select sample rate for the link between filters %s and %s.\n", "Cannot select channel layout for the link between filters %s and %s.\n", "Unknown channel layouts not supported, try specifying a channel layout using 'aformat=channel_layouts=something'.\n", "All layouts set on non-empty list\n", "All counts without all layouts\n", "Query format failed for '%s': %s\n", "Error initializing threading.\n", "'scale' filter not present, cannot convert pixel formats.\n", "auto-inserted scaler %d", "'aresample' filter not present, cannot convert audio formats.\n", "auto-inserted resampler %d", "inlink-> in_formats->refcount > 0", "inlink->out_formats->refcount > 0", "outlink-> in_formats->refcount > 0", "outlink->out_formats->refcount > 0", "inlink-> in_samplerates->refcount > 0", "inlink->out_samplerates->refcount > 0", "outlink-> in_samplerates->refcount > 0", "outlink->out_samplerates->refcount > 0", "inlink-> in_channel_layouts->refcount > 0", "inlink->out_channel_layouts->refcount > 0", "outlink-> in_channel_layouts->refcount > 0", "outlink->out_channel_layouts->refcount > 0", "Impossible to convert between the formats supported by the filter '%s' and the filter '%s'\n", "query_formats: %d queried, %d merged, %d already done, %d delayed\n", "The following filters could not choose their formats: %s\nConsider inserting the (a)format filter near their input or output.\n", "Input pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any source\n", "Output pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any destination\n", "afifo", "auto-inserted fifo %d", "query_formats not finished\n", "best_idx >= 0", "diff < 2147483647", "n == sink_links_count", "Useless run of a filter graph\n", "EOF on sink link %s:%s.\n", "AVFilterGraph", "Maximum number of threads", "scale_sws_opts", "default scale filter options", "aresample_swr_opts", "default aresample filter options", "Invalid size for pixel_fmts: %d, should be multiple of %d\n", "Cannot buffer more frames. Consume some available frames before adding new ones.\n", "%d buffers queued in %s, something may be wrong.\n", "Invalid size for sample_fmts: %d, should be multiple of %d\n", "Invalid size for sample_rates: %d, should be multiple of %d\n", "Invalid size for channel_layouts: %d, should be multiple of %d\n", "Invalid size for channel_counts: %d, should be multiple of %d\n", "Conflicting all_channel_counts and list in options\n", "pix_fmts", "Failed to allocate fifo\n", "all_channel_counts", "ffbuffersink", "!strcmp(ctx->filter->name, \"buffersink\") || !strcmp(ctx->filter->name, \"ffbuffersink\")", "libavfilter/buffersink.c", "abuffersink", "set the supported sample formats", "set the supported sample rates", "set the supported channel layouts", "set the supported channel counts", "accept all channel counts", "set the supported pixel formats", "Changing frame properties on the fly is not supported by all filters.\n", "Changing frame properties on the fly is not supported.\n", "Invalid parameters provided.\n", "w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n", "Sample format was not set or was invalid\n", "Invalid channel layout %s.\n", "Mismatching channel count %d and layout '%s' (%d channels)\n", "Neither number of channels nor channel layout specified\n", "tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n", "Layout indicates a different number of channels than actually present\n", "abuffer", "pix_fmt", "time_base_num", "deprecated, do not use", "time_base_den", "sar_num", "sar_den", "pixel_aspect", "sws_param", "pix_desc", "libavfilter/drawutils.c", "Color conversion not implemented for %s\n", "mainpic", "libavfilter/dualinput.c", "lavfi.bench.start_time", "t:%f avg:%f max:%f min:%f\n", "abench", "set action", "start timer", "stop", "stop timer", "adrawgraph", "set 1st metadata key", "set 1st foreground color expression", "0xffff0000", "set 2nd metadata key", "set 2nd foreground color expression", "0xff00ff00", "set 3rd metadata key", "set 3rd foreground color expression", "0xffff00ff", "set 4th metadata key", "set 4th foreground color expression", "0xffffff00", "set background color", "set minimal value", "set maximal value", "set graph mode", "draw bars", "draw dots", "draw lines", "set slide mode", "draw new frames", "set graph size", "900x256", "Summary:\n\n  Integrated loudness:\n    I:         %5.1f LUFS\n    Threshold: %5.1f LUFS\n\n  Loudness range:\n    LRA:       %5.1f LU\n    Threshold: %5.1f LUFS\n    LRA low:   %5.1f LUFS\n    LRA high:  %5.1f LUFS", "\n\n  Sample peak:\n    Peak:      %5.1f dBFS", "\n\n  True peak:\n    Peak:      %5.1f dBFS", "Video size %dx%d is too small, minimum size is 640x480\n", "M:%6.1f S:%6.1f     I:%6.1f LUFS     LRA:%6.1f LU     ", "%.3f", "lavfi.r128.M", "lavfi.r128.S", "lavfi.r128.I", "lavfi.r128.LRA", "lavfi.r128.LRA.low", "lavfi.r128.LRA.high", "lavfi.r128.sample_peaks_ch%d", "lavfi.r128.true_peaks_ch%d", "t: %-10s M:%6.1f S:%6.1f     I:%6.1f LUFS     LRA:%6.1f LU", "  SPK:", " %5.1f", "  FTPK:", "  TPK:", "out%d", "EBU +%d scale\n", "ebur128", "set video output", "640x480", "set scale meter (+9 to +18)", "framelog", "force frame logging level", "information logging level", "verbose", "verbose logging level", "set peak mode", "disable any peak mode", "enable peak-sample mode", "true", "enable true-peak mode", "dualmono", "treat mono input files as dual-mono", "panlaw", "set a specific pan law for dual-mono files", "Parameters for input link %s (size %dx%d, SAR %d:%d) do not match the corresponding output link parameters (%dx%d, SAR %d:%d)\n", "libavfilter/f_interleave.c", "queue:%d -> frame time:%f\n", "NOPTS value for input frame cannot be accepted, frame discarded\n", "frame pts:%f -> queue idx:%d available:%d\n", "ainterleave", "set number of inputs", "number of loops", "max number of frames to loop", "set the loop start frame", "aloop", "max number of samples to loop", "set the loop start sample", "Metadata key must be set\n", "Missing metadata value\n", "libavfilter/f_metadata.c", "expr option not set\n", "Error while parsing expression '%s'\n", "Could not open file %s: %s\n", "frame:%-4ld pts:%-7s pts_time:%-7s\n", "%s=%s\n", "set a mode of operation", "select frame", "add new metadata", "modify", "modify metadata", "delete", "delete metadata", "print", "print metadata", "set metadata key", "set metadata value", "function for comparing values", "same_str", "starts_with", "equal", "greater", "set expression for expr function", "set file where to print metadata information", "ametadata", "VALUE1", "VALUE2", " (no-op)", "%s -> %s%s\n", "aperms", "select permissions mode", "do nothing", "set all output frames read-only", "set all output frames writable", "toggle", "switch permissions", "random", "set permissions randomly", "set the seed for the random mode", "time discontinuity detected: %li us, resetting\n", "sleeping %li us\n", "arealtime", "sleep time limit", "areverse", "lavf.concatdec.start_time", "lavf.concatdec.duration", "lavfi.scene_score", "n:%f pts:%f t:%f key:%d", " interlace_type:%c pict_type:%c scene:%f", " samples_n:%d consumed_samples_n:%f", " -> select:%f select_out:%d\n", "scene", "output%d", "Scene detection is ignored in aselect filter\n", "set an expression to use for selecting frames", "set the number of outputs", "aselect", "start_pts", "prev_pts", "prev_selected_pts", "start_t", "prev_t", "prev_selected_t", "pict_type", "PICT_TYPE_I", "PICT_TYPE_P", "PICT_TYPE_B", "PICT_TYPE_S", "PICT_TYPE_SI", "PICT_TYPE_SP", "PICT_TYPE_BI", "interlace_type", "PROGRESSIVE", "TOPFIRST", "BOTTOMFIRST", "consumed_samples_n", "prev_selected_n", "concatdec_select", "One and only one of the filename or commands options must be specified\n", " \f\t\n\r", " \f\t\n\r,;", "Invalid start time specification '%s' in interval #%d\n", "Invalid end time specification '%s' in interval #%d\n", "Invalid end time '%s' in interval #%d: cannot be lesser than start time '%s'\n", "Unknown flag '%s' in interval #%d, command #%d\n", "Invalid flags char '%c' in interval #%d, command #%d\n", "Missing flag terminator or extraneous data found at the end of flags in interval #%d, command #%d\n", "No target specified in interval #%d, command #%d\n", "No command specified in interval #%d, command #%d\n", "Could not (re)allocate command array\n", "Missing separator or extraneous data found at the end of interval #%d, in command #%d\n", "Command was parsed as: flags:[%s] target:%s command:%s arg:%s\n", "No interval specified for interval #%d\n", "Missing terminator or extraneous data found at the end of interval #%d\n", "Could not (re)allocate intervals array\n", "No commands were specified\n", "Parsed commands:\n", "start_time:%f end_time:%f index:%d\n", "    [%s] target:%s command:%s arg:%s index:%d\n", "[%s] interval #%d start_ts:%f end_ts:%f ts:%f\n", "Processing command #%d target:%s command:%s arg:%s\n", "Command reply for command #%d: ret:%s res:%s\n", "asendcmd", "set commands", "set commands file", "mapping definition is not set\n", "n=%d map=%p p=%p\n", "Unable to map more than the %d input pads available\n", "Input stream index %d doesn't exist (there is only %d input streams defined)\n", "Map input stream %d to output stream %d\n", "invalid mapping\n", "%d map set\n", "config output link %d with settings from input link %d\n", "%sput%d", "Add %s pad %s\n", "astreamselect", "Configured with %d inpad and %d outpad\n", "number of input streams", "input indexes to remap to outputs", "frame->nb_samples > offset", "libavfilter/fifo.c", "request_samples changed before the buffer was returned.\n", "Invalid pixel format '%s'\n", "Invalid sample format '%s'\n", "Invalid time base '%s'\n", "Invalid sample rate '%s'\n", "Invalid channel layout '%s'\n", "frame->data[1] != ((void *)0)", "libavfilter/framepool.c", "framesync", "level <= fs->sync_level", "libavfilter/framesync.c", "Sync level %u\n", "!fs->in[in].have_next", "Impossible to set time base\n", "Selected %d/%d time base\n", "!fs->frame_ready", "fs->on_event", "[%dx%d %d:%d %s]", "[%dHz %s:%s]", "%s:%s", "%*s%-*s", "%*s(%s)%*s", "sws_flags=", "sws_flags not terminated with ';'.\n", "Bad (empty?) label found in the following: \"%s\".\n", "Mismatched '[' found in the following: \"%s\".\n", " \n\t\r", "=,;[", "[],;", "Parsed_%s_%d", "No such filter: '%s'\n", "Error creating filter '%s'\n", "Error initializing filter '%s'", " with args '%s'", "No output pad can be associated to link label '%s'.\n", "Cannot create the link %s:%d -> %s:%d\n", "Too many inputs specified for the \"%s\" filter.\n", "Unable to parse graph description substring: \"%s\"\n", "Not enough inputs specified for the \"%s\" filter.\n", "Invalid filterchain containing an unlabelled output pad: \"%s\"\n", "[in]", "[out]", "image2", "Failed to open input file '%s'\n", "Find stream info failed\n", "Failed to find codec\n", "Failed to open codec\n", "Failed to alloc frame\n", "Failed to read frame from file\n", "Failed to decode image from file\n", "Error loading image file '%s'\n", "Impossible to create scale context for the conversion fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n", "TB:%f FRAME_RATE:%f SAMPLE_RATE:%f\n", "N:%ld PTS:%s T:%f POS:%s", " INTERLACED:%ld", " NB_SAMPLES:%ld NB_CONSUMED_SAMPLES:%ld", " -> PTS:%s T:%f\n", "asetpts", "Expression determining the frame timestamp", "FRAME_RATE", "INTERLACED", "NB_CONSUMED_SAMPLES", "NB_SAMPLES", "PREV_INPTS", "PREV_INT", "PREV_OUTPTS", "PREV_OUTT", "SAMPLE_RATE", "STARTPTS", "STARTT", "RTCTIME", "RTCSTART", "Invalid expression '%s' for timebase.\n", "Invalid non-positive values for the timebase num:%d or den:%d.\n", "tb:%d/%d -> tb:%d/%d\n", "tb:%d/%d pts:%ld -> tb:%d/%d pts:%ld\n", "asettb", "set expression determining the output timebase", "intb", "AVTB", "asplit", "set number of outputs", "%i|%li|%i %1s", "get_duration", "Unable to loop: %s\n", "Stream finished, looping.\n", "Decode error: %s\n", "Discontinuity in stream:%d diff:%ld\n", "Format changed %s -> %s, discarding frame\n", "matched only already used streams", "did not match any stream", "No filename provided!\n", "amovie", "Loop with several streams is currently unsupported\n", "Failed to avformat_open_input '%s'\n", "Failed to find stream info\n", "%s: seek value overflow with start_time:%ld seek_point:%ld\n", "%s: could not seek to position %ld\n", "d%1[av]%d%c", "No %s stream with index '%d' found\n", "Invalid stream specifier \"%s\"\n", "Ambiguous stream specifier \"%s\", using #%d\n", "Stream specifier \"%s\" %s\n", "Stream specifier \"%s\" matched a %s stream,currently unsupported by libavfilter\n", "Channel layout is not set in stream %d, and could not be guessed from the number of channels (%d)\n", "Channel layout is not set in output stream %d, guessed channel layout is '%s'\n", "Failed to find any codec\n", "seek_point:%li format_name:%s file_name:%s stream_index:%d\n", "format_name", "set format name", "stream_index", "set stream index", "seek_point", "set seekpoint (seconds)", "set streams", "set loop count", "discontinuity", "set discontinuity threshold", "start_sample < end_sample || (start_sample == end_sample && !frame->nb_samples)", "libavfilter/trim.c", "atrim", "Timestamp of the first frame that should be passed", "starti", "Timestamp of the first frame that should be dropped again", "endi", "Timestamp of the first frame that should be  passed", "end_pts", "Maximum duration of the output", "durationi", "Number of the first audio sample that should be passed to the output", "end_sample", "Number of the first audio sample that should be dropped again", "start_frame", "Number of the first frame that should be passed to the output", "Number of the first frame that should be dropped again", "Magnitude and Phase sizes differ (%dx%d vs %dx%d).\n", "Magnitude and Phase time bases differ (%d/%d vs %d/%d).\n", "Magnitude and Phase framerates differ (%d/%d vs %d/%d).\n", "spectrumsynth", "set channels", "set input amplitude scale", "set input sliding mode", "consume old columns with new", "consume only most right column", "consume full frames", "consume only most left column", "alphamerge", "num:den syntax is deprecated, please use num/den or named options instead\n", "Unable to parse ratio numerator \"%s\"\n", "Error when evaluating the expression '%s'\n", "Invalid string '%s' for aspect ratio\n", "w:%d h:%d dar:%d/%d sar:%d/%d -> dar:%d/%d sar:%d/%d\n", "w:%d h:%d sar:%d/%d dar:%d/%d -> sar:%d/%d dar:%d/%d\n", "setsar", "set sample (pixel) aspect ratio", "set max value for nominator or denominator in the ratio", "setdar", "set display aspect ratio", "dar_den", "set threshold A for 1st plane", "set threshold B for 1st plane", "set threshold A for 2nd plane", "set threshold B for 2nd plane", "set threshold A for 3rd plane", "set threshold B for 3rd plane", "set how many frames to use", "lavfi.bbox.x1", "lavfi.bbox.x2", "lavfi.bbox.y1", "lavfi.bbox.y2", "lavfi.bbox.w", "lavfi.bbox.h", " x1:%d x2:%d y1:%d y2:%d w:%d h:%d crop=%d:%d:%d:%d drawbox=%d:%d:%d:%d", "bbox", "min_val", "set minimum luminance value for bounding box", "black_min_duration:%s pixel_black_th:%f pixel_black_th_i:%d picture_black_ratio_th:%f\n", "frame:%ld picture_black_ratio:%f pts:%s t:%s type:%c\n", "lavfi.black_start", "lavfi.black_end", "blackdetect", "set minimum detected black duration in seconds", "black_min_duration", "picture_black_ratio_th", "set the picture black ratio threshold", "pic_th", "pixel_black_th", "set the pixel black threshold", "pix_th", "frame:%u pblack:%u pts:%ld t:%f type:%c last_keyframe:%d\n", "lavfi.blackframe.pblack", "blackframe", "percentage of the pixels that have to be below the threshold for the frame to be considered black", "threshold below which a pixel value is considered black", "inputs must be of same pixel format\n", "First input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding second input link %s parameters (%dx%d, SAR %d:%d)\n", "c0_mode", "set component #0 blend mode", "c1_mode", "set component #1 blend mode", "c2_mode", "set component #2 blend mode", "c3_mode", "set component #3 blend mode", "all_mode", "set blend mode for all components", "addition", "addition128", "burn", "darken", "difference128", "divide", "dodge", "exclusion", "freeze", "glow", "hardlight", "hardmix", "lighten", "linearlight", "multiply", "multiply128", "negation", "overlay", "phoenix", "pinlight", "reflect", "screen", "softlight", "subtract", "vividlight", "c0_expr", "set color component #0 expression", "c1_expr", "set color component #1 expression", "c2_expr", "set color component #2 expression", "c3_expr", "set color component #3 expression", "all_expr", "set expression for all color components", "c0_opacity", "set color component #0 opacity", "c1_opacity", "set color component #1 opacity", "c2_opacity", "set color component #2 opacity", "c3_opacity", "set color component #3 opacity", "all_opacity", "set opacity for all color components", "force termination when the shortest input terminates", "repeatlast", "repeat last bottom frame", "BOTTOM", "Error when evaluating luma radius expression '%s'\n", "Error when evaluating chroma radius expression '%s'\n", "Error when evaluating alpha radius expression '%s'\n", "luma_radius:%d luma_power:%d chroma_radius:%d chroma_power:%d alpha_radius:%d alpha_power:%d w:%d chroma_w:%d h:%d chroma_h:%d\n", "Invalid luma radius value %d, must be >= 0 and <= %d\n", "Invalid chroma radius value %d, must be >= 0 and <= %d\n", "Invalid alpha radius value %d, must be >= 0 and <= %d\n", "Luma radius expression is not set.\n", "boxblur", "luma_radius", "Radius of the luma blurring box", "luma_power", "How many times should the boxblur be applied to luma", "chroma_radius", "Radius of the chroma blurring box", "chroma_power", "How many times should the boxblur be applied to chroma", "alpha_radius", "Radius of the alpha blurring box", "alpha_power", "How many times should the boxblur be applied to alpha", "Video of less than 3 columns or lines is not supported\n", "libavfilter/vf_bwdif.c", "Failed to reallocate frame\n", "Reallocating frame due to differing stride\n", "bwdif", "specify the interlacing mode", "send_frame", "send one frame for each frame", "send_field", "send one frame for each field", "specify the assumed picture field parity", "assume top field first", "assume bottom field first", "auto detect parity", "specify which frames to deinterlace", "deinterlace all frames", "only deinterlace frames marked as interlaced", "set the chromakey key color", "similarity", "set the chromakey similarity value", "set the chromakey key blend value", "color parameter is in yuv instead of rgb", "libavfilter/vf_ciescope.c", "ciescope", "set color system", "NTSC 1953 Y'I'O' (ITU-R BT.470 System M)", "EBU Y'U'V' (PAL/SECAM) (ITU-R BT.470 System B, G)", "smpte", "SMPTE-C RGB", "SMPTE-240M Y'PbPr", "apple", "Apple RGB", "widergb", "Adobe Wide Gamut RGB", "cie1931", "CIE 1931 RGB", "ITU.BT-709 Y'CbCr", "rec709", "uhdtv", "ITU-R.BT-2020", "rec2020", "set cie system", "CIE 1931 xyY", "CIE 1960 UCS", "CIE 1976 Luv", "gamuts", "set what gamuts to draw", "set ciescope size", "set ciescope intensity", "corrgamma", "showwhite", "set motion vectors to visualize", "mv_type", "set motion vectors type", "forward predicted MVs", "backward predicted MVs", "frame_type", "set frame types to visualize motion vectors of", "colorbalance", "set red shadows", "set green shadows", "set blue shadows", "set red midtones", "set green midtones", "set blue midtones", "set red highlights", "set green highlights", "set blue highlights", "colorchannelmixer", "set the red gain for the red channel", "set the green gain for the red channel", "set the blue gain for the red channel", "set the alpha gain for the red channel", "set the red gain for the green channel", "set the green gain for the green channel", "set the blue gain for the green channel", "set the alpha gain for the green channel", "set the red gain for the blue channel", "set the green gain for the blue channel", "set the blue gain for the blue channel", "set the alpha gain for the blue channel", "set the red gain for the alpha channel", "set the green gain for the alpha channel", "set the blue gain for the alpha channel", "set the alpha gain for the alpha channel", "colorkey", "set the colorkey key color", "set the colorkey similarity value", "set the colorkey key blend value", "colorlevels", "rimin", "set input red black point", "gimin", "set input green black point", "bimin", "set input blue black point", "aimin", "set input alpha black point", "rimax", "set input red white point", "gimax", "set input green white point", "bimax", "set input blue white point", "aimax", "set input alpha white point", "romin", "set output red black point", "gomin", "set output green black point", "bomin", "set output blue black point", "aomin", "set output alpha black point", "romax", "set output red white point", "gomax", "set output green white point", "bomax", "set output blue white point", "aomax", "set output alpha white point", "Input frame does not specify a supported colorspace, and none has been specified as source either\n", "Unspecified destination color space\n", "Source and destination color space must not be identical\n", "colormatrix", "bt601", "set source color matrix", "color_mode", "set destination color matrix", "set BT.709 colorspace", "set FCC colorspace   ", "set BT.601 colorspace", "bt470", "set BT.470 colorspace", "set SMTPE-170M colorspace", "set SMPTE-240M colorspace", "set BT.2020 colorspace", "Unsupported input format %d (%s) or bitdepth (%d)\n", "Unsupported output format %d (%s) or bitdepth (%d)\n", "Unsupported input primaries %d (%s)\n", "Please specify output primaries\n", "Unsupported output color property %d\n", "Unsupported output primaries %d (%s)\n", "Unsupported input transfer characteristics %d (%s)\n", "Please specify output transfer characteristics\n", "Unsupported output transfer characteristics %d (%s)\n", "Unsupported input colorspace %d (%s)\n", "Unsupported input color range %d (%s)\n", "Unsupported output color range %d (%s)\n", "Set all color properties together", "bt601-6-525", "bt601-6-625", "Output colorspace", "bt2020ncl", "Output color range", "Output color primaries", "Output transfer characteristics", "bt2020-10", "bt2020-12", "Output pixel format", "yuv420p", "yuv420p10", "yuv420p12", "yuv422p12", "yuv444p", "yuv444p10", "yuv444p12", "Ignore primary chromaticity and gamma correction", "Dithering mode", "wpadapt", "Whitepoint adaptation method", "bradford", "vonkries", "identity", "convolution", "set matrix for 1st plane", "0 0 0 0 1 0 0 0 0", "set matrix for 2nd plane", "set matrix for 3rd plane", "set matrix for 4th plane", "0rdiv", "set rdiv for 1st plane", "1rdiv", "set rdiv for 2nd plane", "2rdiv", "set rdiv for 3rd plane", "3rdiv", "set rdiv for 4th plane", "0bias", "set bias for 1st plane", "1bias", "set bias for 2nd plane", "2bias", "set bias for 3rd plane", "3bias", "set bias for 4th plane", "cover filename not set\n", "cover image is not a YUV420 image\n", "lavfi.rect.x", "lavfi.rect.y", "lavfi.rect.w", "lavfi.rect.h", "cover_rect", "cover", "cover bitmap filename", "set removal mode", "cover area with bitmap", "blur area", "Too big value or invalid expression for out_w/ow or out_h/oh. Maybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n", "w:%d h:%d sar:%d/%d -> w:%d h:%d sar:%d/%d\n", "Invalid too big or non positive size for width '%d' or height '%d'\n", "out_w", "out_h", "n:%d t:%f pos:%f x:%d y:%d x+w:%d y+h:%d\n", "set the width crop area expression", "set the height crop area expression", "set the x crop area expression", "(in_w-out_w)/2", "set the y crop area expression", "(in_h-out_h)/2", "keep_aspect", "keep aspect ratio", "total:%d\n", "lavfi.cropdetect.x1", "lavfi.cropdetect.x2", "lavfi.cropdetect.y1", "lavfi.cropdetect.y2", "lavfi.cropdetect.w", "lavfi.cropdetect.h", "lavfi.cropdetect.x", "lavfi.cropdetect.y", "x1:%d x2:%d y1:%d y2:%d w:%d h:%d x:%d y:%d pts:%ld t:%f crop=%d:%d:%d:%d\n", "cropdetect", "Threshold below which the pixel is considered black", "Value by which the width/height should be divisible", "Recalculate the crop area after this many frames", "reset_count", "max_outliers", "Threshold count of outliers", "%f/%f ", "curves %d (intid=%d) [%d points]: [%s]\n", "Invalid key point coordinates (%f;%f), x and y must be in the [0;1] range.\n", "Key point coordinates (%f;%f) and (%f;%f) are too close from each other or not strictly increasing on the x-axis\n", "libavfilter/vf_curves.c", "point->next", "x_start >= 0 && x_start <= 255 && x_end >= 0 && x_end <= 255", "f(%f)=%f -> y[%d]=%d\n", "#%d points:", " (%f;%f)", "#%d values:", " %02X", "0/1 0.129/1 0.466/0.498 0.725/0 1/0", "0/1 0.109/1 0.301/0.498 0.517/0 1/0", "0/1 0.098/1 0.235/0.498 0.423/0 1/0", "0.25/0.156 0.501/0.501 0.686/0.745", "0.25/0.188 0.38/0.501 0.745/0.815 1/0.815", "0.231/0.094 0.709/0.874", "0.5/0.4", "0.149/0.066 0.831/0.905 0.905/0.98", "0.4/0.5", "0.305/0.286 0.694/0.713", "0.286/0.219 0.639/0.643", "0/1 1/0", "0.301/0.196 0.592/0.6 0.686/0.737", "0/0.11 0.42/0.51 1/0.95", "0.50/0.48", "0/0.22 0.49/0.44 1/0.8", "select a color curves preset", "preset_name", "color_negative", "cross_process", "darker", "increase_contrast", "lighter", "linear_contrast", "medium_contrast", "strong_contrast", "vintage", "master", "set master points coordinates", "set red points coordinates", "set green points coordinates", "set blue points coordinates", "set points coordinates for all components", "psfile", "set Photoshop curves file name", "%04X\n", "datascope", "set output size", "set x offset", "set y offset", "set scope mode", "color2", "draw column/row numbers", "Overlap value can not except %d with a block size of %dx%d\n", "libavfilter/vf_dctdnoiz.c", "The last %d horizontal pixels won't be denoised\n", "The last %d vertical pixels won't be denoised\n", "threads: [max=%d hmax=%d user=%d] => %d\n", "dctdnoiz", "sigma", "set noise sigma constant", "set number of block overlapping pixels", "set coefficient factor expression", "set the block size, expressed in bits", "1thr", "set 1st plane threshold", "2thr", "set 2nd plane threshold", "3thr", "set 3rd plane threshold", "4thr", "set 4th plane threshold", "set range", "set direction", "set blur", " dup", " lowest", " [DROP]", "1/%d frame drop:\n", "  #%d: totdiff=%08lx maxbdiff=%08lx%s%s%s%s\n", "The input needs a constant frame rate; current rate of %d/%d is invalid\n", "FPS: %d/%d -> %d/%d\n", "clean_src", "blockx and blocky settings must be power of two\n", "cycle", "set the number of frame from which one will be dropped", "dupthresh", "set duplicate threshold", "scthresh", "set scene change threshold", "blockx", "set the size of the x-axis blocks used during metric calculations", "blocky", "set the size of the y-axis blocks used during metric calculations", "ppsrc", "mark main input as a pre-processed input and activate clean source input stream", "set whether or not chroma is considered in the metric calculations", "cycle:%d\n", "%ld\t", "next=%ld, new=%ld\n", "dejudder", "set the length of the cycle to use for dejuddering", "Option %s was not set.\n", "Note: default band value was changed from 4 to 1.\n", "Option band is deprecated.\n", "x:%d y:%d, w:%d h:%d band:%d show:%d\n", "Logo area is outside of the frame.\n", "delogo", "set logo x position", "set logo y position", "set logo width", "set logo height", "set delogo area band size", "show delogo area", "rx must be a multiple of 16\n", "Ori x, Avg x, Fin x, Ori y, Avg y, Fin y, Ori angle, Avg angle, Fin angle, Ori zoom, Avg zoom, Fin zoom\n", "OpenCL support was not enabled in this build, cannot be selected\n", "cx: %d, cy: %d, cw: %d, ch: %d, rx: %d, ry: %d, edge: %d blocksize: %d contrast: %d search: %d\n", "%f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", "deshake", "set x for the rectangular search area", "set y for the rectangular search area", "set width for the rectangular search area", "set height for the rectangular search area", "set edge mode", "blank", "fill zeroes at blank locations", "original image at blank locations", "extruded edge value at blank locations", "mirror", "mirrored edge at blank locations", "set motion search blocksize", "set contrast threshold for blocks", "set search strategy", "smode", "exhaustive", "less exhaustive search", "set motion search detailed log file name", "opencl", "use OpenCL filtering capabilities", "No pattern provided.\n", "Provided pattern includes non-numeric characters.\n", "Provided start_frame is too big.\n", "Detelecine pattern %s removes up to %d frames per frame, pts advance factor: %d/%d\n", "TB: %d/%d -> %d/%d\n", "detelecine", "first_field", "select first field", "select top field first", "select bottom field first", "pattern that describe for how many fields a frame is to be displayed", "position of first frame with respect to the pattern if stream is cut", "displace", "ymap", "smear", "Size values less than 0 are not acceptable.\n", "x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\n", "Error when evaluating the expression '%s'.\n", "drawgrid", "set horizontal offset", "set vertical offset", "set width of grid cell", "set height of grid cell", "set color of the grid", "set grid line thickness", "drawbox", "set horizontal position of the left box edge", "set vertical position of the top box edge", "set width of the box", "set height of the box", "set color of the box", "set the box thickness", "libavfilter/vf_edgedetect.c", "edgedetect", "set high threshold", "set low threshold", "wires", "white/gray wires on black", "colormix", "mix colors", "elbg", "codebook_length", "set codebook length", "nb_steps", "set max number of steps used to compute the mapping", "set the random seed", "pal8", "set the pal8 output", "Error when parsing the expression '%s' for %s\n", "brightness", "gamma_r", "gamma_g", "gamma_b", "gamma_weight", "set the contrast adjustment, negative values give a negative image", "set the brightness adjustment", "set the saturation adjustment", "set the initial gamma value", "gamma value for red", "gamma value for green", "gamma value for blue", "set the gamma weight which reduces the effect of gamma on bright areas", "init", "eval expressions once during initialization", "eval expressions per-frame", "alphaextract", "extractplanes", "set planes", "set luma plane", "set u plane", "set v plane", "set red plane", "set green plane", "set blue plane", "set alpha plane", "type:%s start_frame:%d nb_frames:%d alpha:%d\n", "type:%s start_time:%f duration:%f alpha:%d\n", "libavfilter/vf_fade.c", "'in' or 'out' for fade-in/fade-out", "Number of the first frame to which to apply the effect.", "nb_frames", "Number of frames to which the effect should be applied.", "fade alpha if it is available on the input", "Number of seconds of the beginning of the effect.", "Duration of the effect in seconds.", "set color", "weight_Y", "weight_U", "weight_V", "dc_Y", "adjust gain in Y plane", "dc_U", "adjust gain in U plane", "dc_V", "adjust gain in V plane", "set luminance expression in Y plane", "set chrominance expression in U plane", "set chrominance expression in V plane", "w:%d h:%d type:%s -> w:%d h:%d\n", "set field type (top or bottom)", "field_type", "select top field", "select bottom field", "%ld,%ld %c", "%ld,%ld", "Invalid entry at line %ld.\n", "Out of range frames %ld and/or %ld on line %ld for %ld. input frame.\n", "Out of range %ld and/or %ld on line %ld for %ld. input frame.\n", "Missing entry for %ld. input frame.\n", "libavfilter/vf_fieldhint.c", "Invalid hint: %c.\n", "Hint file must be set.\n", "fieldhint", "set hint file", "set hint mode", "absolute", "relative", "Combed pixel should not be larger than blockx x blocky\n", "libavfilter/vf_fieldmatch.c", "fm->prv && fm->src && fm->nxt", "fm->prv2 && fm->src2 && fm->nxt2", "order == 0 || order == 1 || field == 0 || field == 1", "COMBS: %3d %3d %3d %3d %3d\n", "Frame #%ld at %s is still interlaced\n", "SC:%d | COMBS: %3d %3d %3d %3d %3d (combpel=%d) match=%d combed=%s\n", "fieldmatch", "specify the assumed field order", "set the matching mode or strategy to use", "2-way match (p/c)", "pc_n", "2-way match + 3rd match on combed (p/c + u)", "pc_u", "2-way match + 3rd match (same order) on combed (p/c + u)", "pc_n_ub", "2-way match + 3rd match on combed + 4th/5th matches if still combed (p/c + u + u/b)", "3-way match (p/c/n)", "pcn_ub", "3-way match + 4th/5th matches on combed (p/c/n + u/b)", "set the field to match from", "automatic (same value as 'order')", "mchroma", "set whether or not chroma is included during the match comparisons", "define an exclusion band which excludes the lines between y0 and y1 from the field matching decision", "set scene change detection threshold", "combmatch", "set combmatching mode", "disable combmatching", "enable combmatching only on scene change", "enable combmatching all the time", "combdbg", "enable comb debug", "dbglvl", "no forced calculation", "calculate p/c/n", "pcnub", "calculate p/c/n/u/b", "set the area combing threshold used for combed frame detection", "set whether or not chroma is considered in the combed frame decision", "set the x-axis size of the window used during combed frame detection", "set the y-axis size of the window used during combed frame detection", "combpel", "set the number of combed pixels inside any of the blocky by blockx size blocks on the frame for the frame to be detected as combed", "progressive frame", "frame with same field order", "Skipping %s.\n", "picture will move %s one line\n", "fieldorder", "output field order", "object filename not set\n", "object image is not a grayscale image\n", "score != 0", "libavfilter/vf_find_rect.c", "Found at %d %d score %f\n", "find_rect", "object", "object bitmap filename", "set mipmaps", "xmin", "ymin", "xmax", "ymax", "Empty output format string.\n", "A '|'-separated list of pixel formats", "%d frames in, %d frames out; %d frames dropped, %d frames duplicated.\n", "fps=%d/%d\n", "Set first pts to (in:%ld out:%ld)\n", "Discarding initial frame(s) with no timestamp.\n", "Dropping %d frame(s).\n", "Duplicating frame.\n", "A string describing desired output framerate", "Assume the first PTS should be this value.", "set rounding method for timestamps", "round towards 0", "round away from 0", "round towards -infty", "round towards +infty", "round to nearest", "rxxxu&", "Left and right time bases differ (%d/%d vs %d/%d).\n", "Left and right framerates differ (%d/%d vs %d/%d).\n", "Unknown packing mode.", "framepack", "Frame pack output format", "Views are packed next to each other", "Views are packed on top of each other", "frameseq", "Views are one after the other", "Views are interleaved by lines", "Views are interleaved by columns", "next_source()\n", "next_source() unlink %d\n", "next_source() copy %d to %d\n", "next_source() make %d null\n", "config_output()\n", "config_output() input time base:%u/%u (%f)\n", "time base:%u/%u -> %u/%u exact:%d\n", "Timebase conversion is not exact\n", "config_output() output time base:%u/%u (%f) w:%d h:%d\n", "fps -> fps:%u/%u scene score:%f interpolate start:%d end:%d\n", "set_srce_frame_output_pts()\n", "set_work_frame_pts()\n", "s->srce[s->next]", "libavfilter/vf_framerate.c", "s->srce[s->crnt]", "set_work_frame_pts() srce crnt pts:%ld\n", "set_work_frame_pts() srce next pts:%ld\n", "set_work_frame_pts() srce prev pts:%ld\n", "set_work_frame_pts() initial average srce pts:%ld\n", "set_work_frame_pts() average srce pts:%ld\n", "set_work_frame_pts() average srce pts:%ld at dest time base:%u/%u\n", "set_work_frame_pts() average dest pts delta:%ld\n", "set_work_frame_pts() calculated pts:%ld at dest time base:%u/%u\n", "process_work_frame()\n", "process_work_frame() pending_input_frames %d\n", "process_work_frame() srce prev pts:%ld\n", "process_work_frame() srce crnt pts:%ld\n", "process_work_frame() srce next pts:%ld\n", "process_work_frame() no current frame cached: move on to next frame, do not output a frame\n", "process_work_frame() work crnt pts:%ld\n", "process_work_frame() work next pts:%ld\n", "process_work_frame() srce prev pts:%ld at dest time base:%u/%u\n", "process_work_frame() srce crnt pts:%ld at dest time base:%u/%u\n", "process_work_frame() srce next pts:%ld at dest time base:%u/%u\n", "process_work_frame() work crnt pts >= srce next pts: SKIP FRAME, move on to next frame, do not output a frame\n", "process_work_frame() interpolate:%f/256\n", "process_work_frame() source is:NEXT\n", "process_work_frame() source is:PREV\n", "process_work_frame() interpolate source is:NEXT\n", "process_work_frame() interpolate source is:PREV\n", "process_work_frame() CUT - DON'T INTERPOLATE\n", "process_work_frame() COPY to the work frame\n", "process_work_frame() REPEAT FRAME\n", "process_work_frame() CONSUME FRAME, move to next frame\n", "process_work_frame() output a frame\n", "request_frame() call source's request_frame()\n", "request_frame() source's request_frame() returned error:%d\n", "request_frame() source's request_frame() returned:%d\n", "request_frame() REPEAT or FLUSH\n", "request_frame() nothing else to do, return:EOF\n", "request_frame() FLUSH\n", "request_frame() copy:%d to:%d\n", "Interlaced frame found - the output will not be correct.\n", "get_scene_score16()\n", "get_scene_score16() process\n", "get_scene_score16() result is:%f\n", "blend_frames16() interpolate scene score:%f\n", "blend_frames16() INTERPOLATE to create work frame\n", "get_scene_score()\n", "get_scene_score() process\n", "get_scene_score() result is:%f\n", "blend_frames8() interpolate scene score:%f\n", "blend_frames8() INTERPOLATE to create work frame\n", "required output frames per second rate", "interp_start", "point to start linear interpolation", "interp_end", "point to end linear interpolation", "scene change level", "set flags", "scene_change_detect", "enable scene change detection", "step:%d frame_rate:%d/%d(%f) -> frame_rate:%d/%d(%f)\n", "framestep", "set frame step", "w * h <= fspp->non_b_qp_alloc_size", "libavfilter/vf_fspp.c", "fspp", "set quality", "force a constant quantizer parameter", "set filter strength", "use_bframe_qp", "use B-frames' QP", "A luminance or RGB expression is mandatory\n", "Either YCbCr or RGB but not both must be specified\n", "g(X,Y)", "b(X,Y)", "r(X,Y)", "libavfilter/vf_geq.c", "lum_expr", "set luminance expression", "cb_expr", "set chroma blue expression", "cr_expr", "set chroma red expression", "alpha_expr", "set alpha expression", "red_expr", "set red expression", "green_expr", "set green expression", "blue_expr", "set blue expression", "threshold:%.2f radius:%d\n", "gradfun", "The maximum amount by which the filter will change any one pixel.", "The neighborhood to fit the gradient to.", "(hflip", "strength:%0.3f intensity:%0.3f antibanding:%d\n", "histeq", "set the strength", "set the intensity", "set the antibanding level", "apply no antibanding", "weak", "apply weak antibanding", "strong", "apply strong antibanding", "level_height", "set level height", "scale_height", "set scale height", "display_mode", "parade", "levels_mode", "set levels mode", "set color components to display", "hqdn3d", "luma_spatial", "spatial luma strength", "chroma_spatial", "spatial chroma strength", "luma_tmp", "temporal luma strength", "chroma_tmp", "temporal chroma strength", "set scale factor", "H and h options are incompatible and cannot be specified at the same time\n", "H_expr:%s h_deg_expr:%s s_expr:%s b_expr:%s\n", "Saturation value not in range [%d,%d]: clipping value to %0.1f\n", "Brightness value not in range [%d,%d]: clipping value to %0.1f\n", "H:%0.1f*PI h:%0.1f s:%0.1f b:%0.f t:%0.1f n:%d\n", "set the hue angle degrees expression", "set the saturation expression", "set the hue angle radians expression", "set the brightness expression", "Invalid output format %s for hwframe download.\n", "The input must have a hardware frame reference.\n", "Input frames must have hardware context.\n", "Input frame is not the in the configured hwframe context.\n", "Failed to download frame: %d.\n", "hwdownload", "A hardware device reference is required to upload frames to.\n", "No input hwframe context.\n", "Surface format is %s.\n", "Failed to allocate frame to upload to.\n", "Failed to upload frame: %d.\n", "hwupload", "auto-inserted", "Repeated Fields: Neither:%6ld Top:%6ld Bottom:%6ld\n", "Single frame detection: TFF:%6ld BFF:%6ld Progressive:%6ld Undetermined:%6ld\n", "Multi frame detection: TFF:%6ld BFF:%6ld Progressive:%6ld Undetermined:%6ld\n", "%ld.%0*ld", "Repeated Field:%12s, Single frame:%12s, Multi frame:%12s\n", "lavfi.idet.repeated.current_frame", "lavfi.idet.repeated.neither", "lavfi.idet.repeated.top", "lavfi.idet.repeated.bottom", "lavfi.idet.single.current_frame", "lavfi.idet.single.tff", "lavfi.idet.single.bff", "lavfi.idet.single.progressive", "lavfi.idet.single.undetermined", "lavfi.idet.multiple.current_frame", "lavfi.idet.multiple.tff", "lavfi.idet.multiple.bff", "lavfi.idet.multiple.progressive", "lavfi.idet.multiple.undetermined", "Final flag accuracy %d\n", "idet", "intl_thres", "set interlacing threshold", "prog_thres", "set progressive threshold", "rep_thres", "set repeat threshold", "half_life", "half life of cumulative statistics", "analyze_interlaced_flag", "set number of frames to use to determine if the interlace flag is accurate", "luma_mode", "select luma mode", "deinterleave", "chroma_mode", "select chroma mode", "alpha_mode", "select alpha mode", "luma_swap", "swap luma fields", "chroma_swap", "swap chroma fields", "alpha_swap", "swap alpha fields", "input video height is too small\n", "Lowpass filter is disabled, the resulting video will be aliased rather than interlaced.\n", "%s interlacing %s lowpass filter\n", "cols >= 0 || lines >= 0", "libavfilter/vf_interlace.c", "video is already interlaced, adjusting framerate only\n", "scanning mode", "set vertical low-pass filter", "kerndeint", "set the threshold", "set the map", "set the order", "set sharpening", "set twoway", "lenscorrection", "set relative center x", "set relative center y", "set quadratic distortion factor", "set double quadratic distortion factor", "Error when evaluating the expression '%s' for the value %d for the component %d.\n", "val[%d][%d] = %d\n", "negval", "negate_alpha:%d\n", "negate", "negate_alpha", "lutrgb", "lutyuv", "gammaval", "gammaval709", "set component #0 expression", "set component #1 expression", "set component #2 expression", "set component #3 expression", "set Y expression", "set U expression", "set V expression", "set R expression", "set G expression", "set B expression", "set A expression", "minval", "clipval", "libavfilter/vf_lut3d.c", "Padding on the right (%dpx) of the Hald CLUT will be ignored\n", "Padding at the bottom (%dpx) of the Hald CLUT will be ignored\n", "The Hald CLUT width does not match the level\n", "Too large Hald CLUT (maximum level is %d, or %dx%d CLUT)\n", "Unexpected EOF\n", "3DLUTSIZE ", "Too large or invalid 3D LUT size\n", "LUT_3D_SIZE ", "DOMAIN_", "MIN ", "MAX ", "min: %f %f %f | max: %f %f %f\n", "in and out must be defined\n", "invalid in (%d) or out (%d)\n", "Unable to guess the format from the extension\n", "%d %d %d", "Unrecognized '.%s' file type\n", "3D LUT is empty\n", "haldclut", "continue applying the last clut after eos", "select interpolation mode", "interp_mode", "use values from the nearest defined points", "trilinear", "interpolate values using the 8 points defining a cube", "tetrahedral", "interpolate values using a tetrahedron", "lut3d", "set 3D LUT file name", "maskedmerge", "memc_only", "no_bitstream", "mcdeint", "medium", "extra_slow", "set the assumed picture field parity", "set qp", "input #%d link %s SAR %d:%d does not match output link %s SAR %d:%d\n", "input %d does not have %d plane\n", "output plane %d depth %d does not match input %d plane %d depth %d\n", "output plane %d width %d does not match input %d plane %d width %d\n", "output plane %d height %d does not match input %d plane %d height %d\n", "Only planar formats with more than one component are supported.\n", "Mapping with out of range input and/or plane number.\n", "s->nb_inputs && s->nb_inputs <= 4", "libavfilter/vf_mergeplanes.c", "mergeplanes", "set input to output plane mapping", "set output pixel format", "max_drop_count:%d hi:%d lo:%d frac:%f\n", "keep", "%d>=hi ", "lo:%d>=%d ", "lo:%d<%d ", "%s pts:%s pts_time:%s drop_count:%d\n", "mpdecimate", "set the maximum number of consecutive dropped frames (positive), or the minimum interval between dropped frames (negative)", "set high dropping threshold", "set low dropping threshold", "frac", "set fraction dropping threshold", "dilation", "inflate", "threshold0", "set threshold for 1st plane", "threshold1", "set threshold for 2nd plane", "threshold2", "set threshold for 3rd plane", "threshold3", "set threshold for 4th plane", "set coordinates", "No weights file provided, aborting!\n", "Couldn't seek to the end of weights file.\n", "Couldn't get size of weights file.\n", "Unexpected weights file size.\n", "Couldn't seek to the start of weights file.\n", "Couldn't read weights file.\n", "nnedi", "weights", "set weights file", "nnedi3_weights.bin", "set which frames to deinterlace", "set mode of operation", "use frame flags, both fields", "use frame flags, single field", "use top field only", "use bottom field only", "use both fields, top first", "use both fields, bottom first", "set which planes to process", "nsize", "set size of local neighborhood around each pixel, used by the predictor neural network", "s8x6", "s16x6", "s32x6", "s48x6", "s8x4", "s16x4", "s32x4", "set number of neurons in predictor neural network", "n256", "set which set of weights to use in the predictor", "weights trained to minimize absolute error", "weights trained to minimize squared error", "pscrn", "set prescreening", "fapprox", "all_seed", "set component #0 noise seed", "all_strength", "set component #0 strength", "alls", "all_flags", "set component #0 flags", "allf", "averaged noise", "(semi)regular pattern", "temporal noise", "uniform noise", "c0_seed", "c0_strength", "c0_flags", "c1_seed", "set component #1 noise seed", "c1_strength", "set component #1 strength", "c1_flags", "set component #1 flags", "c2_seed", "set component #2 noise seed", "c2_strength", "set component #2 strength", "c2_flags", "set component #2 flags", "c3_seed", "set component #3 noise seed", "c3_strength", "set component #3 strength", "c3_flags", "set component #3 flags", "The rgb option is deprecated and is overriding the format option, use format instead\n", "libavfilter/vf_overlay.c", "Incoming frame (time:%s) from link #%d\n", "n:%f t:%f pos:%f x:%f xi:%d y:%f yi:%d\n", "main w:%d h:%d fmt:%s overlay w:%d h:%d fmt:%s eof_action:%s\n", "set the x expression", "set the y expression", "eof_action", "Action to take when encountering EOF from secondary input ", "repeat", "Repeat the previous frame.", "endall", "End both streams.", "Pass through the main input.", "force packed RGB in input and output (deprecated)", "set output format", "yuv420", "yuv422", "yuv444", "repeat overlay of the last overlay frame", "main_w", "main_h", "overlay_w", "overlay_h", "set depth", "luma_strength", "set luma strength", "chroma_strength", "set chroma strength", "Negative values are not acceptable.\n", "w:%d h:%d -> w:%d h:%d x:%d y:%d color:0x%02X%02X%02X%02X\n", "Input area %d:%d:%d:%d not within the padded area 0:0:%d:%d or zero-sized\n", "Direct padding impossible allocating new frame\n", "set the pad area width expression", "set the pad area height expression", "set the x offset expression for the input image position", "set the y offset expression for the input image position", "set the color of the padded area border", "Unable to allocate references for %d different colors\n", "libavfilter/vf_palettegen.c", "new_box->len >= 1", "lavfi.color_quant_ratio", "%d%s colors generated out of %d colors; ratio=%f\n", "Dupped color: %08X\n", "s->nb_boxes < 256", "palettegen", "max_colors", "set the maximum number of colors to use in the palette", "reserve_transparent", "reserve a palette entry for transparency", "stats_mode", "set statistics mode", "compute full frame histograms", "compute histograms only for the part that differs from previous frame", "%*cnode%d [label=\"%c%02X%c%02X%c%02X%c\" fillcolor=\"#%02x%02x%02x\" fontcolor=\"#%06X\"]\n", "%*cnode%d -> node%d\n", "Cannot open file '%s' for writing: %s\n", "digraph {\n", "    node [style=filled fontsize=10 shape=box]\n", "/!\\ %02X%02X%02X: %d ! %d (%06X ! %06X) / dist: %d ! %d\n", "Accuracy check passed\n", "MEP:%.3f TotalMEP:%.3f\n", "paletteuse", "select dithering mode", "dithering_mode", "bayer", "ordered 8x8 bayer dithering (deterministic)", "heckbert", "dithering as defined by Paul Heckbert in 1982 (simple error diffusion)", "floyd_steinberg", "Floyd and Steingberg dithering (error diffusion)", "sierra2", "Frankie Sierra dithering v2 (error diffusion)", "sierra2_4a", "Frankie Sierra dithering v2 \"Lite\" (error diffusion)", "bayer_scale", "set scale for bayer dithering", "diff_mode", "set frame difference mode", "process smallest different rectangle", "debug_kdtree", "save Graphviz graph of the kdtree in specified file", "color_search", "set reverse colormap color search method", "nns_iterative", "iterative search", "nns_recursive", "recursive search", "bruteforce", "brute-force into the palette", "mean_err", "compute and print mean error", "debug_accuracy", "test color search accuracy", "perspective", "set top left x coordinate", "set top left y coordinate", "set top right x coordinate", "set top right y coordinate", "set bottom left x coordinate", "set bottom left y coordinate", "set bottom right x coordinate", "set bottom right y coordinate", "set interpolation", "sense", "specify the sense of the coordinates", "specify locations in source to send to corners in destination", "specify locations in destination to send corners of source", "mode=%c tdiff=%f bdiff=%f pdiff=%f\n", "set phase mode", "top first analyze", "bottom first analyze", "full analyze", "auto analyze", "pixdesctest", "set thresholding mode", "hard", "hard thresholding", "soft", "soft thresholding", "medium thresholding", " %c:%f", "PSNR%s average:%f min:%f max:%f\n", "Could not open stats file %s: %s\n", "%0.2f", "%s%c", "Width and height of input videos must be same.\n", "Inputs must be of same pixel format.\n", "lavfi.psnr.mse.", "lavfi.psnr.psnr.", "lavfi.psnr.mse_avg", "lavfi.psnr.psnr_avg", "n:%ld mse_avg:%0.2f ", "mse_%c:%0.2f ", "psnr_avg:%0.2f ", "psnr_%c:%0.2f ", "stats_file", "Set file where to store per-frame difference information", "input format does not have such plane\n", "w: %d h: %d\n", "offset: %d length: %d\n", "Could not get buffer!\n", "pullup", "set left junk size", "set right junk size", "set top junk size", "set bottom junk size", "set strict breaks", "set metric plane", "chroma blue", "chroma red", "set qp expression", "set number of frames in cache", "set the seed", "Black color threshold is higher than white color threshold (%g > %g)\n", "threshold_black:%d threshold_white:%d threshold_gray:%d\n", "w:%d h:%d grp_width:%d scan_max:%d\n", "lavfi.readvitc.found", "%02u:%02u:%02u%c%02u", "lavfi.readvitc.tc_str", "readvitc", "scan_max", "maximum line numbers to scan for VITC data", "thr_b", "black color threshold", "thr_w", "white color threshold", "Second input link %s parameters (size %dx%d) do not match the corresponding third input link %s parameters (%dx%d)\n", "remap", "set mode for 1st plane", "set mode for 2nd plane", "set mode for 3rd plane", "set mode for 4th plane", "The bitmap file name is mandatory\n", "full x1:%d x2:%d y1:%d y2:%d max_mask_size:%d\n", "half x1:%d x2:%d y1:%d y2:%d max_mask_size:%d\n", "removelogo", "set bitmap filename", "Unexpected field flags: state=%d top_field_first=%d repeat_first_field=%d\n", "repeatfields", "Error when parsing the expression '%s' for angle command\n", "Error occurred parsing angle expression '%s'\n", "Error parsing or evaluating expression for option %s: invalid expression '%s' or non-positive or indefinite value %f\n", "n:%f time:%f angle:%f/PI\n", "rotate", "rotw", "roth", "set angle (in radians)", "set output width expression", "set output height expression", "fillcolor", "set background fill color", "use bilinear interpolation", "set luma radius", "luma_pre_filter_radius", "set luma pre-filter radius", "lpfr", "set chroma radius", "chroma_pre_filter_radius", "set chroma pre-filter radius", "cpfr", "Rescaled value for width or height is too big.\n", "srcw", "srch", "src_format", "dstw", "dsth", "dst_format", "sws_flags", "param0", "param1", "src_range", "dst_range", "src_h_chr_pos", "src_v_chr_pos", "dst_h_chr_pos", "dst_v_chr_pos", "w:%d h:%d fmt:%s sar:%d/%d -> w:%d h:%d fmt:%s sar:%d/%d flags:0x%0x\n", "Error when evaluating the expression '%s'.\nMaybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n", "Size and width/height expressions cannot be set at the same time.\n", "Invalid size '%s'\n", "w:%s h:%s flags:'%s' interl:%d\n", "Detected unsupported YCgCo colorspace.\n", "scale2ref", "Output video width", "Output video height", "Flags to pass to libswscale", "interl", "set interlacing", "in_color_matrix", "set input YCbCr type", "out_color_matrix", "set output YCbCr type", "in_range", "set input color range", "out_range", "set output color range", "in_v_chr_pos", "input vertical chroma position in luma grid/256", "in_h_chr_pos", "input horizontal chroma position in luma grid/256", "out_v_chr_pos", "output vertical chroma position in luma grid/256", "out_h_chr_pos", "output horizontal chroma position in luma grid/256", "force_original_aspect_ratio", "decrease or increase w/h if necessary to keep the original AR", "force_oar", "disable", "decrease", "increase", "Scaler param 0", "Scaler param 1", "nb_slices", "set the number of slices (debug purpose only)", "eval expressions during initialization and per-frame", "ohsub", "Invalid %s adjustments (%g %g %g %g). Settings must be set in [-1;1] range\n", "libavfilter/vf_selectivecolor.c", "CMYK", "Unsupported selective color file version %d, the settings might not be loaded properly\n", "%c value of first CMYK entry is not 0 but %d\n", "%f %f %f %f", "Adjustments:%s\n", "%8ss: C=%6g M=%6g Y=%6g K=%6g\n", "selectivecolor", "correction_method", "select correction method", "reds", "adjust red regions", "yellows", "adjust yellow regions", "greens", "adjust green regions", "cyans", "adjust cyan regions", "blues", "adjust blue regions", "magentas", "adjust magenta regions", "whites", "adjust white regions", "neutrals", "adjust neutral regions", "blacks", "adjust black regions", "set Photoshop selectivecolor file name", "yellow", "cyan", "neutral", "height must be even\n", "separatefields", "setfield", "select interlace mode", "keep the same input field", "mark as bottom-field-first", "mark as top-field-first", "prog", "mark as progressive", "n:%4ld pts:%7s pts_time:%-7s pos:%9ld fmt:%s sar:%d/%d s:%dx%d i:%c iskey:%d type:%c checksum:%08X plane_checksum:[%08X", "] mean:[", "%3.1f ", "pan/scan", "A/53 closed captions (%d bytes)", "stereoscopic information: ", "side by side", "top and bottom", "frame alternate", "interleaved lines", "interleaved columns", "side by side (quincunx subsampling)", " (inverted)", "displaymatrix: rotation of %.2f degrees", "afd: value of %u", "unknown side data type %d (%d bytes)", "set pixel box size", "Index out of range.\n", "libavfilter/vf_shuffleframes.c", "shuffleframes", "set destination indexes of input frames", "Non-existing input plane #%d mapped to output plane #%d.\n", "Cannot map between a subsampled chroma plane and a luma or alpha plane.\n", "Cannot map between a palette plane and a data plane.\n", "shuffleplanes", "map0", "Index of the input plane to be used as the first output plane ", "map1", "Index of the input plane to be used as the second output plane ", "map2", "Index of the input plane to be used as the third output plane ", "map3", "Index of the input plane to be used as the fourth output plane ", "lavfi.signalstats.YMIN", "lavfi.signalstats.YLOW", "lavfi.signalstats.YAVG", "lavfi.signalstats.YHIGH", "lavfi.signalstats.YMAX", "lavfi.signalstats.UMIN", "lavfi.signalstats.ULOW", "lavfi.signalstats.UAVG", "lavfi.signalstats.UHIGH", "lavfi.signalstats.UMAX", "lavfi.signalstats.VMIN", "lavfi.signalstats.VLOW", "lavfi.signalstats.VAVG", "lavfi.signalstats.VHIGH", "lavfi.signalstats.VMAX", "lavfi.signalstats.SATMIN", "lavfi.signalstats.SATLOW", "lavfi.signalstats.SATAVG", "lavfi.signalstats.SATHIGH", "lavfi.signalstats.SATMAX", "lavfi.signalstats.HUEMED", "lavfi.signalstats.HUEAVG", "lavfi.signalstats.YDIF", "lavfi.signalstats.UDIF", "lavfi.signalstats.VDIF", "lavfi.signalstats.%s", "signalstats", "Generate statistics from video analysis.", "TOUT", "VREP", "BRNG", "stat", "set statistics filters", "tout", "analyze pixels for temporal outliers", "vrep", "analyze video lines for vertical line repetition", "brng", "analyze for pixels outside of broadcast range", "set video filter", "highlight pixels that depict temporal outliers", "highlight video lines that depict vertical line repetition", "highlight pixels that are outside of broadcast range", "set highlight color", "smartblur", "luma_threshold", "set luma threshold", "chroma_threshold", "set chroma threshold", "libavfilter/vf_spp.c", "SSIM%s All:%f (%f)\n", "lavfi.ssim.", "lavfi.ssim.All", "lavfi.ssim.dB", "n:%ld ", "%c:%f ", "ssim", "Input %d width %d does not match input %d width %d.\n", "Input %d height %d does not match input %d height %d.\n", "vstack", "hstack", "width must be even\n", "input format %d is not supported\n", "Only 720 and 1080 height supported\n", "output format %d is not supported\n", "libavfilter/vf_stereo3d.c", "stereo3d", "set input format", "ab2l", "above below half height left first", "ab2r", "above below half height right first", "above below left first", "above below right first", "alternating frames left first", "alternating frames right first", "sbs2l", "side by side half width left first", "sbs2r", "side by side half width right first", "sbsl", "side by side left first", "sbsr", "side by side right first", "interleave rows left first", "interleave rows right first", "interleave columns left first", "interleave columns right first", "agmc", "anaglyph green magenta color", "agmd", "anaglyph green magenta dubois", "agmg", "anaglyph green magenta gray", "agmh", "anaglyph green magenta half color", "arbg", "anaglyph red blue gray", "arcc", "anaglyph red cyan color", "arcd", "anaglyph red cyan dubois", "arcg", "anaglyph red cyan gray", "anaglyph red cyan half color", "argg", "anaglyph red green gray", "aybc", "anaglyph yellow blue color", "aybd", "anaglyph yellow blue dubois", "aybg", "anaglyph yellow blue gray", "aybh", "anaglyph yellow blue half color", "mono left", "mono right", "checkerboard left first", "checkerboard right first", "hdmi", "HDMI frame pack", "super2xsai", "swaprect", "set rect width", "set rect height", "set 1st rect x top left coordinate", "set 1st rect y top left coordinate", "set 2nd rect x top left coordinate", "set 2nd rect y top left coordinate", "swapuv", "Telecine pattern %s yields up to %d frames per frame, pts advance factor: %d/%d\n", "frame id #%d (pts_time=%f) selected from a set of %d images\n", "Allocation failure, try to lower the number of frames\n", "batch size: %d frames\n", "thumbnail", "set the frames batch size", "Tile size %ux%u is insane.\n", "nb_frames must be less than or equal to %dx%d=%d\n", "Total width %ux%u is too much.\n", "Total height %ux%u is too much.\n", "tile", "set grid size", "set maximum number of frame to render", "margin", "set outer border margin in pixels", "set inner border thickness in pixels", "set the color of the unused area", "low_pass_filter flag ignored with mode %d\n", "mode:%d filter:%s h:%d -> h:%d\n", "libavfilter/vf_tinterlace.c", "tinterlace", "merge fields", "drop_even", "drop even fields", "drop_odd", "drop odd fields", "pad alternate lines with black", "interleave_top", "interleave top and bottom fields", "interleave_bottom", "interleave bottom and top fields", "interlacex2", "interlace fields from two consecutive frames", "mergex2", "merge fields keeping same frame rate", "low_pass_filter", "enable vertical low-pass filter", "vlpf", "exact_tb", "force a timebase which can represent timestamps exactly", "counterclockwise", "dir values greater than 3 are deprecated, use the passthrough option instead\n", "w:%d h:%d -> w:%d h:%d (passthrough mode)\n", "w:%d h:%d dir:%d -> w:%d h:%d rotation:%s vflip:%d\n", "transpose", "set transpose direction", "cclock_flip", "rotate counter-clockwise with vertical flip", "rotate clockwise", "cclock", "rotate counter-clockwise", "rotate clockwise with vertical flip", "do not apply transposition if the input matches the specified geometry", "always apply transposition", "portrait", "preserve portrait geometry", "landscape", "preserve landscape geometry", "sharpen", "Invalid even size for %s matrix size %dx%d\n", "effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\n", "unsharp", "luma_msize_x", "set luma matrix horizontal size", "luma_msize_y", "set luma matrix vertical size", "luma_amount", "set luma effect strength", "chroma_msize_x", "set chroma matrix horizontal size", "chroma_msize_y", "set chroma matrix vertical size", "chroma_amount", "set chroma effect strength", "libavfilter/vf_uspp.c", "SNOW encoder not found.\n", "avctx_enc->codec", "uspp", "))v&#)", "libavfilter/vf_vectorscope.c", "set vectorscope mode", "color3", "color4", "color5", "set color component on X axis", "set color component on Y axis", "set intensity", "set envelope", "peak+instant", "set graticule", "set graticule opacity", "set graticule flags", "draw white point", "draw black point", "draw point name", "bgopacity", "set background opacity", "lthreshold", "hthreshold", "set colorspace", "vflip", "Unable to parse expression for 'x0'\n", "Unable to parse expression for 'y0'\n", "xscale=%f yscale=%f dmax=%f\n", "vignette", "set lens angle", "PI/5", "set circle center position on x-axis", "set circle center position on y-axis", "set forward/backward mode", "forward", "backward", "eval expressions for each frame", "set dithering", "set aspect ratio", "w3fdif", "specify the filter", "complex", "waveform", "1600", "2400", "3200", "4000", "3760", "3840", "4095", "1023", "set mirroring", "set components to display", "set envelope to display", "set filter", "aflat", "acolor", "draw numbers", "draw dots instead of lines", "set scale", "digital", "millivolts", "yadif", "send_frame_nospatial", "send one frame for each frame, but skip spatial interlacing check", "send_field_nospatial", "send one frame for each field, but skip spatial interlacing check", "libavfilter/vf_zoompan.c", "zoompan", "set the zoom expression", "set the duration expression", "set the output image size", "set the output framerate", "pduration", "pzoom", "320x518", "Only one of the filename or pattern options can be used\n", "s:%dx%d r:%d/%d rule:%d stitch:%d scroll:%d full:%d seed:%u\n", "cellauto", "read initial pattern from file", "set initial pattern", "set rule", "random_fill_ratio", "set fill ratio for filling initial grid randomly", "random_seed", "set the seed for filling the initial grid randomly", "scroll pattern downward", "start_full", "start filling the whole video", "stitch", "stitch boundaries", "320x240", "bBsS", "Invalid rule code '%s' provided\n", "Mold color is set while mold isn't, ignoring the color.\n", "h:%d max_w:%d\n", "The specified size is %dx%d which cannot contain the provided file size of %dx%d\n", "%d:%d %c\n", "s:%dx%d r:%d/%d rule:%s stay_rule:%d born_rule:%d stitch:%d seed:%u\n", "set source file", "B3/S23", "mold", "set mold speed for dead cells", "life_color", "set life color", "death_color", "set death color", "mold_color", "set mold color", "mandelbrot", "set frame size", "set frame rate", "maxiter", "set max iterations number", "start_x", "set the initial x position", "start_y", "set the initial y position", "start_scale", "set the initial scale value", "end_scale", "set the terminal scale value", "set the terminal pts value", "bailout", "set the bailout value", "morphxf", "set morph x frequency", "morphyf", "set morph y frequency", "morphamp", "set morph amplitude", "outer", "set outer coloring mode", "set iteration count mode", "normalized_iteration_count", "set normalized iteration count mode", "set white mode", "outz", "set outz mode", "inner", "set inner coloring mode", "set black mode", "set period mode", "show time until convergence", "mincol", "color based on point closest to the origin of the iterations", "mptestsrc", "set video duration", "set test to perform", "dc_luma", "dc_chroma", "freq_luma", "freq_chroma", "amp_luma", "amp_chroma", "ring1", "ring2", "size:%dx%d rate:%d/%d duration:%f sar:%d/%d\n", "ff_draw_init(&s->draw, inlink->format, 0) >= 0", "libavfilter/vsrc_testsrc.c", "w == h && w == level*level*level", "x + w <= test->w", "y + h <= test->h", "%02d:%02d:%02d.%03d\n%12li", "allrgb", "set video sample aspect ratio", "allyuv", "smptehdbars", "smptebars", "rgbtestsrc", "testsrc2", "decimals", "set number of decimals to show", "haldclutsrc", "set level", "libavfilter/window_func.c", "libswresample/audioconvert.c", "libswresample/dither.c", "Requested noise shaping dither not available at this sampling rate, using triangular hp dither\n", "!s->preout.count", "SWResampler", "set input channel count", "in_channel_count", "set output channel count", "out_channel_count", "set used channel count", "used_channel_count", "set input sample rate", "set output sample rate", "set input sample format", "set output sample format", "set internal sample format", "internal_sample_fmt", "set input channel layout", "set output channel layout", "clev", "set center mix level", "center_mix_level", "set surround mix level", "surround_mix_level", "set surround mix Level", "lfe_mix_level", "set LFE mix level", "rmvol", "set rematrix volume", "rematrix_volume", "rematrix_maxval", "set rematrix maxval", "swr_flags", "force resampling", "dither_scale", "set dither scale", "dither_method", "set dither method", "select rectangular dither", "select triangular dither", "triangular_hp", "select triangular dither with high pass", "lipshitz", "select Lipshitz noise shaping dither", "select Shibata noise shaping dither", "low_shibata", "select low Shibata noise shaping dither", "high_shibata", "select high Shibata noise shaping dither", "f_weighted", "select f-weighted noise shaping dither", "modified_e_weighted", "select modified-e-weighted noise shaping dither", "improved_e_weighted", "select improved-e-weighted noise shaping dither", "set swr resampling filter size", "phase_shift", "set swr resampling phase shift", "linear_interp", "enable linear interpolation", "exact_rational", "enable exact rational", "set cutoff frequency ratio", "resample_cutoff", "resampler", "set resampling Engine", "select SW Resampler", "soxr", "select SoX Resampler", "set soxr resampling precision (in bits)", "cheby", "enable soxr Chebyshev passband & higher-precision irrational ratio approximation", "min_comp", "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied", "min_hard_comp", "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.", "comp_duration", "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.", "max_soft_comp", "set maximum factor by which data is stretched/squeezed to make it match the timestamps.", "async", "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)", "first_pts", "Assume the first pts should be this value (in samples).", "matrix_encoding", "set matrixed stereo encoding", "select none", "dolby", "select Dolby", "dplii", "select Dolby Pro Logic II", "filter_type", "select swr filter type", "select cubic", "blackman_nuttall", "select Blackman Nuttall windowed sinc", "kaiser", "select Kaiser windowed sinc", "kaiser_beta", "set swr Kaiser window beta", "output_sample_bits", "set swr number of output sample bits", "Treating %s as mono\n", "Input channel layout '%s' is not supported\n", "Output channel layout '%s' is not supported\n", "libswresample/rematrix.c", "Matrix coefficients:\n", "%s: ", "%s:%f ", "!s->out_ch_layout || out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout)", "!s-> in_ch_layout || in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout)", "libswresample/resample.c", "!c->frac && !c->dst_incr_mod && !c->compensation_distance", "Unsupported sample format\n", "Filter length too large\n", "FFmpeg version 3.1.11", "out->planar == in->planar", "libswresample/swresample.c", "out->bps == in->bps", "out->ch_count == in->ch_count", "libswresample license: GPL version 2 or later", "Failed to set option\n", "Requested input sample format %d is invalid\n", "Requested output sample format %d is invalid\n", "Input channel layout 0x%lx is invalid or unsupported.\n", "Output channel layout 0x%lx is invalid or unsupported.\n", "Requested resampling engine is unavailable\n", "Input channel layout has a different number of channels than the number of used channels, ignoring layout\n", "Using %s internally between filters\n", "Requested sample format %s is not supported internally, S16/S32/FLT/DBL is supported\n", "Failed to initialize resampler\n", "Resampling only supported with internal s16/s32/flt/dbl\n", "!s->in_ch_layout", "Input channel count and layout are unset\n", "Output channel layout %s mismatches specified channel count %d\n", "Input channel layout %s mismatches specified channel count %d\n", "Rematrix is needed between %s and %s but there is not enough information to do it\n", "a->bps", "a->ch_count", "s->midbuf.ch_count == s->used_ch_count", "s->midbuf.ch_count == s->out.ch_count", "s->in.planar", "s->dither.noise.ch_count == preout->ch_count", "!s->resample", "Context has not been initialized\n", "s->drop_output", "discarding %d audio samples\n", "adding %d audio samples of silence\n", "s->out_sample_rate == s->in_sample_rate", "Failed to compensate for timestamp delta of %f\n", "compensating audio timestamp drift:%f compensation:%d in:%d\n", "skipping unknown chunk: %X\n", "codec %X", "CTRL", "SHDR", "SNDS", "3dostr", "chunk larger than array %d>%d\n", "std TAG truncated\n", "current_track too large\n", "audio header invalid\n", "bits unspecified for non ADPCM\n", "Missing extradata\n", "a64, A64", "audio/aac,audio/aacp,audio/x-aac", "Chapter %d (%ld bytes)\n", "Codec is <%s>\n", "HeaderSeed", "HeaderSeed is <%s>\n", "HeaderKey", "HeaderKey is <%s>\n", "%u%u%u%u", "Processed HeaderKey is ", "aa_fixed_key value needs to be 16 bytes!\n", "mp332", "acelp16", "acelp85", "unknown codec <%s>!\n", "File key is ", "aa_fixed_key", "Fixed key used for handling Audible AA files", "77214d4b196a87cd520045fd2a51d673", "phdr->frame_size <= sizeof(buf3)", "libavformat/ac3dec.c", "Sample rate %d is not supported.\n", "ACT Voice file format", "adp,dtk", "SShd", "SSbd", "ads,ss2", "./libavcodec/put_bits.h", "ADTS frame size too large: %u (max %d)\n", "MPEG-4 AOT %d is not allowed in ADTS\n", "Escape sample rate index illegal in ADTS\n", "960/120 MDCT window is not allowed in ADTS\n", "Scalable configurations are not allowed in ADTS\n", "Extension flag is not allowed in ADTS\n", "audio/aac", "aac,adts", "ADTS muxer", "write_id3v2", "Enable ID3v2 tag writing", "write_apetag", "Enable APE tag writing", "Invalid extradata size.\n", "Channels %d not supported!\n", "raw \r", "NONE\t", "ulaw\r", "in24\t", "twos", "sowt", "Qclp", "ADP4", "block_align not set\n", "unknown or unsupported codec tag: %s", "author", "copyright", "file is not seekable\n", "could not find COMM tag or invalid block_align value\n", "raw \r", "NONE\t", "ulaw\r", "in24\t", "twos", "sowt", "Qclp", "ADP4", "Got more than one picture in stream %d, ignoring.\n", "AIFC", "AIFF", "AIFF allows only one audio stream and a picture.\n", "No audio stream present.\n", "block align not set\n", "could not compute bits per sample\n", "audio/aiff", "aif,aiff,afc,aifc", "AIFF muxer", "Enable ID3 tags writing.", "id3v2_version", "Select ID3v2 version to write. Currently 3 and 4 are supported.", "#!AMR-WB\n", "audio/amr", "max_pages != 256", "Invalid header element", "CRYO_APC", "invalid packet size: %d\n", "Unsupported file version - %d.%02d\n", "No frames in the file!\n", "Too many frames: %u\n", "Number of seek entries is less than number of frames: %zu vs. %u\n", "File truncated\n", "Decoding file - v%d.%02d, compression level %u\n", "ape,apl,mac", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "decode_fctl_chunk", "Could not ensure seekback, will not loop\n", "num_frames: %u, num_play: %u\n", "./libavcodec/bytestream.h", "%s: sequence_number: %d, width: %u, height: %u, x_offset: %u, y_offset: %u, delay_num: %u, delay_den: %u, dispose_op: %d, blend_op: %d\n", "In-stream tag=%s (0x%08X) len=%u", "APNG demuxer", "ignore_loop", "ignore loop setting", "max_fps", "maximum framerate (0 is no limit)", "default_fps", "default framerate (0 is as fast as possible)", "crc_table", "libavformat/apngenc.c", "apng->prev_packet", "Only a single frame so saving as a normal PNG.\n", "Frame rate is too high or specified too precisely. Unable to copy losslessly.\n", "APNG muxer supports only a single video APNG stream.\n", "Last frame delay is too precise. Reducing to %d/%d (%f).\n", "APNG muxer", "plays", "Number of times to play the output: 0 - infinite loop, 1 - no loop", "final_delay", "Force delay after the last frame", "-->> %d", "-->> %ld", "aqtitle", "aqtdec", "subfps", "set the movie frame rate", "WM/AlbumTitle", "Author", "WM/Composer", "WM/EncodedBy", "encoded_by", "WM/EncodingSettings", "WM/Genre", "genre", "WM/Language", "language", "WM/OriginalFilename", "WM/PartOfSet", "disc", "WM/Publisher", "publisher", "WM/Tool", "WM/TrackNumber", "WM/MediaStationCallSign", "service_provider", "WM/MediaStationName", "service_name", "asf_parse_packet", "asf_read_packet", "asf_read_pts failed\n", "itime:0x%lx, pct:%d, ict:%d\n", "pktnum:%d, pktct:%d  pts: %ld\n", "SEEKTO: %ld\n", "WM/Picture", "Invalid attached picture size: %d.\n", "Unknown attached picture type: %d.\n", "Invalid attached picture data size: %d >= %d.\n", "Unsupported byte array in tag %s.\n", "Unsupported GUID value in tag %s.\n", "Unsupported value type %d in tag %s.\n", "Unknown attached picture mimetype: %s.\n", "Skip due to FRAME_HEADER_SIZE\n", "libavformat/asfdec_f.c", "key:%d stream:%d seq:%d offset:%d replic_size:%d num:%X packet_property %X\n", "packet_replic_size %d is invalid\n", "packet_obj_size %d invalid\n", "too long payload\n", "unexpected packet_replic_size of %d\n", "packet_replic_size is invalid\n", "packet_frag_size is invalid (%d>%d-%d+%d)\n", "ff asf skip %d (unknown stream)\n", "asf_st", "skipping asf data pkt with fragment offset for stream:%d, expected:%d but got %d from pkt)\n", "freeing incomplete packet size %d, new %d\n", "Cannot append palette to packet\n", "new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n", "READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n", "packet fragment position invalid %u,%u not in %u\n", "discarding ms fart\n", "pkt.size != ds_packet_size * ds_span (%d %d %d)\n", "offset + asf_st->ds_chunk_size <= asf_st->pkt.size", "idx + 1 <= asf_st->pkt.size / asf_st->ds_chunk_size", "ff asf bad header %x  at:%ld\n", "ff asf bad non zero\n", "Invalid ECC byte\n", "invalid packet_length %u at:%ld\n", "invalid padsize %u at:%ld\n", "invalid packet header length %d for pktlen %u-%u at %ld\n", "packet: size=%d padsize=%d  left=%d\n", "asf->packet_size_left < FRAME_HEADER_SIZE || asf->packet_segments < 1", "%d stream %d name_len %2d type %d len %4d <%s>\n", "AspectRatioX", "AspectRatioY", "too many streams\n", "Payload extension %x %d\n", "Secret data:\n", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "Ext DRM protected stream detected, decoding will likely fail!\n", "encryption", "ASF Extended Content Encryption", "Digital signature detected!\n", "gpos mismatch our pos=%lu, end=%ld\n", "i=%d, st->codecpar->codec_type:%d, asf->dar %d:%d sar=%d:%d\n", "asf demuxer", "no_resync_search", "Don't try to resynchronize by looking for a certain optional start code", "export_xmp", "Export full XMP metadata", "Header Extension", "Too small size %lu (< 24).\n", "av_dict_set failed.\n", "%Y-%m-%d %H:%M:%S", "creation_time", "Number of Packets from File Properties Object is not equal to TotalDatapackets value! num of packets %lu total num %lu.\n", "Duplicate stream found, this stream will be ignored.\n", "Skipping failed in asf_read_simple_index.\n", "Data Object was not found.\n", "Invalid packet size 0.\n", "Skipping the stream with the invalid stream index %d.\n", "Unfinished frame will be ignored\n", "Error: invalid data packet size, pay_len %u, asf->packet_size %u, offset %ld.\n", "Error: invalid buffer size, pay_len %d, data size left %d.\n", "Error: invalid data packet size, offset %ld.\n", "Copyright", "asf_o", "Simple Index", "Extended Content Description", "Stream Bitrate Properties", "File Properties", "Codec List", "Marker", "Script Command", "Language List", "Padding", "DRMv1 Header", "DRMv2 Header", "Media Object Index", "Timecode Index", "Bitrate_Mutual_Exclusion", "Error Correction", "Content Branding", "Digital Signature", "Extended Stream Properties", "Advanced Mutual Exclusion", "Group Mutual Exclusion", "Stream Prioritization", "Bandwidth Sharing Object", "Metadata Library", "Audio Spread", "Index Parameters", "Content Encryption System Windows Media DRM Network Devices", "Mutex Language", "Mutex Bitrate", "Mutex Unknown", "Bandwidth Sharing Exclusive", "Bandwidth Sharing Partial", "Payload Extension System Timecode", "Payload Extension System File Name", "Payload Extension System Content Type", "Payload Extension System Pixel Aspect Ratio", "Payload Extension System Sample Duration", "Payload Extension System Encryption Sample ID", "Payload Extension System Degradable JPEG", "M4S2\r", "MP43", "asf->packet_timestamp_end >= asf->packet_timestamp_start", "libavformat/asfenc.c", "padsize >= 0", "packet_hdr_size <= asf->packet_size_left", "Windows Media Audio V8", "rating", "ASF can only handle 127 streams\n", "input pts %ld is invalid\n", "asf_stream", "video/x-ms-asf", "asf,wmv,wma", "ASF stream muxer", "ASF muxer", "Packet size", "[Script Info]", "Dialogue: %*[^,],%d:%d:%d%*c%d,%d:%d:%d%*c%d,%n", "%u,%d,%s", "ReadOrder gap found between %d and %d\n", "Dialogue: %s\r\n", "wrote %d ASS lines, cached dialogues: %d, waiting for event id %d\n", "Marked=", "Unexpected ReadOrder %d\n", "%s%ld,%d:%02d:%02d.%02d,%d:%02d:%02d.%02d,%s", "Marked", "Layer", "Exactly one ASS/SSA stream is needed.\n", "\n[Events]", "Format:", "\n[V4+ Styles]", "[Events]\r\nFormat: %s, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\r\n", "text/x-ass", "ass,ssa", "ass muxer", "ignore_readorder", "write events immediately, even if they're out-of-order", "unknown chunk %x\n", "total samples: %ld\n", "Loopstart value is out of range and will be ignored\n", "Loopend value is out of range and will be ignored\n", "only one stream is supported\n", "muxing ADPCM AFC is not implemented\n", "unsupported codec\n", "loopend can't be less or equal to loopstart\n", "Invalid loopstart value\n", "Invalid loopend value\n", "AST muxer", "loopstart", "Loopstart position in milliseconds.", "loopend", "Loopend position in milliseconds.", "2627", "Memory error while parsing AU metadata.\n", "Invalid negative data size '%d' found\n", "unknown or unsupported codec tag: %u", "id >= 23 && id < 23 + 4", "libavformat/au.c", "Unknown bits per sample", "Invalid number of channels %u\n", "Invalid sample rate: %u\n", "Album", "Track", "audio/basic", "timebase not set for audio interleave\n", "could not compute sample size\n", "GAB2", "Skipping foreign stream %d packet\n", "Invalid stream + prefix combination, assuming audio.\n", "longs_pre_entry:%d index_type:%d entries_in_use:%d chunk_id:%X base:%16lX frame_num:%d\n", "ODML index invalid\n", "pos:%ld, len:%X\n", "Too deeply nested ODML indexes\n", "Failed to restore position after reading index\n", "movi_end=0x%lx\n", "%d: tag=0x%x flags=0x%x pos=0x%lx len=%d/", "%d cum_len=%ld\n", "MMES", "stream_index >= 0", "libavformat/avidec.c", "Failed to find timestamp %ld in index %ld .. %ld\n", "XX %ld %d %ld\n", "Seek failed\n", "maker", "This file has been generated by a totally broken muxer.\n", "use odml:%d\n", "pos:%lX %s: tag=%c%c%c%c size=0x%x\n", "movi end=%lx\n", "%*3s%*[ ]%3s%*[ ]%2d%*[ ]%8s%*[ ]%4d", "%.4d-%.2d-%.2d %s", "strh", "scale/rate is %u/%u which is invalid. (This file has been generated by broken software.)\n", "crazy start time, iam scared, giving up\n", "%u %u %d\n", "unknown stream type %X\n", "Invalid sample_size %d at stream %d\n", "Invalid sample_size %d at stream %d setting it to 0\n", "File is truncated adjusting duration\n", "BottomUp", "mov tag found in avi (fourcc %s)\n", "sample size (%d) != block align (%d)\n", "overriding invalid dshow_block_align of %d\n", "overriding sample_size\n", "RIFF stream data tag type CASI (%u)", "RIFF stream data tag type Zora (%u)", "could not decoding EXIF data in stream header.\n", "vprp %d/%d %d/%d\n", "Something went wrong during header parsing, I will ignore it and try to continue anyway.\n", "PotEncoder", "Non-interleaved AVI without index, switching to interleaved\n", "non-interleaved AVI\n", "ISFT", "Axan", "%ld %d/%d %ld\n", "best_ast->remaining <= best_ast->packet_size", "Failed to allocate data for palette\n", "dts:%ld offset:%ld %d/%d smpl_siz:%d base:%d st:%d size:%d\n", "Switching to NI mode, due to poor interleaving\n", "strn", "use_odml", "use odml index", "RIFF", "JUNK", "avist->frames_hdr_strm", "libavformat/avienc.c", "avi->frames_hdr_all", "OpenDML index duration for audio packets with partial frames", "AVI does not support >%d streams\n", "AVI ", "hdrl", "Subtitle streams other than DivX XSUB are not supported by the AVI muxer.\n", "strf", "%s rawvideo cannot be written to avi, output file will be unreadable\n", "Invalid or not supported codec type '%s' found in the input\n", "Subtitle - %s-xx;02", "vprp", "idx1", "pb->seekable", "avi->riff_id - avist->indexes.master_odml_riff_id_base < 256", "AVIX", "movi", "Too large number of skipped frames %ld > 60000\n", "par->bits_per_coded_sample >= 0 && par->bits_per_coded_sample <= 8", "video/x-msvideo", "AVI muxer", "write_channel_mask", "write channel mask into wave format header", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "libavformat/avio.c", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "Key '%s' not found.\n", "Error parsing options string %s\n", "https:", "https protocol not found, recompile FFmpeg with openssl, gnutls or securetransport enabled.\n", "protocol_whitelist", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "!(e=av_dict_get(*options, \"protocol_blacklist\", ((void *)0), 0)) || (uc->protocol_blacklist && !strcmp(uc->protocol_blacklist, e->value))", "Protocol not on whitelist '%s'!\n", "Protocol blacklisted '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || !strcmp(whitelist, e->value)", "!blacklist || !(e=av_dict_get(*options, \"protocol_blacklist\", ((void *)0), 0)) || !strcmp(blacklist, e->value)", "URLContext", "List of protocols that are allowed to be used", "List of protocols that are not allowed to be used", "rw_timeout", "Timeout for IO operations (in microseconds)", "Invaid UTF8 sequence in avio_put_str16%s\n", "!s->write_flag", "libavformat/aviobuf.c", "Failed to decrease buffer size\n", "len >= s->orig_buffer_size", "Statistics: %d seeks, %d writeouts\n", "Statistics: %ld bytes read, %d seeks\n", "AVIOContext", "chan %d", "Bps %d and sign %d", "This avs pretend to be %dx%d when the avs format is supposed to be 318x198 only.\n", "discarding unused palette\n", "incomplete audio block\n", "Using default video time base since having no audio packet before the first video packet", "Failed to allocate palette side data\n", "reached terminating character but not all frames read.\n", "unknown block (character = %c, decimal = %d, hex = %x)!!!\n", "Invalid audio/video offsets or chunk size\n", "SMUS", "could not find index entry for frame %ld\n", "frame %ld: audio size in header (%u) > size of packet left (%u)\n", "invalid SMUSH header: BIK not found\n", "invalid header: more than 1000000 frames\n", "invalid header: largest frame size greater than file size\n", "invalid header: invalid fps (%u/%u)\n", "Bink 2 video is not implemented\n", "invalid header: more than 256 audio tracks (%u)\n", "invalid frame index table\n", "bink", "iCE Draw File demuxer", "Artworx Data Format demuxer", "eXtended BINary text (XBIN) demuxer", "Binary text demuxer", "linespeed", "set simulated line speed (bytes per second)", "set video size, such as 640x480 or hd720.", "set framerate (frames per second)", "only codec g729 with 1 channel is supported by this format\n", "audio/bit", "Reported audio size %d is bigger than packet size (%d)\n", "bfstm", "invalid byte order: %X\n", "codec %d", "loop_start", "too many blocks: %u\n", "skipping additional ADPC chunk\n", "Version %d.%d", "bfstm,bcstm", "brstm", "invalid palette size %u\n", "too many frames in block\n", "ac-3", "alac", ".mp1", "lpcm", "lpcm\f", "lpcm\r", "lpcm\t", "lpcm", "desc chunk not present\n", "invalid AAC magic cookie\n", "invalid ALAC magic cookie\n", "failed to read preamble\n", "frmaalac", "failed to read kuki header\n", "failed to read new kuki header\n", "error reading packet table\n", "skipping CAF chunk: %08X (%c%c%c%c), size %ld\n", "Missing packet table. It is required when block size or frame size are variable.\n", "\ffrmaalac", "\ffrmasamr", "CAF files have exactly one stream\n", "muxing codec currently unsupported\n", "Muxing variable packet size not supported on non seekable output\n", "samrFFMP", "audio/x-caf", "cavsvideo", "cavsvideo demuxer", "Cannot calculate duration as file size cannot be determined\n", "non-standard cdxl file\n", "Could not parse framerate: %s.\n", "cdxl,xl", "CDXL demuxer", "uknown version %i", "unsupported biBitCount %i", "unknown bitmap compression", "short SETUP header", "camera_version", "firmware_version", "software_version", "recording_timezone", "wbgain[0].r", "wbgain[0].b", "unsupported Color Field Array (CFA) %i", "unsupported compression %i", "shutter_ns", "enable_crop", "crop_left", "crop_top", "crop_right", "crop_bottom", "Match slave stream #%d with stream #%d id 0x%x\n", "Auto-inserting h264_mp4toannexb bitstream filter\n", "h264_mp4toannexb bitstream filter required for H.264 streams\n", "Impossible to open '%s'\n", "ffconcat version 1.0", " \t\r\n", "Line %d: filename required\n", "inpoint", "outpoint", "Line %d: %s without file\n", "Line %d: invalid %s '%s'\n", "file_packet_metadata", "Line %d: packet metadata required\n", "Line %d: failed to parse metadata string\n", "exact_stream_id", "Line %d: exact_stream_id without stream\n", "Line %d: invalid version\n", "Line %d: unknown keyword '%s'\n", "Unsafe file name '%s'\n", "pkt2.buf", "libavformat/concatdec.c", "file:%d stream:%d pts:%s pts_time:%s dts:%s dts_time:%s", " -> pts:%s pts_time:%s dts:%s dts_time:%s\n", "concat demuxer", "enable safe mode", "auto_convert", "automatically convert bitstream format", "segment_time_metadata", "output file segment start time and duration as packet metadata", "CRC=0x%08x\n", "%d.%dS", "\t\t\t\t<SegmentTemplate timescale=\"%d\" ", "duration=\"%ld\" ", "initialization=\"%s\" media=\"%s\" startNumber=\"%d\">\n", "\t\t\t\t\t<SegmentTimeline>\n", "\t\t\t\t\t\t<S ", "t=\"%ld\" ", "d=\"%d\" ", "r=\"%d\" ", "\t\t\t\t\t</SegmentTimeline>\n", "\t\t\t\t</SegmentTemplate>\n", "\t\t\t\t<BaseURL>%s</BaseURL>\n", "\t\t\t\t<SegmentList timescale=\"%d\" duration=\"%ld\" startNumber=\"%d\">\n", "\t\t\t\t\t<Initialization range=\"%ld-%ld\" />\n", "\t\t\t\t\t<SegmentURL mediaRange=\"%ld-%ld\" ", "indexRange=\"%ld-%ld\" ", "\t\t\t\t</SegmentList>\n", "\t\t\t\t\t<Initialization sourceURL=\"%s\" />\n", "\t\t\t\t\t<SegmentURL media=\"%s\" />\n", "%Y-%m-%dT%H:%M:%S", "static", "dynamic", "maxFrameRate", "frameRate", "%s.tmp", "Unable to open %s for writing\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<MPD xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txmlns=\"urn:mpeg:dash:schema:mpd:2011\"\n\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\txsi:schemaLocation=\"urn:mpeg:DASH:schema:MPD:2011 http://standards.iso.org/ittf/PubliclyAvailableStandards/MPEG-DASH_schema_files/DASH-MPD.xsd\"\n\tprofiles=\"urn:mpeg:dash:profile:isoff-live:2011\"\n\ttype=\"%s\"\n", "\tmediaPresentationDuration=\"", "\tminimumUpdatePeriod=\"PT%ldS\"\n", "\tsuggestedPresentationDelay=\"PT%ldS\"\n", "\tavailabilityStartTime=\"%s\"\n", "\tpublishTime=\"%s\"\n", "\ttimeShiftBufferDepth=\"", "\tminBufferTime=\"", "\t<ProgramInformation>\n", "&amp;", "&lt;", "&gt;", "&apos;", "&quot;", "\t\t<Title>%s</Title>\n", "\t</ProgramInformation>\n", "\t<Period start=\"", "\t<Period start=\"PT0.0S\">\n", "\t\t<AdaptationSet contentType=\"video\" segmentAlignment=\"true\" bitstreamSwitching=\"true\"", " %s=\"%d/%d\"", "\t\t\t<Representation id=\"%d\" mimeType=\"video/mp4\" codecs=\"%s\"%s width=\"%d\" height=\"%d\"", " frameRate=\"%d/%d\"", "\t\t\t</Representation>\n", "\t\t</AdaptationSet>\n", "\t\t<AdaptationSet contentType=\"audio\" segmentAlignment=\"true\" bitstreamSwitching=\"true\">\n", "\t\t\t<Representation id=\"%d\" mimeType=\"audio/mp4\" codecs=\"%s\"%s audioSamplingRate=\"%d\">\n", "\t\t\t\t<AudioChannelConfiguration schemeIdUri=\"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" value=\"%d\" />\n", "\t</Period>\n", "</MPD>\n", "$RepresentationID$", "$Number", "$Bandwidth", "$Time", "%%%s", "%s%c%s", "Failed to parse format-tag beginning with %s. Expected either a closing '$' character or a format-string like '%%0[width]d', where width must be a single digit\n", "Representation %d media segment %d written to: %s\n", "mp4a", "mp4v", ".%02x", "Incomplete RFC 6381 codec string for mp4v\n", "avc1", ".%02x%02x%02x", " bandwidth=\"%d\"", "No bit rate set for stream %d\n", "%s-stream%d.m4s", "movflags", "frag_custom+dash+delay_moov", "Representation %d init segment will be written to: %s\n", "no video stream and no min seg duration set\n", "Manifest written to: %s\n", "Segment durations differ too much, enable use_timeline and use_template, or keep a stricter keyframe interval\n", "dash", "dash muxer", "number of segments kept in the manifest", "extra_window_size", "number of segments kept outside of the manifest before removing from disk", "min_seg_duration", "minimum segment duration (in microseconds)", "remove_at_exit", "remove all segments when finished", "use_template", "Use SegmentTemplate instead of SegmentList", "use_timeline", "Use SegmentTimeline in SegmentTemplate", "single_file", "Store all segments in one file, accessed using byte ranges", "single_file_name", "DASH-templated name to be used for baseURL. Implies storing all segments in one file, accessed using byte ranges", "init_seg_name", "DASH-templated name to used for the initialization segment", "init-stream$RepresentationID$.m4s", "media_seg_name", "DASH-templated name to used for the media segments", "chunk-stream$RepresentationID$-$Number%05d$.m4s", "302,daud", "Packet size too large for s302m. (%d > 65535)\n", "invalid number of channels %d x %d\n", "Sega Stream", "dcstr", "Too large chunk size: %u\n", "skipping %u bytes of end-of-frame marker chunk\n", "Invalid magic for DFA\n", "Zero FPS reported, defaulting to 10\n", "dirac demuxer", "dnxhd demuxer", "unknown format version", "unknown format id", "channel type %i", "unknown most significant bit", "block_align overflow", "DSD ", "dsicin", "%2d%2d%2d%2d%2d%2d", "%.4d-%.2d-%.2dT%.2d:%.2d:%.2d", "Support for codec %x in DSS", "chunk size too small\n", "chunk size too big\n", "dtshd", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", "%sMetadata:\n", "\n%s  %-16s: ", "fps, ", "tbr, ", "tbn, ", "    Stream #%d:%d", "[0x%x]", ", %d, %d/%d", ", SAR %d:%d DAR %d:%d", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "%sSide data:\n", "%s  ", "new extradata", "paramchange: ", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "H.263 macroblock info", "stereo3d: ", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "quality factor: %d, pict_type: %c", "cpb: ", "bitrate max/min/avg: %d/%d/%d buffer size: %d vbv_delay: %ld", "Mastering Display Metadata, has_primaries:%d has_luminance:%d r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f) min_luminance=%f, max_luminance=%f\n", "Output", "Input", "%s #%d, %s, %s '%s':\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%s%d.%06d", ", bitrate: ", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "  Program %d %s\n", "  No Program\n", "Cannot find DV header.\n", "Can't determine profile of DV input stream.\n", "Detected timecode is invalid\n", "Unrecognized audio sample rate index (%d)\n", "stype %d is invalid\n", "too many dv pcm frames\n", "ipcm<4", "libavformat/dv.c", "cannot adjust audio bytes\n", "dv,dif", "dvbsub", "dvbsub demuxer", "dvbtxt", "dvbtxt demuxer", "Can't initialize DV format!\nMake sure that you supply exactly two streams:\n     video: 25fps or 29.97fps, audio: 2ch/48|44|32kHz/PCM\n     (50Mbps allows an optional second audio stream)\n", "sample_rate == 48000", "libavformat/dvenc.c", "Can't process DV frame #%d. Insufficient audio data or severe sync problem.\n", "Unexpected frame size, %d != %d\n", "Can't process DV frame #%d. Insufficient video data or severe sync problem.\n", "failed reading chunk type\n", "failed reading dxa_extra\n", "Frame size is too big: %u\n", "Unknown tag %c%c%c%c\n", "File contains no frames ???\n", "%d frame(s)\n", "unknown header 0x%04x\n", "ea_cdata", "video header followed by audio packet", "Packet is too short\n", "Timebase is invalid\n", "unknown 1SNh headerid", "stream type; audio compression_type=%i", "entered audio subheader\n", "revision (element 0x80) set to 0x%08x\n", "num_channels (element 0x82) set to 0x%08x\n", "compression_type (element 0x83) set to 0x%08x\n", "sample_rate (element 0x84) set to %i\n", "num_samples (element 0x85) set to 0x%08x\n", "exited audio subheader\n", "revision2 (element 0xA0) set to 0x%08x\n", "end of header block reached (within audio subheader)\n", "end of header block reached\n", "header element 0x%02x set to 0x%08x\n", "stream type; revision=%i", "stream type; revision=%i, revision2=%i", "stream type; revision2=%i", "stream type; compression_type=%i", "error parsing header: %i\n", "Unsupported sample rate: %d\n", "Invalid number of bytes per sample: %d\n", "24-bit Paris PCM format", "epaf", "paf,fap", "resyncing\n", "cannot find FFM syncword\n", "invalid stream index %d\n", "conf && st", "libavformat/ffmdec.c", "Invalid packet size %d, expected size was %d\n", "Invalid codec id: %d\n", "Codec type mismatch: expected %d, found %d\n", "Invalid extradata size %d\n", "Invalid time base %d/%d\n", "Invalid pix fmt id: %d\n", "Invalid sample rate %d\n", "Invalid number of channels %d\n", "Invalid frame size %d\n", "ffm demuxer", "server_attached", "ffm_write_index", "ffm_file_size", "Stream codec is not found. Codec private options are not stored.\n", "writing recommended configuration: %s\n", "ffm->packet_end >= ffm->packet", "libavformat/ffmenc.c", ";FFMETADATA", "[STREAM]", "[CHAPTER]", "TIMEBASE=%d/%d", "START=%ld", "Expected chapter start timestamp, found %s.\n", "END=%ld", "Expected chapter end timestamp, found %s.\n", "ffmetadata", "TIMEBASE=%d/%d\n", "START=%ld\n", "END=%ld\n", "ffmeta", "file:", "file,crypto", "truncate", "truncate existing files on write", "set I/O operation maximum block size", "follow", "Follow a file as it is being written", "magic number not found\n", "Unsupported packing method", "filmstrip", "only AV_PIX_FMT_RGBA is supported\n", "Invalid picture type: %d.\n", "Could not read mimetype from an attached picture.\n", "Error reading attached picture description.\n", "Error reading attached picture data.\n", "Error parsing attached picture.\n", "error parsing VorbisComment metadata\n", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "Invalid value of WAVEFORMATEXTENSIBLE_CHANNEL_MASK\n", "fLaC", "unable to rewrite FLAC header.\n", "Lavf57.41.100", "A WAVEFORMATEXTENSIBLE_CHANNEL_MASK is already present, this muxer will not overwrite it.\n", "0x%lx", "audio/x-flac", "flac muxer", "write_header", "Write the file header", "File with no specified width/height. Trying 640x480.\n", "Failed to peek at preamble\n", "Invalid or unsupported magic chunk in file\n", "Found invalid index entries, clearing the index.\n", "keyframe stream hasn't been created\n", "flv->last_keyframe_stream_index <= s->nb_streams", "libavformat/flvdec.c", "Skipping duplicate index\n", "Video codec (%x)", "Changing the codec id midstream", "NGINX RTMP", "Audio codec (%x)", "false", "AMF_DATA_TYPE_STRING parsing failed\n", "keyframes have been paresed\n", "!flv->keyframe_times", "!flv->keyframe_filepositions", "Invalid keyframes object, skipping.\n", "Keyframe index parsing failed\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_OBJECT\n", "Missing AMF_END_OF_OBJECT in AMF_DATA_TYPE_MIXEDARRAY, found %d\n", "unsupported amf type %d\n", "videodatarate", "audiodatarate", "datastream", "videocodecid", "audiocodecid", "audiosamplerate", "audiosamplesize", "Open Broadcaster Software v0.%d", "metadatacreator", "MEGA", "filesize", "type:%d, size:%d, last:%d, dts:%ld pos:%ld\n", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "Unknown type %s\n", "Adjusting next position due to index mismatch\n", "OnTextData packet", "Skipping flv packet: type %d, size %d, flags %d.\n", "%s stream discovered after head already parsed\n", "%d %X %d \n", "Negative cts, previous timestamps might be wrong.\n", "invalid timestamps %ld %ld\n", "Omnia A/XE", "Packet mismatch %d %d %d\n", "live_flv", "live_flvdec", "flv_metadata", "Allocate streams according to the onMetaData array", "missing_streams", "Failed to update header with correct duration.\n", "Failed to update header with correct filesize.\n", "FLV only supports wideband (16kHz) Speex audio\n", "FLV only supports mono Speex audio\n", "FLV does not support sample rate %d, choose from (44100, 22050, 11025)\n", "Audio codec '%s' not compatible with FLV\n", "datasize", "lasttimestamp", "totalframes", "hasAudio", "hasVideo", "hasCuePoints", "hasMetadata", "hasKeyframes", "Ignoring metadata for %s\n", "%s codec %s not compatible with flv\n", "AAC sequence header: %02x %02x.\n", "Packets are not in the proper order with respect to DTS\n", "libavformat/flvenc.c", "Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "aac bitstream error\n", "Warning: Speex stream has more than 8 frames per packet. Adobe Flash Player cannot handle this!\n", "Too large packet with size %u >= %u\n", "Text", "at most one video stream is supported in flv\n", "Codec %s is not supported in the official FLV specification,\n", "use vstrict=-1 / -strict -1 to use it anyway.\n", "Muxing VP6 in flv will produce flipped video on playback.\n", "at most one audio stream is supported in flv\n", "16-bit big-endian audio in flv is valid but most likely unplayable (hardware dependent); use s16le\n", "Subtitle codec '%s' for stream %d is not compatible with FLV\n", "Codec type '%s' for stream %d is not compatible with FLV\n", "video/x-flv", "flv muxer", "flvflags", "FLV muxer flags", "aac_seq_header_detect", "Put AAC sequence header based on stream data", "image2pipe", "Probing %s score:%d size:%d\n", "Probing %s score:%d increased to %d due to MIME type\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "%d, %10ld, %10ld, %8ld, %8d, 0x%08x", ", F=0x%0X", ", S=%d", "#extradata %d: %8d, 0x%08x\n", "#software: %s\n", "#tb %d: %d/%d\n", "#media_type %d: %s\n", "#codec_id %d: %s\n", "#sample_rate %d: %d\n", "#channel_layout %d: %lx\n", "#dimensions %d: %dx%d\n", "#sar %d: %d/%d\n", "format 0x%X", "st->codecpar->bits_per_coded_sample > 0", "libavformat/g722.c", "g722,722", "tco,rco,g723_1", "Invalid bit_rate value %ld. Only 6400 and 8000 b/s are supported.", "g729 demuxer", "bit_rate", "channels %d>2", "coef_type & 1", "genh", "NETSCAPE2.0", "GIF muxer supports only a single video GIF stream.\n", "video_par->format == AV_PIX_FMT_PAL8", "libavformat/gif.c", "Invalid palette extradata\n", "PAL8 packet is missing palette in extradata\n", "GIF muxer", "Number of times to loop the output: -1 - no loop, 0 - infinite loop", "Force delay (in centiseconds) after the last frame", "GIF87a", "GIF89a", "Graphic Control Extension block's size less than 4.\n", "lzw minimum code size must be >= 1\n", "invalid block label\n", "GIF demuxer", "min_delay", "minimum valid delay between frames (in hundredths of second)", "max_gif_delay", "maximum valid delay between frames (in hundredths of seconds)", "default_delay", "default delay between frames (in hundredths of second)", "ignore loop setting (netscape extension)", "gsm demuxer", "too many index entries %u (%x)\n", "invalid index length\n", "map packet not found\n", "unknown version or invalid map preamble\n", "material data longer than map data\n", "track description longer than map data\n", "invalid track type %x\n", "invalid track id %x\n", "invalid track description length specified\n", "sync lost in header\n", "No FPS track tag, using UMF fps tag. This might give wrong results.\n", "timecode_at_mark_in", "timecode_at_mark_out", "UMF packet too short\n", "UMF packet missing\n", "invalid media packet length\n", "invalid first and last sample values\n", "Ver 1\nBr %.6f\nIpg 1\nPpi %d\nBpiop %d\nPix 0\nCf %d\nCg %d\nSl %d\nnl16 %d\nVi 1\nf1 1\n", "size < sizeof(buffer)", "libavformat/gxfenc.c", "EXT:/PDR/default/ES.", "could not realloc map offsets\n", "EXT:/PDR/default/", "gxf muxer does not support streamed output, patch welcome\n", "only 16 BIT PCM LE allowed for now\n", "only 48000hz sampling rate is allowed\n", "only mono tracks are allowed\n", "video stream must be the first track\n", "unsupported video resolution, gxf muxer only accepts PAL or NTSC resolutions currently\n", "video codec not supported\n", "%d:%d:%d%c%d", "unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "could not reallocate flt entries\n", "h261 demuxer", "h263 demuxer", "h264 demuxer", "%d, %10ld, %10ld, %8ld, %8d, ", "#format: frame checksums\n", "#version: %d\n", "#hash: %s\n", "#extradata %d, %31d, ", "#stream#, dts,        pts, duration,     size, hash\n", "framemd5", "frame hash encoder class", "framehash", "MD5 encoder class", "set hash to use", "format_version", "file format version", "sha256", "failed to rename file %s to %s\n", "%s/stream%d.abst", "%s/stream%d.abst.tmp", "recorded", "%s/index.f4m", "%s/index.f4m.tmp", "<manifest xmlns=\"http://ns.adobe.com/f4m/1.0\">\n", "\t<id>%s</id>\n", "\t<streamType>%s</streamType>\n", "\t<deliveryType>streaming</deliveryType>\n", "\t<duration>%f</duration>\n", "\t<bootstrapInfo profile=\"named\" url=\"stream%d.abst\" id=\"bootstrap%d\" />\n", "\t<media bitrate=\"%d\" url=\"stream%d\" bootstrapInfoId=\"bootstrap%d\">\n", "\t\t<metadata>%s</metadata>\n", "\t</media>\n", "</manifest>\n", "%s/stream%dSeg1-Frag%d", "Failed to create directory %s\n", "Unsupported stream type in stream %d\n", "%s/stream%d_temp", "No video stream in output stream %d and no min frag duration set\n", "HDS muxer", "number of fragments kept in the manifest", "number of fragments kept outside of the manifest before removing from disk", "min_frag_duration", "minimum fragment duration (in microseconds)", "remove all fragments when finished", "configurationVersion:                %u\n", "general_profile_space:               %u\n", "general_tier_flag:                   %u\n", "general_profile_idc:                 %u\n", "general_profile_compatibility_flags: 0x%08x\n", "general_constraint_indicator_flags:  0x%012lx\n", "general_level_idc:                   %u\n", "min_spatial_segmentation_idc:        %u\n", "parallelismType:                     %u\n", "chromaFormat:                        %u\n", "bitDepthLumaMinus8:                  %u\n", "bitDepthChromaMinus8:                %u\n", "avgFrameRate:                        %u\n", "constantFrameRate:                   %u\n", "numTemporalLayers:                   %u\n", "temporalIdNested:                    %u\n", "lengthSizeMinusOne:                  %u\n", "numOfArrays:                         %u\n", "array_completeness[%u]:               %u\n", "NAL_unit_type[%u]:                    %u\n", "numNalus[%u]:                         %u\n", "nalUnitLength[%u][%u]:                 %u\n", "hevc,h265,265", "hevc demuxer", "com.apple.streaming.transportStreamTimestamp", "A HLS playlist item '%s' referred to an external file '%s'. Opening this file was forbidden for security reasons\n", "URI=", "BYTERANGE=", "TYPE=", "GROUP-ID=", "ASSOC-LANGUAGE=", "NAME=", "DEFAULT=", "FORCED=", "CHARACTERISTICS=", "METHOD=", "BANDWIDTH=", "AUDIO=", "VIDEO=", "SUBTITLES=", "#EXTM3U", "#EXT-X-STREAM-INF:", "#EXT-X-TARGETDURATION:", "#EXT-X-MEDIA-SEQUENCE:", "Filename extension of '%s' is not a common multimedia extension, blocked for security reasons.\nIf you wish to override this adjust allowed_extensions, you can set it to 'ALL' to allow all\n", "cookies", "user-agent", "http_proxy", "end_offset", "HLS request for url '%s', offset %ld, playlist %d\n", "Unable to read key file %s\n", "Unable to open key file %s\n", "crypto+%s", "crypto:%s", "SAMPLE-AES encryption is not supported yet\n", "Unable to seek to offset %ld of HLS segment '%s'\n", "Could not read complete segment.\n", "#EXT-X-KEY:", "AES-128", "SAMPLE-AES", "#EXT-X-MEDIA:", "public.accessibility.describes-music-and-sound", "public.accessibility.describes-video", "#EXT-X-PLAYLIST-TYPE:", "EVENT", "#EXT-X-MAP:", "#EXT-X-ENDLIST", "#EXTINF:", "#EXT-X-BYTERANGE:", "Empty playlist\n", "Error when loading first segment '%s'\n", "No expected HTTP requests have been made\n", "variant_bitrate", "Too large HLS ID3 tag (%d > %ld bytes)\n", "Stripped %d HLS ID3 bytes\n", "Stripped additional %d HLS ID3 bytes\n", "PRIV", "Invalid HLS ID3 audio timestamp %ld\n", "APIC", "!pls->id3_deferred_extra", "libavformat/hls.c", "Changing ID3 metadata in HLS audio elementary stream", "No longer receiving playlist %d\n", "Failed to reload playlist %d\n", "skipping %d segments ahead, expired from playlists\n", "Failed to open an initialization section in playlist %d\n", "Downloading an initialization section of size %ld\n", "Failed to open segment of playlist %d\n", "Now receiving playlist %d, segment %d\n", "stream index inconsistency: index %d, %d main streams, %d subdemuxer streams\n", "user_agent", "hls,applehttp", "live_start_index", "segment index to start live streams at (negative values are from the end)", "allowed_extensions", "List of file extensions that hls is allowed to access", "3gp,aac,avi,flac,mkv,m3u8,m4a,m4s,m4v,mpg,mov,mp2,mp3,mp4,mpeg,mpegts,ogg,ogv,oga,ts,vob,wav", "max_reload", "Maximum number of times a insufficient list is attempted to be reloaded", "deleting old segment %s\n", "failed to delete old segment %s: %s\n", "Cannot use rename on non file protocol, this may lead to races and temporarly partial files\n", "#EXTM3U\n", "#EXT-X-VERSION:%d\n", "#EXT-X-ALLOW-CACHE:%s\n", "#EXT-X-TARGETDURATION:%d\n", "#EXT-X-MEDIA-SEQUENCE:%ld\n", "#EXT-X-PLAYLIST-TYPE:EVENT\n", "#EXT-X-PLAYLIST-TYPE:VOD\n", "#EXT-X-DISCONTINUITY\n", "#EXT-X-KEY:METHOD=AES-128,URI=\"%s\"", ",IV=0x%s", "#EXTINF:%ld,\n", "#EXTINF:%f,\n", "#EXT-X-BYTERANGE:%li@%li\n", "#EXT-X-ENDLIST\n", "Could not get segment filename with use_localtime\n", "Could not create directory %s with use_localtime_mkdir\n", "Invalid segment filename template '%s' you can try use -use_localtime 1 with it\n", "Invalid segment filename template '%s'\n", "error opening key info file %s\n", "no key URI specified in key info file\n", "no key file specified in key info file\n", "error opening key file %s\n", "error reading key file %s\n", "encryption_key", "%032lx", "encryption_iv", "mpegts_flags", "sdt_period", "pat_period", "%d.ts", "%d.vtt", "Could not parse format options list '%s'\n", "More than a single video stream present, expect issues decoding it.\n", "-%s.ts", "_vtt.m3u8", "Some of provided format options in '%s' are not recognized\n", "hls muxer", "set first number in the sequence", "hls_time", "set segment length in seconds", "hls_list_size", "set maximum number of playlist entries", "hls_ts_options", "set hls mpegts list of options for the container format used for hls", "hls_vtt_options", "set hls vtt list of options for the container format used for hls", "hls_wrap", "set number after which the index wraps", "hls_allow_cache", "explicitly set whether the client MAY (1) or MUST NOT (0) cache media segments", "hls_base_url", "url to prepend to each playlist entry", "hls_segment_filename", "filename template for segment files", "hls_key_info_file", "file with key URI and key file path", "hls_subtitle_path", "set path of hls subtitles", "hls_flags", "set flags affecting HLS playlist and media file generation", "generate a single media file indexed with byte ranges", "delete_segments", "delete segment files that are no longer part of the playlist", "round_durations", "round durations in m3u8 to whole numbers", "discont_start", "start the playlist with a discontinuity tag", "omit_endlist", "Do not append an endlist when ending stream", "use_localtime", "set filename expansion with strftime at segment creation", "use_localtime_mkdir", "create last directory component in strftime-generated filename", "hls_playlist_type", "set the HLS playlist type", "pl_type", "EVENT playlist", "VOD playlist", "set the HTTP method", "invalid chunk size: %u, offset: %ld\n", "unknown chunk found: %u, offset: %ld\n", "invalid resolution: %ux%u\n", "0\r\n\r\n", "%x\r\n", "text/plain", "Internal server error", "Forbidden", "HTTP/1.1 %03d %s\r\nContent-Type: %s\r\nContent-Length: %zu\r\n\r\n%03d %s\r\n", "HTTP/1.1 %03d %s\r\nContent-Type: %s\r\nTransfer-Encoding: chunked\r\n\r\n", "HTTP reply header: \n%s----\n", "Chunked encoding data size: %lu'\n", "Invalid chunk size %lu\n", "Stream ends prematurely at %lu, should be %lu\n", "s->chunksize >= len", "libavformat/http.c", "sc->listen", "header='%s'\n", "Received method: %s\n", "Received and expected HTTP method do not match. (%s expected, %s received)\n", "Autodetected %s HTTP method\n", "Received and autodetected HTTP method did not match (%s autodetected %s received)\n", "Requested resource: %s\n", "HTTP/", "Malformed HTTP version string.\n", "HTTP version string: %s\n", "http_code=%d\n", "HTTP error %d %s\n", "Content-Length", "Content-Range", "bytes ", "Accept-Ranges", "Transfer-Encoding", "chunked", "WWW-Authenticate", "Authentication-Info", "Proxy-Authenticate", "Connection", "close", "Server", "AkamaiGHost", "MediaGateway", "Content-Type", "Set-Cookie", "Unable to parse '%s'\n", "Icy-MetaInt", "Icy-", "Content-Encoding", "gzip", "1.2.3", "Error during zlib initialisation: %s\n", "Your zlib was compiled without gzip support.\n", "Unknown content coding: %s\n", "Transfer-Encoding: chunked\r\n", "Proxy-", "no_proxy", "http://", "https", "\r\nUser-Agent: ", "User-Agent: %s\r\n", "\r\nAccept: ", "Accept: */*\r\n", "\r\nRange: ", "Range: bytes=%lu-", "\r\nExpect: ", "Expect: 100-continue\r\n", "\r\nConnection: ", "Connection: keep-alive\r\n", "Connection: close\r\n", "\r\nHost: ", "Host: %s\r\n", "\r\nContent-Length: ", "Content-Length: %d\r\n", "\r\nContent-Type: ", "Content-Type: %s\r\n", "\r\nCookie: ", "path=", "domain=", "Invalid cookie found, no value, path or domain specified\n", "%s; %s", "Cookie: %s\r\n", "\r\nIcy-MetaData: ", "Icy-MetaData: %d\r\n", "%s %s HTTP/1.1\r\n%s%s%s%s%s\r\n", "request: %s\n", "overlong headers\n", "Lower protocol\n", "Read headers\n", "Reply code: %d\n", "inflate return value: %d, %s\n", "Will reconnect at %lu error=%s.\n", "Failed to reconnect at %lu.\n", "icy_metadata_packet", "No trailing CRLF found in HTTP header.\n", "http,https,tls,rtp,tcp,udp,crypto,httpproxy", "control seekability of connection", "chunked_post", "use chunked transfer-encoding for posts", "set HTTP proxy to tunnel through", "set custom HTTP headers, can override built in default headers", "content_type", "set a specific content type for the POST messages", "override User-Agent header", "Lavf/57.41.100", "multiple_requests", "use persistent connections", "post_data", "set custom HTTP post data", "export the MIME type", "set cookies to be sent in applicable future requests, use newline delimited Set-Cookie HTTP field value syntax", "request ICY metadata", "icy_metadata_headers", "return ICY metadata headers", "return current ICY metadata packet", "metadata read from the bitstream", "auth_type", "HTTP authentication type", "No auth method set, autodetect", "HTTP basic authentication", "send_expect_100", "Force sending an Expect: 100-continue header for POST", "The actual location of the data received", "initial byte offset", "try to limit the request to bytes preceding this offset", "Override the HTTP method or set the expected HTTP method from a client", "reconnect", "auto reconnect after disconnect before EOF", "reconnect_at_eof", "auto reconnect at EOF", "reconnect_streamed", "auto reconnect streamed / non seekable streams", "reconnect_delay_max", "max reconnect delay in seconds after which to give up", "listen on HTTP", "resource", "The resource requested by a client", "reply_code", "The http status code to return to a client", "nextnonce=", "realm=", "opaque=", "algorithm=", "qop=", "stale=", "auth", "Authorization: Basic ", "MD5-sess", "auth-int", "Authorization: Digest ", "username=\"%s\"", ", realm=\"%s\"", ", nonce=\"%s\"", ", uri=\"%s\"", ", response=\"%s\"", ", algorithm=\"%s\"", ", opaque=\"%s\"", ", qop=\"%s\"", ", cnonce=\"%s\"", ", nc=%s", "Invalid image size %d\n", "ICO already contains %d images\n", "Invalid BMP\n", "Output is not seekable\n", "BMP must be 1bit, 4bit, 8bit, 16bit, 24bit, or 32bit\n", "PNG in ico requires pixel format to be rgba\n", "Unsupported codec %s\n", "Unsupported dimensions %dx%d (dimensions cannot exceed 256x256)\n", "image/vnd.microsoft.icon", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Grunge", "Hip-Hop", "New Age", "Oldies", "Other", "Reggae", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Trance", "Classical", "Instrumental", "Acid", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "Failed to alloc %zu bytes\n", "Failed to alloc %d bytes\n", "Error reading GEOB frame, data truncated.\n", "GEOB", "Error reading frame %s, skipped\n", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "TCON", "(%d)", "TXXX", "No AVFormatContext, skipped ID3 chapter data\n", "encrypted", "encrypted and compressed", "extended header too long.", "invalid extended header length", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Skipping %s ID3v2 frame %s.\n", "USLT", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to alloc %ld bytes\n", "Failed to read compressed tag\n", "Failed to uncompress tag: %d\n", "lyrics-%s%s%s", "invalid frame id, assuming padding\n", "Error reading lyrics, skipped\n", "ID3v2.%d tag skipped, cannot handle %s\n", "TYER", "TDAT", "-%.2s-%.2s", " %.2s:%.2s", "CHAP", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "compilation", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "TPUB", "TRCK", "TSSE", "lyrics", "%.2s%.2s", "No mimetype is known for stream %d, cannot write an attached picture.\n", "incomplete packet\n", "invalid chunk size: %u\n", "incomplete header\n", "invalid sample rate: %u\n", "invalid bytes per sample: %u\n", "invalid channels: %u\n", "  unknown RoQ chunk (%04X)\n", "Frame rate must be integer\n", "Frame rate may not exceed 255fps\n", "For vintage compatibility fps must be 30\n", "DST ", "MLFTMRGTC   LFE LS  RS  MLFTMRGTC   LS  RS  ", "SLFTSRGTlibavformat/iff.c", "file_history", "channel_comment", "Invalid CMAP chunk size %lu\n", "color format %.16s", "DSIFF v%d.%d.%d.%d\n", "cannot allocate metadata tag %s!\n", "unknown property type", "%02dh:%02dm:%02ds:%d", "absolute_start_time", "'%c%c%c%c' compression is not supported\n", "id3 exceeds chunk size\n", "loudspeaker configuration %d", "%04d-%02d-%02d %02d:%02d", "comment_time", "channel%d_comment", "compression %d and bit depth %d", "Unknown SVX8 compression method '%d'\n", "st->codecpar->extradata_size >= 41", "general_remark", "operator_name", "creating_machine", "file_revision", "dsd_source_comment", "analogue_source_comment", "pcm_source_comment", "#!iLBC20\n", "#!iLBC30\n", "Unrecognized iLBC file header\n", "Unsupported number of streams\n", "Unsupported codec\n", "Unsupported mode\n", "audio/iLBC", "ljpg", "mpg1-img", "mpg2-img", "mpg4-img", "ffv1-img", "im24", "im32", "sunras", "yuv10", "alias_pix demuxer", "SDPX", "XPDS", "No such pixel format: %s.\n", "POSIX.1-2008 not supported, nanosecond file timestamps unavailable\n", "Could find no file with path '%s' and index in the range %d-%d\n", "Pattern type 'glob' was selected but globbing is not supported by this libavformat build\n", "Unknown value '%d' for pattern_type option\n", "Could not open file : %s\n", "webp_pipe", "webp demuxer", "tiff_pipe", "tiff demuxer", "sunrast_pipe", "sunrast demuxer", "sgi_pipe", "sgi demuxer", "qdraw_pipe", "qdraw demuxer", "ppm_pipe", "ppm demuxer", "png_pipe", "png demuxer", "pictor_pipe", "pictor demuxer", "pgmyuv_pipe", "pgmyuv demuxer", "pgm_pipe", "pgm demuxer", "pcx_pipe", "pcx demuxer", "pbm_pipe", "pbm demuxer", "pam_pipe", "pam demuxer", "jpegls_pipe", "jpegls demuxer", "jpeg_pipe", "j2k_pipe", "j2k demuxer", "exr_pipe", "exr demuxer", "dpx_pipe", "dpx demuxer", "dds_pipe", "dds demuxer", "bmp_pipe", "bmp demuxer", "image2pipe demuxer", "image2 demuxer", "set the video framerate", "force loop over input file sequence", "pattern_type", "set pattern type", "glob_sequence", "select glob/sequence pattern type", "glob", "select glob pattern type", "select sequence pattern type", "disable pattern matching", "set video pixel format", "start_number_range", "set range for looking at the first sequence number", "force frame size in bytes", "ts_from_file", "set frame timestamp from file's one", "ts_type", "nano second precision", "UVAx", "Could not get frame filename with strftime\n", "Could not get frame filename number %d from pattern '%s' (either set updatefirst or use a pattern like %%03d within the filename pattern)\n", "bmp,dpx,jls,jpeg,jpg,ljpg,pam,pbm,pcx,pgm,pgmyuv,png,ppm,sgi,tga,tif,tiff,jp2,j2c,j2k,xwd,sun,ras,rs,im1,im8,im24,sunras,xbm,xface,pix,y", "image2 muxer", "updatefirst", "continuously overwrite one file", "update", "strftime", "use strftime for filename", "atomic_writing", "write files atomically (using temporary files and renames)", "MJPG", "Ingenient packet: size=%d, width=%d, height=%d, unk1=%d unk2=%d\n", "ingenient", "ingenient demuxer", "Can not read audio packet beforeaudio codec is known\n", "sending audio frame with pts %ld (%d audio frames)\n", "sending video frame with pts %ld\n", "Interplay audio", "chunk type 0x%04X, 0x%04X bytes: ", "initialize audio\n", "audio only\n", "initialize video\n", "video (and audio)\n", "shutdown\n", "invalid chunk\n", "chunk_size countdown just went negative\n", "  opcode type %02X, version %d, 0x%04X bytes: ", "end of stream\n", "end of chunk\n", "create timer\n", "bad create_timer opcode\n", "  %.2f frames/second (timer div = %d, subdiv = %d)\n", "initialize audio buffers\n", "bad init_audio_buffers opcode\n", "audio: %d bits, %d Hz, %s, %s format\n", "start/stop audio\n", "initialize video buffers\n", "bad init_video_buffers opcode\n", "video resolution: %d x %d\n", "unknown (but documented) opcode %02X\n", "send buffer\n", "audio frame\n", "silence frame\n", "initialize video mode\n", "create gradient\n", "set palette\n", "demux_ipmovie: set_palette opcode with invalid size\n", "demux_ipmovie: set_palette indexes out of range (%d -> %d)\n", "set palette compressed\n", "set decoding map\n", "set video data\n", "*** unknown opcode type\n", "ipmovie", "unknown tag %X\n", "sf,ircam", "c608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "ssmv", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "Shr7", "MPEG-4 description: tag=0x%02x len=%d\n", "esds object type id 0x%02x\n", "Specific MPEG-4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "IMA_ADPCM_Sound", "Failed parsing packet size\n", "Failed parsing stereo flag\n", "Failed parsing rate_divisor\n", "packet_size %d is invalid\n", "failed to grow packet\n", "Truncated packet! Read %d of %d bytes\n", "Invalid frame rate\n", "Format supports only exactly one video stream\n", "Currently only VP8 and VP9 are supported!\n", "DKIF", "VP90", "%*u:%*u:%*u.%*u %*u:%*u:%*u.%*u %c", "@%u @%u %c", "%d%*1[.:]%d%*1[.:]%d%*1[.:]%d", "#S %s", "#T %s", "%u:%u:%u.%u %u:%u:%u.%u %n", "@%u @%u %n", "CLOCKPAUSE", "DIRECTIVE", "FONT", "HRES", "INCLUDE", "PALETTE", "QUANTIZE", "RAMP", "SHIFT", "TIMERES", "text/x-jacosub", "jss,js", "unsupported audio codec\n", " Compression by John M Phillips Copyright (C) 1995 The Bitmap Brothers Ltd.", "libavformat/latmenc.c", "LATM packet size larger than maximum size 0x1fff\n", "Extradata is larger than currently supported.\n", "BUG: ALS offset is not byte-aligned\n", "Muxing MPEG-4 AOT %d in LATM is not supported\n", "audio/MP4A-LATM", "latm,loas", "LATM/LOAS muxer", "smc-interval", "StreamMuxConfig interval.", "invalid or unsupported frame_type\n", "packet size %d is invalid\n", "lmlm4", "encoder_version", "[-%lu:%lu.%lu]", "[%lu:%lu.%lu]", "offset:", "%ld:%lu.%lu]", "LRC supports only a single subtitle stream.\n", "Unsupported subtitle codec: %s\n", "[%s:%s]\n", "Subtitle starts with '[', may cause problems with LRC format.\n", "[%02ld:%02ld.%02ld]", "[-%02ld:%02ld.%02ld]", "%d streams", "id %d", "LEITCH", "Format version %u", "Invalid header size 0x%x\n", "got audio packet, but no audio stream present\n", "only tightly packed PCM currently supported\n", "only 16-, 20-, 24- and 32-bit PCM currently supported\n", "video doesn't seem to be PAL or NTSC. guessing PAL\n", "got packet with illegal stream index %u\n", "got audio packet without having an audio stream\n", "expected %d B size header, got %d\n", "record: %x = %i-%02i-%02i\n", "expire: %x = %i-%02i-%02i\n", "VBI data not yet supported\n", "m4v demuxer", "text/plain", "application/x-truetype-font", "application/x-font", "application/vnd.ms-opentype", "binary", "image/gif", "image/jpeg", "image/png", "image/tiff", "A_AAC", "A_AC3", "A_ALAC", "A_DTS", "A_EAC3", "A_FLAC", "A_MLP", "A_MPEG/L2", "A_MPEG/L1", "A_MPEG/L3", "A_OPUS", "A_OPUS/EXPERIMENTAL", "A_PCM/FLOAT/IEEE", "A_PCM/FLOAT/IEEE", "A_PCM/INT/BIG", "A_PCM/INT/BIG", "A_PCM/INT/BIG", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_PCM/INT/LIT", "A_QUICKTIME/QDM2", "A_REAL/14_4", "A_REAL/28_8", "A_REAL/ATRC", "A_REAL/COOK", "A_REAL/SIPR", "A_TRUEHD", "A_TTA1", "A_VORBIS", "A_WAVPACK4", "D_WEBVTT/SUBTITLES", "D_WEBVTT/CAPTIONS", "D_WEBVTT/DESCRIPTIONS", "D_WEBVTT/METADATA", "S_TEXT/UTF8", "S_TEXT/UTF8", "S_TEXT/ASCII", "S_TEXT/ASS", "S_TEXT/SSA", "S_ASS", "S_SSA", "S_VOBSUB", "S_DVBSUB", "S_HDMV/PGS", "V_DIRAC", "V_MJPEG", "V_MPEG1", "V_MPEG2", "V_MPEG4/ISO/ASP", "V_MPEG4/ISO/AP", "V_MPEG4/ISO/SP", "V_MPEG4/ISO/AVC", "V_MPEGH/ISO/HEVC", "V_MPEG4/MS/V3", "V_PRORES", "V_REAL/RV10", "V_REAL/RV20", "V_REAL/RV30", "V_REAL/RV40", "V_SNOW", "V_THEORA", "V_UNCOMPRESSED", "V_VP8", "V_VP9", "background", "anaglyph_cyan_red", "anaglyph_green_magenta", "LEAD_PERFORMER", "PART_NUMBER", "Skipping invalid tag with no TagName.\n", "%s/%s", "Too many level1 elements or circular seekheads.\n", "Read error at pos. %lu (0x%lx)\n", "Invalid EBML number size tag 0x%02x at pos %lu (0x%lx)\n", "Unknown entry 0x%X\n", "Invalid length 0x%lx > 0x%lx for syntax element %i\n", "File moves beyond max. allowed depth (%d)\n", "Duplicate element\n", "Invalid element\n", "Read error\n", "Max EBML element depth (%d) reached, cannot parse further.\n", "Compression size but no data in headerstrip\n", "EBML block data error\n", "Invalid track number %d\n", "Invalid stream %lu or size %u\n", "File is broken, keyframes not correctly marked!\n", "Corrupt int4 RM-style audio packet size\n", "Corrupt sipr RM-style audio packet size\n", "Corrupt generic RM-style audio packet size\n", "Error parsing a wavpack block.\n", "Dropping apparently-broken index.\n", "Unknown or unsupported track type %lu\n", "Invalid sample rate %f, defaulting to 8000 instead.\n", "Multiple combined encodings not supported", "Unsupported encoding type", "Failed to decode codec private data\n", "enc_key_id", "V_MS/VFW/FOURCC", "A_MS/ACM", "A_QUICKTIME", "V_QUICKTIME", "mov FourCC not found %s.\n", "Too large audio channel number %lu or bitdepth %lu. Skipping track.\n", "Invalid FLAC private data\n", "Unknown/unsupported AVCodecID %s.\n", "stereo_mode", "D_WEBVTT/CAPTIONS", "D_WEBVTT/DESCRIPTIONS", "D_WEBVTT/METADATA", "SMI ", "EBML header parsing failed\n", "EBML header using unsupported features\n(EBML version %lu, doctype %s, doc version %lu)\n", "incomplete attachment\n", "mimetype", "The tags at index %d refer to a non-existent attachment %ld.\n", "The tags at index %d refer to a non-existent chapter %ld.\n", "The tags at index %d refer to a non-existent track %ld.\n", "Unknown EBML doctype '%s'\n", "Failed to read file headers\n", "No streams found\n", "webm_dash_manifest_duration", "webm_dash_manifest_initialization_range", "webm_dash_manifest_file_name", "webm_dash_manifest_track_number", "webm_dash_manifest_cues_start", "webm_dash_manifest_cues_end", "webm_dash_manifest_bandwidth", "webm_dash_manifest_cluster_keyframe", "%s%ld", "webm_dash_manifest_cue_timestamps", "MAIN", "webm_dash_manifest", "matroska,webm", "mkv,mk3d,mka,mks", "audio/webm,audio/x-matroska,video/webm,video/x-matroska", "WebM DASH Manifest demuxer", "flag indicating that the input is a live file that only has the headers.", "(none)", "libavformat/matroskaenc.c", "bytes >= needed_bytes", "Starting new cluster at offset %lu bytes, pts %ludts %lu\n", "size >= 2", "bytes <= 8", "tracknum>=0 && tracknum<num_tracks", "Writing block at offset %lu, size %d, pts %ld, dts %ld, duration %ld, keyframe %d\n", "Error stripping a WavPack packet.\n", "Invalid chapter start (%ld) or end (%ld).\n", "encoding_tool", "D_WEBVTT/SUBTITLES", "Lavf", "The Matroska muxer does not yet support muxing %s\n", "Error parsing AAC extradata, unable to determine samplerate.\n", "Raw RGB is not supported Natively in Matroska, you can use AVI or NUT or\nIf you would like to store it anyway using VFW mode, enable allow_raw_vfw (-allow_raw_vfw 1)\n", "Initial padding is invalid\n", "Only VP8 or VP9 video and Vorbis or Opus audio and WebVTT subtitles are supported for WebM.\n", "The specified stereo mode is not valid.\n", "Overflow in display width\n", "Subtitle codec %d is not supported.\n", "Only audio, video, and subtitles are supported for Matroska.\n", "Invalid extradata found, ALAC expects a 36-byte QuickTime atom.", "codec %s is not supported by this format\n", "No bmp codec tag found for codec %s\n", "No wav codec tag found for codec %s\n", "DURATION", "Attachment stream %d has no filename tag.\n", "Attachment stream %d has no mimetype tag and it cannot be deduced from the codec id.\n", "Using %.16lx for attachment %d\n", "Can't write packet with unknown timestamp\n", "Starting new cluster due to timestamp\n", "Failed to open dynamic buffer\n", "Writing block at offset %lu, size %d, pts %ld, dts %ld, duration %ld, flags %d\n", "%.*s\n%.*s\n%.*s", "Could not write cached audio packet ret:%d\n", "Insufficient space reserved for cues: %d (needed: %ld).\n", "stream %d end duration = %lu\n", "%02d:%02d:%012.9f", "Flushing cluster at offset %lu bytes\n", "audio/x-matroska", "matroska audio muxer", "video/webm", "webm muxer", "matroska muxer", "reserve_index_space", "Reserve a given amount of space (in bytes) at the beginning of the file for the index (cues).", "cluster_size_limit", "Store at most the provided amount of bytes in a cluster. ", "cluster_time_limit", "Store at most the provided number of milliseconds in a cluster.", "Create a WebM file conforming to WebM DASH specification", "dash_track_number", "Track number for the DASH stream", "Write files assuming it is a live stream.", "allow_raw_vfw", "allow RAW VFW mode", "mgsts", "{%*d}{}%c", "{%*d}{%*d}%c", "{DEFAULT}{}%c", "{%d}{}%6lf", "{%d}{%*d}%6lf", "Invalid event \"%s\" at line %d\n", "{%d}{%c", "{%d}{%d}", "microdvddec", "set the movie frame rate fallback", "{%ld}", "Exactly one MicroDVD stream is needed.\n", "{DEFAULT}{}", "text/x-microdvd", "More than one stream unsupported\n", "# timecode format v2\n", "mkvtimestamp_v2", "raw api version", "invalid bits_per_coded_sample %d (size: %dx%d)\n", "cfa_pattern", "cameraName", "cameraModel", "cameraSerial", "focalLength", "focalDist", "aperture", "stabilizerMode", "autofocusMode", "lensID", "lensName", "lensSerial", "wb_mode", "kelvin", "wbgain_r", "wbgain_g", "wbgain_b", "wbs_gm", "wbs_ba", "isoMode", "isoValue", "isoAnalog", "digitalGain", "shutterValue", "picStyleId", "sharpness", "colortone", "picStyleName", "unsupported tag %c%c%c%c, size %u\n", "guid", "unknown video class", "unknown audio class", "ignoring %s; bad format or guid mismatch\n", "scanning %s\n", "ignoring %s; %s\n", "no index entries found\n", "unknown chunk type 0x%x\n", "MIDI like format found, unsupported\n", "Unsupported SMAF chunk %08x\n", "Invalid sample rate\n", "Unexpected SMAF chunk %08x\n", "VN:Lavf,", "VN:Lavf57.41.100,", "Unsupported sample rate %d, supported are 4000, 8000, 11025, 22050 and 44100\n", "Yamaha SMAF stereo is experimental, add '-strict %d' if you want to use it.\n", "CNTI", "OPDA", "application/vnd.smaf", "Unknown MOV field order 0x%04x\n", "enda %d\n", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type: %08x '%.4s' parent:'%.4s' sz: %ld %ld %ld\n", "overread end of atom '%.4s' by %ld bytes\n", "ignoring multiple glbl\n", "Found duplicated MOOV Atom. Skipped it\n", "root atom offset 0x%lx: partial file\n", "read fragments, offset 0x%lx\n", "duplicate saiz atom\n", "saiz atom auxiliary_info_sizes size %ld invalid\n", "failed to read the auxiliary info sizes", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %ld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %ld\n", "frag flags 0x%x\n", "could not find corresponding trex\n", "could not find corresponding track id %d\n", "Duplicated ELST atom\n", "track[%i].edit_count = %i\n", "duration=%ld time=%ld rate=%f\n", "ctype= %.4s (0x%08x)\n", "stype= %.4s\n", "handler_name", "iTunSMPB", "%*X %X %X %X", "cdec", "Unhandled or malformed custom metadata of size %ld\n", "qt  ", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "compatible_brands", "duplicate senc atom\n", "senc atom size %ld invalid\n", "failed to read the auxiliary info", "systemBitrate=\"", "unknown compression for cmov atom !\n", "get_wav_header failed\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "stream %d, sample %d, dts %ld\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "time scale = %i\n", "Multiple mdhd?\n", "Version %d", "[aax] file checksum == ", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "type %.4s size %d\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x08%x size %d\n", "stream %d, missing mandatory atoms, broken header\n", "stream %d, timescale not set\n", "multiple edit list entries, a/v desync might occur, patch welcome\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "Sample size %u is too large\n", "AVIndex stream %d, sample %d, offset %lx, dts %ld, size %d, distance %d, keyframe %d\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %d\n", "AVIndex stream %d, chunk %d, offset %lx, dts %ld, size %d, duration %d\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "stream %d, timestamp %ld, sample %d\n", "current sample %d greater than the number of auxiliary info sample sizes %zu\n", "auxiliary info offset %zu greater than auxiliary info size %zu\n", "stream %d, found sample %d\n", "The 'keys' atom with the invalid key count: %d\n", "The key# %d in meta has invalid size: %d\n", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "episode_uid", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "warning", "loci too short\n", "place name too long\n", "loci too short (%u bytes left, need at least %d)\n", "%+08.4f%+09.4f", "%s-%s", "Unknown cover type: 0x%x.\n", "Error parsing cover art.\n", "The index of 'data' is out of range: %d < 1 or >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the number (%d) in string.\n", "Failed to store the number (%u) in string.\n", "Failed to store the float32 number (%f) in string.\n", "HandBrake %d.%d.%d", "lang \"%3s\" ", "tag \"%s\" value \"%s\" atom \"%.4s\" %d %ld\n", "truncated extradata\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unexpected size %ld\n", "aclr not decoded - unable to add atom to extradata\n", "size: %dx%d\n", "palette: ", "%06x%s", "stream has moof boxes, will look for a mfra\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "found tfra\n", "failed to seek back after looking for mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %lx\n", "Duplicated STPS atom\n", "Duplicated STCO atom\n", "keyframe_count = %d\n", "Duplicated STSS atom\n", "track[%i].stsc.entries = %i\n", "Duplicated STSC atom\n", "sample_size = %d sample_count = %d\n", "Invalid sample field size %d\n", "Duplicated STSZ atom\n", "Duplicated SBGP atom\n", "track[%i].stts.entries = %i\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "sample_count=%d, sample_duration=%d\n", "sidx version %u", "sidx reference_type 1", "Unsupported DTS audio channel layout", "track[%i].ctts.entries = %i\n", "ignoring CTTS entry with count=%d duration=%d\n", "count=%d, duration=%d\n", "CTTS invalid\n", "mov_update_dts_shift(): dts_shift set to %d\n", "dts shift %d\n", "flags 0x%x entries %d\n", "first sample flags 0x%x\n", "found frag time %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\n", "calculated into dts %ld\n", "found frag time %ld, using it for dts\n", "Failed to add index entry\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%ld\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "Forcing full parsing for mp3 stream\n", "Referenced QT chapter track not found\n", "tmcd", "stream %d, offset 0x%lx: partial file\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "invalid size %ld in stsd\n", "multiple fourcc not supported\n", "Concatenated H.264 or H.265 might not play correctly.\n", "size=%ld 4CC= %c%c%c%c/0x%08x codec_type=%d\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "audio channels %d\n", "version =%d, isom =%d\n", "reel_name", "dv demux context alloc error\n", "dv demux context init error\n", "stsd", "hvc1", "hev1", "mp4s", "mov,mp4,m4a,3gp,3g2,mj2", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "export_all", "Export unrecognized metadata entries", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "decryption_key", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "\fencd", "avc1\r", "text", "avc1\r", "mp4a", "tx3g", "avc1k", "VP6A]", "VP6F", "yuv2", "yuvs", "2vuy", "raw  ", "BGRA ", "RGBA ", "ABGR ", "b48r0", "Application provided initial timestamp: %ld is out of range for mov/mp4 format\n", "Application provided duration: %ld is invalid\n", "stss", "stps", "mhlr", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "HintHandler", "TimeCodeHandler", "url ", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "dhlr", "Unknown hldr_type for %s / 0x%04X, writing dummy values\n", "handler", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "a=control:streamid=%d\r\n", "Non-consecutive fragments, writing incorrect sidx\n", "Lucida Grande", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "PSP mode need one video and one audio stream\n", "next_dts >= 0", "libavformat/movenc.c", "next_dts <= 2147483647", "malformed location metadata\n", "earth", "trkn", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "CodecPrivateData", "yrrc", "albm", "XDCAM", " HD422", " %d%c", "Could not locate DNxHD bit stream in vos_data\n", "Could not locate DNxHD bit stream, vos_data too small\n", "moov atom written before any packets, unable to write correct dvc1 atom. Set the delay_moov flag to fix this.\n", "DpxE", "gamma value %g\n", "writing gama value %d\n", "track->mode == 0x02", "gamma value unknown, unable to write gama atom\n", "Not writing 'gama' atom. Format is not MOV.\n", "color primaries unspecified, assuming bt709\n", "color primaries unspecified, assuming bt470bg\n", "color primaries unspecified, assuming smpte170\n", "color primaries unspecified, unable to assume anything\n", "track->mode == 0x02 || track->mode == 0x01", "Not writing 'colr' atom. Format is not MOV or MP4.\n", "track width is too large\n", "track height is too large\n", "EDTS using dts:%ld cts:%d instead of dts:%ld cts:%ld tid:%d\n", "av_rescale_rnd(start_dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "Not writing any edit list even though one would have been required\n", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "not writing 'chan' tag due to lack of channel information\n", "fps %d is too large\n", "reel_name length %lu is too large\n", "lpcm", "2006/04/01 11:11:11", "perf", "titl", "gnre", "dscp", "cprt", "aART", "ldes", "tvsh", "tven", "tvnn", "tves", "tvsn", "stik", "hdvd", "pgap", "cpil", "tmpo", "Unable to re-open %s output file for the second pass (faststart)\n", "Estimating the duration of the last packet in a fragment, consider setting the duration field in AVPacket instead.\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Dropping invalid packet from start of the stream\n", "Multiple independent substreams", "Track %d starts with a nonzero dts %ld, while the moov already has been written. Set the delay_moov flag to handle this case.\n", "pts has no value\n", "Starting second pass: moving the moov atom to the beginning of the file\n", "reserved_moov_size is too small, needed %ld additional\n", "Starting second pass: inserting sidx atoms\n", "wide", "free", "ipod", "No meaningful edit list will be written when using empty_moov without delay_moov\n", "Sample interleaving in fragments is mutually exclusive with omit_tfhd_offset and separate_moof\n", "muxer does not support non seekable output\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "Invalid encryption key len %d expected %d\n", "Invalid encryption kid len %d expected %d\n", "unsupported encryption scheme %s\n", "Warning, extension is not .m4a, .m4v nor  .m4b Quicktime/Ipod might not play the file\n", "unsupported height for dv codec\n", "%s rawvideo cannot be written to mov, output file will be unreadable\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "Resolution %dx%d too large for mov/mp4\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "VP9 in MP4 support is experimental, add '-strict %d' if you want to use it.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n", "track %d: muxing mp3 at %dhz is not standard in MP4\n", "palette:", "%06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<head>\n", "<meta name=\"creator\" content=\"%s\" />\n", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%ld\">\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "systemBitrate", "trackID", "FourCC", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "application/f4v", "f4v muxer", "video/mp4", "ismv,isma", "ismv muxer", "m4v,m4a", "ipod muxer", "tg2 muxer", "mp4,psp", "psp muxer", "mp4 muxer", "tgp muxer", "mov muxer", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "maximum moov size so it can be placed at the begin", "empty_moov", "Make the initial moov atom empty", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "Write separate moof/mdat atoms for each track", "frag_custom", "Flush fragments on caller requests", "isml", "Create a live smooth streaming feed (for pushing to a publishing point)", "faststart", "Run a second pass to put the index (moov atom) at the beginning of the file", "omit_tfhd_offset", "Omit the base data offset in tfhd atoms", "disable_chpl", "Disable Nero chapter atom", "default_base_moof", "Set the default-base-is-moof flag in tfhd atoms", "Write DASH compatible fragmented MP4", "frag_discont", "Signal that the next fragment is discontinuous from earlier ones", "Delay writing the initial moov until the first fragment is cut, or until the first fragment flush", "global_sidx", "Write a global sidx index at the start of the file", "write_colr", "Write colr atom (Experimental, may be renamed or changed, do not use from scripts)", "write_gama", "Write deprecated gama atom", "use_metadata_tags", "Use mdta atom for metadata.", "rtpflags", "RTP muxer flags", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "rfc2190", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "skip_rtcp", "Don't send RTCP sender reports", "h264_mode0", "Use mode 0 for H.264 in RTP", "send_bye", "Send RTCP BYE packets when finishing", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "Maximum fragment duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "Number of lookahead entries for ISM files", "video_track_timescale", "set timescale of all video tracks", "Override major brand", "use_editlist", "use edit list", "fragment_index", "Fragment number of the next fragment", "mov_gamma", "gamma value for gama atom", "frag_interleave", "Interleave samples within fragments (max number of consecutive samples, lower is tighter interleaving, but with more overhead)", "encryption_scheme", "Configures the encryption scheme, allowed values are none, cenc-aes-ctr", "The media encryption key (hex)", "encryption_kid", "The media encryption key identifier (hex)", "CENC-AVC: remaining size %d smaller than nal length+type %d\n", "CENC-AVC: nal size %d remaining %d\n", "Unable to initialize hinting of stream %d\n", "rtpo", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "Cannot determine file size, skipping TOC table.\n", "pad %d %d\n", "Skipping %d bytes of junk at %ld.\n", "Invalid frame size (%d): Could not seek to %ld.\n", "Failed to read frame size: Could not seek to %ld.\n", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "Unsupported sample rate, not writing Xing header.\n", "Unsupported number of channels, not writing Xing header.\n", "best_bitrate_idx >= 0", "libavformat/mp3enc.c", "Lavc libmp3lame", "Lavf lame", "Too many samples of initial padding.\n", "Invalid ID3v2 version requested: %d. Only 3, 4 or 0 (disabled) are allowed.\n", "Invalid audio stream. Exactly one MP3 audio stream is required.\n", "Only audio streams and pictures are allowed in MP3.\n", "Attached pictures were requested, but the ID3v2 header is disabled.\n", "Audio packet of size %d (starting with %08X...) is invalid, writing it anyway.\n", "Not enough memory to buffer audio. Skipping picture streams\n", "No packets were sent for some of the attached pictures.\n", "audio/mpeg", "MP3 muxer", "write_id3v1", "Enable ID3v1 writing. ID3v1 tags are written in UTF-8 which may not be supported by most software.", "write_xing", "Write the Xing header containing file duration.", "mp2,m2a,mpa", "Not a Musepack file\n", "Can demux Musepack SV7, got version %02X\n", "Too many frames, seeking is not possible\n", "Cannot allocate seektable\n", "Container reports no frames\n", "No seek table at given position\n", "Bad seek table size\n", "seek table truncated\n", "Seek table is too big\n", "Not a Musepack8 file\n", "Invalid chunk length\n", "Stream header not found\n", "Unknown stream version %d\n", "IMKH", "Sofdec", "# VobSub index file,", "The input index filename is too short to guess the associated .SUB file\n", "IDX/SUB: %s -> %s\n", "Unable to open %s as MPEG subtitles\n", "id: %63[^,], index: %u", "Unable to parse index line '%s', assuming 'id: und, index: 0'\n", "Maximum number of subtitles streams reached\n", "IDX stream[%d] id=%s\n", "timestamp:", "Timestamp declared before any stream\n", "%02d:%02d:%02d:%03d, filepos: %lx", "Unable to parse timestamp line '%s', abort parsing\n", "alt:", "IDX stream[%d] name=%s\n", "delay:", "langidx:", "Invalid langidx specified\n", "Further flags set but no bytes left\n", "pes_ext %X is invalid\n", "none (ret=%d)\n", "pos=0x%lx dts=0x%lx %0.3f\n", "%d: pts=%0.3f dts=%0.3f size=%d\n", "tmpq->nb_subs", "libavformat/mpeg.c", "vobsub", "sub_name", "URI for .sub file", "buffer underflow st=%d bufi=%d size=%d\n", "Invalid packet size %d\n", "%s in MPEG-1 system streams is not widely supported, consider using the vob or the dvd muxer to force a MPEG-2 program stream.\n", "VBV buffer size not set, using default size of 130KB\nIf you want the mpeg file to be compliant to some specification\nLike DVD, VCD or others, make sure you set the correct buffer size\n", "buffer size %d, too large\n", "Invalid media type %s for output stream #%d\n", "mux rate %d is too large\n", "packet ID=%2x PTS=%0.3f\n", "payload_size - stuffing_size <= av_fifo_size(stream->fifo)", "libavformat/mpegenc.c", "avail_data > 0", "bumping scr, scr:%f, dts:%f\n", "packet too large, ignoring buffer limits to mux it\n", "delay too large, ignoring ...\n", "av_fifo_size(stream->fifo) > 0", "avail_space >= s->packet_size || ignore_constraints", "dts:%f pts:%f scr:%f stream:%d\n", "av_fifo_size(stream->fifo) == trailer_size", "stream->premux_packet", "av_fifo_size(stream->fifo) == 0", "First SCR: %ld First DTS: %ld\n", "dts:%f pts:%f flags:%d stream:%d nopts:%d\n", "video/mpeg", "dvd muxer", "svcd", "svcd muxer", "vob muxer", "mpg,mpeg", "mpeg muxer", "muxrate", "Initial demux-decode delay in microseconds.", "drac", "HEVC", "VC-1", "stream=%d stream_type=%x pid=%x prog_reg_desc=%.4s\n", "HDMV", "HDPR", "changing packet size to %d\n", "max resync size reached, could not find sync byte\n", "Filter: pid=0x%x type=%d\n", "Tag %x length violation new length %d bytes remaining %d\n", "Maximum MP4 descriptor level exceeded\n", "Found tag %x expected %x\n", "Predefined SLConfigDescriptor", "Continuity check failed for pid %d expected %d got %d\n", "pos >= 188", "libavformat/mpegts.c", "All programs have pmt, headers found\n", "PES packet size mismatch\n", "pid=%x pes_code=%#x\n", "pid=%x stream_type=%x probing\n", "pid %x is not PES\n", "Skipping after seek\n", "PAT:\n", "sid=0x%x pid=0x%x\n", "SDT:\n", "Failed to allocate buffers for seekback\n", "score: %d, dvhs_score: %d, fec_score: %d \n", "Could not detect TS packet size, defaulting to non-FEC/DVHS\n", "Unable to seek back to the start\n", "tuning done\n", "invalid pcr pair %ld >= %ld\n", "start=%0.3f pcr=%0.3f incr=%d\n", "language_count <= sizeof(language) / 4", "DVB subtitles with multiple languages", "Opus in MPEG-TS - channel_config_code > 0x8", "PMT: len %i\n", "sid=0x%x sec_num=%d/%d version=%d tid=%d\n", "pcr_pid=0x%x\n", "program tag: 0x%02x len=%d\n", "mpegtsraw", "mpegtsraw demuxer", "resync_size", "set size limit for looking up a new synchronization", "compute_pcr", "compute exact PCR for each transport stream packet", "ts_packetsize", "output option carrying the raw packet size", "mpegts demuxer", "fix_teletext_pts", "try to fix pts values of dvb teletext streams", "scan_all_pmts", "scan and combine all PMTs", "skip_changes", "skip changing / adding streams / programs", "skip_clear", "skip clearing programs", "Service01", "FFmpeg", "Invalid stream id %d, must be less than 8191\n", "Duplicate stream id %d\n", "frame size not set\n", "muxrate VBR, ", "muxrate %d, ", "pcr every %d pkts, sdt every %d, pat/pmt every %d pkts\n", "m2ts", "ts_st->payload != buf || st->codecpar->codec_type != AVMEDIA_TYPE_VIDEO", "libavformat/mpegtsenc.c", "The PMT section cannot fit stream %d and all following streams.\nTry reducing the number of languages in the audio streams or the total number of streams.\n", "Unsupported Opus Vorbis-style channel mapping", "Unsupported Opus channel mapping for family %d", "Unsupported Opus channel mapping", "dts < pcr, TS is invalid\n", "pkt[3] & 0x20", "H.264 bitstream malformed, no startcode found, use the video bitstream filter 'h264_mp4toannexb' to fix it ('-bsf:v h264_mp4toannexb' option with ffmpeg)\n", "H.264 bitstream error, startcode missing, size %d", " data %08X", "resend_headers option is deprecated, use -mpegts_flags resend_headers\n", "first pts value must be set\n", "nal %d\n", "AAC packet too short\n", "AAC bitstream not in ADTS format and extradata missing\n", "pkt->dts != ((int64_t)0x8000000000000000UL)", "HEVC bitstream malformed, no startcode found\n", "HEVC bitstream error, startcode missing, size %d", "Opus packet too short\n", "Opus packet duration > 120 ms, invalid", "2 + pkt->size / 255 + 1 == i", "Got MPEG-TS formatted Opus data, unhandled", "!ts_st->payload_size", "video/MP2T", "ts,m2t,m2ts,mts", "MPEGTS muxer", "mpegts_transport_stream_id", "Set transport_stream_id field.", "mpegts_original_network_id", "Set original_network_id field.", "mpegts_service_id", "Set service_id field.", "mpegts_service_type", "Set service_type field.", "digital_tv", "Digital Television.", "Teletext.", "advanced_codec_digital_radio", "Advanced Codec Digital Radio.", "mpeg2_digital_hdtv", "MPEG2 Digital HDTV.", "advanced_codec_digital_sdtv", "Advanced Codec Digital SDTV.", "advanced_codec_digital_hdtv", "Advanced Codec Digital HDTV.", "hevc_digital_hdtv", "HEVC Digital Television Service.", "mpegts_pmt_start_pid", "Set the first pid of the PMT.", "mpegts_start_pid", "Set the first pid.", "mpegts_m2ts_mode", "Enable m2ts mode.", "pes_payload_size", "Minimum PES packet payload in bytes", "MPEG-TS muxing flags", "Reemit PAT/PMT before writing the next packet", "Use LATM packetization for AAC", "pat_pmt_at_frames", "Reemit PAT and PMT at each video frame", "system_b", "Conform to System B (DVB) instead of System A (ATSC)", "mpegts_copyts", "don't offset dts/pts", "tables_version", "set PAT, PMT and SDT version", "omit_video_pes_length", "Omit the PES packet length for video packets", "pcr_period", "PCR retransmission time", "PAT/PMT retransmission time limit in seconds", "SDT retransmission time limit in seconds", "mpegvideo", "mpegvideo demuxer", "Content-type: image/jpeg\r\n", "Content-length: %d\r\n\r\n", "\r\n--%s\r\n", "mpjpeg", "multipart/x-mixed-replace;boundary=ffserver", "mpjpeg_muxer", "boundary_tag", "Boundary tag", "Expected boundary '%s' not found, instead found a line of %zu bytes\n", "Content-type", "Unexpected %s : %s\n", "Invalid Content-Length value : %s\n", "boundary=", "\r\n%s\r\n", "\r\n--", "multipart/x-mixed-replace", "MPJPEG demuxer", "strict_mime_boundary", "require MIME boundaries match", "[%ld][]%c%n", "[%ld][%ld]%c%n", "[%ld][%ld]%c", "[%ld][]%c", "txt,mpl2", "FORMAT=%d", "%lf %lf", "FORMAT=TIME", "FORMAT=", "mpsub", "Codec %d", "Could not find valid start.\n", "msnwctcp", "Header claims %dbpp (!= 16). Ignoring\n", "width or height or segment_size is invalid and I cannot calculate them from other information\n", "MTV files without audio", "Unsupported version: %d", "Unsupported coding: %X", "Unsupported type: %X", "libavformat/musx.c", "MUSX", "musx", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %ld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "pkt->size == ((-2147483647 - 1) / 3 * 2 + (int)sizeof(AVFrame))", "libavformat/mux.c", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "Using AVStream.codec to pass codec parameters to muxers is deprecated, use AVStream.codecpar instead.\n", "sample rate not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n", "encoder-", "((AVFrame *)pkt->data)->buf", "Delay between the first packet and last packet in the muxing queue is %ld > %ld: forcing output\n", "Failed to send packet to filter %s for stream %d", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "__DIR_COUNT", "COMPRESSION", "MVC2", "Video compression %s", "PIXEL_ASPECT", "ORIENTATION", "Q_SPATIAL", "Q_TEMPORAL", "INTERLACING", "PACKING", "__NUM_I_TRACKS", "__NUM_A_TRACKS", "COMMENT", "TITLE", "LOOP_MODE", "NUM_LOOPS", "OPTIMIZED", "entry size %d is invalid\n", "Variable %s", "AUDIO_FORMAT", "DEFAULT_VOL", "NUM_CHANNELS", "Channel count %d invalid.\n", "SAMPLE_WIDTH", "Video compression %i", "Audio compression (format %i)", "Multiple audio streams support", "Audio compression %i (format %i, sr %i)", "No valid channel count found.\n", "Multiple video streams support", "Version %i", "unhandled version (%d,%d)\n", "Invalid audio_data_size (%u) or frames_count (%u)\n", "AVup", "%d/%d input time base matched %d/%d container time base\n", "IndexSID %i segment at %ld IndexEntryArray too small\n", "IndexSID %i segment at %ld missing EditUnitByteCount and IndexEntryArray\n", "failed to find absolute offset of %lX in BodySID %i - partial file?\n", "failed to map EditUnit %ld in IndexSID %i to an offset\n", "seeking detected on stream #%d with time base (%d/%d) and sample rate (%d/%d), audio pts won't be accurate.\n", "EditUnitByteCount %d\n", "IndexSID %d\n", "BodySID %d\n", "IndexEntryArray found\n", "IndexEditRate %d/%d\n", "IndexStartPosition %ld\n", "IndexDuration %ld\n", "Primer pack item length %d", "item_num %d is too large\n", "Multiple primer packs\n", "pixel layout: code %#x\n", "Duplicate sony_mpeg4_extradata\n", "%.2x", "%.2X", "local tag %#04x size %d\n", "local tag %#04x with 0 size\n", "local tag %#04x\n", "local tag %#04x extends past end of local set @ %#lx\n", "read past end of KLV @ %#lx\n", "error reading header metadata\n", "OP1a", "OPAtom", "unknown partition type %i\n", "Failed reading UID\n", "PreviousPartition equal to ThisPartition %lx\n", "Overriding PreviousPartition with %lx\n", "inconsistent FooterPartition value: %lu != %lu\n", "PartitionPack: ThisPartition = 0x%lX, PreviousPartition = 0x%lX, FooterPartition = 0x%lX, IndexSID = %i, BodySID = %i\n", "PreviousPartition points to this partition or forward\n", "\"OPAtom\" with %u ECs - assuming %s\n", "unknown operational pattern: %02xh %02xh - guessing OP1a\n", "invalid KAGSize %d - guessing ", "size %lu offset %#lx\n", "probably incorrect decryption key\n", "invalid encoded triplet\n", "error getting stream index %u\n", "next_ofs didn't change. not deriving packet timestamps\n", "OPAtom misinterpreted as OP1a? KLV for edit unit %i extending into next edit unit", "unable to compute the size of the last packet\n", "bad size: %i\n", "error reading D-10 aes3 frame\n", "Multiple packages_refs\n", "project_name", "company_name", "product_name", "product_version", "product_uid", "modification_date", "application_platform", "generation_uid", "seeking to previous partition\n", "failed to read PartitionPack KLV\n", "PreviousPartition for PartitionPack @ %lx indirectly points to itself\n", "PreviousPartition @ %lx isn't a PartitionPack\n", "could not find header partition pack key\n", "bad FooterPartition in RIP - ignoring\n", "found essence prior to first PartitionPack\n", "no FooterPartition\n", "seeking to FooterPartition\n", "file is not seekable - not parsing FooterPartition\n", "failed to seek to FooterPartition @ 0x%lx (%ld) - partial file?\n", "Dark key %02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x.%02x\n", "no essence\n", "metadata sets count %d\n", "partition %i: bad ThisPartition = %lX\n", "material_package_name", "comment_%s", "could not resolve material track strong ref\n", "could not resolve material track sequence strong ref\n", "material track %d: no corresponding source package found\n", "could not resolve source track strong ref\n", "material track %d: no corresponding source track found\n", "could not resolve source track sequence strong ref\n", "material track %d: DataDefinition mismatch\n", "could not allocate stream\n", "could not resolve sub descriptor strong ref\n", "Invalid edit rate (%d/%d) found on stream #%d, defaulting to 25/1\n", "source track %d: stream %d, no descriptor found\n", "broken encrypted mxf file\n", "%s: Universal Label: ", "file_package_umid", "file_package_name", "reel_umid", "Invalid edit rate (%d/%d) found on structural component #%d, defaulting to 25/1\n", "OneField frame layout isn't currently supported\n", "Field dominance %d support", "Unknown frame layout type: %d\n", "material_track_origin", "source_track_origin", "invalid sample rate (%d/%d) found for stream #%d, time base forced to 1/48000\n", "data_type", "vbi_vanc_smpte_436M", "broken or empty index\n", "found inconsistent BodySID\n", "failed to allocate index tables\n", "failed to allocate IndexTableSegment pointer array\n", "IndexSID %i starts at EditUnit %ld - seeking may not work as expected\n", "x >= nb_ptses - IndexEntryCount %i < IndexDuration %ld?\n", "index entry %i + TemporalOffset %i = %i, which is out of bounds\n", "IndexSID %i segment %i has zero IndexDuration and there's more than one segment\n", "no streams?\n", "got %i index tables - only the first one (IndexSID %i) will be used\n", "cannot demux OPAtom without an index\n", "no material package found\n", "material_package_umid", "utf16 local tag size %lx invalid (too large), ignoring\n", "out st:%d dts:%ld\n", "essence container count:%d\n", "the number of audio channels shall be 4 or 8 : the output will not comply to MXF D-10 specs, use -d10_channelcount to fix this\n", "d10_channelcount < actual number of audio channels : some channels will be discarded\n", "d10_channelcount shall be set to 4 or 8 : the output will not comply to MXF D-10 specs\n", "-d10_channelcount requires MXF D-10 and will be ignored\n", "there must be exactly one stream for mxf opatom\n", "comment_", "there must be exactly one video stream and it must be the first one\n", "Unsupported video frame rate %d/%d\n", "error MXF D-10 only support 30/40/50 mbit/s\n", "only 48khz is implemented\n", "MXF D-10 only support one audio track\n", "MXF D-10 only support 16 or 24 bits le audio\n", "Only pcm_s16le and pcm_s24le audio codecs are implemented\n", "MXF OPAtom only supports single channel audio\n", "Unsupported timecode frame rate %d/%d\n", "track %d: could not find essence container ul, codec not currently supported in container\n", "too many tagged values, ignoring remaining\n", "package type:%d\n", "OP1a Muxer", "OPAtom Muxer", "0.0.0", "edit units count %d\n", "missing frames\n", "could not allocate index entries\n", "error parsing mpeg2 frame\n", "could not get mpeg2 profile and level\n", "source marked as interlaced but codec profile is progressive\n", "AVC Intra 50/100 supported only\n", "could not get h264 profile\n", "No packets in first stream\n", "cannot fill d-10 video packet\n", "mxf_opatom", "application/mxf", "mxf_d10", "MXF-OPAtom muxer", "mxf_audio_edit_rate", "Audio edit rate for timecode", "signal_standard", "Force/set Sigal Standard", "ITU-R BT.601 and BT.656, also SMPTE 125M (525 and 625 line interlaced)", "bt1358", "ITU-R BT.1358 and ITU-R BT.799-3, also SMPTE 293M (525 and 625 line progressive)", "smpte347m", "SMPTE 347M (540 Mbps mappings)", "smpte274m", "SMPTE 274M (1125 line)", "smpte296m", "SMPTE 296M (750 line progressive)", "smpte349m", "SMPTE 349M (1485 Mbps mappings)", "smpte428", "SMPTE 428-1 DCDM", "MXF-D10 muxer", "d10_channelcount", "Force/set channelcount in generic sound essence descriptor", "store_user_comments", "MXF muxer", "Found EOI before SOI, skipping\n", "Next packet size is zero\n", "Using network protocols without global network initialization. Please use avformat_network_init(), this will become mandatory later.\n", "Failed to set close on exec\n", "setsockopt(SO_REUSEADDR) failed\n", "ff_socket_nonblock failed\n", "Connection to %s failed (%s), trying next address\n", "Connection to %s failed: %s\n", "NIST_1A\n", "end_head", "mu-law", "pcm,embedded-shorten", "coding %s", "%*s %*s %d", "sample_byte_format", "%*s %*s %31s", "sample byte format %s", "sample_coding", "sample_count", "%*s %*s %ld", "sample_n_bytes", "sample_sig_bits", "%31s %*s %31s", "Failed to parse '%s' as metadata\n", "nistsphere", "nist,sph", "nsv_resync", "nsv_parse_NSVs_header", "VP31[", "VP5 [", "VP50\\", "VP6 \\", "VP60\\", "VP61\\", "VP80\r", "RGB3", "PCM ", "nsv_read_chunk", "nsv_read_packet", "nsv_read_header", "nsv_parse_NSVf_header", "%s(), offset = %ld, state = %d\n", "NSV EOF\n", "NSV resync: [%d] = %02x\n", "NSV resynced on BEEF after %d bytes\n", "NSV resynced on NSVf after %d bytes\n", "NSV resynced on NSVs after %d bytes\n", "NSV sync lost\n", "%s()\n", "NSV NSVs framerate code %2x\n", "%s: tag=%c%c%c%c\n", "NSV NSVs vtag", "NSV NSVs atag", "NSV NSVs vsize %dx%d\n", "NSV NSVs header values differ from the first one!!!\n", "%s(%d)\n", "NSV CHUNK %d aux, %u bytes video, %d bytes audio\n", "NSV aux data: '%c%c%c%c', %d bytes\n", "NSV video: [%d] = %02x\n", "NSV RAWAUDIO: bps %d, nchan %d, srate %d\n", "NSV AUDIO bit/sample != 16 (%d)!!!\n", "NSV AUDIO: sync:%d, dts:%ld", "%s: using cached packet[%d]\n", "NSVs", "filename '%s'\n", "NSV NSVf chunk_size %u\n", "NSV NSVf file_size %u\n", "NSV NSVf duration %ld ms\n", "NSV NSVf info-strings size: %d, table entries: %d, bis %d\n", "NSV got header; filepos %ld\n", "NSV NSVf INFO: %s='%s'\n", "NSV got infos; filepos %ld\n", "NSV got index; filepos %ld\n", "parsed header\n", "default", "original", "comment", "lyrics", "karaoke", " DUP\n", "PSP ", "wvpk", "UTF8", "UTF8", "DVBT", "X-CreationTime", "SourceFilename", "X-Language", "X-Disposition", "disposition", "X-Replaces", "replaces", "X-Depends", "depends", "X-Uses", "uses", "X-UsesFont", "usesfont", "sync point checksum mismatch\n", "UTF-8", "Error stream_id_plus1 is (%ld)\n", "Could not create chapter.\n", "get_str failed while decoding info header\n", "invalid stream id %d for info packet\n", "unknown disposition type '%s'\n", "r_frame_rate", "info header checksum mismatch\n", "%lu-%lu %ld-%ld\n", "libavformat/nutdec.c", "SP: %ld\n", "no syncpoint at backptr pos\n", "read_timestamp(X,%d,%ld,%ld)\n", "read_timestamp failed.\n", "nut->last_syncpoint_pos == *pos_arg", "return %ld %ld\n", "stream_index == -1", "get_str failed while reading sm data\n", "Unknown string %s / %s\n", "CodecSpecificSide%ld", "ChannelLayout", "Unknown data %s / %s\n", "SkipStart", "SkipEnd", "SampleRate", "Unknown integer %s\n", "Last frame must have been damaged %ld > %ld + %d\n", "Error *stream_id is (%ld)\n", "reached EOF while decoding frame header\n", "header_idx invalid\n", "frame size > 2max_distance and no checksum\n", "syncing from %ld\n", "No main startcode found.\n", "Error stream_count is (%ld)\n", "max_distance %d\n", "Error nut->time_base_count is (%ld)\n", "Error nut->time_base[i].num is (%ld)\n", "Error nut->time_base[i].den is (%ld)\n", "invalid time base %d/%d\n", "reached EOF while decoding main header\n", "illegal count %d at %d\n", "illegal stream number %d >= %d\n", "nut->frame_code['N'].flags == FLAG_INVALID", "Error nut->header_count is (%ld)\n", "Error nut->header_len[i] is (%ld)\n", "invalid elision header %d : %d > %d\n", "nut->header_len[0] == 0", "main header checksum mismatch\n", "Not all stream headers found.\n", "Error stream_id is (%ld)\n", "Unsupported fourcc length %d\n", "unknown stream class (%d)\n", "Unknown codec tag '0x%04x' for stream number %d\n", "Error stc->time_base_id is (%ld)\n", "Error stc->msb_pts_shift is (%ld)\n", "Error stc->decode_delay is (%ld)\n", "Error st->codecpar->extradata_size is (%ld)\n", "Error st->codecpar->width is (%ld)\n", "Error st->codecpar->height is (%ld)\n", "invalid aspect ratio %d/%d\n", "Error st->codecpar->sample_rate is (%ld)\n", "Error st->codecpar->channels is (%ld)\n", "stream header %d checksum mismatch\n", "EOF before video frames\n", "no index at the end\n", "Error syncpoint_count is (%ld)\n", "index overflow A %d + %lu >= %d\n", "index: x %lu is invalid\n", "index overflow B\n", "keyframe before first syncpoint in index\n", "n <= syncpoint_count + 1", "index checksum mismatch\n", "nut->next_startcode == (0xE4ADEECA4569ULL + (((uint64_t)('N'<<8) + 'K')<<48))", "nut/multimedia container", "UserData%s-SD-%d", "No codec tag defined for stream %d\n", "The additional syncpoint modes require version %d, that is currently not finalized, please set -f_strict experimental in order to enable it.\n", "libavformat/nutenc.c", "Multiple keyframes with same PTS\n", "nus->keyframe_pts[k] > last_pts", "Negative pts not supported stream %d, pts %ld\n", "Try to enable the genpts flag\n", "nus->last_pts != ((int64_t)0x8000000000000000UL)", "frame_code != -1", "video/x-nut", "nutenc", "syncpoints", "NUT syncpoint behaviour", "Disable syncpoints, low overhead and unseekable", "timestamped", "Extend syncpoints with a wallclock timestamp", "Write index", "LAME", "Video packet in file without video stream!\n", "Audio packet in file without audio stream!\n", "NuppelVideo", "MythTVVideo", "Invalid frame rate %f\n", "Invalid frame rate %f, setting to 0.\n", "invalid pts %ld\n", "non-", "Broken file, %skeyframe not correctly marked.\n", "OggS", "stream_index < ogg->nstreams", "libavformat/oggdec.c", "New streams are not supposed to be added in between Ogg context save/restore operations.\n", "cannot find sync word\n", "ogg page, unsupported version\n", "Changing stream parameters in multistream ogg", "failed to create or replace stream\n", "Cannot identify new stream\n", "ogg_packet: curidx=%i\n", "ogg_packet: idx=%d pstart=%d psize=%d segp=%d nsegs=%d\n", "Codec not found\n", "Page at %ld is missing granule\n", "found headers\n", "Header parsing failed for stream %d\n", "Headers mismatch for stream %d: expected %d received %d.\n", "The pagesize option is deprecated\n", "Unsupported codec id in stream %d\n", "No extradata present\n", "OpusTags", "Extradata corrupted\n", "theora kfgshift %d, vrev %d\n", "Error writing FLAC headers\n", "Error writing Speex headers\n", "Error writing Opus headers\n", "audio/ogg", "Ogg Opus muxer", "Ogg Speex muxer", "Ogg audio muxer", "application/ogg", "ogg,ogv", "Ogg muxer", "serial_offset", "serial number offset", "oggpagesize", "Set preferred Ogg page size.", "preferred page size in bytes (deprecated)", "page_duration", "preferred page duration, in microseconds", "CELT    ", "Invalid timebase, assuming 30 FPS\n", "Too large gpshift %d (>= 32).\n", "Invalid number of planes %d in daala pixel format map.\n", "Unsupported pixel format - %i %i\n", "Unknown header type %X\n", "Daala", "BBCD", "KW-DIRAC", "Invalid timing values.\n", "Unsupported huge granule pos %ld\n", "Last packet was truncated to %d due to end trimming.\n", "OpusHead", "Opus", "fishead", "Unknown skeleton version %d.%d\n", "fisbone", "Serial number in fisbone doesn't match any stream\n", "Multiple fisbone for the same stream\n", "speex packet too small\n", "invalid channel count. Speex must be mono or stereo.\n", "invalid packet_size, frames_per_packet %d %d\n", "Speex   ", "Too old or unsupported Theora (%x)\n", "Invalid time base in theora stream, assuming 25 FPS\n", "METADATA_BLOCK_PICTURE", "out-of-memory error. Skipping cover art block.\n", "Failed to parse cover art block.\n", "CHAPTER%03d", "%02d:%02d:%02d.%03d", "NAME", "%td bytes of comment header remain\n", "truncated comment header, %i comments not found\n", "Channel change is not supported\n", "Invalid OggVP8 header packet", "Unknown OggVP8 version %d.%d\n", "Unknown VP8 header type 0x%02X\n", "OVP80", "5u\\`", "EKB ", "Mismatching RID\n", "Couldn't find the EA3 header !\n", "File is encrypted\n", "OMG_LSI", "OMG_BKLSI", "Invalid GEOB data size: %u\n", "Unknown version in encryption header\n", "KEYRING     ", "Invalid encryption header\n", "Too little GEOB data\n", "RID: %.8x\n", "CBC-MAC", "Invalid key\n", "Sample rate %d", "Invalid ATRAC-X channel id: %u\n", "Unsupported codec %d!\n", "No encryption header found\n", "oma,omg,aa3", "Sample rate %d not supported in OpenMG audio\n", "ATRAC3 in OMA is only supported with 2 channels\n", "ATRAC3: Unsupported extradata size\n", "unsupported codec tag %d for write\n", "audio/x-oma", "reading", "Opening '%s' for %s\n", "AVFormatContext", "avioflags", "direct", "reduce buffering", "set probing size", "formatprobesize", "number of bytes to probe file format", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "do not write random/volatile data", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "microseconds for each chunk", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "format_whitelist", "List of demuxers that are allowed to be used", "max_streams", "maximum number of streams", "libavformat/pcmdec.c", "sln demuxer", "mulaw demuxer", "alaw demuxer", "u8 demuxer", "u16le demuxer", "u16be demuxer", "u24le demuxer", "u24be demuxer", "u32le demuxer", "u32be demuxer", "s8 demuxer", "s16le demuxer", "s16be demuxer", "s24le demuxer", "s24be demuxer", "s32le demuxer", "s32be demuxer", "f32le demuxer", "f32be demuxer", "f64le demuxer", "f64be demuxer", "%ld,%ld,%c", "pmpm", "No audio packets.\n", "Cannot (re)allocate packet buffer\n", "Unsupported video format\n", "AAC not yet correctly supported\n", "Unsupported audio format\n", "Encountered EOF while reading index.\n", "Packet too small\n", "File ends before first packet\n", "Invalid parameters %d %d %d\n", "missmatching sector_count\n", "Unknown sector type %02X\n", "psxstr", "invalid syncword\n", "invalid streamid\n", "expected reserved byte to be 0x55\n", "invalid payload length %u\n", "expected non empty signaled PES packet, trying to recover\n", "header too short\n", "audio data corruption\n", "PVF1\n", "Data chunk is too small.\n", "Packet size is too small.\n", "Padding should be 0.\n", "Unknown codec GUID %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}.\n", "Unknown entry %d=>%d in rate-map-table.\n ", "seek frame num %d timestamp %ld\n", "could not seek to frame %d\n", "atom %u %.4s offset %#lx\n", "unknown1 %d\n", "filenum %d\n", "unknown2 %d\n", "filename %s\n", "resolution %dx%d\n", "timescale %d\n", "frame num %d\n", "unknown %d\n", "metadata len %d\n", "error reading video packet\n", "pkt dts %ld duration %ld\n", "Bad sample rate\n", "packet num %d\n", "error reading audio packet\n", "pkt dts %ld duration %ld samples %d sample rate %d\n", "error reading atom\n", "error parsing 'red1' atom\n", "could not find 'red1' atom\n", "data offset %#lx\n", "error reading end atom\n", "num video chunks %d\n", "num audio chunks %d\n", "error reading 'rdvo' atom\n", "video offset %d: %#x\n", "error parsing 'rdvo' atom\n", "\r\nContent-Type: image/jpeg\r\n", "mjpg,mjpeg,mpo", "mjpeg demuxer", "%s files have exactly one stream\n", "yuv,rgb", "mpg,mpeg,m1v", "singlejpeg", "video/x-mjpeg", "mjpg,mjpeg", "h264,264", "video/x-h263", "video/x-h261", "audio/x-gsm", "audio/g723", "tco,rco", "audio/G722", "audio/x-eac3", "audio/x-dca", "drc,vc2", "audio/x-ac3", "yuv,cif,qcif,rgb", "rawvideo demuxer", "OpaqueData:buffer;", "StartTime:integer;", "ASMRuleBook:string;", "01d0a8e3", "stream=%d;rule=%d,stream=%d;rule=%d", " %*1[Aa]verage%*1[Bb]andwidth=%ld", "x-pn-multirate-realaudio-live", "x-pn-multirate-realvideo-live", "%u:%u:%u", "<window", "<time", "RedSpark", "Invalid sample rate: %d\n", "redspark", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "U263\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "MNM4\r", "mjpa\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TR20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "YLC0", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "wav header size < 14", "WAVEFORMATEX support for RIFX files", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "(start&1) == 0", "libavformat/riffenc.c", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "RVTRE", "RV30F", "dnet", "LSD:", ".R1M", "Failed to fully read block\n", "Index size %d (%d pkts) is wrong, should be %d.\n", "DATA tag in middle of chunk, file may be broken.\n", "%d %d-%d %ld %d\n", ".REC", "extradata size %u too large\n", "codecdata_length too large\n", "bad SIPR file flavor %d\n", "sub_packet_size is invalid\n", "mismatching interleaver parameters", "Unknown interleaver %X\n", "logical-fileinfo", "Unsupported version\n", "Unsupported Name value property version\n", "Unsupported stream type %08x\n", "%X %X\n", "Invalid framerate\n", "codec_data_size %u < size %d\n", "MLTI with multiple (%d) MDPR", "tag=%c%c%c%c (%08x) size=%d\n", "Invalid stream index %d for index at pos %ld\n", "Nr. of packets in packet index for stream index %d exceeds filesize (%ld at %ld = %ld)\n", "Non-linear index detected, not supported\n", "%s = '%s'\n", "%s = '0x", "StreamCount", "Skipping unsupported key: %s\n", "OpaqueData", "Insufficient data\n", "Insufficient remaining len\n", "Failed to read %d bytes\n", "Impossibly sized packet\n", "cur slice %d, too large\n", "outside videobufsize\n", "rm->audio_pkt_cnt > 0", "libavformat/rmdec.c", "size %u is invalid\n", "Unsupported opcode=%d at %lX\n", "Muxing packets larger than 64 kB (%d) is not supported\n", "audio/x-pn-realaudio", "The Audio Stream", "video/x-pn-realvideo", "The Video Stream", "Int0", "Invalid codec tag\n", "At most 2 streams are currently supported for muxing in RM\n", "application/vnd.rn-realmedia", "rm,ra", "ARMovie\n", "Video format %i", "Audio format %d", "Don't know how to split frames for video format %i. Video stream will be broken!\n", "%ld , %ld ; %ld", "PCMB", "XMA ", "Codec tag: %s", "Unknown codec tag: %s\n", "ADPCM in RSO", "Output file is too big (%ld bytes >= 64kB)\n", "RSO only supports mono\n", "Sample rate must be < 65536\n", "ADPCM in RSO not implemented\n", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "RTP: PT=%02x: bad cseq %04x expected=%04x\n", "RTP: missed %d packets\n", "sending %d bytes of RR\n", "result from ffurl_write: %d\n", "setting jitter buffer size to %d\n", "Invalid RTCP SR packet length\n", "RTP: dropping old packet received too late\n", "jitter buffer full\n", "Failed to allocate data for FMTP.\n", "t140", "X-MP3-draft-00", "Invalid %d bytes packet\n", "Invalid AC3 packet data\n", "Out of memory.\n", "Received packet without a start fragment; dropping.\n", "Invalid packet received\n", "Missed %d packets\n", "Error occurred when getting fragment buffer.\n", "Bad codec ID\n", "Only mono AMR is supported\n", "No speech data found\n", "Too little speech data in the RTP packet\n", "Too much speech data in the RTP packet?\n", "AMR fmtp attribute %s had nonstandard empty value\n", "octet-align", "fmtp:", "Unsupported RTP/AMR configuration!\n", "AMR-WB", "stream:", "pgmpu:data:application/vnd.ms.wms-hdr.asfv1;base64,", "Failed to fix invalid RTSP-MS/ASF min_pktsize\n", "x-asf-pf", "Too short RTP/DV packet, got %d bytes\n", "bundled", "G726-40", "G726-32", "G726-24", "G726-16", "Too short RTP/H.261 packet, got %d bytes\n", "H261", "Too short H.263 RTP packet\n", "H263-2000", "H263-1998", "Too short H.263 RTP packet: %d\n", "Too short H.263 RTP packet: %d bytes, %d header bytes\n", "Interpreting H.263 RTP data as RFC 2429/4629 even though signalled with a static payload type.\n", "Unable to allocate memory for extradata!\n", "packetization-mode", "RTP Packetization Mode: %d\n", "Interleaved RTP mode is not supported yet.\n", "profile-level-id", "RTP Profile IDC: %x Profile IOP: %x Level: %x\n", "sprop-parameter-sets", "Missing PPS in sprop-parameter-sets, ignoring\n", "Extradata set to %p (size: %d)\n", "framesize:", "cliprect:", "nal size exceeds length: %d %d\n", "Empty H.264 RTP packet\n", "RTP H.264 NAL unit type %d", "Too short data for FU-A H.264 RTP packet\n", "Undefined type (%d)\n", "Too short RTP/HEVC packet, got %d bytes\n", "Multi-layer HEVC coding", "Illegal temporal ID in RTP/HEVC packet\n", "Unsupported (HEVC) NAL type (%d)\n", " FU type %d with %d bytes\n", "Too short RTP/HEVC packet, got %d bytes of NAL unit type %d\n", "Illegal combination of S and E bit in RTP/HEVC packet\n", "PACI packets for RTP/HEVC", "profile-id", "SDP: found profile-id: %d\n", "sprop-vps", "sprop-sps", "sprop-pps", "sprop-sei", "libavformat/rtpdec_hevc.c", "sprop-max-don-diff", "Found sprop-max-don-diff in SDP, DON field usage is: %d\n", "sprop-depack-buf-nalus", "Found sprop-depack-buf-nalus in SDP, DON field usage is: %d\n", "H265", "No iLBC mode set\n", "Unsupported iLBC mode %d\n", "Unimplemented RTP/JPEG type %d\n", "Only 8-bit precision is supported.\n", "Quantization tables for q=%d changed\n", "Invalid RTP/JPEG packet. Quantization tables not found.\n", "No quantization tables known for q=%d yet.\n", "Reserved q value %d\n", "JFIF", "Received packet without a start chunk; dropping frame.\n", "RTP timestamps don't match.\n", "Missing packets; dropping frame.\n", "Error occurred when getting frame buffer.\n", "No data available yet\n", "Malformed LATM packet\n", "Unsupported LATM config (%d,%d,%d,%d)\n", "cpresent", "RTP MP4A-LATM with in-band configuration", "Invalid frame\n", "mpa-robust", "Invalid parser state\n", "Invalid AU size\n", "Error parsing AU headers\n", "Missed some packets, discarding frame\n", "First AU larger than packet size\n", "mpeg4-generic", "MP4V-ES", "SizeLength", "IndexLength", "IndexDeltaLength", "StreamType", "Invalid interleave size %d\n", "Invalid interleave index %d/%d\n", "x-Purevoice", "Out of sequence config - dropping queue\n", "frma", "QDM2", "QDCA", "n < 0x80", "libavformat/rtpdec_qdm2.c", "X-QDM", "RTP-X-QT with payload description split over several packets", "RTP-X-QT with packet-specific info", "RTP-X-QT with packing scheme 2", "X-QUICKTIME", "X-QT", "SEQH", "X-SV3V-ES", "BBCD", "Dropping buffered RTP/VC2hq packet fragments - non-continuous timestamps\n", "Too short RTP/VC2hq packet, got %d bytes\n", "Dropping buffered RTP/VC2hq packet fragments - non-continuous picture numbers\n", "Keyframe missing\n", "Missed a picture, sequence broken\n", "Missed too much, sequence broken\n", "Missed unknown data, sequence broken\n", "Received no start marker; dropping frame\n", "Missed part of a keyframe, sequence broken\n", "Missed part of the first partition, sequence broken\n", "Received no start marker\n", "RTP/VP9 support is still experimental\n", "Too short RTP/VP9 packet, got %d bytes\n", "Invalid combination of B and M marker (%d != %d)\n", "Too short RTP/VP9 packet\n", "VP9 scalability structure with multiple layers", "No more data to return\n", "Not enough data to return\n", "Invalid %d byte packet\n", "Invalid packet length %d in %d byte packet\n", "Unimplemented Xiph SDP configuration change detected\n", "Unimplemented RTP Xiph packet settings (%d,%d,%d)\n", "RTP timestamps don't match!\n", "Error occurred when getting fragment buffer.", "YCbCr-4:2:0", "YCbCr-4:4:2", "YCbCr-4:4:4", "Unsupported pixel format %s\n", "delivery-method", "configuration-uri", "Invalid %td byte packed header.", "Unimplemented number of headers: %d packed headers, %d headers\n", "Bad packed header lengths (%d,%d,%td,%d)\n", "Out of memory while decoding SDP configuration.\n", "Packet too large\n", "RTCP: %02x %lx %x\n", "Only one stream supported in the RTP muxer\n", "Max packet size %d too low\n", "Packetizing VC-2 is experimental and does not use all values of the specification (even though most receivers may handle it just fine). Please set -strict experimental in order to enable it.\n", "Packetizing H.261 is experimental and produces incorrect packetization for cases where GOBs don't fit into packets (even though most receivers may handle it just fine). Please set -f_strict experimental in order to enable it.\n", "Packetizing VP9 is experimental and its specification is still in draft state. Please set -strict experimental in order to enable it.\n", "Multistream opus not supported in RTP\n", "Incorrect iLBC block size specified\n", "RTP max payload size too small for AMR\n", "Only mono is supported\n", "rtp_send_data size=%d\n", "%d: write len=%d\n", "Packet size %d too large for max RTP payload size %d\n", "RTP muxer", "Specify RTP payload type", "ssrc", "Stream identifier", "cname", "CNAME to include in RTCP SR packets", "Starting sequence number", "RTP/H.261 packet not cut at a GOB boundary, not signaled correctly\n", "Unable to split H.263 packet, use -mb_info %d or -ps 1.\n", "Sending NAL %x of len %d M=%d\n", "NAL size %d > %d, try -slice-max-size %d\n", "NAL size %d > %d\n", "Too short JPEG header. Aborted!\n", "Invalid number of quantisation tables\n", "Only 1x1 chroma blocks are supported. Aborted!\n", "Insufficient data. Aborted!\n", "RFC 2435 requires standard Huffman tables for jpeg\n", "RFC 2435 suggests two quantization tables, %d provided\n", "rtp_mpegts", "VC-2 parse code %d", "buffer_size=%d", "pkt_size=%d", "dscp=%d", "fifo_size=0", "sources=%s", "block=%s", "rtp_resolve_host: %s\n", "Unable to resolve %s\n", "localport", "localrtpport", "localrtcpport", "write_to_source", "sources", "Data doesn't look like RTP packets, make sure the RTP muxer is used\n", "Unable to send packet to source, no packets received yet\n", "Not received any RTCP packets yet, inferring peer port from the RTP port\n", "Not received any RTP packets yet, inferring peer port from the RTCP port\n", "Time to live (in milliseconds, multicast only)", "Send/Receive buffer size (in bytes)", "rtcp_port", "Custom rtcp port", "local_rtpport", "Local rtp port", "local_rtcpport", "Local rtcp port", "Connect socket", "Send packets to the source address of the latest received packet", "Maximum packet size", "DSCP class", "Source list", "Block list", "c=IN IP", "rtp:", "getaddrinfo(%s): %s\n", "npt=", "Failed to parse interval end specification '%s'\n", "x-pn-tng", "x-real-rdt", "client_port", "server_port", "interleaved", "receive", "%s %s RTSP/1.0\r\n", "CSeq: %d\r\n", "\nIf-Match:", "Session: %s\r\n", "Sending:\n%s--\n", "tunneling of RTSP requests with content data not supported\n", "rtptime", "(null)", "sdp: %c='%s'\n", "application", "/AVPF", "/SAVPF", "control:", "rtsp://", "rtpmap:", "audio codec set to: %s\n", "audio samplerate set to: %i\n", "audio channels set to: %i\n", "video codec set to: %s\n", "ssrc:", "range:", "lang:", "IsRealDataType:integer;", "SampleRate:integer;", "crypto:", "inline:", "source-filter:", "incl", "excl", "getnameinfo: %s\n", "?localport=%d&ttl=%d&connect=%d&write_to_source=%d", "&%s=%s", "Received too short packet\n", "Unsupported RTP version packet received\n", "Unable to receive RTP payload type %d without an SDP file describing it\n", "Guessing on RTP content - if not received properly you need an SDP file describing it\n", "v=0\r\nc=IN IP%d %s\r\nm=%s %d RTP/AVP %d\r\n", "SDP:\n%s\n", "Session:", ";timeout=", "Content-Length:", "Transport:", "CSeq:", "Range:", "RealChallenge1:", "Server:", "X-Notice:", "Location:", "WWW-Authenticate:", "Authentication-Info:", "Content-Base:", "DESCRIBE", "RTP-Info:", "PLAY", "Public:", "GET_PARAMETER", "OPTIONS", "x-Accept-Dynamic-Rate:", "Content-Type:", "skipping RTP packet len=%d\n", "ret=%d c=%02x [%c]\n", "line='%s'\n", "RTSP/", "RTSP/1.0 200 OK\r\n", "RTSP/1.0 501 Not Implemented\r\n", "CSeq %d expected, %d received.\n", "Unable to recover rtp ports\n", "Number of fds %d not supported\n", "Unable to answer to TEARDOWN\n", "Unable to pick stream for packet - SSRC not known for all streams\n", "Unable to pick stream for packet\n", "max delay reached. need to consume packet\n", "Received BYE for stream %d (%d/%d)\n", "method %s failed: %d%s\n", "RAW/RAW", "RTP/AVP", "/rtx", "?localport=%d", "Unable to open an input RTP port\n", "%s/UDP;", "unicast;", "client_port=%d", "%s/TCP;", "interleaved=%d-%d", "%s/UDP;multicast", ";mode=record", ";mode=play", "Transport: %s\r\n", "x-Dynamic-Rate: 0\r\n", "If-Match: %s\r\nRealChallenge2: %s, sd=%s\r\n", "SETUP", "Nonmatching transport in server reply\n", "?connect=1", "?ttl=%d", "Invalid UDP port range, max port %d less than min port %d\n", "rtsps", "Unsupported lower transport method, only UDP and TCP are supported for output.\n", "%08x%08x", "x-sessioncookie: %s\r\nAccept: application/x-rtsp-tunnelled\r\nPragma: no-cache\r\nCache-Control: no-cache\r\n", "x-sessioncookie: %s\r\nContent-Type: application/x-rtsp-tunnelled\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nContent-Length: 32767\r\nExpires: Sun, 9 Jan 1972 00:00:00 GMT\r\n", "?timeout=%d", "ClientChallenge: 9e26d33f2984236010ef6253fb1887f7\r\nPlayerStarttime: [28/03/2003:22:50:23 00:00]\r\nCompanyID: KnKV4M4I/B2FjJ1TToLycw==\r\nGUID: 00000000-0000-0000-0000-000000000000\r\n", "WMServer/", "Status %d: Redirecting to %s\n", "RTP demuxer", "SDP demuxer", "rtp_flags", "set RTP flags", "rtsp_flags", "filter_src", "only receive packets from the negotiated peer IP", "reorder_queue_size", "set number of packets to buffer for handling of reordered packets", "Underlying protocol send/receive buffer size", "sdp_flags", "SDP flags", "custom_io", "use custom I/O", "rtcp_to_source", "send RTCP packets to the source address of received packets", "allowed_media_types", "set media types to accept from the server", "Subtitle", "initial_pause", "do not start playing the stream immediately", "rtsp_transport", "set RTSP transport protocols", "udp_multicast", "UDP multicast", "HTTP tunneling", "set RTSP flags", "wait for incoming connections", "prefer_tcp", "try RTP via TCP first, if available", "min_port", "set minimum local UDP port", "max_port", "set maximum local UDP port", "set maximum timeout (in seconds) to wait for incoming connections (-1 is infinite, imply flag listen)", "stimeout", "set timeout (in microseconds) of socket TCP I/O operations", "rtsp:", "RTSP/1.0 %d %s\r\n", "Server: %s\r\n", "Sending response:\n%s", "hello state=%d\n", "Range: npt=%ld.%03ld-\r\n", "TEARDOWN", "Unsubscribe: %s\r\n", "SET_PARAMETER", "Subscribe: ", "UDP timeout, retrying with TCP\n", "Message too long\n", "There is no session-id at the moment\n", "Unexpected session-id %s\n", "Parsing[%d]: %s\n", "Unexpected Sequence number %d\n", "Error parsing method string\n", "Method string too long\n", "ANNOUNCE", "RECORD", "Unexpected command in Idle State %s\n", "Unexpected command in Paused State %s\n", "Unexpected command in Streaming State %s\n", "Unexpected State [%d]\n", "Error parsing message URI\n", "uri string length exceeded buffer size\n", "Host %s differs from expected %s\n", "WARNING: Path %s differs from expected %s\n", "Updating control URI to %s\n", "RTSP/1.0", "Error parsing protocol or version\n", "?listen&listen_timeout=%d", "Unable to open RTSP for listening\n", "RTSP: Unexpected Command\n", "application/sdp", "Unexpected content type %s\n", "Unable to get complete SDP Description in ANNOUNCE\n", "SDP: %s\n", "Content-Length header value exceeds sdp allocated buffer (4KB)\n", "Content-Length exceeds buffer size", "Public: ANNOUNCE, PAUSE, SETUP, TEARDOWN, RECORD\r\n", "No transport defined in SETUP\n", "mode=record/receive not set or transport protocol not supported (yet)\n", "More than one transport not supported, using first of all\n", "Unable to find requested track\n", "Transport: RTP/AVP/TCP;unicast;mode=receive;interleaved=%d-%d\r\n", "Opening: %s", "Listening on: %d", "Transport: RTP/AVP/UDP;unicast;mode=receive;source=%s;client_port=%d-%d;server_port=%d-%d\r\n", "Accept: application/sdp\r\n", "Require: com.real.retain-entity-for-setup\r\n", "tcp_read_packet:\n", "id=%d len=%d\n", "rtsp", "RTSP demuxer", "Method Not Allowed", "Not Enough Bandwidth", "Session Not Found", "Method Not Valid in This State", "Aggregate operation not allowed", "Only aggregate operation allowed", "Unsupported transport", "Internal Server Error", "Service Unavailable", "RTSP Version not supported", "Range: npt=0.000-\r\n", "Content-Type: application/sdp\r\n", "/streamid=%d", "RTSP muxer", "</BODY", "<SYNC", "<SAMI>", "smi,sami", "224.2.127.254", "Unsupported SAP version packet received\n", "Received stream deletion announcement\n", "v=0\r\n", "Unsupported mime type %s\n", "temp.sdp", "sap:", "announce_port", "same_port", "announce_addr", "ff0e::2:7ffe", "Host %s resolved to unsupported address family\n", "?ttl=%d&connect=1", "Unsupported protocol family\n", "Announcement too large to send in one packet\n", "SAUCE00", "COMNT", "Recursion loop on \"%.*s\"\n", "Tone-set \"%.*s\" not defined\n", "%g is too large\n", "Spinning noise not implemented, using pink noise instead.\n", "Type %d is not implemented\n", "option '%c' requires an argument", "relative time without previous absolute time", "the end of line", "syntax error for option -F", "syntax error for option -L", "syntax error for option -T", "syntax error for option -q", "speed factor other than 1 not supported", "syntax error for option -r", "invalid sample rate", "unknown option: '%c'", "immediate sequences not yet implemented", "preprogrammed sequences not yet implemented", "waveform definitions not yet implemented", "bell", "spin:", "syntax error", "Error line %d: %s near %s%.*s%s.\n", "Mix feature not implemented: -m is ignored and mix channels will be silent.\n", "Start time ignored in a purely relative script.\n", "Scripts with mixed absolute and relative timestamps can give unexpected results (pause, seeking, time zone change).\n", "Using %02d:%02d:%02d as NOW.\n", "No events in script\n", "Completely silent script.\n", "sbg_demuxer", "max_file_size", "; sprop-parameter-sets=", "; profile-level-id=", "c=IN %s %s/%d\r\n", "c=IN %s %s\r\n", "Unsupported Xiph codec ID\n", "Not enough memory for configuration string\n", "Too much extradata!\n", "Cannot allocate memory for the config info.\n", "; config=", "srtp", "YCbCr-4:2:2", "QCIF=1", "b=AS:%ld\r\n", "a=rtpmap:%d VC2/90000\r\n", "Cannot allocate memory for the parameter sets.\n", "Cannot Base64-encode %td %td!\n", "a=rtpmap:%d H264/90000\r\na=fmtp:%d packetization-mode=%d%s\r\n", "a=rtpmap:%d H261/90000\r\n", "a=fmtp:%d %s\r\n", "a=rtpmap:%d H263-2000/90000\r\na=framesize:%d %d-%d\r\n", "sprop-%s=", "a=rtpmap:%d H265/90000\r\n", "a=rtpmap:%d MP4V-ES/90000\r\na=fmtp:%d profile-level-id=1%s\r\n", "a=rtpmap:%d MP4A-LATM/%d/%d\r\na=fmtp:%d profile-level-id=%d;cpresent=0;config=%s\r\n", "AAC with no global headers is currently not supported.\n", "a=rtpmap:%d MPEG4-GENERIC/%d/%d\r\na=fmtp:%d profile-level-id=1;mode=AAC-hbr;sizelength=13;indexlength=3;indexdeltalength=3%s\r\n", "a=rtpmap:%d L16/%d/%d\r\n", "a=rtpmap:%d PCMU/%d/%d\r\n", "a=rtpmap:%d PCMA/%d/%d\r\n", "a=rtpmap:%d AMR/%d/%d\r\na=fmtp:%d octet-align=1\r\n", "a=rtpmap:%d AMR-WB/%d/%d\r\na=fmtp:%d octet-align=1\r\n", "Vorbis configuration info missing\n", "a=rtpmap:%d vorbis/%d/%d\r\na=fmtp:%d configuration=%s\r\n", "Unsupported pixel format.\n", "Theora configuation info missing\n", "a=rtpmap:%d theora/90000\r\na=fmtp:%d delivery-method=inline; width=%d; height=%d; sampling=%s; configuration=%s\r\n", "a=rtpmap:%d VP8/90000\r\n", "a=rtpmap:%d VP9/90000\r\n", "a=rtpmap:%d JPEG/90000\r\n", "a=rtpmap:%d G722/%d/%d\r\n", "a=rtpmap:%d G726-%d/%d\r\n", "a=rtpmap:%d iLBC/%d\r\na=fmtp:%d mode=%d\r\n", "a=rtpmap:%d speex/%d\r\n", "a=fmtp:%d vbr=%s\r\n", "a=rtpmap:%d opus/48000/2\r\n", "a=fmtp:%d sprop-stereo=1\r\n", "No Name", "127.0.0.1", "v=%d\r\no=- %d %d IN %s %s\r\ns=%s\r\n", "t=%d %d\r\na=tool:libavformat 57.41.100\r\n", "srtp_out_suite", "srtp_out_params", "a=crypto:1 %s inline:%s\r\n", "sdr2", "raw video is using unhandled %dbpp\n", "film_cpk", "Failed to open segment list '%s'\n", "#EXT-X-VERSION:3\n", "#EXT-X-MEDIA-SEQUENCE:%d\n", "#EXT-X-TARGETDURATION:%ld\n", "ffconcat version 1.0\n", "Could not get segment filename with strftime\n", "\",\n\r", ",%f,%f\n", "#EXTINF:%f,\n%s\n", "Error writing list entry '%s' in list file\n", "!\"Invalid list type\"", "libavformat/segment.c", "Failure occurred when ending segment '%s'\n", "segment:'%s' count:%d ended\n", "Could not increment timecode, error occurred during timecode creation.", "Could not increment timecode, no timecode metadata found", "Failed to open segment '%s'\n", "+resend_headers", "segment:'%s' starts with packet stream:%d pts:%s pts_time:%s frame:%d\n", "stream:%d start_pts_time:%s pts:%s pts_time:%s dts:%s dts_time:%s", "segment_time, segment_times, and segment_frames options are mutually exclusive, select just one of them\n", "Could not allocate forced times array\n", "Empty time specification in times list %s\n", "Invalid time duration specification '%s' in times list %s\n", "Specified time %f is greater than the following time %f\n", "Could not allocate forced frames array\n", "Empty frame specification in frame list %s\n", "Invalid argument '%s', must be a positive integer <= INT64_MAX\n", "Specified frame %d is greater than the following frame %d\n", "Invalid time duration specification '%s' for segment_time option\n", "Invalid negative segment_time with segment_atclocktime option set\n", "ffcat,ffconcat", "'ext' list type option is deprecated in favor of 'csv'\n", "Could not select stream matching identifier '%s'\n", "format %s not supported.\n", "Some of the provided format options in '%s' are not recognized\n", "s->nb_streams == oc->nb_streams", "Selected stream id:%d type:%s\n", "stream_segment,ssegment", "stream_segment muxer", "reference_stream", "set reference stream", "segment_format", "set container format used for the segments", "segment_format_options", "set list of options for the container format used for the segments", "segment_list", "set the segment list filename", "segment_header_filename", "write a single file containing the header", "segment_list_flags", "set flags affecting segment list generation", "allow list caching", "enable live-friendly list generation (useful for HLS)", "segment_list_size", "set the maximum number of playlist entries", "segment_list_type", "set the segment list type", "flat format", "csv format", "extended format", "ffconcat format", "M3U8 format", "Apple HTTP Live Streaming compatible", "segment_atclocktime", "set segment to be cut at clocktime", "segment_clocktime_offset", "set segment clocktime offset", "segment_clocktime_wrap_duration", "set segment clocktime wrapping duration", "segment_time", "set segment duration", "segment_time_delta", "set approximation value used for the segment times", "segment_times", "set segment split time points", "segment_frames", "set segment split frame numbers", "segment_wrap", "segment_list_entry_prefix", "set base url prefix for segments", "segment_start_number", "set the sequence number of the first segment", "segment_wrap_number", "set the number of wrap before the first segment", "increment_tc", "increment timecode between each segment", "break_non_keyframes", "allow breaking segments on non-keyframes", "individual_header_trailer", "write header/trailer to each segment", "write_header_trailer", "write a header to the first segment and a trailer to the last one", "reset_timestamps", "reset timestamps at the begin of each segment", "initial_offset", "set initial timestamp offset", "write_empty_segments", "allow writing empty 'filler' segments", " dispatching %s frame with %d bytes and pts %ld\n", "vmd->frame_count * vmd->frames_per_block too large\n", "Failed to read frame record\n", "Invalid frame size\n", "Not a VBV file\n", "Header chunk is missing\n", "Header chunk size is incorrect\n", "Incorrect header version\n", "'BODY' chunk is missing\n", "siff", "vb,son", "Invalid audio part size\n", "pts_inc %d is too large\n", "treesize too large\n", "Cannot allocate %u bytes of extradata\n", "APCM", "NONE", "JFIF", "\nSMJPEG", "Unknown version %u", "error when reading comment\n", "Multiple audio streams", "Multiple video streams", "unknown header %x\n", "\nSMJPEG", "more than >2 streams are not supported\n", "unsupported video codec\n", "<c n=\"%d\" d=\"%lu\" />\n", "%s/Manifest", "%s/Manifest.tmp", "<SmoothStreamingMedia MajorVersion=\"2\" MinorVersion=\"0\" Duration=\"%lu\"", " IsLive=\"true\" LookAheadFragmentCount=\"%d\" DVRWindowLength=\"0\"", "<StreamIndex Type=\"video\" QualityLevels=\"%d\" Chunks=\"%d\" Url=\"QualityLevels({bitrate})/Fragments(video={start time})\">\n", "<QualityLevel Index=\"%d\" Bitrate=\"%ld\" FourCC=\"%s\" MaxWidth=\"%d\" MaxHeight=\"%d\" CodecPrivateData=\"%s\" />\n", "</StreamIndex>\n", "<StreamIndex Type=\"audio\" QualityLevels=\"%d\" Chunks=\"%d\" Url=\"QualityLevels({bitrate})/Fragments(audio={start time})\">\n", "<QualityLevel Index=\"%d\" Bitrate=\"%ld\" FourCC=\"%s\" SamplingRate=\"%d\" Channels=\"%d\" BitsPerSample=\"16\" PacketSize=\"%d\" AudioTag=\"%d\" CodecPrivateData=\"%s\" />\n", "</SmoothStreamingMedia>\n", "mkdir failed\n", "%s/QualityLevels(%ld)", "Unsupported video codec\n", "Unsupported audio codec\n", "no video stream and no min frag duration set\n", "%s/temp", "%s/FragmentInfo(%s=%lu)", "%s/Fragments(%s=%lu)", "smoothstreaming", "smooth streaming muxer", "lookahead_count", "number of lookahead fragments", "Wrong magic\n", "smush", "invalid comment size (%u)\n", "invalid sample rate (%f)\n", "truncating fractional part of sample rate (%f)\n", "invalid codec; use pcm_s32le or pcm_s32be\n", "Invalid AAC packet in IEC 61937\n", "Data type 0x%04x in IEC 61937", "Packet not ending at a 16-bit boundary", "Codec change in IEC 61937", "spdif", "bitrate is too high\n", "type=%x len=%i pkt_offset=%i\n", "stray DTS-HD frame\n", "bad DTS syncword 0x%x\n", "HD mode not supported for this format\n", "Unknown DTS sample rate for HD\n", "DTS-HD bitrate too high, temporarily sending core only\n", "%i samples in DTS frame not supported\n", "Unrecognized large DTS frame", "Specified HD rate of %d Hz would require an impossible repetition period of %d for the current DTS stream (blocks = %d, sample rate = %d)\n", "Too large TrueHD frame of %d bytes", "Wrong MPEG file format\n", "version: %i layer: %i extension: %i\n", "Wrong AAC file format\n", "%u samples in AAC frame not supported\n", "spdif_flags", "IEC 61937 encapsulation flags", "output in big-endian format (for use as s16be)", "dtshd_rate", "mux complete DTS frames in HD mode at the specified IEC958 rate (in Hz, default 0=disabled)", "dtshd_fallback_time", "min secs to strip HD for after an overflow (-1: till the end, default 60)", "%d:%d:%d%*1[,.]%d --> %d:%d:%d%*1[,.]%d%*[ ]X1:%u X2:%u Y1:%u Y2:%u", " --> ", "%*d:%*d:%*d%*1[,.]%*d --> %*d:%*d:%*d%*1[,.]%d", "Insufficient timestamps in event number %d.\n", "%d\n%02d:%02d:%02d,%03d --> %02d:%02d:%02d,%03d", "  X1:%03d X2:%03d Y1:%03d Y2:%03d", "SRT supports only a single subtitles stream.\n", "Unsupported subtitles codec: %s\n", "application/x-subrip", "AES_CM_128_HMAC_SHA1_80", "SRTP_AES128_CM_HMAC_SHA1_80", "AES_CM_128_HMAC_SHA1_32", "SRTP_AES128_CM_HMAC_SHA1_32", "SRTP Crypto suite %s not supported\n", "Incorrect amount of SRTP params\n", "HMAC mismatch\n", "%2d:%2d:%2d:%2d , %2d:%2d:%2d:%2d , %n", "%*d:%*d:%*d:%*d , %*d:%*d:%*d:%*d , %c", "UTF16 is automatically converted to UTF8, do not specify a character encoding\n", "Dropping %d duplicated subtitle events\n", "[DELAY]", "[%d:%d:%d]", "******** START SCRIPT ********", "%*u:%*u:%*u.%*u,%*u:%*u:%*u.%*u%c", "[INFORMATION]", "[br]", "[COLF]", "[SIZE]", "[FONT]", "[STYLE]", "[END INFORMATION]", "[SUBTITLE]", "%u:%u:%u.%u,%u:%u:%u.%u", "application/x-pgs", "Svag", "svag", "invalid tag length: %d\n", "invalid bitmap format %d, skipped\n", "invalid frame size %dx%d\n", "Failed to uncompress one bitmap\n", "libavformat/swfdec.c", "pixel format change unsupported\n", "Unknown tag: %d\n", "Cliping len %d\n", "SWF compressed file detected\n", "Unable to init zlib context\n", "tag_len < 0x3f", "libavformat/swfenc.c", "SWF muxer only supports 1 audio stream\n", "SWF muxer only supports MP3\n", "SWF muxer only supports 1 video stream\n", "SWF muxer only supports VP6, FLV1 and MJPEG\n", "avm2", "Invalid (too large) frame rate %d/%d\n", "swf does not support that sample rate, choose from (44100, 22050, 11025).\n", "warning: Flash Player limit of 16000 frames reached\n", "audio fifo too small to mux audio essence\n", "application/x-shockwave-flash", "tBaK", "%d metadata block CRC error.\n", "MD5=", "MD5 metadata block CRC error.\n", "encoder version: %0X\n", "Port missing in uri\n", "listen_timeout", "Failed to resolve hostname %s: %s\n", "libavformat/tcp.c", "Listen for incoming connections", "set timeout (in microseconds) of socket I/O operations", "Connection awaiting timeout (in milliseconds)", "send_buffer_size", "Socket send buffer size (in bytes)", "recv_buffer_size", "Socket receive buffer size (in bytes)", "content", "startTime", "startOfParagraph", "Syntax error near offset %ld.\n", "\"captions\"", "\"duration\"", "\"content\"", "\"startOfParagraph\"", "\"startTime\"", "tedcaptions", "tedcaptions_demuxer", "set the start time (offset) of the subtitles, in ms", "All tee outputs failed.\n", "Slave muxer #%u failed, aborting.\n", "Slave muxer #%u failed: %s, continuing with %u/%u slaves.\n", "No option found near \"%s\"\n", "onfail", "abort", "Invalid onfail option value, valid options are 'abort' and 'ignore'\n", "Invalid stream specifier '%s' for output '%s'\n", "Slave '%s': error opening: %s\n", "Slave '%s': error writing header: %s\n", "Specifier separator in '%s' is '%c', but only characters '%s' are allowed\n", "Invalid stream specifier '%s' in bsfs option '%s' for slave output '%s'\n", "spec:%s bsfs:%s matches stream %d of slave output '%s'\n", "Duplicate bsfs specification associated to stream %d of slave output '%s', filters will be ignored\n", "Cannot initialize bitstream filter with name '%s', unknown filter or internal error happened\n", "Error parsing bitstream filter sequence '%s' associated to stream %d of slave output '%s'\n", "bsfs", "Unknown option '%s'\n", "filename:'%s' format:%s\n", "    stream:%d codec:%s type:%s", " bsfs:", "Input stream #%d is not mapped to any slave.\n", "Tee muxer", "tiertexseq", "invalid audio chunk size\n", "unsupported compression method %d\n", "unsupported features 0x%02x\n", "nonsense samplerate\n", "Header CRC error\n", "totalframes %d invalid\n", "Seek table CRC error\n", "Index entry disappeared\n", "ans,art,asc,diz,ice,nfo,txt,vt", "TTY demuxer", "chars_per_frame", "A string describing frame size, such as 640x480 or hd720.", "marker does not match\n", "unknown chunk id %i\n", "setsockopt(IP_DROP_MEMBERSHIP)", "setsockopt(IPV6_DROP_MEMBERSHIP)", "getaddrinfo(%s, %s): %s\n", "setsockopt(MCAST_JOIN_SOURCE_GROUP)", "setsockopt(MCAST_BLOCK_SOURCE)", "overrun_nonfatal", "'overrun_nonfatal' option was set but it is not supported on this build (pthread support is required)\n", "udplite_coverage", "fifo_size", "'circular_buffer_size' option was set but it is not supported on this build (pthread support is required)\n", "'bitrate' option was set but it is not supported on this build (pthread support is required)\n", "burst_bits", "localaddr", "socket option UDPLITE_SEND_CSCOV not available", "socket option UDPLITE_RECV_CSCOV not available", "bind failed", "setsockopt(IP_MULTICAST_TTL)", "setsockopt(IPV6_MULTICAST_HOPS)", "Simultaneously including and excluding multicast sources is not supported\n", "setsockopt(IP_ADD_MEMBERSHIP)", "setsockopt(IPV6_ADD_MEMBERSHIP)", "setsockopt(SO_SNDBUF)", "setsockopt(SO_RECVBUF)", "getsockopt(SO_RCVBUF)", "end receive buffer size reported is %d\n", "attempted to set receive buffer to size %d but it only ended up set as %d", "broadcast", "udplite", "System data size (in bytes)", "Bits to send per second", "Max length of bursts in bits (when using bitrate)", "Local port", "local_port", "Local address", "choose UDPLite head size which should be validated by checksum", "Maximum UDP packet size", "explicitly allow reusing UDP sockets", "reuse_socket", "explicitly allow or disallow broadcast destination", "Time to live (multicast only)", "set if connect() should be called on socket", "set the UDP receiving circular buffer size, expressed as a number of packets with size of 188 bytes", "survive in case of UDP receiving circular buffer overrun", "set raise error timeout (only in read mode)", "%d, %10ld", ", %d x %d", ", unknown", ", %d samples", "!\"reached\"", "libavformat/uncodedframecrcenc.c", "uncodedframecrc", "%s://", "0123456789abcdef0123456789ABCDEF", "unknown codec", "unspecified frame size", "unspecified sample format", "unspecified sample rate", "unspecified number of channels", "no decodable DTS frames", "unspecified size", "unspecified pixel format", "no frame in rv30/40 and no sar", "*pkt_buffer", "libavformat/utils.c", "probing stream %d pp:%d\n", "Failed to reallocate probe buffer for stream %d\n", "nothing to probe for stream %d\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "probed stream %d\n", "probed stream %d failed\n", "libavformat license: GPL version 2 or later", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist && !dst->protocol_blacklist", "Failed to duplicate black/whitelist\n", "Truncating packet of size %d to %ld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "st->internal->avctx->ticks_per_frame", "s->iformat", "DTS %li < %li out of order\n", "invalid dts/pts combination %li\n", "first_dts %s not matching first dts %s (pts %s, duration %ld) in the queue\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%ld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "Reconfiguring buffers to size %ld\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%lx pos_max=0x%lx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%ld %ld %ld / %s %s %s target:%s limit:%ld start:%ld noc:%d\n", "read_timestamp() failed in the middle\n", "read_seek: %d %s\n", "using cached pos_min=0x%lx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%lx pos_limit=0x%lx dts_max=%s\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "Demuxer context update while decoder is open, closing and trying to re-open\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "Ignoring outlier non primary stream starttime %f\n", "Before avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d nb_streams:%d\n", "Failed to open codec in av_find_stream_info\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %ld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "DTS discontinuity in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "max_analyze_duration %ld reached at %ld microseconds st:%d\n", "decoding for stream %d failed\n", "start time for stream %d is not set in estimate_timings_from_pts\n", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Estimating duration from bitrate, this may be inaccurate\n", "stream %d: start_time: %0.3f duration: %0.3f\n", "format: start_time: %0.3f duration: %0.3f bitrate=%ld kb/s\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "new_program: id=0x%04x\n", "Chapter end time %ld before start %ld\n", "stream index %d is not valid\n", "%0*d", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "demuxer does not support additional id3 data, skipping\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Number of streams exceeds max_streams parameter (%d), see the documentation if you wish to increase it\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "Failed to open bitstream filter %s for stream %d with codec %s", "Failed to parse creation_time %s\n", ".%06dZ", "Invalid palette side data\n", "v210x demuxer", "v210 demuxer", "VAGp", "vc1 demuxer", "Zero FPS specified, defaulting to 1 FPS\n", "vc1test", "Only WMV3 is accepted!\n", "unknown packet type %d\n", "coded length is more than two bytes\n", "too big header, skipping\n", "missing colon in key:value pair '%s'\n", "header: '%s' = '%s'\n", "got a valid integer (%ld)\n", "TimeUnitNumerator", "TimeUnitDenominator", "SamplingFrequency", "NominalBitrate", "Version", "Vivo/%d.", "\r\nVersion:Vivo/", "vivo", "_VVVVV%7", "Ignoring mid-stream change in audio codec\n", "unknown codec tag\n", "cannot seek while no stream was found yet\n", "unknown header size: %d\n", "audio/x-voc", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "Unsupported pixel format (%d)\n", "Unsupported color space (%d)\n", "%d:%d:%d.%d%c%n", "%d:%d:%d%c%n", "%*3d:%*2d:%*2d.%*2d%c", "%*3d:%*2d:%*2d%c", "Malformed header\n", "COMM tag not found!\n", "Invalid rate flag %d\n", "Invalid bitrate per channel %d\n", "Mode not supported: %d Hz, %ld kb/s.\n", "97012000", "00052200", "vqf,vql,vqe", "(c) ", "ARNG", "arranger", "AUTH", "BAND", "CDCT", "conductor", "COMT", "GENR", "LABL", "MUSC", "NOTE", "note", "PROD", "PRSN", "personnel", "REMX", "remixer", "SING", "singer", "WORD", "WAVE", "RIFX", "RF64", "ds64", "length <= sizeof(temp)", "libavformat/wavdec.c", "Cannot check for SPDIF\n", "could not find wave guid\n", "unknown guid: %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "invalid start code %s in RIFF header\n", "invalid format in RIFF header\n", "negative data_size and/or sample_count in ds64: data_size = %ld, sample_count = %ld\n", "found more than one 'fmt ' tag\n", "found more than one 'XMA2' tag\n", "found no 'fmt ' tag before the 'data' tag\n", "Ignoring maximum wav data size, file may be invalid\n", "originator", "originator_reference", "origination_date", "origination_time", "time_reference", "0x%016lX%016lX%016lX%016lX", "0x%016lX%016lX%016lX%016lX%016lX%016lX%016lX%016lX", "coding_history", "found no 'fmt ' tag before the 'SMV0' tag\n", "Unknown SMV version found\n", "Found SMV data\n", "Could not allocate extradata.\n", "too many frames per jpeg\n", "too short LIST tag\n", "no 'fmt ' or 'XMA2' tag found\n", "no 'data' tag found\n", "Data size %ld is too large\n", "ignoring wrong sample_count %ld\n", "WAV demuxer", "ignore_length", "Ignore length", "No memory for peak data\n", "wav_write_packet: NOPTS\n", "%s codec not supported\n", "levl", "Writing local time and date to Peak Envelope Chunk\n", "%Y:%m:%d:%H:%M:%S:", "Failed to write timestamp\n", "Filesize %ld invalid for wav, output file will be broken\n", "WAVE files have exactly one stream\n", "%s codec not supported in WAVE format\n", "fact", "%s codec not supported for Peak Chunk\n", "Writing 16 bit peak for 8 bit audio does not make sense\n", "audio/x-wav", "WAV muxer", "write_bext", "Write BEXT chunk.", "write_peak", "Write Peak Envelope chunk.", "Do not write peak chunk.", "Append peak chunk after wav data.", "Write only peak chunk, omit wav data.", "rf64", "Use RF64 header rather than RIFF for large files.", "Write RF64 header if file grows large enough.", "always", "Always write RF64 header regardless of file size.", "never", "Never write RF64 header regardless of file size.", "peak_block_size", "Number of audio samples used to generate each peak frame.", "peak_format", "The format of the peak envelope data (1: uint8, 2: uint16).", "peak_ppv", "Number of peak points per peak value (1 or 2).", "  unrecognized WC3 chunk: %c%c%c%c (0x%02X%02X%02X%02X)\n", "Subtitle time!\n", "  doytsch: %s\n", "  fronsay: %s\n", "  inglish: %s\n", "wc3movie", "Invalid chunk filename template '%s'\n", "webm_chunk", "WebM Chunk Muxer", "chunk_start_index", "start index of the chunk", "filename of the header where the initialization data will be written", "audio_chunk_duration", "duration of each chunk in milliseconds", "false", "true", "urn:mpeg:dash:profile:isoff-live:2011", "urn:webm:dash:profile:webm-on-demand:2012", "1000000", "128000", "The 'adaptation_sets' option must be set.\n", "streams=", "Invalid value for 'streams' in adapation_sets.\n", "  type=\"%s\"\n", "  mediaPresentationDuration=\"PT%gS\"\n", "  minBufferTime=\"PT%gS\"\n", "  profiles=\"%s\"%s", "%Y-%m-%dT%H:%M:%SZ", "  availabilityStartTime=\"%s\"\n", "  timeShiftBufferDepth=\"PT%gS\"\n", "  minimumUpdatePeriod=\"PT%dS\"", "<UTCTiming\n", "  schemeIdUri=\"urn:mpeg:dash:utc:http-iso:2014\"\n", "  value=\"%s\"/>\n", " duration=\"PT%gS\"", "<AdaptationSet id=\"%s\"", " mimeType=\"%s/webm\"", " codecs=\"%s\"", " lang=\"%s\"", " width=\"%d\"", " audioSamplingRate=\"%d\"", " bitstreamSwitching=\"%s\"", " subsegmentAlignment=\"%s\"", " subsegmentStartsWithSAP=\"%d\"", "%s_$RepresentationID$.hdr", "%s_$RepresentationID$_$Number$.chk", "<ContentComponent id=\"1\" type=\"%s\"/>\n", "<SegmentTemplate", " timescale=\"1000\"", " duration=\"%d\"", " media=\"%s\"", " startNumber=\"%d\"", " initialization=\"%s\"", "<Representation id=\"%s\"", " bandwidth=\"%s\"", " startsWithSAP=\"1\"", "<SegmentBase\n", "  indexRange=\"%s-%s\">\n", "<Initialization\n", "  range=\"0-%s\" />\n", "</SegmentBase>\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", "<MPD\n", "  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n", "  xmlns=\"urn:mpeg:DASH:schema:MPD:2011\"\n", "  xsi:schemaLocation=\"urn:mpeg:DASH:schema:MPD:2011\"\n", "<Period id=\"0\"", " start=\"PT%gS\"", "application/xml", "WebM DASH Manifest muxer", "adaptation_sets", "Adaptation sets. Syntax: id=0,streams=0,1,2 id=1,streams=3,4 and so on", "debug_mode", "[private option - users should never set this]. Create deterministic output", "create a live stream manifest", "chunk_duration_ms", "duration of each chunk (in milliseconds)", "utc_timing_url", "URL of the page that will return the UTC timestamp in ISO format", "time_shift_buffer_depth", "Smallest time (in seconds) shifting buffer for which any Representation is guaranteed to be available.", "minimum_update_period", "Minimum Update Period (in seconds) of the manifest.", "RIFF", "WEBP", "VP8X", "ANIM", "ANMF", "Only exactly 1 stream is supported\n", "Only WebP is supported\n", "WebP muxer", "Number of times to loop the output: 0 - infinite loop", "\n\r\t ", "WebVTT demuxer", "Set kind of WebVTT track", "webvtt_kind", "WebVTT subtitles kind", "WebVTT captions kind", "descriptions", "WebVTT descriptions kind", "WebVTT metadata kind", "%ld:", "%02ld:%02ld.%03ld", "%.*s\n", " %.*s", "Exactly one WebVTT stream is needed.\n", "WEBVTT\n", "text/vtt", "Stereo WS-SND1", "Unknown codec: %d", "wsaud", "Skipping unknown chunk 0x%08X\n", "invalid fps: %d\n", " note: unknown chunk seen (%c%c%c%c)\n", "wsvqa", "version: %i.%i\n", "playback_time", "Rr-middle", "Lr-middle", "reserved channel assignment\n", "song_writer", "user", "1bit", "reported file length (0x%lx) exceeds number of available sectors (0x%lx)\n", "unknown guid %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}, expected dir_entry_guid; remaining directory entries ignored\n", "bad filename length, remaining directory entries ignored\n", "filename exceeds buffer size; remaining directory entries ignored\n", "format buffer size underflow\n", "unknown formattype:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "MPEG1WAVEFORMATEX underflow\n", "unknown subtype:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "unknown media type, mediatype:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}, subtype:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}, formattype:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "encountered broken chunk\n", "DVB scrambled stream detected (st:%d), decoding will likely fail\n", "encrypted stream detected (st:%d), decoding will likely fail\n", "unsupported chunk:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "root directory size exceeds sector size\n", "timeline data missing\n", "unknown guid %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}, expected metadata_guid; remaining metadata entries ignored\n", "WM/MediaThumbType", "WM/EncodingTime", "WM/MediaOriginalBroadcastDateTime", "WM/WMRVEncodeTime", "WM/WMRVEndTime", "WM/WMRVExpirationDate", "WM/WMRVBitrate", "%08x-%04x-%04x-%02x%02x%02x%02x%02x%02x%02x%02x", "unsupported metadata entry; key:%s, type:%d, length:0x%x\n", "wctx->nb_index < 10", "libavformat/wtvenc.c", "unknown codec_type (0x%x)\n", "unsupported codec_id (0x%x)\n", "write stream codec info failed codec_type(0x%x)\n", "write stream codec failed codec_type(0x%x)\n", "write stream data failed codec_type(0x%x)\n", "index < WTV_FILES", "unsupported file allocation table depth (%li bytes)\n", "Unsupported version %03X\n", "Cannot determine additional parameters\n", "Cannot determine custom sampling rate\n", "Bits per sample differ, this block: %i, header block: %i\n", "Channels differ, this block: %i, header block: %i\n", "Sampling rate differ, this block: %i, header block: %i\n", "Too many samples in block: %u\n", "ALawSoundFile**", "This muxer only supports a single WavPack stream.\n", "Invalid WavPack packet.\n", "audio/x-wavpack", "xmv->video.stream_index < s->nb_streams", "libavformat/xmv.c", "xobX", "Uncommon version %u", "Unsupported 5.1 ADPCM audio stream (0x%04X)\n", "Invalid parameters for audio track %u.\n", "XVAG", "fmat", "xvag", "XWMA", "Unexpected codec (tag 0x04%x; id %d)", "Unexpected extradata (%d bytes)", "Invalid channel count: %d\n", "Invalid bits_per_coded_sample: %d\n", "two dpds chunks present\n", "dpds chunk size %ld not divisible by 4\n", "dpds chunk size %ld invalid\n", "Invalid bits_per_coded_sample %d for %d channels\n", "xwma", "YOP has invalid header\n", "YUV4MPEG2", "FRAME", "420jpeg", "420mpeg2", "420paldv", "420p16", "422p16", "444p16", "420p14", "422p14", "444p14", "420p9", "422p9", "444p9", "444alpha", "Cannot handle 4:4:4:4 YUV4MPEG stream.\n", "YUV4MPEG stream contains an unknown pixel format.\n", "YUV4MPEG stream contains mixed interlaced and non-interlaced frames.\n", "YUV4MPEG has invalid header.\n", "YSCSS=", "yuv4mpegpipe", "ERROR: Codec not supported.\n", "Warning: generating rarely used 4:1:1 YUV stream, some mjpegtools might not work.\n", "'%s' is not an official yuv4mpegpipe pixel format. Use '-strict -1' to encode to this pixel format.\n", "Warning: generating non standard YUV stream. Mjpegtools will not work.\n", "ERROR: yuv4mpeg can only handle yuv444p, yuv422p, yuv420p, yuv411p and gray8 pixel formats. And using 'strict -1' also yuv444p9, yuv422p9, yuv420p9, yuv444p10, yuv422p10, yuv420p10, yuv444p12, yuv422p12, yuv420p12, yuv444p14, yuv422p14, yuv420p14, yuv444p16, yuv422p16, yuv420p16 and gray16 pixel formats. Use -pix_fmt to select one.\n", " Cmono", " Cmono16", " C411 XYSCSS=411", " C420paldv XYSCSS=420PALDV", " C420mpeg2 XYSCSS=420MPEG2", " C420jpeg XYSCSS=420JPEG", " C422 XYSCSS=422", " C444 XYSCSS=444", " C420p9 XYSCSS=420P9", " C422p9 XYSCSS=422P9", " C444p9 XYSCSS=444P9", " C420p10 XYSCSS=420P10", " C422p10 XYSCSS=422P10", " C444p10 XYSCSS=444P10", " C420p12 XYSCSS=420P12", " C422p12 XYSCSS=422P12", " C444p12 XYSCSS=444P12", " C420p14 XYSCSS=420P14", " C422p14 XYSCSS=422P14", " C444p14 XYSCSS=444P14", " C420p16 XYSCSS=420P16", " C422p16 XYSCSS=422P16", " C444p16 XYSCSS=444P16", "%s W%d H%d F%d:%d I%c A%d:%d%s\n", "Error. YUV4MPEG stream header write failed.\n", "The pixel format '%s' is not supported.\n", "+infinity", "+inf", "-infinity", "-inf", "+nan", "-nan", "tail_len <= 5", "libavutil/avstring.c", "'\\''", "3.0(back)", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(back)", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "hexadecagonal", "low frequency", "front left-of-center", "front right-of-center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "detected %d logical cores\n", "cpuflags", "BSF_NOT_FOUND", "Bitstream filter not found", "Internal bug, should not have happened", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "Generic error in an external library", "FILTER_NOT_FOUND", "Filter not found", "INPUT_CHANGED", "Input changed", "INVALIDDATA", "Invalid data found when processing input", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "Output changed", "PATCHWELCOME", "Not yet implemented in FFmpeg, patches welcome", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "INPUT_AND_OUTPUT_CHANGED", "Input and output changed", "HTTP_BAD_REQUEST", "Server returned 400 Bad Request", "HTTP_UNAUTHORIZED", "Server returned 401 Unauthorized (authorization failed)", "HTTP_FORBIDDEN", "Server returned 403 Forbidden (access denied)", "HTTP_NOT_FOUND", "Server returned 404 Not Found", "HTTP_OTHER_4XX", "Server returned 4XX Client Error, but not one of 40{0,1,3,4}", "HTTP_SERVER_ERROR", "Server returned 5XX Server Error reply", "               \n ", "Undefined constant or missing '(' in '%s'\n", "Missing ')' in '%s'\n", "Missing ')' or too many args in '%s'\n", "sinh", "cosh", "tanh", "atan", "acos", "isnan", "isinf", "while", "taylor", "floor", "ceil", "hypot", "ifnot", "bitand", "bitor", "between", "Unknown function in '%s'\n", "Invalid chars '%s' at the end of expression '%s'\n", "QP2LAMBDA", "Eval", "Cannot read file '%s': %s\n", "Error occurred in fstat(): %s\n", "Error occurred in mmap(): %s\n", "ff_tempfile: Cannot allocate file name\n", "/tmp/%sXXXXXX", "./%sXXXXXX", "ff_tempfile: Cannot open temporary file %s\n", "TEMPFILE", "AVPanScan", "ATSC A53 Part 4 Closed Captions", "Stereoscopic 3d metadata", "AVMatrixEncoding", "Metadata relevant to a downmix procedure", "AVReplayGain", "3x3 displaymatrix", "Active format description", "Motion vectors", "Skip samples", "Audio service type", "GOP timecode", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA512/224", "SHA512/256", "SHA384", "SHA512", "CRC32", "adler32", "The hardware pixel format '%s' is not supported by the device type '%s'\n", "AVHWFramesContext", "Picture size %ux%u is invalid\n", "Picture size %ux%u exceeds specified max pixel count %ld, see the documentation if you wish to increase it\n", "Formats with a palette require a minimum alignment of 4\n", "abs(src_linesize) >= bytewidth", "libavutil/imgutils.c", "abs(dst_linesize) >= bytewidth", "av_image_get_linesize failed\n", "IMGUTILS", "quiet", "panic", "[%s @ %p] ", "[%s] ", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "256color", "%s%s%s%s", "    Last message repeated %d times\r", "    Last message repeated %d times\n", "libavutil/lzo.c", "libavutil/mathematics.c", "duration >= 0", "Unable to parse option value \"%s\" as %s\n", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "size >= 25", "libavutil/opt.c", "INT64_MAX", "INT64_MIN", "%ld:%02d:%02d.%06d", "%d:%02d.%06d", "Unable to parse option value \"%s\" as image size\n", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "-FLT_MAX", "-FLT_MIN", "-DBL_MAX", "-DBL_MIN", "Unable to parse option value \"%s\" as color\n", "Unable to parse option value \"%s\" as video rate\n", "AVOption type %d of option %s not implemented yet\n", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "The value set by option '%s' is not a %s format", "pixel", "The value set by option '%s' is not a channel layout.\n", "0x%08X", "0x%02x%02x%02x%02x", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a %s format.\n", "The value for option '%s' is not a channel layout.\n", "%d%*1[:/]%d%c", "const_values array too small for %s\n", "Unable to parse option value \"%s\"\n", "true,y,yes,enable,enabled,on", "false,n,no,disable,disabled,off", "Unable to parse option value \"%s\" as boolean\n", "Unable to parse option value \"%s\" as duration\n", "Unable to parse option value \"%s\" as channel layout\n", "Invalid option type.\n", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "Error setting option %s to value %s.\n", "     %-15s ", "  %s%-17s ", "%-12s ", "<flags>", "<int>", "<int64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", "<boolean>", " (from ", " to ", " (default ", "%s AVOptions:\n", "Not supported option type: %d, option name: %s\n", "Invalid separator(s) found.", "%d:%d%c", "bikeshed", "0123456789ABCDEFabcdef", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Cannot find color '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "%Y - %m - %d", "%Y%m%d", "%H%M%S", "%J:%M:%S", "%H:%M", "%H%M", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "CornflowerBlue", "Cornsilk", "Crimson", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Plum", "PowderBlue", "RosyBrown", "RoyalBlue", "SaddleBrown", "SandyBrown", "SeaShell", "Sienna", "Silver", "Snow", "Teal", "Thistle", "Tomato", "Wheat", "WhiteSmoke", "YellowGreen", "qntsc", "qpal", "sntsc", "spal", "ntsc-film", "sqcif", "4cif", "16cif", "qqvga", "svga", "qxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd1080", "2kdci", "2kflat", "2kscope", "4kdci", "4kflat", "4kscope", "hqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "bgra", "rgba", "rgb32", "bgr32", "vaapi", "name nb_components nb_bits", "%-11s %7d %10d", "d->log2_chroma_w <= 3", "libavutil/pixdesc.c", "d->log2_chroma_h <= 3", "d->nb_components <= 4", "d->name && d->name[0]", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step && !c->offset && !c->shift && !c->depth", "8*c->step >= c->depth", "bayer_", "tmp[0] == 0 && tmp[1] == 0", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "iec61966-2-4", "bt1361e", "iec61966-2-1", "bt2020-20", "smpte428-1", "arib-std-b67", "yuyv422", "rgb24", "bgr24", "yuv410p", "yuv411p", "gray8,y8", "monow", "monob", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "gray16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "cuda", "0rgb", "rgb0", "0bgr", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "gbrap12be", "gbrap12le", "gbrap10be", "gbrap10le", "s16p", "s32p", "fltp", "dblp", "name   depth", "%-6s   %2d ", "Timecode frame rate must be specified\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Using non-standard frame rate %d/%d\n", "%s%02d:%02d:%02d%c%02d", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "IPBSipb", "3.1.11", "libavutil license: GPL version 2 or later", "attachment", "!\"valid element size\"", "libavutil/utils.c", "<fBBf<", "fffffff", "fff$", "000`", "<00000000<", "<\f\f\f\f\f\f\f\f<", "<ll>", "8ll8", "8ll8", "|||||||", "<fBBf<", "0xx00", "x00000x", "x`````x", "p000x", "p00000x", "p000x", "p000x", "p000x", "<ll>", "8ll8", "8ll8", "<<<<", "plane_count == nb_components - 1", "libswscale/alphablend.c", "libswscale/swscale_internal.h", "swscaler", "SWScaler", "scaler flags", "fast_bilinear", "fast bilinear", "bicubic", "nearest neighbor", "averaging area", "bicublin", "luma bicubic, chroma bilinear", "Gaussian", "natural bicubic spline", "print_info", "print info", "accurate_rnd", "accurate rounding", "full_chroma_int", "full chroma interpolation", "full_chroma_inp", "full chroma input", "error_diffusion", "error diffusion dither", "source width", "source height", "destination width", "destination height", "source format", "destination format", "source is full range", "destination is full range", "scaler param 0", "scaler param 1", "source vertical chroma position in luma grid/256", "source horizontal chroma position in luma grid/256", "destination vertical chroma position in luma grid/256", "destination horizontal chroma position in luma grid/256", "sws_dither", "set dithering algorithm", "leave choice to sws", "bayer dither", "error diffusion", "a_dither", "arithmetic addition dither", "x_dither", "arithmetic xor dither", "gamma correct scaling", "alphablend", "mode for alpha -> non alpha", "ignore alpha", "uniform_color", "blend onto a uniform color", "blend onto a checkerboard", "n == s->plane[ii].available_lines", "libswscale/slice.c", "(lastLumSrcY - firstLumSrcY + 1) <= hout_slice->plane[0].available_lines", "libswscale/swscale.c", "(lastChrSrcY - firstChrSrcY + 1) <= hout_slice->plane[1].available_lines", "One of the input parameters to sws_scale() is NULL, please check the calling code\n", "Slice parameters %d, %d are invalid\n", "Slices start in the middle!\n", "bad src image pointers\n", "bad dst image pointers\n", "unsupported conversion to planar RGB %s -> %s\n", "srcSliceH > 1", "libswscale/swscale_unscaled.c", "internal error %s -> %s converter\n", "unsupported bayer conversion\n", "libswscale/utils.c", "filter2Size > 0", "minFilterSize > 0", "SwScaler: reducing / aligning filtersize %d -> %d\n", "(*filterPos)[i] >= 0", "(*filterPos)[i] < srcW", "(*filterPos)[i] + j < srcW || !filter[i * filterSize + j]", "SwScaler: zero vector in scaling\n", "sws: initFilter failed\n", "libswscale license: GPL version 2 or later", "%1.3f ", "ehh flags invalid?!", "dithered ", "deprecated pixel format used, make sure you did set range correctly\n", "%s is not supported as input pixel format\n", "%s is not supported as output pixel format\n", "Exactly one scaler algorithm must be chosen, got %X\n", "%dx%d -> %dx%d is invalid scaling dimension\n", "Forcing full internal H chroma due to odd output size\n", "Forcing full internal H chroma due to input having non subsampled chroma\n", "Desired dithering only supported in full chroma interpolation for destination format '%s'\n", "Ordered dither is not supported in full chroma interpolation for destination format '%s'\n", "%s output is not supported with half chroma resolution, switching to full\n", "full chroma interpolation for destination format '%s' not yet implemented\n", "c->chrDstH <= dstH", "%s scaler, from %s to %s%s ", "using %s\n", "%dx%d -> %dx%d\n", "lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "using alpha blendaway %s -> %s special converter\n", "using unscaled %s -> %s special converter\n", "YUV color matrix differs for YUV->YUV, using intermediate RGB to convert\n", "area averaging", "luma bicubic / chroma bilinear", "nearest neighbor / point", "Optimized 2 tap filter code cannot be used\n", "<'<*<'<*<<<<<<<<<<<-<-<<>>", "No accelerated colorspace conversion found from %s to %s.\n", "%ibpp not supported by yuv2rgb\n"], "stringidentifiers": ["aac_adtstoasc", "aac_latm", "dual_mono_mode", "autoselection", "both", "aac_fixed", "aac_coder", "anmr", "twoloop", "aac_ms", "aac_is", "aac_pns", "aac_tns", "aac_ltp", "aac_pred", "ac3_fixed", "drc_scale", "heavy_compr", "target_level", "dmix_mode", "ltrt_cmixlev", "ltrt_surmixlev", "loro_cmixlev", "loro_surmixlev", "adpcm_yamaha", "adpcm_xa", "adpcm_thp", "adpcm_thp_le", "adpcm_swf", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_psx", "adpcm_mtaf", "adpcm_ms", "adpcm_ima_ws", "adpcm_ima_wav", "adpcm_ima_smjpeg", "adpcm_ima_rad", "adpcm_ima_qt", "adpcm_ima_oki", "adpcm_ima_iss", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ima_dk4", "adpcm_ima_dk3", "adpcm_ima_dat4", "adpcm_ima_apc", "adpcm_ima_amv", "adpcm_ea_xas", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ea_r1", "adpcm_ea_maxis_xa", "adpcm_ea", "adpcm_dtk", "adpcm_ct", "adpcm_aica", "adpcm_afc", "adpcm_4xm", "adpcm_adx", "extra_bits_bug", "amrnb", "amrwb", "max_samples", "atrac1", "atrac3", "AVDCT", "fastint", "altivec", "faan", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "binkaudio_dct", "binkaudio_rdft", "private_spspps_buf", "bmv_audio", "AVBSFContext", "chomp", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "rv10", "rv20", "mjpegb", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "indeo3", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "tscc", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "loco", "wnv1", "aasc", "indeo2", "fraps", "truemotion2", "cscd", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "indeo4", "indeo5", "mimic", "escape124", "dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "m101", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "bmv_video", "vble", "dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "xface", "smvjpeg", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "screenpresso", "wrapped_avframe", "rscc", "alias_pix", "ansi", "brender_pix", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "tdsc", "vc1image", "wmv3image", "apng", "cfhd", "truemotion2rt", "magicyuv", "sheervideo", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_g726", "adpcm_g722", "adpcm_g726le", "adpcm_vima", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "mp3adu", "mp3on4", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "dsicinaudio", "musepack7", "gsm_ms", "voxware", "nellymoser", "musepack8", "speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "sipr", "twinvq", "truehd", "mp4als", "qdmc", "celt", "dss_sp", "g729", "ralf", "ilbc", "wavesynth", "sonic", "sonicls", "opus", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "dvd_subtitle", "dvb_subtitle", "xsub", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "eia_608", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "dca_core", "core_only", "yuv422p10", "yuv422p", "dump_extra", "SL25", "dvsd", "CDVC", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "use_buggy_lpc", "context", "non_deterministic", "bits_per_codeword", "L263", "S263", "GEOV", "GEOX", "TRAIL_N", "TRAIL_R", "STSA_N", "STSA_R", "RADL_N", "RADL_R", "RASL_N", "RASL_R", "BLA_W_LP", "BLA_W_RADL", "BLA_N_LP", "IDR_W_RADL", "IDR_N_LP", "CRA_NUT", "EOS_NUT", "EOB_NUT", "FD_NUT", "SEI_PREFIX", "SEI_SUFFIX", "h264_mp4toannexb", "Q264", "Gray", "CABAC", "CAVLC", "LPAR", "CONSTR", "REDU", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "hevc_mp4toannexb", "imxdump", "SEPB1", "SEPB2", "ZYGO", "VOXs0", "VOXw0", "VOXyP", "mjpeg2jpeg", "mjpg", "mjpegadump", "mov2textsub", "text2movsub", "mp3decomp", "mpc7", "mpc8", "mpeg4_unpack_bframes", "ffmpeg", "XVID", "XVIX", "RMP4", "ZMP4", "SIPP", "DIVX", "UMP4", "Reserved", "WV1F", "QMP4", "MP4S", "divx_packed", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "on2avc", "NULL", "AVSubtitleRect", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVCodecContext", "unaligned", "input_preserved", "pass1", "pass2", "emu_edge", "psnr", "ildct", "low_delay", "global_header", "bitexact", "ilme", "cgop", "output_corrupt", "flags2", "noout", "ignorecrop", "local_header", "showall", "export_mvs", "skip_manual", "ass_ro_flush_noop", "me_method", "epzs", "tesa", "phods", "time_base", "frame_size", "frame_number", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "rc_strategy", "b_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "skip_count", "misc_bits", "frame_bits", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "hpel_chroma", "dc_clip", "trunc", "very", "normal", "unofficial", "experimental", "b_qoffset", "crccheck", "explode", "ignore_err", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "minrate", "rc_buf_aggressivity", "i_qfactor", "i_qoffset", "rc_init_cplx", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "deblock", "favor_inter", "bits_per_coded_sample", "median", "pict", "dct_coeff", "green_metadata", "skip", "startcode", "mmco", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "nomc", "vismv", "debug_mv", "cmp_func", "subcmp", "ildctcmp", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "pre_dia_size", "subq", "dtg_active_format", "me_range", "ibias", "pbias", "global_quality", "deflate", "slice_flags", "xvmc_acceleration", "stream_codec_tag", "sc_threshold", "rc_init_occupancy", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "aac_main", "aac_ssr", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "lowres", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "default", "noref", "bidir", "nokey", "nointra", "bidir_refine", "brd_scale", "keyint_min", "chromaoffset", "trellis", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "color_primaries", "color_primaries_type", "bt709", "unspecified", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "Film", "bt2020", "smpte428_1", "color_trc", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "smpte2084", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "chroma_sample_location", "chroma_sample_location_type", "Left", "Center", "topleft", "bottomleft", "Bottom", "log_level_offset", "thread_type", "slice", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "sub_text_format", "ass_with_timings", "refcounted_frames", "side_data_only_packets", "skip_alpha", "field_order", "dump_separator", "codec_whitelist", "pixel_format", "video_size", "in_sample_fmt", "out_sample_fmt", "in_channel_layout", "out_channel_layout", "out_sample_rate", "HEIGHT", "DEPTH", "MAXVAL", "TUPLTYPE", "TUPLETYPE", "ENDHDR", "frmaQDM", "WwvfeUDDDDDD3DCDDEVfwP", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "I420", "IYUV", "yv12", "YUYVw", "BGR0C", "J444Z", "I40AY", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "remove_extra", "remove_extradata", "audioresample", "ReSampleContext", "non_pcm_mode", "decode_copy", "decode_drop", "ajkg", "smackaud", "smackvid", "TTA1", "unknown_codec", "book_idx", "mode_number", "vp9_superframe", "ws_snd1", "aeval", "same", "exprs", "aevalsrc", "nb_samples", "nb_in_channels", "nb_out_channels", "adelay", "aecho", "in_gain", "out_gain", "level_in", "level_out", "reproduction", "Columbia", "riaa", "RIAA", "acrossfade", "crossfade0", "crossfade1", "curve1", "esin", "ipar", "quadratic", "exponential", "iqsin", "ihsin", "dese", "desi", "curve2", "afade", "start_sample", "real", "imag", "w128", "w256", "w512", "w1024", "w2048", "w4096", "w8192", "w16384", "w32768", "w65536", "w131072", "win_func", "Rectangular", "bartlett", "Bartlett", "hanning", "Hanning", "hamming", "Hamming", "sine", "Sine", "aformat", "sample_fmts", "sample_rates", "channel_layouts", "sidechaingate", "sidechain", "agate", "makeup", "average", "maximum", "level_sc", "asc_level", "amix", "longest", "shortest", "dropout_transition", "out0", "out1", "anequalizer", "hd720", "mgain", "fscale", "anull", "apad", "pad_len", "whole_len", "aphaser", "triangular", "sinusoidal", "apulsator", "triangle", "square", "sawup", "sawdown", "offset_l", "offset_r", "aresample", "asetnsamples", "nb_out_samples", "asetrate", "NOPTS", "ashowinfo", "Crest_factor", "astats", "atempo", "biquad", "allpass", "width_type", "octave", "highpass", "lowpass", "bandreject", "bandpass", "treble", "bass", "channelmap", "channelsplit", "chorus", "compand", "attacks", "limitergain", "dynaudnorm", "extrastereo", "gain_interpolate", "gain_entry", "firequalizer", "chlayout", "wfunc", "rectangular", "blackman", "mnuttall3", "bnuttall", "bharris", "zero_phase", "regen", "itype", "hdcd", "join", "args", "replaygain", "acompressor", "sidechaincompress", "silencedetect", "start_periods", "start_duration", "start_threshold", "stop_periods", "stop_duration", "stop_threshold", "leave_silence", "stereotools", "balance_in", "balance_out", "mutel", "muter", "phasel", "slev", "sbal", "mlev", "sclevel", "stereowiden", "feedback", "crossfeed", "drymix", "double", "ignore", "replaygain_preamp", "replaygain_noclip", "nb_channels", "nb_consumed_samples", "startpts", "startt", "volumedetect", "anullsink", "colour", "pink", "anullsrc", "beep_factor", "samples_per_frame", "ahistogram", "dmode", "single", "separate", "cbrt", "rlog", "ascale", "acount", "rheight", "slide", "aphasemeter", "avectorscope", "lissajous", "lissajous_xy", "polar", "unsafe", "midi", "a_weighting", "b_weighting", "c_weighting", "sono_v", "bar_v", "showcqt", "bar_h", "axis_h", "sono_h", "fullhd", "volume2", "sono_g", "bar_g", "gamma2", "basefreq", "endfreq", "fcount", "fontfile", "fontcolor", "axisfile", "showfreqs", "Blackman", "welch", "Welch", "flattop", "bhann", "lanczos", "Lanczos", "gauss", "Gauss", "tukey", "Tukey", "cmode", "combined", "showspectrumpic", "rainbow", "moreland", "nebulae", "fire", "fiery", "fruit", "cool", "saturation", "vertical", "horizontal", "showspectrum", "rscroll", "fullframe", "magnitude", "VOLUME", "CHANNEL", "showwavespic", "split_channels", "showwaves", "cline", "enable", "noformat", "frei0r", "frei0r_src", "AVFilter", "afifo", "AVFilterGraph", "scale_sws_opts", "aresample_swr_opts", "pix_fmts", "all_channel_counts", "ffbuffersink", "abuffersink", "abuffer", "pix_fmt", "time_base_num", "time_base_den", "sar_num", "sar_den", "pixel_aspect", "sws_param", "pix_desc", "mainpic", "abench", "stop", "adrawgraph", "ebur128", "framelog", "verbose", "true", "dualmono", "panlaw", "ainterleave", "aloop", "modify", "delete", "print", "same_str", "starts_with", "equal", "greater", "ametadata", "VALUE1", "VALUE2", "aperms", "toggle", "random", "arealtime", "areverse", "scene", "aselect", "start_pts", "prev_pts", "prev_selected_pts", "start_t", "prev_t", "prev_selected_t", "pict_type", "PICT_TYPE_I", "PICT_TYPE_P", "PICT_TYPE_B", "PICT_TYPE_S", "PICT_TYPE_SI", "PICT_TYPE_SP", "PICT_TYPE_BI", "interlace_type", "PROGRESSIVE", "TOPFIRST", "BOTTOMFIRST", "consumed_samples_n", "prev_selected_n", "concatdec_select", "asendcmd", "astreamselect", "framesync", "image2", "asetpts", "FRAME_RATE", "INTERLACED", "NB_CONSUMED_SAMPLES", "NB_SAMPLES", "PREV_INPTS", "PREV_INT", "PREV_OUTPTS", "PREV_OUTT", "SAMPLE_RATE", "STARTPTS", "STARTT", "RTCTIME", "RTCSTART", "asettb", "intb", "AVTB", "asplit", "get_duration", "amovie", "format_name", "stream_index", "seek_point", "discontinuity", "atrim", "starti", "endi", "end_pts", "durationi", "end_sample", "start_frame", "spectrumsynth", "alphamerge", "setsar", "setdar", "dar_den", "bbox", "min_val", "blackdetect", "black_min_duration", "picture_black_ratio_th", "pic_th", "pixel_black_th", "pix_th", "blackframe", "c0_mode", "c1_mode", "c2_mode", "c3_mode", "all_mode", "addition", "addition128", "burn", "darken", "difference128", "divide", "dodge", "exclusion", "freeze", "glow", "hardlight", "hardmix", "lighten", "linearlight", "multiply", "multiply128", "negation", "overlay", "phoenix", "pinlight", "reflect", "screen", "softlight", "subtract", "vividlight", "c0_expr", "c1_expr", "c2_expr", "c3_expr", "all_expr", "c0_opacity", "c1_opacity", "c2_opacity", "c3_opacity", "all_opacity", "repeatlast", "BOTTOM", "boxblur", "luma_radius", "luma_power", "chroma_radius", "chroma_power", "alpha_radius", "alpha_power", "bwdif", "send_frame", "send_field", "similarity", "ciescope", "smpte", "apple", "widergb", "cie1931", "rec709", "uhdtv", "rec2020", "gamuts", "corrgamma", "showwhite", "mv_type", "frame_type", "colorbalance", "colorchannelmixer", "colorkey", "colorlevels", "rimin", "gimin", "bimin", "aimin", "rimax", "gimax", "bimax", "aimax", "romin", "gomin", "bomin", "aomin", "romax", "gomax", "bomax", "aomax", "colormatrix", "bt601", "color_mode", "bt470", "bt2020ncl", "yuv420p", "yuv420p10", "yuv420p12", "yuv422p12", "yuv444p", "yuv444p10", "yuv444p12", "wpadapt", "bradford", "vonkries", "identity", "convolution", "cover_rect", "cover", "out_w", "out_h", "keep_aspect", "cropdetect", "reset_count", "max_outliers", "preset_name", "color_negative", "cross_process", "darker", "increase_contrast", "lighter", "linear_contrast", "medium_contrast", "strong_contrast", "vintage", "master", "psfile", "datascope", "color2", "dctdnoiz", "sigma", "clean_src", "cycle", "dupthresh", "scthresh", "blockx", "blocky", "ppsrc", "dejudder", "delogo", "deshake", "blank", "mirror", "smode", "exhaustive", "opencl", "detelecine", "first_field", "displace", "ymap", "smear", "drawgrid", "drawbox", "edgedetect", "wires", "colormix", "elbg", "codebook_length", "nb_steps", "pal8", "brightness", "gamma_r", "gamma_g", "gamma_b", "gamma_weight", "init", "alphaextract", "extractplanes", "nb_frames", "weight_Y", "weight_U", "weight_V", "dc_Y", "dc_U", "dc_V", "field_type", "fieldhint", "absolute", "relative", "fieldmatch", "pc_n", "pc_u", "pc_n_ub", "pcn_ub", "mchroma", "combmatch", "combdbg", "dbglvl", "pcnub", "combpel", "fieldorder", "find_rect", "object", "xmin", "ymin", "xmax", "ymax", "framepack", "frameseq", "interp_start", "interp_end", "scene_change_detect", "framestep", "fspp", "use_bframe_qp", "lum_expr", "cb_expr", "cr_expr", "alpha_expr", "red_expr", "green_expr", "blue_expr", "gradfun", "histeq", "weak", "strong", "level_height", "scale_height", "display_mode", "parade", "levels_mode", "hqdn3d", "luma_spatial", "chroma_spatial", "luma_tmp", "chroma_tmp", "hwdownload", "hwupload", "idet", "intl_thres", "prog_thres", "rep_thres", "half_life", "analyze_interlaced_flag", "luma_mode", "deinterleave", "chroma_mode", "alpha_mode", "luma_swap", "chroma_swap", "alpha_swap", "kerndeint", "lenscorrection", "negval", "negate", "negate_alpha", "lutrgb", "lutyuv", "gammaval", "gammaval709", "minval", "clipval", "DOMAIN_", "haldclut", "interp_mode", "trilinear", "tetrahedral", "lut3d", "maskedmerge", "memc_only", "no_bitstream", "mcdeint", "medium", "extra_slow", "mergeplanes", "keep", "mpdecimate", "frac", "dilation", "inflate", "threshold0", "threshold1", "threshold2", "threshold3", "nnedi", "weights", "nsize", "s8x6", "s16x6", "s32x6", "s48x6", "s8x4", "s16x4", "s32x4", "n256", "pscrn", "fapprox", "all_seed", "all_strength", "alls", "all_flags", "allf", "c0_seed", "c0_strength", "c0_flags", "c1_seed", "c1_strength", "c1_flags", "c2_seed", "c2_strength", "c2_flags", "c3_seed", "c3_strength", "c3_flags", "eof_action", "repeat", "endall", "yuv420", "yuv422", "yuv444", "main_w", "main_h", "overlay_w", "overlay_h", "luma_strength", "chroma_strength", "palettegen", "max_colors", "reserve_transparent", "stats_mode", "paletteuse", "dithering_mode", "bayer", "heckbert", "floyd_steinberg", "sierra2", "sierra2_4a", "bayer_scale", "diff_mode", "debug_kdtree", "color_search", "nns_iterative", "nns_recursive", "bruteforce", "mean_err", "debug_accuracy", "perspective", "sense", "pixdesctest", "hard", "soft", "stats_file", "pullup", "readvitc", "scan_max", "thr_b", "thr_w", "remap", "removelogo", "repeatfields", "rotate", "rotw", "roth", "fillcolor", "luma_pre_filter_radius", "lpfr", "chroma_pre_filter_radius", "cpfr", "srcw", "srch", "src_format", "dstw", "dsth", "dst_format", "sws_flags", "param0", "param1", "src_range", "dst_range", "src_h_chr_pos", "src_v_chr_pos", "dst_h_chr_pos", "dst_v_chr_pos", "scale2ref", "interl", "in_color_matrix", "out_color_matrix", "in_range", "out_range", "in_v_chr_pos", "in_h_chr_pos", "out_v_chr_pos", "out_h_chr_pos", "force_original_aspect_ratio", "force_oar", "disable", "decrease", "increase", "nb_slices", "ohsub", "CMYK", "selectivecolor", "correction_method", "reds", "yellows", "greens", "cyans", "blues", "magentas", "whites", "neutrals", "blacks", "yellow", "cyan", "neutral", "separatefields", "setfield", "prog", "shuffleframes", "shuffleplanes", "map0", "map1", "map2", "map3", "signalstats", "TOUT", "VREP", "BRNG", "stat", "tout", "vrep", "brng", "smartblur", "luma_threshold", "chroma_threshold", "ssim", "vstack", "hstack", "stereo3d", "ab2l", "ab2r", "sbs2l", "sbs2r", "sbsl", "sbsr", "agmc", "agmd", "agmg", "agmh", "arbg", "arcc", "arcd", "arcg", "argg", "aybc", "aybd", "aybg", "aybh", "hdmi", "super2xsai", "swaprect", "swapuv", "thumbnail", "tile", "margin", "tinterlace", "drop_even", "drop_odd", "interleave_top", "interleave_bottom", "interlacex2", "mergex2", "low_pass_filter", "vlpf", "exact_tb", "counterclockwise", "transpose", "cclock_flip", "cclock", "portrait", "landscape", "sharpen", "unsharp", "luma_msize_x", "luma_msize_y", "luma_amount", "chroma_msize_x", "chroma_msize_y", "chroma_amount", "uspp", "color3", "color4", "color5", "bgopacity", "lthreshold", "hthreshold", "vflip", "vignette", "forward", "backward", "w3fdif", "complex", "waveform", "aflat", "acolor", "digital", "millivolts", "yadif", "send_frame_nospatial", "send_field_nospatial", "zoompan", "pduration", "pzoom", "cellauto", "random_fill_ratio", "random_seed", "start_full", "stitch", "bBsS", "mold", "life_color", "death_color", "mold_color", "mandelbrot", "maxiter", "start_x", "start_y", "start_scale", "end_scale", "bailout", "morphxf", "morphyf", "morphamp", "outer", "normalized_iteration_count", "outz", "inner", "mincol", "mptestsrc", "dc_luma", "dc_chroma", "freq_luma", "freq_chroma", "amp_luma", "amp_chroma", "ring1", "ring2", "allrgb", "allyuv", "smptehdbars", "smptebars", "rgbtestsrc", "testsrc2", "decimals", "haldclutsrc", "SWResampler", "in_channel_count", "out_channel_count", "used_channel_count", "internal_sample_fmt", "clev", "center_mix_level", "surround_mix_level", "lfe_mix_level", "rmvol", "rematrix_volume", "rematrix_maxval", "swr_flags", "dither_scale", "dither_method", "triangular_hp", "lipshitz", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "phase_shift", "linear_interp", "exact_rational", "resample_cutoff", "resampler", "soxr", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "dolby", "dplii", "filter_type", "blackman_nuttall", "kaiser", "kaiser_beta", "output_sample_bits", "CTRL", "SHDR", "SNDS", "HeaderSeed", "HeaderKey", "mp332", "acelp16", "acelp85", "aa_fixed_key", "SShd", "SSbd", "write_id3v2", "write_apetag", "twos", "sowt", "Qclp", "ADP4", "author", "copyright", "twos", "sowt", "Qclp", "ADP4", "AIFC", "AIFF", "id3v2_version", "CRYO_APC", "APETAGEX", "decode_fctl_chunk", "ignore_loop", "max_fps", "default_fps", "crc_table", "plays", "final_delay", "aqtitle", "aqtdec", "subfps", "Author", "encoded_by", "genre", "language", "disc", "publisher", "service_provider", "service_name", "asf_parse_packet", "asf_read_packet", "asf_st", "AspectRatioX", "AspectRatioY", "ASF_Protection_Type", "ASF_Key_ID", "ASF_License_URL", "encryption", "no_resync_search", "export_xmp", "creation_time", "Copyright", "asf_o", "Marker", "Padding", "Bitrate_Mutual_Exclusion", "MP43", "rating", "asf_stream", "Marked", "Layer", "ignore_readorder", "loopstart", "loopend", "Album", "Track", "GAB2", "MMES", "maker", "strh", "BottomUp", "PotEncoder", "ISFT", "Axan", "strn", "use_odml", "RIFF", "JUNK", "hdrl", "strf", "vprp", "idx1", "AVIX", "movi", "write_channel_mask", "subfile", "protocol_whitelist", "URLContext", "rw_timeout", "AVIOContext", "SMUS", "bink", "linespeed", "bfstm", "loop_start", "brstm", "alac", "lpcm", "lpcm", "frmaalac", "samrFFMP", "cavsvideo", "camera_version", "firmware_version", "software_version", "recording_timezone", "shutter_ns", "enable_crop", "crop_left", "crop_top", "crop_right", "crop_bottom", "inpoint", "outpoint", "file_packet_metadata", "exact_stream_id", "auto_convert", "segment_time_metadata", "static", "dynamic", "maxFrameRate", "frameRate", "mp4a", "mp4v", "avc1", "movflags", "dash", "extra_window_size", "min_seg_duration", "remove_at_exit", "use_template", "use_timeline", "single_file", "single_file_name", "init_seg_name", "media_seg_name", "dcstr", "dsicin", "dtshd", "effects", "dialogue", "comentary", "emergency", "karaoke", "Output", "Input", "dvbsub", "dvbtxt", "ea_cdata", "epaf", "server_attached", "ffm_write_index", "ffm_file_size", "ffmetadata", "ffmeta", "truncate", "follow", "filmstrip", "WAVEFORMATEXTENSIBLE_CHANNEL_MASK", "fLaC", "write_header", "false", "videodatarate", "audiodatarate", "datastream", "videocodecid", "audiocodecid", "audiosamplerate", "audiosamplesize", "metadatacreator", "MEGA", "filesize", "onTextData", "onCaption", "onCaptionInfo", "onMetaData", "onCuePoint", "live_flv", "live_flvdec", "flv_metadata", "missing_streams", "datasize", "lasttimestamp", "totalframes", "hasAudio", "hasVideo", "hasCuePoints", "hasMetadata", "hasKeyframes", "Text", "flvflags", "aac_seq_header_detect", "image2pipe", "mime_type", "bit_rate", "genh", "GIF87a", "GIF89a", "min_delay", "max_gif_delay", "default_delay", "timecode_at_mark_in", "timecode_at_mark_out", "framemd5", "framehash", "format_version", "sha256", "recorded", "min_frag_duration", "cookies", "http_proxy", "end_offset", "EVENT", "variant_bitrate", "PRIV", "APIC", "user_agent", "live_start_index", "allowed_extensions", "max_reload", "encryption_key", "encryption_iv", "mpegts_flags", "sdt_period", "pat_period", "hls_time", "hls_list_size", "hls_ts_options", "hls_vtt_options", "hls_wrap", "hls_allow_cache", "hls_base_url", "hls_segment_filename", "hls_key_info_file", "hls_subtitle_path", "hls_flags", "delete_segments", "round_durations", "discont_start", "omit_endlist", "use_localtime", "use_localtime_mkdir", "hls_playlist_type", "pl_type", "Forbidden", "chunked", "Connection", "close", "Server", "AkamaiGHost", "MediaGateway", "gzip", "no_proxy", "https", "icy_metadata_packet", "chunked_post", "content_type", "multiple_requests", "post_data", "icy_metadata_headers", "auth_type", "send_expect_100", "reconnect", "reconnect_at_eof", "reconnect_streamed", "reconnect_delay_max", "resource", "reply_code", "auth", "Blues", "Country", "Dance", "Disco", "Grunge", "Oldies", "Other", "Reggae", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Trance", "Classical", "Instrumental", "Acid", "Game", "Gospel", "Noise", "AlternRock", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "GEOB", "TCON", "TXXX", "encrypted", "USLT", "TYER", "TDAT", "CHAP", "Conductor", "Illustration", "compilation", "TCMP", "TDRC", "TDRL", "TDEN", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "TCOP", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "TPUB", "TRCK", "TSSE", "lyrics", "file_history", "channel_comment", "absolute_start_time", "comment_time", "general_remark", "operator_name", "creating_machine", "file_revision", "dsd_source_comment", "analogue_source_comment", "pcm_source_comment", "ljpg", "im24", "im32", "sunras", "yuv10", "SDPX", "XPDS", "webp_pipe", "tiff_pipe", "sunrast_pipe", "sgi_pipe", "qdraw_pipe", "ppm_pipe", "png_pipe", "pictor_pipe", "pgmyuv_pipe", "pgm_pipe", "pcx_pipe", "pbm_pipe", "pam_pipe", "jpegls_pipe", "jpeg_pipe", "j2k_pipe", "exr_pipe", "dpx_pipe", "dds_pipe", "bmp_pipe", "pattern_type", "glob_sequence", "glob", "start_number_range", "ts_from_file", "ts_type", "UVAx", "updatefirst", "update", "strftime", "atomic_writing", "MJPG", "ingenient", "ipmovie", "c608", "sac3", "alac", "twos", "lpcm", "ssmv", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "Shr7", "IMA_ADPCM_Sound", "DKIF", "VP90", "CLOCKPAUSE", "DIRECTIVE", "FONT", "HRES", "INCLUDE", "PALETTE", "QUANTIZE", "RAMP", "SHIFT", "TIMERES", "lmlm4", "encoder_version", "LEITCH", "binary", "A_AAC", "A_AC3", "A_ALAC", "A_DTS", "A_EAC3", "A_FLAC", "A_MLP", "A_OPUS", "A_TRUEHD", "A_TTA1", "A_VORBIS", "A_WAVPACK4", "S_ASS", "S_SSA", "S_VOBSUB", "S_DVBSUB", "V_DIRAC", "V_MJPEG", "V_MPEG1", "V_MPEG2", "V_PRORES", "V_SNOW", "V_THEORA", "V_UNCOMPRESSED", "V_VP8", "V_VP9", "background", "anaglyph_cyan_red", "anaglyph_green_magenta", "LEAD_PERFORMER", "PART_NUMBER", "enc_key_id", "A_QUICKTIME", "V_QUICKTIME", "stereo_mode", "mimetype", "webm_dash_manifest_duration", "webm_dash_manifest_initialization_range", "webm_dash_manifest_file_name", "webm_dash_manifest_track_number", "webm_dash_manifest_cues_start", "webm_dash_manifest_cues_end", "webm_dash_manifest_bandwidth", "webm_dash_manifest_cluster_keyframe", "webm_dash_manifest_cue_timestamps", "MAIN", "webm_dash_manifest", "encoding_tool", "Lavf", "DURATION", "reserve_index_space", "cluster_size_limit", "cluster_time_limit", "dash_track_number", "allow_raw_vfw", "mgsts", "microdvddec", "mkvtimestamp_v2", "cfa_pattern", "cameraName", "cameraModel", "cameraSerial", "focalLength", "focalDist", "aperture", "stabilizerMode", "autofocusMode", "lensID", "lensName", "lensSerial", "wb_mode", "kelvin", "wbgain_r", "wbgain_g", "wbgain_b", "wbs_gm", "wbs_ba", "isoMode", "isoValue", "isoAnalog", "digitalGain", "shutterValue", "picStyleId", "sharpness", "colortone", "picStyleName", "guid", "CNTI", "OPDA", "handler_name", "iTunSMPB", "cdec", "major_brand", "minor_version", "compatible_brands", "nclx", "nclc", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "episode_uid", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "warning", "tmcd", "reel_name", "stsd", "hvc1", "hev1", "mp4s", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "ignore_chapters", "use_mfra_for", "export_all", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "text", "mp4a", "tx3g", "avc1k", "VP6F", "yuv2", "yuvs", "b48r0", "stss", "stps", "mhlr", "VideoHandler", "soun", "SoundHandler", "subp", "SubtitleHandler", "HintHandler", "TimeCodeHandler", "DataHandler", "clcp", "ClosedCaptionHandler", "sbtl", "dhlr", "handler", "earth", "trkn", "CodecPrivateData", "yrrc", "albm", "XDCAM", "DpxE", "lpcm", "perf", "titl", "gnre", "dscp", "cprt", "aART", "ldes", "tvsh", "tven", "tvnn", "tves", "tvsn", "stik", "hdvd", "pgap", "cpil", "tmpo", "wide", "free", "ipod", "systemBitrate", "trackID", "FourCC", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "SamplingRate", "BitsPerSample", "PacketSize", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "default_base_moof", "frag_discont", "global_sidx", "write_colr", "write_gama", "use_metadata_tags", "rtpflags", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "frag_size", "ism_lookahead", "video_track_timescale", "use_editlist", "fragment_index", "mov_gamma", "frag_interleave", "encryption_scheme", "encryption_kid", "rtpo", "usetoc", "write_id3v1", "write_xing", "IMKH", "Sofdec", "vobsub", "sub_name", "svcd", "muxrate", "drac", "HEVC", "HDMV", "HDPR", "mpegtsraw", "resync_size", "compute_pcr", "ts_packetsize", "fix_teletext_pts", "scan_all_pmts", "skip_changes", "skip_clear", "Service01", "FFmpeg", "m2ts", "mpegts_transport_stream_id", "mpegts_original_network_id", "mpegts_service_id", "mpegts_service_type", "digital_tv", "advanced_codec_digital_radio", "mpeg2_digital_hdtv", "advanced_codec_digital_sdtv", "advanced_codec_digital_hdtv", "hevc_digital_hdtv", "mpegts_pmt_start_pid", "mpegts_start_pid", "mpegts_m2ts_mode", "pes_payload_size", "pat_pmt_at_frames", "system_b", "mpegts_copyts", "tables_version", "omit_video_pes_length", "pcr_period", "mpegvideo", "mpjpeg", "mpjpeg_muxer", "boundary_tag", "strict_mime_boundary", "mpsub", "msnwctcp", "MUSX", "musx", "__DIR_COUNT", "COMPRESSION", "MVC2", "PIXEL_ASPECT", "ORIENTATION", "Q_SPATIAL", "Q_TEMPORAL", "INTERLACING", "PACKING", "__NUM_I_TRACKS", "__NUM_A_TRACKS", "COMMENT", "TITLE", "LOOP_MODE", "NUM_LOOPS", "OPTIMIZED", "AUDIO_FORMAT", "DEFAULT_VOL", "NUM_CHANNELS", "SAMPLE_WIDTH", "AVup", "OP1a", "OPAtom", "project_name", "company_name", "product_name", "product_version", "product_uid", "modification_date", "application_platform", "generation_uid", "material_package_name", "file_package_umid", "file_package_name", "reel_umid", "material_track_origin", "source_track_origin", "data_type", "vbi_vanc_smpte_436M", "material_package_umid", "comment_", "mxf_opatom", "mxf_d10", "mxf_audio_edit_rate", "signal_standard", "bt1358", "smpte347m", "smpte274m", "smpte296m", "smpte349m", "smpte428", "d10_channelcount", "store_user_comments", "end_head", "sample_byte_format", "sample_coding", "sample_count", "sample_n_bytes", "sample_sig_bits", "nistsphere", "nsv_resync", "nsv_parse_NSVs_header", "RGB3", "nsv_read_chunk", "nsv_read_packet", "nsv_read_header", "nsv_parse_NSVf_header", "NSVs", "default", "original", "comment", "lyrics", "karaoke", "wvpk", "UTF8", "UTF8", "DVBT", "SourceFilename", "disposition", "replaces", "depends", "uses", "usesfont", "r_frame_rate", "ChannelLayout", "SkipStart", "SkipEnd", "SampleRate", "nutenc", "syncpoints", "timestamped", "LAME", "NuppelVideo", "MythTVVideo", "OggS", "OpusTags", "serial_offset", "oggpagesize", "page_duration", "Daala", "BBCD", "OpusHead", "Opus", "fishead", "fisbone", "METADATA_BLOCK_PICTURE", "NAME", "OVP80", "OMG_LSI", "OMG_BKLSI", "reading", "AVFormatContext", "avioflags", "direct", "formatprobesize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "f_err_detect", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "format_whitelist", "max_streams", "pmpm", "psxstr", "singlejpeg", "RedSpark", "redspark", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TR20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "YLC0", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISMP", "ITCH", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "RVTRE", "RV30F", "dnet", "StreamCount", "OpaqueData", "Int0", "PCMB", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "t140", "bundled", "H261", "H265", "JFIF", "cpresent", "SizeLength", "IndexLength", "IndexDeltaLength", "StreamType", "frma", "QDM2", "QDCA", "SEQH", "BBCD", "ssrc", "cname", "rtp_mpegts", "localport", "localrtpport", "localrtcpport", "write_to_source", "sources", "rtcp_port", "local_rtpport", "local_rtcpport", "client_port", "server_port", "interleaved", "receive", "rtptime", "application", "incl", "excl", "DESCRIBE", "PLAY", "GET_PARAMETER", "OPTIONS", "SETUP", "rtsps", "rtp_flags", "rtsp_flags", "filter_src", "reorder_queue_size", "sdp_flags", "custom_io", "rtcp_to_source", "allowed_media_types", "Subtitle", "initial_pause", "rtsp_transport", "udp_multicast", "prefer_tcp", "min_port", "max_port", "stimeout", "TEARDOWN", "SET_PARAMETER", "ANNOUNCE", "RECORD", "rtsp", "announce_port", "same_port", "announce_addr", "SAUCE00", "COMNT", "bell", "sbg_demuxer", "max_file_size", "srtp", "srtp_out_suite", "srtp_out_params", "sdr2", "film_cpk", "reference_stream", "segment_format", "segment_format_options", "segment_list", "segment_header_filename", "segment_list_flags", "segment_list_size", "segment_list_type", "segment_atclocktime", "segment_clocktime_offset", "segment_clocktime_wrap_duration", "segment_time", "segment_time_delta", "segment_times", "segment_frames", "segment_wrap", "segment_list_entry_prefix", "segment_start_number", "segment_wrap_number", "increment_tc", "break_non_keyframes", "individual_header_trailer", "write_header_trailer", "reset_timestamps", "initial_offset", "write_empty_segments", "siff", "APCM", "NONE", "JFIF", "smoothstreaming", "lookahead_count", "smush", "spdif", "spdif_flags", "dtshd_rate", "dtshd_fallback_time", "AES_CM_128_HMAC_SHA1_80", "SRTP_AES128_CM_HMAC_SHA1_80", "AES_CM_128_HMAC_SHA1_32", "SRTP_AES128_CM_HMAC_SHA1_32", "Svag", "svag", "avm2", "tBaK", "listen_timeout", "send_buffer_size", "recv_buffer_size", "content", "startTime", "startOfParagraph", "tedcaptions", "tedcaptions_demuxer", "onfail", "abort", "bsfs", "tiertexseq", "chars_per_frame", "overrun_nonfatal", "udplite_coverage", "fifo_size", "burst_bits", "localaddr", "broadcast", "udplite", "local_port", "reuse_socket", "uncodedframecrc", "VAGp", "vc1test", "TimeUnitNumerator", "TimeUnitDenominator", "SamplingFrequency", "NominalBitrate", "Version", "vivo", "ALBUMARTIST", "TRACKNUMBER", "DISCNUMBER", "DESCRIPTION", "ARNG", "arranger", "AUTH", "BAND", "CDCT", "conductor", "COMT", "GENR", "LABL", "MUSC", "NOTE", "note", "PROD", "PRSN", "personnel", "REMX", "remixer", "SING", "singer", "WORD", "WAVE", "RIFX", "RF64", "ds64", "originator", "originator_reference", "origination_date", "origination_time", "time_reference", "coding_history", "ignore_length", "levl", "fact", "write_bext", "write_peak", "rf64", "always", "never", "peak_block_size", "peak_format", "peak_ppv", "wc3movie", "webm_chunk", "chunk_start_index", "audio_chunk_duration", "false", "true", "adaptation_sets", "debug_mode", "chunk_duration_ms", "utc_timing_url", "time_shift_buffer_depth", "minimum_update_period", "RIFF", "WEBP", "VP8X", "ANIM", "ANMF", "webvtt_kind", "descriptions", "wsaud", "wsvqa", "playback_time", "song_writer", "user", "xobX", "XVAG", "fmat", "xvag", "XWMA", "xwma", "YUV4MPEG2", "FRAME", "yuv4mpegpipe", "hexagonal", "octagonal", "hexadecagonal", "LFE2", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INPUT_CHANGED", "INVALIDDATA", "OPTION_NOT_FOUND", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "INPUT_AND_OUTPUT_CHANGED", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "sinh", "cosh", "tanh", "atan", "acos", "isnan", "isinf", "while", "taylor", "floor", "ceil", "hypot", "ifnot", "bitand", "bitor", "between", "QP2LAMBDA", "Eval", "TEMPFILE", "AVPanScan", "AVMatrixEncoding", "AVReplayGain", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA384", "SHA512", "CRC32", "adler32", "AVHWFramesContext", "IMGUTILS", "quiet", "panic", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "INT64_MAX", "INT64_MIN", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "pixel", "bikeshed", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "CornflowerBlue", "Cornsilk", "Crimson", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Plum", "PowderBlue", "RosyBrown", "RoyalBlue", "SaddleBrown", "SandyBrown", "SeaShell", "Sienna", "Silver", "Snow", "Teal", "Thistle", "Tomato", "Wheat", "WhiteSmoke", "YellowGreen", "qntsc", "qpal", "sntsc", "spal", "sqcif", "qqvga", "svga", "qxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd1080", "hqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "bgra", "rgba", "rgb32", "bgr32", "vaapi", "bayer_", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "bt1361e", "yuyv422", "rgb24", "bgr24", "yuv410p", "yuv411p", "monow", "monob", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "gray16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "cuda", "rgb0", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "gbrap12be", "gbrap12le", "gbrap10be", "gbrap10le", "s16p", "s32p", "fltp", "dblp", "IPBSipb", "attachment", "fffffff", "x00000x", "p000x", "p00000x", "p000x", "p000x", "p000x", "swscaler", "SWScaler", "fast_bilinear", "bicubic", "bicublin", "Gaussian", "print_info", "accurate_rnd", "full_chroma_int", "full_chroma_inp", "error_diffusion", "sws_dither", "a_dither", "x_dither", "alphablend", "uniform_color"], "debugstrings": ["Version %d != 4.\n", "subpacket[%i].cookversion=%x\n", "Cook version %d", "LBR stream version %#x", "XLL stream version %d", "GPSVersionID", "This version does not support %d kHz - %d kbit/s/ch mode.\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "0x500 version should be mono\n", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "Extradata version %d", "QDMC version 1", "Unknown version %X", "Audio sample format conversion failed\n", "Unsupported Sonic version, please report\n", "FFmpeg version 3.1.11", "libavcodec license: GPL version 2 or later", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "FFmpeg version 3.1.11", "libavfilter license: GPL version 2 or later", "Color conversion not implemented for %s\n", "Impossible to create scale context for the conversion fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n", "Timebase conversion is not exact\n", "Unsupported selective color file version %d, the settings might not be loaded properly\n", "FFmpeg version 3.1.11", "libswresample license: GPL version 2 or later", "id3v2_version", "Select ID3v2 version to write. Currently 3 and 4 are supported.", "Unsupported file version - %d.%02d\n", "Unsupported tag version. (>=%d)\n", "Version %d.%d", "uknown version %i", "camera_version", "firmware_version", "software_version", "ffconcat version 1.0", "Line %d: invalid version\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "unknown format version", "unknown version or invalid map preamble\n", "#version: %d\n", "format_version", "file format version", "configurationVersion:                %u\n", "#EXT-X-VERSION:%d\n", "Malformed HTTP version string.\n", "HTTP version string: %s\n", "  opcode type %02X, version %d, 0x%04X bytes: ", "encoder_version", "Format version %u", "EBML header using unsupported features\n(EBML version %lu, doctype %s, doc version %lu)\n", "raw api version", "minor_version", "Version %d", "premiere_version", "quicktime_version", "sidx version %u", "version =%d, isom =%d\n", "Invalid ID3v2 version requested: %d. Only 3, 4 or 0 (disabled) are allowed.\n", "Can demux Musepack SV7, got version %02X\n", "Unknown stream version %d\n", "sid=0x%x sec_num=%d/%d version=%d tid=%d\n", "tables_version", "set PAT, PMT and SDT version", "Unsupported version: %d", "Version %i", "unhandled version (%d,%d)\n", "product_version", "ogg page, unsupported version\n", "Unknown skeleton version %d.%d\n", "Unknown OggVP8 version %d.%d\n", "Unknown version in encryption header\n", "Unsupported version\n", "Unsupported Name value property version\n", "Unsupported RTP version packet received\n", "Error parsing protocol or version\n", "RTSP Version not supported", "Unsupported SAP version packet received\n", "#EXT-X-VERSION:3\n", "ffconcat version 1.0\n", "Incorrect header version\n", "Unknown version %u", "<SmoothStreamingMedia MajorVersion=\"2\" MinorVersion=\"0\" Duration=\"%lu\"", "version: %i layer: %i extension: %i\n", "encoder version: %0X\n", "libavformat license: GPL version 2 or later", "Version", "\r\nVersion:Vivo/", "Unknown SMV version found\n", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n", "version: %i.%i\n", "Unsupported version %03X\n", "Uncommon version %u", "libavutil license: GPL version 2 or later", "unsupported conversion to planar RGB %s -> %s\n", "unsupported bayer conversion\n", "libswscale license: GPL version 2 or later", "No accelerated colorspace conversion found from %s to %s.\n", "GCC: (GNU) 4.9.x 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["liblog.so", "libdl.so", "libz.so", "libc.so", "libm.so"], "elfname": "libffmpeg.so"}