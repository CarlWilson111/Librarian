{"globalvars": ["avpriv_mjpeg_val_ac_chrominance", "avpriv_mjpeg_val_ac_luminance", "avpriv_mpa_freq_tab", "avpriv_mjpeg_bits_dc_chrominance", "avpriv_pix_fmt_bps_mov", "av_codec_ffversion", "avpriv_dca_sample_rates", "avpriv_ac3_channel_layout_tab", "avpriv_mjpeg_bits_ac_luminance", "avpriv_pix_fmt_bps_avi", "avpriv_mjpeg_bits_ac_chrominance", "avpriv_mjpeg_val_dc", "avpriv_mpeg4audio_sample_rates", "avpriv_mpa_bitrate_tab", "avpriv_mjpeg_bits_dc_luminance"], "importedglobals": ["avpriv_cga_font", "avpriv_vga16_font"], "importedfunctions": ["av_strncasecmp", "memchr", "avpriv_report_missing_feature", "abort", "pthread_cond_init", "av_opt_get_int", "av_realloc_array", "ldexp", "av_get_pix_fmt_name", "av_fifo_drain", "av_dict_get", "av_buffer_pool_uninit", "av_opt_set_defaults", "av_bprint_chars", "sin", "av_isspace", "__assert_fail", "pthread_mutex_unlock", "ceilf", "av_buffer_ref", "av_frame_set_channels", "av_frame_free", "fclose", "pthread_mutex_destroy", "av_buffer_alloc", "av_lfg_init", "av_audio_fifo_alloc", "av_crc_init", "av_frame_set_pkt_duration", "av_mul_q", "av_vbprintf", "av_frame_copy_props", "av_find_best_pix_fmt_of_2", "av_fifo_realloc2", "fread", "floor", "swr_close", "av_get_colorspace_name", "av_display_matrix_flip", "raise", "av_ctz", "av_get_media_type_string", "av_buffer_create", "av_rescale_q", "av_get_channel_layout_string", "atan", "av_frame_make_writable", "av_image_fill_pointers", "strtoul", "av_display_rotation_set", "log2", "lrint", "lrintf", "av_downmix_info_update_side_data", "av_div_q", "fopen64", "tan", "strcspn", "av_sample_fmt_is_planar", "__isinff", "av_opt_set_dict", "floorf", "av_frame_set_colorspace", "av_timecode_init_from_string", "pow", "asin", "av_opt_set", "av_buffer_pool_init", "av_calloc", "av_image_copy", "av_malloc", "strftime", "av_reduce", "avpriv_alloc_fixed_dsp", "sincosf", "sincos", "av_frame_get_side_data", "swr_init", "avpriv_float_dsp_alloc", "av_audio_fifo_write", "av_mallocz", "av_expr_parse", "pthread_cond_signal", "strncmp", "avpriv_scalarproduct_float_c", "av_pix_fmt_desc_get", "av_strdup", "avpriv_solve_lls", "av_fifo_size", "av_image_get_linesize", "av_realloc", "log2f", "frexp", "swr_free", "pthread_join", "av_fifo_generic_write", "exp", "av_md5_alloc", "av_memdup", "av_frame_alloc", "av_expr_free", "cos", "av_get_sample_fmt_name", "av_stereo3d_create_side_data", "av_timecode_make_mpeg_tc_string", "av_reallocp", "pthread_cond_broadcast", "strcmp", "av_image_fill_max_pixsteps", "av_color_primaries_name", "av_buffer_pool_get", "av_bprint_append_data", "av_frame_new_side_data", "av_frame_is_writable", "av_get_default_channel_layout", "log10f", "av_strerror", "av_opt_copy", "av_frame_get_colorspace", "av_default_item_name", "av_get_planar_sample_fmt", "av_crc", "av_audio_fifo_read", "av_dict_free", "av_fast_realloc", "av_free", "iconv", "av_buffer_realloc", "av_fifo_alloc_array", "av_bprint_finalize", "pthread_mutex_lock", "memcpy", "av_dict_copy", "swr_is_initialized", "av_cpu_count", "av_get_channel_layout_nb_channels", "expf", "av_frame_set_qp_table", "strlen", "llrintf", "av_log_get_level", "strtol", "memmove", "strspn", "qsort", "av_stristr", "pthread_cond_wait", "av_samples_copy", "av_fifo_freep", "av_audio_fifo_drain", "av_isxdigit", "av_dict_set", "av_samples_get_buffer_size", "pthread_mutex_init", "av_vlog", "av_image_fill_linesizes", "av_fast_malloc", "av_frame_set_color_range", "av_image_copy_plane", "llrint", "av_image_fill_arrays", "av_samples_set_silence", "av_color_space_name", "av_crc_get_table", "av_bprintf", "av_color_range_name", "atanf", "pthread_cond_destroy", "av_frame_move_ref", "av_bprint_clear", "localtime_r", "av_strlcat", "cbrtf", "av_audio_fifo_size", "av_memcpy_backptr", "snprintf", "avpriv_request_sample", "av_opt_set_defaults2", "av_frame_get_channels", "av_get_bits_per_pixel", "atan2f", "log10", "av_samples_fill_arrays", "pthread_create", "iconv_open", "__errno_location", "av_buffer_unref", "av_get_cpu_flags", "av_buffer_allocz", "av_frame_get_color_range", "av_md5_init", "av_frame_ref", "avpriv_frame_get_metadatap", "swr_alloc", "av_frame_set_pkt_size", "av_d2q", "av_frame_clone", "av_reallocp_array", "av_buffer_get_ref_count", "__isoc99_sscanf", "av_buffer_default_free", "swr_convert", "av_bprint_init", "av_frame_unref", "av_get_bytes_per_sample", "__isnan", "av_get_picture_type_char", "avpriv_set_systematic_pal2", "av_freep", "av_frame_set_decode_error_flags", "av_md5_final", "rint", "av_image_check_size", "lround", "ldexpf", "av_get_channel_layout_channel_index", "av_nearer_q", "strchr", "av_image_check_sar", "log", "sinf", "truncf", "exp2f", "av_gcd", "av_pix_fmt_get_chroma_sub_sample", "av_realloc_f", "iconv_close", "strstr", "av_md5_update", "__isnanf", "av_match_list", "av_image_copy_to_buffer", "av_frame_set_pkt_pos", "av_fifo_space", "av_fifo_generic_read", "exp2", "av_chroma_location_name", "av_strlcpy", "av_opt_free", "av_strlcatf", "av_audio_fifo_free", "av_pix_fmt_count_planes", "av_image_get_buffer_size", "av_lzo1x_decode", "cosf", "av_dynarray_add", "av_timecode_adjust_ntsc_framenum2", "av_get_pix_fmt_loss", "av_frame_set_best_effort_timestamp", "time", "av_color_transfer_name", "memset", "av_strtok", "av_frame_get_pkt_duration", "powf", "av_stereo3d_alloc", "memcmp", "fseek", "av_frame_copy", "av_expr_eval", "ceil", "av_asprintf", "av_opt_set_int", "avpriv_init_lls", "av_image_alloc", "av_parse_color", "av_buffer_make_writable", "av_log", "av_frame_get_buffer"], "exportedfunctions": ["avpicture_alloc", "av_bitstream_filter_filter", "avcodec_find_best_pix_fmt2", "av_parser_change", "avcodec_descriptor_get_by_name", "avpriv_ac3_parse_header2", "avcodec_alloc_frame", "av_fast_padded_malloc", "av_parser_close", "avcodec_dct_init", "avcodec_find_encoder", "av_get_exact_bits_per_sample", "av_parser_parse2", "avcodec_encode_subtitle", "avpriv_vorbis_parse_frame", "avcodec_encode_audio2", "av_packet_ref", "av_hwaccel_next", "av_mdct_end", "av_picture_copy", "avcodec_default_execute2", "av_fft_init", "av_picture_pad", "av_resample_init", "av_codec_set_seek_preroll", "avpicture_fill", "av_codec_get_codec_properties", "av_fft_calc", "av_get_profile_name", "avpriv_toupper4", "av_log_ask_for_sample", "av_packet_copy_props", "av_lockmgr_register", "av_resample", "av_packet_unpack_dictionary", "avcodec_find_decoder_by_name", "avcodec_default_release_buffer", "avcodec_get_edge_width", "avcodec_encode_audio", "avpriv_do_elbg", "avcodec_free_context", "avcodec_find_decoder", "avcodec_default_get_buffer2", "av_xiphlacing", "av_register_hwaccel", "avpriv_lock_avformat", "avcodec_get_chroma_sub_sample", "av_fft_permute", "avpriv_tak_parse_streaminfo", "av_register_codec_parser", "avpriv_dnxhd_get_frame_size", "avpriv_init_elbg", "av_fast_padded_mallocz", "avpriv_mpeg4audio_get_config", "av_codec_is_decoder", "av_get_bits_per_sample", "avcodec_is_open", "avcodec_align_dimensions", "av_register_bitstream_filter", "av_packet_rescale_ts", "av_codec_get_max_lowres", "avsubtitle_free", "avcodec_decode_audio4", "avpriv_color_frame", "av_vorbis_parse_free", "avpriv_find_pix_fmt", "avpriv_exif_decode_ifd", "avcodec_decode_audio3", "avcodec_get_frame_defaults", "avcodec_default_reget_buffer", "av_packet_free_side_data", "avcodec_find_best_pix_fmt_of_2", "avcodec_descriptor_get", "avcodec_license", "avpriv_flac_is_extradata_valid", "av_bitstream_filter_init", "av_packet_merge_side_data", "avpicture_layout", "av_resample_compensate", "av_mdct_calc", "avcodec_set_dimensions", "av_init_packet", "avcodec_dct_get_class", "av_packet_new_side_data", "av_rdft_end", "av_picture_crop", "avcodec_decode_video2", "avpriv_get_raw_pix_fmt_tags", "av_get_audio_frame_duration", "avcodec_align_dimensions2", "av_audio_convert_alloc", "avcodec_default_get_format", "av_get_codec_tag_string", "av_dv_codec_profile", "av_codec_get_lowres", "av_codec_set_lowres", "av_dct_init", "avpriv_bprint_to_extradata", "av_bitstream_filter_next", "avcodec_default_get_buffer", "avcodec_get_context_defaults3", "av_new_packet", "avcodec_get_type", "avpriv_vorbis_parse_frame_flags", "avpriv_copy_bits", "avcodec_get_frame_class", "av_audio_convert", "av_codec_get_chroma_intra_matrix", "avcodec_get_subtitle_rect_class", "avcodec_alloc_context3", "av_vorbis_parse_reset", "avcodec_descriptor_next", "av_qsv_alloc_context", "av_shrink_packet", "av_codec_is_encoder", "avcodec_decode_subtitle2", "avpriv_dca_convert_bitstream", "av_imdct_calc", "av_codec_get_pkt_timebase", "avcodec_find_best_pix_fmt_of_list", "avpriv_flac_parse_streaminfo", "av_packet_side_data_name", "avcodec_open2", "av_packet_from_data", "av_dct_calc", "av_fft_end", "av_grow_packet", "av_parser_init", "avpicture_free", "av_get_pcm_codec", "avcodec_register_all", "avpriv_vorbis_parse_reset", "avpriv_mpa_decode_header", "avpriv_h264_has_num_reorder_frames", "avcodec_default_execute", "avpicture_deinterlace", "avcodec_get_pix_fmt_loss", "av_packet_split_side_data", "avcodec_pix_fmt_to_codec_tag", "avcodec_version", "avcodec_chroma_pos_to_enum", "av_log_missing_feature", "avpriv_unlock_avformat", "avcodec_enum_to_chroma_pos", "av_codec_set_chroma_intra_matrix", "avpriv_dirac_parse_sequence_header", "av_vorbis_parse_frame_flags", "av_audio_resample_init", "av_mdct_init", "avcodec_register", "av_free_packet", "av_dup_packet", "av_codec_set_codec_descriptor", "av_rdft_calc", "av_imdct_half", "av_dv_frame_profile", "audio_resample_close", "av_packet_move_ref", "avcodec_encode_video", "avcodec_get_class", "av_dct_end", "avcodec_flush_buffers", "avpriv_dnxhd_get_interlaced", "av_audio_convert_free", "avcodec_free_frame", "av_resample_close", "avpriv_mpegaudio_decode_header", "avcodec_fill_audio_frame", "av_codec_get_seek_preroll", "av_bitstream_filter_close", "avcodec_copy_context", "av_dv_codec_profile2", "av_parser_next", "audio_resample", "av_rdft_init", "avpicture_get_size", "avpriv_dv_frame_profile2", "avcodec_dct_alloc", "avcodec_string", "av_vorbis_parse_init", "avpriv_put_string", "avcodec_close", "avcodec_find_encoder_by_name", "av_packet_get_side_data", "av_destruct_packet", "avpriv_mpa_decode_header2", "avcodec_get_name", "av_packet_unref", "av_codec_next", "avpriv_vorbis_parse_extradata", "avpriv_align_put_bits", "av_vorbis_parse_frame", "avpriv_find_start_code", "avcodec_encode_video2", "avpriv_copy_pce_data", "avcodec_configuration", "avpriv_ac3_parse_header", "av_packet_shrink_side_data", "av_codec_get_codec_descriptor", "av_codec_set_pkt_timebase", "avpriv_aac_parse_header", "av_copy_packet", "av_packet_pack_dictionary", "av_copy_packet_side_data", "avpriv_split_xiph_headers"], "allstrings": ["Dimensions %dx%d not supported.\n", "Packet too small: %d instead of %d\n", "transparency", "012v", "Uncompressed 4:2:2 10-bit", "Assertion %s failed at %s:%d\n", "libavcodec/4xm.c", "code >= 0 && code <= 6", "wordstream overread\n", "bytestream overread\n", "start <= src && src <= end", "mv out of pic\n", "invalid data in read_huffman_tables\n", "ptr overflow in read_huffman_tables\n", "vlc length overflow\n", "extradata wrong or missing\n", "unsupported width/height\n", "avctx->width % 16 == 0 && avctx->height % 16 == 0", "size mismatch %d %u\n", "cfrm in version %d\n", "sizes invalid\n", "lost c frame %d\n", "realloc failure\n", "cframe id mismatch %d %d\n", "packet size too small\n", "buf_size >= 0", "libavcodec/bytestream.h", "unk bit 1\n", "unk bit 2\n", "size mismatch %d %d %d\n", "Error reading Huffman tables.\n", "prestream <= buf + length", "%d bits left before decode_i_block()\n", "error dc run != 0\n", "0 coeff\n", "run %d oveflow\n", "end mismatch\n", "lengths %d %d %d %d\n", "ignoring snd_ chunk length:%d\n", "ignoring unknown chunk length:%d\n", "decode i2 frame failed\n", "decode i frame failed\n", "decode p frame failed\n", "cfrm", "ifr2", "ifrm", "pfrm", "pfr2", "snd_", "4X Movie", "8bps", "QuickTime 8BPS video", "packet size is too small\n", "unexpected empty packet\n", "8SVX does not support more than 2 channels\n", "Invalid codec id %d.\n", "8svx_exp", "8SVX exponential", "8svx_fib", "8SVX fibonacci", "Failed to allocate buffer memory.\n", "Failed to allocate memory for extradata.\n", "a64m", "pkt->size >= req_size", "libavcodec/a64multienc.c", "a64multi5", "Multicolor charset for Commodore 64, extended with 5th color (colram)", "a64multi", "Multicolor charset for Commodore 64", "s->buf_ptr < s->buf_end", "libavcodec/put_bits.h", "Error parsing ADTS frame header!\n", "Multiple RDBs per frame with CRC", "PCE-based channel configuration without PCE as first syntax element", "aac_adtstoasc", "Internal error, put_bits buffer too small\n", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "TNS filter order %d is greater than maximum %d.\n", "ChannelElement %d.%d missing \n", "Reserved bit set.\n", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Invalid Predictor Reset Group.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "invalid band type\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "Pulse tool not allowed in eight short sequence.\n", "error in spectral data, ESC overflow\n", "Pulse data corrupt or invalid.\n", "ms_present = 3 is reserved.\n", "Remapped id too large\n", "Too many channels\n", "mono with CPE\n", "stereo with SCE\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "Unknown ER channel configuration %d", "channel element %d.%d is not allocated\n", "no frame data found\n", "SBR+", "Audio specific config size is invalid\n", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "960/120 MDCT window", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "AAC data resilience (flags %x)", "epConfig %d", "Low Delay SBR", "Audio object type %s%d", "Non-byte-aligned audio-specific config", "audio config changed\n", "initializing latmctx\n", "More than one AAC RDB per ADTS frame", "Error decoding AAC frame header.\n", "Elem type:%x id:%x\n", "skip_data_stream_element: Input buffer exhausted before END element found\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "extension type: %d len:%d\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "FILL:%s\n", "libfaac %d.%d", "Multiple programs", "Multiple layers", "no decoder config found\n", "incomplete frame\n", "frame length mismatch %d << %d\n", "ADTS header detected, probably as result of configuration misparsing\n", "aac_latm", "AAC LATM (Advanced Audio Coding LATM syntax)", "AAC (Advanced Audio Coding)", "Main", "HE-AAC", "HE-AACv2", "AAC decoder", "dual_mono_mode", "Select the channel to decode for dual mono", "auto", "autoselection", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "Unsupported sample rate %d\n", "Unsupported number of channels: %d\n", "Too many bits per frame requested, clamping to max\n", "Prediction requested, changing profile to AAC-Main\n", "Unsupported profile %d\n", "Cannot allocate memory.\n", "Input contains NaN/+-Inf\n", "Lavc56.60.100", "diff >= 0 && diff <= 120", "libavcodec/aacenc.c", "AAC encoder", "stereo_mode", "Stereo coding method", "Selected by the Encoder", "ms_off", "Disable Mid/Side coding", "ms_force", "Force Mid/Side for the whole frame if possible", "aac_coder", "Coding algorithm", "faac", "FAAC-inspired method", "anmr", "ANMR method", "twoloop", "Two loop searching method", "fast", "Constant quantizer", "aac_pns", "Perceptual Noise Substitution", "disable", "Disable perceptual noise substitution", "enable", "Enable perceptual noise substitution", "aac_is", "Intensity stereo coding", "intensity_stereo", "Disable intensity stereo coding", "Enable intensity stereo coding", "aac_tns", "Temporal noise shaping", "Disable temporal noise shaping", "Enable temporal noise shaping", "aac_pred", "Disable AAC-Main prediction", "Enable AAC-Main prediction", " iid_mode %d is reserved.\n", "icc_mode %d is reserved.\n", "illegal iid\n", "illegal icc\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Expected to read %d PS bits actually read %d.\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "bs_pointer >= 0", "libavcodec/aacsbr_template.c", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "Unsupported sample rate for SBR: %d\n", "Invalid bs_stop_freq: %d\n", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid n_master: %d\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "patch construction failed\n", "Too many patches: %d\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Reserved SBR extensions", "SBR Extension over read.\n", "Expected to read %d SBR bytes actually read %d.\n", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "envelope scalefactor overflow in dequant\n", "sbr->data[ch].bs_num_env > 0", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "sbr_qmf_analysis: value %09d too small, setting to %09d\n", "!!&((())%%%\"\"", "))/113//+++((", "Unknown compression type %d\n", "Unknown FourCC: %X\n", "Unsupported bit depth: %d\n", "aasc", "Autodesk RLE", "GAQ gain group code out-of-range\n", "invalid spectral extension range (%d >= %d)\n", "invalid spectral extension copy start bin (%d >= %d)\n", "coupling not allowed in mono or dual-mono\n", "Enhanced coupling", "invalid coupling range (%d >= %d)\n", "new coupling strategy must be present in block 0\n", "new coupling coordinates must be present in block 0\n", "Warning: new rematrixing strategy not present in block 0\n", "bandwidth code = %d > 60\n", "exponent out-of-range\n", "new bit allocation info must be present in block 0\n", "new snr offsets must be present in block 0\n", "new coupling leak info must be present in block 0\n", "delta bit allocation strategy reserved\n", "error in bit allocation\n", "Dependent substream decoding", "Reserved frame type\n", "Additional substreams", "Reduced sampling rate", "Block start info", "frame sync error\n", "invalid bitstream id\n", "invalid sample rate\n", "invalid frame size\n", "unsupported frame type : skipping frame\n", "invalid frame type\n", "frame CRC mismatch\n", "unable to determine channel mode\n", "error decoding the audio block\n", "ac3_fixed", "ATSC A/52A (AC-3)", "Fixed-Point AC-3 Decoder", "drc_scale", "percentage of dynamic range compression to apply", "heavy_compr", "heavy dynamic range compression enabled", "ATSC A/52B (AC-3, E-AC-3)", "E-AC3 decoder", "AC3 decoder", "target_level", "target level in -dBFS (0 not applied)", "dmix_mode", "Preferred Stereo Downmix Mode", "ltrt_cmixlev", "Lt/Rt Center Mix Level", "ltrt_surmixlev", "Lt/Rt Surround Mix Level", "loro_cmixlev", "Lo/Ro Center Mix Level", "loro_surmixlev", "Lo/Ro Surround Mix Level", " (<<<<<<<<<<<<<<", " 0<<<<<<<", "center_mix_level", "requested %s is not valid. using default value: %0.3f\n", "surround_mix_level", "ltrt_center_mix_level", "loro_center_mix_level", "ltrt_surround_mix_level", "loro_surround_mix_level", "invalid audio service type for the specified number of channels\n", "mixing_level must be set if room_type is set\n", "invalid mixing level. must be between 80dB and 111dB\n", "alternate bitstream syntax is not compatible with reduced samplerates. writing of extended bitstream information will be disabled.\n", "No channel layout specified. The encoder will guess the layout, but it might be incorrect.\n", "invalid bit rate. must be %d to %d for this sample rate\n", "invalid cutoff frequency\n", "invalid channel layout\n", "Fixed-Point AC-3 Encoder", "per_frame_metadata", "Allow Changing Metadata Per-Frame", "center_mixlev", "Center Mix Level", "surround_mixlev", "Surround Mix Level", "mixing_level", "Mixing Level", "room_type", "Room Type", "notindicated", "Not Indicated (default)", "large", "Large Room", "small", "Small Room", "copyright", "Copyright Bit", "dialnorm", "Dialogue Level (dB)", "dsur_mode", "Dolby Surround Mode", "Not Dolby Surround Encoded", "original", "Original Bit Stream", "ltrt", "Lt/Rt Downmix Preferred", "loro", "Lo/Ro Downmix Preferred", "dplii", "Dolby Pro Logic II Downmix Preferred", "dsurex_mode", "Dolby Surround EX Mode", "Not Dolby Surround EX Encoded", "dpliiz", "Dolby Pro Logic IIz-encoded", "dheadphone_mode", "Dolby Headphone Mode", "Not Dolby Headphone Encoded", "ad_conv_type", "A/D Converter Type", "standard", "Standard (default)", "hdcd", "HDCD", "stereo_rematrixing", "Stereo Rematrixing", "channel_coupling", "Channel Coupling", "cpl_start_band", "Coupling Start Band", "overflow that would need cliping in ff_acelp_interpolate()\n", "libavcodec/acelp_vectors.c", "invalid number of samples in packet\n", "mismatch in coded sample count\n", "ERROR: step_index[%d] = %i\n", "ERROR: block_predictor[0] = %d\n", "ERROR: block_predictor[1] = %d\n", "idelta overflow\n", "ERROR: step_index = %i/%i\n", "unknown XA-ADPCM filter %d", "per-channel sample count mismatch\n", "ERROR: step_index = %i\n", "Missing coeff table\n", "Nothing consumed\n", "Overread of %d < %d\n", "adpcm_yamaha", "ADPCM Yamaha", "adpcm_xa", "ADPCM CDROM XA", "adpcm_thp", "ADPCM Nintendo THP", "adpcm_thp_le", "ADPCM Nintendo THP (little-endian)", "adpcm_swf", "ADPCM Shockwave Flash", "adpcm_sbpro_4", "ADPCM Sound Blaster Pro 4-bit", "adpcm_sbpro_3", "ADPCM Sound Blaster Pro 2.6-bit", "adpcm_sbpro_2", "ADPCM Sound Blaster Pro 2-bit", "adpcm_ms", "ADPCM Microsoft", "adpcm_ima_ws", "ADPCM IMA Westwood", "adpcm_ima_wav", "ADPCM IMA WAV", "adpcm_ima_smjpeg", "ADPCM IMA Loki SDL MJPEG", "adpcm_ima_rad", "ADPCM IMA Radical", "adpcm_ima_qt", "ADPCM IMA QuickTime", "adpcm_ima_oki", "ADPCM IMA Dialogic OKI", "adpcm_ima_iss", "ADPCM IMA Funcom ISS", "adpcm_ima_ea_sead", "ADPCM IMA Electronic Arts SEAD", "adpcm_ima_ea_eacs", "ADPCM IMA Electronic Arts EACS", "adpcm_ima_dk4", "ADPCM IMA Duck DK4", "adpcm_ima_dk3", "ADPCM IMA Duck DK3", "adpcm_ima_apc", "ADPCM IMA CRYO APC", "adpcm_ima_amv", "ADPCM IMA AMV", "adpcm_ea_xas", "ADPCM Electronic Arts XAS", "adpcm_ea_r3", "ADPCM Electronic Arts R3", "adpcm_ea_r2", "ADPCM Electronic Arts R2", "adpcm_ea_r1", "ADPCM Electronic Arts R1", "adpcm_ea_maxis_xa", "ADPCM Electronic Arts Maxis CDROM XA", "adpcm_ea", "ADPCM Electronic Arts", "adpcm_dtk", "ADPCM Nintendo Gamecube DTK", "adpcm_ct", "ADPCM Creative Technology", "adpcm_afc", "ADPCM Nintendo Gamecube AFC", "adpcm_4xm", "ADPCM 4X Movie", "0<sb", "invalid trellis size\n", "Sample rate must be 11025, 22050 or 44100\n", "(c)CRI", "Support for this ADX format", "adpcm_adx", "SEGA CRI ADX ADPCM", "Too small frame\n", "Invalid version %d\n", "Invalid header size %d\n", "Frame size should be %u got %d\n", "Picture dimension changed: old: %d x %d, new: %d x %d\n", "Incorrect slice size %d at %d.%d\n", "Invalid UE golomb code\n", "Invalid header\n", "Error decoding slice at %d.%d\n", "Apple Intermediate Codec", "extradata is too small\n", "max samples per frame invalid: %u\n", "set_info failed\n", "Sample depth %d", "Invalid channel count\n", "Unsupported channel count: %d\n", "Error allocating buffers\n", "syntax element unsupported: %d\n", "invalid element channel count\n", "bps is unsupported: %d\n", "invalid samples per frame: %u\n", "sample count mismatch: %u != %d\n", "Compression with rice limit 0", "invalid zero block size of %d %d %d\n", "unknown prediction type: %i\n", "Error : %d bits left\n", "Failed to decode all channels\n", "no end tag found. incomplete packet.\n", "alac", "ALAC (Apple Lossless Audio Codec)", "extra_bits_bug", "Force non-standard decoding process", "invalid min prediction order: %d\n", "invalid max prediction order: %d\n", "invalid prediction orders: min=%d max=%d\n", "Header too small %d.\n", "Invalid pixel format.\n", "Ended frame decoding with %d bytes left.\n", "Invalid run length %d.\n", "Picture stopped at %d,%d.\n", "alias_pix", "Alias/Wavefront PIX image", "Error getting output packet of size %d.\n", "begin %td smaller than time diff index %d.\n", "end %td smaller than time diff index %d.\n", "sample pointer range [%p, %p] not contained in raw_buffer [%p, %p].\n", "Missing required ALS extradata.\n", "Invalid channel reordering.\n", "Reading ALSSpecificConfig failed.\n", "Floating point decoding", "Adaptive RLS-LMS prediction", "Bits per raw sample %d larger than 32.\n", "Allocating buffer memory failed.\n", "Block length is not evenly divisible by the number of subblocks.\n", "k invalid for rice code.\n", "Predictor order too large.\n", "quant_cof %u is out of range.\n", "Invalid channel pair.\n", "Invalid channel data.\n", "Invalid block length %u in channel data!\n", "Invalid master channel.\n", "Damaged channel data.\n", "Overread %d\n", "Reading frame data failed. Skipping RA unit.\n", "CRC error.\n", "MPEG-4 Audio Lossless Coding (ALS)", "multi-channel AMR", "The file is corrupted, pitch_lag = 0 is not allowed\n", "Corrupt bitstream\n", "dtx mode", "Note: libopencore_amrnb supports dtx\n", "amrnb", "AMR-NB (Adaptive Multi-Rate NarrowBand)", "Invalid mode %d\n", "Frame too small (%d bytes). Truncated file?\n", "Encountered a bad or corrupted frame\n", "SID mode", "amrwb", "AMR-WB (Adaptive Multi-Rate WideBand)", "Unknown record type", "Padding bytes", "Unknown opcode", "Deluxe Paint Animation", "Unsupported screen mode", "Unsupported rendition parameter", "Unknown escape code", "ansi", "ASCII/ANSI art", "Only mono and stereo is supported\n", "%d bits per coded sample", "Compression Level: %d - Flags: %d\n", "Incorrect compression level %d\n", "Too many bits: %d\n", "s->samples >= 0", "libavcodec/apedec.c", "Packet is too small\n", "packet size is not a multiple of 4. extra bytes at the end will be skipped.\n", "Incorrect offset passed\n", "Invalid sample count: %u.\n", "pure silence mono\n", "pure silence stereo\n", "Error decoding frame\n", "Error reading frame header\n", "Monkey's Audio", "APE decoder", "max_samples", "maximum number of samples decoded per call", "no maximum. decode all samples for each packet at once", "[Script Info]\r\n; Script generated by FFmpeg/Lavc%s\r\nScriptType: v4.00+\r\nPlayResX: %d\r\nPlayResY: %d\r\n\r\n[V4+ Styles]\r\nFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\r\nStyle: Default,%s,%d,&H%x,&H%x,&H%x,&H%x,%d,%d,%d,0,100,100,0,0,1,1,0,%d,10,10,10,0\r\n\r\n[Events]\r\nFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\r\n", "Arial", "Dialogue: %ld,", "9:59:59.99,", "%d:%02d:%02d.%02d,", "Default,,0,0,0,,", "%.*s", "%d:%02d:%02d.%02d", ", \r\n", "[%15[0-9A-Za-z+ ]]%c", "Script Info", "V4+ Styles", "V4 Styles", "Events", "&H%8x", "\\%1[nN]", "\\%1[bisu]%1[01\\}]%n", "\\c%1[\\}]%n", "\\c&H%X&%1[\\}]%n", "\\%1[1234]c%1[\\}]%n", "\\%1[1234]c&H%X&%1[\\}]%n", "\\alpha%1[\\}]%n", "\\alpha&H%2X&%1[\\}]%n", "\\%1[1234]a%1[\\}]%n", "\\%1[1234]a&H%2X&%1[\\}]%n", "\\fn%1[\\}]%n", "\\fn%127[^\\}]%1[\\}]%n", "\\fs%1[\\}]%n", "\\fs%u%1[\\}]%n", "\\a%1[\\}]%n", "\\a%2u%1[\\}]%n", "\\an%1[\\}]%n", "\\an%1u%1[\\}]%n", "\\r%1[\\}]%n", "\\r%127[^\\}]%1[\\}]%n", "\\move(%d,%d,%d,%d)%1[\\}]%n", "\\move(%d,%d,%d,%d,%d,%d)%1[\\}]%n", "\\pos(%d,%d)%1[\\}]%n", "\\org(%d,%d)%1[\\}]%n", "Default", "ScriptType", "Collisions", "PlayResX", "PlayResY", "Timer", "Format", "Style", "Name", "Fontname", "Fontsize", "PrimaryColour", "SecondaryColour", "OutlineColour", "BackColour", "Bold", "Italic", "Underline", "StrikeOut", "ScaleX", "ScaleY", "Spacing", "Angle", "BorderStyle", "Outline", "Shadow", "Alignment", "MarginL", "MarginR", "MarginV", "Encoding", "TertiaryColour", "AlphaLevel", "Dialogue", "Layer", "Start", "Effect", "Text", "Invalid ASS packet\n", "ASS (Advanced SubStation Alpha) subtitle", "SSA (SubStation Alpha) subtitle", "Only SUBTITLE_ASS type supported.\n", "Dialogue: ", "AVSubtitle rectangle ass \"%s\" does not look like a SSA markup\n", "ASS encoder supports only one ASS rectangle field.\n", "%d,%ld,%s", "Buffer too small for ASS event.\n", "illegal qscale 0\n", "coded coeff pattern damaged\n", "asv2", "ASUS V2", "asv1", "ASUS V1", "encoded frame too large\n", "Cliping level %d, increase qscale\n", "Error initializing MDCT\n", "Not enough data to decode!\n", "atrac1", "ATRAC1 (Adaptive TRansform Acoustic Coding)", "Channel configuration error!\n", "[0-1] %d\n", "[8-9] %d\n", "[12-13] %d\n", "Unknown frame/channel/frame_factor configuration %d/%d/%d\n", "Unknown extradata size %d.\n", "Version %d != 4.\n", "Unknown amount of samples per frame %d.\n", "Unknown amount of delay %x != 0x88E.\n", "Normal stereo detected.\n", "Invalid coding mode\n", "Joint stereo detected.\n", "Unknown channel coding mode %x!\n", "JS mono Sound Unit id != 3.\n", "Sound Unit id != 0x28.\n", "Offset of %d", "Frame decoding error!\n", "atrac3", "ATRAC3 (Adaptive TRansform Acoustic Coding 3)", "index < 256", "libavcodec/atrac3plus.c", "Invalid number of transmitted units!\n", "WL mode 1: invalid position!\n", "WL index out of range: pos=%d, val=%d!\n", "GHA amplitude mode 0", "Too many tones: %d (max. 48), frame: %d!\n", "SF mode 1: invalid parameters!\n", "SF index out of range: pos=%d, val=%d!\n", "Invalid number of quantization units: %d!\n", "Invalid number of code table indexes: %d!\n", "Invalid gain location: ch=%d, sb=%d, pos=%d, val=%d\n", "block_align is not set\n", "Unsupported channel count: %d!\n", "Invalid start bit!\n", "Channel unit extension", "Frame data doesn't match channel configuration!\n", "atrac3plus", "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)", "%d frames left in the queue on closing\n", "Queue input is backward in time\n", "Trying to remove %d samples, but the queue is empty\n", "!afq->frame_count", "libavcodec/audio_frame_queue.c", "afq->remaining_samples == afq->remaining_delay", "Trying to remove %d more samples than there are in the queue\n", "got a buffer with %d bytes when %d were expected\n", "aura2", "Auravision Aura 2", "AVDCT", "DCT algorithm", "autoselect a good one (default)", "fastint", "fast integer (experimental / for debugging)", "accurate integer", "experimental / for debugging", "altivec", "faan", "floating point AAN DCT (experimental / for debugging)", "idct", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "floating point AAN IDCT (experimental / for debugging)", "simpleauto", "bits_per_sample", "libavcodec/avpacket.c", "(unsigned)pkt->size <= 2147483647 - 32", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "p-pkt->data == pkt->size", "size<=2147483647 && p - pkt->data >= size", "lowres is not possible with rawvideo\n", "MJPEG codec not found\n", "threads", "MJPEG codec failed to open\n", "1:1(", "avrn", "Avid AVI Codec", "AVS (Audio Video Standard) video", "APRGAPRG0001", "Insufficient input data.\n", "avui", "Avid Meridien Uncompressed", "xARESARES0001", "error reading palette\n", "bethsoftvid", "Bethesda VID video", "Input resolution larger than actual frame.\n", "Frame larger than buffer.\n", "Brute Force & Ignorance", "Extradata missing or too short\n", "quant_index %d out of range\n", "DC value went out of bounds: %d\n", "Too many motion values\n", "Too many block type values\n", "Too many color values\n", "Too many pattern values\n", "Run value went out of bounds\n", "Run went out of bounds\n", "Incorrect 16x16 block type %d\n", "Copy out of bounds @%d, %d\n", "Unknown block type %d\n", "Reference block is out of bounds\n", "binkvideo", "Bink video", "Incomplete packet\n", "binkaudio_dct", "Bink Audio (DCT)", "binkaudio_rdft", "Bink Audio (RDFT)", "not enough extradata\n", "font height %i not supported\n", "iCEDraw text", "xbin", "eXtended BINary text", "bintext", "Binary text", "incorrect codes\n", "length <= put_bits_left(pb)", "libavcodec/bitstream.c", "n <= s->buf_end - s->buf_ptr", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code in init_vlc\n", "needed %d had %d\n", "ret >= 0", "buf size too small (%d)\n", "bad magic number\n", "not enough data (%d < %u), trying to decode anyway\n", "invalid header size %u\n", "Declared file size is less than header size (%u < %u)\n", "unsupported BMP file, patch welcome\n", "invalid BMP header\n", "BMP coding %d not supported\n", "Unknown bitfields %0X %0X %0X\n", "unsupported pixel format\n", "Unknown palette for %u-colour BMP\n", "depth %u not supported\n", "not enough data (%d < %d)\n", "data size too small, assuming missing line alignment\n", "Incorrect number of colors - %X for bitdepth %u\n", "palette doesn't fit in packet\n", "BMP decoder is broken\n", "BMP (Windows and OS/2 bitmap)", "expected %d bytes, got %d\n", "bmv_audio", "Discworld II BMV audio", "Invalid dimension %dx%d\n", "Audio data doesn't fit in frame\n", "Command data doesn't fit in frame\n", "Palette data doesn't fit in frame\n", "Screen offset data doesn't fit in frame\n", "len>0", "libavcodec/bmvvideo.c", "Error decoding frame data\n", "bmv_video", "Discworld II BMV video", "Invalid chunk type %d.\n", "Invalid header length.\n", "Format %d", "Invalid palette header length.\n", "Palette not in RGB format", "Invalid palette data.\n", "Using default palette, colors might be off.\n", "Invalid image data.\n", "brender_pix", "BRender PIX image", "invalid offset %d during C93 decoding\n", "block overlap %d %d %d %d", "unexpected type %x at %dx%d\n", "Interplay C93", "run %d is too large\n", "esc_code invalid\n", "position out of block bounds at pic %d MB(%d,%d)\n", "illegal intra chroma pred mode\n", "illegal intra cbp\n", "illegal inter cbp %d\n", "No sequence header decoded yet\n", "illegal picture type\n", "unexpected start code 0x%02x\n", "stc 0x%02x is too large\n", "weighted prediction not yet supported\n", "Invalid mb_type %d in B frame\n", "no frame decoded\n", "Width/height changing in CAVS", "Dimensions invalid\n", "frame_rate_code %d is invalid\n", "cavs", "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)", "Insufficient Memory of %d truncated to %d\n", "Invalid pac index encountered\n", "Data Ignored since exceeding screen width\n", "%s\\N", "cc_dec", "Closed Caption (EIA-608 / CEA-708) Decoder", "Closed caption Decoder", "buffer too small for decoder\n", "buffer too big for decoder\n", "buffer too small for loading palette\n", "buffer too small for drawing tile\n", "buffer too small for scrolling\n", "tile is out of range\n", "cdgraphics", "CD Graphics video", "Pixel format 0x%0x", "Encoding %d and bpp %d", "cdxl", "Commodore CDXL video", "encoded_buf_size 0", "cinepak_decode failed\n", "cinepak", "Cinepak", "minimal number of strips can not exceed maximal (got %i and %i)\n", "i >= size", "libavcodec/cinepakenc.c", "best_nstrips >= 0 && best_size >= 0", "skipping zero height strip %i of %i\n", "Cinepak / CVID", "max_extra_cb_iterations", "Max extra codebook recalculation passes, more is better and slower", "skip_empty_cb", "Avoid wasting bytes, ignore vintage MacOS decoder", "max_strips", "Limit strips/frame, vintage compatible is 1..3, otherwise the more the better", "min_strips", "Enforce min strips/frame, more is worse and faster, must be <= max_strips", "strip_number_adaptivity", "How fast the strip number adapts, more is slightly better, much slower", "Invalid width or height\n", "Resolution larger than buffer size. Invalid header?\n", "cljr", "Cirrus Logic AccuPak", "cljr encoder", "dither_type", "Dither type", "Too many VLCs (%d) to be read.\n", "Frame is too small %d.\n", "Invalid INFO header offset: 0x%08X is too large.\n", "Could not allocate swapped buffer.\n", "Blocked YUV", "Could not read code table %d.\n", "Unknown coding type: %d.\n", "Frame coding type: %d\n", "cllc", "Canopus Lossless Codec", "RFC 3389 comfort noise generator", "Only mono supported\n", "mpeg1video", "MPEG-1 video", "mpeg2video", "MPEG-2 video", "mpegvideo_xvmc", "MPEG-1/2 video XvMC (X-Video Motion Compensation)", "h261", "H.261", "h263", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "rv10", "RealVideo 1.0", "rv20", "RealVideo 2.0", "mjpeg", "Motion JPEG", "mjpegb", "Apple MJPEG-B", "mpeg4", "MPEG-4 part 2", "rawvideo", "raw video", "msmpeg4v1", "MPEG-4 part 2 Microsoft variant version 1", "msmpeg4v2", "MPEG-4 part 2 Microsoft variant version 2", "msmpeg4v3", "MPEG-4 part 2 Microsoft variant version 3", "wmv1", "Windows Media Video 7", "wmv2", "Windows Media Video 8", "h263p", "h263i", "Intel H.263", "flv1", "FLV / Sorenson Spark / Sorenson H.263 (Flash Video)", "svq1", "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1", "svq3", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3", "dvvideo", "DV (Digital Video)", "huffyuv", "HuffYUV", "cyuv", "Creative YUV (CYUV)", "h264", "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "indeo3", "Intel Indeo 3", "On2 VP3", "theora", "Theora", "ffv1", "FFmpeg video codec #1", "vcr1", "ATI VCR1", "mdec", "Sony PlayStation MDEC (Motion DECoder)", "id RoQ video", "interplayvideo", "Interplay MVE video", "xan_wc3", "Wing Commander III / Xan", "xan_wc4", "Wing Commander IV / Xxan", "rpza", "QuickTime video (RPZA)", "ws_vqa", "Westwood Studios VQA (Vector Quantized Animation) video", "msrle", "Microsoft RLE", "msvideo1", "Microsoft Video 1", "idcin", "id Quake II CIN video", "QuickTime Graphics (SMC)", "flic", "Autodesk Animator Flic video", "truemotion1", "Duck TrueMotion 1.0", "vmdvideo", "Sierra VMD video", "mszh", "LCL (LossLess Codec Library) MSZH", "zlib", "LCL (LossLess Codec Library) ZLIB", "qtrle", "QuickTime Animation (RLE) video", "snow", "Snow", "tscc", "TechSmith Screen Capture Codec", "IBM UltiMotion", "qdraw", "Apple QuickDraw", "vixl", "Miro VideoXL", "qpeg", "Q-team QPEG", "ffvhuff", "Huffyuv FFmpeg variant", "rv30", "RealVideo 3.0", "rv40", "RealVideo 4.0", "SMPTE VC-1", "wmv3", "Windows Media Video 9", "loco", "LOCO", "wnv1", "Winnov WNV1", "indeo2", "Intel Indeo 2", "fraps", "Fraps", "truemotion2", "Duck TrueMotion 2.0", "cscd", "CamStudio", "mmvideo", "American Laser Games MM Video", "zmbv", "Zip Motion Blocks Video", "smackvideo", "Smacker video", "NuppelVideo/RTJPEG", "kmvc", "Karl Morton's video codec", "flashsv", "Flash Screen Video v1", "jpeg2000", "JPEG 2000", "vmnc", "VMware Screen Codec / VMware Video", "On2 VP5", "On2 VP6", "vp6f", "On2 VP6 (Flash version)", "dsicinvideo", "Delphine Software International CIN video", "tiertexseqvideo", "Tiertex Limited SEQ video", "Feeble Files/ScummVM DXA", "dnxhd", "VC3/DNxHD", "Nintendo Gamecube THP video", "vp6a", "On2 VP6 (Flash version, with alpha channel)", "AMV Video", "Beam Software VB", "indeo4", "Intel Indeo Video Interactive 4", "indeo5", "Intel Indeo Video Interactive 5", "mimic", "Mimic", "RL2 video", "escape124", "Escape 124", "dirac", "Dirac", "Electronic Arts CMV video", "motionpixels", "Motion Pixels video", "Electronic Arts TGV video", "Electronic Arts TGQ video", "Electronic Arts TQI video", "aura", "Auravision AURA", "v210x", "8088flex TMV", "v210", "Electronic Arts Madcow Video", "frwu", "Forward Uncompressed", "flashsv2", "Flash Screen Video v2", "r210", "Uncompressed RGB 10-bit", "iff_ilbm", "IFF ILBM", "iff_byterun1", "IFF ByteRun1", "kgv1", "Kega Game Video", "Psygnosis YOP Video", "On2 VP8", "Google VP9", "pictor", "Pictor/PC Paint", "a64_multi", "a64_multi5", "r10k", "AJA Kona 10-bit RGB Codec", "mvc1", "Silicon Graphics Motion Video Compressor 1", "mvc2", "Silicon Graphics Motion Video Compressor 2", "mxpeg", "Mobotix MxPEG video", "lagarith", "Lagarith lossless", "prores", "Apple ProRes (iCodec Pro)", "Bitmap Brothers JV video", "Chronomaster DFA", "utvideo", "Ut Video", "vble", "VBLE Lossless Codec", "dxtory", "Dxtory", "v410", "Uncompressed 4:4:4 10-bit", "zerocodec", "ZeroCodec Lossless Video", "mss1", "MS Screen 1", "msa1", "MS ATC Screen", "tscc2", "TechSmith Screen Codec 2", "mts2", "MS Expression Encoder Screen", "mss2", "MS Windows Media Video V9 Screen", "y41p", "Uncompressed YUV 4:1:1 12-bit", "escape130", "Escape 130", "avrp", "Avid 1:1 10-bit RGB Packer", "ayuv", "Uncompressed packed MS 4:4:4:4", "targa_y216", "Pinnacle TARGA CineWave YUV16", "v308", "Uncompressed packed 4:4:4", "v408", "Uncompressed packed QT 4:4:4:4", "yuv4", "Uncompressed packed 4:2:0", "cpia", "CPiA video format", "xface", "X-face image", "smvjpeg", "Sigmatel Motion Video", "Go2Meeting", "hnm4video", "HNM 4 video", "hevc", "H.265 / HEVC (High Efficiency Video Coding)", "Mirillis FIC", "paf_video", "Amazing Studio Packed Animation File Video", "On2 VP7", "sanm", "LucasArts SANM/SMUSH video", "sgirle", "SGI RLE 8-bit", "Canopus HQX", "hq_hqa", "Canopus HQ/HQA", "Vidvox Hap decoder", "DirectDraw Surface image decoder", "DPX (Digital Picture Exchange) image", "OpenEXR image", "GIF (Graphics Interchange Format)", "jpegls", "JPEG-LS", "ljpeg", "Lossless JPEG", "PAM (Portable AnyMap) image", "PBM (Portable BitMap) image", "PC Paintbrush PCX image", "PGM (Portable GrayMap) image", "pgmyuv", "PGMYUV (Portable GrayMap YUV) image", "PNG (Portable Network Graphics) image", "PPM (Portable PixelMap) image", "V.Flash PTX image", "SGI image", "sp5x", "Sunplus JPEG (SP5X)", "sunrast", "Sun Rasterfile image", "Truevision Targa image", "tdsc", "TDSC", "tiff", "TIFF image", "Renderware TXD (TeXture Dictionary) image", "vc1image", "Windows Media Video 9 Image v2", "webp", "WebP", "wmv3image", "Windows Media Video 9 Image", "XBM (X BitMap) image", "XWD (X Window Dump) image", "apng", "APNG (Animated Portable Network Graphics) image", "pcm_s16le", "PCM signed 16-bit little-endian", "pcm_s16be", "PCM signed 16-bit big-endian", "pcm_u16le", "PCM unsigned 16-bit little-endian", "pcm_u16be", "PCM unsigned 16-bit big-endian", "pcm_s8", "PCM signed 8-bit", "pcm_u8", "PCM unsigned 8-bit", "pcm_mulaw", "PCM mu-law / G.711 mu-law", "pcm_alaw", "PCM A-law / G.711 A-law", "pcm_s32le", "PCM signed 32-bit little-endian", "pcm_s32be", "PCM signed 32-bit big-endian", "pcm_u32le", "PCM unsigned 32-bit little-endian", "pcm_u32be", "PCM unsigned 32-bit big-endian", "pcm_s24le", "PCM signed 24-bit little-endian", "pcm_s24be", "PCM signed 24-bit big-endian", "pcm_u24le", "PCM unsigned 24-bit little-endian", "pcm_u24be", "PCM unsigned 24-bit big-endian", "pcm_s24daud", "PCM D-Cinema audio signed 24-bit", "pcm_zork", "PCM Zork", "pcm_s16be_planar", "PCM signed 16-bit big-endian planar", "pcm_s16le_planar", "PCM signed 16-bit little-endian planar", "pcm_s24le_planar", "PCM signed 24-bit little-endian planar", "pcm_s32le_planar", "PCM signed 32-bit little-endian planar", "pcm_dvd", "PCM signed 20|24-bit big-endian", "pcm_f32be", "PCM 32-bit floating point big-endian", "pcm_f32le", "PCM 32-bit floating point little-endian", "pcm_f64be", "PCM 64-bit floating point big-endian", "pcm_f64le", "PCM 64-bit floating point little-endian", "pcm_bluray", "PCM signed 16|20|24-bit big-endian for Blu-ray media", "pcm_lxf", "PCM signed 20-bit little-endian planar", "s302m", "SMPTE 302M", "pcm_s8_planar", "PCM signed 8-bit planar", "adpcm_g726", "G.726 ADPCM", "ADPCM Nintendo THP (Little-Endian)", "adpcm_g722", "G.722 ADPCM", "adpcm_g726le", "G.726 ADPCM little-endian", "adpcm_vima", "LucasArts VIMA audio", "amr_nb", "amr_wb", "ra_144", "RealAudio 1.0 (14.4K)", "ra_288", "RealAudio 2.0 (28.8K)", "roq_dpcm", "DPCM id RoQ", "interplay_dpcm", "DPCM Interplay", "xan_dpcm", "DPCM Xan", "sol_dpcm", "DPCM Sol", "MP2 (MPEG audio layer 2)", "DCA (DTS Coherent Acoustics)", "vorbis", "Vorbis", "dvaudio", "DV audio", "wmav1", "Windows Media Audio 1", "wmav2", "Windows Media Audio 2", "mace3", "MACE (Macintosh Audio Compression/Expansion) 3:1", "mace6", "MACE (Macintosh Audio Compression/Expansion) 6:1", "vmdaudio", "Sierra VMD audio", "flac", "FLAC (Free Lossless Audio Codec)", "mp3adu", "ADU (Application Data Unit) MP3 (MPEG audio layer 3)", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "Westwood Audio (SND1)", "qdm2", "QDesign Music Codec 2", "cook", "Cook / Cooker / Gecko (RealAudio G2)", "truespeech", "DSP Group TrueSpeech", "TTA (True Audio)", "smackaudio", "Smacker audio", "qcelp", "QCELP / PureVoice", "wavpack", "WavPack", "dsicinaudio", "Delphine Software International CIN audio", "IMC (Intel Music Coder)", "musepack7", "Musepack SV7", "MLP (Meridian Lossless Packing)", "gsm_ms", "GSM Microsoft variant", "voxware", "Voxware RT29 Metasound", "nellymoser", "Nellymoser Asao", "musepack8", "Musepack SV8", "speex", "Speex", "wmavoice", "Windows Media Audio Voice", "wmapro", "Windows Media Audio 9 Professional", "wmalossless", "Windows Media Audio Lossless", "atrac3p", "sipr", "RealAudio SIPR / ACELP.NET", "MP1 (MPEG audio layer 1)", "twinvq", "VQF TwinVQ", "truehd", "TrueHD", "mp4als", "qdmc", "QDesign Music", "celt", "Constrained Energy Lapped Transform (CELT)", "g723_1", "G.723.1", "dss_sp", "Digital Speech Standard - Standard Play mode (DSS SP)", "g729", "G.729", "ralf", "RealAudio Lossless", "IAC (Indeo Audio Coder)", "ilbc", "iLBC (Internet Low Bitrate Codec)", "wavesynth", "Wave synthesis pseudo-codec", "sonic", "Sonic", "sonicls", "Sonic lossless", "opus", "Opus (Opus Interactive Audio Codec)", "RFC 3389 Comfort Noise", "TAK (Tom's lossless Audio Kompressor)", "metasound", "Voxware MetaSound", "paf_audio", "Amazing Studio Packed Animation File Audio", "On2 Audio for Video Codec", "evrc", "EVRC (Enhanced Variable Rate Codec)", "SMV (Selectable Mode Vocoder)", "4GV (Fourth Generation Vocoder)", "dsd_lsbf", "DSD (Direct Stream Digital), least significant bit first", "dsd_msbf", "DSD (Direct Stream Digital), most significant bit first", "dsd_lsbf_planar", "DSD (Direct Stream Digital), least significant bit first, planar", "dsd_msbf_planar", "DSD (Direct Stream Digital), most significant bit first, planar", "dvd_subtitle", "DVD subtitles", "dvb_subtitle", "DVB subtitles", "raw UTF-8 text", "xsub", "XSUB", "ASS (Advanced SSA) subtitle", "mov_text", "MOV text", "hdmv_pgs_subtitle", "HDMV Presentation Graphic Stream subtitles", "dvb_teletext", "DVB teletext", "SubRip subtitle with embedded timing", "subrip", "SubRip subtitle", "microdvd", "MicroDVD subtitle", "mpl2", "MPL2 subtitle", "eia_608", "EIA-608 closed captions", "jacosub", "JACOsub subtitle", "PJS (Phoenix Japanimation Society) subtitle", "sami", "SAMI subtitle", "realtext", "RealText subtitle", "Spruce subtitle format", "subviewer1", "SubViewer v1 subtitle", "subviewer", "SubViewer subtitle", "vplayer", "VPlayer subtitle", "webvtt", "WebVTT subtitle", "hdmv_text_subtitle", "HDMV Text subtitle", "TrueType font", "OpenType font", "SMPTE 336M Key-Length-Value (KLV) metadata", "dvd_nav_packet", "DVD Nav packet", "timed_id3", "timed ID3 metadata", "bin_data", "binary data", "brender_pix_deprecated", "BRender PIX image (deprecated id)", "escape130_deprecated", "Escape 130 (deprecated id)", "exr_deprecated", "OpenEXR image (deprecated id)", "g2m_deprecated", "Go2Meeting (deprecated id)", "hevc_deprecated", "H.265 / HEVC (High Efficiency Video Coding) (deprecated id)", "paf_video_deprecated", "Amazing Studio Packed Animation File Video (deprecated id)", "sanm_deprecated", "LucasArts SANM/SMUSH video (deprecated id)", "vp7_deprecated", "On2 VP7 (deprecated id)", "webp_deprecated", "WebP (deprecated id)", "vima", "LucasArts VIMA audio (deprecated id)", "adpcm_vima_deprecated", "opus_deprecated", "Opus (Opus Interactive Audio Codec) (deprecated id)", "paf_audio_deprecated", "Amazing Studio Packed Animation File Audio (deprecated id)", "pcm_s24le_planar_deprecated", "PCM signed 24-bit little-endian planar (deprecated id)", "pcm_s32le_planar_deprecated", "PCM signed 32-bit little-endian planar (deprecated id)", "pcm_s16be_planar_deprecated", "PCM signed 16-bit big-endian planar (deprecated id)", "tak_deprecated", "TAK (Tom's lossless Audio Kompressor) (deprecated id)", "application/octet-stream", "application/vnd.ms-opentype", "application/x-truetype-font", "application/x-font", "image/png", "image/x-xwindowdump", "image/webp", "image/tiff", "image/x-targa", "image/x-tga", "image/x-pcx", "image/x-portable-pixmap", "image/gif", "image/jp2", "image/x-ms-bmp", "image/jpeg", "Deallocating memory.\n", "Memory deallocated.\n", "Necessary extradata missing!\n", "codecdata_length=%d\n", "js_subband_start %d is too large\n", "subpacket[%i].cookversion=%x\n", "Container channels != 1", "MONO\n", "STEREO\n", "Container channels != 2", "JOINT_STEREO\n", "MULTI_CHANNEL\n", "Cook version %d", "different number of samples per channel!\n", "total_subbands > 53", "js_vlc_bits = %d, only >= %d and <= 6 allowed!\n", "subbands > 50", "subbands = 0", "Too many subpackets %d for channels %d\n", "subpackets > %d", "sqvh VLC init\n", "subpacket %i Joint-stereo VLC used.\n", "VLC tables initialized.\n", "MDCT initialized, order = %d.\n", "samples_per_channel = %d", "Invalid quantizer %d at position %d, outside [-63, 63] range\n", "frame subpacket size total > avctx->block_align!\n", "subpacket[%i] size %i js %i %i block_align %i\n", "decouple value too large\n", "subpacket[%i] %i %i\n", "Invalid header!\n", "4:2:2 subsampling", "YUV byte order UYVY", "Decimation", "Frame ended unexpectedly!\n", "Wrong line length %d or line not terminated properly (found 0x%02x)!\n", "Decoded data exceeded linesize!\n", "CamStudio codec error: invalid depth %i bpp\n", "Can't allocate decompression buffer.\n", "coded frame too small\n", "error during lzo decompression\n", "compiled without zlib support\n", "unknown compression\n", "camstudio", "Multiple DTS-HD audio presentations", "Multiple DTS-HD audio assets", "Asset header size mismatch.\n", "DTS core detection mismatch.\n", "DTS extensions detection mismatch (%d, %d)\n", "DTS-XLL: ignoring XLL extension\n", "DTS-XLL: decoding XLL extension\n", "DTS-ExSS: unknown marker = 0x%08x\n", "DTS-ExSS: Processed asset too long.\n", "XLL: fixed lsb width = %d, non-zero not supported.\n", "XLL: Invalid channel set downmix type\n", "XLL: More than %d downmix coefficients", "XLL: Invalid channel set downmix code %x\n", "XLL: Invalid channel set inverse downmix code %x\n", "XLL: mapping coefficients", "XLL: num_freq_bands > 1", "Original channel order value %u too large, only %d channels.\n", "chset header too large, %d bits, should be <= %d bits\n", "XLL: Data in NAVI table exceeds containing asset\nstart: %d (bit), size %u (bytes), end %d (bit), error %u\n", "XLL: unexpected chset sample rate %d, expected %d\n", "aux count %d (bits %d)\n", "chset data lsb exceeds NAVI size, end_pos %d, lsb_start %d, pos %d\n", "chset lsb exceeds lsb_size\n", "chset data exceeds NAVI size\n", "ERROR: block code look-up failed\n", "Stream with high frequencies VQ coding\n", "Didn't get subframe DSYNC\n", "channel sum %d + %d is too large\n", "check failed: %i>%i", "Invalid bit allocation index\n", "Joint stereo coding not supported\n", "LFEScaleIndex larger than 127", "nSYNCAUX mismatch %#x\n", "Auxiliary Decode Time Stamp Flag", "Invalid mode %d for embedded downmix coefficients\n", "Invalid downmix coefficient code %u\n", "Overread auxiliary data by %d bits\n", "Core auxiliary data reserved content", "DTS-XBR: decoding XBR extension\n", "too many active subbands (%d)\n", "DTS-XBR: SYNC ERROR\n", "scale table index %d invalid\n", "ERROR: DTS-XBR: block code look-up failed\n", "DTS-XBR: Didn't get subframe DSYNC\n", "DTS-XBR: end of channel set, skipping further than expected (%d bits)\n", "nchans %d is too large\n", "6bit coeff %d is out of range\n", "DCA-XXCH: dmix to LFE1 not supported.\n", "7bit coeff %d is out of range\n", "Error decoding DTS-XXCH extension\n", "Not a valid DCA frame\n", "Invalid LFE value: %d\n", "error decoding block\n", "Invalid channel mode %d\n", "Downmixing %d channels", "XCh extension amode %d not supported!\n", "XCh with fewer than 2 base channels", "error decoding XCh extension\n", "X96 extension found at %d bits\n", "FSIZE96 = %d bytes\n", "REVNO = %d\n", "XCh with Back center channel", "Number of channels %d mismatches layout %d\n", "Non standard configuration %d !\n", "DTS-XXCH: Inconsistent avcodec/dts channel layouts\n", "DCA: too many residual channels (%d, core channels %d). Disabling XLL\n", "DCA: unsupported upsampling (%d XLL samples, %d core samples). Disabling XLL\n", "XLL: upsampling core channels by a factor of 2\n", "Number of channels changed in DCA decoder (%d -> %d)\n", "Not implemented!\n", "DCA decoder", "disable_xch", "disable decoding of the XCh extension", "disable_xll", "disable decoding of the XLL extension", "DTS-ES", "DTS 96/24", "DTS-HD HRA", "DTS-HD MA", "T?Ab\u000b", "libavcodec/dcaenc.c", "peak_cb >= -2047", "(quant_levels[abits] - 1) / 2 >= quantize_value(peak, *quant)", "Unsupported channel layout!\n", "Bit rate %i not supported.", "used_abits != 1", "1411200", "Frame is too small (%d).", "Invalid DDS header.", "Found %d mipmaps (ignored).\n", "Invalid pixel format header %d.\n", "Disabling invalid palette flag for compressed dds.\n", "fourcc %s bpp %d r 0x%x g 0x%x b 0x%x a 0x%x\n", "and GIMP-DDS tag %s\n", "Found array of size %d (ignored).\n", "Unsupported DXGI format %d.\n", "Unsupported %s fourcc.\n", "Unsupported palette bpp %d.\n", "Unknown pixel format [bpp %d r 0x%x g 0x%x b 0x%x a 0x%x].\n", "Compressed Buffer is too small (%d < %d).\n", "Buffer is too small (%d < %d).\n", "Post-processing alpha exponent.\n", "Post-processing normal map.\n", "Post-processing raw YCoCg.\n", "Post-processing swapped Luma/Alpha.\n", "Post-processing A2XY swizzle.\n", "Post-processing RBXG swizzle.\n", "Post-processing RGXB swizzle.\n", "Post-processing RXBG swizzle.\n", "Post-processing RXGB swizzle.\n", "Post-processing XGBR swizzle.\n", "Post-processing XGXR swizzle.\n", "Post-processing XRBG swizzle.\n", "Error decoding %s chunk\n", "Ignoring unknown chunk type %u\n", "av_image_check_size(avctx->width, avctx->height, 0, avctx) >= 0", "libavcodec/dfa.c", "COPY", "TSW1", "BDLT", "WDLT", "TDLT", "DSW1", "BLCK", "DDS1", "Stream is old and may not work\n", "Stream may have unhandled features\n", "Unknown chroma format %d\n", "Bitdepth greater than 8\n", "Dimensions must be an integer multiple of the chroma subsampling\n", "Unsupported picture coding mode %d\n", "Unknown wavelet type %d\n", "next_pu_offset %d is invalid\n", "prev_pu_offset %d is invalid\n", "Invalid quant\n", "Schroedinger %d.%d.%d", "Dropping frame without sequence header\n", "framelist full\n", "num_refs of 3\n", "stride >= w", "libavcodec/diracdec.c", "Reference not found\n", "Reference could not be allocated\n", "Block prediction index too high\n", "invalid x/y block length (%d/%d) for x/y chroma shift (%d/%d)\n", "Block separation too small\n", "Block separation greater than size\n", "Unsupported large block size\n", "MV precision finer than eighth-pel\n", "Unknown picture prediction mode\n", "wavelet_idx is too big\n", "invalid number of DWT decompositions\n", "codeblock width invalid\n", "codeblock height invalid\n", "unknown codeblock mode\n", "Invalid lowdelay.bytes.den\n", "Low Delay: Has Custom Quantization Matrix!\n", "Mandatory custom low delay matrix missing for depth %d\n", "PICTURE_NUM: %d\n", "Frame to retire not found\n", "Reference frame overflow\n", "Data unit with size %d is larger than input buffer, discarding\n", "Error in dirac_decode_data_unit\n", "Delay frame overflow\n", "BBC Dirac VC-2", "\n>\u000b\f\r", " \"&*(&$##&*++*(&'++*)++*,.--./.,,-...22//11113531598424885556::", " !\"$%%$\"!\"#%&()('&%\"!\"%(,0451/-*&$$&)+,.14661,,,/33430245522666", "                     %     !     !\"%$   !\"%$\"#$',(('',++3821<=F", " \"#$$$%$%'()((())*))+,,-.07<942114457:>AIRRPNIDGRZZXWZ_dkga_]cc", " #$$#$')+-,)'(*++-00022233334563134489766787:::<=>>;9::=;;;=>>>", "  \"\"\"\"###$%$$#$&&&&&&&&&&'),+)(((('()('(+..,,,*)+.027:5027:=>>>", " #$$#$')+-,)'(*++-01342233334563134489766787:::<=>>;9::=;;;<>??", "  !\"###\"\"#$$$$$%&&&&&''&&')++*)(('())''(*/2/-..,-./16:60169<>??", " $%$%'')++*)))*+++,,,./.----.,,-,*)+.-,---...-,-,-//010.-.//0//", "  !!#######\"#&('%%%$#$&()*,-,*)(&$$%&(+,------)')-//000.,-//0//", " %*---,&%(*,13/)(+,.0363//-/231./1/277301334466114566557;?><<<<", " !!\"#$#!!#$%%&%%%$%%%&'%$%(*-.,)*,-/120.0124421/022332113431///", " $&%%()((**))))*+,,-..-,----./.-,*)+--/000.//./.--/01210.010111", " !\"\"#$%$%&&&''((&&'&%'))*+--./.-+'%%(,--...//.,*+-/01210./00111", " ###\"\"#'+--)'()*,07;?A;5447=>::?BBAFJFBADKMJJMLIIIILPYZRMPVTRRR", "  !\"!!!!!!!!#%%$$#$&&$#$%&)*)'&&&')*)''()+,,,,,-///12333579:;99", " $''&')-39:50/37:BKQSRNIHJMSUSRYc`Z^acimi_Y\\_^]\\XYZ]_`aadhfbbcc", " !\"\"$%$$%&&&'),+)().1/./136<>;768:=AB@?BINOPONNRWYZ]_`aadhfbbcc", " !\"\"!\"#%(+*'&')+,/27=?80.16;:7:?ACJTRKHFJTWW^]QKNSY[VRUZZUOIIII", "yuv422p10", "yuv422p", "ac tex damaged %d, %d\n", "buffer too small (%d < 640).\n", "unknown header 0x%02X 0x%02X 0x%02X 0x%02X 0x%02X\n", "interlaced %d, cur field %d\n", "invalid bit depth value (%d).\n", "unsupported cid %d\n", "bit depth mismatches %d %d\n", "Profile cid %d.\n", "incorrect frame size (%d < %d).\n", "mb height too big: %d\n", "invalid mb scan index (%d < %d).\n", "frame size changed: %dx%d -> %dx%d\n", "pix_fmt changed: %s -> %s\n", "video parameters incompatible with DNxHD. Valid DNxHD profiles:\n", "index >= 0", "libavcodec/dnxhdenc.c", "!alevel || j < 257", "run < 63", "too many threads\n", "qmax must be at least 2\n", "picture could not fit ratecontrol constraints, increase qmax\n", "1024", "nitris_compat", "encode with Avid Nitris compatibility", "ibias", "intra quant bias", "@invalid number of channels\n", "Unknown SOL subcodec\n", "packet is too small\n", "channels have differing number of samples\n", "Packet too small for DPX header\n", "DPX marker not found\n", "Invalid data start offset\n", "Packing %d", "Encoding %d", "Descriptor %d", "Packing to 32bit required\n", "Packing to 16bit required\n", "Depth %d", "Overread buffer. Invalid header?\n", "Decoding DPX without scanline alignment.\n", "Unsupported format\n", "Encryption", "The image is encrypted and may not properly decode.\n", "SDPX", "Can't allocate bitmap buffers.\n", "RLE overread\n", "Expected %d bytes, got %d - skipping packet.\n", "get_buffer() failed.\n", "combined_pitch was too large\n", "dump_extra", "PPPPPP@@ppppPP", "Frame size: %dx%d; pixel format: %s, framerate: %d/%d\n", "SL25", "dvsd", "CDVC", "dvbsub", "Junk in packet\n", "Selected DVB subtitles sub-stream %d is not available\n", "obj2", "libavcodec/dvbsubdec.c", "Different Version of Segment asked Twice", "Invalid object location! %d-%d %d-%d %02x\n", "line overflow\n", "4-bit pixel string in %d-bit region!\n", "8-bit pixel string in %d-bit region!\n", "Unknown/unsupported pixel block 0x%x\n", "segment_type:%d page_id:%d segment_length:%d\n", "region depth %d is invalid\n", "Invalid clut depth 0x%x!\n", "Field data size %d+%d too large\n", "Unknown object coding %d\n", "Missing display_end_segment, emulating\n", "DVB Sub Decoder", "compute_edt", "compute end of time using pts or timeout", "compute_clut", "compute clut when not available(-1) or always(1) or never(0)", "dvb_substream", "Error initializing the work tables.\n", "AC EOB marker is absent pos=%d\n", "Concealing bitstream errors\n", "Parser input %d too small\n", "size:", "%dx%d", "Unable to open IFO file \"%s\": %s\n", "DVDVIDEO-VTS", "\"%s\" is not a proper IFO file\n", "Failed to read palette from IFO file \"%s\"\n", " 0x%06x", "Attempt to reconstruct too large SPU packets aborted.\n", "Invalid command offset\n", "dvdsub", "dvdsubdec", "set the global palette", "ifo_palette", "obtain the global palette from .IFO file", "forced_subs_only", "Only show forced subtitles", "libavcodec/dvdsubenc.c", "size: %dx%d\n", " %06x%c", "Bitmap subtitle required\n", "Selected palette:", " 0x%06x@@%02x (0x%x,0x%x)", "dvd_subtitle too big\n", "subtitle_packet size=%td\n", "VOBSUB subtitle encoder", "even_rows_fix", "Make number of rows even (workaround for some players)", "DVCPRO HD encoding is not supported.\n", "Error initializing work tables.\n", "ac bitstream overflow\n", "bitstream written beyond buffer size\n", "%d slices for %dx%d", "invalid slice size %u (only %u bytes left)\n", "invalid slice size %u\n", "Slice sizes mismatch: got %u instead of %u\n", "Frame dimensions %dx%d", "Frame header %X", "E-AC-3 Encoder", "truncated header\n", "eacmv", "Input data too small\n", "Dimensions too small\n", "Missing reference frame.\n", "ac-tex damaged at %d %d\n", "eamad", "unsupported mb mode %i\n", "eatgq", "inter frame without corresponding intra frame\n", "Invalid value for motion vector bits: %d\n", "MV %d %d out of picture\n", "truncated intra frame\n", "truncated inter frame\n", "eatgv", "eatqi", "Electronic Arts TQI Video", "guess_dc() is out of memory\n", "s->quarter_sample", "libavcodec/error_resilience.c", "internal error, slice end before start\n", "ignoring last missing slice\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "Skipping frame\n", "Escape sizes: %i, %i, %i\n", "Error decoding skip value\n", "Dimensions should be a multiple of two.\n", "Could not allocate buffer.\n", "?&SU?", "Buffer is too small for the claimed bitrate.\n", "Bitrate byte is missing, guessing the bitrate from packet size.\n", "frame erasure\n", "Frame #%d, %s\n", "bitrate cannot be determined.", "postfilter", "enable postfilter", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "0x%04X", "Invalid TIFF tag type 0 found for %s with size %d\n", "TIFF tag type (%u)", "Invalid uncompressed codeword\n", "uncompressed run overrun\n", "uncompressed run went out of bounds\n", "uncompressed run went out of boundsE\n", "Incorrect mode VLC\n", "Incorrect code\n", "Run overrun\n", "saved run %d on entering uncompressed mode\n", "Special mode %d xxx=%d support", "f->max_slice_count > 0", "libavcodec/ffv1.c", "!fdst->plane[0].state", "libavcodec/ffv1dec.c", "!fdst->sample_buffer", "f->version > 1", "Invalid version in global header\n", "chroma shift parameters %d %d are invalid\n", "slice count invalid\n", "quant table count %d is invalid\n", "read_quant_table error\n", "CRC mismatch %X!\n", "global: ver:%d.%d, coder:%d, colorspace: %d bpr:%d chroma:%d(%d:%d), alpha:%d slices:%dx%d qtabs:%d ec:%d intra:%d CRC:0x%08X\n", "f->version > 2", "quant_table_index out of range\n", "ignoring invalid SAR: %u/%u\n", "slice_rct_y_coef out of range\n", "bytestream end mismatching by %d\n", "invalid version %d in ver01 header\n", "Invalid change of global parameters\n", "chroma subsampling not supported in this colorspace\n", "colorspace not supported\n", "slice count %d is invalid (max=%d)\n", "context_count >= 0", "Cannot decode non-keyframe without valid keyframe\n", "ver:%d keyframe:%d coder:%d ec:%d slices:%d bps:%d\n", "Slice pointer chain broken\n", "CRC mismatch %X!", "at %f seconds\n", "at %lld\n", "slice %d, CRC: 0x%08X\n", "libavcodec/ffv1enc.c", "%llu %llu ", "f->plane[j].quant_table_index == f->avctx->context_model", "bytes < pkt->size / f->slice_count", "bytes < (1 << 24)", "Version 2 needed for requested features but version 2 is experimental and not enabled\n", "bits_per_raw_sample invalid\n", "bits_per_raw_sample > 8, forcing coder 1\n", "bits_per_raw_sample of more than 8 needs -coder 1 currently\n", "s->bits_per_raw_sample >= 8", "Storing alpha plane, this will require a recent FFV1 decoder to playback!\n", "Invalid context model %d, valid values are 0 and 1\n", "s->version >= 2", "2Pass file invalid at %d %d [%s]\n", "2Pass file invalid at %d %d %d %d [%s]\n", "2Pass file invalid\n", "Unsupported number %d of slices requested, please specify a supported number with -slices (ex:4,6,9,12,16, ...)\n", "!sf->rc_stat2[i]", "fs->slice_coding_mode == 0", "Buffer too small\n", "Coding slice as PCM\n", "ffv1 encoder", "slicecrc", "Protect slices with CRCs", "This implementation is limited to %d channels.\n", "Invalid intervals definitions.\n", "Frame data is too small.\n", "Invalid FIC Header.\n", "Initial frame is skipped\n", "Zero slices found.\n", "Packet is too small to contain cursor (%d vs %d bytes).\n", "Cursor data too small. Skipping cursor.\n", "Invalid cursor position: (%d,%d). Skipping cusor.\n", "Invalid cursor size. Skipping cursor.\n", "Not enough frame data to decode.\n", "Could not allocate slice data.\n", "Could not clone frame buffer.\n", "Could not make frame writable.\n", "FIC encoder", "skip_cursor", "skip the cursor", "invalid sync code\n", "invalid channel mode: %d\n", "invalid sample size code (%d)\n", "broken stream, invalid padding\n", "reserved blocksize code: 0\n", "illegal sample rate code %d\n", "header crc mismatch\n", "sample/frame number invalid; utf8 fscked\n", "extradata NULL or too small.\n", "extradata contains %d bytes too many.\n", "extradata too small.\n", "invalid max blocksize: %d\n", "couldn't allocate fifo_buf\n", "sample rate change detected in adjacent frames\n", "bits per sample change detected in adjacent frames\n", "blocking strategy change detected in adjacent frames\n", "number of channels change detected in adjacent frames\n", "sample/frame number mismatch in adjacent frames\n", "crc check failed from offset %i (frame %lld) to %i (frame %lld)\n", "couldn't reallocate wrap buffer of size %d", "couldn't allocate FLACHeaderMarker\n", "couldn't allocate link_penalty\n", "dropping low score %i frame header from offset %i to %i\n", "couldn't reallocate buffer of size %td\n", "find_new_headers couldn't allocate FLAC header\n", "Junk frame till offset %i\n", "libavcodec/flacdec.c", "illegal residual coding method %d\n", "invalid rice order: %i blocksize %i\n", "invalid predictor order: %i > %i\n", "skipping flac header packet 1\n", "skipping vorbis comment\n", "invalid frame header\n", "bps not found in STREAMINFO or frame header\n", "switching bps mid-stream is not supported\n", "blocksize %d > %d\n", "sample rate not found in STREAMINFO or frame header\n", "  Max Blocksize: %d\n", "  Max Framesize: %d\n", "  Samplerate: %d\n", "  Channels: %d\n", "  Bits: %d\n", "invalid subframe padding\n", "Invalid number of wasted bits > available bits (%d) - left=%d\n", "Decorrelated bit depth > 32", "illegal pred order %d\n", "invalid coeff precision\n", "qlevel %d not supported, maybe buggy stream\n", "invalid coding type\n", "CRC error at PTS %lld\n", "overread: %d\n", "underread: %d orig size: %d\n", "invalid header\n", "decode_frame() failed\n", "FLAC decoder", "use_buggy_lpc", "emulate old buggy lavc behavior", "%d Hz not supported\n", "invalid compression level: %d\n", "invalid partition orders: min=%d max=%d\n", "invalid block size: %d\n", "samplerate > 0", "libavcodec/flacenc.c", "Channel layout not supported by Flac, output stream will have incorrect channel layout.\n", "No channel layout specified. The encoder will use Flac channel layout for %d channels.\n", " compression: %d\n", " lpc type: None\n", " lpc type: Fixed pre-defined coefficients\n", " lpc type: Levinson-Durbin recursion with Welch window\n", " lpc type: Cholesky factorization, %d pass%s\n", " prediction order: %d, %d\n", "estimate", " order method: %s\n", "2-level", "4-level", "8-level", "full search", "log search", " partition order: %d, %d\n", " block size: %d\n", " lpc precision: %d\n", "Bad frame count\n", "Error updating MD5 checksum\n", "FLAC encoder", "lpc_coeff_precision", "LPC coefficient precision", "lpc_type", "LPC algorithm", "none", "levinson", "cholesky", "lpc_passes", "Number of passes to use for Cholesky factorization during LPC analysis", "min_partition_order", "max_partition_order", "prediction_order_method", "Search method for selecting prediction order", "predm", "2level", "4level", "8level", "ch_mode", "Stereo decorrelation mode", "indep", "left_side", "right_side", "mid_side", "exact_rice_parameters", "Calculate rice parameters exactly", "multi_dim_quant", "Multi-dimensional quantization", "Unexpected extradata size %d\n", "24Bpp FLC/FLX", "Unknown FLC/FLX depth of %d Bpp is unsupported.\n", "Invalid chunk_size = %u > frame_size = %u\n", "Undefined opcode (%x) in DELTA_FLI\n", "Invalid pixel_ptr = %d > pixel_limit = %d\n", "Invalid byte run value.\n", "pixel_countdown < 0 (%d) at line %d\n", "In chunk FLI_COPY : source data (%d bytes) has incorrect size, skipping chunk\n", "Unrecognized chunk type: %d\n", "Processed FLI chunk where chunk size = %d and final chunk ptr = %d\n", "Unexpected FLI_LC chunk in non-palettized FLC\n", "pixel_countdown < 0 (%d) (linea%d)\n", "pixel_countdown < 0 (%d)\n", "In chunk FLI_COPY : source data (%d bytes) bigger than image, skipping chunk\n", "24Bpp FLC Unsupported due to lack of test files.\n", "Unknown FLC format, my science cannot explain how this happened.\n", "Bad picture format\n", "%c esc_type:%d, qp:%d num:%d\n", "Forcing thread count to 1 for MJPEG encoding, use -thread_type slice or a constant quantizer if you want to use multiple cpu cores\n", "MJPEG CBR encoding works badly with frame multi-threading, consider using -threads 1, -thread_type slice or a constant quantizer.\n", "non_deterministic", "!avctx->internal->frame_thread_encoder", "libavcodec/frame_thread_encoder.c", "!thread_avctx->internal->frame_thread_encoder", "ff_frame_thread_encoder_init failed\n", "Forcing thread count to 1 for huffyuv encoding with first pass or context 1\n", "Packet is too short\n", "This file is encoded with Fraps version %d. This codec can only decode versions <= 5.\n", "Invalid frame length %d (should be %d)\n", "Fraps: error in data stream\n", "Fraps: plane %i offset is out of bounds\n", "Invalid frame size %dx%d\n", "Error decoding plane %i\n", "Packet is too small.\n", "incorrect marker\n", "Field size %i is too small (required %i)\n", "Packet is too small, need %i, have %i\n", "frwu needs even width\n", "frwu Decoder", "change_field_order", "Change field order", "g722 decoder", "bits_per_codeword", "Bits per G722 codeword", "Requested frame size is not allowed. Using %d instead of %d\n", "Requested trellis value is not allowed. Using %d instead of %d\n", "Bitrate not supported yet, use 6.3k\n", "Bitrate not supported, use 6.3k\n", "Expected %d bytes, got %d - skipping packet\n", "libavcodec/g723_1.c", "G.723.1 decoder", "postfilter on/off", "Invalid sample rate %d\n", "Only mono is supported\n", "Decoding more than one channel", "g726le", "Invalid number of bits %d\n", "Frame invalidly split, missing parser?\n", "g726", "code_size", "Bits per code", "Only mono sound is supported (requested channels: %d).\n", "G.729 @ 8kbit/s", "Packet type: %s\n", "G.729D @ 6.4kbit/s", "Packet size %d is unknown.\n", "pitch_delay_int %d is too large\n", "No available color, can not use transparency\n", "GIF does not support resolutions above 65535x65535\n", "avctx->pix_fmt == AV_PIX_FMT_PAL8", "libavcodec/gif.c", "GIF encoder", "gifflags", "set GIF flags", "offsetting", "enable picture offsetting", "transdiff", "enable transparency detection between frames", "GIF87a", "GIF89a", "cannot decode frame without keyframe\n", "code=%02x '%c'\n", "picture doesn't have either global or local palette.\n", "Invalid image width.\n", "Invalid image height.\n", "Image too wide by %d, truncating.\n", "Image too high by %d, truncating.\n", "LZW init failed\n", "LZW decode failed\n", "gif decoder", "trans_color", "color value (ARGB) that is used instead of transparent color", "Invalid block alignment %d\n", "Missing GSM magic!\n", "qscale has forbidden 0 value\n", "header damaged\n", "illegal mba at %d %d\n", "Invalid mtype index %d\n", "h->mtype < (sizeof(ff_h261_mtype_map) / sizeof((ff_h261_mtype_map)[0]))", "libavcodec/h261dec.c", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d\n", "Error at MB: %d\n", "s->current_picture.f->pict_type == s->current_picture_ptr->f->pict_type", "s->current_picture.f->pict_type == s->pict_type", "L263", "S263", "Slice mismatch at MB: %d\n", "discarding %d junk bits at end, next would be %X\n", "overreading %d bits\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "this codec does not support truncated bitstreams\n", "Discarding excessive bitstream in packed xvid\n", "Reverting picture dimensions change due to header decoding failure\n", "format change not supported\n", "GEOV", "GEOX", "Reference invalid\n", "Invalid POC %d<%d\n", "Increasing reorder buffer to %d\n", "pics <= 16", "libavcodec/h264.c", "no picture %s\n", "top block unavailable for requested intra4x4 mode %d at %d %d\n", "left block unavailable for requested intra4x4 mode %d at %d %d\n", "out of range intra chroma pred mode at %d %d\n", "top block unavailable for requested intra mode at %d %d\n", "left block unavailable for requested intra mode at %d %d\n", "AVC: nal size %d\n", "NAL %d/%d at %d/%d length %d\n", "AVC: Consumed only %d bytes instead of %d\n", "Ignoring NAL %d in global header/extradata\n", "Invalid inter IDR frame\n", "invalid mixed IDR / non IDR frames cannot be decoded in slice multithreading mode\n", "data partitioning", "SPS decoding failure, trying again with the complete NAL\n", "next_avc - buf_index + consumed == nalsize", "Unknown NAL code: %d (%d bits)\n", "decode_slice_header error\n", "avcC %d too short\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "buf_index <= buf_size", "Q264", "no frame!\n", "Duplicating field %d to fill missing\n", "pict->buf[0] || !*got_frame", "luma_log2_weight_denom %d is out of range\n", "chroma_log2_weight_denom %d is out of range\n", "reference overflow %u > %u or %u > %u\n", "Error resilience with slice threads is enabled. It is unsafe and unsupported and may crash. Use it at your own risk\n", "Constrained Baseline", "Extended", "High", "High 10", "High 10 Intra", "High 4:2:2", "High 4:2:2 Intra", "High 4:4:4", "High 4:4:4 Predictive", "High 4:4:4 Intra", "CAVLC 4:4:4", "H264 Decoder", "is_avc", "is avc", "nal_length_size", "enable_er", "Enable error resilience on damaged frames (unsafe)", "Reference %d >= %d\n", "gray chroma\n", "cabac decode of qscale diff failed at %d %d\n", "Invalid level prefix\n", "negative number of zero coeffs at %d %d\n", "offset == (sizeof(coeff_token_vlc_tables) / sizeof((coeff_token_vlc_tables)[0]))", "libavcodec/h264_cavlc.c", "mb_type %d in %c slice too large at %d %d\n", "Not enough data for an intra PCM block.\n", "B sub_mb_type %u out of range at %d %d\n", "P sub_mb_type %u out of range at %d %d\n", "ref %u overflow\n", "cbp too large (%u) at %d %d\n", "dquant out of range (%d) at %d %d\n", "Too big extradata size, corrupted stream or invalid MP4/AVCC bitstream\n", "Packet header is not contained in global extradata, corrupted stream or invalid MP4/AVCC bitstream\n", "Warning: SPS NALU missing or invalid. The resulting stream may not play.\n", "Warning: PPS NALU missing or invalid. The resulting stream may not play.\n", "SPS not present in the stream, nor in AVCC, stream may be unreadable\n", "PPS not present in the stream, nor in AVCC, stream may be unreadable\n", "h264_mp4toannexb", "AVC-parser: nal length size invalid\n", "AVC-parser: nal size %d remaining %d\n", "pps_id %u out of range\n", "non-existing PPS %u referenced\n", "non-existing SPS %u referenced\n", "illegal reordering_of_pic_nums_idc %d\n", "reference count %d overflow\n", "illegal memory management control operation %d\n", "missing picture in access unit with size %d\n", "!dst->f->buf[0]", "libavcodec/h264_picture.c", "src->f->buf[0]", "hardware accelerator failed to decode picture\n", "sl == h->slice_ctx", "Gray", "PIC-AFF", "MB-AFF", "sps_id %u out of range\n", "chroma_format_idc %u", "separate color planes are not supported\n", "Different chroma and luma bit depth", "illegal bit depth value (%d, %d)\n", "log2_max_frame_num_minus4 out of range (0-12): %d\n", "log2_max_poc_lsb (%d) is out of range\n", "poc_cycle_length overflow %d\n", "illegal POC type %d\n", "too many reference frames %d\n", "mb_width/height overflow\n", "discarding sps cropping, original values are l:%d r:%d t:%d b:%d\n", "Reducing left cropping to %d chroma samples to preserve alignment.\n", "crop values invalid %d %d %d %d / %d %d\n", "illegal aspect ratio\n", "Truncated VUI\n", "time_scale/num_units_in_tick invalid or unsupported (%u/%u)\n", "Clipping illegal num_reorder_frames %d\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %d/%d b%d reo:%d\n", "Overread %s by %d bits\n", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "8x8DCT", "Invalid luma bit depth=%d\n", "Unimplemented luma bit depth=%d\n", "FMO not supported\n", "reference overflow (pps)\n", "Current profile doesn't provide more RBSP data in PPS, skipping\n", "pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s\n", "remove short %d count %d\n", "%d %d %p\n", "index < def_len", "libavcodec/h264_refs.c", "len <= 32", "Discarding mismatching reference\n", "short term list:\n", "%u fn:%d poc:%d %p\n", "long term list:\n", "reference count overflow\n", "abs_diff_pic_num overflow\n", "long_term_pic_idx overflow\n", "illegal modification_of_pic_nums_idc %u\n", "reference picture missing during reorder\n", "Missing reference picture, default is %d\n", "av_buffer_get_ref_count(sl->ref_list[list][index].parent->f->buf[0]) > 0", "MMCO opcode [%d, %d] at %d mismatches between slices\n", "Inconsistent MMCO state between slices [%d, %d]\n", "no mmco here\n", "mmco:%d %d %d\n", "mmco: unref short failure\n", "mmco: unref short %d count %d\n", "mmco: unref long failure\n", "mmco: cannot assign current picture to short and long at the same time\n", "mmco: cannot assign current picture to 2 long term references\n", "!h->cur_pic_ptr->long_ref", "illegal short term reference assignment for second field in complementary field pair (first field is long term)\n", "illegal short term buffer state detected\n", "number of reference frames (%d+%d) exceeds max (%d; probably corrupt input), discarding one\n", "illegal long ref in memory management control operation %d\n", "x264 - core %d", "x264 - core 0000", "user data:\"%s\"\n", "SEI %d len:%d\n", "SEI type %d size %d truncated at %d\n", "ct_type:%X pic_struct:%d\n", "sei_recovery_frame_cnt: %d\n", "non-existing SPS %d referenced in buffering period\n", "SEI FPA %d %d %d %d %d %d\n", "Green Metadata Info SEI message\n", "green_metadata_type                            = %d\n", "green_metadata_period_type                     = %d\n", "green_metadata_num_seconds                     = %d\n", "green_metadata_num_pictures                    = %d\n", "SEI GREEN Complexity Metrics                   = %f %f %f %f\n", "xsd_metric_type                                = %d\n", "xsd_metric_value                               = %f\n", "unknown SEI type %d\n", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "Could not allocate memory\n", "VDPAU decoding does not support video colorspace.\n", "Unsupported bit depth %d\n", "too many threads/slices %d, reducing to %d\n", "context_init() failed.\n", "Attempt to start a frame outside SETUP state\n", "no frame buffer available\n", "!pic->f->data[0]", "libavcodec/h264_slice.c", "!pic->hwaccel_picture_private", "h->block_offset[15] == (4 * ((scan8[15] - scan8[0]) & 7) << h->pixel_shift) + 4 * sl->linesize * ((scan8[15] - scan8[0]) >> 3)", "Slice overlaps with next at %d\n", "bytestream overread %td\n", "error while decoding MB %d %d, bytestream %td\n", "error while decoding MB %d %d\n", "h264_slice_header_init() failed", " fix", " IDR", "TEMP", "SPAT", "!h->setup_finished", "Too many fields\n", "Cannot decode multiple access units as slice threads\n", "Broken frame packetizing\n", "slice type %d too large at %d\n", "A non-intra slice in an IDR NAL unit.\n", "PPS change from %d to %d forbidden\n", "PPS changed between slices\n", "SPS changed in the middle of the frame\n", "Delayed frames seen. Reenabling low delay requires a codec flush.\n", "h->sps.crop_right + h->sps.crop_left < (unsigned)h->width", "h->sps.crop_top + h->sps.crop_bottom < (unsigned)h->height", "Invalid cropped dimensions: %dx%d.\n", "Ignoring cropping information.\n", "changing width %d -> %d / height %d -> %d on slice %d\n", "Reinit context to %dx%d, pix_fmt: %s\n", "h264_slice_header_init() failed\n", "Cannot (re-)initialize context during parallel decoding.\n", "Frame num change from %d to %d\n", "This stream was generated by a broken encoder, invalid 8x8 inference\n", "Changing field mode (%d -> %d) between slices is not allowed\n", "unset cur_pic_ptr on slice %d\n", "h->cur_pic_ptr", "h->cur_pic_ptr->f->buf[0]", "Invalid field mode combination %d/%d\n", "Found reference and non-reference fields in the same frame, which", "Frame num gap %d %d\n", "first_mb_in_slice overflow\n", "cabac_init_idc %u overflow\n", "QP %u out of range\n", "deblocking_filter_idc %u out of range\n", "deblocking filter parameters %d %d out of range\n", "Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\nTo parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\nSetting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding but will generate non-standard-compliant output.\n", "Deblocking switched inside frame.\n", "Possibly too many slices (%d >= %d), increase MAX_SLICES and recompile if there are artifacts\n", "slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n", "context_count && h->slice_ctx[context_count - 1].mb_y < h->mb_height", "bit_depth<=8", "libavcodec/h264dsp.c", "libavcodec/h264pred.c", "Snappy uncompress error\n", "DXT1", "DXT5", "DXT5-YCoCg-scaled", "Invalid video size %dx%d.\n", "%s texture\n", "snappy", "complex", "Invalid texture format %#04x.\n", "%s compressor\n", "Insufficient data\n", "The cu_qp_delta %d is outside the valid range [%d, %d].\n", "cu_chroma_qp_offset_idx not yet tested.\n", "PPS id out of range: %d\n", "PPS changed between slices.\n", "Invalid slice segment address: %u.\n", "Independent slice segment missing.\n", "Unknown slice type: %d.\n", "Inter slices in an IRAP frame.\n", "Ignoring POC change between slices: %d -> %d\n", "No ref lists in the SPS.\n", "Too many refs: %d/%d.\n", "Zero refs for a frame with P or B slices.\n", "Invalid collocated_ref_idx: %d.\n", "luma_log2_weight_denom %d is invalid\n", "Invalid number of merging MVP candidates: %d.\n", "num_entry_point_offsets %d is invalid\n", "offset_len %d is invalid\n", "Failed to allocate memory\n", "too many slice_header_extension_data_bytes\n", "The slice_qp %d is outside the valid range [%d, 51].\n", "Impossible slice segment.\n", "Overread slice header by %d bits\n", "Invalid long term RPS.\n", "Error splitting the input into NAL units.\n", "Error constructing the frame RPS.\n", "First slice in a frame missing.\n", "Non-matching NAL types of the VCL NALUs: %d %d\n", "Error constructing the reference lists for the current slice.\n", "WPP ctb addresses are wrong (%d %d %d %d)\n", "entry_point_offset table is corrupted\n", "Skipping NAL unit %d\n", "Error parsing NAL unit #%d.\n", "Invalid NAL unit size in extradata.\n", "Decoding nal unit %d %d from hvcC failed\n", "Verifying checksum for frame with POC %d: ", "plane %d - correct ", "%02x", "mismatching checksum of plane %d - ", " != ", "Decoded frame with POC %d.\n", "Impossible initial tile.\n", "Previous slice segment missing\n", "HEVC decoder", "apply_defdispwin", "Apply default display window from VUI", "strict-displaywin", "stricly apply default display window size", "Main 10", "Main Still Picture", "Rext", "The input looks like it is Annex B already\n", "Invalid NAL unit type in extradata: %d\n", "No parameter sets in the extradata\n", "hevc_mp4toannexb", "libavcodec/hevc_parse.c", "SEI_SUFFIX", "SEI_PREFIX", "FD_NUT", "EOB_NUT", "EOS_NUT", "CRA_NUT", "IDR_N_LP", "IDR_W_RADL", "BLA_N_LP", "BLA_W_RADL", "BLA_W_LP", "RASL_R", "RASL_N", "RADL_R", "RADL_N", "STSA_R", "STSA_N", "TSA_R", "TSA_N", "TRAIL_R", "TRAIL_N", "Invalid NAL unit size.\n", "No start code is found.\n", "Invalid NAL unit %d, skipping.\n", "nal_unit_type: %d(%s), nuh_layer_id: %d, temporal_id: %d\n", "Invalid NAL unit: %d\n", "SPS id out of range: %d\n", "missing picture in access unit\n", "!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)", "libavcodec/hevc_ps.c", "PTL information too short\n", "Main profile bitstream\n", "Main 10 profile bitstream\n", "Main Still Picture profile bitstream\n", "Range Extension profile bitstream\n", "Unknown HEVC profile: %d\n", "Not enough data for sublayer %i level_idc\n", "PTL information for sublayer %i too short\n", "Invalid delta in scaling list data: %d.\n", "nb_cpb %d invalid\n", "Decoding VUI\n", "Unknown SAR index: %u.\n", "Invalid default display window\n", "discarding vui default display window, original values are l:%u r:%u t:%u b:%u\n", "Strange VUI timing information, retrying...\n", "Retry got %i/%i fps\n", "Invalid value of delta_idx in slice header RPS: %d > %d.\n", "Invalid value of abs_delta_rps: %d\n", "Too many refs in a short term RPS.\n", "Decoding VPS\n", "vps_reserved_three_2bits is not three\n", "vps_reserved_ffff_16bits is not 0xffff\n", "vps_max_sub_layers out of range: %d\n", "vps_max_dec_pic_buffering_minus1 out of range: %d\n", "vps_max_num_reorder_pics out of range: %d\n", "too many layer_id_included_flags\n", "vps_num_hrd_parameters %d is invalid\n", "Overread VPS by %d bits\n", "VPS %d does not exist\n", "sps_max_sub_layers out of range: %d\n", "chroma_format_idc %d is invalid\n", "discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\n", "Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\n", "4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n", "chroma_format_idc is %d, depth is %d", "log2_max_pic_order_cnt_lsb_minus4 out range: %d\n", "sps_max_dec_pic_buffering_minus1 out of range: %d\n", "sps_max_num_reorder_pics out of range: %d\n", "Invalid value %d for log2_min_cb_size", "Invalid value %d for log2_diff_max_min_coding_block_size", "Invalid value for log2_min_tb_size", "Invalid value %d for log2_diff_max_min_transform_block_size", "PCM bit depth (%d) is greater than normal bit depth (%d)\n", "Too many short term RPS: %d.\n", "num_long_term_ref_pics_sps %d is out of range.\n", "extended_precision_processing_flag not yet implemented\n", "high_precision_offsets_enabled_flag not yet implemented\n", "cabac_bypass_alignment_enabled_flag not yet implemented\n", "Reducing left output window to %d chroma samples to preserve alignment.\n", "Invalid visible frame dimensions: %dx%d.\n", "Displaying the whole video surface.\n", "CTB size out of range: 2^%d\n", "log2_ctb_size %d differs from the bounds of any known profile\n", "log2_ctb_size %d", "Invalid coded frame dimensions.\n", "max_transform_hierarchy_depth_inter out of range: %d\n", "max_transform_hierarchy_depth_intra out of range: %d\n", "max transform block size out of range: %d\n", "Overread SPS by %d bits\n", "Decoding SPS\n", "Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\n", "Decoding PPS\n", "SPS %u does not exist.\n", "diff_cu_qp_delta_depth %d is invalid\n", "pps_cb_qp_offset out of range: %d\n", "pps_cr_qp_offset out of range: %d\n", "num_tile_columns_minus1 out of range: %d\n", "num_tile_rows_minus1 out of range: %d\n", "Invalid tile widths.\n", "Invalid tile heights.\n", "pps_beta_offset_div2 out of range: %d\n", "pps_tc_offset_div2 out of range: %d\n", "log2_parallel_merge_level_minus2 out of range: %d\n", "chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n", "cb_qp_offset_list not tested yet.\n", "Overread PPS by %d bits\n", "!frame->hwaccel_picture_private", "libavcodec/hevc_refs.c", "Error allocating frame, DPB full.\n", "Could not find ref with POC %d\n", "Duplicate POC in a sequence: %d.\n", "Output frame with POC %d.\n", "Zero refs in the frame RPS.\n", "Invalid reference index.\n", "Decoding SEI\n", "BOTTOM Field\n", "TOP Field\n", "Skipped PREFIX SEI %d\n", "num_sps_ids_minus1 %d invalid\n", "active_parameter_set_id %d invalid\n", "Skipped SUFFIX SEI %d\n", "av_mallocz() failed\n", "Attempting to write out of bounds\n", "Attempting to read out of bounds\n", "writeoffset out of bounds\n", "invalid chunk id: %d\n", "Frame is too small (%d).\n", "Invalid INFO size (%d).\n", "HQ Profile %d", "HQ Profile %d\n", "Invalid slice size %zu.\n", "HQA Profile\n", "Invalid quantization matrix %d.\n", "Not a HQ/HQA frame.\n", "Error decoding frame.\n", "Error decoding macroblock %d at slice %d.\n", "Error decoding macroblock at %dx%d.\n", "Frame too small.\n", "Not an HQX frame.\n", "Invalid DC precision %d.\n", "Invalid stored dimensions %dx%d.\n", "Invalid format: %d.\n", "Error building tree\n", "Error generating huffman table\n", "libavcodec/huffyuvdec.c", "Error reading huffman table\n", "s->bgr32", "width must be even for this colorspace\n", "width must be a multiple of 4 for this combination of colorspace and predictor type.\n", "YUY2 output is not implemented yet\n", "prediction type not supported!\n", "BGR24 output is not implemented yet\n", "Huffyuv / HuffYUV", "libavcodec/huffyuvenc.c", "Width must be even for this colorspace.\n", "context=1 is not compatible with 2 pass huffyuv encoding\n", "Error: YV12 is not supported by huffyuv; use vcodec=ffvhuff or format=422p\n", "Error: per-frame huffman tables are not supported by huffyuv; use vcodec=ffvhuff\n", "Error: ver>2 is not supported by huffyuv; use vcodec=ffvhuff\n", "using huffyuv 2.2.0 or newer interlacing flag\n", "Ver > 3 is under development, files encoded with it may not be decodable with future versions!!!\nUse vstrict=-2 / -strict -2 to use it anyway.\n", "Error: RGB is incompatible with median predictor\n", "Format not supported!\n", "%llu ", "Allow multithreading for e.g. context=1 at the expense of determinism", "  id CIN video: expected extradata size of %d\n", "Huffman decode error.\n", "idcinvideo", "Internal error, IDCT permutation not set\nnvalid image size received: %u -> image data offset: %d\n", "Invalid palette size received: %u -> palette data offset: %d\n", "bpp %d too large for palette\n", "Masking not supported\n", "Invalid number of bitplanes: %u\n", "Invalid number of hold bits for HAM: %u\n", "bitmap (compression %i, bpp %i, ham %i)", "unknown bits_per_coded_sample", "Ignoring extra planes beyond 8\n", "decode_byterun ended before plane size\n", "Butterworth filter currently only supports low-pass filter mode\n", "Butterworth filter currently only supports even filter orders\n", "Biquad filter currently only supports high-pass and low-pass filter modes\n", "Biquad filter must have order of 2\n", "filter type is not currently implemented\n", "Number of channels > 2", "FFT init failed\n", "frame too small!\n", "frame header check failed!\n", "got %X.\n", "scalefactor out of range\n", "flcoeffs5 %f invalid\n", "Potential problem on band %i, coefficient %i: cw_len=%i\n", "Bit allocations failed\n", "Inverse quantization of coefficients failed\n", "desc", "libavcodec/imgconvert.c", "imx bitstream filter only applies to mpeg2video codec\n", "imxdump", "Motion vectors point out of the frame.\n", "Invalid picture dimensions: %d x %d!\n", "Stack overflow (corrupted binary tree)!\n", "Invalid VQ_NULL code: %d\n", "SkipCell procedure not implemented yet!\n", "Invalid cell: x=%d, y=%d, w=%d, h=%d\n", "motion vector out of array\n", "motion vector index out of range\n", "Invalid VQ table indexes! Primary: %d, secondary: %d!\n", "Attempt to apply Mode 3/4 to an INTER cell!\n", "Attempt to use Mode 11 for an INTRA cell!\n", "Unsupported coding mode: %d\n", "Mode %d: RLE code %X is not allowed at the current line\n", "Mode %d: invalid VQ data\n", "Mode %d: RLE-FB invalid counter: %d\n", "Mode %d: unsupported RLE code: %X\n", "Mode %d: attempt to read past end of buffer\n", "Read invalid number of motion vectors %d\n", "OS header checksum mismatch!\n", "Unsupported codec version!\n", "One of the y/u/v offsets is invalid\n", "Sync frame encountered!\n", "8-bit pixel format", "Halfpel motion vectors", "Invalid/unsupported mv resolution: %d!\n", "Invalid block size!\n", "Transform %d", "DCT transform", "wrong transform size!\n", "transform and block size mismatch (%d != %d)\n", "Custom scan pattern encountered!\n", "mismatching scan table!\n", "Custom quant matrix encountered!\n", "Quantization matrix %d", "The band block size does not match the configuration inherited\n", "Invalid quant matrix for 4x4 block encountered!\n", "mismatching transform_size!\n", "Too many corrections: %d\n", "band->scan not set\n", "num_MBs mismatch %d %d %d %d\n", "Empty macroblock in an INTRA picture!\n", "ref_mb unavailable\n", "motion vector %d %d outside reference\n", "Invalid picture start code!\n", "Invalid frame type: %d\n", "Sync bit is set!\n", "Only YVU9 picture format is supported!\n", "Scalability: unsupported subdivision! Luma bands: %d, chroma bands: %d\n", "Couldn't reallocate color planes!\n", "Couldn't reallocate internal structures!\n", "Bad blocks bits encountered!\n", "Allocated tile size %d mismatches parameters %d\n", "Invalid frame type: %d \n", "Invalid tile size: %d\n", "YV12 picture format", "4x4 luma blocks are unsupported!\n", "Extended transform info", "quant_mat %d too large!\n", "End marker missing!\n", "Alignment bits are not zero!\n", "Scalable inter frame in non scalable stream\n", "Invalid GOP header, skipping frames.\n", "after picture_number", "Bad H263 id\n", "Intel H263 free format not supported\n", "SAC not supported\n", "Wrong Intel H263 format\n", "Bad value for reserved field\n", "Invalid marker\n", "in dimensions", "Invalid aspect ratio.\n", "too little data for opcode 0xA\n", "too little data for opcode 0x9\n", "too little data for opcode 0x8\n", "too little data for opcode 0x7\n", "Help! Mystery opcode 0x6 seen\n", "decode problem on frame %d, @ block (%d, %d)\n", "decode finished with %d bytes left over\n", "too little data for opcode 0xD\n", "motion offset < 0 (%d)\n", "motion offset above limit (%d >= %d)\n", "Invalid decode type, corrupted header?\n", "s->mb_width>0", "libavcodec/intrax8.c", "run overflow at %dx%d i:%d\n", " UMV", " LONG", " AIC", " AIV", " LOOP", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", "before MBA", "after MBA", "after SQUANT", "cbpc damaged at %d %d\n", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "Header looks like RTP instead of H.263\n", "in PTYPE", "H263 SAC not supported\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "Bad UFEP type (%d)\n", "zero framerate\n", "rectangular slices not supported\n", "unordered slices not supported\n", "SEPB1", "SEPB2", " %5d", "ZYGO", "libavcodec/ivi.c", "buf_size - min_size >= offs", "buf_size - min_size - ref_size >= ref_offs", "Empty custom Huffman table!\n", "Error while initializing custom vlc table!\n", "ref_tile mismatch\n", "Error while decoding picture header: %d\n", "Password-protected clip!\n", "Color planes not initialized yet\n", "Band buffer points to no data!\n", "Error while decoding band header: %d\n", "Empty band encountered!\n", "MB sizes mismatch: %d vs. %d\n", "Allocated tile size %d mismatches parameters %d in ivi_process_empty_tile()\n", "MV out of bounds\n", "Tile data size is zero!\n", "Scan pattern is not set.\n", "Invalid sym encountered: %u.\n", "Too large transform\n", "Tile data_size mismatch!\n", "Error while decoding band: %d, plane: %d\n", "Corrupted tile data encountered!\n", "Tile dimension not a power of 2\n", "after init\n", "rate control\n", "dwt\n", "after dwt -> tier1\n", "after tier1\n", "tier2\n", "after tier2\n", "after rate control\n", "s->buf == pkt->data", "libavcodec/j2kenc.c", "ftyp", "jp2  ", "jp2 ", "jp2h", "ihdr", "colr", "jp2c", "end\n", "jpeg 2000 encoder", "Codec Format", "tile_width", "Tile Width", "tile_height", "Tile Height", "{\\an1}", "{\\an2}", "{\\an3}", "{\\an4}", "{\\an5}", "{\\an6}", "{\\an7}", "{\\an8}", "{\\an9}", "{\\h}", "%d %b %Y", "%H:%M", "{\\r}", "{\\i1}", "{\\i0}", "{\\b1}", "{\\b0}", "{\\u1}", "{\\u0}", "res + 1 < (2147483647)", "libavcodec/jpeg2000.c", "nreslevels2decode %d invalid or uninitialized\n", "component size too large\n", "Unknown quantization format\n", "Insufficient space for COX\n", "nreslevels %d is invalid\n", "reduction_factor too large for this bitstream, max is %d\n", "cblk size invalid\n", "extra cblk styles %X\n", "Selective arithmetic coding bypass\n", "PPx %d PPy %d invalid\n", "Insufficient space for POC\n", "Fat POC not supported", "Too many POCs (%d)", "POC Entry %d is invalid (%d, %d, %d, %d, %d, %d)\n", "width <= 1024U && height <= 1024U", "libavcodec/jpeg2000dec.c", "width*height <= 4096", "bpno became negative\n", "Segmentation symbol value incorrect\n", "Missing needed termination \n", "Mid mismatch %td in pass %d of %d\n", "End mismatch %td\n", "Transforms mismatch, MCT not supported\n", "Coords mismatch, MCT not supported\n", "missing node\n", "nonzerobits %d invalid\n", "Too many passes", "Block with length beyond 16 bits", "Block with lengthinc greater than %zu", "EPH marker not found. instead %X\n", "Block length %u or lengthinc %d is too large, left %d\n", "Progression order RLCP\n", "Progression order LRCP\n", "Progression order CPRL\n", "step_x < 32 && step_y < 32", "prc %d %d outside limits %d %d\n", "Progression order RPCL\n", "Progression order PCRL\n", "Unknown palette", "SOC marker not present\n", "Missing EOC\n", "Missing SIZ\n", "Missing SOT\n", "Invalid tpend\n", "Invalid len %d left=%d\n", "Duplicate SIZ\n", "Insufficient space for SIZ\n", "Support for image offsets", "Large Dimensions", "Invalid number of components: %d\n", "Support for %d components", "Invalid tile dimension %dx%d.\n", "Insufficient space for %d components in SIZ\n", "Invalid sample separation %d/%d\n", "Unknown pix_fmt, profile: %d, colour_space: %d, components: %d, precision: %d\ncdx[0]: %d, cdy[0]: %d\ncdx[1]: %d, cdy[1]: %d\ncdx[2]: %d, cdy[2]: %d\ncdx[3]: %d, cdy[3]: %d\n", "Insufficient space for COC\n", "Invalid compno %d. There are %d components in the image.\n", "Insufficient space for COD\n", "MCT %u with too few components (%d)\n", "Psot %u too big\n", "PLT marker at pos 0x%X\n", "unsupported marker 0x%.4X at pos 0x%X\n", "error during processing marker segment %.4x\n", "Could not find Jpeg2000 codestream atom.\n", "JPEG 2000 codestream restriction 0", "JPEG 2000 codestream restriction 1", "JPEG 2000 no codestream restrictions", "JPEG 2000 digital cinema 2K", "JPEG 2000 digital cinema 4K", "lowres", "Lower the decoding resolution by a power of two", "x <= w", "libavcodec/jpeglsdec.c", "run overflow\n", "Coding parameters maxval:%d T1:%d T2:%d T3:%d reset:%d\n", "wt %d", "LSE palette %d tid:%d wt:%d maxtab:%d\n", ">8bit palette", "oversize image", "invalid id %d\n", "JPEG-LS params: %ix%i NEAR=%i MV=%i T(%i,%i,%i) RESET=%i, LIMIT=%i, qbpp=%i, RANGE=%i\n", "JPEG params: ILV=%i Pt=%i BPP=%i, scan = %i\n", "Sample interleaved images", "16bit xfrm", "Invalid video dimensions: %dx%d\n", "video size %d invalid\n", "unsupported frame type %i\n", "n <= 1024", "libavcodec/kbdwin.c", "Frame reference does not exist\n", "frame finished with %d diff\n", "KMVC supports frames <= 320x200\n", "Extradata missing, decoding may not work properly...\n", "KMVC palette too large\n", "Block size = %i\n", "Data overrun\n", "Invalid MV\n", "Unknown compression method %i\n", "Invalid probability encountered.\n", "Integer overflow encountered in cumulative probability calculation.\n", "Invalid probability run encountered.\n", "All probabilities are 0!\n", "Scaled probabilities invalid\n", "Scaled probabilities are larger than target!\n", "Output more bytes than length (%d of %u)\n", "zero_run_line", "Too many zeros remaining.\n", "Invalid zero run escape code! (%#x)\n", "cannot allocate temporary buffer\n", "Invalid frame offsets\n", "Unsupported Lagarith frame type: %#x\n", "len %d is too small\n", "Mthread1 decoded size differs (%d != %d)\n", "Mthread2 decoded size differs (%d != %d)\n", "Decoded size differs (%d != %d)\n", "BUG! Unknown MSZH compression in frame decoder.\n", "BUG! Unknown codec in frame decoder compression switch.\n", "BUG! Unknown imagetype in pngfilter switch.\n", "BUG! Unknown imagetype in image decoder.\n", "Extradata size too small.\n", "Codec id and codec type mismatch. This should not happen.\n", "Image type is YUV 1:1:1.\n", "Image type is YUV 4:2:2.\n", "Unsupported dimensions", "Image type is RGB 24.\n", "Image type is YUV 4:1:1.\n", "Image type is YUV 2:1:1.\n", "Image type is YUV 4:2:0.\n", "Unsupported image format %d.\n", "Compression enabled.\n", "No compression.\n", "Unsupported compression format for MSZH (%d).\n", "BUG! Unknown codec in compression switch.\n", "Multithread encoder flag set.\n", "Nullframe insertion flag set.\n", "PNG filter flag set.\n", "Unknown flag set (%d).\n", "Extradata size must be >= 12 instead of %i\n", "LOCO codec version %i", "Unknown colorspace, index = %i\n", "lossy:%i, version:%i, mode: %i\n", "libavcodec/loco.c", "Input data too small.\n", "libavcodec/lpc.c", "s->maxbits >= 9 && s->maxbits <= 12", "libavcodec/lzwenc.c", "invalid dc code at\n", "internal error in cmp function selection\n", "VX04\f", "VOXj\n", "VOXq ", "VOXr(", "VOXs0", "VOXv ", "VOXw0", "VOXx@", "VOXyP", "VOXz`", "Could not find tag %08X\n", "Unsupported number of channels: %i\n", "This version does not support %d kHz - %d kbit/s/ch mode.\n", "Invalid window type, broken sample?\n", "ibus", "cfshyYpo", "{\\%c1}", "{\\c&H%06X&}", "{\\fn%.*s}", "{\\fs%d}", "{\\pos(%d,%d)}", "{\\%c0}", "{\\c}", "{\\fn}", "{\\fs}", "insufficient data\n", "invalid width/height!\n", "Resolution changing", "decoding must start with keyframe\n", "No such backreference! Buggy sample.\n", "Error decoding block.\n", "input is truncated\n", "AVI1", "input is not MJPEG/AVI1\n", "mjpeg2jpeg", "mjpega bitstream filter only applies to mjpeg codec\n", "mjpg", "bitstream already formatted\n", "could not find SOS marker in bitstream\n", "mjpegadump", "not mjpeg-b (bad fourcc)\n", "field size: 0x%x\n", "second_field_offs is %d and size is %d\n", "second field offs: 0x%x\n", "dqt is %d and size is %d\n", "dqt offs: 0x%x\n", "dht is %d and size is %d\n", "dht offs: 0x%x\n", "sof is %d and size is %d\n", "sof offs: 0x%x\n", "sos is %d and size is %d\n", "sos offs: 0x%x\n", "sod offs: 0x%x\n", "no picture\n", "QP: %d\n", "Single field\n", "nb_codes <= 256", "libavcodec/mjpegdec.c", "nb_components>=1 && nb_components<=4", "mjpeg_decode_dc: bad vlc: %d:%d (%p)\n", "dqt: len %d is too large\n", "dqt: invalid precision\n", "index=%d\n", "qscale[%d]: %d\n", "dht: len %d is too large\n", "class=%d index=%d nb_codes=%d\n", "using external huffman table\n", "error using external huffman table, switching back to internal\n", "bottom field first\n", "AVID: len:%d %d\n", "MJPG", "bits %d is invalid\n", "Changeing bps to %d\n", "lowres is not possible with lossless jpeg\n", "sof0: picture: %dx%d\n", "nb_components changing in interlaced picture\n", "JPEG-LS that is not <= 8 bits/component or 16-bit gray", "quant_index is invalid\n", "Invalid sampling factor in component %d %d:%d\n", "component %d %d:%d id: %d quant:%d\n", "Subsampling in JPEG-LS", "progressively coded interlaced picture", "pix fmt id %x\n", "s->nb_components == 3", "s->nb_components == 4", "Unhandled pixel format 0x%x bits:%d\n", "lowres not supported for weird subsampling\n", "Unsupported number of components %d\n", "Could not get a pixel format descriptor.\n", "decode_sof0: error, len(%d) mismatch\n", "Unsupported coding and pixel format combination\n", "lossless", "sequential DCT", "PRCT", "Can not process SOS before SOF, skipping\n", "s->picture_ptr->data[0]", "decode_sos: nb_components (%d) unsupported\n", "decode_sos: invalid len (%d)\n", "component: %d\n", "decode_sos: index(%d) out of components\n", "%s %s p:%d >>:%d ilv:%d bits:%d skip:%d %s comp:%d\n", "s->picture_ptr == s->picture", "SS/SE %d/%d is invalid\n", "error count: %d\n", "ZRL overflow: %d\n", "mb_bitmask_size mismatches\n", "overread %d\n", "error dc\n", "error y=%d x=%d\n", "AVRn interlaced picture marker found\n", "decode_sos: ac/dc index out of range\n", "CJPG", "escaping removed %td bytes\n", "Invalid escape sequence\n", "MJPEG packet 0x%x too big (%d/%d), corrupt data?\n", "marker=%x avail_size_in_buf=%td\n", "invalid buffer\n", "startcode: %X\n", "restart marker: %d\n", "APPx (%s / %8X) len=%d\n", "polarity %d\n", "mjpeg: JFIF header found (version: %x.%x) SAR=%d/%d\n", "mjpeg: Adobe header found, transform=%d\n", "Pegasus lossless jpeg header found\n", "unknown colorspace %d\n", "Mismatching LJIF tag\n", "COLR %d\n", "XFRM %d\n", "_JPSJPS_\n", "mjpeg: invalid TIFF header in EXIF data\n", "mjpeg: error decoding EXIF data\n", "mjpeg: Apple MJPEG-A header found\n", "mjpeg: error, decode_app parser read over the end\n", "comment: '%s'\n", "AVID", "CS=ITU601", "Intel(R) JPEG Library, version 1", "Metasoft MJPEG Codec", "MULTISCOPE II", "huffman table decode error\n", "Found EOI before any SOF, ignoring\n", "restart interval: %d\n", "mjpeg: unsupported coding type (%x)\n", "marker parser used %d bytes (%d bits)\n", "EOI missing, emulating\n", "No JPEG data found in image\n", "avctx->pix_fmt == AV_PIX_FMT_YUVJ444P || avctx->pix_fmt == AV_PIX_FMT_YUV444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ440P || avctx->pix_fmt == AV_PIX_FMT_YUV440P || avctx->pix_fmt == AV_PIX_FMT_YUVA444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ420P || avctx->pix_fmt == AV_PIX_FMT_YUV420P || avctx->pix_fmt == AV_PIX_FMT_YUV420P16LE|| avctx->pix_fmt == AV_PIX_FMT_YUVA420P || avctx->pix_fmt == AV_PIX_FMT_YUVA420P16LE|| avctx->pix_fmt == AV_PIX_FMT_GBRP || avctx->pix_fmt == AV_PIX_FMT_GBRAP", "w > 0", "avctx->pix_fmt == AV_PIX_FMT_YUVJ444P || avctx->pix_fmt == AV_PIX_FMT_YUV444P || avctx->pix_fmt == AV_PIX_FMT_YUVJ422P || avctx->pix_fmt == AV_PIX_FMT_YUV422P || avctx->pix_fmt == AV_PIX_FMT_YUVJ420P || avctx->pix_fmt == AV_PIX_FMT_YUV420P || avctx->pix_fmt == AV_PIX_FMT_YUV440P || avctx->pix_fmt == AV_PIX_FMT_YUVJ440P || avctx->pix_fmt == AV_PIX_FMT_YUVA444P || avctx->pix_fmt == AV_PIX_FMT_YUVA420P || avctx->pix_fmt == AV_PIX_FMT_YUVA420P16LE|| avctx->pix_fmt == AV_PIX_FMT_GBRP || avctx->pix_fmt == AV_PIX_FMT_GBRAP", "decode frame unused %td bytes\n", "JFIF", "Adob", "LJIF", "xfrm", "_JPS", "Exif", "MJPEG (Motion JPEG)", "MJPEG decoder", "extern_huff", "Use external huffman table.", "If you have a device that plays AMV videos, please test if videos with such heights work with it and report your findings to ffmpeg-devel@ffmpeg.org\n", "JPEG does not support resolutions above 65500x65500\n", "amv encoder", "mjpeg encoder", "libavcodec/mjpegenc_common.c", "avctx->codec->priv_data_size == sizeof(MpegEncContext)", "Buffer reallocation failed\n", "packet too short, unable to read major sync\n", "major sync info header checksum error\n", "ff_combine_frame failed\n", "mlpparse: Parity check failed.\n", "libavcodec/mlpdec.c", "Filters may change only once per access unit.\n", "%cIR filter order %d is greater than maximum %d.\n", "%cIR filter coeff_bits must be between 1 and 16.\n", "Sum of coeff_bits and coeff_shift for %cIR filter must be 16 or less.\n", "FIR filter has state data specified.\n", "invalid/unknown bits per sample\n", "Channel group 2 cannot have more bits per sample than group 1.\n", "Channel groups with differing sample rates are not currently supported.\n", "invalid/unknown sampling rate\n", "Sampling rate %d is greater than the supported maximum (%d).\n", "Block size %d is greater than the supported maximum (%d).\n", "Block size pow2 %d is greater than the supported maximum (%d).\n", "MLP only supports up to 2 substreams.\n", "%d substreams (more than the maximum supported by the decoder)", "unexpected stream_type %X in MLP", "unexpected stream_type %X in !MLP", "Mono stream with 2 substreams, ignoring 2nd\n", "Stream parameters not seen; skipping frame.\n", "There must be no extraword for MLP.\n", "Invalid nonrestart_substr.\n", "Indicated length of substream %d data goes off end of packet.\n", "Indicated end offset of substream %d data is smaller than calculated start offset.\n", "Parity check failed.\n", "restart header sync incorrect (got 0x%04x)\n", "MLP must have 0x31ea sync word.\n", "Max matrix channel cannot be greater than %d.\n", "Max channel must be equal max matrix channel.\n", "%d channels (more than the maximum supported by the decoder)", "Substream min channel cannot be greater than max channel.\n", "Extracting %d-channel downmix from substream %d. Further substreams will be skipped.\n", "Extracting %d-channel downmix (0x%llx) from substream %d. Further substreams will be skipped.\n", "Lossless check failed - expected %02x, calculated %02x.\n", "Assignment of matrix channel %d to invalid output channel %d", "restart header checksum error\n", "Invalid blocksize.\n", "Matrices may change only once per access unit.\n", "Number of primitive matrices cannot be greater than %d.\n", "Invalid channel %d specified as output from matrix.\n", "Too many fractional bits specified.\n", "Total filter orders too high.\n", "FIR and IIR filters must use the same precision.\n", "Invalid huff_lsbs.\n", "Substreams with VLC block size check info", "too many audio samples in frame\n", "block data length mismatch\n", "End of stream indicated.\n", "Substream %d parity check failed.\n", "Substream %d checksum failed.\n", "No restart header present in substream %d.\n", "channel count mismatch\n", "No samples to output.\n", "substream %d length mismatch\n", "me_method is only allowed to be set to zero and epzs; for hex,umh,full and others see dia_size\n", "ME_MAP size may be a little small for the selected diamond size\n", "s->quarter_sample==0 || s->quarter_sample==1", "libavcodec/motion_est.c", "s->linesize == c->stride", "s->uvlinesize == c->uvstride", "s->pict_type==AV_PICTURE_TYPE_P", "range <= 16 || !s->msmpeg4_version", "range <=256 || !(s->codec_id == AV_CODEC_ID_MPEG2VIDEO && s->avctx->strict_std_compliance >= 0)", "extradata too small\n", "invalid code size %d/%d\n", "too many codes\n", "too few codes\n", "mov2textsub", "text2movsub", "{\\q1}", "{\\q2}", "{\\fn%s}", "{\\2c&H%02x%02x%02x&}", "{\\1c&H000000&}{\\2c&HFFFFFF&}", "{\\2c&H000000&}", "{\\1c&HFFFFFF&}{\\2c&H000000&}", "3GPP Timed Text subtitle", "Extradata invalid %d\n", "Could not find bitrate_index.\n", "mp3decomp", "Too small extradata size (%i)!\n", "Too many bands: %i\n", "IS: %d, MSS: %d, TG: %d, LFL: %d, bands: %d\n", "Initing VLC\n", "Cannot init SCFI VLC\n", "Cannot init DSCF VLC\n", "Cannot init HDR VLC\n", "Cannot init QUANT VLC %i,%i\n", "packet size is too small (%i bytes)\n", "subband index invalid\n", "Error decoding frame: used %i of %i bits\n", "mpc7", "Multichannel MPC SV8", "maxband %d too large\n", "mpc8", "static_size <= (sizeof(table) / sizeof((table)[0]))", "libavcodec/mpeg12.c", "TMPGEXS", "first field missing\n", "hardware accelerator failed to decode first field\n", "VCR2", "BW10", "matrix damaged\n", "intra matrix specifies invalid DC quantizer %d, ignoring\n", "skip with previntra\n", "invalid mb type in I Frame at %d %d\n", "invalid mb type in P Frame at %d %d\n", "invalid mb type in B Frame at %d %d\n", "after concealment_motion_vectors", "!s->progressive_sequence", "libavcodec/mpeg12dec.c", "MT_DMV in progressive_sequence\n", "00 motion_type at %d %d\n", "invalid cbp %d at %d %d\n", "mb_y < s->mb_height", "qscale == 0\n", "first mb_incr damaged\n", "initial skip overflow\n", "qp:%d fc:%2d%2d%2d%2d %s %s %s %s %s dc:%d pstruct:%d fdct:%d cmv:%d qtype:%d ivlc:%d rff:%d %s\n", "Invalid MXF data found in video stream\n", "end mismatch left=%d %0X\n", "mb incr damaged\n", "slice mismatch\n", "skipped MB in I frame at %d %d\n", "SLIF", "avctx->thread_count > 1", "%3X at %td left %d\n", "Invalid horizontal or vertical size value.\n", "aspect ratio has forbidden 0 value\n", "frame_rate_index %d is invalid\n", "in sequence header", "sequence header damaged\n", "vbv buffer: %d, bitrate:%lld, aspect_ratio_info: %d \n", "ignoring SEQ_START_CODE after %X\n", "ignoring extra picture following a frame-picture\n", "Invalid frame dimensions %dx%d.\n", "vbv_delay %d, ref %d type:%d\n", "ignoring pic after %X\n", "Chroma format invalid\n", "after bit rate extension", "profile: %d, level: %d ps: %d cf:%d vbv buffer: %d, bitrate:%lld\n", "ignoring seq ext after %X\n", "sde w:%d, h:%d\n", "pde (%d,%d) (%d,%d) (%d,%d)\n", "Missing picture start code, guessing missing values\n", "ignoring pic cod ext after %X\n", "GOP (%s) closed_gop=%d broken_link=%d\n", "ignoring GOP_START_CODE after %X\n", "interlaced frame in progressive sequence, ignoring\n", "picture_structure %d invalid, ignoring\n", "invalid frame_pred_frame_dct\n", "slice too small\n", "slice below image (%d >= %d)\n", "Missing picture start code\n", "current_picture not initialized\n", "mpeg_decode_postinit() failure\n", "picture in extradata\n", "mpegvideo", "4:2:2", "Spatially Scalable", "SNR Scalable", "Simple", "Reserved", "MPEG1/2 does not support %d/%d fps, there may be AV sync issues\n", "Set profile and level\n", "Only High(1) and 4:2:2(0) profiles support 4:2:2 color sampling\n", "Width / Height is invalid for MPEG2\n", "Width or Height are not allowed to be multiples of 4096\nadd '-strict %d' if you want to use them anyway.\n", "Drop frame time code only allowed with 1001/30000 fps\n", "s->drop_frame_timecode == !!(s->tc.flags & AV_TIMECODE_FLAG_DROPFRAME)", "libavcodec/mpeg12enc.c", "s->picture_structure == 3", "s->mb_skip_run == 0", "mpeg2video encoder", "mpeg1video encoder", "gop_timecode", "MPEG GOP Timecode in hh:mm:ss[:;.]ff format", "intra_vlc", "Use MPEG-2 intra VLC table.", "drop_frame_timecode", "Timecode is in drop frame format.", "scan_offset", "Reserve space for SVCD scan offset user data.", "non_linear_quant", "Use nonlinear quantizer.", "alternate_scan", "Enable alternate scantable.", "seq_disp_ext", "Write sequence_display_extension blocks.", "never", "always", "mpv_flags", "Flags common for all mpegvideo-based encoders.", "skip_rd", "RD optimal MB level residual skipping", "strict_gop", "Strictly enforce gop size", "qp_rd", "Use rate distortion optimization for qp selection", "cbp_rd", "use rate distortion optimization for CBP", "normalize adaptive quantization", "always try a mb with mv=<0,0>", "luma_elim_threshold", "single coefficient elimination threshold for luminance (negative values also consider dc coefficient)", "chroma_elim_threshold", "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient)", "quantizer_noise_shaping", "error_rate", "Simulate errors in the bitstream to test error concealment.", "qsquish", "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function)", "rc_qmod_amp", "experimental quantizer modulation", "rc_qmod_freq", "rc_eq", "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", "rc_init_cplx", "initial complexity for 1-pass encoding", "rc_buf_aggressivity", "currently useless", "border_mask", "increase the quantizer for macroblocks close to borders", "lmin", "minimum Lagrange factor (VBR)", "lmax", "maximum Lagrange factor (VBR)", "pbias", "inter quant bias", "rc_strategy", "ratecontrol method", "motion_est", "motion estimation algorithm", "zero", "epzs", "xone", "The mpeg4_unpack_bframes bitstream filter is only useful for mpeg4.\n", "Updating DivX userdata (remove trailing 'p') in extradata.\n", "Found %d VOP startcode(s) in this packet.\n", "Missing one N-VOP packet, discarding one B-frame.\n", "Found %d VOP headers in one packet, only unpacking one.\n", "Skipping N-VOP.\n", "Updating DivX userdata (remove trailing 'p').\n", "mpeg4_unpack_bframes", "Failed to parse extradata\n", "DivX%db%d%c", "FFmpe%*[^b]b%d", "FFmpeg v%d.%d.%d / libavcodec build: %d", "Lavc%d.%d.%d", "ffmpeg", "XviD%d", "before sprite_trajectory", "after sprite_trajectory", "after new_pred", "scalability ", "qpel ", "partition ", "rvlc ", "illegal chroma format\n", "after first_half_bitrate", "after latter_half_bitrate", "after first_half_vbv_buffer_size", "after first_half_vbv_occupancy", "after latter_half_vbv_occupancy", "only rectangular vol supported\n", "Gray shape not supported\n", "before time_increment_resolution", "framerate==0\n", "before fixed_vop_rate", "before width", "before height", "after height", "MPEG4 OBMC not supported (very likely buggy encoder)\n", "Static Sprites not supported\n", "after sprite_width", "after sprite_height", "after sprite_left", "after sprite_top", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "insufficient data for custom matrix\n", "VOL Header truncated\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "new pred not supported\n", "reduced resolution VOP not supported\n", "scalability not supported\n", "tb %d/%d, tincrbits:%d, qp_prec:%d, ps:%d,  %s%s%s%s\n", "MP4S", "illegal dc vlc\n", "dc marker bit missing\n", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "reverse esc missing\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "texture corrupted at %d %d %d\n", "mcbpc damaged at %d %d\n", "P cbpy damaged at %d %d\n", "illegal MB_type\n", "marker does not match f_code\n", "illegal mb_num in video packet (%d %d) \n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "untested\n", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "mcbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "slice below monitor ...\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "cbpy corrupted at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "XVIX", "UMP4", "DIVX", "XVID", "RMP4", "ZMP4", "SIPP", " VOLC", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "reserved", "System start", "GOP header invalid\n", "in gop_header", "low_delay flag set incorrectly, clearing it\n", "before time_increment", "time_increment_bits %d is invalid in relation to the current bitstream, this is likely caused by a missing VOL header\n", "time_increment_bits set to %d bits, based on bitstream analysis\n", "before vop_coded", "vop not coded\n", "after width", "after hor_spat_ref", "sprite_brightness_change not supported\n", "static sprite not supported\n", "Error, header damaged or not MPEG4 header (qscale=0)\n", "Error, header damaged or not MPEG4 header (f_code=0)\n", "Error, header damaged or not MPEG4 header (b_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d time:%lld tincr:%d\n", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "WV1F", "QMP4", "Video uses a non-standard and wasteful way to store B-frames ('packed B-frames'). Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n", "MPEG4 Video Decoder", "quarter_sample", "1/4 subpel MC", "divx_packed", "divx style packed b frames", "Simple Profile", "Simple Scalable Profile", "Core Profile", "Main Profile", "N-bit Profile", "Scalable Texture Profile", "Simple Face Animation Profile", "Basic Animated Texture Profile", "Hybrid Profile", "Advanced Real Time Simple Profile", "Code Scalable Profile", "Advanced Coding Profile", "Advanced Core Profile", "Advanced Scalable Texture Profile", "Simple Studio Profile", "Advanced Simple Profile", "dimensions too large for MPEG-4\n", "time_incr >= 0", "libavcodec/mpeg4videoenc.c", "time_incr %d too large\n", "MPEG4 encoder", "data_partitioning", "Use data partitioning.", "Interlaced error concealment is not fully implemented\n", "MP3ADU full parser", "offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))", "libavcodec/mpegaudiodec_template.c", "Codec extradata missing or too short.\n", "Invalid channel config number.\n", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "overread, skip %d enddists: %d %d\n", "bits_left=%d\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "discarding ID3 tag\n", "incorrect frame size - multiple frames in buffer?\n", "Error while decoding MPEG audio frame.\n", "Header missing\n", "Invalid frame header\n", "Frame size smaller than header size\n", "frame channel count exceeds codec channel count\n", "failed to decode channel %d\n", "failed to decode all channels\n", "Bad header, discard block\n", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "encoding %d channel(s) is not allowed in mp2\n", "Sampling rate %d is not allowed in mp2\n", "bitrate %d is not allowed in mp2\n", "*padding >= 0", "libavcodec/mpegaudioenc_template.c", "mp2fixed", "MP2 fixed point (MPEG audio layer 2)", "Image too small, temporary buffers cannot function\n", "pic->f->data[0]", "libavcodec/mpegpicture.c", "!pic->f->buf[0]", "get_buffer() failed (%d %p)\n", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (stride changed)\n", "get_buffer() failed (uv stride mismatch)\n", "get_buffer() failed to allocate context scratch buffers.\n", "Error allocating a picture.\n", "Internal error, picture buffer overflow\n", "decoding to AV_PIX_FMT_NONE is not supported.\n", "too many threads/slices (%d), reducing to %d\n", "s != s1", "libavcodec/mpegvideo.c", "!s->picture || s->picture != s1->picture", "Failed to allocate context scratch buffers.\n", "Context scratch buffers could not be allocated due to unknown size.\n", "releasing zombie picture\n", "allocating dummy last picture for B frame\n", "warning: first frame is no keyframe\n", "allocate dummy last picture for field based first keyframe\n", "s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f->buf[0])", "Adding %d MVs info to frame %d\n", "New frame, type: %c\n", "ref->size >= offset + s->mb_stride * ((f->height+15)/16)", "DCT coeffs of MB at %dx%d:\n", "libavcodec/mpegvideo_enc.c", "warning, clipping %d dct coefficients to %d..%d\n", "Warning, QMAT_SHIFT is larger than %d, overflows possible\n", "Invalid pts (%lld) <= last (%lld)\n", "Warning: AVFrame.pts=? trying to guess (%lld)\n", "scale >= 0 && scale <= 3", "illegal b frame strategy\n", "warning, too many b frames in a row\n", "s->pb.buf == avctx->internal->byte_buffer", "reencoding frame due to VBV\n", "s->avctx->rc_max_rate", "stuffing too large\n", "vbv buffer overflow\n", "Internal error, negative bits\n", "vbv_delay < 0xFFFF", "only YUV420 and YUV422 are supported\n", "only YUV420 is supported\n", "keyframe interval too large!, reducing it from %d to %d\n", "Too many B-frames requested, maximum is %d.\n", "intra dc precision must be positive, note some applications use 0 and some 8 as base meaning 8bit, the value must not be smaller than that\n", "intra dc precision too large\n", "Automatically choosing VBV buffer size of %d kbyte\n", "Either both buffer size and max rate or neither must be specified\n", "Warning min_rate > 0 but min_rate != max_rate isn't recommended!\n", "bitrate below min bitrate\n", "bitrate above max bitrate\n", "impossible bitrate constraints, this will fail\n", "VBV buffer too small for bitrate\n", "bitrate tolerance %d too small for bitrate %d, overriding\n", "Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\n", "4MV not supported by codec\n", "OBMC is only supported with simple mb decision\n", "qpel not supported by codec\n", "b frames not supported by codec\n", "max b frames must be 0 or positive for mpegvideo based encoders\n", "Invalid pixel aspect ratio %i/%i, limit is 255/255 reducing\n", "H.263 does not support resolutions above 2048x1152\n", "w/h must be a multiple of 4\n", "MPEG-1 does not support resolutions above 4095x4095\n", "MPEG-2 does not support resolutions above 16383x16383\n", "width and height must be a multiple of 16\n", "width and height must be a multiple of 4\n", "width must be multiple of 2\n", "interlacing not supported by codec\n", "mpeg2 style quantization not supported by codec\n", "CBP RD needs trellis quant\n", "QP RD needs mbd=2\n", "closed gop with scene change detection are not supported yet, set threshold to 1000000000\n", "low delay forcing is only available for mpeg2\n", "b frames cannot be used with low delay\n", "non linear quant only supports qmax <= 28 currently\n", "multi threaded encoding not supported by codec\n", "automatic thread number detection not supported by codec, patch welcome\n", "framerate not set\n", "notice: b_frame_strategy only affects the first pass\n", "removing common factors from framerate\n", "qmin and or qmax are invalid, they must be 0 < min <= max\n", "intra_quant_bias = %d inter_quant_bias = %d\n", "timebase %d/%d not supported by MPEG 4 standard, the maximum admitted value for the timebase denominator is %d\n", "The specified picture size of %dx%d is not valid for the H.261 codec.\nValid sizes are 176x144, 352x288\n", "The specified picture size of %dx%d is not valid for the H.263 codec.\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\n", "colorspace not supported in jpeg\n", "Cannot reallocate putbit buffer\n", "8*buffer_size > s->size_in_bits", "encoded partitioned frame too large\n", "illegal MB type\n", "wmv1 encoder", "msmpeg4v3 encoder", "msmpeg4v2 encoder", "H.263p encoder", "Use unlimited motion vectors.", "Use alternative inter VLC.", "obmc", "use overlapped block motion compensation.", "structured_slices", "Write slice start position at every GOB header instead of just GOB number.", "H.263 / H.263-1996", "H.263 encoder", "mb_info", "emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size", "MPEG motion vector out of boundary (%d %d)\n", "Failed to set dimensions\n", "I frame too long, ignoring ext header\n", "invalid startcode\n", "invalid picture type\n", "invalid qscale\n", "invalid slice height %d\n", "error, slice code was %X\n", "qscale:%d rlc:%d rl:%d dc:%d mbrl:%d slice:%d   \n", "skip:%d rl:%d rlc:%d dc:%d mv:%d mbrl:%d qp:%d   \n", "dc overflow- block: %d qscale: %d//\n", "dc overflow+ L qscale: %d//\n", "dc overflow+ C qscale: %d//\n", "ignoring overflow at %d %d\n", "cbpc %d invalid at %d %d\n", "cbpy %d invalid at %d %d\n", "\nerror while decoding block: %d x %d (%d)\n", "illegal MV code at %d %d\n", "s->flipflop_rounding==0", "libavcodec/msmpeg4enc.c", "unsupported bits per sample\n", "MS RLE: bytestream overrun, %dx%d left\n", "Unused stream byte %X", "MS RLE: frame/stream ptr just went out of bounds (copy)\n", "MS RLE: frame ptr just went out of bounds (run) %d %d %d\n", "MS RLE: ended frame decode with %d bytes left over\n", "Next line is beyond picture bounds (%d bytes left)\n", "Skip beyond picture bounds\n", "bytestream overrun\n", "MS RLE warning: no end-of-picture code\n", "Unknown depth %d\n", "Insufficient extradata size %d\n", "Insufficient extradata size: expected %u got %d\n", "Frame dimensions %dx%d too large", "Frame dimensions %dx%d too small", "Encoder version %u.%u\n", "Header version doesn't match codec tag\n", "Incorrect number of changeable palette entries: %d\n", "%d free colour(s)\n", "Display dimensions %ux%u\n", "Coded dimensions %dx%d\n", "%g frames per second\n", "Bitrate %u bps\n", "Max. lead time %g ms\n", "Max. lag time %g ms\n", "Max. seek time %g ms\n", "Insufficient extradata size %d for v2\n", "Slice split %d\n", "Incorrect number of used colours %d\n", "Used colours %d\n", "Cannot allocate mask plane\n", "implicit_rect && used_rects > 0\n", "Unexpected grandchildren\n", "frame->linesize[0] == ctx->last_pic->linesize[0]", "libavcodec/mss2.c", "Missing keyframe\n", "repeat overflow\n", "header error\n", "ff_mpv_frame_start error\n", "Asymmetric WMV9 rectangle subsampling", "f->linesize[1] == f->linesize[2]", "buffer not fully consumed\n", "Image dimensions should be a multiple of 16.\n", "Cannot allocate buffer\n", "Frame should have at least %d bytes, got %d instead\n", "Invalid frame type %X\n", "Invalid frame dimensions %dx%d +%d,%d\n", "Invalid quality setting %d\n", "Keyframe without data found\n", "Error decoding block %d,%d\n", "Invalid frame dimensions %dx%d\n", "Invalid frame type %d\n", "Empty frame found but it is not a skip frame.\n", "Error decoding DCT block %d,%d\n", "Skip block in intra frame\n", " MS Video-1 warning: stream_ptr out of bounds (%d >= %d)\n", "Microsoft Video-1", "dimension mismatch\n", "bitmap feature", "BottomUp", "quantization table decode error\n", "MXM bitmask is not complete\n", "MXM bitmask memory allocation error\n", "Completion bitmask memory allocation error\n", "SOF data decode error\n", "Interlaced mode not supported in MxPEG\n", "Can not process SOS without SOF data, skipping\n", "First picture has no SOF, skipping\n", "Non-key frame has no MXM, skipping\n", "Picture dimensions stored in SOF and MXM mismatch\n", "Dimensions of current and reference picture mismatch\n", "Nellymoser works only with 8000, 16000, 11025, 22050 and 44100 sample rate\n", "noise", "not a nuv video frame\n", "Too small NUV video frame\n", "Unknown secondary frame header (wrong codec_tag?)\n", "uncompressed frame too short\n", "0x500 version should be mono\n", "Stereo mode support is not good, patch is welcome\n", "Cannot init VLC\n", "enh bit set\n", "stereo mode window for mono audio\n", "Invalid band type run\n", "Invalid scale value %d\n", "Too large golomb code in get_egolomb.\n", "Invalid subframe size %d\n", "No subframes present\n", "on2avc", "NULL", "libavcodec/options.c", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "AVSubtitleRect", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVCodecContext", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "use 1/4-pel motion compensation", "loop", "use loop filter", "qscale", "use fixed qscale", "use gmc", "input_preserved", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "gray", "only decode/encode grayscale", "emu_edge", "do not draw edges", "psnr", "error[?] variables will be set during encoding", "truncated", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "allow non-spec-compliant speedup tricks", "flags2", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "export_mvs", "export motion vectors through frame side data", "skip_manual", "do not skip samples and export skip information as frame side data", "me_method", "set motion estimation method", "zero motion estimation (fastest)", "full", "full motion estimation (slowest)", "EPZS motion estimation (default)", "esa motion estimation (alias for full)", "tesa", "tesa motion estimation", "diamond motion estimation (alias for EPZS)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter", "iter motion estimation", "time_base", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "qcomp", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "qblur", "video quantizer scale blur (VBR)", "qmin", "minimum video quantizer scale (VBR)", "maximum video quantizer scale (VBR)", "qdiff", "maximum difference between the quantizer scales (VBR)", "set maximum number of B frames between non-B-frames", "b_qfactor", "QP factor between P- and B-frames", "b_strategy", "strategy to choose between I/P/B-frames", "RTP payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "work around not autodetected encoder bugs", "autodetect", "old_msmpeg4", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal VLC bug (autodetected per FOURCC)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "strict", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "normal", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "mpeg_quant", "use MPEG quantizers instead of H.263", "deprecated, use encoder private options instead", "rc_override_count", "maxrate", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minrate", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "bufsize", "set ratecontrol buffer size (in bits)", "i_qfactor", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "fast integer", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "deblock", "use strong deblock filter for damaged MBs", "favor_inter", "favor predicting from the previous frame", "prediction method", "plane", "median", "aspect", "sample aspect ratio", "debug", "print specific debug info", "pict", "picture info", "rate control", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "green_metadata", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "bugs", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "vismv", "visualize motion vectors (MVs) (deprecated)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "full-pel ME compare function", "cmp_func", "subcmp", "sub-pel ME compare function", "mbcmp", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast (default)", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "5/3 wavelet, only used in snow", "9/7 wavelet, only used in snow", "dctmax", "chroma", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "subq", "sub-pel motion estimation quality", "dtg_active_format", "me_range", "limit motion vectors range (1023 for DivX player)", "global_quality", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp (default)", "use fewest bits", "use best rate distortion", "stream_codec_tag", "sc_threshold", "scene change threshold", "noise reduction", "rc_init_occupancy", "number of bits which should be loaded into the rc buffer before decoding starts", "autodetect a suitable number of threads to use", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "discard no frame", "default", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "nointra", "discard all frames except I frames", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscale frames for dynamic B-frame decision", "keyint_min", "minimum interval between IDR-frames", "refs", "reference frames to consider for motion compensation", "chromaoffset", "chroma QP offset from luma", "trellis", "rate-distortion optimal quantization", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "b_sensitivity", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "request_channels", "set desired number of audio channels", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color primaries", "color_primaries_type", "bt709", "BT.709", "unspecified", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "film", "Film", "bt2020", "BT.2020", "color_trc", "color transfer characteristics", "color_trc_type", "gamma22", "gamma28", "linear", "Linear", "log_sqrt", "Log square root", "iec61966_2_4", "IEC 61966-2-4", "bt1361", "BT.1361", "iec61966_2_1", "IEC 61966-2-1", "bt2020_10bit", "BT.2020 - 10 bit", "bt2020_12bit", "BT.2020 - 12 bit", "colorspace", "color space", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "BT.2020 NCL", "bt2020_cl", "BT.2020 CL", "color_range", "color range", "color_range_type", "mpeg", "MPEG (219*2^(n-8))", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "Bottom", "log_level_offset", "set the log level offset", "slices", "number of slices, used in parallelized encoding", "thread_type", "select multithreading type", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "dump_separator", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "pixel_format", "set pixel format", "video_size", "set video size", "Multichannel configuration without extradata.\n", "Invalid extradata size: %d\n", "Extradata version %d", "Zero channel count specified in the extadata\n", "Channel mapping 0 is only specified for up to 2 channels\n", "Invalid stream/stereo stream count: %d/%d\n", "Channel mapping 1 is only specified for up to 8 channels\n", "Mapping type %d", "Invalid channel map for output channel %d: %d\n", "Invalid start/end band: %d %d\n", "Invalid CELT frame size: %d\n", "Invalid number of output channels: %d\n", "Error parsing Ogg extradata.\n", "Error parsing Opus packet header.\n", "Invalid parameters passed to the SILK decoder.\n", "LBRR frames present; this is unsupported\n", "in_sample_fmt", "out_sample_fmt", "in_channel_layout", "out_channel_layout", "out_sample_rate", "filter_size", "Error parsing the packet header.\n", "Mismatching coded sample count in substream %d.\n", "in_sample_rate", "Wrong number of flushed samples: %d\n", "Wrong number of CELT delay samples.\n", "Error opening the resampler.\n", "Error feeding initial silence to the resampler.\n", "Error decoding a SILK frame.\n", "Error resampling SILK data.\n", "Invalid redundancy frame size.\n", "Error decoding the redundancy frame.\n", "Spurious CELT delay samples present.\n", "Error decoding an Opus frame.\n", "Error flushing the resampler.\n", "Opus", "width %d and height %d must be multiplie of 4.\n", "unknown/invalid code", "GRAYSCALE", "GRAYSCALE_ALPHA", "RGB_ALPHA", "P7\nWIDTH %d\nHEIGHT %d\nDEPTH %d\nMAXVAL %d\nTUPLTYPE %s\nENDHDR\n", "index > -0x20000000", "libavcodec/parser.c", "Failed to reallocate parser buffer to %d\n", "unsupported sample depth (%d)\n", "reserved sample rate (%d)\n", "reserved channel configuration (%d)\n", "PCM DVD unsupported sample depth %i\n", "block_size has changed %d != %d\n", "PCM signed 16|20|24-bit big-endian for DVD media", "codec ids mismatch\n", "Invalid PCM packet, data has size %d but at least a size of %d was expected\n", "PCM channels out of bounds\n", "this is not PCX encoded data\n", "invalid image dimensions\n", "PCX data is corrupted\n", "invalid PCX file\n", "File is too short\n", "expected palette after image data\n", "image data possibly corrupted\n", "unsupported pixfmt\n", "buffer too small\n", "Too many palettes in epoch\n", "Too many objects in epoch\n", "Buffer dimension %d larger than the expected RLE data %d\n", "Bitmap dimensions larger than video.\n", "Invalid number of presentation objects %d\n", "Insufficent space for object\n", "Subtitle out of video bounds. x = %d, y = %d, video width = %d, video height = %d.\n", "RLE data length %u is %u bytes shorter than expected\n", "Decoded %d pixels, when line should be %d pixels\n", "Insufficient RLE data for subtitle\n", "Unknown subtitle segment type 0x%x, length %d\n", "Invalid palette id %d\n", "Invalid object id %d\n", "pgssub", "PGS subtitle decoder", "WIDTH", "HEIGHT", "DEPTH", "MAXVAL", "TUPLTYPE", "TUPLETYPE", "ENDHDR", "Invalid maxval: %d\n", "Unsupported pixel format\n", "P%c\n%d %d\n", "error, wrong header size\n", "unsupported version: %d\n", "picture resolution change: %dx%d -> %dx%d\n", "Invalid alpha mode %d\n", "error, wrong picture header size\n", "error, wrong picture data size\n", "unsupported slice resolution: %dx%d\n", "error, wrong slice count\n", "error, wrong slice data size\n", "error, slice out of bounds\n", "error wrong mb count y %d h %d\n", "error decoding picture header\n", "error decoding picture\n", "icpf", "invalid plane data size\n", "ProRes", "invalid frame\n", "frame data too small\n", "unsupported header version: %d\n", "picture dimension changed: old: %d x %d, new: %d x %d\n", "unsupported frame type: %d\n", "unsupported picture format: %d\n", "header data too small\n", "picture header too small\n", "picture data too small\n", "unsupported slice dimension: %d x %d\n", "invalid number of slices\n", "slice table too small\n", "out of slice data\n", "slice data too small\n", "invalid data size\n", "prores_lgpl", "frame width needs to be multiple of 2\n", "The maximum dimensions are 65534x65535\n", "encoding with ProRes standard (apcn) profile\n", "unknown profile %d, use [0 - apco, 1 - apcs, 2 - apcn (default), 3 - apch]\n", "fmpg", "Apple ProRes", "prores_aw", "apco", "apcs", "apcn", "apch", "HQ profile to keep best quality", "there should be an integer power of two MBs per slice\n", "Autoselected %s. It can be overridden through -profile option.\n", "Profile selected will not encode alpha. Override with -profile if needed.\n", "alpha bits should be 0, 8 or 16\n", "vendor ID should be 4 bytes\n", "too few bits per MB, please set at least 128\n", "too large quantiser, maximum is 64\n", "profile %d, %d slices, interlacing: %s, %d bits per MB\n", "frame size upper bound: %d\n", "Packet too small: is %i, needs %i (slice: %i). Correct allocation", "Underestimated required buffer size.\n", "prores_ks", "ProRes encoder", "mbs_per_slice", "macroblocks per slice", "proxy", "4444", "vendor", "vendor ID", "Lavc", "bits_per_mb", "desired bits per macroblock", "quant_mat", "quantiser matrix", "alpha_bits", "bits for alpha plane", "high quality", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "libavcodec/pthread_frame.c", "%p finished %d field %d\n", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "Final thread update failed\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "thread_get_buffer() failed\n", "thread_release_buffer called on pic %p\n", "Image format not RGB15", "offset != 0x2c", "incomplete packet\n", "Bitrate byte missing, guessing bitrate from packet size.\n", "Blank frame handling", "Frame #%d, IFQ: %s\n", "Bitrate cannot be determined.", "Bitrate is 1/8 and first 16 bits are on.", "Wrong data in reserved frame area.", "Cannot initialize pitch filter.", "Badly received packets in frame.", "Codebook gain sanity check failed.", "?333?", "Subpacket: type=%d size=%d start_offs=%x\n", "extradata missing or truncated\n", "frmaQDM", "not enough extradata (%i)\n", "QDMC version 1", "extradata size too small, %i < %i\n", "invalid extradata, expecting QDCA\n", "data block size too large (%u)\n", "Unknown FFT order %d", "FFT size %d not power of 2.\n", "This file triggers some untested code. Please contact the developers.\n", "Invalid 8bit codeword\n", "Invalid 7bit codeword\n", "index %d out of type30_dequant array\n", "index %d out of type34_delta array\n", "coding method invalid\n", "!superblocktype_2_3", "overread in qdm2_fft_decode_tones()\n", "value %d in qdm2_get_vlc too large\n", "Superblock follows\n", "bad superblock type\n", "bad packet checksum\n", "too many packet bytes", "This file triggers some missing code. Please contact the developers.\nPosition: %s\n", "packet type 8", "packet type 15", "has errors, and C list is not empty", "Frame is too small %d\n", "QuickDraw version 1", "QuickDraw version unknown (%X)", "Parsing Packbit opcode\n", "bppcount %d bpp %d\n", "Invalid pixel format (bppcnt %d bpp %d) in Packbit\n", "Error color count - %i(0x%X)\n", "Palette is too small %d\n", "Palette index out of range: %u\n", "Packbit mask region", "Parsing Directbit opcode\n", "Short rowbytes", "Invalid pixel format (bppcnt %d bpp %d) in Directbit\n", "Pack type %d", "get_buffer() failed\n", "DirectBit mask region", "Unknown 0x%04X opcode\n", "Missing end of picture opcode (found 0x%04X)\n", "Got %d trailing bytes\n", "Frame contained no usable data\n", "Bogus motion vector (%i,%i), block size %ix%i at %i,%i\n", "Unsupported colorspace: %d bits/sample?\n", "Problem: pixel_ptr = %d, pixel_limit = %d\n", "Unsupported colorspace.\n", "Error allocating memory.\n", "Error allocating picture\n", "DpxE", "real_144", "unsupported block align\n", "Error! Input buffer is too small [%d<%d]\n", "real_288", "WwvfeUDDDDDD3DCDDEVfwP", "HwvfeUUDDC3334EUUfgwx`", "WgfveUDTDCC4CDDDEEUgw`", "WxwffUUDDC3#3DEUVffwx`", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "Extradata is not groovy, dude\n", "Unknown version %X", "Invalid coding parameters %d Hz %d ch\n", "invalid frame size %d\n", "Wrong packet's breath smells of wrong data!\n", "Wrong packet tails are wrong!\n", "too short packets are too short!\n", "short packets are short!\n", "I'm pedaling backwards\n", "Decoder's stomach is crying, it ate too many samples\n", "Sir, I got carsick in your office. Not decoding the rest of packet.\n", "bits<0.9\n", "qp<=0.0\n", "qmin <= qmax", "libavcodec/ratecontrol.c", "Error evaluating rc_eq \"%s\"\n", "limiting QP %f -> %f\n", "in:%d out:%d type:%d q:%d itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%lld var:%lld icount:%d skipcount:%d hbits:%d;\n", "rc buffer underflow\n", "max bitrate possibly too small or try trellis with large lmax or increase qmax\n", "stuffing %d bytes\n", "tex^qComp", "Error parsing rc_eq \"%s\"\n", " in:%d ", "picture_number >= 0", "picture_number < rcc->num_entries", " in:%*d out:%*d type:%d q:%f itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%lld var:%lld icount:%d skipcount:%d hbits:%d", "statistics are damaged at line %d, parser out=%d\n", "requested bitrate is too low\n", "filter_size % 2 == 1", "toobig <= 40", "[lavc rc] requested bitrate: %lld bps  expected bitrate: %lld bps\n", "[lavc rc] estimated target average qp: %.3f\n", "[lavc rc] Using all of requested bitrate is not necessary for this video with these parameters.\n", "[lavc rc] Error: bitrate too low for this video with these parameters.\n", "[lavc rc] Error: 2pass curve failed to converge\n", "Xvid ratecontrol requires libavcodec compiled with Xvid support.\n", "qblur too large\n", "Input is longer than 2-pass log file\n", "pict_type == rce->new_pict_type", "q > 0.0", "%c qp:%d<%2.1f<%d %d want:%d total:%d comp:%f st_q:%2.2f size:%d var:%lld/%lld br:%lld fps:%d\n", "bits2qp", "qp2bits", "iTex", "pTex", "fCode", "iCount", "mcVar", "avgQP", "avgIITex", "avgPITex", "avgPPTex", "avgBPTex", "avgTex", "I420", "IYUV", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUNVw", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "b48r,", "yuv2", "avctx->bits_per_coded_sample == 2", "libavcodec/rawdec.c", "Invalid buffer size, packet size %d < expected frame_size %d\n", "I420", "rawdec", "top field first", "<br/>", "<br>", "remove_extra", "audioresample", "Resampling with input channels greater than %d is unsupported.\n", "Unsupported audio resampling. Allowed output channels for %d input channel%s", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Could not allocate buffer\n", "Audio sample format conversion failed\n", "ReSampleContext", "invalid extradata size\n", "invalid video_base\n", "Audio must be 22050 Hz\n", "id RoQ DPCM", "motion vector out of bounds: MV = (%d, %d), boundaries = (0, 0, %d, %d)\n", "Invalid decode type. Invalid header?\n", "Chunk does not fit in input buffer\n", "Chunk is too short\n", "Dimensions must be a multiple of 16\n", "roqvideo", "Dimensions are max %d\n", "Warning: dimensions not power of two, this is not supported by quake\n", "Cannot encode video in Quake compatible form\n", "Warning, generated a frame too big for Quake (%d > 65535), now switching to a bigger qscale value.\n", "quake3_compat", "Whether to respect known limitations in Quake 3 decoder", "First chunk byte is 0x%02x instead of 0xe1\n", "MOV chunk size %d != encoded chunk size %d\n", "warning: block counter just went negative (this should not happen)\n", "Unknown opcode %d in rpza chunk. Skip remaining %d bytes of chunk data.\n", "unknown header %X\n", "RV1/2 version", "ver:%X ver0:%X\n", "Invalid slice count: %d.\n", "marker missing\n", "pb frame", "Invalid qscale value: 0\n", "early B-frame\n", "reserved bit set\n", "Extradata too small.\n", "attempting to change resolution to %dx%d\n", "F %d/%d/%d\n", "messed up order, possible from seeking? skipping current b frame\n", "num:%5d x:%2d y:%2d type:%d qscale:%2d rnd:%d\n", "s->pict_type != AV_PICTURE_TYPE_B || !s->low_delay", "libavcodec/rv10.c", "HEADER ERROR\n", "POS ERROR %d %d\n", "COUNT ERROR\n", "Slice type mismatch\n", "ERROR at MB %d %d\n", "update size from %d to %d\n", "low delay B\n", "chroma dc error\n", "rv10 encoder", "libavcodec/rv20enc.c", "s->unrestricted_mv == 0", "s->alt_inter_vlc == 0", "s->umvplus == 0", "s->modified_quant==1", "s->loop_filter==1", "rv20 encoder", "\t\t\t\t\t\t\t\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "\t\t\t\t\t\t\t\t\t", "dquant needed\n", "Insufficient extradata - need at least %d bytes, got %d\n", "rpr too large\n", "Incorrect intra prediction code\n", "Incorrect intra prediction mode\n", "Slice offset is invalid\n", "First slice header is incorrect\n", "Invalid decoder state: B-frame without reference data.\n", "New frame but still %d MB left.\n", "Changing dimensions to %dx%d\n", "Slice size is invalid\n", "Incorrect or unknown slice header\n", "Size mismatch\n", "Slice indicates MB offset %d, got %d\n", "Need DQUANT\n", "marking unfished frame as finished\n", "Dquant for B-frame\n", "@P `0P@0P@P0` P@@0` P00@@@P0 `0@frame is too short\n", "frame has invalid header\n", "S302 non PCM mode with data type %d not supported\n", "SMPTE 302M Decoder", "non_pcm_mode", "Chooses what to do with NON-PCM", "Pass NON-PCM through unchanged", "Drop NON-PCM", "decode_copy", "Decode if possible else passthrough", "decode_drop", "Decode if possible else drop", "ID=Source", "ID=\"Source\"", "&nbsp;", "{\\i1}%s{\\i0}\\N", "MV is invalid.\n", "Unknown/unsupported compression type", "Error allocating buffers.\n", "Not enough extradata.\n", "Insufficient data for frame.\n", "Insufficient data for raw frame.\n", "RLE buffer allocation failed.\n", "Ignoring invalid motion vector (%i, %i)->(%u, %u), block size = %u\n", "Incorrect chunk size %u.\n", "Incorrect palette block size %u.\n", "Dimensions are invalid.\n", "Error resizing buffers.\n", "Decoded size is too large.\n", "Invalid motion base value %d.\n", "Subcodec 37 compression %d", "Subcodec 47 compression %d", "Subcodec %d", "Incorrect palette change block size %u.\n", "Unknown/unsupported chunk %x.\n", "Input frame too short (%d bytes).\n", "Variable size frames", "Subcodec %d: error decoding frame.\n", "LucasArts SANM/Smush video", "buf_size too small (%d)\n", "wrong channel number\n", "wrong dimension number\n", "wrong picture format\n", "Invalid pixel count.\n", "SGI does not support resolutions above 65535x65535\n", "opcode %d", "Silicon Graphics RLE 8-bit video", "missing shorten magic 'ajkg'\n", "No channels reported\n", "too many channels: %d\n", "invalid or unsupported block size: %d\n", "invalid skip_bytes: %d\n", "nmean too large\n", "s->blocksize + s->nwrap too large\n", "unknown audio type\n", "missing verbatim section at beginning of stream\n", "header is wrong size: %d\n", "missing RIFF tag\n", "missing WAVE tag\n", "no fmt chunk found\n", "fmt chunk was too short\n", "unsupported wave format\n", "unsupported number of bits per sample: %d\n", "%d header bytes unparsed\n", "unknown shorten function %d\n", "bitshift %d is invalid\n", "Increasing block size is not supported\n", "invalid pred_order %d\n", "ajkg", "Invalid block_align: %d. Mode %s guessed based on bitrate: %d\n", "Mode: %s\n", "length too long\n", "Tree size exceeded!\n", "packet is too big\n", "Sound: no data\n", "channels mismatch\n", "sample format mismatch\n", "unp_size %d is odd\n", "Cannot build VLC table\n", "invalid vlc\n", "size too large\n", "Skipping low bytes tree\n", "Skipping high bytes tree\n", "Huffman codes out of range\n", "Extradata missing!\n", "Skipping MMAP tree\n", "Skipping MCLR tree\n", "Skipping FULL tree\n", "Skipping TYPE tree\n", "smackaud", "smackvid", "warning: MOV chunk size != encoded chunk size (%d != %d); using MOV chunk size\n", "encountered repeat block opcode (%02X) but no blocks rendered yet\n", "encountered repeat block opcode (%02X) but not enough blocks rendered yet\n", "0xF0 opcode", "SMC decoder just went out of bounds (row ptr = %d, height = %d)\n", "Invalid number of frames per jpeg.\n", "libavcodec/smvjpegdec.c", "Invalid height\n", "SMV JPEG", "SMVJPEG decoder", "pixel format changed\n", "No reference frames\n", "s->last_picture[i]->data[0] != s->current_picture->data[0]", "libavcodec/snow.c", "buf->data_stack_top >= 0", "libavcodec/snow_dwt.c", "Invalid ref\n", "Error s->spatial_decomposition_count is %d\n", "unsupported color subsample mode %d %d\n", "unsupported color space\n", "Error s->max_ref_frames is %d\n", "spatial_decomposition_type %d not supported\n", "spatial_decomposition_count %d too large for size\n", "block_max_depth= %d is too large\n", "Error s->version is %d\n", "keyframe:%d qlog:%d qbias: %d mvscale: %d decomposition_type:%d decomposition_count:%d\n", "!s->avmv", "libavcodec/snowdec.c", "Coefficient damaged\n", "error at end of frame\n", "pixel format not supported\n", "pass:%d changed:%d\n", "pass:4mv changed:%d\n", "s->current_picture->data[0]", "libavcodec/snowenc.c", "s->last_picture[0]->data[0]", "Resolution too low\n", "coef_sum < 2147483647", "b->parent==((void *)0) || b->parent->stride == b->stride*2", "snow encoder", "memc_only", "Only do ME/MC (I frames -> ref, P frame -> ME+MC).", "no_bitstream", "Skip final bitstream writeout.", "intra_penalty", "Penalty for intra blocks in block decission", "iterative_dia_size", "Dia size for the iterative ME", "Unsupported Sonic version, please report\n", "Invalid sample_rate_index %d\n", "Sonicv2 chans: %d samprate: %d\n", "Only mono and stereo streams are supported by now\n", "invalid decorrelation %d\n", "invalid downsampling value\n", "Custom quant table\n", "number of taps times channels (%d * %d) larger than frame size %d\n", "Sonic: ver: %d.%d ls: %d dr: %d taps: %d block: %d frame: %d downsamp: %d\n", "Invalid number of taps\n", "{\\an5}{\\pos(%d,%d)}", "{\\an1}{\\pos(%d,%d)}", "{\\an%*1u}%n", "{%*1[CcFfoPSsYy]:%*[^}]}%n", "{\\%*[^}]}%n", "%127[^>]>%n", "size=", "{\\fs%u}", "color=", "{\\c&H%X&}", "face=", "bisu", "{\\%c%d}", "</%s>", "font", "{\\an%d}", "</%c%s>", "<font color=\"#%06x\">", "tag stack overflow\n", "<font", " face=\"%s\"", " size=\"%d\"", " color=\"#%06x\"", "<font size=\"%d\">", "<font face=\"%s\">", "<%c>", "[br]", "this is not sunras encoded data\n", "TIFF/IFF/EXPERIMENTAL (compression) type", "invalid (compression) type\n", "Unknown colormap type", "invalid colormap type\n", "unsupported (compression) type\n", "invalid depth\n", "useless colormap found or file is corrupted, trying to recover\n", "invalid colormap length\n", "libavcodec/svq1dec.c", "Invalid frame type.\n", "embedded message:\n%s\n", "Input packet too small\n", "Error in svq1_decode_block %i (keyframe)\n", "Dimensions too large, maximum is 4095x4095\n", "best_vector_mean != -999", "libavcodec/svq1enc.c", "svq1enc", "motion-est", "Motion estimation algorithm", "libavcodec/svq3.c", "SEQH", "Unknown fields %d %d %d %d %d\n", "this svq3 file contains watermark which need zlib support compiled in\n", "svq3 memory allocation failed\n", "unsupported slice header (%02X)\n", "slice after bitstream end\n", "illegal slice type %u \n", "invalid MV vlc\n", "luma prediction:%u\n", "weird prediction\n", "ff_h264_check_intra_pred_mode < 0\n", "cbp_vlc=%u\n", "qscale:%d\n", "error while decoding intra luma dc\n", "error while decoding block\n", "error while decoding chroma dc block\n", "error while decoding chroma ac block\n", "%c hpel:%d, tpel:%d aqp:%d qp:%d, slice_num:%02X\n", "error in B-frame picture id\n", "frame num %d incomplete pic x %d y %d left %d\n", "frame num %d left %d\n", "missing sync id\n", "CRC error\n", "unsupported codec: %d\n", "unsupported data type: %d\n", "unsupported number of channels: %d\n", "unsupported/invalid number of samples\n", "invalid channel 2 (%d) for %d channel(s)\n", "underread\n", "Not enough data to read header\n", "File without colormap has colormap information set.\n", "Bit depth %i is not supported\n", "Incorrect palette: %i colors with offset %i\n", "Palette entry size %i bits is not supported\n", "Not enough data to read palette\n", "Ran ouf of data before end-of-image\n", "Packet went out of bounds\n", "Not enough data available for image\n", "TRUEVISION-XFILE.", "Pixel format '%s' not supported.\n", "SubViewer1 subtitle", "subviewer1 decoder", "PJS subtitle", "pjs decoder", "stl decoder", "vplayer decoder", "Raw text subtitle", "text decoder", "keep_ass_markup", "Set if ASS tags must be escaped", "Not enough memory\n", "width <= bytes_per_row", "libavcodec/tiff.c", "s->bpp == 24", "zlib support not enabled, deflate compression not supported\n", "LZMA support not enabled\n", "Old style LZW is unsupported\n", "Error initializing LZW decoder\n", "Decoded only %i bytes of %i\n", "Error allocating temporary buffer\n", "Source data overread\n", "Read went out of bounds\n", "Copy went out of bounds\n", "Invalid TIFF header\n", "IFD offset is greater than image size\n", "This format is not supported (bpp=%d, %d components)\n", "Samples per pixel requires a single value, many provided\n", "Samples per pixel %d is too large\n", "Deflate: ZLib not compiled in\n", "JPEG compression", "LZMA not compiled in\n", "Tiled images are not supported\n", "PhotometricInterpretation 0x%04X", "PhotometricInterpretation %u is unknown\n", "Unknown FillOrder value %d, trying default one\n", "subsample count invalid\n", "subsampling %d is invalid\n", "ModelPixelScaleTag", "ModelTransformationTag", "ModelTiepointTag", "GeoTIFF_Version", "GeoTIFF_Key_Revision", "GeoTIFF key directory buffer shorter than specified\n", "undefined", "User-Defined", "Unknown-%d", "Invalid GeoTIFF key %d\n", "%.15g%s", "artist", "date", "document_name", "computer", "description", "make", "page_name", "page_number", "software", "Unknown or unsupported tag %d/0X%0X\n", "Unknown or unsupported GeoTIFF key %d\n", "Type of GeoTIFF key %d is wrong\n", "Writing metadata with key '%s' failed\n", "Image data is missing\n", "Unsupported image parameters: bpp=%d, bppcount=%d\n", "Unsupported YCbCr subsampling\n", "This format is not supported (bpp=%d, bppcount=%d)\n", "Unsupported YCbCr variant\n", "Image data size missing\n", "rps %d invalid\n", "Invalid strip size/offset\n", "predictor == 2 with YUV is unsupported", "%s%7i:%-7i", "%s%7i", "%s%.15g", "%s%5i", "%s%3i", "VertCS_Newlyn", "VertCS_North_American_Vertical_Datum_1929", "VertCS_North_American_Vertical_Datum_1988", "VertCS_Yellow_Sea_1956", "VertCS_Baltic_Sea", "VertCS_Caspian_Sea", "VertCS_Airy_1830_ellipsoid", "VertCS_Airy_Modified_1849_ellipsoid", "VertCS_ANS_ellipsoid", "VertCS_Bessel_1841_ellipsoid", "VertCS_Bessel_Modified_ellipsoid", "VertCS_Bessel_Namibia_ellipsoid", "VertCS_Clarke_1858_ellipsoid", "VertCS_Clarke_1866_ellipsoid", "VertCS_Clarke_1880_Benoit_ellipsoid", "VertCS_Clarke_1880_IGN_ellipsoid", "VertCS_Clarke_1880_RGS_ellipsoid", "VertCS_Clarke_1880_Arc_ellipsoid", "VertCS_Clarke_1880_SGA_1922_ellipsoid", "VertCS_Everest_1830_1937_Adjustment_ellipsoid", "VertCS_Everest_1830_1967_Definition_ellipsoid", "VertCS_Everest_1830_1975_Definition_ellipsoid", "VertCS_Everest_1830_Modified_ellipsoid", "VertCS_GRS_1980_ellipsoid", "VertCS_Helmert_1906_ellipsoid", "VertCS_INS_ellipsoid", "VertCS_International_1924_ellipsoid", "VertCS_International_1967_ellipsoid", "VertCS_Krassowsky_1940_ellipsoid", "VertCS_NWL_9D_ellipsoid", "VertCS_NWL_10D_ellipsoid", "VertCS_Plessis_1817_ellipsoid", "VertCS_Struve_1860_ellipsoid", "VertCS_War_Office_ellipsoid", "VertCS_WGS_84_ellipsoid", "VertCS_GEM_10C_ellipsoid", "VertCS_OSU86F_ellipsoid", "VertCS_OSU91A_ellipsoid", "CT_TransverseMercator", "CT_TransvMercator_Modified_Alaska", "CT_ObliqueMercator", "CT_ObliqueMercator_Laborde", "CT_ObliqueMercator_Rosenmund", "CT_ObliqueMercator_Spherical", "CT_Mercator", "CT_LambertConfConic_2SP", "CT_LambertConfConic_Helmert", "CT_LambertAzimEqualArea", "CT_AlbersEqualArea", "CT_AzimuthalEquidistant", "CT_EquidistantConic", "CT_Stereographic", "CT_PolarStereographic", "CT_ObliqueStereographic", "CT_Equirectangular", "CT_CassiniSoldner", "CT_Gnomonic", "CT_MillerCylindrical", "CT_Orthographic", "CT_Polyconic", "CT_Robinson", "CT_Sinusoidal", "CT_VanDerGrinten", "CT_NewZealandMapGrid", "CT_TransvMercator_SouthOriented", "Proj_Alabama_CS27_East", "Proj_Alabama_CS27_West", "Proj_Alabama_CS83_East", "Proj_Alabama_CS83_West", "Proj_Arizona_Coordinate_System_east", "Proj_Arizona_Coordinate_System_Central", "Proj_Arizona_Coordinate_System_west", "Proj_Arizona_CS83_east", "Proj_Arizona_CS83_Central", "Proj_Arizona_CS83_west", "Proj_Arkansas_CS27_North", "Proj_Arkansas_CS27_South", "Proj_Arkansas_CS83_North", "Proj_Arkansas_CS83_South", "Proj_California_CS27_I", "Proj_California_CS27_II", "Proj_California_CS27_III", "Proj_California_CS27_IV", "Proj_California_CS27_V", "Proj_California_CS27_VI", "Proj_California_CS27_VII", "Proj_California_CS83_1", "Proj_California_CS83_2", "Proj_California_CS83_3", "Proj_California_CS83_4", "Proj_California_CS83_5", "Proj_California_CS83_6", "Proj_Colorado_CS27_North", "Proj_Colorado_CS27_Central", "Proj_Colorado_CS27_South", "Proj_Colorado_CS83_North", "Proj_Colorado_CS83_Central", "Proj_Colorado_CS83_South", "Proj_Connecticut_CS27", "Proj_Connecticut_CS83", "Proj_Delaware_CS27", "Proj_Delaware_CS83", "Proj_Florida_CS27_East", "Proj_Florida_CS27_West", "Proj_Florida_CS27_North", "Proj_Florida_CS83_East", "Proj_Florida_CS83_West", "Proj_Florida_CS83_North", "Proj_Georgia_CS27_East", "Proj_Georgia_CS27_West", "Proj_Georgia_CS83_East", "Proj_Georgia_CS83_West", "Proj_Idaho_CS27_East", "Proj_Idaho_CS27_Central", "Proj_Idaho_CS27_West", "Proj_Idaho_CS83_East", "Proj_Idaho_CS83_Central", "Proj_Idaho_CS83_West", "Proj_Illinois_CS27_East", "Proj_Illinois_CS27_West", "Proj_Illinois_CS83_East", "Proj_Illinois_CS83_West", "Proj_Indiana_CS27_East", "Proj_Indiana_CS27_West", "Proj_Indiana_CS83_East", "Proj_Indiana_CS83_West", "Proj_Iowa_CS27_North", "Proj_Iowa_CS27_South", "Proj_Iowa_CS83_North", "Proj_Iowa_CS83_South", "Proj_Kansas_CS27_North", "Proj_Kansas_CS27_South", "Proj_Kansas_CS83_North", "Proj_Kansas_CS83_South", "Proj_Kentucky_CS27_North", "Proj_Kentucky_CS27_South", "Proj_Kentucky_CS83_North", "Proj_Kentucky_CS83_South", "Proj_Louisiana_CS27_North", "Proj_Louisiana_CS27_South", "Proj_Louisiana_CS83_North", "Proj_Louisiana_CS83_South", "Proj_Maine_CS27_East", "Proj_Maine_CS27_West", "Proj_Maine_CS83_East", "Proj_Maine_CS83_West", "Proj_Maryland_CS27", "Proj_Maryland_CS83", "Proj_Massachusetts_CS27_Mainland", "Proj_Massachusetts_CS27_Island", "Proj_Massachusetts_CS83_Mainland", "Proj_Massachusetts_CS83_Island", "Proj_Michigan_State_Plane_East", "Proj_Michigan_State_Plane_Old_Central", "Proj_Michigan_State_Plane_West", "Proj_Michigan_CS27_North", "Proj_Michigan_CS27_Central", "Proj_Michigan_CS27_South", "Proj_Michigan_CS83_North", "Proj_Michigan_CS83_Central", "Proj_Michigan_CS83_South", "Proj_Minnesota_CS27_North", "Proj_Minnesota_CS27_Central", "Proj_Minnesota_CS27_South", "Proj_Minnesota_CS83_North", "Proj_Minnesota_CS83_Central", "Proj_Minnesota_CS83_South", "Proj_Mississippi_CS27_East", "Proj_Mississippi_CS27_West", "Proj_Mississippi_CS83_East", "Proj_Mississippi_CS83_West", "Proj_Missouri_CS27_East", "Proj_Missouri_CS27_Central", "Proj_Missouri_CS27_West", "Proj_Missouri_CS83_East", "Proj_Missouri_CS83_Central", "Proj_Missouri_CS83_West", "Proj_Montana_CS27_North", "Proj_Montana_CS27_Central", "Proj_Montana_CS27_South", "Proj_Montana_CS83", "Proj_Nebraska_CS27_North", "Proj_Nebraska_CS27_South", "Proj_Nebraska_CS83", "Proj_Nevada_CS27_East", "Proj_Nevada_CS27_Central", "Proj_Nevada_CS27_West", "Proj_Nevada_CS83_East", "Proj_Nevada_CS83_Central", "Proj_Nevada_CS83_West", "Proj_New_Hampshire_CS27", "Proj_New_Hampshire_CS83", "Proj_New_Jersey_CS27", "Proj_New_Jersey_CS83", "Proj_New_Mexico_CS27_East", "Proj_New_Mexico_CS27_Central", "Proj_New_Mexico_CS27_West", "Proj_New_Mexico_CS83_East", "Proj_New_Mexico_CS83_Central", "Proj_New_Mexico_CS83_West", "Proj_New_York_CS27_East", "Proj_New_York_CS27_Central", "Proj_New_York_CS27_West", "Proj_New_York_CS27_Long_Island", "Proj_New_York_CS83_East", "Proj_New_York_CS83_Central", "Proj_New_York_CS83_West", "Proj_New_York_CS83_Long_Island", "Proj_North_Carolina_CS27", "Proj_North_Carolina_CS83", "Proj_North_Dakota_CS27_North", "Proj_North_Dakota_CS27_South", "Proj_North_Dakota_CS83_North", "Proj_North_Dakota_CS83_South", "Proj_Ohio_CS27_North", "Proj_Ohio_CS27_South", "Proj_Ohio_CS83_North", "Proj_Ohio_CS83_South", "Proj_Oklahoma_CS27_North", "Proj_Oklahoma_CS27_South", "Proj_Oklahoma_CS83_North", "Proj_Oklahoma_CS83_South", "Proj_Oregon_CS27_North", "Proj_Oregon_CS27_South", "Proj_Oregon_CS83_North", "Proj_Oregon_CS83_South", "Proj_Pennsylvania_CS27_North", "Proj_Pennsylvania_CS27_South", "Proj_Pennsylvania_CS83_North", "Proj_Pennsylvania_CS83_South", "Proj_Rhode_Island_CS27", "Proj_Rhode_Island_CS83", "Proj_South_Carolina_CS27_North", "Proj_South_Carolina_CS27_South", "Proj_South_Carolina_CS83", "Proj_South_Dakota_CS27_North", "Proj_South_Dakota_CS27_South", "Proj_South_Dakota_CS83_North", "Proj_South_Dakota_CS83_South", "Proj_Tennessee_CS27", "Proj_Tennessee_CS83", "Proj_Texas_CS27_North", "Proj_Texas_CS27_North_Central", "Proj_Texas_CS27_Central", "Proj_Texas_CS27_South_Central", "Proj_Texas_CS27_South", "Proj_Texas_CS83_North", "Proj_Texas_CS83_North_Central", "Proj_Texas_CS83_Central", "Proj_Texas_CS83_South_Central", "Proj_Texas_CS83_South", "Proj_Utah_CS27_North", "Proj_Utah_CS27_Central", "Proj_Utah_CS27_South", "Proj_Utah_CS83_North", "Proj_Utah_CS83_Central", "Proj_Utah_CS83_South", "Proj_Vermont_CS27", "Proj_Vermont_CS83", "Proj_Virginia_CS27_North", "Proj_Virginia_CS27_South", "Proj_Virginia_CS83_North", "Proj_Virginia_CS83_South", "Proj_Washington_CS27_North", "Proj_Washington_CS27_South", "Proj_Washington_CS83_North", "Proj_Washington_CS83_South", "Proj_West_Virginia_CS27_North", "Proj_West_Virginia_CS27_South", "Proj_West_Virginia_CS83_North", "Proj_West_Virginia_CS83_South", "Proj_Wisconsin_CS27_North", "Proj_Wisconsin_CS27_Central", "Proj_Wisconsin_CS27_South", "Proj_Wisconsin_CS83_North", "Proj_Wisconsin_CS83_Central", "Proj_Wisconsin_CS83_South", "Proj_Wyoming_CS27_East", "Proj_Wyoming_CS27_East_Central", "Proj_Wyoming_CS27_West_Central", "Proj_Wyoming_CS27_West", "Proj_Wyoming_CS83_East", "Proj_Wyoming_CS83_East_Central", "Proj_Wyoming_CS83_West_Central", "Proj_Wyoming_CS83_West", "Proj_Alaska_CS27_1", "Proj_Alaska_CS27_2", "Proj_Alaska_CS27_3", "Proj_Alaska_CS27_4", "Proj_Alaska_CS27_5", "Proj_Alaska_CS27_6", "Proj_Alaska_CS27_7", "Proj_Alaska_CS27_8", "Proj_Alaska_CS27_9", "Proj_Alaska_CS27_10", "Proj_Alaska_CS83_1", "Proj_Alaska_CS83_2", "Proj_Alaska_CS83_3", "Proj_Alaska_CS83_4", "Proj_Alaska_CS83_5", "Proj_Alaska_CS83_6", "Proj_Alaska_CS83_7", "Proj_Alaska_CS83_8", "Proj_Alaska_CS83_9", "Proj_Alaska_CS83_10", "Proj_Hawaii_CS27_1", "Proj_Hawaii_CS27_2", "Proj_Hawaii_CS27_3", "Proj_Hawaii_CS27_4", "Proj_Hawaii_CS27_5", "Proj_Hawaii_CS83_1", "Proj_Hawaii_CS83_2", "Proj_Hawaii_CS83_3", "Proj_Hawaii_CS83_4", "Proj_Hawaii_CS83_5", "Proj_Puerto_Rico_CS27", "Proj_St_Croix", "Proj_Puerto_Rico_Virgin_Is", "Proj_BLM_14N_feet", "Proj_BLM_15N_feet", "Proj_BLM_16N_feet", "Proj_BLM_17N_feet", "Proj_Map_Grid_of_Australia_48", "Proj_Map_Grid_of_Australia_49", "Proj_Map_Grid_of_Australia_50", "Proj_Map_Grid_of_Australia_51", "Proj_Map_Grid_of_Australia_52", "Proj_Map_Grid_of_Australia_53", "Proj_Map_Grid_of_Australia_54", "Proj_Map_Grid_of_Australia_55", "Proj_Map_Grid_of_Australia_56", "Proj_Map_Grid_of_Australia_57", "Proj_Map_Grid_of_Australia_58", "Proj_Australian_Map_Grid_48", "Proj_Australian_Map_Grid_49", "Proj_Australian_Map_Grid_50", "Proj_Australian_Map_Grid_51", "Proj_Australian_Map_Grid_52", "Proj_Australian_Map_Grid_53", "Proj_Australian_Map_Grid_54", "Proj_Australian_Map_Grid_55", "Proj_Australian_Map_Grid_56", "Proj_Australian_Map_Grid_57", "Proj_Australian_Map_Grid_58", "Proj_Argentina_1", "Proj_Argentina_2", "Proj_Argentina_3", "Proj_Argentina_4", "Proj_Argentina_5", "Proj_Argentina_6", "Proj_Argentina_7", "Proj_Colombia_3W", "Proj_Colombia_Bogota", "Proj_Colombia_3E", "Proj_Colombia_6E", "Proj_Egypt_Red_Belt", "Proj_Egypt_Purple_Belt", "Proj_Extended_Purple_Belt", "Proj_New_Zealand_North_Island_Nat_Grid", "Proj_New_Zealand_South_Island_Nat_Grid", "Proj_Bahrain_Grid", "Proj_Netherlands_E_Indies_Equatorial", "Proj_RSO_Borneo", "PCS_Adindan_UTM_zone_37N", "PCS_Adindan_UTM_zone_38N", "PCS_AGD66_AMG_zone_48", "PCS_AGD66_AMG_zone_49", "PCS_AGD66_AMG_zone_50", "PCS_AGD66_AMG_zone_51", "PCS_AGD66_AMG_zone_52", "PCS_AGD66_AMG_zone_53", "PCS_AGD66_AMG_zone_54", "PCS_AGD66_AMG_zone_55", "PCS_AGD66_AMG_zone_56", "PCS_AGD66_AMG_zone_57", "PCS_AGD66_AMG_zone_58", "PCS_AGD84_AMG_zone_48", "PCS_AGD84_AMG_zone_49", "PCS_AGD84_AMG_zone_50", "PCS_AGD84_AMG_zone_51", "PCS_AGD84_AMG_zone_52", "PCS_AGD84_AMG_zone_53", "PCS_AGD84_AMG_zone_54", "PCS_AGD84_AMG_zone_55", "PCS_AGD84_AMG_zone_56", "PCS_AGD84_AMG_zone_57", "PCS_AGD84_AMG_zone_58", "PCS_Ain_el_Abd_UTM_zone_37N", "PCS_Ain_el_Abd_UTM_zone_38N", "PCS_Ain_el_Abd_UTM_zone_39N", "PCS_Ain_el_Abd_Bahrain_Grid", "PCS_Afgooye_UTM_zone_38N", "PCS_Afgooye_UTM_zone_39N", "PCS_Lisbon_Portugese_Grid", "PCS_Aratu_UTM_zone_22S", "PCS_Aratu_UTM_zone_23S", "PCS_Aratu_UTM_zone_24S", "PCS_Arc_1950_Lo13", "PCS_Arc_1950_Lo15", "PCS_Arc_1950_Lo17", "PCS_Arc_1950_Lo19", "PCS_Arc_1950_Lo21", "PCS_Arc_1950_Lo23", "PCS_Arc_1950_Lo25", "PCS_Arc_1950_Lo27", "PCS_Arc_1950_Lo29", "PCS_Arc_1950_Lo31", "PCS_Arc_1950_Lo33", "PCS_Arc_1950_Lo35", "PCS_Batavia_NEIEZ", "PCS_Batavia_UTM_zone_48S", "PCS_Batavia_UTM_zone_49S", "PCS_Batavia_UTM_zone_50S", "PCS_Beijing_Gauss_zone_13", "PCS_Beijing_Gauss_zone_14", "PCS_Beijing_Gauss_zone_15", "PCS_Beijing_Gauss_zone_16", "PCS_Beijing_Gauss_zone_17", "PCS_Beijing_Gauss_zone_18", "PCS_Beijing_Gauss_zone_19", "PCS_Beijing_Gauss_zone_20", "PCS_Beijing_Gauss_zone_21", "PCS_Beijing_Gauss_zone_22", "PCS_Beijing_Gauss_zone_23", "PCS_Beijing_Gauss_13N", "PCS_Beijing_Gauss_14N", "PCS_Beijing_Gauss_15N", "PCS_Beijing_Gauss_16N", "PCS_Beijing_Gauss_17N", "PCS_Beijing_Gauss_18N", "PCS_Beijing_Gauss_19N", "PCS_Beijing_Gauss_20N", "PCS_Beijing_Gauss_21N", "PCS_Beijing_Gauss_22N", "PCS_Beijing_Gauss_23N", "PCS_Belge_Lambert_50", "PCS_Bern_1898_Swiss_Old", "PCS_Bogota_UTM_zone_17N", "PCS_Bogota_UTM_zone_18N", "PCS_Bogota_Colombia_3W", "PCS_Bogota_Colombia_Bogota", "PCS_Bogota_Colombia_3E", "PCS_Bogota_Colombia_6E", "PCS_Camacupa_UTM_32S", "PCS_Camacupa_UTM_33S", "PCS_C_Inchauspe_Argentina_1", "PCS_C_Inchauspe_Argentina_2", "PCS_C_Inchauspe_Argentina_3", "PCS_C_Inchauspe_Argentina_4", "PCS_C_Inchauspe_Argentina_5", "PCS_C_Inchauspe_Argentina_6", "PCS_C_Inchauspe_Argentina_7", "PCS_Carthage_UTM_zone_32N", "PCS_Carthage_Nord_Tunisie", "PCS_Carthage_Sud_Tunisie", "PCS_Corrego_Alegre_UTM_23S", "PCS_Corrego_Alegre_UTM_24S", "PCS_Douala_UTM_zone_32N", "PCS_Egypt_1907_Red_Belt", "PCS_Egypt_1907_Purple_Belt", "PCS_Egypt_1907_Ext_Purple", "PCS_ED50_UTM_zone_28N", "PCS_ED50_UTM_zone_29N", "PCS_ED50_UTM_zone_30N", "PCS_ED50_UTM_zone_31N", "PCS_ED50_UTM_zone_32N", "PCS_ED50_UTM_zone_33N", "PCS_ED50_UTM_zone_34N", "PCS_ED50_UTM_zone_35N", "PCS_ED50_UTM_zone_36N", "PCS_ED50_UTM_zone_37N", "PCS_ED50_UTM_zone_38N", "PCS_Fahud_UTM_zone_39N", "PCS_Fahud_UTM_zone_40N", "PCS_Garoua_UTM_zone_33N", "PCS_ID74_UTM_zone_46N", "PCS_ID74_UTM_zone_47N", "PCS_ID74_UTM_zone_48N", "PCS_ID74_UTM_zone_49N", "PCS_ID74_UTM_zone_50N", "PCS_ID74_UTM_zone_51N", "PCS_ID74_UTM_zone_52N", "PCS_ID74_UTM_zone_53N", "PCS_ID74_UTM_zone_46S", "PCS_ID74_UTM_zone_47S", "PCS_ID74_UTM_zone_48S", "PCS_ID74_UTM_zone_49S", "PCS_ID74_UTM_zone_50S", "PCS_ID74_UTM_zone_51S", "PCS_ID74_UTM_zone_52S", "PCS_ID74_UTM_zone_53S", "PCS_ID74_UTM_zone_54S", "PCS_Indian_1954_UTM_47N", "PCS_Indian_1954_UTM_48N", "PCS_Indian_1975_UTM_47N", "PCS_Indian_1975_UTM_48N", "PCS_Jamaica_1875_Old_Grid", "PCS_JAD69_Jamaica_Grid", "PCS_Kalianpur_India_0", "PCS_Kalianpur_India_I", "PCS_Kalianpur_India_IIa", "PCS_Kalianpur_India_IIIa", "PCS_Kalianpur_India_IVa", "PCS_Kalianpur_India_IIb", "PCS_Kalianpur_India_IIIb", "PCS_Kalianpur_India_IVb", "PCS_Kertau_Singapore_Grid", "PCS_Kertau_UTM_zone_47N", "PCS_Kertau_UTM_zone_48N", "PCS_La_Canoa_UTM_zone_20N", "PCS_La_Canoa_UTM_zone_21N", "PCS_PSAD56_UTM_zone_18N", "PCS_PSAD56_UTM_zone_19N", "PCS_PSAD56_UTM_zone_20N", "PCS_PSAD56_UTM_zone_21N", "PCS_PSAD56_UTM_zone_17S", "PCS_PSAD56_UTM_zone_18S", "PCS_PSAD56_UTM_zone_19S", "PCS_PSAD56_UTM_zone_20S", "PCS_PSAD56_Peru_west_zone", "PCS_PSAD56_Peru_central", "PCS_PSAD56_Peru_east_zone", "PCS_Leigon_Ghana_Grid", "PCS_Lome_UTM_zone_31N", "PCS_Luzon_Philippines_I", "PCS_Luzon_Philippines_II", "PCS_Luzon_Philippines_III", "PCS_Luzon_Philippines_IV", "PCS_Luzon_Philippines_V", "PCS_Makassar_NEIEZ", "PCS_Malongo_1987_UTM_32S", "PCS_Merchich_Nord_Maroc", "PCS_Merchich_Sud_Maroc", "PCS_Merchich_Sahara", "PCS_Massawa_UTM_zone_37N", "PCS_Minna_UTM_zone_31N", "PCS_Minna_UTM_zone_32N", "PCS_Minna_Nigeria_West", "PCS_Minna_Nigeria_Mid_Belt", "PCS_Minna_Nigeria_East", "PCS_Mhast_UTM_zone_32S", "PCS_Monte_Mario_Italy_1", "PCS_Monte_Mario_Italy_2", "PCS_M_poraloko_UTM_32N", "PCS_M_poraloko_UTM_32S", "PCS_NAD27_UTM_zone_3N", "PCS_NAD27_UTM_zone_4N", "PCS_NAD27_UTM_zone_5N", "PCS_NAD27_UTM_zone_6N", "PCS_NAD27_UTM_zone_7N", "PCS_NAD27_UTM_zone_8N", "PCS_NAD27_UTM_zone_9N", "PCS_NAD27_UTM_zone_10N", "PCS_NAD27_UTM_zone_11N", "PCS_NAD27_UTM_zone_12N", "PCS_NAD27_UTM_zone_13N", "PCS_NAD27_UTM_zone_14N", "PCS_NAD27_UTM_zone_15N", "PCS_NAD27_UTM_zone_16N", "PCS_NAD27_UTM_zone_17N", "PCS_NAD27_UTM_zone_18N", "PCS_NAD27_UTM_zone_19N", "PCS_NAD27_UTM_zone_20N", "PCS_NAD27_UTM_zone_21N", "PCS_NAD27_UTM_zone_22N", "PCS_NAD27_Alabama_East", "PCS_NAD27_Alabama_West", "PCS_NAD27_Alaska_zone_1", "PCS_NAD27_Alaska_zone_2", "PCS_NAD27_Alaska_zone_3", "PCS_NAD27_Alaska_zone_4", "PCS_NAD27_Alaska_zone_5", "PCS_NAD27_Alaska_zone_6", "PCS_NAD27_Alaska_zone_7", "PCS_NAD27_Alaska_zone_8", "PCS_NAD27_Alaska_zone_9", "PCS_NAD27_Alaska_zone_10", "PCS_NAD27_California_I", "PCS_NAD27_California_II", "PCS_NAD27_California_III", "PCS_NAD27_California_IV", "PCS_NAD27_California_V", "PCS_NAD27_California_VI", "PCS_NAD27_California_VII", "PCS_NAD27_Arizona_East", "PCS_NAD27_Arizona_Central", "PCS_NAD27_Arizona_West", "PCS_NAD27_Arkansas_North", "PCS_NAD27_Arkansas_South", "PCS_NAD27_Colorado_North", "PCS_NAD27_Colorado_Central", "PCS_NAD27_Colorado_South", "PCS_NAD27_Connecticut", "PCS_NAD27_Delaware", "PCS_NAD27_Florida_East", "PCS_NAD27_Florida_West", "PCS_NAD27_Florida_North", "PCS_NAD27_Hawaii_zone_1", "PCS_NAD27_Hawaii_zone_2", "PCS_NAD27_Hawaii_zone_3", "PCS_NAD27_Hawaii_zone_4", "PCS_NAD27_Hawaii_zone_5", "PCS_NAD27_Georgia_East", "PCS_NAD27_Georgia_West", "PCS_NAD27_Idaho_East", "PCS_NAD27_Idaho_Central", "PCS_NAD27_Idaho_West", "PCS_NAD27_Illinois_East", "PCS_NAD27_Illinois_West", "PCS_NAD27_Indiana_East", "PCS_NAD27_BLM_14N_feet", "PCS_NAD27_Indiana_West", "PCS_NAD27_BLM_15N_feet", "PCS_NAD27_Iowa_North", "PCS_NAD27_BLM_16N_feet", "PCS_NAD27_Iowa_South", "PCS_NAD27_BLM_17N_feet", "PCS_NAD27_Kansas_North", "PCS_NAD27_Kansas_South", "PCS_NAD27_Kentucky_North", "PCS_NAD27_Kentucky_South", "PCS_NAD27_Louisiana_North", "PCS_NAD27_Louisiana_South", "PCS_NAD27_Maine_East", "PCS_NAD27_Maine_West", "PCS_NAD27_Maryland", "PCS_NAD27_Massachusetts", "PCS_NAD27_Massachusetts_Is", "PCS_NAD27_Michigan_North", "PCS_NAD27_Michigan_Central", "PCS_NAD27_Michigan_South", "PCS_NAD27_Minnesota_North", "PCS_NAD27_Minnesota_Cent", "PCS_NAD27_Minnesota_South", "PCS_NAD27_Mississippi_East", "PCS_NAD27_Mississippi_West", "PCS_NAD27_Missouri_East", "PCS_NAD27_Missouri_Central", "PCS_NAD27_Missouri_West", "PCS_NAD_Michigan_Michigan_East", "PCS_NAD_Michigan_Michigan_Old_Central", "PCS_NAD_Michigan_Michigan_West", "PCS_NAD83_UTM_zone_3N", "PCS_NAD83_UTM_zone_4N", "PCS_NAD83_UTM_zone_5N", "PCS_NAD83_UTM_zone_6N", "PCS_NAD83_UTM_zone_7N", "PCS_NAD83_UTM_zone_8N", "PCS_NAD83_UTM_zone_9N", "PCS_NAD83_UTM_zone_10N", "PCS_NAD83_UTM_zone_11N", "PCS_NAD83_UTM_zone_12N", "PCS_NAD83_UTM_zone_13N", "PCS_NAD83_UTM_zone_14N", "PCS_NAD83_UTM_zone_15N", "PCS_NAD83_UTM_zone_16N", "PCS_NAD83_UTM_zone_17N", "PCS_NAD83_UTM_zone_18N", "PCS_NAD83_UTM_zone_19N", "PCS_NAD83_UTM_zone_20N", "PCS_NAD83_UTM_zone_21N", "PCS_NAD83_UTM_zone_22N", "PCS_NAD83_UTM_zone_23N", "PCS_NAD83_Alabama_East", "PCS_NAD83_Alabama_West", "PCS_NAD83_Alaska_zone_1", "PCS_NAD83_Alaska_zone_2", "PCS_NAD83_Alaska_zone_3", "PCS_NAD83_Alaska_zone_4", "PCS_NAD83_Alaska_zone_5", "PCS_NAD83_Alaska_zone_6", "PCS_NAD83_Alaska_zone_7", "PCS_NAD83_Alaska_zone_8", "PCS_NAD83_Alaska_zone_9", "PCS_NAD83_Alaska_zone_10", "PCS_NAD83_California_1", "PCS_NAD83_California_2", "PCS_NAD83_California_3", "PCS_NAD83_California_4", "PCS_NAD83_California_5", "PCS_NAD83_California_6", "PCS_NAD83_Arizona_East", "PCS_NAD83_Arizona_Central", "PCS_NAD83_Arizona_West", "PCS_NAD83_Arkansas_North", "PCS_NAD83_Arkansas_South", "PCS_NAD83_Colorado_North", "PCS_NAD83_Colorado_Central", "PCS_NAD83_Colorado_South", "PCS_NAD83_Connecticut", "PCS_NAD83_Delaware", "PCS_NAD83_Florida_East", "PCS_NAD83_Florida_West", "PCS_NAD83_Florida_North", "PCS_NAD83_Hawaii_zone_1", "PCS_NAD83_Hawaii_zone_2", "PCS_NAD83_Hawaii_zone_3", "PCS_NAD83_Hawaii_zone_4", "PCS_NAD83_Hawaii_zone_5", "PCS_NAD83_Georgia_East", "PCS_NAD83_Georgia_West", "PCS_NAD83_Idaho_East", "PCS_NAD83_Idaho_Central", "PCS_NAD83_Idaho_West", "PCS_NAD83_Illinois_East", "PCS_NAD83_Illinois_West", "PCS_NAD83_Indiana_East", "PCS_NAD83_Indiana_West", "PCS_NAD83_Iowa_North", "PCS_NAD83_Iowa_South", "PCS_NAD83_Kansas_North", "PCS_NAD83_Kansas_South", "PCS_NAD83_Kentucky_North", "PCS_NAD83_Kentucky_South", "PCS_NAD83_Louisiana_North", "PCS_NAD83_Louisiana_South", "PCS_NAD83_Maine_East", "PCS_NAD83_Maine_West", "PCS_NAD83_Maryland", "PCS_NAD83_Massachusetts", "PCS_NAD83_Massachusetts_Is", "PCS_NAD83_Michigan_North", "PCS_NAD83_Michigan_Central", "PCS_NAD83_Michigan_South", "PCS_NAD83_Minnesota_North", "PCS_NAD83_Minnesota_Cent", "PCS_NAD83_Minnesota_South", "PCS_NAD83_Mississippi_East", "PCS_NAD83_Mississippi_West", "PCS_NAD83_Missouri_East", "PCS_NAD83_Missouri_Central", "PCS_NAD83_Missouri_West", "PCS_Nahrwan_1967_UTM_38N", "PCS_Nahrwan_1967_UTM_39N", "PCS_Nahrwan_1967_UTM_40N", "PCS_Naparima_UTM_20N", "PCS_GD49_NZ_Map_Grid", "PCS_GD49_North_Island_Grid", "PCS_GD49_South_Island_Grid", "PCS_Datum_73_UTM_zone_29N", "PCS_ATF_Nord_de_Guerre", "PCS_NTF_France_I", "PCS_NTF_France_II", "PCS_NTF_France_III", "PCS_NTF_Nord_France", "PCS_NTF_Centre_France", "PCS_NTF_Sud_France", "PCS_British_National_Grid", "PCS_Point_Noire_UTM_32S", "PCS_GDA94_MGA_zone_48", "PCS_GDA94_MGA_zone_49", "PCS_GDA94_MGA_zone_50", "PCS_GDA94_MGA_zone_51", "PCS_GDA94_MGA_zone_52", "PCS_GDA94_MGA_zone_53", "PCS_GDA94_MGA_zone_54", "PCS_GDA94_MGA_zone_55", "PCS_GDA94_MGA_zone_56", "PCS_GDA94_MGA_zone_57", "PCS_GDA94_MGA_zone_58", "PCS_Pulkovo_Gauss_zone_4", "PCS_Pulkovo_Gauss_zone_5", "PCS_Pulkovo_Gauss_zone_6", "PCS_Pulkovo_Gauss_zone_7", "PCS_Pulkovo_Gauss_zone_8", "PCS_Pulkovo_Gauss_zone_9", "PCS_Pulkovo_Gauss_zone_10", "PCS_Pulkovo_Gauss_zone_11", "PCS_Pulkovo_Gauss_zone_12", "PCS_Pulkovo_Gauss_zone_13", "PCS_Pulkovo_Gauss_zone_14", "PCS_Pulkovo_Gauss_zone_15", "PCS_Pulkovo_Gauss_zone_16", "PCS_Pulkovo_Gauss_zone_17", "PCS_Pulkovo_Gauss_zone_18", "PCS_Pulkovo_Gauss_zone_19", "PCS_Pulkovo_Gauss_zone_20", "PCS_Pulkovo_Gauss_zone_21", "PCS_Pulkovo_Gauss_zone_22", "PCS_Pulkovo_Gauss_zone_23", "PCS_Pulkovo_Gauss_zone_24", "PCS_Pulkovo_Gauss_zone_25", "PCS_Pulkovo_Gauss_zone_26", "PCS_Pulkovo_Gauss_zone_27", "PCS_Pulkovo_Gauss_zone_28", "PCS_Pulkovo_Gauss_zone_29", "PCS_Pulkovo_Gauss_zone_30", "PCS_Pulkovo_Gauss_zone_31", "PCS_Pulkovo_Gauss_zone_32", "PCS_Pulkovo_Gauss_4N", "PCS_Pulkovo_Gauss_5N", "PCS_Pulkovo_Gauss_6N", "PCS_Pulkovo_Gauss_7N", "PCS_Pulkovo_Gauss_8N", "PCS_Pulkovo_Gauss_9N", "PCS_Pulkovo_Gauss_10N", "PCS_Pulkovo_Gauss_11N", "PCS_Pulkovo_Gauss_12N", "PCS_Pulkovo_Gauss_13N", "PCS_Pulkovo_Gauss_14N", "PCS_Pulkovo_Gauss_15N", "PCS_Pulkovo_Gauss_16N", "PCS_Pulkovo_Gauss_17N", "PCS_Pulkovo_Gauss_18N", "PCS_Pulkovo_Gauss_19N", "PCS_Pulkovo_Gauss_20N", "PCS_Pulkovo_Gauss_21N", "PCS_Pulkovo_Gauss_22N", "PCS_Pulkovo_Gauss_23N", "PCS_Pulkovo_Gauss_24N", "PCS_Pulkovo_Gauss_25N", "PCS_Pulkovo_Gauss_26N", "PCS_Pulkovo_Gauss_27N", "PCS_Pulkovo_Gauss_28N", "PCS_Pulkovo_Gauss_29N", "PCS_Pulkovo_Gauss_30N", "PCS_Pulkovo_Gauss_31N", "PCS_Pulkovo_Gauss_32N", "PCS_Qatar_National_Grid", "PCS_RD_Netherlands_Old", "PCS_RD_Netherlands_New", "PCS_SAD69_UTM_zone_18N", "PCS_SAD69_UTM_zone_19N", "PCS_SAD69_UTM_zone_20N", "PCS_SAD69_UTM_zone_21N", "PCS_SAD69_UTM_zone_22N", "PCS_SAD69_UTM_zone_17S", "PCS_SAD69_UTM_zone_18S", "PCS_SAD69_UTM_zone_19S", "PCS_SAD69_UTM_zone_20S", "PCS_SAD69_UTM_zone_21S", "PCS_SAD69_UTM_zone_22S", "PCS_SAD69_UTM_zone_23S", "PCS_SAD69_UTM_zone_24S", "PCS_SAD69_UTM_zone_25S", "PCS_Sapper_Hill_UTM_20S", "PCS_Sapper_Hill_UTM_21S", "PCS_Schwarzeck_UTM_33S", "PCS_Sudan_UTM_zone_35N", "PCS_Sudan_UTM_zone_36N", "PCS_Tananarive_Laborde", "PCS_Tananarive_UTM_38S", "PCS_Tananarive_UTM_39S", "PCS_Timbalai_1948_Borneo", "PCS_Timbalai_1948_UTM_49N", "PCS_Timbalai_1948_UTM_50N", "PCS_TM65_Irish_Nat_Grid", "PCS_Trinidad_1903_Trinidad", "PCS_TC_1948_UTM_zone_39N", "PCS_TC_1948_UTM_zone_40N", "PCS_Voirol_N_Algerie_ancien", "PCS_Voirol_S_Algerie_ancien", "PCS_Voirol_Unifie_N_Algerie", "PCS_Voirol_Unifie_S_Algerie", "PCS_Bern_1938_Swiss_New", "PCS_Nord_Sahara_UTM_29N", "PCS_Nord_Sahara_UTM_30N", "PCS_Nord_Sahara_UTM_31N", "PCS_Nord_Sahara_UTM_32N", "PCS_Yoff_UTM_zone_28N", "PCS_Zanderij_UTM_zone_21N", "PCS_MGI_Austria_West", "PCS_MGI_Austria_Central", "PCS_MGI_Austria_East", "PCS_Belge_Lambert_72", "PCS_DHDN_Germany_zone_1", "PCS_DHDN_Germany_zone_2", "PCS_DHDN_Germany_zone_3", "PCS_DHDN_Germany_zone_4", "PCS_DHDN_Germany_zone_5", "PCS_NAD27_Montana_North", "PCS_NAD27_Montana_Central", "PCS_NAD27_Montana_South", "PCS_NAD27_Nebraska_North", "PCS_NAD27_Nebraska_South", "PCS_NAD27_Nevada_East", "PCS_NAD27_Nevada_Central", "PCS_NAD27_Nevada_West", "PCS_NAD27_New_Hampshire", "PCS_NAD27_New_Jersey", "PCS_NAD27_New_Mexico_East", "PCS_NAD27_New_Mexico_Cent", "PCS_NAD27_New_Mexico_West", "PCS_NAD27_New_York_East", "PCS_NAD27_New_York_Central", "PCS_NAD27_New_York_West", "PCS_NAD27_New_York_Long_Is", "PCS_NAD27_North_Carolina", "PCS_NAD27_North_Dakota_N", "PCS_NAD27_North_Dakota_S", "PCS_NAD27_Ohio_North", "PCS_NAD27_Ohio_South", "PCS_NAD27_Oklahoma_North", "PCS_NAD27_Oklahoma_South", "PCS_NAD27_Oregon_North", "PCS_NAD27_Oregon_South", "PCS_NAD27_Pennsylvania_N", "PCS_NAD27_Pennsylvania_S", "PCS_NAD27_Rhode_Island", "PCS_NAD27_South_Carolina_N", "PCS_NAD27_South_Carolina_S", "PCS_NAD27_South_Dakota_N", "PCS_NAD27_South_Dakota_S", "PCS_NAD27_Tennessee", "PCS_NAD27_Texas_North", "PCS_NAD27_Texas_North_Cen", "PCS_NAD27_Texas_Central", "PCS_NAD27_Texas_South_Cen", "PCS_NAD27_Texas_South", "PCS_NAD27_Utah_North", "PCS_NAD27_Utah_Central", "PCS_NAD27_Utah_South", "PCS_NAD27_Vermont", "PCS_NAD27_Virginia_North", "PCS_NAD27_Virginia_South", "PCS_NAD27_Washington_North", "PCS_NAD27_Washington_South", "PCS_NAD27_West_Virginia_N", "PCS_NAD27_West_Virginia_S", "PCS_NAD27_Wisconsin_North", "PCS_NAD27_Wisconsin_Cen", "PCS_NAD27_Wisconsin_South", "PCS_NAD27_Wyoming_East", "PCS_NAD27_Wyoming_E_Cen", "PCS_NAD27_Wyoming_W_Cen", "PCS_NAD27_Wyoming_West", "PCS_NAD27_Puerto_Rico", "PCS_NAD27_St_Croix", "PCS_NAD83_Montana", "PCS_NAD83_Nebraska", "PCS_NAD83_Nevada_East", "PCS_NAD83_Nevada_Central", "PCS_NAD83_Nevada_West", "PCS_NAD83_New_Hampshire", "PCS_NAD83_New_Jersey", "PCS_NAD83_New_Mexico_East", "PCS_NAD83_New_Mexico_Cent", "PCS_NAD83_New_Mexico_West", "PCS_NAD83_New_York_East", "PCS_NAD83_New_York_Central", "PCS_NAD83_New_York_West", "PCS_NAD83_New_York_Long_Is", "PCS_NAD83_North_Carolina", "PCS_NAD83_North_Dakota_N", "PCS_NAD83_North_Dakota_S", "PCS_NAD83_Ohio_North", "PCS_NAD83_Ohio_South", "PCS_NAD83_Oklahoma_North", "PCS_NAD83_Oklahoma_South", "PCS_NAD83_Oregon_North", "PCS_NAD83_Oregon_South", "PCS_NAD83_Pennsylvania_N", "PCS_NAD83_Pennsylvania_S", "PCS_NAD83_Rhode_Island", "PCS_NAD83_South_Carolina", "PCS_NAD83_South_Dakota_N", "PCS_NAD83_South_Dakota_S", "PCS_NAD83_Tennessee", "PCS_NAD83_Texas_North", "PCS_NAD83_Texas_North_Cen", "PCS_NAD83_Texas_Central", "PCS_NAD83_Texas_South_Cen", "PCS_NAD83_Texas_South", "PCS_NAD83_Utah_North", "PCS_NAD83_Utah_Central", "PCS_NAD83_Utah_South", "PCS_NAD83_Vermont", "PCS_NAD83_Virginia_North", "PCS_NAD83_Virginia_South", "PCS_NAD83_Washington_North", "PCS_NAD83_Washington_South", "PCS_NAD83_West_Virginia_N", "PCS_NAD83_West_Virginia_S", "PCS_NAD83_Wisconsin_North", "PCS_NAD83_Wisconsin_Cen", "PCS_NAD83_Wisconsin_South", "PCS_NAD83_Wyoming_East", "PCS_NAD83_Wyoming_E_Cen", "PCS_NAD83_Wyoming_W_Cen", "PCS_NAD83_Wyoming_West", "PCS_NAD83_Puerto_Rico_Virgin_Is", "PCS_WGS72_UTM_zone_1N", "PCS_WGS72_UTM_zone_2N", "PCS_WGS72_UTM_zone_3N", "PCS_WGS72_UTM_zone_4N", "PCS_WGS72_UTM_zone_5N", "PCS_WGS72_UTM_zone_6N", "PCS_WGS72_UTM_zone_7N", "PCS_WGS72_UTM_zone_8N", "PCS_WGS72_UTM_zone_9N", "PCS_WGS72_UTM_zone_10N", "PCS_WGS72_UTM_zone_11N", "PCS_WGS72_UTM_zone_12N", "PCS_WGS72_UTM_zone_13N", "PCS_WGS72_UTM_zone_14N", "PCS_WGS72_UTM_zone_15N", "PCS_WGS72_UTM_zone_16N", "PCS_WGS72_UTM_zone_17N", "PCS_WGS72_UTM_zone_18N", "PCS_WGS72_UTM_zone_19N", "PCS_WGS72_UTM_zone_20N", "PCS_WGS72_UTM_zone_21N", "PCS_WGS72_UTM_zone_22N", "PCS_WGS72_UTM_zone_23N", "PCS_WGS72_UTM_zone_24N", "PCS_WGS72_UTM_zone_25N", "PCS_WGS72_UTM_zone_26N", "PCS_WGS72_UTM_zone_27N", "PCS_WGS72_UTM_zone_28N", "PCS_WGS72_UTM_zone_29N", "PCS_WGS72_UTM_zone_30N", "PCS_WGS72_UTM_zone_31N", "PCS_WGS72_UTM_zone_32N", "PCS_WGS72_UTM_zone_33N", "PCS_WGS72_UTM_zone_34N", "PCS_WGS72_UTM_zone_35N", "PCS_WGS72_UTM_zone_36N", "PCS_WGS72_UTM_zone_37N", "PCS_WGS72_UTM_zone_38N", "PCS_WGS72_UTM_zone_39N", "PCS_WGS72_UTM_zone_40N", "PCS_WGS72_UTM_zone_41N", "PCS_WGS72_UTM_zone_42N", "PCS_WGS72_UTM_zone_43N", "PCS_WGS72_UTM_zone_44N", "PCS_WGS72_UTM_zone_45N", "PCS_WGS72_UTM_zone_46N", "PCS_WGS72_UTM_zone_47N", "PCS_WGS72_UTM_zone_48N", "PCS_WGS72_UTM_zone_49N", "PCS_WGS72_UTM_zone_50N", "PCS_WGS72_UTM_zone_51N", "PCS_WGS72_UTM_zone_52N", "PCS_WGS72_UTM_zone_53N", "PCS_WGS72_UTM_zone_54N", "PCS_WGS72_UTM_zone_55N", "PCS_WGS72_UTM_zone_56N", "PCS_WGS72_UTM_zone_57N", "PCS_WGS72_UTM_zone_58N", "PCS_WGS72_UTM_zone_59N", "PCS_WGS72_UTM_zone_60N", "PCS_WGS72_UTM_zone_1S", "PCS_WGS72_UTM_zone_2S", "PCS_WGS72_UTM_zone_3S", "PCS_WGS72_UTM_zone_4S", "PCS_WGS72_UTM_zone_5S", "PCS_WGS72_UTM_zone_6S", "PCS_WGS72_UTM_zone_7S", "PCS_WGS72_UTM_zone_8S", "PCS_WGS72_UTM_zone_9S", "PCS_WGS72_UTM_zone_10S", "PCS_WGS72_UTM_zone_11S", "PCS_WGS72_UTM_zone_12S", "PCS_WGS72_UTM_zone_13S", "PCS_WGS72_UTM_zone_14S", "PCS_WGS72_UTM_zone_15S", "PCS_WGS72_UTM_zone_16S", "PCS_WGS72_UTM_zone_17S", "PCS_WGS72_UTM_zone_18S", "PCS_WGS72_UTM_zone_19S", "PCS_WGS72_UTM_zone_20S", "PCS_WGS72_UTM_zone_21S", "PCS_WGS72_UTM_zone_22S", "PCS_WGS72_UTM_zone_23S", "PCS_WGS72_UTM_zone_24S", "PCS_WGS72_UTM_zone_25S", "PCS_WGS72_UTM_zone_26S", "PCS_WGS72_UTM_zone_27S", "PCS_WGS72_UTM_zone_28S", "PCS_WGS72_UTM_zone_29S", "PCS_WGS72_UTM_zone_30S", "PCS_WGS72_UTM_zone_31S", "PCS_WGS72_UTM_zone_32S", "PCS_WGS72_UTM_zone_33S", "PCS_WGS72_UTM_zone_34S", "PCS_WGS72_UTM_zone_35S", "PCS_WGS72_UTM_zone_36S", "PCS_WGS72_UTM_zone_37S", "PCS_WGS72_UTM_zone_38S", "PCS_WGS72_UTM_zone_39S", "PCS_WGS72_UTM_zone_40S", "PCS_WGS72_UTM_zone_41S", "PCS_WGS72_UTM_zone_42S", "PCS_WGS72_UTM_zone_43S", "PCS_WGS72_UTM_zone_44S", "PCS_WGS72_UTM_zone_45S", "PCS_WGS72_UTM_zone_46S", "PCS_WGS72_UTM_zone_47S", "PCS_WGS72_UTM_zone_48S", "PCS_WGS72_UTM_zone_49S", "PCS_WGS72_UTM_zone_50S", "PCS_WGS72_UTM_zone_51S", "PCS_WGS72_UTM_zone_52S", "PCS_WGS72_UTM_zone_53S", "PCS_WGS72_UTM_zone_54S", "PCS_WGS72_UTM_zone_55S", "PCS_WGS72_UTM_zone_56S", "PCS_WGS72_UTM_zone_57S", "PCS_WGS72_UTM_zone_58S", "PCS_WGS72_UTM_zone_59S", "PCS_WGS72_UTM_zone_60S", "PCS_WGS72BE_UTM_zone_1N", "PCS_WGS72BE_UTM_zone_2N", "PCS_WGS72BE_UTM_zone_3N", "PCS_WGS72BE_UTM_zone_4N", "PCS_WGS72BE_UTM_zone_5N", "PCS_WGS72BE_UTM_zone_6N", "PCS_WGS72BE_UTM_zone_7N", "PCS_WGS72BE_UTM_zone_8N", "PCS_WGS72BE_UTM_zone_9N", "PCS_WGS72BE_UTM_zone_10N", "PCS_WGS72BE_UTM_zone_11N", "PCS_WGS72BE_UTM_zone_12N", "PCS_WGS72BE_UTM_zone_13N", "PCS_WGS72BE_UTM_zone_14N", "PCS_WGS72BE_UTM_zone_15N", "PCS_WGS72BE_UTM_zone_16N", "PCS_WGS72BE_UTM_zone_17N", "PCS_WGS72BE_UTM_zone_18N", "PCS_WGS72BE_UTM_zone_19N", "PCS_WGS72BE_UTM_zone_20N", "PCS_WGS72BE_UTM_zone_21N", "PCS_WGS72BE_UTM_zone_22N", "PCS_WGS72BE_UTM_zone_23N", "PCS_WGS72BE_UTM_zone_24N", "PCS_WGS72BE_UTM_zone_25N", "PCS_WGS72BE_UTM_zone_26N", "PCS_WGS72BE_UTM_zone_27N", "PCS_WGS72BE_UTM_zone_28N", "PCS_WGS72BE_UTM_zone_29N", "PCS_WGS72BE_UTM_zone_30N", "PCS_WGS72BE_UTM_zone_31N", "PCS_WGS72BE_UTM_zone_32N", "PCS_WGS72BE_UTM_zone_33N", "PCS_WGS72BE_UTM_zone_34N", "PCS_WGS72BE_UTM_zone_35N", "PCS_WGS72BE_UTM_zone_36N", "PCS_WGS72BE_UTM_zone_37N", "PCS_WGS72BE_UTM_zone_38N", "PCS_WGS72BE_UTM_zone_39N", "PCS_WGS72BE_UTM_zone_40N", "PCS_WGS72BE_UTM_zone_41N", "PCS_WGS72BE_UTM_zone_42N", "PCS_WGS72BE_UTM_zone_43N", "PCS_WGS72BE_UTM_zone_44N", "PCS_WGS72BE_UTM_zone_45N", "PCS_WGS72BE_UTM_zone_46N", "PCS_WGS72BE_UTM_zone_47N", "PCS_WGS72BE_UTM_zone_48N", "PCS_WGS72BE_UTM_zone_49N", "PCS_WGS72BE_UTM_zone_50N", "PCS_WGS72BE_UTM_zone_51N", "PCS_WGS72BE_UTM_zone_52N", "PCS_WGS72BE_UTM_zone_53N", "PCS_WGS72BE_UTM_zone_54N", "PCS_WGS72BE_UTM_zone_55N", "PCS_WGS72BE_UTM_zone_56N", "PCS_WGS72BE_UTM_zone_57N", "PCS_WGS72BE_UTM_zone_58N", "PCS_WGS72BE_UTM_zone_59N", "PCS_WGS72BE_UTM_zone_60N", "PCS_WGS72BE_UTM_zone_1S", "PCS_WGS72BE_UTM_zone_2S", "PCS_WGS72BE_UTM_zone_3S", "PCS_WGS72BE_UTM_zone_4S", "PCS_WGS72BE_UTM_zone_5S", "PCS_WGS72BE_UTM_zone_6S", "PCS_WGS72BE_UTM_zone_7S", "PCS_WGS72BE_UTM_zone_8S", "PCS_WGS72BE_UTM_zone_9S", "PCS_WGS72BE_UTM_zone_10S", "PCS_WGS72BE_UTM_zone_11S", "PCS_WGS72BE_UTM_zone_12S", "PCS_WGS72BE_UTM_zone_13S", "PCS_WGS72BE_UTM_zone_14S", "PCS_WGS72BE_UTM_zone_15S", "PCS_WGS72BE_UTM_zone_16S", "PCS_WGS72BE_UTM_zone_17S", "PCS_WGS72BE_UTM_zone_18S", "PCS_WGS72BE_UTM_zone_19S", "PCS_WGS72BE_UTM_zone_20S", "PCS_WGS72BE_UTM_zone_21S", "PCS_WGS72BE_UTM_zone_22S", "PCS_WGS72BE_UTM_zone_23S", "PCS_WGS72BE_UTM_zone_24S", "PCS_WGS72BE_UTM_zone_25S", "PCS_WGS72BE_UTM_zone_26S", "PCS_WGS72BE_UTM_zone_27S", "PCS_WGS72BE_UTM_zone_28S", "PCS_WGS72BE_UTM_zone_29S", "PCS_WGS72BE_UTM_zone_30S", "PCS_WGS72BE_UTM_zone_31S", "PCS_WGS72BE_UTM_zone_32S", "PCS_WGS72BE_UTM_zone_33S", "PCS_WGS72BE_UTM_zone_34S", "PCS_WGS72BE_UTM_zone_35S", "PCS_WGS72BE_UTM_zone_36S", "PCS_WGS72BE_UTM_zone_37S", "PCS_WGS72BE_UTM_zone_38S", "PCS_WGS72BE_UTM_zone_39S", "PCS_WGS72BE_UTM_zone_40S", "PCS_WGS72BE_UTM_zone_41S", "PCS_WGS72BE_UTM_zone_42S", "PCS_WGS72BE_UTM_zone_43S", "PCS_WGS72BE_UTM_zone_44S", "PCS_WGS72BE_UTM_zone_45S", "PCS_WGS72BE_UTM_zone_46S", "PCS_WGS72BE_UTM_zone_47S", "PCS_WGS72BE_UTM_zone_48S", "PCS_WGS72BE_UTM_zone_49S", "PCS_WGS72BE_UTM_zone_50S", "PCS_WGS72BE_UTM_zone_51S", "PCS_WGS72BE_UTM_zone_52S", "PCS_WGS72BE_UTM_zone_53S", "PCS_WGS72BE_UTM_zone_54S", "PCS_WGS72BE_UTM_zone_55S", "PCS_WGS72BE_UTM_zone_56S", "PCS_WGS72BE_UTM_zone_57S", "PCS_WGS72BE_UTM_zone_58S", "PCS_WGS72BE_UTM_zone_59S", "PCS_WGS72BE_UTM_zone_60S", "PCS_WGS84_UTM_zone_1N", "PCS_WGS84_UTM_zone_2N", "PCS_WGS84_UTM_zone_3N", "PCS_WGS84_UTM_zone_4N", "PCS_WGS84_UTM_zone_5N", "PCS_WGS84_UTM_zone_6N", "PCS_WGS84_UTM_zone_7N", "PCS_WGS84_UTM_zone_8N", "PCS_WGS84_UTM_zone_9N", "PCS_WGS84_UTM_zone_10N", "PCS_WGS84_UTM_zone_11N", "PCS_WGS84_UTM_zone_12N", "PCS_WGS84_UTM_zone_13N", "PCS_WGS84_UTM_zone_14N", "PCS_WGS84_UTM_zone_15N", "PCS_WGS84_UTM_zone_16N", "PCS_WGS84_UTM_zone_17N", "PCS_WGS84_UTM_zone_18N", "PCS_WGS84_UTM_zone_19N", "PCS_WGS84_UTM_zone_20N", "PCS_WGS84_UTM_zone_21N", "PCS_WGS84_UTM_zone_22N", "PCS_WGS84_UTM_zone_23N", "PCS_WGS84_UTM_zone_24N", "PCS_WGS84_UTM_zone_25N", "PCS_WGS84_UTM_zone_26N", "PCS_WGS84_UTM_zone_27N", "PCS_WGS84_UTM_zone_28N", "PCS_WGS84_UTM_zone_29N", "PCS_WGS84_UTM_zone_30N", "PCS_WGS84_UTM_zone_31N", "PCS_WGS84_UTM_zone_32N", "PCS_WGS84_UTM_zone_33N", "PCS_WGS84_UTM_zone_34N", "PCS_WGS84_UTM_zone_35N", "PCS_WGS84_UTM_zone_36N", "PCS_WGS84_UTM_zone_37N", "PCS_WGS84_UTM_zone_38N", "PCS_WGS84_UTM_zone_39N", "PCS_WGS84_UTM_zone_40N", "PCS_WGS84_UTM_zone_41N", "PCS_WGS84_UTM_zone_42N", "PCS_WGS84_UTM_zone_43N", "PCS_WGS84_UTM_zone_44N", "PCS_WGS84_UTM_zone_45N", "PCS_WGS84_UTM_zone_46N", "PCS_WGS84_UTM_zone_47N", "PCS_WGS84_UTM_zone_48N", "PCS_WGS84_UTM_zone_49N", "PCS_WGS84_UTM_zone_50N", "PCS_WGS84_UTM_zone_51N", "PCS_WGS84_UTM_zone_52N", "PCS_WGS84_UTM_zone_53N", "PCS_WGS84_UTM_zone_54N", "PCS_WGS84_UTM_zone_55N", "PCS_WGS84_UTM_zone_56N", "PCS_WGS84_UTM_zone_57N", "PCS_WGS84_UTM_zone_58N", "PCS_WGS84_UTM_zone_59N", "PCS_WGS84_UTM_zone_60N", "PCS_WGS84_UTM_zone_1S", "PCS_WGS84_UTM_zone_2S", "PCS_WGS84_UTM_zone_3S", "PCS_WGS84_UTM_zone_4S", "PCS_WGS84_UTM_zone_5S", "PCS_WGS84_UTM_zone_6S", "PCS_WGS84_UTM_zone_7S", "PCS_WGS84_UTM_zone_8S", "PCS_WGS84_UTM_zone_9S", "PCS_WGS84_UTM_zone_10S", "PCS_WGS84_UTM_zone_11S", "PCS_WGS84_UTM_zone_12S", "PCS_WGS84_UTM_zone_13S", "PCS_WGS84_UTM_zone_14S", "PCS_WGS84_UTM_zone_15S", "PCS_WGS84_UTM_zone_16S", "PCS_WGS84_UTM_zone_17S", "PCS_WGS84_UTM_zone_18S", "PCS_WGS84_UTM_zone_19S", "PCS_WGS84_UTM_zone_20S", "PCS_WGS84_UTM_zone_21S", "PCS_WGS84_UTM_zone_22S", "PCS_WGS84_UTM_zone_23S", "PCS_WGS84_UTM_zone_24S", "PCS_WGS84_UTM_zone_25S", "PCS_WGS84_UTM_zone_26S", "PCS_WGS84_UTM_zone_27S", "PCS_WGS84_UTM_zone_28S", "PCS_WGS84_UTM_zone_29S", "PCS_WGS84_UTM_zone_30S", "PCS_WGS84_UTM_zone_31S", "PCS_WGS84_UTM_zone_32S", "PCS_WGS84_UTM_zone_33S", "PCS_WGS84_UTM_zone_34S", "PCS_WGS84_UTM_zone_35S", "PCS_WGS84_UTM_zone_36S", "PCS_WGS84_UTM_zone_37S", "PCS_WGS84_UTM_zone_38S", "PCS_WGS84_UTM_zone_39S", "PCS_WGS84_UTM_zone_40S", "PCS_WGS84_UTM_zone_41S", "PCS_WGS84_UTM_zone_42S", "PCS_WGS84_UTM_zone_43S", "PCS_WGS84_UTM_zone_44S", "PCS_WGS84_UTM_zone_45S", "PCS_WGS84_UTM_zone_46S", "PCS_WGS84_UTM_zone_47S", "PCS_WGS84_UTM_zone_48S", "PCS_WGS84_UTM_zone_49S", "PCS_WGS84_UTM_zone_50S", "PCS_WGS84_UTM_zone_51S", "PCS_WGS84_UTM_zone_52S", "PCS_WGS84_UTM_zone_53S", "PCS_WGS84_UTM_zone_54S", "PCS_WGS84_UTM_zone_55S", "PCS_WGS84_UTM_zone_56S", "PCS_WGS84_UTM_zone_57S", "PCS_WGS84_UTM_zone_58S", "PCS_WGS84_UTM_zone_59S", "PCS_WGS84_UTM_zone_60S", "PM_Greenwich", "PM_Lisbon", "PM_Paris", "PM_Bogota", "PM_Madrid", "PM_Rome", "PM_Bern", "PM_Jakarta", "PM_Ferro", "PM_Brussels", "PM_Stockholm", "Ellipse_Airy_1830", "Ellipse_Airy_Modified_1849", "Ellipse_Australian_National_Spheroid", "Ellipse_Bessel_1841", "Ellipse_Bessel_Modified", "Ellipse_Bessel_Namibia", "Ellipse_Clarke_1858", "Ellipse_Clarke_1866", "Ellipse_Clarke_1866_Michigan", "Ellipse_Clarke_1880_Benoit", "Ellipse_Clarke_1880_IGN", "Ellipse_Clarke_1880_RGS", "Ellipse_Clarke_1880_Arc", "Ellipse_Clarke_1880_SGA_1922", "Ellipse_Everest_1830_1937_Adjustment", "Ellipse_Everest_1830_1967_Definition", "Ellipse_Everest_1830_1975_Definition", "Ellipse_Everest_1830_Modified", "Ellipse_GRS_1980", "Ellipse_Helmert_1906", "Ellipse_Indonesian_National_Spheroid", "Ellipse_International_1924", "Ellipse_International_1967", "Ellipse_Krassowsky_1940", "Ellipse_NWL_9D", "Ellipse_NWL_10D", "Ellipse_Plessis_1817", "Ellipse_Struve_1860", "Ellipse_War_Office", "Ellipse_WGS_84", "Ellipse_GEM_10C", "Ellipse_OSU86F", "Ellipse_OSU91A", "Ellipse_Clarke_1880", "Ellipse_Sphere", "DatumE_Airy1830", "DatumE_AiryModified1849", "DatumE_AustralianNationalSpheroid", "DatumE_Bessel1841", "DatumE_BesselModified", "DatumE_BesselNamibia", "DatumE_Clarke1858", "DatumE_Clarke1866", "DatumE_Clarke1866Michigan", "DatumE_Clarke1880_Benoit", "DatumE_Clarke1880_IGN", "DatumE_Clarke1880_RGS", "DatumE_Clarke1880_Arc", "DatumE_Clarke1880_SGA1922", "DatumE_Everest1830_1937Adjustment", "DatumE_Everest1830_1967Definition", "DatumE_Everest1830_1975Definition", "DatumE_Everest1830Modified", "DatumE_GRS1980", "DatumE_Helmert1906", "DatumE_IndonesianNationalSpheroid", "DatumE_International1924", "DatumE_International1967", "DatumE_Krassowsky1960", "DatumE_NWL9D", "DatumE_NWL10D", "DatumE_Plessis1817", "DatumE_Struve1860", "DatumE_WarOffice", "DatumE_WGS84", "DatumE_GEM10C", "DatumE_OSU86F", "DatumE_OSU91A", "DatumE_Clarke1880", "DatumE_Sphere", "Datum_Adindan", "Datum_Australian_Geodetic_Datum_1966", "Datum_Australian_Geodetic_Datum_1984", "Datum_Ain_el_Abd_1970", "Datum_Afgooye", "Datum_Agadez", "Datum_Lisbon", "Datum_Aratu", "Datum_Arc_1950", "Datum_Arc_1960", "Datum_Batavia", "Datum_Barbados", "Datum_Beduaram", "Datum_Beijing_1954", "Datum_Reseau_National_Belge_1950", "Datum_Bermuda_1957", "Datum_Bern_1898", "Datum_Bogota", "Datum_Bukit_Rimpah", "Datum_Camacupa", "Datum_Campo_Inchauspe", "Datum_Cape", "Datum_Carthage", "Datum_Chua", "Datum_Corrego_Alegre", "Datum_Cote_d_Ivoire", "Datum_Deir_ez_Zor", "Datum_Douala", "Datum_Egypt_1907", "Datum_European_Datum_1950", "Datum_European_Datum_1987", "Datum_Fahud", "Datum_Gandajika_1970", "Datum_Garoua", "Datum_Guyane_Francaise", "Datum_Hu_Tzu_Shan", "Datum_Hungarian_Datum_1972", "Datum_Indonesian_Datum_1974", "Datum_Indian_1954", "Datum_Indian_1975", "Datum_Jamaica_1875", "Datum_Jamaica_1969", "Datum_Kalianpur", "Datum_Kandawala", "Datum_Kertau", "Datum_Kuwait_Oil_Company", "Datum_La_Canoa", "Datum_Provisional_S_American_Datum_1956", "Datum_Lake", "Datum_Leigon", "Datum_Liberia_1964", "Datum_Lome", "Datum_Luzon_1911", "Datum_Hito_XVIII_1963", "Datum_Herat_North", "Datum_Mahe_1971", "Datum_Makassar", "Datum_European_Reference_System_1989", "Datum_Malongo_1987", "Datum_Manoca", "Datum_Merchich", "Datum_Massawa", "Datum_Minna", "Datum_Mhast", "Datum_Monte_Mario", "Datum_M_poraloko", "Datum_North_American_Datum_1927", "Datum_NAD_Michigan", "Datum_North_American_Datum_1983", "Datum_Nahrwan_1967", "Datum_Naparima_1972", "Datum_New_Zealand_Geodetic_Datum_1949", "Datum_NGO_1948", "Datum_Datum_73", "Datum_Nouvelle_Triangulation_Francaise", "Datum_NSWC_9Z_2", "Datum_OSGB_1936", "Datum_OSGB_1970_SN", "Datum_OS_SN_1980", "Datum_Padang_1884", "Datum_Palestine_1923", "Datum_Pointe_Noire", "Datum_Geocentric_Datum_of_Australia_1994", "Datum_Pulkovo_1942", "Datum_Qatar", "Datum_Qatar_1948", "Datum_Qornoq", "Datum_Loma_Quintana", "Datum_Amersfoort", "Datum_RT38", "Datum_South_American_Datum_1969", "Datum_Sapper_Hill_1943", "Datum_Schwarzeck", "Datum_Segora", "Datum_Serindung", "Datum_Sudan", "Datum_Tananarive_1925", "Datum_Timbalai_1948", "Datum_TM65", "Datum_TM75", "Datum_Tokyo", "Datum_Trinidad_1903", "Datum_Trucial_Coast_1948", "Datum_Voirol_1875", "Datum_Voirol_Unifie_1960", "Datum_Bern_1938", "Datum_Nord_Sahara_1959", "Datum_Stockholm_1938", "Datum_Yacare", "Datum_Yoff", "Datum_Zanderij", "Datum_Militar_Geographische_Institut", "Datum_Reseau_National_Belge_1972", "Datum_Deutsche_Hauptdreiecksnetz", "Datum_Conakry_1905", "Datum_WGS72", "Datum_WGS72_Transit_Broadcast_Ephemeris", "Datum_WGS84", "Datum_Ancienne_Triangulation_Francaise", "Datum_Nord_de_Guerre", "GCSE_Airy1830", "GCSE_AiryModified1849", "GCSE_AustralianNationalSpheroid", "GCSE_Bessel1841", "GCSE_BesselModified", "GCSE_BesselNamibia", "GCSE_Clarke1858", "GCSE_Clarke1866", "GCSE_Clarke1866Michigan", "GCSE_Clarke1880_Benoit", "GCSE_Clarke1880_IGN", "GCSE_Clarke1880_RGS", "GCSE_Clarke1880_Arc", "GCSE_Clarke1880_SGA1922", "GCSE_Everest1830_1937Adjustment", "GCSE_Everest1830_1967Definition", "GCSE_Everest1830_1975Definition", "GCSE_Everest1830Modified", "GCSE_GRS1980", "GCSE_Helmert1906", "GCSE_IndonesianNationalSpheroid", "GCSE_International1924", "GCSE_International1967", "GCSE_Krassowsky1940", "GCSE_NWL9D", "GCSE_NWL10D", "GCSE_Plessis1817", "GCSE_Struve1860", "GCSE_WarOffice", "GCSE_WGS84", "GCSE_GEM10C", "GCSE_OSU86F", "GCSE_OSU91A", "GCSE_Clarke1880", "GCSE_Sphere", "GCS_Adindan", "GCS_AGD66", "GCS_AGD84", "GCS_Ain_el_Abd", "GCS_Afgooye", "GCS_Agadez", "GCS_Lisbon", "GCS_Aratu", "GCS_Arc_1950", "GCS_Arc_1960", "GCS_Batavia", "GCS_Barbados", "GCS_Beduaram", "GCS_Beijing_1954", "GCS_Belge_1950", "GCS_Bermuda_1957", "GCS_Bern_1898", "GCS_Bogota", "GCS_Bukit_Rimpah", "GCS_Camacupa", "GCS_Campo_Inchauspe", "GCS_Cape", "GCS_Carthage", "GCS_Chua", "GCS_Corrego_Alegre", "GCS_Cote_d_Ivoire", "GCS_Deir_ez_Zor", "GCS_Douala", "GCS_Egypt_1907", "GCS_ED50", "GCS_ED87", "GCS_Fahud", "GCS_Gandajika_1970", "GCS_Garoua", "GCS_Guyane_Francaise", "GCS_Hu_Tzu_Shan", "GCS_HD72", "GCS_ID74", "GCS_Indian_1954", "GCS_Indian_1975", "GCS_Jamaica_1875", "GCS_JAD69", "GCS_Kalianpur", "GCS_Kandawala", "GCS_Kertau", "GCS_KOC", "GCS_La_Canoa", "GCS_PSAD56", "GCS_Lake", "GCS_Leigon", "GCS_Liberia_1964", "GCS_Lome", "GCS_Luzon_1911", "GCS_Hito_XVIII_1963", "GCS_Herat_North", "GCS_Mahe_1971", "GCS_Makassar", "GCS_EUREF89", "GCS_Malongo_1987", "GCS_Manoca", "GCS_Merchich", "GCS_Massawa", "GCS_Minna", "GCS_Mhast", "GCS_Monte_Mario", "GCS_M_poraloko", "GCS_NAD27", "GCS_NAD_Michigan", "GCS_NAD83", "GCS_Nahrwan_1967", "GCS_Naparima_1972", "GCS_GD49", "GCS_NGO_1948", "GCS_Datum_73", "GCS_NTF", "GCS_NSWC_9Z_2", "GCS_OSGB_1936", "GCS_OSGB70", "GCS_OS_SN80", "GCS_Padang", "GCS_Palestine_1923", "GCS_Pointe_Noire", "GCS_GDA94", "GCS_Pulkovo_1942", "GCS_Qatar", "GCS_Qatar_1948", "GCS_Qornoq", "GCS_Loma_Quintana", "GCS_Amersfoort", "GCS_RT38", "GCS_SAD69", "GCS_Sapper_Hill_1943", "GCS_Schwarzeck", "GCS_Segora", "GCS_Serindung", "GCS_Sudan", "GCS_Tananarive", "GCS_Timbalai_1948", "GCS_TM65", "GCS_TM75", "GCS_Tokyo", "GCS_Trinidad_1903", "GCS_TC_1948", "GCS_Voirol_1875", "GCS_Voirol_Unifie", "GCS_Bern_1938", "GCS_Nord_Sahara_1959", "GCS_Stockholm_1938", "GCS_Yacare", "GCS_Yoff", "GCS_Zanderij", "GCS_MGI", "GCS_Belge_1972", "GCS_DHDN", "GCS_Conakry_1905", "GCS_WGS_72", "GCS_WGS_72BE", "GCS_WGS_84", "GCS_Bern_1898_Bern", "GCS_Bogota_Bogota", "GCS_Lisbon_Lisbon", "GCS_Makassar_Jakarta", "GCS_MGI_Ferro", "GCS_Monte_Mario_Rome", "GCS_NTF_Paris", "GCS_Padang_Jakarta", "GCS_Belge_1950_Brussels", "GCS_Tananarive_Paris", "GCS_Voirol_1875_Paris", "GCS_Voirol_Unifie_Paris", "GCS_Batavia_Jakarta", "GCS_ATF_Paris", "GCS_NDG_Paris", "Angular_Radian", "Angular_Degree", "Angular_Arc_Minute", "Angular_Arc_Second", "Angular_Grad", "Angular_Gon", "Angular_DMS", "Angular_DMS_Hemisphere", "Linear_Meter", "Linear_Foot", "Linear_Foot_US_Survey", "Linear_Foot_Modified_American", "Linear_Foot_Clarke", "Linear_Foot_Indian", "Linear_Link", "Linear_Link_Benoit", "Linear_Link_Sears", "Linear_Chain_Benoit", "Linear_Chain_Sears", "Linear_Yard_Sears", "Linear_Yard_Indian", "Linear_Fathom", "Linear_Mile_International_Nautical", "RasterPixelIsArea", "RasterPixelIsPoint", "ModelTypeProjected", "ModelTypeGeographic", "ModelTypeGeocentric", "VerticalCSTypeGeoKey", "VerticalCitationGeoKey", "VerticalDatumGeoKey", "VerticalUnitsGeoKey", "ProjectedCSTypeGeoKey", "PCSCitationGeoKey", "ProjectionGeoKey", "ProjCoordTransGeoKey", "ProjLinearUnitsGeoKey", "ProjLinearUnitSizeGeoKey", "ProjStdParallel1GeoKey", "ProjStdParallel2GeoKey", "ProjNatOriginLongGeoKey", "ProjNatOriginLatGeoKey", "ProjFalseEastingGeoKey", "ProjFalseNorthingGeoKey", "ProjFalseOriginLongGeoKey", "ProjFalseOriginLatGeoKey", "ProjFalseOriginEastingGeoKey", "ProjFalseOriginNorthingGeoKey", "ProjCenterLongGeoKey", "ProjCenterLatGeoKey", "ProjCenterEastingGeoKey", "ProjCenterNorthingGeoKey", "ProjScaleAtNatOriginGeoKey", "ProjScaleAtCenterGeoKey", "ProjAzimuthAngleGeoKey", "ProjStraightVertPoleLongGeoKey", "GeographicTypeGeoKey", "GeogCitationGeoKey", "GeogGeodeticDatumGeoKey", "GeogPrimeMeridianGeoKey", "GeogLinearUnitsGeoKey", "GeogLinearUnitSizeGeoKey", "GeogAngularUnitsGeoKey", "GeogAngularUnitSizeGeoKey", "GeogEllipsoidGeoKey", "GeogSemiMajorAxisGeoKey", "GeogSemiMinorAxisGeoKey", "GeogInvFlatteningGeoKey", "GeogAzimuthUnitsGeoKey", "GeogPrimeMeridianLongGeoKey", "GTModelTypeGeoKey", "GTRasterTypeGeoKey", "GTCitationGeoKey", "Unsupported compression method: %d\n", "s->num_entries < 32", "libavcodec/tiffenc.c", "This colors format is not supported\n", "Encode strip failed\n", "TIFF encoder", "set the image resolution (in dpi)", "compression_algo", "packbits", "Input buffer too small, truncated sample?\n", " INTER", " SPRITE", " INTERPOL", "invalid header size (%d)\n", "Input packet too small.\n", "invalid header type (%d)\n", "Frame with sprite", "Interpolated frame", "invalid compression type (%d)\n", "invalid vector table id (%d)\n", "Frame with odd width", "tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\n", " help! truemotion1 decoder went out of bounds\n", "Invalid index value.\n", "Width and height must be multiple of 4\n", "Tree exceeded its given depth (%i)\n", "Too many literals\n", "Cannot allocate temporary buffer\n", "Old TM2 header", "Not a TM2 header: 0x%08X\n", "no space for tm2_read_stream\n", "not enough space for len left\n", "invalid stream size\n", "Incorrect delta table: %i deltas x %i bits\n", "Incorrect tree parameters - literal length: %i, max code length: %i\n", "Incorrect number of Huffman tree nodes: %i\n", "Got less codes than expected: %i of %i\n", "Incorrect number of tokens: %i\n", "Invalid delta token index %d for type %d, n=%d\n", "Got %i tokens for %i blocks\n", "Read token from stream %i out of bounds (%i>=%i)\n", "token %d is too large\n", "MV out of picture\n", "Skipping unknown block type %i\n", "Too small input buffer (%d bytes), need at least 32 bytes\n", "Cannot allocate slice information\n", "Incorrect frame type %u\n", "Frame is too short\n", "Invalid quantisers %d / %d\n", "Slice properties chunk is too large\n", "Too many slice properties\n", "Too few slice properties (%d / %d)\n", "Invalid slice size (%u/%u)\n", "Non-skip row with zero size\n", "Error decoding slice %d\n", "Invalid format\n", "Missing password for encrypted stream. Please use the -password option\n", "Invalid samplerate\n", "Invalid/unsupported sample format.\n", "sample_rate too large\n", "format: %d chans: %d bps: %d rate: %d block: %d\n", "data_length: %d frame_length: %d last: %d total: %d\n", "frame_length too large\n", "Wrong extradata present\n", "TTA1", "TTA Decoder", "password", "Set decoding password", "Block align is %d bits, expected %d\n", "Too many frames per packet (%d)\n", "Unsupported sample rate\n", "Bad bitrate per channel value %d\n", "VQF TwinVQ should have only one frame per packet\n", "texture data version %i is unsupported\n", "depth of %i is unsupported\n", "unsupported d3d format (%08x)\n", "warning: modifier must be 0 or 1, got %i\n", "warning: unknown escape 0x%02X\n", "ultimotion", "FFmpeg version 2.8.6", "val || !min_size", "./libavutil/mem_internal.h", "s->codec_type == AVMEDIA_TYPE_VIDEO", "libavcodec/utils.c", "Failed to set dimensions %d %d\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "Invalid channel count", "Invalid sample rate", "PARAM_CHANGE side data too small.\n", "ignoring invalid SAR: %d/%d\n", "desc->flags & (1 << 4)", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "default_get_buffer called on pic %p\n", "frame->nb_extended_buf == 0", "default_get_buffer called on frame %p", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "video_get_buffer: image parameters invalid\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "reget_buffer() failed\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %lld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %lld)\n", "Failed to allocate packet of size %lld\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "avctx->codec->encode2", "Provided packet is too small, needs to be %d\n", "AVFrame.format is not set\n", "AVFrame.width or height is not set\n", "ret <= 0", "buffer smaller than minimum size\n", "start_display_time must be 0.\n", "Invalid media type for video\n", "Error applying parameter changes.\n", "!picture->extended_data || picture->extended_data == picture->data", "invalid packet: NULL data, size != 0\n", "Invalid media type for audio\n", "ret <= tmp.size", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "Custom get_buffer() for use withavcodec_decode_audio3() detected. Overriding with avcodec_default_get_buffer\n", "Please port your application to avcodec_decode_audio4()\n", "output buffer size is too small for the current frame (%d < %d)\n", "Invalid media type for subtitles\n", "UTF-8", "cd != (iconv_t)-1", "Subtitles packet is too big for recoding\n", "Unable to recode subtitle event \"%s\" from %s to UTF-8\n", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "unknown_codec", "Codec 0x%x is not in the full list.\n", "[%d]", "--enable-cross-compile --cross-prefix=arm-linux-gnueabi- --host-cc=/usr/bin/gcc --arch=arm --target-os=linux --disable-stripping --pkg-config=/usr/bin/pkg-config --enable-static --enable-shared --prefix=./result/ffmpeg-2.8.6-arm32 --enable-avfilter --disable-version3 --enable-logging --enable-optimizations --disable-extra-warnings --enable-avdevice --enable-avcodec --enable-avformat --disable-x11grab --enable-network --disable-gray --enable-swscale-alpha --disable-small --enable-dct --enable-fft --enable-mdct --enable-rdft --disable-crystalhd --disable-vdpau --disable-dxva2 --enable-runtime-cpudetect --disable-hardcoded-tables --disable-memalign-hack --disable-mipsdspr1 --disable-mipsdspr2 --disable-msa --enable-hwaccels --disable-avisynth --disable-frei0r --disable-libopencore-amrnb --disable-libopencore-amrwb --disable-libopencv --disable-libcdio --disable-libdc1394 --disable-libfaac --disable-libgsm --disable-libilbc --disable-libnut --disable-libopenjpeg --disable-libschroedinger --disable-libvo-aacenc --disable-libvo-amrwbenc --disable-symver --disable-doc --disable-gpl --disable-nonfree --enable-ffmpeg --disable-ffplay --disable-ffserver --disable-avresample --disable-ffprobe --disable-postproc --disable-swscale --enable-indevs --enable-outdevs --enable-pthreads --enable-zlib --disable-bzlib --disable-libfdk-aac --disable-gnutls --disable-openssl --disable-libdcadec --disable-libopenh264 --disable-vaapi --disable-libopus --disable-libvpx --disable-libass --disable-libbluray --disable-librtmp --disable-libmp3lame --disable-libmodplug --disable-libspeex --disable-libtheora --disable-libwavpack --disable-libfreetype --disable-fontconfig --disable-libx264 --disable-libx265 --disable-yasm --disable-mmx --disable-sse --disable-sse2 --disable-sse3 --disable-ssse3 --disable-sse4 --disable-sse42 --disable-avx --disable-avx2 --enable-armv6 --enable-vfp --enable-neon --enable-mipsfpu --disable-mips32r2 --disable-altivec --enable-pic --cpu=cortex-a9", "libavcodec license: LGPL version 2.1 or later", "avcodec_encode_audio() does not support this codec\n", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s, ", "%s/%s/%s, ", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", %dx%d", ", pass 1", ", pass 2", ", %d kb/s", ", max. %d kb/s", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "n >= 1", "Ignoring experimental hwaccel: %s\n", "choices[n] != AV_PIX_FMT_NONE", "Could not find an AVHWAccel for the pixel format: %s", "ff_avcodec_locked", "Insufficient thread locking. At least %d threads are calling avcodec_open2() at the same time right now.\n", "No lock manager is set, please see av_lockmgr_register()\n", "!ff_avcodec_locked", "!dst->progress", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "The 'vismv' option is deprecated, see the codecview filter instead.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout not specified\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "dimensions not set\n", "Bitrate %d is extremely low, maybe you mean %dk\n", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Unable to open iconv context with input character encoding \"%s\"\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Specified channel layout '%s' is not supported\n", "p <= end", "Insufficient extradata size %d, should be at least 16\n", "Encoder version %d.%d.%d.%d\n", "Original format %X\n", "Frame info not 4 bytes", "Encoding parameters %08X\n", "Unknown Ut Video FOURCC provided (%08X)\n", "Insufficient data for a plane\n", "Incorrect slice size\n", "Not enough data for frame information\n", "frame information flags %X\n", "Frame with gradient prediction", "Cannot build Huffman codes\n", "Plane has more than one symbol yet a slice has a length of zero.\n", "Slice decoding ran out of bits\n", "Decoding error\n", "%d bits left after decoding slice\n", "4:2:2 video requires even width.\n", "Unknown pixel format: %d\n", "Prediction method %d is not supported in Ut Video.\n", "Plane prediction is not supported in Ut Video.\n", "Gradient prediction is not supported.\n", "Slice count %d is not supported in Ut Video (theoretical range is 0-256).\n", "Slice count %d is larger than the subsampling-applied height %d.\n", "Could not allocate extradata.\n", "Cannot allocate temporary buffer 1.\n", "Unknown prediction mode: %d\n", "Cannot allocate temporary buffer 2.\n", "Error encoding plane %d.\n", "Broken v210 with too small padding (64 byte) detected\n", "v210 needs even width\n", "V210 Decoder", "custom_stride", "Custom V210 stride", "Packet too small\n", "(Probably) padded data", "v210x needs even width\n", "v308 requires width to be even.\n", "v410 requires width to be even, continuing anyway.\n", "Invalid opcode seen @%d\n", "Palette change runs beyond entry 256\n", "Palette data runs beyond chunk size\n", "Could not allocate values buffer.\n", "Invalid packet size\n", "Unsupported VBLE Version: %d\n", "Invalid Code\n", "invalid NORM-6 VLC\n", "Header: %0X\n", "WMV3 Complex Profile is not fully supported\n", "Reserved LEVEL %i\n", "Only 4:2:0 chroma format supported\n", "Advanced Profile level %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, ChromaFormat=%i, Pulldown=%i, Interlace: %i\nTFCTRflag=%i, FINTERPflag=%i\n", "Progressive Segmented Frame mode: not supported (yet)\n", "Display extended info:\n", "Display dimensions: %ix%i\n", "Aspect: %i:%i\n", "Old interlaced mode is not supported\n", "LOOPFILTER shall not be enabled in Simple Profile\n", "FASTUVMC unavailable in Simple Profile\n", "Extended MVs unavailable in Simple Profile\n", "1 for reserved RES_TRANSTAB is forbidden\n", "RANGERED should be set to 0 in Simple Profile\n", "Unsupported sprite feature\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Profile %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\nLoopFilter=%i, MultiRes=%i, FastUVMC=%i, Extended MV=%i\nRangered=%i, VSTransform=%i, Overlap=%i, SyncMarker=%i\nDQuant=%i, Quantizer mode=%i, Max B frames=%i\n", "Entry point: %08X\n", "Luma scaling is not supported, expect wrong picture\n", "Chroma scaling is not supported, expect wrong picture\n", "Entry point info:\nBrokenLink=%i, ClosedEntry=%i, PanscanFlag=%i\nRefDist=%i, Postproc=%i, FastUVMC=%i, ExtMV=%i\nDQuant=%i, VSTransform=%i, Overlap=%i, Qmode=%i\n", "bfraction invalid\n", "MB MV Type plane encoding: Imode: %i, Invert: %i\n", "MB Skip plane encoding: Imode: %i, Invert: %i\n", "VOP DQuant info\n", "MB Direct Type plane encoding: Imode: %i, Invert: %i\n", "v->s.mb_height == v->s.height + 15 >> 4 || v->s.mb_height == (((v->s.height + 15 >> 4)+(2)-1)&~((2)-1))", "libavcodec/vc1.c", "Pan-scan", "FIELDTX plane encoding: Imode: %i, Invert: %i\n", "ACPRED plane encoding: Imode: %i, Invert: %i\n", "CONDOVER plane encoding: Imode: %i, Invert: %i\n", "SKIPMB plane encoding: Imode: %i, Invert: %i\n", "B Fields\n", "MB Forward Type plane encoding: Imode: %i, Invert: %i\n", "Intensity compensation set for B picture\n", "Illegal DC VLC\n", "Bits overconsumption: %i > %i\n", "Overriding invalid mquant %d\n", "index < esc", "libavcodec/vc1_block.c", "Mixed field/frame direct mode not supported\n", "Bits overconsumption: %i > %i at %ix%i\n", "Mixed frame/field direct mode not supported\n", "!v->field_mode", "libavcodec/vc1_pred.c", "Error in WVC1 interlaced frame\n", "pict_type: %c\n", "Sprite decoder: expected I-frame\n", "image too short\n", "Skipping B frame without reference frames\n", "parsing header for second field failed", "mb_height > 0", "libavcodec/vc1dec.c", "Slice %d starts beyond picture boundary (%d >= %d)\n", "(s->mb_height & 1) == 0", "Field header damaged\n", "Slice header damaged\n", "first field slice count too large\n", "end mb y %d %d invalid\n", "missing cbpcy_vlc\n", "Non-zero rotation coefficients", " %d.%.3d", "Effect: %d; params: ", " %d.%.2d", "Too many effect parameters\n", "Effect params 2: ", "Effect flag set\n", "Buffer overrun\n", "Buffer not fully read\n", "Got no sprites\n", "Need two sprites, only got one\n", "Extra data: %i bits left, value: %X\n", "Read %i bits in overflow\n", "Extradata size too small: %i\n", "Incomplete extradata\n", "odd sprites support", "Complex", "Advanced", "Insufficient input data. %d < %d\n", "bytestream_end - bytestream >= 4 + avctx->width", "libavcodec/vcr1.c", "bytestream_end - bytestream >= avctx->width / 2", "odd dimensions (%d x %d) support", "@skipping small junk packet\n", "unknown block type: %d\n", "avctx->block_align * silent_chunks <= frame->nb_samples * avctx->channels", "libavcodec/vmdaudio.c", "(buf_size & (avctx->channels > 1)) == 0", "invalid block align\n", "%d channels, %d bits/sample, block align = %d, sample rate = %d\n", "Invalid horizontal range %d-%d\n", "Invalid vertical range %d-%d\n", "Incomplete palette\n", "Trying to unpack LZ-compressed frame with no LZ buffer\n", "offset > width (%d > %d)\n", "Unsupported bitdepth %i\n", "Premature end of data!\n", "dimensions too large\n", "Premature end of data! (need %i got %i)\n", "Cursor hot spot is not in image: %ix%i of %ix%i cursor size\n", "Depth mismatch. Container %i bpp, Frame data: %i bpp\n", "Invalid header: bigendian flag = %i\n", "Incorrect frame size: %ix%i+%ix%i of %ix%i\n", "Rectangle outside picture\n", "Unsupported block type 0x%08X\n", "Duplicate value found in floor 1 X coordinates\n", "Extradata corrupt.\n", "Id header is too short\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Setup header is too short\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "Out of memory\n", "Invalid Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "Unsupported mode count: %d\n", "Invalid packet\n", "Invalid mode in packet\n", "Vorbis parser", "Index value %d out of range (0 - %d) for %s at %s:%i\n", " Vorbis id header packet corrupt (no vorbis signature). \n", " Vorbis id header packet corrupt (illegal blocksize). \n", " Vorbis id header packet corrupt (framing flag not set). \n", " Vorbis setup header packet corrupt (no vorbis signature). \n", " %u. Codebook setup data corrupt.\n", " %u. Codebook's dimension is invalid (%d).\n", " %u. Codebook has too many entries (%u).\n", " More codelengths than codes in codebook. \n", "Bug in codevector vector building code. \n", "Codebook lookup type not supported. \n", " Invalid code lengths while generating vlcs. \n", " Error generating vlc tables. \n", " Vorbis setup header packet corrupt (codebooks). \n", "Vorbis time domain transform data nonzero. \n", " Vorbis setup header packet corrupt (time domain transforms). \n", "libavcodec/vorbisdec.c", "floor_setup->data.t1.class_masterbook[j]", "A rangebits value of 0 is not compliant with the Vorbis I specification.\n", "Floor value is too large for blocksize: %u (%u)\n", "Floor 0 order is 0.\n", "Floor 0 rate is 0.\n", "Floor 0 bark map size is 0.\n", "book_idx", "Invalid floor type!\n", "partition out of bounds: type, begin, end, size, blocksize: %u, %u, %u, %u, %u\n", "res_setup->classbook", "res_setup->books[j][k]", "Other mappings than type 0 are not compliant with the Vorbis I specification. \n", "Square polar channel mapping with less than two channels is not compliant with the Vorbis I specification.\n", "mapping_setup->magnitude[j]", "mapping_setup->angle[j]", "%u. mapping setup data invalid.\n", "mapping_setup->submap_floor[j]", "mapping_setup->submap_residue[j]", "mode_setup->mapping", " Vorbis setup header packet corrupt (framing flag). \n", " Vorbis setup header packet corrupt (floors). \n", " Vorbis setup header packet corrupt (residues). \n", " Vorbis setup header packet corrupt (mappings). \n", " Vorbis setup header packet corrupt (modes). \n", "Id header corrupt.\n", "Ignoring comment header\n", "Setup header corrupt.\n", "Data packet before valid headers\n", "Not a Vorbis I audio packet.\n", "mode_number", "Invalid codebook in vorbis_floor_decode.\n", "Too many channels in vorbis_floor_decode.\n", "Insufficient output buffer\n", "Invalid vlc code decoding %d channel.", "vr->classifications > 1", " Invalid residue type while residue decode?! \n", "Extradata missing.\n", "First header is not the id header.\n", "Third header is not the setup header.\n", "put_vector", "floor_encode", "residue_encode", "\f\f\t\t\n\n\n\n\u000b\u000b\u000b\f", "\r\r\t\t\n\n\n\n\u000b\u000b\f\f", "\n\n\n\n\u000b\u000b\f\f\f\f", "\n\n\n\n\u000b\u000b\f\f\f\f", "\t\t\t\t\n\n\n\n\u000b\n\u000b\u000b\f\f", "\t\t\n\n\n\n\u000b\u000b\u000b\u000b\f\f", "\t\n\n\n\u000b\u000b\u000b\u000b\f\f\r\r", "\n\n\n\n\u000b\u000b\f\f\r\r", "\u000b\u000b\u000b\u000b\f\f\f\f\r\r", "\u000b\u000b\u000b\u000b\f\f\f\f\r\r", "\u000b\u000b\f\f\f\f\r\r\r\r", "\f\f\f\f\r\r\r\r", "\t\t\t\t\n\n", "\t\t\t\t\n\n", "\n\n\n\n\u000b\u000b", "\n\n\u000b\u000b", "book->dimensions", "output buffer is too small\n", "l != csub", "real_ch == 2", "rc->type == 0 || rc->type == 2", "!(psize % book->ndimensions)", "rc->type == 2", "Current FFmpeg Vorbis encoder only supports 2 channels.\n", "cb->ndimensions >= 2", "cb->lookup", "Invalid huffman table\n", "Theora bitstream version %X\n", "Old (<alpha3) Theora bitstream, flipped image\n", "Invalid frame dimensions - w:%d h:%d x:%d y:%d (%dx%d).\n", "Invalid framerate\n", "Invalid pixel format\n", "Reducing offset_x from %d to %dchroma samples to preserve alignment.\n", "huffman tree overflow\n", "Invalid number of coefficents at level %d\n", "Invalid zero run of %d with %d coeffs left\n", "Invalid token %d\n", "More blocks ended than coded!\n", "invalid number of base matrixes\n", "invalid base matrix index\n", "invalid qi %d > 63\n", "Missing extradata!\n", "Corrupt extradata\n", "Invalid extradata!\n", "Unknown Theora config packet: %d\n", "%d bits left in packet %X\n", "midstream reconfiguration with multithreading is unsupported, try -threads 1\n", "Header packet passed to frame decoder, skipping\n", "Data packet without prior valid headers\n", " VP3 %sframe #%d: Q index = %d\n", "filter_limit < 128U", "libavcodec/vp3.c", "VP version: %d\n", "Warning, unsupported keyframe coding type?!\n", "vp3: first frame not a keyframe\n", "Invalid partially coded superblock run length\n", "Invalid fully coded superblock run length\n", "error in unpack_dct_coeffs\n", "Coefficient index overflow\n", "error in unpack_superblocks\n", "error in unpack_modes\n", "error in unpack_vectors\n", "error in unpack_block_qpis\n", "interlacing not supported\n", "Invalid size %dx%d\n", "picture too big\n", "Alpha reconfiguration\n", "Interlacing", "Ran out of free frames!\n", "Feature %s present in macroblock (value 0x%x)\n", "Insufficent data (%d) for header\n", "Unknown profile %d\n", "Header size larger than data provided\n", "Invalid start code 0x%x\n", "Upscaling", "Unspecified colorspace\n", "Invalid partitions\n", "Unknown profile %d", "Buffer size %d is too small, needed : %d\n", "Discarding interframe without a prior keyframe!\n", "q-index", "lf-delta", "partial-golden-update", "blit-pitch", "Failed to allocate frame buffer %d\n", "Reserved bit set in RGB\n", "RGB not supported in profile %d\n", "YUV 4:2:0 not supported in profile %d\n", "Profile %d color details reserved bit set\n", "Failed to initialize bitstream reader\n", "Invalid frame marker\n", "Profile %d is not yet supported\n", "Invalid sync code\n", "Not all references are available\n", "Ref pixfmt (%s) did not match current frame (%s)", "Invalid ref frame dimensions %dx%d for frame size %dx%d\n", "Reference segmap (temp=%d,update=%d) enabled on size-change!\n", "w > 0 && h > 0", "libavcodec/vp9.c", "Ran out of memory during range coder init\n", "Invalid compressed header size\n", "Marker bit was set\n", "Failed to initialize decoder for %dx%d @ %d\n", "Requested reference %d not available\n", "Failed to allocate block buffers\n", "Profile 0", "Profile 1", "Profile 2", "Profile 3", "Superframe packet size too big: %u > %d\n", "bpp == 12", "libavcodec/vp9dsp.c", "decode_format80 problem: dest_index (%d) exceeded dest_size (%d)\n", "decode_format80 problem: next op would overflow dest_index\n", "current dest_index = %d, count = %d, dest_size = %d\n", "current src_pos = %d, count = %d, dest_size = %d\n", "decode_format80 problem: decode finished with dest_index (%d) < dest_size (%d)\n", "VQA Version %d", "VQA Version %i", "Image size not multiple of block size\n", "Found unknown chunk type: %c%c%c%c (%08X)\n", "problem: found both CPL0 and CPLZ chunks\n", "problem: found a palette chunk with %d colors\n", "problem: found both CBF0 and CBFZ chunks\n", "problem: CBF0 chunk too large (0x%X bytes)\n", "problem: no VPTZ chunk found\n", "problem: found both CBP0 and CBPZ chunks\n", "cbp0 chunk too large (%u bytes)\n", "cbpz chunk too large (%u bytes)\n", "vqavideo", "k %d is too large\n", "Too few bits (%d) left\n", "Invalid number of samples: %d\n", "Block %d has invalid size (size %d vs. %d bytes left)\n", "Context for block %d is not present\n", "Mismatching number of samples in a sequence: %d and %d\n", "Got incorrect block %02X with size %i\n", "Block size %i is out of bounds\n", "Too many decorrelation terms\n", "No decorrelation terms met\n", "Too many decorrelation weights\n", "Entropy vars size should be %i, got %i.\n", "Invalid INT32INFO, size = %i\n", "Invalid INT32INFO, extra_bits = %d (> 32)\n", "Invalid FLOATINFO, size = %i\n", "Invalid EXTRABITS, size = %i\n", "Insufficient channel information\n", "%i channels signalled instead of %i.\n", "Invalid channel info size %d\n", "Invalid custom sample rate.\n", "No block with decorrelation terms\n", "No block with decorrelation weights\n", "No block with decorrelation samples\n", "No block with entropy info\n", "Hybrid config not found\n", "Packed samples not found\n", "Float information not found\n", "Too small EXTRABITS\n", "Custom sample rate missing.\n", "Too many channels coded in a packet.\n", "sample %d %d too large\n", "Extra bits CRC error\n", "Not enough channels coded in a packet.\n", "Error creating frame decode context\n", "Invalid channel count: %d\n", "!bytestream2_get_eof(&pb)", "libavcodec/wavpackenc.c", "WavPack encoder", "joint_stereo", "joint", "mid/side", "left/right", "optimize_mono", "opt_mono", "libavcodec/webp.c", "invalid color cache bits: %d\n", "max symbol %d > alphabet size %d\n", "invalid symbol %d + repeat %d > alphabet size %d\n", "distance prefix code too large: %d\n", "color cache not found\n", "color cache index out-of-bounds\n", "Invalid WebP Lossless signature\n", "Width mismatch. %d != %d\n", "Height mismatch. %d != %d\n", "Invalid WebP Lossless version\n", "Transform %d used more than once\n", "invalid predictor mode: %d\n", "missing WEBP tag\n", "unsupported chunk size\n", "ALPHA chunk present, but alpha bit not set in the VP8X header\n", "invalid ALPHA chunk size\n", "skipping unsupported ALPHA chunk\n", "Ignoring extra EXIF chunk\n", "EXIF chunk present, but Exif bit not set in the VP8X header\n", "invalid TIFF header in Exif data\n", "error decoding Exif data\n", "skipping unsupported chunk: %s\n", "skipping unknown chunk: %s\n", "image data not found\n", "WebP image", "</i>", "</b>", "</u>", "</%c>", "byte_offset_bits %d is too large\n", "broken escape sequence\n", "overflow (%d > %d) in spectral RLE, ignoring\n", "prev_block_len_bits %d out of range\n", "block_len_bits %d out of range\n", "next_block_len_bits %d out of range\n", "block_len_bits not initialized to a valid value\n", "frame_len overflow\n", "total_gain overread\n", "hgain vlc invalid\n", "Exponent vlc invalid\n", "Exponent out of range: %d\n", "Input packet size too small (%d < %d)\n", "Invalid last frame bit offset %d > buf size %d (%d)\n", "len %d invalid\n", "nb_frames is %d bits left %d\n", "sample rate is too high: %d > 48kHz\n", "bitrate too low: got %i, need 24000 or higher\n", "libavcodec/wmaenc.c", "Invalid input data or requested bitrate too low, cannot encode\n", "(put_bits_count(&s->pb) & 7) == 0", "i>=0", "put_bits_ptr(&s->pb) - s->pb.buf == avctx->block_align", "Unsupported extradata size", "s->samples_per_frame <= (1 << 14)", "libavcodec/wmalosslessdec.c", "invalid number of subframes %u\n", "invalid number of channels %d\n", "More than %d channels", "Too small input buffer", "Found empty subframe\n", "broken frame: subframe_len %i\n", "broken frame: num subframes > 31\n", "broken frame: channel len(%u) > samples_per_frame(%u)\n", "Arithmetic coding", "CDLMS of order %d", "Order[%d][%d] %d > max (%d), not supported\n", "Waiting for seekable tile\n", "Expect wrong output since inverse LPC filter", "Invalid number of padding bits in raw PCM tile\n", "broken subframe\n", "frame[%u] would have to skip %i bits\n", "buf size %d invalid\n", "Bitstream splicing", "Packet loss detected! seq %x vs %x\n", "Unknown extradata size", "Large block align", "14-bit block sizes", "invalid number of subframes %d\n", "min_samples_per_subframe of %d too small\n", "num_sfb invalid\n", "ed sample bit depth", " %s = %d\n", "ed decode flags", " %s = %x\n", "samples per frame", "log2 frame size", "max num subframes", "len prefix", "num channels", "len <= put_bits_left(&s->pb)", "libavcodec/wmaprodec.c", "broken frame: channel len > samples_per_frame\n", "invalid number of fill bits\n", "Reserved bit", "Channel transform bit", "Unknown channel transform type", "Coupled channels > 6", "s->subframe_len <= (1 << 13)", "num_vec_coeffs %d is too large\n", "num_vec_coeffs + offset <= (sizeof(s->channel[c].out) / sizeof((s->channel[c].out)[0]))", "negative quant step\n", "invalid scale factor coding\n", "Input packet too small (%d < %d)\n", "8`u?", "S:>@;I>", "Invalid denoise filter strength %d (max=11)\n", "Invalid VBM tree; broken extradata?\n", "Invalid pitch range; broken extradata?\n", "Unsupported samplerate %d (min=%d, max=%d)\n", "Invalid delta pitch hrange; broken extradata?\n", "WMAPro-in-WMAVoice", "Superframe encodes >480 samples (%d), not allowed\n", "Invalid frame type VLC code, skipping\n", "size <= 160 / 2", "libavcodec/wmavoice.c", "Trying to skip %d bytes in packet of size %d\n", "internal error in WMV2 abt\n", "I7:%X/\n", "qscale:%d rlc:%d rl:%d dc:%d mbrl:%d j_type:%d \n", "rl:%d rlc:%d dc:%d mv:%d mbrl:%d qp:%d mspel:%d per_mb_abt:%d abt_type:%d cbp:%d ii:%d\n", "II-cbp illegal at %d %d\n", "\nerror while decoding inter block: %d x %d (%d)\n", "\nerror while decoding intra block: %d x %d (%d)\n", "libavcodec/wmv2enc.c", "s->no_rounding == 1", "wmv2 encoder", "Packet size %d is too small\n", "Unknown WNV1 frame header value %i", "ws_snd1", "Invalid palette selected\n", "No palette found\n", "size_segment overread\n", "Overlapping copy", "vector_segment overread\n", "Unexpected data at %.8s.\n", "#define image_height %u\n", "static unsigned char image_bits[] = {\n", " 0x%02X,", " };\n", "libavcodec/xface.c", "Buffer is longer than expected, truncating at byte %d\n", "libavcodec/xfaceenc.c", "i < sizeof(intbuf)", "width is not a multiple of 4\n", "coded frame size %d too small\n", "invalid time code\n", "Buffer too small for XSUB header.\n", "Only single rects supported (%d in subtitle.)\n", "No subtitle bitmap available.\n", "No more than 4 subtitle colors supported (%d found.)\n", "Color index 0 is not transparent. Transparency will be messed up.\n", "Time code >= 100 hours.\n", "[%02d:%02d:%02d.%03d-%02d:%02d:%02d.%03d]", "DivX subtitles (XSUB)", "unsupported version\n", "invalid header size\n", "pixformat %u, pixdepth %u, bunit %u, bitorder %u, bpad %u\n", "vclass %u, ncolors %u, bpp %u, be %u, lsize %u, xoffset %u\n", "red %0x, green %0x, blue %0x\n", "invalid pixmap format\n", "invalid pixmap depth\n", "xoffset %u", "invalid byte order\n", "invalid bitmap bit order\n", "invalid bitmap unit\n", "invalid bitmap scan-line pad\n", "invalid bits per pixel\n", "invalid number of entries in colormap\n", "invalid bytes per scan-line\n", "input buffer too small\n", "Pixmap format %u", "invalid visual class\n", "Unknown file: bpp %u, pixdepth %u, vclass %u", "Invalid chroma block position\n", "Invalid chroma block offset\n", "Chroma unpacking failed\n", "Ignoring invalid correction block position\n", "Luma decoding failed\n", "Unknown frame type %d\n", "Invalid frame height: %d.\n", "Invalid frame width: %d.\n", "y41p requires width to be divisible by 8.\n", "Packet too small.\n", "frame is too odd %d\n", "File probably corrupt\n", "YOP has invalid dimensions\n", "Missing or incomplete extradata.\n", "Palette parameters invalid, header probably corrupt\n"], "stringidentifiers": ["transparency", "cfrm", "ifr2", "ifrm", "pfrm", "pfr2", "snd_", "a64m", "a64multi5", "a64multi", "aac_adtstoasc", "aac_latm", "Main", "dual_mono_mode", "auto", "autoselection", "both", "stereo_mode", "ms_off", "ms_force", "aac_coder", "faac", "anmr", "twoloop", "fast", "aac_pns", "disable", "enable", "aac_is", "intensity_stereo", "aac_tns", "aac_pred", "aasc", "ac3_fixed", "drc_scale", "heavy_compr", "target_level", "dmix_mode", "ltrt_cmixlev", "ltrt_surmixlev", "loro_cmixlev", "loro_surmixlev", "center_mix_level", "surround_mix_level", "ltrt_center_mix_level", "loro_center_mix_level", "ltrt_surround_mix_level", "loro_surround_mix_level", "per_frame_metadata", "center_mixlev", "surround_mixlev", "mixing_level", "room_type", "notindicated", "large", "small", "copyright", "dialnorm", "dsur_mode", "original", "ltrt", "loro", "dplii", "dsurex_mode", "dpliiz", "dheadphone_mode", "ad_conv_type", "standard", "hdcd", "HDCD", "stereo_rematrixing", "channel_coupling", "cpl_start_band", "adpcm_yamaha", "adpcm_xa", "adpcm_thp", "adpcm_thp_le", "adpcm_swf", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_ms", "adpcm_ima_ws", "adpcm_ima_wav", "adpcm_ima_smjpeg", "adpcm_ima_rad", "adpcm_ima_qt", "adpcm_ima_oki", "adpcm_ima_iss", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ima_dk4", "adpcm_ima_dk3", "adpcm_ima_apc", "adpcm_ima_amv", "adpcm_ea_xas", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ea_r1", "adpcm_ea_maxis_xa", "adpcm_ea", "adpcm_dtk", "adpcm_ct", "adpcm_afc", "adpcm_4xm", "adpcm_adx", "alac", "extra_bits_bug", "alias_pix", "amrnb", "amrwb", "ansi", "max_samples", "Arial", "Events", "Default", "ScriptType", "Collisions", "PlayResX", "PlayResY", "Timer", "Format", "Style", "Name", "Fontname", "Fontsize", "PrimaryColour", "SecondaryColour", "OutlineColour", "BackColour", "Bold", "Italic", "Underline", "StrikeOut", "ScaleX", "ScaleY", "Spacing", "Angle", "BorderStyle", "Outline", "Shadow", "Alignment", "MarginL", "MarginR", "MarginV", "Encoding", "TertiaryColour", "AlphaLevel", "Dialogue", "Layer", "Start", "Effect", "Text", "asv2", "asv1", "atrac1", "atrac3", "atrac3plus", "aura2", "AVDCT", "fastint", "altivec", "faan", "idct", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "threads", "avrn", "APRGAPRG0001", "avui", "xARESARES0001", "bethsoftvid", "binkvideo", "binkaudio_dct", "binkaudio_rdft", "xbin", "bintext", "bmv_audio", "bmv_video", "brender_pix", "cavs", "cc_dec", "cdgraphics", "cdxl", "cinepak", "Cinepak", "max_extra_cb_iterations", "skip_empty_cb", "max_strips", "min_strips", "strip_number_adaptivity", "cljr", "dither_type", "cllc", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "HuffYUV", "cyuv", "h264", "indeo3", "theora", "Theora", "ffv1", "vcr1", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "Snow", "tscc", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "LOCO", "wnv1", "indeo2", "fraps", "Fraps", "truemotion2", "cscd", "CamStudio", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "vp6a", "indeo4", "indeo5", "mimic", "Mimic", "escape124", "dirac", "Dirac", "motionpixels", "aura", "v210x", "v210", "frwu", "flashsv2", "r210", "iff_ilbm", "iff_byterun1", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "vble", "dxtory", "Dxtory", "v410", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "mss2", "y41p", "escape130", "avrp", "ayuv", "targa_y216", "v308", "v408", "yuv4", "cpia", "xface", "smvjpeg", "Go2Meeting", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "tdsc", "TDSC", "tiff", "vc1image", "webp", "WebP", "wmv3image", "apng", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_g726", "adpcm_g722", "adpcm_g726le", "adpcm_vima", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "vorbis", "Vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "WavPack", "dsicinaudio", "musepack7", "gsm_ms", "voxware", "nellymoser", "musepack8", "speex", "Speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "sipr", "twinvq", "truehd", "TrueHD", "mp4als", "qdmc", "celt", "g723_1", "dss_sp", "g729", "ralf", "ilbc", "wavesynth", "sonic", "Sonic", "sonicls", "opus", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "dvd_subtitle", "dvb_subtitle", "xsub", "XSUB", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "dvd_nav_packet", "timed_id3", "bin_data", "brender_pix_deprecated", "escape130_deprecated", "exr_deprecated", "g2m_deprecated", "hevc_deprecated", "paf_video_deprecated", "sanm_deprecated", "vp7_deprecated", "webp_deprecated", "vima", "adpcm_vima_deprecated", "opus_deprecated", "paf_audio_deprecated", "pcm_s24le_planar_deprecated", "pcm_s32le_planar_deprecated", "pcm_s16be_planar_deprecated", "tak_deprecated", "Decimation", "camstudio", "disable_xch", "disable_xll", "COPY", "TSW1", "BDLT", "WDLT", "TDLT", "DSW1", "BLCK", "DDS1", "yuv422p10", "yuv422p", "nitris_compat", "ibias", "Encryption", "SDPX", "dump_extra", "SL25", "dvsd", "CDVC", "dvbsub", "obj2", "compute_edt", "compute_clut", "dvb_substream", "dvdsub", "dvdsubdec", "ifo_palette", "forced_subs_only", "even_rows_fix", "eacmv", "eamad", "eatgq", "eatgv", "eatqi", "postfilter", "GPSVersionID", "GPSLatitudeRef", "GPSLatitude", "GPSLongitudeRef", "GPSLongitude", "GPSAltitudeRef", "GPSAltitude", "GPSTimeStamp", "GPSSatellites", "GPSStatus", "GPSMeasureMode", "GPSDOP", "GPSSpeedRef", "GPSSpeed", "GPSTrackRef", "GPSTrack", "GPSImgDirectionRef", "GPSImgDirection", "GPSMapDatum", "GPSDestLatitudeRef", "GPSDestLatitude", "GPSDestLongitudeRef", "GPSDestLongitude", "GPSDestBearingRef", "GPSDestBearing", "GPSDestDistanceRef", "GPSDestDistance", "GPSProcessingMethod", "GPSAreaInformation", "GPSDateStamp", "GPSDifferential", "ImageWidth", "slicecrc", "skip_cursor", "use_buggy_lpc", "estimate", "lpc_coeff_precision", "lpc_type", "none", "levinson", "cholesky", "lpc_passes", "min_partition_order", "max_partition_order", "prediction_order_method", "predm", "ch_mode", "indep", "left_side", "right_side", "mid_side", "exact_rice_parameters", "multi_dim_quant", "non_deterministic", "change_field_order", "bits_per_codeword", "g726le", "g726", "code_size", "gifflags", "offsetting", "transdiff", "GIF87a", "GIF89a", "trans_color", "L263", "S263", "GEOV", "GEOX", "Q264", "Extended", "High", "is_avc", "nal_length_size", "enable_er", "h264_mp4toannexb", "Gray", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "TEMP", "SPAT", "DXT1", "DXT5", "snappy", "complex", "apply_defdispwin", "Rext", "hevc_mp4toannexb", "SEI_SUFFIX", "SEI_PREFIX", "FD_NUT", "EOB_NUT", "EOS_NUT", "CRA_NUT", "IDR_N_LP", "IDR_W_RADL", "BLA_N_LP", "BLA_W_RADL", "BLA_W_LP", "RASL_R", "RASL_N", "RADL_R", "RADL_N", "STSA_R", "STSA_N", "TSA_R", "TSA_N", "TRAIL_R", "TRAIL_N", "idcinvideo", "desc", "imxdump", "SEPB1", "SEPB2", "ZYGO", "ftyp", "jp2h", "ihdr", "colr", "jp2c", "tile_width", "tile_height", "lowres", "zero_run_line", "VOXs0", "VOXw0", "VOXyP", "ibus", "cfshyYpo", "AVI1", "mjpeg2jpeg", "mjpg", "mjpegadump", "MJPG", "lossless", "PRCT", "CJPG", "AVID", "JFIF", "Adob", "LJIF", "xfrm", "_JPS", "Exif", "extern_huff", "mov2textsub", "text2movsub", "mp3decomp", "mpc7", "mpc8", "TMPGEXS", "VCR2", "BW10", "SLIF", "mpegvideo", "Simple", "Reserved", "gop_timecode", "intra_vlc", "drop_frame_timecode", "scan_offset", "non_linear_quant", "alternate_scan", "seq_disp_ext", "never", "always", "mpv_flags", "skip_rd", "strict_gop", "qp_rd", "cbp_rd", "luma_elim_threshold", "chroma_elim_threshold", "quantizer_noise_shaping", "error_rate", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_eq", "rc_init_cplx", "rc_buf_aggressivity", "border_mask", "lmin", "lmax", "pbias", "rc_strategy", "motion_est", "zero", "epzs", "xone", "mpeg4_unpack_bframes", "ffmpeg", "MP4S", "XVIX", "UMP4", "DIVX", "XVID", "RMP4", "ZMP4", "SIPP", "reserved", "WV1F", "QMP4", "quarter_sample", "divx_packed", "data_partitioning", "mp3on4float", "mp3adufloat", "mp3float", "mp2float", "mp1float", "mp2fixed", "obmc", "structured_slices", "mb_info", "BottomUp", "noise", "on2avc", "NULL", "AVSubtitleRect", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "AVCodecContext", "unaligned", "loop", "qscale", "input_preserved", "pass1", "pass2", "gray", "emu_edge", "psnr", "truncated", "ildct", "low_delay", "global_header", "bitexact", "ilme", "cgop", "output_corrupt", "flags2", "noout", "ignorecrop", "local_header", "showall", "export_mvs", "skip_manual", "me_method", "full", "tesa", "phods", "iter", "time_base", "cutoff", "frame_size", "frame_number", "qcomp", "qblur", "qmin", "qdiff", "b_qfactor", "b_strategy", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "hpel_chroma", "dc_clip", "trunc", "strict", "very", "normal", "unofficial", "experimental", "b_qoffset", "err_detect", "crccheck", "bitstream", "explode", "ignore_err", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "mpeg_quant", "rc_override_count", "maxrate", "minrate", "bufsize", "i_qfactor", "i_qoffset", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "deblock", "favor_inter", "plane", "median", "aspect", "debug", "pict", "dct_coeff", "green_metadata", "skip", "startcode", "mmco", "bugs", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "nomc", "vismv", "debug_mv", "cmp_func", "subcmp", "mbcmp", "ildctcmp", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "chroma", "pre_dia_size", "subq", "dtg_active_format", "me_range", "global_quality", "deflate", "context", "slice_flags", "xvmc_acceleration", "stream_codec_tag", "sc_threshold", "rc_init_occupancy", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "default", "noref", "bidir", "nokey", "nointra", "bidir_refine", "brd_scale", "keyint_min", "refs", "chromaoffset", "trellis", "sc_factor", "mv0_threshold", "b_sensitivity", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "request_channels", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_primaries_type", "bt709", "unspecified", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "film", "Film", "bt2020", "color_trc", "color_trc_type", "gamma22", "gamma28", "linear", "Linear", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "colorspace", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "mpeg", "chroma_sample_location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "bottomleft", "Bottom", "log_level_offset", "slices", "thread_type", "audio_service_type", "Effects", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "field_order", "progressive", "dump_separator", "codec_whitelist", "pixel_format", "video_size", "in_sample_fmt", "out_sample_fmt", "in_channel_layout", "out_channel_layout", "out_sample_rate", "filter_size", "in_sample_rate", "Opus", "GRAYSCALE", "GRAYSCALE_ALPHA", "RGB_ALPHA", "pgssub", "WIDTH", "HEIGHT", "DEPTH", "MAXVAL", "TUPLTYPE", "TUPLETYPE", "ENDHDR", "icpf", "ProRes", "prores_lgpl", "fmpg", "prores_aw", "apco", "apcs", "apcn", "apch", "prores_ks", "mbs_per_slice", "proxy", "vendor", "Lavc", "bits_per_mb", "quant_mat", "alpha_bits", "frmaQDM", "DpxE", "real_144", "real_288", "WwvfeUDDDDDD3DCDDEVfwP", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "wgvgwffgwwfffffgwwwwvffffffffffgwwwwwwwwvffffffffffffffffffffffgwwwwwwwwwwwwwwwwwwwwp", "bits2qp", "qp2bits", "iTex", "pTex", "fCode", "iCount", "mcVar", "avgQP", "avgIITex", "avgPITex", "avgPPTex", "avgBPTex", "avgTex", "I420", "IYUV", "YUNVw", "BGR0C", "yuv2", "I420", "rawdec", "remove_extra", "audioresample", "ReSampleContext", "roqvideo", "quake3_compat", "non_pcm_mode", "decode_copy", "decode_drop", "ajkg", "smackaud", "smackvid", "memc_only", "no_bitstream", "intra_penalty", "iterative_dia_size", "bisu", "font", "svq1enc", "SEQH", "keep_ass_markup", "ModelPixelScaleTag", "ModelTransformationTag", "ModelTiepointTag", "GeoTIFF_Version", "GeoTIFF_Key_Revision", "undefined", "artist", "date", "document_name", "computer", "description", "make", "page_name", "page_number", "software", "VertCS_Newlyn", "VertCS_North_American_Vertical_Datum_1929", "VertCS_North_American_Vertical_Datum_1988", "VertCS_Yellow_Sea_1956", "VertCS_Baltic_Sea", "VertCS_Caspian_Sea", "VertCS_Airy_1830_ellipsoid", "VertCS_Airy_Modified_1849_ellipsoid", "VertCS_ANS_ellipsoid", "VertCS_Bessel_1841_ellipsoid", "VertCS_Bessel_Modified_ellipsoid", "VertCS_Bessel_Namibia_ellipsoid", "VertCS_Clarke_1858_ellipsoid", "VertCS_Clarke_1866_ellipsoid", "VertCS_Clarke_1880_Benoit_ellipsoid", "VertCS_Clarke_1880_IGN_ellipsoid", "VertCS_Clarke_1880_RGS_ellipsoid", "VertCS_Clarke_1880_Arc_ellipsoid", "VertCS_Clarke_1880_SGA_1922_ellipsoid", "VertCS_Everest_1830_1937_Adjustment_ellipsoid", "VertCS_Everest_1830_1967_Definition_ellipsoid", "VertCS_Everest_1830_1975_Definition_ellipsoid", "VertCS_Everest_1830_Modified_ellipsoid", "VertCS_GRS_1980_ellipsoid", "VertCS_Helmert_1906_ellipsoid", "VertCS_INS_ellipsoid", "VertCS_International_1924_ellipsoid", "VertCS_International_1967_ellipsoid", "VertCS_Krassowsky_1940_ellipsoid", "VertCS_NWL_9D_ellipsoid", "VertCS_NWL_10D_ellipsoid", "VertCS_Plessis_1817_ellipsoid", "VertCS_Struve_1860_ellipsoid", "VertCS_War_Office_ellipsoid", "VertCS_WGS_84_ellipsoid", "VertCS_GEM_10C_ellipsoid", "VertCS_OSU86F_ellipsoid", "VertCS_OSU91A_ellipsoid", "CT_TransverseMercator", "CT_TransvMercator_Modified_Alaska", "CT_ObliqueMercator", "CT_ObliqueMercator_Laborde", "CT_ObliqueMercator_Rosenmund", "CT_ObliqueMercator_Spherical", "CT_Mercator", "CT_LambertConfConic_2SP", "CT_LambertConfConic_Helmert", "CT_LambertAzimEqualArea", "CT_AlbersEqualArea", "CT_AzimuthalEquidistant", "CT_EquidistantConic", "CT_Stereographic", "CT_PolarStereographic", "CT_ObliqueStereographic", "CT_Equirectangular", "CT_CassiniSoldner", "CT_Gnomonic", "CT_MillerCylindrical", "CT_Orthographic", "CT_Polyconic", "CT_Robinson", "CT_Sinusoidal", "CT_VanDerGrinten", "CT_NewZealandMapGrid", "CT_TransvMercator_SouthOriented", "Proj_Alabama_CS27_East", "Proj_Alabama_CS27_West", "Proj_Alabama_CS83_East", "Proj_Alabama_CS83_West", "Proj_Arizona_Coordinate_System_east", "Proj_Arizona_Coordinate_System_Central", "Proj_Arizona_Coordinate_System_west", "Proj_Arizona_CS83_east", "Proj_Arizona_CS83_Central", "Proj_Arizona_CS83_west", "Proj_Arkansas_CS27_North", "Proj_Arkansas_CS27_South", "Proj_Arkansas_CS83_North", "Proj_Arkansas_CS83_South", "Proj_California_CS27_I", "Proj_California_CS27_II", "Proj_California_CS27_III", "Proj_California_CS27_IV", "Proj_California_CS27_V", "Proj_California_CS27_VI", "Proj_California_CS27_VII", "Proj_California_CS83_1", "Proj_California_CS83_2", "Proj_California_CS83_3", "Proj_California_CS83_4", "Proj_California_CS83_5", "Proj_California_CS83_6", "Proj_Colorado_CS27_North", "Proj_Colorado_CS27_Central", "Proj_Colorado_CS27_South", "Proj_Colorado_CS83_North", "Proj_Colorado_CS83_Central", "Proj_Colorado_CS83_South", "Proj_Connecticut_CS27", "Proj_Connecticut_CS83", "Proj_Delaware_CS27", "Proj_Delaware_CS83", "Proj_Florida_CS27_East", "Proj_Florida_CS27_West", "Proj_Florida_CS27_North", "Proj_Florida_CS83_East", "Proj_Florida_CS83_West", "Proj_Florida_CS83_North", "Proj_Georgia_CS27_East", "Proj_Georgia_CS27_West", "Proj_Georgia_CS83_East", "Proj_Georgia_CS83_West", "Proj_Idaho_CS27_East", "Proj_Idaho_CS27_Central", "Proj_Idaho_CS27_West", "Proj_Idaho_CS83_East", "Proj_Idaho_CS83_Central", "Proj_Idaho_CS83_West", "Proj_Illinois_CS27_East", "Proj_Illinois_CS27_West", "Proj_Illinois_CS83_East", "Proj_Illinois_CS83_West", "Proj_Indiana_CS27_East", "Proj_Indiana_CS27_West", "Proj_Indiana_CS83_East", "Proj_Indiana_CS83_West", "Proj_Iowa_CS27_North", "Proj_Iowa_CS27_South", "Proj_Iowa_CS83_North", "Proj_Iowa_CS83_South", "Proj_Kansas_CS27_North", "Proj_Kansas_CS27_South", "Proj_Kansas_CS83_North", "Proj_Kansas_CS83_South", "Proj_Kentucky_CS27_North", "Proj_Kentucky_CS27_South", "Proj_Kentucky_CS83_North", "Proj_Kentucky_CS83_South", "Proj_Louisiana_CS27_North", "Proj_Louisiana_CS27_South", "Proj_Louisiana_CS83_North", "Proj_Louisiana_CS83_South", "Proj_Maine_CS27_East", "Proj_Maine_CS27_West", "Proj_Maine_CS83_East", "Proj_Maine_CS83_West", "Proj_Maryland_CS27", "Proj_Maryland_CS83", "Proj_Massachusetts_CS27_Mainland", "Proj_Massachusetts_CS27_Island", "Proj_Massachusetts_CS83_Mainland", "Proj_Massachusetts_CS83_Island", "Proj_Michigan_State_Plane_East", "Proj_Michigan_State_Plane_Old_Central", "Proj_Michigan_State_Plane_West", "Proj_Michigan_CS27_North", "Proj_Michigan_CS27_Central", "Proj_Michigan_CS27_South", "Proj_Michigan_CS83_North", "Proj_Michigan_CS83_Central", "Proj_Michigan_CS83_South", "Proj_Minnesota_CS27_North", "Proj_Minnesota_CS27_Central", "Proj_Minnesota_CS27_South", "Proj_Minnesota_CS83_North", "Proj_Minnesota_CS83_Central", "Proj_Minnesota_CS83_South", "Proj_Mississippi_CS27_East", "Proj_Mississippi_CS27_West", "Proj_Mississippi_CS83_East", "Proj_Mississippi_CS83_West", "Proj_Missouri_CS27_East", "Proj_Missouri_CS27_Central", "Proj_Missouri_CS27_West", "Proj_Missouri_CS83_East", "Proj_Missouri_CS83_Central", "Proj_Missouri_CS83_West", "Proj_Montana_CS27_North", "Proj_Montana_CS27_Central", "Proj_Montana_CS27_South", "Proj_Montana_CS83", "Proj_Nebraska_CS27_North", "Proj_Nebraska_CS27_South", "Proj_Nebraska_CS83", "Proj_Nevada_CS27_East", "Proj_Nevada_CS27_Central", "Proj_Nevada_CS27_West", "Proj_Nevada_CS83_East", "Proj_Nevada_CS83_Central", "Proj_Nevada_CS83_West", "Proj_New_Hampshire_CS27", "Proj_New_Hampshire_CS83", "Proj_New_Jersey_CS27", "Proj_New_Jersey_CS83", "Proj_New_Mexico_CS27_East", "Proj_New_Mexico_CS27_Central", "Proj_New_Mexico_CS27_West", "Proj_New_Mexico_CS83_East", "Proj_New_Mexico_CS83_Central", "Proj_New_Mexico_CS83_West", "Proj_New_York_CS27_East", "Proj_New_York_CS27_Central", "Proj_New_York_CS27_West", "Proj_New_York_CS27_Long_Island", "Proj_New_York_CS83_East", "Proj_New_York_CS83_Central", "Proj_New_York_CS83_West", "Proj_New_York_CS83_Long_Island", "Proj_North_Carolina_CS27", "Proj_North_Carolina_CS83", "Proj_North_Dakota_CS27_North", "Proj_North_Dakota_CS27_South", "Proj_North_Dakota_CS83_North", "Proj_North_Dakota_CS83_South", "Proj_Ohio_CS27_North", "Proj_Ohio_CS27_South", "Proj_Ohio_CS83_North", "Proj_Ohio_CS83_South", "Proj_Oklahoma_CS27_North", "Proj_Oklahoma_CS27_South", "Proj_Oklahoma_CS83_North", "Proj_Oklahoma_CS83_South", "Proj_Oregon_CS27_North", "Proj_Oregon_CS27_South", "Proj_Oregon_CS83_North", "Proj_Oregon_CS83_South", "Proj_Pennsylvania_CS27_North", "Proj_Pennsylvania_CS27_South", "Proj_Pennsylvania_CS83_North", "Proj_Pennsylvania_CS83_South", "Proj_Rhode_Island_CS27", "Proj_Rhode_Island_CS83", "Proj_South_Carolina_CS27_North", "Proj_South_Carolina_CS27_South", "Proj_South_Carolina_CS83", "Proj_South_Dakota_CS27_North", "Proj_South_Dakota_CS27_South", "Proj_South_Dakota_CS83_North", "Proj_South_Dakota_CS83_South", "Proj_Tennessee_CS27", "Proj_Tennessee_CS83", "Proj_Texas_CS27_North", "Proj_Texas_CS27_North_Central", "Proj_Texas_CS27_Central", "Proj_Texas_CS27_South_Central", "Proj_Texas_CS27_South", "Proj_Texas_CS83_North", "Proj_Texas_CS83_North_Central", "Proj_Texas_CS83_Central", "Proj_Texas_CS83_South_Central", "Proj_Texas_CS83_South", "Proj_Utah_CS27_North", "Proj_Utah_CS27_Central", "Proj_Utah_CS27_South", "Proj_Utah_CS83_North", "Proj_Utah_CS83_Central", "Proj_Utah_CS83_South", "Proj_Vermont_CS27", "Proj_Vermont_CS83", "Proj_Virginia_CS27_North", "Proj_Virginia_CS27_South", "Proj_Virginia_CS83_North", "Proj_Virginia_CS83_South", "Proj_Washington_CS27_North", "Proj_Washington_CS27_South", "Proj_Washington_CS83_North", "Proj_Washington_CS83_South", "Proj_West_Virginia_CS27_North", "Proj_West_Virginia_CS27_South", "Proj_West_Virginia_CS83_North", "Proj_West_Virginia_CS83_South", "Proj_Wisconsin_CS27_North", "Proj_Wisconsin_CS27_Central", "Proj_Wisconsin_CS27_South", "Proj_Wisconsin_CS83_North", "Proj_Wisconsin_CS83_Central", "Proj_Wisconsin_CS83_South", "Proj_Wyoming_CS27_East", "Proj_Wyoming_CS27_East_Central", "Proj_Wyoming_CS27_West_Central", "Proj_Wyoming_CS27_West", "Proj_Wyoming_CS83_East", "Proj_Wyoming_CS83_East_Central", "Proj_Wyoming_CS83_West_Central", "Proj_Wyoming_CS83_West", "Proj_Alaska_CS27_1", "Proj_Alaska_CS27_2", "Proj_Alaska_CS27_3", "Proj_Alaska_CS27_4", "Proj_Alaska_CS27_5", "Proj_Alaska_CS27_6", "Proj_Alaska_CS27_7", "Proj_Alaska_CS27_8", "Proj_Alaska_CS27_9", "Proj_Alaska_CS27_10", "Proj_Alaska_CS83_1", "Proj_Alaska_CS83_2", "Proj_Alaska_CS83_3", "Proj_Alaska_CS83_4", "Proj_Alaska_CS83_5", "Proj_Alaska_CS83_6", "Proj_Alaska_CS83_7", "Proj_Alaska_CS83_8", "Proj_Alaska_CS83_9", "Proj_Alaska_CS83_10", "Proj_Hawaii_CS27_1", "Proj_Hawaii_CS27_2", "Proj_Hawaii_CS27_3", "Proj_Hawaii_CS27_4", "Proj_Hawaii_CS27_5", "Proj_Hawaii_CS83_1", "Proj_Hawaii_CS83_2", "Proj_Hawaii_CS83_3", "Proj_Hawaii_CS83_4", "Proj_Hawaii_CS83_5", "Proj_Puerto_Rico_CS27", "Proj_St_Croix", "Proj_Puerto_Rico_Virgin_Is", "Proj_BLM_14N_feet", "Proj_BLM_15N_feet", "Proj_BLM_16N_feet", "Proj_BLM_17N_feet", "Proj_Map_Grid_of_Australia_48", "Proj_Map_Grid_of_Australia_49", "Proj_Map_Grid_of_Australia_50", "Proj_Map_Grid_of_Australia_51", "Proj_Map_Grid_of_Australia_52", "Proj_Map_Grid_of_Australia_53", "Proj_Map_Grid_of_Australia_54", "Proj_Map_Grid_of_Australia_55", "Proj_Map_Grid_of_Australia_56", "Proj_Map_Grid_of_Australia_57", "Proj_Map_Grid_of_Australia_58", "Proj_Australian_Map_Grid_48", "Proj_Australian_Map_Grid_49", "Proj_Australian_Map_Grid_50", "Proj_Australian_Map_Grid_51", "Proj_Australian_Map_Grid_52", "Proj_Australian_Map_Grid_53", "Proj_Australian_Map_Grid_54", "Proj_Australian_Map_Grid_55", "Proj_Australian_Map_Grid_56", "Proj_Australian_Map_Grid_57", "Proj_Australian_Map_Grid_58", "Proj_Argentina_1", "Proj_Argentina_2", "Proj_Argentina_3", "Proj_Argentina_4", "Proj_Argentina_5", "Proj_Argentina_6", "Proj_Argentina_7", "Proj_Colombia_3W", "Proj_Colombia_Bogota", "Proj_Colombia_3E", "Proj_Colombia_6E", "Proj_Egypt_Red_Belt", "Proj_Egypt_Purple_Belt", "Proj_Extended_Purple_Belt", "Proj_New_Zealand_North_Island_Nat_Grid", "Proj_New_Zealand_South_Island_Nat_Grid", "Proj_Bahrain_Grid", "Proj_Netherlands_E_Indies_Equatorial", "Proj_RSO_Borneo", "PCS_Adindan_UTM_zone_37N", "PCS_Adindan_UTM_zone_38N", "PCS_AGD66_AMG_zone_48", "PCS_AGD66_AMG_zone_49", "PCS_AGD66_AMG_zone_50", "PCS_AGD66_AMG_zone_51", "PCS_AGD66_AMG_zone_52", "PCS_AGD66_AMG_zone_53", "PCS_AGD66_AMG_zone_54", "PCS_AGD66_AMG_zone_55", "PCS_AGD66_AMG_zone_56", "PCS_AGD66_AMG_zone_57", "PCS_AGD66_AMG_zone_58", "PCS_AGD84_AMG_zone_48", "PCS_AGD84_AMG_zone_49", "PCS_AGD84_AMG_zone_50", "PCS_AGD84_AMG_zone_51", "PCS_AGD84_AMG_zone_52", "PCS_AGD84_AMG_zone_53", "PCS_AGD84_AMG_zone_54", "PCS_AGD84_AMG_zone_55", "PCS_AGD84_AMG_zone_56", "PCS_AGD84_AMG_zone_57", "PCS_AGD84_AMG_zone_58", "PCS_Ain_el_Abd_UTM_zone_37N", "PCS_Ain_el_Abd_UTM_zone_38N", "PCS_Ain_el_Abd_UTM_zone_39N", "PCS_Ain_el_Abd_Bahrain_Grid", "PCS_Afgooye_UTM_zone_38N", "PCS_Afgooye_UTM_zone_39N", "PCS_Lisbon_Portugese_Grid", "PCS_Aratu_UTM_zone_22S", "PCS_Aratu_UTM_zone_23S", "PCS_Aratu_UTM_zone_24S", "PCS_Arc_1950_Lo13", "PCS_Arc_1950_Lo15", "PCS_Arc_1950_Lo17", "PCS_Arc_1950_Lo19", "PCS_Arc_1950_Lo21", "PCS_Arc_1950_Lo23", "PCS_Arc_1950_Lo25", "PCS_Arc_1950_Lo27", "PCS_Arc_1950_Lo29", "PCS_Arc_1950_Lo31", "PCS_Arc_1950_Lo33", "PCS_Arc_1950_Lo35", "PCS_Batavia_NEIEZ", "PCS_Batavia_UTM_zone_48S", "PCS_Batavia_UTM_zone_49S", "PCS_Batavia_UTM_zone_50S", "PCS_Beijing_Gauss_zone_13", "PCS_Beijing_Gauss_zone_14", "PCS_Beijing_Gauss_zone_15", "PCS_Beijing_Gauss_zone_16", "PCS_Beijing_Gauss_zone_17", "PCS_Beijing_Gauss_zone_18", "PCS_Beijing_Gauss_zone_19", "PCS_Beijing_Gauss_zone_20", "PCS_Beijing_Gauss_zone_21", "PCS_Beijing_Gauss_zone_22", "PCS_Beijing_Gauss_zone_23", "PCS_Beijing_Gauss_13N", "PCS_Beijing_Gauss_14N", "PCS_Beijing_Gauss_15N", "PCS_Beijing_Gauss_16N", "PCS_Beijing_Gauss_17N", "PCS_Beijing_Gauss_18N", "PCS_Beijing_Gauss_19N", "PCS_Beijing_Gauss_20N", "PCS_Beijing_Gauss_21N", "PCS_Beijing_Gauss_22N", "PCS_Beijing_Gauss_23N", "PCS_Belge_Lambert_50", "PCS_Bern_1898_Swiss_Old", "PCS_Bogota_UTM_zone_17N", "PCS_Bogota_UTM_zone_18N", "PCS_Bogota_Colombia_3W", "PCS_Bogota_Colombia_Bogota", "PCS_Bogota_Colombia_3E", "PCS_Bogota_Colombia_6E", "PCS_Camacupa_UTM_32S", "PCS_Camacupa_UTM_33S", "PCS_C_Inchauspe_Argentina_1", "PCS_C_Inchauspe_Argentina_2", "PCS_C_Inchauspe_Argentina_3", "PCS_C_Inchauspe_Argentina_4", "PCS_C_Inchauspe_Argentina_5", "PCS_C_Inchauspe_Argentina_6", "PCS_C_Inchauspe_Argentina_7", "PCS_Carthage_UTM_zone_32N", "PCS_Carthage_Nord_Tunisie", "PCS_Carthage_Sud_Tunisie", "PCS_Corrego_Alegre_UTM_23S", "PCS_Corrego_Alegre_UTM_24S", "PCS_Douala_UTM_zone_32N", "PCS_Egypt_1907_Red_Belt", "PCS_Egypt_1907_Purple_Belt", "PCS_Egypt_1907_Ext_Purple", "PCS_ED50_UTM_zone_28N", "PCS_ED50_UTM_zone_29N", "PCS_ED50_UTM_zone_30N", "PCS_ED50_UTM_zone_31N", "PCS_ED50_UTM_zone_32N", "PCS_ED50_UTM_zone_33N", "PCS_ED50_UTM_zone_34N", "PCS_ED50_UTM_zone_35N", "PCS_ED50_UTM_zone_36N", "PCS_ED50_UTM_zone_37N", "PCS_ED50_UTM_zone_38N", "PCS_Fahud_UTM_zone_39N", "PCS_Fahud_UTM_zone_40N", "PCS_Garoua_UTM_zone_33N", "PCS_ID74_UTM_zone_46N", "PCS_ID74_UTM_zone_47N", "PCS_ID74_UTM_zone_48N", "PCS_ID74_UTM_zone_49N", "PCS_ID74_UTM_zone_50N", "PCS_ID74_UTM_zone_51N", "PCS_ID74_UTM_zone_52N", "PCS_ID74_UTM_zone_53N", "PCS_ID74_UTM_zone_46S", "PCS_ID74_UTM_zone_47S", "PCS_ID74_UTM_zone_48S", "PCS_ID74_UTM_zone_49S", "PCS_ID74_UTM_zone_50S", "PCS_ID74_UTM_zone_51S", "PCS_ID74_UTM_zone_52S", "PCS_ID74_UTM_zone_53S", "PCS_ID74_UTM_zone_54S", "PCS_Indian_1954_UTM_47N", "PCS_Indian_1954_UTM_48N", "PCS_Indian_1975_UTM_47N", "PCS_Indian_1975_UTM_48N", "PCS_Jamaica_1875_Old_Grid", "PCS_JAD69_Jamaica_Grid", "PCS_Kalianpur_India_0", "PCS_Kalianpur_India_I", "PCS_Kalianpur_India_IIa", "PCS_Kalianpur_India_IIIa", "PCS_Kalianpur_India_IVa", "PCS_Kalianpur_India_IIb", "PCS_Kalianpur_India_IIIb", "PCS_Kalianpur_India_IVb", "PCS_Kertau_Singapore_Grid", "PCS_Kertau_UTM_zone_47N", "PCS_Kertau_UTM_zone_48N", "PCS_La_Canoa_UTM_zone_20N", "PCS_La_Canoa_UTM_zone_21N", "PCS_PSAD56_UTM_zone_18N", "PCS_PSAD56_UTM_zone_19N", "PCS_PSAD56_UTM_zone_20N", "PCS_PSAD56_UTM_zone_21N", "PCS_PSAD56_UTM_zone_17S", "PCS_PSAD56_UTM_zone_18S", "PCS_PSAD56_UTM_zone_19S", "PCS_PSAD56_UTM_zone_20S", "PCS_PSAD56_Peru_west_zone", "PCS_PSAD56_Peru_central", "PCS_PSAD56_Peru_east_zone", "PCS_Leigon_Ghana_Grid", "PCS_Lome_UTM_zone_31N", "PCS_Luzon_Philippines_I", "PCS_Luzon_Philippines_II", "PCS_Luzon_Philippines_III", "PCS_Luzon_Philippines_IV", "PCS_Luzon_Philippines_V", "PCS_Makassar_NEIEZ", "PCS_Malongo_1987_UTM_32S", "PCS_Merchich_Nord_Maroc", "PCS_Merchich_Sud_Maroc", "PCS_Merchich_Sahara", "PCS_Massawa_UTM_zone_37N", "PCS_Minna_UTM_zone_31N", "PCS_Minna_UTM_zone_32N", "PCS_Minna_Nigeria_West", "PCS_Minna_Nigeria_Mid_Belt", "PCS_Minna_Nigeria_East", "PCS_Mhast_UTM_zone_32S", "PCS_Monte_Mario_Italy_1", "PCS_Monte_Mario_Italy_2", "PCS_M_poraloko_UTM_32N", "PCS_M_poraloko_UTM_32S", "PCS_NAD27_UTM_zone_3N", "PCS_NAD27_UTM_zone_4N", "PCS_NAD27_UTM_zone_5N", "PCS_NAD27_UTM_zone_6N", "PCS_NAD27_UTM_zone_7N", "PCS_NAD27_UTM_zone_8N", "PCS_NAD27_UTM_zone_9N", "PCS_NAD27_UTM_zone_10N", "PCS_NAD27_UTM_zone_11N", "PCS_NAD27_UTM_zone_12N", "PCS_NAD27_UTM_zone_13N", "PCS_NAD27_UTM_zone_14N", "PCS_NAD27_UTM_zone_15N", "PCS_NAD27_UTM_zone_16N", "PCS_NAD27_UTM_zone_17N", "PCS_NAD27_UTM_zone_18N", "PCS_NAD27_UTM_zone_19N", "PCS_NAD27_UTM_zone_20N", "PCS_NAD27_UTM_zone_21N", "PCS_NAD27_UTM_zone_22N", "PCS_NAD27_Alabama_East", "PCS_NAD27_Alabama_West", "PCS_NAD27_Alaska_zone_1", "PCS_NAD27_Alaska_zone_2", "PCS_NAD27_Alaska_zone_3", "PCS_NAD27_Alaska_zone_4", "PCS_NAD27_Alaska_zone_5", "PCS_NAD27_Alaska_zone_6", "PCS_NAD27_Alaska_zone_7", "PCS_NAD27_Alaska_zone_8", "PCS_NAD27_Alaska_zone_9", "PCS_NAD27_Alaska_zone_10", "PCS_NAD27_California_I", "PCS_NAD27_California_II", "PCS_NAD27_California_III", "PCS_NAD27_California_IV", "PCS_NAD27_California_V", "PCS_NAD27_California_VI", "PCS_NAD27_California_VII", "PCS_NAD27_Arizona_East", "PCS_NAD27_Arizona_Central", "PCS_NAD27_Arizona_West", "PCS_NAD27_Arkansas_North", "PCS_NAD27_Arkansas_South", "PCS_NAD27_Colorado_North", "PCS_NAD27_Colorado_Central", "PCS_NAD27_Colorado_South", "PCS_NAD27_Connecticut", "PCS_NAD27_Delaware", "PCS_NAD27_Florida_East", "PCS_NAD27_Florida_West", "PCS_NAD27_Florida_North", "PCS_NAD27_Hawaii_zone_1", "PCS_NAD27_Hawaii_zone_2", "PCS_NAD27_Hawaii_zone_3", "PCS_NAD27_Hawaii_zone_4", "PCS_NAD27_Hawaii_zone_5", "PCS_NAD27_Georgia_East", "PCS_NAD27_Georgia_West", "PCS_NAD27_Idaho_East", "PCS_NAD27_Idaho_Central", "PCS_NAD27_Idaho_West", "PCS_NAD27_Illinois_East", "PCS_NAD27_Illinois_West", "PCS_NAD27_Indiana_East", "PCS_NAD27_BLM_14N_feet", "PCS_NAD27_Indiana_West", "PCS_NAD27_BLM_15N_feet", "PCS_NAD27_Iowa_North", "PCS_NAD27_BLM_16N_feet", "PCS_NAD27_Iowa_South", "PCS_NAD27_BLM_17N_feet", "PCS_NAD27_Kansas_North", "PCS_NAD27_Kansas_South", "PCS_NAD27_Kentucky_North", "PCS_NAD27_Kentucky_South", "PCS_NAD27_Louisiana_North", "PCS_NAD27_Louisiana_South", "PCS_NAD27_Maine_East", "PCS_NAD27_Maine_West", "PCS_NAD27_Maryland", "PCS_NAD27_Massachusetts", "PCS_NAD27_Massachusetts_Is", "PCS_NAD27_Michigan_North", "PCS_NAD27_Michigan_Central", "PCS_NAD27_Michigan_South", "PCS_NAD27_Minnesota_North", "PCS_NAD27_Minnesota_Cent", "PCS_NAD27_Minnesota_South", "PCS_NAD27_Mississippi_East", "PCS_NAD27_Mississippi_West", "PCS_NAD27_Missouri_East", "PCS_NAD27_Missouri_Central", "PCS_NAD27_Missouri_West", "PCS_NAD_Michigan_Michigan_East", "PCS_NAD_Michigan_Michigan_Old_Central", "PCS_NAD_Michigan_Michigan_West", "PCS_NAD83_UTM_zone_3N", "PCS_NAD83_UTM_zone_4N", "PCS_NAD83_UTM_zone_5N", "PCS_NAD83_UTM_zone_6N", "PCS_NAD83_UTM_zone_7N", "PCS_NAD83_UTM_zone_8N", "PCS_NAD83_UTM_zone_9N", "PCS_NAD83_UTM_zone_10N", "PCS_NAD83_UTM_zone_11N", "PCS_NAD83_UTM_zone_12N", "PCS_NAD83_UTM_zone_13N", "PCS_NAD83_UTM_zone_14N", "PCS_NAD83_UTM_zone_15N", "PCS_NAD83_UTM_zone_16N", "PCS_NAD83_UTM_zone_17N", "PCS_NAD83_UTM_zone_18N", "PCS_NAD83_UTM_zone_19N", "PCS_NAD83_UTM_zone_20N", "PCS_NAD83_UTM_zone_21N", "PCS_NAD83_UTM_zone_22N", "PCS_NAD83_UTM_zone_23N", "PCS_NAD83_Alabama_East", "PCS_NAD83_Alabama_West", "PCS_NAD83_Alaska_zone_1", "PCS_NAD83_Alaska_zone_2", "PCS_NAD83_Alaska_zone_3", "PCS_NAD83_Alaska_zone_4", "PCS_NAD83_Alaska_zone_5", "PCS_NAD83_Alaska_zone_6", "PCS_NAD83_Alaska_zone_7", "PCS_NAD83_Alaska_zone_8", "PCS_NAD83_Alaska_zone_9", "PCS_NAD83_Alaska_zone_10", "PCS_NAD83_California_1", "PCS_NAD83_California_2", "PCS_NAD83_California_3", "PCS_NAD83_California_4", "PCS_NAD83_California_5", "PCS_NAD83_California_6", "PCS_NAD83_Arizona_East", "PCS_NAD83_Arizona_Central", "PCS_NAD83_Arizona_West", "PCS_NAD83_Arkansas_North", "PCS_NAD83_Arkansas_South", "PCS_NAD83_Colorado_North", "PCS_NAD83_Colorado_Central", "PCS_NAD83_Colorado_South", "PCS_NAD83_Connecticut", "PCS_NAD83_Delaware", "PCS_NAD83_Florida_East", "PCS_NAD83_Florida_West", "PCS_NAD83_Florida_North", "PCS_NAD83_Hawaii_zone_1", "PCS_NAD83_Hawaii_zone_2", "PCS_NAD83_Hawaii_zone_3", "PCS_NAD83_Hawaii_zone_4", "PCS_NAD83_Hawaii_zone_5", "PCS_NAD83_Georgia_East", "PCS_NAD83_Georgia_West", "PCS_NAD83_Idaho_East", "PCS_NAD83_Idaho_Central", "PCS_NAD83_Idaho_West", "PCS_NAD83_Illinois_East", "PCS_NAD83_Illinois_West", "PCS_NAD83_Indiana_East", "PCS_NAD83_Indiana_West", "PCS_NAD83_Iowa_North", "PCS_NAD83_Iowa_South", "PCS_NAD83_Kansas_North", "PCS_NAD83_Kansas_South", "PCS_NAD83_Kentucky_North", "PCS_NAD83_Kentucky_South", "PCS_NAD83_Louisiana_North", "PCS_NAD83_Louisiana_South", "PCS_NAD83_Maine_East", "PCS_NAD83_Maine_West", "PCS_NAD83_Maryland", "PCS_NAD83_Massachusetts", "PCS_NAD83_Massachusetts_Is", "PCS_NAD83_Michigan_North", "PCS_NAD83_Michigan_Central", "PCS_NAD83_Michigan_South", "PCS_NAD83_Minnesota_North", "PCS_NAD83_Minnesota_Cent", "PCS_NAD83_Minnesota_South", "PCS_NAD83_Mississippi_East", "PCS_NAD83_Mississippi_West", "PCS_NAD83_Missouri_East", "PCS_NAD83_Missouri_Central", "PCS_NAD83_Missouri_West", "PCS_Nahrwan_1967_UTM_38N", "PCS_Nahrwan_1967_UTM_39N", "PCS_Nahrwan_1967_UTM_40N", "PCS_Naparima_UTM_20N", "PCS_GD49_NZ_Map_Grid", "PCS_GD49_North_Island_Grid", "PCS_GD49_South_Island_Grid", "PCS_Datum_73_UTM_zone_29N", "PCS_ATF_Nord_de_Guerre", "PCS_NTF_France_I", "PCS_NTF_France_II", "PCS_NTF_France_III", "PCS_NTF_Nord_France", "PCS_NTF_Centre_France", "PCS_NTF_Sud_France", "PCS_British_National_Grid", "PCS_Point_Noire_UTM_32S", "PCS_GDA94_MGA_zone_48", "PCS_GDA94_MGA_zone_49", "PCS_GDA94_MGA_zone_50", "PCS_GDA94_MGA_zone_51", "PCS_GDA94_MGA_zone_52", "PCS_GDA94_MGA_zone_53", "PCS_GDA94_MGA_zone_54", "PCS_GDA94_MGA_zone_55", "PCS_GDA94_MGA_zone_56", "PCS_GDA94_MGA_zone_57", "PCS_GDA94_MGA_zone_58", "PCS_Pulkovo_Gauss_zone_4", "PCS_Pulkovo_Gauss_zone_5", "PCS_Pulkovo_Gauss_zone_6", "PCS_Pulkovo_Gauss_zone_7", "PCS_Pulkovo_Gauss_zone_8", "PCS_Pulkovo_Gauss_zone_9", "PCS_Pulkovo_Gauss_zone_10", "PCS_Pulkovo_Gauss_zone_11", "PCS_Pulkovo_Gauss_zone_12", "PCS_Pulkovo_Gauss_zone_13", "PCS_Pulkovo_Gauss_zone_14", "PCS_Pulkovo_Gauss_zone_15", "PCS_Pulkovo_Gauss_zone_16", "PCS_Pulkovo_Gauss_zone_17", "PCS_Pulkovo_Gauss_zone_18", "PCS_Pulkovo_Gauss_zone_19", "PCS_Pulkovo_Gauss_zone_20", "PCS_Pulkovo_Gauss_zone_21", "PCS_Pulkovo_Gauss_zone_22", "PCS_Pulkovo_Gauss_zone_23", "PCS_Pulkovo_Gauss_zone_24", "PCS_Pulkovo_Gauss_zone_25", "PCS_Pulkovo_Gauss_zone_26", "PCS_Pulkovo_Gauss_zone_27", "PCS_Pulkovo_Gauss_zone_28", "PCS_Pulkovo_Gauss_zone_29", "PCS_Pulkovo_Gauss_zone_30", "PCS_Pulkovo_Gauss_zone_31", "PCS_Pulkovo_Gauss_zone_32", "PCS_Pulkovo_Gauss_4N", "PCS_Pulkovo_Gauss_5N", "PCS_Pulkovo_Gauss_6N", "PCS_Pulkovo_Gauss_7N", "PCS_Pulkovo_Gauss_8N", "PCS_Pulkovo_Gauss_9N", "PCS_Pulkovo_Gauss_10N", "PCS_Pulkovo_Gauss_11N", "PCS_Pulkovo_Gauss_12N", "PCS_Pulkovo_Gauss_13N", "PCS_Pulkovo_Gauss_14N", "PCS_Pulkovo_Gauss_15N", "PCS_Pulkovo_Gauss_16N", "PCS_Pulkovo_Gauss_17N", "PCS_Pulkovo_Gauss_18N", "PCS_Pulkovo_Gauss_19N", "PCS_Pulkovo_Gauss_20N", "PCS_Pulkovo_Gauss_21N", "PCS_Pulkovo_Gauss_22N", "PCS_Pulkovo_Gauss_23N", "PCS_Pulkovo_Gauss_24N", "PCS_Pulkovo_Gauss_25N", "PCS_Pulkovo_Gauss_26N", "PCS_Pulkovo_Gauss_27N", "PCS_Pulkovo_Gauss_28N", "PCS_Pulkovo_Gauss_29N", "PCS_Pulkovo_Gauss_30N", "PCS_Pulkovo_Gauss_31N", "PCS_Pulkovo_Gauss_32N", "PCS_Qatar_National_Grid", "PCS_RD_Netherlands_Old", "PCS_RD_Netherlands_New", "PCS_SAD69_UTM_zone_18N", "PCS_SAD69_UTM_zone_19N", "PCS_SAD69_UTM_zone_20N", "PCS_SAD69_UTM_zone_21N", "PCS_SAD69_UTM_zone_22N", "PCS_SAD69_UTM_zone_17S", "PCS_SAD69_UTM_zone_18S", "PCS_SAD69_UTM_zone_19S", "PCS_SAD69_UTM_zone_20S", "PCS_SAD69_UTM_zone_21S", "PCS_SAD69_UTM_zone_22S", "PCS_SAD69_UTM_zone_23S", "PCS_SAD69_UTM_zone_24S", "PCS_SAD69_UTM_zone_25S", "PCS_Sapper_Hill_UTM_20S", "PCS_Sapper_Hill_UTM_21S", "PCS_Schwarzeck_UTM_33S", "PCS_Sudan_UTM_zone_35N", "PCS_Sudan_UTM_zone_36N", "PCS_Tananarive_Laborde", "PCS_Tananarive_UTM_38S", "PCS_Tananarive_UTM_39S", "PCS_Timbalai_1948_Borneo", "PCS_Timbalai_1948_UTM_49N", "PCS_Timbalai_1948_UTM_50N", "PCS_TM65_Irish_Nat_Grid", "PCS_Trinidad_1903_Trinidad", "PCS_TC_1948_UTM_zone_39N", "PCS_TC_1948_UTM_zone_40N", "PCS_Voirol_N_Algerie_ancien", "PCS_Voirol_S_Algerie_ancien", "PCS_Voirol_Unifie_N_Algerie", "PCS_Voirol_Unifie_S_Algerie", "PCS_Bern_1938_Swiss_New", "PCS_Nord_Sahara_UTM_29N", "PCS_Nord_Sahara_UTM_30N", "PCS_Nord_Sahara_UTM_31N", "PCS_Nord_Sahara_UTM_32N", "PCS_Yoff_UTM_zone_28N", "PCS_Zanderij_UTM_zone_21N", "PCS_MGI_Austria_West", "PCS_MGI_Austria_Central", "PCS_MGI_Austria_East", "PCS_Belge_Lambert_72", "PCS_DHDN_Germany_zone_1", "PCS_DHDN_Germany_zone_2", "PCS_DHDN_Germany_zone_3", "PCS_DHDN_Germany_zone_4", "PCS_DHDN_Germany_zone_5", "PCS_NAD27_Montana_North", "PCS_NAD27_Montana_Central", "PCS_NAD27_Montana_South", "PCS_NAD27_Nebraska_North", "PCS_NAD27_Nebraska_South", "PCS_NAD27_Nevada_East", "PCS_NAD27_Nevada_Central", "PCS_NAD27_Nevada_West", "PCS_NAD27_New_Hampshire", "PCS_NAD27_New_Jersey", "PCS_NAD27_New_Mexico_East", "PCS_NAD27_New_Mexico_Cent", "PCS_NAD27_New_Mexico_West", "PCS_NAD27_New_York_East", "PCS_NAD27_New_York_Central", "PCS_NAD27_New_York_West", "PCS_NAD27_New_York_Long_Is", "PCS_NAD27_North_Carolina", "PCS_NAD27_North_Dakota_N", "PCS_NAD27_North_Dakota_S", "PCS_NAD27_Ohio_North", "PCS_NAD27_Ohio_South", "PCS_NAD27_Oklahoma_North", "PCS_NAD27_Oklahoma_South", "PCS_NAD27_Oregon_North", "PCS_NAD27_Oregon_South", "PCS_NAD27_Pennsylvania_N", "PCS_NAD27_Pennsylvania_S", "PCS_NAD27_Rhode_Island", "PCS_NAD27_South_Carolina_N", "PCS_NAD27_South_Carolina_S", "PCS_NAD27_South_Dakota_N", "PCS_NAD27_South_Dakota_S", "PCS_NAD27_Tennessee", "PCS_NAD27_Texas_North", "PCS_NAD27_Texas_North_Cen", "PCS_NAD27_Texas_Central", "PCS_NAD27_Texas_South_Cen", "PCS_NAD27_Texas_South", "PCS_NAD27_Utah_North", "PCS_NAD27_Utah_Central", "PCS_NAD27_Utah_South", "PCS_NAD27_Vermont", "PCS_NAD27_Virginia_North", "PCS_NAD27_Virginia_South", "PCS_NAD27_Washington_North", "PCS_NAD27_Washington_South", "PCS_NAD27_West_Virginia_N", "PCS_NAD27_West_Virginia_S", "PCS_NAD27_Wisconsin_North", "PCS_NAD27_Wisconsin_Cen", "PCS_NAD27_Wisconsin_South", "PCS_NAD27_Wyoming_East", "PCS_NAD27_Wyoming_E_Cen", "PCS_NAD27_Wyoming_W_Cen", "PCS_NAD27_Wyoming_West", "PCS_NAD27_Puerto_Rico", "PCS_NAD27_St_Croix", "PCS_NAD83_Montana", "PCS_NAD83_Nebraska", "PCS_NAD83_Nevada_East", "PCS_NAD83_Nevada_Central", "PCS_NAD83_Nevada_West", "PCS_NAD83_New_Hampshire", "PCS_NAD83_New_Jersey", "PCS_NAD83_New_Mexico_East", "PCS_NAD83_New_Mexico_Cent", "PCS_NAD83_New_Mexico_West", "PCS_NAD83_New_York_East", "PCS_NAD83_New_York_Central", "PCS_NAD83_New_York_West", "PCS_NAD83_New_York_Long_Is", "PCS_NAD83_North_Carolina", "PCS_NAD83_North_Dakota_N", "PCS_NAD83_North_Dakota_S", "PCS_NAD83_Ohio_North", "PCS_NAD83_Ohio_South", "PCS_NAD83_Oklahoma_North", "PCS_NAD83_Oklahoma_South", "PCS_NAD83_Oregon_North", "PCS_NAD83_Oregon_South", "PCS_NAD83_Pennsylvania_N", "PCS_NAD83_Pennsylvania_S", "PCS_NAD83_Rhode_Island", "PCS_NAD83_South_Carolina", "PCS_NAD83_South_Dakota_N", "PCS_NAD83_South_Dakota_S", "PCS_NAD83_Tennessee", "PCS_NAD83_Texas_North", "PCS_NAD83_Texas_North_Cen", "PCS_NAD83_Texas_Central", "PCS_NAD83_Texas_South_Cen", "PCS_NAD83_Texas_South", "PCS_NAD83_Utah_North", "PCS_NAD83_Utah_Central", "PCS_NAD83_Utah_South", "PCS_NAD83_Vermont", "PCS_NAD83_Virginia_North", "PCS_NAD83_Virginia_South", "PCS_NAD83_Washington_North", "PCS_NAD83_Washington_South", "PCS_NAD83_West_Virginia_N", "PCS_NAD83_West_Virginia_S", "PCS_NAD83_Wisconsin_North", "PCS_NAD83_Wisconsin_Cen", "PCS_NAD83_Wisconsin_South", "PCS_NAD83_Wyoming_East", "PCS_NAD83_Wyoming_E_Cen", "PCS_NAD83_Wyoming_W_Cen", "PCS_NAD83_Wyoming_West", "PCS_NAD83_Puerto_Rico_Virgin_Is", "PCS_WGS72_UTM_zone_1N", "PCS_WGS72_UTM_zone_2N", "PCS_WGS72_UTM_zone_3N", "PCS_WGS72_UTM_zone_4N", "PCS_WGS72_UTM_zone_5N", "PCS_WGS72_UTM_zone_6N", "PCS_WGS72_UTM_zone_7N", "PCS_WGS72_UTM_zone_8N", "PCS_WGS72_UTM_zone_9N", "PCS_WGS72_UTM_zone_10N", "PCS_WGS72_UTM_zone_11N", "PCS_WGS72_UTM_zone_12N", "PCS_WGS72_UTM_zone_13N", "PCS_WGS72_UTM_zone_14N", "PCS_WGS72_UTM_zone_15N", "PCS_WGS72_UTM_zone_16N", "PCS_WGS72_UTM_zone_17N", "PCS_WGS72_UTM_zone_18N", "PCS_WGS72_UTM_zone_19N", "PCS_WGS72_UTM_zone_20N", "PCS_WGS72_UTM_zone_21N", "PCS_WGS72_UTM_zone_22N", "PCS_WGS72_UTM_zone_23N", "PCS_WGS72_UTM_zone_24N", "PCS_WGS72_UTM_zone_25N", "PCS_WGS72_UTM_zone_26N", "PCS_WGS72_UTM_zone_27N", "PCS_WGS72_UTM_zone_28N", "PCS_WGS72_UTM_zone_29N", "PCS_WGS72_UTM_zone_30N", "PCS_WGS72_UTM_zone_31N", "PCS_WGS72_UTM_zone_32N", "PCS_WGS72_UTM_zone_33N", "PCS_WGS72_UTM_zone_34N", "PCS_WGS72_UTM_zone_35N", "PCS_WGS72_UTM_zone_36N", "PCS_WGS72_UTM_zone_37N", "PCS_WGS72_UTM_zone_38N", "PCS_WGS72_UTM_zone_39N", "PCS_WGS72_UTM_zone_40N", "PCS_WGS72_UTM_zone_41N", "PCS_WGS72_UTM_zone_42N", "PCS_WGS72_UTM_zone_43N", "PCS_WGS72_UTM_zone_44N", "PCS_WGS72_UTM_zone_45N", "PCS_WGS72_UTM_zone_46N", "PCS_WGS72_UTM_zone_47N", "PCS_WGS72_UTM_zone_48N", "PCS_WGS72_UTM_zone_49N", "PCS_WGS72_UTM_zone_50N", "PCS_WGS72_UTM_zone_51N", "PCS_WGS72_UTM_zone_52N", "PCS_WGS72_UTM_zone_53N", "PCS_WGS72_UTM_zone_54N", "PCS_WGS72_UTM_zone_55N", "PCS_WGS72_UTM_zone_56N", "PCS_WGS72_UTM_zone_57N", "PCS_WGS72_UTM_zone_58N", "PCS_WGS72_UTM_zone_59N", "PCS_WGS72_UTM_zone_60N", "PCS_WGS72_UTM_zone_1S", "PCS_WGS72_UTM_zone_2S", "PCS_WGS72_UTM_zone_3S", "PCS_WGS72_UTM_zone_4S", "PCS_WGS72_UTM_zone_5S", "PCS_WGS72_UTM_zone_6S", "PCS_WGS72_UTM_zone_7S", "PCS_WGS72_UTM_zone_8S", "PCS_WGS72_UTM_zone_9S", "PCS_WGS72_UTM_zone_10S", "PCS_WGS72_UTM_zone_11S", "PCS_WGS72_UTM_zone_12S", "PCS_WGS72_UTM_zone_13S", "PCS_WGS72_UTM_zone_14S", "PCS_WGS72_UTM_zone_15S", "PCS_WGS72_UTM_zone_16S", "PCS_WGS72_UTM_zone_17S", "PCS_WGS72_UTM_zone_18S", "PCS_WGS72_UTM_zone_19S", "PCS_WGS72_UTM_zone_20S", "PCS_WGS72_UTM_zone_21S", "PCS_WGS72_UTM_zone_22S", "PCS_WGS72_UTM_zone_23S", "PCS_WGS72_UTM_zone_24S", "PCS_WGS72_UTM_zone_25S", "PCS_WGS72_UTM_zone_26S", "PCS_WGS72_UTM_zone_27S", "PCS_WGS72_UTM_zone_28S", "PCS_WGS72_UTM_zone_29S", "PCS_WGS72_UTM_zone_30S", "PCS_WGS72_UTM_zone_31S", "PCS_WGS72_UTM_zone_32S", "PCS_WGS72_UTM_zone_33S", "PCS_WGS72_UTM_zone_34S", "PCS_WGS72_UTM_zone_35S", "PCS_WGS72_UTM_zone_36S", "PCS_WGS72_UTM_zone_37S", "PCS_WGS72_UTM_zone_38S", "PCS_WGS72_UTM_zone_39S", "PCS_WGS72_UTM_zone_40S", "PCS_WGS72_UTM_zone_41S", "PCS_WGS72_UTM_zone_42S", "PCS_WGS72_UTM_zone_43S", "PCS_WGS72_UTM_zone_44S", "PCS_WGS72_UTM_zone_45S", "PCS_WGS72_UTM_zone_46S", "PCS_WGS72_UTM_zone_47S", "PCS_WGS72_UTM_zone_48S", "PCS_WGS72_UTM_zone_49S", "PCS_WGS72_UTM_zone_50S", "PCS_WGS72_UTM_zone_51S", "PCS_WGS72_UTM_zone_52S", "PCS_WGS72_UTM_zone_53S", "PCS_WGS72_UTM_zone_54S", "PCS_WGS72_UTM_zone_55S", "PCS_WGS72_UTM_zone_56S", "PCS_WGS72_UTM_zone_57S", "PCS_WGS72_UTM_zone_58S", "PCS_WGS72_UTM_zone_59S", "PCS_WGS72_UTM_zone_60S", "PCS_WGS72BE_UTM_zone_1N", "PCS_WGS72BE_UTM_zone_2N", "PCS_WGS72BE_UTM_zone_3N", "PCS_WGS72BE_UTM_zone_4N", "PCS_WGS72BE_UTM_zone_5N", "PCS_WGS72BE_UTM_zone_6N", "PCS_WGS72BE_UTM_zone_7N", "PCS_WGS72BE_UTM_zone_8N", "PCS_WGS72BE_UTM_zone_9N", "PCS_WGS72BE_UTM_zone_10N", "PCS_WGS72BE_UTM_zone_11N", "PCS_WGS72BE_UTM_zone_12N", "PCS_WGS72BE_UTM_zone_13N", "PCS_WGS72BE_UTM_zone_14N", "PCS_WGS72BE_UTM_zone_15N", "PCS_WGS72BE_UTM_zone_16N", "PCS_WGS72BE_UTM_zone_17N", "PCS_WGS72BE_UTM_zone_18N", "PCS_WGS72BE_UTM_zone_19N", "PCS_WGS72BE_UTM_zone_20N", "PCS_WGS72BE_UTM_zone_21N", "PCS_WGS72BE_UTM_zone_22N", "PCS_WGS72BE_UTM_zone_23N", "PCS_WGS72BE_UTM_zone_24N", "PCS_WGS72BE_UTM_zone_25N", "PCS_WGS72BE_UTM_zone_26N", "PCS_WGS72BE_UTM_zone_27N", "PCS_WGS72BE_UTM_zone_28N", "PCS_WGS72BE_UTM_zone_29N", "PCS_WGS72BE_UTM_zone_30N", "PCS_WGS72BE_UTM_zone_31N", "PCS_WGS72BE_UTM_zone_32N", "PCS_WGS72BE_UTM_zone_33N", "PCS_WGS72BE_UTM_zone_34N", "PCS_WGS72BE_UTM_zone_35N", "PCS_WGS72BE_UTM_zone_36N", "PCS_WGS72BE_UTM_zone_37N", "PCS_WGS72BE_UTM_zone_38N", "PCS_WGS72BE_UTM_zone_39N", "PCS_WGS72BE_UTM_zone_40N", "PCS_WGS72BE_UTM_zone_41N", "PCS_WGS72BE_UTM_zone_42N", "PCS_WGS72BE_UTM_zone_43N", "PCS_WGS72BE_UTM_zone_44N", "PCS_WGS72BE_UTM_zone_45N", "PCS_WGS72BE_UTM_zone_46N", "PCS_WGS72BE_UTM_zone_47N", "PCS_WGS72BE_UTM_zone_48N", "PCS_WGS72BE_UTM_zone_49N", "PCS_WGS72BE_UTM_zone_50N", "PCS_WGS72BE_UTM_zone_51N", "PCS_WGS72BE_UTM_zone_52N", "PCS_WGS72BE_UTM_zone_53N", "PCS_WGS72BE_UTM_zone_54N", "PCS_WGS72BE_UTM_zone_55N", "PCS_WGS72BE_UTM_zone_56N", "PCS_WGS72BE_UTM_zone_57N", "PCS_WGS72BE_UTM_zone_58N", "PCS_WGS72BE_UTM_zone_59N", "PCS_WGS72BE_UTM_zone_60N", "PCS_WGS72BE_UTM_zone_1S", "PCS_WGS72BE_UTM_zone_2S", "PCS_WGS72BE_UTM_zone_3S", "PCS_WGS72BE_UTM_zone_4S", "PCS_WGS72BE_UTM_zone_5S", "PCS_WGS72BE_UTM_zone_6S", "PCS_WGS72BE_UTM_zone_7S", "PCS_WGS72BE_UTM_zone_8S", "PCS_WGS72BE_UTM_zone_9S", "PCS_WGS72BE_UTM_zone_10S", "PCS_WGS72BE_UTM_zone_11S", "PCS_WGS72BE_UTM_zone_12S", "PCS_WGS72BE_UTM_zone_13S", "PCS_WGS72BE_UTM_zone_14S", "PCS_WGS72BE_UTM_zone_15S", "PCS_WGS72BE_UTM_zone_16S", "PCS_WGS72BE_UTM_zone_17S", "PCS_WGS72BE_UTM_zone_18S", "PCS_WGS72BE_UTM_zone_19S", "PCS_WGS72BE_UTM_zone_20S", "PCS_WGS72BE_UTM_zone_21S", "PCS_WGS72BE_UTM_zone_22S", "PCS_WGS72BE_UTM_zone_23S", "PCS_WGS72BE_UTM_zone_24S", "PCS_WGS72BE_UTM_zone_25S", "PCS_WGS72BE_UTM_zone_26S", "PCS_WGS72BE_UTM_zone_27S", "PCS_WGS72BE_UTM_zone_28S", "PCS_WGS72BE_UTM_zone_29S", "PCS_WGS72BE_UTM_zone_30S", "PCS_WGS72BE_UTM_zone_31S", "PCS_WGS72BE_UTM_zone_32S", "PCS_WGS72BE_UTM_zone_33S", "PCS_WGS72BE_UTM_zone_34S", "PCS_WGS72BE_UTM_zone_35S", "PCS_WGS72BE_UTM_zone_36S", "PCS_WGS72BE_UTM_zone_37S", "PCS_WGS72BE_UTM_zone_38S", "PCS_WGS72BE_UTM_zone_39S", "PCS_WGS72BE_UTM_zone_40S", "PCS_WGS72BE_UTM_zone_41S", "PCS_WGS72BE_UTM_zone_42S", "PCS_WGS72BE_UTM_zone_43S", "PCS_WGS72BE_UTM_zone_44S", "PCS_WGS72BE_UTM_zone_45S", "PCS_WGS72BE_UTM_zone_46S", "PCS_WGS72BE_UTM_zone_47S", "PCS_WGS72BE_UTM_zone_48S", "PCS_WGS72BE_UTM_zone_49S", "PCS_WGS72BE_UTM_zone_50S", "PCS_WGS72BE_UTM_zone_51S", "PCS_WGS72BE_UTM_zone_52S", "PCS_WGS72BE_UTM_zone_53S", "PCS_WGS72BE_UTM_zone_54S", "PCS_WGS72BE_UTM_zone_55S", "PCS_WGS72BE_UTM_zone_56S", "PCS_WGS72BE_UTM_zone_57S", "PCS_WGS72BE_UTM_zone_58S", "PCS_WGS72BE_UTM_zone_59S", "PCS_WGS72BE_UTM_zone_60S", "PCS_WGS84_UTM_zone_1N", "PCS_WGS84_UTM_zone_2N", "PCS_WGS84_UTM_zone_3N", "PCS_WGS84_UTM_zone_4N", "PCS_WGS84_UTM_zone_5N", "PCS_WGS84_UTM_zone_6N", "PCS_WGS84_UTM_zone_7N", "PCS_WGS84_UTM_zone_8N", "PCS_WGS84_UTM_zone_9N", "PCS_WGS84_UTM_zone_10N", "PCS_WGS84_UTM_zone_11N", "PCS_WGS84_UTM_zone_12N", "PCS_WGS84_UTM_zone_13N", "PCS_WGS84_UTM_zone_14N", "PCS_WGS84_UTM_zone_15N", "PCS_WGS84_UTM_zone_16N", "PCS_WGS84_UTM_zone_17N", "PCS_WGS84_UTM_zone_18N", "PCS_WGS84_UTM_zone_19N", "PCS_WGS84_UTM_zone_20N", "PCS_WGS84_UTM_zone_21N", "PCS_WGS84_UTM_zone_22N", "PCS_WGS84_UTM_zone_23N", "PCS_WGS84_UTM_zone_24N", "PCS_WGS84_UTM_zone_25N", "PCS_WGS84_UTM_zone_26N", "PCS_WGS84_UTM_zone_27N", "PCS_WGS84_UTM_zone_28N", "PCS_WGS84_UTM_zone_29N", "PCS_WGS84_UTM_zone_30N", "PCS_WGS84_UTM_zone_31N", "PCS_WGS84_UTM_zone_32N", "PCS_WGS84_UTM_zone_33N", "PCS_WGS84_UTM_zone_34N", "PCS_WGS84_UTM_zone_35N", "PCS_WGS84_UTM_zone_36N", "PCS_WGS84_UTM_zone_37N", "PCS_WGS84_UTM_zone_38N", "PCS_WGS84_UTM_zone_39N", "PCS_WGS84_UTM_zone_40N", "PCS_WGS84_UTM_zone_41N", "PCS_WGS84_UTM_zone_42N", "PCS_WGS84_UTM_zone_43N", "PCS_WGS84_UTM_zone_44N", "PCS_WGS84_UTM_zone_45N", "PCS_WGS84_UTM_zone_46N", "PCS_WGS84_UTM_zone_47N", "PCS_WGS84_UTM_zone_48N", "PCS_WGS84_UTM_zone_49N", "PCS_WGS84_UTM_zone_50N", "PCS_WGS84_UTM_zone_51N", "PCS_WGS84_UTM_zone_52N", "PCS_WGS84_UTM_zone_53N", "PCS_WGS84_UTM_zone_54N", "PCS_WGS84_UTM_zone_55N", "PCS_WGS84_UTM_zone_56N", "PCS_WGS84_UTM_zone_57N", "PCS_WGS84_UTM_zone_58N", "PCS_WGS84_UTM_zone_59N", "PCS_WGS84_UTM_zone_60N", "PCS_WGS84_UTM_zone_1S", "PCS_WGS84_UTM_zone_2S", "PCS_WGS84_UTM_zone_3S", "PCS_WGS84_UTM_zone_4S", "PCS_WGS84_UTM_zone_5S", "PCS_WGS84_UTM_zone_6S", "PCS_WGS84_UTM_zone_7S", "PCS_WGS84_UTM_zone_8S", "PCS_WGS84_UTM_zone_9S", "PCS_WGS84_UTM_zone_10S", "PCS_WGS84_UTM_zone_11S", "PCS_WGS84_UTM_zone_12S", "PCS_WGS84_UTM_zone_13S", "PCS_WGS84_UTM_zone_14S", "PCS_WGS84_UTM_zone_15S", "PCS_WGS84_UTM_zone_16S", "PCS_WGS84_UTM_zone_17S", "PCS_WGS84_UTM_zone_18S", "PCS_WGS84_UTM_zone_19S", "PCS_WGS84_UTM_zone_20S", "PCS_WGS84_UTM_zone_21S", "PCS_WGS84_UTM_zone_22S", "PCS_WGS84_UTM_zone_23S", "PCS_WGS84_UTM_zone_24S", "PCS_WGS84_UTM_zone_25S", "PCS_WGS84_UTM_zone_26S", "PCS_WGS84_UTM_zone_27S", "PCS_WGS84_UTM_zone_28S", "PCS_WGS84_UTM_zone_29S", "PCS_WGS84_UTM_zone_30S", "PCS_WGS84_UTM_zone_31S", "PCS_WGS84_UTM_zone_32S", "PCS_WGS84_UTM_zone_33S", "PCS_WGS84_UTM_zone_34S", "PCS_WGS84_UTM_zone_35S", "PCS_WGS84_UTM_zone_36S", "PCS_WGS84_UTM_zone_37S", "PCS_WGS84_UTM_zone_38S", "PCS_WGS84_UTM_zone_39S", "PCS_WGS84_UTM_zone_40S", "PCS_WGS84_UTM_zone_41S", "PCS_WGS84_UTM_zone_42S", "PCS_WGS84_UTM_zone_43S", "PCS_WGS84_UTM_zone_44S", "PCS_WGS84_UTM_zone_45S", "PCS_WGS84_UTM_zone_46S", "PCS_WGS84_UTM_zone_47S", "PCS_WGS84_UTM_zone_48S", "PCS_WGS84_UTM_zone_49S", "PCS_WGS84_UTM_zone_50S", "PCS_WGS84_UTM_zone_51S", "PCS_WGS84_UTM_zone_52S", "PCS_WGS84_UTM_zone_53S", "PCS_WGS84_UTM_zone_54S", "PCS_WGS84_UTM_zone_55S", "PCS_WGS84_UTM_zone_56S", "PCS_WGS84_UTM_zone_57S", "PCS_WGS84_UTM_zone_58S", "PCS_WGS84_UTM_zone_59S", "PCS_WGS84_UTM_zone_60S", "PM_Greenwich", "PM_Lisbon", "PM_Paris", "PM_Bogota", "PM_Madrid", "PM_Rome", "PM_Bern", "PM_Jakarta", "PM_Ferro", "PM_Brussels", "PM_Stockholm", "Ellipse_Airy_1830", "Ellipse_Airy_Modified_1849", "Ellipse_Australian_National_Spheroid", "Ellipse_Bessel_1841", "Ellipse_Bessel_Modified", "Ellipse_Bessel_Namibia", "Ellipse_Clarke_1858", "Ellipse_Clarke_1866", "Ellipse_Clarke_1866_Michigan", "Ellipse_Clarke_1880_Benoit", "Ellipse_Clarke_1880_IGN", "Ellipse_Clarke_1880_RGS", "Ellipse_Clarke_1880_Arc", "Ellipse_Clarke_1880_SGA_1922", "Ellipse_Everest_1830_1937_Adjustment", "Ellipse_Everest_1830_1967_Definition", "Ellipse_Everest_1830_1975_Definition", "Ellipse_Everest_1830_Modified", "Ellipse_GRS_1980", "Ellipse_Helmert_1906", "Ellipse_Indonesian_National_Spheroid", "Ellipse_International_1924", "Ellipse_International_1967", "Ellipse_Krassowsky_1940", "Ellipse_NWL_9D", "Ellipse_NWL_10D", "Ellipse_Plessis_1817", "Ellipse_Struve_1860", "Ellipse_War_Office", "Ellipse_WGS_84", "Ellipse_GEM_10C", "Ellipse_OSU86F", "Ellipse_OSU91A", "Ellipse_Clarke_1880", "Ellipse_Sphere", "DatumE_Airy1830", "DatumE_AiryModified1849", "DatumE_AustralianNationalSpheroid", "DatumE_Bessel1841", "DatumE_BesselModified", "DatumE_BesselNamibia", "DatumE_Clarke1858", "DatumE_Clarke1866", "DatumE_Clarke1866Michigan", "DatumE_Clarke1880_Benoit", "DatumE_Clarke1880_IGN", "DatumE_Clarke1880_RGS", "DatumE_Clarke1880_Arc", "DatumE_Clarke1880_SGA1922", "DatumE_Everest1830_1937Adjustment", "DatumE_Everest1830_1967Definition", "DatumE_Everest1830_1975Definition", "DatumE_Everest1830Modified", "DatumE_GRS1980", "DatumE_Helmert1906", "DatumE_IndonesianNationalSpheroid", "DatumE_International1924", "DatumE_International1967", "DatumE_Krassowsky1960", "DatumE_NWL9D", "DatumE_NWL10D", "DatumE_Plessis1817", "DatumE_Struve1860", "DatumE_WarOffice", "DatumE_WGS84", "DatumE_GEM10C", "DatumE_OSU86F", "DatumE_OSU91A", "DatumE_Clarke1880", "DatumE_Sphere", "Datum_Adindan", "Datum_Australian_Geodetic_Datum_1966", "Datum_Australian_Geodetic_Datum_1984", "Datum_Ain_el_Abd_1970", "Datum_Afgooye", "Datum_Agadez", "Datum_Lisbon", "Datum_Aratu", "Datum_Arc_1950", "Datum_Arc_1960", "Datum_Batavia", "Datum_Barbados", "Datum_Beduaram", "Datum_Beijing_1954", "Datum_Reseau_National_Belge_1950", "Datum_Bermuda_1957", "Datum_Bern_1898", "Datum_Bogota", "Datum_Bukit_Rimpah", "Datum_Camacupa", "Datum_Campo_Inchauspe", "Datum_Cape", "Datum_Carthage", "Datum_Chua", "Datum_Corrego_Alegre", "Datum_Cote_d_Ivoire", "Datum_Deir_ez_Zor", "Datum_Douala", "Datum_Egypt_1907", "Datum_European_Datum_1950", "Datum_European_Datum_1987", "Datum_Fahud", "Datum_Gandajika_1970", "Datum_Garoua", "Datum_Guyane_Francaise", "Datum_Hu_Tzu_Shan", "Datum_Hungarian_Datum_1972", "Datum_Indonesian_Datum_1974", "Datum_Indian_1954", "Datum_Indian_1975", "Datum_Jamaica_1875", "Datum_Jamaica_1969", "Datum_Kalianpur", "Datum_Kandawala", "Datum_Kertau", "Datum_Kuwait_Oil_Company", "Datum_La_Canoa", "Datum_Provisional_S_American_Datum_1956", "Datum_Lake", "Datum_Leigon", "Datum_Liberia_1964", "Datum_Lome", "Datum_Luzon_1911", "Datum_Hito_XVIII_1963", "Datum_Herat_North", "Datum_Mahe_1971", "Datum_Makassar", "Datum_European_Reference_System_1989", "Datum_Malongo_1987", "Datum_Manoca", "Datum_Merchich", "Datum_Massawa", "Datum_Minna", "Datum_Mhast", "Datum_Monte_Mario", "Datum_M_poraloko", "Datum_North_American_Datum_1927", "Datum_NAD_Michigan", "Datum_North_American_Datum_1983", "Datum_Nahrwan_1967", "Datum_Naparima_1972", "Datum_New_Zealand_Geodetic_Datum_1949", "Datum_NGO_1948", "Datum_Datum_73", "Datum_Nouvelle_Triangulation_Francaise", "Datum_NSWC_9Z_2", "Datum_OSGB_1936", "Datum_OSGB_1970_SN", "Datum_OS_SN_1980", "Datum_Padang_1884", "Datum_Palestine_1923", "Datum_Pointe_Noire", "Datum_Geocentric_Datum_of_Australia_1994", "Datum_Pulkovo_1942", "Datum_Qatar", "Datum_Qatar_1948", "Datum_Qornoq", "Datum_Loma_Quintana", "Datum_Amersfoort", "Datum_RT38", "Datum_South_American_Datum_1969", "Datum_Sapper_Hill_1943", "Datum_Schwarzeck", "Datum_Segora", "Datum_Serindung", "Datum_Sudan", "Datum_Tananarive_1925", "Datum_Timbalai_1948", "Datum_TM65", "Datum_TM75", "Datum_Tokyo", "Datum_Trinidad_1903", "Datum_Trucial_Coast_1948", "Datum_Voirol_1875", "Datum_Voirol_Unifie_1960", "Datum_Bern_1938", "Datum_Nord_Sahara_1959", "Datum_Stockholm_1938", "Datum_Yacare", "Datum_Yoff", "Datum_Zanderij", "Datum_Militar_Geographische_Institut", "Datum_Reseau_National_Belge_1972", "Datum_Deutsche_Hauptdreiecksnetz", "Datum_Conakry_1905", "Datum_WGS72", "Datum_WGS72_Transit_Broadcast_Ephemeris", "Datum_WGS84", "Datum_Ancienne_Triangulation_Francaise", "Datum_Nord_de_Guerre", "GCSE_Airy1830", "GCSE_AiryModified1849", "GCSE_AustralianNationalSpheroid", "GCSE_Bessel1841", "GCSE_BesselModified", "GCSE_BesselNamibia", "GCSE_Clarke1858", "GCSE_Clarke1866", "GCSE_Clarke1866Michigan", "GCSE_Clarke1880_Benoit", "GCSE_Clarke1880_IGN", "GCSE_Clarke1880_RGS", "GCSE_Clarke1880_Arc", "GCSE_Clarke1880_SGA1922", "GCSE_Everest1830_1937Adjustment", "GCSE_Everest1830_1967Definition", "GCSE_Everest1830_1975Definition", "GCSE_Everest1830Modified", "GCSE_GRS1980", "GCSE_Helmert1906", "GCSE_IndonesianNationalSpheroid", "GCSE_International1924", "GCSE_International1967", "GCSE_Krassowsky1940", "GCSE_NWL9D", "GCSE_NWL10D", "GCSE_Plessis1817", "GCSE_Struve1860", "GCSE_WarOffice", "GCSE_WGS84", "GCSE_GEM10C", "GCSE_OSU86F", "GCSE_OSU91A", "GCSE_Clarke1880", "GCSE_Sphere", "GCS_Adindan", "GCS_AGD66", "GCS_AGD84", "GCS_Ain_el_Abd", "GCS_Afgooye", "GCS_Agadez", "GCS_Lisbon", "GCS_Aratu", "GCS_Arc_1950", "GCS_Arc_1960", "GCS_Batavia", "GCS_Barbados", "GCS_Beduaram", "GCS_Beijing_1954", "GCS_Belge_1950", "GCS_Bermuda_1957", "GCS_Bern_1898", "GCS_Bogota", "GCS_Bukit_Rimpah", "GCS_Camacupa", "GCS_Campo_Inchauspe", "GCS_Cape", "GCS_Carthage", "GCS_Chua", "GCS_Corrego_Alegre", "GCS_Cote_d_Ivoire", "GCS_Deir_ez_Zor", "GCS_Douala", "GCS_Egypt_1907", "GCS_ED50", "GCS_ED87", "GCS_Fahud", "GCS_Gandajika_1970", "GCS_Garoua", "GCS_Guyane_Francaise", "GCS_Hu_Tzu_Shan", "GCS_HD72", "GCS_ID74", "GCS_Indian_1954", "GCS_Indian_1975", "GCS_Jamaica_1875", "GCS_JAD69", "GCS_Kalianpur", "GCS_Kandawala", "GCS_Kertau", "GCS_KOC", "GCS_La_Canoa", "GCS_PSAD56", "GCS_Lake", "GCS_Leigon", "GCS_Liberia_1964", "GCS_Lome", "GCS_Luzon_1911", "GCS_Hito_XVIII_1963", "GCS_Herat_North", "GCS_Mahe_1971", "GCS_Makassar", "GCS_EUREF89", "GCS_Malongo_1987", "GCS_Manoca", "GCS_Merchich", "GCS_Massawa", "GCS_Minna", "GCS_Mhast", "GCS_Monte_Mario", "GCS_M_poraloko", "GCS_NAD27", "GCS_NAD_Michigan", "GCS_NAD83", "GCS_Nahrwan_1967", "GCS_Naparima_1972", "GCS_GD49", "GCS_NGO_1948", "GCS_Datum_73", "GCS_NTF", "GCS_NSWC_9Z_2", "GCS_OSGB_1936", "GCS_OSGB70", "GCS_OS_SN80", "GCS_Padang", "GCS_Palestine_1923", "GCS_Pointe_Noire", "GCS_GDA94", "GCS_Pulkovo_1942", "GCS_Qatar", "GCS_Qatar_1948", "GCS_Qornoq", "GCS_Loma_Quintana", "GCS_Amersfoort", "GCS_RT38", "GCS_SAD69", "GCS_Sapper_Hill_1943", "GCS_Schwarzeck", "GCS_Segora", "GCS_Serindung", "GCS_Sudan", "GCS_Tananarive", "GCS_Timbalai_1948", "GCS_TM65", "GCS_TM75", "GCS_Tokyo", "GCS_Trinidad_1903", "GCS_TC_1948", "GCS_Voirol_1875", "GCS_Voirol_Unifie", "GCS_Bern_1938", "GCS_Nord_Sahara_1959", "GCS_Stockholm_1938", "GCS_Yacare", "GCS_Yoff", "GCS_Zanderij", "GCS_MGI", "GCS_Belge_1972", "GCS_DHDN", "GCS_Conakry_1905", "GCS_WGS_72", "GCS_WGS_72BE", "GCS_WGS_84", "GCS_Bern_1898_Bern", "GCS_Bogota_Bogota", "GCS_Lisbon_Lisbon", "GCS_Makassar_Jakarta", "GCS_MGI_Ferro", "GCS_Monte_Mario_Rome", "GCS_NTF_Paris", "GCS_Padang_Jakarta", "GCS_Belge_1950_Brussels", "GCS_Tananarive_Paris", "GCS_Voirol_1875_Paris", "GCS_Voirol_Unifie_Paris", "GCS_Batavia_Jakarta", "GCS_ATF_Paris", "GCS_NDG_Paris", "Angular_Radian", "Angular_Degree", "Angular_Arc_Minute", "Angular_Arc_Second", "Angular_Grad", "Angular_Gon", "Angular_DMS", "Angular_DMS_Hemisphere", "Linear_Meter", "Linear_Foot", "Linear_Foot_US_Survey", "Linear_Foot_Modified_American", "Linear_Foot_Clarke", "Linear_Foot_Indian", "Linear_Link", "Linear_Link_Benoit", "Linear_Link_Sears", "Linear_Chain_Benoit", "Linear_Chain_Sears", "Linear_Yard_Sears", "Linear_Yard_Indian", "Linear_Fathom", "Linear_Mile_International_Nautical", "RasterPixelIsArea", "RasterPixelIsPoint", "ModelTypeProjected", "ModelTypeGeographic", "ModelTypeGeocentric", "VerticalCSTypeGeoKey", "VerticalCitationGeoKey", "VerticalDatumGeoKey", "VerticalUnitsGeoKey", "ProjectedCSTypeGeoKey", "PCSCitationGeoKey", "ProjectionGeoKey", "ProjCoordTransGeoKey", "ProjLinearUnitsGeoKey", "ProjLinearUnitSizeGeoKey", "ProjStdParallel1GeoKey", "ProjStdParallel2GeoKey", "ProjNatOriginLongGeoKey", "ProjNatOriginLatGeoKey", "ProjFalseEastingGeoKey", "ProjFalseNorthingGeoKey", "ProjFalseOriginLongGeoKey", "ProjFalseOriginLatGeoKey", "ProjFalseOriginEastingGeoKey", "ProjFalseOriginNorthingGeoKey", "ProjCenterLongGeoKey", "ProjCenterLatGeoKey", "ProjCenterEastingGeoKey", "ProjCenterNorthingGeoKey", "ProjScaleAtNatOriginGeoKey", "ProjScaleAtCenterGeoKey", "ProjAzimuthAngleGeoKey", "ProjStraightVertPoleLongGeoKey", "GeographicTypeGeoKey", "GeogCitationGeoKey", "GeogGeodeticDatumGeoKey", "GeogPrimeMeridianGeoKey", "GeogLinearUnitsGeoKey", "GeogLinearUnitSizeGeoKey", "GeogAngularUnitsGeoKey", "GeogAngularUnitSizeGeoKey", "GeogEllipsoidGeoKey", "GeogSemiMajorAxisGeoKey", "GeogSemiMinorAxisGeoKey", "GeogInvFlatteningGeoKey", "GeogAzimuthUnitsGeoKey", "GeogPrimeMeridianLongGeoKey", "GTModelTypeGeoKey", "GTRasterTypeGeoKey", "GTCitationGeoKey", "compression_algo", "packbits", "TTA1", "password", "ultimotion", "unknown_codec", "ff_avcodec_locked", "custom_stride", "Complex", "Advanced", "book_idx", "mode_number", "put_vector", "floor_encode", "residue_encode", "Interlacing", "Upscaling", "vqavideo", "joint_stereo", "joint", "optimize_mono", "opt_mono", "ws_snd1"], "debugstrings": ["cfrm in version %d\n", "Invalid version %d\n", "Version %d != 4.\n", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "On2 VP6 (Flash version)", "On2 VP6 (Flash version, with alpha channel)", "subpacket[%i].cookversion=%x\n", "Cook version %d", "Different Version of Segment asked Twice", "GPSVersionID", "f->version > 1", "Invalid version in global header\n", "f->version > 2", "invalid version %d in ver01 header\n", "Version 2 needed for requested features but version 2 is experimental and not enabled\n", "s->version >= 2", "This file is encoded with Fraps version %d. This codec can only decode versions <= 5.\n", "Unsupported codec version!\n", "LOCO codec version %i", "lossy:%i, version:%i, mode: %i\n", "This version does not support %d kHz - %d kbit/s/ch mode.\n", "mjpeg: JFIF header found (version: %x.%x) SAR=%d/%d\n", "Intel(R) JPEG Library, version 1", "range <= 16 || !s->msmpeg4_version", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "Encoder version %u.%u\n", "Header version doesn't match codec tag\n", "0x500 version should be mono\n", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "Extradata version %d", "unsupported version: %d\n", "unsupported header version: %d\n", "QDMC version 1", "QuickDraw version 1", "QuickDraw version unknown (%X)", "Unknown version %X", "Audio sample format conversion failed\n", "RV1/2 version", "Error s->version is %d\n", "Unsupported Sonic version, please report\n", "GeoTIFF_Version", "texture data version %i is unsupported\n", "FFmpeg version 2.8.6", "libavcodec license: LGPL version 2.1 or later", "Encoder version %d.%d.%d.%d\n", "Unsupported VBLE Version: %d\n", "Old WMV3 version detected, some frames may be decoded incorrectly\n", "Theora bitstream version %X\n", "VP version: %d\n", "VQA Version %d", "VQA Version %i", "Invalid WebP Lossless version\n", "unsupported version\n", "GCC: (Linaro GCC 4.9-2015.04-1) 4.9.3 20150413 (prerelease)"], "localsymbols": ["", "lpc_refl_cb9", "ff_dcadsp_init", "table.12389", "add_pixels_clamped_c", "put_vc1_mspel_mc20_16_c", "avg_8tap_sharp_4h_c", "atrac3p_huff_gain_lev4_cb", "monoblack_pal", "revert_channel_correlation", "decode_flush", "vp6_coeff_groups", "pred4x4_left_dc_14_c", "vp8_put_epel_h4_armv6", "last_hwaccel", "avg_h264_qpel8_h_lowpass_12", "w_c.isra.3.constprop.6", "put_h264_qpel16_v_lowpass_neon_packed", "g722_encode_close", "vlc_tab_diff_huffbits", "tone_xlats.10067", "avg_h264_qpel16_mc13_12_c", "avg_scaled_bilin_c.constprop.9", "ff_adpcm_ea_r1_decoder", "huff_a01_cb", "ff_hevc_put_qpel_uw_h3v1_neon_8", "$d", "ff_wma_init", "huff_a56_cb", "dnxhd_1235_dc_bits", "huff_a65_xlat", "avg_h264_qpel16_v_lowpass_l2_neon", "dc_ccp_vlc", "ff_h263_encode_mb", "silk_model_ltp_filter1_sel", "put_no_rnd_pixels16_8_c", "ff_weighted_vector_sumf", "put_vc1_mspel_mc11_16_c", "pcm_dvd_decode_frame", "svq1_inter_multistage", "completed.8985", "lpc_refl_cb4", "put_pixels16_xy2_8_c", "vc1_parse_init", "vp6_dccv_pct", "ff_hevc_decoder", "ff_emulated_edge_mc_8", "pred8x8_horizontal_10_c", "ff_vp3_idct_dc_add_neon", "hls_transform_tree", "codebook0", "ff_put_no_rnd_pixels16_x2_arm", "put_h264_qpel4_mc30_12_c", "mpa_huffcodes_5", "pred8x8l_horizontal_up_12_c", "ff_ffv1_decoder", "ff_mpeg4_static_rl_table_store", "filter_param_def", "qmat07", "aic_decode_frame", "in_lo", "biweight_h264_pixels2_8_c", "vp8_v_loop_filter8uv_c", "ff_pred8x8_plane_neon", "vlc_tab_level", "avg_h264_qpel16_mc10_12_c", "put_h264_qpel2_mc21_8_c", "qdm2_table", "ydts", "transform_skip_9", "ff_dvbsub_decoder", "estimate_qp", "ff_vp6_decoder", "ff_wmv1_y_dc_scale_table", "ff_wmapro_decoder", "opcode_0xf8", "vc1_decode_b_mb_intfi", "decode_group3_2d_line", "field_scan8x8_cavlc", "edge_idx.11348", "bits1", "decode_slice_luma.isra.1", "bitalloc_129_codes_e", "frame_worker_thread", "mpc8_idx50", "levels2", "ff_adaptive_gain_control", "__almost_empty_row", "nr_iidopd_par_tab", "vp5_parse_coeff_models", "put_cavs_qpel16_mc11_c", "pred4x4_vertical_add_12_c", "cinepak_decode_init", "mov2textsub", "put_vc1_mspel_mc10_c", "ff_dca_fir_32bands_nonperfect", "put_no_rnd_pixels16_y2_8_c", "pcm_encode_init", "put_hevc_qpel_hv_8", "ff_mb_ptype_vlc", "dirac_decode_frame", "silk_lsp2poly", "ff_dnxhd_decoder", "ff_xface_encoder", "put_scaled_regular_16_c", "bitalloc_25_bits_b", "webp_decode_close", "ff_put_no_rnd_qpel16_mc13_old_c", "vp9_scans_nb", "huff_b71_xlat", "svq1_block_type", "bitinv32", "targa_encode_init", "coeff_abs_levelgt1_ctx.11560", "ff_vc1_init_transposed_scantables", "avg_scaled_smooth_16_c", "decorr_stereo.constprop.9", "delta_tab_1_5", "pred_angular_3_12", "hpf_400_poles", "pred8x16_left_dc_9_c", "put_hevc_qpel_bi_h_10", "dct_unquantize_h263_intra_armv5te", "vc1_inv_trans_4x4_dc_c", "put_h264_qpel8_mc33_10_c", "vlc_tab_level_huffcodes", "lsp_init", "ff_nellymoser_decoder", "ff_put_h264_qpel8_mc00_neon", "ff_put_vp8_epel8_v6_armv6", "ict_int", "put_8tap_smooth_8v_c", "ff_adpcm_ima_apc_decoder", "fic_decoder_class", "ff_draw_pc_font", "put_h264_qpel2_v_lowpass_9.constprop.78", "h264_v_loop_filter_chroma_intra_9_c", "ff_h263_decoder", "gif_decode_frame", "ff_mpc_init", "ff_metasound_mode2224s", "ff_avui_encoder", "MUL_REG", "tabs_19_40", "targa_encode_frame", "tm2_stream_order", "vq_tab", ".udivsi3_skip_div0_test", "dv_weight_248", "ff_msmp4_mb_i_vlc", "flac_decorrelate_ls_c_16", "diag_downleft_8x8_c", "sbr_qmf_synthesis.isra.9", "ccpl_huffbits3", "huffcodes", "escape130_decode_close", "avg_h264_qpel8_mc20_10_c", "ff_cos_32768_fixed", "cplscale5", "ff_put_h264_qpel16_mc30_neon", "ff_h261_mtype_code", "ff_vp3_v_loop_filter_neon", "mlp_select_pack_output_armv6", "quant11", "sf_vlc_tabs", "put_hevc_epel_v_9", "fft1024", "put_scaled_regular_8_c", "ff_hevc_put_qpel_bi_neon_wrapper", "ff_vp8_idct_add_neon", "qmat3C", "table.11992", "deregister_tm_clones", "rd8x8_c", "OFFSET_CO", "ff_pbm_encoder", "on2avc_cb6_syms", "ff_shorten_decoder", "ff_svq1_inter_codebooks", "vlc_offsets", "qtrle_decode_frame", "vp5_parse_header", "ipvideo_decode_block_opcode_0xD_16", "bitalloc_17_codes_e", "ff_metasound_mode4448", "ff_lzw_encode_flush", "compat_free_buffer", "dnxhd_1237_chroma_weight", "dss_sp_adaptive_gain", "avg_qpel16_mc23_c", "ff_hevc_put_pixels_w6_neon_8", "avg_cavs_qpel8_mc02_c", "xsub_encode_rle", "put_h264_qpel8_mc20_9_c", "ff_mqc_flush", "qmat0A", "aic_decode_init", "avg_h264_qpel8_mc33_12_c", "ff_fix_long_p_mvs", "ff_vp78dsp_init_neon", "avg_h264_qpel16_mc30_9_c", "ff_put_pixels8_x2_no_rnd_neon", "ff_bgmc_decode_init", "vsad_intra8_c", "huff_ipd_dt_bits", "ff_vp8_v_loop_filter16_simple_armv6", "pred4x4_vertical_right_9_c", "sp5x_data_sos", "huff_a56_xlat", "svq3_decode_mb", "cb1110sm0", "avg_qpel16_mc31_c", "remap", "pred8x8l_vertical_filter_add_8_c", "vp6_pcr_tree", "ff_adpcm_swf_decoder", "codebook_vector10_vals", "sf_nb_codes.10060", "ff_utvideo_encoder", "free_frame_buffers", "huff_a43_xlat", "dnxhd_1237_ac_bits", "ff_mpv_encode_end", "put_hevc_qpel_bi_h_9", "ff_h264_idct_dc_add_14_c", "pred4x4_down_left_12_c", "ps_hybrid_synthesis_deint_c", "silk_pitch_scale", "mpc8_decode_flush", "hor_down_4x4_c", "read_cb_data", "bark_tab_m8s_256", "avg_h264_qpel8_mc12_8_c", "read_huffman_tables", "ff_ivi_col_slant8", "ff_hevc_part_mode_decode", "put_h264_qpel2_mc23_8_c", "avg_h264_qpel16_mc21", "ff_lzw_decode_open", "vp7_decode_frame", "gif_decode_close", "ps_stereo_interpolate_c", "quant_tab.12013", "ipvideo_decode_block_opcode_0x8", "flac_lpc_16_c", "ff_hevc_luma_mv_merge_mode", "j_orient_vlc", "ff_hq_ac_codes", "diag_downright_8x8_c", "ff_mpeg12_mbPatTable", "ff_atrac1_decoder", "avg_8tap_regular_64hv_c", "silk_pitch_offset_nb10ms", "ff_pre_estimate_p_frame_motion", "vc1_inv_trans_4x8_c", "loop_filter_h_48_16_c", "avg_h264_qpel4_mc20_12_c", "swb_offset_128_8", "mpa_huffbits_11", "__subdf3", "avg_h264_qpel16_mc11_14_c", "avg_h264_qpel8_mc12_9_c", "intra_recon_8bpp", "iid_par_dequant_c1.9631", "mpc8_res_bits", "pred16x16_plane_12_c", "dnxhd_1251_ac_level", "ff_h261_mba_code", "fft_level_exp_huffbits", "ff_hevc_transform_4x4_neon_8", "avg_cavs_qpel8_mc32_c", "flac_decorrelate_indep_c_32", "is_table", "put_h264_qpel16_mc10_8_c", "avg_h264_qpel8_hv_lowpass_12", "avg_cavs_qpel16_mc02_c", "pred4x4_down_left_rv40_nodown_c", "decode_block", "ff_ac3_compute_bit_allocation", "lps_state", "decode_format80", "dct_unquantize_mpeg2_inter_c", "set_put_bits_buffer_size.part.7", "ff_mpeg4_intra_run", "vp9_default_scan_4x4_nb", "hl_decode_mb_444_simple_8", "sbr_hf_g_filt_c", "table.11525", "silk_pitch_min_lag", "ff_mss2dsp_init", "cinaudio_delta16_table", "put_hevc_epel_bi_h_8", "avg_h264_qpel8_mc11_12_c", "fcb16l", "on2avc_swb_start_mode_4_44", "ff_dct_unquantize_h263_inter_neon", "vp3_idct_constants", "pred4x4_down_right_10_c", "vp8_pred16x16_tree_intra", "fcb16ss", "bwlog_tab.12642", "ff_vp8_v_loop_filter16_inner_armv6", "ac_vlc_descB_codes", "cb4432l0", "vertical_compose_dd97iH0", "wmavoice_lsp16_intercoeff_a", "encode_window_bands_info", "get_slice_data", "cb1616l1", "dnxhd_1237_dc_codes", "ff_hevc_set_qPy", "bits4", "pred4x4_top_dc_14_c", "cdg_decode_frame", "ff_tiff_prime_meridian_codes", "read_vec_pos", "ff_mqc_nlps", "ff_lzw_encode_init", "put_rv40_qpel8_mc11_c", "ipvideo_decode_block_opcode_0x7", "ff_h264_pred_direct_motion", "bitalloc_129_codes_g", "push_greys", "ff_put_rv40_qpel16_mc12_neon", "pred8x8_128_dc_10_c", "decode_subband_arith", "idct_row", "put_h264_qpel4_mc33_8_c", "inter_pred_scaled_8bpp.isra.5", "inv_predict_6", "vp9_default_scan_8x8_nb", "sonic_decode_close", "prores_profile_info", "ff_rl_table", "ff_bink_decoder", "wmavoice_gain_codebook_fcb", "avg_h264_qpel8_mc12_12_c", "avg_rv40_qpel16_mc31_c", "bink_tree_lens", "in_hi", "ff_simple_idct_add_10", "put_qpel16_mc11_c", "huff_b33_cb", "avg_tpel_pixels_mc22_c", "ff_simple_idct44_add", "silk_model_pitch_contour_nb10ms", "t_huffman_noise_bal_3_0dB_bits", "cinaudio_decode_init", "atrac3p_ct_huff_bits2", "h261_decode_end", "fft_stereo_phase_vlc", "ff_metasound_mode0806", "qmat0D", "put_hevc_pel_uni_pixels_10", "__aeabi_i2f", "ff_hq_profile", "tc0_table", "mpc8_scfi1_codes", "spatial_compensation_7", "ff_vp8_idct_add_armv6", "bit8x8_c", "default_scaling_list_intra", "table.11496", "ff_webvtt_decoder", "dnxhd_calc_bits_thread", "ff_mdct_init", "ff_h264_filter_mb_fast", "hevc_h_loop_filter_chroma_9", "ff_huffyuv_alloc_temp", "ff_hevc_put_qpel_uw_h2v2_neon_8", "__PRETTY_FUNCTION__.10092", "ff_h264_idct_add8_neon", "__compound_literal.30", "avg_h264_qpel8_mc03_12_c", "intra_rvlc_run", "bmp_encode_init", "ff_flac_lpc_16_arm", "avg_h264_qpel16_hv_lowpass_l2_neon", "rv_chrom_bits", "ff_h263_hwaccel_pixfmt_list_420", "vp9_dc_qlookup", "ff_adpcm_afc_coeffs", "weight_dirac_pixels8_c", "dscf0_table.9771", "cbp_tab", "horiz_scan4x4_y", "put_no_rnd_qpel16_mc12_c", "avg_vc1_mspel_mc13_16_c", "quant_index_to_tab", "combine_fft.constprop.12", "pred8x16_mad_cow_dc_l00_10", "ff_avs_decoder", "bitalloc_3_codes", "vlc_tab_tone_level_idx_hi2", "sf_lut", "adpcm_index_table3", "decode_ics.constprop.22", "put_h264_chroma_mc1_16_c", "mpc7_quant_vlc_off", "ff_h264_idct8_dc_add_neon", "ff_mbincr_vlc", "mpeg_decode_slice", "s302m_options", "ff_dsicinvideo_decoder", "put_h264_qpel8_mc32_8_c", "h264_h_loop_filter_chroma_intra_9_c", "rct_y_coeff.10886", "put_h264_qpel8_mc20_8_c", "compat_release_buffer", "gmc1_motion", "dirac_decode_frame_internal", "ff_prores_run_to_cb_index", "ff_put_h264_qpel16_mc22_neon", "ff_mpv_common_frame_size_change", "av_sqr_exp_multbl_sf", "decode_nal_units.constprop.7", "vwin256", "ff_tta_decoder", "arith_get_number", "ff_fft16_vfp", "codec_descriptors", "ff_codec_open2_recursive", "gray_pix_fmts", "idct_32x32_dc_9", "ff_hevc_put_qpel_uw_pixels_w16_neon_8", "pred4x4_horizontal_up_12_c", "avg_h264_qpel8_mc30_8_c", "estimation_delay", "dv_iweight_720_c", "avg_8tap_regular_8hv_c", "huff_a27_cb", "tns_min_sfb_short", "idcin_decode_frame", "ff_avg_qpel16_mc13_old_c", "table.10619", "ff_sbrdsp_init", "SHUFFLE_MASK", "ff_imdct_half_c_fixed", "ff_wma_lsp_codebook", "avg_h264_qpel16_mc23_9_c", "put_h264_qpel16_mc12_10_c", "ff_exp2", "sr_1d97_int.part.2", "symbol_to_vec2", "put_hevc_qpel_bi_w_h_12", "qmf_64_subbands.constprop.8", "mpa_huffcodes_11", "wmavoice_dq_lsp16r3", "table.10618", "smc_decode_frame", "ff_avg_qpel8_mc32_old_c", "avg_h264_qpel16_mc13_9_c", "atrac3p_decode_frame", "ff_vp56_dc_dequant", "matrix_coeffs", "avg_h264_qpel16_mc32_12_c", "bitalloc_12_codes", "sub_hfyu_median_pred_c", "put_vp8_epel4_h4_c", "avg_h264_qpel4_mc11_12_c", "unpack_vlcs.isra.6.constprop.12", "put_hevc_qpel_uni_w_hv_9", "avg_qpel16_mc22_c", "ff_v308_decoder", "mpc8_q9up_codes", "ff_asv_ccp_tab", "ff_vp7dsp_init", "wmavoice_ipol1_coeffs", "ff_put_h264_qpel8_mc01_neon", "ff_synth_filter_init", "srt_alignment_cb", "CSWTCH.79", "pred8x8l_down_right_9_c", "ff_avg_h264_qpel8_mc00_neon", "ff_vp8_v_loop_filter16_neon", "ir_filters_lookup_MODE_7k95", "table.11504", "pred4x4_horizontal_10_c", "ff_hevc_get_ref_list", "ff_unlock_avcodec", "codebook24", "evrc_lspq_full_codebook2", "avg_qpel8_mc01_c", "intra_pred_3_12", "bits9", "ff_rl_init", "cook_decode_init", "chroma_coeffs", "loop_filter_h_16_8_c", "rv34_mc.constprop.10", "rv34_inter_coeff", "transform_add16x16_8", "update_prob", "avg_pixels8x8_c", "initial_coeffs_b_3800", "ff_metasound_mode4432s", "ff_ac3_sum_square_butterfly_int32_neon", "ff_mpv_frame_end", "pred8x8_horizontal_9_c", "qmat22", "pred8x8l_horizontal_10_c", "q3_vlc", "predictor_decode_stereo_3800", "pred8x16_top_dc_10_c", "c37_mv", "avg_h264_qpel16_mc32_10_c", "decode_3p_track", "ac3_update_bap_counts_c", "diag_downright_16x16_c", "pix_norm1_c", "ff_put_no_rnd_pixels8_x2_arm", "mpeg4_encode_vol_header.constprop.9", "put_8tap_sharp_64hv_c", "tab7", "mpa_huffcodes_16", "put_pixels4_8_c", "table.11501", "h264_h_loop_filter_chroma_mbaff_8_c", "bands_warped.10653", "vp7_decode_mb_row_sliced", "ff_silk_flush", "rl2_decode_init", "ff_h264_idct8_add_8_c", "avg_pixels8_8_c", "put_h264_qpel8_mc22_14_c", "ff_avg_qpel8_mc31_old_c", "pred8x16_top_dc_9_c", "read_ipdopd_data.isra.3", "mps_state", "v308_encode_close", "sbr_qmf_deint_bfly_c", "ff_thread_free", "wl_bits.10051", "ff_indeo4_decoder", "ipqf_coeffs2", "ff_vc1_intfr_4mv_mbmode_vlc", "huffbits1", "ff_h264_chroma_dc_dequant_idct_14_c", "vlc_tab_fft_tone_offset_2_huffcodes", "ff_imdct_half_neon", "cavs_decode_frame", "vmdvideo_decode_frame", "sunrast_encode_init", "ivi_create_huff_from_desc", "ff_flic_decoder", "get_symbol.constprop.6", "lsp_interpolate", "h264_h_loop_filter_chroma422_intra_14_c", "ff_hevc_put_qpel_uw_pixels_w4_neon_8", "quantization_tab", "put_vp8_epel16_h6v6_c", "vmdvideo_decode_end", "ac3_downmix_c", "ff_put_vp8_epel8_v4_neon", "on2avc_cb9_codes", "ff_rv10_encode_picture_header", "ff_table1_dc_lum", "ff_put_vp8_epel4_h6_neon", "off.11278", "avg_h264_qpel4_mc00_14_c", "ptype_vlc_syms", "ff_atrac3p_imdct", "__floatunsidf", "pred16x16_129_dc_14_c", "ff_acelp_high_pass_filter", "ipvideo_decode_block_opcode_0xE", "rl_length", "avg_h264_qpel8_h_lowpass_l2_neon", "very_high_specs", "ctxlbltab", "ff_dca_fir_32bands_perfect", "btype_vlc_syms", "cmv_decode_frame", "ff_mlp_checksum16", "__aeabi_ui2d", "ff_cos_16_fixed", "h264_h_loop_filter_chroma422_intra_12_c", "vp8_pred8x8c_prob_inter", "ff_sbr_qmf_deint_bfly_neon", "ape_decoder_class", "ff_g729_decoder", "vec4_vlc", "ff_cos_65536", "ff_dct_end", "ff_imdct_half_c", "put_8tap_smooth_16hv_c", "ff_old_ff_y_dc_scale_table", "h264_h_loop_filter_chroma422_intra_9_c", "ff_vc1_b_field_mvpred_scales", "uni_mpeg4_inter_rl_bits", "ff_qdm2_decoder", "intra_pred_2_8", "sonic_decode_init", "binkb_intra_quant", "avg_h264_qpel8_mc11_9_c", "idct_8x8_dc_10", "ff_iir_filter_init", "on2avc_cb7_bits", "ff_hpeldsp_init_arm", "__aeabi_uldivmod", "avg_cavs_qpel16_mc23_c", "simple_idct_arm_put", "loop_filter_v_4_8_c", "ff_h264_decode_mb_cavlc", "avg_cavs_qpel16_mc11_c", "g2_Q4", "frame_type_vlc", "tscc2_decode_end", "ff_vc1_decode_entry_point", "shuf1.9875", "ff_dca_fir_64bands", "fft_tone_sample_table", "avg_vc1_mspel_mc13_c", "decode_frame_adu", "g_01", "table.11519", "svq1_flush", "pred8x8l_vertical_9_c", "transform_rdpcm_12", "ff_tiff_gt_raster_type_codes", "filter_coeffs_def", "svq1_decode_motion_vector", "ff_dca_lfe_fir_64", "dnxhd_1243_luma_weight", "init_frames", "avg_rv40_qpel16_mc11_c", "dnxhd_1250_run_codes", "table4_run", "qdm2_decode_close", "pred4x4_vertical_right_10_c", "v410_encode_frame", "ff_sort_nearly_sorted_floats", "ff_avrp_encoder", "huff_b41_xlat", "atrac3p_huff_numwavs1_cb", "put_signed_pixels_clamped_c", "put_h264_qpel8_h_lowpass_12", "__compound_literal.11", "ff_ac3_float_encode_frame", "h264_h_loop_filter_luma_intra_8_c", "put_vp8_epel16_h6_c", "ff_ac3_db_per_bit_tab", "avg_rv30_tpel8_mc01_c", "ff_interplay_video_decoder", "pred_angular_3_9", "ff_mdct_end_fixed", "put_rv40_qpel16_mc12_c", "calc_masking", "huff_b53_cb", "try_8x8basis_c", "CSWTCH.64", "vp9_row_scan_8x8", "put_cavs_filt8_hv_ff.isra.6", "ff_wmv2_add_mb", "f_huffman_env_bal_1_5dB_bits", "ff_avg_h264_qpel16_mc20_neon", "ff_h263_pred_motion", "ff_amrwb_lsp2lpc", "dxt3_block", "ma_prediction_coeff", "lpf_7_coef", "ff_mpeg4_y_dc_scale_table", "read_tree", "eob_run_get_bits", "ff_adx_parser", "vp9_default_scan_16x16", "put_8tap_smooth_4hv_c", "table.11752", "ff_atrac3p_decoder", "ff_ac3_fast_gain_tab", "ff_vp56dsp_init", "dca_lfe_fir1_c", "avg_h264_qpel4_mc33_14_c", "bl_put_epel_v6_armv6", "bitalloc_25_bits_e", "vp6_def_runv_coeff_model", "ass_codes_map", "fft_stereo_phase_huffbits", "dct_calc_I_c", "ff_sunrast_decoder", "ff_big_add", "ff_pow_0_7", "encode_init", "ff_dss_sp_decoder", "put_qpel16_mc03_c", "put_cavs_qpel16_mc03_c", "ff_vc1_mv_pmode_table", "put_qpel16_mc21_c", "huff_a51_cb", "fft65536", "loop_filter_h_4_8_c", "fft65536_neon", "put_h264_qpel8_mc13_14_c", "avg_vc1_mspel_mc20_c", "ff_videodsp_init_arm", "dss_sp_combinatorial_table", "cvh_huffbits6", "init_uni_ac_vlc", "pack_float_sample", "silk_model_gain_lowbits", "celt_model_alloc_trim", "ff_set_cmp", "mpeg4_decode_mb", "linear_to_ulaw", "qmat34", "cavs_idct8_add_c", "ff_mpeg4_workaround_bugs", "huff_b67_xlat", "ff_mpeg12_mbMotionVectorTable", "pred8x8l_horizontal_down_9_c", "pred16x16_vertical_add_8_c", "beta_table", "on2avc_cb3_bits", "ff_vp6_filter_diag4_c", "table.12012", "encode_mb_hq.isra.6", "scale_block_c", "put_vp8_epel16_h4v6_c", "func1.11589", "avg_8tap_sharp_64hv_c", "avx_tab", "table.10350", "avg_8tap_smooth_64hv_c", "estimate_motion_thread", "avg_rv40_qpel16_mc13_c", "qmat37", "codebook_vector6_idx", "put_h264_qpel8_mc31_9_c", "ff_fic_decoder", "ff_hevc_sao_eo_class_decode", "flac_parse", "ff_aac_search_for_tns", "dscf_table.9706", "smacker_decode_bigtree", "ff_put_vp8_bilin4_h_armv6", "dequant_mul", "bitalloc_9_bits_a", "put_hevc_epel_bi_w_h_8", "ff_put_rv40_qpel8_mc32_neon", "full_search", "pred16x16_top_dc_10_c", "transform_rdpcm_9", "ff_mpadsp_apply_window_fixed_armv6", "bark_tab_m8_256", "put_h264_qpel16_mc02_14_c", "dnxhd_1238_chroma_weight", "modes", "sao_edge_restore_1_12", "scale_rl_huffbits", "pred16x16_top_dc_14_c", "order_MODE_10k2", "jpeg2000_decode_init", "vp8_mv_update_prob", "__aeabi_f2lz", "__aeabi_idiv", "__row_loop", "ff_mp3float_decoder", "ff_mpeg12_mbAddrIncrTable", "ff_rv10_encoder", "encode_q_branch2", "ff_cos_32_fixed", "s.10333", "ff_msmp4_dc_luma_vlc", "cos1pi4", "ff_hevc_put_qpel_uw_pixels_neon_8", "ff_jpeg2000_reinit", "ff_avg_dirac_pixels32_bilinear_c", "sao_tab.11253", "silk_model_lsf_s2_ext", "pred8x16_dc_14_c", "pred8x8_plane_10_c", "ff_fdct_ifast248", "top_modifier_c", "put_bilin_16v_c", "get_dimension", "apply_loop_filter", "ff_cavs_dir_mv", "index_table2", "loop_filter_v_48_16_c", "huff_b02_xlat", "gamma_tab.9630", "left_block_options.11196", "fft_tone_envelope_table", "ff_vc1_bfraction_lut", "s302m_decode_frame", "idct_col_add_armv5te", "fft4096_neon", "ff_set_ref_count", "avg_h264_qpel4_mc32_9_c", "avui_encode_frame", "decode_0", "rv40_aic_top_vlc_codes", "ff_psdsp_init", "ff_adpcm_g722_encoder", "avg_h264_qpel8_mc30_9_c", "ff_dv_init_dynamic_tables", "ff_mpv_report_decode_progress", "avg_h264_qpel16_mc23_14_c", "pos.14691", "decode_nal_sei_decoded_picture_hash", "ff_mpa_synth_window_float", "put_hevc_qpel_bi_v_10", "bitrate_table", "predictor_decode_stereo_3950", "ff_h264_idct8_add_10_c", "pred4x4_vertical_add_10_c", "put_h264_qpel8_mc03_14_c", "j2k_class", "encode_codeword", "ff_h264_idct8_add4_9_c", "ff_vc1_fps_dr", "ff_put_pixels_clamped_neon", "ff_tiff_vert_cs_codes", "huff_smallest_node", "avg_h264_qpel16_mc10_10_c", "h264_h_loop_filter_chroma422_14_c", "ff_set_dimensions", "ff_h264_idct_add16_14_c", "hor_8x8_c", "avg_qpel16_mc21_c", "beta_tab", "hevc_mp4toannexb_filter", "fft2048_neon", "put_h264_qpel2_mc22_8_c", "cllc_decode_close", "ff_pcm_mulaw_encoder", "msvideo1_decode_init", "avg_h264_qpel8_mc32_8_c", "ff_mpa_quant_steps", "vp7_y2dc_qlookup", "avg_h264_qpel4_mc23_8_c", "ff_mpeg4_find_frame_end", "delta_tab_2_8_m10", "put_h264_qpel8_mc01_10_c", "huff_a72_xlat", "done.12011", "ff_h264_pixel_aspect", "decodeplane32", "vp3_v_loop_filter_c", "ff_h264_idct8_dc_add_9_c", "allocate_buffers.part.5", "decode_vol_header", "ff_h264_idct_add8_422_12_c", "ir_filter_strong_MODE_7k95", "put_h264_qpel4_mc13_14_c", "fat_ydt4", "saturate_output_float", "ff_avg_h264_chroma_mc8_neon", "ff_celp_circ_addf", "avg_h264_qpel8_mc31_9_c", "put_h264_qpel4_mc32_8_c", "ff_dvdsub_encoder", "webvtt_text_cb", "ff_put_h264_qpel16_mc20_neon", "sprite_v_single_c", "pred16x16_vertical_9_c", "spatial_compensation_3", "ff_avg_h264_qpel16_mc32_neon", "start_offset.10437", "cpia_decode_frame", "put_rv40_chroma_mc4_c", "ff_mpeg1_default_intra_matrix", "ff_put_vc1_mspel_mc31_neon", "put_h264_qpel8_v_lowpass_9", "vp9_row_scan_8x8_nb", "ts_pulse_values", "ff_avg_rv40_qpel8_mc31_neon", "qcelp_lspvq1", "put_h264_qpel2_mc11_14_c", "__compound_literal.36", "CSWTCH.89", "ff_ivi_row_slant8", "ff_hevc_decode_nal_pps", "lsf_cb2", "ff_lzw_encode_state_size", "decode_8", "fft65536_vfp", "bitstream_sfreq", "on2avc_cb8_syms", "ff_aic_dc_scale_table", "adpcm_index_table2", "put_h264_qpel8_h_lowpass_14", "huff_a67_cb", "svq1_intra_codebook_8x8", "ff_svq1_inter_multistage_vlc", "avg_h264_qpel8_mc23_9_c", "const_array", "ff_ac3_bitrate_tab", "put_h264_qpel2_mc21_10_c", "ivi4_quant_4x4_inter", "put_h264_qpel8_v_lowpass_12", "ff_pgm_decoder", "ff_h264_direct_dist_scale_factor", "decode_close", "put_vp8_epel4_h6v4_c", "put_cavs_qpel8_mc23_c", "l0_l1_cand_idx", "ff_acelp_decode_8bit_to_1st_delay3", "ff_tak_check_crc", "ff_fix_long_mvs", "sprite_v_double_twoscale_c", "ff_vc1_norm6_vlc", "avg_vc1_mspel_mc11_16_c", "ff_aac_sbr_ctx_close_fixed", "svq1_decode_end", "ff_hq_ac_skips", "avg_8tap_smooth_16h_c", "mpc8_q8_bits", "yop_decode_init", "ff_mpc8_decoder", "gain_cb", "init_values", "ccpl_huffcodes", "pred8x16_dc_10_c", "ff_put_rv40_qpel8_mc33_neon", "vp7_y2ac_qlookup", "lz77_distance_offsets", "index2.9366", "ff_aanscales", "pred8x8_dc_8_c", "sample_fmts_s16p", "ff_mss1_decoder", "ff_put_pixels8_l2_8", "ff_nuv_decoder", "huffcode4", "mpc8_cnk_len", "ff_mlp_pack_output_inorder_8ch_1shift_armv6", "ff_xwd_decoder", "pred8x16_mad_cow_dc_0l0_14", "fft128", "vp5_default_models_init", "put_h264_qpel8_h_lowpass_10", "ff_dct_quantize_c", "on2avc_cb15_bits", "ff_vp6f_decoder", "dnxhd_8bit_get_pixels_8x4_sym", "__aeabi_idivmod", "ff_put_pixels16_x2_armv6", "dvbsub_parse", "ljpeg_decode_yuv_scan", "ff_hap_free_context", "pass_big", "last_avcodec", "qtrle_decode_end", "ff_h264_idct_add16_8_c", "ff_ps_mul_pair_single_neon", "free_tables.isra.5", "offset_table", "avg_h264_qpel4_mc03_14_c", "adpcm_flush", "tag_list", "ff_rate_estimate_qscale", "ac_bias_0", "huff_a27_xlat", "msrle_decode_end", "motion_vector_table", "vorbis_parse_init", "ff_flac_blocksize_table", "vlcdec_lookup", "spatial_compensation_1", "ff_jv_decoder", "dvbsub_parse_init", "pred8x8_128_dc_12_c", "avg_8tap_regular_4v_c", "decode_header", "lsf_cb4", "x8_orient_highquant_table", "pred_angular_2_10", "ff_subblock_synthesis", "avg_h264_chroma_mc8_8_c", "hamming_window", "ff_spatial_idwt_buffered_slice", "pnm_encode_frame", "ff_adpcm_ima_qt_encoder", "put_hevc_epel_hv_9", "ff_put_pixels8_armv6", "vp9_segmentation_tree", "ff_put_pixels8_x2_arm", "binkb_runbits", "ff_h261_rl_table_store", "ts_cb_6", "division_tab5", "put_h264_qpel16_mc03_8_c", "ff_vc1_apply_p_loop_filter", "ff_svq1_frame_size_table", "put_vp8_epel4_v4_c", "ff_mpa_synth_filter_fixed", "rl_vlc_table.12345", "ff_dsd_msbf_planar_decoder", "scale_huffcodes", "rv40_weight_func_rnd_16", "sao_edge_restore_0_10", "f_center_20.9534", "ff_mqc_decode", "ff_put_rv40_qpel8_mc11_neon", "stl_decoder_class", "weight_h264_pixels4_10_c", "huff_vlc_tables_sizes", "cvh_huffbits5", "avg_rv40_qpel8_mc21_c", "vlc_tab_run_huffbits", "qmat41", "ff_scalarproduct_and_madd_int16_neon", "lsp8s", "ff_hevc_hls_residual_coding", "cplscale4", "huff_a32_xlat", "initialized.10229", "ff_svq3_decoder", "hadamard8_diff8x8_c", "dirac_decode_init", "pred8x8_vertical_add_14_c", "ff_vc1_inv_trans_4x8_neon", "ipvideo_decode_block_opcode_0x6_16", "cb0808l1", "mjpegdec_class", "g726_decode_frame", "hq_tab_13", "cdxl_decode_frame", "shape11s", "find_ref_mvs", "put_h264_qpel8_mc31_14_c", "windowing_and_mdct_ltp", "lsp_band1", "ff_mspel_motion", "opus_decode_init", "convert_str", "find_headers_search", "ff_v210x_decoder", "wmv2_add_block", "get_best_header", "ff_put_vc1_mspel_mc32_neon", "fcb11sl", "vp7_v_loop_filter16_c", "avg_8tap_smooth_64h_c", "tags_per_config", "horizontal_decompose53i", "bS4.11154", "ff_vc1_pquant_table", "hor_up_32x32_c", "avg_h264_qpel16_mc33_12_c", "ff_v408_decoder", "bfi_decode_frame", "ff_fmt_convert_init", "vc1_v_s_overlap_c", "on2avc_cb9_bits", "decode_5p_track", "ff_put_pixels8x8_c", "std_pal_table", "ff_h264_idct_add8_14_c", "tabs_9_20", "ff_fast_malloc.part.1", "ff_aac_num_swb_480", "table.10046", "put_cavs_qpel8_mc20_c", "ff_avg_rv40_qpel16_mc12_neon", "ff_metasound_mode1616s", "ff_hevc_cabac_init", "av_sqrttbl_sf", "g_41", "MACEtab3", "bitalloc_65_codes_b", "transform_add16x16_10", "put_h264_qpel2_mc33_14_c", "put_h264_qpel4_mc03_12_c", "avg_cavs_qpel16_mc32_c", "avg_h264_qpel4_mc21_8_c", "ff_vc1_2ref_mvdata_bits", "put_h264_qpel4_mc02_14_c", "ff_swb_offset_128", "smacker_decode_tree.constprop.5", "get_ur_golomb_jpegls.constprop.6", "mpeg_decode_end", "avg_vc1_mspel_mc03_c", "order_MODE_8k85", "qmat25", "xvid_idct_add", "CSWTCH.88", "draw_edges_8_c", "mask_edge_tab.11206", "cavs_filter_lh_c", "done.11455", "adpcm_encode_frame", "avg_qpel16_mc01_c", "ff_put_h264_chroma_mc2_neon", "put_h264_qpel4_mc32_12_c", "mode_22_24", "huff_b37_xlat", "pred4x4_dc_8_c", "ff_scale_vector_to_given_sum_of_squares", "rv40_h_weak_loop_filter", "ff_vc1_imode_vlc", "pred8x8_plane_14_c", "bitalloc_25_codes_f", "avg_h264_qpel16_mc13_10_c", "put_h264_qpel2_mc23_10_c", "avg_h264_qpel8_mc21_14_c", "ff_celp_math_init", "put_h264_qpel4_mc32_10_c", "put_bits.constprop.8", "ff_avg_rv40_qpel16_mc22_neon", "put_h264_qpel8_mc32_12_c", "ff_put_vp8_epel4_h4v6_neon", "huff_a62_cb", "ff_ivi_vertical_scan_8x8", "ff_put_h264_qpel16_mc01_neon", "ff_atrac_generate_tables", "pwc_levs", "dss_sp_filter_cb", "decode_coeffs_b_16bpp", "huffbits6", "ff_cos_65536_fixed", "ff_hevc_put_qpel_uw_h2v1_neon_8", "huff_a14_xlat", "wmavoice_decode_init", "vp8_h_loop_filter_armv6", "ff_ega_palette", "ff_cavsdsp_init", "cinvideo_decode_end", "ff_mlp_pack_output_inorder_2ch_4shift_armv6", "empty_row", "ff_hevc_cu_qp_delta_abs", "codebook2", "ff_cllc_decoder", "ff_aac_swb_size_128", "sp5x_data_dqt", "put_hevc_epel_bi_h_12", "ff_h264_idct_add_neon", "ps_add_squares_c", "put_h264_qpel8_mc02_8_c", "ff_jpegls_encoder", "put_scaled_bilin_c.constprop.14", "ff_ivi_mc_8x8_delta", "wl_nb_bits.10049", "ff_ivi_mc_avg_4x4_no_delta", "pred4x4_down_left_svq3_c", "order_MODE_6k7", "fft_tone_level_table", "put_h264_qpel8_mc21_10_c", "ff_g722_low_inv_quant6", "fft4096", "pred_planar_3_12", "fft32768", "write_quant_table", "fft8192_neon", "convert_alignment", "ff_mpeg12_vlc_dc_chroma_code", "ff_snow_release_buffer", "cb0808s0", "ff_atrac3p_mant_tab", "ff_h264_chroma_qp", "add_pixels8_c", "avg_rv40_qpel8_v_lowpass.constprop.11", "mpa_quad_bits", "ff_pcm_f64le_decoder", "put_qpel8_mc33_c", "ff_eatgv_decoder", "ff_alternate_vertical_scan", "avg_vc1_mspel_mc33_16_c", "huff_b71_cb", "ff_fft_init_arm", "pred8x8l_vertical_12_c", "imc_quantizer1", "huff_b35_cb", "ff_ac3_fast_decay_tab", "inv_predict_2", "k", "ff_put_vp8_pixels16_neon", "psy_abr_map", "ff_tiff_decoder", "lsp11s", "def_lru_555", "ff_cb2_vects", "avg_h264_qpel16_mc00_8_c", "fcb22ss", "fcb8l", "sine_table", "decode_coeffs_b32_8bpp.constprop.16", "avg_cavs_qpel8_mc11_c", "put_h264_qpel4_mc10_9_c", "ff_synth_filter_init_arm", "ff_qpeldsp_init", "mpc8_scfi0_bits", "silk_model_excitation_lsb", "ff_w53_32_c", "coef0_huffcodes", "ff_mszh_decoder", "ff_hevc_pred_init", "ff_dca_scale_factor_quant7", "vector_clip_int32_c", "samples_per_band", "loop_filter_v_16_8_c", "mpeg1_encode_motion", "bits2", "avg_cavs_qpel8_mc22_c", "initialized_vlcs.10079", "put_h264_qpel16_hv_lowpass_12.constprop.39", "ff_vc1_icbpcy_vlc", "ff_huff_build_tree", "avg_cavs_qpel8_mc23_c", "ff_ac3_channels_tab", "mxpeg_decode_frame", "put_hevc_qpel_bi_hv_12", "ff_cos_128_fixed", "__fixunssfdi", "huff_iid_dt1_bits", "ff_ffv1_close", "pred16x16_top_dc_9_c", "avg_h264_qpel4_mc10_9_c", "zigzag_scan", "ff_dnxhd_parser", "ea_adpcm_table", "table0_vlc", "ff_ps_read_data_fixed", "ff_ac3_bin_to_band_tab", "fixed_cb_gain", "ivi4_quant_8x8_inter", "quantize.constprop.15", "vp8_v_loop_filter16_c", "huff_a45_cb", "fallback_lquant", "ff_put_h264_qpel16_mc11_neon", "put_rv40_qpel8_mc01_c", "rv34_table_intra_cbppat", "mpeg4_options", "code_table2.10227", "mss4_ac_vlc_lens", "put_rv40_qpel8_h_lp_packed_s6_neon", "random_dequant_type24", "h264_h_loop_filter_chroma422_intra_8_c", "tmv_decode_frame", "ff_aac_eld_window_512", "put_no_rnd_qpel8_mc03_c", "ff_h264_v_loop_filter_luma_neon", "weight_h264_pixels4_8_c", "fft_stereo_exp_huffcodes", "pred8x8l_vertical_left_10_c", "cdxl_decode_end", "svq1_intra_codebook_4x4", "ff_wmv3image_decoder", "ff_hevc_v_loop_filter_chroma_neon", "rl_vlc_table.12006", "put_cavs_qpel16_mc31_c", "erb", "float_to_fixed24_c", "put_h264_qpel4_h_lowpass_14", "lsp8", "ffv1_class", "ff_pcm_u32be_encoder", "bark_tab_s44_128", "vp7_idct_add_c", "pcx_encode_frame", "qmat16", "on2avc_cb15_codes", "ff_prores_progressive_scan", "ff_put_vp8_epel8_h4v4_armv6", "evrc_lspq_nb_codebooks", "transform_rdpcm_8", "put_h264_qpel8_mc30_9_c", "ff_put_pixels8_x2_no_rnd_armv6", "avg_h264_qpel16_mc33_8_c", "bS3.11155", "pred4x4_left_dc_10_c", "put_8tap_regular_16v_c", "ff_estimate_b_frame_motion", "vp7_ydc_qlookup", "avg_h264_qpel16_mc20_14_c", "bitalloc_65_bits_g", "mpa_huffbits_7", "decode_lowdelay_slice", "ff_ivi_col_haar4", "ff_v210_encoder", "pred4x4_horizontal_up_10_c", "dc_lum", "pred8x16_mad_cow_dc_l0t_14", "ff_faanidct_put", "pred4x4_horizontal_up_9_c", "avg_scaled_8tap_c", "huffcode6", "done.12578", "aac_decode_frame", "dump_extradata", "put_h264_qpel8_mc00_8_c", "huff_b67_cb", "put_h264_qpel8_h_lowpass_14.constprop.21", "phase_filter", "vc1_inv_trans_8x8_c", "put_h264_qpel2_mc22_12_c", "hqx_idct_put", "block_sizes_dv100", "obmc4", "bethsoftvid_decode_frame", "ff_simple_idct_put_8", "ff_put_h264_qpel8_mc11_neon", "ff_mpv_reallocate_putbitbuffer", "cinepak_encode_end", "ff_pcm_s8_planar_decoder", "g722_decode_frame", "put_h264_qpel8_mc33_8_c", "ff_put_pixels16_xy2_arm", "put_h264_qpel8_mc20_12_c", "parse_bs_info", "ff_on2avc_tabs_20_84_4", "mc_subpel", "inter_rvlc", "avg_h264_qpel4_mc21_12_c", "ff_mpeg12_vlc_dc_lum_bits", "encode_hlit", "vp9_default_kf_partition_probs", "vp5_coord_div", "ff_h264qpel_init", "delay.10343", "avg_h264_qpel8_mc30_12_c", "pred4x4_down_right_8_c", "ff_put_no_rnd_pixels16_y2_arm", "srt_color_cb", "put_vc1_mspel_mc33_c", "icc_invq.9528", "dnxhd_1237_ac_flags", "decode_subband_golomb", "ff_cos_64_fixed", "bitalloc_7_codes_a", "huff_b03_cb", "put_hevc_epel_bi_w_hv_8", "init_thread_copy", "__floatsidf", "vp5_ract_lc", "decode_audio_specific_config", "cbpc_b_vlc", "ff_h264_h_loop_filter_chroma_neon", "put_8tap_smooth_64h_c", "aac_sync", "bfu_start_long", "avg_qpel16_mc13_c", "put_vp8_epel16_h6v4_c", "vp7_luma_dc_wht_c", "ff_dca_bit_rates", "xorbittab", "obmc32", "decode_init_thread_copy", "ac64_lut", "vp56_get_vectors_predictors", "mode_11_10", "table.11520", "ccpl_huffbits4", "ff_zero12v_decoder", "set_special_band_scalefactors", "ff_h264_fill_mbaff_ref_list", "dico2_isf", "ff_rv40_h_weak_loop_filter_neon", "biweight_h264_pixels16_12_c", "pred8x8l_dc_9_c", "iadst_iadst_8x8_add_c", "codes3", "ff_snow_alloc_blocks", "silk_model_ltp_scale_index", "h264_h_loop_filter_chroma422_mbaff_intra_9_c", "ff_rdft_calc_neon", "ff_mlp_pack_output_inorder_8ch_0shift_armv6", "alac_decode_init", "dct_sad8x8_c", "ff_on2avc_quad_cb_elems", "ff_vp56_def_mb_types_stats", "pix_abs16_c", "put_qpel8_mc13_c", "pred8x8_vertical_8_c", "un_mv", "ff_sqrt_tab", "done.11997", "evrc_decode_frame", "codec2subblock", "vp7_h_loop_filter8uv_c", "__compound_literal.0", "mode_11_08", "pcm_dvd_decode_uninit", "read_frame_data", "h264_h_loop_filter_chroma_intra_8_c", "ff_ffv1_init_slice_state", "bark_tab_l22_512", "pred8x16_128_dc_10_c", "ff_mpeg4_default_non_intra_matrix", "ff_celt_window2", "coeff_table_token_9", "avg_no_rnd_vc1_chroma_mc8_c", "put_h264_qpel16_mc33_12_c", "huff_tab_sizes", "avg_h264_qpel4_mc23_10_c", "zigzag_scan8x8_cavlc", "table.10624", "read_dcs.constprop.5", "h264_h_loop_filter_chroma_mbaff_intra_8_c", "put_no_rnd_qpel8_mc11_c", "hevc_v_loop_filter_luma_10", "put_h264_qpel2_mc01_9_c", "ff_ivi_inverse_haar_8x8", "pred8x16_horizontal_14_c", "ff_intel_h263_decode_picture_header", "hnm_decode_frame", "ff_eac3_output_frame_header", "done.9343", "inv_predict_5", "ff_put_vc1_mspel_mc12_neon", "init_context_frame", "huff_b75_xlat", "lag_decode_prob", "classic_add_luma", "ff_avg_dirac_pixels8_bilinear_c", "put_h264_qpel2_mc12_9_c", "put_h264_qpel16_mc03_10_c", "inv_max_quant", "tables", "celt_cache_bits", "vp31_dc_scale_factor", "coef0_run", "do_pitchfilter", "default_decorrelation", "vp7_v_loop_filter16_inner_c", "qmf_coeffs", "freq2bark", "ff_vp8_idct_dc_add4uv_armv6", "vp9_col_scan_4x4", "ff_mpv_decode_init", "webvtt_print.constprop.5", "swb_offset_512_24", "rl_vlc_table.12282", "avg_h264_qpel4_mc22_8_c", "atrac3_decode_frame", "ff_adpcm_ima_smjpeg_decoder", "sao_filter_CTB", "vlc_tables", "table.12288", "dirac_decode_flush", "ptype_vlc", "ff_lpc_refl_cb", "put_hevc_qpel_bi_w_h_10", "transform_skip_12", "add_8x8basis_c", "avg_h264_qpel16_mc02_8_c", "avg_h264_qpel16_mc02_14_c", "ff_avg_qpel8_mc13_old_c", "flac_lpc_encode_c_16", "ff_vp56_init", "avg_8tap_sharp_64h_c", "build_vlc.constprop.11", "ff_mdct_fixed_calcw_neon", "coeff_table_token_22", "coeff_abs_level1_ctx.11559", "ff_aac_encode_tns_info", "pred4x4_horizontal_add_14_c", "put_hevc_epel_bi_v_10", "sonic_encode_close", "bits8", "ff_dpx_encoder", "seqvideo_decode_frame", "allocate_tables", "ff_faandct", "mpc8_thres", "mszh_decomp", "put_h264_qpel8_hv_lowpass_neon_top", "y41p_encode_frame", "swb_size_1024_64", "ff_dv_vlc_len", "silk_ltp_filter0_taps", "rl_vlc_table.12272", "sf_rl_vlc", "put_hevc_epel_uni_h_10", "decode_6", "g722_decoder_class", "ff_sin_256", "h261_mba_vlc", "plane8_lut", "ff_ivi_row_haar8", "order_MODE_7k4", "dc_bias", "ff_jpeg2000_set_significance", "yuv4_encode_frame", "ff_aac_pred_sfb_max", "bitalloc_65_codes_e", "put_cavs_qpel8_mc32_c", "avg_cavs_filt8_hv_egpr", "table.10044", "webvtt_tag_replace", "index_table1", "inv_predict_12", "sd.13123", "pred8x8_left_dc_10_c", "ff_cyuv_decoder", "ff_put_vc1_mspel_mc11_neon", "ff_put_h264_qpel16_mc12_neon", "put_h264_qpel2_mc30_12_c", "code_table.9540", "idct_4x4_dc_10", "avg_h264_qpel8_mc30_10_c", "fft_subpackets", "put_rv40_qpel16_mc30_c", "ff_pred8x8_top_dc_neon", "put_bilin_4hv_c", "huff_a46_xlat", "bitalloc_7_codes_c", "classic_shift_chroma", "put_h264_qpel8_mc23_14_c", "codes7", "pred8x16_dc_12_c", "put_h264_qpel8_h_lowpass_l2_neon", "put_h264_qpel2_mc31_10_c", "ff_ulti_decoder", "ff_atrac_gain_compensation", "spatial_compensation_9", "level_map.10171", "mb_type_b_map", "put_hevc_pel_bi_pixels_12", "inter_vlcs", "lsp22", "ff_cos_32768", "chroma_dc_coeff_token_len", "motion_vector", "tgv_decode_init", "ff_init_mpadsp_tabs_float", "pred8x8l_down_left_10_c", "ff_cos_16", "put_h264_qpel8_mc31_10_c", "ff_dca_core_channel_layout", "put_h264_qpel2_h_lowpass_10", "ff_fmt_convert_init_arm", "mjpeg2jpeg_filter", "ff_fc_2pulses_9bits_track2_gray", "nelly_decode_block", "intra_recon_16bpp", "av_sintbl_4_sf", "ff_pbm_decoder", "qpeg_table_w", "avg_qpel8_mc03_c", "qmat0C", "checksum_table", "vb_patterns", "delta_tab_2_7", "silk_model_pitch_contour_nb20ms", "__addsf3", "encode_hclr", "avg_rv40_chroma_mc4_c", "golomb_to_pict_type", "mpc8_bands_codes", "ff_dvd_nav_parser", "ff_h263_loop_filter_strength", "put_symbol", "ff_h264_luma_dc_dequant_idct_10_c", "put_h264_qpel8_mc11_9_c", "ff_eac3_default_spx_band_struct", "amrnb_decode_frame", "init_uni_mpeg4_rl_tab", "pred16x16_left_dc_10_c", "ff_ac3_bit_alloc_calc_bap_armv6", "wmavoice_dq_lsp16i2", "last_coeff", "avg_pixels2_x2_8_c", "estimate_alpha_plane.isra.0", "__compound_literal.1", "mode_22_32", "ff_hevc_put_qpel_h1v2_neon_8", "idct_col_armv5te", "dc_top_8x8_c", "total_zeros_vlc_tables", "put_h264_qpel8_mc30_10_c", "transform_add4x4_8", "put_h264_qpel16_mc12_12_c", "ff_put_vc1_mspel_mc12_16_neon", "vwin512", "silk_model_excitation_sign", "put_cavs_qpel8_mc30_c", "mc_block", "qmat11", "eac3enc_class", "predictor_decode_mono_3930", "coeff_per_sb_for_dequant", "svq3_scan", "avg_h264_qpel16_mc02_12_c", "ff_g722_high_inv_quant", "ff_aac_eld_window_480_fixed", "rgtc1s_block", "bitalloc_33_codes_b", "ff_put_h264_qpel16_mc31_neon", "subband_tab", "pred4x4_128_dc_8_c", "ff_snow_frame_start", "ff_af_queue_init", "slicecontext_init", "delta_tab_1_1_m10", "index_table3", "ff_ac3_bap_bits", "ff_mpeg4_init_partitions", "put_hevc_epel_bi_v_9", "avg_cavs_qpel16_mc22_c", "ff_ea_idct_put_c", "exp2tab", "ff_h264_idct_add16intra_8_c", "put_h264_qpel4_mc32_14_c", "ff_sbr_qmf_post_shuffle_neon", "ff_big_mul", "pred16x16_dc_9_c", "ff_wmav1_encoder", "ff_simple_idct_add_armv5te", "smvjpegdec_class", "__compound_literal.43", "vp3_decode_end", "avg_vc1_mspel_mc12_c", "ff_adpcm_oki_step_table", "avg_h264_qpel4_mc22_10_c", "__aeabi_llsl", "ff_cos_tabs", "ff_mpa_enwindow", "put_8tap_smooth_64hv_c", "mpeg1_encode_block", "ff_dv_quant_shifts", "huff_a47_xlat", "flac_decode_frame", "put_8tap_smooth_32h_c", "rv40_aic_table_index", "ipvideo_decode_block_opcode_0x2", "ff_metasound_mode1110", "encode_rgb_frame", "ff_intrax8_common_init", "ff_check_alignment", "ff_fft_lut_init", "svq1enc_class", "ff_celp_convolve_circ", "dxy.12699", "dss_sp_decode_frame", "put_h264_qpel16_mc13_8_c", "huff_a76_xlat", "avg_h264_chroma_mc2_16_c", "pix_abs16_x2_c", "bfu_start_short", "init_obmc_weight.constprop.10", "coef1_level", "vlc_tab_tone_level_idx_hi2_huffcodes", "biweight_h264_pixels16_10_c", "ff_clean_mpeg4_qscales", "qmat02", "iquant_tbl16", "model256_reset", "put_rv40_qpel8_mc30_c", "h261_parse", "avg_h264_qpel8_mc03_8_c", "put_cavs_filt8_h_hpel", "cplscale2", "vp7_h_loop_filter16_inner_c", "silk_frame_duration_ms", "wavesynth_close", "avg_h264_qpel8_mc10_8_c", "bmv_aud_decode_init", "ff_on2avc_tabs_20_84_1", "mc_block_hpel888", "ff_hqx_decoder", "total_zeros_len", "hls_coding_quadtree", "ff_webvtt_encoder", "lsf_cb5", "tqi_decode_init", "vec4_huffcodes", "ff_aac_swb_size_1024", "delta_tab_2_4_m10", "TAB17", "ff_ac3_encode_init", "dxtory_decode_v2_565", "loop_filter_h_16_16_c", "mv_ref_blk_off.11097", "avg_h264_qpel4_mc01_10_c", "avg_h264_qpel8_v_lowpass_14.constprop.4", "vmdaudio_table", "pred16x16_vertical_add_14_c", "ff_pcm_u24be_decoder", "pred16x16_vertical_12_c", "ac3_bandwidth_tab", "avg4_c", "ff_ac3_lshift_int16_neon", "dnxhd_1250_chroma_weight", "put_h264_qpel2_mc30_10_c", "ff_avg_pixels16_y2_no_rnd_neon", "table.9826", "vble_decode_close", "bitalloc_25_bits_d", "put_h264_qpel4_mc10_12_c", "ff_aac_encoder", "transform_add4x4_10", "cyclTab2", "dnxhd_encode_end", "put_h264_qpel8_mc01_8_c", "avg_qpel8_mc33_c", "read_huffman_tree", "vp3_idct_add_c", "pix_abs8_xy2_c", "put_cavs_qpel8_mc10_c", "dc_127_32x32_c", "insert_datetime", "qp2bits", "vlcs_initialized.10527", "put_hevc_epel_bi_h_9", "put_scaled_smooth_64_c", "audioresample_context_class", "shape16", "ff_opus_parse_extradata", "import_format", "ac_vlc_desc4_syms", "h263_mbtype_b_vlc", "hevc_h_loop_filter_luma_9", "ff_put_vp8_bilin8_hv_armv6", "fft_level_exp_huffcodes", "ff_hevc_sao_type_idx_decode", "idct_32x32_dc_12", "ff_hevc_put_qpel_uw_h3_neon_8", "put_hevc_qpel_uni_w_v_9", "ff_put_dirac_pixels32_bilinear_c", "type_sizes2", "h264_h_loop_filter_chroma422_mbaff_10_c", "table.12385", "huff_a31_cb", "ff_pcm_s16le_planar_decoder", "avg_h264_qpel8_mc02_10_c", "ff_flv_encoder", "ff_thread_init", "vlc_tables.9573", "ff_mlp_pack_output_inorder_6ch_3shift_armv6", "pred8x8_mad_cow_dc_0lt_9", "h264_v_loop_filter_luma_10_c", "vert_left_4x4_c", "ff_aac_apply_tns", "g726_encode_init", "samplerate_table", "dpcm_decode_init", "dnxhd_1250_ac_codes", "uni_DCtab_chrom_bits", "coeff_table_token_10", "avg_h264_qpel4_mc33_8_c", "hevc_h_loop_filter_chroma_12", "ff_ass_split", "huff_a42_xlat", "chroma_adjust", "dht_segment_frag", "put_rv40_qpel8_h_lp_packed_s5_neon", "h261_cbp_vlc", "vmdaudio_decode_init", "pred8x8l_down_right_10_c", "ff_cos_32", "F_tbl32", "ff_dnxhd_get_cid_table", "avg_h264_qpel8_mc13_10_c", "gmc_motion", "avg_h264_qpel16_mc02_9_c", "fft64_neon", "ff_tta_filter_configs", "q1_table.9767", "weight_h264_pixels16_9_c", "wv_mono", "put_hevc_qpel_uni_v_12", "ff_audiodsp_init_arm", "iadst_iadst_4x4_add_c", "bark_tab_l8s_512", "done.9823", "ff_ac3_band_start_tab", "ff_dca_lfe_fir_128", "decode_ppc", "ff_put_pixels8_arm", "dico24_isf", "ff_cos_2048_fixed", "ct_bits.10056", "mv_penalty", "put_h264_qpel16_mc20_14_c", "ff_mpeg1_clean_buffers", "encode_residual_ch", "ff_adpcm_ima_oki_decoder", "ac_vlc_desc5_codes", "ff_ac3_common_init", "avg_bilin_16v_c", "tctable", "put_h264_chroma_mc8_8_c", "tak_decode_frame", "ff_jpegls_init_state", "av_sintbl_3_sf", "get_symbol.constprop.8", "ac_bias_2", "seqvideo_decode_init", "ff_avg_rv40_chroma_mc4_neon", "ff_mpv_common_end", "huffbits7", "ff_dca_lossy_quant_d", "ff_mp3_decoder", "ff_sbr_apply_fixed", "ipvideo_decode_block_opcode_0x9_16", "ff_put_qpel16_mc12_old_c", "table.11494", "dnxhd_1252_ac_codes", "update_context_from_thread", "decode_b", "decode_macroblock", "delta_tab_1_2_m10", "put_qpel16_mc31_c", "chroma422_dc_total_zeros_len", "vorbis_encode_init", "ff_jpeg_fdct_islow_10", "alac_stereo_decorrelation", "vc1_decode_p_mb_intfr", "binkb_inter_seed", "dv_encode_video_segment", "decode_dsw1", "ff_mpeg_ref_picture", "lpc_refl_cb1", "put_no_rnd_qpel16_mc21_c", "put_h264_qpel2_mc11_8_c", "ff_dca_scale_factor_quant6", "swb_offset_512_32", "ff_vc1_icbpcy_p_bits", "decode_mb_p", "fft16384", "put_no_rnd_qpel8_mc31_c", "svq1_intra_codebook_8x4", "dc_129_4x4_c", "ff_h263_aspect_to_info", "ff_dca_exss_parse_header", "biweight_h264_pixels8_12_c", "jpeg2000_decode_tile", "weight_dirac_pixels16_c", "ass_encode_frame", "pred_angular_0_10", "a64multi_close_encoder", "ff_srt_encoder", "tone_vlc_tabs", "cb0808m1", "mantissa_vlc_tab", "ff_pcm_f64be_decoder", "atrac3p_sf_huff_xlat2", "v2_mb_type_vlc", "t_huffman_env_1_5dB_codes", "zero_cmp", "qsort_comparison_function_int16", "ff_dump_extradata_bsf", "pred4x4_vertical_9_c", "pred4x4_down_left_8_c", "pred8x16_top_dc_14_c", "get_cabac_bypass", "channel_reorder_unknown", "mpeg1_level", "scales_bits", "put_no_rnd_qpel8_mc22_c", "ff_avg_h264_qpel16_mc01_neon", "ff_acelp_lspd2lpc", "tta_encode_frame", "vlc_tab_run_huffcodes", "classic_shift_luma", "ff_set_min_dist_lsf", "ff_eval_coefs", "ff_emulated_edge_mc_16", "avg_8tap_smooth_16v_c", "delta_tab_3_4_m10", "G726Tables_pool", "qmat4B", "ff_text2movsub_bsf", "mpa_huffbits_5", "mpeg2_class", "ff_hevc_rem_intra_luma_pred_mode_decode", "table0_mv_bits", "ff_rv40_decoder", "initialized.9130", "y41p_encode_init", "intra_rvlc", "put_h264_qpel4_mc21_8_c", "huff_a34_xlat", "ff_eightsvx_exp_decoder", "put_h264_qpel2_mc23_9_c", "decode_hclr", "spatial_compensation_2", "mpeg4_decode_sprite_trajectory", "put_h264_qpel4_mc01_9_c", "pred8x16_mad_cow_dc_l00_8", "t_huffman_env_3_0dB_codes", "wmavoice_lsp10_intercoeff_b", "adpcm_compress_trellis", "h264_h_loop_filter_chroma_mbaff_14_c", "avg_pixels16_x2_8_c", "put_mspel8_mc32_c", "ff_avg_h264_qpel16_mc00_neon", "ff_rtjpeg_decode_init", "done.12270", "size_table", "h264_h_loop_filter_luma_intra_14_c", "table.12390", "avg_pixels4_y2_8_c", "g_40", "decode_qlogs", "diag_downleft_4x4_c", "x8_dc_highquant_table", "ff_vc1_mv_diff_bits", "bitalloc_33_codes_d", "cb_to_level", "ac_vlc_desc4_codes", "ff_b60_sinc", "put_h264_qpel2_mc31_9_c", "avg_h264_qpel4_mc32_12_c", "ac_vlc_descA_codes", "ff_vp8_h_loop_filter8uv_inner_armv6", "sort_mono", "fft64_vfp", "pred8x16_128_dc_8_c", "put_h264_qpel16_mc23_8_c", "ff_bmv_audio_decoder", "fast_specs", "put_pixels8_x2_8_c", "ff_vc1_ttblk_vlc", "silk_model_stereo_s1", "avg_scaled_regular_16_c", "ff_adpcm_dtk_decoder", "chroma_4mv_motion", "fft256_vfp", "dnxhd_1235_dc_codes", "decode_coeffs_b32_16bpp.constprop.15", "ff_cavs_mv", "atrac3p_huff_numwavs2_xlat", "ff_frwu_decoder", "j_dc_vlc", "on2avc_swb_start_long", "on2avc_decode_subframe", "sao_band_filter_10", "ff_sine_256_fixed", "avg_rv30_tpel16_mc21_c", "put_tpel_pixels_mc21_c", "put_h264_qpel16_mc12", "table.11495", "pred8x16_horizontal_10_c", "avg_h264_qpel16_mc11_8_c", "put_vc1_mspel_mc23_c", "ff_pcm_s32le_planar_decoder", "decode_postinit", "put_h264_qpel16_mc13_14_c", "ff_xface_probranges_2x2", "vp7_pred4x4_mode", "ff_mpeg4_intra_vlc", "vert_right_4x4_c", "dirac_decode_end", "ff_h264dsp_init", "put_hevc_qpel_bi_hv_10", "evrc_lspq_quant_codebook2", "compute_svector", "ff_mts2_decoder", "tmode_vlc_bits", "put_rv30_tpel16_mc20_c", "dnxhd_1252_ac_bits", "bitalloc_129_codes_b", "put_hevc_epel_bi_w_h_10", "ff_avg_dirac_pixels32_l4_c", "wl_vlc_tabs", "ljpeg_encode_frame", "pred4x4_vertical_left_10_c", "adpcm_encode_close", "pred4x4_dc_14_c", "put_symbol.constprop.15", "ff_int32_to_float_fmul_scalar_neon", "order_MODE_19k85", "ydt2", "ff_on2avc_quad_cb_bits", "huff_a31_xlat", "intra_pred_horiz", "bitalloc_65_codes_c", "ff_sbr_hf_apply_noise_2_neon", "atrac3p_sf_huff_xlat4", "mpa_huffbits_2", "ff_find_unused_picture", "put_hevc_pel_uni_pixels_9", "put_h264_qpel4_mc30_14_c", "mimic_decode_frame", "put_h264_qpel4_mc21_14_c", "bark_tab_s8_64", "table.11499", "ff_put_vp8_bilin4_v_armv6", "put_rv40_qpel8_h_lowpass_neon", "mpc8_q5_codes", "vp6_decode_init", "ff_init_scantable", "ac3_bit_alloc_calc_bap_c", "pred_planar_1_9", "flic_decode_end", "ff_truemotion1_decoder", "ff_xsub_encoder", "wma_decode_init", "put_rv40_qpel8_mc12_c", "huff_a43_cb", "mpc8_q6_bits", "ff_set_mpeg4_time", "ff_put_dirac_pixels8_l4_c", "qmat00", "mpc7_decode_flush", "put_8tap_regular_16hv_c", "aic_mode2_table.12160", "done.12153", "subband_transform", "h264_v_loop_filter_luma_intra_10_c", "h263_decode_gob_header", "idct_col_put_armv6", "ff_vbv_update", "decode_packet", "aic_mode2_vlc_bits", "fcb8m", "cb1110s0", "tscc2_nc_vlc_bits", "ff_scale_mv_ref", "convert_color", "ff_init_ff_sine_windows", "put_h264_qpel4_mc32_9_c", "put_h264_qpel4_mc10_10_c", "ac_bias_1", "avg_vc1_mspel_mc10_c", "ff_h264_idct_add8_422_8_c", "order_MODE_14k25", "intra_pred_4_8", "quant_snr", "ac_vlc_desc6_codes", "ff_aac_coders", "huff_b02_cb", "put_pixels8_8_c", "ff_h263_show_pict_info", "ff_hevc_put_qpel_uw_pixels_w64_neon_8", "ff_msmpeg4_code012", "mss3_decode_init", "dirac_get_se_golomb", "ff_avg_dirac_pixels8_l4_c", "svq3_pred_1", "huff_a15_cb", "flush_put_bits.part.3", "ff_v410_decoder", "bark_tab_m22_256", "pred8x16_mad_cow_dc_l0t_9", "vp7_decode_block_coeffs_internal", "f_huffman_env_bal_1_5dB_codes", "wmavoice_mean_lsf10", "intra_pred_angle.12419", "h264_h_loop_filter_chroma_12_c", "ff_vp8_h_loop_filter8uv_armv6", "avg_cavs_qpel16_mc03_c", "dirac_color_presets", "ff_mpeg_draw_horiz_band", "coef5_huffbits", "ff_adpcm_4xm_decoder", "ff_put_vc1_mspel_mc13_neon", "avg_h264_qpel8_mc00_10_c", "ff_webp_decoder", "pred8x8_horizontal_add_10_c", "ff_rl_free", "dv_iweight_248", "ff_h261_cbp_tab", "mpa_huffcodes_12", "ff_avg_rv40_qpel16_mc32_neon", "ff_mjpeg_find_marker", "levels4", "butterworth_init_coeffs.isra.0", "ff_wma_hgain_huffbits", "ff_ayuv_encoder", "ff_alternate_horizontal_scan", "quantize_and_encode_band_cost_arr", "ff_nellymoser_encoder", "imc_cb_select", "bitalloc_33_codes_c", "delta_tab_2_1", "silk_model_pulse_location", "ff_clean_intra_table_entries", "weight_dirac_pixels32_c", "ff_ac3_extract_exponents_neon", "avg_h264_qpel8_mc31_14_c", "avg_h264_qpel8_mc22_14_c", "dxt1_block", "mpeg4_decode_partitioned_mb", "alac_decode_close", "ff_h263_inter_MCBPC_code", "ff_mqc_encode", "rv40_v_loop_filter_strength", "ff_vc1_intfr_non4mv_mbmode_codes", "ff_h264_idct_add16_neon", "tscc2_dc_vlc_bits", "ff_rawvideo_decoder", "flush_dpb", "ff_mpeg12_vlc_dc_chroma_bits", "set_mv_strides", "modulo_three_table", "coef2_huffbits", "ff_vp8_h_loop_filter8uv_inner_neon", "put_h264_qpel8_hv_lowpass_14.constprop.15", "aac_cb_range", "put_rac.constprop.6", "tm_32x32_c", "fcb16sl", "hqx_decode_frame", "mpc8_dscf1_codes", "vp9_default_scan_32x32_nb", "ff_vp56_b2p", "__compound_literal.32", "ff_hpeldsp_init_neon", "swb_offset_128_96", "ff_vc1_intfr_non4mv_mbmode_bits", "biweight_h264_pixels16_8_c", "ff_pcm_s16le_encoder", "mss2_gray_fill_masked_c", "ps_hybrid_analysis_ileave_c", "avg_cavs_qpel8_mc30_c", "svq3_mc_dir", "put_bilin_64h_c", "index1.9365", "dnxhd_1237_ac_codes", "g_20", "seq_unpack_rle_block.constprop.4", "x8_ac1_highquant_table", "svq3_mc_dir.constprop.6", "ccpl_huffcodes3", "ff_msmpeg4_encode_init", "celt_postfilter_apply_transition", "eac3_blocks", "aac_decode_frame_int", "avg_rv40_qpel8_mc33_c", "put_h264_qpel16_mc22_10_c", "qcelp_rate_quarter_bitmap", "rv_dc_lum", "ff_sine_128_fixed", "ff_cook_parser", "dxn3dc_block", "dnxhd_decode_dct_block_10", "cvh_huffbits3", "dirac_preset_aspect_ratios", "put_hevc_epel_uni_w_v_8", "vp6_decode_free", "ff_jpeg2000_xorbit_lut", "levels3", "ff_adpcm_g722_decoder", "quant_tbl24", "put_8tap_regular_4h_c", "synth_percept_filter", "ff_mpeg4_c_dc_scale_table", "pred16x16_128_dc_12_c", "ff_cb2_base", "ff_put_pixels16_x2_no_rnd_neon", "avg_h264_qpel16_mc21_9_c", "ff_mjpeg_decode_dht", "vector_clipf_c", "put_h264_qpel8_mc11_10_c", "ff_hevc_ref_idx_lx_decode", "ff_ac3_log_add_tab", "bitalloc_25_codes_b", "iquant_tbl40", "ff_sine_512_fixed", "ff_adx_decode_header", "pred8x16_vertical_add_12_c", "vq_hebap1", "symbol_to_vec4", "init_coef_vlc", "defaults", "table.12386", "ff_ac3dsp_init", "inv_non_linear_qscale", "ff_ps_read_data", "ff_rv20_encode_picture_header", "rv10_decode_init", "gain_cb_16k", "hap_decode", "ff_hap_decoder", "vd_tab", "v210dec_options", "psy_3gpp_analyze_channel", "ff_mlp_pack_output_inorder_8ch_5shift_armv6", "ff_iac_decoder", "ff_mpv_idct_init", "horizontal_compose_haar1i", "pulses_nb_per_mode_tr", "pred8x16_mad_cow_dc_0lt_9", "ff_aac_eld_window_512_fixed", "avcodec_options", "__compound_literal.34", "avg_rv40_qpel8_v_lowpass.constprop.9", "h264_h_loop_filter_luma_intra_9_c", "ff_hevc_diag_scan8x8_x", "ff_xvid_idct", "ff_mdct_init_fixed", "adpcm_decode_frame", "denoise_dct_c", "put_hevc_pel_uni_w_pixels_8", "ff_dca_decoder", "atrac3p_ct_huff_code2", "ff_pcm_u8_decoder", "ff_imdct_half_c_fixed_32", "avdct_options", "ac_bias_3", "bwlog_tab.12601", "huff_b07_cb", "coef0_level", "ff_sbr_noise_table_fixed", "dnxhd_1242_chroma_weight", "ff_avg_qpel8_mc33_old_c", "dv_quant_areas.10065", "ff_ffv1_common_init", "ff_prores_dc_codebook", "table.11518", "rv34_decoder_alloc", "read_sbr_grid.isra.14", "ac_vlc_desc9_syms", "vsad8_c", "ff_aac_kbd_long_1024_fixed", "dnxhd_1237_dc_bits", "put_symbol.constprop.3", "weight_h264_pixels8_8_c", "cvh_huffbits0", "avg_vc1_mspel_mc22_c", "intra_pred_lp", "CSWTCH.51", "ff_indeo2_decoder", "ir_filter_mid", "bitalloc_33_codes_a", "idct_4x4_9", "biweight_h264_pixels4_10_c", "pred_angular_2_12", "pred8x16_mad_cow_dc_l0t_10", "ff_clean_h263_qscales", "ivi_mb_huff_desc", "pred8x8_horizontal_add_12_c", "table.11517", "pnm_get.isra.1.constprop.2", "slen_table", "ff_mjpegb_decoder", "table.11497", "pred8x16_plane_14_c", "silk_lsf_weight_sel_wb", "atrac3p_huff_wav_ampsf2_cb", "roq_encode_end", "put_h264_qpel16_mc00_8_c", "rl_vlc_table.12360", "sao_edge_restore_1_10", "ls_encode_line.constprop.5", "ff_intrax8_decode_picture", "mpeg2_hwaccel_pixfmt_list_420", "ff_on2avc_tab_20_2", "ff_vc1_loop_filter_iblk", "v410_decode_frame", "TAB35", "avg_rv40_qpel16_mc30_c", "ac3_rshift_int32_c", "raw_decode", "huff_b42_xlat", "dnxhd_1251_luma_weight", "ff_h264_chroma_dc_dequant_idct_12_c", "ff_aac_parser", "huff_a66_cb", "pred8x8_mad_cow_dc_l00_8", "vmdvideo_decode_init", "vp9_subpel_filters", "ff_ac3_slow_gain_tab", "vp8_v_loop_filter16_inner_c", "pred8x8l_down_right_14_c", "sad_hpel_motion_search", "NR_IPDOPD_BANDS", "ff_xface_probranges_per_level", "ff_mlp_init_crc", "put_rv40_qpel8_mc21_c", "ac3_decode_init", "ff_fdctdsp_init", "pred4x4_vertical_10_c", "delta_tab_2_6_m10", "evrc_lspq_full_codebook3", "p_sub_mb_type_info", "ff_eightbps_decoder", "put_vp8_bilinear8_v_c", "unpack_yuv", "dvvideo_decode_init", "qmat12", "pred16x16_vertical_add_12_c", "ptype_vlc_codes", "avg_h264_qpel8_mc23_12_c", "ff_put_vc1_mspel_mc30_16_neon", "ff_prores_decoder", "ff_idcin_decoder", "decode_sb", "atrac1_decode_init", "ac0_lut", "ff_pcx_decoder", "ff_put_vc1_mspel_mc03_neon", "sami_decode_frame", "decode_cabac_mb_mvd", "ff_vp56_free_context", "mpa_huffbits_6", "shorten_decode_close", "ff_tiff_gcse_type_codes", "search_for_quantizers_faac", "sort_stereo", "quantize_and_encode_band_cost_NOISE", "hilbert_offset", "idct_row4_pld_neon", "decode_coeff", "write_streaminfo", "flac_decorrelate_indep_c_32p", "avg_qpel8_mc11_c", "wmavoice_energy_table", "avg_mpeg4_qpel8_v_lowpass.constprop.3", "ff_init_cabac_encoder", "pred8x8_dc_14_c", "put_h264_qpel8_mc32_14_c", "ff_dca_lfe_fir1_neon", "ff_rv30_decoder", "h261_decode_init", "ff_mpa_synth_init_float", "aic_c_ext_scan", "pred8x8l_horizontal_add_9_c", "encode_q_branch2.constprop.12", "vp6_pdv_pct", "specs_per_bfu", "ff_adpcm_AdaptCoeff1", "vp9_default_scan_16x16_nb", "mc_colors", "ff_indeo5_decoder", "put_hevc_epel_uni_hv_8", "ff_on2avc_pair_cb_codes", "table.10156", "put_h264_qpel4_h_lowpass_10", "srt_decode_frame", "decode_vui", "parse_ptl", "ac_vlc_desc3_codes", "ff_vp56_pva_tree", "rv40_decode_init", "ff_put_vp8_epel8_h6v4_neon", "fic_decode_frame", "ff_imdct_calc_c_fixed_32", "order_MODE_6k60", "ff_rl2_decoder", "umv_fcode_tab", "vsad16_c", "q9up_vlc", "ff_ptx_decoder", "bitalloc_12_bits", "put_qpel8_mc30_c", "evrc_lspq_full_codebooks_row_sizes", "avg_h264_qpel8_mc22_10_c", "ff_fetch_timestamp", "vp7_idct_dc_add_c", "ff_idctdsp_init_arm", "vp8_dct_cat4_prob", "av_first_parser", "dirac_unpack_block_motion_data", "h264_h_loop_filter_chroma_mbaff_intra_12_c", "cbf.12558", "put_h264_qpel4_mc12_14_c", "mxpeg_decode_init", "bitalloc_13_codes_b", "idct_iadst_4x4_add_c", "vqa_decode_end", "lsf_cb4_16k", "ff_vorbis_parser", "idct_iadst_16x16_add_c", "ir2_vlc", "ccpl_huffcodes2", "rv34_inv_transform_noround_c", "ff_mb_type_b_tab", "huff_a55_xlat", "truespeech_decode_init", "ff_frame_thread_encoder_free", "pred_planar_3_9", "ff_vc1_adv_interlaced_8x4_zz", "uni_h263_inter_rl_len", "qmat08", "coef_vlcs", "get_qcd", "fft2048", "cb_ma_predictor_sum", "coef4_huffbits", "init_uni_h263_rl_tab.constprop.8", "dequant_shift", "avg_pixels8_l2_9", "dico22_isf_36b", "ff_avg_h264_chroma_mc4_neon", "rv30_loop_filt_lim", "ff_alac_channel_layout_offsets", "ff_vc1_mv_pmode_table2", "ff_aac_encode_main_pred", "pred8x8l_vertical_right_12_c", "heap_sift.constprop.0", "wavpack_decode_frame", "decorr_filter_sizes", "put_qpel8_mc02_c", "twiddle.constprop.10", "swb_offset_1024_48", "ff_vp56_init_range_decoder", "ff_mpc7_decoder", "uni_h263_intra_aic_rl_len", "put_rv40_qpel16_mc10_c", "put_vp8_epel8_h4v4_c", "put_cavs_qpel16_mc13_c", "put_cavs_qpel16_mc22_c", "table2_run", "put_cavs_qpel16_mc20_c", "ff_tak_decoder", "ff_avg_h264_qpel8_mc20_neon", "biweight_h264_pixels2_9_c", "dnxhd_10bit_dct_quantize", "transform_add32x32_8", "coeff_token_vlc", "huff_iid_df0_codes", "table.9748", "bl_put_bilin_v_armv6", "yuv4_encode_close", "h264_decode_frame", "g722_apply_qmf", "ff_targa_y216_decoder", "avformat_mutex", "ff_sine_32", "decode_uncompressed", "coef4_huffcodes", "ff_me_cmp_init_static", "set_default_channel_config", "avg_h264_qpel16_mc33_14_c", "get_cabac", "exp2a", "h263_v_loop_filter_c", "ff_flac_is_extradata_valid", "num_coded_units.isra.5", "pow_tab", "dnxhd_1251_ac_codes", "levels1", "ff_kbd_window_init_fixed", "f34_0_12", "ff_wmv2_decode_secondary_picture_header", "pred4x4_vertical_12_c", "ts_order2_coeffs", "qcelp_rate_octave_bitmap", "ff_side_data_update_matrix_encoding", "table.11751", "mpc8_q4_bits", "ff_set_sar", "ff_put_no_rnd_qpel8_mc32_old_c", "mpeg4enc_class", "ccitt_codes_lens", "pred8x16_vertical_add_14_c", "on2avc_cb1_syms", "ts_cb_5", "mpeg4_class", "pred8x8l_horizontal_add_8_c", "huff_b73_xlat", "get_che", "ff_copy_and_dup", "huff_iid_df1_codes", "cb1110m1", "avg_tpel_pixels_mc01_c", "msmpeg4v12_decode_mb", "mc_block_hpel0016", "ff_wmav2_decoder", "add_hfyu_left_pred_int16_c", "gif_class", "celt_log_freq_range", "sprite_trajectory", "idct_4x4_dc_9", "put_rv40_qpel8_mc10_c", "SIZE_GROUP2", "fic_draw_cursor", "imlt_gain", "ff_aac_swb_size_128_len", "put_h264_qpel16_mc01_9_c", "order_MODE_12k65", "ff_startcode_find_candidate_armv6", "avg_qpel8_mc20_c", "ff_binkaudio_rdft_decoder", "pred4x4_down_right_12_c", "ff_cavs_modify_mb_i", "mpc7_idx32", "ff_crop_tab", "wavpack_encode_init", "pred16x16_left_dc_12_c", "ff_pred16x16_left_dc_neon", "lpc_refl_cb8", "gamma_lookup", "encode_422_bitstream", "cb2224ss1", "ff_thread_ref_frame", "syn_window", "ff_qtrle_decoder", "silk_model_gain_delta", "ff_put_rv40_qpel8_mc23_neon", "wmavoice_dq_lsp16r2", "y41p_decode_frame", "put_vp8_epel16_v6_c", "ff_put_rv40_chroma_mc8_neon", "hq_tab_15", "qmat2D", "hqx_quants", "ff_put_h264_qpel16_mc32_neon", "tiff_end", "ff_mlp_pack_output_inorder_2ch_2shift_armv6", "put_h264_qpel16_mc11_9_c", "pred_angular_0_8", "ff_fc_4pulses_8bits_track_4", "ff_flac_get_max_frame_size", "order_MODE_23k05", "ff_h261_common_init", "ff_adpcm_ea_decoder", "pred4x4_127_dc_12_c", "ff_aac_spectral_sizes", "gmc1_c", "zero12v_decode_frame", "huff_b05_cb", "ff_mpeg_update_thread_context", "codebook19", "ff_put_pixels8_y2_no_rnd_armv6", "spectral_to_sample.isra.19", "ff_ivi_mc_8x8_no_delta", "decode_exponents", "avg_tpel_pixels_mc10_c", "vp6_edge_filter_ver", "avg_h264_qpel4_mc22_14_c", "on2avc_cb7_syms", "ff_pred8x8_vert_neon", "pred_angular_1_8", "ff_hevc_luma_mv_mvp_mode", "ff_tadd_shorts_metadata", "g726_decode_flush", "ff_imc_decoder", "pred8x16_mad_cow_dc_0l0_12", "pred8x16_top_dc_8_c", "g726_reset", "wavpack_decode_init", "dirac_parse_close", "ff_init_ff_cos_tabs", "ff_put_rv40_qpel8_mc30_neon", "vert_right_16x16_c", "hevc_h_loop_filter_luma_12", "highpass_zeros", "flac_lpc_32_c", "ff_mjpeg_decode_sof", "fragment_run_length_vlc_table", "vertical_compose_haar", "vp5_parse_coeff", "ff_avg_qpel16_mc11_old_c", "qcelp_rate_full_codebook", "pred16x16_tm_vp8_c", "ff_jpeg2000_tag_tree_init", "put_hevc_qpel_bi_h_12", "initialized_tables.9975", "put_h264_qpel8_hv_lowpass_12", "mpc8_q4_syms", "ff_hevc_transform_add_16x16_neon_8", "j_rev_dct_arm_put", "exponent_group_tab", "vp3_decode_flush", "h263_h_loop_filter_c", "ff_put_pixels8_xy2_no_rnd_neon", "dynamic_range_tab", "ff_avg_h264_qpel8_mc03_neon", "pred8x8_mad_cow_dc_0l0_8", "pix_abs8_c", "entropy_decode_mono_3860", "pred_planar_2_10", "avg_h264_qpel8_mc21", "mpeg_field_start", "ff_get_best_fcode", "avg_8tap_smooth_32h_c", "ff_aac_kbd_short_128", "pred4x4_left_dc_8_c", "__compound_literal.2", "put_bits.constprop.3", "pred8x8_mad_cow_dc_0lt_12", "put_bilin_1d_v_c", "add_obmc32_c", "put_h264_qpel2_mc20_12_c", "fft32", "avg_h264_qpel4_mc13_14_c", "ff_init_cabac_states", "pred8x16_mad_cow_dc_0lt_8", "wv_get_value", "ff_subviewer_decoder", "ff_put_rv40_qpel8_mc22_neon", "rv30_itype_code", "transform_add8x8_10", "pred8x8_tm_vp8_c", "mov_text_decode_frame", "ff_cos_256", "txd_decode_frame", "acb_excitation", "sao_edge_restore_0_12", "ff_mba_max", "ff_put_h264_qpel8_mc33_neon", "pnm_parse", "avg_h264_qpel4_mc20_14_c", "avg_8tap_sharp_16hv_c", "huff_ipd_df_bits", "pred8x8l_dc_14_c", "silk_ltp_filter1_taps", "ff_acelp_filter_init", "put_rv30_tpel8_mc22_c", "get_poc", "generate_joint_tables", "avg_scaled_bilin_32_c", "ff_ivi_mc_4x4_delta", "huff_icc_dt_codes", "v308_encode_init", "bark_tab_l8_512", "ff_mpeg2_dc_scale_table", "pred_planar_3_8", "hevc_v_loop_filter_luma_12", "v210_planar_pack_10_c", "ff_adpcm_ima_dk3_decoder", "SIZE_GROUP1", "ulti_decode_end", "index_table6", "ff_vorbis_encoding_channel_layout_offsets", "jpeg2000_init_static_data", "vc1_decode_ac_coeff", "put_scaled_bilin_c.constprop.15", "inv_map_table.10889", "decode_lpc", "ff_cavs_inter", "idct_32x32_12", "put_h264_qpel8_mc12_10_c", "mpc8_res_codes", "vp5_parse_vector_adjustment", "avg_h264_qpel4_mc31_12_c", "put_hevc_qpel_v_10", "put_scaled_bilin_16_c", "ff_microdvd_decoder", "avg_pixels8_l2_12", "ff_rv34_decode_frame", "ff_vc1_pred_b_mv_intfi", "apcm_bits", "ff_vp5_decoder", "put_no_rnd_pixels16_xy2_8_c", "avg_8tap_sharp_64v_c", "put_hevc_pel_uni_w_pixels_12", "huff_a33_cb", "vorbis_parse_id_hdr", "ff_roq_dpcm_decoder", "ff_avg_rv40_qpel16_mc10_neon", "encode_frame", "pred_planar_0_12", "get_bits_long.constprop.8", "put_qpel8_mc22_c", "mpa_pretab", "ff_mdct_calc_neon", "vp8_pred16x16_tree_inter", "table.9746", "xwd_encode_frame", "ff_hevc_no_residual_syntax_flag_decode", "ff_dirac_prob", "ff_ac3_compute_coupling_strategy", "pred4x4_down_right_14_c", "huff_a02_xlat", "table.10154", "pred8x8_127_dc_14_c", "ff_get_buffer", "ccitt_syms", "rac_get_model_sym", "golomb_to_intra4x4_cbp_gray", "put_vp8_bilinear4_h_c", "tm_4x4_c", "rv40_dither_l", "ff_iir_filter", "ff_h263_update_motion_val", "put_h264_qpel16_mc20_10_c", "biweight_h264_pixels4_8_c", "put_bilin_8v_c", "delta_tab_2_2", "num_mvs", "ydt1", "btype_table.12162", "pred8x16_vertical_add_8_c", "put_rv40_qpel8_h_lowpass.constprop.21", "h263_decode_dquant", "put_8tap_sharp_64v_c", "await_references", "ff_put_rv40_qpel16_mc21_neon", "vq_hebap6", "pred8x8l_horizontal_down_14_c", "ff_atrac3p_qu_to_spec_pos", "ff_snow_common_end", "ff_put_vp8_epel8_h4v6_neon", "put_huffman_table", "hevc_v_loop_filter_chroma_9", "out_hi_head", "idct_row4_neon", "uni_mpeg4_intra_rl_bits", "pred8x8_horizontal_8_c", "cb0806ss1", "avg_h264_qpel16_mc21_10_c", "ff_amv_encoder", "ff_rl_mpeg1", "store_huffman_tables", "table.11999", "put_h264_qpel8_mc13_8_c", "rv40_aic_top_vlc_bits", "cb0808sl1", "ivi_mc_4x4_delta.constprop.0", "hevc_decoder_class", "dca_lfe_fir", "sao_band_filter_12", "mpc8_dscf0_bits", "ff_int32_to_float_fmul_scalar_vfp", "ff_tns_max_bands_128", "__aeabi_ul2f", "hap_close", "q1_vlc", "ff_ac3_output_frame", "horizontal_compose_haar0i", "ff_lag_rac_init", "fft8192_vfp", "filter_channel", "get_se_golomb", "put_vc1_mspel_mc22_c", "huff_quad_vlc", "vqa_decode_init", "DEFINED_SHIFT", "quant_offsets", "put_h264_qpel2_mc02_9_c", "ff_imdct_calc_c_fixed", "sf_bits.10061", "rl_vlc_table.12350", "inverse_quant", "ass_split", "put_8tap_sharp_16h_c", "dc_left_32x32_c", "loco_decode_plane.isra.4.constprop.6", "__compound_literal.10", "ff_put_vp8_bilin4_h_neon", "pcm_bluray_decode_frame", "ff_vp3_idct_put_neon", "ff_ivi_row_slant4", "tab.10246", "ccpl_huffbits6", "ac3_fixed_encode_init", "put_hevc_qpel_bi_v_12", "huff_icc_dt_bits", "ff_dct32_float", "dirac_decode_data_unit", "ff_mdct_calc_c_fixed_32", "pixctx_init", "mpeg4_unpack_bframes_filter", "decode_mb", "bitalloc_25_codes_e", "dca_table.10531", "ff_ass_encoder", "svq3_get_ue_golomb", "qdm2_decode_init", "avg_pixels16_xy2_8_c", "mace_decode_frame", "put_no_rnd_qpel8_mc21_c", "convert_int", "on2avc_cb10_bits", "pred4x4_horizontal_vp8_c", "ff_vp56_pc_tree", "ff_msmp4_dc_chroma_vlc", "ff_rvlc_rl_intra", "limgain.10521", "ff_sbr_noise_table", "put_hevc_epel_bi_hv_8", "cng_decode_flush", "costbl_8", "ff_adpcm_step_table", "mpeg1_chr_dc_uni", "mpc8_decode_frame", "put_h264_qpel8_mc01_12_c", "metasound_decode_init", "ff_hevc_put_qpel_uw_v1_neon_8", "avg_scaled_regular_64_c", "avg_scaled_smooth_8_c", "MPA_encode_frame", "dnxhd_decode_frame", "ff_atrac3p_init_imdct", "compute_default_clut", "ff_h264_idct_dc_add_neon", "sunrast_encode_frame", "weakfilter_3", "ff_put_pixels8_neon", "mvc_decode_end", "ff_hevc_hls_filter", "__compound_literal.33", "pred8x8l_dc_10_c", "rv40_weight_func_nornd_16", "lsp_band0", "ff_ac3_bit_alloc_calc_psd", "var_diamond_search", "upsample_fir", "pred4x4_horizontal_up_8_c", "table1_vlc", "bitalloc_17_codes_g", "h261_class", "dv_iweight_720_y", "check_header_mismatch", "ff_hevc_put_qpel_uw_v3_neon_8", "codebook5", "avui_decode_init", "__compound_literal.28", "ff_jref_idct4_add", "hq_tab_14", "ff_put_qpel16_mc33_old_c", "apply_tns", "put_h264_qpel8_hv_lowpass_l2_neon", "pred8x8_128_dc_14_c", "lfe_fir_64i", "ff_cos_tabs_fixed", "decode_ics.constprop.18", "bark_tab_m16s_512", "vlc_tab_fft_tone_offset_0_huffbits", "ff_hevc_transform_add_32x32_neon_8", "delta_tab_2_5_m10", "avg_rv40_qpel8_v_lowpass_neon", "remove_extradata", "channels.9619", "avg_qpel16_mc03_c", "transform_add32x32_9", "ff_aac_scalefactor_code", "avg_h264_qpel8_mc21_8_c", "decorrelate", "spatial_compensation_11", "diag_scan2x2_x", "put_h264_qpel16_mc02_12_c", "get_pixels_8_c", "channel_layouts.9618", "inverse_predict", "rl_vlc_table.12277", "x8_setup_spatial_compensation", "mpc8_q1_codes", "ff_hevc_put_pixels_w24_neon_8", "h264_h_loop_filter_chroma_mbaff_intra_9_c", "avg_cavs_filt8_h_qpel_l", "fc", "hevc_decode_frame", "ff_ssa_encoder", "put_h264_qpel8_v_lowpass_14.constprop.18", "res_vlc", "ff_svq1_inter_mean_vlc", "opus_parse", "ff_dca_parser", "v2_dc_lum_vlc", "put_h264_qpel8_v_lowpass_8", "ff_mpegvideoencdsp_init_arm", "ac_vlc_desc8_bits", "ra288_decode_frame", "scale_rl_run", "quantize.constprop.14", "put_h264_chroma_mc2_16_c", "put_8tap_sharp_16v_c", "ff_ac3_encoder", "aac_channel_layout", "ff_vp56_pmbtm_tree", "$a", "ff_celt_free", "quantize_and_encode_band_cost_SQUAD", "ff_ac3_float_encode_init", "huff_b66_xlat", "gsm_init", "h261_tcoeff_vlc", "put_8tap_sharp_32v_c", "idct_idct_32x32_add_c", "ff_h264_free_context", "table.11987", "h264_mp4toannexb_filter", "aac_chan_maps", "fill_tone_level_array", "shape16s", "ff_h264_idct_add8_422_14_c", "atrac3p_huff_gain_loc4_xlat", "cyuv_decode_init", "vwin1024", "ivi4_alternate_scan_8x8", "ff_subrip_encoder", "h264_v_loop_filter_chroma_8_c", "put_h264_qpel16_mc00_14_c", "pred4x4_vertical_left_12_c", "run_vlc_tables", "v408_encode_close", "intra_pred_lp_left", "ff_adpcm_ima_ws_decoder", "cvh_huffbits4", "pred8x8l_vertical_right_8_c", "ff_pcm_alaw_decoder", "ff_silk_init", "yop_decode_frame", "avg_h264_qpel16_mc01_14_c", "tscc2_nc_vlc_codes", "ff_vc1_ttmb_codes", "pred4x4_horizontal_8_c", "lsf_codebooks", "hq_tab_09", "unsupported", "ac3_lshift_int16_c", "decode_subframe", "free_context_frame", "webp_decode_frame", "rv_dc_chrom", "srt_end_cb", "put_h264_qpel2_mc31_12_c", "ff_ass_add_rect_bprint", "ac_vlc_desc6_bits", "avg_8tap_sharp_8v_c", "decode_gray_bitstream", "atrac3p_qu_to_subband", "dmix_table.9950", "huff_a21_xlat", "put_hevc_epel_bi_hv_12", "ath.constprop.5", "vlc_tab_tone_level_idx_mid_huffbits", "ff_spatial_dwt", "sonic_encode_frame", "svq1_decode_frame", "huff_a05_xlat", "ff_fdct248_islow_8", "cinepak_class", "put_no_rnd_mpeg4_qpel8_v_lowpass.constprop.9", "paint_lut", "sample_fmts_p", "escape130_decode_init", "f_huffman_env_3_0dB_bits", "ff_sbr_hf_gen_neon", "brane.12468", "atrac3p_huff_freq_cb", "put_h264_qpel4_mc33_10_c", "ff_eamad_decoder", "ff_vp8_parser", "ff_sbr_hf_apply_noise_1_neon", "vp7_read_mv_component", "ff_rl_mpeg2", "rv34_parse", "avg_qpel16_mc10_c", "vlc_tab_level_huffbits", "binkb_decode_plane", "ps_stereo_interpolate_ipdopd_c", "FIR_REMAIN", "ff_aac_num_swb_1024", "ff_als_decoder", "put_hevc_qpel_uni_w_v_12", "decode_array_0000.isra.6", "compare_vlcspec", "ff_sin_65536", "ff_lzw_decode_init", "ff_put_h264_qpel16_mc33_neon", "code_table1.10226", "ff_vp56_ac_dequant", "ff_put_vc1_mspel_mc23_neon", "sbr_sum64x5_c", "vorbis_decode_flush", "ff_hevc_put_qpel_h2_neon_8", "celt_model_tapset", "paf_audio_init", "put_h264_qpel16_mc30_12_c", "free_picture.isra.5", "temporal_luma_motion_vector", "ff_avg_qpel16_mc12_old_c", "ff_init_range_encoder", "srt_print", "pred8x8l_left_dc_12_c", "lsf_5_2", "out_lo_head", "pred4x4_dc_12_c", "put_h264_qpel16_v_lowpass_10.constprop.57", "ff_snow_reset_contexts", "cb1110ss1", "ff_dvdsub_parser", "ff_flv_encode_picture_header", "svq1_intra_multistage", "diff_int16_c", "ff_rac_terminate", "ff_adpcm_sbpro_4_decoder", "ff_mlp_pack_output_inorder_8ch_4shift_armv6", "popcount4", "raw_close_decoder", "ff_cavs_init_mb", "dvdsub_class", "dnxhd_1251_chroma_weight", "avg_h264_qpel4_mc02_10_c", "rv34_quant_to_vlc_set", "truemotion1_decode_end", "put_hevc_epel_v_10", "qmat2F", "encode_close", "ff_vorbis_nth_root", "ff_avg_h264_qpel16_mc31_neon", "sgirle_decode_init", "avg_qpel16_mc32_c", "bark_tab_m22_512", "ff_flac_sample_rate_table", "ff_log2_tab", "table_mb_non_intra4", "__compound_literal.50", "dirac_primaries", "decode_v4_vector.isra.4", "dca_decode_end", "transforms", "aasc_decode_init", "ff_vc1_parse_frame_header_adv", "amp_sf_tab", "dca_decode_frame", "ipvideo_decode_block_opcode_0xA", "pred_planar_1_8", "ff_canopus_parse_info_tag", "table_offs", "ff_h264_idct8_add4_neon", "ff_hevc_transform_add_8x8_neon_8", "vertical_compose_daub97iL1", "avg_h264_qpel8_h_lowpass_neon", "put_hevc_epel_uni_v_9", "t_huffman_noise_bal_3_0dB_codes", "huff_a65_cb", "vp9_inter_mode_tree", "avg_8tap_sharp_4v_c", "ir2_luma_table", "mpegvideo_split", "qmat44", "log2mono", "huff_cmp", "avg_h264_qpel4_mc01_9_c", "atrac3p_huff_gain_loc2_cb", "atrac3p_huff_gain_npoints2_xlat", "put_h264_qpel4_mc20_12_c", "pred8x16_horizontal_8_c", "add_hfyu_left_pred_bgr32_c", "avg_h264_qpel8_mc00_14_c", "wmv2_mspel8_v_lowpass.constprop.0", "dpx_parse", "celt_decode_allocation", "ff_snow_common_init_after_header", "vp8_filter_mb_row", "idct_4x4_12", "put_h264_qpel8_v_lowpass_10", "put_hevc_epel_bi_hv_9", "avg_h264_qpel8_mc02_12_c", "table.10664", "put_rv40_qpel16_mc33_c", "__end_b_evaluation", "put_h264_qpel8_mc30_8_c", "ff_h264_idct_add16intra_12_c", "intra_pred_3_8", "scalarproduct_and_madd_int16_c", "ff_fft_calc_vfp", "put_h264_qpel8_mc33_9_c", "huff_offset", "dquant_tab.13691", "subband_scale", "ff_targa_encoder", "pred16x16_127_dc_12_c", "avg_8tap_sharp_4hv_c", "cabac_context_init_I", "ff_cavs_intra_mv", "bitalloc_65_bits_e", "encode_residual_fixed", "write_extradata", "ff_eac3_set_cpl_states", "sign_lookup", "put_h264_qpel2_mc13_14_c", "cook_decode_close", "fibonacci", "vp8_pred16x16_prob_inter", "intra_pred_down_right", "ff_h263_decode_end", "glyph4_x", "ff_pcm_f32be_encoder", "cvh_huffcodes", "ff_vp8dsp_init_neon", "build_huff", "avg_h264_qpel16_mc32_9_c", "pred4x4_horizontal_14_c", "header_prefix.11768", "chroma_dc_total_zeros_vlc", "put_h264_qpel4_mc31_12_c", "put_h264_qpel16_mc31_12_c", "vp3_idct_core_neon", "put_h264_qpel2_mc33_9_c", "delta_tab_1_2", "put_scaled_8tap_c", "put_h264_qpel16_mc01_12_c", "avg_pixels8_l2_8", "pred8x8l_horizontal_add_12_c", "ff_vp8_h_loop_filter16_armv6", "ff_mqc_initenc", "iadst_idct_4x4_add_c", "biweight_h264_pixels8_14_c", "frame_duration_type_quants", "arith_normalise", "v2_intra_cbpc_vlc", "ff_hq_hqa_decoder", "sbr_sum_square_c", "dc_128_16x16_c", "huff_b42_cb", "decorr_filter_nterms", "put_hevc_epel_bi_v_12", "mjpeg_class", "ff_g722_update_low_predictor", "ir_filter_str", "put_hevc_epel_uni_h_12", "ff_wmav1_decoder", "fft512_neon", "ivi4_horizontal_scan_4x4", "hpel_motion_search", "ff_pictor_decoder", "spec_vlc_tabs", "ff_stl_decoder", "ff_put_vc1_mspel_mc22_16_neon", "evrcdec_class", "put_bilin_32v_c", "put_h264_chroma_mc4_8_c", "ff_reverse", "qp_end_table", "pred4x4_down_left_10_c", "mpc8_dscf1_bits", "ff_aac_decoder", "ff_h261_mtype_bits", "cb1616m0", "ff_ivi_mc_4x4_no_delta", "avg_rv30_tpel16_mc12_c", "hqx_decode_close", "encode_qlogs", "ff_sunrast_encoder", "convert_timestamp", "ff_hevc_h_loop_filter_chroma_neon", "microdvd_decode_frame", "default_lockmgr_cb", "ff_pcm_f64be_encoder", "xsub_encode", "aic_c_scan", "ff_dwt_encode", "avdct_class", "ff_jpeg2000_sgnctxno_lut", "avg_rv40_qpel16_mc10_c", "dc_32x32_c", "rv40_decode_mb_info", "biweight_dirac_pixels16_c", "on2avc_swb_start_mode_6_44", "pred8x8_left_dc_9_c", "ff_jref_idct2_put", "ff_mpv_common_init_arm", "avg_h264_qpel8_mc12", "put_bilin_4v_c", "mpc8_q7_codes", "ff_acelp_decode_6bit_to_2nd_delay6", "adx_parse", "delta_tab_3_1", "__compound_literal.49", "ff_put_h264_qpel8_mc20_neon", "put_h264_qpel4_mc21_10_c", "gains_MODE_4k75", "alloc_table_4", "ff_tiff_encoder", "spectral_coeff_tab", "col_zag", "imc_weights2", "mlp_filter_channel", "put_h264_qpel8_mc03_10_c", "ff_msa1_decoder", "ff_vp56_norm_shift", "ff_mb_pat_vlc", "avg_h264_qpel8_mc33_14_c", "ff_mpeg1_encode_picture_header", "dxt2_block", "lsp_interpolation_factors.10097", "lsf_5_5", "decode_tag", "left_modifier_l", "pred8x8_top_dc_rv40_c", "vc1_h_s_overlap_c", "huff_a53_xlat", "pred8x8l_vertical_add_8_c", "ts_cb_2", "table.10662", "avg_pixels16_8_c", "yop_decode_close", "dnxhd_decode_close", "score_header", "cb4448sm1", "ff_sbr_sum64x5_neon", "lsf_cb1", "avg_mpeg4_qpel16_v_lowpass.constprop.1", "vp6_sig_dct_pct", "vmdaudio_decode_frame", "on2avc_cb10_syms", "ff_on2avc_tab_10_1", "ff_sin_32768", "qp_c.11117", "lsp22s", "coding_mode_def", "ff_hevc_dsp_init", "ir2_decode_plane.constprop.1", "huff_b04_xlat", "mc_dmodes", "__compound_literal.53", "__aeabi_l2f", "vc1_inv_trans_8x8_dc_c", "ff_avg_vc1_chroma_mc4_neon", "atrac3_vlc_offs", "ff_on2avc_tab_84_1", "lpc_apply_welch_window_c", "ff_idctdsp_init_armv5te", "ff_celt_flush", "prores_encode_close", "av_codec_context_class", "table.10102", "ff_mdct_win_float", "hqx_decode_init", "mss2_decode_end", "weight_h264_pixels8_12_c", "avg_h264_qpel8_mc11_14_c", "scfi_vlc", "ff_mace6_decoder", "implicit_weight_table", "put_h264_qpel4_mc01_14_c", "tiff_unpack_strip", "ff_h263_encode_gob_header", "ff_vc1_pred_mv_intfr", "biweight_h264_pixels2_12_c", "tmode_codes", "hadamard8_intra16_c", "ff_h264_idct_dc_add_12_c", "pred16x16_left_dc_9_c", "ff_wma_hgain_huffcodes", "ff_bgmc_decode_end", "inter_mode_ctx_lut.11268", "initialized.7398", "decode_band_structure.constprop.3", "rotate_luts", "idct_8x8_12", "search_for_pns", "ff_h264chroma_init", "codebook_vector10", "hqx_decode_422a", "cdt1", "cavs_filter_cv_c", "ff_pcm_s24daud_decoder", "qmat45", "v408_encode_frame", "ff_tadd_long_metadata", "avg_h264_qpel16_mc03_12_c", "ff_pred16x16_hor_neon", "bitalloc_17_bits_f", "put_h264_qpel2_mc02_12_c", "t_huffman_env_bal_3_0dB_bits", "silk_lsf2lpc", "ff_aac_pow34sf_tab", "ff_videodsp_init", "ff_fraps_decoder", "text_decoder_class", "bitalloc_5_codes_b", "loop_filter_v_88_16_c", "ulti_chromas", "ff_tget_short", "fic_header", "avg_rv40_qpel8_mc13_c", "h264_h_loop_filter_chroma_mbaff_intra_14_c", "put_hevc_epel_hv_8", "ff_vble_decoder", "put_rv30_tpel8_mc02_c", "btype_vlc", "ff_put_vp8_bilin4_hv_neon", "pred8x16_mad_cow_dc_0l0_10", "vlc_scalefactors", "sd_1d97_int", "bitalloc_129_codes_d", "ff_dca_lossless_quant_d", "fourtap_filters_1324", "ir_filter_medium", "avg_h264_qpel16_mc12_9_c", "dequant8_coeff_init_scan", "msvideo1_decode_end", "put_h264_qpel2_mc22_9_c", "ff_dwt_init", "dnxhd_decode_init", "table.12026", "def_lru", "dnxhd_10bit_get_pixels_8x4_sym", "avg_scaled_bilin_c.constprop.11", "ff_ivi_put_dc_pixel_8x8", "on2avc_cb14_bits", "decode_tsw1", "short_codes_def", "tiffenc_class", "decorr_mono.constprop.11", "avg_h264_qpel4_mc20_10_c", "off.11917", "put_rv30_tpel8_mc21_c", "bit_sizes.9860", "apply_long_start_window", "codes6", "__compound_literal.4", "huff_a61_cb", "inv_predict_0", "flac_decorrelate_ms_c_16", "table.10048", "avui_decode_frame", "ff_snow_inner_add_yblock", "vec_sizes.10394", "dquant_code", "vp9_decode_init", "chroma422_dc_coeff_token_bits", "jpeg2000_dec_cleanup", "t_huffman_env_bal_1_5dB_bits", "avg_h264_qpel16_mc21_14_c", "quant5", "h264_slice_header_init", "ff_put_pixels16_y2_armv6", "put_symbol.constprop.14", "put_h264_qpel2_mc32_14_c", "remap.9882", "avg_rv40_qpel8_mc23_c", "ff_set_fixed_vector", "hybrid_synthesis.isra.6.constprop.8", "loop_filter_h_88_16_c", "ff_acelp_decode_9bit_to_1st_delay6", "avg_h264_qpel4_mc00_12_c", "ac_vlc_desc1_syms", "ff_vorbis_ready_floor1_list", "flush_put_bits", "table.10024", "ff_class", "avg_qpel16_mc33_c", "huff_iid_dt1_codes", "bitalloc_25_codes_c", "ff_hevc_put_qpel_uw_h1_neon_8", "ff_hevc_mvp_lx_flag_decode", "silk_model_pitch_contour_mbwb20ms", "coef0_huffbits", "put_scaled_bilin_32_c", "huff_a33_xlat", "put_cavs_filt8_h_qpel_l", "ff_put_vp8_epel4_v6_neon", "avg_h264_qpel8_mc02_8_c", "ff_msgsm_decode_block", "avg_h264_qpel8_mc11_8_c", "ff_mpeg4_set_direct_mv", "ff_put_vp8_epel16_h6v6_armv6", "ff_energy_tab", "idct_col4_st16_neon", "ff_on2avc_ctab_3", "avg_cavs_filt8_v_qpel_l", "chroma_dc_scan", "seqvideo_decode_end", "ff_hevc_diag_scan8x8_y", "ff_put_h264_qpel8_mc02_neon", "ff_mp3adu_decoder", "put_h264_qpel4_hv_lowpass_9.constprop.75", "ac_decode_table", "mpc8_q7_bits", "put_hevc_qpel_uni_v_9", "non_linear_qscale", "pow2tab", "ff_tiff_projection_codes", "vlc_stage3_values", "put_h264_qpel8_mc30_12_c", "uni_mpeg4_intra_rl_len", "dnxhd_1252_ac_flags", "imlt_window_float", "ff_ac3_sample_rate_tab", "huffcode1", "vorbis_encode_frame", "eightsvx_decode_frame", "ff_flac_set_channel_layout", "put_h264_qpel2_hv_lowpass_10.constprop.60", "huff_a16_xlat", "ff_h264_idct8_add4_10_c", "ff_obmc_tab", "decouple_float", "ff_mqc_nmps", "ff_hevc_pel_weight", "svq1_inter_codebook_8x8", "ff_avg_rv40_qpel16_mc03_neon", "ff_truehd_layout", "__subsf3", "put_8tap_regular_8v_c", "ff_put_vc1_mspel_mc22_neon", "put_8tap_smooth_8hv_c", "wmavoice_lsp10_intercoeff_a", "avg_vc1_mspel_mc31_c", "put_rv40_qpel16_mc11_c", "webvtt_encode_frame", "low_inv_quant5", "ff_put_vc1_mspel_mc10_16_neon", "ff_eac3_default_chmap", "h261_mv_vlc", "lpc_refl_cb7", "hnm_decode_end", "counts_diff_3970", "fft_level_exp_alt_huffcodes", "ff_write_pass1_stats", "read_sbr_noise.isra.8", "ff_h264_fill_default_ref_list", "ff_h263_inter_MCBPC_bits", "subviewer_decode_frame", "ff_bmp_parser", "ffv1_defaults", "ff_dca_lfe_fir64_vfp", "ipdopd_cos.9523", "highpass_poles", "vp9_decode_update_thread_context", "put_h264_qpel4_v_lowpass_14.constprop.24", "theora_pix_fmts", "ff_ut_rgb_order", "ff_g722_update_high_predictor", "celt_decode_bands", "ff_put_h264_qpel16_mc03_neon", "ff_slice_buffer_flush", "put_qpel16_mc22_c", "codebook17", "ff_h264_alloc_tables", "rv10_decode_end", "vp6_get_nb_null", "ff_dirac_init_arith_decoder", "ff_swb_offset_1024", "vp9_decode_init_thread_copy", "svq1_encode_plane", "cb2224m0", "expval_table_float", "mss4_free_vlcs", "avg_rv30_tpel8_hhv_lowpass", "amr_bit_orderings_by_mode", "ff_put_rv40_qpel8_mc12_neon", "bitalloc_offsets", "put_no_rnd_qpel16_mc11_c", "ff_swb_offset_480", "ff_prores_interlaced_scan", "field_scan8x8", "pred8x8l_horizontal_filter_add_8_c", "swb_offset_1024_96", "ff_cos_2048", "ff_put_vp8_bilin16_v_neon", "idxtab.10207", "entropy_decode_mono_0000", "entropy_decode_mono_3900", "isf_init", "build_vlc.part.10", "put_hevc_epel_h_12", "ff_avg_rv40_qpel8_mc21_neon", "pred8x8_mad_cow_dc_l0t_10", "ff_simple_idct48_add", "bitalloc_129_codes_f", "ccitt_codes_bits", "put_hevc_qpel_uni_w_h_8", "ff_hevc_transform_luma_4x4_neon_8", "ff_tget", "ff_h264_set_erpic", "vlc_tab_run", "ff_dsd_lsbf_decoder", "ff_hevc_put_qpel_uni_neon_wrapper", "ff_vc1_decode_end", "ff_put_vp8_epel16_h6_armv6", "crazy_mix_runlevel.11723", "put_cavs_qpel16_mc33_c", "ff_pcm_s8_decoder", "cplscale6", "mp_read_changes_map", "put_h264_qpel8_mc22_9_c", "put_hevc_epel_uni_w_h_8", "nsse16_c", "ff_aac_spectral_bits", "fic_decode_close", "ff_asv_common_init", "ff_update_picture_tables", "put_hevc_pel_pixels_8", "transform_add16x16_12", "ff_vc1_adv_progressive_4x8_zz", "atrac3p_wl_shapes", "table.12379", "hevc_decode_init", "hex.12217", "ff_vp8_luma_dc_wht_armv6", "hls_sao_param", "pred8x8l_down_right_12_c", "cljr_class", "ff_xwd_encoder", "x8_v_loop_filter", "pred8x8l_horizontal_down_12_c", "ff_wma_total_gain_to_bits", "noise_tab", "avg_h264_qpel8_mc22_8_c", "ff_put_vp8_bilin8_h_neon", "huff_a25_cb", "pos.13020", "ff_snow_get_buffer", "sp5x_quant_table", "noise_samples", "avg_h264_qpel16_mc32_8_c", "cb4432s0", "mp_decode_layer2", "ff_put_pixels16_arm", "dc9_vlc_lens", "bitalloc_17_codes_a", "ac_vlc_desc2_syms", "put_h264_qpel16_mc10_14_c", "J", "ipdopd_sin.9623", "predict_table", "table.11998", "ff_eac3_bits_vs_hebap", "vp8_coeff_band_indexes", "put_h264_qpel8_mc01", "encode_flush", "mod23_lut", "ff_fft_fixed_init_arm", "convert_flt", "ff_iff_byterun1_decoder", "ff_r10k_decoder", "h264_v_loop_filter_chroma_intra_10_c", "ff_pcm_s32le_decoder", "ff_vp8_v_loop_filter16_armv6", "pred8x16_dc_8_c", "expval_table_fixed", "pred8x8_vertical_add_9_c", "uni_mpeg4_inter_rl_len", "mpc7_dscf", "ff_ac3_float_mdct_end", "avg_cavs_qpel8_mc03_c", "ff_msmpeg4_encode_motion", "h261_decode_mb_skipped", "jpeg2000_class", "cos_tab", "put_h264_qpel16_mc13_10_c", "insert_font", "qmf_48tap_half", "ff_mjpeg_decode_end", "huff_a54_cb", "mpc7_decode_close", "vp6_def_pdv_vector_model", "ff_inter_run", "decode_audio_block", "ff_atrac_sf_table", "ff_dct_unquantize_h263_armv5te", "bmp_parse", "ff_snow_common_init", "huff_b64_cb", "ff_set_qscale", "ff_hevc_mpm_idx_decode", "put_h264_qpel8_mc01_9_c", "rv34_table_intra_firstpat", "vlc_sbr", "__udivmoddi4", "raw_encode_init", "vlc_initialized.9704", "vc1_delta_level_table", "rl_vlc_table.12365", "ff_adpcm_ms_decoder", "qscale_tab", "avg_rv30_tpel8_mc21_c", "ff_wmv2_common_init", "pred8x16_left_dc_10_c", "ff_wmv2_decode_mb", "__col_loop", "vp5_decode_init", "vble_decode_init", "zero12v_decode_init", "sbr_qmf_deint_neg_c", "mpa_huffcodes_15", "vp8_v_loop_filter_inner_armv6", "tab9", "get_4block_rd.constprop.10", "ff_h263_rl_inter", "delta_tab_1_3", "entropy_decode_stereo_3900", "ff_dca_xll_decode_audio", "ff_dirac_decoder", "ff_put_no_rnd_qpel8_mc11_old_c", "ff_flac_parse_streaminfo", "celt_static_caps", "ff_flv2_encode_ac_esc", "ff_wmv2_scantableB", "ff_put_vp8_epel8_h4_neon", "ff_msvideo1_decoder", "ff_avg_rv40_qpel8_mc32_neon", "adx_encode_init", "pred16x16_vertical_8_c", "mpeg4_update_thread_context", "bmp_encode_frame", "swb_offset_1024_8", "h264_v_loop_filter_chroma_10_c", "mpc8_idx51", "vp8_decode_mb_row_sliced", "sample_size_table", "tscc2_ac_vlc_syms", "ff_xbin_decoder", "mpeg_decode_update_thread_context", "put_h264_qpel2_mc03_14_c", "nr_iidicc_par_tab", "cbp_vlc_bits", "t_huffman_env_bal_3_0dB_codes", "pred4x4_top_dc_8_c", "avg_qpel16_mc20_c", "mb_type_table.12018", "ff_y41p_decoder", "coef1_huffbits", "ff_psy_preprocess_init", "bink_idct_put_c", "write_element_header", "chroma_dc_coeff_token_vlc_table", "atrac3p_huff_gain_lev2_xlat", "s_rndtblfield.12301", "dxt1a_block", "ff_se_golomb_vlc_code", "h261_decode_frame", "avg_h264_qpel16_mc21_8_c", "sbr_qmf_window_ds", "table.10663", "huff_a05_cb", "mpeg4video_parse", "ff_vc1_field_mvpred_scales", "ff_avcodec_locked", "ff_vc1_ac_sizes", "ff_fdct_ifast", "ff_put_h264_qpel16_mc00_neon", "decorr_filters", "vp8_pred4x4_prob_inter", "vec4_huffbits", "ff_synth_filter_float_neon", "tqi_decode_end", "atrac3p_wl_huff_bits2", "fic_decode_slice", "ff_cos_4096_fixed", "jpeg2000_decode_frame", "ff_imdct36_blocks_float", "huff_a02_cb", "put_qpel16_mc32_c", "fft4_neon", "twiddle.constprop.8", "avg_h264_qpel16_mc31_9_c", "ccpl_huffcodes5", "h264_v_loop_filter_luma_9_c", "f34_1_8", "ff_hevc_cu_qp_delta_sign_flag", "huff_b75_cb", "bark_tab_m16_512", "atrac3p_qu_num_to_seg", "ff_mpeg4_decoder", "rv40_decode_intra_types", "avg_8tap_sharp_16h_c", "ac3_sync", "__PRETTY_FUNCTION__.10039", "put_h264_qpel4_mc00_9_c", "ff_pcm_s24le_planar_decoder", "spectral_to_sample", "swb_offset_512_48", "decoder_class", "h264_v_loop_filter_luma_intra_14_c", "ff_mlp_pack_output_inorder_6ch_mixedshift_armv6", "ff_weight_h264_pixels_8_neon", "avg_bilin_32h_c", "put_hevc_epel_bi_w_v_9", "gain_pitch_cb_16k", "ff_ivi_col_slant4", "low_quant", "ff_put_qpel16_mc11_old_c", "ff_wmv3_dc_scale_table", "block_coords", "h_block_filter", "quant_levels", "ff_qcelp_decoder", "size_group.11266", "fft16_neon", "ff_h263_static_rl_table_store", "put_bilin_1d_h_c", "ff_vc1_1ref_mvdata_codes", "ff_mjpeg_decode_frame", "ff_adpcm_index_tables", "x8_ac1_lowquant_table", "dvdsub_parse_close", "put_cavs_qpel8_mc13_c", "ff_h264_idct8_add4_12_c", "default_fcode_tab", "scale_huffbits", "ff_pred8x8_l0t_dc_neon", "pred_angular_3_10", "delta_tab_1_5_m10", "ass_decode_close", "decode_residuals", "put_h264_qpel8_mc20_10_c", "ff_me_cmp_init", "atrac3p_huff_wav_ampsf3_cb", "mimic_decode_update_thread_context", "vc1_decode_p_mb", "ff_ac3_rematrix_band_tab", "qmat30", "put_hevc_epel_uni_w_h_9", "put_no_rnd_qpel8_mc01_c", "silk_lsf_pred_weights_wb", "ff_pix_abs16_y2_armv6", "ff_frame_thread_init", "vp5_dccv_pct", "huff_opd_dt_bits", "g722_encode_init", "dc_129_32x32_c", "dnxhd_1252_chroma_weight", "dct_unquantize_h263_inter_armv5te", "ff_vp56_reference_frame", "pred8x16_horizontal_add_9_c", "requant_tab", "avg_scaled_sharp_8_c", "ff_sp5x_decoder", "ff_simple_idct_put_12", "spatial_compensation_0", "ff_put_vp8_bilin16_hv_neon", "avg_h264_qpel8_mc20_12_c", "ff_put_pixels16_xy2_neon", "ff_r10k_encoder", "decode_tdlt", "flac_decorrelate_ls_c_32p", "put_h264_qpel16_mc00_12_c", "ivi_blk_huff_desc", "o2", "chroma422_dc_coeff_token_len", "pred4x4_vertical_left_rv40_nodown_c", "avg_h264_qpel16_mc00_12_c", "put_h264_qpel8_mc23_8_c", "ff_put_vp8_pixels8_armv6", "put_hevc_epel_uni_h_8", "pred8x16_mad_cow_dc_0l0_8", "tns_tmp2_map", "dct_unquantize_mpeg1_intra_c", "ff_ssa_decoder", "qmat4A", "pred8x8l_top_dc_9_c", "table.10049", "avg_8tap_smooth_8v_c", "dxt5_block", "ff_put_no_rnd_qpel16_mc33_old_c", "vc1_h_loop_filter16_c", "decode_entropy_coded_image", "high_specs", "put_h264_qpel8_mc10_10_c", "atrac3p_sf_huff_code4", "dca_bitalloc_index", "coef_vlc", "dv_profiles", "lag_decode_init", "put_qpel16_mc13_c", "update_thread_context", "output_frame", "put_h264_qpel8_mc31_8_c", "ff_aac_num_swb_128", "ff_dca_vlc_offs", "dirac_hpel_filter", "pred8x8l_top_dc_8_c", "idx_err_str", "avg_rv40_qpel8_mc01_c", "cga_mode45_index", "pred16x16_129_dc_10_c", "costbl_12", "vertical_compose_dirac53iH0", "ff_vorbisdsp_init_arm", "coefs", "table.11754", "ff_hevc_put_pixels_w48_neon_8", "decode_frame_mp3on4", "decode", "ff_convert_matrix", "h264_h_loop_filter_chroma422_mbaff_intra_10_c", "ff_sin_8192", "ff_svq3_add_idct_c", "ff_mlp_pack_output_inorder_6ch_4shift_armv6", "hl_decode_mb_444_complex", "codebook11", "dico21_isf_36b", "vp6_ract_pct", "ff_acelp_lsf2lsp", "webvtt_encode_close", "mpeg1_vlc", "LUT.9538", "put_h264_qpel8_mc31_12_c", "bitalloc_33_codes_g", "ff_mpeg1_decode_block_intra", "rem6", "flac_lpc_encode_c_32", "put_h264_qpel4_mc23_10_c", "weight_h264_pixels8_14_c", "put_cavs_filt8_hv_kk.isra.10", "scfi_table.9705", "adj_table.10573", "ff_hevc_frame_nb_refs", "wavesynth_seek", "avg_h264_qpel16_mc22_12_c", "postfilter_taps.10591", "__compound_literal.39", "ff_hevc_slice_rpl", "put_qpel8_mc11_c", "ff_avg_rv40_qpel16_mc01_neon", "ra144_decode_init", "decode_band_structure.constprop.2", "bypasswrite", "x8_get_ac_rlf", "ff_g722_low_inv_quant4", "dnxhd_parse", "ff_pcm_mulaw_decoder", "put_hevc_pel_uni_pixels_12", "ff_h264_flush_change", "ff_aac_adjust_common_prediction", "put_cavs_qpel8_mc31_c", "put_hevc_epel_bi_w_hv_12", "put_vp8_epel8_h4_c", "avg_h264_qpel16_hv_lowpass_neon", "v308_encode_frame", "put_h264_qpel8_mc11", "lsf_3_1", "total_zeros_vlc", "ff_hevc_pcm_flag_decode", "avg_cavs_qpel16_mc21_c", "draw_arrow.constprop.3", "cb1110sm1", "encode_bgra_bitstream.constprop.5", "frame_options", "put_8tap_regular_4v_c", "tab.13344", "ff_put_h264_chroma_mc4_neon", "waves_synth.isra.0", "put_hevc_epel_uni_hv_9", "ff_avg_h264_qpel8_mc23_neon", "put_h264_qpel4_mc11_9_c", "vc1_v_loop_filter8_c", "pred16x16_127_dc_8_c", "table.12374", "atrac3p_wl_huff_code3", "put_rac.constprop.17", "ff_dca_xbr_parse_frame", "cb_ma_predictor", "put_h264_qpel16_v_lowpass_neon", "avg_h264_qpel4_mc21_9_c", "subtitle_rect_options", "dvbsubdec_class", "ff_qpeg_decoder", "qmat2E", "put_qpel8_mc01_c", "ff_audiodsp_init", "put_vc1_mspel_mc21_16_c", "ff_wma_get_frame_len_bits", "ff_apply_motion_4x4", "inter_pred_scaled_16bpp.isra.6", "ff_hevc_put_qpel_uw_h1v3_neon_8", "pop_greys", "pred_mv", "mpa_huffbits_10", "ff_pcm_s24daud_encoder", "avg_h264_chroma_mc4_8_c", "decode_predictor_coeffs", "rv40_bias", "v_block_filter", "tscc2_zigzag", "vp8_put_epel_v4_armv6", "decode_coeffs_16bpp", "pred4x4_horizontal_down_10_c", "ff_mdct_calc_c_fixed", "cos1pi8", "decode_coeffs_8bpp", "ff_vc1_adv_interlaced_8x8_zz", "ff_dirac_next_ctx", "decode_segment", "pred4x4_129_dc_10_c", "wl_xlats.10053", "ff_v2_mb_type", "SAMPLES_PER_LOOP", "put_h264_qpel8_mc12_8_c", "pred_angular_1_10", "ff_pcm_s32be_decoder", "hevc_v_loop_filter_chroma_8", "pred8x8l_horizontal_filter_add_10_c", "__compound_literal.15", "put_h264_qpel16_mc12_9_c", "transform_skip_8", "ff_put_vp8_epel4_h4_neon", "put_pixels2_x2_8_c", "idct_16x16_dc_12", "put_h264_qpel16_mc00_9_c", "ff_amrwb_decoder", "ff_put_qpel8_mc11_old_c", "lpc_refl_cb10", "ff_metasound_mode4448s", "vp9_default_coef_probs", "ff_simple_idct_put_armv5te", "imc_decode_frame", "mc_part_422_complex", "vc1_sprite_flush", "ff_h264_idct8_dc_add_8_c", "ff_avg_h264_qpel16_mc33_neon", "table.12388", "put_cavs_qpel16_mc02_c", "vp8_luma_dc_wht_dc_c", "chroma_vals", "pred8x8_top_dc_14_c", "g726_encode_frame", "codebook_trellis_rate", "table.9824", "decode_frame", "avg_scaled_8tap_c.constprop.10", "ff_vc1_mc_4mv_luma", "cvh_huffcodes0", "ff_cinepak_encoder", "b1_mantissas", "ff_adpcm_ea_maxis_xa_decoder", "table.10623", "encode_init_ls", "ir_filters_lookup", "silk_model_ltp_filter0_sel", "put_h264_qpel2_mc00_9_c", "copy64_c", "ff_ac3_rshift_int32_neon", "ff_put_rv40_qpel8_mc13_neon", "ff_vorbis_floor1_inverse_db_table", "vp7_v_loop_filter8uv_inner_c", "put_rv30_tpel8_v_lowpass", "ff_mss12_decode_rect", "silk_model_gain_highbits", "ff_pcm_u16be_encoder", "put_h264_qpel8_mc02_10_c", "ff_h264_idct_add_8_c", "hor_down_32x32_c", "put_h264_qpel4_mc22_12_c", "vqa_decode_frame", "aacenc_options", "put_h264_qpel16_mc11_8_c", "cvh_huffcodes2", "ff_vector_clip_int32_neon", "ff_vp56_mb_type_model_model", "on2avc_swb_start_mode_5_44", "put_h264_qpel2_mc21_9_c", "ff_avg_h264_qpel8_mc31_neon", "qmat36", "ff_metasound_decoder", "ff_avg_rv40_qpel16_mc11_neon", "dc_chrom", "put_h264_qpel16_mc20_12_c", "ff_dca_lfe_fir32_vfp", "silk_model_lsf_s2", "ff_ivi_row_haar4", "modify_qscale", "ff_hevc_put_qpel_uw_h3v2_neon_8", "put_h264_qpel4_hv_lowpass_14.constprop.23", "aic_mode1_table.12159", "put_h264_qpel8_mc23_9_c", "mss3_decode_frame", "put_h264_qpel4_hv_lowpass_12.constprop.41", "avg_vc1_mspel_mc33_c", "hevc_h_loop_filter_chroma_10", "wtf_end_1024.isra.5", "vp8_lossless_decode_frame", "shorten_decode_init", "ff_mpeg4_decode_picture_header", "avg_rv40_qpel8_v_lp_packed_s5_neon", "pc_tbl3", "cmv_decode_init", "wavpack_encode_close", "ff_adpcm_ea_xas_decoder", "hpf_zeros", "pred4x4_left_dc_9_c", "__aeabi_ul2d", "parity_table", "rem6.11300", "ff_acelp_decode_5_6_bit_to_2nd_delay3", "ff_h264_decode_ref_pic_list_reordering", "dnxhd_1237_run_codes", "atrac3p_huff_gain_loc5_xlat", "just_return", "avg_h264_qpel8_mc03_9_c", "pred8x8l_horizontal_up_8_c", "cf_tables_3", "ass_encode_init", "vq_hebap7", "vp56_rac_get_prob_armv6.constprop.22", "ff_ffv1_init_slices_state", "ff_hevc_skip_flag_decode", "NR_BANDS", "quant_tab.12108", "luma_adjust", "huffcode2", "put_scaled_smooth_8_c", "get_subband_flags", "ccitt_group3_2d_vlc", "ff_dnxhd_encoder", "on2avc_cb2_codes", "ff_vc1_norm6_bits", "h264_h_loop_filter_luma_intra_10_c", "ff_fourxm_decoder", "h264_h_loop_filter_luma_intra_12_c", "silk_model_lcg_seed", "dnxhd_1250_run_bits", "ls_decode_line.part.3", "decode_cabac_residual_nondc_internal", "atrac3p_sf_huff_bits6", "ff_ps_ctx_init", "spatial_compose_dd97i_dy", "chroma_quant", "bwh_tab", "evrc_lspq_half_codebooks_row_sizes", "ff_ass_bprint_dialog", "on2avc_cb2_bits", "ff_s302m_encoder", "adpcm_decode_init", "pcm_decode_init", "ff_gmc_c", "put_vc1_mspel_mc21_c", "atrac3p_sf_huff_code6", "avg8_c", "bitalloc_33_bits_b", "vp6_parse_header", "IIR_REMAIN", "put_no_rnd_qpel16_mc13_c", "ff_rv34dsp_init", "ff_cos_16384_fixed", "nb_scale_factors", "ac8_lut", "dc_128_8x8_c", "qcelp_decode_init", "unpack_dct_coeffs", "destroy_buffers", "fft512", "decode_pixel_in_context", "ff_sine_windows", "truemotion1_decode_header", "table.12380", "ff_vc1_intfr_4mv_mbmode_bits", "pred8x8l_vertical_add_14_c", "ff_acelp_lsf2lspd", "ff_ass_split_free", "vsse16_c", "idct_16x16_dc_8", "g726_class", "quantize_and_encode_band_cost_ESC", "codec_reinit", "done.12337", "ff_vp8_idct_dc_add_armv6", "horiz_scan8x8_inv", "put_h264_qpel16_mc33_10_c", "pred8x8l_horizontal_down_8_c", "chroma_dc_coeff_token_bits", "ff_adpcm_xa_decoder", "ff_ivi_mc_avg_8x8_delta", "ff_faanidct", "codebook_vector0_vals", "ccpl_huffbits5", "huff_a07_cb", "put_bits", "ff_sbr_neg_odd_64_neon", "ff_add_pixels_clamped_armv6", "put_h264_qpel8_hv_lowpass_10", "put_rv40_qpel16_mc22_c", "put_h264_qpel8_mc10_12_c", "ff_put_vp8_epel16_v6_neon", "put_hevc_qpel_uni_w_h_10", "dc_127_4x4_c", "ff_jref_idct1_put", "hq_tab_08", "put_h264_qpel8_v_lowpass_neon", "avg_h264_qpel16_h_lowpass_l2_neon", "avg_scaled_regular_4_c", "xan_decode_chroma", "ff_aac_ac3_parse", "ff_yop_decoder", "vcr1_decode_init", "put_h264_qpel8_hv_lowpass_neon", "aic_scan", "flac_decorrelate_rs_c_32p", "ff_prores_aw_encoder", "put_h264_qpel2_mc33_8_c", "vec_len_syms", "ff_mjpeg_escape_FF", "put_pixels16x16_c", "ff_smc_decoder", "ff_aac_sbr_ctx_close", "put_h264_qpel4_mc12_8_c", "avg_h264_qpel8_mc10_14_c", "aac_encode_frame", "avg_h264_qpel16_mc20_12_c", "text_sample_entry.9532", "pred8x16_left_dc_8_c", "cb0806sm0", "cb1616s1", "direct_search", "ff_simple_idct_put_10", "avg_h264_qpel4_mc31_8_c", "ff_adpcm_yamaha_indexscale", "ff_cavs_partition_flags", "quant_centroid_tab", "simple_idct_arm_add", "ff_mlp_rematrix_channel_arm", "put_h264_qpel16_mc33_9_c", "vpr_tab", "fcb22l", "ff_g729_adaptive_gain_control", "v210dec_class", "ff_h264_idct8_add4_8_c", "quant_tbl40", "csp.11460", "ff_aac_spectral_codes", "avg_h264_qpel16_mc31_12_c", "fft16384_vfp", "put_qpel16_mc10_c", "table.10050", "q2_vlc", "pred8x8_mad_cow_dc_l00_10", "ape_filter_fracbits", "fft32768_vfp", "vp9_model_pareto8", "ff_c93_decoder", "ff_tns_max_bands_512", "__end_bef_a_evaluation", "avg_scaled_smooth_4_c", "qua_gain_pit", "ff_aac_psy_model", "free_vlcs", "table.10617", "avg_8tap_smooth_8h_c", "ff_mpv_common_defaults", "pred8x8l_horizontal_9_c", "rv30_b_types.12012", "cvh_huffcodes5", "dvdsub_flush", "trig_hi_tail", "ff_pcm_s32le_planar_encoder", "wavpack_encode_frame", "ff_hevc_mp4toannexb_bsf", "silk_shell_blocks", "ff_biweight_h264_pixels_16_neon", "band_counts.11936", "scan_1x1", "edge_idx.13019", "search_for_ms", "bitalloc_13_codes_a", "vp3_draw_horiz_band", "mpc8_dscf0_codes", "atrac3p_ct_huff_bits1", "ff_acelp_reorder_lsf", "alac_class", "ff_thp_decoder", "ff_shrink88", "ff_dv_vlc_run", "ulti_grad", "ff_h263_intra_MCBPC_code", "mpeg4video_parse_init", "ff_mpeg12_init_vlcs", "put_no_rnd_vc1_chroma_mc4_c", "ff_vorbisdsp_init", "_DYNAMIC", "ir2_decode_plane_inter.constprop.0", "trig_lo", "fft256_neon", "ff_h264_idct8_add_9_c", "celt_beta_coef", "sample_rates", "qmat38", "vec2_huffcodes", "ff_atrac3p_generate_tones", "uni_chroma_ac_vlc_len", "add_obmc16_c", "intra_pred_5_10", "huff_a42_cb", "output_configure", "sb_noise_attenuation", "mode_code_vlc_table", "ff_vp9_parser", "put_vc1_mspel_mc01_c", "bitalloc_33_bits_a", "ff_thread_get_buffer", "ff_vorbis_decoder", "h264_v_loop_filter_chroma_9_c", "put_vc1_mspel_mc02_16_c", "on2avc_cb10_codes", "evrc_lspq_codebooks", "ff_mxpeg_decoder", "ff_dnxhd_print_profiles", "ff_dvvideo_init", "rv40_luma_dc_quant", "h264_h_loop_filter_luma_mbaff_intra_10_c", "vc1_split", "mp3_header_decompress", "ff_avg_pixels8_x2_neon", "ff_idctdsp_init_neon", "ff_aac_search_for_is", "ff_slice_thread_init", "rv34_mc_2mv", "dnxhd_1241_chroma_weight", "put_scaled_sharp_16_c", "ff_cb1_base", "ff_hevc_prev_intra_luma_pred_flag_decode", "ff_sprite_trajectory_tab", "intra_pred_vert", "pred_planar_3_10", "__aeabi_d2lz", "avg_h264_qpel16_mc10_8_c", "ff_cos_64", "__floatsisf", "diag_downright_4x4_c", "ff_dv_vlc_level", "silk_model_exc_rate", "metasound_read_bitstream", "qua_gain_7b", "ff_table_inter_intra", "qmat1D", "f_huffman_env_bal_3_0dB_bits", "ff_put_pixels16_x2_no_rnd_armv6", "put_qpel8_mc31_c", "svq1_decode_frame_header.isra.2", "lsf_cb3_16k", "ff_dca_channel_reorder_lfe", "pred8x8l_vertical_left_14_c", "ff_ivi_inverse_haar_4x4", "h_smooth.10563", "ac_vlc_descA_syms", "put_hevc_epel_uni_h_9", "ff_celt_decode_frame", "put_rv40_qpel8_mc33_c", "last_coeff_flag_offset.11555", "msrle_decode_init", "flv_class", "vp8_mbsplits", "transform_4x4_luma_10", "ff_mdec_decoder", "pred8x8l_horizontal_up_14_c", "avg_h264_qpel4_mc21_10_c", "SHUFFLE_SHIFT", "lut_nmsedec_ref", "ff_h264_chroma422_dc_dequant_idct_9_c", "pred8x8l_vertical_right_10_c", "__compound_literal.27", "vp8_idct_dc_add4y_c", "ff_h263_pred_dc", "rgtc2u_block", "ac_vlc_desc3_bits", "avg_8tap_smooth_32hv_c", "transform_add8x8_8", "sizes.11680", "put_scaled_regular_64_c", "pred8x16_dc_9_c", "put_h264_qpel8_h_lowpass_8", "ff_vp56_pre_def_mb_type_stats", "center_levels", "fixed_smr", "wmv2_class", "table1_mvy", "ff_gif_decoder", "sao_edge_restore_1_8", "table.12384", "put_hevc_epel_uni_w_hv_10", "decode_channel", "avg_h264_qpel16_mc20_8_c", "limgain.10566", "ff_metasound_mode4440", "vert_right_8x8_c", "ff_mjpeg_decoder", "put_mspel8_mc02_c", "avg_h264_qpel8_mc20_9_c", "avg_rv30_tpel8_mc20_c", "celt_qn_exp2", "ff_psy_preprocess", "swb_size_1024_16", "ff_ac3_hearing_threshold_tab", "vc1_inv_trans_4x8_dc_c", "put_vp8_bilinear16_v_c", "tns_tmp2_map_0_3", "rv40bias", "golomb_to_intra4x4_cbp", "get_qscale", "webvtt_print", "put_h264_qpel4_h_lowpass_8", "flac_decorrelate_ms_c_32", "put_h264_qpel4_h_lowpass_9", "spatial_compose_daub97i_dy", "imc_huffman_lens", "ff_ivi_dc_haar_2d", "put_rv30_tpel8_mc20_c", "gain_bw_tab", "ff_pix_abs8_armv6", "hevc_parser_close", "wmavoice_std_codebook", "bpf_6_7_coef", "on2avc_swb_start_short", "opus_frame_duration", "gray8", "pred16x16_horizontal_10_c", "put_h264_qpel16_mc12_14_c", "ff_avg_qpel8_mc11_old_c", "pred8x8l_vertical_right_9_c", "zero_hpel", "quant_lut_mul", "ff_bgmc_end", "__compound_literal.19", "bwlog_tab.12488", "rv_lum_bits", "avg_h264_qpel8_mc02_14_c", "mono_decode", "ff_hevc_put_qpel_v3_neon_8", "ff_rv34_decode_update_thread_context", "dirac_parse", "fft1024_neon", "avg_8tap_sharp_32h_c", "put_signed_rect_clamped_c", "huff_a15_xlat", "g_00", "ff_adpcm_g726_encoder", "avg_h264_qpel4_mc33_10_c", "hq_hqa_decode_init", "pred16x16_127_dc_9_c", "ff_vc1_if_mmv_mbmode_codes", "qcelp_unpacking_bitmaps_per_rate", "ff_bmv_video_decoder", "ff_comfortnoise_encoder", "__aeabi_fadd", "ipvideo_decode_block_opcode_0xB", "gif_encode_frame", "vp8_read_mv_component", "ff_hevc_pred_mode_decode", "hevc_init_context", "pix_abs8_y2_c", "dca_tmode", "put_vp8_pixels4_c", "pred4x4_vertical_8_c", "ff_hevc_merge_idx_decode", "avg_8tap_smooth_4hv_c", "swb_size_128_64", "ff_rle_encode", "ac3_decode_end", "put_h264_qpel4_mc01_12_c", "fic_qmat_lq", "avg_h264_qpel4_mc13_10_c", "get_category", "ff_vp8_h_loop_filter16_inner_neon", "ff_tdecode_header", "ff_h264_idct_add8_422_10_c", "zeromv.11169", "ff_put_pixels16_y2_no_rnd_neon", "put_h264_qpel2_mc21_12_c", "atrac3p_huff_gain_loc3_cb", "qp_start_table", "out_lo_tail", "ff_ivi_dec_huff_desc", "ff_aac_pow2sf_tab", "put_h264_qpel4_mc02_8_c", "intra_vlc_aic", "avs_decode_end", "put_pixels8_l4_8", "bitalloc_129_bits_e", "ff_h264_add_pixels8_16_c", "intra_pred_3_10", "MACEtab1", "vorbis_free", "ff_vc1_loop_filter_iblk_delayed", "ff_j_rev_dct2", "trig_lo_tail", "put_8tap_smooth_64v_c", "inter_pred_8bpp.isra.7", "ff_ac3_parser", "ungroup_3_in_7_bits_tab", "huff_a61_xlat", "ff_hqxdsp_init", "ff_huffyuvencdsp_init", "ff_h261_loop_filter", "ff_put_h264_qpel16_mc10_neon", "pred8x8l_vertical_left_9_c", "tab_cos", "division_tabs", "put_tpel_pixels_mc20_c", "vc1_decode_i_blocks", "ff_sin_128", "dca_decode_init", "ff_mlpdsp_init", "avg_h264_qpel16_mc22_14_c", "ff_noise_bsf", "dico21_isf", "ff_vp56_free", "put_hevc_qpel_hv_10", "copy_cell", "put_h264_qpel16_mc30_8_c", "get_qminmax", "ff_adpcm_adx_encoder", "tabs_20_84", "bits7", "put_8tap_smooth_4h_c", "long_term_filter.isra.1", "ff_g729_interp_filt_long", "get_tree_codes", "arith_get_model_sym", "roq_encode_frame", "ff_put_vc1_mspel_mc03_16_neon", "mode_16_16", "ff_adpcm_sbpro_2_decoder", "OFFSET", "yuv4_decode_init", "cyclTab", "svq3_decode_slice_header", "ff_decode_pitch_lag", "avg_h264_qpel8_v_lowpass_10", "ff_j_rev_dct_arm", "avg_h264_qpel8_mc00_8_c", "edge_idx.16361", "aura_decode_frame", "delta_tab_2_8", "svq1_inter_codebook_4x4", "ff_mdct_end_fixed_32", "put_h264_qpel4_mc21_12_c", "avg_h264_qpel4_mc02_8_c", "put_rv40_qpel8_mc23_c", "ff_flacdsp_init", "qmat1E", "qua_hb_gain", "ff_eac3_gaq_remap_2_4_a", "ff_sin_2048", "tgv_decode_end", "put_scaled_sharp_8_c", "huff_b07_xlat", "rawdec_class", "code_vlc", "fft_fixed_tab_neon", "encode_strip", "h264_h_loop_filter_chroma_9_c", "ff_put_vp8_epel4_h6v6_neon", "dnxhd_1238_luma_weight", "vc1_v_overlap_c", "svq1_encode_init", "ff_dca_lfe_fir0_neon", "sbr_hf_apply_noise_0", "avg_bilin_32hv_c", "long_filter_high_3800.part.4.constprop.8", "qdm2_decode_frame", "t_huffman_noise_3_0dB_bits", "ff_pam_encoder", "cinepak_encode_init", "ff_pgmyuv_decoder", "init_ralf_vlc", "coeff_token_vlc_tables", "flush", "mov_text_encode_close", "ff_vp3_h_loop_filter_neon", "ff_big_div", "ff_dfa_decoder", "ff_mpeg4_init_direct_mv", "ff_pcm_u32le_encoder", "cb1110sl0", "put_hevc_qpel_uni_hv_10", "avg_h264_qpel8_mc03_14_c", "huff_a03_cb", "ff_put_pixels8_y2_neon", "golomb_to_inter_cbp_gray", "ff_avg_rv40_qpel8_mc01_neon", "ff_vp8_v_loop_filter16_simple_neon", "ff_acelp_decode_4bit_to_2nd_delay3", "avg_h264_qpel8_mc03_10_c", "ff_eac3_decode_transform_coeffs_aht_ch", "pred4x4_vertical_vp8_c", "table.10666", "put_hevc_qpel_bi_w_hv_10", "idct_8x8_dc_9", "decode_mb_i", "h263p_encode_umotion", "avg_8tap_smooth_16hv_c", "put_xsub_rle", "intra_pred_angle.11273", "ac3_parse_init", "ff_metasound_mode0806s", "celt_band_end", "table.10670", "f_center_34.9535", "delta_tab_1_8_m10", "intra_pred_down_left", "mpeg_decode_mb.isra.11", "ff_vc1_parser", "decode_4p_track", "b_sub_mb_type_info", "sao_edge_filter_9", "avg_rv40_qpel8_v_lp_packed_s6_neon", "vp7_filter_mb_row", "atrac3p_huff_gain_loc4_cb", "SPILL_SHIFT", "ff_avg_pixels16_y2_neon", "mv_mp_mode_mx_lt", "vp8_v_loop_filter_simple_c", "table.12584", "encode_bgra_bitstream.constprop.6", "ff_mss12_slicecontext_reset", "on2avc_swb_start_mode_6_40", "amrwb_decode_frame", "on2avc_cb7_codes", "HB", "escape130_decode_frame", "rl_vlc_table.12355", "codebook_vector4_vals", "vp31_intra_c_dequant", "ccpl_huffcodes6", "silk_model_ltp_filter", "ff_cavs_filter", "ff_estimate_p_frame_motion", "rv_lum_code", "all_black", "avg_scaled_bilin_c.constprop.7", "hq_tab_21", "pred4x4_vertical_add_8_c", "avg_h264_qpel4_mc32_14_c", "pc_tbl4", "ff_flacdsp_init_arm", "dequant_lsp16i", "predictor_decode_mono_3800", "calc_rice_params", "flic_decode_init", "put_h264_qpel16_mc01_10_c", "ff_dv_frame_profile", "needs.12469", "scan3x3", "ff_add_pixels_clamped_arm", "put_8tap_sharp_4hv_c", "put_h264_qpel4_mc11_10_c", "ff_h261_mba_bits", "svq1_decode_init", "avg_h264_chroma_mc8_16_c", "table.11515", "btype2mb_type", "gain_coeff.10533", "o3", "ff_rv40dsp_init", "huffman_vlc", "default_qmat", "svq1_decode_block_intra", "vsse_intra8_c", "dvbsub_close_decoder", "vp6_coord_div", "cb1616sl0", "put_no_rnd_qpel16_mc30_c", "qp_c.11299", "av_costbl_3_sf", "mss4_decode_end", "ff_put_vp8_epel8_h4v4_neon", "codebook3", "mul_lsf.10395", "ff_cinepak_decoder", "loop_filter_h_44_16_c", "avg_rv30_tpel8_h_lowpass", "tqi_decode_frame", "ff_on2avc_scale_diff_codes", "pred8x8_128_dc_9_c", "h263_options", "first_hwaccel", "h264_split", "ff_reget_buffer", "ff_mpeg12_common_init", "qmat19", "huff_a63_cb", "ff_init_ff_cos_tabs_fixed_32", "adx_decode_flush", "rv34_idct_dc_add_c", "decode_cabac_residual_dc_internal_422.constprop.8", "ff_hevc_output_frame", "__aeabi_drsub", "pred8x8l_horizontal_filter_add_14_c", "put_hevc_pel_bi_w_pixels_9", "MACEtab4", "avg_h264_qpel8_mc13_9_c", "imx_dump_header", "qcelp_rate_half_codebook", "encode_gray_bitstream", "ff_hevc_frame_rps", "add_entry", "vert_16x16_c", "ff_irms", "qmat35", "ff_vp8_decode_frame", "ff_avg_rv40_qpel8_mc13_neon", "table0_mvy", "put_h264_qpel4_mc02_12_c", "decode_hlit", "find_quant_thread", "ff_h264dsp_init_arm", "band_table.9766", "ff_hevc_put_qpel_uw_pixels_w24_neon_8", "avg_h264_qpel8_mc10_12_c", "put_hevc_epel_bi_v_8", "put_h264_qpel2_hv_lowpass_14.constprop.25", "check_bidir_mv.constprop.6", "pcm_encode_frame", "psy_lame_window", "ff_ass_style_get", "ff_put_vp8_epel16_h6_neon", "put_hevc_qpel_v_12", "pred8x16_horizontal_add_8_c", "decode_cell_data.isra.3", "done.12149", "hl_decode_mb_complex", "decode_blck", "ff_lzw_decode_tail", "QMAT_LUMA", "cpia_decode_end", "spatial_compose_dirac53i_dy", "ff_mjpeg_decode_dqt", "av_sintbl_2_sf", "ff_mqc_initdec", "coef5_huffcodes", "ff_pcm_u16be_decoder", "avg_h264_qpel8_mc10_9_c", "ff_tiff_conf_name_type_map", "cvh_huffcodes3", "tab", "ff_rawvideo_encoder", "ff_h264_decoder", "ff_apply_motion_8x8", "f34_2_4", "avg_h264_qpel8_hv_lowpass_l2_neon", "vplayer_decoder_class", "profiles", "ansi_to_cga", "qdm2_fft_generate_tone", "atrac3p_sf_huff_xlat1", "dnxhd_encode_init", "put_rv30_tpel16_mc10_c", "mc_part_420_complex", "vp7_yac_qlookup", "__compound_literal.52", "ff_avg_dirac_pixels16_l4_c", "decode_mv_component", "ff_hevc_epel_filters", "vp8_pred16x16_prob_intra", "vp9_mv_joint_tree", "rv34_idct_add_c", "cb4448sm0", "avg_pixels16_y2_8_c", "silk_model_pitch_lowbits_mb", "delete_region_display_list.isra.6", "ff_snow_pred_block", "ff_pcm_s32be_encoder", "ff_adpcm_ima_iss_decoder", "avg_qpel16_mc30_c", "cdts", "ff_mpeg_framesize_alloc", "ff_aac_apply_main_pred", "ff_pcx_encoder", "tag_tree_decode", "ff_h264_idct_add16_10_c", "ff_motionpixels_decoder", "put_h264_qpel2_mc10_10_c", "avg_h264_qpel4_mc13_12_c", "pred16x16_horizontal_add_8_c", "ff_put_vc1_mspel_mc33_neon", "huff_b65_cb", "scales_codes", "avg_pixels2_xy2_8_c", "table.11503", "iadst_idct_8x8_add_c", "fcode_tab", "ff_alloc_picture", "decode_pce.isra.20", "huff_b65_xlat", "aac_decode_init", "ff_hevc_v_loop_filter_luma_neon", "pred16x16_vertical_add_9_c", "decode_region_intra", "frac64", "aac_parse_init", "ff_gsm_long_term_gain_tab", "mpa_huffcodes_1", "pred8x8l_128_dc_9_c", "put_no_rnd_qpel16_mc02_c", "bitplane_decoding", "ff_decode_10_pulses_35bits", "linebreak_init", "pred_angular_0_9", "ff_hq_init_vlcs", "jpeg_header", "xTab", "dc10_vlc_bits", "ff_hevc_bump_frame", "dnxhd_1256_chroma_weight", "huff_a72_cb", "dnxhd_1250_ac_bits", "put_rv40_qpel8_v_lowpass.constprop.19", "avg_h264_qpel4_mc32_10_c", "put_pixels4_xy2_8_c", "pred4x4_128_dc_9_c", "codes8", "ff_loco_decoder", "energy_mean", "pred_planar_1_12", "put_h264_qpel16_mc03_12_c", "hls_decode_entry", "vp9_decode_flush", "j_rev_dct_arm_add", "ff_hevc_put_pixels_w2_neon_8", "decompress_chunks_thread", "ff_hevc_decode_nal_vps", "pred4x4_127_dc_10_c", "put_h264_qpel2_mc20_8_c", "weight_h264_pixels16_10_c", "run7_vlc", "table.12286", "put_h264_qpel8_mc03_8_c", "pred4x4_128_dc_14_c", "avg_h264_qpel4_mc33_12_c", "ff_put_h264_qpel8_mc23_neon", "ff_put_vp8_bilin4_v_neon", "ff_bswapdsp_init", "put_hevc_qpel_uni_h_9", "put_h264_qpel16_hv_lowpass_l2_neon", "mp_get_code", "avg_8tap_regular_4h_c", "vp3_init_thread_copy", "transform", "block_runs", "block_mc", "codes4", "ff_truemotion2_decoder", "ac32_lut", "ff_h264_decode_ref_pic_marking", "huff_icc_df_bits", "bitalloc_33_bits_c", "ff_pgm_encoder", "nsse8_c", "microdvd_load_tags", "table.12287", "escape124_decode_frame", "atrac3p_huff_gain_lev1_cb", "table.12381", "weight_h264_pixels2_9_c", "qmat48", "put_hevc_qpel_uni_h_12", "index_table5", "get_bits", "ff_h264_idct_add8_10_c", "put_h264_qpel2_mc32_10_c", "y41p_encode_close", "ff_rv34_idct_dc_add_neon", "ff_remove_extradata_bsf", "decode_residual_block", "exp2b", "ff_mlp_layout", "ff_on2avc_tab_40_2", "ff_adpcm_sbpro_3_decoder", "ff_vp78dsp_init_arm", "mpa_huffbits_13", "coeff_table_token_31", "pred4x4_vertical_right_14_c", "stabilize_lsps", "put_cavs_qpel16_mc23_c", "read_extra_header", "ff_clear_block_neon", "ff_pcm_s24le_decoder", "load_matrix.constprop.15", "avg_h264_qpel4_mc00_8_c", "ff_hevc_put_pixels_w4_neon_8", "put_no_rnd_pixels16_x2_8_c", "avg_h264_qpel16_mc01_10_c", "ff_cljr_decoder", "evrc_lspq_half_codebook1", "put_hevc_qpel_bi_w_v_9", "ff_put_dirac_pixels8_l2_c", "weight_h264_pixels2_10_c", "dc10_vlc_lens", "svq3_decode_init", "ff_zigzag_direct", "trig_hi_head", "motion_vector_vlc_table", "max_pos", "quantize_and_encode_band_cost_ESC_RTZ", "__aeabi_f2ulz", "ff_eightsvx_fib_decoder", "chroma_dec", "intra_pred_plane", "ff_put_rv40_qpel8_mc10_neon", "ff_ivi_init_tiles", "sami_init", "mpegvideo_parse_init", "ff_avg_h264_qpel8_mc21_neon", "scale_rl_level", "ff_ac3_quantize_mantissas", "pred8x8_plane_12_c", "put_no_rnd_qpel8_mc32_c", "on2avc_cb3_codes", "normal_class", "table.9828", "smka_decode_init", "huff_a17_cb", "ff_dcadsp_init_arm", "avg_h264_qpel4_mc03_9_c", "ff_wmv2_scantableA", "vlc_tab_fft_tone_offset_4_huffcodes", "ff_h263_decode_frame", "decode_close_mp3on4", "ff_put_pixels8_x2_armv6", "encode_block.constprop.1", "put_rv40_qpel8_mc03_c", "vlc_tab_fft_tone_offset_1_huffbits", "ff_vc1_cbpcy_p_codes", "ff_sin_16384", "put_h264_qpel8_mc12", "evrc_lspq_full_codebook1", "ff_atrac_init_gain_compensation", "put_h264_qpel8_mc32_10_c", "ff_default_chroma_qscale_table", "bfu_amount_tab1", "flac_decode_init", "ff_on2avc_modes_40", "ff_put_rv40_qpel16_mc13_neon", "h264_find_frame_end", "ff_put_no_rnd_qpel8_mc13_old_c", "ff_mlp_filter_channel_arm", "pred4x4_horizontal_down_14_c", "put_8tap_2d_hv_c", "mc_part_422_simple_8", "avg_h264_qpel8_v_lowpass_neon", "ff_theora_decoder", "put_h264_qpel16_mc32_8_c", "ff_put_rv40_qpel8_mc31_neon", "pred8x16_vertical_9_c", "ac_vlc_desc5_bits", "run_value_bits_long", "truemotion1_decode_init", "sf_vlc", "ff_bgmc_decode", "h264_h_loop_filter_luma_mbaff_intra_14_c", "avg_no_rnd_pixels16_8_c", "atrac3p_huff_gain_loc3_xlat", "pred16x16_vertical_10_c", "svq3_pred_0", "ff_thread_release_buffer", "ff_vp6_edge_filter_ver_neon", "ff_put_dirac_pixels8_bilinear_c", "chroma422_dc_coeff_token_vlc_table", "put_h264_qpel8_mc22_10_c", "ff_mpv_generic_options", "on2avc_cb14_codes", "ff_hevc_put_pixels_w32_neon_8", "parcor_scaled_values", "ac_vlc_descA_bits", "fat_ydts", "rv40_standard_widths", "hq_tab_06", "mss4_vec_entry_vlc_syms", "fft_pass_neon", "ff_opus_parse_packet", "atrac3p_huff_gain_lev4_xlat", "ff_iir_filter_init_state", "webvtt_encode_init", "tta_decode_init", "pred8x16_mad_cow_dc_l0t_8", "render_line", "ff_mpv_decode_mb", "avg_h264_qpel8_v_lowpass_9", "synth_superframe", "vp9_default_kf_uvmode_probs", "bark_tab_s11s_64", "ff_sonic_ls_encoder", "ff_eatgq_decoder", "codec_mutex", "ff_update_duplicate_context", "ff_ac3_dec_channel_map", "avg_rv30_tpel8_mc22_c", "ff_avg_h264_qpel8_mc33_neon", "avg_h264_qpel16_mc31_10_c", "vp7_feature_index_tree", "fft8", "done.9924", "ff_adpcm_ima_wav_encoder", "ff_h264_chroma422_dc_dequant_idct_12_c", "avg_8tap_regular_8h_c", "ff_mpeg12_static_rl_table_store", "init_buffers", "ff_avg_pixels16_armv6", "xsub_encoder_init", "avg_h264_qpel16_mc30_12_c", "wmavoice_lsp16_intercoeff_b", "quantize_and_encode_band", "ff_adpcm_adx_decoder", "put_hevc_qpel_uw_neon", "inv_angle.12420", "wma_decode_superframe", "mpc8_idx52", "put_h264_qpel8_mc10_9_c", "ff_pcm_alaw_encoder", "wmavoice_gain_codebook_acb", "NR_PAR_BANDS", "pred8x16_left_dc_14_c", "ff_cga_palette", "put_h264_qpel2_mc21_14_c", "put_h264_qpel4_mc02_9_c", "ff_on2avc_pair_cb_syms", "rgb444_masks", "ff_ivi_init_static_vlc", "energy_pred_fac", "ff_rvlc_rl_inter", "decorr_stereo.constprop.8", "codebook_vector4_idx", "av_frame_class", "pred4x4_129_dc_14_c", "vc1_h_loop_filter4_c", "huff_a14_cb", "__compound_literal.9", "put_hevc_qpel_bi_w_h_9", "band_interpolation", "ittrans", "read_sbr_noise.isra.7", "estimate_dcs", "ff_lpc_end", "put_h264_qpel8_h_lowpass_neon", "bitalloc_17_codes_b", "mpa_huffcodes_6", "ff_rv34dsp_init_arm", "avg_8tap_2d_hv_c", "put_h264_qpel2_mc33_12_c", "tak_parse", "put_h264_qpel8_mc11_8_c", "msmpeg4v2_decode_motion.constprop.2", "pred8x16_horizontal_add_12_c", "codes11", "huff_a16_cb", "cb4448sl0", "ff_w97_32_c", "vlc_offs", "type30_dequant", "avs_decode_frame", "ff_simple_idct_armv5te", "dv_decode_video_segment", "qmat09", "ff_init_ff_sine_windows_fixed", "avg_h264_qpel4_mc21_14_c", "ff_vmdaudio_decoder", "rv40_h_loop_filter_strength", "int32_to_float_fmul_scalar_c", "ff_h263_encode_init", "fractional_delay_links.9639", "pitch_gain_vq", "alac_decode_frame", "shape8", "ff_get_pixels_armv6", "idct_16x16_9", "put_no_rnd_mpeg4_qpel8_v_lowpass.constprop.10", "ff_aac_sbr_init_fixed", "bark_tab_l11_512", "idct_col_put_armv5te", "pred4x4_vertical_left_rv40_c", "wmv2_idct_put_c", "ape_filter_orders", "luma_quant", "ff_mpeg1_encode_init", "rl2_decode_end", "__aeabi_ldivmod", "ff_rv34_get_start_offset", "ff_mpeg4audio_channels", "ac_vlc_desc4_bits", "pred8x8l_left_dc_9_c", "aic_mode1_vlc_bits", "cavlc_level_tab", "webvtt_new_line_cb", "ff_put_dirac_pixels32_c", "ff_h264_decode_slice_header", "put_mspel8_mc20_c", "ff_mpv_encode_init", "dc_index_offset", "ff_dca_lossy_quant", "bitlen.10574", "wmavoice_dq_lsp10r", "dnxhd_encode_picture", "ff_silk_free", "ff_put_vp8_epel4_h4v4_neon", "msmpeg4v3_class", "ff_xan_wc4_decoder", "ff_h264_ref_picture", "avg_cavs_qpel8_mc31_c", "spatial_compensation_10", "table1_level", "huff_b16_cb", "ff_ffv1_encoder", "ff_pcm_s16be_planar_encoder", "dss_sp_sf_synthesis.constprop.1", "pd_im_smooth", "ff_decode_hf_neon", "table.12583", "ls_encode_line.constprop.6", "imc_decode_close", "huff_a74_cb", "ff_avg_dirac_pixels8_c", "ff_put_h264_qpel8_mc32_neon", "bark_tab_m08_256", "ff_on2avc_pair_cb_elems", "pix_decode_frame", "ff_dvvideo_decoder", "table_data.10078", "ff_put_no_rnd_qpel16_mc11_old_c", "base_lsf.10384", "put_cavs_qpel8_mc33_c", "sbr_qmf_window_us", "ff_print_debug_info2", "hq_hqa_decode_close", "bitalloc_33_codes_f", "parse", "ff_lsp2polyf", "prescale", "hevc_decode_free", "sprite_v_double_noscale_c", "ff_h264_v_loop_filter_chroma_neon", "put_pixels16_x2_8_c", "put_h264_qpel16_mc21_8_c", "ff_eacmv_decoder", "sab_diamond_search.isra.4", "pred4x4_horizontal_up_rv40_nodown_c", "vp7_idct_dc_add4uv_c", "qtrle_encode_end", "W_tbl24", "bark_tab_m11s_256", "dvd_nav_parse_init", "a.9791", "ff_mlp_pack_output_inorder_2ch_1shift_armv6", "put_h264_qpel8_mc10_14_c", "fill_buffer.isra.6", "ff_aac_codebook_vector_idx", "table.10158", "ff_sine_window_init", "WORDS_PER_LOOP", "ff_put_pixels8_xy2_arm", "pred8x8_vertical_9_c", "pred8x8l_vertical_right_14_c", "top.13302", "bfi_decode_close", "cmap_read_palette", "coeff_abs_level_m1_offset.11556", "ff_snappy_uncompress", "cmp_hpel", "ff_put_vc1_mspel_mc11_16_neon", "avg_h264_qpel8_mc01_12_c", "compression_types", "put_no_rnd_pixels_l2", "ff_put_pixels16_neon", "left_block_options.11151", "on2avc_swb_start_mode_4_40", "chroma_dc_total_zeros_bits", "ff_hq_ac_syms", "aic_band_off", "huff_a44_cb", "qdm2_get_vlc.isra.3.constprop.12", "put_hevc_epel_h_9", "save_subtitle_set.isra.7", "pred8x16_horizontal_12_c", "ff_cavs_init_pic", "avg_h264_qpel8_mc31_8_c", "vwin64", "avg_qpel8_mc31_c", "flac_encode_close", "ff_pred8x8_hor_neon", "num_env_tab", "ff_pcm_s24le_encoder", "imc_weights1", "put_h264_qpel4_h_lowpass_12", "put_h264_qpel16_v_lowpass_9.constprop.74", "f_center_34.9638", "cf_sizes_wb", "wv_rates", "ff_mjpeg_encode_dc", "ff_sgi_decoder", "pred8x8_mad_cow_dc_0l0_9", "cvh_huffbits1", "qmat1F", "put_h264_qpel4_mc30_9_c", "ff_ivi_col_haar8", "avs_decode_init", "bitalloc_9_codes_c", "fft16", "cplscale3", "dc_16x16_c", "ff_vc1_inv_trans_8x8_neon", "put_hevc_epel_hv_10", "ff_mpeg2_frame_rate_tab", "delta_tab_1_7", "ff_generate_sliding_window_mmcos", "h264_h_loop_filter_luma_9_c", "ff_h263i_decoder", "ff_ps_ctx_init_fixed", "mc_part_420_simple_8", "ff_cavs_decoder", "quantize_and_encode_band_cost_NONE", "dvdsub_close", "idct_4x4_dc_8", "vp8_submv_prob", "alpha_tab", "pjs_decoder_class", "qmat47", "fractional_delay_links.9536", "ff_rv20_encoder", "y216_decode_init", "avg_h264_qpel8_v_lowpass_8", "dnxhd_1237_run_bits", "huff_a26_xlat", "pred8x8_vertical_add_12_c", "dvb_encode_rle2", "mode_44_40", "subviewer1_decoder_class", "ff_snow_decoder", "mpa_huff_data", "put_no_rnd_qpel8_mc10_c", "get_pixel_format", "ac_vlc_desc6_syms", "jpeg2000_decode_packet.isra.11", "vlc_tab_fft_tone_offset_4_huffbits", "put_h264_qpel16_mc22_12_c", "ff_h264_hl_decode_mb", "dss_sp_pulse_val", "avg_cavs_filt8_v_hpel", "sgirle_decode_end", "put_bilin_16h_c", "block_type_vlc", "biweight_h264_pixels16_14_c", "avg_cavs_filt8_hv_jj.isra.14", "ff_sin_1024", "ff_mlp_read_major_sync", "put_cavs_filt8_hv_qq.isra.12", "ipvideo_decode_block_opcode_0x0", "F_tbl16", "avg_h264_qpel16_mc11", "ff_rv34_decode_end", "ff_idctdsp_init_armv6", "ff_dca_xxch_decode_frame", "vp6_runv_pct", "spatial_compensation_6", "put_scaled_bilin_c.constprop.12", "vlc_tab_fft_tone_offset_2_huffbits", "ivi_mc_8x8_no_delta.constprop.3", "encode_tile", "ff_vc1_decode_blocks", "ptype_vlc_bits", "lsf_cb5_16k", "bark_tab_m22s_512", "ff_pcm_f32le_encoder", "vorbis_decode_init", "ff_thread_video_encode_frame", "pred4x4_down_left_9_c", "ff_put_no_rnd_pixels8_xy2_arm", "put_h264_qpel16_mc32_12_c", "ff_apply_vector_4x4", "entropy_decode_stereo_3930", "bw_tab.10507", "avg_vc1_mspel_mc32_c", "pred8x8_horizontal_add_9_c", "vp8_pred4x4_prob_intra", "decode_v1_vector.isra.3", "get_buffer", "ff_aac_sbr_ctx_init", "x8_h_loop_filter", "ff_put_vc1_mspel_mc20_neon", "loop_filter", "vert_4x4_c", "ff_h264_draw_horiz_band", "frame_descs", "put_h264_qpel8_mc33_12_c", "sao_band_filter_9", "avg_cavs_qpel8_mc21_c", "vp6_huff_cmp", "huff_b74_xlat", "pred8x8l_top_dc_14_c", "put_vp8_pixels16_c", "bitalloc_65_bits_c", "ff_avg_rv40_chroma_mc8_neon", "qu", "ff_sine_8192_fixed", "v210_planar_pack_8_c", "on2avc_cb15_syms", "ff_pcm_u32le_decoder", "get_block_sizes", "ff_tak_parser", "avg_rv40_chroma_mc8_c", "entropy_decode_stereo_3990", "CSWTCH.181", "ff_fc_2pulses_9bits_track1", "atrac3p_huff_gain_loc1_xlat", "gsm_parse", "bitalloc_9_codes_b", "avg_8tap_regular_8v_c", "put_qpel8_mc32_c", "huffbits3", "put_h264_qpel8_mc30_14_c", "acos_icc_invq.9529", "smvjpeg_decode_end", "table.10043", "avg_h264_qpel8_h_lowpass_14", "cb0806ss0", "put_tpel_pixels_mc01_c", "sgi_decode_init", "ff_tiff_proj_name_type_map", "fcb11s", "ff_ra_144_encoder", "mpa_huffcodes_13", "ptype_table.12161", "avg_h264_qpel16_mc30_14_c", "coeff_token_table_index.11490", "ff_rms", "ff_ac3_group_exponents", "pred8x8l_left_dc_14_c", "delta_tab_2_7_m10", "vlc_tab_type30", "put_h264_qpel2_mc03_10_c", "ff_psdsp_init_fixed", "pred4x4_127_dc_14_c", "avg_h264_qpel8_mc01_14_c", "qmat23", "avg_vc1_mspel_mc10_16_c", "ff_mpadsp_init_arm", "alloc_table_3", "ff_jref_idct2_add", "silk_pitch_max_lag", "ff_adpcm_afc_decoder", "ff_cos_128", "dico25_isf", "decode_plane", "ff_init_scantable_permutation", "vp8_decode_update_thread_context", "delta_tab_3_3", "X", "mss1_decode_end", "fft_dispatch", "warn_once.11129", "ff_movtext_decoder", "dc_left_4x4_c", "dc_lsp", "ff_avg_rv40_qpel8_mc22_neon", "vp9_col_scan_16x16_nb", "shape44s", "fat_cdts", "rv30_decode_init", "chroma422_dc_total_zeros_bits", "calc_predictor_params", "c.13832", "ff_cos_8192_fixed", "ff_h264_pred_init", "put_rv40_chroma_mc8_c", "clear_block_8_c", "put_no_rnd_qpel16_mc23_c", "ipvideo_decode_init", "ff_h263_cbpy_tab", "ff_ccitt_unpack_init", "get_rac", "ipvideo_decode_block_opcode_0x8_16", "h263p_decode_umotion", "table.12002", "ac3_extract_exponents_c", "qmat1A", "put_h264_qpel8_mc02_12_c", "put_no_rnd_qpel8_mc12_c", "avg_h264_qpel16_mc33_10_c", "swb_size_1024_24", "pred16x16_vertical_add_10_c", "cb_ma_predictor_sum_inv", "vc1_ac_tables", "ff_hevc_put_pixels_w64_neon_8", "pcx_decode_frame", "ff_dsd_lsbf_planar_decoder", "pix_fmt_rgb.10898", "tab8", "put_hevc_qpel_v_9", "golomb_to_inter_cbp", "chan_layout", "ff_mdct_calcw_c", "ff_dv_quant_offset", "row_dc_only", "mv", "tag_tree_code", "ff_pcm_f64le_encoder", "ff_xbm_encoder", "put_8tap_regular_64hv_c", "bfu_bands_t", "ff_vc1_if_1mv_mbmode_vlc", "ff_ac3_slow_decay_tab", "adpcm_encode_init", "put_h264_qpel2_mc12_14_c", "h264_h_loop_filter_luma_mbaff_intra_9_c", "ff_mpegvideoencdsp_init", "ff_hevc_put_qpel_h2v2_neon_8", "ff_put_vp8_epel8_h6v4_armv6", "weight_h264_pixels2_8_c", "pred8x8_mad_cow_dc_0lt_14", "block_num_to_ptype_vlc_num", "table.10159", "pred4x4_vertical_right_12_c", "all_pix_fmts", "ff_xface_decoder", "linear_to_alaw", "flac_decoder_class", "bitalloc_25_bits_g", "cb2224s1", "ff_adpcm_ea_r3_decoder", "put_vp8_epel16_h4_c", "put_hevc_qpel_uni_h_8", "ff_pred8x8_dc_neon", "ff_texturedsp_init", "put_8tap_smooth_32hv_c", "bit_alloc", "vc1_v_loop_filter16_c", "ff_dca_sampling_freqs", "avg_h264_qpel4_mc03_10_c", "ff_vp8_decode_init", "dss_sp_sinc", "decode_422_bitstream", "h264_h_loop_filter_luma_mbaff_12_c", "avg_8tap_regular_64v_c", "mpa_huffcodes_10", "ff_hq_quants", "cb1616s0", "null_block", "dnxhd_1250_luma_weight", "vp6_coeff_reorder_pct", "huff_a47_cb", "put_h264_qpel4_mc20_14_c", "pred4x4_dc_9_c", "ac_vlc_desc9_codes", "ff_dvdsub_decoder", "qcelp_unpacking_bitmaps_lengths", "ff_h264_decode_init", "ff_subrip_decoder", "ff_vp8_v_loop_filter8uv_armv6", "counts_diff_3980", "dnxhd_1250_ac_level", "ff_sine_2048_fixed", "ac3_defaults", "bink_decode_plane", "put_h264_qpel4_mc23_8_c", "mpa_huffcodes_8", "ff_avg_dirac_pixels32_c", "ff_atrac3p_sf_tab", "ff_mpeg2_aspect", "pred8x8_129_dc_8_c", "ff_hevc_parse_sps", "put_h264_qpel2_mc11_10_c", "auf", "vp8_h_loop_filter_inner_armv6", "put_tpel_pixels_mc22_c", "ff_h264_idct8_dc_add_14_c", "weakfilter_8", "put_vp8_epel8_h6v6_c", "ff_vc1_decoder", "ff_vp8_v_loop_filter8uv_inner_armv6", "vsad_intra16_c", "alac_encode_close", "ff_hevc_sao_offset_abs_decode", "put_vp8_bilinear16_h_c", "ff_hevc_h_loop_filter_luma_neon", "ff_flac_decoder", "$t", "ff_tiff_linear_unit_codes", "pcm_decode_frame", "avg_cavs_qpel16_mc31_c", "read_block_types", "hq_tab_03", "mpa_huffbits_15", "gain_cbs.10064", "ff_mp1float_decoder", "qmat40", "table.12003", "cb4448ss1", "h261_encode_motion", "aac_encode_end", "put_h264_qpel16_mc11", "cmp_fpel_internal", "hevc_v_loop_filter_chroma_10", "ff_h264_idct_add8_422_9_c", "last_coeff_flag_offset_8x8", "ff_dct_encode_init", "decode_pce.isra.14", "__compound_literal.38", "ff_vc1_mc_4mv_chroma", "wavesynth_init", "ff_tiff_gt_model_type_codes", "dc_codebook", "loop_filter_h_8_8_c", "read_motion_values", "put_hevc_qpel_uni_w_v_10", "ff_epzs_motion_search", "ccp_vlc", "ff_eac3_exponent_init", "ff_mlp_pack_output_inorder_6ch_0shift_armv6", "avg_h264_qpel8_mc00_12_c", "ff_wmv1_encoder", "huff_b56_cb", "ff_vc1_pred_b_mv", "ff_interp", "ff_put_h264_qpel8_mc12_neon", "decode_tns.isra.15", "ff_avg_rv40_qpel8_mc23_neon", "ff_comfortnoise_decoder", "ordered_dither.9687", "ff_lzw_decode", "silk_model_pitch_contour_mbwb10ms", "dss_sp_decode_init", "gain_levels_lfe", "atrac3p_sf_huff_bits5", "put_scaled_8tap_c.constprop.15", "ff_acelp_lp_decode", "g1_Q8", "ff_snow_horizontal_compose97i", "delta_tab_2_3", "ff_sine_512", "put_cavs_qpel16_mc32_c", "ff_wmv2_encode_mb", "ipvideo_decode_block_opcode_0xE_16", "put_vc1_mspel_mc02_c", "apply_dependent_coupling_fixed", "put_h264_qpel2_v_lowpass_10.constprop.61", "dc_left_16x16_c", "bark_tab_s08_64", "__floatundisf", "avg_rv40_qpel8_h_lowpass_neon", "ff_aac_search_for_pred", "dct_quantize_trellis_c", "huff_b64_xlat", "pixel_range_presets", "put_cavs_qpel8_mc21_c", "vp8_token_default_probs", "vp8_pred4x4_tree", "ff_mlp_parser", "ff_hevc_transform_add_4x4_neon_8", "mb_var_thread", "ff_eac3_gaq_remap_1", "predictor_decode_mono_3950", "__aeabi_uidiv", "put_no_rnd_qpel16_mc10_c", "ff_vc1_ttfrm_to_tt", "put_h264_qpel2_mc32_8_c", "wmavoice_dq_lsp16r1", "quant5_10bit", "draw_char", "put_cavs_qpel16_mc01_c", "put_h264_qpel2_h_lowpass_8", "ff_avg_h264_qpel8_mc32_neon", "put_hevc_epel_bi_w_v_8", "ff_msmpeg4_decode_motion", "vp31_filter_limit_values", "h261_mtype_vlc", "ff_mjpeg_encode_stuffing", "ff_avg_rv40_qpel8_mc12_neon", "huff_b32_xlat", "phi_fract", "cb0806sl0", "vert_right_32x32_c", "coeff_token_bits", "ff_on2avc_ctab_1", "ff_int_to_int16", "sig_coeff_offset_dc.11558", "suffix_limit.11504", "vertical_compose_daub97iH0", "celt_alpha_coef", "hq_idct_put", "vp6_def_coeff_reorder", "vp9_ac_qlookup", "silk_model_frame_type_active", "TAB26", "vlc_tab_type34", "ff_hevc_decode_short_term_rps", "ff_imdct_calc_c", "ac_vlc_descB_syms", "smacker_decode_tree", "ff_on2avc_tabs_19_40_2", "ff_dxtory_decoder", "init_done.12013", "ff_g729_parser", "binomial_window", "g726_decode_init", "put_h264_qpel4_mc03_8_c", "flac_decode_close", "__floatundidf", "table1_mv_bits", "ff_mpv_common_init_armv5te", "scalarproduct_int16_c", "put_hevc_epel_uni_v_8", "ff_hevc_cbf_luma_decode", "mss4_dc_vlc_lens", "vertical_compose_daub97iL0", "tone_cbs.10066", "dca_lfe_fir0_c", "ff_mpegvideodsp_init", "put_pixels2_8_c", "ff_h264_add_pixels4_16_c", "left_ctx.11227", "tscc2_decode_frame", "run_len", "put_hevc_epel_bi_w_v_10", "ff_hevc_qpel_filters", "codebook21", "huff_b14_xlat", "rv34_gen_vlc", "coef1_run", "qmat3D", "pred_dc_9", "vlc_tab_fft_tone_offset_3_huffcodes", "ff_gsm_ms_decoder", "ff_side_data_set_encoder_stats", "ff_aac_sbr_init", "put_no_rnd_pixels8_l4_8", "ps_hybrid_analysis_c", "cinaudio_decode_frame", "put_h264_qpel2_mc31_14_c", "flac_lpc_16_1_arm", "copy_block16_14.constprop.28", "dct_quantize_refine", "avg_8tap_smooth_32v_c", "dcpred.12334", "is_table_lsf", "__aeabi_f2d", "dnxhd_class", "ff_hevc_set_neighbour_available", "done.12027", "huff_a22_xlat", "codebook14", "ff_mp1_decoder", "delta_tab_2_1_m10", "srt_font_size_cb", "weight_h264_pixels4_9_c", "aic_table.12158", "sse16_c", "vc1_sprite_parse_transform", "put_vector", "ff_msmpeg4_encode_mb", "ff_mpa_synth_window_fixed", "tm2_read_tree", "table.12383", "chunk_name", "ff_h264_luma_dc_dequant_idct_12_c", "thr.10585", "ff_vorbis_inverse_coupling", "ff_dca_qmf_32_subbands_vfp", "ff_wmv2_encoder", "chroma_dc_total_zeros_len", "sonic_decode_frame", "f_center_20.9637", "delta_tab_1_4", "subpel_idx", "ff_v2_intra_cbpc", "intra_pred_5_9", "__fixsfdi", "put_qpel16_mc30_c", "cvectors", "put_h264_qpel8_mc11_14_c", "ff_mpv_decode_defaults", "pred8x8l_vertical_filter_add_12_c", "put_h264_qpel4_mc22_9_c", "bitalloc_65_bits_d", "ff_fft_end_fixed_32", "ff_simple_idct84_add", "ff_tiff_proj_cs_type_codes", "ff_put_h264_qpel8_mc03_neon", "put_h264_qpel2_h_lowpass_14", "ra144_encode_frame", "huff_a35_xlat", "vhvlcsize_tab", "tgq_decode_init", "ff_lpc_init", "put_vp8_epel8_h6v4_c", "lpc_refl_cb5", "codec_props", "ctables", "ff_vc1dsp_init_arm", "ff_ps_apply", "funny_diamond_search", "put_h264_qpel2_mc30_14_c", "hq_tab_02", "block_type_tab", "pred4x4_horizontal_add_10_c", "ff_cb1_vects", "avg_h264_qpel4_mc03_8_c", "vp7_h_loop_filter_simple_c", "put_float", "put_rv30_tpel8_hhv_lowpass", "put_rv40_qpel16_mc32_c", "above_ctx.11228", "put_qpel8_mc20_c", "wtf_44", "ff_amr_set_fixed_gain", "ff_nelly_get_sample_bits", "synthfilt_build_sb_samples", "codes9", "t_huffman_noise_3_0dB_codes", "celt_alg_unquant", "encode_slice_plane.isra.4.constprop.6", "ff_h264_idct_add8_12_c", "ff_ac3_ungroup_3_in_5_bits_tab", "vlc_tab_type30_huffbits", "ff_ttadsp_init", "hl_motion_420_complex", "ccitt_group3_2d_lens", "idct_row_armv6", "mc_part_444_simple_8.isra.4", "eac3_frame_expstr_index_tab", "av_costbl_1_sf", "vp5_edge_filter_ver", "ff_put_vp8_epel8_h6_neon", "hls_prediction_unit.isra.15", "ff_aac_sbr_ctx_init_fixed", "ff_hap_set_chunk_count", "vp56_rac_get_prob_branchy_armv6", "put_h264_qpel8_mc21_14_c", "ff_mjpeg_encoder", "ff_on2avc_decoder", "default_decorrelation_matrices", "ff_vc1_ttmb_vlc", "pred8x8l_vertical_filter_add_10_c", "DECAY_CUTOFF", "scale_factor_modshift", "yuv_pix_fmts", "flac_decorrelate_ls_c_32", "bitalloc_17_bits_a", "ff_vp8_h_loop_filter16_inner_armv6", "put_hevc_qpel_bi_w_v_10", "ff_vp56_init_context", "transform_4x4_luma_9", "lsp_band2", "put_hevc_qpel_uni_w_v_8", "ivi5_common_pic_sizes", "roq_decode_frame", "vp7_decode_mb_row_no_filter", "ff_vp6_edge_filter_hor_neon", "swb_size_1024_32", "huff_a67_xlat", "ff_adpcm_thp_decoder", "__floatunsisf", "convert_func", "ff_svq1_intra_codebooks", "__compound_literal.42", "ff_gsm_apcm_bits", "srt_encode_close", "huff_reader_get_symbol", "ff_sonic_encoder", "ff_avg_rv40_qpel8_mc11_neon", "avg_h264_qpel8_mc11", "ff_svq1_encoder", "ff_psy_find_group", "put_h264_qpel4_mc20_10_c", "put_h264_qpel16_mc02_8_c", "index_table4", "ff_mpeg1_encode_slice_header", "ff_cook_decoder", "put_hevc_epel_hv_12", "ff_asv_ac_ccp_tab", "ff_sin_16", "avg_pixels8_xy2_8_c", "put_rv40_qpel8_v_lowpass.constprop.18", "celt_interleave_hadamard", "avg16_c", "mpeg4_video_profiles", "hq_tab_10", "ff_frame_thread_free", "rgtc1u_block", "lsf_3_2", "raw_init_decoder", "put_h264_qpel2_mc03_9_c", "huff_a22_cb", "dca_scalefactor", "ff_put_vp8_epel16_v6_armv6", "hevc_pps_free", "realtext_decode_frame", "ff_dca_channels", "sub_left_prediction", "put_hevc_qpel_bi_w_hv_8", "ff_vp9dsp_scaled_mc_init_10", "table0_mvx", "avg_rv40_qpel16_mc03_c", "ff_vc1dsp_init_neon", "vlc_tab_tone_level_idx_mid", "codebook12", "binkb_intra_seed", "ff_decode_sbr_extension_fixed", "ff_adpcm_g726le_decoder", "__compound_literal.18", "wmavoice_dq_lsp10i", "ff_put_rv40_qpel16_mc31_neon", "biweight_h264_pixels16_9_c", "ff_vp8_h_loop_filter8uv_neon", "sbr_hf_apply_noise_3", "fft_cutoff_index_table", "thr.10575", "pred8x8l_vertical_10_c", "ff_dca_dmixtable", "ff_tiff_ortho_vert_cs_codes", "transform_add8x8_12", "put_hevc_epel_uni_w_hv_9", "hdr_vlc", "sf_codes.10062", "put_8tap_regular_32h_c", "swb_size_128_48", "decode_copy", "ptx_decode_frame", "ipvideo_decode_block", "ff_tiff_geodetic_datum_e_codes", "put_h264_qpel16_hv_lowpass_14.constprop.8", "hash.13044", "avg_bilin_16hv_c", "ff_metasound_mode1110s", "avg_cavs_qpel16_mc20_c", "bink_scan", "horizontal_compose53i", "qmat27", "mpc8_bands_bits", "prores_quant_matrices", "avg_h264_qpel16_mc01_9_c", "ff_h264_execute_decode_slices", "tr4f", "ff_ffv1_clear_slice_state", "add_hfyu_median_pred_int16_c", "ff_r210_encoder", "put_h264_qpel2_mc13_9_c", "ff_tread_tag", "vp8_pred8x8c_tree", "rd16_c", "sbr_hf_apply_noise_1", "mpl2_decode_frame", "avg_h264_qpel16_mc00_14_c", "dnxhd_1242_luma_weight", "expbits_tab", "put_h264_qpel2_mc01_8_c", "silk_lsf_weight_sel_nbmb", "mlp_decode_init", "vorbis_parser_class", "sao_edge_restore_0_9", "ts_cb_4", "run_bits", "pred8x8_horizontal_12_c", "put_hevc_epel_h_10", "cllc_decode_frame", "prores_encode_init", "ff_avg_rv40_qpel16_mc23_neon", "fft_level_index_table", "apply_prediction.isra.4", "put_rv40_qpel8_mc22_c", "ff_truespeech_decoder", "__divsi3", "fcb22m", "pred_angular_1_12", "qmat32", "ff_sine_1024_fixed", "ff_weight_h264_pixels_16_neon", "tak_decode_close", "encode_slice_plane.isra.4.constprop.7", "codebook27", "mpeg4_unpack_bframes_close", "ff_dc_lum_vlc", "__aeabi_dsub", "ff_v210_decoder", "ff_af_queue_add", "ff_atrac3p_ipqf", "x8_orient_lowquant_table", "put_hevc_epel_bi_w_v_12", "initial_coeffs_a_3800", "ff_hevc_put_pixels_w12_neon_8", "ff_prores_idct", "bitalloc_17_codes_c", "avg_h264_qpel8_mc12_14_c", "avg_8tap_regular_32h_c", "huff_iid_df1_bits", "put_h264_qpel16_h_lowpass_neon", "__compound_literal.16", "wmavoice_flush", "on2avc_decode_frame", "tscc2_ac_vlc_sizes", "ff_put_vp8_epel4_h4v4_armv6", "aac_decoder_class", "dvb_encode_rle8", "avg_cavs_qpel8_mc13_c", "decode_slice", "silk_decode_excitation.isra.1", "ff_vc1_adv_interlaced_4x8_zz", "ff_h263_inter_MCBPC_vlc", "vp9_partition_tree", "put_h264_qpel8_mc02_9_c", "ff_slice_buffer_load_line", "on2avc_cb4_syms", "ff_bethsoftvid_decoder", "decorrelation", "ff_sipr_decode_frame_16k", "ff_ac3_adjust_frame_size", "add_hfyu_median_pred_c", "table.11523", "ff_cljr_encoder", "quant9_10bit", "pred16x16_horizontal_add_14_c", "huff_a23_cb", "make_filters_from_proto", "ipvideo_decode_block_opcode_0xF", "vp9_filter_lut", "codebook10", "log2s", "ff_mp2_encoder", "d_interpolation_factors.10104", "silk_stereo_weights", "static_init_done.10461", "sf_nb_bits.10059", "avg_h264_qpel8_mc13_8_c", "__compound_literal.12", "ff_vc1_interp_mc", "avg_cavs_qpel8_mc10_c", "cb0808m0", "cb4432l1", "fcb11m", "huff_a11_cb", "ff_mv_tables", "dwt_norms", "rl_vlc_table.12017", "vp9_default_probs", "encode_picture_ls", "edge_idx.14690", "mpc8_cnk_lost", "mpa_huffbits_24", "ff_adpcm_ima_block_samples", "put_rv40_qpel16_mc31_c", "ff_ffv1_allocate_initial_states", "avg_pixels8_l4_8", "h264_h_loop_filter_luma_8_c", "ff_on2avc_modes_44", "encode_frame.part.2", "vc1_v_loop_filter4_c", "codebook_vector8", "ff_v410_encoder", "g_10", "put_h264_qpel4_mc20_9_c", "ff_draw_horiz_band", "scan_patterns.11571", "table.10669", "bits.10223", "idct_iadst_8x8_add_c", "vec1_vlc", "ff_dca_bits_per_sample", "avg_h264_qpel8_mc32_14_c", "ctx_idx_map.11331", "table.10041", "put_mspel8_mc22_c", "celt_coarse_energy_dist", "ff_put_rv40_chroma_mc4_neon", "dxt5ys_block", "offset.11295", "on2avc_cb6_bits", "huff_b37_cb", "qpel_motion_search", "codes1", "switch_buffers", "sbr_autocorrelate_c", "avg_h264_qpel8_mc31_10_c", "h264_h_loop_filter_chroma422_10_c", "ff_nelly_delta_table", "ff_put_vp8_epel8_h6v6_neon", "ff_h264_execute_ref_pic_marking", "put_no_rnd_qpel16_mc31_c", "h263p_options", "dv_weight_88", "ff_ac3_decoder", "ff_on2avc_window_long_32000", "copy_block16_9.constprop.79", "mpeg_motion_field.constprop.0", "mp3Frames", "pred8x8_mad_cow_dc_l0t_12", "intra_pred_4_9", "codebook_vector02_idx", "qmat3A", "ff_g722_apply_qmf_neon", "ff_simple_idct_add_neon", "vp8_put_bilin_v_armv6", "pred8x8l_vertical_filter_add_9_c", "ff_huffyuv_generate_bits_table", "ff_clear_fixed_vector", "avg_cavs_filt8_hv_qq.isra.22", "empty_odd_column", "ittrans16", "put_h264_qpel16_mc21_14_c", "sbr_neg_odd_64_c", "ff_h264qpel_init_arm", "eob_run_base", "ff_dca_default_coeffs", "g723_1dec_class", "delta_tab_1_6", "bl_put_epel_v4_armv6", "counts_3980", "decode_cabac_mb_ref", "cbp_masks.12236", "ff_put_pixels16_y2_neon", "huff_b56_xlat", "allocate_buffers", "ivi_mc_4x4_no_delta.constprop.1", "div6", "paf_video_decode", "tm_8x8_c", "mlp_channels", "codec_child_next", "square.12901", "bark_tab_l22s_1024", "ff_float_to_fixed24_neon", "put_hevc_qpel_uni_w_hv_8", "lev_to_cb", "ff_fc_2pulses_9bits_track1_gray", "qtrle_encode_init", "vc1_index_decode_table", "ff_msmpeg4_decode_picture_header", "put_hevc_epel_bi_w_hv_10", "part_sizes_w", "ff_hevc_put_qpel_uw_h2_neon_8", "ff_vp3dsp_init", "huff_a76_cb", "huff_b73_cb", "__aeabi_fsub", "bitalloc_33_codes_e", "avg_h264_qpel8_v_lowpass_12", "ff_put_vp8_epel4_h4_armv6", "sec_order_sizes", "ff_init_mpadsp_tabs_fixed", "dc_top_16x16_c", "pred8x8_plane_9_c", "yuv4_decode_frame", "tscc2_dc_vlc_syms", "mov_text_encode_init", "read_colorspace_details", "ff_put_qpel16_mc31_old_c", "codebook_vector0", "mss2_blit_wmv9_masked_c", "coeff_table_token_19", "frame_sizes_nb", "vhsize_tab", "qcelp_lspvq2", "huff_a17_xlat", "ff_put_rv40_qpel8_mc21_neon", "fft8_vfp", "ff_vqa_decoder", "decode_dds1", "vp9_col_scan_8x8", "ff_vc1dsp_init", "mov_text_callbacks", "rv30_loop_filter", "put_qpel16_mc01_c", "mjpegb_decode_frame", "tail_code", "ff_dct_unquantize_h263_neon", "make_bands", "ff_imdct36_blocks_fixed", "ipvideo_decode_block_opcode_0xC_16", "codebook7", "ff_dvvideo_encoder", "read_sbr_grid.isra.16", "dnxhd_1235_luma_weight", "pred8x8_horizontal_add_14_c", "pred8x16_vertical_8_c", "rv34_mb_type_to_lavc", "quant_psnr8x8_c", "twiddle.constprop.7", "gif_options", "significant_coeff_flag_offset.11554", "avg_rv40_qpel16_mc12_c", "aic_num_band_coeffs", "table.11505", "o1", "ff_dv_rl_vlc", "delta_tab_3_5", "ff_mpeg4_DCtab_chrom", "put_8tap_regular_4hv_c", "on2avc_cb11_codes", "decode_mvc2", "hq_tab_01", "ff_flv_decode_picture_header", "avg_vc1_mspel_mc21_c", "CSWTCH.45", "flac_encode_init", "__PRETTY_FUNCTION__.9761", "huff_quad_vlc_tables", "ff_mss2_decoder", "read_len_table", "imx_header.9515", "fft1024_vfp", "ff_mlpdsp_init_arm", "biweight_h264_pixels2_10_c", "huff_a35_cb", "table.11502", "ff_wmv2dsp_init", "default_blen.12848", "table0_mv_code", "silk_model_ltp_filter2_sel", "qdm2_fft_decode_tones", "ff_ac3_sum_square_butterfly_float_neon", "pred8x8_mad_cow_dc_0l0_10", "put_no_rnd_pixels8_y2_8_c", "ivi_mc", "mss3_decode_end", "huff_a04_cb", "put_h264_qpel16_mc31_8_c", "put_h264_qpel8_h_lowpass_9", "dca_parse_init", "put_vc1_mspel_mc32_16_c", "avg_qpel8_mc10_c", "bark_tab_l22_1024", "put_qpel8_mc03_c", "dct_calc_III_c", "pred8x8_127_dc_8_c", "put_h264_qpel4_mc30_8_c", "codec_child_class_next", "ff_ppm_encoder", "ff_r210_decoder", "ff_mss12_model_update", "xan_unpack", "ff_hevc_put_qpel_uw_h2v3_neon_8", "b_mb_type_info", "ff_vc1_ttblk_bits", "mpc8_decode_init", "ff_msmpeg4_encode_ext_header", "sgirle_decode_frame", "fic_decode_init", "__TMC_END__", "ff_psdsp_init_arm", "alpha_tab.9629", "put_hevc_qpel_h_10", "crc_init", "on2avc_cb13_syms", "put_h264_qpel16_mc23_14_c", "coeff_table_token_17", "table.10161", "put_h264_qpel8_hv_lowpass_8", "ivi4_common_pic_sizes", "ff_on2avc_tab_40_1", "ff_h264_remove_all_refs", "ff_on2avc_quad_cb_syms", "huffcode3", "decode_nop", "pred16x16_plane_svq3_c", "paf_audio_decode", "ff_wmv3_decoder", "ipdopd_sin.9522", "rpza_decode_end", "put_h264_qpel4_hv_lowpass_10.constprop.58", "put_vc1_mspel_mc11_c", "update_ltp", "ff_msmpeg4v3_decoder", "mss4_decode_init", "put_h264_qpel8_mc21_8_c", "ff_mpeg1_aspect", "ff_sine_window_init_fixed", "fft4096_vfp", "avg_h264_qpel8_hv_lowpass_14.constprop.2", "transform_rdpcm_10", "hevc_h_loop_filter_luma_10", "dc_top_32x32_c", "vp8_dc_qlookup", "ff_adpcm_ima_dk4_decoder", "svq3_decode_end", "shape11", "ff_cavsvideo_parser", "avg_8tap_sharp_32v_c", "coef1_huffcodes", "idct_idct_4x4_add_c", "ff_tak_decode_frame_header", "ff_tscc2_decoder", "decode_pic_hdr", "ff_rv34_inv_transform_noround_neon", "pred4x4_dc_10_c", "dnxhd_1235_run", "ac_vlc_desc7_bits", "vp9_intramode_tree", "ac_vlc_desc2_codes", "h264_h_loop_filter_chroma422_9_c", "dnxhd_decode_dct_block_10_444", "acos_icc_invq.9632", "ff_adpcm_yamaha_decoder", "hex_search", "bitalloc_65_bits_b", "ivi5_scale_quant_4x4_inter", "hap_init", "vp9_mv_class_tree", "table_mb_ptype", "__compound_literal.24", "pred8x16_vertical_14_c", "put_hevc_epel_uni_v_10", "sample_fmts", "silk_lsf_codebook_nbmb", "fft_tab_vfp", "ff_vc1_4mv_block_pattern_bits", "apply_window", "ff_shrink22", "ff_kgv1_decoder", "qmat4C", "ff_kmvc_decoder", "classic_add_chroma", "ff_mpeg_er_init", "inv_predict_4", "row_loop", "put_h264_qpel4_mc23_12_c", "ulti_codebook", "put_h264_qpel16_mc23_9_c", "ipvideo_decode_block_opcode_0x5", "pix_abs16_xy2_c", "delta_tab_2_6", "atrac3p_sf_huff_bits1", "transform_add32x32_12", "rd_strip.isra.10", "dequant4_coeff_init", "table.11516", "ff_prores_ac_codebook", "pred8x8_mad_cow_dc_l00_12", "ff_put_qpel16_mc32_old_c", "dct_sad16_c", "ff_h263dsp_init", "put_vp8_bilinear4_v_c", "on2avc_decode_init", "ff_paf_video_decoder", "ipdopd_cos.9624", "inv_predict_9", "ltp_coef", "ff_vorbis_encoder", "rl_vlc_table.11756", "pred8x8_mad_cow_dc_l00_9", "put_qpel8_mc10_c", "entropy_decode_mono_3990", "vp7_v_loop_filter8uv_c", "_fini", "pred16x16_127_dc_10_c", "silk_lsf_s2_model_sel_wb", "ff_vp9_decoder", "ff_sin_512", "msmpeg4v2_encode_motion", "ff_atrac_iqmf", "pred8x8_top_dc_9_c", "vp7_decode_init", "ff_blockdsp_init_arm", "eightsvx_decode_close", "biweight_h264_pixels4_9_c", "ff_parse_close", "put_8tap_1d_h_c", "ff_avg_h264_qpel16_mc22_neon", "avg_8tap_regular_4hv_c", "dnxhd_1238_ac_level", "ff_dirac_parser", "ff_static_rl_table_store", "ff_put_vc1_mspel_mc20_16_neon", "ff_vc1_fps_nr", "pnm_encode_init", "get_alpha_data.isra.3", "ff_alloc_entries", "scale_factor_mult", "ff_llauddsp_init_arm", "mpeg_er_decode_mb", "cinvideo_decode_frame", "swf_index_tables", "pred8x8l_top_dc_10_c", "initialized.12829", "ff_h263_encoder", "rv34_chroma_quant", "rl2_decode_frame", "put_8tap_smooth_16h_c", "ff_rtjpeg_decode_frame_yuv420", "ff_quant3bA", "gsm_flush", "avg_h264_qpel8_mc23_8_c", "put_hevc_pel_bi_w_pixels_8", "celt_freq_range", "mp_rgb_yuv_table", "fft64", "ff_adpcm_index_table", "avg_vc1_mspel_mc32_16_c", "__aeabi_d2ulz", "dnxhd_1238_ac_flags", "vp8_v_loop_filter_armv6", "cabac_context_init_PB", "ff_mjpeg_encode_picture_trailer", "table.10622", "ff_pix_abs16_armv6", "celt_freq_bands", "ff_inverse", "sbr_hf_assemble", "dc_127_8x8_c", "ff_mpeg4_clean_buffers", "stepsize_inv", "horiz_scan2x2_y", "fcb22sl", "glyph8_y", "svcd_scan_offset_placeholder", "put_cavs_qpel16_mc30_c", "ape_decode_init", "ff_wma_end", "ff_dpx_parser", "decode_5", "ff_mpa_alloc_tables", "ff_hevc_save_states", "huff_a03_xlat", "htaps", "ff_pix_norm1_armv6", "put_hevc_epel_v_12", "ff_adpcm_ima_rad_decoder", "ff_put_vp8_bilin4_hv_armv6", "rl_vlc_table.12005", "pred4x4_vertical_left_9_c", "ff_cos_512", "default_channel_map.9952", "get_diff_limited_q.isra.0", "ff_metasound_mode1616", "ff_vp3dsp_init_arm", "avg_8tap_regular_16hv_c", "__compound_literal.45", "get_fcb_param", "ff_put_rv40_qpel16_mc03_neon", "build_vlc.constprop.12", "vble_decode_frame", "ff_table1_dc_chroma", "long_codes_def", "ac3_exponent_min_c", "avg_qpel8_mc30_c", "put_h264_qpel8_h_lowpass_14.constprop.22", "ff_asv_scantab", "pred4x4_down_left_rv40_c", "ff_msmpeg4v2_decoder", "bitalloc_25_codes_a", "pred4x4_vertical_14_c", "ff_table0_dc_lum", "avg_h264_qpel4_mc10_14_c", "put_vc1_mspel_mc30_c", "avg_h264_qpel8_hv_lowpass_neon", "ff_slice_thread_free", "ff_hq_ac_bits", "division_tab3", "qmat2B", "ff_tiff_vert_name_type_map", "cb4440sm0", "coeff_table_token_7_8", "vp9_filter_tree", "rv34_output_intra", "ff_twinvq_decode_close", "mm_decode_intra", "vc1_last_delta_run_table", "atrac3p_ct_huff_xlat1", "dv_audio_shuffle525", "ff_put_h264_qpel8_mc21_neon", "ff_vp8dsp_init_armv6", "qcelp_lspvq4", "aac_encode_init", "ff_vp3_idct_add_neon", "ff_yuv4_decoder", "warned.10081", "put_h264_qpel16_mc10_9_c", "order_MODE_4k75", "huff_a57_xlat", "put_no_rnd_pixels8_x2_8_c", "ff_ac3_fixed_decoder", "ac_ccp_vlc", "quantize_lpc_coefs", "ff_mqc_length", "hann_window", "put_hevc_epel_bi_w_h_12", "encode_ac_coeffs.isra.3", "kmax_tab", "decode_p_block", "top.13320", "ff_avg_rv40_qpel16_mc33_neon", "pix_abs16_y2_c", "smvjpeg_decode_init", "table4_vlc", "huff_a75_cb", "ff_vc1_imode_codes", "search_for_quantizers_anmr", "ff_ass_decoder", "ff_ac3dsp_init_arm", "ff_indeo3_decoder", "ff_put_qpel8_mc12_old_c", "put_h264_qpel8_hv_lowpass_14.constprop.13", "avg_h264_qpel4_mc30_12_c", "copy_block16_10.constprop.62", "COUNTER", "ff_vp9dsp_intrapred_init_10", "avg_pixels8_l2_14", "ff_h264chroma_init_arm", "ff_avg_h264_qpel8_mc12_neon", "ff_pgssub_decoder", "pred_dc_10", "atrac3p_sf_huff_bits2", "xvid_idct_put", "decode_spectrum", "twiddle.constprop.6", "a.9807", "ff_msmpeg4_common_init", "put_h264_qpel4_mc12_9_c", "huff_a13_xlat", "avg_h264_qpel16_mc01_8_c", "abits_levels", "mov_text_text_cb", "put_h264_qpel16_h_lowpass_10", "dnxhd_encode_thread", "ff_rv34_idct_add_neon", "ff_mlp_pack_output", "ff_sbr_qmf_pre_shuffle_neon", "ff_ivi_decode_close", "__compound_literal.44", "ff_lpc_calc_coefs", "ff_spatial_idwt", "v410_encode_init", "put_rv40_qpel16_mc21_c", "avg_rv40_qpel16_mc21_c", "ff_dca_encoder", "ff_acelp_vectors_init", "ff_sse16_armv6", "gsm_decode_block.isra.0", "qmat24", "mpc8_scfi1_bits", "slice_decode_thread", "ff_avg_dirac_pixels8_l2_c", "tab11", "srt_text_cb", "ff_sami_decoder", "ff_sbr_hf_apply_noise_0_neon", "pred8x8l_dc_8_c", "done.11634", "put_8tap_regular_16h_c", "mpa_huffbits_12", "put_h264_qpel4_mc33_9_c", "bits2qp", ".divsi3_skip_div0_test", "entropy_decode_stereo_0000", "ff_amv_decoder", "vp31_intra_y_dequant", "h264_h_loop_filter_luma_12_c", "rv34_table_intra_secondpat", "read_quant_spectral_coeffs", "vp3_idct_end_col_neon", "ff_alac_decoder", "pred_planar_0_9", "mpa_huffbits_8", "exponential", "ff_msrle_decode", "g0_Q12", "atrac3p_huff_gain_lev2_cb", "idct_8x8_dc_12", "gsm_decode_frame", "ff_atrac3p_init_vlcs", "ff_avg_rv40_qpel8_mc33_neon", "ff_pow_0_75", "avg_h264_qpel8_mc01_9_c", "quant_tbl16", "ff_h264_check_intra_pred_mode", "ff_g722dsp_init_arm", "initialized_tables.9979", "avg_scaled_smooth_32_c", "on2avc_cb1_bits", "read_sbr_envelope", "ff_init_vlc_sparse", "avg_rv30_tpel16_mc11_c", "dnxhd_1238_ac_bits", "put_tpel_pixels_mc10_c", "put_mspel8_mc30_c", "wmv2_decode_end", "ff_msmpeg4v1_decoder", "pred8x8l_vertical_8_c", "decorr_stereo_buffer", "n8", "ff_put_qpel8_mc31_old_c", "ac16_lut", "hor_down_8x8_c", "put_hevc_qpel_hv_12", "rv10_class", "interlaced_dither_patterns", "ff_h264_idct8_add_14_c", "ff_wmv1_c_dc_scale_table", "dct_unquantize_mpeg2_intra_c", "def_lru_565", "put_h264_qpel2_hv_lowpass_12.constprop.43", "ff_tiff_geodetic_datum_codes", "avg_vc1_mspel_mc21_16_c", "huffbits", "first_bitstream_filter", "rl2_rle_decode.isra.0", "pred8x8l_dc_12_c", "xbm_decode_frame", "ff_rv30dsp_init", "ff_h264_decode_init_vlc", "ff_dca_channel_reorder_nolfe", "ws_snd_decode_init", "ff_on2avc_window_short", "dc_129_8x8_c", "codes_table.9775", "ff_vc1_init_common", "ff_audiodsp_init_neon", "ff_ivi_inverse_slant_4x4", "ff_h264_reset_sei", "ff_lpc_calc_ref_coefs", "h263_mb_type_b_map", "obmc16", "vp5_coeff_groups", "cplband", "put_scaled_sharp_4_c", "ff_put_rv40_qpel16_mc30_neon", "ff_mpa_synth_filter_float", "subband_to_qu", "codebook_vector8_idx", "avg_rv40_qpel8_v_lowpass.constprop.10", "ff_alias_pix_encoder", "ff_ivi_put_pixels_8x8", "cvh_huffcodes1", "atrac3p_huff_gain_loc1_cb", "ff_hevc_sao_merge_flag_decode", "dca_decoder_class", "h264_decode_end", "weight_h264_pixels4_14_c", "ipvideo_decode_block_opcode_0x4", "pred8x8_dc_9_c", "ff_v408_encoder", "weight_h264_pixels2_14_c", "clc_length_tab", "pred8x16_mad_cow_dc_0lt_12", "avg_tpel_pixels_mc20_c", "on2avc_swb_start_mode_5_40", "mss2_decode_init", "twinvq_read_bitstream", "pred8x16_128_dc_12_c", "gains_low", "put_h264_qpel16_mc23_12_c", "subframe_count_exact.isra.0", "put_vc1_mspel_mc13_16_c", "ccitt_group3_2d_bits", "ff_vc1_2ref_mvdata_codes", "bitalloc_13_bits_c", "put_h264_qpel4_mc01_8_c", "put_cavs_qpel8_mc12_c", "table1_mv_code", "biweight_h264_pixels4_12_c", "ff_mpeg4_encode_video_packet_header", "ff_put_h264_qpel8_mc30_neon", "ipqf_coeffs1", "ff_msmpeg4_encode_block", "fill_colmap.isra.0", "ff_vc1_simple_progressive_4x4_zz", "ff_psy_end", "raw_encode", "ff_xan_wc3_decoder", "pred4x4_vertical_left_vp8_c", "ff_h264_add_pixels8_8_c", "avg_pixels8_x2_8_c", "put_pixels8_xy2_8_c", "hadamard8_intra8x8_c", "coeff_per_sb_for_avg", "ff_avg_qpel16_mc32_old_c", "motion_vectors", "block_sequences", "roq_dpcm_encode_frame", "ff_vp8_idct_dc_add4y_armv6", "mss4_ac_vlc_syms", "ff_alac_channel_layouts", "codebook_vector6", "ff_jpegls_decoder", "table.12027", "ff_ivi_recompose_haar", "ff_mlp_pack_output_inorder_2ch_0shift_armv6", "ff_h264_idct8_dc_add_10_c", "dct_max8x8_c", "ff_rv40_weight_func_16_neon", "mpa_huffcodes_9", "cb0808sm0", "y41p_decode_init", "pred16x16_top_dc_8_c", "qcelp_g12ga", "put_scaled_sharp_32_c", "mpeg1_hwaccel_pixfmt_list_420", "celt_model_spread", "ff_jpegls_reset_coding_parameters", "bitalloc_65_codes_f", "interpolate_float", "horizontal_compose_daub97i", "j2kenc_destroy", "ff_pnm_decode_header", "codebook20", "ff_pixblockdsp_init_arm", "xan_unpack_luma", "svq1_intra_codebook_sum", "ff_mpa_synth_init_fixed", "huff_a41_xlat", "vp9_mv_fp_tree", "fcb22sm", "bink_patterns", "w_c.isra.3.constprop.4", "dscf_vlc", "on2avc_cb12_syms", "atrac3p_wl_huff_xlat2", "progressive_scan", "predict_table_init", "__aeabi_lasr", "swb_offset_128_48", "ff_put_vp8_epel8_h6v6_armv6", "opus_decode_flush", "ff_dct_unquantize_h263_intra_neon", "ff_reset_entries", "ff_h264_add_pixels4_8_c", "coeff_abs_level_transition.11561", "coeff_get_bits", "xface_decode_init", "put_h264_qpel4_mc33_12_c", "ff_h264_decode_picture_parameter_set", "iwht_iwht_4x4_add_c", "ff_hevc_parser", "pixctx_reset", "ff_hevc_put_qpel_uw_h1v1_neon_8", "gif89a_sig", "put_no_rnd_qpel16_mc22_c", "put_bilin_64hv_c", "ff_sipr_decoder", "postfilter_coeffs", "ff_h263_pred_acdc", "ict_float", "ff_vc1_pixel_aspect", "ff_h263_parser", "ff_put_no_rnd_qpel16_mc31_old_c", "sunrast_decode_frame", "ff_mpeg4_unpack_bframes_bsf", "on2avc_cb1_codes", "lz_unpack", "put_hevc_pel_bi_pixels_9", "sao_edge_filter_10", "cinepak_decode_codebook", "vertical_compose_fidelityiL0", "decode_motion", "vorbis_parse", "apply_prediction.isra.8", "ff_put_no_rnd_qpel16_mc32_old_c", "on2avc_cb8_codes", "ff_put_vc1_mspel_mc31_16_neon", "ltp_gain_values", "vcr1_decode_frame", "qmat1C", "done.10594", "ff_srt_decoder", "ff_mb_btype_vlc", "levels0", "__ashrdi3", "weight.12467", "done.11750", "gain_vlc_tabs", "ff_acelp_decode_gain_code", "fat_cdt2", "recurse_stereo", "s302m_encode_init", "table.12001", "avg_h264_qpel8_mc32_10_c", "vert_left_8x8_c", "put_h264_qpel2_mc20_10_c", "bink_intra_quant", "bark_tab_s22_128", "mpc7_idx50", "codes2", "avg_scaled_bilin_c.constprop.8", "put_h264_qpel2_mc30_8_c", "ff_ac3_fixed_allocate_sample_buffers", "vorbis_parse_setup_hdr", "__compound_literal.35", "ff_jpeg2000_init_component", "avg_vc1_mspel_mc23_c", "vp8_decode_flush", "huff_a26_cb", "avg_scaled_bilin_8_c", "avg_h264_chroma_mc1_16_c", "put_h264_qpel16_mc31_9_c", "block_index.11663", "rv34_inter_cbppat", "pred4x4_vertical_right_8_c", "ff_dct_init", "avg_bilin_2d_hv_c.constprop.22", "ff_vp8_v_loop_filter16_inner_neon", "intra_pred_2_10", "idct_8x8_8", "put_rv40_qpel8_v_lp_packed_s5_neon", "pred8x16_mad_cow_dc_0l0_9", "pred16x16_dc_12_c", "avg_bilin_32v_c", "ff_put_vc1_chroma_mc4_neon", "vc1_put_signed_blocks_clamped", "idct_idct_8x8_add_c", "ff_ralf_decoder", "ff_vc1_smooth_overlap_filter_iblk", "ff_psy_init", "ff_put_pixels16_x2_neon", "huff_a06_xlat", "vc1_inv_trans_8x4_dc_c", "vp8_put_epel_h6_armv6", "ff_iir_filter_init_coeffs", "h264_h_loop_filter_chroma422_intra_10_c", "intra_pred_3_9", "predictor_sizes", "put_h264_qpel16_v_lowpass_12.constprop.40", "mask", "mpeg1_class", "ivi4_alternate_scan_4x4", "lpc_refl_cb2", "dc9_vlc_bits", "dc_128_4x4_c", "v2_mv_vlc", "pred8x8_dc_12_c", "av_costbl_4_sf", "ff_dirac_prob_branchless", "dnxhd_mb_var_thread", "ff_acelp_interp_filter", "put_h264_qpel4_mc31_8_c", "ff_put_rv40_qpel8_mc03_neon", "dpcm_decode_frame", "avg_scaled_smooth_64_c", "dc_127_16x16_c", "__compound_literal.41", "pred8x8l_left_dc_10_c", "remove_short.constprop.10", "ff_vc1_decode_init_alloc_tables", "decode_3", "vp3_decode_init", "avg_qpel8_mc21_c", "ff_dca_channel_reorder_nolfe_xch", "subpel_filters", "ff_sqrt", "ff_ivi_dc_col_slant", "avg_bilin_4h_c", "ff_sbr_hf_g_filt_neon", "avg_rv30_tpel8_v_lowpass", "scalar_dequant_float", "qcelp_lspvq5", "ff_synth_filter_float_vfp", "put_h264_qpel2_mc13_8_c", "ff_thread_report_progress", "ff_hevc_put_qpel_h2v3_neon_8", "intra_level_aic", "on2avc_cb13_codes", "a64multi_encode_frame", "table.11985", "pred8x8_mad_cow_dc_0l0_14", "avg_h264_qpel8_mc23_10_c", "rv40_alpha_tab", "ff_dca_lfe_xll_fir_64", "betatable", "ff_on2avc_tab_10_2", "uni_DCtab_lum_bits", "ff_square_tab", "h263_mv4_search", "fill_block8_c", "avg_h264_qpel8_hv_lowpass_9", "put_h264_qpel16_mc20_8_c", "ff_hevc_set_new_ref", "ff_vc1_inv_trans_8x8_dc_neon", "ff_avg_pixels16_neon", "ff_ac3_update_bap_counts_arm", "ivi5_base_quant_4x4_intra", "avg_tpel_pixels_mc00_c", "put_hevc_pel_bi_w_pixels_10", "ivi_mb_vlc_tabs", "ff_put_vp8_pixels8_neon", "atrac3p_sf_huff_code5", "ff_vima_decoder", "ff_tta_encoder", "ff_cavs_load_intra_pred_luma", "pred8x8l_horizontal_12_c", "__compound_literal.20", "dc11_vlc_lens", "ff_aac_is_encoding_err", "put_h264_qpel16_mc02_9_c", "dca_channel_order_native.11137", "put_scaled_smooth_4_c", "ff_vc1_if_mmv_mbmode_bits", "ff_fft_end_fixed", "ff_get_2pass_fcode", "pred4x4_127_dc_9_c", "lpc_refl_cb3", "v408_decode_frame", "ff_sin_64", "code_length_code_order", "bitalloc_25_bits_f", "hevc_h_loop_filter_luma_8", "huff_a57_cb", "total_zeros_bits", "avg_rv30_tpel8_hhvv_lowpass", "fcb8sm", "put_hevc_qpel_uni_hv_12", "ssa_decode_frame", "dca_subsubframe", "ff_dvbsub_encoder", "ff_init_me", "put_hevc_qpel_uni_hv_8", "dnxhd_1235_ac_bits", "put_no_rnd_mpeg4_qpel8_h_lowpass", "avg_scaled_sharp_4_c", "ff_alac_encoder", "fcb8ss", "svq1_intra_codebook_4x2", "atrac3p_huff_tonebands_cb", "ff_a64multi_encoder", "huff_b26_cb", "put_h264_qpel16_mc13_9_c", "ff_af_queue_remove", "ff_h264_idct_add16intra_14_c", "idct_4x4_dc_12", "imdct15_half", "celt_deinterleave_hadamard", "dc_4x4_c", "ff_sin_32", "ff_svq1_packet_checksum", "mpc_SCF", "compute_imdct.isra.8", "ff_hqdsp_init", "huff_iid_dt0_codes", "ff_avg_h264_qpel16_mc11_neon", "cvh_huffbits", "boundary_strength.isra.5", "put_rv40_qpel8_h_lowpass.constprop.20", "webvtt_decode_frame", "base_five_table", "ff_rl_intra_aic", "rv40_parse_slice_header", "put_pixels8x8_c", "lut_nmsedec_ref0", "IDX1", "ff_iir_filter_free_coeffsp", "cng_decode_frame", "l_start.9878", "h264_mp4toannexb_filter_close", "__compound_literal.6", "mov_text_style_cb", "__compound_literal.25", "put_vp8_epel4_h6v6_c", "flac_channel_layouts", "ff_tiff_angular_unit_codes", "put_scaled_8tap_c.constprop.14", "ff_put_vp8_epel4_h6v4_neon", "ff_pcm_s16le_planar_encoder", "mvc_decode_init", "horizontal_compose_dirac53i", "avg_8tap_sharp_32hv_c", "svq1_inter_codebook_sum", "ts_pulse_scales", "sbr_hf_gen_c", "pred_angular_2_8", "vc1_decode_frame", "ff_inter_vlc", "tns_tmp2_map_1_4", "ff_tiff_geog_name_type_map", "tta_encode_init", "ff_fft_end", "decode_4", "ff_ac3_float_mdct_init", "bl_put_bilin_h_armv6", "invradix_tab", "silk_model_lsf_interpolation_offset", "codebook9", "ff_sine_256", "h264_h_loop_filter_luma_mbaff_10_c", "read_old_huffman_tables", "h264_h_loop_filter_chroma422_mbaff_intra_8_c", "qmat0E", "ff_smvjpeg_decoder", "put_vp8_bilinear8_h_c", "silk_lsf_s2_model_sel_nbmb", "cbrt_tab", "bitalloc_codes", "cavs_flush", "wmavoice_init_static_data", "dico1_isf", "ff_sbrdsp_init_arm", "hevc_h_loop_filter_chroma_8", "ff_adpcm_swf_encoder", "put_vc1_mspel_mc31_16_c", "TOTAL_TAPS", "LOAD_REG", "pred16x16_left_dc_8_c", "dct32_func", "save_bits", "huff_opd_df_bits", "sse4_c", "evrc_lspq_half_codebook2", "chroma422_dc_scan", "obmc8", "tscc2_dc_vlc_codes", "bitalloc_33_bits_f", "put_h264_qpel2_mc12_12_c", "bitlen.10584", "ver2_state", "ff_thread_finish_setup", "g723_1_encode_frame", "ff_slice_buffer_release", "__compound_literal.40", "mpc8_q2_codes", "table.12044", "put_h264_qpel4_mc31_9_c", "tabs_4_10", "fft4", "fft8_neon", "mb_area_start", "ff_mpeg4video_split", "cmv_decode_end", "vp8_mode_contexts", "cinvideo_decode_init", "qcelp_rate_half_bitmap", "sol_table_new", "hadamard8_diff16_c", "flush_put_bits.part.2", "ff_apply_vector_2x2", "aic_mode2_vlc_codes", "decorrelate.isra.2.constprop.20", "chroma422_dc_coeff_token_vlc", "ws_adpcm_4bit", "g729_parse", "bitalloc_maxbits", "get_bits.isra.2", "dither.9367", "ff_mlp_pack_output_inorder_6ch_1shift_armv6", "decode_slice_chroma.isra.2", "wavpack_decode_flush", "ff_mpeg4_DCtab_lum", "ff_put_qpel8_mc13_old_c", "ff_idctdsp_init", "ff_cavs_init", "default_scaling4", "ccaption_dec_class", "mpa_huffcodes_7", "h263_chroma_roundtab.10276", "wrong_run", "h264_frame_start", "ff_shrink44", "rpza_decode_init", "mov_text_encode_frame", "on2avc_cb12_bits", "pred4x4_vertical_left_8_c", "avg_rv30_tpel8_mc02_c", "put_h264_qpel16_mc33_8_c", "ff_h263_encode_picture_header", "put_vp8_epel16_v4_c", "coeff_tables", "vlc_ps", "put_h264_qpel8_hv_lowpass_14.constprop.14", "cb0808sm1", "ff_hnm4_video_decoder", "__aeabi_idiv0", "dnxhd_1235_run_bits", "map_val_34_to_20", "imc_huffman_bits", "avg_cavs_filt8_v_qpel_r", "read_code_table.isra.4", "decode_cpe", "estimate_motion_b", "avg_h264_qpel16_mc10_14_c", "smacker_decode_header_tree.isra.3", "cb2224sl1", "avg_h264_qpel16_mc13_14_c", "ff_alloc_packet", "vp8_mv_default_prob", "pred16x16_horizontal_14_c", "ff_avg_qpel8_mc12_old_c", "put_pcm_9", "apply_color_indexing_transform", "calc_bark", "idct_row_armv5te", "decode_hrd", "ff_mjpeg_encode_close", "dither_tab", "ff_init_poc", "intlist_write.isra.3", "find_headers_search_validate", "thd_channel_order", "coeff_table_token_23_24_25_26_27_28_29", "tm_16x16_c", "put_vc1_mspel_mc30_16_c", "ff_h264_sei_stereo_mode", "flac_decorrelate_rs_c_32", "ff_mpeg4_merge_partitions", "ff_thread_report_progress2", "avg_8tap_sharp_16v_c", "ff_h264_idct8_dc_add_12_c", "ff_msmpeg4v2_encoder", "ff_roq_decoder", "ff_rv40_parser", "svq1_encode_end", "vp9_intra_txfm_type", "aic_mode2_vlc", "huff_b01_cb", "ff_mpv_encode_picture", "ff_mp3_header_decompress_bsf", "encode_mb", "table.12014", "rv40_loop_filter", "ac128_lut", "ff_pred8x8_128_dc_neon", "ff_tmv_decoder", "inter_dec", "ff_clear_blocks_neon", "fft2048_vfp", "mss4_decode_dct.isra.4", "ff_mpadsp_apply_window_fixed", "ff_twinvq_decoder", "mpc7_idx31", "ff_pred16x16_vert_neon", "ff_smacker_decoder", "pred8x8l_down_left_12_c", "avg_rv40_qpel8_h_lowpass.constprop.12", "atrac3p_sf_huff_code1", "dnxhd_1241_luma_weight", "h264_h_loop_filter_chroma422_mbaff_12_c", "put_cavs_qpel8_mc11_c", "h264_v_loop_filter_luma_12_c", "v408_encode_init", "aacenc_class", "put_hevc_epel_uni_w_v_12", "put_8tap_smooth_4v_c", "gif87a_sig", "cb4440sl1", "put_bilin_8h_c", "ff_h264_idct_add8_9_c", "ct_codes.10057", "cb0808sl0", "mimic_decode_init", "ra144_decode_frame", "quant_lut", "put_h264_qpel8_mc01_14_c", "ac_vlc_desc1_codes", "put_h264_qpel4_mc10_14_c", "ff_acelp_apply_order_2_transfer_function", "read_residue", "qmat05", "ff_prores_lgpl_decoder", "alaw2linear", "sf_xlats.10063", "put_qpel16_mc20_c", "ff_sine_32_fixed", "scaling_list_data.isra.9", "pred_planar_2_12", "lfe_downsample", "ac3_max_msb_abs_int16_c", "put_rv40_qpel8_mc31_c", "ff_huffyuv_encoder", "get_bits_long.part.3", "hq_tab_07", "dec_bark_env", "ff_hevc_deblocking_boundary_strengths", "mlp_parse", "huff_opd_dt_codes", "put_hevc_pel_bi_w_pixels_12", "w53_8_c", "avg_bilin_2d_hv_c", "shape22s", "huff_b53_xlat", "dvbsub_encode", "pred4x4_128_dc_10_c", "vc1_inv_trans_4x4_c", "ff_hevcdsp_init_neon", "__extendsfdf2", "rv34_qscale_tab", "h264_h_loop_filter_chroma422_8_c", "ff_cos_8192", "put_h264_qpel16_mc10_12_c", "atrac3p_sf_huff_code3", "psy_3gpp_init", "ff_ac3_fixed_encoder", "ff_dsicinaudio_decoder", "ff_hevc_idct_32x32_dc_neon_8", "ff_mjpeg_encode_picture_header", "put_rv30_tpel16_mc21_c", "avg_h264_qpel16_mc23_10_c", "pred4x4_down_left_14_c", "wv_get_value_float", "opus_default_extradata", "ff_jpeg_fdct_islow_8", "ff_ps_add_squares_neon", "noise_table", "atrac3p_ct_huff_code1", "ff_sine_4096", "svq3_dequant_coeff", "parcor_rice_table", "ff_aac_num_swb_512", "h264_h_loop_filter_luma_mbaff_intra_12_c", "put_mspel8_mc12_c", "ff_h264_idct_add_9_c", "ff_ppm_decoder", "pred4x4_tm_vp8_c", "ff_vcr1_decoder", "evrc_lspq_codebooks_row_sizes", "put_h264_qpel8_mc23_10_c", "delta_tab_2_4", "y.13831", "avg_bilin_1d_h_c.constprop.21", "order_MODE_15k85", "mpc7_decode_init", "avg_bilin_1d_v_c", "put_no_rnd_qpel8_mc13_c", "lsf_codebooks_16k", "qmf_window", "bit16_c", "pred_dc_12", "ff_h264_decode_sei", "put_no_rnd_pixels8_xy2_8_c", "ff_adx_calculate_coeffs", "ff_msmpeg4_decode_ext_header", "mace_decode_init", "ff_thread_await_progress2", "ff_dca_xll_decode_navi", "adaptive_cb_gain170", "init", "ff_gain_exp_tab", "put_no_rnd_qpel16_mc20_c", "ff_opus_decoder", "bitalloc_12_vlc_bits", "ac_vlc_desc8_codes", "avg_h264_qpel4_mc01_8_c", "sprite_v_double_onescale_c", "huff_b33_xlat", "fft512_vfp", "put_scaled_regular_4_c", "avg_h264_qpel16_mc30_8_c", "dscf1_table.9772", "celt_pvq_u", "ff_h264_pred_init_arm", "qmat21", "ff_vc1_2mv_block_pattern_codes", "ulti_lumas", "put_h264_qpel16_hv_lowpass_neon", "header_prefix.9914", "lsf_3_1_MODE_7k95", "bitalloc_33_bits_e", "rv30_luma_dc_quant", "hevc_parse", "vp8_decode_mb_row_no_filter", "put_h264_qpel4_mc01_10_c", "avg_h264_qpel4_mc13_8_c", "hevc_mp4toannexb_close", "atrac3p_huff_gain_lev3_cb", "ff_put_vc1_mspel_mc32_16_neon", "zero_prediction_weights", "put_scaled_bilin_c.constprop.16", "bit_consumption", "cb1616ss0", "csa_table", "table.10667", "ff_put_pixels8_y2_arm", "put_h264_qpel2_mc13_12_c", "tta_decode_frame", "ac3_default_coeffs", "order_MODE_5k15", "ac_vlc_desc0_syms", "__compound_literal.21", "ff_v2_dc_chroma_table", "vlc_tab_tone_level_idx_hi1_huffcodes", "huff_ipd_dt_codes", "ccpl_huffbits2", "delta_tab_2_2_m10", "ff_put_h264_qpel16_mc13_neon", "put_mpeg4_qpel16_h_lowpass", "rdft_calc_c", "ff_mdct_init_fixed_32", "table_mb_non_intra2", "ff_ass_split_override_codes", "ff_h263_find_frame_end", "ff_vc1_4mv_block_pattern_codes", "ff_bintext_decoder", "put_hevc_pel_uni_w_pixels_10", "idcin_decode_init", "__JCR_END__", "put_h264_qpel8_mc21_9_c", "table.10625", "put_hevc_pel_pixels_10", "ydt3", "apply_long_stop_window", "copy8_c", "ac_vlc_desc7_codes", "inter_rvlc_run", "ff_h264_idct_add16intra_9_c", "delta_tab_1_8", "ff_h264_mp4toannexb_bsf", "ff_match_2uint16", "ff_mlp_pack_output_inorder_8ch_2shift_armv6", "rv30_parse_slice_header", "put_h264_qpel16_mc10_10_c", "put_h264_qpel8_mc00_14_c", "bfi_decode_init", "ac_vlc_descB_bits", "fft_level_exp_vlc", "put_hevc_qpel_h_9", "ff_ivi_init_planes", "h264_class", "ff_intrax8_common_end", "g723_1_decode_frame", "avg_h264_qpel16_mc22_10_c", "theora_decode_tables", "put_8tap_regular_8hv_c", "huff_a74_xlat", "mode2_offs", "inv_predict_1", "biweight_h264_pixels8_9_c", "put_h264_qpel16_mc21_12_c", "put_h264_qpel4_mc13_8_c", "bitalloc_129_bits_a", "quant_tab.12116", "ff_rv30_parser", "tns_tmp2_map_0_4", "mss4_decode_frame", "put_rv30_tpel16_mc22_c", "bitalloc_25_bits_a", "decode_chunks", "hqx_quant_luma", "ff_vc1_1ref_mvdata_vlc", "lag_decode_frame", "mc_block_hpel808", "W_tbl40", "ir2_decode_end", "put_h264_qpel16_v_lowpass_l2_neon", "ff_hevc_put_qpel_uw_pixels_w12_neon_8", "unpack_vlcs.isra.6", "ff_hevc_put_qpel_uw_pixels_w48_neon_8", "ff_pred16x16_dc_neon", "pcm_dvd_decode_init", "encode_superframe", "vp9_decode_frame", "qpeg_table_h", "put_h264_qpel8_mc02_14_c", "func1_names.11590", "mpeg4_encode_block", "put_cavs_qpel8_mc01_c", "rv10_decode_frame", "__compound_literal.31", "wmv1_class", "ff_vp8_dct_cat_prob", "ff_put_vp8_epel4_h6_armv6", "mc_block_hpel0816", "ff_vc1_norm2_codes", "put_h264_qpel8_mc11_12_c", "vui_sar", "h264_v_loop_filter_chroma_intra_8_c", "cb_lsp_2nd", "ff_subviewer1_decoder", "pred8x8l_down_left_8_c", "ff_decode_sbr_extension", "ff_text_decoder", "ff_txd_decoder", "ff_mp3on4float_decoder", "ff_jref_idct_add", "put_h264_qpel2_v_lowpass_8.constprop.95", "ff_h261_mv_tab", "ac_vlc_desc0_bits", "ff_mpeg4video_parser", "estimate_acs.isra.1", "hls_slice_header", "tab_log2", "ff_put_vp8_bilin8_h_armv6", "allocate_frame_buffers", "pred_16k", "mpegvideo_parse", "n", "pred8x8l_128_dc_12_c", "ff_mss12_decode_end", "ff_swb_offset_512", "put_h264_qpel2_mc02_8_c", "avg_h264_qpel4_mc32_8_c", "decode_twrp", "ff_acelp_update_past_gain", "avg_h264_qpel4_mc30_9_c", "put_scaled_bilin_8_c", "ff_vc1_norm2_bits", "put_vp8_epel8_h4v6_c", "huff_b63_cb", "spatial_compensation_5", "ff_mpv_motion", "decode_rle.isra.2", "ff_pixblockdsp_init", "ff_hevc_merge_flag_decode", "sr_1d97_float.part.1", "fft16384_neon", "put_h264_qpel4_mc03_9_c", "decode_end", "avg_vc1_mspel_mc31_16_c", "find_best_state", "ff_h264_field_end", "svq3_decode_frame", "avg_h264_qpel8_mc32_12_c", "division_tab9", "angle_by_index", "ff_put_pixels_clamped", "h264_h_loop_filter_chroma422_mbaff_intra_12_c", "ff_mpeg1_encode_mb", "avg_rv40_qpel8_mc11_c", "pred4x4_vertical_left_14_c", "mpeg_decode_frame", "encode_block", "huff_a34_cb", "put_scaled_smooth_16_c", "table2_level", "atrac3p_huff_gain_npoints1_cb", "mpa_huffbits_9", "h264_h_loop_filter_luma_14_c", "aasc_decode_frame", "put_h264_qpel4_mc03_10_c", "mov_text_color_cb", "ff_vc1_mc_1mv", "hor_32x32_c", "huff_a13_cb", "pac2_attribs", "ff_ape_decoder", "ass_decode_frame", "huff_a44_xlat", "quantize_and_encode_band_cost_SPAIR", "ac3_sum_square_butterfly_int32_c", "pred8x8_plane_8_c", "avg_h264_chroma_mc2_8_c", "decode_styl", "avg_h264_qpel4_mc23_14_c", "dirac_source_parameters_defaults", "ff_mjpeg_encode_mb", "ff_vc1_2mv_block_pattern_vlc", "decorr_mono_buffer", "bark_tab_l08_512", "mss4_init_vlc", "avg_h264_chroma_mc4_16_c", "window_grouping", "gif_decode_init", "a64_palette", "cb1616ss1", "ff_er_frame_end", "amv_class", "cb1616m1", "ff_msmpeg4v3_encoder", "dc11_vlc_bits", "ff_get_mb_score", "put_hevc_pel_bi_pixels_10", "ff_ffvhuff_encoder", "ff_pcm_s16be_decoder", "ff_iir_filter_flt", "ff_dds_decoder", "ff_mvc1_decoder", "calc_cpl_coord.part.2", "bitalloc_13_bits_b", "pred16x16_left_dc_14_c", "put_alpha_diff", "l2s_dia_search", "ff_bgmc_init", "ff_avg_h264_qpel8_mc11_neon", "avg_h264_qpel16_mc12", "ff_xan_dpcm_decoder", "put_rv30_tpel8_mc12_c", "pred8x8_horizontal_add_8_c", "idct_16x16_10", "insert_color", "ff_avui_decoder", "ff_pcm_s8_encoder", "idct_16x16_dc_9", "delta_tab_2_3_m10", "ff_vmdvideo_decoder", "put_8tap_sharp_32h_c", "vlc_tab_type34_huffcodes", "off.12844", "weight_h264_pixels16_12_c", "ff_metasound_mode2224", "huff_a55_cb", "ff_h264_chroma_dc_dequant_idct_8_c", "ff_xsub_decoder", "xa_adpcm_table", "pred4x4_128_dc_12_c", "ff_mss12_decode_init", "dst_calc_I_c", "table_4_3_value", "ff_mmvideo_decoder", "glyph4_y", "ff_mpeg1_find_frame_end", "ff_acelp_interpolate", "process_subpacket_11", "extract_header", "put_h264_qpel2_mc22_14_c", "pred8x8_vertical_12_c", "fft_stereo_exp_huffbits", "put_scaled_sharp_64_c", "vp8_luma_dc_wht_c", "read_dct_coeffs.constprop.4", "rct_int", "iac_generate_tabs", "ff_ac3_floor_tab", "b3_mantissas", "cpia_decode_init", "cos_table", "ff_tadd_bytes_metadata", "superblock_run_length_vlc_table", "bias_def", "put_h264_qpel8_mc00_9_c", "put_no_rnd_mpeg4_qpel16_v_lowpass.constprop.7", "ff_hevc_extract_rbsp", "put_no_rnd_qpel16_mc03_c", "cvh_huffcodes4", "avg_cavs_qpel16_mc13_c", "cb2224sl0", "ff_g729_interp_filt_short", "coeff_table_token_14", "ff_avg_h264_qpel16_mc12_neon", "on2avc_decode_close", "aic_y_ext_scan", "dvd_encode_rle", "mpc8_cnk", "ff_ac3_frame_size_tab", "bark_tab_l16_1024", "ivi5_scale_quant_4x4_intra", "ff_mpa_sblimit_table", "av_subtitle_rect_class", "put_h264_chroma_mc2_8_c", "ff_pcm_u16le_encoder", "crc_63", "ff_sbrdsp_init_fixed", "ff_mlp_pack_output_inorder_2ch_5shift_armv6", "put_vp8_epel4_h4v4_c", "bitalloc_5_bits_b", "put_h264_qpel8_mc12_12_c", "f_huffman_env_3_0dB_codes", "g0_Q8", "atrac1_decode_frame", "put_vp8_bilinear16_hv_c", "put_h264_chroma_mc4_16_c", "put_hevc_qpel_bi_hv_9", "mc_part_444_complex.isra.5", "vp9_col_scan_16x16", "ff_put_vp8_epel4_h4v6_armv6", "hl_decode_mb_simple_16", "decode_finish_row", "huff_a37_xlat", "decode_bgr_bitstream", "adpcm_index_table5", "ff_imx_dump_header_bsf", "quant_table", "ff_vp8_v_loop_filter8uv_inner_neon", "pred16x16_129_dc_8_c", "avg_h264_qpel16_mc30_10_c", "__ashldi3", "read_yuv_component_line.isra.3", "avail_indexes", "__do_global_dtors_aux_fini_array_entry", "aac_cb_in_map", "rv40_standard_heights", "vwin8192", "lsf_5_3", "atrac3p_sf_weights", "dvbsub_parse_close", "rv40_adaptive_loop_filter.constprop.2", "hq_tab_20", "__compound_literal.48", "avg_rv30_tpel8_hvv_lowpass", "aac_adtstoasc_filter", "put_rv30_tpel16_mc02_c", "avg_8tap_regular_64h_c", "put_h264_qpel2_mc10_8_c", "v308_decode_frame", "silk_model_pitch_lowbits_wb", "umh_search", "vp3_h_loop_filter_c", "ci_table", "ff_iir_filter_free_statep", "idct_8x8_dc_8", "basis", "vp5_ract_pct", "alphabet_sizes", "dct_unquantize_h263_inter_c", "ff_qtrle_encoder", "OFFSET_ST", "vp8_pred4x4_mode", "avg_h264_qpel4_mc01_12_c", "ff_prores_encoder", "hq_tab_11", "put_vc1_mspel_mc20_c", "ff_thread_can_start_frame", "tta_decoder_class", "run_value_bits_short", "on2avc_cb3_syms", "quantize_and_encode_band_cost_STEREO", "put_vc1_mspel_mc01_16_c", "cf_tables_2", "cvh_huffcodes6", "gray_decode", "ff_vp8dsp_init_arm", "snowenc_class", "put_pcm_10", "vect.13043", "vertical_compose_dd137iL0", "avg_h264_qpel8_mc23_14_c", "significant_coeff_flag_offset_8x8.11557", "ff_h263p_encoder", "wtf_40", "refctxno_lut", "ff_smackaud_decoder", "ipvideo_decode_block_opcode_0x1", "ff_put_vp8_epel4_v6_armv6", "prediction_table.11744", "cb2224ss0", "exponent_band_32000", "decode_tones_info", "codebook_vector4", "inv_angle.11274", "table.11681", "aac_decode_er_frame", "fcb8s", "alloc_table_1", "ff_interleaved_dirac_golomb_vlc_code", "put_h264_qpel16_mc31_14_c", "ff_pix_abs16_x2_armv6", "component.11841", "bfu_amount_tab2", "bitalloc_9_codes_a", "context_to_name", "utvideo_encode_close", "iadst_idct_16x16_add_c", "Q_fract_allpass", "coef2_huffcodes", "_GLOBAL_OFFSET_TABLE_", "avg_h264_qpel16_mc03_8_c", "ff_ac3_fixed_encode_frame", "put_8tap_sharp_8v_c", "vp3_idct_put_c", "combinatorial_table", "ff_put_pixels8x8_neon", "ac3_options", "imdct_and_windowing_eld", "put_hevc_qpel_bi_hv_8", "put_h264_qpel8_mc32_9_c", "put_hevc_pel_pixels_12", "ir2_decode_init", "dnxhd_1235_ac_flags", "pred8x8l_down_right_8_c", "cb0808s1", "put_8tap_sharp_64h_c", "put_mspel8_mc10_c", "mxpeg_decode_end", "ff_faanidct_add", "table0_level", "ff_mjpeg_decode_sos", "ff_h264_parser", "dnxhd_1251_ac_bits", "left_modifier_c", "ff_hevc_idct_16x16_dc_neon_8", "avg_h264_qpel16_mc20_10_c", "vsse8_c", "mode_44_48", "cmp_simple.isra.2", "dvbsub_parse_pixel_data_block", "s302m_encode2_frame", "wv_stereo", "cb_gain_2nd_6k4", "ff_h263_encode_mba", "swb_offset_128_24", "vq_hebap3", "sei_num_clock_ts_table", "h264_h_loop_filter_chroma_mbaff_intra_10_c", "ff_celt_init", "svq1_intra_mean", "put_h264_qpel2_mc02_14_c", "avg_h264_qpel4_mc12_10_c", "mc_block_hpel8016", "index2.12181", "avg_bilin_8h_c", "mpc8_scfi0_codes", "bitalloc_129_codes_a", "wmavoice_decode_packet", "vc1_extract_header", "ipvideo_decode_block_opcode_0x7_16", "h264_h_loop_filter_chroma_mbaff_12_c", "ff_vp78dsp_init", "put_h264_qpel16_mc33_14_c", "atrac3p_ct_huff_code3", "mpc8_q3_codes", "put_vp8_epel4_v6_c", "dct_unquantize_mpeg2_intra_bitexact", "hevc_init_thread_copy", "v308_decode_init", "lsf_3_3_MODE_5k15", "dnxhd_1250_run", "avg_bilin_4v_c", "avg_h264_qpel16_mc23_8_c", "int32_to_float_fmul_array8_c", "vp7_luma_dc_wht_dc_c", "avg_scaled_bilin_64_c", "ff_svq1_block_type_vlc", "ff_cos_512_fixed", "ff_put_vp8_pixels16_armv6", "ydt4", "ulaw2linear", "put_hevc_epel_uni_w_v_10", "ff_ayuv_decoder", "pred8x8_top_dc_12_c", "pred8x16_plane_12_c", "vp3_idct_dc_add_c", "write_slice_end", "ff_eac3_gaq_remap_2_4_b", "thread_execute", "put_8tap_smooth_32v_c", "put_rv40_qpel16_mc23_c", "put_qpel16_mc12_c", "table.10616", "ff_cavs_end", "frame_dummy", "cook_parse", "track_position", "diag_downright_32x32_c", "xface_decode_frame", "ff_ac3_window", "cng_encode_init", "huff_a11_xlat", "vp8_rac_get_sint.constprop.18", "gray16", "cng_encode_close", "put_cavs_qpel16_mc12_c", "h264_h_loop_filter_luma_mbaff_intra_8_c", "ff_put_h264_qpel8_mc31_neon", "ac_vlc_desc1_bits", "rv20_class", "avg_qpel8_mc12_c", "ff_mpeg12_vlc_dc_lum_code", "h264_h_loop_filter_chroma_intra_12_c", "avg_cavs_qpel16_mc30_c", "amrwb_decode_init", "qmat10", "scale_factor_mult2", "ff_vp9dsp_init_12", "theora_decode_init", "idct_32x32_dc_10", "bw_tab.10553", "mantissa_clc_tab", "put_vc1_mspel_mc13_c", "dnxhd_1235_ac_codes", "huffbits4", "put_h264_qpel16_mc12_8_c", "ape_flush", "qmat06", "vlc_spectral", "put_h264_qpel8_mc23_12_c", "qmat2A", "ff_h261_encode_init", "intra_rvlc_level", "avg_h264_qpel8_mc21_10_c", "get_cox", "vp9_col_scan_8x8_nb", "ff_avg_rv40_qpel16_mc13_neon", "zero_run_base", "ff_h264_decode_extradata", "ff_pcm_s24le_planar_encoder", "dct_unquantize_h263_intra_c", "huff_a04_xlat", "hevc_split", "avg_h264_qpel4_mc20_8_c", "put_rv30_tpel8_mc01_c", "msmpeg4v2_class", "ff_sine_64_fixed", "row_map.9766", "ff_ivi_decode_frame", "put_tpel_pixels_mc02_c", "mb_type_b_vlc", "ff_put_vp8_bilin8_hv_neon", "put_vc1_mspel_mc03_16_c", "srt_style_cb", "mov_text_init", "ff_put_vp8_epel4_v4_armv6", "ff_put_rv40_qpel16_mc23_neon", "ipvideo_decode_block_opcode_0x6", "ff_asv1_encoder", "ff_put_dirac_pixels32_l2_c", "avg_vc1_mspel_mc30_c", "avg_cavs_filt8_h_hpel", "avg_h264_qpel4_mc23_12_c", "ff_hevc_end_of_slice_flag_decode", "lsp2poly", "intra_run_aic", "ff_adpcm_ea_r2_decoder", "ac3_decode_transform_coeffs_ch", "ff_h264_decode_nal", "get_pixels_16_c", "put_qpel8_mc12_c", "h261_loop_filter", "put_h264_qpel4_mc31_14_c", "put_h264_qpel2_mc20_9_c", "wtype_to_wsize", "ff_tadd_string_metadata", "ff_wnv1_decoder", "put_hevc_epel_uni_w_v_9", "table1_mvx", "sbr_lf_gen", "ra288_decode_init", "ff_rv40_v_weak_loop_filter_neon", "ff_put_vp8_epel4_v4_neon", "pred4x4_vertical_add_14_c", "ff_dca_map_xxch_to_native", "ff_on2avc_ctab_4", "ff_msmpeg4_pred_dc", "vec2_huffbits", "cllc_decode_init", "avg_h264_qpel16_mc13_8_c", "atrac1_decode_end", "vp8_idct_dc_add_c", "trig_lo_head", "ff_silk_decode_superframe", "ff_wmv2_decoder", "ff_init_buffer_info", "dc_top_4x4_c", "ff_on2avc_tab_84_3", "on2avc_cb5_bits", "coeff_token_vlc_tables_size", "step_index_tables", "ff_ac3_fixed_mdct_init", "parse_palette", "ff_tns_max_bands_1024", "ivi5_scale_quant_8x8_inter", "ff_metasound_mode0808", "ff_aac_fixed_decoder", "dnxhd_1238_ac_codes", "lag_decode_end", "pred8x16_mad_cow_dc_l00_9", "mdct_long_nbits", "vp9_scans", "put_hevc_qpel_v_8", "avg_no_rnd_pixels16_xy2_8_c", "bwlog_tab.12523", "swb_offset_480_24", "hq_tab_18", "ff_hevc_flush_dpb", "fft4_vfp", "hq_tab_12", "put_qpel8_mc23_c", "put_rv30_tpel8_hvv_lowpass", "vc1_last_decode_table", "levels5", "evrc_lspq_half_codebooks", "ff_ws_snd1_decoder", "t_huffman_env_3_0dB_bits", "put_rv40_qpel8_mc32_c", "qmat28", "decode_bdlt", "decode_lspf", "dequant_lsp10i", "options", "ff_write_quant_matrix", "ff_avg_pixels16_x2_no_rnd_neon", "loop_filter_v_84_16_c", "ff_pow_0_5", "j2kenc_init", "ff_hpeldsp_init_armv6", "mpeg12_pixfmt_list_422", "bitalloc_129_codes_c", "idct", "ws_snd_decode_frame", "stereo_processing", "ac_vlc_descC_codes", "ff_aic_decoder", "put_vp8_epel16_h4v4_c", "__floatdisf", "pre_estimate_motion_thread", "vector_pow43", "avg_rv30_tpel16_mc10_c", "masks.12755", "mdct_window", "exp_table_fixed", "qmat13", "srt_font_name_cb", "ff_ac3_bit_alloc_calc_mask", "x8_ac_compensation", "gain_window", "ff_dca_inv_dmixtable", "ac3_decoder_class", "mpa_huffbits_1", "wavesynth_decode", "pred4x4_horizontal_down_8_c", "codebook23", "ff_dca_adpcm_vb", "mvc_decode_frame", "hq_tab_04", "binkb_inter_quant", "ff_sbr_autocorrelate_neon", "ff_put_h264_qpel16_mc21_neon", "ff_put_vc1_mspel_mc13_16_neon", "ff_dca_xll_decode_header", "avg_scaled_8tap_c.constprop.8", "mpc7_quant_vlc", "ff_adpcm_ima_ea_eacs_decoder", "sp5x_decode_frame", "ff_vorbis_len2vlc", "avg_h264_qpel8_mc01_8_c", "avg_scaled_bilin_4_c", "put_h264_qpel2_mc01_14_c", "add_candidate_ref", "tab12", "ff_jpeg2000dsp_init", "pulses", "sbr_hf_apply_noise_2", "put_hevc_epel_uni_w_hv_8", "put_vc1_mspel_mc22_16_c", "ff_ac3_channel_layouts", "sd_1d53", "chan_offset", "ff_tiff_gcs_type_codes", "ff_dv_print_profiles", "prores_encode_frame", "ac_vlc_descC_bits", "codebook_vector10_idx", "huff_b05_xlat", "avg_h264_qpel4_mc00_10_c", "dvdsubenc_class", "put_hevc_epel_bi_hv_10", "iterative_me", "envelope_quant_index_huffcodes", "mpeg2_vlc", "vp9_col_scan_4x4_nb", "ff_msmpeg4_coded_block_pred", "avg_pixels2_8_c", "h264_h_loop_filter_chroma_mbaff_10_c", "ff_eval_refl", "idct_32x32_8", "header_prefix444.9915", "huff_a23_xlat", "huff_a52_cb", "pred8x8l_128_dc_10_c", "put_h264_qpel16_h_lowpass_12", "bitalloc_17_bits_b", "ff_h261_encode_picture_header", "ff_ac3_bap_tab", "format_g729_8k", "text_to_ass", "analyze_stereo", "ff_put_vc1_mspel_mc21_neon", "ff_avg_qpel16_mc33_old_c", "cb1616sm1", "mpc8_q6_codes", "bitalloc_17_bits_g", "ff_h264_idct_add16intra_neon", "decode_channel_wordlen", "wmavoice_ipol2_coeffs", "fft_level_exp_alt_huffbits", "end", "get_ue_golomb.part.8", "ff_sonic_decoder", "ipvideo_decode_block_opcode_0xB_16", "srt_encode_frame", "ff_atrac3p_init_wave_synth", "ff_msrle_decoder", "avg_h264_qpel4_mc22_12_c", "bark_tab_l44_2048", "wl_codes.10052", "ac_vlc_desc0_codes", "a64multi_encode_init", "pred8x8l_horizontal_up_10_c", "pred8x8_127_dc_10_c", "celt_hadamard_ordery", "ff_yuv4_encoder", "ff_s302m_decoder", "order_MODE_12k2", "put_hevc_pel_uni_w_pixels_9", "ff_ac3_apply_rematrixing", "build_def_list.constprop.12", "put_hevc_qpel_h_8", "ff_put_qpel16_mc13_old_c", "__compound_literal.22", "ff_h263_mbtype_b_tab", "ff_spatial_idwt_buffered_init", "ac3_decode_frame", "ff_simple_idct_8", "vorbis_decode_frame", "ff_eac3_mantissa_vq", "ff_ffv1_init_slice_contexts", "sonic_encode_init", "ff_celp_filter_init", "cb4440ss0", "qmat18", "dvvideo_encode_init", "_init", "tscc2_ac_vlc_bits", "ModeAlphabet", "__aeabi_i2d", "imc_quantizer2", "avg_vc1_mspel_mc01_c", "ff_spatial_idwt_init2", "atrac3p_subband_to_num_powgrps", "avg_cavs_qpel8_mc20_c", "b2_mantissas", "ff_avg_h264_qpel16_mc10_neon", "decode_cabac_mb_skip", "ff_tta_shift_1", "ff_put_no_rnd_pixels16_xy2_arm", "ff_ass_subtitle_header_default", "ff_h264_chroma_dc_dequant_idct_10_c", "rv30_p_types.12011", "intra_vlcs", "channel_reorder_vorbis", "silk_lsf_min_spacing_wb", "put_h264_qpel4_mc22_8_c", "silk_lsf_min_spacing_nbmb", "dnxhd_decode_dct_block_8", "avg_h264_qpel16_mc23_12_c", "lsf_cb2_16k", "avg_rv40_qpel8_mc22_c", "tmv_decode_init", "ff_svq1_decoder", "spatial_compose_haari_dy", "sao_edge_filter_8", "put_h264_qpel4_mc11_8_c", "bitalloc_13_bits_a", "ff_vp8_idct_dc_add4y_neon", "format_g729d_6k4", "ff_avg_h264_qpel8_mc10_neon", "bitalloc_9_bits_b", "MPA_encode_init", "ff_intrax8dsp_init", "sample_fmts_both", "huff_a12_cb", "idct_16x16_dc_10", "routine.9671", "ff_avg_pixels8_y2_neon", "fval_tab.10181", "h264_h_loop_filter_chroma422_mbaff_8_c", "pred8x8_mad_cow_dc_0l0_12", "vert_left_32x32_c", "sao_edge_restore_1_9", "bitalloc_5_bits_a", "ff_rv40_weight_func_8_neon", "ff_iff_ilbm_decoder", "put_h264_qpel2_mc22_10_c", "rpza_decode_frame", "vp8_h_loop_filter8uv_inner_c", "ff_snow_vertical_compose97i", "ff_pcm_f32le_decoder", "ff_init_range_decoder", "ff_simple_idct_armv6", "avg_h264_qpel8_mc00_9_c", "ff_aac_adtstoasc_bsf", "ff_mqc_flush_to", "vec1_huffbits", "pred8x16_mad_cow_dc_l00_14", "put_h264_qpel4_hv_lowpass_8.constprop.92", "ff_mvtab", "srt_callbacks", "dht_segment_head", "pred4x4_horizontal_down_9_c", "pix_fmt_for_ss.10899", "put_h264_qpel16_mc01_14_c", "encode_slice", "put_h264_qpel2_mc10_9_c", "ff_mjpeg_build_huffman_codes", "bitalloc_bits", "avg_h264_qpel8_mc01", "mc_block_hpel8816", "avg_h264_qpel4_mc02_12_c", "atrac3p_huff_freq_xlat", "put_h264_qpel16_mc32_10_c", "ff_sine_1024", "h264_v_loop_filter_chroma_intra_12_c", "ff_j_rev_dct4", "ra144_encode_close", "ac3_downmix_c_fixed", "ff_put_vc1_mspel_mc30_neon", "ff_hevcdsp_init_arm", "ff_h264_cabac_tables", "dct_calc_II_c", "avg_8tap_1d_v_c", "table.10153", "avg_vc1_mspel_mc01_16_c", "ac3enc_class", "ppf_gain_weight", "cb1616sm0", "ff_imdct_half_vfp", "ff_xface_generate_face", "ff_sol_dpcm_decoder", "bitalloc_sizes", "uni_mpeg1_ac_vlc_len", "tab10", "huff_a01_xlat", "ff_hevc_put_qpel_uw_pixels_w8_neon_8", "put_mpeg4_qpel8_v_lowpass", "huff_b01_xlat", "ff_gsm_parser", "pix_abs8_x2_c", "avg_scaled_regular_8_c", "swb_size_128_8", "inv_predict_11", "put_hevc_qpel_uni_v_8", "ff_adpcm_ima_amv_decoder", "ipvideo_decode_block_opcode_0x9", "vp78_update_probability_tables", "table.12013", "tscc2_decode_init", "bitalloc_9_bits_c", "avg_cavs_qpel16_mc10_c", "put_h264_qpel4_mc23_14_c", "aura_decode_init", "pred8x8_mad_cow_dc_l0t_8", "ff_pgmyuv_encoder", "decode_slice_thread", "srt_move_cb", "ff_vc1_ttblk_codes", "h264_options", "ff_mpadsp_init", "ff_asv1_decoder", "ff_v308_encoder", "ff_dsputil_init_dwt", "tta_encode_close", "hor_up_16x16_c", "h263_chroma_roundtab.10112", "hor_up_4x4_c", "swb_size_128_96", "on2avc_cb12_codes", "pred8x8l_128_dc_14_c", "sprite_h_c", "vp9_row_scan_4x4", "huff_b32_cb", "vc1_decode_intra_block", "ff_vc1_bfraction_codes", "avg_qpel16_mc12_c", "ff_snow_encoder", "ff_init_ff_cos_tabs_fixed", "vp8_mbsplit_count", "ff_mpeg12_frame_rate_tab", "on2avc_cb2_syms", "qmat17", "idct_col4_neon", "bmv_aud_decode_frame", "ff_avg_h264_qpel16_mc30_neon", "mpeg_decode_motion", "vp3_update_thread_context", "table.12382", "tak_decode_init", "fcb44ss", "put_h264_qpel4_mc02_10_c", "sipr_decoder_init", "end_of_row_loop", "avg_h264_qpel16_mc10_9_c", "avg_rv40_qpel8_mc12_c", "v2_dc_chroma_vlc", "mpc8_q8_codes", "ff_hevc_clear_refs", "w97_8_c", "remap34", "huff_b04_cb", "avg_pixels4_x2_8_c", "qmat31", "put_hevc_qpel_uni_w_hv_10", "codebook15", "ff_prores_lev_to_cb_index", "inv_angle.11656", "q3_0_table.9773", "huffcode7", "f_huffman_env_1_5dB_bits", "put_h264_qpel2_mc33_10_c", "is_audio_command", "ff_avg_pixels8_neon", "ac_vlc_desc5_syms", "svq1_motion_component", "mvmap", "biweight_h264_pixels8_8_c", "avg_cavs_qpel8_mc01_c", "intra_pred_angle.11655", "dca_decode_block", "rv34_inter_cbp", "__frame_dummy_init_array_entry", "ff_pcm_u16le_decoder", "pred8x16_plane_9_c", "vp8_dct_cat5_prob", "avg64_c", "qmat39", "ff_hevc_put_qpel_neon_wrapper", "coeff_table_token_30", "huff_b52_cb", "ff_mpadsp_apply_window_float", "silk_pitch_offset_nb20ms", "hex.12144", "ff_init_block_index", "pred4x4_127_dc_8_c", "lsp44s", "supported_resampling", "ff_vp56_filter_threshold", "smvjpeg_decode_frame", "ff_ass_bprint_text_event", "load_matrix", "put_h264_qpel8_mc33_14_c", "qdm2_decode_sub_packet_header", "w53_16_c", "ff_interleaved_golomb_vlc_len", "ff_h264_idct_add16_12_c", "ff_simple_idct_12", "xan_decode_end", "sol_table_16", "avg_h264_qpel4_mc11_9_c", "ff_dnxhd_cid_table", "avg_h264_qpel4_mc30_8_c", "avg_8tap_regular_16v_c", "bitalloc_65_codes_d", "put_hevc_epel_uni_w_hv_12", "weight_h264_pixels4_12_c", "ff_mlp_calculate_parity", "ff_h263_encode_motion_vector", "shape8s", "vp7_mv_default_prob", "ff_nelly_dequantization_table", "ff_vorbis_floor1_render_list", "pmmp", "tta_decode_close", "ff_vc1_mbmode_intfrp", "ff_acelp_fc_pulse_per_track", "ff_vp78dsp_init_armv6", "mpc7_idx30", "mpa_huffcodes_24", "dnxhd_defaults", "decode_cabac_residual_dc_internal", "vsse_intra16_c", "radix_sort", "get_rrp", "mpc8_q5_bits", "hl_motion_420_simple_8", "ff_binkaudio_dct_decoder", "div6.11301", "put_8tap_regular_64v_c", "ff_fft_offsets_lut", "dirac_frame_rate", "ff_rv34_decode_init", "ff_blockdsp_init_neon", "x8_ac0_highquant_table", "on2avc_cb4_bits", "ff_vc1_subblkpat_bits", "ccpl_huffbits", "pred8x16_horizontal_add_14_c", "ff_tadd_rational_metadata", "put_8tap_sharp_4v_c", "avg_h264_qpel16_mc12_8_c", "ff_ra_288_decoder", "ff_put_vp8_epel8_v6_neon", "delta_tab_3_5_m10", "ff_acelp_interpolatef", "put_hevc_qpel_uni_v_10", "x8_dc_lowquant_table", "ff_asv2_decoder", "ape_decode_close", "mcc_weightings", "ff_h261_encode_mb", "ff_truehd_decoder", "ff_er_add_slice", "coeff_table_token_18", "mppm", "build_basic_mjpeg_vlc", "ff_rtjpeg_init", "ff_h263_loop_filter", "tables_data", "add_bytes_c", "on2avc_cb14_syms", "__compound_literal.8", "pred4x4_top_dc_9_c", "ff_avg_h264_chroma_mc2_neon", "ff_bmp_decoder", "aasc_decode_end", "ff_h263_decode_init_vlc", "ff_metasound_mode4432", "put_h264_qpel16_h_lowpass_neon_packed", "initial_coeffs_3930", "ff_metasound_mode0808s", "ff_avg_h264_qpel16_mc03_neon", "huff_a46_cb", "mp_decode_layer3", "ff_hevc_log2_res_scale_abs", "j_ac_vlc", "order_MODE_18k25", "decorr_stereo_quick", "ff_table0_dc_chroma", "put_vp8_epel8_v4_c", "ivi4_quant_8x8_intra", "__fixunsdfdi", "worker", "rv34_table_intra_cbp", "ff_avrn_decoder", "ff_alias_pix_decoder", "put_hevc_pel_bi_pixels_8", "flac_decorrelate_rs_c_16p", "vlc_initialized.9764", "ff_free_vlc", "ff_put_vp8_pixels4_armv6", "avg_cavs_filt8_hv_ff.isra.16", "put_h264_qpel4_mc00_8_c", "put_bilin_64v_c", "put_rv40_qpel8_v_lowpass.constprop.17", "h264_h_loop_filter_chroma_intra_10_c", "silk_model_pitch_lowbits_nb", "sign_table", "ff_dca_channel_reorder_lfe_xch", "cf_table", "vp9_default_scan_32x32", "default_scaling8", "set_default_scaling_list_data", "huff_a52_xlat", "pred16x16_horizontal_9_c", "ff_biweight_h264_pixels_4_neon", "atrac3p_huff_wav_ampsf2_xlat", "idct_8x8_10", "cb_gain_1st_8k", "imc_huffman_sizes", "avg_h264_qpel16_mc12_10_c", "parse_nal_units", "tab_mode_idx", "mp2_defaults", "read_filter_params", "atrac3p_sf_huff_xlat5", "HA", "put_vp8_epel4_h4v6_c", "put_h264_qpel16_mc30_14_c", "dct_unquantize_mpeg1_inter_c", "avg_scaled_8tap_c.constprop.20", "pred8x8_vertical_add_10_c", "put_hevc_qpel_bi_w_v_12", "ff_hevc_put_pixels_w16_neon_8", "put_pixels2_xy2_8_c", "ff_sin_4096", "mc_block_hpel008", "s302m_class", "ff_mpeg1video_decoder", "run_value_bits", "put_h264_qpel2_v_lowpass_14.constprop.26", "avg_h264_qpel8_mc31_12_c", "f20_0_8", "vp8_h_loop_filter8uv_c", "vlc_tab_diff_huffcodes", "avg_rv40_qpel16_mc22_c", "vp8_h_loop_filter16_inner_c", "vp6_fdv_pct", "table.10665", "ff_wma_run_level_decode", "lsf_5_4", "avg_8tap_smooth_4v_c", "h264_h_loop_filter_chroma_intra_14_c", "table.11753", "fft128_neon", "dv100_qstep.10053", "dvb_encode_rle4", "put_vp8_epel4_h6_c", "ff_imdct_calc_neon", "synth_filter_float", "table.10042", "silk_ltp_filter2_taps", "ff_pix_sum_armv6", "ff_startcode_find_candidate_c", "pred8x16_horizontal_add_10_c", "ff_put_dirac_pixels16_c", "get_block_bits", "put_vp8_pixels8_c", "ct_nb_bits.10054", "put_hevc_epel_bi_h_10", "chroma_dc_coeff_token_vlc", "silk_pitch_offset_mbwb20ms", "latm_decode_init", "put_h264_qpel16_h_lowpass_9", "ff_mpv_export_qp_table", "ff_vc1_parse_frame_header", "crc_2D", "ff_vc1_subblkpat_codes", "put_rv30_tpel16_mc12_c", "ff_put_rv40_qpel8_mc01_neon", "ff_avg_pixels8x8_c", "ff_psy_preprocess_end", "ff_ac3_exponent_min_neon", "pred16x16_vertical_14_c", "dxt4_block", "dequant_1bit", "ff_sgirle_decoder", "ff_dca_ext_audio_descr_mask", "mc_part_422_simple_16", "done.12034", "horizontal_compose_fidelityi", "inv_predict_3", "mpc7_idx51", "huff_b41_cb", "put_h264_qpel2_mc00_10_c", "ff_avg_h264_qpel8_mc01_neon", "__compound_literal.29", "sol_table_old", "coeff_table_token_16", "encode_dvd_subtitles", "ff_qdraw_decoder", "vorbis_floor1_decode", "scale.9820", "ff_h264_init_dequant_tables", "ff_simple_idct_neon", "put_h264_qpel2_h_lowpass_12", "__fixdfdi", "delta_tab_3_4", "ff_mpeg_er_frame_start", "ff_h261_get_picture_format", "put_qpel16_mc02_c", "ff_faandct248", "ff_on2avc_window_long_24000", "qua_gain_6b", "avg_cavs_qpel16_mc33_c", "avg_vc1_mspel_mc30_16_c", "bitalloc_7_bits_c", "pred16x16_horizontal_8_c", "fft8192", "dnxhd_1235_chroma_weight", "put_h264_qpel2_mc03_8_c", "bark_tab_s16_128", "ff_simple_idct_add_armv6", "ff_put_no_rnd_qpel8_mc31_old_c", "put_h264_qpel8_mc03_12_c", "lsf_3_3", "ff_pred_weight_table", "imc_decode_init", "sd_1d97_float", "ff_print_debug_info", "dfa_decode_init", "atrac3p_sf_shapes", "vp9_decode_free", "dvvideo_encode_frame", "mpa_huffbits_16", "g723_1_encode_init", "lsf_5_1", "dvbsub_decode", "ff_frame_thread_encoder_init", "pixfmt_rgb24", "cavs_filter_ch_c", "avg_8tap_smooth_64v_c", "ff_dca_lossless_quant", "dds_decode", "prores_idct_put_c", "adx_encode_frame", "huff_a36_xlat", "cavsvideo_parse", "put_hevc_qpel_bi_w_h_8", "vec2_vlc", "rv34_inv_transform_dc_noround_c", "ready_8", "vp5_edge_filter_hor", "counts_3970", "ff_h264_decode_seq_parameter_set", "ff_aac_swb_size_1024_len", "critical_freq", "avg_qpel8_mc02_c", "put_rv40_qpel16_mc01_c", "ff_rpza_decoder", "put_bilin_2d_hv_c", "eac3_decoder_class", "ff_ass_add_rect", "ff_flac_decode_frame_header", "dnxhd_1251_ac_flags", "ff_sbr_apply", "floor_classes", "shift", "flac_decorrelate_indep_c_16p", "hevc_v_loop_filter_chroma_12", "ff_eac3_default_cpl_band_struct", "avg_scaled_8tap_c.constprop.19", "get_ue_golomb_long", "cook_decode_frame", "decode_residual.isra.19", "v1_decoders", "gif_encode_init", "pred8x8_vertical_10_c", "huff_b14_cb", "hq_tab_17", "ff_fft_init_fixed_32", "mpa_quad_codes", "QMAT_CHROMA", "ff_thread_decode_frame", "celt_bit_deinterleave", "ff_vp8_decoder", "decode_user_data", "hevc_v_loop_filter_luma_8", "rv40_filter_clip_tbl", "atrac3p_huff_gain_lev3_xlat", "pred8x16_mad_cow_dc_0lt_10", "ff_jpeg2000_sigctxno_lut", "avg_rv40_qpel8_mc32_c", "put_bits.constprop.7", "ff_golomb_vlc_len", "ff_proresdsp_init", "bmv_aud_mults", "ff_h264_luma_dc_dequant_idct_14_c", "intra_pred_2_9", "__aeabi_uidivmod", "ff_hevc_hls_mvd_coding", "codebook1", "binkb_num", "ff_avg_vc1_chroma_mc8_neon", "scalefactor_inv", "ff_rv40_h_loop_filter_strength_neon", "ff_llviddsp_init", "decode_frame_header", "ff_vc1_imode_bits", "ff_wmv1_decoder", "ivi5_base_quant_8x8_intra", "ff_mpeg4_dc_threshold", "uni_ac_vlc_len", "vp3_decode_frame", "ff_mdct_win_fixed", "alloc_frame", "ff_adpcm_ima_qt_decoder", "ff_put_pixels8_x2_neon", "dnxhd_1237_luma_weight", "put_h264_qpel4_mc00_12_c", "ff_ivi_mc_avg_8x8_no_delta", "put_h264_qpel8_mc21_12_c", "run_to_cb", "inv_angle.12038", "ff_dsd_msbf_decoder", "wavpack_encode_sample", "put_h264_qpel4_mc13_12_c", "pred8x8_left_dc_rv40_c", "hpf_31_poles", "thread_execute2", "loop_filter_v_16_16_c", "bitalloc_65_codes_a", "ac3_sum_square_butterfly_float_c", "index2.12197", "ipvideo_decode_frame", "ff_mpeg1video_encoder", "vc1_decode_i_blocks_adv", "huff_b35_xlat", "rgtc2s_block", "ff_put_vp8_bilin8_v_armv6", "ff_twinvq_decode_init", "ff_tta_filter_init", "read_and_decode_spectrum", "fixed_motion_vector_table", "ff_ac3_float_allocate_sample_buffers", "svq3_dct_tables", "atrac3p_ct_huff_bits3", "ff_fft_fixed_calc_neon", "horizontal_compose_dd137i", "ff_vp8_luma_dc_wht_dc_armv6", "quant_lut_add", "decode_rice", "ceil_log2", "ff_v2_dc_lum_table", "the_end", "mp_decode_end", "pix_sum_c", "tscc2_quants", "unrefcount_frame.isra.3", "avg_h264_qpel8_mc20_8_c", "mode_08_08", "ff_huff_gen_len_table", "ff_slice_buffer_init", "postfilter.constprop.10", "silk_pitch_offset_mbwb10ms", "put_cavs_filt8_hv_ii.isra.8", "huff_a41_cb", "zero_dst.12671", "swb_size_128_24", "avg_h264_qpel4_mc12_8_c", "decode_ham_plane32", "f_huffman_env_bal_3_0dB_codes", "search_for_quantizers_fast", "transform_add4x4_9", "table.12015", "ac_vlc_desc7_syms", "ff_dpx_decoder", "put_h264_qpel16_v_lowpass_8.constprop.91", "rv30_decode_mb_info", "ff_rdft_init", "put_h264_qpel2_mc32_12_c", "ff_cdgraphics_decoder", "flac_decorrelate_indep_c_16", "cdg_decode_init", "asv2_level_vlc", "ff_msmp4_mb_i_table", "sf_delta_lut", "ff_h264_direct_ref_list_init", "gain_levels", "huff_b77_xlat", "vc1_parse", "hq_tab_16", "codebook_vector2", "rv34_mb_bits_sizes", "vlc_tab_type30_huffcodes", "pred_planar_2_8", "spatial_compensation_4", "shuffle_16", "ff_diff_pixels_armv6", "avg_bilin_1d_h_c", "ff_escape130_decoder", "ff_pcm_u32be_decoder", "put_hevc_qpel_neon", "out_hi_tail", "pred4x4_horizontal_12_c", "avg_rv40_qpel8_mc31_c", "ff_hqx_init_vlcs", "vp8_init_frames", "ff_dnxhd_find_cid", "ff_tta_shift_16", "put_h264_qpel8_mc22_8_c", "bitalloc_129_bits_g", "ff_bfi_decoder", "dvdsub_parse_init", "mpeg2_dc_scale_table2", "avg_h264_qpel8_h_lowpass_9", "on2avc_cb9_syms", "avg_h264_qpel16_mc32_14_c", "band_vlc", "atrac3_decode_close", "pred16x16_plane_14_c", "pred8x16_mad_cow_dc_l00_12", "ff_vc1_inv_trans_4x4_dc_neon", "vlc_tab_fft_tone_offset", "ff_aac_latm_decoder", "ff_wmav2_encoder", "pred4x4_top_dc_12_c", "ff_aac_tableinit", "avg_8tap_1d_h_c", "ff_vc1_decode_sequence_header", "h264_er_decode_mb", "aac_channel_layout_map", "ff_acelp_weighted_vector_sum", "vp7_mode_contexts", "lsp16", "dvvideo_decode_frame", "hevc_decode_flush", "avg_bilin_64h_c", "ff_init_cabac_decoder", "LOAD_BANK", "ff_flac_encoder", "pred4x4_horizontal_down_12_c", "ff_pcm_zork_decoder", "unpack_parse_unit.isra.0.part.1", "put_rv40_qpel8_h_lowpass.constprop.22", "ptype2mb_type", "wmavoice_decode_end", "call_weak_fn", "srt_cancel_overrides_cb", "k_to_i_34", "mpa_huffcodes_3", "put_bilin_4h_c", "draw_line.constprop.4", "ff_pcm_s24be_encoder", "mpeg2_options", "ljpeg_encode_close", "ff_put_vc1_mspel_mc01_neon", "v210_planar_unpack_c", "fcb22s", "coeff_token_len", "qoffset_intra_tab", "init_mv_table", "avg_qpel16_mc02_c", "vwin4096", "__end_row_loop", "zeromv.11124", "vp5_vmc_pct", "ff_metasound_mode4440s", "gain_xlats.10065", "put_h264_qpel16_hv_lowpass_9.constprop.73", "chroma422_dc_total_zeros_vlc", "dequant_table", "column_loop", "quant_tables.9708", "k_to_i_20", "avg_h264_qpel4_mc03_12_c", "mpc8_q1_bits", "mlp_quants", "put_hevc_qpel_bi_v_8", "ff_on2avc_tabs_4_10_2", "ff_utvideo_decoder", "atrac3p_spectra_tabs", "default_clut", "ff_biweight_h264_pixels_8_neon", "ff_vp3_decoder", "rl_vlc_table.12370", "ff_vc1_2ref_mvdata_vlc", "ff_msmpeg4_encode_picture_header", "bark_tab_m11_256", "read_access_unit", "ulti_decode_init", "avg_pixels8_l2_10", "delta_tab_1_7_m10", "ff_put_dirac_pixels16_l4_c", "ff_wma_critical_freqs", "table2_vlc", "put_pixels4_y2_8_c", "ff_thread_flush", "avgsplit.12883", "ff_put_vp8_bilin16_h_armv6", "ff_put_vp8_epel8_h6_armv6", "put_pixels2_y2_8_c", "part_sizes_h", "put_h264_qpel2_mc00_8_c", "ff_avg_pixels16_xy2_no_rnd_neon", "silk_model_stereo_s2", "scan_index_to_tab", "colorspaces.10894", "ff_pred16x16_plane_neon", "frwu_options", "put_vp8_bilinear8_hv_c", "rv34_table_inter_thirdpat", "ff_wma_get_large_val", "ff_realtext_decoder", "roq_decode_init", "fraps2_decode_plane", "rv40_weight_func_nornd_8", "huff_b63_xlat", "put_hevc_qpel_uni_h_10", "ff_vc1_pred_mv", "ff_h263_intra_MCBPC_bits", "lockmgr_cb", "put_h264_qpel16_mc21_9_c", "scan8", "put_h264_qpel16_hv_lowpass_8.constprop.90", "ff_jref_idct4_put", "avg_scaled_8tap_c.constprop.7", "put_h264_qpel2_mc02_10_c", "ff_wmavoice_decoder", "hq_hqa_decode_frame", "theora_decode_header", "put_h264_qpel16_mc31_10_c", "huff_a54_xlat", "pred8x16_vertical_10_c", "avg_h264_qpel8_v_lowpass_l2_neon", "ff_hevc_cu_chroma_qp_offset_idx", "opus_decode_packet", "horizontal_decompose97i", "sbr_qmf_post_shuffle_c", "inv_predict_7", "cb_lsp_1st", "pred8x16_plane_10_c", "huffbits2", "ff_vc1_adv_progressive_8x4_zz", "ff_dvbsub_parser", "idct_col_add_armv6", "dnxhd_1260_chroma_weight", "put_hevc_epel_uni_hv_10", "apply_param_change", "ff_af_queue_close", "wavpack_encoder_class", "ff_simple_idct_10", "ff_nelly_init_table", "ff_rl_init_vlc", "bink_inter_quant", "g722_encode_frame", "exponent_band_44100", "ac_vlc_desc9_bits", "ff_h264_decode_mb_cabac", "silk_lsf_pred_weights_nbmb", "ff_pcm_lxf_decoder", "mpeg1_run", "huff_ipd_df_codes", "decode_channel_sf_idx", "ff_put_no_rnd_qpel16_mc12_old_c", "intra_pred_4_10", "ff_vp56_coeff_bias", "__dso_handle", "vorbis_parser_close", "__compound_literal.13", "text_decode_frame", "truespeech_apply_twopoint_filter", "cb4432m1", "uni_DCtab_chrom_len", "put_bits32", "dc_128_32x32_c", "ff_fft_init_fixed", "qmat15", "cb_gain_2nd_8k", "put_hevc_qpel_uni_w_hv_12", "tmode_bits", "table.11521", "bitalloc_7_bits_a", "bitalloc_129_bits_b", "cb1110l0", "avg_h264_qpel4_mc11_10_c", "ff_on2avc_tabs_19_40_1", "g723_1_decode_init", "huff_b16_xlat", "ff_vp56_pmbt_tree", "ff_h264_init_cabac_states", "ff_dot_productf", "diag_scan2x2_y", "dvdsub_decode", "pred4x4_horizontal_add_8_c", "ff_hevc_put_qpel_v2_neon_8", "rv40_weight_func_rnd_8", "put_mpeg4_qpel16_v_lowpass", "offsets.10196", "intra_dec", "ff_mov2textsub_bsf", "mpc8_q9up_bits", "pred8x8_horizontal_14_c", "bitalloc_33_bits_d", "cyuv_decode_frame", "loop_filter_h_84_16_c", "ff_put_h264_qpel8_mc13_neon", "fft_calc_c", "ff_pcm_s8_planar_encoder", "ff_mlp_restart_checksum", "text2movsub", "decode_scaling_matrices.isra.6", "put_pixels_clamped_c", "const_names.11586", "vp8_h_loop_filter_simple_c", "inv_log2_table", "ff_celp_lp_synthesis_filter", "ff_dct32_fixed", "ff_h264_idct_dc_add_10_c", "softclip_table", "put_h264_qpel16_mc30_9_c", "vp6_filter", "vc1_inv_trans_8x4_c", "__aeabi_ldiv0", "pred16x16_horizontal_add_10_c", "avg_cavs_qpel16_mc12_c", "ff_adpcm_AdaptCoeff2", "ff_adpcm_vima_decoder", "bits10", "iid_par_dequant.9527", "cb0808l0", "avg_scaled_8tap_c.constprop.17", "avg_qpel8_mc23_c", "put_vc1_mspel_mc12_16_c", "cb1110m0", "pred8x8l_vertical_add_9_c", "low_inv_quants", "ff_pcm_f32be_decoder", "ff_pjs_decoder", "rac_get_model256_sym", "fcb44sl", "ff_inv_aanscales", "ff_mimic_decoder", "latm_decode_audio_specific_config", "put_h264_qpel4_v_lowpass_10.constprop.59", "ff_put_h264_qpel8_mc22_neon", "h264_v_loop_filter_luma_intra_8_c", "h264_h_loop_filter_chroma422_mbaff_9_c", "ass_split_section", "put_hevc_epel_uni_hv_12", "ff_put_no_rnd_qpel8_mc33_old_c", "pos.16362", "vp6_edge_filter_hor", "avg_h264_qpel16_mc03_9_c", "jpeg_parse", "block_num_to_btype_vlc_num", "ff_vorbis_channel_layout_offsets", "smc_decode_end", "put_rv30_tpel8_hhvv_lowpass", "ff_svq3_luma_dc_dequant_idct_c", "ff_vp8dsp_init", "mc_part_420_simple_16", "h263_decode_block", "mov_text_new_line_cb", "eightsvx_decode_init", "put_8tap_sharp_16hv_c", "avg_rv30_tpel8_mc10_c", "mss4_vec_entry_vlc_lens", "fill_mv", "ff_diracdsp_init", "put_hevc_epel_uni_v_12", "ff_cos_16384", "huffbits5", "h264_h_loop_filter_luma_mbaff_9_c", "ff_put_dirac_pixels8_c", "put_bilin_32h_c", "avg_h264_qpel4_mc02_14_c", "mjpega_dump_header", "put_sbits.constprop.0", "msvideo1_decode_frame", "avg_rv30_tpel16_mc01_c", "put_scaled_smooth_32_c", "hls_decode_neighbour", "qmat20", "h264_h_loop_filter_chroma_8_c", "put_mpeg4_qpel8_h_lowpass", "ff_mpeg4_rl_intra", "ff_avg_qpel16_mc31_old_c", "put_rac.constprop.7", "avg_bilin_4hv_c", "put_no_rnd_mpeg4_qpel16_v_lowpass.constprop.5", "ff_rate_control_uninit", "pred8x8l_horizontal_add_14_c", "build_canonical_huff", "bink_idct_add_c", "h264_h_loop_filter_chroma422_mbaff_14_c", "vble_restore_plane.isra.4", "order_MODE_5k9", "bitalloc_65_codes_g", "dnxhd_1235_ac_level", "find_subframe_rice_params", "ff_h264_unref_picture", "bitalloc_65_bits_a", "ff_vp9dsp_init_10", "codebook16", "put_no_rnd_mpeg4_qpel16_h_lowpass.constprop.8", "avg_bilin_1d_h_c.constprop.23", "put_h264_qpel2_v_lowpass_12.constprop.44", "ff_h263_decode_init", "ff_vp56_decode_mbs", "vlc_tab_fft_tone_offset_3_huffbits", "ff_hevc_put_qpel_v1_neon_8", "coef3_huffcodes", "put_h264_qpel2_mc01_10_c", "ff_h264_luma_dc_dequant_idct_9_c", "put_hevc_qpel_bi_v_9", "ff_blockdsp_init", "sin64", "a.9811", "on2avc_cb4_codes", "insert_text", "ff_qexp", "put_h264_qpel8_mc12_9_c", "vp8_v_loop_filter8uv_inner_c", "frame_size", "ff_put_dirac_pixels32_l4_c", "ff_avg_h264_qpel16_mc13_neon", "bswap16_buf", "ff_vc1_cbpcy_p_bits", "vlc_tab_tone_level_idx_hi1", "ff_sine_8192", "SHORT_DELAY_BAND", "ff_avg_pixels8_xy2_neon", "put_hevc_epel_bi_w_hv_9", "ff_thread_get_format", "sixtap_filters_13245600", "bink_trees", "mpc8_huffq2", "ff_vc1_bfraction_vlc", "ivi5_scale_quant_8x8_intra", "pred4x4_horizontal_add_12_c", "dc_left_8x8_c", "inv_predict_10", "btype_vlc_bits", "rl_vlc_table.12022", "ccitt_vlc", "hdr_table.9707", "bark_tab_s16s_128", "bethsoftvid_decode_init", "ff_pred8x8_0l0_dc_neon", "lpc_refl_cb6", "limittab.13041", "table.10621", "ff_llauddsp_init", "put_h264_qpel2_mc11_12_c", "aic_y_scan", "ff_hpeldsp_init", "ff_ivi_dc_row_slant", "coeff_table_token_15", "fcb11ss", "at1_subband_synthesis", "decode_pic", "q3_offsets", "dca_qmf_32_subbands", "mpeg1_index_run", "fill_decode_caches", "sub_cbp_table.12005", "vp7_v_loop_filter_simple_c", "lsp_avg_init", "ff_ivi_rvmap_tabs", "pow_poly.constprop.5", "pred8x8_vertical_14_c", "put_ics_info", "jacosub_decode_frame", "quantize_and_encode_band_cost_UPAIR", "ff_mlp_checksum8", "avg_h264_qpel16_mc11_10_c", "encode_end", "ff_vc1_cbpcy_p_vlc", "put_h264_qpel2_hv_lowpass_9.constprop.77", "sunrast_defaults", "bark_tab_s11_64", "ff_put_rv40_qpel16_mc33_neon", "pred16x16_top_dc_12_c", "pred8x8_mad_cow_dc_0lt_10", "n2", "huff_a66_xlat", "paf_video_close", "cb1110sl1", "table.12043", "ff_put_dirac_pixels16_bilinear_c", "prores_fdct", "sao_band_filter_8", "roq_dpcm_encode_init", "wmv2_idct_col", "first_avcodec", "put_h264_qpel16_mc23_10_c", "imc_exp_tab", "qmat3E", "celt_model_energy_small", "max_tx_for_bl_bp.11229", "ff_h264_idct8_add4_14_c", "vp56_rac_get_prob_armv6", "ff_vc1_ac_coeff_table", "on2avc_cb6_codes", "recurse_mono", "put_h264_chroma_mc1_8_c", "put_no_rnd_qpel8_mc23_c", "put_vc1_mspel_mc23_16_c", "ff_h264_free_tables", "avg_rv30_tpel8_mc12_c", "pam_encode_init", "cf_tables_1", "pred_planar_0_10", "ff_imdct15_uninit", "dss_sp_fixed_cb_gain", "rv34_decode_block", "avg_h264_qpel16_mc00_9_c", "decode_wdlt", "put_h264_qpel2_mc23_12_c", "pred8x16_vertical_12_c", "ff_mjpeg_encode_init", "aic_quant_matrix", "ff_h264_idct_add_10_c", "h264_v_loop_filter_chroma_12_c", "paf_video_init", "ff_g729_postfilter", "ir2_codes", "mpc8_q3_syms", "vlc_tab_diff", "smc_decode_init", "imdct_and_windowing_ld", "vp6_def_fdv_vector_model", "mc_block.constprop.1", "run7_vlc_table", "put_h264_qpel4_v_lowpass_9.constprop.76", "ivi_mc_8x8_delta.constprop.2", "copy_bits", "ff_ljpeg_encoder", "ff_eac3_decoder", "ff_videodsp_init_armv5te", "avg_h264_qpel4_mc11_8_c", "spatial_compose_fidelity", "avui_encode_init", "avg_vc1_mspel_mc11_c", "silk_model_pulse_count", "ff_hqx_ac", "frwu_class", "gif_encode_close", "default_palette.10461", "huff_b47_xlat", "bitalloc_5_codes_c", "cb_gain_1st_6k4", "put_hevc_qpel_uni_w_h_12", "avg_h264_qpel16_mc03_14_c", "avg_bilin_8hv_c", "wmavoice_dq_lsp16i1", "ff_vc1_4mv_block_pattern_vlc", "on2avc_cb13_bits", "huff_b26_xlat", "mpeg4audio_sample_rates", "put_h264_qpel4_mc03_14_c", "bitalloc_3_bits", "parse_frame", "avg_scaled_sharp_16_c", "interplay_delta_table", "ff_jpeg2000_cleanup", "ff_idf_decoder", "avg_h264_qpel8_mc21_12_c", "ff_wavpack_decoder", "put_h264_qpel16_v_lowpass_14.constprop.11", "avg_h264_qpel8_mc30_14_c", "evrc_lspq_quant_codebook1", "qcelp_rate_full_bitmap", "ff_hevc_put_qpel_h3v1_neon_8", "huff_opd_df_codes", "decode_ics_info", "table.11984", "put_h264_qpel8_v_lowpass_14.constprop.19", "arith2_get_model_sym", "ff_hevc_sao_band_position_decode", "latm_parse", "ff_put_qpel8_mc33_old_c", "ff_hevc_idct_8x8_dc_neon_8", "pred8x8l_vertical_14_c", "aac_cb_maxval", "mpc_CC", "ff_avg_h264_qpel8_mc02_neon", "rgb_pix_fmts", "ff_mpeg1_default_non_intra_matrix", "biweight_h264_pixels4_14_c", "h264_close", "decode_scaling_list.constprop.11", "table_mb_non_intra3", "wmavoice_gain_silence", "dnxhd_1237_run", "get_symbol.constprop.7", "pred16x16_plane_9_c", "bink_rlelens", "pred8x8_dc_10_c", "huff_a12_xlat", "avg_cavs_qpel8_mc33_c", "put_h264_qpel16_mc21", "ff_vp56_coeff_bit_length", "flic_decode_frame", "__compound_literal.37", "ff_binkdsp_init", "put_8tap_sharp_32hv_c", "vc1_delta_run_table", "put_h264_qpel4_mc33_14_c", "avg_h264_qpel8_mc20_14_c", "ff_avg_h264_qpel8_mc30_neon", "ff_pcm_u24be_encoder", "mpc7_quant_vlc_sizes", "ff_huffyuv_common_init", "get_last_needed_nal", "dv_vlc_map", "avg_h264_qpel4_mc10_10_c", "ff_eac3_encoder", "ff_avg_h264_qpel8_mc13_neon", "ir2_decode_frame", "pred8x8l_horizontal_filter_add_9_c", "ff_vc1_norm2_vlc", "ff_h263_format", "ff_put_vc1_mspel_mc02_neon", "ff_put_rv40_qpel16_mc22_neon", "flac_decorrelate_rs_c_16", "ff_put_pixels16_xy2_no_rnd_neon", "latm_decode_frame", "pred8x16_mad_cow_dc_0lt_14", "quant_lut_offset", "cb0808ss1", "vlc_table.12580", "pred16x16_plane_10_c", "put_h264_qpel16_mc22_14_c", "ff_vp8_h_loop_filter16_neon", "avg_vc1_mspel_mc03_16_c", "put_no_rnd_qpel16_mc33_c", "qmat2C", "put_bilin_16hv_c", "put_h264_qpel16_mc03_9_c", "avg_h264_qpel4_mc10_12_c", "ff_mpeg4_encode_mb", "ff_init_qscale_tab", "silk_model_pitch_highbits", "table.12000", "avg_qpel8_mc13_c", "table.10045", "reverse_dc_prediction.isra.4", "avg_h264_qpel8_mc13_12_c", "avg_h264_qpel8_mc22_12_c", "ff_dv_zigzag248_direct", "build_huff_tree", "ff_avg_rv40_qpel16_mc31_neon", "ff_h261_mtype_map", "ff_mpeg2video_encoder", "table4_level", "lsf_cb1_16k", "decompress_texture_thread", "ff_int32_to_float_fmul_array8_vfp", "search_for_quantizers_twoloop", "ff_mlp_rematrix_channel", "avg_8tap_regular_16h_c", "bitalloc_65_bits_f", "put_rv40_qpel8_v_lp_packed_s6_neon", "on2avc_cb5_syms", "wp_exp2_table", "luma_mc_uni.isra.9", "fcb11sm", "table.9825", "avg_cavs_qpel8_mc12_c", "dca_smpl_bitalloc", "bitalloc_25_bits_c", "ff_h263_cbpy_vlc", "h261_tcoeff_level", "decode_scaling_list.constprop.10", "ac_vlc_desc3_syms", "aic_decode_close", "ff_pow_0_55", "ff_xl_decoder", "avg_rv30_tpel8_mc11_c", "ff_hevc_idct_4x4_dc_neon_8", "ff_free_picture_tables", "h263_get_modb", "__compound_literal.7", "ff_avg_rv40_qpel16_mc21_neon", "ff_nelly_band_sizes_table", "__FRAME_END__", "ff_mb_non_intra_vlc", "binkb_bundle_signed", "vp5_parse_vector_models", "vp8_pred8x8c_prob_intra", "serpent1.9880", "dnxhd_1252_ac_level", "inv_predict_8", "ff_lzw_decode_close", "size2index", "ff_vp8_luma_dc_wht_neon", "ff_rv_decode_dc", "ipvideo_decode_block_opcode_0xC", "ff_put_vp8_bilin16_h_neon", "mm_decode_end", "ff_h263_decode_mba", "tns_min_sfb_long", "ff_h264_chroma_dc_dequant_idct_9_c", "long_filter_high_3800.part.4", "put_rv30_tpel16_mc11_c", "sbr_hf_inverse_filter", "huff_a45_xlat", "dnxhd_1260_luma_weight", "pred_angular_1_9", "idct_coeff_neon", "put_scaled_bilin_64_c", "iadst_iadst_16x16_add_c", "x8_ac0_lowquant_table", "ff_mjpeg2jpeg_bsf", "pred8x8l_horizontal_up_9_c", "ff_h264_filter_mb", "chroma422_dc_total_zeros_vlc_tables", "srt_new_line_cb", "atrac3p_huff_wav_ampsf1_cb", "intra_pred_dc_128", "make_lpc_coefs", "ff_gsm_dequant_tab", "codebook6", "avg_h264_qpel4_mc12_12_c", "pred8x8l_top_dc_12_c", "ff_hevc_put_qpel_h1_neon_8", "pos.11349", "ff_vc1_inv_trans_8x4_dc_neon", "put_rv40_qpel8_v_lowpass_neon", "pred16x16_dc_10_c", "mss1_decode_frame", "vlc_tab_tone_level_idx_hi2_huffbits", "coeff_table_token_20", "put_hevc_pel_pixels_9", "ff_vc1_mc_4mv_chroma4", "ff_h264_luma_dc_dequant_idct_8_c", "vp8_dct_cat6_prob", "arith2_get_number", "get_bits_diff", "wmv2_encode_init", "pred16x16_horizontal_add_9_c", "evrc_lspq_half_codebook3", "ff_lagarith_decoder", "idct_16x16_12", "vp6_parse_vector_models", "dv_iweight_88", "luma_dc_zigzag_scan", "mpeg_motion", "avg_pixels16x16_c", "ra288_decode_close", "ff_log2_run", "avg_h264_qpel16_h_lowpass_neon", "avg_h264_qpel4_mc10_8_c", "plane32_lut", "ff_interplay_dpcm_decoder", "avg_tpel_pixels_mc12_c", "avg_rv40_qpel8_mc10_c", "put_8tap_regular_32v_c", "vec1_huffcodes", "ff_roq_encoder", "spatial_compose_dd137i_dy", "ff_vc1_if_1mv_mbmode_bits", "copy_block16_12.constprop.45", "l_start_shuffled.9879", "cb4432m0", "put_tpel_pixels_mc00_c", "ff_tta_rice_init", "ff_mdct_calc_c", "codebook8", "ff_simple_idct_put_neon", "default_mv_penalty", "put_no_rnd_pixels8_l2_8", "table1_run", "pred16x16_127_dc_14_c", "put_8tap_regular_8h_c", "pred16x16_dc_14_c", "proresenc_class", "hevc_v_loop_filter_luma_9", "h264_v_loop_filter_luma_intra_9_c", "sbr_qmf_pre_shuffle_c", "sao_edge_filter_12", "atrac3p_huff_wav_ampsf3_xlat", "cb0808ss0", "mpeg2_video_profiles", "vertical_compose53iL0", "pred4x4_horizontal_add_9_c", "ivi5_base_quant_8x8_inter", "mpeg_decode_init", "ff_h264_idct_add16_9_c", "ff_roq_dpcm_encoder", "table.12377", "table.11526", "ff_mba_length", "pc_tbl2", "vlc_tab_tone_level_idx_mid_huffcodes", "flac_lpc_16_2_arm", "ff_tget_long", "pred4x4_horizontal_up_14_c", "ff_ac3_fixed_mdct_end", "ff_jpegls_decode_picture", "roq_class", "flac_decorrelate_ls_c_16p", "noise", "swb_offset_480_32", "truespeech_decode_frame", "pred8x16_plane_8_c", "vq_hebap5", "ff_mpeg4_decode_partitions", "lsf_nsf_table", "ff_put_vp8_epel8_v4_armv6", "rv34_decode_cbp", "avg_h264_qpel16_mc00_10_c", "fcb16m", "table.11498", "ff_ivi_inverse_slant_8x8", "ff_mlp_pack_output_inorder_6ch_2shift_armv6", "transform_4x4_luma_8", "rv34_decode_mv", "left.13303", "coding_method_table", "avg_h264_qpel8_mc13_14_c", "avg_rv40_qpel8_mc30_c", "t_huffman_env_bal_1_5dB_codes", "sintbl_12", "pred_dc_8", "ff_h263_pixel_aspect", "pred_planar_2_9", "mimic_init_thread_copy", "ff_put_no_rnd_qpel8_mc12_old_c", "cb2224sm1", "huff_a73_cb", "Y", "vp7_idct_dc_add4y_c", "wmavoice_denoise_power_table", "tscc2_ac_vlc_codes", "pred8x8l_vertical_left_8_c", "put_scaled_8tap_c.constprop.12", "ff_mjpega_dump_header_bsf", "flush_mp3on4", "avg_h264_qpel16_mc02_10_c", "delta_tab_3_2_m10", "avg_h264_qpel4_mc13_9_c", "celt_tf_select", "rle_length_tab", "avg_h264_chroma_mc1_8_c", "mv_vlc", "hev_thresh_lut.12240", "avg_h264_qpel4_mc00_9_c", "hqx_quant_chroma", "quant_tbl32", "ff_ansi_decoder", "__floatdidf", "w97_16_c", "ff_rv40dsp_init_arm", "get_scale_idx", "check_mv", "put_scaled_bilin_c.constprop.13", "scale_rl_huffcodes", "ff_rdft_init_arm", "ff_mpeg4_intra_level", "idxtab.10203", "mov_text_decode_close", "horiz_scan2x2_x", "ff_svq1_intra_multistage_vlc", "avg_rv40_qpel16_mc23_c", "vc1_decode_p_block.constprop.5", "ff_rv40_v_loop_filter_strength_neon", "ff_vc1_if_mmv_mbmode_vlc", "flac_decorrelate_ms_c_16p", "ff_jpegls_decode_lse", "encode_plane", "show_bits.isra.1", "dv_audio_shuffle625", "ls_store_lse", "ff_put_vc1_mspel_mc02_16_neon", "ff_adpcm_yamaha_encoder", "ac_vlc_desc8_syms", "dxt5y_block", "vwin2048", "bitalloc_33_bits_g", "avg_h264_qpel8_mc21_9_c", "ff_svq1_intra_mean_vlc", "parse_bintree", "pred8x8_129_dc_9_c", "put_no_rnd_qpel16_mc32_c", "webvtt_callbacks", "ff_build_rac_states", "lsp11", "put_pixels8_y2_8_c", "pred16x16_horizontal_add_12_c", "pcx_encode_init", "put_h264_qpel8_mc22_12_c", "atrac3p_huff_gain_loc2_xlat", "codebook13", "delta_tab_3_2", "biweight_h264_pixels2_14_c", "put_8tap_regular_64h_c", "ff_imdct15_init", "copy32_c", "band_tab", "DEFINED_MASK", "put_h264_qpel16_mc20_9_c", "put_cavs_qpel16_mc21_c", "ff_pred16x16_top_dc_neon", "put_h264_qpel2_mc10_14_c", "avg_scaled_8tap_c.constprop.11", "__udivsi3", "qmat49", "nbits_table", "ff_interleaved_se_golomb_vlc_code", "ff_vc1_inv_trans_4x8_dc_neon", "qpeg_decode_inter", "put_h264_qpel2_mc30_9_c", "dnxhd_1237_ac_level", "atrac3p_wl_huff_code4", "bitalloc_17_bits_d", "fat_ydt3", "order_MODE_23k85", "vc1_last_delta_level_table", "huff_a37_cb", "vp8_ac_qlookup", "tak_channel_layouts", "avg_vc1_mspel_mc02_c", "ff_inter_intra_vlc", "ac3_coupling_start_tab", "ff_ut_pred_order", "ra144_encode_init", "ff_mlp_pack_output_inorder_6ch_5shift_armv6", "pred16x16_plane_rv40_c", "ff_ps_hybrid_analysis_neon", "decode_nal_units", "sub_hfyu_median_pred_int16_c", "idct_32x32_9", "g722_decode_init", "wmv2_idct_add_c", "aic_mode1_vlc", "ff_avg_h264_qpel8_mc22_neon", "h264_h_loop_filter_luma_10_c", "on2avc_cb8_bits", "vorbis_floor0_decode", "chroma_mc_uni", "ff_ac3_process_exponents", "ff_ass_subtitle_header", "cb2224l0", "encode_styl", "put_h264_qpel16_mc11_14_c", "__compound_literal.17", "ff_spatial_idwt_slice2", "put_hevc_qpel_uni_hv_9", "arith2_get_bit", "qtrle_decode_init", "put_mb_modes", "default_specs", "ff_ivi_horizontal_scan_8x8", "uni_mpeg2_ac_vlc_len", "shape22", "ipvideo_decode_block_opcode_0xD", "avg_h264_qpel16_mc01_12_c", "put_rv30_tpel8_hv_lowpass", "ff_hevc_diag_scan4x4_y", "ff_gif_encoder", "put_h264_qpel8_mc03_9_c", "ff_vp9dsp_mc_init_10", "decode_cabac_intra_mb_type", "transform_add8x8_9", "put_cavs_filt8_v_hpel", "avg_tpel_pixels_mc02_c", "decode_sb_mem", "vlc_tab_fft_tone_offset_0_huffcodes", "ff_thread_await_progress", "apply_ltp", "postscale", "MACEtab2", "ff_put_vp8_epel8_h4_armv6", "TAB04", "n4", "vp6_parse_coeff_huffman", "av_costbl_2_sf", "put_bilin_32hv_c", "avg_scaled_8tap_c.constprop.9", "ff_on2avc_tab_84_2", "dvdsub_init", "put_no_rnd_vc1_chroma_mc8_c", "qmat04", "celt_decode_band.constprop.6", "pred4x4_left_dc_12_c", "ff_huffyuv_decoder", "f_huffman_env_1_5dB_codes", "hl_decode_mb_simple_8", "ff_h261_reorder_mb_index", "codebook18", "add_int16_c", "ps_decorrelate_c", "ff_h264_idct8_add_12_c", "put_h264_qpel2_mc12_8_c", "ff_asv2_encoder", "__compound_literal.5", "ff_avrp_decoder", "table.12582", "celt_pvq_u_row", "pred16x16_129_dc_12_c", "rv34_cbp_code", "dv_iweight_1080_y", "table.9747", "ct_xlats.10058", "ff_cos_1024_fixed", "decode_coeffs_b_8bpp", "vc1_decode_b_mb", "mp_decode_init", "entropy_decode_stereo_3860", "put_h264_qpel16_mc03_14_c", "avg_h264_qpel16_mc33_9_c", "ff_avg_h264_qpel16_mc23_neon", "quantize_and_encode_band_cost_ZERO", "ff_vp8_h_loop_filter16_simple_neon", "avg_h264_qpel4_mc31_9_c", "binkb_bundle_sizes", "pred_angular_2_9", "cb4448ss0", "ff_pcm_s16le_decoder", "put_qpel16_mc33_c", "rv34_pred_mv", "atrac3_decode_init", "avg_qpel8_mc32_c", "put_pixels16_8_c", "ff_raw_pix_fmt_tags", "decode_slice_plane.constprop.4", "ff_simple_idct_put_armv6", "ff_simple_idct_add_8", "ff_hevc_decode_nal_sps", "decode_2", "silk_model_pitch_delta", "ff_mqc_qe", "ff_mpeg4_encoder", "mlp_init", "dummy_destruct_packet", "ff_put_h264_qpel16_mc23_neon", "vp6_parse_coeff", "vp31_inter_dequant", "alac_encode_init", "apply_eight_short_window", "avg_h264_qpel8_mc22_9_c", "bits_per_samples.9617", "webvtt_cancel_overrides_cb", "cdg_decode_end", "huff_b66_cb", "mul_lsf.10383", "mpeg2_dc_scale_table1", "ff_atrac3p_decode_channel_unit", "ff_h261_decoder", "ff_h264_h_loop_filter_luma_neon", "ff_vb_decoder", "subframe_sizes", "avg_h264_qpel16_mc21_12_c", "ff_ps_stereo_interpolate_neon", "h264_parse", "put_rv40_qpel8_mc13_c", "dv_decode_ac", "isfp_inter", "cbp_vlc_lens", "put_hevc_epel_v_8", "put_8tap_regular_32hv_c", "ff_aac_codebook_vector_vals", "svq1_inter_codebook_8x4", "ff_hevc_put_qpel_h1v1_neon_8", "h264_v_loop_filter_chroma_14_c", "hls_coding_unit", "ff_avg_rv40_qpel16_mc30_neon", "vp6_decode_free_context", "predictor_transform.10293", "dfa_decode_end", "ff_h263_intra_MCBPC_vlc", "silk_stereo_interp_len", "ff_asv_dc_ccp_tab", "wide_filter_row_mask.12741", "export_stream_params", "swb_size_1024_96", "avg_h264_qpel8_h_lowpass_10", "ff_mpeg4_decode_video_packet_header", "ff_vp8_idct_dc_add4uv_neon", "ff_atrac3_decoder", "pred16x16_128_dc_10_c", "apply_only_long_window", "ff_h264_idct8_add_neon", "ff_hevc_transform_8x8_neon_8", "ff_put_vc1_mspel_mc10_neon", "flac_encode_frame", "recombine_block", "pred8x8l_left_dc_8_c", "W_tbl16", "ac_inter", "ff_vp9dsp_init", "transitions.9557", "vp6_block_copy_filter", "ff_ivi_mc_avg_4x4_delta", "ff_wmv2_decode_picture_header", "ff_mdct_end", "vop_dquant_decoding", "ff_cos_256_fixed", "huff_a73_xlat", "amr_unpacking_bitmaps_per_mode", "ff_vc1_inv_trans_4x4_neon", "pick_palette_entry", "off.9874", "block_sizes_dv2550", "ff_vc1_icbpcy_p_codes", "pred", "avg_h264_qpel4_mc11_14_c", "vp7_feature_value_size", "wide_filter_col_mask.12740", "string_table", "surround_levels", "h263_class", "free_sequence_buffers", "ff_hevc_put_qpel_h3v2_neon_8", "huff_a64_cb", "avg_h264_qpel16_mc20_9_c", "evrc_energy_quant", "put_8tap_sharp_4h_c", "avg_qpel8_mc22_c", "cce_scale_fixed", "fft256", "avg_cavs_filt8_h_qpel_r", "put_h264_qpel16_mc00_10_c", "huff_codes", "base_lsf.10396", "dvbsub_init_decoder", "pd_re_smooth", "ff_me_cmp_init_arm", "vp5_dccv_lc", "cinepak_encode_frame", "init_duplicate_context", "bitalloc_5_codes_a", "ff_eac3_frm_expstr", "ff_rdft_end", "tiff_init", "put_h264_qpel4_mc00_14_c", "hls_decode_entry_wpp", "put_h264_qpel2_mc23_14_c", "mm_decode_frame", "ff_h263_encode_motion", "vc1_hwaccel_pixfmt_list_420", "ff_vp3_parser", "put_h264_qpel16_mc01", "ff_avg_dirac_pixels16_bilinear_c", "ff_hevc_put_pixels_w8_neon_8", "ff_put_rv40_qpel16_mc01_neon", "put_rv30_tpel8_mc10_c", "ff_brender_pix_decoder", "h264_h_loop_filter_luma_mbaff_14_c", "fcb16s", "close_decoder", "get_bit_length.isra.2", "lpc_compute_autocorr_c", "put_h264_qpel4_mc23_9_c", "initial_coeffs_fast_3320", "pred8x8_left_dc_12_c", "mss1_decode_init", "idct_4x4_10", "on2avc_cb11_bits", "decode_new_pred", "ff_adpcm_ms_encoder", "avg_bilin_16h_c", "bands_warped.10698", "wl_nb_codes.10050", "ff_mp3adufloat_decoder", "avg_h264_qpel16_mc03_10_c", "pred4x4_top_dc_10_c", "ff_put_vc1_mspel_mc01_16_neon", "hevc_update_thread_context", "avg_no_rnd_pixels16_x2_8_c", "__aeabi_ui2f", "bethsoftvid_decode_end", "avg_8tap_regular_32v_c", "put_bilin_8hv_c", "ff_h264_check_intra4x4_pred_mode", "ff_adpcm_ima_block_sizes", "amptable", "__compound_literal.23", "avg_h264_qpel8_mc33_9_c", "put_h264_qpel16_mc11_10_c", "put_rac", "mpc8_get_mask", "mpeg4_encode_visual_object_header", "mpeg1_options", "switchtable", "ff_mace3_decoder", "put_h264_qpel16_mc22_8_c", "fcb44sm", "vp9_row_scan_4x4_nb", "ff_mp2_decoder", "put_h264_qpel4_mc13_10_c", "ff_apply_window_int16_neon", "vp8_h_loop_filter16_c", "ipvideo_decode_block16", "y216_decode_frame", "rv40_v_weak_loop_filter", "cng_decode_close", "tta_channel_layouts", "put_h264_qpel16_mc11_12_c", "ff_vp8_decode_free", "ac_vlc_desc2_bits", "put_rv30_tpel16_mc01_c", "dc_8x8_c", "quantize_and_encode_band_cost_UQUAD", "ff_avg_pixels16_x2_neon", "ff_simple_idct248_put", "roq_encode_init", "decode_band_hdr", "huffcode5", "ff_modified_quant_tab", "p_mb_type_info", "ff_add_pixels_clamped", "put_tpel_pixels_mc11_c", "vorbis_encode_close", "shorten_decode_frame", "ff_jpeg2000_init_tier1_luts", "ff_avg_pixels16_xy2_neon", "vp8_token_update_probs", "idct_16x16_8", "ff_flac_parser", "avg_h264_qpel8_hv_lowpass_10", "utvideo_encode_init", "put_h264_qpel16_hv_lowpass_10.constprop.56", "avg_rv40_qpel16_mc33_c", "v408_decode_init", "ff_ps_hybrid_synthesis_deint_neon", "ff_fc_4pulses_8bits_tracks_13", "atrac3p_wl_huff_code1", "process_float", "avg_scaled_regular_32_c", "crc_1D", "ff_fft_permute_neon", "ff_rescale_rms", "ff_adpcm_thp_le_decoder", "avg_pixels4_8_c", "rgb565_masks", "ff_dwt_decode", "mpeg1_max_level", "ff_tis_ifd", "sintbl_8", "wavpack_decode_end", "cos3pi8", "vp6_parse_vector_adjustment", "rv30_itype_from_context", "ff_tpeldsp_init", "IDX2", "ff_on2avc_tabs_4_10_1", "init_2d_vlc_rl", "qmat3B", "ff_vp56_coeff_parse_table", "ipvideo_decode_block_opcode_0xA_16", "quant_tab.11976", "g_11", "encode_q_branch.constprop.13", "qmat0F", "rv_chrom_code", "diag_downleft_16x16_c", "pred8x8_129_dc_12_c", "decode_slice_alpha.isra.3", "ff_h263_decode_picture_header", "pred16x16_128_dc_14_c", "put_h264_qpel2_mc00_12_c", "tabs", "process_block", "dvd_nav_parse", "mpeg1_lum_dc_uni", "swb_size_1024_8", "pred8x16_128_dc_14_c", "atrac3p_sf_huff_bits3", "deltas.10197", "ff_mpeg_unref_picture", "ff_log2_q15", "ff_jref_idct_put", "put_h264_qpel16_h_lowpass_8", "transform_add32x32_10", "ff_dc_chroma_vlc", "put_pcm_12", "ff_rate_control_init", "atrac3_vlc_table", "entangled_thread_counter", "ff_vp56_b6to4", "edges.12308", "ff_png_parser", "qcelp_decode_frame", "cb1110s1", "avg_h264_qpel16_mc22_9_c", "ff_paf_audio_decoder", "h264_h_loop_filter_luma_mbaff_8_c", "ff_put_vp8_bilin16_v_armv6", "dv_iweight_1080_c", "avg_h264_qpel16_mc12_12_c", "eval_motion_dist", "put_cavs_filt8_h_qpel_r", "ff_hevc_put_qpel_h1v3_neon_8", "pred8x8_127_dc_9_c", "ac3_compute_mantissa_size_c", "ff_aura_decoder", "table.12376", "ff_hevc_put_qpel_h3v3_neon_8", "exp_table_float", "biweight_dirac_pixels8_c", "dvdsub_parse", "frame_bits_inc.10799", "avg_bilin_2d_hv_c.constprop.21", "celt_window", "ff_put_h264_chroma_mc8_neon", "put_rv40_qpel16_mc03_c", "ff_cavs_init_top_lines", "__PRETTY_FUNCTION__.10018", "huff_vlc", "put_h264_qpel2_hv_lowpass_8.constprop.94", "hor_16x16_c", "end_freq_inv_tab", "chroma_dc_total_zeros_vlc_tables", "fft_stereo_exp_vlc", "__aeabi_dadd", "psy_3gpp_end", "ff_hevc_intra_chroma_pred_mode_decode", "ff_hevc_decode_nal_sei", "rootpow2tab", "ff_lzw_encode", "put_vc1_mspel_mc10_16_c", "tns_min_sfb", "ff_decode_frame_props", "flac_decorrelate_ms_c_32p", "apply_window_int16_c", "xbm_encode_frame", "huff_vlc_tables", "ff_inter_level", "avg_h264_qpel16_mc01", "ff_ps_init", "ff_put_vc1_mspel_mc33_16_neon", "avg_pixels4_xy2_8_c", "idct_8x8_9", "ff_fft_init", "ff_on2avc_tabs_9_20_1", "rv40_dither_r", "put_h264_qpel2_h_lowpass_9", "decode_residues", "put_h264_qpel2_mc11_9_c", "ff_mpv_common_init", "avg_h264_qpel4_mc12_14_c", "ivi_blk_vlc_tabs", "vp6_default_models_init", "mode_22_20", "ff_hevc_put_qpel_uw_v2_neon_8", "register_tm_clones", "pam_encode_frame", "ff_mpeg4_encode_picture_header", "ready_3", "x8_get_dc_rlf", "ff_simple_idct_arm", "ff_hevc_unref_frame", "avg_8tap_sharp_8h_c", "on2avc_cb11_syms", "put_h264_qpel16_mc13_12_c", "put_vp8_epel8_h6_c", "map.11917", "vp3_idct_end_row_neon", "__compound_literal.26", "pred16x16_horizontal_12_c", "vp8_mbfirstidx", "webvtt_end_cb", "minima_cmp", "low_log_factor_step", "encode_thread", "ff_vc1_mv_diff_vlc", "ff_fft_calc_neon", "vp7_mv_pred", "ff_put_dirac_pixels16_l2_c", "aac_decode_close", "put_8tap_1d_v_c", "ff_mpl2_decoder", "huff_a64_xlat", "__compound_literal.3", "hqx_decode_444", "ff_put_h264_qpel16_mc02_neon", "ff_sine_64", "init_decoder", "sbr_x_gen", "avg_scaled_bilin_16_c", "ff_acelp_lsp2lpc", "qmat01", "ff_vp9dsp_init_8", "pred8x8_128_dc_8_c", "hq_tab_05", "avg_h264_qpel8_mc10_10_c", "rtab.12054", "qtrle_encode_frame", "vc1_h_overlap_c", "avg_vc1_mspel_mc02_16_c", "pred8x8l_horizontal_14_c", "coeff_table_token_12", "ff_mpeg2video_decoder", "adx_decode_init", "put_pcm_8", "avg_scaled_sharp_64_c", "sizes.9859", "vp9_row_scan_16x16_nb", "ff_mss34_gen_quant_mat", "ff_on2avc_tab_84_4", "atrac3p_huff_gain_lev1_xlat", "pred8x16_vertical_add_10_c", "avg_8tap_regular_32hv_c", "ff_asv2_level_tab", "lag_decode_arith_plane", "xface_encode_frame", "mpa_huffbits_3", "put_vp8_epel8_v6_c", "make_glyphs", "hnm_decode_init", "avg_rv30_tpel16_mc20_c", "put_h264_qpel16_mc21_10_c", "table.10160", "ff_rv34_inv_transform_noround_dc_neon", "rv30_decode_intra_types", "put_hevc_epel_bi_w_h_9", "table_4_3_exp", "get_block_rd.constprop.11", "bitalloc_5_bits_c", "subband_to_powgrp", "dico22_isf", "ff_vc1_ttmb_bits", "ff_mpa_l2_select_table", "inter_rvlc_level", "dc_129_16x16_c", "ff_hevc_hls_filters", "fcb8sl", "vec_sizes.10382", "ff_aac_latm_parser", "evrc_lspq_quant_codebooks_row_sizes", "shuf3.9877", "weight_h264_pixels16_8_c", "put_h264_qpel4_mc10_8_c", "run_vlc", "pitch_contrib", "pass", "put_h264_qpel4_mc22_10_c", "level_vlc", "vp7_h_loop_filter16_c", "celt_log2_frac", "avg_h264_qpel16_mc22_8_c", "ff_celp_lp_zero_synthesis_filterf", "ff_vc1image_decoder", "roq_dpcm_encode_close", "cinepak_decode_frame", "build_def_list.constprop.11", "huff_a24_cb", "ff_snappy_peek_uncompressed_length", "silk_cosine", "ff_pcm_u24le_encoder", "ff_sbr_qmf_deint_neg_neon", "coeff_table_token_21", "put_h264_qpel4_mc11_12_c", "vp7_decode_frame_header", "rv34_count_ones", "ff_vp56_init_dequant", "pred8x8_left_dc_14_c", "table.10162", "b5_mantissas", "ff_mpeg4_resync_prefix", "ff_xbm_decoder", "tr16", "vp9_default_scan_4x4", "pred8x8l_horizontal_down_10_c", "ff_h264_chroma422_dc_dequant_idct_14_c", "avg_pixels8_y2_8_c", "ff_pcm_dvd_decoder", "cb0806sl1", "hq_tab_19", "sse8_c", "ff_mlp_pack_output_inorder_2ch_mixedshift_armv6", "pred4x4_vertical_add_9_c", "vp7_h_loop_filter8uv_inner_c", "vc1_decode_p_mb_intfi", "ff_avg_h264_qpel16_mc21_neon", "ff_on2avc_tabs_20_84_3", "quant_psnr16_c", "ff_dv_vlc_bits", "dca_parse", "pred16x16_128_dc_8_c", "table.10661", "ff_j_rev_dct", "avg_bilin_8v_c", "bark_tab_l16s_1024", "ff_vp6dsp_init_arm", "costbl_4", "ff_prefetch_arm", "ff_sipr_init_16k", "ff_put_pixels16_y2_no_rnd_armv6", "ff_eac3_hebap_tab", "ff_vp8_v_loop_filter8uv_neon", "intra_pred_4_12", "avg_cavs_filt8_hv_ii.isra.18", "ff_ac3_max_msb_abs_int16_neon", "ps_mul_pair_single_c", "put_h264_qpel4_mc30_10_c", "atrac3p_decode_init", "put_h264_qpel16_h_lowpass_14.constprop.10", "ff_opus_parser", "ff_on2avc_tab_20_1", "ff_pnm_parser", "ff_on2avc_tabs_20_84_2", "vlc_tab_fft_tone_offset_1_huffcodes", "ff_pred8x8_0lt_dc_neon", "get_uint", "vertical_compose_fidelityiH0", "ff_tiff_coord_trans_codes", "ff_vp6a_decoder", "ff_adpcm_g726_decoder", "ff_aac_kbd_long_1024", "table.10155", "msmpeg4v34_decode_mb", "avg_rv30_tpel8_hv_lowpass", "ff_simple_idct_add_12", "put_h264_qpel16_mc30_10_c", "rv40_adaptive_loop_filter.constprop.1", "ff_put_rv40_qpel16_mc32_neon", "put_h264_qpel2_mc12_10_c", "ff_pred8x8_left_dc_neon", "vert_32x32_c", "envelope_quant_index_huffbits", "alac_entropy_coder", "ac3_output_frame_header", "cb4440ss1", "remove_sps.part.8", "ff_h264_get_slice_type", "div_tbl.10506", "avg_rv40_qpel16_mc32_c", "avg_vc1_mspel_mc12_16_c", "ff_vc1_dqscale", "t_huffman_env_1_5dB_bits", "bark_tab_s8s_64", "ff_aac_codebook_vectors", "intra_pred_5_12", "avg_h264_qpel4_mc12_9_c", "ff_mlp_pack_output_inorder_2ch_3shift_armv6", "ff_hevc_split_packet", "build_table", "ff_mpegvideo_parser", "vp8_put_bilin_h_armv6", "init_quantization_noise", "put_hevc_qpel_bi_w_hv_9", "h264_h_loop_filter_chroma_mbaff_9_c", "alac_encode_frame", "__compound_literal.51", "ff_mqc_init_context_tables", "ff_decode_block_coeffs_armv6", "huff_a71_cb", "put_symbol.part.5", "tgv_decode_frame", "put_h264_qpel2_mc01_12_c", "fcb16sm", "png_parse", "ff_ccitt_unpack", "put_cavs_qpel8_mc02_c", "ff_h264_idct_add_14_c", "ff_on2avc_ctab_2", "put_qpel16_mc23_c", "evrc_lspq_full_codebooks", "delta_tab_2_5", "swb_offset_480_48", "put_pixels4_x2_8_c", "pred8x8_mad_cow_dc_l00_14", "random_dequant_index", "guess_dc", "ff_mpeg1_dc_scale_table", "ff_fdct248_islow_10", "tns_tmp2_map_1_3", "W_tbl32", "decode_plane_bitstream", "silk_model_frame_type_inactive", "avg_rv40_qpel16_mc01_c", "put_h264_chroma_mc8_16_c", "put_cavs_filt8_hv_egpr", "put_h264_qpel8_hv_lowpass_9", "ff_g722dsp_init", "decode_tns.isra.10", "adx_decode_frame", "diag_scan4x4_inv", "put_h264_qpel4_mc12_12_c", "ff_evrc_decoder", "ff_mpeg4_stuffing", "ff_celp_lp_synthesis_filterf", "idct_32x32_dc_8", "binkb_den", "cavs_filter_lv_c", "fill_block16_c", "map.13798", "F_tbl40", "pred8x8_left_dc_8_c", "iquant_tbl32", "ttafilter_process_dec_c", "decoder_init", "ff_mss34_dct_put", "avg_h264_qpel4_mc23_9_c", "tc_tab", "add_hfyu_left_pred_c", "atrac3p_ct_restricted_to_full", "avg_h264_qpel8_mc11_10_c", "ff_adpcm_AdaptationTable", "ff_pcm_s24be_decoder", "ff_rv20_decoder", "ff_wavpack_encoder", "clear_blocks_8_c", "fft5", "put_vp8_bilinear4_hv_c", "sbr_make_f_tablelim", "ff_put_vp8_epel8_h4v6_armv6", "ff_twinvq_decode_frame", "read_quant_tables", "put_cavs_filt8_v_qpel_r", "put_vc1_mspel_mc12_c", "huff_b77_cb", "qmat0B", "ff_eac3_spx_atten_tab", "type34_delta", "hor_up_8x8_c", "copy_CTB_to_hv", "ff_sgi_encoder", "ff_h263_chroma_qscale_table", "ff_escape124_decoder", "heavy_dynamic_range_tab", "field_scan", "ff_adpcm_ima_wav_decoder", "ff_msmpeg4_handle_slices", "ff_vorbis_vwin", "fft_level_exp_alt_vlc", "huff_a06_cb", "hl_motion_420_simple_16", "qmat3F", "table.11991", "table.12378", "ff_ac3_encode_close", "celt_mean_energy", "vc1_h_loop_filter8_c", "ff_pam_decoder", "ff_mpa_quant_bits", "table.10225", "rv40_beta_tab", "huff_b43_xlat", "fft_tab_neon", "put_no_rnd_qpel8_mc02_c", "table.12387", "ff_gain_val_tab", "codebook26", "pred4x4_horizontal_up_rv40_c", "ff_h263p_decoder", "ff_wmalossless_decoder", "decode_mb_info", "mp_decode_frame", "put_hevc_epel_uni_w_h_12", "lps_range", "ff_sin_tabs", "put_rv30_tpel8_h_lowpass", "ivi_free_buffers", "intra_pred_lp_top", "delta_tab_3_3_m10", "avg_h264_qpel4_mc30_10_c", "start_column_loop", "xan_decode_init", "atrac3p_wl_huff_bits4", "code_tab", "put_h264_qpel4_mc31_10_c", "atrac3p_huff_gain_loc5_cb", "fft_stereo_phase_huffcodes", "comp_ppf_gains", "ff_hevc_inter_pred_idc_decode", "huff_b12_xlat", "avg_h264_qpel8_mc32_9_c", "exponent_band_22050", "JMAX", "pred4x4_129_dc_12_c", "pred8x8_129_dc_14_c", "__aeabi_l2d", "ff_put_vc1_mspel_mc21_16_neon", "ls_decode_line.constprop.5", "pred8x8_mad_cow_dc_l0t_9", "put_h264_qpel16_h_lowpass_l2_neon", "ff_eatqi_decoder", "ass_tb.9465", "ff_er_frame_start", "ff_ivi_dc_slant_2d", "ff_h264_idct_add8_8_c", "ff_tadd_doubles_metadata", "put_h264_qpel4_mc20_8_c", "ff_alloc_packet2", "fft32_neon", "decode_q_branch", "put_h264_qpel4_v_lowpass_8.constprop.93", "svq1_decode_block_non_intra", "ff_amrnb_decoder", "ff_vp8_idct_dc_add_neon", "huff_a62_xlat", "swb_offset_1024_24", "dnxhd_1238_run", "coef3_huffbits", "decode_channel_sound_unit", "ivi5_base_quant_4x4_inter", "cdxl_decode_init", "ff_ps_init_fixed", "wp_log2_table", "vp9_default_scan_8x8", "avg_8tap_smooth_8hv_c", "exp_strategy_reuse_tab", "put_scaled_bilin_4_c", "zero", "pred8x8_mad_cow_dc_l0t_14", "bitalloc_13_codes_c", "ff_hevc_put_qpel_h3_neon_8", "vp9_default_kf_ymode_probs", "table.11524", "sp5x_data_sof", "ff_mp2fixed_encoder", "pred8x16_vertical_add_9_c", "pred4x4_129_dc_9_c", "truemotion1_decode_frame", "put_h264_qpel8_mc00_12_c", "huff_iid", "decode_init", "ccpl_huffcodes4", "transform_add4x4_12", "vp8_find_free_buffer.part.14", "ff_sine_4096_fixed", "avg_rv30_tpel16_mc02_c", "weight_h264_pixels8_9_c", "hqx_decode_444a", "bmp_decode_frame", "ff_gsm_decoder", "huff_a07_xlat", "table.10157", "scfi1_table.9770", "ff_jpeg2000_decoder", "dirac_pix_fmt", "sizes.11986", "log2stereo", "put_h264_qpel2_mc20_14_c", "ff_hevc_res_scale_sign_flag", "ff_rv10_decoder", "idct_col4_add8_neon", "ff_vc1_inv_trans_8x4_neon", "ff_aac_eld_window_480", "cb2224m1", "ff_ffwavesynth_decoder", "ff_prores_ks_encoder", "ipvideo_decode_block_opcode_0x3", "ff_h264_idct_add16intra_10_c", "fft32_vfp", "yuv4_encode_init", "ff_mp2float_decoder", "mc_block_hpel088", "qmat26", "flac_parse_close", "h263p_class", "silk_lsf_codebook_wb", "ff_mlp_pack_output_inorder_8ch_mixedshift_armv6", "ff_put_vp8_epel4_h6v6_armv6", "bark_tab_s22s_128", "mpc7_scfi", "vert_8x8_c", "inv_predict_13", "pred8x16_top_dc_12_c", "put_h264_qpel2_mc13_10_c", "ff_adpcm_yamaha_difflookup", "decode_rle", "scfi0_table.9769", "pred8x8l_vertical_add_10_c", "gains_high", "ff_ass_split_dialog", "__compound_literal.46", "ff_aasc_decoder", "table.10668", "mpc8_q4_codes", "cce_scale", "put_h264_qpel8_v_lowpass_14.constprop.17", "nalu_header.9196", "ff_weight_h264_pixels_4_neon", "compatible_frame.10294", "quantize_and_encode_band_cost_rtz_arr", "ff_ccaption_decoder", "ff_mpegaudio_parser", "delta_tab_3_1_m10", "decoder", "pred_planar_1_10", "__adddf3", "add_obmc8_c", "dnxhd_1235_run_codes", "table.10047", "roq_decode_end", "ff_put_vp8_bilin16_hv_armv6", "put_no_rnd_qpel8_mc20_c", "ff_aac_scalefactor_bits", "codebook28", "ff_a64multi5_encoder", "srt_encode_init", "ff_hevc_cbf_cb_cr_decode", "ff_g723_1_decoder", "codebook22", "aic_mode1_vlc_codes", "qua_gain_code", "rv34_table_intra_thirdpat", "rv34_table_inter_firstpat", "wtf_end_512.isra.4", "pred8x8_top_dc_10_c", "sbr_offset", "ff_vc1_intfr_non4mv_mbmode_vlc", "ff_j_rev_dct1", "mimic_decode_end", "avg_8tap_smooth_4h_c", "vq_hebap2", "smka_decode_frame", "huff_b12_cb", "trig_hi", "ff_huffyuv_common_end", "ff_put_pixels8_y2_armv6", "ac_vlc_descC_syms", "h264_h_loop_filter_chroma422_12_c", "ff_h264_idct_dc_add_8_c", "put_scaled_8tap_c.constprop.13", "vp8_decode_init_thread_copy", "postfilter", "cb4440sm1", "huff_b43_cb", "pow_table", "ff_put_vp8_epel16_h6v6_neon", "ff_put_pixels8_y2_no_rnd_neon", "huff_iid_df0_bits", "huff_b62_xlat", "xyz_pix_fmts", "ff_tns_max_bands_480", "upsample_plane_c", "sum_abs_dctelem_c", "pred8x16_128_dc_9_c", "vq_hebap4", "btype_vlc_codes", "huff_b47_cb", "sami_close", "mpegaudio_parse", "huff_cmp_sym", "put_no_rnd_qpel8_mc30_c", "avg_vc1_mspel_mc20_16_c", "lsf_cb3", "pred8x16_mad_cow_dc_l0t_12", "horiz_scan4x4_x", "ff_cavs_chroma_qp", "huff_icc_df_codes", "cng_decode_init", "opus_rc_init", "q3_1_table.9774", "ff_h263_decode_motion", "ff_h264_update_thread_context", "ssd_int8_vs_int16_c", "p16weight", "swb_offset_128_16", "put_line", "ff_put_no_rnd_pixels8_y2_arm", "pred4x4_down_right_9_c", "diag_scan2x2_inv", "mpeg2_dc_scale_table3", "fft32768_neon", "ff_ut_huff_cmp_len", "bfu_amount_tab3", "w_c.isra.3.constprop.5", "codes10", "ff_tiff_ellipsoid_codes", "ff_twinvq_wtype_to_ftype_table", "ff_wmv2_encode_picture_header", "ff_msmpeg4_decode_init", "pred8x8l_down_left_14_c", "pred8x8l_down_left_9_c", "ljpeg_encode_init", "ff_mv_vlc", "transform_skip_10", "pred8x8_top_dc_8_c", "ff_vc1_adv_interlaced_4x4_zz", "put_8tap_smooth_16v_c", "codetable", "weight_h264_pixels2_12_c", "pred8x8l_horizontal_8_c", "mpa_huff_tables", "sample_fmts_s16", "ff_avg_dirac_pixels32_l2_c", "put_header", "ff_put_signed_pixels_clamped_neon", "put_cavs_filt8_hv_jj.isra.4", "MPV_motion_lowres", "atrac3p_sf_huff_bits4", "bitalloc_17_codes_d", "qmat33", "ff_aac_kbd_short_128_fixed", "ff_h264_idct_dc_add_9_c", "pred16x16_128_dc_9_c", "avg_8tap_sharp_8hv_c", "tgq_decode_frame", "fft_permute_c", "ff_jpeg2000_encoder", "atrac3p_wl_huff_bits1", "calc_one_scale", "table_mb_btype", "ff_pcm_bluray_decoder", "ts_cb_0", "put_hevc_qpel_uni_w_h_9", "huff_b52_xlat", "qmat1B", "avg_no_rnd_pixels16_y2_8_c", "ff_mpeg_flush", "quant_vlc", "pred8x8_dc_rv40_c", "put_rv40_qpel16_mc13_c", "ff_pred16x16_128_dc_neon", "band_size_long", "ff_hevc_cu_chroma_qp_offset_flag", "ff_avg_pixels16x16_c", "put_vc1_mspel_mc33_16_c", "ff_avg_rv40_qpel8_mc03_neon", "avg_bilin_64hv_c", "no_sub_motion_search", "swb_offset_1024_16", "fixed_exp.9953", "decode_hf_c", "bitalloc_17_bits_c", "serpent2.9881", "vp31_ac_scale_factor", "mlp_select_pack_output", "ff_tilt_compensation", "ff_mlp_pack_output_inorder_8ch_3shift_armv6", "horizontal_compose_dd97i", "vlc_tab_tone_level_idx_hi1_huffbits", "ff_kbd_window_init", "ff_put_pixels16_y2_arm", "bink_tree_bits", "pnm_decode_frame", "diag_scan8x8_inv", "celt_bit_interleave", "lut_nmsedec_sig0", "ts_cb_3", "ff_hevc_put_qpel_uw_h1v2_neon_8", "pred8x8l_vertical_add_12_c", "ff_mqc_init_contexts", "ff_t_sqrt", "bitalloc_17_bits_e", "ff_vc1_norm6_codes", "i_mb_type_info", "uni_h261_rl_len", "ff_pred8x8_l00_dc_neon", "zero_run_get_bits", "put_h264_qpel16_mc32_9_c", "avg_rv30_tpel16_mc22_c", "put_hevc_qpel_hv_9", "dnxhd_1252_luma_weight", "diff_pixels_c", "ff_w_tab_sr", "ff_h264_slice_context_init", "put_h264_qpel4_mc00_10_c", "ff_mdct_fixed_calc_neon", "qmat14", "ff_dca_lfe_index", "jpeg2000_decode_packets_po_iteration", "ff_put_pixels8_xy2_neon", "__aeabi_frsub", "swb_offset_1024_32", "dnxhd_1250_ac_flags", "ff_movtext_encoder", "qmat43", "NR_ALLPASS_BANDS", "adaptive_cb_gain85", "vertical_compose_daub97iH1", "table.12581", "ff_put_rv40_qpel16_mc10_neon", "pred4x4_horizontal_9_c", "put_h264_qpel8_mc13_12_c", "ff_atrac3p_power_compensation", "ff_vplayer_decoder", "ff_sbr_sum_square_neon", "coeff_table_token_13", "svq1_encode_frame", "wma_decode_block", "cb4440sl0", "bitalloc_25_codes_g", "ff_avg_rv40_qpel8_mc30_neon", "huff_a51_xlat", "vp9_row_scan_16x16", "ff_h263_resync", "ff_jpeg2000_dwt_init", "cb4448sl1", "bitalloc_7_bits_b", "vwin128", "aac_chan_configs", "put_h264_qpel4_mc21_9_c", "avg_cavs_qpel16_mc01_c", "avg_h264_qpel8_h_lowpass_8", "sao_edge_restore_0_8", "cb1616sl1", "bswap_buf", "binkb_initialised.10351", "ff_sine_2048", "__JCR_LIST__", "vc1_decode_init", "put_hevc_qpel_bi_w_hv_12", "huff_a75_xlat", "ff_pcm_s32le_encoder", "put_8tap_smooth_8h_c", "mpc8_q2_bits", "put_cavs_filt8_v_qpel_l", "ff_hevc_split_transform_flag_decode", "top_modifier_l", "ff_vc1_subblkpat_vlc", "read_block", "ff_on2avc_scale_diff_bits", "huff_b03_xlat", "put_h264_qpel8_mc00_10_c", "ff_vc1_1ref_mvdata_bits", "pred8x8l_vertical_filter_add_14_c", "ff_wmv2_inter_table", "svq1_inter_codebook_4x2", "ts_cb_1", "idct_col_armv6", "add_rect_clamped_c", "mpeg12_pixfmt_list_444", "pred8x8l_128_dc_8_c", "silk_quant_offset", "biweight_h264_pixels8_10_c", "decode_block.isra.3", "ff_mvc2_decoder", "lentab.9650", "silk_model_stereo_s3", "ff_cbpc_b_tab", "put_pixels16_y2_8_c", "ff_dot_product", "tr8f", "decode_init_mp3on4", "ff_put_rv40_qpel16_mc11_neon", "put_hevc_qpel_h_12", "scan_word.isra.4.constprop.12", "intra_chroma_table.12468", "delta_tab_1_4_m10", "ff_ue_golomb_vlc_code", "codes.10224", "put_tpel_pixels_mc12_c", "high_log_factor_step", "ts_cb_7", "ff_put_h264_qpel8_mc10_neon", "ff_hevc_cu_transquant_bypass_flag_decode", "pred8x16_left_dc_12_c", "ff_vc1_if_1mv_mbmode_codes", "avg_h264_qpel4_mc30_14_c", "bl_put_epel_h6_armv6", "put_8tap_sharp_8hv_c", "ff_hevc_split_coding_unit_flag_decode", "avg_h264_qpel16_v_lowpass_neon", "avg_scaled_8tap_c.constprop.18", "qmat4D", "cb1616l0", "hqx_decode_422", "mss2_decode_frame", "copy16_c", "type_sizes", "psy_vbr_map", "pgsdec_class", "loop_filter_v_44_16_c", "flac_encoder_class", "__compound_literal.47", "utvideo_encode_frame", "qmat46", "__do_global_dtors_aux", "ff_ivi_direct_scan_4x4", "order_MODE_7k95", "pred8x8_129_dc_10_c", "band_size_short", "ff_mp3on4_decoder", "atrac3p_sf_huff_code2", "diag_downleft_32x32_c", "vp8_idct_add_c", "ff_on2avc_tabs_9_20_2", "ff_cos_1024", "put_h264_qpel16_mc22_9_c", "ff_msmpeg4_decode_block", "intra_pred_5_8", "weight_h264_pixels8_10_c", "ff_avg_dirac_pixels16_c", "huff_b74_cb", "pred_planar_0_8", "wmavoice_mean_lsf16", "remap20.constprop.7", "ff_h264_mb_sizes", "ff_mpeg4_pred_ac", "ff_sine_windows_fixed", "ff_mpegvideo_decoder", "table.11522", "encode_q_branch", "biweight_dirac_pixels32_c", "ff_combine_frame", "pred8x8l_horizontal_filter_add_12_c", "put_cavs_qpel16_mc10_c", "put_h264_qpel8_mc13_9_c", "vp3_idct_start_neon", "swb_offset_1024_64", "cb4432s1", "mode_conv.12300", "ff_cavs_load_intra_pred_chroma", "ff_ffvhuff_decoder", "pred8x8_vertical_add_8_c", "aic_top_vlc", "bitalloc_7_codes_b", "ff_pcm_s16be_encoder", "avg_pixels2_y2_8_c", "qcelp_lspvq3", "avg_h264_qpel16_mc11_12_c", "ff_on2avc_quad_cb_codes", "ff_vp56_decode_frame", "on2avc_cb5_codes", "ff_pcm_u8_encoder", "avg_h264_qpel4_mc33_9_c", "rv_to_av_frame_type", "twinvq_decode_init", "wmv2_decode_init", "atrac3p_huff_wav_ampsf1_xlat", "avg_bilin_64v_c", "ff_mpeg4_get_video_packet_prefix_length", "avg_h264_qpel16_mc31_8_c", "cb2224sm0", "interlaced_search.constprop.7", "celt_cache_index", "ff_cscd_decoder", "ff_lock_avcodec", "ff_add_pixels_clamped_neon", "lsp_sub4_init", "pred_angular_0_12", "put_h264_qpel2_mc31_8_c", "fill_decode_neighbors", "ff_vorbis_channel_layouts", "swb_size_1024_48", "avg_vc1_mspel_mc22_16_c", "avg32_c", "ff_alac_channel_elements", "avg_h264_qpel4_mc02_9_c", "build_xlaw_table", "ff_cavs_next_mb", "ff_put_pixels16_armv6", "ass_decode_init", "vp8_idct_dc_add4uv_c", "weight_h264_pixels16_14_c", "ff_hevc_diag_scan4x4_x", "silk_ltp_scale_factor", "ass_sections", "put_h264_qpel2_mc32_9_c", "vert_left_16x16_c", "ct_vlc_tabs", "microdvd_init", "webvtt_style_cb", "ff_g723_1_encoder", "h264_v_loop_filter_luma_intra_12_c", "diff_bytes_c", "pred8x16_horizontal_9_c", "delta_tab_1_3_m10", "table.10620", "swb_size_128_16", "bits5", "ff_tiertexseqvideo_decoder", "ff_h263_decode_mb", "ff_ue_golomb_len", "cdt3", "syn_bw_tab", "put_vc1_mspel_mc32_c", "pred8x8l_horizontal_add_10_c", "codes5", "cng_encode_frame", "idct_col4_st8_neon", "put_hevc_pel_uni_pixels_8", "pred16x16_plane_8_c", "ff_hevc_put_qpel_h2v1_neon_8", "cb1110l1", "ff_vc1_mv_diff_codes", "put_h264_qpel8_mc10_8_c", "mpc7_decode_frame", "ff_vc1_bfraction_bits", "ff_sanm_decoder", "frequencies.9634", "silk_resample_delay", "cb0806sm1", "evrc_decode_init", "cvh_huffbits2", "ff_put_pixels16x16_c", "rv40_v_strong_loop_filter", "imdct_and_windowing", "cinepak_decode_end", "sp5x_data_dht", "decode_hrd_parameters", "glyph8_x", "pred4x4_129_dc_8_c", "band_spectrum", "ff_ac3_validate_metadata", "vp6_parse_coeff_models", "idct_idct_16x16_add_c", "put_h264_qpel16_mc32_14_c", "bits6", "vlc_tab_type34_huffbits", "decode_unregistered_user_data", "put_cavs_qpel8_mc22_c", "table.9827", "transform_4x4_luma_12", "ff_ac3_enc_channel_map", "fic_qmat_hq", "sintbl_4", "avg_h264_qpel4_mc01_14_c", "xcodes", "q9up_table.9768", "ff_vp7_decoder", "huff_a36_cb", "delta_tab_1_1", "bl_put_epel_h4_armv6", "ff_avg_rv40_qpel8_mc10_neon", "rv40_h_strong_loop_filter", "bits3", "amrnb_decode_init", "avg_vc1_mspel_mc23_16_c", "ff_vc1_2mv_block_pattern_bits", "put_h264_qpel16_mc02_10_c", "put_h264_qpel2_mc10_12_c", "b4_mantissas", "avg_h264_qpel8_mc33_8_c", "put_cavs_qpel8_mc03_c", "__end_a_evaluation", "ff_dca_high_freq_vq", "ff_pcm_s16be_planar_decoder", "h264_h_loop_filter_chroma_10_c", "bitalloc_17_codes_f", "silk_decode_frame", "sipr_decode_frame", "table.12289", "loop_filter_v_8_8_c", "pred8x8_127_dc_12_c", "table0_run", "escape124_decode_init", "huff_iid_dt0_bits", "ff_msvideo1_encoder", "dfa_decode_frame", "ff_asv_level_tab", "ff_cpia_decoder", "avg_qpel16_mc11_c", "ff_put_vc1_chroma_mc8_neon", "dct_max16_c", "table.12375", "fft_calc", "wmavoice_gain_universal", "fixed_coeffs", "celt_static_alloc", "default_scaling_list_inter", "atrac3p_wl_weights", "put_scaled_regular_32_c", "put_h264_qpel4_v_lowpass_12.constprop.42", "ff_hevc_sao_offset_sign_decode", "bark_tab_m44_512", "put_h264_qpel8_mc13_10_c", "ff_pcm_u24le_decoder", "ff_chomp_bsf", "flac_parse_init", "bitalloc_129_bits_c", "pred8x8l_vertical_left_12_c", "encode_plane_bitstream", "avg_h264_qpel4_mc22_9_c", "ff_get_format", "avg_h264_qpel8_mc33_10_c", "avg_h264_qpel8_hv_lowpass_8", "codebook4", "put_rv30_tpel8_mc11_c", "xan_decode_frame", "ff_aura2_decoder", "avg_tpel_pixels_mc11_c", "atrac3p_wl_huff_code2", "encode_header", "set_sps", "ivi4_quant_4x4_intra", "is_nonnull_frame", "h264_h_loop_filter_chroma422_mbaff_intra_14_c", "amv_encode_picture", "hor_4x4_c", "table.11500", "apply_dependent_coupling", "bark_tab_l11s_512", "ff_mjpeg_decode_init", "avg_rv40_qpel8_mc03_c", "ff_adpcm_ima_ea_sead_decoder", "h263_parse", "avg_scaled_bilin_c.constprop.10", "vp8_put_epel_v6_armv6", "ff_on2avc_pair_cb_bits", "bitalloc_129_bits_f", "put_h264_qpel4_mc22_14_c", "ff_mpeg4_default_intra_matrix", "abits_sizes", "decode_rice.constprop.8", "copy4_c", "aac_cb_out_map", "dequant8_coeff_init", "rv34_table_inter_secondpat", "cdt2", "pred16x16_129_dc_9_c", "ff_vp8_h_loop_filter16_simple_armv6", "put_h264_qpel2_mc03_12_c", "epel_weights", "put_hevc_qpel_bi_h_8", "left.13321", "put_pixels8_l2_8", "ff_hevc_compute_poc", "ff_table_mb_non_intra", "opus_decode_close", "ape_decode_frame", "put_hevc_qpel_bi_w_v_8", "put_vc1_mspel_mc03_c", "avg_h264_qpel16_mc11_9_c", "h261_decode_gob_header", "put_h264_qpel16_mc01_8_c", "ff_put_vp8_bilin8_v_neon", "SPILL_MASK", "atrac3p_huff_numwavs2_cb", "ff_scalarproduct_int16_neon", "ff_slice_buffer_destroy", "huff_b62_cb", "mss2_blit_wmv9_c", "ipvideo_decode_end", "model_reset", "pred16x16_dc_8_c", "ff_h261_encoder", "apply_channel_coupling", "ff_sbr_hf_apply_noise_3_neon", "put_no_rnd_qpel16_mc01_c", "ff_mlp_huffman_tables", "pix_decode_header", "cx_states", "svq1_inter_mean", "dnxhd_1243_chroma_weight", "ulti_decode_frame", "avg_h264_qpel4_mc20_9_c", "qoffset_inter_tab", "ff_huffyuvdsp_init", "put_no_rnd_qpel8_mc33_c", "put_h264_qpel4_mc13_9_c", "xl_table", "cb2224l1", "ff_h264_get_profile", "pred_angular_3_8", "ff_h261_rl_tcoeff", "table.12004", "fft128_vfp", "dico23_isf_36b", "evrc_lspq_full_codebook4", "ff_mjpeg_parser", "qmat03", "dvdsub_encode", "intra_pred_angle.12037", "ff_avg_dirac_pixels16_l2_c", "avg_scaled_sharp_32_c", "ff_eac3_get_frame_exp_strategy", "put_hevc_epel_uni_w_h_10", "ff_h264_idct_add_12_c", "ff_put_qpel8_mc32_old_c", "put_h264_qpel8_mc21", "fcb11l", "ff_vector_clipf_neon", "avg_h264_qpel4_mc31_14_c", "ff_ivi_recompose53", "qmat29", "avg_no_rnd_vc1_chroma_mc4_c", "gen_acb_excitation.isra.4", "put_qpel8_mc21_c", "parcor_to_lpc", "ff_interleaved_ue_golomb_vlc_code", "ff_bmp_encoder", "ff_mpc_dequantize_and_synth", "non_linear_qscale.12975", "h264_h_loop_filter_chroma_14_c", "apply_pitch_filters", "ff_vc1_intfr_4mv_mbmode_codes", "table.10233", "ff_jacosub_decoder", "atrac3p_wl_huff_bits3", "get_visual_weight", "vp8_dct_cat3_prob", "vp8_decode_frame_header", "put_h264_qpel2_mc00_14_c", "put_h264_qpel8_v_lowpass_l2_neon", "atrac3p_decode_close", "ir_filter_strong", "ff_wmv1_scantable", "ff_targa_decoder", "mm_decode_init", "tscc2_nc_vlc_syms", "dico23_isf", "codebook25", "coeff_table_token_11", "silk_model_lsf_s1", "ff_hevc_put_qpel_uw_pixels_w32_neon_8", "avg_h264_qpel16_mc12_14_c", "ff_avg_h264_qpel16_mc02_neon", "rv34_intra_coeff", "ff_vmnc_decoder", "ff_ps_apply_fixed", "huff_bits", "ff_flv_decoder", "band_index_long", "gather_data_for_subcel", "atrac3p_wl_huff_xlat1", "ff_mpeg4videodec_static_init", "ivi4_vertical_scan_4x4", "get_cabac_noinline", "mv_scan", "ff_mpeg4_frame_end", "intra_pred_2_12", "avg_h264_qpel8_mc02_9_c", "put_h264_qpel8_mc12_14_c", "avg_cavs_filt8_hv_kk.isra.20", "ff_vc1_ttblk_to_tt", "cb1110ss0", "uni_DCtab_lum_len", "cb_to_add", "avg_h264_qpel8_mc12_10_c", "shuf2.9876", "ff_tget_double", "v410_decode_init", "dca_parse_audio_coding_header.constprop.10", "qmat42", "vorbis_decode_close", "alpha_table", "mpc8_q3_bits", "mpa_huffcodes_2", "avg_tpel_pixels_mc21_c", "evrc_lspq_quant_codebooks", "loco_decode_plane.isra.4", "hor_down_16x16_c", "ff_put_vp8_epel4_h6v4_armv6", "msrle_decode_frame", "chomp_filter", "ff_put_pixels16_x2_arm", "iquant_tbl24", "ff_cos_4096", "delta_tab_1_6_m10", "transform_add16x16_9", "ff_lpc_calc_ref_coefs_f", "ff_hevc_put_qpel_uw_h3v3_neon_8", "avg_h264_qpel4_mc31_10_c", "bits11", "decode_init_static", "ff_put_vc1_mspel_mc23_16_neon", "ff_avg_pixels8_armv6", "put_8tap_sharp_8h_c", "avg_h264_qpel8_mc01_10_c", "ff_y41p_encoder", "h264_v_loop_filter_luma_14_c", "write_frame.isra.0", "put_vc1_mspel_mc31_c", "huff_a25_xlat", "xwd_decode_frame", "ff_adpcm_ct_decoder", "predictor_decode_stereo_3930", "table_data", "fallback_cquant", "bitalloc_25_codes_d", "__compound_literal.14", "ff_vp56_candidate_predictor_pos", "ff_ra_144_decoder", "h264_v_loop_filter_luma_8_c", "ct_nb_codes.10055", "ff_anm_decoder", "ff_jref_idct1_add", "av_sincos_sf", "mpc7_hdr", "h263_chroma_roundtab.9565", "ff_mlp_decoder", "h261_tcoeff_run", "put_hevc_epel_h_8", "escape124_decode_close", "cb2224s0", "huff_a32_cb", "put_h264_qpel4_mc11_14_c", "eval_motion_dist.constprop.14", "avg_h264_qpel16_mc31_14_c", "ff_rv34_decode_init_thread_copy", "psy_3gpp_analyze", "ff_xvid_idct_init", "idct_4x4_8", "split_radix_permutation", "put_h264_qpel8_mc20_14_c", "ff_h264_chroma422_dc_dequant_idct_10_c", "lut_nmsedec_sig", "huff_a63_xlat", "ff_mpv_frame_start", "sinc_win", "bitalloc_129_bits_d", "ff_sine_128", "h264_v_loop_filter_chroma_intra_14_c", "ff_h264_chroma422_dc_dequant_idct_8_c", "ff_cdxl_decoder", "alac_linear_predictor", "ff_vorbis_inverse_coupling_neon", "spatial_compensation_8", "put_h264_qpel4_mc12_10_c", "huff_a21_cb", "pred8x8_mad_cow_dc_0lt_8", "contribtab", "do_apply_filter.isra.5", "idct_32x32_10", "wmavoice_dq_lsp16i3", "rv34_output_i16x16", "F_tbl24", "ff_dwt_destroy", "ff_mjpeg_init_hvsample", "ff_h261_parser"], "dependencies": ["libswresample.so.1", "libavutil.so.54", "libc.so.6", "libpthread.so.0", "libm.so.6"], "elfname": "libavcodec.so.56"}