{"globalvars": ["h263_parser", "ff_squareTbl", "ff_h263_inter_MCBPC_code", "mpeg4_dc_threshold", "ff_h263_loop_filter_strength", "ff_h263_rl_inter", "ff_mpeg1_default_non_intra_matrix", "ff_h263_inter_MCBPC_vlc", "inter_run", "ff_h264_lps_state", "ff_mpeg12_vlc_dc_lum_bits", "h263p_encoder", "ff_h264_lps_range", "ff_lockmgr_cb", "ff_rl_mpeg2", "msmpeg4v3_encoder", "h263_encoder", "ff_zigzag_direct", "ff_mpeg2_aspect", "ff_interleaved_golomb_vlc_len", "rl_intra_aic", "ff_alternate_vertical_scan", "ff_h263_cbpy_vlc", "ff_mjpeg_bits_dc_luminance", "ff_cos_2048", "ff_hwaccel_pixfmt_list_420", "inv_zigzag_direct16", "ff_mjpeg_val_ac_chrominance", "cbpc_b_tab", "thp_decoder", "ff_inverse", "ff_cos_1024", "ff_h264_mps_state", "ff_mpeg1_default_intra_matrix", "ff_inv_aanscales", "ff_interleaved_se_golomb_vlc_code", "ff_cos_16", "ff_mpeg4_static_rl_table_store", "ff_mpeg4_DCtab_chrom", "ff_h263_intra_MCBPC_vlc", "ff_mpeg4_c_dc_scale_table", "ff_ue_golomb_vlc_code", "flv_decoder", "wmv1_encoder", "ff_mpeg4_default_intra_matrix", "ff_h263_static_rl_table_store", "ff_h263_cbpy_tab", "h263_decoder", "ff_mpeg12_mbMotionVectorTable", "ff_cos_8192", "ff_mpeg12_vlc_dc_chroma_code", "ff_mpeg12_vlc_dc_lum_code", "ff_h263_intra_MCBPC_code", "inter_vlc", "ff_mpeg4_default_non_intra_matrix", "h263i_decoder", "ff_mjpeg_val_ac_luminance", "rvlc_rl_intra", "flv_encoder", "ff_mpeg4_y_dc_scale_table", "ff_interleaved_ue_golomb_vlc_code", "ff_mjpeg_bits_dc_chrominance", "mpeg4video_parser", "msmpeg4v2_encoder", "modified_quant_tab", "ff_cos_32768", "ff_mjpeg_bits_ac_chrominance", "ff_mpeg4_intra_run", "ff_mpeg4_intra_vlc", "ff_mpeg4_resync_prefix", "sprite_trajectory_tab", "svq3_decoder", "ff_mpeg4_DCtab_lum", "ff_h264_norm_shift", "ff_log2_run", "ff_cos_tabs", "ff_cropTbl", "ff_cos_16384", "ff_mpeg4_rl_intra", "ff_mjpeg_bits_ac_luminance", "h264_decoder", "ff_h263_pixel_aspect", "ff_golomb_vlc_len", "ff_mba_length", "ff_mpeg1_aspect", "ff_mjpeg_val_dc", "ff_h263_intra_MCBPC_bits", "ff_mpeg12_mbPatTable", "ff_mpeg1_dc_scale_table", "ff_rl_mpeg1", "ff_frame_rate_tab", "h263_mbtype_b_tab", "mvtab", "ff_cos_4096", "ff_raw_pix_fmt_tags", "intra_rvlc", "inter_rvlc", "ff_mba_max", "ff_pixfmt_list_420", "ff_h263_chroma_qscale_table", "ff_cos_65536", "mpeg4_encoder", "ff_ue_golomb_len", "ff_mpeg12_vlc_dc_chroma_bits", "msmpeg4v1_encoder", "mpeg4_decoder", "ff_alternate_horizontal_scan", "mb_type_b_tab", "ff_cos_128", "ff_se_golomb_vlc_code", "ff_zigzag248_direct", "h263_format", "ff_aic_dc_scale_table", "rvlc_rl_inter", "ff_mpeg12_mbAddrIncrTable", "ff_h263_inter_MCBPC_bits", "inter_level", "ff_aanscales", "mjpeg_encoder", "ff_mpeg2_dc_scale_table", "ff_cos_64", "ff_h264_mlps_state", "mjpeg_decoder", "ff_cos_512", "ff_interleaved_dirac_golomb_vlc_code", "ff_cos_256", "ff_mpeg4_intra_level", "ff_h264_chroma_qp", "ff_cos_32"], "importedglobals": ["_ctype_", "ff_sqrt_tab", "__stack_chk_guard", "av_reverse", "_toupper_tab_", "av_pix_fmt_descriptors"], "importedfunctions": ["pthread_mutex_init", "memcpy", "av_log", "sscanf", "pthread_cond_destroy", "av_realloc", "av_image_copy", "pthread_cond_broadcast", "sqrt", "av_parse_video_rate", "llrintf", "pow", "raise", "av_set_string3", "lrint", "av_get_pix_fmt", "memset", "av_malloc", "pthread_mutex_unlock", "strcmp", "av_image_check_size", "exp", "av_image_fill_pointers", "pthread_cond_init", "av_image_copy_plane", "av_reduce", "memmove", "strncmp", "av_opt_show2", "av_parse_expr", "pthread_join", "llrint", "strchr", "av_parse_video_size", "av_image_fill_linesizes", "av_log_get_level", "pthread_mutex_lock", "av_free_expr", "av_free", "qsort", "av_freep", "__stack_chk_fail", "memcmp", "sin", "abort", "pthread_mutex_destroy", "lrintf", "pthread_cond_signal", "ceil", "strlen", "snprintf", "av_opt_set_defaults2", "log", "av_strlcat", "av_strlcpy", "av_strdup", "av_image_get_linesize", "av_mallocz", "cos", "av_eval_expr", "pthread_create", "__assert2", "pthread_cond_wait", "av_gcd"], "exportedfunctions": ["ff_simple_idct_add_neon", "ff_mpeg4_init_partitions", "ff_put_no_rnd_qpel8_mc31_old_c", "ff_simple_idct_add_armv5te", "ff_avg_h264_qpel8_mc31_neon", "ff_h264dsp_init", "__gnu_Unwind_Backtrace", "avcodec_open", "h263_encode_picture_header", "avcodec_init", "__gnu_Unwind_Save_WMMXD", "j_rev_dct", "ff_get_plane_bytewidth", "__gnu_unwind_frame", "ff_mjpeg_decode_end", "ff_rate_control_init", "ff_dct_unquantize_h263_inter_neon", "MPV_encode_picture", "avcodec_encode_audio", "ff_put_no_rnd_qpel8_mc33_old_c", "ff_avg_h264_chroma_mc8_neon", "ff_pred8x8_128_dc_neon", "avcodec_register_all", "ff_put_h264_qpel8_mc32_neon", "ff_put_no_rnd_qpel16_mc12_old_c", "avcodec_thread_free", "ff_put_h264_chroma_mc8_neon", "ff_put_h264_chroma_mc4_neon", "ff_avg_h264_qpel16_mc11_neon", "ff_faanidct", "ff_put_qpel8_mc12_old_c", "_Unwind_Complete", "ff_put_pixels8_xy2_no_rnd_neon", "ff_avg_h264_qpel8_mc33_neon", "ff_avg_qpel16_mc12_old_c", "ff_vector_fmul_window_c", "ff_simple_idct_armv5te", "ff_h264_idct_dc_add_c", "avcodec_default_get_buffer", "ff_avg_qpel8_mc13_old_c", "ff_put_pixels8_y2_no_rnd_armv6", "img_get_alpha_info", "ff_put_pixels8_x2_neon", "ff_h264_decode_extradata", "_Unwind_ForcedUnwind", "avcodec_get_channel_layout_string", "ff_mpeg4_decode_picture_header", "av_set_string2", "ff_faanidct_put", "av_dup_packet", "ff_h264_decode_ref_pic_list_reordering", "avcodec_sample_fmt_string", "ff_put_no_rnd_pixels8_x2_arm", "ff_put_pixels16_x2_no_rnd_armv6", "avcodec_channel_layout_num_channels", "ff_h263_decode_mb", "ff_simple_idct44_add", "ff_flv2_decode_ac_esc", "ff_clean_intra_table_entries", "ff_put_no_rnd_qpel16_mc31_old_c", "ff_pred16x16_vert_neon", "av_bitstream_filter_close", "av_free_packet", "ff_biweight_h264_pixels_4x4_neon", "ff_pred16x16_left_dc_neon", "av_codec_next", "_Unwind_GetLanguageSpecificData", "ff_h264_hl_decode_mb", "ff_h264_get_slice_type", "_Unwind_GetRegionStart", "ff_h264_decode_nal", "ff_mpeg4_stuffing", "ff_h264_idct8_add4_neon", "ff_put_h264_qpel16_mc31_neon", "ff_find_unused_picture", "ff_h263_encode_mba", "ff_mjpeg_decode_init", "ff_avg_pixels16_armv6", "ff_h264_frame_start", "ff_put_h264_qpel8_mc03_neon", "ff_pix_abs8_armv6", "ff_draw_horiz_band", "j_rev_dct2", "avcodec_get_pix_fmt_name", "ff_pred8x8_dc_neon", "av_audio_convert_free", "ff_avg_h264_qpel16_mc10_neon", "j_rev_dct1", "avcodec_get_chroma_sub_sample", "ff_epzs_motion_search", "ff_dsputil_init_neon", "ff_h264_idct8_add4_c", "ff_simple_idct_add", "ff_set_systematic_pal", "ff_pred8x8_vert_neon", "ff_pred8x8_l00_dc_neon", "avcodec_pix_fmt_string", "h263_encode_init", "ff_h264_decode_init", "ff_vector_fmul_vfp", "ff_put_h264_qpel8_mc02_neon", "av_destruct_packet", "ff_put_pixels16_x2_neon", "ff_init_block_index", "ff_avg_h264_qpel16_mc30_neon", "ff_add_pixels_clamped_armv6", "ff_put_pixels16_neon", "ff_avg_pixels16x16_c", "ff_put_pixels16_x2_armv6", "ff_h264_idct_dc_add_neon", "ff_check_alignment", "ff_avg_h264_qpel16_mc33_neon", "ff_h263_decode_init", "ff_avg_h264_chroma_mc2_neon", "ff_h264_decode_mb_cavlc", "av_bitstream_filter_next", "av_resample", "avcodec_thread_init", "dsputil_init_arm", "ff_weight_h264_pixels_16x16_neon", "_Unwind_Resume", "ff_avg_h264_qpel8_mc12_neon", "_Unwind_Resume_or_Rethrow", "ff_h264_v_loop_filter_luma_neon", "av_bitstream_filter_filter", "init_vlc_sparse", "ff_pred16x16_dc_neon", "ff_get_best_fcode", "__divdf3", "__restore_core_regs", "avcodec_find_encoder_by_name", "dsputil_static_init", "ff_pre_estimate_p_frame_motion", "ff_int32_to_float_fmul_scalar_neon", "ff_h264_decode_init_vlc", "ff_simple_idct", "ff_find_start_code", "ff_pred8x8_0lt_dc_neon", "ff_alloc_picture", "j_rev_dct4", "ff_init_me", "av_picture_pad", "ff_avg_qpel8_mc11_old_c", "ff_estimate_b_frame_motion", "ff_put_pixels16_y2_no_rnd_neon", "ff_shrink22", "ff_put_string", "ff_sv_fmul_scalar_4_neon", "ff_h264_filter_mb_fast", "ff_avg_h264_qpel8_mc00_neon", "ff_pred8x8_0l0_dc_neon", "ff_h264_check_intra4x4_pred_mode", "ff_put_pixels8_x2_no_rnd_armv6", "ff_h264_idct8_dc_add_c", "avcodec_flush_buffers", "__fixunssfdi", "ff_butterflies_float_neon", "_Unwind_GetCFA", "ff_vector_fmul_scalar_neon", "ff_flv2_encode_ac_esc", "ff_h264_check_intra_pred_mode", "__gnu_Unwind_Restore_WMMXD", "__gnu_Unwind_Resume", "avcodec_alloc_context2", "denoise_dct_c", "ff_toupper4", "ff_put_no_rnd_qpel8_mc11_old_c", "avpicture_deinterlace", "av_register_hwaccel", "___Unwind_ForcedUnwind", "av_xiphlacing", "h263_pred_motion", "ff_dsputil_init_armv6", "ff_float_to_int16_vfp", "ff_mjpeg_decode_frame", "avcodec_get_frame_defaults", "av_audio_convert_alloc", "ff_mjpeg_build_huffman_codes", "av_get_pict_type_char", "ff_weight_h264_pixels_4x8_neon", "audio_resample_close", "ff_simple_idct_arm", "ff_fetch_timestamp", "MPV_encode_end", "ff_avg_h264_qpel16_mc01_neon", "ff_put_h264_qpel8_mc01_neon", "av_destruct_packet_nofree", "ff_avg_h264_qpel8_mc02_neon", "ff_avg_h264_qpel16_mc31_neon", "av_parser_change", "avcodec_default_get_format", "ff_init_cabac_decoder", "ff_weight_h264_pixels_8x16_neon", "ff_avg_h264_qpel8_mc23_neon", "ff_j_rev_dct_arm", "av_log_missing_feature", "ff_fft_permute_neon", "ff_h264_alloc_tables", "avpicture_fill", "ff_put_qpel16_mc31_old_c", "ff_vector_fmul_window_neon", "ff_put_qpel8_mc32_old_c", "register_avcodec", "ff_get_2pass_fcode", "ff_vector_fmul_sv_scalar_4_neon", "avsubtitle_free", "ff_avg_qpel16_mc31_old_c", "avcodec_decode_audio2", "__udivsi3", "ff_get_pixels_armv6", "___Unwind_Resume_or_Rethrow", "av_audio_resample_init", "avcodec_decode_video", "av_fast_realloc", "av_get_bits_per_sample_format", "__gnu_Unwind_Resume_or_Rethrow", "ff_pred8x8_l0t_dc_neon", "avpicture_get_size", "dct_quantize_trellis_c", "ff_match_2uint16", "ff_h264_lowres_idct_add_c", "ff_avg_h264_qpel16_mc02_neon", "ff_dsputil_init_armv5te", "ff_svq3_luma_dc_dequant_idct_c", "__divsi3", "ff_avg_qpel16_mc32_old_c", "avcodec_default_execute", "ff_h264_idct_add_c", "__gnu_Unwind_RaiseException", "ff_float_to_int16_interleave_neon", "ff_scalarproduct_and_madd_int16_neon", "ff_er_frame_start", "ff_mjpeg_decode_sof", "ff_put_pixels8_y2_no_rnd_neon", "av_picture_crop", "ff_avg_h264_qpel8_mc10_neon", "ff_mjpeg_encode_dc", "ff_scalarproduct_float_neon", "ff_avg_h264_qpel8_mc03_neon", "ff_put_pixels8_y2_neon", "ff_h264_remove_all_refs", "ff_vector_fmul_reverse_neon", "ff_put_h264_qpel16_mc21_neon", "audio_resample_init", "ff_h264_fill_mbaff_ref_list", "av_resample_compensate", "avcodec_pix_fmt_to_codec_tag", "_Unwind_VRS_Set", "__gnu_Unwind_Save_VFP_D_16_to_31", "ff_vector_clipf_neon", "ff_put_h264_qpel16_mc33_neon", "ff_mpeg4_find_frame_end", "ff_clear_block_neon", "h263_decode_init_vlc", "ff_h264_direct_dist_scale_factor", "ff_avg_h264_qpel8_mc11_neon", "ff_put_h264_qpel8_mc11_neon", "__gnu_Unwind_Restore_VFP_D", "avcodec_license", "ff_fdct248_islow", "avcodec_decode_subtitle", "ff_h263_decode_frame", "ff_mpeg4_get_video_packet_prefix_length", "ff_avg_pixels16_neon", "ff_avg_qpel16_mc11_old_c", "ff_copy_picture", "ff_weight_h264_pixels_8x8_neon", "ff_avg_h264_qpel8_mc01_neon", "ff_set_cmp", "ff_parse1_close", "ff_put_no_rnd_qpel16_mc33_old_c", "ff_er_frame_end", "h263_encode_mb", "ff_put_pixels16_armv6", "ff_put_qpel8_mc33_old_c", "ff_avg_pixels8x8_c", "ff_h264_h_loop_filter_chroma_neon", "ff_h264_execute_ref_pic_marking", "init_vlc_rl", "ff_put_qpel16_mc32_old_c", "ff_put_pixels8_xy2_neon", "ff_h264_reset_sei", "av_resample_close", "ff_rate_control_uninit", "ff_pred8x8_hor_neon", "ff_rate_estimate_qscale", "dsputil_init", "___Unwind_Resume", "_Unwind_GetDataRelBase", "h263_pred_dc", "av_picture_data_copy", "ff_mjpeg_encode_picture_header", "ff_write_quant_matrix", "ff_update_duplicate_context", "__gnu_Unwind_Restore_WMMXC", "ff_put_pixels16_arm", "ff_h264_decode_mb_cabac", "ff_avg_h264_qpel8_mc22_neon", "ff_h264_idct_add8_neon", "ff_mpeg4_merge_partitions", "ff_h264_fill_default_ref_list", "ff_pred16x16_plane_neon", "___Unwind_Backtrace", "MPV_common_end", "ff_put_qpel8_mc13_old_c", "ff_clear_blocks_neon", "avcodec_get_sample_fmt", "ff_avg_h264_qpel16_mc23_neon", "_Unwind_DeleteException", "ff_h264_decode_seq_parameter_set", "_Unwind_VRS_Get", "__udivdi3", "ff_dct_unquantize_h263_neon", "align_put_bits", "av_lockmgr_register", "__gnu_Unwind_Save_VFP", "ff_imdct_half_neon", "ff_put_qpel16_mc33_old_c", "__fixunsdfdi", "ff_h263_update_motion_val", "mpeg4_pred_ac", "MPV_common_defaults", "ff_parse_close", "ff_avg_qpel8_mc31_old_c", "ff_h264_direct_ref_list_init", "_Unwind_GetTextRelBase", "ff_vbv_update", "ff_biweight_h264_pixels_4x2_neon", "ff_intel_h263_decode_picture_header", "ff_pix_abs16_armv6", "ff_put_pixels16_y2_neon", "avcodec_close", "h263_decode_motion", "av_audio_convert", "ff_mjpeg_encode_stuffing", "ff_imdct_calc_neon", "ff_put_pixels8_neon", "restore_core_regs", "ff_fft_calc_neon", "avcodec_align_dimensions", "MPV_common_init_arm", "ff_h263_get_gob_height", "ff_sv_fmul_scalar_2_neon", "ff_h263_resync", "__gnu_Unwind_Save_WMMXC", "ff_write_pass1_stats", "ff_avg_qpel16_mc33_old_c", "ff_put_pixels16_xy2_neon", "ff_avg_h264_qpel16_mc00_neon", "av_parser_close", "ff_h264_pred_init_arm", "ff_avg_qpel8_mc33_old_c", "__adddf3", "ff_fft_init", "ff_h264_h_loop_filter_luma_neon", "ff_h263_show_pict_info", "ff_h263_aspect_to_info", "ff_h264_write_back_intra_pred_mode", "ff_put_h264_qpel16_mc23_neon", "ff_avg_h264_qpel16_mc21_neon", "mpeg4_decode_video_packet_header", "ff_avg_h264_qpel16_mc32_neon", "ff_fft_end", "ff_h264_decode_picture_parameter_set", "ff_print_debug_info", "ff_sse16_armv6", "init_rl", "dct_quantize_c", "ff_put_pixels16_y2_no_rnd_armv6", "ff_init_cabac_states", "ff_put_h264_qpel8_mc20_neon", "avpicture_alloc", "avcodec_configuration", "av_resample_init", "ff_mjpeg_decode_dht", "ff_fix_long_mvs", "ff_init_cabac_encoder", "_Unwind_VRS_Pop", "ff_gmc_c", "ff_simple_idct_armv6", "ff_weight_h264_pixels_4x4_neon", "ff_put_no_rnd_qpel8_mc13_old_c", "ff_put_qpel16_mc11_old_c", "ff_faanidct_add", "__subsf3", "ff_generate_sliding_window_mmcos", "ff_put_pixels16_x2_no_rnd_neon", "ff_h264_decode_ref_pic_marking", "ff_biweight_h264_pixels_8x16_neon", "ff_init_scantable", "ff_put_h264_chroma_mc2_neon", "ff_wmv2_idct_c", "___Unwind_RaiseException", "ff_prefetch_arm", "ff_h263_decode_end", "av_shrink_packet", "avcodec_decode_video2", "ff_h264_idct_add16intra_neon", "avcodec_find_encoder", "avcodec_copy_context", "ff_mjpeg_decode_dqt", "ff_pred16x16_128_dc_neon", "ff_avg_h264_qpel8_mc30_neon", "ff_shrink88", "ff_put_h264_qpel16_mc10_neon", "ff_mpeg4_set_direct_mv", "ff_mdct_calc_neon", "ff_pred8x8_plane_neon", "ff_avg_qpel8_mc32_old_c", "av_parser_next", "audio_resample", "ff_pred8x8_top_dc_neon", "__addsf3", "ff_mjpeg_encode_close", "MPV_common_init", "ff_fix_long_p_mvs", "ff_avg_h264_qpel8_mc13_neon", "avcodec_default_execute2", "av_register_codec_parser", "ff_combine_frame", "avcodec_decode_audio3", "ff_clean_h263_qscales", "ff_biweight_h264_pixels_8x4_neon", "ff_put_pixels8_arm", "ff_h264_idct_add16intra_c", "avcodec_find_best_pix_fmt", "avcodec_guess_channel_layout", "avcodec_encode_video", "avcodec_find_decoder", "ff_put_h264_qpel16_mc01_neon", "ff_avg_h264_qpel16_mc22_neon", "ff_h263_find_frame_end", "ff_put_no_rnd_qpel16_mc32_old_c", "ff_is_hwaccel_pix_fmt", "ff_mjpeg_encode_init", "ff_put_h264_qpel16_mc11_neon", "ff_float_to_int16_interleave_c", "ff_put_h264_qpel16_mc20_neon", "ff_set_mpeg4_time", "ff_avg_h264_qpel8_mc20_neon", "ff_fill_linesize", "ff_mpeg4video_split", "avcodec_find_decoder_by_name", "ff_vector_fmul_reverse_vfp", "ff_pix_abs16_y2_armv6", "MPV_frame_end", "__gnu_Unwind_Restore_VFP", "ff_avg_h264_qpel16_mc13_neon", "av_fast_malloc", "ff_flv_encode_picture_header", "avpicture_free", "ff_put_h264_qpel8_mc21_neon", "avcodec_get_channel_layout", "ff_put_pixels8x8_c", "ff_put_no_rnd_qpel16_mc11_old_c", "ff_init_qscale_tab", "ff_simple_idct_put_neon", "ff_h264_idct8_add_c", "h263_decode_picture_header", "ff_h263_encode_motion", "ff_add_pixels_clamped_neon", "ff_vector_fmul_neon", "av_parse_video_frame_size", "ff_img_copy_plane", "ff_faandct248", "ff_scalarproduct_int16_neon", "ff_put_qpel16_mc12_old_c", "ff_h264_init_cabac_states", "avcodec_alloc_context", "ff_svq3_add_idct_c", "ff_avg_h264_qpel8_mc32_neon", "__fixunsdfsi", "ff_dct_unquantize_h263_armv5te", "ff_biweight_h264_pixels_4x8_neon", "ff_h264_v_loop_filter_chroma_neon", "__gnu_Unwind_Restore_VFP_D_16_to_31", "ff_emulated_edge_mc", "ff_avg_pixels8_neon", "ff_mpeg_flush", "ff_h264_decode_end", "ff_put_no_rnd_pixels8_xy2_arm", "avcodec_register", "ff_fill_pointer", "avcodec_default_release_buffer", "ff_put_h264_qpel8_mc23_neon", "ff_biweight_h264_pixels_16x16_neon", "ff_h264_filter_mb", "_Unwind_RaiseException", "ff_avg_h264_qpel16_mc03_neon", "ff_shrink44", "av_get_codec_tag_string", "ff_put_no_rnd_pixels8_y2_arm", "fdct_ifast248", "ff_simple_idct_neon", "ff_put_h264_qpel8_mc12_neon", "avcodec_align_dimensions2", "avcodec_get_pix_fmt_loss", "av_get_bits_per_sample", "ff_mpeg4_clean_buffers", "ff_weight_h264_pixels_16x8_neon", "ff_put_h264_qpel16_mc02_neon", "ff_avg_qpel16_mc13_old_c", "ff_simple_idct48_add", "avcodec_string", "ff_simple_idct_put_armv5te", "ff_simple_idct_put_armv6", "ff_vector_fmul_sv_scalar_2_neon", "av_bitstream_filter_init", "__subdf3", "ff_avg_h264_qpel16_mc20_neon", "ff_fft_init_arm", "ff_dsputil_init_vfp", "ff_put_qpel8_mc11_old_c", "ff_put_qpel8_mc31_old_c", "ff_faandct", "ff_h264_lowres_idct_put_c", "ff_flv_decode_picture_header", "ff_pred16x16_top_dc_neon", "mpeg4_encode_mb", "mpeg4_encode_picture_header", "ff_put_pixels8_xy2_arm", "av_parser_init", "ff_h263_find_resync_marker", "ff_simple_idct_put", "ff_mpeg4_decode_partitions", "MPV_decode_mb", "ff_put_h264_qpel16_mc32_neon", "ff_init_ff_cos_tabs", "ff_put_h264_qpel8_mc31_neon", "__gnu_Unwind_Save_VFP_D", "ff_diff_pixels_armv6", "ff_put_h264_qpel8_mc30_neon", "ff_float_to_int16_neon", "avcodec_encode_subtitle", "ff_convert_matrix", "ff_biweight_h264_pixels_8x8_neon", "__gnu_uldivmod_helper", "ff_float_to_int16_c", "ff_put_h264_qpel16_mc12_neon", "avcodec_version", "ff_put_pixels8_x2_no_rnd_neon", "ff_put_h264_qpel8_mc22_neon", "ff_fft_permute_c", "ff_put_pixels8_y2_arm", "ff_put_h264_qpel16_mc13_neon", "avcodec_get_sample_fmt_name", "h263_encode_gob_header", "ff_pix_abs16_x2_armv6", "ff_pix_norm1_armv6", "av_init_packet", "ff_put_pixels8_x2_arm", "ff_pred16x16_hor_neon", "ff_avg_h264_qpel16_mc12_neon", "avcodec_alloc_frame", "ff_h264_free_context", "ff_add_pixels_clamped_arm", "av_parser_parse", "av_parse_video_frame_rate", "ff_fft_calc_c", "ff_h264_idct_add16_neon", "ff_h264_decode_rbsp_trailing", "ff_mpeg4_encode_video_packet_header", "ff_put_pixels8_x2_armv6", "ff_put_no_rnd_qpel8_mc32_old_c", "avcodec_check_dimensions", "ff_estimate_p_frame_motion", "__extendsfdf2", "ff_h264_pred_init", "h263_pred_acdc", "ff_put_h264_qpel16_mc03_neon", "__muldf3", "ff_put_h264_qpel8_mc13_neon", "av_log_ask_for_sample", "ff_h264_idct8_add_neon", "ff_find_hwaccel", "ff_put_pixels_clamped_neon", "ff_h264_decode_sei", "ff_put_h264_qpel8_mc00_neon", "ff_avg_h264_chroma_mc4_neon", "ff_h264_idct_add16_c", "av_register_bitstream_filter", "ff_put_h264_qpel8_mc10_neon", "ff_put_h264_qpel8_mc33_neon", "fdct_ifast", "ff_dct_unquantize_h263_intra_neon", "avcodec_default_free_buffers", "av_new_packet", "ff_er_add_slice", "ff_h263_decode_mba", "avcodec_get_context_defaults2", "ff_biweight_h264_pixels_16x8_neon", "ff_block_permute", "ff_avg_pixels8_armv6", "ff_put_pixels16_xy2_no_rnd_neon", "ff_put_pixels16x16_c", "ff_mjpeg_encode_mb", "av_opt_show", "ff_put_h264_qpel16_mc22_neon", "ff_put_pixels16_y2_armv6", "ff_mjpeg_decode_sos", "ff_avg_qpel8_mc12_old_c", "ff_dct_common_init", "ff_put_h264_qpel16_mc00_neon", "ff_simple_idct_add_armv6", "ff_put_pixels8_y2_armv6", "ff_h264dsp_init_arm", "avcodec_get_context_defaults", "__gnu_unwind_execute", "avcodec_decode_subtitle2", "ff_weight_h264_pixels_4x2_neon", "__gnu_ldivmod_helper", "MPV_decode_defaults", "ff_h264_idct8_dc_add_neon", "avcodec_get_edge_width", "ff_simple_idct248_put", "ff_h264_idct_add_neon", "ff_put_no_rnd_qpel8_mc12_old_c", "ff_copy_bits", "ff_vector_fmul_add_neon", "av_set_string", "avcodec_set_dimensions", "ff_get_mb_score", "ff_h264_pred_direct_motion", "avcodec_default_reget_buffer", "ff_h263_loop_filter", "ff_pred8x8_left_dc_neon", "ff_mpeg4_init_direct_mv", "ff_avg_h264_qpel8_mc21_neon", "MPV_common_init_armv5te", "MPV_frame_start", "ff_jpeg_fdct_islow", "av_hwaccel_next", "avcodec_get_pix_fmt", "ff_mjpeg_encode_picture_trailer", "_Unwind_Backtrace", "free_vlc", "MPV_encode_init", "ff_pix_sum_armv6", "ff_put_qpel16_mc13_old_c", "av_picture_copy", "ff_h264_idct_add8_c", "avpicture_layout", "ff_simple_idct84_add", "ff_put_signed_pixels_clamped_neon", "ff_weight_h264_pixels_8x4_neon", "ff_clean_mpeg4_qscales", "ff_set_qscale", "ff_put_pixels8_armv6", "__divdi3", "ff_put_no_rnd_qpel16_mc13_old_c", "av_parser_parse2", "ff_put_h264_qpel16_mc30_neon"], "allstrings": ["name   depth", "%-6s   %2d ", "mono", "%d channels", "stereo", "quad", "5.1+downmix", "7.1(wide)", "7.1+downmix", "needed %d had %d\n", "Internal error, IDCT permutation not set\n", "internal error, slice end before start\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors\n", "Bad picture format\n", "%c esc_type:%d, qp:%d num:%d\n", "Flash Video (FLV) / Sorenson Spark / Sorenson H.263", "Flash Video (FLV) / Sorenson Spark / Sorenson H.263", "Slice mismatch at MB: %d\n", "Error at MB: %d\n", "discarding %d junk bits at end, next would be %X\n", "overreading %d bits\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "this codec does not support truncated bitstreams\n", "header damaged\n", "XVID", "XVIX", "RMP4", "SIPP", "UMP4", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "DIVX", "h263", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "hardware accelerator failed to decode picture\n", "top block unavailable for requested intra4x4 mode %d at %d %d\n", "left block unavailable for requested intra4x4 mode %d at %d %d\n", "out of range intra chroma pred mode at %d %d\n", "top block unavailable for requested intra mode at %d %d\n", "left block unavailable for requested intra mode at %d %d\n", "Cannot allocate memory.\n", " fix", " IDR", "TEMP", "SPAT", "slice type too large (%d) at %d %d\n", "pps_id out of range\n", "non-existing PPS %u referenced\n", "non-existing SPS %u referenced\n", "Frame num gap %d %d\n", "first_mb_in_slice overflow\n", "reference overflow\n", "cabac_init_idc overflow\n", "QP %u out of range\n", "deblocking_filter_idc %u out of range\n", "deblocking filter parameters %d %d out of range\n", "Cannot parallelize deblocking type 1, decoding such frames in sequential order\n", "Too many slices, increase MAX_SLICES and recompile\n", "slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n", "error while decoding MB %d %d, bytestream (%td)\n", "error while decoding MB %d %d\n", "AVC: nal size %d\n", "NAL %d at %d/%d length %d\n", "AVC: Consumed only %d bytes instead of %d\n", "Invalid mix of idr and non-idr slices", "Unknown NAL code: %d (%d bits)\n", "decode_slice_header error\n", "no frame!\n", "no picture\n", "avcC too short\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "h264", "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "Reference %d >= %d\n", "cabac decode of qscale diff failed at %d %d\n", "Invalid level prefix\n", "negative number of zero coeffs at %d %d\n", "mb_type %d in %c slice too large at %d %d\n", "B sub_mb_type %u out of range at %d %d\n", "P sub_mb_type %u out of range at %d %d\n", "ref %u overflow\n", "cbp too large (%u) at %d %d\n", "dquant out of range (%d) at %d %d\n", "PIC-AFF", "MB-AFF", "sps_id (%d) out of range\n", "poc_cycle_length overflow %u\n", "illegal POC type %d\n", "too many reference frames\n", "mb_width/height overflow\n", "This stream was generated by a broken encoder, invalid 8x8 inference\n", "insane cropping not completely supported, this could look slightly wrong ...\n", "brainfart cropping not supported, this could look slightly wrong ...\n", "illegal aspect ratio\n", "time_scale/num_units_in_tick invalid or unsupported (%d/%d)\n", "Overread VUI by %d bits\n", "illegal num_reorder_frames %d\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%d/%d/%d/%d %s %s %d/%d\n", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "8x8DCT", "pps_id (%d) out of range\n", "sps_id out of range\n", "FMO not supported\n", "reference overflow (pps)\n", "pps:%u sps:%u %s slice_groups:%d ref:%d/%d %s qp:%d/%d/%d/%d %s %s %s %s\n", "Gray", "remove short %d count %d\n", "%d %d %p\n", "short term list:\n", "%d fn:%d poc:%d %p\n", "long term list:\n", "reference count overflow\n", "abs_diff_pic_num overflow\n", "long_term_pic_idx overflow\n", "illegal reordering_of_pic_nums_idc\n", "Missing reference picture\n", "reference picture missing during reorder\n", "no mmco here\n", "mmco:%d %d %d\n", "mmco: unref short failure\n", "mmco: unref short %d count %d\n", "mmco: unref long failure\n", "illegal short term reference assignment for second field in complementary field pair (first field is long term)\n", "illegal short term buffer state detected\n", "number of reference frames exceeds max (probably corrupt input), discarding one\n", "illegal long ref in memory management control operation %d\n", "illegal memory management control operation %d\n", "x264 - core %d", "user data:\"%s\"\n", "ct_type:%X pic_struct:%d\n", "non-existing SPS %d referenced in buffering period\n", "name       nb_channels depth is_alpha", "%-11s %5d %9d %6c", "Bad picture start code\n", "Bad marker\n", "Bad H263 id\n", "Intel H263 free format not supported\n", "SAC not supported\n", "Wrong Intel H263 format\n", "Bad value for reserved field\n", "Invalid marker\n", "h263i", "Intel H.263", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d i:%d\n", " UMV", " LONG", " AIC", " AIV", " LOOP", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", "cbpc damaged at %d %d\n", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "Bad picture start code\n", "Bad marker\n", "Bad H263 id\n", "H263 SAC not supported\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "Bad UFEP type (%d)\n", "zero framerate\n", "rectangular slices not supported\n", "unordered slices not supported\n", "SEPB1 marker missing\n", "SEPB2 marker missing\n", "ZYGO", " %5d", "dqt: 16bit precision\n", "index=%d\n", "qscale[%d]: %d\n", "class=%d index=%d nb_codes=%d\n", "mjpeg: using external huffman table\n", "mjpeg: error using external huffman table, switching back to internal\n", "mjpeg bottom field first\n", "only 8 bits/component accepted\n", "sof0: picture: %dx%d\n", "only <= 8 bits/component or 16-bit gray accepted for JPEG-LS\n", "component %d %d:%d id: %d quant:%d\n", "Subsampling in JPEG-LS is not supported.\n", "pix fmt id %x\n", "Unhandled pixel format 0x%x\n", "get_buffer() failed\n", "decode_sof0: error, len(%d) mismatch\n", "lossless", "sequential DCT", "PRCT", "decode_sos: nb_components (%d) unsupported\n", "decode_sos: invalid len (%d)\n", "component: %d\n", "decode_sos: index(%d) out of components\n", "%s %s p:%d >>:%d ilv:%d bits:%d %s\n", "mjpeg_decode_dc: bad vlc: %d:%d (%p)\n", "error count: %d\n", "error y=%d x=%d\n", "Can not flip image with CODEC_FLAG_EMU_EDGE set!\n", "error dc\n", "decode_sos: ac/dc index out of range\n", "marker=%x avail_size_in_buf=%td\n", "buffer too small, expanding to %d bytes\n", "escaping removed %td bytes\n", "startcode: %X\n", "restart marker: %d\n", "APPx %8X\n", "AVI1", "JFIF", "mjpeg: JFIF header found (version: %x.%x) SAR=%d/%d\n", "Adob", "mjpeg: Adobe header found\n", "LJIF", "Pegasus lossless jpeg header found\n", "unknown colorspace\n", "mjpg", "mjpeg: Apple MJPEG-A header found\n", "mjpeg: error, decode_app parser read over the end\n", "mjpeg comment: '%s'\n", "AVID", "CS=ITU601", "Intel(R) JPEG Library", "Metasoft MJPEG Codec", "huffman table decode error\n", "Found EOI before any SOF, ignoring\n", "QP: %d\n", "Can not process SOS before SOF, skipping\n", "restart interval: %d\n", "mjpeg: unsupported coding type (%x)\n", "marker parser used %d bytes (%d bits)\n", "EOI missing, emulating\n", "No JPEG data found in image\n", "mjpeg decode frame unused %td bytes\n", "Nintendo Gamecube THP video", "mjpeg", "MJPEG (Motion JPEG)", "JFIF", "Lavc52.91.1", "CS=ITU601", "mjpeg", "MJPEG (Motion JPEG)", "cmp_direct_inline", "sad_hpel_motion_search", "funny_diamond_search", "full_search", "hex_search", "umh_search", "l2s_dia_search", "var_diamond_search", "qpel_motion_search", "hpel_motion_search", "sab_diamond_search", "epzs_motion_search2", "check_input_motion", "direct_search", "ff_estimate_p_frame_motion", "ff_pre_estimate_p_frame_motion", "ff_fix_long_p_mvs", "jni/..//submodules/externals/build/ffmpeg/../../ffmpeg/libavcodec/motion_est.c", "x >= c->xmin && hx <= c->xmax<<(qpel+1) && y >= c->ymin && hy <= c->ymax<<(qpel+1)", "(fx>>1) + 16*s->mb_x >= -16", "(fy>>1) + 16*s->mb_y >= -16", "(fx>>1) + 16*s->mb_x <= s->width", "(fy>>1) + 16*s->mb_y <= s->height", "(bx>>1) + 16*s->mb_x >= -16", "(by>>1) + 16*s->mb_y >= -16", "(bx>>1) + 16*s->mb_x <= s->width", "(by>>1) + 16*s->mb_y <= s->height", "flags == 0", "jni/..//submodules/externals/build/ffmpeg/../../ffmpeg/libavcodec/motion_est_template.c", "(x + dir) >= xmin", "(x + dir) <= xmax", "(y + dia_size - dir) >= ymin", "(y + dia_size - dir) <= ymax", "(x + dia_size - dir) >= xmin", "(x + dia_size - dir) <= xmax", "(y - dir) >= ymin", "(y - dir) <= ymax", "(x - dir) >= xmin", "(x - dir) <= xmax", "(y - dia_size + dir) >= ymin", "(y - dia_size + dir) <= ymax", "(x - dia_size + dir) >= xmin", "(x - dia_size + dir) <= xmax", "(y + dir) >= ymin", "(y + dir) <= ymax", "(x) >= xmin", "(x) <= xmax", "(y) >= ymin", "(y) <= ymax", "(Lx2) >= xmin", "(Lx2) <= xmax", "(Ly2) >= ymin", "(Ly2) <= ymax", "(x2) >= xmin", "(x2) <= xmax", "(y2) >= ymin", "(y2) <= ymax", "16*cx2 + 4*cx + 32*c == 32*r", "16*cx2 - 4*cx + 32*c == 32*l", "16*cy2 + 4*cy + 32*c == 32*b", "16*cy2 - 4*cy + 32*c == 32*t", "16*cxy + 16*cy2 + 16*cx2 - 4*cy - 4*cx + 32*c == 32*tl", "bx >= xmin*4 && bx <= xmax*4 && by >= ymin*4 && by <= ymax*4", "map[(index-(1<<ME_MAP_SHIFT))&(ME_MAP_SIZE-1)] == key", "map[(index+(1<<ME_MAP_SHIFT))&(ME_MAP_SIZE-1)] == key", "map[(index+1)&(ME_MAP_SIZE-1)] == key", "map[(index-1)&(ME_MAP_SIZE-1)] == key", "bx >= xmin*2 && bx <= xmax*2 && by >= ymin*2 && by <= ymax*2", "(best[0]-1) <= xmax", "(best[1]) >= ymin", "(best[1]) <= ymax", "(best[0]+1) >= xmin", "(best[0]+1) <= xmax", "(best[0]) >= xmin", "(best[0]) <= xmax", "(best[1]-1) >= ymin", "(best[1]-1) <= ymax", "(best[1]+1) >= ymin", "(best[1]+1) <= ymax", "(P[1][0]>>shift) >= xmin", "(P[1][0]>>shift) <= xmax", "(P[1][1]>>shift) >= ymin", "(P[1][1]>>shift) <= ymax", "(P[9][0]>>shift) >= xmin", "(P[9][0]>>shift) <= xmax", "(P[9][1]>>shift) >= ymin", "(P[9][1]>>shift) <= ymax", "(P[4][0]>>shift) >= xmin", "(P[4][0]>>shift) <= xmax", "(P[4][1]>>shift) >= ymin", "(P[4][1]>>shift) <= ymax", "(P[2][0]>>shift) >= xmin", "(P[2][0]>>shift) <= xmax", "(P[2][1]>>shift) >= ymin", "(P[2][1]>>shift) <= ymax", "(P[3][0]>>shift) >= xmin", "(P[3][0]>>shift) <= xmax", "(P[3][1]>>shift) >= ymin", "(P[3][1]>>shift) <= ymax", "field_select_tables[block][xy]==0 || field_select_tables[block][xy]==1", "backward motion vector in P frame\n", "IS_INTRA(mb_type) || USES_LIST(mb_type,0) || USES_LIST(mb_type,1)", "Interlaced macroblock selected but interlaced motion estimation disabled\n", "field_select0==0 ||field_select0==1", "field_select1==0 ||field_select1==1", "4MV macroblock selected but 4MV encoding disabled\n", "cmpf", "(P[4][0] >>shift) >= xmin", "(P[4][0] >>shift) <= xmax", "(P[4][1] >>shift) >= ymin", "(P[4][1] >>shift) <= ymax", "(P[1][0] >>shift) >= xmin", "(P[1][0] >>shift) <= xmax", "(P[1][1] >>shift) >= ymin", "(P[1][1] >>shift) <= ymax", "(P[2][0] >>shift) >= xmin", "(P[2][0] >>shift) <= xmax", "(P[2][1] >>shift) >= ymin", "(P[2][1] >>shift) <= ymax", "xmax <= 15 && ymax <= 15 && xmin >= -16 && ymin >= -16", "ME_MAP size is too small for SAB diamond\n", "me_method is only allowed to be set to zero and epzs; for hex,umh,full and others see dia_size\n", "ME_MAP size may be a little small for the selected diamond size\n", "s->quarter_sample==0 || s->quarter_sample==1", "s->linesize == c->stride", "s->uvlinesize == c->uvstride", "s->pict_type==FF_P_TYPE", "range <= 16 || !s->msmpeg4_version", "range <=256 || !(s->codec_id == CODEC_ID_MPEG2VIDEO && s->avctx->strict_std_compliance >= FF_COMPLIANCE_NORMAL)", "DivX%db%d%c", "Invalid and inefficient vfw-avi packed B frames detected\n", "FFmpe%*[^b]b%d", "FFmpeg v%d.%d.%d / libavcodec build: %d", "Lavc%d.%d.%d", "ffmpeg", "XviD%d", "illegal dc vlc\n", "dc marker bit missing\n", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "reverse esc missing\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "ac-tex damaged at %d %d\n", "cbpc damaged at %d %d\n", "illegal MB_type\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "texture corrupted at %d %d %d\n", "marker does not match f_code\n", "illegal mb_num in video packet (%d %d) \n", "Marker bit missing %s\n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "untested\n", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "cbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "slice below monitor ...\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "cbpy corrupted at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", " VOLC", "WV1F", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "Reserved", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "reserved", "System start", " at %d\n", "illegal chroma format\n", "only rectangular vol supported\n", "Gray shape not supported\n", "before time_increment_resolution", "time_base.den==0\n", "before fixed_vop_rate", "MP4S", "MPEG4 OBMC not supported (very likely buggy encoder)\n", "Static Sprites not supported\n", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "new pred not supported\n", "reduced resolution VOP not supported\n", "scalability not supported\n", "low_delay flag incorrectly, clearing it\n", "before time_increment", "hmm, seems the headers are not complete, trying to guess time_increment_bits\n", "my guess is %d bits ;)\n", "MPEG4 PTS: %lld\n", "before vop_coded", "vop not coded\n", "sprite_brightness_change not supported\n", "static sprite not supported\n", "Error, header damaged or not MPEG4 header (qscale=0)\n", "Error, header damaged or not MPEG4 header (f_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d\n", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "mpeg4", "MPEG-4 part 2", "Lavc52.91.1", "mpeg4", "MPEG-4 part 2", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (%d %d %d %p)\n", "get_buffer() failed (stride changed)\n", "get_buffer() failed (uv stride mismatch)\n", "Cannot allocate memory.\n", "decoding to PIX_FMT_NONE is not supported.\n", "too many threads\n", "Internal error, picture buffer overflow\n", "releasing zombie picture\n", "warning: first frame is no keyframe\n", "New frame, type: ", "AVFrame.motion_val not set!\n", "AVFrame.mb_type not set!\n", "AVFrame.ref_index not set!\n", "AVFrame.motion_subsample_log2 doesn't match! (%d!=%d)\n", "MPEG motion vector out of boundary (%d %d)\n", "warning, clipping %d dct coefficients to %d..%d\n", "encoded frame too large\n", "illegal MB type\n", "Warning, QMAT_SHIFT is larger than %d, overflows possible\n", "only YUV420 and YUV422 are supported\n", "colorspace not supported in jpeg\n", "only YUV420 is supported\n", "Warning keyframe interval too large! reducing it ...\n", "a vbv buffer size is needed, for encoding with a maximum bitrate\n", "Warning min_rate > 0 but min_rate != max_rate isn't recommended!\n", "bitrate below min bitrate\n", "bitrate above max bitrate\n", "impossible bitrate constraints, this will fail\n", "VBV buffer too small for bitrate\n", "bitrate tolerance too small for bitrate\n", "Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\n", "4MV not supported by codec\n", "OBMC is only supported with simple mb decision\n", "OBMC is only supported with H263(+)\n", "qpel not supported by codec\n", "data partitioning not supported by codec\n", "b frames not supported by codec\n", "Invalid pixel aspect ratio %i/%i, limit is 255/255\n", "interlacing not supported by codec\n", "mpeg2 style quantization not supported by codec\n", "CBP RD needs trellis quant\n", "QP RD needs mbd=2\n", "closed gop with scene change detection are not supported yet, set threshold to 1000000000\n", "intra vlc table not supported by codec\n", "low delay forcing is only available for mpeg2\n", "b frames cannot be used with low delay\n", "non linear quant is only available for mpeg2\n", "non linear quant only supports qmax <= 12 currently\n", "multi threaded encoding not supported by codec\n", "automatic thread number detection not supported by codec, patch welcome\n", "framerate not set\n", "me_threshold too large, max is %d\n", "mb_threshold too large, max is %d\n", "notice: b_frame_strategy only affects the first pass\n", "removing common factors from framerate\n", "timebase not supported by mpeg 4 standard\n", "The specified picture size of %dx%d is not valid for the H.263 codec.\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\n", "Error, Invalid timestamp=%lld, last=%lld\n", "Warning: AVFrame.pts=? trying to guess (%lld)\n", "illegal b frame strategy\n", "warning, too many b frames in a row\n", "stuffing too large\n", "vbv buffer overflow\n", "Internal error, negative bits\n", "wmv1", "Windows Media Video 7", "msmpeg4", "MPEG-4 part 2 Microsoft variant version 3", "msmpeg4v2", "MPEG-4 part 2 Microsoft variant version 2", "msmpeg4v1", "MPEG-4 part 2 Microsoft variant version 1", "h263p", "H.263+ / H.263-1998 / H.263 version 2", "h263", "H.263 / H.263-1996", "NULL", "Tried to copy AVCodecContext %p into already-initialized %p\n", "AVCodecContext", "set bitrate (in bits/s)", "set video bitrate tolerance (in bits/s)", "flags", "use four motion vector by macroblock (mpeg4)", "obmc", "use overlapped block motion compensation (h263+)", "qpel", "use 1/4 pel motion compensation", "loop", "use loop filter", "qscale", "use fixed qscale", "use gmc", "always try a mb with mv=<0,0>", "part", "use data partitioning", "input_preserved", "pass1", "use internal 2pass ratecontrol in first  pass mode", "pass2", "use internal 2pass ratecontrol in second pass mode", "extern_huff", "use external huffman table (for mjpeg)", "gray", "only decode/encode grayscale", "emu_edge", "don't draw edges", "psnr", "error[?] variables will be set during encoding", "truncated", "normalize adaptive quantization", "ildct", "use interlaced dct", "low_delay", "force low delay", "enable alternate scantable (mpeg2/mpeg4)", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact stuff (except (i)dct)", "h263 advanced intra coding / mpeg4 ac prediction", "use unlimited motion vectors", "use rate distortion optimization for cbp", "qprd", "use rate distortion optimization for qp selection", "h263 alternative inter vlc", "slice", "ilme", "interlaced motion estimation", "scan_offset", "will reserve space for svcd scan offset user data", "cgop", "closed gop", "fast", "allow non spec compliant speedup tricks", "flags2", "sgop", "strictly enforce gop size", "noout", "skip bitstream encoding", "local_header", "place global headers at every keyframe instead of in extradata", "sub_id", "me_method", "set motion estimation method", "zero", "zero motion estimation (fastest)", "full", "full motion estimation (slowest)", "epzs", "EPZS motion estimation (default)", "esa motion estimation (alias for full)", "tesa", "tesa motion estimation", "dia motion estimation (alias for epzs)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter", "iter motion estimation", "extradata_size", "time_base", "set the group of picture size", "rate_emu", "frame rate emulation", "set audio sampling rate (in Hz)", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "real_pict_num", "delay", "qcomp", "video quantizer scale compression (VBR)", "qblur", "video quantizer scale blur (VBR)", "qmin", "min video quantizer scale (VBR)", "qmax", "max video quantizer scale (VBR)", "qdiff", "max difference between the quantizer scale (VBR)", "use 'frames' B frames", "b_qfactor", "qp factor between p and b frames", "rc_strategy", "ratecontrol method", "b_strategy", "strategy to choose between I/P/B-frames", "wpredp", "weighted prediction analysis method", "hurry_up", "rtp payload size in bytes", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "workaround not auto detected encoder bugs", "autodetect", "old_msmpeg4", "some old lavc generated msmpeg4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if fourcc==XVIX)", "ump4", "(autodetected if fourcc==UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal vlc bug (autodetected per fourcc)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per fourcc/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per fourcc/version)", "edge", "edge padding bug (autodetected per fourcc/version)", "hpel_chroma", "dc_clip", "workaround various bugs in microsofts broken decoders", "trunc", "trancated frames", "lelim", "single coefficient elimination threshold for luminance (negative values also consider dc coefficient)", "celim", "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient)", "strict", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what consequences", "normal", "inofficial", "allow unofficial extensions (deprecated - use unofficial)", "unofficial", "allow unofficial extensions", "experimental", "allow non standardized experimental things", "b_qoffset", "qp offset between P and B frames", "set error detection aggressivity", "careful", "compliant", "aggressive", "very_aggressive", "has_b_frames", "block_align", "parse_only", "mpeg_quant", "use MPEG quantizers instead of H.263", "stats_out", "stats_in", "qsquish", "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function)", "rc_qmod_amp", "experimental quantizer modulation", "rc_qmod_freq", "rc_override_count", "rc_eq", "set rate control equation", "maxrate", "set max video bitrate tolerance (in bits/s)", "minrate", "set min video bitrate tolerance (in bits/s)", "bufsize", "set ratecontrol buffer size (in bits)", "rc_buf_aggressivity", "currently useless", "i_qfactor", "qp factor between P and I frames", "i_qoffset", "qp offset between P and I frames", "rc_init_cplx", "initial complexity for 1-pass encoding", "DCT algorithm", "auto", "autoselect a good one (default)", "fastint", "fast integer", "accurate integer", "mlib", "altivec", "faan", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "idct", "select IDCT implementation", "simple", "simplemmx", "libmpeg2mmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "h264", "xvidmmx", "faani", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "deblock", "use strong deblock filter for damaged MBs", "bits_per_coded_sample", "pred", "prediction method", "left", "plane", "median", "aspect", "sample aspect ratio", "debug", "print specific debug info", "pict", "picture info", "rate control", "bitstream", "mb_type", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "bugs", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "vismv", "visualize motion vectors (MVs)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "mb_qmin", "obsolete, use qmin", "mb_qmax", "obsolete, use qmax", "full pel me compare function", "cmp_func", "subcmp", "sub pel me compare function", "mbcmp", "macroblock compare function", "ildctcmp", "interlaced dct compare function", "dia_size", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "pre motion estimation", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast (default)", "sum of squared errors", "satd", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "vsad", "sum of absolute vertical differences", "vsse", "sum of squared vertical differences", "nsse", "noise preserving sum of squared differences", "dctmax", "chroma", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "subq", "sub pel motion estimation quality", "dtg_active_format", "me_range", "limit motion vectors range (1023 for DivX player)", "ibias", "intra quant bias", "pbias", "inter quant bias", "color_table_id", "internal_buffer_count", "global_quality", "coder", "variable length coder / huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp (default)", "bits", "use fewest bits", "use best rate distortion", "stream_codec_tag", "sc_threshold", "scene change threshold", "lmin", "min lagrange factor (VBR)", "lmax", "max lagrange factor (VBR)", "noise reduction", "rc_init_occupancy", "number of bits which should be loaded into the rc buffer before decoding starts", "inter_threshold", "error", "antialias", "MP3 antialias algorithm", "float", "quantizer noise shaping", "threads", "me_threshold", "motion estimaton threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "level", "lowres", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "skip_threshold", "frame skip threshold", "skip_factor", "frame skip factor", "skip_exp", "frame skip exponent", "skipcmp", "frame skip compare function", "border_mask", "increases the quantizer for macroblocks close to borders", "mblmin", "min macroblock lagrange factor (VBR)", "mblmax", "max macroblock lagrange factor (VBR)", "mepc", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "default", "noref", "bidir", "nokey", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "brd_scale", "downscales frames for dynamic B-frame decision", "enables constant quality mode, and selects the quality (x264)", "constant quantization parameter rate control method", "keyint_min", "minimum interval between IDR-frames (x264)", "refs", "reference frames to consider for motion compensation (Snow)", "chromaoffset", "chroma qp offset from luma", "bframebias", "influences how often B-frames are used", "trellis", "rate-distortion optimal quantization", "directpred", "direct mv prediction mode - 0 (none), 1 (spatial), 2 (temporal), 3 (auto)", "bpyramid", "allows B-frames to be used as references for predicting", "wpred", "weighted biprediction for b-frames (H.264)", "mixed_refs", "one reference per partition, as opposed to one reference per macroblock", "dct8x8", "high profile 8x8 transform (H.264)", "fastpskip", "fast pskip (H.264)", "access unit delimiters (H.264)", "skiprd", "RD optimal MB level residual skipping", "complexityblur", "reduce fluctuations in qp (before curve compression)", "deblockalpha", "in-loop deblocking filter alphac0 parameter", "deblockbeta", "in-loop deblocking filter beta parameter", "partitions", "macroblock subpartition sizes to consider", "parti4x4", "parti8x8", "partp4x4", "partp8x8", "partb8x8", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "ivlc", "intra vlc table", "b_sensitivity", "adjusts sensitivity of b_frame_strategy 1", "compression_level", "use_lpc", "sets whether to use LPC mode (FLAC)", "lpc_coeff_precision", "LPC coefficient precision (FLAC)", "min_prediction_order", "max_prediction_order", "prediction_order_method", "search method for selecting prediction order", "min_partition_order", "max_partition_order", "timecode_frame_start", "GOP timecode frame start number, in non drop frame format", "drop_frame_timecode", "non_linear_q", "use non linear quantizer", "request_channels", "set desired number of audio channels", "drc_scale", "percentage of dynamic range compression to apply", "reservoir", "use bit reservoir", "mbtree", "use macroblock tree ratecontrol (x264 only)", "bits_per_raw_sample", "channel_layout", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_trc", "colorspace", "color_range", "chroma_sample_location", "use psycho visual optimization", "psy_rd", "specify psycho visual strength", "psy_trellis", "specify psycho visual trellis", "aq_mode", "specify aq method", "aq_strength", "specify aq strength", "rc_lookahead", "specify number of frames to look ahead for frametype", "ssim", "ssim will be calculated during encoding", "intra_refresh", "use periodic insertion of intra blocks instead of keyframes", "crf_max", "in crf mode, prevents vbv from lowering quality beyond this point", "log_level_offset", "set the log level offset", "lpc_type", "specify LPC algorithm", "fixed", "levinson", "cholesky", "lpc_passes", "number of passes to use for Cholesky factorization during LPC analysis", "get_qminmax", "ff_rate_control_init", "init_pass2", "ff_rate_estimate_qscale", "jni/..//submodules/externals/build/ffmpeg/../../ffmpeg/libavcodec/ratecontrol.c", "qmin <= qmax", "qp<=0.0\n", "bits<0.9\n", "Error evaluating rc_eq \"%s\"\n", "limiting QP %f -> %f\n", "in:%d out:%d type:%d q:%d itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%d var:%d icount:%d skipcount:%d hbits:%d;\n", "rc buffer underflow\n", "stuffing %d bytes\n", "tex^qComp", "Error parsing rc_eq \"%s\"\n", " in:%d ", "picture_number >= 0", "picture_number < rcc->num_entries", " in:%*d out:%*d type:%d q:%f itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%d var:%d icount:%d skipcount:%d hbits:%d", "statistics are damaged at line %d, parser out=%d\n", "requested bitrate is too low\n", "filter_size%2==1", "toobig <= 40", "[lavc rc] requested bitrate: %d bps  expected bitrate: %d bps\n", "[lavc rc] estimated target average qp: %.3f\n", "[lavc rc] Using all of requested bitrate is not necessary for this video with these parameters.\n", "[lavc rc] Error: bitrate too low for this video with these parameters.\n", "[lavc rc] Error: 2pass curve failed to converge\n", "Xvid ratecontrol requires libavcodec compiled with Xvid support.\n", "qblur too large\n", "picture_number>=0", "picture_number<rcc->num_entries", "pict_type == rce->new_pict_type", "q>0.0", "%c qp:%d<%2.1f<%d %d want:%d total:%d comp:%f st_q:%2.2f size:%d var:%d/%d br:%d fps:%d\n", "iTex", "pTex", "fCode", "iCount", "mcVar", "avgQP", "qComp", "avgIITex", "avgPITex", "avgPPTex", "avgBPTex", "avgTex", "bits2qp", "qp2bits", "I420", "IYUV", "P422\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "NV21.", "RGB\fA", "BGR\f>", "\fBGR@", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGB ", "yuvs\u000b", "WRAW.", "L555,", "L565+", "b16g)", "b48r,", "audioresample", "Resampling with input channels greater than 2 unsupported.\n", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Could not allocate buffer\n", "Audio sample format conversion failed\n", "Audio sample format convertion failed\n", "ReSampleContext", "IPBSipb", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "internal_buffer_count overflow (missing release_buffer?)\n", "default_get_buffer called on pic %p, %d buffers used\n", "default_release_buffer called on pic %p, %d buffers used\n", "insufficient thread locking around avcodec_open/close()\n", "ignoring invalid width/height values\n", "codec type or id mismatches\n", "The maximum value for lowres supported by the decoder is %d\n", "buffer smaller than minimum size\n", "start_display_time must be 0.\n", "buffer smaller than AVCODEC_MAX_AUDIO_FRAME_SIZE\n", "buffer %d too small\n", "[%d]", "--disable-mmx --prefix=/Users/jehanmonnier/opt --enable-cross-compile --arch=arm --target-os=linux --cc=arm-none-linux-gnueabi-gcc --disable-ffplay --disable-ffmpeg --disable-ffprobe --disable-ffserver --disable-avdevice --disable-avcore --disable-avfilter --disable-network --disable-everything --enable-decoder=mpeg4 --enable-encoder=mpeg4 --enable-decoder=h264 --disable-avformat --enable-armv6 --enable-armv6t2 --enable-armvfp --enable-neon --enable-pic --extra-cflags='-fPIC -march=armv7-a -mcpu=cortex-a8 -mfloat-abi=softfp -mfpu=neon'", "libavcodec license: LGPL version 2.1 or later", "Found %i unreleased buffers!\n", "mpeg2ts", " (hq)", "%s / 0x%04X", "Video: %s%s", ", %s", ", %dx%d", " [PAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", "Audio: %s", ", %d Hz", "Data: %s", "Subtitle: %s", "Attachment: %s", "Invalid Codec type %d", ", pass 1", ", pass 2", ", %d kb/s", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/MPlayer/incoming/ and contact the ffmpeg-devel mailing list.\n", "%s not implemented. Update your FFmpeg version to the newest one from SVN. If the problem still occurs, it means that your file has a feature which has not been implemented.", "SEQH", "this svq3 file contains watermark which need zlib support compiled in\n", "invalid MV vlc\n", "unsupported slice header (%02X)\n", "slice after bitstream end\n", "illegal slice type %d \n", "%c hpel:%d, tpel:%d aqp:%d qp:%d, slice_num:%02X\n", "error in B-frame picture id\n", "luma prediction:%d\n", "weird prediction\n", "check_intra_pred_mode = -1\n", "cbp_vlc=%d\n", "qscale:%d\n", "error while decoding intra luma dc\n", "error while decoding block\n", "error while decoding chroma dc block\n", "error while decoding chroma ac block\n", "error while decoding MB %d %d\n", "svq3", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3"], "stringidentifiers": ["mono", "stereo", "quad", "XVID", "XVIX", "RMP4", "SIPP", "UMP4", "DIVX", "h263", "TEMP", "SPAT", "h264", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "Gray", "h263i", "ZYGO", "lossless", "PRCT", "AVI1", "JFIF", "Adob", "LJIF", "mjpg", "AVID", "mjpeg", "JFIF", "mjpeg", "cmp_direct_inline", "sad_hpel_motion_search", "funny_diamond_search", "full_search", "hex_search", "umh_search", "l2s_dia_search", "var_diamond_search", "qpel_motion_search", "hpel_motion_search", "sab_diamond_search", "epzs_motion_search2", "check_input_motion", "direct_search", "ff_estimate_p_frame_motion", "ff_pre_estimate_p_frame_motion", "ff_fix_long_p_mvs", "cmpf", "ffmpeg", "WV1F", "Reserved", "reserved", "MP4S", "mpeg4", "mpeg4", "wmv1", "msmpeg4", "msmpeg4v2", "msmpeg4v1", "h263p", "h263", "NULL", "AVCodecContext", "flags", "obmc", "qpel", "loop", "qscale", "part", "input_preserved", "pass1", "pass2", "extern_huff", "gray", "emu_edge", "psnr", "truncated", "ildct", "low_delay", "global_header", "bitexact", "qprd", "slice", "ilme", "scan_offset", "cgop", "fast", "flags2", "sgop", "noout", "local_header", "sub_id", "me_method", "zero", "full", "epzs", "tesa", "phods", "iter", "extradata_size", "time_base", "rate_emu", "cutoff", "frame_size", "frame_number", "real_pict_num", "delay", "qcomp", "qblur", "qmin", "qmax", "qdiff", "b_qfactor", "rc_strategy", "b_strategy", "wpredp", "hurry_up", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "lelim", "celim", "strict", "very", "normal", "inofficial", "unofficial", "experimental", "b_qoffset", "careful", "compliant", "aggressive", "very_aggressive", "has_b_frames", "block_align", "parse_only", "mpeg_quant", "stats_out", "stats_in", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_override_count", "rc_eq", "maxrate", "minrate", "bufsize", "rc_buf_aggressivity", "i_qfactor", "i_qoffset", "rc_init_cplx", "auto", "fastint", "mlib", "altivec", "faan", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "idct", "simple", "simplemmx", "libmpeg2mmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "h264", "xvidmmx", "faani", "slice_count", "guess_mvs", "deblock", "bits_per_coded_sample", "pred", "left", "plane", "median", "aspect", "debug", "pict", "bitstream", "mb_type", "dct_coeff", "skip", "startcode", "mmco", "bugs", "vis_qp", "vis_mb_type", "buffers", "vismv", "debug_mv", "mb_qmin", "mb_qmax", "cmp_func", "subcmp", "mbcmp", "ildctcmp", "dia_size", "last_pred", "preme", "precmp", "satd", "vsad", "vsse", "nsse", "dctmax", "chroma", "pre_dia_size", "subq", "dtg_active_format", "me_range", "ibias", "pbias", "color_table_id", "internal_buffer_count", "global_quality", "coder", "deflate", "context", "slice_flags", "xvmc_acceleration", "bits", "stream_codec_tag", "sc_threshold", "lmin", "lmax", "rc_init_occupancy", "inter_threshold", "error", "antialias", "float", "threads", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "profile", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "level", "lowres", "skip_threshold", "skip_factor", "skip_exp", "skipcmp", "border_mask", "mblmin", "mblmax", "mepc", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "none", "default", "noref", "bidir", "nokey", "bidir_refine", "brd_scale", "keyint_min", "refs", "chromaoffset", "bframebias", "trellis", "directpred", "bpyramid", "wpred", "mixed_refs", "dct8x8", "fastpskip", "skiprd", "complexityblur", "deblockalpha", "deblockbeta", "partitions", "parti4x4", "parti8x8", "partp4x4", "partp8x8", "partb8x8", "sc_factor", "mv0_threshold", "ivlc", "b_sensitivity", "compression_level", "use_lpc", "lpc_coeff_precision", "min_prediction_order", "max_prediction_order", "prediction_order_method", "min_partition_order", "max_partition_order", "timecode_frame_start", "drop_frame_timecode", "non_linear_q", "request_channels", "drc_scale", "reservoir", "mbtree", "bits_per_raw_sample", "channel_layout", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_trc", "colorspace", "color_range", "chroma_sample_location", "psy_rd", "psy_trellis", "aq_mode", "aq_strength", "rc_lookahead", "ssim", "intra_refresh", "crf_max", "log_level_offset", "lpc_type", "fixed", "levinson", "cholesky", "lpc_passes", "get_qminmax", "ff_rate_control_init", "init_pass2", "ff_rate_estimate_qscale", "iTex", "pTex", "fCode", "iCount", "mcVar", "avgQP", "qComp", "avgIITex", "avgPITex", "avgPPTex", "avgBPTex", "avgTex", "bits2qp", "qp2bits", "I420", "IYUV", "audioresample", "ReSampleContext", "IPBSipb", "mpeg2ts", "SEQH", "svq3"], "debugstrings": ["bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "mjpeg: JFIF header found (version: %x.%x) SAR=%d/%d\n", "range <= 16 || !s->msmpeg4_version", "MPEG-4 part 2 Microsoft variant version 3", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 1", "H.263+ / H.263-1998 / H.263 version 2", "old standard qpel (autodetected per fourcc/version)", "direct-qpel-blocksize bug (autodetected per fourcc/version)", "edge padding bug (autodetected per fourcc/version)", "strictly conform to a older more strict version of the spec or reference software", "Audio sample format conversion failed\n", "libavcodec license: LGPL version 2.1 or later", "GCC: (GNU) 4.6 20120106 (prerelease)"], "localsymbols": [""], "dependencies": ["libavcore.so", "libstdc++.so", "libavutil.so", "libc.so", "libm.so", "libdl.so"], "elfname": "libavcodec.so"}