{"globalvars": ["sqlite3_temp_directory", "sqlite3_version", "sqlite3_data_directory", "sqlite3_fts5_may_be_corrupt"], "importedglobals": ["__stack_chk_guard"], "importedfunctions": ["lseek64", "time", "localtime", "sysconf", "read", "geteuid", "getcwd", "sleep", "getenv", "qsort", "pthread_mutex_trylock", "fstat", "rmdir", "mkdir", "pthread_mutexattr_settype", "memset", "strcspn", "abort", "memcpy", "free", "pthread_mutexattr_destroy", "log", "dlclose", "fchmod", "dlerror", "memmove", "pthread_mutex_lock", "stat", "strlen", "mremap", "pthread_mutex_destroy", "dlopen", "malloc", "dlsym", "raise", "pthread_mutexattr_init", "readlink", "fcntl", "__stack_chk_fail", "memcmp", "__errno", "access", "unlink", "fchown", "mmap", "open", "strcmp", "write", "munmap", "gettimeofday", "close", "lstat", "strncmp", "pthread_mutex_init", "utimes", "fsync", "realloc", "pthread_mutex_unlock", "ftruncate", "getpid"], "exportedfunctions": ["sqlite3_realloc", "sqlite3_blob_read", "sqlite3_result_error16", "sqlite3_bind_blob64", "sqlite3_set_auxdata", "sqlite3_release_memory", "sqlite3_global_recover", "sqlite3_bind_int", "sqlite3_db_cacheflush", "__gnu_Unwind_Save_VFP_D", "sqlite3_db_config", "sqlite3_collation_needed16", "__gnu_unwind_frame", "sqlite3_vsnprintf", "sqlite3_result_zeroblob", "sqlite3_result_value", "sqlite3_strlike", "sqlite3_result_text16be", "sqlite3_next_stmt", "___Unwind_Resume", "sqlite3_memory_used", "_Unwind_Resume_or_Rethrow", "sqlite3_column_blob", "sqlite3_result_null", "sqlite3_initialize", "sqlite3_bind_blob", "sqlite3_result_error_code", "sqlite3_value_nochange", "sqlite3_sql", "sqlite3_mutex_free", "sqlite3_status64", "__subdf3", "__divdf3", "sqlite3_value_text16be", "sqlite3_errcode", "sqlite3_backup_finish", "sqlite3_result_text64", "sqlite3_update_hook", "sqlite3_busy_handler", "sqlite3_value_double", "sqlite3_vfs_find", "sqlite3_get_table", "sqlite3_open_v2", "__cmpdf2", "__gnu_Unwind_Save_WMMXC", "__eqdf2", "__fixunsdfsi", "sqlite3_column_bytes", "__gnu_Unwind_Resume", "sqlite3_result_pointer", "__gnu_Unwind_Restore_WMMXC", "sqlite3_create_collation", "_Unwind_VRS_Set", "sqlite3_column_type", "sqlite3_prepare16", "__gnu_Unwind_RaiseException", "sqlite3_enable_load_extension", "sqlite3_create_collation16", "sqlite3_column_decltype16", "sqlite3_commit_hook", "sqlite3_prepare_v2", "sqlite3_data_count", "sqlite3_bind_double", "sqlite3_value_text16", "__ltdf2", "sqlite3_busy_timeout", "sqlite3_profile", "sqlite3_open", "sqlite3_free", "sqlite3_bind_zeroblob", "sqlite3_rtree_geometry_callback", "sqlite3_errmsg", "sqlite3_context_db_handle", "sqlite3_result_int64", "sqlite3_create_module", "sqlite3_column_database_name", "sqlite3_create_function16", "___Unwind_Backtrace", "sqlite3_db_mutex", "sqlite3_soft_heap_limit", "sqlite3_malloc", "_Unwind_GetDataRelBase", "sqlite3_enable_shared_cache", "sqlite3_vfs_unregister", "sqlite3_column_name", "sqlite3_column_origin_name", "sqlite3_vtab_on_conflict", "sqlite3_aggregate_count", "sqlite3_value_pointer", "sqlite3_column_double", "sqlite3_column_int", "sqlite3_wal_checkpoint_v2", "sqlite3_value_int", "sqlite3_db_handle", "sqlite3_extended_result_codes", "sqlite3_msize", "sqlite3_result_error_toobig", "sqlite3_column_bytes16", "sqlite3_value_bytes", "sqlite3_column_text", "sqlite3_malloc64", "sqlite3_bind_null", "sqlite3_compileoption_get", "sqlite3_blob_reopen", "__gnu_Unwind_Save_VFP", "sqlite3_user_data", "sqlite3_extended_errcode", "sqlite3_soft_heap_limit64", "sqlite3_stricmp", "__extendsfdf2", "_Unwind_GetCFA", "__gnu_Unwind_Restore_VFP", "sqlite3_errmsg16", "sqlite3_libversion_number", "sqlite3_mutex_alloc", "sqlite3_blob_open", "sqlite3_bind_parameter_count", "sqlite3_result_text16", "sqlite3_uri_boolean", "sqlite3_bind_parameter_index", "sqlite3_complete16", "sqlite3_value_subtype", "sqlite3_reset_auto_extension", "sqlite3_bind_pointer", "_Unwind_VRS_Get", "__ledf2", "sqlite3_interrupt", "sqlite3_db_status", "__gnu_ldivmod_helper", "sqlite3_stmt_status", "sqlite3_last_insert_rowid", "__nedf2", "sqlite3_column_value", "__udivdi3", "sqlite3_backup_init", "sqlite3_limit", "sqlite3_vtab_collation", "sqlite3_create_function_v2", "sqlite3_sourceid", "sqlite3_test_control", "___Unwind_RaiseException", "sqlite3_column_origin_name16", "sqlite3_vtab_config", "sqlite3_status", "sqlite3_bind_int64", "__gtdf2", "sqlite3_progress_handler", "__restore_core_regs", "sqlite3_expanded_sql", "__muldf3", "sqlite3_prepare16_v3", "sqlite3_aggregate_context", "sqlite3_close_v2", "sqlite3_result_zeroblob64", "sqlite3_wal_autocheckpoint", "__divsi3", "__gnu_Unwind_Save_VFP_D_16_to_31", "sqlite3_errstr", "sqlite3_result_blob64", "sqlite3_value_text", "sqlite3_table_column_metadata", "sqlite3_overload_function", "__gnu_uldivmod_helper", "sqlite3_memory_highwater", "sqlite3_value_blob", "sqlite3_create_module_v2", "_Unwind_ForcedUnwind", "sqlite3_value_int64", "_Unwind_GetLanguageSpecificData", "sqlite3_uri_parameter", "sqlite3_result_text16le", "sqlite3_snprintf", "sqlite3_config", "sqlite3_mutex_enter", "sqlite3_stmt_busy", "___Unwind_Resume_or_Rethrow", "__divdi3", "sqlite3_os_end", "sqlite3_vfs_register", "sqlite3_bind_text", "sqlite3_auto_extension", "sqlite3_bind_value", "sqlite3_result_subtype", "sqlite3_compileoption_used", "sqlite3_strnicmp", "sqlite3_column_table_name16", "sqlite3_value_numeric_type", "sqlite3_column_name16", "sqlite3_result_blob", "sqlite3_changes", "sqlite3_blob_close", "sqlite3_sleep", "sqlite3_prepare", "sqlite3_result_error_nomem", "__adddf3", "sqlite3_db_filename", "sqlite3_set_authorizer", "sqlite3_column_table_name", "sqlite3_result_double", "sqlite3_value_text16le", "sqlite3_transfer_bindings", "__gnu_Unwind_Resume_or_Rethrow", "__gnu_Unwind_Restore_VFP_D_16_to_31", "__gnu_Unwind_Restore_WMMXD", "_Unwind_Backtrace", "sqlite3_column_decltype", "sqlite3_total_changes", "___Unwind_ForcedUnwind", "sqlite3_file_control", "sqlite3_result_int", "sqlite3_stmt_readonly", "sqlite3_prepare16_v2", "__udivsi3", "_Unwind_RaiseException", "sqlite3_blob_bytes", "sqlite3_trace_v2", "sqlite3_result_text", "sqlite3_log", "sqlite3_value_free", "sqlite3_column_count", "sqlite3_realloc64", "sqlite3_shutdown", "sqlite3_column_text16", "__fixunsdfdi", "sqlite3_set_last_insert_rowid", "sqlite3_value_type", "sqlite3_libversion", "sqlite3_bind_text64", "sqlite3_backup_remaining", "sqlite3_value_dup", "sqlite3_complete", "sqlite3_memory_alarm", "sqlite3_free_table", "_Unwind_GetTextRelBase", "__fixdfdi", "sqlite3_uri_int64", "sqlite3_vmprintf", "sqlite3_mprintf", "sqlite3_cancel_auto_extension", "sqlite3_system_errno", "sqlite3_db_release_memory", "sqlite3_backup_step", "restore_core_regs", "_Unwind_Resume", "sqlite3_declare_vtab", "sqlite3_expired", "sqlite3_vtab_nochange", "_Unwind_VRS_Pop", "sqlite3_threadsafe", "sqlite3_wal_hook", "sqlite3_collation_needed", "sqlite3_result_error", "sqlite3_clear_bindings", "sqlite3_prepare_v3", "sqlite3_column_int64", "sqlite3_get_autocommit", "sqlite3_os_init", "sqlite3_bind_zeroblob64", "sqlite3_finalize", "__gedf2", "sqlite3_bind_parameter_name", "sqlite3_create_function", "sqlite3_exec", "sqlite3_create_collation_v2", "sqlite3_rollback_hook", "sqlite3_load_extension", "sqlite3_thread_cleanup", "sqlite3_strglob", "_Unwind_Complete", "_Unwind_DeleteException", "sqlite3_get_auxdata", "sqlite3_bind_text16", "__gnu_Unwind_Backtrace", "sqlite3_blob_write", "sqlite3_value_bytes16", "sqlite3_randomness", "sqlite3_wal_checkpoint", "sqlite3_reset", "__gnu_Unwind_Restore_VFP_D", "sqlite3_trace", "sqlite3_column_database_name16", "__gnu_Unwind_Save_WMMXD", "sqlite3_close", "sqlite3_mutex_try", "__gnu_unwind_execute", "sqlite3_db_readonly", "sqlite3_step", "sqlite3_mutex_leave", "_Unwind_GetRegionStart", "sqlite3_rtree_query_callback", "sqlite3_backup_pagecount", "sqlite3_open16"], "allstrings": ["\f\f\f\f\f\f\f\f\f\f", "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", "LiuJ", "tU6p", "xPq>.T", "^(;r", "aceinouyyacdeeghijklnorstuuwyzouaiougkojgnaeiorusthaeoy", "abddefghhikllmnprrstuvwwxyzhtwyaeiouy", "&&&&&&&&&&", "thstndrd", "0123456789ABCDEF0123456789abcdef", "naturaleftouterightfullinnercross", "BINARY", "SQLite format 3", "-journal", "-wal", "PPPPPP_PPiPnnPnnPPPPP[PPPedPPZgPPhP", ";;;;", ";;;;", ";;;;;;;;;;;;;;;;", ";;;;;;;;;;;;;;;;;;;;;;;", "3.22.0", "922337203685477580", "_ROWID_", "ROWID", "sqlite_master", "sqlite_temp_master", "main", "SET NULL", "SET DEFAULT", "CASCADE", "RESTRICT", "NO ACTION", "UNION ALL", "INTERSECT", "EXCEPT", "UNION", "create", "trigger", "temp", "temporary", "explain", "abort due to ROLLBACK", "unknown error", "DESC", "2018-01-22 18:45:57 0c55d179733b46d8d0ba4d88e01a25e10677046ee3da1d5b1581e86726f2171d", "fts5_api_ptr", "INTEGER", "rowid", "20c:20e", "20b:20e", "ational", "tional", "tion", "enci", "ence", "anci", "ance", "izer", "logi", "alli", "entli", "ousli", "ization", "ation", "ator", "alism", "iveness", "fulness", "ousness", "aliti", "iviti", "biliti", "ical", "ness", "icate", "iciti", "ative", "alize", "able", "ible", "ement", "ment", "unordered*", "sz=[0-9]*", "noskipscan*", "null", "SQLITE_", "unicode61", "tokenchars", "separators", "remove_diacritics", "remove_diacritics=1", "remove_diacritics=0", "tokenchars=", "separators=", "sess", "lanoita", "lanoit", "icne", "icna", "rezi", "igol", "illa", "iltne", "ilsuo", "noitazi", "noita", "rota", "msila", "ssenevi", "ssenluf", "ssensuo", "itila", "itivi", "itilib", "etaci", "evita", "ezila", "itici", "laci", "ssen", "tneme", "tnem", "true", "false", "non-deterministic function in index expression or CHECK constraint", "local time unavailable", "integer overflow", "wrong number of arguments to function fts5_fold", "wrong number of arguments to function fts5_isalnum", "malformed JSON", "string or blob too big", "fts5: 2018-01-22 18:45:57 0c55d179733b46d8d0ba4d88e01a25e10677046ee3da1d5b1581e86726f2171d", "RtreeMatchArg", "<expr>", " AND ", "(NULL)", "NULL", "%lld", "%!.15g", "Invalid argument to rtreedepth()", "LIKE or GLOB pattern too complex", "ESCAPE expression must be a single character", "40f-21a-21d", "localtime", "unixepoch", "weekday ", "start of ", "month", "year", "should be: fts5_rowid(subject, ....)", "segment", "should be: fts5_rowid('segment', segid, pgno))", "first arg to fts5_rowid() must be 'segment'", "pgsz", "hashsize", "automerge", "usermerge", "crisismerge", "rank", "%llu", " %llu", "%02d", "%06.3f", "%03d", "%.16g", "%04d", "%04d-%02d-%02d %02d:%02d:%02d", "%02d:%02d:%02d", "%04d-%02d-%02d", "%!.20e", "%s at line %d of [%.10s]", "misuse", "attempt to open \"%s\" as file descriptor %d", "/dev/null", "os_unix.c:%d: (%d) %s(%s) - %s", "mremap", "mmap", "close", "/dev/urandom", "full_fsync", "ftruncate", "unlink", "fsync", "cannot fstat db file %s", "file unlinked while open: %s", "multiple links to file: %s", "file renamed while open: %s", "cannot limit WAL size: %s", "API call with %s database connection pointer", "invalid", "API called with NULL prepared statement", "API called with finalized prepared statement", "bind on a busy prepared statement: [%s]", "failed memory resize %u to %u bytes", "failed to allocate %u bytes of memory", "database corruption", "cannot open file", "openDirectory", "lstat", "readlink", "getcwd", "%s-shm", "readonly_shm", "open", "write", "unopened", "unable to delete/modify user-function due to active statements", "unable to delete/modify collation sequence due to active statements", "parser stack overflow", "sub-select returns %d columns - expected %d", "row value misused", "not authorized", "authorizer malfunction", "corrupt database", "unknown database %T", "sqlite_", "object name reserved for internal use: %s", "no such index: %s", "too many terms in %s BY clause", "%r %s BY term out of range - should be between 1 and %d", "index expressions", "partial index WHERE clauses", "CHECK constraints", "%s prohibited in %s", "Expression tree is too large (maximum depth %d)", "default value of column [%s] is not constant", "foreign key on %s should reference only one column of table %T", "number of columns in foreign key does not match the number of columns in the referenced table", "unknown column \"%s\" in foreign key definition", "%s %T cannot reference objects in database %s", "%s cannot use variables", "%s.xBestIndex malfunction", "out of memory", "too many terms in compound SELECT", "unknown or unsupported join type: %T %T%s%T", "RIGHT and FULL OUTER JOINs are not currently supported", "table %s may not be modified", "cannot modify %s because it is a view", "foreign key mismatch - \"%w\" referencing \"%w\"", "no such collation sequence: %s", "sqlite_%", "BINARY", "hex literal too big: %s%s", "DISTINCT aggregates must have exactly one argument", "USING", "a JOIN clause is required before %s", "%d columns assigned %d values", "syntax error after column name \"%.*s\"", "duplicate WITH table name: %s", "FOREIGN KEY constraint failed", "%s%s", "a GROUP BY clause is required before HAVING", "ORDER", "GROUP", "aggregate functions are not allowed in the GROUP BY clause", "all VALUES must have the same number of terms", "SELECTs to the left and right of %s do not have the same number of result columns", "too many terms in ORDER BY clause", "%r ORDER BY term does not match any column in the result set", "no query solution", "malformed database schema (%s)", "%z - %s", "vtable constructor called recursively: %s", "vtable constructor failed: %s", "vtable constructor did not declare schema: %s", "hidden", "name=%Q", "%s OR name=%Q", "type='trigger' AND (%s)", "%s%.*s\"%w\"", "%.*s\"%w\"%s", "%s.%s", "%s.rowid", "USING TEMP B-TREE ", "COMPOUND SUBQUERIES %d AND %d %s(%s)", "USE TEMP B-TREE FOR %s", "tbl_name=%Q", "zeroblob(%d)", "%02x", "'%.*q'", "invalid page number %d", "2nd reference to page %d", "Failed to read ptrmap key=%d", "Bad ptr map entry key=%d expected=(%d,%d) got=(%d,%d)", "%d of %d pages missing from overflow list starting at %d", "failed to get page %d", "freelist leaf count too big on page %d", "free-page count in header is too small", "Page %d: ", "unable to get the page. error code=%d", "btreeInitPage() returns error code %d", "On tree page %d cell %d: ", "On page %d at right child: ", "Offset %d out of range %d..%d", "Extends off end of page", "Rowid %lld out of order", "Child page depth differs", "Multiple uses for byte %u of page %d", "Fragmentation of %d bytes reported as %d on page %d", "index '%q'", "SEARCH", "SCAN", "%s=?", "ANY(%s)", ">? AND rowid<", "INDEX %s", "COVERING INDEX %s", "AUTOMATIC COVERING INDEX", "AUTOMATIC PARTIAL COVERING INDEX", "PRIMARY KEY", " SUBQUERY %d", " TABLE %s", " AS %s", " USING INTEGER PRIMARY KEY (rowid%s?)", " VIRTUAL TABLE INDEX %d:%s", " USING ", "recovered %d frames from WAL file %s", "0123456789abcdef", "JSON cannot hold BLOB values", "json_object() requires an even number of arguments", "json_object() labels must be TEXT", "[%d]", ".%.*s", " %lld%s", " id=%lld", " nPos=%d%s", "{averages} ", "{structure}", " %d(%lld)", "%s%d", " {lvl=%d nMerge=%d nSeg=%d", " {id=%d leaves=%d..%d}", " term=%.*s", "corrupt", "{%ssegid=%d h=%d pgno=%d}", "dlidx ", "no such column: %s", "%s.%z", "access to %z is prohibited", "no such column", "ambiguous column name", "the \".\" operator", "misuse of aliased aggregate %s", "%s: %s.%s.%s", "%s: %s.%s", "%s: %s", "second argument to likelihood() must be a constant between 0.0 and 1.0", "not authorized to use function: %s", "non-deterministic functions", "misuse of aggregate function %.*s()", "no such function: %.*s", "wrong number of arguments to function %.*s()", "subqueries", "parameters", "access", "cache", "file:", "localhost", "invalid uri authority: %.*s", "mode", "no such %s mode: %s", "%s mode not allowed: %s", "no such vfs: %s", "sqlite3_extension_init", "unable to open shared library [%s]", "sqlite3_", "_init", "no entry point [%s] in shared library [%s]", "error during initialization: %s", "sqlite3_get_table() called with two or more incompatible queries", "%.*f", "unable to use function %s in the requested context", "no such tokenizer: %s", "error in tokenizer constructor", "docsize", "content", "reserved fts5 table name: %s", "parse error in \"%s\"", "prefix", "malformed prefix=... directive", "too many prefix indexes (max %d)", "prefix length out of range (max 999)", "tokenize", "multiple tokenize=... directives", "multiple content=... directives", "%Q.%Q", "content_rowid", "multiple content_rowid=... directives", "columnsize", "malformed columnsize=... directive", "detail", "malformed detail=... directive", "unrecognized option: \"%.*s\"", "reserved fts5 column name: %s", "unindexed", "unrecognized column option: %s", "T.%Q", ", T.%Q", ", T.c%d", "parse error in tokenize directive", "%Q.'%q_%s'", "fts5: column queries are not supported (detail=none)", "-col %d ", "-col {%d", "-near %d ", " [%z]", " NOT ", " OR ", "%s : ", "NEAR(", ", %d)", "%s%s%z%s", "%z%.*s", "wrong number of arguments to function highlight()", "wrong number of arguments to function snippet()", "no such cursor: %lld", "fts3cursor", "illegal first argument to %s", "unknown tokenizer: %s", "unknown tokenizer", "argument type mismatch", "fts3tokenize disabled", "%z%s%z", "%s {%s}", "{%s}", "JSON path error near '%q'", "json_%s() needs an odd number of arguments", "replace", "insert", "SQLITE_TMPDIR", "TMPDIR", "%s/etilqs_%llx%c", "modeof", "psow", "unix-excl", "%s.lock", "recovered %d pages from %s", "SQLite format 3", ":memory:", "nolock", "immutable", "unable to open a temporary database file for storing temporary tables", "unknown database %s", "source and destination must be distinct", "destination database is in use", "USING INDEX %s FOR IN-OPERATOR", "at most %d tables in a join", "automatic index on %s(%s)", "auto-index", "too many arguments on %s() - max %d", "ORDER BY", "LIMIT", "DISTINCT", "GROUP BY", " USING COVERING INDEX ", "RIGHT PART OF ORDER BY", "column%d", "expected %d columns for '%s' but got %d", "%s clause should come after %s not before", "recursive aggregate queries not supported", "SCAN TABLE %s%s%s", "CORRELATED ", "LIST", "SCALAR", "EXECUTE %s%s SUBQUERY %d", "misuse of aggregate: %s()", "unknown function: %s()", "RAISE() may only be used within a trigger-program", "NOCASE", "ON clause references tables to its right", "unable to close due to unfinalized statements or unfinished backups", "no such database: %s", "cannot detach database %s", "database %s is locked", "unknown database: %s", "%s-mjXXXXXX9XXz", "MJ delete: %s", "MJ collide: %s", "-mj%06X9%02X", "phrase", "NEAR", "fts5: %s queries are not supported (detail!=full)", "fts5: parser stack overflow", "unterminated string", "fts5: syntax error near \"%.1s\"", "fts5: syntax error near \"%.*s\"", "expected integer, got \"%.*s\"", "fts5_expr_tcl", "fts5_expr", "nearset", "wrong number of arguments to function %s", "%.*z:%u", "no such module: %s", "view %s is circularly defined", "cannot commit - no transaction is active", "cannot start a transaction within a transaction", "cannot rollback - no transaction is active", "into", "out of", "%s constraint failed", "%z: %s", "abort at %d in [%s]: %s", "cannot open savepoint - SQL statements in progress", "no such savepoint: %s", "cannot release savepoint - SQL statements in progress", "cannot commit transaction - SQL statements in progress", "database schema has changed", "SELECT name, rootpage, sql FROM '%q'.%s WHERE %s ORDER BY rowid", "Main freelist: ", "Page %d is never used", "Pointer map page %d is referenced", "too many levels of trigger recursion", "cannot change %s wal mode from within a transaction", "cannot VACUUM from within a transaction", "cannot VACUUM - SQL statements in progress", "ATTACH''AS vacuum_db", "BEGIN", "SELECT sql FROM \"%w\".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0", "SELECT sql FROM \"%w\".sqlite_master WHERE type='index' AND length(sql)>10", "SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM\"%w\".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0", "INSERT INTO vacuum_db.sqlite_master SELECT*FROM \"%w\".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)", "database table is locked: %s", "-- %s", "statement aborts at %d: [%s] %s", "(blob)", "k(%d", ",%s%s", "(%.20s)", "%s(%d)", "vtab:%p", "program", "%.2x", "sqlite_stat1", "SELECT tbl,idx,stat FROM %Q.sqlite_stat1", "CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)", "attached databases must use the same text encoding as main database", "unsupported file format", "SELECT name, rootpage, sql FROM \"%w\".%s ORDER BY rowid", "temporary table name must be unqualified", "table %T already exists", "there is already an index named %s", "sqlite_sequence", "no such view", "no such table", "pragma_", "'%s' is not a function", "multiple references to recursive table: %s", "circular reference: %s", "table %s has %d values for %d columns", "multiple recursive references: %s", "recursive reference in a subquery: %s", "subquery_%p", "too many references to \"%s\": max 65535", "a NATURAL join may not have an ON or USING clause", "cannot have both ON and USING clauses in the same join", "cannot join using column %s - column not present in both tables", "%s.%s.%s", "no such table: %s", "no tables specified", "too many columns in result set", "rows updated", "-- TRIGGER %s", "rows deleted", "table %S has no column named %s", "table %S has %d columns but %d values were supplied", "%d values for %d columns", "rows inserted", "normal", "exclusive", "UTF8", "fast", "none", "full", "incremental", "file", "memory", "temporary storage cannot be changed from within a transaction", "not a writable directory", "Safety level may not be changed inside a transaction", "issisi", "iisX", "isiX", "isisi", "iissssss", "NONE", "like", "*** in database %s ***\n", "NULL value in %s.%s", "CHECK constraint failed in %s", "row ", " missing from index ", "non-unique entry in index ", "unsupported encoding: %s", "restart", "truncate", "ANALYZE \"%w\".\"%w\"", "glob", "wrong # of entries in index ", "ROLLBACK", "COMMIT", "BEFORE", "AFTER", "unrecognized token: \"%.*s\"", "unknown table option: %.*s", "too many columns on %s", "duplicate column name: %s", "parameters are not allowed in views", "view", "too many columns in %s", "set list", "variable number must be between ?1 and ?%d", "too many SQL variables", "near \"%T\": syntax error", "too many arguments on function %T", "no such index: %S", "index associated with UNIQUE or PRIMARY KEY constraint cannot be dropped", "DELETE FROM %Q.%s WHERE name=%Q AND type='index'", "INSERT INTO %Q.%s VALUES('trigger',%Q,%Q,0,'CREATE TRIGGER %q')", "type='trigger' AND name='%q'", "temporary trigger may not have qualified name", "cannot create triggers on virtual tables", "trigger %T already exists", "cannot create trigger on system table", "cannot create %s trigger on view: %S", "cannot create INSTEAD OF trigger on table: %S", "qualified table names are not allowed on INSERT, UPDATE, and DELETE statements within triggers", "the INDEXED BY clause is not allowed on UPDATE or DELETE statements within triggers", "the NOT INDEXED clause is not allowed on UPDATE or DELETE statements within triggers", "no such trigger: %S", "unable to identify the object to be reindexed", "there is already another table or index with this name: %s", "table %s may not be altered", "view %s may not be altered", "UPDATE \"%w\".%s SET sql = sqlite_rename_parent(sql, %Q, %Q) WHERE %s;", "UPDATE %Q.%s SET sql = CASE WHEN type = 'trigger' THEN sqlite_rename_trigger(sql, %Q)ELSE sqlite_rename_table(sql, %Q) END, tbl_name = %Q, name = CASE WHEN type='table' THEN %Q WHEN name LIKE 'sqlite_autoindex%%' AND type='index' THEN 'sqlite_autoindex_' || %Q || substr(name,%d+18) ELSE name END WHERE tbl_name=%Q COLLATE nocase AND (type='table' OR type='index' OR type='trigger');", "UPDATE \"%w\".sqlite_sequence set name = %Q WHERE name = %Q", "UPDATE sqlite_temp_master SET sql = sqlite_rename_trigger(sql, %Q), tbl_name = %Q WHERE %s;", "Cannot add a PRIMARY KEY column", "Cannot add a UNIQUE column", "Cannot add a REFERENCES column with non-NULL default value", "Cannot add a NOT NULL column with default value NULL", "Cannot add a column with non-constant default", "UPDATE \"%w\".%s SET sql = substr(sql,1,%d) || ', ' || %Q || substr(sql,%d) WHERE type = 'table' AND name = %Q", "virtual tables may not be altered", "Cannot add a column to a view", "sqlite_altertab_%s", "incomplete input", "database schema is locked: %s", "statement too long", "create ", "invalid rootpage", "PRAGMA ", "SELECT * FROM %Q.%Q", "UNIQUE constraint failed: %s.%s", "rtree constraint failed: %s.(%s<=%s)", "INSERT INTO '%q'.'%q_idx'(segid,term,pgno) VALUES(?,?,?)", "SELECT %s WHERE rowid = ?", "sqlite_stat%d", "DELETE FROM %Q.%s WHERE %s=%Q", "DELETE FROM %Q.%s WHERE name=%Q AND type='trigger'", "UPDATE %Q.%s SET rootpage=%d WHERE #%d AND rootpage=#%d", "sqlite_stat", "table %s may not be dropped", "use DROP TABLE to delete table %s", "use DROP VIEW to delete view %s", "DELETE FROM %Q.sqlite_sequence WHERE name=%Q", "DELETE FROM %Q.%s WHERE tbl_name=%Q and type!='trigger'", " UNIQUE", "index", "cannot create a TEMP index on non-TEMP table \"%s\"", "altertab_", "table %s may not be indexed", "views may not be indexed", "virtual tables may not be indexed", "there is already a table named %s", "index %s already exists", "sqlite_autoindex_%s_%d", "expressions prohibited in PRIMARY KEY and UNIQUE constraints", "conflicting ON CONFLICT clauses specified", "CREATE%s INDEX %.*s", "INSERT INTO %Q.%s VALUES('index',%Q,%Q,#%d,%Q);", "name='%q' AND type='index'", "table \"%s\" has more than one primary key", "AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY", "TABLE", "table", "VIEW", ",\n  ", "AUTOINCREMENT not allowed on WITHOUT ROWID tables", "PRIMARY KEY missing on table %s", "CREATE TABLE ", "CREATE %s %.*s", "UPDATE %Q.%s SET type='%s', name=%Q, tbl_name=%Q, rootpage=#%d, sql=%Q WHERE rowid=#%d", "CREATE TABLE %Q.sqlite_sequence(name,seq)", "tbl_name='%q' AND type!='trigger'", "CREATE TABLE %Q.%s(%s)", "CREATE VIRTUAL TABLE %T", "UPDATE %Q.%s SET type='table', name=%Q, tbl_name=%Q, rootpage=0, sql=%Q WHERE rowid=#%d", "name='%q' AND type='table'", "CREATE TABLE x", "%c\"%s\"", "(\"%s\"", ",arg HIDDEN", ",schema HIDDEN", "wrong number of vtable arguments", "instance", "fts5vocab: unknown table type: %Q", "CREATE TABLE x(term, col, documents, occurrences, languageid HIDDEN)", "invalid arguments to fts4aux constructor", "simple", "CREATE TABLE x(input, token, start, end, position)", "CREATE TABLE x(key,value,type,atom,id,parent,fullkey,path,json HIDDEN,root HIDDEN)", "too many attached databases - max %d", "database %s is already in use", "database is already attached", "unable to open database: %s", "no such table column: %s.%s", "%s_stat", "ALTER TABLE %Q.'%q_%s' RENAME TO '%q_%s';", "DROP TABLE IF EXISTS %Q.'%q_data';DROP TABLE IF EXISTS %Q.'%q_idx';DROP TABLE IF EXISTS %Q.'%q_config';", "DROP TABLE IF EXISTS %Q.'%q_docsize';", "DROP TABLE IF EXISTS %Q.'%q_content';", " WITHOUT ROWID", "CREATE TABLE %Q.'%q_%q'(%s)%s", "fts5: error creating shadow table %q_%s: %s", "CREATE TABLE IF NOT EXISTS %Q.'%q_stat'(id INTEGER PRIMARY KEY, value BLOB);", "DROP TABLE IF EXISTS %Q.'%q_content'", "DROP TABLE IF EXISTS %Q.'%q_segments'", "DROP TABLE IF EXISTS %Q.'%q_segdir'", "DROP TABLE IF EXISTS %Q.'%q_docsize'", "DROP TABLE IF EXISTS %Q.'%q_stat'", "ALTER TABLE %Q.'%q_node'   RENAME TO \"%w_node\";ALTER TABLE %Q.'%q_parent' RENAME TO \"%w_parent\";ALTER TABLE %Q.'%q_rowid'  RENAME TO \"%w_rowid\";", "DROP TABLE '%q'.'%q_node';DROP TABLE '%q'.'%q_rowid';DROP TABLE '%q'.'%q_parent';", "PRAGMA %Q.data_version", "SELECT t.%Q FROM %Q.%Q AS t WHERE t.%Q MATCH '*id'", "no such fts5 table: %s.%s", "REPLACE INTO '%q'.'%q_data'(id, block) VALUES(?,?)", "DELETE FROM '%q'.'%q_data' WHERE id>=? AND id<=?", "SELECT count(*) FROM %Q.'%q_%s'", "SELECT %s", "no such function: %s", "%lld %lld", "offsets", "%d %d %d %d ", "<b>...</b>", "</b>", "snippet", "compress", "uncompress", "_content", "__langid", "fts3", "unrecognized matchinfo: %s", "desc", "unrecognized order: %s", "unrecognized parameter: %s", "missing %s parameter in fts4 constructor", "docid", ",%s(x.'c%d%q')", ", x.%Q", "langid", ", x.'%q'", " FROM '%q'.'%q%s' AS x", ",%s(?)", "docid INTEGER PRIMARY KEY", "%z, 'c%d%q'", "%z, langid", "CREATE TABLE %Q.'%q_content'(%s)", "CREATE TABLE %Q.'%q_segments'(blockid INTEGER PRIMARY KEY, block BLOB);", "CREATE TABLE %Q.'%q_segdir'(level INTEGER,idx INTEGER,start_block INTEGER,leaves_end_block INTEGER,end_block INTEGER,root BLOB,PRIMARY KEY(level, idx));", "CREATE TABLE %Q.'%q_docsize'(docid INTEGER PRIMARY KEY, size BLOB);", "PRAGMA %Q.page_size", "%Q, ", "%z%Q, ", "CREATE TABLE x(%s %Q HIDDEN, docid HIDDEN, %Q HIDDEN)", "error parsing prefix parameter: %s", "SELECT length(data) FROM '%q'.'%q_node' WHERE nodeno = 1", "undersize RTree blobs in \"%q_node\"", "SELECT stat FROM %Q.sqlite_stat1 WHERE tbl = '%q_rowid'", "CREATE TABLE x(%s", "%s, %s", "%s);", "CREATE TABLE \"%w\".\"%w_node\"(nodeno INTEGER PRIMARY KEY, data BLOB);CREATE TABLE \"%w\".\"%w_rowid\"(rowid INTEGER PRIMARY KEY, nodeno INTEGER);CREATE TABLE \"%w\".\"%w_parent\"(nodeno INTEGER PRIMARY KEY, parentnode INTEGER);INSERT INTO '%q'.'%q_node' VALUES(1, zeroblob(%d))", "%_rowid", "%_parent", "Mapping (%lld -> %lld) missing from %s table", "Found (%lld -> %lld) in %s table, expected (%lld -> %lld)", "SELECT data FROM %Q.'%q_node' WHERE nodeno=?", "Node %lld missing from database", "Node %lld is too small (%d bytes)", "Rtree depth out of range (%d)", "Node %lld is too small for cell count of %d (%d bytes)", "Dimension %d of cell %d on node %lld is corrupt", "Dimension %d of cell %d on node %lld is corrupt relative to parent", "SELECT count(*) FROM %Q.'%q%s'", "Wrong number of entries in %%%s table - expected %lld, actual %lld", "wrong number of arguments to function rtreecheck()", "Schema corrupt or not an rtree", "_rowid", "_parent", "integer", "real", "cannot open value of type %s", "no such rowid: %lld", "foreign key", "indexed", "cannot open virtual table: %s", "cannot open table without rowid: %s", "cannot open view: %s", "no such column: \"%s\"", "cannot open %s column for writing", "block", "DELETE FROM %Q.'%q_data';DELETE FROM %Q.'%q_idx';", "DELETE FROM %Q.'%q_docsize';", "version", "SELECT k, v FROM %Q.'%q_config'", "invalid fts5 file format (found %d, expected %d) - run 'rebuild'", "%s_data", "data", "id INTEGER PRIMARY KEY, block BLOB", "segid, term, pgno, PRIMARY KEY(segid, term)", "id INTEGER PRIMARY KEY", ", c%d", "id INTEGER PRIMARY KEY, sz BLOB", "config", "k PRIMARY KEY, v", "CREATE TABLE x(", "%z%s%Q", "%z, %Q HIDDEN, %s HIDDEN)", "SELECT pgno FROM '%q'.'%q_idx' WHERE segid=? AND term<=? ORDER BY term DESC LIMIT 1", "parse error in rank function: %s", "bm25", "reads", "unknown special query: %.*s", "SELECT rowid, rank FROM %Q.%Q ORDER BY %s(%s%s%s) %s", "%s: table does not support scanning", "DELETE FROM '%q'.'%q_idx' WHERE segid=?", "UPDATE", "DELETE from", "delete", "delete-all", "'delete-all' may only be used with a contentless or external content fts5 table", "rebuild", "'rebuild' may not be used with a contentless fts5 table", "optimize", "merge", "integrity-check", "SELECT segid, term, (pgno>>1), (pgno&1) FROM %Q.'%q_idx' WHERE segid=%d", "cannot %s contentless fts5 table: %s", "%s_segments", "ALTER TABLE %Q.'%q_content'  RENAME TO '%q_content';", "ALTER TABLE %Q.'%q_docsize'  RENAME TO '%q_docsize';", "ALTER TABLE %Q.'%q_stat'  RENAME TO '%q_stat';", "ALTER TABLE %Q.'%q_segments' RENAME TO '%q_segments';", "ALTER TABLE %Q.'%q_segdir'   RENAME TO '%q_segdir';", "SAVEPOINT fts3", "RELEASE fts3", "ROLLBACK TO fts3", "Index optimized", "Index already optimal", "matchinfo", "unrecognized matchinfo request: %c", "merge=", "automerge=", "FTS expression tree is too large (maximum depth %d)", "malformed MATCH expression: [%s]", "SELECT %s WHERE rowid BETWEEN %lld AND %lld ORDER BY rowid %s", "SELECT %s ORDER BY rowid %s", "%s_node", "RTRIM", "MATCH", "fts5", "fts5_decode", "fts5_decode_none", "fts5_rowid", "fts5vocab", "fts5_source_id", "automatic extension loading failed: %s", "fts4aux", "porter", "fts3_tokenizer", "fts4", "fts3tokenize", "rtreenode", "rtreedepth", "rtreecheck", "rtree", "rtree_i32", "json_group_array", "json_group_object", "json_each", "json_tree", "json", "json_array", "json_array_length", "json_extract", "json_insert", "json_object", "json_patch", "json_quote", "json_remove", "json_replace", "json_set", "json_type", "json_valid", "SELECT parentnode FROM %Q.'%q_parent' WHERE nodeno=?", "SELECT nodeno FROM %Q.'%q_rowid' WHERE rowid=?", "INSERT OR REPLACE INTO '%q'.'%q_node' VALUES(:1, :2)", "DELETE FROM '%q'.'%q_node' WHERE nodeno = :1", "SELECT nodeno FROM '%q'.'%q_rowid' WHERE rowid = :1", "INSERT OR REPLACE INTO '%q'.'%q_rowid' VALUES(:1, :2)", "DELETE FROM '%q'.'%q_rowid' WHERE rowid = :1", "SELECT parentnode FROM '%q'.'%q_parent' WHERE nodeno = :1", "INSERT OR REPLACE INTO '%q'.'%q_parent' VALUES(:1, :2)", "DELETE FROM '%q'.'%q_parent' WHERE nodeno = :1", "Wrong number of columns for an rtree table", "Too few columns for an rtree table", "Too many columns for an rtree table", "order", "languageid", "notindexed", "DELETE FROM %Q.'%q_content' WHERE rowid = ?", "SELECT NOT EXISTS(SELECT docid FROM %Q.'%q_content' WHERE rowid!=?)", "DELETE FROM %Q.'%q_content'", "DELETE FROM %Q.'%q_segments'", "DELETE FROM %Q.'%q_segdir'", "DELETE FROM %Q.'%q_docsize'", "DELETE FROM %Q.'%q_stat'", "SELECT %s WHERE rowid=?", "SELECT (SELECT max(idx) FROM %Q.'%q_segdir' WHERE level = ?) + 1", "REPLACE INTO %Q.'%q_segments'(blockid, block) VALUES(?, ?)", "SELECT coalesce((SELECT max(blockid) FROM %Q.'%q_segments') + 1, 1)", "REPLACE INTO %Q.'%q_segdir' VALUES(?,?,?,?,?,?)", "SELECT idx, start_block, leaves_end_block, end_block, root FROM %Q.'%q_segdir' WHERE level = ? ORDER BY idx ASC", "SELECT idx, start_block, leaves_end_block, end_block, root FROM %Q.'%q_segdir' WHERE level BETWEEN ? AND ?ORDER BY level DESC, idx ASC", "SELECT count(*) FROM %Q.'%q_segdir' WHERE level = ?", "SELECT max(level) FROM %Q.'%q_segdir' WHERE level BETWEEN ? AND ?", "DELETE FROM %Q.'%q_segdir' WHERE level = ?", "DELETE FROM %Q.'%q_segments' WHERE blockid BETWEEN ? AND ?", "INSERT INTO %Q.'%q_content' VALUES(%s)", "DELETE FROM %Q.'%q_docsize' WHERE docid = ?", "REPLACE INTO %Q.'%q_docsize' VALUES(?,?)", "SELECT size FROM %Q.'%q_docsize' WHERE docid=?", "SELECT value FROM %Q.'%q_stat' WHERE id=?", "REPLACE INTO %Q.'%q_stat' VALUES(?,?)", "DELETE FROM %Q.'%q_segdir' WHERE level BETWEEN ? AND ?", "SELECT ? UNION SELECT level / (1024 * ?) FROM %Q.'%q_segdir'", "SELECT level, count(*) AS cnt FROM %Q.'%q_segdir'   GROUP BY level HAVING cnt>=?  ORDER BY (level %% 1024) ASC LIMIT 1", "SELECT 2 * total(1 + leaves_end_block - start_block)   FROM %Q.'%q_segdir' WHERE level = ? AND idx < ?", "DELETE FROM %Q.'%q_segdir' WHERE level = ? AND idx = ?", "UPDATE %Q.'%q_segdir' SET idx = ? WHERE level=? AND idx=?", "SELECT idx, start_block, leaves_end_block, end_block, root FROM %Q.'%q_segdir' WHERE level = ? AND idx = ?", "UPDATE %Q.'%q_segdir' SET start_block = ?, root = ?WHERE level = ? AND idx = ?", "SELECT 1 FROM %Q.'%q_segments' WHERE blockid=? AND block IS NULL", "SELECT idx FROM %Q.'%q_segdir' WHERE level=? ORDER BY 1 ASC", "SELECT max( level %% 1024 ) FROM %Q.'%q_segdir'", "SELECT level, idx, end_block FROM %Q.'%q_segdir' WHERE level BETWEEN ? AND ? ORDER BY level DESC, idx ASC", "UPDATE OR FAIL %Q.'%q_segdir' SET level=-1,idx=? WHERE level=? AND idx=?", "UPDATE OR FAIL %Q.'%q_segdir' SET level=? WHERE level=-1", "SELECT %s FROM %s T WHERE T.%Q >= ? AND T.%Q <= ? ORDER BY T.%Q ASC", "SELECT %s FROM %s T WHERE T.%Q <= ? AND T.%Q >= ? ORDER BY T.%Q DESC", "SELECT %s FROM %s T WHERE T.%Q=?", "REPLACE INTO %Q.'%q_content' VALUES(%s)", "DELETE FROM %Q.'%q_content' WHERE id=?", "DELETE FROM %Q.'%q_docsize' WHERE id=?", "SELECT sz FROM %Q.'%q_docsize' WHERE id=?", "REPLACE INTO %Q.'%q_config' VALUES(?,?)", "SELECT %s FROM %s AS T", "CREATE TABlE vocab(term, col, doc, cnt)", "CREATE TABlE vocab(term, doc, cnt)", "CREATE TABlE vocab(term, doc, col, offset)", "ascii", "highlight", "columns", "fts5_isalnum", "fts5_fold", "text", "blob", "julianday", "date", "time", "datetime", "strftime", "current_time", "current_timestamp", "current_date", "sqlite_rename_table", "sqlite_rename_trigger", "sqlite_rename_parent", "load_extension", "sqlite_compileoption_used", "sqlite_compileoption_get", "unlikely", "likelihood", "likely", "ltrim", "rtrim", "trim", "typeof", "length", "instr", "printf", "unicode", "char", "round", "upper", "lower", "ifnull", "random", "randomblob", "nullif", "sqlite_version", "sqlite_source_id", "sqlite_log", "quote", "last_insert_rowid", "changes", "total_changes", "zeroblob", "substr", "total", "count", "group_concat", "coalesce", "NOT NULL", "UNIQUE", "CHECK", "FOREIGN KEY", "Savepoint", "AutoCommit", "Transaction", "SorterNext", "PrevIfOpen", "NextIfOpen", "Prev", "Next", "Checkpoint", "JournalMode", "Vacuum", "VFilter", "VUpdate", "Goto", "Gosub", "InitCoroutine", "Yield", "MustBeInt", "Jump", "Once", "IfNot", "IfNullRow", "SeekLT", "SeekLE", "SeekGE", "SeekGT", "NoConflict", "NotFound", "Found", "SeekRowid", "NotExists", "Last", "IfSmaller", "SorterSort", "Sort", "Rewind", "IdxLE", "IdxGT", "IdxLT", "IdxGE", "RowSetRead", "RowSetTest", "Program", "FkIfZero", "IfPos", "IfNotZero", "IsNull", "NotNull", "ElseNotEq", "DecrJumpZero", "IncrVacuum", "VNext", "Init", "Return", "EndCoroutine", "HaltIfNull", "Halt", "Integer", "Int64", "String", "Null", "SoftNull", "Blob", "Variable", "Move", "Copy", "SCopy", "IntCopy", "ResultRow", "CollSeq", "AddImm", "RealAffinity", "Cast", "Permutation", "BitAnd", "BitOr", "ShiftLeft", "ShiftRight", "Subtract", "Multiply", "Divide", "Remainder", "Concat", "Compare", "BitNot", "Offset", "String8", "Column", "Affinity", "MakeRecord", "Count", "ReadCookie", "SetCookie", "ReopenIdx", "OpenRead", "OpenWrite", "OpenDup", "OpenAutoindex", "OpenEphemeral", "SorterOpen", "SequenceTest", "OpenPseudo", "Close", "ColumnsUsed", "Sequence", "NewRowid", "Insert", "InsertInt", "Delete", "ResetCount", "SorterCompare", "SorterData", "RowData", "Rowid", "NullRow", "SeekEnd", "SorterInsert", "IdxInsert", "IdxDelete", "DeferredSeek", "IdxRowid", "Real", "Destroy", "Clear", "ResetSorter", "CreateBtree", "SqlExec", "ParseSchema", "LoadAnalysis", "DropTable", "DropIndex", "DropTrigger", "IntegrityCk", "RowSetAdd", "Param", "FkCounter", "MemMax", "OffsetLimit", "AggStep0", "AggStep", "AggFinal", "Expire", "TableLock", "VBegin", "VCreate", "VDestroy", "VOpen", "VColumn", "VRename", "Pagecount", "MaxPgcnt", "PureFunc0", "Function0", "PureFunc", "Function", "Trace", "CursorHint", "Noop", "Explain", "tbl,idx,stat", "sqlite_stat3", "sqlite_stat4", "sqlite_detach", "shared", "private", "sqlite_attach", "persist", "UTF-8", "UTF-16le", "UTF-16be", "UTF16le", "UTF16be", "UTF-16", "UTF16", "match", "regexp", " TEXT", " NUM", " INT", " REAL", "RELEASE", "addr", "opcode", "comment", "selectid", "from", "not an error", "SQL logic error", "access permission denied", "query aborted", "database is locked", "database table is locked", "attempt to write a readonly database", "interrupted", "disk I/O error", "database disk image is malformed", "unknown operation", "database or disk is full", "unable to open database file", "locking protocol", "constraint failed", "datatype mismatch", "bad parameter or other API misuse", "authorization denied", "column index out of range", "file is not a database", "/var/tmp", "/usr/tmp", "/tmp", "unix", "unix-none", "unix-dotfile", "array", "object", "application_id", "auto_vacuum", "automatic_index", "busy_timeout", "cache_size", "cache_spill", "case_sensitive_like", "cell_size_check", "checkpoint_fullfsync", "collation_list", "compile_options", "count_changes", "data_version", "database_list", "default_cache_size", "defer_foreign_keys", "empty_result_callbacks", "encoding", "foreign_key_check", "foreign_key_list", "foreign_keys", "freelist_count", "full_column_names", "fullfsync", "ignore_check_constraints", "incremental_vacuum", "index_info", "index_list", "index_xinfo", "integrity_check", "journal_mode", "journal_size_limit", "legacy_file_format", "locking_mode", "max_page_count", "mmap_size", "page_count", "page_size", "query_only", "quick_check", "read_uncommitted", "recursive_triggers", "reverse_unordered_selects", "schema_version", "secure_delete", "short_column_names", "shrink_memory", "soft_heap_limit", "synchronous", "table_info", "temp_store", "temp_store_directory", "threads", "user_version", "wal_autocheckpoint", "wal_checkpoint", "writable_schema", "name", "type", "notnull", "dflt_value", "wdth", "hght", "flgs", "seqno", "coll", "unique", "origin", "partial", "builtin", "on_update", "on_delete", "parent", "fkid", "busy", "checkpointed", "timeout", "database", "status", "stat_get", "stat_push", "stat_init", "stat", "fstat", "fcntl", "read", "pread", "pread64", "pwrite", "pwrite64", "fchmod", "fallocate", "mkdir", "rmdir", "fchown", "geteuid", "munmap", "getpagesize", "ioctl", "second", "minute", "hour", "COMPILER=gcc-4.8", "DEFAULT_FOREIGN_KEYS", "ENABLE_COLUMN_METADATA", "ENABLE_FTS3_PARENTHESIS", "ENABLE_FTS4", "ENABLE_FTS5", "ENABLE_JSON1", "ENABLE_RTREE", "TEMP_STORE=3", "THREADSAFE=1"], "stringidentifiers": ["LiuJ", "tU6p", "aceinouyyacdeeghijklnorstuuwyzouaiougkojgnaeiorusthaeoy", "abddefghhikllmnprrstuvwwxyzhtwyaeiouy", "thstndrd", "naturaleftouterightfullinnercross", "BINARY", "_ROWID_", "ROWID", "sqlite_master", "sqlite_temp_master", "main", "CASCADE", "RESTRICT", "INTERSECT", "EXCEPT", "UNION", "create", "trigger", "temp", "temporary", "explain", "DESC", "fts5_api_ptr", "INTEGER", "rowid", "ational", "tional", "tion", "enci", "ence", "anci", "ance", "izer", "logi", "alli", "entli", "ousli", "ization", "ation", "ator", "alism", "iveness", "fulness", "ousness", "aliti", "iviti", "biliti", "ical", "ness", "icate", "iciti", "ative", "alize", "able", "ible", "ement", "ment", "null", "SQLITE_", "unicode61", "tokenchars", "separators", "remove_diacritics", "sess", "lanoita", "lanoit", "icne", "icna", "rezi", "igol", "illa", "iltne", "ilsuo", "noitazi", "noita", "rota", "msila", "ssenevi", "ssenluf", "ssensuo", "itila", "itivi", "itilib", "etaci", "evita", "ezila", "itici", "laci", "ssen", "tneme", "tnem", "true", "false", "RtreeMatchArg", "NULL", "localtime", "unixepoch", "month", "year", "segment", "pgsz", "hashsize", "automerge", "usermerge", "crisismerge", "rank", "misuse", "mremap", "mmap", "close", "full_fsync", "ftruncate", "unlink", "fsync", "invalid", "openDirectory", "lstat", "readlink", "getcwd", "readonly_shm", "open", "write", "unopened", "sqlite_", "BINARY", "USING", "ORDER", "GROUP", "hidden", "SEARCH", "SCAN", "corrupt", "subqueries", "parameters", "access", "cache", "localhost", "mode", "sqlite3_extension_init", "sqlite3_", "_init", "docsize", "content", "prefix", "tokenize", "content_rowid", "columnsize", "detail", "unindexed", "fts3cursor", "replace", "insert", "SQLITE_TMPDIR", "TMPDIR", "modeof", "psow", "nolock", "immutable", "LIMIT", "DISTINCT", "LIST", "SCALAR", "NOCASE", "phrase", "NEAR", "fts5_expr_tcl", "fts5_expr", "nearset", "into", "BEGIN", "program", "sqlite_stat1", "sqlite_sequence", "pragma_", "normal", "exclusive", "UTF8", "fast", "none", "full", "incremental", "file", "memory", "issisi", "iisX", "isiX", "isisi", "iissssss", "NONE", "like", "restart", "truncate", "glob", "ROLLBACK", "COMMIT", "BEFORE", "AFTER", "view", "sqlite_stat", "index", "altertab_", "TABLE", "table", "VIEW", "instance", "simple", "offsets", "snippet", "compress", "uncompress", "_content", "__langid", "fts3", "desc", "docid", "langid", "_rowid", "_parent", "integer", "real", "indexed", "block", "version", "data", "config", "bm25", "reads", "UPDATE", "delete", "rebuild", "optimize", "merge", "matchinfo", "RTRIM", "MATCH", "fts5", "fts5_decode", "fts5_decode_none", "fts5_rowid", "fts5vocab", "fts5_source_id", "fts4aux", "porter", "fts3_tokenizer", "fts4", "fts3tokenize", "rtreenode", "rtreedepth", "rtreecheck", "rtree", "rtree_i32", "json_group_array", "json_group_object", "json_each", "json_tree", "json", "json_array", "json_array_length", "json_extract", "json_insert", "json_object", "json_patch", "json_quote", "json_remove", "json_replace", "json_set", "json_type", "json_valid", "order", "languageid", "notindexed", "ascii", "highlight", "columns", "fts5_isalnum", "fts5_fold", "text", "blob", "julianday", "date", "time", "datetime", "strftime", "current_time", "current_timestamp", "current_date", "sqlite_rename_table", "sqlite_rename_trigger", "sqlite_rename_parent", "load_extension", "sqlite_compileoption_used", "sqlite_compileoption_get", "unlikely", "likelihood", "likely", "ltrim", "rtrim", "trim", "typeof", "length", "instr", "printf", "unicode", "char", "round", "upper", "lower", "ifnull", "random", "randomblob", "nullif", "sqlite_version", "sqlite_source_id", "sqlite_log", "quote", "last_insert_rowid", "changes", "total_changes", "zeroblob", "substr", "total", "count", "group_concat", "coalesce", "UNIQUE", "CHECK", "Savepoint", "AutoCommit", "Transaction", "SorterNext", "PrevIfOpen", "NextIfOpen", "Prev", "Next", "Checkpoint", "JournalMode", "Vacuum", "VFilter", "VUpdate", "Goto", "Gosub", "InitCoroutine", "Yield", "MustBeInt", "Jump", "Once", "IfNot", "IfNullRow", "SeekLT", "SeekLE", "SeekGE", "SeekGT", "NoConflict", "NotFound", "Found", "SeekRowid", "NotExists", "Last", "IfSmaller", "SorterSort", "Sort", "Rewind", "IdxLE", "IdxGT", "IdxLT", "IdxGE", "RowSetRead", "RowSetTest", "Program", "FkIfZero", "IfPos", "IfNotZero", "IsNull", "NotNull", "ElseNotEq", "DecrJumpZero", "IncrVacuum", "VNext", "Init", "Return", "EndCoroutine", "HaltIfNull", "Halt", "Integer", "Int64", "String", "Null", "SoftNull", "Blob", "Variable", "Move", "Copy", "SCopy", "IntCopy", "ResultRow", "CollSeq", "AddImm", "RealAffinity", "Cast", "Permutation", "BitAnd", "BitOr", "ShiftLeft", "ShiftRight", "Subtract", "Multiply", "Divide", "Remainder", "Concat", "Compare", "BitNot", "Offset", "String8", "Column", "Affinity", "MakeRecord", "Count", "ReadCookie", "SetCookie", "ReopenIdx", "OpenRead", "OpenWrite", "OpenDup", "OpenAutoindex", "OpenEphemeral", "SorterOpen", "SequenceTest", "OpenPseudo", "Close", "ColumnsUsed", "Sequence", "NewRowid", "Insert", "InsertInt", "Delete", "ResetCount", "SorterCompare", "SorterData", "RowData", "Rowid", "NullRow", "SeekEnd", "SorterInsert", "IdxInsert", "IdxDelete", "DeferredSeek", "IdxRowid", "Real", "Destroy", "Clear", "ResetSorter", "CreateBtree", "SqlExec", "ParseSchema", "LoadAnalysis", "DropTable", "DropIndex", "DropTrigger", "IntegrityCk", "RowSetAdd", "Param", "FkCounter", "MemMax", "OffsetLimit", "AggStep0", "AggStep", "AggFinal", "Expire", "TableLock", "VBegin", "VCreate", "VDestroy", "VOpen", "VColumn", "VRename", "Pagecount", "MaxPgcnt", "PureFunc0", "Function0", "PureFunc", "Function", "Trace", "CursorHint", "Noop", "Explain", "sqlite_stat3", "sqlite_stat4", "sqlite_detach", "shared", "private", "sqlite_attach", "persist", "UTF16le", "UTF16be", "UTF16", "match", "regexp", "RELEASE", "addr", "opcode", "comment", "selectid", "from", "interrupted", "unix", "array", "object", "application_id", "auto_vacuum", "automatic_index", "busy_timeout", "cache_size", "cache_spill", "case_sensitive_like", "cell_size_check", "checkpoint_fullfsync", "collation_list", "compile_options", "count_changes", "data_version", "database_list", "default_cache_size", "defer_foreign_keys", "empty_result_callbacks", "encoding", "foreign_key_check", "foreign_key_list", "foreign_keys", "freelist_count", "full_column_names", "fullfsync", "ignore_check_constraints", "incremental_vacuum", "index_info", "index_list", "index_xinfo", "integrity_check", "journal_mode", "journal_size_limit", "legacy_file_format", "locking_mode", "max_page_count", "mmap_size", "page_count", "page_size", "query_only", "quick_check", "read_uncommitted", "recursive_triggers", "reverse_unordered_selects", "schema_version", "secure_delete", "short_column_names", "shrink_memory", "soft_heap_limit", "synchronous", "table_info", "temp_store", "temp_store_directory", "threads", "user_version", "wal_autocheckpoint", "wal_checkpoint", "writable_schema", "name", "type", "notnull", "dflt_value", "wdth", "hght", "flgs", "seqno", "coll", "unique", "origin", "partial", "builtin", "on_update", "on_delete", "parent", "fkid", "busy", "checkpointed", "timeout", "database", "status", "stat_get", "stat_push", "stat_init", "stat", "fstat", "fcntl", "read", "pread", "pread64", "pwrite", "pwrite64", "fchmod", "fallocate", "mkdir", "rmdir", "fchown", "geteuid", "munmap", "getpagesize", "ioctl", "second", "minute", "hour", "DEFAULT_FOREIGN_KEYS", "ENABLE_COLUMN_METADATA", "ENABLE_FTS3_PARENTHESIS", "ENABLE_FTS4", "ENABLE_FTS5", "ENABLE_JSON1", "ENABLE_RTREE"], "debugstrings": ["PRAGMA %Q.data_version", "version", "sqlite_version", "data_version", "schema_version", "user_version", "GCC: (GNU) 4.8"], "localsymbols": [""], "dependencies": ["libstdc++.so", "libc.so", "libm.so", "libdl.so"], "elfname": "libe_sqlite3.so"}