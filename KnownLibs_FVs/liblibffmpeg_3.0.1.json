{"globalvars": ["ff_h263_intra_MCBPC_vlc", "ff_ac3_hearing_threshold_tab", "ff_sin_32", "ff_id3v2_34_metadata_conv", "ff_sine_128_fixed", "ff_mpeg1_default_intra_matrix", "ff_aac_parser", "ff_sbr_noise_table", "ff_aac_demuxer", "ff_cos_256", "ff_dc_chroma_vlc", "ff_hevc_epel_filters", "ff_inter_run", "ff_h263_chroma_qscale_table", "ff_aac_latm_decoder", "ff_hevc_parser", "ff_mpeg4_default_non_intra_matrix", "ff_h264_chroma_qp", "ff_sin_16384", "ff_ac3_frame_size_tab", "av_md5_size", "ff_swb_offset_128", "ff_dca_profiles", "ff_flv_decoder", "ff_libx264_encoder", "av_tea_size", "ff_h263_pixel_aspect", "ff_h264_cabac_tables", "ff_h263_inter_MCBPC_bits", "ff_gif_encoder", "ff_aac_num_swb_512", "ff_h264_profiles", "ff_mpa_quant_bits", "ff_aac_eld_window_512", "av_format_ffversion", "ff_sin_65536", "ff_log2_run", "ff_ac3_bitrate_tab", "uyvytoyuv422", "ff_aac_profiles", "yvu9_to_yuy2", "ff_mdct_win_float", "avpriv_mpa_freq_tab", "rgb24tobgr24", "ff_cos_65536_fixed", "ff_aac_kbd_short_128_fixed", "ff_id3v2_4_metadata_conv", "ff_square_tab", "ff_gif_muxer", "ff_ac3_window", "ff_h263i_decoder", "ff_cos_8192_fixed", "ff_mpeg4_intra_run", "ff_codec_bmp_tags", "ff_rl_mpeg2", "ff_cos_64_fixed", "ff_mpeg4_video_profiles", "ff_aac_spectral_bits", "vu9_to_vu12", "ff_mpeg4_static_rl_table_store", "ff_rvlc_rl_intra", "__clz_tab", "ff_cos_1024_fixed", "ff_img_tags", "ff_sine_256_fixed", "ff_mpeg4_y_dc_scale_table", "ff_tns_max_bands_480", "deinterleaveBytes", "rgb24tobgr32", "ff_h263_encoder", "ff_aac_scalefactor_bits", "ff_add_pixels_clamped", "ff_sine_128", "ff_mpeg12_vlc_dc_lum_bits", "ff_interleaved_ue_golomb_vlc_code", "ff_mb_btype_vlc", "ff_sine_windows", "ff_h263_cbpy_vlc", "ff_h263p_decoder", "ff_mpegvideo_parser", "ff_lzw_encode_state_size", "ff_mpeg12_mbMotionVectorTable", "avpriv_vga16_font", "ff_h264_decoder", "ff_mpeg2_video_profiles", "ff_cos_tabs", "ff_eac3_default_chmap", "ff_hevc_profiles", "ff_mpeg4_DCtab_chrom", "ff_aac_adtstoasc_bsf", "ff_inv_aanscales", "ff_mpeg12_vlc_dc_chroma_code", "ff_sine_512", "ff_mpegaudio_parser", "ff_aac_kbd_long_1024_fixed", "ff_aac_codebook_vector_idx", "ffurl_context_class", "av_cast5_size", "av_twofish_size", "ff_mpeg2_non_linear_qscale", "ff_sin_1024", "ff_mp4_obj_type", "ff_mpeg1_dc_scale_table", "ff_sin_32768", "ff_aac_eld_window_480_fixed", "ff_reverse", "ff_cos_1024", "ff_sine_256", "ff_sine_8192_fixed", "ff_mpeg12_vlc_dc_chroma_bits", "ff_mv_vlc", "ff_sin_4096", "ff_h263_parser", "ff_aac_num_swb_1024", "ff_h263_loop_filter_strength", "rgb32tobgr15", "ff_swb_offset_512", "ff_mp3_decoder", "avpriv_pix_fmt_bps_avi", "ff_sin_128", "ff_cos_4096", "ff_yuv2rgb_coeffs", "ff_cos_65536", "ff_mpeg2_aspect", "ff_eac3_default_cpl_band_struct", "ff_rgb24toyv12", "ff_mpeg4video_parser", "ff_mba_max", "ff_sine_1024_fixed", "ff_h263_mbtype_b_tab", "rgb16to15", "ff_aac_pred_sfb_max", "ff_aac_decoder", "ff_h264_mp4toannexb_bsf", "ff_avio_class", "ff_mbincr_vlc", "ff_inter_level", "ff_ac3_sample_rate_tab", "shuffle_bytes_0321", "ff_mpeg4_c_dc_scale_table", "ff_alternate_vertical_scan", "ff_rl_mpeg1", "rgb24tobgr16", "rgb32tobgr16", "ff_ac3_rematrix_band_tab", "ff_sine_1024", "ff_id3v2_tags", "ff_ac3_db_per_bit_tab", "ff_ac3_fast_decay_tab", "ff_dither_4x4_16", "ff_sine_512_fixed", "ff_crop_tab", "ff_dither_8x8_220", "ff_interleaved_se_golomb_vlc_code", "__CTOR_LIST__", "avpriv_mpa_bitrate_tab", "ff_cos_4096_fixed", "ff_cos_16", "ff_modified_quant_tab", "ff_hevc_demuxer", "ff_sin_8192", "ff_vp9_profiles", "ff_mpeg4_decoder", "ff_ac3_slow_gain_tab", "ff_h263_cbpy_tab", "ff_dither_8x8_128", "ff_codec_movvideo_tags", "ff_cos_128_fixed", "ff_hevc_decoder", "yv12toyuy2", "ff_mdct_win_fixed", "avpriv_pix_fmt_bps_mov", "uyvytoyuv420", "ff_id3v2_3_tags", "ff_sine_8192", "ff_aanscales", "ff_inter_vlc", "ff_h263p_encoder", "ff_gif_demuxer", "ff_rvlc_rl_inter", "__popcount_tab", "ff_h263_format", "avpriv_cga_font", "ff_file_protocol", "ff_hevc_diag_scan4x4_y", "ff_cos_256_fixed", "ff_gif_decoder", "ff_sine_4096_fixed", "ff_vc1_profiles", "ff_msmpeg4v3_encoder", "ff_mvtab", "ff_ac3_log_add_tab", "ff_fft_offsets_lut", "ff_cos_32768_fixed", "ff_aac_spectral_codes", "ff_h264_mb_sizes", "ff_hevc_mp4toannexb_bsf", "ff_aac_eld_window_480", "ff_h263_rl_inter", "ff_dc_lum_vlc", "ff_default_chroma_qscale_table", "ff_cos_8192", "ff_ac3_dec_channel_map", "ff_aac_num_swb_480", "ff_mpa_enwindow", "ff_hevc_pel_weight", "ff_tns_max_bands_1024", "ff_mb_pat_vlc", "ff_mba_length", "ff_hevc_diag_scan8x8_y", "ff_aac_kbd_short_128", "ff_mpeg4audio_channels", "ff_tgp_muxer", "ff_mpeg12_mbAddrIncrTable", "ff_mb_type_b_tab", "ff_sine_4096", "ff_ac3_slow_decay_tab", "ff_ac3_fast_gain_tab", "rgb24to16", "ff_cos_2048_fixed", "ff_cos_16384_fixed", "rgb32tobgr24", "ff_tns_max_bands_128", "ff_cos_tabs_fixed", "ff_mpeg2_frame_rate_tab", "ff_sin_512", "ff_w_tab_sr", "ff_codec_movaudio_tags", "ff_se_golomb_vlc_code", "ff_msmpeg4v2_encoder", "ff_riff_info_conv", "ff_dither_2x2_8", "ff_mpeg4_resync_prefix", "ff_sine_64", "ff_mov_muxer", "ff_aac_scalefactor_code", "ff_cos_32_fixed", "ff_cos_2048", "av_tree_node_size", "planar2x", "ff_dither_8x8_73", "ff_h263_hwaccel_pixfmt_list_420", "ff_sine_2048_fixed", "ff_id3v2_mime_tags", "ff_hevc_diag_scan4x4_x", "ff_cos_64", "ff_ue_golomb_vlc_code", "ff_cos_128", "rgb32to15", "ff_h263_inter_MCBPC_code", "ff_aac_spectral_sizes", "ff_log2_tab", "ff_mpeg1_default_non_intra_matrix", "ff_sine_2048", "ff_mpeg4_dc_threshold", "ff_ac3_enc_channel_map", "ff_put_pixels_clamped", "ff_sin_64", "ff_sqrt_tab", "ff_cos_16384", "ff_sine_32_fixed", "rgb24to15", "ff_sine_windows_fixed", "ff_cos_512_fixed", "ff_hevc_diag_scan8x8_x", "__DTOR_LIST__", "ff_mpa_synth_window_float", "ff_png_decoder", "ff_cos_32", "ff_h263_decoder", "yuv422ptoyuy2", "ff_h263_intra_MCBPC_bits", "ff_mov_demuxer", "av_camellia_size", "ff_alternate_horizontal_scan", "ff_aac_codebook_vectors", "ff_cos_32768", "ff_mpeg12_frame_rate_tab", "ff_sin_256", "ff_h263_intra_MCBPC_code", "ff_png_pass_ymask", "ff_raw_pix_fmt_tags", "av_ripemd_size", "ff_mpa_quant_steps", "shuffle_bytes_2103", "ff_sws_context_class", "ff_ac3_bap_tab", "rgb24tobgr15", "ff_dither_8x8_32", "ff_h263_static_rl_table_store", "ff_mpeg4_rl_intra", "ff_mpv_generic_options", "yuv422ptouyvy", "ff_mpa_synth_window_fixed", "rgb16tobgr24", "rgb15tobgr24", "ff_sin_2048", "ff_aac_kbd_long_1024", "ff_mp3_demuxer", "ff_ipod_muxer", "ff_mp4_muxer", "ff_jpeg2000_profiles", "ff_flv_encoder", "avpriv_ac3_channel_layout_tab", "ff_mpeg4_intra_vlc", "ff_mpeg12_mbPatTable", "ff_aic_dc_scale_table", "ff_rl_intra_aic", "ff_sin_16", "yuyvtoyuv422", "ff_aac_eld_window_512_fixed", "ff_mb_ptype_vlc", "ff_mpeg12_vlc_dc_lum_code", "ff_mpa_alloc_tables", "ff_mpeg1_aspect", "ff_codec_wav_guids", "rgb15to32", "ff_h263_inter_MCBPC_vlc", "ff_interleaved_dirac_golomb_vlc_code", "ff_wmv1_encoder", "ff_swb_offset_480", "ff_aac_pow2sf_tab", "yuyvtoyuv420", "ff_ac3_channels_tab", "av_util_ffversion", "ff_mpeg4_default_intra_matrix", "ff_aac_num_swb_128", "av_codec_ffversion", "ff_rawvideo_options", "ff_sprite_trajectory_tab", "ff_sine_64_fixed", "ff_mpeg4_encoder", "ff_cos_512", "ff_golomb_vlc_len", "yuy2toyv12", "rgb16to32", "ff_avcodec_locked", "ff_interleaved_golomb_vlc_len", "avpriv_mpeg4audio_sample_rates", "ff_dither_2x2_4", "ff_swb_offset_1024", "yv12touyvy", "av_sha512_size", "av_aes_size", "ff_id3v2_picture_types", "ff_zigzag_direct", "ff_aac_codebook_vector_vals", "ff_mpeg4_intra_level", "ff_cbpc_b_tab", "ff_mpa_sblimit_table", "rgb15to16", "ff_id3v1_genre_str", "ff_codec_movsubtitle_tags", "ff_mpeg12_static_rl_table_store", "ff_codec_wav_tags", "ff_mpeg2_dc_scale_table", "av_sha_size", "ff_tns_max_bands_512", "ff_aac_pow34sf_tab", "ff_inverse", "ff_sine_32", "ff_id3v2_4_tags", "ff_hevc_qpel_filters", "ff_libx264rgb_encoder", "ff_ue_golomb_len", "ff_cos_16_fixed", "interleaveBytes", "ff_mpeg4_DCtab_lum", "ff_ac3_floor_tab", "rgb32to16"], "importedglobals": ["x264_bit_depth", "__sF", "x264_levels"], "importedfunctions": ["access", "rmdir", "posix_memalign", "calloc", "cos", "atan", "lrintf", "x264_param_parse", "pthread_create", "sscanf", "lrint", "x264_encoder_delayed_frames", "snprintf", "free", "inflate", "fstat", "localtime_r", "tanh", "pthread_getspecific", "sinf", "mkstemp", "strerror_r", "read", "cbrt", "x264_encoder_encode", "nanosleep", "x264_encoder_headers", "x264_param_apply_profile", "lstat", "exp2", "strcpy", "__sched_cpucount", "powf", "inflateEnd", "asin", "hypot", "memcmp", "getenv", "strtoll", "memchr", "write", "pow", "inflateInit_", "strncmp", "pthread_once", "pthread_join", "munmap", "strcmp", "sinh", "log", "pthread_mutex_unlock", "cosf", "x264_encoder_close", "sin", "arc4random", "strftime", "memcpy", "pthread_cond_broadcast", "dl_iterate_phdr", "tan", "pthread_cond_signal", "close", "fwrite", "strtod", "fflush", "acos", "fputs", "uncompress", "strstr", "closedir", "mmap", "x264_param_default", "log10", "malloc", "log2f", "bsearch", "mktime", "pthread_cond_destroy", "atan2f", "lseek64", "pthread_key_create", "atan2", "fabs", "strrchr", "strspn", "isatty", "vsnprintf", "cosh", "pthread_cond_init", "sched_getaffinity", "pthread_mutex_destroy", "opendir", "gmtime_r", "pthread_cond_wait", "cbrtf", "strlen", "x264_picture_init", "memset", "__errno", "unlink", "gettimeofday", "clock_gettime", "exp", "open", "x264_param_default_preset", "pthread_mutex_lock", "rename", "readdir", "x264_encoder_reconfig", "strcspn", "fprintf", "x264_param_apply_fastfirstpass", "memmove", "frexp", "pthread_setspecific", "atanf", "fputc", "realloc", "strchr", "x264_encoder_open_148", "fcntl", "abort", "strtol", "atoi", "strtoul", "fdopen", "pthread_mutex_init"], "exportedfunctions": ["av_register_all", "ff_mpv_reallocate_putbitbuffer", "av_hmac_update", "__mulvsi3", "ff_sws_init_range_convert", "ff_mdct_end_fixed", "ff_fix_long_p_mvs", "av_force_cpu_flags", "av_mdct_end", "av_thread_message_flush", "ff_decode_frame_props", "ff_mpeg_flush", "__mulsc3", "av_packet_free", "av_register_bitstream_filter", "ff_put_h264_qpel8_mc02_neon", "av_write_trailer", "ff_h263_find_frame_end", "av_timecode_make_string", "__deregister_frame_info", "av_packet_rescale_ts", "av_get_channel_layout_string", "avpriv_split_xiph_headers", "av_find_program_from_stream", "ff_h264_idct_dc_add_9_c", "av_parse_time", "ff_put_h264_qpel16_mc02_neon", "ff_id3v2_free_extra_meta", "av_rc4_init", "av_opt_query_ranges_default", "ff_set_sar", "avio_get_str16be", "ff_mpeg4_decode_video_packet_header", "ff_check_pixfmt_descriptors", "av_color_transfer_name", "ff_hevc_split_transform_flag_decode", "ff_mpeg4_clean_buffers", "ff_print_debug_info2", "av_probe_input_buffer", "av_md5_init", "av_codec_set_codec_descriptor", "ff_init_scantable", "avformat_close_input", "ff_h264_chroma422_dc_dequant_idct_9_c", "av_tree_destroy", "_Unwind_GetCFA", "ff_mdct_init", "ff_put_h264_qpel8_mc33_neon", "avcodec_default_execute2", "ff_mov_get_channel_layout_tag", "__trunctfdf2", "av_set_cpu_flags_mask", "av_stereo3d_create_side_data", "av_dict_parse_string", "av_log_set_flags", "av_dict_free", "__mulvti3", "av_bprint_init", "av_opt_get_key_value", "avcodec_dct_alloc", "__multc3", "av_frame_set_sample_rate", "avcodec_align_dimensions", "ff_put_h264_qpel16_mc10_neon", "avio_closep", "ff_lzw_encode", "ff_h263dsp_init", "av_opt_ptr", "av_register_codec_parser", "ff_fft_permute_neon", "ff_png_pass_row_size", "ff_put_h264_qpel8_mc23_neon", "ff_fix_long_mvs", "ff_thread_can_start_frame", "ff_mpadsp_apply_window_float", "__ffsti2", "__clzdi2", "ff_interleave_add_packet", "av_add_i", "ff_h263_decode_frame", "ff_bswapdsp_init", "av_rc4_alloc", "ff_init_me", "av_format_get_subtitle_codec", "__ctzti2", "ff_put_h264_qpel16_mc01_neon", "ff_codec_get_tag", "ff_h263_pred_motion", "ff_h263_decode_end", "av_opt_eval_float", "ff_h264dsp_init_aarch64", "ffurl_handshake", "av_hash_update", "_Unwind_GetDataRelBase", "av_thread_message_queue_free", "__eprintf", "av_mdct_calc", "ff_get_extradata", "ff_format_io_close", "ff_alloc_dir_entry", "ff_mpeg_unref_picture", "av_sample_fmt_is_planar", "av_buffer_realloc", "ff_thread_release_buffer", "ff_add_param_change", "av_audio_fifo_realloc", "ff_add_cpb_side_data", "ff_codec_get_id", "ff_h264_sei_stereo_mode", "__fixtfti", "ff_init_desc_no_chr", "av_log_missing_feature", "av_mul_i", "av_rescale", "av_add_index_entry", "ff_fdctdsp_init", "av_get_exact_bits_per_sample", "av_buffer_pool_uninit", "av_md5_sum", "ff_h264_v_loop_filter_luma_neon", "av_display_rotation_get", "avcodec_decode_audio4", "av_log_get_flags", "ff_avg_h264_qpel8_mc21_neon", "avpriv_get_trc_function_from_trc", "avformat_match_stream_specifier", "av_buffer_create", "ff_hevc_output_frame", "av_blowfish_crypt_ecb", "ff_data_to_hex", "av_opt_get_int", "av_color_range_name", "ff_hpeldsp_init", "ff_thread_report_progress", "av_file_unmap", "ff_init_ff_cos_tabs", "av_gettime_relative", "__letf2", "ff_pred8x8_left_dc_neon", "avformat_get_mov_video_tags", "av_bprint_chars", "ff_hevc_cabac_init", "av_escape", "av_vorbis_parse_init", "ff_videodsp_init", "av_get_frame_filename", "ff_get_buffer", "__mulvdi3", "av_opt_flag_is_set", "rgb15tobgr32", "ff_sbr_apply", "ff_h263_decode_picture_header", "ff_put_pixels16_y2_no_rnd_neon", "av_find_default_stream_index", "ff_mpa_decode_header", "av_opt_child_class_next", "ff_init_desc_chscale", "ff_pred8x8_0lt_dc_neon", "ff_init_ff_sine_windows", "ff_avg_h264_qpel8_mc12_neon", "avformat_flush", "av_opt_free", "ff_mpv_decode_mb", "av_rdft_init", "ff_lzw_encode_init", "ff_alloc_packet2", "av_downmix_info_update_side_data", "ff_guess_image2_codec", "__register_frame_info_table_bases", "_Unwind_GetLanguageSpecificData", "__powitf2", "av_buffer_ref", "av_des_init", "ff_mpeg1_find_frame_end", "ff_init_block_index", "avcodec_get_class", "ff_h264_direct_ref_list_init", "av_probe_input_buffer2", "ff_hevc_unref_frame", "ff_mpeg4_pred_ac", "av_expr_parse", "ff_put_pixels8x8_c", "ff_mpv_common_end", "avcodec_enum_to_chroma_pos", "sws_getContext", "avpriv_mpegaudio_decode_header", "av_get_bits_per_sample", "ff_faandct", "ff_put_no_rnd_qpel8_mc31_old_c", "av_fft_init", "av_frame_unref", "ff_put_qpel8_mc11_old_c", "av_opt_get_dict_val", "swscale_configuration", "ff_lzw_decode_init", "_Unwind_SetGR", "avformat_new_stream", "av_strtod", "ff_rotate_slice", "av_new_packet", "av_log2_i", "ff_rtp_enc_name", "av_expr_free", "ff_rtp_get_payload_type", "ff_h264_idct_add16_neon", "ff_hevc_skip_flag_decode", "ff_h264_idct8_add4_9_c", "ff_set_ref_count", "av_twofish_crypt", "av_frame_set_channel_layout", "ff_h264_idct8_add_9_c", "ff_hevc_set_new_ref", "av_sha_init", "av_fifo_realloc2", "ff_mpv_decode_init", "av_md5_alloc", "ff_put_pixels16_xy2_neon", "ff_dct_init", "ff_idctdsp_init", "av_packet_ref", "ff_h264_idct_add16_12_c", "ff_hevc_log2_res_scale_abs", "ff_mp4_read_descr_len", "ff_put_pixels8_xy2_no_rnd_neon", "ff_avg_pixels8x8_c", "avformat_open_input", "ff_pred8x8_dc_neon", "ff_put_qpel16_mc11_old_c", "ff_qpeldsp_init", "ff_fdct248_islow_8", "ff_init_buffer_info", "av_opt_get", "ff_raw_video_read_header", "av_log2", "sws_freeContext", "av_opt_freep_ranges", "ff_avg_h264_qpel8_mc23_neon", "av_resample_close", "avpriv_set_pts_info", "av_md5_update", "ff_side_data_update_matrix_encoding", "av_opt_is_set_to_default", "av_color_primaries_name", "ff_gen_search", "ff_mdct_init_fixed", "av_crc", "avio_rl16", "ff_ps_init", "av_parse_ratio", "av_dv_codec_profile2", "av_pix_fmt_desc_get", "av_bmg_get", "av_format_get_probe_score", "av_find_best_stream", "ff_clean_h263_qscales", "avcodec_profile_name", "avcodec_encode_subtitle", "__udivti3", "avio_wl24", "ff_h264_v_loop_filter_chroma_neon", "ff_pred16x16_128_dc_neon", "ff_mov_cenc_write_packet", "ff_hevc_hls_filter", "__powidf2", "av_d2str", "ff_mpv_encode_end", "ff_h264_chroma422_dc_dequant_idct_12_c", "ff_sws_rgb2rgb_init", "avcodec_align_dimensions2", "ff_h264_idct8_dc_add_12_c", "avutil_license", "ff_put_qpel16_mc12_old_c", "ff_pred8x8_l0t_dc_neon", "ffurl_size", "av_fifo_generic_peek", "ff_mpa_synth_init_float", "av_hmac_free", "ff_side_data_set_encoder_stats", "ff_frame_thread_free", "av_opt_copy", "avio_open", "ffurl_shutdown", "ff_put_pixels8_y2_neon", "ff_fft_init_aarch64", "ff_h264_chroma_dc_dequant_idct_12_c", "ff_get_pcm_codec_id", "ff_id3v2_read", "av_image_check_size", "ff_avg_h264_qpel8_mc01_neon", "av_buffer_pool_init", "ffio_fill", "ff_png_zalloc", "ff_get_bmp_header", "av_frame_get_pkt_size", "av_frame_side_data_name", "ff_avg_qpel16_mc32_old_c", "av_opt_eval_double", "ff_dct_encode_init", "ffio_read_indirect", "ff_avg_h264_qpel16_mc11_neon", "av_gettime", "ff_lzw_decode_open", "ff_pred16x16_left_dc_neon", "ffio_init_checksum", "av_new_program", "av_add_stable", "av_parse_video_rate", "avio_seek_time", "ff_dct32_float", "av_stream_get_recommended_encoder_configuration", "ff_jref_idct_put", "ff_put_pixels8_x2_no_rnd_neon", "ff_avg_pixels16_neon", "avpriv_unlock_avformat", "ff_mov_cenc_write_stbl_atoms", "avformat_network_deinit", "av_hash_get_name", "avcodec_decode_subtitle2", "av_xtea_crypt", "ff_avg_qpel16_mc12_old_c", "av_free", "ff_h264_free_context", "ff_hevc_deblocking_boundary_strengths", "rgb15tobgr15", "_Unwind_FindEnclosingFunction", "ff_hevc_hls_filters", "ff_h264_idct_dc_add_12_c", "ff_match_2uint16", "ff_mov_read_chan", "__gcc_personality_v0", "ff_draw_horiz_band", "ff_lzw_decode", "ff_avg_h264_chroma_mc8_neon", "ff_imdct_calc_c", "ff_h264qpel_init", "av_buffer_is_writable", "ff_vector_fmul_scalar_neon", "ff_read_riff_info", "ff_init_poc", "ffio_read_partial", "ff_mpegvideodsp_init", "av_fast_realloc", "rgb64to48_nobswap", "ff_thread_report_progress2", "avcodec_free_context", "ff_mpadsp_apply_window_fixed_neon", "ff_avg_pixels8_x2_neon", "av_get_audio_frame_duration", "ff_raw_data_read_header", "av_audio_fifo_drain", "av_version_info", "av_hex_dump_log", "ffio_set_buf_size", "ff_mpeg_ref_picture", "av_frame_set_qp_table", "ff_find_last_ts", "av_get_pix_fmt_loss", "avcodec_find_decoder_by_name", "av_parse_video_size", "ff_h264_draw_horiz_band", "ff_put_h264_qpel8_mc30_neon", "ff_h264_pred_init", "av_get_channel_description", "ff_fft_end", "ff_avg_h264_qpel16_mc32_neon", "av_format_get_video_codec", "av_parse_color", "av_codec_get_tag2", "__muldc3", "__popcountti2", "av_file_map", "ff_mpv_common_defaults", "ff_avg_h264_qpel8_mc31_neon", "av_bprint_init_for_buffer", "ff_sws_alphablendaway", "ff_put_no_rnd_qpel16_mc11_old_c", "ff_mp4_read_dec_config_descr", "av_opt_set_image_size", "avcodec_default_get_buffer2", "avpriv_aac_parse_header", "av_get_packet", "ff_h264_fill_mbaff_ref_list", "ff_mpv_idct_init", "av_rescale_delta", "ff_fft_init_fixed", "ff_pred8x8_0l0_dc_neon", "av_resample_init", "avformat_network_init", "ff_hevc_sao_offset_abs_decode", "av_aes_ctr_free", "ff_ape_parse_tag", "ff_fft_lut_init", "ff_h264_idct_add_12_c", "ff_h264_decode_sei", "av_camellia_crypt", "ff_hevc_luma_mv_mvp_mode", "av_packet_pack_dictionary", "avcodec_register", "av_buffer_get_ref_count", "avcodec_decode_video2", "ff_lzw_decode_close", "ff_rtp_chain_mux_open", "_Unwind_ForcedUnwind", "_Unwind_GetRegionStart", "ff_fft_init", "ff_color_frame", "ff_h264_idct8_dc_add_8_c", "ff_combine_frame", "av_stream_get_r_frame_rate", "ff_avg_h264_qpel16_mc00_neon", "av_parse_cpu_caps", "avpriv_get_raw_pix_fmt_tags", "ff_put_v", "av_resample", "ff_rl_init", "av_get_colorspace_name", "av_freep", "avpriv_request_sample", "ff_put_pixels16_xy2_no_rnd_neon", "ff_block_permute", "av_hash_names", "ff_celt_imdct_half_neon", "av_opt_is_set_to_default_by_name", "__fixunssfdi", "ff_add_png_paeth_prediction", "av_get_pcm_codec", "ff_hevc_cu_chroma_qp_offset_flag", "ff_metadata_conv", "av_probe_input_format3", "ff_me_cmp_init_static", "ff_hevc_sao_type_idx_decode", "__negtf2", "_Unwind_Resume_or_Rethrow", "sws_get_class", "av_image_alloc", "ff_init_mpadsp_tabs_fixed", "av_get_channel_layout_nb_channels", "av_timecode_init_from_string", "av_blowfish_crypt", "avutil_version", "av_frame_new_side_data", "avpriv_get_gamma_from_trc", "av_get_alt_sample_fmt", "av_log_get_level", "_Unwind_GetGR", "ff_thread_free", "av_thread_message_queue_alloc", "avformat_queue_attached_pictures", "av_frame_set_channels", "ff_imdct_calc_c_fixed_32", "sws_alloc_context", "ff_mpeg4_workaround_bugs", "av_thread_message_queue_recv", "ff_hevc_merge_flag_decode", "ff_init_slice_from_src", "av_twofish_alloc", "ff_hevc_decode_nal_sei", "av_dict_copy", "avpicture_free", "ff_put_qpel16_mc32_old_c", "ff_lzw_decode_tail", "av_lfg_init", "ff_pred8x8_vert_neon", "ff_unlock_avcodec", "avio_size", "ff_frame_thread_encoder_free", "__addvti3", "ff_h263_encode_motion", "av_guess_frame_rate", "ff_pngdsp_init", "av_opt_get_video_rate", "ff_crc04C11DB7_update", "ff_mdct_calc_c", "av_chroma_location_name", "av_ripemd_init", "ff_hevc_set_qPy", "ff_id3v2_read_dict", "avio_rl64", "ff_mdct_calc_neon", "ff_jref_idct_add", "ff_startcode_find_candidate_c", "ff_avg_pixels16_xy2_no_rnd_neon", "sws_shiftVec", "av_pkt_dump_log2", "sws_getCachedContext", "ff_simple_idct48_add", "ff_j_rev_dct4", "ff_ps_apply", "ff_frame_thread_init", "ff_psdsp_init", "ff_mov_read_esds", "av_set_options_string", "avpriv_mpa_decode_header", "av_imdct_calc", "avcodec_encode_video2", "__deregister_frame_info_bases", "ff_pred16x16_dc_neon", "ff_imdct36_blocks_fixed", "avpriv_alloc_fixed_dsp", "ff_h264_update_thread_context", "ff_h263_encode_mba", "av_pix_fmt_swap_endianness", "ff_estimate_p_frame_motion", "ff_wav_codec_get_id", "avpriv_find_pix_fmt", "__subtf3", "ffurl_protocol_next", "av_format_set_subtitle_codec", "avpriv_put_string", "ff_vbv_update", "ff_imdct15_init", "ff_avg_h264_qpel16_mc10_neon", "avio_skip", "ffio_close_null_buf", "ff_h263_decode_mb", "ff_flv2_encode_ac_esc", "ff_mpv_encode_init", "ff_h264_idct_add8_422_9_c", "ff_h264_pred_init_aarch64", "_Unwind_Backtrace", "ff_mpeg_update_thread_context", "av_log_set_callback", "ff_j_rev_dct", "ff_hevc_no_residual_syntax_flag_decode", "av_resample_compensate", "av_vorbis_parse_reset", "av_lockmgr_register", "ff_codec_open2_recursive", "avio_get_str16le", "ff_mov_cenc_write_sinf_tag", "rgb48tobgr48_bswap", "ff_decode_sbr_extension", "ff_mpv_decode_defaults", "ff_init_ff_sine_windows_fixed", "av_aes_ctr_get_iv", "ff_h264_filter_mb_fast", "ffurl_read_complete", "ff_brktimegm", "avio_check", "av_thread_message_queue_set_free_func", "av_register_output_format", "avio_open_dyn_buf", "ff_mov_cenc_free", "ff_put_h264_qpel16_mc20_neon", "av_shrink_packet", "__divdc3", "av_dynarray_add", "av_dv_codec_profile", "ff_hevc_inter_pred_idc_decode", "ff_start_tag", "ff_mpadsp_apply_window_float_neon", "ff_prores_idct", "ff_h264_field_end", "av_frame_copy_props", "ff_h264_check_intra4x4_pred_mode", "av_ripemd_final", "av_codec_get_id", "__absvsi2", "ff_avc_write_annexb_extradata", "ff_update_duplicate_context", "ff_rfps_calculate", "av_timecode_adjust_ntsc_framenum2", "ff_put_h264_qpel8_mc20_neon", "ff_xvid_idct_init", "av_malloc", "avcodec_find_decoder", "avpriv_set_systematic_pal2", "sws_getConstVec", "ff_fdct_ifast248", "av_cast5_init", "ff_mpv_export_qp_table", "ff_configure_buffers_for_index", "ff_h264_idct_add8_neon", "ff_mpeg_framesize_alloc", "av_format_get_control_message_cb", "av_usleep", "av_sha512_update", "__absvdi2", "av_codec_set_pkt_timebase", "sws_convertPalette8ToPacked32", "avio_feof", "av_hmac_alloc", "ff_png_zfree", "ff_mpeg12_init_vlcs", "ff_getSwsFunc", "ff_hevc_frame_rps", "ff_set_mpeg4_time", "av_hash_final", "av_buffer_make_writable", "av_max_alloc", "__absvti2", "av_strndup", "ff_mpv_frame_start", "ff_crcA001_update", "av_fifo_generic_write", "avio_close_dyn_buf", "ff_imdct_half_c_fixed_32", "__multf3", "av_strncasecmp", "avio_free_directory_entry", "__popcountdi2", "ff_sbrdsp_init", "ff_simple_idct_12", "av_audio_fifo_free", "ffio_open2_wrapper", "av_hmac_init", "av_shr_i", "__register_frame", "ff_simple_idct_8", "__powisf2", "__register_frame_info", "av_pkt_dump2", "av_read_image_line", "av_get_media_type_string", "av_filename_number_test", "ff_h264_idct_add16intra_9_c", "av_bitstream_filter_filter", "ffurl_get_file_handle", "ff_end_tag", "ff_vector_fmul_reverse_neon", "av_samples_get_buffer_size", "av_frame_get_best_effort_timestamp", "avformat_alloc_output_context2", "ff_put_h264_qpel8_mc12_neon", "av_base64_decode", "ff_er_frame_start", "ff_h264_idct8_add_14_c", "ff_init_vscale_pfn", "avio_w8", "av_parser_close", "ff_hevc_extract_rbsp", "__negvdi2", "av_frame_set_color_range", "av_codec_get_lowres", "ff_h264_chroma_dc_dequant_idct_14_c", "av_rdft_end", "avcodec_dct_init", "av_guess_codec", "av_format_get_audio_codec", "audio_resample", "avcodec_find_best_pix_fmt2", "ff_weight_h264_pixels_16_neon", "ff_codec_guid_get_id", "av_buffer_pool_get", "av_fast_padded_mallocz", "ff_simple_idct248_put", "av_dirac_parse_sequence_header", "avcodec_copy_context", "ff_alloc_entries", "ff_put_qpel8_mc33_old_c", "ffurl_get_multi_file_handle", "ff_put_pixels8_xy2_neon", "ff_parse_key_value", "ff_put_bmp_header", "av_opt_eval_q", "ff_mpadsp_init_aarch64", "av_log_format_line", "ff_mpeg4_encode_mb", "ff_h264dsp_init", "rgb24to32", "av_guess_sample_aspect_ratio", "av_timecode_make_mpeg_tc_string", "ff_lzw_encode_flush", "av_seek_frame", "avpicture_get_size", "ff_mdct_end", "ff_h264_remove_all_refs", "av_image_get_buffer_size", "av_opt_set", "_Unwind_GetIPInfo", "ff_avg_h264_qpel8_mc10_neon", "avpriv_io_move", "ff_hevc_split_packet", "avio_put_str16be", "ff_hevc_cu_transquant_bypass_flag_decode", "av_codec_get_max_lowres", "ff_put_h264_qpel16_mc12_neon", "__emutls_register_common", "ff_png_get_nb_channels", "av_codec_get_chroma_intra_matrix", "ff_j_rev_dct1", "ff_mpeg4_decode_picture_header", "av_murmur3_alloc", "av_url_split", "ff_j_rev_dct2", "av_picture_pad", "ffurl_connect", "ff_rate_control_init", "ff_put_qpel8_mc13_old_c", "ff_put_h264_qpel8_mc32_neon", "av_memcpy_backptr", "avio_rl32", "ff_avg_pixels8_xy2_neon", "ff_vector_fmac_scalar_neon", "av_bitstream_filter_close", "avcodec_get_pix_fmt_loss", "avcodec_flush_buffers", "ff_rate_estimate_qscale", "av_hmac_calc", "ff_h264_idct8_add_10_c", "av_fifo_alloc", "sws_getCoefficients", "ff_h264_idct_add8_422_8_c", "rgb15to24", "avio_enum_protocols", "av_get_pix_fmt", "av_frame_get_color_range", "ff_hevc_save_states", "__register_frame_table", "ff_put_no_rnd_qpel16_mc12_old_c", "avcodec_string", "avio_read_to_bprint", "ff_read_packet", "ff_er_add_slice", "ff_h264_idct_add16intra_10_c", "avio_get_str", "ffio_read_size", "ff_put_h264_qpel16_mc00_neon", "rgb64tobgr48_nobswap", "avformat_find_stream_info", "ff_h264_reset_sei", "__fixunssfti", "av_audio_resample_init", "ff_put_h264_qpel16_mc31_neon", "ff_avg_h264_qpel16_mc31_neon", "av_pix_fmt_desc_next", "av_sha_final", "ff_biweight_h264_pixels_8_neon", "av_stream_get_side_data", "av_samples_copy", "avio_wl16", "avio_r8", "av_mul_q", "av_index_search_timestamp", "avformat_get_mov_audio_tags", "av_find_input_format", "ff_avg_h264_qpel16_mc33_neon", "ff_mp4_parse_es_descr", "av_match_ext", "av_opt_find", "ff_h264_idct_add_10_c", "av_hash_final_hex", "ff_alloc_picture", "av_dict_count", "ff_butterflies_float_neon", "ff_print_debug_info", "ff_hevc_merge_idx_decode", "ff_h264_idct8_dc_add_10_c", "ff_hevc_intra_chroma_pred_mode_decode", "ff_pred8x8_plane_neon", "av_packet_alloc", "av_frame_get_channel_layout", "ff_slice_thread_free", "ff_pred16x16_vert_neon", "ff_fdct_ifast", "av_opt_set_video_rate", "ff_h264_idct8_add4_8_c", "av_gcd", "avio_handshake", "av_packet_clone", "ff_h264_chroma_dc_dequant_idct_8_c", "ff_mpv_common_init", "av_codec_is_encoder", "ff_mpeg12_common_init", "__cmpti2", "ff_h264_slice_context_init", "ff_hevc_mvp_lx_flag_decode", "ffurl_read", "ff_h264_idct8_add_8_c", "av_aes_ctr_init", "__fixtfdi", "av_write_frame", "av_packet_get_side_data", "ff_copy_whitelists", "ff_hevc_sao_eo_class_decode", "av_codec_get_tag", "ff_avc_parse_nal_units_buf", "_Unwind_DeleteException", "av_codec_get_codec_properties", "av_opt_get_channel_layout", "avcodec_find_best_pix_fmt_of_list", "av_bitstream_filter_next", "av_frame_remove_side_data", "ff_avg_pixels16_xy2_neon", "ff_h264_decode_extradata", "ff_avg_qpel16_mc31_old_c", "__udivmodti4", "ff_h264_decode_ref_pic_list_reordering", "av_get_channel_name", "ff_simple_idct_add_10", "ff_pred8x8_top_dc_neon", "ff_put_h264_qpel16_mc22_neon", "ff_put_h264_chroma_mc8_neon", "ff_hevc_cu_chroma_qp_offset_idx", "avcodec_encode_audio2", "__fixtfsi", "av_image_fill_pointers", "sws_subVec", "ff_h263_decode_mba", "av_aes_ctr_set_random_iv", "ff_hevc_slice_rpl", "avcodec_get_type", "ffurl_alloc", "av_apply_bitstream_filters", "ff_avg_h264_qpel16_mc01_neon", "ff_h264_idct_add16intra_14_c", "av_audio_fifo_alloc", "av_tempfile", "av_dynarray_add_nofree", "_Unwind_RaiseException", "av_stristart", "av_opt_set_dict", "ff_faanidct_add", "__enable_execute_stack", "av_append_path_component", "av_frame_set_pkt_size", "av_oformat_next", "sws_alloc_set_opts", "ffurl_close", "avcodec_get_frame_class", "avcodec_is_open", "av_strlcatf", "av_get_cpu_flags", "_Unwind_GetIP", "avcodec_open2", "av_aes_crypt", "av_frame_set_pkt_duration", "av_frame_copy", "av_copy_packet", "avcodec_get_chroma_sub_sample", "av_fifo_grow", "av_get_bytes_per_sample", "av_xtea_le_crypt", "av_audio_fifo_write", "av_base64_encode", "ff_parse_creation_time_metadata", "ff_thread_video_encode_frame", "ff_simple_idct_add_12", "av_div_i", "avcodec_default_get_format", "av_packet_from_data", "avio_open2", "ff_h264_idct_dc_add_8_c", "av_stream_get_parser", "ff_avg_pixels16_x2_no_rnd_neon", "av_audio_fifo_space", "sws_getGaussianVec", "av_opt_set_pixel_fmt", "avpriv_float_dsp_alloc", "ff_h264_luma_dc_dequant_idct_12_c", "av_opt_set_dict2", "av_get_sample_fmt_name", "av_color_space_name", "av_match_name", "ff_reduce_index", "av_stream_set_recommended_encoder_configuration", "av_thread_message_queue_set_err_recv", "ff_put_h264_qpel16_mc11_neon", "ffurl_write", "av_format_set_data_codec", "__lshrti3", "avcodec_default_execute", "ff_put_pixels16_y2_neon", "av_image_copy", "ff_avg_h264_qpel8_mc03_neon", "av_log2_16bit", "avpicture_fill", "av_small_strptime", "av_codec_get_seek_preroll", "av_sub_q", "av_stristr", "avformat_license", "avcodec_descriptor_get", "ffurl_register_protocol", "ff_h264_idct8_dc_add_14_c", "ff_gmc_c", "__clrsbdi2", "ff_mpa_synth_filter_float", "ff_lock_avcodec", "__deregister_frame", "ff_choose_timebase", "ff_mov_close_hinting", "av_rescale_rnd", "av_codec_get_pkt_timebase", "av_bitstream_filter_init", "ff_id3v1_read", "ff_replaygain_export", "ff_h263_loop_filter", "ff_get_format", "av_opt_set_int", "av_packet_shrink_side_data", "ff_mov_get_lpcm_codec_id", "ff_thread_ref_frame", "avpriv_mpeg4audio_get_config", "ff_hevc_split_coding_unit_flag_decode", "ff_h263_show_pict_info", "ff_simple_idct_10", "av_sha_alloc", "ff_hevc_flush_dpb", "av_format_set_open_cb", "av_frame_is_writable", "avio_pause", "ff_simple_idct_put_10", "ff_id3v2_parse_apic", "av_mdct_init", "av_rescale_q", "ff_h264_idct_dc_add_10_c", "avio_open_dir", "ff_mdct_calc_c_fixed", "av_reallocp", "ff_interleave_packet_per_dts", "av_strerror", "av_hex_dump", "av_vorbis_parse_frame_flags", "ff_thread_decode_frame", "ff_h264qpel_init_aarch64", "ff_imdct36_blocks_float", "ff_init_vscale", "av_free_packet", "av_add_q", "av_channel_layout_extract_channel", "av_opt_set_defaults2", "ffio_rewind_with_probe_data", "avformat_find_audio_stream_info", "av_opt_next", "ff_h264_get_profile", "ff_mpeg4_merge_partitions", "ff_avc_parse_nal_units", "ff_id3v2_match", "ff_convert_matrix", "av_get_profile_name", "ff_get_mb_score", "ffio_fdopen", "_Unwind_Find_FDE", "avio_read", "rgb16to24", "avcodec_find_best_pix_fmt_of_2", "ff_h264_idct_add16intra_neon", "ff_simple_idct_put_8", "av_dirname", "ff_hevc_cu_qp_delta_sign_flag", "av_packet_unref", "rgb12tobgr12", "ff_mov_init_hinting", "ff_replaygain_export_raw", "__ashrti3", "ff_imdct_half_c_fixed", "av_interleaved_write_frame", "avpriv_copy_bits", "ff_mpv_motion", "av_tree_node_alloc", "ff_put_no_rnd_qpel8_mc13_old_c", "ff_avg_pixels8_neon", "av_murmur3_update", "av_packet_unpack_dictionary", "av_murmur3_init_seeded", "sws_cloneVec", "ff_init_desc_hscale", "ff_set_dimensions", "ff_blockdsp_init", "ff_avg_qpel16_mc13_old_c", "ff_avg_h264_qpel16_mc03_neon", "ff_thread_get_format", "_Unwind_Resume", "ff_mpeg_er_init", "av_opt_set_dict_val", "ff_put_h264_qpel8_mc21_neon", "avio_wl32", "avcodec_find_encoder", "ff_jpeg_fdct_islow_10", "ff_avg_qpel8_mc31_old_c", "av_vorbis_parse_free", "avformat_get_riff_audio_tags", "av_copy_packet_side_data", "ff_hevc_prev_intra_luma_pred_flag_decode", "av_vlog", "ff_biweight_h264_pixels_16_neon", "ff_mdct_end_fixed_32", "av_format_get_metadata_header_padding", "av_opt_eval_int64", "av_get_time_base_q", "ff_thread_init", "avcodec_get_context_defaults3", "ff_h264_idct_add16_9_c", "ff_mpa_synth_init_fixed", "av_timecode_init", "ff_mpeg_er_frame_start", "ff_put_h264_qpel16_mc21_neon", "avformat_query_codec", "ff_rl_free", "shuffle_bytes_3210", "avformat_seek_file", "ff_write_chained", "av_blowfish_alloc", "ff_h264_idct_add8_422_10_c", "av_get_sample_fmt", "ff_put_h264_qpel16_mc23_neon", "avcodec_close", "av_codec_set_lowres", "av_stream_new_side_data", "ff_avg_h264_qpel16_mc22_neon", "ff_mdct_init_fixed_32", "av_get_padded_bits_per_pixel", "sws_freeVec", "ff_free_picture_tables", "ff_h264_idct8_dc_add_9_c", "ff_h264_luma_dc_dequant_idct_9_c", "avcodec_alloc_context3", "av_frame_get_pkt_duration", "ff_h263_pred_dc", "av_audio_fifo_reset", "av_format_set_control_message_cb", "ff_mov_read_stsd_entries", "av_cast5_crypt2", "avio_wb64", "avcodec_configuration", "__multi3", "ff_scalarproduct_float_neon", "__negvsi2", "ff_put_pixels8_neon", "ff_avg_pixels16_y2_no_rnd_neon", "avpriv_report_missing_feature", "ff_h264_decode_slice_header", "av_fifo_generic_read", "__bswapdi2", "ff_h264_pred_direct_motion", "av_opt_query_ranges", "av_codec_next", "av_samples_alloc_array_and_samples", "ff_fft_end_fixed", "av_fft_end", "ff_h263_encode_init", "__fixunstfdi", "ff_dct_end", "__register_frame_info_bases", "av_frame_get_channels", "av_frame_get_colorspace", "ffio_free_dyn_buf", "av_fopen_utf8", "ff_thread_finish_setup", "ff_sdp_write_media", "ff_index_search_timestamp", "av_stream_get_end_pts", "sws_getIdentityVec", "av_aes_ctr_crypt", "ff_h264_luma_dc_dequant_idct_14_c", "__ctzdi2", "av_opt_child_next", "av_fft_calc", "ff_h264chroma_init_aarch64", "__addvdi3", "av_codec_set_chroma_intra_matrix", "ff_riff_write_info", "ff_compute_frame_duration", "av_read_frame", "av_opt_get_sample_fmt", "ff_rdft_init", "av_buffer_unref", "ff_h264_idct_add16_8_c", "ff_avg_h264_qpel16_mc02_neon", "av_dup_packet", "ff_mov_write_chan", "ff_hevc_hls_mvd_coding", "ff_avg_pixels16_x2_neon", "av_timegm", "avio_write", "av_format_get_opaque", "ff_fft_calc_neon", "ff_mov_lang_to_iso639", "av_format_set_metadata_header_padding", "__subvsi3", "ff_avg_h264_qpel16_mc21_neon", "av_hash_final_b64", "ff_mpeg4_set_direct_mv", "ff_pred16x16_hor_neon", "av_default_item_name", "av_frame_free", "audio_resample_close", "sws_init_context", "av_tea_alloc", "ff_get_2pass_fcode", "av_adler32_update", "__eqtf2", "ff_avg_h264_qpel8_mc00_neon", "ff_hevc_pred_init", "av_cast5_crypt", "ff_get_guid", "ff_h264_idct_add8_8_c", "ff_put_no_rnd_qpel16_mc13_old_c", "av_opt_set_double", "av_get_channel_layout", "av_image_copy_plane", "av_dct_init", "av_parser_init", "ff_h264_init_cabac_states", "ff_put_pixels16_x2_neon", "av_qsv_alloc_context", "ff_prefetch_aarch64", "av_display_matrix_flip", "avformat_version", "ff_hevc_annexb2mp4_buf", "av_timecode_check_frame_rate", "av_basename", "ff_init_qscale_tab", "ff_mpeg4_encode_picture_header", "avcodec_get_name", "ff_avg_h264_qpel8_mc32_neon", "ff_put_pixels16x16_c", "ff_put_h264_qpel8_mc13_neon", "av_parse_cpu_flags", "ff_sws_init_input_funcs", "ff_h264_decode_init_vlc", "av_strtok", "ff_put_h264_qpel16_mc30_neon", "ff_hevc_luma_mv_merge_mode", "ff_weight_h264_pixels_8_neon", "av_frame_get_side_data", "av_grow_packet", "ff_riff_write_info_tag", "ff_avg_h264_qpel16_mc23_neon", "av_opt_set_channel_layout", "ff_faanidct", "ff_imdct_calc_neon", "ffurl_accept", "ff_put_pixels8_l2_8", "av_frame_set_best_effort_timestamp", "sws_scaleVec", "__extendsftf2", "__fixunstfsi", "rgb64tobgr48_bswap", "__udiv_w_sdiv", "avio_accept", "ff_mov_cenc_avc_write_nal_units", "__parityti2", "ff_hevc_cu_qp_delta_abs", "av_mallocz", "avio_printf", "ff_put_no_rnd_qpel8_mc33_old_c", "ff_hevc_decode_nal_vps", "ff_h264_set_erpic", "ff_avg_h264_qpel8_mc20_neon", "ff_mpeg4_stuffing", "ff_vector_fmul_neon", "ff_pred8x8_128_dc_neon", "ff_isom_write_hvcc", "ff_sws_init_output_funcs", "av_fifo_freep", "av_tea_crypt", "ff_simple_idct_put_12", "av_mod_i", "ff_estimate_b_frame_motion", "ff_h264_chroma422_dc_dequant_idct_14_c", "av_write_image_line", "av_d3d11va_alloc_context", "av_q2intfloat", "ff_pred8x8_l00_dc_neon", "ff_kbd_window_init", "av_strcasecmp", "avio_close", "av_audio_convert_free", "av_packet_merge_side_data", "ff_h264_init_dequant_tables", "ff_h264_idct8_add_12_c", "av_frame_alloc", "av_strdup", "av_pix_fmt_get_chroma_sub_sample", "avformat_configuration", "ff_videodsp_init_aarch64", "ff_pixblockdsp_init", "av_get_pix_fmt_string", "av_dct_calc", "__frame_state_for", "ff_ps_ctx_init", "av_opt_serialize", "ff_put_h264_qpel8_mc11_neon", "av_write_uncoded_frame_query", "ff_avg_pixels16_y2_neon", "av_thread_message_queue_set_err_send", "rgb16tobgr15", "__subvti3", "avpriv_scalarproduct_float_c", "ff_get_best_fcode", "ff_put_qpel8_mc32_old_c", "ff_hevc_frame_nb_refs", "av_realloc_array", "ff_flv_encode_picture_header", "ff_choose_chroma_location", "ff_h264_idct_add16intra_12_c", "ff_avg_qpel8_mc12_old_c", "ff_free_vlc", "av_frame_set_metadata", "__divtc3", "ff_generate_sliding_window_mmcos", "ff_h264_idct_add8_422_12_c", "ff_h264_idct_dc_add_14_c", "avio_rb16", "av_realloc_f", "avcodec_chroma_pos_to_enum", "ff_h264_decode_nal", "av_get_output_timestamp", "av_aes_init", "av_bprint_get_buffer", "ff_mov_cenc_init", "av_cast5_alloc", "sws_setColorspaceDetails", "ff_stream_add_bitstream_filter", "av_bprint_clear", "ff_h264_decode_mb_cabac", "av_get_codec_tag_string", "ff_pre_estimate_p_frame_motion", "ff_thread_await_progress", "ff_h264_free_tables", "ff_put_no_rnd_qpel16_mc32_old_c", "av_nearer_q", "ff_parse_close", "ff_get_cpu_flags_aarch64", "av_twofish_init", "ff_get_wav_header", "ff_find_unused_picture", "ff_rtp_get_codec_info", "ff_mdct_calc_c_fixed_32", "av_compare_mod", "ff_hevc_ref_idx_lx_decode", "avcodec_get_edge_width", "__clear_cache", "av_vorbis_parse_frame", "av_calloc", "av_dict_get", "ff_faandct248", "ff_avg_h264_qpel16_mc30_neon", "_Unwind_GetTextRelBase", "ff_hevc_cbf_luma_decode", "av_packet_side_data_name", "ff_jpeg_fdct_islow_8", "av_samples_alloc", "av_hash_freep", "ff_reget_buffer", "ff_fft_end_fixed_32", "ff_isom_write_avcc", "__modti3", "av_hash_init", "av_format_set_audio_codec", "ff_put_qpel16_mc13_old_c", "ff_h264_decode_seq_parameter_set", "__fixunsdfdi", "av_murmur3_final", "ff_mov_add_hinted_packet", "avcodec_license", "av_get_bits_per_pixel", "av_dict_set_int", "av_get_channel_layout_channel_index", "av_buffer_allocz", "__umodti3", "ff_faanidct_put", "av_utf8_decode", "ff_hevc_clear_refs", "ff_h263_resync", "av_cpu_count", "ff_h264_idct_add16_14_c", "ffurl_closep", "rgb16tobgr32", "ff_avg_h264_qpel8_mc22_neon", "ff_put_h264_qpel8_mc01_neon", "ff_get_v_length", "ffio_read_varlen", "av_blowfish_init", "av_opt_eval_int", "ff_h264_idct_add16_10_c", "av_cmp_i", "ff_free_filters", "avio_wb32", "av_match_list", "av_dv_frame_profile", "sws_normalizeVec", "av_murmur3_init", "av_register_hwaccel", "av_opt_eval_flags", "av_hwaccel_next", "ff_hevc_end_of_slice_flag_decode", "av_format_get_open_cb", "ff_init_gamma_convert", "av_find_best_pix_fmt_of_2", "av_bprint_append_data", "ff_hevc_pcm_flag_decode", "ff_xvid_idct", "ff_avg_qpel16_mc11_old_c", "ff_h264_filter_mb", "av_program_add_stream_index", "ff_frame_thread_encoder_init", "ff_hevc_part_mode_decode", "av_opt_find2", "av_pix_fmt_desc_get_id", "av_rdft_calc", "av_parser_next", "ff_hevc_mpm_idx_decode", "ff_dct32_fixed", "ff_aac_sbr_ctx_close", "ff_h263_decode_init", "ff_h264_idct_add16intra_8_c", "av_fmt_ctx_get_duration_estimation_method", "av_default_get_category", "avio_wl64", "av_des_alloc", "ff_simple_idct_add_8", "ff_mp4_read_descr", "av_des_mac", "ff_h264_idct_add_neon", "ff_imdct_half_c", "avcodec_dct_get_class", "ff_h264_direct_dist_scale_factor", "av_packet_copy_props", "ff_hevc_rem_intra_luma_pred_mode_decode", "av_reallocp_array", "swscale_version", "ff_set_qscale", "__getf2", "__unordtf2", "ff_mpeg4_frame_end", "ff_find_stream_index", "ff_mpadsp_init", "ff_alloc_packet", "av_crc_get_table", "ff_hevc_get_ref_list", "ff_hevc_cbf_cb_cr_decode", "sws_addVec", "ff_add_index_entry", "avpriv_lock_avformat", "av_buffer_get_opaque", "ff_h264_execute_decode_slices", "ff_avg_pixels16x16_c", "av_buffer_alloc", "ff_put_wav_header", "ff_h264_flush_change", "ff_avg_h264_qpel8_mc30_neon", "ff_h263_pred_acdc", "avcodec_fill_audio_frame", "av_sha512_init", "av_codec_set_seek_preroll", "av_fft_permute", "ff_seek_frame_binary", "av_cpb_properties_alloc", "ff_put_no_rnd_qpel16_mc33_old_c", "ff_imdct_calc_c_fixed", "avformat_get_riff_video_tags", "avpriv_init_lls", "ffio_open_whitelist", "__clzti2", "avcodec_find_encoder_by_name", "__register_frame_info_table", "av_log_ask_for_sample", "ff_hex_to_data", "ff_h264_chroma_dc_dequant_idct_10_c", "av_i2int", "ff_aac_ac3_parse", "ff_parse_specific_params", "av_opt_set_from_string", "ff_put_h264_qpel8_mc31_neon", "av_get_pix_fmt_name", "ff_h264_idct8_add4_10_c", "av_image_check_sar", "ff_ps_read_data", "__lttf2", "ff_update_picture_tables", "avpicture_alloc", "avpriv_find_start_code", "ff_kbd_window_init_fixed", "ff_avg_qpel8_mc32_old_c", "ff_put_pixels16_neon", "av_opt_get_q", "av_camellia_alloc", "av_fast_padded_malloc", "av_pix_fmt_count_planes", "ff_put_no_rnd_qpel8_mc11_old_c", "ff_h264chroma_init", "av_frame_get_buffer", "avpriv_align_put_bits", "av_frame_ref", "ff_mov_iso639_to_lang", "ff_put_h264_qpel8_mc22_neon", "av_opt_set_q", "ffio_ensure_seekback", "ff_h264_idct8_dc_add_neon", "av_opt_get_double", "ff_mpv_report_decode_progress", "ff_slice_thread_init", "av_sha_update", "url_feof", "av_d2q", "ff_h264_decode_init", "av_parser_change", "ff_simple_idct44_add", "__ucmpti2", "ff_mpv_common_init_neon", "ff_aac_sbr_ctx_init", "ff_mpegvideoencdsp_init", "ffurl_open", "ff_hevc_dsp_init", "ff_h263_encode_gob_header", "av_reduce", "ff_mov_write_packet", "ff_imdct15_uninit", "ff_hevc_pred_mode_decode", "av_tree_insert", "av_strstart", "swscale_license", "ff_hevc_sao_merge_flag_decode", "av_div_q", "ff_thread_flush", "ff_h264_alloc_tables", "ff_init_mpadsp_tabs_float", "av_bprint_strftime", "av_frame_set_pkt_pos", "ff_sine_window_init", "ff_raw_read_partial_packet", "ff_avg_h264_qpel16_mc12_neon", "av_read_play", "ff_init_scantable_permutation", "av_probe_input_format", "ff_read_frame_flush", "av_stream_set_r_frame_rate", "sws_getColorspaceDetails", "avcodec_get_subtitle_rect_class", "ff_generate_avci_extradata", "av_frame_get_pkt_pos", "ff_get_codec_guid", "avio_read_dir", "av_asprintf", "av_timecode_make_smpte_tc_string", "ff_emulated_edge_mc_8", "av_bprint_channel_layout", "ff_put_no_rnd_qpel16_mc31_old_c", "av_frame_get_qp_table", "ff_h264_get_slice_type", "ff_put_h264_qpel16_mc03_neon", "av_codec_is_decoder", "ff_url_join", "ff_h264_idct_add8_14_c", "av_timecode_get_smpte_from_framenum", "ff_make_absolute_url", "av_image_fill_arrays", "ff_h264_idct8_add4_14_c", "avpriv_frame_get_metadatap", "av_image_fill_linesizes", "av_thread_message_queue_send", "ff_fdct248_islow_10", "ffio_open_null_buf", "rgb48tobgr48_nobswap", "ff_avg_qpel16_mc33_old_c", "ff_mpeg4_get_video_packet_prefix_length", "ff_clean_mpeg4_qscales", "ff_mpa_synth_filter_fixed", "av_image_fill_max_pixsteps", "av_hmac_final", "av_md5_final", "rgb32to24", "ff_hevc_compute_poc", "ff_mpv_common_frame_size_change", "ff_yuv2rgb_c_init_tables", "av_tree_find", "avio_rl24", "av_fifo_size", "ff_mpeg1_clean_buffers", "av_dict_set", "ff_h264_idct8_add_neon", "ff_put_pixels8_x2_neon", "avformat_free_context", "av_frame_get_decode_error_flags", "__aarch64_sync_cache_range", "__bswapsi2", "ff_hevc_res_scale_sign_flag", "avio_wb24", "av_strnstr", "ff_hevc_decode_nal_sps", "av_get_token", "av_dict_get_string", "ff_h264_idct_dc_add_neon", "avpriv_mpa_decode_header2", "ff_write_quant_matrix", "ff_mpv_encode_picture", "av_ripemd_update", "av_dct_end", "sws_isSupportedOutput", "avio_rb32", "av_mastering_display_metadata_alloc", "av_int2i", "ff_h264_h_loop_filter_chroma_neon", "ff_h263_update_motion_val", "rgb15tobgr16", "av_format_inject_global_side_data", "av_bprint_escape", "ff_put_no_rnd_qpel8_mc32_old_c", "avio_wb16", "ff_id3v2_tag_len", "av_packet_add_side_data", "ffurl_seek", "av_frame_get_metadata", "av_image_copy_to_buffer", "av_get_known_color_name", "av_get_picture_type_char", "__clrsbti2", "av_sdp_create", "ff_intel_h263_decode_picture_header", "ff_init_cabac_decoder", "ff_h264_decode_picture_parameter_set", "av_xtea_le_init", "ff_hevc_annexb2mp4", "ff_avg_h264_qpel8_mc02_neon", "av_buffer_default_free", "av_interleaved_write_uncoded_frame", "ff_put_h264_qpel8_mc10_neon", "avcodec_register_all", "__ffsdi2", "avformat_alloc_context", "ff_put_qpel8_mc31_old_c", "ff_h264_check_intra_pred_mode", "ff_h264_idct_add8_12_c", "ff_avg_pixels8_y2_neon", "ffio_limit", "sws_convertPalette8ToPacked24", "avpriv_copy_pce_data", "avcodec_set_dimensions", "__gttf2", "av_aes_ctr_alloc", "ff_put_h264_qpel16_mc33_neon", "ff_check_alignment", "__fixsfti", "av_tree_enumerate", "ff_mov_get_channel_layout", "__ashlti3", "av_packet_split_side_data", "ff_put_no_rnd_qpel8_mc12_old_c", "avio_flush", "avpriv_strtod", "av_xtea_alloc", "rgb12to15", "__fixdfti", "av_demuxer_open", "ff_h263_aspect_to_info", "ff_avg_h264_qpel16_mc13_neon", "ff_mpa_l2_select_table", "ff_get_unscaled_swscale", "av_log_set_level", "ff_init_desc_fmt_convert", "sws_scale", "ff_dv_frame_profile", "sws_allocVec", "avpriv_solve_lls", "ff_put_h264_chroma_mc4_neon", "ff_emulated_edge_mc_16", "ff_hevc_sao_offset_sign_decode", "av_get_planar_sample_fmt", "__divsc3", "ff_hevc_set_neighbour_available", "ff_h264_idct8_add4_12_c", "ff_avc_mp4_find_startcode", "av_imdct_half", "ff_init_vlc_sparse", "av_audio_convert", "ff_hevc_bump_frame", "av_aes_ctr_increment_iv", "ff_rdft_end", "ff_vector_fmul_add_neon", "ff_aac_sbr_init", "av_opt_get_pixel_fmt", "ff_mpeg4videodec_static_init", "ff_fetch_timestamp", "ff_hevc_decode_short_term_rps", "ff_rl_init_vlc", "ff_mdct_calcw_c", "ff_avg_h264_chroma_mc4_neon", "ffio_open_dyn_packet_buf", "avio_find_protocol_name", "av_opt_set_defaults", "ff_imdct15_init_aarch64", "ff_put_h264_chroma_mc2_neon", "ff_rfps_add_frame", "av_codec_get_codec_descriptor", "shuffle_bytes_1230", "__emutls_get_address", "av_ripemd_alloc", "av_dump_format", "ff_h264_idct_add_14_c", "ff_put_h264_qpel16_mc13_neon", "av_opt_get_image_size", "ff_imdct_half_neon", "ff_vector_dmul_scalar_neon", "avio_seek", "av_get_packed_sample_fmt", "av_get_default_channel_layout", "av_format_set_opaque", "ff_hyscale_fast_c", "__extenddftf2", "__sfp_handle_exceptions", "ff_mpv_frame_end", "av_picture_crop", "ff_mpeg4_init_partitions", "av_hash_alloc", "ff_avg_h264_qpel8_mc11_neon", "ff_pred_weight_table", "ff_h264_idct8_add4_neon", "ff_h264_idct_add_9_c", "av_pixelutils_get_sad_fn", "av_packet_free_side_data", "ffio_init_context", "ff_metadata_conv_ctx", "av_bprint_finalize", "av_fifo_generic_peek_at", "av_packet_move_ref", "av_aes_alloc", "__gcc_bcmp", "av_get_random_seed", "ff_mpeg4_find_frame_end", "__fixunsdfti", "ff_h263_decode_motion", "__addtf3", "av_mastering_display_metadata_create_side_data", "__fixunstfti", "av_stereo3d_alloc", "ffurl_open_whitelist", "ff_h263_encode_picture_header", "ff_avg_qpel8_mc13_old_c", "ff_get_qtpalette", "avcodec_pix_fmt_to_codec_tag", "av_append_packet", "ff_put_qpel16_mc33_old_c", "av_fifo_reset", "av_frame_clone", "avio_rb64", "ff_simple_idct84_add", "ff_raw_audio_read_header", "av_frame_make_writable", "avio_close_dir", "__divtf3", "ff_pred16x16_top_dc_neon", "ff_h264_ref_picture", "avformat_write_header", "shuffle_bytes_3012", "ff_mov_cenc_avc_parse_nal_units", "av_fast_mallocz", "av_tea_init", "ff_h264_luma_dc_dequant_idct_8_c", "av_vbprintf", "ff_mpeg4_encode_video_packet_header", "ff_mpeg4_init_direct_mv", "ff_put_qpel8_mc12_old_c", "av_probe_input_format2", "ff_avg_qpel8_mc11_old_c", "ff_hevc_parse_sps", "avcodec_descriptor_get_by_name", "av_camellia_init", "ff_rgb24toyv12_c", "__negti2", "av_opt_set_sample_fmt", "ff_hcscale_fast_c", "ff_h264_unref_picture", "__netf2", "ff_alloc_extradata", "av_opt_show2", "ff_put_pixels8_y2_no_rnd_neon", "av_realloc", "ff_h264_luma_dc_dequant_idct_10_c", "av_xiphlacing", "ff_avg_h264_qpel8_mc33_neon", "ff_ape_write_tag", "ff_biweight_h264_pixels_4_neon", "ff_h263_decode_init_vlc", "ff_h264_idct_add8_10_c", "ff_yuv2rgb_get_func_ptr", "avio_alloc_context", "av_des_crypt", "ff_epzs_motion_search", "av_guess_format", "av_gettime_relative_is_monotonic", "ff_h264_execute_ref_pic_marking", "av_sub_i", "av_samples_set_silence", "rgb64to48_bswap", "ff_h264_chroma422_dc_dequant_idct_8_c", "ff_mpeg4_decode_partitions", "av_find_nearest_q_idx", "av_audio_fifo_peek", "ff_init_ff_cos_tabs_fixed_32", "ff_fft_init_fixed_32", "av_compare_ts", "ff_mpeg4video_split", "ff_avg_h264_chroma_mc2_neon", "ff_h264_decode_ref_pic_marking", "avcodec_descriptor_next", "ff_flv_decode_picture_header", "ff_pred8x8_hor_neon", "ff_h264_chroma_dc_dequant_idct_9_c", "av_fifo_drain", "ff_h264_idct_add_8_c", "__trunctfsf2", "avpriv_new_chapter", "av_crc_init", "ff_init_filters", "ff_reset_entries", "sws_convVec", "avio_put_str16le", "ff_put_h264_qpel8_mc00_neon", "ff_set_cmp", "ff_clean_intra_table_entries", "ff_put_pixels16_x2_no_rnd_neon", "avformat_get_class", "ff_h264_idct_add8_422_14_c", "ff_avg_h264_qpel8_mc13_neon", "av_frame_move_ref", "ff_pred16x16_plane_neon", "av_frame_get_sample_rate", "av_xtea_init", "av_register_input_format", "ff_me_cmp_init", "ff_dct_quantize_c", "ff_thread_await_progress2", "ff_avg_h264_qpel16_mc20_neon", "ff_put_h264_qpel8_mc03_neon", "av_aes_ctr_set_iv", "ff_init_desc_cfmt_convert", "av_dynarray2_add", "av_audio_convert_alloc", "av_int_list_length_for_size", "ff_hevc_decode_nal_pps", "av_fast_malloc", "av_init_packet", "av_log_default_callback", "ff_thread_get_buffer", "ff_update_cur_dts", "av_write_uncoded_frame", "av_frame_get_plane_buffer", "ff_init_ff_cos_tabs_fixed", "ff_hpeldsp_init_aarch64", "av_log", "avutil_configuration", "ff_float_dsp_init_aarch64", "av_packet_new_side_data", "av_sha512_final", "ffio_get_checksum", "av_frame_set_colorspace", "av_samples_fill_arrays", "ff_weight_h264_pixels_4_neon", "av_parser_parse2", "ff_sine_window_init_fixed", "av_strlcpy", "ff_er_frame_end", "av_hash_get_size", "sws_freeFilter", "ff_write_pass1_stats", "av_strlcat", "av_opt_set_bin", "av_frame_set_decode_error_flags", "av_fifo_alloc_array", "av_expr_parse_and_eval", "ff_h264_decode_mb_cavlc", "ff_rtp_codec_id", "ff_free_stream", "av_hash_final_bin", "av_iformat_next", "av_bprintf", "ff_h264_chroma422_dc_dequant_idct_10_c", "avpriv_toupper4", "sws_isSupportedEndiannessConversion", "__divti3", "av_fifo_space", "av_format_get_data_codec", "av_memdup", "rgb16tobgr16", "av_rescale_q_rnd", "ff_avg_qpel8_mc33_old_c", "av_get_standard_channel_layout", "avpriv_bprint_to_extradata", "ff_vector_fmul_window_neon", "ff_avc_find_startcode", "ff_put_guid", "ff_ntp_time", "sws_getDefaultFilter", "__addvsi3", "avio_put_str", "ff_get_line", "ff_rate_control_uninit", "ff_mpeg_draw_horiz_band", "av_fifo_free", "ff_put_qpel16_mc31_old_c", "av_picture_copy", "av_read_pause", "av_display_rotation_set", "ff_mpadsp_apply_window_fixed", "avcodec_version", "av_format_set_video_codec", "__paritydi2", "ff_check_interrupt", "ff_init_cabac_encoder", "avpriv_io_delete", "avsubtitle_free", "__negvti2", "av_expr_eval", "av_audio_fifo_size", "av_find_info_tag", "sws_printVec2", "av_get_sample_fmt_string", "ff_hevc_hls_residual_coding", "ff_h263_encode_mb", "__subvdi3", "av_sha512_alloc", "ff_put_h264_qpel16_mc32_neon", "ff_hevc_sao_band_position_decode", "avpicture_layout", "avpriv_h264_has_num_reorder_frames", "ff_h264_idct_add8_9_c", "_Unwind_SetIP", "av_audio_fifo_read", "ff_h264_h_loop_filter_luma_neon", "av_rc4_crypt", "avio_rb24", "ff_h264_hl_decode_mb", "av_image_get_linesize", "avpriv_open", "sws_isSupportedInput"], "allstrings": ["Error parsing ADTS frame header!\n", "Multiple RDBs per frame with CRC", "PCE-based channel configuration without PCE as first syntax element", "Assertion %s failed at %s:%d\n", "s->buf_ptr < s->buf_end", "libavcodec/put_bits.h", "aac_adtstoasc", "Audio specific config size is invalid\n", "Sample rate index in program config element does not match the sample rate index configured by the container.\n", "decode_pce: Input buffer exhausted before END element found\n", "Reserved bit set.\n", "AAC LD is only defined for ONLY_LONG_SEQUENCE but window sequence %d found.\n", "Invalid Predictor Reset Group.\n", "Prediction is not allowed in AAC-LC.\n", "LTP in ER AAC LD not yet implemented.\n", "Number of scalefactor bands in group (%d) exceeds limit (%d).\n", "invalid band type\n", "decode_band_types: Input buffer exhausted before END element found\n", "Number of bands (%d) exceeds limit (%d).\n", "If you heard an audible artifact, there may be a bug in the decoder. Clipped intensity stereo position (%d -> %d)", "If you heard an audible artifact, there may be a bug in the decoder. Clipped noise gain (%d -> %d)", "Scalefactor (%d) out of range.\n", "Pulse tool not allowed in eight short sequence.\n", "TNS filter order %d is greater than maximum %d.\n", "error in spectral data, ESC overflow\n", "Pulse data corrupt or invalid.\n", "960/120 MDCT window", "invalid default channel configuration (%d)\n", "Assuming an incorrectly encoded 7.1 channel layout instead of a spec-compliant 7.1(wide) layout, use -strict %d to decode according to the specification instead.\n", "Remapped id too large\n", "AAC data resilience (flags %x)", "epConfig %d", "SBR+", "invalid sampling rate index %d\n", "invalid low delay sampling rate index %d\n", "Low Delay SBR", "Input buffer exhausted before END element found\n", "Audio object type %s%d", "Dependent coupling is not supported together with LTP\n", "ChannelElement %d.%d missing \n", "ms_present = 3 is reserved.\n", "mono with CPE\n", "stereo with SCE\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to LFE[0]\n", "This stream seems to incorrectly report its last channel as %s[%d], mapping to SCE[1]\n", "More than one AAC RDB per ADTS frame", "Error decoding AAC frame header.\n", "Elem type:%x id:%x\n", "channel element %d.%d is not allocated\n", "skip_data_stream_element: Input buffer exhausted before END element found\n", "Not evaluating a further program_config_element as this construct is dubious at best.\n", "TYPE_FIL: Input buffer exhausted before END element found\n", "extension type: %d len:%d\n", "SBR was found before the first channel element.\n", "SBR signaled to be not-present but was found in the bitstream.\n", "Implicit SBR was found with a first occurrence after the first frame.\n", "FILL:%s\n", "libfaac %d.%d", "no frame data found\n", "Unknown ER channel configuration %d", "Multiple programs", "Multiple layers", "Non-byte-aligned audio-specific config", "audio config changed\n", "initializing latmctx\n", "no decoder config found\n", "incomplete frame\n", "frame length mismatch %d << %d\n", "ADTS header detected, probably as result of configuration misparsing\n", "aac_latm", "AAC LATM (Advanced Audio Coding LATM syntax)", "AAC (Advanced Audio Coding)", "AAC decoder", "dual_mono_mode", "Select the channel to decode for dual mono", "auto", "autoselection", "main", "Select Main/Left channel", "Select Sub/Right channel", "both", "Select both channels", "iid_mode %d is reserved.\n", "icc_mode %d is reserved.\n", "illegal iid\n", "illegal icc\n", "ps extension overflow %d\n", "iid_par invalid\n", "icc_par invalid\n", "Expected to read %d PS bits actually read %d.\n", "Invalid bitstream, crossover band index beyond array bounds: %d\n", "env_facs_q %d is invalid\n", "Unsupported sample rate for SBR: %d\n", "Invalid bs_stop_freq: %d\n", "libavcodec/aacsbr_template.c", "Invalid bitstream, too many QMF subbands: %d\n", "Invalid num_bands_0: %d\n", "Invalid vDk0[%d]: %d\n", "Invalid vDk1[%d]: %d\n", "Invalid bitstream, too many SBR envelopes in FIXFIX type SBR frame: %d\n", "Invalid bitstream, too many SBR envelopes in VARVAR type SBR frame: %d\n", "bs_pointer >= 0", "Invalid bitstream, bs_pointer points to a middle noise border outside the time borders table: %d\n", "Not strictly monotone time borders\n", "Stop frequency border too high: %d\n", "Start frequency border too high: %d\n", "Too many noise floor scale factors: %d\n", "patch construction failed\n", "Too many patches: %d\n", "noise_facs_q %d is invalid\n", "Invalid bitstream - cannot apply SBR to element type %d\n", "Parametric Stereo signaled to be not-present but was found in the bitstream.\n", "Reserved SBR extensions", "SBR Extension over read.\n", "Expected to read %d SBR bytes actually read %d.\n", "SBR reset failed. Switching SBR to pure upsampling mode.\n", "element type mismatch %d != %d\n", "No quantized data read for sbr_dequant.\n", "envelope scalefactor overflow in dequant\n", "temp1 <= 1E20", "libavcodec/aacsbr.c", "sbr->data[ch].bs_num_env > 0", "ERROR : no subband found for frequency %d\n", "kx != f_table{high,low}[0]. Derived frequency tables were not regenerated.\n", "!!&((())%%%\"\"", "))/113//+++((", "AVDCT", "DCT algorithm", "autoselect a good one", "fastint", "fast integer (experimental / for debugging)", "accurate integer", "experimental / for debugging", "altivec", "faan", "floating point AAN DCT (experimental / for debugging)", "idct", "select IDCT implementation", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "floating point AAN IDCT (experimental / for debugging)", "simpleauto", "bits_per_sample", "(unsigned)pkt->size <= 2147483647 - 32", "libavcodec/avpacket.c", "Palette", "New Extradata", "Param Change", "H263 MB Info", "Replay Gain", "Display Matrix", "Stereo 3D", "Audio Service Type", "Skip Samples", "JP Dual Mono", "Strings Metadata", "Subtitle Position", "Matroska BlockAdditional", "WebVTT ID", "WebVTT Settings", "Metadata Update", "size<=2147483647 && p - pkt->data >= size", "p-pkt->data == pkt->size", "incorrect codes\n", "Internal error, put_bits buffer too small\n", "length <= put_bits_left(pb)", "libavcodec/bitstream.c", "n <= s->buf_end - s->buf_ptr", "nb_codes + 1 <= (sizeof(localbuf) / sizeof((localbuf)[0]))", "symbols_size <= 2 || !symbols", "Too long VLC (%d) in init_vlc\n", "Invalid code in init_vlc\n", "needed %d had %d\n", "ret >= 0", "mpeg1video", "MPEG-1 video", "mpeg2video", "MPEG-2 video", "mpegvideo_xvmc", "MPEG-1/2 video XvMC (X-Video Motion Compensation)", "h261", "H.261", "h263", "H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "rv10", "RealVideo 1.0", "rv20", "RealVideo 2.0", "mjpeg", "Motion JPEG", "mjpegb", "Apple MJPEG-B", "mpeg4", "MPEG-4 part 2", "rawvideo", "raw video", "msmpeg4v1", "MPEG-4 part 2 Microsoft variant version 1", "msmpeg4v2", "MPEG-4 part 2 Microsoft variant version 2", "msmpeg4v3", "MPEG-4 part 2 Microsoft variant version 3", "wmv1", "Windows Media Video 7", "wmv2", "Windows Media Video 8", "h263p", "H.263+ / H.263-1998 / H.263 version 2", "h263i", "Intel H.263", "flv1", "FLV / Sorenson Spark / Sorenson H.263 (Flash Video)", "svq1", "Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1", "svq3", "Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3", "dvvideo", "DV (Digital Video)", "huffyuv", "HuffYUV", "cyuv", "Creative YUV (CYUV)", "h264", "indeo3", "Intel Indeo 3", "On2 VP3", "theora", "Theora", "asv1", "ASUS V1", "asv2", "ASUS V2", "ffv1", "FFmpeg video codec #1", "4X Movie", "vcr1", "ATI VCR1", "cljr", "Cirrus Logic AccuPak", "mdec", "Sony PlayStation MDEC (Motion DECoder)", "id RoQ video", "interplayvideo", "Interplay MVE video", "xan_wc3", "Wing Commander III / Xan", "xan_wc4", "Wing Commander IV / Xxan", "rpza", "QuickTime video (RPZA)", "cinepak", "Cinepak", "ws_vqa", "Westwood Studios VQA (Vector Quantized Animation) video", "msrle", "Microsoft RLE", "msvideo1", "Microsoft Video 1", "idcin", "id Quake II CIN video", "8bps", "QuickTime 8BPS video", "QuickTime Graphics (SMC)", "flic", "Autodesk Animator Flic video", "truemotion1", "Duck TrueMotion 1.0", "vmdvideo", "Sierra VMD video", "mszh", "LCL (LossLess Codec Library) MSZH", "zlib", "LCL (LossLess Codec Library) ZLIB", "qtrle", "QuickTime Animation (RLE) video", "snow", "Snow", "tscc", "TechSmith Screen Capture Codec", "ulti", "IBM UltiMotion", "qdraw", "Apple QuickDraw", "vixl", "Miro VideoXL", "qpeg", "Q-team QPEG", "ffvhuff", "Huffyuv FFmpeg variant", "rv30", "RealVideo 3.0", "rv40", "RealVideo 4.0", "SMPTE VC-1", "wmv3", "Windows Media Video 9", "loco", "LOCO", "wnv1", "Winnov WNV1", "aasc", "Autodesk RLE", "indeo2", "Intel Indeo 2", "fraps", "Fraps", "truemotion2", "Duck TrueMotion 2.0", "BMP (Windows and OS/2 bitmap)", "cscd", "CamStudio", "mmvideo", "American Laser Games MM Video", "zmbv", "Zip Motion Blocks Video", "AVS (Audio Video Standard) video", "smackvideo", "Smacker video", "NuppelVideo/RTJPEG", "kmvc", "Karl Morton's video codec", "flashsv", "Flash Screen Video v1", "cavs", "Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)", "jpeg2000", "JPEG 2000", "vmnc", "VMware Screen Codec / VMware Video", "On2 VP5", "On2 VP6", "vp6f", "On2 VP6 (Flash version)", "dsicinvideo", "Delphine Software International CIN video", "tiertexseqvideo", "Tiertex Limited SEQ video", "Feeble Files/ScummVM DXA", "dnxhd", "VC3/DNxHD", "Nintendo Gamecube THP video", "Interplay C93", "bethsoftvid", "Bethesda VID video", "vp6a", "On2 VP6 (Flash version, with alpha channel)", "AMV Video", "Beam Software VB", "indeo4", "Intel Indeo Video Interactive 4", "indeo5", "Intel Indeo Video Interactive 5", "mimic", "Mimic", "RL2 video", "escape124", "Escape 124", "daala", "Daala", "dirac", "Dirac", "Brute Force & Ignorance", "Electronic Arts CMV video", "motionpixels", "Motion Pixels video", "Electronic Arts TGV video", "Electronic Arts TGQ video", "Electronic Arts TQI video", "aura", "Auravision AURA", "aura2", "Auravision Aura 2", "v210x", "Uncompressed 4:2:2 10-bit", "8088flex TMV", "v210", "Electronic Arts Madcow Video", "frwu", "Forward Uncompressed", "flashsv2", "Flash Screen Video v2", "cdgraphics", "CD Graphics video", "r210", "Uncompressed RGB 10-bit", "Deluxe Paint Animation", "binkvideo", "Bink video", "iff_ilbm", "IFF ILBM", "kgv1", "Kega Game Video", "Psygnosis YOP Video", "On2 VP8", "Google VP9", "pictor", "Pictor/PC Paint", "a64_multi", "Multicolor charset for Commodore 64", "a64_multi5", "Multicolor charset for Commodore 64, extended with 5th color (colram)", "r10k", "AJA Kona 10-bit RGB Codec", "mvc1", "Silicon Graphics Motion Video Compressor 1", "mvc2", "Silicon Graphics Motion Video Compressor 2", "mxpeg", "Mobotix MxPEG video", "lagarith", "Lagarith lossless", "prores", "Apple ProRes (iCodec Pro)", "Bitmap Brothers JV video", "Chronomaster DFA", "utvideo", "Ut Video", "bmv_video", "Discworld II BMV video", "vble", "VBLE Lossless Codec", "dxtory", "Dxtory", "v410", "Uncompressed 4:4:4 10-bit", "cdxl", "Commodore CDXL video", "zerocodec", "ZeroCodec Lossless Video", "mss1", "MS Screen 1", "msa1", "MS ATC Screen", "tscc2", "TechSmith Screen Codec 2", "mts2", "MS Expression Encoder Screen", "cllc", "Canopus Lossless Codec", "mss2", "MS Windows Media Video V9 Screen", "Apple Intermediate Codec", "y41p", "Uncompressed YUV 4:1:1 12-bit", "escape130", "Escape 130", "avrp", "Avid 1:1 10-bit RGB Packer", "012v", "avui", "Avid Meridien Uncompressed", "ayuv", "Uncompressed packed MS 4:4:4:4", "targa_y216", "Pinnacle TARGA CineWave YUV16", "v308", "Uncompressed packed 4:4:4", "v408", "Uncompressed packed QT 4:4:4:4", "yuv4", "Uncompressed packed 4:2:0", "avrn", "Avid AVI Codec", "cpia", "CPiA video format", "xface", "X-face image", "smvjpeg", "Sigmatel Motion Video", "Go2Meeting", "hnm4video", "HNM 4 video", "hevc", "H.265 / HEVC (High Efficiency Video Coding)", "Mirillis FIC", "paf_video", "Amazing Studio Packed Animation File Video", "On2 VP7", "sanm", "LucasArts SANM/SMUSH video", "sgirle", "SGI RLE 8-bit", "Canopus HQX", "hq_hqa", "Canopus HQ/HQA", "Vidvox Hap decoder", "Resolume DXV", "screenpresso", "Screenpresso", "wrapped_avframe", "AVFrame to AVPacket passthrough", "rscc", "innoHeim/Rsupport Screen Capture Codec", "alias_pix", "Alias/Wavefront PIX image", "ansi", "ASCII/ANSI art", "brender_pix", "BRender PIX image", "DirectDraw Surface image decoder", "DPX (Digital Picture Exchange) image", "OpenEXR image", "GIF (Graphics Interchange Format)", "jpegls", "JPEG-LS", "ljpeg", "Lossless JPEG", "PAM (Portable AnyMap) image", "PBM (Portable BitMap) image", "PC Paintbrush PCX image", "PGM (Portable GrayMap) image", "pgmyuv", "PGMYUV (Portable GrayMap YUV) image", "PNG (Portable Network Graphics) image", "PPM (Portable PixelMap) image", "V.Flash PTX image", "SGI image", "sp5x", "Sunplus JPEG (SP5X)", "sunrast", "Sun Rasterfile image", "Truevision Targa image", "tdsc", "TDSC", "tiff", "TIFF image", "Renderware TXD (TeXture Dictionary) image", "vc1image", "Windows Media Video 9 Image v2", "webp", "WebP", "wmv3image", "Windows Media Video 9 Image", "XBM (X BitMap) image", "XWD (X Window Dump) image", "apng", "APNG (Animated Portable Network Graphics) image", "cfhd", "Cineform HD", "pcm_s16le", "PCM signed 16-bit little-endian", "pcm_s16be", "PCM signed 16-bit big-endian", "pcm_u16le", "PCM unsigned 16-bit little-endian", "pcm_u16be", "PCM unsigned 16-bit big-endian", "pcm_s8", "PCM signed 8-bit", "pcm_u8", "PCM unsigned 8-bit", "pcm_mulaw", "PCM mu-law / G.711 mu-law", "pcm_alaw", "PCM A-law / G.711 A-law", "pcm_s32le", "PCM signed 32-bit little-endian", "pcm_s32be", "PCM signed 32-bit big-endian", "pcm_u32le", "PCM unsigned 32-bit little-endian", "pcm_u32be", "PCM unsigned 32-bit big-endian", "pcm_s24le", "PCM signed 24-bit little-endian", "pcm_s24be", "PCM signed 24-bit big-endian", "pcm_u24le", "PCM unsigned 24-bit little-endian", "pcm_u24be", "PCM unsigned 24-bit big-endian", "pcm_s24daud", "PCM D-Cinema audio signed 24-bit", "pcm_zork", "PCM Zork", "pcm_s16be_planar", "PCM signed 16-bit big-endian planar", "pcm_s16le_planar", "PCM signed 16-bit little-endian planar", "pcm_s24le_planar", "PCM signed 24-bit little-endian planar", "pcm_s32le_planar", "PCM signed 32-bit little-endian planar", "pcm_dvd", "PCM signed 20|24-bit big-endian", "pcm_f32be", "PCM 32-bit floating point big-endian", "pcm_f32le", "PCM 32-bit floating point little-endian", "pcm_f64be", "PCM 64-bit floating point big-endian", "pcm_f64le", "PCM 64-bit floating point little-endian", "pcm_bluray", "PCM signed 16|20|24-bit big-endian for Blu-ray media", "pcm_lxf", "PCM signed 20-bit little-endian planar", "s302m", "SMPTE 302M", "pcm_s8_planar", "PCM signed 8-bit planar", "adpcm_ima_qt", "ADPCM IMA QuickTime", "adpcm_ima_wav", "ADPCM IMA WAV", "adpcm_ima_dk3", "ADPCM IMA Duck DK3", "adpcm_ima_dk4", "ADPCM IMA Duck DK4", "adpcm_ima_ws", "ADPCM IMA Westwood", "adpcm_ima_smjpeg", "ADPCM IMA Loki SDL MJPEG", "adpcm_ms", "ADPCM Microsoft", "adpcm_4xm", "ADPCM 4X Movie", "adpcm_xa", "ADPCM CDROM XA", "adpcm_adx", "SEGA CRI ADX ADPCM", "adpcm_ea", "ADPCM Electronic Arts", "adpcm_g726", "G.726 ADPCM", "adpcm_ct", "ADPCM Creative Technology", "adpcm_swf", "ADPCM Shockwave Flash", "adpcm_yamaha", "ADPCM Yamaha", "adpcm_sbpro_4", "ADPCM Sound Blaster Pro 4-bit", "adpcm_sbpro_3", "ADPCM Sound Blaster Pro 2.6-bit", "adpcm_sbpro_2", "ADPCM Sound Blaster Pro 2-bit", "adpcm_thp", "ADPCM Nintendo THP", "adpcm_thp_le", "ADPCM Nintendo THP (Little-Endian)", "adpcm_ima_amv", "ADPCM IMA AMV", "adpcm_ea_r1", "ADPCM Electronic Arts R1", "adpcm_ea_r3", "ADPCM Electronic Arts R3", "adpcm_ea_r2", "ADPCM Electronic Arts R2", "adpcm_ima_ea_sead", "ADPCM IMA Electronic Arts SEAD", "adpcm_ima_ea_eacs", "ADPCM IMA Electronic Arts EACS", "adpcm_ea_xas", "ADPCM Electronic Arts XAS", "adpcm_ea_maxis_xa", "ADPCM Electronic Arts Maxis CDROM XA", "adpcm_ima_iss", "ADPCM IMA Funcom ISS", "adpcm_g722", "G.722 ADPCM", "adpcm_ima_apc", "ADPCM IMA CRYO APC", "adpcm_afc", "ADPCM Nintendo Gamecube AFC", "adpcm_ima_oki", "ADPCM IMA Dialogic OKI", "adpcm_dtk", "ADPCM Nintendo Gamecube DTK", "adpcm_ima_rad", "ADPCM IMA Radical", "adpcm_g726le", "G.726 ADPCM little-endian", "adpcm_vima", "LucasArts VIMA audio", "adpcm_psx", "ADPCM Playstation", "adpcm_aica", "ADPCM Yamaha AICA", "amr_nb", "AMR-NB (Adaptive Multi-Rate NarrowBand)", "amr_wb", "AMR-WB (Adaptive Multi-Rate WideBand)", "ra_144", "RealAudio 1.0 (14.4K)", "ra_288", "RealAudio 2.0 (28.8K)", "roq_dpcm", "DPCM id RoQ", "interplay_dpcm", "DPCM Interplay", "xan_dpcm", "DPCM Xan", "sol_dpcm", "DPCM Sol", "sdx2_dpcm", "DPCM Squareroot-Delta-Exact", "MP2 (MPEG audio layer 2)", "MP3 (MPEG audio layer 3)", "ATSC A/52A (AC-3)", "DCA (DTS Coherent Acoustics)", "vorbis", "Vorbis", "dvaudio", "DV audio", "wmav1", "Windows Media Audio 1", "wmav2", "Windows Media Audio 2", "mace3", "MACE (Macintosh Audio Compression/Expansion) 3:1", "mace6", "MACE (Macintosh Audio Compression/Expansion) 6:1", "vmdaudio", "Sierra VMD audio", "flac", "FLAC (Free Lossless Audio Codec)", "mp3adu", "ADU (Application Data Unit) MP3 (MPEG audio layer 3)", "mp3on4", "MP3onMP4", "shorten", "Shorten", "alac", "ALAC (Apple Lossless Audio Codec)", "westwood_snd1", "Westwood Audio (SND1)", "qdm2", "QDesign Music Codec 2", "cook", "Cook / Cooker / Gecko (RealAudio G2)", "truespeech", "DSP Group TrueSpeech", "TTA (True Audio)", "smackaudio", "Smacker audio", "qcelp", "QCELP / PureVoice", "wavpack", "WavPack", "dsicinaudio", "Delphine Software International CIN audio", "IMC (Intel Music Coder)", "musepack7", "Musepack SV7", "MLP (Meridian Lossless Packing)", "gsm_ms", "GSM Microsoft variant", "atrac3", "ATRAC3 (Adaptive TRansform Acoustic Coding 3)", "voxware", "Voxware RT29 Metasound", "Monkey's Audio", "nellymoser", "Nellymoser Asao", "musepack8", "Musepack SV8", "speex", "Speex", "wmavoice", "Windows Media Audio Voice", "wmapro", "Windows Media Audio 9 Professional", "wmalossless", "Windows Media Audio Lossless", "atrac3p", "ATRAC3+ (Adaptive TRansform Acoustic Coding 3+)", "eac3", "ATSC A/52B (AC-3, E-AC-3)", "sipr", "RealAudio SIPR / ACELP.NET", "MP1 (MPEG audio layer 1)", "twinvq", "VQF TwinVQ", "truehd", "TrueHD", "mp4als", "MPEG-4 Audio Lossless Coding (ALS)", "atrac1", "ATRAC1 (Adaptive TRansform Acoustic Coding)", "binkaudio_rdft", "Bink Audio (RDFT)", "binkaudio_dct", "Bink Audio (DCT)", "qdmc", "QDesign Music", "celt", "Constrained Energy Lapped Transform (CELT)", "g723_1", "G.723.1", "dss_sp", "Digital Speech Standard - Standard Play mode (DSS SP)", "g729", "G.729", "8svx_exp", "8SVX exponential", "8svx_fib", "8SVX fibonacci", "bmv_audio", "Discworld II BMV audio", "ralf", "RealAudio Lossless", "IAC (Indeo Audio Coder)", "ilbc", "iLBC (Internet Low Bitrate Codec)", "wavesynth", "Wave synthesis pseudo-codec", "sonic", "Sonic", "sonicls", "Sonic lossless", "opus", "Opus (Opus Interactive Audio Codec)", "comfortnoise", "RFC 3389 Comfort Noise", "TAK (Tom's lossless Audio Kompressor)", "metasound", "Voxware MetaSound", "paf_audio", "Amazing Studio Packed Animation File Audio", "On2 Audio for Video Codec", "evrc", "EVRC (Enhanced Variable Rate Codec)", "SMV (Selectable Mode Vocoder)", "4GV (Fourth Generation Vocoder)", "dsd_lsbf", "DSD (Direct Stream Digital), least significant bit first", "dsd_msbf", "DSD (Direct Stream Digital), most significant bit first", "dsd_lsbf_planar", "DSD (Direct Stream Digital), least significant bit first, planar", "dsd_msbf_planar", "DSD (Direct Stream Digital), most significant bit first, planar", "interplayacm", "Interplay ACM", "xma1", "Xbox Media Audio 1", "xma2", "Xbox Media Audio 2", "dvd_subtitle", "DVD subtitles", "dvb_subtitle", "DVB subtitles", "raw UTF-8 text", "xsub", "XSUB", "ASS (Advanced SSA) subtitle", "SSA (SubStation Alpha) subtitle", "mov_text", "MOV text", "hdmv_pgs_subtitle", "HDMV Presentation Graphic Stream subtitles", "dvb_teletext", "DVB teletext", "SubRip subtitle with embedded timing", "subrip", "SubRip subtitle", "microdvd", "MicroDVD subtitle", "mpl2", "MPL2 subtitle", "eia_608", "EIA-608 closed captions", "jacosub", "JACOsub subtitle", "PJS (Phoenix Japanimation Society) subtitle", "sami", "SAMI subtitle", "realtext", "RealText subtitle", "Spruce subtitle format", "subviewer1", "SubViewer v1 subtitle", "subviewer", "SubViewer subtitle", "vplayer", "VPlayer subtitle", "webvtt", "WebVTT subtitle", "hdmv_text_subtitle", "HDMV Text subtitle", "TrueType font", "bintext", "Binary text", "xbin", "eXtended BINary text", "iCEDraw text", "OpenType font", "SMPTE 336M Key-Length-Value (KLV) metadata", "dvd_nav_packet", "DVD Nav packet", "timed_id3", "timed ID3 metadata", "bin_data", "binary data", "application/octet-stream", "application/vnd.ms-opentype", "application/x-truetype-font", "application/x-font", "image/png", "image/x-xwindowdump", "image/webp", "image/tiff", "image/x-targa", "image/x-tga", "image/x-pcx", "image/x-portable-pixmap", "image/gif", "image/jp2", "image/x-ms-bmp", "image/jpeg", "\fguess_dc() is out of memory\n", "s->quarter_sample", "libavcodec/error_resilience.c", "internal error, slice end before start\n", "ignoring last missing slice\n", "Cannot use previous picture in error concealment\n", "Cannot use next picture in error concealment\n", "Warning MVs not available\n", "%2X ", "concealing %d DC, %d AC, %d MV errors in %c frame\n", "s->avctx->codec_id != AV_CODEC_ID_H264", "Bad picture format\n", "%c esc_type:%d, qp:%d num:%d\n", "Forcing thread count to 1 for MJPEG encoding, use -thread_type slice or a constant quantizer if you want to use multiple cpu cores\n", "MJPEG CBR encoding works badly with frame multi-threading, consider using -threads 1, -thread_type slice or a constant quantizer.\n", "context", "non_deterministic", "!avctx->internal->frame_thread_encoder", "libavcodec/frame_thread_encoder.c", "threads", "!thread_avctx->internal->frame_thread_encoder", "ff_frame_thread_encoder_init failed\n", "Forcing thread count to 1 for huffyuv encoding with first pass or context 1\n", "%dx%d image at pos (%d;%d) [area:%dx%d]\n", "No available color, can not use transparency\n", "GIF does not support resolutions above 65535x65535\n", "avctx->pix_fmt == AV_PIX_FMT_PAL8", "libavcodec/gif.c", "GIF encoder", "gifflags", "set GIF flags", "offsetting", "enable picture offsetting", "transdiff", "enable transparency detection between frames", "GIF87a", "GIF89a", "buf_size >= 0", "libavcodec/bytestream.h", "cannot decode frame without keyframe\n", "code=%02x '%c'\n", "picture doesn't have either global or local palette.\n", "Invalid image width.\n", "Invalid image height.\n", "Image too wide by %d, truncating.\n", "Image too high by %d, truncating.\n", "LZW init failed\n", "LZW decode failed\n", "gif decoder", "trans_color", "color value (ARGB) that is used instead of transparent color", "\u000b\r\r\r", "Error at MB: %d\n", "discarding %d junk bits at end, next would be %X\n", "overreading %d bits\n", "slice end not reached but screenspace end (%d left %06X, score= %d)\n", "Unsupported codec %d\n", "L263", "S263", "this codec does not support truncated bitstreams\n", "Discarding excessive bitstream in packed xvid\n", "Reverting picture dimensions change due to header decoding failure\n", "header damaged\n", "format change not supported\n", "GEOV", "GEOX", "Invalid POC %d<%d\n", "Increasing reorder buffer to %d\n", "pics <= 16", "libavcodec/h264.c", "no picture %s\n", "Reference not available for error concealing\n", "Reference invalid\n", "top block unavailable for requested intra4x4 mode %d at %d %d\n", "left block unavailable for requested intra4x4 mode %d at %d %d\n", "out of range intra chroma pred mode at %d %d\n", "top block unavailable for requested intra mode at %d %d\n", "left block unavailable for requested intra mode at %d %d\n", "AVC: nal size %d\n", "NAL %d/%d at %d/%d length %d\n", "AVC: Consumed only %d bytes instead of %d\n", "Ignoring NAL %d in global header/extradata\n", "Invalid inter IDR frame\n", "invalid mixed IDR / non IDR frames cannot be decoded in slice multithreading mode\n", "data partitioning", "SPS decoding failure, trying again with the complete NAL\n", "next_avc - buf_index + consumed == nalsize", "Unknown NAL code: %d (%d bits)\n", "decode_slice_header error\n", "Cannot allocate memory.\n", "avcC %d too short\n", "Decoding sps %d from avcC failed\n", "Decoding pps %d from avcC failed\n", "stereo_mode", "buf_index <= buf_size", "Q264", "no frame!\n", "Duplicating field %d to fill missing\n", "pict->buf[0] || !*got_frame", "Invalid UE golomb code\n", "luma_log2_weight_denom %d is out of range\n", "chroma_log2_weight_denom %d is out of range\n", "reference overflow %u > %u or %u > %u\n", "pthread_once has failed.", "Error resilience with slice threads is enabled. It is unsafe and unsupported and may crash. Use it at your own risk\n", "H264 Decoder", "is_avc", "is avc", "nal_length_size", "enable_er", "Enable error resilience on damaged frames (unsafe)", "overflow in decode_cabac_mb_mvd\n", "Reference %d >= %d\n", "gray chroma\n", "cabac decode of qscale diff failed at %d %d\n", "Invalid level prefix\n", "negative number of zero coeffs at %d %d\n", "offset == (sizeof(coeff_token_vlc_tables) / sizeof((coeff_token_vlc_tables)[0]))", "libavcodec/h264_cavlc.c", "mb_type %d in %c slice too large at %d %d\n", "Not enough data for an intra PCM block.\n", "B sub_mb_type %u out of range at %d %d\n", "P sub_mb_type %u out of range at %d %d\n", "ref %u overflow\n", "cbp too large (%u) at %d %d\n", "dquant out of range (%d) at %d %d\n", "co located POCs unavailable\n", "private_spspps_buf", "Too big extradata size, corrupted stream or invalid MP4/AVCC bitstream\n", "Packet header is not contained in global extradata, corrupted stream or invalid MP4/AVCC bitstream\n", "Warning: SPS NALU missing or invalid. The resulting stream may not play.\n", "Warning: PPS NALU missing or invalid. The resulting stream may not play.\n", "SPS not present in the stream, nor in AVCC, stream may be unreadable\n", "PPS not present in the stream, nor in AVCC, stream may be unreadable\n", "h264_mp4toannexb", "!dst->f->buf[0]", "libavcodec/h264_picture.c", "src->f->buf[0]", "hardware accelerator failed to decode picture\n", "Gray", "PIC-AFF", "MB-AFF", "Truncating likely oversized SPS\n", "sps_id %u out of range\n", "chroma_format_idc %u", "separate color planes are not supported\n", "Different chroma and luma bit depth", "illegal bit depth value (%d, %d)\n", "log2_max_frame_num_minus4 out of range (0-12): %d\n", "log2_max_poc_lsb (%d) is out of range\n", "poc_cycle_length overflow %d\n", "illegal POC type %d\n", "too many reference frames %d\n", "mb_width/height overflow\n", "discarding sps cropping, original values are l:%d r:%d t:%d b:%d\n", "Reducing left cropping to %d chroma samples to preserve alignment.\n", "crop values invalid %d %d %d %d / %d %d\n", "illegal aspect ratio\n", "Truncated VUI\n", "time_scale/num_units_in_tick invalid or unsupported (%u/%u)\n", "Clipping illegal num_reorder_frames %d\n", "sps:%u profile:%d/%d poc:%d ref:%d %dx%d %s %s crop:%u/%u/%u/%u %s %s %d/%d b%d reo:%d\n", "Overread %s by %d bits\n", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "8x8DCT", "pps_id %u out of range\n", "Truncating likely oversized PPS\n", "Invalid luma bit depth=%d\n", "Unimplemented luma bit depth=%d\n", "FMO not supported\n", "reference overflow (pps)\n", "Current profile doesn't provide more RBSP data in PPS, skipping\n", "pps:%u sps:%u %s slice_groups:%d ref:%u/%u %s qp:%d/%d/%d/%d %s %s %s %s\n", "libavcodec/h264_refs.c", "len <= 32", "Discarding mismatching reference\n", "short term list:\n", "%u fn:%d poc:%d %p\n", "long term list:\n", "reference count overflow\n", "abs_diff_pic_num overflow\n", "long_term_pic_idx overflow\n", "illegal modification_of_pic_nums_idc %u\n", "reference picture missing during reorder\n", "Missing reference picture, default is %d\n", "av_buffer_get_ref_count(sl->ref_list[list][index].parent->f->buf[0]) > 0", "MMCO opcode [%d, %d] at %d mismatches between slices\n", "Inconsistent MMCO state between slices [%d, %d]\n", "no mmco here\n", "mmco:%d %d %d\n", "%d %d %p\n", "mmco: unref short failure\n", "mmco: unref short %d count %d\n", "remove short %d count %d\n", "mmco: unref long failure\n", "mmco: cannot assign current picture to short and long at the same time\n", "mmco: cannot assign current picture to 2 long term references\n", "!h->cur_pic_ptr->long_ref", "illegal short term reference assignment for second field in complementary field pair (first field is long term)\n", "number of reference frames (%d+%d) exceeds max (%d; probably corrupt input), discarding one\n", "illegal short term buffer state detected\n", "illegal long ref in memory management control operation %d\n", "illegal memory management control operation %d\n", "SEI %d len:%d\n", "SEI type %d size %d truncated at %d\n", "ct_type:%X pic_struct:%d\n", "x264 - core %d", "x264 - core 0000", "user data:\"%s\"\n", "sei_recovery_frame_cnt: %d\n", "non-existing SPS %d referenced in buffering period\n", "SEI FPA %d %d %d %d %d %d\n", "Green Metadata Info SEI message\n", "green_metadata_type                            = %d\n", "green_metadata_period_type                     = %d\n", "green_metadata_num_seconds                     = %d\n", "green_metadata_num_pictures                    = %d\n", "SEI GREEN Complexity Metrics                   = %f %f %f %f\n", "xsd_metric_type                                = %d\n", "xsd_metric_value                               = %f\n", "unknown SEI type %d\n", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "mono", "Could not allocate memory\n", "VDPAU decoding does not support video colorspace.\n", "Unsupported bit depth %d\n", "too many threads/slices %d, reducing to %d\n", "context_init() failed.\n", "Attempt to start a frame outside SETUP state\n", "no frame buffer available\n", "!pic->f->data[0]", "libavcodec/h264_slice.c", "!pic->hwaccel_picture_private", "h->block_offset[15] == (4 * ((scan8[15] - scan8[0]) & 7) << h->pixel_shift) + 4 * sl->linesize * ((scan8[15] - scan8[0]) >> 3)", "Slice overlaps with next at %d\n", "bytestream overread %td\n", "error while decoding MB %d %d, bytestream %td\n", "error while decoding MB %d %d\n", "h264_slice_header_init() failed", " fix", " IDR", "TEMP", "SPAT", "!h->setup_finished", "Too many fields\n", "Cannot decode multiple access units as slice threads\n", "Broken frame packetizing\n", "sl == h->slice_ctx", "slice type %d too large at %d\n", "A non-intra slice in an IDR NAL unit.\n", "non-existing PPS %u referenced\n", "PPS change from %d to %d forbidden\n", "non-existing SPS %u referenced\n", "PPS changed between slices\n", "SPS changed in the middle of the frame\n", "Delayed frames seen. Reenabling low delay requires a codec flush.\n", "h->sps.crop_right + h->sps.crop_left < (unsigned)h->width", "h->sps.crop_top + h->sps.crop_bottom < (unsigned)h->height", "Invalid cropped dimensions: %dx%d.\n", "Ignoring cropping information.\n", "changing width %d -> %d / height %d -> %d on slice %d\n", "Reinit context to %dx%d, pix_fmt: %s\n", "h264_slice_header_init() failed\n", "Cannot (re-)initialize context during parallel decoding.\n", "Frame num change from %d to %d\n", "This stream was generated by a broken encoder, invalid 8x8 inference\n", "Changing field mode (%d -> %d) between slices is not allowed\n", "unset cur_pic_ptr on slice %d\n", "h->cur_pic_ptr", "h->cur_pic_ptr->f->buf[0]", "Invalid field mode combination %d/%d\n", "Found reference and non-reference fields in the same frame, which", "Frame num gap %d %d\n", "first_mb_in_slice overflow\n", "cabac_init_idc %u overflow\n", "QP %u out of range\n", "deblocking_filter_idc %u out of range\n", "deblocking filter parameters %d %d out of range\n", "Cannot parallelize slice decoding with deblocking filter type 1, decoding such frames in sequential order\nTo parallelize slice decoding you need video encoded with disable_deblocking_filter_idc set to 2 (deblock only edges that do not cross slices).\nSetting the flags2 libavcodec option to +fast (-flags2 +fast) will disable deblocking across slices and enable parallel slice decoding but will generate non-standard-compliant output.\n", "Deblocking switched inside frame.\n", "Possibly too many slices (%d >= %d), increase MAX_SLICES and recompile if there are artifacts\n", "slice:%d %s mb:%d %c%s%s pps:%u frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s %s\n", "context_count && h->slice_ctx[context_count - 1].mb_y < h->mb_height", "bit_depth<=8", "libavcodec/h264dsp.c", "libavcodec/h264pred.c", "The cu_qp_delta %d is outside the valid range [%d, %d].\n", "cu_chroma_qp_offset_idx not yet tested.\n", "luma_log2_weight_denom %d is invalid\n", "Impossible initial tile.\n", "Previous slice segment missing\n", "PPS id out of range: %d\n", "PPS changed between slices.\n", "Invalid slice segment address: %u.\n", "Independent slice segment missing.\n", "Unknown slice type: %d.\n", "Inter slices in an IRAP frame.\n", "Ignoring POC change between slices: %d -> %d\n", "No ref lists in the SPS.\n", "Too many refs: %d/%d.\n", "Zero refs for a frame with P or B slices.\n", "Invalid collocated_ref_idx: %d.\n", "Invalid number of merging MVP candidates: %d.\n", "num_entry_point_offsets %d is invalid\n", "offset_len %d is invalid\n", "Failed to allocate memory\n", "too many slice_header_extension_data_bytes\n", "The slice_qp %d is outside the valid range [%d, 51].\n", "Impossible slice segment.\n", "Overread slice header by %d bits\n", "Invalid long term RPS.\n", "Error constructing the frame RPS.\n", "Mastering Display Metadata:\n", "r(%5.4f,%5.4f) g(%5.4f,%5.4f) b(%5.4f %5.4f) wp(%5.4f, %5.4f)\n", "min_luminance=%f, max_luminance=%f\n", "First slice in a frame missing.\n", "Non-matching NAL types of the VCL NALUs: %d %d\n", "Error constructing the reference lists for the current slice.\n", "WPP ctb addresses are wrong (%d %d %d %d)\n", "entry_point_offset table is corrupted\n", "Skipping NAL unit %d\n", "Error splitting the input into NAL units.\n", "Error parsing NAL unit #%d.\n", "Invalid NAL unit size in extradata.\n", "Decoding nal unit %d %d from hvcC failed\n", "Verifying checksum for frame with POC %d: ", "plane %d - correct ", "%02x", "mismatching checksum of plane %d - ", " != ", "Decoded frame with POC %d.\n", "HEVC decoder", "apply_defdispwin", "Apply default display window from VUI", "strict-displaywin", "stricly apply default display window size", "The input looks like it is Annex B already\n", "Invalid NAL unit type in extradata: %d\n", "No parameter sets in the extradata\n", "hevc_mp4toannexb", "nal->skipped_bytes_pos_size >= nal->skipped_bytes", "libavcodec/hevc_parse.c", "SEI_SUFFIX", "SEI_PREFIX", "FD_NUT", "EOB_NUT", "EOS_NUT", "CRA_NUT", "IDR_N_LP", "IDR_W_RADL", "BLA_N_LP", "BLA_W_RADL", "BLA_W_LP", "RASL_R", "RASL_N", "RADL_R", "RADL_N", "STSA_R", "STSA_N", "TSA_R", "TSA_N", "TRAIL_R", "TRAIL_N", "Invalid NAL unit size.\n", "No start code is found.\n", "Invalid NAL unit %d, skipping.\n", "nal_unit_type: %d(%s), nuh_layer_id: %d, temporal_id: %d\n", "Invalid NAL unit: %d\n", "SPS id out of range: %d\n", "missing picture in access unit\n", "Invalid delta in scaling list data: %d.\n", "nb_cpb %d invalid\n", "Decoding VUI\n", "Unknown SAR index: %u.\n", "Invalid default display window\n", "discarding vui default display window, original values are l:%u r:%u t:%u b:%u\n", "Strange VUI timing information, retrying...\n", "Retry got %i/%i fps\n", "Invalid value of delta_idx in slice header RPS: %d > %d.\n", "Invalid value of abs_delta_rps: %d\n", "Too many refs in a short term RPS.\n", "Decoding VPS\n", "vps_reserved_three_2bits is not three\n", "vps_reserved_ffff_16bits is not 0xffff\n", "vps_max_sub_layers out of range: %d\n", "PTL information too short\n", "Main profile bitstream\n", "Main 10 profile bitstream\n", "Main Still Picture profile bitstream\n", "Range Extension profile bitstream\n", "Unknown HEVC profile: %d\n", "Not enough data for sublayer %i level_idc\n", "vps_max_dec_pic_buffering_minus1 out of range: %d\n", "vps_max_num_reorder_pics out of range: %d\n", "too many layer_id_included_flags\n", "vps_num_hrd_parameters %d is invalid\n", "Overread VPS by %d bits\n", "!(s->sps_list[id] && s->sps == (HEVCSPS*)s->sps_list[id]->data)", "libavcodec/hevc_ps.c", "PTL information for sublayer %i too short\n", "VPS %d does not exist\n", "sps_max_sub_layers out of range: %d\n", "chroma_format_idc %d is invalid\n", "discarding sps conformance window, original values are l:%u r:%u t:%u b:%u\n", "Luma bit depth (%d) is different from chroma bit depth (%d), this is unsupported.\n", "4:2:0, 4:2:2, 4:4:4 supports are currently specified for 8, 10 and 12 bits.\n", "chroma_format_idc is %d, depth is %d", "log2_max_pic_order_cnt_lsb_minus4 out range: %d\n", "sps_max_dec_pic_buffering_minus1 out of range: %d\n", "sps_max_num_reorder_pics out of range: %d\n", "Invalid value %d for log2_min_cb_size", "Invalid value %d for log2_diff_max_min_coding_block_size", "Invalid value for log2_min_tb_size", "Invalid value %d for log2_diff_max_min_transform_block_size", "PCM bit depth (%d) is greater than normal bit depth (%d)\n", "Too many short term RPS: %d.\n", "num_long_term_ref_pics_sps %d is out of range.\n", "extended_precision_processing_flag not yet implemented\n", "high_precision_offsets_enabled_flag not yet implemented\n", "cabac_bypass_alignment_enabled_flag not yet implemented\n", "Reducing left output window to %d chroma samples to preserve alignment.\n", "Invalid visible frame dimensions: %dx%d.\n", "Displaying the whole video surface.\n", "CTB size out of range: 2^%d\n", "log2_ctb_size %d differs from the bounds of any known profile\n", "log2_ctb_size %d", "Invalid coded frame dimensions.\n", "max_transform_hierarchy_depth_inter out of range: %d\n", "max_transform_hierarchy_depth_intra out of range: %d\n", "max transform block size out of range: %d\n", "Overread SPS by %d bits\n", "Decoding SPS\n", "Parsed SPS: id %d; coded wxh: %dx%d; cropped wxh: %dx%d; pix_fmt: %s.\n", "Decoding PPS\n", "SPS %u does not exist.\n", "diff_cu_qp_delta_depth %d is invalid\n", "pps_cb_qp_offset out of range: %d\n", "pps_cr_qp_offset out of range: %d\n", "num_tile_columns_minus1 out of range: %d\n", "num_tile_rows_minus1 out of range: %d\n", "Invalid tile widths.\n", "Invalid tile heights.\n", "pps_beta_offset_div2 out of range: %d\n", "pps_tc_offset_div2 out of range: %d\n", "log2_parallel_merge_level_minus2 out of range: %d\n", "chroma_qp_offset_list_len_minus1 shall be in the range [0, 5].\n", "cb_qp_offset_list not tested yet.\n", "Overread PPS by %d bits\n", "!frame->hwaccel_picture_private", "libavcodec/hevc_refs.c", "Duplicate POC in a sequence: %d.\n", "Error allocating frame, DPB full.\n", "Output frame with POC %d.\n", "Zero refs in the frame RPS.\n", "Invalid reference index.\n", "Could not find ref with POC %d\n", "Decoding SEI\n", "BOTTOM Field\n", "TOP Field\n", "num_sps_ids_minus1 %d invalid\n", "active_parameter_set_id %d invalid\n", "Skipped PREFIX SEI %d\n", "Skipped SUFFIX SEI %d\n", "Internal error, IDCT permutation not set\n", "desc", "libavcodec/imgconvert.c", "after picture_number", "Bad H263 id\n", "Intel H263 free format not supported\n", "SAC not supported\n", "Wrong Intel H263 format\n", "Bad value for reserved field\n", "Invalid marker\n", "in dimensions", "Invalid aspect ratio.\n", "illegal dc %d at %d %d\n", "illegal ac vlc code at %dx%d\n", "run overflow at %dx%d i:%d\n", " UMV", " LONG", " AIC", " AIV", " LOOP", "qp:%d %c size:%d rnd:%d%s%s%s%s%s%s%s%s%s %d/%d\n", "before MBA", "after MBA", "after SQUANT", "cbpc damaged at %d %d\n", "b mb_type damaged at %d %d\n", "b cbpy damaged at %d %d\n", "I cbpc damaged at %d %d\n", "I cbpy damaged at %d %d\n", "Header looks like RTP instead of H.263\n", "in PTYPE", "H263 SAC not supported\n", "Syntax-based Arithmetic Coding (SAC) not supported\n", "Reference Picture Selection not supported\n", "Independent Segment Decoding not supported\n", "Bad UFEP type (%d)\n", "zero framerate\n", "rectangular slices not supported\n", "unordered slices not supported\n", "SEPB1", "SEPB2", " %5d", "ZYGO", "n <= 1024", "libavcodec/kbdwin.c", "Error: nal buffer is too small\n", "-qscale is ignored, -crf is recommended.\n", "Error setting preset/tune %s/%s.\n", "Possible presets:", "Possible tunes:", "weightp", "Error parsing option '%s' with value '%s'.\n", "level", "Failed to parse level\n", "psy-rd", "deblock", "partitions", "stats", "baseline", "high", "high10", "high422", "high444", "Error setting profile %s.\n", "Possible profiles:", "%255[^:=]=%255[^:]", "bad option '%s': '%s'\n", "bad value for '%s': '%s'\n", "Error parsing option '%s = %s'.\n", "libx264rgb", "libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB", "libx264", "libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10", "flags2", "i_qfactor", "b_qfactor", "qmin", "qdiff", "qblur", "qcomp", "sc_threshold", "trellis", "me_range", "me_method", "subq", "b_strategy", "keyint_min", "thread_type", "+cgop", "rc_init_occupancy", "preset", "Set the encoding preset (cf. x264 --fullhelp)", "medium", "tune", "Tune the encoding params (cf. x264 --fullhelp)", "profile", "Set profile restrictions (cf. x264 --fullhelp) ", "fastfirstpass", "Use fast settings when encoding first pass", "Specify level (as defined by Annex A)", "passlogfile", "Filename for 2 pass stats", "wpredp", "Weighted prediction for P-frames", "a53cc", "Use A53 Closed Captions (if available)", "x264opts", "x264 options", "Select the quality for constant quality mode", "crf_max", "In CRF mode, prevents VBV from lowering quality beyond this point.", "Constant quantization parameter rate control method", "aq-mode", "AQ method", "aq_mode", "none", "variance", "Variance AQ (complexity mask)", "autovariance", "Auto-variance AQ", "autovariance-biased", "Auto-variance AQ with bias to dark scenes", "aq-strength", "AQ strength. Reduces blocking and blurring in flat and textured areas.", "Use psychovisual optimizations.", "Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format.", "rc-lookahead", "Number of frames to look ahead for frametype and ratecontrol", "weightb", "Weighted prediction for B-frames.", "Weighted prediction analysis method.", "smart", "ssim", "Calculate and print SSIM stats.", "intra-refresh", "Use Periodic Intra Refresh instead of IDR frames.", "bluray-compat", "Bluray compatibility workarounds.", "b-bias", "Influences how often B-frames are used", "b-pyramid", "Keep some B-frames as references.", "b_pyramid", "strict", "Strictly hierarchical pyramid", "normal", "Non-strict (not Blu-ray compatible)", "mixed-refs", "One reference per partition, as opposed to one reference per macroblock", "8x8dct", "High profile 8x8 transform.", "fast-pskip", "Use access unit delimiters.", "mbtree", "Use macroblock tree ratecontrol.", "Loop filter parameters, in <alpha:beta> form.", "cplxblur", "Reduce fluctuations in QP (before curve compression)", "A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all", "direct-pred", "Direct MV prediction mode", "spatial", "temporal", "slice-max-size", "Limit the size of each slice in bytes", "nal-hrd", "Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4)", "avcintra-class", "AVC-Intra class 50/100/200", "motion-est", "Set motion estimation method", "tesa", "forced-idr", "If forcing keyframes, force them as IDR frames.", "Coder type", "default", "cavlc", "cabac", "Strategy to choose between I/P/B-frames", "chromaoffset", "QP difference between chroma and luma", "Scene change threshold", "noise_reduction", "Noise reduction", "x264-params", "Override the x264 configuration using a :-separated list of key=value parameters", "film", "animation", "grain", "stillimage", "psnr", "fastdecode", "zerolatency", "ultrafast", "superfast", "veryfast", "faster", "fast", "slow", "slower", "veryslow", "placebo", "s->maxbits >= 9 && s->maxbits <= 12", "libavcodec/lzwenc.c", "internal error in cmp function selection\n", "me_method is only allowed to be set to zero and epzs; for hex,umh,full and others see dia_size\n", "ME_MAP size may be a little small for the selected diamond size\n", "s->quarter_sample==0 || s->quarter_sample==1", "libavcodec/motion_est.c", "s->linesize == c->stride", "s->uvlinesize == c->uvstride", "s->pict_type==AV_PICTURE_TYPE_P", "range <= 16 || !s->msmpeg4_version", "range <=256 || !(s->codec_id == AV_CODEC_ID_MPEG2VIDEO && s->avctx->strict_std_compliance >= 0)", "static_size <= (sizeof(table) / sizeof((table)[0]))", "libavcodec/mpeg12.c", "Failed to parse extradata\n", "DivX%dBuild%d%c", "DivX%db%d%c", "FFmpe%*[^b]b%d", "FFmpeg v%d.%d.%d / libavcodec build: %d", "Lavc%d.%d.%d", "ffmpeg", "XviD%d", "before sprite_trajectory", "after sprite_trajectory", "illegal dc vlc\n", "dc marker bit missing\n", "dc<0 at %dx%d\n", "dc overflow at %dx%d\n", "1. marker bit missing in rvlc esc\n", "2. marker bit missing in rvlc esc\n", "reverse esc missing\n", "1. marker bit missing in 3. esc\n", "2. marker bit missing in 3. esc\n", "|level| overflow in 3. esc, qp=%d\n", "ac-tex damaged at %d %d\n", "texture corrupted at %d %d %d\n", "mcbpc damaged at %d %d\n", "P cbpy damaged at %d %d\n", "illegal MB_type\n", "marker does not match f_code\n", "illegal mb_num in video packet (%d %d) \n", "before time_increment in video packed header", "before vop_coding_type in video packed header", "untested\n", "Error, video packet header damaged (f_code=0)\n", "Error, video packet header damaged (b_code=0)\n", "after new_pred", "mcbpc corrupted at %d %d\n", "DC corrupted at %d %d\n", "slice below monitor ...\n", "marker missing after first I partition at %d %d\n", "marker missing after first P partition at %d %d\n", "cbpy corrupted at %d %d\n", "I cbpy corrupted at %d %d\n", "P cbpy corrupted at %d %d\n", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "XVIX", "UMP4", "XVID", "RMP4", "ZMP4", "SIPP", "DIVX", "scalability ", "qpel ", "partition ", "rvlc ", " VOLC", "frame skip %d\n", "startcode: %3X ", "Video Object Start", "Video Object Layer Start", "Reserved", "FGS bp start", "Visual Object Seq Start", "Visual Object Seq End", "User Data", "Group of VOP start", "Video Session Error", "Visual Object Start", "Video Object Plane start", "slice start", "extension start", "fgs start", "FBA Object start", "FBA Object Plane start", "Mesh Object start", "Mesh Object Plane start", "Still Texture Object start", "Texture Spatial Layer start", "Texture SNR Layer start", "Texture Tile start", "Texture Shape Layer start", "stuffing start", "reserved", "System start", "illegal chroma format\n", "after first_half_bitrate", "after latter_half_bitrate", "after first_half_vbv_buffer_size", "after first_half_vbv_occupancy", "after latter_half_vbv_occupancy", "only rectangular vol supported\n", "Gray shape not supported\n", "before time_increment_resolution", "framerate==0\n", "before fixed_vop_rate", "before width", "before height", "after height", "MPEG4 OBMC not supported (very likely buggy encoder)\n", "Static Sprites not supported\n", "after sprite_width", "after sprite_height", "after sprite_left", "after sprite_top", "%d sprite_warping_points\n", "N-bit not supported\n", "quant precision %d\n", "insufficient data for custom matrix\n", "VOL Header truncated\n", "in complexity estimation part 1", "in complexity estimation part 2", "Invalid Complexity estimation method %d\n", "new pred not supported\n", "reduced resolution VOP not supported\n", "scalability not supported\n", "tb %d/%d, tincrbits:%d, qp_prec:%d, ps:%d,  %s%s%s%s\n", "GOP header invalid\n", "in gop_header", "low_delay flag set incorrectly, clearing it\n", "before time_increment", "time_increment_bits %d is invalid in relation to the current bitstream, this is likely caused by a missing VOL header\n", "time_increment_bits set to %d bits, based on bitstream analysis\n", "before vop_coded", "vop not coded\n", "after width", "after hor_spat_ref", "Header truncated\n", "sprite_brightness_change not supported\n", "static sprite not supported\n", "Error, header damaged or not MPEG4 header (qscale=0)\n", "Error, header damaged or not MPEG4 header (f_code=0)\n", "Error, header damaged or not MPEG4 header (b_code=0)\n", "qp:%d fc:%d,%d %s size:%d pro:%d alt:%d top:%d %spel part:%d resync:%d w:%d a:%d rnd:%d vot:%d%s dc:%d ce:%d/%d/%d time:%ld tincr:%d\n", "load backward shape isn't supported\n", "looks like this file was encoded with (divx4/(old)xvid/opendivx) -> forcing low_delay flag\n", "WV1F", "QMP4", "MP4S", "Video uses a non-standard and wasteful way to store B-frames ('packed B-frames'). Consider using the mpeg4_unpack_bframes bitstream filter without encoding but stream copy to fix it.\n", "MPEG4 Video Decoder", "quarter_sample", "1/4 subpel MC", "divx_packed", "divx style packed b frames", "dimensions too large for MPEG-4\n", "time_incr %lu too large\n", "size <= 2147483647/8 - 32", "MPEG4 encoder", "data_partitioning", "Use data partitioning.", "alternate_scan", "Enable alternate scantable.", "Sum of absolute differences, fast", "cmp_func", "Sum of squared errors", "satd", "Sum of absolute Hadamard transformed differences", "Sum of absolute DCT transformed differences", "Sum of squared quantization errors, low quality", "Number of bits needed for the block", "Rate distortion optimal, slow", "zero", "Zero", "vsad", "Sum of absolute vertical differences", "vsse", "Sum of squared vertical differences", "nsse", "Noise preserving sum of squared differences", "dct264", "dctmax", "chroma", "mpv_flags", "Flags common for all mpegvideo-based encoders.", "skip_rd", "RD optimal MB level residual skipping", "strict_gop", "Strictly enforce gop size", "qp_rd", "Use rate distortion optimization for qp selection", "cbp_rd", "use rate distortion optimization for CBP", "normalize adaptive quantization", "always try a mb with mv=<0,0>", "luma_elim_threshold", "single coefficient elimination threshold for luminance (negative values also consider dc coefficient)", "chroma_elim_threshold", "single coefficient elimination threshold for chrominance (negative values also consider dc coefficient)", "quantizer_noise_shaping", "error_rate", "Simulate errors in the bitstream to test error concealment.", "qsquish", "how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function)", "rc_qmod_amp", "experimental quantizer modulation", "rc_qmod_freq", "rc_eq", "Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", "rc_init_cplx", "initial complexity for 1-pass encoding", "rc_buf_aggressivity", "currently useless", "border_mask", "increase the quantizer for macroblocks close to borders", "lmin", "minimum Lagrange factor (VBR)", "lmax", "maximum Lagrange factor (VBR)", "ibias", "intra quant bias", "pbias", "inter quant bias", "rc_strategy", "ratecontrol method", "default native rate control", "libxvid (2 pass only)", "motion_est", "motion estimation algorithm", "epzs", "xone", "force_duplicated_matrix", "Always write luma and chroma matrix for mjpeg, useful for rtp streaming.", "b_sensitivity", "Adjust sensitivity of b_frame_strategy 1", "brd_scale", "Downscale frames for dynamic B-frame decision", "skip_threshold", "Frame skip threshold", "skip_factor", "Frame skip factor", "skip_exp", "Frame skip exponent", "skip_cmp", "Frame skip compare function", "mpeg_quant", "Use MPEG quantizers instead of H.263", "RTP payload size in bytes", "mepc", "Motion estimation bitrate penalty compensation (1.0 = 256)", "mepre", "pre motion estimation", "Interlaced error concealment is not fully implemented\n", "MP3ADU full parser", "offset == (sizeof(huff_vlc_tables) / sizeof((huff_vlc_tables)[0]))", "libavcodec/mpegaudiodec_template.c", "big_values too big\n", "invalid block type\n", "switch point in 8khz", "overread, skip %d enddists: %d %d\n", "bits_left=%d\n", "discarding ID3 tag\n", "Header missing\n", "incorrect frame size - multiple frames in buffer?\n", "invalid old backstep %d\n", "invalid new backstep %d\n", "s->frame", "Error while decoding MPEG audio frame.\n", "Image too small, temporary buffers cannot function\n", "pic->f->data[0]", "libavcodec/mpegpicture.c", "!pic->f->buf[0]", "get_buffer() failed (%d %p)\n", "alloc_frame_buffer() failed (hwaccel private data allocation)\n", "get_buffer() failed (stride changed)\n", "get_buffer() failed (uv stride mismatch)\n", "get_buffer() failed to allocate context scratch buffers.\n", "Error allocating a picture.\n", "Internal error, picture buffer overflow\n", "failed to allocate context scratch buffers.\n", "decoding to AV_PIX_FMT_NONE is not supported.\n", "too many threads/slices (%d), reducing to %d\n", "s != s1", "libavcodec/mpegvideo.c", "!s->picture || s->picture != s1->picture", "Failed to allocate context scratch buffers.\n", "Context scratch buffers could not be allocated due to unknown size.\n", "allocating dummy last picture for B frame\n", "warning: first frame is no keyframe\n", "allocate dummy last picture for field based first keyframe\n", "s->pict_type == AV_PICTURE_TYPE_I || (s->last_picture_ptr && s->last_picture_ptr->f->buf[0])", "Adding %d MVs info to frame %d\n", "New frame, type: %c\n", "ref->size >= offset + s->mb_stride * ((f->height+15)/16)", "DCT coeffs of MB at %dx%d:\n", "TJH)Q", "libavcodec/mpegvideo_enc.c", "s->linesize >= 32", "warning, clipping %d dct coefficients to %d..%d\n", "Warning, QMAT_SHIFT is larger than %d, overflows possible\n", "Invalid pts (%ld) <= last (%ld)\n", "Warning: AVFrame.pts=? trying to guess (%ld)\n", "warning, too many b frames in a row\n", "s->pb.buf == avctx->internal->byte_buffer", "reencoding frame due to VBV\n", "s->avctx->rc_max_rate", "stuffing too large\n", "vbv buffer overflow\n", "Internal error, negative bits\n", "vbv_delay < 0xFFFF", "only YUV420 and YUV422 are supported\n", "only YUV420 is supported\n", "keyframe interval too large!, reducing it from %d to %d\n", "Too many B-frames requested, maximum is %d.\n", "intra dc precision must be positive, note some applications use 0 and some 8 as base meaning 8bit, the value must not be smaller than that\n", "intra dc precision too large\n", "Automatically choosing VBV buffer size of %d kbyte\n", "Either both buffer size and max rate or neither must be specified\n", "Warning min_rate > 0 but min_rate != max_rate isn't recommended!\n", "bitrate below min bitrate\n", "bitrate above max bitrate\n", "impossible bitrate constraints, this will fail\n", "VBV buffer too small for bitrate\n", "bitrate tolerance %d too small for bitrate %ld, overriding\n", "Warning vbv_delay will be set to 0xFFFF (=VBR) as the specified vbv buffer is too large for the given bitrate!\n", "4MV not supported by codec\n", "OBMC is only supported with simple mb decision\n", "qpel not supported by codec\n", "b frames not supported by codec\n", "max b frames must be 0 or positive for mpegvideo based encoders\n", "Invalid pixel aspect ratio %i/%i, limit is 255/255 reducing\n", "H.263 does not support resolutions above 2048x1152\n", "w/h must be a multiple of 4\n", "MPEG-1 does not support resolutions above 4095x4095\n", "MPEG-2 does not support resolutions above 16383x16383\n", "width and height must be a multiple of 16\n", "width and height must be a multiple of 4\n", "width must be multiple of 2\n", "interlacing not supported by codec\n", "mpeg2 style quantization not supported by codec\n", "CBP RD needs trellis quant\n", "QP RD needs mbd=2\n", "closed gop with scene change detection are not supported yet, set threshold to 1000000000\n", "low delay forcing is only available for mpeg2\n", "b frames cannot be used with low delay\n", "non linear quant only supports qmax <= 28 currently\n", "Multiple slices are not supported by this codec\n", "multi threaded encoding not supported by codec\n", "automatic thread number detection not supported by codec, patch welcome\n", "framerate not set\n", "notice: b_frame_strategy only affects the first pass\n", "removing common factors from framerate\n", "qmin and or qmax are invalid, they must be 0 < min <= max\n", "intra_quant_bias = %d inter_quant_bias = %d\n", "timebase %d/%d not supported by MPEG 4 standard, the maximum admitted value for the timebase denominator is %d\n", "The specified picture size of %dx%d is not valid for the H.263 codec.\nValid sizes are 128x96, 176x144, 352x288, 704x576, and 1408x1152. Try H.263+.\n", "colorspace not supported in jpeg\n", "Cannot reallocate putbit buffer\n", "8*buffer_size > s->size_in_bits", "encoded frame too large\n", "encoded partitioned frame too large\n", "illegal MB type\n", "wmv1 encoder", "msmpeg4", "msmpeg4v3 encoder", "msmpeg4v2 encoder", "H.263p encoder", "Use unlimited motion vectors.", "Use alternative inter VLC.", "obmc", "use overlapped block motion compensation.", "structured_slices", "Write slice start position at every GOB header instead of just GOB number.", "H.263 / H.263-1996", "H.263 encoder", "mb_info", "emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size", "MPEG motion vector out of boundary (%d %d)\n", "Failed to set dimensions\n", "libavcodec/options.c", "Tried to copy AVCodecContext %p into already-initialized %p\n", "dest->subtitle_header_size == src->subtitle_header_size", "AVSubtitleRect", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "sample_rate", "AVCodecContext", "set bitrate (in bits/s)", "Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far ratecontrol is willing to deviate from the target average bitrate value. This is not related to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality.", "unaligned", "allow decoders to produce unaligned output", "use four motion vectors per macroblock (MPEG-4)", "qpel", "use 1/4-pel motion compensation", "loop", "use loop filter", "qscale", "use fixed qscale", "use gmc", "input_preserved", "pass1", "use internal 2-pass ratecontrol in first  pass mode", "pass2", "use internal 2-pass ratecontrol in second pass mode", "gray", "only decode/encode grayscale", "emu_edge", "do not draw edges", "error[?] variables will be set during encoding", "truncated", "Input bitstream might be randomly truncated", "ildct", "use interlaced DCT", "low_delay", "force low delay", "global_header", "place global headers in extradata instead of every keyframe", "bitexact", "use only bitexact functions (except (I)DCT)", "H.263 advanced intra coding / MPEG-4 AC prediction", "ilme", "interlaced motion estimation", "cgop", "closed GOP", "output_corrupt", "Output even potentially corrupted frames", "allow non-spec-compliant speedup tricks", "noout", "skip bitstream encoding", "ignorecrop", "ignore cropping information from sps", "local_header", "place global headers at every keyframe instead of in extradata", "Frame data might be split into multiple chunks", "showall", "Show all frames before the first keyframe", "export_mvs", "export motion vectors through frame side data", "skip_manual", "do not skip samples and export skip information as frame side data", "set motion estimation method", "zero motion estimation (fastest)", "full", "full motion estimation (slowest)", "EPZS motion estimation", "esa motion estimation (alias for full)", "tesa motion estimation", "diamond motion estimation (alias for EPZS)", "log motion estimation", "phods", "phods motion estimation", "X1 motion estimation", "hex motion estimation", "umh motion estimation", "iter motion estimation", "time_base", "set the group of picture (GOP) size", "set audio sampling rate (in Hz)", "set number of audio channels", "cutoff", "set cutoff bandwidth", "frame_size", "frame_number", "video quantizer scale compression (VBR). Constant of ratecontrol equation. Recommended range for default rc_eq: 0.0-1.0", "video quantizer scale blur (VBR)", "minimum video quantizer scale (VBR)", "maximum video quantizer scale (VBR)", "maximum difference between the quantizer scales (VBR)", "set maximum number of B frames between non-B-frames", "QP factor between P- and B-frames", "strategy to choose between I/P/B-frames", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "work around not autodetected encoder bugs", "autodetect", "old_msmpeg4", "some old lavc-generated MSMPEG4v3 files (no autodetection)", "xvid_ilace", "Xvid interlacing bug (autodetected if FOURCC == XVIX)", "ump4", "(autodetected if FOURCC == UMP4)", "no_padding", "padding bug (autodetected)", "ac_vlc", "illegal VLC bug (autodetected per FOURCC)", "qpel_chroma", "std_qpel", "old standard qpel (autodetected per FOURCC/version)", "qpel_chroma2", "direct_blocksize", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge", "edge padding bug (autodetected per FOURCC/version)", "hpel_chroma", "dc_clip", "work around various bugs in Microsoft's broken decoders", "trunc", "truncated frames", "how strictly to follow the standards", "very", "strictly conform to a older more strict version of the spec or reference software", "strictly conform to all the things in the spec no matter what the consequences", "unofficial", "allow unofficial extensions", "experimental", "allow non-standardized experimental things", "b_qoffset", "QP offset between P- and B-frames", "err_detect", "set error detection flags", "crccheck", "verify embedded CRCs", "bitstream", "detect bitstream specification deviations", "buffer", "detect improper bitstream length", "explode", "abort decoding on minor error detection", "ignore_err", "ignore errors", "careful", "consider things that violate the spec, are fast to check and have not been seen in the wild as errors", "compliant", "consider all spec non compliancies as errors", "aggressive", "consider things that a sane encoder should not do as an error", "has_b_frames", "block_align", "use MPEG quantizers instead of H.263", "deprecated, use encoder private options instead", "rc_override_count", "maxrate", "maximum bitrate (in bits/s). Used for VBV together with bufsize.", "minrate", "minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise.", "bufsize", "set ratecontrol buffer size (in bits)", "QP factor between P- and I-frames", "i_qoffset", "QP offset between P- and I-frames", "fast integer", "floating point AAN DCT", "lumi_mask", "compresses bright areas stronger than medium ones", "tcplx_mask", "temporal complexity masking", "scplx_mask", "spatial complexity masking", "p_mask", "inter masking", "dark_mask", "compresses dark areas stronger than medium ones", "deprecated, for compatibility only", "floating point AAN IDCT", "slice_count", "set error concealment strategy", "guess_mvs", "iterative motion vector (MV) search (slow)", "use strong deblock filter for damaged MBs", "favor_inter", "favor predicting from the previous frame", "bits_per_coded_sample", "pred", "prediction method", "plane", "median", "aspect", "sample aspect ratio", "debug", "print specific debug info", "pict", "picture info", "rate control", "mb_type", "macroblock (MB) type", "per-block quantization parameter (QP)", "motion vector", "dct_coeff", "green_metadata", "skip", "startcode", "error recognition", "mmco", "memory management control operations (H.264)", "bugs", "vis_qp", "visualize quantization parameter (QP), lower QP are tinted greener", "vis_mb_type", "visualize block types", "buffers", "picture buffer allocations", "thread_ops", "threading operations", "nomc", "skip motion compensation", "vismv", "visualize motion vectors (MVs) (deprecated)", "debug_mv", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "full-pel ME compare function", "subcmp", "sub-pel ME compare function", "mbcmp", "macroblock compare function", "ildctcmp", "interlaced DCT compare function", "dia_size", "diamond type & size for motion estimation", "last_pred", "amount of motion predictors from the previous frame", "preme", "precmp", "pre motion estimation compare function", "sum of absolute differences, fast", "sum of squared errors", "sum of absolute Hadamard transformed differences", "sum of absolute DCT transformed differences", "sum of squared quantization errors (avoid, low quality)", "number of bits needed for the block", "rate distortion optimal, slow", "sum of absolute vertical differences", "sum of squared vertical differences", "noise preserving sum of squared differences", "pre_dia_size", "diamond type & size for motion estimation pre-pass", "sub-pel motion estimation quality", "dtg_active_format", "limit motion vectors range (1023 for DivX player)", "global_quality", "variable length coder / Huffman coder", "arithmetic coder", "raw (no encoding)", "run-length coder", "deflate", "deflate-based coder", "context model", "slice_flags", "xvmc_acceleration", "macroblock decision algorithm (high quality mode)", "use mbcmp", "bits", "use fewest bits", "use best rate distortion", "stream_codec_tag", "scene change threshold", "noise reduction", "number of bits which should be loaded into the rc buffer before decoding starts", "set the number of threads", "autodetect a suitable number of threads to use", "me_threshold", "motion estimation threshold", "mb_threshold", "macroblock threshold", "intra_dc_precision", "nssew", "nsse weight", "skip_top", "number of macroblock rows at the top which are skipped", "skip_bottom", "number of macroblock rows at the bottom which are skipped", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "lowres", "decode at 1= 1/2, 2=1/4, 3=1/8 resolutions", "frame skip threshold", "frame skip factor", "frame skip exponent", "skipcmp", "frame skip compare function", "mblmin", "minimum macroblock Lagrange factor (VBR)", "mblmax", "maximum macroblock Lagrange factor (VBR)", "motion estimation bitrate penalty compensation (1.0 = 256)", "skip_loop_filter", "skip loop filtering process for the selected frames", "avdiscard", "skip_idct", "skip IDCT/dequantization for the selected frames", "skip_frame", "skip decoding for the selected frames", "discard no frame", "discard useless frames", "noref", "discard all non-reference frames", "bidir", "discard all bidirectional frames", "nokey", "discard all frames except keyframes", "nointra", "discard all frames except I frames", "discard all frames", "bidir_refine", "refine the two motion vectors used in bidirectional macroblocks", "downscale frames for dynamic B-frame decision", "minimum interval between IDR-frames", "reference frames to consider for motion compensation", "chroma QP offset from luma", "rate-distortion optimal quantization", "sc_factor", "multiplied by qscale for each frame and added to scene_change_score", "mv0_threshold", "adjust sensitivity of b_frame_strategy 1", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "GOP timecode frame start number, in non-drop-frame format", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color primaries", "color_primaries_type", "bt709", "BT.709", "unspecified", "Unspecified", "bt470m", "BT.470 M", "bt470bg", "BT.470 BG", "smpte170m", "SMPTE 170 M", "smpte240m", "SMPTE 240 M", "Film", "bt2020", "BT.2020", "smpte428_1", "SMPTE ST 428-1", "color_trc", "color transfer characteristics", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "Log square root", "iec61966_2_4", "IEC 61966-2-4", "bt1361", "BT.1361", "iec61966_2_1", "IEC 61966-2-1", "bt2020_10bit", "BT.2020 - 10 bit", "bt2020_12bit", "BT.2020 - 12 bit", "smpte2084", "SMPTE ST 2084", "colorspace", "color space", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "BT.2020 NCL", "bt2020_cl", "BT.2020 CL", "color_range", "color range", "color_range_type", "mpeg", "MPEG (219*2^(n-8))", "jpeg", "JPEG (2^n-1)", "chroma_sample_location", "chroma sample location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "Top-left", "bottomleft", "Bottom-left", "Bottom", "log_level_offset", "set the log level offset", "slices", "set the number of slices, used in parallelized encoding", "select multithreading type", "slice", "audio_service_type", "audio service type", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "request_sample_fmt", "sample format audio decoders should prefer", "pkt_timebase", "sub_charenc", "set input text subtitles character encoding", "sub_charenc_mode", "set input text subtitles character encoding mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "Skip processing alpha", "field_order", "Field order", "progressive", "dump_separator", "set information dump field separator", "codec_whitelist", "List of decoders that are allowed to be used", "pixel_format", "set pixel format", "video_size", "set video size", "index > -0x20000000", "libavcodec/parser.c", "Failed to reallocate parser buffer to %d\n", "1.2.3", "Invalid PNG signature 0x%08lX.\n", "inflateInit returned error %d\n", "%d bytes left\n", "chunk too big\n", "png: tag=%c%c%c%c length=%u\n", "IHDR after IDAT\n", "Multiple IHDR\n", "Invalid image size\n", "width=%d height=%d depth=%d color_type=%d compression_type=%d filter_type=%d interlace_type=%d\n", "pHYs after IDAT\n", "IDAT without IHDR\n", "unsupported bit depth %d and color type %d\n", "bit depth %d and color type %d with TRNS", "inflate returned error %d\n", "%d undecompressed bytes left in buffer\n", "Broken tEXt chunk\n", "Broken zTXt chunk\n", "Unknown value in sTER chunk (%d)\n", "IEND without all image\n", "MPNG", "Profile 0", "Profile 1", "Profile 2", "Profile 3", "Simple", "Main", "Complex", "Advanced", "Simple Profile", "Simple Scalable Profile", "Core Profile", "Main Profile", "N-bit Profile", "Scalable Texture Profile", "Simple Face Animation Profile", "Basic Animated Texture Profile", "Hybrid Profile", "Advanced Real Time Simple Profile", "Code Scalable Profile", "Advanced Coding Profile", "Advanced Core Profile", "Advanced Scalable Texture Profile", "Simple Studio Profile", "Advanced Simple Profile", "4:2:2", "High", "Spatially Scalable", "SNR Scalable", "JPEG 2000 codestream restriction 0", "JPEG 2000 codestream restriction 1", "JPEG 2000 no codestream restrictions", "JPEG 2000 digital cinema 2K", "JPEG 2000 digital cinema 4K", "Main 10", "Main Still Picture", "Rext", "Baseline", "Constrained Baseline", "Extended", "High 10", "High 10 Intra", "High 4:2:2", "High 4:2:2 Intra", "High 4:4:4", "High 4:4:4 Predictive", "High 4:4:4 Intra", "CAVLC 4:4:4", "DTS-ES", "DTS 96/24", "DTS-HD HRA", "DTS-HD MA", "DTS Express", "HE-AAC", "HE-AACv2", "Application has requested %d threads. Using a thread count greater than %d is not recommended.\n", "p->avctx->codec_type == AVMEDIA_TYPE_VIDEO || p->avctx->codec_type == AVMEDIA_TYPE_AUDIO", "libavcodec/pthread_frame.c", "%p finished %d field %d\n", "thread awaiting %d field %d from %p\n", "Multiple ff_thread_finish_setup() calls\n", "A frame threaded decoder did not free the frame on failure. This is a bug, please report it.\n", "Final thread update failed\n", "get_format() cannot be called after ff_thread_finish_setup()\n", "get_buffer() cannot be called after ff_thread_finish_setup()\n", "thread_get_buffer() failed\n", "thread_release_buffer called on pic %p\n", "p->thread_count == avctx->thread_count", "libavcodec/pthread_slice.c", "bits<0.9\n", "qp<=0.0\n", "Error evaluating rc_eq \"%s\"\n", "qmin <= qmax", "libavcodec/ratecontrol.c", "limiting QP %f -> %f\n", "in:%d out:%d type:%d q:%d itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%ld var:%ld icount:%d skipcount:%d hbits:%d;\n", "rc buffer underflow\n", "max bitrate possibly too small or try trellis with large lmax or increase qmax\n", "stuffing %d bytes\n", "tex^qComp", "Error parsing rc_eq \"%s\"\n", " in:%d ", "picture_number >= 0", "picture_number < rcc->num_entries", " in:%*d out:%*d type:%d q:%f itex:%d ptex:%d mv:%d misc:%d fcode:%d bcode:%d mc-var:%ld var:%ld icount:%d skipcount:%d hbits:%d", "statistics are damaged at line %d, parser out=%d\n", "requested bitrate is too low\n", "filter_size % 2 == 1", "toobig <= 40", "[lavc rc] requested bitrate: %ld bps  expected bitrate: %ld bps\n", "[lavc rc] estimated target average qp: %.3f\n", "[lavc rc] Using all of requested bitrate is not necessary for this video with these parameters.\n", "[lavc rc] Error: bitrate too low for this video with these parameters.\n", "[lavc rc] Error: 2pass curve failed to converge\n", "Xvid ratecontrol requires libavcodec compiled with Xvid support.\n", "qblur too large\n", "Input is longer than 2-pass log file\n", "pict_type == rce->new_pict_type", "q > 0.0", "%c qp:%d<%2.1f<%d %d want:%d total:%d comp:%f st_q:%2.2f size:%d var:%ld/%ld br:%ld fps:%d\n", "bits2qp", "qp2bits", "iTex", "pTex", "fCode", "iCount", "mcVar", "avgQP", "qComp", "avgIITex", "avgPITex", "avgPPTex", "avgBPTex", "avgTex", "I420", "IYUV", "YV16\f", "I420\f", "IYUV\f", "YV12\r", "Y42B\r", "YUYVw", "NV21.", "RGB\f@", "BGR\f?", "\fBGRA", "\fRGBt", "RBA@v", "BRA@s", "@RBAu", "422P\r", "422P!", "440P\"", "444P\t", "B1W0\n", "R4BY*", "RGB0)", "0RGBD", "BGR0C", "0BGR ", "Y3\u000b\tE", "\t\u000b3YP", "Y3\n\tO", "\t\n3YL", "Y3\u000b\nG", "\n\u000b3YJ", "Y3\n\nI", "\n\n3YN", "Y4\u000b\t[", "\t\u000b4Y^", "Y4\n\t]", "\t\n4Y`", "Y4\u000b\na", "\n\u000b4Yd", "Y4\n\nc", "\n\n4Yf", "XYZ$o", "DVOO.", "L555,", "L565+", "b16g)", "I422!", "I444\f", "J420\r", "J422\"", "J444Z", "YUVA#", "I40AY", "RGB2.", "RV15,", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "I4AB:", "I4FL;", "I4FB,", "audioresample", "Resampling with input channels greater than %d is unsupported.\n", "Unsupported audio resampling. Allowed output channels for %d input channel%s", "Can't allocate memory for resample context.\n", "Cannot convert %s sample format to s16 sample format\n", "Cannot convert s16 sample format to %s sample format\n", "Could not allocate buffer\n", "Audio sample format conversion failed\n", "ReSampleContext", "libavcodec/rl.c", "FFmpeg version 3.0.1", "val || !min_size", "./libavutil/mem_internal.h", "Failed to set dimensions %d %d\n", "ignoring invalid SAR: %d/%d\n", "desc->flags & (1 << 4)", "libavcodec/utils.c", "pic->data[0]!=NULL in avcodec_default_get_buffer\n", "Unable to get pixel format descriptor for format %s\n", "default_get_buffer called on pic %p\n", "frame->nb_extended_buf == 0", "default_get_buffer called on frame %p", "ignoring invalid SAR: %u/%u\n", "Inconsistent channel configuration.\n", "Too many channels: %d.\n", "video_get_buffer: image parameters invalid\n", "get_buffer() failed\n", "avctx->codec_type == AVMEDIA_TYPE_VIDEO", "Picture changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s in reget buffer()\n", "reget_buffer() failed\n", "Invalid negative user packet size %d\n", "Invalid minimum required packet size %ld (max allowed is %d)\n", "!avpkt->data || avpkt->data != avctx->internal->byte_buffer", "User packet is too small (%d < %ld)\n", "Failed to allocate packet of size %ld\n", "Encoding to a planar sample format, with more than %d channels, but extended_data is not set.\n", "extended_data is not set.\n", "more samples than frame size (avcodec_encode_audio2)\n", "nb_samples (%d) != frame_size (%d) (avcodec_encode_audio2)\n", "avctx->codec->encode2", "Provided packet is too small, needs to be %d\n", "AVFrame.format is not set\n", "AVFrame.width or height is not set\n", "ret <= 0", "start_display_time must be 0.\n", "Invalid media type for video\n", "This decoder does not support parameter changes, but PARAM_CHANGE side data was sent to it.\n", "Invalid channel count", "Invalid sample rate", "PARAM_CHANGE side data too small.\n", "!picture->extended_data || picture->extended_data == picture->data", "Error applying parameter changes.\n", "invalid packet: NULL data, size != 0\n", "Invalid media type for audio\n", "ret <= tmp.size", "skip %d / discard %d samples due to side data\n", "skip whole frame, skip left: %d\n", "Could not update timestamps for skipped samples.\n", "skip %d/%d samples\n", "Could not update timestamps for discarded samples.\n", "discard %d/%d samples\n", "Invalid media type for subtitles\n", "requesting subtitles recoding without iconv", "Invalid UTF-8 in decoded subtitles text; maybe missing -sub_charenc option\n", "unknown_codec", "Codec 0x%x is not in the full list.\n", "[%d]", "--target-os=linux --prefix=./android/armv8-a --enable-cross-compile --extra-libs=-lgcc --arch=arm64 --cc=/home/fengyifei/android-ndk-r10e/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-gcc --cross-prefix=/home/fengyifei/android-ndk-r10e/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android- --nm=/home/fengyifei/android-ndk-r10e/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-nm --sysroot=/home/fengyifei/android-ndk-r10e/platforms/android-21/arch-arm64 --extra-cflags=' -O3 -fpic -DANDROID -D__ANDROID__ -DHAVE_SYS_UIO_H=1 -Dipv6mr_interface=ipv6mr_ifindex -fasm -Wno-psabi -fno-short-enums -fno-strict-aliasing -finline-limit=300 -fuse-ld=bfd -march=armv8-a -I/home/fengyifei/Code/quvideo/ffmpeg-3.0.1-stable' --disable-shared --enable-static --extra-ldflags='-Wl,-rpath-link=/home/fengyifei/android-ndk-r10e/platforms/android-21/arch-arm64/usr/lib -L./android/armv8-a -L/home/fengyifei/android-ndk-r10e/platforms/android-21/arch-arm64/usr/lib -nostdlib -lc -lm -ldl -llog' --disable-doc --disable-ffmpeg --disable-ffplay --disable-ffserver --disable-ffprobe --disable-decoders --disable-hwaccels --enable-decoder=aac --enable-decoder=mp3 --enable-decoder=h264 --enable-decoder=mpeg4 --enable-decoder=h263 --enable-decoder=gif --enable-decoder=png --enable-decoder=hevc --disable-encoders --enable-encoder=libx264 --enable-encoder=gif --enable-encoder=mpeg4 --enable-libx264 --disable-demuxers --enable-demuxer=mov --enable-demuxer=mp3 --enable-demuxer=aac --enable-demuxer=gif --enable-demuxer=hevc --disable-muxers --enable-muxer=mp4 --enable-muxer=tgp --enable-muxer=gif --enable-muxer=ipod --disable-bsfs --enable-bsf=h264_mp4toannexb --enable-bsf=hevc_mp4toannexb --enable-bsf=aac_adtstoasc --disable-filters --disable-parsers --enable-parser=aac --enable-parser=mpegaudio --enable-parser=mpegvideo --enable-parser=hevc --disable-protocols --enable-protocol=file --enable-stripping --disable-devices --disable-avdevice --disable-avfilter --enable-avformat --enable-avcodec --disable-swresample --enable-swscale --disable-postproc --enable-version3 --disable-network --enable-zlib --enable-gpl --disable-avdevice --enable-neon", "libavcodec license: GPL version 3 or later", "%s: %s", " (%s)", ", %d reference frame%s", " (%s / 0x%04X)", "%d bpc, ", "%s/%s/%s, ", "%dx%d", " (%dx%d)", " [SAR %d:%d DAR %d:%d]", ", %d/%d", ", q=%d-%d", ", Closed Captions", ", lossless", "%d Hz, ", ", %s", " (%d bit)", ", %dx%d", ", pass 1", ", pass 2", ", %ld kb/s", ", max. %ld kb/s", "If you want to help, upload a sample of this file to ftp://upload.ffmpeg.org/incoming/ and contact the ffmpeg-devel mailing list. (ffmpeg-devel@ffmpeg.org)\n", "%s is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "n >= 1", "Could not find an AVHWAccel for the pixel format: %s", "Ignoring experimental hwaccel: %s\n", "choices[n] != AV_PIX_FMT_NONE", "Hardware accelerated decoding with frame threading is known to be unstable and its use is discouraged.\n", "ff_avcodec_locked", "Insufficient thread locking. At least %d threads are calling avcodec_open2() at the same time right now.\n", "No lock manager is set, please see av_lockmgr_register()\n", "!ff_avcodec_locked", "!dst->progress", "encoder", "decoder", "No codec provided to avcodec_open2()\n", "This AVCodecContext was allocated for %s, but %s passed to avcodec_open2()\n", "Codec (%s) not on whitelist '%s'\n", "Ignoring invalid width/height values\n", "Codec type or id mismatches\n", "The %s '%s' is experimental but experimental codecs are not enabled, add '-strict %d' if you want to use it.\n", "Alternatively use the non experimental %s '%s'.\n", "The maximum value for lowres supported by the decoder is %d\n", "The 'vismv' option is deprecated, see the codecview filter instead.\n", "Specified sample format %s is invalid or not supported\n", "Specified pixel format %s is invalid or not supported\n", "Specified sample rate %d is not supported\n", "Channel layout not specified\n", "Channel layout '%s' with %d channels does not match number of specified channels %d\n", "Specified number of channels %d is not supported\n", "Specified bit depth %d not possible with the specified pixel formats depth %d\n", "dimensions not set\n", "Bitrate %ld is extremely low, maybe you mean %ldk\n", "ticks_per_frame %d too large for the timebase %d/%d.", "gray decoding requested but not enabled at configuration time\n", "Channel layout '%s' with %d channels does not match specified number of channels %d: ignoring specified channel layout\n", "Character encoding is only supported with subtitles codecs\n", "Codec '%s' is bitmap-based, subtitles character encoding will be ignored\n", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "*(const AVClass **)avctx->priv_data == codec->priv_class", "Specified channel layout '%s' is not supported\n", "p <= end", "Invalid packet\n", "Invalid mode in packet\n", "Extradata corrupt.\n", "Id header is too short\n", "Wrong packet type in Id header\n", "Invalid packet signature in Id header\n", "Invalid framing bit in Id header\n", "Setup header is too short\n", "Wrong packet type in Setup header\n", "Invalid packet signature in Setup header\n", "Out of memory\n", "Invalid Setup header\n", "%d modes (either a false positive or a sample from an unknown encoder)", "Unsupported mode count: %d\n", "Vorbis parser", "raw ADTS AAC (Advanced Audio Coding)", "audio/aac,audio/aacp,audio/x-aac", "Invalid APE tag key '%s'.\n", "APE tag size too large.\n", "Skipping binary tag '%s'.\n", "Error reading cover art.\n", "APETAGEX", "Unsupported tag version. (>=%d)\n", "Tag size is way too big\n", "Invalid tag size %u.\n", "Too many tag fields (%u)\n", "APE Tag is a header\n", "Non ASCII keys are not allowed\n", "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.", "subfile,", "libavformat/avio.c", "No URL Protocols are registered. Missing call to av_register_all()?\n", "Impossible to open the '%s' protocol for reading\n", "Impossible to open the '%s' protocol for writing\n", "subfile", "start", "Key '%s' not found.\n", "Error parsing options string %s\n", "https:", "https protocol not found, recompile FFmpeg with openssl, gnutls,\nor securetransport enabled.\n", "protocol_whitelist", "!(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || (uc->protocol_whitelist && !strcmp(uc->protocol_whitelist, e->value))", "Protocol not on whitelist '%s'!\n", "Setting default whitelist '%s'\n", "No default whitelist set\n", "!whitelist || !(e=av_dict_get(*options, \"protocol_whitelist\", ((void *)0), 0)) || !strcmp(whitelist, e->value)", "URLContext", "List of protocols that are allowed to be used", "len >= s->orig_buffer_size", "libavformat/aviobuf.c", "Invaid UTF8 sequence in avio_put_str16%s\n", "!s->write_flag", "Failed to decrease buffer size\n", "Statistics: %d seeks, %d writeouts\n", "Statistics: %ld bytes read, %d seeks\n", "AVIOContext", "fps, ", "tbr, ", "tbn, ", "language", "    Stream #%d:%d", "[0x%x]", "(%s)", ", %d, %d/%d", ", SAR %d:%d DAR %d:%d", "%1.4f %s", "%3.2f %s", "%1.0f %s", "%1.0fk %s", " (default)", " (dub)", " (original)", " (comment)", " (lyrics)", " (karaoke)", " (forced)", " (hearing impaired)", " (visual impaired)", " (clean effects)", "%sMetadata:\n", "    ", "%s  %-16s: ", "\n%s  %-16s: ", "%sSide data:\n", "%s  ", "palette", "new extradata", "paramchange: ", "channel count %u, ", "channel layout: %s, ", "sample_rate %u, ", "width %u height %u", "unknown param", "h263 macroblock info", "replaygain: ", "invalid data", "%s - ", "track gain", "track peak", "album gain", "album peak", "displaymatrix: rotation of %.2f degrees", "stereo3d: ", "side by side", "top and bottom", "frame alternate", "checkerboard", "interleaved lines", "interleaved columns", "side by side (quincunx subsampling)", " (inverted)", "audio service type: ", "effects", "visually impaired", "hearing impaired", "dialogue", "comentary", "emergency", "voice over", "karaoke", "quality factor: %d, pict_type: %c", "unknown side data type %d (%d bytes)", "%08x ", " %02x", "stream #%d:\n", "  keyframe=%d\n", "  duration=%0.3f\n", "  dts=", "%0.3f", "  pts=", "  size=%d\n", "  Duration: ", "%02d:%02d:%02d.%02d", ", start: ", "%d.%06d", ", bitrate: ", "%ld kb/s", "    Chapter #%d:%d: ", "start %f, ", "end %f\n", "  Program %d %s\n", "  No Program\n", "%s #%d, %s, %s '%s':\n", "Output", "Input", "from", "file:", "file,crypto", "truncate", "truncate existing files on write", "blocksize", "set I/O operation maximum block size", "segment", "ssegment", "image2", "Probing %s score:%d size:%d\n", "Specified probe size value %u cannot be < %u\n", "mime_type", "Format %s detected only with low score of %d, misdetection possible!\n", "Format %s probed with size=%d and score=%d\n", "PAL8 packet is missing palette in extradata\n", "Invalid palette extradata\n", "NETSCAPE2.0", "GIF muxer supports only a single video GIF stream.\n", "video_enc->pix_fmt == AV_PIX_FMT_PAL8", "libavformat/gif.c", "GIF Animation", "GIF muxer", "Number of times to loop the output: -1 - no loop, 0 - infinite loop", "final_delay", "Force delay (in centiseconds) after the last frame", "GIF87a", "GIF89a", "Graphic Control Extension block's size less than 4.\n", "lzw minimum code size must be >= 1\n", "invalid block label\n", "CompuServe Graphics Interchange Format (GIF)", "GIF demuxer", "min_delay", "minimum valid delay between frames (in hundredths of second)", "max_gif_delay", "maximum valid delay between frames (in hundredths of seconds)", "default_delay", "default delay between frames (in hundredths of second)", "ignore_loop", "ignore loop setting (netscape extension)", "configurationVersion:                %u\n", "general_profile_space:               %u\n", "general_tier_flag:                   %u\n", "general_profile_idc:                 %u\n", "general_profile_compatibility_flags: 0x%08x\n", "general_constraint_indicator_flags:  0x%012lx\n", "general_level_idc:                   %u\n", "min_spatial_segmentation_idc:        %u\n", "parallelismType:                     %u\n", "chromaFormat:                        %u\n", "bitDepthLumaMinus8:                  %u\n", "bitDepthChromaMinus8:                %u\n", "avgFrameRate:                        %u\n", "constantFrameRate:                   %u\n", "numTemporalLayers:                   %u\n", "temporalIdNested:                    %u\n", "lengthSizeMinusOne:                  %u\n", "numOfArrays:                         %u\n", "array_completeness[%u]:               %u\n", "NAL_unit_type[%u]:                    %u\n", "numNalus[%u]:                         %u\n", "nalUnitLength[%u][%u]:                 %u\n", "raw HEVC video", "hevc,h265,265", "hevc demuxer", "artist", "album", "date", "comment", "genre", "Blues", "Classic Rock", "Country", "Dance", "Disco", "Funk", "Grunge", "Hip-Hop", "Jazz", "Metal", "New Age", "Oldies", "Other", "Reggae", "Techno", "Industrial", "Alternative", "Death Metal", "Pranks", "Soundtrack", "Euro-Techno", "Ambient", "Trip-Hop", "Vocal", "Jazz+Funk", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Sound Clip", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Instrumental Pop", "Instrumental Rock", "Ethnic", "Gothic", "Darkwave", "Techno-Industrial", "Electronic", "Pop-Folk", "Eurodance", "Dream", "Southern Rock", "Comedy", "Cult", "Gangsta", "Top 40", "Christian Rap", "Pop/Funk", "Jungle", "Native American", "Cabaret", "New Wave", "Psychadelic", "Rave", "Showtunes", "Trailer", "Lo-Fi", "Tribal", "Acid Punk", "Acid Jazz", "Polka", "Retro", "Musical", "Rock & Roll", "Hard Rock", "Folk", "Folk-Rock", "National Folk", "Swing", "Fast Fusion", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Gothic Rock", "Progressive Rock", "Psychedelic Rock", "Symphonic Rock", "Slow Rock", "Big Band", "Chorus", "Easy Listening", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Chamber Music", "Sonata", "Symphony", "Booty Bass", "Primus", "Porn Groove", "Satire", "Slow Jam", "Club", "Tango", "Samba", "Folklore", "Ballad", "Power Ballad", "Rhythmic Soul", "Freestyle", "Duet", "Punk Rock", "Drum Solo", "A capella", "Euro-House", "Dance Hall", "Drum & Bass", "Club-House", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Polsk Punk", "Beat", "Christian Gangsta", "Heavy Metal", "Black Metal", "Crossover", "Contemporary Christian", "Christian Rock", "Merengue", "Salsa", "Thrash Metal", "Anime", "JPop", "SynthPop", "image/gif", "image/jpeg", "image/jpg", "image/png", "image/tiff", "image/bmp", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "Error opening memory stream\n", "Cannot read BOM value, input too short\n", "Incorrect BOM value\n", "Unknown encoding\n", "PRIV", "Unknown attached picture mimetype: %s, skipping.\n", "Unknown attached picture type %d.\n", "Error decoding attached picture description.\n", "APIC", "encrypted", "encrypted and compressed", "extended header too long.", "invalid extended header length", "version", "compression", "id3v2 ver:%d flags:%02X len:%d\n", "Invalid empty frame %s, skipping.\n", "Skipping %s ID3v2 frame %s.\n", "USLT", "Failed to alloc %d bytes\n", "Compresssed frame %s tlen=%d dlen=%ld\n", "Failed to alloc %ld bytes\n", "Failed to read compressed tag\n", "Failed to uncompress tag: %d\n", "Error reading frame %s, skipped\n", "TCON", "(%d)", "TXXX", "lyrics-%s%s%s", "invalid frame id, assuming padding\n", "Error reading lyrics, skipped\n", "ID3v2.%d tag skipped, cannot handle %s\n", "GEOB", "CHAP", "Failed to alloc %zu bytes\n", "Error reading GEOB frame, data truncated.\n", "TYER", "TDAT", "-%.2s-%.2s", "TIME", " %.2s:%.2s", "No AVFormatContext, skipped ID3 chapter data\n", "32x32 pixels 'file icon'", "Other file icon", "Cover (front)", "Cover (back)", "Leaflet page", "Media (e.g. label side of CD)", "Lead artist/lead performer/soloist", "Artist/performer", "Conductor", "Band/Orchestra", "Composer", "Lyricist/text writer", "Recording Location", "During recording", "During performance", "Movie/video screen capture", "A bright coloured fish", "Illustration", "Band/artist logotype", "Publisher/Studio logotype", "compilation", "encoded_by", "album_artist", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "album-sort", "TSOP", "artist-sort", "TSOT", "title-sort", "TALB", "TCOM", "composer", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "lyrics", "ljpg", "mpg1-img", "mpg2-img", "mpg4-img", "ffv1-img", "im24", "im32", "sunras", "yuv10", "c608", "sac3", "alac", ".mp1", "twos", "lpcm", "lpcm\r", "in24\f", "in24\t", "ssmv", "v410", "dmb1\t", "SVQ3\r", "mp4v\r", "DIVX\r", "XVID\r", "VP31+", "rpza,", "cvid1", "8BPS2", "smc 8", "rle1.", "WRLE;", "mp2vY", "mjp2^", "tga a", "tiffb", "gif >", "png >", "MNG G", "vc-1X", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "MPEG4 description: tag=0x%02x len=%d\n", "codec open in read_dec_config_descr\n", "esds object type id 0x%02x\n", "Specific MPEG4 header len=%d\n", "mp4a config channels %d obj %d ext obj %d sample rate %d ext sample rate %d\n", "Unknown MOV field order 0x%04x\n", "enda %d\n", "Duplicated STPS atom\n", "Atoms too deeply nested\n", "Detected moov in a free atom.\n", "Broken file, trak/mdat not at top-level\n", "type: %08x '%.4s' parent:'%.4s' sz: %ld %ld %ld\n", "overread end of atom '%.4s' by %ld bytes\n", "Found duplicated MOOV Atom. Skipped it\n", "%d/%d", "qt  ", "ISO: File Type Major Brand: %.4s\n", "major_brand", "minor_version", "compatible_brands", "Duplicated SBGP atom\n", "could not find corresponding track id %d\n", "track[%i].stts.entries = %i\n", "Duplicated STTS atom\n", "Invalid sample_count=%d\n", "sample_count=%d, sample_duration=%d\n", "keyframe_count = %d\n", "Duplicated STSS atom\n", "track[%i].stsc.entries = %i\n", "Duplicated STSC atom\n", "ctype= %.4s (0x%08x)\n", "stype= %.4s\n", "handler_name", "Duplicated ELST atom\n", "track[%i].edit_count = %i\n", "duration=%ld time=%ld rate=%f\n", "Duplicated STCO atom\n", "systemBitrate=\"", "get_wav_header failed\n", "sample aspect ratio already set to %d:%d, ignoring 'pasp' atom (%d:%d)\n", "rotate", "sidx version %u", "sidx reference_type 1", "stream has moof boxes, will look for a mfra\n", "doesn't look like mfra (unreasonable size)\n", "doesn't look like mfra (size mismatch)\n", "doesn't look like mfra (tag mismatch)\n", "stream has mfra\n", "found tfra\n", "failed to seek back after looking for mfra\n", "found a moof box but failed to read the mfra (may be a live ismv)\n", "found a moof box but stream is not seekable, can not look for mfra\n", "moof offset %lx\n", "%Y-%m-%d %H:%M:%S", "time scale = %i\n", "[aax] file checksum == ", "[aax] activation_bytes option is missing!\n", "[aax] activation_bytes value needs to be 4 bytes!\n", "[aax] audible_fixed_key value needs to be 16 bytes!\n", "[aax] mismatch in checksums!\n", "[aax] error in drm blob decryption!\n", "type %.4s size %d\n", "volume %s, len %d\n", "filename %s, len %d\n", "nlvl from %d, nlvl to %d\n", "type %d, len %d\n", "path %s\n", "dir %s\n", "Unknown dref type 0x08%x size %d\n", "flags 0x%x entries %d\n", "first sample flags 0x%x\n", "mov_update_dts_shift(): dts_shift set to %d\n", "found frag time %ld sc->dts_shift %d ctts.duration %d sc->time_offset %ld flags & MOV_TRUN_SAMPLE_CTS %d\n", "calculated into dts %ld\n", "found frag time %ld, using it for dts\n", "Failed to add index entry\n", "AVIndex stream %d, sample %d, offset %lx, dts %ld, size %d, distance %d, keyframe %d\n", "Found media data tag MPEG indicating this is a MOV-packed MPEG-PS.\n", "ignoring multiple glbl\n", "The 'keys' atom with the invalid key count: %d\n", "The key# %d in meta has invalid size: %d\n", "iTunSMPB", "%*X %X %X %X", "cdec", "Unhandled or malformed custom metadata of size %ld\n", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "warning", "location", "loci too short\n", "place name too long\n", "no space for coordinates left (%d)\n", "%+08.4f%+09.4f", "%s-%s", "Unknown cover type: 0x%x.\n", "The index of 'data' is out of range: %d >= %d.\n", "UDTA parsing failed retrying raw\n", "%.4s", "Failed to store the float32 number (%f) in string.\n", "HandBrake %d.%d.%d", "lang \"%3s\" ", "tag \"%s\" value \"%s\" atom \"%.4s\" %d %ld\n", "Error parsing cover art.\n", "found fragment index for track %u\n", "found fragment index entry for track %u and moof_offset %ld\n", "track %u has a fragment index but it doesn't have an (in-order) entry for moof_offset %ld\n", "frag flags 0x%x\n", "could not find corresponding trex\n", "duplicate senc atom\n", "senc atom size %ld too small\n", "failed to read the auxiliary info", "truncated extradata\n", "ignored unknown aclr value (%d)\n", "aclr not decoded - incomplete atom\n", "aclr not decoded - unexpected size %ld\n", "aclr not decoded - unable to add atom to extradata\n", "unknown compression for cmov atom !\n", "size: %dx%d\n", "palette: ", "%06x%s", "Using absolute path on user request, this is a possible security issue\n", "Absolute path %s not tried for security reasons, set demuxer option use_absolute_path to allow absolute paths\n", "Reference with mismatching origin, %s not tried for security reasons, set demuxer option use_absolute_path to allow it anyway\n", "stream %d, missing mandatory atoms, broken header\n", "stream %d, timescale not set\n", "multiple edit list entries, a/v desync might occur, patch welcome\n", "STSZ sample size %d invalid (too large), ignoring\n", "STSZ sample size %d invalid (too small), ignoring\n", "wrong sample count\n", "Invalid SampleDelta %d in STTS, at %d st:%d\n", "error unaligned chunk\n", "chunk count %d\n", "Zero bytes per frame, but %d samples per frame", "wrong chunk count %d\n", "AVIndex stream %d, chunk %d, offset %lx, dts %ld, size %d, duration %d\n", "stream %d, error opening alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n", "Skipped opening external track: stream %d, alias: path='%s', dir='%s', filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d.Set enable_drefs to allow this.\n", "nclx", "nclc", "unsupported color_parameter_type %s\n", "%s: pri %d trc %d matrix %d", " full %u", "track[%i].ctts.entries = %i\n", "count=%d, duration=%d\n", "CTTS invalid\n", "dts shift %d\n", "sample_size = %d sample_count = %d\n", "Invalid sample field size %d\n", "Duplicated STSZ atom\n", "Unsupported DTS audio channel layout", "Multiple mdhd?\n", "Version %d", "ignoring 'frma' atom of '%.4s', stream has codec id %d\n", "ignoring 'frma' atom of '%.4s', stream format is '%.4s'\n", "stream %d, sample %d, dts %ld\n", "root atom offset 0x%lx: partial file\n", "read fragments, offset 0x%lx\n", "stream %d, offset 0x%lx: partial file\n", "Cannot append palette to packet\n", "failed to read iv from the auxiliary info\n", "failed to read subsample count from the auxiliary info\n", "failed to read subsample from the auxiliary info\n", "subsample size exceeds the packet size left\n", "leftover packet bytes after subsample processing\n", "root", "stream %d, timestamp %ld, sample %d\n", "stream %d, found sample %d\n", "Invalid decryption key len %d expected %d\n", "error reading header\n", "moov atom not found\n", "on_parse_exit_offset=%ld\n", "ignoring stream duration which is shorter than chapters\n", "Chapter %d not found in file\n", "timecode", "Forcing full parsing for mp3 stream\n", "Referenced QT chapter track not found\n", "tmcd", "invalid size %ld in stsd\n", "multiple fourcc not supported\n", "Concatenated H.264 or H.265 might not play correctly.\n", "size=%ld 4CC= %c%c%c%c/0x%08x codec_type=%d\n", "Planar Y'CbCr 8-bit 4:2:0", "Sorenson H263", "audio channels %d\n", "version =%d, isom =%d\n", "reel_name", "avc1", "stsd", "hvc1", "hev1", "mp4s", "mov,mp4,m4a,3gp,3g2,mj2", "QuickTime / MOV", "use_absolute_path", "allow using absolute path when opening alias, this is a possible security issue", "seek_streams_individually", "Seek each stream individually to the to the closest point", "ignore_editlist", "ignore_chapters", "use_mfra_for", "use mfra for fragment timestamps", "export_all", "Export unrecognized metadata entries", "export_xmp", "Export full XMP metadata", "activation_bytes", "Secret bytes for Audible AAX files", "audible_fixed_key", "Fixed key used for handling Audible AAX files", "77214d4b196a87cd520045fd20a51d67", "decryption_key", "The media decryption key (hex)", "enable_drefs", "Enable external track support.", "chan: layout=%u bitmap=%u num_descr=%u\n", "reached EOF while reading channel layout\n", "avc1\r", "text", "avc1\r", "mp4a", "tx3g", "avc1k", "VP6A]", "VP6F", "a=control:streamid=%d\r\n", "next_dts >= 0", "libavformat/movenc.c", "<param name=\"%s\" value=\"%s\" valuetype=\"data\"/>\n", "CodecPrivateData", "./libavcodec/put_bits.h", "3gp6", "3gp4", "3g2b", "3g2a", "M4V ", "M4A ", "PSP mode need one video and one audio stream\n", "Non-consecutive fragments, writing incorrect sidx\n", "next_dts <= 2147483647", "yrrc", "albm", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "<smil xmlns=\"http://www.w3.org/2001/SMIL20/Language\">\n", "<head>\n", "<meta name=\"creator\" content=\"%s\" />\n", "Lavf57.25.100", "</head>\n", "<body>\n", "<switch>\n", "<%s systemBitrate=\"%ld\">\n", "<param name=\"%s\" value=\"%d\" valuetype=\"data\"/>\n", "systemBitrate", "trackID", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "</%s>\n", "</switch>\n", "</body>\n", "</smil>\n", "Lucida Grande", "aART", "encoding_tool", "ldes", "tvsh", "tven", "tvnn", "tmpo", "moov atom written before any packets, unable to write correct dvc1 atom. Set the delay_moov flag to fix this.\n", "timecode: tbc=%d/%d invalid, fallback on %d/%d\n", "XDCAM", " HD422", " %d%c", "Could not locate DNxHD bit stream in vos_data\n", "Could not locate DNxHD bit stream, vos_data too small\n", "DpxE", "gamma value %g\n", "writing gama value %d\n", "track->mode == 0x02", "gamma value unknown, unable to write gama atom\n", "Not writing 'gama' atom. Format is not MOV.\n", "color primaries unspecified, assuming bt709\n", "color primaries unspecified, assuming bt470bg\n", "color primaries unspecified, assuming smpte170\n", "color primaries unspecified, unable to assume anything\n", "track->mode == 0x02 || track->mode == 0x01", "Not writing 'colr' atom. Format is not MOV or MP4.\n", "not writing 'chan' tag due to lack of channel information\n", "fps %d is too large\n", "reel_name length %lu is too large\n", "lpcm", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "clcp", "ClosedCaptionHandler", "sbtl", "SubtitleHandler", "subp", "hint", "HintHandler", "TimeCodeHandler", "url ", "DataHandler", "EDTS using dts:%ld cts:%d instead of dts:%ld cts:%ld tid:%d\n", "av_rescale_rnd(start_dts, 1000, track->timescale, AV_ROUND_DOWN) <= 0", "Not writing any edit list even though one would have been required\n", "FATAL error, file duration too long for timebase, this file will not be\nplayable with quicktime. Choose a different timebase or a different\ncontainer format\n", "Unknown hldr_type for %s / 0x%04X, writing dummy values\n", "handler", "dhlr", "2006/04/01 11:11:11", "perf", "titl", "auth", "author", "gnre", "dscp", "cprt", "Estimating the duration of the last packet in a fragment, consider setting the duration field in AVPacket instead.\n", "Unable to re-open %s output file for the second pass (faststart)\n", "Application provided duration: %ld / timestamp: %ld is out of range for mov/mp4 format\n", "Application provided duration: %ld is invalid\n", "fatal error, input is not a single packet, implement a AVParser for it\n", "Malformed AAC bitstream detected: use the audio bitstream filter 'aac_adtstoasc' to fix it ('-bsf:a aac_adtstoasc' option with ffmpeg)\n", "aac bitstream error\n", "Track %d starts with a nonzero dts %ld, while the moov already has been written. Set the delay_moov flag to handle this case.\n", "pts has no value\n", "wide", "free", "ipod", "ismv", "No meaningful edit list will be written when using empty_moov without delay_moov\n", "Sample interleaving in fragments is mutually exclusive with omit_tfhd_offset and separate_moof\n", "muxer does not support non seekable output\n", "You requested a copy of the original timecode track so timecode metadata are now ignored\n", "cenc-aes-ctr", "Invalid encryption key len %d expected %d\n", "Invalid encryption kid len %d expected %d\n", "unsupported encryption scheme %s\n", "Warning, extension is not .m4a, .m4v nor  .m4b Quicktime/Ipod might not play the file\n", "unsupported height for dv codec\n", "%s rawvideo cannot be written to mov, output file will be unreadable\n", "Using MS style video codec tag, the file may be unplayable!\n", "Using MS style audio codec tag, the file may be unplayable!\n", "Could not find tag for codec %s in stream #%d, codec not currently supported in container\n", "D-10/IMX must use 720x608 or 720x512 video resolution\n", "Resolution %dx%d too large for mov/mp4\n", "WARNING codec timebase is very high. If duration is too long,\nfile may not be playable by quicktime. Specify a shorter timebase\nor choose different container.\n", "track %d: codec frame size is not set\n", "track %d: codec block align is not set for adpcm\n", "track %d: muxing mp3 at %dhz is not standard, to mux anyway set strict to -1\n", "track %d: muxing mp3 at %dhz is not standard in MP4\n", "palette:", "%06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x, %06x", "size:", "Starting second pass: moving the moov atom to the beginning of the file\n", "reserved_moov_size is too small, needed %ld additional\n", "Starting second pass: inserting sidx atoms\n", "iPod H.264 MP4 (MPEG-4 Part 14)", "video/mp4", "m4v,m4a", "ipod muxer", "MP4 (MPEG-4 Part 14)", "mp4 muxer", "3GP (3GPP file format)", "tgp muxer", "mov muxer", "movflags", "MOV muxer flags", "rtphint", "Add RTP hint tracks", "moov_size", "maximum moov size so it can be placed at the begin", "empty_moov", "Make the initial moov atom empty", "frag_keyframe", "Fragment at video keyframes", "separate_moof", "Write separate moof/mdat atoms for each track", "frag_custom", "Flush fragments on caller requests", "isml", "Create a live smooth streaming feed (for pushing to a publishing point)", "faststart", "Run a second pass to put the index (moov atom) at the beginning of the file", "omit_tfhd_offset", "Omit the base data offset in tfhd atoms", "disable_chpl", "Disable Nero chapter atom", "default_base_moof", "Set the default-base-is-moof flag in tfhd atoms", "dash", "Write DASH compatible fragmented MP4", "frag_discont", "Signal that the next fragment is discontinuous from earlier ones", "delay_moov", "Delay writing the initial moov until the first fragment is cut, or until the first fragment flush", "global_sidx", "Write a global sidx index at the start of the file", "write_colr", "Write colr atom (Experimental, may be renamed or changed, do not use from scripts)", "write_gama", "Write deprecated gama atom", "rtpflags", "RTP muxer flags", "latm", "Use MP4A-LATM packetization instead of MPEG4-GENERIC for AAC", "rfc2190", "Use RFC 2190 packetization instead of RFC 4629 for H.263", "skip_rtcp", "Don't send RTCP sender reports", "h264_mode0", "Use mode 0 for H264 in RTP", "send_bye", "Send RTCP BYE packets when finishing", "skip_iods", "Skip writing iods atom.", "iods_audio_profile", "iods audio profile atom.", "iods_video_profile", "iods video profile atom.", "frag_duration", "Maximum fragment duration", "min_frag_duration", "Minimum fragment duration", "frag_size", "Maximum fragment size", "ism_lookahead", "Number of lookahead entries for ISM files", "video_track_timescale", "set timescale of all video tracks", "brand", "Override major brand", "use_editlist", "use edit list", "fragment_index", "Fragment number of the next fragment", "mov_gamma", "gamma value for gama atom", "frag_interleave", "Interleave samples within fragments (max number of consecutive samples, lower is tighter interleaving, but with more overhead)", "encryption_scheme", "Configures the encryption scheme, allowed values are none, cenc-aes-ctr", "encryption_key", "The media encryption key (hex)", "encryption_kid", "The media encryption key identifier (hex)", "CENC-AVC: remaining size %d smaller than nal length+type %d\n", "CENC-AVC: nal size %d remaining %d\n", "Unable to initialize hinting of stream %d\n", "rtpo", "Using MP3 TOC to seek; may be imprecise.\n", "Using scaling to seek VBR MP3; may be imprecise.\n", "invalid concatenated file detected - using bitrate for duration\n", "filesize and duration do not match (growing file?)\n", "Cannot determine file size, skipping TOC table.\n", "pad %d %d\n", "Skipping %d bytes of junk at %ld.\n", "MP2/3 (MPEG audio layer 2/3)", "mp2,mp3,m2a,mpa", "usetoc", "use table of contents", "NOPTS", "failed to avoid negative pts %s in stream %d.\nTry -avoid_negative_ts 1 as a possible workaround.\n", "Packets poorly interleaved, failed to avoid negative timestamp %s in stream %d.\nTry -max_interleave_delta 0 as a possible workaround.\n", "pkt->size == ((-2147483647 - 1) / 3 * 2 + (int)sizeof(AVFrame))", "libavformat/mux.c", "Timestamps are unset in a packet for stream %d. This is deprecated and will stop working in the future. Fix your code to set the timestamps properly\n", "compute_muxer_pkt_fields: pts:%s dts:%s cur_dts:%s b:%d size:%d st:%d\n", "Packet with invalid duration %ld in stream %d\n", "Encoder did not produce proper pts, making some up.\n", "Application provided invalid, non monotonically increasing dts to muxer in stream %d: %s >= %s\n", "pts (%s) < dts (%s) in stream %d\n", "av_write_frame: pts2:%s dts2:%s\n", "Requested output format '%s' is not a suitable output format\n", "Unable to find a suitable output format for '%s'\n", "Setting the AVFormatContext to bitexact mode, because the AVCodecContext is in that mode. This behavior will change in the future. To keep the current behavior, set AVFormatContext.flags |= AVFMT_FLAG_BITEXACT.\n", "No streams to mux were specified\n", "Using AVStream.codec.time_base as a timebase hint to the muxer is deprecated. Set AVStream.time_base instead.\n", "sample rate not set\n", "Aspect ratio mismatch between muxer (%d/%d) and encoder layer (%d/%d)\n", "encoder-", "Tag %s/0x%08x incompatible with output codec id '%d' (%s)\n", "Invalid packet stream index: %d\n", "Received a packet for an attachment stream.\n", "((AVFrame *)pkt->data)->buf", "Delay between the first packet and last packet in the muxing queue is %ld > %ld: forcing output\n", "av_interleaved_write_frame size:%d dts:%s pts:%s\n", "av_interleaved_write_frame FLUSH\n", "s->oformat", "AVFormatContext", "avioflags", "direct", "reduce buffering", "probesize", "set probing size", "formatprobesize", "number of bytes to probe file format", "packetsize", "set packet size", "fflags", "flush_packets", "reduce the latency by flushing out packets immediately", "ignidx", "ignore index", "genpts", "generate pts", "nofillin", "do not fill in missing values that can be exactly calculated", "noparse", "disable AVParsers, this needs nofillin too", "igndts", "ignore dts", "discardcorrupt", "discard corrupted frames", "sortdts", "try to interleave outputted packets by dts", "keepside", "don't merge side data", "fastseek", "fast but inaccurate seeks", "enable RTP MP4A-LATM payload", "nobuffer", "reduce the latency introduced by optional buffering", "seek2any", "allow seeking to non-keyframes on demuxer level when supported", "do not write random/volatile data", "analyzeduration", "specify how many microseconds are analyzed to probe the input", "cryptokey", "decryption key", "indexmem", "max memory used for timestamp index (per stream)", "rtbufsize", "max memory used for buffering real-time frames", "fdebug", "max_delay", "maximum muxing or demuxing delay in microseconds", "start_time_realtime", "wall-clock time when stream begins (PTS==0)", "fpsprobesize", "number of frames used to probe fps", "audio_preload", "microseconds by which audio packets should be interleaved earlier", "chunk_duration", "microseconds for each chunk", "chunk_size", "size in bytes for each chunk", "f_err_detect", "set error detection flags (deprecated; use err_detect, save via avconv)", "consider things that a sane encoder shouldn't do as an error", "use_wallclock_as_timestamps", "use wallclock as timestamps", "skip_initial_bytes", "set number of bytes to skip before reading header and frames", "correct_ts_overflow", "correct single timestamp overflows", "enable flushing of the I/O context after each packet", "metadata_header_padding", "set number of bytes to be written as padding in a metadata header", "output_ts_offset", "set output timestamp offset", "max_interleave_delta", "maximum buffering duration for interleaving", "f_strict", "how strictly to follow the standards (deprecated; use strict, save via avconv)", "allow non-standardized experimental variants", "max_ts_probe", "maximum number of packets to read while waiting for the first timestamp", "avoid_negative_ts", "shift timestamps so they start at 0", "enabled when required by target format", "disabled", "do not change timestamps", "make_non_negative", "shift timestamps so they are non negative", "make_zero", "format_whitelist", "List of demuxers that are allowed to be used", "framerate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "U263\r", "FMP4\r", "DIVX\r", "DX50\r", "XVID\r", "MP4S\r", "M4S2\r", "ZMP4\r", "DIV1\r", "BLZ0\r", "mp4v\r", "UMP4\r", "WV1F\r", "SEDG\r", "RMP4\r", "3IV2\r", "WAWV\r", "FFDS\r", "FVFW\r", "DCOD\r", "MVXM\r", "PM4V\r", "SMP4\r", "DXGM\r", "VIDM\r", "M4T3\r", "GEOX\r", "G264\r", "HDX4\r", "DM4V\r", "DMK2\r", "DYM4\r", "DIGI\r", "EPHV\r", "EM4A\r", "M4CC\r", "SN40\r", "VSPX\r", "ULDX\r", "GEOV\r", "SIPP\r", "SM4V\r", "XVIX\r", "DreX\r", "QMP4\r", "PLV1\r", "GLV4\r", "GMP4\r", "mjpa\n", "JPGL\f", "MJLS\f", "HFYUD", "IV32p", "IV41q", "VP30[", "VP50\\", "VP60\\", "VP61\\", "VP62k", "VP6A]", "VP6F]", "VP90 ", "ASV1!", "ASV2$", "VCR1\"", "FFV1*", "Xxanr", "LM20.", "mrle.", "MSVC/", "msvc/", "CRAM/", "cram/", "WHAM/", "wham,", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "SNOW#", "S263W", "svq19", "tscc:", "ULTI<", "VIXL=", "QPEG=", "Q1.0=", "Q1.1H", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "VMnc^", "tga >", "MPNG>", "PNG1>", "png %", "CLJRu", "drac+", "azpr+", "RPZA+", "rpza\u000b", "SP54|", "AURA}", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "wav header size < 14", "WAVEFORMATEX support for RIFX files\n", "unknown subformat:%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x {%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}\n", "Invalid sample rate: %d\n", "INFO subchunk truncated\n", "too big INFO subchunk\n", "truncated file\n", "out of memory, unable to read INFO tag\n", "premature end of file while reading INFO tag\n", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "(start&1) == 0", "libavformat/riffenc.c", "BottomUp", "LIST", "requested bits_per_coded_sample (%d) and actually stored (%d) differ\n", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "%s://", "FFmpeg version 3.0.1", "0123456789abcdef0123456789ABCDEF", "*pkt_buffer", "libavformat/utils.c", "libavformat license: GPL version 3 or later", "!dst->codec_whitelist && !dst->format_whitelist && !dst->protocol_whitelist", "Failed to duplicate whitelist\n", "Truncating packet of size %d to %ld\n", "Format not on whitelist '%s'\n", "Attached picture on stream %d has invalid size, ignoring\n", "st->codec->ticks_per_frame", "s->iformat", "DTS %li < %li out of order\n", "invalid dts/pts combination %li\n", "first_dts %s not matching first dts %s (pts %s, duration %ld) in the queue\n", "IN delayed:%d pts:%s, dts:%s cur_dts:%s st:%d pc:%p duration:%ld delay:%d onein_oneout:%d\n", "OUTdelayed:%d/%d pts:%s, dts:%s cur_dts:%s\n", "first_dts %s but no packet with dts in the queue\n", "index == 0 || ie[-1].timestamp < timestamp", "Protocol name not provided, cannot determine if input is local or a network protocol, buffers and access patterns cannot be configured optimally without knowing the protocol\n", "pipe", "cache", "Reconfiguring buffers to size %ld\n", "tmp_pos > pos_max", "gen_seek: %d %s\n", "ts_min < ts_max", "pos_min=0x%lx pos_max=0x%lx dts_min=%s dts_max=%s\n", "pos_limit <= pos_max", "%ld %ld %ld / %s %s %s target:%s limit:%ld start:%ld noc:%d\n", "read_timestamp() failed in the middle\n", "read_seek: %d %s\n", "using cached pos_min=0x%lx dts_min=%s\n", "index < st->nb_index_entries", "using cached pos_max=0x%lx pos_limit=0x%lx dts_max=%s\n", "Failed to read extradata of size %d\n", "rfps: %f %f\n", "Setting avg frame rate based on r frame rate\n", "mp4v", "probing stream %d pp:%d\n", "nothing to probe for stream %d\n", "Probe with size=%d, packets=%d detected %s with score=%d\n", "probed stream %d\n", "probed stream %d failed\n", "st->request_probe <= 0", "Dropped corrupted packet (stream = %d)\n", "Invalid stream index %d\n", "Failed to reallocate probe buffer for stream %d\n", "Invalid timestamps stream=%d, pts=%s, dts=%s, size=%d\n", "ff_read_packet stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "parser not found for codec %s, packets or times may be invalid.\n", "demuxer injecting skip %d / discard %d\n", "Could not inject global side data\n", "read_frame_internal stream=%d, pts=%s, dts=%s, size=%d, duration=%ld, flags=%d\n", "st->index_entries", "seek_frame_generic failed as this stream seems to contain no keyframes after the target timestamp, %d non keyframes found\n", "mpegts", "skip_changes", "start time for stream %d is not set in estimate_timings_from_pts\n", "stream %d : no PTS found at end of file, duration not set\n", "stream %d : no TS found at start of file, duration not set\n", "Ignoring outlier non primary stream starttime %f\n", "Estimating duration from bitrate, this may be inaccurate\n", "stream: start_time: %0.3f duration: %0.3f bitrate=%ld kb/s\n", "%d: start_time: %0.3f duration: %0.3f\n", "unspecified frame size", "unspecified size", "no decodable DTS frames", "unspecified number of channels", "no frame in rv30/40 and no sar", "unspecified sample rate", "unspecified sample format", "unknown codec", "unspecified pixel format", "skip_clear", "Before avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d\n", "Failed to open codec in av_find_stream_info\n", "interrupted\n", "All info found\n", "Probe buffer size limit of %ld bytes reached\n", "Stream #%d: not enough frames to estimate rate; consider increasing probesize\n", "Non-increasing DTS in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "DTS discontinuity in stream %d: packet %d with DTS %ld, packet %d with DTS %ld\n", "max_analyze_duration %ld reached at %ld microseconds st:%d\n", "decoding for stream %d failed\n", "Could not find codec parameters for stream %d (%s): %s\nConsider increasing the value for the 'analyzeduration' and 'probesize' options\n", "After avformat_find_stream_info() pos: %ld bytes read:%ld seeks:%d frames:%d\n", "s->nb_streams>0", "s->streams[ s->nb_streams - 1 ] == st", "new_program: id=0x%04x\n", "Chapter end time %ld before start %ld\n", "stream index %d is not valid\n", "%0*d", "Input context has not been properly allocated by avformat_alloc_context() and is not NULL either\n", "Custom AVIOContext makes no sense and will be ignored with AVFMT_NOFILE format.\n", "demuxer does not support additional id3 data, skipping\n", " \t\r\n", "st:%d removing common factor %d from timebase\n", "st:%d has too large timebase, reducing\n", "Ignoring attempt to set invalid timebase %d/%d for st:%d\n", "Invalid stream specifier: %s.\n", "Unknown bitstream filter '%s'\n", "Automatically inserted bitstream filter '%s'; args='%s'\n", "copy", "Failed to open bitstream filter %s for stream %d with codec %s", "Failed to parse creation_time %s\n", "dvbsub", "loas", "mpegvideo", "+infinity", "+inf", "-infinity", "-inf", "+nan", "-nan", "infinity", "tail_len <= 5", "libavutil/avstring.c", "'\\''", "%d channels", "stereo", "3.0(back)", "quad", "quad(side)", "5.0(side)", "5.1(side)", "6.0(front)", "hexagonal", "6.1(back)", "6.1(front)", "7.0(front)", "7.1(wide)", "7.1(wide-side)", "octagonal", "hexadecagonal", "downmix", "front left", "front right", "front center", "low frequency", "back left", "back right", "front left-of-center", "front right-of-center", "back center", "side left", "side right", "top center", "top front left", "top front center", "top front right", "top back left", "top back center", "top back right", "downmix left", "downmix right", "wide left", "wide right", "surround direct left", "surround direct right", "LFE2", "low frequency 2", "detected %d logical cores\n", "armv8", "neon", "cpuflags", "BSF_NOT_FOUND", "Bitstream filter not found", "Internal bug, should not have happened", "BUG2", "BUFFER_TOO_SMALL", "Buffer too small", "DECODER_NOT_FOUND", "Decoder not found", "DEMUXER_NOT_FOUND", "Demuxer not found", "ENCODER_NOT_FOUND", "Encoder not found", "End of file", "EXIT", "Immediate exit requested", "EXTERNAL", "Generic error in an external library", "FILTER_NOT_FOUND", "Filter not found", "INPUT_CHANGED", "Input changed", "INVALIDDATA", "Invalid data found when processing input", "MUXER_NOT_FOUND", "Muxer not found", "OPTION_NOT_FOUND", "Option not found", "OUTPUT_CHANGED", "Output changed", "PATCHWELCOME", "Not yet implemented in FFmpeg, patches welcome", "PROTOCOL_NOT_FOUND", "Protocol not found", "STREAM_NOT_FOUND", "Stream not found", "UNKNOWN", "Unknown error occurred", "EXPERIMENTAL", "Experimental feature", "INPUT_AND_OUTPUT_CHANGED", "Input and output changed", "HTTP_BAD_REQUEST", "Server returned 400 Bad Request", "HTTP_UNAUTHORIZED", "Server returned 401 Unauthorized (authorization failed)", "HTTP_FORBIDDEN", "Server returned 403 Forbidden (access denied)", "HTTP_NOT_FOUND", "Server returned 404 Not Found", "HTTP_OTHER_4XX", "Server returned 4XX Client Error, but not one of 40{0,1,3,4}", "HTTP_SERVER_ERROR", "Server returned 5XX Server Error reply", "Undefined constant or missing '(' in '%s'\n", "Missing ')' in '%s'\n", "Missing ')' or too many args in '%s'\n", "sinh", "cosh", "tanh", "asin", "acos", "time", "squish", "gauss", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "clip", "Unknown function in '%s'\n", "atan", "Invalid chars '%s' at the end of expression '%s'\n", "QP2LAMBDA", "Eval", "Cannot read file '%s': %s\n", "Error occurred in fstat(): %s\n", "Error occurred in mmap(): %s\n", "ff_tempfile: Cannot allocate file name\n", "/tmp/%sXXXXXX", "ff_tempfile: Cannot open temporary file %s\n", "FILE", "Failed to set close on exec\n", "AVPanScan", "ATSC A53 Part 4 Closed Captions", "Stereoscopic 3d metadata", "AVMatrixEncoding", "Metadata relevant to a downmix procedure", "AVReplayGain", "3x3 displaymatrix", "Active format description", "Motion vectors", "Skip samples", "Audio service type", "Mastering display metadata", "GOP timecode", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA512/224", "SHA512/256", "SHA384", "SHA512", "CRC32", "adler32", "Picture size %ux%u is invalid\n", "Formats with a palette require a minimum alignment of 4\n", "abs(src_linesize) >= bytewidth", "libavutil/imgutils.c", "abs(dst_linesize) >= bytewidth", "av_image_get_linesize failed\n", "IMGUTILS", "quiet", "verbose", "fatal", "panic", "[%s @ %p] ", "[%s] ", "%s%s%s%s", "    Last message repeated %d times\r", "    Last message repeated %d times\n", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "256color", " is not implemented. Update your FFmpeg version to the newest one from Git. If the problem still occurs, it means that your file has a feature which has not been implemented.\n", "libavutil/mathematics.c", "duration >= 0", "libavutil/mem_internal.h", "Value %f for parameter '%s' out of range [%g - %g]\n", "Value %f for parameter '%s' is not a valid set of 32bit integer flags\n", "Unable to parse option value \"%s\" as color\n", "Unable to parse option value \"%s\" as image size\n", "Unable to parse option value \"%s\" as video rate\n", "AVOption type %d of option %s not implemented yet\n", "The value set by option '%s' is not an image size.\n", "Invalid negative size value %dx%d for size '%s'\n", "The value set by option '%s' is not a video rate.\n", "The value set by option '%s' is not a channel layout.\n", "false", "true", "0x%08X", "%02X", "INT64_MAX", "INT64_MIN", "%ld:%02d:%02d.%06d", "%d:%02d.%06d", "0x%02x%02x%02x%02x", "0x%lx", "The value for option '%s' is not an image size.\n", "The value for option '%s' is not a channel layout.\n", "%d%*1[:/]%d%c", "const_values array too small for %s\n", "Unable to parse option value \"%s\"\n", "true,y,yes,enable,enabled,on", "false,n,no,disable,disabled,off", "Unable to parse option value \"%s\" as boolean\n", "Unable to parse option value \"%s\" as %s\n", "pixel format", "Value %d for parameter '%s' out of %s format range [%d - %d]\n", "sample format", "Unable to parse option value \"%s\" as duration\n", "Unable to parse option value \"%s\" as channel layout\n", "Invalid option type.\n", "Missing key or no key/value separator found after key '%s'\n", "Setting entry with key '%s' to value '%s'\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "Error setting option %s to value %s.\n", "The value for option '%s' is not a %s format.\n", "pixel", "The value set by option '%s' is not a %s format", "  %s%-17s ", "%-12s ", "<flags>", "<int>", "<int64>", "<double>", "<float>", "<string>", "<rational>", "<binary>", "<image_size>", "<video_rate>", "<pix_fmt>", "<sample_fmt>", "<duration>", "<color>", "<channel_layout>", "<boolean>", " (from ", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "-FLT_MAX", "-FLT_MIN", "DBL_MAX", "DBL_MIN", "-DBL_MAX", "-DBL_MIN", " to ", " (default ", "\"%s\"", "     %-15s ", "%s AVOptions:\n", "Not supported option type: %d, option name: %s\n", "Invalid separator(s) found.", "%d:%d%c", "ntsc", "qntsc", "qpal", "sntsc", "spal", "ntsc-film", "bikeshed", "0123456789ABCDEFabcdef", "Invalid 0xRRGGBB[AA] color string: '%s'\n", "Cannot find color '%s'\n", "Invalid alpha value specifier '%s' in '%s'\n", "%H:%M:%S", "%Y - %m - %d", "%Y%m%d", "%H%M%S", "%J:%M:%S", "%M:%S", "%H:%M", "%H%M", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "sqcif", "qcif", "4cif", "16cif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "2kdci", "2kflat", "2kscope", "4kdci", "4kflat", "4kscope", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", ")% .", "bgra", "rgba", "rgb32", "bgr32", "%s%s", "name nb_components nb_bits", "%-11s %7d %10d", "yuvj", "d->log2_chroma_w <= 3", "libavutil/pixdesc.c", "d->log2_chroma_h <= 3", "d->nb_components <= 4", "d->name && d->name[0]", "bayer_", "(d->nb_components==4 || d->nb_components==2) == !!(d->flags & (1 << 7))", "!c->plane && !c->step && !c->offset && !c->shift && !c->depth", "c->step >= c->depth", "8*c->step >= c->depth", "tmp[0] == 0 && tmp[1] == 0", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "iec61966-2-4", "bt1361e", "iec61966-2-1", "bt2020-10", "bt2020-20", "smpte428-1", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "gray8,y8", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "0rgb", "rgb0", "0bgr", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "pixelutils support is required but libavutil is not compiled with it\n", "s16p", "s32p", "fltp", "dblp", "name   depth", "%-6s   %2d ", "%s%02d:%02d:%02d%c%02d", "%02u:%02u:%02u%c%02u", "Timecode frame rate must be specified\n", "Drop frame is only allowed with 30000/1001 or 60000/1001 FPS\n", "Using non-standard frame rate %d/%d\n", "%d:%d:%d%c%d", "Unable to parse timecode, syntax: hh:mm:ss[:;.]ff\n", "FFmpeg version 3.0.1", "IPBSipb", "3.0.1", "libavutil license: GPL version 3 or later", "attachment", "!\"valid element size\"", "libavutil/utils.c", "<fBBf<", "fffffff", "fff$", "000`", "<00000000<", "<\f\f\f\f\f\f\f\f<", "<ll>", "8ll8", "8ll8", "|||||||", "<fBBf<", "0xx00", "x00000x", "x`````x", "p000x", "p00000x", "p000x", "p000x", "p000x", "<ll>", "8ll8", "8ll8", "<<<<", "plane_count == nb_components - 1", "libswscale/alphablend.c", "libswscale/swscale_internal.h", "swscaler", "SWScaler", "sws_flags", "scaler flags", "fast_bilinear", "fast bilinear", "bilinear", "bicubic", "nearest neighbor", "area", "averaging area", "bicublin", "luma bicubic, chroma bilinear", "Gaussian", "sinc", "lanczos", "Lanczos", "natural bicubic spline", "print_info", "print info", "accurate_rnd", "accurate rounding", "full_chroma_int", "full chroma interpolation", "full_chroma_inp", "full chroma input", "error_diffusion", "error diffusion dither", "srcw", "source width", "srch", "source height", "dstw", "destination width", "dsth", "destination height", "src_format", "source format", "dst_format", "destination format", "src_range", "source is full range", "dst_range", "destination is full range", "param0", "scaler param 0", "param1", "scaler param 1", "src_v_chr_pos", "source vertical chroma position in luma grid/256", "src_h_chr_pos", "source horizontal chroma position in luma grid/256", "dst_v_chr_pos", "destination vertical chroma position in luma grid/256", "dst_h_chr_pos", "destination horizontal chroma position in luma grid/256", "sws_dither", "set dithering algorithm", "leave choice to sws", "bayer", "bayer dither", "error diffusion", "a_dither", "arithmetic addition dither", "x_dither", "arithmetic xor dither", "gamma", "gamma correct scaling", "alphablend", "mode for alpha -> non alpha", "ignore alpha", "uniform_color", "blend onto a uniform color", "blend onto a checkerboard", "n == s->plane[ii].available_lines", "libswscale/slice.c", "firstLumSrcY >= lastInLumBuf - vLumBufSize + 1", "libswscale/swscale.c", "firstChrSrcY >= lastInChrBuf - vChrBufSize + 1", "One of the input parameters to sws_scale() is NULL, please check the calling code\n", "Slice parameters %d, %d are invalid\n", "Slices start in the middle!\n", "bad src image pointers\n", "bad dst image pointers\n", "unsupported conversion to planar RGB %s -> %s\n", "internal error %s -> %s converter\n", "srcSliceH > 1", "libswscale/swscale_unscaled.c", "unsupported bayer conversion\n", "libswscale/utils.c", "filter2Size > 0", "minFilterSize > 0", "SwScaler: reducing / aligning filtersize %d -> %d\n", "(*filterPos)[i] >= 0", "(*filterPos)[i] < srcW", "(*filterPos)[i] + j < srcW || !filter[i * filterSize + j]", "SwScaler: zero vector in scaling\n", "sws: initFilter failed\n", "libswscale license: GPL version 3 or later", "%1.3f ", "ehh flags invalid?!", "dithered ", "deprecated pixel format used, make sure you did set range correctly\n", "%s is not supported as input pixel format\n", "%s is not supported as output pixel format\n", "Exactly one scaler algorithm must be chosen, got %X\n", "%dx%d -> %dx%d is invalid scaling dimension\n", "Forcing full internal H chroma due to odd output size\n", "Forcing full internal H chroma due to input having non subsampled chroma\n", "Desired dithering only supported in full chroma interpolation for destination format '%s'\n", "Ordered dither is not supported in full chroma interpolation for destination format '%s'\n", "%s output is not supported with half chroma resolution, switching to full\n", "full chroma interpolation for destination format '%s' not yet implemented\n", "c->dstBpc > 14", "c->chrDstH <= dstH", "%s scaler, from %s to %s%s ", "using %s\n", "%dx%d -> %dx%d\n", "lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "using alpha blendaway %s -> %s special converter\n", "using unscaled %s -> %s special converter\n", "YUV color matrix differs for YUV->YUV, using intermediate RGB to convert\n", "area averaging", "luma bicubic / chroma bilinear", "nearest neighbor / point", "Optimized 2 tap filter code cannot be used\n", "No accelerated colorspace conversion found from %s to %s.\n", "%ibpp not supported by yuv2rgb\n"], "stringidentifiers": ["aac_adtstoasc", "aac_latm", "dual_mono_mode", "auto", "autoselection", "main", "both", "AVDCT", "fastint", "altivec", "faan", "idct", "simple", "simplemmx", "simplearm", "simplearmv5te", "simplearmv6", "simpleneon", "simplealpha", "xvid", "xvidmmx", "faani", "simpleauto", "bits_per_sample", "Palette", "mpeg1video", "mpeg2video", "mpegvideo_xvmc", "h261", "h263", "rv10", "rv20", "mjpeg", "mjpegb", "mpeg4", "rawvideo", "msmpeg4v1", "msmpeg4v2", "msmpeg4v3", "wmv1", "wmv2", "h263p", "h263i", "flv1", "svq1", "svq3", "dvvideo", "huffyuv", "HuffYUV", "cyuv", "h264", "indeo3", "theora", "Theora", "asv1", "asv2", "ffv1", "vcr1", "cljr", "mdec", "interplayvideo", "xan_wc3", "xan_wc4", "rpza", "cinepak", "Cinepak", "ws_vqa", "msrle", "msvideo1", "idcin", "flic", "truemotion1", "vmdvideo", "mszh", "zlib", "qtrle", "snow", "Snow", "tscc", "ulti", "qdraw", "vixl", "qpeg", "ffvhuff", "rv30", "rv40", "wmv3", "loco", "LOCO", "wnv1", "aasc", "indeo2", "fraps", "Fraps", "truemotion2", "cscd", "CamStudio", "mmvideo", "zmbv", "smackvideo", "kmvc", "flashsv", "cavs", "jpeg2000", "vmnc", "vp6f", "dsicinvideo", "tiertexseqvideo", "dnxhd", "bethsoftvid", "vp6a", "indeo4", "indeo5", "mimic", "Mimic", "escape124", "daala", "Daala", "dirac", "Dirac", "motionpixels", "aura", "aura2", "v210x", "v210", "frwu", "flashsv2", "cdgraphics", "r210", "binkvideo", "iff_ilbm", "kgv1", "pictor", "a64_multi", "a64_multi5", "r10k", "mvc1", "mvc2", "mxpeg", "lagarith", "prores", "utvideo", "bmv_video", "vble", "dxtory", "Dxtory", "v410", "cdxl", "zerocodec", "mss1", "msa1", "tscc2", "mts2", "cllc", "mss2", "y41p", "escape130", "avrp", "avui", "ayuv", "targa_y216", "v308", "v408", "yuv4", "avrn", "cpia", "xface", "smvjpeg", "Go2Meeting", "hnm4video", "hevc", "paf_video", "sanm", "sgirle", "hq_hqa", "screenpresso", "Screenpresso", "wrapped_avframe", "rscc", "alias_pix", "ansi", "brender_pix", "jpegls", "ljpeg", "pgmyuv", "sp5x", "sunrast", "tdsc", "TDSC", "tiff", "vc1image", "webp", "WebP", "wmv3image", "apng", "cfhd", "pcm_s16le", "pcm_s16be", "pcm_u16le", "pcm_u16be", "pcm_s8", "pcm_u8", "pcm_mulaw", "pcm_alaw", "pcm_s32le", "pcm_s32be", "pcm_u32le", "pcm_u32be", "pcm_s24le", "pcm_s24be", "pcm_u24le", "pcm_u24be", "pcm_s24daud", "pcm_zork", "pcm_s16be_planar", "pcm_s16le_planar", "pcm_s24le_planar", "pcm_s32le_planar", "pcm_dvd", "pcm_f32be", "pcm_f32le", "pcm_f64be", "pcm_f64le", "pcm_bluray", "pcm_lxf", "s302m", "pcm_s8_planar", "adpcm_ima_qt", "adpcm_ima_wav", "adpcm_ima_dk3", "adpcm_ima_dk4", "adpcm_ima_ws", "adpcm_ima_smjpeg", "adpcm_ms", "adpcm_4xm", "adpcm_xa", "adpcm_adx", "adpcm_ea", "adpcm_g726", "adpcm_ct", "adpcm_swf", "adpcm_yamaha", "adpcm_sbpro_4", "adpcm_sbpro_3", "adpcm_sbpro_2", "adpcm_thp", "adpcm_thp_le", "adpcm_ima_amv", "adpcm_ea_r1", "adpcm_ea_r3", "adpcm_ea_r2", "adpcm_ima_ea_sead", "adpcm_ima_ea_eacs", "adpcm_ea_xas", "adpcm_ea_maxis_xa", "adpcm_ima_iss", "adpcm_g722", "adpcm_ima_apc", "adpcm_afc", "adpcm_ima_oki", "adpcm_dtk", "adpcm_ima_rad", "adpcm_g726le", "adpcm_vima", "adpcm_psx", "adpcm_aica", "amr_nb", "amr_wb", "ra_144", "ra_288", "roq_dpcm", "interplay_dpcm", "xan_dpcm", "sol_dpcm", "sdx2_dpcm", "vorbis", "Vorbis", "dvaudio", "wmav1", "wmav2", "mace3", "mace6", "vmdaudio", "flac", "mp3adu", "mp3on4", "MP3onMP4", "shorten", "Shorten", "alac", "westwood_snd1", "qdm2", "cook", "truespeech", "smackaudio", "qcelp", "wavpack", "WavPack", "dsicinaudio", "musepack7", "gsm_ms", "atrac3", "voxware", "nellymoser", "musepack8", "speex", "Speex", "wmavoice", "wmapro", "wmalossless", "atrac3p", "eac3", "sipr", "twinvq", "truehd", "TrueHD", "mp4als", "atrac1", "binkaudio_rdft", "binkaudio_dct", "qdmc", "celt", "g723_1", "dss_sp", "g729", "bmv_audio", "ralf", "ilbc", "wavesynth", "sonic", "Sonic", "sonicls", "opus", "comfortnoise", "metasound", "paf_audio", "evrc", "dsd_lsbf", "dsd_msbf", "dsd_lsbf_planar", "dsd_msbf_planar", "interplayacm", "xma1", "xma2", "dvd_subtitle", "dvb_subtitle", "xsub", "XSUB", "mov_text", "hdmv_pgs_subtitle", "dvb_teletext", "subrip", "microdvd", "mpl2", "eia_608", "jacosub", "sami", "realtext", "subviewer1", "subviewer", "vplayer", "webvtt", "hdmv_text_subtitle", "bintext", "xbin", "dvd_nav_packet", "timed_id3", "bin_data", "context", "non_deterministic", "threads", "gifflags", "offsetting", "transdiff", "GIF87a", "GIF89a", "trans_color", "L263", "S263", "GEOV", "GEOX", "stereo_mode", "Q264", "is_avc", "nal_length_size", "enable_er", "private_spspps_buf", "h264_mp4toannexb", "Gray", "CABAC", "CAVLC", "weighted", "LPAR", "CONSTR", "REDU", "checkerboard_rl", "checkerboard_lr", "col_interleaved_rl", "col_interleaved_lr", "row_interleaved_rl", "row_interleaved_lr", "right_left", "left_right", "bottom_top", "top_bottom", "block_rl", "block_lr", "mono", "TEMP", "SPAT", "apply_defdispwin", "hevc_mp4toannexb", "SEI_SUFFIX", "SEI_PREFIX", "FD_NUT", "EOB_NUT", "EOS_NUT", "CRA_NUT", "IDR_N_LP", "IDR_W_RADL", "BLA_N_LP", "BLA_W_RADL", "BLA_W_LP", "RASL_R", "RASL_N", "RADL_R", "RADL_N", "STSA_R", "STSA_N", "TSA_R", "TSA_N", "TRAIL_R", "TRAIL_N", "desc", "SEPB1", "SEPB2", "ZYGO", "weightp", "level", "deblock", "partitions", "stats", "baseline", "high", "high10", "high422", "high444", "libx264rgb", "libx264", "flags2", "i_qfactor", "b_qfactor", "qmin", "qdiff", "qblur", "qcomp", "sc_threshold", "trellis", "me_range", "me_method", "subq", "b_strategy", "keyint_min", "thread_type", "rc_init_occupancy", "preset", "medium", "tune", "profile", "fastfirstpass", "passlogfile", "wpredp", "a53cc", "x264opts", "crf_max", "aq_mode", "none", "variance", "autovariance", "weightb", "smart", "ssim", "b_pyramid", "strict", "normal", "mbtree", "cplxblur", "spatial", "temporal", "tesa", "default", "cavlc", "cabac", "chromaoffset", "noise_reduction", "film", "animation", "grain", "stillimage", "psnr", "fastdecode", "zerolatency", "ultrafast", "superfast", "veryfast", "faster", "fast", "slow", "slower", "veryslow", "placebo", "ffmpeg", "XVIX", "UMP4", "XVID", "RMP4", "ZMP4", "SIPP", "DIVX", "Reserved", "reserved", "WV1F", "QMP4", "MP4S", "quarter_sample", "divx_packed", "data_partitioning", "alternate_scan", "cmp_func", "satd", "zero", "Zero", "vsad", "vsse", "nsse", "dct264", "dctmax", "chroma", "mpv_flags", "skip_rd", "strict_gop", "qp_rd", "cbp_rd", "luma_elim_threshold", "chroma_elim_threshold", "quantizer_noise_shaping", "error_rate", "qsquish", "rc_qmod_amp", "rc_qmod_freq", "rc_eq", "rc_init_cplx", "rc_buf_aggressivity", "border_mask", "lmin", "lmax", "ibias", "pbias", "rc_strategy", "motion_est", "epzs", "xone", "force_duplicated_matrix", "b_sensitivity", "brd_scale", "skip_threshold", "skip_factor", "skip_exp", "skip_cmp", "mpeg_quant", "mepc", "mepre", "msmpeg4", "obmc", "structured_slices", "mb_info", "AVSubtitleRect", "forced", "AVFrame", "best_effort_timestamp", "pkt_pos", "pkt_size", "sample_aspect_ratio", "width", "height", "sample_rate", "AVCodecContext", "unaligned", "qpel", "loop", "qscale", "input_preserved", "pass1", "pass2", "gray", "emu_edge", "truncated", "ildct", "low_delay", "global_header", "bitexact", "ilme", "cgop", "output_corrupt", "noout", "ignorecrop", "local_header", "showall", "export_mvs", "skip_manual", "full", "phods", "time_base", "cutoff", "frame_size", "frame_number", "mv_bits", "header_bits", "i_tex_bits", "p_tex_bits", "i_count", "p_count", "skip_count", "misc_bits", "frame_bits", "codec_tag", "autodetect", "old_msmpeg4", "xvid_ilace", "ump4", "no_padding", "ac_vlc", "qpel_chroma", "std_qpel", "qpel_chroma2", "direct_blocksize", "edge", "hpel_chroma", "dc_clip", "trunc", "very", "unofficial", "experimental", "b_qoffset", "err_detect", "crccheck", "bitstream", "buffer", "explode", "ignore_err", "careful", "compliant", "aggressive", "has_b_frames", "block_align", "rc_override_count", "maxrate", "minrate", "bufsize", "i_qoffset", "lumi_mask", "tcplx_mask", "scplx_mask", "p_mask", "dark_mask", "slice_count", "guess_mvs", "favor_inter", "bits_per_coded_sample", "pred", "plane", "median", "aspect", "debug", "pict", "mb_type", "dct_coeff", "green_metadata", "skip", "startcode", "mmco", "bugs", "vis_qp", "vis_mb_type", "buffers", "thread_ops", "nomc", "vismv", "debug_mv", "subcmp", "mbcmp", "ildctcmp", "dia_size", "last_pred", "preme", "precmp", "pre_dia_size", "dtg_active_format", "global_quality", "deflate", "slice_flags", "xvmc_acceleration", "bits", "stream_codec_tag", "me_threshold", "mb_threshold", "intra_dc_precision", "nssew", "skip_top", "skip_bottom", "unknown", "aac_main", "aac_low", "aac_ssr", "aac_ltp", "aac_he", "aac_he_v2", "aac_ld", "aac_eld", "mpeg2_aac_low", "mpeg2_aac_he", "dts_es", "dts_96_24", "dts_hd_hra", "dts_hd_ma", "mpeg4_sp", "mpeg4_core", "mpeg4_main", "mpeg4_asp", "lowres", "skipcmp", "mblmin", "mblmax", "skip_loop_filter", "avdiscard", "skip_idct", "skip_frame", "noref", "bidir", "nokey", "nointra", "bidir_refine", "sc_factor", "mv0_threshold", "compression_level", "min_prediction_order", "max_prediction_order", "timecode_frame_start", "bits_per_raw_sample", "request_channel_layout", "rc_max_vbv_use", "rc_min_vbv_use", "ticks_per_frame", "color_primaries", "color_primaries_type", "bt709", "unspecified", "Unspecified", "bt470m", "bt470bg", "smpte170m", "smpte240m", "Film", "bt2020", "smpte428_1", "color_trc", "color_trc_type", "gamma22", "gamma28", "Linear", "log_sqrt", "iec61966_2_4", "bt1361", "iec61966_2_1", "bt2020_10bit", "bt2020_12bit", "smpte2084", "colorspace", "colorspace_type", "ycocg", "YCOCG", "bt2020_ncl", "bt2020_cl", "color_range", "color_range_type", "mpeg", "jpeg", "chroma_sample_location", "chroma_sample_location_type", "Left", "center", "Center", "topleft", "bottomleft", "Bottom", "log_level_offset", "slices", "slice", "audio_service_type", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "request_sample_fmt", "pkt_timebase", "sub_charenc", "sub_charenc_mode", "do_nothing", "pre_decoder", "refcounted_frames", "side_data_only_packets", "skip_alpha", "field_order", "progressive", "dump_separator", "codec_whitelist", "pixel_format", "video_size", "MPNG", "Simple", "Main", "Complex", "Advanced", "High", "Rext", "Baseline", "Extended", "bits2qp", "qp2bits", "iTex", "pTex", "fCode", "iCount", "mcVar", "avgQP", "qComp", "avgIITex", "avgPITex", "avgPPTex", "avgBPTex", "avgTex", "I420", "IYUV", "YUYVw", "BGR0C", "J444Z", "I40AY", "AV32F", "I09LE", "I09BP", "I29LO", "I29BL", "I49LK", "I49BH", "I0ALG", "I0ABJ", "I2ALI", "I2ABN", "I4ALM", "audioresample", "ReSampleContext", "unknown_codec", "ff_avcodec_locked", "encoder", "decoder", "APETAGEX", "subfile", "start", "protocol_whitelist", "URLContext", "AVIOContext", "language", "palette", "checkerboard", "effects", "dialogue", "comentary", "emergency", "karaoke", "Output", "Input", "from", "truncate", "blocksize", "segment", "ssegment", "image2", "mime_type", "final_delay", "GIF87a", "GIF89a", "min_delay", "max_gif_delay", "default_delay", "ignore_loop", "artist", "album", "date", "comment", "genre", "Blues", "Country", "Dance", "Disco", "Funk", "Grunge", "Jazz", "Metal", "Oldies", "Other", "Reggae", "Techno", "Industrial", "Alternative", "Pranks", "Soundtrack", "Ambient", "Vocal", "Fusion", "Trance", "Classical", "Instrumental", "Acid", "House", "Game", "Gospel", "Noise", "AlternRock", "Bass", "Soul", "Punk", "Space", "Meditative", "Ethnic", "Gothic", "Darkwave", "Electronic", "Eurodance", "Dream", "Comedy", "Cult", "Gangsta", "Jungle", "Cabaret", "Psychadelic", "Rave", "Showtunes", "Trailer", "Tribal", "Polka", "Retro", "Musical", "Folk", "Swing", "Bebob", "Latin", "Revival", "Celtic", "Bluegrass", "Avantgarde", "Chorus", "Acoustic", "Humour", "Speech", "Chanson", "Opera", "Sonata", "Symphony", "Primus", "Satire", "Club", "Tango", "Samba", "Folklore", "Ballad", "Freestyle", "Duet", "Hardcore", "Terror", "Indie", "BritPop", "Negerpunk", "Beat", "Crossover", "Merengue", "Salsa", "Anime", "JPop", "SynthPop", "TDATTIMETORYTRDATSIZTYER", "TDENTDORTDRCTDRLTDTGTIPLTMCLTMOOTPROTSOATSOPTSOTTSST", "TALBTBPMTCOMTCONTCOPTDLYTENCTEXTTFLTTIT1TIT2TIT3TKEYTLANTLENTMEDTOALTOFNTOLYTOPETOWNTPE1TPE2TPE3TPE4TPOSTPUBTRCKTRSNTRSOTSRCTSSE", "PRIV", "APIC", "encrypted", "version", "compression", "USLT", "TCON", "TXXX", "GEOB", "CHAP", "TYER", "TDAT", "TIME", "Conductor", "Composer", "Illustration", "compilation", "encoded_by", "album_artist", "performer", "TCMP", "TDRC", "TDRL", "TDEN", "creation_time", "TSOA", "TSOP", "TSOT", "TALB", "TCOM", "composer", "TCOP", "copyright", "TENC", "TIT2", "TLAN", "TPE1", "TPE2", "TPE3", "TPOS", "disc", "TPUB", "publisher", "TRCK", "TSSE", "lyrics", "ljpg", "im24", "im32", "sunras", "yuv10", "c608", "sac3", "alac", "twos", "lpcm", "ssmv", "v410", "cvid1", "mp2vY", "tiffb", "avs2u", "dracd", "AVdnd", "AVupf", "ap4x3", "DXDI", "major_brand", "minor_version", "compatible_brands", "handler_name", "rotate", "iTunSMPB", "cdec", "premiere_version", "quicktime_version", "account_type", "account_id", "category", "description", "episode_uid", "hd_video", "keywords", "synopsis", "podcast", "gapless_playback", "purchase_date", "rating", "sort_album_artist", "sort_album", "sort_artist", "sort_composer", "sort_name", "sort_show", "media_type", "episode_id", "episode_sort", "network", "show", "season_number", "producer", "chapter", "director", "disclaimer", "edit_date", "original_format", "grouping", "host_computer", "make", "original_artist", "performers", "playback_requirements", "original_source", "warning", "location", "nclx", "nclc", "root", "timecode", "tmcd", "reel_name", "avc1", "stsd", "hvc1", "hev1", "mp4s", "use_absolute_path", "seek_streams_individually", "ignore_editlist", "ignore_chapters", "use_mfra_for", "export_all", "export_xmp", "activation_bytes", "audible_fixed_key", "decryption_key", "enable_drefs", "text", "mp4a", "tx3g", "avc1k", "VP6F", "CodecPrivateData", "yrrc", "albm", "systemBitrate", "trackID", "FourCC", "H264", "WVC1", "MaxWidth", "MaxHeight", "DisplayWidth", "DisplayHeight", "AACP", "AACH", "AACL", "WMAP", "AudioTag", "Channels", "SamplingRate", "BitsPerSample", "PacketSize", "aART", "encoding_tool", "ldes", "tvsh", "tven", "tvnn", "tmpo", "XDCAM", "DpxE", "lpcm", "mhlr", "vide", "VideoHandler", "soun", "SoundHandler", "clcp", "ClosedCaptionHandler", "sbtl", "SubtitleHandler", "subp", "hint", "HintHandler", "TimeCodeHandler", "DataHandler", "handler", "dhlr", "perf", "titl", "auth", "author", "gnre", "dscp", "cprt", "wide", "free", "ipod", "ismv", "movflags", "rtphint", "moov_size", "empty_moov", "frag_keyframe", "separate_moof", "frag_custom", "isml", "faststart", "omit_tfhd_offset", "disable_chpl", "default_base_moof", "dash", "frag_discont", "delay_moov", "global_sidx", "write_colr", "write_gama", "rtpflags", "latm", "rfc2190", "skip_rtcp", "h264_mode0", "send_bye", "skip_iods", "iods_audio_profile", "iods_video_profile", "frag_duration", "min_frag_duration", "frag_size", "ism_lookahead", "video_track_timescale", "brand", "use_editlist", "fragment_index", "mov_gamma", "frag_interleave", "encryption_scheme", "encryption_key", "encryption_kid", "rtpo", "usetoc", "NOPTS", "AVFormatContext", "avioflags", "direct", "probesize", "formatprobesize", "packetsize", "fflags", "flush_packets", "ignidx", "genpts", "nofillin", "noparse", "igndts", "discardcorrupt", "sortdts", "keepside", "fastseek", "nobuffer", "seek2any", "analyzeduration", "cryptokey", "indexmem", "rtbufsize", "fdebug", "max_delay", "start_time_realtime", "fpsprobesize", "audio_preload", "chunk_duration", "chunk_size", "f_err_detect", "use_wallclock_as_timestamps", "skip_initial_bytes", "correct_ts_overflow", "metadata_header_padding", "output_ts_offset", "max_interleave_delta", "f_strict", "max_ts_probe", "avoid_negative_ts", "disabled", "make_non_negative", "make_zero", "format_whitelist", "framerate", "REPLAYGAIN_TRACK_GAIN", "REPLAYGAIN_TRACK_PEAK", "REPLAYGAIN_ALBUM_GAIN", "REPLAYGAIN_ALBUM_PEAK", "HFYUD", "IV32p", "IV41q", "VP62k", "Xxanr", "cvid4", "DUCK4", "PVEZ6", "MSZH7", "S263W", "svq19", "WMVPG", "WVC1G", "WVP2I", "LOCOJ", "WNV1J", "YUV8K", "AAS4K", "AASCL", "RT21M", "theoN", "TM20P", "CSCDR", "ZMBVV", "KMVCX", "CAVSY", "mjp2Y", "MJ2CY", "LJ2CY", "LJ2KY", "IPJ2Y", "AVj2Z", "CLJRu", "LAGSl", "ZECO", "Y41P3", "CUVCF", "CFHD", "IART", "ICMT", "ICOP", "ICRD", "IGNR", "ILNG", "INAM", "IPRD", "IPRT", "ITRK", "ISFT", "ISMP", "ITCH", "IARL", "IART", "ICMS", "ICMT", "ICOP", "ICRD", "ICRP", "IDIM", "IDPI", "IENG", "IGNR", "IKEY", "ILGT", "ILNG", "IMED", "INAM", "IPLT", "IPRD", "IPRT", "ITRK", "ISBJ", "ISFT", "ISHP", "ISMP", "ISRC", "ISRF", "ITCH", "BottomUp", "LIST", "PCMU", "G723", "DVI4", "DVI4", "PCMA", "G722", "QCELP", "G728", "DVI4", "DVI4", "G729", "CelB", "JPEG", "H261", "MP2T", "H263", "payload_type", "pipe", "cache", "mp4v", "mpegts", "skip_changes", "skip_clear", "copy", "dvbsub", "loas", "mpegvideo", "infinity", "stereo", "quad", "hexagonal", "octagonal", "hexadecagonal", "downmix", "LFE2", "armv8", "neon", "cpuflags", "BSF_NOT_FOUND", "BUG2", "BUFFER_TOO_SMALL", "DECODER_NOT_FOUND", "DEMUXER_NOT_FOUND", "ENCODER_NOT_FOUND", "EXIT", "EXTERNAL", "FILTER_NOT_FOUND", "INPUT_CHANGED", "INVALIDDATA", "MUXER_NOT_FOUND", "OPTION_NOT_FOUND", "OUTPUT_CHANGED", "PATCHWELCOME", "PROTOCOL_NOT_FOUND", "STREAM_NOT_FOUND", "UNKNOWN", "EXPERIMENTAL", "INPUT_AND_OUTPUT_CHANGED", "HTTP_BAD_REQUEST", "HTTP_UNAUTHORIZED", "HTTP_FORBIDDEN", "HTTP_NOT_FOUND", "HTTP_OTHER_4XX", "HTTP_SERVER_ERROR", "sinh", "cosh", "tanh", "asin", "acos", "time", "squish", "gauss", "isnan", "isinf", "while", "taylor", "floor", "ceil", "sqrt", "print", "random", "hypot", "ifnot", "bitand", "bitor", "between", "clip", "atan", "QP2LAMBDA", "Eval", "FILE", "AVPanScan", "AVMatrixEncoding", "AVReplayGain", "YCgCo", "murmur3", "RIPEMD128", "RIPEMD160", "RIPEMD256", "RIPEMD320", "SHA160", "SHA224", "SHA256", "SHA384", "SHA512", "CRC32", "adler32", "IMGUTILS", "quiet", "verbose", "fatal", "panic", "TERM", "NO_COLOR", "AV_LOG_FORCE_NOCOLOR", "AV_LOG_FORCE_COLOR", "AV_LOG_FORCE_256COLOR", "false", "true", "INT64_MAX", "INT64_MIN", "pixel", "INT_MAX", "INT_MIN", "UINT32_MAX", "I64_MAX", "I64_MIN", "FLT_MAX", "FLT_MIN", "DBL_MAX", "DBL_MIN", "ntsc", "qntsc", "qpal", "sntsc", "spal", "bikeshed", "AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "Darkorange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGreen", "LightGrey", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SpringGreen", "SteelBlue", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen", "sqcif", "qcif", "qqvga", "qvga", "svga", "uxga", "qxga", "sxga", "qsxga", "hsxga", "wvga", "wxga", "wsxga", "wuxga", "woxga", "wqsxga", "wquxga", "whsxga", "whuxga", "hd480", "hd720", "hd1080", "hqvga", "wqvga", "fwqvga", "hvga", "uhd2160", "uhd4320", "bgra", "rgba", "rgb32", "bgr32", "yuvj", "bayer_", "ycgco", "bt2020nc", "bt2020c", "log100", "log316", "bt1361e", "yuv420p", "yuyv422", "rgb24", "bgr24", "yuv422p", "yuv444p", "yuv410p", "yuv411p", "monow", "monob", "pal8", "yuvj420p", "yuvj422p", "yuvj444p", "xvmcmc", "xvmcidct", "uyvy422", "uyyvyy411", "bgr8", "bgr4", "bgr4_byte", "rgb8", "rgb4", "rgb4_byte", "nv12", "nv21", "argb", "abgr", "gray16be", "y16be", "gray16le", "y16le", "yuv440p", "yuvj440p", "yuva420p", "vdpau_h264", "vdpau_mpeg1", "vdpau_mpeg2", "vdpau_wmv3", "vdpau_vc1", "rgb48be", "rgb48le", "rgb565be", "rgb565le", "rgb555be", "rgb555le", "bgr565be", "bgr565le", "bgr555be", "bgr555le", "vaapi_moco", "vaapi_idct", "vaapi_vld", "yuv420p16le", "yuv420p16be", "yuv422p16le", "yuv422p16be", "yuv444p16le", "yuv444p16be", "vdpau_mpeg4", "dxva2_vld", "rgb444le", "rgb444be", "bgr444le", "bgr444be", "gray8a", "bgr48be", "bgr48le", "yuv420p9be", "yuv420p9le", "yuv420p10be", "yuv420p10le", "yuv422p10be", "yuv422p10le", "yuv444p9be", "yuv444p9le", "yuv444p10be", "yuv444p10le", "yuv422p9be", "yuv422p9le", "vda_vld", "gbrp", "gbrp9be", "gbrp9le", "gbrp10be", "gbrp10le", "gbrp16be", "gbrp16le", "yuva422p", "yuva444p", "yuva420p9be", "yuva420p9le", "yuva422p9be", "yuva422p9le", "yuva444p9be", "yuva444p9le", "yuva420p10be", "yuva420p10le", "yuva422p10be", "yuva422p10le", "yuva444p10be", "yuva444p10le", "yuva420p16be", "yuva420p16le", "yuva422p16be", "yuva422p16le", "yuva444p16be", "yuva444p16le", "vdpau", "xyz12le", "xyz12be", "nv16", "nv20le", "nv20be", "rgba64be", "rgba64le", "bgra64be", "bgra64le", "yvyu422", "ya16be", "ya16le", "gbrap", "gbrap16be", "gbrap16le", "mmal", "d3d11va_vld", "rgb0", "bgr0", "yuv420p12be", "yuv420p12le", "yuv420p14be", "yuv420p14le", "yuv422p12be", "yuv422p12le", "yuv422p14be", "yuv422p14le", "yuv444p12be", "yuv444p12le", "yuv444p14be", "yuv444p14le", "gbrp12be", "gbrp12le", "gbrp14be", "gbrp14le", "yuvj411p", "bayer_bggr8", "bayer_rggb8", "bayer_gbrg8", "bayer_grbg8", "bayer_bggr16le", "bayer_bggr16be", "bayer_rggb16le", "bayer_rggb16be", "bayer_gbrg16le", "bayer_gbrg16be", "bayer_grbg16le", "bayer_grbg16be", "yuv440p10le", "yuv440p10be", "yuv440p12le", "yuv440p12be", "ayuv64le", "ayuv64be", "videotoolbox_vld", "p010le", "p010be", "s16p", "s32p", "fltp", "dblp", "IPBSipb", "attachment", "fffffff", "x00000x", "p000x", "p00000x", "p000x", "p000x", "p000x", "swscaler", "SWScaler", "sws_flags", "fast_bilinear", "bilinear", "bicubic", "area", "bicublin", "Gaussian", "sinc", "lanczos", "Lanczos", "print_info", "accurate_rnd", "full_chroma_int", "full_chroma_inp", "error_diffusion", "srcw", "srch", "dstw", "dsth", "src_format", "dst_format", "src_range", "dst_range", "param0", "param1", "src_v_chr_pos", "src_h_chr_pos", "dst_v_chr_pos", "dst_h_chr_pos", "sws_dither", "bayer", "a_dither", "x_dither", "gamma", "alphablend", "uniform_color"], "debugstrings": ["H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2", "MPEG-4 part 2 Microsoft variant version 1", "MPEG-4 part 2 Microsoft variant version 2", "MPEG-4 part 2 Microsoft variant version 3", "H.263+ / H.263-1998 / H.263 version 2", "On2 VP6 (Flash version)", "On2 VP6 (Flash version, with alpha channel)", "range <= 16 || !s->msmpeg4_version", "bugs: %X lavc_build:%d xvid_build:%d divx_version:%d divx_build:%d %s\n", "old standard qpel (autodetected per FOURCC/version)", "direct-qpel-blocksize bug (autodetected per FOURCC/version)", "edge padding bug (autodetected per FOURCC/version)", "strictly conform to a older more strict version of the spec or reference software", "Audio sample format conversion failed\n", "FFmpeg version 3.0.1", "libavcodec license: GPL version 3 or later", "Character encoding subtitles conversion needs a libavcodec built with iconv support for this codec\n", "Unsupported tag version. (>=%d)\n", "configurationVersion:                %u\n", "version", "minor_version", "sidx version %u", "premiere_version", "quicktime_version", "Version %d", "version =%d, isom =%d\n", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n", "FFmpeg version 3.0.1", "libavformat license: GPL version 3 or later", "FFmpeg version 3.0.1", "libavutil license: GPL version 3 or later", "unsupported conversion to planar RGB %s -> %s\n", "unsupported bayer conversion\n", "libswscale license: GPL version 3 or later", "No accelerated colorspace conversion found from %s to %s.\n", "GCC: (GNU) 4.9 20140827 (prerelease)"], "localsymbols": [""], "dependencies": ["libc.so", "liblog.so", "libz.so", "libm.so", "libdl.so", "libx264.so"], "elfname": "libffmpeg.so"}