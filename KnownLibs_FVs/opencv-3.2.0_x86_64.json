{"globalvars": ["icv_y8_owniConvert_8u32f_AC4_M7", "icv_m7_owniCopy8u_C4P4_44_M7", "icv_y8_ownSharpenRow_32f_AC4", "icv_y8_ownHipass5x5Row_8u", "icv_y8_owniConvert_16s32f_AC4_M7", "icv_m7_owniSet_16s_C1M_M7", "own_ipps_sPowx_Y8_ctab", "icv_m7_ownNorm_Inf_8u_C3CMR_M7", "icv_m7_ownscrDftInv_Fact4_32f", "icv_m7_ownLaplCol5x5_8u_C4", "icv_y8_ownippiFilterMedianVert_8u_1x5", "icv_m7_ownLaplRow5x5_32f_C1", "icv_l9_owniConvert_16u32f_AC4_M7", "icv_m7_ownippsMagn_32sc32s_Sfs_ASM", "icv_y8_ownFilterMaxRow02_8u_C1R_M7", "icv_y8_ownippiFilterMax_32f_Col", "icv_m7_ownCanny_16s8u_C1R_Mag_M7", "icv_m7_ippi_AlphaCompOutC_C1S_8u", "icv_y8_ownAFilterRow_8u_C3R", "icv_l9_owns_zBitRev1_Blk", "icv_l9_owniConvert_16s32f_AC4_M7", "icv_l9_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK_M7", "icv_m7_ownpi_Min_8u_C1R", "icv_l9_ownSharpenRow_8u_C1", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_M7", "icv_y8_ownpi_Xor_8u_C1R", "icv_m7_ownsDotProd_32f64f_M7", "icv_y8_ownscDftFwd_Fact_64fc", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C3R_X_U8", "icv_m7_ownippsMagn_32fc32f", "icv_m7_ownNormDiff_Inf_8u_C1MR_M7", "icv_m7_ownNormRel_L1_8u_C3CMR_M7", "icv_y8_owniCopy_8u_C3AC4R", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_3x3_sym_M7", "icv_y8_ownDistanceTransform_5x5_8u_C1R_Big_F_M7_", "icv_y8_ownHipass5x5Frs_32f", "icv_m7_owniCorrectAutoNormMean_32f_C1R", "icv_m7_ownippiThreshold_16s_AC4", "icv_y8_ownippiThreshold_V_8u_AC4", "icv_l9_ownpis_Min_32f_AC4", "icv_y8_owns_cFftFwd_Fact8_Last_64fc", "icv_y8_ownippiFilterMin_16u_Row", "icv_m7_ippi_AlphaCompPlus_C1S_8u", "icv_m7_ownNorm_L2_32f_C1MR_M7", "icv_y8_ownsFlip_16u_M7", "icv_m7_ownpis_Indx_8u_C3", "icv_m7_ownLaplRow5x5_32f_C4", "icv_m7_ownsCopy_8u", "icv_y8_ownNorm_L2_8s_C3CMR_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_U8", "icv_m7_ownsDotProd_32fc64fc_M7", "icv_l9_DotProd_32f32fc", "icv_m7_ownpi_Min_32f_AC4R", "icv_m7_ownCopySubpix_16u32f_C1R_M7", "icv_m7_ownCanny_16s8u_C1R_1_16u_M7", "icv_m7_ownSharpenRow_8u_C3", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_U8", "icv_y8_ownippiThreshold_V_32f_AC4", "icv_m7_ownHipass5x5Col_8u_C1", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_M7", "icv_y8_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_U8", "icv_m7_ownNormDiff_L2_32f_C3CMR_M7", "icv_m7_Plr2Crt_32f_M7", "icv_y8_ownNormRel_L1_8s_C1MR_U8", "icv_y8_owns_BitRev1_C", "icv_y8_ownLaplace3x3Row_32f_C3", "icv_l9_ownippiThreshold_8u_AC4", "icv_y8_ownippiFilterMedian_16s_C4R_3x3", "icv_y8_ownippiThreshold_16s_C3", "icv_y8_ownNormDiff_L1_16u_C3CMR_U8", "icv_l9_owns_crRadix4InvNorm_64f", "icv_l9_ippi_cDftMerge_32fc", "icv_l9_ownippiThreshold_LV_8u_C4", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_M7", "icv_y8_ownMinMaxIndx_16u_C1R_U8_1", "icv_y8_ownippiFilterMedian_16s_BC4R_5x5", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_M7", "icv_y8_ippi_AlphaCompOutC_AC4S_8u", "icv_y8_ownippiThreshold_V_8u_C3", "icv_m7_owniCopy16s_P4C4_M7", "icv_y8_ownippiFilterMedianVert_16s_1x3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_U8", "icv_m7_ownSumSq_8s_C1R_M7", "icv_y8_ownsDotProd_32f32fc64fc_M7", "icv_l9_ownHipass5x5Col_32f_C3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_U8", "icv_y8_ownNormRel_Inf_8s_C3CMR_U8", "icv_l9_DotProd_64fc", "icv_y8_ownpi_Sum_16s_AC4R", "icv_m7_ownAddProduct_16u32f_C1IMR_M7", "icv_m7_ownNormDiff_L2_8u_C1MR_M7", "icv_y8_ownippiFilterMax_16u_Row", "icv_l9_ownippiThreshold_GLV_32f_C1", "icv_m7_ownAbsDiffC_32f_C1R_M7_B", "icv_l9_ownHipass5x5Col_32f_C1", "icv_y8_ownsrDftFwdRecombine_64f", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_X_U8", "icv_y8_owns_cFftInv_CoreMT_64fc", "icv_l9_ownippiThreshold_GLV_8u_AC4", "icv_y8_ippi_AlphaPremulC_AC4S_8u", "icv_l9_ownsCopy_8u_E9", "icv_m7_owns_crRadix4FwdNorm_64f", "icv_y8_ownSumSq_32f_C3CR_M7_Al", "icv_y8_ownAddSquare_16u32f_C1IR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_M7", "icv_m7_ownscrDftFwd_Prime4_32f", "icv_y8_owniTranspose_32s_C1R_M7_NT", "icv_y8_ownsSet_16u_M7", "icv_l9_owniCopy_8u_C1M_M7", "own_ipps_dCos_Y8_ttab", "icv_m7_owniSet_8u_C1_M7", "icv_y8_ownNorm_L2_16u_C1MR_M7", "icv_y8_ownippiFilterMedianHoriz_8u_C1R_5x1", "icv_l9_owniCopy_8u_thin", "icv_y8_ownsDotProd_32s_M7", "icv_y8_ownsConj_64fc_M7", "icv_l9_ownLaplace3x3Row_32f_C1", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_M7", "icv_ps_set_ssx", "icv_m7_ippi_AlphaPremul_C1S_8u", "icv_m7_ownpi_AndC_8u_C3R", "icv_y8_ownCanny_16s8u_C1R_1_32s_M7", "icv_m7_owniSet_16s_C4_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_M7", "icv_y8_owns_cRadix4FwdNorm_64fc", "icv_m7_ippi_AlphaCompInC_C1S_8u", "icv_l9_ownpi_MaxIndx_32f_C1R", "icv_y8_ownpi_Max_8u_C3R", "icv_y8_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK_M7", "icv_y8_ownpi_MinMax_8u_C4R", "icv_y8_ownSharpenRow_16s_C3", "icv_m7_ippi_AlphaCompIn_C1S_8u", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_M7", "icv_l9_ownFilterMinRow02_8u_C1R_M7", "_ZN2cv15BriskScaleSpace13safetyFactor_E", "icv_y8_owns_crFftFwd_CoreMT_64f", "icv_y8_ownAddProduct_8u32f_C1IR_Y8", "icv_l9_ownippiThreshold_GLV_8u_C3", "icv_m7_ownNormDiff_Inf_16u_C1MR_M7", "icv_y8_ownippsSqrt_16sc_ASM_SF_S", "icv_m7_ownsMul_32fc_I", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_U8", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3_mm_M7", "icv_m7_ownippsCnvrt_8u32f", "icv_y8_ownippiFilterMedianCross_16s_C3R_3x3", "icv_m7_ownscDftFwd_Prime2_32fc", "icv_y8_ownsFlip_32f_I_M7", "icv_y8_ownsConj_16sc_M7", "icv_m7_ownLaplace3x3Row_16s_AC4", "icv_m7_ownAConvert_Round32s_8u_AC4R", "icv_l9_ownpi_Max_32f_C4R", "own_ipps_dLn_E7_ctab", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_M7", "icv_y8_ownMinMaxIndx_16u_C3CR_U8_1", "icv_l9_ownippiFilterMax_16s_Row", "icv_l9_ownCanny_32f8u_C1R_3_32s_M7", "icv_y8_ownscDftInv_Prime_64fc", "icv_l9_ownsFlip_8u_M7", "icv_m7_ownCanny_32f8u_C1R_2_32s_M7", "icv_y8_owniConvert_32f16u_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_M7", "icv_m7_ownNormRel_L1_32f_C1MR_M7", "icv_y8_ownMinMaxIndx_32f_C3CMR_U8_1", "icv_m7_ownpi_And_8u_C1R", "icv_l9_ownLaplace3x3Row_16s_C3", "icv_y8_ownCopySubpix_8u32f_C1R_U8", "icv_y8_ownippsSqrt_16u", "icv_y8_ownpi_MinIndx_8u_C1R", "icv_y8_ownCanny_16s8u_C1R_3_32s_M7", "icv_y8_ownAddWeighted_16u32f_C1IMR_M7", "icv_m7_ownAddWeighted_32f_C1IMR_M7", "icv_y8_ownscrDftFwd_Prime3_64f", "icv_l9_ownCopySubpix_32f_C1R_M7", "icv_m7_ownscrDftFwd_Fact_32f", "icv_m7_ownscDft_Dir_32f", "icv_m7_ownMinEigenVal_32f_C1R_M7", "icv_m7_ownSumSq_32f_C1R_smallsize_M7", "icv_l9_ownAFilterRow_16s_C3R", "icv_l9_ippi_AlphaCompPlusC_C1S_8u", "icv_y8_ownpis_Indx_16s_C4", "icv_l9_ownSharpenRow_16s_AC4", "icv_l9_owniCopy_8u_strmfull", "icv_y8_ownscrDftInv_Prime3_64f", "icv_l9_ownPrewColV_16s", "icv_m7_ownpis_Sum_16s_C3", "icv_l9_ownpis_Max_16s_C4", "icv_l9_ownAFilterRow_8u_C1R", "icv_y8_ownsrDftInv_Dir_32f", "icv_y8_ownippiFilterMedian_16s_C1R_5x5", "icv_y8_ownpi_Sum_8u_C1R", "icv_y8_owns_crRadix4Inv_32f", "icv_y8_ownippsMagn_16s_Sfs_ASM", "icv_y8_ownpis_Sum_16s_C3", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_M7", "icv_y8_ownHipass5x5Col_32f_C3", "_ZN3tbb8internal6market14theMarketMutexE", "icv_m7_ippi_AlphaCompAtopC_AC4S_8u", "icv_m7_ownHipass5x5Row_8u", "icv_l9_owns_dBitRev1_Blk", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_U8", "icv_m7_owniCopy8u_C3P3_48_M7", "icv_l9_owniSet32sC3Mas", "icv_m7_owniSwap_8u_C3_M7", "icv_m7_ownippiFilterMin_16s_Col", "icv_m7_ownpi_Min_32f_C4R", "icv_y8_ownscDftFwd_Prime5_64fc", "icv_y8_ownNorm_Inf_8s_C1MR_U8", "own_ipps_sSqrt_Y8_ttab", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_M7", "icv_y8_owniSwap_8u_C4C3R", "icv_l9_ownSharpenRow_32f_C3", "icv_l9_ownDistanceTransform_3x3_8u32f_C1R_21F_M7", "icv_y8_owns_crRadix4FwdNorm_32f", "icv_y8_ownpis_Indx_16s_C1", "icv_m7_ownBFilterRow32f_16s_C3R", "icv_l9_ownSharpenRow_32f_C4", "icv_m7_ippi_AlphaCompOver_AC1S_8u", "icv_m7_ownNorm_L1_8u_C1MR_M7", "icv_y8_ownDistanceTransform_3x3_8u_C1R_F_M7", "icv_m7_ownNorm_L2_8u_C3CMR_M7", "icv_y8_ownsrDftInvRecombine_64f", "icv_m7_ownAddWeighted_8s32f_C1IMR_M7", "icv_m7_Plr2Crt_64fc_M7", "icv_m7_owns_cBitRev1_Blk", "icv_m7_ownscDftInv_Prime2_64fc", "icv_y8_ownippsSqrt_32s16s", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3_mm_sym_M7", "icv_m7_ownpis_Indx_16s_C3", "icv_y8_ownscDftFwd_Prime_32fc", "icv_m7_ownpis_Min_16s_C3", "icv_y8_DotProd_16s16sc64sc", "icv_y8_owniCopy32s_P4C4_M7", "icv_y8_ownSumSq_32f_C3CR_smallsize_M7", "icv_y8_owniCopyReplicateBorder_8u_C1R", "icv_y8_owns_crFftInv_CoreMT_32f", "icv_y8_ownscrDftFwd_Prime2_64f", "icv_m7_ownippiThreshold_16s_C1", "icv_l9_ownHipass5x5Row_8u", "icv_m7_DotProd_32f32fc", "icv_l9_ownippsSqrt_16u", "icv_y8_ownippiFilterMedianCross_16s_C1R_3x3", "icv_m7_owniAutoNormMean_8s32s_C1R_M7", "icv_y8_ownsMul_32fc", "icv_y8_ownpi_Max_16s_C4R", "icv_y8_ownpi_MinMax_32f_C4R", "icv_m7_ownippsCnvrtFin_32f8u_Sfs", "icv_y8_owns_crRadix4Inv_64f", "icv_y8_owniAutoNormMean_8s32s_C1R_M7", "icv_l9_ownscDftInv_Fact_32fc", "icv_y8_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_y8_ownHipass5x5Frs_8u", "icv_m7_owns_BitRev1_4", "icv_y8_ownNormRel_L1_32f_C3CMR_M7", "icv_y8_ownpi_MinMax_16s_C3R", "icv_y8_ownpi_MinMax_32f_AC4R", "icv_l9_ownpi_MinMax_16s_C4R", "icv_m7_owns_crFft_BlkSplit_32f", "icv_y8_ownscrDftFwd_Fact2_64f", "icv_y8_ownscDft_Dir_64fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_M7", "icv_m7_ownippiThreshold_V_8u_C3", "icv_y8_ownippiFilterMin_32f_Row", "icv_y8_ownsConvert_32s16s_M7", "icv_y8_ownscrDftFwd_Prime3_32f", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_M7", "icv_l9_ownippiFilterMax_16s_Col_AC4", "icv_m7_ownNormDiff_L2_8s_C1MR_M7", "icv_y8_ownNormRel_L2_16u_C3CMR_U8", "icv_l9_ippi_AlphaCompXor_AC4S_8u", "icv_y8_ownippiFilterMedian_16u_BC4R_3x3", "icv_y8_ownpi_Max_32f_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_U8", "icv_y8_ownAdd_8u32f_C1IMR_Y8", "icv_l9_ownLaplace3x3Row_16s_C1", "icv_l9_ownSharpenRow_16s_C4", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8_3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_U8", "icv_y8_ownscDftInv_Fact2_64fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_M7", "icv_fft_fix_twiddle_table_64f", "icv_y8_owniSet16sC4Mas", "icv_l9_owniCopyReplicateBorder_8u_C1R", "icv_y8_ownippiFilterMedianCross_16u_C3R_3x3", "icv_m7_ownCanny_16s8u_C1R_2_16u_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_M7", "icv_m7_ownAddWeighted_8u32f_C1IR_M7", "icv_m7_ownAdd_8u32f_C1IR_M7", "icv_l9_ownAConvert_Round32s_16s_AC4R", "icv_y8_ownsCplxToReal_64fc_Y8", "icv_l9_ownscDftFwd_Prime_64fc", "icv_m7_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_M7", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C3R_3x3_U8", "icv_m7_owniCopy_8u_C1_M7", "icv_l9_ownLaplace3x3Row_16s_C4", "icv_y8_ownNorm_Inf_32f_C1MR_M7", "icv_y8_ownpi_MaxIndx_16s_C1R", "icv_y8_ownippsCnvrt_8u32f", "icv_l9_ownpi_MinIndx_32f_C1R", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_3x3_M7", "icv_y8_ownHipass5x5Col_8u_C3", "icv_m7_ownippsCnvrt_16f16s_Asm", "icv_l9_ownCanny_32f8u_C1R_Mag_M7", "icv_y8_ownNormRel_L2_8u_C3CMR_U8", "icv_y8_ownippsCnvrt_32f32s_Sfs", "icv_m7_ownNorm_Inf_16u_C1MR_M7", "icv_m7_ownpi_Sum_32f_C3R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_M7", "icv_m7_owns_cFft_BlkSplit_64fc", "icv_y8_ownippiThreshold_32f_AC4", "icv_y8_ownSq_32f_C3CMR_M7", "icv_y8_owns_cFftInv_CoreMT_32fc", "icv_l9_ownippiThreshold_GLV_16s_C1", "icv_l9_ownsConj_64fc_I_Y8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_U8", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_M7", "icv_l9_ippi_AlphaCompIn_AC4S_8u", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_U8", "icv_l9_owns_BitRev1_4", "icv_y8_ownippiThreshold_GLV_32f_AC4", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_M7", "icv_y8_ownscrDftFwd_Prime5_64f", "icv_l9_owniCopy16sC3Mas", "icv_l9_owniConvert_32f16s_M7", "icv_m7_ownippsSqrt_16s_ASM", "icv_y8_owniCopy_8u_AC4C3R", "_ZN3tbb8internal24the_global_observer_listE", "icv_m7_ownsrDftFwdRecombine_64f", "icv_y8_Plr2Crt_32fc_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_U8", "icv_y8_ownpi_Max_32f_C3R", "icv_y8_ownNormDiff_L2_32f_C3CMR_M7", "icv_m7_ownLaplCol5x5_32f_C4", "icv_l9_ownpis_Indx_32f_C1", "own_ipps_sSin_E7_ctab", "icv_m7_ownAConvert_Round32s_16s", "icv_y8_ownCanny_32f8u_C1R_3_32s_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_M7", "icv_y8_ownLaplace3x3Row_16s_AC4", "icv_y8_ippi_AlphaCompOut_C1S_8u", "icv_m7_ownHipass5x5Col_16s_C1", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_M7", "icv_l9_ownLaplace3x3Row_8u_C1", "icv_m7_ownippiFilterMax_16u_Col_AC4", "icv_m7_ownSum_8s_C3CMR_M7", "icv_y8_ownAConvert32s_8u_AC4R", "icv_y8_ownCopySubpixIntersect_16u32f_C1R_U8", "icv_y8_ownAddWeighted_16u32f_C1IR_M7", "icv_y8_owniCopy32s_C3P3_M7", "icv_m7_owniExchange_8u_I_M7", "_ZN3tbb8internal35the_context_state_propagation_mutexE", "icv_y8_owniSwap_8u_C3C4R", "icv_l9_owniConvert_8s32s_AC4_M7", "ippConstantOfNAN_64f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Const_U8", "ippConstantOfINF_NEG_32f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_M7", "icv_y8_ownAddProduct_32f_C1IR_M7", "icv_l9_owniCopy8u_C1C4_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_U8", "icv_l9_ownsDotProd_32f64f_E9", "icv_m7_ownsMul_32fc", "icv_m7_ownippiThreshold_GV_32f_C4", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_U8", "icv_y8_ownpi_Sum_8u_C3R", "icv_l9_owns_BitRev1_S", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_X_M7", "icv_y8_ownippiThreshold_16s_AC4", "icv_l9_ownpis_Indx_32f_C4", "icv_y8_ownNormDiff_L1_8u_C3CMR_U8", "icv_m7_ownscDftInv_Prime_64fc", "icv_m7_ownscrDftFwd_Prime2_64f", "icv_m7_ownscDftInv_Fact_32fc", "icv_m7_ownippsCnvrtFin_32f32s_Sfs", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_M7", "icv_y8_owniConvert_32s8u_AC4_M7", "icv_y8_ownippsCnvrt_8s32f", "icv_y8_ownsIndx_32f_M7", "icv_l9_owns_BitRev2_Z", "icv_m7_ownsSet_32s_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_M7", "icv_y8_ownAdd_8u32f_C1IR_M7", "icv_y8_ownNormRel_L1_16u_C3CMR_U8", "icv_m7_owns_BitRev2_Z", "icv_y8_ownpis_Min_8u_C4", "icv_l9_ownippiFilterMax_8u_Row", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_M7", "own_ipps_dSin_L9_ctab", "icv_y8_ownippiFilterMax_16s_Col_AC4", "icv_m7_ownippiThreshold_GLV_32f_AC4", "icv_l9_owniAutoNormMean_8u32s_C1R_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_M7", "icv_m7_ownpi_Sum_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_M7", "icv_m7_ownHipass5x5Frs_32f", "icv_m7_ownpi_Sum_16s_C3R", "icv_l9_ownCopySubpixIntersect_16u_C1R_M7", "icv_y8_ownippiFilterMedian_16u_C4R_3x3", "icv_y8_ownpis_Max_8u_C4", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_U8", "icv_y8_ownLaplace3x3Row_32f_AC4", "icv_y8_ownippiFilterMedianCross_16u_C1R_5x5", "icv_m7_ownpi_Min_16s_C3R", "icv_y8_ownsConj_32fc_I_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_5x5_U8", "icv_l9_ownippiThreshold_GLV_32f_AC4", "icv_y8_ownAddSquare_8s32f_C1IMR_M7", "icv_l9_ownippiThreshold_16s_AC4", "icv_l9_ownpi_Min_32f_AC4R", "icv_y8_ownippiFilterMedianCross_8u_C4R_5x5", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Repl_M7", "icv_y8_ownpis_Indx_32f_C3", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_M7", "_ZN10__cxxabiv119__terminate_handlerE", "icv_y8_ownNormRel_Inf_32f_C1MR_M7", "icv_m7_ownscDftFwd_Fact4_64fc", "icv_m7_ownDistanceTransform_3x3_8u_C1R_B_M7", "icv_y8_ownippsMagn_32sc32s_Sfs_ASM", "icv_y8_ownpi_AndC_8u_C1R", "icv_l9_ownHipass5x5Row_32f", "icv_m7_ownLaplace3x3Row_16s_C1", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_U8", "icv_m7_ippi_AlphaCompIn_AC1S_8u", "own_ipps_sLn_E7_ttab", "icv_m7_ownHipass5x5Col_8u_C3", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_5x5_mm_sym_M7", "icv_y8_owniConvert_32f8s_AC4_M7", "icv_m7_ownSharpenRow_32f_AC4", "icv_y8_ownippiThreshold_16s_C1", "icv_y8_ownippsCnvrt_32s32f", "icv_m7_ownippiThreshold_GLV_32f_C3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_X_U8", "icv_y8_ownippiFilterMedianHoriz_16u_C1R_5x1", "icv_m7_ownpi_Max_32f_AC4R", "icv_y8_ownippsCnvrtFin_32f16u_Sfs", "icv_m7_ownFilterMaxRow02_8u_C1R_M7", "icv_l9_owniTranspose_8u_C1IR_M7", "icv_l9_owns_BitRev1_8", "icv_l9_ownippsSqrt_64f", "icv_m7_ownAFilterRow32f_16u_C3R", "icv_y8_ownippiFilterMedian_16s_C3R_5x5", "icv_l9_ippi_AlphaCompAtop_AC1S_8u", "icv_y8_ownBFilterRow32f_8u_C4R", "icv_l9_Plr2Crt_64fc_M7", "icv_l9_Plr2Crt_32fc_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_M7", "icv_l9_owns_crRadix4InvNorm_32f", "icv_m7_owniFlip_32s_C4I_M7", "icv_l9_ippi_AlphaPremulC_AC4S_8u", "icv_y8_owns_crFftFwd_CoreMT_32f", "icv_y8_ownsFlip_32f_M7", "icv_y8_ownSumSq_8u_C1R_M7__", "icv_l9_ownpi_Max_32f_AC4R", "icv_m7_ownpi_OrC_8u_C4R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_M7_sym", "icv_m7_ippi_AlphaCompPlus_AC4S_8u", "icv_y8_ownLaplRow5x5_8u_C1", "icv_m7_ownMinMaxIndx_8u_C1MR_M7_1", "icv_y8_ownLaplace3x3Row_16s_C3", "icv_l9_owns_crRadix4FwdNorm_64f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_U8", "icv_l9_owns_cRadix4Inv_32fc", "icv_m7_ownscrDftFwd_Fact4_64f", "icv_l9_DotProd_64f", "icv_m7_ownippiThreshold_GLV_16s_C3", "icv_l9_ownDistanceTransform_3x3_8u_C1R_F_M7", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_X_M7", "icv_l9_ownCanny_16s8u_C1R_1_16u_M7", "icv_m7_ownpi_MinMax_16s_AC4R", "icv_l9_ownpis_Min_8u_C3", "icv_m7_ownippiFilterMax_32f_Row", "icv_y8_ownpis_Indx_8u_C4", "icv_m7_ippi_AlphaCompOut_AC4S_8u", "icv_m7_ownippsCnvrt_32f16f_Asm", "icv_y8_ownpi_And_8u_AC4R", "icv_y8_ownNormRel_L2_8u_C1MR_U8", "icv_y8_ownippsCnvrt_16u32f", "icv_y8_ownippiFilterMedianCross_8u_C4R_3x3", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_U8", "icv_y8_ownNormDiff_Inf_8s_C1MR_M7", "icv_l9_ownscrDftFwd_Fact2_32f", "icv_y8_ownippiFilterMedianHoriz_16s_BC4R_5x1", "icv_y8_ownsMinFind_32f_M7", "icv_m7_ownscrDftFwd_Fact5_32f", "icv_m7_ownippiThreshold_32f_AC4", "icv_m7_ownscrDftFwd_Fact4_32f", "icv_y8_ownMinMaxIndx_32f_C1R_M7", "icv_y8_ownpi_Min_16s_C1R", "icv_m7_ownHipass5x5Col_32f_C4", "icv_m7_ownCopySubpix_8u16u_C1R_Sfs_M7_", "icv_m7_DotProd_32fc", "icv_m7_owniSet_32f_C4_M7", "icv_m7_ownFilterMinRow02_8u_C1R_M7", "icv_y8_ownippiFilterMedianVert_16u_1x3", "icv_y8_ownHipass5x5Col_32f_C4", "icv_l9_ownDistanceTransform_3x3_8u_C1R_F_ND_M7", "icv_m7_ownAConvert32s_16s", "icv_l9_ownAFilterRow_16s_AC4R", "icv_l9_ownLaplRow5x5_32f_C1", "own_ipps_sSqrt_Y8_ctab", "icv_y8_ownAddWeighted_8u32f_C1IMR_Y8", "icv_y8_ownHipass5x5Col_8u_C1", "icv_y8_owns_BitRev1_S", "icv_y8_owns_cFft_BlkSplit_64fc", "icv_m7_ownsSet_16u_M7", "icv_y8_ownippiThreshold_8u_C1", "icv_y8_ownippiFilterMedianCross_16u_C3R_5x5", "icv_y8_ownNormDiff_L1_32f_C1MR_M7", "icv_m7_ownscDftInv_Fact5_32fc", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_M7", "icv_m7_owniSwap_8u_C3I_M7", "icv_l9_ownippiFilterMin_32f_Col", "icv_m7_ownscrDftFwd_Prime3_32f", "icv_m7_ownscrDftInv_Fact2_64f", "icv_m7_ownAConvert_Round32s_8u", "icv_l9_ownpis_Max_16s_AC4", "icv_y8_ownscDftInv_Fact4_64fc", "icv_m7_ownNormRel_L1_8u_C1MR_M7", "icv_m7_ownAddSquare_8u32f_C1IR_M7", "icv_m7_ownippsMagn_16sc16s_Sfs_ASM", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_M7", "icv_y8_owniCrossCorrValid_8s32s_C1R", "icv_y8_ownpi_AndC_8u_AC4R", "icv_m7_ownCopySubpixIntersect_16u32f_C1R_M7", "icv_m7_ownpi_XorC_8u_C1R", "icv_y8_ownNorm_Inf_32f_C3CMR_M7", "icv_y8_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_M7", "icv_m7_ownscrDftInv_Prime3_32f", "icv_m7_ownNormDiff_L2_32f_C1MR_M7", "icv_m7_ownsDotProd_32s_M7", "icv_y8_ownNormRel_L1_8s_C3CMR_U8", "icv_y8_ownippsMagn_16sc16s_Sfs_ASM", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_M7", "icv_y8_ownAConvert_Round32s_8u", "icv_m7_ownHipass5x5Col_32f_AC4", "icv_y8_owniAutoNormMean_32f_C1R_M7", "icv_y8_owniCopy8u_C1C4_M7", "icv_y8_ownAddProduct_32f_C1IMR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_M7", "icv_y8_ownippiFilterMedianHoriz_8u_C3R_3x1", "icv_m7_ownSharpenRow_16s_C4", "icv_y8_ownpi_Min_16s_AC4R", "icv_m7_dct_8x8_inv_32f", "icv_ipp_clear_ssx", "icv_y8_ownippiFilterMedianCross_16s_C1R_5x5", "icv_m7_owniCorrectAutoNormMean_8u32s_C1R", "icv_m7_ownpi_Min_8u_C4R", "icv_l9_ownippiThreshold_GLV_32f_C3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_U8", "icv_m7_ownAFilterRow_8u_AC4R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Wrap_U8", "icv_l9_owniFlip_16u_C4_M7", "icv_m7_ownippiFilterMin_16u_Col", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_M7", "icv_l9_owniTranspose_16u_C1IR_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_M7", "own_ipps_dInvSqrt_Y8_ctab", "icv_l9_ownAConvert32s_16s", "icv_m7_ownippsCnvrt_32f8u_Sfs", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_M7", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_5x5_U8", "icv_m7_ownscDftFwd_Prime2_64fc", "icv_y8_ownippiFilterMedianHoriz_16s_C4R_3x1", "icv_y8_ownAConvert32s_8u", "icv_y8_ownCopySubpix_8u32f_C1R_new_U8", "icv_y8_ownSumSq_16u_C3CMR_Y8", "icv_y8_ownCopySubpix_8u_C1R_U8", "icv_y8_ownscrDftInv_Fact2_32f", "icv_m7_ownippsSqrt_32f", "icv_y8_owniFlip_16u_C4_M7", "icv_y8_ownpi_Sum_8u_AC4R", "icv_ipp_isnan", "icv_y8_ownippiFilterMedian_8u_C1R_3x3", "icv_m7_owniCopy16s_AC4_M7", "icv_y8_ownMinMaxIndx_32f_C1MR_M7_1", "icv_m7_ownsrDftInvRecombine_64f", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_X_U8", "icv_y8_owniTranspose_8u_C3R", "icv_m7_ownippiThreshold_8u_C1", "icv_m7_ownpi_AndC_8u_C1R", "icv_y8_owniConvert_32s8s_M7", "icv_l9_ippi_AlphaCompXorC_C1S_8u", "own_ipps_dSin_Y8_ttab", "icv_m7_ownSharpenRow_32f_C1", "icv_l9_ownippsSqrt_64fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_U8", "icv_m7_ownMinEigenVal_16s32f_C1R_M7", "icv_m7_ownHipass5x5Frs_8u", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_M7", "icv_m7_ownscrDftFwd_Prime2_32f", "icv_m7_owniSwap_8u_210_AC4_M7", "icv_y8_ippi_AlphaCompAtop_AC1S_8u", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_M7_sym", "icv_y8_ownippiThreshold_GV_8u_C4", "icv_y8_ownCopySubpix_8u16u_C1R_Sfs_M7_", "icv_m7_ownNorm_L1_16u_C3CMR_M7", "icv_m7_owniFlip_8u_C4_M7", "icv_y8_owns_sBitRev1_Blk", "icv_y8_owns_crRadix4FwdNorm_64f", "icv_l9_ownpi_Min_32f_C3R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_M7", "icv_y8_ownAFilterRow32f_8u_C4R", "icv_y8_owns_dBitRev1_Blk", "icv_y8_ownMinMaxIndx_8s_C3CMR_U8_1", "icv_y8_owniTranspose_16u_C4IR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_U8", "icv_m7_ownpis_Min_8u_C4", "icv_y8_ownSumSq_8u_C3CMR_U8", "icv_m7_ownippsCnvrt_16s16f", "icv_m7_ownippiThreshold_V_32f_C3", "icv_y8_ownippiThreshold_GLV_8u_C1", "icv_y8_ownBFilterRow32f_16u_C1R", "icv_m7_owniTranspose_8u_C1R_M7", "icv_m7_ownpi_Max_32f_C4R", "icv_m7_ownCanny_32f8u_C1R_2_16u_M7", "icv_y8_ownNormDiff_Inf_8u_C3CMR_U8", "icv_y8_ownscDftInv_Fact_32fc", "icv_m7_ownippsCnvrt_32s64f", "icv_y8_ownpi_Sum_32f_AC4R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_M7", "icv_y8_ownSumSq_32f_C3CMR_M7", "icv_y8_owniConvert_32f8u_M7", "icv_m7_ippi_cDftSplit_32fc", "icv_m7_owniTranspose_32s_C4IR_M7", "icv_l9_ownpis_Indx_16s_C4", "icv_m7_ownippsCnvrt_16s32f", "icv_y8_ownMinMaxIndx_32f_C3CR_U8_1", "icv_y8_owniSet16sC1Mas", "_ZN3tbb8internal14__TBB_InitOnce5countE", "icv_y8_ownDistanceTransform_3x3_8u_C1R_F_ND_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_M7", "icv_y8_owniCopyConstBorder_C4R_M7", "icv_m7_ownpis_Indx_8u_C4", "icv_y8_owns_cRadix4InvNorm_64fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_M7", "icv_ippJumpIndexForMergedLibs", "icv_l9_owniSet16sC1Mas", "icv_m7_ownsConj_64fc_I_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_M7", "icv_y8_ownAFilterColumn_8u_C1R", "icv_y8_ownLaplace3x3Row_16s_C4", "icv_y8_ownHipass5x5Col_16s_C4", "icv_m7_ownpis_Indx_32f_C1", "icv_l9_ownpis_Max_32f_C3", "icv_m7_ownscDftInv_Prime4_64fc", "icv_m7_ownNormRel_L2_8u_C1MR_M7", "icv_m7_ownDistanceTransform_3x3_8u_C1R_F_M7", "icv_y8_ownippiFilterMin_16u_Col_AC4", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_U8", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_M7", "icv_y8_ownpi_MinMax_8u_C1R", "icv_l9_owniConvert_32s8s_AC4_M7", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C1R_X_U8", "icv_y8_owniCopy32s_C4P4_M7", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_X_M7", "icv_m7_owniFlip_16u_C4I_M7", "icv_m7_owniTranspose_32s_C1R_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Const_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_M7", "icv_l9_ownsRealToCplx_64f_Y8", "icv_m7_ownpi_Sum_16s_AC4R", "icv_y8_ownHipass5x5Frs_16s", "icv_y8_ownpis_Indx_8u_C1", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C3R_5x5_U8", "icv_y8_ownAddSquare_8s32f_C1IMR_Y8", "icv_y8_ownpi_Max_32f_AC4R", "icv_m7_ownCanny_16s8u_C1R_1_32s_M7", "icv_m7_ownscDft_Dir_32fc", "icv_m7_ownPrewColV_32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_M7", "icv_m7_ownAFilterColumn_8u_C1R", "icv_l9_ownsFlip_16u_M7", "icv_l9_ownpi_Max_8u_C3R", "icv_y8_ownippiFilterMedianCross_16s_C4R_5x5", "icv_l9_ownscDftFwd_Fact_32fc", "own_ipps_dCos_E7_ttab", "icv_l9_ownippiFilterMin_8u_Row", "icv_y8_ownsFlip_8u_I_M7", "icv_m7_ownLaplCol5x5_16s_C4", "icv_m7_ippi_AlphaCompAtop_AC1S_8u", "icv_y8_ownAFilterRow32f_16s_C3R", "icv_y8_ownpis_Min_8u_C3", "icv_l9_ownippsSqrt_16sc_ASM_SF_S", "icv_l9_ownippiThreshold_32f_C3", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_3x3_mm_M7", "icv_l9_ownpi_Min_32f_C1R", "_ZN3tbb8internal8governor6theTLSE", "icv_m7_ownpi_MinMax_8u_C1R", "icv_l9_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_U8", "icv_y8_ownpi_And_8u_C1R", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_5x5_mm_sym_M7", "icv_y8_ownMinMaxIndx_32f_C1R_U8_1", "icv_l9_ownAFilterRow_8u_C3R", "icv_m7_ownSharpenRow_8u_AC4", "icv_y8_ownpi_Max_16s_AC4R", "icv_m7_ownsConj_64fc_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_M7", "icv_l9_ownippsCnvrt_32f8u_Sfs", "icv_l9_ippi_AlphaCompIn_C1S_8u", "icv_y8_ownAddProduct_16u32f_C1IR_M7", "icv_m7_ownscrDftInv_Prime3_64f", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_M7", "icv_m7_ownscDftFwd_Prime3_64fc", "icv_y8_owns_cFft_BlkSplit_32fc", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_M7", "icv_l9_owns_cRadix4InvNorm_64fc", "icv_l9_ownippsCnvrt_32f8s_Sfs", "icv_l9_ownLaplRow5x5_8u_C3", "icv_y8_ownNormRel_Inf_16u_C1MR_M7", "icv_l9_DotProd_32fc", "icv_m7_owniCopyConstBorder_C4R_M7", "icv_y8_ownLaplRow5x5_32f_C4", "icv_y8_ippi_AlphaCompPlusC_C1S_8u", "icv_y8_ownLaplRow5x5_32f_C3", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_Wrap_M7", "icv_l9_DotProd_16s16sc64sc", "icv_m7_ownscDftInv_Fact2_32fc", "icv_y8_ownpi_Min_8u_C1R", "icv_y8_ownscrDftFwd_Prime4_32f", "icv_m7_ownpis_Min_16s_AC4", "icv_y8_ownsMinFind_16s_M7", "icv_l9_ownscrDftFwd_Fact2_64f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_M7", "icv_l9_ownsrDftFwd_Dir_64f", "icv_y8_ownNormDiff_L2_8u_C3CMR_U8", "icv_m7_owniCopy32s_C4P4_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_M7", "icv_y8_ownCopySubpix_16u32f_C1R_new_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_U8", "icv_m7_ownpi_MinMax_16s_C4R", "icv_l9_ownCopySubpixIntersect_8u32f_C1R_M7", "icv_m7_ownpi_Sum_8u_C4R", "icv_m7_ownpis_Max_8u_C4", "own_ipps_dPowx_Y8_ttab", "icv_y8_ownHipass5x5Col_8u_AC4", "icv_ownGetCacheSize", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_M7", "icv_y8_ownCopySubpixIntersect_32f_C1R_M7", "icv_y8_ownLaplace3x3Row_8u_C4", "icv_y8_ownsMul_32fc_I", "icv_m7_owns_BitRev1_S", "icv_m7_owns_crRadix4Fwd_32f", "own_ipps_sSin_L9_ctab", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_U8", "icv_m7_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss_M7", "own_ipps_sInvSqrt_Y8_ctab", "icv_m7_ownNorm_L2_16u_C1MR_M7", "own_ipps_dLn_L9_ctab", "icv_m7_ownLaplCol5x5_32f_C1", "icv_m7_ownpis_Indx_8u_C1", "icv_m7_ownAddWeighted_8u32f_C1IMR_M7", "icv_m7_ownPrewColV_16s", "icv_l9_ippi_AlphaCompOver_C1S_8u", "icv_y8_ownippiFilterMedianVert_8u_1x3", "icv_y8_ownDistanceTransform_5x5_8u32f_C1R_21B_M7", "icv_l9_owns_BitRev1_D", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_M7_sym", "icv_l9_ownCopySubpix_8u32f_C1R_M7", "icv_l9_ippi_AlphaCompPlus_AC1S_8u", "icv_y8_owniCorrectAutoNormMean_8u32s_C1R", "icv_y8_ownsMaxIndx_64f_M7", "icv_y8_ownsConvert_8s16s_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Mirr_U8", "icv_y8_ownHipass5x5Col_16s_AC4", "icv_y8_ippi_AlphaCompIn_AC1S_8u", "icv_m7_ownBFilterRow32f_8u_C3R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_M7", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_M7", "icv_y8_ownAConvert_Round32s_16s_AC4R", "icv_m7_ownNormRel_Inf_8s_C1MR_M7", "icv_l9_owniFlip_32s_C4_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_M7", "icv_y8_owniTplNormMean_8s32f_C1R_M7", "icv_ps_get_sw_fpu", "icv_y8_ownscDft_Dir_32fc", "icv_y8_owniFlip_16u_C4I_M7", "icv_y8_ownNormDiff_Inf_16u_C3CMR_U8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_M7_sym", "icv_l9_owniCopy_8u_fwd", "icv_m7_ownHipass5x5Col_32f_C3", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C1R_5x5_U8", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_M7_sym", "icv_m7_ownippiThreshold_GV_8u_C4", "icv_y8_ownNorm_Inf_8u_C1MR_M7", "icv_y8_ownNorm_L2_8s_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_M7", "icv_l9_ownpi_Max_32f_C3R", "icv_y8_ownippiFilterMedian_16s_C3R_3x3", "icv_m7_ownpi_And_8u_AC4R", "icv_m7_ownippsCnvrt_32f16s_Sfs", "icv_m7_ownscDftFwd_Prime3_32fc", "icv_l9_ownAConvert32s_8u_AC4R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_M7", "icv_m7_ownSharpenRow_16s_C3", "icv_m7_ownippiFilterMin_32f_Col_AC4", "icv_l9_ippi_AlphaCompXor_AC1S_8u", "icv_l9_ownpis_Max_8u_AC4", "icv_y8_ownAddSquare_8u32f_C1IMR_Y8", "icv_m7_ownippsCnvrt_64f32s_Sfs", "icv_ipp_get_cores_on_die", "icv_m7_ownSumSq_32f_C3CR_M7_Al", "icv_y8_ownNormDiff_Inf_32f_C3CMR_M7", "icv_y8_ownSumSq_32f_C1MR_M7", "own_ipps_dInvSqrt_L9_ctab", "icv_m7_owns_crFft_BlkSplit_64f", "icv_y8_ownsDotProd_16s32s32s_M7", "icv_m7_ownHipass5x5Row_32f", "icv_m7_owns_cFft_BlkMerge_32fc", "icv_m7_ownippsMagn_16sc32f", "icv_y8_ownCopySubpix_8u16u_C1R_Sfs_M7", "icv_y8_ownSum_8u_C1MR_M7", "icv_y8_owns_crRadix4InvNorm_64f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Mirr_U8", "icv_m7_owniSet_32f_C3M_M7", "icv_m7_owniSet_32f_C1M_M7", "icv_y8_owniSwap_32s_C3C4R", "icv_l9_ippi_AlphaCompPlus_AC4S_8u", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_3x3_U8", "icv_m7_ownscrDftInv_Fact4_64f", "icv_l9_ownHipass5x5Col_16s_C3", "icv_y8_ownippiThreshold_GLV_32f_C1", "icv_y8_ownNormDiff_L2_16u_C3CMR_U8", "icv_y8_ownNormDiff_Inf_32f_C1MR_M7", "icv_y8_ownCanny_16s8u_C1R_1_16u_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_U8", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_M7", "icv_l9_owns_cRadix4FwdNorm_32fc", "icv_m7_owns_BitRev1_8", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_M7", "icv_y8_ownippiFilterMedianVert_16s_1x5", "icv_y8_ownippsCnvrt_32f8s_Sfs", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_M7", "own_ipps_sSin_Y8_ctab", "icv_y8_owniConvert_32f16u_AC4_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_M7", "icv_m7_ownscrDftInv_Fact3_32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_U8", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_M7", "icv_y8_ownpi_OrC_8u_C4R", "icv_m7_ownpis_Min_32f_AC4", "icv_m7_ownippiThreshold_32f_C1", "icv_l9_ownSharpenRow_8u_C4", "icv_l9_ownpis_Max_32f_C4", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_U8", "icv_m7_owniConvert_8u16s_M7", "icv_m7_ownSq_32f_C3CMR_M7", "icv_l9_ownippiThreshold_V_8u_C3", "icv_l9_ownLaplRow5x5_8u_C4", "icv_y8_ownippsSqrt_8uPS", "icv_y8_owns_crFft_BlkSplit_32f", "icv_y8_ownpis_Sum_16s_C4", "icv_m7_owns_cRadix4Fwd_64fc", "icv_m7_ownsrDftInv_Dir_64f", "icv_y8_ownscDftFwd_Prime2_32fc", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_M7", "icv_m7_owniCopy8u_C4P4_48_M7", "icv_y8_ownpi_Max_16s_C3R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_X_M7", "icv_l9_ownippiFilterMax_16s_Col", "icv_ipp_set_rc_ssx", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_M7", "icv_m7_ippi_AlphaPremulC_C1S_8u", "icv_m7_ownLaplace3x3Row_32f_AC4", "icv_m7_ownscrDftInv_Prime2_32f", "icv_y8_owns_BitRev1_8", "icv_l9_ippi_AlphaCompOver_AC4S_8u", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5_U8", "icv_y8_ownpis_Indx_32f_C4", "icv_m7_ownpis_Max_32f_C4", "icv_l9_ownLaplCol5x5_8u_C4", "icv_m7_ownippiThreshold_V_16s_C3", "icv_ipp_has_cpuid", "icv_y8_ownippiFilterMedianHoriz_16s_C1R_5x1", "icv_m7_ownAbsDiff_8u_C1R_M7", "icv_y8_ownNormDiff_L2_16u_C1MR_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_M7", "icv_y8_ownpi_AndC_8u_C3R", "icv_y8_ownippiFilterMedianCross_8u_C3R_5x5", "icv_m7_ownippiThreshold_LV_32f_C4", "icv_y8_ownscDftFwd_Fact3_64fc", "icv_y8_Plr2Crt_32f_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_M7", "icv_m7_owniConvert_32s8s_M7", "icv_y8_ownippiFilterMax_8u_Col_AC4", "icv_y8_ippi_cDftMerge_32fc", "icv_l9_ownpi_Min_32f_C4R", "icv_y8_ownippiFilterMedian_16s_BC4R_3x3", "icv_y8_owniTranspose_8u_C1R_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_M7", "icv_m7_ownpi_OrC_8u_C3R", "own_ipps_dSin_Y8_ctab", "icv_m7_ownsrDftFwd_Dir_64f", "icv_l9_ownsConj_16sc_M7", "icv_m7_ownNormRel_L2_16u_C3CMR_M7", "_ZN10__cxxabiv120__unexpected_handlerE", "icv_y8_ownAddWeighted_8u32f_C1IR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_U8", "icv_l9_owniTplNormMean_8u32f_C1R_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_U8", "icv_y8_ownippsCnvrt_16s32f", "icv_m7_owniConvert_16u32f_AC4_M7", "icv_y8_ownippiFilterMedianHoriz_16u_C4R_3x1", "icv_y8_owniCopy16sC1Mas", "icv_y8_ippi_AlphaCompIn_C1S_8u", "icv_y8_ownAFilterRow_16s_AC4R", "icv_l9_ownSharpenRow_8u_AC4", "icv_m7_owniCopy_8u_C1M_M7", "icv_y8_ownippsCnvrt_64f32s_Sfs", "icv_y8_ownpi_XorC_8u_C4R", "icv_y8_ownippiFilterMedianHoriz_8u_BC4R_5x1", "icv_l9_ownPrewColV_8u", "icv_y8_ownHipass5x5Col_16s_C3", "icv_y8_ownLaplCol5x5_8u_C1", "icv_m7_ownpi_MinMax_32f_AC4R", "icv_l9_ownDistanceTransform_5x5_8u32f_C1R_21B_M7", "icv_l9_ownCopySubpixIntersect_8u_C1R_M7", "icv_y8_ownAddWeighted_8s32f_C1IMR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_U8", "icv_y8_ownippiFilterMedianVert_16u_C4R_1x3", "icv_m7_ownFilterRowBorderLowPipeline_16s_C1R_5x5_M7", "icv_m7_ownpi_MinMax_32f_C3R", "icv_m7_ownippiFilterMin_16s_Row", "icv_m7_ownippiFilterMax_16s_Col_AC4", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_M7", "icv_l9_ownAConvert_Round32s_8u", "icv_y8_owniCopy_16s_C3AC4R", "icv_y8_ownpis_Indx_32f_C1", "icv_y8_ownDistanceTransform_3x3_8u_C1R_B_M7", "icv_y8_ippi_AlphaCompOver_AC4S_8u", "icv_m7_ownNorm_L1_16u_C1MR_M7", "icv_y8_owns_cFftFwd_Fact8_Last_32fc", "icv_m7_ownNormRel_L2_8u_C3CMR_M7", "icv_m7_ippi_AlphaCompPlus_AC1S_8u", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_M7", "icv_y8_ownBFilterRow32f_16s_C4R", "icv_l9_owniCopy16sC4Mas", "icv_y8_ownscrDftInv_Prime2_64f", "icv_l9_ownSharpenRow_32f_AC4", "icv_y8_ownippsCnvrtFin_32f32s_Sfs", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8_2", "ippConstantOfINF_64f", "icv_y8_DotProd_16sc64sc", "icv_l9_ownDistanceTransform_3x3_8u32f_C1R_21B_M7", "icv_y8_ownpis_Max_16s_C4", "icv_y8_ownpis_Max_8u_AC4", "icv_m7_ownNormRel_L2_16u_C1MR_M7", "icv_y8_ownippsSqrt_16s_ASM", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_M7", "icv_l9_ownscrDftInv_Fact_32f", "icv_l9_ownAConvert_Round32s_8u_AC4R", "icv_y8_ownscDftInv_Fact5_64fc", "own_ipps_sSqrt_E7_ctab", "_ZN3tbb8internal35the_context_state_propagation_epochE", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_M7", "icv_m7_ownSharpenRow_16s_AC4", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_U8", "own_ipps_dExp_L9_ttab", "icv_y8_owniFlip_8u_C4_M7", "icv_m7_ownNorm_L1_8s_C1MR_M7", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5_mm_sym_M7", "icv_y8_ownNorm_Inf_8u_C3CMR_U8", "icv_y8_owniCopyConstBorder_C3R_M7", "_ZN3tbb8internal6market9theMarketE", "icv_l9_owniCorrectAutoNormMean_8s32s_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_M7", "icv_y8_ownippiThreshold_LV_32f_C4", "icv_y8_ownippiFilterMin_32f_Col_AC4", "icv_m7_ownscrDftFwd_Prime5_32f", "icv_l9_ippi_AlphaCompIn_AC1S_8u", "icv_y8_ownSharpenRow_8u_C4", "icv_y8_ownNorm_L1_32f_C1MR_M7", "icv_m7_ownippiThreshold_V_16s_AC4", "icv_y8_ownpi_Max_8u_C1R", "icv_l9_ownpi_Min_16s_C1R", "icv_l9_ownpi_Max_16s_C3R", "icv_l9_owniConvert_8s32f_M7", "icv_y8_owniTranspose_8u_C1IR_M7", "icv_y8_ownLaplRow5x5_16s_C4", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_M7", "icv_y8_ownpis_Max_16s_C3", "icv_y8_ownAFilterRow_8u_AC4R", "icv_l9_Plr2Crt_64f_M7", "own_ipps_dSin_E7_ttab", "icv_y8_ownNorm_L2_32f_C1MR_M7", "icv_y8_ownsrDftFwd_Dir_64f", "icv_m7_owniCopy8u_P4C4_M7", "icv_m7_owns_crRadix4InvNorm_32f", "icv_y8_ownNormDiff_L2_8u_C1MR_M7", "icv_y8_ownCanny_32f8u_C1R_Mag_M7", "icv_y8_ownippiFilterMedianCross_8u_C1R_3x3", "icv_y8_ownNormDiff_Inf_8s_C3CMR_U8", "icv_m7_owns_BitRev2_S", "icv_y8_ownHipass5x5Row_32f", "icv_m7_ownNormRel_Inf_8s_C3CMR_M7", "icv_y8_ownBFilterRow32f_16s_C1R", "icv_fft_fix_twiddle_table_32f", "icv_y8_owniCopy32s_C3P3_NT_M7", "icv_m7_ownHipass5x5Col_32f_C1", "_ZSt7nothrow", "icv_l9_ownippiThreshold_GLV_8u_C1", "icv_y8_ownCanny_16s8u_C1R_2_32s_M7", "icv_y8_ownAdd_16u32f_C1IMR_M7", "icv_m7_ownippiFilterMax_16u_Col", "icv_l9_owniTranspose_16u_C1R_M7", "icv_m7_ownAbsDiffC_16u_C1R_M7", "icv_y8_ippi_cDftSplit_32fc", "icv_y8_ownippiFilterMedianHoriz_8u_C3R_5x1", "icv_m7_ownLaplace3x3Row_16s_C4", "icv_l9_owniConvert_32s8s_M7", "icv_l9_ownLaplace3x3Row_32f_C3", "own_ipps_sPowx_L9_ttab", "icv_l9_ippi_AlphaCompOverC_C1S_8u", "icv_l9_ownLaplace3x3Row_8u_AC4", "icv_y8_ownAddSquare_32f_C1IMR_M7", "icv_m7_ownAConvert32s_8u", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Mirr_M7", "icv_y8_ownippiFilterMin_16s_Col_AC4", "icv_y8_ownIntegralSq_8u32s64f_C1R_U8", "icv_m7_ownscrDftInv_Prime_32f", "own_ipps_sCos_E7_ctab", "icv_y8_owniConvert_16s32f_M7", "icv_m7_owniTranspose_16u_C1R_M7", "icv_y8_ownNormRel_Inf_8u_C3CMR_U8", "icv_l9_Plr2Crt_32f_M7", "own_ipps_dInvSqrt_L9_ttab", "icv_l9_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_M7", "icv_l9_owniTranspose_32s_C1R_M7", "icv_y8_owniSet16sC3Mas", "icv_m7_ownNormDiff_Inf_16u_C3CMR_M7", "icv_l9_ownippsCnvrtFin_32f8s_Sfs", "icv_m7_ownpis_Max_16s_AC4", "icv_m7_ownippiFilterMin_16u_Col_AC4", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_M7", "icv_m7_ownAddProduct_32f_C1IR_M7", "icv_m7_ownippiFilterMax_8u_Row", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_M7", "icv_y8_ownAdd_8u32f_C1IMR_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_M7", "icv_l9_owniSwapChannels_8u_C3IR", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_M7", "icv_m7_owniCopy8u_C3P3_M7", "icv_y8_ownCopySubpixIntersect_16u32f_C1R_M7", "icv_l9_owniConvert_8u32f_AC4_M7", "icv_l9_ownippiThreshold_GV_8u_C4", "icv_y8_ownNormDiff_L1_32f_C3CMR_M7", "icv_l9_ownippiThreshold_V_32f_C3", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_M7_sym", "own_ipps_sExp_E7_ttab", "icv_y8_ownscDftFwd_Fact2_32fc", "icv_m7_ownCanny_32f8u_C1R_Mag_M7", "icv_y8_ownCanny_16s8u_C1R_3_16u_M7", "icv_m7_ownpi_Max_8u_C1R", "icv_y8_ownpi_OrC_8u_AC4R", "icv_m7_ownAddWeighted_16u32f_C1IR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_M7", "icv_y8_ownippsSqrt_32fc", "icv_l9_ownippiThreshold_LV_16s_C4", "icv_l9_ownAConvert_Round32s_16s", "icv_y8_ownippiThreshold_GLV_8u_AC4", "icv_l9_ownCanny_32f8u_C1R_3_16u_M7", "own_ipps_sInvSqrt_L9_ttab", "icv_m7_ownpi_Sum_8u_C3R", "icv_l9_ownippiThreshold_8u_C1", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_5x5_sym_M7", "icv_y8_ownippiFilterMedian_8u_C3R_3x3", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_U8", "icv_y8_ownsDotProd_16s64s_SrtLn_M7", "icv_y8_ownpi_MinIndx_16s_C1R", "icv_y8_ownDistanceTransform_3x3_8u32f_C1R_21B_M7", "icv_y8_ownAConvert_Round32f_16u_AC4R", "icv_m7_owniCopy32s_P3C3_M7", "icv_ipp_get_pentium_counter", "icv_m7_ownSharpenRow_8u_C4", "icv_y8_ownippiFilterMedianVert_16s_C4R_1x3", "icv_y8_ownAddWeighted_32f_C1IR_M7", "icv_y8_ownsConvert_16s32s_M7", "icv_l9_owniCorrectAutoNormMean_8u32s_C1R", "icv_y8_ownCopySubpix_16u_C1R_U8", "icv_l9_owniConvert_32f8u_AC4_M7", "icv_m7_ownippiThreshold_V_32f_C1", "icv_m7_ownippiThreshold_V_32f_AC4", "icv_m7_ownsConj_32fc_M7", "icv_y8_owns_cRadix4Fwd_64fc", "icv_y8_ownSq_32f_C1MR_M7", "icv_y8_ownBFilterRow32f_8u_C3R", "icv_y8_owniSet_32f_C3_M7", "icv_y8_ownSum_8s_C3CMR_M7", "icv_y8_ownippiThreshold_LV_8u_C4", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_M7", "icv_m7_ownscrDftInv_Fact5_32f", "icv_l9_owniConvert_32s8u_AC4_M7", "icv_y8_ownAddProduct_16u32f_C1IMR_M7", "icv_ipp_get_pentium_ident", "icv_y8_ownpis_Min_16s_AC4", "icv_y8_ownpi_MinMax_8u_AC4R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Mirr_M7", "icv_y8_ownpi_Min_32f_C3R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_M7", "icv_m7_owniConvert_16u32f_M7", "icv_m7_ownpi_MinMax_8u_C3R", "icv_y8_ownippiThreshold_32f_C3", "icv_m7_owns_BitRev1_C", "icv_y8_ownippiFilterMedianHoriz_16u_C4R_5x1", "icv_y8_ownHipass5x5Col_32f_C1", "icv_m7_ownpi_Min_8u_C3R", "icv_y8_ippi_AlphaPremul_AC4S_8u", "icv_y8_ownAddSquare_32f_C1IMR_M7_B", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_U8", "icv_m7_owniCopyConstBorder_C3R_M7", "icv_l9_ippi_AlphaCompAtopC_AC4S_8u", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_U8", "icv_ipp_has_rdtsc", "icv_m7_ownippiThreshold_V_16s_C1", "icv_m7_ownscDftFwd_Prime5_64fc", "_ZN3tbb8internal8governor19theRMLServerFactoryE", "icv_l9_ownscDftFwd_Fact2_64fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_M7", "icv_m7_owniCopy32s_C4P4_NT_M7", "icv_y8_ownsSet_64sc_M7", "icv_l9_ownippsCnvrt_16f32f", "icv_y8_ownCopySubpixIntersect_16u_C1R_M7", "icv_y8_ownsConj_16sc_I_M7", "icv_m7_ippi_AlphaCompOver_AC4S_8u", "icv_y8_owns_cRadix4InvNorm_32fc", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_M7", "icv_m7_ownscrDftFwd_Prime_32f", "icv_m7_ownsConvert_32s16s_Sfs0_M7", "icv_m7_ownscrDftInv_Fact2_32f", "icv_y8_ownCanny_32f8u_C1R_2_32s_M7", "icv_l9_owniTranspose_32s_C4IR_M7", "icv_l9_ownLaplCol5x5_32f_C1", "icv_l9_ownAFilterRow_16s_C1R", "icv_y8_ownippiThreshold_GLV_32f_C3", "icv_y8_ownippiFilterMedianCross_16u_C4R_3x3", "icv_l9_ownscrDftInv_Prime_64f", "icv_l9_ownippsCnvrt_32f16u_Sfs", "icv_l9_ownsDotProd_16s32s32s_M7", "icv_y8_owniConvert_16u32f_AC4_M7", "icv_l9_ippi_AlphaCompOutC_AC4S_8u", "icv_m7_ownpi_MinIndx_32f_C1R", "own_ipps_dSqrt_L9_ctab", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_M7", "icv_y8_ownpi_MinMax_8u_C3R", "icv_y8_owniConvert_32s8s_AC4_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_M7", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_5x5_mm_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_M7", "icv_m7_ownNormRel_Inf_8u_C3CMR_M7", "icv_m7_owniConvert_32s8s_AC4_M7", "icv_y8_ownpis_Max_32f_C4", "icv_l9_ippi_AlphaCompPlusC_AC4S_8u", "icv_y8_dct_8x8_inv_32f", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8", "icv_m7_owniTranspose_32s_C1R_M7_NT", "icv_m7_ownLaplace3x3Row_8u_C1", "icv_y8_ippi_AlphaPremulC_C1S_8u", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_U8", "icv_m7_owniConvert_8u32s_AC4_M7", "icv_l9_ownscrDftInv_Prime_32f", "icv_m7_ippi_AlphaCompIn_AC4S_8u", "icv_m7_owniCrossCorrValid_32f_C1R", "icv_y8_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_M7", "icv_m7_ownLaplace3x3Row_32f_C3", "icv_m7_owniCopy8u_C3P3_88_M7", "icv_y8_owniCopy_16s_AC4C3R", "icv_y8_ownippiFilterMedianCross_8u_C1R_5x5", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_M7", "icv_l9_owniFlip_16u_C4I_M7", "icv_m7_ownNorm_L2_32f_C3CMR_M7", "icv_m7_ownNormDiff_L1_8u_C3CMR_M7", "icv_l9_ownpis_Min_16s_C4", "icv_y8_owniCopyConstBorder_C1R_M7", "icv_y8_ownNormRel_Inf_8s_C1MR_U8", "icv_m7_ownpi_Max_16s_AC4R", "icv_l9_ownpis_Indx_8u_C1", "icv_m7_ippi_AlphaCompOver_C1S_8u", "icv_l9_ownpi_Min_8u_C3R", "icv_y8_owns_crFft_BlkMerge_32f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_U8", "icv_y8_ownscrDftFwd_Fact_32f", "icv_m7_ownAbsDiffC_32f_C1R_M7", "icv_y8_ownMinEigenVal_32f_C1R_M7", "icv_y8_owns_cRadix4Inv_64fc", "icv_m7_ownCanny_32f8u_C1R_3_16u_M7", "icv_m7_ownSumSq_32f_C3CR_M7", "icv_ipp_is_htt_extension", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_U8", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_M7", "icv_l9_ownsConvert_64s32s_SfPosFin_M7", "icv_m7_ownscDftFwd_Fact3_32fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_U8", "icv_l9_owns_BitRev2_8", "icv_y8_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_M7", "icv_m7_ownAFilterRow32f_8u_C1R", "icv_m7_ownippiThreshold_V_8u_C1", "icv_y8_ownippsMagn_32fc32f", "icv_m7_ippi_AlphaCompPlusC_C1S_8u", "icv_y8_ownippiFilterMax_32f_Col_AC4", "icv_m7_Plr2Crt_32fc_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_M7", "icv_m7_ownpi_AndC_8u_AC4R", "icv_m7_owns_cRadix4InvNorm_64fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_M7", "icv_m7_ownscDftInv_Fact_64fc", "icv_m7_ownscDftInv_Fact4_32fc", "icv_m7_ownpi_Sum_16s_C4R", "icv_m7_ownpi_Xor_8u_AC4R", "icv_y8_ownNormDiff_Inf_16u_C1MR_M7", "icv_y8_ownscDftFwd_Fact5_64fc", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_M7", "icv_m7_ownAddProduct_8u32f_C1IR_M7", "icv_m7_ownippsSqrt_32fc", "icv_y8_ownscDftFwd_Fact_32fc", "icv_l9_ownLaplCol5x5_8u_C1", "icv_m7_ownpi_Sum_32f_AC4R", "icv_m7_DotProd_16s16sc64sc", "icv_m7_owniSwap_8u_AC4_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_M7", "icv_y8_ownCanny_16s8u_C1R_2_16u_M7", "icv_m7_ownsConj_16sc_M7", "icv_l9_owniFlip_8u_C4I_M7", "icv_l9_ippi_AlphaCompXor_C1S_8u", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_5x5_mm_M7", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8", "icv_y8_owniCorrectAutoNormMean_8s32s_C1R", "icv_m7_ownippsMagn_16s_Sfs_ASM", "icv_y8_ownMinMaxIndx_32f_C1R_U8_2", "icv_m7_ownippsCnvrtFin_32f8s_Sfs", "icv_m7_dct_8x8_fwd_32f", "icv_y8_ownAddWeighted_8u32f_C1IR_Y8", "icv_m7_ownPrewColV_8u", "icv_l9_ippi_AlphaCompOutC_C1S_8u", "own_ipps_sPowx_E7_ctab", "own_ipps_dSqrt_E7_ctab", "icv_y8_owniFlip_8u_C4I_M7", "icv_y8_ownLaplCol5x5_32f_C4", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_M7", "icv_y8_owniCrossCorrValid_8u32s_C1R", "icv_m7_ownpi_Max_16s_C3R", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5_sym_M7", "icv_l9_ownippiFilterMax_16u_Col_AC4", "icv_m7_ownAbsDiff_16u_C1R_M7_B", "icv_y8_ownpis_Max_32f_AC4", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C3R_X_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_U8", "icv_y8_ownMinEigenVal_16s32f_C1R_M7", "icv_y8_ownscDftInv_Fact3_32fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_U8", "icv_y8_owniCopy8uas", "icv_l9_owns_cRadix4Fwd_64fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_Mirr_M7", "icv_m7_owniConvert_16s32f_AC4_M7", "icv_m7_ownAbsDiffC_8u_C1R_M7", "icv_ipp_set_rcpc_fpu", "icv_y8_ippi_AlphaCompInC_AC4S_8u", "icv_y8_ownSum_32f_C1MR_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_M7_sym", "icv_y8_ippi_AlphaCompIn_AC4S_8u", "icv_m7_ownAConvert32s_8u_AC4R", "icv_l9_ownpi_MinMax_8u_AC4R", "icv_l9_ownippiThreshold_32f_C1", "icv_y8_owns_cFftFwd_CoreMT_64fc", "icv_m7_ownippiThreshold_GLV_8u_AC4", "icv_m7_ownNorm_L2_8u_C1MR_M7__", "icv_m7_owniConvert_16s8u_M7", "icv_m7_ownippiThreshold_8u_AC4", "icv_m7_ownpi_Max_32f_C1R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_M7", "icv_y8_ownNormRel_Inf_8u_C1MR_M7", "icv_y8_ownNorm_Inf_16u_C1MR_M7", "icv_y8_ownscrDftInv_Fact2_64f", "icv_l9_ownippiFilterMin_16u_Col_AC4", "icv_l9_ownsfen", "icv_y8_owns_cFftFwd_CoreMT_32fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_U8", "icv_l9_owniCopy16sC1Mas", "icv_y8_ownNorm_L1_32f_C3CMR_M7", "icv_m7_ownsFlip_8u_M7", "icv_ownGetReg", "icv_y8_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_l9_ownscDftFwd_Fact_64fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_U8", "icv_y8_owns_crRadix4InvNorm_32f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_U8", "icv_m7_ownNorm_L1_8u_C3CMR_M7", "icv_y8_ownNormRel_L1_8u_C3CMR_U8", "icv_y8_ownMinMaxIndx_8u_C3CR_U8_1", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_U8", "icv_y8_owniCopy_8u_C1M_M7", "icv_y8_ownNormDiff_L2_8s_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_U8", "icv_m7_ownNormRel_L2_32f_C3CMR_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_M7", "own_ipps_dSqrt_E7_ttab", "icv_y8_ownpi_Min_8u_C4R", "icv_m7_ownDistanceTransform_3x3_8u32f_C1R_21F_MASK_M7", "icv_y8_ownNormDiff_L1_8u_C1MR_M7", "icv_ipp_clear87", "icv_m7_ownscDftInv_Prime3_32fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_U8", "icv_y8_ownDistanceTransform_5x5_8u_C1R_Big_F_M7", "icv_y8_ownSharpenRow_8u_AC4", "icv_m7_owniTplNormMean_32f_C1R_M7", "icv_l9_ownpi_Max_16s_C4R", "icv_m7_ownAFilterRow32f_8u_C4R", "icv_y8_ownpi_Sum_16s_C3R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_M7", "icv_m7_ownippiFilterMin_8u_Col_AC4", "own_ipps_dSqrt_L9_ttab", "icv_m7_ownippsCnvrtFin_32f16s_Sfs", "icv_y8_dct_8x8_fwd_32f", "icv_y8_ownsConj_64fc_Y8", "icv_y8_ownNorm_L1_8s_C3CMR_U8", "icv_y8_ownippsCnvrt_32f8u_Sfs", "icv_l9_ownpis_Min_16s_C3", "icv_m7_ownNormRel_L1_16u_C3CMR_M7", "icv_l9_ownCanny_16s8u_C1R_1_32s_M7", "icv_y8_ownippsSqrt_32f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_M7", "icv_l9_ownippsCnvrtFin_32f8u_Sfs", "icv_m7_owniCopy32s_P4C4_M7", "icv_l9_ownBFilterColumn_8u_C1R", "icv_l9_ownpis_Max_32f_AC4", "icv_l9_owniCopyConstBorder_C1R_M7", "own_ipps_dLn_Y8_ttab", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_U8", "icv_y8_ownscrDftFwd_Fact2_32f", "icv_y8_ownpis_Max_8u_C3", "icv_y8_ownNormRel_L1_16u_C1MR_M7", "icv_y8_ownCanny_16s8u_C1R_Mag_M7", "icv_m7_ownAFilterRow32f_8u_C3R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_M7", "icv_y8_ownippiFilterMedianHoriz_16s_BC4R_3x1", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Const_M7", "icv_m7_ownNormDiff_L2_16u_C3CMR_M7", "icv_m7_ownNormDiff_Inf_8s_C3CMR_M7", "icv_m7_ownscDftInv_Fact5_64fc", "icv_m7_ownpi_MinMax_32f_C4R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_M7", "icv_y8_owns_crRadix4Fwd_32f", "icv_m7_ownNormDiff_L1_8u_C1MR_M7", "icv_y8_ownippiFilterMedian_16u_C3R_3x3", "icv_m7_ownAConvert_Round32f_16u_AC4R", "icv_y8_ownippsCnvrt_32f16u_Sfs", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_M7", "icv_y8_ownscrDftInv_Prime_32f", "icv_y8_ownippiFilterMedianVert_8u_C4R_1x5", "icv_y8_ippi_AlphaCompAtop_C1S_8u", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Const_M7", "icv_m7_ownCopySubpix_32f_C1R_M7", "icv_y8_ownscDftInv_Fact3_64fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_M7", "icv_y8_ownpi_MaxIndx_32f_C1R", "icv_m7_owniConvert_16s32f_M7", "icv_m7_ownLaplRow5x5_8u_C3", "icv_l9_ownpis_Max_16s_C3", "icv_y8_ownscDftInv_Prime2_64fc", "icv_y8_owns_BitRev2_D", "icv_m7_owniConvert_8u32f_AC4_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_M7", "icv_y8_ownpi_Max_32f_C4R", "icv_m7_ownpis_Indx_16s_C4", "icv_m7_ownAddSquare_8s32f_C1IMR_M7", "icv_l9_ownsFlip_16u_I_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_M7", "_ZN3tbb8internal8governor13UsePrivateRMLE", "icv_m7_ownLaplRow5x5_16s_C3", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8_1", "icv_y8_ownSumSq_32f_C1R_smallsize_M7", "icv_y8_owniConvert_32f8s_M7", "icv_m7_ippi_AlphaCompAtop_C1S_8u", "icv_y8_DotProd_32fc", "icv_y8_ownLaplRow5x5_16s_C3", "icv_m7_ownCopySubpixIntersect_8u32f_C1R_M7", "icv_m7_ownNorm_Inf_8u_C1MR_M7", "own_ipps_sPowx_E7_ttab", "own_ipps_sSin_L9_ttab", "icv_y8_ownippsCnvrtFin_32f8u_Sfs", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C3R_3x3_U8", "icv_m7_ownSumSq_32f_C3CMR_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_Repl_M7", "icv_l9_owniFlip_32s_C4I_M7", "icv_l9_ownLaplace3x3Row_8u_C3", "icv_y8_ownippiFilterMedianHoriz_16s_C3R_3x1", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_3x3_mm_M7", "icv_m7_owniCopy_8u_C3M_M7", "icv_y8_ownMinMaxIndx_8u_C1R_U8_2", "icv_m7_owniCopy8u_C4C1_M7", "icv_l9_ownippiThreshold_16s_C3", "_ZN6CvType5firstE", "icv_y8_owns_cRadix4FwdNorm_32fc", "icv_l9_owniConvert_32s8u_M7", "icv_y8_ownscrDftInv_Fact_64f", "icv_l9_ownippsCnvrt_32f16f_Asm", "icv_y8_ownippiFilterMedian_16s_C1R_3x3", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_M7_sym", "icv_y8_ownAddSquare_32f_C1IR_M7", "icv_l9_ownDistanceTransform_5x5_8u_C1R_Big_F_M7", "icv_y8_ownCanny_32f8u_C1R_2_16u_M7", "icv_y8_ownSharpenRow_16s_AC4", "icv_y8_DotProd_64f", "icv_y8_ownippsCnvrt_32s64f", "icv_ipp_is_wni_extension", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_U8", "icv_y8_ownNorm_L1_8s_C1MR_U8", "icv_y8_ippi_AlphaCompOverC_C1S_8u", "icv_l9_ownsDotProd_32s_M7", "icv_y8_ownDistanceTransform_3x3_8u32f_C1R_21F_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_M7", "icv_y8_ownscDftInv_Prime2_32fc", "icv_m7_ownippiFilterMin_32f_Col", "own_ipps_sCos_Y8_ctab", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_U8", "icv_m7_ownpis_Max_32f_C3", "icv_m7_ownsSet_64s_M7", "own_ipps_dExp_L9_ctab", "icv_y8_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss_M7", "icv_m7_ownscDft_Dir_64fc", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_M7", "icv_y8_owniSet_8u_C1_M7", "icv_m7_ownpis_Min_32f_C4", "icv_m7_ownAbsDiff_32f_C1R_M7", "icv_y8_ownFilterMinRow02_8u_C1R_M7", "icv_m7_ownAddWeighted_16u32f_C1IMR_M7", "own_ipps_sLn_L9_ctab", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_M7", "icv_y8_ownscDftInv_Prime5_32fc", "icv_m7_ownSharpenRow_16s_C1", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_U8", "icv_l9_ownFilterMaxRow02_8u_C1R_M7", "own_ipps_sExp_L9_ctab", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Mirr_M7", "icv_l9_ownpi_Min_16s_C3R", "icv_y8_ownAFilterRow32f_16s_C4R", "icv_y8_ownsIndx_16s_M7", "icv_y8_ownscDftInv_Prime5_64fc", "icv_l9_ownpis_Min_16s_AC4", "icv_y8_owns_BitRev2_8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_M7", "icv_m7_ownpi_XorC_8u_AC4R", "icv_y8_owns_cRadix4Fwd_32fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Wrap_U8", "icv_y8_ownsConj_64fc_I_Y8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_M7", "icv_y8_ownLaplace3x3Row_32f_C1", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_M7", "icv_y8_owniSwap_32s_C4C3R", "icv_y8_owns_BitRev2_4", "icv_m7_ownscDftInv_Fact4_64fc", "icv_y8_ownscrDftFwd_Fact_64f", "icv_y8_owniConvert_8s32f_AC4_M7", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_3x3_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_U8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_M7_sym", "icv_m7_ownpi_MinIndx_16s_C1R", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_M7", "icv_y8_ownSharpenRow_8u_C1", "icv_m7_ownpi_OrC_8u_AC4R", "icv_y8_ownscrDftFwd_Fact5_64f", "icv_m7_owniTranspose_16u_C1IR_M7", "icv_m7_ownsDotProd_16s64s_SrtLn_M7", "icv_m7_DotProd_64f", "icv_l9_ownippsCnvrtFin_32f16u_Sfs", "icv_m7_ownSq_32f_C1MR_M7", "icv_l9_owniSet32sC1Mas", "icv_l9_ownHipass5x5Col_16s_C4", "own_ipps_sInvSqrt_E7_ttab", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_M7", "icv_m7_ownSharpenRow_32f_C4", "icv_y8_owniCopy32s_C4P4_NT_M7", "icv_l9_ownpi_Min_16s_AC4R", "icv_m7_ownBFilterRow32f_16u_C4R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_U8", "icv_y8_ownNormDiff_L1_16u_C1MR_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_M7", "icv_m7_ippi_AlphaCompOut_C1S_8u", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_M7", "icv_m7_ownsfen", "own_ipps_sSqrt_L9_ctab", "icv_y8_ownippsSqrt_64f", "icv_y8_ownPrewColV_16s", "icv_l9_ownDistanceTransform_5x5_8u_C1R_Big_F_M7_", "icv_m7_ownpi_Or_8u_C1R", "icv_y8_ownscDftFwd_Fact4_32fc", "icv_l9_owns_sBitRev1_Blk", "icv_m7_ownpi_Min_8u_AC4R", "icv_m7_ownippiFilterMax_32f_Col", "icv_m7_ownNormRel_L2_8s_C3CMR_M7", "icv_y8_ownpi_OrC_8u_C3R", "icv_m7_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short_M7", "icv_m7_ippi_AlphaCompXor_AC1S_8u", "icv_m7_owniSet_8u_C1M_M7", "icv_m7_owniCopy8u_C4P4_M7", "icv_m7_owns_BitRev1_D", "icv_m7_ownpis_Min_32f_C3", "icv_y8_ownippsMin_16s", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_M7", "icv_l9_ownscDft_Dir_64fc", "icv_m7_ownpi_XorC_8u_C3R", "own_ipps_dSin_L9_ttab", "icv_ipp_is_movbe", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_M7", "icv_m7_ownHipass5x5Col_16s_C3", "icv_y8_ownscrDftFwd_Prime5_32f", "icv_m7_ownippiThreshold_GLV_8u_C3", "icv_y8_ownCopySubpixIntersect_8u32f_C1R_M7", "icv_y8_ownAddSquare_16u32f_C1IMR_M7", "icv_y8_owniCopy8u_AC4_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_M7", "icv_l9_ownLaplRow5x5_32f_C3", "icv_m7_ownpi_Sum_32f_C1R", "icv_y8_ownFilterRowBorderLowPipeline_16s_C1R_5x5_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Wrap_M7", "icv_y8_ownsConj_32fc_M7", "icv_m7_ownscrDftFwd_Prime4_64f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_M7", "icv_y8_ownLaplRow5x5_32f_C1", "icv_m7_ownLaplace3x3Row_32f_C4", "icv_y8_ownippiThreshold_8u_AC4", "icv_y8_ownscDftFwd_Fact4_64fc", "icv_y8_ownSharpenRow_32f_C4", "icv_m7_owniConvert_8s32s_AC4_M7", "icv_m7_owns_cRadix4InvNorm_32fc", "icv_y8_ownippiFilterMax_16u_Col_AC4", "icv_m7_ownAdd_16u32f_C1IMR_M7", "icv_l9_ownLaplCol5x5_32f_C4", "icv_m7_ownpi_MinMax_16s_C3R", "icv_m7_owns_dBitRev1_Blk", "icv_m7_ownscrDftInv_Prime5_64f", "icv_l9_ownLaplRow5x5_16s_C4", "icv_m7_ownNormDiff_Inf_32f_C3CMR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_M7_sym", "icv_m7_owniCopy16s_C3P3_NT_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_U8", "icv_y8_owniConvert_32s8u_M7", "icv_m7_ownCopySubpixIntersect_8u16u_C1R_Sfs_M7", "icv_m7_ownpis_Max_8u_AC4", "icv_y8_ownippiFilterMax_8u_Row", "icv_y8_DotProd_16s64s", "own_ipps_sLn_Y8_ttab", "icv_y8_owniSwap_16s_C3C4R", "icv_l9_ownscDftInv_Fact2_64fc", "icv_m7_ownpi_Min_16s_AC4R", "icv_y8_ownippiFilterMedian_16u_C1R_5x5", "icv_y8_ownNorm_L2_16u_C3CMR_U8", "icv_y8_ownippiFilterMedian_16u_C3R_3x3_prev", "icv_l9_ownsDotProd_32fc64fc_M7", "_ZN2cv15BriskScaleSpace10basicSize_E", "icv_y8_ownCopySubpixIntersect_8u_C1R_M7", "icv_m7_ownippiFilterMax_16s_Col", "icv_l9_owns_cRadix4Fwd_32fc", "icv_m7_ippi_AlphaCompOut_AC1S_8u", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_M7", "icv_y8_ownpis_Indx_16s_C3", "icv_m7_ownpi_Max_16s_C4R", "icv_m7_ownNormDiff_L2_8u_C3CMR_M7", "icv_y8_ownippiFilterMedianHoriz_16u_C3R_3x1", "icv_y8_ownLaplRow5x5_8u_C4", "icv_m7_ownSharpenRow_8u_C1", "icv_y8_ownAddSquare_8u32f_C1IMR_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_M7", "icv_l9_owns_cRadix4FwdNorm_64fc", "icv_y8_ownDistanceTransform_5x5_8u32f_C1R_21F_M7", "icv_y8_owniConvert_16u8u_M7", "icv_m7_ownippiFilterMax_16u_Row", "own_ipps_dExp_Y8_ctab", "icv_m7_ippi_AlphaCompXorC_C1S_8u", "icv_y8_owns_cFftInv_Fact8_Last_64fc", "own_ipps_sExp_E7_ctab", "icv_m7_ownDistanceTransform_3x3_8u32f_C1R_21B_M7", "icv_m7_ippi_AlphaCompInC_AC4S_8u", "icv_m7_ownpis_Max_32f_AC4", "icv_l9_DotProd_64f64fc", "icv_y8_ownpi_MinMax_32f_C3R", "icv_m7_owns_crRadix4Inv_64f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_M7", "icv_m7_ownLaplRow5x5_16s_C4", "icv_m7_ownBFilterColumn_8u_C1R", "icv_m7_ownpi_MinIndx_8u_C1R", "icv_m7_ownNormRel_L2_8s_C1MR_M7", "icv_m7_ownscDftFwd_Fact4_32fc", "own_ipps_sPowx_Y8_ttab", "icv_y8_Plr2Crt_64fc_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_M7", "icv_y8_ownpi_Sum_32f_C4R", "icv_l9_ippi_AlphaCompOver_AC1S_8u", "icv_m7_ownNormRel_L1_8s_C1MR_M7", "icv_m7_ownpi_MinMax_8u_C4R", "own_ipps_dCos_L9_ctab", "icv_m7_ownNorm_Inf_8s_C1MR_M7", "own_ipps_dLn_Y8_ctab", "icv_y8_ownippiThreshold_V_16s_C3", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_X_M7", "icv_y8_ownsConj_64fc_I_M7", "icv_m7_ownsrDftFwdRecombine_32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_M7", "icv_m7_ownippsSqrt_32s16s", "icv_y8_DotProd_64fc", "icv_y8_ownippiFilterMedian_16u_C4R_5x5", "icv_y8_ippi_AlphaCompXorC_C1S_8u", "icv_l9_ownscrDftFwd_Fact_64f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_M7", "icv_m7_ippi_AlphaCompXorC_AC4S_8u", "own_ipps_sLn_L9_ttab", "icv_m7_ownpis_Min_8u_AC4", "icv_m7_owns_sBitRev1_Blk", "icv_m7_ownscDftFwd_Fact5_64fc", "icv_y8_owniSet_8u_C3_M7", "icv_m7_owns_cFft_BlkMerge_64fc", "icv_y8_ownippiFilterMedianCross_16u_C1R_3x3", "icv_y8_owniFilter_32f_C1R", "own_ipps_sSqrt_L9_ttab", "icv_m7_ownsDotProd_16s32s32s_M7", "icv_l9_ippi_AlphaCompOut_AC4S_8u", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_M7", "icv_m7_owniCopy8u_C1C4_M7", "icv_l9_ownippiThreshold_LV_32f_C4", "icv_l9_ownpis_Indx_16s_C3", "icv_l9_ownHipass5x5Frs_8u", "icv_m7_ownippsCnvrtFin_64f32s_Sfs", "icv_l9_owniSet_8u_C1M_M7", "icv_m7_owniSet_16s_C1_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_M7", "icv_l9_owns_crRadix4FwdNorm_32f", "icv_y8_owniTranspose_32s_C1R_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_M7", "icv_y8_ownsDotProd_32fc64fc_M7", "_ZN3tbb8internal8governor22DefaultNumberOfThreadsE", "icv_l9_owns_BitRev2_D", "icv_l9_ownpi_Max_8u_C4R", "icv_y8_owns_BitRev2_C", "icv_y8_ippi_AlphaCompPlus_AC4S_8u", "icv_ipp_is_avx_extension", "icv_l9_ownpis_Indx_8u_C4", "icv_y8_ownippiThreshold_LV_16s_C4", "icv_y8_ownLaplace3x3Row_16s_C1", "icv_y8_owniFlip_32s_C4_M7", "icv_m7_ownscDftFwd_Fact3_64fc", "icv_y8_owniTplNormMean_8u32f_C1R_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_M7", "icv_y8_owniTranspose_16u_C1IR_M7", "icv_y8_owniCopy32s_P3C3_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Repl_M7", "own_ipps_dPowx_E7_ctab", "own_ipps_dLn_L9_ttab", "icv_l9_ownpi_Max_32f_C1R", "icv_m7_ownippiThreshold_32f_C3", "icv_y8_ownCanny_32f8u_C1R_3_16u_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_U8", "icv_y8_ownAConvert_Round32s_16s", "icv_l9_ownippsCnvrtFin_64f32s_Sfs", "icv_l9_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_U8", "icv_y8_ownAddWeighted_8u32f_C1IMR_M7", "icv_y8_ownippiFilterMedianVert_16u_1x5", "icv_y8_ownippiFilterMedianHoriz_16u_C1R_3x1", "icv_m7_ownNorm_L1_32f_C1MR_M7", "icv_m7_ownsSet_64sc_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_U8", "icv_m7_ownippiThreshold_GLV_32f_C1", "icv_l9_ownpis_Indx_32f_C3", "icv_l9_ownsSet_8u_E9", "icv_y8_ownBFilterColumn_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_M7", "icv_l9_ownDistanceTransform_5x5_8u32f_C1R_21F_M7", "icv_y8_ippi_AlphaPremul_C1S_8u", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_M7", "icv_l9_ownippiThreshold_GLV_16s_AC4", "ippConstantOfINF_NEG_64f", "icv_m7_ownpi_Max_32f_C3R", "icv_y8_ownpi_MaxIndx_8u_C1R", "icv_m7_ownpi_Min_32f_C1R", "icv_m7_ownSumSq_8u_C1R_M7__", "icv_y8_ownscDftInv_Prime4_64fc", "_ZN6CvType4lastE", "icv_m7_ownscrDftFwd_Fact2_64f", "icv_m7_owns_BitRev2_4", "icv_l9_ownHipass5x5Col_8u_C3", "icv_y8_owns_cBitRev1_Blk", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_3x3_U8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_M7_sym", "icv_m7_ownpi_Min_32f_C3R", "icv_m7_ownippiFilterMin_16s_Col_AC4", "icv_l9_ownpis_Indx_16s_C1", "icv_l9_ownHipass5x5Col_8u_AC4", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Wrap_M7", "icv_l9_ownLaplRow5x5_16s_C1", "icv_y8_ownscrDftInv_Fact5_32f", "icv_m7_owniTranspose_8u_C1IR_M7", "icv_m7_owniTranspose_32s_C1IR_M7", "icv_l9_ownpi_MinMax_16s_AC4R", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_M7", "icv_y8_ownpis_Max_32f_C3", "icv_y8_owns_crFft_BlkMerge_64f", "icv_y8_ownNormRel_L2_8s_C3CMR_U8", "icv_m7_ownippiThreshold_GV_16s_C4", "icv_y8_ownscrDftInv_Fact_32f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_M7_sym", "icv_m7_ownCopySubpixIntersect_32f_C1R_M7", "icv_y8_ownippiThreshold_V_16s_AC4", "icv_l9_ownpi_MinIndx_16s_C1R", "icv_m7_owniFlip_16u_C4_M7", "icv_m7_ownscDftInv_Fact2_64fc", "icv_l9_ownippsSqrt_8uPS", "icv_y8_ownippiFilterMin_8u_Row", "icv_l9_ownCanny_16s8u_C1R_2_32s_M7", "icv_y8_ownippiFilterMedian_16s_C4R_5x5", "icv_l9_ownCopySubpix_16u_C1R_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_M7", "icv_y8_owniTplNormMean_32f_C1R_M7", "icv_l9_ownippsSqrt_16s_ASM", "icv_y8_ownippiFilterMedianHoriz_16u_C3R_5x1", "icv_m7_ownAConvert_Round32f_16u", "own_ipps_dLn_E7_ttab", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_X_U8", "icv_m7_ownDistanceTransform_5x5_8u_C1R_Big_F_M7", "icv_y8_ownscrDftFwd_Fact3_32f", "icv_y8_owniSet_16s_C3_M7", "icv_y8_owns_BitRev1_Z", "icv_l9_owniExchange_8u_I_M7", "icv_l9_owniCopyConstBorder_C3R_M7", "epu32_maskArray", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_M7", "icv_m7_ownSumSq_32f_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_M7", "own_ipps_dSqrt_Y8_ttab", "icv_m7_ownippsSqrt_16sc_ASM_SF_S", "icv_m7_ownCopySubpix_8u_C1R_M7", "icv_m7_ownscrDftFwd_Fact3_64f", "icv_y8_ownippiFilterMedianHoriz_16s_C4R_5x1", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_M7", "icv_m7_ownippsCnvrt_16f32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Repl_M7", "icv_y8_ownippsCnvrt_32f16s_Sfs", "icv_y8_ownscrDftInv_Fact5_64f", "icv_m7_owniConvert_32f8s_AC4_M7", "icv_y8_ownippiFilterMedianHoriz_16u_BC4R_3x1", "icv_l9_ownippiFilterMax_8u_Col", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_M7", "icv_y8_ownippsCnvrt_32f16f_Asm", "icv_m7_ownsZero_8u", "icv_y8_owniFilter_32f_AC4R", "icv_m7_ownNormDiff_L1_32f_C3CMR_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Mirr_M7", "icv_m7_ownAFilterRow_16s_C1R", "icv_y8_ownHipass5x5Col_32f_AC4", "icv_m7_ownAddSquare_32f_C1IMR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_M7", "icv_m7_ownpi_MaxIndx_32f_C1R", "icv_y8_ownRectStdDev_32f_C1R_U8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_M7", "icv_m7_ownLaplace3x3Row_32f_C1", "icv_y8_ownscDftFwd_Prime4_32fc", "icv_l9_owns_BitRev1_C", "icv_m7_ownippiFilterMin_8u_Col", "icv_m7_ownpi_Max_8u_AC4R", "icv_y8_ownscrDftInv_Fact3_32f", "icv_l9_ownLaplCol5x5_16s_C4", "icv_m7_ownscDftFwd_Prime5_32fc", "icv_m7_ownpis_Max_16s_C3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Repl_U8", "icv_l9_ownippsCnvrt_16s16f", "icv_m7_ownNormDiff_L1_8s_C1MR_M7", "icv_l9_ownpis_Max_8u_C3", "icv_l9_ownFilterRowBorderLowPipeline_16s_C1R_5x5_M7", "icv_y8_ownippiFilterMedianVert_16u_C4R_1x5", "icv_y8_ippi_AlphaCompPlus_C1S_8u", "icv_y8_ownAFilterRow32f_8u_C1R", "icv_l9_ownsFlip_8u_I_M7", "icv_y8_ownippiThreshold_32f_C1", "icv_y8_ownAConvert_Round32s_8u_AC4R", "icv_m7_owniTranspose_16u_C4R_M7", "icv_y8_ownscrDftFwd_Fact3_64f", "icv_m7_ownscrDftInv_Fact_32f", "icv_y8_ownscDftFwd_Fact5_32fc", "icv_m7_ownSq_32f_C3CR_M7", "icv_m7_ownippiFilterMin_16u_Row", "icv_y8_ownscDftFwd_Prime2_64fc", "icv_y8_owniFlip_32s_C4I_M7", "icv_l9_ownsZero_8u_E9", "icv_l9_ownLaplace3x3Row_8u_C4", "own_ipps_dSqrt_Y8_ctab", "icv_m7_ippi_AlphaCompOverC_AC4S_8u", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_M7", "icv_ipp_is_mni_extension", "icv_y8_ownsDotProd_32f64f_M7", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_3x3_U8", "icv_m7_ownippiThreshold_GLV_16s_C1", "icv_y8_ownAFilterRow_16s_C3R", "icv_y8_ownippiThreshold_GLV_16s_C3", "icv_m7_ownNorm_L2_16u_C3CMR_M7", "icv_y8_ownsSet_32s_M7", "icv_m7_ippi_AlphaCompAtop_AC4S_8u", "icv_m7_owns_cFft_BlkSplit_32fc", "icv_m7_owniCopy32s_C3P3_NT_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_U8", "own_ipps_dCos_L9_ttab", "icv_m7_ownSq_32f_C1R_M7", "icv_y8_ippi_AlphaCompXor_AC4S_8u", "icv_m7_ownNormRel_Inf_8u_C1MR_M7", "icv_y8_ownSum_8u_C3CMR_U8", "icv_y8_ownNormRel_Inf_16u_C3CMR_U8", "icv_l9_ownHipass5x5Row_16s", "icv_m7_owniCopy16s_P3C3_M7", "icv_y8_owniSwapChannels_8u_C3R", "icv_l9_ownpis_Indx_8u_C3", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_M7", "icv_m7_ownDistanceTransform_3x3_8u_C1R_F_ND_M7", "icv_y8_ownscDftInv_Prime3_64fc", "icv_y8_ownippiFilterMax_32f_Row", "icv_y8_ownpis_Min_32f_AC4", "icv_m7_owniSet_8u_C4_M7", "icv_m7_ownCanny_16s8u_C1R_2_32s_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Wrap_M7", "icv_m7_ownCopySubpix_8u32f_C1R_M7", "icv_y8_ownSharpenRow_32f_C1", "icv_y8_ownHipass5x5Col_16s_C1", "icv_l9_ownsrDftInv_Dir_64f", "icv_m7_ownAbsDiff_16u_C1R_M7", "icv_y8_owniSet_16s_C4_M7", "icv_m7_ownpi_Sum_32f_C4R", "icv_y8_ownippiFilterMin_16u_Col", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_M7", "icv_y8_ownippiThreshold_GV_16s_C4", "icv_m7_ownAFilterRow32f_16s_C3R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_MirrR_M7", "icv_l9_ownCanny_16s8u_C1R_Mag_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_M7", "icv_m7_ownpi_Max_8u_C4R", "icv_m7_owniSet_32f_C3_M7", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8_1", "icv_m7_ownNormDiff_L1_16u_C3CMR_M7", "icv_y8_ownNorm_L1_8u_C1MR_M7", "icv_m7_ownDistanceTransform_3x3_8u32f_C1R_21F_M7", "icv_y8_ippi_AlphaCompInC_C1S_8u", "icv_m7_ownpi_Min_16s_C1R", "icv_l9_ownsConj_32fc_I_M7", "icv_m7_ownCanny_32f8u_C1R_1_32s_M7", "icv_y8_ownscDftFwd_Fact2_64fc", "icv_l9_ownCanny_32f8u_C1R_1_16u_M7", "icv_m7_owniSet_16s_C3_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_MirrR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_M7_sym", "icv_m7_owniConvert_32f16u_M7", "icv_y8_ownscrDftInv_Fact4_32f", "icv_l9_ownDistanceTransform_5x5_8u32f_C1R_21B_BMss_M7", "icv_l9_owns_BitRev2_C", "icv_m7_ownscDftFwd_Prime4_32fc", "icv_y8_owniSet_8u_C1M_M7", "icv_y8_ownippiFilterMedian_8u_BC4R_5x5", "icv_l9_ownCanny_16s8u_C1R_2_16u_M7", "icv_l9_DotProd_16s64s", "icv_m7_ownLaplRow5x5_8u_C4", "icv_ipp_finite", "icv_m7_DotProd_16s64s", "icv_m7_DotProd_16sc64sc", "icv_y8_ownpi_Or_8u_C1R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_M7_sym", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_U8", "icv_l9_ippi_AlphaCompInC_AC4S_8u", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Mirr_M7", "icv_y8_ownNormDiff_L1_8s_C1MR_M7", "icv_m7_ownDistanceTransform_5x5_8u32f_C1R_21B_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_M7", "icv_l9_ownHipass5x5Col_8u_C1", "ippConstantOfNAN_32f", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_U8", "icv_y8_ownippsCnvrt_16s16f", "icv_y8_owniCopy16sC4Mas", "icv_m7_owniCopy16s_C4P4_NT_M7", "icv_m7_owniConvert_32s8u_M7", "icv_y8_ownNormRel_L1_32f_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Const_U8", "icv_l9_ownippiThreshold_GV_32f_C4", "icv_m7_ownAFilterRow32f_16u_C1R", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_X_M7", "icv_m7_owniAutoNormMean_8u32s_C1R_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_U8", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_M7", "icv_y8_ownpi_Sum_32f_C1R", "icv_m7_owniTranspose_32s_C4R_M7", "icv_y8_ownpi_Sum_32f_C3R", "icv_l9_ownippsSqrt_16sc_ASM_ZR", "icv_m7_Plr2Crt_64f_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_M7", "icv_m7_owns_crFft_BlkMerge_32f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_M7", "icv_l9_ownHipass5x5Col_8u_C4", "icv_l9_owns_cRadix4InvNorm_32fc", "icv_m7_ownAbsDiffC_16u_C1R_M7_B", "icv_l9_owniCrossCorrValid_8s32s_C1R", "icv_y8_ownscDftFwd_Prime4_64fc", "icv_y8_ownpi_AndC_8u_C4R", "icv_y8_ownAdd_8u32f_C1IR_Y8", "icv_y8_ownsRealToCplx_64f_Y8", "icv_ipp_control87", "icv_l9_ownCopySubpix_8u16u_C1R_Sfs_M7_", "icv_l9_ownippiFilterMin_32f_Row", "icv_l9_DotProd_16sc64sc", "icv_y8_ownNorm_Inf_16u_C3CMR_U8", "icv_m7_ownippsCnvrtFin_32f16u_Sfs", "icv_y8_ownippsCnvrtFin_64f32s_Sfs", "icv_l9_ownscrDftInv_Fact2_64f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Mirr_M7", "icv_y8_ippi_AlphaCompPlusC_AC4S_8u", "icv_l9_owniSet32sC4Mas", "icv_m7_ownscDftFwd_Prime_64fc", "icv_y8_ownscDftInv_Fact4_32fc", "icv_m7_owniConvert_32f16s_AC4_M7", "icv_y8_ownSum_16u_C3CMR_U8", "icv_m7_ownippsSqrt_16sc_ASM_ZR", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_M7", "icv_m7_owniFlip_8u_C4I_M7", "icv_l9_ownippiFilterMin_32f_Col_AC4", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_MirrR_M7", "icv_l9_owniCopy_8u_strm", "icv_y8_ownpi_Min_32f_AC4R", "icv_m7_ownpi_AndC_8u_C4R", "icv_y8_ownippiFilterMin_32f_Col", "icv_y8_owniTranspose_16u_C4R_M7", "icv_l9_ippi_cDftSplit_32fc", "icv_l9_ownsConj_16sc_I_M7", "icv_y8_ownpi_Max_16s_C1R", "icv_y8_owniConvert_8u32s_M7", "icv_y8_ippi_AlphaCompOutC_C1S_8u", "icv_m7_DotProd_32f", "icv_y8_ownscrDftInv_Prime3_32f", "icv_y8_ownMinMaxIndx_8u_C3CMR_U8_1", "icv_l9_ownsDotProd_16s64s_SrtLn_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_M7", "icv_y8_ownSumSq_32f_C1R_M7", "icv_l9_owniConvert_32f8s_AC4_M7", "icv_l9_ownCopySubpixIntersect_32f_C1R_M7", "icv_y8_ownscrDftInv_Prime2_32f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_M7", "icv_m7_ownSum_32f_C1MR_M7", "icv_m7_ownNormRel_Inf_32f_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Repl_U8", "icv_l9_owniConvert_16s32f_M7", "icv_ipp_is_sse42_extension", "own_ipps_dExp_Y8_ttab", "icv_y8_ownAddProduct_8u32f_C1IMR_Y8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_MirrR_M7", "icv_m7_DotProd_64fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_M7", "icv_l9_ippi_AlphaPremulC_C1S_8u", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3_kerDxB_M7", "icv_l9_ownippiThreshold_V_16s_AC4", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_M7", "icv_m7_ownCanny_32f8u_C1R_1_16u_M7", "icv_m7_ownsConvert_32s16s_SfsNeg_M7", "icv_y8_ownsFlip_8u_M7", "icv_l9_owniSet16sC3Mas", "icv_l9_owns_BitRev2_4", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Const_U8", "icv_y8_owncalcMinValues_M7", "icv_m7_owniCopy8u_C3P3_84_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_M7", "icv_y8_owniTranspose_16u_C1R_M7", "icv_l9_ownLaplRow5x5_16s_C3", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_3x3_mm_sym_M7", "icv_y8_ownLaplRow5x5_8u_C3", "icv_m7_ownNorm_Inf_32f_C1MR_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Wrap_M7", "icv_m7_ownMinMaxIndx_8s_C1R_M7_1", "icv_m7_ownNorm_L2_8s_C1MR_M7", "icv_l9_ippi_AlphaCompAtop_AC4S_8u", "icv_m7_ownHipass5x5Col_16s_AC4", "icv_y8_ownNorm_L1_8u_C3CMR_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_M7", "icv_m7_ownNormDiff_L1_8s_C3CMR_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Mirr_M7", "icv_m7_ownippiThreshold_V_8u_AC4", "icv_m7_owns_cRadix4Fwd_32fc", "icv_m7_owniCopyConstBorder_C1R_M7", "icv_m7_ownscDftInv_Prime5_32fc", "icv_y8_ownippsCnvrtFin_32f8s_Sfs", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Mirr_M7", "icv_l9_ownpi_Max_16s_AC4R", "icv_m7_ownscDftFwd_Fact_32fc", "icv_y8_ownscrDftInv_Fact4_64f", "icv_y8_ownRectStdDev_32s32f_C1R_U8", "icv_y8_ownippiFilterMedianHoriz_8u_C4R_3x1", "icv_y8_ownNorm_L2_8u_C3CMR_U8", "icv_y8_ownCopySubpix_8u16u_C1R_Sfs_U8", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_M7", "_ZN3tbb8internal8governor22is_speculation_enabledE", "icv_y8_ownSharpenRow_32f_C3", "icv_m7_owniSet_16s_C3M_M7", "icv_y8_ownBFilterRow32f_16u_C3R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Repl_U8", "icv_m7_owns_cRadix4FwdNorm_64fc", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_U8", "icv_l9_owniConvert_32f16s_AC4_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_U8", "own_ipps_sLn_E7_ctab", "icv_y8_ownIntegral_8u32s_C1R_U8", "icv_m7_ownippsSqrt_8uPS", "icv_l9_ownippiFilterMin_8u_Col_AC4", "icv_l9_ownpi_MinIndx_8u_C1R", "icv_y8_ownLaplace3x3Row_32f_C4", "icv_ps_set_cw_fpu", "icv_y8_ownscDftFwd_Prime5_32fc", "icv_l9_ownsSet_32s_E9", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Mirr_M7", "icv_l9_ownscDftInv_Prime_64fc", "icv_y8_ownBFilterRow32f_8u_C1R", "icv_y8_ownNormRel_L2_32f_C1MR_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Wrap_M7_sym", "icv_m7_ownAFilterRow32f_16s_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Wrap_U8", "icv_l9_ownippiThreshold_V_8u_AC4", "icv_y8_owniSet32sC3Mas", "icv_y8_ownscDftFwd_Prime3_32fc", "icv_l9_ownpis_Min_32f_C4", "own_ipps_sSin_Y8_ttab", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Wrap_M7", "icv_l9_ownippiThreshold_V_8u_C1", "icv_l9_ownpis_Max_8u_C4", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_M7", "icv_l9_owniCopy_8u_C1_M7", "icv_m7_ownAConvert_Round32s_16s_AC4R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Mirr_M7", "icv_y8_owniConvert_32f16s_AC4_M7", "icv_m7_ownSumSq_32f_C1R_M7_Al", "icv_l9_ownippiFilterMin_16s_Col_AC4", "icv_y8_ownpi_Min_16s_C3R", "icv_y8_ippi_AlphaCompAtopC_C1S_8u", "icv_m7_ownippsSqrt_16u", "icv_y8_ownippiFilterMedianHoriz_16s_C3R_5x1", "icv_m7_ownippiThreshold_LV_16s_C4", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_M7", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_5x5_M7", "icv_m7_owns_cRadix4FwdNorm_32fc", "icv_y8_ownscrDftFwd_Fact4_32f", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_Const_M7", "icv_l9_owniCopy8u_C4C1_M7", "icv_y8_ownpi_Max_8u_C4R", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5_M7", "own_ipps_dPowx_L9_ctab", "icv_m7_owniConvert_32s8u_AC4_M7", "icv_l9_ownSharpenRow_8u_C3", "icv_y8_ownSumSq_32f_C3CR_M7", "icv_y8_owniConvert_8s32s_AC4_M7", "icv_y8_ownCopySubpixIntersect_8u16u_C1R_Sfs_M7", "icv_m7_owniFlip_32s_C4_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_M7", "icv_m7_ownpi_Xor_8u_C1R", "icv_y8_ownpi_MinIndx_32f_C1R", "own_ipps_sCos_L9_ctab", "icv_y8_ownNorm_L2_8u_C1MR_M7", "icv_m7_ownAddSquare_32f_C1IR_M7", "icv_y8_ownAFilterRow32f_16u_C1R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_M7", "icv_m7_ownSum_8u_C1MR_M7", "icv_y8_ownippiFilterMedian_16u_C3R_5x5", "icv_l9_owniConvert_32f8s_M7", "icv_m7_ownscDftInv_Prime2_32fc", "icv_y8_ownippiThreshold_V_8u_C1", "icv_m7_owniCopy_32f_C1M_M7", "icv_m7_ownBFilterRow32f_8u_C4R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_U8", "icv_m7_ownippsMagn_32f", "icv_m7_ownMinMaxIndx_16u_C1MR_M7_1", "icv_l9_ownscDft_Dir_32f", "icv_y8_owniTranspose_32s_C1IR_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Repl_M7", "icv_y8_ownscDft_Dir_64f", "icv_y8_owns_BitRev2_Z", "own_ipps_dSin_E7_ctab", "icv_m7_ownscDftFwd_Fact_64fc", "icv_m7_owniConvert_32f16u_AC4_M7", "icv_l9_ownippiThreshold_16s_C1", "icv_m7_owniFilter_32f_C4R", "icv_l9_owniConvert_16u32f_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Repl_M7", "icv_y8_ownsMaxFind_32f_M7", "icv_y8_ownpis_Min_8u_AC4", "icv_m7_owniConvert_32f8u_AC4_M7", "icv_m7_ownsConj_32fc_I_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_Mirr_M7_sym", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Const_M7", "icv_l9_ownippsSqrt_32fc", "icv_ipp_set_cw_fpu", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_MirrR_M7", "icv_l9_ownippiFilterMax_32f_Col_AC4", "icv_m7_ownLaplace3x3Row_16s_C3", "icv_m7_owns_crRadix4Inv_32f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_M7", "icv_m7_ownNorm_L1_8s_C3CMR_M7", "icv_y8_ownpi_OrC_8u_C1R", "own_ipps_sInvSqrt_E7_ctab", "own_ipps_sExp_L9_ttab", "icv_y8_ippi_AlphaCompPlus_AC1S_8u", "icv_y8_ownscrDftInv_Prime4_32f", "icv_y8_ownLaplace3x3Row_8u_C3", "icv_y8_ownpi_Or_8u_AC4R", "icv_y8_ownBFilterRow32f_16u_C4R", "icv_y8_owniSet_16s_C1_M7", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C3R_5x5_U8", "icv_y8_ownAFilterRow32f_8u_C3R", "icv_y8_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short_M7", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_5x5_sym_M7", "icv_m7_ownscDftInv_Prime3_64fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_U8", "icv_m7_ownCanny_16s8u_C1R_3_32s_M7", "icv_y8_ownscDftInv_Prime4_32fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_U8", "icv_y8_ownscrDftInv_Fact3_64f", "icv_l9_ownpi_Max_8u_AC4R", "icv_y8_ownSumSq_8s_C1R_Y8", "icv_y8_ownippiFilterMin_16s_Row", "icv_l9_ippi_AlphaPremul_AC4S_8u", "own_ipps_dCos_Y8_ctab", "icv_l9_ownippiThreshold_V_32f_AC4", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Const_U8", "icv_m7_owns_BitRev2_C", "icv_ipp_tst_daz_ssx", "icv_m7_ownpis_Min_16s_C4", "icv_m7_ownippiFilterMin_8u_Row", "icv_y8_ownAdd_16u32f_C1IR_M7", "icv_y8_ownippiThreshold_GV_32f_C4", "icv_y8_ownscDft_Dir_32f", "icv_m7_ownHipass5x5Col_8u_AC4", "icv_m7_ownAFilterRow_8u_C3R", "icv_l9_ownsrDftInv_Dir_32f", "icv_m7_ownscrDftInv_Fact5_64f", "icv_ipp_is_mmx_extension", "icv_y8_ownpi_Min_32f_C1R", "icv_y8_owns_crFft_BlkSplit_64f", "icv_l9_ownCopySubpixIntersect_8u16u_C1R_Sfs_M7", "icv_y8_owns_zBitRev1_Blk", "icv_l9_ownpi_Min_8u_AC4R", "icv_m7_ippi_cDftMerge_32fc", "icv_y8_ownSq_32f_C3CR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_MirrR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Wrap_M7", "icv_y8_owniSet32sC1Mas", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_M7", "icv_m7_ownscDftFwd_Prime4_64fc", "icv_m7_ownpi_MinMax_8u_AC4R", "icv_y8_ippi_AlphaCompOut_AC4S_8u", "icv_y8_ownAFilterRow32f_16s_C1R", "icv_y8_ippi_AlphaCompXorC_AC4S_8u", "icv_m7_ippi_AlphaCompPlusC_AC4S_8u", "icv_ipp_is_ssx_extension", "icv_y8_ownippiFilterMedianCross_16s_C3R_5x5", "icv_m7_ownLaplace3x3Row_8u_AC4", "icv_m7_ownMinMaxIndx_32f_C1R_M7", "own_ipps_dInvSqrt_E7_ctab", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_M7", "icv_y8_ownippsMin_64f", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Repl_M7", "icv_y8_ownNormRel_Inf_32f_C3CMR_M7", "icv_m7_owniConvert_8s32s_M7", "icv_y8_owniSwap_16s_C4C3R", "icv_y8_ownAConvert32s_16s", "icv_y8_ownPrewColV_32f", "icv_m7_ownHipass5x5Col_8u_C4", "icv_m7_ippi_AlphaCompOverC_C1S_8u", "icv_m7_ownpis_Indx_32f_C3", "icv_m7_ownNormRel_Inf_32f_C3CMR_M7", "icv_y8_ownCanny_32f8u_C1R_1_32s_M7", "icv_m7_ownpi_Sum_8u_AC4R", "icv_y8_owniCorrectAutoNormMean_32f_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Repl_M7", "icv_l9_ownHipass5x5Col_32f_AC4", "icv_y8_owns_BitRev1_D", "icv_l9_owniTranspose_32s_C4R_M7", "icv_l9_ownsCopy_8u_nt", "icv_y8_owniSet_8u_C4_M7", "icv_m7_ownAFilterRow_16s_AC4R", "ippConstantOfINF_32f", "icv_y8_ownSharpenRow_16s_C1", "icv_m7_ownLaplace3x3Row_8u_C3", "icv_m7_ownpi_Sum_16s_C1R", "icv_m7_ownNorm_L1_32f_C3CMR_M7", "icv_y8_ownLaplace3x3Row_8u_C1", "icv_m7_ownLaplRow5x5_16s_C1", "icv_m7_owniConvert_8s32f_M7", "icv_m7_ownAddProduct_8u32f_C1IMR_M7", "icv_m7_owniConvert_32f16s_M7", "icv_l9_ownDistanceTransform_5x5_8u_C1R_New_F_M7", "icv_y8_ownscrDftFwd_Fact4_64f", "icv_l9_ippi_AlphaCompAtopC_C1S_8u", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Repl_M7_sym", "icv_m7_ownNormDiff_L2_8s_C3CMR_M7", "icv_y8_owns_crFftInv_Fact8_Last_32f", "icv_y8_ownscrDftFwd_Prime_32f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_M7", "icv_y8_ippi_AlphaCompXor_C1S_8u", "icv_l9_ownippsSqrt_32s16s", "icv_m7_ownAddSquare_8u32f_C1IMR_M7", "icv_l9_ownpi_Min_16s_C4R", "icv_l9_ownscDft_Dir_64f", "icv_y8_owniFilter_32f_C3R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_M7", "icv_l9_ownDistanceTransform_3x3_8u32f_C1R_21F_ND_Short_M7", "icv_y8_ownpi_MinMax_16s_AC4R", "icv_y8_ownpis_Min_32f_C3", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Wrap_M7", "icv_y8_ownLaplace3x3Row_8u_AC4", "icv_l9_owniTplNormMean_8s32f_C1R_M7", "icv_y8_ownpis_Min_32f_C4", "icv_y8_ownscDftInv_Prime_32fc", "icv_y8_ownAFilterRow32f_16u_C4R", "icv_m7_ownNormRel_Inf_16u_C3CMR_M7", "icv_y8_ownNormRel_L2_32f_C3CMR_M7", "icv_m7_ownippsSqrt_16sc_ASM_SF", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Const_M7", "icv_l9_ownscrDftFwd_Prime_32f", "icv_m7_ownNorm_L2_8s_C3CMR_M7", "icv_l9_owns_cBitRev1_Blk", "icv_y8_ownippiFilterMedianCross_16u_C4R_5x5", "icv_l9_ownippiThreshold_V_32f_C1", "icv_m7_owniSet_8u_C3_M7", "icv_l9_ownippiFilterMin_16s_Col", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3_U8", "icv_m7_owniFilter_32f_AC4R", "icv_y8_ownSharpenRow_16s_C4", "icv_m7_ownDistanceTransform_5x5_8u32f_C1R_21F_M7", "icv_y8_ownippiFilterMedianHoriz_8u_BC4R_3x1", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_M7", "icv_y8_owns_cRadix4Inv_32fc", "icv_y8_ownippiFilterMedian_8u_C3R_5x5", "icv_y8_ownLaplCol5x5_32f_C1", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_M7", "icv_y8_ownpis_Sum_16s_C1", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_U8", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_M7", "icv_l9_ownCanny_32f8u_C1R_1_32s_M7", "icv_y8_ownLaplCol5x5_16s_C1", "icv_y8_owns_crRadix4Fwd_64f", "icv_y8_owniFilter_32f_C4R", "icv_l9_ownLaplRow5x5_8u_C1", "icv_y8_owniConvert_8s32s_M7", "icv_m7_owniCopy32s_C3P3_M7", "icv_m7_ownsrDftInvRecombine_32f", "icv_l9_owns_crRadix4Inv_64f", "icv_m7_ownSumSq_32f_C1R_M7", "icv_y8_ownpi_XorC_8u_C3R", "icv_m7_ownNormDiff_Inf_32f_C1MR_M7", "icv_y8_ownSumSq_32f_C1R_M7_Al", "icv_l9_ownscDftFwd_Prime_32fc", "icv_m7_ownBFilterRow32f_16s_C4R", "icv_m7_owniTranspose_16u_C4IR_M7", "icv_y8_ownscDftInv_Fact2_32fc", "icv_y8_ippi_AlphaCompOut_AC1S_8u", "icv_m7_ownCopySubpixIntersect_8u_C1R_M7", "icv_l9_owniSet16sC4Mas", "icv_m7_ownCopySubpix_16u_C1R_M7", "own_ipps_sCos_L9_ttab", "icv_y8_ownAddSquare_8u32f_C1IR_Y8", "icv_l9_ownFilterRowBorderLowPipeline_16s_C1R_5x5_Repl_SHIFT_M7", "icv_y8_ownippiFilterMedianVert_8u_C4R_1x3", "icv_m7_ownscDftFwd_Prime_32fc", "icv_y8_ownpi_MinMax_32f_C1R", "icv_m7_owns_cRadix4Inv_32fc", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_M7", "icv_m7_owns_BitRev1_Z", "icv_y8_ownpi_MinMax_16s_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx_Repl_U8", "icv_l9_ownHipass5x5Frs_32f", "icv_l9_ownippiFilterMax_16u_Col", "icv_m7_ownBFilterRow32f_16u_C3R", "icv_l9_ownLaplace3x3Row_32f_C4", "icv_y8_owniConvert_32f8u_AC4_M7", "icv_y8_owns_cFft_BlkMerge_32fc", "icv_m7_ownAdd_16u32f_C1IR_M7", "icv_m7_ownsConvert_32s16s_SfsPos_M7", "icv_l9_ownpi_MinMax_16s_C3R", "icv_m7_ownpi_MaxIndx_16s_C1R", "icv_l9_ownpi_MinMax_8u_C4R", "icv_y8_ownPrewColV_8u", "icv_y8_ownippiFilterMedian_8u_C4R_3x3", "icv_y8_ownSum_8s_C3CMR_U8", "icv_y8_ownscrDftFwd_Prime4_64f", "icv_y8_ownippiFilterMedian_16u_BC4R_5x5", "icv_l9_ownAConvert_Round32f_16u", "icv_y8_ownippiFilterMedianVert_16s_C4R_1x5", "icv_y8_ownippsMagn_64fc64f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_M7", "icv_l9_ippi_AlphaCompXorC_AC4S_8u", "icv_y8_ownippsMagn_32f", "icv_ippSafeInit", "icv_m7_ownscDftInv_Prime_32fc", "icv_y8_ownpis_Min_16s_C4", "icv_m7_ownscrDftFwd_Fact2_32f", "icv_y8_owns_BitRev2_S", "icv_l9_ownippiFilterMin_16s_Row", "icv_y8_ownippiFilterMedianHoriz_16u_BC4R_5x1", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_M7", "icv_m7_ownAFilterRow32f_16s_C4R", "icv_y8_ownscrDftInv_Prime_64f", "own_ipps_sInvSqrt_Y8_ttab", "icv_m7_owniConvert_32f8s_M7", "icv_l9_ippi_AlphaCompPlus_C1S_8u", "icv_l9_owniCopy8u_AC4_M7", "icv_l9_ownippiFilterMax_8u_Col_AC4", "icv_l9_ownippiThreshold_V_16s_C3", "icv_y8_ownippiThreshold_V_32f_C3", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_M7", "icv_m7_ownsFlip_32f_I_M7", "icv_m7_ippi_AlphaCompXor_AC4S_8u", "icv_y8_ownippiThreshold_V_16s_C1", "icv_y8_ownSharpenRow_8u_C3", "icv_m7_ippi_AlphaPremulC_AC4S_8u", "icv_m7_owniTplNormMean_8s32f_C1R_M7", "icv_m7_owncalcMinValues_M7", "icv_m7_ownsFlip_8u_I_M7", "icv_l9_ownippsSqrt_16sc_ASM_SF", "icv_l9_ownippiThreshold_GV_16s_C4", "icv_y8_owniConvert_8s32f_M7", "icv_l9_owniCopy_8u_fwdfull", "icv_m7_owniCopy8u_AC4_M7", "icv_y8_ownippiFilterMin_16s_Col", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_M7", "icv_y8_ownippiFilterMedianCross_8u_C3R_3x3", "icv_m7_owniConvert_32f8u_M7", "icv_m7_ownippiThreshold_8u_C3", "icv_m7_ownAddWeighted_32f_C1IR_M7", "icv_l9_ownAConvert32s_8u", "icv_m7_ownLaplCol5x5_8u_C1", "icv_m7_ownAddProduct_16u32f_C1IR_M7", "icv_m7_ownSumSq_32f_C3CR_smallsize_M7", "icv_y8_ippi_AlphaCompAtopC_AC4S_8u", "icv_m7_ownscDftInv_Fact3_32fc", "icv_y8_ownippsCnvrt_16f16s_Asm", "icv_m7_ownHipass5x5Frs_16s", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_M7", "icv_m7_ownsFlip_32f_M7", "icv_y8_ownAddWeighted_32f_C1IMR_M7", "icv_m7_owniCopy_16s_C1M_M7", "icv_m7_ownscDftFwd_Fact2_64fc", "icv_y8_ownDistanceTransform_5x5_8u_C1R_New_F_M7", "icv_l9_ownpis_Min_8u_C4", "icv_y8_ippi_AlphaCompOverC_AC4S_8u", "icv_y8_owns_cFft_BlkMerge_64fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx2_Repl_M7", "icv_y8_owniCopy16s_AC4_M7", "icv_l9_ownsrDftFwd_Dir_32f", "own_ipps_sInvSqrt_L9_ctab", "icv_m7_ippi_AlphaPremul_AC4S_8u", "icv_m7_ownCopySubpixIntersect_16u_C1R_M7", "icv_m7_ownippsCnvrt_32f8s_Sfs", "icv_m7_ownAddSquare_16u32f_C1IR_M7", "icv_m7_owns_cRadix4Inv_64fc", "_ZN3tbb8internal14__TBB_InitOnce18InitializationLockE", "icv_m7_ownsConvert_32s16s_M7", "icv_y8_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8_2", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_M7", "icv_y8_ownLaplRow5x5_16s_C1", "icv_l9_ownsConj_64fc_Y8", "icv_l9_ownCopySubpix_8u_C1R_M7", "icv_m7_ownippsCnvrt_16u32f", "icv_y8_ownMinMaxIndx_8u_C1MR_M7_1", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Mirr_U8", "icv_m7_ownAdd_32f_C1IMR_M7", "icv_m7_ownpi_Max_8u_C3R", "icv_m7_owniSet_8u_C3M_M7", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_M7", "own_ipps_sSin_E7_ttab", "icv_y8_ownippsSqrt_16sc_ASM_SF", "icv_y8_ownCopySubpix_16u32f_C1R_M7", "icv_m7_ownDistanceTransform_5x5_8u_C1R_New_F_M7", "icv_ipp_is_em64t_extension", "own_ipps_dPowx_E7_ttab", "icv_m7_owniConvert_16u8u_M7", "icv_m7_ownpi_Max_16s_C1R", "icv_ps_get_cw_fpu", "icv_l9_owniTranspose_16u_C4IR_M7", "icv_y8_owns_crFftFwd_Fact8_Last_64f", "icv_l9_owns_BitRev2_S", "icv_l9_ownPrewColV_32f", "icv_m7_ownDistanceTransform_5x5_8u_C1R_Big_F_M7_", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_M7", "icv_y8_ownNormDiff_L2_8s_C3CMR_U8", "icv_l9_ownscDft_Dir_32fc", "icv_l9_ownHipass5x5Col_16s_C1", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_3x3_mm_sym_M7", "icv_l9_ownHipass5x5Frs_16s", "icv_y8_ownpi_Min_8u_C3R", "icv_l9_ownippiFilterMin_16u_Row", "icv_m7_ownNormDiff_Inf_8s_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Mirr_U8", "own_ipps_sCos_E7_ttab", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Const_M7", "icv_y8_ownCopySubpix_32f_C1R_U8", "icv_y8_ownsrDftInv_Dir_64f", "icv_y8_ownAddProduct_8u32f_C1IR_M7", "icv_y8_ownsZero_8u", "icv_y8_ownscrDftInv_Prime5_32f", "icv_l9_ownscDftInv_Fact2_32fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_Const_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_5x5_U8", "icv_m7_ownDistanceTransform_3x3_8u32f_C1R_21B_MASK_M7", "icv_l9_ownCanny_32f8u_C1R_2_16u_M7", "_ZN3tbb8internal20AllocateSchedulerPtrE", "icv_m7_ownNormDiff_L2_16u_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Const_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Const_M7", "icv_y8_ownpis_Max_16s_AC4", "icv_m7_ownNorm_Inf_32f_C3CMR_M7", "icv_y8_owns_BitRev1_4", "icv_m7_ownAddProduct_32f_C1IMR_M7", "icv_l9_ownsConj_32fc_M7", "icv_l9_owniTranspose_32s_C1IR_M7", "icv_y8_ippi_AlphaCompXor_AC1S_8u", "icv_y8_owns_cFftInv_Fact8_Last_32fc", "icv_l9_ownpi_MinMax_8u_C3R", "own_ipps_sExp_Y8_ctab", "icv_y8_ownscrDftFwd_Prime_64f", "icv_y8_ownNormDiff_L2_32f_C1MR_M7", "icv_y8_ownippiThreshold_GLV_16s_C1", "icv_y8_owniCrossCorrValid_32f_C1R", "icv_y8_ownippiFilterMin_8u_Col", "icv_l9_ownpi_MaxIndx_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3_sym_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Repl_M7", "icv_m7_ownippsCnvrt_32f32s_Sfs", "icv_m7_owns_zBitRev1_Blk", "icv_m7_DotProd_64f64fc", "icv_y8_ownNorm_Inf_8s_C3CMR_U8", "icv_y8_ownippiFilterMedian_8u_C4R_5x5", "icv_l9_ownLaplRow5x5_32f_C4", "own_ipps_dInvSqrt_Y8_ttab", "icv_y8_ownscDftInv_Fact5_32fc", "icv_l9_ownpi_MaxIndx_16s_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Repl_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_U8", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian_Wrap_M7", "icv_m7_ownscrDftInv_Prime2_64f", "icv_m7_ownsConvert_16s32s_M7", "icv_m7_ippi_AlphaCompAtopC_C1S_8u", "icv_l9_ownippiThreshold_GLV_16s_C3", "icv_y8_ownscrDftInv_Prime5_64f", "icv_y8_ippi_AlphaCompAtop_AC4S_8u", "icv_m7_ownippiThreshold_LV_8u_C4", "icv_l9_ippi_AlphaCompOut_C1S_8u", "icv_y8_ownippiFilterMedianCross_16s_C4R_3x3", "icv_l9_ownLaplace3x3Row_16s_AC4", "icv_l9_ownAConvert_Round32f_16u_AC4R", "icv_m7_ownscDftFwd_Fact5_32fc", "icv_y8_ownippiFilterMin_8u_Col_AC4", "icv_l9_owniCopy_8u_inv", "icv_y8_ownippsMagn_64f", "icv_y8_ownCopySubpix_8u_C1R_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_M7", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C1R_5x5_U8", "icv_y8_ownpi_Min_8u_AC4R", "icv_y8_ownAConvert_Round32f_16u", "icv_y8_ownMinMaxIndx_16u_C1MR_M7_1", "icv_ps_clear_fpu", "icv_y8_ownscDftFwd_Prime_64fc", "icv_m7_ownpi_OrC_8u_C1R", "icv_l9_owns_crRadix4Fwd_32f", "icv_y8_ownsMaxFind_16s_M7", "icv_l9_ownpi_Min_8u_C1R", "icv_m7_ownippsMagn_64fc64f", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_M7", "icv_y8_ownLaplCol5x5_8u_C4", "icv_m7_owniConvert_8u32s_M7", "icv_m7_ownSharpenRow_32f_C3", "icv_y8_ownNormRel_L2_16u_C1MR_M7", "icv_l9_owniCopy16s_AC4_M7", "icv_y8_owniAutoNormMean_8u32s_C1R_M7", "icv_l9_ownpis_Min_8u_AC4", "icv_m7_ownippsSqrt_64f", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_5x5_M7", "icv_m7_ownpis_Sum_16s_C1", "icv_ipp_status87", "icv_y8_ownippiFilterMax_16u_Col", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Repl_M7", "icv_y8_ownippsMin_32f", "icv_l9_owniTranspose_8u_C1R_M7", "icv_m7_owns_crRadix4Fwd_64f", "icv_l9_ownHipass5x5Col_16s_AC4", "icv_y8_ownMinMaxIndx_16u_C3CMR_U8_1", "icv_l9_ownLaplace3x3Row_32f_AC4", "icv_m7_ownNormDiff_L1_16u_C1MR_M7", "icv_y8_owniSet_32f_C4_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_M7", "icv_m7_ownsrDftInv_Dir_32f", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Repl_M7", "icv_m7_ownLaplRow5x5_8u_C1", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Wrap_U8", "icv_y8_ownsCopy_8u", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3_kerDx_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_U8", "icv_m7_ownNormRel_L1_32f_C3CMR_M7", "icv_y8_ownNormDiff_Inf_8u_C1MR_M7", "icv_y8_owniConvert_16u32f_M7", "icv_y8_DotProd_32f32fc", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg_MirrR_M7", "icv_y8_ownAFilterRow_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Repl_M7", "icv_l9_ownippiFilterMax_16u_Row", "icv_y8_ownCopySubpixIntersect_32f_C1R_U8", "icv_m7_ownippsSqrt_64fc", "icv_l9_ippi_AlphaPremul_C1S_8u", "icv_l9_owniConvert_8u32s_M7", "icv_m7_ownHipass5x5Row_16s", "icv_m7_owns_crRadix4FwdNorm_32f", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_U8", "icv_ps_get_ssx", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Mirr_M7", "icv_y8_ownNormRel_L2_8s_C1MR_U8", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDx2_Const_U8", "icv_m7_ownMinMaxIndx_32f_C1MR_M7_1", "icv_m7_ownscrDftInv_Prime_64f", "icv_y8_owns_crFftInv_Fact8_Last_64f", "icv_m7_owniCrossCorrValid_8s32s_C1R", "icv_m7_ownLaplace3x3Row_8u_C4", "icv_m7_ownNorm_L2_8u_C1MR_M7", "icv_l9_owniTranspose_32s_C1R_M7_NT", "icv_m7_owniConvert_8s32f_AC4_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Repl_M7", "icv_y8_ownippiFilterMedian_8u_BC4R_3x3", "icv_m7_ownBFilterRow32f_8u_C1R", "icv_m7_ownippiThreshold_GLV_16s_AC4", "icv_m7_ownNormDiff_Inf_8u_C3CMR_M7", "icv_y8_ownBFilterRow32f_16s_C3R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_Const_M7", "icv_m7_ownscrDftFwd_Prime3_64f", "icv_l9_ownCanny_16s8u_C1R_3_32s_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_M7", "own_ipps_sPowx_L9_ctab", "icv_m7_ippi_AlphaCompOutC_AC4S_8u", "icv_y8_ownAFilterRow_16s_C1R", "icv_m7_owniCopy16s_C3P3_M7", "icv_m7_ownsFlip_16u_I_M7", "icv_m7_ownCanny_16s8u_C1R_3_16u_M7", "icv_y8_ownsSet_8u_M7", "_ZN3tbb8internal8governor11BlockingTSIE", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_U8", "own_ipps_sCos_Y8_ttab", "icv_m7_ownippiFilterMax_16s_Row", "icv_y8_owniSet_8u_C3M_M7", "icv_l9_ownSharpenRow_16s_C1", "icv_ipp_is_sse41_extension", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Mirr_M7", "icv_l9_ownsSet_16u_E9", "icv_l9_owniConvert_8s32f_AC4_M7", "own_ipps_dExp_E7_ctab", "icv_y8_ownpi_Xor_8u_AC4R", "icv_m7_ownscrDftFwd_Fact_64f", "own_ipps_dCos_E7_ctab", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Repl_M7", "icv_l9_ownCopySubpix_8u16u_C1R_Sfs_M7", "icv_ipp_is_GenuineIntel", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Wrap_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_MirrR_M7", "icv_y8_ownSq_32f_C1R_M7", "icv_m7_ownsConj_16sc_I_M7", "icv_y8_ownCopySubpix_8u32f_C1R_M7", "icv_l9_ownscDftInv_Fact_64fc", "icv_l9_ownippiThreshold_V_16s_C1", "icv_l9_ownscrDftFwd_Prime_64f", "icv_m7_ownpi_Min_16s_C4R", "icv_y8_ownHipass5x5Row_16s", "icv_y8_owniCopy8u_C4C1_M7", "icv_y8_ownippsMagn_16sc32f", "icv_y8_ownCanny_32f8u_C1R_1_16u_M7", "icv_m7_ownscDftInv_Fact3_64fc", "icv_l9_ownAFilterColumn_8u_C1R", "icv_l9_owniCrossCorrValid_8u32s_C1R", "icv_ipp_set_cw_ssx", "icv_y8_owniTranspose_32s_C4R_M7", "icv_l9_ownCopySubpix_16u32f_C1R_M7", "icv_y8_ownCopySubpix_32f_C1R_M7", "icv_y8_ownAddProduct_8u32f_C1IMR_M7", "icv_y8_ownippsSqrt_64fc", "icv_l9_ownippiFilterMax_32f_Col", "icv_y8_owniSwapChannels_8u_C3IR", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_Const_M7_sym", "icv_m7_ownHipass5x5Col_16s_C4", "icv_y8_ownLaplCol5x5_16s_C4", "icv_m7_ownscDftInv_Prime5_64fc", "icv_m7_ownpi_XorC_8u_C4R", "icv_m7_owniTplNormMean_8u32f_C1R_M7", "icv_y8_ownscDftInv_Fact_64fc", "icv_m7_ownippiThreshold_GLV_8u_C1", "icv_y8_ownpi_Sum_16s_C4R", "icv_m7_ownippsMagn_64f", "icv_m7_owniConvert_8u32f_M7", "icv_l9_ownscrDftFwd_Fact_32f", "icv_y8_ownsConvert_64s32s_SfPosFin_M7", "icv_l9_owns_crRadix4Inv_32f", "icv_m7_ownippiFilterMax_32f_Col_AC4", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_M7", "icv_l9_owniTranspose_8u_C3R", "icv_y8_ownsfen", "icv_m7_ippi_AlphaCompXor_C1S_8u", "icv_l9_ownAFilterRow_8u_AC4R", "icv_m7_ownpi_MinMax_32f_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Mirr_U8", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Wrap_M7", "icv_m7_ownpis_Indx_16s_C1", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_M7", "icv_l9_ownLaplCol5x5_16s_C1", "icv_l9_ownippiThreshold_32f_AC4", "icv_l9_owniConvert_8s32s_M7", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Const_M7", "icv_m7_ownpis_Max_8u_C3", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Wrap_M7", "icv_l9_owniCopyConstBorder_C4R_M7", "icv_y8_owniCopy_8u_C1_M7", "icv_y8_ownippsSqrt_16sc_ASM_ZR", "icv_y8_DotProd_64f64fc", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Wrap_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr_Repl_M7", "icv_l9_ownpis_Min_32f_C3", "icv_y8_ownippiFilterMax_8u_Col", "icv_m7_ownAFilterRow_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Repl_M7", "icv_l9_owniConvert_32f16u_AC4_M7", "icv_y8_ownippiFilterMax_16s_Row", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Wrap_M7", "own_ipps_dPowx_Y8_ctab", "icv_m7_owniAutoNormMean_32f_C1R_M7", "icv_m7_ownNormRel_Inf_16u_C1MR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerSobel_Wrap_M7", "icv_y8_ownippsCnvrt_16f32f", "icv_y8_ownpi_MinMax_16s_C4R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_M7", "icv_m7_owniFilter_32f_C3R", "icv_y8_ownsSet_64s_M7", "icv_m7_owns_BitRev2_8", "icv_m7_owns_crFft_BlkMerge_64f", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5_mm_M7", "icv_y8_owniCopy16sC3Mas", "own_ipps_dExp_E7_ttab", "icv_y8_ownpis_Indx_8u_C3", "icv_m7_ownsFlip_16u_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Mirr_U8", "icv_y8_ownNormDiff_L1_8s_C3CMR_U8", "icv_l9_ownscDftInv_Prime_32fc", "icv_ipp_is_pni_extension", "icv_l9_owniSet_32f_C4_M7", "icv_y8_owns_crFftInv_CoreMT_64f", "icv_y8_ownNorm_L1_16u_C1MR_M7", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C1R_X_U8", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_3x3_sym_M7", "icv_y8_ownMinMaxIndx_8u_C1R_U8_1", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian_Const_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg_Wrap_M7", "icv_m7_ownAFilterRow_16s_C3R", "icv_m7_ownLaplRow5x5_32f_C3", "icv_m7_ownscrDftFwd_Fact5_64f", "icv_y8_ownNorm_L2_32f_C3CMR_M7", "icv_m7_ownscDftReord_32fc", "icv_y8_ownscDftReord_32fc", "icv_m7_ownsConvert_64s32s_SfPosFin_M7", "icv_y8_ownscrDftInv_Prime4_64f", "icv_y8_ownscrDftFwd_Prime2_32f", "icv_l9_ownFilterRowBorderPipeline_Low_16s_C1R_3x3_U8_3", "icv_m7_ownscrDftFwd_Prime5_64f", "icv_y8_ownpi_Max_8u_AC4R", "icv_l9_owns_crRadix4Fwd_64f", "icv_m7_owns_BitRev2_D", "icv_m7_owniCopy16s_C4P4_M7", "icv_m7_ownNormRel_L2_32f_C1MR_M7", "icv_y8_ownpi_Min_16s_C4R", "icv_l9_ownpi_Max_16s_C1R", "icv_m7_ownAFilterRow32f_16u_C4R", "icv_l9_ownippsCnvrt_16f16s_Asm", "icv_l9_ownCopySubpixIntersect_16u32f_C1R_M7", "icv_m7_owniCorrectAutoNormMean_8s32s_C1R", "icv_l9_ownSharpenRow_32f_C1", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr_Const_M7", "icv_y8_owns_crFftFwd_Fact8_Last_32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Mirr_U8", "icv_l9_ownSharpenRow_16s_C3", "icv_m7_ownsrDftFwd_Dir_32f", "icv_y8_owniExchange_8u_I_M7", "icv_l9_ownDistanceTransform_3x3_8u_C1R_B_M7", "icv_l9_ippi_AlphaCompOverC_AC4S_8u", "icv_y8_ownAdd_32f_C1IMR_M7", "icv_m7_ownscrDftInv_Prime5_32f", "icv_m7_ownippsCnvrt_8s32f", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Wrap_M7", "icv_m7_ownBFilterRow32f_16u_C1R", "icv_l9_ownscrDftInv_Fact2_32f", "icv_m7_ownscDft_Dir_64f", "icv_m7_ownscrDftInv_Prime4_64f", "icv_y8_ownpi_Sum_8u_C4R", "icv_m7_ownpis_Sum_16s_C4", "icv_l9_ownscDftFwd_Fact2_32fc", "icv_m7_ownAddSquare_16u32f_C1IMR_M7", "icv_m7_ownscrDftInv_Fact3_64f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2_Const_M7", "icv_m7_ownsSet_8u_M7", "icv_y8_ownsrDftFwd_Dir_32f", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_M7", "icv_l9_ippi_AlphaCompAtop_C1S_8u", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg_Mirr_M7", "icv_m7_ownsDotProd_32f32fc64fc_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_U8", "icv_l9_ownippiFilterMin_16u_Col", "icv_m7_ownscrDftInv_Fact_64f", "icv_y8_ownippiFilterMedian_16u_C1R_3x3", "own_ipps_sLn_Y8_ctab", "icv_l9_ownHipass5x5Col_32f_C4", "icv_l9_ownCanny_16s8u_C1R_3_16u_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Const_U8", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel_Const_M7", "icv_y8_ownCopySubpix_32f_C1R_U8_1", "icv_m7_ownBFilterRow32f_16s_C1R", "icv_y8_ownscDftFwd_Prime3_64fc", "own_ipps_sExp_Y8_ttab", "icv_m7_ownDistanceTransform_5x5_8u32f_C1R_21F_BMss_M7", "icv_y8_ownpi_Min_32f_C4R", "icv_l9_ownpi_Min_8u_C4R", "icv_m7_ownscrDftInv_Prime4_32f", "icv_l9_owns_cRadix4Inv_64fc", "icv_m7_ownscrDftFwd_Fact3_32f", "icv_y8_ownscDftFwd_Fact3_32fc", "icv_m7_ownLaplCol5x5_16s_C1", "icv_l9_ippi_AlphaCompOut_AC1S_8u", "icv_y8_ownscDftInv_Prime3_32fc", "icv_l9_ownsCopy_8u_repE9", "icv_m7_owniCopy_16s_C3M_M7", "icv_m7_owniCopy_32f_C3M_M7", "icv_m7_ownsConvert_8s16s_M7", "icv_l9_ownCanny_32f8u_C1R_2_32s_M7", "icv_y8_ownAFilterRow32f_16u_C3R", "icv_m7_ownippiFilterMin_32f_Row", "icv_y8_ownCopySubpix_16u_C1R_M7", "icv_y8_ownHipass5x5Col_8u_C4", "icv_y8_owniTranspose_32s_C4IR_M7", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_M7", "icv_m7_ownNormRel_L1_8s_C3CMR_M7", "icv_m7_ownCanny_32f8u_C1R_3_32s_M7", "icv_m7_ownpi_MaxIndx_8u_C1R", "icv_l9_owniSet_8u_C3M_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr_Wrap_M7", "_ZN3tbb8internal14__TBB_InitOnce18InitializationDoneE", "icv_l9_owniTranspose_16u_C4R_M7", "icv_y8_ownMinMaxIndx_8s_C1R_M7_1", "icv_y8_ownNorm_L2_8u_C1MR_M7__", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerSobel_Wrap_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr_MirrR_M7", "icv_l9_ownscrDftInv_Fact_64f", "icv_m7_owns_crRadix4InvNorm_64f", "icv_l9_ownsCplxToReal_64fc_Y8", "icv_y8_ownippiThreshold_GLV_16s_AC4", "icv_m7_owniSwap_8u_210_C3I_M7", "icv_m7_ownscDftInv_Prime4_32fc", "icv_y8_owniCopy8u_P3C3_M7", "icv_m7_ownNormDiff_L1_32f_C1MR_M7", "icv_l9_ownippiThreshold_8u_C3", "icv_y8_ownippiThreshold_8u_C3", "icv_m7_owniFilter_32f_C1R", "icv_m7_ownpis_Min_8u_C3", "icv_m7_ownippiFilterMax_8u_Col", "icv_l9_ownsFlip_32f_I_M7", "icv_m7_ownNorm_Inf_16u_C3CMR_M7", "icv_y8_ownscrDftFwd_Fact5_32f", "icv_y8_Plr2Crt_64f_M7", "icv_m7_ownpi_Or_8u_AC4R", "icv_y8_ownippiFilterMedianHoriz_8u_C4R_5x1", "icv_y8_ownippiFilterMax_16s_Col", "icv_m7_ownpi_MinMax_16s_C1R", "icv_y8_owniConvert_32f16s_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Mirr_U8", "icv_l9_ownsDotProd_32f32fc64fc_M7", "icv_y8_ownpi_Sum_16s_C1R", "icv_l9_ownsCopy_8u_inv", "icv_m7_owniCopy8u_P3C3_M7", "icv_m7_ownippsCnvrt_32f16u_Sfs", "icv_m7_ownippiThreshold_16s_C3", "icv_m7_ownAddSquare_32f_C1IMR_M7_B", "icv_y8_ownippsCnvrtFin_32f16s_Sfs", "icv_m7_ownscrDftFwd_Prime_64f", "icv_y8_ownMinMaxIndx_8s_C3CR_U8_1", "icv_y8_ownippiThreshold_GLV_8u_C3", "icv_y8_ownippiThreshold_V_32f_C1", "icv_l9_ownippiFilterMax_32f_Row", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerScharr_Const_M7", "own_ipps_dInvSqrt_E7_ttab", "icv_y8_ownippiFilterMedian_8u_C1R_5x5", "icv_m7_ownNormRel_L1_16u_C1MR_M7", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerScharr_Mirr_M7", "icv_m7_ownNorm_Inf_8s_C3CMR_M7", "icv_m7_ownscDftFwd_Fact2_32fc", "icv_m7_ownpis_Max_16s_C4", "own_ipps_sSqrt_E7_ttab", "icv_m7_owniCrossCorrValid_8u32s_C1R", "icv_m7_ownAbsDiff_32f_C1R_M7_B", "icv_l9_owns_BitRev1_Z", "icv_y8_ippi_AlphaCompOver_AC1S_8u", "icv_y8_ownpis_Min_16s_C3", "icv_y8_ippi_AlphaCompOver_C1S_8u", "icv_l9_owniAutoNormMean_8s32s_C1R_M7", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel_Const_U8", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2_Repl_M7", "icv_m7_ownippsCnvrt_32s32f", "icv_m7_ownAdd_8u32f_C1IMR_M7", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_M7", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg_Wrap_M7", "icv_l9_ownippiFilterMin_8u_Col", "icv_y8_owniSet32sC4Mas", "icv_m7_ownCopySubpix_8u16u_C1R_Sfs_M7", "icv_l9_ippi_AlphaCompInC_C1S_8u", "icv_y8_ownsMinIndx_64f_M7", "icv_y8_ownNormRel_L1_8u_C1MR_M7", "icv_m7_ownippiFilterMax_8u_Col_AC4", "own_ipps_dPowx_L9_ttab", "icv_m7_ownpis_Indx_32f_C4", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDx_Repl_M7", "icv_y8_ownsFlip_16u_I_M7"], "importedglobals": ["__sF", "_ctype_"], "importedfunctions": ["iswctype", "logf", "pthread_attr_destroy", "pthread_cond_init", "strlen", "uncompress", "remove", "wcsftime", "powf", "write", "pthread_mutexattr_settype", "memmove", "pthread_detach", "strdup", "wmemmove", "exit", "wmemchr", "fclose", "fmod", "__android_log_print", "sched_yield", "open", "printf", "acosf", "pthread_getattr_np", "pthread_mutexattr_destroy", "memcmp", "towlower", "hypot", "pthread_cond_signal", "atof", "fgets", "stat", "opendir", "strtok", "pthread_attr_setstacksize", "tan", "sem_destroy", "pthread_self", "inflateSync", "fgetc", "gzputs", "pthread_mutex_init", "syscall", "fputs", "strtol", "fputc", "isprint", "clock_gettime", "log", "pthread_key_delete", "wcscoll", "stpcpy", "fwrite", "qsort", "ceilf", "AndroidBitmap_getInfo", "writev", "sqrtf", "gzeof", "isxdigit", "inflate", "pthread_attr_init", "cosf", "compress", "wmemcpy", "atanf", "malloc", "readdir", "__errno", "abort", "sin", "sinf", "fstat", "pthread_once", "ceil", "deflateReset", "AndroidBitmap_unlockPixels", "dl_iterate_phdr", "pthread_mutex_unlock", "isalpha", "wcsxfrm", "strerror", "wcrtomb", "deflate", "pthread_mutex_lock", "longjmp", "pthread_attr_getstack", "rewind", "pthread_create", "closedir", "deflateInit_", "putwc", "strcmp", "fopen", "memchr", "atan2f", "wcslen", "toupper", "read", "vfprintf", "vsprintf", "ftell", "tolower", "mbrtowc", "strcpy", "puts", "fflush", "pthread_join", "pthread_mutex_destroy", "strncpy", "towupper", "strcoll", "putc", "AndroidBitmap_lockPixels", "getc", "gzopen", "ioctl", "fegetenv", "lseek", "strstr", "floor", "strftime", "srand", "fscanf", "pthread_mutex_trylock", "setlocale", "sinh", "clock", "mmap", "deflateInit2_", "pthread_key_create", "atoi", "frexp", "inflateEnd", "strtod", "rand", "sem_wait", "inflateInit_", "fseek", "strrchr", "sprintf", "unlink", "free", "adler32", "pow", "isspace", "pthread_mutexattr_init", "acos", "btowc", "pthread_getspecific", "memcpy", "sem_init", "__stack_chk_fail", "mkstemp", "sem_post", "inflateReset", "strncmp", "vprintf", "realloc", "__ctype_get_mb_cur_max", "deflateEnd", "sqrt", "pthread_cond_destroy", "calloc", "getwc", "wmemset", "memset", "poll", "strtof", "setjmp", "ferror", "snprintf", "bsearch", "exp", "sscanf", "getenv", "ungetwc", "cos", "pthread_setspecific", "pthread_cond_wait", "strchr", "close", "fesetenv", "gzgets", "gzrewind", "atan", "expf", "strxfrm", "fread", "gzclose", "vsnprintf", "asin", "feof", "atan2", "crc32", "fprintf", "wctob", "deflateParams", "wctype", "floorf", "munmap", "putchar", "log10", "isalnum", "ungetc", "strtold", "ldexp", "fileno"], "exportedfunctions": ["icv_m7_ippiCopyReplicateBorder_16s_C4R", "_ZN2cv3hal6cmp16sEPKsmS2_mPhmiiPv", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "icv_l9_ippsFlip_64f_I", "icv_l9_ownMean_32f_C1MR_HSW", "icv_m7_ownBuildFilter_32f", "_ZN2cv17CascadeClassifier13getOldCascadeEv", "Java_org_opencv_videoio_VideoCapture_set_10", "icv_l9_ownNormDiff_L2_8u_C1MR_HSW", "_ZN3tbb8internal17generic_scheduler25local_spawn_root_and_waitERNS_4taskERPS2_", "icv_l9_owns_sDctInv_Conv_32f", "_ZN2cv4cuda18getNppErrorMessageEi", "icv_m7_ownsrDFTinv_6_64f", "icv_y8_ownsAdd_8u_PosSfs", "icv_y8_ownscDFTinv_9_32fc", "icv_l9_ippiSwapChannels_8u_C3R", "icv_y8_ownsInitTabDftBase_32f", "icv_l9_cv_ownippiFilterMax_16u_Col", "icv_y8_owns_rFFT_1_scale_32f", "cvReduce", "icv_l9_ippiMarkSpeckles_8u_C1IR", "Java_org_opencv_photo_Photo_stylization_11", "_ZN2cv12findContoursERKNS_17_InputOutputArrayERKNS_12_OutputArrayEiiNS_6Point_IiEE", "icv_l9_ownpi_NormL2_16s_C1R", "_ZN3tbb8internal8governor8sign_offEPNS0_17generic_schedulerE", "icv_l9_ownpi_NormL1_32f_C3R", "icv_y8_owns_cFFTfwd_4_scale_32fc", "icv_y8_ippiResizeGetSrcOffset_8u", "icv_y8_ownFilterMaxRow09_32f_C3R", "cvFilter2D", "Java_org_opencv_ml_SVMSGD_setOptimalParameters_11", "Java_org_opencv_videoio_VideoCapture_VideoCapture_13", "icv_y8_owniSDDiv_32f_C1IR", "icv_y8_ownpi_NormL1_32f_C4R", "_ZN2cv17agast_cornerScoreILi2EEEiPKhPKii", "icv_y8_ippsFFTFwd_RToPerm_32f", "_ZNK2cv17CommandLineParser12printMessageEv", "_ZN2cv3PCAC1Ev", "icv_l9_ippiMean_16u_C1MR", "icv_l9_ownsrDFTfwd_9_64f", "icv_m7_ownsrDFTinv_5_32f", "icv_l9_ippiDistanceTransform_3x3_8u32f_C1R", "icv_m7_ippsDFTInv_PackToR_32f", "icv_l9_ownCalcBorderR4Cubic16u", "icv_m7_ownscDftInv_Fact13_32fc", "icv_y8_ippiFilterScharrVertMaskBorder_32f_C1R", "_ZN9CvLevMarqC2Ev", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_16u_C1R", "icv_l9_ownscDftInv_Prime2_64fc", "icv_m7_ownsrDFTinv_15_32f", "icv_l9_owniConvert_8u32s_C1R", "_ZN2cv3ocl8PlatformD2Ev", "Java_org_opencv_photo_TonemapDurand_setSigmaColor_10", "_ZN3tbb8internal17generic_scheduler12reload_tasksEv", "icv_m7_ownFilterColumnPipeline_16s_C1R_X", "icv_m7_ownFilterRowBorderPipeline_16u_C1R", "_ZN2cv3hal11normHammingEPKhi", "Java_org_opencv_photo_MergeMertens_process_11", "icv_y8_ippiThreshold_LTVal_8u_C1R", "icv_y8_ownpi_CmpLE_16s_C1R", "ippicviSum_16u_C4R", "_ZN2cv3ocl7ProgramD1Ev", "icv_m7_owniFlip_8u_C1", "_ZNK2cv4UMat1tEv", "Java_org_opencv_ml_SVM_setNu_10", "icv_y8_ippiDFTInit_C_32fc", "icv_l9_ippiCopy_16s_C1R", "icv_l9_ippiErodeBorder_8u_C4R", "_ZNSt15__exception_ptr13exception_ptr18_M_safe_bool_dummyEv", "icv_y8_ippiNorm_L1_16u_C3R", "icv_m7_IsOverlapedROI", "icv_l9_ownResize3Cubic32f", "_ZN2cv3ocl6KernelaSERKS1_", "icv_y8_owniGetRectLeft_16s", "icv_l9_ipMirror45_32uC1R", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_16u_C3R", "ippicviConvert_16u8s_C1RSfs", "icv_y8_ippiDCTInvInit_32f", "icv_y8_ippiNormRel_Inf_16u_C1R", "cvPtrND", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_X_H9L9cn", "_ZN2cv3hal4sqrtEPKfPfi", "_ZNK2cv12_OutputArray6createENS_5Size_IiEEiibi", "icv_l9_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "_ZNK2cv11_InputArray9getGpuMatEv", "icv_y8_ownFilterBorder16s_16s_C3R", "icv_y8_ippiFilterBorder_16s_C3R", "_ZNK2cv13HOGDescriptor7computeERKNS_11_InputArrayERSt6vectorIfSaIfEENS_5Size_IiEES9_RKS4_INS_6Point_IiEESaISB_EE", "cvGraphRemoveEdgeByPtr", "ippicviHistogram_8u_C1R", "icv_y8_ownRow3Cubic16u", "own_ipps_sPowx_E7HAynn", "icv_y8_ippiNormDiff_L2_8u_C1MR", "icv_l9_ownNormDiff_L2_32f_C1MR_HSW", "_ZN2cv3hal5QR64fEPdmiiiS1_mS1_", "Java_org_opencv_imgproc_Imgproc_distanceTransformWithLabels_10", "icv_y8_owns_initTabTwd_L1_32f", "Java_org_opencv_ml_ANN_1MLP_getRpropDWMin_10", "Java_org_opencv_imgproc_Imgproc_sqrBoxFilter_10", "_ZN2cv27fastNlMeansDenoisingColoredERKNS_11_InputArrayERKNS_12_OutputArrayEffii", "icv_m7_ippiCompare_32f_C1R", "icv_l9_ownCalcBorderR1Linear16u", "icv_m7_ippiDilateBorder_8u_C4R", "icv_m7_ippsPowx_32f_A21", "icv_y8_ownResize1Linear16s", "icv_y8_ippsDFTGetSize_R_64f", "_ZN2cv11mixChannelsERKNS_11_InputArrayERKNS_17_InputOutputArrayERKSt6vectorIiSaIiEE", "icv_y8_ippsCopy_32s", "icv_l9_owniFilter32f_16u_C1R_g9e9_7", "icv_y8_ownpi_NormL1_16s_C3R", "Java_org_opencv_imgproc_Imgproc_createLineSegmentDetector_10", "icv_m7_ownsrDFTfwd_11_scale_64f", "icv_l9_owns_rFFTinv_16_scale_32f", "Java_org_opencv_core_Core_mulTransposed_11", "icv_m7_ippiNormDiff_Inf_32f_C3CMR", "Java_org_opencv_objdetect_HOGDescriptor_load_10", "icv_l9_ownpi_Sum_32f_C1R_gs", "icv_l9_ippiRGBToXYZ_8u_C3R", "ippicviThreshold_LTVal_16s_C1IR", "icv_y8_ippiCopyReplicateBorder_16s_C4R", "icv_l9_ownErodeEllipseBorderReplicate_32f_C3R", "ippicviNormRel_L1_32f_C1MR", "icv_y8_ownFilterMinRow06_8u_C3R", "_ZN2cv3ocl9KernelArgC2Ev", "Java_org_opencv_imgproc_Imgproc_adaptiveThreshold_10", "icv_y8_ownFilterMinRow09_8u_C4R", "icv_y8_ownCalcBorderR3Cubic32f", "_ZN2cv12KalmanFilter7predictERKNS_3MatE", "icv_y8_owniClipRectZeroTail_8u32f_C1R", "icv_l9_ippiNormDiff_L2_8u_C3CMR", "_ZN2cv9SparseMat3Hdr5clearEv", "icv_l9_ownCubicKernel3", "_ZNK2cv16TLSDataContainer10gatherDataERSt6vectorIPvSaIS2_EE", "icv_l9_ownNormRel_Inf_16u_C1MR_HSW", "Java_org_opencv_core_TickMeter_getTimeMilli_10", "icv_l9_ippiConvert_8u16u_C1R", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_5x5", "icv_l9_ownFilterBorder32f_16s_C1R", "_ZN10__cxxabiv117__class_type_infoD1Ev", "icv_l9_ownsrDFTinv_13_scale_32f", "icv_l9_owniFlip_8u_C3", "icv_y8_ippiSet_32f_C4MR", "own_ipps_sCos_L9HAynn", "_ZN2cv3minERKNS_3MatEd", "icv_l9_owniConvert_16u8u", "icv_m7_ownps_Add_16u_Sfs", "icv_l9_ippiMorphologyBorderGetSize_8u_C3R", "icv_y8_ippiFilterSobelVertSecondBorderGetBufferSize", "_ZN2cv11RNG_MT19937cvfEv", "icv_y8_ownippiFilterMinBorderReplicate_8u_C4R", "icv_y8_ippiNormDiff_L2_32f_C1R", "icv_l9_ippiCopy_16u_C3MR", "icv_l9_ownsSub_16s_PosSfs", "icv_y8_ownFilterMaxRow13_8u_C1R", "Java_org_opencv_core_Core_solvePoly_11", "_ZN2cv3ocl13ProgramSourceC1Ev", "icv_m7_owns_rFFTinv_16_scale_32f", "icv_y8_ownpi_NormL2_32f_C3R", "_ZN2cv5remapERKNS_11_InputArrayERKNS_12_OutputArrayES2_S2_iiRKNS_7Scalar_IdEE", "icv_m7_ippiFilterScharrVertMaskBorder_16s_C1R", "icv_y8_ownFilterMaxRow04_32f_C4R", "icv_m7_ippsSin_64f_A53", "_ZN10__cxxabiv121__vmi_class_type_infoD1Ev", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_y8_ippiSwapChannels_32f_C3C4R", "icv_m7_ippiResizeLinear_64f_C4R", "icv_l9_owns_initTabTwdRealRec_32f", "icv_y8_ippiMorphologyBorderGetSize_32f_C4R", "Java_org_opencv_imgproc_Imgproc_putText_11", "Java_org_opencv_imgcodecs_Imgcodecs_imencode_10", "icv_y8_owniFilterPrewittHorizBorder2_16s_C1R", "cvScalarToRawData", "icv_y8_ownscDFTfwd_10_32fc", "icv_l9_ownsrDFTfwd_14_32f", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_W7cn", "ippicviMirror_16u_C3IR", "icv_l9_ownscDFTfwd_5_scale_32fc", "icv_m7_ownColCubic16s", "icv_l9_ippiNorm_Inf_8u_C1R", "_ZN2cv19connectedComponentsERKNS_11_InputArrayERKNS_12_OutputArrayEii", "_ZNK2cv9SparseMat6copyToERNS_3MatE", "icv_l9_innerHSVToRGB_8u_AC4R", "_ZNK2cv3ocl6Device21nativeVectorWidthCharEv", "cvSetTrackbarMin", "icv_m7_ippiFilterLaplacianGetBufferSize_32f_C1R", "icv_l9_owniCopy_32s_P3C3R", "icv_l9_ownpi_NormL1Diff_16s_C4R", "icv_l9_owniGetRectBottom_32f", "icv_m7_ippiNorm_Inf_16u_C4R", "_ZNK2cv3ocl6Device16maxParameterSizeEv", "cvSetImageCOI", "icv_l9_ownNorm_L2_16u_C1MR_HSW", "Java_org_opencv_ml_TrainData_getNVars_10", "_ZN2cv22cornerEigenValsAndVecsERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "_ZN2cv11recoverPoseERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayES5_dNS_6Point_IdEERKNS_17_InputOutputArrayE", "icv_m7_ownsrDFTinv_7_64f", "_ZN2cv9videostab36TranslationBasedLocalOutlierRejectorC2Ev", "ippicviFilterSobelHorizSecondBorder_8u16s_C1R", "icv_m7_ownCalcBorderR1Cubic16s", "icv_y8_ownFilterMaxColumnVH_32f_C1R", "_ZN2cv3Mat6resizeEmRKNS_7Scalar_IdEE", "icv_m7_ownippiErodeBorder_32f_C4R", "icv_m7_owns_cFFTfwd_16_scale_32fc", "icv_l9_owniConvert_16u32f", "cvClearHist", "Java_org_opencv_ml_DTrees_getRegressionAccuracy_10", "Java_org_opencv_features2d_BOWTrainer_descriptorsCount_10", "icv_l9_ippiTranspose_8u_C4R", "icv_m7_ippiHLSToRGB_8u_C3R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R_X_W7cn", "icv_m7_ownFilterMinRow15_32f_C1R", "icv_m7_ownscDFTinv_14_scale_32fc", "icv_m7_owns_initTabTwdRealRec_32f", "ippicviConvert_8u32s_C1R", "_ZNK2cv3ocl6Device25preferredVectorWidthFloatEv", "Java_org_opencv_core_Mat_n_1Mat__JIIII", "Java_org_opencv_ml_KNearest_setIsClassifier_10", "icv_m7_ippiFilterBorder_32f_C1R", "icv_l9_ippiFilterMedianBorder_16s_C1R", "_ZN2cv6detail11PlaneWarper7warpRoiENS_5Size_IiEERKNS_11_InputArrayES6_S6_", "icv_l9_ownippiFilterMedianVert_16s_1x3", "Java_org_opencv_core_Core_add_14", "_ZN2cv8subtractERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_i", "ippicviSet_16u_C4MR", "_ZNK3tbb18task_group_context8priorityEv", "icv_l9_ippsMinEvery_16u", "icv_l9_ippiFilterMaxBorder_8u_C4R", "_ZN2cv14setTrackbarMinERKNS_6StringES2_i", "cvPyrMeanShiftFiltering", "icv_y8_ippiMean_StdDev_32f_C3CR", "Java_org_opencv_core_Core_mulTransposed_10", "Java_org_opencv_ml_SVM_getCoef0_10", "_ZN2cv9videostab14StabilizerBase5resetEv", "icv_m7_ippiTranspose_16s_C1IR", "icv_m7_ippiAddWeighted_32f_C1IR", "_ZN2cv6detail12CameraParamsC1ERKS1_", "icv_y8_ownsrDFTfwd_7_scale_32f", "_ZN2cv11cornerScoreILi8EEEiPKhPKii", "icv_y8_ownCalcBorderR4Linear16u", "Java_org_opencv_imgproc_Imgproc_findContours_11", "_Z29Mat_to_vector_vector_KeyPointRN2cv3MatERSt6vectorIS2_INS_8KeyPointESaIS3_EESaIS5_EE", "ippicviSum_16s_C3R", "icv_y8_ippsMinEvery_32f", "_ZN2cv17CommandLineParserC1EiPKPKcRKNS_6StringE", "Java_org_opencv_ml_SVMSGD_getMarginRegularization_10", "icv_m7_ownscDFTinv_15_64fc", "Java_org_opencv_ml_TrainData_getResponseType_10", "own_ipps_dPowx_L9EPnnn", "icv_m7_ownRow1Cubic32f", "icv_l9_ownsrDFTinv_7_64f", "_ZNK2cv4UMat6handleEi", "icv_l9_ippiMin_32f_C1R", "Java_org_opencv_features2d_GFTTDetector_setQualityLevel_10", "_ZN2cv12createButtonERKNS_6StringEPFviPvES3_ib", "icv_m7_ippiSub_8u_C1RSfs", "icv_m7_ownFilterMaxColumn01_8u_C1R", "ippicviFilterLaplacianGetBufferSize_32f_C1R", "_ZTv0_n24_N2cv9Feature2DD1Ev", "icv_y8_ownDilateEllipseBorderReplicate_32f_C3R", "icv_y8_ownFilterMinRowVH_32f_C1R", "icv_y8_ownscDFTinv_11_scale_32fc", "icv_m7_ippsFFTGetSize_C_32fc", "own_ipps_sCos_E7EPnnn", "Java_org_opencv_features2d_ORB_setWTA_1K_10", "Java_org_opencv_imgproc_Imgproc_getPerspectiveTransform_10", "ippicviConvert_8s16u_C1Rs", "icv_m7_ownFilterBorder32f_16s_C4R", "_ZN2cv9videostab18FastMarchingMethod13heapRemoveMinEv", "_ZN2cv3Mat9push_backERKS0_", "Java_org_opencv_core_Mat_nPutI", "icv_l9_ownFilterMinRow05_32f_C4R", "icv_l9_ippsSqrt_64f_I", "_ZN2cv3ogl6Arrays15resetColorArrayEv", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "icv_m7_ownsrDFTinv_11_64f", "icv_l9_owns_cFFTinv_4_scale_64fc", "cvGetDiag", "icv_l9_ownNormDiff_L1_32f_C3CMR_HSW", "_ZN2cv8CholeskyEPfmiS0_mi", "ippicviThreshold_GT_32f_C1R", "_ZNSt16bad_array_lengthD0Ev", "cvTrace", "icv_m7_ippiNorm_L1_8u_C4R", "_ZN2cv3SVD7computeERKNS_11_InputArrayERKNS_12_OutputArrayES6_S6_i", "icv_y8_ippsDFTGetSize_C_32fc", "icv_y8_ippiNormDiff_Inf_16s_C3R", "icv_l9_ownsSub_16s_Bound", "icv_m7_ippiMin_16u_C1R", "icv_l9_myHSVToRGB_8u_C3R", "icv_l9_getMaskFeature", "own_ipps_sCos_E7LAynn", "Java_org_opencv_features2d_KAZE_getExtended_10", "ippicviTrueDistanceTransformGetBufferSize_8u32f_C1R", "_ZN2cv6detail9resultRoiERKSt6vectorINS_6Point_IiEESaIS3_EERKS1_INS_4UMatESaIS8_EE", "icv_l9_ownsMulC_16s_I_Bound", "icv_m7_innerXYZToRGB_16u_C3R", "icv_y8_ippiMirror_16u_C1R", "icv_y8_owniFlipCopy_32s_C3", "icv_l9_ippiNot_8u_C1R", "icv_y8_ippiCopySubpixIntersect_32f_C1R", "icv_m7_ownFilterMaxRow15_32f_C3R", "icv_m7_ownFilterRowBorderPipeline_16s_C1R", "icv_l9_ippiDFTFwd_CToC_32fc_C1R", "_ZN2cv4PSNRERKNS_11_InputArrayES2_", "Java_org_opencv_video_BackgroundSubtractorMOG2_getComplexityReductionThreshold_10", "icv_m7_ippiErodeBorder_8u_C3R", "_ZN2cv6detail18SphericalWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_iiRS3_", "icv_l9_ippiAddProduct_8u32f_C1IR", "cvGetTrackbarPos", "_ZNK2cv11FileStorageixERKNS_6StringE", "icv_y8_ippiConvert_32f8u_C1RSfs", "icv_l9_ippiCopyReplicateBorder_16s_C3R", "icv_l9_ownpi_Sum_16u_C4R", "Java_org_opencv_imgproc_Imgproc_remap_11", "Java_org_opencv_videoio_VideoCapture_open_13", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_16u_C3R", "icv_l9_ownsrDFTinv_11_scale_32f", "icv_l9_owniFilterMedianSqr5x5_32f_C1R", "Java_org_opencv_photo_CalibrateDebevec_setRandom_10", "_ZN2cv11FileStorage8writeObjERKNS_6StringEPKv", "_ZN2cv8Subdiv2D6VertexC1Ev", "icv_y8_ippiSet_32s_C1MR", "icv_y8_ownFilterMinRow04_32f_C4R", "Java_org_opencv_imgcodecs_Imgcodecs_imdecode_10", "_ZN3tbb8internal3rml14private_worker14release_handleElb", "Java_org_opencv_photo_CalibrateCRF_delete", "_ZN2cvltERKNS_3MatEd", "icv_l9_ippiAdd_8u32f_C1IMR", "icv_l9_ippiTranspose_16u_C3IR", "ippicviDCTFwd_32f_C1R", "icv_m7_ownFilterMaxRow13_8u_C4R", "_ZN2cv17CommandLineParseraSERKS0_", "Java_org_opencv_videoio_VideoCapture_delete", "icv_y8_ippiSum_16s_C4R", "icv_y8_ownscDFTfwd_11_32fc", "icv_l9_ownsrDFTinv_12_scale_32f", "Java_org_opencv_core_Mat_n_1checkVector__JIIZ", "icv_m7_owns_cFFTinv_32_scale_32fc", "icv_l9_ippiMorphologyBorderInit_32f_C4R", "cvKMeans2", "_ZN2cv8CamShiftERKNS_11_InputArrayERNS_5Rect_IiEENS_12TermCriteriaE", "icv_m7_ippiMean_16u_C3R", "_ZN2cv16BOWKMeansTrainerC1EiRKNS_12TermCriteriaEii", "_ZN2cv10cvarrToMatEPKvbbiPNS_10AutoBufferIdLm136EEE", "icv_y8_ippsSet_16s", "Java_org_opencv_video_BackgroundSubtractorMOG2_setNMixtures_10", "cvFindContours", "_Z19vector_float_to_MatRSt6vectorIfSaIfEERN2cv3MatE", "icv_l9_ownDilateEllipseBorderReplicate_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_3x3_H9L9cn", "icv_l9_ownFilterRowBorderPipeline_16u_C1R_3x3", "Java_org_opencv_ml_TrainData_getLayout_10", "_ZNK2cv3ocl7Image2D3ptrEv", "icv_l9_ownpi_Sum_8u_C3R", "icv_l9_ippsFFTGetSize_R_64f", "Java_org_opencv_video_DualTVL1OpticalFlow_setMedianFiltering_10", "cvGetRealND", "Java_org_opencv_video_Video_meanShift_10", "_ZNK2cv3ocl6Device25preferredVectorWidthShortEv", "icv_l9_owns_cFftInv_Fact8_64fc", "_ZN2cv16FileNodeIteratorC1EPK13CvFileStoragePK10CvFileNodem", "icv_y8_ippiNormDiff_L1_16u_C3CMR", "icv_m7_ippiCopyConstBorder_16u_C4R", "ippicvMalloc", "_ZN2cv3hal5DFT2D6createEiiiiiii", "icv_y8_owns_rFFT_1_64f", "ippicviTranspose_8u_C3R", "icv_m7_ownscDftFwd_PrimeFact_32fc", "icv_y8_ownFilterBorder16s_16s_C1R", "_ZN2cv3hal5max8uEPKhmS2_mPhmiiPv", "icv_y8_ippiThreshold_GT_8u_C1IR", "cvBoundingRect", "ippicvsSqrt_64f_A50", "_ZNK2cv6detail27BundleAdjusterAffinePartial25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_l9_ownNormDiff_Inf_8u_C1MR_HSW", "_ZN2cv3PCAclERKNS_11_InputArrayES3_id", "_ZN2cv8superres15SuperResolution9nextFrameERKNS_12_OutputArrayE", "_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE", "icv_y8_ippiNormDiff_Inf_16u_C3R", "Java_org_opencv_video_DualTVL1OpticalFlow_setScalesNumber_10", "cvCheckContourConvexity", "ippicviMirror_8u_C1IR", "ippicviNormDiff_L2_16s_C4R", "icv_l9_ownsAddC_16s_I_1Sfs", "_ZN2cv13mulTransposedERKNS_11_InputArrayERKNS_12_OutputArrayEbS2_di", "icv_y8_ownscDftInv_Fact7_32fc", "cvSetWindowProperty", "icv_l9_owns_initDctInv_Conv_32f", "icv_m7_ownsInitTabDftDir_64f", "cvInitLineIterator", "_ZN2cv16estimateAffine2DERKNS_11_InputArrayES2_RKNS_12_OutputArrayEidmdm", "_ZN2cv6detail18GraphCutSeamFinderC1Eiff", "icv_y8_ownFilterRowBorderPipeline_32f_C3R_X_W7cn", "_ZN2cv24currentParallelFrameworkEv", "_ZN2cv2ml3SVM4loadERKNS_6StringE", "Java_org_opencv_imgproc_Subdiv2D_locate_10", "ippicviNorm_Inf_32f_C3R", "cvGetHashedKey", "_ZN2cv5instr8NodeDataD2Ev", "_ZN2cv17CommandLineParserD2Ev", "icv_m7_ownFilterMinRow11_8u_C1R", "own_ipps_dSqrt_E7HAynn", "cvGetMinMaxHistValue", "icv_m7_ownFilterMaxRow15_32f_C1R", "cvReleaseHaarClassifierCascade", "icv_y8_ippiErodeBorder_32f_C1R", "Java_org_opencv_features2d_GFTTDetector_create_10", "_ZN2cv3hal5add8sEPKamS2_mPamiiPv", "_ZN2cv3hal19cvtTwoPlaneYUVtoBGREPKhmPhmiiibi", "_ZN3tbb18captured_exception5clearEv", "icv_l9_ippiNormDiff_Inf_16u_C3R", "icv_y8_owniSwapChannels_8u_C3C4R", "icv_y8_ownscDFTfwd_14_32fc", "Java_org_opencv_ml_SVM_getTermCriteria_10", "icv_y8_ippiNormRel_L2_16u_C1MR", "Java_org_opencv_photo_CalibrateRobertson_delete", "Java_org_opencv_video_FarnebackOpticalFlow_getPolyN_10", "icv_y8_owniFilterSobelVertBorder2_8u16s_C1R", "icv_l9_ownFilterMaxRow04_32f_C4R", "cvReleaseVideoWriter", "icv_l9_ownFilterMinRow07_32f_C3R", "Java_org_opencv_core_TickMeter_reset_10", "icv_l9_owns_rFFTinv_16_32f", "cvGraphRemoveEdge", "icv_m7_ippiNorm_L1_8u_C3R", "icv_l9_ownscDFTfwd_3_scale_32fc", "icv_l9_owniFilter32f_8u_C3R_g9e9_5", "_ZN2cv9Formatter3getEi", "_ZN2cv6detail11PlaneWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_S6_RKNS_12_OutputArrayES9_", "Java_org_opencv_core_Core_max_10", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_delete", "icv_y8_ownsrDFTfwd_12_scale_64f", "icv_l9_ownFilter32f_8u_C1R_g9e9", "_ZN2cv11bitwise_andERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_", "Java_org_opencv_core_Mat_n_1zeros__III", "icv_l9_ownpi_CmpEQ_8u_C1R", "_ZN3tbb8internal18concurrent_monitor17abort_all_relaxedEv", "Java_org_opencv_core_Mat_n_1create__JIII", "icv_m7_ippiFFTInit_R_32f", "icv_y8_ownFilterMinRow09_32f_C4R", "cvRetrieveFrame", "ippicviNorm_Inf_8u_C1R", "Java_org_opencv_calib3d_Calib3d_Rodrigues_11", "icv_l9_ippiConvert_16s32f_C1R", "_ZN2cv3hal4sqrtEPKdPdi", "_ZN2cv7fisheye15stereoCalibrateERKNS_11_InputArrayES3_S3_RKNS_17_InputOutputArrayES6_S6_S6_NS_5Size_IiEERKNS_12_OutputArrayESB_iNS_12TermCriteriaE", "icv_m7_ownFilterColumnPipeline_16s_C1R_5x5", "Java_org_opencv_calib3d_Calib3d_calibrateCameraExtended_11", "_ZN2cv8stopLoopEv", "ippicviNormRel_L2_32f_C1MR", "icv_l9_ownpi_NormL2_32f_C4R", "icv_y8_ippsZero_64f", "icv_l9_ownscDFTinv_5_scale_32fc", "icv_y8_ippiCopyReplicateBorder_16u_C3R", "_ZN2cv10PCAComputeERKNS_11_InputArrayERKNS_17_InputOutputArrayERKNS_12_OutputArrayEd", "icv_y8_owns_rFFTfwd_4_scale_32f", "icv_m7_owniFlipCopy_16u_C1", "icv_l9_ownFilterMaxRow09_8u_C1R", "cvUseOptimized", "ippicviNormDiff_L2_16s_C3R", "cvReleaseFileStorage", "icv_m7_owns_initTabTwd_Large_32f", "icv_l9_ipMirror135_8uC1R", "icv_l9_owniFilter32f_8u_C1R_g9e9_0", "_ZN2cv3ocl15getPlatfomsInfoERSt6vectorINS0_12PlatformInfoESaIS2_EE", "_Z21vector_Point3i_to_MatRSt6vectorIN2cv7Point3_IiEESaIS2_EERNS0_3MatE", "icv_l9_ownColLinear16s", "icv_m7_ippiMean_StdDev_16u_C1R", "icv_y8_owniFilterScharrVertMaskBorder2_8u16s_C1R", "icv_y8_owniConvert_16u16s_ccode", "_ZN2cv6detail16createLaplacePyrERKNS_11_InputArrayEiRSt6vectorINS_4UMatESaIS5_EE", "Java_org_opencv_video_KalmanFilter_set_1measurementMatrix_10", "icv_m7_ippiNorm_L2_16u_C3R", "Java_org_opencv_imgproc_Imgproc_getRectSubPix_10", "ippicviMorphologyBorderInit_32f_C3R", "icv_l9_ippiNormDiff_L1_16s_C4R", "Java_org_opencv_imgproc_Imgproc_distanceTransform_10", "icv_y8_ownsGetSizeTabDftDir_32f", "icv_l9_ownippiFilterMinGetBufferSize_32f_C3R", "icv_l9_ippiCompare_32f_C1R", "icv_y8_innerXYZToRGB_16u_C3R", "_ZNK2cv9BFMatcher5cloneEb", "_ZN2cv4globENS_6StringERSt6vectorIS0_SaIS0_EEb", "icv_l9_owns_initTabTwd_L1_32f", "cvGetImageCOI", "icv_y8_ippiCopyReplicateBorder_32f_C4R", "_ZN2cv3hal6div32fEPKfmS2_mPfmiiPv", "icv_y8_ippiMean_8u_C3R", "icv_l9_ippiResizeLinear_16u_C1R", "_ZNKSt10bad_typeid4whatEv", "cvGraphAddEdgeByPtr", "_ZN2cv21decomposeEssentialMatERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_", "icv_m7_ippiFilterSobelNegVertBorder_8u16s_C1R", "Java_org_opencv_ml_TrainData_getResponses_10", "icv_l9_owniFilter32f_8u_C3R_g9e9_4", "icv_y8_owniFilterSobelVertBorder2_16s_C1R", "icv_l9_ownMinEllipse_8u_C1", "icv_l9_ippiTranspose_16s_C1IR", "icv_y8_ippiSet_32f_C1MR", "Java_org_opencv_features2d_Params_set_1filterByCircularity_10", "icv_m7_ownsAdd_8u_Bound", "ippicvGetMaxCacheSizeB", "ippicviDilateBorder_32f_C4R", "icv_l9_ippiNormDiff_L1_8u_C4R", "icv_l9_ippiNormDiff_Inf_32f_C3CMR", "icv_y8_ippiTranspose_32f_C1R", "icv_y8_owniFilterMedianVert1x5_32f_C1R", "icv_l9_ownscDFTfwd_10_scale_64fc", "ippicviSum_16s_C1R", "_ZN2cv14solvePnPRansacERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_bifdS5_i", "icv_m7_owns_cFFT_2_64fc", "icv_y8_ippiMirror_8u_C3IR", "icv_y8_ippsConvert_16s8s_Sfs", "icv_l9_owniFilter32f_16u_C3R_g9e9_7", "_ZN2cv23getPerspectiveTransformERKNS_11_InputArrayES2_", "icv_y8_owns_cFFTinv_8_32fc", "cvCreateGraph", "icv_m7_owniAutoCorrFull_C1R", "icv_l9_ownsrDFTinv_10_scale_32f", "icv_m7_ownippiFilterMaxGetBufferSize_16u_C1R", "icv_l9_ippiSwapChannels_32f_C4R", "Java_org_opencv_imgproc_Imgproc_createHanningWindow_10", "icv_l9_ippiCopyConstBorder_8u_C3R", "ippicvsDFTInv_PackToR_64f", "_ZN2cv6detail21resultRoiIntersectionERKSt6vectorINS_6Point_IiEESaIS3_EERKS1_INS_5Size_IiEESaIS9_EE", "icv_m7_ownippiFilterMaxGetBufferSize_32f_C3R", "_ZN2cv3dftERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_y8_ippiConvert_16s16u_C1Rs", "icv_m7_ownsrDFTfwd_3_64f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R_X", "icv_m7_ownsAddC_16s_I_Bound", "icv_y8_ippiNorm_L2_16s_C4R", "icv_m7_ippsConj_32fc", "icv_l9_ownscDftInv_Prime5_32fc", "_ZN2cv15BriskScaleSpaceC1Ei", "ippicviMean_StdDev_8u_C1MR", "icv_l9_gres_NormL2Diff_8u_C3R", "icv_y8_owns_rFFTinv_32_scale_64f", "ippicvsFlip_8u_I", "icv_m7_ippiFilterLaplacianBorder_32f_C1R", "icv_l9_ownscDftFwd_Fact11_64fc", "_ZN2cv6detail12DpSeamFinderC1ENS1_12CostFunctionE", "icv_m7_ippiCopy_8u_C4P4R", "_ZN2cv12morphologyExERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE", "Java_org_opencv_core_Mat_n_1delete", "_ZSt14__convert_to_vIgEvPKcRT_RSt12_Ios_IostateRKPi", "icv_l9_ippiNorm_Inf_32f_C3R", "_ZN2cv18findFundamentalMatERKNS_11_InputArrayES2_iddRKNS_12_OutputArrayE", "icv_m7_Erode_32f_C4S", "icv_y8_ownFilterMinRow03_32f_C1R", "_ZN2cv15scalarToRawDataERKNS_7Scalar_IdEEPvii", "Java_org_opencv_imgproc_Imgproc_HoughCircles_10", "icv_y8_ippiMirror_32f_C4R", "icv_m7_ippiMirror_32s_C3IR", "icv_l9_ownNorm_Inf_32f_C1MR_HSW", "icv_l9_ippsCopy_8u", "_ZN2cv10convexHullERKNS_11_InputArrayERKNS_12_OutputArrayEbb", "cvConvertScale", "cvSplit", "ippicviNorm_L2_32f_C1R", "icv_y8_ippiSwapChannels_32f_C3R", "Java_org_opencv_ml_SVM_setDegree_10", "icv_l9_ippsFFTFwd_CToC_64fc", "cvBoxPoints", "_ZN2cv6detail17OrbFeaturesFinderC2ENS_5Size_IiEEifi", "Java_org_opencv_imgproc_Imgproc_morphologyEx_10", "icv_l9_ownFilterMaxRow07_8u_C4R", "_ZN2cv3MatC1ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_y8_owniClipRectZeroTail_32f_C1R", "_ZN2cv16MinProblemSolver8Function11getGradientEPKdPd", "icv_m7_ippiResizeCubic_32f_C4R", "icv_m7_ippiNorm_Inf_32f_C4R", "_ZN2cv11compareHistERKNS_9SparseMatES2_i", "icv_l9_ownpi_NormL1Rel_8u_C1R", "icv_y8_ownFilterColumnPipeline_16s8u_C1R_3x3_W7cn", "cvStartAppendToSeq", "icv_l9_ippiDotProd_16u64f_C1R", "icv_m7_ippiSet_16u_C1MR", "Java_org_opencv_imgproc_Imgproc_phaseCorrelate_11", "icv_y8_Erode_32f_C4S", "_ZN2cv8va_intel20convertFromVASurfaceEPvjNS_5Size_IiEERKNS_12_OutputArrayE", "icv_y8_ippiTranspose_16u_C1IR", "icv_l9_ippiDCT8x8Fwd_32f_C1", "icv_l9_owns_rFFTinv_4_scale_32f", "__trunctfsf2", "Java_org_opencv_features2d_AKAZE_setDescriptorType_10", "icv_y8_ownsMul_64fc", "icv_l9_ippiXYZToRGB_32f_C3R", "own_ipps_dSqrt_E7EPnnn", "_ZN2cv3hal8recip32sEPKimS2_mPimiiPv", "icv_m7_ippiMorphologyBorderInit_8u_C3R", "icv_y8_ownpi_NormL1Diff_16u_C1R", "icv_y8_ownscDFTfwd_10_scale_64fc", "icv_l9_owniSet_8u_C1R", "Java_org_opencv_imgproc_Imgproc_contourArea_10", "_ZNK2cv3ocl6Device12halfFPConfigEv", "icv_l9_owniSwapChannels_8u_C3R", "_ZN2cv21findChessboardCornersERKNS_11_InputArrayENS_5Size_IiEERKNS_12_OutputArrayEi", "_ZN3tbb8internal5arena14is_out_of_workEv", "icv_y8_ownpi_NormInfDiff_16s_C3R", "Java_org_opencv_core_Mat_n_1ones__DDI", "_ZN2cv9videostab14StabilizerBase17logProcessingTimeEv", "icv_l9_ippiMean_8u_C1MR", "icv_y8_ippiResizeLinear_16u_C4R", "Java_org_opencv_ml_TrainData_shuffleTrainTest_10", "ippicviNormDiff_L1_16s_C4R", "_ZN2cv9videostab28KeypointBasedMotionEstimatorC1ENS_3PtrINS0_19MotionEstimatorBaseEEE", "icv_y8_ippiFilterLowpassBorder_32f_C1R", "_Z19vector_Vec4i_to_MatRSt6vectorIN2cv3VecIiLi4EEESaIS2_EERNS0_3MatE", "icv_y8_owniFilter_32f_C1R_v8u8_3", "icv_y8_owniGetRectRight_16s", "icv_y8_ownFilterMinRowVH_8u_C4R", "_ZN3tbb8internal6market16update_allotmentEl", "icv_l9_ownFilterColumnPipeline_32f_C1R_5x5", "icv_l9_IPP_Erode_C3_32f", "_ZN2cv14fillConvexPolyERNS_3MatEPKNS_6Point_IiEEiRKNS_7Scalar_IdEEii", "_ZNK2cv4UMat6getMatEi", "_ZN2cv17DescriptorMatcher20DescriptorCollectionD1Ev", "icv_y8_ippiComputeThreshold_Otsu_8u_C1R", "icv_l9_owns_rFFTfwd_16_scale_32f", "icv_y8_owns_rFFTfwd_8_scale_64f", "Java_org_opencv_core_Mat_n_1mul__JJD", "icv_m7_ippiSwapChannels_32f_C3C4R", "_ZTv0_n40_NK2cv9Feature2D5writeERNS_11FileStorageE", "Java_org_opencv_features2d_AKAZE_setThreshold_10", "cvMatchTemplate", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_X_W7cn", "_ZN2cv3Mat4onesEiPKii", "Java_org_opencv_features2d_ORB_getMaxFeatures_10", "icv_y8_ippiNormDiff_L1_32f_C1R", "_ZN2cv5MutexaSERKS0_", "_ZN2cv6detail14PlaneWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_iiRS3_", "_ZN2cv3hal5add8uEPKhmS2_mPhmiiPv", "cvPow", "ippicviTranspose_16u_C1IR", "icv_l9_ownpi_NormL1_32f_C1R", "icv_l9_ownippiFilterMedian_16u_C1R_5x5", "_ZN2cv31createEMDHistogramCostExtractorEiif", "icv_y8_ownippiFilterMaxBorderReplicate_32f_C1R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "icv_m7_ippiFilterBorder_16u_C1R", "icv_y8_ownsrDFTinv_14_scale_64f", "Java_org_opencv_objdetect_HOGDescriptor_get_1L2HysThreshold_10", "icv_m7_ippsMinEvery_8u", "icv_m7_ownippiFilterMaxBorderReplicate_32f_C1R", "Java_org_opencv_core_Core_kmeans_11", "icv_y8_owns_cFFTfwd_32_scale_32fc", "icv_l9_myXYZToRGB_8u_C3R", "icv_m7_ippiTranspose_16u_C4R", "Java_org_opencv_imgproc_Imgproc_blur_11", "icv_l9_ownNormRel_L1_32f_C1MR_HSW", "icv_y8_ippiConvert_8u16s_C1R", "_ZN2cv3ocl14memopTypeToStrEi", "icv_y8_ippiNorm_L2_16u_C4R", "_ZN2cv6detail7Blender5blendERKNS_17_InputOutputArrayES4_", "icv_m7_ownsrDFTinv_7_scale_32f", "_ZN2cv6detail17stitchingLogLevelEv", "icv_m7_ownErodeEllipseBorderReplicate_8u_C1R", "icv_y8_ownsrDFTfwd_13_scale_64f", "icv_l9_owns_rFFTinv_4_scale_64f", "icv_l9_ippiDFTGetSize_C_32fc", "icv_m7_ippsConvert_16s8s_Sfs", "icv_m7_ippiCopy_16s_C1R", "icv_y8_gres_NormL2Diff_8u_C3R", "icv_y8_ownRow4Cubic16u", "cvCreateSeq", "icv_y8_ownsInitDftPrimeFact_32f_32f", "icv_l9_ownMean_16u_C3MR_HSW", "icv_m7_ownpi_Max_16u_C1R", "icv_m7_ownFilterMinRowVH_8u_C1R", "Java_org_opencv_imgproc_Imgproc_boxFilter_12", "icv_m7_ownRow4Linear16u", "Java_org_opencv_ml_EM_getCovs_10", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setWinSize_10", "icv_l9_ownpi_NormL1_16s_C4R", "_ZN2cv3hal11normHammingEPKhii", "_ZN2cv17FlannBasedMatcher4readERKNS_8FileNodeE", "icv_y8_owniRCPack2DConj_32f_C1IR", "icv_y8_ippsConj_64fc", "ippicviMin_32f_C1R", "_ZN2cv9videostab32estimateGlobalMotionLeastSquaresERKNS_17_InputOutputArrayES3_iPf", "_ZN2cvltERKNS_3MatES2_", "icv_m7_ippiCopyReplicateBorder_32s_C1IR", "ippicviThreshold_GT_16s_C1IR", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithStats_11", "_ZN2cv8superres7arrCopyERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv9videostab17TwoPassStabilizer14estimateMotionEv", "icv_y8_ippiTranspose_16s_C4IR", "_ZNK2cv4cuda10DeviceInfo13maxThreadsDimEv", "_ZN2cv9SparseMat5eraseEiiiPm", "_ZN2cv5CannyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEddb", "_ZN2cv6detail19AKAZEFeaturesFinder4findERKNS_11_InputArrayERNS0_13ImageFeaturesE", "Java_org_opencv_imgproc_Imgproc_phaseCorrelate_10", "icv_y8_ippiResizeCubic_16s_C3R", "icv_l9_ippiTranspose_8u_C3R", "Java_org_opencv_calib3d_Calib3d_solvePnP_11", "_ZN2cv15NAryMatIteratorC1EPPKNS_3MatEPS1_i", "icv_l9_ownMean_StdDev_32f_C1R2_HSW", "_ZN2cv17CommandLineParser4Impl12apply_paramsEiNS_6StringE", "icv_m7_ippiThreshold_Val_8u_C1R", "icv_m7_ippiThreshold_GT_16s_C1IR", "icv_y8_ownFilterRowBorderPipeline_16u_C1R_X", "icv_l9_ownMinEigenVal_32f_C1R", "_ZN3tbb8internal6market12create_arenaEiim", "_ZN2cv3ocl7ContextC1ERKS1_", "icv_y8_ippsMinEvery_16u", "icv_y8_ippiMirror_8u_C4R", "_ZN3tbb18task_group_context4initEv", "icv_y8_ippiRGBToGray_32f_AC4C1R", "cvAddWeighted", "ippicviFilterBorder_16u_C3R", "Java_org_opencv_imgproc_Subdiv2D_insert_10", "ippicviFilterBorderInit_32f", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3", "_ZNK2cv8FileNode4nameEv", "_ZSt9terminatev", "_ZNK2cv12_OutputArray6neededEv", "_ZN2cv9FormatterD0Ev", "icv_m7_ippiCopySubpixIntersect_32f_C1R", "_ZN2cv9FormattedD2Ev", "icv_l9_owniSqrDistanceNorm_Valid_32f_C1R", "Java_org_opencv_ml_TrainData_getSubVector_10", "_ZNK2cv3ocl6Device18imageMaxBufferSizeEv", "icv_l9_ippiResizeLinear_16s_C3R", "icv_l9_owniTranspose32s_C4R_core2", "cvDisplayStatusBar", "_ZN2cv9BFMatcherC1Eib", "ippicviResizeCubic_16s_C3R", "_ZN2cv16TLSDataContainerD1Ev", "_ZN2cv9Feature2DD0Ev", "icv_m7_ownippiFilterMinBorderReplicate_8u_C1R", "Java_org_opencv_features2d_ORB_create_11", "icv_y8_ippiMean_16u_C1R", "icv_y8_ippiSub_16u_C1RSfs", "ippicviNorm_L2_16s_C1R", "_ZN2cv10BriskLayerC2ERKS0_i", "icv_l9_owniSwapChannels_16u_C3C4R", "icv_m7_ippiNorm_Inf_16s_C3R", "icv_l9_ippiSqrDistanceNormGetBufferSize", "_ZN2cv9Feature2DD1Ev", "_ZN2cv11randShuffleERKNS_17_InputOutputArrayEdPNS_3RNGE", "icv_m7_ippiFilterBorderInit_32f", "icv_y8_ippiCannyGetSize", "icv_l9_GET_ANCHOR_BORDER", "icv_m7_ownFilterMinRow09_32f_C3R", "icv_y8_ownFilterMinRow04_8u_C1R", "icv_y8_ippiTrueDistanceTransform_8u32f_C1R", "icv_y8_ippiAddProduct_8u32f_C1IR", "icv_y8_Dilate_8u_C1S", "icv_l9_ownscDftFwd_Fact5_64fc", "ippicviNormDiff_Inf_32f_C3R", "icv_y8_ippiTranspose_16s_C4R", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_5x5", "_ZN2cv9videostab17TwoPassStabilizer21runPrePassIfNecessaryEv", "_ZN2cv8superres23createFrameSource_EmptyEv", "icv_l9_ippiMirror_16s_C3IR", "_ZN2cv8cvtColorERKNS_11_InputArrayERKNS_12_OutputArrayEii", "ippicviSet_16s_C3MR", "icv_l9_ownpi_Sum_32f_C3R_gs", "icv_l9_ippiDFTFwd_RToPack_32f_C1R", "icv_l9_ownCalcBorderR3Linear16s", "icv_y8_ownscDftFwd_Fact11_64fc", "own_ipps_sPowx_L9LAynn", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale2_11", "_ZSt15get_new_handlerv", "Java_org_opencv_imgproc_Imgproc_line_12", "icv_l9_owns_getSizeTwd_Large_64f", "_ZNK3tbb12missing_wait4whatEv", "_ZN2cv9waitKeyExEi", "Java_org_opencv_calib3d_StereoBM_create_11", "icv_m7_ownpi_NormL1Diff_16u_C4R", "icv_y8_ippiFilterMinBorder_32f_C1R", "icv_y8_ownsrDFTfwd_9_64f", "_ZNKSt9exception4whatEv", "Java_org_opencv_core_Algorithm_getDefaultName_10", "ippicviAdd_32f_C1IR", "icv_y8_owniFlip_32s_C1", "icv_y8_myHSVToRGB_8u_C3R", "_ZN2cv11FileStorageC1Ev", "_ZNSt15__exception_ptr13exception_ptraSERKS0_", "_ZN2cv6detail11MatchesInfoC1Ev", "icv_l9_ippiSet_32s_C1MR", "_ZN2cv2ml9TrainDataD0Ev", "ippicviAddSquare_8u32f_C1IMR", "Java_org_opencv_core_Mat_n_1Mat__DDI", "icv_m7_ippsMagnitude_32f", "icv_l9_ownDistanceTransform_5x5_8u32f_C1R_21B_g9e9", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarMin_10", "icv_m7_ippiMirror_8u_C3IR", "icv_l9_owniSwapChannels_32u_C3R", "icv_l9_ownFilterRowBorderPipeline_16u_C1R_X_P8Y8cn", "cvCreateStructuringElementEx", "_ZNSt9exceptionD2Ev", "icv_y8_ownFilterMinRow01_8u_C4R", "Java_org_opencv_imgproc_Imgproc_cornerSubPix_10", "_ZN2cv3Mat10push_back_EPKv", "_ZNSt15__exception_ptr13exception_ptrC1ERKS0_", "icv_y8_ownFilterMaxRow05_32f_C1R", "_ZN2cv17validateDisparityERKNS_17_InputOutputArrayERKNS_11_InputArrayEiii", "icv_y8_ippiThreshold_GTVal_16s_C1IR", "icv_l9_ippiCopy_16u_C1MR", "icv_y8_ownFilterMaxRow01_32f_C3R", "icv_l9_ownsrDFTinv_13_scale_64f", "icv_l9_ippiResizeLinearInit_64f", "Java_org_opencv_core_Core_compare_10", "_ZN2cv20fastNlMeansDenoisingERKNS_11_InputArrayERKNS_12_OutputArrayERKSt6vectorIfSaIfEEiii", "icv_y8_ippiDilateBorder_32f_C1R", "icv_y8_ownCalcBorderR1Linear64f", "cvFindStereoCorrespondenceBM", "icv_m7_ownsrDFTinv_9_64f", "_ZN2cv10BriskLayer14getAgastPointsEiRSt6vectorINS_8KeyPointESaIS2_EE", "icv_m7_ownsrDftFwd_Conv_32f", "icv_m7_owns_rFFTfwd_16_64f", "_ZN2cv3Mat4onesENS_5Size_IiEEi", "icv_y8_owns_cCcsRecombine_32f", "_ZN2cv8superres13convertToTypeERKNS_4UMatEiRS1_S4_", "ippicviAddWeighted_32f_C1IMR", "icv_y8_cv_ownippiFilterMax_8u_Col", "_ZN2cv22SparseMatConstIteratorppEv", "_ZN2cv17agast_cornerScoreILi1EEEiPKhPKii", "icv_l9_ownFilterMinRow04_32f_C4R", "_ZN2cv3ocl5QueueD1Ev", "cvSetTrackbarPos", "icv_m7_ippiMarkSpeckles_16s_C1IR", "icv_l9_ippiNormDiff_L1_32f_C3R", "_ZN2cv13redirectErrorEPFiiPKcS1_S1_iPvES2_PS2_", "icv_m7_ownFilterRowBorderPipeline_32f_C3R_5x5", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_16s_C1R", "Java_org_opencv_features2d_AKAZE_getDescriptorChannels_10", "icv_m7_owns_cFFTfwd_32_scale_32fc", "icv_l9_ownFilterBorder32f_8u_C1R", "icv_y8_ownFilterMinColumnVH_32f_C1R", "_ZN2cv17CascadeClassifier16getMaskGeneratorEv", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithStatsWithAlgorithm_10", "_ZN2cv5mergeERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_m7_owns_cFFTinv_32_32fc", "icv_l9_ownippiFilterMedian_8u_C1R_3x3", "Java_org_opencv_core_Core_reduce_10", "ippicviResizeGetSrcOffset_32f", "Java_org_opencv_imgproc_Imgproc_connectedComponents_10", "icv_l9_owns_cFFTinv_32_64fc", "_ZN2cv17CascadeClassifier16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EERS4_IiSaIiEEdiiNS_5Size_IiEESE_", "Java_org_opencv_calib3d_Calib3d_rectify3Collinear_10", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C3R", "_ZN2cv8UMatDataD2Ev", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_X", "cvCalcMatMulDeriv", "_ZN3tbb18task_group_context5resetEv", "_ZN2cv5flann16SavedIndexParamsC2ERKNS_6StringE", "cvCbrt", "_ZN2cv3hal6sub32sEPKimS2_mPimiiPv", "cvEncodeImage", "cvSetOpenGlDrawCallback", "icv_m7_ippiFFTGetSize_R_32f", "icv_l9_owniFilter_32f_C3R_g9e9_7", "Java_org_opencv_video_Video_createBackgroundSubtractorMOG2_10", "Java_org_opencv_features2d_Features2d_drawKeypoints_11", "ippicviConvert_32s8s_C1R", "_ZN2cv3hal11fastAtan64fEPKdS2_Pdib", "icv_m7_ownsAdd_8u_PosSfs", "icv_l9_ownsrDFTinv_3_32f", "icv_y8_ippiCompare_32f_C1R", "icv_y8_ippiMorphologyBorderInit_8u_C4R", "_ZN2cv8superres23createOptFlow_FarnebackEv", "icv_y8_gres_NormL2Rel_16s_C1R", "icv_y8_ownsrDftFwd_Conv_32f", "icv_y8_owns_rFFTfwd_32_scale_32f", "_Unwind_GetIPInfo", "ippicviHistogramGetBufferSize", "icv_y8_ippiMean_StdDev_16u_C3CR", "ippicviResizeLinear_32f_C3R", "icv_l9_ownsrDFTinv_15_scale_64f", "Java_org_opencv_calib3d_Calib3d_undistortPoints_11", "icv_l9_innerHSVToRGB_8u_C3R", "Java_org_opencv_calib3d_StereoSGBM_setPreFilterCap_10", "icv_m7_ownsrDFTinv_9_scale_64f", "icv_l9_ippiFilterScharrVertMaskBorder_16s_C1R", "_ZN2cv8UMatData4lockEv", "_ZNK2cv11_InputArray6sizendEPii", "icv_y8_ownippiFilterMaxGetBufferSize_8u_C3R", "_ZN2cv11VideoWriterC2ERKNS_6StringEidNS_5Size_IiEEb", "_ZNK2cv6detail20BundleAdjusterReproj25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_m7_ownscDFTfwd_6_scale_32fc", "_ZN3tbb8internal18call_itt_notify_v5EiPv", "_ZN2cv8multiplyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi", "_ZN2cvdvERKNS_7MatExprES2_", "Java_org_opencv_photo_AlignMTB_getCut_10", "icv_m7_owns_initTabTwdCcsRec_64f", "_ZN2cv15setUseOptimizedEb", "icv_l9_owniFilter_32f_C3R_g9e9_6", "Java_org_opencv_features2d_FeatureDetector_create_10", "_ZNK2cv4cuda10DeviceInfo17concurrentKernelsEv", "ippicviNorm_L1_16s_C1R", "icv_y8_owniTransposeWxH_32sC1", "icv_m7_ownFilterMinRow11_32f_C3R", "icv_m7_ownFilterMinRow02_8u_C1R", "icv_l9_ownFilter32f_8u_C4R_g9e9", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_15", "icv_l9_ownFilterMaxRow05_8u_C4R", "icv_m7_ippiNormRel_L1_8u_C1R", "_ZN2cv6detail14FeatherBlender4feedERKNS_11_InputArrayES4_NS_6Point_IiEE", "ippicviDFTInv_PackToR_32f_C1R", "Java_org_opencv_photo_AlignMTB_setCut_10", "icv_y8_ippiTranspose_8u_C4IR", "_ZN2cv3LDA4loadERKNS_6StringE", "icv_l9_ownscDftInv_Prime2_32fc", "icv_y8_ownsMaxEvery_64f", "icv_m7_ippiFilterMedianBorder_8u_C1R", "icv_y8_ippsDFTInit_C_64fc", "_ZN2cv6detail18SurfFeaturesFinderC2Ediiii", "icv_y8_ownscDFTfwd_13_scale_64fc", "icv_m7_owns_cFFT_2_scale_64fc", "icv_y8_ippiNormRel_Inf_8u_C1MR", "__register_frame", "_ZNK2cv4cuda10DeviceInfo12majorVersionEv", "icv_l9_ownRow4Linear64f", "_ZN3tbb8internal13observer_list25do_notify_entry_observersERPNS0_14observer_proxyEb", "icv_l9_ippiAddProduct_8u32f_C1IMR", "icv_l9_owns_rFFTfwd_4_scale_32f", "icv_m7_ippiAddC_16s_C1IRSfs", "icv_y8_ownsrDFTinv_15_scale_64f", "icv_l9_ippiAdd_8u32f_C1IR", "icv_y8_ippiNormDiff_L1_16s_C1R", "Java_org_opencv_features2d_AgastFeatureDetector_getType_10", "ippicviNormRel_L2_8u_C1R", "ippicviMirror_32f_C4R", "Java_org_opencv_objdetect_HOGDescriptor_save_11", "icv_l9_ownRow4Cubic16u", "cvSaveWindowParameters", "icv_l9_ippiMax_8u_C1R", "icv_l9_ippiResizeCubic_16s_C3R", "_ZN2cv6detail19findMaxSpanningTreeEiRKSt6vectorINS0_11MatchesInfoESaIS2_EERNS0_5GraphERS1_IiSaIiEE", "cvInsertNodeIntoTree", "icv_l9_ippiRGBToXYZ_32f_C3R", "icv_m7_ippiNormRel_Inf_32f_C1R", "icv_l9_ippiFilterScharrVertMaskBorder_8u16s_C1R", "icv_l9_owniFilter32f_16u_C4R_g9e9_3", "ippicviResizeLinear_64f_C3R", "icv_l9_ownippiFilterMaxGetBufferSize_8u_C1R", "Java_org_opencv_photo_CalibrateDebevec_setSamples_10", "_ZdlPv", "icv_l9_ownFilterMaxColumn03_8u_C1R", "icv_m7_ippiMax_32f_C1R", "icv_l9_ippiFilterGaussianBorder_8u_C3R", "icv_y8_owns_rFFTfwd_16_32f", "Java_org_opencv_photo_AlignMTB_delete", "icv_m7_ippiNormDiff_L1_8u_C4R", "cvSetData", "_ZN2cv12countNonZeroERKNS_11_InputArrayE", "icv_y8_ippiSet_8u_C1R", "icv_l9_ownFilterMaxRow07_8u_C1R", "icv_y8_ippiAddC_32f_C1IR", "_ZN2cv12VideoCapture7releaseEv", "icv_y8_ownFilterMinRow04_32f_C3R", "icv_m7_ownscDftFwd_Prime7_64fc", "icv_m7_ippiCrossCorrNorm_32f_C1R", "Java_org_opencv_core_Core_subtract_11", "icv_l9_ownippiFilterMedian_16s_C1R_3x3", "_ZN2cv28convertPointsFromHomogeneousERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv17DescriptorMatcher6createEi", "Java_org_opencv_photo_TonemapReinhard_delete", "ippicviOr_8u_C1R", "icv_m7_ownFilterMaxRow02_8u_C4R", "icv_m7_ippsSin_32f_A24", "_ZN2cv18createTonemapDragoEfff", "icv_y8_ippiNormDiff_L2_16u_C4R", "_ZN2cv2ml6KDTreeC1ERKNS_11_InputArrayEb", "icv_m7_ownpis_Sum_16u_C1", "icv_m7_ippiCannyGetSize", "icv_y8_ippiCompare_16u_C1R", "cvCvtSeqToArray", "_ZN2cvplERKNS_3MatES2_", "_ZN2cv17DescriptorMatcherD2Ev", "_ZN2cv14correctMatchesERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayES5_", "_ZNK2cv25BOWImgDescriptorExtractor13getVocabularyEv", "Java_org_opencv_calib3d_Calib3d_getValidDisparityROI_10", "_ZN2cvgtERKNS_3MatEd", "_ZN3tbb8internal6market16update_allotmentERNS0_14intrusive_listINS0_5arenaEEEii", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_11", "ippicviAddSquare_16u32f_C1IR", "_ZN2cv3ocl6Kernel3setEiRKNS0_7Image2DE", "icv_y8_ownscDFTfwd_12_scale_32fc", "icv_y8_ownResize3Linear16u", "icv_l9_ownscDFTfwd_7_scale_64fc", "Java_org_opencv_core_Mat_n_1Mat__JII", "icv_y8_ippiMean_32f_C1MR", "icv_l9_ippiConvert_8u32f_C1R", "icv_l9_owns_rFFT_2_64f", "icv_l9_ownscDFTfwd_10_32fc", "Java_org_opencv_ml_StatModel_predict_10", "Java_org_opencv_photo_MergeMertens_getContrastWeight_10", "icv_l9_ippiFilterLaplacianGetBufferSize_32f_C1R", "_ZNK2cv3ocl6Device21nativeVectorWidthHalfEv", "Java_org_opencv_video_BackgroundSubtractorMOG2_getNMixtures_10", "_ZNK2cv4cuda10DeviceInfo12regsPerBlockEv", "icv_m7_ippiCompare_8u_C1R", "icv_m7_ownsGetSizeDftPrimeFact_32f_32f", "icv_l9_ippiResizeLinear_64f_C4R", "Java_org_opencv_objdetect_CascadeClassifier_CascadeClassifier_10", "icv_y8_ippiAddWeighted_8u32f_C1IR", "Java_org_opencv_imgproc_CLAHE_setTilesGridSize_10", "Java_org_opencv_videoio_VideoCapture_retrieve_10", "cvCreateMat", "_ZNK2cv5flann5Index11getDistanceEv", "_ZN2cv9ExceptionC2EiRKNS_6StringES3_S3_i", "_ZN2cv9videostab25ConsistentMosaicInpainter7inpaintEiRNS_3MatES3_", "_ZN2cv6detail18SurfFeaturesFinderC1Ediiii", "icv_m7_ippiFilterGaussianBorder_16s_C3R", "icv_y8_ownFilterMaxRow11_32f_C1R", "icv_m7_ownCalcBorderR1Linear16s", "icv_y8_ownpi_NormInf_8u_C1R", "_ZN2cv6detail26BestOf2NearestRangeMatcherC1Eibfii", "_ZN2cv6detail12DpSeamFinder14closeToContourEiiRKNS_4Mat_IhEE", "icv_l9_owniFilter_32f_C1R_g9e9_1", "icv_l9_ippiTranspose_32s_C1IR", "_ZN2cv6detail10Timelapser10initializeERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_5Size_IiEESaISA_EE", "icv_y8_ownFilterMinRow13_32f_C4R", "_ZN2cv9videostab26estimateGlobalMotionRansacERKNS_11_InputArrayES3_iRKNS0_12RansacParamsEPfPi", "_ZN2cv6detail27BundleAdjusterAffinePartial9calcErrorERNS_3MatE", "icv_l9_ownFilterMaxRow09_32f_C3R", "cvSetCaptureProperty", "icv_m7_ownsAddC_16s_I", "icv_y8_ippsFFTInv_PermToR_64f", "ippicviNormDiff_Inf_8u_C1MR", "icv_y8_ippiMarkSpeckles_16s_C1IR", "icv_l9_ippiResizeCubicInit_8u", "icv_y8_ownscDFTinv_11_64fc", "icv_y8_ownsrDFTinv_14_64f", "icv_y8_ippiMean_16u_C1MR", "_ZN3tbb8internal8governor17create_rml_serverERNS0_3rml10tbb_clientE", "_ZN3tbb8internal3rml11tbb_factory11make_serverERPNS1_10tbb_serverERNS1_10tbb_clientE", "icv_l9_ipMirror45_8uC1R", "Java_org_opencv_calib3d_Calib3d_computeCorrespondEpilines_10", "icv_y8_ownscDftInv_Fact7_64fc", "icv_m7_ippiMul_8u_C1RSfs", "_ZNK2cv14DefaultDeleterI5CvMatEclEPS1_", "Java_org_opencv_features2d_Feature2D_delete", "icv_m7_owniNormLevel_8u_C1R", "Java_org_opencv_features2d_BOWTrainer_add_10", "_ZNK2cv7MatExpr5crossERKNS_3MatE", "icv_y8_owniFilter_32f_C4R_v8u8_5NA", "Java_org_opencv_features2d_MSER_create_11", "icv_m7_owniFlip_8u_C3", "icv_y8_innerRGBToXYZ_8u_C3R", "icv_l9_ownFilterMinRow07_8u_C4R", "_ZNKSt8bad_cast4whatEv", "icv_l9_ownMorphologyBorderInit_32f", "_ZN3tbb8internal3rml14private_serverC2ERNS1_10tbb_clientE", "Java_org_opencv_imgproc_CLAHE_getClipLimit_10", "icv_y8_ownscDFTfwd_15_32fc", "icv_m7_ownRow3Cubic16u", "cvResetImageROI", "icv_l9_ippiCopyReplicateBorder_16s_C4R", "icv_l9_ownFilterMaxRow15_8u_C3R", "_ZN2cv6detail23calibrateRotatingCameraERKSt6vectorINS_3MatESaIS2_EERS2_", "icv_y8_ippiFilterSobelVertSecondBorder_32f_C1R", "icv_l9_ippiAdd_16s_C1RSfs", "icv_l9_ippiResizeCubic_32f_C1R", "icv_l9_ippiNormDiff_L2_32f_C4R", "icv_l9_ownFilterRowBorderPipeline_16s_C3R", "Java_org_opencv_core_Core_convertScaleAbs_11", "icv_l9_cv_ownippiFilterMin_16s_Row", "Java_org_opencv_core_Core_sort_10", "Java_org_opencv_imgproc_Subdiv2D_findNearest_11", "icv_y8_ippiFilterScharrHorizMaskBorder_32f_C1R", "icv_l9_owniCrossCorrNorm_Valid_32f_C1R", "cvCopyMakeBorder", "icv_m7_ownippiMorphologyBorderReplicateInMemGetSize_32f_C4R", "cvPreCornerDetect", "icv_l9_ippiAdd_32f_C1IMR", "icv_l9_owniGetRectBottom_16s", "icv_l9_owniTransposeWxH_16uC1", "icv_y8_ippsMul_64fc_I", "icv_m7_ippiNormDiff_Inf_16u_C3CMR", "icv_l9_ownNormDiff_Inf_16u_C3CMR_HSW", "ippicviNormRel_L1_16s_C1R", "_ZN2cv3hal5min8sEPKamS2_mPamiiPv", "icv_l9_owniTransposeWxH_16uC4", "ippicviConvert_16u8u_C1R", "icv_m7_innerRGBToXYZ_8u_C3R", "_ZN2cv3hal5and8uEPKhmS2_mPhmiiPv", "Java_org_opencv_features2d_DescriptorMatcher_getTrainDescriptors_10", "icv_m7_ippiMirror_16u_C1R", "icv_y8_ippsLn_32f_A21", "icv_m7_ippsDFTInit_C_64fc", "own_ipps_dInvSqrt_L9HAynn", "_ZN2cv3hal15cvtGraytoBGR5x5EPKhmPhmiii", "ippicviTranspose_16u_C1R", "_ZN2cv8KeyPoint7convertERKSt6vectorIS0_SaIS0_EERS1_INS_6Point_IfEESaIS7_EERKS1_IiSaIiEE", "icv_l9_ippsConvert_32f32s_Sfs", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_X_H9L9cn", "icv_y8_ownFilterMaxRow11_32f_C4R", "Java_org_opencv_objdetect_HOGDescriptor_load_11", "icv_y8_ownColLinear64f", "icv_l9_ownFilterMinColumnVH_32f_C1R", "icv_m7_ownFilterMinRowVH_32f_C3R", "icv_l9_ippiThreshold_GTVal_16s_C1IR", "icv_y8_ownFilterMaxRow01_32f_C4R", "icv_y8_ownFilterRowBorderPipeline_32f_C3R_5x5", "_ZNK2cv17CascadeClassifier14getFeatureTypeEv", "_ZN2cv8superres32createSuperResolution_BTVL1_CUDAEv", "_ZNK2cv5flann5Index4saveERKNS_6StringE", "_ZN2cv5flann5IndexC1Ev", "Java_org_opencv_imgproc_Subdiv2D_getVoronoiFacetList_10", "_ZN2cv9HuMomentsERKNS_7MomentsERKNS_12_OutputArrayE", "icv_y8_owns_rFFT_1_scale_64f", "icv_l9_owns_rFFTfwd_32_32f", "icv_y8_ownpi_NormInfRel_16s_C1R", "_ZN2cv3MataSERKNS_7Scalar_IdEE", "ippicviSum_16s_C4R", "icv_y8_ownFilterMinRow09_32f_C3R", "_ZNK2cv5flann5Index12getAlgorithmEv", "icv_m7_ownFilterMinRow15_8u_C4R", "_ZN2cv10fastMallocEm", "icv_y8_ippiNorm_L2_8u_C1R", "icv_y8_ippiResizeGetSize_16u", "icv_l9_ippiCopyReplicateBorder_8u_C3IR", "icv_l9_owns_rFFTinv_32_scale_64f", "icv_m7_ownsrDFTfwd_15_scale_32f", "_ZN2cv8tempfileEPKc", "icv_y8_owniFilterMedianBorderInMem_32f_C1R", "_ZN2cv20perspectiveTransformERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "icv_y8_ippsFlip_32f_I", "_ZN2cv3hal6max64fEPKdmS2_mPdmiiPv", "Java_org_opencv_ml_DTrees_setUse1SERule_10", "icv_m7_ownsrDFTinv_14_scale_64f", "icv_l9_owniFilter32f_16s_C3R_g9e9_1", "icv_l9_ownsrDFTinv_5_scale_64f", "Java_org_opencv_video_SparseOpticalFlow_calc_11", "_ZN2cv10BriskLayerC1ERKS0_i", "Java_org_opencv_video_DualTVL1OpticalFlow_setGamma_10", "_ZN2cv25computeCorrespondEpilinesERKNS_11_InputArrayEiS2_RKNS_12_OutputArrayE", "icv_l9_ippiNorm_Inf_16u_C4R", "Java_org_opencv_imgproc_Imgproc_cornerHarris_11", "Java_org_opencv_photo_TonemapReinhard_setColorAdaptation_10", "_ZN2cv4UMatC2ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_y8_ippiFilterScharrVertMaskBorderGetBufferSize", "icv_l9_ownippiFilterMedianVert_8u_1x3", "icv_y8_ownRow3Linear64f", "ippicviCrossCorrNormGetBufferSize", "icv_y8_ippiSet_16u_C1MR", "icv_l9_ippsDCTFwdInit_32f", "icv_m7_IPP_Erode_C4_32f", "icv_y8_ownscDFTinv_11_32fc", "Java_org_opencv_imgproc_Imgproc_fillConvexPoly_10", "Java_org_opencv_ml_SVM_load_10", "_ZN3tbb8internal17generic_scheduler10steal_taskERNS0_10arena_slotE", "ippicviConvert_32f16u_C1RSfs", "_ZN2cv6detail17CylindricalWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "icv_y8_ownRow1Cubic16u", "Java_org_opencv_imgproc_Subdiv2D_getEdge_10", "icv_m7_cv_ownippiFilterMin_32f_Row", "_ZN2cv5MutexC1Ev", "icv_m7_ownFilterMaxRow11_32f_C3R", "icv_l9_ippiHistogram_8u_C1R", "Java_org_opencv_core_TickMeter_TickMeter_10", "_ZN2cv11arrowedLineERKNS_17_InputOutputArrayENS_6Point_IiEES4_RKNS_7Scalar_IdEEiiid", "icv_y8_gres_NormL1_16u_C1R", "icv_m7_ippiFilterColumnPipelineGetBufferSize_16u_C3R", "icv_l9_ippiResizeLinearInit_32f", "Java_org_opencv_ml_DTrees_setCVFolds_10", "icv_y8_ownFilterColumnPipeline_16s8u_C1R_5x5", "ippicviHistogramUniformInit", "ippicviNorm_Inf_8u_C1MR", "icv_y8_ownFilter_32f_C3R_v8u8", "_ZN2cv3hal11fastAtan32fEPKfS2_Pfib", "Java_org_opencv_imgproc_Imgproc_getDefaultNewCameraMatrix_10", "Java_org_opencv_video_Video_createBackgroundSubtractorKNN_11", "Java_org_opencv_core_Core_getNumThreads_10", "icv_m7_ippsFFTInit_R_32f", "icv_l9_ippiNorm_L1_32f_C4R", "icv_y8_ippiSet_32s_C3MR", "icv_y8_ippiCopyReplicateBorder_8u_C4IR", "_ZN2cv3ogl9Texture2D8copyFromERKNS_11_InputArrayEb", "Java_org_opencv_video_BackgroundSubtractorMOG2_delete", "_ZN2cv8internal21EstimateUncertaintiesERKNS_11_InputArrayES3_RKNS0_15IntrinsicParamsES3_S3_RS4_RNS_3VecIdLi2EEEdiRd", "_ZN2cv6detail11MatchesInfoaSERKS1_", "_ZN3tbb19task_scheduler_init9terminateEv", "icv_y8_ippiCopy_8u_P3C3R", "icv_m7_ippiNormDiff_L1_16s_C1R", "icv_y8_ippiNormRel_L2_8u_C1MR", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkC2ERS0_NS_3PtrINS0_9IDetectorEEERKNS0_10ParametersE", "icv_m7_ippiTranspose_16s_C1R", "Java_org_opencv_features2d_Params_get_1minDistBetweenBlobs_10", "icv_y8_owniExchange_8u_I", "icv_l9_ownpi_NormL1Diff_8u_C1R", "icv_l9_ownscDFTfwd_6_scale_32fc", "Java_org_opencv_ml_KNearest_setEmax_10", "_ZN2cv16TLSDataContainer7releaseEv", "_ZN2cv4UMat4onesEiii", "_ZN2cv9SparseMatC2ERKNS_3MatE", "own_ipps_sSin_U8LAynn", "_ZN2cv8SVDecompERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_i", "icv_l9_owniFilter32f_16u_C1R_g9e9_4", "_ZN2cv4readERKNS_8FileNodeERii", "Java_org_opencv_core_Core_add_12", "icv_y8_owniFilter_32f_C4R_v8u8_2", "icv_m7_ippsFlip_16u_I", "_ZNK2cv3ocl8Platform3ptrEv", "ippicviAddSquare_8u32f_C1IR", "_ZNK3tbb8internal3rml11tbb_factory21call_with_server_infoEPFvPvPKcES3_", "Java_org_opencv_features2d_DescriptorMatcher_match_12", "icv_m7_owniClipRectZeroTail_32f_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_getDist2Threshold_10", "icv_y8_ownFilterMaxRow13_8u_C3R", "icv_m7_ownsSub_16s_1Sfs", "icv_y8_ippiMirror_32f_C1IR", "icv_m7_ownsMulC_32f_I", "_ZN2cv6detail19AKAZEFeaturesFinderC1Eiiifiii", "icv_l9_BUFSIZE_FUNC", "icv_m7_ippsCopy_32f", "_ZNK2cv11_InputArray15getGpuMatVectorERSt6vectorINS_4cuda6GpuMatESaIS3_EE", "cvClipLine", "ippicviNorm_L2_32f_C1MR", "ippicviErodeBorder_32f_C4R", "own_ipps_dPowx_U8HAynn", "Java_org_opencv_core_Mat_n_1eye__DDI", "_ZN2cv4cuda14deviceSupportsENS0_10FeatureSetE", "ippicviAddProduct_16u32f_C1IR", "icv_m7_ownFilterMinRow01_32f_C3R", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKSt6vectorINS_8KeyPointESaIS6_EE", "icv_m7_ippiResizeCubic_16u_C4R", "_ZN2cv11seqPopFrontEP5CvSeqPv", "icv_m7_ippiTranspose_8u_C4R", "Java_org_opencv_calib3d_StereoSGBM_getMode_10", "_ZN3tbb4task12change_groupERNS_18task_group_contextE", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setMaxLevel_10", "icv_y8_cv_ownippiFilterMin_32f_Row", "icv_y8_owns_getSizeDct_Conv_32f", "icv_m7_ippiNormDiff_Inf_16u_C1R", "icv_l9_ownsGetSizeDftPrimeFact_64f_64f", "_ZN2cv15BriskScaleSpaceC2Ei", "icv_l9_ownResize4Cubic16u", "icv_m7_ownpi_NormL2Diff_16u_C4R", "_ZN2cv3hal8recip16uEPKtmS2_mPtmiiPv", "icv_y8_cv_ownippiFilterMax_16s_Col", "_ZNK2cv3ocl6Device22globalMemCacheLineSizeEv", "icv_l9_ippiFilterBorder_16u_C4R", "ippicviNormDiff_L2_8u_C1MR", "Java_org_opencv_videoio_VideoWriter_VideoWriter_12", "_ZN2cv4swapERNS_4UMatES1_", "_ZN2cv4cuda11resetDeviceEv", "_ZN3tbb18captured_exceptionD0Ev", "icv_l9_ownsAdd_8u_NegSfs", "icv_l9_ippiNorm_L1_16s_C1R", "icv_l9_owniCopy_8u_C4MR", "icv_y8_owns_sDctFwd_Conv_32f", "icv_m7_ippiSum_16s_C4R", "icv_l9_ippsSet_8u", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_X", "icv_y8_ownFilterMaxRow15_8u_C1R", "icv_l9_ownsMulC_16s_Bound", "Java_org_opencv_calib3d_Calib3d_findHomography_10", "Java_org_opencv_features2d_FeatureDetector_detect_12", "icv_l9_ippiNormDiff_L1_16u_C1R", "Java_org_opencv_imgproc_Imgproc_drawMarker_10", "icv_l9_owniFlipCopy_8u_C1", "Java_org_opencv_calib3d_Calib3d_filterSpeckles_10", "Java_org_opencv_core_Mat_n_1type", "ippicviXYZToRGB_32f_C3R", "icv_l9_ippiMirror_32f_C4IR", "icv_y8_ownippiFilterMinGetBufferSize_8u_C3R", "Java_org_opencv_ml_TrainData_setTrainTestSplit_10", "icv_y8_ippiTranspose_32f_C1IR", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarThresholdGen_10", "_ZN2cv3hal11cvtYUVtoBGREPKhmPhmiiiibb", "icv_l9_myRGBToHLS_8u_C3R", "icv_y8_myRGBToGray_32f_C3C1R", "icv_m7_ippiSet_32f_C3MR", "_ZN2cv8superres22createOptFlow_DualTVL1Ev", "icv_m7_ownFilterMinRow09_8u_C3R", "icv_l9_ownpi_NormL2_8u_C3R", "_ZN2cv6ScharrERKNS_11_InputArrayERKNS_12_OutputArrayEiiiddi", "icv_y8_ippiErodeBorder_8u_C1R", "_ZNK2cv17CommandLineParser11printErrorsEv", "ippicviThreshold_GTVal_32f_C1R", "icv_l9_ippiSwapChannels_8u_C4C3R", "icv_y8_cv_ownFilterMxMnCalcBuf", "icv_m7_ownscDFTfwd_6_32fc", "icv_m7_ownMinEllipse_8u_C1", "_ZN2cv17CascadeClassifier16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EERS4_IiSaIiEERS4_IdSaIdEEdiiNS_5Size_IiEESH_b", "icv_l9_ippiConvert_16s8u_C1R", "icv_y8_ownscDftFwd_Prime6_32fc", "_ZN2cv6detail18GraphCutSeamFinderD1Ev", "icv_m7_ippsFFTInv_PermToR_32f", "icv_y8_ippiNormDiff_L2_16s_C1R", "Java_org_opencv_objdetect_HOGDescriptor_checkDetectorSize_10", "icv_m7_ippiRectStdDev_32f_C1R", "icv_l9_ippsInvSqrt_64f_A50", "icv_y8_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_y8_ownCalcBorderR1Cubic16u", "own_ipps_dExp_E7LAynn", "_ZSt14__convert_to_vIdEvPKcRT_RSt12_Ios_IostateRKPi", "icv_m7_ippiSum_32f_C1R", "icv_y8_ippiThreshold_LTVal_16s_C1R", "icv_m7_ownMorphEllipseGetBufferSize", "icv_l9_ownResize4Linear16s", "icv_l9_hswRGBToGray_32f_AC4C1R", "icv_y8_ownsrDFTfwd_3_scale_64f", "_ZNK2cv3ocl6Device17imageMaxArraySizeEv", "icv_l9_ownFilterColumnPipeline_16s_C1R_3x3_H9L9cn", "icv_y8_ownpi_CmpLT_16s_C1R", "icv_y8_ownCalcBorderR1Linear32f", "icv_m7_ownsrDFTfwd_13_scale_64f", "icv_l9_cv_ownippiFilterMin_32f_Msk", "_ZN2cv20initWideAngleProjMapERKNS_11_InputArrayES2_NS_5Size_IiEEiiRKNS_12_OutputArrayES7_id", "_ZN2cv3ocl13ProgramSourceaSERKS1_", "icv_l9_owniCmpLess_16u_C1R", "_ZN2cv6detail18SurfFeaturesFinder4findERKNS_11_InputArrayERNS0_13ImageFeaturesE", "Java_org_opencv_videoio_VideoCapture_release_10", "icv_y8_ownFilterMinRow05_8u_C3R", "icv_m7_ippiSwapChannels_8u_C4C3R", "_ZN2cv9minMaxIdxERKNS_11_InputArrayEPdS3_PiS4_S2_", "_ZNK2cv4UMat7reshapeEii", "_ZN2cv8UMatDataD1Ev", "_ZN2cv8superres15SuperResolution5resetEv", "icv_l9_ownFilterMaxRow15_32f_C3R", "icv_l9_ownFilterColumnPipeline_16s_C1R_3x3", "icv_m7_ownFilterMinRowVH_8u_C4R", "icv_y8_ownscDftInv_Prime16_32fc", "ippicvsDotProd_64f", "icv_m7_ippsZero_64fc", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "own_ipps_sCos_L9LAynn", "ippicviRGBToXYZ_32f_C3R", "icv_m7_ippiThreshold_16s_C1R", "Java_org_opencv_ml_ANN_1MLP_getRpropDW0_10", "_ZN2cv21DetectionBasedTrackerD1Ev", "_ZN2cv7MomentsC2Ev", "_ZN2cv10solveCubicERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv8superres15SuperResolution8setInputERKNS_3PtrINS0_11FrameSourceEEE", "icv_m7_ippiMirror_32s_C1IR", "_ZNK2cv7HammingclEPKhS2_i", "_ZN2cv3ogl6Arrays14setVertexArrayERKNS_11_InputArrayE", "_ZN2cvdvEdRKNS_3MatE", "_ZSt18uncaught_exceptionv", "_ZN2cv7hconcatERKNS_11_InputArrayERKNS_12_OutputArrayE", "ippicviMean_8u_C1MR", "Java_org_opencv_imgproc_Imgproc_cvtColor_10", "icv_l9_ownRow1Linear32f", "icv_l9_ippiNormDiff_Inf_8u_C1R", "icv_y8_ownFilterMinRow03_8u_C1R", "icv_m7_ownscDftInv_Fact7_64fc", "Java_org_opencv_ml_DTrees_delete", "_ZN3tbb8internal22AvailableHwConcurrencyEv", "_ZNK2cv6detail14FeaturesFinder12isThreadSafeEv", "icv_m7_ippsFFTGetSize_R_32f", "icv_y8_ippiMorphologyBorderInit_32f_C1R", "Java_org_opencv_ml_ANN_1MLP_getBackpropWeightScale_10", "icv_m7_owns_cFFTinv_8_scale_64fc", "icv_m7_ownscDftInv_Fact13_64fc", "cvLine", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_11", "icv_y8_ownscDftFwd_Prime8_32fc", "icv_y8_ownsrDFTfwd_3_64f", "icv_y8_ippiCopyReplicateBorder_8u_C1R", "_ZN2cv3ogl6Arrays16setTexCoordArrayERKNS_11_InputArrayE", "icv_l9_owniFilter_32f_C1R_g9e9_5", "icv_l9_ippsMulC_32f_I", "icv_l9_ippiSwapChannels_32s_C3R", "icv_m7_ownFilterMinRow05_8u_C4R", "icv_l9_ownFilterRowBorderPipeline_32f_C3R_X_G9E9cn", "_ZN2cv6detail15GainCompensator4feedERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_4UMatESaIS9_EERKS2_ISt4pairIS9_hESaISF_EE", "ippicviSet_32f_C4MR", "icv_m7_owniFlipCopy_32s_C1", "own_ipps_dLn_L9EPnnn", "icv_m7_ownResize3Cubic16u", "icv_m7_ippiCompare_16s_C1R", "ippicviAlphaPremul_8u_AC4R", "icv_y8_owns_cFFTinv_16_scale_64fc", "icv_y8_ownpi_NormInfDiff_8u_C1R", "icv_y8_ownsrDFTfwd_9_scale_32f", "Java_org_opencv_core_Mat_n_1Mat__III", "icv_m7_ownscDFTinv_6_32fc", "icv_m7_ownRow4Linear64f", "icv_y8_owniFlip_16u_C1", "_ZN2cv17CommandLineParser5aboutERKNS_6StringE", "icv_m7_ippiNormDiff_L1_32f_C1MR", "icv_m7_owns_cFFTinv_16_scale_64fc", "icv_m7_ownFilterMaxRowVH_8u_C3R", "icv_m7_ippiNormDiff_L2_16u_C4R", "ippicviFilterBorder_16s_C1R", "Java_org_opencv_video_KalmanFilter_set_1statePost_10", "icv_m7_ownFilterMaxRow05_8u_C4R", "icv_l9_ippiXYZToRGB_8u_C3R", "icv_m7_ippiFilterGaussianBorder_8u_C3R", "own_ipps_dPowx_E7EPnnn", "icv_y8_owniTranspose16u_C4R_core2", "icv_y8_owns_cFFTfwd_32_scale_64fc", "icv_m7_ownsrDFTfwd_7_32f", "icv_l9_ownNorm_L1_32f_C1MR_HSW", "_ZN2cv3ocl11haveAmdBlasEv", "icv_l9_ownFilterMaxRowVH_8u_C4R", "ippicviThreshold_LTVal_16s_C1R", "icv_y8_ownFilterMinColumn03_32f_C1R", "icv_m7_ownpi_NormInf_16s_C4R", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_16s_C3R", "Java_org_opencv_core_Core_copyMakeBorder_11", "_ZN2cv3ocl13ProgramSourceD2Ev", "Java_org_opencv_imgproc_Imgproc_HoughLinesP_11", "icv_l9_ownResize4Linear64f", "icv_y8_ownFilterMinRow03_32f_C4R", "_ZN3tbb8internal17generic_scheduler14free_schedulerEv", "_ZN3tbb8internal17generic_scheduler18nested_arena_entryEPNS0_5arenaEmRNS0_20nested_arena_contextEb", "_ZN2cv8UMatDataC2EPKNS_12MatAllocatorE", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_X", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3_W7cn", "icv_m7_owns_rFFTfwd_32_64f", "icv_l9_ownFilterMaxRowVH_32f_C4R", "icv_y8_ownFilterRowBorderPipeline_32f_C3R", "icv_l9_owniSwapChannels_32u_C3C4R", "icv_l9_ownFilterMaxRow03_32f_C3R", "icv_l9_ownResize3Linear16u", "icv_m7_ippiSum_8u_C3R", "icv_m7_ippiSum_32f_C4R", "icv_y8_ippsSortRadixGetBufferSize", "_ZN2cv15KeyPointsFilter15runByPixelsMaskERSt6vectorINS_8KeyPointESaIS2_EERKNS_3MatE", "_ZN2cvmiERKNS_3MatERKNS_7MatExprE", "icv_m7_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_m7_ippiCopy_8u_AC4C3R", "ippicvsMaxEvery_8u", "ippicviErodeBorder_8u_C4R", "icv_m7_ippiFilterBorder_32f_C4R", "icv_y8_owns_sDctFwd_PostMul_32f", "icv_y8_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_W7cn", "_ZNK2cv4cuda10DeviceInfo9clockRateEv", "icv_m7_ippiCopyConstBorder_16s_C4R", "icv_l9_ippiCopyConstBorder_16u_C4R", "icv_y8_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "_ZN2cv3ocl12PlatformInfoC1Ev", "icv_y8_owns_rFFTinv_16_scale_64f", "icv_y8_ippiMean_StdDev_16u_C1MR", "icv_y8_ippiResizeLinear_64f_C1R", "icv_l9_owniFilter32f_16s_C3R_g9e9_2", "_ZN2cv3hal8merge32sEPPKiPiii", "icv_y8_ippsDFTFwd_CToC_32fc", "Java_org_opencv_calib3d_StereoBM_create_10", "Java_org_opencv_calib3d_Calib3d_calibrateCamera_11", "icv_m7_ippsFlip_8u_I", "Java_org_opencv_imgproc_Imgproc_dilate_11", "icv_l9_innerRGBToXYZ_32f_C3R", "Java_org_opencv_calib3d_Calib3d_stereoRectifyUncalibrated_11", "icv_l9_owniConvert_8u8s_ccode", "icv_y8_ippiMirror_16s_C1R", "_ZN2cv3ogl9Texture2D14setAutoReleaseEb", "icv_y8_ownscDFTfwd_6_scale_64fc", "own_ipps_sInvSqrt_E7LAynn", "icv_m7_ownFilterBorder16s_8u_C4R", "icv_l9_ippsZero_16s", "Java_org_opencv_core_Core_PCACompute_12", "icv_m7_ownscDFTfwd_5_scale_32fc", "icv_m7_ownsFFTGetBufSize_C_64fc", "icv_l9_ownscDFTfwd_14_scale_32fc", "icv_m7_ippiConvert_32f8u_C1RSfs", "icv_l9_ownscDftInv_PrimeFact_64fc", "icv_y8_ippiConvert_8s16u_C1Rs", "icv_m7_ownFilterMinRow06_8u_C4R", "Java_org_opencv_imgproc_Imgproc_ellipse_12", "_ZN2cv7inRangeERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayE", "icv_y8_ownscDftInv_PrimeFact_32fc", "_ZN2cv3hal7gemm64fEPKdmS2_mdS2_mdPdmiiii", "_ZNK2cv2ml6KDTree8getPointEiPi", "icv_l9_ownFilterMaxRow06_8u_C3R", "_ZN2cv6detail12DpSeamFinder16resolveConflictsERKNS_3MatES4_NS_6Point_IiEES6_RS2_S7_", "icv_y8_ownscDFTfwd_13_64fc", "cvStereoRectify", "_ZNK2cv3PCA5writeERNS_11FileStorageE", "_ZN2cv8KeyPoint7convertERKSt6vectorINS_6Point_IfEESaIS3_EERS1_IS0_SaIS0_EEffii", "icv_y8_ownippiMorphologyBorderReplicateInMemInit_32f_C1R", "icv_l9_owniFilter32f_16u_C4R_g9e9_6", "ippicviMorphologyBorderGetSize_8u_C1R", "_ZN3rml8internal14thread_monitor13detach_threadEl", "icv_m7_ippiMean_StdDev_32f_C3CMR", "icv_l9_ippiFFTGetSize_R_32f", "_ZNK2cv3ogl6Buffer6copyToERKNS_12_OutputArrayE", "_ZN2cv10BOWTrainerD0Ev", "_ZN2cv14DownhillSolver6createERKNS_3PtrINS_16MinProblemSolver8FunctionEEERKNS_11_InputArrayENS_12TermCriteriaE", "_ZN2cv15getNearestPointERKSt6vectorINS_6Point_IfEESaIS2_EEf", "icv_l9_ownsrDftInv_Conv_32f", "icv_y8_owniFilter_32f_C3R_v8u8_6NA", "_ZN2cv8internal15IntrinsicParamsC2ENS_3VecIdLi2EEES3_NS2_IdLi4EEEd", "icv_l9_ippiFilterBorder_32f_C1R", "ippicviConvert_8s32f_C1R", "Java_org_opencv_calib3d_Calib3d_estimateNewCameraMatrixForUndistortRectify_10", "icv_m7_ippsSet_8u", "icv_l9_ippiMorphologyBorderGetSize_32f_C1R", "_ZN2cv3hal23cvtRGBAtoMultipliedRGBAEPKhmPhmii", "icv_m7_ownFilterRowBorderPipeline_16u_C1R_3x3", "icv_m7_ownpi_CmpLE_8u_C1R", "icv_y8_ippiFilterBorder_32f_C3R", "icv_y8_owniFilter_32f_C3R_v8u8_7NA", "icv_m7_ippsMul_32fc_I", "icv_m7_ownRow3Cubic16s", "Java_org_opencv_objdetect_HOGDescriptor_getDefaultPeopleDetector_10", "icv_l9_ippiDCTFwdGetSize_32f", "icv_y8_ippiCopyConstBorder_16s_C3R", "icv_y8_ownFilterColumnPipeline_16s_C1R_5x5_W7cn", "Java_org_opencv_photo_Photo_illuminationChange_11", "ippicviMirror_16u_C1R", "_ZN3tbb8internal3rml14private_serverC1ERNS1_10tbb_clientE", "icv_l9_ownscDftFwd_Fact13_32fc", "_ZN2cv5SobelERKNS_11_InputArrayERKNS_12_OutputArrayEiiiiddi", "_ZN2cv3ocl7Image2DC1Ev", "_ZN2cv6detail20BundleAdjusterReproj12calcJacobianERNS_3MatE", "cvInitSystem", "_ZN2cv10haveOpenVXEv", "icv_y8_ippiCompare_8u_C1R", "icv_m7_ippiDilateBorder_32f_C1R", "icv_y8_ippsMul_32fc", "icv_m7_ippiCopyConstBorder_32f_C1R", "icv_l9_ippiConvert_8s32f_C1R", "cvDCT", "cvSeqElemIdx", "icv_m7_owns_rFFT_2_scale_64f", "_ZN2cv7directx3ocl36initializeContextFromDirect3DDevice9EP16IDirect3DDevice9", "Java_org_opencv_core_Mat_n_1diag__J", "icv_m7_ownpi_NormL2Diff_16s_C4R", "Java_org_opencv_features2d_FeatureDetector_delete", "icv_m7_ownFilterMinRow02_8u_C4R", "icv_m7_ippsFlip_64f_I", "Java_org_opencv_features2d_ORB_setPatchSize_10", "icv_l9_ippsFFTInv_CToC_64fc", "Java_org_opencv_imgproc_Imgproc_integral3_10", "cvLUT", "icv_y8_ownsrDFTfwd_11_scale_64f", "_ZN2cv6detail15SphericalWarper15detectResultRoiENS_5Size_IiEERNS_6Point_IiEES6_", "icv_y8_owniFlipCopy_8u_C1", "icv_m7_ownFilterMinRow04_8u_C3R", "icv_l9_ippiMirror_16s_C4IR", "icv_l9_ownippiFilterMinBorderReplicate_8u_C4R", "ippicviFilterLaplacianBorder_8u16s_C1R", "icv_y8_ownResize3Linear16s", "_ZNK2cv9SparseMat9convertToERS0_id", "Java_org_opencv_calib3d_Calib3d_filterSpeckles_11", "Java_org_opencv_calib3d_Calib3d_convertPointsFromHomogeneous_10", "cvMulSpectrums", "icv_y8_ownsAddC_32f", "cvEstimateRigidTransform", "icv_m7_owniRCPack2DConj_32f_C1IR", "icv_y8_ippsMagnitude_32f", "ippicviNorm_L1_16u_C1MR", "icv_y8_owniGetRectBottom_32f", "cvGEMM", "cvStartWriteSeq", "icv_y8_ownFilterMaxRow13_32f_C3R", "cvGetHuMoments", "icv_m7_ownFilterBorder16s_8u_C3R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_W7cn", "icv_y8_ippiSum_16u_C3R", "Java_org_opencv_ml_DTrees_getTruncatePrunedTree_10", "icv_y8_owniCopy_16s_P3C3R", "Java_org_opencv_imgproc_Imgproc_Canny_11", "_ZNK2cv4cuda7HostMem7reshapeEii", "icv_m7_ippiMean_16s_C3R", "icv_y8_ippiFilterMaxBorder_8u_C4R", "icv_m7_ownResize1Cubic16s", "icv_m7_ownpi_NormInfRel_16u_C1R", "icv_y8_owniGetRectLeft_32f", "_ZNK2cv3Mat7reshapeEii", "icv_m7_ownps_Sub_16u_Sfs", "icv_y8_ippiFilterBorder_32f_C1R", "icv_y8_ownsSet_64s", "icv_y8_ownsMul_8u_1Sfs", "_ZN2cv12useOptimizedEv", "_ZN2cv4cuda6Stream17waitForCompletionEv", "icv_y8_ownscDftFwd_Fact7_32fc", "cvSort", "Java_org_opencv_core_Core_norm_10", "Java_org_opencv_videoio_VideoWriter_get_10", "_ZN2cvplERKNS_7Scalar_IdEERKNS_7MatExprE", "icv_l9_ippiSqrt_32f_C1R", "icv_l9_ownsMulC_16s_I", "icv_l9_ownFilterMaxRow13_8u_C4R", "icv_m7_ippiDCT8x8Fwd_32f_C1", "Java_org_opencv_ml_SVM_getType_10", "icv_l9_ownippiMorphologyBorderReplicateInMemInit_8u_C3R", "icv_m7_ownsrDFTinv_6_32f", "icv_y8_ippsFFTGetSize_C_32fc", "icv_y8_ownscDftFwd_Prime11_64fc", "icv_l9_ippiSet_16u_C4MR", "icv_y8_innerRGBToGray_32f_C3C1R", "icv_l9_ippiMean_8u_C3CMR", "Java_org_opencv_core_Mat_locateROI_10", "_ZN2cv7decolorERKNS_11_InputArrayERKNS_12_OutputArrayES5_", "icv_y8_ippiNorm_L2_32f_C3R", "icv_y8_ippiMul_16s_C1RSfs", "icv_y8_ownippiMorphologyBorderReplicateInMemGetSize_8u_C3R", "_ZN2cv9polylinesERNS_3MatEPKPKNS_6Point_IiEEPKiibRKNS_7Scalar_IdEEiii", "Java_org_opencv_ml_StatModel_train_12", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkD2Ev", "Java_org_opencv_features2d_MSER_getPass2Only_10", "icv_m7_ippiNorm_L1_32f_C1MR", "icv_m7_ippiResizeGetSize_16u", "icv_y8_ippiAddProduct_32f_C1IR", "_ZN3tbb8internal6market13adjust_demandERNS0_5arenaEi", "icv_l9_ownsGetSizeTabDftBase_32f", "icv_m7_ownFilterMaxRow01_32f_C4R", "icv_y8_owns_rFFTfwd_32_64f", "icv_m7_owns_sDctFwd_Dir_32f", "icv_y8_ippiSqrt_32f_C1R", "_ZN2cvngERKNS_7MatExprE", "icv_y8_ownFilterMinRow11_8u_C3R", "Java_org_opencv_ml_RTrees_setActiveVarCount_10", "_ZN2cv7fisheye14undistortImageERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_S3_RKNS_5Size_IiEE", "icv_y8_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_m7_ownFilterMinRow03_8u_C1R", "ippicviSwapChannels_8u_C3C4R", "Java_org_opencv_photo_Photo_seamlessClone_10", "icv_y8_ippiTranspose_16u_C1R", "Java_org_opencv_ml_SVMSGD_getShift_10", "_ZN2cv25BOWImgDescriptorExtractorC1ERKNS_3PtrINS_9Feature2DEEERKNS1_INS_17DescriptorMatcherEEE", "cvSeqPopFront", "icv_y8_ippiCopyReplicateBorder_8u_C3R", "icv_m7_ownscDFTfwd_10_64fc", "icv_y8_ownscDFTfwd_5_32fc", "_ZN2cv8imencodeERKNS_6StringERKNS_11_InputArrayERSt6vectorIhSaIhEERKS6_IiSaIiEE", "icv_y8_ownscDFTfwd_12_64fc", "_ZNK2cv16MinProblemSolver8Function14getGradientEpsEv", "icv_y8_owniFilter_32f_C1R_v8u8_6", "icv_m7_ippiMirror_32s_C4IR", "icv_y8_ownsrDFTinv_15_scale_32f", "icv_l9_ippiMulC_32f_C1R", "icv_y8_ippiCopyReplicateBorder_32s_C3IR", "icv_m7_ownpi_CmpEQ_32f_C1R", "icv_y8_ownsMulC_16s_I", "icv_l9_ownsrDFTinv_7_32f", "ippicviResizeLinearInit_16u", "icv_l9_ippiCanny_16s8u_C1R", "_ZN2cv3ocl7Program4readERKNS_6StringES4_", "icv_m7_ippiTranspose_32f_C1IR", "icv_m7_ippiFilterMinBorder_8u_C1R", "_ZN2cv11RNG_MT19937clEj", "_ZNK2cv4cuda6GpuMat9locateROIERNS_5Size_IiEERNS_6Point_IiEE", "Java_org_opencv_ml_SVMSGD_getTermCriteria_10", "Java_org_opencv_android_Utils_nBitmapToMat", "icv_l9_ownBuildFilter_32f", "_ZN2cv20FarnebackOpticalFlow6createEidbiiidi", "icv_l9_ownippiErodeBorder_32f_C1R", "_ZN2cv3hal12magnitude64fEPKdS2_Pdi", "icv_y8_ownsrDFTfwd_12_32f", "ippicviMean_8u_C3R", "icv_y8_ippiResizeLinear_32f_C3R", "icv_y8_ippiAdd_32f_C1IMR", "icv_l9_ownCalcBorderR1Cubic16u", "_ZN2cv3hal6exp32fEPKfPfi", "cvUndistort2", "_ZN2cv5flann11IndexParams12setAlgorithmEi", "icv_m7_ippiColorToGray_32f_AC4C1R", "_ZN2cv15calcCovarMatrixEPKNS_3MatEiRS0_S3_ii", "icv_l9_ippsCopy_16s", "icv_l9_ippiTranspose_32f_C1R", "icv_l9_ippiNorm_L2_16u_C3R", "Java_org_opencv_calib3d_StereoBM_getPreFilterCap_10", "Java_org_opencv_imgproc_Imgproc_getRectSubPix_11", "icv_m7_ippiNorm_L1_8u_C1R", "_ZN3tbb8internal6market13arena_in_needERNS0_14intrusive_listINS0_5arenaEEERPS3_", "Java_org_opencv_ml_DTrees_getCVFolds_10", "_ZN2cv15NAryMatIteratorC1EPPKNS_3MatEPPhi", "Java_org_opencv_imgproc_Imgproc_HoughLinesP_10", "_ZN2cv11FileStorageD0Ev", "Java_org_opencv_imgproc_Imgproc_getGaborKernel_11", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarInit_10", "icv_l9_ownFilterMaxRow05_32f_C4R", "icv_m7_ownscDFTfwd_9_scale_64fc", "icv_l9_IPP_Dilate_C3_8u", "cvGetOptimalDFTSize", "Java_org_opencv_video_BackgroundSubtractorKNN_getNSamples_10", "ippicviResizeCubic_16u_C4R", "cvSeqPop", "icv_l9_ownsAdd_16s", "_ZN2cv3ogl3ocl23initializeContextFromGLEv", "icv_m7_ownFilterMaxRow13_32f_C3R", "Java_org_opencv_core_Core_Mahalanobis_10", "ippicviFilterSobelVertSecondBorderGetBufferSize", "icv_y8_ippsSqrt_64f_A50", "icv_l9_ippiCopyConstBorder_32s_C3R", "icv_l9_ownscDFTfwd_9_scale_64fc", "_ZNK2cv3ocl6Device22nativeVectorWidthShortEv", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkD0Ev", "Java_org_opencv_ml_TrainData_getNormCatResponses_10", "icv_y8_getMaskFeature", "icv_m7_ownColLinear16u", "_ZN2cveoERKNS_3MatES2_", "_ZN2cv3hal6sub64fEPKdmS2_mPdmiiPv", "_ZN3tbb8internal8governor14init_schedulerEimb", "icv_m7_ownpi_NormL2_32f_C4R", "icv_l9_ippiNormDiff_L2_8u_C1MR", "icv_l9_owns_sDctFwd_Fft_32f", "icv_l9_owns_rFFTfwd_16_scale_64f", "icv_y8_ipMirror135_32uC1R", "icv_m7_owns_rFFTinv_8_64f", "icv_y8_ippsFFTInv_CToC_32fc", "icv_y8_ippiNormDiff_Inf_8u_C1MR", "cvAndS", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringEi", "icv_m7_ippiNormRel_Inf_8u_C1MR", "_ZN2cv9videostab23MotionEstimatorRansacL2C2ENS0_11MotionModelE", "icv_l9_ownRow3Linear64f", "ippicviConvert_16s8u_C1R", "Java_org_opencv_video_Video_createBackgroundSubtractorKNN_10", "_ZNK2cv5MatOp17augAssignMultiplyERKNS_7MatExprERNS_3MatE", "icv_y8_ippiCopyConstBorder_32f_C4R", "Java_org_opencv_imgproc_Imgproc_fitEllipse_10", "icv_l9_ippiFilterGaussianGetBufferSize", "_ZN3tbb8internal8NFS_FreeEPv", "icv_m7_ownpi_NormL1Diff_16u_C3R", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3", "icv_y8_ippiAddProduct_16u32f_C1IMR", "icv_m7_ippiMean_StdDev_8u_C3CMR", "icv_y8_ippsConvert_32f8u_Sfs", "_ZN2cv5flann11IndexParamsC1Ev", "icv_y8_ownFilterMaxRow11_8u_C4R", "icv_m7_ownFilterMinRow05_32f_C1R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork30communicateWithDetectingThreadERKNS_3MatERSt6vectorINS_5Rect_IiEESaIS7_EE", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3", "icv_m7_owns_getSizeTwd_Large_64f", "_ZN2cv8calcHistEPKNS_3MatEiPKiRKNS_11_InputArrayERNS_9SparseMatEiS4_PPKfbb", "ippicviNormDiff_L1_16u_C3R", "icv_l9_ownFilterColumnPipeline_16s_C1R_X", "_ZN2cv5flann17KDTreeIndexParamsC2Ei", "icv_l9_owniFilter32f_8u_C4R_g9e9_8", "_ZN2cv9videostab17OnePassStabilizerC2Ev", "ippicviNorm_L1_16s_C3R", "icv_l9_ippsInvSqrt_32f_A21", "_ZN2cv3ogl13unmapGLBufferERNS_4UMatE", "icv_m7_owns_cFFTinv_4_32fc", "cvErrorStr", "_ZN2cv5flann5Index7releaseEv", "icv_m7_ippiFilterBorderInit_16s", "icv_m7_ownsrDFTfwd_10_scale_64f", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_3x3", "_ZN2cv3ogl6Buffer9mapDeviceERNS_4cuda6StreamE", "cvLoadImageM", "icv_y8_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "_ZN2cv9ExceptionD0Ev", "ippicviThreshold_GT_8u_C1R", "ippicviMean_StdDev_32f_C3CR", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_12", "icv_l9_ownNormDiff_Inf_32f_C1MR_HSW", "icv_l9_ippiCopy_32f_C4R", "icv_m7_ownFilterBorder32f_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_16s_C3R_X_H9L9cn", "icv_m7_ippiMorphologyBorderGetSize_8u_C4R", "ippicvSetCpuFeaturesMask", "_ZNK2cv4cuda10DeviceInfo24kernelExecTimeoutEnabledEv", "ippicviAdd_8u_C1RSfs", "icv_y8_ippiCopyReplicateBorder_8u_C1IR", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_5x5", "ippicviMul_16u_C1RSfs", "icv_y8_ippiThreshold_GT_16s_C1R", "icv_m7_ippiCopy_32f_C4R", "icv_m7_cv_ownFilterStubw", "ippicviResizeLinear_64f_C4R", "icv_y8_ownsMul_16s_1Sfs", "icv_y8_ippiFFTInv_PackToR_32f_C1R", "icv_l9_ownFilterMaxRow02_32f_C4R", "icv_y8_ownResize4Linear16u", "icv_m7_ippiConvert_8u16s_C1R", "_ZSt14__convert_to_vIfEvPKcRT_RSt12_Ios_IostateRKPi", "Java_org_opencv_videoio_VideoCapture_open_12", "ippicviResizeGetSize_32f", "icv_y8_owniFilterSobelHorizSecondBorder2_8u16s_C1R", "icv_y8_ownColLinear16s", "_ZN2cv9boxPointsENS_11RotatedRectERKNS_12_OutputArrayE", "icv_l9_ownpi_NormL1_8u_C1R", "icv_y8_ippsFFTInit_C_64fc", "Java_org_opencv_features2d_Feature2D_descriptorSize_10", "icv_m7_ippiAddWeighted_8u32f_C1IR", "Java_org_opencv_video_BackgroundSubtractorKNN_setkNNSamples_10", "_ZNK2cv4cuda10DeviceInfo18maxTexture2DGatherEv", "icv_m7_ippsMinEvery_32f", "icv_y8_ownsrDFTinv_6_64f", "ippicvsDFTFwd_RToPack_32f", "_ZN2cv12getTickCountEv", "icv_l9_ippiMul_16u_C1RSfs", "Java_org_opencv_imgproc_Imgproc_boxPoints_10", "_ZNK3tbb18task_group_context28is_group_execution_cancelledEv", "icv_l9_ownippiMorphologyBorderReplicateInMemInit_32f_C1R", "icv_l9_ippiFilterLowpassBorder_32f_C1R", "icv_y8_owniConvert_32f32s_ccode", "icv_l9_ippiMean_32f_C3CMR", "icv_m7_ownsrDFTfwd_9_64f", "_ZN3tbb8internal17generic_scheduler15leave_task_poolEv", "icv_y8_ippsPolarToCart_64f", "Java_org_opencv_imgproc_Imgproc_accumulateSquare_11", "icv_m7_ownscDFTinv_7_64fc", "own_ipps_dSqrt_E7LAynn", "icv_m7_ownippiFilterMaxBorderReplicate_8u_C1R", "own_ipps_sPowx_L9EPnnn", "_ZN2cv8Subdiv2D19getVoronoiFacetListERKSt6vectorIiSaIiEERS1_IS1_INS_6Point_IfEESaIS7_EESaIS9_EERS9_", "_ZN2cv5flann33HierarchicalClusteringIndexParamsC2EiN7cvflann20flann_centers_init_tEii", "icv_y8_ownscDftFwd_Fact7_64fc", "icv_y8_ownsGetSizeTabDftBase_64f", "icv_y8_ownNormRel_Inf_16u_C1MR_P8Y8", "Java_org_opencv_photo_TonemapDurand_getSigmaColor_10", "_ZN2cv11VideoWriter7releaseEv", "icv_l9_ownFilterMinRow05_32f_C1R", "_ZN2cv3ogl6BufferC2Eiiijb", "_ZN2cv9composeRTERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_S5_S5_S5_S5_S5_S5_S5_S5_", "_ZN2cvgtEdRKNS_3MatE", "icv_m7_ippiCopyConstBorder_32f_C3R", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_12", "_ZN2cv9SparseMat3ptrEiibPm", "ippicviNormDiff_L1_16u_C3CMR", "icv_l9_ownFilterMaxRow01_32f_C4R", "_ZNK2cv2ml9TrainData17getVarSymbolFlagsEv", "icv_y8_ippiNormDiff_L1_8u_C3CMR", "_ZN2cv3LDAC1Ei", "cvCloneSparseMat", "icv_y8_ippiFFTGetSize_R_32f", "icv_l9_owns_rFFT_2_scale_64f", "_ZN2cv3ocl6KernelC1ERKS1_", "icv_m7_owns_cFFTfwd_16_32fc", "icv_l9_owniFilter_32f_C4R_g9e9_4", "_ZN2cv6detail18GraphCutSeamFinderD2Ev", "_ZN2cv3hal5LU32fEPfmiS1_mi", "_ZN2cv4idftERKNS_11_InputArrayERKNS_12_OutputArrayEii", "_ZN3tbb8internal6market14create_one_jobEv", "Java_org_opencv_photo_Photo_textureFlattening_11", "icv_m7_ippiCopyConstBorder_32f_C4R", "_ZNK2cv4cuda10DeviceInfo12maxTexture1DEv", "_ZN2cv10warpAffineERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_5Size_IiEEiiRKNS_7Scalar_IdEE", "icv_l9_ownFilterMaxRow05_8u_C1R", "Java_org_opencv_imgproc_CLAHE_collectGarbage_10", "_ZN2cv18minEnclosingCircleERKNS_11_InputArrayERNS_6Point_IfEERf", "_ZN2cv3ocl7ProgramC2ERKS1_", "icv_l9_ownFilterMaxColumn01_32f_C1R", "icv_l9_ownpi_NormL1Diff_16u_C4R", "_ZN2cv16FileNodeIteratorppEi", "_ZNK2cv3Mat6copyToERKNS_12_OutputArrayE", "Java_org_opencv_ml_TrainData_getNSamples_10", "icv_m7_ippiMean_StdDev_16u_C1MR", "_ZN2cv22SimpleBlobDetectorImplC2ERKNS_18SimpleBlobDetector6ParamsE", "Java_org_opencv_imgproc_Imgproc_warpPerspective_11", "_ZN2cv11VideoWriter3setEid", "icv_l9_ownFilterMaxRow07_32f_C3R", "_ZN2cv17DescriptorMatcher3addERKNS_11_InputArrayE", "icv_m7_ownpiLUTPalette_8u_C3R", "Java_org_opencv_features2d_Feature2D_detect_12", "_ZNK2cv9Exception4whatEv", "ippicviFilterSobelHorizSecondBorder_32f_C1R", "icv_y8_ownsrDFTfwd_10_64f", "_ZN2cv8filter2DERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_NS_6Point_IiEEdi", "_ZN2cv8Subdiv2D9swapEdgesEi", "Java_org_opencv_ml_Boost_delete", "cvCreateCameraCapture", "_ZN3tbb8internal23allocate_via_handler_v3Em", "icv_y8_ownFilterBorder32f_16u_C3R", "_ZN2cv35createShapeContextDistanceExtractorEiiffiRKNS_3PtrINS_22HistogramCostExtractorEEERKNS0_INS_16ShapeTransformerEEE", "ippicviAddC_16s_C1IRSfs", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarThreshold_10", "_ZN2cv15calcBackProjectEPKNS_3MatEiPKiRKNS_11_InputArrayERKNS_12_OutputArrayEPPKfdb", "_ZN2cv4cuda7HostMem6createEiii", "icv_m7_ownscDFTfwd_7_32fc", "icv_y8_ownpi_NormL2Diff_32f_C3R", "_ZN2cvltEdRKNS_3MatE", "icv_m7_ownFilterMaxRow11_32f_C1R", "_ZN7CvMatNDC2ERKN2cv3MatE", "icv_y8_ownRow4Cubic16s", "_ZN2cv16TLSDataContainerD2Ev", "icv_l9_ippiFilterScharrHorizMaskBorder_32f_C1R", "ippicvsDFTFwd_CToC_64fc", "icv_m7_owns_rFFTinv_4_scale_32f", "icv_l9_ownpi_NormL2Rel_32f_C1R", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERNS0_13ImageFeaturesERKSt6vectorINS_5Rect_IiEESaIS9_EE", "_ZN2cv16FileNodeIteratorC2ERKS0_", "icv_y8_ownFilterBorder32f_8u_C3R", "icv_m7_owns_initTabBitRevLarge", "icv_y8_ownErodeEllipseBorderReplicate_8u_C1R", "cvSVBkSb", "icv_l9_ownResize3Linear32f", "_ZNK2cv3ocl6Device4typeEv", "icv_m7_ownFilterColumnPipeline_16s8u_C1R_5x5_W7cn", "icv_m7_ippiTranspose_32s_C4IR", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_16s_C1R", "_ZNK2cv14DefaultDeleterI9CvCaptureEclEPS1_", "ippicviNormDiff_Inf_16u_C3CMR", "_ZNK3tbb8internal27allocate_continuation_proxy4freeERNS_4taskE", "icv_l9_ownsrDFTinv_13_64f", "_ZN2cv11writeScalarERNS_11FileStorageEd", "icv_l9_ownscDFTfwd_3_scale_64fc", "cvReleaseSparseMat", "cvRandShuffle", "ippicviMean_16u_C3R", "Java_org_opencv_calib3d_Calib3d_RQDecomp3x3_11", "ippicviCopy_8u_AC4C3R", "icv_l9_ownippiFilterMedianHoriz_16s_C1R_3x1", "icv_m7_owns_cCcsRecombine_64f", "icv_m7_ippsConvert_8s16s", "icv_m7_ownFilterMaxRow06_32f_C1R", "icv_m7_ippiDilateBorder_32f_C4R", "icv_y8_ownscDftInv_Fact11_64fc", "ippicviNorm_L2_8u_C3R", "_ZN2cv14getTrackbarPosERKNS_6StringES2_", "Java_org_opencv_ml_ANN_1MLP_getLayerSizes_10", "icv_l9_cv_ownippiFilterMax_16u_Row", "icv_m7_ippiTranspose_8u_C4IR", "_ZN2cv9floodFillERKNS_17_InputOutputArrayENS_6Point_IiEENS_7Scalar_IdEEPNS_5Rect_IiEES6_S6_i", "_ZN2cv9videostab18LpMotionStabilizerC2ENS0_11MotionModelE", "own_ipps_sCos_U8LAynn", "_ZN2cv6detail15SphericalWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "Java_org_opencv_features2d_BOWTrainer_clear_10", "_ZN2cv32createFaceDetectionMaskGeneratorEv", "_ZN3tbb8internal5arenaC2ERNS0_6marketEjj", "ippicviNormDiff_L1_32f_C1R", "icv_m7_ownFilterRowBorderPipeline_16s_C3R", "icv_y8_ippiNormDiff_L2_16u_C1R", "icv_y8_owns_initTabTwdRealRec_64f", "icv_m7_owniGetRectTop_32f", "ippicvsSortDescend_8u_I", "_ZN2cv3hal8recip32fEPKfmS2_mPfmiiPv", "icv_y8_ippiDFTFwd_CToC_32fc_C1R", "icv_y8_ownscDFTinv_3_scale_32fc", "icv_m7_ippiNormDiff_L2_8u_C1R", "icv_y8_ownFilterColumnPipeline_16u_C1R_X_P8Y8cn", "icv_y8_owniFilter_32f_C3R_v8u8_5", "icv_y8_ippsConvert_32f32s_Sfs", "_ZN2cv17agast_cornerScoreILi3EEEiPKhPKii", "icv_l9_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_l9_IPP_Dilate_C4_8u", "_ZN2cv7ellipseERKNS_17_InputOutputArrayENS_6Point_IiEENS_5Size_IiEEdddRKNS_7Scalar_IdEEiii", "_ZN2cv3hal6sub32fEPKfmS2_mPfmiiPv", "_ZN2cv3LDAC2ERKNS_11_InputArrayES3_i", "Java_org_opencv_video_BackgroundSubtractor_apply_11", "Java_org_opencv_calib3d_Calib3d_solvePnPRansac_11", "icv_l9_ippiMean_StdDev_16u_C3CMR", "icv_l9_ownColCubic32f", "icv_l9_owniFilter32f_16s_C4R_g9e9_2", "_ZN2cv8fillPolyERNS_3MatEPPKNS_6Point_IiEEPKiiRKNS_7Scalar_IdEEiiS3_", "icv_m7_ippiResizeCubicInit_16u", "_ZN2cv5instr8getFlagsEv", "icv_y8_ownpi_CmpEQ_32f_C1R", "_ZN2cv6detail12DpSeamFinder11getSeamTipsEiiRNS_6Point_IiEES4_", "_ZN2cv11FileStorage8writeRawERKNS_6StringEPKhm", "icv_l9_ownsrDFTinv_9_scale_64f", "icv_m7_ownsrDFTinv_10_64f", "_ZN2cv2ml6DTrees5SplitC1Ev", "ippicviDistanceTransform_3x3_8u_C1R", "icv_l9_ownsAddC_16s_I_PosSfs", "ippicvsMagnitude_64f", "icv_l9_ownFilterMinRow03_32f_C4R", "icv_y8_ownDilate_32f_C4S", "icv_m7_ownippiFilterMinGetBufferSize_16u_C1R", "icv_l9_owniTransposeWxH_8uC1", "_ZNK2cv9Feature2D5writeERNS_11FileStorageE", "icv_l9_ownpi_NormL1Diff_8u_C3R", "cvSetHistBinRanges", "icv_y8_ippiMorphologyBorderGetSize_8u_C4R", "cvGet1D", "ippicviMean_32f_C1MR", "icv_l9_ippiMorphologyBorderInit_8u_C4R", "icv_l9_ownsInitTabDftBase_32f", "Java_org_opencv_imgproc_Imgproc_morphologyEx_11", "icv_m7_ownFilterBorder32f_16u_C4R", "ippicviDCTInvGetSize_32f", "icv_l9_ownpi_NormInfRel_8u_C1R", "icv_l9_owniFilter32f_8u_C3R_g9e9_8", "_ZNK2cv9Algorithm4saveERKNS_6StringE", "_ZN3tbb8internal14observer_proxyC1ERNS0_26task_scheduler_observer_v3E", "_ZN2cv17borderInterpolateEiii", "icv_l9_cv_ownippiFilterMax_32f_Col", "icv_l9_owns_rFFTfwd_16_64f", "_ZN2cv3hal5sub8sEPKamS2_mPamiiPv", "icv_m7_ippiMinMaxIndx_16u_C1MR", "_ZNK2cv11_InputArray11isSubmatrixEi", "icv_y8_ippiDilateBorder_8u_C1R", "icv_m7_ippiDFTInit_R_32f", "cvRedirectError", "_ZN2cv15calcCovarMatrixERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_17_InputOutputArrayEii", "icv_l9_ownpiDotProd_32s64f_C1R", "icv_m7_ippiMean_8u_C1MR", "_ZNK2cv11FileStorage4rootEi", "Java_org_opencv_ml_TrainData_getMissing_10", "_ZN2cv12VideoCapture4openERKNS_6StringE", "Java_org_opencv_objdetect_CascadeClassifier_CascadeClassifier_11", "cvMax", "_ZN2cv5flann5IndexD0Ev", "icv_m7_BUFSIZE_FUNC", "icv_m7_ippiMorphologyBorderGetSize_32f_C3R", "_ZN2cv8clipLineENS_5Rect_IiEERNS_6Point_IiEES4_", "icv_l9_ownFilter32f_16s_C1R_g9e9", "ippicviFilterMedianBorderGetBufferSize", "icv_m7_ippiNormDiff_L2_16s_C1R", "icv_y8_ippiTranspose_8u_C1IR", "icv_l9_ownFilterRowBorderPipeline_16u_C1R_5x5", "icv_y8_ownscDFTinv_12_64fc", "_ZN2cv3ocl10haveOpenCLEv", "icv_l9_ownsrDFTfwd_5_scale_32f", "icv_l9_ippiNormRel_Inf_32f_C1R", "icv_l9_ippsMulC_64f_I", "icv_y8_ippiNormRel_L1_16s_C1R", "icv_m7_ippiMean_32f_C1R", "icv_l9_ownFilterMaxRow13_32f_C1R", "_ZN2cv3hal21cvtThreePlaneYUVtoBGREPKhmPhmiiibi", "icv_y8_ownpi_CmpLE_32f_C1R", "icv_y8_ownscDftInv_Fact11_32fc", "ippicviConvert_32s32f_C1R", "Java_org_opencv_photo_Photo_createCalibrateDebevec_11", "icv_l9_owniFilter32f_8u_C1R_g9e9_6", "icv_m7_ownsAdd_8u_NegSfs", "_ZN2cv12ellipse2PolyENS_6Point_IdEENS_5Size_IdEEiiiiRSt6vectorIS1_SaIS1_EE", "icv_y8_ownFilterMinColumn03_8u_C1R", "icv_l9_ippiConvert_8s16u_C1Rs", "Java_org_opencv_objdetect_CascadeClassifier_isOldFormatCascade_10", "icv_y8_ownsSub_16s_1Sfs", "icv_l9_ippiResizeCubic_16u_C4R", "icv_m7_ownsMulC_16s_I_Bound", "_ZN2cv22SimpleBlobDetectorImplC1ERKNS_18SimpleBlobDetector6ParamsE", "Java_org_opencv_features2d_DescriptorMatcher_create_11", "_ZN3tbb10interface58internal9task_base7destroyERNS_4taskE", "icv_m7_ownscDftInv_Prime16_64fc", "_ZN2cv3ocl13ProgramSourceC1ERKS1_", "icv_l9_owns_rFFTfwd_8_scale_64f", "icv_l9_ippiNorm_L1_16s_C3R", "_ZN2cv12HoughCirclesERKNS_11_InputArrayERKNS_12_OutputArrayEiddddii", "icv_m7_ippiMean_32f_C4R", "icv_m7_ippiDFTInv_PackToR_32f_C1R", "ippicviMorphologyBorderGetSize_32f_C4R", "_ZN2cv4cuda6GpuMatC1EiiiPvm", "icv_l9_owniSet_8u_C4R", "_ZN2cv5flann5Index4loadERKNS_11_InputArrayERKNS_6StringE", "_ZN2cv8internal15IntrinsicParamsaSERKNS_3MatE", "icv_m7_ownsInitDftConv_64f", "icv_m7_ippiSwapChannels_32s_C4R", "own_ipps_dSin_Y8LAynn", "_ZN2cv3hal6add16uEPKtmS2_mPtmiiPv", "icv_y8_ippiErodeBorder_32f_C4R", "icv_l9_ownsSub_8u_NegSfs", "_ZNK2cv4cuda10DeviceInfo11maxGridSizeEv", "icv_l9_ippsFFTFwd_RToPerm_64f", "icv_l9_ippiResizeGetBufferSize_16s", "ippicviTranspose_32f_C4IR", "icv_y8_owniCrossCorrNorm_FullSame_32f_C1R", "icv_y8_ownFilterMaxRow07_32f_C1R", "icv_m7_owniConvert_32f8s_ccode", "icv_l9_ownsMin_32f_AVX", "icv_m7_innerHSVToRGB_8u_C3R", "own_ipps_sSin_E7HAynn", "icv_y8_ownsrDFTinv_3_64f", "_ZN2cvanERKNS_7Scalar_IdEERKNS_3MatE", "icv_l9_ippiSum_16s_C4R", "icv_m7_ownFilterMinRow03_32f_C4R", "icv_m7_ownFilterMinRow13_8u_C3R", "ippicviIntegral_8u32f_C1R", "icv_l9_ippiDilateBorder_8u_C4R", "icv_l9_ownpi_NormL1_32f_C4R", "icv_m7_ippiAddWeighted_8u32f_C1IMR", "Java_org_opencv_calib3d_StereoBM_getSmallerBlockSize_10", "icv_m7_ippiResizeCubic_16u_C3R", "icv_m7_ownippiErodeBorder_8u_C1R", "icv_l9_gres_NormL2Diff_16u_C4R", "icv_m7_ownscDftInv_Prime13_64fc", "Java_org_opencv_core_Mat_n_1inv__JI", "cvStartFindContours", "Java_org_opencv_photo_Photo_createTonemap_11", "_ZN2cv10BOWTrainerC1Ev", "_ZN3tbb8internal8governor17acquire_resourcesEv", "icv_l9_ownpi_NormInf_32f_C1R", "ippicviFilterBorder_16u_C1R", "Java_org_opencv_objdetect_CascadeClassifier_convert_10", "cvGetFileNodeName", "ippicviNormRel_L2_8u_C1MR", "icv_y8_ownsAdd_32f_I", "cvGetRawData", "icv_m7_ownDilate_32f_C4S", "icv_m7_ippiNormDiff_L1_32f_C1R", "Java_org_opencv_core_Core_min_10", "Java_org_opencv_imgproc_Imgproc_ellipse_15", "Java_org_opencv_core_Core_multiply_10", "icv_l9_ipMirror135_32uC1R", "icv_y8_ownFilterRowBorderPipeline_16u_C1R_X_P8Y8cn", "icv_m7_ippsDCTFwdGetSize_32f", "icv_l9_ownColLinear64f", "icv_y8_ippiResizeLinear_64f_C3R", "cvMulTransposed", "Java_org_opencv_video_BackgroundSubtractorKNN_setShadowThreshold_10", "icv_m7_owns_initTabTwdBase_64f", "_ZN2cv3ipp12setIppStatusEiPKcS2_i", "ipp_get_cache_line_size", "icv_y8_ownRow1Cubic32f", "_ZN2cv3ocl7ContextC2Ev", "icv_y8_ownscDftFwd_Fact13_64fc", "_ZN2cv8superres28createFrameSource_Video_CUDAERKNS_6StringE", "icv_m7_ippiCopyReplicateBorder_32f_C3R", "cvCalcCovarMatrix", "Java_org_opencv_imgproc_Imgproc_morphologyEx_12", "icv_l9_owniTransposeWxH_32sC4", "icv_y8_ownFilterMaxRowVH_32f_C4R", "Java_org_opencv_ml_ANN_1MLP_setRpropDWPlus_10", "cvSeqInsertSlice", "icv_m7_owniFlipCopy_8u_C1", "icv_m7_ownFilterRowBorderPipeline_32f_C3R", "icv_l9_ownFilterMaxRowVH_32f_C1R", "icv_l9_ippiCopyConstBorder_8u_C4R", "icv_l9_ippiNormDiff_L2_16u_C3R", "icv_y8_ownsSub_8u_Bound", "_ZN2cv8Subdiv2D12connectEdgesEii", "Java_org_opencv_imgproc_Imgproc_rectangle_12", "cvEndWriteStruct", "icv_l9_ownscDftInv_Prime8_64fc", "_ZN2cv3ocl5QueueC1Ev", "icv_l9_ippiResizeLinear_32f_C4R", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_13", "icv_l9_owniConvert_32s32f_C1R", "icv_m7_ippiXor_8u_C1R", "Java_org_opencv_features2d_Feature2D_detectAndCompute_10", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_11", "icv_m7_ippiNormRel_L1_32f_C1R", "icv_l9_ownColCubic16s", "icv_l9_ownscDFTinv_14_32fc", "own_ipps_dSin_L9HAynn", "icv_y8_ippiMean_StdDev_8u_C3CR", "cvPOSIT", "_ZNK2cv4cuda10DeviceInfo17unifiedAddressingEv", "Java_org_opencv_ml_TrainData_delete", "icv_m7_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_W7cn", "icv_l9_ownsrDFTinv_9_scale_32f", "Java_org_opencv_core_Core_divide_12", "_ZNK2cv4cuda10DeviceInfo12maxTexture2DEv", "Java_org_opencv_ml_ANN_1MLP_setRpropDWMin_10", "icv_l9_ippiConvert_8u8s_C1RSfs", "icv_m7_ownsrDFTfwd_12_scale_64f", "icv_l9_ownsrDFTfwd_9_32f", "_ZNK3tbb14bad_last_alloc4whatEv", "icv_m7_owniFlip_16u_C1", "icv_m7_ownCalcBorderR1Linear16u", "icv_m7_ippsFFTFwd_RToPerm_64f", "icv_l9_ownsInitDftPrimeFact_32f_32f", "ippicviNormDiff_L2_32f_C4R", "icv_l9_ownsrDFTfwd_5_64f", "cvOpenFileStorage", "icv_m7_ownpi_NormInf_32f_C4R", "_ZN2cv21pyrMeanShiftFilteringERKNS_11_InputArrayERKNS_12_OutputArrayEddiNS_12TermCriteriaE", "icv_l9_ippiCopyReplicateBorder_16s_C1R", "icv_l9_myXYZToRGB_16u_C3R", "icv_m7_ippiNorm_L2_8u_C4R", "icv_l9_owniRCPack2DConj_32f_C1IR", "Java_org_opencv_photo_Photo_textureFlattening_10", "icv_m7_ownpi_NormL2Diff_32f_C3R", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_compute_10", "icv_y8_ippsSortDescend_8u_I", "icv_l9_owncvMinMaxIndx_8u_C1R_H9L9", "ippicviMirror_8u_C3R", "icv_m7_cv_ownippiFilterMin_16u_Row", "icv_m7_ownscDFTfwd_15_64fc", "icv_l9_ownsrDFTinv_12_scale_64f", "icv_y8_owns_cFFTinv_16_32fc", "ippicviSet_16s_C1MR", "Java_org_opencv_ml_StatModel_delete", "_ZN2cv9videostab17OnePassStabilizer27estimateStabilizationMotionEv", "_ZNK2cv4cuda10DeviceInfo16textureAlignmentEv", "ippicviNormDiff_Inf_8u_C3R", "Java_org_opencv_ml_KNearest_setDefaultK_10", "ippicviSwapChannels_16u_C4C3R", "icv_m7_ownDilateEllipseBorderReplicate_8u_C1R", "icv_y8_owniFilter_32f_C1R_v8u8_8", "cvSetIdentity", "icv_m7_owns_cRealRecombine_32f", "icv_y8_gres_NormL2Diff_16u_C3R", "_ZN10__cxxabiv111__terminateEPFvvE", "Java_org_opencv_core_Mat_n_1setTo__JDDDD", "icv_m7_ippiNormDiff_L1_8u_C3CMR", "Java_org_opencv_core_Core_transform_10", "own_ipps_sPowx_U8HAynn", "Java_org_opencv_core_Core_multiply_12", "_Z27Mat_to_vector_vector_DMatchRN2cv3MatERSt6vectorIS2_INS_6DMatchESaIS3_EESaIS5_EE", "_ZN3tbb8internal13observer_list5clearEv", "icv_m7_ippiFilterMaxBorder_32f_C4R", "_ZN2cv16FileNodeIterator7readRawERKNS_6StringEPhm", "_ZNK2cv12_OutputArray6assignERKNS_3MatE", "icv_y8_owns_rFFT_2_scale_32f", "icv_m7_ownFilterMinRow05_32f_C3R", "icv_l9_ownsInitTabDftDir_64f", "ippicviMean_8u_C3CMR", "icv_l9_ownsrDFTfwd_12_64f", "icv_l9_ippiThreshold_Val_8u_C1R", "icv_m7_ownpi_NormInf_8u_C3R", "icv_l9_owncvMinMaxIndx_16u_C1MR_H9L9", "_ZN2cv8superres10arrGetUMatERKNS_11_InputArrayERNS_4UMatE", "icv_l9_IPP_Dilate_C4_32f", "_ZN2cv3MatC2ERKS0_RKNS_5RangeES5_", "icv_l9_ownpi_NormL1Diff_16s_C1R", "icv_m7_ownResize4Linear64f", "_ZNK2cv9Feature2D5writeERKNS_6StringE", "icv_y8_ownippiDilateBorder_8u_C1R", "icv_l9_ownFilterMinRow11_32f_C3R", "_ZN2cv6divideEdRKNS_11_InputArrayERKNS_12_OutputArrayEi", "_ZN2cv4normERKNS_9SparseMatEi", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_X", "icv_y8_ippiNorm_L1_8u_C1MR", "icv_y8_ownFilterColumnPipeline_16s_C1R_X_W7cn", "cvGetReal3D", "ippicviNormDiff_L1_8u_C3R", "icv_l9_ippiMorphologyBorderGetSize_8u_C4R", "Java_org_opencv_imgproc_Imgproc_getStructuringElement_10", "icv_m7_ownscDftInv_Fact11_32fc", "icv_m7_ownFilterMinRow02_32f_C1R", "icv_l9_ownFilterMaxRow07_32f_C1R", "_ZN2cv8internal18WriteStructContextC2ERNS_11FileStorageERKNS_6StringEiS6_", "icv_l9_owniFlipCopy_16u_C3", "cvFlip", "icv_l9_ownsGetSizeTabDftDir_32f", "icv_m7_ownscDFTinv_10_scale_32fc", "Java_org_opencv_ml_SVM_setClassWeights_10", "icv_y8_ippiHSVToRGB_8u_C3R", "icv_m7_owns_getSizeDct_Conv_32f", "Java_org_opencv_core_Core_kmeans_10", "_ZN2cv8Subdiv2D6spliceEii", "icv_y8_gres_NormL2Diff_8u_C4R", "Java_org_opencv_features2d_Params_set_1thresholdStep_10", "own_ipps_sExp_E7HAynn", "_ZN2cv11demosaicingERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_y8_ippiTranspose_16s_C1R", "icv_l9_ownsrDFTinv_6_scale_64f", "icv_l9_ippiFilterBorder_16s_C4R", "icv_y8_ownsrDFTinv_3_scale_64f", "icv_y8_ownFilterMinRow07_32f_C1R", "Java_org_opencv_imgproc_Imgproc_intersectConvexConvex_11", "_ZN2cv3ocl5Queue10getDefaultEv", "icv_y8_ownpi_NormInfRel_16u_C1R", "icv_y8_ownFilterMinRow03_8u_C3R", "_ZN2cv3ocl7ProgramC1ERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_y8_owniCopy_8u_C3P3R_cn", "ippicviFilterLaplacianGetBufferSize_8u16s_C1R", "icv_l9_ownFilterMaxRow04_8u_C1R", "_ZN2cv17rectify3CollinearERKNS_11_InputArrayES2_S2_S2_S2_S2_S2_S2_NS_5Size_IiEES2_S2_S2_S2_RKNS_12_OutputArrayES7_S7_S7_S7_S7_S7_dS4_PNS_5Rect_IiEESA_i", "icv_m7_ownRow4Cubic32f", "icv_m7_ippiColorToGray_32f_C3C1R", "Java_org_opencv_ml_SVM_getSupportVectors_10", "icv_y8_IPP_Erode_C4_8u", "_ZN2cv4cuda19printCudaDeviceInfoEi", "icv_l9_ippiCrossCorrNorm_32f_C1R", "icv_y8_ippiThreshold_Val_32f_C1R", "icv_m7_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "cvGraphAddVtx", "icv_y8_ippsPowx_32f_A21", "_ZN2cv5flann20AutotunedIndexParamsC2Effff", "_ZN2cv3hal10absdiff32sEPKimS2_mPimiiPv", "_ZN2cv3ogl9Texture2DC1Ev", "_ZN2cv3minERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "_ZN2cv13detailEnhanceERKNS_11_InputArrayERKNS_12_OutputArrayEff", "cvFastArctan", "icv_y8_ippiCopy_16u_C1MR", "_ZN2cv2ml9TrainData12getSubVectorERKNS_3MatES4_", "icv_y8_ippiMean_16s_C4R", "icv_m7_ownpi_NormL2_16s_C4R", "ippicviSwapChannels_8u_C3R", "icv_l9_ippiResizeGetSrcOffset_64f", "_ZN2cv6detail17CylindricalWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "Java_org_opencv_video_FarnebackOpticalFlow_setPyrScale_10", "icv_l9_ownpi_NormL1Diff_16s_C3R", "Java_org_opencv_core_Mat_n_1reshape__JI", "icv_l9_ippsMalloc_8u", "icv_y8_ownFilterMinRow15_32f_C4R", "icv_y8_owniTransposeWxH_8uC1", "cvCreateGraphScanner", "_ZNSt15__exception_ptr13exception_ptrC1EPv", "_ZN2cv17CommandLineParserC2EiPKPKcRKNS_6StringE", "icv_m7_ippiAdd_8u32f_C1IMR", "icv_l9_ippiThreshold_LTVal_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_X_AVX", "icv_m7_ippiAddSquare_8u32f_C1IMR", "Java_org_opencv_core_Mat_n_1checkVector__JII", "ippicviFilterBorder_8u_C1R", "icv_l9_owniCopy_8u_P3C3R", "icv_y8_ownsrDFTinv_10_32f", "icv_y8_ownscDFTinv_7_scale_64fc", "_ZN2cv3powERKNS_11_InputArrayEdRKNS_12_OutputArrayE", "icv_l9_owniFlip_16u_C1", "icv_l9_ippsDotProd_64f", "icv_y8_ownsrDFTinv_10_scale_32f", "ippicviResizeLinear_16u_C4R", "icv_m7_ownDilateEllipseBorderReplicate_32f_C1R", "icv_l9_ippiConvert_16s32s_C1R", "icv_m7_ippiMirror_16s_C3IR", "icv_y8_cv_ownippiFilterMin_8u_Col", "icv_y8_ippiMirror_8u_C4IR", "icv_m7_ownpi_NormL2Rel_8u_C1R", "icv_y8_ippiConvert_32s8u_C1R", "icv_y8_ownFilterMinRow06_32f_C1R", "icv_m7_ownFilterMinRow13_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_H9L9cn", "Java_org_opencv_imgproc_Imgproc_getDefaultNewCameraMatrix_11", "icv_l9_ownsrDFTinv_6_64f", "_ZN2cv6detail16MultiBandBlender7prepareENS_5Rect_IiEE", "icv_m7_ippiMirror_16s_C4R", "icv_m7_ownsGetSizeTabDftFwdRec_64f", "icv_y8_ippsZero_16s", "icv_y8_ippiXYZToRGB_16u_C3R", "Java_org_opencv_calib3d_Calib3d_decomposeHomographyMat_10", "_ZN2cv3ocl9KernelArgC1Ev", "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", "cvConvertImage", "_ZN2cv9videostab23MotionEstimatorRansacL28estimateERKNS_11_InputArrayES4_Pb", "icv_l9_ownColLinear32f", "own_ipps_dSin_L9LAynn", "icv_l9_ownsrDFTfwd_7_scale_32f", "_ZN2cv9normalizeERKNS_11_InputArrayERKNS_17_InputOutputArrayEddiiS2_", "_ZNK2cv4cuda10DeviceInfo13totalConstMemEv", "_ZNK2cv7MatExpr4sizeEv", "_ZN2cv11determinantERKNS_11_InputArrayE", "icv_y8_ippiCopyReplicateBorder_8u_C4R", "icv_y8_ownscDftInv_Fact13_64fc", "icv_m7_ownpi_NormInf_32f_C3R", "icv_m7_ownsrDFTfwd_9_32f", "_ZNK2cv4cuda10DeviceInfo9tccDriverEv", "ippicviFilterMaxBorderGetBufferSize", "icv_l9_ippiTranspose_32s_C3R", "icv_m7_ownResize3Cubic16s", "_ZN3tbb8internal17generic_scheduler13create_workerERNS0_6marketEm", "icv_y8_owniFilter_32f_C1R_v8u8_1NA", "icv_m7_ippiConvert_16s16u_C1Rs", "Java_org_opencv_imgproc_Imgproc_cornerMinEigenVal_12", "_ZNK2cv7MatExpr1tEv", "icv_m7_ownscDFTinv_11_64fc", "icv_y8_ownpi_NormInf_8u_C4R", "icv_y8_owns_cCcsRecombine_64f", "icv_m7_ippsExp_32f_A21", "_ZN2cv9videostab18ToFileMotionWriterC2ERKNS_6StringENS_3PtrINS0_24ImageMotionEstimatorBaseEEE", "Java_org_opencv_photo_MergeMertens_setSaturationWeight_10", "icv_m7_cv_ownippiFilterMin_8u_Col", "icv_y8_ippiNorm_L2_16u_C1R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "Java_org_opencv_ml_TrainData_getVarIdx_10", "icv_l9_owns_rFFTinv_16_64f", "icv_l9_owns_initTabTwd_L1_64f", "icv_l9_owns_cFFTfwd_64_64fc", "icv_l9_ownippiFilterMedian_16s_C1R_1x7", "_ZN2cv32createHausdorffDistanceExtractorEif", "_ZN2cv6detail19ExposureCompensator13createDefaultEi", "icv_y8_ippiSwapChannels_8u_C4R", "_ZN2cv6detail12DpSeamFinder12computeCostsERKNS_3MatES4_NS_6Point_IiEES6_iRNS_4Mat_IfEES9_", "_ZN2cv21getStructuringElementEiNS_5Size_IiEENS_6Point_IiEE", "icv_l9_ownpi_NormL2_32f_C1R", "icv_y8_ippsDCTFwdGetSize_32f", "_ZN3tbb16spin_rw_mutex_v323internal_acquire_writerEv", "icv_l9_owniTransposeWxH_32sC1", "icv_l9_ownFilterMaxRow04_32f_C3R", "_ZN2cv9undistortERKNS_11_InputArrayERKNS_12_OutputArrayES2_S2_S2_", "icv_y8_ownippiErodeBorder_32f_C3R", "icv_y8_ownFilterBorder16s_16s_C4R", "icv_m7_ownFilterMinRow03_8u_C4R", "Java_org_opencv_core_Core_mulTransposed_12", "_ZNK2cv3ocl6Kernel3ptrEv", "icv_l9_ippiMorphologyBorderInit_8u_C1R", "icv_m7_ownResize4Cubic16s", "_ZN2cv3PCAC2Ev", "_ZN2cv3ocl9useOpenCLEv", "Java_org_opencv_ml_SVMSGD_getStepDecreasingPower_10", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_W7cn", "_ZN2cv6detail18PairwiseSeamFinder3runEv", "_ZN2cv8Subdiv2DC1ENS_5Rect_IiEE", "_ZNK2cv4cuda10DeviceInfo19maxTexture2DLayeredEv", "_ZN2cv16accumulateSquareERKNS_11_InputArrayERKNS_17_InputOutputArrayES2_", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringEf", "icv_m7_ownscDFTfwd_11_scale_32fc", "icv_l9_ownsrDFTinv_3_scale_32f", "own_ipps_sExp_L9LAynn", "icv_m7_ownpi_NormL2_8u_C4R", "_ZN2cv17DescriptorMatcher20DescriptorCollectionD0Ev", "_ZN2cv2ml6SVMSGD6createEv", "icv_l9_ownscDftFwd_Fact4_32fc", "icv_m7_ownRow1Linear16u", "Java_org_opencv_features2d_ORB_getWTA_1K_10", "_ZN2cv5flann12SearchParamsC1Eifb", "icv_y8_ippiMorphologyBorderInit_8u_C3R", "Java_org_opencv_video_DualTVL1OpticalFlow_getEpsilon_10", "Java_org_opencv_objdetect_HOGDescriptor_get_1winSize_10", "icv_l9_owniFilter32f_16u_C1R_g9e9_1", "icv_l9_ownFilterMaxRow15_8u_C1R", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_W7cn", "icv_m7_ownsInitTabDftInvRec_32f", "_ZN2cv3ocl6Device3setEPv", "_ZN2cv6detail21BestOf2NearestMatcherC2Ebfii", "_ZN2cv9transposeERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_l9_ippiCopyConstBorder_32f_C1R", "Java_org_opencv_imgproc_Subdiv2D_getTriangleList_10", "Java_org_opencv_photo_Photo_createTonemapReinhard_11", "icv_l9_ownSq_32f_C1MR_HSW", "Java_org_opencv_features2d_Params_set_1maxThreshold_10", "_ZN2cv26createGeneralizedHoughGuilEv", "icv_y8_ippiMean_StdDev_32f_C3CMR", "icv_l9_ownFilterMaxRow11_32f_C1R", "icv_l9_ippiSet_16s_C4MR", "_Z28Mat_to_vector_vector_Point3fRN2cv3MatERSt6vectorIS2_INS_7Point3_IfEESaIS4_EESaIS6_EE", "ippicviTranspose_8u_C1IR", "icv_y8_ippiDCTInv_32f_C1R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork23workcycleObjectDetectorEv", "Java_org_opencv_imgproc_Imgproc_convexHull_10", "_ZN2cv2ml9ParamGridC2Eddd", "icv_m7_ippsConvert_32f32s_Sfs", "icv_m7_ippiMean_32f_C3CMR", "_ZN10__cxxabiv117__pbase_type_infoD0Ev", "icv_l9_owniClipRectZeroTail_32f_C1R", "_ZN2cv5flann14LshIndexParamsC2Eiii", "ippicviAnd_8u_C1R", "icv_m7_owns_cFFT_1_32fc", "icv_y8_innerSwapChannels_16u_C4R", "icv_m7_ippiMul_32f_C1R", "_ZN3tbb8internal25deallocate_via_handler_v3EPv", "icv_m7_ownscDFTfwd_3_scale_64fc", "icv_m7_ippiCopyConstBorder_8u_C1R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R", "Java_org_opencv_video_KalmanFilter_get_1statePre_10", "icv_m7_ownFilterRowBorderPipeline_16u_C3R_5x5", "icv_l9_ippiCopy_32f_P3C3R", "icv_m7_ownscDFTinv_6_scale_32fc", "Java_org_opencv_imgproc_Imgproc_erode_12", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_descriptorSize_10", "icv_y8_ippsMulC_32f_I", "ippicviNormDiff_L1_8u_C1R", "_ZNK2cv3ocl6Device20nativeVectorWidthIntEv", "Java_org_opencv_features2d_DescriptorMatcher_train_10", "Java_org_opencv_photo_MergeDebevec_delete", "_ZN3tbb4task22spawn_and_wait_for_allERNS_9task_listE", "icv_l9_ownscDftInv_Fact7_32fc", "_ZN2cv16TLSDataContainerD0Ev", "icv_m7_ippiFilterMaxBorderGetBufferSize", "icv_l9_ippiMorphologyBorderInit_8u_C3R", "_ZNK2cv4cuda10DeviceInfo27maxThreadsPerMultiProcessorEv", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_10", "icv_y8_owns_initTabTwdCcsRec_32f", "ippicvsExp_32f_A21", "Java_org_opencv_core_Core_gemm_10", "icv_y8_ownFilterBorder16s_8u_C4R", "icv_m7_ippiNormDiff_L1_32f_C4R", "Java_org_opencv_calib3d_StereoMatcher_setSpeckleRange_10", "_ZN9CvLevMarq4stepEv", "icv_y8_owniShiftClipRectZeroTail_8u32f_C1R", "Java_org_opencv_calib3d_Calib3d_projectPoints_11", "_ZN2cv7fisheye23initUndistortRectifyMapERKNS_11_InputArrayES3_S3_S3_RKNS_5Size_IiEEiRKNS_12_OutputArrayESA_", "Java_org_opencv_features2d_Params_get_1maxThreshold_10", "Java_org_opencv_calib3d_StereoBM_getTextureThreshold_10", "_ZN2cv9SparseMatC1ERKNS_3MatE", "_ZN2cv4KAZE6createEbbfiii", "cvWarpPerspective", "ippicviMean_32f_C3R", "_ZNK2cv4cuda10DeviceInfo10integratedEv", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork3runEv", "icv_m7_ippsMaxEvery_16u", "_ZN2cv4cuda5Event6recordERNS0_6StreamE", "icv_y8_Erode_8u_C1S", "icv_l9_ippiTranspose_32f_C4R", "_ZN2cv3ocl7Image2DC1ERKS1_", "_ZN2cv9magnitudeERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "_ZNK2cv14DefaultDeleterI13CvVideoWriterEclEPS1_", "icv_y8_ippiNorm_L2_16u_C3R", "icv_y8_ownippiFilterMinBorderReplicate_8u_C1R", "ippicviSet_32f_C1MR", "icv_y8_ippiNormDiff_L1_16u_C1R", "icv_y8_ownsInitTabDftInvRec_32f", "icv_m7_ippiNormDiff_L1_16u_C3CMR", "icv_y8_ippiFilterGaussianBorder_32f_C3R", "icv_l9_ippiConvert_32s32f_C1R", "icv_m7_ownscDftInv_Prime7_32fc", "icv_m7_owniCrossCorrValid_NormLevel_32f_C1R", "icv_l9_ownscDftInv_Prime11_64fc", "_ZN2cv3hal10absdiff64fEPKdmS2_mPdmiiPv", "icv_y8_ippiFilterSobelNegVertBorder_8u16s_C1R", "icv_l9_ownsrDFTinv_12_64f", "icv_m7_ippiConvert_32s16s_C1RSfs", "icv_y8_ippiConvert_16u16s_C1RSfs", "icv_l9_ownippiDilateBorder_32f_C1R", "_ZN3tbb8internal17generic_scheduler13create_masterEPNS0_5arenaE", "icv_y8_owniFilterMedianHoriz5x1_32f_C1R", "icv_l9_ownFilterMinRow13_8u_C3R", "icv_m7_ippiResizeLinear_32f_C3R", "icv_l9_ippiConvert_8s16s_C1R", "Java_org_opencv_features2d_BRISK_delete", "icv_y8_ownRow3Linear32f", "icv_l9_ippiSum_16u_C3R", "icv_m7_ownsGetSizeTabDftFwdRec_32f", "icv_l9_ownsrDftFwd_Conv_32f", "icv_y8_owns_cFFTinv_16_scale_32fc", "icv_l9_ownsrDFTfwd_10_scale_32f", "icv_m7_ippiThreshold_GTVal_16s_C1R", "icv_y8_ippiMirror_16s_C3IR", "ippicviCopy_32s_C4MR", "Java_org_opencv_photo_Photo_denoise_1TVL1_10", "_ZN3tbb8internal6market29mandatory_concurrency_disableEPNS0_5arenaE", "_ZN3tbb8internal8governor7sign_onEPNS0_17generic_schedulerE", "ippicviMean_16u_C3CMR", "Java_org_opencv_ml_EM_getWeights_10", "_ZN2cv6detail16MultiBandBlender5blendERKNS_17_InputOutputArrayES4_", "icv_y8_ownpi_NormInf_16s_C1R", "_ZN2cv4FASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEibi", "_ZN3tbb8internal3rml14private_worker14thread_routineEPv", "icv_y8_owns_cFFTfwd_4_32fc", "_ZN2cv3ogl6Buffer7mapHostENS1_6AccessE", "icv_y8_ownippiFilterMaxBorderReplicate_8u_C1R", "icv_l9_owniFlipCopy_8u_C3", "icv_m7_ownsrDFTinv_13_scale_32f", "_ZN3tbb8internal19allocate_root_proxy4freeERNS_4taskE", "_ZNK2cv14DefaultDeleterI13CvFileStorageEclEPS1_", "icv_l9_ownsMulC_16s_NegSfs", "icv_l9_ippiResizeCubic_32f_C3R", "icv_y8_ownFilterBorder32f_16u_C1R", "icv_m7_ownFilterMinRowVH_32f_C1R", "Java_org_opencv_core_Core_checkRange_11", "icv_l9_ippiTranspose_32s_C4R", "icv_y8_owns_cFFT_1_32fc", "icv_l9_ownscDFTfwd_14_64fc", "ippicviMorphologyBorderInit_32f_C4R", "icv_m7_ownFilterColumnPipeline_16s8u_C1R_3x3", "icv_l9_ownFilterMinRow15_8u_C4R", "_ZN2cv12VideoCapturersERNS_3MatE", "ippicviResizeLinear_16s_C1R", "_ZNSt15__exception_ptreqERKNS_13exception_ptrES2_", "Java_org_opencv_video_Video_calcOpticalFlowFarneback_10", "cvGetReal2D", "icv_l9_ippiMirror_8u_C4R", "ippicviNormDiff_L2_32f_C3CMR", "icv_y8_ippsInvSqrt_64f_A50", "Java_org_opencv_calib3d_StereoBM_getPreFilterType_10", "icv_m7_cv_ownMorphologyBorderConstInMemGetSize", "icv_y8_myRGBToXYZ_32f_C3R", "_ZN2cv17CascadeClassifierC1Ev", "_ZN2cv8Subdiv2DC2ENS_5Rect_IiEE", "icv_l9_ippiAbsDiff_16u_C1R", "_ZN2cv5flann11IndexParams9setStringERKNS_6StringES4_", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3_kerLaplacian_W7cn", "icv_m7_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "icv_l9_ippiCopy_8u_C4P4R", "_ZN2cv22createOptFlow_DualTVL1Ev", "cvMul", "_Unwind_GetTextRelBase", "_ZN2cvmlERKNS_7MatExprES2_", "Java_org_opencv_features2d_FeatureDetector_write_10", "_ZN2cv6detail13ProjectorBase15setCameraParamsERKNS_11_InputArrayES4_S4_", "icv_y8_ippsCopy_32f", "icv_y8_ownFilterMinRow05_32f_C1R", "cvReshapeMatND", "Java_org_opencv_imgproc_Imgproc_pyrUp_12", "_ZN2cv17FlannBasedMatcher12knnMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "_ZN2cv3hal7normL1_EPKhS2_i", "_ZN2cv13HOGDescriptor24getDaimlerPeopleDetectorEv", "icv_m7_ownCalcBorderR1Linear32f", "icv_m7_ippiNormDiff_L2_32f_C4R", "_Z25cvHaarDetectObjectsForROCPKvP23CvHaarClassifierCascadeP12CvMemStorageRSt6vectorIiSaIiEERS5_IdSaIdEEdii6CvSizeSC_b", "icv_m7_ippiNormRel_L1_8u_C1MR", "icv_l9_ownDilateEllipseBorderReplicate_8u_C4R", "icv_m7_ownscDFTinv_7_32fc", "ippicvsDFTFwd_RToPack_64f", "icv_m7_owns_rFFTfwd_16_32f", "icv_m7_ownpi_NormInf_16u_C1R", "icv_y8_owns_cFFT_2_scale_64fc", "cvGetRows", "icv_y8_ownsAdd_8u_NegSfs", "_ZN2cv9videostab17MotionEstimatorL18estimateERKNS_11_InputArrayES4_Pb", "_ZN2cv7directx27convertFromDirect3DSurface9EP17IDirect3DSurface9RKNS_12_OutputArrayEPv", "Java_org_opencv_features2d_DescriptorMatcher_clone_11", "icv_l9_owniCopy_8u_C3P3R_cn", "icv_l9_ippsPolarToCart_64f", "Java_org_opencv_imgproc_Subdiv2D_rotateEdge_10", "icv_m7_owns_rFFTinv_32_scale_64f", "icv_y8_ownFilterMinRow09_32f_C1R", "ippicviSet_16s_C4MR", "icv_m7_ownsAdd_16s_PosSfs", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setTermCriteria_10", "_ZNK2cv3ogl6Buffer5bufIdEv", "icv_y8_ownsrDFTinv_7_scale_32f", "icv_l9_ownFilterMinRow01_8u_C1R", "icv_y8_ownCubicKernel0", "_ZN2cv6detail13estimateFocalERKSt6vectorINS0_13ImageFeaturesESaIS2_EERKS1_INS0_11MatchesInfoESaIS7_EERS1_IdSaIdEE", "Java_org_opencv_imgproc_Subdiv2D_edgeDst_11", "_ZN2cv3ocl5Queue6createERKNS0_7ContextERKNS0_6DeviceE", "_ZN2cv6detail5Graph7addEdgeEiif", "icv_y8_ownFilterRowBorderPipeline_16u_C1R_5x5", "_ZN2cv5randnERKNS_17_InputOutputArrayERKNS_11_InputArrayES5_", "icv_l9_ownRow4Linear16s", "_ZN2cv5flann11IndexParams9setDoubleERKNS_6StringEd", "_ZN3tbb8internal3rml11tbb_factory4openEv", "icv_m7_ownscDFTfwd_6_64fc", "icv_l9_ownNormDiff_L1_16u_C1MR_HSW", "Java_org_opencv_video_BackgroundSubtractorKNN_setDist2Threshold_10", "icv_m7_owns_cFftFwd_Large_64fc", "ownSetFeatureMask", "Java_org_opencv_ml_ANN_1MLP_setTermCriteria_10", "icv_y8_ippiFilterMaxBorder_32f_C4R", "icv_l9_ownFilterBorder32f_16s_C4R", "icv_l9_owniConvert_8s16u_ccode", "icv_m7_ippiNormDiff_L1_16s_C3R", "cvIntegral", "_ZN2cv7addTextERKNS_3MatERKNS_6StringENS_6Point_IiEERKNS_6QtFontE", "icv_m7_ownsrDFTinv_14_scale_32f", "_ZN2cv3MatC2ERKS0_PKNS_5RangeE", "icv_l9_ippiFilterScharrHorizMaskBorderGetBufferSize", "Java_org_opencv_video_Video_CamShift_10", "icv_y8_owniFlip_8u_C3", "icv_m7_ownFilterMaxRow13_32f_C1R", "Java_org_opencv_calib3d_StereoMatcher_getMinDisparity_10", "icv_m7_ownFilterMinColumn01_8u_C1R", "Java_org_opencv_videoio_VideoCapture_get_10", "Java_org_opencv_imgproc_Imgproc_integral_10", "icv_l9_owns_initTabTwdCcsRec_32f", "ippicviSwapChannels_32f_C3C4R", "icv_m7_ownpi_NormL1_32f_C3R", "ippicviAdd_32f_C1IMR", "icv_m7_ownsSubC_32f", "cvStartReadRawData", "cvError", "icv_m7_ippiAddWeighted_16u32f_C1IMR", "icv_m7_owniConvert_8s16s_ccode", "icv_m7_ownCalcBorderR4Cubic16u", "Java_org_opencv_ml_ANN_1MLP_setRpropDW0_10", "_ZNK2cv3ocl6Device22errorCorrectionSupportEv", "icv_l9_ippiResizeCubic_32f_C4R", "icv_m7_ownFilterMaxColumn05_32f_C1R", "Java_org_opencv_videoio_VideoWriter_VideoWriter_11", "icv_l9_owns_initTabTwd_Large_32f", "Java_org_opencv_calib3d_Calib3d_reprojectImageTo3D_12", "ippicviSwapChannels_8u_C4R", "Java_org_opencv_ml_EM_create_10", "icv_y8_ownpi_NormL2Diff_16s_C4R", "ippicviMean_16s_C4R", "Java_org_opencv_calib3d_Calib3d_recoverPose_13", "_ZN2cv5MatOpD0Ev", "_ZN3tbb16spin_rw_mutex_v318internal_downgradeEv", "icv_m7_ownpi_NormInfDiff_16u_C4R", "Java_org_opencv_features2d_KAZE_getNOctaveLayers_10", "icv_l9_ippiMirror_16u_C4IR", "cvGetOptimalNewCameraMatrix", "icv_l9_ippiNormDiff_Inf_32f_C1MR", "Java_org_opencv_core_Core_scaleAdd_10", "icv_l9_owniConvert_32f32s_ccode", "Java_org_opencv_imgproc_Imgproc_getGaborKernel_10", "icv_m7_ippiDilateBorder_8u_C1R", "_ZN2cv4cuda7HostMem7releaseEv", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringES4_", "Java_org_opencv_features2d_AgastFeatureDetector_delete", "_ZN2cv5instr8NodeDataD1Ev", "_ZN3tbb8internal17generic_scheduler13allocate_taskEmPNS_4taskEPNS_18task_group_contextE", "icv_y8_ownpi_NormL1Diff_16u_C4R", "icv_y8_ippiConvert_16s32f_C1R", "icv_y8_ippsLn_64f_A50", "cvStereoCalibrate", "icv_l9_ownFilterMaxRow01_8u_C3R", "icv_l9_owniFilter32f_8u_C4R_g9e9_5", "icv_m7_ownFilterMinRow03_32f_C1R", "ippicviMinMaxIndx_16u_C1MR", "_ZNK2cv11_InputArray7getUMatEi", "icv_l9_ownFilterBorderConvert32s_8u", "icv_l9_ownpi_Xor_8u_C1R", "_ZN3tbb8internal17generic_scheduler12reload_tasksERPNS_4taskERPS3_l", "icv_l9_ippiResizeLinearInit_16u", "icv_m7_ippiResizeLinearInit_16s", "icv_l9_owniCrossCorrValid_NormLevel_32f_C1R", "icv_l9_ippiFilterBorderGetSize", "icv_m7_ippiDCT8x8Inv_32f_C1", "icv_l9_ownsAdd_8u_Bound", "icv_y8_owniFilterPrewittVertBorder2_32f_C1R", "_ZN2cv4UMat3eyeENS_5Size_IiEEi", "icv_l9_ippiMinEigenValGetBufferSize_8u32f_C1R", "_ZN2cv9videostab18InpaintingPipeline7inpaintEiRNS_3MatES3_", "Java_org_opencv_imgproc_Imgproc_Canny_10", "_ZN2cv9videostab9getMotionEiiRKSt6vectorINS_3MatESaIS2_EE", "icv_l9_ownApplyHaarClassifier_32f_C1R_HSW", "icv_m7_ippiAddWeighted_32f_C1IMR", "icv_y8_ippiTranspose_32s_C4R", "icv_y8_ippiResizeGetSrcOffset_16s", "icv_m7_ippiMulC_16s_C1IRSfs", "_ZNK2cv17DescriptorMatcher10checkMasksERKNS_11_InputArrayEi", "_ZN2cv6detail20BundleAdjusterReproj24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_H9L9cn", "ippicvFree", "icv_y8_owniFlipCopy_8u_C3", "Java_org_opencv_core_Core_mulSpectrums_10", "_ZN2cv6String8allocateEm", "icv_l9_ippiMean_16u_C4R", "Java_org_opencv_photo_MergeDebevec_process_10", "cvPolarToCart", "icv_y8_ownsrDFTfwd_13_32f", "_ZN2cv9ExceptionC1Ev", "_ZN2cv4cuda11TargetArchs9builtWithENS0_10FeatureSetE", "Java_org_opencv_ml_SVMSGD_setMarginType_10", "icv_m7_ownscDFTinv_7_scale_32fc", "_ZN2cv18accumulateWeightedERKNS_11_InputArrayERKNS_17_InputOutputArrayEdS2_", "cvSetMouseCallback", "_ZNK2cv11_InputArray8sameSizeERKS0_", "Java_org_opencv_features2d_BFMatcher_BFMatcher_11", "icv_m7_ownCalcBorderR4Linear16u", "icv_m7_ippsMul_64fc", "icv_m7_ownscDFTinv_13_32fc", "icv_m7_ippiNormDiff_Inf_16s_C1R", "_ZNK2cv3ocl6Device16image3DMaxHeightEv", "_ZN2cv3hal10invSqrt32fEPKfPfi", "_ZN2cv3ocl6DeviceC2Ev", "_ZN2cv6detail26BestOf2NearestRangeMatcherclERKSt6vectorINS0_13ImageFeaturesESaIS3_EERS2_INS0_11MatchesInfoESaIS8_EERKNS_4UMatE", "Java_org_opencv_features2d_GFTTDetector_setMaxFeatures_10", "icv_m7_ownsrDFTfwd_9_scale_64f", "icv_m7_ippiNormRel_Inf_8u_C1R", "icv_l9_ippiCopy_8u_P3C3R", "icv_l9_ownscDFTinv_13_32fc", "icv_m7_ippiFilterScharrVertMaskBorder_8u16s_C1R", "Java_org_opencv_core_Core_solveCubic_10", "_ZN2cv13HOGDescriptor4readERNS_8FileNodeE", "icv_y8_ownpi_NormL2Rel_8u_C1R", "icv_m7_ippiMean_StdDev_32f_C1R", "icv_y8_ownFilterMinRow03_8u_C4R", "_ZNSt16bad_array_lengthD2Ev", "cvGetND", "_ZThn24_N2cv9videostab27SparsePyrLkOptFlowEstimator3runERKNS_11_InputArrayES4_S4_RKNS_17_InputOutputArrayERKNS_12_OutputArrayESA_", "icv_m7_ownpi_NormL1_8u_C3R", "ippicviConvert_32f8u_C1RSfs", "ippicviFilterScharrVertMaskBorderGetBufferSize", "Java_org_opencv_features2d_ORB_getScoreType_10", "icv_l9_ownCalcBorderR3Cubic16s", "icv_y8_owniConvert_8s8u_ccode", "icv_m7_ippiNormDiff_Inf_32f_C4R", "icv_l9_ownippsCnvrt_32f32s_Sfs", "cvErode", "Java_org_opencv_imgproc_Imgproc_initUndistortRectifyMap_10", "_ZN2cv15NAryMatIteratorppEv", "_ZN2cv9videostab17TwoPassStabilizer9nextFrameEv", "_ZN3tbb8internal6market7releaseEb", "icv_y8_owniCmpLess_16u_C1R", "icv_y8_ippiSet_16u_C3MR", "icv_y8_ippiNormDiff_Inf_16u_C3CMR", "icv_y8_ownsFFTGetBufSize_R_64f", "icv_l9_ownAbsDiff_32f_C1R", "icv_m7_ippiCopyReplicateBorder_8u_C3IR", "_ZN2cv4cuda20unregisterPageLockedERNS_3MatE", "icv_y8_ippiNormDiff_Inf_8u_C3CMR", "_ZN2cv3ocl7Image2DC2Ev", "_ZN2cv6detail11PlaneWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "Java_org_opencv_ml_ANN_1MLP_setTrainMethod_11", "_ZN2cv29createGeneralizedHoughBallardEv", "icv_y8_ownscDftFwd_Prime7_32fc", "icv_m7_ownpi_NormL1_8u_C1R", "Java_org_opencv_photo_MergeMertens_getExposureWeight_10", "_ZN2cv14createTrackbarERKNS_6StringES2_PiiPFviPvES4_", "_ZN2cv11SVBackSubstERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayE", "_ZN2cv3ocl6Kernel3setEiPKvm", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "Java_org_opencv_core_Core_norm_15", "icv_m7_ownpi_CmpLT_16s_C1R", "icv_m7_ippiRGBToGray_32f_AC4C1R", "icv_l9_ownFilterMaxRow02_32f_C3R", "ippicviNormDiff_Inf_32f_C3CMR", "icv_l9_ippiFilterBorder_8u_C3R", "icv_m7_ownippiMorphologyBorderReplicateInMemGetSize_8u_C3R", "icv_l9_ownFilterRowBorderPipeline_32f_C3R_X", "icv_l9_owniGetRectRight_32f", "icv_y8_ownscDFTinv_7_32fc", "_ZN2cv4cuda6GpuMat7releaseEv", "_ZN2cv21drawChessboardCornersERKNS_17_InputOutputArrayENS_5Size_IiEERKNS_11_InputArrayEb", "icv_l9_ippsMagnitude_32f", "icv_m7_owns_cFftFwd_Fact4_32fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_3x3_W7cn", "icv_m7_ippiFilterGaussianBorder_8u_C1R", "icv_m7_ippiCopy_8u_C3P3R", "icv_m7_ownsrDftInv_Conv_64f", "icv_l9_ownsSub_8u_Bound", "_ZN2cv9videostab17TwoPassStabilizerC1Ev", "icv_l9_owniCopy_32s_C4MR", "_ZN2cv3hal2LUEPdmiS1_mi", "_ZN2cv6theRNGEv", "ippicviCanny_16s8u_C1R", "ippicviNormDiff_Inf_16u_C4R", "_ZN2cv8Subdiv2D8QuadEdgeC2Ei", "_ZN2cv8Stitcher17estimateTransformERKNS_11_InputArrayERKSt6vectorIS4_INS_5Rect_IiEESaIS6_EESaIS8_EE", "icv_m7_ownscDFTinv_9_64fc", "icv_l9_owns_cFFTfwd_16_scale_32fc", "icv_y8_ownscDftInv_PrimeFact_64fc", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_3x3_H9L9cn", "Java_org_opencv_imgproc_CLAHE_delete", "ippicviNorm_L1_32f_C1MR", "cvXorS", "icv_y8_ownscDFTfwd_7_scale_64fc", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarMin_10", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork13resetTrackingEv", "icv_y8_ippiNormRel_L2_32f_C1R", "_ZNK2cv6detail12CameraParams1KEv", "icv_y8_owns_rFFTfwd_16_scale_32f", "icv_y8_ownResize4Cubic32f", "_ZN2cv3ocl6DeviceC1ERKS1_", "cvCmp", "_ZN2cv26convertPointsToHomogeneousERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_16u_C1R", "_ZNK2cv17CommandLineParser4Impl18split_range_stringERKNS_6StringEcc", "icv_l9_owns_cFFTfwd_4_scale_32fc", "icv_m7_ownscDftInv_Prime11_64fc", "_ZNK2cv3PCA11backProjectERKNS_11_InputArrayE", "icv_y8_ownsrDFTfwd_6_64f", "icv_l9_ownsGetSizeTabDftFwdRec_32f", "icv_m7_ownFilterMinRow03_32f_C3R", "icv_l9_owniAutoCorrFull_C1R", "icv_y8_ippiResizeCubic_32f_C3R", "Java_org_opencv_imgproc_Imgproc_warpAffine_12", "_ZN2cv16setMouseCallbackERKNS_6StringEPFviiiiPvES3_", "icv_y8_owniFilter_32f_C3R_v8u8_4NA", "_ZN2cv8superres11FrameSourceD2Ev", "_ZN2cv5flann5IndexC2ERKNS_11_InputArrayERKNS0_11IndexParamsEN7cvflann16flann_distance_tE", "_ZN2cv10StereoSGBM6createEiiiiiiiiiii", "ippicviNorm_L1_32f_C3R", "icv_l9_ippiAddSquare_16u32f_C1IMR", "_ZNK2cv13HOGDescriptor4saveERKNS_6StringES3_", "icv_l9_ownResize1Cubic16s", "_ZN3tbb8internal14__TBB_InitOnce7add_refEv", "icv_y8_ownsrDFTfwd_6_32f", "Java_org_opencv_core_Core_LUT_10", "_ZN3tbb8internal18concurrent_monitor14thread_context4initEv", "_ZN2cv10BriskLayerC1ERKNS_3MatEff", "cvLoad", "Java_org_opencv_core_Mat_nPutB", "icv_l9_owniFilter_32f_C3R_g9e9_4", "icv_y8_ownpi_NormL1_32f_C3R", "Java_org_opencv_imgcodecs_Imgcodecs_imwrite_10", "icv_m7_ownFilterMinRow13_8u_C4R", "icv_m7_ippiFilterMinBorder_32f_C3R", "Java_org_opencv_core_Mat_n_1convertTo__JJIDD", "icv_y8_ippiTranspose_16s_C3R", "icv_l9_ippiMinMaxIndx_8u_C1MR", "icv_m7_ippiSet_16s_C1R", "_ZNK2cv3ocl12PlatformInfo9getDeviceERNS0_6DeviceEi", "icv_m7_ownFilterMinRow04_32f_C3R", "Java_org_opencv_core_TickMeter_getCounter_10", "Java_org_opencv_imgproc_Imgproc_goodFeaturesToTrack_11", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "_Unwind_FindEnclosingFunction", "icv_l9_owniFilter_32f_C1R_g9e9_2", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_X", "icv_y8_ippsFlip_64f_I", "icv_y8_ownippiFilterMaxGetBufferSize_8u_C1R", "own_ipps_dExp_E7EPnnn", "__register_frame_info_bases", "_ZN2cv4readERKNS_8FileNodeERdd", "_ZN2cv9videostab16MotionFilterBase9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_", "Java_org_opencv_calib3d_StereoMatcher_compute_10", "icv_m7_ownpi_NormL2_8u_C3R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkD1Ev", "icv_y8_ippiThreshold_8u_C1R", "icv_l9_owns_initTabTwd_Large_64f", "icv_y8_ippiFilterMedianBorder_16s_C1R", "icv_y8_ippiMean_16u_C3CMR", "_Z19Mat_to_vector_ucharRN2cv3MatERSt6vectorIhSaIhEE", "icv_l9_ownFilterMaxColumn05_32f_C1R", "_ZN2cv3hal5not8uEPKhmS2_mPhmiiPv", "icv_y8_cv_ownippiFilterMax_32f_Msk", "_Z26Mat_to_vector_vector_PointRN2cv3MatERSt6vectorIS2_INS_6Point_IiEESaIS4_EESaIS6_EE", "_ZN2cv8calcHistERKNS_11_InputArrayERKSt6vectorIiSaIiEES2_RKNS_12_OutputArrayES7_RKS3_IfSaIfEEb", "icv_y8_ownippiMorphologyBorderReplicateInMemGetSize_32f_C3R", "Java_org_opencv_core_Core_normalize_11", "icv_y8_owns_initTabTwd_Large_64f", "cvStartReadChainPoints", "_ZN2cv2ml6DTrees4NodeC1Ev", "Java_org_opencv_features2d_KAZE_getNOctaves_10", "icv_l9_ownpi_NormInfDiff_8u_C3R", "ippicviDistanceTransform_3x3_8u32f_C1R", "icv_y8_ippiTranspose_8u_C3IR", "_ZN2cv12KalmanFilterC2Eiiii", "cvCreatePyramid", "_ZN2cv6detail17BundleAdjusterRay24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_m7_owniFlip_32s_C3", "icv_y8_ippiDFTGetSize_R_32f", "Java_org_opencv_core_Core_PCACompute_10", "icv_y8_ippiAnd_8u_C1R", "icv_m7_owniConvert_32f8u_ccode", "icv_m7_ippiAdd_32f_C1IMR", "_ZNK2cv4cuda10DeviceInfo12maxSurface2DEv", "_ZN10__cxxabiv112__unexpectedEPFvvE", "Java_org_opencv_photo_Photo_colorChange_11", "Java_org_opencv_features2d_Features2d_drawMatches2_11", "icv_m7_ippiDCTFwdGetSize_32f", "ippicviResizeLinear_32f_C4R", "_ZN2cv9videostab17OnePassStabilizer16postProcessFrameERKNS_3MatE", "icv_m7_ippiMirror_32s_C1R", "icv_l9_ownCalcBorderR4Linear64f", "icv_m7_ownsrDFTinv_5_scale_64f", "icv_m7_ippiCopy_16s_C3MR", "_ZN2cv6detail20CylindricalWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_iiRS3_", "icv_l9_ippiCopyReplicateBorder_32f_C4R", "Java_org_opencv_imgproc_Imgproc_warpAffine_10", "cvFillConvexPoly", "icv_m7_ippiSqrIntegral_8u32f64f_C1R", "_ZN2cv5BRISK6createERKSt6vectorIfSaIfEERKS1_IiSaIiEEffS9_", "_ZN2cv16TLSDataContainerC2Ev", "icv_m7_ippiThreshold_GTVal_8u_C1R", "icv_m7_ownsrDFTinv_7_scale_64f", "_ZN2cveqERKNS_3MatES2_", "_ZN2cv3hal6mul32fEPKfmS2_mPfmiiPv", "_ZNK2cv5MatOp9transposeERKNS_7MatExprERS1_", "icv_l9_ippiFFTInit_R_32f", "icv_l9_owns_rFFTfwd_4_64f", "_ZN2cv3ocl7ProgramC1ERKS1_", "_ZN3tbb8internal6market22insert_arena_into_listERNS0_5arenaE", "_ZThn672_N2cv9videostab17TwoPassStabilizer9nextFrameEv", "icv_y8_ownippiFilterMedian_16s_C1R_7x1", "_ZN2cv3hal7recip8uEPKhmS2_mPhmiiPv", "icv_l9_ownscDftInv_Prime7_32fc", "_ZNK2cv16MatConstIterator3posEPi", "_ZNK2cv3ocl7Context6useSVMEv", "icv_l9_ownFilterMaxRowVH_8u_C1R", "icv_m7_ownscDFTinv_3_32fc", "icv_l9_ippiTranspose_16u_C1R", "icv_m7_ippsDCTFwdInit_32f", "icv_y8_ippiNorm_Inf_32f_C3R", "icv_l9_ownscDFTfwd_9_scale_32fc", "icv_y8_ippiNorm_L2_32f_C1MR", "_ZNK2cv13HOGDescriptor16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EEdNS_5Size_IiEESB_ddb", "_ZNK2cv8Subdiv2D7symEdgeEi", "_ZN2cv5instr8NodeDataC1EPKcS3_iPvbNS0_4TYPEENS0_4IMPLE", "icv_y8_ownippiFilterMinGetBufferSize_8u_C1R", "_ZN2cv17agast_cornerScoreILi0EEEiPKhPKii", "icv_m7_ownscDFTfwd_7_scale_64fc", "_ZN2cv4cuda6GpuMat6createEiii", "_ZN3tbb8internal6market28mandatory_concurrency_enableEPNS0_5arenaE", "icv_l9_ownsrDFTfwd_13_64f", "icv_l9_Erode_8u_C3S", "icv_l9_ownsrDFTinv_11_scale_64f", "_ZN2cv4cuda7HostMem12getAllocatorENS1_9AllocTypeE", "icv_m7_ipMirror135_8uC1R", "icv_l9_ippiDCT8x8Inv_32f_C1", "Java_org_opencv_videoio_VideoCapture_isOpened_10", "_ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E", "_ZN2cv3hal13addWeighted8sEPKamS2_mPamiiPv", "Java_org_opencv_imgproc_Imgproc_moments_10", "_ZN2cv17CascadeClassifierD1Ev", "_ZN2cv11RNG_MT19937clEv", "own_ipps_dLn_L9LAynn", "icv_l9_owns_cFFTfwd_8_32fc", "icv_l9_ippiNorm_L2_8u_C4R", "_ZN3tbb8internal32itt_load_pointer_with_acquire_v3EPKv", "icv_l9_ownsMul_16s_NegSfs", "icv_l9_ownsGetSizeDftPrimeFact_32f_32f", "icv_y8_ownsMul_8u_PosSfs", "_ZN2cv12VideoCapture4openEii", "icv_y8_ownFilterBorder32f_8u_C4R", "icv_m7_owns_cFFT_1_64fc", "_ZN2cv9videostab24estimateOptimalTrimRatioERKNS_3MatENS_5Size_IiEE", "icv_m7_owns_rFFTinv_8_32f", "_ZN2cv2ml18LogisticRegression6createEv", "_ZNK2cv4UMat3invEi", "__getf2", "_ZN2cv3hal7sqrt64fEPKdPdi", "icv_l9_owniConvert_8u32f", "Java_org_opencv_ml_SVMSGD_setStepDecreasingPower_10", "icv_y8_ippiNormDiff_L2_8u_C4R", "ippicviResizeCubicInit_16u", "_ZN2cv17DescriptorMatcher15isPossibleMatchERKNS_11_InputArrayEii", "_ZN2cv11MahalanobisERKNS_11_InputArrayES2_S2_", "_ZN2cv9videostab18LpMotionStabilizer9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_", "_ZN3tbb16spin_rw_mutex_v323internal_acquire_readerEv", "_ZN2cvleERKNS_3MatES2_", "icv_l9_ippiAbsDiff_32f_C1R", "icv_m7_ippiCopy_32f_C3R", "icv_l9_ownsAdd_16s_NegSfs", "icv_m7_ippiNormDiff_L2_16s_C3R", "cvReshape", "icv_m7_ippiNorm_L1_32f_C1R", "icv_l9_ippsExp_32f_A21", "icv_l9_ownsrDFTfwd_15_64f", "icv_l9_owniFilter32f_8u_C4R_g9e9_2", "icv_m7_ippiFilterMedianBorder_32f_C1R", "Java_org_opencv_video_BackgroundSubtractorMOG2_getShadowValue_10", "_ZNK2cv21DetectionBasedTracker10getObjectsERSt6vectorINS_5Rect_IiEESaIS3_EE", "Java_org_opencv_features2d_DescriptorMatcher_delete", "icv_y8_ippiNorm_L2_16s_C1R", "_ZN2cv9minMaxLocERKNS_11_InputArrayEPdS3_PNS_6Point_IiEES6_S2_", "_ZTv0_n56_NK2cv9Feature2D5emptyEv", "_ZN3tbb10interface78internal15task_arena_base21internal_current_slotEv", "_ZN2cv3ocl23checkOptimalVectorWidthEPKiRKNS_11_InputArrayES5_S5_S5_S5_S5_S5_S5_S5_NS0_17OclVectorStrategyE", "ippicviTranspose_32s_C1R", "icv_m7_ownFilterMaxRow06_32f_C3R", "icv_m7_ippsLn_64f_A50", "icv_l9_ownResize1Cubic16u", "icv_m7_ownscDFTfwd_3_64fc", "icv_l9_owns_sDctFwd_PostMul_32f", "Java_org_opencv_video_SparsePyrLKOpticalFlow_delete", "icv_l9_ippiMax_16s_C1R", "icv_l9_ownscDftInv_Prime11_32fc", "_ZNK2cv11_InputArray4colsEi", "icv_y8_ownsAdd_32f", "_ZN2cv3ocl6finishEv", "cvAttrValue", "_ZN2cv2ml7ANN_MLP4loadERKNS_6StringE", "icv_y8_ownsMinEvery_64f", "icv_y8_ownCalcBorderR3Cubic16u", "icv_l9_ippiIntegral_8u32s_C1R", "cvEigenVV", "Java_org_opencv_core_Mat_nPutD", "_ZNK2cv5MatOp8multiplyERKNS_7MatExprEdRS1_", "icv_m7_ownFilterMaxRow01_8u_C4R", "icv_l9_ippiAnd_8u_C1R", "icv_l9_calcMinValues", "Java_org_opencv_ml_SVMSGD_delete", "icv_m7_ippsFlip_32f_I", "icv_y8_owniFlip_32s_C3", "_ZN2cv6detail20BundleAdjusterReproj9calcErrorERNS_3MatE", "icv_l9_cv_ownMorphologyBorderConstInMemGetSize", "Java_org_opencv_ml_SVM_setTermCriteria_10", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_5x5_H9L9cn", "icv_y8_ippiSwapChannels_16u_C4C3R", "icv_m7_ownsrDFTinv_6_scale_64f", "Java_org_opencv_core_Mat_n_1submat_1rr", "ippicviFilterGaussianBorder_16u_C3R", "cvDestroyWindow", "cvSetZero", "icv_l9_ownsrDftInvRecombine_32f", "_ZN2cv7MomentsC1Ev", "_ZN2cv9SparseMat3ptrEPKibPm", "icv_m7_ippiAddProduct_8u32f_C1IMR", "Java_org_opencv_ml_SVM_setType_10", "icv_m7_ownippiFilterMinBorderReplicate_32f_C4R", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5", "_ZN3tbb8internal8governor14auto_terminateEPv", "icv_y8_ownFilterBorderConvert32s_8u", "Java_org_opencv_features2d_ORB_setMaxFeatures_10", "ippicviNormDiff_L1_16u_C4R", "icv_y8_ownsInitDftConv_64f", "icv_m7_ownFilterMaxRow07_32f_C4R", "_ZN2cv3ocl7ProgramC2ERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_l9_ownNormRel_Inf_8u_C1MR_HSW", "icv_y8_ownpi_NormL1_32f_C1R", "_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcElPKvPKNS_17__class_type_infoES2_", "_ZN2cv3hal6mul64fEPKdmS2_mPdmiiPv", "icv_l9_ippsConvert_8s16s", "icv_y8_ippiNormDiff_Inf_32f_C1MR", "icv_y8_ippiDFTFwd_RToPack_32f_C1R", "icv_y8_ownFilterMinRow02_8u_C3R", "icv_m7_ownscDftFwd_Fact7_64fc", "icv_l9_ownCubicKernel0", "icv_m7_ippiCopyConstBorder_16s_C1R", "icv_l9_ippiNorm_L2_16u_C1R", "icv_y8_ippiDCTFwdInit_32f", "icv_l9_owniFilter32f_8u_C3R_g9e9_0", "icv_y8_ownFilterMinRow07_32f_C3R", "Java_org_opencv_ml_LogisticRegression_getTermCriteria_10", "Java_org_opencv_features2d_Params_set_1minArea_10", "icv_m7_ownFilterColumnPipeline_32f_C1R_X", "icv_y8_ownFilterRowBorderPipeline_16u_C3R_3x3_P8Y8cn", "_ZN2cv6detail12DpSeamFinder21updateLabelsUsingSeamEiiRKSt6vectorINS_6Point_IiEESaIS4_EEb", "_ZN9CvLevMarq5clearEv", "icv_m7_ippiDFTFwd_RToPack_32f_C1R", "icv_l9_ownippiDilateBorder_8u_C3R", "icv_y8_ownpi_NormInfRel_32f_C1R", "cvGetTextSize", "icv_m7_ippiNormDiff_L1_8u_C1MR", "icv_y8_IPP_Dilate_C4_8u", "icv_m7_ippsConvert_32s16s_Sfs", "icv_y8_ippiCopyReplicateBorder_32s_C3R", "own_ipps_dCos_L9EPnnn", "_ZN2cvmiERKNS_7MatExprERKNS_3MatE", "icv_m7_ippiResizeCubicInit_16s", "icv_y8_ippiMulC_32f_C1IR", "icv_l9_ownFilterMinRow01_8u_C3R", "icv_m7_owns_cFFTfwd_32_32fc", "icv_y8_ownscDFTfwd_10_64fc", "own_ipps_sCos_Y8EPnnn", "_ZN2cv5flann5IndexC2Ev", "icv_y8_ipMirror45_32uC1R", "_ZNK2cv4cuda10DeviceInfo19maxTexture1DLayeredEv", "icv_l9_owns_rFFTinv_8_32f", "icv_l9_owniShiftClipRectZeroTail_32f_C1R", "Java_org_opencv_video_KalmanFilter_get_1statePost_10", "Java_org_opencv_ml_DTrees_setMaxDepth_10", "icv_l9_owniCrossCorrValid_32f_C1R", "_ZN2cv5MatOpD1Ev", "_ZN3tbb18task_group_context26register_pending_exceptionEv", "icv_y8_ownsrDFTinv_5_scale_64f", "icv_m7_myXYZToRGB_8u_C3R", "icv_m7_ippiMean_16u_C1R", "icv_m7_ownFilterMaxRow02_32f_C4R", "_ZN2cv30createLMeDSPointSetRegistratorERKNS_3PtrINS_19PointSetRegistrator8CallbackEEEidi", "cvPyrUp", "_ZN2cv21createTonemapReinhardEffff", "icv_m7_ippiNormDiff_L2_8u_C1MR", "Java_org_opencv_core_Core_addWeighted_11", "icv_m7_ippiMulC_32f_C1R", "_ZN3tbb8internal19cpu_has_speculationEv", "icv_m7_IPP_Dilate_C3_32f", "icv_l9_ippsMul_32fc_I", "ippicviErodeBorder_32f_C1R", "icv_y8_ownRow1Linear16s", "icv_y8_owniCmpEq_16u_C1R", "icv_m7_ippsInvSqrt_32f_A21", "Java_org_opencv_calib3d_StereoBM_setSmallerBlockSize_10", "Java_org_opencv_features2d_FeatureDetector_detect_11", "icv_m7_ownpi_NormL2Diff_16u_C3R", "icv_y8_IPP_Dilate_C3_8u", "ippicviSum_8u_C3R", "icv_y8_ippiSqrDistanceNorm_32f_C1R", "_ZNSt9bad_allocD0Ev", "Java_org_opencv_photo_TonemapReinhard_getColorAdaptation_10", "Java_org_opencv_calib3d_Calib3d_findHomography_11", "icv_l9_Dilate_8u_C3S", "Java_org_opencv_features2d_GFTTDetector_getQualityLevel_10", "_ZN10__cxxabiv116__enum_type_infoD1Ev", "Java_org_opencv_features2d_AgastFeatureDetector_create_10", "icv_l9_ippsDFTFwd_RToPack_32f", "icv_y8_owniConvert_8u16s_C1R", "_ZN2cv3hal10absdiff16uEPKtmS2_mPtmiiPv", "icv_l9_owns_initTabBitRevNorm", "ippicviTranspose_8u_C4R", "icv_m7_ownFilterBorder32f_8u_C3R", "icv_m7_ippiResizeLinear_16u_C4R", "_ZN2cv4UMatD2Ev", "_ZN2cv3hal14warpPerspectveEiPKhmiiPhmiiPKdiiS5_", "icv_y8_ownsGetSizeDftPrimeFact_64f_64f", "_ZN2cv8internal17ComputeHomographyENS_3MatES1_", "icv_l9_ippiResizeGetBufferSize_16u", "ippicviAddWeighted_8u32f_C1IR", "icv_m7_ippiFilterSobelVertBorderGetBufferSize", "own_ipps_dExp_Y8LAynn", "_ZN2cvdvERKNS_7MatExprEd", "icv_l9_ownippsCnvrtFin_32f8u_AVX", "icv_y8_ippiFilterMinBorder_8u_C3R", "icv_l9_ippiMirror_32s_C3R", "icv_y8_ownFilterMaxRowVH_8u_C3R", "own_ipps_sInvSqrt_L9HAynn", "_ZNK2cv17FlannBasedMatcher15isMaskSupportedEv", "Java_org_opencv_imgproc_Imgproc_filter2D_10", "icv_y8_ippsSortRadixAscend_32f_I", "icv_y8_ippsCopy_16s", "icv_l9_ownResize1Linear64f", "icv_m7_ippsMalloc_8u", "icv_y8_owns_cFftInv_Fact4_64fc", "icv_y8_owns_cFFTfwd_8_32fc", "icv_y8_ownFilterMaxRow01_8u_C4R", "Java_org_opencv_core_Mat_n_1reshape__JII", "icv_l9_ippiFilterMinBorder_32f_C3R", "Java_org_opencv_core_Core_randu_10", "Java_org_opencv_photo_Photo_createCalibrateDebevec_10", "Java_org_opencv_features2d_MSER_setMinArea_10", "_ZNK2cv3PCA11backProjectERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_y8_ownCalcBorderR4Linear64f", "icv_l9_owns_cFFTinv_8_32fc", "icv_y8_owniConvert_8s16s_ccode", "_ZN2cv6detail10Timelapser13createDefaultEi", "icv_m7_ippiCopyReplicateBorder_16s_C3R", "ippicviAddSquare_32f_C1IR", "_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE", "_ZN2cv3hal6mul16uEPKtmS2_mPtmiiPv", "icv_m7_owns_cCcsRecombine_32f", "Java_org_opencv_video_BackgroundSubtractorMOG2_getBackgroundRatio_10", "Java_org_opencv_features2d_DescriptorExtractor_compute_10", "Java_org_opencv_core_Core_polarToCart_10", "cvGetValidDisparityROI", "_ZN2cv9rectangleERNS_3MatENS_5Rect_IiEERKNS_7Scalar_IdEEiii", "ippicviConvert_16s8s_C1RSfs", "icv_m7_getMaskFeature", "icv_y8_ippiNorm_L2_8u_C4R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_y8_ownFilterMaxColumn01_8u_C1R", "icv_m7_ownFilterColumnPipeline_16s_C1R_5x5_W7cn", "_ZN2cv9rectangleERKNS_17_InputOutputArrayENS_6Point_IiEES4_RKNS_7Scalar_IdEEiii", "Java_org_opencv_core_Core_addWeighted_10", "_ZN2cv11FileStorage7releaseEv", "icv_y8_ownFilterRowBorderPipeline_16u_C3R_X_P8Y8cn", "icv_l9_ownscDftFwd_Fact7_32fc", "_ZN2cv3PCAC1ERKNS_11_InputArrayES3_ii", "_ZN2cv6detail26restoreImageFromLaplacePyrERSt6vectorINS_4UMatESaIS2_EE", "icv_l9_owns_cFft_BlkMerge_64fc", "_ZNK2cv3ocl6Device18globalMemCacheTypeEv", "icv_m7_owns_rFFT_1_scale_32f", "ippicviAddSquare_32f_C1IMR", "_ZN2cv21DetectionBasedTracker13setParametersERKNS0_10ParametersE", "_ZN2cv31createChiHistogramCostExtractorEif", "icv_l9_ippiMean_16u_C3CMR", "icv_m7_Dilate_32f_C1S", "Java_org_opencv_video_KalmanFilter_set_1transitionMatrix_10", "_ZN2cv5flann5Index12radiusSearchERKNS_11_InputArrayERKNS_12_OutputArrayES7_diRKNS0_12SearchParamsE", "icv_m7_ippiMean_StdDev_16u_C3CMR", "icv_l9_owns_cFFTfwd_32_scale_32fc", "_ZN2cv3hal19cvtOnePlaneYUVtoBGREPKhmPhmiiibii", "ippicviTranspose_32s_C3R", "icv_m7_ownFilterMaxRow09_8u_C4R", "cvExp", "icv_m7_ownpi_NormL2Diff_8u_C1R", "_ZN10__cxxabiv119__foreign_exceptionD0Ev", "cvSeqPopMulti", "icv_y8_ownFilterMaxRow13_8u_C4R", "Java_org_opencv_video_BackgroundSubtractorKNN_getShadowValue_10", "icv_l9_ownFilterRowBorderPipeline_16s_C3R_X", "icv_m7_ownsrDFTfwd_6_64f", "icv_l9_ownsrDftFwd_PrimeFact_64f", "icv_l9_ippiConvert_32s8u_C1R", "icv_l9_ownpi_NormInf_16u_C3R", "_ZN2cv15NAryMatIteratorC2EPPKNS_3MatEPPhi", "ippicviCopy_8u_C3P3R", "_ZNK3tbb8internal20allocate_child_proxy4freeERNS_4taskE", "icv_m7_ownErode_32f_C4S", "_ZN7CvMatNDC1ERKN2cv3MatE", "icv_y8_ownippiDilateBorder_8u_C3R", "icv_y8_ownippiErodeBorder_32f_C4R", "icv_y8_ippiDCT8x8Fwd_32f_C1", "icv_l9_ippiCopy_32f_AC4C3R", "Java_org_opencv_imgproc_Imgproc_undistortPoints_10", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_12", "_ZN10__cxxabiv120__si_class_type_infoD0Ev", "_ZN2cv8Subdiv2D6locateENS_6Point_IfEERiS3_", "Java_org_opencv_features2d_Params_Params_10", "icv_l9_owns_rFFTfwd_8_64f", "icv_m7_ownippiDilateBorder_8u_C4R", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_16u_C1R", "_ZN2cv4meanERKNS_11_InputArrayES2_", "_ZN2cv2ml9TrainDataD1Ev", "icv_l9_ippiFilterMaxBorder_32f_C4R", "icv_l9_cv_ownFilterMxMnCalcBuf", "icv_y8_ippiDCTFwd_32f_C1R", "_ZNK2cv16TLSDataContainer7getDataEv", "Java_org_opencv_calib3d_Calib3d_undistortPoints_10", "Java_org_opencv_ml_EM_setTermCriteria_10", "icv_m7_ippiTranspose_32s_C4R", "icv_l9_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "icv_l9_ownippsSqrt_32f", "ippicviMirror_32s_C3R", "icv_m7_ownippiMorphologyBorderReplicateInMemGetSize_8u_C4R", "_ZN2cv9videostab15VideoFileSource9nextFrameEv", "icv_l9_ippiAbsDiff_8u_C1R", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_setVocabulary_10", "icv_l9_owniFilter32f_16s_C3R_g9e9_5", "icv_l9_owns_cFFTfwd_8_scale_64fc", "_ZN2cv6detail20AffineBasedEstimator8estimateERKSt6vectorINS0_13ImageFeaturesESaIS3_EERKS2_INS0_11MatchesInfoESaIS8_EERS2_INS0_12CameraParamsESaISD_EE", "Java_org_opencv_core_Core_copyMakeBorder_10", "icv_l9_ownippiFilterMedian_8u_C1R_5x5", "icv_l9_ownippiFilterMaxGetBufferSize_32f_C4R", "icv_m7_ippsFFTFwd_CToC_32fc", "ippicviNormDiff_L2_32f_C1MR", "Java_org_opencv_ml_TrainData_getClassLabels_10", "_ZN2cv12boundingRectERKNS_11_InputArrayE", "icv_y8_ownscDFTfwd_13_scale_32fc", "icv_y8_ownFilterMinRow01_32f_C4R", "icv_y8_ippiTranspose_32s_C3IR", "icv_m7_ippiMirror_32f_C1R", "icv_y8_owncvGetCacheSize", "_ZN2cv8integralERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_ii", "ippicvsInvSqrt_32f_A21", "icv_l9_owniFilter32f_16s_C1R_g9e9_7", "icv_y8_ippiCopy_16s_P3C3R", "_ZN3tbb18captured_exception8allocateEPKcS2_", "_ZNK2cv8FileNode4typeEv", "icv_m7_ownsrDFTinv_9_scale_32f", "icv_m7_ippiSum_32f_C3R", "icv_m7_ownFilterMaxRow06_8u_C1R", "icv_y8_ownpi_NormL2_16s_C4R", "cvGuiBoxReport", "_ZN2cv14createAlignMTBEiib", "icv_l9_owniFilter32f_16s_C1R_g9e9_5", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "Java_org_opencv_ml_SVM_setP_10", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3", "icv_y8_ippiSwapChannels_8u_C3R", "icv_m7_ownResize4Cubic16u", "icv_y8_owniFilter_32f_C4R_v8u8_8", "icv_l9_owniFilter32f_8u_C1R_g9e9_1", "Java_org_opencv_core_Core_sortIdx_10", "icv_l9_ippiNorm_Inf_8u_C3R", "icv_m7_ownFilterMaxRow09_8u_C3R", "_ZN3tbb8internal5arena14allocate_arenaERNS0_6marketEjj", "Java_org_opencv_core_Mat_n_1step1__JI", "icv_l9_ownpi_NormInf_8u_C1R", "icv_m7_ippiFilterSobelNegVertBorderGetBufferSize", "icv_m7_owns_initDctFwd_Fft_32f", "icv_y8_ippiConvert_16u8s_C1RSfs", "icv_l9_ippsSortAscend_8u_I", "Java_org_opencv_imgproc_Imgproc_findContours_10", "own_ipps_dCos_U8LAynn", "_ZN2cv3ocl7Image2D14canCreateAliasERKNS_4UMatE", "Java_org_opencv_imgproc_Imgproc_approxPolyDP_10", "icv_l9_owniTranspose32s_C1IR_AVX", "icv_l9_ownFilterMinRow04_8u_C4R", "icv_m7_ownDilateEllipseBorderReplicate_8u_C4R", "icv_m7_owns_cFFTfwd_8_scale_32fc", "_ZN2cv17CascadeClassifier7convertERKNS_6StringES3_", "ippicviResizeLinearInit_64f", "icv_y8_owniSwapChannels_32u_C4C3R", "_ZSt14set_unexpectedPFvvE", "icv_m7_ippiThreshold_GT_16s_C1R", "icv_y8_innerHSVToRGB_8u_C3R", "icv_m7_ownsAdd_16s", "Java_org_opencv_imgproc_Imgproc_cornerEigenValsAndVecs_11", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_X_W7cn", "icv_y8_ownFilterMaxRow07_8u_C1R", "_ZNK2cv3ocl7Context6deviceEm", "icv_l9_ippiCopyReplicateBorder_8u_C4IR", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_W7cn", "icv_y8_owniFilter_32f_C3R_v8u8_3", "_ZN2cv6rotateERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_m7_ippiNormDiff_L1_32f_C3R", "icv_y8_ownsrDFTinv_14_scale_32f", "icv_y8_ippiCopyConstBorder_32s_C4R", "icv_y8_ippiDilateBorder_32f_C3R", "icv_y8_ippiNorm_L1_32f_C3R", "icv_m7_cv_ownFilterMxMnCalcBuf", "icv_y8_ippsDCTInv_32f", "icv_y8_ownpi_NormInf_16u_C4R", "icv_y8_owns_cFftFwd_Fact8_32fc", "own_ipps_sSin_L9HAynn", "icv_m7_ippiNormDiff_Inf_16s_C4R", "_ZNK2cv4cuda10DeviceInfo17sharedMemPerBlockEv", "icv_y8_owniFilter_32f_C3R_v8u8_4", "_ZN2cv3MatC1ERKS0_RKNS_5Rect_IiEE", "icv_m7_ippsFree", "icv_y8_owns_cFFTinv_16_64fc", "icv_y8_ippiNormDiff_L1_16s_C3R", "_ZN2cv5BRISK6createEiif", "icv_y8_ownscDFTinv_12_32fc", "icv_m7_ippiConvert_32s16u_C1RSfs", "icv_y8_ippiAdd_16s_C1RSfs", "Java_org_opencv_features2d_Feature2D_defaultNorm_10", "icv_l9_ippiNormDiff_L2_8u_C1R", "icv_l9_ownRow3Cubic16u", "icv_m7_ippiCopy_16u_C1MR", "_ZN2cv17DescriptorMatcher11radiusMatchERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "icv_y8_owniFFTFwd_RToPack_32f_C1R", "icv_y8_ownFilterMaxRow04_32f_C3R", "icv_y8_ownFilterRowBorderPipeline_16s_C1R", "icv_m7_owniFilterMedianBorderInMem_32f_C1R", "cvKalmanCorrect", "icv_y8_ownippiFilterMaxBorderReplicate_32f_C3R", "_ZN3tbb8internal13observer_list6removeEPNS0_14observer_proxyE", "Java_org_opencv_features2d_GFTTDetector_setBlockSize_10", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "icv_l9_ownscDFTinv_10_32fc", "_ZN2cv2ml6KDTreeC1Ev", "icv_y8_ownsrDFTinv_12_scale_64f", "icv_m7_ippiMean_32f_C1MR", "icv_y8_ownsrDFTinv_7_32f", "own_ipps_dSin_E7HAynn", "icv_m7_ippiConvert_32f8s_C1RSfs", "icv_m7_owns_rFFTfwd_32_32f", "icv_m7_owns_cFFTfwd_8_32fc", "icv_l9_ownsrDFTinv_14_scale_64f", "Java_org_opencv_photo_Tonemap_setGamma_10", "icv_l9_owns_cFFTfwd_64_32fc", "icv_l9_owniFilterMedianBorderInMem_8u_C1R", "icv_m7_ownsMul_16s_1Sfs", "icv_l9_owniFilter_32f_C4R_g9e9_1", "icv_l9_ownscDFTfwd_10_64fc", "icv_l9_ippiMirror_32s_C1IR", "icv_y8_ownFilterColumnPipeline_32f_C1R_X_W7cn", "_ZN2cv5flann17LinearIndexParamsC1Ev", "Java_org_opencv_features2d_Feature2D_empty_10", "Java_org_opencv_photo_AlignExposures_process_10", "Java_org_opencv_photo_Photo_createAlignMTB_10", "icv_l9_ippsSortRadixAscend_32f_I", "icv_y8_ownColLinear16u", "icv_m7_ownpi_NormInfDiff_32f_C4R", "icv_y8_ownFilterMaxColumn03_8u_C1R", "icv_m7_ownippiFilterMinGetBufferSize_32f_C3R", "Java_org_opencv_imgproc_Imgproc_calcBackProject_10", "icv_y8_ownFilterMinColumnVH_8u_C1R", "icv_l9_ownscDftInv_Prime13_64fc", "icv_l9_owniTplNormMean_32f_C1R_g9e9cn", "icv_m7_ippiSqrt_32f_C1R", "Java_org_opencv_features2d_AKAZE_create_11", "_ZN2cv11imreadmultiERKNS_6StringERSt6vectorINS_3MatESaIS4_EEi", "icv_y8_ownsrDFTinv_15_64f", "_ZN2cv14getGaborKernelENS_5Size_IiEEdddddi", "_ZN2cv9videostab18ToFileMotionWriterC1ERKNS_6StringENS_3PtrINS0_24ImageMotionEstimatorBaseEEE", "icv_l9_ownscDftFwd_Fact7_64fc", "icv_y8_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "ippicviNorm_L1_16u_C4R", "icv_l9_owns_cFFTfwd_32_32fc", "Java_org_opencv_features2d_ORB_getNLevels_10", "_ZN2cv3ocl7Image2DD2Ev", "_ZN2cv9thresholdERKNS_11_InputArrayERKNS_12_OutputArrayEddi", "Java_org_opencv_photo_TonemapDrago_getSaturation_10", "_ZN2cv9AlgorithmC1Ev", "_ZN2cv14extractChannelERKNS_11_InputArrayERKNS_12_OutputArrayEi", "Java_org_opencv_core_Core_rotate_10", "icv_l9_ownsrDFTinv_14_scale_32f", "icv_l9_ownsAdd_8u_1Sfs", "_ZN2cv6detail11PlaneWarper7warpRoiENS_5Size_IiEERKNS_11_InputArrayES6_", "icv_y8_ownFilterRowBorderPipeline_16s_C3R_5x5_W7cn", "_ZN2cv25BOWImgDescriptorExtractorD1Ev", "Java_org_opencv_calib3d_Calib3d_composeRT_10", "Java_org_opencv_ml_LogisticRegression_setTrainMethod_10", "icv_y8_ownFilterColumnPipeline_16u_C1R_5x5", "icv_l9_ownsrDFTfwd_12_scale_64f", "_ZN2cv3Mat8copySizeERKS0_", "_ZNK2cv12_OutputArray15getGpuMatVecRefEv", "icv_l9_ownMean_StdDev_32f_C3CR_HSW", "icv_y8_ippiMinEigenVal_32f_C1R", "_ZN2cv3hal8CholeskyEPfmiS1_mi", "icv_m7_ippsConvert_32f16s_Sfs", "ippicviResizeLinearInit_16s", "ippicviNormDiff_Inf_16s_C3R", "Java_org_opencv_features2d_Params_get_1filterByColor_10", "_ZNK2cv5MatOp6divideEdRKNS_7MatExprERS1_", "icv_m7_ownRow4Cubic16u", "icv_m7_ippiNormDiff_L2_32f_C1R", "ippicviMax_16s_C1R", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3", "icv_y8_ownFilterMinRowVH_32f_C3R", "_ZN2cv3ogl6Arrays16resetVertexArrayEv", "icv_l9_innerRGBToHLS_8u_C3R", "icv_m7_ownErodeEllipseBorderReplicate_8u_C3R", "Java_org_opencv_video_FarnebackOpticalFlow_getPolySigma_10", "icv_m7_owniDenominatorFull_C1R", "icv_y8_ownsInitTabDftInvRec_64f", "icv_y8_ippiMorphologyBorderInit_8u_C1R", "icv_y8_ownippiErodeBorder_32f_C1R", "icv_l9_ippiAddProduct_32f_C1IMR", "_ZN2cv4cuda11getInputMatERKNS_11_InputArrayERNS0_6StreamE", "_ZN3tbb10interface78internal15task_arena_base15internal_attachEv", "icv_y8_owniFilterRobertsUpBorder2_32f_C1R", "icv_y8_ownsrDFTfwd_15_64f", "_ZN2cv5instr8NodeDataC2EPKcS3_iPvbNS0_4TYPEENS0_4IMPLE", "Java_org_opencv_ml_Boost_getBoostType_10", "icv_l9_ownFilterMaxRow09_32f_C4R", "_ZN3tbb8internal17generic_scheduler17nested_arena_exitERNS0_20nested_arena_contextE", "icv_m7_ownpi_NormInfRel_8u_C1R", "icv_m7_ownscDFTfwd_9_scale_32fc", "_ZNK2cv4cuda6GpuMat6copyToERKNS_12_OutputArrayERKNS_11_InputArrayERNS0_6StreamE", "Java_org_opencv_core_Core_norm_14", "icv_y8_ownippiFilterMaxGetBufferSize_16u_C1R", "Java_org_opencv_calib3d_Calib3d_initCameraMatrix2D_10", "icv_l9_ippiResizeGetSize_8u", "icv_l9_ippiCannyGetSize", "_ZN2cv8Stitcher17estimateTransformERKNS_11_InputArrayE", "icv_m7_ippiMinEigenVal_32f_C1R", "icv_l9_ippsDFTFwd_CToC_64fc", "icv_own_ipps_dError", "icv_m7_ippiFilterMinBorder_8u_C3R", "Java_org_opencv_features2d_AKAZE_setDescriptorSize_10", "Java_org_opencv_calib3d_Calib3d_findFundamentalMat_10", "icv_y8_ownFilterMaxRow09_32f_C1R", "icv_y8_ownpi_NormL2_8u_C1R", "Java_org_opencv_core_Mat_n_1depth", "cvMeanShift", "icv_y8_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_l9_ippiTranspose_16s_C3IR", "ippicviMirror_32f_C3IR", "icv_y8_ippiNorm_L2_32f_C4R", "icv_y8_ippsFree", "icv_l9_ownsGetSizeTabDftInvRec_64f", "ippicviFilterBorder_32f_C3R", "_ZN2cv3ocl8PlatformC2ERKS1_", "icv_l9_ippiSwapChannels_8u_C4R", "icv_y8_ippsConvert_32f16s_Sfs", "_ZN2cv9videostab14StabilizerBaseC2Ev", "icv_l9_ownsMul_8u_PosSfs", "icv_y8_ippiFilterBorderInit_16s", "_Z22Mat_to_vector_KeyPointRN2cv3MatERSt6vectorINS_8KeyPointESaIS3_EE", "icv_y8_ownCalcBorderR4Cubic16u", "Java_org_opencv_core_Core_dft_11", "icv_m7_ippiMirror_16u_C3IR", "Java_org_opencv_imgproc_Imgproc_Canny_12", "_ZNK2cv2ml9StatModel5emptyEv", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_X", "_ZN2cv3Mat5zerosEiii", "icv_l9_owniSDDiv_32f_C1IR", "icv_m7_ownsSub_32f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_W7cn", "icv_m7_ippiResizeCubicInit_8u", "icv_m7_ippiNormRel_Inf_32f_C1MR", "icv_l9_ownpi_NormInf_32f_C4R", "cvCloneImage", "ippicviSqrDistanceNorm_32f_C1R", "icv_y8_ippiMinMaxIndx_16u_C1R", "_ZNK2cv3ocl6Device13globalMemSizeEv", "icv_y8_owniFilter_32f_C4R_v8u8_1", "_ZNK3tbb10interface78internal15task_arena_base16internal_enqueueERNS_4taskEl", "icv_l9_ippiErodeBorder_8u_C1R", "icv_m7_ownscDftFwd_Prime13_32fc", "_ZN2cv6detail27AffineBestOf2NearestMatcher5matchERKNS0_13ImageFeaturesES4_RNS0_11MatchesInfoE", "icv_m7_ippiThreshold_LTVal_32f_C1R", "icv_l9_ownFilterMinRow09_32f_C1R", "Java_org_opencv_calib3d_StereoBM_setTextureThreshold_10", "_ZNK2cv3ocl6Device9availableEv", "icv_l9_owniFilter32f_16u_C3R_g9e9_4", "_ZN2cv13seamlessCloneERKNS_11_InputArrayES2_S2_NS_6Point_IiEERKNS_12_OutputArrayEi", "icv_y8_ownFilterMinRow13_8u_C4R", "_ZN2cv9ExceptionC1EiRKNS_6StringES3_S3_i", "icv_m7_ippiTranspose_32s_C1IR", "icv_m7_owniGetRectBottom_32f", "_ZN2cv18createMergeMertensEfff", "icv_m7_ownpi_NormInfDiff_8u_C3R", "_ZN2cv15BriskScaleSpaceD1Ev", "icv_l9_gres_NormL2Diff_16u_C3R", "icv_y8_ippsPowx_64f_A50", "icv_l9_owniTranspose16u_C4R_core2", "ippicvsFlip_32f_I", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_5x5_H9L9cn", "Java_org_opencv_imgproc_Imgproc_warpAffine_11", "ippicviTranspose_16s_C1IR", "_Z25vector_vector_char_to_MatRSt6vectorIS_IcSaIcEESaIS1_EERN2cv3MatE", "Java_org_opencv_video_DualTVL1OpticalFlow_getGamma_10", "icv_l9_ippiHLSToRGB_8u_C3R", "Java_org_opencv_features2d_DescriptorExtractor_empty_10", "Java_org_opencv_imgproc_Imgproc_blur_12", "icv_m7_ippiMorphologyBorderInit_8u_C4R", "icv_y8_myXYZToRGB_8u_C3R", "icv_y8_ippiConvert_16u32s_C1R", "Java_org_opencv_ml_TrainData_getSample_10", "cvReleaseMat", "cvNormalizeHist", "_ZN2cv6detail10Timelapser10test_pointENS_6Point_IiEE", "cvGetErrStatus", "icv_y8_ippiNorm_L1_16s_C3R", "icv_y8_ownscDFTinv_14_64fc", "_ZNK2cv17DescriptorMatcher20DescriptorCollection14getDescriptorsEv", "_ZSt17current_exceptionv", "icv_m7_ippiNorm_Inf_32f_C1MR", "icv_m7_ownscDFTinv_12_scale_32fc", "_ZNK2cv3ocl6Device22nativeVectorWidthFloatEv", "icv_l9_ippiDFTInit_R_32f", "_ZN3tbb8internal5arena10free_arenaEv", "icv_y8_owns_cFFT_1_scale_64fc", "icv_own_ipps_cError", "icv_l9_ownFilterMaxRow06_32f_C1R", "ippicviSum_8u_C4R", "icv_l9_owns_cFFT_2_64fc", "_ZN2cv9minMaxLocERKNS_9SparseMatEPdS3_PiS4_", "icv_y8_ippiMax_32f_C1R", "icv_y8_ownscDFTfwd_12_32fc", "icv_m7_ippiCopy_16s_C1MR", "ippicviHSVToRGB_8u_C3R", "icv_l9_ownsrDFTfwd_14_scale_32f", "_ZNSt9exceptionD0Ev", "Java_org_opencv_ml_EM_setClustersNumber_10", "icv_m7_ownFilterMaxRow05_8u_C1R", "icv_l9_ownsrDFTinv_3_scale_64f", "_ZN2cv3dctERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_l9_ownRow4Linear16u", "icv_y8_ippiFilterMedianBorder_16u_C1R", "icv_y8_ownsrDFTinv_11_64f", "icv_m7_ippiAdd_16s_C1RSfs", "icv_l9_ippiConvert_32s8s_C1R", "icv_y8_ownsMul_16s", "icv_y8_ownsrDFTfwd_11_32f", "icv_y8_ippiDotProd_32s64f_C1R", "icv_m7_ownFilterMaxRow09_32f_C4R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_3x3", "cvCreateStereoBMState", "Java_org_opencv_imgproc_Imgproc_goodFeaturesToTrack_10", "cvGet2D", "_ZN2cv5flann5IndexC1ERKNS_11_InputArrayERKNS0_11IndexParamsEN7cvflann16flann_distance_tE", "icv_y8_owns_initDctFwd_Conv_32f", "icv_y8_ownFilterMaxRow04_8u_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_getShadowThreshold_10", "Java_org_opencv_calib3d_Calib3d_undistortImage_11", "_ZNK2cv8Subdiv2D18getLeadingEdgeListERSt6vectorIiSaIiEE", "cvCreateKalman", "_ZN2cv17CascadeClassifierD2Ev", "icv_l9_ownFilterMinRow07_8u_C1R", "icv_l9_owniFilter32f_16s_C3R_g9e9_4", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "Java_org_opencv_video_DualTVL1OpticalFlow_setTheta_10", "Java_org_opencv_video_BackgroundSubtractorMOG2_setHistory_10", "Java_org_opencv_photo_CalibrateRobertson_getRadiance_10", "cvProjectPoints2", "Java_org_opencv_imgproc_Imgproc_createCLAHE_10", "icv_l9_owns_rFFT_2_32f", "icv_m7_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_l9_owniClipRectZeroTail_8u32f_C1R", "icv_y8_ownpi_CmpLE_8u_C1R", "icv_y8_owniFilterPrewittHorizBorder2_8u16s_C1R", "_ZN2cv4UMatC1ERKS0_PKNS_5RangeE", "cvNormalize", "ippicviResizeCubicInit_32f", "icv_l9_ippiRGBToHLS_8u_C3R", "cvMahalanobis", "icv_m7_ownFilterMaxRow06_32f_C4R", "icv_l9_ippiMulC_32f_C1IR", "_Z19vector_Point_to_MatRSt6vectorIN2cv6Point_IiEESaIS2_EERNS0_3MatE", "icv_y8_owns_rFFT_2_32f", "icv_m7_owniFFTFwd_RToPack_32f_C1R", "Java_org_opencv_core_Core_divide_11", "cvRunHaarClassifierCascade", "_ZNK2cv12_OutputArray6assignERKNS_4UMatE", "Java_org_opencv_imgproc_Imgproc_rectangle_10", "icv_y8_ownscDFTinv_11_scale_64fc", "icv_y8_ippiNorm_L1_8u_C3R", "icv_y8_ippiMulPack_32f_C1R", "_ZN2cv15getDerivKernelsERKNS_12_OutputArrayES2_iiibi", "icv_y8_ownscDftInv_Prime7_32fc", "icv_m7_ippiNorm_L2_8u_C1MR", "icv_l9_ownFilterRowBorderPipeline_16s_C3R_3x3_H9L9cn", "_ZNK2cv3ocl12PlatformInfo12deviceNumberEv", "icv_m7_ownFilterMaxRowVH_32f_C4R", "ippicviFilterSobelVertSecondBorder_32f_C1R", "Java_org_opencv_core_Core_idct_10", "icv_m7_Dilate_8u_C3S", "icv_l9_ippiAddWeighted_32f_C1IR", "ippicviDotProd_16s64f_C1R", "ippicviThreshold_GT_8u_C1IR", "Java_org_opencv_features2d_DescriptorMatcher_match_11", "_ZNSt13bad_exceptionD0Ev", "icv_l9_ownpi_Sum_16s_C4R", "icv_l9_gres_NormL2Rel_16u_C1R", "icv_l9_owniConvert_32s16u_C1RSfs", "icv_m7_owns_initDctInv_Fft_32f", "icv_m7_owns_rFFTfwd_8_64f", "icv_l9_owns_cFFTfwd_32_64fc", "_ZN2cv9BFMatcherC2Eib", "icv_y8_ippiSet_16s_C1R", "_ZN2cv4cuda16createContinuousEiiiRKNS_12_OutputArrayE", "icv_y8_owniFilterMedianSqr5x5_32f_C1R", "_Unwind_SetGR", "icv_m7_owns_rFFTfwd_4_64f", "icv_l9_ownMean_StdDev_16u_C1R_HSW", "_ZN2cv10checkRangeERKNS_11_InputArrayEbPNS_6Point_IiEEdd", "Java_org_opencv_video_BackgroundSubtractorKNN_getkNNSamples_10", "icv_y8_ippiMean_16u_C4R", "Java_org_opencv_core_Mat_n_1mul__JJ", "icv_l9_ippiAddWeighted_32f_C1IMR", "_ZN2cv4UMatC1ERKS0_RKNS_5Rect_IiEE", "Java_org_opencv_ml_SVMSGD_getMarginType_10", "icv_l9_ownscDFTinv_13_scale_64fc", "icv_m7_cv_ownippiFilterMax_16s_Row", "ippicviAdd_16u32f_C1IR", "ippicviNormDiff_L1_32f_C3CMR", "icv_m7_ippiMirror_8u_C1IR", "icv_y8_ippiAddProduct_16u32f_C1IR", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "ippicvsLn_32f_A21", "Java_org_opencv_imgproc_LineSegmentDetector_detect_11", "_ZN2cv2ml21NormalBayesClassifier6createEv", "_Z21vector_Point3f_to_MatRSt6vectorIN2cv7Point3_IfEESaIS2_EERNS0_3MatE", "Java_org_opencv_ml_TrainData_getTestNormCatResponses_10", "icv_l9_ippiNormDiff_L2_32f_C1R", "icv_y8_owniFilter2_8u16s_C1R", "ippicviThreshold_GTVal_16s_C1IR", "icv_l9_ippiFilterSobelVertBorder_8u16s_C1R", "Java_org_opencv_ml_SVMSGD_getSvmsgdType_10", "ippicviResizeCubic_16u_C1R", "_ZN2cv19connectedComponentsERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_l9_ippiNorm_Inf_16s_C1R", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3_W7cn", "icv_l9_owniFlipCopy_32s_C1", "ippicviNormDiff_L1_32f_C4R", "Java_org_opencv_video_KalmanFilter_KalmanFilter_12", "_ZN2cv3ocl12PlatformInfoD1Ev", "icv_y8_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_l9_ownpi_CmpLE_16s_C1R", "own_ipps_dLn_E7EPnnn", "icv_l9_ippiSum_16s_C3R", "Java_org_opencv_calib3d_StereoBM_setPreFilterType_10", "cvMakeSeqHeaderForArray", "_ZN2cvdvERKNS_7MatExprERKNS_3MatE", "_ZN2cv4cuda6GpuMatC2ERKS1_NS_5Rect_IiEE", "icv_l9_ownNormDiff_Inf_8u_C3CMR_HSW", "Java_org_opencv_ml_LogisticRegression_create_10", "icv_m7_ownFilterBorder16s_16u_C3R", "icv_l9_cv_ownippiFilterMin_16s_Col", "Java_org_opencv_video_SparsePyrLKOpticalFlow_create_10", "__deregister_frame", "_ZN2cv3ocl5QueueaSERKS1_", "icv_m7_ippiMirror_32f_C3R", "icv_l9_ownippiMorphologyBorderReplicateInMemGetSize_8u_C1R", "cvRandArr", "Java_org_opencv_core_Mat_n_1isSubmatrix", "icv_l9_owniSwapChannels_8u_C4C3R", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_X_H9L9cn", "icv_l9_ownscDftInv_Prime8_32fc", "icv_l9_ownFilter_32f_C4R_g9e9", "_ZN2cv12setUseOpenVXEb", "icv_m7_ippiMean_16s_C4R", "Java_org_opencv_core_Core_convertScaleAbs_10", "icv_m7_ownErodeEllipseBorderReplicate_32f_C4R", "icv_l9_ownFilterBorder32f_16u_C1R", "icv_y8_ownsMinEvery_32f", "icv_l9_ownscDFTfwd_12_32fc", "icv_l9_ownippiErodeBorder_8u_C1R", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringEd", "Java_org_opencv_video_KalmanFilter_KalmanFilter_10", "_ZN2cv16FileNodeIteratorpLEi", "icv_m7_ownFilterMaxRow09_8u_C1R", "_ZN2cv6detail12CameraParamsC1Ev", "icv_m7_myRGBToHLS_8u_C3R", "icv_l9_ippiNorm_Inf_16s_C3R", "icv_l9_owniConvert_32f8u", "ippicviMirror_16s_C1IR", "ippicviFilterBorderInit_16s", "Java_org_opencv_objdetect_Objdetect_groupRectangles_10", "icv_y8_innerRGBToXYZ_16u_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarMax_10", "icv_y8_ownFilterMinRow01_32f_C3R", "_ZN2cvmlEdRKNS_3MatE", "_ZN2cv6detail12DpSeamFinder12estimateSeamERKNS_3MatES4_NS_6Point_IiEES6_iS6_S6_RSt6vectorIS6_SaIS6_EERb", "_ZN2cvmlERKNS_3MatES2_", "icv_y8_ippiNormDiff_L1_32f_C4R", "_Unwind_Find_FDE", "_ZN2cv25BOWImgDescriptorExtractorC2ERKNS_3PtrINS_17DescriptorMatcherEEE", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "Java_org_opencv_core_Core_PCAProject_10", "ippicviComputeThreshold_Otsu_8u_C1R", "icv_l9_ownscDFTinv_9_32fc", "_ZN2cv3ocl14convertTypeStrEiiiPc", "icv_l9_ownsrDFTfwd_9_scale_64f", "icv_l9_ownscDFTfwd_13_64fc", "Java_org_opencv_imgproc_Imgproc_circle_11", "icv_m7_ippiNormDiff_L1_16u_C4R", "icv_m7_ownsMul_64fc_I", "Java_org_opencv_core_Core_eigen_10", "icv_y8_ownsrDFTinv_13_scale_64f", "icv_m7_ippiResizeLinear_16s_C3R", "icv_y8_owniFilter_32f_C3R_v8u8_8NA", "_ZN2cv3MatC1EiPKiiPvPKm", "icv_m7_ownsrDFTfwd_6_32f", "icv_m7_owns_sDctInv_Dir_32f", "icv_l9_ippiNorm_Inf_8u_C1MR", "icv_m7_ownFilterMinRow06_32f_C4R", "icv_l9_owns_cCcsRecombine_64f", "_ZN3tbb8internal8governor19terminate_schedulerEPNS0_17generic_schedulerEPKNS_19task_scheduler_initE", "Java_org_opencv_photo_Photo_createTonemap_10", "icv_y8_ownippiFilterMinGetBufferSize_16u_C1R", "icv_y8_ownFilterMinRow11_32f_C1R", "_ZNSt8bad_castD0Ev", "Java_org_opencv_imgproc_Imgproc_dilate_10", "icv_y8_ippiCopyReplicateBorder_16u_C1R", "_ZN2cv5MutexC2Ev", "icv_l9_ippiDilateBorder_8u_C3R", "ippicviMean_StdDev_16u_C1R", "Java_org_opencv_imgproc_Imgproc_spatialGradient_11", "cvOr", "icv_m7_ownscDFTfwd_13_64fc", "Java_org_opencv_ml_TrainData_getSamples_10", "icv_y8_owns_cFFTinv_32_64fc", "icv_l9_ippsLn_32f_A21", "icv_l9_ownResize3Cubic16u", "Java_org_opencv_video_DualTVL1OpticalFlow_getScalesNumber_10", "icv_y8_ownscDFTinv_6_32fc", "Java_org_opencv_calib3d_StereoBM_setPreFilterSize_10", "icv_m7_ownsGetSizeDftConv_64f", "_ZN2cv9videostab28KeypointBasedMotionEstimatorC2ENS_3PtrINS0_19MotionEstimatorBaseEEE", "icv_l9_owns_cFFTinv_4_32fc", "Java_org_opencv_imgproc_Imgproc_convexityDefects_10", "cvRodrigues2", "icv_y8_ippiNormRel_L2_8u_C1R", "ippicviNorm_Inf_16u_C3R", "Java_org_opencv_core_Core_bitwise_1and_10", "_ZN2cv28connectedComponentsWithStatsERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_iii", "cvCalibrationMatrixValues", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColored_10", "icv_m7_ippiFilterSobelVertBorder_32f_C1R", "icv_y8_ippiConvert_16s32s_C1R", "icv_y8_ownFilterMinRow04_32f_C1R", "icv_l9_ownsFFTGetBufSize_R_64f", "icv_y8_ippsDotProd_32f64f", "_ZN2cv14displayOverlayERKNS_6StringES2_i", "icv_m7_ownsrDFTfwd_11_64f", "icv_y8_ippsSin_32f_A24", "Java_org_opencv_ml_LogisticRegression_getRegularization_10", "icv_l9_owniCrossCorrValid_NormLevel_8u_C1R", "_Z27vector_vector_DMatch_to_MatRSt6vectorIS_IN2cv6DMatchESaIS1_EESaIS3_EERNS0_3MatE", "_ZNK2cv3ocl6Device17maxClockFrequencyEv", "Java_org_opencv_imgproc_Imgproc_Sobel_11", "icv_m7_ownsMul_16s_Bound", "icv_m7_ippsSqrt_32f_A21", "_ZN2cv3hal5max8sEPKamS2_mPamiiPv", "Java_org_opencv_imgproc_Imgproc_clipLine_10", "icv_y8_ippiAddWeighted_8u32f_C1IMR", "Java_org_opencv_core_Core_setNumThreads_10", "Java_org_opencv_features2d_DescriptorMatcher_match_10", "icv_m7_ownsrDFTfwd_5_scale_64f", "_ZN2cv4UMat15getStdAllocatorEv", "_ZN2cv3ocl6KernelC1EPKcRKNS0_13ProgramSourceERKNS_6StringEPS7_", "icv_m7_ippiCopy_8u_C1MR", "icv_y8_ippsMin_32f", "cvClearSeq", "icv_l9_owniFilterMedianVert1x5_32f_C1R", "icv_m7_cv_ownippiFilterMax_8u_Row", "icv_l9_ownFilterMaxRowVH_8u_C3R", "_ZN2cv8va_intel3ocl23initializeContextFromVAEPvb", "icv_m7_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "_ZN2cv20loadWindowParametersERKNS_6StringE", "icv_l9_owncvGetMaxNumThreads", "own_ipps_dInvSqrt_L9LAynn", "Java_org_opencv_video_DualTVL1OpticalFlow_getTau_10", "icv_m7_ownippiFilterMaxGetBufferSize_8u_C1R", "_ZNK2cv4cuda10DeviceInfo11pciDeviceIDEv", "ippicviCopy_16s_C1R", "icv_l9_owncvMinMaxIndx_16u_C1R_H9L9", "icv_m7_ownFilterMinRow15_32f_C3R", "icv_y8_ippiNormDiff_L2_32f_C3CMR", "icv_m7_ownsrDFTinv_6_scale_32f", "_ZNK2cv3ocl6Device10extensionsEv", "icv_l9_owniExchange256_8u", "icv_m7_cv_ownippiFilterMax_8u_Col", "icv_y8_ownscDFTfwd_7_scale_32fc", "icv_m7_ownsSub_8u_NegSfs", "_ZN3tbb8internal3rml14private_serverD1Ev", "icv_y8_ippiThreshold_GTVal_8u_C1IR", "_ZN2cvneERKNS_3MatEd", "icv_m7_ippiAnd_8u_C1R", "ippicviTranspose_16u_C4R", "icv_l9_ippsMul_64fc", "Java_org_opencv_ml_SVMSGD_getWeights_10", "icv_y8_ownsInitTabDftBase_64f", "_ZN2cv7fisheye42estimateNewCameraMatrixForUndistortRectifyERKNS_11_InputArrayES3_RKNS_5Size_IiEES3_RKNS_12_OutputArrayEdS7_d", "_ZN2cv6detail16MultiBandBlenderC1Eiii", "ippicviAddProduct_32f_C1IMR", "icv_m7_owniExchange_8u_I", "Java_org_opencv_features2d_DescriptorMatcher_isMaskSupported_10", "ippicviFilterGaussianBorder_16s_C1R", "icv_l9_ippsLn_64f_A50", "icv_l9_ippiFilterMaxBorder_8u_C3R", "Java_org_opencv_photo_MergeMertens_process_10", "Java_org_opencv_calib3d_Calib3d_correctMatches_10", "Java_org_opencv_features2d_Params_get_1maxConvexity_10", "_ZNK2cv3ocl6Device15maxConstantArgsEv", "cvGetPerspectiveTransform", "icv_y8_ownFilterBorder32f_16u_C4R", "cvReadRawDataSlice", "_ZN2cv14findHomographyERKNS_11_InputArrayES2_RKNS_12_OutputArrayEid", "Java_org_opencv_features2d_AKAZE_getNOctaves_10", "icv_m7_ownResize3Linear16s", "icv_m7_ippiNormRel_L2_16u_C1MR", "ippicviFilterLaplacianBorder_32f_C1R", "icv_y8_ownFilterColumnPipeline_16u_C1R_5x5_P8Y8cn", "icv_l9_ownpi_NormInfDiff_16s_C4R", "icv_l9_ippiResizeLinear_16s_C1R", "icv_l9_owniFilter32f_16u_C3R_g9e9_0", "_ZN2cv4UMat8copySizeERKS0_", "icv_l9_ippiNormDiff_Inf_16u_C3CMR", "_ZNK2cv3ocl6Device15image3DMaxWidthEv", "icv_l9_ippiFilterGaussianInit", "icv_y8_ownFilterMaxRow03_8u_C4R", "_ZN2cv4readERKNS_8FileNodeERNS_3MatERKS3_", "icv_l9_ownMean_StdDev_32f_C3CMR_HSW", "icv_y8_ippiNormRel_L1_32f_C1R", "Java_org_opencv_imgproc_Imgproc_sepFilter2D_10", "icv_m7_ownsrDFTfwd_12_scale_32f", "cvThreshold", "_ZN2cv4cuda18ensureSizeIsEnoughEiiiRKNS_12_OutputArrayE", "icv_y8_ownscDFTfwd_7_64fc", "Java_org_opencv_core_Core_borderInterpolate_10", "icv_l9_owniCorrectAutoNormMean_32f_C1R", "icv_y8_owniFilter_32f_C3R_v8u8_7", "own_ipps_sSin_E7EPnnn", "icv_l9_owniFilter32f_16u_C1R_g9e9_2", "cvPutText", "cvInitTreeNodeIterator", "icv_l9_ippiCopyReplicateBorder_32s_C4IR", "icv_l9_ownFilterMinRow06_8u_C1R", "icv_m7_ippiCopy_32s_C1MR", "own_ipps_sLn_L9HAynn", "_ZN2cv10BOWTrainerD2Ev", "icv_m7_ippiCrossCorrNormGetBufferSize", "icv_y8_ownFilterMaxRow06_8u_C3R", "own_ipps_sPowx_L9HAynn", "icv_l9_cv_ownippiFilterMax_32f_Msk", "_ZNK2cv4cuda10DeviceInfo8memPitchEv", "_ZN2cv9videostab20FromFileMotionReaderC1ERKNS_6StringE", "ippicviConvert_8s32s_C1R", "icv_m7_ownsGetSizeTabDftInvRec_32f", "ippicviSwapChannels_16u_C4R", "_ZNK2cv4cuda10DeviceInfo12minorVersionEv", "Java_org_opencv_core_Core_absdiff_10", "icv_y8_ownFilterRowBorderPipeline_16u_C3R_X", "icv_m7_ownsMul_8u_PosSfs", "icv_y8_ownscDFTinv_15_64fc", "_ZN2cv9videostab12calcFlowMaskERKNS_3MatES3_S3_fS3_S3_RS1_", "Java_org_opencv_core_Core_solve_11", "_ZN3tbb18task_group_context13register_withEPNS_8internal17generic_schedulerE", "icv_y8_ownpi_NormInf_16u_C3R", "_ZN2cv8Subdiv2D11calcVoronoiEv", "Java_org_opencv_imgproc_Imgproc_initWideAngleProjMap_10", "_ZN3tbb8internal13observer_list24do_notify_exit_observersEPNS0_14observer_proxyEb", "icv_l9_ippiMirror_16s_C1IR", "icv_l9_ownRow4Linear32f", "_ZN2cv7fisheye13stereoRectifyERKNS_11_InputArrayES3_S3_S3_RKNS_5Size_IiEES3_S3_RKNS_12_OutputArrayESA_SA_SA_SA_iS7_dd", "icv_m7_ownpi_NormL1Rel_8u_C1R", "_ZNK2cv11_InputArray4typeEi", "icv_m7_ippiMirror_16s_C3R", "Java_org_opencv_ml_RTrees_getCalculateVarImportance_10", "icv_l9_ippiMinMaxIndx_32f_C1MR", "icv_l9_ippiMinMaxIndx_16u_C1R", "icv_m7_ownsrDFTfwd_5_scale_32f", "Java_org_opencv_core_Core_checkRange_10", "_ZN2cv8Stitcher11matchImagesEv", "_ZN2cv3ocl32buildOptionsAddMatrixDescriptionERNS_6StringERKS1_RKNS_11_InputArrayE", "icv_l9_ownCalcBorderR1Linear32f", "_ZN2cv4cuda11TargetArchs20hasEqualOrGreaterPtxEii", "icv_m7_ippiCopy_8u_C1R", "icv_m7_ippiCopyReplicateBorder_32s_C1R", "icv_y8_owniCopy_8u_C4P4R_cn", "icv_y8_ippiRGBToGray_32f_C3C1R", "icv_m7_ownFilterColumnPipeline_32f_C1R_5x5_W7cn", "icv_l9_ownscDftInv_Fact11_64fc", "icv_m7_ownFilterMaxRow01_32f_C1R", "icv_y8_ownsrDFTfwd_14_scale_32f", "icv_y8_ownscDftFwd_Prime16_64fc", "Java_org_opencv_imgproc_Imgproc_getDerivKernels_10", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "_Unwind_GetDataRelBase", "icv_y8_ownsrDftInv_Conv_32f", "icv_y8_ownFilterMinRow01_8u_C3R", "icv_m7_ippiThreshold_LTVal_16s_C1IR", "_ZN2cv5AGASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEibi", "_ZNK3tbb18captured_exception4whatEv", "_ZN2cv8internal18WriteStructContextC1ERNS_11FileStorageERKNS_6StringEiS6_", "icv_y8_owniAutoSS_C1R", "icv_l9_ownscDFTinv_9_scale_32fc", "cvMoveWindow", "icv_m7_ownsrDFTinv_15_scale_64f", "icv_m7_ippiNormDiff_Inf_32f_C1R", "icv_m7_ownFilterMaxRow07_32f_C3R", "_ZN2cv3RNG8gaussianEd", "_ZN9CvLevMarqC2Eii14CvTermCriteriab", "icv_m7_cv_ownippiFilterMax_16s_Col", "ownGetFeature", "Java_org_opencv_features2d_Params_delete", "_ZN2cv11writeScalarERNS_11FileStorageERKNS_6StringE", "__sfp_handle_exceptions", "cvCloneGraph", "ippicvsLn_64f_A50", "ippicviCopy_32f_P3C3R", "Java_org_opencv_ml_Boost_setBoostType_10", "icv_y8_ippiTranspose_8u_C3R", "icv_l9_ippiMorphologyBorderInit_32f_C1R", "icv_m7_ippiComputeThreshold_Otsu_8u_C1R", "_ZN2cv5AKAZE6createEiiifiii", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "icv_l9_ippiNormDiff_Inf_8u_C4R", "_ZN2cv16FileNodeIteratormmEv", "_ZN2cv3ocl7Image2DD1Ev", "_ZNKSt13bad_exception4whatEv", "icv_y8_ippiNormDiff_Inf_32f_C1R", "icv_y8_ippiSet_32f_C3MR", "icv_l9_owns_sDctFwd_Conv_32f", "ippicviDilateBorder_32f_C1R", "_ZNK2cv21DetectionBasedTracker31calcTrackedObjectPositionToShowEiRNS0_12ObjectStatusE", "icv_m7_ippiOr_8u_C1R", "icv_y8_ippiMinMaxIndx_32f_C1MR", "icv_m7_ownscDFTfwd_14_scale_32fc", "icv_l9_ippiFilterSobelHorizSecondBorder_32f_C1R", "icv_y8_owns_cFFTfwd_16_64fc", "icv_l9_ippiMean_16s_C4R", "Java_org_opencv_photo_Photo_createMergeMertens_11", "_ZN2cv3hal14addWeighted32sEPKimS2_mPimiiPv", "_ZNK2cv3LDA4saveERNS_11FileStorageE", "_ZN2cv2ml3SVM14getDefaultGridEi", "icv_l9_ownsrDFTinv_7_scale_64f", "own_ipps_dPowx_L9HAynn", "Java_org_opencv_imgproc_Imgproc_accumulateProduct_10", "_ZN3tbb8internal3rml14private_serverD0Ev", "icv_l9_owniFilter_32f_C1R_g9e9_8", "icv_m7_ippiMirror_16u_C3R", "_ZN2cv23estimateAffinePartial2DERKNS_11_InputArrayES2_RKNS_12_OutputArrayEidmdm", "ippicvsDFTInv_CToC_64fc", "icv_l9_ownippiErodeBorder_32f_C3R", "icv_y8_cv_ownippiFilterMin_16s_Col", "icv_y8_owns_rFFTfwd_16_scale_64f", "_ZN2cv11FileStorage4openERKNS_6StringEiS3_", "icv_l9_ippiSet_32s_C4MR", "_ZN2cv3ogl6BufferC1Ev", "icv_l9_ippiNormDiff_Inf_16s_C4R", "ippicvsDFTInv_PackToR_32f", "_ZN3tbb8internal12NFS_AllocateEmmPv", "cvCloneMat", "icv_m7_ownpi_NormL1Diff_32f_C4R", "icv_m7_ownsrDFTinv_9_32f", "_ZN3tbb8internal6marketC2Ejjm", "icv_l9_ippiConvert_8u16s_C1R", "_ZN2cv14insertImageCOIERKNS_11_InputArrayEPvi", "icv_y8_ownsrDftFwd_PrimeFact_32f", "_ZN2cv6detail18BundleAdjusterBase8estimateERKSt6vectorINS0_13ImageFeaturesESaIS3_EERKS2_INS0_11MatchesInfoESaIS8_EERS2_INS0_12CameraParamsESaISD_EE", "icv_m7_ippiNormDiff_L2_8u_C4R", "Java_org_opencv_features2d_BOWKMeansTrainer_delete", "icv_l9_ownNormDiff_L2_8u_C3CMR_HSW", "ippicviCompare_16u_C1R", "_ZN2cv4UMatC2ERKS0_RKNS_5RangeES5_", "icv_m7_myHSVToRGB_8u_C3R", "icv_l9_ownpi_NormL1Rel_16s_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerAvr", "_ZN2cv13destroyWindowERKNS_6StringE", "icv_y8_ownsrDFTinv_3_32f", "cvGetReal1D", "_ZN3tbb8internal17generic_scheduler16wait_until_emptyEv", "icv_m7_ownsrDFTinv_10_scale_32f", "Java_org_opencv_video_DualTVL1OpticalFlow_setLambda_10", "icv_y8_ippiRGBToXYZ_32f_C3R", "cvFindGraphEdgeByPtr", "_ZN2cv6detail12AffineWarper9warpPointERKNS_6Point_IfEERKNS_11_InputArrayES8_", "icv_y8_ippiDistanceTransform_3x3_8u_C1R", "_ZN2cv9AlgorithmC2Ev", "icv_y8_cv_ownMorphologyBorderConstInMemGetSize", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5", "icv_l9_owniFilter_32f_C1R_g9e9_6", "icv_l9_innerRGBToXYZ_16u_C3R", "icv_m7_ownsSet_8u", "Java_org_opencv_photo_MergeExposures_process_10", "icv_m7_ownscDFTfwd_13_scale_64fc", "_ZN2cv3ocl7Image2DaSERKS1_", "icv_y8_ownscDFTfwd_11_scale_64fc", "cvDiv", "icv_y8_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "icv_l9_ownMorphEllipseGetBufferSize", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5", "icv_y8_owniFilter_32f_C1R_v8u8_1", "Java_org_opencv_imgproc_Imgproc_drawContours_10", "icv_y8_owns_cFftFwd_Large_32fc", "_ZN3tbb18captured_exceptionD1Ev", "ippicvsDFTInv_CToC_32fc", "icv_m7_ownpi_NormL2Diff_32f_C1R", "Java_org_opencv_ml_SVMSGD_setInitialStepSize_10", "icv_y8_ownFilterMaxRow11_32f_C3R", "Java_org_opencv_ml_SVM_getClassWeights_10", "icv_l9_ownColLinear16u", "ippicviLUTPalette_8u_C4R", "icv_l9_owns_sDctInv_PreMul_32f", "Java_org_opencv_features2d_BRISK_create_12", "icv_y8_ownFilterMaxRow03_32f_C3R", "_ZN2cv6detail12DisjointSets13findSetByElemEi", "icv_y8_ownNormDiff_Inf_16u_C1MR_P8Y8", "icv_y8_ippiResizeCubic_32f_C4R", "icv_l9_owns_cFFTfwd_4_64fc", "Java_org_opencv_imgproc_Imgproc_undistort_10", "icv_l9_ownFilterRowBorderPipeline_32f_C3R_5x5", "_ZN3tbb18task_group_contextD2Ev", "cvMinEnclosingCircle", "ippicvsSqrt_32f_A21", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setMinEigThreshold_10", "icv_m7_ownsSub_8u", "_ZN2cv14setTrackbarMaxERKNS_6StringES2_i", "Java_org_opencv_video_FarnebackOpticalFlow_setPolySigma_10", "_ZNK2cv3ocl6Kernel5emptyEv", "icv_y8_ippiNorm_Inf_32f_C4R", "icv_m7_ownpi_NormL2_8u_C1R", "icv_y8_owniFilter_32f_C4R_v8u8_1NA", "icv_y8_ownFilterMinRow05_32f_C4R", "Java_org_opencv_objdetect_BaseCascadeClassifier_delete", "cvCreatePOSITObject", "icv_y8_owns_sDctInv_Conv_32f", "_ZN2cv3ogl6Arrays7releaseEv", "ippicviSum_32f_C1R", "_Z17Mat_to_vector_intRN2cv3MatERSt6vectorIiSaIiEE", "icv_m7_ippiNormRel_L1_32f_C1MR", "icv_m7_ippsDotProd_32f64f", "_Z19vector_Vec4f_to_MatRSt6vectorIN2cv3VecIfLi4EEESaIS2_EERNS0_3MatE", "icv_y8_ownsMul_8u", "_ZN2cv3MatC2ERKS0_RKNS_5Rect_IiEE", "_ZN2cv8superres27createOptFlow_DualTVL1_CUDAEv", "icv_l9_ownsFFTGetBufSize_R_32f", "icv_l9_ownFilterMaxRow13_8u_C3R", "Java_org_opencv_imgproc_CLAHE_apply_10", "__trunctfdf2", "icv_l9_ippsDFTInit_C_64fc", "icv_m7_ippsCopy_8u", "icv_m7_ownscDFTinv_14_scale_64fc", "icv_m7_owns_initTabBitRev", "icv_m7_ippiSubC_32f_C1R", "icv_m7_ownFilterBorder16s_16s_C1R", "_ZNK2cv3PCA7projectERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_y8_cv_ownippiFilterMax_16u_Row", "icv_y8_ownscDFTinv_6_64fc", "icv_y8_ippiNormDiff_L1_16u_C3R", "icv_l9_ownpi_NormInfDiff_16u_C3R", "Java_org_opencv_core_Mat_n_1col", "_ZNK2cv8FileNode7readObjEv", "_ZN2cv8superres12arrGetGpuMatERKNS_11_InputArrayERNS_4cuda6GpuMatE", "_ZN2cv8Subdiv2D7newEdgeEv", "_ZN2cv11cornerScoreILi12EEEiPKhPKii", "_ZN2cv7directx22getTypeFromDXGI_FORMATEi", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "icv_m7_ippiMean_16u_C3CMR", "icv_y8_ippiConvert_32f8u_C1R", "icv_m7_ownFilterMinRow13_32f_C4R", "icv_l9_ownMean_StdDev_16u_C3CMR_HSW", "_ZNK2cv8FileNode7isNamedEv", "own_ipps_sLn_Y8HAynn", "icv_y8_owns_cFFTinv_32_32fc", "icv_l9_IsOverlapedROI", "icv_y8_ippiFilterLaplacianBorder_32f_C1R", "icv_l9_ownsrDFTfwd_7_64f", "_ZN2cv6detail20focalsFromHomographyERKNS_3MatERdS4_RbS5_", "_ZN2cv4cuda6GpuMat6uploadERKNS_11_InputArrayERNS0_6StreamE", "icv_m7_ownFilterMaxRow15_32f_C4R", "icv_l9_owniFilter32f_8u_C1R_g9e9_8", "own_ipps_dPowx_U8EPnnn", "icv_l9_ownFilterMinRow09_32f_C3R", "ippicviNormDiff_L1_8u_C1MR", "_ZN2cv3hal6cmp16uEPKtmS2_mPhmiiPv", "icv_y8_ownDilateEllipseBorderReplicate_8u_C1R", "icv_m7_owncvGetMaxNumThreads", "icv_y8_ownscDftInv_Prime8_64fc", "icv_l9_ownpi_NormL1Diff_32f_C4R", "_ZN2cv6reduceERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "icv_y8_ownsMaxEvery_32f", "_ZN2cv7directx25convertFromD3D11Texture2DEP15ID3D11Texture2DRKNS_12_OutputArrayE", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC2ERKS1_", "ippicviNorm_L1_32f_C1R", "ippicviLUTPalette_8u_C3R", "icv_m7_ippiFilterSobelVertSecondBorderGetBufferSize", "_ZN2cv9seqRemoveEP5CvSeqi", "icv_l9_ippiCopyReplicateBorder_16u_C4R", "_ZN2cv3hal8merge16uEPPKtPtii", "icv_l9_ownFilterMaxRow06_32f_C4R", "_ZN2cv3hal7merge8uEPPKhPhii", "icv_y8_cv_ownippiFilterMax_32f_Row", "icv_m7_ippiCopy_8u_C3R", "_ZN2cv10getSeqElemEPK5CvSeqi", "icv_l9_ownFilterMinRow09_8u_C3R", "Java_org_opencv_core_Mat_n_1elemSize1", "ippicviAbsDiff_32f_C1R", "icv_m7_ownsrDFTinv_10_scale_64f", "icv_m7_ownFilterRowBorderPipeline_32f_C3R_3x3_W7cn", "icv_m7_cv_ownippiFilterMax_16u_Col", "_ZNK2cv4cuda10DeviceInfo18maxTexture2DMipmapEv", "icv_m7_ownippiFilterMinGetBufferSize_8u_C4R", "icv_y8_ippiResizeGetBufferSize_8u", "icv_y8_ownsSub_16s", "cvHaveImageWriter", "icv_y8_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_m7_owncvGetCacheSize", "_ZN2cv12pencilSketchERKNS_11_InputArrayERKNS_12_OutputArrayES5_fff", "icv_l9_ippiResizeLinear_16s_C4R", "icv_l9_ownResize3Cubic16s", "ippicviFilterMedianBorder_16s_C1R", "Java_org_opencv_core_Mat_n_1ones__III", "_ZNK2cv5MatOp3addERKNS_7MatExprERKNS_7Scalar_IdEERS1_", "icv_l9_ippiNorm_L1_8u_C3R", "icv_y8_owns_rFFTinv_16_64f", "Java_org_opencv_imgproc_Imgproc_ellipse_14", "_ZN2cv11addWeightedERKNS_11_InputArrayEdS2_ddRKNS_12_OutputArrayEi", "icv_y8_owniFilter_32f_C4R_v8u8_3", "_ZN2cv5splitERKNS_3MatEPS0_", "icv_l9_ownscDFTfwd_3_64fc", "icv_y8_ownFilterColumnPipeline_16u_C1R_3x3_P8Y8cn", "icv_y8_ownpi_NormInfRel_8u_C1R", "_ZN2cvmiERKNS_7MatExprERKNS_7Scalar_IdEE", "icv_y8_ownscDFTinv_13_32fc", "icv_l9_ownFilterMinRow13_8u_C1R", "cvReadChainPoint", "Java_org_opencv_imgproc_Imgproc_getDerivKernels_11", "Java_org_opencv_photo_Photo_createCalibrateRobertson_11", "icv_m7_ippiXYZToRGB_8u_C3R", "Java_org_opencv_core_Core_meanStdDev_10", "icv_y8_ippiNormDiff_Inf_16u_C1R", "icv_m7_ippiCopyReplicateBorder_8u_C4IR", "_ZN2cv4readERKNS_8FileNodeERNS_9SparseMatERKS3_", "icv_m7_owns_cFFTfwd_16_scale_64fc", "icv_y8_ownps_Mul_16u_Sfs", "_ZN2cv3ogl9Texture2DC2Ev", "Java_org_opencv_photo_AlignMTB_getMaxBits_10", "icv_y8_owns_initTabTwdCcsRec_64f", "Java_org_opencv_core_Core_PCABackProject_10", "_ZN3tbb8internal8governor19init_scheduler_weakEv", "icv_y8_ippiFFTInit_R_32f", "icv_y8_owniConvert_16u8s_ccode", "ippicviFilterMaxBorder_32f_C4R", "Java_org_opencv_video_KalmanFilter_get_1measurementMatrix_10", "Java_org_opencv_core_Core_add_13", "_ZN2cv4cuda6GpuMat6uploadERKNS_11_InputArrayE", "icv_y8_owns_sDctInv_Dir_32f", "Java_org_opencv_features2d_FastFeatureDetector_setThreshold_10", "_ZN3tbb8internal14dynamic_unlinkEPv", "icv_y8_owns_cFFTinv_32_scale_64fc", "icv_y8_ownsAdd_8u", "_ZN2cv9Feature2D6detectERKNS_11_InputArrayERSt6vectorIS4_INS_8KeyPointESaIS5_EESaIS7_EES3_", "ippicviTranspose_16s_C3IR", "icv_l9_ippiThreshold_LTVal_8u_C1IR", "icv_m7_ownFilterMinRow13_32f_C1R", "_ZNK2cv5MatOp3absERKNS_7MatExprERS1_", "icv_m7_ippiResizeGetBufferSize_16u", "cvStereoRectifyUncalibrated", "icv_m7_ownFilterMinRow07_8u_C4R", "_ZN2cv3ogl22convertFromGLTexture2DERKNS0_9Texture2DERKNS_12_OutputArrayE", "_ZN2cv3hal11cvtHSVtoBGREPKhmPhmiiiibbb", "icv_l9_ownscDft_Conv_32fc", "icv_m7_ownscDFTfwd_10_scale_32fc", "icv_l9_ippsSet_32f", "_ZN2cv17textureFlatteningERKNS_11_InputArrayES2_RKNS_12_OutputArrayEffi", "icv_m7_ippiResizeGetBufferSize_32f", "ippicviMulC_16s_C1IRSfs", "Java_org_opencv_imgproc_Imgproc_sqrBoxFilter_11", "icv_y8_owniFilterSobelHorizBorder2_32f_C1R", "icv_l9_ownscDFTfwd_3_32fc", "_ZNK2cv4cuda10DeviceInfo18maxTexture1DMipmapEv", "icv_y8_ippiFilterSobelHorizSecondBorderGetBufferSize", "_ZN2cv3LDA11reconstructERKNS_11_InputArrayE", "Java_org_opencv_video_DualTVL1OpticalFlow_setUseInitialFlow_10", "icv_l9_ownDilateEllipseBorderReplicate_32f_C4R", "icv_y8_ippiMax_16u_C1R", "_ZN2cv23createAffineTransformerEb", "_ZNK2cv4cuda5Event15queryIfCompleteEv", "_ZN2cv9floodFillERKNS_17_InputOutputArrayES2_NS_6Point_IiEENS_7Scalar_IdEEPNS_5Rect_IiEES6_S6_i", "_ZN2cv5instr8NodeDataaSERKS1_", "icv_m7_ippiMulC_32f_C1IR", "icv_m7_ippiAddProduct_32f_C1IR", "icv_y8_ownFilterMaxRow07_32f_C3R", "_ZN2cv5traceERKNS_11_InputArrayE", "cvGetImageROI", "_ZN2cv2ml30createConcentricSpheresTestSetEiiiRKNS_12_OutputArrayES3_", "_ZN2cv15NAryMatIteratorppEi", "_ZNK2cv3ocl6Device15image3DMaxDepthEv", "icv_l9_owns_initDctInv_Fft_32f", "_ZNK2cv3PCA7projectERKNS_11_InputArrayE", "icv_m7_innerXYZToRGB_32f_C3R", "icv_l9_ippsFlip_16u_I", "icv_m7_ownFilterMaxColumn03_8u_C1R", "icv_y8_ownFilterMaxRow06_32f_C3R", "_ZNK2cv11FileStorage8isOpenedEv", "_ZN2cv9videostab27MotionStabilizationPipeline9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiEPS3_", "icv_y8_ippiErodeBorder_8u_C4R", "_ZN2cv9videostab36TranslationBasedLocalOutlierRejectorC1Ev", "icv_l9_ownsMaxEvery_16u", "icv_m7_ippiFilterBorder_16s_C1R", "icv_own_ipps_zError", "_ZN2cv17distanceTransformERKNS_11_InputArrayERKNS_12_OutputArrayES5_iii", "Java_org_opencv_imgproc_Imgproc_getGaussianKernel_11", "icv_l9_ownippiFilterMaxBorderReplicate_32f_C4R", "icv_y8_ippiCopyConstBorder_16u_C3R", "_ZN2cv11sepFilter2DERKNS_11_InputArrayERKNS_12_OutputArrayEiS2_S2_NS_6Point_IiEEdi", "icv_m7_ownFilterMaxRow04_8u_C4R", "icv_y8_owns_cFftInv_Large_64fc", "icv_y8_ownippiFilterMinBorderReplicate_32f_C3R", "icv_l9_owniCrossCorrNorm_FullSame_32f_C1R", "icv_l9_owns_cFFTinv_8_scale_32fc", "_ZN2cv6detail11MatchesInfoC1ERKS1_", "_ZN3tbb8internal6market25update_arena_top_priorityERNS0_5arenaEl", "icv_y8_ownsMulC_32f", "_ZN2cv25decomposeProjectionMatrixERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_S5_S5_S5_S5_", "_ZN2cvorERKNS_3MatES2_", "_ZN2cv11polarToCartERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_b", "icv_y8_ippiNormRel_L1_8u_C1MR", "icv_m7_ippiSet_32f_C1R", "icv_y8_ownscDFTfwd_6_32fc", "Java_org_opencv_features2d_GFTTDetector_getHarrisDetector_10", "_ZN2cv4lineERKNS_17_InputOutputArrayENS_6Point_IiEES4_RKNS_7Scalar_IdEEiii", "_ZN2cvplERKNS_7MatExprERKNS_7Scalar_IdEE", "icv_l9_ippiTranspose_32f_C3R", "icv_y8_owns_cFFTfwd_32_64fc", "icv_m7_ippiResizeGetSrcOffset_16s", "_ZN2cv4readERKNS_8FileNodeERNS_6StringERKS3_", "_ZN3tbb18task_group_context7bind_toEPNS_8internal17generic_schedulerE", "ippicviFilterGaussianInit", "icv_m7_ippiConvert_16s32f_C1R", "icv_y8_owns_rFFTinv_32_32f", "icv_y8_ownFilterRowBorderPipeline_32f_C3R_5x5_P8Y8cn", "_ZNK10__cxxabiv117__pbase_type_info10__do_catchEPKSt9type_infoPPvj", "icv_m7_ippiFilterMaxBorder_8u_C3R", "icv_m7_ownpi_NormL2Rel_32f_C1R", "icv_m7_owncvRowMatrAlErr", "Java_org_opencv_imgproc_Imgproc_rotatedRectangleIntersection_10", "_ZN2cv11FileStorageC1EP13CvFileStorageb", "_ZNKSt15__exception_ptr13exception_ptrcvMS0_FvvEEv", "icv_y8_ownFilterRowBorderPipeline_16u_C3R_3x3", "icv_m7_ownsrDFTfwd_14_64f", "cv2DRotationMatrix", "icv_y8_ippiMean_32f_C4R", "icv_l9_ownscDFTfwd_7_64fc", "icv_y8_ippiFilterGaussianBorder_16u_C1R", "icv_m7_ippiSet_32f_C4MR", "_ZN2cv4cuda6GpuMat5setToENS_7Scalar_IdEERKNS_11_InputArrayERNS0_6StreamE", "own_ipps_sExp_E7EPnnn", "icv_y8_ippiCopyReplicateBorder_32s_C1IR", "icv_l9_ippiMorphologyBorderGetSize_32f_C3R", "_ZN2cv12denoise_TVL1ERKSt6vectorINS_3MatESaIS1_EERS1_di", "ippicviSqrDistanceNormGetBufferSize", "icv_y8_ippsExp_64f_A50", "icv_l9_ippsFFTInv_PermToR_64f", "icv_y8_ippiTranspose_16u_C4R", "icv_l9_ippiFilterMaxBorder_32f_C3R", "_ZN2cv16findEssentialMatERKNS_11_InputArrayES2_dNS_6Point_IdEEiddRKNS_12_OutputArrayE", "icv_y8_ippiCrossCorrNorm_32f_C1R", "own_ipps_sPowx_U8EPnnn", "icv_l9_ownNorm_L1_16u_C1MR_HSW", "icv_l9_ownFilterRowBorderPipeline_16u_C1R_3x3_P8Y8cn", "_ZN2cv3hal12cvtGraytoBGREPKhmPhmiiii", "Java_org_opencv_ml_Boost_create_10", "icv_m7_owns_rFFT_1_scale_64f", "icv_m7_ownpi_NormL2_16s_C1R", "icv_l9_ippiSqrDistanceNorm_32f_C1R", "icv_y8_ownCalcBorderR3Cubic16s", "_ZN2cv3PCAC1ERKNS_11_InputArrayES3_id", "icv_y8_ippiLUTPalette_8u_C4R", "icv_y8_ippiAddSquare_32f_C1IR", "icv_m7_ippsZero_16s", "Java_org_opencv_features2d_Params_set_1minInertiaRatio_10", "icv_y8_owns_cRealRecombine_32f", "icv_y8_ippsFFTInv_CToC_64fc", "_ZNK2cv8Subdiv2D7edgeOrgEiPNS_6Point_IfEE", "icv_l9_ippiDCTFwd_32f_C1R", "cvNot", "_ZN2cv17DescriptorMatcher5matchERKNS_11_InputArrayERSt6vectorINS_6DMatchESaIS5_EES3_", "_ZN2cv10medianBlurERKNS_11_InputArrayERKNS_12_OutputArrayEi", "Java_org_opencv_objdetect_CascadeClassifier_getOriginalWindowSize_10", "Java_org_opencv_photo_CalibrateDebevec_getRandom_10", "ippicviTrueDistanceTransform_8u32f_C1R", "Java_org_opencv_calib3d_StereoMatcher_getNumDisparities_10", "icv_m7_ippiCanny_16s8u_C1R", "cvSeqSlice", "_ZN2cv4readERKNS_8FileNodeERSt6vectorINS_8KeyPointESaIS4_EE", "_ZN2cv2ml9ParamGridC2Ev", "icv_y8_ippiResizeGetSize_8u", "_ZN2cv5flann20CompositeIndexParamsC1EiiiN7cvflann20flann_centers_init_tEf", "_ZN2cv6detail21BestOf2NearestMatcher5matchERKNS0_13ImageFeaturesES4_RNS0_11MatchesInfoE", "Java_org_opencv_features2d_BOWKMeansTrainer_cluster_11", "ippicvsSortAscend_8u_I", "icv_m7_ippiNorm_L1_8u_C1MR", "_ZN2cv4cuda12getOutputMatERKNS_12_OutputArrayEiiiRNS0_6StreamE", "ippicviNormRel_L1_16u_C1R", "icv_y8_ippiThreshold_GTVal_8u_C1R", "icv_y8_ippiFilterSobelVertBorderGetBufferSize", "icv_l9_ownFilterMinRow03_32f_C1R", "icv_l9_ippiMirror_16s_C1R", "icv_y8_owniFilter_32f_C1R_v8u8_7", "Java_org_opencv_features2d_FeatureDetector_read_10", "Java_org_opencv_video_FarnebackOpticalFlow_getNumLevels_10", "Java_org_opencv_video_DualTVL1OpticalFlow_getScaleStep_10", "icv_m7_ownsrDFTinv_12_scale_32f", "Java_org_opencv_objdetect_HOGDescriptor_getDescriptorSize_10", "Java_org_opencv_imgproc_Imgproc_matchShapes_10", "icv_y8_owniCrossCorrValid_NormLevel_32f_C1R", "icv_y8_ownscDftInv_Prime13_64fc", "_ZN2cv3hal6max16uEPKtmS2_mPtmiiPv", "icv_l9_ippiErodeBorder_8u_C3R", "ippicviResizeGetBufferSize_16u", "_ZTv0_n24_N2cv9Feature2DD0Ev", "icv_l9_ippiNormRel_L1_16s_C1R", "icv_y8_owns_cFftInv_Fact8_32fc", "icv_y8_ippiDFTInv_CToC_32fc_C1R", "icv_y8_ippsMinIndx_32f", "_ZN2cv3ogl9Texture2DC1ERKNS_11_InputArrayEb", "icv_l9_ippiAddC_32f_C1IR", "icv_l9_ownFilterRowBorderPipeline_32f_C3R_3x3_G9E9cn", "icv_y8_owniTransposeWxH_16uC4", "icv_l9_ownscDftInv_Prime16_64fc", "_ZN2cv7MomentsC1Edddddddddd", "icv_l9_owns_cFFT_2_32fc", "icv_y8_ippiDFTInv_PackToR_32f_C1R", "icv_l9_ippiAdd_32f_C1IR", "_ZN2cv6detail10Timelapser7processERKNS_11_InputArrayES4_NS_6Point_IiEE", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarInit_10", "icv_l9_ownscDftFwd_Prime11_32fc", "_ZN2cv6detail17BundleAdjusterRay9calcErrorERNS_3MatE", "_ZN2cv3hal5cmp8sEPKamS2_mPhmiiPv", "icv_m7_ippiHistogram_8u_C1R", "icv_l9_dct_8x8_inv_32f", "icv_y8_ippiFilterBorder_16s_C4R", "icv_l9_ippiCopyReplicateBorder_16s_C3IR", "icv_m7_ownpi_NormInf_16s_C1R", "icv_y8_ownFilterMinRowVH_32f_C4R", "icv_m7_ownpi_NormL1_16s_C4R", "icv_l9_ippiConvert_16u8s_C1RSfs", "icv_l9_ownFilterRowBorderPipeline_16s_C3R_5x5_H9L9cn", "_ZNK2cv3ocl6Device18deviceVersionMajorEv", "icv_y8_ippiMirror_32s_C4R", "_ZN3tbb8internal18concurrent_monitor18notify_one_relaxedEv", "icv_y8_owncvGetMaxNumThreads", "icv_l9_ownRow3Linear16u", "icv_m7_owns_cFftFwd_Large_32fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "Java_org_opencv_photo_Photo_denoise_1TVL1_11", "icv_l9_ownippiFilterMinBorderReplicate_32f_C4R", "Java_org_opencv_objdetect_HOGDescriptor_detect_10", "_ZN2cv21DetectionBasedTracker9addObjectERKNS_5Rect_IiEE", "_ZN2cv6fontQtERKNS_6StringEiNS_7Scalar_IdEEiii", "_Unwind_Resume_or_Rethrow", "Java_org_opencv_ml_LogisticRegression_setTermCriteria_10", "icv_l9_ownsrDFTinv_10_32f", "icv_m7_owniFlipCopy_16u_C3", "_ZNSt9bad_allocD2Ev", "_ZN2cv3Mat10deallocateEv", "icv_l9_owniTranspose8u_C1R_core2", "icv_m7_ippsDCTInvInit_32f", "cvCanny", "icv_y8_ippiCopy_8u_C4R", "icv_m7_ippiRGBToXYZ_8u_C3R", "_ZN2cv15BriskScaleSpace12getKeypointsEiRSt6vectorINS_8KeyPointESaIS2_EE", "cvNextTreeNode", "cvFindNextContour", "_ZN2cv17CommandLineParser4Impl12apply_paramsERKNS_6StringES4_", "_ZN2cv13projectPointsERKNS_11_InputArrayES2_S2_S2_S2_RKNS_12_OutputArrayES5_d", "Java_org_opencv_ml_TrainData_setTrainTestSplit_11", "cvCopyHist", "_ZN2cv15bilateralFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiddi", "_ZN3tbb8internal14observer_proxy15get_v6_observerEv", "icv_m7_ippiFilterMedianBorder_16s_C1R", "Java_org_opencv_features2d_BOWTrainer_cluster_10", "Java_org_opencv_imgproc_Subdiv2D_Subdiv2D_11", "_ZNK2cv5MatOp17augAssignSubtractERKNS_7MatExprERNS_3MatE", "JNI_OnLoad", "icv_y8_ownFilterBorder32f_16s_C4R", "icv_m7_ownippiMorphologyBorderReplicateInMemInit_8u_C4R", "_Z21Mat_to_vector_Point2dRN2cv3MatERSt6vectorINS_6Point_IdEESaIS4_EE", "_ZNK2cv4cuda10DeviceInfo16asyncEngineCountEv", "icv_l9_ippsPowx_32f_A21", "icv_m7_ippiFilterColumnPipelineGetBufferSize_16s8u_C1R", "icv_l9_ownscDFTfwd_15_64fc", "_ZNK2cv3Mat9convertToERKNS_12_OutputArrayEidd", "cvWriteFileNode", "icv_l9_ippiCopyConstBorder_16u_C3R", "icv_y8_ippiDCTFwdGetSize_32f", "Java_org_opencv_photo_TonemapDurand_setSigmaSpace_10", "icv_l9_owniNormLevel_32f_C1R", "icv_l9_ownFilterRowBorderPipeline_16u_C1R_5x5_P8Y8cn", "ippicvGetCpuFeatures", "Java_org_opencv_photo_MergeExposures_delete", "icv_m7_ownpi_NormInfDiff_32f_C3R", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "ippicviMean_32f_C1R", "_Z19vector_uchar_to_MatRSt6vectorIhSaIhEERN2cv3MatE", "_ZNK2cv5flann11IndexParams9getStringERKNS_6StringES4_", "icv_y8_ippiCopyReplicateBorder_32s_C4R", "icv_l9_ownsrDFTinv_9_64f", "icv_l9_owniDenominatorFull_C1R", "icv_m7_ownResize1Linear32f", "icv_m7_ippiAdd_32f_C1IR", "icv_l9_ippiNormDiff_L1_32f_C1R", "icv_l9_ippiNormDiff_Inf_16s_C1R", "_ZN10__cxxabiv115__forced_unwindD0Ev", "icv_m7_ownFilterMaxRow09_32f_C1R", "_ZN2cv3EMDERKNS_11_InputArrayES2_iS2_PfRKNS_12_OutputArrayE", "cvRegisterType", "icv_y8_owniSwapChannels_8u_C4C3R", "_ZN2cv17getGaussianKernelEidi", "cvInRangeS", "icv_m7_myRGBToXYZ_32f_C3R", "icv_m7_owns_cFFT_1_scale_64fc", "Java_org_opencv_calib3d_StereoMatcher_setDisp12MaxDiff_10", "_ZN2cv6detail18GraphCutSeamFinder4Impl10findInPairEmmNS_5Rect_IiEE", "Java_org_opencv_ml_RTrees_getTermCriteria_10", "_ZN3tbb18captured_exception7destroyEv", "icv_m7_owniNormLevel_8u32f_C1R", "icv_y8_ippsDFTInit_C_32fc", "Java_org_opencv_features2d_BRISK_create_10", "icv_m7_ownscDFTinv_12_32fc", "ippicviTranspose_32s_C4R", "Java_org_opencv_photo_Photo_createTonemapDurand_10", "_ZN2cv2LUEPfmiS0_mi", "icv_l9_ownMean_32f_C3MR_HSW", "Java_org_opencv_features2d_ORB_getFastThreshold_10", "icv_m7_Dilate_32f_C4S", "icv_y8_owniSqrDistanceNorm_FullSame_32f_C1R", "icv_l9_ownCopySubpixIntersect_32f_C1R_h9l9", "icv_l9_ownpi_NormL2_16s_C3R", "_ZNK2cv4UMat3dotERKNS_11_InputArrayE", "icv_m7_ownFilterMinRowVH_32f_C4R", "_ZNK2cv3Mat6copyToERKNS_12_OutputArrayERKNS_11_InputArrayE", "icv_m7_ownpi_NormInfDiff_16s_C3R", "cvReleaseImage", "_ZN2cv3hal11Cholesky64fEPdmiS1_mi", "ippicviThreshold_GTVal_8u_C1IR", "icv_m7_owns_cFFTinv_16_32fc", "icv_m7_ownpi_NormL2Diff_8u_C3R", "_ZN2cv9ExceptionC2Ev", "icv_y8_ownscDftInv_Prime6_32fc", "Java_org_opencv_calib3d_Calib3d_initUndistortRectifyMap_10", "_ZN2cv3hal14addWeighted16uEPKtmS2_mPtmiiPv", "icv_m7_ippiTranspose_32s_C1R", "icv_l9_ownsrDFTfwd_13_scale_64f", "cvLoadImage", "icv_l9_owniFilter32f_16s_C4R_g9e9_7", "ippicviNorm_L2_8u_C1MR", "icv_l9_gres_NormL1_16u_C4R", "ownMaskIsFeatures", "Java_org_opencv_features2d_ORB_setScaleFactor_10", "_ZN2cv15NAryMatIteratorC2Ev", "_ZNK2cv5MatOp3roiERKNS_7MatExprERKNS_5RangeES6_RS1_", "icv_m7_owns_rFFTfwd_4_scale_32f", "icv_m7_ownFilterMaxRow06_8u_C3R", "icv_l9_ippiFilterBorder_16s_C3R", "_ZN2cv17DescriptorMatcherD1Ev", "ippicvsDFTInit_C_64fc", "icv_m7_ippiNormRel_Inf_16u_C1MR", "icv_y8_ippiMirror_32s_C3IR", "cvReleasePyramid", "_ZN2cv3ocl7Image2DC2ERKNS_4UMatEbb", "Java_org_opencv_features2d_KAZE_getThreshold_10", "icv_l9_ippiMean_32f_C1MR", "icv_y8_ippiTranspose_32f_C4IR", "icv_l9_ownFilterMaxRow04_8u_C3R", "ippicviResizeLinear_16u_C3R", "_ZN2cv4FASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEib", "icv_l9_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "icv_l9_ippiSum_8u_C3R", "icv_y8_ownippiErodeBorder_8u_C3R", "Java_org_opencv_core_Core_batchDistance_12", "Java_org_opencv_imgproc_Imgproc_integral2_11", "icv_l9_ippsDFTInv_CToC_64fc", "Java_org_opencv_imgproc_Subdiv2D_initDelaunay_10", "icv_y8_ownsrDFTfwd_12_scale_32f", "icv_y8_ownsGetSizeTabDftBase_32f", "icv_m7_ownCalcBorderR3Linear64f", "Java_org_opencv_features2d_GFTTDetector_create_11", "icv_l9_owns_rFFTinv_4_64f", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_X", "icv_m7_owns_initTabTwd_Large_64f", "_ZN2cv9videostab15VideoFileSourceC1ERKNS_6StringEb", "_ZN2cv19createHanningWindowERKNS_12_OutputArrayENS_5Size_IiEEi", "icv_y8_ownFilterColumnPipeline_16u_C1R_X", "ippicviNorm_L2_32f_C4R", "Java_org_opencv_video_DualTVL1OpticalFlow_setEpsilon_10", "ippicviSwapChannels_16u_C3R", "icv_l9_ownMean_16u_C1MR_HSW", "_ZN2cv23initUndistortRectifyMapERKNS_11_InputArrayES2_S2_S2_NS_5Size_IiEEiRKNS_12_OutputArrayES7_", "ippicviMul_16s_C1RSfs", "Java_org_opencv_photo_MergeDebevec_process_11", "icv_l9_owns_initTabTwdCcsRec_64f", "icv_l9_ippiMean_StdDev_8u_C3CMR", "_ZN2cv7ellipseERKNS_17_InputOutputArrayERKNS_11RotatedRectERKNS_7Scalar_IdEEii", "_ZN3tbb8internal17generic_scheduler12attach_arenaEPNS0_5arenaEmb", "icv_m7_ippiThreshold_Val_16s_C1R", "icv_l9_ippiAddProduct_32f_C1IR", "icv_y8_ippiMorphologyBorderInit_32f_C3R", "icv_y8_ownFilterMaxRow11_8u_C1R", "_ZN2cv3ocl16convertFromImageEPvRNS_4UMatE", "icv_m7_innerXYZToRGB_8u_C3R", "Java_org_opencv_imgproc_Imgproc_n_1getTextSize", "icv_m7_ippiFilterBorder_16u_C3R", "icv_l9_ownpi_NormInf_16u_C4R", "icv_l9_innerHLSToRGB_8u_C3R", "icv_l9_ownsInitDftPrimeFact_64f_64f", "icv_m7_ippiMinMaxIndx_32f_C1MR", "icv_y8_ownFilterMinRow11_8u_C4R", "_ZN2cv3ogl6Arrays13setColorArrayERKNS_11_InputArrayE", "_ZN2cv3ocl8internal10isCLBufferERNS_4UMatE", "icv_y8_ownFilterColumnPipeline_32f_C1R_X", "icv_y8_ownErodeEllipseBorderReplicate_32f_C4R", "icv_l9_ippiMulC_16s_C1IRSfs", "ippicviFilterBorder_8u_C3R", "Java_org_opencv_core_Mat_nPutS", "icv_l9_ippiCopyConstBorder_32s_C4R", "icv_l9_ownippsCnvrtNear_32f16s_AVX", "Java_org_opencv_ml_EM_getTermCriteria_10", "_ZN10__cxxabiv117__class_type_infoD0Ev", "icv_l9_ownscDFTinv_6_32fc", "_ZN2cv3hal14cvtBGR5x5toBGREPKhmPhmiiibi", "Java_org_opencv_objdetect_HOGDescriptor_get_1histogramNormType_10", "Java_org_opencv_video_FarnebackOpticalFlow_setFlags_10", "cvMaxRect", "icv_m7_ippiDCTFwd_32f_C1R", "icv_m7_ownResize1Linear16s", "icv_l9_ownpi_NormInfDiff_8u_C1R", "ippicviMarkSpeckles_8u_C1IR", "_ZN3tbb8internal6market13global_marketEbjm", "icv_m7_ippiSet_32f_C1MR", "icv_l9_ownippiErodeBorder_32f_C4R", "icv_y8_ippiNormDiff_L1_8u_C4R", "icv_l9_ippiResizeLinear_32f_C3R", "icv_m7_ippiFilterMinBorder_8u_C4R", "icv_l9_owniFilter32f_16u_C4R_g9e9_7", "icv_m7_ownsAddC_16s_I_PosSfs", "Java_org_opencv_video_SparsePyrLKOpticalFlow_create_11", "icv_l9_ownFilterMinRowVH_8u_C3R", "Java_org_opencv_ml_RTrees_create_10", "icv_y8_ippsSqrt_32f_A21", "Java_org_opencv_imgproc_Imgproc_convexHull_11", "icv_l9_ippiFilterColumnPipelineGetBufferSize_32f_C1R", "ippicviDFTInit_R_32f", "Java_org_opencv_features2d_ORB_delete", "icv_m7_ippiMirror_8u_C4IR", "icv_m7_ownpi_NormL1_16s_C1R", "_ZN2cv24convertPointsHomogeneousERKNS_11_InputArrayERKNS_12_OutputArrayE", "Java_org_opencv_imgproc_Imgproc_accumulateWeighted_11", "_ZN2cv3hal6cmp32fEPKfmS2_mPhmiiPv", "icv_m7_ippiTranspose_8u_C1R", "icv_y8_owniGetRectTop_32f", "_ZN2cv11cartToPolarERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_b", "__dynamic_cast", "icv_l9_owns_cFFTinv_8_64fc", "Java_org_opencv_objdetect_HOGDescriptor_compute_11", "Java_org_opencv_core_Core_invert_11", "ippicviMean_StdDev_8u_C3CMR", "_ZNK2cv14DefaultDeleterI7CvMatNDEclEPS1_", "icv_l9_ownFilterMinRow05_8u_C1R", "icv_l9_ownFilterMaxRow01_8u_C4R", "icv_m7_ownFilterBorder16s_16s_C4R", "icv_y8_owniFilterRobertsDownBorder2_16s_C1R", "cvComposeRT", "Java_org_opencv_ml_LogisticRegression_getTrainMethod_10", "icv_m7_ownpi_NormL1Diff_16s_C4R", "cvTransform", "icv_y8_ownpi_NormInfDiff_32f_C4R", "icv_m7_ippiNormDiff_L2_16u_C1R", "icv_m7_ownFilterBorder16s_8u_C1R", "icv_l9_ownsSet_16u", "Java_org_opencv_calib3d_Calib3d_distortPoints_11", "_ZSt10unexpectedv", "icv_y8_ippiTranspose_16s_C3IR", "icv_y8_ippsMul_64fc", "icv_y8_ownscDFTinv_10_64fc", "icv_m7_ownsMul_8u", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "icv_y8_ippiResizeLinear_32f_C4R", "icv_l9_ippiConvert_16s8s_C1RSfs", "icv_m7_ownscDftFwd_Prime6_32fc", "icv_l9_ippsZero_32fc", "_ZN2cv9videostab18InpaintingPipeline23setStabilizationMotionsERKSt6vectorINS_3MatESaIS3_EE", "_ZNK2cv3ocl6Kernel12localMemSizeEv", "_ZN2cv4UMat6createEiPKiiNS_14UMatUsageFlagsE", "_ZN2cv6imshowERKNS_6StringERKNS_3ogl9Texture2DE", "_ZN2cv6detail17BundleAdjusterRay12calcJacobianERNS_3MatE", "icv_m7_ippiNormDiff_L2_8u_C3CMR", "icv_y8_ippsFFTInit_R_32f", "ippicvsMalloc_8u", "icv_y8_ownFilterMinRow15_32f_C3R", "ippicviFilterSobelHorizSecondBorderGetBufferSize", "icv_l9_Dilate_8u_C4S", "Java_org_opencv_video_KalmanFilter_get_1errorCovPost_10", "icv_m7_ippiMin_16s_C1R", "icv_l9_ippiAdd_16u32f_C1IR", "icv_l9_ippiSub_16s_C1RSfs", "icv_l9_ippiCopy_8u_C1R", "_ZN2cv16FileNodeIteratorC2EPK13CvFileStoragePK10CvFileNodem", "icv_y8_ownippiMorphologyBorderReplicateInMemInit_32f_C3R", "cvCmpS", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R", "_ZN2cvdvERKNS_3MatES2_", "Java_org_opencv_ml_DTrees_getMaxDepth_10", "Java_org_opencv_core_Core_magnitude_10", "icv_y8_ippiFilterSobelNegVertBorder_32f_C1R", "icv_y8_ownsGetSizeTabDftInvRec_64f", "Java_org_opencv_photo_Tonemap_delete", "_ZN2cv6detail19AKAZEFeaturesFinderC2Eiiifiii", "_ZN2cv15BriskScaleSpace16constructPyramidERKNS_3MatE", "icv_l9_ippiConvert_16u8u_C1R", "icv_m7_ownippiDilateBorder_32f_C1R", "icv_y8_ownsInitTabDftFwdRec_32f", "icv_l9_owniFlip_16u_C3", "icv_l9_ownCalcBorderR4Linear16u", "icv_m7_owniFlipCopy_8u_C3", "icv_y8_ippiNorm_Inf_32f_C1MR", "icv_l9_ownFilterMaxRow01_32f_C3R", "_ZNK2cv11VideoWriter3getEi", "_ZNK2cv6detail15GainCompensator5gainsEv", "icv_l9_ippiMinMaxIndx_16u_C1MR", "icv_y8_owniClipRectZeroTail_16u32f_C1R", "Java_org_opencv_features2d_Params_set_1minConvexity_10", "_ZN2cv9meanShiftERKNS_11_InputArrayERNS_5Rect_IiEENS_12TermCriteriaE", "icv_m7_ippiAdd_32f_C1R", "icv_l9_ippiFilterBorderInit_16s", "icv_m7_ownFilterMinRow09_8u_C1R", "icv_l9_ownBuildFilter_64f", "ippicviSet_16u_C1MR", "cvSetReal2D", "icv_m7_ownCalcBorderR3Cubic16u", "_ZN2cv3hal23cvtMultipliedRGBAtoRGBAEPKhmPhmii", "_ZNK2cv2ml3SVM29getUncompressedSupportVectorsEv", "icv_l9_owns_cFFTinv_4_64fc", "icv_y8_ippiApplyHaarClassifier_32f_C1R", "own_ipps_dCos_Y8HAynn", "icv_y8_ownFilterBorder16s_16u_C1R", "_ZNK3tbb10interface78internal15task_arena_base16internal_executeERNS1_13delegate_baseE", "Java_org_opencv_imgproc_Imgproc_GaussianBlur_12", "cvInvert", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_W7cn", "Java_org_opencv_videoio_VideoWriter_release_10", "icv_l9_ownCalcBorderR1Cubic32f", "_ZN2cv16MatConstIterator4seekElb", "_ZN2cv3ocl13ProgramSourceC2ERKNS_6StringE", "_ZN2cv3ocl12PlatformInfoC1ERKS1_", "icv_y8_ownFilterMaxRow06_32f_C1R", "icv_m7_owniFlipCopy_32s_C3", "cvGetCaptureDomain", "icv_m7_cv_ownippiFilterMax_16u_Row", "icv_y8_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "Java_org_opencv_video_DualTVL1OpticalFlow_delete", "Java_org_opencv_video_Video_calcOpticalFlowPyrLK_11", "icv_l9_ownFilterMaxRow03_8u_C3R", "_ZN2cv4UMatC2ERKS0_PKNS_5RangeE", "icv_y8_owniFilterSobelHorizSecondBorder2_32f_C1R", "_ZN2cv28connectedComponentsWithStatsERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_ii", "icv_l9_ippiResizeGetSize_32f", "_ZN2cv9FormatterD2Ev", "Java_org_opencv_video_DualTVL1OpticalFlow_getUseInitialFlow_10", "icv_y8_ownFilterMinRow15_8u_C3R", "icv_m7_ippiNormDiff_Inf_16u_C1MR", "icv_y8_ownpi_NormInf_32f_C4R", "icv_m7_ownsMulC_16s_I_1Sfs", "icv_l9_ownpi_NormInfDiff_32f_C4R", "icv_l9_myHLSToRGB_8u_C3R", "icv_y8_ownscDFTinv_13_scale_32fc", "Java_org_opencv_imgproc_Imgproc_floodFill_10", "Java_org_opencv_features2d_ORB_setEdgeThreshold_10", "cvPtr1D", "_ZN2cv11minAreaRectERKNS_11_InputArrayE", "icv_y8_ownpis_Sum_16u_C4", "icv_y8_ippiFilterBorder_16u_C3R", "icv_y8_ownippiFilterMaxGetBufferSize_32f_C1R", "icv_y8_ownFilterMinRow06_8u_C4R", "Java_org_opencv_ml_ANN_1MLP_getRpropDWPlus_10", "icv_y8_ippsZero_32fc", "icv_l9_ippiNormDiff_L1_8u_C1MR", "cvSetAdd", "_ZNK2cv11_InputArray4rowsEi", "icv_m7_ownpi_NormL2Rel_16s_C1R", "Java_org_opencv_photo_MergeMertens_delete", "icv_y8_ownscDftInv_Prime13_32fc", "Java_org_opencv_core_Core_multiply_14", "_ZN2cv4cuda11TargetArchs17hasEqualOrLessPtxEii", "icv_m7_ownscDFTfwd_15_scale_32fc", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_X_W7cn", "_ZN2cv3minERKNS_3MatES2_RS0_", "_ZN2cv6detail17VoronoiSeamFinder10findInPairEmmNS_5Rect_IiEE", "icv_l9_ippiRectStdDev_32f_C1R", "_ZN2cv30createBackgroundSubtractorMOG2Eidb", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_3x3", "Java_org_opencv_calib3d_Calib3d_getOptimalNewCameraMatrix_11", "Java_org_opencv_features2d_BRISK_create_13", "Java_org_opencv_ml_ANN_1MLP_getTermCriteria_10", "_ZN2cv3ocl7Context10getDefaultEb", "Java_org_opencv_ml_RTrees_setTermCriteria_10", "icv_y8_ippiNorm_Inf_16u_C1R", "icv_l9_ippiThreshold_GT_16s_C1R", "icv_l9_ownFilterMinRow09_32f_C4R", "_ZN2cv3ogl6BufferC1ERKNS_11_InputArrayENS1_6TargetEb", "Java_org_opencv_calib3d_Calib3d_solvePnPRansac_10", "Java_org_opencv_core_Core_absdiff_11", "cvFitLine", "_ZN2cv16BOWKMeansTrainerC2EiRKNS_12TermCriteriaEii", "_ZNK2cv3ocl7Context3ptrEv", "_ZN2cv13insertChannelERKNS_11_InputArrayERKNS_17_InputOutputArrayEi", "icv_l9_ownsrDftFwdRecombine_32f", "_ZN2cv12VideoCaptureC1Ev", "icv_m7_ippiTranspose_8u_C1IR", "Java_org_opencv_photo_Photo_colorChange_10", "_ZN2cv3ocl8PlatformC2Ev", "icv_l9_ownFilterRowBorderPipeline_16s_C3R_5x5", "icv_y8_ownscDFTfwd_12_scale_64fc", "_ZN2cv4cuda6GpuMatC2ERKS1_NS_5RangeES4_", "icv_y8_ippiCopy_16s_C3MR", "cvNamedWindow", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColored_11", "icv_l9_owns_cFFT_1_64fc", "cvArcLength", "_ZN2cv10BOWTrainerC2Ev", "icv_l9_owniCopy_8u_AC4C3R", "Java_org_opencv_videoio_VideoWriter_write_10", "_ZN2cv8internal15IntrinsicParamsplERKNS_3MatE", "Java_org_opencv_photo_Tonemap_process_10", "icv_m7_owns_cFFTfwd_16_64fc", "icv_l9_myRGBToXYZ_32f_C3R", "cvMinMaxLoc", "_ZN2cv3hal6min32sEPKimS2_mPimiiPv", "icv_l9_owniAutoCorr_C1R", "icv_y8_ippiMean_StdDev_8u_C3CMR", "_ZN2cv9videostab14StabilizerBase19nextStabilizedFrameEv", "_ZNKSt9bad_alloc4whatEv", "icv_m7_ippsPolarToCart_64f", "_ZN2cv16TLSDataContainerC1Ev", "_ZNK2cv3ocl6Device16maxReadImageArgsEv", "Java_org_opencv_ml_SVM_create_10", "icv_y8_ownFilterMaxRow01_32f_C1R", "icv_m7_ownsMulC_64f_I", "icv_y8_ippsFFTFwd_RToPerm_64f", "icv_m7_owniClipRectZeroTail_16u32f_C1R", "_ZN3tbb18captured_exception4moveEv", "icv_y8_ownsrDFTfwd_13_64f", "Java_org_opencv_calib3d_StereoBM_getUniquenessRatio_10", "icv_l9_ownscDftFwd_Fact3_32fc", "Java_org_opencv_objdetect_HOGDescriptor_get_1nbins_10", "icv_m7_ippiMinEigenValGetBufferSize_8u32f_C1R", "Java_org_opencv_features2d_FastFeatureDetector_getNonmaxSuppression_10", "icv_y8_ippiNormDiff_Inf_8u_C1R", "_ZNK2cv3Mat7getUMatEiNS_14UMatUsageFlagsE", "cvTriangulatePoints", "Java_org_opencv_core_Core_inRange_10", "_ZN2cv3hal11SepFilter2D6createEiiiPhiS2_iiidi", "icv_y8_ownsGetSizeTabDftFwdRec_64f", "_ZN2cv16FileNodeIteratorppEv", "icv_y8_ippiNormRel_L1_8u_C1R", "Java_org_opencv_calib3d_StereoBM_setUniquenessRatio_10", "_ZN2cv9SparseMat13resizeHashTabEm", "icv_l9_ownippiFilterMedianVert_16u_1x3", "_ZN2cv5eigenERKNS_11_InputArrayERKNS_12_OutputArrayES5_", "Java_org_opencv_imgproc_Imgproc_bilateralFilter_10", "_ZNK2cv11RotatedRect6pointsEPNS_6Point_IfEE", "icv_y8_ippiSet_16s_C4MR", "_ZN2cv25stereoRectifyUncalibratedERKNS_11_InputArrayES2_S2_NS_5Size_IiEERKNS_12_OutputArrayES7_d", "icv_y8_cv_ownippiFilterMin_16u_Row", "Java_org_opencv_core_Core_solvePoly_10", "icv_y8_ownFilterMaxRow07_8u_C4R", "ippicviAddProduct_16u32f_C1IMR", "icv_y8_ippiDotProd_16u64f_C1R", "icv_l9_ippiNormRel_L1_8u_C1MR", "icv_y8_ipMirror45_16uC1R", "icv_m7_ownFilterMaxColumn01_32f_C1R", "icv_m7_owns_cFFTfwd_8_scale_64fc", "Java_org_opencv_imgproc_Imgproc_integral3_11", "ippicviNorm_Inf_32f_C1R", "icv_y8_ownpi_NormInfDiff_16s_C1R", "_ZNK2cv12VideoCapture8isOpenedEv", "ippicviAddWeighted_32f_C1IR", "icv_l9_ownscDFTinv_12_scale_64fc", "icv_l9_ownFilterBorder32f_16u_C4R", "icv_m7_Erode_8u_C3S", "icv_y8_ownResize1Cubic16s", "icv_y8_owniCopy_8u_C4MR", "Java_org_opencv_calib3d_Calib3d_validateDisparity_10", "icv_l9_ownippiMorphologyBorderReplicateInMemGetSize_32f_C3R", "icv_m7_ippsMaxEvery_32f", "_ZN2cv3ogl11mapGLBufferERKNS0_6BufferEi", "icv_l9_innerSwapChannels_16u_C4R", "_ZN2cv3ocl7ContextC2Ei", "_ZN2cv8Subdiv2DC1Ev", "_ZN2cv11VideoWriterlsERKNS_3MatE", "cvSeqRemoveSlice", "icv_l9_ownFilter32f_16u_C4R_g9e9", "icv_y8_ownsrDFTfwd_9_scale_64f", "icv_l9_ownscDFTfwd_11_scale_32fc", "icv_m7_ownsrDFTinv_11_scale_32f", "_ZN2cv6detail19createLaplacePyrGpuERKNS_11_InputArrayEiRSt6vectorINS_4UMatESaIS5_EE", "icv_m7_ippiFilterLowpassGetBufferSize_32f_C1R", "icv_y8_ownpi_CmpEQ_16s_C1R", "_ZNK2cv3ogl9Texture2D4bindEv", "_ZN2cv4UMatC1ERKS0_RKNS_5RangeES5_", "icv_l9_ippiTranspose_32f_C4IR", "_ZN2cv11RNG_MT19937cvdEv", "icv_y8_ippiNormRel_Inf_32f_C1MR", "_ZNK2cv4cuda6StreamcvMS1_KFvvEEv", "icv_y8_ippiOr_8u_C1R", "icv_l9_ippiResizeLinear_64f_C1R", "_ZN2cv6detail24HomographyBasedEstimator8estimateERKSt6vectorINS0_13ImageFeaturesESaIS3_EERKS2_INS0_11MatchesInfoESaIS8_EERS2_INS0_12CameraParamsESaISD_EE", "icv_y8_ippiThreshold_32f_C1R", "_ZN2cv11VideoWriterD1Ev", "_ZN2cv17DescriptorMatcher5clearEv", "Java_org_opencv_calib3d_StereoBM_setROI2_10", "_ZNK2cv3ocl6Device14singleFPConfigEv", "ippicviMorphologyBorderInit_8u_C3R", "icv_y8_ownFilterMinRow11_32f_C3R", "icv_l9_owniFilter_32f_C4R_g9e9_7", "_ZN2cv21DetectionBasedTrackerD2Ev", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC1ERKS1_", "icv_l9_ippiXor_8u_C1R", "icv_m7_ippiResizeGetBufferSize_8u", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColoredMulti_11", "cvDFT", "icv_y8_owniFilterSobelHorizBorder2_8u16s_C1R", "icv_y8_ownFilterMaxRowVH_32f_C1R", "icv_l9_owns_getSizeDct_Fft_32f", "icv_l9_ippiCopyReplicateBorder_8u_C4R", "_ZNK2cv11_InputArray4kindEv", "icv_l9_ownFilterMinColumn01_8u_C1R", "_ZN2cv9videostab17MotionEstimatorL1C2ENS0_11MotionModelE", "Java_org_opencv_core_Core_norm_12", "icv_l9_ippiNorm_L1_8u_C1R", "Java_org_opencv_ml_ANN_1MLP_getTrainMethod_10", "icv_y8_ownscDftFwd_Prime16_32fc", "icv_y8_ippiFilterMaxBorder_8u_C1R", "Java_org_opencv_imgproc_Imgproc_matchTemplate_10", "_ZN2cv3hal5min8uEPKhmS2_mPhmiiPv", "icv_m7_ippiCopy_8u_C4R", "_ZN2cv11bitwise_notERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "_ZN2cv22SimpleBlobDetectorImpl4readERKNS_8FileNodeE", "Java_org_opencv_video_DualTVL1OpticalFlow_getOuterIterations_10", "icv_m7_owns_rFFT_2_64f", "icv_l9_ownFilterMinRow02_32f_C1R", "ippicviNormRel_Inf_8u_C1R", "_ZNK2cv5MatOp8subtractERKNS_7Scalar_IdEERKNS_7MatExprERS5_", "Java_org_opencv_core_Mat_n_1convertTo__JJI", "icv_y8_owns_initTabTwdRealRec_32f", "Java_org_opencv_core_Mat_n_1dataAddr", "icv_y8_ippiNormRel_L1_16u_C1MR", "_ZN2cv7pyrDownERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_5Size_IiEEi", "_Z19vector_Vec6f_to_MatRSt6vectorIN2cv3VecIfLi6EEESaIS2_EERNS0_3MatE", "icv_m7_owns_rFFTinv_16_scale_64f", "icv_l9_ippiXYZToRGB_16u_C3R", "icv_m7_ownFilterMinRow05_8u_C3R", "icv_m7_ownscDFTinv_11_scale_32fc", "icv_y8_ownRow3Linear16s", "_ZNK2cv11RotatedRect12boundingRectEv", "icv_m7_ippsFFTInit_R_64f", "_ZN2cv3ocl5Queue6finishEv", "cvLoadHaarClassifierCascade", "icv_l9_ownscDFTinv_13_scale_32fc", "icv_m7_ippiCopy_32f_P3C3R", "icv_y8_ownsInitDftPrimeFact_64f_64f", "_ZN2cv4sqrtERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZNK2cv14DefaultDeleterI12CvMemStorageEclEPS1_", "icv_y8_ownFilterMinRow06_32f_C3R", "icv_y8_owns_cFftFwd_Large_64fc", "icv_l9_ownpi_NormL1Diff_8u_C4R", "_ZN2cv6detail15FeaturesMatcherclERKSt6vectorINS0_13ImageFeaturesESaIS3_EERS2_INS0_11MatchesInfoESaIS8_EERKNS_4UMatE", "Java_org_opencv_imgproc_Imgproc_Scharr_11", "icv_y8_ownFilterMinRow02_8u_C4R", "icv_l9_ippiResizeCubic_16s_C4R", "icv_l9_ownippiFilterMinGetBufferSize_32f_C4R", "cvGetCentralMoment", "Java_org_opencv_features2d_KAZE_setNOctaveLayers_10", "icv_y8_ippiConvert_32s8s_C1R", "icv_m7_ownResize4Cubic32f", "icv_m7_ownFilterMaxRow05_32f_C1R", "icv_l9_ippiFilterSobelVertBorder_32f_C1R", "_ZN2cv12drawContoursERKNS_17_InputOutputArrayERKNS_11_InputArrayEiRKNS_7Scalar_IdEEiiS5_iNS_6Point_IiEE", "icv_y8_ippiFilterGaussianBorder_16s_C1R", "icv_m7_ippiNorm_Inf_8u_C1MR", "icv_l9_ippsZero_8u", "icv_l9_ownFilterMinColumnVH_8u_C1R", "icv_l9_ippsFFTInit_C_64fc", "_ZN2cv4cuda6Stream19enqueueHostCallbackEPFviPvES2_", "icv_l9_ippiNormDiff_L2_16s_C4R", "icv_m7_ownippiErodeBorder_32f_C3R", "icv_l9_ownscDFTfwd_10_scale_32fc", "Java_org_opencv_core_Core_findNonZero_10", "icv_m7_ownpi_NormL1Rel_16u_C1R", "_ZN2cv6detail20BundleAdjusterAffine9calcErrorERNS_3MatE", "icv_y8_ippiFilterMedianBorder_32f_C1R", "Java_org_opencv_core_Mat_n_1submat", "icv_y8_ippiFilterMaxBorder_32f_C3R", "icv_y8_owniTranspose32s_C4R_core2", "icv_m7_ownsSet_16u", "icv_y8_ippiCopy_8u_C1R", "icv_l9_ippiFilterSobelHorizSecondBorderGetBufferSize", "icv_l9_ownMean_StdDev_32f_C3CMR_2_HSW", "icv_y8_ownpi_NormL2_16s_C3R", "icv_m7_ippiMax_16s_C1R", "_ZN2cv9videostab17OnePassStabilizerC1Ev", "icv_l9_ippiThreshold_GTVal_8u_C1IR", "_ZNK2cv3ocl6Device24preferredVectorWidthHalfEv", "icv_m7_ownscDFTinv_13_scale_32fc", "_ZN2cv9videostab15MotionInpainterC1Ev", "icv_l9_ownsrDFTfwd_13_32f", "icv_l9_ownscDFTinv_3_scale_32fc", "icv_y8_ownFilterMaxRow15_32f_C3R", "ippicviMinEigenValGetBufferSize_32f_C1R", "icv_y8_ownFilterMinRow03_32f_C3R", "icv_l9_ippiSum_16u_C1R", "icv_l9_owniConvert_16u16s_ccode", "icv_m7_ownFilterRowBorderPipeline_32f_C3R_3x3", "Java_org_opencv_ml_SVM_getKernelType_10", "icv_y8_ownFilterMaxRow04_8u_C3R", "icv_l9_Erode_8u_C4S", "Java_org_opencv_imgproc_Imgproc_logPolar_10", "icv_l9_ownFilterColumnPipeline_16u_C1R_X", "_ZNK2cv7MatExprclERKNS_5Rect_IiEE", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_16s_C3R", "icv_m7_ippiMean_StdDev_32f_C3CR", "Java_org_opencv_imgproc_Subdiv2D_insert_11", "Java_org_opencv_calib3d_Calib3d_calibrate_11", "icv_y8_ownsSub_16s_Bound", "Java_org_opencv_calib3d_Calib3d_validateDisparity_11", "Java_org_opencv_ml_DTrees_getUse1SERule_10", "icv_m7_ippiErodeBorder_32f_C3R", "icv_l9_ownNormDiff_Inf_32f_C3CMR_HSW", "icv_m7_ippsExp_64f_A50", "icv_y8_ippiHistogramUniformInit", "Java_org_opencv_ml_TrainData_getTestResponses_10", "_ZN2cv11compareHistERKNS_11_InputArrayES2_i", "_ZN2cv9videostab17MotionEstimatorL1C1ENS0_11MotionModelE", "icv_l9_ippiCopyReplicateBorder_32s_C3R", "Java_org_opencv_ml_DTrees_setTruncatePrunedTree_10", "Java_org_opencv_ml_TrainData_getTrainNormCatResponses_10", "icv_l9_ippsDFTInit_R_64f", "Java_org_opencv_imgproc_Imgproc_contourArea_11", "icv_l9_ippsSqrt_32f", "icv_l9_ownsInitDftConv_32f", "cvCalcOpticalFlowFarneback", "_ZN2cv9fastAtan2Eff", "Java_org_opencv_ml_EM_trainE_10", "_ZN2cv14ConjGradSolver6createERKNS_3PtrINS_16MinProblemSolver8FunctionEEENS_12TermCriteriaE", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_13", "icv_l9_ownpi_NormL1Diff_16u_C1R", "Java_org_opencv_calib3d_StereoMatcher_setSpeckleWindowSize_10", "icv_l9_ownscDFTinv_7_32fc", "icv_l9_ownpi_NormInfDiff_16u_C4R", "icv_m7_ownscDftInv_Prime8_64fc", "icv_l9_ownFilterMinRowVH_8u_C4R", "icv_m7_ippiSet_16s_C1MR", "_ZN2cv3ocl5QueueD2Ev", "icv_l9_owniTranspose_32s_C1R_AVX", "cvCornerHarris", "_ZN2cv8superres15SuperResolutionC1Ev", "icv_m7_ippiRGBToHLS_8u_C3R", "icv_m7_ownFilterColumnPipeline_16s_C1R_3x3_W7cn", "icv_m7_ownscDFTinv_3_64fc", "_ZN2cv5MutexC2ERKS0_", "icv_y8_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_y8_ippsCos_32f_A24", "icv_y8_ownpi_NormL2_16s_C1R", "icv_y8_ownscDFTinv_9_64fc", "icv_l9_owncvRowMatrAlErr_31", "Java_org_opencv_features2d_GFTTDetector_getMaxFeatures_10", "icv_m7_ippiConvert_8u32f_C1R", "cvGetNumThreads", "icv_m7_owniAutoSS_C1R", "icv_l9_owniFilter32f_8u_C1R_g9e9_2", "Java_org_opencv_ml_ANN_1MLP_getRpropDWMax_10", "ippicvGetEnabledCpuFeatures", "ippicviFilterBorder_16s_C3R", "ippicviTranspose_32f_C4R", "_Unwind_GetCFA", "Java_org_opencv_ml_Boost_setWeakCount_10", "icv_l9_ippiMean_32f_C1R", "icv_l9_ownCalcBorderR3Linear64f", "_ZN2cv15convertScaleAbsERKNS_11_InputArrayERKNS_12_OutputArrayEdd", "_ZN2cv3ocl7ContextC2ERKS1_", "ippicviNormDiff_L2_16u_C4R", "icv_y8_owniGetRectTop_16s", "_ZNK2cv17CommandLineParser9getByNameERKNS_6StringEbiPv", "own_ipps_dPowx_E7HAynn", "ippicvsDotProd_32f64f", "Java_org_opencv_core_Mat_n_1row", "icv_y8_ownsrDFTinv_9_scale_32f", "icv_y8_owniNormLevel_8u32f_C1R", "Java_org_opencv_objdetect_CascadeClassifier_delete", "icv_l9_owns_cFft_BlkSplit_64fc", "icv_m7_ownsGetSizeTabDftDir_64f", "icv_m7_ippsConvert_32s32f_Sfs", "icv_y8_ownFilterRowBorderPipeline_16s_C3R_X", "Java_org_opencv_calib3d_Calib3d_estimateNewCameraMatrixForUndistortRectify_11", "ippicviMax_32f_C1R", "_ZNK2cv25BOWImgDescriptorExtractor14descriptorTypeEv", "icv_y8_ippiSum_32f_C1R", "Java_org_opencv_features2d_Params_get_1minThreshold_10", "icv_l9_ownscDFTinv_11_scale_32fc", "icv_l9_ownscDFTinv_7_scale_64fc", "icv_m7_ownsrDFTinv_11_scale_64f", "_ZNSt16bad_array_lengthD1Ev", "__letf2", "ippicviMirror_8u_C4IR", "icv_m7_ippsDFTFwd_RToPack_32f", "_ZN2cv4cuda6Stream9waitEventERKNS0_5EventE", "icv_y8_ownFilterRowBorderPipeline_16s_C3R_5x5", "icv_m7_ippiRGBToXYZ_32f_C3R", "icv_m7_ippiNorm_Inf_8u_C4R", "Java_org_opencv_objdetect_HOGDescriptor_get_1winSigma_10", "icv_l9_ippiAdd_8u_C1RSfs", "_ZN2cv3hal7recip8sEPKamS2_mPamiiPv", "icv_l9_ippiDotProd_32s64f_C1R", "ippicviFilterSobelNegVertBorder_8u16s_C1R", "icv_y8_ownscDFTfwd_14_64fc", "icv_y8_ownippiFilterMaxGetBufferSize_8u_C4R", "_ZNK2cv3ocl13ProgramSource4hashEv", "icv_y8_ownFilterMinRow13_32f_C1R", "_ZN2cv8clipLineENS_5Size_IiEERNS_6Point_IiEES4_", "icv_l9_ownpi_CmpLT_32f_C1R", "icv_y8_ownscDFTfwd_5_scale_32fc", "ippicviFilterGaussianBorder_16s_C3R", "_ZN3tbb8internal17is_malloc_used_v3Ev", "icv_l9_ownippiFilterMinBorderReplicate_32f_C3R", "_ZN2cv17CascadeClassifier16setMaskGeneratorERKNS_3PtrINS_21BaseCascadeClassifier13MaskGeneratorEEE", "_ZN2cv11FileStorage5writeERKNS_6StringEd", "icv_l9_ippsDCTInvGetSize_32f", "icv_l9_ippiConvert_32f8s_C1RSfs", "_ZNK2cv4cuda6GpuMat6copyToERKNS_12_OutputArrayERNS0_6StreamE", "icv_y8_ownDilateEllipseBorderReplicate_32f_C1R", "own_ipps_dCos_E7EPnnn", "Java_org_opencv_core_Mat_nGetF", "cvReleaseGraphScanner", "icv_y8_ownFilterMinRow09_8u_C1R", "icv_m7_ownFilterMaxRow01_32f_C3R", "_ZNK2cv3ocl6Device18deviceVersionMinorEv", "icv_m7_ippiFilterMedianBorder_16u_C1R", "cvGetCols", "ippicvsDFTGetSize_R_32f", "icv_m7_ownFilterMinRow07_8u_C3R", "icv_m7_ippiFilterSobelNegVertBorder_32f_C1R", "icv_l9_ippiOr_8u_C1R", "Java_org_opencv_imgproc_Imgproc_dilate_12", "icv_y8_ownFilterMaxColumnVH_8u_C1R", "Java_org_opencv_video_FarnebackOpticalFlow_setFastPyramids_10", "icv_y8_ownsMul_16s_PosSfs", "_ZN2cv21DetectionBasedTracker13resetTrackingEv", "icv_m7_ownErodeEllipseBorderReplicate_8u_C4R", "Java_org_opencv_ml_TrainData_getNAllVars_10", "icv_l9_owniFilterMedianBorderInMem_32f_C1R", "icv_y8_ippiCopyReplicateBorder_8u_C3IR", "ippicviNormRel_Inf_32f_C1R", "icv_m7_ippiCopy_16u_P3C3R", "ippicviMean_StdDev_32f_C3CMR", "icv_m7_ownscDftInv_Prime16_32fc", "ippicviColorToGray_32f_C3C1R", "icv_l9_ownsrDFTinv_6_scale_32f", "cvStartNextStream", "_ZN2cv3ocl12PlatformInfoC2EPv", "icv_l9_owncvMinMaxIndx_32f_C1MR_H9L9", "_ZN2cv3ocl7ContextC1Ei", "ippicviTranspose_32s_C1IR", "Java_org_opencv_objdetect_HOGDescriptor_getWinSigma_10", "icv_y8_ippiCopyReplicateBorder_16s_C1R", "icv_l9_ownFilterMaxRow11_8u_C4R", "cvSolve", "icv_y8_ownsGetSizeDftPrimeFact_32f_32f", "own_ipps_sSqrt_E7LAynn", "icv_y8_ippiResizeCubicInit_16s", "ippicviAddWeighted_16u32f_C1IMR", "_ZNSt20bad_array_new_lengthD2Ev", "icv_y8_ippiErodeBorder_32f_C3R", "_ZN2cv11VideoWriterD0Ev", "_ZNK2cv4cuda6GpuMat6copyToERKNS_12_OutputArrayE", "icv_m7_ownsSub_16s_Bound", "cvRANSACUpdateNumIters", "_ZN2cv7directx3ocl38initializeContextFromDirect3DDevice9ExEP18IDirect3DDevice9Ex", "cvEqualizeHist", "icv_m7_owns_cFftFwd_Fact8_64fc", "icv_y8_ownFilterMaxColumn05_32f_C1R", "ippicvsDFTInit_R_64f", "Java_org_opencv_calib3d_Calib3d_calibrateCameraExtended_12", "icv_m7_ippiMirror_16s_C4IR", "ippicviDCTFwdGetSize_32f", "icv_m7_ippiNormDiff_Inf_8u_C3CMR", "icv_l9_ownpi_NormInfDiff_32f_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_getDetectShadows_10", "icv_m7_ownippiMorphologyBorderReplicateInMemGetSize_8u_C1R", "ippicviMirror_16u_C1IR", "icv_y8_owns_cFFTfwd_8_scale_64fc", "icv_l9_ippiTranspose_8u_C3IR", "icv_y8_ippiConvert_32f16u_C1RSfs", "icv_y8_ownsMul_8u_Bound", "Java_org_opencv_photo_AlignMTB_process_11", "ippicviCopy_16u_C1MR", "icv_l9_ippiMinEigenVal_32f_C1R", "ippicviConvert_16s32f_C1R", "Java_org_opencv_features2d_Params_set_1maxInertiaRatio_10", "_ZNK2cv9Algorithm11writeFormatERNS_11FileStorageE", "_ZN2cv3hal5Morph6createEiiiiiiPhmiiiiiPKdibb", "_ZN2cv9SparseMat5eraseEPKiPm", "__register_frame_info_table_bases", "icv_m7_ippiFilterSobelHorizBorderGetBufferSize", "_ZN2cv4cuda6GpuMatC2EiiiPvm", "_ZN2cv3ocl12PlatformInfoaSERKS1_", "cvCalcEMD2", "icv_l9_owns_rFFTfwd_4_scale_64f", "_ZN2cv9videostab14StabilizerBase14doOneIterationEv", "_Z26vector_vector_Point_to_MatRSt6vectorIS_IN2cv6Point_IiEESaIS2_EESaIS4_EERNS0_3MatE", "icv_l9_ownNormDiff_L2_32f_C3CMR_HSW", "own_ipps_dSin_U8EPnnn", "ippicviNorm_L2_16u_C3R", "icv_m7_ownscDftFwd_Fact13_32fc", "icv_m7_ownFilterBorderConvert32s_8u", "Java_org_opencv_imgproc_LineSegmentDetector_delete", "ippicviMulC_32f_C1R", "icv_m7_ippiThreshold_Val_32f_C1R", "Java_org_opencv_calib3d_Calib3d_reprojectImageTo3D_10", "Java_org_opencv_features2d_Features2d_drawMatches_10", "icv_y8_owns_rFFTinv_4_scale_32f", "ippicviAddProduct_32f_C1IR", "icv_l9_ownsrDFTfwd_3_32f", "icv_y8_ippiCopy_32f_P3C3R", "icv_l9_ownFilterColumnPipeline_16s_C1R_3x3_kerDx_W7cn", "icv_l9_ippsFFTGetSize_R_32f", "Java_org_opencv_calib3d_StereoSGBM_setUniquenessRatio_10", "_ZN2cv3ocl13ProgramSourceC2Ev", "_ZN2cv4cuda6GpuMatC1ERKS1_NS_5Rect_IiEE", "cvSave", "icv_y8_gres_NormL2_16u_C4R", "ippicvsMagnitude_32f", "_ZN2cv12VideoCaptureD2Ev", "icv_y8_ownsrDFTfwd_14_scale_64f", "icv_m7_ippsMul_64fc_I", "_ZN2cv7addTextERKNS_3MatERKNS_6StringENS_6Point_IiEES5_iNS_7Scalar_IdEEiii", "icv_l9_owns_cFft_BlkMerge_32fc", "ippicviMin_8u_C1R", "_ZN2cv15calibrateCameraERKNS_11_InputArrayES2_NS_5Size_IiEERKNS_17_InputOutputArrayES7_RKNS_12_OutputArrayESA_SA_SA_SA_iNS_12TermCriteriaE", "Java_org_opencv_core_Mat_n_1clone", "_ZN2cv9videostab14StabilizerBase16postProcessFrameERKNS_3MatE", "icv_l9_ippiThreshold_16s_C1R", "icv_l9_ownippiErodeBorder_8u_C4R", "icv_l9_owns_rFFTfwd_8_scale_32f", "_ZN2cv25BOWImgDescriptorExtractor13setVocabularyERKNS_3MatE", "Java_org_opencv_core_Core_norm_11", "icv_y8_ownsFFTGetBufSize_C_64fc", "icv_l9_ownpi_Sum_32f_C4R_vlang", "icv_l9_ippsDCTFwdGetSize_32f", "icv_y8_ippsDCTInvGetSize_32f", "icv_l9_ippiMarkSpeckles_16s_C1IR", "_ZN2cv4UMat5zerosEiii", "_ZN2cv7hconcatEPKNS_3MatEmRKNS_12_OutputArrayE", "Java_org_opencv_core_Core_bitwise_1and_11", "_ZN2cv8Subdiv2DC2Ev", "ippicviMean_StdDev_16u_C1MR", "icv_m7_ippiResizeCubic_16s_C1R", "icv_l9_owniFilter_32f_C1R_g9e9_3", "icv_l9_owns_initTabBitRevLarge", "Java_org_opencv_video_Video_buildOpticalFlowPyramid_10", "_ZNK2cv5MatOp15augAssignDivideERKNS_7MatExprERNS_3MatE", "icv_y8_ippiAddSquare_8u32f_C1IMR", "ippicviAddSquare_16u32f_C1IMR", "own_ipps_sExp_L9HAynn", "_ZNK2cv17CommandLineParser4Impl12split_stringERKNS_6StringEcb", "icv_m7_owns_rFFT_2_32f", "ippicviAdd_32f_C1R", "cvValidateDisparity", "icv_y8_ownFilterColumnPipeline_16s8u_C1R_5x5_W7cn", "Java_org_opencv_ml_SVMSGD_setMarginRegularization_10", "cvTypeOf", "ippicviNormRel_L2_16u_C1R", "icv_l9_ownpi_Min_16u_C1R", "_ZN2cv8Subdiv2D10deleteEdgeEi", "Java_org_opencv_features2d_DescriptorExtractor_descriptorSize_10", "_ZN2cv9normalizeERKNS_9SparseMatERS0_di", "icv_m7_ippiThreshold_GTVal_32f_C1R", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_m7_ippiCopy_16u_AC4C3R", "Java_org_opencv_core_Core_completeSymm_11", "icv_m7_owns_cFFTfwd_4_scale_32fc", "_ZN2cv3hal10invSqrt64fEPKdPdi", "icv_y8_ownFilterMaxRow05_32f_C3R", "_ZN2cv3ocl6Kernel3setEiRKNS_4UMatE", "cvCreateImage", "Java_org_opencv_video_DualTVL1OpticalFlow_getWarpingsNumber_10", "Java_org_opencv_ml_TrainData_getTestSamples_10", "Java_org_opencv_calib3d_StereoSGBM_create_11", "icv_l9_ippiTranspose_32f_C3IR", "_ZN2cveqEdRKNS_3MatE", "icv_l9_ippsExp_64f_A50", "_ZN2cv14createLMSolverERKNS_3PtrINS_8LMSolver8CallbackEEEi", "icv_m7_owns_cFFTfwd_32_64fc", "icv_l9_ownsGetSizeTabDftDir_64f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_y8_ippiSubC_32f_C1R", "icv_y8_ownErodeEllipseBorderReplicate_8u_C4R", "icv_m7_owniShiftClipRectZeroTail_32f_C1R", "icv_l9_ownsrDFTinv_13_32f", "icv_m7_ippiConvert_16u16s_C1RSfs", "icv_m7_ippiSub_16s_C1RSfs", "icv_y8_ownpi_NormL1Rel_16u_C1R", "icv_y8_ippsMagnitude_64f", "_ZNK2cv3ocl6Device23nativeVectorWidthDoubleEv", "icv_l9_ippiDCTFwdInit_32f", "icv_l9_owniNormLevel_8u32f_C1R", "Java_org_opencv_video_BackgroundSubtractor_delete", "_ZN2cv21DetectionBasedTracker20updateTrackedObjectsERKSt6vectorINS_5Rect_IiEESaIS3_EE", "_ZN2cv9videostab15VideoFileSource5resetEv", "icv_y8_owns_initTabDct_Dir_32f", "icv_y8_gres_NormL2Diff_16u_C1R", "icv_m7_ownpi_CmpLT_8u_C1R", "_ZN2cvgeEdRKNS_3MatE", "cvSetRealND", "_ZN2cv11RNG_MT199377uniformEii", "Java_org_opencv_core_Mat_nGet", "icv_l9_ownpi_NormInfDiff_16s_C3R", "icv_l9_ippiMul_16s_C1RSfs", "icv_l9_owniCopy_16s_P3C3R", "_ZN2cv9videostab20WobbleSuppressorBaseC2Ev", "icv_y8_ownRow1Linear64f", "icv_m7_ippiFFTInv_PackToR_32f_C1R", "icv_m7_ownsInitTabDftInvRec_64f", "_ZN2cv3hal21cvtBGRtoThreePlaneYUVEPKhmPhmiiibi", "_ZN2cv6detail12DpSeamFinder16computeGradientsERKNS_3MatES4_", "Java_org_opencv_ml_ANN_1MLP_delete", "_ZN2cv18createMergeDebevecEv", "ippicviConvert_8u16s_C1R", "ippicviResizeGetSrcOffset_16u", "_ZN2cv6detail14FeatherBlender16createWeightMapsERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_y8_ippiSum_16s_C3R", "_ZN2cv4cuda18setBufferPoolUsageEb", "_ZNK2cv3ocl6Device13driverVersionEv", "icv_m7_ownFilterRowBorderPipeline_16u_C1R_X", "ippicviNormRel_L1_16u_C1MR", "icv_y8_ippiNormRel_L2_16s_C1R", "icv_l9_ippiNormDiff_L2_16u_C4R", "own_ipps_sLn_U8LAynn", "icv_y8_ippiNormDiff_L2_16s_C4R", "ippicviCopySubpixIntersect_8u_C1R", "icv_m7_ownscDFTfwd_9_32fc", "_ZN2cv3hal2LUEPfmiS1_mi", "_ZN2cv11createCLAHEEdNS_5Size_IiEE", "icv_m7_ippsDFTInit_C_32fc", "icv_l9_ownNorm_L2_8u_C1MR_HSW", "Java_org_opencv_ml_EM_trainM_10", "icv_m7_ippiNorm_L1_32f_C4R", "Java_org_opencv_imgproc_Subdiv2D_symEdge_10", "_ZN2cv2ml6KDTree5buildERKNS_11_InputArrayES4_b", "icv_y8_ippiMirror_32f_C3IR", "icv_y8_ippsExp_32f_A21", "icv_y8_ippiFilterMedianBorder_8u_C1R", "icv_l9_owniConvert_16s8u", "Java_org_opencv_photo_AlignMTB_setMaxBits_10", "ippicviCopySubpixIntersect_32f_C1R", "icv_l9_owniFilter32f_16u_C1R_g9e9_0", "icv_l9_ownsZero_8u", "_ZNK2cv12MatAllocator4copyEPNS_8UMatDataES2_iPKmS4_S4_S4_S4_b", "_ZN2cv6detail15GainCompensator5applyEiNS_6Point_IiEERKNS_17_InputOutputArrayERKNS_11_InputArrayE", "icv_l9_ownFilterMinRow13_32f_C3R", "ippicviConvert_8u8s_C1RSfs", "_ZN2cvmlERKNS_7MatExprERKNS_3MatE", "icv_l9_ownsGetSizeTabDftInvRec_32f", "icv_l9_owns_cFftFwd_Fact4_32fc", "Java_org_opencv_calib3d_Calib3d_recoverPose_10", "_ZNK2cv8Subdiv2D9getVertexEiPi", "icv_l9_ippsMinIndx_32f", "_ZN2cv15calcBackProjectEPKNS_3MatEiPKiRKNS_9SparseMatERKNS_12_OutputArrayEPPKfdb", "icv_y8_ippiFilterBorder_32f_C4R", "icv_m7_ippiTrueDistanceTransform_8u32f_C1R", "_ZN2cv9videostab17OnePassStabilizer5resetEv", "icv_l9_ownscDftInv_Fact4_32fc", "own_ipps_dSin_E7EPnnn", "icv_l9_ownFilterBorder16s_16s_C3R", "Java_org_opencv_features2d_DescriptorMatcher_write_10", "Java_org_opencv_ml_ANN_1MLP_load_10", "icv_y8_ippiColorToGray_32f_C3C1R", "icv_m7_ownsrDFTfwd_6_scale_64f", "icv_y8_ownippiFilterMaxBorderReplicate_8u_C3R", "icv_m7_ownippiMorphologyBorderReplicateInMemInit_8u_C3R", "icv_y8_ownsSubC_32f", "cvCreateHist", "icv_m7_ownpi_NormInf_8u_C1R", "_ZN2cv3ocl7Program9getPrefixERKNS_6StringE", "ippicviMean_StdDev_8u_C3CR", "icv_m7_owniSqrDistanceNorm_Valid_32f_C1R", "icv_y8_ippiResizeLinear_16s_C4R", "icv_y8_owns_cFftInv_Fact8_64fc", "Java_org_opencv_features2d_KAZE_create_11", "_ZNK2cv5MatOp8multiplyERKNS_7MatExprES3_RS1_d", "_ZN2cv8fillPolyERKNS_17_InputOutputArrayERKNS_11_InputArrayERKNS_7Scalar_IdEEiiNS_6Point_IiEE", "_ZN2cv3Mat6resizeEm", "cvCreateMatNDHeader", "icv_l9_ownMean_StdDev_8u_C3CMR_HSW", "cvFloodFill", "icv_l9_ippiMirror_8u_C3R", "_Z20Mat_to_vector_doubleRN2cv3MatERSt6vectorIdSaIdEE", "icv_y8_ippiSum_32f_C4R", "icv_y8_owns_initTabBitRevLarge", "_ZN2cv3MatC1ERKS0_RKNS_5RangeES5_", "icv_y8_owns_sDctFwd_Fft_32f", "icv_m7_ownsMul_16s_NegSfs", "icv_l9_ownscDftFwd_Fact5_32fc", "Java_org_opencv_imgproc_Imgproc_rectangle_11", "Java_org_opencv_features2d_GFTTDetector_delete", "_ZN2cv19getBuildInformationEv", "Java_org_opencv_photo_TonemapMantiuk_setSaturation_10", "Java_org_opencv_video_DualTVL1OpticalFlow_getInnerIterations_10", "icv_l9_ownFilterMaxRow07_32f_C4R", "_ZN3tbb8internal18concurrent_monitor12prepare_waitERNS1_14thread_contextEm", "icv_y8_ippiMirror_32s_C1R", "_ZN2cv7solveLPERKNS_3MatES2_RS0_", "icv_y8_ippiNorm_L2_16s_C3R", "icv_l9_ownippiErodeBorder_8u_C3R", "icv_m7_ownscDftInv_PrimeFact_64fc", "icv_l9_owns_initDctFwd_Conv_32f", "icv_y8_ippiConvert_8s32f_C1R", "Java_org_opencv_imgproc_Imgproc_pyrDown_12", "icv_l9_ownMaxEllipse_8u_C1", "icv_y8_ownsrDFTinv_13_scale_32f", "_ZN2cv9Feature2D6detectERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EES3_", "Java_org_opencv_imgproc_Imgproc_accumulate_10", "_ZN2cv13HOGDescriptor14setSVMDetectorERKNS_11_InputArrayE", "_ZNK2cv16BOWKMeansTrainer7clusterERKNS_3MatE", "icv_m7_ippiAbsDiff_8u_C1R", "icv_m7_ippiNorm_L2_32f_C1R", "icv_l9_ippiResizeGetSrcOffset_8u", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_P8Y8cn", "icv_l9_owns_cFFT_1_scale_64fc", "icv_m7_ownpi_NormInfDiff_8u_C4R", "Java_org_opencv_photo_Photo_pencilSketch_10", "icv_y8_owniGetRectBottom_16s", "icv_y8_ownscDftFwd_Prime11_32fc", "cvDistTransform", "cvCheckChessboard", "icv_y8_ippsFlip_8u_I", "icv_m7_ippiFilterMinBorder_32f_C4R", "icv_l9_cv_ownippiFilterMax_16s_Col", "cvSampleLine", "icv_m7_owniCCDiv_32f_C1IR", "icv_m7_ownsrDFTfwd_7_scale_64f", "_ZNSt9bad_allocD1Ev", "_ZNK2cv3ocl13ProgramSource6sourceEv", "_ZN2cv6detail12DpSeamFinder9findEdgesEv", "_ZN3tbb8internal21PrintExtraVersionInfoEPKcS2_z", "icv_m7_ippiCopyConstBorder_32s_C1R", "icv_l9_ownFilterMaxRow09_32f_C1R", "ippicviNormRel_Inf_16u_C1R", "icv_y8_owniTranspose32s_C1R_core2", "icv_m7_ownCubicKernel3", "_ZN2cv9videostab20FromFileMotionReaderC2ERKNS_6StringE", "icv_l9_ownscDftInv_Fact7_64fc", "Java_org_opencv_ml_SVM_setCoef0_10", "icv_m7_ippiMulPack_32f_C1R", "icv_l9_ippiDotProd_16s64f_C1R", "_ZN9__gnu_cxx27__verbose_terminate_handlerEv", "Java_org_opencv_photo_Photo_createTonemapDrago_11", "Java_org_opencv_videoio_VideoWriter_delete", "_ZNK2cv4UMat6copyToERKNS_12_OutputArrayERKNS_11_InputArrayE", "icv_l9_ownFilterMinRow04_8u_C1R", "icv_m7_ippiNormRel_L2_8u_C1R", "icv_m7_ippiCopyConstBorder_8u_C3R", "Java_org_opencv_ml_EM_trainE_11", "icv_m7_ippiNormDiff_L2_16u_C3R", "Java_org_opencv_ml_LogisticRegression_delete", "icv_y8_ownscDFTfwd_11_scale_32fc", "icv_y8_ippsMalloc_8u", "icv_y8_ippiCopyConstBorder_16u_C1R", "icv_l9_ippiSum_16u_C4R", "Java_org_opencv_core_Mat_n_1setTo__JJJ", "icv_y8_ownippiFilterMaxGetBufferSize_32f_C4R", "_ZN3tbb8internal3rml19make_private_serverERNS1_10tbb_clientE", "icv_l9_ownFilterMaxRow06_32f_C3R", "Java_org_opencv_core_Core_divide_17", "icv_y8_ippiNormRel_Inf_8u_C1R", "Java_org_opencv_ml_TrainData_getTrainSampleWeights_10", "icv_m7_ippiNormRel_L1_16u_C1R", "icv_m7_ownErodeEllipseBorderReplicate_32f_C3R", "icv_m7_ippiResizeLinear_64f_C3R", "icv_m7_ippiFilterScharrHorizMaskBorder_32f_C1R", "icv_y8_ownsAddC_16s_I", "_ZN2cv9SparseMat3HdrC2EiPKii", "_ZNK2cv7MatExpr3invEi", "Java_org_opencv_features2d_MSER_setPass2Only_10", "_ZN2cv22SparseMatConstIteratorC2EPKNS_9SparseMatE", "Java_org_opencv_photo_TonemapDrago_setSaturation_10", "Java_org_opencv_videoio_VideoWriter_set_10", "_ZN3tbb8internal17generic_scheduler24free_nonlocal_small_taskERNS_4taskE", "cvGrabFrame", "_ZN2cv2ml6DTrees6createEv", "icv_y8_ippiTranspose_32f_C3IR", "icv_l9_ownpi_NormInfRel_16s_C1R", "Java_org_opencv_core_Core_solve_10", "icv_y8_ippsConvert_32f16u_Sfs", "icv_y8_ippiCopyConstBorder_32s_C1R", "Java_org_opencv_imgproc_Imgproc_pyrDown_11", "icv_m7_ownResize1Linear16u", "Java_org_opencv_core_Core_log_10", "icv_l9_ippiFilterGaussianBorder_16u_C1R", "icv_m7_ownscDFTinv_13_scale_64fc", "icv_m7_ippiConvert_32s32f_C1R", "Java_org_opencv_video_BackgroundSubtractorMOG2_setShadowThreshold_10", "icv_y8_ownFilterMinRow13_8u_C3R", "_ZN3tbb8internal17generic_scheduler14cleanup_masterEb", "Java_org_opencv_imgproc_Imgproc_medianBlur_10", "_ZN2cv17DescriptorMatcher20DescriptorCollectionD2Ev", "icv_l9_ippiTranspose_32s_C3IR", "icv_m7_ippiXYZToRGB_32f_C3R", "icv_y8_ownscDftInv_Prime7_64fc", "_ZN2cv3ocl6Kernel3setEiRKNS0_9KernelArgE", "icv_m7_ownsrDftFwd_PrimeFact_32f", "icv_y8_cv_ownippiFilterMin_16s_Row", "icv_m7_ippiTranspose_32f_C4R", "_ZN2cv22SimpleBlobDetectorImpl6detectERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EES3_", "icv_m7_ownsrDFTinv_14_32f", "_ZN2cv9polylinesERKNS_17_InputOutputArrayERKNS_11_InputArrayEbRKNS_7Scalar_IdEEiii", "ippicviMirror_32s_C1R", "_ZN2cv4UMatD1Ev", "icv_m7_owns_cFFTfwd_32_scale_64fc", "icv_y8_ippiCopy_32f_C4R", "cvFindChessboardCorners", "icv_y8_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "cvFitEllipse2", "icv_m7_ippiDistanceTransform_3x3_8u32f_C1R", "icv_l9_ownippiFilterMaxGetBufferSize_8u_C4R", "icv_l9_ippiFilterMinBorder_8u_C4R", "icv_l9_ippiNormRel_Inf_16u_C1R", "icv_m7_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "_ZN2cv2ml6DTrees4NodeC2Ev", "icv_y8_ippiAdd_8u32f_C1IR", "icv_y8_ippiResizeCubicInit_16u", "Java_org_opencv_calib3d_StereoMatcher_setMinDisparity_10", "cvCreateMemStorage", "icv_m7_ippsFFTGetSize_C_64fc", "icv_l9_ippiNorm_L1_8u_C1MR", "icv_l9_owniExchange_8u", "icv_y8_ownsMinEvery_16u", "_ZN2cv3Mat6createERKSt6vectorIiSaIiEEi", "_ZN2cv3ogl9Texture2DC2ENS_5Size_IiEENS1_6FormatEjb", "_Z18vector_char_to_MatRSt6vectorIcSaIcEERN2cv3MatE", "Java_org_opencv_imgproc_Subdiv2D_getVertex_10", "ownFeaturesToIdx", "_ZN2cv3hal6div32sEPKimS2_mPimiiPv", "icv_y8_owns_rFFTinv_8_32f", "icv_l9_ippiFilterMaxBorder_32f_C1R", "own_ipps_sInvSqrt_L9LAynn", "_ZN2cv32createNormHistogramCostExtractorEiif", "Java_org_opencv_photo_AlignMTB_getExcludeRange_10", "icv_l9_ownResize4Cubic32f", "icv_l9_ippiNormDiff_Inf_32f_C4R", "icv_l9_ownpi_Max_16u_C1R", "Java_org_opencv_ml_StatModel_getVarCount_10", "cvMemStorageAlloc", "icv_m7_ownRow4Linear32f", "icv_l9_owns_cFftInv_Fact4_64fc", "icv_m7_ippiCopyConstBorder_32s_C4R", "icv_l9_ownpi_CmpEQ_16s_C1R", "icv_y8_ownsrDFTfwd_6_scale_64f", "icv_y8_owniConvert_8u32f_C1R", "icv_m7_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_W7cn", "_Z21Mat_to_vector_Point3iRN2cv3MatERSt6vectorINS_7Point3_IiEESaIS4_EE", "icv_l9_ownippiDilateBorder_8u_C4R", "cvDrawContours", "ippicviApplyHaarClassifier_32f_C1R", "icv_y8_GET_ANCHOR_BORDER", "icv_l9_ownippiMorphologyBorderReplicateInMemInit_32f_C4R", "_ZN2cv3hal6max32sEPKimS2_mPimiiPv", "_ZN2cv3hal8split64sEPKlPPlii", "icv_l9_ippiFilterMaxBorder_8u_C1R", "icv_m7_ownscDftInv_Fact11_64fc", "icv_y8_ownFilterMinRow13_32f_C3R", "_ZN2cv3hal14cvtBGRtoBGR5x5EPKhmPhmiiibi", "cvCalcOpticalFlowPyrLK", "icv_m7_ownFilterMaxRow02_8u_C1R", "icv_l9_ownAbsDiff_16u_C1R", "icv_l9_ippiSwapChannels_32f_C4C3R", "icv_l9_ippiDilateBorder_32f_C3R", "Java_org_opencv_imgproc_Imgproc_fillConvexPoly_11", "icv_m7_ownFilterBorder16s_16u_C4R", "icv_m7_ippsSqrt_32f", "icv_l9_ippiSet_32f_C1MR", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerSobel", "icv_l9_ippiMirror_32s_C4R", "icv_l9_ownFilterMinRow15_32f_C4R", "_ZN2cv9videostab14StabilizerBaseC1Ev", "icv_l9_gres_NormL2Diff_8u_C4R", "Java_org_opencv_ml_StatModel_predict_11", "cvInpaint", "icv_m7_ippiNormDiff_L1_32f_C3CMR", "ippicviCopy_8u_C1R", "icv_y8_ippiFilterColumnPipelineGetBufferSize_16s_C1R", "icv_y8_ownCalcBorderR1Linear16u", "_ZN2cv6detail12CameraParamsC2Ev", "icv_l9_ippiMirror_8u_C1R", "_ZN2cv3MatC1ERKSt6vectorIiSaIiEEiPvPKm", "_ZN2cv11findNonZeroERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_y8_owniConvert_32f8u_ccode", "_ZNK2cv3ocl6Device15maxMemAllocSizeEv", "icv_l9_ippsMin_32f", "icv_m7_ippiResizeGetSrcOffset_16u", "Java_org_opencv_photo_Photo_createTonemapMantiuk_10", "_ZN2cv6formatEPKcz", "_ZNK2cv8Subdiv2D7edgeDstEiPNS_6Point_IfEE", "_ZNK2cv12_OutputArray9getMatRefEi", "icv_y8_ippiMean_StdDev_16u_C3CMR", "icv_y8_ownpi_CmpLT_32f_C1R", "icv_y8_ippiConvert_8s16s_C1R", "ippicviThreshold_LTVal_8u_C1R", "_ZN2cv3minERKNS_3MatES2_", "_ZN2cv17DescriptorMatcher8knnMatchERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "cvCreateData", "Java_org_opencv_calib3d_Calib3d_recoverPose_14", "icv_l9_ippiNormRel_L2_32f_C1MR", "icv_m7_ownscDFTfwd_5_32fc", "_ZN2cv4UMat9adjustROIEiiii", "ippicviSet_32s_C1MR", "icv_l9_hswRGBToGray_32f_C3C1R", "icv_y8_ownsMulC_16s_I_PosSfs", "icv_m7_ippiMirror_8u_C3R", "_ZN2cv3hal8gemm32fcEPKfmS2_mfS2_mfPfmiiii", "Java_org_opencv_photo_TonemapDurand_getSaturation_10", "cvCalcArrBackProjectPatch", "icv_l9_owniFilter_32f_C3R_g9e9_5", "icv_l9_ownFilterMaxRow15_32f_C4R", "icv_l9_owncvMinMaxIndx_8u_C1MR_H9L9", "Java_org_opencv_features2d_DescriptorMatcher_clone_10", "_ZTv0_n48_N2cv22SimpleBlobDetectorImpl4readERKNS_8FileNodeE", "ippicviAdd_8u32f_C1IMR", "icv_m7_ownscDftInv_Prime6_64fc", "icv_y8_ownscDFTinv_5_32fc", "Java_org_opencv_core_Core_getBuildInformation_10", "icv_l9_ownNormRel_L2_32f_C1MR_HSW", "_ZN2cv9AlgorithmD2Ev", "icv_y8_ippsConvert_8s16s", "icv_m7_owns_rFFTinv_8_scale_32f", "icv_m7_ippiSub_16u_C1RSfs", "icv_m7_ownsrDFTfwd_12_32f", "cvMinS", "_ZN2cv19DualTVL1OpticalFlow6createEdddiidiiddib", "_ZN2cv6detail21BestOf2NearestMatcherC1Ebfii", "cvClearSet", "icv_l9_ownFilterMaxColumn05_8u_C1R", "icv_y8_ownFilterRowBorderPipeline_16u_C3R_5x5", "ippicviCopy_8u_C1MR", "icv_y8_owniFilter_32f_C3R_v8u8_1NA", "_Znwm", "icv_m7_ownFilterColumnPipeline_16s_C1R_3x3", "Java_org_opencv_photo_TonemapDrago_getBias_10", "_ZNK2cv4UMat11checkVectorEiib", "icv_l9_owns_rFFT_1_32f", "_ZN2cv9SparseMat3ptrEiiibPm", "icv_l9_ippiNorm_Inf_16s_C4R", "Java_org_opencv_ml_KNearest_findNearest_11", "Java_org_opencv_objdetect_HOGDescriptor_computeGradient_10", "icv_l9_ownippiFilterMaxBorderReplicate_8u_C3R", "icv_l9_ippiNormDiff_L1_32f_C4R", "icv_m7_owns_rFFTfwd_4_32f", "icv_y8_ownDilate_8u_C4S", "_ZN2cv8Subdiv2D11deletePointEi", "_ZN2cv3ogl6Arrays18resetTexCoordArrayEv", "_ZNK2cv5MatOp4sizeERKNS_7MatExprE", "icv_m7_Dilate_8u_C1S", "icv_l9_owns_cFFTinv_16_scale_32fc", "icv_y8_ippiMean_StdDev_32f_C1R", "icv_l9_owniFilter32f_16u_C3R_g9e9_3", "cvMorphologyEx", "Java_org_opencv_features2d_FlannBasedMatcher_create_10", "_ZN2cv3ipp12getIppStatusEv", "icv_y8_ippiMirror_16s_C3R", "ippicviFilterGaussianGetBufferSize", "icv_y8_ippiAlphaPremul_8u_AC4R", "_ZNK10__cxxabiv119__pointer_type_info14__is_pointer_pEv", "cvSeqRemove", "_ZN2cv12VideoCapturersERNS_4UMatE", "_ZN2cv3maxERKNS_3MatES2_", "icv_y8_ownsSub_8u", "icv_l9_ownFilterMinRowVH_32f_C3R", "icv_m7_myRGBToXYZ_16u_C3R", "icv_y8_owns_cFFTinv_4_scale_32fc", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "_ZN2cv11RotatedRectC2ERKNS_6Point_IfEES4_S4_", "icv_m7_ippiLUTPalette_8u_C4R", "icv_l9_ippiNorm_L1_16u_C1MR", "icv_m7_ownippiMorphologyBorderReplicateInMemInit_32f_C3R", "cvShowImage", "icv_m7_ippiConvert_16u32f_C1R", "_ZN2cv3hal11cvtBGRtoBGREPKhmPhmiiiiib", "_ZN2cv11FileStorage5writeERKNS_6StringES3_", "ippicviNormRel_L1_8u_C1MR", "Java_org_opencv_imgcodecs_Imgcodecs_imreadmulti_11", "icv_l9_ippiSet_16s_C1MR", "icv_l9_ippiNormDiff_L1_8u_C3CMR", "icv_l9_ownRow1Cubic16s", "icv_m7_ownscDftFwd_Fact7_32fc", "Java_org_opencv_calib3d_StereoMatcher_getBlockSize_10", "Java_org_opencv_core_Core_add_10", "icv_y8_ippiNorm_L1_16s_C1R", "icv_l9_ownscDFTinv_11_64fc", "_ZNK2cv4cuda10DeviceInfo24maxTextureCubemapLayeredEv", "icv_l9_ippiTranspose_8u_C1IR", "icv_y8_ownMorphologyBorderInit_8u", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERSt6vectorINS0_13ImageFeaturesESaIS6_EE", "icv_m7_ownFilterMinRow15_8u_C3R", "_ZN2cv3ocl8PlatformC1Ev", "icv_y8_ownFilterMaxRow15_32f_C4R", "icv_l9_ippiCopyConstBorder_16s_C3R", "_ZN3tbb10interface78internal15task_arena_base19internal_initializeEv", "icv_m7_ippsDFTGetSize_R_64f", "icv_l9_ownCalcBorderR4Linear32f", "Java_org_opencv_imgproc_Imgproc_ellipse_13", "icv_l9_ownippiFilterMaxBorderReplicate_8u_C4R", "icv_l9_ownscDFTinv_12_scale_32fc", "icv_y8_ippiDilateBorder_8u_C3R", "icv_l9_owns_cFFTinv_64_scale_32fc", "icv_m7_ownFilterMaxRow03_32f_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_setInnerIterations_10", "_ZNK2cv13HOGDescriptor5writeERNS_11FileStorageERKNS_6StringE", "icv_l9_ownippiDilateBorder_8u_C1R", "_ZN2cv3ocl6Kernel6createEPKcRKNS0_13ProgramSourceERKNS_6StringEPS7_", "_ZN2cv10PCAProjectERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayE", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_11", "Java_org_opencv_imgproc_Imgproc_threshold_10", "_ZN2cv5instr21setUseInstrumentationEb", "cvStopLoop", "icv_m7_ownscDFTinv_9_scale_32fc", "_ZNSt10bad_typeidD0Ev", "icv_y8_ippiSwapChannels_8u_C3C4R", "_ZN2cv9videostab25ConsistentMosaicInpainterC1Ev", "icv_m7_owniFilterMedianBorderInMem_16s_C1R", "_ZN2cv5instr8setFlagsENS0_5FLAGSE", "icv_m7_ippiTranspose_32s_C3R", "icv_y8_ippiMorphologyBorderGetSize_8u_C1R", "icv_l9_ippiAddSquare_16u32f_C1IR", "own_ipps_dSqrt_L9LAynn", "icv_l9_ippiFilterColumnPipelineGetBufferSize_16s8u_C3R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "icv_l9_ippiMinEigenVal_8u32f_C1R", "_ZN2cv3SVD7computeERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_m7_ownscDftInv_Prime13_32fc", "_ZN2cv22estimateRigidTransformERKNS_11_InputArrayES2_b", "icv_y8_owniConvert_8s16u_ccode", "Java_org_opencv_core_Mat_n_1rowRange", "Java_org_opencv_features2d_Params_set_1maxArea_10", "icv_l9_ownFilterMinRow11_8u_C4R", "ippicviResizeCubic_16u_C3R", "icv_m7_ipMirror45_8uC1R", "_Z21vector_Point3d_to_MatRSt6vectorIN2cv7Point3_IdEESaIS2_EERNS0_3MatE", "icv_y8_owniFilter_32f_C3R_v8u8_3NA", "_ZN2cv3hal6div16sEPKsmS2_mPsmiiPv", "icv_y8_ownpiDotProd_16s64f_C1R", "icv_m7_ippiSwapChannels_8u_C3C4R", "icv_m7_ownscDftFwd_Prime7_32fc", "_ZN2cv12VideoCapture4openEi", "Java_org_opencv_features2d_MSER_setMaxArea_10", "Java_org_opencv_photo_MergeRobertson_process_10", "icv_m7_ippiSwapChannels_32f_C4R", "icv_l9_owns_cFFTfwd_4_32fc", "icv_l9_ippiCopyReplicateBorder_32s_C1R", "_ZN2cv9videostab20GaussianMotionFilter9setParamsEif", "icv_y8_ippiNormDiff_L2_8u_C1R", "Java_org_opencv_calib3d_Calib3d_projectPoints_12", "icv_l9_ippiDFTInv_CToC_32fc_C1R", "_ZN2cv14setTrackbarPosERKNS_6StringES2_i", "cvReleaseImageHeader", "icv_l9_ownscDFTfwd_13_scale_64fc", "icv_l9_ippiFilterBorder_8u_C4R", "Java_org_opencv_calib3d_Calib3d_solvePnP_10", "icv_y8_owniTranspose16u_C1R_core2", "Java_org_opencv_core_Mat_n_1step1__J", "icv_l9_ownResize4Linear16u", "_ZN2cv8KeyPoint7overlapERKS0_S2_", "icv_m7_ippiNorm_L2_16s_C4R", "_ZNK2cv8FileNode4sizeEv", "cvGetWindowName", "icv_m7_ownFilterMaxRowVH_8u_C1R", "icv_l9_ownNormDiff_Inf_16u_C1MR_HSW", "ippicviFilterMaxBorder_8u_C4R", "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", "icv_y8_ippiResizeLinear_64f_C4R", "cvSet1D", "icv_m7_ownscDFTfwd_14_scale_64fc", "icv_l9_ownsMul_16s_Bound", "icv_l9_ippiSwapChannels_32f_C3R", "icv_l9_ippiConvert_32f32s_C1RSfs", "icv_y8_ownsGetSizeDftConv_64f", "icv_y8_ippiAddWeighted_16u32f_C1IMR", "icv_l9_ippiLUTPalette_8u_C4R", "_ZNK2cv5MatOp4diagERKNS_7MatExprEiRS1_", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_5x5_H9L9cn", "Java_org_opencv_ml_ANN_1MLP_setBackpropWeightScale_10", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getWinSize_10", "icv_y8_ippiDotProd_16s64f_C1R", "_ZN3tbb8internal26GetBoolEnvironmentVariableEPKc", "_ZN2cv3ocl8PlatformC1ERKS1_", "icv_l9_ownDilateEllipseBorderReplicate_32f_C3R", "icv_l9_ownNormDiff_L1_8u_C3CMR_HSW", "_ZN2cv3hal5mul8sEPKamS2_mPamiiPv", "_ZNK2cv3ocl6Device7versionEv", "icv_l9_ownMean_8u_C1MR_HSW", "_ZNK2cv17DescriptorMatcher5emptyEv", "Java_org_opencv_features2d_AgastFeatureDetector_setNonmaxSuppression_10", "icv_y8_ownscDFTfwd_7_32fc", "Java_org_opencv_calib3d_StereoMatcher_getSpeckleWindowSize_10", "icv_m7_myXYZToRGB_32f_C3R", "icv_l9_ownsMinEvery_8u", "_ZN2cv4cuda11setGlDeviceEi", "_ZN2cv4normERKNS_11_InputArrayES2_iS2_", "Java_org_opencv_ml_EM_getClustersNumber_10", "Java_org_opencv_ml_KNearest_setAlgorithmType_10", "icv_m7_ownResize4Linear16u", "icv_m7_ownpi_NormInfDiff_32f_C1R", "icv_m7_ippiFilterBorderGetSize", "icv_m7_ippsFFTFwd_CToC_64fc", "_ZN2cv3ocl7ContextD1Ev", "_ZN2cv9videostab14StabilizerBase14stabilizeFrameEv", "_ZN2cv3ipp6useIPPEv", "icv_l9_ippiNorm_L2_16s_C4R", "icv_l9_ownFilterColumnPipeline_16u_C1R_5x5_H9L9cn", "icv_l9_ippiMean_32f_C4R", "icv_y8_ownFilterMaxRowVH_8u_C4R", "icv_m7_ownFilterMinRow05_32f_C4R", "_ZN2cv6detail11PlaneWarper9warpPointERKNS_6Point_IfEERKNS_11_InputArrayES8_S8_", "_ZN10__cxxabiv116__enum_type_infoD0Ev", "icv_m7_ippiSwapChannels_16u_C3R", "icv_m7_ippiNorm_L2_8u_C1R", "icv_y8_owniFilter_32f_C1R_v8u8_2NA", "icv_l9_owniFilter32f_16u_C4R_g9e9_1", "icv_m7_ownRow1Cubic16s", "Java_org_opencv_videoio_VideoCapture_retrieve_11", "icv_y8_Erode_8u_C4S", "icv_m7_ippiFilterGaussianGetBufferSize", "icv_y8_ownsMulC_16s_I_1Sfs", "Java_org_opencv_core_Core_setErrorVerbosity_10", "Java_org_opencv_features2d_KAZE_getUpright_10", "icv_l9_ippiConvert_8s8u_C1Rs", "icv_y8_owns_rFFTfwd_32_32f", "icv_l9_owns_cFFTfwd_16_64fc", "icv_y8_ippiNormDiff_L1_32f_C1MR", "icv_l9_ownFilterMinRow03_8u_C4R", "icv_m7_ownscDFTinv_9_32fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R", "_ZN2cv5randuERKNS_17_InputOutputArrayERKNS_11_InputArrayES5_", "_ZN2cv18getAffineTransformERKNS_11_InputArrayES2_", "icv_l9_owniFilter_32f_C4R_g9e9_3", "icv_l9_innerSwapChannels_32s_C4R", "_ZNKSt15__exception_ptr13exception_ptrntEv", "Java_org_opencv_core_Core_sqrt_10", "_ZN2cv9SparseMat10removeNodeEmmm", "icv_l9_ownFilterMaxColumn01_8u_C1R", "_ZN2cv6detail12DpSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_l9_ownFilterMaxRow15_32f_C1R", "icv_l9_ippiNormDiff_Inf_8u_C3R", "Java_org_opencv_calib3d_Calib3d_estimateAffine2D_10", "icv_l9_ippiFilterLaplacianBorder_8u16s_C1R", "icv_l9_ownFilterMinRow04_32f_C1R", "icv_m7_ownFilterMinRow11_32f_C4R", "icv_l9_ownFilterMinRow15_8u_C1R", "icv_y8_owniFilterRobertsUpBorder2_16s_C1R", "_ZN3tbb8internal14__TBB_InitOnce10remove_refEv", "_ZN3tbb8internal6market7processERN3rml3jobE", "icv_y8_owns_rFFTinv_16_32f", "_ZN2cv3ocl7ContextD2Ev", "ippicviResizeCubic_16s_C4R", "Java_org_opencv_objdetect_CascadeClassifier_load_10", "Java_org_opencv_features2d_KAZE_setUpright_10", "_ZN2cv8Subdiv2D12initDelaunayENS_5Rect_IiEE", "cvRawDataToScalar", "ippicviConvert_8s8u_C1Rs", "_ZN2cv8Stitcher15composePanoramaERKNS_12_OutputArrayE", "_ZN2cv3ocl8internal26isPerformanceCheckBypassedEv", "_ZN2cv3hal5DCT2D6createEiiii", "_ZN2cv2ml8KNearest6createEv", "icv_y8_ownFilterColumnPipeline_16s_C1R_5x5", "icv_y8_ownFilterMinColumn05_8u_C1R", "icv_m7_owniGetRectRight_16s", "_Unwind_GetIP", "Java_org_opencv_core_Mat_n_1diag__JI", "Java_org_opencv_photo_AlignMTB_process_10", "icv_m7_ownFilterMaxRow02_8u_C3R", "icv_m7_ippiSwapChannels_32f_C3R", "_ZN2cv3hal6div16uEPKtmS2_mPtmiiPv", "icv_y8_IPP_Erode_C3_32f", "icv_l9_owns_rFFT_1_64f", "_ZN2cv3Mat19getDefaultAllocatorEv", "icv_y8_owniCCDiv_32f_C1IR", "_ZN2cv4cuda11TargetArchs20hasEqualOrGreaterBinEii", "_ZNK2cv4UMat8ndoffsetEPm", "icv_m7_ippiNormRel_L2_32f_C1R", "icv_m7_ownsInitDftPrimeFact_32f_32f", "Java_org_opencv_features2d_KAZE_setDiffusivity_10", "_ZN2cv10fitEllipseERKNS_11_InputArrayE", "icv_m7_ippiTranspose_8u_C3IR", "_ZN2cv15extractImageCOIEPKvRKNS_12_OutputArrayEi", "icv_m7_ownFilterMaxRow03_32f_C3R", "icv_l9_ownFilterBorder16s_8u_C1R", "icv_m7_owniFilterMedianBorderInMem_8u_C1R", "ippicviThreshold_GT_16s_C1R", "icv_l9_cv_ownippiFilterMin_16u_Col", "_ZN2cv17CascadeClassifierC1ERKNS_6StringE", "_ZN2cv4cuda9setDeviceEi", "_ZN2cv9videostab21ColorAverageInpainter7inpaintEiRNS_3MatES3_", "icv_l9_ippsMinEvery_64f", "ippicviNormDiff_Inf_8u_C4R", "_ZNK2cv17CommandLineParser20getPathToApplicationEv", "icv_y8_ippiCopy_8u_C1MR", "Java_org_opencv_core_Core_bitwise_1or_10", "Java_org_opencv_features2d_FastFeatureDetector_delete", "_ZN2cv8Subdiv2D6insertERKSt6vectorINS_6Point_IfEESaIS3_EE", "icv_l9_ippiThreshold_GT_32f_C1R", "_ZN3tbb19task_scheduler_init10initializeEim", "ippicviFilterScharrHorizMaskBorder_32f_C1R", "_ZN2cv13HOGDescriptor24getDefaultPeopleDetectorEv", "Java_org_opencv_imgproc_Imgproc_grabCut_11", "cvFlushSeqWriter", "icv_l9_ownsMinIndx_32f_AVX", "icv_l9_owncvGetCacheSize", "_ZN2cv5CannyERKNS_11_InputArrayERKNS_12_OutputArrayEddib", "icv_l9_ownResize3Linear16s", "icv_y8_owns_rFFTfwd_4_64f", "icv_l9_ownFilterBorder16s_8u_C4R", "icv_y8_ippiFilterColumnPipelineGetBufferSize_32f_C3R", "icv_y8_ownippiFilterMaxGetBufferSize_32f_C3R", "icv_m7_ippiFilterMedianBorderGetBufferSize", "icv_y8_innerSwapChannels_8u_C4R", "icv_m7_ippiMean_StdDev_8u_C1MR", "_ZNK3tbb8internal20allocate_child_proxy8allocateEm", "_ZN2cv6detail12DisjointSets9mergeSetsEii", "icv_y8_ippiAdd_32f_C1IR", "icv_l9_ippiSum_8u_C4R", "icv_m7_ownsrDFTinv_7_32f", "icv_m7_ippiCopy_32f_C1R", "icv_l9_ownNormRel_L1_16u_C1MR_HSW", "_ZN2cv16FileNodeIteratormmEi", "Java_org_opencv_video_KalmanFilter_predict_10", "icv_l9_ownscDftInv_Prime3_32fc", "ippicviNormDiff_Inf_16u_C1R", "ippicviMirror_16u_C4R", "icv_m7_ownFilterMinColumn01_32f_C1R", "icv_m7_ownFilterMaxRowVH_8u_C4R", "_ZN2cvorERKNS_7Scalar_IdEERKNS_3MatE", "Java_org_opencv_core_TickMeter_stop_10", "icv_y8_ownsAddC_16s_I_Bound", "icv_m7_ownscDFTinv_9_scale_64fc", "icv_l9_ippiMirror_32f_C1R", "_ZN3tbb8internal17generic_scheduler15init_stack_infoEv", "icv_y8_ippiAddWeighted_16u32f_C1IR", "icv_m7_ippiNormRel_L2_32f_C1MR", "icv_l9_ippiNormDiff_L2_16s_C1R", "_ZN2cv8cubeRootEf", "icv_m7_ownDilate_8u_C4S", "ippicviNormDiff_L2_16u_C3R", "_ZN2cv6detail9resultRoiERKSt6vectorINS_6Point_IiEESaIS3_EERKS1_INS_5Size_IiEESaIS9_EE", "_ZN2cv12LineIteratorC1ERKNS_3MatENS_6Point_IiEES5_ib", "icv_y8_ownFilterBorder32f_16s_C3R", "Java_org_opencv_features2d_ORB_setFastThreshold_10", "icv_y8_ownsrDftFwd_Conv_64f", "icv_y8_ownsGetSizeTabDftDir_64f", "Java_org_opencv_imgproc_Imgproc_Sobel_10", "icv_y8_innerRGBToHLS_8u_C3R", "cvAbsDiff", "_ZN2cv3Mat7reserveEm", "Java_org_opencv_core_Core_meanStdDev_11", "ippicviMirror_8u_C3IR", "_ZN2cv8Subdiv2D6VertexC2Ev", "icv_l9_ownCalcBorderR3Cubic16u", "icv_l9_ippiNormDiff_L2_16u_C1R", "icv_l9_owniSwapChannels_32u_C4C3R", "icv_y8_ownscDFTinv_7_64fc", "_ZN2cv3RNG4fillERKNS_17_InputOutputArrayEiRKNS_11_InputArrayES6_b", "icv_m7_ownFilterMaxRow09_32f_C3R", "icv_l9_owns_cRealRecombine_32f", "icv_m7_ownFilterMaxColumn03_32f_C1R", "icv_y8_ownFilterColumnPipeline_16s_C1R_3x3", "Java_org_opencv_imgproc_Imgproc_pyrUp_10", "_ZNK2cv11_InputArray12isContinuousEi", "icv_y8_ippiAbsDiff_32f_C1R", "icv_l9_owniFilterMedianHoriz3x1_32f_C1R", "icv_m7_ownFilterBorder16s_16u_C1R", "icv_y8_ownCalcBorderR3Linear16s", "Java_org_opencv_photo_TonemapDurand_setSaturation_10", "_ZNK2cv17DescriptorMatcher20DescriptorCollection13getDescriptorEii", "icv_m7_ownsrDFTinv_5_scale_32f", "icv_m7_ippsZero_32s", "icv_l9_ippiMul_8u_C1RSfs", "_ZN2cv9videostab17TwoPassStabilizerC2Ev", "ippicviMinMaxIndx_8u_C1R", "cvScaleAdd", "icv_y8_ownpi_NormInfDiff_32f_C1R", "_ZN2cv20fastNlMeansDenoisingERKNS_11_InputArrayERKNS_12_OutputArrayEfii", "ippicvsMaxEvery_16u", "icv_y8_ippiNorm_Inf_16s_C3R", "_ZN2cv3hal14addWeighted16sEPKsmS2_mPsmiiPv", "_ZN2cvmlEdRKNS_7MatExprE", "_ZN2cv12LineIteratorC2ERKNS_3MatENS_6Point_IiEES5_ib", "icv_y8_ownsrDFTfwd_3_scale_32f", "icv_l9_ownFilterColumnPipeline_16s_C1R_X_H9L9cn", "icv_l9_ownippiDilateBorder_32f_C4R", "icv_l9_ownscDftFwd_PrimeFact_32fc", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3", "Java_org_opencv_core_Mat_n_1push_1back", "_ZNK2cv3ocl6Device21executionCapabilitiesEv", "Java_org_opencv_features2d_AKAZE_getDiffusivity_10", "icv_l9_ownsGetSizeTabDftFwdRec_64f", "icv_y8_owns_getSizeDct_Fft_32f", "Java_org_opencv_features2d_DescriptorExtractor_delete", "icv_y8_owniFlipCopy_32s_C1", "cvFindGraphEdge", "Java_org_opencv_imgproc_Imgproc_cornerEigenValsAndVecs_10", "icv_m7_ownpi_NormL1Diff_32f_C3R", "_ZN2cv7sortIdxERKNS_11_InputArrayERKNS_12_OutputArrayEi", "_ZN2cv12KalmanFilterC2Ev", "Java_org_opencv_calib3d_Calib3d_estimateAffine2D_11", "icv_m7_ownsGetSizeDftConv_32f", "cvRemap", "_ZN2cv7fisheye9calibrateERKNS_11_InputArrayES3_RKNS_5Size_IiEERKNS_17_InputOutputArrayESA_RKNS_12_OutputArrayESD_iNS_12TermCriteriaE", "icv_m7_owniFilter2_16s_C1R", "Java_org_opencv_video_KalmanFilter_set_1errorCovPost_10", "icv_l9_ippiSet_32f_C3MR", "_ZN2cv21DetectionBasedTracker10ParametersC2Ev", "_ZNK2cv2ml9TrainData14getTestSamplesEv", "ippicviCopy_8u_P3C3R", "icv_y8_ownErode_8u_C4S", "icv_y8_ippiMirror_16s_C4IR", "icv_m7_ownFilterColumnPipeline_16s8u_C1R_5x5", "Java_org_opencv_ml_DTrees_setPriors_10", "icv_m7_ownFilterMaxRow01_8u_C1R", "icv_y8_ownMorphologyBorderInit_32f", "icv_y8_ownFilterMaxRow06_8u_C1R", "Java_org_opencv_photo_Photo_detailEnhance_11", "icv_m7_ownFilterRowBorderPipeline_16s_C3R_X", "icv_l9_ippiConvert_32s16s_C1RSfs", "icv_l9_ippsCopy_32s", "icv_l9_owniFilter32f_16s_C4R_g9e9_0", "icv_l9_ippiResizeLinear_64f_C3R", "_ZN2cv17FlannBasedMatcher17convertToDMatchesERKNS_17DescriptorMatcher20DescriptorCollectionERKNS_3MatES7_RSt6vectorIS8_INS_6DMatchESaIS9_EESaISB_EE", "cvReadRawData", "icv_l9_ownFilterMinRow01_32f_C4R", "cvRead", "_ZN2cv9BFMatcher15radiusMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "icv_m7_owns_initTabBitRevNorm", "_ZN2cv6detail23normalizeUsingWeightMapERKNS_11_InputArrayERKNS_17_InputOutputArrayE", "icv_m7_ownsrDFTfwd_14_32f", "icv_m7_ownscDFTinv_3_scale_64fc", "icv_y8_ippiSwapChannels_16u_C4R", "icv_y8_owniSqrDistanceNorm_Valid_32f_C1R", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "Java_org_opencv_core_Mat_n_1rows", "cvWriteRawDataBase64", "icv_m7_ippiNormDiff_Inf_8u_C4R", "icv_m7_ippiAdd_8u32f_C1IR", "_ZN2cv3maxERKNS_4UMatES2_RS0_", "_ZN2cv3ogl9Texture2DC1EiiNS1_6FormatEjb", "cvMakeHistHeaderForArray", "icv_l9_ippiNorm_L2_8u_C1MR", "_ZN2cv3LUTERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_y8_ownsMul_16s_NegSfs", "icv_y8_ippiCopy_32s_C1MR", "_ZN2cv9transformERKNS_11_InputArrayERKNS_12_OutputArrayES2_", "_ZN2cv8Stitcher13createDefaultEb", "ippicviXYZToRGB_8u_C3R", "icv_y8_ownscDFTinv_6_scale_32fc", "icv_m7_ownFilterMaxRow02_32f_C3R", "icv_y8_owniCrossCorrNormGetSize", "icv_y8_ownsrDFTfwd_14_64f", "_ZNK2cv5MatOp6divideERKNS_7MatExprES3_RS1_d", "icv_l9_ippiSet_32s_C3MR", "ippicviMinEigenVal_8u32f_C1R", "Java_org_opencv_imgproc_Imgproc_getAffineTransform_10", "icv_l9_owniAutoSS_C1R", "icv_m7_ownscDFTinv_5_64fc", "_ZN2cv17DescriptorMatcher20DescriptorCollection5clearEv", "icv_l9_ownFilterMaxColumnVH_32f_C1R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5_W7cn", "icv_l9_ippsSet_16s", "icv_y8_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_W7cn", "icv_y8_ownsrDFTfwd_5_scale_32f", "icv_l9_ownFilterMaxRow02_8u_C4R", "icv_m7_ownsMul_8u_1Sfs", "Java_org_opencv_video_DenseOpticalFlow_delete", "icv_l9_ownscDftFwd_Prime4_64fc", "_Z18Mat_to_vector_charRN2cv3MatERSt6vectorIcSaIcEE", "icv_m7_ippiMin_8u_C1R", "Java_org_opencv_core_Core_compare_11", "ippicviMirror_32f_C3R", "icv_m7_ownFilterRowBorderPipeline_16u_C3R_X", "cvSetNumThreads", "icv_y8_ippiAddProduct_32f_C1IMR", "icv_l9_ippiMean_8u_C3R", "icv_y8_ownFilterRowBorderPipeline_16u_C1R_3x3_P8Y8cn", "Java_org_opencv_imgproc_Imgproc_remap_10", "Java_org_opencv_calib3d_StereoMatcher_getDisp12MaxDiff_10", "_ZN3tbb8internal17generic_scheduler17publish_task_poolEv", "Java_org_opencv_features2d_BFMatcher_create_11", "icv_m7_ownpi_NormL1_8u_C4R", "Java_org_opencv_imgproc_Imgproc_Sobel_12", "ippicviMean_8u_C4R", "icv_l9_ownFilterMinRow01_32f_C1R", "icv_l9_ippiNorm_L2_32f_C1R", "icv_y8_ippiCopyReplicateBorder_32s_C4IR", "icv_l9_ownpi_CmpLT_8u_C1R", "icv_y8_ippiFilterBorder_8u_C3R", "icv_m7_ippiTranspose_32f_C3IR", "icv_l9_ownippiFilterMaxGetBufferSize_16u_C1R", "icv_y8_ippiDFTInit_R_32f", "icv_y8_ownscDFTfwd_15_scale_64fc", "icv_l9_ippsDFTInv_CToC_32fc", "icv_l9_ippiFilterMinBorder_32f_C4R", "icv_m7_owns_initDctInv_Conv_32f", "icv_l9_ippiFilterSobelHorizBorderGetBufferSize", "icv_l9_ownNormDiff_L1_16u_C3CMR_HSW", "icv_y8_ippiMulPack_32f_C1IR", "icv_m7_ippsLn_32f_A21", "Java_org_opencv_features2d_FlannBasedMatcher_FlannBasedMatcher_10", "_ZNK2cv3ocl6Device12localMemTypeEv", "icv_y8_ippsMul_32fc_I", "icv_y8_owns_initTabTwdBase_64f", "Java_org_opencv_ml_TrainData_getNTestSamples_10", "Java_org_opencv_imgproc_Imgproc_linearPolar_10", "icv_l9_ippiNorm_L2_16u_C1MR", "icv_l9_ippiMean_8u_C4R", "icv_m7_ippiNorm_L1_32f_C3R", "icv_y8_ownRow3Cubic32f", "icv_m7_owns_sDctFwd_Conv_32f", "icv_y8_ippiResizeGetBufferSize_16u", "icv_l9_ippiMean_16u_C1R", "cvGraphRemoveVtxByPtr", "_ZN2cv3hal6mul16sEPKsmS2_mPsmiiPv", "Java_org_opencv_features2d_Feature2D_detect_11", "icv_m7_ippiConvert_8s8u_C1Rs", "icv_l9_ownscDftFwd_Prime2_32fc", "ippicviNorm_L2_16u_C1MR", "own_ipps_sLn_U8EPnnn", "Java_org_opencv_calib3d_Calib3d_calibrateCamera_12", "icv_m7_ownsAdd_32f", "_ZNK2cv13HOGDescriptor15computeGradientERKNS_3MatERS1_S4_NS_5Size_IiEES6_", "icv_l9_owniFilter32f_8u_C1R_g9e9_7", "icv_y8_ippiNot_8u_C1R", "icv_l9_ippiApplyHaarClassifier_32f_C1R", "_ZNK2cv4cuda10DeviceInfo16canMapHostMemoryEv", "icv_l9_ippiNormRel_Inf_16u_C1MR", "ippicviAddWeighted_8u32f_C1IMR", "icv_l9_ownippiFilterMinBorderReplicate_32f_C1R", "own_ipps_sInvSqrt_E7HAynn", "icv_m7_ownFilterMaxRow15_8u_C1R", "_ZN2cv6detail27BundleAdjusterAffinePartial12calcJacobianERNS_3MatE", "icv_l9_ownErodeEllipseBorderReplicate_8u_C3R", "icv_l9_ownsInitTabDftFwdRec_32f", "icv_l9_ippsFFTInv_CToC_32fc", "icv_m7_ippsMul_32fc", "icv_m7_cv_ownippiFilterMin_16u_Col", "icv_m7_ownippiFilterMaxBorderReplicate_8u_C4R", "cvGetDimSize", "_ZN2cv12KalmanFilter7correctERKNS_3MatE", "Java_org_opencv_ml_StatModel_empty_10", "Java_org_opencv_core_Core_getOptimalDFTSize_10", "_ZN2cv6detail12CameraParamsC2ERKS1_", "icv_y8_ippiMul_8u_C1RSfs", "icv_y8_ownscDftInv_Prime11_64fc", "_ZN3tbb8internal6market21update_arena_priorityERNS0_5arenaEl", "Java_org_opencv_calib3d_StereoBM_setROI1_10", "_ZNK2cv11_InputArray5totalEi", "ippicviThreshold_LTVal_32f_C1R", "_ZNK2cv3ocl7Program5writeERNS_6StringE", "_ZN2cv7directx23convertToD3D11Texture2DERKNS_11_InputArrayEP15ID3D11Texture2D", "icv_m7_ippiMul_16u_C1RSfs", "icv_y8_ippiMorphologyBorderInit_32f_C4R", "icv_m7_ownscDFTinv_6_64fc", "ippicviNorm_Inf_8u_C3R", "icv_l9_ownscDFTfwd_14_scale_64fc", "_ZN2cv16FileNodeIteratorC1Ev", "_ZN2cv15sampsonDistanceERKNS_11_InputArrayES2_S2_", "_ZN2cv4UMatC2ERKS0_RKNS_5Rect_IiEE", "Java_org_opencv_imgproc_Imgproc_circle_12", "Java_org_opencv_features2d_Feature2D_detect_10", "Java_org_opencv_ml_Boost_getWeakCount_10", "icv_m7_ippiMirror_16u_C4IR", "_ZN3tbb8internal6market7cleanupERN3rml3jobE", "icv_m7_ownColLinear16s", "icv_y8_ippiTranspose_16u_C4IR", "_ZNSt20bad_array_new_lengthD1Ev", "icv_m7_ippiConvert_32s8u_C1R", "Java_org_opencv_core_Core_bitwise_1xor_11", "icv_m7_ippiNorm_L1_16u_C1R", "icv_l9_ownFilterMinRow01_32f_C3R", "Java_org_opencv_ml_NormalBayesClassifier_predictProb_11", "Java_org_opencv_photo_MergeRobertson_delete", "icv_m7_cv_ownippiFilterMax_32f_Col", "icv_y8_ownFilterColumnPipeline_16u_C1R_3x3", "icv_y8_ownFilterRowBorderPipeline_32f_C1R", "icv_y8_ippiFilterColumnPipelineGetBufferSize_16s8u_C1R", "icv_y8_ownsrDFTinv_12_64f", "_ZN2cv3maxEdRKNS_3MatE", "icv_m7_ownscDft_Conv_64fc", "icv_l9_ippiCopy_32s_P3C3R", "icv_l9_ownpi_NormL1_16s_C3R", "Java_org_opencv_photo_Photo_createMergeMertens_10", "icv_l9_ownscDFTfwd_7_scale_32fc", "icv_y8_owns_cFFTinv_4_scale_64fc", "Java_org_opencv_ml_StatModel_train_11", "icv_y8_owns_rFFTfwd_4_scale_64f", "icv_m7_ownFilterMaxRow07_8u_C1R", "icv_y8_owniFilter_32f_C4R_v8u8_2NA", "icv_y8_owniFilter_32f_C1R_v8u8_5", "Java_org_opencv_core_Core_max_11", "_ZN2cv6detail12DpSeamFinder14findComponentsEv", "_ZN2cv5AGASTERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS4_EEib", "icv_y8_ownsrDFTinv_6_scale_32f", "icv_m7_ownFilterMinRow04_32f_C1R", "icv_l9_ippiCopyConstBorder_16s_C1R", "_ZN2cv3hal11cvtBGRtoYUVEPKhmPhmiiiibb", "icv_m7_ownFilterMinRow01_8u_C1R", "Java_org_opencv_imgproc_Imgproc_Scharr_10", "Java_org_opencv_video_KalmanFilter_set_1statePre_10", "icv_l9_ownErodeEllipseBorderReplicate_32f_C4R", "icv_m7_ippiTranspose_32f_C3R", "icv_y8_owns_cFFTfwd_8_scale_32fc", "_ZNK2cv16MatConstIterator3posEv", "icv_y8_owniAutoCorr_C1R", "_ZN2cv4cuda10syncOutputERKNS0_6GpuMatERKNS_12_OutputArrayERNS0_6StreamE", "icv_y8_owns_rFFTinv_32_scale_32f", "ippicviNormRel_Inf_16u_C1MR", "_ZN10__cxxabiv117__pbase_type_infoD2Ev", "icv_m7_ippiMorphologyBorderGetSize_8u_C1R", "icv_m7_ownCalcBorderR1Cubic16u", "icv_l9_ippsZero_64fc", "icv_m7_ownippiMorphologyBorderReplicateInMemInit_8u_C1R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5", "Java_org_opencv_ml_EM_predict2_10", "icv_l9_ownMorphologyBorderInit_8u", "icv_m7_ownResize1Cubic16u", "cvCalibrateCamera2", "icv_y8_ownCalcBorderR3Linear16u", "icv_l9_ippsMaxEvery_32f", "icv_y8_ippsDFTInv_PackToR_64f", "icv_m7_ownscDFTinv_5_scale_64fc", "_ZN2cv7compareERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi", "_ZN2cv4cuda9getDeviceEv", "_ZNK2cv3ogl9Texture2D6copyToERKNS_12_OutputArrayEib", "icv_l9_ownsMulC_16s_I_PosSfs", "icv_y8_ownCalcBorderR4Cubic16s", "icv_m7_ippiSwapChannels_8u_C4R", "_Z25Mat_to_vector_vector_charRN2cv3MatERSt6vectorIS2_IcSaIcEESaIS4_EE", "icv_l9_ownFilterBorder16s_16s_C4R", "icv_l9_ownscDftInv_Prime16_32fc", "Java_org_opencv_videoio_VideoWriter_open_11", "Java_org_opencv_features2d_GFTTDetector_setHarrisDetector_10", "ippicviSum_32f_C4R", "icv_y8_ownCalcBorderR4Linear16s", "icv_m7_innerRGBToXYZ_32f_C3R", "icv_l9_ownscDFTfwd_12_scale_32fc", "icv_l9_owniFilter32f_16s_C3R_g9e9_0", "Java_org_opencv_video_Video_estimateRigidTransform_10", "icv_l9_ownFilterMinRow11_32f_C4R", "Java_org_opencv_video_Video_findTransformECC_12", "icv_m7_ownscDFTfwd_12_scale_64fc", "ippicviFilterGaussianBorder_32f_C3R", "icv_l9_innerSwapChannels_8u_C4R", "icv_l9_ownscDFTinv_15_scale_32fc", "ippicviCannyGetSize", "icv_m7_Erode_32f_C3S", "_ZN3tbb10interface914global_control12active_valueEi", "icv_l9_ownsrDFTfwd_6_32f", "icv_l9_ippiFilterSobelVertSecondBorder_32f_C1R", "icv_m7_ippiFilterColumnPipelineGetBufferSize_16u_C1R", "icv_y8_ippiSqrIntegral_8u32s64f_C1R", "_ZN2cv17DescriptorMatcherD0Ev", "_ZN2cv3hal3logEPKfPfi", "ippicviMirror_16s_C3R", "Java_org_opencv_core_Mat_nGetI", "_ZN2cv3ocl9KernelArgC2EiPNS_4UMatEiiPKvm", "icv_l9_ippiNormDiff_L1_16u_C3R", "_ZN2cv3hal6mul32sEPKimS2_mPimiiPv", "icv_l9_ippiNormDiff_L1_32f_C3CMR", "icv_y8_ippiTranspose_16s_C1IR", "_ZN3tbb8internal14observer_proxyC2ERNS0_26task_scheduler_observer_v3E", "_ZNK2cv14DefaultDeleterI23CvHaarClassifierCascadeEclEPS1_", "icv_l9_owniFilter32f_16s_C4R_g9e9_1", "Java_org_opencv_calib3d_Calib3d_drawChessboardCorners_10", "icv_l9_ippiSwapChannels_16u_C4R", "_ZN2cv6detail21BlocksGainCompensator4feedERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_4UMatESaIS9_EERKS2_ISt4pairIS9_hESaISF_EE", "_ZN2cv3ogl9Texture2DC2EiiNS1_6FormatEjb", "icv_y8_ippiFilterBorder_8u_C4R", "cvSetImagesForHaarClassifierCascade", "icv_l9_ownsAddC_16s_I_Bound", "Java_org_opencv_video_BackgroundSubtractorKNN_delete", "icv_y8_ownscDFTfwd_3_scale_32fc", "icv_l9_ownsGetSizeDftConv_32f", "ippicvsDFTFwd_CToC_32fc", "_ZN2cv6seqPopEP5CvSeqPv", "icv_y8_ownFilterMinRow11_32f_C4R", "Java_org_opencv_calib3d_StereoBM_getROI2_10", "ippicviTranspose_8u_C3IR", "icv_y8_Erode_8u_C3S", "icv_y8_ownsrDFTinv_13_32f", "icv_l9_ownscDFTfwd_13_scale_32fc", "icv_m7_owns_rFFTinv_8_scale_64f", "icv_m7_owniSqrDistanceNormGetSize", "_ZNK2cv8Subdiv2D8nextEdgeEi", "_ZNK2cv13HOGDescriptor6detectERKNS_3MatERSt6vectorINS_6Point_IiEESaIS6_EERS4_IdSaIdEEdNS_5Size_IiEESE_RKS8_", "icv_l9_ownFilterMinRow01_8u_C4R", "icv_m7_ownCalcBorderR3Linear32f", "icv_m7_ippiResizeLinearInit_64f", "_ZN2cv3ocl17convertFromBufferEPvmiiiRNS_4UMatE", "icv_m7_ippiNormDiff_L2_16s_C4R", "icv_y8_ownFilterRowBorderPipeline_16s_C3R_3x3_W7cn", "icv_y8_ownMorphEllipseGetBufferSize", "icv_m7_ownsrDFTfwd_7_scale_32f", "_ZN2cv8Subdiv2D6VertexC1ENS_6Point_IfEEbi", "Java_org_opencv_core_Core_reduce_11", "_ZN2cv19FastFeatureDetector6createEibi", "ippicviMean_16u_C4R", "Java_org_opencv_features2d_AKAZE_delete", "ippicviDCTInv_32f_C1R", "cvRemoveNodeFromTree", "icv_y8_owniCmpLessEq_16u_C1R", "icv_l9_ownscDFTfwd_6_scale_64fc", "_ZN2cv16convexityDefectsERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "_ZNK2cv3ocl6Device17maxWriteImageArgsEv", "_ZN2cv15calibrateCameraERKNS_11_InputArrayES2_NS_5Size_IiEERKNS_17_InputOutputArrayES7_RKNS_12_OutputArrayESA_iNS_12TermCriteriaE", "icv_y8_ippiFilterColumnPipelineGetBufferSize_16s_C3R", "cvNorm", "Java_org_opencv_ml_TrainData_setTrainTestSplitRatio_11", "Java_org_opencv_calib3d_Calib3d_calibrateCameraExtended_10", "icv_y8_ippiLUTPalette_8u_C3R", "icv_l9_ownippiFilterMedianHoriz_8u_C1R_5x1", "ippicviMirror_16u_C3R", "Java_org_opencv_imgproc_Imgproc_spatialGradient_12", "icv_m7_owns_initTabTwdCcsRec_32f", "_ZN2cv3ogl9Texture2DC2ERKNS_11_InputArrayEb", "icv_l9_ownsrDFTfwd_6_64f", "icv_y8_ownippiFilterMinBorderReplicate_32f_C1R", "_ZN3tbb8internal14observer_proxy9is_globalEv", "icv_l9_ippiMirror_16s_C3R", "icv_l9_ippiSwapChannels_16u_C3R", "icv_l9_ownFilterMaxRow03_8u_C4R", "icv_m7_ownsrDFTinv_14_64f", "icv_m7_ownFilterMinRow02_8u_C3R", "icv_l9_ownFilterColumnPipeline_16u_C1R_3x3_H9L9cn", "_ZN2cvneEdRKNS_3MatE", "Java_org_opencv_imgproc_Imgproc_resize_10", "_ZN2cv5flann11IndexParamsD2Ev", "icv_y8_ownsrDFTfwd_13_scale_32f", "_ZN2cv11RotatedRectC1ERKNS_6Point_IfEES4_S4_", "_ZN2cv3ogl6Arrays14setNormalArrayERKNS_11_InputArrayE", "icv_y8_ippiMean_16u_C3R", "ippicviNorm_Inf_16u_C1R", "icv_y8_ownsAddC_16s_I_1Sfs", "own_ipps_sLn_E7EPnnn", "icv_m7_ownsAdd_8u_1Sfs", "icv_l9_ownscDFTinv_12_32fc", "icv_l9_ippiSub_8u_C1RSfs", "own_ipps_dInvSqrt_E7HAynn", "Java_org_opencv_photo_MergeMertens_getSaturationWeight_10", "Java_org_opencv_core_Mat_n_1adjustROI", "_ZN2cv14copyMakeBorderERKNS_11_InputArrayERKNS_12_OutputArrayEiiiiiRKNS_7Scalar_IdEE", "icv_m7_ippiSwapChannels_16u_C4R", "icv_m7_ippiNormDiff_L2_16u_C3CMR", "_ZNK2cv3ocl6Device24preferredVectorWidthCharEv", "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", "icv_y8_ippsSin_64f_A53", "cvConvertPointsHomogeneous", "icv_m7_ownsrDFTinv_13_32f", "icv_y8_ownscDFTfwd_15_64fc", "icv_m7_ownscDFTfwd_11_scale_64fc", "icv_m7_ippiNorm_Inf_32f_C3R", "_ZNK2cv12MatAllocator3mapEPNS_8UMatDataEi", "_ZNK2cv8FileNodeixEi", "_ZNK2cv14DefaultDeleterI9_IplImageEclEPS1_", "Java_org_opencv_imgproc_Subdiv2D_Subdiv2D_10", "Java_org_opencv_calib3d_Calib3d_stereoRectify_12", "icv_y8_owniFilterScharrVertMaskBorder2_32f_C1R", "icv_m7_ownFilterMinRow02_32f_C3R", "Java_org_opencv_core_Core_determinant_10", "icv_y8_ipMirror45_8uC1R", "Java_org_opencv_calib3d_StereoSGBM_getP2_10", "icv_y8_ippiConvert_16s8u_C1R", "icv_y8_ippiResizeCubicInit_32f", "Java_org_opencv_imgproc_Imgproc_demosaicing_11", "_Z29vector_vector_KeyPoint_to_MatRSt6vectorIS_IN2cv8KeyPointESaIS1_EESaIS3_EERNS0_3MatE", "icv_m7_ippiMorphologyBorderInit_32f_C1R", "icv_l9_owniFilter32f_8u_C4R_g9e9_4", "icv_m7_ownsrDFTinv_3_32f", "icv_m7_ippiDFTGetSize_R_32f", "Java_org_opencv_imgproc_Imgproc_floodFill_11", "Java_org_opencv_video_BackgroundSubtractor_getBackgroundImage_10", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R", "icv_l9_owns_rFFTinv_8_scale_64f", "icv_m7_ownsrDFTfwd_13_scale_32f", "_ZN2cv7waitKeyEi", "Java_org_opencv_videoio_VideoWriter_VideoWriter_10", "icv_y8_ownpi_XorC_8u_C1R", "icv_l9_ippiResizeGetSrcOffset_16s", "icv_l9_ippiAddSquare_32f_C1IR", "_ZN2cv5MutexD1Ev", "Java_org_opencv_photo_TonemapReinhard_getLightAdaptation_10", "icv_y8_owns_cFFT_2_64fc", "ippicviMax_8u_C1R", "icv_y8_ippiAdd_16u_C1RSfs", "icv_l9_ownRow1Linear64f", "icv_l9_ippiCopyReplicateBorder_32s_C3IR", "ippicviMirror_16s_C4IR", "icv_y8_ippiThreshold_LTVal_32f_C1R", "icv_l9_ownCalcBorderR3Cubic32f", "Java_org_opencv_imgproc_Imgproc_polylines_11", "icv_l9_ownpi_NormL2Rel_8u_C1R", "own_ipps_sSqrt_E7EPnnn", "icv_y8_ownpi_NormL1Diff_32f_C4R", "Java_org_opencv_calib3d_Calib3d_RQDecomp3x3_10", "_ZN3tbb8internal19allocate_root_proxy8allocateEm", "icv_l9_ownscDFTinv_15_64fc", "icv_m7_ippiAdd_8u_C1RSfs", "_ZNSt15__exception_ptr13exception_ptrC1EMS0_FvvE", "_ZN2cv17DescriptorMatcher4readERKNS_8FileNodeE", "icv_m7_ippsDFTInv_CToC_64fc", "_ZN2cv3ocl7haveSVMEv", "_ZN2cv9videostab17TwoPassStabilizer5setUpERKNS_3MatE", "icv_m7_owniConvert_8s16u_ccode", "icv_l9_ippiMorphologyBorderInit_32f_C3R", "icv_l9_ippsDCTFwd_32f", "icv_y8_owniFilterMedianHoriz3x1_32f_C1R", "icv_l9_ownFilterColumnPipeline_16u_C1R_X_H9L9cn", "icv_y8_ownscDFTfwd_6_64fc", "icv_y8_ippsMinEvery_8u", "ippicviResizeCubic_32f_C3R", "_ZN2cv4UMat3eyeEiii", "icv_y8_ownpi_NormInf_32f_C1R", "_ZN2cv17CommandLineParserC2ERKS0_", "icv_l9_ippiSet_16u_C3MR", "cvWarpAffine", "_ZN2cv9videostab15VideoFileSource3fpsEv", "icv_y8_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_y8_ippiNormRel_L1_32f_C1MR", "icv_l9_ippiCopy_16s_C3MR", "_ZNK2cv4cuda6Stream15queryIfCompleteEv", "icv_y8_ownsrDFTinv_7_64f", "_ZN2cv3hal10absdiff16sEPKsmS2_mPsmiiPv", "_ZNK2cv13HOGDescriptor11getWinSigmaEv", "icv_y8_ownFilterRowBorderPipeline_16s_C1R_X", "icv_m7_ownFilterColumnPipeline_16u_C1R_X", "_ZN2cv15KeyPointsFilter10retainBestERSt6vectorINS_8KeyPointESaIS2_EEi", "icv_m7_ownFilterMaxColumnVH_32f_C1R", "Java_org_opencv_imgproc_Imgproc_integral2_10", "Java_org_opencv_features2d_KAZE_delete", "icv_m7_ownscDftFwd_Prime13_64fc", "icv_m7_ippiFilterLowpassBorder_32f_C1R", "_ZN3tbb8internal17generic_schedulerC2ERNS0_6marketE", "_ZN2cv6detail27BundleAdjusterAffinePartial24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_y8_ippiMin_16s_C1R", "icv_l9_ownpi_NormL1_8u_C4R", "icv_l9_ippsSqrt_32f_I", "icv_l9_owniConvert_32f8u_ccode", "_ZN2cv25BOWImgDescriptorExtractorD0Ev", "ippicviCopy_32f_C1R", "icv_m7_ippiNorm_Inf_16u_C1R", "icv_y8_ownsAddC_16s_I_NegSfs", "icv_l9_ownFilterMaxRow05_8u_C3R", "_ZN2cv17FlannBasedMatcherC1ERKNS_3PtrINS_5flann11IndexParamsEEERKNS1_INS2_12SearchParamsEEE", "ippicviFilterGaussianBorder_32f_C1R", "icv_m7_ippsDFTGetSize_R_32f", "icv_l9_ippiThreshold_8u_C1R", "Java_org_opencv_photo_Photo_createTonemapReinhard_10", "icv_l9_ownscDFTfwd_14_32fc", "icv_y8_ippiSqrDistanceNorm_8u32f_C1R", "icv_m7_ownscDftInv_Prime7_64fc", "icv_m7_ippiDFTFwd_CToC_32fc_C1R", "icv_l9_ownippiMorphologyBorderReplicateInMemGetSize_32f_C1R", "icv_l9_owns_cFFTinv_8_scale_64fc", "icv_y8_ippiNorm_Inf_16s_C4R", "icv_y8_ippiResizeGetSize_64f", "icv_m7_ippiDotProd_32s64f_C1R", "icv_y8_owniFilter_32f_C4R_v8u8_3NA", "_ZN3tbb18task_group_context19capture_fp_settingsEv", "icv_l9_ownscDFTfwd_13_32fc", "icv_m7_ippiDCTInv_32f_C1R", "_ZN2cv37createThinPlateSplineShapeTransformerEd", "icv_l9_ownippiFilterMedian_16s_C1R_7x1", "icv_l9_ownErodeEllipseBorderReplicate_8u_C1R", "icv_l9_ownscDftFwd_Prime16_64fc", "icv_m7_ownpi_NormInfRel_16s_C1R", "cvGetSeqElem", "icv_y8_ippiAddProduct_8u32f_C1IMR", "icv_m7_ownsrDFTinv_13_scale_64f", "icv_y8_ippiMean_StdDev_32f_C1MR", "Java_org_opencv_ml_EM_getCovarianceMatrixType_10", "icv_y8_ownFilterMaxRow09_8u_C1R", "icv_l9_ippsFFTInit_C_32fc", "icv_l9_owns_initTabTwdBase_32f", "icv_y8_owniSwapChannels_16u_C3R", "icv_l9_ippiFilterBorder_16u_C1R", "Java_org_opencv_videoio_VideoCapture_VideoCapture_10", "icv_l9_ownscDFTfwd_12_scale_64fc", "cvCircle", "icv_m7_ippiResizeLinearInit_16u", "cvSetErrMode", "_ZN2cv2ml3SVM6createEv", "icv_l9_owns_getSizeDct_Conv_32f", "_ZNK2cv4cuda10DeviceInfo17maxTextureCubemapEv", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_y8_owns_initDctFwd_Fft_32f", "cvMatchShapes", "Java_org_opencv_calib3d_Calib3d_getOptimalNewCameraMatrix_10", "icv_y8_ippiMinMaxIndx_8u_C1R", "_ZNK2cv8KeyPoint4hashEv", "icv_m7_owns_cFFTfwd_4_32fc", "icv_l9_ownCopySubpixIntersect_8u32f_C1R_h9l9", "icv_y8_ownippiFilterMinBorderReplicate_32f_C4R", "Java_org_opencv_imgproc_Imgproc_invertAffineTransform_10", "Java_org_opencv_video_KalmanFilter_get_1controlMatrix_10", "_ZN2cv3hal9absdiff8uEPKhmS2_mPhmiiPv", "icv_y8_ownscDFTinv_5_64fc", "ippicviRGBToHLS_8u_C3R", "icv_m7_ownFilterMinRow05_8u_C1R", "_ZN2cv3ocl28predictOptimalVectorWidthMaxERKNS_11_InputArrayES3_S3_S3_S3_S3_S3_S3_S3_", "_ZNK2cv7MatExpr3colEi", "icv_l9_ipMirror135_16uC1R", "icv_l9_ippiAddSquare_8u32f_C1IR", "ippicvsMinEvery_32f", "icv_m7_ippsCos_64f_A53", "_ZN2cv6detail11PlaneWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "icv_y8_owniConvert_32f8s_ccode", "_ZN2cv16ParallelLoopBodyD1Ev", "Java_org_opencv_features2d_AgastFeatureDetector_getThreshold_10", "icv_y8_ippiNormDiff_Inf_16s_C4R", "icv_l9_ownsrDFTinv_5_scale_32f", "_ZNSt15__exception_ptr13exception_ptrD2Ev", "icv_l9_Erode_32f_C4S", "_ZN2cv5EMDL1ERKNS_11_InputArrayES2_", "_Unwind_SetIP", "icv_m7_ippiCopyConstBorder_8u_C4R", "icv_m7_ownsrDFTinv_12_32f", "_ZN2cv7fisheye13projectPointsERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_S3_S3_dS6_", "icv_l9_ownResize1Cubic32f", "icv_y8_ippiAdd_8u_C1RSfs", "icv_l9_ippsFFTFwd_RToPack_32f", "icv_y8_ippiSet_16u_C4MR", "icv_y8_ippiSet_16u_C1R", "icv_y8_ownsGetSizeDftConv_32f", "icv_y8_ownFilterMaxRowVH_32f_C3R", "icv_y8_ippiNormRel_Inf_16s_C1R", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_16s_C1R", "Java_org_opencv_ml_TrainData_getValues_10", "icv_l9_ippiMax_16u_C1R", "_ZN2cv6detail17VoronoiSeamFinder4findERKSt6vectorINS_5Size_IiEESaIS4_EERKS2_INS_6Point_IiEESaISA_EERS2_INS_4UMatESaISF_EE", "icv_l9_Dilate_8u_C1S", "Java_org_opencv_imgproc_Imgproc_getStructuringElement_11", "Java_org_opencv_core_Core_phase_11", "_ZN2cv15findCirclesGridERKNS_11_InputArrayENS_5Size_IiEERKNS_12_OutputArrayEiRKNS_3PtrINS_9Feature2DEEE", "icv_m7_ippiResizeCubic_32f_C1R", "_ZN2cv11VideoWriter5writeERKNS_3MatE", "_ZNK2cv5MatOp12augAssignAndERKNS_7MatExprERNS_3MatE", "_ZN2cv3hal7gemm32fEPKfmS2_mfS2_mfPfmiiii", "_Z17cvCreateSparseMatRKN2cv9SparseMatE", "icv_y8_ippsFFTGetSize_R_32f", "_ZNK2cv5MatOp4typeERKNS_7MatExprE", "Java_org_opencv_core_Mat_n_1cols", "cvInitFont", "icv_y8_owns_rFFTfwd_32_scale_64f", "_ZN2cv12cornerHarrisERKNS_11_InputArrayERKNS_12_OutputArrayEiidi", "icv_m7_ippiCompare_16u_C1R", "icv_y8_owniNormLevel_32f_C1R", "own_ipps_sInvSqrt_L9EPnnn", "_ZN2cvgtERKNS_3MatES2_", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKSt6vectorINS_6DMatchESaIS6_EE", "ippicviNorm_L1_8u_C1R", "icv_l9_ippiResizeLinear_16u_C3R", "icv_l9_ippiMinMaxIndx_8u_C1R", "icv_m7_ownscDFTfwd_9_64fc", "icv_y8_ownpi_NormL2Diff_32f_C4R", "icv_y8_ippiNormDiff_L1_32f_C3R", "icv_l9_ownNormRel_L2_8u_C1MR_HSW", "icv_m7_ownFilterMaxRow07_8u_C4R", "_ZNK2cv17CommandLineParser5checkEv", "_ZNK2cv7MatExpr3mulERKS0_d", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_10", "_ZN3tbb10interface914global_control16internal_destroyEv", "icv_l9_ippiMean_16s_C1R", "Java_org_opencv_video_FarnebackOpticalFlow_setPolyN_10", "Java_org_opencv_ml_SVM_delete", "Java_org_opencv_core_Core_dct_10", "_ZN3tbb8internal6market13arena_in_needEPNS0_5arenaE", "Java_org_opencv_features2d_Features2d_drawMatches_11", "Java_org_opencv_photo_AlignMTB_calculateShift_10", "Java_org_opencv_features2d_Feature2D_detect_13", "icv_l9_ownFilter32f_16u_C1R_g9e9", "_ZN2cv11FileStorage12writeCommentERKNS_6StringEb", "icv_m7_ippiNormRel_L2_16u_C1R", "icv_y8_owniFilter_32f_C4R_v8u8_7NA", "icv_y8_Dilate_32f_C1S", "icv_y8_ippiNormDiff_Inf_32f_C3CMR", "icv_l9_owns_cFFTinv_32_scale_32fc", "_ZN2cv3ocl6KernelC2ERKS1_", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale_11", "icv_l9_ippiErodeBorder_32f_C1R", "icv_y8_ownFilterColumnPipeline_16s_C1R_X", "_ZN2cv3addERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_i", "Java_org_opencv_core_Core_subtract_15", "icv_y8_ownsrDFTfwd_5_64f", "cvCvtColor", "Java_org_opencv_video_Video_findTransformECC_10", "icv_y8_ippiTranspose_32s_C3R", "icv_y8_owns_rFFTinv_8_scale_32f", "icv_l9_ownsMul_16s_PosSfs", "icv_m7_ownsrDFTfwd_14_scale_64f", "_ZN2cv9arcLengthERKNS_11_InputArrayEb", "_ZN2cv6detail10overlapRoiENS_6Point_IiEES2_NS_5Size_IiEES4_RNS_5Rect_IiEE", "icv_y8_owns_rFFTfwd_16_64f", "icv_y8_IPP_Erode_C4_32f", "_ZN2cv3ocl6DeviceC1Ev", "icv_l9_ippiCopy_8u_AC4C3R", "_ZN2cvplERKNS_3MatERKNS_7Scalar_IdEE", "Java_org_opencv_objdetect_CascadeClassifier_getFeatureType_10", "icv_m7_owniFlip_16u_C3", "icv_y8_ippiFilterSobelHorizBorderGetBufferSize", "_ZNK3tbb10user_abort4whatEv", "_ZNK3tbb18captured_exception4nameEv", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R", "icv_m7_ippsConvert_32f8s_Sfs", "own_ipps_dPowx_L9LAynn", "icv_m7_ownscDftFwd_Prime11_32fc", "_ZN2cv4cuda6GpuMatC2ENS_5Size_IiEEiPvm", "cvSetReal3D", "icv_m7_ownpi_NormL2_32f_C3R", "_ZN2cv11VideoWriterC2Ev", "icv_m7_ownippiFilterMaxGetBufferSize_8u_C4R", "icv_l9_ippiNorm_Inf_16u_C1R", "icv_y8_ownFilterMaxRow09_8u_C3R", "icv_m7_ownMorphologyBorderInit_8u", "_ZN2cv5flann20CompositeIndexParamsC2EiiiN7cvflann20flann_centers_init_tEf", "icv_y8_ownscDftFwd_Fact11_32fc", "icv_y8_ownscDFTfwd_5_64fc", "Java_org_opencv_core_Core_perspectiveTransform_10", "icv_l9_owniSwapChannels_16u_C4C3R", "_ZN2cv5errorERKNS_9ExceptionE", "icv_y8_ownpi_NormL1Diff_16u_C3R", "icv_y8_ippiNorm_L1_16u_C1MR", "cvGetMat", "_ZN2cv9videostab25ConsistentMosaicInpainterC2Ev", "icv_m7_ippiThreshold_GT_32f_C1R", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_3x3_H9L9cn", "_ZNSt15__exception_ptrneERKNS_13exception_ptrES2_", "icv_m7_ippiSet_32s_C1MR", "_ZN2cv9videostab20GaussianMotionFilter9stabilizeEiRKSt6vectorINS_3MatESaIS3_EESt4pairIiiE", "icv_l9_cv_ownippiFilterMin_32f_Row", "_ZN2cv17adaptiveThresholdERKNS_11_InputArrayERKNS_12_OutputArrayEdiiid", "_ZN2cv7vconcatERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv3ORB6createEifiiiiiii", "icv_m7_ownsrDFTfwd_9_scale_32f", "_ZN2cvmiERKNS_7MatExprES2_", "Java_org_opencv_features2d_DescriptorExtractor_compute_11", "icv_y8_ownsMul_16s_Bound", "icv_l9_ownsrDFTinv_10_64f", "icv_l9_ownDilate_8u_C4S", "ippicviNorm_L2_8u_C1R", "Java_org_opencv_video_KalmanFilter_correct_10", "cvSetOpenGlContext", "icv_y8_ippiThreshold_16s_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_X_W7cn", "_ZN2cv4cuda6GpuMat19setDefaultAllocatorEPNS1_9AllocatorE", "ippicviCrossCorrNorm_8u32f_C1R", "ippicviResizeGetSrcOffset_16s", "Java_org_opencv_calib3d_Calib3d_findFundamentalMat_11", "Java_org_opencv_features2d_BFMatcher_delete", "Java_org_opencv_ml_ANN_1MLP_setRpropDWMax_10", "_ZN2cv11FileStorage19releaseAndGetStringEv", "icv_y8_ownscDFTinv_6_scale_64fc", "ippicviMirror_16s_C1R", "_ZNK2cv11_InputArray13getUMatVectorERSt6vectorINS_4UMatESaIS2_EE", "icv_y8_ownscDftInv_Prime11_32fc", "icv_m7_ownFilterMinRow06_8u_C3R", "_ZN2cv3ocl9typeToStrEi", "_ZNK2cv9Feature2D11defaultNormEv", "icv_y8_ownFilterMaxRow05_8u_C1R", "icv_y8_ippiCopyReplicateBorder_16s_C3IR", "Java_org_opencv_core_Mat_nDump", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_X_H9L9cn", "Java_org_opencv_ml_LogisticRegression_setIterations_10", "icv_l9_owniFilter32f_16s_C4R_g9e9_4", "icv_m7_ownRow1Linear64f", "icv_m7_owniCrossCorrNormGetSize", "_ZN2cv3ocl6Device10getDefaultEv", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_16s_C3R", "icv_l9_ownscDftInv_Prime6_64fc", "_ZNK2cv4cuda10DeviceInfo14totalGlobalMemEv", "icv_y8_owniConvert_16s8u_C1R", "_ZN2cvneERKNS_3MatES2_", "_ZN2cv11linearPolarERKNS_11_InputArrayERKNS_12_OutputArrayENS_6Point_IfEEdi", "Java_org_opencv_video_DualTVL1OpticalFlow_setScaleStep_10", "Java_org_opencv_calib3d_Calib3d_stereoRectifyUncalibrated_10", "icv_y8_ippiResizeGetSize_16s", "icv_m7_ippiFilterGaussianBorder_32f_C3R", "icv_l9_ownColCubic16u", "_ZN2cv6detail15SphericalWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "ippicviDotProd_16u64f_C1R", "icv_l9_ippsDCTInvInit_32f", "cvMin", "icv_y8_ownFilterMinColumn05_32f_C1R", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC2Ev", "_ZN2cv9Feature2D16detectAndComputeERKNS_11_InputArrayES3_RSt6vectorINS_8KeyPointESaIS5_EERKNS_12_OutputArrayEb", "icv_l9_ippiLUTPalette_8u_C3R", "_ZNK2cv13HOGDescriptor15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS3_EERS1_IdSaIdEEid", "icv_y8_ownsMulC_32f_I", "icv_y8_ownFilterMinRow09_8u_C3R", "icv_l9_ownpi_Sum_16u_C3R", "_ZN2cv16BOWKMeansTrainerD0Ev", "icv_y8_ownFilterMinRow15_8u_C1R", "icv_m7_ownscDFTfwd_13_scale_32fc", "Java_org_opencv_features2d_FeatureDetector_detect_10", "icv_y8_ownFilterMaxRow09_8u_C4R", "icv_y8_owniFilterPrewittVertBorder2_8u16s_C1R", "_ZN2cv2ml9TrainData6createERKNS_11_InputArrayEiS4_S4_S4_S4_S4_", "ippicviMean_StdDev_32f_C1MR", "icv_y8_ippsDFTGetSize_R_32f", "icv_l9_ownFilterMinRow03_8u_C3R", "icv_y8_owniCrossCorrValid_NormLevel_8u32f_C1R", "_ZN2cv3MatC2ERKSt6vectorIiSaIiEEiPvPKm", "icv_m7_ownColLinear32f", "_ZN2cv3hal8recip16sEPKsmS2_mPsmiiPv", "icv_m7_ippiMorphologyBorderGetSize_32f_C1R", "_ZN2cvmiERKNS_7Scalar_IdEERKNS_3MatE", "icv_y8_ownFilterMaxRow02_32f_C4R", "cvSet", "icv_m7_ippiNorm_Inf_16s_C1R", "_ZN2cv3ogl6Buffer9unmapHostEv", "Java_org_opencv_video_Video_buildOpticalFlowPyramid_11", "_ZN2cv6detail11MatchesInfoC2Ev", "_ZN2cv9Feature2D4readERKNS_8FileNodeE", "_ZN2cv6detail18GraphCutSeamFinderC2Eiff", "_ZN2cv3hal14addWeighted32fEPKfmS2_mPfmiiPv", "icv_y8_ippiFilterMaxBorder_8u_C3R", "icv_l9_ippiFilterSobelNegVertBorder_8u16s_C1R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R_5x5", "icv_m7_ownsMul_8u_NegSfs", "icv_y8_ownCalcBorderR1Cubic32f", "icv_m7_ippiNorm_Inf_16s_C4R", "icv_l9_ownCalcBorderR4Linear16s", "icv_l9_ownRow3Cubic16s", "icv_l9_ippiTranspose_16u_C4R", "icv_m7_owns_cFFTinv_8_32fc", "_ZN2cv8superres24createOptFlow_PyrLK_CUDAEv", "icv_l9_owns_cFFTfwd_32_scale_64fc", "_ZN2cv5MutexC1ERKS0_", "icv_y8_ippiThreshold_GTVal_32f_C1R", "icv_m7_ippiResizeLinear_16s_C1R", "icv_m7_ownsrDFTinv_12_scale_64f", "icv_y8_gres_NormL2Diff_8u_C1R", "Java_org_opencv_photo_Photo_edgePreservingFilter_11", "_ZNK2cv3ocl6Device11maxSamplersEv", "ippicviResizeGetSize_16u", "icv_m7_ownpi_NormL1Rel_32f_C1R", "icv_l9_owns_cFFTinv_64_64fc", "_ZN2cv5Mutex4lockEv", "_ZN2cv6detail20matchesGraphAsStringERSt6vectorINS_6StringESaIS2_EERS1_INS0_11MatchesInfoESaIS6_EEf", "Java_org_opencv_ml_TrainData_getNTrainSamples_10", "icv_m7_ippiCopy_16s_P3C3R", "_ZN2cv12mulSpectrumsERKNS_11_InputArrayES2_RKNS_12_OutputArrayEib", "icv_y8_ippiConvert_32s16s_C1RSfs", "_ZN2cv21invertAffineTransformERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_m7_ippiNormRel_L1_16s_C1R", "icv_l9_ownpi_NormInf_32f_C3R", "icv_l9_ippiResizeGetSize_16s", "icv_l9_ownpi_NormL2Diff_16s_C3R", "icv_m7_ippiResizeLinear_64f_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "_ZN2cv12equalizeHistERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_m7_ipMirror135_16uC1R", "Java_org_opencv_ml_SVMSGD_create_10", "icv_m7_ippiThreshold_GTVal_16s_C1IR", "Java_org_opencv_photo_TonemapMantiuk_delete", "_ZNK2cv4UMat7reshapeEiiPKi", "icv_y8_ownFilterMaxRow15_8u_C3R", "icv_m7_ownscDFTinv_6_scale_64fc", "_ZN2cv4UMat5setToERKNS_11_InputArrayES3_", "icv_l9_cv_ownippiFilterMin_32f_Col", "_ZN2cv10BOWTrainer3addERKNS_3MatE", "_Z21vector_Point2d_to_MatRSt6vectorIN2cv6Point_IdEESaIS2_EERNS0_3MatE", "Java_org_opencv_core_Algorithm_delete", "Java_org_opencv_ml_KNearest_getAlgorithmType_10", "_ZN2cv16findTransformECCERKNS_11_InputArrayES2_RKNS_17_InputOutputArrayEiNS_12TermCriteriaES2_", "Java_org_opencv_ml_LogisticRegression_setMiniBatchSize_10", "icv_y8_ownsSub_8u_NegSfs", "icv_y8_ippiSum_8u_C1R", "Java_org_opencv_features2d_Params_get_1filterByConvexity_10", "ippicviConvert_32s8u_C1R", "ippicviMean_16s_C3R", "_ZN2cv9videostab17OnePassStabilizer5setUpERKNS_3MatE", "icv_m7_ownFilterMaxRow13_32f_C4R", "icv_m7_ownFilterMaxRow06_8u_C4R", "_ZN3tbb8internal8governor17release_resourcesEv", "Java_org_opencv_features2d_ORB_setScoreType_10", "icv_y8_owniFilterScharrHorizMaskBorder2_16s_C1R", "icv_l9_gres_NormL2_16u_C4R", "Java_org_opencv_video_FarnebackOpticalFlow_create_10", "_ZN2cv3ocl6DeviceC2ERKS1_", "icv_y8_ippiDCTInvGetSize_32f", "icv_y8_ownFilterMinRow07_8u_C1R", "icv_l9_ippsSin_64f_A53", "icv_m7_innerHSVToRGB_8u_AC4R", "_ZN2cv3hal11normHammingEPKhS2_i", "Java_org_opencv_photo_Tonemap_getGamma_10", "ippicviMean_16u_C1R", "_ZN2cv7directx3ocl32initializeContextFromD3D10DeviceEP12ID3D10Device", "_ZN2cv11FileStorageC2EP13CvFileStorageb", "_ZNK2cv11_InputArray6copyToERKNS_12_OutputArrayE", "_ZN3tbb18captured_exception3setEPKcS2_", "_ZN2cv7directx25convertFromD3D10Texture2DEP15ID3D10Texture2DRKNS_12_OutputArrayE", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_13", "_ZNK2cv12MatAllocator5unmapEPNS_8UMatDataE", "cvUndistortPoints", "Java_org_opencv_imgproc_Imgproc_cornerHarris_10", "icv_l9_ownFilterMinRow02_32f_C4R", "icv_y8_ippiFilterBorderInit_32f", "icv_l9_ippiMin_8u_C1R", "_ZN2cv17setErrorVerbosityEb", "Java_org_opencv_ml_ANN_1MLP_getRpropDWMinus_10", "Java_org_opencv_core_Core_normalize_13", "_ZN2cv3Mat9adjustROIEiiii", "_ZN2cv23getPerspectiveTransformEPKNS_6Point_IfEES3_", "_ZN2cv3ocl6KernelC1EPKcRKNS0_7ProgramE", "icv_y8_owniFilter_32f_C3R_v8u8_6", "icv_l9_ownFilter16s_8u_C1R_h9l9", "icv_y8_ownscDftFwd_PrimeFact_32fc", "_ZN2cv5flann11IndexParams6setIntERKNS_6StringEi", "icv_m7_ippiNormDiff_L1_8u_C1R", "_ZN2cv16BOWKMeansTrainerD1Ev", "icv_l9_ownpi_CmpLE_32f_C1R", "icv_l9_ippiFilterGaussianBorder_16s_C1R", "Java_org_opencv_photo_TonemapMantiuk_setScale_10", "icv_y8_owniCopy_8u_P3C3R", "_ZN3tbb10interface914global_control15internal_createEv", "icv_y8_ippiFilterColumnPipelineGetBufferSize_16u_C3R", "icv_l9_ownCalcBorderR3Linear32f", "icv_m7_ippsZero_64f", "_ZN2cv5Mutex6unlockEv", "icv_l9_owniFilter32f_16u_C1R_g9e9_5", "icv_y8_ippiFilterSobelVertBorder_32f_C1R", "icv_m7_ippiConvert_8s16u_C1Rs", "_ZN2cv3ogl6BufferC2Ev", "_ZN2cv9watershedERKNS_11_InputArrayERKNS_17_InputOutputArrayE", "_ZNK2cv10BOWTrainer16descriptorsCountEv", "Java_org_opencv_ml_DTrees_setUseSurrogates_10", "_ZNK2cv3Mat3dotERKNS_11_InputArrayE", "Java_org_opencv_ml_ANN_1MLP_setActivationFunction_11", "icv_y8_ownscDFTinv_7_scale_32fc", "icv_l9_ownsrDftFwd_PrimeFact_32f", "_ZNK2cv8Subdiv2D10rotateEdgeEii", "icv_y8_ownpi_NormInf_32f_C3R", "icv_y8_ownpi_NormL1Diff_16s_C4R", "_ZN2cvplERKNS_7Scalar_IdEERKNS_3MatE", "icv_l9_owniFilter32f_8u_C1R_g9e9_4", "icv_l9_ownsrDFTinv_7_scale_32f", "icv_y8_ippiMinEigenValGetBufferSize_8u32f_C1R", "cvDecomposeProjectionMatrix", "icv_y8_ownFilterColumnPipeline_16s8u_C1R_X_W7cn", "Java_org_opencv_ml_ANN_1MLP_getWeights_10", "_ZN2cv17CascadeClassifier16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EEdiiNS_5Size_IiEESB_", "Java_org_opencv_features2d_ORB_getScaleFactor_10", "_ZNK2cv3Mat3mulERKNS_11_InputArrayEd", "_ZdaPv", "Java_org_opencv_calib3d_StereoMatcher_setNumDisparities_10", "Java_org_opencv_imgproc_Imgproc_accumulateSquare_10", "_ZN2cv5flann5Index5buildERKNS_11_InputArrayERKNS0_11IndexParamsEN7cvflann16flann_distance_tE", "icv_y8_ippiMean_8u_C3CMR", "icv_m7_ownFilterColumnPipeline_16u_C1R_3x3", "icv_y8_ippiThreshold_GT_16s_C1IR", "_Unwind_Resume", "icv_y8_ownpi_NormL1Diff_16s_C3R", "icv_y8_ownFilterColumnPipeline_32f_C1R_5x5", "icv_l9_ownscDFTfwd_5_32fc", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_3x3_G9E9cn", "icv_l9_owniExchange_8u_I", "Java_org_opencv_calib3d_Calib3d_stereoRectify_13", "Java_org_opencv_android_Utils_nMatToBitmap2", "icv_m7_ippsDCTInvGetSize_32f", "icv_l9_ownCubicKernel1", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "_ZNK2cv5MatOp11augAssignOrERKNS_7MatExprERNS_3MatE", "icv_l9_owniFilter_32f_C3R_g9e9_8", "Java_org_opencv_features2d_BOWKMeansTrainer_cluster_10", "icv_y8_ownpi_NormL1Rel_16s_C1R", "Java_org_opencv_features2d_Params_get_1minArea_10", "_ZNK2cv3ocl6Device15image2DMaxWidthEv", "icv_l9_ippiMirror_32f_C3IR", "Java_org_opencv_core_Core_normalize_12", "icv_y8_IPP_Erode_C3_8u", "ippicvsExp_64f_A50", "icv_l9_ownsMaxEvery_32f_AVX", "icv_y8_ownscDFTinv_14_scale_32fc", "_ZN2cv5flann33HierarchicalClusteringIndexParamsC1EiN7cvflann20flann_centers_init_tEii", "_ZNK2cv3ocl6Device22imageFromBufferSupportEv", "icv_y8_ownCalcBorderR3Linear32f", "_ZN3tbb4task13note_affinityEt", "cvGetImage", "_ZN2cv20createTonemapMantiukEfff", "icv_m7_ownpi_NormL1_32f_C4R", "_ZN2cv9FormattedD1Ev", "icv_l9_ippsConj_32fc", "icv_l9_ownscDFTfwd_9_64fc", "cvInitUndistortRectifyMap", "icv_y8_ownFilterRowBorderPipeline_16u_C1R_5x5_P8Y8cn", "Java_org_opencv_core_Core_cartToPolar_10", "icv_l9_ownippiFilterMinGetBufferSize_8u_C4R", "icv_l9_ippiNorm_Inf_8u_C4R", "icv_l9_ownscDftFwd_Fact13_64fc", "_ZN2cv12KalmanFilterC1Ev", "icv_l9_owns_cFft_BlkSplit_32fc", "cvCloneMatND", "icv_l9_ownsrDFTfwd_3_scale_32f", "icv_m7_ownFilterColumnPipeline_16s8u_C1R_X", "_ZN2cv13createTonemapEf", "Java_org_opencv_features2d_MSER_detectRegions_10", "icv_y8_owniFilterMedianVert1x3_32f_C1R", "icv_l9_ownFilterMaxRow02_8u_C3R", "_ZN2cv15stereoCalibrateERKNS_11_InputArrayES2_S2_RKNS_17_InputOutputArrayES5_S5_S5_NS_5Size_IiEERKNS_12_OutputArrayESA_SA_SA_iNS_12TermCriteriaE", "icv_l9_ownpi_NormL1Diff_16u_C3R", "icv_y8_ownscDFTfwd_11_64fc", "Java_org_opencv_features2d_Params_get_1thresholdStep_10", "Java_org_opencv_core_Mat_n_1setTo__JJ", "Java_org_opencv_core_Mat_n_1assignTo__JJI", "icv_l9_ippiCopy_32s_C4MR", "icv_y8_ownscDFTinv_15_scale_64fc", "Java_org_opencv_video_BackgroundSubtractorKNN_setDetectShadows_10", "icv_m7_ownpi_NormInf_16u_C3R", "cvQueryFrame", "icv_l9_owns_cFFTinv_16_32fc", "icv_m7_ippiNot_8u_C1R", "icv_y8_ownscDFTfwd_3_32fc", "Java_org_opencv_video_Video_calcOpticalFlowPyrLK_12", "icv_y8_ippsConj_32fc", "Java_org_opencv_ml_StatModel_calcError_10", "_ZN2cv11setIdentityERKNS_17_InputOutputArrayERKNS_7Scalar_IdEE", "icv_l9_ippiDFTInv_PackToR_32f_C1R", "ippicviFilterBorder_16s_C4R", "ippicviNormRel_L1_32f_C1R", "icv_l9_ippiSum_32f_C4R", "_ZNK2cv7MatExpr3dotERKNS_3MatE", "_ZN3tbb8internal18concurrent_monitor11cancel_waitERNS1_14thread_contextE", "Java_org_opencv_ml_LogisticRegression_predict_11", "icv_y8_ippiResizeGetSrcOffset_16u", "icv_l9_ippiNormDiff_Inf_16u_C1MR", "icv_l9_ippiSwapChannels_16u_C3C4R", "icv_m7_ownpi_NormL1Diff_16u_C1R", "Java_org_opencv_video_Video_createOptFlow_1DualTVL1_10", "icv_l9_ownFilterMinRow11_32f_C1R", "icv_y8_ownpi_NormL1Diff_8u_C1R", "icv_m7_ownpi_NormL1Diff_8u_C4R", "icv_l9_owniFilter32f_16u_C4R_g9e9_0", "_ZN2cv5flann5IndexD1Ev", "TBB_runtime_interface_version", "ippicviFilterMinBorderGetBufferSize", "icv_y8_ippiCopyConstBorder_16s_C4R", "_ZNK2cv8Subdiv2D11checkSubdivEv", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_W7cn", "icv_m7_ippiAddProduct_32f_C1IMR", "Java_org_opencv_video_FarnebackOpticalFlow_setWinSize_10", "icv_m7_ippiCopyConstBorder_16u_C1R", "icv_l9_gres_NormL2_16u_C1R", "icv_y8_owniFilterSobelHorizBorder2_16s_C1R", "icv_l9_ownscDftInv_Prime3_64fc", "_ZNK2cv3ocl5Queue3ptrEv", "icv_m7_ownpi_NormInfRel_32f_C1R", "Java_org_opencv_core_Core_multiply_11", "Java_org_opencv_imgproc_LineSegmentDetector_compareSegments_11", "icv_m7_ownippiDilateBorder_32f_C3R", "icv_y8_ippiThreshold_LTVal_8u_C1IR", "_ZN3tbb8internal12dynamic_linkEPKcPKNS0_23dynamic_link_descriptorEmPPvi", "cvChangeSeqBlock", "_ZNK2cv11_InputArray7getMat_Ei", "icv_l9_ownFilterBorder32f_8u_C3R", "Java_org_opencv_ml_SVMSGD_setSvmsgdType_10", "ippicviMean_StdDev_32f_C1R", "Java_org_opencv_imgproc_Imgproc_drawMarker_11", "ippicviTranspose_16s_C4IR", "icv_m7_ippiFilterBorder_32f_C3R", "icv_y8_Erode_32f_C3S", "icv_l9_ippiFilterSobelVertBorderGetBufferSize", "icv_y8_ownpi_NormInfDiff_8u_C4R", "icv_y8_ownFilterMaxRow05_32f_C4R", "Java_org_opencv_video_DualTVL1OpticalFlow_getTheta_10", "cvCreateSparseMat", "icv_m7_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "icv_y8_owns_rFFTinv_8_scale_64f", "icv_l9_owniFilter32f_16s_C3R_g9e9_8", "icv_l9_ownResize1Linear16s", "icv_m7_ownResize4Linear16s", "icv_l9_owniFilter_32f_C3R_g9e9_3", "icv_m7_ippiNormDiff_Inf_32f_C3R", "icv_l9_ownsrDFTfwd_11_scale_64f", "icv_l9_ownsrDFTinv_12_32f", "icv_y8_ownFilterMaxRow09_32f_C4R", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_14", "_ZNK2cv16BOWKMeansTrainer7clusterEv", "ippicviMin_16u_C1R", "icv_m7_ownscDFTfwd_7_64fc", "icv_y8_ownscDftFwd_Prime6_64fc", "Java_org_opencv_core_Core_sumElems_10", "own_ipps_sLn_E7LAynn", "icv_m7_ippiFilterColumnPipelineGetBufferSize_16s_C3R", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3_kerAvr_W7cn", "icv_l9_ippiFilterMedianBorderGetBufferSize", "_ZN2cv17getWindowPropertyERKNS_6StringEi", "icv_y8_ippiFilterSobelNegVertBorderGetBufferSize", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDx2", "_ZN2cv16pointPolygonTestERKNS_11_InputArrayENS_6Point_IfEEb", "_ZNSt15__exception_ptr13exception_ptrC1Ev", "icv_y8_ippiSet_32s_C4MR", "_ZNSt10bad_typeidD2Ev", "_ZN2cv6detail17OrbFeaturesFinder4findERKNS_11_InputArrayERNS0_13ImageFeaturesE", "_ZN2cv7grabCutERKNS_11_InputArrayERKNS_17_InputOutputArrayENS_5Rect_IiEES5_S5_ii", "icv_l9_ippiMirror_16u_C3R", "icv_l9_ownFilterMinRow09_8u_C1R", "ippicviFilterMedianBorder_16u_C1R", "icv_y8_ownscDFTinv_14_32fc", "Java_org_opencv_features2d_Params_get_1maxCircularity_10", "icv_m7_ippsFFTInit_C_64fc", "Java_org_opencv_ml_LogisticRegression_get_1learnt_1thetas_10", "_ZNK2cv3ocl6Device16maxWorkGroupSizeEv", "icv_y8_owniFilter_32f_C1R_v8u8_4NA", "icv_ipp_max_cpuid_input", "cvGetNormalizedCentralMoment", "icv_y8_ippiNormDiff_L2_16s_C3R", "icv_l9_owns_cFftFwd_Fact4_64fc", "icv_y8_ippsSet_8u", "icv_m7_ippiFilterGaussianInit", "icv_y8_ippiResizeCubic_16u_C3R", "icv_m7_cv_ownippiFilterMin_16s_Row", "_ZN2cv9SparseMat5clearEv", "icv_y8_ownpiDotProd_16u64f_C1R", "icv_m7_ownpi_NormInf_8u_C4R", "icv_y8_ippiFilterMedianBorderGetBufferSize", "Java_org_opencv_core_Mat_n_1size", "icv_y8_ownFilter_32f_C1R_v8u8", "icv_m7_ownFilterMaxRowVH_32f_C3R", "Java_org_opencv_imgproc_Imgproc_HoughLines_10", "_ZN7cvflann17set_distance_typeENS_16flann_distance_tEi", "Java_org_opencv_imgproc_Imgproc_undistort_11", "_ZNK2cv3ocl6Device23preferredVectorWidthIntEv", "cvCorrectMatches", "icv_m7_ippiHistogramGetBufferSize", "icv_m7_ownFilterMinRow02_32f_C4R", "Java_org_opencv_photo_TonemapReinhard_setLightAdaptation_10", "icv_m7_ippiTranspose_16u_C3R", "icv_y8_ippiMean_32f_C3CMR", "_ZN2cv8imdecodeERKNS_11_InputArrayEiPNS_3MatE", "Java_org_opencv_core_Core_subtract_13", "_ZN2cv9videostab34MoreAccurateMotionWobbleSuppressor8suppressEiRKNS_3MatERS2_", "Java_org_opencv_calib3d_Calib3d_findChessboardCorners_11", "_ZN2cv17destroyAllWindowsEv", "_ZN2cv5instr18useInstrumentationEv", "_ZNK2cv5MatOp12augAssignAddERKNS_7MatExprERNS_3MatE", "icv_y8_ownpi_NormInf_8u_C3R", "Java_org_opencv_calib3d_StereoMatcher_delete", "icv_m7_ippsZero_32f", "icv_y8_ownRow4Linear64f", "icv_l9_ownscDftInv_Prime13_32fc", "icv_l9_ippiCopy_32f_C1R", "icv_m7_ippiNorm_L1_16u_C3R", "icv_l9_owniFilter32f_8u_C3R_g9e9_3", "cvCreateSeqBlock", "icv_y8_owns_cFFTinv_8_scale_64fc", "cvHaveImageReader", "icv_m7_ownscDFTinv_3_scale_32fc", "_ZN2cv3ocl7Program6createERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_m7_ippiMirror_32s_C4R", "Java_org_opencv_video_KalmanFilter_get_1processNoiseCov_10", "cvAdd", "ippicviNormDiff_L2_8u_C3R", "ippicviConvert_8s16s_C1R", "Java_org_opencv_video_FarnebackOpticalFlow_getFastPyramids_10", "_ZN2cv18SimpleBlobDetector6ParamsC2Ev", "icv_y8_ownsSub_8u_PosSfs", "icv_m7_ownsAdd_16s_1Sfs", "Java_org_opencv_imgproc_Imgproc_polylines_12", "icv_l9_ownscDFTinv_11_scale_64fc", "icv_l9_owns_cFFTfwd_64_scale_64fc", "icv_l9_ownscDftInv_Fact13_32fc", "icv_m7_ippiNormDiff_L1_16u_C1MR", "icv_m7_ippiThreshold_LTVal_8u_C1IR", "icv_m7_Erode_32f_C1S", "icv_m7_ippiFilterGaussianBorder_16s_C1R", "cvFirstType", "_ZN2cv6repeatERKNS_3MatEii", "icv_l9_ippiResizeCubic_16u_C3R", "ippicviConvert_32s16u_C1RSfs", "icv_m7_ownscDftFwd_Fact11_32fc", "icv_l9_ippiFilterSobelHorizBorder_8u16s_C1R", "icv_m7_ippsSortDescend_8u_I", "cvReprojectImageTo3D", "icv_l9_innerXYZToRGB_8u_C3R", "Java_org_opencv_features2d_BFMatcher_create_10", "_ZN2cv3ocl12PlatformInfoC2ERKS1_", "_ZN2cv14PCABackProjectERKNS_11_InputArrayES2_S2_RKNS_12_OutputArrayE", "icv_m7_ownscDftInv_Prime11_32fc", "cvSeqPushFront", "icv_l9_ownpi_NormInfRel_32f_C1R", "icv_l9_ownFilterMaxRow01_32f_C1R", "icv_m7_ippiFilterSobelHorizBorder_32f_C1R", "_ZN2cv15setBreakOnErrorEb", "icv_m7_myHLSToRGB_8u_C3R", "Java_org_opencv_core_Mat_n_1elemSize", "icv_y8_ownFilterRowBorderPipeline_32f_C3R_3x3", "icv_m7_ownFilterMinRow07_8u_C1R", "_ZN2cv3LDAD2Ev", "icv_y8_ownpi_NormL1Rel_32f_C1R", "Java_org_opencv_photo_TonemapDrago_setBias_10", "cvEndFindContours", "ippicvsMaxEvery_64f", "ippicviColorToGray_32f_AC4C1R", "icv_y8_ippiCopy_8u_C3P3R", "_ZN2cv20edgePreservingFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiff", "icv_m7_ippiResizeCubic_32f_C3R", "icv_l9_ownpiLUTPalette_8u_C3R", "Java_org_opencv_ml_TrainData_getCatCount_10", "cvSetND", "_ZN2cv20getValidDisparityROIENS_5Rect_IiEES1_iii", "_ZN2cv4cuda28getCudaDriverApiErrorMessageEi", "icv_l9_ippiResizeGetBufferSize_8u", "Java_org_opencv_ml_SVMSGD_setTermCriteria_10", "icv_y8_ownFilterMinRow06_32f_C4R", "_ZN2cv3SVD9backSubstERKNS_11_InputArrayES3_S3_S3_RKNS_12_OutputArrayE", "_ZN3tbb8internal17generic_scheduler14cleanup_workerEPvb", "icv_l9_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "icv_l9_ownpi_Or_8u_C1R", "_ZN2cv7directx25convertToDirect3DSurface9ERKNS_11_InputArrayEP17IDirect3DSurface9Pv", "_ZN2cv3ocl5QueueC2Ev", "_ZN2cv6detail12CameraParamsaSERKS1_", "icv_l9_owniCopy_8u_C4P4R_cn", "icv_l9_ownFilterBorder32f_16s_C3R", "icv_l9_Dilate_32f_C4S", "icv_l9_owniFilter32f_16s_C1R_g9e9_2", "icv_l9_ippiResizeLinear_32f_C1R", "icv_l9_ownResize1Linear32f", "_ZN2cv15getCPUTickCountEv", "icv_l9_ownsSub_16s_NegSfs", "icv_m7_ownFilterMaxRow04_32f_C1R", "_ZN2cv6invertERKNS_11_InputArrayERKNS_12_OutputArrayEi", "Java_org_opencv_imgproc_Imgproc_preCornerDetect_10", "icv_l9_cv_ownippiFilterMin_8u_Row", "icv_l9_ownpiDotProd_16u64f_C1R", "icv_y8_ownscDFTinv_10_32fc", "_ZN10__cxxabiv115__forced_unwindD2Ev", "_ZN2cv20createMergeRobertsonEv", "icv_m7_ownFilterMinColumnVH_32f_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5", "icv_y8_ippiAddWeighted_32f_C1IR", "icv_m7_ippsConj_64fc", "Java_org_opencv_core_Core_vconcat_10", "_ZN2cv12findContoursERKNS_17_InputOutputArrayERKNS_12_OutputArrayES5_iiNS_6Point_IiEE", "_ZThn8_N2cv8superres15SuperResolution5resetEv", "Java_org_opencv_imgproc_Imgproc_resize_11", "icv_l9_owniFilter32f_16s_C1R_g9e9_8", "_ZNK2cv12_OutputArray9fixedTypeEv", "_ZN2cv2ml9StatModel5trainERKNS_11_InputArrayEiS4_", "ippicviDFTFwd_CToC_32fc_C1R", "icv_y8_owns_sDctFwd_Dir_32f", "icv_m7_ownsrDFTfwd_15_scale_64f", "_ZNSt15__exception_ptr13exception_ptrC2ERKS0_", "_ZN2cv2ml9StatModel5trainERKNS_3PtrINS0_9TrainDataEEEi", "ippicviNormDiff_L1_16s_C1R", "icv_y8_ippiCopy_8u_C4MR", "icv_l9_ownscDftInv_Fact5_64fc", "_ZN2cv15NAryMatIteratorC1Ev", "_ZN3tbb8internal8governor16assume_schedulerEPNS0_17generic_schedulerE", "icv_l9_ownippiMorphologyBorderReplicateInMemInit_32f_C3R", "icv_y8_cv_ownMorphologyBorderConstInMemInit", "icv_y8_ippiAddC_32f_C1R", "_ZNK2cv4UMat9convertToERKNS_12_OutputArrayEidd", "_ZNK2cv21DetectionBasedTracker10getObjectsERSt6vectorISt4pairINS_5Rect_IiEEiESaIS5_EE", "icv_l9_owniFilter32f_8u_C4R_g9e9_1", "_ZNK2cv12_OutputArray5setToERKNS_11_InputArrayES3_", "icv_m7_ippsMinEvery_64f", "ippicviNormDiff_L1_8u_C4R", "icv_y8_owniSwapChannels_16u_C4C3R", "icv_m7_ippiMirror_32f_C4R", "_ZN2cv17DescriptorMatcher20DescriptorCollection3setERKSt6vectorINS_3MatESaIS3_EE", "icv_l9_owniFlipCopy_16u_C1", "_ZNK2cv2ml6KDTree4dimsEv", "cvReleaseStereoBMState", "icv_l9_ippiMean_StdDev_32f_C3CR", "_ZN2cv3ocl6KernelC1Ev", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_3x3_W7cn", "_ZNK2cv13HOGDescriptor19detectMultiScaleROIERKNS_3MatERSt6vectorINS_5Rect_IiEESaIS6_EERS4_INS_12DetectionROIESaISA_EEdi", "icv_l9_ippiConvert_32f16u_C1RSfs", "_ZN2cv5instr8NodeDataC2ERS1_", "icv_m7_ippsMaxEvery_8u", "_ZN2cv4cuda20fastNlMeansDenoisingERKNS_11_InputArrayERKNS_12_OutputArrayEfiiRNS0_6StreamE", "_ZN2cvmiERKNS_3MatES2_", "icv_y8_ippiCopy_8u_C4P4R", "_ZNK2cv3ocl6Device17hostUnifiedMemoryEv", "icv_l9_ownAbsDiff_8u_C1R", "Java_org_opencv_ml_ANN_1MLP_setLayerSizes_10", "icv_y8_ownMaxEllipse_8u_C1", "icv_m7_ownsrDFTinv_13_64f", "Java_org_opencv_calib3d_Calib3d_triangulatePoints_10", "icv_l9_ippiConvert_32f8u_C1RSfs", "icv_l9_owniFilter_32f_C4R_g9e9_8", "icv_m7_ippiConvert_32s8s_C1R", "icv_l9_owniFilter_32f_C4R_g9e9_2", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_12", "icv_y8_ownscDFTfwd_9_scale_64fc", "Java_org_opencv_core_Mat_n_1empty", "Java_org_opencv_ml_SVM_getNu_10", "Java_org_opencv_features2d_Params_get_1minConvexity_10", "Java_org_opencv_video_KalmanFilter_delete", "icv_y8_ippiTranspose_8u_C1R", "icv_m7_owniGetRectTop_16s", "icv_m7_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_m7_ownpi_NormL2Diff_16s_C1R", "_ZN2cv33createEMDL1HistogramCostExtractorEif", "_ZN2cvdvEdRKNS_7MatExprE", "icv_m7_IPP_Erode_C3_32f", "icv_l9_owns_cFFTinv_4_scale_32fc", "ippicvsMinEvery_8u", "Java_org_opencv_imgproc_LineSegmentDetector_compareSegments_10", "_ZN2cv4UMat10deallocateEv", "_ZN2cv3ocl6DeviceC2EPv", "_ZN2cv7inpaintERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi", "icv_l9_ippiFilterGaussianBorder_32f_C3R", "Java_org_opencv_objdetect_HOGDescriptor_get_1derivAperture_10", "icv_m7_ownFilterBorder32f_16s_C1R", "icv_l9_ownMean_StdDev_32f_C1MR_HSW", "icv_y8_ownFilterRowBorderPipeline_32f_C3R_X", "icv_m7_ownFilterRowBorderPipeline_16u_C3R_3x3", "ippicviNormDiff_Inf_8u_C1R", "_ZN3tbb8internal3rml14private_server9wake_someEi", "icv_l9_ownFilterBorder32f_16u_C3R", "icv_m7_owns_rFFT_2_scale_32f", "Java_org_opencv_calib3d_StereoMatcher_getSpeckleRange_10", "icv_m7_ippiMirror_16u_C4R", "icv_l9_ownRow4Cubic16s", "_ZN2cv3Mat4diagERKS0_", "_ZN2cv3ogl6BufferC1ENS_5Size_IiEEijb", "icv_l9_owns_rFFT_1_scale_64f", "icv_y8_owniFlip_16u_C3", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R", "icv_m7_owns_cFFTfwd_4_scale_64fc", "cvLinearPolar", "icv_y8_ippiCopy_16s_C1R", "icv_l9_ownsrDFTinv_9_32f", "icv_m7_ippiNormDiff_Inf_16s_C3R", "icv_m7_ippiAdd_16u_C1RSfs", "icv_y8_ownscDftFwd_Prime7_64fc", "icv_y8_ippiNormDiff_L2_16u_C1MR", "_ZN2cv5Mutex7trylockEv", "icv_y8_ippiNormDiff_L1_8u_C1R", "icv_y8_ownpi_NormInf_16s_C4R", "icv_y8_ippiResizeGetSrcOffset_32f", "icv_l9_ownsrDFTinv_5_64f", "_ZN2cv3hal10absdiff32fEPKfmS2_mPfmiiPv", "_ZN10__cxxabiv123__fundamental_type_infoD0Ev", "icv_y8_gres_NormL2Rel_16u_C1R", "ippicviSwapChannels_32f_C4R", "icv_y8_owniFilterMedianBorderInMem_16s_C1R", "icv_m7_ownCalcBorderR4Cubic32f", "icv_l9_ownippiFilterMedian_16s_C1R_5x5", "icv_y8_ownFilterMaxRow06_8u_C4R", "icv_m7_owns_cFFT_2_32fc", "icv_m7_ippiMax_16u_C1R", "Java_org_opencv_features2d_MSER_getMinArea_10", "icv_y8_ownippiFilterMinGetBufferSize_8u_C4R", "icv_l9_ippiNorm_Inf_32f_C4R", "icv_y8_ippiSub_16s_C1RSfs", "icv_l9_ownsSet_32s", "Java_org_opencv_core_Core_randShuffle_10", "_ZN2cv3ocl7ProgramD2Ev", "Java_org_opencv_ml_TrainData_getVarSymbolFlags_10", "Java_org_opencv_features2d_DescriptorMatcher_empty_10", "_ZN2cv3hal5DFT1D6createEiiiiPb", "_ZN2cv17DescriptorMatcher20DescriptorCollectionC1Ev", "ippicvsInvSqrt_64f_A50", "icv_m7_owns_rFFT_1_32f", "icv_m7_ownResize1Cubic32f", "_ZN2cveoERKNS_3MatERKNS_7Scalar_IdEE", "icv_m7_ownFilterMinRow06_32f_C1R", "Java_org_opencv_ml_TrainData_getTrainSampleIdx_10", "_ZNK2cv4cuda10DeviceInfo12maxSurface1DEv", "Java_org_opencv_features2d_Features2d_drawMatchesKnn_10", "_ZNK2cv12MatAllocator6uploadEPNS_8UMatDataEPKviPKmS6_S6_S6_", "Java_org_opencv_imgproc_Imgproc_Scharr_12", "_ZN2cv5flann17KMeansIndexParamsC1EiiN7cvflann20flann_centers_init_tEf", "_ZN2cv4cuda18registerPageLockedERNS_3MatE", "_ZN2cv6detail12DpSeamFinder18hasOnlyOneNeighborEi", "icv_m7_owns_rFFTfwd_8_scale_32f", "Java_org_opencv_core_Mat_n_1channels", "Java_org_opencv_imgproc_Imgproc_erode_11", "Java_org_opencv_features2d_AgastFeatureDetector_setType_10", "_ZN2cv12approxPolyDPERKNS_11_InputArrayERKNS_12_OutputArrayEdb", "Java_org_opencv_core_Core_cartToPolar_11", "_ZNK10__cxxabiv119__pointer_type_info15__pointer_catchEPKNS_17__pbase_type_infoEPPvj", "_ZN2cv12resizeWindowERKNS_6StringEii", "icv_l9_ippiThreshold_32f_C1R", "_ZN2cv11RNG_MT19937C1Ej", "icv_y8_owns_initTabBitRev", "icv_y8_cv_ownippiFilterMin_16u_Col", "icv_m7_ippiCopyReplicateBorder_32s_C4IR", "icv_y8_ippiCopyConstBorder_8u_C3R", "_ZN2cv3hal7sqrt32fEPKfPfi", "icv_m7_ippiCopy_8u_P3C3R", "icv_y8_ownsSub_8u_1Sfs", "icv_y8_ownFilterMinRow07_8u_C4R", "Java_org_opencv_ml_LogisticRegression_predict_10", "icv_m7_ippiTranspose_16u_C3IR", "ippicviNorm_Inf_16s_C4R", "Java_org_opencv_imgproc_Imgproc_createLineSegmentDetector_11", "icv_y8_owniSqrDistanceNormGetSize", "icv_m7_owniGetRectLeft_32f", "icv_m7_ippiFilterGaussianBorder_16u_C1R", "_ZNK3tbb27invalid_multiple_scheduling4whatEv", "icv_y8_ippiTranspose_16u_C3IR", "_ZN2cv3hal7invSqrtEPKfPfi", "ippicviMean_16u_C1MR", "icv_m7_ippiMorphologyBorderInit_8u_C1R", "icv_l9_ownpi_NormL2Diff_32f_C3R", "ippicvsPowx_64f_A50", "cvCornerMinEigenVal", "_ZN2cv6detail14TimelapserCrop10initializeERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_5Size_IiEESaISA_EE", "icv_l9_ownsFFTGetBufSize_C_32fc", "_ZN2cv9videostab15MotionInpainterC2Ev", "icv_l9_ippiFilterScharrHorizMaskBorder_8u16s_C1R", "icv_y8_ippiMirror_16s_C1IR", "icv_l9_ippiThreshold_LTVal_16s_C1R", "icv_l9_owns_rFFT_2_scale_32f", "Java_org_opencv_objdetect_HOGDescriptor_get_1cellSize_10", "_ZNK2cv3Mat4diagEi", "icv_m7_ippiNorm_L2_16u_C1R", "icv_y8_ownscDFTinv_3_64fc", "Java_org_opencv_imgproc_Imgproc_arrowedLine_10", "_ZN10__cxxabiv121__vmi_class_type_infoD2Ev", "icv_y8_ownErodeEllipseBorderReplicate_8u_C3R", "icv_l9_ownsrDFTfwd_10_64f", "ippicviSwapChannels_8u_C4C3R", "icv_m7_ownpi_NormL2_16u_C4R", "icv_m7_ownscDFTfwd_12_64fc", "_ZN3tbb18task_group_context16copy_fp_settingsERKS0_", "cvCreateTrackbar", "icv_l9_ownCopySubpixIntersect_8u_C1R_h9l9", "_Z28Mat_to_vector_vector_Point2fRN2cv3MatERSt6vectorIS2_INS_6Point_IfEESaIS4_EESaIS6_EE", "_ZNK2cv3ocl6Device18globalMemCacheSizeEv", "_ZN2cv3absERKNS_7MatExprE", "cvCornerEigenValsAndVecs", "ippicviXor_8u_C1R", "icv_m7_ippiMean_8u_C1R", "icv_m7_ippiResizeGetSrcOffset_32f", "icv_l9_ippiSet_16s_C1R", "icv_m7_ownDilateEllipseBorderReplicate_32f_C4R", "_ZNK2cv7MatExpr4typeEv", "icv_y8_ownResize3Linear32f", "_ZN2cv11blendLinearERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayE", "ippicviAbsDiff_8u_C1R", "icv_l9_owniFilter32f_8u_C4R_g9e9_6", "icv_y8_IPP_Dilate_C4_32f", "icv_l9_ownRow1Linear16u", "_Z21Mat_to_vector_Point3fRN2cv3MatERSt6vectorINS_7Point3_IfEESaIS4_EE", "_ZN2cv8Stitcher15composePanoramaERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv4cuda6Stream4NullEv", "own_ipps_sSin_E7LAynn", "icv_l9_owniFilter32f_16u_C1R_g9e9_8", "icv_m7_ippiDotProd_16u64f_C1R", "icv_m7_ownFilterMinColumn05_32f_C1R", "icv_m7_ippiAddSquare_16u32f_C1IR", "_ZN2cv8superres11FrameSourceD1Ev", "icv_l9_ownscDftFwd_Prime16_32fc", "icv_y8_ippiConvert_8s8u_C1Rs", "Java_org_opencv_ml_TrainData_getCatOfs_10", "_ZN2cv9videostab17WeightingDeblurerC2Ev", "_ZN2cv7fitLineERKNS_11_InputArrayERKNS_12_OutputArrayEiddd", "icv_m7_ippiResizeGetSrcOffset_8u", "ippicviMinEigenVal_32f_C1R", "cvReleaseHist", "icv_l9_ownRow1Cubic16u", "icv_m7_Erode_8u_C4S", "icv_l9_ippiAddWeighted_8u32f_C1IR", "_ZN2cv25groupRectangles_meanshiftERSt6vectorINS_5Rect_IiEESaIS2_EERS0_IdSaIdEES8_dNS_5Size_IiEE", "icv_l9_ippsDFTInit_R_32f", "cvSmooth", "_ZN2cv2ml9TrainData11loadFromCSVERKNS_6StringEiiiS4_cc", "icv_y8_ownBuildFilter_64f", "_ZN2cv9videostab17WeightingDeblurer6deblurEiRNS_3MatE", "icv_l9_owniFilterMedianHoriz5x1_32f_C1R", "icv_m7_ippiSet_32s_C3MR", "icv_l9_ippsCos_64f_A53", "ippicvsFlip_64f_I", "icv_l9_owns_cFftInv_Large_64fc", "icv_l9_owns_getSizesTwd_Large_32f", "_ZNK2cv3ocl6Kernel20compileWorkGroupSizeEPm", "icv_l9_owniCrossCorrValid_NormLevel_8u32f_C1R", "_ZN2cv11contourAreaERKNS_11_InputArrayEb", "icv_l9_ownDilate_32f_C4S", "ippicviMul_32f_C1R", "icv_l9_ownsrDFTfwd_10_scale_64f", "_ZNK2cv4cuda10DeviceInfo19maxSurface1DLayeredEv", "icv_l9_owniFilter32f_16s_C4R_g9e9_3", "_ZN2cv8superres23createFrameSource_VideoERKNS_6StringE", "own_ipps_sSin_L9LAynn", "icv_m7_ippsFFTInv_CToC_64fc", "icv_y8_owniConvert_32s16s_C1RSfs", "icv_l9_ippiMul_32f_C1R", "Java_org_opencv_core_Mat_n_1colRange", "icv_l9_ownscDFTinv_15_32fc", "icv_y8_ownpi_NormInfDiff_16u_C4R", "icv_l9_ownscDftInv_PrimeFact_32fc", "icv_y8_ippsConvert_32f8s_Sfs", "icv_l9_ownsMulC_16s_I_NegSfs", "icv_l9_ownippiFilterMaxBorderReplicate_32f_C3R", "icv_y8_ippiCopyReplicateBorder_16s_C3R", "icv_l9_ippiFilterLaplacianBorder_32f_C1R", "_ZN2cv5MatOpC2Ev", "Java_org_opencv_photo_TonemapReinhard_setIntensity_10", "_ZNK3tbb10interface78internal15task_arena_base13internal_waitEv", "icv_y8_cv_ownippiFilterMin_8u_Row", "icv_l9_ippiSqrIntegral_8u32f64f_C1R", "icv_m7_ippiAddSquare_8u32f_C1IR", "icv_y8_owns_initDctInv_Conv_32f", "icv_m7_ownFilterMaxRow11_8u_C1R", "_ZN2cv13stereoRectifyERKNS_11_InputArrayES2_S2_S2_NS_5Size_IiEES2_S2_RKNS_12_OutputArrayES7_S7_S7_S7_idS4_PNS_5Rect_IiEESA_", "Java_org_opencv_imgproc_Imgproc_line_10", "icv_m7_cv_ownippiFilterMax_32f_Row", "cvStartWindowThread", "icv_y8_ownsInitTabDftFwdRec_64f", "Java_org_opencv_features2d_FeatureDetector_empty_10", "icv_y8_owniFilter_32f_C4R_v8u8_6NA", "icv_y8_owns_cFFTfwd_16_32fc", "icv_y8_owncvRowMatrAlErr", "cvGetWindowHandle", "icv_m7_owns_rFFTinv_16_64f", "icv_y8_ippiCopy_16s_AC4C3R", "ippicviMirror_8u_C1R", "icv_l9_ippiAddWeighted_8u32f_C1IMR", "icv_m7_ippiMulPack_32f_C1IR", "Java_org_opencv_core_Core_extractChannel_10", "icv_m7_ippiNormDiff_Inf_8u_C1R", "icv_m7_ownFilterMaxRow15_8u_C3R", "Java_org_opencv_objdetect_HOGDescriptor_computeGradient_11", "_ZN2cv3hal5mul8uEPKhmS2_mPhmiiPv", "icv_m7_ownsSub_16s_PosSfs", "icv_l9_owns_rFFTfwd_32_scale_64f", "Java_org_opencv_ml_LogisticRegression_setRegularization_10", "_ZN2cv4cuda6GpuMat9adjustROIEiiii", "ippicviTranspose_32f_C1IR", "ippicviMean_StdDev_16u_C3CMR", "icv_l9_ownFilterMinRow15_32f_C1R", "icv_m7_ippiDFTInit_C_32fc", "icv_l9_ippsConvert_16s8s_Sfs", "icv_l9_ippsMaxEvery_64f", "_ZN2cv17setWindowPropertyERKNS_6StringEid", "_ZN2cvplERKNS_7MatExprES2_", "_ZN2cvplERKNS_7MatExprERKNS_3MatE", "icv_l9_ownsrDFTfwd_14_scale_64f", "_ZN2cv12VideoCapture4grabEv", "_ZTv0_n48_N2cv9Feature2D4readERKNS_8FileNodeE", "ippicviResizeCubic_32f_C1R", "_ZN2cv2LUEPdmiS0_mi", "_Unwind_GetGR", "_ZNK2cv11_InputArray6copyToERKNS_12_OutputArrayERKS0_", "icv_y8_ippiThreshold_GT_8u_C1R", "icv_l9_ownpi_NormL1Rel_32f_C1R", "icv_y8_ownFilterColumnPipeline_16s8u_C1R_X", "Java_org_opencv_core_Mat_n_1copyTo__JJJ", "_Z28vector_vector_Point2f_to_MatRSt6vectorIS_IN2cv6Point_IfEESaIS2_EESaIS4_EERNS0_3MatE", "icv_l9_ownscDFTinv_14_64fc", "icv_l9_ippiTranspose_8u_C4IR", "icv_y8_owns_cFFTfwd_16_scale_32fc", "_ZN2cv13applyColorMapERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_l9_owniFilter32f_16s_C4R_g9e9_6", "_ZNSt8bad_castD2Ev", "cvSet2D", "_ZN2cv21DetectionBasedTrackerD0Ev", "own_ipps_dCos_U8EPnnn", "_Z21Mat_to_vector_Point3dRN2cv3MatERSt6vectorINS_7Point3_IdEESaIS4_EE", "icv_l9_ippsDFTFwd_CToC_32fc", "_ZN3tbb16spin_rw_mutex_v318internal_constructEv", "Java_org_opencv_calib3d_Calib3d_findChessboardCorners_10", "ippicviAddWeighted_16u32f_C1IR", "_ZNK2cv9Algorithm14getDefaultNameEv", "icv_y8_owniConvert_8u8s_ccode", "icv_m7_ippiNormDiff_L1_16u_C3R", "icv_y8_ippiResizeLinear_16u_C1R", "_ZN2cv17distanceTransformERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "cvMerge", "icv_m7_ownsSub_8u_1Sfs", "_ZNK2cv5MatOp6invertERKNS_7MatExprEiRS1_", "icv_y8_ownMinEllipse_32f_C1", "icv_y8_ippiNormDiff_L2_16u_C3R", "icv_l9_ownErode_8u_C4S", "icv_m7_ownscDFTinv_11_scale_64fc", "_ZN2cv3MatC2ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "icv_l9_ownFilterMinRow02_8u_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "icv_y8_ippiNormRel_Inf_16u_C1MR", "_ZN2cv8UMatDataC1EPKNS_12MatAllocatorE", "_ZN2cv3hal6log64fEPKdPdi", "icv_m7_ippiMean_16u_C4R", "icv_l9_ippiNorm_L2_32f_C1MR", "icv_m7_owns_cFFTinv_8_scale_32fc", "ippicviMinMaxIndx_8u_C1MR", "_ZN2cv3ocl8internal14isOpenCLForcedEv", "icv_l9_owniFilter32f_16u_C4R_g9e9_2", "icv_l9_ippiNorm_L2_16s_C1R", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_12", "icv_l9_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_m7_ippiIntegral_8u32s_C1R", "_ZN2cv17CascadeClassifier4loadERKNS_6StringE", "icv_y8_ownscDFTfwd_3_scale_64fc", "_ZN2cv6detail29restoreImageFromLaplacePyrGpuERSt6vectorINS_4UMatESaIS2_EE", "icv_y8_ippiFilterGaussianInit", "icv_y8_ippsFlip_16u_I", "icv_y8_ownscDFTfwd_5_scale_64fc", "icv_y8_owns_cFFT_2_32fc", "icv_l9_ownFilterMinRow03_32f_C3R", "icv_l9_owniFilter32f_8u_C4R_g9e9_0", "_Unwind_GetLanguageSpecificData", "icv_y8_ippiMorphologyBorderGetSize_32f_C3R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R", "icv_y8_ippiNormDiff_L2_32f_C3R", "icv_m7_ippsFFTFwd_RToPack_32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_5x5_W7cn", "icv_y8_ippiCopy_32f_C3R", "Java_org_opencv_calib3d_StereoSGBM_setP2_10", "__register_frame_info", "_ZNK2cv3LDA4saveERKNS_6StringE", "icv_m7_ownsAdd_16s_Bound", "ippicviMorphologyBorderGetSize_32f_C3R", "icv_l9_owniFilter32f_16u_C4R_g9e9_8", "icv_l9_ippiResizeCubicInit_32f", "icv_y8_ownFilterMaxRow01_8u_C1R", "icv_l9_owns_rFFTfwd_16_32f", "cvFindCornerSubPix", "icv_l9_ippiTranspose_32s_C4IR", "icv_l9_ippiNormRel_Inf_16s_C1R", "icv_m7_ownsInitDftPrimeFact_64f_64f", "Java_org_opencv_ml_RTrees_getActiveVarCount_10", "_Z28vector_vector_Point3f_to_MatRSt6vectorIS_IN2cv7Point3_IfEESaIS2_EESaIS4_EERNS0_3MatE", "icv_m7_ippiLUTPalette_8u_C3R", "icv_l9_owns_rFFTinv_32_scale_32f", "_ZN2cv6detail18GraphCutSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "_ZN2cv3hal9magnitudeEPKdS2_Pdi", "Java_org_opencv_objdetect_HOGDescriptor_detect_11", "icv_m7_ippiMean_StdDev_32f_C1MR", "ippicviSwapChannels_16u_C3C4R", "icv_l9_owns_cCcsRecombine_32f", "_ZN2cv15NAryMatIteratorC2EPPKNS_3MatEPS1_i", "_ZNSt15__exception_ptr13exception_ptrC2EPv", "icv_y8_ippiAddSquare_8u32f_C1IR", "_ZN2cv5instr10resetTraceEv", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C3R", "ippicviNormDiff_L1_16s_C3R", "icv_l9_ownscDFTinv_7_scale_32fc", "Java_org_opencv_features2d_Features2d_drawMatches2_10", "__powisf2", "icv_y8_ownsrDFTinv_6_scale_64f", "icv_l9_ownRow3Linear32f", "_ZNSt15__exception_ptr13exception_ptrC2EMS0_FvvE", "_ZN3tbb8internal19PrintRMLVersionInfoEPvPKc", "icv_m7_ownpi_NormL1Diff_32f_C1R", "icv_m7_ippiCopyConstBorder_16s_C3R", "icv_l9_ippiFilterBorder_32f_C3R", "icv_y8_owniTransposeWxH_32sC4", "icv_m7_owniCrossCorrNorm_Valid_32f_C1R", "icv_y8_ippiRGBToHLS_8u_C3R", "icv_l9_ippiSet_32f_C4MR", "_ZN3tbb18task_group_context22cancel_group_executionEv", "icv_y8_ownscDFTfwd_14_scale_64fc", "icv_y8_ippiResizeGetBufferSize_64f", "_ZN2cv6detail15createWeightMapERKNS_11_InputArrayEfRKNS_17_InputOutputArrayE", "Java_org_opencv_calib3d_StereoBM_getROI1_10", "icv_m7_ownpis_Sum_16u_C4", "icv_m7_owns_initTabDct_Dir_32f", "_ZNK2cv17FlannBasedMatcher5cloneEb", "icv_y8_ippiMinEigenValGetBufferSize_32f_C1R", "_ZN2cv4readERKNS_8FileNodeERff", "icv_y8_ippiMirror_32s_C1IR", "icv_m7_ownscDftFwd_Prime8_64fc", "_ZNK3tbb13improper_lock4whatEv", "_ZNK2cv11_InputArray4sizeEi", "icv_y8_ippsDFTInv_CToC_64fc", "icv_l9_ippiAddC_32f_C1R", "_ZNK2cv8FileNodeixERKNS_6StringE", "_Znam", "icv_y8_ippiSqrIntegral_8u32f64f_C1R", "ippicviMorphologyBorderInit_8u_C1R", "_ZN2cv5mergeEPKNS_3MatEmRKNS_12_OutputArrayE", "_ZN2cv9SparseMat6createEiPKii", "icv_y8_ownsrDFTinv_11_32f", "icv_y8_owns_rFFT_1_32f", "icv_l9_ippiAddSquare_8u32f_C1IMR", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithAlgorithm_10", "_ZN2cv8internal18WriteStructContextD1Ev", "icv_m7_ippiCopy_16s_AC4C3R", "_ZN2cv3ocl6KernelC2EPKcRKNS0_7ProgramE", "icv_m7_ippiSet_8u_C1R", "icv_m7_ownRow1Linear32f", "icv_m7_ippiResizeCubic_16s_C3R", "icv_y8_owniFilter_32f_C4R_v8u8_4NA", "ippicviNormDiff_L2_16u_C1MR", "_ZN2cv4sortERKNS_11_InputArrayERKNS_12_OutputArrayEi", "_ZThn672_N2cv9videostab17OnePassStabilizer5resetEv", "Java_org_opencv_core_Core_bitwise_1xor_10", "icv_l9_ownFilterColumnPipeline_16s_C1R_5x5_H9L9cn", "icv_l9_ownscDFTfwd_9_32fc", "_ZN2cv7fisheye15undistortPointsERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_S3_S3_", "ippicviTranspose_16u_C3R", "icv_l9_ownscDftFwd_Fact11_32fc", "icv_l9_ownResize1Linear16u", "icv_l9_ownscDFTinv_10_scale_32fc", "_ZN2cv8Stitcher6createENS0_4ModeEb", "icv_l9_ownsSub_16s", "icv_m7_ownFilterMaxRow05_8u_C3R", "_ZNK2cv17DescriptorMatcher8knnMatchERKNS_11_InputArrayES3_RSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "cvDet", "own_ipps_sPowx_Y8LAynn", "_ZN3tbb8internal6market12detach_arenaERNS0_5arenaE", "icv_m7_ippiFilterMaxBorder_8u_C4R", "_ZN2cv20calcOpticalFlowPyrLKERKNS_11_InputArrayES2_S2_RKNS_17_InputOutputArrayERKNS_12_OutputArrayES8_NS_5Size_IiEEiNS_12TermCriteriaEid", "cvWriteFrame", "icv_y8_ippiMean_16s_C1R", "Java_org_opencv_features2d_GFTTDetector_setK_10", "_ZN2cv3ocl7ProgramC2Ev", "icv_y8_ownFilterRowBorderPipeline_16u_C1R_3x3", "ippicviMorphologyBorderGetSize_8u_C3R", "icv_m7_ippiSum_16u_C3R", "icv_m7_owns_cFFTinv_4_64fc", "Java_org_opencv_features2d_Params_set_1filterByInertia_10", "cvGetFileNodeByName", "icv_m7_ippiNormDiff_Inf_16u_C3R", "cvCartToPolar", "icv_l9_gres_NormL2Diff_16u_C1R", "Java_org_opencv_core_Core_split_10", "Java_org_opencv_imgproc_Imgproc_bilateralFilter_11", "ippicviNorm_L1_16s_C4R", "Java_org_opencv_features2d_Feature2D_compute_10", "_ZN2cv17DescriptorMatcher5trainEv", "_ZN3tbb8internal26task_scheduler_observer_v37observeEb", "_ZN2cv3LDA3ldaERKNS_11_InputArrayES3_", "_ZN2cv3ipp14getIppFeaturesEv", "icv_m7_ippiMarkSpecklesGetBufferSize", "icv_y8_ippsMulC_64f_I", "icv_m7_ippiResizeCubicInit_32f", "Java_org_opencv_video_KalmanFilter_get_1measurementNoiseCov_10", "icv_y8_ippiResizeCubic_16u_C1R", "_ZN2cvgeERKNS_3MatEd", "icv_l9_ippiCopySubpixIntersect_32f_C1R", "_ZNK2cv5flann11IndexParams6getAllERSt6vectorINS_6StringESaIS3_EERS2_IiSaIiEES6_RS2_IdSaIdEE", "icv_m7_ownippiDilateBorder_8u_C3R", "_ZN2cv16FileNodeIteratormIEi", "icv_m7_ownippiFilterMaxBorderReplicate_8u_C3R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerDxNeg", "icv_l9_owniConvert_32s8u", "icv_y8_ownFilterBorder16s_16u_C4R", "icv_l9_ippiConvert_16s16u_C1Rs", "icv_m7_ownsGetSizeTabDftBase_32f", "icv_m7_ownsrDFTfwd_3_32f", "Java_org_opencv_core_Mat_n_1isContinuous", "icv_l9_ippiFilterMedianBorder_8u_C1R", "icv_l9_ippiNormRel_L2_16s_C1R", "icv_l9_ippiFilterBorder_8u_C1R", "_ZNK2cv3Mat11checkVectorEiib", "Java_org_opencv_ml_SVM_setC_10", "icv_m7_ippsDCTFwd_32f", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_5x5", "icv_y8_ownFilterMaxRow07_32f_C4R", "icv_y8_ippsZero_32s", "icv_y8_ownResize4Cubic16s", "icv_m7_ownscDftFwd_Prime16_64fc", "icv_m7_ownFilterMinRow09_32f_C4R", "cvWatershed", "Java_org_opencv_calib3d_Calib3d_decomposeEssentialMat_10", "icv_m7_ownscDFTfwd_3_scale_32fc", "icv_m7_ippiMean_StdDev_8u_C1R", "ippicviNorm_L1_16u_C3R", "Java_org_opencv_features2d_ORB_getEdgeThreshold_10", "icv_y8_ippiNorm_Inf_32f_C1R", "icv_m7_ippiTranspose_16u_C4IR", "Java_org_opencv_ml_DTrees_getMinSampleCount_10", "cvCalcArrHist", "icv_l9_ippiFilterGaussianBorder_32f_C1R", "icv_l9_ippiMean_StdDev_8u_C3CR", "icv_l9_ownippsCnvrtNear_32f16u_AVX", "_ZN2cv4cuda6StreamC2Ev", "_ZNSt13bad_exceptionD2Ev", "ippicviNorm_L2_16u_C4R", "icv_l9_ownFilterRowBorderPipeline_16s_C3R_3x3", "_ZN2cv3hal6min16uEPKtmS2_mPtmiiPv", "icv_m7_IPP_Dilate_C3_8u", "Java_org_opencv_core_Core_fastAtan2_10", "_ZN2cv3LDA15subspaceProjectERKNS_11_InputArrayES3_S3_", "_Unwind_DeleteException", "_ZN2cv20AgastFeatureDetector6createEibi", "icv_y8_ownippiMorphologyBorderReplicateInMemInit_32f_C4R", "ippicviSum_16u_C3R", "_ZN2cv3ogl6renderERKNS0_6ArraysERKNS_11_InputArrayEiNS_7Scalar_IdEE", "icv_y8_ippiSet_16s_C1MR", "__deregister_frame_info", "own_ipps_sSin_U8EPnnn", "icv_l9_ownscDftFwd_Prime4_32fc", "own_ipps_sSqrt_L9LAynn", "icv_y8_ippiNorm_L1_8u_C1R", "icv_y8_ippiAddSquare_32f_C1IMR", "icv_y8_ownsrDFTfwd_3_32f", "_ZN2cv3Mat8pop_backEm", "icv_m7_ippiConvert_16s32s_C1R", "ippicviMinEigenValGetBufferSize_8u32f_C1R", "icv_m7_ippiConvert_8s32f_C1R", "icv_l9_owniDenominator_C1R", "_ZN2cv3hal8split32sEPKiPPiii", "icv_m7_ippiAddSquare_32f_C1IR", "icv_l9_ownippiFilterMedianHoriz_16u_C1R_5x1", "_ZN2cv14seqInsertSliceEP5CvSeqiPKv", "icv_m7_ownErodeEllipseBorderReplicate_32f_C1R", "Java_org_opencv_ml_SVM_getDecisionFunction_10", "icv_y8_ippiNormDiff_Inf_32f_C4R", "icv_m7_ippiFilterScharrHorizMaskBorderGetBufferSize", "icv_m7_owniAutoCorr_C1R", "icv_y8_ownsInitTabDftDir_64f", "icv_l9_innerXYZToRGB_32f_C3R", "icv_y8_owniTransposeWxH_16uC1", "Java_org_opencv_core_Mat_n_1Mat__DDIDDDD", "_ZN2cv11FileStorageC1ERKNS_6StringEiS3_", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "icv_l9_owniSwapChannels_16u_C3R", "cvStartLoop", "_ZN2cv25fastNlMeansDenoisingMultiERKNS_11_InputArrayERKNS_12_OutputArrayEiiRKSt6vectorIfSaIfEEiii", "icv_y8_ippiMean_StdDev_16u_C1R", "icv_y8_ownps_Sub_16u_Sfs", "icv_m7_ownpi_Min_16u_C1R", "_ZN2cv4idctERKNS_11_InputArrayERKNS_12_OutputArrayEi", "Java_org_opencv_calib3d_Calib3d_decomposeProjectionMatrix_11", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_8u16s_C3R", "Java_org_opencv_ml_SVM_setGamma_10", "_ZNK2cv3ogl6Arrays4bindEv", "icv_l9_ippiMean_16s_C3R", "_ZN2cv3ocl13ProgramSourceC1ERKNS_6StringE", "icv_m7_ippiRGBToXYZ_16u_C3R", "Java_org_opencv_features2d_ORB_setFirstLevel_10", "icv_l9_ippiThreshold_GT_8u_C1R", "icv_y8_ownFilterMaxRow03_32f_C4R", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_10", "Java_org_opencv_features2d_KAZE_setThreshold_10", "ippicviNormDiff_Inf_8u_C3CMR", "icv_y8_ippiNorm_Inf_16u_C3R", "_ZNK2cv17CommandLineParser10getByIndexEibiPv", "icv_m7_owns_getSizesTwd_Large_32f", "icv_y8_owniConvert_8u32s_C1R", "_ZN2cv11matMulDerivERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_", "icv_y8_ippiMul_32f_C1R", "icv_m7_ownFilterColumnPipeline_32f_C1R_5x5", "Java_org_opencv_imgproc_CLAHE_getTilesGridSize_10", "icv_y8_ippiMirror_16u_C3R", "icv_m7_ownFilterColumnPipeline_16s_C1R_5x5_kerSobelNeg_W7cn", "cvInitUndistortMap", "_ZNK2cv16MatConstIterator4lposEv", "icv_y8_ippiMulC_32f_C1R", "_ZNK2cv13HOGDescriptor9detectROIERKNS_3MatERKSt6vectorINS_6Point_IiEESaIS6_EERS8_RS4_IdSaIdEEdNS_5Size_IiEESG_", "icv_m7_ownCalcBorderR4Cubic16s", "icv_l9_ownpi_CmpLE_8u_C1R", "icv_y8_ownFilterBorder16s_16u_C3R", "icv_l9_ownFilterRowBorderPipeline_32f_C3R_3x3", "icv_y8_ownFilterMaxRow15_8u_C4R", "icv_y8_ippiNorm_Inf_8u_C4R", "_ZN10__cxxabiv123__fundamental_type_infoD1Ev", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_10", "icv_y8_ippiMinMaxIndx_8u_C1MR", "Java_org_opencv_video_KalmanFilter_set_1errorCovPre_10", "ippicviMirror_32s_C1IR", "_ZN2cv31createRANSACPointSetRegistratorERKNS_3PtrINS_19PointSetRegistrator8CallbackEEEiddi", "ippicviNormRel_L1_8u_C1R", "icv_l9_ippsSqrt_64f_A50", "_ZN2cv9FormatterD1Ev", "Java_org_opencv_photo_CalibrateRobertson_getThreshold_10", "Java_org_opencv_video_FarnebackOpticalFlow_getWinSize_10", "icv_l9_ownsrDFTfwd_13_scale_32f", "icv_m7_ownCalcBorderR4Linear16s", "Java_org_opencv_photo_CalibrateDebevec_setLambda_10", "icv_l9_ippsDFTGetSize_R_64f", "icv_m7_ownpi_NormInf_16u_C4R", "icv_y8_ippiHistogramGetBufferSize", "icv_m7_ownscDFTinv_11_32fc", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "_ZN2cv3ocl9KernelArg8ConstantERKNS_3MatE", "_ZNK2cv12VideoCapture3getEi", "icv_m7_ownCalcBorderR1Linear64f", "icv_l9_ownpi_Sum_8u_C4R", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_G9E9cn", "icv_y8_ippiFilterGaussianBorder_8u_C3R", "_Z22vector_KeyPoint_to_MatRSt6vectorIN2cv8KeyPointESaIS1_EERNS0_3MatE", "icv_y8_ippiMean_StdDev_8u_C1MR", "_ZN2cv11mixChannelsERKNS_11_InputArrayERKNS_17_InputOutputArrayEPKim", "_ZN2cv6detail18SphericalWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RNS_4cuda6GpuMatES9_", "icv_m7_ippiDFTGetSize_C_32fc", "icv_m7_ownscDftInv_Prime8_32fc", "icv_l9_owniFilter32f_8u_C3R_g9e9_7", "icv_l9_ippiFilterSobelNegVertBorderGetBufferSize", "icv_m7_ippiConvert_16s8u_C1R", "icv_l9_ippiFilterMinBorderGetBufferSize", "icv_y8_cv_ownippiFilterMax_16s_Row", "ippicviAdd_16u_C1RSfs", "icv_l9_ownsrDFTfwd_7_scale_64f", "icv_l9_ippiNormRel_L1_16u_C1R", "icv_l9_IPP_Erode_C3_8u", "icv_y8_ownpis_Sum_16u_C3", "_ZN2cv5flann11IndexParamsD1Ev", "icv_l9_owns_rFFTfwd_32_scale_32f", "icv_y8_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_m7_ownCalcBorderR4Linear64f", "icv_l9_ownFilterRowBorderPipeline_32f_C1R", "cvSetIPLAllocators", "_ZN3tbb8internal34initialize_cache_aligned_allocatorEv", "Java_org_opencv_core_Core_mulSpectrums_11", "icv_y8_ippiResizeLinearInit_32f", "icv_l9_ownippiFilterMedianHoriz_8u_C1R_3x1", "icv_m7_ippiCopyReplicateBorder_32f_C1R", "icv_l9_ippiAdd_16u32f_C1IMR", "icv_l9_ownpi_Max_8u_C1R", "icv_m7_ownFilterMinRow04_8u_C4R", "_ZN2cv7directx3ocl32initializeContextFromD3D11DeviceEP12ID3D11Device", "Java_org_opencv_video_KalmanFilter_get_1transitionMatrix_10", "Java_org_opencv_features2d_Feature2D_write_10", "icv_y8_owniFilter2_16s_C1R", "_ZN2cv6detail7Blender7prepareENS_5Rect_IiEE", "Java_org_opencv_features2d_GFTTDetector_getK_10", "_ZN2cv21find4QuadCornerSubpixERKNS_11_InputArrayERKNS_17_InputOutputArrayENS_5Size_IiEE", "icv_l9_ippiMirror_32f_C4R", "icv_y8_ownpi_NormInfDiff_16u_C3R", "icv_y8_ippiResizeLinearInit_16u", "icv_y8_ownResize1Linear64f", "_ZNK2cv12_OutputArray6createEiiiibi", "icv_y8_owns_rFFTinv_8_64f", "icv_l9_ippiConvert_16u32s_C1R", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_getVocabulary_10", "cvCompleteSymm", "icv_m7_ipMirror135_32uC1R", "_ZN2cv21DetectionBasedTracker15InnerParametersC2Ev", "_ZN2cv6detail16MultiBandBlender4feedERKNS_11_InputArrayES4_NS_6Point_IiEE", "_ZN2cv13HOGDescriptor12readALTModelENS_6StringE", "icv_y8_ippiSqrDistanceNormGetBufferSize", "_ZN2cveoERKNS_7Scalar_IdEERKNS_3MatE", "icv_l9_owns_cFFTinv_16_scale_64fc", "icv_l9_ownpi_NormL1_8u_C3R", "icv_y8_ownippiMorphologyBorderReplicateInMemInit_8u_C4R", "icv_y8_ownpi_NormL2_8u_C3R", "icv_l9_owns_cRealRecombine_64f", "ippicvsDFTGetSize_R_64f", "ippicviNormDiff_Inf_16u_C1MR", "_ZN2cv6detail12DpSeamFinder7processERKNS_3MatES4_NS_6Point_IiEES6_RS2_S7_", "icv_m7_owns_cFftInv_Fact8_64fc", "icv_y8_ownResize1Linear32f", "icv_m7_ippiFilterSobelVertSecondBorder_32f_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R", "icv_m7_ownpi_NormL2Diff_32f_C4R", "icv_y8_ownFilterColumnPipeline_16s_C1R_3x3_W7cn", "_ZN2cv4cuda5EventC1ENS1_11CreateFlagsE", "_ZN2cv11RNG_MT19937C2Ev", "_ZNK2cv3ocl6Device24profilingTimerResolutionEv", "icv_m7_ippiNormDiff_Inf_8u_C1MR", "icv_m7_innerRGBToHLS_8u_C3R", "Java_org_opencv_imgproc_Imgproc_grabCut_10", "_ZNK2cv4cuda10DeviceInfo12isCompatibleEv", "icv_l9_ownsrDFTinv_15_32f", "cvPyrDown", "icv_m7_ippiMarkSpeckles_8u_C1IR", "_ZThn8_N2cv8superres15SuperResolution9nextFrameERKNS_12_OutputArrayE", "icv_y8_ippiThreshold_GTVal_16s_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_5x5_W7cn", "icv_l9_ownFilterMinRow06_8u_C3R", "Java_org_opencv_ml_KNearest_findNearest_10", "cvInitMatNDHeader", "icv_y8_ippiNormDiff_Inf_32f_C3R", "icv_y8_ippiCopy_16u_P3C3R", "Java_org_opencv_imgproc_Imgproc_spatialGradient_10", "cvApproxChains", "icv_l9_IPP_Erode_C4_32f", "icv_y8_ippiIntegral_8u32s_C1R", "_ZNK2cv9videostab18FastMarchingMethod5solveEiiii", "icv_l9_ippiNormDiff_Inf_16u_C4R", "icv_y8_ownscDftInv_Prime6_64fc", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingColoredMulti_10", "icv_m7_ownFilterMinRow03_8u_C3R", "_ZN2cv3Mat3eyeEiii", "cvSeqInsert", "Java_org_opencv_video_DualTVL1OpticalFlow_setTau_10", "Java_org_opencv_features2d_MSER_getMaxArea_10", "icv_l9_owns_initTabTwdBase_64f", "cvEllipse", "ippicviCompare_8u_C1R", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_10", "icv_y8_ippiColorToGray_32f_AC4C1R", "icv_l9_owns_cFftInv_Fact4_32fc", "icv_l9_ippiFilterBorderInit_32f", "_ZN2cv17FlannBasedMatcher15radiusMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "icv_l9_ownscDftInv_Fact13_64fc", "ippicviTranspose_32f_C1R", "icv_y8_ownDilateEllipseBorderReplicate_32f_C4R", "icv_l9_owns_cFFTfwd_16_scale_64fc", "icv_y8_ownsrDFTinv_9_scale_64f", "icv_m7_ippiNormDiff_Inf_8u_C3R", "_ZN2cv9Feature2DD2Ev", "Java_org_opencv_core_Core_batchDistance_11", "icv_y8_ippiDistanceTransform_5x5_8u32f_C1R", "cvCreateFileCapture", "Java_org_opencv_photo_CalibrateRobertson_setMaxIter_10", "icv_m7_ippiCrossCorrNorm_8u32f_C1R", "icv_m7_ippiNorm_L1_16u_C4R", "icv_m7_ownResize3Linear16u", "icv_y8_ownsAdd_16s_Bound", "icv_y8_ippsDCTFwd_32f", "icv_l9_ownMinEllipse_32f_C1", "icv_l9_ownNormDiff_L1_8u_C1MR_HSW", "icv_y8_owniTransposeWxH_32sC3", "icv_m7_ownpi_NormL1Diff_8u_C1R", "_ZN2cv11cornerScoreILi16EEEiPKhPKii", "_ZN10__cxxabiv115__forced_unwindD1Ev", "icv_y8_ippiNormRel_L1_16u_C1R", "cvDrawChessboardCorners", "icv_l9_owniFlipCopy_32s_C3", "_ZN2cvmiERKNS_3MatERKNS_7Scalar_IdEE", "cvGoodFeaturesToTrack", "icv_y8_ownFilterMinRow01_8u_C1R", "icv_y8_ownFilterRowBorderPipeline_32f_C3R_3x3_P8Y8cn", "_ZN2cv15isContourConvexERKNS_11_InputArrayE", "icv_l9_ippiAddWeighted_16u32f_C1IR", "icv_y8_ippiDFTGetSize_C_32fc", "icv_own_ipps_sError", "icv_l9_ippiNorm_L1_16u_C4R", "icv_m7_ownFilterMaxRow05_32f_C4R", "_ZN10__cxxabiv119__foreign_exceptionD1Ev", "icv_l9_ownscDFTfwd_6_32fc", "Java_org_opencv_videoio_VideoWriter_fourcc_10", "Java_org_opencv_photo_TonemapMantiuk_getSaturation_10", "icv_l9_ippiNormRel_L2_16u_C1R", "_ZN2cv6detail12AffineWarper20getRTfromHomogeneousERKNS_11_InputArrayERNS_3MatES6_", "icv_m7_owns_cFftInv_Large_32fc", "Java_org_opencv_ml_ANN_1MLP_setRpropDWMinus_10", "_ZN3tbb8internal8governor18print_version_infoEv", "ippicviMirror_32f_C1IR", "icv_m7_ippiNorm_L2_32f_C4R", "icv_l9_owns_cFFTfwd_8_scale_32fc", "icv_y8_ownscDFTinv_13_64fc", "icv_m7_ippiCopyReplicateBorder_16s_C3IR", "_ZNK2cv13HOGDescriptor6detectERKNS_3MatERSt6vectorINS_6Point_IiEESaIS6_EEdNS_5Size_IiEESB_RKS8_", "icv_m7_ippiFilterBorder_8u_C1R", "icv_m7_ippsConvert_32f16u_Sfs", "icv_m7_ownFilterMaxRow11_32f_C4R", "icv_l9_ownippiFilterMedianVert_8u_1x5", "_ZN2cv16ParallelLoopBodyD2Ev", "_ZNK2cv2ml9StatModel9calcErrorERKNS_3PtrINS0_9TrainDataEEEbRKNS_12_OutputArrayE", "icv_m7_ippiCopyReplicateBorder_32s_C4R", "icv_l9_ownsMul_16s_1Sfs", "Java_org_opencv_calib3d_Calib3d_estimateAffinePartial2D_11", "Java_org_opencv_ml_ANN_1MLP_create_10", "_ZN2cv8StereoBM6createEii", "icv_y8_owniFilterScharrHorizMaskBorder2_8u16s_C1R", "icv_m7_ippsSortAscend_8u_I", "icv_l9_owniSqrDistanceNormGetSize", "icv_l9_ownpi_NormInfDiff_16u_C1R", "Java_org_opencv_calib3d_Calib3d_stereoRectify_11", "Java_org_opencv_calib3d_StereoSGBM_getUniquenessRatio_10", "_ZN2cv7seqPushEP5CvSeqPKv", "ippicviCopySubpixIntersect_8u32f_C1R", "icv_m7_ownFilterRowBorderPipeline_16s_C3R_X_W7cn", "icv_m7_owniShiftClipRectZeroTail_16u32f_C1R", "ippicvsDFTGetSize_C_64fc", "_ZNK2cv7MatExpr3mulERKNS_3MatEd", "Java_org_opencv_photo_Photo_createTonemapDurand_11", "icv_l9_Dilate_32f_C1S", "_ZN2cv13HOGDescriptor4loadERKNS_6StringES3_", "ippicviFilterMinBorder_8u_C1R", "cvGraphRemoveVtx", "cvStartReadSeq", "_ZN2cv3ogl6Buffer6createEiiiNS1_6TargetEb", "_ZNK2cv3ogl6Buffer5cloneENS1_6TargetEb", "cvSetImageROI", "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", "Java_org_opencv_ml_TrainData_getTrainSamples_10", "own_ipps_sExp_E7LAynn", "icv_m7_owniConvert_8u8s_ccode", "icv_l9_ippiMulPack_32f_C1IR", "icv_l9_ippiMin_16u_C1R", "_ZN2cv6detail16MultiBandBlenderC2Eiii", "_ZN10__cxxabiv119__foreign_exceptionD2Ev", "icv_y8_ownsrDFTinv_5_scale_32f", "icv_m7_ownColCubic16u", "_Unwind_ForcedUnwind", "icv_y8_ownpi_NormL1Diff_8u_C4R", "icv_l9_ownpi_NormInf_16s_C3R", "Java_org_opencv_imgproc_Imgproc_filter2D_12", "Java_org_opencv_ml_EM_getMeans_10", "icv_l9_owniFilter32f_16u_C1R_g9e9_3", "_ZN2cv3LDAC2Ei", "_ZN2cv21DetectionBasedTracker15InnerParametersC1Ev", "Java_org_opencv_ml_Boost_setWeightTrimRate_10", "_ZNK2cv11_InputArray12getOGlBufferEv", "ippicviResizeLinear_64f_C1R", "icv_m7_ownscDftFwd_PrimeFact_64fc", "icv_l9_ippiDistanceTransform_3x3_8u_C1R", "_ZN2cv3Mat5zerosENS_5Size_IiEEi", "ippicviSub_32f_C1R", "_ZN2cv5MatOpD2Ev", "_ZN2cv13matchTemplateERKNS_11_InputArrayES2_RKNS_12_OutputArrayEiS2_", "icv_m7_ownFilterMaxRow05_32f_C3R", "icv_m7_ownsInitTabDftBase_64f", "icv_l9_ownsFFTGetBufSize_C_64fc", "icv_y8_ownFilterMaxRow03_8u_C3R", "icv_m7_ippiDistanceTransform_5x5_8u32f_C1R", "_ZN2cv7MatExprC2ERKNS_3MatE", "Java_org_opencv_features2d_Params_set_1filterByConvexity_10", "_ZNK2cv4cuda10DeviceInfo18maxTexture1DLinearEv", "icv_m7_ownippiFilterMaxBorderReplicate_32f_C3R", "icv_y8_ippsSqrt_32f", "icv_y8_owniFilter_32f_C1R_v8u8_2", "_ZN2cv14setWindowTitleERKNS_6StringES2_", "_ZN2cv8Subdiv2D13setEdgePointsEiii", "icv_l9_ownpi_NormInfRel_16u_C1R", "icv_y8_ippiNorm_L1_32f_C1MR", "_ZN2cv3ogl20convertToGLTexture2DERKNS_11_InputArrayERNS0_9Texture2DE", "_ZN2cv17CommandLineParser4Impl11sort_paramsEv", "icv_l9_ownMean_StdDev_8u_C1MR_HSW", "icv_m7_ownFilterBorder32f_16u_C1R", "icv_m7_ownsrDFTinv_12_64f", "icv_l9_owns_rFFT_1_scale_32f", "icv_y8_owns_initTabBitRevNorm", "_Z17vector_int_to_MatRSt6vectorIiSaIiEERN2cv3MatE", "icv_m7_ippsDFTInv_PackToR_64f", "_ZN2cv9videostab25ensureInclusionConstraintERKNS_3MatENS_5Size_IiEEf", "icv_l9_ippiSubC_32f_C1R", "icv_m7_ippsDFTFwd_RToPack_64f", "icv_y8_ownippiMorphologyBorderReplicateInMemGetSize_32f_C1R", "icv_l9_ownMinEigenVal_16s32f_C1R", "icv_l9_owniTransposeWxH_32sC3", "icv_l9_ownscDFTfwd_15_scale_32fc", "_ZN2cv4cuda27fastNlMeansDenoisingColoredERKNS_11_InputArrayERKNS_12_OutputArrayEffiiRNS0_6StreamE", "icv_l9_ownscDFTinv_14_scale_64fc", "icv_l9_ownsAdd_8u", "icv_l9_ownMean_8u_C3MR_HSW", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_3x3", "Java_org_opencv_features2d_FlannBasedMatcher_delete", "icv_y8_ownFilterMaxColumn05_8u_C1R", "_ZN2cv3hal6add32sEPKimS2_mPimiiPv", "_ZN2cv3LDA19subspaceReconstructERKNS_11_InputArrayES3_S3_", "icv_y8_ippiMean_8u_C4R", "icv_l9_ownsrDFTinv_5_32f", "icv_y8_ippiConvert_8u16u_C1R", "cvPrevTreeNode", "icv_y8_ownRow4Cubic32f", "icv_l9_ippiNormDiff_L1_16s_C1R", "icv_y8_cv_ownippiFilterMin_32f_Col", "icv_l9_ownFilter32f_16s_C4R_g9e9", "icv_l9_owniFilter32f_16u_C4R_g9e9_4", "icv_l9_ownNorm_Inf_8u_C1MR_HSW", "_ZNK2cv3ocl6Device16maxWorkItemSizesEPm", "Java_org_opencv_imgproc_Imgproc_sepFilter2D_12", "cvSeqSort", "icv_l9_ippiNormDiff_L2_32f_C1MR", "_ZNK2cv17DescriptorMatcher20DescriptorCollection4sizeEv", "icv_m7_ownpi_CmpEQ_8u_C1R", "icv_l9_ippsSqrt_32f_A21", "ippicviMirror_16s_C4R", "icv_m7_ippiCopy_32s_C4MR", "icv_m7_ippiNorm_L2_32f_C3R", "ippicviSub_8u_C1RSfs", "icv_y8_ippiNorm_L2_16u_C1MR", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerAvr", "Java_org_opencv_video_BackgroundSubtractorKNN_setHistory_10", "icv_l9_ippiCopy_16s_AC4C3R", "icv_y8_ownsMul_64fc_I", "_ZN2cv15undistortPointsERKNS_11_InputArrayERKNS_12_OutputArrayES2_S2_S2_S2_", "icv_y8_ippiConvert_32s32f_C1R", "ippicviFilterBorder_32f_C1R", "_ZNK2cv3ocl7Program6sourceEv", "icv_l9_ippiCopyReplicateBorder_32f_C3R", "icv_m7_ownpi_NormL2_32f_C1R", "_ZN3tbb8internal28affinity_partitioner_base_v36resizeEj", "icv_m7_ownscDftFwd_Fact11_64fc", "Java_org_opencv_core_Core_setIdentity_11", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale3_10", "icv_l9_ownFilterMinRow13_32f_C1R", "icv_l9_ippiFilterColumnPipelineGetBufferSize_16u_C3R", "icv_l9_ownsrDFTfwd_14_64f", "Java_org_opencv_imgproc_Imgproc_pyrMeanShiftFiltering_11", "icv_l9_ownFilterMinColumn03_8u_C1R", "icv_m7_owns_rFFTfwd_16_scale_64f", "icv_l9_ownsrDFTfwd_15_scale_32f", "icv_l9_ownscDftFwd_Prime2_64fc", "icv_l9_ippiResizeLinear_16u_C4R", "icv_m7_myRGBToGray_32f_C3C1R", "ippicviFilterSobelHorizBorder_8u16s_C1R", "icv_l9_ippiNormDiff_L2_8u_C3R", "icv_l9_ownsrDFTfwd_6_scale_64f", "cvCalcProbDensity", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EEid", "icv_l9_ownFilterMaxRow05_32f_C3R", "icv_y8_ownFilterMaxRow07_8u_C3R", "cvSolveCubic", "icv_m7_ippiMinEigenVal_8u32f_C1R", "icv_m7_ippiFilterMaxBorder_32f_C1R", "icv_y8_IsOverlapedROI", "_ZN3tbb8internal8governor13one_time_initEv", "ippicviResizeGetSrcOffset_64f", "icv_l9_gres_NormL2Rel_16s_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_X", "icv_m7_owniConvert_16u8s_ccode", "icv_l9_ownMean_StdDev_8u_C3CR_HSW", "icv_y8_ippsMaxEvery_16u", "icv_m7_ippsSet_32f", "icv_m7_owns_rFFTinv_4_64f", "icv_y8_ippiNormDiff_Inf_16s_C1R", "icv_l9_ippiCompare_8u_C1R", "icv_y8_ownscDftFwd_Fact13_32fc", "icv_m7_ownFilterColumnPipeline_32f_C1R_3x3_kerDx", "icv_y8_ippsSortAscend_8u_I", "Java_org_opencv_imgproc_Imgproc_Laplacian_10", "icv_l9_ippiNorm_L1_32f_C3R", "icv_l9_ippsMul_32fc", "icv_l9_ownippiFilterMaxGetBufferSize_32f_C3R", "_ZN2cv6detail23SphericalPortraitWarper15detectResultRoiENS_5Size_IiEERNS_6Point_IiEES6_", "icv_m7_ownippiFilterMaxBorderReplicate_32f_C4R", "_ZN2cv3hal11Cholesky32fEPfmiS1_mi", "icv_y8_ownscDFTinv_3_scale_64fc", "icv_l9_ownscDftFwd_Prime7_32fc", "cvCreateVideoWriter", "_ZNK2cv8Subdiv2D9isRightOfENS_6Point_IfEEi", "icv_l9_ownippiMorphologyBorderReplicateInMemGetSize_8u_C3R", "icv_m7_ownsrDFTfwd_13_64f", "icv_l9_ippiNormRel_L1_16u_C1MR", "_ZN2cv11RNG_MT19937C2Ej", "icv_l9_ippsZero_32f", "icv_l9_ownsAddC_16s_I_NegSfs", "_ZNK2cv4cuda10DeviceInfo11l2CacheSizeEv", "icv_l9_ippsDFTInit_C_32fc", "icv_l9_ippsSortAscend_32f_I", "cvHoughLines2", "_ZNK2cv4cuda6GpuMat9convertToERKNS_12_OutputArrayEiRNS0_6StreamE", "icv_y8_ippiNormDiff_Inf_8u_C4R", "_ZN2cv3ocl6DeviceD2Ev", "_ZNK2cv12_OutputArray14createSameSizeERKNS_11_InputArrayEi", "icv_y8_ownFilterMaxRow02_32f_C3R", "icv_l9_ownsMinEvery_64f", "Java_org_opencv_ml_SVMSGD_getInitialStepSize_10", "icv_y8_ippiSum_8u_C3R", "_ZN2cv16estimateAffine3DERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_dd", "icv_m7_ownscDFTfwd_15_scale_64fc", "icv_l9_myRGBToXYZ_16u_C3R", "icv_l9_ownippiFilterMedianHoriz_16u_C1R_3x1", "Java_org_opencv_video_BackgroundSubtractorKNN_setNSamples_10", "icv_m7_ippiMinEigenValGetBufferSize_32f_C1R", "icv_y8_owniFilter_32f_C3R_v8u8_5NA", "_ZN2cv11getTextSizeERKNS_6StringEidiPi", "Java_org_opencv_features2d_BOWTrainer_cluster_11", "icv_y8_gres_NormL1_16u_C4R", "ippicviThreshold_GTVal_8u_C1R", "icv_m7_ownsAdd_8u", "icv_l9_ownpi_NormInf_8u_C3R", "Java_org_opencv_ml_KNearest_create_10", "icv_y8_ippiTranspose_8u_C4R", "Java_org_opencv_ml_TrainData_getDefaultSubstValues_10", "icv_l9_owniFilter32f_16s_C1R_g9e9_0", "_ZNK2cv4cuda10DeviceInfo4nameEv", "icv_m7_ippiThreshold_8u_C1R", "Java_org_opencv_core_Mat_n_1cross", "_ZN2cv5erodeERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE", "_ZN2cv2ml2EM6createEv", "icv_y8_ippiCopy_16s_C1MR", "_ZNK2cv4cuda10DeviceInfo17maxSurfaceCubemapEv", "icv_y8_owniConvert_16s16u_ccode", "icv_l9_ownsrDftInv_Conv_64f", "_ZN3tbb8internal18concurrent_monitorD1Ev", "Java_org_opencv_core_Mat_n_1release", "Java_org_opencv_features2d_Params_set_1minCircularity_10", "icv_l9_ownscDftInv_Fact5_32fc", "_ZN2cv9videostab20NullWobbleSuppressor8suppressEiRKNS_3MatERS2_", "icv_l9_ippiMirror_32s_C1R", "icv_m7_ownFilterBorder32f_16s_C3R", "cvCreateMatHeader", "icv_m7_ippsMagnitude_64f", "icv_y8_ippiMul_16u_C1RSfs", "cvCamShift", "_ZN3tbb18task_group_contextD1Ev", "own_ipps_sLn_E7HAynn", "Java_org_opencv_video_DenseOpticalFlow_calc_10", "icv_m7_ippsDFTGetSize_C_32fc", "Java_org_opencv_imgproc_Imgproc_boxFilter_11", "icv_l9_ownErodeEllipseBorderReplicate_32f_C1R", "_ZN2cv4MSER6createEiiiddiddi", "Java_org_opencv_core_TickMeter_getTimeSec_10", "icv_m7_ownFilterMinRow01_8u_C3R", "icv_y8_ownsrDFTinv_15_32f", "icv_l9_owns_cFftFwd_Large_32fc", "_ZN3tbb8internal13handle_perrorEiPKc", "icv_m7_ippiConvert_32f16u_C1RSfs", "ippicviNorm_Inf_16u_C4R", "Java_org_opencv_features2d_FastFeatureDetector_create_10", "_ZN2cv3ocl7Context9setUseSVMEb", "icv_m7_ippiFilterMaxBorder_32f_C3R", "_ZN2cv15spatialGradientERKNS_11_InputArrayERKNS_12_OutputArrayES5_ii", "icv_y8_ownscDft_Conv_32fc", "Java_org_opencv_video_BackgroundSubtractorMOG2_setBackgroundRatio_10", "icv_l9_ippiMean_16u_C3R", "icv_y8_ippiNormDiff_L2_32f_C1MR", "icv_y8_ownscDFTfwd_10_scale_32fc", "icv_l9_ownsMulC_16s_PosSfs", "icv_y8_owniTranspose32s_C3R_core2", "icv_y8_ippiNormDiff_L1_32f_C3CMR", "icv_m7_owns_sDctInv_Fft_32f", "icv_l9_ippiCopy_32f_C3R", "icv_l9_ippiSet_16u_C1R", "icv_y8_ippiCopy_32s_C4MR", "icv_y8_ippiMirror_16s_C4R", "_ZN2cv9videostab14calcBlurrinessERKNS_3MatE", "Java_org_opencv_imgproc_Imgproc_HoughCircles_11", "Java_org_opencv_core_Core_multiply_13", "icv_l9_ippiConvert_32f8u_C1R", "_ZN2cv23calibrationMatrixValuesERKNS_11_InputArrayENS_5Size_IiEEddRdS5_S5_RNS_6Point_IdEES5_", "Java_org_opencv_imgproc_Subdiv2D_edgeOrg_10", "Java_org_opencv_objdetect_HOGDescriptor_get_1svmDetector_10", "icv_l9_ownsrDftFwd_Conv_64f", "ippicvSetCpuFeatures", "_ZNK2cv12_OutputArray6createEiPKiiibi", "_ZN2cv8superres13convertToTypeERKNS_4cuda6GpuMatEiRS2_S5_", "icv_l9_ownsrDFTinv_10_scale_64f", "icv_l9_ownpi_NormL2_32f_C3R", "icv_m7_ippsPolarToCart_32f", "Java_org_opencv_features2d_AKAZE_setNOctaves_10", "Java_org_opencv_calib3d_StereoSGBM_create_10", "_ZN2cv2ml9TrainDataD2Ev", "_ZNK2cv3ocl6Kernel29preferedWorkGroupSizeMultipleEv", "icv_m7_ippiThreshold_GTVal_8u_C1IR", "icv_l9_ownsrDFTfwd_9_scale_32f", "_ZN2cv3ocl13attachContextERKNS_6StringEPvS4_S4_", "Java_org_opencv_photo_Photo_createTonemapMantiuk_11", "icv_y8_ownFilterMinRow05_8u_C4R", "icv_m7_ownCalcBorderR3Cubic32f", "Java_org_opencv_core_Mat_nGetB", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getMaxLevel_10", "_ZN2cv17startWindowThreadEv", "icv_y8_owns_getSizeTwd_Large_64f", "icv_l9_ownsrDFTfwd_5_scale_64f", "icv_m7_ippiCopyReplicateBorder_32s_C3IR", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "ippicviNorm_Inf_16s_C3R", "icv_l9_ownFilterMaxRow11_32f_C3R", "_Z20vector_double_to_MatRSt6vectorIdSaIdEERN2cv3MatE", "cvAbsDiffS", "cvGetAffineTransform", "icv_l9_owns_sDctFwd_Dir_32f", "_ZN2cv9videostab28completeFrameAccordingToFlowERKNS_3MatES3_S3_S3_S3_fRS1_S4_", "_ZN3tbb8internal17generic_scheduler19spawn_root_and_waitERNS_4taskERPS2_", "Java_org_opencv_objdetect_HOGDescriptor_HOGDescriptor_10", "icv_y8_owniFilterSobelNegVertBorder2_32f_C1R", "Java_org_opencv_ml_EM_setCovarianceMatrixType_10", "icv_l9_ippiCopy_8u_C1MR", "icv_m7_ownscDFTfwd_3_32fc", "_ZN3tbb8internal17generic_schedulerC1ERNS0_6marketE", "icv_l9_ownscDftFwd_Prime5_64fc", "icv_y8_ippiCopyConstBorder_32f_C1R", "_ZN2cv14findHomographyERKNS_11_InputArrayES2_idRKNS_12_OutputArrayEid", "_ZN2cv12KalmanFilter4initEiiii", "_ZN2cv6dilateERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_6Point_IiEEiiRKNS_7Scalar_IdEE", "ippicviNormDiff_L2_32f_C1R", "icv_m7_ippiMinMaxIndx_8u_C1MR", "icv_m7_ippiResizeGetSize_32f", "icv_y8_owniFilter_32f_C3R_v8u8_1", "icv_l9_ownFilterRowBorderPipeline_16s_C1R", "icv_l9_ownsInitTabDftBase_64f", "icv_y8_owniFilter_32f_C4R_v8u8_4", "icv_l9_ownsrDFTfwd_10_32f", "icv_y8_ownsSet_16u", "icv_l9_owns_cFFTfwd_8_64fc", "_ZN2cv3hal5div8sEPKamS2_mPamiiPv", "icv_m7_ippsSet_16s", "icv_m7_ownsrDFTfwd_3_scale_32f", "icv_l9_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "_ZN3tbb8internal17generic_scheduler26cleanup_local_context_listEv", "_ZNK2cv22SimpleBlobDetectorImpl5writeERNS_11FileStorageE", "icv_m7_ownscDFTfwd_13_32fc", "_ZN2cv16getTickFrequencyEv", "icv_l9_ippiNormRel_L1_32f_C1MR", "Java_org_opencv_calib3d_Calib3d_calibrateCamera_10", "_ZNK2cv3ocl12PlatformInfo6vendorEv", "icv_l9_ippiMean_StdDev_16u_C3CR", "icv_l9_owns_sDctInv_Dir_32f", "icv_l9_ownippiDilateBorder_32f_C3R", "icv_l9_ownscDFTinv_6_scale_64fc", "icv_m7_ippiSwapChannels_8u_C3R", "icv_m7_ownFilterColumnPipeline_16s_C1R_5x5_kerDx2_W7cn", "_ZN2cv16FileNodeIteratorC2Ev", "icv_l9_ippiCopy_8u_C4MR", "_ZNK2cv3ocl6Device24preferredVectorWidthLongEv", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_11", "_ZN2cv15calcBackProjectERKNS_11_InputArrayERKSt6vectorIiSaIiEES2_RKNS_12_OutputArrayERKS3_IfSaIfEEd", "_ZN2cv9BFMatcher12knnMatchImplERKNS_11_InputArrayERSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEiS3_b", "icv_m7_ippiResizeGetSize_8u", "icv_l9_ippiConvert_32s16u_C1RSfs", "icv_l9_ippiFilterLowpassGetBufferSize_32f_C1R", "icv_m7_ownsMul_8u_Bound", "icv_y8_owns_cFFTinv_8_64fc", "icv_y8_ippiCopy_16u_AC4C3R", "_ZN2cv11FileStorageD2Ev", "icv_m7_owns_cFFTinv_8_64fc", "_ZN6CvTypeD2Ev", "_ZN2cv8superres28createOptFlow_Farneback_CUDAEv", "icv_l9_ownNormDiff_L2_16u_C1MR_HSW", "_ZN2cv3ogl6Buffer9mapDeviceEv", "icv_l9_ippiNormDiff_Inf_8u_C3CMR", "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", "icv_y8_ippiNormRel_Inf_32f_C1R", "icv_m7_ownResize1Linear64f", "icv_m7_ippiSet_16u_C3MR", "icv_m7_ownsGetSizeDftPrimeFact_64f_64f", "ippicviTranspose_16s_C4R", "icv_y8_ownRow1Linear32f", "icv_m7_ippiNormDiff_Inf_32f_C1MR", "icv_m7_ippiMorphologyBorderGetSize_32f_C4R", "icv_l9_ownpi_NormL1_16s_C1R", "icv_m7_ippiThreshold_LTVal_8u_C1R", "icv_l9_ownpi_NormL2_8u_C1R", "icv_m7_ippiNormRel_L2_8u_C1MR", "_ZN2cv12VideoCapture8retrieveERKNS_12_OutputArrayEi", "icv_l9_owniFilter32f_16s_C4R_g9e9_8", "Java_org_opencv_features2d_Params_set_1maxConvexity_10", "_ZN2cv10BOWTrainerD1Ev", "Java_org_opencv_objdetect_HOGDescriptor_get_1blockStride_10", "icv_m7_ippiMirror_32f_C4IR", "_Unwind_RaiseException", "icv_m7_ownscDFTfwd_11_64fc", "_ZN2cv29createBackgroundSubtractorKNNEidb", "icv_y8_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_W7cn", "icv_l9_ippiColorToGray_32f_AC4C1R", "__gttf2", "cvInitMatHeader", "icv_y8_ippiMin_8u_C1R", "Java_org_opencv_calib3d_StereoSGBM_getP1_10", "icv_y8_ippiFilterLaplacianBorder_8u16s_C1R", "icv_m7_ippiDilateBorder_8u_C3R", "icv_y8_ownFilterMaxRow01_8u_C3R", "icv_l9_ownscDftFwd_Fact4_64fc", "Java_org_opencv_video_BackgroundSubtractorKNN_setShadowValue_10", "Java_org_opencv_calib3d_StereoBM_getPreFilterSize_10", "icv_l9_ippiMirror_16u_C1R", "cvInitNArrayIterator", "Java_org_opencv_objdetect_HOGDescriptor_get_1gammaCorrection_10", "_ZN2cv11stylizationERKNS_11_InputArrayERKNS_12_OutputArrayEff", "icv_l9_ippiHistogramUniformInit", "Java_org_opencv_core_Core_divide_14", "icv_l9_ownscDftFwd_PrimeFact_64fc", "icv_m7_ownippiErodeBorder_32f_C1R", "Java_org_opencv_video_KalmanFilter_set_1processNoiseCov_10", "icv_y8_owns_cFFTinv_4_32fc", "icv_y8_ownFilterMaxRow03_8u_C1R", "_ZN2cv3ocl14vecopTypeToStrEi", "_ZN3tbb8internal17generic_scheduler7enqueueERNS_4taskEPv", "_ZN2cv6detail18PairwiseSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_y8_ownColLinear32f", "icv_l9_ownRow1Cubic32f", "icv_m7_ownsGetSizeTabDftDir_32f", "icv_m7_ownFilterMinRow04_8u_C1R", "icv_l9_owniFilter_32f_C3R_g9e9_2", "_ZN2cv9ExceptionD2Ev", "icv_m7_ippiResizeGetBufferSize_64f", "icv_y8_owns_sDctInv_Fft_32f", "icv_y8_ippiSum_16u_C4R", "cvDecodeImage", "icv_y8_ownscDFTinv_13_scale_64fc", "_ZN2cv3hal6min32fEPKfmS2_mPfmiiPv", "icv_m7_ownpi_NormInfDiff_16s_C1R", "icv_m7_ippiSwapChannels_16u_C3C4R", "_ZN2cv9getRecallERKSt6vectorINS_6Point_IfEESaIS2_EEf", "icv_m7_ownsrDFTinv_15_64f", "icv_y8_ippiMarkSpecklesGetBufferSize", "_ZNK2cv3Mat7reshapeEiiPKi", "_ZNK2cv14DefaultDeleterI11CvSparseMatEclEPS1_", "Java_org_opencv_ml_TrainData_getTestSampleIdx_10", "_ZN3tbb10interface78internal15task_arena_base18internal_terminateEv", "icv_l9_ippiNorm_L1_32f_C1MR", "icv_l9_ownpi_And_8u_C1R", "icv_m7_ownsrDFTinv_3_scale_32f", "icv_l9_owniSqrDistanceNorm_FullSame_32f_C1R", "cvAvg", "ippicviConvert_32f32s_C1RSfs", "icv_m7_owns_cFFT_1_scale_32fc", "icv_y8_ownsrDftInv_PrimeFact_32f", "icv_l9_ownFilterColumnPipeline_16s8u_C1R_X", "icv_y8_ownsAdd_16s_NegSfs", "_ZN2cv9SparseMat5eraseEiiPm", "ippicviFilterScharrHorizMaskBorder_16s_C1R", "icv_l9_owns_cFFT_1_scale_32fc", "icv_l9_ippiAdd_32f_C1R", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale2_10", "_ZN2cv9videostab17OnePassStabilizer14estimateMotionEv", "_ZNK2cv8FileNodeixEPKc", "Java_org_opencv_videoio_VideoCapture_grab_10", "_ZNK2cv3ocl6Device12imageSupportEv", "icv_l9_ownFilterMaxRow03_8u_C1R", "Java_org_opencv_features2d_AKAZE_getNOctaveLayers_10", "icv_l9_ownFilterColumnPipeline_16s_C1R_3x3_kerLaplacian_W7cn", "icv_l9_ippiMirror_32s_C4IR", "icv_y8_ippiMean_8u_C1R", "icv_l9_ownpi_Sum_16s_C1R", "icv_l9_ownscDftFwd_Prime3_32fc", "Java_org_opencv_core_Core_gemm_11", "_ZN2cv3PCAC2ERKNS_11_InputArrayES3_id", "Java_org_opencv_imgproc_Imgproc_cornerMinEigenVal_10", "cvSetRemove", "_ZN2cv10HoughLinesERKNS_11_InputArrayERKNS_12_OutputArrayEddidddd", "Java_org_opencv_core_Core_convertFp16_10", "_ZN2cv4cuda5Event11elapsedTimeERKS1_S3_", "icv_m7_ippiFilterScharrHorizMaskBorder_16s_C1R", "icv_l9_ippiMirror_32f_C1IR", "icv_m7_owniConvert_16u16s_ccode", "_ZN2cv2ml6RTrees6createEv", "icv_y8_ippiXYZToRGB_32f_C3R", "_ZNK2cv13HOGDescriptor6copyToERS0_", "icv_m7_ownsInitTabDftBase_32f", "_ZN2cv3hal6max16sEPKsmS2_mPsmiiPv", "_ZN2cv3hal5div8uEPKhmS2_mPhmiiPv", "icv_y8_owns_cFFTfwd_4_64fc", "icv_m7_ippiAddProduct_8u32f_C1IR", "icv_l9_owniFFTFwd_RToPack_32f_C1R", "icv_y8_ippiMin_32f_C1R", "Java_org_opencv_imgproc_Imgproc_createCLAHE_11", "icv_y8_ippiFilterLowpassGetBufferSize_32f_C1R", "icv_l9_ownResize3Linear64f", "_ZN9CvLevMarq6updateERPK5CvMatRPS0_S5_", "cvComputeCorrespondEpilines", "Java_org_opencv_features2d_AKAZE_setDiffusivity_10", "icv_l9_ownFilterRowBorderPipeline_16u_C1R", "ippicviMorphologyBorderGetSize_8u_C4R", "icv_y8_ippiMinMaxIndx_16u_C1MR", "ippicviMarkSpeckles_16s_C1IR", "icv_m7_ippiHSVToRGB_8u_C3R", "icv_l9_ownsrDFTinv_11_64f", "icv_l9_ippiResizeCubic_16u_C1R", "_ZN2cv3ocl6KernelD1Ev", "icv_l9_ippiNorm_L1_16u_C3R", "icv_m7_ippiMirror_8u_C4R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "icv_y8_ownFilterMinRow05_8u_C1R", "Java_org_opencv_videoio_VideoCapture_VideoCapture_12", "_ZNK2cv9Feature2D14descriptorTypeEv", "_ZN3tbb8internal13observer_list6insertEPNS0_14observer_proxyE", "own_ipps_sInvSqrt_E7EPnnn", "icv_m7_ippiThreshold_LTVal_16s_C1R", "_ZN2cv15NAryMatIterator4initEPPKNS_3MatEPS1_PPhi", "Java_org_opencv_core_Core_add_15", "_ZN2cv17CascadeClassifierC2Ev", "Java_org_opencv_video_FarnebackOpticalFlow_setNumIters_10", "icv_y8_owns_initTabTwdBase_32f", "_ZN2cv19goodFeaturesToTrackERKNS_11_InputArrayERKNS_12_OutputArrayEiddS2_ibd", "_ZN2cv7directx20getTypeFromD3DFORMATEi", "icv_y8_owniCopy_32s_C4MR", "icv_m7_cv_ownMorphologyBorderConstInMemInit", "icv_m7_ippiAbsDiff_32f_C1R", "_ZN2cv3ocl7Image2DC2ERKS1_", "_ZN2cv14filterSpecklesERKNS_17_InputOutputArrayEdidS2_", "icv_y8_ippiConvert_32f8s_C1RSfs", "icv_m7_ownsrDftFwd_PrimeFact_64f", "icv_l9_ownErodeEllipseBorderReplicate_8u_C4R", "icv_m7_ownRow3Cubic32f", "icv_l9_ippsZero_64f", "Java_org_opencv_imgproc_Imgproc_minAreaRect_10", "cvDotProduct", "icv_l9_owniFilter_32f_C1R_g9e9_7", "icv_l9_ownps_Mul_16u_Sfs", "icv_l9_ownFilterBorder16s_16u_C1R", "icv_l9_ippsFFTGetSize_C_32fc", "_ZN9CvLevMarqD2Ev", "icv_m7_ippsDFTInv_CToC_32fc", "icv_l9_ownFilterMaxRow05_32f_C1R", "_ZN2cv18SimpleBlobDetector6ParamsC1Ev", "_ZNK2cv3ocl6Device12endianLittleEv", "icv_l9_ippiCopyReplicateBorder_8u_C1IR", "Java_org_opencv_features2d_DescriptorMatcher_match_13", "_ZNK2cv4cuda10DeviceInfo11queryMemoryERmS2_", "_ZN2cv4cuda19setBufferPoolConfigEimi", "icv_m7_ownFilterMaxRow03_32f_C4R", "icv_l9_ippsPowx_64f_A50", "_ZN2cv2ml6KDTreeC1ERKNS_11_InputArrayES4_b", "_ZNK11CvSparseMat15copyToSparseMatERN2cv9SparseMatE", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_13", "_ZN2cv4readERKNS_8FileNodeERSt6vectorINS_6DMatchESaIS4_EE", "icv_y8_ippiNormDiff_L1_8u_C1MR", "icv_l9_ownFilterMaxRow09_8u_C3R", "icv_y8_owns_rFFTinv_32_64f", "icv_l9_ownsrDFTinv_14_64f", "icv_l9_ownsMinEvery_32f_AVX", "icv_y8_innerHSVToRGB_8u_AC4R", "_ZN3rml8internal14thread_monitor4joinEl", "icv_m7_owns_initTabTwd_L1_32f", "icv_m7_ownsInitTabDftFwdRec_64f", "icv_y8_ownsrDFTfwd_7_scale_64f", "_ZN2cv5flann14LshIndexParamsC1Eiii", "_ZN2cv5flann5IndexD2Ev", "icv_m7_ippiCopyReplicateBorder_16s_C1R", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_5x5", "Java_org_opencv_ml_DTrees_getPriors_10", "icv_m7_ippiDCTFwdInit_32f", "icv_l9_ippiAddProduct_16u32f_C1IMR", "icv_l9_ownsInitDftConv_64f", "icv_m7_ippiNorm_L1_16s_C1R", "icv_y8_ippiSwapChannels_32s_C4R", "icv_m7_ippiCopyReplicateBorder_8u_C1R", "_ZN2cv9videostab18ToFileMotionWriter8estimateERKNS_3MatES4_Pb", "icv_y8_ippiMorphologyBorderGetSize_32f_C1R", "Java_org_opencv_imgproc_Imgproc_connectedComponents_11", "Java_org_opencv_videoio_VideoWriter_open_10", "icv_l9_ippsZero_32s", "icv_y8_ippiMirror_16u_C4R", "ippicviMul_8u_C1RSfs", "Java_org_opencv_features2d_Params_get_1minRepeatability_10", "Java_org_opencv_calib3d_StereoMatcher_setBlockSize_10", "_ZNSt13bad_exceptionD1Ev", "icv_l9_ippiCopySubpixIntersect_8u32f_C1R", "_ZNK2cv4cuda10DeviceInfo18maxTexture2DLinearEv", "_ZN2cv3hal6add32fEPKfmS2_mPfmiiPv", "icv_y8_owns_cFFTinv_32_scale_32fc", "icv_y8_ippiMax_16s_C1R", "_ZN2cv17DescriptorMatcher6createERKNS_6StringE", "_ZN3tbb8internal8governor22initialize_rml_factoryEv", "icv_y8_ippiConvert_8s32s_C1R", "icv_y8_ownResize3Linear64f", "icv_y8_ippsZero_8u", "icv_l9_ipMirror45_16uC1R", "icv_l9_ownpi_NormInf_16s_C1R", "icv_l9_ownFilterMinRow13_32f_C4R", "icv_m7_ippiFilterBorder_16s_C4R", "Java_org_opencv_ml_DTrees_setMinSampleCount_10", "icv_y8_ippiResizeCubic_16s_C4R", "_ZN2cv21BaseCascadeClassifierD0Ev", "Java_org_opencv_ml_StatModel_isClassifier_10", "_ZN3tbb8internal18dynamic_unlink_allEv", "_ZN2cv3Mat5zerosEiPKii", "icv_m7_ippiDCTInvInit_32f", "icv_m7_ownFilterMaxRow13_8u_C1R", "icv_m7_ownFilterRowBorderPipeline_32f_C3R_5x5_W7cn", "_ZNKSt16bad_array_length4whatEv", "icv_l9_ippsConvert_32f8u_Sfs", "_ZN2cv6detail14FeatherBlender7prepareENS_5Rect_IiEE", "_ZN2cv10meanStdDevERKNS_11_InputArrayERKNS_12_OutputArrayES5_S2_", "icv_m7_ippiSet_16s_C4MR", "ippicviNormDiff_Inf_16s_C4R", "cvGraphVtxDegree", "_ZN2cv3hal5xor8uEPKhmS2_mPhmiiPv", "_ZN2cv7noArrayEv", "Java_org_opencv_photo_Photo_stylization_10", "_ZN2cv6detail8resultTlERKSt6vectorINS_6Point_IiEESaIS3_EE", "icv_l9_ippiAddWeighted_16u32f_C1IMR", "_ZN2cv15KeyPointsFilter17runByKeypointSizeERSt6vectorINS_8KeyPointESaIS2_EEff", "icv_m7_ownFilterMaxRow03_8u_C4R", "_ZNK2cv12_OutputArray15getOGlBufferRefEv", "_ZNK2cv11_InputArray4dimsEi", "icv_m7_ippiNormDiff_L1_8u_C3R", "icv_m7_ownpi_CmpLT_32f_C1R", "icv_l9_ippsPolarToCart_32f", "icv_m7_ippiAddWeighted_16u32f_C1IR", "cvSolvePoly", "ippicviSqrIntegral_8u32f64f_C1R", "_ZN2cv8superres11FrameSourceD0Ev", "icv_l9_owns_rFFTinv_32_64f", "_ZNK2cv3ocl6Device25imageBaseAddressAlignmentEv", "cvTranspose", "icv_m7_ownscDftFwd_Prime16_32fc", "icv_y8_ownsAdd_16s_1Sfs", "_ZN2cv22SparsePyrLKOpticalFlow6createENS_5Size_IiEEiNS_12TermCriteriaEid", "Java_org_opencv_features2d_Feature2D_descriptorType_10", "icv_y8_ippiResizeGetSize_32f", "icv_m7_ownscDFTfwd_14_64fc", "icv_y8_ownCubicKernel2", "Java_org_opencv_video_BackgroundSubtractorMOG2_setShadowValue_10", "icv_l9_ownsMulC_16s_I_1Sfs", "icv_l9_owniCrossCorrNormGetSize", "icv_m7_ippiAbsDiff_16u_C1R", "_ZN2cv9videostab11LogToStdout5printEPKcz", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERNS0_13ImageFeaturesE", "icv_m7_ownsrDFTfwd_10_32f", "icv_l9_ownFilterMaxRow01_8u_C1R", "_ZN2cv3Mat6createEiPKii", "ippicviDilateBorder_8u_C1R", "_ZN2cv9Feature2D7computeERKNS_11_InputArrayERSt6vectorIS4_INS_8KeyPointESaIS5_EESaIS7_EERKNS_12_OutputArrayE", "icv_m7_ownsrDFTfwd_15_32f", "icv_y8_ownpi_NormInfDiff_16s_C4R", "icv_y8_ippiNorm_L2_32f_C1R", "icv_y8_ownscDftInv_Fact13_32fc", "icv_l9_owns_cFFTinv_64_scale_64fc", "icv_y8_ownsGetSizeTabDftFwdRec_32f", "_ZN2cv9videostab20WobbleSuppressorBaseC1Ev", "_ZN2cv3ogl9Texture2DC1ENS_5Size_IiEENS1_6FormatEjb", "Java_org_opencv_calib3d_StereoBM_setPreFilterCap_10", "icv_l9_ippsFlip_32f_I", "icv_m7_ippiSqrDistanceNormGetBufferSize", "icv_y8_ownscDFTinv_5_scale_64fc", "icv_m7_ippiNorm_L1_16s_C3R", "_ZNK2cv12MatAllocator23getBufferPoolControllerEPKc", "_ZN2cv4normERKNS_11_InputArrayEiS2_", "cvSetErrStatus", "_ZN2cv21BaseCascadeClassifierD1Ev", "icv_m7_ippiMirror_32f_C1IR", "icv_y8_owns_rFFTfwd_8_64f", "icv_y8_ownpi_NormL1_8u_C3R", "icv_y8_ownNormDiff_Inf_32f_C3CMR_P8Y8", "icv_m7_ippiMirror_8u_C1R", "icv_l9_ownsMul_8u_1Sfs", "_ZN2cv6detail7Blender4feedERKNS_11_InputArrayES4_NS_6Point_IiEE", "icv_y8_cv_ownippiFilterMax_16u_Col", "icv_m7_ippiMorphologyBorderInit_32f_C4R", "Java_org_opencv_imgproc_Imgproc_drawContours_11", "_ZNK2cv4cuda10DeviceInfo24maxSurfaceCubemapLayeredEv", "icv_l9_ippiNormDiff_Inf_32f_C3R", "icv_m7_ownscDFTfwd_6_scale_64fc", "icv_l9_ownpi_NormL2Diff_16s_C1R", "_ZN2cv18getMouseWheelDeltaEi", "icv_y8_ownsrDFTinv_3_scale_32f", "icv_y8_ownsrDFTfwd_14_32f", "_ZNK2cv3ocl6Kernel13workGroupSizeEv", "icv_m7_ownpi_NormL2Diff_8u_C4R", "Java_org_opencv_core_Core_mixChannels_10", "_ZN2cv3hal6min64fEPKdmS2_mPdmiiPv", "_ZN2cv3ocl7Context7getProgERKNS0_13ProgramSourceERKNS_6StringERS5_", "icv_y8_ownsrDFTfwd_6_scale_32f", "ippicvsFree", "Java_org_opencv_imgproc_Imgproc_intersectConvexConvex_10", "icv_m7_ownFilterRowBorderPipeline_16u_C1R_5x5", "ippicviNormDiff_L2_16s_C1R", "icv_y8_myRGBToXYZ_16u_C3R", "icv_l9_ownscDftFwd_Prime11_64fc", "Java_org_opencv_imgproc_Imgproc_moments_11", "_ZNKSt20bad_array_new_length4whatEv", "_ZNSt20bad_array_new_lengthD0Ev", "icv_y8_ippiNorm_Inf_16s_C1R", "icv_m7_ownippiMorphologyBorderReplicateInMemGetSize_32f_C3R", "icv_y8_ownMinEllipse_8u_C1", "icv_m7_owns_rFFTinv_4_scale_64f", "Java_org_opencv_objdetect_CascadeClassifier_empty_10", "icv_m7_IPP_Dilate_C4_32f", "_ZSt14get_unexpectedv", "_ZN2cv6imreadERKNS_6StringEi", "icv_m7_ippsDotProd_64f", "Java_org_opencv_videoio_VideoCapture_open_11", "icv_y8_ippiNormDiff_L2_8u_C3CMR", "icv_l9_ippiSum_8u_C1R", "icv_y8_ownDilateEllipseBorderReplicate_8u_C4R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerAvr", "icv_m7_ownsInitDftConv_32f", "_ZNK2cv10BOWTrainer14getDescriptorsEv", "icv_y8_ownsrDFTfwd_7_64f", "_ZN2cv25BOWImgDescriptorExtractorC1ERKNS_3PtrINS_17DescriptorMatcherEEE", "_ZNK2cv17CascadeClassifier21getOriginalWindowSizeEv", "icv_m7_ownCalcBorderR3Linear16s", "icv_m7_ownFilterMaxRow01_8u_C3R", "icv_l9_owniGetRectLeft_16s", "cvTreeToNodeSeq", "icv_l9_ownFilterMaxRow13_8u_C1R", "icv_y8_ippiFilterMinBorderGetBufferSize", "icv_y8_ownFilterMaxRow13_32f_C1R", "Java_org_opencv_core_Core_patchNaNs_11", "icv_m7_ownResize3Cubic32f", "ippicviSet_32s_C4MR", "icv_l9_owns_cFFT_2_scale_64fc", "Java_org_opencv_photo_Photo_createCalibrateRobertson_10", "_ZNK2cv5MatOp12augAssignXorERKNS_7MatExprERNS_3MatE", "cvCalcArrBackProject", "icv_y8_ippiTranspose_32f_C3R", "cvSeqPushMulti", "icv_m7_ippiNorm_L2_16u_C4R", "icv_m7_ownsAddC_32f", "icv_y8_ippsDFTInit_R_32f", "icv_m7_ownippiFilterMinGetBufferSize_32f_C4R", "Java_org_opencv_ml_ANN_1MLP_setBackpropMomentumScale_10", "icv_m7_owniConvert_8s8u_ccode", "icv_m7_ownippiFilterMinBorderReplicate_32f_C3R", "cvCreateFileCaptureWithPreference", "_ZN7cvflann19flann_distance_typeEv", "icv_y8_ippiResizeLinear_16s_C1R", "_ZN2cv7fisheye13projectPointsERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_7Affine3IdEES3_S3_dS6_", "_ZN2cv3ocl7ContextaSERKS1_", "icv_l9_dct_8x8_fwd_32f", "icv_m7_owns_cFftFwd_Fact4_64fc", "Java_org_opencv_core_Core_completeSymm_10", "_ZN2cv21DetectionBasedTrackerC2ENS_3PtrINS0_9IDetectorEEES3_RKNS0_10ParametersE", "icv_m7_ippiNorm_Inf_8u_C1R", "icv_y8_ippiNormDiff_L2_32f_C4R", "icv_l9_ippiNormDiff_L1_8u_C1R", "_ZN3tbb8internal6market20lower_arena_priorityERNS0_5arenaElm", "Java_org_opencv_video_Video_calcOpticalFlowPyrLK_10", "_ZN2cv5errorEiRKNS_6StringEPKcS4_i", "icv_m7_ownsrDftInv_PrimeFact_64f", "_ZN3tbb8internal5arena26restore_priorities_if_needEv", "icv_y8_ippiNorm_L2_8u_C1MR", "icv_y8_ownFilterMaxColumn03_32f_C1R", "_ZNK2cv3Mat1tEv", "_ZN2cv17CommandLineParserC1ERKS0_", "_ZN2cv16findEssentialMatERKNS_11_InputArrayES2_S2_iddRKNS_12_OutputArrayE", "cvAcc", "icv_y8_ippsPolarToCart_32f", "_ZN2cv6detail20BundleAdjusterAffine24setUpInitialCameraParamsERKSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_y8_ippiTranspose_32f_C4R", "icv_l9_ownsInitTabDftInvRec_32f", "Java_org_opencv_core_Core_norm_13", "icv_y8_ippiMirror_16u_C4IR", "icv_m7_ippiNorm_L2_16u_C1MR", "ippicviMean_StdDev_16u_C3CR", "_ZN2cv11matchShapesERKNS_11_InputArrayES2_id", "icv_l9_ippiMean_StdDev_16u_C1MR", "icv_m7_ippiTranspose_32s_C3IR", "ippicviResizeLinearInit_32f", "ippicviNorm_L1_8u_C1MR", "_ZN2cv18findFundamentalMatERKNS_11_InputArrayES2_RKNS_12_OutputArrayEidd", "_ZN3tbb8internal8governor12tls_value_ofEPNS0_17generic_schedulerE", "icv_y8_ippiMirror_8u_C3R", "icv_m7_ippsInvSqrt_64f_A50", "icv_y8_ownpis_Sum_16u_C1", "Java_org_opencv_calib3d_Calib3d_projectPoints_13", "_ZNK2cv9SparseMat6copyToERS0_", "_ZN2cv18getAffineTransformEPKNS_6Point_IfEES3_", "Java_org_opencv_calib3d_Calib3d_matMulDeriv_10", "icv_l9_ownippiFilterMinGetBufferSize_8u_C1R", "cvReleaseCapture", "icv_y8_ownippiDilateBorder_32f_C1R", "cvLaplace", "icv_m7_ippiMorphologyBorderGetSize_8u_C3R", "_ZN2cv2ml6KDTreeC2ERKNS_11_InputArrayEb", "icv_m7_ownColLinear64f", "icv_l9_ownFilterMinRow06_32f_C4R", "icv_l9_ippiResizeCubicInit_16u", "Java_org_opencv_imgproc_Imgproc_HoughLines_11", "icv_y8_ownCalcBorderR4Cubic32f", "ippicviNormRel_Inf_16s_C1R", "icv_y8_owniConvert_32s8u_C1R", "_ZN2cv3hal6min16sEPKsmS2_mPsmiiPv", "icv_l9_ownsSub_8u", "_ZN2cv6detail21BlocksGainCompensator5applyEiNS_6Point_IiEERKNS_17_InputOutputArrayERKNS_11_InputArrayE", "icv_y8_ownscDFTinv_10_scale_32fc", "ippicviResizeLinear_16u_C1R", "icv_y8_ownippiMorphologyBorderReplicateInMemGetSize_8u_C1R", "icv_m7_ippiNorm_Inf_16u_C3R", "icv_m7_ownpi_NormL1Diff_8u_C3R", "ippicviCrossCorrNorm_32f_C1R", "icv_l9_ownNormRel_L1_8u_C1MR_HSW", "Java_org_opencv_core_Core_dct_11", "icv_y8_ownpi_Max_16u_C1R", "_ZN2cv6circleERKNS_17_InputOutputArrayENS_6Point_IiEEiRKNS_7Scalar_IdEEiii", "_ZN2cvmiERKNS_7Scalar_IdEERKNS_7MatExprE", "_ZN2cv11VideoWriterD2Ev", "Java_org_opencv_objdetect_HOGDescriptor_detectMultiScale_10", "icv_y8_ippiNorm_L2_8u_C3R", "ippicviMirror_8u_C4R", "icv_y8_ownFilterMaxRow02_32f_C1R", "Java_org_opencv_features2d_DescriptorMatcher_radiusMatch_13", "_ZNK2cv8Subdiv2D8QuadEdge6isfreeEv", "Java_org_opencv_features2d_Params_get_1filterByArea_10", "_ZNK2cv8Subdiv2D6Vertex9isvirtualEv", "icv_m7_ownscDFTfwd_11_32fc", "icv_l9_ownsrDFTinv_3_64f", "icv_l9_ippiFilterMaxBorderGetBufferSize", "_ZN2cv32fastNlMeansDenoisingColoredMultiERKNS_11_InputArrayERKNS_12_OutputArrayEiiffii", "_ZN2cv6detail20CylindricalWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RNS_4cuda6GpuMatES9_", "icv_m7_ownippiFilterMaxGetBufferSize_32f_C4R", "Java_org_opencv_features2d_AKAZE_create_10", "icv_m7_ippiConvert_16u8u_C1R", "icv_m7_ownpi_NormInf_16s_C3R", "_ZN2cv12KalmanFilterC1Eiiii", "icv_m7_ownpi_NormL2_16u_C1R", "icv_y8_owns_cFftInv_Fact4_32fc", "_ZN2cv13drawKeypointsERKNS_11_InputArrayERKSt6vectorINS_8KeyPointESaIS4_EERKNS_17_InputOutputArrayERKNS_7Scalar_IdEEi", "_ZN2cv6detail11MatchesInfoC2ERKS1_", "icv_m7_ownsSub_8u_Bound", "icv_y8_ownpi_NormL2_32f_C1R", "ippicviIntegral_8u32s_C1R", "icv_y8_ippiCopySubpixIntersect_8u_C1R", "icv_m7_ownippiFilterMaxGetBufferSize_32f_C1R", "icv_l9_ippiThreshold_GTVal_16s_C1R", "_ZN9_IplImageC1ERKN2cv3MatE", "cvReleaseStructuringElement", "icv_l9_ippiNormDiff_L1_16u_C4R", "icv_y8_owniCrossCorrNorm_Valid_32f_C1R", "icv_y8_ippiConvert_16s8s_C1RSfs", "icv_l9_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "icv_l9_ippsMaxEvery_16u", "icv_l9_ownResize4Cubic16s", "ippicviDilateBorder_8u_C3R", "icv_l9_ippiSum_32f_C1R", "icv_y8_ippiSub_32f_C1R", "Java_org_opencv_ml_NormalBayesClassifier_predictProb_10", "_ZN2cv21setOpenGlDrawCallbackERKNS_6StringEPFvPvES3_", "icv_m7_ownsrDFTinv_11_32f", "icv_l9_ownscDftFwd_Prime6_32fc", "ippicviNormRel_L2_32f_C1R", "icv_l9_ippiSwapChannels_8u_C3C4R", "icv_y8_gres_NormL2_16u_C3R", "cvCreateChildMemStorage", "icv_y8_Dilate_32f_C4S", "icv_l9_ownippiFilterMinBorderReplicate_8u_C1R", "icv_y8_ownsrDFTfwd_15_scale_32f", "icv_m7_owns_rFFTfwd_16_scale_32f", "Java_org_opencv_features2d_Params_get_1filterByCircularity_10", "icv_l9_owniFilter32f_8u_C3R_g9e9_1", "_ZNK2cv3ocl6Device26preferredVectorWidthDoubleEv", "_ZN3tbb8internal6marketC1Ejjm", "_ZN2cv3ocl7Context6createEv", "icv_l9_ownscDftInv_Prime4_32fc", "_ZNK2cv4cuda6GpuMat7reshapeEii", "icv_l9_owns_rFFTinv_16_scale_64f", "icv_l9_ippiFilterMinBorder_8u_C3R", "_ZN2cv6detail18GraphCutSeamFinderD0Ev", "icv_y8_ownFilterMaxRow05_8u_C4R", "icv_y8_ownBuildFilter_32f", "_ZN3tbb8internal13observer_list10remove_refEPNS0_14observer_proxyE", "icv_y8_innerRGBToXYZ_32f_C3R", "cvClone", "_ZNK2cv3ocl12PlatformInfo4nameEv", "Java_org_opencv_ml_KNearest_getIsClassifier_10", "icv_m7_ownMaxEllipse_32f_C1", "icv_m7_ownsAddC_16s_I_NegSfs", "icv_m7_ownscDftFwd_Fact13_64fc", "Java_org_opencv_features2d_FastFeatureDetector_getType_10", "_ZN3tbb16spin_rw_mutex_v323internal_release_readerEv", "icv_m7_ippiFilterMaxBorder_8u_C1R", "icv_l9_ownCalcBorderR4Cubic32f", "cvRectangleR", "icv_y8_owns_cFftFwd_Fact4_32fc", "_ZN2cv8internal15IntrinsicParamsC2Ev", "Java_org_opencv_core_TickMeter_delete", "icv_m7_ippsZero_8u", "icv_l9_Erode_8u_C1S", "Java_org_opencv_objdetect_HOGDescriptor_save_10", "icv_m7_ownFilterMinRow11_32f_C1R", "ippicviFilterSobelVertSecondBorder_8u16s_C1R", "Java_org_opencv_ml_RTrees_setCalculateVarImportance_10", "_ZN2cv11RNG_MT19937cvjEv", "icv_l9_ownsGetSizeDftConv_64f", "icv_m7_owniNormLevel_32f_C1R", "Java_org_opencv_ml_LogisticRegression_getMiniBatchSize_10", "icv_l9_ownDilateEllipseBorderReplicate_32f_C1R", "icv_l9_ownFilterBorder16s_16u_C4R", "_ZN2cv3LDAC1ERKNS_11_InputArrayES3_i", "_ZN2cv21DetectionBasedTracker4stopEv", "icv_m7_IPP_Erode_C4_8u", "icv_m7_ippsDFTFwd_CToC_64fc", "icv_m7_ippiCopyReplicateBorder_8u_C3R", "_ZN2cv28rotatedRectangleIntersectionERKNS_11RotatedRectES2_RKNS_12_OutputArrayE", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKNS_9SparseMatE", "_ZN2cv3ocl10haveAmdFftEv", "icv_l9_ownscDFTinv_12_64fc", "icv_m7_ippiFilterScharrVertMaskBorder_32f_C1R", "icv_l9_owniGetRectTop_32f", "_ZN2cv6detail11PlaneWarper4warpERKNS_11_InputArrayES4_S4_S4_iiRKNS_12_OutputArrayE", "Java_org_opencv_calib3d_Calib3d_calibrate_10", "_ZN2cv12VideoCaptureC2Ei", "ippicviXYZToRGB_16u_C3R", "icv_m7_IPP_Erode_C3_8u", "ippicviFilterGaussianBorder_8u_C1R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_kerLaplacian", "Java_org_opencv_features2d_ORB_getPatchSize_10", "cvSeqInvert", "icv_m7_ippiMul_16s_C1RSfs", "ippicviResizeLinear_16s_C3R", "icv_l9_ippsDFTFwd_RToPack_64f", "icv_l9_ownscDftInv_Prime6_32fc", "Java_org_opencv_imgproc_Imgproc_getGaussianKernel_10", "_ZNK2cv11_InputArray5depthEi", "icv_l9_ownsInitTabDftFwdRec_64f", "icv_l9_ippsFFTFwd_RToPerm_32f", "icv_y8_ippiDilateBorder_8u_C4R", "_ZN2cv21DetectionBasedTracker10ParametersC1Ev", "icv_y8_BUFSIZE_FUNC", "icv_y8_ownFilterRowBorderPipeline_16s_C3R_3x3", "_ZN2cv7directx23convertToD3D10Texture2DERKNS_11_InputArrayEP15ID3D10Texture2D", "_ZN2cv9HuMomentsERKNS_7MomentsEPd", "icv_m7_ownpi_NormL1_32f_C1R", "icv_y8_ownpi_NormInfDiff_16u_C1R", "icv_m7_ownsSet_32s", "icv_m7_ippiAddC_32f_C1IR", "_ZN2cv3ocl7ProgramC1Ev", "_ZN2cv3hal8CholeskyEPdmiS1_mi", "icv_m7_ownscDftFwd_Prime8_32fc", "_ZN2cv3ocl5QueueC1ERKNS0_7ContextERKNS0_6DeviceE", "icv_y8_ippiSum_16s_C1R", "_ZN2cv12VideoCaptureC2Ev", "Java_org_opencv_imgproc_Imgproc_boxFilter_10", "cvGetSubRect", "icv_y8_owniFilter_32f_C4R_v8u8_5", "_ZN2cv3logERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv8internal15NormalizePixelsERKNS_3MatERKNS0_15IntrinsicParamsE", "_ZN3tbb8internal6market7destroyEv", "ippicviAdd_16u32f_C1IMR", "_ZN2cv9videostab18InpaintingPipeline14setMotionModelENS0_11MotionModelE", "icv_y8_ipMirror135_8uC1R", "icv_y8_ownippiDilateBorder_32f_C3R", "ippicvsDFTInit_R_32f", "icv_l9_owniConvert_8s8u_ccode", "_ZN2cv15KeyPointsFilter16removeDuplicatedERSt6vectorINS_8KeyPointESaIS2_EE", "icv_y8_ownResize3Cubic16u", "icv_y8_ippiNormDiff_L1_16u_C4R", "Java_org_opencv_features2d_DescriptorMatcher_knnMatch_11", "icv_l9_ippiMean_StdDev_16u_C1R", "icv_y8_IPP_Dilate_C3_32f", "cvWrite", "__powidf2", "_ZN2cv3ocl12setUseOpenCLEb", "icv_m7_ownErode_8u_C4S", "cvErrorFromIppStatus", "icv_y8_ownsrDFTfwd_11_scale_32f", "Java_org_opencv_video_Video_createBackgroundSubtractorMOG2_11", "ippicviNormRel_Inf_32f_C1MR", "icv_l9_ownscDFTinv_5_scale_64fc", "_ZN2cv3ocl6DeviceaSERKS1_", "_ZNK2cv3ocl6Device13OpenCLVersionEv", "cvPolyLine", "icv_y8_ippsDFTInv_CToC_32fc", "Java_org_opencv_photo_TonemapDurand_delete", "ippicviNormDiff_L2_8u_C3CMR", "Java_org_opencv_imgproc_Imgproc_minEnclosingTriangle_10", "icv_l9_ownsAddC_16s_I", "icv_m7_ippiAdd_16u32f_C1IR", "icv_l9_ippiDCTInv_32f_C1R", "icv_y8_ippiDistanceTransform_3x3_8u32f_C1R", "icv_m7_ippiSum_8u_C4R", "icv_l9_ippiMirror_32s_C3IR", "ippicviFilterMedianBorder_8u_C1R", "Java_org_opencv_imgproc_Imgproc_accumulateWeighted_10", "icv_m7_ippiNorm_L2_16s_C3R", "cvGetWindowProperty", "_ZN3tbb8internal27initialize_handler_pointersEv", "icv_m7_ownscDFTfwd_10_32fc", "Java_org_opencv_core_Core_PCACompute_11", "Java_org_opencv_core_Core_idct_11", "icv_l9_ippiTranspose_16s_C4R", "icv_l9_ippiCopyReplicateBorder_8u_C3R", "_ZN2cv9solvePolyERKNS_11_InputArrayERKNS_12_OutputArrayEi", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarThreshold_10", "icv_l9_ownscDftFwd_Prime6_64fc", "icv_y8_ownsrDFTfwd_5_scale_64f", "Java_org_opencv_features2d_Params_set_1minRepeatability_10", "_ZN2cv5phaseERKNS_11_InputArrayES2_RKNS_12_OutputArrayEb", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3_W7cn", "icv_m7_ownCalcBorderR3Cubic16s", "icv_y8_ownpi_NormL1Rel_8u_C1R", "icv_l9_cv_ownippiFilterMax_32f_Row", "_ZN2cv11RQDecomp3x3ERKNS_11_InputArrayERKNS_12_OutputArrayES5_S5_S5_S5_", "icv_y8_ownscDFTinv_15_scale_32fc", "_ZN2cv5flann11IndexParams8setFloatERKNS_6StringEf", "icv_y8_ownsMulC_16s_I_Bound", "icv_y8_owniFilter_32f_C1R_v8u8_6NA", "icv_y8_owns_cFftInv_Large_32fc", "ippicviDilateBorder_8u_C4R", "_ZN2cv8va_intel18convertToVASurfaceEPvRKNS_11_InputArrayEjNS_5Size_IiEE", "icv_l9_owniFilter_32f_C1R_g9e9_4", "icv_m7_ippiTranspose_16u_C1R", "icv_l9_ownFilterMaxRow02_8u_C1R", "_ZNK2cv21DetectionBasedTracker31calcTrackedObjectPositionToShowEi", "ippicviNorm_L1_16u_C1R", "icv_m7_ownRow3Linear16s", "Java_org_opencv_imgproc_Imgproc_putText_12", "_ZN3tbb8internal8governor24does_client_join_workersERKNS0_3rml10tbb_clientE", "cvRestoreMemStoragePos", "Java_org_opencv_ml_DTrees_getMaxCategories_10", "_ZN2cv3hal3logEPKdPdi", "icv_m7_ownscDFTinv_15_32fc", "icv_m7_ownscDFTfwd_7_scale_32fc", "icv_l9_ippiDCTInvGetSize_32f", "_ZN2cv3hal5sub8uEPKhmS2_mPhmiiPv", "_ZN2cv5instr8getTraceEv", "_ZN2cv13getRectSubPixERKNS_11_InputArrayENS_5Size_IiEENS_6Point_IfEERKNS_12_OutputArrayEi", "Java_org_opencv_imgcodecs_Imgcodecs_imwrite_11", "_ZN2cv3PCA4readERKNS_8FileNodeE", "icv_m7_ippiResizeLinear_16u_C1R", "icv_l9_ownsrDFTfwd_11_scale_32f", "icv_l9_ownFilterMaxRow04_8u_C4R", "icv_m7_owns_cFftInv_Large_64fc", "icv_l9_ownRow3Cubic32f", "Java_org_opencv_features2d_MSER_create_10", "icv_y8_ownFilterMinRow11_8u_C1R", "_ZN2cv3hal10warpAffineEiPKhmiiPhmiiPKdiiS5_", "icv_l9_ownFilterMinColumn03_32f_C1R", "icv_l9_ownFilterBorder16s_16u_C3R", "icv_y8_ownsrDFTfwd_15_32f", "_ZN2cv3ogl9Texture2D6createEiiNS1_6FormatEb", "Java_org_opencv_features2d_AKAZE_getDescriptorSize_10", "icv_y8_ownErodeEllipseBorderReplicate_32f_C3R", "icv_l9_ownFilterMinRow07_8u_C3R", "Java_org_opencv_ml_KNearest_getDefaultK_10", "icv_m7_ownsMul_32f", "icv_m7_ippiSet_16s_C3MR", "icv_l9_ownsMul_8u", "icv_m7_ownFilterMaxRow04_32f_C4R", "own_ipps_dCos_L9HAynn", "icv_l9_innerRGBToXYZ_8u_C3R", "icv_l9_ippiCopySubpixIntersect_8u_C1R", "icv_m7_ownsInitTabDftDir_32f", "icv_l9_ippiRGBToXYZ_16u_C3R", "icv_m7_ippiAddProduct_16u32f_C1IMR", "icv_m7_ownFilterMinColumn03_32f_C1R", "icv_m7_ownscDFTfwd_14_32fc", "_ZN2cv9Exception13formatMessageEv", "Java_org_opencv_features2d_DescriptorMatcher_create_10", "icv_y8_ippiResizeLinearInit_16s", "Java_org_opencv_photo_CalibrateRobertson_setThreshold_10", "_ZNK2cv4cuda10DeviceInfo12maxSurface3DEv", "_ZN3tbb8internal20itt_set_sync_name_v3EPvPKc", "icv_l9_owniFilter32f_16s_C3R_g9e9_7", "_ZN2cv18initCameraMatrix2DERKNS_11_InputArrayES2_NS_5Size_IiEEd", "Java_org_opencv_imgproc_Imgproc_line_11", "ippicviThreshold_GTVal_16s_C1R", "icv_l9_ownFilterMinRow04_32f_C3R", "_ZN2cv12VideoCaptureC1ERKNS_6StringEi", "Java_org_opencv_core_Core_SVBackSubst_10", "_ZN2cv17DescriptorMatcher11isMaskedOutERKNS_11_InputArrayEi", "icv_m7_ippiResizeLinear_32f_C4R", "_ZNK2cv3ocl6Device10vendorNameEv", "ippicviConvert_32f8s_C1RSfs", "Java_org_opencv_photo_CalibrateDebevec_delete", "_ZNK2cv12_OutputArray12getGpuMatRefEv", "icv_y8_owniFilter_32f_C3R_v8u8_2", "icv_m7_ownCalcBorderR3Linear16u", "icv_m7_cv_ownippiFilterMin_32f_Col", "icv_l9_owns_initTabDct_Dir_32f", "cvGetSize", "ippicviMirror_32s_C4R", "_ZN2cv4UMat4onesENS_5Size_IiEEi", "icv_y8_ippiFilterMaxBorder_32f_C1R", "_ZNK2cv13HOGDescriptor16detectMultiScaleERKNS_11_InputArrayERSt6vectorINS_5Rect_IiEESaIS6_EERS4_IdSaIdEEdNS_5Size_IiEESE_ddb", "Java_org_opencv_core_Core_eigen_11", "Java_org_opencv_video_KalmanFilter_set_1controlMatrix_10", "Java_org_opencv_calib3d_Calib3d_reprojectImageTo3D_11", "icv_m7_owns_rFFTfwd_32_scale_32f", "cvGetErrMode", "ippicviTranspose_16s_C1R", "_ZN2cv6detail18GraphCutSeamFinder4Impl4findERKSt6vectorINS_4UMatESaIS4_EERKS3_INS_6Point_IiEESaISA_EERS6_", "icv_m7_ippsFFTFwd_RToPerm_32f", "Java_org_opencv_features2d_Params_set_1minDistBetweenBlobs_10", "Java_org_opencv_ml_StatModel_isTrained_10", "_ZN2cv3hal8merge64sEPPKlPlii", "icv_m7_ippiFilterBorder_8u_C3R", "Java_org_opencv_core_TickMeter_getTimeMicro_10", "_ZN2cv12VideoCapture4readERKNS_12_OutputArrayE", "icv_l9_ippiFilterSobelVertSecondBorderGetBufferSize", "icv_l9_ownscDFTfwd_6_64fc", "cvResize", "Java_org_opencv_ml_LogisticRegression_setLearningRate_10", "icv_y8_ownFilterBorder16s_8u_C3R", "icv_y8_ownResize1Linear16u", "_ZN2cv4cuda11TargetArchs6hasBinEii", "icv_y8_ownippiErodeBorder_8u_C1R", "icv_y8_owniFilterScharrVertMaskBorder2_16s_C1R", "icv_l9_ownCubicKernel2", "icv_y8_ownRow1Cubic16s", "icv_l9_cv_ownippiFilterMin_16u_Row", "_ZN2cv8Subdiv2D8QuadEdgeC1Ev", "icv_l9_ippiSwapChannels_32f_C3C4R", "_ZN2cv3ocl6Kernel7runTaskEbRKNS0_5QueueE", "icv_y8_ownFilterMaxRow04_32f_C1R", "_ZN2cv3hal6div64fEPKdmS2_mPdmiiPv", "Java_org_opencv_ml_ANN_1MLP_setActivationFunction_10", "icv_y8_ownsFFTGetBufSize_R_32f", "Java_org_opencv_core_Core_SVDecomp_11", "icv_l9_ippiCopy_16u_P3C3R", "Java_org_opencv_ml_NormalBayesClassifier_delete", "_ZN2cv4UMat4onesEiPKii", "icv_y8_ownResize4Linear16s", "icv_l9_ownMean_StdDev_32f_C3CR_2_HSW", "_ZN2cv12VideoCapture3setEid", "icv_l9_ownscDftInv_Prime7_64fc", "icv_l9_ippiResizeGetSrcOffset_32f", "Java_org_opencv_features2d_AKAZE_getThreshold_10", "icv_l9_ownNorm_L2_32f_C1MR_HSW", "icv_m7_ownscDFTinv_5_scale_32fc", "Java_org_opencv_imgproc_Imgproc_distanceTransform_11", "icv_y8_ownippiMorphologyBorderReplicateInMemInit_8u_C3R", "_ZN3tbb8internal9schedulerD2Ev", "Java_org_opencv_imgproc_Imgproc_preCornerDetect_11", "Java_org_opencv_features2d_DescriptorMatcher_clear_10", "icv_l9_ippiCopy_8u_C4R", "Java_org_opencv_imgproc_Imgproc_Laplacian_11", "icv_m7_ippiFilterMinBorder_32f_C1R", "Java_org_opencv_imgproc_Imgproc_matchTemplate_11", "icv_y8_ippiThreshold_GT_32f_C1R", "icv_m7_ippsDFTInit_R_32f", "cvSliceLength", "icv_l9_ownsrDFTfwd_3_64f", "icv_y8_ippiCopyReplicateBorder_16s_C1IR", "Java_org_opencv_calib3d_Calib3d_findHomography_12", "icv_y8_ownscDFTfwd_9_64fc", "icv_m7_ippiMean_16u_C1MR", "Java_org_opencv_ml_TrainData_getTrainSamples_11", "Java_org_opencv_photo_Photo_createAlignMTB_11", "icv_y8_ippiNormDiff_Inf_8u_C3R", "_ZNK2cv11RotatedRect14boundingRect2fEv", "icv_m7_ownsrDFTfwd_5_32f", "cvSetSeqBlockSize", "icv_m7_ippiFilterSobelHorizSecondBorderGetBufferSize", "Java_org_opencv_video_FarnebackOpticalFlow_getFlags_10", "_ZN3tbb8internal5arena22orphan_offloaded_tasksERNS0_17generic_schedulerE", "icv_m7_ippiConvert_8u8s_C1RSfs", "icv_m7_ownpi_NormInfDiff_16u_C1R", "icv_l9_ippiMean_8u_C1R", "Java_org_opencv_imgproc_Imgproc_distanceTransformWithLabels_11", "_ZNK2cv13HOGDescriptor17getDescriptorSizeEv", "icv_y8_ownippiMorphologyBorderReplicateInMemGetSize_32f_C4R", "icv_l9_ownsrDFTinv_11_32f", "icv_l9_gres_NormL1_16u_C1R", "icv_l9_ownFilterMinRowVH_32f_C4R", "icv_l9_ownRow3Linear16s", "_ZN2cv3hal8gemm64fcEPKdmS2_mdS2_mdPdmiiii", "icv_l9_ownpi_Sum_16s_C3R", "icv_l9_ownFilterMinRow06_32f_C3R", "icv_m7_ownsrDFTfwd_10_scale_32f", "icv_l9_ippiCopy_16s_P3C3R", "Java_org_opencv_ml_RTrees_delete", "_ZN2cv15warpPerspectiveERKNS_11_InputArrayERKNS_12_OutputArrayES2_NS_5Size_IiEEiiRKNS_7Scalar_IdEE", "icv_y8_ownFilterMaxRow02_8u_C1R", "icv_y8_ownsSet_32s", "_ZN2cv10BOWTrainer5clearEv", "cvSub", "cvCheckHardwareSupport", "icv_y8_ownsFFTGetBufSize_C_32fc", "icv_l9_ownippiFilterMedianHoriz_16s_C1R_5x1", "icv_m7_owns_initDctFwd_Conv_32f", "icv_l9_ownsrDFTfwd_11_64f", "icv_m7_ippiErodeBorder_32f_C1R", "icv_m7_ownResize3Linear32f", "icv_l9_ownippiFilterMinGetBufferSize_8u_C3R", "Java_org_opencv_ml_SVM_getP_10", "_ZN2cv6detail14PlaneWarperGpu4warpERKNS_4cuda6GpuMatERKNS_11_InputArrayES8_S8_iiRS3_", "_ZN2cv12GaussianBlurERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEddi", "icv_y8_owniConvert_16s8s_ccode", "_ZNSt8bad_castD1Ev", "icv_m7_ippiMirror_16s_C1R", "_ZNK2cv5flann11IndexParams6getIntERKNS_6StringEi", "icv_y8_ownscDFTinv_12_scale_64fc", "icv_l9_IPP_Dilate_C3_32f", "_ZN2cv13setNumThreadsEi", "icv_m7_ownFilterMinRow11_8u_C3R", "icv_l9_Erode_32f_C3S", "_ZN2cv6detail18GraphCutSeamFinder4Impl20setGraphWeightsColorERKNS_3MatES5_S5_S5_R7GCGraphIfE", "_ZN2cv3hal6sub16uEPKtmS2_mPtmiiPv", "Java_org_opencv_calib3d_Calib3d_convertPointsToHomogeneous_10", "_ZN2cv24calcOpticalFlowFarnebackERKNS_11_InputArrayES2_RKNS_17_InputOutputArrayEdiiiidi", "_ZN2cv24createCalibrateRobertsonEif", "_ZN2cv9videostab20FromFileMotionReader8estimateERKNS_3MatES4_Pb", "icv_m7_ownsAddC_16s_I_1Sfs", "icv_m7_ownFilterMaxRow07_8u_C3R", "Java_org_opencv_video_DualTVL1OpticalFlow_setWarpingsNumber_10", "Java_org_opencv_ml_TrainData_create_10", "_ZN2cv5flann11IndexParamsC2Ev", "icv_l9_ownNormDiff_L2_16u_C3CMR_HSW", "Java_org_opencv_core_Core_countNonZero_10", "icv_l9_ownFilterColumnPipeline_32f_C1R_5x5_G9E9", "icv_m7_owns_cFFTinv_4_scale_64fc", "icv_y8_ippiResizeCubic_16u_C4R", "Java_org_opencv_ml_SVM_setKernel_10", "icv_l9_ippiCopyConstBorder_32f_C4R", "icv_l9_myXYZToRGB_32f_C3R", "Java_org_opencv_core_Core_divide_15", "icv_y8_ownFilterMinRow07_8u_C3R", "_ZN2cv14fillConvexPolyERKNS_17_InputOutputArrayERKNS_11_InputArrayERKNS_7Scalar_IdEEii", "_ZNK2cv11FileStorageixEPKc", "_ZN10__cxxabiv116__enum_type_infoD2Ev", "icv_y8_myXYZToRGB_16u_C3R", "_ZN2cv3LDA7projectERKNS_11_InputArrayE", "icv_y8_ippiFilterScharrHorizMaskBorder_16s_C1R", "_ZN2cv3Mat15getStdAllocatorEv", "Java_org_opencv_photo_Photo_decolor_10", "icv_l9_ippiNormDiff_L1_16u_C3CMR", "icv_y8_ippiConvert_16u8u_C1R", "icv_m7_ownsrDFTfwd_6_scale_32f", "icv_y8_ippsZero_64fc", "_ZN2cv11colorChangeERKNS_11_InputArrayES2_RKNS_12_OutputArrayEfff", "Java_org_opencv_photo_TonemapDurand_getSigmaSpace_10", "ippicviNormRel_L2_16s_C1R", "icv_y8_ippiCopyReplicateBorder_32f_C3R", "icv_y8_ippiCopy_8u_AC4C3R", "ippicviFilterMaxBorder_32f_C1R", "icv_l9_ownsSub_16s_1Sfs", "Java_org_opencv_imgproc_Subdiv2D_findNearest_10", "ippicviTranspose_8u_C1R", "Java_org_opencv_features2d_GFTTDetector_setMinDistance_10", "_ZN2cv8solvePnPERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_bi", "icv_y8_ippiNorm_Inf_8u_C1MR", "icv_l9_ippsConj_64fc", "icv_l9_ippsConvert_32f16u_Sfs", "icv_l9_ippiMirror_16s_C4R", "_ZN2cv11FileStorageC2ERKNS_6StringEiS3_", "icv_m7_owns_rFFTinv_32_scale_32f", "icv_y8_ownpiLUTPalette_8u_C3R", "cvKalmanPredict", "_ZN2cv6String10deallocateEv", "Java_org_opencv_calib3d_StereoSGBM_setMode_10", "Java_org_opencv_video_FarnebackOpticalFlow_create_11", "icv_y8_ippsFFTFwd_CToC_32fc", "_Z17vector_Mat_to_MatRSt6vectorIN2cv3MatESaIS1_EERS1_", "icv_l9_ippiAddProduct_16u32f_C1IR", "icv_l9_ownMean_StdDev_8u_C1R_HSW", "icv_m7_ownsFFTGetBufSize_C_32fc", "_ZN2cv9LaplacianERKNS_11_InputArrayERKNS_12_OutputArrayEiiddi", "cvLog", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getFlags_10", "_Unwind_Backtrace", "icv_l9_ippiNormDiff_L2_16s_C3R", "icv_m7_ownCubicKernel1", "icv_l9_ownDistanceTransform_3x3_8u32f_C1R_21B_g9e9", "icv_l9_Dilate_32f_C3S", "icv_m7_ownscDFTinv_10_32fc", "icv_l9_ippiRGBToGray_32f_C3C1R", "ippicviCopy_32s_C1MR", "icv_y8_owns_cFFTinv_8_scale_32fc", "own_ipps_sLn_L9LAynn", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_X_H9L9cn", "icv_y8_owns_rFFTfwd_8_scale_32f", "icv_m7_ippsFFTInv_CToC_32fc", "icv_y8_ippiCopyReplicateBorder_16s_C4IR", "icv_m7_owniGetRectBottom_16s", "icv_l9_ippiThreshold_GT_8u_C1IR", "_ZN2cv4UMat5zerosENS_5Size_IiEEi", "_ZN2cv3hal9fastAtan2EPKfS2_Pfib", "icv_m7_ownFilterMaxRow03_8u_C3R", "_ZN2cv2ml5Boost6createEv", "Java_org_opencv_imgproc_Imgproc_arrowedLine_11", "icv_l9_ippiFilterBorder_16u_C3R", "Java_org_opencv_features2d_KAZE_getDiffusivity_10", "icv_y8_owniFilter_32f_C4R_v8u8_6", "Java_org_opencv_video_KalmanFilter_KalmanFilter_11", "_ZN2cv15getNumberOfCPUsEv", "icv_m7_ippiSqrIntegral_8u32s64f_C1R", "icv_l9_ippiCrossCorrNorm_8u32f_C1R", "icv_y8_ownippiFilterMinGetBufferSize_32f_C4R", "_ZNK2cv5MatOp8subtractERKNS_7MatExprES3_RS1_", "_ZN2cv11FileStorage20getDefaultObjectNameERKNS_6StringE", "cvInitSparseMatIterator", "icv_y8_ippiCopyConstBorder_8u_C4R", "_ZN2cv8clearSeqEP5CvSeq", "icv_l9_ownpi_NormInf_8u_C4R", "_ZNK2cv3ocl6Device11addressBitsEv", "icv_m7_ownFilterMaxRowVH_32f_C1R", "icv_l9_ippsFFTInit_R_64f", "Java_org_opencv_core_Core_multiply_15", "icv_y8_ownscDFTfwd_6_scale_32fc", "_ZN2cv18SimpleBlobDetector6createERKNS0_6ParamsE", "icv_m7_ownsAdd_32f_I", "Java_org_opencv_calib3d_Calib3d_recoverPose_11", "icv_l9_ippiTranspose_32s_C1R", "Java_org_opencv_ml_TrainData_getSampleWeights_10", "icv_y8_owns_cFFTfwd_16_scale_64fc", "icv_l9_owniFilter32f_16u_C3R_g9e9_1", "icv_m7_ownsSub_8u_PosSfs", "_ZNK2cv4cuda10DeviceInfo10ECCEnabledEv", "ippicviDFTGetSize_C_32fc", "Java_org_opencv_features2d_FeatureDetector_detect_13", "Java_org_opencv_objdetect_Objdetect_groupRectangles_11", "icv_y8_ippiResizeCubic_16s_C1R", "icv_l9_ownscDFTfwd_12_64fc", "_ZNK2cv4cuda10DeviceInfo11pciDomainIDEv", "cvCompareHist", "Java_org_opencv_core_Mat_n_1dims", "icv_y8_ownscDFTfwd_14_scale_32fc", "_ZN2cv6detail18selectRandomSubsetEiiRSt6vectorIiSaIiEE", "_ZN2cv6detail21BestOf2NearestMatcher14collectGarbageEv", "icv_l9_ippiMirror_32f_C3R", "_ZN2cv9videostab18FastMarchingMethod8heapDownEi", "_ZN2cv6detail14PlaneWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_S6_RNS_4cuda6GpuMatES9_", "icv_m7_ippiConvert_32f8u_C1R", "Java_org_opencv_core_Mat_nGetD", "icv_m7_owns_rFFTinv_4_32f", "icv_y8_ownFilterRowBorderPipeline_16s_C3R", "icv_m7_ownsrDFTinv_5_64f", "icv_y8_owns_initTabTwd_Large_32f", "icv_l9_ippiNormDiff_L1_32f_C1MR", "icv_l9_owniFilter32f_16s_C1R_g9e9_3", "icv_y8_ownFilterColumnPipeline_16s_C1R_5x5_kerSobelNeg_W7cn", "_ZNK3tbb8internal32allocate_root_with_context_proxy4freeERNS_4taskE", "icv_m7_ownsGetSizeTabDftBase_64f", "ippicviFilterMinBorder_32f_C1R", "icv_l9_ippiSub_16u_C1RSfs", "icv_l9_ippiResizeGetBufferSize_32f", "icv_m7_owniSDDiv_32f_C1IR", "_ZNK2cv2ml6KDTree9getPointsERKNS_11_InputArrayERKNS_12_OutputArrayES7_", "icv_y8_ownRow3Cubic16s", "icv_y8_ippsZero_32f", "icv_y8_owniFlip_8u_C1", "icv_l9_ippiCopy_8u_C3P3R", "_ZN2cv8logPolarERKNS_11_InputArrayERKNS_12_OutputArrayENS_6Point_IfEEdi", "icv_l9_owniGetRectLeft_32f", "_ZN2cv8imdecodeERKNS_11_InputArrayEi", "icv_l9_ippiDilateBorder_32f_C1R", "icv_l9_ippiFilterMinBorder_8u_C1R", "icv_m7_ippiDCTInvGetSize_32f", "cvConvertScaleAbs", "icv_l9_ownFilterRowBorderPipeline_16u_C1R_X", "ippicviResizeCubic_32f_C4R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R_5x5_W7cn", "ippicviMirror_16u_C4IR", "cvGetTickCount", "Java_org_opencv_core_Core_add_11", "icv_l9_cv_ownippiFilterMin_8u_Col", "icv_l9_owniFilterMedianVert1x3_32f_C1R", "_ZNK2cv2ml9StatModel11getVarCountEv", "icv_y8_ippiDCT8x8Inv_32f_C1", "Java_org_opencv_core_Mat_n_1dot", "_ZThn672_N2cv9videostab17TwoPassStabilizer5resetEv", "icv_m7_ownFilterMaxColumnVH_8u_C1R", "icv_m7_ownscDFTfwd_12_scale_32fc", "icv_m7_ippiIntegral_8u32f_C1R", "_ZN2cv13getNumThreadsEv", "icv_y8_ipMirror135_16uC1R", "icv_y8_ownRow4Linear16u", "icv_y8_ippiCrossCorrNorm_8u32f_C1R", "icv_l9_ownNormRel_Inf_32f_C1MR_HSW", "icv_m7_ippiResizeGetSize_64f", "icv_m7_ownscDftInv_Prime6_32fc", "icv_y8_ippiAbsDiff_16u_C1R", "icv_l9_IPP_Erode_C4_8u", "_ZN2cv17FlannBasedMatcherC2ERKNS_3PtrINS_5flann11IndexParamsEEERKNS1_INS2_12SearchParamsEEE", "Java_org_opencv_ml_SVM_getC_10", "icv_m7_owns_cFftInv_Fact4_32fc", "icv_l9_ownscDFTinv_9_64fc", "icv_m7_ownsFFTGetBufSize_R_32f", "icv_y8_ippiResizeGetBufferSize_16s", "_ZN2cv22decomposeHomographyMatERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_S5_", "Java_org_opencv_photo_Photo_createMergeDebevec_10", "ippicviAdd_8u32f_C1IR", "Java_org_opencv_video_BackgroundSubtractor_apply_10", "icv_y8_ippsFFTFwd_CToC_64fc", "icv_m7_ippiNormDiff_L2_32f_C1MR", "icv_y8_ippiNorm_L1_16s_C4R", "_ZN2cv11VideoWriter6fourccEcccc", "icv_m7_ippiDFTInv_CToC_32fc_C1R", "icv_y8_ownResize4Linear32f", "icv_m7_ippsConvert_32f8u_Sfs", "icv_l9_gres_NormL2Diff_8u_C1R", "icv_y8_owns_cFftFwd_Fact8_64fc", "icv_m7_ippsDFTInit_R_64f", "icv_l9_ownErode_32f_C4S", "icv_y8_ippiCopy_32f_C1R", "icv_m7_ownippiFilterMinGetBufferSize_8u_C3R", "ippicviConvert_16u16s_C1RSfs", "icv_l9_ownscDFTfwd_15_32fc", "icv_y8_ownpi_NormL2Diff_16s_C3R", "ippicviFilterGaussianBorder_16u_C1R", "icv_l9_ippsFlip_8u_I", "_ZNK2cv12_OutputArray5clearEv", "icv_y8_Erode_32f_C1S", "icv_l9_ownNormDiff_L1_32f_C1MR_HSW", "icv_l9_ownpi_NormInfDiff_8u_C4R", "_ZN2cv9BFMatcher6createEib", "cvFindHomography", "icv_y8_ownsInitTabDftDir_32f", "_ZN2cv7MomentsC2Edddddddddd", "icv_m7_cv_ownippiFilterMin_8u_Row", "icv_y8_owniDenominator_C1R", "cvClearMemStorage", "icv_m7_ippsDFTGetSize_C_64fc", "icv_y8_ippiThreshold_Val_8u_C1R", "icv_m7_ownscDFTinv_14_64fc", "Java_org_opencv_photo_Photo_fastNlMeansDenoising_13", "icv_l9_ippiNorm_L1_32f_C1R", "_ZN2cv3LDAD1Ev", "icv_y8_owns_cFFTfwd_8_64fc", "ippicviNormRel_Inf_8u_C1MR", "_ZN2cv11RNG_MT199377uniformEff", "icv_y8_owns_cFFT_2_scale_32fc", "_ZNK2cv3ocl7Context8ndevicesEv", "_ZNK2cv3ocl6Device16OpenCL_C_VersionEv", "icv_m7_owns_rFFTfwd_4_scale_64f", "icv_y8_ippiConvert_16u32f_C1R", "icv_m7_ownippiFilterMinBorderReplicate_8u_C4R", "Java_org_opencv_imgproc_Subdiv2D_edgeDst_10", "icv_l9_cv_ownippiFilterMax_16s_Row", "icv_y8_ownsrDFTinv_10_scale_64f", "icv_l9_owniFilter32f_16u_C4R_g9e9_5", "icv_m7_owns_initTabTwdBase_32f", "Java_org_opencv_core_Core_calcCovarMatrix_11", "_ZN2cv6detail11PlaneWarper9warpPointERKNS_6Point_IfEERKNS_11_InputArrayES8_", "_ZSt13set_terminatePFvvE", "icv_l9_ownscDFTfwd_11_scale_64fc", "icv_y8_ippiMirror_16u_C1IR", "__gcclibcxx_demangle_callback", "icv_m7_owns_cFftInv_Fact4_64fc", "_ZN2cv3hal11cvtLabtoBGREPKhmPhmiiiibbb", "ippicviRGBToXYZ_8u_C3R", "_ZN2cv4cuda6GpuMat5setToENS_7Scalar_IdEERNS0_6StreamE", "icv_l9_ippiResizeGetBufferSize_64f", "icv_l9_owniFilter32f_16u_C3R_g9e9_6", "_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv", "_ZN2cvorERKNS_3MatERKNS_7Scalar_IdEE", "_ZN2cv11FileStorage5writeERKNS_6StringERKNS_11_InputArrayE", "icv_m7_ippiCopyConstBorder_32s_C3R", "_ZN2cv3ogl6BufferC2ENS_5Size_IiEEijb", "ippicviDilateBorder_32f_C3R", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getTermCriteria_10", "icv_y8_ownsrDFTinv_10_64f", "Java_org_opencv_calib3d_Calib3d_estimateAffine3D_11", "icv_m7_owniClipRectZeroTail_8u32f_C1R", "Java_org_opencv_imgproc_Imgproc_polylines_10", "_ZN2cv3hal6cmp32sEPKimS2_mPhmiiPv", "icv_y8_ippsDFTFwd_CToC_64fc", "icv_y8_ownFilterMinRow07_32f_C4R", "icv_l9_ippiMirror_16u_C1IR", "Java_org_opencv_imgproc_Imgproc_pyrUp_11", "icv_l9_ippiConvert_8s32s_C1R", "icv_y8_ownippiMorphologyBorderReplicateInMemInit_8u_C1R", "_ZNK2cv3ocl6Device16memBaseAddrAlignEv", "icv_m7_ownFilterMaxRow03_8u_C1R", "_ZN2cv8internal15IntrinsicParamsC1Ev", "icv_l9_ownsrDFTfwd_15_32f", "icv_y8_ownFilterMinRow06_8u_C1R", "_ZN2cv4UMat4diagERKS0_", "icv_y8_ownpi_NormL1_8u_C1R", "icv_y8_ippiMirror_16u_C3IR", "Java_org_opencv_video_KalmanFilter_get_1gain_10", "icv_l9_ownFilterMaxRow07_8u_C3R", "_ZNK2cv4UMat9locateROIERNS_5Size_IiEERNS_6Point_IiEE", "icv_y8_ippiResizeGetBufferSize_32f", "_ZN10__cxxabiv117__pbase_type_infoD1Ev", "Java_org_opencv_photo_Photo_detailEnhance_10", "_ZN2cv9videostab23MotionEstimatorRansacL2C1ENS0_11MotionModelE", "icv_l9_ippiDistanceTransform_5x5_8u32f_C1R", "cvCreateSet", "icv_y8_owniGetRectRight_32f", "_ZN2cv3ogl6Arrays14setAutoReleaseEb", "ippicvsMinEvery_16u", "Java_org_opencv_features2d_KAZE_setNOctaves_10", "icv_l9_ownippiFilterMaxBorderReplicate_32f_C1R", "Java_org_opencv_features2d_BRISK_create_11", "cvOrS", "Java_org_opencv_imgproc_Imgproc_erode_10", "icv_y8_owniFilter_32f_C1R_v8u8_4", "_ZN2cv8superres15SuperResolution14collectGarbageEv", "icv_y8_ippiFilterBorder_16u_C4R", "_ZN2cv9videostab15VideoFileSource5countEv", "Java_org_opencv_ml_DTrees_getUseSurrogates_10", "_ZN3tbb8internal18concurrent_monitor18notify_all_relaxedEv", "ippicviResizeLinear_16s_C4R", "ippicviNormDiff_Inf_16u_C3R", "ippicviMorphologyBorderInit_8u_C4R", "_ZN2cv11HoughLinesPERKNS_11_InputArrayERKNS_12_OutputArrayEddidd", "icv_l9_cv_ownMorphologyBorderConstInMemInit", "icv_y8_ippiMax_8u_C1R", "Java_org_opencv_photo_Photo_createMergeRobertson_10", "_ZN2cv10setRNGSeedEi", "icv_l9_ownscDFTinv_5_32fc", "icv_m7_ownpi_NormL2_16s_C3R", "Java_org_opencv_imgproc_Imgproc_demosaicing_10", "_ZN2cv3hal6max32fEPKfmS2_mPfmiiPv", "_ZN2cv4cuda24printShortCudaDeviceInfoEi", "_ZN2cv12getThreadNumEv", "icv_l9_ippiNormDiff_L1_8u_C3R", "icv_m7_ownpi_CmpLE_16s_C1R", "Java_org_opencv_imgproc_Imgproc_fitLine_10", "_ZN2cv16displayStatusBarERKNS_6StringES2_i", "icv_m7_ownFilterRowBorderPipeline_16s_C3R_5x5_W7cn", "icv_l9_owns_rFFTinv_32_32f", "icv_l9_owniFilter32f_8u_C3R_g9e9_6", "icv_m7_owns_cFFTinv_16_scale_32fc", "icv_l9_owns_initTabBitRev", "Java_org_opencv_core_Core_calcCovarMatrix_10", "icv_m7_ownscDFTfwd_5_64fc", "icv_y8_ownsrDFTinv_6_32f", "Java_org_opencv_video_SparsePyrLKOpticalFlow_getMinEigThreshold_10", "icv_m7_ippiNormRel_L1_16u_C1MR", "icv_m7_ownFilterRowBorderPipeline_16s_C3R_3x3", "_ZN2cv9useOpenVXEv", "_ZN2cv15BriskScaleSpaceD2Ev", "icv_y8_ippiHLSToRGB_8u_C3R", "icv_y8_owns_initDctInv_Fft_32f", "_ZN2cv3ogl6BufferC1Eiiijb", "_ZN2cvanERKNS_3MatERKNS_7Scalar_IdEE", "cvStartWriteStruct", "icv_m7_owniConvert_32f32s_ccode", "icv_y8_ippiFilterGaussianBorder_16s_C3R", "icv_l9_ownFilterColumnPipeline_16s_C1R_3x3_kerSobelNeg_W7cn", "_ZN2cv9SparseMat3ptrEibPm", "icv_m7_ownsGetSizeTabDftInvRec_64f", "cvCalcPCA", "cvMinAreaRect2", "icv_y8_ippsInvSqrt_32f_A21", "icv_y8_owns_cFFTinv_4_64fc", "icv_m7_ippiMorphologyBorderInit_32f_C3R", "_ZN2cv7imwriteERKNS_6StringERKNS_11_InputArrayERKSt6vectorIiSaIiEE", "icv_y8_cv_ownippiFilterMax_8u_Row", "_ZN3tbb8internal19itt_load_pointer_v3EPKv", "_ZN2cv8superres15SuperResolutionC2Ev", "_ZNK2cv2ml6KDTree11findNearestERKNS_11_InputArrayEiiRKNS_12_OutputArrayES7_S7_S7_", "icv_y8_ippiFilterBorderGetSize", "icv_y8_owniFilter_32f_C3R_v8u8_2NA", "icv_y8_ownsrDftInv_PrimeFact_64f", "_ZNK2cv3ocl6Device16image2DMaxHeightEv", "ippicviDFTInit_C_32fc", "ippicviNorm_Inf_32f_C4R", "_ZN2cv3hal11cvtBGRtoHSVEPKhmPhmiiiibbb", "_ZN2cv8superres27createSuperResolution_BTVL1Ev", "ippicvsMinEvery_64f", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_5x5_H9L9cn", "cvConvexHull2", "_ZN2cv8integralERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_y8_ippiCompare_16s_C1R", "icv_m7_ippiAlphaPremul_8u_AC4R", "icv_m7_owns_cFFTinv_32_64fc", "icv_y8_ownFilterColumnPipeline_32f_C1R_5x5_W7cn", "icv_m7_ownscDftInv_Fact7_32fc", "cvWriteReal", "icv_l9_ownippiFilterMaxBorderReplicate_8u_C1R", "_ZNK2cv3SVD9backSubstERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv9videostab15VideoFileSource6heightEv", "icv_m7_ippiResizeCubic_16s_C4R", "_ZN2cv2ml9ParamGridC1Eddd", "icv_y8_owniSwapChannels_16u_C3C4R", "cvSubstituteContour", "_ZN2cv12VideoCaptureC2ERKNS_6StringEi", "_ZN3tbb8internal6market22remove_arena_from_listERNS0_5arenaE", "Java_org_opencv_ml_SVMSGD_setOptimalParameters_10", "icv_y8_ippiAdd_8u32f_C1IMR", "icv_y8_ownResize4Cubic16u", "Java_org_opencv_ml_SVM_getDegree_10", "icv_y8_myXYZToRGB_32f_C3R", "icv_l9_ippiMirror_8u_C4IR", "ippicviCompare_16s_C1R", "ippicviMin_16s_C1R", "_ZN2cv9videostab36TranslationBasedLocalOutlierRejector7processENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayE", "icv_y8_ownRow3Linear16u", "Java_org_opencv_android_Utils_nMatToBitmap", "_ZN2cv3ogl6Buffer11unmapDeviceERNS_4cuda6StreamE", "icv_l9_ownFilterMinRowVH_8u_C1R", "cvWriteRawData", "cvGetRootFileNode", "_ZN3tbb8internal3rml14private_worker14start_shutdownEv", "icv_y8_ownFilterMaxRow03_32f_C1R", "ippicviTranspose_32f_C3IR", "icv_m7_owniGetRectRight_32f", "cvHaarDetectObjects", "_ZN2cv9videostab17TwoPassStabilizer5resetEv", "_ZN3tbb8internal9schedulerD1Ev", "icv_m7_ownsMulC_16s_I", "icv_m7_ownscDFTinv_12_scale_64fc", "cvCreateTrackbar2", "_ZN2cv8internal18WriteStructContextD2Ev", "_ZN2cv25createLineSegmentDetectorEiddddddi", "ippicviNormDiff_Inf_32f_C1MR", "icv_l9_owns_rFFTinv_8_scale_32f", "icv_y8_ippsCopy_8u", "Java_org_opencv_features2d_Features2d_drawMatchesKnn_11", "icv_m7_ownippiFilterMinGetBufferSize_8u_C1R", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale3_11", "icv_y8_ippsDFTFwd_RToPack_32f", "icv_l9_ownpi_Sum_16u_C1R", "icv_y8_ippiNorm_L1_16u_C4R", "icv_y8_ownpi_NormL1_16s_C4R", "icv_y8_ownFilterMinRow02_32f_C4R", "icv_l9_ippiMax_32f_C1R", "Java_org_opencv_calib3d_Calib3d_initCameraMatrix2D_11", "_ZNK2cv5MatOp6matmulERKNS_7MatExprES3_RS1_", "_ZN2cv3ocl7ProgramaSERKS1_", "_ZN2cv3hal9magnitudeEPKfS2_Pfi", "Java_org_opencv_calib3d_StereoSGBM_setP1_10", "icv_l9_ownFilterMinRow15_32f_C3R", "icv_l9_ownFilter32f_16u_C3R_g9e9", "cvFindType", "_ZN2cv3ocl13ProgramSourceC1EPKc", "_ZNK2cv6detail17BundleAdjusterRay25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_X", "icv_l9_ownFilterMinColumn05_32f_C1R", "icv_l9_owns_rFFTfwd_8_32f", "icv_l9_ownFilterMaxRow13_32f_C4R", "icv_y8_myRGBToHLS_8u_C3R", "icv_l9_ownpi_NormL1Diff_32f_C3R", "icv_l9_ownMean_StdDev_16u_C1MR_HSW", "icv_l9_ownFilterMinRow04_8u_C3R", "Java_org_opencv_imgproc_CLAHE_setClipLimit_10", "Java_org_opencv_features2d_BOWTrainer_delete", "cvClearGraph", "Java_org_opencv_features2d_Params_set_1maxCircularity_10", "icv_m7_ippiFilterBorder_16s_C3R", "cvCountNonZero", "icv_l9_ippsMagnitude_64f", "icv_y8_ippiFilterColumnPipelineGetBufferSize_16u_C1R", "_ZN9CvLevMarq9updateAltERPK5CvMatRPS0_S5_RPd", "Java_org_opencv_calib3d_Calib3d_decomposeProjectionMatrix_10", "cvHoughCircles", "icv_l9_ippiCopyConstBorder_16s_C4R", "icv_y8_ownFilterBorder32f_8u_C1R", "Java_org_opencv_core_Core_SVDecomp_10", "icv_l9_ownFilter_32f_C3R_g9e9", "Java_org_opencv_core_Core_trace_10", "Java_org_opencv_core_Mat_nGetS", "icv_l9_ownFilterColumnPipeline_16s_C1R_5x5_kerSobelNeg_W7cn", "icv_y8_ownsrDFTinv_11_scale_32f", "icv_l9_ippsFree", "_ZNK2cv17CascadeClassifier18isOldFormatCascadeEv", "ippicviMulC_32f_C1IR", "icv_m7_ownMorphologyBorderInit_32f", "icv_m7_ownRow1Linear16s", "icv_l9_ippsMaxEvery_8u", "_ZN2cv5flann16SavedIndexParamsC1ERKNS_6StringE", "icv_y8_owniFilterPrewittHorizBorder2_32f_C1R", "icv_l9_ippiMirror_16u_C4R", "icv_m7_ippiFilterRowBorderPipelineGetBufferSize_16u_C3R", "Java_org_opencv_imgproc_Imgproc_ellipse_11", "icv_l9_ippiCopyReplicateBorder_16u_C1R", "icv_l9_ippiFilterRowBorderPipelineGetBufferSize_32f_C1R", "ippicviTranspose_16s_C3R", "icv_l9_ownsGetSizeTabDftBase_64f", "ippicviFilterSobelNegVertBorderGetBufferSize", "icv_l9_ippiNormRel_Inf_32f_C1MR", "icv_y8_ippiSet_32f_C1R", "icv_m7_ippiNorm_L2_16s_C1R", "icv_l9_ippiMirror_16u_C3IR", "icv_l9_owniFilter32f_16s_C4R_g9e9_5", "icv_l9_ownNorm_L1_8u_C1MR_HSW", "icv_l9_owniConvert_16s16u_ccode", "icv_m7_ippiCopy_32f_AC4C3R", "icv_l9_ownFilterColumnPipeline_32f_C1R_3x3_G9E9", "icv_l9_ippiNorm_L1_8u_C4R", "icv_y8_ippiXYZToRGB_8u_C3R", "icv_y8_ippiNormDiff_L1_16u_C1MR", "icv_l9_owniGetRectRight_16s", "icv_y8_ownColCubic16s", "icv_m7_ippiConvert_8u16u_C1R", "icv_l9_ownFilterMaxRow06_8u_C4R", "icv_y8_ippiResizeLinear_32f_C1R", "_ZN2cv8scaleAddERKNS_11_InputArrayEdS2_RKNS_12_OutputArrayE", "_ZN3tbb4task28internal_decrement_ref_countEv", "_ZN2cvanERKNS_3MatES2_", "icv_l9_ippsConvert_32f8s_Sfs", "cvGraphVtxDegreeByPtr", "Java_org_opencv_core_TickMeter_getTimeTicks_10", "ippicviNorm_L2_16s_C3R", "_ZN2cv8CholeskyEPdmiS0_mi", "ippicviFilterGaussianBorder_8u_C3R", "_Z19Mat_to_vector_PointRN2cv3MatERSt6vectorINS_6Point_IiEESaIS4_EE", "icv_m7_ippiSwapChannels_16u_C4C3R", "icv_m7_ippiAddSquare_32f_C1IMR", "icv_l9_ownps_Sub_16u_Sfs", "_ZNK2cv4cuda7HostMem18createGpuMatHeaderEv", "icv_y8_ownscDFTinv_9_scale_32fc", "Java_org_opencv_video_DualTVL1OpticalFlow_create_11", "icv_l9_ownFilterMinRow13_8u_C4R", "Java_org_opencv_ml_EM_trainEM_11", "icv_m7_ippiMean_8u_C3CMR", "cvUpdateWindow", "icv_m7_ippiFilterGaussianBorder_32f_C1R", "icv_l9_ownFilterMinColumn01_32f_C1R", "_ZN2cv12VideoCaptureC1ERKNS_6StringE", "Java_org_opencv_core_Mat_n_1assignTo__JJ", "icv_m7_ippiAddProduct_16u32f_C1IR", "icv_y8_ownsInitDftConv_32f", "Java_org_opencv_features2d_ORB_setNLevels_10", "_ZN2cv3hal13addWeighted8uEPKhmS2_mPhmiiPv", "_ZN3tbb8internal33throw_bad_last_alloc_exception_v4Ev", "icv_m7_ippiFilterLaplacianGetBufferSize_8u16s_C1R", "icv_y8_owniDenominatorFull_C1R", "icv_m7_ippiMax_8u_C1R", "_ZN3tbb8internal6market33mandatory_concurrency_enable_implEPNS0_5arenaEPb", "icv_m7_ownippiDilateBorder_8u_C1R", "icv_y8_ownpi_NormL2Diff_16s_C1R", "icv_l9_ownpiDotProd_16s64f_C1R", "ippicviFilterBorderGetSize", "_ZN2cv8superres24createFrameSource_CameraEi", "_ZN2cv3absERKNS_3MatE", "icv_l9_ownResize4Linear32f", "icv_m7_ownRow4Cubic16s", "icv_m7_ippiNormRel_Inf_16u_C1R", "icv_m7_ownsMul_16s_PosSfs", "Java_org_opencv_imgproc_Imgproc_accumulate_11", "icv_m7_ippiSwapChannels_32f_C4C3R", "Java_org_opencv_calib3d_Calib3d_estimateAffinePartial2D_10", "_ZN2cv13batchDistanceERKNS_11_InputArrayES2_RKNS_12_OutputArrayEiS5_iiS2_ib", "icv_m7_ippiSqrDistanceNorm_8u32f_C1R", "Java_org_opencv_features2d_Params_set_1filterByArea_10", "_Z19Mat_to_vector_floatRN2cv3MatERSt6vectorIfSaIfEE", "Java_org_opencv_ml_TrainData_getVarType_10", "icv_m7_owns_cFFTinv_16_64fc", "icv_y8_ownFilterMinRow01_32f_C1R", "_ZN2cv9SparseMat3HdrC1EiPKii", "_ZNK2cv3ocl7Program9getPrefixEv", "ippicviNormDiff_L1_16u_C1MR", "_ZNK3tbb8internal32allocate_root_with_context_proxy8allocateEm", "icv_y8_ippiErodeBorder_8u_C3R", "Java_org_opencv_core_Mat_n_1copyTo__JJ", "icv_l9_ippiCopyReplicateBorder_16u_C3R", "icv_y8_ippiCrossCorrNormGetBufferSize", "Java_org_opencv_imgproc_Subdiv2D_getLeadingEdgeList_10", "icv_l9_ippiSqrDistanceNorm_8u32f_C1R", "icv_l9_ippiFilterSobelNegVertBorder_32f_C1R", "icv_l9_ownpi_NormInf_16u_C1R", "Java_org_opencv_imgproc_Imgproc_warpPerspective_10", "icv_l9_ownpi_NormInf_16s_C4R", "icv_y8_ownFilterMaxColumn01_32f_C1R", "_ZN2cv2ml6KDTreeC2ERKNS_11_InputArrayES4_b", "icv_l9_owniFilter32f_8u_C1R_g9e9_3", "_ZNK2cv2ml9TrainData8getNamesERSt6vectorINS_6StringESaIS3_EE", "_ZN2cv20minEnclosingTriangleERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_l9_owns_cFFTfwd_4_scale_64fc", "_ZN2cv4cuda6StreamC1Ev", "ippicviNormDiff_L1_32f_C3R", "icv_m7_owns_sDctInv_Conv_32f", "ippicviSub_16s_C1RSfs", "icv_y8_ownpi_NormInf_16u_C1R", "icv_y8_ippiMean_32f_C1R", "_ZN2cv27computeRecallPrecisionCurveERKSt6vectorIS0_INS_6DMatchESaIS1_EESaIS3_EERKS0_IS0_IhSaIhEESaIS9_EERS0_INS_6Point_IfEESaISF_EE", "icv_y8_ippiMirror_32s_C3R", "icv_m7_ownsrDFTfwd_14_scale_32f", "_ZN2cv5flann5Index9knnSearchERKNS_11_InputArrayERKNS_12_OutputArrayES7_iRKNS0_12SearchParamsE", "icv_y8_ownpi_NormL2_32f_C4R", "icv_l9_ownpi_NormL1Rel_16u_C1R", "icv_y8_ownscDFTfwd_15_scale_32fc", "icv_y8_ownsAddC_16s_I_PosSfs", "ippicviDFTGetSize_R_32f", "icv_l9_ippiNormRel_Inf_8u_C1R", "_ZN2cv3ogl6Buffer7releaseEv", "icv_l9_ippiTranspose_16s_C1R", "icv_l9_ippiSwapChannels_32s_C4R", "icv_y8_owns_cFFT_1_64fc", "cvDisplayOverlay", "_ZN2cvlsERNS_11FileStorageERKNS_6StringE", "icv_l9_ownscDftFwd_Prime5_32fc", "Java_org_opencv_imgproc_Imgproc_connectedComponentsWithStats_10", "icv_y8_gres_NormL1_16u_C3R", "_ZN2cv17triangulatePointsERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayE", "_ZNK2cv17DescriptorMatcher5matchERKNS_11_InputArrayES3_RSt6vectorINS_6DMatchESaIS5_EES3_", "cvAddS", "_ZN2cv3maxERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_y8_ippsFFTGetSize_C_64fc", "ippicviMean_8u_C1R", "_ZN2cv5flann17KMeansIndexParamsC2EiiN7cvflann20flann_centers_init_tEf", "ippicviSqrIntegral_8u32s64f_C1R", "icv_y8_ippiNormDiff_L2_8u_C3R", "icv_y8_ippsMaxEvery_8u", "icv_m7_Dilate_32f_C3S", "icv_m7_ownscDFTinv_10_64fc", "cvSetSeqReaderPos", "icv_m7_ippiAdd_16u32f_C1IMR", "icv_l9_ownFilterMinRow11_8u_C3R", "icv_l9_ippiCopyConstBorder_32f_C3R", "icv_m7_ippsZero_32fc", "_ZN2cv3ogl9Texture2D7releaseEv", "icv_l9_ownscDftInv_Fact11_32fc", "icv_y8_owniFilterSobelVertSecondBorder2_32f_C1R", "_ZNK2cv3ocl6Device21maxConstantBufferSizeEv", "icv_l9_ippiAddSquare_32f_C1IMR", "_ZN2cv12VideoCaptureC2ERKNS_6StringE", "ippicviFilterBorder_8u_C4R", "icv_y8_ownippiDilateBorder_8u_C4R", "ippicviMax_16u_C1R", "_ZN2cv3Mat3eyeENS_5Size_IiEEi", "icv_l9_ownFilterMinRow15_8u_C3R", "Java_org_opencv_ml_DTrees_setRegressionAccuracy_10", "_ZNK2cv22SimpleBlobDetectorImpl9findBlobsERKNS_11_InputArrayES3_RSt6vectorINS0_6CenterESaIS5_EE", "icv_l9_ippiThreshold_LTVal_16s_C1IR", "_ZN2cv3hal7invSqrtEPKdPdi", "Java_org_opencv_features2d_Params_get_1minInertiaRatio_10", "_ZN2cv11convertMapsERKNS_11_InputArrayES2_RKNS_12_OutputArrayES5_ib", "icv_y8_owniAutoSSFull_C1R", "ippicviResizeCubic_16s_C1R", "_Z21Mat_to_vector_Point2fRN2cv3MatERSt6vectorINS_6Point_IfEESaIS4_EE", "_ZN2cv9videostab15MotionInpainter7inpaintEiRNS_3MatES3_", "icv_y8_ownsrDftFwdRecombine_32f", "icv_m7_owns_initTabTwdRealRec_64f", "_ZN10__cxxabiv120__si_class_type_infoD1Ev", "Java_org_opencv_imgproc_Imgproc_initWideAngleProjMap_11", "icv_l9_ownFilterColumnPipeline_32f_C1R_X_G9E9", "_ZN2cv3ocl8PlatformD1Ev", "_ZNK2cv2ml6KDTree14findOrthoRangeERKNS_11_InputArrayES4_RKNS_12_OutputArrayES7_S7_", "Java_org_opencv_imgproc_Imgproc_fillPoly_10", "_ZN2cv6detail14PlaneWarperGpu9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RNS_4cuda6GpuMatES9_", "_Z18vector_Rect_to_MatRSt6vectorIN2cv5Rect_IiEESaIS2_EERNS0_3MatE", "_ZN2cv3hal8recip64fEPKdmS2_mPdmiiPv", "icv_m7_ippiNormDiff_L2_8u_C3R", "icv_m7_ippiNorm_L1_16u_C1MR", "icv_l9_ippsCopy_32f", "icv_m7_ippiThreshold_32f_C1R", "icv_l9_owns_cFFTinv_32_scale_64fc", "Java_org_opencv_imgproc_LineSegmentDetector_detect_10", "icv_y8_ippiFilterBorder_16u_C1R", "icv_y8_ownCubicKernel1", "_ZNK2cv18SimpleBlobDetector6Params5writeERNS_11FileStorageE", "icv_l9_ippiCopyReplicateBorder_16s_C4IR", "ippicviResizeGetBufferSize_32f", "icv_l9_ownsrDFTinv_14_32f", "icv_l9_ippiMarkSpecklesGetBufferSize", "_ZNK2cv3ocl6Device14doubleFPConfigEv", "icv_m7_ownRow3Linear16u", "icv_y8_ownCalcBorderR3Linear64f", "icv_l9_ownFilterRowBorderPipeline_16u_C3R", "icv_m7_ippiMean_32f_C3R", "_ZN2cv9videostab28KeypointBasedMotionEstimator8estimateERKNS_3MatES4_Pb", "_ZN3tbb8internal6market21app_parallelism_limitEv", "_ZN2cvgeERKNS_3MatES2_", "_ZN2cv3hal4or8uEPKhmS2_mPhmiiPv", "_ZN2cv9videostab18InpaintingPipeline19setStabilizedFramesERKSt6vectorINS_3MatESaIS3_EE", "Java_org_opencv_core_Core_flip_10", "Java_org_opencv_ml_RTrees_getVarImportance_10", "icv_y8_ippiFilterGaussianBorder_8u_C1R", "icv_l9_ownscDFTfwd_5_64fc", "icv_l9_ippiMean_StdDev_8u_C1MR", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_X", "icv_l9_ippiNormRel_L2_32f_C1R", "_ZNK2cv3ocl6Device21nativeVectorWidthLongEv", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_13", "icv_y8_ownps_Add_16u_Sfs", "cvColorToScalar", "icv_y8_ownsrDftInvRecombine_32f", "_ZNK2cv4cuda10DeviceInfo19maxSurface2DLayeredEv", "_ZN2cv12sqrBoxFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiNS_5Size_IiEENS_6Point_IiEEbi", "_ZN2cv3ogl6Buffer11unmapDeviceEv", "cvWaitKey", "icv_m7_Dilate_8u_C4S", "icv_l9_ownFilterMinRow11_8u_C1R", "Java_org_opencv_imgproc_Imgproc_HuMoments_10", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_12", "icv_y8_ownFilterMaxRow13_32f_C4R", "icv_m7_ippiSum_16s_C1R", "icv_y8_owniAutoCorrFull_C1R", "ippicviDistanceTransform_5x5_8u32f_C1R", "_ZNK2cv12_OutputArray9fixedSizeEv", "icv_l9_ownsrDftFwdRecombine_64f", "_ZN2cv6imshowERKNS_6StringERKNS_11_InputArrayE", "icv_l9_owns_rFFTfwd_4_32f", "icv_y8_ownscDFTfwd_9_scale_32fc", "_ZN2cv4cuda25getCudaEnabledDeviceCountEv", "icv_m7_ownippiDilateBorder_32f_C4R", "icv_m7_ippiMirror_16u_C1IR", "_ZN3tbb8internal24DoOneTimeInitializationsEv", "icv_y8_ownFilterMaxRow15_32f_C1R", "icv_m7_owniCrossCorrValid_NormLevel_8u_C1R", "icv_y8_ownFilterMinColumn01_32f_C1R", "icv_l9_owns_cFFT_1_32fc", "icv_l9_ippiCopyReplicateBorder_16s_C1IR", "Java_org_opencv_core_Core_idft_11", "icv_y8_ippiMorphologyBorderGetSize_8u_C3R", "icv_y8_owns_cFftFwd_Fact4_64fc", "ippicviFilterBorder_16u_C4R", "icv_l9_ippiResizeGetSrcOffset_16u", "icv_m7_ownsMul_16s", "icv_m7_ownsrDFTfwd_11_scale_32f", "ippicviNormDiff_L1_32f_C1MR", "icv_l9_ownsrDFTinv_15_64f", "icv_y8_owns_rFFTinv_16_scale_32f", "_ZN3tbb8internal6market12wait_workersEv", "icv_l9_ownscDFTfwd_15_scale_64fc", "Java_org_opencv_photo_MergeMertens_setExposureWeight_10", "Java_org_opencv_core_Core_transpose_10", "icv_l9_ownFilterMaxRow09_8u_C4R", "icv_y8_ippiNormRel_L2_16u_C1R", "Java_org_opencv_ml_EM_delete", "icv_l9_ippiNormRel_L2_8u_C1MR", "icv_l9_ownFilter_32f_C1R_g9e9", "_ZN2cv6detail14FeaturesFinderclERKNS_11_InputArrayERSt6vectorINS0_13ImageFeaturesESaIS6_EERKS5_IS5_INS_5Rect_IiEESaISB_EESaISD_EE", "icv_m7_owns_cRealRecombine_64f", "icv_l9_ownsAdd_8u_PosSfs", "icv_l9_ippiSet_8u_C1R", "cvNextGraphItem", "icv_m7_ippiAddSquare_16u32f_C1IMR", "icv_m7_owns_cFftFwd_Fact8_32fc", "_ZSt13get_terminatev", "_ZSt15set_new_handlerPFvvE", "_ZN2cv9SparseMat7newNodeEPKim", "icv_y8_owns_cRealRecombine_64f", "icv_l9_ownpi_NormL2Diff_16s_C4R", "icv_l9_ippiThreshold_Val_32f_C1R", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "Java_org_opencv_calib3d_Calib3d_Rodrigues_10", "_ZN2cv8integralERKNS_11_InputArrayERKNS_12_OutputArrayES5_ii", "icv_y8_ippsFFTInv_PackToR_32f", "_ZN2cv11RNG_MT19937cviEv", "_ZN2cv11FileStorageD1Ev", "_ZN2cv6divideERKNS_11_InputArrayES2_RKNS_12_OutputArrayEdi", "_ZN10__cxxabiv119__pointer_type_infoD2Ev", "Java_org_opencv_photo_AlignMTB_shiftMat_10", "_ZN2cv9Feature2D7computeERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EERKNS_12_OutputArrayE", "_ZN2cv4flipERKNS_11_InputArrayERKNS_12_OutputArrayEi", "icv_m7_ownsrDftInv_Conv_32f", "Java_org_opencv_imgproc_Imgproc_pointPolygonTest_10", "Java_org_opencv_features2d_AgastFeatureDetector_create_11", "icv_l9_ippsSortDescend_8u_I", "icv_l9_ownsrDFTfwd_7_32f", "ippicviSub_16u_C1RSfs", "Java_org_opencv_features2d_DescriptorExtractor_create_10", "_ZN2cvplERKNS_3MatERKNS_7MatExprE", "icv_l9_ippiTranspose_32f_C1IR", "icv_l9_ownscDFTinv_15_scale_64fc", "Java_org_opencv_imgproc_Subdiv2D_nextEdge_10", "_ZN2cv7MatExprC1ERKNS_3MatE", "icv_m7_ippiHistogramUniformInit", "icv_m7_ownscDFTfwd_5_scale_64fc", "icv_y8_ownCubicKernel3", "Java_org_opencv_ml_DTrees_create_10", "icv_l9_ownpi_NormL1Diff_32f_C1R", "cvThreshHist", "_ZN2cv21BaseCascadeClassifierD2Ev", "icv_l9_ownscDftFwd_Prime8_64fc", "icv_y8_ippiNorm_L1_16u_C1R", "icv_l9_owniFilter32f_16s_C1R_g9e9_6", "icv_l9_ownippiFilterMinGetBufferSize_16u_C1R", "icv_y8_ownFilterMinColumn01_8u_C1R", "icv_y8_ownResize1Cubic16u", "Java_org_opencv_video_KalmanFilter_get_1errorCovPre_10", "icv_l9_owns_cFftInv_Fact8_32fc", "_ZN2cv20saveWindowParametersERKNS_6StringE", "Java_org_opencv_core_Mat_n_1inv__J", "cvGetTickFrequency", "_ZN2cv7momentsERKNS_11_InputArrayEb", "_ZNK2cv11_InputArray6offsetEi", "icv_m7_ownFilterMinRow09_8u_C4R", "icv_y8_ownippiFilterMedian_16s_C1R_1x7", "cvInitImageHeader", "icv_m7_ownscDFTinv_5_32fc", "cvDestroyAllWindows", "_ZN2cv3ocl6KernelC2EPKcRKNS0_13ProgramSourceERKNS_6StringEPS7_", "icv_m7_ownFilterMaxRow13_8u_C3R", "Java_org_opencv_video_FarnebackOpticalFlow_getNumIters_10", "ippicviNorm_L2_16s_C4R", "Java_org_opencv_objdetect_HOGDescriptor_get_1nlevels_10", "_ZN3tbb8internal17generic_scheduler17prepare_task_poolEm", "icv_m7_ippiResizeGetSrcOffset_64f", "icv_l9_ownscDFTinv_5_64fc", "_ZNK2cv3Mat3invEi", "_ZN2cvcoERKNS_3MatE", "icv_l9_owns_sDctInv_Fft_32f", "Java_org_opencv_imgproc_Imgproc_pyrMeanShiftFiltering_10", "icv_l9_ownFilterMaxRow11_32f_C4R", "cvFillPoly", "_ZNK2cv4cuda10DeviceInfo14memoryBusWidthEv", "_ZN2cv6detail21leaveBiggestComponentERSt6vectorINS0_13ImageFeaturesESaIS2_EERS1_INS0_11MatchesInfoESaIS6_EEf", "icv_l9_ownFilterMinRow02_32f_C3R", "icv_l9_ownippiFilterMinGetBufferSize_32f_C1R", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_10", "ippicviConvert_16s32s_C1R", "_ZN2cv3hal8split16uEPKtPPtii", "ippicviCopy_32f_AC4C3R", "icv_y8_innerHLSToRGB_8u_C3R", "icv_m7_innerRGBToGray_32f_C3C1R", "icv_y8_ownpi_CmpEQ_8u_C1R", "Java_org_opencv_imgproc_Imgproc_accumulateProduct_11", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_11", "_ZN2cv9videostab17TwoPassStabilizer27estimateStabilizationMotionEv", "ippicviConvert_16u32s_C1R", "icv_l9_ippiHSVToRGB_8u_C3R", "icv_m7_ownsrDftFwd_Conv_64f", "_ZN2cv3hal11cvtXYZtoBGREPKhmPhmiiiib", "_ZN2cv9videostab14StabilizerBase5setUpERKNS_3MatE", "icv_m7_ippiSqrDistanceNorm_32f_C1R", "_ZN2cv8Subdiv2D6VertexC2ENS_6Point_IfEEbi", "icv_y8_ippiMean_8u_C1MR", "icv_l9_ippiCopy_8u_C3R", "icv_l9_owniCopy8uas", "icv_m7_ippiSwapChannels_32s_C3R", "icv_l9_ippsDFTInv_PackToR_32f", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_X", "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", "icv_l9_ownscDFTinv_10_64fc", "ippicviSum_16u_C1R", "Java_org_opencv_objdetect_HOGDescriptor_delete", "_ZN2cv23evaluateFeatureDetectorERKNS_3MatES2_S2_PSt6vectorINS_8KeyPointESaIS4_EES7_RfRiRKNS_3PtrINS_9Feature2DEEE", "icv_l9_ownippsCnvrtNear_32f8u_AVX", "icv_l9_ownPrepareTaps16s_16s_h9l9", "ippicviSum_32f_C3R", "_ZN2cv8superres13convertToTypeERKNS_3MatEiRS1_S4_", "_ZN2cv12VideoCaptureD1Ev", "icv_l9_ippiCompare_16s_C1R", "_ZN2cv10BriskLayerC2ERKNS_3MatEff", "Java_org_opencv_photo_AlignMTB_computeBitmaps_10", "_ZN2cv11writeScalarERNS_11FileStorageEi", "icv_y8_ippiCopyReplicateBorder_32f_C1R", "cvDilate", "_ZN2cv2ml9ParamGridC1Ev", "icv_l9_ippiFilterScharrVertMaskBorderGetBufferSize", "Java_org_opencv_features2d_AKAZE_setDescriptorChannels_10", "icv_y8_ownsrDFTinv_9_64f", "icv_y8_ownResize3Cubic16s", "Java_org_opencv_imgproc_Imgproc_equalizeHist_10", "icv_y8_ippiThreshold_LTVal_16s_C1IR", "icv_y8_ownippiFilterMinGetBufferSize_32f_C3R", "Java_org_opencv_core_Core_batchDistance_10", "cvGetSpatialMoment", "_Z17Mat_to_vector_MatRN2cv3MatERSt6vectorIS0_SaIS0_EE", "_ZN2cv4swapERNS_3MatES1_", "Java_org_opencv_imgproc_Imgproc_fillPoly_11", "icv_y8_ippiResizeCubic_32f_C1R", "Java_org_opencv_video_BackgroundSubtractorMOG2_setComplexityReductionThreshold_10", "icv_m7_ippiTranspose_16s_C4R", "icv_l9_ippiCopy_16s_C1MR", "_ZN2cv3hal9absdiff8sEPKamS2_mPamiiPv", "__register_frame_table", "_ZN2cv3ocl7ContextC1Ev", "_ZN2cv18reprojectImageTo3DERKNS_11_InputArrayERKNS_12_OutputArrayES2_bi", "ippicviNormDiff_L2_16u_C1R", "_ZNK2cv3Mat5crossERKNS_11_InputArrayE", "icv_y8_owniTranspose8u_C1R_core2", "icv_y8_ownFilterMinRow02_32f_C1R", "icv_m7_ownFilterMinRow01_8u_C4R", "icv_y8_ownscDFTinv_10_scale_64fc", "icv_l9_ippiSet_16s_C3MR", "own_ipps_sCos_L9EPnnn", "_ZNK2cv25BOWImgDescriptorExtractor14descriptorSizeEv", "icv_l9_owniConvert_32s16s_C1RSfs", "Java_org_opencv_photo_Photo_inpaint_10", "icv_y8_Dilate_8u_C4S", "Java_org_opencv_imgproc_Imgproc_blur_10", "_ZN2cv4cuda6GpuMatC1ERKS1_NS_5RangeES4_", "_ZNK2cv21DetectionBasedTracker10getObjectsERSt6vectorINS0_9ExtObjectESaIS2_EE", "cvCreateImageHeader", "_ZNK2cv11_InputArray8channelsEi", "ippicviNorm_Inf_32f_C1MR", "icv_l9_gres_NormL1_16u_C3R", "icv_y8_ippiAddWeighted_32f_C1IMR", "_ZN2cv25fastNlMeansDenoisingMultiERKNS_11_InputArrayERKNS_12_OutputArrayEiifii", "icv_y8_ownsrDFTinv_12_32f", "icv_l9_ownFilterMaxRow04_32f_C1R", "own_ipps_sLn_L9EPnnn", "ippicviFilterMedianBorder_32f_C1R", "icv_y8_ownRow4Linear16s", "_ZNK2cv17DescriptorMatcher11radiusMatchERKNS_11_InputArrayES3_RSt6vectorIS4_INS_6DMatchESaIS5_EESaIS7_EEfS3_b", "icv_l9_ownFilterMaxRow03_32f_C1R", "_ZN2cv3ocl6DeviceC1EPv", "_ZN2cv19createTonemapDurandEfffff", "Java_org_opencv_features2d_KAZE_setExtended_10", "Java_org_opencv_features2d_AKAZE_getDescriptorType_10", "icv_y8_ownpi_NormL1_8u_C4R", "own_ipps_dLn_E7HAynn", "_ZN3tbb4task4selfEv", "icv_y8_cv_ownippiFilterMin_32f_Msk", "icv_m7_ippiFilterMinBorderGetBufferSize", "ippicviFilterMinBorder_32f_C3R", "cvAvgSdv", "icv_m7_ownFilterMaxRow11_8u_C3R", "cvApproxPoly", "Java_org_opencv_imgproc_Imgproc_arcLength_10", "icv_l9_ownFilterMinRow07_32f_C1R", "cvGetElemType", "icv_l9_ippiResizeGetSize_64f", "Java_org_opencv_calib3d_Calib3d_projectPoints_10", "Java_org_opencv_features2d_BFMatcher_BFMatcher_10", "icv_y8_ownscDFTinv_5_scale_32fc", "icv_y8_ownpi_NormL1Diff_16s_C1R", "icv_y8_owniConvert_32s32f_C1R", "icv_m7_ownsMul_64fc", "icv_y8_Dilate_8u_C3S", "icv_y8_ippsFFTFwd_RToPack_32f", "icv_m7_ippiFilterLaplacianBorder_8u16s_C1R", "icv_l9_ownscDFTinv_11_32fc", "Java_org_opencv_ml_StatModel_train_10", "icv_l9_owniCmpEq_16u_C1R", "_ZN2cv5flann12SearchParamsC2Eifb", "icv_m7_ippiSet_16u_C4MR", "_ZN2cv3Mat19setDefaultAllocatorEPNS_12MatAllocatorE", "Java_org_opencv_ml_ANN_1MLP_setTrainMethod_10", "Java_org_opencv_ml_TrainData_setTrainTestSplitRatio_10", "Java_org_opencv_imgproc_Imgproc_isContourConvex_10", "icv_y8_ippiMarkSpeckles_8u_C1IR", "icv_l9_owniFilter32f_8u_C3R_g9e9_2", "icv_l9_ownps_Add_16u_Sfs", "icv_l9_ownFilterRowBorderPipeline_32f_C3R_5x5_G9E9cn", "icv_l9_owns_cFFTfwd_64_scale_32fc", "_ZN2cv8superres9arrGetMatERKNS_11_InputArrayERNS_3MatE", "_ZN3tbb18task_group_context12set_priorityENS_10priority_tE", "icv_y8_owniFilterNegSobelVertBorder2_8u16s_C1R", "icv_y8_ippiThreshold_Val_16s_C1R", "_ZN2cv3ogl6BufferC2ERKNS_11_InputArrayENS1_6TargetEb", "_ZN2cv3hal5cmp8uEPKhmS2_mPhmiiPv", "icv_m7_ippiResizeCubic_16u_C1R", "icv_m7_owniAutoSSFull_C1R", "icv_l9_ippiSum_32f_C3R", "icv_y8_ownippiFilterMaxBorderReplicate_32f_C4R", "cvWriteString", "icv_m7_ownFilterMinRow09_32f_C1R", "icv_m7_ownscDftInv_PrimeFact_32fc", "icv_l9_ippiResizeLinearInit_16s", "icv_m7_ippiAddC_32f_C1R", "ippicviNormDiff_Inf_16s_C1R", "ippicviNormDiff_Inf_32f_C4R", "icv_m7_ownRow3Linear32f", "icv_l9_ippiFilterSobelHorizBorder_32f_C1R", "icv_y8_ownFilterMaxRow04_8u_C4R", "icv_y8_ippiNormDiff_Inf_16u_C1MR", "icv_m7_ippiDotProd_16s64f_C1R", "icv_m7_ownFilterColumnPipeline_16s8u_C1R_3x3_W7cn", "Java_org_opencv_features2d_KAZE_create_10", "_ZN2cv3PCAclERKNS_11_InputArrayES3_ii", "icv_y8_ownsAdd_16s_PosSfs", "icv_l9_ownpi_NormL2_16s_C4R", "Java_org_opencv_objdetect_HOGDescriptor_compute_10", "_ZN2cv5flann17KDTreeIndexParamsC1Ei", "ippicviSwapChannels_32f_C3R", "icv_l9_myRGBToXYZ_8u_C3R", "icv_l9_ippiFilterColumnPipelineGetBufferSize_16u_C1R", "icv_y8_ippiFilterScharrVertMaskBorder_16s_C1R", "cvMoments", "_ZN2cv6kmeansERKNS_11_InputArrayEiRKNS_17_InputOutputArrayENS_12TermCriteriaEiiRKNS_12_OutputArrayE", "ippicviNorm_Inf_16s_C1R", "icv_m7_owniConvert_16s16u_ccode", "icv_m7_ippiResizeGetSize_16s", "own_ipps_sSqrt_E7HAynn", "Java_org_opencv_ml_ANN_1MLP_getBackpropMomentumScale_10", "Java_org_opencv_features2d_Params_get_1maxArea_10", "icv_l9_ippiSub_32f_C1R", "icv_y8_ippsDCTFwdInit_32f", "icv_m7_ownFilterRowBorderPipeline_16s_C3R_5x5", "icv_l9_ippiMinEigenValGetBufferSize_32f_C1R", "icv_l9_ownFilter32f_16s_C3R_g9e9", "icv_l9_ownscDftInv_Prime4_64fc", "_ZNK2cv17CascadeClassifier5emptyEv", "ippicviDFTInv_CToC_32fc_C1R", "_ZN2cv3sumERKNS_11_InputArrayE", "_Z18Mat_to_vector_RectRN2cv3MatERSt6vectorINS_5Rect_IiEESaIS4_EE", "icv_y8_ippiFilterBorder_16s_C1R", "Java_org_opencv_imgproc_Imgproc_putText_10", "icv_m7_owns_sDctFwd_Fft_32f", "icv_m7_ownFilterMaxRow15_8u_C4R", "own_ipps_dExp_E7HAynn", "_ZN3tbb8internal36get_initial_auto_partitioner_divisorEv", "icv_l9_ippsFFTFwd_CToC_32fc", "_ZN2cv4UMataSERKNS_7Scalar_IdEE", "icv_y8_ownRow4Linear32f", "icv_l9_ownFilterMaxColumn03_32f_C1R", "icv_y8_ownResize1Cubic32f", "Java_org_opencv_ml_KNearest_delete", "icv_l9_ownscDFTinv_14_scale_32fc", "_ZN2cv3ocl5QueueC1ERKS1_", "icv_m7_ippiErodeBorder_32f_C4R", "_ZNK2cv3ocl6Device19imagePitchAlignmentEv", "icv_l9_ownscDFTinv_3_64fc", "ippicviMorphologyBorderInit_32f_C1R", "_ZN3tbb8internal17generic_scheduler5spawnERNS_4taskERPS2_", "icv_l9_ownFilterBorder32f_8u_C4R", "icv_y8_owniFlipCopy_16u_C1", "icv_m7_ippiCopyConstBorder_16u_C3R", "Java_org_opencv_imgproc_Imgproc_undistortPoints_11", "_ZN2cv3ogl6Buffer14setAutoReleaseEb", "Java_org_opencv_features2d_Params_set_1minThreshold_10", "icv_m7_ownpi_NormL1Rel_16s_C1R", "Java_org_opencv_core_Core_exp_10", "ippicviFilterMaxBorder_8u_C1R", "icv_l9_owns_cFFTinv_64_32fc", "_ZNK2cv11VideoWriter8isOpenedEv", "icv_m7_ippiDilateBorder_32f_C3R", "icv_l9_owniFilter32f_16u_C3R_g9e9_8", "_ZNK2cv3ocl6Device4nameEv", "_ZN2cv11VideoWriterC1Ev", "cvNextNArraySlice", "icv_y8_ownsrDFTinv_14_32f", "ippicvsPolarToCart_32f", "_ZNK2cv17DescriptorMatcher20DescriptorCollection13getDescriptorEi", "icv_m7_ownsrDFTfwd_13_32f", "icv_y8_ippiFilterMinBorder_8u_C4R", "icv_l9_ippiNormDiff_L2_16u_C1MR", "Java_org_opencv_features2d_GFTTDetector_getBlockSize_10", "_ZN2cv9Feature2D4readERKNS_6StringE", "icv_y8_ownscDFTinv_3_32fc", "_ZNK2cv5MatOp3addERKNS_7MatExprES3_RS1_", "icv_m7_ippiTranspose_8u_C3R", "ippicviTranspose_16u_C4IR", "icv_l9_ownpi_CmpLT_16s_C1R", "icv_y8_ownsrDFTfwd_7_32f", "icv_l9_gres_NormL2_16u_C3R", "ippicvsPowx_32f_A21", "icv_m7_ippsCos_32f_A24", "icv_y8_ownsrDFTinv_13_64f", "icv_m7_ownResize4Linear32f", "icv_m7_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_W7cn", "ippicviFilterScharrVertMaskBorder_32f_C1R", "own_ipps_dSin_L9EPnnn", "icv_y8_ippiConvert_8u32s_C1R", "icv_y8_ippiSwapChannels_32f_C4C3R", "icv_l9_ownFilterColumnPipeline_16u_C1R_3x3", "icv_y8_ownFilterMinRowVH_8u_C1R", "icv_y8_ippiAddSquare_16u32f_C1IR", "icv_l9_ippiNormRel_L2_16u_C1MR", "Java_org_opencv_ml_NormalBayesClassifier_create_10", "Java_org_opencv_imgproc_LineSegmentDetector_drawSegments_10", "icv_m7_ippiFilterColumnPipelineGetBufferSize_32f_C3R", "icv_m7_owns_cFFT_2_scale_32fc", "icv_y8_owns_rFFTfwd_4_32f", "ippicviSet_32s_C3MR", "icv_l9_ownsrDFTfwd_3_scale_64f", "icv_y8_ownsMulC_64f_I", "Java_org_opencv_imgproc_Imgproc_pyrDown_10", "_ZN2cv12updateWindowERKNS_6StringE", "_ZNK2cv3Mat9locateROIERNS_5Size_IiEERNS_6Point_IiEE", "Java_org_opencv_core_Core_getTickFrequency_10", "_ZN2cv3hal6add16sEPKsmS2_mPsmiiPv", "icv_l9_ippiNormDiff_L1_16u_C1MR", "icv_l9_ownippiFilterMedian_16u_C1R_3x3", "_ZN2cv8Stitcher6stitchERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv3hal6sub16sEPKsmS2_mPsmiiPv", "cvEllipse2Poly", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3_1_W7cn", "cvCheckTermCriteria", "_ZN3tbb8internal5arena12enqueue_taskERNS_4taskElRNS0_10FastRandomE", "_ZNK2cv4cuda10DeviceInfo19multiProcessorCountEv", "icv_l9_ippiDCTInvInit_32f", "icv_l9_ownippsSqrt16_32f", "icv_l9_ippiSqrIntegral_8u32s64f_C1R", "icv_l9_ownNormRel_L2_16u_C1MR_HSW", "icv_y8_innerXYZToRGB_32f_C3R", "icv_m7_ippiMirror_32s_C3R", "_ZN2cv3Mat4onesEiii", "ippicviHLSToRGB_8u_C3R", "Java_org_opencv_video_FarnebackOpticalFlow_getPyrScale_10", "_ZN2cv5solveERKNS_11_InputArrayES2_RKNS_12_OutputArrayEi", "Java_org_opencv_objdetect_HOGDescriptor_get_1blockSize_10", "Java_org_opencv_imgproc_Subdiv2D_delete", "_ZN2cv9startLoopEPFiiPPcEiS1_", "icv_l9_ippiThreshold_GTVal_8u_C1R", "icv_l9_owniShiftClipRectZeroTail_16u32f_C1R", "icv_l9_ippiIntegral_8u32f_C1R", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R_3x3_W7cn", "Java_org_opencv_imgproc_Imgproc_drawContours_12", "icv_y8_ippiMirror_8u_C1IR", "icv_y8_ownFilterMinRow04_8u_C3R", "cvGetErrInfo", "icv_l9_ippiMean_StdDev_8u_C1R", "icv_l9_ownFilterColumnPipeline_32f_C1R_5x5_kerLaplacian_W7cn", "_ZN2cv8internal15IntrinsicParamsC1ENS_3VecIdLi2EEES3_NS2_IdLi4EEEd", "_ZN10__cxxabiv123__fundamental_type_infoD2Ev", "icv_l9_ippiFilterScharrVertMaskBorder_32f_C1R", "icv_l9_ownFilterMinRow02_8u_C4R", "icv_l9_innerXYZToRGB_16u_C3R", "own_ipps_dLn_L9HAynn", "Java_org_opencv_photo_MergeMertens_setContrastWeight_10", "icv_m7_ownFilterRowBorderPipeline_32f_C3R_X", "Java_org_opencv_core_Core_getTickCount_10", "icv_l9_ownpi_XorC_8u_C1R", "icv_y8_myRGBToXYZ_8u_C3R", "icv_m7_ippiTranspose_16s_C3IR", "icv_l9_owniFilter32f_16u_C3R_g9e9_5", "icv_y8_ownFilterMaxRow11_8u_C3R", "icv_m7_ippiConvert_8s16s_C1R", "icv_m7_ownFilterMinRow11_8u_C4R", "icv_m7_ownFilterMinRow06_32f_C3R", "icv_m7_ownpis_Sum_16u_C3", "_ZN3tbb8internal31Scheduler_OneTimeInitializationEb", "icv_l9_ownscDftInv_Prime5_64fc", "_ZN2cv25BOWImgDescriptorExtractorD2Ev", "icv_l9_ownscDftFwd_Prime13_32fc", "_ZN3tbb19task_scheduler_init19default_num_threadsEv", "cvXor", "icv_m7_ownFilterMaxRow02_32f_C1R", "_ZN3tbb8internal3rml14private_serverD2Ev", "_ZN2cv25BOWImgDescriptorExtractor7computeERKNS_11_InputArrayERKNS_12_OutputArrayEPSt6vectorIS7_IiSaIiEESaIS9_EE", "ippicviMean_32f_C3CMR", "ippicviAddProduct_8u32f_C1IMR", "icv_m7_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "Java_org_opencv_photo_CalibrateDebevec_getSamples_10", "icv_y8_ippiSwapChannels_8u_C4C3R", "icv_l9_ownsMul_16s", "icv_y8_ippiNorm_L1_8u_C4R", "Java_org_opencv_core_Core_bitwise_1not_11", "cvSeqSearch", "_ZN3tbb16spin_rw_mutex_v327internal_try_acquire_readerEv", "_ZN3tbb8internal33itt_store_pointer_with_release_v3EPvS1_", "icv_m7_ippsMaxEvery_64f", "icv_l9_ippiFilterBorder_32f_C4R", "Java_org_opencv_features2d_Params_get_1maxInertiaRatio_10", "_ZNK2cv4UMat3mulERKNS_11_InputArrayEd", "JNI_OnUnload", "icv_m7_ownFilterMaxRow04_8u_C3R", "icv_m7_ownFilterColumnPipeline_16s_C1R_X_W7cn", "icv_y8_ownsrDFTinv_5_32f", "_ZNK2cv12_OutputArray7releaseEv", "_ZN2cv9videostab17TwoPassStabilizer16postProcessFrameERKNS_3MatE", "icv_y8_owniFilter_32f_C1R_v8u8_3NA", "icv_l9_ownFilter32f_8u_C3R_g9e9", "ippicviNorm_L2_8u_C4R", "_ZN2cv12VideoCapture4openERKNS_6StringEi", "Java_org_opencv_core_Mat_n_1Mat__IIIDDDD", "_ZNK2cv17DescriptorMatcher20DescriptorCollection11getLocalIdxEiRiS2_", "ippicviResizeCubicInit_16s", "icv_m7_ownippiErodeBorder_8u_C3R", "_ZN3tbb19task_scheduler_init10initializeEi", "icv_y8_ippiAddC_16s_C1IRSfs", "_ZN2cv15KeyPointsFilter16runByImageBorderERSt6vectorINS_8KeyPointESaIS2_EENS_5Size_IiEEi", "icv_y8_ippiFilterMinBorder_32f_C4R", "icv_y8_ippiCopyReplicateBorder_32s_C1R", "_ZN3tbb8internal6market28acknowledge_close_connectionEv", "_ZN3tbb8internal9schedulerD0Ev", "icv_m7_ippsFFTGetSize_R_64f", "icv_l9_ippsFFTGetSize_C_64fc", "_ZN2cv9videostab18LpMotionStabilizerC1ENS0_11MotionModelE", "Java_org_opencv_video_SparsePyrLKOpticalFlow_setFlags_10", "cvCrossProduct", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDxNeg", "cvSquareAcc", "Java_org_opencv_core_Algorithm_clear_10", "cvSVD", "ippicviThreshold_LTVal_8u_C1IR", "ippicviTranspose_32s_C4IR", "icv_y8_ippiMirror_32f_C1R", "ippicviResizeGetSize_64f", "icv_l9_ownFilterRowBorderPipeline_32f_C3R", "icv_y8_ippiFilterColumnPipelineGetBufferSize_16s8u_C3R", "icv_y8_ippiMean_32f_C3R", "icv_m7_ippiSum_16s_C3R", "icv_y8_ownscDftInv_Prime8_32fc", "icv_l9_cv_ownFilterStubw", "_ZN3tbb8internal17generic_scheduler11local_spawnERNS_4taskERPS2_", "_ZN3tbb8internal18throw_exception_v4ENS0_12exception_idE", "icv_m7_ippiCopyReplicateBorder_16s_C4IR", "_ZN2cv9RodriguesERKNS_11_InputArrayERKNS_12_OutputArrayES5_", "cvSobel", "Java_org_opencv_calib3d_Calib3d_distortPoints_10", "icv_m7_ownpi_NormL2Diff_16s_C3R", "_ZN6CvTypeD1Ev", "icv_m7_ippiTranspose_16u_C1IR", "icv_m7_ownFilterMaxColumn05_8u_C1R", "_ZN6CvTypeC1EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E", "Java_org_opencv_photo_TonemapDurand_setContrast_10", "icv_m7_ownpi_NormInfDiff_8u_C1R", "icv_l9_ownscDFTinv_7_64fc", "ippicviNormRel_L2_16u_C1MR", "icv_y8_ownscDFTfwd_9_32fc", "_ZN2cv10PCAComputeERKNS_11_InputArrayERKNS_17_InputOutputArrayERKNS_12_OutputArrayEi", "icv_l9_ippiTranspose_16s_C4IR", "_ZN2cv8Stitcher6stitchERKNS_11_InputArrayERKSt6vectorIS4_INS_5Rect_IiEESaIS6_EESaIS8_EERKNS_12_OutputArrayE", "icv_m7_ownscDFTinv_13_64fc", "icv_y8_ippsDotProd_64f", "_ZNK2cv4cuda10DeviceInfo16surfaceAlignmentEv", "icv_y8_ownsrDFTfwd_9_32f", "_ZN2cv9videostab15VideoFileSourceC2ERKNS_6StringEb", "icv_l9_ippiMirror_8u_C3IR", "icv_y8_ownCalcBorderR1Linear16s", "_ZN2cv12GFTTDetector6createEiddibd", "ippicviConvert_8u32f_C1R", "_ZN2cv3ipp19getIppErrorLocationEv", "icv_l9_ippiConvert_8u32s_C1R", "_ZN2cv9boxFilterERKNS_11_InputArrayERKNS_12_OutputArrayEiNS_5Size_IiEENS_6Point_IiEEbi", "icv_y8_owns_rFFTinv_4_64f", "icv_l9_ippiThreshold_Val_16s_C1R", "icv_l9_ownFilterColumnPipeline_32f_C1R_X", "icv_m7_ownFilterMaxRow04_32f_C3R", "_ZN2cv22SparseMatConstIteratorC1EPKNS_9SparseMatE", "icv_m7_ippiConvert_8u32s_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerSobel", "icv_y8_ownsrDFTfwd_10_32f", "icv_m7_cv_ownippiFilterMax_32f_Msk", "ippicviMinMaxIndx_16u_C1R", "icv_m7_ownpi_NormL2Diff_16u_C1R", "_ZN2cv17FlannBasedMatcher6createEv", "Java_org_opencv_imgproc_Imgproc_GaussianBlur_10", "_ZN2cv8Subdiv2D11findNearestENS_6Point_IfEEPS2_", "cvGetCaptureProperty", "_ZN2cv6detail12AffineWarper7warpRoiENS_5Size_IiEERKNS_11_InputArrayES6_", "icv_m7_ippiSet_32s_C4MR", "icv_l9_ippiConvert_16u32f_C1R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWork4stopEv", "_ZN2cvleERKNS_3MatEd", "icv_m7_ippsFFTInit_C_32fc", "_ZN2cv5MutexD2Ev", "_ZN2cv4cuda11TargetArchs6hasPtxEii", "_Unwind_GetRegionStart", "_ZNK2cv7MatExpr4diagEi", "icv_m7_ownDilateEllipseBorderReplicate_8u_C3R", "ippicviCopy_8u_C4P4R", "icv_y8_ownFilterMinRow15_8u_C4R", "icv_m7_ownFilterBorder32f_16u_C3R", "_ZNK2cv3ocl6Device17compilerAvailableEv", "_ZNK10__cxxabiv117__class_type_info12__do_dyncastElNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE", "icv_l9_ownsrDftInv_PrimeFact_32f", "ippicviNormDiff_L1_8u_C3CMR", "_ZN2cv3hal6exp64fEPKdPdi", "_ZN2cv9videostab18InpaintingPipeline9setFramesERKSt6vectorINS_3MatESaIS3_EE", "icv_m7_ownpi_NormL1Diff_16s_C1R", "Java_org_opencv_calib3d_Calib3d_estimateAffine3D_10", "icv_y8_innerXYZToRGB_8u_C3R", "__frame_state_for", "icv_l9_owns_cFFTinv_16_64fc", "_ZN2cv17CommandLineParserD1Ev", "icv_m7_ownFilterMinRow06_8u_C1R", "icv_m7_ippsSqrt_64f_A50", "_ZN3tbb8internal17generic_scheduler16get_mailbox_taskEv", "icv_y8_ippiNormDiff_Inf_16u_C4R", "icv_y8_ownFilterMinRowVH_8u_C3R", "ippicviTranspose_16u_C3IR", "Java_org_opencv_core_Algorithm_save_10", "icv_m7_ownCalcBorderR1Cubic32f", "icv_l9_ippiResizeGetSize_16u", "_ZN2cv8fastFreeEPv", "cvWriteInt", "icv_m7_ownpi_NormL1_16s_C3R", "_ZN2cv12VideoCaptureC1Ei", "_ZN2cv3hal7split8uEPKhPPhii", "_ZNK2cv21DetectionBasedTracker13getParametersEv", "icv_y8_ippiTranspose_32s_C1IR", "Java_org_opencv_calib3d_Calib3d_findCirclesGrid_11", "icv_y8_ownscDFTfwd_3_64fc", "ippicviResizeGetSize_16s", "cvGraphAddEdge", "icv_l9_ownFilterMaxRow11_8u_C3R", "icv_m7_ownMinEllipse_32f_C1", "icv_l9_owniFilterMedianSqr3x3_32f_C1R", "icv_l9_ownsrDFTfwd_5_32f", "cvPtr3D", "icv_y8_ippiFilterMaxBorderGetBufferSize", "_ZN3tbb8internal17generic_scheduler16winnow_task_poolEv", "Java_org_opencv_core_Mat_nPutF", "icv_m7_innerHLSToRGB_8u_C3R", "icv_l9_ippiMean_32f_C3R", "_ZN2cv11RNG_MT199374seedEj", "_ZN2cv9videostab27SparsePyrLkOptFlowEstimator3runERKNS_11_InputArrayES4_S4_RKNS_17_InputOutputArrayERKNS_12_OutputArrayESA_", "own_ipps_sCos_E7HAynn", "icv_l9_ippsFFTInv_PackToR_32f", "icv_y8_ownsSet_8u", "icv_y8_owniFilterSobelVertBorder2_32f_C1R", "icv_m7_ownpi_NormL1Diff_16s_C3R", "ownSetCpuFeaturesAndIdx", "_ZN2cv6detail19ExposureCompensator4feedERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_4UMatESaIS9_EESD_", "_ZNK2cv3ocl7Program3ptrEv", "icv_l9_ippiCopyReplicateBorder_32s_C1IR", "cvSetTrackbarMax", "Java_org_opencv_imgproc_Subdiv2D_getEdgeList_10", "icv_m7_ippiFilterBorder_16u_C4R", "icv_l9_ownsCopy_8u", "_ZN2cv8internal15IntrinsicParams4InitERKNS_3VecIdLi2EEES5_RKNS2_IdLi4EEERKd", "_ZN2cv22createCalibrateDebevecEifb", "_ZN2cv6detail7Blender13createDefaultEib", "icv_l9_ippiFilterMedianBorder_16u_C1R", "icv_l9_ownCalcBorderR4Cubic16s", "icv_l9_ippiNorm_L1_16u_C1R", "icv_l9_ippiAddC_16s_C1IRSfs", "icv_y8_ippsMinEvery_64f", "_ZN2cv9AlgorithmD0Ev", "cvCreateMatND", "icv_y8_ippiCopySubpixIntersect_8u32f_C1R", "ippicviMean_16s_C1R", "icv_m7_ownFilterMinRowVH_8u_C3R", "icv_l9_ippiColorToGray_32f_C3C1R", "icv_l9_ippiSet_32f_C1R", "Java_org_opencv_core_Core_phase_10", "Java_org_opencv_photo_MergeRobertson_process_11", "cvGetDims", "_ZN2cv17CascadeClassifier4readERKNS_8FileNodeE", "_ZN2cv12cornerSubPixERKNS_11_InputArrayERKNS_17_InputOutputArrayENS_5Size_IiEES7_NS_12TermCriteriaE", "icv_l9_ownippiFilterMaxGetBufferSize_8u_C3R", "icv_l9_ippiFilterGaussianBorder_8u_C1R", "_ZN2cv14phaseCorrelateERKNS_11_InputArrayES2_S2_Pd", "icv_l9_ownFilterMinRow07_32f_C4R", "icv_m7_ippiResizeLinearInit_32f", "Java_org_opencv_features2d_BOWImgDescriptorExtractor_descriptorType_10", "Java_org_opencv_video_BackgroundSubtractorMOG2_getShadowThreshold_10", "_ZNK2cv12MatAllocator8downloadEPNS_8UMatDataEPviPKmS5_S5_S5_", "ippicvsFlip_16u_I", "ippicvInit", "icv_l9_ippiDFTGetSize_R_32f", "_ZN2cv11RNG_MT199377uniformEdd", "_ZNK2cv4cuda6GpuMat8downloadERKNS_12_OutputArrayE", "ippicviMirror_16s_C3IR", "Java_org_opencv_objdetect_HOGDescriptor_setSVMDetector_10", "icv_l9_owniAutoNormMean_32f_C1R_g9e9cn", "icv_y8_ownFilterMaxRow02_8u_C3R", "icv_y8_ownsMinEvery_8u", "_ZN2cv11mixChannelsEPKNS_3MatEmPS0_mPKim", "ippicviConvert_32s16s_C1RSfs", "cvGetQuadrangleSubPix", "_ZN2cv12completeSymmERKNS_17_InputOutputArrayEb", "cvRQDecomp3x3", "_ZN3tbb18captured_exceptionD2Ev", "icv_y8_ippiFilterGaussianGetBufferSize", "icv_y8_ippiCopyConstBorder_32f_C3R", "icv_l9_ippsSin_32f_A24", "icv_l9_ownFilterBorder16s_8u_C3R", "icv_y8_owniConvert_32s16u_C1RSfs", "icv_m7_myXYZToRGB_16u_C3R", "Java_org_opencv_calib3d_Calib3d_findFundamentalMat_12", "_ZN2cv2ml6KDTree5buildERKNS_11_InputArrayEb", "icv_m7_ownFilterBorder32f_8u_C4R", "icv_m7_cv_ownippiFilterMin_32f_Msk", "_ZN2cv17cornerMinEigenValERKNS_11_InputArrayERKNS_12_OutputArrayEiii", "_ZN3tbb8internal5arenaC1ERNS0_6marketEjj", "icv_m7_ippiMean_StdDev_8u_C3CR", "icv_m7_ippiNormDiff_L2_16u_C1MR", "_ZN2cv9videostab19NullOutlierRejector7processENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayE", "icv_l9_ippiThreshold_GTVal_32f_C1R", "ippicviTranspose_8u_C4IR", "icv_m7_ippiNormDiff_Inf_16u_C4R", "icv_l9_ippiFilterBorder_16s_C1R", "icv_m7_ownsrDFTfwd_5_64f", "icv_y8_ippiAdd_32f_C1R", "icv_m7_ippiDistanceTransform_3x3_8u_C1R", "cvSeqPush", "icv_m7_cv_ownippiFilterMin_16s_Col", "_ZN3tbb8internal8governor6is_setEPNS0_17generic_schedulerE", "icv_m7_ownscDFTinv_15_scale_64fc", "icv_m7_ownsMulC_32f", "icv_l9_ownpi_NormL2Diff_32f_C4R", "_ZN2cv10bitwise_orERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_", "icv_m7_ownippiFilterMinBorderReplicate_32f_C1R", "icv_y8_owns_rFFT_2_scale_64f", "icv_l9_ownMean_StdDev_16u_C3CR_HSW", "icv_l9_owns_rFFTinv_4_32f", "icv_y8_owns_cFFTfwd_4_scale_64fc", "_ZN2cv3LDA4loadERKNS_11FileStorageE", "icv_m7_ownpi_CmpLE_32f_C1R", "ippicviRectStdDev_32f_C1R", "icv_l9_owniConvert_16u8s_ccode", "Java_org_opencv_core_Core_divide_10", "icv_m7_ownscDFTinv_7_scale_64fc", "icv_l9_owniGetRectTop_16s", "icv_l9_ippiFFTInv_PackToR_32f_C1R", "icv_m7_ownFilterMinColumnVH_8u_C1R", "icv_l9_ownippiMorphologyBorderReplicateInMemGetSize_8u_C4R", "icv_y8_ownsMaxEvery_8u", "icv_l9_ownFilterMaxRowVH_32f_C3R", "icv_m7_ownps_Mul_16u_Sfs", "_ZN2cv3ocl18getOpenCLAllocatorEv", "ippicviConvert_8u16u_C1R", "icv_l9_ownFilterMinRowVH_32f_C1R", "_ZN2cv8Subdiv2D12clearVoronoiEv", "Java_org_opencv_photo_TonemapDurand_getContrast_10", "Java_org_opencv_video_BackgroundSubtractorKNN_getHistory_10", "icv_m7_ippiCopy_16u_C3MR", "ippicvsPolarToCart_64f", "icv_l9_ippiNormDiff_L2_16u_C3CMR", "ippicviDFTFwd_RToPack_32f_C1R", "icv_y8_ippiNormRel_L2_32f_C1MR", "_ZN2cvmlERKNS_7MatExprEd", "Java_org_opencv_photo_Photo_pencilSketch_11", "cvMultiplyAcc", "icv_l9_ownippsSqrt_32f_I", "icv_m7_ippiMirror_16s_C1IR", "Java_org_opencv_video_KalmanFilter_predict_11", "Java_org_opencv_objdetect_CascadeClassifier_detectMultiScale_10", "ippicviNormDiff_Inf_32f_C1R", "_ZN2cv19getRotationMatrix2DENS_6Point_IfEEdd", "icv_y8_ownscDftFwd_Prime13_32fc", "icv_y8_ownsrDFTfwd_15_scale_64f", "icv_m7_ownsrDftInv_PrimeFact_32f", "icv_l9_owns_initTabTwdRealRec_64f", "_ZN2cv3MatC1ERKS0_PKNS_5RangeE", "cvEndWriteSeq", "icv_l9_ownsrDftInvRecombine_64f", "cvRelease", "icv_y8_ownpi_NormInfDiff_8u_C3R", "icv_l9_owns_cFftInv_Large_32fc", "ippicviMarkSpecklesGetBufferSize", "icv_m7_owns_rFFTfwd_32_scale_64f", "Java_org_opencv_features2d_Feature2D_read_10", "own_ipps_dSqrt_L9HAynn", "ippicviFilterMinBorder_8u_C3R", "icv_l9_ownscDFTfwd_11_32fc", "icv_l9_ownFilterMinRow03_8u_C1R", "icv_l9_owniFlip_8u_C1", "ipp_get_cpuid", "_ZN2cv21DetectionBasedTracker7processERKNS_3MatE", "_ZN2cv9videostab14ColorInpainter7inpaintEiRNS_3MatES3_", "_ZN2cv5flann17LinearIndexParamsC2Ev", "ippicviErodeBorder_8u_C3R", "icv_m7_ippiCopySubpixIntersect_8u32f_C1R", "Java_org_opencv_imgproc_Imgproc_compareHist_10", "icv_y8_ownpi_NormL2Rel_32f_C1R", "icv_l9_cv_ownippiFilterMax_8u_Col", "icv_l9_ippiMean_StdDev_32f_C3CMR", "ippicviConvert_16s16u_C1Rs", "icv_y8_ippiHistogram_8u_C1R", "_ZN10__cxxabiv120__si_class_type_infoD2Ev", "icv_y8_ownpi_CmpLT_8u_C1R", "icv_m7_ownFilterColumnPipeline_16s8u_C1R_X_W7cn", "icv_m7_ownBuildFilter_64f", "icv_l9_owniFlip_32s_C1", "icv_y8_ownFilterMinRow15_32f_C1R", "icv_l9_owniTranspose32s_C1R_core2", "Java_org_opencv_core_Core_getNumberOfCPUs_10", "icv_l9_owns_cFFT_2_scale_32fc", "_ZN2cv3hal8integralEiiiPKhmPhmS3_mS3_miii", "_ZNSt15__exception_ptr13exception_ptrD1Ev", "_ZN2cv6resizeERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEddi", "icv_m7_ownscDft_Conv_32fc", "icv_l9_owns_rFFTinv_8_64f", "icv_l9_owniCopy_16s_AC4C3R", "_ZN2cv6detail17VoronoiSeamFinder4findERKSt6vectorINS_4UMatESaIS3_EERKS2_INS_6Point_IiEESaIS9_EERS5_", "icv_m7_ippiApplyHaarClassifier_32f_C1R", "icv_m7_owns_rFFT_1_64f", "icv_y8_ownsAdd_8u_Bound", "Java_org_opencv_core_Core_hconcat_10", "_ZN2cv3ocl6KernelC2Ev", "icv_m7_owns_cFFTfwd_8_64fc", "Java_org_opencv_imgproc_Imgproc_calcHist_10", "_ZN2cv3Mat5setToERKNS_11_InputArrayES3_", "icv_m7_ippiNormRel_L2_16s_C1R", "_ZN3tbb8internal12PrintVersionEv", "icv_y8_ippiAdd_16u32f_C1IR", "icv_y8_ownsMul_32f", "_ZNK2cv7MatExpr3rowEi", "icv_y8_ippiFilterMinBorder_8u_C1R", "ippicviFilterScharrVertMaskBorder_8u16s_C1R", "_ZNK2cv3ocl6Device12localMemSizeEv", "icv_m7_owns_rFFTfwd_8_32f", "icv_y8_ippiFilterSobelVertSecondBorder_8u16s_C1R", "icv_y8_ownMaxEllipse_32f_C1", "_Z20Mat_to_vector_DMatchRN2cv3MatERSt6vectorINS_6DMatchESaIS3_EE", "icv_y8_ippiResizeLinearInit_64f", "_ZN2cv12ellipse2PolyENS_6Point_IiEENS_5Size_IiEEiiiiRSt6vectorIS1_SaIS1_EE", "Java_org_opencv_core_Mat_n_1zeros__DDI", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3", "icv_m7_ippiThreshold_GT_8u_C1IR", "icv_l9_ippiRGBToGray_32f_AC4C1R", "icv_m7_owns_cFFTinv_32_scale_64fc", "icv_m7_ownResize3Linear64f", "Java_org_opencv_features2d_FastFeatureDetector_getThreshold_10", "icv_l9_ownippiFilterMedianVert_16u_1x5", "icv_y8_ippiAbsDiff_8u_C1R", "icv_y8_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "icv_y8_ownscDft_Conv_64fc", "_ZNK2cv3ogl6Buffer4bindENS1_6TargetE", "icv_y8_ippiSwapChannels_32f_C4R", "cvContourArea", "icv_y8_ippiFilterBorder_8u_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_setOuterIterations_10", "_ZN2cv17FlannBasedMatcher5clearEv", "ippicviResizeLinear_32f_C1R", "icv_y8_ownResize4Linear64f", "icv_l9_ownippiMorphologyBorderReplicateInMemInit_8u_C4R", "icv_l9_ownCalcBorderR1Cubic16s", "icv_y8_ownsMul_8u_NegSfs", "icv_y8_ownpi_NormL2Diff_32f_C1R", "icv_y8_owniShiftClipRectZeroTail_32f_C1R", "_ZN2cv3minEdRKNS_3MatE", "Java_org_opencv_core_Core_randn_10", "_ZNK2cv13HOGDescriptor17checkDetectorSizeEv", "ippicviFilterMaxBorder_8u_C3R", "icv_y8_ownsrDFTfwd_11_64f", "_ZNK2cv8Subdiv2D11getEdgeListERSt6vectorINS_3VecIfLi4EEESaIS3_EE", "ippicviCopy_16u_P3C3R", "Java_org_opencv_videoio_VideoCapture_VideoCapture_11", "_ZN2cv8clipLineENS_5Size_IlEERNS_6Point_IlEES4_", "icv_l9_ownscDFTinv_3_scale_64fc", "icv_l9_ippiMorphologyBorderGetSize_8u_C1R", "icv_m7_ippsMulC_32f_I", "_ZN3tbb8internal3rml11tbb_factory5closeEv", "_ZN2cv9videostab18InpaintingPipeline10setMotionsERKSt6vectorINS_3MatESaIS3_EE", "_ZNSt10bad_typeidD1Ev", "icv_y8_ippiCopy_8u_C3R", "_ZNSt9exceptionD1Ev", "Java_org_opencv_photo_Photo_edgePreservingFilter_10", "Java_org_opencv_calib3d_Calib3d_sampsonDistance_10", "Java_org_opencv_ml_TrainData_create_11", "Java_org_opencv_features2d_Params_get_1filterByInertia_10", "icv_l9_ippiErodeBorder_32f_C3R", "_ZNK2cv17FlannBasedMatcher5writeERNS_11FileStorageE", "Java_org_opencv_core_Core_setIdentity_10", "icv_m7_ippiFilterScharrVertMaskBorderGetBufferSize", "icv_y8_ownsrDFTinv_5_64f", "cvResizeWindow", "cvPointSeqFromMat", "Java_org_opencv_video_FarnebackOpticalFlow_delete", "Java_org_opencv_features2d_ORB_create_10", "Java_org_opencv_imgcodecs_Imgcodecs_imread_11", "ippicviFilterMinBorder_8u_C4R", "own_ipps_sSqrt_L9EPnnn", "_ZN2cv8calcHistEPKNS_3MatEiPKiRKNS_11_InputArrayERKNS_12_OutputArrayEiS4_PPKfbb", "icv_m7_ippiMinMaxIndx_8u_C1R", "ippicviFilterScharrVertMaskBorder_16s_C1R", "cvStdErrReport", "icv_l9_ownFilterMinRow02_8u_C3R", "icv_y8_ownFilterRowBorderPipeline_16u_C3R_5x5_P8Y8cn", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_3x3_W7cn", "_ZN2cv17CascadeClassifierC2ERKNS_6StringE", "icv_m7_ippiCopyReplicateBorder_16u_C1R", "icv_y8_cv_ownippiFilterMax_32f_Col", "_ZN2cv3ipp9setUseIPPEb", "icv_l9_owniFlip_32s_C3", "icv_l9_ownscDftInv_Fact3_32fc", "Java_org_opencv_core_Core_n_1minMaxLocManual", "_ZN2cv11recoverPoseERKNS_11_InputArrayES2_S2_S2_RKNS_12_OutputArrayES5_RKNS_17_InputOutputArrayE", "icv_y8_ownsSub_32f", "own_ipps_dCos_L9LAynn", "icv_y8_owniFilter_32f_C3R_v8u8_8", "icv_m7_ownFilterMinRow07_32f_C4R", "Java_org_opencv_calib3d_Calib3d_stereoCalibrate_14", "icv_m7_ownippiMorphologyBorderReplicateInMemInit_32f_C1R", "cvGetThreadNum", "Java_org_opencv_core_Core_bitwise_1or_11", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_5x5_kerDx2", "_ZN2cv10drawMarkerERNS_3MatENS_6Point_IiEERKNS_7Scalar_IdEEiiii", "icv_y8_ownsrDFTinv_12_scale_32f", "icv_m7_ippiNorm_L2_32f_C1MR", "_ZN2cv6detail12DisjointSets17createOneElemSetsEi", "icv_y8_ownsrDftFwd_PrimeFact_64f", "icv_m7_ownFilterColumnPipeline_32f_C1R_X_W7cn", "ippicviAddProduct_8u32f_C1IR", "_ZN2cv7absdiffERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "icv_l9_ownsrDFTfwd_12_scale_32f", "icv_y8_ippiNorm_Inf_8u_C1R", "Java_org_opencv_core_Core_pow_10", "icv_y8_ippiMulC_16s_C1IRSfs", "icv_l9_ippiNormDiff_L2_8u_C4R", "icv_l9_ippiCopy_32s_C1MR", "icv_y8_ippsDFTFwd_RToPack_64f", "icv_y8_owns_cFFT_1_scale_32fc", "_ZN2cv9videostab18FastMarchingMethod7heapAddERKNS1_3DXYE", "_ZN2cv4cuda5EventC2ENS1_11CreateFlagsE", "_ZN2cv3hal6SVD64fEPdmS1_S1_mS1_miii", "_ZN2cv8superres23createOptFlow_Brox_CUDAEv", "cvRectangle", "_ZNK2cv11_InputArray4stepEi", "icv_l9_ownpi_NormL2Diff_32f_C1R", "_ZNK2cv3ogl9Texture2D5texIdEv", "icv_l9_owniAutoSSFull_C1R", "ippicviNorm_Inf_8u_C4R", "_ZN2cv3ogl6renderERKNS0_9Texture2DENS_5Rect_IdEES5_", "_ZN2cv11namedWindowERKNS_6StringEi", "icv_l9_owniConvert_8s16s_ccode", "icv_m7_ownippiErodeBorder_8u_C4R", "_ZN2cv6detail17OrbFeaturesFinderC1ENS_5Size_IiEEifi", "Java_org_opencv_core_Core_patchNaNs_10", "icv_y8_ippsConvert_16s32s", "ippicviNorm_L1_8u_C4R", "icv_m7_ownippiFilterMinBorderReplicate_8u_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_getHistory_10", "icv_l9_ownFilter_8u_C1R_h9l9_krn", "Java_org_opencv_imgproc_Imgproc_circle_10", "_ZN2cv4UMat5zerosEiPKii", "icv_m7_ippiResizeLinear_32f_C1R", "Java_org_opencv_imgproc_Imgproc_Laplacian_12", "icv_l9_ippiNorm_Inf_32f_C1MR", "icv_l9_ippiFilterColumnPipelineGetBufferSize_32f_C3R", "icv_l9_ownsSub_8u_1Sfs", "icv_m7_ownRow3Linear64f", "cvRange", "icv_l9_owns_cFftFwd_Large_64fc", "icv_y8_ippsFFTInv_PermToR_32f", "Java_org_opencv_calib3d_StereoSGBM_getPreFilterCap_10", "ippicviNormDiff_L2_32f_C3R", "icv_m7_ippiCopyReplicateBorder_32s_C3R", "icv_l9_owniSet_16s_C1R", "icv_y8_ippiXor_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C3R_5x5", "icv_m7_owniSqrDistanceNorm_FullSame_32f_C1R", "Java_org_opencv_imgproc_Imgproc_sepFilter2D_11", "Java_org_opencv_core_Mat_n_1Mat__", "icv_l9_ippsMul_64fc_I", "icv_y8_ownsSub_16s_NegSfs", "_ZN2cv17FlannBasedMatcher5trainEv", "icv_y8_gres_NormL2Diff_16u_C4R", "_ZNK2cv17DescriptorMatcher19getTrainDescriptorsEv", "_ZN2cv3hal3expEPKdPdi", "_ZNK2cv9Feature2D14descriptorSizeEv", "icv_l9_owniConvert_8u16s", "Java_org_opencv_video_KalmanFilter_set_1measurementNoiseCov_10", "Java_org_opencv_core_Core_setRNGSeed_10", "icv_l9_ippsMinEvery_32f", "own_ipps_dExp_L9HAynn", "cvAdaptiveThreshold", "Java_org_opencv_features2d_FastFeatureDetector_setType_10", "_ZNK2cv4cuda10DeviceInfo8pciBusIDEv", "_ZN2cv8Subdiv2D8QuadEdgeC2Ev", "_ZN2cv23buildOpticalFlowPyramidERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEEibiib", "_ZN2cv9videostab17WeightingDeblurerC1Ev", "icv_l9_ippiTranspose_16s_C3R", "icv_l9_owniShiftClipRectZeroTail_8u32f_C1R", "icv_y8_owns_rFFTfwd_8_32f", "icv_y8_ownFilterMaxRowVH_8u_C1R", "icv_y8_ippsFFTInit_C_32fc", "icv_y8_owniFilter_32f_C4R_v8u8_7", "icv_m7_ippsFFTInv_PermToR_64f", "_ZN2cv3ocl25predictOptimalVectorWidthERKNS_11_InputArrayES3_S3_S3_S3_S3_S3_S3_S3_NS0_17OclVectorStrategyE", "icv_m7_owns_rFFTinv_16_32f", "icv_y8_ippiFilterSobelVertBorder_8u16s_C1R", "cvFree_", "icv_m7_owniFilter2_8u16s_C1R", "_ZN2cv21DetectionBasedTrackerC1ENS_3PtrINS0_9IDetectorEEES3_RKNS0_10ParametersE", "ippicviConvert_16u32f_C1R", "icv_y8_owns_rFFT_2_64f", "icv_y8_ippsFFTInit_R_64f", "_ZNK2cv8Subdiv2D15getTriangleListERSt6vectorINS_3VecIfLi6EEESaIS3_EE", "icv_y8_ownsAdd_8u_1Sfs", "Java_org_opencv_core_Mat_n_1total", "_ZNK2cv17DescriptorMatcher5writeERNS_11FileStorageE", "ippicviFilterSobelHorizBorderGetBufferSize", "icv_l9_ippiNorm_L2_16s_C3R", "icv_l9_ownippiFilterMaxGetBufferSize_32f_C1R", "icv_m7_ippiResizeLinear_16s_C4R", "icv_m7_ownsrDFTfwd_3_scale_64f", "_ZN2cv3ocl6Kernel3runEiPmS2_bRKNS0_5QueueE", "icv_l9_ownsMulC_16s", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerAvr", "icv_l9_ownscDftInv_Fact4_64fc", "icv_y8_owniFilterRobertsDownBorder2_32f_C1R", "icv_l9_ippsFFTInit_R_32f", "icv_m7_ippiFilterSobelHorizSecondBorder_8u16s_C1R", "own_ipps_dPowx_E7LAynn", "_ZN2cv6detail12AffineWarper9buildMapsENS_5Size_IiEERKNS_11_InputArrayES6_RKNS_12_OutputArrayES9_", "cvProjectPCA", "icv_m7_ownsMulC_16s_I_PosSfs", "icv_y8_ippiSum_8u_C4R", "Java_org_opencv_photo_Photo_createTonemapDrago_10", "icv_l9_ownsrDFTfwd_15_scale_64f", "_ZN2cv5MatOpC1Ev", "icv_l9_ownscDft_Conv_64fc", "icv_y8_owniFilterSobelVertSecondBorder2_8u16s_C1R", "_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj", "Java_org_opencv_imgproc_Imgproc_ellipse2Poly_10", "_ZN2cv21DetectionBasedTracker3runEv", "_ZN2cv13parallel_for_ERKNS_5RangeERKNS_16ParallelLoopBodyEd", "own_ipps_dSqrt_Y8HAynn", "icv_l9_ippiDFTInit_C_32fc", "icv_m7_ippiCopyReplicateBorder_8u_C4R", "_ZN3tbb21set_assertion_handlerEPFvPKciS1_S1_E", "icv_l9_owniTranspose16u_C1R_core2", "cvLogPolar", "Java_org_opencv_imgproc_Imgproc_cvtColor_11", "Java_org_opencv_imgproc_Imgproc_warpPerspective_12", "Java_org_opencv_photo_AlignExposures_delete", "icv_y8_ownippiMorphologyBorderReplicateInMemGetSize_8u_C4R", "icv_m7_ownpi_NormInf_32f_C1R", "ippicviDCTInvInit_32f", "cvGetRectSubPix", "icv_m7_owns_cFFTfwd_4_64fc", "icv_y8_ippiCopy_32f_AC4C3R", "_ZN2cv4cuda6GpuMat16defaultAllocatorEv", "ownGetMaskFeatures", "_ZNK2cv11_InputArray5emptyEv", "icv_l9_ownscDftReord_32fc", "ippicviMinMaxIndx_32f_C1MR", "icv_l9_ippiCopyReplicateBorder_32f_C1R", "icv_l9_ownscDFTfwd_7_32fc", "icv_y8_cv_ownFilterStubw", "icv_l9_ownFilterMinRow09_8u_C4R", "Java_org_opencv_photo_TonemapReinhard_getIntensity_10", "Java_org_opencv_video_BackgroundSubtractorMOG2_getVarThresholdGen_10", "icv_l9_ownFilterMinRow06_8u_C4R", "Java_org_opencv_imgproc_Imgproc_GaussianBlur_11", "Java_org_opencv_imgproc_Imgproc_boundingRect_10", "icv_l9_ownFilterColumnPipeline_16s_C1R_5x5", "_ZNK2cv9Feature2D5emptyEv", "icv_y8_ownsrDFTfwd_5_32f", "icv_m7_ippiNormDiff_L1_16s_C4R", "_ZNK2cv12_OutputArray10getUMatRefEi", "icv_y8_ippiTranspose_32s_C1R", "icv_l9_ownFilterColumnPipeline_32f_C1R_5x5_kerDx2_W7cn", "icv_l9_ownscDFTfwd_5_scale_64fc", "_ZN2cv3ocl13ProgramSourceC2EPKc", "icv_l9_ownsMul_8u_Bound", "icv_m7_ippsConvert_16s32s", "icv_m7_ippiErodeBorder_8u_C4R", "_ZN2cv3expERKNS_11_InputArrayERKNS_12_OutputArrayE", "_ZN2cv4cuda6GpuMatC1ENS_5Size_IiEEiPvm", "icv_m7_ownscDFTfwd_15_32fc", "icv_m7_ownFilterRowBorderPipeline_16u_C3R", "_ZN2cv11RNG_MT199374nextEv", "_ZN2cv4gemmERKNS_11_InputArrayES2_dS2_dRKNS_12_OutputArrayEi", "cvSaveImage", "icv_l9_ownsInitTabDftDir_32f", "_ZN3tbb8internal5arena7processERNS0_17generic_schedulerE", "_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcElPKvPKS0_S2_", "icv_y8_ippiSwapChannels_16u_C3C4R", "icv_l9_owniFilter_32f_C3R_g9e9_1", "Java_org_opencv_features2d_Features2d_drawKeypoints_10", "icv_l9_ippiCrossCorrNormGetBufferSize", "icv_y8_ippiTranspose_32s_C4IR", "icv_y8_ippiFilterGaussianBorder_32f_C1R", "icv_l9_owniFilter_32f_C4R_g9e9_5", "_ZN3tbb8internal3rml14private_worker3runEv", "_ZNK2cv4cuda6GpuMat8downloadERKNS_12_OutputArrayERNS0_6StreamE", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_3x3_kerLaplacian", "_ZNK2cv4UMat6copyToERKNS_12_OutputArrayE", "icv_m7_ippiSum_8u_C1R", "Java_org_opencv_core_Core_getThreadNum_10", "icv_l9_ownscDftInv_Fact3_64fc", "_ZN2cv9videostab15VideoFileSource5widthEv", "_ZN2cv8UMatData6unlockEv", "icv_m7_ippsFFTInv_PackToR_32f", "icv_y8_ownFilterMinRow13_8u_C1R", "Java_org_opencv_features2d_DescriptorExtractor_descriptorType_10", "icv_l9_ippiMirror_8u_C1IR", "icv_l9_ippiMorphologyBorderGetSize_32f_C4R", "_ZN2cv3hal10normL2Sqr_EPKfS2_i", "_ZN2cv3hal8Filter2D6createEPhmiiiiiiiidiibb", "ippicviCompare_32f_C1R", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EERS0_IiSaIiEERS0_IdSaIdEEid", "_ZN9CvLevMarq4initEii14CvTermCriteriab", "icv_y8_ownErodeEllipseBorderReplicate_32f_C1R", "icv_y8_ownFilterMinRow04_8u_C4R", "ippicviAddC_32f_C1IR", "icv_y8_ippiCopy_16u_C3MR", "icv_y8_ippiCopyConstBorder_8u_C1R", "icv_l9_ippiNormRel_L2_8u_C1R", "icv_l9_ownsMulC_16s_1Sfs", "icv_l9_ownsMaxEvery_8u", "icv_m7_ownscDFTinv_14_32fc", "icv_m7_ownpi_NormInfDiff_16u_C3R", "icv_l9_owniFilterMedianBorderInMem_16s_C1R", "icv_l9_ippiNorm_L2_16u_C4R", "icv_l9_ownpi_CmpEQ_32f_C1R", "Java_org_opencv_video_Video_findTransformECC_11", "_ZNK2cv5MatOp11elementWiseERKNS_7MatExprE", "icv_l9_ippsCos_32f_A24", "_ZN3tbb8internal15runtime_warningEPKcz", "_ZN2cv3ocl6Kernel6createEPKcRKNS0_7ProgramE", "icv_m7_ippiFilterSobelVertBorder_8u16s_C1R", "ippicvsDFTInit_C_32fc", "ippicviNot_8u_C1R", "icv_m7_ownsMulC_16s_I_NegSfs", "Java_org_opencv_imgproc_Imgproc_cornerMinEigenVal_11", "_ZNK2cv4cuda10DeviceInfo21texturePitchAlignmentEv", "icv_l9_ippiThreshold_LTVal_32f_C1R", "_ZN2cvmlERKNS_3MatERKNS_7MatExprE", "icv_l9_ippiNormRel_L1_8u_C1R", "ippicviNorm_L2_32f_C3R", "icv_y8_ownpi_NormL1Diff_8u_C3R", "icv_y8_ippiConvert_8u8s_C1RSfs", "__addtf3", "icv_l9_ownsrDFTfwd_12_32f", "icv_m7_ownFilterRowBorderPipeline_32f_C1R_3x3_kerDxNeg", "_ZN2cv3PCAC2ERKNS_11_InputArrayES3_ii", "icv_l9_ownFilterMaxRow03_32f_C4R", "icv_m7_ownsrDFTfwd_12_64f", "icv_y8_ippsDCTInvInit_32f", "icv_y8_ownsrDFTinv_11_scale_64f", "_ZN2cv4UMat6createERKSt6vectorIiSaIiEEiNS_14UMatUsageFlagsE", "icv_m7_owniFilter2_32f_C1R", "icv_l9_ownippsCnvrtFin_32f32s_Sfs", "icv_y8_owniFilter_32f_C1R_v8u8_8NA", "icv_m7_ippiTranspose_32f_C4IR", "icv_y8_ownippiFilterMaxBorderReplicate_8u_C4R", "_ZNK2cv4cuda10DeviceInfo11computeModeEv", "icv_y8_ownFilterMaxRow02_8u_C4R", "cvPerspectiveTransform", "icv_l9_ownFilterMinRow05_8u_C4R", "_ZN2cv11bitwise_xorERKNS_11_InputArrayES2_RKNS_12_OutputArrayES2_", "_ZN2cv3maxERKNS_3MatES2_RS0_", "icv_m7_owniGetRectLeft_16s", "icv_y8_ippiMirror_32f_C4IR", "Java_org_opencv_features2d_DescriptorExtractor_write_10", "cvSum", "_ZN2cv21DetectionBasedTracker14detectInRegionERKNS_3MatERKNS_5Rect_IiEERSt6vectorIS5_SaIS5_EE", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_3x3", "icv_y8_ownsrDFTinv_9_32f", "icv_l9_ippiNorm_Inf_32f_C1R", "Java_org_opencv_core_Core_polarToCart_11", "icv_m7_ownCubicKernel0", "icv_l9_ippsDFTInv_PackToR_64f", "_ZN2cv8Subdiv2D6insertENS_6Point_IfEE", "Java_org_opencv_core_Mat_n_1convertTo__JJID", "ippicviDCTFwdInit_32f", "cvReleaseMemStorage", "ippicviCopy_16u_AC4C3R", "_ZN2cv16ParallelLoopBodyD0Ev", "_ZN2cv4UMatC1ERKS0_RKSt6vectorINS_5RangeESaIS4_EE", "_ZN2cv6detail11PlaneWarper15detectResultRoiENS_5Size_IiEERNS_6Point_IiEES6_", "icv_y8_ownpi_NormInf_16s_C3R", "cvSet3D", "Java_org_opencv_core_Mat_n_1checkVector__JI", "icv_m7_ownFilterMinRow15_32f_C4R", "_ZNK2cv4cuda6GpuMat9convertToERKNS_12_OutputArrayEiddRNS0_6StreamE", "icv_y8_ownsrDFTinv_7_scale_64f", "_ZNK2cv4cuda10DeviceInfo15memoryClockRateEv", "icv_m7_owns_rFFTfwd_8_scale_64f", "icv_l9_owns_rFFTfwd_32_64f", "icv_m7_ippiNormDiff_L1_16u_C1R", "icv_l9_ippiCompare_16u_C1R", "_Z20vector_DMatch_to_MatRSt6vectorIN2cv6DMatchESaIS1_EERNS0_3MatE", "icv_l9_ippiNorm_L2_8u_C1R", "Java_org_opencv_ml_EM_trainEM_10", "icv_y8_ownscDftInv_Prime16_64fc", "icv_y8_ippiNorm_L1_32f_C4R", "icv_l9_ippiTranspose_16u_C4IR", "icv_m7_ownCalcBorderR4Linear32f", "icv_l9_ownpi_NormInfDiff_16s_C1R", "_ZNSt15__exception_ptr13exception_ptrC2Ev", "icv_m7_ippiConvert_16u8s_C1RSfs", "icv_y8_ippiMean_StdDev_8u_C1R", "_ZNK2cv3ocl6Device15maxWorkItemDimsEv", "_ZN2cv9AlgorithmD1Ev", "icv_m7_ippsMulC_64f_I", "icv_m7_ownRow4Linear16s", "_ZNK2cv17CommandLineParser3hasERKNS_6StringE", "ippicviNormDiff_L1_16u_C1R", "icv_y8_owniFilterMedianSqr3x3_32f_C1R", "_ZN2cv3ocl12PlatformInfoC1EPv", "_ZN2cv11RNG_MT19937C1Ev", "icv_m7_ownscDFTinv_10_scale_64fc", "ippicviResizeGetBufferSize_64f", "own_ipps_dExp_L9LAynn", "cvCalcBayesianProb", "cvUnregisterType", "cvConvexityDefects", "Java_org_opencv_video_BackgroundSubtractorMOG2_setDetectShadows_10", "icv_y8_ownRow1Linear16u", "icv_y8_ippiFilterScharrVertMaskBorder_8u16s_C1R", "icv_l9_ippiTranspose_16u_C3R", "icv_l9_ippiNormDiff_Inf_16u_C1R", "icv_l9_ippiNorm_L2_32f_C4R", "_ZN2cv3hal3expEPKfPfi", "Java_org_opencv_core_Core_insertChannel_10", "cvPointPolygonTest", "icv_l9_ippiNorm_L1_16s_C4R", "own_ipps_dInvSqrt_E7LAynn", "icv_y8_ownFilterMaxRow06_32f_C4R", "icv_y8_ippiFilterSobelHorizBorder_32f_C1R", "icv_m7_ippiFilterSobelHorizBorder_8u16s_C1R", "_ZN2cv17getOptimalDFTSizeEi", "cvSeqPartition", "icv_m7_ippiConvert_8s32s_C1R", "icv_l9_owniFilter32f_16s_C3R_g9e9_6", "ippicviFilterScharrHorizMaskBorder_8u16s_C1R", "icv_y8_ownsMulC_16s_I_NegSfs", "_ZN9_IplImageC2ERKN2cv3MatE", "icv_y8_ownFilterColumnPipeline_16s_C1R_3x3_kerSobelNeg_W7cn", "Java_org_opencv_video_FarnebackOpticalFlow_setNumLevels_10", "cvBackProjectPCA", "_ZN2cv3ocl12PlatformInfoC2Ev", "_ZN2cv6detail12DpSeamFinderC2ENS1_12CostFunctionE", "icv_m7_ownFilterBorder16s_16s_C3R", "_ZN2cv11writeScalarERNS_11FileStorageEf", "icv_y8_ippiNorm_Inf_16u_C4R", "_ZN2cv12VideoCaptureD0Ev", "icv_y8_ippiResizeLinear_16s_C3R", "icv_m7_ippsDFTFwd_CToC_32fc", "own_ipps_dPowx_Y8LAynn", "own_ipps_sSqrt_Y8HAynn", "icv_y8_ippiMin_16u_C1R", "icv_l9_ownMean_StdDev_32f_C1R_HSW", "ippicviMorphologyBorderGetSize_32f_C1R", "icv_y8_owniCrossCorrValid_NormLevel_8u_C1R", "icv_m7_ippiTrueDistanceTransformGetBufferSize_8u32f_C1R", "icv_l9_ippiFilterMedianBorder_32f_C1R", "_ZN2cv7vconcatEPKNS_3MatEmRKNS_12_OutputArrayE", "icv_l9_ownsInitTabDftInvRec_64f", "_ZN2cv18illuminationChangeERKNS_11_InputArrayES2_RKNS_12_OutputArrayEff", "_ZN2cv15preCornerDetectERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_y8_ippiConvert_8u32f_C1R", "icv_y8_ippiFilterRowBorderPipelineGetBufferSize_32f_C3R", "Java_org_opencv_features2d_Params_set_1filterByColor_10", "cvReleaseKalman", "icv_y8_ippsSortAscend_32f_I", "icv_y8_ownFilterBorder32f_16s_C1R", "icv_y8_ownColCubic32f", "icv_m7_ippiMean_8u_C3R", "icv_y8_myHLSToRGB_8u_C3R", "icv_l9_ippiNormDiff_L1_16s_C3R", "icv_m7_ownscDFTinv_12_64fc", "_ZN2cv3hal6SVD32fEPfmS1_S1_mS1_miii", "cvRunningAvg", "_ZN2cv3ocl7Context6createEi", "icv_l9_ownFilterColumnPipeline_16s_C1R_5x5_kerDx_W7cn", "icv_y8_ippiDilateBorder_32f_C4R", "Java_org_opencv_features2d_AKAZE_setNOctaveLayers_10", "_ZN2cvdvERKNS_3MatERKNS_7MatExprE", "icv_m7_ownDilateEllipseBorderReplicate_32f_C3R", "icv_l9_ownFilterMinColumn05_8u_C1R", "_ZN2cv16MatConstIterator4seekEPKib", "icv_y8_ownDilateEllipseBorderReplicate_8u_C3R", "Java_org_opencv_video_BackgroundSubtractorMOG2_setVarMax_10", "icv_m7_ownMaxEllipse_8u_C1", "icv_l9_owniFilter32f_16s_C1R_g9e9_4", "ippicviCopy_16u_C3MR", "icv_y8_ippiNormDiff_L1_16s_C4R", "icv_l9_ippiDilateBorder_32f_C4R", "_ZN2cv3ogl6Buffer8copyFromERKNS_11_InputArrayENS1_6TargetEb", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_X_W7cn", "icv_m7_ippsMinEvery_16u", "icv_y8_ippiCanny_16s8u_C1R", "icv_y8_ownsrDFTfwd_12_64f", "own_ipps_dSin_U8HAynn", "icv_l9_owniFilter32f_8u_C4R_g9e9_7", "icv_l9_ownsSub_8u_PosSfs", "_ZN2cv25getDefaultNewCameraMatrixERKNS_11_InputArrayENS_5Size_IiEEb", "ippicviMean_32f_C4R", "icv_y8_Dilate_32f_C3S", "Java_org_opencv_imgproc_Imgproc_calcHist_11", "icv_m7_ownFilterMinColumn03_8u_C1R", "icv_y8_ownpi_NormL1Diff_32f_C1R", "icv_y8_ippiCopyConstBorder_16s_C1R", "icv_l9_ippiSwapChannels_16u_C4C3R", "_ZN2cv3ogl6Buffer6unbindENS1_6TargetE", "cvFindExtrinsicCameraParams2", "icv_m7_ownFilterMinColumn05_8u_C1R", "icv_m7_owns_cFftInv_Fact8_32fc", "icv_l9_ippiNorm_L2_8u_C3R", "icv_y8_owniNormLevel_8u_C1R", "icv_m7_ownsAdd_16s_NegSfs", "icv_m7_ippiRGBToGray_32f_C3C1R", "icv_y8_owniFilter_32f_C1R_v8u8_5NA", "Java_org_opencv_calib3d_Calib3d_calibrationMatrixValues_10", "icv_l9_ownFilterMinRow05_32f_C3R", "icv_y8_ownpi_NormL2_8u_C4R", "Java_org_opencv_core_Mat_n_1create__JDDI", "Java_org_opencv_videoio_VideoWriter_isOpened_10", "cvGet3D", "cvInRange", "_ZN2cv17accumulateProductERKNS_11_InputArrayES2_RKNS_17_InputOutputArrayES2_", "cvGetFileNode", "icv_l9_ippiMean_StdDev_32f_C1R", "icv_y8_ownscDFTinv_9_scale_64fc", "Java_org_opencv_features2d_GFTTDetector_getMinDistance_10", "icv_l9_ownFilterMaxRow15_8u_C4R", "_ZN2cv14createStitcherEb", "Java_org_opencv_imgproc_Imgproc_Canny_13", "Java_org_opencv_calib3d_StereoBM_delete", "_ZNK2cv3ocl6Device8vendorIDEv", "icv_y8_owniFilter2_32f_C1R", "icv_l9_owniClipRectZeroTail_16u32f_C1R", "icv_y8_ownippiFilterMinBorderReplicate_8u_C3R", "icv_l9_ownscDFTfwd_11_64fc", "icv_l9_ippiMin_16s_C1R", "_ZNK2cv9SparseMat9convertToERNS_3MatEidd", "_ZN2cv7hconcatERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "Java_org_opencv_calib3d_Calib3d_calibrate_12", "_ZN2cv9ExceptionD1Ev", "icv_y8_ippiResizeCubicInit_8u", "icv_m7_ownsrDFTfwd_11_32f", "icv_y8_ownFilterMinRow05_32f_C3R", "_ZNK3tbb8internal34allocate_additional_child_of_proxy4freeERNS_4taskE", "icv_l9_ownFilterColumnPipeline_32f_C1R_5x5_kerDx_W7cn", "icv_m7_ippsDCTInv_32f", "ippicviTranspose_32s_C3IR", "_ZTv0_n40_NK2cv22SimpleBlobDetectorImpl5writeERNS_11FileStorageE", "icv_l9_ownpi_NormL2_8u_C4R", "icv_m7_ippiNormDiff_L2_32f_C3R", "_ZN2cv3hal11cvtBGRtoXYZEPKhmPhmiiiib", "icv_l9_ippiNormDiff_L2_32f_C3R", "Java_org_opencv_imgcodecs_Imgcodecs_imreadmulti_10", "_ZN2cv7fisheye13distortPointsERKNS_11_InputArrayERKNS_12_OutputArrayES3_S3_d", "icv_y8_ownippiFilterMinGetBufferSize_32f_C1R", "icv_y8_ippiMirror_8u_C1R", "icv_y8_ippsFFTGetSize_R_64f", "_ZN2cv6repeatERKNS_11_InputArrayEiiRKNS_12_OutputArrayE", "_ZN2cv25BOWImgDescriptorExtractorC2ERKNS_3PtrINS_9Feature2DEEERKNS1_INS_17DescriptorMatcherEEE", "icv_m7_ownFilterMaxRow07_32f_C1R", "icv_m7_ownFilterRowBorderPipeline_16s_C1R_5x5", "cvRepeat", "cvWriteComment", "_ZN2cv3SVDclERKNS_11_InputArrayEi", "icv_y8_ownscDFTinv_14_scale_64fc", "icv_y8_owns_rFFTinv_4_scale_64f", "icv_l9_ippsDCTInv_32f", "_ZN2cv8Subdiv2D8QuadEdgeC1Ei", "icv_l9_ippiResizeCubic_16s_C1R", "icv_l9_ownCalcBorderR3Linear16u", "_ZN2cvleEdRKNS_3MatE", "icv_y8_owniFilter_32f_C4R_v8u8_8NA", "cvMaxS", "icv_m7_ippiXYZToRGB_16u_C3R", "_ZNK2cv3ogl6Buffer6copyToERKNS_12_OutputArrayERNS_4cuda6StreamE", "cvNulDevReport", "icv_l9_owniSwapChannels_8u_C3C4R", "icv_l9_owns_cFftFwd_Fact8_32fc", "_ZN2cvdvERKNS_3MatEd", "_ZN2cv3ocl7Image2DC1ERKNS_4UMatEbb", "icv_y8_ownFilterRowBorderPipeline_16u_C1R", "Java_org_opencv_ml_LogisticRegression_getLearningRate_10", "_ZN3tbb8internal3rml14private_server25adjust_job_count_estimateEi", "_Z21vector_Point2f_to_MatRSt6vectorIN2cv6Point_IfEESaIS2_EERNS0_3MatE", "icv_y8_ownErode_32f_C4S", "Java_org_opencv_core_Core_getCPUTickCount_10", "Java_org_opencv_ml_SVM_getUncompressedSupportVectors_10", "_ZN2cv6detail20BundleAdjusterAffine12calcJacobianERNS_3MatE", "icv_m7_ippiConvert_32f32s_C1RSfs", "icv_y8_ownscDftFwd_Prime13_64fc", "Java_org_opencv_imgproc_Subdiv2D_edgeOrg_11", "cvSubRS", "icv_m7_ownscDFTinv_15_scale_32fc", "_ZN2cv5writeERNS_11FileStorageERKNS_6StringERKNS_3MatE", "_ZN2cv14seqRemoveSliceEP5CvSeq7CvSlice", "_ZN2cv3ocl7Image2D17isFormatSupportedEiib", "icv_m7_Erode_8u_C1S", "icv_y8_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "Java_org_opencv_imgproc_Imgproc_getRotationMatrix2D_10", "icv_l9_ippiComputeThreshold_Otsu_8u_C1R", "ippicviAdd_16s_C1RSfs", "Java_org_opencv_core_Core_divide_13", "icv_l9_ownFilterMaxRow11_8u_C1R", "_ZNK3tbb4task26is_owned_by_current_threadEv", "icv_y8_owniFilter_32f_C1R_v8u8_7NA", "icv_y8_owniFlipCopy_16u_C3", "icv_m7_owniCrossCorrNorm_FullSame_32f_C1R", "icv_y8_ownsrDFTfwd_10_scale_32f", "own_ipps_sSin_L9EPnnn", "ippicviNorm_L1_32f_C4R", "icv_y8_ippiMirror_32s_C4IR", "_ZNK2cv11_InputArray12getMatVectorERSt6vectorINS_3MatESaIS2_EE", "icv_m7_owniFlip_32s_C1", "icv_m7_ownFilterMaxRow11_8u_C4R", "icv_l9_ippiCopyReplicateBorder_32s_C4R", "_ZNK2cv12_OutputArray13getHostMemRefEv", "_ZN2cv11convertFp16ERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_l9_owniFilter32f_16u_C3R_g9e9_2", "icv_l9_ownsSet_8u", "_ZN3tbb16spin_rw_mutex_v316internal_upgradeEv", "icv_y8_ippiMinEigenVal_8u32f_C1R", "icv_l9_ownscDftFwd_Prime8_32fc", "Java_org_opencv_core_Core_randShuffle_11", "icv_l9_ownsrDftInv_PrimeFact_64f", "_ZN10__cxxabiv121__vmi_class_type_infoD0Ev", "cvAddText", "icv_l9_ippiNormRel_L1_32f_C1R", "icv_y8_ippiFilterMinBorder_32f_C3R", "_ZNK2cv3ocl6Device15linkerAvailableEv", "icv_l9_ippiHistogramGetBufferSize", "icv_y8_ownsSub_16s_PosSfs", "icv_y8_ippiCopyConstBorder_32s_C3R", "icv_y8_ippiTranspose_16u_C3R", "Java_org_opencv_features2d_BOWKMeansTrainer_BOWKMeansTrainer_11", "cvInitIntrinsicParams2D", "icv_m7_ownFilterRowBorderPipeline_8u16s_C1R_3x3", "Java_org_opencv_imgproc_Imgproc_filter2D_11", "icv_l9_ippiFilterColumnPipelineGetBufferSize_16s_C3R", "icv_m7_ippiConvert_16u32s_C1R", "icv_l9_ownFilterColumnPipeline_16u_C1R_5x5", "icv_y8_ippsMaxEvery_32f", "icv_m7_ippiTranspose_16s_C4IR", "icv_y8_ippiResizeGetSrcOffset_64f", "icv_l9_owniFilter32f_16s_C1R_g9e9_1", "_ZN10__cxxabiv117__class_type_infoD2Ev", "ippicviResizeGetBufferSize_16s", "Java_org_opencv_video_DualTVL1OpticalFlow_getLambda_10", "_ZNK2cv3ocl6Device15maxComputeUnitsEv", "icv_l9_ownMaxEllipse_32f_C1", "_ZN2cvngERKNS_3MatE", "_ZNK2cv8Subdiv2D6Vertex6isfreeEv", "icv_m7_ownFilterColumnPipeline_16s_C1R_3x3_kerSobelNeg_W7cn", "icv_m7_ippiNormDiff_L2_32f_C3CMR", "cvSetReal1D", "icv_l9_ippiCopyConstBorder_32s_C1R", "Java_org_opencv_features2d_MSER_getDelta_10", "ippicviSum_8u_C1R", "_ZN2cv3ocl5QueueC2ERKS1_", "icv_y8_ownpi_NormInfDiff_32f_C3R", "_ZN2cv5pyrUpERKNS_11_InputArrayERKNS_12_OutputArrayERKNS_5Size_IiEEi", "_ZNK3tbb8internal34allocate_additional_child_of_proxy8allocateEm", "Java_org_opencv_core_Core_subtract_12", "icv_l9_ownscDftFwd_Prime7_64fc", "_ZNK2cv3ocl6Device16printfBufferSizeEv", "Java_org_opencv_calib3d_Calib3d_findEssentialMat_15", "ippicviFilterMaxBorder_32f_C3R", "_ZN2cv3hal7normL1_EPKfS2_i", "Java_org_opencv_video_DualTVL1OpticalFlow_getMedianFiltering_10", "Java_org_opencv_features2d_BOWKMeansTrainer_BOWKMeansTrainer_10", "Java_org_opencv_features2d_DescriptorExtractor_read_10", "icv_m7_ippiFilterBorder_8u_C4R", "cvClearND", "Java_org_opencv_features2d_DescriptorMatcher_read_10", "_ZN2cv3hal14addWeighted64fEPKdmS2_mPdmiiPv", "icv_m7_ippiTranspose_32f_C1R", "_ZN2cv3ogl6Buffer8copyFromERKNS_11_InputArrayERNS_4cuda6StreamENS1_6TargetEb", "icv_y8_ippiSwapChannels_16u_C3R", "_ZNK2cv3ocl6Device3ptrEv", "icv_m7_ippiMean_8u_C4R", "Java_org_opencv_photo_AlignMTB_setExcludeRange_10", "icv_m7_ownippiFilterMaxGetBufferSize_8u_C3R", "icv_m7_ippiResizeGetBufferSize_16s", "own_ipps_dInvSqrt_L9EPnnn", "_ZN2cv6detail18GraphCutSeamFinder4Impl24setGraphWeightsColorGradERKNS_3MatES5_S5_S5_S5_S5_S5_S5_R7GCGraphIfE", "Java_org_opencv_features2d_ORB_getFirstLevel_10", "icv_l9_ownippiMorphologyBorderReplicateInMemInit_8u_C1R", "ippicviErodeBorder_32f_C3R", "Java_org_opencv_features2d_AgastFeatureDetector_setThreshold_10", "icv_y8_owniFilterMedianBorderInMem_8u_C1R", "_ZN2cv4cuda13nonLocalMeansERKNS_11_InputArrayERKNS_12_OutputArrayEfiiiRNS0_6StreamE", "Java_org_opencv_ml_DTrees_setMaxCategories_10", "Java_org_opencv_video_SparseOpticalFlow_calc_10", "icv_y8_owns_initTabTwd_L1_64f", "icv_m7_ownFilterMinRow01_32f_C1R", "icv_l9_ownFilterColumnPipeline_32f_C1R_5x5_kerAvr_W7cn", "icv_m7_ownFilterRowBorderPipeline_8u16s_C3R_3x3", "Java_org_opencv_photo_Photo_illuminationChange_10", "Java_org_opencv_features2d_FastFeatureDetector_setNonmaxSuppression_10", "icv_l9_ippiNormDiff_Inf_8u_C1MR", "_ZNK2cv6detail20BundleAdjusterAffine25obtainRefinedCameraParamsERSt6vectorINS0_12CameraParamsESaIS3_EE", "icv_y8_ownsrDftInv_Conv_64f", "ippicvsMaxEvery_32f", "ippicviRGBToGray_32f_C3C1R", "_ZN2cv20checkHardwareSupportEi", "icv_m7_ownpi_CmpEQ_16s_C1R", "cvDecodeImageM", "icv_m7_ippiNorm_Inf_32f_C1R", "icv_y8_ownResize3Cubic32f", "ippicviNormDiff_L2_8u_C1R", "Java_org_opencv_features2d_DescriptorMatcher_add_10", "_ZN2cv7putTextERKNS_17_InputOutputArrayERKNS_6StringENS_6Point_IiEEidNS_7Scalar_IdEEiib", "icv_l9_cv_ownippiFilterMax_8u_Row", "icv_l9_ippsDotProd_32f64f", "_ZN2cv3ocl5QueueC2ERKNS0_7ContextERKNS0_6DeviceE", "icv_l9_ownDilateEllipseBorderReplicate_8u_C3R", "icv_y8_ippiNormDiff_L1_8u_C3R", "icv_l9_owniNormLevel_8u_C1R", "icv_y8_ippiRGBToXYZ_16u_C3R", "_ZN2cv3ocl13ProgramSourceC2ERKS1_", "icv_l9_ippiFilterMinBorder_32f_C1R", "icv_m7_ownRow1Cubic16u", "icv_m7_ippiThreshold_GT_8u_C1R", "_ZN2cv5flann11IndexParams7setBoolERKNS_6StringEb", "icv_y8_ownpi_Min_16u_C1R", "icv_l9_owniFilter32f_16u_C1R_g9e9_6", "icv_y8_ippiCopyConstBorder_16u_C4R", "Java_org_opencv_imgproc_Imgproc_watershed_10", "_ZNK2cv4cuda10DeviceInfo18maxThreadsPerBlockEv", "icv_l9_ippiNormDiff_Inf_16s_C3R", "icv_l9_ownscDFTinv_13_64fc", "_ZN2cv25getOptimalNewCameraMatrixERKNS_11_InputArrayES2_NS_5Size_IiEEdS4_PNS_5Rect_IiEEb", "icv_l9_owns_initDctFwd_Fft_32f", "Java_org_opencv_calib3d_Calib3d_stereoRectify_10", "_ZN2cv8Subdiv2D8newPointENS_6Point_IfEEbi", "cvMixChannels", "ippicviSet_16u_C3MR", "icv_l9_ownFilterMaxRow06_8u_C1R", "_ZN2cv9videostab18InpaintingPipeline9setRadiusEi", "ippicviMirror_32f_C4IR", "_ZN3tbb8internal15NFS_GetLineSizeEv", "Java_org_opencv_calib3d_Calib3d_undistortImage_10", "icv_m7_ownscDFTfwd_10_scale_64fc", "icv_l9_owniFilter_32f_C4R_g9e9_6", "Java_org_opencv_features2d_Feature2D_compute_11", "icv_m7_ippiFilterColumnPipelineGetBufferSize_16s8u_C3R", "icv_m7_ippiCopyReplicateBorder_8u_C1IR", "icv_y8_ownippiDilateBorder_32f_C4R", "icv_l9_owniConvert_32f8s_ccode", "icv_l9_owns_cFFTinv_32_32fc", "icv_l9_ippiSum_16s_C1R", "icv_m7_owns_initTabTwd_L1_64f", "Java_org_opencv_core_Core_dft_10", "_ZN3tbb16spin_rw_mutex_v327internal_try_acquire_writerEv", "_ZN2cv11drawMatchesERKNS_11_InputArrayERKSt6vectorINS_8KeyPointESaIS4_EES2_S8_RKS3_IS3_INS_6DMatchESaIS9_EESaISB_EERKNS_17_InputOutputArrayERKNS_7Scalar_IdEESM_RKS3_IS3_IcSaIcEESaISO_EEi", "icv_m7_ownFilterMinRow15_8u_C1R", "icv_l9_ippiNormDiff_L2_32f_C3CMR", "icv_l9_ownFilterMinRow05_8u_C3R", "icv_y8_ownsMaxEvery_16u", "icv_m7_ippiConvert_16s8s_C1RSfs", "_ZN2cv3hal15cvtBGR5x5toGrayEPKhmPhmiii", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_3x3", "icv_l9_ippiNorm_L2_32f_C3R", "Java_org_opencv_core_Core_mean_10", "icv_l9_ownsAdd_16s_PosSfs", "ippicviNormDiff_L2_8u_C4R", "_ZN2cv3ocl8Platform10getDefaultEv", "icv_l9_owniFilter32f_16s_C3R_g9e9_3", "icv_l9_owniCmpLessEq_16u_C1R", "Java_org_opencv_video_BackgroundSubtractorKNN_getDetectShadows_10", "ippicviSqrDistanceNorm_8u32f_C1R", "_ZN2cv3minERKNS_4UMatES2_RS0_", "_ZN2cv6detail26BestOf2NearestRangeMatcherC2Eibfii", "icv_m7_ownFilterRowBorderPipeline_32f_C3R_X_W7cn", "icv_m7_ownippiFilterMinGetBufferSize_32f_C1R", "icv_m7_ippiErodeBorder_8u_C1R", "icv_l9_ownippiFilterMedianVert_16s_1x5", "icv_l9_owniFilter32f_8u_C1R_g9e9_5", "icv_m7_GET_ANCHOR_BORDER", "cvConvertMaps", "icv_m7_ownFilterRowBorderPipeline_16s_C3R_3x3_W7cn", "_ZN2cv16setOpenGlContextERKNS_6StringE", "cvPtr2D", "Java_org_opencv_calib3d_Calib3d_composeRT_11", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_3x3", "_ZN2cv3ocl11kernelToStrERKNS_11_InputArrayEiPKc", "_ZN9CvLevMarqD1Ev", "_ZN2cvmlERKNS_3MatEd", "_ZN2cv5flann20AutotunedIndexParamsC1Effff", "__lttf2", "icv_l9_ownFilterMaxColumnVH_8u_C1R", "_ZN2cv11VideoWriterC1ERKNS_6StringEidNS_5Size_IiEEb", "Java_org_opencv_imgproc_Imgproc_convertMaps_10", "icv_m7_ownsSub_16s", "icv_y8_ippiSwapChannels_32s_C3R", "icv_y8_ownpi_NormL1_16s_C1R", "Java_org_opencv_imgcodecs_Imgcodecs_imencode_11", "_ZN2cv2ml12randMVNormalERKNS_11_InputArrayES3_iRKNS_12_OutputArrayE", "icv_l9_ippiThreshold_GT_16s_C1IR", "_ZN2cv3hal6add64fEPKdmS2_mPdmiiPv", "cvCreateButton", "icv_l9_ippiTranspose_16u_C1IR", "icv_y8_ownFilterMinRow02_8u_C1R", "_ZN2cv21DetectionBasedTracker21SeparateDetectionWorkC1ERS0_NS_3PtrINS0_9IDetectorEEERKNS0_10ParametersE", "_ZN2cv2ml6DTrees5SplitC2Ev", "icv_y8_ippiConvert_32s16u_C1RSfs", "_ZNK2cv4cuda10DeviceInfo8warpSizeEv", "_ZN3tbb8internal18concurrent_monitorD2Ev", "icv_y8_ownsAdd_16s", "icv_m7_IPP_Dilate_C4_8u", "icv_y8_ippiRectStdDev_32f_C1R", "icv_m7_owns_rFFTinv_32_32f", "Java_org_opencv_calib3d_Calib3d_recoverPose_12", "_ZN2cv16FileNodeIteratorC1ERKS0_", "icv_l9_ownsAdd_16s_Bound", "ippicviMirror_32f_C1R", "icv_y8_ippiAdd_16u32f_C1IMR", "icv_l9_ownFilterRowBorderPipeline_16s_C1R_3x3_H9L9cn", "icv_m7_ownsrDFTfwd_7_64f", "icv_l9_ownFilter_8u_32s_C1R_h9l9_krn", "_ZN2cv9patchNaNsERKNS_17_InputOutputArrayEd", "Java_org_opencv_android_Utils_nBitmapToMat2", "icv_l9_owniCopy_32s_AC4C3R", "_ZN2cv4blurERKNS_11_InputArrayERKNS_12_OutputArrayENS_5Size_IiEENS_6Point_IiEEi", "icv_m7_ippiNorm_L2_8u_C3R", "_ZN3tbb8internal6market17try_destroy_arenaEPNS0_5arenaEm", "Java_org_opencv_photo_Photo_fastNlMeansDenoisingMulti_12", "ippicviNormDiff_L2_16u_C3CMR", "icv_l9_ownpi_Sum_8u_C1R", "Java_org_opencv_core_Core_min_11", "Java_org_opencv_core_Core_subtract_14", "icv_m7_ippiResizeLinear_16u_C3R", "icv_m7_ownFilterMinRow01_32f_C4R", "icv_l9_ownippiMorphologyBorderReplicateInMemGetSize_32f_C4R", "icv_l9_ownsMul_8u_NegSfs", "icv_y8_ippiSub_8u_C1RSfs", "_ZN2cv3hal11normHammingEPKhS2_ii", "ippicviNorm_L1_8u_C3R", "cvCheckArr", "icv_m7_ownFilterMinRow07_32f_C3R", "icv_y8_ippiMean_16s_C3R", "ippicviFilterBorder_32f_C4R", "icv_y8_ownColCubic16u", "icv_y8_ippiRGBToXYZ_8u_C3R", "icv_y8_ippiFilterLaplacianGetBufferSize_32f_C1R", "Java_org_opencv_core_Core_divide_16", "icv_l9_ippsMinEvery_8u", "icv_m7_ownscDftFwd_Prime11_64fc", "_ZN2cv3hal5QR32fEPfmiiiS1_mS1_", "Java_org_opencv_ml_TrainData_getTestSampleWeights_10", "_ZN2cv18SimpleBlobDetector6Params4readERKNS_8FileNodeE", "own_ipps_sSqrt_L9HAynn", "icv_l9_ownpi_NormInfDiff_32f_C1R", "_ZN2cv3LDA7computeERKNS_11_InputArrayES3_", "icv_l9_ownsMaxEvery_64f", "icv_l9_ippiNormRel_Inf_8u_C1MR", "icv_y8_ownFilterColumnPipeline_16s8u_C1R_3x3", "icv_y8_ownFilterRowBorderPipeline_8u16s_C3R_3x3", "icv_y8_ownFilterRowBorderPipeline_32f_C1R_5x5_P8Y8cn", "__gxx_personality_v0", "icv_l9_owns_cFftFwd_Fact8_64fc", "_ZN2cv3ocl6DeviceD1Ev", "icv_y8_ownippiErodeBorder_8u_C4R", "icv_l9_ippiFilterGaussianBorder_16s_C3R", "_ZN2cv12seqPushFrontEP5CvSeqPKv", "icv_l9_ownFilterMaxRow02_32f_C1R", "icv_y8_ippsCos_64f_A53", "icv_m7_ownsInitTabDftFwdRec_32f", "Java_org_opencv_core_Core_mean_11", "_ZN10__cxxabiv119__pointer_type_infoD0Ev", "Java_org_opencv_core_Mat_n_1t", "icv_m7_ownscDftFwd_Prime6_64fc", "Java_org_opencv_features2d_MSER_setDelta_10", "_ZN2cv6detail12AffineWarper4warpERKNS_11_InputArrayES4_S4_iiRKNS_12_OutputArrayE", "_ZN2cv12buildPyramidERKNS_11_InputArrayERKNS_12_OutputArrayEii", "icv_m7_ippiCopyReplicateBorder_32f_C4R", "Java_org_opencv_features2d_BOWTrainer_getDescriptors_10", "icv_m7_ownCubicKernel2", "icv_m7_owns_rFFTinv_32_64f", "own_ipps_dCos_E7HAynn", "ippicviRGBToXYZ_16u_C3R", "cvMemStorageAllocString", "ippicviRGBToGray_32f_AC4C1R", "icv_l9_ownscDFTinv_3_32fc", "icv_m7_ownFilterColumnPipeline_16u_C1R_5x5", "icv_m7_ownscDFTfwd_12_32fc", "ippicviMirror_32s_C4IR", "icv_y8_ownscDFTfwd_13_32fc", "icv_y8_ippiResizeLinear_16u_C3R", "_ZN2cv3hal6resizeEiPKhmiiPhmiiddi", "_ZN9CvLevMarqC1Eii14CvTermCriteriab", "ippicviSet_32f_C3MR", "icv_l9_ippiCopy_16u_AC4C3R", "icv_l9_ownFilterRowBorderPipeline_8u16s_C1R_5x5_kerDxNeg", "_ZN9CvLevMarqC1Ev", "icv_l9_ippiAdd_16u_C1RSfs", "icv_m7_ownFilterMaxRow04_8u_C1R", "icv_m7_ownFilterColumnPipeline_16s_C1R_5x5_kerLaplacian_W7cn", "cvReleasePOSITObject", "icv_m7_owniConvert_16s8s_ccode", "_ZN3tbb8internal8governor20setBlockingTerminateEPKNS_19task_scheduler_initE", "_ZN2cv10accumulateERKNS_11_InputArrayERKNS_17_InputOutputArrayES2_", "icv_y8_owniFilterPrewittVertBorder2_16s_C1R", "_ZN2cv5splitERKNS_11_InputArrayERKNS_12_OutputArrayE", "icv_l9_ippiAlphaPremul_8u_AC4R", "icv_l9_ippiMulPack_32f_C1R", "Java_org_opencv_core_Core_merge_10", "_ZN3tbb8internal5arena25occupy_free_slot_in_rangeERNS0_17generic_schedulerEmm", "icv_m7_ippiNormRel_Inf_16s_C1R", "icv_m7_ippiCopyReplicateBorder_16s_C1IR", "icv_y8_ownFilterRowBorderPipeline_16u_C3R", "_ZN2cv9videostab18FastMarchingMethod6heapUpEi", "Java_org_opencv_features2d_Feature2D_detectAndCompute_11", "Java_org_opencv_core_TickMeter_start_10", "icv_m7_ownippiMorphologyBorderReplicateInMemGetSize_32f_C1R", "icv_l9_ippiDilateBorder_8u_C1R", "icv_l9_ownsAdd_16s_1Sfs", "icv_y8_ownFilterMinRow02_32f_C3R", "icv_y8_innerSwapChannels_32s_C4R", "Java_org_opencv_objdetect_HOGDescriptor_get_1signedGradient_10", "_ZN2cv2ml7ANN_MLP6createEv", "icv_l9_ownsrDFTinv_6_32f", "icv_l9_ippiCopyConstBorder_8u_C1R", "Java_org_opencv_video_DualTVL1OpticalFlow_create_10", "_ZNK2cv4UMat4diagEi", "Java_org_opencv_photo_TonemapDrago_delete", "icv_l9_ownsrDFTfwd_6_scale_32f", "icv_l9_ippiTrueDistanceTransform_8u32f_C1R", "Java_org_opencv_objdetect_HOGDescriptor_detectMultiScale_11", "_ZN2cv9FormattedD0Ev", "icv_m7_myRGBToXYZ_8u_C3R", "icv_m7_ipMirror45_16uC1R", "icv_y8_owniFilterScharrHorizMaskBorder2_32f_C1R", "icv_l9_ippiTranspose_8u_C1R", "icv_m7_ippiFilterGaussianBorder_16u_C3R", "Java_org_opencv_videoio_VideoCapture_open_10", "icv_m7_ippiCopyReplicateBorder_16u_C4R", "icv_m7_ippiMinMaxIndx_16u_C1R", "icv_l9_ippsSet_32s", "Java_org_opencv_photo_TonemapMantiuk_getScale_10", "icv_y8_owniShiftClipRectZeroTail_16u32f_C1R", "_ZN3tbb16spin_rw_mutex_v323internal_release_writerEv", "_ZN2cv6detail7Blender7prepareERKSt6vectorINS_6Point_IiEESaIS4_EERKS2_INS_5Size_IiEESaISA_EE", "icv_l9_owniTranspose32s_C3R_core2", "ippicviMean_StdDev_8u_C1R", "Java_org_opencv_imgproc_Subdiv2D_getVertex_11", "_ZN2cv22createMorphologyFilterEiiRKNS_11_InputArrayENS_6Point_IiEEiiRKNS_7Scalar_IdEE", "_ZN2cv3hal5LU64fEPdmiS1_mi", "icv_m7_ippiNorm_Inf_8u_C3R", "icv_y8_ippiNormDiff_L2_16u_C3CMR", "Java_org_opencv_core_Core_bitwise_1not_10", "icv_l9_owns_cFFTfwd_16_32fc", "cvGetSeqReaderPos", "icv_l9_ippiNormDiff_Inf_32f_C1R", "_ZNK3tbb8internal27allocate_continuation_proxy8allocateEm", "Java_org_opencv_core_Core_normalize_10", "ippicviMirror_32s_C3IR", "icv_l9_ippiFilterScharrHorizMaskBorder_16s_C1R", "icv_m7_ownsrDFTinv_3_scale_64f", "_ZN2cv3ocl12PlatformInfoD2Ev", "icv_l9_ippiCopyReplicateBorder_8u_C1R", "Java_org_opencv_photo_CalibrateCRF_process_10", "icv_m7_ippsCopy_16s", "icv_m7_ippiMean_16s_C1R", "icv_l9_ippsDFTGetSize_C_32fc", "Java_org_opencv_ml_SVM_getGamma_10", "icv_y8_ownsGetSizeTabDftInvRec_32f", "icv_y8_ippiIntegral_8u32f_C1R", "cvAlloc", "Java_org_opencv_core_Core_invert_10", "Java_org_opencv_imgproc_Imgproc_convertMaps_11", "icv_l9_ippiNorm_Inf_16u_C3R", "Java_org_opencv_calib3d_StereoSGBM_delete", "icv_y8_ownFilterMaxRow05_8u_C3R", "_ZN2cv3MatC2EiPKiiPvPKm", "_ZN2cv3ocl9KernelArgC1EiPNS_4UMatEiiPKvm", "_ZN2cv3hal12magnitude32fEPKfS2_Pfi", "cvReleaseData", "icv_y8_ippiCopyReplicateBorder_16u_C4R", "icv_l9_ippiFilterColumnPipelineGetBufferSize_16s8u_C1R", "icv_l9_ownscDFTinv_6_64fc", "icv_m7_owns_cFFTinv_4_scale_32fc", "icv_y8_ippiAddSquare_16u32f_C1IMR", "Java_org_opencv_core_Mat_n_1eye__III", "_ZNK2cv4cuda10DeviceInfo12maxTexture3DEv", "_ZNK2cv8Subdiv2D7getEdgeEii", "__register_frame_info_table", "Java_org_opencv_core_Core_idft_10", "icv_m7_ippiCopyReplicateBorder_16u_C3R", "icv_y8_ippsDFTGetSize_C_64fc", "_ZN2cv3ocl6KernelD2Ev", "icv_l9_ippiMean_StdDev_32f_C1MR", "icv_l9_ownippiFilterMinBorderReplicate_8u_C3R", "Java_org_opencv_ml_LogisticRegression_getIterations_10", "icv_l9_Erode_32f_C1S", "Java_org_opencv_features2d_AgastFeatureDetector_getNonmaxSuppression_10", "icv_m7_ipMirror45_32uC1R", "icv_y8_ownFilter_32f_C4R_v8u8", "icv_y8_ippiNorm_L1_32f_C1R", "icv_m7_innerRGBToXYZ_16u_C3R", "icv_y8_ippiSet_16s_C3MR", "_ZN2cv3hal11cvtBGRtoLabEPKhmPhmiiiibbb", "ippicviErodeBorder_8u_C1R", "icv_y8_owns_sDctInv_PreMul_32f", "icv_y8_ownscDftFwd_Prime8_64fc", "Java_org_opencv_video_SparseOpticalFlow_delete", "icv_l9_ownRow1Linear16s", "icv_y8_owns_getSizesTwd_Large_32f", "cvAnd", "icv_l9_ippiConvert_16u16s_C1RSfs", "icv_y8_ownFilterBorder16s_8u_C1R", "_ZN2cv11FileStorageC2Ev", "icv_m7_ownFilterMinRow13_32f_C3R", "icv_m7_ippsPowx_64f_A50", "icv_m7_ownsSub_16s_NegSfs", "icv_y8_ippsMaxEvery_64f", "icv_m7_ippiTranspose_16s_C3R", "ippicviDotProd_32s64f_C1R", "_ZN2cv7vconcatERKNS_11_InputArrayES2_RKNS_12_OutputArrayE", "Java_org_opencv_core_Core_subtract_10", "icv_y8_ippiFilterGaussianBorder_16u_C3R", "icv_l9_ippsDFTGetSize_R_32f", "_ZN2cv6detail14FeatherBlender5blendERKNS_17_InputOutputArrayES4_", "Java_org_opencv_ml_EM_trainM_11", "_ZN10__cxxabiv119__pointer_type_infoD1Ev", "icv_m7_ippiSum_16u_C4R", "icv_l9_ippiFilterGaussianBorder_16u_C3R", "Java_org_opencv_ml_Boost_getWeightTrimRate_10", "_ZN2cv3ocl8PlatformaSERKS1_", "icv_y8_ippiNorm_Inf_8u_C3R", "icv_y8_ownCalcBorderR1Cubic16s", "icv_m7_ippiMirror_32f_C3IR", "_ZN2cv17FlannBasedMatcher3addERKNS_11_InputArrayE", "_ZN2cveqERKNS_3MatEd", "Java_org_opencv_core_Core_PSNR_10", "icv_l9_ippsDFTGetSize_C_64fc", "icv_m7_ippiMean_StdDev_16u_C3CR", "icv_l9_ownscDFTinv_10_scale_64fc", "_ZN2cv3ocl13ProgramSourceD1Ev", "icv_m7_ownsrDFTinv_3_64f", "icv_m7_ownippiMorphologyBorderReplicateInMemInit_32f_C4R", "icv_y8_ippiMirror_32f_C3R", "_ZN2cv21intersectConvexConvexERKNS_11_InputArrayES2_RKNS_12_OutputArrayEb", "icv_l9_ownscDftFwd_Prime3_64fc", "icv_y8_ownsrDFTfwd_10_scale_64f", "icv_y8_ippiConvert_32f32s_C1RSfs", "ippicvsDFTGetSize_C_32fc", "Java_org_opencv_imgproc_Imgproc_integral_11", "Java_org_opencv_ml_KNearest_getEmax_10", "icv_m7_owniShiftClipRectZeroTail_8u32f_C1R", "icv_m7_ownsFFTGetBufSize_R_64f", "Java_org_opencv_features2d_MSER_delete", "__deregister_frame_info_bases", "icv_l9_ippiSet_16u_C1MR", "ippicviFilterMinBorder_32f_C4R", "Java_org_opencv_imgproc_Imgproc_minEnclosingCircle_10", "Java_org_opencv_ml_TrainData_getCatMap_10", "icv_l9_owniConvert_16s8s_ccode", "icv_y8_ippiSum_16u_C1R", "_ZN2cv5instr8NodeDataC1ERS1_", "icv_y8_owns_cFFTfwd_32_32fc", "icv_l9_ownCalcBorderR1Linear16s", "icv_m7_ippiCopySubpixIntersect_8u_C1R", "icv_l9_ownFilterRowBorderPipeline_16u_C3R_3x3_P8Y8cn", "icv_l9_ownsMinEvery_16u", "Java_org_opencv_video_DenseOpticalFlow_collectGarbage_10", "icv_y8_ippsDFTInv_PackToR_32f", "Java_org_opencv_calib3d_Calib3d_findCirclesGrid_10", "icv_y8_ippsSet_32f", "icv_l9_ownFilterBorder16s_16s_C1R", "_ZNK2cv5flann11IndexParams9getDoubleERKNS_6StringEd", "Java_org_opencv_videoio_VideoCapture_read_10", "icv_l9_ippiResizeCubicInit_16s", "icv_l9_ippiCopyConstBorder_16u_C1R", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EEidPS0_IiSaIiEEPS0_IdSaIdEE", "ippicviNorm_L2_16u_C1R", "ippicviFilterScharrHorizMaskBorderGetBufferSize", "_ZN2cv16BOWKMeansTrainerD2Ev", "icv_m7_owniDenominator_C1R", "own_ipps_dSqrt_L9EPnnn", "Java_org_opencv_ml_TrainData_getTrainResponses_10", "Java_org_opencv_objdetect_HOGDescriptor_getDaimlerPeopleDetector_10", "icv_l9_owniFilter32f_8u_C4R_g9e9_3", "Java_org_opencv_photo_CalibrateDebevec_getLambda_10", "_ZN2cv3ogl6renderERKNS0_6ArraysEiNS_7Scalar_IdEE", "_ZN2cv2ml6KDTreeC2Ev", "icv_l9_ownscDFTinv_6_scale_32fc", "icv_m7_owniCrossCorrValid_NormLevel_8u32f_C1R", "cvCopy", "_ZN2cv25BOWImgDescriptorExtractor7computeERKNS_11_InputArrayERSt6vectorINS_8KeyPointESaIS5_EERKNS_12_OutputArrayEPS4_IS4_IiSaIiEESaISD_EEPNS_3MatE", "Java_org_opencv_video_KalmanFilter_set_1gain_10", "icv_m7_owns_getSizeDct_Fft_32f", "cvSaveMemStoragePos", "icv_y8_ownscDFTinv_12_scale_32fc", "icv_y8_owns_rFFTinv_4_32f", "icv_m7_ownsrDFTfwd_10_64f", "icv_y8_ownscDftFwd_PrimeFact_64fc", "icv_y8_ippsDFTInit_R_64f", "icv_m7_ownsrDFTinv_10_32f", "icv_y8_ownscDFTinv_15_32fc", "cvFindFundamentalMat", "icv_l9_ownsrDFTfwd_11_32f", "Java_org_opencv_imgproc_Imgproc_ellipse_10", "_ZN2cv15groupRectanglesERSt6vectorINS_5Rect_IiEESaIS2_EERS0_IiSaIiEEid", "_ZN2cv10moveWindowERKNS_6StringEii", "icv_l9_ippiErodeBorder_32f_C4R", "own_ipps_sExp_L9EPnnn", "icv_l9_ownFilterMinRow06_32f_C1R", "icv_m7_ippiNorm_L1_16s_C4R", "icv_m7_ownsrDFTinv_15_scale_32f", "icv_l9_ownscDftFwd_Fact3_64fc", "icv_l9_owniCCDiv_32f_C1IR", "Java_org_opencv_features2d_Params_get_1minCircularity_10", "_ZNK2cv3ocl12PlatformInfo7versionEv", "_ZN2cv11VideoWriter4openERKNS_6StringEidNS_5Size_IiEEb", "icv_m7_ownColCubic32f", "_ZN3tbb17assertion_failureEPKciS1_S1_", "ippicviAbsDiff_16u_C1R", "_ZN2cv8Stitcher20estimateCameraParamsEv", "icv_y8_gres_NormL2_16u_C1R", "icv_l9_ownCalcBorderR1Linear64f", "icv_y8_ownpi_NormL1Diff_32f_C3R", "icv_l9_ownRow4Cubic32f", "icv_m7_ippiMin_32f_C1R", "icv_m7_ippiSum_16u_C1R", "Java_org_opencv_imgproc_Imgproc_sqrBoxFilter_12", "Java_org_opencv_features2d_FastFeatureDetector_create_11", "icv_l9_ownscDftFwd_Prime13_64fc", "Java_org_opencv_photo_CalibrateRobertson_getMaxIter_10", "Java_org_opencv_core_Mat_n_1setTo__JDDDDJ", "icv_l9_ownsrDFTinv_15_scale_32f", "icv_m7_ownFilterMinRow07_32f_C1R", "_ZN2cv3hal6cmp64fEPKdmS2_mPhmiiPv", "Java_org_opencv_core_Core_cubeRoot_10", "icv_l9_ippsFFTInv_PermToR_32f", "_ZN2cv3ogl6Arrays16resetNormalArrayEv", "icv_l9_ippsSortRadixGetBufferSize", "_ZNK2cv7MatExprclERKNS_5RangeES3_", "icv_y8_ownApplyHaarClassifier_32f_C1R_PRN", "_ZN3tbb4task22internal_set_ref_countEi", "_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastElNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE", "icv_y8_ownFilterRowBorderPipeline_16s_C3R_X_W7cn", "_ZN2cv3hal6log32fEPKfPfi", "icv_m7_ippiSub_32f_C1R", "Java_org_opencv_core_Core_repeat_10", "_ZN2cv11drawMatchesERKNS_11_InputArrayERKSt6vectorINS_8KeyPointESaIS4_EES2_S8_RKS3_INS_6DMatchESaIS9_EERKNS_17_InputOutputArrayERKNS_7Scalar_IdEESK_RKS3_IcSaIcEEi", "Java_org_opencv_imgproc_Imgproc_applyColorMap_10", "_ZN2cv4cuda5Event17waitForCompletionEv", "_ZN2cv3maxERKNS_3MatEd", "ippicviTranspose_32f_C3R", "icv_y8_ippiSum_32f_C3R", "Java_org_opencv_imgcodecs_Imgcodecs_imread_10", "_ZN2cv3hal12cvtBGRtoGrayEPKhmPhmiiiib", "icv_m7_ownFilterMinRow04_32f_C4R", "_ZN2cv6detail11waveCorrectERSt6vectorINS_3MatESaIS2_EENS0_15WaveCorrectKindE", "icv_l9_ownFilterMaxRow13_32f_C3R", "_ZN3tbb8internal6market22set_active_num_workersEj", "icv_y8_ownCalcBorderR4Linear32f", "icv_m7_ownsrDFTfwd_15_64f", "ippicviSwapChannels_32f_C4C3R", "icv_l9_ownscDFTinv_9_scale_64fc"], "allstrings": ["/build/master_pack-android/opencv/modules/core/include/opencv2/core/mat.inl.hpp", "/build/master_pack-android/opencv/modules/java/generator/src/cpp/utils.cpp", "nBitmapToMat catched cv::Exception: %s", "nBitmapToMat catched unknown exception (...)", "Unknown exception in JNI code {nBitmapToMat}", "nMatToBitmap catched cv::Exception: %s", "nMatToBitmap catched unknown exception (...)", "Unknown exception in JNI code {nMatToBitmap}", "Unknown exception in JNI code {core::minMaxLoc()}", "Unknown exception in JNI code {core::getTextSize()}", "/build/master_pack-android/opencv/modules/features2d/misc/java/src/cpp/features2d_manual.hpp", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/private.cuda.hpp", "/build/master_pack-android/opencv/modules/core/src/dxt.cpp", "This mode (using nonzero_rows with a single-column matrix) breaks the function's logic, so it is prohibited.\nFor fast convolution/correlation use 2-column matrix or single-row matrix instead", "/build/master_pack-android/opencv/modules/core/src/alloc.cpp", "/build/master_pack-android/opencv/modules/core/src/command_line_parser.cpp", "undeclared position %d requested", "/build/master_pack-android/opencv/modules/core/src/downhill_simplex.cpp", "/build/master_pack-android/opencv/modules/core/src/kmeans.cpp", "(best_labels.cols == 1 || best_labels.rows == 1) && best_labels.cols*best_labels.rows == N && best_labels.type() == CV_32S && best_labels.isContinuous()", "(termcrit.type==(TermCriteria::MAX_ITER+TermCriteria::EPS) && termcrit.epsilon>0 && termcrit.maxCount>0) || ((termcrit.type==TermCriteria::MAX_ITER) && termcrit.maxCount>0)", "/build/master_pack-android/opencv/modules/core/src/conjugate_gradient.cpp", "/build/master_pack-android/opencv/modules/core/src/glob.cpp", "/build/master_pack-android/opencv/modules/core/src/arithm.cpp", "The operation is neither 'array op array' (where arrays have the same size and type), nor 'array op scalar', nor 'scalar op array'", "The operation is neither 'array op array' (where arrays have the same size and the same number of channels), nor 'array op scalar', nor 'scalar op array'", "When the input arrays in add/subtract/multiply/divide functions have different types, the output array type must be explicitly specified", "The operation is neither 'array op array' (where arrays have the same size and the same type), nor 'array op scalar', nor 'scalar op array'", "/build/master_pack-android/opencv/modules/core/src/directx.cpp", "/build/master_pack-android/opencv/modules/core/src/rand.cpp", "_param1.channels() == 1 && (_param1.rows == 1 || _param1.cols == 1) && (_param1.rows + _param1.cols - 1 == cn || _param1.rows + _param1.cols - 1 == 1 || (_param1.size() == Size(1, 4) && _param1.type() == CV_64F && cn <= 4))", "_param2.channels() == 1 && (((_param2.rows == 1 || _param2.cols == 1) && (_param2.rows + _param2.cols - 1 == cn || _param2.rows + _param2.cols - 1 == 1 || (_param1.size() == Size(1, 4) && _param1.type() == CV_64F && cn <= 4))) || (_param2.rows == cn && _param2.cols == cn && disttype == NORMAL))", "/build/master_pack-android/opencv/modules/core/src/stat.cpp", "The combination of type=%d, dtype=%d and normType=%d is not supported", "normType == NORM_INF || normType == NORM_L1 || normType == NORM_L2 || normType == NORM_L2SQR || ((normType == NORM_HAMMING || normType == NORM_HAMMING2) && _src.type() == CV_8U)", "normType == NORM_INF || normType == NORM_L1 || normType == NORM_L2 || normType == NORM_L2SQR || ((normType == NORM_HAMMING || normType == NORM_HAMMING2) && src1.type() == CV_8U)", "/build/master_pack-android/opencv/modules/core/src/umatrix.cpp", "/build/master_pack-android/opencv/modules/core/src/convert.cpp", "/build/master_pack-android/opencv/modules/core/src/lda.cpp", "Wrong shapes for given matrices. Was size(src) = (%d,%d), size(W) = (%d,%d).", "Wrong mean shape for the given data matrix. Expected %d, but was %d.", "Wrong mean shape for the given eigenvector matrix. Expected %d, but was %d.", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/persistence.hpp", "The number of samples must equal the number of labels. Given %d labels, %d samples. ", "Warning: Less observations than feature dimension given!", "Computation will probably fail.", "Wrong number of elements in matrix #%d! Expected %d was %d.", "InputArray Datatype %d is not supported.", "The data is expected as InputArray::STD_VECTOR_MAT (a std::vector<Mat>) or _InputArray::STD_VECTOR_VECTOR (a std::vector< std::vector<...> >).", "/build/master_pack-android/opencv/modules/core/src/matrix.cpp", "dims <= 2 && m.dims <= 2 && size() == m.size() && tp == m.type() && ((rows == 3 && cols == 1) || (cols*channels() == 3 && rows == 1))", "labels.isContinuous() && labels.type() == CV_32S && (labels.cols == 1 || labels.rows == 1) && labels.cols + labels.rows - 1 == data.rows", "d == 2 && ((sizes[0] == sz.height && sizes[1] == sz.width) || (allowTransposed && sizes[0] == sz.width && sizes[1] == sz.height))", "Vectors with element size %d are not supported. Please, modify OutputArray::create()\n", "/build/master_pack-android/opencv/modules/core/src/types.cpp", "\nGeneral configuration for OpenCV 3.2.0 =====================================\n  Version control:               3.2.0\n\n  Platform:\n    Timestamp:                   2016-12-23T13:04:49Z\n    Host:                        Linux 4.8.0-25-generic x86_64\n    Target:                      Linux 1 x86_64\n    CMake:                       2.8.12.2\n    CMake generator:             Ninja\n    CMake build tool:            /usr/bin/ninja\n    Configuration:               Release\n\n  C/C++:\n    Built as dynamic libs?:      NO\n    C++ Compiler:                /usr/bin/ccache /opt/android/android-ndk-r10e/toolchains/x86_64-4.9/prebuilt/linux-x86_64/bin/x86_64-linux-android-g++ (ver 4.9)\n    C++ flags (Release):         -fexceptions -frtti --sysroot=/opt/android/android-ndk-r10e/platforms/android-21/arch-x86_64 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -fvisibility=hidden -fvisibility-inlines-hidden -fomit-frame-pointer -fstrict-aliasing -O2 -DNDEBUG  -DNDEBUG\n    C++ flags (Debug):           -fexceptions -frtti --sysroot=/opt/android/android-ndk-r10e/platforms/android-21/arch-x86_64 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -fvisibility=hidden -fvisibility-inlines-hidden -fno-omit-frame-pointer -fno-strict-aliasing -O0 -g -DDEBUG -D_DEBUG  -O0 -DDEBUG -D_DEBUG\n    C Compiler:                  /usr/bin/ccache /opt/android/android-ndk-r10e/toolchains/x86_64-4.9/prebuilt/linux-x86_64/bin/x86_64-linux-android-gcc\n    C flags (Release):           -fexceptions --sysroot=/opt/android/android-ndk-r10e/platforms/android-21/arch-x86_64 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -fvisibility=hidden -fomit-frame-pointer -fstrict-aliasing -O2 -DNDEBUG  -DNDEBUG\n    C flags (Debug):             -fexceptions --sysroot=/opt/android/android-ndk-r10e/platforms/android-21/arch-x86_64 -funwind-tables -funswitch-loops -finline-limit=300 -fsigned-char -no-canonical-prefixes -fdata-sections -ffunction-sections -Wa,--noexecstack    -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -fomit-frame-pointer -msse -msse2 -mno-avx -msse3 -mno-ssse3 -mno-sse4.1 -mno-sse4.2 -fvisibility=hidden -fno-omit-frame-pointer -fno-strict-aliasing -O0 -g -DDEBUG -D_DEBUG  -O0 -DDEBUG -D_DEBUG\n    Linker flags (Release):      -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now \n    Linker flags (Debug):        -Wl,--no-undefined -Wl,--gc-sections -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now \n    ccache:                      YES\n    Precompiled headers:         NO\n    Extra dependencies:          z dl m log\n    3rdparty dependencies:       libjpeg libwebp libpng libtiff libjasper IlmImf tbb ippicv\n\n  OpenCV modules:\n    To be built:                 core flann imgproc ml photo video imgcodecs shape videoio highgui objdetect superres features2d calib3d java stitching videostab\n    Disabled:                    world\n    Disabled by dependency:      -\n    Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev python2 ts viz\n\n  Android: \n    Android ABI:                 x86_64\n    STL type:                    gnustl_static\n    Native API level:            android-21\n    SDK target:                  android-21\n    Android NDK:                 /opt/android/android-ndk-r10e (toolchain: x86_64-4.9)\n    android tool:                /opt/android/android-sdk-java7/tools/android (Android SDK Tools, revision 25.2.2.)\n    Google Play manager:         NO\n    Android examples:            YES\n\n  GUI: \n    GTK+:                        NO\n    GThread :                    NO\n    GtkGlExt:                    NO\n    OpenGL support:              NO\n    VTK support:                 NO\n\n  Media I/O: \n    ZLib:                        z (ver 1.2.3)\n    JPEG:                        build (ver 90)\n    WEBP:                        build (ver 0.3.1)\n    PNG:                         build (ver 1.6.24)\n    TIFF:                        build (ver 42 - 4.0.2)\n    JPEG 2000:                   build (ver 1.900.1)\n    OpenEXR:                     build (ver 1.7.1)\n    GDAL:                        NO\n    GDCM:                        NO\n\n  Video I/O:\n\n  Parallel framework:            TBB (ver 4.4 interface 9003)\n\n  Other third-party libraries:\n    Use IPP:                     9.0.1 [9.0.1]\n         at:                     /build/master_pack-android/build/o4a/3rdparty/ippicv/ippicv_lnx\n    Use IPP Async:               NO\n    Use Eigen:                   NO\n    Use Cuda:                    NO\n    Use OpenCL:                  NO\n    Use OpenVX:                  NO\n    Use custom HAL:              NO\n\n  Python 2:\n    Interpreter:                 /usr/bin/python2.7 (ver 2.7.6)\n\n  Python 3:\n    Interpreter:                 /usr/bin/python3.4 (ver 3.4.3)\n\n  Python (for build):            /usr/bin/python2.7\n\n  Java:\n    ant:                         /usr/bin/ant (ver 1.9.3)\n    Java wrappers:               YES\n    Java tests:                  NO\n\n  Matlab:                        NO\n\n  Tests and samples:\n    Tests:                       NO\n    Performance tests:           NO\n    C/C++ Examples:              NO\n\n  Install path:                  /build/master_pack-android/build/o4a/install\n\n  cvconfig.h is in:              /build/master_pack-android/build/o4a\n-----------------------------------------------------------------\n\n", "%s:%d: error: (%d) %s in function %s\n", "Inplace operation is not supported", "Requested object was not found", "Input image depth is not supported by function", "Formats of input arguments do not match", "Sizes of input arguments do not match", "One of arguments' values is out of range", "Unsupported format or combination of formats", "Bad flag (parameter or structure field)", "The function/feature is not implemented", "Memory block has been corrupted", "OpenCV Error: %s (%s) in %s, file %s, line %d", "WARNING: IPP was disabled by OPENCV_IPP environment variable", "ERROR: Improper value of OPENCV_IPP: ", "/build/master_pack-android/opencv/modules/core/src/system.cpp", "/build/master_pack-android/opencv/modules/core/src/mathfuncs.cpp", "the value at (%d, %d)=%s is out of range [%f, %f)", "(coeffs.size() == Size(n0, 1) || coeffs.size() == Size(n0+1, 1) || coeffs.size() == Size(1, n0) || coeffs.size() == Size(1, n0+1))", "basic_string::_S_construct null not valid", "/build/master_pack-android/opencv/modules/core/src/ocl.cpp", "Invalid value for %s parameter: %s", "getBufferPoolController(): unknown BufferPool ID\n", "-D %s_T=%s -D %s_T1=%s -D %s_CN=%d -D %s_TSIZE=%d -D %s_T1SIZE=%d -D %s_DEPTH=%d", "OPENCV_OPENCL_PERF_CHECK_BYPASS", "ERROR: Invalid configuration string for OpenCL device", "ERROR: Can't find OpenCL platform by name: ", "ERROR: Unsupported device type for OpenCL device (GPU, CPU, ACCELERATOR): ", "ERROR: Requested OpenCL device not found, check configuration: ", "OPENCV_OPENCL_BUFFERPOOL_LIMIT", "OPENCV_OPENCL_HOST_PTR_BUFFERPOOL_LIMIT", "OpenCL program build log: %s\n%s\n", "name=%s\ndriver=%s\nbuildflags=%s\n", "(retval = clEnqueueCopyBuffer(q, (cl_mem)src->handle, (cl_mem)dst->handle, srcrawofs, dstrawofs, total, 0, 0, 0)) == CL_SUCCESS", "(retval = clEnqueueCopyBufferRect(q, (cl_mem)src->handle, (cl_mem)dst->handle, new_srcofs, new_dstofs, new_sz, new_srcstep[0], 0, new_dststep[0], 0, 0, 0, 0)) == CL_SUCCESS", "clEnqueueWriteBufferRect(q, (cl_mem)u->handle, CL_TRUE, new_dstofs, new_srcofs, new_sz, new_dststep[0], 0, new_srcstep[0], 0, ptr, 0, 0, 0) >= 0", "clEnqueueReadBufferRect(q, (cl_mem)u->handle, CL_TRUE, new_srcofs, new_dstofs, new_sz, new_srcstep[0], 0, new_dststep[0], 0, ptr, 0, 0, 0) >= 0", "(retval = clEnqueueWriteBuffer(q, (cl_mem)u->handle, CL_TRUE, 0, u->size, alignedPtr.getAlignedPtr(), 0, 0, 0)) == CL_SUCCESS", "clEnqueueCopyBufferRect(queue, (cl_mem)src.handle(ACCESS_READ), devData, origin, origin, roi, src.step, 0, src.cols * src.elemSize(), 0, 0, NULL, NULL) == CL_SUCCESS", "/build/master_pack-android/opencv/modules/core/src/lpsolver.cpp", "/build/master_pack-android/opencv/modules/core/src/copy.cpp", "/build/master_pack-android/opencv/modules/core/src/cuda_host_mem.cpp", "/build/master_pack-android/opencv/modules/core/src/ovx.cpp", "/build/master_pack-android/opencv/modules/core/src/array.cpp", "rect.width >= 0 && rect.height >= 0 && rect.x < image->width && rect.y < image->height && rect.x + rect.width >= (int)(rect.width > 0) && rect.y + rect.height >= (int)(rect.height > 0)", "/sys/devices/system/cpu/possible", "/build/master_pack-android/opencv/modules/core/src/pca.cpp", "!mean.empty() && !eigenvectors.empty() && ((mean.rows == 1 && mean.cols == data.cols) || (mean.cols == 1 && mean.rows == data.rows))", "!mean.empty() && !eigenvectors.empty() && ((mean.rows == 1 && eigenvectors.rows == data.cols) || (mean.cols == 1 && eigenvectors.rows == data.rows))", "/build/master_pack-android/opencv/modules/core/src/gl_core_3_1.cpp", "/build/master_pack-android/opencv/modules/core/src/matop.cpp", "/build/master_pack-android/opencv/modules/core/src/opengl.cpp", "/build/master_pack-android/opencv/modules/core/src/lapack.cpp", "w.type() == type && (w.size() == cv::Size(nm,1) || w.size() == cv::Size(1, nm) || w.size() == cv::Size(nm, nm) || w.size() == cv::Size(n, m))", "/build/master_pack-android/opencv/modules/core/src/out.cpp", "/build/master_pack-android/opencv/modules/core/src/va_intel.cpp", "/build/master_pack-android/opencv/modules/core/src/cuda_gpu_mat.cpp", "/build/master_pack-android/opencv/modules/core/src/persistence.cpp", "Not supported escape character", "Invalid character in the stream", "Bad format of floating-point constant", "Sequence element should not have name (use <_></_>)", "Too long string or a last string w/o newline", "fs->is_write_struct_delayed == false", "The closing '%c' does not match the opening '%c'", "Map element should have a name", "Directive tags are not allowed here", "data size not matches elememt size", "There should be space between literals", "Invalid numeric value (inconsistent explicit type specification?)", "Literal \" is not allowed within a string. Use &quot;", "Literal ' or > are not allowed. Use &apos; or &gt;", "Invalid numeric value in the string", "Invalid character in the symbol entity name", "The actual type is different from the specified type", "Closing tag should not contain any attributes", "Attribute name should be followed by '='", "Attribute value should be put into single or double quotes", "Invalid closing tag for <?xml ...", "There should be space between attributes", "Name should start with a letter or underscore", "Byte size not match elememt size", "Missing , between the elements", "Complex keys are not supported", "Multi-line text literals are not supported", "Block sequence elements must be preceded with '-'", "'\"' - right-quote of string is missing", "basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", "'\\uXXXX' currently not supported", "Value 'null' is not supported by this parser", "'{' - left-brace of map is missing", "Missing ':' between key and value", "\"type_id\" should be of type string", "'}' - right-brace of map is missing", "'[' - left-brace of seq is missing", "']' - right-brace of seq is missing", "%s: __pos (which is %zu) > this->size() (which is %zu)", "<?xml version=\"1.0\" encoding=\"%s\"?>\n", "Valid XML should start with '<?xml ...?>'", "<opencv_storage> tag is missing", "</opencv_storage> tag is missing", "Unsupported YAML version (it must be 1.x)", "The YAML streams must start with '---', except the first one", "Only collections as YAML streams are supported by this parser", "left-brace of top level is missing", "/build/master_pack-android/opencv/modules/core/src/datastructs.cpp", "/build/master_pack-android/opencv/modules/core/src/matmul.cpp", "C.type() == type && (((flags&GEMM_3_T) == 0 && C.rows == d_size.height && C.cols == d_size.width) || ((flags&GEMM_3_T) != 0 && C.rows == d_size.width && C.cols == d_size.height))", "(D.rows == ((flags & CV_GEMM_A_T) == 0 ? A.rows : A.cols)) && (D.cols == ((flags & CV_GEMM_B_T) == 0 ? B.cols : B.rows)) && D.type() == A.type()", "[WARNING] The cvflann::set_distance_type function is deperecated, use cv::flann::GenericIndex<Distance> instead.", "[ERROR] cvflann::set_distance_type only provides backwards compatibility for the L1 and L2 distances. For other distance types you must use cv::flann::GenericIndex<Distance>", "/build/master_pack-android/opencv/modules/flann/src/miniflann.cpp", "Invalid key_size (=%d). Valid values for your system are %d <= key_size < %d.", "/build/master_pack-android/opencv/modules/flann/include/opencv2/flann/lsh_table.h", "Can not open file %s for writing FLANN index\n", "Unknown algorithm for choosing initial centers.", "I can only search one feature at a time for range search\n", "Invalid index file, cannot read", "Invalid index file, wrong signature", "Datatype of saved index is different than of the one to be created.", "The index saved belongs to a different dataset", "Reading FLANN index error: unsupported feature type %d for the index type %d\n", "Reading FLANN index error: unsupported distance type %d\n", "Reading FLANN index error: the saved data size (%d, %d) or type (%d) is different from the passed one (%d, %d), %d\n", "Branching factor must be at least 2", "Ground truth is not computed for as many neighbors as requested", "%8d %10.4g %10.5g %10.5g %10.5g\n", "  Nodes  Precision(%)   Time(s)   Time/vec(ms)  Mean dist\n", "---------------------------------------------------------\n", "No need for linear estimation\n", "KMeans algorithm, estimating cluster border factor\n", "Required number of checks: %d \n", "LSH is not implemented for that type", "It doesn't make any sense to use more than one tree for exact search", "KD-TREE, Step 1: Exploring parameter space\n", "KDTree using params: trees=%d\n", "KDTree buildTime=%g, searchTime=%g\n", "KMEANS, Step 1: Exploring parameter space\n", "KMeansTree using params: max_iterations=%d, branching=%d\n", "KMeansTree buildTime=%g, searchTime=%g, build_weight=%g\n", "Entering autotuning, dataset size: %d, sampleSize: %d, testSampleSize: %d, target precision: %g\n", "Choosing linear, dataset too small\n", "----------------------------------------------------\n", "/build/master_pack-android/opencv/modules/imgproc/src/intersection.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/convhull.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/undistort.cpp", "CV_IS_MAT(_src) && CV_IS_MAT(_dst) && (_src->rows == 1 || _src->cols == 1) && (_dst->rows == 1 || _dst->cols == 1) && _src->cols + _src->rows - 1 == _dst->rows + _dst->cols - 1 && (CV_MAT_TYPE(_src->type) == CV_32FC2 || CV_MAT_TYPE(_src->type) == CV_64FC2) && (CV_MAT_TYPE(_dst->type) == CV_32FC2 || CV_MAT_TYPE(_dst->type) == CV_64FC2)", "CV_IS_MAT(_distCoeffs) && (_distCoeffs->rows == 1 || _distCoeffs->cols == 1) && (_distCoeffs->rows*_distCoeffs->cols == 4 || _distCoeffs->rows*_distCoeffs->cols == 5 || _distCoeffs->rows*_distCoeffs->cols == 8 || _distCoeffs->rows*_distCoeffs->cols == 12 || _distCoeffs->rows*_distCoeffs->cols == 14)", "src.isContinuous() && (src.depth() == CV_32F || src.depth() == CV_64F) && ((src.rows == 1 && src.channels() == 2) || src.cols*src.channels() == 2)", "(distCoeffs0.cols == 1 || distCoeffs0.rows == 1) && (ndcoeffs == 4 || ndcoeffs == 5 || ndcoeffs == 8 || ndcoeffs == 12 || ndcoeffs == 14)", "distCoeffs.size() == Size(1, 4) || distCoeffs.size() == Size(4, 1) || distCoeffs.size() == Size(1, 5) || distCoeffs.size() == Size(5, 1) || distCoeffs.size() == Size(1, 8) || distCoeffs.size() == Size(8, 1) || distCoeffs.size() == Size(1, 12) || distCoeffs.size() == Size(12, 1) || distCoeffs.size() == Size(1, 14) || distCoeffs.size() == Size(14, 1)", "coeffs[i] >= 0 && coeffs[i*3+1] >= 0 && coeffs[i*3+2] >= 0 && coeffs[i*3] + coeffs[i*3+1] + coeffs[i*3+2] < 2*(1 << lab_shift)", "/build/master_pack-android/opencv/modules/imgproc/src/color.cpp", "coeffs[j] >= 0 && coeffs[j + 1] >= 0 && coeffs[j + 2] >= 0 && coeffs[j] + coeffs[j + 1] + coeffs[j + 2] < 1.5f*LabCbrtTabScale", "MWOMOV OMSMUNUPSQ OQSQURUUSVOV", "MXRMPNOPOSPURVSVUUVSVPUNSMRM STVW", "MXRMPNOPOSPURVSVUUVSVPUNSMRM QQTR TQQR", "MWQMNV QMTMVNVPSQPQ SQURUTTURVNV", "LXVPUNTMRMPNOONQNSOUPVRVTUUSRS", "LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM", "LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM QVPUPTQSRSSTTVUWVW", "MWQMNV QMUMVNVPUQSRPR QRRUSVTVUU", "MWUPUVTXRYPY USTQRPPQOSPURVTUUS", "KYMPMV MSNQOPPPQQRSRV RSSQTPUPVQWSWV", "MWOTQVSVTUTSSRPQRQTPUOUNTMRMQNPPOTNY", "MWTNSMRMQNQORPTQUSTURVPUOSPQRP", "NWTMSNSOTP UPSPQQPSPUQVSWSXRYQY", "LXNQOPPPQQQSPV QSRQTPUPVQVSUVTY", "LXNQOPPPQQQURVSVTUUSVPVNUMTMSNSPTRUSWT", "LYPPMY UPTSSUQVPVOUOS TSTUUVVVWU", "NWTMSNSOTP UPSPQQQRRSTS SSQTPUPVQWSXSYRZQZ", "MXPPOQOSPURVSVUUVSVQUPTPSQRSQY", "LWTSSQQPOQNSOUQVSUTS UPTSTUUVVV", "LWTSSQQPOQNSOUQVSUTS VMTSTUUVVV", "MXUSTQRPPQOSPURVTUUS VPTVSXRYPYOX", "OUSMSNTNTMSM QPRPSQSRRVQXPYOYNX", "JYKPLPMQMSLV MSNQOPQPRQRSQV RSSQTPVPWQWRVTVUWVXV", "MWNPOPPQPSOV PSQQRPTPUQURTTTUUVVV", "MXNPOPPQPSNY PSQUSVUUVSUQSPQQPS", "MWNPOPPQPROTOUPVRVSUTS UPTSTUUVVV", "KYLPMPNQNRMTMUNVPVQURSSP RSRUSVUVVUWRWP", "MWOQPPQPRQRUSVTVUU VQUPTPSQQUPVOVNU", "MWNPOPPQPROTOUPVRVSUTS UPSVRXQYOYNX", "MWRMQNPPOSOVPWRWSVTTUQUNTMRM PRTR", "KYTPTSUTVTWSWQVOUNSMQMONNOMQMSNUOVQWSWUV TQSPQPPQPSQTSTTS", "LYPMQNQOPPOPNONNOMPMSNUNWMNV USTTTUUVVVWUWTVSUS", "MWQMONOPQQSQUPUNSMQM QQOROUQVSVUUURSQ", "NWPNRMSMUNUPRQRRSRSQUP RURVSVSURU", "MWRKRX UNSMQMONOPQQTRUSUUSVQVOU", "LXVRURTSSURVOVNUNSORRQSPSNRMPMONOPQSSUUVVV", "LXNNOQOSNV VNUQUSVV NNQOSOVN NVQUSUVV", "LYRQQPOPNQNSOTQTRSSQTPVPWQWSVTTTSSRQ", "H\\MPLQLRMSNSOROQNPMP MQMRNRNQMQ WPVQVRWSXSYRYQXPWP WQWRXRXQWQ", "F^ISJQLPNPPQTTVUXUZT[Q ISJPLONOPPTSVTXTZS[Q IYJWLVNVPWTZV[X[ZZ[W IYJVLUNUPVTYVZXZZY[W", "F^ISJQLPNPPQTTVUXUZT[Q ISJPLONOPPTSVTXTZS[Q IW[W I[[[", "KYQVOUNSNQOOQNSNUOVQVSUUSVQV SVVS QVVQ OUUO NSSN NQQN", "LYPFSCSP RDRP OPVP MRXR OVOWNWNVOUQTTTVUWWVYTZQ[O\\N^Na TTUUVWUYTZ N`O_P_S`V`W_ P_SaVaW_W^", "LYPFSCSP RDRP OPVP MRXR OVOWNWNVOUQTTTVUWWVYTZ TTUUVWUYTZ RZTZV[W]W^V`TaQaO`N_N^O^O_ TZU[V]V^U`Ta", "LYPFSCSP RDRP OPVP MRXR VVVWWWWVVUTTRTPUOVNYN^O`QaTaV`W^W\\VZTYQYN[ RTPVOYO^P`Qa TaU`V^V\\UZTY", "LYPFSCSP RDRP OPVP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYOEOFNFNEODQCTCVDWFVHTIQJOKNMNP TCUDVFUHTI NOONPNSOVOWN PNSPVPWNWM MRXR OVOWNWNVOUQTTTVUWWVYTZ TTUUVWUYTZ RZTZV[W]W^V`TaQaO`N_N^O^O_ TZU[V]V^U`Ta", "LYOEOFNFNEODQCTCVDWFVHTI TCUDVFUHTI RITIVJWLWMVOTPQPOONNNMOMON TIUJVLVMUOTP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYOCNI OCVC ODSDVC NIOHQGTGVHWJWMVOTPQPOONNNMOMON TGUHVJVMUOTP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYNCNG VERLPP WCTIQP NEPCRCUE NEPDRDUEVE MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ", "LYOCNI OCVC ODSDVC NIOHQGTGVHWJWMVOTPQPOONNNMOMON TGUHVJVMUOTP MRXR VVVWWWWVVUTTRTPUOVNYN^O`QaTaV`W^W\\VZTYQYN[ RTPVOYO^P`Qa TaU`V^V\\UZTY", "LYPFSCSP RDRP OPVP MRXR SVSa TTTa TTM]X] QaVa", "LYOEOFNFNEODQCTCVDWFVHTI TCUDVFUHTI RITIVJWLWMVOTPQPOONNNMOMON TIUJVLVMUOTP MRXR SVSa TTTa TTM]X] QaVa", "F^YXWZU[R[PZMXKWIWHXHZI[K[MZOWPURQTKWGYFZF[G\\H[IZH[G[FZFYFWGVHTLRPPVNZMZ OPUP", "E^P[MZJXHUGRGOHLJIMGPFTFWGYI[L\\O\\R[UYXVZS[P[ NJNW OJOW LJSJVKWMWNVPSQOQ SJUKVMVNUPSQ LWQW SQTRUVVWWWXV SQURVVWW", "E^P[MZJXHUGRGOHLJIMGPFTFWGYI[L\\O\\R[UYXVZS[P[ UKVJVNUKSJPJNKMLLOLRMUNVPWSWUVVT PJNLMOMRNUPW", "CaHQGRHSIRHQ RQQRRSSRRQ \\Q[R\\S]R\\Q", "E_NWLTIRLPNM LPJRLT JRZR VWXT[RXPVM XPZRXT", "JZWNTLRIPLMN PLRJTL RJRZ WVTXR[PXMV PXRZTX", "F^ZJSJOKMLKNJQJSKVMXOYSZZZ SFS^", "F^JJQJUKWLYNZQZSYVWXUYQZJZ QFQ^", "F^JJQJUKWLYNZQZSYVWXUYQZJZ ORZR", "G\\KFK[ KFTFWGXHYJYLXNWOTP KPTPWQXRYTYWXYWZT[K[", "H]ZKYIWGUFQFOGMILKKNKSLVMXOZQ[U[WZYXZV", "G\\KFK[ KFRFUGWIXKYNYSXVWXUZR[K[", "H]ZKYIWGUFQFOGMILKKNKSLVMXOZQ[U[WZYXZVZS USZS", "G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF", "G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF SWY]", "G\\KFK[ KFTFWGXHYJYLXNWOTPKP RPY[", "H\\YIWGTFPFMGKIKKLMMNOOUQWRXSYUYXWZT[P[MZKX", "G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF OPUP", "I[KKKILGMFOFPGQIRMR[ YKYIXGWFUFTGSIRM", "H\\RFR[ PKMLLMKOKRLTMUPVTVWUXTYRYOXMWLTKPK", "G]RFR[ ILJLKMLQMSNTQUSUVTWSXQYMZL[L", "H\\K[O[LTKPKLLINGQFSFVGXIYLYPXTU[Y[", "G[G[IZLWOSSLVFV[UXSUQSNQLQKRKTLVNXQZT[Y[", "F]SHTITLSPRSQUOXMZK[J[IZIWJRKOLMNJPHRGUFXFZG[I[KZMYNWOTP SPTPWQXRYTYWXYWZU[R[PZOX", "H\\TLTMUNWNYMZKZIYGWFTFQGOIMLLNKRKVLYMZO[Q[TZVXWV", "G^TFRGQIPMOSNVMXKZI[G[FZFXGWIWKXMZP[S[VZXXZT[O[KZHYGWFTFRHRJSMUPWRZT\\U", "H\\VJVKWLYLZKZIYGVFRFOGNINLONPOSPPPMQLRKTKWLYMZP[S[VZXXYV", "H\\RLPLNKMINGQFTFXG[G]F XGVNTTRXPZN[L[JZIXIVJULUNV QPZP", "G^G[IZMVPQQNRJRGQFPFOGNINLONQOUOXNYMZKZQYVXXVZS[O[LZJXIVIT", "F^MMKLJJJIKGMFNFPGQIQKPONULYJ[H[GZGX MRVOXN[L]J^H^G]F\\FZHXLVRUWUZV[W[YZZY\\V", "IZWVUTSQROQLQIRGSFUFVGWIWLVQTVSXQZO[M[KZJXJVKUMUOV", "JYT^R[PVOPOJPGRFTFUGVJVMURR[PaOdNfLgKfKdLaN^P\\SZWX", "F^MMKLJJJIKGMFNFPGQIQKPONULYJ[H[GZGX ^I^G]F\\FZGXIVLTNROPO ROSQSXTZU[V[XZYY[V", "I\\MRORSQVOXMYKYHXFVFUGTISNRSQVPXNZL[J[IZIXJWLWNXQZT[V[YZ[X", "@aEMCLBJBICGEFFFHGIIIKHPGTE[ GTJLLHMGOFPFRGSISKRPQTO[ QTTLVHWGYFZF\\G]I]K\\PZWZZ[[\\[^Z_YaaF_G\\JYNVTS[", "F^NLLLKKKILGNFPFRGSISLQUQXRZT[V[XZYXYVXUVU ]I]G\\FZFXGVITLPUNXLZJ[H[GZGX", "F]KMILHJHIIGKFLFNGOIOKNOMRLVLXMZN[P[RZTXVUWSYM [FYMVWT]RbPfNgMfMdNaP^S[VY[V", "H]ULTNSOQPOPNNNLOIQGTFWFYGZIZMYPWTTWPZN[K[JZJXKWNWPXQYR[R^QaPcNfLgKfKdLaN^Q[TYZV", "I\\XMX[ XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "H[LFL[ LPNNPMSMUNWPXSXUWXUZS[P[NZLX", "I[XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "I\\XFX[ XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "I[LSXSXQWOVNTMQMONMPLSLUMXOZQ[T[VZXX", "I\\XMX]W`VaTbQbOa XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "CaGMG[ GQJNLMOMQNRQR[ RQUNWMZM\\N]Q][", "I\\QMONMPLSLUMXOZQ[T[VZXXYUYSXPVNTMQM", "H[LMLb LPNNPMSMUNWPXSXUWXUZS[P[NZLX", "I\\XMXb XPVNTMQMONMPLSLUMXOZQ[T[VZXX", "J[XPWNTMQMNNMPNRPSUTWUXWXXWZT[Q[NZMX", "H]QMONMPLRKUKXLZN[P[RZUWWTYPZM QMSMTNUPWXXZY[Z[", "I\\UFSGQIOMNPMTLZKb UFWFYHYKXMWNUORO ROTPVRWTWWVYUZS[Q[OZNYMV", "I\\JPLNNMOMQNROSRSVR[ ZMYPXRR[P_Ob", "I[TMQMONMPLSLVMYNZP[R[TZVXWUWRVOTMRKQIQGRFTFVGXI", "JZWOVNTMQMONOPPRSS SSOTMVMXNZP[S[UZWX", "JYTFRGQHQIRJUKXK XKTMQONRMUMWNYP[S]T_TaSbQbP`", "H\\IQJOLMNMONOPNTL[ NTPPRNTMVMXOXRWWTb", "G\\HQIOKMMMNNNPMUMXNZO[Q[SZUWVUWRXMXJWGUFSFRHRJSMUPWRZT", "I[OMK[ YNXMWMUNQROSNS NSPTQUSZT[U[VZ", "H]OMIb NQMVMYO[Q[SZUXWT YMWTVXVZW[Y[[Y\\W", "JZTFRGQHQIRJUKXK UKRLPMOOOQQSTTVT TTPUNVMXMZO\\S^T_TaRbPb", "J[RMPNNPMSMVNYOZQ[S[UZWXXUXRWOVNTMRM", "I[MSMVNYOZQ[S[UZWXXUXRWOVNTMRMPNNPMSIb", "I][MQMONMPLSLVMYNZP[R[TZVXWUWRVOUNSM", "H\\IQJOLMNMONOPMVMYO[Q[TZVXXTYPYM", "G]ONMOKQJTJWKYLZN[Q[TZWXYUZRZOXMVMTORSPXMb", "F]VFNb GQHOJMLMMNMPLULXMZO[Q[TZVXXUZP[M", "F]NMLNJQITIWJZK[M[OZQW RSQWRZS[U[WZYWZTZQYNXM", "L\\UUTSRRPRNSMTLVLXMZO[Q[SZTXVRUWUZV[W[YZZY\\V", "M[MVOSRNSLTITGSFQGPIOMNTNZO[P[RZTXUUURVVWWYW[V", "L\\UUTSRRPRNSMTLVLXMZO[Q[SZTXZF VRUWUZV[W[YZZY\\V", "NXOYQXRWSUSSRRQROSNUNXOZQ[S[UZVYXV", "OWOVSQUNVLWIWGVFTGSIQQNZKaJdJfKgMfNcOZP[R[TZUYWV", "L[UUTSRRPRNSMTLVLXMZO[Q[SZTY VRTYPdOfMgLfLdMaP^S\\U[XY[V", "M\\MVOSRNSLTITGSFQGPIOMNSM[ M[NXOVQSSRURVSVUUXUZV[W[YZZY\\V", "PWSMSNTNTMSM PVRRPXPZQ[R[TZUYWV", "PWSMSNTNTMSM PVRRLdKfIgHfHdIaL^O\\Q[TYWV", "M[MVOSRNSLTITGSFQGPIOMNSM[ M[NXOVQSSRURVSVUTVQV QVSWTZU[V[XZYY[V", "OWOVQSTNULVIVGUFSGRIQMPTPZQ[R[TZUYWV", "E^EVGSIRJSJTIXH[ IXJVLSNRPRQSQTPXO[ PXQVSSURWRXSXUWXWZX[Y[[Z\\Y^V", "J\\JVLSNROSOTNXM[ NXOVQSSRURVSVUUXUZV[W[YZZY\\V", "LZRRPRNSMTLVLXMZO[Q[SZTYUWUUTSRRQSQURWTXWXYWZV", "KZKVMSNQMUGg MUNSPRRRTSUUUWTYSZQ[ MZO[R[UZWYZV", "L[UUTSRRPRNSMTLVLXMZO[Q[SZ VRUUSZPaOdOfPgRfScS\\U[XY[V", "MZMVOSPQPSSSTTTVSYSZT[U[WZXYZV", "NYNVPSQQQSSVTXTZR[ NZP[T[VZWYYV", "OXOVQSSO VFPXPZQ[S[UZVYXV PNWN", "L[LVNRLXLZM[O[QZSXUU VRTXTZU[V[XZYY[V", "L[LVNRMWMZN[O[RZTXUUUR URVVWWYW[V", "I^LRJTIWIYJ[L[NZPX RRPXPZQ[S[UZWXXUXR XRYVZW\\W^V", "JZJVLSNRPRQSQZR[U[XYZV WSVRTRSSOZN[L[KZ", "L[LVNRLXLZM[O[QZSXUU VRPdOfMgLfLdMaP^S\\U[XY[V", "LZLVNSPRRRTTTVSXQZN[P\\Q^QaPdOfMgLfLdMaP^S\\WYZV", "J\\K[NZQXSVUSWOXKXIWGUFSGRHQJPOPTQXRZT[V[XZYY", "I[WUWRVOUNSMQMONMPLSLVMYNZP[R[TZVXWUXPXKWHVGTFRFPGNI", "JZWNUMRMPNNPMSMVNYOZQ[T[VZ MTUT", "J[TFRGPJOLNOMTMXNZO[Q[SZUWVUWRXMXIWGVFTF NPWP", "H\\VFNb QMNNLPKSKVLXNZQ[S[VZXXYUYRXPVNSMQM", "I[XOWNTMQMNNMOLQLSMUOWSZT\\T^S_Q_", "DaWNVLTKQKOLNMMOMRNTOUQVTVVUWS WKWSXUYV[V\\U]S]O\\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYY", "KYTBQEPHPJQMSOSPORSTSUQWPZP\\Q_Tb", "KYPBSETHTJSMQOQPURQTQUSWTZT\\S_Pb`OacPALBJCGEEGCJBLAPATBXCZE]G_JaLbPcTcXbZa]__]aZbXcTcPbLaJ_G]EZCXBTAPA", "<hP<K=G?DAAD?G=K<P<T=Y?]A`DcGeKgPhThYg]e`cc`e]gYhThPgKeGcD`A]?Y=T<P<", "){O)I*E+@-;073370;-@+E*I)O)U*[+_-d0i3m7q;t@wEyIzO{U{[z_ydwitmqqmtiwdy_z[{U{OzIyEw@t;q7m3i0d-_+[*U)O)", ">fRAPCMDJDGCEA>H@JAMAZB]D_G`M`PaRc RATCWDZD]C_AfHdJcMcZb]`_]`W`TaRc", "AcRAPCMDJDGCEABGAKAPBTDXG\\L`Rc RATCWDZD]C_AbGcKcPbT`X]\\X`Rc BHbH", "H[WPVQWRXQXPVNTMQMNNLPKSKULXNZQ[S[VZXX QMONMPLSLUMXOZQ[ LbXF", "KYRKMX RNVX RKWX OTTT KXPX TXYX", "JZNKNX OKOX LKSKVLWNVPSQ SKULVNUPSQ OQSQVRWTWUVWSXLX SQURVTVUUWSX", "KYVLWKWOVLTKQKOLNMMPMSNVOWQXTXVWWU QKOMNPNSOVQX", "JZNKNX OKOX LKSKVLWMXPXSWVVWSXLX SKULVMWPWSVVUWSX", "JYNKNX OKOX SOSS LKVKVOUK OQSQ LXVXVTUX", "JXNKNX OKOX SOSS LKVKVOUK OQSQ LXQX", "K[VLWKWOVLTKQKOLNMMPMSNVOWQXTXVW QKOMNPNSOVQX TXUWVU VSVX WSWX TSYS", "J[NKNX OKOX VKVX WKWX LKQK TKYK OQVQ LXQX TXYX", "LXSKSURWQX TKTUSWQXPXNWMUNTOUNV QKVK", "JZNKNX OKOX WKOS QQVX RQWX LKQK TKYK LXQX TXYX", "I\\MKMX NNRX NKRU WKRX WKWX XKXX KKNK WKZK KXOX UXZX", "JZNKNX OMVX OKVV VKVX LKOK TKXK LXPX", "KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK", "JYNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXQX", "KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK PWPUQTSTTUUZV[W[XZ TUUXVZW[", "JZNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXQX SRTSUWVXWXXW SRUSVWWX", "KZVMWKWOVMULSKQKOLNMNOOPQQTRVSWT NNOOQPTQVRWSWVVWTXRXPWOVNTNXOV", "J[NKNUOWQXTXVWWUWK OKOUPWQX LKQK UKYK", "I[LKOX MKOT RKOX RKUX SKUT XKUX JKOK VKZK", "KZNKVX OKWX WKNX LKQK TKYK LXQX TXYX", "LYNKRRRX OKSR WKSRSX LKQK TKYK PXUX", "KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK QOQT TOTT QQTQ QRTR", "JZMJLM XJWM PPOS UPTS MVLY XVWY MKWK MLWL PQTQ PRTR MWWW MXWX", "J[NKNX OKOX VKVX WKWX LKYK LXQX TXYX", "K[MKRQ NKSQMX MKWKXOVK NWWW MXWXXTVX", "KZMONLOKPKQLRORX XOWLVKUKTLSOSX MONMOLPLQMRO XOWMVLULTMSO PXUX", "KZRKRX SKSX QNNOMQMRNTQUTUWTXRXQWOTNQN QNOONQNROTQU TUVTWRWQVOTN PKUK PXUX", "J[RKRX SKSX LPMONOOSQU TUVSWOXOYP MONROTQUTUVTWRXO PKUK PXUX", "KZMVNXQXMRMONMOLQKTKVLWMXOXRTXWXXV OUNRNOOMQK TKVMWOWRVU NWPW UWWW", "KYTKKX SMTX TKUX NTTT IXNX RXWX", "JYPKLX QKMX NKUKWLWNVPSQ UKVLVNUPSQ OQRQTRUSUUTWQXJX RQTSTUSWQX", "KXVLWLXKWNVLTKRKPLOMNOMRMUNWPXRXTWUU RKPMOONRNVPX", "JYPKLX QKMX NKTKVLWNWQVTUVTWQXJX TKULVNVQUTTVSWQX", "JYPKLX QKMX SORS NKXKWNWK OQRQ JXTXUUSX", "JXPKLX QKMX SORS NKXKWNWK OQRQ JXOX", "KYVLWLXKWNVLTKRKPLOMNOMRMUNWPXRXTWUVVS RKPMOONRNVPX RXTVUS SSXS", "J[PKLX QKMX XKTX YKUX NKSK VK[K OQVQ JXOX RXWX", "LXUKRUQWPX VKSURWPXOXMWLUMTNUMV SKXK", "JZPKLX QKMX YKOR RPTX SPUX NKSK VK[K JXOX RXWX", "I\\OKKX OMPX PKQV YKPX YKUX ZKVX MKPK YK\\K IXMX SXXX", "JZPKLX PKTX QKTU XKTX NKQK VKZK JXNX", "KYRKPLOMNOMRMUNWPXRXTWUVVTWQWNVLTKRK RKPMOONRNVPX RXTVUTVQVMTK", "JYPKLX QKMX NKUKWLXMXOWQTROR UKWMWOVQTR JXOX", "KYRKPLOMNOMRMUNWPXRXTWUVVTWQWNVLTKRK RKPMOONRNVPX RXTVUTVQVMTK OWOVPUQURVRZS[T[UZ RVSZT[", "JZPKLX QKMX NKUKWLXMXOWQTROR UKWMWOVQTR SRTWUXVXWW SRTSUWVX JXOX", "KZWLXLYKXNWLUKRKPLOMOOPPUSVT ONPOURVSVVUWSXPXNWMULXMWNW", "J[PKMUMWOXSXUWVUYK QKNUNWOX NKSK WK[K", "I[NKMX OKNV TKMX TKSX UKTV ZKSX LKQK XK\\K", "KZPKTX QKUX YKLX NKSK VK[K JXOX RXWX", "LYPKRQPX QKSQ YKSQQX NKSK VK[K NXSX", "LZQOPPPQOQOPQOTOVQVWWXXX TOUQUWWX URRSPTOUOWPXSXTWUU RSPUPWQX", "JYNKNX OKOX ORPPROTOVPWRWUVWTXRXPWOU TOUPVRVUUWTX LKOK", "LXVQUQURVRVQUPSOQOOPNRNUOWQXSXUWVV QOPPOROUPWQX", "L[VKVX WKWX VRUPSOQOOPNRNUOWQXSXUWVU QOPPOROUPWQX TKWK VXYX", "LXOSVSVRUPSOQOOPNRNUOWQXSXUWVV USUQSO QOPPOROUPWQX", "LWTKULUMVMVLTKRKPMPX RKQMQX NOSO NXSX", "LYQOOQOSQUSUUSUQSOQO QOPQPSQU SUTSTQSO TPUOVO PTOUOXPYTYVZ OWPXTXVYV[T\\P\\N[NYPX", "J[NKNX OKOX ORPPROTOVPWRWX TOUPVRVX LKOK LXQX TXYX", "NWRKRLSLSKRK RORX SOSX POSO PXUX", "NWSKSLTLTKSK SOSZR\\ TOTZR\\P\\O[OZPZP[O[ QOTO", "JZNKNX OKOX WOOU RSVX SSWX LKOK TOYO LXQX TXYX", "F_JOJX KOKX KRLPNOPORPSRSX POQPRRRX SRTPVOXOZP[R[X XOYPZRZX HOKO HXMX PXUX XX]X", "J[NONX OOOX ORPPROTOVPWRWX TOUPVRVX LOOO LXQX TXYX", "LYQOOPNRNUOWQXTXVWWUWRVPTOQO QOPPOROUPWQX TXUWVUVRUPTO", "JYNON\\ OOO\\ ORPPROTOVPWRWUVWTXRXPWOU TOUPVRVUUWTX LOOO L\\Q\\", "KYUOU\\ VOV\\ URTPROPONPMRMUNWPXRXTWUU POOPNRNUOWPX S\\X\\", "KXOOOX POPX PRQPSOUOVPVQUQUPVP MOPO MXRX", "LYTOUPUQVQVPTOQOOPORQSTTVU OQQRTSVTVWTXQXOWOVPVPWQX", "J[NONUOWQXSXUWVU OOOUPWQX VOVX WOWX LOOO TOWO VXYX", "I[LOOX MOOU ROOX ROUX SOUU XOUX JOOO VOZO", "KYNOUX OOVX VONX LOQO TOXO LXPX SXXX", "KYNORX OORV VORXP[N\\M\\L[LZMZM[L[ LOQO TOXO", "K[QOOPNQMSMUNWPXQXSWUUWRXO QOOQNSNUOWPX QOSOUPWWXX SOTPVWXXYX", "KXRKPMOOMUK\\ QLPNNTL\\ RKTKVLVNUPRQ TKULUNTPRQ RQTRUTUVTWRXQXOWNT RQSRTTTVRX", "KYLQNOPORPSSSXR\\ LQNPPPRQSS WOVRSXQ\\", "KYSOQOOPNQMSMUNWPXRXTWUVVTVRUPRNQLQKRJTJUKVM QOOQNSNVPX RXTVUTUQSO QLRKTKVM", "LXVPTOQOOPOQPRRS QOPPPQRS RSOTNUNWPXSXUW RSPTOUOWPX", "LWRKQLQMSNVNVMSNPOOPNRNTOVPWRXSYS[R\\P\\O[ SNQOPPOROTPVRX", "IYJRKPLONOOPOQMX MONPNQLX OQPPROTOVPVRS\\ TOUPURR\\", "IYJSKQLPNPOQOVPX MPNQNUOWPXQXSWTVUTVQVNULTKRKQLQNRPURWS QXSVTTUQUNTK", "KYOOLX POMX UOVPWPVOTORQOR ORPSRWTXVWWU ORQSSWTX", "KZOOK\\ POL\\ NUNWOXQXSWTV VOTVTWUXWXXWYU WOUVUWVX", "JYNOMX OONUMX VRVOWOVRTUQWNXMX LOOO", "MXRKQLQMSNVN TNQOPPPRRSUS TNROQPQRRS SSPTOUOWQXSYTZT[S\\Q\\ SSQTPUPWQX", "KXQOOPNQMSMUNWPXRXTWUVVTVRUPSOQO QOOQNSNVPX RXTVUTUQSO", "IZPPMX PPNX TPSX TPTX KQMOXO KQMPXP", "JXSOQOOPNQMSJ\\ QOOQNSK\\ SOUPVRVTUVTWRXPXNWMU SOUQUTTVRX", "K[YOQOOPNQMSMUNWPXRXTWUVVTVRUPYP QOOQNSNVPX RXTVUTUQSO", "JXKRLPMOOOPPPROUOWPX NOOPORNUNWPXQXSWUUVRVOUOVP", "KZOPNQMSMUNWPXRXUWWUXRXPWOUOTPSRRUO\\ MUNVPWRWUVWTXR XQWPUPSR RUQXP\\", "KXMONOPPS[T\\ NOOPR[T\\U\\ VOTRNYL\\", "I[TKQ\\ UKP\\ JRKPLONOOPOVPWSWUVWT MONPNTOWPXSXUWWTXRYO", "JZNPPPPONPMQLSLUMWNXPXQWRUSR LUNWPWRU RRRWSXUXWVXTXRWPVOVPWP RUSWUWWV", "KZVOTVTWUXWXXWYU WOUVUWVX USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX", "JXOKMR PKNRNVPX NROPQOSOUPVRVTUVTWRXPXNWMUMR SOUQUTTVRX MKPK", "KXUPUQVQUPSOQOOPNQMSMUNWPXRXTWUV QOOQNSNVPX", "KZWKTVTWUXWXXWYU XKUVUWVX USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX UKXK", "KWNURTTSURUPSOQOOPNQMSMUNWPXRXTWUV QOOQNSNVPX", "MXWKXLXKVKTLSNPYO[N\\ VKULTNQYP[N\\L\\L[M\\ POVO", "KYVOTVSYR[ WOUVTYR[P\\M\\L[M[N\\ USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX", "KZPKLX QKMX OQPPROTOVPVRUUUWVX TOUPURTUTWUXWXXWYU NKQK", "MWSKSLTLTKSK NROPPOROSPSRRURWSX QORPRRQUQWRXTXUWVU", "MWTKTLULUKTK ORPPQOSOTPTRRYQ[O\\M\\M[N\\ ROSPSRQYP[O\\", "KXPKLX QKMX VPUQVQVPUOTORQPROR ORPSQWRXTXUWVU ORQSRWSX NKQK", "NVSKPVPWQXSXTWUU TKQVQWRX QKTK", "F^GRHPIOKOLPLQJX JOKPKQIX LQMPOOQOSPSQQX QORPRQPX SQTPVOXOZPZRYUYWZX XOYPYRXUXWYX[X\\W]U", "J[KRLPMOOOPPPQNX NOOPOQMX PQQPSOUOWPWRVUVWWX UOVPVRUUUWVXXXYWZU", "JYKRLPMOOOPPPQM\\ NOOPOQL\\ PQROTOVPWRWTVVUWSXQXOVOT TOVQVTUVSX J\\O\\", "KYVOR\\ WOS\\ USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX P\\U\\", "LXMRNPOOQORPRQPX POQPQQOX RQSPUOVOWPWQVQWP", "LYVPVQWQVPTOQOOPORQSTTVU OQQRTSVTVWTXQXOWNVOVOW", "NWSKPVPWQXSXTWUU TKQVQWRX POUO", "IZJRKPLONOOPORNUNWOX MONPNRMUMWOXQXSWTV VOTVTWUXWXXWYU WOUVUWVX", "H\\IRJPKOMONPNRMUMWNX LOMPMRLULWNXOXQWRV TORVRWTX UOSVSWTXUXWWYUZRZOYOZP", "JZMRNPPOROSPSR QORPRRQUPWNXMXLWLVMVLW XPWQXQXPWOVOTPSRRURWSX QUQWRXTXVWWU", "IYJRKPLONOOPORNUNWOX MONPNRMUMWOXQXSWTV VOTVSYR[ WOUVTYR[P\\M\\L[M[N\\", "KYWOWPVQNVMWMX NQOOROUQ OPRPUQVQ NVOVRWUW OVRXUXVV", "H[RKSLSMTMTLRKOKMLLNLX OKNLMNMX XKYLYMZMZLXKVKTMTX VKUMUX JOWO JXOX RXWX", "J[UKVLWLWKQKOLNNNX QKPLONOX VOVX WOWX LOWO LXQX TXYX", "J[WKQKOLNNNX QKPLONOX UKVLVX WKWX LOVO LXQX TXYX", "F_PKQLQMRMRLPKMKKLJNJX MKLLKNKX YKZL[L[KUKSLRNRX UKTLSNSX ZOZX [O[X HO[O HXMX PXUX XX]X", "F_PKQLQMRMRLPKMKKLJNJX MKLLKNKX [KUKSLRNRX UKTLSNSX YKZLZX [K[X HOZO HXMX PXUX XX]X", "LXVPTOROPPOQNSNUOWQXSXUW ROPQOSOVQX OSSS", "LYSKQLPMOONRNUOWPXRXTWUVVTWQWNVLUKSK SKQMPOOSOVPX RXTVUTVPVMUK OQVQ", "KZTKQ\\ UKP\\ QONPMRMUNWQXTXWWXUXRWPTOQO QOOPNRNUOWQX TXVWWUWRVPTO", "LXUPVRVQUPSOQOOPNRNTOVRX QOOQOTPVRXSYS[R\\P\\", "I[VKWLXLVKSKQLPMOOLYK[J\\ SKQMPOMYL[J\\H\\H[I\\ ZK[L[KYKWLVNSYR[Q\\ YKXLWNTYS[Q\\O\\O[P\\ LOYO", "IZVKWLXLXKSKQLPMOOLYK[J\\ SKQMPOMYL[J\\H\\H[I\\ VOTVTWUXWXXWYU WOUVUWVX LOWO", "IZVKWL XKSKQLPMOOLYK[J\\ SKQMPOMYL[J\\H\\H[I\\ WKTVTWUXWXXWYU XKUVUWVX LOVO", "F^SKTLTM ULSKPKNLMMLOIYH[G\\ PKNMMOJYI[G\\E\\E[F\\ ZK[L\\L\\KWKUL TMSOPYO[N\\ WKUMTOQYP[N\\L\\L[M\\ ZOXVXWYX[X\\W]U [OYVYWZX IO[O", "F^SKTLTM ULSKPKNLMMLOIYH[G\\ PKNMMOJYI[G\\E\\E[F\\ ZK[L \\KWKUL TMSOPYO[N\\ WKUMTOQYP[N\\L\\L[M\\ [KXVXWYX[X\\W]U \\KYVYWZX IOZO", "MWNROPPOROSPSRRURWSX QORPRRQUQWRXTXUWVU", "LYQKOLNONTOWQXTXVWWTWOVLTKQK QKPLOOOTPWQX TXUWVTVOULTK", "LYOMONNNNMOLQKTKVLWNVPTQQROSNUNX TKULVNUPTQ NWOVPVSWVWWV PVSXVXWVWU", "LYOMONNNNMOLQKTKVLWNVPTQ TKULVNUPTQ RQTQVRWTWUVWTXQXOWNVNUOUOV TQURVTVUUWTX", "LYOKNQ OKVK OLSLVK NQOPQOTOVPWRWUVWTXQXOWNVNUOUOV TOUPVRVUUWTX", "LYVMVNWNWMVLTKRKPLOMNPNUOWQXTXVWWUWSVQTPQPNR RKPMOPOUPWQX TXUWVUVSUQTP", "LYNKNO VMRTPX WKTQQX NMPKRKUM NMPLRLUMVM", "LYQKOLNNOPQQTQVPWNVLTKQK QKPLONPPQQ TQUPVNULTK QQORNTNUOWQXTXVWWUWTVRTQ QQPROTOUPWQX TXUWVUVTURTQ", "LYOVOUNUNVOWQXSXUWVVWSWNVLTKQKOLNNNPORQSTSWQ SXUVVSVNULTK QKPLONOPPRQS", "LYNNONOONONNOLQKTKVLWNWOVQSRRSRTST TKVMVPUQSR RWRXSXSWRW", "MWUHSJQMPPPTQWSZU\\ SJRLQPQTRXSZ", "MWOHQJSMTPTTSWQZO\\ QJRLSPSTRXQZ", "LWSHRIQKQMRORPPRRTRUQWQYR[S\\ RIQM QKRO RUQY QWR[", "MXQHRISKSMRORPTRRTRUSWSYR[Q\\ RISM SKRO RUSY SWR[", "H[YUWUUTTSRPQOONNNLOKQKRLTNUOUQTRSTPUOWNYN", "JZLTLRMPOPUSWSXR LRMQOQUTWTXRXP", "KYVSUPSOQOOPNQMSMUNWPXRXTWUVVTWQWNVLTKQKPLQLRK QOOQNSNVPX RXTVUTVQVNULTK", "I[XIXJYJYIXHVHTJSLROQUPYO[ UITKSORUQXPZN\\L\\K[KZLZL[", "I[XIXJYJYIXHVHTJSLROQUPYO[ UITKSORUQXPZN\\L\\K[KZLZL[ QNOONQNSOUQVSVUUVSVQUOSNQN", "H\\ZRYTWUVUTTSSQPPONNMNKOJQJRKTMUNUPTQSSPTOVNWNYOZQZR", "JZXKLX OKPLPNOOMOLNLLMKOKSLVLXK UTTUTWUXWXXWXUWTUT", "J[YPXPXQYQYPXOWOVPUTTVSWQXOXMWLVLTMSORRPSNSLRKPKOLONPQUWWXXXYW OXMVMTOR ONPPVWWX", "J[UPSOQOPQPRQTSTUS UOUSVTXTYRYQXNVLSKRKOLMNLQLRMUOWRXSXVW", "KZQHQ\\ THT\\ WLVLVMWMWLUKPKNLNNOPVSWT NNOOVRWTWVVWTXQXOWNVNUOUOVNV", "LXTLSLSMTMTLSKQKPLPNQPTRUS PNQOTQUSUUSW QPOROTPVSXTY OTPUSWTYT[S\\Q\\P[PZQZQ[P[", "LXRKQLRMSLRK RMRQ RQQSRVSSRQ RVR\\ POONNOOPPOTOUNVOUPTO", "LXRMSLRKQLRMRQQRSURV RQSRQURVRZQ[R\\S[RZ POONNOOPPOTOUNVOUPTO PXOWNXOYPXTXUWVXUYTX", "H\\QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK RQQRRSSRRQ", "LYQKPLPMQN TKULUMTN RNPOOQORPTRUSUUTVRVQUOSNRN RURY SUSY OWVW", "LYRKPLONOOPQRRSRUQVOVNULSKRK RRRX SRSX OUVU", "H\\QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK RKRY KRYR", "JYRRPQOQMRLTLUMWOXPXRWSUSTRR WMRR RMWMWR RMVNWR", "JZLLMKOKQLRNRPQRPSNT OKPLQNQQPS VKUX WKTX NTXT", "JYNKNU OKNR NROPQOSOUPVQVTTVTXUYVYWX SOUQUTTV LKOK", "LYONRKRQ VNSKSQ RQPROTOUPWRXSXUWVUVTURSQ RTRUSUSTRT", "JZRKRY MKMPNRPSTSVRWPWK LMMKNM QMRKSM VMWKXM OVUV", "JYNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXVXVUUX", "LYWKTKQLONNQNSOVQXTYWY WKTLRNQQQSRVTXWY", "JZRRPQOQMRLTLUMWOXPXRWSUSTRR SLQQ WMRR XQSS", "J[OUMULVLXMYOYPXPVNTMRMONMOLQKTKVLWMXOXRWTUVUXVYXYYXYVXUVU NMPLULWM", "J[OOMOLNLLMKOKPLPNNPMRMUNWOXQYTYVXWWXUXRWPUNULVKXKYLYNXOVO NWPXUXWW", "F^KHK\\ LHL\\ XHX\\ YHY\\ HH\\H H\\O\\ U\\\\\\", "H]KHRQJ\\ JHQQ JHYHZMXH K[X[ J\\Y\\ZWX\\", "KYVBTDRGPKOPOTPYR]T`Vb TDRHQKPPPTQYR\\T`", "KYNBPDRGTKUPUTTYR]P`Nb PDRHSKTPTTSYR\\P`", "JYTBQEPHPJQMSOSPORSTSUQWPZP\\Q_Tb RDQGQKRN RVQYQ]R`", "KZPBSETHTJSMQOQPURQTQUSWTZT\\S_Pb RDSGSKRN RVSYS]R`", "KYU@RCPFOIOLPOSVTYT\\S_Ra RCQEPHPKQNTUUXU[T^RaOd", "KYO@RCTFUIULTOQVPYP\\Q_Ra RCSETHTKSNPUOXO[P^RaUd", "F^[CZD[E\\D\\C[BYBWCUETGSJRNPZO^N` VDUFTJRVQZP]O_MaKbIbHaH`I_J`Ia`Y``NFH[ NFO[ OFPY \\FO[ \\FV[ ]FW[ KFOF \\F`F E[K[ S[Z[", "F_OFI[ OFVX OIV[ \\FV[ LFOF YF_F F[L[", "G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF SFQGOIMLLOKSKVLYN[ Q[SZUXWUXRYNYKXHVF", "F]OFI[ PFJ[ LFXF[G\\I\\K[NYPUQMQ XFZG[I[KZNXPUQ F[M[", "G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF SFQGOIMLLOKSKVLYN[ Q[SZUXWUXRYNYKXHVF LYLXMVOUPURVSXS_T`V`W^W] SXT^U_V_W^", "F^OFI[ PFJ[ LFWFZG[I[KZNYOVPMP WFYGZIZKYNXOVP RPTQURVZW[Y[ZYZX URWYXZYZZY F[M[", "G^ZH[H\\F[L[JZHYGVFRFOGMIMKNMONVRXT MKOMVQWRXTXWWYVZS[O[LZKYJWJUI[JYKY", "F_NFKQJUJXKZN[R[UZWXXU\\F OFLQKUKXLZN[ KFRF YF_F", "E_MFK[ NFLY UFK[ UFS[ VFTY ]FS[ JFQF ZF`F", "G]NFU[ OFV[ \\FH[ LFRF XF^F F[L[ R[X[", "H]NFRPO[ OFSPP[ ]FSP LFRF YF_F L[S[", "H\\KILKXWYYY[ LLXX KIKKLMXYY[ PPLTKVKXLZK[ KVMZ LTLVMXMZK[ SSXN VIVLWNYNYLWKVI VIWLYN", "H\\QIK[ SIY[ RIX[ MUVU I[O[ U[[[ QBOCNENGOIQJSJUIVGVEUCSBQB", "I]NONPMPMONNPMTMVNWOXQXXYZZ[ WOWXXZZ[[[ WQVRPSMTLVLXMZP[S[UZWX PSNTMVMXNZP[", "G\\LFL[ MFM[ MPONQMSMVNXPYSYUXXVZS[Q[OZMX SMUNWPXSXUWXUZS[ IFMF", "H[WPVQWRXQXPVNTMQMNNLPKSKULXNZQ[S[VZXX QMONMPLSLUMXOZQ[", "H]WFW[ XFX[ WPUNSMQMNNLPKSKULXNZQ[S[UZWX QMONMPLSLUMXOZQ[ TFXF W[[[", "H[LSXSXQWOVNTMQMNNLPKSKULXNZQ[S[VZXX WSWPVN QMONMPLSLUMXOZQ[", "KXUGTHUIVHVGUFSFQGPIP[ SFRGQIQ[ MMUM M[T[", "I\\QMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM ONNPNTOV UVVTVPUN VOWNYMYNWN NUMVLXLYM[P\\U\\X]Y^ LYMZP[U[X\\Y^Y_XaUbObLaK_K^L\\O[", "G]LFL[ MFM[ MPONRMTMWNXPX[ TMVNWPW[ IFMF I[P[ T[[[", "MXRFQGRHSGRF RMR[ SMS[ OMSM O[V[", "MXSFRGSHTGSF TMT_SaQbObNaN`O_P`Oa SMS_RaQb PMTM", "G\\LFL[ MFM[ WMMW RSX[ QSW[ IFMF TMZM I[P[ T[Z[", "BcGMG[ HMH[ HPJNMMOMRNSPS[ OMQNRPR[ SPUNXMZM]N^P^[ ZM\\N]P][ DMHM D[K[ O[V[ Z[a[", "G]LML[ MMM[ MPONRMTMWNXPX[ TMVNWPW[ IMMM I[P[ T[[[", "H\\QMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMQM QMONMPLSLUMXOZQ[ S[UZWXXUXSWPUNSM", "G\\LMLb MMMb MPONQMSMVNXPYSYUXXVZS[Q[OZMX SMUNWPXSXUWXUZS[ IMMM IbPb", "H\\WMWb XMXb WPUNSMQMNNLPKSKULXNZQ[S[UZWX QMONMPLSLUMXOZQ[ Tb[b", "IZNMN[ OMO[ OSPPRNTMWMXNXOWPVOWN KMOM K[R[", "J[WOXMXQWOVNTMPMNNMOMQNRPSUUWVXW MPNQPRUTWUXVXYWZU[Q[OZNYMWM[NY", "KZPFPWQZS[U[WZXX QFQWRZS[ MMUM", "G]LMLXMZP[R[UZWX MMMXNZP[ WMW[ XMX[ IMMM TMXM W[[[", "F^JMN[ KMNX RMN[ RMV[ SMVX ZMV[ GMNM WM]M", "H\\LMW[ MMX[ XML[ JMPM TMZM J[P[ T[Z[", "H[LMR[ MMRY XMR[P_NaLbKbJaK`La JMPM TMZM", "G^QMNNLPKRJUJXKZN[P[RZUWWTYPZM QMONMPLRKUKXLZN[ QMSMUNVPXXYZZ[ SMTNUPWXXZZ[[[", "G\\TFQGOIMMLPKTJZIb TFRGPINMMPLTKZJb TFVFXGYHYKXMWNTOPO VFXHXKWMVNTO POTPVRWTWWVYUZR[P[NZMYLV POSPURVTVWUYTZR[", "H\\IPKNMMOMQNROSRSVRZOb JOLNPNRO ZMYPXRSYP^Nb YMXPWRSY", "I\\VNTMRMONMQLTLWMYNZP[R[UZWWXTXQWOSJRHRFSEUEWFYH RMPNNQMTMXNZ R[TZVWWTWPVNTKSISGTFVFYH", "I[XPVNTMPMNNNPPRSS PMONOPQRSS SSNTLVLXMZP[S[UZWX SSOTMVMXNZP[", "I[TFRGQHQIRJUKZKZJWKSMPOMRLULWMYP[S]T_TaSbQbPa ULQONRMUMWNYP[", "G]HQIOKMNMONOPNTL[ MMNNNPMTK[ NTPPRNTMVMXNYOYRXWUb VMXOXRWWTb", "F]GQHOJMMMNNNPMUMXNZO[ LMMNMPLULXMZO[Q[SZUXWUXRYMYIXGVFTFRHRJSMUPWRZT SZUWVUWRXMXIWGVF", "H\\NMJ[ OMK[ XMYNZNYMWMUNQROSMS OSQTSZT[ OSPTRZS[U[WZYW", "H\\KFMFOGPHQJWXXZY[ MFOHPJVXWZY[Z[ RMJ[ RMK[", "F]MMGb NMHb MPLVLYN[P[RZTXVU XMUXUZV[Y[[Y\\W YMVXVZW[", "H\\NML[ OMNSMXL[ YMXQVU ZMYPXRVUTWQYOZL[ KMOM", "IZTFRGQHQIRJUKXK UKQLOMNONQPSSTVT UKRLPMOOOQQSST STOUMVLXLZN\\S^T_TaRbPb STPUNVMXMZO\\S^", "I[RMONMQLTLWMYNZP[R[UZWWXTXQWOVNTMRM RMPNNQMTMXNZ R[TZVWWTWPVN", "G]PNL[ PNM[ VNV[ VNW[ IPKNNM[M IPKONN[N", "H[LVMYNZP[R[UZWWXTXQWOVNTMRMONMQLTHb R[TZVWWTWPVN RMPNNQMTIb", "H][MQMNNLQKTKWLYMZO[Q[TZVWWTWQVOUNSM QMONMQLTLXMZ Q[SZUWVTVPUN UN[N", "H\\IQJOLMOMPNPPNVNYP[ NMONOPMVMYNZP[Q[TZVXXUYRYOXMWNXOYR XUYO", "G]ONMOKQJTJWKYLZN[Q[TZWXYUZRZOXMVMTORSPXMb JWLYNZQZTYWWYU ZOXNVNTPRSPYNb", "I[KMMMONPPU_VaWb MMNNOPT_UaWbYb ZMYOWRM]K`Jb", "F]UFOb VFNb GQHOJMMMNNNPMUMXOZRZTYWVYS LMMNMPLULXMZO[R[TZVXXUYS[M", "F]JQLOONNMLNJQITIWJZK[M[OZQWRT IWJYKZMZOYQW QTQWRZS[U[WZYWZTZQYNXMWNYOZQ QWRYSZUZWYYW", "H]XMVTUXUZV[Y[[Y\\W YMWTVXVZW[ VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ", "H[PFLSLVMYNZ QFMS MSNPPNRMTMVNWOXQXTWWUZR[P[NZMWMS VNWPWTVWTZR[ MFQF", "I[WPWQXQXPWNUMRMONMQLTLWMYNZP[R[UZWW RMPNNQMTMXNZ", "H]ZFVTUXUZV[Y[[Y\\W [FWTVXVZW[ VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ WF[F", "I[MVQUTTWRXPWNUMRMONMQLTLWMYNZP[R[UZWX RMPNNQMTMXNZ", "KZZGYHZI[H[GZFXFVGUHTJSMP[O_Na XFVHUJTNRWQ[P^O`NaLbJbIaI`J_K`Ja OMYM", "H\\YMU[T^RaObLbJaI`I_J^K_J` XMT[S^QaOb VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ", "H]PFJ[ QFK[ MTOPQNSMUMWNXOXQVWVZW[ UMWOWQUWUZV[Y[[Y\\W MFQF", "LYUFTGUHVGUF MQNOPMSMTNTQRWRZS[ RMSNSQQWQZR[U[WYXW", "LYVFUGVHWGVF NQOOQMTMUNUQR[Q^P`OaMbKbJaJ`K_L`Ka SMTNTQQ[P^O`Mb", "H\\PFJ[ QFK[ XNWOXPYOYNXMWMUNQROSMS OSQTSZT[ OSPTRZS[U[WZYW MFQF", "MYUFQTPXPZQ[T[VYWW VFRTQXQZR[ RFVF", "AbBQCOEMHMINIPHTF[ GMHNHPGTE[ HTJPLNNMPMRNSOSQP[ PMRORQO[ RTTPVNXMZM\\N]O]Q[W[Z\\[ ZM\\O\\QZWZZ[[^[`YaW", "F]GQHOJMMMNNNPMTK[ LMMNMPLTJ[ MTOPQNSMUMWNXOXQVWVZW[ UMWOWQUWUZV[Y[[Y\\W", "G\\HQIOKMNMONOPNTJb MMNNNPMTIb NTOQQNSMUMWNXOYQYTXWVZS[Q[OZNWNT WNXPXTWWUZS[ FbMb", "H\\XMRb YMSb VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ ObVb", "IZJQKOMMPMQNQPPTN[ OMPNPPOTM[ PTRPTNVMXMYNYOXPWOXN", "J[XOXPYPYOXNUMRMONNONQORVVWW NPOQVUWVWYVZS[P[MZLYLXMXMY", "KYTFPTOXOZP[S[UYVW UFQTPXPZQ[ NMWM", "F]GQHOJMMMNNNQLWLYN[ LMMNMQKWKYLZN[P[RZTXVT XMVTUXUZV[Y[[Y\\W YMWTVXVZW[", "H\\IQJOLMOMPNPQNWNYP[ NMONOQMWMYNZP[Q[TZVXXUYQYMXMYO", "C`DQEOGMJMKNKQIWIYK[ IMJNJQHWHYIZK[M[OZQXRV TMRVRYSZU[W[YZ[X\\V]R]M\\M]O UMSVSYU[", "H\\KQMNOMRMSOSR QMRORRQVPXNZL[K[JZJYKXLYKZ QVQYR[U[WZYW YNXOYPZOZNYMXMVNTPSRRVRYS[", "G\\HQIOKMNMONOQMWMYO[ MMNNNQLWLYMZO[Q[SZUXWT ZMV[U^SaPbMbKaJ`J_K^L_K` YMU[T^RaPb", "H\\YMXOVQNWLYK[ LQMOOMRMVO MOONRNVOXO LYNYRZUZWY NYR[U[WYXW", "G^VGUHVIWHWGUFRFOGMILLL[ RFPGNIMLM[ \\G[H\\I]H]G\\FZFXGWIW[ ZFYGXIX[ IM[M I[P[ T[[[", "G]WGVHWIXHWGUFRFOGMILLL[ RFPGNIMLM[ WMW[ XMX[ IMXM I[P[ T[[[", "G]VGUHVIWHWGUF XFRFOGMILLL[ RFPGNIMLM[ WHW[ XFX[ IMWM I[P[ T[[[", "BcRGQHRISHRGPFMFJGHIGLG[ MFKGIIHLH[ ]G\\H]I^H]G[FXFUGSIRLR[ XFVGTISLS[ ]M][ ^M^[ DM^M D[K[ O[V[ Z[a[", "BcRGQHRISHRGPFMFJGHIGLG[ MFKGIIHLH[ \\G[H\\I]H]G[F ^FXFUGSIRLR[ XFVGTISLS[ ]H][ ^F^[ DM]M D[K[ O[V[ Z[a[", "IZWNUMRMONMPLSLVMYNZQ[T[VZ RMPNNPMSMVNYOZQ[ MTUT", "I\\TFQGOJNLMOLTLXMZO[Q[TZVWWUXRYMYIXGVFTF TFRGPJOLNOMTMXNZO[ Q[SZUWVUWRXMXIWGVF NPWP", "G]UFOb VFNb QMMNKPJSJVKXMZP[S[WZYXZUZRYPWNTMQM QMNNLPKSKVLXNZP[ S[VZXXYUYRXPVNTM", "I[TMVNXPXOWNTMQMNNMOLQLSMUOWSZ QMONNOMQMSNUSZT\\T^S_Q_", "G]LMKNJPJRKUOYP[ JRKTOXP[P]O`MbLbKaJ_J\\KXMTOQRNTMVMYNZPZTYXWZU[T[SZSXTWUXTY VMXNYPYTXXWZ", "E_YGXHYIZHYGWFTFQGOINKMNLRJ[I_Ha TFRGPIOKNNLWK[J^I`HaFbDbCaC`D_E`Da _G^H_I`H`G_F]F[GZHYJXMU[T_Sa ]F[HZJYNWWV[U^T`SaQbObNaN`O_P`Oa IM^M", "F^[GZH[I\\H[GXFUFRGPIOKNNMRK[J_Ia UFSGQIPKONMWL[K^J`IaGbEbDaD`E_F`Ea YMWTVXVZW[Z[\\Y]W ZMXTWXWZX[ JMZM", "F^YGXHYIZHZGXF \\FUFRGPIOKNNMRK[J_Ia UFSGQIPKONMWL[K^J`IaGbEbDaD`E_F`Ea [FWTVXVZW[Z[\\Y]W \\FXTWXWZX[ JMYM", "@cTGSHTIUHTGRFOFLGJIIKHNGRE[D_Ca OFMGKIJKINGWF[E^D`CaAb?b>a>`?_@`?a `G_H`IaH`G]FZFWGUITKSNRRP[O_Na ZFXGVIUKTNRWQ[P^O`NaLbJbIaI`J_K`Ja ^M\\T[X[Z\\[_[aYbW _M]T\\X\\Z][ DM_M", "@cTGSHTIUHTGRFOFLGJIIKHNGRE[D_Ca OFMGKIJKINGWF[E^D`CaAb?b>a>`?_@`?a ^G]H^I_H_G]F aFZFWGUITKSNRRP[O_Na ZFXGVIUKTNRWQ[P^O`NaLbJbIaI`J_K`Ja `F\\T[X[Z\\[_[aYbW a` VDUFTJRVQZP]O_MaKbIbHaH`I_J`Ia QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK", "F_\\S[UYVWVUUTTQPPONNLNJOIQISJULVNVPUQTTPUOWNYN[O\\Q\\S", "F^[FI[ NFPHPJOLMMKMIKIIJGLFNFPGSHVHYG[F WTUUTWTYV[X[ZZ[X[VYTWT", "F_[NZO[P\\O\\N[MZMYNXPVUTXRZP[M[JZIXIUJSPORMSKSIRGPFNGMIMKNNPQUXWZZ[[[\\Z\\Y M[KZJXJUKSMQ MKNMVXXZZ[", "E`WNVLTKQKOLNMMPMSNUPVSVUUVS QKOMNPNSOUPV WKVSVUXVZV\\T]Q]O\\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYZX XKWSWUXV", "H\\PBP_ TBT_ XIWJXKYJYIWGTFPFMGKIKKLMMNOOUQWRYT KKMMONUPWQXRYTYXWZT[P[MZKXKWLVMWLX", "JZUITJUKVJVIUGSFQFOGNINKOMQOVR OMTPVRWTWVVXTZ PNNPMRMTNVPXU[ NVSYU[V]V_UaSbQbOaN_N^O]P^O_", "JZRFQHRJSHRF RFRb RQQTRbSTRQ LMNNPMNLLM LMXM TMVNXMVLTM", "JZRFQHRJSHRF RFRT RPQRSVRXQVSRRP RTRb R^Q`RbS`R^ LMNNPMNLLM LMXM TMVNXMVLTM L[N\\P[NZL[ L[X[ T[V\\X[VZT[", "E`QFNGKIILHOHRIUKXNZQ[T[WZZX\\U]R]O\\LZIWGTFQF ROQPQQRRSRTQTPSORO RPRQSQSPRP", "J[PFNGOIQJ PFOGOI UFWGVITJ UFVGVI QJOKNLMNMQNSOTQUTUVTWSXQXNWLVKTJQJ RUR[ SUS[ NXWX", "I\\RFOGMILLLMMPORRSSSVRXPYMYLXIVGSFRF RSR[ SSS[ NWWW", "D`PFMGJIHLGOGSHVJYM[P\\T\\W[ZY\\V]S]O\\LZIWGTFPF RFR\\ GQ]Q", "G`fHfIeIdHcGcFdFfGhIiKiNhPfQdR`RUQ;Q4R/S-U,V,X-Y/Y3X6W8U;P?JCHEFHEJDNDREVGYJ[N\\R\\V[XZZW[T[PZMYKWITHPHMIKKJNJRKUMW GdGeHeHdGd U;Q?LCIFGIFKENERFVGXJ[ R\\U[WZYWZTZPYMXKVITH", "EfNSOUQVSVUUVSVQUOSNQNOONPMSMVNYP[S\\V\\Y[[Y\\W]T]P\\MZJXIUHRHOIMJKLIOHSHXI]KaMcPeTfYf]e`cba KLJNIRIXJ\\L`NbQdUeYe]d_cba POTO OPUP NQVQ NRVR NSVS OTUT PUTU aLaNcNcLaL bLbN aMcM aVaXcXcVaV bVbX aWcW", "D`H@Hd M@Md W@Wd \\@\\d MMWK MNWL MOWM MWWU MXWV MYWW", "H\\PMMNLOKQKSLUMVPWTWWVXUYSYQXOWNTMPM MNLPLSMUNVPW WVXTXQWOVNTM", "JZQCVMRTRU ULQS TITKPRRUUY W\\UYSXQXOYN[N]O_Ra W\\UZSYOYO]P_Ra SXPZN]", "JZPOOMOKMKMMNNPOSOUNWL NKNN MLOL MMSO POUN WLSY", "IjNQOOQNSNUOVQVSUUSVQVOUNTMQMNNKPISHWH[I^K`NaRaW`[_]]`ZcVfQiMk WHZI]K_N`R`W_[^]\\`YcTgQi POTO OPUP NQVQ NRVR NSVS OTUT PUTU eLeNgNgLeL fLfN eMgM eVeXgXgVeV fVfX eWgW", "D`H>Hf I>If M>Mf QBSBSDQDQAR?T>W>Y?[A\\D\\I[LYNWOUOSNRLQNOQNROSQVRXSVUUWUYV[X\\[\\`[cYeWfTfReQcQ`S`SbQb RBRD QCSC Y?ZA[D[IZLYN RLRNPQNRPSRVRX YVZX[[[`ZcYe R`Rb QaSa", "AcHBHb IBIb [B[b \\B\\b DB`B DbMb Wb`b", "BaGBQPFb FBPP EBPQ EB\\B^I[B Ga\\a Fb\\b^[[b", "I[X+U1R8P=OANFMNMVN^OcPgRlUsXy U1S6Q<P@OFNNNVO^PdQhSnUs", "I[L+O1R8T=UAVFWNWVV^UcTgRlOsLy O1Q6S<T@UFVNVVU^TdShQnOs", "H[V+R1P5O:O>PBTJTLSNROMRRUSVTXTZPbOfOjPoRsVy T.R2Q5P:P>QCRF R^QaPfPjQoRrTv", "I\\N+R1T5U:U>TBPJPLQNROWRRUQVPXPZTbUfUjToRsNy P.R2S5T:T>SCRF R^SaTfTjSoRrPv", "I[V.S1Q4O8N=NCOIPMSXT\\UbUgTlSoQs S1Q5P8O=OBPHQLTWU[VaVgUlSpQsNv", "I[N.Q1S4U8V=VCUITMQXP\\ObOgPlQoSs Q1S5T8U=UBTHSLPWO[NaNgOlQpSsVv", "Ca].\\.[/[0\\1]1^0^.],[+Y+W,U.T0S3R:QJQjPsOv \\/\\0]0]/\\/ R:Rj U.T1S:SZRjQqPtOvMxKyIyGxFvFtGsHsItIuHvGv GtGuHuHtGt`RFNOKUIXGZE[C[BZBXCWDXCY RFPMOQNVNZP[ RFQJPOOVOZP[ [FWORXP[ [FYMXQWVWZY[Z[\\Z^X [FZJYOXVXZY[", "G^RFQJOPMULWJZH[F[EZEXFWGXFY RFRKSVT[ RFSKTVT[ `G_H`IaHaG```SaQaO`N_L_ XMX\\W_UaSbPbNaL_ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX", "H\\LFL[M[ LFMFM[ MQPNRMUMWNXQX[ MQPORNTNVOWQW[X[", "NWRFQGQHRISITHTGSFRF RGRHSHSGRG RMR[S[ RMSMS[", "NWRFQGQHRISITHTGSFRF RGRHSHSGRG RMRbSb RMSMSb", "H[LFL[M[ LFMFM[ XMWMMW XMMX PTV[X[ QSX[", "CbGMG[H[ GMHMH[ HQKNMMPMRNSQS[ HQKOMNONQORQR[S[ SQVNXM[M]N^Q^[ SQVOXNZN\\O]Q][^[", "H\\LML[M[ LMMMM[ MQPNRMUMWNXQX[ MQPORNTNVOWQW[X[", "I\\QMONMPLSLUMXOZQ[T[VZXXYUYSXPVNTMQM QNOONPMSMUNXOYQZTZVYWXXUXSWPVOTNQN", "H\\LMLbMb LMMMMb MPONQMTMVNXPYSYUXXVZT[Q[OZMX MPQNTNVOWPXSXUWXVYTZQZMX", "H\\WMWbXb WMXMXb WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX", "KYOMO[P[ OMPMP[ PSQPSNUMXM PSQQSOUNXNXM", "J[XPWNTMQMNNMPNRPSUUWV VUWWWXVZ WYTZQZNY OZNXMX XPWPVN WOTNQNNO ONNPOR NQPRUTWUXWXXWZT[Q[NZMX", "H\\LMLWMZO[R[TZWW LMMMMWNYPZRZTYWW WMW[X[ WMXMX[", "F^IMN[ IMJMNX RMNX RPN[ RPV[ RMVX [MZMVX [MV[", "JZLMR[ LMMMRY XMWMRYNb XMR[ObNb", "I[VNL[ XMNZ LMXM LMLNVN NZXZX[ L[X[", "K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ VRTXTZV[XZYY[V WRUXUZV[", "LZLVNSPO SFMXMZO[P[RZTXUUURVVWWXWZV TFNXNZO[", "LXTSSTTTTSSRQROSNTMVMXNZP[S[VYXV QROTNVNYP[", "K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ ZFTXTZV[XZYY[V [FUXUZV[", "LXOYQXRWSUSSRRQROSNTMVMXNZP[S[VYXV QROTNVNYP[", "OXRRUOWLXIXGWFUGTIKdKfLgNfOcPZQ[S[UZVYXV TISNRRO[M`Kd", "K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ VRPd WRT[R`PdOfMgLfLdMaO_R]V[YY[V", "L[LVNSPO SFL[ TFM[ OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V", "NVSLRMSNTMSL QROXOZQ[SZTYVV RRPXPZQ[", "NVSLRMSNTMSL QRKd RRO[M`KdJfHgGfGdHaJ_M]Q[TYVV", "LZLVNSPO SFL[ TFM[ URUSVSURTRRTOU OURVSZT[ OUQVRZT[U[XYZV", "NVNVPSRO UFOXOZQ[SZTYVV VFPXPZQ[", "E^EVGSIRKSKUI[ IRJSJUH[ KUMSORPRRSRUP[ PRQSQUO[ RUTSVRWRYSYUXXXZY[ WRXSXUWXWZY[[Z\\Y^V", "I[IVKSMROSOUM[ MRNSNUL[ OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V", "KYRRPRNSMTLVLXMZO[Q[SZTYUWUUTSRRQSQURWTXVXXWYV PRNTMVMYO[", "L[LVNSPO QLHg RLIg OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V", "K[UUTSRRPRNSMTLVLXMZO[Q[SZ PRNTMVMYO[ VRPdPfQgSfTcT[V[YY[V WRT[R`Pd", "LZLVNSPRRSRUP[ PRQSQUO[ RUTSVRWRVU VRVUWWXWZV", "NZNVPSQQQSTUUWUYTZR[ QSSUTWTYR[ NZP[U[XYZV", "NVNVPSRO UFOXOZQ[SZTYVV VFPXPZQ[ PNVN", "K[NRLXLZN[O[QZSXUU ORMXMZN[ VRTXTZV[XZYY[V WRUXUZV[", "KZNRMTLWLZN[O[RZTXUUUR ORNTMWMZN[ URVVWWXWZV", "H]LRJTIWIZK[L[NZPX MRKTJWJZK[ RRPXPZR[S[UZWXXUXR SRQXQZR[ XRYVZW[W]V", "JZJVLSNRPRQSQUPXOZM[L[KZKYLYKZ WSVTWTWSVRURSSRUQXQZR[U[XYZV QSRU SSQU PXQZ QXOZ", "K[NRLXLZN[O[QZSXUU ORMXMZN[ VRPd WRT[R`PdOfMgLfLdMaO_R]V[YY[V", "LYLVNSPRRRTSTVSXPZN[ RRSSSVRXPZ N[P\\Q^QaPdNfLgKfKdLaO^R\\VYYV N[O\\P^PaOdNf`UbVb UBVBTDRGPKOPOTPYR]T`Vb", "KYNBPDRGTKUPUTTYR]P`NbOb NBOBQDSGUKVPVTUYS]Q`Ob", "JZRFQGSQRR RFRR RFSGQQRR MINIVOWO MIWO MIMJWNWO WIVINOMO WIMO WIWJMNMO", "I[NFMGMM NGMM NFOGMM WFVGVM WGVM WFXGVM", "KYQFOGNINKOMQNSNUMVKVIUGSFQF QFNIOMSNVKUGQF SFOGNKQNUMVISF", "G^OFObPb OFPFPb UFUbVb UFVFVb JP[P[Q JPJQ[Q JW[W[X JWJX[X", "F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FH[I[ [F\\FI[ YTWTUUTWTYV[X[ZZ[X[VYT NFJGIKMMPJNF LFIIKMOLPHLF YTUUTYX[[XYT WTTWV[ZZ[VWT", "E``Qb VESIQMPPOUOZP_Qb", "JYSBTDUGVLVPUUSYQ\\N_Jb SBTEUJUOTTSWQ[N_", "E_^F\\GXHUHQGOFMFKGJIJKLMNMPLQJQHOF ^FF[ XTVTTUSWSYU[W[YZZXZVXT", "G]LFL[ MFM[ IFYFYLXF MPUPXQYRZTZWYYXZU[I[ UPWQXRYTYWXYWZU[", "F^NFNLMTLXKZJ[ XFX[ YFY[ KF\\F G[\\[ G[Gb H[Gb [[\\b \\[\\b", "CbRFR[ SFS[ OFVF GGHHGIFHFGGFHFIGJIKMLONPWPYOZM[I\\G]F^F_G_H^I]H^G NPLQKSJXIZH[ NPMQLSKXJZI[G[FZEX WPYQZS[X\\Z][ WPXQYSZX[Z\\[^[_Z`X O[V[", "H\\LIKFKLLINGPFTFWGXIXLWNTOQO TFVGWIWLVNTO TOVPXRYTYWXYWZT[O[MZLYKWKVLUMVLW WQXTXWWYVZT[", "F^KFK[ LFL[ XFX[ YFY[ HFOF UF\\F XHLY H[O[ U[\\[", "F^KFK[ LFL[ XFX[ YFY[ HFOF UF\\F XHLY H[O[ U[\\[ N@N?M?M@NBPCTCVBW@", "F^KFK[ LFL[ HFOF LPSPUOVMWIXGYFZF[G[HZIYHZG SPUQVSWXXZY[ SPTQUSVXWZX[Z[[Z\\X H[O[", "E^MFMLLTKXJZI[H[GZGYHXIYHZ XFX[ YFY[ JF\\F U[\\[", "H]KFRV LFSV ZFSVQYPZN[M[LZLYMXNYMZ IFOF VF\\F", "F_RFR[ SFS[ OFVF PILJJLIOIRJULWPXUXYW[U\\R\\O[LYJUIPI PIMJKLJOJRKUMWPX UXXWZU[R[OZLXJUI O[V[", "F^KFK[ LFL[ XFX[ YFY[ HFOF UF\\F H[\\[ [[\\b \\[\\b", "F]KFKQLSOTRTUSWQ LFLQMSOT WFW[ XFX[ HFOF TF[F T[[[", "BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[", "BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[ `[ab a[ab", "F`PFP[ QFQ[ IFHLHFTF QPXP[Q\\R]T]W\\Y[ZX[M[ XPZQ[R\\T\\W[YZZX[", "CaHFH[ IFI[ EFLF IPPPSQTRUTUWTYSZP[E[ PPRQSRTTTWSYRZP[ [F[[ \\F\\[ XF_F X[_[", "H]MFM[ NFN[ JFQF NPUPXQYRZTZWYYXZU[J[ UPWQXRYTYWXYWZU[", "H]LIKFKLLINGQFSFVGXIYKZNZSYVXXVZS[P[MZLYKWKVLUMVLW SFUGWIXKYNYSXVWXUZS[ PPYP", "CbHFH[ IFI[ EFLF E[L[ VFSGQIPKOOORPVQXSZV[X[[Z]X^V_R_O^K]I[GXFVF VFTGRIQKPOPRQVRXTZV[ X[ZZ\\X]V^R^O]K\\IZGXF IPOP", "G]WFW[ XFX[ [FOFLGKHJJJLKNLOOPWP OFMGLHKJKLLNMOOP RPPQORLYKZJZIY PQOSMZL[J[IYIX T[[[", "H\\XFWGQINKLNKQKULXNZQ[S[VZXXYUYSXPVNSMQMNNLPKS XFWHUIQJNLLN QMONMPLSLUMXOZQ[ S[UZWXXUXSWPUNSM", "H\\MMM[ NMN[ JMUMXNYPYQXSUT UMWNXPXQWSUT NTUTXUYWYXXZU[J[ UTWUXWXXWZU[", "F]NMNQMWLZK[ WMW[ XMX[ KM[M I[H`H[[[[`Z[", "E`aLbKbJaK`La JMPM TMZM", "H]RFRb SFSb OFSF RPQNPMNMLNKQKWLZN[P[QZRX NMMNLQLWMZN[ WMXNYQYWXZW[ SPTNUMWMYNZQZWYZW[U[TZSX ObVb", "G]LML[ MMM[ WMW[ XMX[ IMPM TM[M I[[[[`Z[", "G]LMLTMVPWRWUVWT MMMTNVPW WMW[ XMX[ IMPM TM[M T[[[", "CbHMH[ IMI[ RMR[ SMS[ \\M\\[ ]M][ EMLM OMVM YM`M E[`[", "CbHMH[ IMI[ RMR[ SMS[ \\M\\[ ]M][ EMLM OMVM YM`M E[`[``_[", "H]QMQ[ RMR[ LMKRKMUM RTVTYUZWZXYZV[N[ VTXUYWYXXZV[", "E_JMJ[ KMK[ GMNM KTOTRUSWSXRZO[G[ OTQURWRXQZO[ YMY[ ZMZ[ VM]M V[][", "J[OMO[ PMP[ LMSM PTTTWUXWXXWZT[L[ TTVUWWWXVZT[", "I\\MOLMLQMONNPMSMVNXPYSYUXXVZS[P[NZLXLWMVNWMX SMUNWPXSXUWXUZS[ RTXT", "Da`Y`Z^Z\\ V\\W^X_Y_ UXW]X^Y^Z]", "G]LFL[ MGMZ NFN[ IFUFXGYHZJZLYNXOUPNP XHYJYLXN UFWGXIXMWOUP RPTQUSWYX[Z[[Y[W WWXYYZZZ TQURXXYYZY[X I[Q[ JFLG KFLH OFNH PFNG LZJ[ LYK[ NYO[ NZP[", "H\\XIYFYLXIVGSFPFMGKIKLLNOPURWSXUXXWZ LLMNOOUQWRXT MGLILKMMONUPXRYTYWXYWZT[Q[NZLXKUK[LX", "H\\JFJL QFQ[ RGRZ SFS[ ZFZL JFZF N[V[ KFJL LFJI MFJH OFJG UFZG WFZH XFZI YFZL QZO[ QYP[ SYT[ SZU[", "F^KFKULXNZQ[S[VZXXYUYG LGLVMX MFMVNYOZQ[ HFPF VF\\F IFKG JFKH NFMH OFMG WFYG [FYG", "H\\KFR[ LFRXR[ MFSX YGR[ IFPF UF[F JFLH NFMH OFMG WFYG ZFYG", "F^JFN[ KFNVN[ LFOV RFOVN[ RFV[ SFVVV[ TFWV ZGWVV[ GFOF RFTF WF]F HFKG IFKH MFLH NFLG XFZG \\FZG", "H\\KFW[ LFX[ MFY[ XGLZ IFPF UF[F I[O[ T[[[ JFMH NFMH OFMG VFXG ZFXG LZJ[ LZN[ WZU[ WYV[ WYZ[", "G]JFQQQ[ KFRQRZ LFSQS[ YGSQ HFOF VF\\F N[V[ IFKG NFLG WFYG [FYG QZO[ QYP[ SYT[ SZU[", "H\\YFKFKL WFK[ XFL[ YFM[ K[Y[YU LFKL MFKI NFKH PFKG T[YZ V[YY W[YX X[YU", "I[NFN[ OGOZ PFP[ KFZFZL K[S[ LFNG MFNH QFPH RFPG UFZG WFZH XFZI YFZL NYM[ NZL[ PYQ[ PZR[", "H\\RFJ[ QIX[ RIY[ RFZ[ KYXY KZXZ J[Z[", "G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF MILKKNKSLVMX WXXVYSYNXKWI QFOGMJLNLSMWOZQ[ S[UZWWXSXNWJUGSF OMOT UMUT OPUP OQUQ ONPP OOQP UNTP UOSP PQOS QQOR SQUR TQUS", "H\\RFKZ QIW[ RIX[ RFY[ I[O[ T[[[ KZJ[ KZM[ WZU[ WYV[ XYZ[", "G]JEJL ZEZL OMOT UMUT JUJ\\ ZUZ\\ JGZG JHZH JIZI OPUP OQUQ JXZX JYZY JZZZ JFMH ZFWH KIJK LIJJ XIZJ YIZK ONPP OOQP UNTP UOSP PQOS QQOR SQUR TQUS JVKX JWLX ZWXX ZVYX MYJ[ WYZ[", "F^KFK[ LGLZ MFM[ WFW[ XGXZ YFY[ HF\\F H[P[ T[\\[ IFKG JFKH NFMH OFMG UFWG VFWH ZFYH [FYG KZI[ KYJ[ MYN[ MZO[ WZU[ WYV[ YYZ[ YZ[[", "G]IFPPQQ JFQP KFRPI[ IFYFZLYIWF VFYH TFYG KYYY JZYZ I[Y[ZUYXWY", "H\\JMKILGMFOFPGQIRM LHMGOGPH JMKJMHOHPIQMQ[ RMR[ ZMYJWHUHTISMS[ XHWGUGTH ZMYIXGWFUFTGSIRM N[V[ QYP[ QZO[ SZU[ SYT[", "G]QFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[ OKLLKMJOJRKTLUOVUVXUYTZRZOYMXLUKOK LMKOKRLT XTYRYOXM OKMLLOLRMUOV UVWUXRXOWLUK", "F^QFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[ HMIMJNKQLSMTPUTUWTXSYQZN[M\\M LRKNJLILKN HMIKJKKLLPMSNTPU YN[LZLYNXR TUVTWSXPYLZK[K\\M", "G]NYKYJWK[O[MVKRJOJLKIMGPFTFWGYIZLZOYRWVU[Y[ZWYYVY LSKOKLLI XIYLYOXS O[MULPLKMHNGPF TFVGWHXKXPWUU[ KZNZ VZYZ", "H\\UFIZ SJT[ THUZ UFUHVYV[ LUTU F[L[ Q[X[ IZG[ IZK[ TZR[ TYS[ VYW[", "F^OFI[ PFJ[ QFK[ LFWFZG[I[KZNYOVP YGZIZKYNXO WFXGYIYKXNVP NPVPXQYSYUXXVZR[F[ WQXSXUWXUZ VPWRWUVXTZR[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[", "H]ZH[H\\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[S[UZWXXV QHOJNLMOLSLWMY TFRGPJOLNOMSMXNZP[", "F]OFI[ PFJ[ QFK[ LFUFXGYHZKZOYSWWUYSZO[F[ WGXHYKYOXSVWTY UFWHXKXOWSUWRZO[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[", "F]OFI[ PFJ[ QFK[ ULST LF[FZL NPTP F[U[WV MFPG NFOH RFPH SFPG WFZG XFZH YFZI ZFZL ULSPST TNRPSR TOQPSQ JZG[ JYH[ KYL[ JZM[ P[UZ R[UY UYWV", "F\\OFI[ PFJ[ QFK[ ULST LF[FZL NPTP F[N[ MFPG NFOH RFPH SFPG WFZG XFZH YFZI ZFZL ULSPST TNRPSR TOQPSQ JZG[ JYH[ KYL[ JZM[", "H^ZH[H\\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[R[UZWXYT QHOJNLMOLSLWMY VXWWXT TFRGPJOLNOMSMXNZP[ R[TZVWWT TT\\T UTWU VTWW ZTXV [TXU", "E_NFH[ OFI[ PFJ[ ZFT[ [FU[ \\FV[ KFSF WF_F LPXP E[M[ Q[Y[ LFOG MFNH QFOH RFOG XF[G YFZH ]F[H ^F[G IZF[ IYG[ JYK[ IZL[ UZR[ UYS[ VYW[ UZX[", "KYTFN[ UFO[ VFP[ QFYF K[S[ RFUG SFTH WFUH XFUG OZL[ OYM[ PYQ[ OZR[", "I\\WFRWQYO[ XFTSSVRX YFUSSXQZO[M[KZJXJVKULUMVMWLXKX KVKWLWLVKV TF\\F UFXG VFWH ZFXH [FXG", "F]OFI[ PFJ[ QFK[ \\GMR QOU[ ROV[ SNWZ LFTF YF_F F[N[ R[Y[ MFPG NFOH RFPH SFPG ZF\\G ^F\\G JZG[ JYH[ KYL[ JZM[ UZS[ UYT[ VYX[", "H\\QFK[ RFL[ SFM[ NFVF H[W[YU OFRG PFQH TFRH UFRG LZI[ LYJ[ MYN[ LZO[ R[WZ T[XX V[YU", "D`MFGZ MGNYN[ NFOY OFPX [FPXN[ [FU[ \\FV[ ]FW[ JFOF [F``V``aUbObLaK_K^L\\O[ ObMaL_L^M\\O[", "G^LFL[ MGMZ IFNFN[ NQOOPNRMUMWNXOYRY[ WOXRXZ UMVNWQW[ I[Q[ T[\\[ JFLG KFLH LZJ[ LYK[ NYO[ NZP[ WZU[ WYV[ YYZ[ YZ[[", "LXQFQHSHSFQF RFRH QGSG QMQ[ RNRZ NMSMS[ N[V[ OMQN PMQO QZO[ QYP[ SYT[ SZU[", "KXRFRHTHTFRF SFSH RGTG RMR^QaPb SNS]R` OMTMT]S`RaPbMbLaL_N_NaMaM` PMRN QMRO", "G]LFL[ MGMZ IFNFN[ WNNW RSY[ RTX[ QTW[ TM[M I[Q[ T[[[ JFLG KFLH UMWN ZMWN LZJ[ LYK[ NYO[ NZP[ WYU[ VYZ[", "LXQFQ[ RGRZ NFSFS[ N[V[ OFQG PFQH QZO[ QYP[ SYT[ SZU[", "AcFMF[ GNGZ CMHMH[ HQIOJNLMOMQNROSRS[ QORRRZ OMPNQQQ[ SQTOUNWMZM\\N]O^R^[ \\O]R]Z ZM[N\\Q\\[ C[K[ N[V[ Y[a[ DMFN EMFO FZD[ FYE[ HYI[ HZJ[ QZO[ QYP[ SYT[ SZU[ \\ZZ[ \\Y[[ ^Y_[ ^Z`[", "G^LML[ MNMZ IMNMN[ NQOOPNRMUMWNXOYRY[ WOXRXZ UMVNWQW[ I[Q[ T[\\[ JMLN KMLO LZJ[ LYK[ NYO[ NZP[ WZU[ WYV[ YYZ[ YZ[[", "H\\QMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMQM MPLRLVMX WXXVXRWP QMONNOMRMVNYOZQ[ S[UZVYWVWRVOUNSM", "G\\LMLb MNMa IMNMNb NPONQMSMVNXPYSYUXXVZS[Q[OZNX WPXRXVWX SMUNVOWRWVVYUZS[ IbQb JMLN KMLO LaJb L`Kb N`Ob NaPb", "H\\VNVb WOWa UNWNXMXb VPUNSMQMNNLPKSKULXNZQ[S[UZVX MPLRLVMX QMONNOMRMVNYOZQ[ Sb[b VaTb V`Ub X`Yb XaZbaLbJbIaI_K_KaJaJ` JMQM TMZM KMNO PMNN VMXN YMXN", "I[VML[ WMM[ XMN[ XMLMLQ L[X[XW MMLQ NMLP OMLO QMLN S[XZ U[XY V[XX W[XW", "G^[MZQYTWXUZR[P[MZKXJUJSKPMNPMRMUNVOWQYXZZ[[\\[ ZMYQXTWVUYTZR[ LXKVKRLP P[NZMYLVLRMONNPM RMTNUOVQXXYZ[[", "G\\QFNGMHLJKNKb NHMJLNLa QFOGNIMNMb QFSFVGWHXJXLWNVOSP PPTPWQXRYTYWXYWZT[Q[OZNYMW VHWJWLVN WRXTXWWY SFUGVIVMUOSP TPVQWSWXVZT[ KbMb", "F\\HRINKMMMONPOQRRYSb IOKNMNOOPP HRIPKOMOOPPQQTRYRa XMWPVRTUSWR[Qb YMWQ ZMYOWRTVSXR[ XMZM QbSb", "H\\SMQMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMPLNKMJMHNGPFSFWH MPLSLUMX WXXUXSWP QMONNOMRMVNYOZQ[ S[UZVYWVWRVOUNOKNJNIOHQGTGWH", "I[SMUNVOWOVNSMQMMNLOLQMRQS SSQSMTKVKXMZP[S[VZXXWXVZ NNMOMQNR MULVLXMY QMONNONQORQS QSNTMVMXNZP[", "I[QHRGRFQFPGPIQJTKXKYKYJXJUKSLPNNPMRLULWMYNZP[S\\U]V_VaUbSbRaR`S`Sa POOPNRMUMWNYOZ UKRMQNOQNTNWOYQ[S\\", "G]JMKNLPL[ KMLNMPMZ HPINJMLMMNNPN[ UMVNWQWb WOXRXa NQOOPNRMUMWNXOYRYb L[N[ WbYb", "F]IMJNKPKTLWMYNZQ[S[VZWYXWYRYOXJVGTFRFPGOIOKPMSOVP[Q JMKNLPLTMWNY VYWWXRXOWJVHTG GPHNIMKMLNMPMTNXOZQ[ S[UZVXWSWNVJUHSGQGOI", "KZNMONPPPXQZS[U[WZXX OMPNQPQXRZ LPMNNMPMQNRPRXSZT[", "G]JMKNLPL[ KMLNMPMZ HPINJMLMMNNPN[ SOUNWNXOXPZPZNXMVMTNQQOTNW XNYOYP PSQSWYYYZX TWWZYZ RTUZV[X[YZZX L[N[", "H\\JGKFMFOGQIXXYZZ[ OHPIWXXY MFNGOIVXXZZ[[[ RMJZJ[K[RM", "G]KMKb LNLa MMMb VMVXWZX[Z[[Z\\X WNWXXZY[ XMXXYZZ[ MXNZP[R[TZUYVW KMMM VMXM KbMb", "G]JMKNLPMTN[ KMLNMPNTOZ HPINJMLMMNNPOTPZ VVWTXQXMYMZNYQXSVVTXQZN[ XRYOYM", "JZPGSFRFPGOHOIPJSKVLWKVJSKPLNMMOMQNRPSSTVUWTVSSTOUMVLXLZM[O\\S]U^V_VaTbRbOaPaRb OMNONQOR NVMXMZN[ VKSKQLPMOOOQQSST VTSTPUOVNXNZP\\S]", "G]IQJOKNMM[M KOMNZN IQJPLO[O OONZM[LZMWOO UOVZW[XZWWUO [M[O OOMZ UOWZ", "G\\QMNNLPKTKb MPLTLa QMONNOMSMb MWNYOZQ[S[VZXXYUYSXPVNSMQM WXXVXRWP S[UZVYWVWRVOUNSM KbMb", "G]PMMNKPJSJUKXMZP[R[UZWXXUXSWPUNRM LPKRKVLX VXWVWRVP PMNNMOLRLVMYNZP[ R[TZUYVVVRUOTNRM RMZO[N[MPM RMZN", "H\\JQKOLNNMZM LONNYN JQKPMOZO ROQZR[SZRO ZMZO RORZ", "G\\JMKNLPLUMXOZQ[S[UZWXXVYRYNXMWMXPXSWWUZ KMLNMPMUNX WMXNXO HPINJMLMMNNPNVOYQ[", "G]RQQNPMNMLNKOJRJUKXMZP[T[WZYXZUZRYOXNVMTMSNRQ LOKRKULX XXYUYRXO NMMNLQLVMYNZP[ T[VZWYXVXQWNVM RQQb RQRa RQSb QbSb", "H\\LMMNNPT_VaXbZb[a NOOPU_V` INJMLMNNPPV_WaXb VSXPYMZMYOVSN\\K`JbKbL_N\\", "F]HNINJPJUKXMZP[T[VZXXYVZRZNYMXMYPYSXWVZ JNKPKULX XMYNYO GPHNIMJMKNLPLVMYNZP[ QFSb RGRa SFQb QFSF QbSb`Kb TJSMRRP[O^ XFVHUJTMSRQZP]O_MaKbIbHaH_J_JaIaI` NMYM", "H]XMT[S^QaOb YMU[S_ XMZMV[T_RaObLbJaI`I^K^K`J`J_ VTVQUNSMQMNNLQKTKVLYMZO[Q[SZTYUWVT NOMQLTLWMY QMOONQMTMWNZO[", "G]OFI[K[ PFJ[ LFQFK[ MTOPQNSMUMWNXPXSVX WNWRVVVZ WPUUUXVZW[Y[[Y\\W MFPG NFOH", "KXTFTHVHVFTF UFUH TGVG LQMOOMQMRNSPSSQX RNRRQVQZ RPPUPXQZR[T[VYWW", "KXUFUHWHWFUF VFVH UGWG MQNOPMRMSNTPTSRZQ]P_NaLbJbIaI_K_KaJaJ` SNSSQZP]O_ SPRTP[O^N`Lb", "G]OFI[K[ PFJ[ LFQFK[ YOYNXNXPZPZNYMWMUNQROS MSOSQTRUTYUZWZ QUSYTZ OSPTRZS[U[WZYW MFPG NFOH", "LXTFQQPUPXQZR[T[VYWW UFRQQUQZ QFVFRTQX RFUG SFTH", "@cAQBODMFMGNHPHSF[ GNGSE[ GPFTD[F[ HSJPLNNMPMRNSPSSQ[ RNRSP[ RPQTO[Q[ SSUPWNYM[M]N^P^S\\X ]N]R\\V\\Z ]P[U[X\\Z][_[aYbW", "F^GQHOJMLMMNNPNSL[ MNMSK[ MPLTJ[L[ NSPPRNTMVMXNYPYSWX XNXRWVWZ XPVUVXWZX[Z[\\Y]W", "H\\QMNNLQKTKVLYMZP[S[VZXWYTYRXOWNTMQM NOMQLTLWMY VYWWXTXQWO QMOONQMTMWNZP[ S[UYVWWTWQVNTM", "G]HQIOKMMMNNOPOSNWKb NNNSMWJb NPMTIb OTPQQORNTMVMXNYOZRZTYWWZT[R[PZOWOT XOYQYTXWWY VMWNXQXTWWVYT[ FbNb JaGb J`Hb K`Lb JaMb", "G\\WMQb XMRb WMYMSb UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT MOLQKTKWLY PMNOMQLTLWMZN[ NbVb RaOb R`Pb S`Tb RaUb", "I[JQKOMMOMPNQPQTO[ PNPTN[ PPOTM[O[ YOYNXNXPZPZNYMWMUNSPQT", "J[XPXOWOWQYQYOXNUMRMONNONQOSQTTUVVWX ONNQ ORQSTTVU WVVZ NOOQQRTSVTWVWXVZS[P[MZLYLWNWNYMYMX", "KYTFQQPUPXQZR[T[VYWW UFRQQUQZ TFVFRTQX NMXM", "F^GQHOJMLMMNNPNSLX MNMRLVLZ MPKUKXLZN[P[RZTXVU XMVUVXWZX[Z[\\Y]W YMWUWZ XMZMXTWX", "H\\IQJOLMNMONPPPSNX ONORNVNZ OPMUMXNZP[R[TZVXXUYQYMXMXNYP", "CaDQEOGMIMJNKPKSIX JNJRIVIZ JPHUHXIZK[M[OZQXRU TMRURXSZU[W[YZ[X]U^Q^M]M]N^P UMSUSZ TMVMTTSX", "G]JQLNNMPMRNSPSR PMQNQRPVOXMZK[I[HZHXJXJZIZIY RORRQVQY ZOZNYNYP[P[NZMXMVNTPSRRVRZS[ PVPXQZS[U[WZYW", "G]HQIOKMMMNNOPOSMX NNNRMVMZ NPLULXMZO[Q[SZUXWT YMU[T^RaPb ZMV[T_ YM[MW[U_SaPbMbKaJ`J^L^L`K`K_", "H\\YMXOVQNWLYK[ XOOOMPLR VORNONNO VORMOMMOLR LYUYWXXV NYRZUZVY NYR[U[WYXV", "H\\WQVOUNSMQMNNLPKSKULXNZQ[S[VZWYXWYSYNXJWHVGSFQFNGMHNHOGQF MPLRLVMX VYWWXSXNWJVH QMONNOMRMVNYOZQ[ S[UZVXWTWMVIUGSF", "I[UMWNXOYOXNUMRMONMPLSLUMXOZR[U[XZYYXYWZU[ NPMSMUNX RMPNOONRNVOYPZR[ NTTUUTTSNT NTTT", "H\\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF NHMJLNLSMWNY VYWWXSXNWJVH QFOGNIMNMSNXOZQ[ S[UZVXWSWNVIUGSF LPXQ LQXP", "G]PMMNKPJSJUKXMZP[T[WZYXZUZSYPWNTMPM LPKSKULX XXYUYSXP PMNNMOLRLVMYNZP[T[VZWYXVXRWOVNTM QFSb RGRa SFQb QFSF QbSb`Ub QHPKOOOUPYQ\\ SDRFQIPOPUQ[R^S`", "KYOBQDSGUKVPVTUYS]Q`Ob SHTKUOUUTYS\\ QDRFSITOTUS[R^Q`", "F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FH[ [FI[ [FJ[ YTWTUUTWTYV[X[ZZ[X[VYT OGLFIIJLMMPJOG NFJGIK KMOLPH ZUWTTWUZX[[XZU YTUUTY V[ZZ[V H[J[", "E`b SHQKOONTN\\ ZBWDTGRJQLPOOSN\\ NTO]P`Qb", "JZSBUEVHWLWQVUTYR\\O_LaJb VHVPUUSYQ\\ SBTDUGVP VHUQTUSXRZP]M`Jb", "J[TFSGUQTR TFTR TFUGSQTR OIPIXOYO OIYO OIOJYNYO YIXIPOOO YIOO YIYJONOO", "H\\PFOGMM PGMM PFQGMM ZFYGWM ZGWM ZF[GWM", "KZSFQGPIPKQMSNUNWMXKXIWGUFSF SFPIQMUNXKWGSF UFQGPKSNWMXIUF", "G^SFKbLb SFTFLb YFQbRb YFZFRb KP\\P\\Q KPKQ\\Q IWZWZX IWIXZX", "E^^F\\GXHUHQGOFMFKGJIJKLMNMPLQJQHOF ^FE[ ^FF[ ^FG[ XTVTTUSWSYU[W[YZZXZVXT PGMFJIKLNMQJPG OFKGJK LMPLQH YUVTSWTZW[ZXYU XTTUSY U[YZZV E[G[", "E`UQUNTLRKPKNLMMLPLSMUOVQVSUTTUQ OLNMMPMSNU RKPLOMNPNSOUPV VKUQUSVUXVZV\\U]R]O\\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYXYWZ WKVQVSWU VKXKWQWSXUZV", "std::abs(dsize.width - ssize.width*2) == dsize.width % 2 && std::abs(dsize.height - ssize.height*2) == dsize.height % 2", "/build/master_pack-android/opencv/modules/imgproc/src/pyramids.cpp", "ssize.width > 0 && ssize.height > 0 && std::abs(dsize.width*2 - ssize.width) <= 2 && std::abs(dsize.height*2 - ssize.height) <= 2", "/build/master_pack-android/opencv/modules/imgproc/src/hough.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/deriv.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/featureselect.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/cornersubpix.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/histogram.cpp", "mutex: pthread_mutex_lock failed", "mutex: pthread_mutex_init failed", "/build/master_pack-android/opencv/modules/imgproc/src/linefit.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/sumpixels.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/phasecorr.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/utils.cpp", "_scale > 0 && _sigma_scale > 0 && _quant >= 0 && _ang_th > 0 && _ang_th < 180 && _density_th >= 0 && _density_th < 1 && _n_bins > 0", "/build/master_pack-android/opencv/modules/imgproc/src/lsd.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/subdivision2d.cpp", "Subdiv2D::locate returned invalid location = %d", "/build/master_pack-android/opencv/modules/imgproc/src/connectedcomponents.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/approx.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/canny.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/generalized_hough.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/smooth.cpp", "Unsupported combination of source format (=%d), and buffer format (=%d)", "Unsupported combination of sum format (=%d), and destination format (=%d)", "/build/master_pack-android/opencv/modules/imgproc/src/matchcontours.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/filter.cpp", "Unsupported combination of buffer format (=%d), and destination format (=%d)", "roi.x >= 0 && roi.y >= 0 && roi.width >= 0 && roi.height >= 0 && roi.x + roi.width <= wholeSize.width && roi.y + roi.height <= wholeSize.height", "/build/master_pack-android/opencv/modules/imgproc/src/filterengine.hpp", "Unsupported combination of source format (=%d), and destination format (=%d)", "/build/master_pack-android/opencv/modules/imgproc/src/templmatch.cpp", "result.size() == cv::Size(std::abs(img.cols - templ.cols) + 1, std::abs(img.rows - templ.rows) + 1) && result.type() == CV_32F", "/build/master_pack-android/opencv/modules/imgproc/src/floodfill.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/colormap.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/grabcut.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/gcgraph.hpp", "/build/master_pack-android/opencv/modules/imgproc/src/samplers.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/shapedescr.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/emd.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/thresh.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/corner.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/contours.cpp", "[Start]FindContours supports only CV_8UC1 images when mode != CV_RETR_FLOODFILL otherwise supports CV_32SC1 images only", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/core_c.h", "(_contours.kind() == _InputArray::STD_VECTOR_VECTOR || _contours.kind() == _InputArray::STD_VECTOR_MAT || _contours.kind() == _InputArray::STD_VECTOR_UMAT)", "/build/master_pack-android/opencv/modules/imgproc/src/geometry.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/rotcalipers.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/min_enclosing_triangle.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/gabor.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/blend.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/morph.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/segmentation.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/demosaicing.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/spatialgradient.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/drawing.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/clahe.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/imgwarp.cpp", "((map1.type() == CV_32FC2 || map1.type() == CV_16SC2) && map2.empty()) || (map1.type() == CV_32FC1 && map2.type() == CV_32FC1)", "(m1type == CV_16SC2 && (nninterpolate || m2type == CV_16UC1 || m2type == CV_16SC1)) || (m2type == CV_16SC2 && (nninterpolate || m1type == CV_16UC1 || m1type == CV_16SC1)) || (m1type == CV_32FC1 && m2type == CV_32FC1) || (m1type == CV_32FC2 && m2->empty())", "/build/master_pack-android/opencv/modules/imgproc/src/accum.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/moments.cpp", "/build/master_pack-android/opencv/modules/imgproc/src/distransform.cpp", "/build/master_pack-android/opencv/modules/ml/src/knearest.cpp", "/build/master_pack-android/opencv/modules/ml/src/em.cpp", "!probs || (!probs->empty() && probs->rows == nsamples && probs->cols == nclusters && (probs->type() == CV_32FC1 || probs->type() == CV_64FC1))", "!weights || (!weights->empty() && (weights->cols == 1 || weights->rows == 1) && static_cast<int>(weights->total()) == nclusters && (weights->type() == CV_32FC1 || weights->type() == CV_64FC1))", "/build/master_pack-android/opencv/modules/ml/src/lr.cpp", "Logisitic Regression Classifier", "/build/master_pack-android/opencv/modules/ml/src/svm.cpp", "Invalid type of parameter (use one of SVM::C, SVM::GAMMA et al.)", "vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", "in the case of classification problem the responses must be categorical; either specify varType when creating TrainData, or pass integer responses", "/build/master_pack-android/opencv/modules/ml/src/precomp.hpp", "/build/master_pack-android/opencv/modules/ml/src/rtrees.cpp", "/build/master_pack-android/opencv/modules/ml/src/data.cpp", "type spec is not correct; it should have format \"cat\", \"ord\" or \"ord[n1,n2-n3,n4-n5,...]cat[m1-m2,m3,m4-m5,...]\", where n's and m's are 0-based variable indices", "(sampleIdx.checkVector(1, CV_32S, true) > 0 && checkRange(sampleIdx, true, 0, 0, nsamples)) || sampleIdx.checkVector(1, CV_8U, true) == nsamples", "(varIdx.checkVector(1, CV_32S, true) > 0 && checkRange(varIdx, true, 0, 0, ninputvars)) || varIdx.checkVector(1, CV_8U, true) == ninputvars", "(!varTypesSet && vtypes[i] == rowtypes[i]) || (varTypesSet && (vtypes[i] == rowtypes[i] || rowtypes[i] == VAR_ORDERED))", "/build/master_pack-android/opencv/modules/ml/src/tree.cpp", "/build/master_pack-android/opencv/modules/ml/src/kdtree.cpp", "lowerBound.size == upperBound.size && lowerBound.isContinuous() && upperBound.isContinuous() && lowerBound.type() == upperBound.type() && lowerBound.type() == CV_32F && lowerBound.total() == (size_t)ptdims", "/build/master_pack-android/opencv/modules/ml/src/svmsgd.cpp", "/build/master_pack-android/opencv/modules/ml/src/ann_mlp.cpp", "input training data should be a floating-point matrix with the number of rows equal to the number of training samples and the number of columns equal to the size of 0-th (input) layer", "output training data should be a floating-point matrix with the number of rows equal to the number of training samples and the number of columns equal to the size of last (output) layer", "/build/master_pack-android/opencv/modules/ml/src/boost.cpp", "/build/master_pack-android/opencv/modules/ml/src/testset.cpp", "/build/master_pack-android/opencv/modules/ml/src/nbayes.cpp", "/build/master_pack-android/opencv/modules/ml/src/inner_functions.cpp", "/build/master_pack-android/opencv/modules/photo/src/seamless_cloning.cpp", "/build/master_pack-android/opencv/modules/photo/src/denoising.cpp", "/build/master_pack-android/opencv/modules/photo/src/fast_nlmeans_multi_denoising_invoker.hpp", "/build/master_pack-android/opencv/modules/photo/src/fast_nlmeans_denoising_invoker.hpp", "/build/master_pack-android/opencv/modules/photo/src/contrast_preserve.cpp", "/build/master_pack-android/opencv/modules/photo/src/inpaint.cpp", "/build/master_pack-android/opencv/modules/photo/src/merge.cpp", "/build/master_pack-android/opencv/modules/photo/src/tonemap.cpp", "/build/master_pack-android/opencv/modules/photo/src/align.cpp", "/build/master_pack-android/opencv/modules/photo/src/denoise_tvl1.cpp", "/build/master_pack-android/opencv/modules/photo/src/calibrate.cpp", "/build/master_pack-android/opencv/modules/photo/src/hdr_common.cpp", "/build/master_pack-android/opencv/modules/video/src/optflowgf.cpp", "/build/master_pack-android/opencv/modules/video/src/camshift.cpp", "/build/master_pack-android/opencv/modules/video/src/lkpyramid.cpp", "ofs.x >= winSize.width && ofs.y >= winSize.height && ofs.x + prevPyr[lvlStep1].cols + winSize.width <= fullSize.width && ofs.y + prevPyr[lvlStep1].rows + winSize.height <= fullSize.height", "ofs.x >= winSize.width && ofs.y >= winSize.height && ofs.x + nextPyr[lvlStep2].cols + winSize.width <= fullSize.width && ofs.y + nextPyr[lvlStep2].rows + winSize.height <= fullSize.height", "/build/master_pack-android/opencv/modules/video/src/bgfg_KNN.cpp", "/build/master_pack-android/opencv/modules/video/src/ecc.cpp", "motionType == MOTION_TRANSLATION || motionType == MOTION_EUCLIDEAN || motionType == MOTION_AFFINE || motionType == MOTION_HOMOGRAPHY", "motionType == MOTION_AFFINE || motionType == MOTION_HOMOGRAPHY || motionType == MOTION_EUCLIDEAN || motionType == MOTION_TRANSLATION", "The algorithm stopped before its convergence. The correlation is going to be minimized. Images may be uncorrelated or non-overlapped", "/build/master_pack-android/opencv/modules/video/src/bgfg_gaussmix2.cpp", "/build/master_pack-android/opencv/modules/video/src/compat_video.cpp", "/build/master_pack-android/opencv/modules/video/src/kalman.cpp", "/build/master_pack-android/opencv/modules/video/src/tvl1flow.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/loadsave.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/utils.cpp", "Source image must have 1, 3 or 4 channels", "Destination image must have 1 or 3 channels", "Unsupported combination of input/output formats", "JPEG 2000 LOADER ERROR: cannot convert colorspace\n", "JPEG 2000 LOADER ERROR: unable to create colorspace\n", "JPEG2000 LOADER ERROR: colorspace conversion failed\n", "/build/master_pack-android/opencv/modules/imgcodecs/src/grfmt_hdr.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/grfmt_base.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/grfmt_png.cpp", "PNG input buffer is incomplete", "/build/master_pack-android/opencv/modules/imgcodecs/src/bitstrm.cpp", "/build/master_pack-android/opencv/modules/imgcodecs/src/rgbe.cpp", "missing blank line after FORMAT specifier", "unable to allocate buffer space", "cvCreateFileCapture_Images (filename)", "VIDEOIO(%s): raised OpenCV exception:\n\n%s\n", "VIDEOIO(%s): raised C++ exception:\n\n%s\n", "VIDEOIO(%s): raised unknown C++ exception!\n\n", "cvCreateVideoWriter_Images(filename)", "/build/master_pack-android/opencv/modules/videoio/src/cap_mjpeg_encoder.cpp", "Unexpected end of file while searching for %s list\n", "Unexpected element. Expected: %s. Got: %s.\n", "Unexpected list type. Expected: %s. Got: %s.\n", "Unexpected end of file while searching for %s chunk\n", "More than one video stream found within AVI/AVIX list. Stream %c%cdc would be ignored\n", "Frame offset points outside movi section.\n", "Failed to parse avi: index was not found\n", "/build/master_pack-android/opencv/modules/highgui/src/window.cpp", "The function is not implemented. Rebuild the library with Windows, GTK+ 2.x or Carbon support. If you are on Ubuntu or Debian, install libgtk2.0-dev and pkg-config, then re-run cmake or configure script", "/build/master_pack-android/opencv/modules/objdetect/src/hog.cpp", "(winSize.width - blockSize.width) % blockStride.width == 0 && (winSize.height - blockSize.height) % blockStride.height == 0", "/build/master_pack-android/opencv/modules/core/include/opencv2/core/operations.hpp", "/build/master_pack-android/opencv/modules/objdetect/src/detection_based_tracker.cpp", "\n %s: ERROR: OpenCV Exception caught: \n'%s'\n\n", "\n %s: ERROR: Exception caught: \n'%s'\n\n", "\n %s: ERROR: UNKNOWN Exception caught\n\n", "DetectionBasedTracker: workcycleObjectDetectorFunction: ERROR concerning pointer, received as the function parameter", "/build/master_pack-android/opencv/modules/objdetect/src/cascadedetect.cpp", "/build/master_pack-android/opencv/modules/objdetect/src/cascadedetect.hpp", "/build/master_pack-android/opencv/modules/objdetect/src/haar.cpp", "header of the stage classifier #%d is invalid (has null pointers or non-positive classfier count)", "rectangle #%d of the classifier #%d of the stage classifier #%d is not inside the reference (original) cascade window", "Trees node is not a valid sequence. (stage %d)", "Tree node is not a valid sequence. (stage %d, tree %d)", "Tree node %d is not a valid map. (stage %d, tree %d)", "Feature node is not a valid map. (stage %d, tree %d, node %d)", "Rects node is not a valid sequence. (stage %d, tree %d, node %d)", "Rect %d is not a valid sequence. (stage %d, tree %d, node %d)", "x coordinate must be non-negative integer. (stage %d, tree %d, node %d, rect %d)", "y coordinate must be non-negative integer. (stage %d, tree %d, node %d, rect %d)", "width must be positive integer and (x + width) must not exceed window width. (stage %d, tree %d, node %d, rect %d)", "height must be positive integer and (y + height) must not exceed window height. (stage %d, tree %d, node %d, rect %d)", "weight must be real number. (stage %d, tree %d, node %d, rect %d)", "tilted must be 0 or 1. (stage %d, tree %d, node %d)", "threshold must be real number. (stage %d, tree %d, node %d)", "left node must be valid node number. (stage %d, tree %d, node %d)", "left node or left value must be specified. (stage %d, tree %d, node %d)", "left value must be real number. (stage %d, tree %d, node %d)", "Tree structure is broken: too many values. (stage %d, tree %d, node %d)", "right node must be valid node number. (stage %d, tree %d, node %d)", "right node or right value must be specified. (stage %d, tree %d, node %d)", "right value must be real number. (stage %d, tree %d, node %d)", "Tree structure is broken: too few values. (stage %d, tree %d)", "stage threshold must be real number. (stage %d)", "parent must be integer number. (stage %d)", "next must be integer number. (stage %d)", "%s%s%d/AdaBoostCARTHaarClassifier.txt", "%s/%d/AdaBoostCARTHaarClassifier.txt", "/build/master_pack-android/opencv/modules/features2d/src/feature2d.cpp", "/build/master_pack-android/opencv/modules/features2d/src/matchers.cpp", "/build/master_pack-android/opencv/modules/features2d/src/brisk.cpp", "/build/master_pack-android/opencv/modules/features2d/src/kaze.cpp", "/build/master_pack-android/opencv/modules/features2d/src/agast_score.cpp", "/build/master_pack-android/opencv/modules/features2d/src/bagofwords.cpp", "/build/master_pack-android/opencv/modules/features2d/src/draw.cpp", "/build/master_pack-android/opencv/modules/features2d/src/keypoint.cpp", "/build/master_pack-android/opencv/modules/features2d/src/orb.cpp", "/build/master_pack-android/opencv/modules/features2d/src/fast_score.cpp", "/build/master_pack-android/opencv/modules/features2d/src/evaluation.cpp", "/build/master_pack-android/opencv/modules/features2d/src/akaze.cpp", "/build/master_pack-android/opencv/modules/features2d/src/mser.cpp", "/build/master_pack-android/opencv/modules/features2d/src/blobdetector.cpp", "/build/master_pack-android/opencv/modules/features2d/src/kaze/nldiffusion_functions.cpp", "/build/master_pack-android/opencv/modules/features2d/src/kaze/KAZEFeatures.cpp", "/build/master_pack-android/opencv/modules/features2d/src/kaze/AKAZEFeatures.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/checkchessboard.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/quadsubpix.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/posit.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/solvepnp.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/stereobm.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/ptsetreg.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/levmarq.cpp", "************************************************************************************", "\titr\tnfJ\t\tSUM(r^2)\t\tx\t\tdx\t\tl\t\tlc", "%c%10d %10d %15.4e %16.4e %17.4e %16.4e %17.4e\n", "/build/master_pack-android/opencv/modules/calib3d/src/compat_ptsetreg.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/calibinit.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/fundam.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/stereosgbm.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/triangulate.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/fisheye.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/circlesgrid.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/calibration.cpp", "CV_IS_MAT(matrixM) && CV_IS_MAT(matrixR) && CV_IS_MAT(matrixQ) && matrixM->cols == 3 && matrixM->rows == 3 && CV_ARE_SIZES_EQ(matrixM, matrixR) && CV_ARE_SIZES_EQ(matrixM, matrixQ)", "(CV_MAT_DEPTH(rvec->type) == CV_64F || CV_MAT_DEPTH(rvec->type) == CV_32F) && (rvec->rows == 1 || rvec->cols == 1) && rvec->rows*rvec->cols*CV_MAT_CN(rvec->type) == 3", "(CV_MAT_DEPTH(tvec->type) == CV_64F || CV_MAT_DEPTH(tvec->type) == CV_32F) && (tvec->rows == 1 || tvec->cols == 1) && tvec->rows*tvec->cols*CV_MAT_CN(tvec->type) == 3", "the output array of translation vectors must be 3-channel 1xn or nx1 array or 1-channel nx3 array, where n is the number of views", "the output array of standard deviations vectors must be 1-channel 1x(n*6 + NINTRINSIC) or (n*6 + NINTRINSIC)x1 array, where n is the number of views, NINTRINSIC = 18", "The number of points in the view #%d is < 4", "the output array of rotation vectors must be 3-channel 1xn or nx1 array or 1-channel nx3 or nx9 array, where n is the number of views", "CV_IS_MAT(_imagePoints1) && CV_IS_MAT(_imagePoints2) && CV_IS_MAT(_objectPoints) && CV_IS_MAT(_npoints) && CV_IS_MAT(matR) && CV_IS_MAT(matT)", "(CV_MAT_DEPTH(_imagePoints1->type) == CV_32F || CV_MAT_DEPTH(_imagePoints1->type) == CV_64F) && ((_imagePoints1->rows == pointsTotal && _imagePoints1->cols*cn == 2) || (_imagePoints1->rows == 1 && _imagePoints1->cols == pointsTotal && cn == 2))", "/build/master_pack-android/opencv/modules/calib3d/src/homography_decomp.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/compat_stereo.cpp", "/build/master_pack-android/opencv/modules/calib3d/src/five-point.cpp", "/build/master_pack-android/opencv/modules/shape/src/hist_cost.cpp", "/build/master_pack-android/opencv/modules/shape/src/sc_dis.cpp", "/build/master_pack-android/opencv/modules/shape/src/aff_trans.cpp", "/build/master_pack-android/opencv/modules/shape/src/emdL1.cpp", "/build/master_pack-android/opencv/modules/shape/src/haus_dis.cpp", "/build/master_pack-android/opencv/modules/shape/src/tps_trans.cpp", "/build/master_pack-android/opencv/modules/superres/src/btv_l1_cuda.cpp", "/build/master_pack-android/opencv/modules/superres/src/optical_flow.cpp", "/build/master_pack-android/opencv/modules/superres/src/input_array_utility.cpp", "/build/master_pack-android/opencv/modules/superres/src/frame_source.cpp", "/build/master_pack-android/opencv/modules/superres/src/btv_l1.cpp", "/build/master_pack-android/opencv/modules/stitching/src/matchers.cpp", "/build/master_pack-android/opencv/modules/stitching/src/warpers.cpp", "/build/master_pack-android/opencv/modules/stitching/include/opencv2/stitching/detail/warpers_inl.hpp", "/build/master_pack-android/opencv/modules/stitching/src/blenders.cpp", "/build/master_pack-android/opencv/modules/stitching/src/autocalib.cpp", "/build/master_pack-android/opencv/modules/stitching/src/seam_finders.cpp", "/build/master_pack-android/opencv/modules/stitching/src/../../imgproc/src/gcgraph.hpp", "/build/master_pack-android/opencv/modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp", "/build/master_pack-android/opencv/modules/stitching/src/stitcher.cpp", "/build/master_pack-android/opencv/modules/stitching/src/motion_estimators.cpp", "/build/master_pack-android/opencv/modules/stitching/src/exposure_compensate.cpp", "/build/master_pack-android/opencv/modules/stitching/src/util.cpp", "/build/master_pack-android/opencv/modules/stitching/src/timelapsers.cpp", "/build/master_pack-android/opencv/modules/videostab/src/global_motion.cpp", "/build/master_pack-android/opencv/modules/videostab/include/opencv2/videostab/motion_core.hpp", "first pass: estimating motions", "\nmotion estimation time: %.3f sec\n", "motion stabilization time: %.3f sec\n", "/build/master_pack-android/opencv/modules/videostab/src/wobble_suppression.cpp", "/build/master_pack-android/opencv/modules/videostab/src/deblurring.cpp", "/build/master_pack-android/opencv/modules/videostab/src/motion_stabilizing.cpp", "/build/master_pack-android/opencv/modules/videostab/src/inpainting.cpp", "/build/master_pack-android/opencv/modules/videostab/include/opencv2/videostab/fast_marching_inl.hpp", "/build/master_pack-android/opencv/modules/videostab/src/frame_source.cpp", "/build/master_pack-android/opencv/modules/videostab/src/outlier_rejection.cpp", "TBB failed to initialize task scheduler TLS\n", "failed to destroy task scheduler TLS: %s", "rml::tbb_factory::make_server failed with status %x, falling back on private rml", "Attempt to terminate nested scheduler in blocking mode", "3rdparty/tbb/tbb44_20160128oss/src/tbb/governor.cpp", "task_scheduler_init already initialized", "deferred initialization ignores stack size setting", "number_of_threads for task_scheduler_init must be automatic or positive", "number_of_threads==automatic || number_of_threads > 0", "task_scheduler_init::terminate without corresponding task_scheduler_init::initialize()", "The number of workers is currently limited to %u. The request for %u workers is ignored. Further requests for more workers will be silently ignored until the limit changes.\n", "Thread stack size has been already set to %u. The request for larger stack (%u) cannot be satisfied.\n", "RML might limit the number of workers to %u while %u is requested.\n", "/sys/devices/system/cpu/present", "Exact exception propagation is requested by application but the linked library is built without support for it", "bad allocation in previous or concurrent attempt", "attempted recursive lock on critical section or non-recursive mutex", "User-initiated abort has terminated this operation", "The same task_handle object cannot be executed more than once", "wait() was not called on the structured_task_group", "Assertion %s failed on line %d of file %s\n", "Index out of requested size range", "Index out of allocated segment slots", "Wait on condition variable failed", "[backward compatibility] Invalid number of buckets", "swap() is invalid on non-equal allocators", "reservation size exceeds permitted max size", "Nesting of blocking termination is impossible", "my_param < global_control::parameter_max", "3rdparty/tbb/tbb44_20160128oss/src/tbb/tbb_main.cpp", "param < global_control::parameter_max", "__TBB_call_with_my_server_info", "ALIGN_TYPE is wrong, please fix", "MAX_ALLOC_CHUNK is wrong, please fix", "Invalid component ID %d in SOS", "DCT scaled block size %dx%d not supported", "Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c", "Bogus Huffman table definition", "Wrong JPEG library version: library is %d, caller expects %d", "Sampling factors too large for interleaved scan", "Unsupported JPEG data precision %d", "Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d", "Invalid progressive parameters at scan script entry %d", "Invalid scan script at entry %d", "Improper call to JPEG library in state %d", "JPEG parameter struct mismatch: library thinks size is %u, caller expects %u", "Buffer passed to JPEG library is too small", "CCIR601 sampling not implemented yet", "Too many color components: %d, max %d", "Unsupported color conversion request", "Empty JPEG image (DNL not supported)", "Didn't expect more than one scan", "Output file write error --- out of disk space?", "Fractional sampling not implemented yet", "Huffman code size table overflow", "Missing Huffman code table entry", "Maximum supported image dimension is %u pixels", "Cannot transcode due to multiple use of quantization table %d", "Scan script does not transmit all data", "Invalid color quantization mode change", "Requested feature was omitted at compile time", "Arithmetic table 0x%02x was not defined", "Huffman table 0x%02x was not defined", "JPEG datastream contains no image", "Quantization table 0x%02x was not defined", "Not a JPEG file: starts with 0x%02x 0x%02x", "Cannot quantize more than %d color components", "Cannot quantize to fewer than %d colors", "Cannot quantize to more than %d colors", "Invalid JPEG file structure: %s before SOF", "Invalid JPEG file structure: two SOF markers", "Invalid JPEG file structure: missing SOS marker", "Unsupported JPEG process: SOF type 0x%02x", "Invalid JPEG file structure: two SOI markers", "Failed to create temporary file %s", "Write failed on temporary file --- out of disk space?", "Application transferred too few scanlines", "Unsupported marker type 0x%02x", "Virtual array controller messed up", "Image too wide for this implementation", "Copyright (C) 2013, Thomas G. Lane, Guido Vollbeding", "Caution: quantization tables are too coarse for baseline JPEG", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "Unknown APP0 marker (not JFIF), length %u", "Unknown APP14 marker (not Adobe), length %u", "Define Arithmetic Table 0x%02x: 0x%02x", "Define Quantization Table %d  precision %d", "        %3d %3d %3d %3d %3d %3d %3d %3d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "Warning: thumbnail image size does not match data length %u", "JFIF extension marker: type 0x%02x, length %u", "    with %d x %d thumbnail image", "Miscellaneous marker 0x%02x, length %u", "        %4u %4u %4u %4u %4u %4u %4u %4u", "Quantizing to %d = %d*%d*%d colors", "Selected %d colors for quantization", "At marker 0x%02x, recovery action %d", "Smoothing not supported with nonstandard sampling ratios", "Start Of Frame 0x%02x: width=%u, height=%u, components=%d", "    Component %d: %dhx%dv q=%d", "JFIF extension marker: JPEG-compressed thumbnail image, length %u", "JFIF extension marker: palette thumbnail image, length %u", "JFIF extension marker: RGB thumbnail image, length %u", "Unrecognized component IDs %d %d %d, assuming YCbCr", "Unknown Adobe color transform code %d", "Corrupt JPEG data: bad arithmetic code", "Inconsistent progression sequence for component %d coefficient %d", "Corrupt JPEG data: %u extraneous bytes before marker 0x%02x", "Corrupt JPEG data: premature end of data segment", "Corrupt JPEG data: bad Huffman code", "Warning: unknown JFIF revision number %d.%02d", "Corrupt JPEG data: found marker 0x%02x instead of RST%d", "Invalid SOS parameters for sequential JPEG", "Application transferred too many scanlines", "null VP8Io passed to VP8GetHeaders()", "Unexpected lossless format encountered.", "Incorrect keyframe parameters.", "NULL VP8Io parameter in VP8Decode().", "Premature end-of-file encountered.", "no memory during frame initialization.", "unexpected encoding (internal error)", "background color must be supplied to remove alpha/transparency", "gray[8] color-map: too few entries", "gray[16] color-map: too few entries", "gray+alpha color-map: too few entries", "gray-alpha color-map: too few entries", "ga-alpha color-map: too few entries", "rgb[ga] color-map: too few entries", "rgb[gray] color-map: too few entries", "rgb+alpha color-map: too few entries", "rgb-alpha color-map: too few entries", "rgb color-map: too few entries", "palette color-map: too few entries", "bad data option (internal error)", "color map overflow (BAD internal error)", "bad background index (internal error)", "png_read_update_info/png_start_read_image: duplicate call", "png_start_read_image/png_read_update_info: duplicate call", "Invalid attempt to read row data", "internal sequential row size calculation error", "png_read_image: unsupported transformation", "png_image_read: alpha channel lost", "unexpected alpha swap transformation", "png_read_image: invalid transformations", "unexpected 8-bit transformation", "bad color-map processing (internal error)", "Interlace handling should be turned on when using png_read_image", "Read palette index exceeding num_palette", "png_image_read: opaque pointer not NULL", "Image is too high to process with png_read_png()", "png_image_begin_read_from_stdio: invalid argument", "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_file: invalid argument", "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_memory: invalid argument", "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION", "png_image_finish_read[color-map]: no color-map", "png_image_finish_read: image too large", "png_image_finish_read: invalid argument", "png_image_finish_read: row_stride too large", "png_image_finish_read: damaged PNG_IMAGE_VERSION", "insufficient memory to read chunk", "PNG unsigned integer out of range", "PNG file corrupted by ASCII conversion", "unknown chunk exceeds memory limits", "No space in chunk cache for sPLT", "sPLT chunk requires too much memory", "Insufficient memory to process text chunk", "forcing save of an unhandled chunk; please call png_set_keep_unknown_chunks", "internal row size calculation error", "invalid user transform pixel depth", "Row has too many bytes to allocate in memory", "Can't set both read_data_fn and write_data_fn in the same structure", "Potential overflow in png_zalloc()", "Too many bytes for PNG signature", "Application built with libpng-", "Unknown freer parameter in png_data_freer", "\nlibpng version 1.6.24 - August 4, 2016\nCopyright (c) 1998-2002,2004,2006-2016 Glenn Randers-Pehrson\nCopyright (c) 1996-1997 Andreas Dilger\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n", " libpng version 1.6.24 - August 4, 2016\n\n", "RGB color space not permitted on grayscale PNG", "Gray color space not permitted on RGB PNG", "invalid ICC profile color space", "invalid embedded Abstract ICC profile", "unexpected DeviceLink ICC profile class", "unexpected NamedColor ICC profile class", "unrecognized ICC profile class", "ICC profile tag start not a multiple of 4", "ICC profile tag outside profile", "Image width exceeds user limit in IHDR", "Image height exceeds user limit in IHDR", "Invalid color type/bit depth combination in IHDR", "Unknown interlace method in IHDR", "Unknown compression method in IHDR", "MNG features are not allowed in a PNG datastream", "ASCII conversion buffer too small", "internal error handling cHRM coefficients", "internal error handling cHRM->XYZ", "gamma value does not match sRGB", "gamma value does not match libpng estimate", "inconsistent rendering intents", "duplicate sRGB information ignored", "cHRM chunk does not match sRGB", "out-of-date sRGB profile with no signature", "Not recognizing known sRGB profile that has been edited", "internal error checking chromaticities", "png_set_unknown_chunks now expects a valid location", "invalid location in png_set_unknown_chunks", "Invalid palette size, hIST allocation skipped", "Insufficient memory for hIST chunk data", "Invalid format for pCAL parameter", "Insufficient memory for pCAL purpose", "Insufficient memory for pCAL units", "Insufficient memory for pCAL params", "Insufficient memory for pCAL parameter", "Memory allocation failed while processing sCAL", "Invalid iCCP compression method", "Insufficient memory to process iCCP chunk", "Insufficient memory to process iCCP profile", "text compression mode is out of range", "Insufficient memory to store text", "tRNS chunk has out-of-range samples for bit_depth", "invalid unknown chunk location", "png_set_keep_unknown_chunks: invalid keep", "png_set_keep_unknown_chunks: no chunk list", "png_set_keep_unknown_chunks: too many chunks", "invalid compression buffer size", "Compression buffer size cannot be changed because it is in use", "Compression buffer size cannot be reduced below 6", "keyword \"@1\": bad character '0x@2'", "invalid after png_start_read_image or png_read_update_info", "invalid before the PNG header has been read", "Can't discard critical data on CRC error", "Application must supply a known background gamma", "output gamma out of expected range", "conflicting calls to set alpha mode and background", "invalid file gamma in png_set_gamma", "invalid screen gamma in png_set_gamma", "invalid error action to rgb_to_gray", "ignoring out of range rgb_to_gray coefficients", "libpng does not support gamma+background+rgb_to_gray", "Palette is NULL in indexed image", "png_do_rgb_to_gray found nongray pixel", "png_do_encode_alpha: unexpected call", "png_do_quantize returned rowbytes=0", "Libpng jmp_buf still allocated", "Application jmp_buf size changed", "error writing ancillary chunked compressed data", "Invalid bit depth for grayscale image", "Invalid bit depth for RGB image", "Invalid bit depth for paletted image", "Invalid bit depth for grayscale+alpha image", "Invalid bit depth for RGBA image", "Invalid image color type specified", "Invalid compression type specified", "Invalid interlace type specified", "Invalid number of colors in palette", "Ignoring request to write a PLTE chunk in grayscale PNG", "Z_OK on Z_FINISH with output space", "Invalid sRGB rendering intent specified", "ICC profile length invalid (not a multiple of 4)", "Invalid number of transparent colors specified", "Ignoring attempt to write tRNS chunk out-of-range for bit_depth", "Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8", "Can't write tRNS with an alpha channel", "Invalid background palette index", "Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8", "Ignoring attempt to write bKGD chunk out-of-range for bit_depth", "Invalid number of histogram entries specified", "zTXt: invalid compression type", "iTXt: uncompressed text too long", "Unrecognized unit type for oFFs chunk", "Unrecognized equation type for pCAL chunk", "Can't write sCAL (buffer too small)", "Unrecognized unit type for pHYs chunk", "Invalid time specified for tIME chunk", "png_image_write_to_memory: PNG too big", "Writing zero-length unknown chunk", "profile matches sRGB but writing iCCP instead", "Valid palette required for paletted images", "Wrote palette index exceeding num_palette", "png_write_info was never called before png_write_row", "internal write transform logic error", "png_write_image: internal call error", "png_image_write_: out of memory", "Unknown row filter for method 0", "png_set_filter: UP/AVG/PAETH cannot be added after start", "no color-map for color-mapped image", "png_write_image: unsupported transformation", "Only compression windows <= 32k supported by PNG", "Only compression windows >= 256 supported by PNG", "Only compression method 8 is supported by PNG", "no rows for png_write_image to write", "PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported", "png_image_write_to_memory: invalid argument", "png_image_write_to_memory: incorrect PNG_IMAGE_VERSION", "png_image_write_to_stdio: invalid argument", "png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION", "png_image_write_to_file: invalid argument", "png_image_write_to_file: incorrect PNG_IMAGE_VERSION", "%s: Invalid %stag \"%s\" (not supported by codec)", "Error fetching directory count", "Sanity check on directory count failed", "%s: Error fetching directory count", "%s: Error fetching directory link", "Nonstandard tile width %d, convert file", "Nonstandard tile length %d, convert file", "%s: Sorry, cannot nest SubIFDs", "%s: Invalid InkNames value; expecting %d names, found %d", "%s: Failed to allocate space for list of custom values", "%s: Bad field type %d for \"%s\"", "%s: Null count for \"%s\" (type %d, writecount %d, passcount %d)", "%s: Cannot modify tag \"%s\" while writing", "Can not unlink directory in read-only file", "field[%2d] %5lu, %2d, %2d, %d, %2d, %5s, %5s, %s\n", "Failed to allocate fields array", "Internal error, unknown tag 0x%x", "Internal error, unknown tag %s", "%s: Seek error accessing TIFF directory", "%s: Can not read TIFF directory count", "Sanity check on directory count failed, this is probably not a valid IFD offset", "%.100s: Can not read TIFF directory", "Can not read TIFF directory count", "Sanity check on directory count failed, zero tag directories not supported", "Cannot determine size of unknown tag type %d", "IO error during reading of \"%s\"", "Cannot handle different values per sample for \"%s\"", "Sanity check on size of \"%s\" value failed", "Incorrect count for \"%s\"; tag ignored", "Incompatible type for \"%s\"; tag ignored", "IO error during reading of \"%s\"; tag ignored", "Incorrect value for \"%s\"; tag ignored", "Cannot handle different values per sample for \"%s\"; tag ignored", "Sanity check on size of \"%s\" value failed; tag ignored", "Out of memory reading of \"%s\"; tag ignored", "No definition found for tag %d", "ASCII value for tag \"%s\" contains null byte in value; value incorrectly truncated during reading due to implementation limitations", "ASCII value for tag \"%s\" does not end in null byte", "Failed to read directory at offset %llu", "Invalid TIFF directory; tags are not sorted in ascending order", "Unknown field with tag %d (0x%x) encountered", "Registering anonymous field with tag %d (0x%x) failed", "Planarconfig tag value assumed incorrect, assuming data is contig instead of chunky", "TIFF directory is missing required \"%s\" field", "Cannot handle zero number of %s", "Photometric tag is missing, assuming data is YCbCr", "Photometric tag value assumed incorrect, assuming data is YCbCr instead of RGB", "BitsPerSample tag is missing, assuming 8 bits per sample", "SamplesPerPixel tag is missing, assuming correct SamplesPerPixel value is 3", "SamplesPerPixel tag is missing, applying correct SamplesPerPixel value of 3", "TIFF directory is missing required \"StripByteCounts\" field, calculating from imagelength", "Bogus \"StripByteCounts\" field, ignoring and calculating from imagelength", "Wrong \"StripByteCounts\" field, ignoring and calculating from imagelength", "for chopped \"StripByteCounts\" array", "for chopped \"StripOffsets\" array", "Cannot handle zero scanline size", "Failed to read custom directory at offset %llu", "Wrong data type %d for \"%s\"; tag ignored", "incorrect count for field \"%s\" (%llu, expecting %u); tag ignored", "incorrect count for field \"%s\" (%llu, expecting %u); tag trimmed", "No space for YCbCr->RGB conversion state", "No space for photometric conversion table", "No space for B&W mapping table", "No space for Palette mapping table", "Sorry, can not handle images with %d-bit samples", "Sorry, can not handle contiguous data with %s=%d, and %s=%d and Bits/Sample=%d", "Sorry, can not handle RGB image with %s=%d", "Sorry, can not handle separated image with %s=%d", "Sorry, LogL data must have %s=%d", "Sorry, LogLuv data must have %s=%d or %d", "Sorry, can not handle LogLuv images with %s=%d", "Sorry, can not handle image with %s=%d", "No space for CIE L*a*b*->RGB conversion state.", "Failed to initialize CIE L*a*b*->RGB conversion state.", "No \"put\" routine setupl; probably can not handle image format", "Can't use TIFFReadRGBAStrip() with tiled file.", "Row passed to TIFFReadRGBAStrip() must be first in a strip.", "Can't use TIFFReadRGBATile() with stripped file.", "Row/col passed to TIFFReadRGBATile() must be topleft corner of a tile.", "%s: Out of memory (TIFF structure)", "One of the client procedures is NULL pointer.", "Not a TIFF or MDI file, bad magic number %d (0x%x)", "Not a TIFF file, bad version number %d (0x%x)", "Not a TIFF file, bad BigTIFF offsetsize %d (0x%x)", "Not a TIFF file, bad BigTIFF unused %d (0x%x)", "Can not read tiles from a stripped image", "Can not read scanlines from a tiled image", "Seek error at scanline %lu, strip %lu", "Read error at scanline %lu; got %llu bytes, expected %llu", "Read error at scanline %lu, strip %lu; got %llu bytes, expected %llu", "Seek error at row %lu, col %lu, tile %lu", "Read error at row %lu, col %lu; got %llu bytes, expected %llu", "Read error at row %lu, col %lu, tile %lu; got %llu bytes, expected %llu", "%lu: Strip out of range, max %lu", "Compression scheme does not support access to raw uncompressed data", "%llu: Invalid strip byte count, strip %lu", "%lu: Tile out of range, max %lu", "No space for data buffer at scanline %lu", "Invalid strip byte count %llu, strip %lu", "Read error on strip %lu; got %llu bytes, expected %llu", "Data buffer too small to hold strip %lu", "%llu: Invalid tile byte count, tile %lu", "Data buffer too small to hold tile %lu", "%lu: Row out of range, max %lu", "%lu: Sample out of range, max %lu", "Invalid td_samplesperpixel value", "Invalid YCbCr subsampling (%dx%d)", "%lu: Col out of range, max %lu", "%lu: Depth out of range, max %lu", "Maximum TIFF file size exceeded", "No space to expand strip arrays", "Can not write tiles to a stripped image", "Can not write scanlines to a tiled image", "Must set \"ImageWidth\" before writing data", "Must set \"PlanarConfiguration\" before writing data", "Can not grow image by strips when using separate planes", "Tile %lu out of range, max %lu", "Can not change \"ImageLength\" when using separate planes", "Failed to allocate memory for %s (%ld elements of %ld bytes each)", "No space for \"TransferFunction\" tag", "Compression algorithm does not support random access", "%s %s encoding is not implemented", "Compression scheme %u %s encoding is not implemented", "%s %s decoding is not implemented", "Compression scheme %u %s decoding is not implemented", "No space to register compression scheme %s", "Cannot remove compression scheme %s; not registered", "Attempt to write value larger than 0xFFFFFFFF in Classic TIFF file.", "Error post-encoding before directory write", "Error flushing data before directory write", "Error writing SubIFD directory link", "Sanity check on tag count failed, likely corrupt TIFF", "Memory mapped files not currently supported for this operation.", "Attempt to reset field on directory not already on disk.", "%s: Can not read TIFF directory entry.", "Value exceeds 32bit range of output type.", "%s: Can not write TIFF directory entry.", "%s compression support is not configured", "Not enough data for scanline %lu, expected a request for at most %lld bytes, got a request for %lld bytes", "Bad code word at line %u of %s %u (x %u)", "Premature EOF at line %u of %s %u (x %u)", "%s at line %u of %s %u (got %u, expected %u)", "Fractional scanlines cannot be read", "Uncompressed data (not supported) at line %u of %s %u (x %u)", "  Consecutive Bad Fax Lines: %lu\n", "Merging common CCITT Fax codec-specific tags failed", "Fractional scanlines cannot be written", "Bits/sample must be 1 for Group 3/4 encoding/decoding", "Row pixels integer overflow (rowpixels %u)", "No space for Group 3/4 reference line", "Merging CCITT Fax 3 codec-specific tags failed", "Merging CCITT Fax 4 codec-specific tags failed", "Not enough data at row %lu (short %llu pixels)", "Unknown data format %d for LogLuv compression", "Unknown encoding %d for LogLuv compression", "SGILog compression cannot handle non-contiguous data", "No support for converting user data format to LogLuv", "No space for SGILog translation buffer", "No support for converting user data format to LogL", "Inappropriate photometric interpretation %d for SGILog compression; %s", "SGILog compression supported only for %s, or raw data", "Merging SGILog codec-specific tags failed", "%s: No space for LogLuv state block", "LZWDecode: Strip %d not terminated with EOI code", "LZWDecode: Corrupted LZW table at scanline %d", "Corrupted LZW table at scanline %d", "Wrong length of decoded string: data probably corrupted at scanline %d", "Bogus encoding, loop in the code table; scanline %d", "Not enough data at scanline %d (short %llu bytes)", "Old-style LZW codes, convert file", "Not enough data for scanline %ld", "Discarding %lu bytes to avoid buffer overrun", "Not enough data for scanline %lu", "%d bit input not supported in PixarLog", "ZLib cannot deal with buffers this size", "Decoding error at scanline %lu, %s", "Not enough data at scanline %lu (short %llu bytes)", "stride %lu is not a multiple of sample count, %lu, data truncated.", "PixarLog compression can't handle %d bit linear encodings", "PixarLog compression can't handle bits depth/data format combination (depth: %d)", "Merging PixarLog codec-specific tags failed", "No space for PixarLog state block", "Horizontal differencing \"Predictor\" not supported with %d-bit samples", "Floating point \"Predictor\" not supported with %d data format", "\"Predictor\" value %d not supported", "Out of memory allocating %zd byte temp buffer.", "Merging Predictor codec-specific tags failed", "Wrong bitspersample value (%d), Thunder decoder only supports 4bits per sample.", "%s data at scanline %lu (%llu != %llu)", "Merging Deflate codec-specific tags failed", "numinchans=%d, numoutchans=%d, clutlen=%d\n", "numintabents=%d, numouttabents=%d\n", "refcnt = %d; type = 0x%08x %s\n", "attrno=%d; attrname=\"%s\"(0x%08x); attrtype=\"%s\"(0x%08x)\n", "JPEG-2000 JP2 File Format Syntax (ISO/IEC 15444-1)", "JPEG-2000 Code Stream Syntax (ISO/IEC 15444-1)", "error: expecting signature box\n", "error: cannot decode code stream\n", "warning: number of components mismatch\n", "warning: component data type mismatch\n", "error: unsupported compression type\n", "warning: superfluous BPCC box\n", "warning: missing PCLR box or superfluous CMAP box\n", "warning: missing CMAP box or superfluous PCLR box\n", "error: invalid component number in CMAP box\n", "error: invalid CMAP LUT index\n", "invalid component number in RGN marker segment\n", "warning: ignoring unknown marker segment\n", "warning: possibly corrupt code stream\n", "invalid component number in COC marker segment\n", "invalid component number in QCC marker segment\n", "warning: ignoring invalid option %s\n", "unexpected marker segment type\n", "xs =%d, ys = %d, xe = %d, ye = %d, w = %d, h = %d\n", "warning: ignoring trailing garbage (%lu bytes)\n", "warning: not enough tile data (%lu bytes)\n", "invalid tile number in SOT marker segment\n", "type=%c%s%c (0x%08x); length=%d\n", "warning: cannot handle large 64-bit box length\n", "compno = %d; qntsty = %d; numguard = %d; numstepsizes = %d\n", "expn[%d] = 0x%04x; mant[%d] = 0x%04x;\n", "qntsty = %d; numguard = %d; numstepsizes = %d\n", "compno = %d; roisty = %d; roishift = %d\n", "compno = %d; csty = 0x%02x; numdlvls = %d;\n", "cblkwidthval = %d; cblkheightval = %d; cblksty = 0x%02x; qmfbid = %d;\n", "width = %d; height = %d; xoff = %d; yoff = %d;\n", "tilewidth = %d; tileheight = %d; tilexoff = %d; tileyoff = %d;\n", "prec[%d] = %d; sgnd[%d] = %d; hsamp[%d] = %d; vsamp[%d] = %d\n", "tileno = %d; len = %d; partno = %d; numparts = %d\n", "numdlvls = %d; qmfbid = %d; mctrans = %d\n", "cblkwidthval = %d; cblkheightval = %d; cblksty = 0x%02x;\n", "prcwidth[%d] = %d, prcheight[%d] = %d\n", "warning: trailing garbage in marker segment (%ld bytes)\n", "warning: stopping decode prematurely as requested\n", "packet offset=%08ld prg=%d cmptno=%02d rlvlno=%02d prcno=%03d lyrno=%02d\n", "cannot get (EPH) marker segment\n", "warning: bad segmentation symbol\n", "coding pass failed passtype=%d segtype=%d\n", "warning: bad termination pattern detected\n", "start=%d end=%d type=%d term=%d lyrno=%d firstchar=%02x size=%ld pos=%ld\n", "lyrno=%02d cmptno=%02d rlvlno=%02d bandno=%02d prcno=%02d cblkno=%03d passno=%03d\n", "min rdslope = %f max rdslope = %f\n", "maxlen=%08ld actuallen=%08ld thresh=%f\n", "warning: empty layer generated\n", "        prc %5d %5d %5d %5d (%5d %5d)\n", "         cblk %5d %5d %5d %5d\n", "ignoring invalid progression order %s\n", "ignoring bad rate specifier %s\n", "warning: invalid intermediate layer rates specifier ignored (%s)\n", "warning: overriding imgareatlx value\n", "warning: overriding imgareatly value\n", "warning: color space apparently not RGB\n", "invalid tile grid offset (%lu, %lu)\n", "cannot use real mode for lossless coding\n", "must be at least one resolution level\n", "warning: specified rate is unreasonably large (%lu > %lu)\n", "intermediate layer rates must increase monotonically\n", "warning: intermediate layer rates must be less than overall rate\n", "error: too few guard bits (need at least %d)\n", "Cannot determine current file position (%T).", "Cannot update preview image pixels. File \"", "\" does not contain a preview image.", "Cannot update preview image pixels for file \"", ". The scan line has not yet been stored in file \"", "No frame buffer specified as pixel data source.", "Tried to write more scan lines than specified by the data window.", "Failed to write pixel data to image file \"", "Cannot copy pixels from image file \"", "\". The input file is tiled, but the output file is not. Try using TiledOutputFile::copyPixels instead.", "\". The files have different data windows.", "Quick pixel copy from image file \"", "\" failed. The files have different line orders.", "\" failed. The files use different compression methods.", "\" failed.  The files have different channel lists.", "\" already contains pixel data.", "\" is not compatible with the frame buffer's pixel type.", "X and/or y subsampling factors of \"", "\" are not compatible with the frame buffer's subsampling factors.", "Cannot register image file attribute type \"", "\". The type has already been registered.", "Cannot create image file attribute of unknown type \"", "Invalid display window in image header.", "Invalid data window in image header.", "The width of the data window exceeds the maximum width of ", "Invalid pixel aspect ratio in image header.", "Invalid screen window width in image header.", "Tiled image has no tile description attribute.", "Invalid tile size in image header.", "The width of the tiles exceeds the maximum width of ", "Invalid level mode in image header.", "Invalid level rounding mode in image header.", "Invalid line order in image header.", "Unknown compression type in image header.", "The x subsampling factor for the \"", "The y subsampling factor for the \"", "The minimum x coordinate of the image's data window is not a multiple of the x subsampling factor of the \"", "The minimum y coordinate of the image's data window is not a multiple of the y subsampling factor of the \"", "Number of pixels per row in the image's data window is not a multiple of the x subsampling factor of the \"", "Number of pixels per column in the image's data window is not a multiple of the y subsampling factor of the \"", " image files.  Current file format version is ", "The file format version number's flag field contains unrecognized flags.", "Unexpected type for image attribute \"", "Image attribute name cannot be an empty string.", "Cannot assign a value of type \"", "Integer multiplication overflow.", "Tried to read scan line outside the image file's data window.", "Tried to read a raw scanline from a tiled image.", "Error reading pixel data from image file \"", "Tried to read a raw tile from a scanline-based image.", "Error reading tile data from image file \"", "Cannot get a TiledInputFile pointer from an InputFile that is not tiled.", "Image channel name cannot be an empty string.", "Unexpected data block y coordinate.", "No frame buffer specified as pixel data destination.", "Attempt to perform a memory-mapped read on a file that is not memory mapped.", "Cannot find frame buffer slice \"", "Frame buffer slice name cannot be an empty string.", "Data compression (zlib) failed.", "Data decompression (zlib) failed.", "Cannot copy the value of an image file attribute of type \"", "Error decompressing data (input data are shorter than expected).", "Error decompressing data (input data are longer than expected).", "Error in header for PIZ-compressed data (invalid bitmap size).", "Cannot initialize semaphore (%T).", "Post operation on semaphore failed (%T).", "Cannot read semaphore value (%T).", "Attempt to set the number of threads in a thread pool to a negative value.", "Error in Huffman-encoded data (decoded data are shorter than expected).", "Error in Huffman-encoded data (unexpected end of code table data).", "Error in Huffman-encoded data (code table is longer than expected).", "Error in Huffman-encoded data (invalid code table entry).", "Error in Huffman-encoded data (decoded data are longer than expected).", "Error in Huffman-encoded data (invalid code).", "Error in Huffman-encoded data (invalid code table size).", "Error in header for Huffman-encoded data (invalid number of bits).", "Invalid key code film manufacturer code (must be between 0 and 99).", "Invalid key code film type (must be between 0 and 99).", "Invalid key code prefix (must be between 0 and 999999).", "Invalid key code count (must be between 0 and 9999).", "Invalid key code perforation offset (must be between 0 and 119).", "Invalid key code number of perforations per frame (must be between 1 and 15).", "Invalid key code number of perforations per count (must be between 20 and 120).", "Error calling numLevels() on image file \"", "\" (numLevels() is not defined for files with RIPMAP level mode).", "Error calling levelWidth() on image file \"", "Error calling levelHeight() on image file \"", "Error calling numXTiles() on image file \"", "\" (Argument is not in valid range).", "Error calling numYTiles() on image file \"", "Error calling dataWindowForLevel() on image file \"", "Error calling dataWindowForTile() on image file \"", "Tried to read a tile outside the image file's data window.", "Unexpected tile x level number coordinate.", "Unexpected tile y level number coordinate.", "Expected a tiled file but the file is not tiled.", "Cannot create new thread (%T).", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "deleted virtual method called\n", "-+xX0123456789abcdef0123456789ABCDEF", "basic_filebuf::underflow codecvt::max_length() is not valid", "basic_filebuf::underflow incomplete character in file", "basic_filebuf::underflow invalid byte sequence in file", "basic_filebuf::underflow error reading the file", "basic_filebuf::xsgetn error reading the file", "basic_filebuf::_M_convert_to_external conversion error", "terminate called after throwing an instance of '", "terminate called without an active exception\n", "locale::facet::_S_create_c_locale name not valid", "std::basic_string<char, std::char_traits<char>, std::allocator<char> >", "std::basic_istream<char, std::char_traits<char> >", "std::basic_ostream<char, std::char_traits<char> >", "std::basic_iostream<char, std::char_traits<char> >", "vector::reserve", "org.opencv.android.Utils", "org/opencv/core/CvException", "java/lang/Exception", "unknown exception", "std::exception", "%s caught %s", "org.opencv.core.Mat", "cv::Exception", "org.opencv.core", "org.opencv.imgproc", "org.opencv.ml", "org.opencv.photo", "org.opencv.video", "org.opencv.imgcodecs", "org.opencv.videoio", "org.opencv.objdetect", "org.opencv.features2d", "org.opencv.calib3d", "vector::_M_fill_insert", "Failed to allocate %lu bytes", "bool", "unsigned", "unsigned long long", "float", "double", "string", "unknown", "true", "can not convert: [%s] to [%s]", "<none>", "undeclared key '%s' requested", "Parameter '", "Missing parameter #%d\n", "Parameter #%d: ", "\nERRORS:\n%s\n", "Usage: %s [params] ", " (value:%s)", "\n\t\t%s\n", "could not open directory: %s", "Exception: %s\n", "num_components", "eigenvalues", "eigenvectors", "%s:%d: error: (%d) %s\n", "OPENCV_TEMP_PATH", "status", "error", "No Error", "Backtrace", "Unspecified error", "Internal error", "Insufficient memory", "Bad argument", "Iterations do not converge", "Autotrace call", "Incorrect size of input array", "Null pointer", "Division by zero occured", "Image step is wrong", "Input COI is not supported", "Bad number of channels", "Bad parameter of type CvPoint", "Bad type of mask argument", "Parsing error", "Assertion failed", "No CUDA support", "Gpu API call", "No OpenGL support", "OpenGL API call", "Unknown %s code %d", "unknown function", "cv::error()", "OPENCV_IPP", "disabled", "sse2", "sse3", "ssse3", "sse41", "sse42", "avx2", "%s:%d %s", "clGetPlatformInfo failed!", "HOST_ALLOC", "True", "TRUE", "False", "false", "FALSE", "OPENCV_OPENCL_RAISE_ERROR", "DIG(", "Advanced Micro Devices, Inc.", "Intel(R) Corporation", "Intel", "Iris", "NVIDIA Corporation", "OpenCL ", "cl_khr_image2d_from_buffer", "_sat", "noconvert", "convert_%s", "convert_%s%s_rte", "convert_%s_sat", "COEFF", " -D %s=%s", "OPENCV_OPENCL_FORCE", "OPENCV_OPENCL_DEVICE", "dgpu", "igpu", "accelerator", "    Platform: ", "    Device types: ", "    Device name: ", "uchar", "short", "uchar3", "int2", "int4", "char", "char3", "ushort", "ushort3", "int8", "short3", "int3", "int16", "ulong", "ulong2", "ulong3", "ulong4", "ulong8", "ulong16", "uchar2", "uchar4", "uchar8", "uchar16", "char2", "char4", "char8", "char16", "ushort2", "ushort4", "ushort8", "ushort16", "short2", "short4", "short8", "short16", "float2", "float3", "float4", "float8", "float16", "double2", "double3", "double4", "double8", "double16", "GRAY", "BGRA", "%d-%d", "name", "vectors", "values", "mean", "\n(:, :, %d) = \n", "(:, :, %d) = \n", "%%.%dg", "], dtype='%s')", "uint8", "uint16", "int32", "float32", "float64", "uint64", "%d%c", "-.Inf", ".Inf", "%.16e", "<!-- %s -->", "...\n", "---\n", "type_id", "\n<!-- next stream -->\n", "%s(%d): %s", "Abort at parse time", "Tabs are prohibited in YAML!", "Invalid character", "Incorrect indentation", "Unexpected end of line", "Comments are not allowed here", "Duplicated key", "Key may not start with '-'", "Missing ':'", "An empty key", "width", "height", "origin", "layout", "interleaved", "data", "sizes", "rows", "cols", "flags", "vertex_dt", "edge_dt", "vertex_count", "edge_count", "oriented", "header_dt", "header_user_data", "%df%s", "vertices", "edges", "count", "curve", "closed", "hole", "untyped", "rect", "color", "sequences", "level", "\"$base64$", "binary", "x%02x", "!!%s", "!!%s %c", "#x%02x", "</opencv_storage>\n", "vector::_M_insert_aux", "Extra closing '%c'", "Incorrect element name %s", "%.8e", "opencv-nd-matrix", "opencv-matrix", "top-left", "bottom-left", "planar", "opencv-image", "opencv-sparse-matrix", "opencv-graph", "2if%s", "opencv-sequence", "recursive", "opencv-sequence-tree", "Empty tags are not supported", "Unrecognized Base64 header", "Invalid Base64 data.", "Mismatched closing tag", "Closing \" is expected", "apos", "quot", "Too long string literal", "Invalid `dt` in Base64 header", "Preliminary end of the stream", "Tag should start with '<'", "Unknown tag type", "Empty type name", "The wrong closing bracket", "Unexpected End-Of-File", "$base64$", "Invalid escape character", "null", "Unrecognized value", "Key must end with '\"'", "Key is empty", "Unexpected character", "NULL or empty filename", "NULL or empty buffer", "basic_string::substr", "base64", "UTF-16", "utf-16", "Utf-16", "<?xml version=\"1.0\"?>\n", "<opencv_storage>\n", " <!-- resumed -->", "%YAML:1.0\n---\n", "...\n---\n", "%YAML", "<?xml", "opencv_storage", "%YAML:1.", "%YAML 1.", "Invalid or unsupported syntax", "[empty_any]", "Failed to allocate memory.\n", "Cannot read from file", "' in the parameters given", "Missing parameter '", "Unknown index type", "FLANN_INDEX", "type=%d\n", "Building kmeans tree...\n", "Building kdtree tree...\n", "matches.cols=%d, nn=%d\n", "Got as close as I can\n", "Start linear estimation\n", "Computing ground truth\n", "Estimating number of checks\n", "Optimum cb_index: %g\n", "Computing ground truth... \n", "Autotuning parameters...\n", "Autotuned parameters:\n", "Search parameters:\n", "avg iters = %g\n", "MWRMNV RMVV PSTS", "MXVNTMRMPNOPOSPURVTVVU", "MWOMOV OMRMTNUPUSTURVOV", "MWOMOV OMUM OQSQ OVUV", "MVOMOV OMUM OQSQ", "MXVNTMRMPNOPOSPURVTVVUVR SRVR", "MWOMOV UMUV OQUQ", "PTRMRV", "NUSMSTRVPVOTOS", "MWOMOV UMOS QQUV", "MVOMOV OVUV", "LXNMNV NMRV VMRV VMVV", "MWOMOV OMUV UMUV", "MXRMPNOPOSPURVSVUUVSVPUNSMRM", "MWOMOV OMSMUNUQSROR", "MWOMOV OMSMUNUQSROR RRUV", "MWUNSMQMONOOPPTRUSUUSVQVOU", "MWRMRV NMVM", "MXOMOSPURVSVUUVSVM", "MWNMRV VMRV", "LXNMPV RMPV RMTV VMTV", "MWOMUV UMOV", "MWNMRQRV VMRQ", "MWUMOV OMUM OVUV", "MVOMOV OMUM", "MWRMNV RMVV NVVV", "MWRMNV RMVV", "MWOMUM PQTR TQPR OVUV", "MWOMOV UMUV OMUM", "MWOMRQOV OMUM OVUV", "MWNONNOMPMQNRPRV VOVNUMTMSNRP", "LXRMRV PONPNSPTTTVSVPTOPO", "LXRMRV NOOPOSQTSTUSUPVO", "MXOVQVOROPPNRMSMUNVPVRTVVV", "MWSMMV SMUV OSTS", "LXVPUNTMRMPNOONQNSOUPVRVTUUT", "MXQMNV QMUMVOVQUTTURVNV", "MVQMNV QMVM PQSQ NVSV", "MVQMNV QMVM PQSQ", "MXQMNV WMTV PQUQ", "PUTMQV", "OVUMSSRUQVPVOUOT", "MVQMNV VMOS RQTV", "NVRMOV OVTV", "LYPMMV PMQV XMQV XMUV", "MXQMNV QMTV WMTV", "MWQMNV QMUMVNVPUQSRPR", "MWVNTMRMPNPPQQTRUSUUSVPVNU", "MVSMPV PMVM", "LXPMNSNUOVRVTUUSWM", "MWOMQV WMQV", "KXNMNV SMNV SMSV XMSV", "NWQMTV WMNV", "NWQMSQQV WMSQ", "MWQMWMNVTV", "LXNMRV VMRV NMVM", "MWNLVX", "LXRONU ROVU", "MWNVVV", "PVRMUQ", "MWMMOKQKTMVMWK", "NWQPTPUQUV URQSPTPUQVSVUU", "MWOMOV OSPURVTUUSTQRPPQOS", "MWUQSPRPPQOSPURVSVUU", "MWUMUV USTQRPPQOSPURVTUUS", "MWOSUSTQRPPQOSPURVTV", "NVUNTMSMRNRV PPTP", "MWOMOV OSPQRPTQUSUV", "PTRLQMRNSMRL RPRV", "PUSLRMSNTMSL SPSXRYQYPX", "NWPMPV UPPT RSUV", "MWOPOV OSPQRPTQUSUV", "MWRPPQOSPURVTUUSTQRP", "MWOPOY OSPURVTUUSTQRPPQOS", "MWUPUY USTQRPPQOSPURVTUUS", "NVPPPV PSQQSPTP", "NWUQTPQPPQPRQSTSUTUUTVQVPU", "NVRMRUSVTVUU PPTP", "MWUPUV OPOSPURVTUUS", "NVOPRV UPRV", "LXNPPV RPPV RPTV VPTV", "MWOPUV UPOV", "MWOPRV UPRVQXPYOY", "MWOPUPOVUV", "MXVPUSTURVPUOSPQRPTQUUVV", "MXNQOPQPRQRSQW VPURSTQWPY", "NWUQSPQPPQPRQS SSQSPTPUQVSVUU", "OVRPQSQURVSVTU", "MWQPOV UPTPRQPS PSQUSVTV", "MWOMPMQNRPUV RPOV", "MWNPOPOV UPTSRUOV", "MXOQQPVP QPQRPV TPTRUV", "MWOSPURVTUUSTQRPPQOSNY", "MXVPRPPQOSPURVTUUSTQRP", "MXOQQPVP SPRV", "KXMQNPOPPQPUQVSVTUUSVP", "MWOPPPQQSXTYUY UPTRPWOY", "KYTMRY MQNPOPPQPUQVTVUUVSWP", "LXOPNRNTOVQVRTRR UPVRVTUVSVRT", "MWQMOSPURVTUUSTQRPPQOS", "MWUQSPRPPQOSPURVTV", "MWOSTSURUQSPRPPQOSPURVTV", "OVVMUMTNSPQVPXOYNY QPUP", "MVQMNV OSPQQPSPTQTRSTSUTVUV", "PUSMSNTNTMSM QPRPSQSRRTRUSVTV", "NVRMOV UPTPRQPS PSQUSVTV", "OTSMQSQURVSV", "MXUSTQRPPQOSPURVTUUS VPSY", "MVOPPPQQQSPV UQTPSPRQQS", "NVTQSPQPPQPRQSRSSTSURVPVOU", "NUSMQSQURVSV PPTP", "MWNPOPPQPROTOUPVRVTUURUP", "NVUPOV PQQPSPTQ PUQVSVTU", "MWUSTQRPPQOSPURVTUUSUPTNRMQM", "MWUQSPRPPQOSPURVSVUU OSSS", "MWTMQY RPPQOSPURVSVUUVSUQSPRP", "MWUQSPQPOQOSPTRUSVSWRXQX", "MWUNORUV", "MWONUROV", "OUTKQKQYTY", "OUPKSKSYPY", "OUTKSLRNROSQQRSSRURVSXTY", "OUPKQLRNROQQSRQSRURVQXPY", "MWRMPNOPOSPURVTUUSUPTNRM", "MWPORMRV", "MWONQMSMUNUPTROVUV", "MWONQMSMUNUPSQ RQSQURUUSVQVOU", "MWSMSV SMNSVS", "MWPMOQQPRPTQUSTURVQVOU PMTM", "MWTMRMPNOPOSPURVTUUSTQRPPQOS", "MWUMQV OMUM", "MWUPTRRSPROPPNRMTNUPUSTURVPV", "PURURVSVSURU", "PUSVRVRUSUSWRY", "PURPRQSQSPRP RURVSVSURU", "PURPRQSQSPRP SVRVRUSUSWRY", "PURMRR SMSR RURVSVSURU", "PTRMRQ", "NVPMPQ TMTQ", "NVQMPNPPQQSQTPTNSMQM", "MWVLNX", "OUTKRNQQQSRVTY", "OUPKRNSQSSRVPY", "PTRKRY", "LXNRVR", "LXRNRV NRVR", "LXNPVP NTVT", "MWOOUU UOOU", "MWRORU OPUT UPOT", "PURQRRSRSQRQ", "PUSMRORQSQSPRP", "PUSNRNRMSMSORQ", "LXSOVRSU NRVR", "MXQLQY TLTY OQVQ OTVT", "H\\NRMQLRMSNR VRWQXRWSVR", "I[KRYR", "H\\RUJPRTZPRU", "CaGO]OXI L[GU]U", "D`F^^^^FFFF^", "H\\IR[R", "H\\IR[R IQ[Q", "E_IM[M IR[R IW[W K[YI", "H\\LBL[ RBR[ XBX[", "I[RFJ[ RFZ[ MTWT", "H[LFL[ LFYF LPTP L[Y[", "HZLFL[ LFYF LPTP", "G]KFK[ YFY[ KPYP", "NVRFR[", "JZVFVVUYTZR[P[NZMYLVLT", "G\\KFK[ YFKT POY[", "HYLFL[ L[X[", "F^JFJ[ JFR[ ZFR[ ZFZ[", "G]KFK[ KFY[ YFY[", "G\\KFK[ KFTFWGXHYJYMXOWPTQKQ", "JZRFR[ KFYF", "G]KFKULXNZQ[S[VZXXYUYF", "I[JFR[ ZFR[", "F^HFM[ RFM[ RFW[ \\FW[", "H\\KFY[ YFK[", "I[JFRPR[ ZFRP", "H\\YFK[ KFYF K[Y[", "HYLFL[ LFXF", "I[RFJ[ RFZ[ J[Z[", "I[RFJ[ RFZ[", "I[KFYF OPUP K[Y[", "G]KFK[ YFY[ KFYF", "I[KFRPK[ KFYF K[Y[", "H\\KFY[ K[YF", "I[JFR[ ZFR[ JFZF", "G]IL[b", "E_RJIZ RJ[Z", "I[J[Z[", "I[J[Z[ZZJZJ[", "MYWFUFSGRJR[ OMVM", "I\\MFM[ MQPNRMUMWNXQX[", "NVQFRGSFREQF RMR[", "MWRFSGTFSERF SMS^RaPbNb", "IZMFM[ WMMW QSX[", "I\\MMM[ MQPNRMUMWNXQX[", "KXOMO[ OSPPRNTMWM", "MYRFRWSZU[W[ OMVM", "I\\MMMWNZP[S[UZXW XMX[", "JZLMR[ XMR[", "G]JMN[ RMN[ RMV[ ZMV[", "J[MMX[ XMM[", "JZLMR[ XMR[P_NaLbKb", "J[XMM[ MMXM M[X[", "LWRMPTOXOZP[R[TYUW", "JZKFMFOGPHX[ RML[", "I[LMOMNSMXL[ YMXPWRUURXOZL[", "G]PML[ UMVSWXX[ IPKNNM[M", "H\\SMP[ JPLNOMZM", "I[KMMMOOU`WbYb ZMYOWRM]K`Jb", "MXTTTSSRQROSNTMVMXNZP[S[VYXV", "F^ZIJRZ[", "F^JIZRJ[", "KYOBOb OBVB ObVb", "KYUBUb NBUB NbUb", "H\\NJPISFS[", "H\\UFKTZT UFU[", "H\\YFO[ KFYF", "MWRYQZR[SZRY", "MWSZR[QZRYSZS\\R^Q_", "MWRMQNROSNRM RYQZR[SZRY", "MWRMQNROSNRM SZR[QZRYSZS\\R^Q_", "MWRFRT RYQZR[SZRY", "NVRFRM", "JZNFNM VFVM", "KYQFOGNINKOMQNSNUMVKVIUGSFQF", "G][BIb", "KYVBTDRGPKOPOTPYR]T`Vb", "KYNBPDRGTKUPUTTYR]P`Nb", "NVRBRb", "E_IR[R", "E_RIR[ IR[R", "E_IO[O IU[U", "G]KKYY YKKY", "JZRLRX MOWU WOMU", "MWRQQRRSSRRQ", "MWSFRGQIQKRLSKRJ", "MWRHQGRFSGSIRKQL", "E_UMXP[RXTUW IR[R", "G]OFOb UFUb JQZQ JWZW", "KYOBO[ UBU[", "F^RBR[ I[[[", "F^[BI[[[", "NVPOTU TOPU NRVR", "LRLFLRRRLF LIPQ LLOR LOMQ", "MWRKQMOPMR RKSMUPWR", "MWWRWQVOUNSMQMONNOMQMR", "G]]R]P\\MZJWHTGPGMHJJHMGPGR", "MWMRMSNUOVQWSWUVVUWSWR", "LXLPNRQSSSVRXP", "RURUTTURTPRO", "RVRRUPVNVLUKTK", "NRRROPNNNLOKPK", ">f>RfR", "D`D``D", "RRR>Rf", "D`DD``", "D`DR`R", "F^FY^K", "KYK^YF", "KYKFY^", "F^FK^Y", "KYKRYR", "MWMWWM", "MWMMWW", "D`DOGQKSPTTTYS]Q`O", "PUUDSGQKPPPTQYS]U`", "OTODQGSKTPTTSYQ]O`", "D`DUGSKQPPTPYQ]S`U", "KYRJYNKVRZ", "JZJRNKVYZR", "KYKVKNYVYN", "JZLXJPZTXL", "D`DRJR ORUR ZR`R", "D`DUDO`O`U", "JZRDJR RDZR", "D`DR`R JYZY P`T`", "D`DR`R DRRb `RRb", "LXLLLXXXXLLL", "KYRJKVYVRJ", "LXRHLRR\\XRRH", "JZRIPOJOOSMYRUWYUSZOTORI", "KYRKRY KRYR", "MWMMWW WMMW", "MWRLRX MOWU WOMU", "MWRLRX OOUO MUOWQXSXUWWU", "LXRLRX LQMOWOXQ PWTW", "KYMNWX WNMX OLLOKQ ULXOYQ", "G[MJSV KPSL G\\[\\[RG\\", "LXPLPPLPLTPTPXTXTTXTXPTPTLPL", "KYRJKVYVRJ RZYNKNRZ", "I[IPKR LKNP RGRO XKVP [PYR", "QSRQQRRSSRRQ", "PTQPPQPSQTSTTSTQSPQP", "NVQNOONQNSOUQVSVUUVSVQUOSNQN", "NWRKRX SKSX PKUK PXUX", "KXOKOX PKPX MKRK MXWXWTVX", "KZRKRX SKSX NKMOMKXKXOWK PXUX", "KYMKRX NKRU WKRX KKPK TKYK", "LYVKNX WKOX OKNONKWK NXWXWTVX", "KXOKOX PKPX MKWKWOVK MXRX", "KYRKLX RMWX RKXX MWVW LXXX", "KYRKMX RNVX RKWX KXPX TXYX", "NWTKPX UKQX RKWK NXSX", "KXQKMX RKNX OKTK KXUXVUTX", "KZTKPX UKQX PKNNOKZKYNYK NXSX", "KYOKPX PKQV YKPX MKRK VK[K", "LYXKLX YKMX QKONPKYK LXUXVUTX", "KZMHX\\", "JZRMLW RMXW", "NWRKRX SKSX PKSK PXUX", "LWPKPVRXTXUWUV QKQVRX NOTO", "KYNORX OORV VORX LOQO TOXO", "LXUONX VOOX OONQNOVO NXVXVVUX", "NWROPVPWQXSXUWVU SOQVQWRX", "LXLKNKPLWX NKOLVX RPMX RPNX", "KZSPQX SPRX MQOOXO MQOPXP", "NWRORX SOSX POSO PXUX", "LYPNSKSX RLRX OXVX", "LYSMSX TKTX TKMTXT QXVX", "NVRVQWRXSWRV", "NVSWRXQWRVSWSYQ[", "NVROQPRQSPRO RVQWRXSWRV", "NVROQPRQSPRO SWRXQWRVSWSYQ[", "NVRKQLRSSLRK RLRO RVQWRXSWRV", "OVRKRP SKRP", "LXOKOP PKOP UKUP VKUP", "MWQKPLPNQOSOTNTLSKQK", "MWRJRP OKUO UKOO", "KZXHM\\", "MWPHP\\ QHQ\\ PHUH P\\U\\", "MWSHS\\ THT\\ OHTH O\\T\\", "MWTHPRT\\", "MWPHTRP\\", "OURHR\\", "MWPHP\\ THT\\", "I[LRXR", "I[RLRX LRXR", "JZRMRX MRWR MXWX", "JZRMRX MMWM MRWR", "JZMMWW WMMW", "NVRQQRRSSRRQ", "I[RLQMRNSMRL LRXR RVQWRXSWRV", "I[LPXP LTXT", "I[WLMX LPXP LTXT", "I[LNXN LRXR LVXV", "JZWLMRWX", "JZMLWRMX", "JZWKMOWS MTWT MXWX", "JZMKWOMS MTWT MXWX", "JZMSRPWS MSRQWS", "NVSKPO SKTLPO", "NVQKTO QKPLTO", "LXNKOMQNSNUMVK NKONQOSOUNVK", "NVSLRMQLRKSLSNQP", "NVSKQMQORPSORNQO", "NVQLRMSLRKQLQNSP", "NVQKSMSORPQORNSO", "JZWMQMONNOMQMSNUOVQWWW", "JZMMMSNUOVQWSWUVVUWSWM", "JZMMSMUNVOWQWSVUUVSWMW", "JZMWMQNOONQMSMUNVOWQWW", "JZWMQMONNOMQMSNUOVQWWW MRUR", "I[TOUPXRUTTU UPWRUT LRWR", "MWRMRX OPPORLTOUP PORMTO", "I[POOPLROTPU OPMROT MRXR", "MWRLRW OTPURXTUUT PURWTU", "JZLKRX MKRV XKRX LKXK NLWL", "G[IOLORW KORX [FRX", "KYPKP[ TKT[ MQWQ MUWU", "LYVKVX NKVK QQVQ NXVX", "KYPMTW TMPW MPWT WPMT", "KYOBOb PBPb OBVB ObVb", "KYTBTb UBUb NBUB NbUb", "AXCRGRR` GSRa FSRb X:Rb", "MXRFR[ SFS[ OFVF O[V[", "I[NFN[ OFO[ KFRF K[Z[ZUY[", "I\\RFR[ SFS[ LFKLKFZFZLYF O[V[", "H\\KFR[ LFRX YFR[ IFOF UF[F", "H\\XFK[ YFL[ LFKLKFYF K[Y[YUX[", "I[NFN[ OFO[ KFZFZLYF K[R[", "H\\RFJ[ RFZ[ RIY[ KZYZ J[Z[", "H\\RFK[ RFY[ RIX[ I[O[ U[[[", "LYUFO[ VFP[ RFYF L[S[", "H\\QFK[ RFL[ NFUF H[W[YUV[", "H]UFO[ VFP[ OFLLNF]F\\L\\F L[S[", "H\\NFO[ OFPY \\FO[ LFRF XF^F", "G][FH[ \\FI[ OFLLNF\\F H[V[XUU[", "G]IB[b", "F^RJIZ RJ[Z", "MXRFR[ SFS[ OFSF O[V[", "I[LMR[ MMRY XMR[ JMPM TMZM", "I[WML[ XMM[ MMLQLMXM L[X[XWW[", "LXRMPTOXOZP[S[UYVW SMQTPXPZQ[", "H\\SNP[ SNQ[ JPLNOMZM JPLOONZN", "MXRMR[ SMS[ OMSM O[V[", "H\\NJPISFS[ RGR[ N[W[", "H\\THT[ UFU[ UFJUZU Q[X[", "MWR[QZRYSZS\\R^Q_", "MWRMQNROSNRM R[QZRYSZS\\R^Q_", "MWRFQHRTSHRF RHRN RYQZR[SZRY", "NVRFQM SFQM", "JZNFMM OFMM VFUM WFUM", "JZRFRR MIWO WIMO", "KYUBNRUb", "KYOBVROb", "KYOBOb UBUbbDMIMRY HNR[ b:R[", "I\\XFX[ KFXF PPXP K[X[", "H\\OKUY UKOY KOYU YOKU", "I[KYYK QLULYKXOXS ULXLXO", "I[YKKY LQLUKYOXSX LULXOX", "I[YYKK SLOLKKLOLS OLLLLO", "I[KKYY QXUXYYXUXQ UXXXXU", "NVQQQSSSSQQQ QQSS SQQS", "I[M+MRMy N+NRNy M+X+ MyXy", "I[V+VRVy W+WRWy L+W+ LyWy", "7Z:RARRo @RQo ?RRr Z\"VJRr", "NWRFR[S[ RFSFS[", "IZMFM[ MFNFNZ NZYZY[ M[Y[", "J[RGR[ SGS[R[ LFYFYG LFLGYG", "H\\JFR[ JFKFRX ZFYFRX ZFR[", "H\\KFX[Y[ KFLFY[ YFXFK[ YFL[K[", "MXRFR[S[ RFSFS[ OMVMVN OMONVN", "JZLMR[ LMMMRY XMWMRY XMR[", "I[LMW[X[ LMMMX[ XMWML[ XMM[L[", "H\\NJPISFS[ NJNKPJRHR[S[", "H\\KFYFO[ KFKGXG XFN[O[", "G^[BIbJb [B\\BJb", "F_JQ[Q[R JQJR[R", "F_RIRZSZ RISISZ JQ[Q[R JQJR[R", "F_JM[M[N JMJN[N JU[U[V JUJV[V", "NWSFRGRM SGRM SFTGRM", "F^ZIJRZ[ ZIZJLRZZZ[", "F^JIZRJ[ JIJJXRJZJ[", "H]TJO[ VFP[ VFSIPKNL UIQKNL", "H]XGR[ YFS[ YFJUZU", "MXPYOZP[QZPY", "MXP[OZPYQZQ[P]N_", "MXSMRNSOTNSM PYOZP[QZ", "MXSMRNSOTNSM P[OZPYQZQ[P]N_", "MXVFTHSJSKTLUKTJ", "MXUHTGUFVGVHUJSL", "G]_BEb", "J[TFTR OIYO YIOO", "NWUFSM VFSM", "I[PFNM QFNM YFWM ZFWM", "KZSFQGPIPKQMSNUNWMXKXIWGUFSF", "H]SFLb YFRb LQZQ KWYW", "HZMMM[ NMN[ JMXMXRWM J[Q[", "I\\RMR[ SMS[ MMLRLMYMYRXM O[V[", "H]WJR[T[ ZFXJS[ ZFT[ ZFJUZU", "G^_BEbFb _B`BFb", "MWUFTGRM UGRM UFVGRM", "opencv-hist", "type", "is_uniform", "have_ranges", "bins", "thresh", "Unsupported data type (=%d)", "is_classifier", "default_k", "samples", "responses", "unknown_%d", "training_params", "nclusters", "cov_mat_type", "spherical", "diagonal", "generic", "epsilon", "iterations", "weights", "means", "covs", "mini_batch_size", "alpha", "norm", "train_method", "learnt_thetas", "o_labels", "n_labels", "SVM::getDefaultGrid", "Uknown_%d", "Unknown_%d", "degree", "gamma", "var_count", "class_count", "class_labels", "sv_total", "support_vectors", "uncompressed_sv_total", "uncompressed_support_vectors", "decision_functions", "svm_type", "svmType", "C_SVC", "NU_SVC", "ONE_CLASS", "EPS_SVR", "NU_SVR", "kernel", "LINEAR", "POLY", "SIGMOID", "CHI2", "INTER", "coef0", "term_criteria", "class_weights", "sv_count", "index", "optimize_linear", "var_importance", "nactive_vars", "oob_error", "ntrees", "trees", "nodes", "var_all", "ord_var_count", "cat_var_count", "global_var_idx", "var_idx", "var_type", "cat_ofs", "cat_map", "missing_subst", "not_in", "value", "norm_class_idx", "splits", "quality", "vector::_M_range_insert", "use_surrogates", "max_categories", "regression_accuracy", "max_depth", "min_sample_count", "cross_validation_folds", "use_1se_rule", "priors", "format", "cat_count", "svmsgdType", "ASGD", "marginType", "SOFT_MARGIN", "HARD_MARGIN", "marginRegularization", "initialStepSize", "stepDecreasingPower", "shift", "GAUSSIAN", "IDENTITY", "SIGMOID_SYM", "f_param1", "f_param2", "BACKPROP", "dw_scale", "moment_scale", "RPROP", "dw_plus", "dw_minus", "dw_min", "dw_max", "activation_function", "activation_function_id", "min_val", "max_val", "min_val1", "max_val1", "layer_sizes", "input_scale", "output_scale", "inv_output_scale", "boosting_type", "DiscreteAdaboost", "RealAdaboost", "LogitBoost", "GentleAdaboost", "weight_trimming_rate", "Unknown", "cls_labels", "productsum", "inv_eigen_values", "cov_rotate_mats", "contrast_weight", "saturation_weight", "exposure_weight", "contrast", "sigma_color", "sigma_space", "saturation", "bias", "scale", "intensity", "light_adapt", "color_adapt", "max_bits", "exclude_range", "lambda", "random", "max_iter", "threshold", "history", "nsamples", "nKNN", "dist2Threshold", "detectShadows", "shadowValue", "shadowThreshold", "nmixtures", "backgroundRatio", "varThreshold", "varThresholdGen", "varInit", "varMin", "varMax", "complexityReductionThreshold", "Inner function failed.", "Destination image must be 8u", "WIDTH %d\n", "HEIGHT %d\n", "DEPTH %d\n", "MAXVAL %d\n", "TUPLTYPE %s\n", "P%c\n%d %d\n%d\n", "% 4d", "% 6d", "1.6.24", "RGBE", "GAMMA=%g\n", "EXPOSURE=%g\n", "FORMAT=32-bit_rle_rgbe\n\n", "-Y %d +X %d\n", "#?%s\n", "FORMAT=32-bit_rle_rgbe\n", "GAMMA=%g", "missing FORMAT specifier", "-Y %d +X %d", "missing image size specifier", "EXPOSURE=%g", "wrong scanline width", "bad scanline data", "OPENCV_VIDEOCAPTURE_DEBUG", "VIDEOIO(%s): trying ...\n", "VIDEOIO(%s): result=%p ...\n", ".avi", ".AVI", ".Avi", "%c%c%c%c", "cvNamedWindow", "cvDestroyWindow", "cvDestroyAllWindows", "cvShowImage", "cvResizeWindow", "cvMoveWindow", "cvCreateTrackbar", "cvCreateTrackbar2", "cvSetMouseCallback", "cvGetTrackbarPos", "cvSetTrackbarPos", "cvSetTrackbarMax", "cvSetTrackbarMin", "cvGetWindowHandle", "cvGetWindowName", "cvWaitKey", "OPENCV_LEGACY_WAITKEY", "cvInitSystem", "cvStartWindowThread", "cvAddText", "cvDisplayStatusBar", "cvStartLoop", "cvStopLoop", "cvSaveWindowParameters", "cvCreateButton", "{opencv-object-detector-hog", "winSize", "blockSize", "blockStride", "cellSize", "nbins", "derivAperture", "winSigma", "histogramNormType", "gammaCorrection", "nlevels", "signedGradient", "SVMDetector", "V6.01", "L2HysThreshold", "opencv-object-detector-hog", "OBJECT_DETECTOR", "rects", "tilted", "stageType", "BOOST", "featureType", "HAAR", "featureParams", "maxCatCount", "stages", "weakClassifiers", "leafValues", "internalNodes", "stageThreshold", "features", "size", "stage_threshold", "feature", "left_val", "left_node", "right_val", "right_node", "opencv-haar-classifier", "stage %d", "parent", "next", "tree %d", "node %d", "Invalid stage %d", "%d%n", "%d%d%d%d%d%f%n", "%s%n", "%f%d%d%n", "%f%n", "%d%d%n", "indexParams", "searchParams", "FlannBased", "BruteForce", "BruteForce-SL2", "BruteForce-L1", "BruteForce-Hamming", "BruteForce-HammingLUT", "BruteForce-Hamming(2)", "typename", "extended", "upright", "octaves", "sublevels", "diffusivity", "descriptor", "descriptor_channels", "descriptor_size", "thresholdStep", "minThreshold", "maxThreshold", "minRepeatability", "minDistBetweenBlobs", "filterByColor", "blobColor", "filterByArea", "minArea", "maxArea", "filterByCircularity", "minCircularity", "maxCircularity", "filterByInertia", "minInertiaRatio", "maxInertiaRatio", "filterByConvexity", "minConvexity", "maxConvexity", "minDisparity", "numDisparities", "speckleWindowSize", "speckleRange", "disp12MaxDiff", "preFilterType", "preFilterSize", "preFilterCap", "textureThreshold", "uniquenessRatio", "StereoMatcher.BM", "mode", "StereoMatcher.SGBM", "flag", "dummies", "default", "nRads", "nAngs", "iters", "beWei", "scWei", "iaWei", "costF", "sigma", "img_2", "rotIn", "affine_type", "distance", "rank", "regularization", "graph matches_graph{\n", "\" -- \"", "[label=\"Nm=", ", Ni=", ", C=", "\"];\n", "\nprocessing time: %.3f sec\n", "processing frames", "estimated trim ratio: %f\n", "BlockingTSI!=tsi_ptr", "private", "shared", "!my_scheduler", "!thread_stack_size", "%u-%u", "Unidentified exception", "Detailed description: %s\n", "TBB Warning: %s\n", "%s: %s", "Step must be positive", "Index is not allocated", "Resource deadlock would occur", "Operation not permitted", "Invalid hash load factor", "invalid key", "Illegal tagged_msg cast", "TBB: %s\t%s\n", "TBB_VERSION", "Tools support", "__RML_open_factory", "__TBB_make_rml_server", "__RML_close_factory", "libirml.so.1", "scalable_malloc", "malloc", "libtbbmalloc.so", "ALLOCATOR", "scalable_free", "scalable_aligned_malloc", "scalable_aligned_free", "thread_monitor %s in %s\n", "pthread_join", "pthread_detach", "pthread_attr_init", "pthread_attr_setstack_size", "pthread_create", "pthread_attr_destroy", "Bogus message code %d", "Bogus buffer control mode", "Invalid crop request", "DCT coefficient out of range", "Bogus input colorspace", "Bogus JPEG colorspace", "Bogus marker length", "Invalid memory pool code %d", "Bogus sampling factors", "Bogus virtual array access", "Suspension not allowed here", "Bogus DAC index %d", "Bogus DAC value 0x%x", "Bogus DHT index %d", "Bogus DQT index %d", "Read from EMS failed", "Write to EMS failed", "Input file read error", "Empty input file", "Premature end of input file", "Not implemented yet", "Backing store not supported", "Insufficient memory (case %d)", "Read failed on temporary file", "Seek failed on temporary file", "Read from XMS failed", "Write to XMS failed", "9  13-Jan-2013", "Define Huffman Table 0x%02x", "Define Restart Interval %u", "Freed EMS handle %u", "Obtained EMS handle %u", "End Of Image", "Unexpected marker 0x%02x", "Quantizing to %d colors", "RST%d", "Start of Image", "Start Of Scan: %d components", "    Component %d: dc=%d ac=%d", "  Ss=%d, Se=%d, Ah=%d, Al=%d", "Closed temporary file %s", "Opened temporary file %s", "Freed XMS handle %u", "Obtained XMS handle %u", "Premature end of JPEG file", "JPEGMEM", "%ld%c", "RIFF", "WEBP", "VP8X", "ALPH", "VP8 ", "VP8L", "no object", "Incorrect/incomplete header.", "Truncated header.", "Frame not displayable.", "cannot parse picture header", "Bad code word", "bad partition length", "cannot parse segment header", "cannot parse filter header", "cannot parse partitions", "Not a key frame.", "Output aborted.", "Could not decode alpha data.", "Frame setup failed", "thread initialization failed.", "read beyond end of data", "invalid memory read", "Missing IHDR before IDAT", "Missing PLTE before IDAT", "Too many IDATs found", "color-map index out of range", "bad encoding (internal error)", "invalid PNG color type", "bad adaptive filter value", "sequential row overflow", "lost rgb to gray", "unexpected compose", "lost/gained channels", "unknown interlace type", "unexpected bit depth", ".Too many IDATs found", "..Too many IDATs found", "png_image_read: out of memory", "internal error: array alloc", "internal error: array realloc", "Out of memory", "Out of Memory", " using zstream", "1.2.3", "zstream unclaimed", "extra compressed data", "Not a PNG file", "CRC error", "out of place", "invalid", "missing IHDR", "duplicate", "ignored in grayscale PNG", "hIST must be after", "bKGD must be after", "tRNS must be after", "invalid values", "too many profiles", "bad keyword", "out of memory", "bad compression method", "truncated", "too short", "malformed sPLT chunk", "sPLT chunk has bad length", "invalid with alpha channel", "invalid index", "invalid parameter count", "unrecognized equation type", "invalid data", "invalid unit", "bad width format", "non-positive width", "bad height format", "non-positive height", "no space in chunk cache", "insufficient memory", "unknown compression type", "bad compression info", "error in user chunk", "Saving unknown chunk:", "unhandled critical chunk", "invalid chunk type", "internal row logic error", "internal row width error", "Not enough image data", "Extra compressed data", "Too much image data", "Read Error", "Call to NULL read function", "Write Error", "Call to NULL write function", "inconsistent chromaticities", "profile '", " but running with ", " +0000", "Ignoring invalid time value", "unexpected zlib return code", "unexpected end of LZ stream", "missing LZ dictionary", "zlib IO error", "bad parameters to zlib", "damaged LZ stream", "unsupported zlib version", "unexpected zlib return", "length does not match profile", "invalid length", "tag count too large", "invalid rendering intent", "intent outside defined range", "invalid signature", "PCS illuminant is not D50", "unexpected ICC PCS encoding", "Image width is zero in IHDR", "Invalid image width in IHDR", "Image height is zero in IHDR", "Invalid image height in IHDR", "Invalid bit depth in IHDR", "Invalid color type in IHDR", "Unknown filter method in IHDR", "Invalid filter method in IHDR", "Invalid IHDR data", "gamma value out of range", "invalid sRGB rendering intent", "sRGB", "known incorrect sRGB profile", "fixed point overflow ignored", "invalid chromaticities", "invalid end points", "gamma table being rebuilt", "cHRM Blue Y", "cHRM Blue X", "cHRM Green Y", "cHRM Green X", "cHRM Red Y", "cHRM Red X", "cHRM White Y", "cHRM White X", "cHRM Blue Z", "cHRM Green Z", "cHRM Red Z", "png_set_gAMA", "Invalid pCAL equation type", "Invalid pCAL parameter count", "Invalid sCAL unit", "Invalid sCAL width", "Invalid sCAL height", "Invalid sCAL width ignored", "Invalid sCAL height ignored", "Invalid palette length", "Invalid palette", "too many text chunks", "text chunk: out of memory", "too many sPLT chunks", "png_set_sPLT: invalid sPLT", "sPLT out of memory", "too many unknown chunks", "unknown chunk: out of memory", "keyword truncated", "gamma value", "png_set_background", "invalid alpha mode", "rgb to gray green coefficient", "rgb to gray red coefficient", "invalid background gamma type", "NULL row buffer", "Uninitialized row", "libpng warning: %s", "undefined", "libpng error: %s", "bad longjmp: ", "in use by IDAT", "deflateEnd failed (ignored)", "compressed data too long", "length exceeds PNG maximum", "Invalid filter type specified", "No profile for iCCP chunk", "ICC profile too short", "iCCP: invalid keyword", "sPLT: invalid keyword", "Invalid sBIT depth specified", "tEXt: invalid keyword", "tEXt: text too long", "zTXt: invalid keyword", "iTXt: invalid keyword", "iTXt: invalid compression", "pCAL: invalid keyword", "No IDATs written into file", "Unknown custom filter method", "memory image too large", "supplied row stride too small", "image row stride too large", "Tag ", "pseudo-", "_TIFFVGetField", "DotRange", "Error fetching directory link", "TIFFSetField", "custom tag binary object", "%s: Bad value %u for \"%s\" tag", "%s: Unknown %stag %u", "Directory %d does not exist", "Error writing directory link", "%s: \n", "Setting up field info failed", "_TIFFSetupFields", "TIFFFieldWithTag", "TIFFFieldWithName", "Tag %d", "ExposureTime", "FNumber", "ExposureProgram", "SpectralSensitivity", "ISOSpeedRatings", "OptoelectricConversionFactor", "ExifVersion", "DateTimeOriginal", "DateTimeDigitized", "ComponentsConfiguration", "CompressedBitsPerPixel", "ShutterSpeedValue", "ApertureValue", "BrightnessValue", "ExposureBiasValue", "MaxApertureValue", "SubjectDistance", "MeteringMode", "LightSource", "Flash", "FocalLength", "SubjectArea", "MakerNote", "UserComment", "SubSecTime", "SubSecTimeOriginal", "SubSecTimeDigitized", "FlashpixVersion", "ColorSpace", "PixelXDimension", "PixelYDimension", "RelatedSoundFile", "FlashEnergy", "SpatialFrequencyResponse", "FocalPlaneXResolution", "FocalPlaneYResolution", "FocalPlaneResolutionUnit", "SubjectLocation", "ExposureIndex", "SensingMethod", "FileSource", "SceneType", "CFAPattern", "CustomRendered", "ExposureMode", "WhiteBalance", "DigitalZoomRatio", "FocalLengthIn35mmFilm", "SceneCaptureType", "GainControl", "Contrast", "Saturation", "Sharpness", "DeviceSettingDescription", "SubjectDistanceRange", "ImageUniqueID", "SubfileType", "OldSubfileType", "ImageWidth", "ImageLength", "BitsPerSample", "Compression", "PhotometricInterpretation", "Threshholding", "CellWidth", "CellLength", "FillOrder", "DocumentName", "ImageDescription", "Make", "Model", "StripOffsets", "Orientation", "SamplesPerPixel", "RowsPerStrip", "StripByteCounts", "MinSampleValue", "MaxSampleValue", "XResolution", "YResolution", "PlanarConfiguration", "PageName", "XPosition", "YPosition", "FreeOffsets", "FreeByteCounts", "GrayResponseUnit", "GrayResponseCurve", "ResolutionUnit", "PageNumber", "ColorResponseUnit", "TransferFunction", "Software", "DateTime", "Artist", "HostComputer", "WhitePoint", "PrimaryChromaticities", "ColorMap", "HalftoneHints", "TileWidth", "TileLength", "TileOffsets", "TileByteCounts", "SubIFD", "InkSet", "InkNames", "NumberOfInks", "TargetPrinter", "ExtraSamples", "SampleFormat", "SMinSampleValue", "SMaxSampleValue", "ClipPath", "XClipPathUnits", "YClipPathUnits", "YCbCrCoefficients", "YCbCrSubsampling", "YCbCrPositioning", "ReferenceBlackWhite", "XMLPacket", "Matteing", "DataType", "ImageDepth", "TileDepth", "ImageFullWidth", "ImageFullLength", "TextureFormat", "TextureWrapModes", "FieldOfViewCotangent", "MatrixWorldToScreen", "MatrixWorldToCamera", "Copyright", "RichTIFFIPTC", "Photoshop", "EXIFIFDOffset", "ICC Profile", "GPSIFDOffset", "FaxRecvParams", "FaxSubAddress", "FaxRecvTime", "FaxDcs", "StoNits", "InteroperabilityIFDOffset", "DNGVersion", "DNGBackwardVersion", "UniqueCameraModel", "LocalizedCameraModel", "CFAPlaneColor", "CFALayout", "LinearizationTable", "BlackLevelRepeatDim", "BlackLevel", "BlackLevelDeltaH", "BlackLevelDeltaV", "WhiteLevel", "DefaultScale", "BestQualityScale", "DefaultCropOrigin", "DefaultCropSize", "ColorMatrix1", "ColorMatrix2", "CameraCalibration1", "CameraCalibration2", "ReductionMatrix1", "ReductionMatrix2", "AnalogBalance", "AsShotNeutral", "AsShotWhiteXY", "BaselineExposure", "BaselineNoise", "BaselineSharpness", "BayerGreenSplit", "LinearResponseLimit", "CameraSerialNumber", "LensInfo", "ChromaBlurRadius", "AntiAliasStrength", "ShadowScale", "DNGPrivateData", "MakerNoteSafety", "CalibrationIlluminant1", "CalibrationIlluminant2", "RawDataUniqueID", "OriginalRawFileName", "OriginalRawFileData", "ActiveArea", "MaskedAreas", "AsShotICCProfile", "AsShotPreProfileMatrix", "CurrentICCProfile", "CurrentPreProfileMatrix", "PerSample", "to read TIFF directory", "Can not read TIFF directory", "for \"StripByteCounts\" array", "Incorrect count for \"%s\"", "Incompatible type for \"%s\"", "Incorrect value for \"%s\"", "Out of memory reading of \"%s\"", "ReadDirEntryArray", "unknown tagname", "for strip array", "TIFFFetchNormalTag", "tiles", "strips", "for IFD list", "Colormap", "Cannot handle zero tile size", "Cannot handle zero strip size", "No space for strip buffer", "gtStripSeparate", "Integer overflow in %s", "No space for tile buffer", "gtTileSeparate", "Assuming 8-bit colormap", "Missing needed %s tag", "Samples/pixel", "Color channels", "Planarconfiguration", "No \"get\" routine setup", "\"%s\": Bad mode", "Cannot read TIFF header", "Error writing TIFF header", "File not open for reading", "TIFFNumberOfStrips", "Invalid YCbCr subsampling", "TIFFTileRowSize", "TIFFNumberOfTiles", "Seek error at scanline %lu", "Write error at scanline %lu", "tile", "strip", "File not open for writing", "No space for %s arrays", "No space for output buffer", "%s: ", "Warning, ", "%s: Cannot open", "scanline", "TIFFRegisterCODEC", "TIFFUnRegisterCODEC", "IO error writing tag data", "IO error writing directory", "Error updating TIFF header", "%s: Could not find tag %d.", "for field buffer.", "None", "PackBits", "ThunderScan", "NeXT", "JPEG", "Old-style JPEG", "CCITT RLE", "CCITT RLE/W", "CCITT Group 3", "CCITT Group 4", "ISO JBIG", "Deflate", "AdobeDeflate", "PixarLog", "SGILog", "SGILog24", "LZMA", "Premature EOL", "Line length mismatch", "  Group 4 Options:", "%suncompressed data", "  Group 3 Options:", "%s2-d encoding", "%sEOL padding", " (%lu = 0x%lx)\n", "  Fax Data:", " clean", " receiver regenerated", " uncorrected errors", " (%u = 0x%x)\n", "  Bad Fax Lines: %lu\n", "InitCCITTFax3", "No space for state block", "for Group 3/4 run arrays", "TIFFInitCCITTFax3", "TIFFInitCCITTFax4", "Group4Options", "Group3Options", "FaxMode", "FaxFillFunc", "BadFaxLines", "CleanFaxData", "ConsecutiveBadFaxLines", "must be either LogLUV or LogL", "Y, L", "XYZ, Luv", "SGILogDataFmt", "SGILogEncode", "No space for LZW hash table", "No space for LZW state block", "No space for LZW code table", "ZLib error: %s", "Unsupported bits/sample: %d", "Encoder error: %s", "  Predictor: ", "none ", "horizontal differencing ", "floating point predictor ", "%u (0x%x)\n", "TIFFPredictorInit", "Predictor", "Not enough", "Too much", "No space for ZIP state block", "/tmp/", "%s/tmp.XXXXXXXXXX", "%08x:", " %02x", "string = \"%s\"\n", "ascii = \"%s\"\n", "uclangcode = %d; uclen = %d\n", "sccode = %d\n", "maclen = %d\n", "(%f, %f, %f)\n", "e[%d][%d]=%f ", "number of entires = %d\n", "gamma = %f\n", "entry[%d] = %f\n", "cannot get header\n", "cannot get tab table\n", "numattrs=%d\n", "error: cannot get box\n", "incorrect magic number\n", "expecting file type box\n", "box type %s\n", "error: missing IHDR box\n", "error: no components\n", "error: no COLR box\n", "ICC Profile CS %08x\n", "error: no memory\n", "error: no code stream found\n", "jpc_dec_decodecblks failed\n", "write component failed\n", "cannot get marker segment\n", "RESOLUTION LEVEL %d\n", "BAND %d\n", "CODE BLOCK GROUP %d\n", "CODE BLOCK %d\n", "jpc_dec_decodepkts failed\n", "read error\n", "maxlyrs", "maxpkts", "debug", "channo=%d; type=%d; assoc=%d\n", "numchans = %d\n", "cmptno=%d; map=%d; pcol=%d\n", "numents=%d; numchans=%d\n", "LUT[%d][%d]=%d\n", "method=%d; pri=%d; approx=%d\n", "csid=%d\n", "JP2 box: ", "cannot copy box data\n", "cannot parse box data\n", "FTYP", "JP2H", "IHDR", "BPCC", "COLR", "PCLR", "CMAP", "CDEF", "RESC", "RESD", "JP2C", "JP2I", "UUID", "UINF", "ULST", "%02x ", "hoff[%d] = %d; voff[%d] = %d\n", "seqno = %d;\n", "po[%d] = %d; ", "cs[%d] = %d; ce[%d] = %d; ", "rs[%d] = %d; re[%d] = %d; ", "le[%d] = %d\n", "caps = 0x%02x;\n", "csty = 0x%02x;\n", "prg = %d; numlyrs = %d;\n", "regid = %d;\n", "data = ", "ind=%d; len = %d;\n", "data =\n", "type = 0x%04x (%s);", " len = %d;", "UNKNOWN", "missing SOP marker segment\n", "alignment failed\n", "hdrlen=%lu bodylen=%lu \n", "missing EPH marker segment\n", "packet body offset=%06ld\n", "%04x:", "warning: corrupt code stream\n", "cannot write SOC marker\n", "cannot write SIZ marker\n", "Creator: JasPer Version %s", "cannot write COM marker\n", "cannot write COD marker\n", "lyrno = %02d\n", "success %d goodthresh %f\n", "  tcmpt %5d %5d %5d %5d\n", "    rlvl %5d %5d %5d %5d\n", "      band %5d %5d %5d %5d\n", "unsupported image type\n", "ignoring invalid mode %s\n", "invalid tile width %lu\n", "invalid tile height %lu\n", "invalid precinct width\n", "invalid precinct height\n", "invalid code block width %d\n", "invalid code block height %d\n", "code block size too large\n", "too many layers\n", "invalid number of guard bits\n", "cannot open tmp file\n", "cannot write SOT marker\n", "cannot write SOD marker\n", "cannot write EOI marker\n", "invalid JP encoder options\n", "dotile failed\n", "real", "lrcp", "rlcp", "rpcl", "pcrl", "cprl", "imgareatlx", "imgareatly", "tilegrdtlx", "tilegrdtly", "tilewidth", "tileheight", "prcwidth", "prcheight", "cblkwidth", "cblkheight", "nomct", "numrlvls", "lazy", "termall", "segsym", "vcausal", "pterm", "resetprob", "numgbits", "rate", "ilyrrates", "_jp2overhead", "%s\n_jp2overhead=%lu\n", "1.900.1", "unrecognized exception", "preview", "Unexpected attribute type.", "Cannot overwrite scan line ", "\" to image file \"", "\" failed. \"", "Cannot open image file \"", "Pixel type of \"", "\" channel of output file \"", "File output failed.", "Early end of file: read ", " out of ", " requested bytes.", "Unexpected end of file.", "(string)", "chromaticities", "whiteLuminance", "adoptedNeutral", "renderingTransform", "lookModTransform", "xDensity", "owner", "comments", "capDate", "utcOffset", "longitude", "latitude", "altitude", "focus", "expTime", "aperture", "isoSpeed", "envmap", "keyCode", "timeCode", "wrapmodes", "framesPerSecond", "multiView", "worldToCamera", "worldToNDC", "Invalid ", ": it is more than ", " characters long.", "Cannot find image attribute \"", "displayWindow", "dataWindow", "pixelAspectRatio", "screenWindowCenter", "screenWindowWidth", "channels", "lineOrder", "compression", "pixels.", "\" image channel is invalid.", "\" channel is not 1.", "\" channel is invalid.", "\" channel.", "File is not an image file.", "Cannot read version ", "attribute name", "attribute type name", "\" to image attribute \"", "\" of type \"", "timecode", "stringvector", "Cannot read image file \"", "Unknown pixel data type.", "Data decoding (rle) failed.", "Scan line ", " is missing.", "Unexpected data block length.", "\" channel of input file \"", "keycode", "chlist", "channel name", "tiledesc", "box2i", "box2f", "Integer addition overflow.", "\" to an attribute of type \"", "Unknown pixel type.", "rational", "m33f", "m33d", "m44f", "m44d", "Cannot initialize mutex (%T).", "Cannot lock mutex (%T).", "Cannot unlock mutex (%T).", "Arguments not in valid range.", "Unexpected tile block length.", "Tile (", ") is not a valid tile.", ") is missing.", "Unexpected tile x coordinate.", "Unexpected tile y coordinate.", "Argument not in valid range.", "Unknown LevelMode format.", "std::bad_alloc", "std::bad_exception", "pure virtual method called\n", "POSIX", "space", "print", "cntrl", "upper", "lower", "digit", "punct", "xdigit", "alnum", "graph", "basic_ios::clear", "basic_string::erase", "%.*Lf", "%m/%d/%y", "%H:%M", "%H:%M:%S", "-+xX0123456789abcdefABCDEF", "-0123456789", "AKST", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "basic_string::copy", "basic_string::compare", "basic_string::_S_create", "basic_string::_M_replace_aux", "basic_string::insert", "basic_string::replace", "basic_string::assign", "basic_string::append", "basic_string::resize", "basic_string::basic_string", "system", "std::bad_cast", "std::bad_typeid", "terminate called recursively\n", "  what():  ", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "std::bad_array_length", "std::bad_array_new_length", "_GLOBAL_", "(anonymous namespace)", "auto", "string literal", "{default arg#", "JArray", "construction vtable for ", "typeinfo name for ", "typeinfo fn for ", "non-virtual thunk to ", "virtual thunk to ", "covariant return thunk to ", "java Class for ", "guard variable for ", "TLS init function for ", "TLS wrapper function for ", "reference temporary #", " for ", "hidden alias for ", "transaction clone for ", "non-transaction clone for ", "operator", "new ", "global constructors keyed to ", "global destructors keyed to ", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "alignof ", "const_cast", "delete[] ", "dynamic_cast", "delete ", "operator\"\" ", "new[]", "reinterpret_cast", "static_cast", "sizeof ", "throw", "throw ", "signed char", "boolean", "byte", "long double", "__float128", "unsigned char", "unsigned int", "long", "unsigned long", "__int128", "unsigned __int128", "unsigned short", "void", "wchar_t", "long long", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "decltype(nullptr)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void Java_org_opencv_android_Utils_nBitmapToMat2(JNIEnv*, jclass, jobject, jlong, jboolean)", "Mat::nGet()", "Mat::nPutD()", "Mat::n_1zeros__DDI()", "Mat::n_1zeros__III()", "Mat::n_1t()", "Mat::n_1submat()", "Mat::n_1submat_1rr()", "Mat::n_1size()", "Mat::n_1setTo__JJ()", "Mat::n_1setTo__JJJ()", "Mat::n_1setTo__JDDDDJ()", "Mat::n_1setTo__JDDDD()", "Mat::n_1rowRange()", "Mat::n_1row()", "Mat::n_1reshape__JI()", "Mat::n_1reshape__JII()", "Mat::n_1release()", "Mat::n_1push_1back()", "Mat::n_1ones__DDI()", "Mat::n_1ones__III()", "Mat::n_1mul__JJ()", "Mat::n_1mul__JJD()", "core::locateROI_10()", "Mat::n_1inv__J()", "Mat::n_1inv__JI()", "Mat::n_1eye__DDI()", "Mat::n_1eye__III()", "Mat::n_1dot()", "Mat::n_1diag__J()", "Mat::n_1diag__JI()", "Mat::n_1cross()", "Mat::n_1create__JDDI()", "Mat::n_1create__JIII()", "Mat::n_1copyTo__JJJ()", "Mat::n_1copyTo__JJ()", "Mat::n_1convertTo__JJI()", "Mat::n_1convertTo__JJID()", "Mat::n_1convertTo__JJIDD()", "Mat::n_1colRange()", "Mat::n_1col()", "Mat::n_1clone()", "Mat::n_1checkVector__JI()", "Mat::n_1checkVector__JII()", "Mat::n_1checkVector__JIIZ()", "Mat::n_1assignTo__JJ()", "Mat::n_1assignTo__JJI()", "Mat::n_1adjustROI()", "Mat::n_1Mat__JII()", "Mat::n_1Mat__JIIII()", "Mat::n_1Mat__DDIDDDD()", "Mat::n_1Mat__IIIDDDD()", "Mat::n_1Mat__DDI()", "Mat::n_1Mat__III()", "Mat::nGetD()", "Mat::nPutF()", "Mat::nGetF()", "Mat::nPutI()", "Mat::nGetI()", "Mat::nPutS()", "Mat::nGetS()", "Mat::nPutB()", "Mat::nGetB()", "@A33#@#h8?\n)y?33#@", "gfffgfffgfffgfff", "core::start_10()", "core::getTimeSec_10()", "core::getTimeMilli_10()", "core::getTimeMicro_10()", "core::TickMeter_10()", "core::save_10()", "core::clear_10()", "core::getDefaultName_10()", "core::vconcat_10()", "core::transpose_10()", "core::transform_10()", "core::subtract_15()", "core::subtract_14()", "core::subtract_13()", "core::subtract_12()", "core::subtract_11()", "core::subtract_10()", "core::sqrt_10()", "core::split_10()", "core::sortIdx_10()", "core::sort_10()", "core::setRNGSeed_10()", "core::setNumThreads_10()", "core::setIdentity_11()", "core::setIdentity_10()", "core::setErrorVerbosity_10()", "core::scaleAdd_10()", "core::rotate_10()", "core::repeat_10()", "core::reduce_11()", "core::reduce_10()", "core::randu_10()", "core::randn_10()", "core::randShuffle_11()", "core::randShuffle_10()", "core::pow_10()", "core::polarToCart_11()", "core::polarToCart_10()", "core::phase_11()", "core::phase_10()", "core::perspectiveTransform_10()", "core::patchNaNs_11()", "core::patchNaNs_10()", "core::normalize_13()", "core::normalize_12()", "core::normalize_11()", "core::normalize_10()", "core::multiply_15()", "core::multiply_14()", "core::multiply_13()", "core::multiply_12()", "core::multiply_11()", "core::multiply_10()", "core::mulTransposed_12()", "core::mulTransposed_11()", "core::mulTransposed_10()", "core::mulSpectrums_11()", "core::mulSpectrums_10()", "core::mixChannels_10()", "core::min_11()", "core::min_10()", "core::merge_10()", "core::meanStdDev_11()", "core::meanStdDev_10()", "core::max_11()", "core::max_10()", "core::magnitude_10()", "core::log_10()", "core::insertChannel_10()", "core::inRange_10()", "core::idft_11()", "core::idft_10()", "core::idct_11()", "core::idct_10()", "core::hconcat_10()", "core::gemm_11()", "core::gemm_10()", "core::flip_10()", "core::findNonZero_10()", "core::extractChannel_10()", "core::exp_10()", "core::divide_17()", "core::divide_16()", "core::divide_15()", "core::divide_14()", "core::divide_13()", "core::divide_12()", "core::divide_11()", "core::divide_10()", "core::dft_11()", "core::dft_10()", "core::dct_11()", "core::dct_10()", "core::copyMakeBorder_11()", "core::copyMakeBorder_10()", "core::convertScaleAbs_11()", "core::convertScaleAbs_10()", "core::convertFp16_10()", "core::completeSymm_11()", "core::completeSymm_10()", "core::compare_11()", "core::compare_10()", "core::cartToPolar_11()", "core::cartToPolar_10()", "core::calcCovarMatrix_11()", "core::calcCovarMatrix_10()", "core::bitwise_1xor_11()", "core::bitwise_1xor_10()", "core::bitwise_1or_11()", "core::bitwise_1or_10()", "core::bitwise_1not_11()", "core::bitwise_1not_10()", "core::bitwise_1and_11()", "core::bitwise_1and_10()", "core::batchDistance_12()", "core::batchDistance_11()", "core::batchDistance_10()", "core::addWeighted_11()", "core::addWeighted_10()", "core::add_15()", "core::add_14()", "core::add_13()", "core::add_12()", "core::add_11()", "core::add_10()", "core::absdiff_11()", "core::absdiff_10()", "core::SVDecomp_11()", "core::SVDecomp_10()", "core::SVBackSubst_10()", "core::PCAProject_10()", "core::PCACompute_12()", "core::PCACompute_11()", "core::PCACompute_10()", "core::PCABackProject_10()", "core::LUT_10()", "core::getTickCount_10()", "core::getCPUTickCount_10()", "core::solveCubic_10()", "core::getThreadNum_10()", "core::getOptimalDFTSize_10()", "core::getNumberOfCPUs_10()", "core::getNumThreads_10()", "core::countNonZero_10()", "core::borderInterpolate_10()", "core::fastAtan2_10()", "core::cubeRoot_10()", "core::solvePoly_11()", "core::solvePoly_10()", "core::norm_15()", "core::norm_14()", "core::norm_13()", "core::norm_12()", "core::norm_11()", "core::norm_10()", "core::kmeans_11()", "core::kmeans_10()", "core::invert_11()", "core::invert_10()", "core::getTickFrequency_10()", "core::determinant_10()", "core::PSNR_10()", "core::Mahalanobis_10()", "core::solve_11()", "core::solve_10()", "core::eigen_11()", "core::eigen_10()", "core::checkRange_11()", "core::checkRange_10()", "core::getBuildInformation_10()", "core::trace_10()", "core::sumElems_10()", "core::mean_11()", "core::mean_10()", "imgproc::setTilesGridSize_10()", "imgproc::setClipLimit_10()", "imgproc::collectGarbage_10()", "imgproc::apply_10()", "imgproc::getClipLimit_10()", "imgproc::getTilesGridSize_10()", "imgproc::watershed_10()", "imgproc::warpPerspective_12()", "imgproc::warpPerspective_11()", "imgproc::warpPerspective_10()", "imgproc::warpAffine_12()", "imgproc::warpAffine_11()", "imgproc::warpAffine_10()", "imgproc::undistortPoints_11()", "imgproc::undistortPoints_10()", "imgproc::undistort_11()", "imgproc::undistort_10()", "imgproc::sqrBoxFilter_12()", "imgproc::sqrBoxFilter_11()", "imgproc::sqrBoxFilter_10()", "imgproc::spatialGradient_12()", "imgproc::spatialGradient_11()", "imgproc::spatialGradient_10()", "imgproc::sepFilter2D_12()", "imgproc::sepFilter2D_11()", "imgproc::sepFilter2D_10()", "imgproc::resize_11()", "imgproc::resize_10()", "imgproc::remap_11()", "imgproc::remap_10()", "imgproc::rectangle_12()", "imgproc::rectangle_11()", "imgproc::rectangle_10()", "imgproc::pyrUp_12()", "imgproc::pyrUp_11()", "imgproc::pyrUp_10()", "imgproc::pyrMeanShiftFiltering_11()", "imgproc::pyrMeanShiftFiltering_10()", "imgproc::pyrDown_12()", "imgproc::pyrDown_11()", "imgproc::pyrDown_10()", "imgproc::putText_12()", "imgproc::putText_11()", "imgproc::putText_10()", "imgproc::preCornerDetect_11()", "imgproc::preCornerDetect_10()", "imgproc::polylines_12()", "imgproc::polylines_11()", "imgproc::polylines_10()", "imgproc::morphologyEx_12()", "imgproc::morphologyEx_11()", "imgproc::morphologyEx_10()", "imgproc::minEnclosingCircle_10()", "imgproc::medianBlur_10()", "imgproc::matchTemplate_11()", "imgproc::matchTemplate_10()", "imgproc::logPolar_10()", "imgproc::linearPolar_10()", "imgproc::line_12()", "imgproc::line_11()", "imgproc::line_10()", "imgproc::invertAffineTransform_10()", "imgproc::integral_11()", "imgproc::integral_10()", "imgproc::integral2_11()", "imgproc::integral2_10()", "imgproc::integral3_11()", "imgproc::integral3_10()", "imgproc::initUndistortRectifyMap_10()", "imgproc::grabCut_11()", "imgproc::grabCut_10()", "imgproc::goodFeaturesToTrack_11()", "imgproc::goodFeaturesToTrack_10()", "imgproc::getRectSubPix_11()", "imgproc::getRectSubPix_10()", "imgproc::getDerivKernels_11()", "imgproc::getDerivKernels_10()", "imgproc::fitLine_10()", "imgproc::findContours_11()", "imgproc::findContours_10()", "imgproc::filter2D_12()", "imgproc::filter2D_11()", "imgproc::filter2D_10()", "imgproc::fillPoly_11()", "imgproc::fillPoly_10()", "imgproc::fillConvexPoly_11()", "imgproc::fillConvexPoly_10()", "imgproc::erode_12()", "imgproc::erode_11()", "imgproc::erode_10()", "imgproc::equalizeHist_10()", "imgproc::ellipse2Poly_10()", "imgproc::ellipse_15()", "imgproc::ellipse_14()", "imgproc::ellipse_13()", "imgproc::ellipse_12()", "imgproc::ellipse_11()", "imgproc::ellipse_10()", "imgproc::drawMarker_11()", "imgproc::drawMarker_10()", "imgproc::drawContours_12()", "imgproc::drawContours_11()", "imgproc::drawContours_10()", "imgproc::distanceTransform_11()", "imgproc::distanceTransform_10()", "imgproc::distanceTransformWithLabels_11()", "imgproc::distanceTransformWithLabels_10()", "imgproc::dilate_12()", "imgproc::dilate_11()", "imgproc::dilate_10()", "imgproc::demosaicing_11()", "imgproc::demosaicing_10()", "imgproc::cvtColor_11()", "imgproc::cvtColor_10()", "imgproc::createHanningWindow_10()", "imgproc::cornerSubPix_10()", "imgproc::cornerMinEigenVal_12()", "imgproc::cornerMinEigenVal_11()", "imgproc::cornerMinEigenVal_10()", "imgproc::cornerHarris_11()", "imgproc::cornerHarris_10()", "imgproc::cornerEigenValsAndVecs_11()", "imgproc::cornerEigenValsAndVecs_10()", "imgproc::convexityDefects_10()", "imgproc::convexHull_11()", "imgproc::convexHull_10()", "imgproc::convertMaps_11()", "imgproc::convertMaps_10()", "imgproc::circle_12()", "imgproc::circle_11()", "imgproc::circle_10()", "imgproc::calcHist_11()", "imgproc::calcHist_10()", "imgproc::calcBackProject_10()", "imgproc::boxPoints_10()", "imgproc::boxFilter_12()", "imgproc::boxFilter_11()", "imgproc::boxFilter_10()", "imgproc::blur_12()", "imgproc::blur_11()", "imgproc::blur_10()", "imgproc::bilateralFilter_11()", "imgproc::bilateralFilter_10()", "imgproc::arrowedLine_11()", "imgproc::arrowedLine_10()", "imgproc::approxPolyDP_10()", "imgproc::applyColorMap_10()", "imgproc::adaptiveThreshold_10()", "imgproc::accumulateWeighted_11()", "imgproc::accumulateWeighted_10()", "imgproc::accumulateSquare_11()", "imgproc::accumulateSquare_10()", "imgproc::accumulateProduct_11()", "imgproc::accumulateProduct_10()", "imgproc::accumulate_11()", "imgproc::accumulate_10()", "imgproc::Sobel_12()", "imgproc::Sobel_11()", "imgproc::Sobel_10()", "imgproc::Scharr_12()", "imgproc::Scharr_11()", "imgproc::Scharr_10()", "imgproc::Laplacian_12()", "imgproc::Laplacian_11()", "imgproc::Laplacian_10()", "imgproc::HuMoments_10()", "imgproc::HoughLinesP_11()", "imgproc::HoughLinesP_10()", "imgproc::HoughLines_11()", "imgproc::HoughLines_10()", "imgproc::HoughCircles_11()", "imgproc::HoughCircles_10()", "imgproc::GaussianBlur_12()", "imgproc::GaussianBlur_11()", "imgproc::GaussianBlur_10()", "imgproc::Canny_13()", "imgproc::Canny_12()", "imgproc::Canny_11()", "imgproc::Canny_10()", "imgproc::rotatedRectangleIntersection_10()", "imgproc::floodFill_11()", "imgproc::floodFill_10()", "imgproc::connectedComponentsWithStats_11()", "imgproc::connectedComponentsWithStats_10()", "imgproc::connectedComponentsWithStatsWithAlgorithm_10()", "imgproc::connectedComponents_11()", "imgproc::connectedComponents_10()", "imgproc::connectedComponentsWithAlgorithm_10()", "imgproc::intersectConvexConvex_11()", "imgproc::intersectConvexConvex_10()", "imgproc::initWideAngleProjMap_11()", "imgproc::initWideAngleProjMap_10()", "imgproc::threshold_10()", "imgproc::pointPolygonTest_10()", "imgproc::minEnclosingTriangle_10()", "imgproc::matchShapes_10()", "imgproc::contourArea_11()", "imgproc::contourArea_10()", "imgproc::compareHist_10()", "imgproc::arcLength_10()", "imgproc::isContourConvex_10()", "imgproc::clipLine_10()", "imgproc::minAreaRect_10()", "imgproc::fitEllipse_10()", "imgproc::boundingRect_10()", "imgproc::createLineSegmentDetector_11()", "imgproc::createLineSegmentDetector_10()", "imgproc::createCLAHE_11()", "imgproc::createCLAHE_10()", "imgproc::phaseCorrelate_11()", "imgproc::phaseCorrelate_10()", "imgproc::moments_11()", "imgproc::moments_10()", "imgproc::getStructuringElement_11()", "imgproc::getStructuringElement_10()", "imgproc::getRotationMatrix2D_10()", "imgproc::getPerspectiveTransform_10()", "imgproc::getGaussianKernel_11()", "imgproc::getGaussianKernel_10()", "imgproc::getGaborKernel_11()", "imgproc::getGaborKernel_10()", "imgproc::getDefaultNewCameraMatrix_11()", "imgproc::getDefaultNewCameraMatrix_10()", "imgproc::getAffineTransform_10()", "imgproc::insert_11()", "imgproc::initDelaunay_10()", "imgproc::getVoronoiFacetList_10()", "imgproc::getTriangleList_10()", "imgproc::getLeadingEdgeList_10()", "imgproc::getEdgeList_10()", "imgproc::symEdge_10()", "imgproc::rotateEdge_10()", "imgproc::nextEdge_10()", "imgproc::locate_10()", "imgproc::insert_10()", "imgproc::getEdge_10()", "imgproc::findNearest_11()", "imgproc::findNearest_10()", "imgproc::edgeOrg_11()", "imgproc::edgeOrg_10()", "imgproc::edgeDst_11()", "imgproc::edgeDst_10()", "imgproc::getVertex_11()", "imgproc::getVertex_10()", "imgproc::Subdiv2D_11()", "imgproc::Subdiv2D_10()", "imgproc::drawSegments_10()", "imgproc::detect_11()", "imgproc::detect_10()", "imgproc::compareSegments_11()", "imgproc::compareSegments_10()", "ml::setTermCriteria_10()", "ml::setCalculateVarImportance_10()", "ml::setActiveVarCount_10()", "ml::getActiveVarCount_10()", "ml::getCalculateVarImportance_10()", "ml::getTermCriteria_10()", "ml::create_10()", "ml::getVarImportance_10()", "ml::getVarCount_10()", "ml::predict_11()", "ml::predict_10()", "ml::calcError_10()", "ml::train_12()", "ml::train_11()", "ml::train_10()", "ml::isTrained_10()", "ml::isClassifier_10()", "ml::empty_10()", "ml::setTrainMethod_11()", "ml::setTrainMethod_10()", "ml::setTermCriteria_10()", "ml::setRpropDWPlus_10()", "ml::setRpropDWMinus_10()", "ml::setRpropDWMin_10()", "ml::setRpropDWMax_10()", "ml::setRpropDW0_10()", "ml::setLayerSizes_10()", "ml::setBackpropWeightScale_10()", "ml::setBackpropMomentumScale_10()", "ml::setActivationFunction_11()", "ml::setActivationFunction_10()", "ml::getTrainMethod_10()", "ml::getRpropDWPlus_10()", "ml::getRpropDWMinus_10()", "ml::getRpropDWMin_10()", "ml::getRpropDWMax_10()", "ml::getRpropDW0_10()", "ml::getBackpropWeightScale_10()", "ml::getBackpropMomentumScale_10()", "ml::getTermCriteria_10()", "ml::load_10()", "ml::create_10()", "ml::getWeights_10()", "ml::getLayerSizes_10()", "ml::setUseSurrogates_10()", "ml::setUse1SERule_10()", "ml::setTruncatePrunedTree_10()", "ml::setRegressionAccuracy_10()", "ml::setPriors_10()", "ml::setMinSampleCount_10()", "ml::setMaxDepth_10()", "ml::setMaxCategories_10()", "ml::setCVFolds_10()", "ml::getMinSampleCount_10()", "ml::getMaxDepth_10()", "ml::getMaxCategories_10()", "ml::getCVFolds_10()", "ml::getRegressionAccuracy_10()", "ml::getUseSurrogates_10()", "ml::getUse1SERule_10()", "ml::getTruncatePrunedTree_10()", "ml::create_10()", "ml::getPriors_10()", "ml::setTermCriteria_10()", "ml::setSvmsgdType_10()", "ml::setStepDecreasingPower_10()", "ml::setOptimalParameters_11()", "ml::setOptimalParameters_10()", "ml::setMarginType_10()", "ml::setMarginRegularization_10()", "ml::setInitialStepSize_10()", "ml::getSvmsgdType_10()", "ml::getMarginType_10()", "ml::getStepDecreasingPower_10()", "ml::getShift_10()", "ml::getMarginRegularization_10()", "ml::getInitialStepSize_10()", "ml::getTermCriteria_10()", "ml::create_10()", "ml::getWeights_10()", "ml::setIsClassifier_10()", "ml::setEmax_10()", "ml::setDefaultK_10()", "ml::setAlgorithmType_10()", "ml::getEmax_10()", "ml::getDefaultK_10()", "ml::getAlgorithmType_10()", "ml::findNearest_11()", "ml::findNearest_10()", "ml::getIsClassifier_10()", "ml::create_10()", "ml::setTrainMethod_10()", "ml::setTermCriteria_10()", "ml::setRegularization_10()", "ml::setMiniBatchSize_10()", "ml::setLearningRate_10()", "ml::setIterations_10()", "ml::getTrainMethod_10()", "ml::getRegularization_10()", "ml::getMiniBatchSize_10()", "ml::getIterations_10()", "ml::predict_11()", "ml::predict_10()", "ml::getLearningRate_10()", "ml::getTermCriteria_10()", "ml::create_10()", "ml::get_1learnt_1thetas_10()", "ml::setWeightTrimRate_10()", "ml::setWeakCount_10()", "ml::setBoostType_10()", "ml::getWeakCount_10()", "ml::getBoostType_10()", "ml::getWeightTrimRate_10()", "ml::create_10()", "ml::shuffleTrainTest_10()", "ml::setTrainTestSplitRatio_11()", "ml::setTrainTestSplitRatio_10()", "ml::setTrainTestSplit_11()", "ml::setTrainTestSplit_10()", "ml::getValues_10()", "ml::getSample_10()", "ml::getResponseType_10()", "ml::getNVars_10()", "ml::getNTrainSamples_10()", "ml::getNTestSamples_10()", "ml::getNSamples_10()", "ml::getNAllVars_10()", "ml::getLayout_10()", "ml::getCatCount_10()", "ml::create_11()", "ml::create_10()", "ml::getVarType_10()", "ml::getVarSymbolFlags_10()", "ml::getVarIdx_10()", "ml::getTrainSamples_11()", "ml::getTrainSamples_10()", "ml::getTrainSampleWeights_10()", "ml::getTrainSampleIdx_10()", "ml::getTrainResponses_10()", "ml::getTrainNormCatResponses_10()", "ml::getTestSamples_10()", "ml::getTestSampleWeights_10()", "ml::getTestSampleIdx_10()", "ml::getTestResponses_10()", "ml::getTestNormCatResponses_10()", "ml::getSubVector_10()", "ml::getSamples_10()", "ml::getSampleWeights_10()", "ml::getResponses_10()", "ml::getNormCatResponses_10()", "ml::getMissing_10()", "ml::getDefaultSubstValues_10()", "ml::getClassLabels_10()", "ml::getCatOfs_10()", "ml::getCatMap_10()", "ml::predictProb_11()", "ml::predictProb_10()", "ml::create_10()", "ml::setType_10()", "ml::setTermCriteria_10()", "ml::setP_10()", "ml::setNu_10()", "ml::setKernel_10()", "ml::setGamma_10()", "ml::setDegree_10()", "ml::setCoef0_10()", "ml::setClassWeights_10()", "ml::setC_10()", "ml::getType_10()", "ml::getKernelType_10()", "ml::getP_10()", "ml::getNu_10()", "ml::getGamma_10()", "ml::getDegree_10()", "ml::getDecisionFunction_10()", "ml::getCoef0_10()", "ml::getC_10()", "ml::getTermCriteria_10()", "ml::load_10()", "ml::create_10()", "ml::getUncompressedSupportVectors_10()", "ml::getSupportVectors_10()", "ml::getClassWeights_10()", "ml::setTermCriteria_10()", "ml::setCovarianceMatrixType_10()", "ml::setClustersNumber_10()", "ml::getCovs_10()", "ml::getCovarianceMatrixType_10()", "ml::getClustersNumber_10()", "ml::trainM_11()", "ml::trainM_10()", "ml::trainEM_11()", "ml::trainEM_10()", "ml::trainE_11()", "ml::trainE_10()", "ml::predict2_10()", "ml::getTermCriteria_10()", "ml::create_10()", "ml::getWeights_10()", "ml::getMeans_10()", "N2cv6detail8PtrOwnerE", "N2cv6detail12PtrOwnerImplINS_2ml9TrainDataENS_14DefaultDeleterIS3_EEEE", "photo::setGamma_10()", "photo::process_10()", "photo::getGamma_10()", "photo::process_11()", "photo::process_10()", "photo::process_10()", "photo::setSaturationWeight_10()", "photo::setExposureWeight_10()", "photo::setContrastWeight_10()", "photo::process_11()", "photo::process_10()", "photo::getSaturationWeight_10()", "photo::getExposureWeight_10()", "photo::getContrastWeight_10()", "photo::process_11()", "photo::process_10()", "photo::shiftMat_10()", "photo::setMaxBits_10()", "photo::setExcludeRange_10()", "photo::setCut_10()", "photo::process_11()", "photo::process_10()", "photo::computeBitmaps_10()", "photo::getMaxBits_10()", "photo::getExcludeRange_10()", "photo::getCut_10()", "photo::calculateShift_10()", "photo::setSaturation_10()", "photo::setBias_10()", "photo::getSaturation_10()", "photo::getBias_10()", "photo::process_10()", "photo::process_10()", "photo::textureFlattening_11()", "photo::textureFlattening_10()", "photo::stylization_11()", "photo::stylization_10()", "photo::seamlessClone_10()", "photo::pencilSketch_11()", "photo::pencilSketch_10()", "photo::inpaint_10()", "photo::illuminationChange_11()", "photo::illuminationChange_10()", "photo::fastNlMeansDenoisingMulti_13()", "photo::fastNlMeansDenoisingMulti_12()", "photo::fastNlMeansDenoisingMulti_11()", "photo::fastNlMeansDenoisingMulti_10()", "photo::fastNlMeansDenoisingColoredMulti_11()", "photo::fastNlMeansDenoisingColoredMulti_10()", "photo::fastNlMeansDenoisingColored_11()", "photo::fastNlMeansDenoisingColored_10()", "photo::fastNlMeansDenoising_13()", "photo::fastNlMeansDenoising_12()", "photo::fastNlMeansDenoising_11()", "photo::fastNlMeansDenoising_10()", "photo::edgePreservingFilter_11()", "photo::edgePreservingFilter_10()", "photo::detailEnhance_11()", "photo::detailEnhance_10()", "photo::denoise_1TVL1_11()", "photo::denoise_1TVL1_10()", "photo::decolor_10()", "photo::colorChange_11()", "photo::colorChange_10()", "photo::createTonemapReinhard_11()", "photo::createTonemapReinhard_10()", "photo::createTonemapMantiuk_11()", "photo::createTonemapMantiuk_10()", "photo::createTonemapDurand_11()", "photo::createTonemapDurand_10()", "photo::createTonemapDrago_11()", "photo::createTonemapDrago_10()", "photo::createTonemap_11()", "photo::createTonemap_10()", "photo::createMergeRobertson_10()", "photo::createMergeMertens_11()", "photo::createMergeMertens_10()", "photo::createMergeDebevec_10()", "photo::createCalibrateRobertson_11()", "photo::createCalibrateRobertson_10()", "photo::createCalibrateDebevec_11()", "photo::createCalibrateDebevec_10()", "photo::createAlignMTB_11()", "photo::createAlignMTB_10()", "photo::setLightAdaptation_10()", "photo::setIntensity_10()", "photo::setColorAdaptation_10()", "photo::getLightAdaptation_10()", "photo::getIntensity_10()", "photo::getColorAdaptation_10()", "photo::setSamples_10()", "photo::setRandom_10()", "photo::setLambda_10()", "photo::getSamples_10()", "photo::getLambda_10()", "photo::getRandom_10()", "photo::setSigmaSpace_10()", "photo::setSigmaColor_10()", "photo::setSaturation_10()", "photo::setContrast_10()", "photo::getSigmaSpace_10()", "photo::getSigmaColor_10()", "photo::getSaturation_10()", "photo::getContrast_10()", "photo::setScale_10()", "photo::setSaturation_10()", "photo::getScale_10()", "photo::getSaturation_10()", "photo::setThreshold_10()", "photo::setMaxIter_10()", "photo::getMaxIter_10()", "photo::getThreshold_10()", "photo::getRadiance_10()", "video::setkNNSamples_10()", "video::setShadowValue_10()", "video::setShadowThreshold_10()", "video::setNSamples_10()", "video::setHistory_10()", "video::setDist2Threshold_10()", "video::setDetectShadows_10()", "video::getkNNSamples_10()", "video::getShadowValue_10()", "video::getNSamples_10()", "video::getHistory_10()", "video::getShadowThreshold_10()", "video::getDist2Threshold_10()", "video::getDetectShadows_10()", "video::setWinSize_10()", "video::setTermCriteria_10()", "video::setMinEigThreshold_10()", "video::setMaxLevel_10()", "video::setFlags_10()", "video::getMaxLevel_10()", "video::getFlags_10()", "video::getMinEigThreshold_10()", "video::getTermCriteria_10()", "video::getWinSize_10()", "video::create_11()", "video::create_10()", "video::set_1errorCovPost_10()", "video::get_1errorCovPost_10()", "video::set_1gain_10()", "video::get_1gain_10()", "video::set_1errorCovPre_10()", "video::get_1errorCovPre_10()", "video::set_1measurementNoiseCov_10()", "video::get_1measurementNoiseCov_10()", "video::set_1processNoiseCov_10()", "video::get_1processNoiseCov_10()", "video::set_1measurementMatrix_10()", "video::get_1measurementMatrix_10()", "video::set_1controlMatrix_10()", "video::get_1controlMatrix_10()", "video::set_1transitionMatrix_10()", "video::get_1transitionMatrix_10()", "video::set_1statePost_10()", "video::get_1statePost_10()", "video::set_1statePre_10()", "video::get_1statePre_10()", "video::predict_11()", "video::predict_10()", "video::correct_10()", "video::KalmanFilter_12()", "video::KalmanFilter_11()", "video::KalmanFilter_10()", "video::calcOpticalFlowPyrLK_12()", "video::calcOpticalFlowPyrLK_11()", "video::calcOpticalFlowPyrLK_10()", "video::calcOpticalFlowFarneback_10()", "video::meanShift_10()", "video::buildOpticalFlowPyramid_11()", "video::buildOpticalFlowPyramid_10()", "video::findTransformECC_12()", "video::findTransformECC_11()", "video::findTransformECC_10()", "video::CamShift_10()", "video::createOptFlow_1DualTVL1_10()", "video::createBackgroundSubtractorMOG2_11()", "video::createBackgroundSubtractorMOG2_10()", "video::createBackgroundSubtractorKNN_11()", "video::createBackgroundSubtractorKNN_10()", "video::estimateRigidTransform_10()", "video::getBackgroundImage_10()", "video::apply_11()", "video::apply_10()", "video::collectGarbage_10()", "video::calc_10()", "video::calc_11()", "video::calc_10()", "video::setWinSize_10()", "video::setPyrScale_10()", "video::setPolySigma_10()", "video::setPolyN_10()", "video::setNumLevels_10()", "video::setNumIters_10()", "video::setFlags_10()", "video::setFastPyramids_10()", "video::getWinSize_10()", "video::getPolyN_10()", "video::getNumLevels_10()", "video::getNumIters_10()", "video::getFlags_10()", "video::getPyrScale_10()", "video::getPolySigma_10()", "video::getFastPyramids_10()", "video::create_11()", "video::create_10()", "video::setVarThresholdGen_10()", "video::setVarThreshold_10()", "video::setVarMin_10()", "video::setVarMax_10()", "video::setVarInit_10()", "video::setShadowValue_10()", "video::setShadowThreshold_10()", "video::setNMixtures_10()", "video::setHistory_10()", "video::setDetectShadows_10()", "video::setComplexityReductionThreshold_10()", "video::setBackgroundRatio_10()", "video::getShadowValue_10()", "video::getNMixtures_10()", "video::getHistory_10()", "video::getVarThresholdGen_10()", "video::getVarThreshold_10()", "video::getVarMin_10()", "video::getVarMax_10()", "video::getVarInit_10()", "video::getShadowThreshold_10()", "video::getComplexityReductionThreshold_10()", "video::getBackgroundRatio_10()", "video::getDetectShadows_10()", "video::setWarpingsNumber_10()", "video::setUseInitialFlow_10()", "video::setTheta_10()", "video::setTau_10()", "video::setScalesNumber_10()", "video::setScaleStep_10()", "video::setOuterIterations_10()", "video::setMedianFiltering_10()", "video::setLambda_10()", "video::setInnerIterations_10()", "video::setGamma_10()", "video::setEpsilon_10()", "video::getWarpingsNumber_10()", "video::getScalesNumber_10()", "video::getOuterIterations_10()", "video::getMedianFiltering_10()", "video::getInnerIterations_10()", "video::getTheta_10()", "video::getTau_10()", "video::getScaleStep_10()", "video::getLambda_10()", "video::getGamma_10()", "video::getEpsilon_10()", "video::getUseInitialFlow_10()", "video::create_11()", "video::create_10()", "imgcodecs::imwrite_11()", "imgcodecs::imwrite_10()", "imgcodecs::imreadmulti_11()", "imgcodecs::imreadmulti_10()", "imgcodecs::imencode_11()", "imgcodecs::imencode_10()", "imgcodecs::imread_11()", "imgcodecs::imread_10()", "imgcodecs::imdecode_10()", "videoio::release_10()", "videoio::get_10()", "videoio::set_10()", "videoio::retrieve_11()", "videoio::retrieve_10()", "videoio::read_10()", "videoio::open_13()", "videoio::open_12()", "videoio::open_11()", "videoio::open_10()", "videoio::isOpened_10()", "videoio::grab_10()", "videoio::VideoCapture_13()", "videoio::VideoCapture_12()", "videoio::VideoCapture_11()", "videoio::VideoCapture_10()", "videoio::write_10()", "videoio::release_10()", "videoio::fourcc_10()", "videoio::get_10()", "videoio::set_10()", "videoio::open_11()", "videoio::open_10()", "videoio::isOpened_10()", "videoio::VideoWriter_12()", "videoio::VideoWriter_11()", "videoio::VideoWriter_10()", "objdetect::groupRectangles_11()", "objdetect::groupRectangles_10()", "objdetect::get_1svmDetector_10()", "objdetect::get_1cellSize_10()", "objdetect::get_1blockStride_10()", "objdetect::get_1blockSize_10()", "objdetect::get_1winSize_10()", "objdetect::setSVMDetector_10()", "objdetect::save_11()", "objdetect::save_10()", "objdetect::detectMultiScale_11()", "objdetect::detectMultiScale_10()", "objdetect::detect_11()", "objdetect::detect_10()", "objdetect::computeGradient_11()", "objdetect::computeGradient_10()", "objdetect::compute_11()", "objdetect::compute_10()", "objdetect::getDefaultPeopleDetector_10()", "objdetect::getDaimlerPeopleDetector_10()", "objdetect::getDescriptorSize_10()", "objdetect::getWinSigma_10()", "objdetect::load_11()", "objdetect::load_10()", "objdetect::checkDetectorSize_10()", "objdetect::HOGDescriptor_13()", "objdetect::HOGDescriptor_12()", "objdetect::HOGDescriptor_11()", "objdetect::HOGDescriptor_10()", "objdetect::detectMultiScale3_11()", "objdetect::detectMultiScale3_10()", "objdetect::detectMultiScale2_11()", "objdetect::detectMultiScale2_10()", "objdetect::detectMultiScale_11()", "objdetect::detectMultiScale_10()", "objdetect::getFeatureType_10()", "objdetect::load_10()", "objdetect::isOldFormatCascade_10()", "objdetect::empty_10()", "objdetect::convert_10()", "objdetect::getOriginalWindowSize_10()", "objdetect::CascadeClassifier_11()", "objdetect::CascadeClassifier_10()", "features2d::create_10()", "features2d::FlannBasedMatcher_10()", "features2d::cluster_11()", "features2d::cluster_10()", "features2d::BOWKMeansTrainer_11()", "features2d::BOWKMeansTrainer_10()", "features2d::setPass2Only_10()", "features2d::setMinArea_10()", "features2d::setMaxArea_10()", "features2d::setDelta_10()", "features2d::detectRegions_10()", "features2d::getMinArea_10()", "features2d::getMaxArea_10()", "features2d::getDelta_10()", "features2d::getPass2Only_10()", "features2d::create_11()", "features2d::create_10()", "features2d::setWTA_1K_10()", "features2d::setScoreType_10()", "features2d::setScaleFactor_10()", "features2d::setPatchSize_10()", "features2d::setNLevels_10()", "features2d::setMaxFeatures_10()", "features2d::setFirstLevel_10()", "features2d::setFastThreshold_10()", "features2d::setEdgeThreshold_10()", "features2d::getWTA_1K_10()", "features2d::getScoreType_10()", "features2d::getPatchSize_10()", "features2d::getNLevels_10()", "features2d::getMaxFeatures_10()", "features2d::getFirstLevel_10()", "features2d::getFastThreshold_10()", "features2d::getEdgeThreshold_10()", "features2d::getScaleFactor_10()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::read_10()", "features2d::compute_11()", "features2d::compute_10()", "features2d::descriptorType_10()", "features2d::descriptorSize_10()", "features2d::empty_10()", "static cv::Ptr<cv::javaDescriptorExtractor> cv::javaDescriptorExtractor::create(int)", "features2d::create_10()", "features2d::clear_10()", "features2d::add_10()", "features2d::getDescriptors_10()", "features2d::descriptorsCount_10()", "features2d::cluster_11()", "features2d::cluster_10()", "features2d::Params_10()", "features2d::setThreshold_10()", "features2d::setNOctaves_10()", "features2d::setNOctaveLayers_10()", "features2d::setDiffusivity_10()", "features2d::setDescriptorType_10()", "features2d::setDescriptorSize_10()", "features2d::setDescriptorChannels_10()", "features2d::getNOctaves_10()", "features2d::getNOctaveLayers_10()", "features2d::getDiffusivity_10()", "features2d::getDescriptorType_10()", "features2d::getDescriptorSize_10()", "features2d::getDescriptorChannels_10()", "features2d::getThreshold_10()", "features2d::create_11()", "features2d::create_10()", "features2d::drawMatchesKnn_11()", "features2d::drawMatchesKnn_10()", "features2d::drawMatches2_11()", "features2d::drawMatches2_10()", "features2d::drawMatches_11()", "features2d::drawMatches_10()", "features2d::drawKeypoints_11()", "features2d::drawKeypoints_10()", "features2d::setUpright_10()", "features2d::setThreshold_10()", "features2d::setNOctaves_10()", "features2d::setNOctaveLayers_10()", "features2d::setExtended_10()", "features2d::setDiffusivity_10()", "features2d::getNOctaves_10()", "features2d::getNOctaveLayers_10()", "features2d::getDiffusivity_10()", "features2d::getThreshold_10()", "features2d::getUpright_10()", "features2d::getExtended_10()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::train_10()", "features2d::read_10()", "features2d::radiusMatch_13()", "features2d::radiusMatch_12()", "features2d::radiusMatch_11()", "features2d::radiusMatch_10()", "features2d::match_13()", "features2d::match_12()", "features2d::match_11()", "features2d::match_10()", "features2d::knnMatch_13()", "features2d::knnMatch_12()", "features2d::knnMatch_11()", "features2d::knnMatch_10()", "features2d::clear_10()", "features2d::add_10()", "features2d::getTrainDescriptors_10()", "features2d::isMaskSupported_10()", "features2d::empty_10()", "features2d::create_11()", "features2d::create_10()", "features2d::clone_11()", "features2d::clone_10()", "features2d::setQualityLevel_10()", "features2d::setMinDistance_10()", "features2d::setMaxFeatures_10()", "features2d::setK_10()", "features2d::setHarrisDetector_10()", "features2d::setBlockSize_10()", "features2d::getMaxFeatures_10()", "features2d::getBlockSize_10()", "features2d::getQualityLevel_10()", "features2d::getMinDistance_10()", "features2d::getK_10()", "features2d::getHarrisDetector_10()", "features2d::create_11()", "features2d::create_10()", "features2d::setType_10()", "features2d::setThreshold_10()", "features2d::setNonmaxSuppression_10()", "features2d::getType_10()", "features2d::getThreshold_10()", "features2d::getNonmaxSuppression_10()", "features2d::create_11()", "features2d::create_10()", "features2d::create_11()", "features2d::create_10()", "features2d::BFMatcher_11()", "features2d::BFMatcher_10()", "features2d::create_13()", "features2d::create_12()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::read_10()", "features2d::detectAndCompute_11()", "features2d::detectAndCompute_10()", "features2d::detect_13()", "features2d::detect_12()", "features2d::detect_11()", "features2d::detect_10()", "features2d::compute_11()", "features2d::compute_10()", "features2d::descriptorType_10()", "features2d::descriptorSize_10()", "features2d::defaultNorm_10()", "features2d::empty_10()", "features2d::setType_10()", "features2d::setThreshold_10()", "features2d::setNonmaxSuppression_10()", "features2d::getType_10()", "features2d::getThreshold_10()", "features2d::getNonmaxSuppression_10()", "features2d::create_11()", "features2d::create_10()", "features2d::write_10()", "features2d::read_10()", "features2d::detect_13()", "features2d::detect_12()", "features2d::detect_11()", "features2d::detect_10()", "features2d::empty_10()", "static cv::Ptr<cv::javaFeatureDetector> cv::javaFeatureDetector::create(int)", "features2d::create_10()", "features2d::setVocabulary_10()", "features2d::compute_10()", "features2d::descriptorType_10()", "features2d::descriptorSize_10()", "features2d::getVocabulary_10()", "N2cv6detail12PtrOwnerImplINS_5flann17KDTreeIndexParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann12SearchParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_19javaFeatureDetectorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_23javaDescriptorExtractorENS_14DefaultDeleterIS2_EEEE", "calib3d::undistortPoints_11()", "calib3d::undistortPoints_10()", "calib3d::undistortImage_11()", "calib3d::undistortImage_10()", "calib3d::stereoRectify_13()", "calib3d::stereoRectify_12()", "calib3d::projectPoints_13()", "calib3d::projectPoints_12()", "calib3d::initUndistortRectifyMap_10()", "calib3d::estimateNewCameraMatrixForUndistortRectify_11()", "calib3d::estimateNewCameraMatrixForUndistortRectify_10()", "calib3d::distortPoints_11()", "calib3d::distortPoints_10()", "calib3d::validateDisparity_11()", "calib3d::validateDisparity_10()", "calib3d::triangulatePoints_10()", "calib3d::stereoRectify_11()", "calib3d::stereoRectify_10()", "calib3d::reprojectImageTo3D_12()", "calib3d::reprojectImageTo3D_11()", "calib3d::reprojectImageTo3D_10()", "calib3d::projectPoints_11()", "calib3d::projectPoints_10()", "calib3d::matMulDeriv_10()", "calib3d::filterSpeckles_11()", "calib3d::filterSpeckles_10()", "calib3d::drawChessboardCorners_10()", "calib3d::decomposeProjectionMatrix_11()", "calib3d::decomposeProjectionMatrix_10()", "calib3d::decomposeEssentialMat_10()", "calib3d::correctMatches_10()", "calib3d::convertPointsToHomogeneous_10()", "calib3d::convertPointsFromHomogeneous_10()", "calib3d::computeCorrespondEpilines_10()", "calib3d::composeRT_11()", "calib3d::composeRT_10()", "calib3d::calibrationMatrixValues_10()", "calib3d::Rodrigues_11()", "calib3d::Rodrigues_10()", "calib3d::recoverPose_14()", "calib3d::recoverPose_13()", "calib3d::recoverPose_12()", "calib3d::recoverPose_11()", "calib3d::recoverPose_10()", "calib3d::estimateAffine3D_11()", "calib3d::estimateAffine3D_10()", "calib3d::decomposeHomographyMat_10()", "calib3d::rectify3Collinear_10()", "calib3d::stereoCalibrate_15()", "calib3d::stereoCalibrate_14()", "calib3d::stereoCalibrate_13()", "calib3d::calibrate_12()", "calib3d::calibrate_11()", "calib3d::calibrate_10()", "calib3d::stereoCalibrate_12()", "calib3d::stereoCalibrate_11()", "calib3d::stereoCalibrate_10()", "calib3d::sampsonDistance_10()", "calib3d::calibrateCamera_12()", "calib3d::calibrateCamera_11()", "calib3d::calibrateCamera_10()", "calib3d::calibrateCameraExtended_12()", "calib3d::calibrateCameraExtended_11()", "calib3d::calibrateCameraExtended_10()", "calib3d::stereoRectifyUncalibrated_11()", "calib3d::stereoRectifyUncalibrated_10()", "calib3d::solvePnPRansac_11()", "calib3d::solvePnPRansac_10()", "calib3d::solvePnP_11()", "calib3d::solvePnP_10()", "calib3d::findCirclesGrid_11()", "calib3d::findCirclesGrid_10()", "calib3d::findChessboardCorners_11()", "calib3d::findChessboardCorners_10()", "calib3d::RQDecomp3x3_11()", "calib3d::RQDecomp3x3_10()", "calib3d::getValidDisparityROI_10()", "calib3d::initCameraMatrix2D_11()", "calib3d::initCameraMatrix2D_10()", "calib3d::getOptimalNewCameraMatrix_11()", "calib3d::getOptimalNewCameraMatrix_10()", "calib3d::findHomography_12()", "calib3d::findHomography_11()", "calib3d::findHomography_10()", "calib3d::findFundamentalMat_12()", "calib3d::findFundamentalMat_11()", "calib3d::findFundamentalMat_10()", "calib3d::findEssentialMat_15()", "calib3d::findEssentialMat_14()", "calib3d::findEssentialMat_13()", "calib3d::findEssentialMat_12()", "calib3d::findEssentialMat_11()", "calib3d::findEssentialMat_10()", "calib3d::estimateAffinePartial2D_11()", "calib3d::estimateAffinePartial2D_10()", "calib3d::estimateAffine2D_11()", "calib3d::estimateAffine2D_10()", "calib3d::setSpeckleWindowSize_10()", "calib3d::setSpeckleRange_10()", "calib3d::setNumDisparities_10()", "calib3d::setMinDisparity_10()", "calib3d::setDisp12MaxDiff_10()", "calib3d::setBlockSize_10()", "calib3d::compute_10()", "calib3d::getSpeckleWindowSize_10()", "calib3d::getSpeckleRange_10()", "calib3d::getNumDisparities_10()", "calib3d::getMinDisparity_10()", "calib3d::getDisp12MaxDiff_10()", "calib3d::getBlockSize_10()", "calib3d::setUniquenessRatio_10()", "calib3d::setTextureThreshold_10()", "calib3d::setSmallerBlockSize_10()", "calib3d::setROI2_10()", "calib3d::setROI1_10()", "calib3d::setPreFilterType_10()", "calib3d::setPreFilterSize_10()", "calib3d::setPreFilterCap_10()", "calib3d::getUniquenessRatio_10()", "calib3d::getTextureThreshold_10()", "calib3d::getSmallerBlockSize_10()", "calib3d::getPreFilterType_10()", "calib3d::getPreFilterSize_10()", "calib3d::getPreFilterCap_10()", "calib3d::getROI2_10()", "calib3d::getROI1_10()", "calib3d::create_11()", "calib3d::create_10()", "calib3d::setUniquenessRatio_10()", "calib3d::setPreFilterCap_10()", "calib3d::setP2_10()", "calib3d::setP1_10()", "calib3d::setMode_10()", "calib3d::getUniquenessRatio_10()", "calib3d::getPreFilterCap_10()", "calib3d::getP2_10()", "calib3d::getP1_10()", "calib3d::getMode_10()", "calib3d::create_11()", "calib3d::create_10()", "void throw_no_cuda()", "void cvDCT(const CvArr*, CvArr*, int)", "void cvMulSpectrums(const CvArr*, const CvArr*, CvArr*, int)", "void cvDFT(const CvArr*, CvArr*, int, int)", "void cv::dct(cv::InputArray, cv::OutputArray, int)", "void cv::mulSpectrums(cv::InputArray, cv::InputArray, cv::OutputArray, int, bool)", "void cv::dft(cv::InputArray, cv::OutputArray, int, int)", "virtual void cv::OcvDctImpl::apply(const uchar*, size_t, uchar*, size_t)", "virtual void cv::OcvDftImpl::apply(const uchar*, size_t, uchar*, size_t)", "static cv::Ptr<cv::hal::DFT2D> cv::hal::DFT2D::create(int, int, int, int, int, int, int)", "void cv::RealDFT(const cv::OcvDftOptions&, const T*, T*) [with T = float]", "void cv::DFT(const cv::OcvDftOptions&, const cv::Complex<_Tp>*, cv::Complex<_Tp>*) [with T = float]", "void cv::CCSIDFT(const cv::OcvDftOptions&, const T*, T*) [with T = float]", "void cv::RealDFT(const cv::OcvDftOptions&, const T*, T*) [with T = double]", "void cv::DFT(const cv::OcvDftOptions&, const cv::Complex<_Tp>*, cv::Complex<_Tp>*) [with T = double]", "void cv::CCSIDFT(const cv::OcvDftOptions&, const T*, T*) [with T = double]", "void cv::OcvDftBasicImpl::init(int, int, int, int, bool*)", "0Y\r@:i\r", "PF SdF", " [@W:[", "N2cv3hal5DFT2DE", "N2cv3hal5DCT2DE", "N2cv10OcvDftImplE", "N2cv15OcvDftBasicImplE", "N2cv18DctIPPLoop_InvokerE", "N2cv10OcvDctImplE", "N2cv21Dft_C_IPPLoop_InvokerINS_16IPPDFT_C_FunctorEEE", "N2cv21Dft_R_IPPLoop_InvokerINS_16IPPDFT_R_FunctorEEE", "N2cv6detail12PtrOwnerImplINS_15OcvDftBasicImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDftImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDctImplENS_14DefaultDeleterIS2_EEEE", "bool cv::CommandLineParser::has(const cv::String&) const", "void cv::CommandLineParser::getByIndex(int, bool, int, void*) const", "void cv::from_str(const cv::String&, int, void*)", "void cv::CommandLineParser::getByName(const cv::String&, bool, int, void*) const", "virtual void cv::DownhillSolverImpl::setTermCriteria(const cv::TermCriteria&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::DownhillSolverImpl::updateCoordSum(const cv::Mat&, cv::Mat&)", "double cv::DownhillSolverImpl::calc_f(const double*)", "double cv::DownhillSolverImpl::innerDownhillSimplex(cv::Mat&, double, double, int&, int)", "void cv::DownhillSolverImpl::createInitialSimplex(const cv::Mat&, cv::Mat&, cv::Mat&)", "virtual double cv::DownhillSolverImpl::minimize(cv::InputOutputArray)", "N2cv16MinProblemSolverE", "N2cv14DownhillSolverE", "N2cv18DownhillSolverImplE", "N2cv6detail12PtrOwnerImplINS_18DownhillSolverImplENS_14DefaultDeleterIS2_EEEE", "cv::Mat::Mat(int, int, int, void*, size_t)", "double cv::kmeans(cv::InputArray, int, cv::InputOutputArray, cv::TermCriteria, int, int, cv::OutputArray)", "N2cv24KMeansPPDistanceComputerE", "N2cv22KMeansDistanceComputerE", "virtual void cv::ConjGradSolverImpl::setTermCriteria(const cv::TermCriteria&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual double cv::ConjGradSolverImpl::minimize(cv::InputOutputArray)", "N2cv16MinProblemSolver8FunctionE", "N2cv14ConjGradSolverE", "N2cv18ConjGradSolverImplE", "N2cv6detail12PtrOwnerImplINS_18ConjGradSolverImplENS_14DefaultDeleterIS2_EEEE", "void glob_rec(const cv::String&, const cv::String&, std::vector<cv::String>&, bool)", "void cv::hal::mul32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::mul16s(const short int*, size_t, const short int*, size_t, short int*, size_t, int, int, void*)", "void cv::hal::mul16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::mul8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp32f(const float*, size_t, const float*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp16s(const short int*, size_t, const short int*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp16u(const ushort*, size_t, const ushort*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::cmp8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::not8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::xor8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::or8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::and8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::absdiff32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::absdiff16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::absdiff8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::min64f(const double*, size_t, const double*, size_t, double*, size_t, int, int, void*)", "void cv::hal::min32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::min16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::min8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::max64f(const double*, size_t, const double*, size_t, double*, size_t, int, int, void*)", "void cv::hal::max32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::max16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::max8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::sub32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::sub16s(const short int*, size_t, const short int*, size_t, short int*, size_t, int, int, void*)", "void cv::hal::sub16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::sub8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cv::hal::add32f(const float*, size_t, const float*, size_t, float*, size_t, int, int, void*)", "void cv::hal::add16s(const short int*, size_t, const short int*, size_t, short int*, size_t, int, int, void*)", "void cv::hal::add16u(const ushort*, size_t, const ushort*, size_t, ushort*, size_t, int, int, void*)", "void cv::hal::add8u(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*)", "void cvMaxS(const void*, double, void*)", "void cvMinS(const void*, double, void*)", "void cvMax(const void*, const void*, void*)", "void cvMin(const void*, const void*, void*)", "void cvCmpS(const void*, double, void*, int)", "void cvCmp(const void*, const void*, void*, int)", "void cvInRangeS(const void*, CvScalar, CvScalar, void*)", "void cvInRange(const void*, const void*, const void*, void*)", "void cvAbsDiffS(const CvArr*, CvArr*, CvScalar)", "void cvAbsDiff(const CvArr*, const CvArr*, CvArr*)", "void cvAddWeighted(const CvArr*, double, const CvArr*, double, double, CvArr*)", "void cvDiv(const CvArr*, const CvArr*, CvArr*, double)", "void cvMul(const CvArr*, const CvArr*, CvArr*, double)", "void cvSubRS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvAddS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvSub(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvAdd(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvXorS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvOrS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvAndS(const CvArr*, CvScalar, CvArr*, const CvArr*)", "void cvXor(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvOr(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvAnd(const CvArr*, const CvArr*, CvArr*, const CvArr*)", "void cvNot(const CvArr*, CvArr*)", "void cv::inRange(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::compare(cv::InputArray, cv::InputArray, cv::OutputArray, int)", "void cv::arithm_op(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray, int, void (**)(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*), bool, void*, int)", "void cv::binary_op(cv::InputArray, cv::InputArray, cv::OutputArray, cv::InputArray, void (* const*)(const uchar*, size_t, const uchar*, size_t, uchar*, size_t, int, int, void*), bool, int)", "void cv::convertAndUnrollScalar(const cv::Mat&, int, uchar*, size_t)", "void cv::directx::convertFromDirect3DSurface9(IDirect3DSurface9*, cv::OutputArray, void*)", "void cv::directx::convertToDirect3DSurface9(cv::InputArray, IDirect3DSurface9*, void*)", "void cv::directx::convertFromD3D10Texture2D(ID3D10Texture2D*, cv::OutputArray)", "void cv::directx::convertToD3D10Texture2D(cv::InputArray, ID3D10Texture2D*)", "void cv::directx::convertFromD3D11Texture2D(ID3D11Texture2D*, cv::OutputArray)", "void cv::directx::convertToD3D11Texture2D(cv::InputArray, ID3D11Texture2D*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromDirect3DDevice9(IDirect3DDevice9*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromDirect3DDevice9Ex(IDirect3DDevice9Ex*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromD3D10Device(ID3D10Device*)", "cv::ocl::Context& cv::directx::ocl::initializeContextFromD3D11Device(ID3D11Device*)", "int cv::directx::getTypeFromD3DFORMAT(int)", "int cv::directx::getTypeFromDXGI_FORMAT(int)", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = unsigned char]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = short unsigned int]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<unsigned char, 3>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = int]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<short unsigned int, 3>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 2>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 3>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 4>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 6>]", "void cv::randShuffle_(cv::Mat&, cv::RNG&, double) [with T = cv::Vec<int, 8>]", "void cv::randShuffle(cv::InputOutputArray, double, cv::RNG*)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "void cv::RNG::fill(cv::InputOutputArray, int, cv::InputArray, cv::InputArray, bool)", "void cvAvgSdv(const CvArr*, CvScalar*, CvScalar*, const void*)", "CvScalar cvAvg(const void*, const void*)", "CvScalar cvSum(const CvArr*)", "double cv::PSNR(cv::InputArray, cv::InputArray)", "void cv::findNonZero(cv::InputArray, cv::OutputArray)", "void cv::batchDistance(cv::InputArray, cv::InputArray, cv::OutputArray, int, cv::OutputArray, int, int, cv::InputArray, int, bool)", "bool cv::ipp_norm(cv::InputArray, cv::InputArray, int, cv::InputArray, double&)", "double cv::norm(cv::InputArray, cv::InputArray, int, cv::InputArray)", "bool cv::ipp_norm(cv::Mat&, int, cv::Mat&, double&)", "double cv::norm(cv::InputArray, int, cv::InputArray)", "void cv::minMaxLoc(cv::InputArray, double*, double*, cv::Point*, cv::Point*, cv::InputArray)", "void cv::minMaxIdx(cv::InputArray, double*, double*, int*, int*, cv::InputArray)", "void cv::meanStdDev(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::InputArray)", "cv::Scalar cv::mean(cv::InputArray, cv::InputArray)", "int cv::countNonZero(cv::InputArray)", "cv::Scalar cv::sum(cv::InputArray)", "double cv::UMat::dot(cv::InputArray) const", "void cv::UMat::copyTo(cv::OutputArray) const", "void* cv::UMat::handle(int) const", "cv::Mat cv::UMat::getMat(int) const", "cv::UMat cv::UMat::reshape(int, int, const int*) const", "static cv::UMat cv::UMat::diag(const cv::UMat&)", "cv::UMat cv::UMat::reshape(int, int) const", "cv::UMat& cv::UMat::adjustROI(int, int, int, int)", "void cv::UMat::locateROI(cv::Size&, cv::Point&) const", "cv::UMat cv::UMat::diag(int) const", "cv::UMat::UMat(const cv::UMat&, const std::vector<cv::Range>&)", "cv::UMat::UMat(const cv::UMat&, const cv::Range*)", "cv::UMat::UMat(const cv::UMat&, const Rect&)", "cv::UMat::UMat(const cv::UMat&, const cv::Range&, const cv::Range&)", "void cv::UMat::create(int, const int*, int, cv::UMatUsageFlags)", "cv::UMat cv::Mat::getUMat(int, cv::UMatUsageFlags) const", "void cv::setSize(cv::UMat&, int, const int*, const size_t*, bool)", "cv::UMatData::~UMatData()", "void cvNormalize(const CvArr*, CvArr*, double, double, int, const CvArr*)", "void cvLUT(const void*, void*, const void*)", "void cvConvertScale(const void*, void*, double, double)", "void cvConvertScaleAbs(const void*, void*, double, double)", "void cvMerge(const void*, const void*, const void*, const void*, void*)", "void cvSplit(const void*, void*, void*, void*, void*)", "void cv::normalize(cv::InputArray, cv::InputOutputArray, double, double, int, int, cv::InputArray)", "cv::ipp::IppLUTParallelBody_LUTCN::IppLUTParallelBody_LUTCN(const cv::Mat&, const cv::Mat&, cv::Mat&, bool*)", "virtual void cv::ipp::IppLUTParallelBody_LUTCN::operator()(const cv::Range&) const", "void cv::LUT(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::Mat::convertTo(cv::OutputArray, int, double, double) const", "void cv::convertFp16(cv::InputArray, cv::OutputArray)", "void cv::convertScaleAbs(cv::InputArray, cv::OutputArray, double, double)", "void cv::insertChannel(cv::InputArray, cv::InputOutputArray, int)", "void cv::extractChannel(cv::InputArray, cv::OutputArray, int)", "void cv::mixChannels(cv::InputArrayOfArrays, cv::InputOutputArrayOfArrays, const std::vector<int>&)", "void cv::mixChannels(cv::InputArrayOfArrays, cv::InputOutputArrayOfArrays, const int*, size_t)", "void cv::mixChannels(const cv::Mat*, size_t, cv::Mat*, size_t, const int*, size_t)", "void cv::merge(const cv::Mat*, size_t, cv::OutputArray)", "void cv::split(cv::InputArray, cv::OutputArrayOfArrays)", "void cv::split(const cv::Mat&, cv::Mat*)", "N2cv3ipp24IppLUTParallelBody_LUTCNE", "N2cv15LUTParallelBodyE", "N2cv6detail12PtrOwnerImplINS_16ParallelLoopBodyENS_14DefaultDeleterIS2_EEEE", "cv::Mat cv::asRowMatrix(cv::InputArrayOfArrays, int, double, double)", "void cv::LDA::compute(cv::InputArrayOfArrays, cv::InputArray)", "void cv::sortMatrixColumnsByIndices(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat cv::argsort(cv::InputArray, bool)", "void cv::LDA::lda(cv::InputArrayOfArrays, cv::InputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "void cv::LDA::load(const cv::String&)", "void cv::LDA::save(const cv::String&) const", "static cv::Mat cv::LDA::subspaceReconstruct(cv::InputArray, cv::InputArray, cv::InputArray)", "static cv::Mat cv::LDA::subspaceProject(cv::InputArray, cv::InputArray, cv::InputArray)", "_IplImage::_IplImage(const cv::Mat&)", "cv::RotatedRect::RotatedRect(const Point2f&, const Point2f&, const Point2f&)", "void cv::normalize(const cv::SparseMat&, cv::SparseMat&, double, int)", "void cv::minMaxLoc(const cv::SparseMat&, double*, double*, int*, int*)", "double cv::norm(const cv::SparseMat&, int)", "void cv::SparseMat::erase(const int*, size_t*)", "void cv::SparseMat::erase(int, int, int, size_t*)", "void cv::SparseMat::erase(int, int, size_t*)", "uchar* cv::SparseMat::ptr(const int*, bool, size_t*)", "uchar* cv::SparseMat::ptr(int, int, int, bool, size_t*)", "uchar* cv::SparseMat::ptr(int, int, bool, size_t*)", "uchar* cv::SparseMat::ptr(int, bool, size_t*)", "void cv::SparseMat::convertTo(cv::Mat&, int, double, double) const", "void (* cv::getConvertScaleElem(int, int))(const void*, void*, int, double, double)", "void (* cv::getConvertElem(int, int))(const void*, void*, int)", "void cv::SparseMat::convertTo(cv::SparseMat&, int, double) const", "void cv::SparseMat::copyTo(cv::Mat&) const", "void cv::SparseMat::create(int, const int*, int)", "void cv::MatConstIterator::pos(int*) const", "void cv::NAryMatIterator::init(const cv::Mat**, cv::Mat*, uchar**, int)", "cv::Mat cv::Mat::reshape(int, int, const int*) const", "int cvKMeans2(const CvArr*, int, CvArr*, CvTermCriteria, int, CvRNG*, int, CvArr*, double*)", "void cvSort(const CvArr*, CvArr*, CvArr*, int)", "CvArr* cvRange(CvArr*, double, double)", "void cvReduce(const CvArr*, CvArr*, int, int)", "void cvCrossProduct(const CvArr*, const CvArr*, CvArr*)", "void cvTranspose(const CvArr*, CvArr*)", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = unsigned char]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = signed char]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = short unsigned int]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = short int]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = int]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = float]", "void cv::sortIdx_(const cv::Mat&, cv::Mat&, int) [with T = double]", "void cv::sortIdx(cv::InputArray, cv::OutputArray, int)", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = unsigned char]", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = signed char]", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = short unsigned int]", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = short int]", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = int]", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = float]", "void cv::sort_(const cv::Mat&, cv::Mat&, int) [with T = double]", "void cv::sort(cv::InputArray, cv::OutputArray, int)", "void reduceSumC_8u16u16s32f_64f(const cv::Mat&, cv::Mat&)", "void cv::reduce(cv::InputArray, cv::OutputArray, int, int, int)", "cv::Mat cv::Mat::cross(cv::InputArray) const", "void cv::completeSymm(cv::InputOutputArray, bool)", "void cv::transpose(cv::InputArray, cv::OutputArray)", "cv::Scalar cv::trace(cv::InputArray)", "void cv::setIdentity(cv::InputOutputArray, const Scalar&)", "void cv::vconcat(const cv::Mat*, size_t, cv::OutputArray)", "void cv::hconcat(const cv::Mat*, size_t, cv::OutputArray)", "void cv::_OutputArray::assign(const cv::Mat&) const", "void cv::_OutputArray::assign(const cv::UMat&) const", "void cv::_OutputArray::setTo(const cv::_InputArray&, const cv::_InputArray&) const", "cv::cuda::HostMem& cv::_OutputArray::getHostMemRef() const", "cv::ogl::Buffer& cv::_OutputArray::getOGlBufferRef() const", "std::vector<cv::cuda::GpuMat>& cv::_OutputArray::getGpuMatVecRef() const", "cv::cuda::GpuMat& cv::_OutputArray::getGpuMatRef() const", "cv::UMat& cv::_OutputArray::getUMatRef(int) const", "cv::Mat& cv::_OutputArray::getMatRef(int) const", "void cv::_OutputArray::clear() const", "void cv::_OutputArray::release() const", "void cv::_OutputArray::create(int, const int*, int, int, bool, int) const", "void cv::_OutputArray::create(int, int, int, int, bool, int) const", "void cv::_OutputArray::create(cv::Size, int, int, bool, int) const", "void cv::_InputArray::copyTo(const cv::_OutputArray&, const cv::_InputArray&) const", "void cv::_InputArray::copyTo(const cv::_OutputArray&) const", "size_t cv::_InputArray::step(int) const", "size_t cv::_InputArray::offset(int) const", "bool cv::_InputArray::isSubmatrix(int) const", "bool cv::_InputArray::isContinuous(int) const", "bool cv::_InputArray::empty() const", "int cv::_InputArray::type(int) const", "size_t cv::_InputArray::total(int) const", "int cv::_InputArray::dims(int) const", "int cv::_InputArray::sizend(int*, int) const", "cv::Size cv::_InputArray::size(int) const", "cv::ogl::Buffer cv::_InputArray::getOGlBuffer() const", "cv::cuda::GpuMat cv::_InputArray::getGpuMat() const", "void cv::_InputArray::getUMatVector(std::vector<cv::UMat>&) const", "void cv::_InputArray::getMatVector(std::vector<cv::Mat>&) const", "cv::UMat cv::_InputArray::getUMat(int) const", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "cv::Mat cv::_InputArray::getMat_(int) const", "void cv::scalarToRawData(const Scalar&, void*, int, int)", "static cv::Mat cv::Mat::diag(const cv::Mat&)", "cv::Mat cv::Mat::reshape(int, int) const", "void cv::insertImageCOI(cv::InputArray, CvArr*, int)", "void cv::extractImageCOI(const CvArr*, cv::OutputArray, int)", "cv::Mat& cv::Mat::adjustROI(int, int, int, int)", "void cv::Mat::locateROI(cv::Size&, cv::Point&) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat cv::iplImageToMat(const IplImage*, bool)", "cv::Mat cv::cvarrToMat(const CvArr*, bool, bool, int, cv::AutoBuffer<double>*)", "void cv::Mat::push_back(const cv::Mat&)", "void cv::Mat::resize(size_t)", "void cv::Mat::reserve(size_t)", "void cv::Mat::pop_back(size_t)", "cv::Mat cv::Mat::diag(int) const", "cv::Mat::Mat(const cv::Mat&, const std::vector<cv::Range>&)", "cv::Mat::Mat(const cv::Mat&, const cv::Range*)", "cv::Mat::Mat(const cv::Mat&, const Rect&)", "cv::Mat::Mat(const cv::Mat&, const cv::Range&, const cv::Range&)", "void cv::setSize(cv::Mat&, int, const int*, const size_t*, bool)", "void cv::Mat::create(int, const int*, int)", "virtual cv::UMatData* cv::StdMatAllocator::allocate(int, const int*, int, void*, size_t*, int, cv::UMatUsageFlags) const", "virtual void cv::MatAllocator::copy(cv::UMatData*, cv::UMatData*, int, const size_t*, const size_t*, const size_t*, const size_t*, const size_t*, bool) const", "virtual void cv::MatAllocator::upload(cv::UMatData*, const void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "virtual void cv::MatAllocator::download(cv::UMatData*, void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "virtual void cv::StdMatAllocator::deallocate(cv::UMatData*) const", "N2cv20BufferPoolControllerE", "N2cv12MatAllocatorE", "N2cv25DummyBufferPoolControllerE", "N2cv15StdMatAllocatorE", "static void cv::KeyPoint::convert(const std::vector<cv::KeyPoint>&, std::vector<cv::Point_<float> >&, const std::vector<int>&)", "void cv::TlsStorage::setData(size_t, void*)", "void* cv::TlsStorage::getData(size_t) const", "void cv::TlsStorage::releaseSlot(size_t, std::vector<void*>&)", "void cv::TlsStorage::gather(size_t, std::vector<void*>&)", "virtual cv::TLSDataContainer::~TLSDataContainer()", "void cv::TlsAbstraction::SetData(void*)", "cv::TlsAbstraction::~TlsAbstraction()", "cv::TlsAbstraction::TlsAbstraction()", "N2cv9ExceptionE", "N2cv16TLSDataContainerE", "N2cv7TLSDataINS_5instr11NodeDataTlsEEE", "N2cv7TLSDataINS_11CoreTLSDataEEE", "void throw_no_cuda()", "void cvSolvePoly(const CvMat*, CvMat*, int, int)", "int cvSolveCubic(const CvMat*, CvMat*)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "double cv::solvePoly(cv::InputArray, cv::OutputArray, int)", "int cv::solveCubic(cv::InputArray, cv::OutputArray)", "void cvPow(const CvArr*, CvArr*, double)", "void cvLog(const CvArr*, CvArr*)", "void cvExp(const CvArr*, CvArr*)", "void cvPolarToCart(const CvArr*, const CvArr*, CvArr*, CvArr*, int)", "void cvCartToPolar(const CvArr*, const CvArr*, CvArr*, CvArr*, int)", "void cv::patchNaNs(cv::InputOutputArray, double)", "bool cv::checkRange(cv::InputArray, bool, cv::Point*, double, double)", "void cv::pow(cv::InputArray, double, cv::OutputArray)", "void cv::log(cv::InputArray, cv::OutputArray)", "void cv::exp(cv::InputArray, cv::OutputArray)", "void cv::cartToPolar(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, bool)", "void cv::phase(cv::InputArray, cv::InputArray, cv::OutputArray, bool)", "void cv::magnitude(cv::InputArray, cv::InputArray, cv::OutputArray)", "int cv::ocl::checkOptimalVectorWidth(const int*, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::ocl::OclVectorStrategy)", "cv::String cv::ocl::kernelToStr(cv::InputArray, int, const char*)", "void cv::ocl::getPlatforms(std::vector<_cl_platform_id*>&)", "void cv::ocl::PlatformInfo::getDevice(cv::ocl::Device&, int) const", "void cv::ocl::getDevices(std::vector<_cl_device_id*>&, cl_platform_id)", "void cv::ocl::convertFromImage(void*, cv::UMat&)", "void cv::ocl::convertFromBuffer(void*, size_t, int, int, int, cv::UMat&)", "size_t getConfigurationParameterForSize(const char*, size_t)", "cv::ocl::OpenCLBufferPoolBaseImpl<Derived, BufferEntry, T>::~OpenCLBufferPoolBaseImpl() [with Derived = cv::ocl::OpenCLBufferPoolImpl; BufferEntry = cv::ocl::CLBufferEntry; T = _cl_mem*]", "void cv::ocl::OpenCLBufferPoolImpl::_allocateBufferEntry(cv::ocl::OpenCLBufferPoolImpl::BufferEntry&, size_t)", "virtual cv::UMatData* cv::ocl::OpenCLAllocator::allocate(int, const int*, int, void*, size_t*, int, cv::UMatUsageFlags) const", "virtual bool cv::ocl::OpenCLAllocator::allocate(cv::UMatData*, int, cv::UMatUsageFlags) const", "virtual void cv::ocl::OpenCLAllocator::map(cv::UMatData*, int) const", "virtual void cv::ocl::OpenCLAllocator::unmap(cv::UMatData*) const", "virtual void cv::ocl::OpenCLAllocator::download(cv::UMatData*, void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "virtual void cv::ocl::OpenCLAllocator::upload(cv::UMatData*, const void*, int, const size_t*, const size_t*, const size_t*, const size_t*) const", "bool cv::ocl::OpenCLAllocator::checkContinuous(int, const size_t*, const size_t*, const size_t*, const size_t*, const size_t*, size_t&, size_t*, size_t&, size_t*, size_t*, size_t&, size_t*, size_t*) const", "virtual void cv::ocl::OpenCLAllocator::copy(cv::UMatData*, cv::UMatData*, int, const size_t*, const size_t*, const size_t*, const size_t*, const size_t*, bool) const", "virtual cv::BufferPoolController* cv::ocl::OpenCLAllocator::getBufferPoolController(const char*) const", "cv::ocl::Program::Impl::Impl(const cv::String&, const cv::String&)", "bool cv::ocl::Kernel::runTask(bool, const cv::ocl::Queue&)", "bool cv::ocl::Kernel::run(int, size_t*, size_t*, bool, const cv::ocl::Queue&)", "void cv::ocl::Kernel::Impl::addUMat(const cv::UMat&, bool)", "int cv::ocl::Kernel::set(int, const cv::ocl::KernelArg&)", "void cv::ocl::OpenCLBufferPoolImpl::_releaseBufferEntry(const BufferEntry&)", "void cv::ocl::OpenCLBufferPoolBaseImpl<Derived, BufferEntry, T>::release(T) [with Derived = cv::ocl::OpenCLBufferPoolImpl; BufferEntry = cv::ocl::CLBufferEntry; T = _cl_mem*]", "virtual void cv::ocl::OpenCLAllocator::deallocate(cv::UMatData*) const", "int cv::ocl::Kernel::set(int, const void*, size_t)", "cv::ocl::Kernel::Impl::Impl(const char*, const cv::ocl::Program&)", "static cv::ocl::KernelArg cv::ocl::KernelArg::Constant(const cv::Mat&)", "void cv::ocl::Queue::finish()", "cv::ocl::Queue::Impl::Impl(const cv::ocl::Context&, const cv::ocl::Device&)", "void cv::ocl::initializeContextFromHandle(cv::ocl::Context&, void*, void*, void*)", "void cv::ocl::get_platform_name(cl_platform_id, cv::String&)", "void cv::ocl::attachContext(const cv::String&, void*, void*, void*)", "void cv::ocl::Context::setUseSVM(bool)", "_cl_device_id* cv::ocl::selectOpenCLDevice()", "void cv::ocl::Context::Impl::setDefault()", "cv::ocl::Context::Impl::Impl(int)", "void cv::ocl::Device::maxWorkItemSizes(size_t*) const", "bool getBoolParameter(const char*, bool)", "void cv::ocl::Platform::Impl::init()", "N2cv3ocl16OpenCLBufferPoolIP7_cl_memEE", "N2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memEE", "N2cv3ocl20OpenCLBufferPoolImplE", "N2cv3ocl15OpenCLAllocatorE", "int cv::solveLP(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void cvRepeat(const CvArr*, CvArr*)", "void cvFlip(const CvArr*, CvArr*, int)", "void cvCopy(const void*, void*, const void*)", "void cv::copyMakeBorder(cv::InputArray, cv::OutputArray, int, int, int, int, int, const Scalar&)", "int cv::borderInterpolate(int, int, int)", "void cv::repeat(cv::InputArray, int, int, cv::OutputArray)", "void cv::rotate(cv::InputArray, cv::OutputArray, int)", "void cv::flip(cv::InputArray, cv::OutputArray, int)", "cv::Mat& cv::Mat::setTo(cv::InputArray, cv::InputArray)", "void cv::Mat::copyTo(cv::OutputArray, cv::InputArray) const", "void cv::Mat::copyTo(cv::OutputArray) const", "cv::cuda::HostMem cv::cuda::HostMem::reshape(int, int) const", "void throw_no_cuda()", "void cv::setUseOpenVX(bool)", "CvTermCriteria cvCheckTermCriteria(CvTermCriteria, double, int)", "IplImage* cvCloneImage(const IplImage*)", "int cvGetImageCOI(const IplImage*)", "void cvSetImageCOI(IplImage*, int)", "CvRect cvGetImageROI(const IplImage*)", "void cvResetImageROI(IplImage*)", "void cvSetImageROI(IplImage*, CvRect)", "void cvReleaseImage(IplImage**)", "void cvReleaseImageHeader(IplImage**)", "IplImage* cvInitImageHeader(IplImage*, CvSize, int, int, int, int)", "IplImage* cvGetImage(const CvArr*, IplImage*)", "CvMat* cvReshape(const CvArr*, CvMat*, int, int)", "CvArr* cvReshapeMatND(const CvArr*, int, CvArr*, int, int, int*)", "CvMat* cvGetMat(const CvArr*, CvMat*, int*, int)", "void icvDeleteNode(CvSparseMat*, const int*, unsigned int*)", "void cvSetRealND(CvArr*, const int*, double)", "void cvSetReal3D(CvArr*, int, int, int, double)", "void cvSetReal2D(CvArr*, int, int, double)", "void cvSetReal1D(CvArr*, int, double)", "void cvSet2D(CvArr*, int, int, CvScalar)", "void cvSet1D(CvArr*, int, CvScalar)", "double cvGetRealND(const CvArr*, const int*)", "double cvGetReal3D(const CvArr*, int, int, int)", "double cvGetReal2D(const CvArr*, int, int)", "double cvGetReal1D(const CvArr*, int)", "CvScalar cvGet2D(const CvArr*, int, int)", "CvScalar cvGet1D(const CvArr*, int)", "uchar* cvPtrND(const CvArr*, const int*, int*, int, unsigned int*)", "uchar* cvPtr3D(const CvArr*, int, int, int, int*)", "uchar* cvPtr2D(const CvArr*, int, int, int*)", "uchar* icvGetNodePtr(CvSparseMat*, const int*, int*, int, unsigned int*)", "uchar* cvPtr1D(const CvArr*, int, int*)", "void cvRawDataToScalar(const void*, int, CvScalar*)", "void cvScalarToRawData(const CvScalar*, void*, int, int)", "CvMat* cvGetDiag(const CvArr*, CvMat*, int)", "CvMat* cvGetCols(const CvArr*, CvMat*, int, int)", "CvMat* cvGetRows(const CvArr*, CvMat*, int, int, int)", "CvMat* cvGetSubRect(const CvArr*, CvMat*, CvRect)", "CvSize cvGetSize(const CvArr*)", "int cvGetDimSize(const CvArr*, int)", "int cvGetDims(const CvArr*, int*)", "int cvGetElemType(const CvArr*)", "void cvGetRawData(const CvArr*, uchar**, int*, CvSize*)", "void cvReleaseData(CvArr*)", "void cvSetData(CvArr*, void*, int)", "void cvCreateData(CvArr*)", "CvSparseNode* cvInitSparseMatIterator(const CvSparseMat*, CvSparseMatIterator*)", "CvSparseMat* cvCloneSparseMat(const CvSparseMat*)", "void cvReleaseSparseMat(CvSparseMat**)", "CvSparseMat* cvCreateSparseMat(int, const int*, int)", "CvMatND* cvGetMatND(const CvArr*, CvMatND*, int*)", "int cvInitNArrayIterator(int, CvArr**, const CvArr*, CvMatND*, CvNArrayIterator*, int)", "CvMatND* cvCloneMatND(const CvMatND*)", "CvMatND* cvCreateMatNDHeader(int, const int*, int)", "CvMatND* cvInitMatNDHeader(CvMatND*, int, const int*, int, void*)", "CvMat* cvCloneMat(const CvMat*)", "void cvReleaseMat(CvMat**)", "CvMat* cvInitMatHeader(CvMat*, int, int, int, void*, int)", "CvMat* cvCreateMatHeader(int, int, int)", "void cvSetIPLAllocators(Cv_iplCreateImageHeader, Cv_iplAllocateImageData, Cv_iplDeallocate, Cv_iplCreateROI, Cv_iplCloneImage)", "*N12_GLOBAL__N_123ParallelLoopBodyWrapperE", "*N12_GLOBAL__N_113ProxyLoopBodyE", "*N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN12_GLOBAL__N_113ProxyLoopBodyEKNS_16auto_partitionerEEE", "N2cv16ParallelLoopBodyE", "N3tbb10interface98internal9flag_taskE", "void cv::PCA::backProject(cv::InputArray, cv::OutputArray) const", "void cv::PCA::project(cv::InputArray, cv::OutputArray) const", "cv::PCA& cv::PCA::operator()(cv::InputArray, cv::InputArray, int, double)", "void cv::PCA::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "void cv::PCA::write(cv::FileStorage&) const", "cv::PCA& cv::PCA::operator()(cv::InputArray, cv::InputArray, int, int)", "void* IntGetProcAddress(const char*)", "virtual void cv::MatOp_Bin::assign(const cv::MatExpr&, cv::Mat&, int) const", "virtual void cv::MatOp_Identity::assign(const cv::MatExpr&, cv::Mat&, int) const", "N2cv5MatOpE", "N2cv14MatOp_IdentityE", "N2cv11MatOp_AddExE", "N2cv9MatOp_BinE", "N2cv9MatOp_CmpE", "N2cv10MatOp_GEMME", "N2cv12MatOp_InvertE", "N2cv7MatOp_TE", "N2cv11MatOp_SolveE", "N2cv17MatOp_InitializerE", "void cv::ogl::unmapGLBuffer(cv::UMat&)", "cv::UMat cv::ogl::mapGLBuffer(const cv::ogl::Buffer&, int)", "void cv::ogl::convertFromGLTexture2D(const cv::ogl::Texture2D&, cv::OutputArray)", "void cv::ogl::convertToGLTexture2D(cv::InputArray, cv::ogl::Texture2D&)", "cv::ocl::Context& cv::ogl::ocl::initializeContextFromGL()", "void cv::ogl::Arrays::setTexCoordArray(cv::InputArray)", "void cv::ogl::Arrays::setNormalArray(cv::InputArray)", "void cv::ogl::Arrays::setColorArray(cv::InputArray)", "void cv::ogl::Arrays::setVertexArray(cv::InputArray)", "void {anonymous}::throw_no_ogl()", "void cvSVD(CvArr*, CvArr*, CvArr*, CvArr*, int)", "void cvEigenVV(CvArr*, CvArr*, CvArr*, double, int, int)", "int cvSolve(const CvArr*, const CvArr*, CvArr*, int)", "double cvInvert(const CvArr*, CvArr*, int)", "double cvDet(const CvArr*)", "static void cv::SVD::backSubst(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::_SVDcompute(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int)", "bool cv::eigen(cv::InputArray, cv::OutputArray, cv::OutputArray)", "bool cv::solve(cv::InputArray, cv::InputArray, cv::OutputArray, int)", "double cv::invert(cv::InputArray, cv::OutputArray, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "double cv::determinant(cv::InputArray)", "cv::FormattedImpl::FormattedImpl(cv::String, cv::String, cv::Mat, char*, bool, bool, int)", "N2cv9FormattedE", "N2cv9FormatterE", "N2cv13FormattedImplE", "N2cv13FormatterBaseE", "N2cv16DefaultFormatterE", "N2cv15MatlabFormatterE", "N2cv15PythonFormatterE", "N2cv14NumpyFormatterE", "N2cv12CSVFormatterE", "N2cv10CFormatterE", "N2cv6detail12PtrOwnerImplINS_13FormattedImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16DefaultFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15MatlabFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12CSVFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15PythonFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_14NumpyFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10CFormatterENS_14DefaultDeleterIS2_EEEE", "void cv::va_intel::convertFromVASurface(VADisplay, VASurfaceID, cv::Size, cv::OutputArray)", "void cv::va_intel::convertToVASurface(VADisplay, cv::InputArray, VASurfaceID, cv::Size)", "cv::ocl::Context& cv::va_intel::ocl::initializeContextFromVA(VADisplay, bool)", "void throw_no_cuda()", "cv::cuda::GpuMat cv::cuda::GpuMat::reshape(int, int) const", "cv::cuda::GpuMat::GpuMat(const cv::cuda::GpuMat&, cv::Rect)", "cv::cuda::GpuMat::GpuMat(const cv::cuda::GpuMat&, cv::Range, cv::Range)", "void* icvReadSeq(CvFileStorage*, CvFileNode*)", "void* icvReadSeqTree(CvFileStorage*, CvFileNode*)", "void icvReleaseGraph(void**)", "void* icvReadGraph(CvFileStorage*, CvFileNode*)", "void icvWriteHeaderData(CvFileStorage*, const CvSeq*, CvAttrList*, int)", "char* icvGetFormat(const CvSeq*, const char*, CvAttrList*, int, char*)", "void* icvReadSparseMat(CvFileStorage*, CvFileNode*)", "void* icvReadImage(CvFileStorage*, CvFileNode*)", "void icvWriteImage(CvFileStorage*, const char*, const void*, CvAttrList)", "void* icvReadMat(CvFileStorage*, CvFileNode*)", "int icvDecodeSimpleFormat(const char*)", "void* icvReadMatND(CvFileStorage*, CvFileNode*)", "void base64::cvWriteRawDataBase64(CvFileStorage*, const void*, int, const char*)", "void base64::BinaryToCvSeqConvertor::make_funcs(const char*)", "base64::BinaryToCvSeqConvertor::BinaryToCvSeqConvertor(const void*, int, const char*)", "void base64::Base64Writer::check_dt(const char*)", "void base64::RawDataToBinaryConvertor::make_to_binary_funcs(const char*)", "base64::RawDataToBinaryConvertor::RawDataToBinaryConvertor(const void*, int, const char*)", "base64::Base64ContextEmitter::Base64ContextEmitter(CvFileStorage*)", "base64::Base64Writer::Base64Writer(CvFileStorage*)", "bool base64::Base64ContextParser::flush()", "base64::Base64ContextParser& base64::Base64ContextParser::read(const uchar*, const uchar*)", "std::string base64::make_base64_header(const char*)", "void cv::read(const cv::FileNode&, cv::SparseMat&, const cv::SparseMat&)", "void cv::read(const cv::FileNode&, cv::Mat&, const cv::Mat&)", "cv::FileNodeIterator& cv::FileNodeIterator::readRaw(const cv::String&, uchar*, size_t)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "void cv::FileStorage::writeRaw(const cv::String&, const uchar*, size_t)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const cv::String&)", "void* cvLoad(const char*, CvMemStorage*, const char*, const char**)", "void cvSave(const char*, const void*, const char*, const char*, CvAttrList)", "void cvWrite(CvFileStorage*, const char*, const void*, CvAttrList)", "void* cvRead(CvFileStorage*, CvFileNode*, CvAttrList*)", "void* cvClone(const void*)", "void cvRelease(void**)", "void cvRegisterType(const CvTypeInfo*)", "void icvWriteFileNode(CvFileStorage*, const char*, const CvFileNode*)", "void cvWriteFileNode(CvFileStorage*, const char*, const CvFileNode*, int)", "void cvReadRawData(const CvFileStorage*, const CvFileNode*, void*, const char*)", "void cvReadRawDataSlice(const CvFileStorage*, CvSeqReader*, int, void*, const char*)", "void cvStartReadRawData(const CvFileStorage*, const CvFileNode*, CvSeqReader*)", "void cvWriteRawData(CvFileStorage*, const void*, int, const char*)", "void cvStartNextStream(CvFileStorage*)", "void cvWriteComment(CvFileStorage*, const char*, int)", "void cvWriteString(CvFileStorage*, const char*, const char*, int)", "void cvWriteReal(CvFileStorage*, const char*, double)", "void cvWriteInt(CvFileStorage*, const char*, int)", "void cvEndWriteStruct(CvFileStorage*)", "void make_write_struct_delayed(CvFileStorage*, const char*, int, const char*)", "void cvStartWriteStruct(CvFileStorage*, const char*, int, const char*, CvAttrList)", "char* icvJSONParseSeq(CvFileStorage*, char*, CvFileNode*)", "char* icvJSONParseValue(CvFileStorage*, char*, CvFileNode*)", "char* icvJSONParseKey(CvFileStorage*, char*, CvFileNode*, CvFileNode**)", "char* icvJSONParseMap(CvFileStorage*, char*, CvFileNode*)", "char* icvJSONSkipSpaces(CvFileStorage*, char*)", "void icvJSONParse(CvFileStorage*)", "char* icvYMLSkipSpaces(CvFileStorage*, char*, int, int)", "char* icvYMLParseKey(CvFileStorage*, char*, CvFileNode*, CvFileNode**)", "void icvYMLGetMultilineStringContent(CvFileStorage*, char*, int, char*&, char*&)", "char* icvYMLParseBase64(CvFileStorage*, char*, int, CvFileNode*)", "char* icvYMLParseValue(CvFileStorage*, char*, CvFileNode*, int, int)", "void icvYMLParse(CvFileStorage*)", "char* icvXMLSkipSpaces(CvFileStorage*, char*, int)", "char* icvXMLParseTag(CvFileStorage*, char*, CvStringHashNode**, CvAttrList**, int*)", "void icvFSCreateCollection(CvFileStorage*, int, CvFileNode*)", "void icvProcessSpecialDouble(CvFileStorage*, char*, double*, char**)", "int icvDecodeFormat(const char*, int*, int)", "void icvXMLGetMultilineStringContent(CvFileStorage*, char*, char*&, char*&)", "char* icvXMLParseBase64(CvFileStorage*, char*, CvFileNode*)", "char* icvXMLParseValue(CvFileStorage*, char*, CvFileNode*, int)", "void icvXMLParse(CvFileStorage*)", "char* icvGets(CvFileStorage*, char*, int)", "void icvXMLStartWriteStruct(CvFileStorage*, const char*, int, const char*)", "void icvXMLEndWriteStruct(CvFileStorage*)", "void icvXMLWriteTag(CvFileStorage*, const char*, int, CvAttrList)", "void icvXMLWriteScalar(CvFileStorage*, const char*, const char*, int)", "void icvXMLWriteString(CvFileStorage*, const char*, const char*, int)", "void icvXMLWriteComment(CvFileStorage*, const char*, int)", "void icvYMLStartWriteStruct(CvFileStorage*, const char*, int, const char*)", "void icvYMLEndWriteStruct(CvFileStorage*)", "void icvYMLWrite(CvFileStorage*, const char*, const char*)", "void icvYMLWriteString(CvFileStorage*, const char*, const char*, int)", "void icvYMLWriteComment(CvFileStorage*, const char*, int)", "void icvJSONStartWriteStruct(CvFileStorage*, const char*, int, const char*)", "void icvJSONEndWriteStruct(CvFileStorage*)", "void switch_to_Base64_state(CvFileStorage*, base64::fs::State)", "void icvJSONWrite(CvFileStorage*, const char*, const char*)", "void icvJSONWriteString(CvFileStorage*, const char*, const char*, int)", "void icvJSONWriteComment(CvFileStorage*, const char*, int)", "CvFileStorage* cvOpenFileStorage(const char*, CvMemStorage*, int, const char*)", "CvFileNode* cvGetRootFileNode(const CvFileStorage*, int)", "CvFileNode* cvGetFileNodeByName(const CvFileStorage*, const CvFileNode*, const char*)", "CvFileNode* cvGetFileNode(CvFileStorage*, CvFileNode*, const CvStringHashNode*, int)", "void icvPuts(CvFileStorage*, const char*)", "void icvClose(CvFileStorage*, cv::String*)", "void cvReleaseFileStorage(CvFileStorage**)", "static cv::String cv::FileStorage::getDefaultObjectName(const cv::String&)", "ucwsifdr", "N2cv11FileStorageE", "N2cv6detail12PtrOwnerImplI11CvSparseMatNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvFileStorageNS_14DefaultDeleterIS2_EEEE", "?456789:;<=", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "void* cvPrevTreeNode(CvTreeNodeIterator*)", "void* cvNextTreeNode(CvTreeNodeIterator*)", "void cvInitTreeNodeIterator(CvTreeNodeIterator*, const void*, int)", "void cvRemoveNodeFromTree(void*, void*)", "void cvInsertNodeIntoTree(void*, void*, void*)", "CvSeq* cvTreeToNodeSeq(const void*, int, CvMemStorage*)", "CvGraph* cvCloneGraph(const CvGraph*, CvMemStorage*)", "schar* icvSeqFindNextElem(CvSeq*, int, int, int, int*)", "int cvNextGraphItem(CvGraphScanner*)", "void cvReleaseGraphScanner(CvGraphScanner**)", "void icvSeqElemsClearFlags(CvSeq*, int, int)", "CvGraphScanner* cvCreateGraphScanner(CvGraph*, CvGraphVtx*, int)", "int cvGraphVtxDegree(const CvGraph*, int)", "int cvGraphVtxDegreeByPtr(const CvGraph*, const CvGraphVtx*)", "void cvGraphRemoveEdge(CvGraph*, int, int)", "void cvGraphRemoveEdgeByPtr(CvGraph*, CvGraphVtx*, CvGraphVtx*)", "int cvGraphAddEdge(CvGraph*, int, int, const CvGraphEdge*, CvGraphEdge**)", "int cvGraphAddEdgeByPtr(CvGraph*, CvGraphVtx*, CvGraphVtx*, const CvGraphEdge*, CvGraphEdge**)", "CvGraphEdge* cvFindGraphEdge(const CvGraph*, int, int)", "CvGraphEdge* cvFindGraphEdgeByPtr(const CvGraph*, const CvGraphVtx*, const CvGraphVtx*)", "int cvGraphRemoveVtx(CvGraph*, int)", "int cvGraphRemoveVtxByPtr(CvGraph*, CvGraphVtx*)", "int cvGraphAddVtx(CvGraph*, const CvGraphVtx*, CvGraphVtx**)", "void cvClearGraph(CvGraph*)", "CvGraph* cvCreateGraph(int, int, int, int, CvMemStorage*)", "void cvSetRemove(CvSet*, int)", "int cvSetAdd(CvSet*, CvSetElem*, CvSetElem**)", "CvSet* cvCreateSet(int, int, int, CvMemStorage*)", "int cvSeqPartition(const CvSeq*, CvMemStorage*, CvSeq**, CvCmpFunc, void*)", "schar* cvSeqSearch(CvSeq*, const void*, CvCmpFunc, int, int*, void*)", "void cvSeqSort(CvSeq*, CvCmpFunc, void*)", "void cvSeqInsertSlice(CvSeq*, int, const CvArr*)", "void cvSeqRemoveSlice(CvSeq*, CvSlice)", "CvSeq* cvSeqSlice(const CvSeq*, CvSlice, CvMemStorage*, int)", "void cvClearSeq(CvSeq*)", "void cvSeqPopMulti(CvSeq*, void*, int, int)", "void cvSeqPushMulti(CvSeq*, const void*, int, int)", "void cvSeqRemove(CvSeq*, int)", "schar* cvSeqInsert(CvSeq*, int, const void*)", "void cvSeqPopFront(CvSeq*, void*)", "schar* cvSeqPushFront(CvSeq*, const void*)", "void cvSeqPop(CvSeq*, void*)", "schar* cvSeqPush(CvSeq*, const void*)", "void cvSetSeqReaderPos(CvSeqReader*, int, int)", "int cvGetSeqReaderPos(CvSeqReader*)", "void cvChangeSeqBlock(void*, int)", "void cvStartReadSeq(const CvSeq*, CvSeqReader*, int)", "void icvGrowSeq(CvSeq*, int)", "void cvCreateSeqBlock(CvSeqWriter*)", "CvSeq* cvEndWriteSeq(CvSeqWriter*)", "void cvFlushSeqWriter(CvSeqWriter*)", "void cvStartWriteSeq(int, int, int, CvMemStorage*, CvSeqWriter*)", "void cvStartAppendToSeq(CvSeq*, CvSeqWriter*)", "CvSeq* cvMakeSeqHeaderForArray(int, int, int, void*, int, CvSeq*, CvSeqBlock*)", "void* cvCvtSeqToArray(const CvSeq*, void*, CvSlice)", "int cvSeqElemIdx(const CvSeq*, const void*, CvSeqBlock**)", "void cvSetSeqBlockSize(CvSeq*, int)", "CvSeq* cvCreateSeq(int, size_t, size_t, CvMemStorage*)", "void icvGoNextMemBlock(CvMemStorage*)", "void* cvMemStorageAlloc(CvMemStorage*, size_t)", "void cvRestoreMemStoragePos(CvMemStorage*, CvMemStoragePos*)", "void cvSaveMemStoragePos(const CvMemStorage*, CvMemStoragePos*)", "void cvClearMemStorage(CvMemStorage*)", "void icvDestroyMemStorage(CvMemStorage*)", "void cvReleaseMemStorage(CvMemStorage**)", "CvMemStorage* cvCreateChildMemStorage(CvMemStorage*)", "void icvInitMemStorage(CvMemStorage*, int)", "void cvBackProjectPCA(const CvArr*, const CvArr*, const CvArr*, CvArr*)", "void cvProjectPCA(const CvArr*, const CvArr*, const CvArr*, CvArr*)", "void cvCalcPCA(const CvArr*, CvArr*, CvArr*, CvArr*, int)", "void cvCalcCovarMatrix(const CvArr**, int, CvArr*, CvArr*, int)", "void cvScaleAdd(const CvArr*, CvScalar, const CvArr*, CvArr*)", "void cvPerspectiveTransform(const CvArr*, CvArr*, const CvMat*)", "void cvTransform(const CvArr*, CvArr*, const CvMat*, const CvMat*)", "void cvGEMM(const CvArr*, const CvArr*, double, const CvArr*, double, CvArr*, int)", "double cv::dotProd_16u(const ushort*, const ushort*, int)", "double cv::dotProd_16s(const short int*, const short int*, int)", "double cv::dotProd_32s(const int*, const int*, int)", "double cv::dotProd_32f(const float*, const float*, int)", "double cv::dotProd_64f(const double*, const double*, int)", "double cv::Mat::dot(cv::InputArray) const", "void cv::mulTransposed(cv::InputArray, cv::OutputArray, bool, cv::InputArray, double, int)", "double cv::Mahalanobis(cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::calcCovarMatrix(cv::InputArray, cv::OutputArray, cv::InputOutputArray, int, int)", "void cv::calcCovarMatrix(const cv::Mat*, int, cv::Mat&, cv::Mat&, int, int)", "void cv::scaleAdd(cv::InputArray, double, cv::InputArray, cv::OutputArray)", "void cv::perspectiveTransform(cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::transform(cv::InputArray, cv::OutputArray, cv::InputArray)", "void cv::gemm(cv::InputArray, cv::InputArray, double, cv::InputArray, double, cv::OutputArray, int)", "void cv::gemmImpl(cv::Mat, cv::Mat, double, cv::Mat, double, cv::Mat, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "N2cv9AlgorithmE", "N2cv6StringE", "N7cvflann17flann_algorithm_tE", "N7cvflann20flann_centers_init_tE", "N7cvflann7anyimpl15base_any_policyE", "N7cvflann7anyimpl21typed_base_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl21typed_base_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl21typed_base_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl14big_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl21typed_base_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl14big_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl9empty_anyE", "N7cvflann7anyimpl21typed_base_any_policyIPKcEE", "N7cvflann7anyimpl16small_any_policyIPKcEE", "N7cvflann7anyimpl21typed_base_any_policyIiEE", "N7cvflann7anyimpl16small_any_policyIiEE", "N7cvflann7anyimpl21typed_base_any_policyIfEE", "N7cvflann7anyimpl16small_any_policyIfEE", "N7cvflann7anyimpl21typed_base_any_policyIbEE", "N7cvflann7anyimpl16small_any_policyIbEE", "N7cvflann7anyimpl21typed_base_any_policyIjEE", "N7cvflann7anyimpl16small_any_policyIjEE", "bool cv::flann::loadIndex_(cv::flann::Index*, void*&, const cv::Mat&, FILE*, const Distance&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >; FILE = __sFILE]", "bool cv::flann::loadIndex_(cv::flann::Index*, void*&, const cv::Mat&, FILE*, const Distance&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >; FILE = __sFILE]", "bool cv::flann::loadIndex_(cv::flann::Index*, void*&, const cv::Mat&, FILE*, const Distance&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>; FILE = __sFILE]", "virtual void cv::flann::Index::save(const cv::String&) const", "int cv::flann::runRadiusSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, double, const cv::flann::SearchParams&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >]", "int cv::flann::runRadiusSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, double, const cv::flann::SearchParams&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >]", "int cv::flann::runRadiusSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, double, const cv::flann::SearchParams&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>]", "virtual int cv::flann::Index::radiusSearch(cv::InputArray, cv::OutputArray, cv::OutputArray, double, int, const cv::flann::SearchParams&)", "void cv::flann::runKnnSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::flann::SearchParams&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >]", "void cv::flann::runKnnSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::flann::SearchParams&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >]", "void cv::flann::runKnnSearch_(void*, const cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::flann::SearchParams&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>]", "virtual void cv::flann::Index::knnSearch(cv::InputArray, cv::OutputArray, cv::OutputArray, int, const cv::flann::SearchParams&)", "virtual void cv::flann::Index::release()", "void cv::flann::buildIndex_(void*&, const cv::Mat&, const cv::flann::IndexParams&, const Distance&) [with Distance = cvflann::L1<float>; IndexType = cvflann::Index<cvflann::L1<float> >]", "void cv::flann::buildIndex_(void*&, const cv::Mat&, const cv::flann::IndexParams&, const Distance&) [with Distance = cvflann::L2<float>; IndexType = cvflann::Index<cvflann::L2<float> >]", "void cv::flann::buildIndex_(void*&, const cv::Mat&, const cv::flann::IndexParams&, const Distance&) [with Distance = cvflann::HammingLUT; IndexType = cvflann::Index<cvflann::HammingLUT>]", "virtual void cv::flann::Index::build(cv::InputArray, const cv::flann::IndexParams&, cvflann::flann_distance_t)", "N7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "N7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "N7cvflann18KNNSimpleResultSetIfEE", "N7cvflann11KMeansIndexINS_2L1IfEEE22KMeansDistanceComputerE", "N7cvflann11KMeansIndexINS_2L2IfEEE22KMeansDistanceComputerE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann12KNNResultSetIfEE", "N2cv5flann5IndexE", "N7cvflann14FLANNExceptionE", "N7cvflann7anyimpl12bad_any_castE", "N7cvflann7NNIndexINS_10HammingLUTEEE", "N7cvflann5IndexINS_10HammingLUTEEE", "N7cvflann7NNIndexINS_2L2IfEEEE", "N7cvflann5IndexINS_2L2IfEEEE", "N7cvflann7NNIndexINS_2L1IfEEEE", "N7cvflann5IndexINS_2L1IfEEEE", "N7cvflann7anyimpl21typed_base_any_policyIdEE", "N7cvflann7anyimpl14big_any_policyIdEE", "N7cvflann9ResultSetIiEE", "N7cvflann15UniqueResultSetIiEE", "N7cvflann18KNNUniqueResultSetIiEE", "N7cvflann9ResultSetIfEE", "N7cvflann15UniqueResultSetIfEE", "N7cvflann18KNNUniqueResultSetIfEE", "N7cvflann21RadiusUniqueResultSetIiEE", "N7cvflann21RadiusUniqueResultSetIfEE", "N7cvflann11LinearIndexINS_10HammingLUTEEE", "N7cvflann27HierarchicalClusteringIndexINS_10HammingLUTEEE", "N7cvflann8LshIndexINS_10HammingLUTEEE", "N7cvflann11LinearIndexINS_2L2IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L2IfEEEE", "N7cvflann11KDTreeIndexINS_2L2IfEEEE", "N7cvflann11KMeansIndexINS_2L2IfEEEE", "N7cvflann14CompositeIndexINS_2L2IfEEEE", "N7cvflann14AutotunedIndexINS_2L2IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L2IfEEEE", "N7cvflann8LshIndexINS_2L2IfEEEE", "N7cvflann11LinearIndexINS_2L1IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L1IfEEEE", "N7cvflann11KDTreeIndexINS_2L1IfEEEE", "N7cvflann11KMeansIndexINS_2L1IfEEEE", "N7cvflann14CompositeIndexINS_2L1IfEEEE", "N7cvflann14AutotunedIndexINS_2L1IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L1IfEEEE", "N7cvflann8LshIndexINS_2L1IfEEEE", "int cv::rotatedRectangleIntersection(const cv::RotatedRect&, const cv::RotatedRect&, cv::OutputArray)", "int cvCheckContourConvexity(const CvArr*)", "CvSeq* cvConvexityDefects(const CvArr*, const CvArr*, CvMemStorage*)", "CvSeq* cvConvexHull2(const CvArr*, void*, int, int)", "bool cv::isContourConvex(cv::InputArray)", "void cv::convexityDefects(cv::InputArray, cv::InputArray, cv::OutputArray)", "void cv::convexHull(cv::InputArray, cv::OutputArray, bool, bool)", "cv::Point2f cv::mapPointSpherical(const Point2f&, float, cv::Vec4d*, int)", "float cv::initWideAngleProjMap(cv::InputArray, cv::InputArray, cv::Size, int, int, cv::OutputArray, cv::OutputArray, int, double)", "void cv::undistortPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cvUndistortPoints(const CvMat*, CvMat*, const CvMat*, const CvMat*, const CvMat*, const CvMat*)", "void cvInitUndistortRectifyMap(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvArr*, CvArr*)", "void cvInitUndistortMap(const CvMat*, const CvMat*, CvArr*, CvArr*)", "void cvUndistort2(const CvArr*, CvArr*, const CvMat*, const CvMat*, const CvMat*)", "void cv::undistort(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::initUndistortRectifyMap(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::Size, int, cv::OutputArray, cv::OutputArray)", "void cvCvtColor(const CvArr*, CvArr*, int)", "void cv::cvtColor(cv::InputArray, cv::OutputArray, int, int)", "void cv::hal::cvtOnePlaneYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int, int)", "void cv::hal::cvtBGRtoThreePlaneYUV(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "void cv::hal::cvtThreePlaneYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "void cv::hal::cvtTwoPlaneYUVtoBGR(const uchar*, size_t, uchar*, size_t, int, int, int, bool, int)", "cv::RGB2Luv_f::RGB2Luv_f(int, int, const float*, const float*, bool)", "cv::RGB2Lab_f::RGB2Lab_f(int, int, const float*, const float*, bool)", "cv::RGB2Lab_b::RGB2Lab_b(int, int, const float*, const float*, bool)", "cv::RGB2HSV_b::RGB2HSV_b(int, int, int)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPReorderFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_10RGB2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_10RGB5x52RGBEEE", "N2cv23CvtColorIPPLoop_InvokerINS_20IPPColor2GrayFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayItEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_18IPPGray2BGRFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_19IPPGray2BGRAFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB5x52GrayEEE", "N2cv20CvtColorLoop_InvokerINS_11Gray2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_fIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPReorderGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_fIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPGeneralReorderFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_fEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_fEEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi1EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi1EEE", "N2cv21YUV420p2RGB888InvokerILi0EEE", "N2cv21YUV420p2RGB888InvokerILi2EEE", "N2cv23YUV420p2RGBA8888InvokerILi0EEE", "N2cv23YUV420p2RGBA8888InvokerILi2EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi2EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi2EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi0ELi1ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi2ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi1ELi0EEE", "N2cv20CvtColorLoop_InvokerINS_10RGBA2mRGBAIhEEEE", "N2cv20CvtColorLoop_InvokerINS_10mRGBA2RGBAIhEEEE", "CvMat** cvCreatePyramid(const CvArr*, int, double, const CvSize*, CvArr*, int, int)", "void cvReleasePyramid(CvMat***, int)", "void cvPyrUp(const void*, void*, int)", "void cvPyrDown(const void*, void*, int)", "void cv::buildPyramid(cv::InputArray, cv::OutputArrayOfArrays, int, int)", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<unsigned char, 6>; VecOp = cv::PyrUpVec_32s8u]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short int, 6>; VecOp = cv::PyrUpVec_32s16s]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short unsigned int, 6>; VecOp = cv::PyrUpNoVec<int, short unsigned int>]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<float, 6>; VecOp = cv::PyrUpVec_32f]", "void cv::pyrUp_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<double, 6>; VecOp = cv::PyrUpNoVec<double, double>]", "void cv::pyrUp(cv::InputArray, cv::OutputArray, const Size&, int)", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<unsigned char, 8>; VecOp = cv::PyrDownVec_32s8u]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short int, 8>; VecOp = cv::PyrDownVec_32s16s]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FixPtCast<short unsigned int, 8>; VecOp = cv::PyrDownNoVec<int, short unsigned int>]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<float, 8>; VecOp = cv::PyrDownVec_32f]", "void cv::pyrDown_(const cv::Mat&, cv::Mat&, int) [with CastOp = cv::FltCast<double, 8>; VecOp = cv::PyrDownNoVec<double, double>]", "void cv::pyrDown(cv::InputArray, cv::OutputArray, const Size&, int)", "CvSeq* cvHoughCircles(CvArr*, void*, int, double, double, double, double, int, int)", "CvSeq* cvHoughLines2(CvArr*, void*, int, double, double, int, double, double, double, double)", "void cv::HoughLinesProbabilistic(cv::Mat&, float, float, int, int, int, std::vector<cv::Vec<int, 4> >&, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::HoughLinesSDiv(const cv::Mat&, float, float, int, int, int, std::vector<cv::Vec<float, 2> >&, int, double, double)", "void cv::HoughLinesStandard(const cv::Mat&, float, float, int, std::vector<cv::Vec<float, 2> >&, int, double, double)", "N2cv6detail12PtrOwnerImplI12CvMemStorageNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI5CvMatNS_14DefaultDeleterIS2_EEEE", "void cvLaplace(const void*, void*, int)", "void cvSobel(const void*, void*, int, int, int)", "void cv::getSobelKernels(cv::OutputArray, cv::OutputArray, int, int, int, bool, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::getScharrKernels(cv::OutputArray, cv::OutputArray, int, int, bool, int)", "void cvGoodFeaturesToTrack(const void*, void*, void*, CvPoint2D32f*, int*, double, double, const void*, int, int, double)", "void cv::goodFeaturesToTrack(cv::InputArray, cv::OutputArray, int, double, double, cv::InputArray, int, bool, double)", "void cv::cornerSubPix(cv::InputArray, cv::InputOutputArray, cv::Size, cv::Size, cv::TermCriteria)", "void* icvReadHist(CvFileStorage*, CvFileNode*)", "void cv::equalizeHist(cv::InputArray, cv::OutputArray)", "void cvCalcProbDensity(const CvHistogram*, const CvHistogram*, CvHistogram*, double)", "void cvCalcBayesianProb(CvHistogram**, int, CvHistogram**)", "void cvCalcArrBackProjectPatch(CvArr**, CvArr*, CvSize, CvHistogram*, int, double)", "void cvCalcArrBackProject(CvArr**, CvArr*, const CvHistogram*)", "void cvCalcArrHist(CvArr**, CvHistogram*, int, const CvArr*)", "void cvSetHistBinRanges(CvHistogram*, float**, int)", "void cvCopyHist(const CvHistogram*, CvHistogram**)", "double cvCompareHist(const CvHistogram*, const CvHistogram*, int)", "void cvGetMinMaxHistValue(const CvHistogram*, float*, float*, int*, int*)", "void cvNormalizeHist(CvHistogram*, double)", "void cvThreshHist(CvHistogram*, double)", "void cvClearHist(CvHistogram*)", "void cvReleaseHist(CvHistogram**)", "CvHistogram* cvMakeHistHeaderForArray(int, int*, CvHistogram*, float*, float**, int)", "CvHistogram* cvCreateHist(int, int*, CvHistType, float**, int)", "double cv::compareHist(const cv::SparseMat&, const cv::SparseMat&, int)", "double cv::compareHist(cv::InputArray, cv::InputArray, int)", "void cv::calcBackProject(cv::InputArrayOfArrays, const std::vector<int>&, cv::InputArray, cv::OutputArray, const std::vector<float>&, double)", "void cv::calcBackProject(const cv::Mat*, int, const int*, const cv::SparseMat&, cv::OutputArray, const float**, double, bool)", "void cv::calcBackProject(const cv::Mat*, int, const int*, cv::InputArray, cv::OutputArray, const float**, double, bool)", "void cv::calcHist(cv::InputArrayOfArrays, const std::vector<int>&, cv::InputArray, cv::OutputArray, const std::vector<int>&, const std::vector<float>&, bool)", "void cv::calcHist(const cv::Mat*, int, const int*, const cv::Mat&, cv::SparseMat&, int, const int*, const float**, bool, bool, bool)", "void cv::histPrepareImages(const cv::Mat*, int, const int*, const cv::Mat&, int, const int*, const float**, bool, std::vector<unsigned char*>&, std::vector<int>&, cv::Size&, std::vector<double, std::allocator<double> >&)", "bool cv::ipp_calchist(const cv::Mat*, int, const int*, cv::InputArray, cv::OutputArray, int, const int*, const float**, bool, bool)", "void cv::calcHist(const cv::Mat*, int, const int*, cv::InputArray, cv::OutputArray, int, const int*, const float**, bool, bool)", "N2cv18IPPCalcHistInvokerE", "28EqualizeHistCalcHist_Invoker", "23EqualizeHistLut_Invoker", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist2D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist3D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist1D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerIfEEKNS_16auto_partitionerEEE", "void cvFitLine(const CvArr*, int, double, double, double, float*)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::fitLine3D(cv::Point3f*, int, int, float, float, float, float*)", "void cv::fitLine2D(const Point2f*, int, int, float, float, float, float*)", "void cv::fitLine(cv::InputArray, cv::OutputArray, int, double, double, double)", "void cvIntegral(const CvArr*, CvArr*, CvArr*, CvArr*)", "void cv::hal::integral(int, int, int, const uchar*, size_t, uchar*, size_t, uchar*, size_t, uchar*, size_t, int, int, int)", "void cv::createHanningWindow(cv::OutputArray, cv::Size, int)", "cv::Point2d cv::weightedCentroid(cv::InputArray, cv::Point, cv::Size, double*)", "void cv::divSpectrums(cv::InputArray, cv::InputArray, cv::OutputArray, int, bool)", "void cv::magSpectrums(cv::InputArray, cv::OutputArray)", "cv::Point2d cv::phaseCorrelate(cv::InputArray, cv::InputArray, cv::InputArray, double*)", "void cvCopyMakeBorder(const CvArr*, CvArr*, CvPoint, int, CvScalar)", "CvSeq* cvPointSeqFromMat(int, const CvArr*, CvContour*, CvSeqBlock*)", "virtual int cv::LineSegmentDetectorImpl::compareSegments(const Size&, cv::InputArray, cv::InputArray, cv::InputOutputArray)", "virtual void cv::LineSegmentDetectorImpl::drawSegments(cv::InputOutputArray, cv::InputArray)", "double cv::LineSegmentDetectorImpl::get_theta(const std::vector<cv::LineSegmentDetectorImpl::RegionPoint>&, const double&, const double&, const double&, const double&) const", "void cv::LineSegmentDetectorImpl::region2rect(const std::vector<cv::LineSegmentDetectorImpl::RegionPoint>&, double, double, double, cv::LineSegmentDetectorImpl::rect&) const", "virtual void cv::LineSegmentDetectorImpl::detect(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "cv::LineSegmentDetectorImpl::LineSegmentDetectorImpl(int, double, double, double, double, double, double, int)", "N2cv19LineSegmentDetectorE", "N2cv23LineSegmentDetectorImplE", "N2cv6detail12PtrOwnerImplINS_23LineSegmentDetectorImplENS_14DefaultDeleterIS2_EEEE", "void cv::Subdiv2D::checkSubdiv() const", "int cv::Subdiv2D::findNearest(cv::Point2f, cv::Point2f*)", "int cv::Subdiv2D::insert(cv::Point2f)", "int cv::Subdiv2D::locate(cv::Point2f, int&, int&)", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = unsigned char; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = unsigned char; PixelT = unsigned char; StatsOp = cv::connectedcomponents::CCStatsOp]", "int cv::connectedComponents_sub1(const cv::Mat&, cv::Mat&, int, int, StatsOp&) [with StatsOp = cv::connectedcomponents::CCStatsOp]", "int cv::connectedComponentsWithStats(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, int, int)", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingGrana<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = unsigned char; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = short unsigned int; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "LabelT cv::connectedcomponents::LabelingWu<LabelT, PixelT, StatsOp>::operator()(const cv::Mat&, cv::Mat&, int, StatsOp&) [with LabelT = unsigned char; PixelT = unsigned char; StatsOp = cv::connectedcomponents::NoOp]", "int cv::connectedComponents_sub1(const cv::Mat&, cv::Mat&, int, int, StatsOp&) [with StatsOp = cv::connectedcomponents::NoOp]", "int cv::connectedComponents(cv::InputArray, cv::OutputArray, int, int, int)", "CvSeq* cvApproxPoly(const void*, int, CvMemStorage*, int, double, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::approxPolyDP(cv::InputArray, cv::OutputArray, double, bool)", "CvSeq* cvApproxChains(CvSeq*, CvMemStorage*, int, double, int, int)", "CvSeq* icvApproximateChainTC89(CvChain*, int, CvMemStorage*, int)", "void cvCanny(const CvArr*, CvArr*, double, double, int)", "void cv::Canny(cv::InputArray, cv::InputArray, cv::OutputArray, double, double, bool)", "void cv::Canny(cv::InputArray, cv::OutputArray, double, double, int, bool)", "N2cv13parallelCannyE", "N2cv9finalPassE", "void {anonymous}::GeneralizedHoughGuilImpl::calcPosition(double, int, double, int)", "void {anonymous}::GeneralizedHoughGuilImpl::calcScale(double)", "void {anonymous}::GeneralizedHoughGuilImpl::calcOrientation()", "void {anonymous}::GeneralizedHoughGuilImpl::getContourPoints(const cv::Mat&, const cv::Mat&, const cv::Mat&, std::vector<{anonymous}::GeneralizedHoughGuilImpl::ContourPoint>&)", "void {anonymous}::GeneralizedHoughGuilImpl::buildFeatureList(const cv::Mat&, const cv::Mat&, const cv::Mat&, std::vector<std::vector<{anonymous}::GeneralizedHoughGuilImpl::Feature> >&, cv::Point2d)", "void {anonymous}::GeneralizedHoughBase::setTemplateImpl(cv::InputArray, cv::InputArray, cv::InputArray, cv::Point)", "void {anonymous}::GeneralizedHoughBase::calcEdges(cv::InputArray, cv::Mat&, cv::Mat&, cv::Mat&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void {anonymous}::GeneralizedHoughBase::convertTo(cv::OutputArray, cv::OutputArray)", "void {anonymous}::GeneralizedHoughBase::filterMinDist()", "void {anonymous}::GeneralizedHoughBase::detectImpl(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "virtual void {anonymous}::GeneralizedHoughBallardImpl::processTempl()", "void {anonymous}::GeneralizedHoughBallardImpl::findPosInHist()", "void {anonymous}::GeneralizedHoughBallardImpl::calcHist()", "*N12_GLOBAL__N_120GeneralizedHoughBaseE", "*N12_GLOBAL__N_127GeneralizedHoughBallardImplE", "*N12_GLOBAL__N_124GeneralizedHoughGuilImplE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_127GeneralizedHoughBallardImplENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_124GeneralizedHoughGuilImplENS_14DefaultDeleterIS3_EEEE", "N2cv16GeneralizedHoughE", "N2cv23GeneralizedHoughBallardE", "N2cv20GeneralizedHoughGuilE", "void cvSmooth(const void*, void*, int, int, int, double, double)", "virtual void cv::BilateralFilter_32f_Invoker::operator()(const cv::Range&) const", "void cv::bilateralFilter_32f(const cv::Mat&, cv::Mat&, int, double, double, int)", "void cv::bilateralFilter_8u(const cv::Mat&, cv::Mat&, int, double, double, int)", "void cv::bilateralFilter(cv::InputArray, cv::OutputArray, int, double, double, int)", "void cv::medianBlur(cv::InputArray, cv::OutputArray, int)", "void cv::createGaussianKernels(cv::Mat&, cv::Mat&, int, cv::Size, double, double)", "cv::Mat cv::getGaussianKernel(int, double, int)", "cv::Ptr<cv::BaseRowFilter> cv::getSqrRowSumFilter(int, int, int, int)", "cv::Ptr<cv::BaseColumnFilter> cv::getColumnSumFilter(int, int, int, int, double)", "virtual void cv::ColumnSum<int, unsigned char>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<short unsigned int, unsigned char>::operator()(const uchar**, uchar*, int, int, int)", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = unsigned char; uchar = unsigned char]", "virtual void cv::ColumnSum<int, short unsigned int>::operator()(const uchar**, uchar*, int, int, int)", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = short unsigned int; uchar = unsigned char]", "virtual void cv::ColumnSum<int, short int>::operator()(const uchar**, uchar*, int, int, int)", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = short int; uchar = unsigned char]", "virtual void cv::ColumnSum<int, int>::operator()(const uchar**, uchar*, int, int, int)", "virtual void cv::ColumnSum<int, float>::operator()(const uchar**, uchar*, int, int, int)", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = float; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = int; T = double; uchar = unsigned char]", "void cv::ColumnSum<ST, T>::operator()(const uchar**, uchar*, int, int, int) [with ST = double; T = double; uchar = unsigned char]", "cv::Ptr<cv::BaseRowFilter> cv::getRowSumFilter(int, int, int, int)", "N2cv9ColumnSumIihEE", "N2cv9ColumnSumIthEE", "N2cv9ColumnSumIisEE", "N2cv9ColumnSumIitEE", "N2cv9ColumnSumIiiEE", "N2cv9ColumnSumIifEE", "N2cv26BilateralFilter_8u_InvokerE", "N2cv27BilateralFilter_32f_InvokerE", "N2cv6RowSumIhiEE", "N2cv6RowSumIhtEE", "N2cv6RowSumIhdEE", "N2cv6RowSumItiEE", "N2cv6RowSumItdEE", "N2cv6RowSumIsiEE", "N2cv6RowSumIiiEE", "N2cv6RowSumIsdEE", "N2cv6RowSumIfdEE", "N2cv6RowSumIddEE", "N2cv9ColumnSumIdhEE", "N2cv9ColumnSumIdtEE", "N2cv9ColumnSumIdsEE", "N2cv9ColumnSumIdfEE", "N2cv9ColumnSumIidEE", "N2cv9ColumnSumIddEE", "N2cv9SqrRowSumIhiEE", "N2cv9SqrRowSumIhdEE", "N2cv9SqrRowSumItdEE", "N2cv9SqrRowSumIsdEE", "N2cv9SqrRowSumIfdEE", "N2cv9SqrRowSumIddEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIihEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIthEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdhEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIitEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIisEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdsEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIifEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdfEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIidEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_12FilterEngineENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIddEENS_14DefaultDeleterIS3_EEEE", "double cv::matchShapes(cv::InputArray, cv::InputArray, int, double)", "void cvFilter2D(const CvArr*, CvArr*, const CvMat*, CvPoint)", "void cv::sepFilter2D(cv::InputArray, cv::OutputArray, int, cv::InputArray, cv::InputArray, cv::Point, double, int)", "cv::Ptr<cv::FilterEngine> cv::createLinearFilter(int, int, cv::InputArray, cv::Point, double, int, int, const Scalar&)", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = double; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = float; CastOp = cv::Cast<float, float>; VecOp = cv::FilterVec_32f; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short int; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short int; CastOp = cv::Cast<float, float>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short int; CastOp = cv::Cast<float, short int>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short unsigned int; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short unsigned int; CastOp = cv::Cast<float, float>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = short unsigned int; CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<double, double>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, float>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, short int>; VecOp = cv::FilterVec_8u16s; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::FilterNoVec; cv::Point = cv::Point_<int>]", "cv::Filter2D<ST, CastOp, VecOp>::Filter2D(const cv::Mat&, cv::Point, double, const CastOp&, const VecOp&) [with ST = unsigned char; CastOp = cv::Cast<float, unsigned char>; VecOp = cv::FilterVec_8u; cv::Point = cv::Point_<int>]", "cv::Point cv::normalizeAnchor(cv::Point, cv::Size)", "cv::Ptr<cv::BaseFilter> cv::getLinearFilter(int, int, cv::InputArray, cv::Point, double, int)", "void cv::preprocess2DKernel(const cv::Mat&, std::vector<cv::Point_<int> >&, std::vector<unsigned char>&)", "cv::Ptr<cv::FilterEngine> cv::createSeparableLinearFilter(int, int, cv::InputArray, cv::InputArray, cv::Point, double, int, int, const Scalar&)", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, double>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnVec_32f]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnVec_32f]", "cv::SymmColumnVec_32f::SymmColumnVec_32f(const cv::Mat&, int, int, double)", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::SymmColumnVec_32f16s]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::SymmColumnVec_32f16s]", "cv::SymmColumnVec_32f16s::SymmColumnVec_32f16s(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::SymmColumnVec_32s8u::SymmColumnVec_32s8u(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnSmallVec_32f]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnSmallVec_32f]", "cv::SymmColumnSmallFilter<CastOp, VecOp>::SymmColumnSmallFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::SymmColumnSmallVec_32f]", "cv::SymmColumnSmallVec_32f::SymmColumnSmallVec_32f(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::SymmColumnSmallVec_32s16s]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::SymmColumnSmallVec_32s16s]", "cv::SymmColumnSmallFilter<CastOp, VecOp>::SymmColumnSmallFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::Cast<int, short int>; VecOp = cv::SymmColumnSmallVec_32s16s]", "cv::SymmColumnSmallVec_32s16s::SymmColumnSmallVec_32s16s(const cv::Mat&, int, int, double)", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::SymmColumnVec_32s8u]", "cv::SymmColumnFilter<CastOp, VecOp>::SymmColumnFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::SymmColumnVec_32s8u]", "cv::SymmColumnSmallFilter<CastOp, VecOp>::SymmColumnSmallFilter(const cv::Mat&, int, double, int, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::SymmColumnVec_32s8u]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, double>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, float>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<double, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::Cast<float, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::ColumnFilter<CastOp, VecOp>::ColumnFilter(const cv::Mat&, int, double, const CastOp&, const VecOp&) [with CastOp = cv::FixedPtCastEx<int, unsigned char>; VecOp = cv::ColumnNoVec]", "cv::Ptr<cv::BaseColumnFilter> cv::getLinearColumnFilter(int, int, cv::InputArray, int, int, double, int)", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = double; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = float; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = float; DT = float; VecOp = cv::RowVec_32f]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short int; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short int; DT = float; VecOp = cv::RowVec_16s32f]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short unsigned int; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = short unsigned int; DT = float; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = double; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = float; VecOp = cv::RowNoVec]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = int; VecOp = cv::RowVec_8u32s]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = float; DT = float; VecOp = cv::SymmRowSmallVec_32f]", "cv::SymmRowSmallFilter<ST, DT, VecOp>::SymmRowSmallFilter(const cv::Mat&, int, int, const VecOp&) [with ST = float; DT = float; VecOp = cv::SymmRowSmallVec_32f]", "cv::RowFilter<ST, DT, VecOp>::RowFilter(const cv::Mat&, int, const VecOp&) [with ST = unsigned char; DT = int; VecOp = cv::SymmRowSmallVec_8u32s]", "cv::SymmRowSmallFilter<ST, DT, VecOp>::SymmRowSmallFilter(const cv::Mat&, int, int, const VecOp&) [with ST = unsigned char; DT = int; VecOp = cv::SymmRowSmallVec_8u32s]", "cv::Ptr<cv::BaseRowFilter> cv::getLinearRowFilter(int, int, cv::InputArray, int, int)", "int cv::getKernelType(cv::InputArray, cv::Point)", "virtual void cv::FilterEngine::apply(const cv::Mat&, cv::Mat&, const Size&, const Point&)", "virtual int cv::FilterEngine::proceed(const uchar*, int, int, uchar*, int)", "virtual int cv::FilterEngine::start(const Size&, const Size&, const Point&)", "void cv::FilterEngine::init(const cv::Ptr<cv::BaseFilter>&, const cv::Ptr<cv::BaseRowFilter>&, const cv::Ptr<cv::BaseColumnFilter>&, int, int, int, int, int, const Scalar&)", "void IppFilter<kdepth>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int) [with int kdepth = 5; uchar = unsigned char; size_t = long unsigned int]", "void IppFilter<kdepth>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int) [with int kdepth = 3; uchar = unsigned char; size_t = long unsigned int]", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "N2cv3hal8Filter2DE", "N2cv3hal11SepFilter2DE", "N2cv13BaseRowFilterE", "N2cv16BaseColumnFilterE", "N2cv10BaseFilterE", "N2cv12FilterEngineE", "9DftFilter", "9OcvFilter", "12OcvSepFilter", "9IppFilterILi5EE", "9IppFilterILi3EE", "N2cv9RowFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv9RowFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv9RowFilterIhiNS_12RowVec_8u32sEEE", "N2cv9RowFilterIhfNS_8RowNoVecEEE", "N2cv9RowFilterIhdNS_8RowNoVecEEE", "N2cv9RowFilterItfNS_8RowNoVecEEE", "N2cv9RowFilterItdNS_8RowNoVecEEE", "N2cv9RowFilterIsfNS_13RowVec_16s32fEEE", "N2cv9RowFilterIsdNS_8RowNoVecEEE", "N2cv9RowFilterIffNS_10RowVec_32fEEE", "N2cv9RowFilterIfdNS_8RowNoVecEEE", "N2cv9RowFilterIddNS_8RowNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv12ColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv12ColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEE", "N2cv8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEE", "N2cv8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEE", "N2cv8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEE", "N2cv6detail12PtrOwnerImplI9IppFilterILi5EENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplI9IppFilterILi3EENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplI9DftFilterNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI9OcvFilterNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI12OcvSepFilterNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhiNS_12RowVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsfNS_13RowVec_16s32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIffNS_10RowVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIfdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIddNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "void cvMatchTemplate(const CvArr*, const CvArr*, CvArr*, int)", "void cv::matchTemplateMask(cv::InputArray, cv::InputArray, cv::OutputArray, int, cv::InputArray)", "void cv::matchTemplate(cv::InputArray, cv::InputArray, cv::OutputArray, int, cv::InputArray)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::crossCorr(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Size, int, cv::Point, double, int)", "int cv::floodFill(cv::InputOutputArray, cv::InputOutputArray, cv::Point, cv::Scalar, cv::Rect*, cv::Scalar, cv::Scalar, int)", "void cv::sortMatrixRowsByIndices(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::Mat cv::argsort(cv::InputArray, bool)", "cv::Mat cv::interp1(cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::colormap::ColorMap::operator()(cv::InputArray, cv::OutputArray) const", "N2cv8colormap8ColorMapE", "N2cv8colormap6AutumnE", "N2cv8colormap4BoneE", "N2cv8colormap3JetE", "N2cv8colormap6WinterE", "N2cv8colormap7RainbowE", "N2cv8colormap5OceanE", "N2cv8colormap6SummerE", "N2cv8colormap6SpringE", "N2cv8colormap4CoolE", "N2cv8colormap3HSVE", "N2cv8colormap4PinkE", "N2cv8colormap3HotE", "N2cv8colormap6ParulaE", "bool GCGraph<TWeight>::inSourceSegment(int) [with TWeight = double]", "TWeight GCGraph<TWeight>::maxFlow() [with TWeight = double]", "void GCGraph<TWeight>::addEdges(int, int, TWeight, TWeight) [with TWeight = double]", "void GCGraph<TWeight>::addTermWeights(int, TWeight, TWeight) [with TWeight = double]", "void checkMask(const cv::Mat&, const cv::Mat&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void initGMMs(const cv::Mat&, const cv::Mat&, GMM&, GMM&)", "void cv::grabCut(cv::InputArray, cv::InputOutputArray, cv::Rect, cv::InputOutputArray, cv::InputOutputArray, int, int)", "void GMM::calcInverseCovAndDeterm(int)", "double GMM::operator()(int, cv::Vec3d) const", "GMM::GMM(cv::Mat&)", "int cvSampleLine(const void*, CvPoint, CvPoint, void*, int)", "void cvGetQuadrangleSubPix(const void*, void*, const CvMat*)", "void cvGetRectSubPix(const void*, void*, CvPoint2D32f)", "void cv::getRectSubPix(cv::InputArray, cv::Size, cv::Point2f, cv::OutputArray, int)", "CvRect cvBoundingRect(CvArr*, int)", "double cvArcLength(const void*, CvSlice, int)", "void icvMemCopy(double**, double**, double**, int*)", "double icvContourSecArea(CvSeq*, CvSlice)", "double cvContourArea(const void*, CvSlice, int)", "cv::Rect cv::pointSetBoundingRect(const cv::Mat&)", "cv::Rect cv::maskBoundingRect(const cv::Mat&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::RotatedRect cv::fitEllipse(cv::InputArray)", "double cv::contourArea(cv::InputArray, bool)", "double cv::arcLength(cv::InputArray, bool)", "void cv::minEnclosingCircle(cv::InputArray, cv::Point2f&, float&)", "int icvInitEMD(const float*, int, const float*, int, int, CvDistanceFunction, void*, const float*, int, CvEMDState*, float*, cv::AutoBuffer<char>&)", "float cvCalcEMD2(const CvArr*, const CvArr*, int, CvDistanceFunction, const CvArr*, CvArr*, float*, void*)", "void cvAdaptiveThreshold(const void*, void*, double, int, int, int, double)", "double cvThreshold(const void*, void*, double, double, int)", "void cv::adaptiveThreshold(cv::InputArray, cv::OutputArray, double, int, int, int, double)", "void cv::thresh_64f(const cv::Mat&, cv::Mat&, double, double, int)", "void cv::thresh_32f(const cv::Mat&, cv::Mat&, float, float, int)", "void cv::thresh_16s(const cv::Mat&, cv::Mat&, short int, short int, int)", "void cv::thresh_8u(const cv::Mat&, cv::Mat&, uchar, uchar, int)", "double cv::threshold(cv::InputArray, cv::OutputArray, double, double, int)", "N2cv15ThresholdRunnerE", "void cvPreCornerDetect(const void*, void*, int)", "void cvCornerEigenValsAndVecs(const void*, void*, int, int)", "void cvCornerHarris(const CvArr*, CvArr*, int, int, double)", "void cvCornerMinEigenVal(const CvArr*, CvArr*, int, int)", "void cv::preCornerDetect(cv::InputArray, cv::OutputArray, int, int)", "void cv::cornerEigenValsVecs(const cv::Mat&, cv::Mat&, int, int, int, double, int)", "cv::Seq<_Tp>::Seq(const CvSeq*) [with _Tp = CvSeq*; CvSeq = CvSeq]", "void cv::findContours(cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArray, int, int, cv::Point)", "int icvFindContoursInInterval(const CvArr*, CvMemStorage*, CvSeq**, int)", "int cvFindContours_Impl(void*, CvMemStorage*, CvSeq**, int, int, int, CvPoint, int)", "CvSeq* cvEndFindContours(_CvContourScanner**)", "CvSeq* cvFindNextContour(CvContourScanner)", "void cvSubstituteContour(CvContourScanner, CvSeq*)", "_CvContourScanner* cvStartFindContours_Impl(void*, CvMemStorage*, int, int, int, CvPoint, int)", "CvPoint cvReadChainPoint(CvChainPtReader*)", "void cvStartReadChainPoints(CvChain*, CvChainPtReader*)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "float cv::intersectConvexConvex(cv::InputArray, cv::InputArray, cv::OutputArray, bool)", "double cv::pointPolygonTest(cv::InputArray, cv::Point2f, bool)", "void cvBoxPoints(CvBox2D, CvPoint2D32f*)", "void cv::rotatingCalipers(const Point2f*, int, int, float*)", "void minEnclosingTriangle::updateSideB(const std::vector<cv::Point_<float> >&, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&, cv::Point2f&, cv::Point2f&)", "cv::Point2f minEnclosingTriangle::findVertexCOnSideB(const std::vector<cv::Point_<float> >&, unsigned int, unsigned int, unsigned int, const Point2f&, const Point2f&, const Point2f&, const Point2f&)", "void minEnclosingTriangle::lineEquationDeterminedByPoints(const Point2f&, const Point2f&, double&, double&, double&)", "void minEnclosingTriangle::createConvexHull(cv::InputArray, std::vector<cv::Point_<float> >&)", "cv::Mat cv::getGaborKernel(cv::Size, double, double, double, double, double, int)", "void cv::blendLinear(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray)", "N2cv18BlendLinearInvokerIhEE", "N2cv18BlendLinearInvokerIfEE", "void cvMorphologyEx(const void*, void*, void*, IplConvKernel*, int, int)", "void cvDilate(const CvArr*, CvArr*, IplConvKernel*, int)", "void cvErode(const CvArr*, CvArr*, IplConvKernel*, int)", "void cvReleaseStructuringElement(IplConvKernel**)", "IplConvKernel* cvCreateStructuringElementEx(int, int, int, int, int, int*)", "void cv::morphologyEx(cv::InputArray, cv::OutputArray, int, cv::InputArray, cv::Point, int, int, const Scalar&)", "cv::Mat cv::getStructuringElement(int, cv::Size, cv::Point)", "cv::Ptr<cv::FilterEngine> cv::createMorphologyFilter(int, int, cv::InputArray, cv::Point, int, int, const Scalar&)", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<double>; VecOp = cv::MorphNoVec; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<float>; VecOp = cv::MorphFVec<cv::VMax32f>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<short int>; VecOp = cv::MorphIVec<cv::VMax16s>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<short unsigned int>; VecOp = cv::MorphIVec<cv::VMax16u>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MaxOp<unsigned char>; VecOp = cv::MorphIVec<cv::VMax8u>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<double>; VecOp = cv::MorphNoVec; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<float>; VecOp = cv::MorphFVec<cv::VMin32f>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<short int>; VecOp = cv::MorphIVec<cv::VMin16s>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<short unsigned int>; VecOp = cv::MorphIVec<cv::VMin16u>; cv::Point = cv::Point_<int>]", "cv::MorphFilter<Op, VecOp>::MorphFilter(const cv::Mat&, cv::Point) [with Op = cv::MinOp<unsigned char>; VecOp = cv::MorphIVec<cv::VMin8u>; cv::Point = cv::Point_<int>]", "cv::Point cv::normalizeAnchor(cv::Point, cv::Size)", "cv::Ptr<cv::BaseFilter> cv::getMorphologyFilter(int, int, cv::InputArray, cv::Point)", "cv::Ptr<cv::BaseColumnFilter> cv::getMorphologyColumnFilter(int, int, int, int)", "void cv::IppMorphImpl<cvtype>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int, int, int, int, int) [with int cvtype = 0; uchar = unsigned char; size_t = long unsigned int]", "void cv::IppMorphImpl<cvtype>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int, int, int, int, int) [with int cvtype = 16; uchar = unsigned char; size_t = long unsigned int]", "void cv::IppMorphImpl<cvtype>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int, int, int, int, int) [with int cvtype = 24; uchar = unsigned char; size_t = long unsigned int]", "void cv::IppMorphImpl<cvtype>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int, int, int, int, int) [with int cvtype = 5; uchar = unsigned char; size_t = long unsigned int]", "void cv::IppMorphImpl<cvtype>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int, int, int, int, int) [with int cvtype = 21; uchar = unsigned char; size_t = long unsigned int]", "void cv::IppMorphImpl<cvtype>::apply(uchar*, size_t, uchar*, size_t, int, int, int, int, int, int, int, int, int, int) [with int cvtype = 29; uchar = unsigned char; size_t = long unsigned int]", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin8u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin16u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin16s; uchar = unsigned char]", "int cv::MorphColumnFVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMin32f; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax8u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax16u; uchar = unsigned char]", "int cv::MorphColumnIVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax16s; uchar = unsigned char]", "int cv::MorphColumnFVec<VecUpdate>::operator()(const uchar**, uchar*, int, int, int) const [with VecUpdate = cv::VMax32f; uchar = unsigned char]", "cv::Ptr<cv::BaseRowFilter> cv::getMorphologyRowFilter(int, int, int, int)", "N2cv3hal5MorphE", "N2cv16IppMorphBaseImplE", "N2cv12IppMorphImplILi0EEE", "N2cv12IppMorphImplILi16EEE", "N2cv12IppMorphImplILi24EEE", "N2cv12IppMorphImplILi5EEE", "N2cv12IppMorphImplILi21EEE", "N2cv12IppMorphImplILi29EEE", "N2cv12OcvMorphImplE", "N2cv14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEE", "N2cv14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEE", "N2cv14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEE", "N2cv14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEE", "N2cv14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEE", "N2cv14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEE", "N2cv17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEE", "N2cv17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEE", "N2cv11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEE", "N2cv11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEE", "N2cv11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEE", "N2cv11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEE", "N2cv11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEE", "N2cv11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEE", "N2cv11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEE", "N2cv11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEE", "N2cv11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEE", "N2cv11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEE", "N2cv6detail12PtrOwnerImplINS_16IppMorphBaseImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12OcvMorphImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::pyrMeanShiftFiltering(cv::InputArray, cv::OutputArray, double, double, int, cv::TermCriteria)", "void cv::watershed(cv::InputArray, cv::InputOutputArray)", "void cv::demosaicing(cv::InputArray, cv::OutputArray, int, int)", "N2cv17Bayer2RGB_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "void cv::spatialGradient(cv::InputArray, cv::OutputArray, cv::OutputArray, int, int)", "void cvGetTextSize(const char*, const CvFont*, CvSize*, int*)", "void cvInitFont(CvFont*, int, double, double, double, int, int)", "void cvPutText(CvArr*, const char*, CvPoint, const CvFont*, CvScalar)", "int cvInitLineIterator(const CvArr*, CvPoint, CvPoint, CvLineIterator*, int, int)", "int cvClipLine(CvSize, CvPoint*, CvPoint*)", "void cvDrawContours(void*, CvSeq*, CvScalar, CvScalar, int, int, int, CvPoint)", "void cv::drawContours(cv::InputOutputArray, cv::InputArrayOfArrays, int, const Scalar&, int, int, cv::InputArray, int, cv::Point)", "void cv::polylines(cv::InputOutputArray, cv::InputArrayOfArrays, bool, const Scalar&, int, int, int)", "void cv::fillPoly(cv::InputOutputArray, cv::InputArrayOfArrays, const Scalar&, int, int, cv::Point)", "void cv::fillConvexPoly(cv::InputOutputArray, cv::InputArray, const Scalar&, int, int)", "const int* cv::getFontData(int)", "void cv::polylines(cv::Mat&, const Point* const*, const int*, int, bool, const Scalar&, int, int, int)", "void cv::fillPoly(cv::Mat&, const Point**, const int*, int, const Scalar&, int, int, cv::Point)", "void cv::fillConvexPoly(cv::Mat&, const Point*, int, const Scalar&, int, int)", "void cv::ellipse(cv::InputOutputArray, const cv::RotatedRect&, const Scalar&, int, int)", "void cv::ellipse(cv::InputOutputArray, cv::Point, cv::Size, double, double, double, const Scalar&, int, int, int)", "void cv::circle(cv::InputOutputArray, cv::Point, int, const Scalar&, int, int, int)", "void cv::rectangle(cv::Mat&, cv::Rect, const Scalar&, int, int, int)", "void cv::rectangle(cv::InputOutputArray, cv::Point, cv::Point, const Scalar&, int, int, int)", "void cv::PolyLine(cv::Mat&, const Point2l*, int, bool, const void*, int, int, int)", "void cv::line(cv::InputOutputArray, cv::Point, cv::Point, const Scalar&, int, int, int)", "cv::LineIterator::LineIterator(const cv::Mat&, cv::Point, cv::Point, int, bool)", "virtual void {anonymous}::CLAHE_Impl::apply(cv::InputArray, cv::OutputArray)", "*N12_GLOBAL__N_110CLAHE_ImplE", "*N12_GLOBAL__N_118CLAHE_CalcLut_BodyIhLi256ELi0EEE", "*N12_GLOBAL__N_118CLAHE_CalcLut_BodyItLi65536ELi0EEE", "*N12_GLOBAL__N_124CLAHE_Interpolation_BodyIhLi0EEE", "*N12_GLOBAL__N_124CLAHE_Interpolation_BodyItLi0EEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_118CLAHE_CalcLut_BodyIhLi256ELi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_118CLAHE_CalcLut_BodyItLi65536ELi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_124CLAHE_Interpolation_BodyIhLi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_124CLAHE_Interpolation_BodyItLi0EEENS_14DefaultDeleterIS4_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_110CLAHE_ImplENS_14DefaultDeleterIS3_EEEE", "N2cv5CLAHEE", "void cvLinearPolar(const CvArr*, CvArr*, CvPoint2D32f, double, int)", "void cv::logPolar(cv::InputArray, cv::OutputArray, cv::Point2f, double, int)", "void cvLogPolar(const CvArr*, CvArr*, CvPoint2D32f, double, int)", "CvMat* cvGetAffineTransform(const CvPoint2D32f*, const CvPoint2D32f*, CvMat*)", "CvMat* cvGetPerspectiveTransform(const CvPoint2D32f*, const CvPoint2D32f*, CvMat*)", "CvMat* cv2DRotationMatrix(CvPoint2D32f, double, double, CvMat*)", "void cvRemap(const CvArr*, CvArr*, const CvArr*, const CvArr*, int, CvScalar)", "void cvWarpPerspective(const CvArr*, CvArr*, const CvMat*, int, CvScalar)", "void cvWarpAffine(const CvArr*, CvArr*, const CvMat*, int, CvScalar)", "void cvResize(const CvArr*, CvArr*, int)", "cv::Mat cv::getAffineTransform(cv::InputArray, cv::InputArray)", "cv::Mat cv::getPerspectiveTransform(cv::InputArray, cv::InputArray)", "void cv::invertAffineTransform(cv::InputArray, cv::OutputArray)", "void cv::warpPerspective(cv::InputArray, cv::OutputArray, cv::InputArray, cv::Size, int, int, const Scalar&)", "void cv::warpAffine(cv::InputArray, cv::OutputArray, cv::InputArray, cv::Size, int, int, const Scalar&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::convertMaps(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, int, bool)", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::FixedPtCast<int, unsigned char, 15>; VecOp = cv::RemapVec_8u; AT = short int; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<float, short unsigned int>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<float, short int>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<float, float>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::remapBilinear(const cv::Mat&, cv::Mat&, const cv::Mat&, const cv::Mat&, const void*, int, const Scalar&) [with CastOp = cv::Cast<double, double>; VecOp = cv::RemapNoVec; AT = float; cv::Scalar = cv::Scalar_<double>]", "void cv::initInterTab1D(int, float*, int)", "const void* cv::initInterTab2D(int, bool)", "void cv::remap(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, int, int, const Scalar&)", "void cv::resize(cv::InputArray, cv::OutputArray, cv::Size, double, double, int)", "int cv::ResizeAreaFastVec_SIMD_8u::operator()(const uchar*, uchar*, int) const", "int cv::ResizeAreaFastVec<T, SIMDVecOp>::operator()(const T*, T*, int) const [with T = unsigned char; SIMDVecOp = cv::ResizeAreaFastVec_SIMD_8u]", "int cv::ResizeAreaFastVec_SIMD_16u::operator()(const ushort*, ushort*, int) const", "int cv::ResizeAreaFastVec<T, SIMDVecOp>::operator()(const T*, T*, int) const [with T = short unsigned int; SIMDVecOp = cv::ResizeAreaFastVec_SIMD_16u]", "int cv::ResizeAreaFastVec_SIMD_16s::operator()(const short int*, short int*, int) const", "int cv::ResizeAreaFastVec<T, SIMDVecOp>::operator()(const T*, T*, int) const [with T = short int; SIMDVecOp = cv::ResizeAreaFastVec_SIMD_16s]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<unsigned char, int, short int>; VResize = cv::VResizeLanczos4<unsigned char, int, short int, cv::FixedPtCast<int, unsigned char, 22>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = short int; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<short unsigned int, float, float>; VResize = cv::VResizeLanczos4<short unsigned int, float, float, cv::Cast<float, short unsigned int>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<short int, float, float>; VResize = cv::VResizeLanczos4<short int, float, float, cv::Cast<float, short int>, cv::VResizeLanczos4Vec_32f16s>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<float, float, float>; VResize = cv::VResizeLanczos4<float, float, float, cv::Cast<float, float>, cv::VResizeLanczos4Vec_32f>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLanczos4<double, double, float>; VResize = cv::VResizeLanczos4<double, double, float, cv::Cast<double, double>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<unsigned char, int, short int>; VResize = cv::VResizeCubic<unsigned char, int, short int, cv::FixedPtCast<int, unsigned char, 22>, cv::VResizeCubicVec_32s8u>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = short int; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<short unsigned int, float, float>; VResize = cv::VResizeCubic<short unsigned int, float, float, cv::Cast<float, short unsigned int>, cv::VResizeCubicVec_32f16<-32768> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<short int, float, float>; VResize = cv::VResizeCubic<short int, float, float, cv::Cast<float, short int>, cv::VResizeCubicVec_32f16<0> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<float, float, float>; VResize = cv::VResizeCubic<float, float, float, cv::Cast<float, float>, cv::VResizeCubicVec_32f>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeCubic<double, double, float>; VResize = cv::VResizeCubic<double, double, float, cv::Cast<double, double>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<unsigned char, int, short int, 2048, cv::HResizeNoVec>; VResize = cv::VResizeLinear<unsigned char, int, short int, cv::FixedPtCast<int, unsigned char, 22>, cv::VResizeLinearVec_32s8u>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = short int; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<short unsigned int, float, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<short unsigned int, float, float, cv::Cast<float, short unsigned int>, cv::VResizeLinearVec_32f16<-32768> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<short int, float, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<short int, float, float, cv::Cast<float, short int>, cv::VResizeLinearVec_32f16<0> >; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<float, float, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<float, float, float, cv::Cast<float, float>, cv::VResizeLinearVec_32f>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::resizeGeneric_Invoker<HResize, VResize>::resizeGeneric_Invoker(const cv::Mat&, cv::Mat&, const int*, const int*, const AT*, const AT*, const Size&, const Size&, int, int, int) [with HResize = cv::HResizeLinear<double, double, float, 1, cv::HResizeNoVec>; VResize = cv::VResizeLinear<double, double, float, cv::Cast<double, double>, cv::VResizeNoVec>; cv::resizeGeneric_Invoker<HResize, VResize>::AT = float; cv::Size = cv::Size_<int>]", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "void cv::hal::resize(int, const uchar*, size_t, int, int, uchar*, size_t, int, int, double, double, int)", "N2cv15resizeNNInvokerE", "N2cv16IPPresizeInvokerE", "N2cv12RemapInvokerE", "N2cv17WarpAffineInvokerE", "N2cv22WarpPerspectiveInvokerE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_22VResizeLinearVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_22VResizeLinearVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_22VResizeLinearVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_20VResizeLinearVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIhisEENS_12VResizeCubicIhisNS_11FixedPtCastIihLi22EEENS_21VResizeCubicVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicItffEENS_12VResizeCubicItffNS_4CastIftEENS_21VResizeCubicVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIsffEENS_12VResizeCubicIsffNS_4CastIfsEENS_21VResizeCubicVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIfffEENS_12VResizeCubicIfffNS_4CastIffEENS_19VResizeCubicVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIddfEENS_12VResizeCubicIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IhisEENS_15VResizeLanczos4IhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4ItffEENS_15VResizeLanczos4ItffNS_4CastIftEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IsffEENS_15VResizeLanczos4IsffNS_4CastIfsEENS_25VResizeLanczos4Vec_32f16sEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IfffEENS_15VResizeLanczos4IfffNS_4CastIffEENS_22VResizeLanczos4Vec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IddfEENS_15VResizeLanczos4IddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_25ResizeAreaFastVec_SIMD_8uEEEEE", "N2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_26ResizeAreaFastVec_SIMD_16uEEEEE", "N2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_26ResizeAreaFastVec_SIMD_16sEEEEE", "N2cv22resizeAreaFast_InvokerIffNS_26ResizeAreaFastVec_SIMD_32fEEE", "N2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEEE", "N2cv18ResizeArea_InvokerIhfEE", "N2cv18ResizeArea_InvokerItfEE", "N2cv18ResizeArea_InvokerIsfEE", "N2cv18ResizeArea_InvokerIffEE", "N2cv18ResizeArea_InvokerIddEE", "void cv::accumulateWeighted(cv::InputArray, cv::InputOutputArray, double, cv::InputArray)", "void cv::accumulateProduct(cv::InputArray, cv::InputArray, cv::InputOutputArray, cv::InputArray)", "void cv::accumulateSquare(cv::InputArray, cv::InputOutputArray, cv::InputArray)", "void cv::accumulate(cv::InputArray, cv::InputOutputArray, cv::InputArray)", "void cvGetHuMoments(CvMoments*, CvHuMoments*)", "double cvGetCentralMoment(CvMoments*, int, int)", "double cvGetSpatialMoment(CvMoments*, int, int)", "void cvMoments(const CvArr*, CvMoments*, int)", "void cv::HuMoments(const cv::Moments&, cv::OutputArray)", "cv::Moments cv::contourMoments(const cv::Mat&)", "cv::Moments cv::moments(cv::InputArray, bool)", "void cv::distanceATS_L1_8u(const cv::Mat&, cv::Mat&)", "void cv::distanceTransform_L1_8U(cv::InputArray, cv::OutputArray)", "void cv::getDistanceTransformMask(int, float*)", "void cv::trueDistTrans(const cv::Mat&, cv::Mat&)", "void cv::distanceTransform(cv::InputArray, cv::OutputArray, cv::OutputArray, int, int, int)", "N2cv15DTColumnInvokerE", "N2cv12DTRowInvokerE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "bool cv::ml::Impl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "virtual float cv::ml::BruteForceImpl::findNearest(cv::InputArray, int, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "virtual float cv::ml::KDTreeImpl::findNearest(cv::InputArray, int, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "N2cv2ml8KNearestE", "N2cv2ml4ImplE", "N2cv2ml14BruteForceImpl19findKNearestInvokerE", "N2cv2ml14BruteForceImplE", "N2cv2ml10KDTreeImplE", "N2cv2ml12KNearestImplE", "N2cv6detail12PtrOwnerImplINS_2ml14BruteForceImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10KDTreeImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml12KNearestImplENS_14DefaultDeleterIS3_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "void cv::ml::EMImpl::read_params(const cv::FileNode&)", "virtual void cv::ml::EMImpl::setClustersNumber(int)", "virtual void cv::ml::EMImpl::setCovarianceMatrixType(int)", "virtual cv::Vec2d cv::ml::EMImpl::predict2(cv::InputArray, cv::OutputArray) const", "cv::Vec2d cv::ml::EMImpl::computeProbabilities(const cv::Mat&, cv::Mat*, int) const", "void cv::ml::EMImpl::computeLogWeightDivDet()", "void cv::ml::EMImpl::decomposeCovs()", "void cv::ml::EMImpl::clusterTrainSamples()", "bool cv::ml::EMImpl::doTrain(int, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "static void cv::ml::EMImpl::checkTrainData(int, const cv::Mat&, int, int, const cv::Mat*, const cv::Mat*, const std::vector<cv::Mat>*, const cv::Mat*)", "N2cv2ml6EMImplE", "N2cv6detail12PtrOwnerImplINS_2ml6EMImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::LogisticRegressionImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "virtual void cv::ml::LogisticRegressionImpl::write(cv::FileStorage&) const", "cv::Mat cv::ml::LogisticRegressionImpl::remap_labels(const cv::Mat&, const std::map<int, int>&) const", "cv::Mat cv::ml::LogisticRegressionImpl::mini_batch_gradient_descent(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "cv::Mat cv::ml::LogisticRegressionImpl::batch_gradient_descent(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "void cv::ml::LogisticRegressionImpl::compute_gradient(const cv::Mat&, const cv::Mat&, const cv::Mat&, double, cv::Mat&)", "double cv::ml::LogisticRegressionImpl::compute_cost(const cv::Mat&, const cv::Mat&, const cv::Mat&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::Mat::push_back(const _Tp&) [with _Tp = int]", "virtual float cv::ml::LogisticRegressionImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual bool cv::ml::LogisticRegressionImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "N2cv2ml18LogisticRegressionE", "N2cv2ml22LogisticRegressionImplE", "N2cv2ml43LogisticRegressionImpl_ComputeDradient_ImplE", "N2cv6detail12PtrOwnerImplINS_2ml22LogisticRegressionImplENS_14DefaultDeleterIS3_EEEE", "cv::Mat cv::ml::SVM::getUncompressedSupportVectors() const", "void cv::ml::SVMImpl::checkParams()", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "virtual void cv::ml::SVMImpl::write(cv::FileStorage&) const", "void cv::ml::SVMImpl::read_params(const cv::FileNode&)", "virtual void cv::ml::SVMImpl::read(const cv::FileNode&)", "virtual bool cv::ml::SVMImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "virtual void cv::ml::SVMImpl::PredictBody::operator()(const cv::Range&) const", "virtual float cv::ml::SVMImpl::predict(cv::InputArray, cv::OutputArray, int) const", "void cv::ml::sortSamplesByClasses(const cv::Mat&, const cv::Mat&, std::vector<int>&, std::vector<int>&)", "static bool cv::ml::SVMImpl::Solver::solve_nu_svr(const cv::Mat&, const std::vector<float>&, double, double, const cv::Ptr<cv::ml::SVM::Kernel>&, std::vector<double, std::allocator<double> >&, cv::ml::SVMImpl::Solver::SolutionInfo&, cv::TermCriteria)", "static bool cv::ml::SVMImpl::Solver::solve_eps_svr(const cv::Mat&, const std::vector<float>&, double, double, const cv::Ptr<cv::ml::SVM::Kernel>&, std::vector<double, std::allocator<double> >&, cv::ml::SVMImpl::Solver::SolutionInfo&, cv::TermCriteria)", "virtual void cv::ml::SVMKernelImpl::calc(int, int, const float*, const float*, cv::ml::Qfloat*)", "cv::ml::SVMImpl::Solver::Solver(const cv::Mat&, const std::vector<signed char>&, std::vector<double, std::allocator<double> >&, const std::vector<double, std::allocator<double> >&, double, double, const cv::Ptr<cv::ml::SVM::Kernel>&, cv::ml::SVMImpl::Solver::GetRow, cv::ml::SVMImpl::Solver::SelectWorkingSet, cv::ml::SVMImpl::Solver::CalcRho, cv::TermCriteria)", "bool cv::ml::SVMImpl::do_train(const cv::Mat&, const cv::Mat&)", "void cv::ml::checkParamGrid(const cv::ml::ParamGrid&)", "virtual bool cv::ml::SVMImpl::trainAuto(const cv::Ptr<cv::ml::TrainData>&, int, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, cv::ml::ParamGrid, bool)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual double cv::ml::SVMImpl::getDecisionFunction(int, cv::OutputArray, cv::OutputArray) const", "N2cv2ml3SVM6KernelE", "N2cv2ml3SVME", "N2cv2ml13SVMKernelImplE", "N2cv2ml7SVMImpl11PredictBodyE", "N2cv2ml7SVMImplE", "N2cv6detail12PtrOwnerImplINS_2ml13SVMKernelImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml7SVMImplENS_14DefaultDeleterIS3_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<float>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "virtual void cv::ml::DTreesImplForRTrees::write(cv::FileStorage&) const", "virtual void cv::ml::DTreesImplForRTrees::read(const cv::FileNode&)", "virtual bool cv::ml::RTreesImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "void cv::ml::TreeParams::setMaxCategories(int)", "void cv::ml::TreeParams::setMaxDepth(int)", "void cv::ml::TreeParams::setCVFolds(int)", "void cv::ml::TreeParams::setRegressionAccuracy(float)", "cv::Mat::Mat(int, int, int, void*, size_t)", "N2cv2ml6DTreesE", "N2cv2ml6RTreesE", "N2cv2ml19DTreesImplForRTreesE", "N2cv2ml10RTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10RTreesImplENS_14DefaultDeleterIS3_EEEE", "void cv::ml::TrainDataImpl::preprocessCategorical(const cv::Mat&, cv::Mat*, std::vector<int>&, std::vector<int>*, std::vector<int>&)", "void cv::ml::TrainDataImpl::setData(cv::InputArray, int, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::ml::TrainDataImpl::setVarTypes(const cv::String&, int, std::vector<unsigned char>&) const", "bool cv::ml::TrainDataImpl::loadCSV(const cv::String&, int, int, int, const cv::String&, char, char)", "virtual void cv::ml::TrainDataImpl::getSample(cv::InputArray, int, float*) const", "virtual void cv::ml::TrainDataImpl::getValues(int, cv::InputArray, float*) const", "virtual void cv::ml::TrainDataImpl::getNormCatValues(int, cv::InputArray, int*) const", "virtual int cv::ml::TrainDataImpl::getCatCount(int) const", "virtual void cv::ml::TrainDataImpl::setTrainTestSplit(int, bool)", "virtual void cv::ml::TrainDataImpl::setTrainTestSplitRatio(double, bool)", "virtual void cv::ml::TrainDataImpl::shuffleTrainTest()", "cv::Mat cv::ml::TrainData::getVarSymbolFlags() const", "void cv::ml::TrainData::getNames(std::vector<cv::String>&) const", "static cv::Mat cv::ml::TrainData::getSubVector(const cv::Mat&, const cv::Mat&)", "N2cv2ml9TrainDataE", "N2cv2ml13TrainDataImplE", "N2cv6detail12PtrOwnerImplINS_2ml13TrainDataImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::DTreesImpl::read(const cv::FileNode&)", "virtual int cv::ml::DTreesImpl::readSplit(const cv::FileNode&)", "void cv::ml::TreeParams::setCVFolds(int)", "void cv::ml::TreeParams::setMaxDepth(int)", "void cv::ml::TreeParams::setRegressionAccuracy(float)", "void cv::ml::TreeParams::setMaxCategories(int)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<float>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<int>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<cv::Vec<int, 2> >]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<unsigned char>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = bool]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual float cv::ml::DTreesImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual float cv::ml::DTreesImpl::predictTrees(const cv::Range&, const cv::Mat&, int) const", "virtual int cv::ml::DTreesImpl::calcDir(int, const std::vector<int>&, std::vector<int>&, std::vector<int>&)", "virtual cv::ml::DTreesImpl::WSplit cv::ml::DTreesImpl::findSplitCatClass(int, const std::vector<int>&, double, int*)", "virtual int cv::ml::DTreesImpl::findBestSplit(const std::vector<int>&)", "virtual int cv::ml::DTreesImpl::addNodeAndTrySplit(int, const std::vector<int>&)", "virtual int cv::ml::DTreesImpl::addTree(const std::vector<int>&)", "virtual void cv::ml::DTreesImpl::initCompVarIdx()", "virtual void cv::ml::DTreesImpl::startTraining(const cv::Ptr<cv::ml::TrainData>&, int)", "N2cv2ml10DTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImpl8WorkDataENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImplENS_14DefaultDeleterIS3_EEEE", "const float* cv::ml::KDTree::getPoint(int, int*) const", "void cv::ml::KDTree::getPoints(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "void cv::ml::KDTree::findOrthoRange(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "int cv::ml::KDTree::findNearest(cv::InputArray, int, int, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray) const", "float cv::ml::medianPartition(size_t*, int, int, const float*)", "void cv::ml::KDTree::build(cv::InputArray, cv::InputArray, bool)", "virtual void cv::ml::SVMSGDImpl::setOptimalParameters(int, int)", "void cv::ml::SVMSGDImpl::readParams(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "virtual void cv::ml::SVMSGDImpl::write(cv::FileStorage&) const", "virtual float cv::ml::SVMSGDImpl::predict(cv::InputArray, cv::OutputArray, int) const", "virtual bool cv::ml::SVMSGDImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "float cv::ml::SVMSGDImpl::calcShift(cv::InputArray, cv::InputArray) const", "static void cv::ml::SVMSGDImpl::normalizeSamples(cv::Mat&, cv::Mat&, float&)", "N2cv2ml6SVMSGDE", "N2cv2ml10SVMSGDImplE", "N2cv6detail12PtrOwnerImplINS_2ml10SVMSGDImplENS_14DefaultDeleterIS3_EEEE", "virtual void cv::ml::ANN_MLPImpl::setLayerSizes(cv::InputArray)", "virtual void cv::ml::ANN_MLPImpl::setActivationFunction(int, double, double)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "void cv::ml::ANN_MLPImpl::write_params(cv::FileStorage&) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<int>]", "void cv::ml::ANN_MLPImpl::read_params(const cv::FileNode&)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "int cv::ml::ANN_MLPImpl::train_rprop(const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::TermCriteria)", "void cv::ml::ANN_MLPImpl::calc_output_scale(const cv::Mat&, int)", "void cv::ml::ANN_MLPImpl::prepare_to_train(const cv::Mat&, const cv::Mat&, cv::Mat&, int)", "void cv::ml::ANN_MLPImpl::calc_activ_func(cv::Mat&, const cv::Mat&) const", "virtual float cv::ml::ANN_MLPImpl::predict(cv::InputArray, cv::OutputArray, int) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual cv::Mat cv::ml::ANN_MLPImpl::getWeights(int) const", "N2cv2ml7ANN_MLPE", "N2cv2ml11ANN_MLPImpl9RPropLoopE", "N2cv2ml11ANN_MLPImplE", "N2cv6detail12PtrOwnerImplINS_2ml11ANN_MLPImplENS_14DefaultDeleterIS3_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::ml::DTreesImplForBoost::write(cv::FileStorage&) const", "virtual void cv::ml::DTreesImplForBoost::read(const cv::FileNode&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::ml::DTreesImplForBoost::updateWeightsAndTrim(int, std::vector<int>&)", "void cv::ml::TreeParams::setMaxCategories(int)", "void cv::ml::TreeParams::setMaxDepth(int)", "void cv::ml::TreeParams::setCVFolds(int)", "void cv::ml::TreeParams::setRegressionAccuracy(float)", "N2cv2ml5BoostE", "N2cv2ml18DTreesImplForBoostE", "N2cv2ml9BoostImplE", "N2cv6detail12PtrOwnerImplINS_2ml9BoostImplENS_14DefaultDeleterIS3_EEEE", "void cv::ml::createConcentricSpheresTestSet(int, int, int, cv::OutputArray, cv::OutputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::ml::NormalBayesClassifierImpl::read(const cv::FileNode&)", "virtual bool cv::ml::NormalBayesClassifierImpl::train(const cv::Ptr<cv::ml::TrainData>&, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual float cv::ml::NormalBayesClassifierImpl::predictProb(cv::InputArray, cv::OutputArray, cv::OutputArray, int) const", "N2cv2ml21NormalBayesClassifierE", "N2cv2ml25NormalBayesClassifierImpl13NBPredictBodyE", "N2cv2ml25NormalBayesClassifierImplE", "N2cv6detail12PtrOwnerImplINS_2ml25NormalBayesClassifierImplENS_14DefaultDeleterIS3_EEEE", "void cv::ml::Cholesky(const cv::Mat&, cv::Mat&)", "void cv::ml::randMVNormal(cv::InputArray, cv::InputArray, int, cv::OutputArray)", "virtual bool cv::ml::StatModel::train(const cv::Ptr<cv::ml::TrainData>&, int)", "N2cv2ml9StatModelE", "void cv::seamlessClone(cv::InputArray, cv::InputArray, cv::InputArray, cv::Point, cv::OutputArray, int)", "void cv::fastNlMeansDenoisingColoredMulti(cv::InputArrayOfArrays, cv::OutputArray, int, int, float, float, int, int)", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoisingMulti_(const std::vector<cv::Mat>&, cv::Mat&, int, int, const std::vector<float>&, int, int) [with ST = short unsigned int; IT = long int; UIT = long unsigned int; D = DistAbs]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoisingMulti_(const std::vector<cv::Mat>&, cv::Mat&, int, int, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistAbs]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 4>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 3>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 2>]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansMultiDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansMultiDenoisingInvoker(const std::vector<cv::Mat>&, int, int, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "void fastNlMeansDenoisingMulti_(const std::vector<cv::Mat>&, cv::Mat&, int, int, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistSquared]", "void fastNlMeansDenoisingMultiCheckPreconditions(const std::vector<cv::Mat>&, int, int, int, int)", "void cv::fastNlMeansDenoisingMulti(cv::InputArrayOfArrays, cv::OutputArray, int, int, const std::vector<float>&, int, int, int)", "void cv::fastNlMeansDenoisingColored(cv::InputArray, cv::OutputArray, float, float, int, int)", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 4>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 3>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<short unsigned int, 2>; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = short unsigned int; IT = long int; UIT = long unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoising_(const cv::Mat&, cv::Mat&, const std::vector<float>&, int, int) [with ST = short unsigned int; IT = long int; UIT = long unsigned int; D = DistAbs]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 4>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 3>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = cv::Vec<int, 2>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistAbs; WT = int]", "void fastNlMeansDenoising_(const cv::Mat&, cv::Mat&, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistAbs]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 4>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 4>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 3>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 3>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = cv::Vec<int, 2>]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = cv::Vec<unsigned char, 2>; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "FastNlMeansDenoisingInvoker<T, IT, UIT, D, WT>::FastNlMeansDenoisingInvoker(const cv::Mat&, cv::Mat&, int, int, const float*) [with T = unsigned char; IT = int; UIT = unsigned int; D = DistSquared; WT = int]", "void fastNlMeansDenoising_(const cv::Mat&, cv::Mat&, const std::vector<float>&, int, int) [with ST = unsigned char; IT = int; UIT = unsigned int; D = DistSquared]", "void cv::fastNlMeansDenoising(cv::InputArray, cv::OutputArray, const std::vector<float>&, int, int, int)", "27FastNlMeansDenoisingInvokerIhij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquaredNS1_IiLi2EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquaredNS1_IiLi3EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquarediE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquaredNS1_IiLi4EEEE", "27FastNlMeansDenoisingInvokerIhij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsNS1_IiLi2EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsNS1_IiLi3EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsNS1_IiLi4EEEE", "27FastNlMeansDenoisingInvokerItlm7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi2EEElm7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi2EEElm7DistAbsNS1_IiLi2EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi3EEElm7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi3EEElm7DistAbsNS1_IiLi3EEEE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi4EEElm7DistAbsiE", "27FastNlMeansDenoisingInvokerIN2cv3VecItLi4EEElm7DistAbsNS1_IiLi4EEEE", "32FastNlMeansMultiDenoisingInvokerIhij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij11DistSquaredNS1_IiLi2EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij11DistSquaredNS1_IiLi3EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquarediE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij11DistSquaredNS1_IiLi4EEEE", "32FastNlMeansMultiDenoisingInvokerIhij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi2EEEij7DistAbsNS1_IiLi2EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi3EEEij7DistAbsNS1_IiLi3EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecIhLi4EEEij7DistAbsNS1_IiLi4EEEE", "32FastNlMeansMultiDenoisingInvokerIhlm7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi2EEElm7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi2EEElm7DistAbsNS1_IiLi2EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi3EEElm7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi3EEElm7DistAbsNS1_IiLi3EEEE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi4EEElm7DistAbsiE", "32FastNlMeansMultiDenoisingInvokerIN2cv3VecItLi4EEElm7DistAbsNS1_IiLi4EEEE", "void cv::decolor(cv::InputArray, cv::OutputArray, cv::OutputArray)", "void cvInpaint(const CvArr*, const CvArr*, CvArr*, double, int)", "N2cv6detail12PtrOwnerImplI14_IplConvKernelNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI20CvPriorityQueueFloatNS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::MergeMertensImpl::read(const cv::FileNode&)", "virtual void cv::MergeMertensImpl::process(cv::InputArrayOfArrays, cv::OutputArray)", "virtual void cv::MergeRobertsonImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray, cv::InputArray)", "virtual void cv::MergeDebevecImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray, cv::InputArray)", "N2cv14MergeExposuresE", "N2cv12MergeDebevecE", "N2cv12MergeMertensE", "N2cv14MergeRobertsonE", "N2cv16MergeDebevecImplE", "N2cv16MergeMertensImplE", "N2cv18MergeRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_16MergeDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16MergeMertensImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18MergeRobertsonImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::TonemapDragoImpl::read(const cv::FileNode&)", "virtual void cv::TonemapDurandImpl::read(const cv::FileNode&)", "virtual void cv::TonemapReinhardImpl::read(const cv::FileNode&)", "virtual void cv::TonemapMantiukImpl::read(const cv::FileNode&)", "virtual void cv::TonemapDragoImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapDurandImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapReinhardImpl::process(cv::InputArray, cv::OutputArray)", "virtual void cv::TonemapMantiukImpl::process(cv::InputArray, cv::OutputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::TonemapImpl::read(const cv::FileNode&)", "virtual void cv::TonemapImpl::process(cv::InputArray, cv::OutputArray)", "N2cv7TonemapE", "N2cv12TonemapDragoE", "N2cv13TonemapDurandE", "N2cv15TonemapReinhardE", "N2cv14TonemapMantiukE", "N2cv11TonemapImplE", "N2cv16TonemapDragoImplE", "N2cv17TonemapDurandImplE", "N2cv19TonemapReinhardImplE", "N2cv18TonemapMantiukImplE", "N2cv6detail12PtrOwnerImplINS_11TonemapImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16TonemapDragoImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17TonemapDurandImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19TonemapReinhardImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18TonemapMantiukImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::AlignMTBImpl::read(const cv::FileNode&)", "virtual cv::Point cv::AlignMTBImpl::calculateShift(cv::InputArray, cv::InputArray)", "N2cv14AlignExposuresE", "N2cv8AlignMTBE", "N2cv12AlignMTBImplE", "N2cv6detail12PtrOwnerImplINS_12AlignMTBImplENS_14DefaultDeleterIS2_EEEE", "void cv::denoise_TVL1(const std::vector<cv::Mat>&, cv::Mat&, double, int)", "void throw_no_cuda()", "virtual void cv::CalibrateRobertsonImpl::read(const cv::FileNode&)", "virtual void cv::CalibrateRobertsonImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::CalibrateDebevecImpl::read(const cv::FileNode&)", "virtual void cv::CalibrateDebevecImpl::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArray)", "N2cv12CalibrateCRFE", "N2cv16CalibrateDebevecE", "N2cv18CalibrateRobertsonE", "N2cv20CalibrateDebevecImplE", "N2cv22CalibrateRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_20CalibrateDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22CalibrateRobertsonImplENS_14DefaultDeleterIS2_EEEE", "void cv::checkImageDimensions(const std::vector<cv::Mat>&)", "void cv::FarnebackPolyExp(const cv::Mat&, cv::Mat&, int, double)", "virtual void cv::{anonymous}::FarnebackOpticalFlowImpl::calc(cv::InputArray, cv::InputArray, cv::InputOutputArray)", "*N2cv12_GLOBAL__N_124FarnebackOpticalFlowImplE", "*N2cv6detail12PtrOwnerImplINS_12_GLOBAL__N_124FarnebackOpticalFlowImplENS_14DefaultDeleterIS3_EEEE", "N2cv16DenseOpticalFlowE", "N2cv20FarnebackOpticalFlowE", "int cv::meanShift(cv::InputArray, cv::Rect&, cv::TermCriteria)", "void cv::getRTMatrix(const Point2f*, const Point2f*, int, cv::Mat&, bool)", "cv::Mat cv::estimateRigidTransform(cv::InputArray, cv::InputArray, bool)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::{anonymous}::SparsePyrLKOpticalFlowImpl::calc(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputOutputArray, cv::OutputArray, cv::OutputArray)", "void {anonymous}::calcSharrDeriv(const cv::Mat&, cv::Mat&)", "int cv::buildOpticalFlowPyramid(cv::InputArray, cv::OutputArrayOfArrays, cv::Size, int, bool, int, int, bool)", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "*N2cv12_GLOBAL__N_126SparsePyrLKOpticalFlowImplE", "*N2cv6detail12PtrOwnerImplINS_12_GLOBAL__N_126SparsePyrLKOpticalFlowImplENS_14DefaultDeleterIS3_EEEE", "N2cv17SparseOpticalFlowE", "N2cv22SparsePyrLKOpticalFlowE", "N2cv6detail16LKTrackerInvokerE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::BackgroundSubtractorKNNImpl::read(const cv::FileNode&)", "virtual void cv::BackgroundSubtractorKNNImpl::getBackgroundImage(cv::OutputArray) const", "virtual void cv::BackgroundSubtractorKNNImpl::apply(cv::InputArray, cv::OutputArray, double)", "N2cv20BackgroundSubtractorE", "N2cv23BackgroundSubtractorKNNE", "N2cv27BackgroundSubtractorKNNImplE", "N2cv6detail12PtrOwnerImplINS_27BackgroundSubtractorKNNImplENS_14DefaultDeleterIS2_EEEE", "void update_warping_matrix_ECC(cv::Mat&, const cv::Mat&, int)", "void project_onto_jacobian_ECC(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_euclidean_ECC(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_translation_ECC(const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_homo_ECC(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "void image_jacobian_affine_ECC(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "double cv::findTransformECC(cv::InputArray, cv::InputArray, cv::InputOutputArray, int, cv::TermCriteria, cv::InputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "virtual void cv::BackgroundSubtractorMOG2Impl::read(const cv::FileNode&)", "virtual void cv::BackgroundSubtractorMOG2Impl::getBackgroundImage(cv::OutputArray) const", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cv::BackgroundSubtractorMOG2Impl::initialize(cv::Size, int)", "virtual void cv::BackgroundSubtractorMOG2Impl::apply(cv::InputArray, cv::OutputArray, double)", "N2cv24BackgroundSubtractorMOG2E", "N2cv28BackgroundSubtractorMOG2ImplE", "N2cv11MOG2InvokerE", "N2cv6detail12PtrOwnerImplINS_28BackgroundSubtractorMOG2ImplENS_14DefaultDeleterIS2_EEEE", "void cvCalcOpticalFlowFarneback(const CvArr*, const CvArr*, CvArr*, double, int, int, int, int, double, int)", "cv::Mat::Mat(int, int, int, void*, size_t)", "void cvCalcOpticalFlowPyrLK(const void*, const void*, void*, void*, const CvPoint2D32f*, CvPoint2D32f*, int, CvSize, int, char*, float*, CvTermCriteria, int)", "const CvMat* cvKalmanCorrect(CvKalman*, const CvMat*)", "const CvMat* cvKalmanPredict(CvKalman*, const CvMat*)", "void cvReleaseKalman(CvKalman**)", "CvKalman* cvCreateKalman(int, int, int)", "void cv::KalmanFilter::init(int, int, int, int)", "virtual void {anonymous}::OpticalFlowDual_TVL1::calc(cv::InputArray, cv::InputArray, cv::InputOutputArray)", "*N12_GLOBAL__N_120OpticalFlowDual_TVL1E", "*N12_GLOBAL__N_116BuildFlowMapBodyE", "*N12_GLOBAL__N_120CenteredGradientBodyE", "*N12_GLOBAL__N_119ForwardGradientBodyE", "*N12_GLOBAL__N_114DivergenceBodyE", "*N12_GLOBAL__N_115CalcGradRhoBodyE", "*N12_GLOBAL__N_113EstimateVBodyE", "*N12_GLOBAL__N_125EstimateDualVariablesBodyE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_120OpticalFlowDual_TVL1ENS_14DefaultDeleterIS3_EEEE", "N2cv19DualTVL1OpticalFlowE", "cv::Mat::Mat(int, int, int, void*, size_t)", "IplImage* cvDecodeImage(const CvMat*, int)", "bool cv::imencode(const cv::String&, cv::InputArray, std::vector<unsigned char>&, const std::vector<int>&)", "void* cv::imdecode_(const cv::Mat&, int, int, cv::Mat*)", "bool cv::imwrite_(const cv::String&, const cv::Mat&, const std::vector<int>&, bool)", "N2cv6detail12PtrOwnerImplINS_10BmpDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10BmpEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv11WebPEncoderE", "N2cv10ExrDecoderE", "N2cv10ExrEncoderE", "*N2cv5._264E", "ENDHDR", "HEIGHT", "WIDTH", "DEPTH", "MAXVAL", "TUPLTYPE", "N2cv10PAMDecoderE", "N2cv10PAMEncoderE", "N2cv13Jpeg2KDecoderE", "N2cv13Jpeg2KEncoderE", "N2cv10BmpEncoderE", "virtual bool cv::HdrEncoder::write(const cv::Mat&, const std::vector<int>&)", "N2cv10HdrDecoderE", "N2cv10HdrEncoderE", "N2cv11JpegDecoderE", "N2cv11JpegEncoderE", "virtual void cv::BaseImageEncoder::throwOnEror() const", "N2cv16BaseImageDecoderE", "N2cv16BaseImageEncoderE", "N2cv16SunRasterDecoderE", "N2cv16SunRasterEncoderE", "*N2cv5._264E", "N2cv10PxMDecoderE", "N2cv10PxMEncoderE", "N2cv11TiffDecoderE", "N2cv11TiffEncoderE", "static void cv::PngEncoder::writeDataToBuf(void*, uchar*, size_t)", "static void cv::PngDecoder::readDataFromBuf(void*, uchar*, size_t)", "N2cv10PngDecoderE", "N2cv10PngEncoderE", "virtual bool cv::RBaseStream::open(const cv::Mat&)", "*N2cv5._264E", "N2cv11RBaseStreamE", "N2cv12RLByteStreamE", "N2cv12RMByteStreamE", "N2cv11WBaseStreamE", "N2cv12WLByteStreamE", "N2cv12WMByteStreamE", "int rgbe_error(int, const char*)", "*N12_GLOBAL__N_116ExifParsingErrorE", "N2cv12VideoCaptureE", "N2cv11VideoWriterE", "9CvCapture", "13CvVideoWriter", "N2cv6detail12PtrOwnerImplI9CvCaptureNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvVideoWriterNS_14DefaultDeleterIS2_EEEE", "16CvCapture_Images", "20CvVideoWriter_Images", "bool cv::mjpeg::MotionJpegWriter::open(const cv::String&, double, cv::Size, bool)", "void cv::mjpeg::BitStream::patchInt(int, size_t)", "virtual void cv::mjpeg::MotionJpegWriter::write(cv::InputArray)", "static bool cv::mjpeg::BitStream::createEncodeHuffmanTable(const int*, unsigned int*, int)", "void cv::mjpeg::BitStream::writeBlock()", "void cv::mjpeg::BitStream::putBytes(const uchar*, int)", "void cv::mjpeg::MotionJpegWriter::writeFrameData(const uchar*, int, int, int)", "N2cv12IVideoWriterE", "N2cv5mjpeg16MotionJpegWriterE", "N2cv5mjpeg12MjpegEncoderE", "N2cv6detail12PtrOwnerImplINS_5mjpeg16MotionJpegWriterENS_14DefaultDeleterIS3_EEEE", "N2cv13IVideoCaptureE", "N2cv17MotionJpegCaptureE", "N2cv6detail12PtrOwnerImplINS_17MotionJpegCaptureENS_14DefaultDeleterIS2_EEEE", "void cv::setWindowTitle(const cv::String&, const cv::String&)", "int cv::createButton(const cv::String&, cv::ButtonCallback, void*, int, bool)", "void cv::loadWindowParameters(const cv::String&)", "void cv::saveWindowParameters(const cv::String&)", "void cv::stopLoop()", "int cv::startLoop(int (*)(int, char**), int, char**)", "void cv::displayOverlay(const cv::String&, const cv::String&, int)", "void cv::displayStatusBar(const cv::String&, const cv::String&, int)", "void cv::addText(const cv::Mat&, const cv::String&, cv::Point, const cv::String&, int, cv::Scalar, int, int, int)", "void cv::addText(const cv::Mat&, const cv::String&, cv::Point, const cv::QtFont&)", "cv::QtFont cv::fontQt(const cv::String&, int, cv::Scalar, int, int, int)", "void cvUpdateWindow(const char*)", "void cvSetOpenGlContext(const char*)", "void cvSetOpenGlDrawCallback(const char*, CvOpenGlDrawCallback, void*)", "void cv::imshow(const cv::String&, const cv::ogl::Texture2D&)", "void cv::imshow(const cv::String&, cv::InputArray)", "int cv::partition(const std::vector<_Tp>&, std::vector<int>&, _EqPredicate) [with _Tp = cv::Rect_<int>; _EqPredicate = cv::SimilarRects]", "void cv::HOGDescriptor::groupRectangles(std::vector<cv::Rect_<int> >&, std::vector<double, std::allocator<double> >&, int, double) const", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "virtual void cv::HOGDescriptor::detect(const cv::Mat&, std::vector<cv::Point_<int> >&, std::vector<double, std::allocator<double> >&, double, cv::Size, cv::Size, const std::vector<cv::Point_<int> >&) const", "const float* cv::HOGCache::getBlock(cv::Point, float*)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::HOGDescriptor::computeGradient(const cv::Mat&, cv::Mat&, cv::Mat&, cv::Size, cv::Size) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = std::vector<float>]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = bool]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Size_<int>]", "virtual bool cv::HOGDescriptor::read(cv::FileNode&)", "virtual void cv::HOGDescriptor::setSVMDetector(cv::InputArray)", "size_t cv::HOGDescriptor::getDescriptorSize() const", "N2cv13HOGDescriptorE", "N2cv8HOGCacheE", "N2cv10HOGInvokerE", "N2cv14HOGConfInvokerE", "void cv::DetectionBasedTracker::updateTrackedObjects(const std::vector<cv::Rect_<int> >&)", "virtual void cv::DetectionBasedTracker::process(const cv::Mat&)", "cv::DetectionBasedTracker::DetectionBasedTracker(cv::Ptr<cv::DetectionBasedTracker::IDetector>, cv::Ptr<cv::DetectionBasedTracker::IDetector>, const cv::DetectionBasedTracker::Parameters&)", "void cv::DetectionBasedTracker::SeparateDetectionWork::workcycleObjectDetector()", "void* cv::workcycleObjectDetectorFunction(void*)", "cv::DetectionBasedTracker::SeparateDetectionWork::SeparateDetectionWork(cv::DetectionBasedTracker&, cv::Ptr<cv::DetectionBasedTracker::IDetector>, const cv::DetectionBasedTracker::Parameters&)", "N2cv21DetectionBasedTrackerE", "N2cv21DetectionBasedTracker21SeparateDetectionWorkE", "N2cv6detail12PtrOwnerImplINS_21DetectionBasedTracker21SeparateDetectionWorkENS_14DefaultDeleterIS3_EEEE", "cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator> cv::CascadeClassifier::getMaskGenerator()", "void cv::CascadeClassifier::setMaskGenerator(const cv::Ptr<cv::BaseCascadeClassifier::MaskGenerator>&)", "void* cv::CascadeClassifier::getOldCascade()", "int cv::CascadeClassifier::getFeatureType() const", "cv::Size cv::CascadeClassifier::getOriginalWindowSize() const", "bool cv::CascadeClassifier::isOldFormatCascade() const", "void cv::CascadeClassifier::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, int, int, cv::Size, cv::Size, bool)", "void cv::CascadeClassifier::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, double, int, int, cv::Size, cv::Size)", "void cv::CascadeClassifier::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, double, int, int, cv::Size, cv::Size)", "void cv::clipObjects(cv::Size, std::vector<cv::Rect_<int> >&, std::vector<int>*, std::vector<double, std::allocator<double> >*)", "bool cv::CascadeClassifierImpl::Data::read(const cv::FileNode&)", "virtual void cv::CascadeClassifierImpl::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, double, int, int, cv::Size, cv::Size)", "cv::Seq<_Tp>::Seq(const CvSeq*) [with _Tp = CvAvgComp; CvSeq = CvSeq]", "virtual void cv::CascadeClassifierImpl::detectMultiScale(cv::InputArray, std::vector<cv::Rect_<int> >&, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, int, int, cv::Size, cv::Size, bool)", "int cv::predictCategoricalStump(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&) [with FEval = cv::LBPEvaluator]", "int cv::predictOrderedStump(cv::CascadeClassifierImpl&, cv::Ptr<cv::FeatureEvaluator>&, double&) [with FEval = cv::HaarEvaluator]", "virtual bool cv::LBPEvaluator::setWindow(cv::Point, int)", "const cv::FeatureEvaluator::ScaleData& cv::FeatureEvaluator::getScaleData(int) const", "cv::Mat::Mat(cv::Size, int, void*, size_t)", "virtual void cv::HaarEvaluator::computeChannels(int, cv::InputArray)", "virtual bool cv::HaarEvaluator::read(const cv::FileNode&, cv::Size)", "cv::Mat::Mat(int, int, int, void*, size_t)", "N2cv21BaseCascadeClassifierE", "N2cv16FeatureEvaluatorE", "N2cv21CascadeClassifierImplE", "N2cv13HaarEvaluatorE", "N2cv12LBPEvaluatorE", "N2cv24CascadeClassifierInvokerE", "N2cv6detail12PtrOwnerImplINS_13HaarEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12LBPEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_16FeatureEvaluator9ScaleDataESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplI23CvHaarClassifierCascadeNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_21CascadeClassifierImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "void* icvReadHaarClassifier(CvFileStorage*, CvFileNode*)", "CvHaarClassifierCascade* icvCreateHaarClassifierCascade(int)", "CvHaarClassifierCascade* cvLoadHaarClassifierCascade(const char*, CvSize)", "cv::Mat::Mat(int, int, int, void*, size_t)", "CvSeq* cvHaarDetectObjectsForROC(const CvArr*, CvHaarClassifierCascade*, CvMemStorage*, std::vector<int>&, std::vector<double, std::allocator<double> >&, double, int, int, CvSize, CvSize, bool)", "int cvRunHaarClassifierCascadeSum(const CvHaarClassifierCascade*, CvPoint, double&, int)", "CvHidHaarClassifierCascade* icvCreateHidHaarClassifierCascade(CvHaarClassifierCascade*)", "void cvSetImagesForHaarClassifierCascade(CvHaarClassifierCascade*, const CvArr*, const CvArr*, const CvArr*, double)", "N2cv36HaarDetectObjects_ScaleImage_InvokerE", "N2cv38HaarDetectObjects_ScaleCascade_InvokerE", "virtual void cv::Feature2D::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "virtual void cv::Feature2D::compute(cv::InputArrayOfArrays, std::vector<std::vector<cv::KeyPoint> >&, cv::OutputArrayOfArrays)", "virtual void cv::Feature2D::detect(cv::InputArrayOfArrays, std::vector<std::vector<cv::KeyPoint> >&, cv::InputArrayOfArrays)", "N2cv9Feature2DE", "virtual cv::Ptr<cv::DescriptorMatcher> cv::FlannBasedMatcher::clone(bool) const", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = short int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = short unsigned int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = char]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = unsigned char]", "virtual void cv::FlannBasedMatcher::read(const cv::FileNode&)", "virtual void cv::FlannBasedMatcher::train()", "virtual void cv::FlannBasedMatcher::add(cv::InputArrayOfArrays)", "cv::FlannBasedMatcher::FlannBasedMatcher(const cv::Ptr<cv::flann::IndexParams>&, const cv::Ptr<cv::flann::SearchParams>&)", "static cv::Ptr<cv::DescriptorMatcher> cv::DescriptorMatcher::create(int)", "static cv::Ptr<cv::DescriptorMatcher> cv::DescriptorMatcher::create(const cv::String&)", "virtual void cv::BFMatcher::radiusMatchImpl(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, float, cv::InputArrayOfArrays, bool)", "virtual void cv::BFMatcher::knnMatchImpl(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, int, cv::InputArrayOfArrays, bool)", "void cv::DescriptorMatcher::radiusMatch(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, float, cv::InputArrayOfArrays, bool)", "void cv::DescriptorMatcher::knnMatch(cv::InputArray, std::vector<std::vector<cv::DMatch> >&, int, cv::InputArrayOfArrays, bool)", "void cv::DescriptorMatcher::checkMasks(cv::InputArrayOfArrays, int) const", "void cv::convertMatches(const std::vector<std::vector<cv::DMatch> >&, std::vector<cv::DMatch>&)", "virtual void cv::DescriptorMatcher::add(cv::InputArrayOfArrays)", "void cv::DescriptorMatcher::DescriptorCollection::getLocalIdx(int, int&, int&) const", "const cv::Mat cv::DescriptorMatcher::DescriptorCollection::getDescriptor(int) const", "const cv::Mat cv::DescriptorMatcher::DescriptorCollection::getDescriptor(int, int) const", "void cv::DescriptorMatcher::DescriptorCollection::set(const std::vector<cv::Mat>&)", "N2cv17DescriptorMatcher20DescriptorCollectionE", "N2cv17DescriptorMatcherE", "N2cv9BFMatcherE", "N2cv17FlannBasedMatcherE", "N2cv6detail12PtrOwnerImplINS_9BFMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17FlannBasedMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann5IndexENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann11IndexParamsENS_14DefaultDeleterIS3_EEEE", "static void cv::BriskLayer::twothirdsample(const cv::Mat&, cv::Mat&)", "static void cv::BriskLayer::halfsample(const cv::Mat&, cv::Mat&)", "float cv::BriskScaleSpace::getScoreMaxAbove(int, int, int, int, bool&, float&, float&) const", "int cv::BriskLayer::value(const cv::Mat&, float, float, float) const", "float cv::BriskScaleSpace::getScoreMaxBelow(int, int, int, int, bool&, float&, float&) const", "void cv::BRISK_Impl::generateKernel(const std::vector<float>&, const std::vector<int>&, float, float, const std::vector<int>&)", "N2cv5BRISKE", "N2cv10BRISK_ImplE", "N2cv6detail12PtrOwnerImplINS_10BRISK_ImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::KAZE_Impl::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "N2cv4KAZEE", "N2cv9KAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_9KAZE_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::makeAgastOffsets(int*, int, int)", "void cv::BOWImgDescriptorExtractor::compute(cv::InputArray, cv::OutputArray, std::vector<std::vector<int> >*)", "virtual cv::Mat cv::BOWKMeansTrainer::cluster() const", "void cv::BOWTrainer::add(const cv::Mat&)", "N2cv10BOWTrainerE", "N2cv16BOWKMeansTrainerE", "N2cv25BOWImgDescriptorExtractorE", "void cv::drawMatches(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputArray, const std::vector<cv::KeyPoint>&, const std::vector<std::vector<cv::DMatch> >&, cv::InputOutputArray, const Scalar&, const Scalar&, const std::vector<std::vector<char> >&, int)", "void cv::_prepareImgAndDrawKeypoints(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputOutputArray, cv::Mat&, cv::Mat&, const Scalar&, int)", "void cv::drawMatches(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputArray, const std::vector<cv::KeyPoint>&, const std::vector<cv::DMatch>&, cv::InputOutputArray, const Scalar&, const Scalar&, const std::vector<char>&, int)", "void cv::_drawKeypoint(cv::InputOutputArray, const cv::KeyPoint&, const Scalar&, int)", "void cv::drawKeypoints(cv::InputArray, const std::vector<cv::KeyPoint>&, cv::InputOutputArray, const Scalar&, int)", "N2cv20AgastFeatureDetectorE", "N2cv25AgastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_25AgastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "static void cv::KeyPointsFilter::runByKeypointSize(std::vector<cv::KeyPoint>&, float, float)", "N2cv12GFTTDetectorE", "N2cv17GFTTDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_17GFTTDetector_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::computeOrbDescriptors(const cv::Mat&, const std::vector<cv::Rect_<int> >&, const std::vector<float>&, std::vector<cv::KeyPoint>&, cv::Mat&, const std::vector<cv::Point_<int> >&, int, int)", "void cv::HarrisResponses(const cv::Mat&, const std::vector<cv::Rect_<int> >&, std::vector<cv::KeyPoint>&, int, float)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::ORB_Impl::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "N2cv3ORBE", "N2cv8ORB_ImplE", "N2cv6detail12PtrOwnerImplINS_8ORB_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::makeOffsets(int*, int, int)", "N2cv19FastFeatureDetectorE", "N2cv24FastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_24FastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::computeRecallPrecisionCurve(const std::vector<std::vector<cv::DMatch> >&, const std::vector<std::vector<unsigned char> >&, std::vector<cv::Point_<float> >&)", "void IntersectAreaCounter::operator()(const BlockedRange&)", "void cv::evaluateFeatureDetector(const cv::Mat&, const cv::Mat&, const cv::Mat&, std::vector<cv::KeyPoint>*, std::vector<cv::KeyPoint>*, float&, int&, const cv::Ptr<cv::Feature2D>&)", "static void EllipticKeyPoint::calcProjection(const std::vector<EllipticKeyPoint>&, const cv::Mat_<double>&, std::vector<EllipticKeyPoint>&)", "static void EllipticKeyPoint::convert(const std::vector<cv::KeyPoint>&, std::vector<EllipticKeyPoint>&)", "N3tbb10interface98internal13finish_reduceI20IntersectAreaCounterEE", "N3tbb10interface98internal12start_reduceINS_13blocked_rangeIiEE20IntersectAreaCounterKNS_16auto_partitionerEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "virtual void cv::AKAZE_Impl::detectAndCompute(cv::InputArray, cv::InputArray, std::vector<cv::KeyPoint>&, cv::OutputArray, bool)", "N2cv5AKAZEE", "N2cv10AKAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_10AKAZE_ImplENS_14DefaultDeleterIS2_EEEE", "void cv::MSER_Impl::pass(const cv::Mat&, std::vector<std::vector<cv::Point_<int> > >&, std::vector<cv::Rect_<int> >&, cv::Size, const int*, int)", "virtual void cv::MSER_Impl::detectRegions(cv::InputArray, std::vector<std::vector<cv::Point_<int> > >&, std::vector<cv::Rect_<int> >&)", "N2cv9MSER_ImplE", "N2cv6detail12PtrOwnerImplINS_9MSER_ImplENS_14DefaultDeleterIS2_EEEE", "virtual void cv::SimpleBlobDetectorImpl::detect(cv::InputArray, std::vector<cv::KeyPoint>&, cv::InputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "N2cv18SimpleBlobDetectorE", "N2cv22SimpleBlobDetectorImplE", "N2cv6detail12PtrOwnerImplINS_22SimpleBlobDetectorImplENS_14DefaultDeleterIS2_EEEE", "void cv::halfsample_image(const cv::Mat&, cv::Mat&)", "N2cv23Nld_Step_Scalar_InvokerE", "void cv::KAZEFeatures::Feature_Description(std::vector<cv::KeyPoint>&, cv::Mat&)", "int cv::KAZEFeatures::Create_Nonlinear_Scale_Space(const cv::Mat&)", "N2cv32MultiscaleDerivativesKAZEInvokerE", "N2cv23FindExtremumKAZEInvokerE", "N2cv23KAZE_Descriptor_InvokerE", "void cv::generateDescriptorSubsample(cv::Mat&, cv::Mat&, int, int, int)", "void cv::MLDB_Full_Descriptor_Invoker::Get_MLDB_Full_Descriptor(const cv::KeyPoint&, unsigned char*) const", "void cv::AKAZEFeatures::Compute_Descriptors(std::vector<cv::KeyPoint>&, cv::Mat&)", "int cv::AKAZEFeatures::Create_Nonlinear_Scale_Space(const cv::Mat&)", "N2cv33MultiscaleDerivativesAKAZEInvokerE", "N2cv35MSURF_Upright_Descriptor_64_InvokerE", "N2cv27MSURF_Descriptor_64_InvokerE", "N2cv36Upright_MLDB_Full_Descriptor_InvokerE", "N2cv38Upright_MLDB_Descriptor_Subset_InvokerE", "N2cv28MLDB_Full_Descriptor_InvokerE", "N2cv30MLDB_Descriptor_Subset_InvokerE", "int checkChessboardBinary(const cv::Mat&, const Size&)", "int checkChessboard(const cv::Mat&, const Size&)", "void cv::findCorner(const std::vector<cv::Point_<float> >&, cv::Point2f, cv::Point2f&)", "bool cv::find4QuadCornerSubpix(cv::InputArray, cv::InputOutputArray, cv::Size)", "void cvPOSIT(CvPOSITObject*, CvPoint2D32f*, double, CvTermCriteria, float*, float*)", "CvPOSITObject* cvCreatePOSITObject(CvPoint3D32f*, int)", "bool cv::solvePnPRansac(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, bool, int, float, double, cv::OutputArray, int)", "bool cv::solvePnP(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, bool, int)", "N2cv19PointSetRegistrator8CallbackE", "N2cv17PnPRansacCallbackE", "N2cv6detail12PtrOwnerImplINS_17PnPRansacCallbackENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::StereoBMImpl::read(const cv::FileNode&)", "virtual void cv::StereoBMImpl::compute(cv::InputArray, cv::InputArray, cv::OutputArray)", "N2cv13StereoMatcherE", "N2cv8StereoBME", "N2cv16PrefilterInvokerE", "N2cv24FindStereoCorrespInvokerE", "N2cv12StereoBMImplE", "N2cv6detail12PtrOwnerImplINS_12StereoBMImplENS_14DefaultDeleterIS2_EEEE", "cv::Mat cv::estimateAffinePartial2D(cv::InputArray, cv::InputArray, cv::OutputArray, int, double, size_t, double, size_t)", "cv::Mat cv::estimateAffine2D(cv::InputArray, cv::InputArray, cv::OutputArray, int, double, size_t, double, size_t)", "int cv::estimateAffine3D(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, double, double)", "virtual bool cv::LMeDSPointSetRegistrator::run(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray) const", "virtual bool cv::Affine2DRefineCallback::compute(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "virtual bool cv::AffinePartial2DRefineCallback::compute(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "virtual void cv::Affine3DEstimatorCallback::computeError(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray) const", "virtual void cv::Affine2DEstimatorCallback::computeError(cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray) const", "int cv::RANSACPointSetRegistrator::findInliers(const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, double) const", "virtual bool cv::Affine3DEstimatorCallback::checkSubset(cv::InputArray, cv::InputArray, int) const", "bool cv::RANSACPointSetRegistrator::getSubset(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, cv::RNG&, int) const", "virtual bool cv::RANSACPointSetRegistrator::run(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray) const", "int cv::RANSACUpdateNumIters(double, double, int, int)", "N2cv8LMSolver8CallbackE", "N2cv19PointSetRegistratorE", "N2cv25RANSACPointSetRegistratorE", "N2cv24LMeDSPointSetRegistratorE", "N2cv25Affine3DEstimatorCallbackE", "N2cv25Affine2DEstimatorCallbackE", "N2cv32AffinePartial2DEstimatorCallbackE", "N2cv22Affine2DRefineCallbackE", "N2cv29AffinePartial2DRefineCallbackE", "N2cv6detail12PtrOwnerImplINS_25RANSACPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24LMeDSPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine3DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22Affine2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_32AffinePartial2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29AffinePartial2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "virtual int cv::LMSolverImpl::run(cv::InputOutputArray) const", "N2cv8LMSolverE", "N2cv12LMSolverImplE", "N2cv6detail12PtrOwnerImplINS_12LMSolverImplENS_14DefaultDeleterIS2_EEEE", "void cvConvertPointsHomogeneous(const CvMat*, CvMat*)", "void cvComputeCorrespondEpilines(const CvMat*, int, const CvMat*, CvMat*)", "int cvFindFundamentalMat(const CvMat*, const CvMat*, CvMat*, int, double, double, CvMat*)", "bool CvLevMarq::updateAlt(const CvMat*&, CvMat*&, CvMat*&, double*&)", "bool cv::findCirclesGrid(cv::InputArray, cv::Size, cv::OutputArray, int, const cv::Ptr<cv::Feature2D>&)", "void cv::drawChessboardCorners(cv::InputOutputArray, cv::Size, cv::InputArray, bool)", "void cvDrawChessboardCorners(CvArr*, CvSize, CvPoint2D32f*, int, int)", "int icvGenerateQuads(CvCBQuad**, CvCBCorner**, CvMemStorage*, const cv::Mat&, int, int*)", "bool icvBinarizationHistogramBased(cv::Mat&)", "int cvFindChessboardCorners(const void*, CvSize, CvPoint2D32f*, int*, int)", "double cv::sampsonDistance(cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::convertPointsHomogeneous(cv::InputArray, cv::OutputArray)", "void cv::convertPointsToHomogeneous(cv::InputArray, cv::OutputArray)", "void cv::convertPointsFromHomogeneous(cv::InputArray, cv::OutputArray)", "void cv::computeCorrespondEpilines(cv::InputArray, int, cv::InputArray, cv::OutputArray)", "cv::Mat cv::findFundamentalMat(cv::InputArray, cv::InputArray, int, double, double, cv::OutputArray)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual bool cv::HomographyRefineCallback::compute(cv::InputArray, cv::OutputArray, cv::OutputArray) const", "static void cv::SVD::compute(const cv::Matx<_Tp, m, n>&, cv::Matx<_Tp, nm, 1>&, cv::Matx<_Tp, m, l>&, cv::Matx<_Tp, m, n>&) [with _Tp = double; int m = 3; int n = 3; int nm = 3]", "int cv::run8Point(const cv::Mat&, const cv::Mat&, cv::Mat&)", "cv::Mat cv::findHomography(cv::InputArray, cv::InputArray, int, double, cv::OutputArray, int, double)", "N2cv27HomographyEstimatorCallbackE", "N2cv24HomographyRefineCallbackE", "N2cv19FMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_27HomographyEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24HomographyRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19FMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "void cv::validateDisparity(cv::InputOutputArray, cv::InputArray, int, int, int)", "void cv::filterSpeckles(cv::InputOutputArray, double, int, double, cv::InputOutputArray)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::StereoSGBMImpl::read(const cv::FileNode&)", "void cv::computeDisparitySGBM(const cv::Mat&, const cv::Mat&, cv::Mat&, const cv::StereoSGBMParams&, cv::Mat&)", "virtual void cv::StereoSGBMImpl::compute(cv::InputArray, cv::InputArray, cv::OutputArray)", "cv::SGBM3WayMainLoop::SGBM3WayMainLoop(cv::Mat*, const cv::Mat&, const cv::Mat&, cv::Mat*, const cv::StereoSGBMParams&, cv::PixType*, int, int)", "N2cv10StereoSGBME", "N2cv16SGBM3WayMainLoopE", "N2cv14StereoSGBMImplE", "N2cv6detail12PtrOwnerImplINS_14StereoSGBMImplENS_14DefaultDeleterIS2_EEEE", "void cvCorrectMatches(CvMat*, CvMat*, CvMat*, CvMat*, CvMat*)", "static void cv::SVD::compute(const cv::Matx<_Tp, m, n>&, cv::Matx<_Tp, nm, 1>&, cv::Matx<_Tp, m, l>&, cv::Matx<_Tp, m, n>&) [with _Tp = double; int m = 4; int n = 4; int nm = 4]", "void cvTriangulatePoints(CvMat*, CvMat*, CvMat*, CvMat*, CvMat*)", "cv::Vec3d cv::internal::median3d(cv::InputArray)", "double cv::internal::median(const cv::Mat&)", "void cv::internal::dAB(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "void cv::internal::EstimateUncertainties(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::internal::IntrinsicParams&, cv::InputArray, cv::InputArray, cv::internal::IntrinsicParams&, cv::Vec2d&, double, int, double&)", "void cv::internal::ComputeJacobians(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::internal::IntrinsicParams&, cv::InputArray, cv::InputArray, const int&, const double&, cv::Mat&, cv::Mat&)", "void cv::internal::CalibrateExtrinsics(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::internal::IntrinsicParams&, int, double, cv::InputOutputArray, cv::InputOutputArray)", "void cv::internal::InitExtrinsics(const cv::Mat&, const cv::Mat&, const cv::internal::IntrinsicParams&, cv::Mat&, cv::Mat&)", "cv::Mat cv::internal::NormalizePixels(const cv::Mat&, const cv::internal::IntrinsicParams&)", "void cv::internal::ComputeExtrinsicRefine(const cv::Mat&, const cv::Mat&, cv::Mat&, cv::Mat&, cv::Mat&, int, const cv::internal::IntrinsicParams&, double)", "void cv::internal::projectPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, const cv::internal::IntrinsicParams&, cv::OutputArray)", "cv::internal::IntrinsicParams& cv::internal::IntrinsicParams::operator=(const cv::Mat&)", "cv::internal::IntrinsicParams cv::internal::IntrinsicParams::operator+(const cv::Mat&)", "cv::Mat::operator cv::Vec<_Tp, m>() const [with _Tp = double; int n = 3]", "void cv::{anonymous}::subMatrix(const cv::Mat&, cv::Mat&, const std::vector<unsigned char>&, const std::vector<unsigned char>&)", "double cv::fisheye::stereoCalibrate(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::InputOutputArray, cv::InputOutputArray, cv::InputOutputArray, cv::InputOutputArray, cv::Size, cv::OutputArray, cv::OutputArray, int, cv::TermCriteria)", "double cv::fisheye::calibrate(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const Size&, cv::InputOutputArray, cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, int, cv::TermCriteria)", "void cv::fisheye::stereoRectify(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, const Size&, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, const Size&, double, double)", "void cv::fisheye::estimateNewCameraMatrixForUndistortRectify(cv::InputArray, cv::InputArray, const Size&, cv::InputArray, cv::OutputArray, double, const Size&, double)", "void cv::fisheye::initUndistortRectifyMap(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, const Size&, int, cv::OutputArray, cv::OutputArray)", "void cv::fisheye::undistortPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray)", "void cv::fisheye::distortPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, double)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = double; int m = 3; int n = 3]", "cv::Mat::Mat(int, int, int, void*, size_t)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = float; int m = 3; int n = 3]", "void cv::fisheye::projectPoints(cv::InputArray, cv::OutputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, double, cv::OutputArray)", "size_t CirclesGridFinder::getFirstCorner(std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&) const", "void CirclesGridFinder::getCornerSegments(const std::vector<std::vector<long unsigned int> >&, std::vector<std::vector<CirclesGridFinder::Segment> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&, std::vector<cv::Point_<int> >&) const", "void CirclesGridFinder::getAsymmetricHoles(std::vector<cv::Point_<float> >&) const", "size_t CirclesGridFinder::findLongestPath(std::vector<Graph>&, Path&)", "void computePredecessorMatrix(const cv::Mat&, int, cv::Mat&)", "void CirclesGridFinder::findBasis(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&, std::vector<Graph>&)", "void CirclesGridFinder::filterOutliersByDensity(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "float CirclesGridFinder::computeGraphConfidence(const std::vector<Graph>&, bool, const std::vector<long unsigned int>&, const std::vector<long unsigned int>&)", "static void CirclesGridFinder::insertWinner(float, float, float, bool, const std::vector<long unsigned int>&, const std::vector<long unsigned int>&, std::vector<std::vector<long unsigned int> >&)", "void CirclesGridFinder::findCandidateHoles(std::vector<long unsigned int>&, std::vector<long unsigned int>&, bool, cv::Point2f, std::vector<long unsigned int>&, std::vector<long unsigned int>&)", "void CirclesGridFinder::findCandidateLine(std::vector<long unsigned int>&, size_t, bool, cv::Point2f, std::vector<long unsigned int>&)", "static cv::Mat CirclesGridFinder::rectifyGrid(cv::Size, const std::vector<cv::Point_<float> >&, const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "bool CirclesGridFinder::isDetectionCorrect()", "bool CirclesGridFinder::findHoles()", "CirclesGridFinder::CirclesGridFinder(cv::Size, const std::vector<cv::Point_<float> >&, const CirclesGridFinderParameters&)", "const Neighbors& Graph::getNeighbors(size_t) const", "void Graph::floydWarshall(cv::Mat&, int) const", "size_t Graph::getDegree(size_t) const", "bool Graph::areVerticesAdjacent(size_t, size_t) const", "void Graph::removeEdge(size_t, size_t)", "void Graph::addEdge(size_t, size_t)", "void Graph::addVertex(size_t)", "void CirclesGridClusterFinder::findOutsideCorners(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "void CirclesGridClusterFinder::findCorners(const std::vector<cv::Point_<float> >&, std::vector<cv::Point_<float> >&)", "void cv::adjust3rdMatrix(cv::InputArrayOfArrays, cv::InputArrayOfArrays, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, cv::Mat&)", "void cv::calibrationMatrixValues(cv::InputArray, cv::Size, double, double, double&, double&, double&, cv::Point2d&, double&)", "cv::Mat cv::prepareDistCoeffs(cv::Mat&, int, int)", "double cv::calibrateCamera(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::Size, cv::InputOutputArray, cv::InputOutputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, cv::OutputArray, cv::OutputArray, cv::OutputArray, int, cv::TermCriteria)", "void cv::collectCalibrationData(cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::InputArrayOfArrays, cv::Mat&, cv::Mat&, cv::Mat*, cv::Mat&)", "void cv::projectPoints(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, double)", "void cvDecomposeProjectionMatrix(const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvPoint3D64f*)", "void cvRQDecomp3x3(const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvPoint3D64f*)", "void cvReprojectImageTo3D(const CvArr*, CvArr*, const CvMat*, int)", "void cv::reprojectImageTo3D(cv::InputArray, cv::OutputArray, cv::InputArray, bool, int)", "int cvStereoRectifyUncalibrated(const CvMat*, const CvMat*, const CvMat*, CvSize, CvMat*, CvMat*, double)", "double cvStereoCalibrate(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvSize, CvMat*, CvMat*, CvMat*, CvMat*, int, CvTermCriteria)", "void cvCalibrationMatrixValues(const CvMat*, CvSize, double, double, double*, double*, double*, CvPoint2D64f*, double*)", "double cvCalibrateCamera2Internal(const CvMat*, const CvMat*, const CvMat*, CvSize, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, int, CvTermCriteria)", "void cvInitIntrinsicParams2D(const CvMat*, const CvMat*, const CvMat*, CvSize, CvMat*, double)", "void cvFindExtrinsicCameraParams2(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, int)", "void cvProjectPoints2(const CvMat*, const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, double)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = double; int m = 3; int n = 3]", "int cvRodrigues2(const CvMat*, CvMat*, CvMat*)", "void cvComposeRT(const CvMat*, const CvMat*, const CvMat*, const CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*, CvMat*)", "void cvCalcMatMulDeriv(const CvMat*, const CvMat*, CvMat*, CvMat*)", "int cv::decomposeHomographyMat(cv::InputArray, cv::InputArray, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays, cv::OutputArrayOfArrays)", "cv::Mat::operator cv::Matx<_Tp, m, n>() const [with _Tp = double; int m = 3; int n = 1]", "cv::Mat::Mat(int, int, int, void*, size_t)", "N2cv23HomographyDecomposition16HomographyDecompE", "N2cv23HomographyDecomposition21HomographyDecompInriaE", "N2cv6detail12PtrOwnerImplINS_23HomographyDecomposition21HomographyDecompInriaENS_14DefaultDeleterIS3_EEEE", "void cvFindStereoCorrespondenceBM(const CvArr*, const CvArr*, CvArr*, CvStereoBMState*)", "void cvReleaseStereoBMState(CvStereoBMState**)", "N2cv8RHO_HESTE", "N2cv13RHO_HEST_REFCE", "N2cv6detail12PtrOwnerImplINS_13RHO_HEST_REFCENS_14DefaultDeleterIS2_EEEE", "void cv::decomposeEssentialMat(cv::InputArray, cv::OutputArray, cv::OutputArray, cv::OutputArray)", "int cv::recoverPose(cv::InputArray, cv::InputArray, cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray, cv::InputOutputArray)", "cv::Mat cv::findEssentialMat(cv::InputArray, cv::InputArray, cv::InputArray, int, double, double, cv::OutputArray)", "N2cv19EMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_19EMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "virtual void cv::NormHistogramCostExtractorImpl::read(const cv::FileNode&)", "virtual void cv::EMDHistogramCostExtractorImpl::read(const cv::FileNode&)", "virtual void cv::ChiHistogramCostExtractorImpl::read(const cv::FileNode&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::EMDL1HistogramCostExtractorImpl::read(const cv::FileNode&)", "N2cv22HistogramCostExtractorE", "N2cv26NormHistogramCostExtractorE", "N2cv25EMDHistogramCostExtractorE", "N2cv25ChiHistogramCostExtractorE", "N2cv27EMDL1HistogramCostExtractorE", "N2cv30NormHistogramCostExtractorImplE", "N2cv29EMDHistogramCostExtractorImplE", "N2cv29ChiHistogramCostExtractorImplE", "N2cv31EMDL1HistogramCostExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30NormHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29EMDHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29ChiHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_31EMDL1HistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = bool]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = cv::Mat]", "virtual void cv::ShapeContextDistanceExtractorImpl::read(const cv::FileNode&)", "virtual void cv::ShapeContextDistanceExtractorImpl::setAngularBins(int)", "virtual void cv::ShapeContextDistanceExtractorImpl::setRadialBins(int)", "virtual void cv::ShapeContextDistanceExtractorImpl::setInnerRadius(float)", "virtual void cv::ShapeContextDistanceExtractorImpl::setOuterRadius(float)", "virtual void cv::ShapeContextDistanceExtractorImpl::setImages(cv::InputArray, cv::InputArray)", "virtual void cv::ShapeContextDistanceExtractorImpl::getImages(cv::OutputArray, cv::OutputArray) const", "virtual void cv::ShapeContextDistanceExtractorImpl::setIterations(int)", "virtual float cv::ShapeContextDistanceExtractorImpl::computeDistance(cv::InputArray, cv::InputArray)", "N2cv16ShapeTransformerE", "N2cv31ThinPlateSplineShapeTransformerE", "N2cv22ShapeDistanceExtractorE", "N2cv29ShapeContextDistanceExtractorE", "N2cv33ShapeContextDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_33ShapeContextDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::AffineTransformerImpl::read(const cv::FileNode&)", "virtual float cv::AffineTransformerImpl::applyTransformation(cv::InputArray, cv::OutputArray)", "virtual void cv::AffineTransformerImpl::estimateTransformation(cv::InputArray, cv::InputArray, std::vector<cv::DMatch>&)", "virtual void cv::AffineTransformerImpl::warpImage(cv::InputArray, cv::OutputArray, int, int, const Scalar&) const", "N2cv17AffineTransformerE", "N2cv21AffineTransformerImplE", "N2cv6detail12PtrOwnerImplINS_21AffineTransformerImplENS_14DefaultDeleterIS2_EEEE", "float EmdL1::getEMDL1(cv::Mat&, cv::Mat&)", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = float]", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = int]", "virtual void cv::HausdorffDistanceExtractorImpl::read(const cv::FileNode&)", "virtual void cv::HausdorffDistanceExtractorImpl::setRankProportion(float)", "virtual float cv::HausdorffDistanceExtractorImpl::computeDistance(cv::InputArray, cv::InputArray)", "N2cv26HausdorffDistanceExtractorE", "N2cv30HausdorffDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30HausdorffDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "cv::FileStorage& cv::operator<<(cv::FileStorage&, const _Tp&) [with _Tp = double]", "virtual void cv::ThinPlateSplineShapeTransformerImpl::read(const cv::FileNode&)", "virtual void cv::ThinPlateSplineShapeTransformerImpl::estimateTransformation(cv::InputArray, cv::InputArray, std::vector<cv::DMatch>&)", "virtual float cv::ThinPlateSplineShapeTransformerImpl::applyTransformation(cv::InputArray, cv::OutputArray)", "virtual void cv::ThinPlateSplineShapeTransformerImpl::warpImage(cv::InputArray, cv::OutputArray, int, int, const Scalar&) const", "N2cv35ThinPlateSplineShapeTransformerImplE", "N2cv6detail12PtrOwnerImplINS_35ThinPlateSplineShapeTransformerImplENS_14DefaultDeleterIS2_EEEE", "N2cv8superres15SuperResolutionE", "cv::Ptr<cv::superres::SuperResolution> cv::superres::createSuperResolution_BTVL1_CUDA()", "cv::Ptr<cv::superres::PyrLKOpticalFlow> cv::superres::createOptFlow_PyrLK_CUDA()", "cv::Ptr<cv::superres::BroxOpticalFlow> cv::superres::createOptFlow_Brox_CUDA()", "cv::Ptr<cv::superres::DualTVL1OpticalFlow> cv::superres::createOptFlow_DualTVL1_CUDA()", "cv::Ptr<cv::superres::FarnebackOpticalFlow> cv::superres::createOptFlow_Farneback_CUDA()", "virtual void {anonymous}::CpuOpticalFlow::calc(cv::InputArray, cv::InputArray, cv::OutputArray, cv::OutputArray)", "*N12_GLOBAL__N_114CpuOpticalFlowE", "*N12_GLOBAL__N_19FarnebackE", "*N12_GLOBAL__N_18DualTVL1E", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_19FarnebackENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_18DualTVL1ENS_14DefaultDeleterIS3_EEEE", "N2cv8superres19DenseOpticalFlowExtE", "N2cv8superres20FarnebackOpticalFlowE", "N2cv8superres19DualTVL1OpticalFlowE", "void {anonymous}::convertToDepth(cv::InputArray, cv::OutputArray, int)", "void {anonymous}::convertToCn(cv::InputArray, cv::OutputArray, int)", "void cv::superres::arrCopy(cv::InputArray, cv::OutputArray)", "cv::Ptr<cv::superres::FrameSource> cv::superres::createFrameSource_Video_CUDA(const cv::String&)", "virtual void {anonymous}::CameraFrameSource::reset()", "virtual void {anonymous}::VideoFrameSource::reset()", "virtual void {anonymous}::CaptureFrameSource::nextFrame(cv::OutputArray)", "*N12_GLOBAL__N_116EmptyFrameSourceE", "*N12_GLOBAL__N_118CaptureFrameSourceE", "*N12_GLOBAL__N_116VideoFrameSourceE", "*N12_GLOBAL__N_117CameraFrameSourceE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_116EmptyFrameSourceENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_116VideoFrameSourceENS_14DefaultDeleterIS3_EEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_117CameraFrameSourceENS_14DefaultDeleterIS3_EEEE", "N2cv8superres11FrameSourceE", "void {anonymous}::calcBtvRegularization(cv::InputArray, cv::OutputArray, int, const std::vector<float>&, const cv::UMat&)", "void {anonymous}::upscale(cv::InputArray, cv::OutputArray, int)", "void {anonymous}::BTVL1_Base::process(cv::InputArrayOfArrays, cv::OutputArray, cv::InputArrayOfArrays, cv::InputArrayOfArrays, int)", "*N12_GLOBAL__N_110BTVL1_BaseE", "*N12_GLOBAL__N_15BTVL1E", "*N12_GLOBAL__N_121BtvRegularizationBodyIfEE", "*N12_GLOBAL__N_121BtvRegularizationBodyIN2cv7Point3_IfEEEE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_15BTVL1ENS_14DefaultDeleterIS3_EEEE", "void cv::detail::BestOf2NearestRangeMatcher::operator()(const std::vector<cv::detail::ImageFeatures>&, std::vector<cv::detail::MatchesInfo>&, const cv::UMat&)", "virtual void {anonymous}::CpuMatcher::match(const cv::detail::ImageFeatures&, const cv::detail::ImageFeatures&, cv::detail::MatchesInfo&)", "void cv::detail::FeaturesMatcher::operator()(const std::vector<cv::detail::ImageFeatures>&, std::vector<cv::detail::MatchesInfo>&, const cv::UMat&)", "virtual void cv::detail::AKAZEFeaturesFinder::find(cv::InputArray, cv::detail::ImageFeatures&)", "virtual void cv::detail::OrbFeaturesFinder::find(cv::InputArray, cv::detail::ImageFeatures&)", "virtual void cv::detail::SurfFeaturesFinder::find(cv::InputArray, cv::detail::ImageFeatures&)", "cv::detail::SurfFeaturesFinder::SurfFeaturesFinder(double, int, int, int, int)", "void cv::detail::FeaturesFinder::operator()(cv::InputArrayOfArrays, std::vector<cv::detail::ImageFeatures>&, const std::vector<std::vector<cv::Rect_<int> > >&)", "*N12_GLOBAL__N_114MatchPairsBodyE", "*N12_GLOBAL__N_116FindFeaturesBodyE", "*N12_GLOBAL__N_110CpuMatcherE", "*N2cv6detail12PtrOwnerImplIN12_GLOBAL__N_110CpuMatcherENS_14DefaultDeleterIS3_EEEE", "N2cv6detail14FeaturesFinderE", "N2cv6detail18SurfFeaturesFinderE", "N2cv6detail17OrbFeaturesFinderE", "N2cv6detail19AKAZEFeaturesFinderE", "N2cv6detail15FeaturesMatcherE", "N2cv6detail21BestOf2NearestMatcherE", "N2cv6detail26BestOf2NearestRangeMatcherE", "N2cv6detail27AffineBestOf2NearestMatcherE", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::PlaneProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::SphericalPortraitProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::SphericalProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::RotationWarperBase<P>::warpBackward(cv::InputArray, cv::InputArray, cv::InputArray, int, int, cv::Size, cv::OutputArray) [with P = cv::detail::CylindricalProjector; cv::InputArray = const cv::_InputArray&; cv::Size = cv::Size_<int>; cv::OutputArray = const cv::_OutputArray&]", "void cv::detail::AffineWarper::getRTfromHomogeneous(cv::InputArray, cv::Mat&, cv::Mat&)", "void cv::detail::ProjectorBase::setCameraParams(cv::InputArray, cv::InputArray, cv::InputArray)", "N2cv6detail14RotationWarperE", "N2cv6detail18RotationWarperBaseINS0_14PlaneProjectorEEE", "N2cv6detail11PlaneWarperE", "N2cv6detail12AffineWarperE", "N2cv6detail18RotationWarperBaseINS0_18SphericalProjectorEEE", "N2cv6detail15SphericalWarperE", "N2cv6detail18RotationWarperBaseINS0_20CylindricalProjectorEEE", "N2cv6detail17CylindricalWarperE", "N2cv6detail18RotationWarperBaseINS0_26SphericalPortraitProjectorEEE", "N2cv6detail23SphericalPortraitWarperE", "void cv::detail::restoreImageFromLaplacePyrGpu(std::vector<cv::UMat>&)", "void cv::detail::createLaplacePyrGpu(cv::InputArray, int, std::vector<cv::UMat>&)", "void cv::detail::createWeightMap(cv::InputArray, float, cv::InputOutputArray)", "void cv::detail::normalizeUsingWeightMap(cv::InputArray, cv::InputOutputArray)", "virtual void cv::detail::MultiBandBlender::feed(cv::InputArray, cv::InputArray, cv::Point)", "cv::detail::MultiBandBlender::MultiBandBlender(int, int, int)", "virtual void cv::detail::FeatherBlender::feed(cv::InputArray, cv::InputArray, cv::Point)", "virtual void cv::detail::Blender::feed(cv::InputArray, cv::InputArray, cv::Point)", "static cv::Ptr<cv::detail::Blender> cv::detail::Blender::createDefault(int, bool)", "N2cv6detail7BlenderE", "N2cv6detail14FeatherBlenderE", "N2cv6detail16MultiBandBlenderE", "N2cv6detail12PtrOwnerImplINS0_7BlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14FeatherBlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_16MultiBandBlenderENS_14DefaultDeleterIS2_EEEE", "bool cv::detail::calibrateRotatingCamera(const std::vector<cv::Mat>&, cv::Mat&)", "void cv::detail::focalsFromHomography(const cv::Mat&, double&, double&, bool&, bool&)", "bool GCGraph<TWeight>::inSourceSegment(int) [with TWeight = float]", "TWeight GCGraph<TWeight>::maxFlow() [with TWeight = float]", "virtual void cv::detail::GraphCutSeamFinder::Impl::findInPair(size_t, size_t, cv::Rect)", "void GCGraph<TWeight>::addEdges(int, int, TWeight, TWeight) [with TWeight = float]", "void GCGraph<TWeight>::addTermWeights(int, TWeight, TWeight) [with TWeight = float]", "virtual void cv::detail::GraphCutSeamFinder::Impl::find(const std::vector<cv::UMat>&, const std::vector<cv::Point_<int> >&, std::vector<cv::UMat>&)", "bool cv::detail::DpSeamFinder::estimateSeam(const cv::Mat&, const cv::Mat&, cv::Point, cv::Point, int, cv::Point, cv::Point, std::vector<cv::Point_<int> >&, bool&)", "void cv::detail::DpSeamFinder::computeCosts(const cv::Mat&, const cv::Mat&, cv::Point, cv::Point, int, cv::Mat_<float>&, cv::Mat_<float>&)", "int cv::partition(const std::vector<_Tp>&, std::vector<int>&, _EqPredicate) [with _Tp = cv::Point_<int>; _EqPredicate = cv::detail::DpSeamFinder::ClosePoints]", "bool cv::detail::DpSeamFinder::getSeamTips(int, int, cv::Point&, cv::Point&)", "void cv::detail::DpSeamFinder::computeGradients(const cv::Mat&, const cv::Mat&)", "void cv::detail::DpSeamFinder::process(const cv::Mat&, const cv::Mat&, cv::Point, cv::Point, cv::Mat&, cv::Mat&)", "N2cv6detail22GraphCutSeamFinderBaseE", "N2cv6detail10SeamFinderE", "N2cv6detail18PairwiseSeamFinderE", "N2cv6detail17VoronoiSeamFinderE", "N2cv6detail12DpSeamFinderE", "N2cv6detail18GraphCutSeamFinderE", "N2cv6detail18GraphCutSeamFinder4ImplE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinder4ImplENS_14DefaultDeleterIS3_EEEE", "cv::Stitcher::Status cv::Stitcher::composePanorama(cv::InputArrayOfArrays, cv::OutputArray)", "static cv::Ptr<cv::Stitcher> cv::Stitcher::create(cv::Stitcher::Mode, bool)", "void cv::detail::BundleAdjusterBase::setRefinementMask(const cv::Mat&)", "N2cv13WarperCreatorE", "N2cv12AffineWarperE", "N2cv15SphericalWarperE", "N2cv6detail9EstimatorE", "N2cv6detail19ExposureCompensatorE", "N2cv6detail21NoExposureCompensatorE", "N2cv6detail12PtrOwnerImplINS0_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17BundleAdjusterRayENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17OrbFeaturesFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BlocksGainCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_8StitcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27AffineBestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27BundleAdjusterAffinePartialENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21NoExposureCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_20AffineBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_24HomographyBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "void cv::detail::findMaxSpanningTree(int, const std::vector<cv::detail::MatchesInfo>&, cv::detail::Graph&, std::vector<int>&)", "void cv::detail::waveCorrect(std::vector<cv::Mat>&, cv::detail::WaveCorrectKind)", "virtual void cv::detail::BundleAdjusterAffinePartial::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "virtual void cv::detail::BundleAdjusterAffine::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "virtual void cv::detail::BundleAdjusterRay::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "cv::Mat::Mat(int, int, int, void*, size_t)", "virtual void cv::detail::BundleAdjusterReproj::setUpInitialCameraParams(const std::vector<cv::detail::CameraParams>&)", "N2cv6detail24HomographyBasedEstimatorE", "N2cv6detail20AffineBasedEstimatorE", "N2cv6detail18BundleAdjusterBaseE", "N2cv6detail20BundleAdjusterReprojE", "N2cv6detail17BundleAdjusterRayE", "N2cv6detail20BundleAdjusterAffineE", "N2cv6detail27BundleAdjusterAffinePartialE", "void throw_no_cuda()", "virtual void cv::detail::BlocksGainCompensator::apply(int, cv::Point, cv::InputOutputArray, cv::InputArray)", "virtual void cv::detail::BlocksGainCompensator::feed(const std::vector<cv::Point_<int> >&, const std::vector<cv::UMat>&, const std::vector<std::pair<cv::UMat, unsigned char> >&)", "virtual void cv::detail::GainCompensator::feed(const std::vector<cv::Point_<int> >&, const std::vector<cv::UMat>&, const std::vector<std::pair<cv::UMat, unsigned char> >&)", "static cv::Ptr<cv::detail::ExposureCompensator> cv::detail::ExposureCompensator::createDefault(int)", "N2cv6detail15GainCompensatorE", "N2cv6detail21BlocksGainCompensatorE", "N2cv6detail12PtrOwnerImplINS0_15GainCompensatorENS_14DefaultDeleterIS2_EEEE", "cv::Rect cv::detail::resultRoiIntersection(const std::vector<cv::Point_<int> >&, const std::vector<cv::Size_<int> >&)", "cv::Rect cv::detail::resultRoi(const std::vector<cv::Point_<int> >&, const std::vector<cv::Size_<int> >&)", "virtual void cv::detail::Timelapser::process(cv::InputArray, cv::InputArray, cv::Point)", "static cv::Ptr<cv::detail::Timelapser> cv::detail::Timelapser::createDefault(int)", "N2cv6detail10TimelapserE", "N2cv6detail14TimelapserCropE", "N2cv6detail12PtrOwnerImplINS0_10TimelapserENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14TimelapserCropENS_14DefaultDeleterIS2_EEEE", "cv::videostab::ToFileMotionWriter::ToFileMotionWriter(const cv::String&, cv::Ptr<cv::videostab::ImageMotionEstimatorBase>)", "cv::videostab::FromFileMotionReader::FromFileMotionReader(const cv::String&)", "virtual cv::Mat cv::videostab::MotionEstimatorL1::estimate(cv::InputArray, cv::InputArray, bool*)", "virtual cv::Mat cv::videostab::MotionEstimatorRansacL2::estimate(cv::InputArray, cv::InputArray, bool*)", "static cv::videostab::RansacParams cv::videostab::RansacParams::default2dMotion(cv::videostab::MotionModel)", "cv::Mat cv::videostab::estimateGlobalMotionRansac(cv::InputArray, cv::InputArray, int, const cv::videostab::RansacParams&, float*, int*)", "cv::Mat cv::videostab::estimateGlobalMotionLeastSquares(cv::InputOutputArray, cv::InputOutputArray, int, float*)", "N2cv9videostab23ISparseOptFlowEstimatorE", "N2cv9videostab25PyrLkOptFlowEstimatorBaseE", "N2cv9videostab16IOutlierRejectorE", "N2cv9videostab19MotionEstimatorBaseE", "N2cv9videostab23MotionEstimatorRansacL2E", "N2cv9videostab17MotionEstimatorL1E", "N2cv9videostab24ImageMotionEstimatorBaseE", "N2cv9videostab20FromFileMotionReaderE", "N2cv9videostab18ToFileMotionWriterE", "N2cv9videostab28KeypointBasedMotionEstimatorE", "N2cv6detail12PtrOwnerImplINS_9videostab27SparsePyrLkOptFlowEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab19NullOutlierRejectorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab17IMotionStabilizerE", "N2cv9videostab12IFrameSourceE", "N2cv9videostab15NullFrameSourceE", "N2cv9videostab4ILogE", "N2cv9videostab13InpainterBaseE", "N2cv9videostab13NullInpainterE", "N2cv9videostab12DeblurerBaseE", "N2cv9videostab12NullDeblurerE", "N2cv9videostab20WobbleSuppressorBaseE", "N2cv9videostab14StabilizerBaseE", "N2cv9videostab17OnePassStabilizerE", "N2cv9videostab17TwoPassStabilizerE", "N2cv6detail12PtrOwnerImplINS_9videostab11LogToStdoutENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab15NullFrameSourceENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab23MotionEstimatorRansacL2ENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab28KeypointBasedMotionEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab12NullDeblurerENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab13NullInpainterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20GaussianMotionFilterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20NullWobbleSuppressorENS_14DefaultDeleterIS3_EEEE", "virtual void cv::videostab::MoreAccurateMotionWobbleSuppressor::suppress(int, const cv::Mat&, cv::Mat&)", "N2cv9videostab20NullWobbleSuppressorE", "N2cv9videostab38MoreAccurateMotionWobbleSuppressorBaseE", "N2cv9videostab34MoreAccurateMotionWobbleSuppressorE", "N2cv9videostab11LogToStdoutE", "virtual void cv::videostab::WeightingDeblurer::deblur(int, cv::Mat&)", "N2cv9videostab17WeightingDeblurerE", "float cv::videostab::estimateOptimalTrimRatio(const cv::Mat&, cv::Size)", "cv::Mat cv::videostab::ensureInclusionConstraint(const cv::Mat&, cv::Size, float)", "virtual void cv::videostab::LpMotionStabilizer::stabilize(int, const std::vector<cv::Mat>&, std::pair<int, int>, cv::Mat*)", "N2cv9videostab27MotionStabilizationPipelineE", "N2cv9videostab16MotionFilterBaseE", "N2cv9videostab20GaussianMotionFilterE", "N2cv9videostab18LpMotionStabilizerE", "void cv::videostab::completeFrameAccordingToFlow(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&, float, cv::Mat&, cv::Mat&)", "void cv::videostab::calcFlowMask(const cv::Mat&, const cv::Mat&, const cv::Mat&, float, const cv::Mat&, const cv::Mat&, cv::Mat&)", "Inpaint cv::videostab::FastMarchingMethod::run(const cv::Mat&, Inpaint) [with Inpaint = cv::videostab::ColorAverageInpaintBody]", "Inpaint cv::videostab::FastMarchingMethod::run(const cv::Mat&, Inpaint) [with Inpaint = cv::videostab::MotionInpaintBody]", "float cv::videostab::alignementError(const cv::Mat&, const cv::Mat&, const cv::Mat&, const cv::Mat&)", "cv::videostab::MotionInpainter::MotionInpainter()", "virtual void cv::videostab::ConsistentMosaicInpainter::inpaint(int, cv::Mat&, cv::Mat&)", "N2cv9videostab18InpaintingPipelineE", "N2cv9videostab25ConsistentMosaicInpainterE", "N2cv9videostab15MotionInpainterE", "N2cv9videostab21ColorAverageInpainterE", "N2cv9videostab14ColorInpainterE", "N2cv9videostab27SparsePyrLkOptFlowEstimatorE", "virtual void cv::videostab::{anonymous}::VideoFileSourceImpl::reset()", "*N2cv9videostab12_GLOBAL__N_119VideoFileSourceImplE", "*N2cv6detail12PtrOwnerImplINS_9videostab12_GLOBAL__N_119VideoFileSourceImplENS_14DefaultDeleterIS4_EEEE", "N2cv9videostab15VideoFileSourceE", "virtual void cv::videostab::TranslationBasedLocalOutlierRejector::process(cv::Size, cv::InputArray, cv::InputArray, cv::OutputArray)", "virtual void cv::videostab::NullOutlierRejector::process(cv::Size, cv::InputArray, cv::InputArray, cv::OutputArray)", "N2cv9videostab19NullOutlierRejectorE", "N2cv9videostab36TranslationBasedLocalOutlierRejectorE", "N3tbb8internal7no_copyE", "N3tbb8internal9no_assignE", "N3rml16versioned_objectE", "N3rml6clientE", "N3tbb8internal3rml10tbb_clientE", "N3tbb8internal6marketE", "N3tbb10interface58internal9task_baseE", "N3tbb4taskE", "N3tbb10empty_taskE", "N3tbb10interface78internal14delegated_taskE", "N3tbb10interface78internal9wait_taskE", "N3tbb8internal19intrusive_list_nodeE", "N3rml3jobE", "N3tbb8internal9schedulerE", "N3tbb13tbb_exceptionE", "N3tbb8internal17generic_schedulerE", "N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE", "N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE", "TBB: VERSION\t\t4.4\nTBB: INTERFACE VERSION\t9003\nTBB: BUILD_DATE\t\tDec 16 201614:09:09\nTBB: BUILD_HOST\t    Unknown\nTBB: BUILD_OS\t\tAndroid\nTBB: BUILD_KERNEL\tUnknown\nTBB: BUILD_GCC\t\tgcc version 4.4.3\nTBB: BUILD_GLIBC\tUnknown\nTBB: BUILD_LD\t\tUnknown\nTBB: BUILD_TARGET\tUnknown\nTBB: BUILD_COMMAND\tuse cv::getBuildInformation() for details\nTBB: TBB_USE_DEBUG\t0\nTBB: TBB_USE_ASSERT\t0\n", "N3tbb14bad_last_allocE", "N3tbb13improper_lockE", "N3tbb10user_abortE", "N3tbb12missing_waitE", "N3tbb27invalid_multiple_schedulingE", "N3tbb8internal15control_storageE", "N3tbb8internal11padded_baseINS0_15control_storageELm128ELm32EEE", "N3tbb8internal6paddedINS0_15control_storageELm128EEE", "N3tbb8internal27allowed_parallelism_controlE", "N3tbb8internal18stack_size_controlE", "N3rml6serverE", "N3tbb8internal3rml10tbb_serverE", "N3tbb8internal3rml14private_serverE", "TKKK", "K:KKKKKKK", "TKKK", "K:KKKKKKK", "TKKK", "K:KKKKKKK", "\f ?.\ta7", "vdPowx", "vsPowx", "vdLn", "\f ?.\ta7", "\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?\"t1?", "+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=+Xc=", "Px=F", "i!\"4i!\"4i!\"4i!\"4", "i!\"4i!\"4i!\"4i!\"4", "\f ?.\ta7", "i!\"4i!\"4i!\"4i!\"4", "`0_tL", "`0_tL", "`0_tL", "i!\"4i!\"4i!\"4i!\"4", "`0_tL", "`0_tL", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4i!\"4", "`0_tL", "@&LH", "A'\r:", "QC,A", "TF<)", "VGy#", "KNQ\r", "M0@\n", "a\\\">", "c]$8", "eaFO", "hd=<", "c]^7", "if1R", "kh9F", "gc^A", "okOP", "pm\"U", "````````````````````````````````````````````````", "0123456789ABCDEF", "_TIFFMergeFields", "for fields array", "EstimateStripByteCounts", "MissingRequired", "TIFFFetchNormalTag", "TIFFFetchStripThing", "TIFFReadDirectoryCheckOrder", "TIFFFetchDirectory", "TIFFReadDirectory", "initCIELabConversion", "initYCbCrConversion", "BuildMapBitdepth16To8", "BuildMapUaToAa", "PhotometricInterpretation", "TIFFReadBufferSetup", "TIFFFillTile", "TIFFReadEncodedTile", "TIFFFillStrip", "TIFFReadEncodedStrip", "TIFFScanlineSize64", "TIFFVStripSize64", "TIFFComputeStrip", "TIFFWriteBufferSetup", "TIFFAppendToStrip", "TIFFWriteEncodedStrip", "TIFFWriteScanline", "TIFFOpen", "TIFFRewriteDirectory", "TIFFLinkDirectory", "TIFFWriteDirectoryTagIfdIfd8Array", "TIFFWriteDirectoryTagCheckedSrationalArray", "TIFFWriteDirectoryTagCheckedRationalArray", "TIFFWriteDirectoryTagSubifd", "TIFFWriteDirectoryTagTransferfunction", "TIFFWriteDirectoryTagSampleformatArray", "TIFFWriteDirectoryTagShortPerSample", "TIFFWriteDirectoryTagColormap", "TIFFWriteDirectoryTagLongLong8Array", "TIFFWriteDirectoryTagData", "TIFFWriteDirectorySec", "DumpModeDecode", "Fax4Decode", "Fax4Encode", "Fax3Decode2D", "Fax3SetupState", "Fax3Decode1D", "Fax3Encode", "InitCCITTFax3", "LogLuvDecode24", "LogLuvDecode32", "LogL16Decode", "LogLuvSetupDecode", "LogL16InitState", "LogLuvInitState", "LogLuvSetupEncode", "LogLuvVSetField", "TIFFInitSGILog", "LZWDecodeCompat", "LZWPreDecode", "LZWDecode", "LZWSetupEncode", "TIFFInitLZW", "NeXTDecode", "PackBitsDecode", "PixarLogPreDecode", "PixarLogDecode", "PixarLogSetupEncode", "PixarLogPreEncode", "PixarLogPostEncode", "PixarLogEncode", "PixarLogVSetField", "TIFFInitPixarLog", "PredictorEncodeTile", "ThunderSetupDecode", "ThunderDecode", "ThunderDecodeRow", "ZIPSetupDecode", "ZIPPreDecode", "ZIPDecode", "ZIPSetupEncode", "ZIPPreEncode", "ZIPPostEncode", "ZIPEncode", "TIFFInitZIP", "N3Iex6ArgExcE", "N3Iex5IoExcE", "N3Iex7TypeExcE", "N3Imf10OutputFileE", "N3Imf14TypedAttributeINS_12PreviewImageEEE", "N3Imf10OutputFile4DataE", "N3Imf11StdIFStreamE", "N3Imf11StdOFStreamE", "N3Imf11StdOSStreamE", "N3Iex8InputExcE", "N3Iex8ErrnoExcE", "N3Imf9AttributeE", "N3Imf14TypedAttributeINS_14ChromaticitiesEEE", "N3Imf14TypedAttributeINS_6EnvmapEEE", "N3Imf14TypedAttributeIfEE", "N3Imf14TypedAttributeINS_7KeyCodeEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IfEEEE", "N3Imf14TypedAttributeINS_8RationalEEE", "N3Imf14TypedAttributeISsEE", "N3Imf14TypedAttributeISt6vectorISsSaISsEEEE", "N3Imf14TypedAttributeINS_8TimeCodeEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IfEEEE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IiEEEEEE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IfEEEEEE", "N3Imf14TypedAttributeINS_11ChannelListEEE", "N3Imf14TypedAttributeINS_11CompressionEEE", "N3Imf14TypedAttributeIdEE", "N3Imf14TypedAttributeIiEE", "N3Imf14TypedAttributeINS_9LineOrderEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IfEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IdEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IdEEEE", "N3Imf14TypedAttributeINS_15TileDescriptionEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IdEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IfEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IdEEEE", "N3Imf10CompressorE", "N3Iex11OverflowExcE", "N3Imf9InputFileE", "N3Imf9InputFile4DataE", "N3Imf13RleCompressorE", "*N3Imf12_GLOBAL__N_114LineBufferTaskE", "N3Imf17ScanLineInputFileE", "N3Imf17ScanLineInputFile4DataE", "N3Imf7IStreamE", "N3Imf7OStreamE", "N3Imf13ZipCompressorE", "N3Imf15OpaqueAttributeE", "N3Imf15Pxr24CompressorE", "N3Imf13PizCompressorE", "N3Iex9EnoentExcE", "N3Iex8EsrchExcE", "N3Iex8EintrExcE", "N3Iex6EioExcE", "N3Iex8EnxioExcE", "N3Iex8E2bigExcE", "N3Iex10EnoexecExcE", "N3Iex8EbadfExcE", "N3Iex9EchildExcE", "N3Iex9EagainExcE", "N3Iex9EnomemExcE", "N3Iex9EaccesExcE", "N3Iex9EfaultExcE", "N3Iex10EnotblkExcE", "N3Iex8EbusyExcE", "N3Iex9EexistExcE", "N3Iex8ExdevExcE", "N3Iex9EnodevExcE", "N3Iex10EnotdirExcE", "N3Iex9EisdirExcE", "N3Iex9EinvalExcE", "N3Iex9EnfileExcE", "N3Iex9EmfileExcE", "N3Iex9EnottyExcE", "N3Iex10EtxtbsyExcE", "N3Iex8EfbigExcE", "N3Iex9EnospcExcE", "N3Iex9EspipeExcE", "N3Iex8ErofsExcE", "N3Iex9EmlinkExcE", "N3Iex8EpipeExcE", "N3Iex7EdomExcE", "N3Iex9ErangeExcE", "N3Iex9EnomsgExcE", "N3Iex8EidrmExcE", "N3Iex9EchrngExcE", "N3Iex11El2nsyncExcE", "N3Iex9El3hltExcE", "N3Iex9El3rstExcE", "N3Iex9ElnrngExcE", "N3Iex10EunatchExcE", "N3Iex9El2hltExcE", "N3Iex10EdeadlkExcE", "N3Iex9EnolckExcE", "N3Iex8EbadeExcE", "N3Iex8EbadrExcE", "N3Iex9ExfullExcE", "N3Iex9EnoanoExcE", "N3Iex10EbadrqcExcE", "N3Iex10EbadsltExcE", "N3Iex9EbfontExcE", "N3Iex9EnostrExcE", "N3Iex10EnodataExcE", "N3Iex8EtimeExcE", "N3Iex8EnosrExcE", "N3Iex9EnonetExcE", "N3Iex9EnopkgExcE", "N3Iex10EremoteExcE", "N3Iex10EnolinkExcE", "N3Iex7EadvExcE", "N3Iex9EsrmntExcE", "N3Iex8EcommExcE", "N3Iex9EprotoExcE", "N3Iex12EmultihopExcE", "N3Iex10EbadmsgExcE", "N3Iex15EnametoolongExcE", "N3Iex12EoverflowExcE", "N3Iex11EnotuniqExcE", "N3Iex9EbadfdExcE", "N3Iex10EremchgExcE", "N3Iex10ElibaccExcE", "N3Iex10ElibbadExcE", "N3Iex10ElibscnExcE", "N3Iex10ElibmaxExcE", "N3Iex11ElibexecExcE", "N3Iex9EilseqExcE", "N3Iex9EnosysExcE", "N3Iex8EloopExcE", "N3Iex11ErestartExcE", "N3Iex11EstrpipeExcE", "N3Iex12EnotemptyExcE", "N3Iex9EusersExcE", "N3Iex11EnotsockExcE", "N3Iex15EdestaddrreqExcE", "N3Iex11EmsgsizeExcE", "N3Iex13EprototypeExcE", "N3Iex14EnoprotooptExcE", "N3Iex18EprotonosupportExcE", "N3Iex18EsocktnosupportExcE", "N3Iex13EopnotsuppExcE", "N3Iex15EpfnosupportExcE", "N3Iex15EafnosupportExcE", "N3Iex13EaddrinuseExcE", "N3Iex16EaddrnotavailExcE", "N3Iex11EnetdownExcE", "N3Iex14EnetunreachExcE", "N3Iex12EnetresetExcE", "N3Iex15EconnabortedExcE", "N3Iex13EconnresetExcE", "N3Iex10EnobufsExcE", "N3Iex10EisconnExcE", "N3Iex11EnotconnExcE", "N3Iex12EshutdownExcE", "N3Iex15EtoomanyrefsExcE", "N3Iex12EtimedoutExcE", "N3Iex15EconnrefusedExcE", "N3Iex12EhostdownExcE", "N3Iex15EhostunreachExcE", "N3Iex11EalreadyExcE", "N3Iex14EinprogressExcE", "N3Iex9EstaleExcE", "N3Iex10EucleanExcE", "N3Iex10EnotnamExcE", "N3Iex10EnavailExcE", "N3Iex9EisnamExcE", "N3Iex12EremoteioExcE", "N3Iex12EcanceledExcE", "N3Iex9EdquotExcE", "N3Iex7BaseExcE", "N9IlmThread5MutexE", "N9IlmThread9SemaphoreE", "*N9IlmThread12_GLOBAL__N_112WorkerThreadE", "N9IlmThread10ThreadPoolE", "N9IlmThread4TaskE", "N3Imf13B44CompressorE", "*N3Imf12_GLOBAL__N_114TileBufferTaskE", "N3Imf14TiledInputFileE", "N3Imf14TiledInputFile4DataE", "N9IlmThread6ThreadE", "St9bad_alloc", "N10__cxxabiv117__class_type_infoE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "St9exception", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "N10__cxxabiv116__enum_type_infoE", "N10__cxxabiv123__fundamental_type_infoE", "PKDs", "PKDi", "PKDf", "PKDd", "PKDe", "PKDn", "N10__cxxabiv119__pointer_type_infoE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "N10__cxxabiv121__vmi_class_type_infoE", "St5ctypeIcE", "St5ctypeIwE", "St9basic_iosIcSt11char_traitsIcEE", "St9basic_iosIwSt11char_traitsIwEE", "St8ios_base", "St13basic_istreamIwSt11char_traitsIwEE", "St10money_base", "St13messages_base", "St12codecvt_base", "St7collateIcE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "NSt6locale5facetE", "N9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE", "N9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE", "St13basic_ostreamIwSt11char_traitsIwEE", "St15basic_stringbufIcSt11char_traitsIcESaIcEE", "St19basic_istringstreamIcSt11char_traitsIcESaIcEE", "St19basic_ostringstreamIcSt11char_traitsIcESaIcEE", "St18basic_stringstreamIcSt11char_traitsIcESaIcEE", "St11logic_error", "St16invalid_argument", "St12length_error", "St12out_of_range", "St13runtime_error", "St11range_error", "St15basic_streambufIcSt11char_traitsIcEE", "St15basic_streambufIwSt11char_traitsIwEE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St13basic_filebufIcSt11char_traitsIcEE", "St14basic_ifstreamIcSt11char_traitsIcEE", "St14basic_ofstreamIcSt11char_traitsIcEE", "*N12_GLOBAL__N_122generic_error_categoryE", "*N12_GLOBAL__N_121system_error_categoryE", "St14error_category", "St8bad_cast", "St10bad_typeid", "N10__cxxabiv117__pbase_type_infoE", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "NSt8ios_base7failureE", "St16bad_array_length", "St20bad_array_new_length"], "stringidentifiers": ["OPENCV_OPENCL_PERF_CHECK_BYPASS", "OPENCV_OPENCL_BUFFERPOOL_LIMIT", "OPENCV_OPENCL_HOST_PTR_BUFFERPOOL_LIMIT", "LXVPUNTMRMPNOONQNSOUPVRVTUUSRS", "LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM", "MWOTQVSVTUTSSRPQRQTPUOUNTMRMQNPPOTNY", "MWTNSMRMQNQORPTQUSTURVPUOSPQRP", "LXNQOPPPQQQURVSVTUUSVPVNUMTMSNSPTRUSWT", "MXPPOQOSPURVSVUUVSVQUPTPSQRSQY", "LXVRURTSSURVOVNUNSORRQSPSNRMPMONOPQSSUUVVV", "LYRQQPOPNQNSOTQTRSSQTPVPWQWSVTTTSSRQ", "KYQKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK", "MWQMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM", "__TBB_call_with_my_server_info", "__gnu_cxx::__concurrence_lock_error", "__gnu_cxx::__concurrence_unlock_error", "vector::reserve", "std::exception", "cv::Exception", "vector::_M_fill_insert", "bool", "unsigned", "float", "double", "string", "unknown", "true", "num_components", "eigenvalues", "eigenvectors", "OPENCV_TEMP_PATH", "status", "error", "Backtrace", "OPENCV_IPP", "disabled", "sse2", "sse3", "ssse3", "sse41", "sse42", "avx2", "HOST_ALLOC", "True", "TRUE", "False", "false", "FALSE", "OPENCV_OPENCL_RAISE_ERROR", "Intel", "Iris", "cl_khr_image2d_from_buffer", "_sat", "noconvert", "COEFF", "OPENCV_OPENCL_FORCE", "OPENCV_OPENCL_DEVICE", "dgpu", "igpu", "accelerator", "uchar", "short", "uchar3", "int2", "int4", "char", "char3", "ushort", "ushort3", "int8", "short3", "int3", "int16", "ulong", "ulong2", "ulong3", "ulong4", "ulong8", "ulong16", "uchar2", "uchar4", "uchar8", "uchar16", "char2", "char4", "char8", "char16", "ushort2", "ushort4", "ushort8", "ushort16", "short2", "short4", "short8", "short16", "float2", "float3", "float4", "float8", "float16", "double2", "double3", "double4", "double8", "double16", "GRAY", "BGRA", "name", "vectors", "values", "mean", "uint8", "uint16", "int32", "float32", "float64", "uint64", "type_id", "width", "height", "origin", "layout", "interleaved", "data", "sizes", "rows", "cols", "flags", "vertex_dt", "edge_dt", "vertex_count", "edge_count", "oriented", "header_dt", "header_user_data", "vertices", "edges", "count", "curve", "closed", "hole", "untyped", "rect", "color", "sequences", "level", "binary", "vector::_M_insert_aux", "planar", "recursive", "apos", "quot", "null", "basic_string::substr", "base64", "opencv_storage", "FLANN_INDEX", "MXVNTMRMPNOPOSPURVTVVU", "PTRMRV", "NUSMSTRVPVOTOS", "MXRMPNOPOSPURVSVUUVSVPUNSMRM", "MWUNSMQMONOOPPTRUSUUSVQVOU", "MXOMOSPURVSVUUVSVM", "MXOVQVOROPPNRMSMUNVPVRTVVV", "LXVPUNTMRMPNOONQNSOUPVRVTUUT", "PUTMQV", "OVUMSSRUQVPVOUOT", "MWVNTMRMPNPPQQTRUSUUSVPVNU", "LXPMNSNUOVRVTUUSWM", "MWQMWMNVTV", "MWNLVX", "MWNVVV", "PVRMUQ", "MWMMOKQKTMVMWK", "MWUQSPRPPQOSPURVSVUU", "MWOSUSTQRPPQOSPURVTV", "MWRPPQOSPURVTUUSTQRP", "NWUQTPQPPQPRQSTSUTUUTVQVPU", "MWOPUPOVUV", "MXVPUSTURVPUOSPQRPTQUUVV", "OVRPQSQURVSVTU", "MWOSPURVTUUSTQRPPQOSNY", "MXVPRPPQOSPURVTUUSTQRP", "KXMQNPOPPQPUQVSVTUUSVP", "MWQMOSPURVTUUSTQRPPQOS", "MWUQSPRPPQOSPURVTV", "MWOSTSURUQSPRPPQOSPURVTV", "OTSMQSQURVSV", "NVTQSPQPPQPRQSRSSTSURVPVOU", "MWNPOPPQPROTOUPVRVTUURUP", "MWUSTQRPPQOSPURVTUUSUPTNRMQM", "MWUQSPQPOQOSPTRUSVSWRXQX", "MWUNORUV", "MWONUROV", "OUTKQKQYTY", "OUPKSKSYPY", "OUTKSLRNROSQQRSSRURVSXTY", "OUPKQLRNROQQSRQSRURVQXPY", "MWRMPNOPOSPURVTUUSUPTNRM", "MWPORMRV", "MWONQMSMUNUPTROVUV", "MWTMRMPNOPOSPURVTUUSTQRPPQOS", "MWUPTRRSPROPPNRMTNUPUSTURVPV", "PURURVSVSURU", "PUSVRVRUSUSWRY", "PTRMRQ", "NVQMPNPPQQSQTPTNSMQM", "MWVLNX", "OUTKRNQQQSRVTY", "OUPKRNSQSSRVPY", "PTRKRY", "LXNRVR", "PURQRRSRSQRQ", "PUSMRORQSQSPRP", "PUSNRNRMSMSORQ", "NVRFRM", "KYQFOGNINKOMQNSNUMVKVIUGSFQF", "NVRBRb", "MWRQQRRSSRRQ", "MWSFRGQIQKRLSKRJ", "MWRHQGRFSGSIRKQL", "MWWRWQVOUNSMQMONNOMQMR", "MWMRMSNUOVQWSWUVVUWSWR", "LXLPNRQSSSVRXP", "RURUTTURTPRO", "RVRRUPVNVLUKTK", "NRRROPNNNLOKPK", "KYKRYR", "MWMWWM", "MWMMWW", "KYRJYNKVRZ", "JZJRNKVYZR", "KYKVKNYVYN", "JZLXJPZTXL", "LXLLLXXXXLLL", "KYRJKVYVRJ", "JZRIPOJOOSMYRUWYUSZOTORI", "LXPLPPLPLTPTPXTXTTXTXPTPTLPL", "QSRQQRRSSRRQ", "PTQPPQPSQTSTTSTQSPQP", "NVQNOONQNSOUQVSVUUVSVQUOSNQN", "NVRVQWRXSWRV", "MWQKPLPNQOSOTNTLSKQK", "NVRQQRRSSRRQ", "JZWLMRWX", "JZMLWRMX", "NVSLRMQLRKSLSNQP", "NVSKQMQORPSORNQO", "NVQLRMSLRKQLQNSP", "NVQKSMSORPQORNSO", "JZWMQMONNOMQMSNUOVQWWW", "JZMMMSNUOVQWSWUVVUWSWM", "JZMMSMUNVOWQWSVUUVSWMW", "JZMWMQNOONQMSMUNVOWQWW", "KYUBNRUb", "KYOBVROb", "MWRHSGRFQGQIRKSL", "MWQFRGSISKRLQKRJ", "MXVFTHSJSKTLUKTJ", "MXUHTGUFVGVHUJSL", "KZSFQGPIPKQMSNUNWMXKXIWGUFSF", "type", "is_uniform", "have_ranges", "bins", "thresh", "is_classifier", "default_k", "samples", "responses", "training_params", "nclusters", "cov_mat_type", "spherical", "diagonal", "generic", "epsilon", "iterations", "weights", "means", "covs", "mini_batch_size", "alpha", "norm", "train_method", "learnt_thetas", "o_labels", "n_labels", "SVM::getDefaultGrid", "degree", "gamma", "var_count", "class_count", "class_labels", "sv_total", "support_vectors", "uncompressed_sv_total", "uncompressed_support_vectors", "decision_functions", "svm_type", "svmType", "C_SVC", "NU_SVC", "ONE_CLASS", "EPS_SVR", "NU_SVR", "kernel", "LINEAR", "POLY", "SIGMOID", "CHI2", "INTER", "coef0", "term_criteria", "class_weights", "sv_count", "index", "optimize_linear", "var_importance", "nactive_vars", "oob_error", "ntrees", "trees", "nodes", "var_all", "ord_var_count", "cat_var_count", "global_var_idx", "var_idx", "var_type", "cat_ofs", "cat_map", "missing_subst", "not_in", "value", "norm_class_idx", "splits", "quality", "vector::_M_range_insert", "use_surrogates", "max_categories", "regression_accuracy", "max_depth", "min_sample_count", "cross_validation_folds", "use_1se_rule", "priors", "format", "cat_count", "svmsgdType", "ASGD", "marginType", "SOFT_MARGIN", "HARD_MARGIN", "marginRegularization", "initialStepSize", "stepDecreasingPower", "shift", "GAUSSIAN", "IDENTITY", "SIGMOID_SYM", "f_param1", "f_param2", "BACKPROP", "dw_scale", "moment_scale", "RPROP", "dw_plus", "dw_minus", "dw_min", "dw_max", "activation_function", "activation_function_id", "min_val", "max_val", "min_val1", "max_val1", "layer_sizes", "input_scale", "output_scale", "inv_output_scale", "boosting_type", "DiscreteAdaboost", "RealAdaboost", "LogitBoost", "GentleAdaboost", "weight_trimming_rate", "Unknown", "cls_labels", "productsum", "inv_eigen_values", "cov_rotate_mats", "contrast_weight", "saturation_weight", "exposure_weight", "contrast", "sigma_color", "sigma_space", "saturation", "bias", "scale", "intensity", "light_adapt", "color_adapt", "max_bits", "exclude_range", "lambda", "random", "max_iter", "threshold", "history", "nsamples", "nKNN", "dist2Threshold", "detectShadows", "shadowValue", "shadowThreshold", "nmixtures", "backgroundRatio", "varThreshold", "varThresholdGen", "varInit", "varMin", "varMax", "complexityReductionThreshold", "RGBE", "OPENCV_VIDEOCAPTURE_DEBUG", "cvNamedWindow", "cvDestroyWindow", "cvDestroyAllWindows", "cvShowImage", "cvResizeWindow", "cvMoveWindow", "cvCreateTrackbar", "cvCreateTrackbar2", "cvSetMouseCallback", "cvGetTrackbarPos", "cvSetTrackbarPos", "cvSetTrackbarMax", "cvSetTrackbarMin", "cvGetWindowHandle", "cvGetWindowName", "cvWaitKey", "OPENCV_LEGACY_WAITKEY", "cvInitSystem", "cvStartWindowThread", "cvAddText", "cvDisplayStatusBar", "cvStartLoop", "cvStopLoop", "cvSaveWindowParameters", "cvCreateButton", "winSize", "blockSize", "blockStride", "cellSize", "nbins", "derivAperture", "winSigma", "histogramNormType", "gammaCorrection", "nlevels", "signedGradient", "SVMDetector", "L2HysThreshold", "OBJECT_DETECTOR", "rects", "tilted", "stageType", "BOOST", "featureType", "HAAR", "featureParams", "maxCatCount", "stages", "weakClassifiers", "leafValues", "internalNodes", "stageThreshold", "features", "size", "stage_threshold", "feature", "left_val", "left_node", "right_val", "right_node", "parent", "next", "indexParams", "searchParams", "FlannBased", "BruteForce", "typename", "extended", "upright", "octaves", "sublevels", "diffusivity", "descriptor", "descriptor_channels", "descriptor_size", "thresholdStep", "minThreshold", "maxThreshold", "minRepeatability", "minDistBetweenBlobs", "filterByColor", "blobColor", "filterByArea", "minArea", "maxArea", "filterByCircularity", "minCircularity", "maxCircularity", "filterByInertia", "minInertiaRatio", "maxInertiaRatio", "filterByConvexity", "minConvexity", "maxConvexity", "minDisparity", "numDisparities", "speckleWindowSize", "speckleRange", "disp12MaxDiff", "preFilterType", "preFilterSize", "preFilterCap", "textureThreshold", "uniquenessRatio", "mode", "flag", "dummies", "default", "nRads", "nAngs", "iters", "beWei", "scWei", "iaWei", "costF", "sigma", "img_2", "rotIn", "affine_type", "distance", "rank", "regularization", "private", "shared", "TBB_VERSION", "__RML_open_factory", "__TBB_make_rml_server", "__RML_close_factory", "scalable_malloc", "malloc", "ALLOCATOR", "scalable_free", "scalable_aligned_malloc", "scalable_aligned_free", "pthread_join", "pthread_detach", "pthread_attr_init", "pthread_attr_setstack_size", "pthread_create", "pthread_attr_destroy", "JPEGMEM", "RIFF", "WEBP", "VP8X", "ALPH", "VP8L", "invalid", "duplicate", "truncated", "sRGB", "png_set_gAMA", "png_set_background", "undefined", "_TIFFVGetField", "DotRange", "TIFFSetField", "_TIFFSetupFields", "TIFFFieldWithTag", "TIFFFieldWithName", "ExposureTime", "FNumber", "ExposureProgram", "SpectralSensitivity", "ISOSpeedRatings", "OptoelectricConversionFactor", "ExifVersion", "DateTimeOriginal", "DateTimeDigitized", "ComponentsConfiguration", "CompressedBitsPerPixel", "ShutterSpeedValue", "ApertureValue", "BrightnessValue", "ExposureBiasValue", "MaxApertureValue", "SubjectDistance", "MeteringMode", "LightSource", "Flash", "FocalLength", "SubjectArea", "MakerNote", "UserComment", "SubSecTime", "SubSecTimeOriginal", "SubSecTimeDigitized", "FlashpixVersion", "ColorSpace", "PixelXDimension", "PixelYDimension", "RelatedSoundFile", "FlashEnergy", "SpatialFrequencyResponse", "FocalPlaneXResolution", "FocalPlaneYResolution", "FocalPlaneResolutionUnit", "SubjectLocation", "ExposureIndex", "SensingMethod", "FileSource", "SceneType", "CFAPattern", "CustomRendered", "ExposureMode", "WhiteBalance", "DigitalZoomRatio", "FocalLengthIn35mmFilm", "SceneCaptureType", "GainControl", "Contrast", "Saturation", "Sharpness", "DeviceSettingDescription", "SubjectDistanceRange", "ImageUniqueID", "SubfileType", "OldSubfileType", "ImageWidth", "ImageLength", "BitsPerSample", "Compression", "PhotometricInterpretation", "Threshholding", "CellWidth", "CellLength", "FillOrder", "DocumentName", "ImageDescription", "Make", "Model", "StripOffsets", "Orientation", "SamplesPerPixel", "RowsPerStrip", "StripByteCounts", "MinSampleValue", "MaxSampleValue", "XResolution", "YResolution", "PlanarConfiguration", "PageName", "XPosition", "YPosition", "FreeOffsets", "FreeByteCounts", "GrayResponseUnit", "GrayResponseCurve", "ResolutionUnit", "PageNumber", "ColorResponseUnit", "TransferFunction", "Software", "DateTime", "Artist", "HostComputer", "WhitePoint", "PrimaryChromaticities", "ColorMap", "HalftoneHints", "TileWidth", "TileLength", "TileOffsets", "TileByteCounts", "SubIFD", "InkSet", "InkNames", "NumberOfInks", "TargetPrinter", "ExtraSamples", "SampleFormat", "SMinSampleValue", "SMaxSampleValue", "ClipPath", "XClipPathUnits", "YClipPathUnits", "YCbCrCoefficients", "YCbCrSubsampling", "YCbCrPositioning", "ReferenceBlackWhite", "XMLPacket", "Matteing", "DataType", "ImageDepth", "TileDepth", "ImageFullWidth", "ImageFullLength", "TextureFormat", "TextureWrapModes", "FieldOfViewCotangent", "MatrixWorldToScreen", "MatrixWorldToCamera", "Copyright", "RichTIFFIPTC", "Photoshop", "EXIFIFDOffset", "GPSIFDOffset", "FaxRecvParams", "FaxSubAddress", "FaxRecvTime", "FaxDcs", "StoNits", "InteroperabilityIFDOffset", "DNGVersion", "DNGBackwardVersion", "UniqueCameraModel", "LocalizedCameraModel", "CFAPlaneColor", "CFALayout", "LinearizationTable", "BlackLevelRepeatDim", "BlackLevel", "BlackLevelDeltaH", "BlackLevelDeltaV", "WhiteLevel", "DefaultScale", "BestQualityScale", "DefaultCropOrigin", "DefaultCropSize", "ColorMatrix1", "ColorMatrix2", "CameraCalibration1", "CameraCalibration2", "ReductionMatrix1", "ReductionMatrix2", "AnalogBalance", "AsShotNeutral", "AsShotWhiteXY", "BaselineExposure", "BaselineNoise", "BaselineSharpness", "BayerGreenSplit", "LinearResponseLimit", "CameraSerialNumber", "LensInfo", "ChromaBlurRadius", "AntiAliasStrength", "ShadowScale", "DNGPrivateData", "MakerNoteSafety", "CalibrationIlluminant1", "CalibrationIlluminant2", "RawDataUniqueID", "OriginalRawFileName", "OriginalRawFileData", "ActiveArea", "MaskedAreas", "AsShotICCProfile", "AsShotPreProfileMatrix", "CurrentICCProfile", "CurrentPreProfileMatrix", "PerSample", "ReadDirEntryArray", "TIFFFetchNormalTag", "tiles", "strips", "Colormap", "gtStripSeparate", "gtTileSeparate", "Planarconfiguration", "TIFFNumberOfStrips", "TIFFTileRowSize", "TIFFNumberOfTiles", "tile", "strip", "scanline", "TIFFRegisterCODEC", "TIFFUnRegisterCODEC", "None", "PackBits", "ThunderScan", "NeXT", "JPEG", "Deflate", "AdobeDeflate", "PixarLog", "SGILog", "SGILog24", "LZMA", "InitCCITTFax3", "TIFFInitCCITTFax3", "TIFFInitCCITTFax4", "Group4Options", "Group3Options", "FaxMode", "FaxFillFunc", "BadFaxLines", "CleanFaxData", "ConsecutiveBadFaxLines", "SGILogDataFmt", "SGILogEncode", "TIFFPredictorInit", "Predictor", "maxlyrs", "maxpkts", "debug", "FTYP", "JP2H", "IHDR", "BPCC", "COLR", "PCLR", "CMAP", "CDEF", "RESC", "RESD", "JP2C", "JP2I", "UUID", "UINF", "ULST", "UNKNOWN", "real", "lrcp", "rlcp", "rpcl", "pcrl", "cprl", "imgareatlx", "imgareatly", "tilegrdtlx", "tilegrdtly", "tilewidth", "tileheight", "prcwidth", "prcheight", "cblkwidth", "cblkheight", "nomct", "numrlvls", "lazy", "termall", "segsym", "vcausal", "pterm", "resetprob", "numgbits", "rate", "ilyrrates", "_jp2overhead", "preview", "chromaticities", "whiteLuminance", "adoptedNeutral", "renderingTransform", "lookModTransform", "xDensity", "owner", "comments", "capDate", "utcOffset", "longitude", "latitude", "altitude", "focus", "expTime", "aperture", "isoSpeed", "envmap", "keyCode", "timeCode", "wrapmodes", "framesPerSecond", "multiView", "worldToCamera", "worldToNDC", "displayWindow", "dataWindow", "pixelAspectRatio", "screenWindowCenter", "screenWindowWidth", "channels", "lineOrder", "compression", "timecode", "stringvector", "keycode", "chlist", "tiledesc", "box2i", "box2f", "rational", "m33f", "m33d", "m44f", "m44d", "std::bad_alloc", "std::bad_exception", "POSIX", "space", "print", "cntrl", "upper", "lower", "digit", "punct", "xdigit", "alnum", "graph", "basic_ios::clear", "basic_string::erase", "AKST", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "January", "February", "March", "April", "June", "July", "August", "September", "October", "November", "December", "basic_string::copy", "basic_string::compare", "basic_string::_S_create", "basic_string::_M_replace_aux", "basic_string::insert", "basic_string::replace", "basic_string::assign", "basic_string::append", "basic_string::resize", "basic_string::basic_string", "system", "std::bad_cast", "std::bad_typeid", "LC_CTYPE", "LC_NUMERIC", "LC_TIME", "LC_COLLATE", "LC_MONETARY", "LC_MESSAGES", "std::bad_array_length", "std::bad_array_new_length", "_GLOBAL_", "auto", "JArray", "operator", "std::allocator", "allocator", "std::basic_string", "basic_string", "std::string", "std::istream", "basic_istream", "std::ostream", "basic_ostream", "std::iostream", "basic_iostream", "const_cast", "dynamic_cast", "reinterpret_cast", "static_cast", "throw", "boolean", "byte", "__float128", "long", "__int128", "void", "wchar_t", "decimal32", "decimal64", "decimal128", "half", "char16_t", "char32_t", "gfffgfffgfffgfff", "N2cv6detail8PtrOwnerE", "N2cv6detail12PtrOwnerImplINS_2ml9TrainDataENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann17KDTreeIndexParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann12SearchParamsENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_19javaFeatureDetectorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_23javaDescriptorExtractorENS_14DefaultDeleterIS2_EEEE", "N2cv3hal5DFT2DE", "N2cv3hal5DCT2DE", "N2cv10OcvDftImplE", "N2cv15OcvDftBasicImplE", "N2cv18DctIPPLoop_InvokerE", "N2cv10OcvDctImplE", "N2cv21Dft_C_IPPLoop_InvokerINS_16IPPDFT_C_FunctorEEE", "N2cv21Dft_R_IPPLoop_InvokerINS_16IPPDFT_R_FunctorEEE", "N2cv6detail12PtrOwnerImplINS_15OcvDftBasicImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDftImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10OcvDctImplENS_14DefaultDeleterIS2_EEEE", "N2cv16MinProblemSolverE", "N2cv14DownhillSolverE", "N2cv18DownhillSolverImplE", "N2cv6detail12PtrOwnerImplINS_18DownhillSolverImplENS_14DefaultDeleterIS2_EEEE", "N2cv24KMeansPPDistanceComputerE", "N2cv22KMeansDistanceComputerE", "N2cv16MinProblemSolver8FunctionE", "N2cv14ConjGradSolverE", "N2cv18ConjGradSolverImplE", "N2cv6detail12PtrOwnerImplINS_18ConjGradSolverImplENS_14DefaultDeleterIS2_EEEE", "N2cv3ipp24IppLUTParallelBody_LUTCNE", "N2cv15LUTParallelBodyE", "N2cv6detail12PtrOwnerImplINS_16ParallelLoopBodyENS_14DefaultDeleterIS2_EEEE", "N2cv20BufferPoolControllerE", "N2cv12MatAllocatorE", "N2cv25DummyBufferPoolControllerE", "N2cv15StdMatAllocatorE", "N2cv9ExceptionE", "N2cv16TLSDataContainerE", "N2cv7TLSDataINS_5instr11NodeDataTlsEEE", "N2cv7TLSDataINS_11CoreTLSDataEEE", "N2cv3ocl16OpenCLBufferPoolIP7_cl_memEE", "N2cv3ocl24OpenCLBufferPoolBaseImplINS0_20OpenCLBufferPoolImplENS0_13CLBufferEntryEP7_cl_memEE", "N2cv3ocl20OpenCLBufferPoolImplE", "N2cv3ocl15OpenCLAllocatorE", "N2cv16ParallelLoopBodyE", "N3tbb10interface98internal9flag_taskE", "N2cv5MatOpE", "N2cv14MatOp_IdentityE", "N2cv11MatOp_AddExE", "N2cv9MatOp_BinE", "N2cv9MatOp_CmpE", "N2cv10MatOp_GEMME", "N2cv12MatOp_InvertE", "N2cv7MatOp_TE", "N2cv11MatOp_SolveE", "N2cv17MatOp_InitializerE", "N2cv9FormattedE", "N2cv9FormatterE", "N2cv13FormattedImplE", "N2cv13FormatterBaseE", "N2cv16DefaultFormatterE", "N2cv15MatlabFormatterE", "N2cv15PythonFormatterE", "N2cv14NumpyFormatterE", "N2cv12CSVFormatterE", "N2cv10CFormatterE", "N2cv6detail12PtrOwnerImplINS_13FormattedImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16DefaultFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15MatlabFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12CSVFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15PythonFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_14NumpyFormatterENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10CFormatterENS_14DefaultDeleterIS2_EEEE", "ucwsifdr", "N2cv11FileStorageE", "N2cv6detail12PtrOwnerImplI11CvSparseMatNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvFileStorageNS_14DefaultDeleterIS2_EEEE", "N2cv9AlgorithmE", "N2cv6StringE", "N7cvflann17flann_algorithm_tE", "N7cvflann20flann_centers_init_tE", "N7cvflann7anyimpl15base_any_policyE", "N7cvflann7anyimpl21typed_base_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl14big_any_policyINS_20flann_centers_init_tEEE", "N7cvflann7anyimpl21typed_base_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl14big_any_policyINS_17flann_algorithm_tEEE", "N7cvflann7anyimpl21typed_base_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl14big_any_policyIN2cv6StringEEE", "N7cvflann7anyimpl21typed_base_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl14big_any_policyINS0_9empty_anyEEE", "N7cvflann7anyimpl9empty_anyE", "N7cvflann7anyimpl21typed_base_any_policyIPKcEE", "N7cvflann7anyimpl16small_any_policyIPKcEE", "N7cvflann7anyimpl21typed_base_any_policyIiEE", "N7cvflann7anyimpl16small_any_policyIiEE", "N7cvflann7anyimpl21typed_base_any_policyIfEE", "N7cvflann7anyimpl16small_any_policyIfEE", "N7cvflann7anyimpl21typed_base_any_policyIbEE", "N7cvflann7anyimpl16small_any_policyIbEE", "N7cvflann7anyimpl21typed_base_any_policyIjEE", "N7cvflann7anyimpl16small_any_policyIjEE", "N7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "N7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L2IfEEE4NodeE", "PPN7cvflann11KDTreeIndexINS_2L1IfEEE4NodeE", "N7cvflann18KNNSimpleResultSetIfEE", "N7cvflann11KMeansIndexINS_2L1IfEEE22KMeansDistanceComputerE", "N7cvflann11KMeansIndexINS_2L2IfEEE22KMeansDistanceComputerE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L1IfEEE4NodeEEE", "N7cvflann7anyimpl21typed_base_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann7anyimpl16small_any_policyIPPNS_11KDTreeIndexINS_2L2IfEEE4NodeEEE", "N7cvflann12KNNResultSetIfEE", "N2cv5flann5IndexE", "N7cvflann14FLANNExceptionE", "N7cvflann7anyimpl12bad_any_castE", "N7cvflann7NNIndexINS_10HammingLUTEEE", "N7cvflann5IndexINS_10HammingLUTEEE", "N7cvflann7NNIndexINS_2L2IfEEEE", "N7cvflann5IndexINS_2L2IfEEEE", "N7cvflann7NNIndexINS_2L1IfEEEE", "N7cvflann5IndexINS_2L1IfEEEE", "N7cvflann7anyimpl21typed_base_any_policyIdEE", "N7cvflann7anyimpl14big_any_policyIdEE", "N7cvflann9ResultSetIiEE", "N7cvflann15UniqueResultSetIiEE", "N7cvflann18KNNUniqueResultSetIiEE", "N7cvflann9ResultSetIfEE", "N7cvflann15UniqueResultSetIfEE", "N7cvflann18KNNUniqueResultSetIfEE", "N7cvflann21RadiusUniqueResultSetIiEE", "N7cvflann21RadiusUniqueResultSetIfEE", "N7cvflann11LinearIndexINS_10HammingLUTEEE", "N7cvflann27HierarchicalClusteringIndexINS_10HammingLUTEEE", "N7cvflann8LshIndexINS_10HammingLUTEEE", "N7cvflann11LinearIndexINS_2L2IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L2IfEEEE", "N7cvflann11KDTreeIndexINS_2L2IfEEEE", "N7cvflann11KMeansIndexINS_2L2IfEEEE", "N7cvflann14CompositeIndexINS_2L2IfEEEE", "N7cvflann14AutotunedIndexINS_2L2IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L2IfEEEE", "N7cvflann8LshIndexINS_2L2IfEEEE", "N7cvflann11LinearIndexINS_2L1IfEEEE", "N7cvflann17KDTreeSingleIndexINS_2L1IfEEEE", "N7cvflann11KDTreeIndexINS_2L1IfEEEE", "N7cvflann11KMeansIndexINS_2L1IfEEEE", "N7cvflann14CompositeIndexINS_2L1IfEEEE", "N7cvflann14AutotunedIndexINS_2L1IfEEEE", "N7cvflann27HierarchicalClusteringIndexINS_2L1IfEEEE", "N7cvflann8LshIndexINS_2L1IfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPReorderFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_17IPPGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_7RGB2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_10RGB2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_10RGB5x52RGBEEE", "N2cv23CvtColorIPPLoop_InvokerINS_20IPPColor2GrayFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayItEEEE", "N2cv20CvtColorLoop_InvokerINS_8RGB2GrayIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_18IPPGray2BGRFunctorEEE", "N2cv23CvtColorIPPLoop_InvokerINS_19IPPGray2BGRAFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIhEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBItEEEE", "N2cv20CvtColorLoop_InvokerINS_8Gray2RGBIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB5x52GrayEEE", "N2cv20CvtColorLoop_InvokerINS_11Gray2RGB5x5EEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11RGB2YCrCb_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_11YCrCb2RGB_fIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPReorderGeneralFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2XYZ_fIfEEEE", "N2cv23CvtColorIPPLoop_InvokerINS_24IPPGeneralReorderFunctorEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iIhEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_iItEEEE", "N2cv20CvtColorLoop_InvokerINS_9XYZ2RGB_fIfEEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HSV_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2HLS_fEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HSV2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9HLS2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Lab_fEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_bEEE", "N2cv20CvtColorLoop_InvokerINS_9RGB2Luv_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Lab2RGB_fEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_bEEE", "N2cv20CvtColorLoop_InvokerINS_9Luv2RGB_fEEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi0ELi1EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi0EEE", "N2cv22YUV420sp2RGB888InvokerILi2ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi0ELi1EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi0EEE", "N2cv24YUV420sp2RGBA8888InvokerILi2ELi1EEE", "N2cv21YUV420p2RGB888InvokerILi0EEE", "N2cv21YUV420p2RGB888InvokerILi2EEE", "N2cv23YUV420p2RGBA8888InvokerILi0EEE", "N2cv23YUV420p2RGBA8888InvokerILi2EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi1EEE", "N2cv22RGB888toYUV420pInvokerILi0ELi2EEE", "N2cv22RGB888toYUV420pInvokerILi2ELi2EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi0ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi0ELi1ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi0EEE", "N2cv21YUV422toRGB888InvokerILi2ELi0ELi1EEE", "N2cv21YUV422toRGB888InvokerILi2ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi0ELi1ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi0EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi0ELi1EEE", "N2cv23YUV422toRGBA8888InvokerILi2ELi1ELi0EEE", "N2cv20CvtColorLoop_InvokerINS_10RGBA2mRGBAIhEEEE", "N2cv20CvtColorLoop_InvokerINS_10mRGBA2RGBAIhEEEE", "N2cv6detail12PtrOwnerImplI12CvMemStorageNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI5CvMatNS_14DefaultDeleterIS2_EEEE", "N2cv18IPPCalcHistInvokerE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist2D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist3D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv20CalcHist1D_8uInvokerEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerItEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist1D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist2D_InvokerIfEEKNS_16auto_partitionerEEE", "N3tbb10interface98internal9start_forINS_13blocked_rangeIiEEN2cv18calcHist3D_InvokerIfEEKNS_16auto_partitionerEEE", "N2cv19LineSegmentDetectorE", "N2cv23LineSegmentDetectorImplE", "N2cv6detail12PtrOwnerImplINS_23LineSegmentDetectorImplENS_14DefaultDeleterIS2_EEEE", "N2cv13parallelCannyE", "N2cv9finalPassE", "N2cv16GeneralizedHoughE", "N2cv23GeneralizedHoughBallardE", "N2cv20GeneralizedHoughGuilE", "N2cv9ColumnSumIihEE", "N2cv9ColumnSumIthEE", "N2cv9ColumnSumIisEE", "N2cv9ColumnSumIitEE", "N2cv9ColumnSumIiiEE", "N2cv9ColumnSumIifEE", "N2cv26BilateralFilter_8u_InvokerE", "N2cv27BilateralFilter_32f_InvokerE", "N2cv6RowSumIhiEE", "N2cv6RowSumIhtEE", "N2cv6RowSumIhdEE", "N2cv6RowSumItiEE", "N2cv6RowSumItdEE", "N2cv6RowSumIsiEE", "N2cv6RowSumIiiEE", "N2cv6RowSumIsdEE", "N2cv6RowSumIfdEE", "N2cv6RowSumIddEE", "N2cv9ColumnSumIdhEE", "N2cv9ColumnSumIdtEE", "N2cv9ColumnSumIdsEE", "N2cv9ColumnSumIdfEE", "N2cv9ColumnSumIidEE", "N2cv9ColumnSumIddEE", "N2cv9SqrRowSumIhiEE", "N2cv9SqrRowSumIhdEE", "N2cv9SqrRowSumItdEE", "N2cv9SqrRowSumIsdEE", "N2cv9SqrRowSumIfdEE", "N2cv9SqrRowSumIddEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_6RowSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIihEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIthEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdhEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIitEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdtEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIisEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdsEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIiiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIifEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIdfEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIidEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9ColumnSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_12FilterEngineENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhiEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIhdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumItdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIsdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIfdEENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9SqrRowSumIddEENS_14DefaultDeleterIS3_EEEE", "N2cv3hal8Filter2DE", "N2cv3hal11SepFilter2DE", "N2cv13BaseRowFilterE", "N2cv16BaseColumnFilterE", "N2cv10BaseFilterE", "N2cv12FilterEngineE", "N2cv9RowFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEE", "N2cv9RowFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEE", "N2cv9RowFilterIhiNS_12RowVec_8u32sEEE", "N2cv9RowFilterIhfNS_8RowNoVecEEE", "N2cv9RowFilterIhdNS_8RowNoVecEEE", "N2cv9RowFilterItfNS_8RowNoVecEEE", "N2cv9RowFilterItdNS_8RowNoVecEEE", "N2cv9RowFilterIsfNS_13RowVec_16s32fEEE", "N2cv9RowFilterIsdNS_8RowNoVecEEE", "N2cv9RowFilterIffNS_10RowVec_32fEEE", "N2cv9RowFilterIfdNS_8RowNoVecEEE", "N2cv9RowFilterIddNS_8RowNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEE", "N2cv12ColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEE", "N2cv12ColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEE", "N2cv16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEE", "N2cv12ColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEE", "N2cv16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEE", "N2cv8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEE", "N2cv8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEE", "N2cv8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIftEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DItNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEE", "N2cv8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEE", "N2cv8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEE", "N2cv8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEE", "N2cv6detail12PtrOwnerImplI9IppFilterILi5EENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplI9IppFilterILi3EENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplI9DftFilterNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI9OcvFilterNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI12OcvSepFilterNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIhiNS_21SymmRowSmallVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_18SymmRowSmallFilterIffNS_19SymmRowSmallVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhiNS_12RowVec_8u32sEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIhdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItfNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterItdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsfNS_13RowVec_16s32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIsdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIffNS_10RowVec_32fEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIfdNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_9RowFilterIddNS_8RowNoVecEEENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_13FixedPtCastExIihEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIfsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIffEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_12ColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIisEENS_25SymmColumnSmallVec_32s16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_21SymmColumnSmallFilterINS_4CastIffEENS_22SymmColumnSmallVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_13FixedPtCastExIihEENS_19SymmColumnVec_32s8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdhEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIftEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdtEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIisEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIfsEENS_20SymmColumnVec_32f16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIdsEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIffEENS_17SymmColumnVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_16SymmColumnFilterINS_4CastIddEENS_11ColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfhEENS_12FilterVec_8uEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIfsEENS_15FilterVec_8u16sEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIhNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIftEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DItNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIfsEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIffEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIsNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIfNS_4CastIffEENS_13FilterVec_32fEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_8Filter2DIdNS_4CastIddEENS_11FilterNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv8colormap8ColorMapE", "N2cv8colormap6AutumnE", "N2cv8colormap4BoneE", "N2cv8colormap3JetE", "N2cv8colormap6WinterE", "N2cv8colormap7RainbowE", "N2cv8colormap5OceanE", "N2cv8colormap6SummerE", "N2cv8colormap6SpringE", "N2cv8colormap4CoolE", "N2cv8colormap3HSVE", "N2cv8colormap4PinkE", "N2cv8colormap3HotE", "N2cv8colormap6ParulaE", "N2cv15ThresholdRunnerE", "N2cv18BlendLinearInvokerIhEE", "N2cv18BlendLinearInvokerIfEE", "N2cv3hal5MorphE", "N2cv16IppMorphBaseImplE", "N2cv12IppMorphImplILi0EEE", "N2cv12IppMorphImplILi16EEE", "N2cv12IppMorphImplILi24EEE", "N2cv12IppMorphImplILi5EEE", "N2cv12IppMorphImplILi21EEE", "N2cv12IppMorphImplILi29EEE", "N2cv12OcvMorphImplE", "N2cv14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEE", "N2cv14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEE", "N2cv14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEE", "N2cv14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEE", "N2cv14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEE", "N2cv14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEE", "N2cv14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEE", "N2cv17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEE", "N2cv17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEE", "N2cv17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEE", "N2cv17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEE", "N2cv11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEE", "N2cv11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEE", "N2cv11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEE", "N2cv11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEE", "N2cv11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEE", "N2cv11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEE", "N2cv11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEE", "N2cv11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEE", "N2cv11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEE", "N2cv11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEE", "N2cv6detail12PtrOwnerImplINS_16IppMorphBaseImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12OcvMorphImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIhEENS_12MorphRowIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpItEENS_12MorphRowIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIsEENS_12MorphRowIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIfEENS_12MorphRowFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MinOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIhEENS_12MorphRowIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpItEENS_12MorphRowIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIsEENS_12MorphRowIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIfEENS_12MorphRowFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_14MorphRowFilterINS_5MaxOpIdEENS_13MorphRowNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIhEENS_15MorphColumnIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpItEENS_15MorphColumnIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIsEENS_15MorphColumnIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIfEENS_15MorphColumnFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MinOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIhEENS_15MorphColumnIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpItEENS_15MorphColumnIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIsEENS_15MorphColumnIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIfEENS_15MorphColumnFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_17MorphColumnFilterINS_5MaxOpIdEENS_16MorphColumnNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIhEENS_9MorphIVecINS_6VMin8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpItEENS_9MorphIVecINS_7VMin16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIsEENS_9MorphIVecINS_7VMin16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIfEENS_9MorphFVecINS_7VMin32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MinOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIhEENS_9MorphIVecINS_6VMax8uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpItEENS_9MorphIVecINS_7VMax16uEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIsEENS_9MorphIVecINS_7VMax16sEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIfEENS_9MorphFVecINS_7VMax32fEEEEENS_14DefaultDeleterIS8_EEEE", "N2cv6detail12PtrOwnerImplINS_11MorphFilterINS_5MaxOpIdEENS_10MorphNoVecEEENS_14DefaultDeleterIS6_EEEE", "N2cv17Bayer2RGB_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv18Bayer2Gray_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv17Bayer2RGB_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerIhNS_24SIMDBayerInterpolator_8uEEE", "N2cv29Bayer2RGB_EdgeAware_T_InvokerItNS_26SIMDBayerStubInterpolator_ItEEEE", "N2cv5CLAHEE", "N2cv15resizeNNInvokerE", "N2cv16IPPresizeInvokerE", "N2cv12RemapInvokerE", "N2cv17WarpAffineInvokerE", "N2cv22WarpPerspectiveInvokerE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIhisLi2048ENS_12HResizeNoVecEEENS_13VResizeLinearIhisNS_11FixedPtCastIihLi22EEENS_22VResizeLinearVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearItffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearItffNS_4CastIftEENS_22VResizeLinearVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIsffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIsffNS_4CastIfsEENS_22VResizeLinearVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIfffLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIfffNS_4CastIffEENS_20VResizeLinearVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_13HResizeLinearIddfLi1ENS_12HResizeNoVecEEENS_13VResizeLinearIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIhisEENS_12VResizeCubicIhisNS_11FixedPtCastIihLi22EEENS_21VResizeCubicVec_32s8uEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicItffEENS_12VResizeCubicItffNS_4CastIftEENS_21VResizeCubicVec_32f16ILin32768EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIsffEENS_12VResizeCubicIsffNS_4CastIfsEENS_21VResizeCubicVec_32f16ILi0EEEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIfffEENS_12VResizeCubicIfffNS_4CastIffEENS_19VResizeCubicVec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_12HResizeCubicIddfEENS_12VResizeCubicIddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IhisEENS_15VResizeLanczos4IhisNS_11FixedPtCastIihLi22EEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4ItffEENS_15VResizeLanczos4ItffNS_4CastIftEENS_12VResizeNoVecEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IsffEENS_15VResizeLanczos4IsffNS_4CastIfsEENS_25VResizeLanczos4Vec_32f16sEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IfffEENS_15VResizeLanczos4IfffNS_4CastIffEENS_22VResizeLanczos4Vec_32fEEEEE", "N2cv21resizeGeneric_InvokerINS_15HResizeLanczos4IddfEENS_15VResizeLanczos4IddfNS_4CastIddEENS_12VResizeNoVecEEEEE", "N2cv22resizeAreaFast_InvokerIhiNS_17ResizeAreaFastVecIhNS_25ResizeAreaFastVec_SIMD_8uEEEEE", "N2cv22resizeAreaFast_InvokerItfNS_17ResizeAreaFastVecItNS_26ResizeAreaFastVec_SIMD_16uEEEEE", "N2cv22resizeAreaFast_InvokerIsfNS_17ResizeAreaFastVecIsNS_26ResizeAreaFastVec_SIMD_16sEEEEE", "N2cv22resizeAreaFast_InvokerIffNS_26ResizeAreaFastVec_SIMD_32fEEE", "N2cv22resizeAreaFast_InvokerIddNS_19ResizeAreaFastNoVecIddEEEE", "N2cv18ResizeArea_InvokerIhfEE", "N2cv18ResizeArea_InvokerItfEE", "N2cv18ResizeArea_InvokerIsfEE", "N2cv18ResizeArea_InvokerIffEE", "N2cv18ResizeArea_InvokerIddEE", "N2cv15DTColumnInvokerE", "N2cv12DTRowInvokerE", "N2cv2ml8KNearestE", "N2cv2ml4ImplE", "N2cv2ml14BruteForceImpl19findKNearestInvokerE", "N2cv2ml14BruteForceImplE", "N2cv2ml10KDTreeImplE", "N2cv2ml12KNearestImplE", "N2cv6detail12PtrOwnerImplINS_2ml14BruteForceImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10KDTreeImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml12KNearestImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6EMImplE", "N2cv6detail12PtrOwnerImplINS_2ml6EMImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml18LogisticRegressionE", "N2cv2ml22LogisticRegressionImplE", "N2cv2ml43LogisticRegressionImpl_ComputeDradient_ImplE", "N2cv6detail12PtrOwnerImplINS_2ml22LogisticRegressionImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml3SVM6KernelE", "N2cv2ml3SVME", "N2cv2ml13SVMKernelImplE", "N2cv2ml7SVMImpl11PredictBodyE", "N2cv2ml7SVMImplE", "N2cv6detail12PtrOwnerImplINS_2ml13SVMKernelImplENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml7SVMImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6DTreesE", "N2cv2ml6RTreesE", "N2cv2ml19DTreesImplForRTreesE", "N2cv2ml10RTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10RTreesImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml9TrainDataE", "N2cv2ml13TrainDataImplE", "N2cv6detail12PtrOwnerImplINS_2ml13TrainDataImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml10DTreesImplE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImpl8WorkDataENS_14DefaultDeleterIS4_EEEE", "N2cv6detail12PtrOwnerImplINS_2ml10DTreesImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml6SVMSGDE", "N2cv2ml10SVMSGDImplE", "N2cv6detail12PtrOwnerImplINS_2ml10SVMSGDImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml7ANN_MLPE", "N2cv2ml11ANN_MLPImpl9RPropLoopE", "N2cv2ml11ANN_MLPImplE", "N2cv6detail12PtrOwnerImplINS_2ml11ANN_MLPImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml5BoostE", "N2cv2ml18DTreesImplForBoostE", "N2cv2ml9BoostImplE", "N2cv6detail12PtrOwnerImplINS_2ml9BoostImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml21NormalBayesClassifierE", "N2cv2ml25NormalBayesClassifierImpl13NBPredictBodyE", "N2cv2ml25NormalBayesClassifierImplE", "N2cv6detail12PtrOwnerImplINS_2ml25NormalBayesClassifierImplENS_14DefaultDeleterIS3_EEEE", "N2cv2ml9StatModelE", "N2cv6detail12PtrOwnerImplI14_IplConvKernelNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI20CvPriorityQueueFloatNS_14DefaultDeleterIS2_EEEE", "N2cv14MergeExposuresE", "N2cv12MergeDebevecE", "N2cv12MergeMertensE", "N2cv14MergeRobertsonE", "N2cv16MergeDebevecImplE", "N2cv16MergeMertensImplE", "N2cv18MergeRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_16MergeDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16MergeMertensImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18MergeRobertsonImplENS_14DefaultDeleterIS2_EEEE", "N2cv7TonemapE", "N2cv12TonemapDragoE", "N2cv13TonemapDurandE", "N2cv15TonemapReinhardE", "N2cv14TonemapMantiukE", "N2cv11TonemapImplE", "N2cv16TonemapDragoImplE", "N2cv17TonemapDurandImplE", "N2cv19TonemapReinhardImplE", "N2cv18TonemapMantiukImplE", "N2cv6detail12PtrOwnerImplINS_11TonemapImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16TonemapDragoImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17TonemapDurandImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19TonemapReinhardImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_18TonemapMantiukImplENS_14DefaultDeleterIS2_EEEE", "N2cv14AlignExposuresE", "N2cv8AlignMTBE", "N2cv12AlignMTBImplE", "N2cv6detail12PtrOwnerImplINS_12AlignMTBImplENS_14DefaultDeleterIS2_EEEE", "N2cv12CalibrateCRFE", "N2cv16CalibrateDebevecE", "N2cv18CalibrateRobertsonE", "N2cv20CalibrateDebevecImplE", "N2cv22CalibrateRobertsonImplE", "N2cv6detail12PtrOwnerImplINS_20CalibrateDebevecImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22CalibrateRobertsonImplENS_14DefaultDeleterIS2_EEEE", "N2cv16DenseOpticalFlowE", "N2cv20FarnebackOpticalFlowE", "N2cv17SparseOpticalFlowE", "N2cv22SparsePyrLKOpticalFlowE", "N2cv6detail16LKTrackerInvokerE", "N2cv20BackgroundSubtractorE", "N2cv23BackgroundSubtractorKNNE", "N2cv27BackgroundSubtractorKNNImplE", "N2cv6detail12PtrOwnerImplINS_27BackgroundSubtractorKNNImplENS_14DefaultDeleterIS2_EEEE", "N2cv24BackgroundSubtractorMOG2E", "N2cv28BackgroundSubtractorMOG2ImplE", "N2cv11MOG2InvokerE", "N2cv6detail12PtrOwnerImplINS_28BackgroundSubtractorMOG2ImplENS_14DefaultDeleterIS2_EEEE", "N2cv19DualTVL1OpticalFlowE", "N2cv6detail12PtrOwnerImplINS_10BmpDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10BmpEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10HdrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11JpegEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11WebPEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_16SunRasterEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PxMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_11TiffEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PngEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_13Jpeg2KEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10ExrEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMDecoderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_10PAMEncoderENS_14DefaultDeleterIS2_EEEE", "N2cv11WebPEncoderE", "N2cv10ExrDecoderE", "N2cv10ExrEncoderE", "ENDHDR", "HEIGHT", "WIDTH", "DEPTH", "MAXVAL", "TUPLTYPE", "N2cv10PAMDecoderE", "N2cv10PAMEncoderE", "N2cv13Jpeg2KDecoderE", "N2cv13Jpeg2KEncoderE", "N2cv10BmpEncoderE", "N2cv10HdrDecoderE", "N2cv10HdrEncoderE", "N2cv11JpegDecoderE", "N2cv11JpegEncoderE", "N2cv16BaseImageDecoderE", "N2cv16BaseImageEncoderE", "N2cv16SunRasterDecoderE", "N2cv16SunRasterEncoderE", "N2cv10PxMDecoderE", "N2cv10PxMEncoderE", "N2cv11TiffDecoderE", "N2cv11TiffEncoderE", "N2cv10PngDecoderE", "N2cv10PngEncoderE", "N2cv11RBaseStreamE", "N2cv12RLByteStreamE", "N2cv12RMByteStreamE", "N2cv11WBaseStreamE", "N2cv12WLByteStreamE", "N2cv12WMByteStreamE", "N2cv12VideoCaptureE", "N2cv11VideoWriterE", "N2cv6detail12PtrOwnerImplI9CvCaptureNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplI13CvVideoWriterNS_14DefaultDeleterIS2_EEEE", "N2cv12IVideoWriterE", "N2cv5mjpeg16MotionJpegWriterE", "N2cv5mjpeg12MjpegEncoderE", "N2cv6detail12PtrOwnerImplINS_5mjpeg16MotionJpegWriterENS_14DefaultDeleterIS3_EEEE", "N2cv13IVideoCaptureE", "N2cv17MotionJpegCaptureE", "N2cv6detail12PtrOwnerImplINS_17MotionJpegCaptureENS_14DefaultDeleterIS2_EEEE", "N2cv13HOGDescriptorE", "N2cv8HOGCacheE", "N2cv10HOGInvokerE", "N2cv14HOGConfInvokerE", "N2cv21DetectionBasedTrackerE", "N2cv21DetectionBasedTracker21SeparateDetectionWorkE", "N2cv6detail12PtrOwnerImplINS_21DetectionBasedTracker21SeparateDetectionWorkENS_14DefaultDeleterIS3_EEEE", "N2cv21BaseCascadeClassifierE", "N2cv16FeatureEvaluatorE", "N2cv21CascadeClassifierImplE", "N2cv13HaarEvaluatorE", "N2cv12LBPEvaluatorE", "N2cv24CascadeClassifierInvokerE", "N2cv6detail12PtrOwnerImplINS_13HaarEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12LBPEvaluatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_16FeatureEvaluator9ScaleDataESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_13HaarEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator7FeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplISt6vectorINS_12LBPEvaluator10OptFeatureESaIS4_EENS_14DefaultDeleterIS6_EEEE", "N2cv6detail12PtrOwnerImplI23CvHaarClassifierCascadeNS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_21CascadeClassifierImplENS_14DefaultDeleterIS2_EEEE", "N2cv36HaarDetectObjects_ScaleImage_InvokerE", "N2cv38HaarDetectObjects_ScaleCascade_InvokerE", "N2cv9Feature2DE", "N2cv17DescriptorMatcher20DescriptorCollectionE", "N2cv17DescriptorMatcherE", "N2cv9BFMatcherE", "N2cv17FlannBasedMatcherE", "N2cv6detail12PtrOwnerImplINS_9BFMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_17FlannBasedMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann5IndexENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_5flann11IndexParamsENS_14DefaultDeleterIS3_EEEE", "N2cv5BRISKE", "N2cv10BRISK_ImplE", "N2cv6detail12PtrOwnerImplINS_10BRISK_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv4KAZEE", "N2cv9KAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_9KAZE_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv10BOWTrainerE", "N2cv16BOWKMeansTrainerE", "N2cv25BOWImgDescriptorExtractorE", "N2cv20AgastFeatureDetectorE", "N2cv25AgastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_25AgastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv12GFTTDetectorE", "N2cv17GFTTDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_17GFTTDetector_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv3ORBE", "N2cv8ORB_ImplE", "N2cv6detail12PtrOwnerImplINS_8ORB_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv19FastFeatureDetectorE", "N2cv24FastFeatureDetector_ImplE", "N2cv6detail12PtrOwnerImplINS_24FastFeatureDetector_ImplENS_14DefaultDeleterIS2_EEEE", "N3tbb10interface98internal13finish_reduceI20IntersectAreaCounterEE", "N3tbb10interface98internal12start_reduceINS_13blocked_rangeIiEE20IntersectAreaCounterKNS_16auto_partitionerEEE", "N2cv5AKAZEE", "N2cv10AKAZE_ImplE", "N2cv6detail12PtrOwnerImplINS_10AKAZE_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv9MSER_ImplE", "N2cv6detail12PtrOwnerImplINS_9MSER_ImplENS_14DefaultDeleterIS2_EEEE", "N2cv18SimpleBlobDetectorE", "N2cv22SimpleBlobDetectorImplE", "N2cv6detail12PtrOwnerImplINS_22SimpleBlobDetectorImplENS_14DefaultDeleterIS2_EEEE", "N2cv23Nld_Step_Scalar_InvokerE", "N2cv32MultiscaleDerivativesKAZEInvokerE", "N2cv23FindExtremumKAZEInvokerE", "N2cv23KAZE_Descriptor_InvokerE", "N2cv33MultiscaleDerivativesAKAZEInvokerE", "N2cv35MSURF_Upright_Descriptor_64_InvokerE", "N2cv27MSURF_Descriptor_64_InvokerE", "N2cv36Upright_MLDB_Full_Descriptor_InvokerE", "N2cv38Upright_MLDB_Descriptor_Subset_InvokerE", "N2cv28MLDB_Full_Descriptor_InvokerE", "N2cv30MLDB_Descriptor_Subset_InvokerE", "N2cv19PointSetRegistrator8CallbackE", "N2cv17PnPRansacCallbackE", "N2cv6detail12PtrOwnerImplINS_17PnPRansacCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv13StereoMatcherE", "N2cv8StereoBME", "N2cv16PrefilterInvokerE", "N2cv24FindStereoCorrespInvokerE", "N2cv12StereoBMImplE", "N2cv6detail12PtrOwnerImplINS_12StereoBMImplENS_14DefaultDeleterIS2_EEEE", "N2cv8LMSolver8CallbackE", "N2cv19PointSetRegistratorE", "N2cv25RANSACPointSetRegistratorE", "N2cv24LMeDSPointSetRegistratorE", "N2cv25Affine3DEstimatorCallbackE", "N2cv25Affine2DEstimatorCallbackE", "N2cv32AffinePartial2DEstimatorCallbackE", "N2cv22Affine2DRefineCallbackE", "N2cv29AffinePartial2DRefineCallbackE", "N2cv6detail12PtrOwnerImplINS_25RANSACPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24LMeDSPointSetRegistratorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine3DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_25Affine2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_22Affine2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_32AffinePartial2DEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29AffinePartial2DRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv8LMSolverE", "N2cv12LMSolverImplE", "N2cv6detail12PtrOwnerImplINS_12LMSolverImplENS_14DefaultDeleterIS2_EEEE", "N2cv27HomographyEstimatorCallbackE", "N2cv24HomographyRefineCallbackE", "N2cv19FMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_27HomographyEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_24HomographyRefineCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_19FMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv10StereoSGBME", "N2cv16SGBM3WayMainLoopE", "N2cv14StereoSGBMImplE", "N2cv6detail12PtrOwnerImplINS_14StereoSGBMImplENS_14DefaultDeleterIS2_EEEE", "N2cv23HomographyDecomposition16HomographyDecompE", "N2cv23HomographyDecomposition21HomographyDecompInriaE", "N2cv6detail12PtrOwnerImplINS_23HomographyDecomposition21HomographyDecompInriaENS_14DefaultDeleterIS3_EEEE", "N2cv8RHO_HESTE", "N2cv13RHO_HEST_REFCE", "N2cv6detail12PtrOwnerImplINS_13RHO_HEST_REFCENS_14DefaultDeleterIS2_EEEE", "N2cv19EMEstimatorCallbackE", "N2cv6detail12PtrOwnerImplINS_19EMEstimatorCallbackENS_14DefaultDeleterIS2_EEEE", "N2cv22HistogramCostExtractorE", "N2cv26NormHistogramCostExtractorE", "N2cv25EMDHistogramCostExtractorE", "N2cv25ChiHistogramCostExtractorE", "N2cv27EMDL1HistogramCostExtractorE", "N2cv30NormHistogramCostExtractorImplE", "N2cv29EMDHistogramCostExtractorImplE", "N2cv29ChiHistogramCostExtractorImplE", "N2cv31EMDL1HistogramCostExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30NormHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29EMDHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_29ChiHistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_31EMDL1HistogramCostExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv16ShapeTransformerE", "N2cv31ThinPlateSplineShapeTransformerE", "N2cv22ShapeDistanceExtractorE", "N2cv29ShapeContextDistanceExtractorE", "N2cv33ShapeContextDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_33ShapeContextDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv17AffineTransformerE", "N2cv21AffineTransformerImplE", "N2cv6detail12PtrOwnerImplINS_21AffineTransformerImplENS_14DefaultDeleterIS2_EEEE", "N2cv26HausdorffDistanceExtractorE", "N2cv30HausdorffDistanceExtractorImplE", "N2cv6detail12PtrOwnerImplINS_30HausdorffDistanceExtractorImplENS_14DefaultDeleterIS2_EEEE", "N2cv35ThinPlateSplineShapeTransformerImplE", "N2cv6detail12PtrOwnerImplINS_35ThinPlateSplineShapeTransformerImplENS_14DefaultDeleterIS2_EEEE", "N2cv8superres15SuperResolutionE", "N2cv8superres19DenseOpticalFlowExtE", "N2cv8superres20FarnebackOpticalFlowE", "N2cv8superres19DualTVL1OpticalFlowE", "N2cv8superres11FrameSourceE", "N2cv6detail14FeaturesFinderE", "N2cv6detail18SurfFeaturesFinderE", "N2cv6detail17OrbFeaturesFinderE", "N2cv6detail19AKAZEFeaturesFinderE", "N2cv6detail15FeaturesMatcherE", "N2cv6detail21BestOf2NearestMatcherE", "N2cv6detail26BestOf2NearestRangeMatcherE", "N2cv6detail27AffineBestOf2NearestMatcherE", "N2cv6detail14RotationWarperE", "N2cv6detail18RotationWarperBaseINS0_14PlaneProjectorEEE", "N2cv6detail11PlaneWarperE", "N2cv6detail12AffineWarperE", "N2cv6detail18RotationWarperBaseINS0_18SphericalProjectorEEE", "N2cv6detail15SphericalWarperE", "N2cv6detail18RotationWarperBaseINS0_20CylindricalProjectorEEE", "N2cv6detail17CylindricalWarperE", "N2cv6detail18RotationWarperBaseINS0_26SphericalPortraitProjectorEEE", "N2cv6detail23SphericalPortraitWarperE", "N2cv6detail7BlenderE", "N2cv6detail14FeatherBlenderE", "N2cv6detail16MultiBandBlenderE", "N2cv6detail12PtrOwnerImplINS0_7BlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14FeatherBlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_16MultiBandBlenderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail22GraphCutSeamFinderBaseE", "N2cv6detail10SeamFinderE", "N2cv6detail18PairwiseSeamFinderE", "N2cv6detail17VoronoiSeamFinderE", "N2cv6detail12DpSeamFinderE", "N2cv6detail18GraphCutSeamFinderE", "N2cv6detail18GraphCutSeamFinder4ImplE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinder4ImplENS_14DefaultDeleterIS3_EEEE", "N2cv13WarperCreatorE", "N2cv12AffineWarperE", "N2cv15SphericalWarperE", "N2cv6detail9EstimatorE", "N2cv6detail19ExposureCompensatorE", "N2cv6detail21NoExposureCompensatorE", "N2cv6detail12PtrOwnerImplINS0_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17BundleAdjusterRayENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_17OrbFeaturesFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_15SphericalWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_18GraphCutSeamFinderENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21BlocksGainCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_8StitcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27AffineBestOf2NearestMatcherENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_27BundleAdjusterAffinePartialENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS_12AffineWarperENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_21NoExposureCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_20AffineBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_24HomographyBasedEstimatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail24HomographyBasedEstimatorE", "N2cv6detail20AffineBasedEstimatorE", "N2cv6detail18BundleAdjusterBaseE", "N2cv6detail20BundleAdjusterReprojE", "N2cv6detail17BundleAdjusterRayE", "N2cv6detail20BundleAdjusterAffineE", "N2cv6detail27BundleAdjusterAffinePartialE", "N2cv6detail15GainCompensatorE", "N2cv6detail21BlocksGainCompensatorE", "N2cv6detail12PtrOwnerImplINS0_15GainCompensatorENS_14DefaultDeleterIS2_EEEE", "N2cv6detail10TimelapserE", "N2cv6detail14TimelapserCropE", "N2cv6detail12PtrOwnerImplINS0_10TimelapserENS_14DefaultDeleterIS2_EEEE", "N2cv6detail12PtrOwnerImplINS0_14TimelapserCropENS_14DefaultDeleterIS2_EEEE", "N2cv9videostab23ISparseOptFlowEstimatorE", "N2cv9videostab25PyrLkOptFlowEstimatorBaseE", "N2cv9videostab16IOutlierRejectorE", "N2cv9videostab19MotionEstimatorBaseE", "N2cv9videostab23MotionEstimatorRansacL2E", "N2cv9videostab17MotionEstimatorL1E", "N2cv9videostab24ImageMotionEstimatorBaseE", "N2cv9videostab20FromFileMotionReaderE", "N2cv9videostab18ToFileMotionWriterE", "N2cv9videostab28KeypointBasedMotionEstimatorE", "N2cv6detail12PtrOwnerImplINS_9videostab27SparsePyrLkOptFlowEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab19NullOutlierRejectorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab17IMotionStabilizerE", "N2cv9videostab12IFrameSourceE", "N2cv9videostab15NullFrameSourceE", "N2cv9videostab4ILogE", "N2cv9videostab13InpainterBaseE", "N2cv9videostab13NullInpainterE", "N2cv9videostab12DeblurerBaseE", "N2cv9videostab12NullDeblurerE", "N2cv9videostab20WobbleSuppressorBaseE", "N2cv9videostab14StabilizerBaseE", "N2cv9videostab17OnePassStabilizerE", "N2cv9videostab17TwoPassStabilizerE", "N2cv6detail12PtrOwnerImplINS_9videostab11LogToStdoutENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab15NullFrameSourceENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab23MotionEstimatorRansacL2ENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab28KeypointBasedMotionEstimatorENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab12NullDeblurerENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab13NullInpainterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20GaussianMotionFilterENS_14DefaultDeleterIS3_EEEE", "N2cv6detail12PtrOwnerImplINS_9videostab20NullWobbleSuppressorENS_14DefaultDeleterIS3_EEEE", "N2cv9videostab20NullWobbleSuppressorE", "N2cv9videostab38MoreAccurateMotionWobbleSuppressorBaseE", "N2cv9videostab34MoreAccurateMotionWobbleSuppressorE", "N2cv9videostab11LogToStdoutE", "N2cv9videostab17WeightingDeblurerE", "N2cv9videostab27MotionStabilizationPipelineE", "N2cv9videostab16MotionFilterBaseE", "N2cv9videostab20GaussianMotionFilterE", "N2cv9videostab18LpMotionStabilizerE", "N2cv9videostab18InpaintingPipelineE", "N2cv9videostab25ConsistentMosaicInpainterE", "N2cv9videostab15MotionInpainterE", "N2cv9videostab21ColorAverageInpainterE", "N2cv9videostab14ColorInpainterE", "N2cv9videostab27SparsePyrLkOptFlowEstimatorE", "N2cv9videostab15VideoFileSourceE", "N2cv9videostab19NullOutlierRejectorE", "N2cv9videostab36TranslationBasedLocalOutlierRejectorE", "N3tbb8internal7no_copyE", "N3tbb8internal9no_assignE", "N3rml16versioned_objectE", "N3rml6clientE", "N3tbb8internal3rml10tbb_clientE", "N3tbb8internal6marketE", "N3tbb10interface58internal9task_baseE", "N3tbb4taskE", "N3tbb10empty_taskE", "N3tbb10interface78internal14delegated_taskE", "N3tbb10interface78internal9wait_taskE", "N3tbb8internal19intrusive_list_nodeE", "N3rml3jobE", "N3tbb8internal9schedulerE", "N3tbb13tbb_exceptionE", "N3tbb8internal17generic_schedulerE", "N3tbb8internal16custom_schedulerINS0_22DefaultSchedulerTraitsEEE", "N3tbb8internal16custom_schedulerINS0_20IntelSchedulerTraitsEEE", "N3tbb14bad_last_allocE", "N3tbb13improper_lockE", "N3tbb10user_abortE", "N3tbb12missing_waitE", "N3tbb27invalid_multiple_schedulingE", "N3tbb8internal15control_storageE", "N3tbb8internal11padded_baseINS0_15control_storageELm128ELm32EEE", "N3tbb8internal6paddedINS0_15control_storageELm128EEE", "N3tbb8internal27allowed_parallelism_controlE", "N3tbb8internal18stack_size_controlE", "N3rml6serverE", "N3tbb8internal3rml10tbb_serverE", "N3tbb8internal3rml14private_serverE", "TKKK", "TKKK", "TKKK", "vdPowx", "vsPowx", "vdLn", "eaFO", "if1R", "kh9F", "okOP", "_TIFFMergeFields", "EstimateStripByteCounts", "MissingRequired", "TIFFFetchNormalTag", "TIFFFetchStripThing", "TIFFReadDirectoryCheckOrder", "TIFFFetchDirectory", "TIFFReadDirectory", "initCIELabConversion", "initYCbCrConversion", "BuildMapBitdepth16To8", "BuildMapUaToAa", "PhotometricInterpretation", "TIFFReadBufferSetup", "TIFFFillTile", "TIFFReadEncodedTile", "TIFFFillStrip", "TIFFReadEncodedStrip", "TIFFScanlineSize64", "TIFFVStripSize64", "TIFFComputeStrip", "TIFFWriteBufferSetup", "TIFFAppendToStrip", "TIFFWriteEncodedStrip", "TIFFWriteScanline", "TIFFOpen", "TIFFRewriteDirectory", "TIFFLinkDirectory", "TIFFWriteDirectoryTagIfdIfd8Array", "TIFFWriteDirectoryTagCheckedSrationalArray", "TIFFWriteDirectoryTagCheckedRationalArray", "TIFFWriteDirectoryTagSubifd", "TIFFWriteDirectoryTagTransferfunction", "TIFFWriteDirectoryTagSampleformatArray", "TIFFWriteDirectoryTagShortPerSample", "TIFFWriteDirectoryTagColormap", "TIFFWriteDirectoryTagLongLong8Array", "TIFFWriteDirectoryTagData", "TIFFWriteDirectorySec", "DumpModeDecode", "Fax4Decode", "Fax4Encode", "Fax3Decode2D", "Fax3SetupState", "Fax3Decode1D", "Fax3Encode", "InitCCITTFax3", "LogLuvDecode24", "LogLuvDecode32", "LogL16Decode", "LogLuvSetupDecode", "LogL16InitState", "LogLuvInitState", "LogLuvSetupEncode", "LogLuvVSetField", "TIFFInitSGILog", "LZWDecodeCompat", "LZWPreDecode", "LZWDecode", "LZWSetupEncode", "TIFFInitLZW", "NeXTDecode", "PackBitsDecode", "PixarLogPreDecode", "PixarLogDecode", "PixarLogSetupEncode", "PixarLogPreEncode", "PixarLogPostEncode", "PixarLogEncode", "PixarLogVSetField", "TIFFInitPixarLog", "PredictorEncodeTile", "ThunderSetupDecode", "ThunderDecode", "ThunderDecodeRow", "ZIPSetupDecode", "ZIPPreDecode", "ZIPDecode", "ZIPSetupEncode", "ZIPPreEncode", "ZIPPostEncode", "ZIPEncode", "TIFFInitZIP", "N3Iex6ArgExcE", "N3Iex5IoExcE", "N3Iex7TypeExcE", "N3Imf10OutputFileE", "N3Imf14TypedAttributeINS_12PreviewImageEEE", "N3Imf10OutputFile4DataE", "N3Imf11StdIFStreamE", "N3Imf11StdOFStreamE", "N3Imf11StdOSStreamE", "N3Iex8InputExcE", "N3Iex8ErrnoExcE", "N3Imf9AttributeE", "N3Imf14TypedAttributeINS_14ChromaticitiesEEE", "N3Imf14TypedAttributeINS_6EnvmapEEE", "N3Imf14TypedAttributeIfEE", "N3Imf14TypedAttributeINS_7KeyCodeEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IfEEEE", "N3Imf14TypedAttributeINS_8RationalEEE", "N3Imf14TypedAttributeISsEE", "N3Imf14TypedAttributeISt6vectorISsSaISsEEEE", "N3Imf14TypedAttributeINS_8TimeCodeEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IfEEEE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IiEEEEEE", "N3Imf14TypedAttributeIN5Imath3BoxINS1_4Vec2IfEEEEEE", "N3Imf14TypedAttributeINS_11ChannelListEEE", "N3Imf14TypedAttributeINS_11CompressionEEE", "N3Imf14TypedAttributeIdEE", "N3Imf14TypedAttributeIiEE", "N3Imf14TypedAttributeINS_9LineOrderEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IfEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix33IdEEEE", "N3Imf14TypedAttributeIN5Imath8Matrix44IdEEEE", "N3Imf14TypedAttributeINS_15TileDescriptionEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec2IdEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IiEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IfEEEE", "N3Imf14TypedAttributeIN5Imath4Vec3IdEEEE", "N3Imf10CompressorE", "N3Iex11OverflowExcE", "N3Imf9InputFileE", "N3Imf9InputFile4DataE", "N3Imf13RleCompressorE", "N3Imf17ScanLineInputFileE", "N3Imf17ScanLineInputFile4DataE", "N3Imf7IStreamE", "N3Imf7OStreamE", "N3Imf13ZipCompressorE", "N3Imf15OpaqueAttributeE", "N3Imf15Pxr24CompressorE", "N3Imf13PizCompressorE", "N3Iex9EnoentExcE", "N3Iex8EsrchExcE", "N3Iex8EintrExcE", "N3Iex6EioExcE", "N3Iex8EnxioExcE", "N3Iex8E2bigExcE", "N3Iex10EnoexecExcE", "N3Iex8EbadfExcE", "N3Iex9EchildExcE", "N3Iex9EagainExcE", "N3Iex9EnomemExcE", "N3Iex9EaccesExcE", "N3Iex9EfaultExcE", "N3Iex10EnotblkExcE", "N3Iex8EbusyExcE", "N3Iex9EexistExcE", "N3Iex8ExdevExcE", "N3Iex9EnodevExcE", "N3Iex10EnotdirExcE", "N3Iex9EisdirExcE", "N3Iex9EinvalExcE", "N3Iex9EnfileExcE", "N3Iex9EmfileExcE", "N3Iex9EnottyExcE", "N3Iex10EtxtbsyExcE", "N3Iex8EfbigExcE", "N3Iex9EnospcExcE", "N3Iex9EspipeExcE", "N3Iex8ErofsExcE", "N3Iex9EmlinkExcE", "N3Iex8EpipeExcE", "N3Iex7EdomExcE", "N3Iex9ErangeExcE", "N3Iex9EnomsgExcE", "N3Iex8EidrmExcE", "N3Iex9EchrngExcE", "N3Iex11El2nsyncExcE", "N3Iex9El3hltExcE", "N3Iex9El3rstExcE", "N3Iex9ElnrngExcE", "N3Iex10EunatchExcE", "N3Iex9El2hltExcE", "N3Iex10EdeadlkExcE", "N3Iex9EnolckExcE", "N3Iex8EbadeExcE", "N3Iex8EbadrExcE", "N3Iex9ExfullExcE", "N3Iex9EnoanoExcE", "N3Iex10EbadrqcExcE", "N3Iex10EbadsltExcE", "N3Iex9EbfontExcE", "N3Iex9EnostrExcE", "N3Iex10EnodataExcE", "N3Iex8EtimeExcE", "N3Iex8EnosrExcE", "N3Iex9EnonetExcE", "N3Iex9EnopkgExcE", "N3Iex10EremoteExcE", "N3Iex10EnolinkExcE", "N3Iex7EadvExcE", "N3Iex9EsrmntExcE", "N3Iex8EcommExcE", "N3Iex9EprotoExcE", "N3Iex12EmultihopExcE", "N3Iex10EbadmsgExcE", "N3Iex15EnametoolongExcE", "N3Iex12EoverflowExcE", "N3Iex11EnotuniqExcE", "N3Iex9EbadfdExcE", "N3Iex10EremchgExcE", "N3Iex10ElibaccExcE", "N3Iex10ElibbadExcE", "N3Iex10ElibscnExcE", "N3Iex10ElibmaxExcE", "N3Iex11ElibexecExcE", "N3Iex9EilseqExcE", "N3Iex9EnosysExcE", "N3Iex8EloopExcE", "N3Iex11ErestartExcE", "N3Iex11EstrpipeExcE", "N3Iex12EnotemptyExcE", "N3Iex9EusersExcE", "N3Iex11EnotsockExcE", "N3Iex15EdestaddrreqExcE", "N3Iex11EmsgsizeExcE", "N3Iex13EprototypeExcE", "N3Iex14EnoprotooptExcE", "N3Iex18EprotonosupportExcE", "N3Iex18EsocktnosupportExcE", "N3Iex13EopnotsuppExcE", "N3Iex15EpfnosupportExcE", "N3Iex15EafnosupportExcE", "N3Iex13EaddrinuseExcE", "N3Iex16EaddrnotavailExcE", "N3Iex11EnetdownExcE", "N3Iex14EnetunreachExcE", "N3Iex12EnetresetExcE", "N3Iex15EconnabortedExcE", "N3Iex13EconnresetExcE", "N3Iex10EnobufsExcE", "N3Iex10EisconnExcE", "N3Iex11EnotconnExcE", "N3Iex12EshutdownExcE", "N3Iex15EtoomanyrefsExcE", "N3Iex12EtimedoutExcE", "N3Iex15EconnrefusedExcE", "N3Iex12EhostdownExcE", "N3Iex15EhostunreachExcE", "N3Iex11EalreadyExcE", "N3Iex14EinprogressExcE", "N3Iex9EstaleExcE", "N3Iex10EucleanExcE", "N3Iex10EnotnamExcE", "N3Iex10EnavailExcE", "N3Iex9EisnamExcE", "N3Iex12EremoteioExcE", "N3Iex12EcanceledExcE", "N3Iex9EdquotExcE", "N3Iex7BaseExcE", "N9IlmThread5MutexE", "N9IlmThread9SemaphoreE", "N9IlmThread10ThreadPoolE", "N9IlmThread4TaskE", "N3Imf13B44CompressorE", "N3Imf14TiledInputFileE", "N3Imf14TiledInputFile4DataE", "N9IlmThread6ThreadE", "St9bad_alloc", "N10__cxxabiv117__class_type_infoE", "N9__gnu_cxx24__concurrence_lock_errorE", "N9__gnu_cxx26__concurrence_unlock_errorE", "St9exception", "St13bad_exception", "N10__cxxabiv115__forced_unwindE", "N10__cxxabiv119__foreign_exceptionE", "N10__cxxabiv116__enum_type_infoE", "N10__cxxabiv123__fundamental_type_infoE", "PKDs", "PKDi", "PKDf", "PKDd", "PKDe", "PKDn", "N10__cxxabiv119__pointer_type_infoE", "N10__cxxabiv120__si_class_type_infoE", "St9type_info", "N10__cxxabiv121__vmi_class_type_infoE", "St5ctypeIcE", "St5ctypeIwE", "St9basic_iosIcSt11char_traitsIcEE", "St9basic_iosIwSt11char_traitsIwEE", "St8ios_base", "St13basic_istreamIwSt11char_traitsIwEE", "St10money_base", "St13messages_base", "St12codecvt_base", "St7collateIcE", "St8numpunctIcE", "St7num_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St17__timepunct_cacheIcE", "St11__timepunctIcE", "St10moneypunctIcLb1EE", "St10moneypunctIcLb0EE", "St8messagesIcE", "St23__codecvt_abstract_baseIcc9mbstate_tE", "St9money_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St9money_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE", "St8time_getIcSt19istreambuf_iteratorIcSt11char_traitsIcEEE", "St18__moneypunct_cacheIcLb0EE", "St18__moneypunct_cacheIcLb1EE", "St16__numpunct_cacheIcE", "NSt6locale5facetE", "N9__gnu_cxx18stdio_sync_filebufIcSt11char_traitsIcEEE", "N9__gnu_cxx18stdio_sync_filebufIwSt11char_traitsIwEEE", "St13basic_ostreamIwSt11char_traitsIwEE", "St15basic_stringbufIcSt11char_traitsIcESaIcEE", "St19basic_istringstreamIcSt11char_traitsIcESaIcEE", "St19basic_ostringstreamIcSt11char_traitsIcESaIcEE", "St18basic_stringstreamIcSt11char_traitsIcESaIcEE", "St11logic_error", "St16invalid_argument", "St12length_error", "St12out_of_range", "St13runtime_error", "St11range_error", "St15basic_streambufIcSt11char_traitsIcEE", "St15basic_streambufIwSt11char_traitsIwEE", "St21__ctype_abstract_baseIwE", "St8numpunctIwE", "St7num_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St7num_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St17__timepunct_cacheIwE", "St11__timepunctIwE", "St10moneypunctIwLb1EE", "St10moneypunctIwLb0EE", "St8messagesIwE", "St23__codecvt_abstract_baseIwc9mbstate_tE", "St9money_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St9money_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_putIwSt19ostreambuf_iteratorIwSt11char_traitsIwEEE", "St8time_getIwSt19istreambuf_iteratorIwSt11char_traitsIwEEE", "St18__moneypunct_cacheIwLb0EE", "St18__moneypunct_cacheIwLb1EE", "St16__numpunct_cacheIwE", "St13basic_filebufIcSt11char_traitsIcEE", "St14basic_ifstreamIcSt11char_traitsIcEE", "St14basic_ofstreamIcSt11char_traitsIcEE", "St14error_category", "St8bad_cast", "St10bad_typeid", "N10__cxxabiv117__pbase_type_infoE", "St7codecvtIcc9mbstate_tE", "St7codecvtIwc9mbstate_tE", "NSt8ios_base7failureE", "St16bad_array_length", "St20bad_array_new_length"], "debugstrings": ["<?xml version=\"1.0\" encoding=\"%s\"?>\n", "Unsupported YAML version (it must be 1.x)", "JPEG2000 LOADER ERROR: colorspace conversion failed\n", "Wrong JPEG library version: library is %d, caller expects %d", "Unsupported color conversion request", "Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d", "JFIF APP0 marker: version %d.%02d, density %dx%d  %d", "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION", "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION", "png_image_finish_read: damaged PNG_IMAGE_VERSION", "PNG file corrupted by ASCII conversion", " libpng version 1.6.24 - August 4, 2016\n\n", "ASCII conversion buffer too small", "png_image_write_to_memory: incorrect PNG_IMAGE_VERSION", "png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION", "png_image_write_to_file: incorrect PNG_IMAGE_VERSION", "No space for YCbCr->RGB conversion state", "No space for photometric conversion table", "No space for CIE L*a*b*->RGB conversion state.", "Failed to initialize CIE L*a*b*->RGB conversion state.", "Not a TIFF file, bad version number %d (0x%x)", " image files.  Current file format version is ", "The file format version number's flag field contains unrecognized flags.", "basic_filebuf::_M_convert_to_external conversion error", "<?xml version=\"1.0\"?>\n", "TBB_VERSION", "unsupported zlib version", "OptoelectricConversionFactor", "ExifVersion", "FlashpixVersion", "DNGVersion", "DNGBackwardVersion", "Creator: JasPer Version %s", "Cannot read version ", "N3rml16versioned_objectE", "initCIELabConversion", "initYCbCrConversion", "GCC: (GNU) 4.9 20140827 (prerelease)"], "localsymbols": [""], "dependencies": ["libm.so", "libz.so", "libc.so", "liblog.so", "libdl.so", "libjnigraphics.so"], "elfname": "libopencv_java3.so"}