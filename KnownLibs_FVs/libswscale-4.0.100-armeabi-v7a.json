{"globalvars": [], "importedglobals": [], "importedfunctions": ["av_get_cpu_flags", "memcpy", "memset", "cos", "abort", "lrint", "av_free", "av_pix_fmt_desc_get", "av_pix_fmt_swap_endianness", "av_mallocz", "raise", "av_freep", "av_get_bits_per_pixel", "sin", "av_image_alloc", "pow", "av_get_pix_fmt_name", "av_pix_fmt_get_chroma_sub_sample", "av_opt_set_int", "av_opt_set_defaults", "av_log", "av_malloc", "exp", "ceil", "memmove", "memcmp", "exp2", "av_opt_get_int"], "exportedfunctions": ["sws_convertPalette8ToPacked32", "sws_isSupportedInput", "sws_getCoefficients", "swscale_version", "sws_allocVec", "sws_subVec", "swscale_configuration", "sws_alloc_set_opts", "sws_freeFilter", "sws_get_class", "sws_normalizeVec", "sws_shiftVec", "sws_alloc_context", "sws_isSupportedEndiannessConversion", "swscale_license", "sws_getCachedContext", "sws_isSupportedOutput", "sws_getColorspaceDetails", "sws_setColorspaceDetails", "sws_freeContext", "sws_convertPalette8ToPacked24", "sws_init_context", "sws_getConstVec", "sws_getDefaultFilter", "sws_freeVec", "sws_getGaussianVec", "sws_scale", "sws_getIdentityVec", "sws_scaleVec", "sws_getContext", "sws_cloneVec", "sws_printVec2", "sws_convVec", "sws_addVec"], "allstrings": ["Assertion %s failed at %s:%d\n", "plane_count == nb_components - 1", "libswscale/alphablend.c", "desc", "libswscale/swscale_internal.h", "swscaler", "SWScaler", "sws_flags", "scaler flags", "fast_bilinear", "fast bilinear", "bilinear", "bicubic", "experimental", "neighbor", "nearest neighbor", "area", "averaging area", "bicublin", "luma bicubic, chroma bilinear", "gauss", "Gaussian", "sinc", "lanczos", "Lanczos", "spline", "natural bicubic spline", "print_info", "print info", "accurate_rnd", "accurate rounding", "full_chroma_int", "full chroma interpolation", "full_chroma_inp", "full chroma input", "bitexact", "error_diffusion", "error diffusion dither", "srcw", "source width", "srch", "source height", "dstw", "destination width", "dsth", "destination height", "src_format", "source format", "dst_format", "destination format", "src_range", "source is full range", "dst_range", "destination is full range", "param0", "scaler param 0", "param1", "scaler param 1", "src_v_chr_pos", "source vertical chroma position in luma grid/256", "src_h_chr_pos", "source horizontal chroma position in luma grid/256", "dst_v_chr_pos", "destination vertical chroma position in luma grid/256", "dst_h_chr_pos", "destination horizontal chroma position in luma grid/256", "sws_dither", "set dithering algorithm", "auto", "leave choice to sws", "bayer", "bayer dither", "error diffusion", "a_dither", "arithmetic addition dither", "x_dither", "arithmetic xor dither", "gamma", "gamma correct scaling", "alphablend", "mode for alpha -> non alpha", "none", "ignore alpha", "uniform_color", "blend onto a uniform color", "checkerboard", "blend onto a checkerboard", "libswscale/output.c", "n == s->plane[ii].available_lines", "libswscale/slice.c", "Warning: dstStride is not aligned!\n         ->cannot do aligned memory accesses anymore\n", "firstLumSrcY >= lastInLumBuf - vLumBufSize + 1", "libswscale/swscale.c", "firstChrSrcY >= lastInChrBuf - vChrBufSize + 1", "One of the input parameters to sws_scale() is NULL, please check the calling code\n", "Slice parameters %d, %d are invalid\n", "Slices start in the middle!\n", "bad src image pointers\n", "bad dst image pointers\n", "unsupported planar RGB conversion %s -> %s\n", "unsupported conversion to planar RGB %s -> %s\n", "srcSliceH > 1", "libswscale/swscale_unscaled.c", "internal error %s -> %s converter\n", "unsupported bayer conversion\n", "Cannot allocate memory.\n", "sizeFactor > 0", "libswscale/utils.c", "filter2Size > 0", "minFilterSize > 0", "SwScaler: reducing / aligning filtersize %d -> %d\n", "(*filterPos)[i] >= 0", "(*filterPos)[i] < srcW", "(*filterPos)[i] + j < srcW || !filter[i * filterSize + j]", "SwScaler: zero vector in scaling\n", "sws: initFilter failed\n", "--prefix=/home/duncan/AndroidStudioProjects/DownloadManager/app/src/main/jni/ffmpeg/android/armeabi-v7a --disable-static --disable-gpl --enable-shared --disable-symver --disable-encoders --disable-protocols --enable-protocol=file --enable-protocol=pipe --disable-bsfs --enable-bsf=aac_adtstoasc --disable-indevs --disable-outdevs --disable-filters --disable-decoders --enable-filter=concat --enable-filter=copy --disable-doc --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-asm --disable-yasm --disable-zlib --disable-xlib --disable-demuxers --disable-parsers --disable-debug --disable-muxers --enable-decoder='aac,aac_fixed,aac_latm,aic,alac,amv,webp,wmalossless,amrnb,amrwb,libvorbis,vorbis,mpegts' --enable-decoder='flibopus,flac,libfdk_aac,h261,h263,h264,mp2,mp3,wmav1,wmav2,mpeg2video,mpeg4,mpegvideo,opus,rawvideo' --enable-demuxer='aac,ac3,acm,aiff,amrnb,amrwb,avi,codec2,codec2raw,mkvtimestamp_v2' --enable-demuxer='matroska_audio,mov,mp2,mp3,mp4,ogg,opus,mpegts,flac,flic,flv' --enable-demuxer='h261,h263,h264hevc,hls' --enable-demuxer='matroska,mgsts,mpegvideo,ogg,mov,mp3' --enable-demuxer='mpegps,mpegts,mpegtsraw,rawvideo' --enable-demuxer='pcm_alaw,pcm_f32be,pcm_f32le,pcm_f64be,pcm_f64le,pcm_mulaw,pcm_s16be,pcm_s16le' --enable-demuxer='pcm_s24be,pcm_s24le,pcm_s32be,null,pcm_s32le,xmv,wav,yuv4mpegpipe,concat' --enable-parser='aac,aac_latm,flac,h261,h263' --enable-parser='h264,mpeg4video,mpegaudio,mpegvideo,opus,vorbis' --enable-muxer='yuv4mpegpipe,wv,webm,smoothstreaming,rawvideo,opus,oga,ogg,null,mpegts,mpeg2vob' --enable-muxer='mov,mp2,mp3,mp4,matroska,matroska_audio,m4v,h261,h263,h264,hls,flv,flac,f4v,ffm' --enable-muxer='adts,adx,aiff,amr,asf,ass,ast,avi,dts,dash,a64,ac3' --target-os=android --enable-cross-compile --cross-prefix=/home/duncan/my_toolchains/arm/bin/arm-linux-androideabi- --extra-cflags='-Os -fpic -marm -march=armv7-a -mfloat-abi=softfp -mthumb -mfpu=vfpv3-d16 -mtune=cortex-a8' --extra-ldflags='-marm -march=armv7-a -Wl,--fix-cortex-a8' --sysroot=/home/duncan/my_toolchains/arm/sysroot --arch=arm --disable-asm", "libswscale license: LGPL version 2.1 or later", "%1.3f ", "ehh flags invalid?!", "dithered ", "deprecated pixel format used, make sure you did set range correctly\n", "%s is not supported as input pixel format\n", "%s is not supported as output pixel format\n", "Exactly one scaler algorithm must be chosen, got %X\n", "%dx%d -> %dx%d is invalid scaling dimension\n", "Forcing full internal H chroma due to odd output size\n", "Forcing full internal H chroma due to input having non subsampled chroma\n", "Desired dithering only supported in full chroma interpolation for destination format '%s'\n", "Ordered dither is not supported in full chroma interpolation for destination format '%s'\n", "%s output is not supported with half chroma resolution, switching to full\n", "full chroma interpolation for destination format '%s' not yet implemented\n", "c->dstBpc > 14", "c->chrDstH <= dstH", "%s scaler, from %s to %s%s ", "using %s\n", "%dx%d -> %dx%d\n", "lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n", "using alpha blendaway %s -> %s special converter\n", "using unscaled %s -> %s special converter\n", "YUV color matrix differs for YUV->YUV, using intermediate RGB to convert\n", "area averaging", "luma bicubic / chroma bilinear", "nearest neighbor / point", "bicubic spline", "Optimized 2 tap filter code cannot be used\n", "No accelerated colorspace conversion found from %s to %s.\n", "%ibpp not supported by yuv2rgb\n"], "stringidentifiers": ["desc", "swscaler", "SWScaler", "sws_flags", "fast_bilinear", "bilinear", "bicubic", "experimental", "neighbor", "area", "bicublin", "gauss", "Gaussian", "sinc", "lanczos", "Lanczos", "spline", "print_info", "accurate_rnd", "full_chroma_int", "full_chroma_inp", "bitexact", "error_diffusion", "srcw", "srch", "dstw", "dsth", "src_format", "dst_format", "src_range", "dst_range", "param0", "param1", "src_v_chr_pos", "src_h_chr_pos", "dst_v_chr_pos", "dst_h_chr_pos", "sws_dither", "auto", "bayer", "a_dither", "x_dither", "gamma", "alphablend", "none", "uniform_color", "checkerboard"], "debugstrings": ["unsupported planar RGB conversion %s -> %s\n", "unsupported conversion to planar RGB %s -> %s\n", "unsupported bayer conversion\n", "libswscale license: LGPL version 2.1 or later", "No accelerated colorspace conversion found from %s to %s.\n", "GCC: (GNU) 4.9.x 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["libc.so", "libavutil.so", "libm.so"], "elfname": "libswscale.so"}