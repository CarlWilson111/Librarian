{"globalvars": ["av_filter_ffversion", "avfilter_all_channel_layouts"], "importedglobals": ["__sF", "avpriv_vga16_font", "avpriv_cga_font"], "importedfunctions": ["av_parse_time", "sws_getCoefficients", "av_get_channel_layout_string", "pow", "pthread_cond_wait", "__errno", "av_reallocp_array", "strchr", "av_get_padded_bits_per_pixel", "av_memdup", "av_image_copy_plane", "pthread_mutex_unlock", "avcodec_flush_buffers", "av_get_channel_layout_nb_channels", "cos", "av_color_space_name", "av_audio_fifo_read", "fgets", "av_frame_new_side_data", "av_audio_fifo_write", "av_get_sample_fmt", "av_strerror", "av_fifo_generic_read", "av_color_range_name", "av_frame_get_buffer", "av_bprint_clear", "sinf", "sws_getColorspaceDetails", "av_malloc", "avcodec_parameters_to_context", "av_opt_find", "pthread_cond_destroy", "av_pix_fmt_desc_get", "av_opt_free", "av_opt_eval_flags", "avcodec_alloc_context3", "av_image_alloc", "av_buffer_allocz", "av_expr_parse_and_eval", "rint", "av_frame_copy", "av_mul_q", "av_realloc_f", "av_frame_ref", "av_read_frame", "av_frame_get_colorspace", "av_opt_set_bin", "av_strtok", "av_frame_get_color_range", "avformat_match_stream_specifier", "swr_alloc_set_opts", "avpriv_set_systematic_pal2", "av_stereo3d_create_side_data", "av_get_channel_layout", "av_frame_get_side_data", "av_rescale", "av_fifo_alloc", "av_opt_get_sample_fmt", "pthread_join", "strtoll", "av_frame_set_qp_table", "fopen", "ceilf", "av_opt_next", "av_fopen_utf8", "av_parse_video_size", "floor", "avcodec_dct_init", "powf", "av_d2q", "av_file_unmap", "swr_get_delay", "atan2", "av_audio_fifo_peek", "av_bprintf", "av_frame_is_writable", "av_init_packet", "fseek", "sws_setColorspaceDetails", "av_channel_layout_extract_channel", "bsearch", "logf", "av_fifo_generic_write", "av_strlcpy", "av_opt_set_dict", "av_div_q", "cosf", "av_get_media_type_string", "avcodec_encode_video2", "pp_free_mode", "lround", "av_calloc", "avcodec_dct_alloc", "avcodec_close", "av_frame_get_metadata", "avformat_open_input", "av_dynarray2_add", "av_expr_eval", "fwrite", "av_find_input_format", "pthread_mutex_init", "pthread_mutex_destroy", "av_find_best_pix_fmt_of_2", "av_reduce", "av_rdft_init", "av_opt_set_sample_fmt", "pp_get_context", "av_lfg_init", "av_frame_get_best_effort_timestamp", "av_fifo_realloc2", "strlen", "av_get_planar_sample_fmt", "exp", "av_frame_free", "av_get_pix_fmt_name", "av_fifo_space", "av_color_primaries_name", "av_image_fill_max_pixsteps", "av_display_rotation_get", "sscanf", "av_frame_get_channels", "av_get_token", "pthread_create", "av_fifo_freep", "avcodec_open2", "av_log", "av_dict_free", "av_audio_fifo_space", "fread", "av_frame_make_writable", "av_audio_fifo_alloc", "pthread_cond_init", "asin", "av_opt_get_key_value", "av_get_picture_type_char", "av_get_pix_fmt", "sws_getContext", "memset", "avio_open", "av_gettime_relative", "av_default_item_name", "av_mallocz", "av_buffer_ref", "expf", "av_samples_copy", "av_dict_set_int", "av_file_map", "av_write_image_line", "av_buffer_alloc", "av_gettime", "floorf", "__isinff", "av_hwframe_ctx_alloc", "raise", "sws_getCachedContext", "lrintf", "cosh", "av_seek_frame", "av_image_get_linesize", "swr_free", "av_frame_get_plane_buffer", "av_pix_fmt_count_planes", "pp_free_context", "sws_isSupportedOutput", "av_buffer_pool_get", "av_audio_fifo_realloc", "av_get_bits_per_pixel", "av_buffer_unref", "av_pix_fmt_desc_get_id", "pp_postprocess", "av_rescale_q", "fmod", "snprintf", "memcmp", "sws_scaleVec", "av_pixelutils_get_sad_fn", "__isinf", "av_expr_parse", "av_audio_fifo_size", "strcspn", "avcodec_find_decoder", "ftell", "sws_freeVec", "modf", "memcpy", "av_frame_get_qp_table", "sws_getGaussianVec", "av_rdft_end", "av_image_check_size", "av_frame_set_colorspace", "av_image_copy", "av_buffer_pool_init", "av_color_transfer_name", "av_dict_get", "log10", "strtol", "av_fast_malloc", "av_adler32_update", "av_get_channel_name", "av_strlcatf", "av_hwframe_constraints_free", "av_expr_free", "av_bprint_init", "erf", "hypot", "pp_get_mode_by_name_and_quality", "av_audio_fifo_drain", "av_parse_color", "av_rdft_calc", "av_parse_ratio", "swr_set_matrix", "av_image_fill_linesizes", "strspn", "av_frame_alloc", "avcodec_dct_get_class", "avformat_close_input", "ceil", "av_frame_unref", "av_hwframe_get_buffer", "av_find_best_stream", "av_sample_fmt_is_planar", "log", "cbrt", "ldexp", "avformat_find_stream_info", "avpriv_init_elbg", "av_hwdevice_get_hwframe_constraints", "avpriv_float_dsp_alloc", "av_realloc", "vsnprintf", "av_bprint_channel_layout", "atan2f", "av_frame_get_pkt_pos", "av_vlog", "av_samples_alloc_array_and_samples", "avpriv_frame_get_metadatap", "llrint", "exp2", "sws_init_context", "roundf", "av_get_bytes_per_sample", "av_audio_fifo_free", "av_frame_set_color_range", "sws_freeContext", "sinh", "sqrt", "av_fft_permute", "av_frame_remove_side_data", "strncmp", "av_fft_calc", "av_hwframe_ctx_init", "av_dict_set", "av_strcasecmp", "av_rescale_rnd", "swr_next_pts", "fprintf", "strrchr", "av_fft_init", "tan", "av_get_random_seed", "av_register_all", "av_frame_clone", "av_fast_realloc", "swr_init", "avcodec_free_context", "av_frame_set_channels", "avcodec_decode_video2", "av_strtod", "av_usleep", "av_compare_ts", "strstr", "av_rescale_q_rnd", "acos", "isnanf", "cbrtf", "av_audio_fifo_peek_at", "av_bprint_finalize", "sws_scale", "fclose", "av_frame_copy_props", "av_log_get_level", "av_get_sample_fmt_name", "av_frame_move_ref", "av_fifo_alloc_array", "avio_write", "qsort", "av_strdup", "av_packet_unref", "pthread_cond_broadcast", "sqrtf", "av_frame_get_pkt_duration", "av_buffer_pool_uninit", "av_gcd", "av_cpu_count", "av_get_default_channel_layout", "av_fifo_size", "av_realloc_array", "av_read_image_line", "sws_get_class", "av_opt_set_int", "av_hwframe_transfer_data", "fputc", "sws_isSupportedEndiannessConversion", "av_int_list_length_for_size", "sws_isSupportedInput", "swr_alloc", "avio_closep", "av_free", "sin", "lrint", "swr_convert", "sws_alloc_context", "av_fft_end", "pthread_mutex_lock", "av_freep", "memmove", "av_asprintf", "strcmp", "avpriv_do_elbg", "avcodec_find_encoder", "av_opt_set", "swr_get_class", "av_get_channel_layout_channel_index", "av_pix_fmt_desc_next", "swr_set_channel_mapping", "av_opt_set_defaults", "pthread_cond_signal", "av_opt_get_int", "av_bprint_chars", "av_hwframe_transfer_get_formats", "llrintf", "av_samples_set_silence", "abort", "atan", "av_get_packed_sample_fmt", "avcodec_decode_audio4"], "exportedfunctions": ["avfilter_get_class", "avfilter_graph_queue_command", "avfilter_graph_alloc", "avfilter_graph_free", "av_buffersrc_write_frame", "avfilter_get_by_name", "avfilter_graph_parse", "avfilter_link", "avfilter_link_get_channels", "av_buffersink_params_alloc", "av_abuffersink_params_alloc", "av_buffersrc_parameters_alloc", "av_buffersrc_parameters_set", "avfilter_free", "avfilter_get_matrix", "avfilter_next", "avfilter_configuration", "avfilter_init_filter", "av_buffersrc_add_frame", "avfilter_graph_dump", "avfilter_link_free", "avfilter_link_set_closed", "av_buffersink_get_frame_flags", "av_buffersink_get_samples", "av_buffersink_get_frame_rate", "av_buffersrc_get_nb_failed_requests", "avfilter_insert_filter", "av_buffersink_get_frame", "av_filter_next", "avfilter_uninit", "avfilter_register_all", "avfilter_graph_create_filter", "avfilter_graph_get_filter", "avfilter_open", "avfilter_version", "avfilter_transform", "avfilter_pad_get_type", "avfilter_init_dict", "avfilter_license", "avfilter_add_matrix", "avfilter_pad_count", "avfilter_graph_add_filter", "avfilter_graph_config", "avfilter_graph_parse2", "avfilter_config_links", "avfilter_process_command", "avfilter_make_format64_list", "avfilter_graph_request_oldest", "avfilter_init_str", "av_buffersrc_add_frame_flags", "avfilter_graph_set_auto_convert", "avfilter_register", "avfilter_sub_matrix", "avfilter_inout_alloc", "avfilter_graph_alloc_filter", "avfilter_mul_matrix", "avfilter_graph_parse_ptr", "avfilter_graph_send_command", "avfilter_pad_get_name", "av_buffersink_set_frame_size", "avfilter_inout_free"], "allstrings": ["aeval", "Mismatch between the specified number of channel expressions '%d' and the number of expected output channels '%d' for the specified channel layout\n", "same", "Invalid number of channels '%d' provided\n", "sample_rate:%d chlayout:%s duration:%lld\n", "Filter audio signal according to a specified expression.", "default", "exprs", "set the '|'-separated list of channels expressions", "channel_layout", "set channel layout", "aevalsrc", "Generate an audio signal generated by an expression.", "nb_samples", "set the number of samples per requested frame", "sample_rate", "set the sample rate", "44100", "duration", "set audio duration", "nb_in_channels", "nb_out_channels", "acrusher", "Reduce audio bit resolution.", "level_in", "set level in", "level_out", "set level out", "bits", "set bit reduction", "set mix", "mode", "set mode", "linear", "logarithmic", "set DC", "set anti-aliasing", "samples", "set sample reduction", "enable LFO", "lforange", "set LFO depth", "lforate", "set LFO rate", "%d%c", "Delay must be non negative number.\n", "At least one delay >0 must be specified.\n", "adelay", "Delay one or more audio channels.", "delays", "set list of delays for each channel", "Missing delays and/or decays.\n", "Number of delays %d differs from number of decays %d.\n", "At least one decay & delay must be set.\n", "delay[%d]: %f is out of allowed range: (0, 90000]\n", "decay[%d]: %f is out of allowed range: (0, 1]\n", "nb_echoes:%d\n", "Nothing to echo - missing delay samples.\n", "out_gain %f can cause saturation of output\n", "aecho", "Add echoing to the audio.", "in_gain", "set signal input gain", "out_gain", "set signal output gain", "set list of signal delays", "1000", "decays", "set list of signal decays", "aemphasis", "Audio emphasis.", "set input gain", "set output gain", "set filter mode", "reproduction", "production", "type", "set filter type", "Columbia", "BSI (78RPM)", "riaa", "RIAA", "Compact Disc (CD)", "50fm", "75fm", "50kf", "75kf", "Inputs must have the same sample rate %d for in0 vs %d for in1\n", "acrossfade", "Cross fade two input audio streams.", "crossfade0", "crossfade1", "set number of samples for cross fade duration", "set cross fade duration", "overlap", "overlap 1st stream end with 2nd stream start", "curve1", "set fade curve type for 1st stream", "curve", "linear slope", "qsin", "quarter of sine wave", "esin", "exponential sine wave", "hsin", "half of sine wave", "ipar", "inverted parabola", "quadratic", "cubic", "square root", "cubic root", "parabola", "exponential", "iqsin", "inverted quarter of sine wave", "ihsin", "inverted half of sine wave", "dese", "double-exponential seat", "desi", "double-exponential sigmoid", "curve2", "set fade curve type for 2nd stream", "afade", "Fade in/out input audio.", "set the fade direction", "fade-in", "fade-out", "start_sample", "set number of first sample to start fading", "set number of samples for fade duration", "start_time", "set time to start fading", "set fade duration", "set fade curve type", "afftfilt", "Apply arbitrary expressions to samples in frequency domain.", "real", "set channels real expressions", "imag", "set channels imaginary expressions", "win_size", "set window size", "w128", "w256", "w512", "w1024", "w2048", "w4096", "w8192", "w16384", "w32768", "w65536", "w131072", "win_func", "set window function", "rect", "Rectangular", "bartlett", "Bartlett", "hann", "Hann", "hanning", "Hanning", "hamming", "Hamming", "sine", "Sine", "set window overlap", "This syntax is deprecated, use '|' to separate %s.\n", "sample format", "Error parsing sample format: %s.\n", "sample rate", "Error parsing sample rate: %s.\n", "channel layout", "Error parsing channel layout: %s.\n", "aformat", "Convert the input audio to one of the specified formats.", "sample_fmts", "A '|'-separated list of sample formats.", "sample_rates", "A '|'-separated list of sample rates.", "channel_layouts", "A '|'-separated list of channel layouts.", "No channel layout for input 1\n", "Assertion %s failed at %s:%d\n", "i < 2", "libavfilter/af_agate.c", "sidechaingate", "Audio sidechain gate.", "main", "sidechain", "agate", "Audio gate.", "set input level", "range", "set max gain reduction", "threshold", "set threshold", "ratio", "set ratio", "attack", "set attack", "release", "set release", "makeup", "set makeup gain", "knee", "set knee", "detection", "set detection", "peak", "link", "set link", "average", "maximum", "level_sc", "set sidechain gain", "alimiter", "Audio lookahead limiter.", "set output level", "limit", "set limit", "enable asc", "asc_level", "set asc level", "level", "auto level", "No channel layout for input %d\n", "Using \"%s\" for input %d\n", "Too many channels (max %d)\n", "Input channel layouts overlap: output layout will be determined by the number of distinct input channels\n", "in%d", "Inputs must have the same sample rate %d for in%d vs %d\n", " -> out:", "%sin%d:", "Buffer queue overflow, dropping.\n", "queue->available", "libavfilter/bufferqueue.h", "amerge", "Merge two or more audio streams into a single multi-channel stream.", "inputs", "specify the number of inputs", "input%d", "info", "libavfilter/af_amix.c", "unknown input link\n", "frame_list->end", "s->nb_inputs > 1", "s->frame_list->nb_frames > 0", "inputs:%d fmt:%s srate:%d cl:%s\n", "amix", "Audio mixing.", "Number of inputs.", "How to determine the end-of-stream.", "longest", "Duration of longest input.", "shortest", "Duration of shortest input.", "first", "Duration of first input.", "dropout_transition", "Transition time, in seconds, for volume renormalization when an input stream ends.", "out0", "out1", "change", "%d|f=%lf|w=%lf|g=%lf", "c%d f=%lf w=%lf g=%lf t=%d", "c%d f=%lf w=%lf g=%lf", "anequalizer", "Apply high-order audio parametric multi band equalizer.", "params", "curves", "draw frequency response curves", "size", "set video size", "hd720", "mgain", "set max gain", "fscale", "set frequency scale", "colors", "set channels curves colors", "red|green|blue|yellow|orange|lime|pink|magenta|brown", "anull", "Pass the source unchanged to the output.", "padding n_out:%d pad_len_left:%lld\n", "outsamplesref->sample_rate == outlink->sample_rate", "libavfilter/af_apad.c", "outsamplesref->nb_samples == n_out", "n_out:%d whole_len_left:%lld\n", "Both whole and pad length are set, this is not possible\n", "apad", "Pad audio with silence.", "packet_size", "set silence packet size", "pad_len", "set number of samples of silence to add", "whole_len", "set minimum target number of samples in the audio stream", "channels > 0", "libavfilter/af_aphaser.c", "delay is too small\n", "in_gain may cause clipping\n", "out_gain may cause clipping\n", "aphaser", "Add a phasing effect to the audio.", "delay", "set delay in milliseconds", "decay", "set decay", "speed", "set modulation speed", "set modulation type", "triangular", "sinusoidal", "libavfilter/af_apulsator.c", "apulsator", "Audio pulsator.", "triangle", "square", "sawup", "sawdown", "amount", "set modulation", "offset_l", "set offset L", "offset_r", "set offset R", "width", "set pulse width", "timing", "set timing", "set BPM", "set ms", "set frequency", "outlink->sample_rate == out_rate", "libavfilter/af_aresample.c", "outlink->channel_layout == out_layout || !outlink->channel_layout", "outlink->format == out_format", "ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n", "aresample", "Resample audio data.", "nb_out_samples:%d pad:%d\n", "No space for %d samples, stretching audio fifo\n", "Stretching audio fifo failed, discarded %d samples\n", "asetnsamples", "Set the number of samples for each output audio frames.", "nb_out_samples", "set the number of per-frame output samples", "pad last frame with zeros", "Time base is inaccurate\n", "asetrate", "Change the sample rate without altering the data.", "NOPTS", "%lld", "%.6g", "n:%lld pts:%s pts_time:%s pos:%lld fmt:%s channels:%d chlayout:%s rate:%d nb_samples:%d checksum:%08X ", "plane_checksums: [ ", "%08X ", "  side data - ", "matrix encoding: ", "invalid data", "none", "Dolby Surround", "Dolby Pro Logic II", "Dolby Pro Logic IIx", "Dolby Pro Logic IIz", "Dolby EX", "Dolby Headphone", "unknown", "downmix: ", "preferred downmix type - ", "Lo/Ro", "Lt/Rt", " Mix levels: center %f (%f ltrt) - surround %f (%f ltrt) - lfe %f", "replaygain: ", "%s - ", "track gain", "track peak", "album gain", "album peak", "audio service type: ", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "unknown side data type: %d, size %d bytes", "ashowinfo", "Show textual information for each audio frame.", "lavfi.astats.%s", "lavfi.astats.%d.%s", "DC_offset", "Min_level", "Max_level", "Min_difference", "Max_difference", "Mean_difference", "Peak_level", "RMS_level", "RMS_peak", "RMS_trough", "Crest_factor", "Flat_factor", "Peak_count", "Bit_depth", "Bit_depth2", "Overall.DC_offset", "Overall.Min_level", "Overall.Max_level", "Overall.Min_difference", "Overall.Max_difference", "Overall.Mean_difference", "Overall.Peak_level", "Overall.RMS_level", "Overall.RMS_peak", "Overall.RMS_trough", "Overall.Flat_factor", "Overall.Peak_count", "Overall.Bit_depth", "Overall.Bit_depth2", "Overall.Number_of_samples", "Channel: %d\n", "DC offset: %f\n", "Min level: %f\n", "Max level: %f\n", "Min difference: %f\n", "Max difference: %f\n", "Mean difference: %f\n", "Peak level dB: %f\n", "RMS level dB: %f\n", "RMS peak dB: %f\n", "RMS trough dB: %f\n", "Crest factor: %f\n", "Flat factor: %f\n", "Peak count: %lld\n", "Bit depth: %u/%u\n", "Overall\n", "Peak count: %f\n", "Number of samples: %lld\n", "astats", "Show time domain statistics about audio frames.", "length", "set the window length", "metadata", "inject metadata in the filtergraph", "reset", "recalculate stats after this many frames", "tempo", "Invalid tempo value '%s'\n", "Tempo value %f exceeds [0.5, 2.0] range\n", "read_size <= atempo->ring", "libavfilter/af_atempo.c", "atempo->position[0] <= stop_here", "zeros != nsamples", "nsamples <= zeros + na + nb", "pot <= atempo->window", "start_here <= stop_here && frag->position[1] <= start_here && overlap <= frag->nsamples", "start_here <= stop_here && frag->position[1] <= start_here", "atempo", "Adjust audio tempo.", "set tempo scale factor", "Invalid frequency %f and/or width %f <= 0\n", "Invalid frequency %f. Frequency must be less than half the sample-rate %d.\n", "libavfilter/af_biquads.c", "clipping %d times. Please reduce gain.\n", "biquad", "Apply a biquad IIR filter with the given coefficients.", "allpass", "Apply a two-pole all-pass filter.", "frequency", "set central frequency", "width_type", "set filter-width type", "Q-Factor", "octave", "slope", "set filter-width", "highpass", "Apply a high-pass filter with 3dB point frequency.", "set width", "poles", "set number of poles", "lowpass", "Apply a low-pass filter with 3dB point frequency.", "bandreject", "Apply a two-pole Butterworth band-reject filter.", "set band-width", "bandpass", "Apply a two-pole Butterworth band-pass filter.", "use constant skirt gain", "treble", "Boost or cut upper frequencies.", "set shelf transition steep", "gain", "set gain", "bass", "Boost or cut lower frequencies.", "equalizer", "Apply two-pole peaking equalization (EQ) filter.", "input channel '%s' not available from input layout '%s'\n", "input channel #%d not available from input layout '%s'\n", "%d%n", "This syntax is deprecated, use '|' to separate the mappings.\n", "Too many channels mapped: '%d'.\n", "Error parsing channel layout: '%s'.\n", "Output channel layout '%s' does not match the list of channel mapped: '%s'.\n", "Output channel layout %s does not match the number of channels mapped %d.\n", "Output channel layout is not set and cannot be guessed from the maps.\n", "channelmap", "Remap audio channels.", "A comma-separated list of input channel numbers in output order.", "Output channel layout.", "Error parsing channel layout '%s'.\n", "channelsplit", "Split audio into per-channel streams.", "Input channel layout.", "stereo", "Both delays & decays & speeds & depths must be set.\n", "Number of delays & decays & speeds & depths given must be same.\n", "At least one delay & decay & speed & depth must be set.\n", "output gain can cause saturation or clipping of output\n", "chorus", "Add a chorus effect to the audio.", "set delays", "set decays", "speeds", "set speeds", "depths", "set depths", "Invalid number of channels: %d\n", "Number of attacks/decays bigger than number of channels.\n", "Number of attacks %d differs from number of decays %d.\n", "%lf/%lf", "Invalid and/or missing input/output value.\n", "Transfer function input values must be increasing.\n", "%d: x=%f y=%f\n", "libavfilter/af_compand.c", "compand", "Compress or expand audio dynamic range.", "attacks", "set time over which increase of volume is determined", "set time over which decrease of volume is determined", "points", "set points of transfer function", "-70/-70|-60/-20", "soft-knee", "set soft-knee", "volume", "set initial volume", "set delay for samples before sending them to volume adjuster", "compensationdelay", "Audio Compensation Delay Line.", "set mm distance", "set cm distance", "set meter distance", "set dry amount", "set wet amount", "temp", "crystalizer", "Simple expand audio dynamic range filter.", "set intensity", "enable clipping", "dcshift", "Apply a DC shift to the audio.", "shift", "set DC shift", "limitergain", "set limiter gain", "filter size %d is invalid. Must be an odd value.\n", "cqueue_size(s->gain_history_original[channel]) == s->filter_size", "libavfilter/af_dynaudnorm.c", "cqueue_size(s->gain_history_minimum[channel]) == s->filter_size", "./libavfilter/bufferqueue.h", "frame len %d\n", "dynaudnorm", "Dynamic Audio Normalizer.", "set the frame length in msec", "set the filter size", "set the peak value", "set the max amplification", "set the target RMS", "set channel coupling", "set DC correction", "set alternative boundary mode", "set the compress factor", "earwax", "Widen the stereo image.", "extrastereo", "Increase difference between stereo audio channels.", "set the difference coefficient", "entry table overflow.\n", "nan frequency (%g, %g).\n", "unsorted frequency (%g, %g).\n", "libavfilter/af_firequalizer.c", "entry", "nb_gain_entry = %d.\n", "dumping failed.\n", "filter kernel contains nan or infinity.\n", "%15.10f %15.10f\n", "\n\n# freq[%d] (frequency desired_gain actual_gain)\n", "%17.10f %17.10f %17.10f\n", "# time[%d] (time amplitude)\n", "equal gain, do not rebuild.\n", "gain_entry", "equal gain_entry, do not rebuild.\n", "too large delay, please decrease it.\n", "sample_rate = %d, channels = %d, analysis_rdft_len = %d, rdft_len = %d, fir_len = %d, nsamples_max = %d.\n", "too small accuracy, please increase it.\n", "gain_interpolate", "cubic_interpolate", "firequalizer", "Finite Impulse Response Equalizer.", "chid", "chlayout", "set gain curve", "gain_interpolate(f)", "set gain entry", "set delay", "accuracy", "set accuracy", "wfunc", "rectangular", "rectangular window", "hann window", "hamming window", "blackman", "blackman window", "nuttall3", "3-term nuttall window", "mnuttall3", "minimum 3-term nuttall window", "nuttall", "nuttall window", "bnuttall", "blackman-nuttall window", "bharris", "blackman-harris window", "tukey", "tukey window", "fixed", "set fixed frame samples", "multi", "set multi channels mode", "zero_phase", "set zero phase mode", "scale", "set gain scale", "linlin", "linear-freq linear-gain", "linlog", "linear-freq logarithmic-gain", "loglin", "logarithmic-freq linear-gain", "loglog", "logarithmic-freq logarithmic-gain", "dumpfile", "set dump file", "dumpscale", "set dump scale", "flanger", "Apply a flanging effect to the audio.", "base delay in milliseconds", "depth", "added swept delay in milliseconds", "regen", "percentage regeneration (delayed signal feedback)", "percentage of delayed signal mixed with original", "sweeps per second (Hz)", "shape", "swept wave shape", "phase", "swept wave percentage phase-shift for multi-channel", "interp", "delay-line interpolation", "itype", "detected", "not detected", " (try -v verbose)", " (bad_config)", "Channel %d: counter A: %d, B: %d, C: %d\n", "Channel %d: pe: %d, tf: %d, almost_A: %d, checkfail_B: %d, unmatched_C: %d, cdt_expired: %d\n", "Channel %d: tg %0.1f: %d\n", "Packets: type: %s, total: %d\n", "HDCD detected: yes, peak_extend: %s, max_gain_adj: %0.1f dB, transient_filter: %s, detectable errors: %d%s%s\n", "HDCD detected: no%s\n", "hdcd error: Unmatched target_gain near %d: tg0: %0.1f, tg1: %0.1f, lvg: %0.1f\n", "disabled", "enabled", "process stereo channels together", "process each channel separately", "Auto-convert: %s\n", "bits_per_sample %d does not fit into sample format %s, falling back to 16\n", "Looking for %d-bit HDCD in sample format %s\n", "20 and 24-bit HDCD decoding is experimental\n", "HDCD decoding for sample rates other than 44100 is experimental\n", "CDT period: %dms (%u samples @44100Hz)\n", "process_stereo disabled (channels = %d)\n", "Process mode: %s\n", "Force PE: %s\n", "Analyze mode: [%d] %s\n", "asample <= max_asample", "libavfilter/af_hdcd.c", "samples == samples_end", "Disabling automatic format conversion.\n", "samples + lead * stride + stride * (count - lead) <= samples_end", "hdcd error: Control B check failed: 0x%04x (0x%02x vs 0x%02x) near %d\n", "hdcd error: Control A almost: 0x%02x near %d\n", "samples + envelope_run * stride <= samples_end", "samples + lead * stride <= samples_end", "hdcd", "Apply High Definition Compatible Digital (HDCD) decoding.", "disable_autoconvert", "Disable any format conversion or resampling in the filter graph.", "process_stereo", "Process stereo channels together. Only apply target_gain when both channels match.", "cdt_ms", "Code detect timer period in ms.", "force_pe", "Always extend peaks above -3dBFS even when PE is not signaled.", "analyze_mode", "Replace audio with solid tone and signal some processing aspect in the amplitude.", "gain adjustment level at each sample", "samples where peak extend occurs", "samples where the code detect timer is active", "samples where the target gain does not match between channels", "bits_per_sample", "Valid bits per sample (location of the true LSB).", "16-bit (in s32 or s16)", "20-bit (in s32)", "24-bit (in s32)", "never enabled", "enabled intermittently", "enabled permanently", "i < ctx->nb_inputs", "libavfilter/af_join.c", "!s->input_frames[i]", "Missing separator '-' in channel map '%s'\n", "Invalid output channel: %s.\n", "Channel map describes more than one output channel.\n", "Output channel '%s' is not present in requested channel layout.\n", "Multiple maps for output channel '%s'.\n", "Invalid input stream index: %d.\n", "Invalid input channel: %s.\n", "Channel map describes more than one input channel.\n", "Requested channel %s is not present in input stream #%d.\n", "mappings: ", "Could not find input channel for output channel '%s'.\n", "%d.%s => %s ", "No channels are used from input stream %d.\n", "join", "Join multiple audio streams into multi-channel output.", "Number of input streams.", "Channel layout of the output stream.", "A comma-separated list of channels maps in the format 'input_stream.input_channel-output_channel.", "%7[A-Z]%n", "c%d%n", "pan filter needs a channel layout and a set of channel definitions as parameter\n", "Expected out channel name, got \"%.8s\"\n", "Channel \"%.8s\" does not exist in the chosen layout\n", "Invalid out channel name \"%.8s\"\n", "Syntax error after channel name in \"%.8s\"\n", "%lf%n *%n", "Expected in channel name, got \"%.8s\"\n", "Can not mix named and numbered channels\n", "Syntax error near \"%.8s\"\n", "af_pan supports a maximum of %d channels. Feel free to ask for a higher limit.\n", "Degenerate coefficients while renormalizing\n", "%s%.3g i%d", "o%d = %s\n", "Pure channel mapping detected:", "Remix channels with coefficients (panning).", "args", "track_gain = %+.2f dB\n", "track_peak = %.6f\n", "i < (sizeof(freqinfos) / sizeof((freqinfos)[0]))", "libavfilter/af_replaygain.c", "replaygain", "ReplayGain scanner.", "libavfilter/af_sidechaincompress.c", "acompressor", "Audio compressor.", "sidechaincompress", "Sidechain compressor.", "set make up gain", "set link type", "lavfi.silence_start", "silence_start: %s\n", "lavfi.silence_end", "lavfi.silence_duration", "silence_end: %s | silence_duration: %s\n", "silencedetect", "Detect silence.", "set noise tolerance", "noise", "set minimum duration in seconds", "silenceremove", "Remove silence.", "start_periods", "start_duration", "start_threshold", "stop_periods", "stop_duration", "stop_threshold", "leave_silence", "window", "sample rate is too small\n", "stereotools", "Apply various stereo tools.", "balance_in", "set balance in", "balance_out", "set balance out", "softclip", "enable softclip", "mutel", "mute L", "muter", "mute R", "phasel", "phase L", "phaser", "phase R", "set stereo mode", "lr>lr", "lr>ms", "ms>lr", "lr>ll", "lr>rr", "lr>l+r", "lr>rl", "slev", "set side level", "sbal", "set side balance", "mlev", "set middle level", "mpan", "set middle pan", "base", "set stereo base", "sclevel", "set S/C level", "set stereo phase", "stereowiden", "Apply stereo widening effect.", "set delay time", "feedback", "set feedback gain", "crossfeed", "set cross feed", "drymix", "set dry-mix", "tremolo", "Apply tremolo effect.", "set frequency in hertz", "set depth as percentage", "vibrato", "Apply vibrato effect.", "Error when evaluating the volume expression '%s'\n", "Invalid value NaN for volume\n", "Invalid value NaN for volume, setting to 0\n", "n:%f t:%f pts:%f precision:%s ", "volume_i:%d/255 ", "volume:%f volume_dB:%f\n", "Both ReplayGain gain values are unknown.\n", "Using gain %f dB from replaygain side data.\n", "tb:%f sample_rate:%f nb_channels:%f\n", "Change input volume.", "set volume adjustment expression", "precision", "select mathematical precision", "select 8-bit fixed-point", "float", "select 32-bit floating-point", "double", "select 64-bit floating-point", "eval", "specify when to evaluate expressions", "once", "eval volume expression once", "frame", "eval volume expression per-frame", "Apply replaygain side data when present", "drop", "replaygain side data is dropped", "ignore", "replaygain side data is ignored", "track", "track gain is preferred", "album", "album gain is preferred", "replaygain_preamp", "Apply replaygain pre-amplification", "replaygain_noclip", "Apply replaygain clipping prevention", "nb_channels", "nb_consumed_samples", "startpts", "startt", "n_samples: %lld\n", "power <= 0x8000 * 0x8000", "libavfilter/af_volumedetect.c", "mean_volume: %.1f dB\n", "max_volume: %.1f dB\n", "histogram_%ddb: %lld\n", "volumedetect", "Detect audio volume.", "anullsink", "Do absolutely nothing with the input audio.", "anoisesrc", "Generate a noise audio signal.", "set sample rate", "amplitude", "set amplitude", "set duration", "color", "set noise color", "colour", "white", "pink", "brown", "seed", "set random seed", "sample_rate:%d channel_layout:'%s' nb_samples:%d\n", "anullsrc", "Null audio source, return empty audio frames.", "set channel_layout", "nb samples expression evaluated to %d, defaulting to 1024\n", "Generate sine wave audio signal.", "set the sine frequency", "beep_factor", "set the beep frequency factor", "set the audio duration", "samples_per_frame", "set the number of samples per frame", "1024", "channels == av_get_channel_layout_nb_channels(link->channel_layout) || !av_get_channel_layout_nb_channels(link->channel_layout)", "libavfilter/audio.c", "libavfilter/avf_ahistogram.c", "ahistogram", "Convert input audio to histogram video output.", "dmode", "set method to display channels", "single", "all channels use single histogram", "separate", "each channel have own histogram", "rate", "set video rate", "set display scale", "sqrt", "cbrt", "rlog", "reverse logarithmic", "ascale", "set amplitude scale", "acount", "how much frames to accumulate", "rheight", "set histogram ratio of window height", "slide", "set sonogram sliding", "replace", "replace old rows with new", "scroll", "scroll from top to bottom", "lavfi.aphasemeter.phase", "aphasemeter", "Convert input audio to phase meter video output.", "800x400", "set red contrast", "set green contrast", "set blue contrast", "set median phase color", "avectorscope", "Convert input audio to vectorscope video output.", "lissajous", "lissajous_xy", "polar", "400x400", "set alpha contrast", "set red fade", "set green fade", "set blue fade", "set alpha fade", "zoom", "set zoom factor", "draw", "set draw mode", "line", "set amplitude scale mode", "cube root", "Input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding output link %s parameters (%dx%d, SAR %d:%d)\n", "in%d:%c%d", "out:%c%d", "Frame after EOF on input %s\n", "EOF on %s, %d streams left in segment.\n", "Segment finished at pts=%lld\n", "concat", "Concatenate audio and video streams.", "specify the number of segments", "specify the number of video streams", "specify the number of audio streams", "unsafe", "enable unsafe mode", "fft_time         = %16.3f s.\n", "cqt_time         = %16.3f s.\n", "process_cqt_time = %16.3f s.\n", "update_sono_time = %16.3f s.\n", "alloc_time       = %16.3f s.\n", "bar_time         = %16.3f s.\n", "axis_time        = %16.3f s.\n", "sono_time        = %16.3f s.\n", "plot_time        = %16.3f s.\n", "fullhd option is deprecated, use size/s option instead.\n", "fullhd set to 0 but with custom dimension.\n", "invalid dimension.\n", "unsupported colorspace, setting it to unspecified.\n", " %f | %f | %f | %f | %f | %f %1s", "invalid cscheme.\n", "freetype is not available, ignoring fontfile option.\n", "fontconfig is not available, ignoring font option.\n", "EF G A BC D ", "font axis rendering is not implemented in non-default frequency range, please use axisfile option instead.\n", "video: %dx%d %s %d/%d fps, bar_h = %d, axis_h = %d, sono_h = %d.\n", "fft_len = %d, cqt_len = %d.\n", "[%d] %s is nan, setting it to %g.\n", "sono_v", "[%d] %s is too low (%g), setting it to %g.\n", "[%d] %s it too high (%g), setting it to %g.\n", "bar_v", "tlength", "nb_cqt_coeffs = %d.\n", "loading axis image failed, fallback to font rendering.\n", "loading axis font failed, disable text drawing.\n", "audio: %d Hz, step = %d + %d/%d.\n", "fractional step.\n", "audio: %d Hz, step = %d.\n", "changing pts from %lld (%.3f) to %lld (%.3f).\n", "midi", "timeclamp", "freq", "a_weighting", "b_weighting", "c_weighting", "showcqt", "Convert input audio to a CQT (Constant/Clamped Q Transform) spectrum video output.", "1920x1080", "bar_h", "set bargraph height", "axis_h", "set axis height", "sono_h", "set sonogram height", "fullhd", "set fullhd size", "set sonogram volume", "set bargraph volume", "volume2", "sono_g", "set sonogram gamma", "gamma", "bar_g", "set bargraph gamma", "gamma2", "set timeclamp", "basefreq", "set base frequency", "endfreq", "set end frequency", "coeffclamp", "set coeffclamp", "set tlength", "384*tc/(384+tc*f)", "count", "set transform count", "fcount", "set frequency count", "fontfile", "set axis font file", "font", "set axis font", "fontcolor", "set font color", "st(0, (midi(f)-59.5)/12);st(1, if(between(ld(0),0,1), 0.5-0.5*cos(2*PI*ld(0)), 0));r(1-ld(1)) + b(ld(1))", "axisfile", "set axis image", "axis", "draw axis", "text", "set color space", "unspecified", "bt709", "bt470bg", "smpte170m", "smpte240m", "bt2020ncl", "cscheme", "set color scheme", "1|0.5|0|0|0.5|1", "Unable to create FFT context. The window size might be too high.\n", "overlap %f too big\n", "libavfilter/avf_showfreqs.c", "showfreqs", "Convert input audio to a frequencies video output.", "1024x512", "set display mode", "show lines", "show bars", "show dots", "Blackman", "welch", "Welch", "flattop", "Flat-top", "Blackman-Harris", "Blackman-Nuttall", "bhann", "Bartlett-Hann", "Nuttall", "lanczos", "Lanczos", "gauss", "Gauss", "Tukey", "dolph", "Dolph-Chebyshev", "cauchy", "Cauchy", "parzen", "Parzen", "poisson", "Poisson", "averaging", "set time averaging", "set channels colors", "cmode", "set channel mode", "combined", "show all channels in same window", "show each channel in own window", "minamp", "set minimum amplitude", "showspectrumpic", "s:%dx%d FFT window size:%d\n", "libavfilter/avf_showspectrum.c", "fin->nb_samples == s->win_size", "CREATED BY LIBAVFILTER", "%.2f", "TIME", "FREQUENCY (Hz)", "%.2fh", "%.2fm", "%.2fs", "%.0f dB", "Convert input audio to a spectrum video output single picture.", "4096x2048", "set channel display mode", "combined mode", "separate mode", "set channel coloring", "channel", "separate color for each channel", "intensity", "intensity based coloring", "rainbow", "rainbow based coloring", "moreland", "moreland based coloring", "nebulae", "nebulae based coloring", "fire", "fire based coloring", "fiery", "fiery based coloring", "fruit", "fruit based coloring", "cool", "cool based coloring", "4thrt", "4th root", "5thrt", "5th root", "saturation", "color saturation multiplier", "orientation", "set orientation", "vertical", "horizontal", "set scale gain", "legend", "draw legend", "rotation", "color rotation", "showspectrum", "Convert input audio to a spectrum video output.", "640x512", "set sliding mode", "replace old columns with new", "scroll from right to left", "fullframe", "return full frames", "rscroll", "scroll from left to right", "data", "set data mode", "magnitude", "showvolume", "Convert input audio volume to video output.", "set border width", "set channel width", "set channel height", "set fade", "set volume color expression", "PEAK*255+floor((1-PEAK)*255)*256+0xff000000", "display channel names", "display volume value", "set step size", "VOLUME", "CHANNEL", "PEAK", "showwavespic", "Could not allocate showwaves buffer\n", "s:%dx%d r:%f n:%d\n", "Too few samples\n", "Create frame averaging %lld samples per column\n", "col < outlink->w", "libavfilter/avf_showwaves.c", "Convert input audio to a video output single picture.", "600x240", "split_channels", "draw channels separately", "showwaves", "Convert input audio to a video output.", "select display mode", "point", "draw a point for each sample", "draw a line for each sample", "draw a line between samples", "cline", "draw a centered line for each sample", "set how many samples to show in the same point", "Timeline ('enable' option) not supported with filter '%s'\n", "Error when evaluating the expression '%s' for enable\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "--prefix=/Users/E/Codes/_ffmpeg4android/ffmpeg-3.2.9/android/arm --enable-shared --disable-static --disable-doc --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-avdevice --disable-doc --disable-symver --cross-prefix=/Users/E/Library/Android/android-ndk-r11c/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi- --target-os=linux --arch=arm --disable-debug --disable-encoders --enable-gpl --enable-libx264 --enable-encoder=libx264 --enable-encoder=aac --enable-cross-compile --sysroot=/Users/E/Library/Android/android-ndk-r11c/platforms/android-9/arch-arm/ --extra-cflags='-Os -fpic -marm -I/Users/E/Codes/x264android/x264/android/arm/include/' --extra-ldflags=' -s -L/Users/E/Codes/x264android/x264/android/arm/lib/ -lx264'", "libavfilter license: GPL version 2 or later", "Media type mismatch between the '%s' filter output pad %d (%s) and the '%s' filter input pad %d (%s)\n", "auto-inserting filter '%s' between the filter '%s' and the filter '%s'\n", "Not all input and output are properly linked (%d).\n", "circular filter chain detected\n", "Source filters and filters with more than one input must set config_props() callbacks on all outputs\n", "Failed to configure output pad on %s\n", "Video source filters must set their output link's width and height\n", "Failed to configure input pad on %s\n", "ping", "enable", "pong from:%s %s\n", "Copying data in avfilter.\n", "Processing command time:%f command:%s arg:%s\n", "(filter->flags & ((1 << 16) | (1 << 17))) != ((1 << 16) | (1 << 17))", "libavfilter/avfilter.c", "Error applying generic filter options.\n", "Error applying options to the filter.\n", "This filter does not take any options, but options were provided: %s.\n", "format", "noformat", "frei0r", "frei0r_src", "This syntax is deprecated. Use '|' to separate the list items.\n", "compat: called with args=[%s]\n", "No such option: %s.\n", "Format change is not supported\n", "Channel count change is not supported\n", "Channel layout change is not supported\n", "Sample rate change is not supported\n", "Samples dropped due to memory allocation failure.\n", "AVFilter", "thread_type", "Allowed thread types", "slice", "set enable expression", "threads", "Allowed number of threads", "index >= 0", "libavfilter/avfiltergraph.c", "Cannot select sample rate for the link between filters %s and %s.\n", "Cannot select channel layout for the link between filters %s and %s.\n", "Unknown channel layouts not supported, try specifying a channel layout using 'aformat=channel_layouts=something'.\n", "Query format failed for '%s': %s\n", "All layouts set on non-empty list\n", "All counts without all layouts\n", "Error initializing threading.\n", "The filters '%s' and '%s' do not have a common format and automatic conversion is disabled.\n", "'scale' filter not present, cannot convert pixel formats.\n", "auto-inserted scaler %d", "'aresample' filter not present, cannot convert audio formats.\n", "auto-inserted resampler %d", "inlink-> in_formats->refcount > 0", "inlink->out_formats->refcount > 0", "outlink-> in_formats->refcount > 0", "outlink->out_formats->refcount > 0", "inlink-> in_samplerates->refcount > 0", "inlink->out_samplerates->refcount > 0", "outlink-> in_samplerates->refcount > 0", "outlink->out_samplerates->refcount > 0", "inlink-> in_channel_layouts->refcount > 0", "inlink->out_channel_layouts->refcount > 0", "outlink-> in_channel_layouts->refcount > 0", "outlink->out_channel_layouts->refcount > 0", "Impossible to convert between the formats supported by the filter '%s' and the filter '%s'\n", "query_formats: %d queried, %d merged, %d already done, %d delayed\n", "The following filters could not choose their formats: %s\nConsider inserting the (a)format filter near their input or output.\n", "%s%s", "Input pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any source\n", "Output pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any destination\n", "fifo", "afifo", "auto-inserted fifo %d", "query_formats not finished\n", "best_idx >= 0", "diff < 2147483647", "picking %s out of %d ref:%s alpha:%d\n", "picking %s out of %d ref:%s\n", "n == sink_links_count", "Useless run of a filter graph\n", "EOF on sink link %s:%s.\n", "AVFilterGraph", "Maximum number of threads", "scale_sws_opts", "default scale filter options", "aresample_swr_opts", "default aresample filter options", "Invalid size for pixel_fmts: %d, should be multiple of %d\n", "Cannot buffer more frames. Consume some available frames before adding new ones.\n", "%d buffers queued in %s, something may be wrong.\n", "Invalid size for sample_fmts: %d, should be multiple of %d\n", "Invalid size for sample_rates: %d, should be multiple of %d\n", "Invalid size for channel_layouts: %d, should be multiple of %d\n", "Invalid size for channel_counts: %d, should be multiple of %d\n", "Conflicting all_channel_counts and list in options\n", "Failed to allocate fifo\n", "pix_fmts", "channel_counts", "all_channel_counts", "buffersink", "ffbuffersink", "!strcmp(ctx->filter->name, \"buffersink\") || !strcmp(ctx->filter->name, \"ffbuffersink\")", "libavfilter/buffersink.c", "abuffersink", "Buffer audio frames, and make them available to the end of the filter graph.", "Buffer video frames, and make them available to the end of the filter graph.", "set the supported sample formats", "set the supported sample rates", "set the supported channel layouts", "set the supported channel counts", "accept all channel counts", "set the supported pixel formats", "Changing frame properties on the fly is not supported by all filters.\n", "Changing frame properties on the fly is not supported.\n", "Invalid parameters provided.\n", "w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n", "Sample format was not set or was invalid\n", "Invalid channel layout %s.\n", "Mismatching channel count %d and layout '%s' (%d channels)\n", "Neither number of channels nor channel layout specified\n", "tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n", "Layout indicates a different number of channels than actually present\n", "abuffer", "Buffer audio frames, and make them accessible to the filterchain.", "buffer", "Buffer video frames, and make them accessible to the filterchain.", "time_base", "sample_fmt", "channels", "video_size", "height", "pix_fmt", "time_base_num", "deprecated, do not use", "time_base_den", "sar_num", "sar_den", "sample aspect ratio", "pixel_aspect", "frame_rate", "sws_param", "pix_desc", "libavfilter/drawutils.c", "Color conversion not implemented for %s\n", "mainpic", "libavfilter/dualinput.c", "lavfi.bench.start_time", "t:%f avg:%f max:%f min:%f\n", "abench", "Benchmark part of a filtergraph.", "action", "set action", "start", "start timer", "stop", "stop timer", "bench", "max is same or lower than min\n", "adrawgraph", "Draw a graph using input audio metadata.", "drawgraph", "Draw a graph using input video metadata.", "set 1st metadata key", "set 1st foreground color expression", "0xffff0000", "set 2nd metadata key", "set 2nd foreground color expression", "0xff00ff00", "set 3rd metadata key", "set 3rd foreground color expression", "0xffff00ff", "set 4th metadata key", "set 4th foreground color expression", "0xffffff00", "set background color", "set minimal value", "set maximal value", "set graph mode", "draw bars", "draw dots", "draw lines", "set slide mode", "draw new frames", "picture", "display graph in single frame", "set graph size", "900x256", "Summary:\n\n  Integrated loudness:\n    I:         %5.1f LUFS\n    Threshold: %5.1f LUFS\n\n  Loudness range:\n    LRA:       %5.1f LU\n    Threshold: %5.1f LUFS\n    LRA low:   %5.1f LUFS\n    LRA high:  %5.1f LUFS", "\n\n  Sample peak:\n    Peak:      %5.1f dBFS", "\n\n  True peak:\n    Peak:      %5.1f dBFS", "in_channel_layout", "in_sample_rate", "in_sample_fmt", "out_channel_layout", "out_sample_rate", "out_sample_fmt", "out%d", "EBU +%d scale\n", "Video size %dx%d is too small, minimum size is 640x480\n", "%c%d", "M:%6.1f S:%6.1f     I:%6.1f LUFS     LRA:%6.1f LU     ", "%.3f", "lavfi.r128.M", "lavfi.r128.S", "lavfi.r128.I", "lavfi.r128.LRA", "lavfi.r128.LRA.low", "lavfi.r128.LRA.high", "lavfi.r128.sample_peaks_ch%d", "lavfi.r128.true_peaks_ch%d", "t: %-10s M:%6.1f S:%6.1f     I:%6.1f LUFS     LRA:%6.1f LU", "  SPK:", " dBFS", " %5.1f", "  FTPK:", "  TPK:", "ebur128", "EBU R128 scanner.", "video", "set video output", "640x480", "meter", "set scale meter (+9 to +18)", "framelog", "force frame logging level", "information logging level", "verbose", "verbose logging level", "set peak mode", "disable any peak mode", "sample", "enable peak-sample mode", "true", "enable true-peak mode", "dualmono", "treat mono input files as dual-mono", "panlaw", "set a specific pan law for dual-mono files", "Parameters for input link %s (size %dx%d, SAR %d:%d) do not match the corresponding output link parameters (%dx%d, SAR %d:%d)\n", "libavfilter/f_interleave.c", "queue:%d -> frame time:%f\n", "NOPTS value for input frame cannot be accepted, frame discarded\n", "frame pts:%f -> queue idx:%d available:%d\n", "ainterleave", "Temporally interleave audio inputs.", "nb_inputs", "set number of inputs", "interleave", "Temporally interleave video inputs.", "loop", "Loop video frames.", "number of loops", "max number of frames to loop", "set the loop start frame", "aloop", "Loop audio samples.", "max number of samples to loop", "set the loop start sample", "Metadata key must be set\n", "Missing metadata value\n", "libavfilter/f_metadata.c", "expr option not set\n", "Error while parsing expression '%s'\n", "pipe:1", "Could not open %s: %s\n", "frame:%-4lld pts:%-7s pts_time:%-7s\n", "%s=%s\n", "Manipulate video frame metadata.", "set a mode of operation", "select", "select frame", "add new metadata", "modify", "modify metadata", "delete", "delete metadata", "print", "print metadata", "set metadata key", "value", "set metadata value", "function", "function for comparing values", "same_str", "starts_with", "less", "equal", "greater", "expr", "set expression for expr function", "file", "set file where to print metadata information", "ametadata", "Manipulate audio frame metadata.", "VALUE1", "VALUE2", "random seed: 0x%08x\n", " (no-op)", "%s -> %s%s\n", "perms", "Set permissions for the output video frame.", "aperms", "Set permissions for the output audio frame.", "select permissions mode", "do nothing", "set all output frames read-only", "set all output frames writable", "toggle", "switch permissions", "random", "set permissions randomly", "set the seed for the random mode", "time discontinuity detected: %lli us, resetting\n", "sleeping %lli us\n", "arealtime", "Slow down filtering to match realtime.", "realtime", "sleep time limit", "areverse", "Reverse an audio clip.", "reverse", "Reverse a clip.", "scene", "output%d", "Scene detection is ignored in aselect filter\n", "lavf.concatdec.start_time", "lavf.concatdec.duration", "lavfi.scene_score", "n:%f pts:%f t:%f key:%d", " interlace_type:%c pict_type:%c scene:%f", " samples_n:%d consumed_samples_n:%f", " -> select:%f select_out:%d\n", "Select video frames to pass in output.", "set an expression to use for selecting frames", "outputs", "set the number of outputs", "aselect", "Select audio frames to pass in output.", "start_pts", "prev_pts", "prev_selected_pts", "start_t", "prev_t", "prev_selected_t", "pict_type", "PICT_TYPE_I", "PICT_TYPE_P", "PICT_TYPE_B", "PICT_TYPE_S", "PICT_TYPE_SI", "PICT_TYPE_SP", "PICT_TYPE_BI", "interlace_type", "PROGRESSIVE", "TOPFIRST", "BOTTOMFIRST", "consumed_samples_n", "samples_n", "selected_n", "prev_selected_n", "concatdec_select", "enter", "leave", "One and only one of the filename or commands options must be specified\n", " \f\t\n\r", " \f\t\n\r,;", "Invalid start time specification '%s' in interval #%d\n", "Invalid end time specification '%s' in interval #%d\n", "Invalid end time '%s' in interval #%d: cannot be lesser than start time '%s'\n", "Unknown flag '%s' in interval #%d, command #%d\n", "Invalid flags char '%c' in interval #%d, command #%d\n", "Missing flag terminator or extraneous data found at the end of flags in interval #%d, command #%d\n", "No target specified in interval #%d, command #%d\n", "No command specified in interval #%d, command #%d\n", "Could not (re)allocate command array\n", "Missing separator or extraneous data found at the end of interval #%d, in command #%d\n", "Command was parsed as: flags:[%s] target:%s command:%s arg:%s\n", "No interval specified for interval #%d\n", "Missing terminator or extraneous data found at the end of interval #%d\n", "Could not (re)allocate intervals array\n", "No commands were specified\n", "Parsed commands:\n", "start_time:%f end_time:%f index:%d\n", "    [%s] target:%s command:%s arg:%s index:%d\n", "[%s] interval #%d start_ts:%f end_ts:%f ts:%f\n", "Processing command #%d target:%s command:%s arg:%s\n", "Command reply for command #%d: ret:%s res:%s\n", "asendcmd", "Send commands to filters.", "sendcmd", "commands", "set commands", "filename", "set commands file", "libavfilter/f_sidedata.c", "Side data type must be set\n", "sidedata", "Manipulate video frame side data.", "delete side data", "set side data type", "PANSCAN", "A53_CC", "STEREO3D", "MATRIXENCODING", "DOWNMIX_INFO", "REPLAYGAIN", "DISPLAYMATRIX", "MOTION_VECTORS", "SKIP_SAMPLES", "AUDIO_SERVICE_TYPE", "MASTERING_DISPLAY_METADATA", "GOP_TIMECODE", "asidedata", "Manipulate audio frame side data.", "mapping definition is not set\n", "n=%d map=%p p=%p\n", "Unable to map more than the %d input pads available\n", "Input stream index %d doesn't exist (there is only %d input streams defined)\n", "Map input stream %d to output stream %d\n", "invalid mapping\n", "%d map set\n", "config output link %d with settings from input link %d\n", "%sput%d", "Add %s pad %s\n", "astreamselect", "Configured with %d inpad and %d outpad\n", "Select audio streams", "streamselect", "Select video streams", "number of input streams", "input indexes to remap to outputs", "frame->nb_samples > offset", "libavfilter/fifo.c", "request_samples changed before the buffer was returned.\n", "Buffer input frames and send them when they are requested.", "Buffer input images and send them when they are requested.", "Duplicate formats in avfilter_merge_formats() detected\n", "Invalid pixel format '%s'\n", "Invalid sample format '%s'\n", "Invalid time base '%s'\n", "Invalid sample rate '%s'\n", "Invalid channel layout '%s'\n", "frame->data[1] != ((void *)0)", "libavfilter/framepool.c", "framesync", "level <= fs->sync_level", "libavfilter/framesync.c", "Impossible to set time base\n", "Selected %d/%d time base\n", "Sync level %u\n", "!fs->frame_ready", "fs->on_event", "libavfilter/generate_wave_table.c", "[%dx%d %d:%d %s]", "[%dHz %s:%s]", "%s:%s", "%*s%-*s", "%*s(%s)%*s", "=,;[", "[],;", "Parsed_%s_%d", "No such filter: '%s'\n", "Error creating filter '%s'\n", "flags", "Error initializing filter '%s'", " with args '%s'", "Cannot create the link %s:%d -> %s:%d\n", "Too many inputs specified for the \"%s\" filter.\n", "Bad (empty?) label found in the following: \"%s\".\n", "Mismatched '[' found in the following: \"%s\".\n", " \n\t\r", "No output pad can be associated to link label '%s'.\n", "sws_flags=", "sws_flags not terminated with ';'.\n", "Unable to parse graph description substring: \"%s\"\n", "Not enough inputs specified for the \"%s\" filter.\n", "Invalid filterchain containing an unlabelled output pad: \"%s\"\n", "[in]", "[out]", "image2", "Failed to open input file '%s'\n", "Find stream info failed\n", "Failed to find codec\n", "Failed to open codec\n", "Failed to alloc frame\n", "Failed to read frame from file\n", "Failed to decode image from file\n", "Error loading image file '%s'\n", "Impossible to create scale context for the conversion fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n", "TB:%f FRAME_RATE:%f SAMPLE_RATE:%f\n", "N:%lld PTS:%s T:%f POS:%s", " INTERLACED:%lld", " NB_SAMPLES:%lld NB_CONSUMED_SAMPLES:%lld", " -> PTS:%s T:%f\n", "asetpts", "Set PTS for the output audio frame.", "setpts", "Set PTS for the output video frame.", "Expression determining the frame timestamp", "FRAME_RATE", "INTERLACED", "NB_CONSUMED_SAMPLES", "NB_SAMPLES", "PREV_INPTS", "PREV_INT", "PREV_OUTPTS", "PREV_OUTT", "SAMPLE_RATE", "STARTPTS", "STARTT", "RTCTIME", "RTCSTART", "Invalid expression '%s' for timebase.\n", "Invalid non-positive values for the timebase num:%d or den:%d.\n", "tb:%d/%d -> tb:%d/%d\n", "tb:%d/%d pts:%lld -> tb:%d/%d pts:%lld\n", "asettb", "Set timebase for the audio output link.", "set expression determining the output timebase", "intb", "settb", "Set timebase for the video output link.", "AVTB", "asplit", "Pass on the audio input to N audio outputs.", "split", "Pass on the input to N video outputs.", "set number of outputs", "seek", "%i|%lli|%i %1s", "get_duration", "Stream finished, looping.\n", "Unable to loop: %s\n", "Decode error: %s\n", "Discontinuity in stream:%d diff:%lld\n", "Format changed %s -> %s, discarding frame\n", "matched only already used streams", "did not match any stream", "No filename provided!\n", "amovie", "d%c%d", "Loop with several streams is currently unsupported\n", "Failed to avformat_open_input '%s'\n", "Failed to find stream info\n", "%s: seek value overflow with start_time:%lld seek_point:%lld\n", "%s: could not seek to position %lld\n", "d%1[av]%d%c", "No %s stream with index '%d' found\n", "Invalid stream specifier \"%s\"\n", "Ambiguous stream specifier \"%s\", using #%d\n", "Stream specifier \"%s\" %s\n", "Stream specifier \"%s\" matched a %s stream,currently unsupported by libavfilter\n", "Channel layout is not set in stream %d, and could not be guessed from the number of channels (%d)\n", "Channel layout is not set in output stream %d, guessed channel layout is '%s'\n", "Failed to find any codec\n", "seek_point:%lli format_name:%s file_name:%s stream_index:%d\n", "Read audio from a movie source.", "movie", "Read from a movie source.", "format_name", "set format name", "stream_index", "set stream index", "seek_point", "set seekpoint (seconds)", "streams", "set streams", "set loop count", "discontinuity", "set discontinuity threshold", "start_sample < end_sample || (start_sample == end_sample && !frame->nb_samples)", "libavfilter/trim.c", "atrim", "Pick one continuous section from the input, drop the rest.", "Timestamp of the first frame that should be passed", "starti", "Timestamp of the first frame that should be dropped again", "endi", "Timestamp of the first frame that should be  passed", "end_pts", "Maximum duration of the output", "durationi", "Number of the first audio sample that should be passed to the output", "end_sample", "Number of the first audio sample that should be dropped again", "trim", "start_frame", "Number of the first frame that should be passed to the output", "end_frame", "Number of the first frame that should be dropped again", "libavfilter/vaf_spectrumsynth.c", "Magnitude and Phase sizes differ (%dx%d vs %dx%d).\n", "Magnitude and Phase time bases differ (%d/%d vs %d/%d).\n", "Magnitude and Phase framerates differ (%d/%d vs %d/%d).\n", "spectrumsynth", "Convert input spectrum videos to audio output.", "set channels", "set input amplitude scale", "set input sliding mode", "consume old columns with new", "consume only most right column", "consume full frames", "consume only most left column", "Input frame sizes do not match (%dx%d vs %dx%d).\n", "alphamerge", "Copy the luma value of the second input into the alpha channel of the first input.", "alpha", "num:den syntax is deprecated, please use num/den or named options instead\n", "Unable to parse ratio numerator \"%s\"\n", "Error when evaluating the expression '%s'\n", "Invalid string '%s' for aspect ratio\n", "w:%d h:%d dar:%d/%d sar:%d/%d -> dar:%d/%d sar:%d/%d\n", "w:%d h:%d sar:%d/%d dar:%d/%d -> sar:%d/%d dar:%d/%d\n", "setsar", "Set the pixel sample aspect ratio.", "set sample (pixel) aspect ratio", "set max value for nominator or denominator in the ratio", "setdar", "Set the frame display aspect ratio.", "set display aspect ratio", "dar_den", "hsub", "vsub", "size %d is invalid. Must be an odd value.\n", "atadenoise", "Apply an Adaptive Temporal Averaging Denoiser.", "set threshold A for 1st plane", "set threshold B for 1st plane", "set threshold A for 2nd plane", "set threshold B for 2nd plane", "set threshold A for 3rd plane", "set threshold B for 3rd plane", "set how many frames to use", "set what planes to filter", "avgblur", "Apply Average Blur filter.", "sizeX", "set horizontal size", "planes", "set planes to filter", "sizeY", "set vertical size", "n:%lld pts:%s pts_time:%s", "lavfi.bbox.x1", "lavfi.bbox.x2", "lavfi.bbox.y1", "lavfi.bbox.y2", "lavfi.bbox.w", "lavfi.bbox.h", " x1:%d x2:%d y1:%d y2:%d w:%d h:%d crop=%d:%d:%d:%d drawbox=%d:%d:%d:%d", "bbox", "Compute bounding box for each frame.", "min_val", "set minimum luminance value for bounding box", "lavfi.bitplanenoise.%d.%d", "bitplanenoise", "Measure bit plane noise.", "bitplane", "set bit plane to use for measuring noise", "filter", "show noisy pixels", "black_min_duration:%s pixel_black_th:%f pixel_black_th_i:%d picture_black_ratio_th:%f\n", "black_start:%s black_end:%s black_duration:%s\n", "frame:%lld picture_black_ratio:%f pts:%s t:%s type:%c\n", "lavfi.black_start", "lavfi.black_end", "blackdetect", "Detect video intervals that are (almost) black.", "set minimum detected black duration in seconds", "black_min_duration", "picture_black_ratio_th", "set the picture black ratio threshold", "pic_th", "pixel_black_th", "set the pixel black threshold", "pix_th", "frame:%u pblack:%u pts:%lld t:%f type:%c last_keyframe:%d\n", "lavfi.blackframe.pblack", "blackframe", "Detect frames that are (almost) black.", "percentage of the pixels that have to be below the threshold for the frame to be considered black", "threshold below which a pixel value is considered black", "thresh", "tblend", "inputs must be of same pixel format\n", "First input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding second input link %s parameters (%dx%d, SAR %d:%d)\n", "Blend successive frames.", "c0_mode", "set component #0 blend mode", "c1_mode", "set component #1 blend mode", "c2_mode", "set component #2 blend mode", "c3_mode", "set component #3 blend mode", "all_mode", "set blend mode for all components", "addition", "addition128", "burn", "darken", "difference", "difference128", "divide", "dodge", "exclusion", "freeze", "glow", "hardlight", "hardmix", "heat", "lighten", "linearlight", "multiply", "multiply128", "negation", "normal", "overlay", "phoenix", "pinlight", "reflect", "screen", "softlight", "subtract", "vividlight", "c0_expr", "set color component #0 expression", "c1_expr", "set color component #1 expression", "c2_expr", "set color component #2 expression", "c3_expr", "set color component #3 expression", "all_expr", "set expression for all color components", "c0_opacity", "set color component #0 opacity", "c1_opacity", "set color component #1 opacity", "c2_opacity", "set color component #2 opacity", "c3_opacity", "set color component #3 opacity", "all_opacity", "set opacity for all color components", "blend", "Blend two video frames into each other.", "bottom", "force termination when the shortest input terminates", "repeatlast", "repeat last bottom frame", "BOTTOM", "Error when evaluating luma radius expression '%s'\n", "Error when evaluating chroma radius expression '%s'\n", "Error when evaluating alpha radius expression '%s'\n", "luma_radius:%d luma_power:%d chroma_radius:%d chroma_power:%d alpha_radius:%d alpha_power:%d w:%d chroma_w:%d h:%d chroma_h:%d\n", "Invalid luma radius value %d, must be >= 0 and <= %d\n", "Invalid chroma radius value %d, must be >= 0 and <= %d\n", "Invalid alpha radius value %d, must be >= 0 and <= %d\n", "Luma radius expression is not set.\n", "boxblur", "Blur the input.", "luma_radius", "Radius of the luma blurring box", "luma_power", "How many times should the boxblur be applied to luma", "chroma_radius", "Radius of the chroma blurring box", "chroma_power", "How many times should the boxblur be applied to chroma", "alpha_radius", "Radius of the alpha blurring box", "alpha_power", "How many times should the boxblur be applied to alpha", "Video of less than 3 columns or lines is not supported\n", "libavfilter/vf_bwdif.c", "Failed to reallocate frame\n", "Reallocating frame due to differing stride\n", "bwdif", "Deinterlace the input image.", "specify the interlacing mode", "send_frame", "send one frame for each frame", "send_field", "send one frame for each field", "parity", "specify the assumed picture field parity", "assume top field first", "assume bottom field first", "auto", "auto detect parity", "deint", "specify which frames to deinterlace", "deinterlace all frames", "interlaced", "only deinterlace frames marked as interlaced", "chromakey", "Turns a certain color into transparency. Operates on YUV colors.", "set the chromakey key color", "black", "similarity", "set the chromakey similarity value", "set the chromakey key blend value", "color parameter is in yuv instead of rgb", "libavfilter/vf_ciescope.c", "ciescope", "Video CIE scope.", "system", "set color system", "ntsc", "NTSC 1953 Y'I'O' (ITU-R BT.470 System M)", "470m", "EBU Y'U'V' (PAL/SECAM) (ITU-R BT.470 System B, G)", "470bg", "smpte", "SMPTE-C RGB", "240m", "SMPTE-240M Y'PbPr", "apple", "Apple RGB", "widergb", "Adobe Wide Gamut RGB", "cie1931", "CIE 1931 RGB", "hdtv", "ITU.BT-709 Y'CbCr", "rec709", "uhdtv", "ITU-R.BT-2020", "rec2020", "set cie system", "CIE 1931 xyY", "CIE 1960 UCS", "CIE 1976 Luv", "gamuts", "set what gamuts to draw", "set ciescope size", "set ciescope intensity", "contrast", "corrgamma", "showwhite", "codecview", "Visualize information about some codecs.", "set motion vectors to visualize", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "mv_type", "set motion vectors type", "forward predicted MVs", "backward predicted MVs", "frame_type", "set frame types to visualize motion vectors of", "I-frames", "P-frames", "B-frames", "colorbalance", "Adjust the color balance.", "set red shadows", "set green shadows", "set blue shadows", "set red midtones", "set green midtones", "set blue midtones", "set red highlights", "set green highlights", "set blue highlights", "colorchannelmixer", "Adjust colors by mixing color channels.", "set the red gain for the red channel", "set the green gain for the red channel", "set the blue gain for the red channel", "set the alpha gain for the red channel", "set the red gain for the green channel", "set the green gain for the green channel", "set the blue gain for the green channel", "set the alpha gain for the green channel", "set the red gain for the blue channel", "set the green gain for the blue channel", "set the blue gain for the blue channel", "set the alpha gain for the blue channel", "set the red gain for the alpha channel", "set the green gain for the alpha channel", "set the blue gain for the alpha channel", "set the alpha gain for the alpha channel", "colorkey", "Turns a certain color into transparency. Operates on RGB colors.", "set the colorkey key color", "set the colorkey similarity value", "set the colorkey key blend value", "colorlevels", "Adjust the color levels.", "rimin", "set input red black point", "gimin", "set input green black point", "bimin", "set input blue black point", "aimin", "set input alpha black point", "rimax", "set input red white point", "gimax", "set input green white point", "bimax", "set input blue white point", "aimax", "set input alpha white point", "romin", "set output red black point", "gomin", "set output green black point", "bomin", "set output blue black point", "aomin", "set output alpha black point", "romax", "set output red white point", "gomax", "set output green white point", "bomax", "set output blue white point", "aomax", "set output alpha white point", "error calculating conversion coefficients\n", "%s -> %s\n", "Input frame does not specify a supported colorspace, and none has been specified as source either\n", "Unspecified destination color space\n", "Source and destination color space must not be identical\n", "colormatrix", "Convert color matrix.", "bt601", "bt2020", "set source color matrix", "color_mode", "set destination color matrix", "set BT.709 colorspace", "set FCC colorspace   ", "set BT.601 colorspace", "bt470", "set BT.470 colorspace", "set SMTPE-170M colorspace", "set SMPTE-240M colorspace", "set BT.2020 colorspace", "Unsupported input format %d (%s) or bitdepth (%d)\n", "Unsupported output format %d (%s) or bitdepth (%d)\n", "Please specify output primaries\n", "Unsupported output color property %d\n", "Unsupported output primaries %d (%s)\n", "Please specify output transfer characteristics\n", "Unsupported output transfer characteristics %d (%s)\n", "Input range not set, assuming tv/mpeg\n", "Unsupported input primaries %d (%s)\n", "Unsupported input transfer characteristics %d (%s)\n", "Unsupported input colorspace %d (%s)\n", "Unsupported input color range %d (%s)\n", "Unsupported output color range %d (%s)\n", "colorspace", "Convert between colorspaces.", "Set all color properties together", "bt470m", "bt601-6-525", "bt601-6-625", "space", "Output colorspace", "Output color range", "mpeg", "jpeg", "primaries", "Output color primaries", "Output transfer characteristics", "gamma22", "gamma28", "srgb", "iec61966-2-1", "bt2020-10", "bt2020-12", "Output pixel format", "yuv420p", "yuv420p10", "yuv420p12", "yuv422p", "yuv422p10", "yuv422p12", "yuv444p", "yuv444p10", "yuv444p12", "fast", "Ignore primary chromaticity and gamma correction", "dither", "Dithering mode", "wpadapt", "Whitepoint adaptation method", "bradford", "vonkries", "identity", "iall", "Set all input color properties together", "ispace", "Input colorspace", "irange", "Input color range", "iprimaries", "Input color primaries", "itrc", "Input transfer characteristics", "convolution", "prewitt", "sobel", "Apply sobel operator.", "set scale", "delta", "set delta", "Apply prewitt operator.", "Apply convolution filter.", "set matrix for 1st plane", "0 0 0 0 1 0 0 0 0", "set matrix for 2nd plane", "set matrix for 3rd plane", "set matrix for 4th plane", "0rdiv", "set rdiv for 1st plane", "1rdiv", "set rdiv for 2nd plane", "2rdiv", "set rdiv for 3rd plane", "3rdiv", "set rdiv for 4th plane", "0bias", "set bias for 1st plane", "1bias", "set bias for 2nd plane", "2bias", "set bias for 3rd plane", "3bias", "set bias for 4th plane", "copy", "Copy the input video unchanged to the output.", "cover filename not set\n", "cover image is not a YUV420 image\n", "lavfi.rect.x", "lavfi.rect.y", "lavfi.rect.w", "lavfi.rect.h", "cover_rect", "Find and cover a user specified object.", "cover", "cover bitmap filename", "set removal mode", "cover area with bitmap", "blur", "blur area", "n:%d t:%f pos:%f x:%d y:%d x+w:%d y+h:%d\n", "w:%d h:%d sar:%d/%d -> w:%d h:%d sar:%d/%d\n", "Invalid too big or non positive size for width '%d' or height '%d'\n", "Too big value or invalid expression for out_w/ow or out_h/oh. Maybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n", "out_w", "out_h", "crop", "Crop the input video.", "set the width crop area expression", "set the height crop area expression", "set the x crop area expression", "(in_w-out_w)/2", "set the y crop area expression", "(in_h-out_h)/2", "keep_aspect", "keep aspect ratio", "exact", "do exact cropping", "in_w", "in_h", "limit:%f round:%d reset_count:%d\n", "total:%d\n", "lavfi.cropdetect.x1", "lavfi.cropdetect.x2", "lavfi.cropdetect.y1", "lavfi.cropdetect.y2", "lavfi.cropdetect.w", "lavfi.cropdetect.h", "lavfi.cropdetect.x", "lavfi.cropdetect.y", "x1:%d x2:%d y1:%d y2:%d w:%d h:%d x:%d y:%d pts:%lld t:%f crop=%d:%d:%d:%d\n", "cropdetect", "Auto-detect crop size.", "Threshold below which the pixel is considered black", "round", "Value by which the width/height should be divisible", "Recalculate the crop area after this many frames", "reset_count", "max_outliers", "Threshold count of outliers", "%f/%f ", "curves %d (intid=%d) [%d points]: [%s]\n", "Cannot open file '%s' for writing: %s\n", "set xtics 0.1\n", "set ytics 0.1\n", "set size square\n", "set grid\n", "%s'-' using 1:2 with lines lc '%s' title ''", ", '-' using 1:2 with points pointtype 3 lc '%s' title ''", "%f %f\n", "plot ", "Invalid key point coordinates (%f;%f), x and y must be in the [0;1] range.\n", "Key point coordinates (%f;%f) and (%f;%f) are too close from each other or not strictly increasing on the x-axis\n", "Only one point (at (%f;%f)) is defined, this is unlikely to behave as you expect. You probably wantat least 2 points.", "point->next", "libavfilter/vf_curves.c", "x_start >= 0 && x_start < lut_size && x_end >= 0 && x_end < lut_size", "f(%f)=%f -> y[%d]=%d\n", "#%d points:", " (%f;%f)", "green", "blue", "#404040", "Adjust components curves.", "0.129/1 0.466/0.498 0.725/0", "0.109/1 0.301/0.498 0.517/0", "0.098/1 0.235/0.498 0.423/0", "0/0 0.25/0.156 0.501/0.501 0.686/0.745 1/1", "0/0 0.25/0.188 0.38/0.501 0.745/0.815 1/0.815", "0/0 0.231/0.094 0.709/0.874 1/1", "0/0 0.5/0.4 1/1", "0/0 0.149/0.066 0.831/0.905 0.905/0.98 1/1", "0/0 0.4/0.5 1/1", "0/0 0.305/0.286 0.694/0.713 1/1", "0/0 0.286/0.219 0.639/0.643 1/1", "0/1 1/0", "0/0 0.301/0.196 0.592/0.6 0.686/0.737 1/1", "0/0.11 0.42/0.51 1/0.95", "0/0 0.50/0.48 1/1", "0/0.22 0.49/0.44 1/0.8", "preset", "select a color curves preset", "preset_name", "color_negative", "cross_process", "darker", "increase_contrast", "lighter", "linear_contrast", "medium_contrast", "negative", "strong_contrast", "vintage", "master", "set master points coordinates", "set red points coordinates", "set green points coordinates", "set blue points coordinates", "set points coordinates for all components", "psfile", "set Photoshop curves file name", "plot", "save Gnuplot script of the curves in specified file", "%02X\n", "%04X\n", "datascope", "Video data analysis.", "set output size", "set x offset", "set y offset", "set scope mode", "mono", "color2", "draw column/row numbers", "opacity", "set background opacity", "Overlap value can not except %d with a block size of %dx%d\n", "libavfilter/vf_dctdnoiz.c", "The last %d horizontal pixels won't be denoised\n", "The last %d vertical pixels won't be denoised\n", "threads: [max=%d hmax=%d user=%d] => %d\n", "dctdnoiz", "Denoise frames using 2D DCT.", "sigma", "set noise sigma constant", "set number of block overlapping pixels", "set coefficient factor expression", "set the block size, expressed in bits", "deband", "Debands video.", "1thr", "set 1st plane threshold", "2thr", "set 2nd plane threshold", "3thr", "set 3rd plane threshold", "4thr", "set 4th plane threshold", "set range", "direction", "set direction", "set blur", "clean_src", "blockx and blocky settings must be power of two\n", "The input needs a constant frame rate; current rate of %d/%d is invalid\n", "FPS: %d/%d -> %d/%d\n", " dup", " lowest", " [DROP]", "1/%d frame drop:\n", "  #%d: totdiff=%08llx maxbdiff=%08llx%s%s%s%s\n", "decimate", "Decimate frames (post field matching filter).", "cycle", "set the number of frame from which one will be dropped", "dupthresh", "set duplicate threshold", "scthresh", "set scene change threshold", "blockx", "set the size of the x-axis blocks used during metric calculations", "blocky", "set the size of the y-axis blocks used during metric calculations", "ppsrc", "mark main input as a pre-processed input and activate clean source input stream", "chroma", "set whether or not chroma is considered in the metric calculations", "cycle:%d\n", "%lld\t", "next=%lld, new=%lld\n", "dejudder", "Remove judder produced by pullup.", "set the length of the cycle to use for dejuddering", "Option %s was not set.\n", "Note: default band value was changed from 4 to 1.\n", "Option band is deprecated.\n", "x:%d y:%d, w:%d h:%d band:%d show:%d\n", "Logo area is outside of the frame.\n", "delogo", "Remove logo from input video.", "set logo x position", "set logo y position", "set logo width", "set logo height", "band", "set delogo area band size", "show", "show delogo area", "rx must be a multiple of 16\n", "Ori x, Avg x, Fin x, Ori y, Avg y, Fin y, Ori angle, Avg angle, Fin angle, Ori zoom, Avg zoom, Fin zoom\n", "OpenCL support was not enabled in this build, cannot be selected\n", "cx: %d, cy: %d, cw: %d, ch: %d, rx: %d, ry: %d, edge: %d blocksize: %d contrast: %d search: %d\n", "%f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", "deshake", "Stabilize shaky video.", "set x for the rectangular search area", "set y for the rectangular search area", "set width for the rectangular search area", "set height for the rectangular search area", "edge", "set edge mode", "blank", "fill zeroes at blank locations", "original", "original image at blank locations", "clamp", "extruded edge value at blank locations", "mirror", "mirrored edge at blank locations", "blocksize", "set motion search blocksize", "set contrast threshold for blocks", "search", "set search strategy", "smode", "exhaustive", "exhaustive search", "less exhaustive search", "set motion search detailed log file name", "opencl", "use OpenCL filtering capabilities", "No pattern provided.\n", "Provided pattern includes non-numeric characters.\n", "Provided start_frame is too big.\n", "Detelecine pattern %s removes up to %d frames per frame, pts advance factor: %d/%d\n", "TB: %d/%d -> %d/%d\n", "detelecine", "Apply an inverse telecine pattern.", "first_field", "select first field", "field", "select top field first", "select bottom field first", "pattern", "pattern that describe for how many fields a frame is to be displayed", "position of first frame with respect to the pattern if stream is cut", "First input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding second input link %s parameters (%dx%d, SAR %d:%d) and/or third input link %s parameters (%dx%d, SAR %d:%d)\n", "displace", "Displace pixels.", "source", "xmap", "ymap", "smear", "wrap", "invert", "Size values less than 0 are not acceptable.\n", "x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\n", "Error when evaluating the expression '%s'.\n", "drawgrid", "Draw a colored grid on the input video.", "set horizontal offset", "set vertical offset", "set width of grid cell", "set height of grid cell", "set color of the grid", "thickness", "set grid line thickness", "drawbox", "Draw a colored box on the input video.", "set horizontal position of the left box edge", "set vertical position of the top box edge", "set width of the box", "set height of the box", "set color of the box", "set the box thickness", "libavfilter/vf_edgedetect.c", "edgedetect", "Detect and draw edge.", "high", "set high threshold", "set low threshold", "wires", "white/gray wires on black", "colormix", "mix colors", "pal8 output allows max 256 codebook length.\n", "elbg", "Apply posterize effect, using the ELBG algorithm.", "codebook_length", "set codebook length", "nb_steps", "set max number of steps used to compute the mapping", "set the random seed", "pal8", "set the pal8 output", "Error when parsing the expression '%s' for %s\n", "brightness", "gamma_r", "gamma_g", "gamma_b", "gamma_weight", "Adjust brightness, contrast, gamma, and saturation.", "set the contrast adjustment, negative values give a negative image", "set the brightness adjustment", "set the saturation adjustment", "set the initial gamma value", "gamma value for red", "gamma value for green", "gamma value for blue", "set the gamma weight which reduces the effect of gamma on bright areas", "init", "eval expressions once during initialization", "eval expressions per-frame", "Requested planes not available.\n", "alphaextract", "Extract an alpha channel as a grayscale image component.", "extractplanes", "Extract planes as grayscale frames.", "set planes", "set luma plane", "set u plane", "set v plane", "set red plane", "set green plane", "set blue plane", "set alpha plane", "type:%s start_frame:%d nb_frames:%d alpha:%d\n", "type:%s start_time:%f duration:%f alpha:%d\n", "libavfilter/vf_fade.c", "fade", "Fade in/out input video.", "'in' or 'out' for fade-in/fade-out", "Number of the first frame to which to apply the effect.", "nb_frames", "Number of frames to which the effect should be applied.", "fade alpha if it is available on the input", "Number of seconds of the beginning of the effect.", "Duration of the effect in seconds.", "set color", "weight_Y", "weight_U", "weight_V", "fftfilt", "Apply arbitrary expressions to pixels in frequency domain.", "dc_Y", "adjust gain in Y plane", "dc_U", "adjust gain in U plane", "dc_V", "adjust gain in V plane", "set luminance expression in Y plane", "set chrominance expression in U plane", "set chrominance expression in V plane", "w:%d h:%d type:%s -> w:%d h:%d\n", "Extract a field from the input video.", "set field type (top or bottom)", "field_type", "select top field", "select bottom field", "%lld,%lld %c", "%lld,%lld", "Invalid entry at line %lld.\n", "Out of range frames %lld and/or %lld on line %lld for %lld. input frame.\n", "Out of range %lld and/or %lld on line %lld for %lld. input frame.\n", "Missing entry for %lld. input frame.\n", "libavfilter/vf_fieldhint.c", "Invalid hint: %c.\n", "Hint file must be set.\n", "%s: %s\n", "fieldhint", "Field matching using hints.", "hint", "set hint file", "set hint mode", "absolute", "relative", "Combed pixel should not be larger than blockx x blocky\n", "libavfilter/vf_fieldmatch.c", "fm->prv && fm->src && fm->nxt", "fm->prv2 && fm->src2 && fm->nxt2", "order == 0 || order == 1 || field == 0 || field == 1", "COMBS: %3d %3d %3d %3d %3d\n", "Frame #%lld at %s is still interlaced\n", "SC:%d | COMBS: %3d %3d %3d %3d %3d (combpel=%d) match=%d combed=%s\n", "fieldmatch", "Field matching for inverse telecine.", "order", "specify the assumed field order", "set the matching mode or strategy to use", "2-way match (p/c)", "pc_n", "2-way match + 3rd match on combed (p/c + u)", "pc_u", "2-way match + 3rd match (same order) on combed (p/c + u)", "pc_n_ub", "2-way match + 3rd match on combed + 4th/5th matches if still combed (p/c + u + u/b)", "3-way match (p/c/n)", "pcn_ub", "3-way match + 4th/5th matches on combed (p/c/n + u/b)", "set the field to match from", "automatic (same value as 'order')", "bottom field", "top field", "mchroma", "set whether or not chroma is included during the match comparisons", "define an exclusion band which excludes the lines between y0 and y1 from the field matching decision", "set scene change detection threshold", "combmatch", "set combmatching mode", "combmatching", "disable combmatching", "enable combmatching only on scene change", "full", "enable combmatching all the time", "combdbg", "enable comb debug", "dbglvl", "no forced calculation", "calculate p/c/n", "pcnub", "calculate p/c/n/u/b", "cthresh", "set the area combing threshold used for combed frame detection", "set whether or not chroma is considered in the combed frame decision", "set the x-axis size of the window used during combed frame detection", "set the y-axis size of the window used during combed frame detection", "combpel", "set the number of combed pixels inside any of the blocky by blockx size blocks on the frame for the frame to be detected as combed", "progressive frame", "frame with same field order", "down", "Skipping %s.\n", "picture will move %s one line\n", "fieldorder", "Set the field order.", "output field order", "bottom field first", "top field first", "object filename not set\n", "object image is not a grayscale image\n", "score != 0", "libavfilter/vf_find_rect.c", "Found at %d %d score %f\n", "find_rect", "Find a user specified object.", "object", "object bitmap filename", "mipmaps", "set mipmaps", "xmin", "ymin", "xmax", "ymax", "Empty output format string.\n", "Force libavfilter not to use any of the specified pixel formats for the input to the next filter.", "Convert the input video to one of the specified pixel formats.", "A '|'-separated list of pixel formats", "%d frames in, %d frames out; %d frames dropped, %d frames duplicated.\n", "fps=%d/%d\n", "Set first pts to (in:%lld out:%lld)\n", "Discarding initial frame(s) with no timestamp.\n", "Dropping %d frame(s).\n", "Duplicating frame.\n", "Force constant framerate.", "A string describing desired output framerate", "Assume the first PTS should be this value.", "set rounding method for timestamps", "zero", "round towards 0", "round away from 0", "round towards -infty", "round towards +infty", "near", "round to nearest", "Left and right sizes differ (%dx%d vs %dx%d).\n", "Left and right time bases differ (%d/%d vs %d/%d).\n", "Left and right framerates differ (%d/%d vs %d/%d).\n", "Unknown packing mode.", "framepack", "Generate a frame packed stereoscopic video.", "packed", "left", "right", "Frame pack output format", "Views are packed next to each other", "Views are packed on top of each other", "frameseq", "Views are one after the other", "lines", "Views are interleaved by lines", "columns", "Views are interleaved by columns", "config_output()\n", "config_output() input time base:%u/%u (%f)\n", "time base:%u/%u -> %u/%u exact:%d\n", "Timebase conversion is not exact\n", "config_output() output time base:%u/%u (%f) w:%d h:%d\n", "fps -> fps:%u/%u scene score:%f interpolate start:%d end:%d\n", "set_srce_frame_output_pts()\n", "set_work_frame_pts()\n", "s->srce[s->next]", "libavfilter/vf_framerate.c", "s->srce[s->crnt]", "set_work_frame_pts() srce crnt pts:%lld\n", "set_work_frame_pts() srce next pts:%lld\n", "set_work_frame_pts() srce prev pts:%lld\n", "set_work_frame_pts() initial average srce pts:%lld\n", "set_work_frame_pts() average srce pts:%lld\n", "set_work_frame_pts() average srce pts:%lld at dest time base:%u/%u\n", "set_work_frame_pts() average dest pts delta:%lld\n", "set_work_frame_pts() calculated pts:%lld at dest time base:%u/%u\n", "get_scene_score16()\n", "get_scene_score16() process\n", "get_scene_score16() result is:%f\n", "blend_frames16() interpolate scene score:%f\n", "blend_frames16() INTERPOLATE to create work frame\n", "get_scene_score()\n", "get_scene_score() process\n", "get_scene_score() result is:%f\n", "blend_frames8() interpolate scene score:%f\n", "blend_frames8() INTERPOLATE to create work frame\n", "process_work_frame()\n", "process_work_frame() pending_input_frames %d\n", "process_work_frame() srce prev pts:%lld\n", "process_work_frame() srce crnt pts:%lld\n", "process_work_frame() srce next pts:%lld\n", "process_work_frame() no current frame cached: move on to next frame, do not output a frame\n", "next_source()\n", "next_source() unlink %d\n", "next_source() copy %d to %d\n", "next_source() make %d null\n", "process_work_frame() work crnt pts:%lld\n", "process_work_frame() work next pts:%lld\n", "process_work_frame() srce prev pts:%lld at dest time base:%u/%u\n", "process_work_frame() srce crnt pts:%lld at dest time base:%u/%u\n", "process_work_frame() srce next pts:%lld at dest time base:%u/%u\n", "process_work_frame() work crnt pts >= srce next pts: SKIP FRAME, move on to next frame, do not output a frame\n", "process_work_frame() interpolate:%f/256\n", "process_work_frame() source is:NEXT\n", "process_work_frame() source is:PREV\n", "process_work_frame() interpolate source is:NEXT\n", "process_work_frame() interpolate source is:PREV\n", "process_work_frame() CUT - DON'T INTERPOLATE\n", "process_work_frame() COPY to the work frame\n", "process_work_frame() REPEAT FRAME\n", "process_work_frame() CONSUME FRAME, move to next frame\n", "process_work_frame() output a frame\n", "request_frame()\n", "request_frame() call source's request_frame()\n", "request_frame() source's request_frame() returned error:%d\n", "request_frame() source's request_frame() returned:%d\n", "request_frame() REPEAT or FLUSH\n", "request_frame() nothing else to do, return:EOF\n", "request_frame() FLUSH\n", "request_frame() copy:%d to:%d\n", "Interlaced frame found - the output will not be correct.\n", "framerate", "Upsamples or downsamples progressive source between specified frame rates.", "required output frames per second rate", "interp_start", "point to start linear interpolation", "interp_end", "point to end linear interpolation", "scene change level", "set flags", "scene_change_detect", "enable scene change detection", "step:%d frame_rate:%d/%d(%f) -> frame_rate:%d/%d(%f)\n", "framestep", "Select one frame every N frames.", "step", "set frame step", "fspp", "Apply Fast Simple Post-processing filter.", "quality", "set quality", "force a constant quantizer parameter", "strength", "set filter strength", "use_bframe_qp", "use B-frames' QP", "gblur", "Apply Gaussian Blur filter.", "set sigma", "steps", "set number of steps", "sigmaV", "set vertical sigma", "A luminance or RGB expression is mandatory\n", "Either YCbCr or RGB but not both must be specified\n", "g(X,Y)", "b(X,Y)", "r(X,Y)", "desc", "libavfilter/vf_geq.c", "Apply generic equation to each pixel.", "lum_expr", "set luminance expression", "cb_expr", "set chroma blue expression", "cr_expr", "set chroma red expression", "alpha_expr", "set alpha expression", "red_expr", "set red expression", "green_expr", "set green expression", "blue_expr", "set blue expression", "threshold:%.2f radius:%d\n", "gradfun", "Debands video quickly using gradients.", "The maximum amount by which the filter will change any one pixel.", "radius", "The neighborhood to fit the gradient to.", "hflip", "Horizontally flip the input video.", "strength:%0.3f intensity:%0.3f antibanding:%d\n", "histeq", "Apply global color histogram equalization.", "set the strength", "set the intensity", "antibanding", "set the antibanding level", "apply no antibanding", "weak", "apply weak antibanding", "strong", "apply strong antibanding", "histogram", "Compute and draw a histogram.", "level_height", "set level height", "scale_height", "set scale height", "display_mode", "parade", "levels_mode", "set levels mode", "components", "set color components to display", "fgopacity", "set foreground opacity", "bgopacity", "ls:%f cs:%f lt:%f ct:%f\n", "hqdn3d", "Apply a High Quality 3D Denoiser.", "luma_spatial", "spatial luma strength", "chroma_spatial", "spatial chroma strength", "luma_tmp", "temporal luma strength", "chroma_tmp", "temporal chroma strength", "fmt:%s size:%dx%d -> size:%dx%d\n", "Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.", "set scale factor", "Error when evaluating the expression '%s' for %s\n", "H and h options are incompatible and cannot be specified at the same time\n", "H_expr:%s h_deg_expr:%s s_expr:%s b_expr:%s\n", "Saturation value not in range [%d,%d]: clipping value to %0.1f\n", "Brightness value not in range [%d,%d]: clipping value to %0.1f\n", "H:%0.1f*PI h:%0.1f s:%0.1f b:%0.f t:%0.1f n:%d\n", "Adjust the hue and saturation of the input video.", "set the hue angle degrees expression", "set the saturation expression", "set the hue angle radians expression", "set the brightness expression", "Invalid output format %s for hwframe download.\n", "The input must have a hardware frame reference.\n", "Input frames must have hardware context.\n", "Input frame is not the in the configured hwframe context.\n", "Failed to download frame: %d.\n", "hwdownload", "Download a hardware frame to a normal frame", "A hardware device reference is required to upload frames to.\n", "No input hwframe context.\n", "Surface format is %s.\n", "Failed to allocate frame to upload to.\n", "Failed to upload frame: %d.\n", "hwupload", "Upload a normal frame to a hardware frame", "hysteresis", "Grow first stream into second stream by connecting components.", "auto-inserted", "Repeated Fields: Neither:%6lld Top:%6lld Bottom:%6lld\n", "Single frame detection: TFF:%6lld BFF:%6lld Progressive:%6lld Undetermined:%6lld\n", "Multi frame detection: TFF:%6lld BFF:%6lld Progressive:%6lld Undetermined:%6lld\n", "%lld.%0*lld", "neither", "progressive", "undetermined", "Repeated Field:%12s, Single frame:%12s, Multi frame:%12s\n", "lavfi.idet.repeated.current_frame", "lavfi.idet.repeated.neither", "lavfi.idet.repeated.top", "lavfi.idet.repeated.bottom", "lavfi.idet.single.current_frame", "lavfi.idet.single.tff", "lavfi.idet.single.bff", "lavfi.idet.single.progressive", "lavfi.idet.single.undetermined", "lavfi.idet.multiple.current_frame", "lavfi.idet.multiple.tff", "lavfi.idet.multiple.bff", "lavfi.idet.multiple.progressive", "lavfi.idet.multiple.undetermined", "Final flag accuracy %d\n", "idet", "Interlace detect Filter.", "intl_thres", "set interlacing threshold", "prog_thres", "set progressive threshold", "rep_thres", "set repeat threshold", "half_life", "half life of cumulative statistics", "analyze_interlaced_flag", "set number of frames to use to determine if the interlace flag is accurate", "Deinterleave or interleave fields.", "luma_mode", "select luma mode", "deinterleave", "chroma_mode", "select chroma mode", "alpha_mode", "select alpha mode", "luma_swap", "swap luma fields", "chroma_swap", "swap chroma fields", "alpha_swap", "swap alpha fields", "with", "without", "input video height is too small\n", "Lowpass filter is disabled, the resulting video will be aliased rather than interlaced.\n", "%s interlacing %s lowpass filter\n", "cols >= 0 || lines >= 0", "libavfilter/vf_interlace.c", "video is already interlaced, adjusting framerate only\n", "interlace", "Convert progressive video into interlaced.", "scan", "scanning mode", "set vertical low-pass filter", "kerndeint", "Apply kernel deinterlacing to the input.", "set the threshold", "set the map", "set the order", "sharp", "set sharpening", "twoway", "set twoway", "lenscorrection", "Rectify the image by correcting for lens distortion.", "set relative center x", "set relative center y", "set quadratic distortion factor", "set double quadratic distortion factor", "Error when parsing the expression '%s' for the component %d and color %d.\n", "Error when evaluating the expression '%s' for the value %d for the component %d.\n", "val[%d][%d] = %d\n", "negval", "negate_alpha:%d\n", "negate", "Negate input video.", "negate_alpha", "lutrgb", "Compute and apply a lookup table to the RGB input video.", "lutyuv", "Compute and apply a lookup table to the YUV input video.", "Compute and apply a lookup table to the RGB/YUV input video.", "clip", "gammaval", "gammaval709", "set component #0 expression", "set component #1 expression", "set component #2 expression", "set component #3 expression", "set Y expression", "set U expression", "set V expression", "set R expression", "set G expression", "set B expression", "set A expression", "maxval", "minval", "clipval", "Error when parsing the expression '%s' for the component %d.\n", "Error when evaluating the expression '%s' for the values %d and %d for the component %d.\n", "lut2", "Compute and apply a lookup table from two video inputs.", "srcx", "srcy", "libavfilter/vf_lut3d.c", "Padding on the right (%dpx) of the Hald CLUT will be ignored\n", "Padding at the bottom (%dpx) of the Hald CLUT will be ignored\n", "The Hald CLUT width does not match the level\n", "Too large Hald CLUT (maximum level is %d, or %dx%d CLUT)\n", "Unexpected EOF\n", "3DLUTSIZE ", "Too large or invalid 3D LUT size\n", "%f %f %f", "LUT_3D_SIZE ", "DOMAIN_", "MIN ", "MAX ", "min: %f %f %f | max: %f %f %f\n", "values", "in and out must be defined\n", "invalid in (%d) or out (%d)\n", "Unable to guess the format from the extension\n", "%d %d %d", "cube", "Unrecognized '.%s' file type\n", "3D LUT is empty\n", "haldclut", "Adjust colors using a Hald CLUT.", "clut", "continue applying the last clut after eos", "select interpolation mode", "interp_mode", "nearest", "use values from the nearest defined points", "trilinear", "interpolate values using the 8 points defining a cube", "tetrahedral", "interpolate values using a tetrahedron", "lut3d", "Adjust colors using a 3D LUT.", "set 3D LUT file name", "maskedclamp", "Clamp first stream with second stream and third stream.", "dark", "bright", "undershoot", "set undershoot", "overshoot", "set overshoot", "maskedmerge", "Merge first stream with second stream using third stream as mask.", "mask", "Snow encoder is not enabled in libavcodec\n", "memc_only", "no_bitstream", "mcdeint", "Apply motion compensating deinterlacing.", "medium", "slow", "extra_slow", "set the assumed picture field parity", "set qp", "Only planar formats with more than one component are supported.\n", "Mapping with out of range input and/or plane number.\n", "s->nb_inputs && s->nb_inputs <= 4", "libavfilter/vf_mergeplanes.c", "input #%d link %s SAR %d:%d does not match output link %s SAR %d:%d\n", "input %d does not have %d plane\n", "output plane %d depth %d does not match input %d plane %d depth %d\n", "output plane %d width %d does not match input %d plane %d width %d\n", "output plane %d height %d does not match input %d plane %d height %d\n", "mergeplanes", "Merge planes.", "mapping", "set input to output plane mapping", "set output pixel format", "mestimate", "Generate motion vectors.", "method", "motion estimation method", "three step search", "tdls", "two dimensional logarithmic search", "ntss", "new three step search", "four step search", "diamond search", "hexbs", "hexagon-based search", "epzs", "enhanced predictive zonal search", "uneven multi-hexagon search", "mb_size", "macroblock size", "search_param", "search parameter", "Initializing out pts from input pts %lld\n", "minterpolate", "Frame rate conversion using Motion Interpolation.", "output's frame rate", "mi_mode", "motion interpolation mode", "duplicate frames", "blend frames", "motion compensated interpolation", "mc_mode", "motion compensation mode", "obmc", "overlapped block motion compensation", "aobmc", "adaptive overlapped block motion compensation", "me_mode", "motion estimation mode", "bidir", "bidirectional motion estimation", "bilat", "bilateral motion estimation", "vsbmc", "variable-size block motion compensation", "scene change detection method", "disable detection", "fdiff", "frame difference", "scd_threshold", "scene change threshold", "max_drop_count:%d hi:%d lo:%d frac:%f\n", "keep", "%d>=hi ", "lo:%d>=%d ", "lo:%d<%d ", "%s pts:%s pts_time:%s drop_count:%d\n", "mpdecimate", "Remove near-duplicate frames.", "set the maximum number of consecutive dropped frames (positive), or the minimum interval between dropped frames (negative)", "set high dropping threshold", "set low dropping threshold", "frac", "set fraction dropping threshold", "erosion", "dilation", "deflate", "inflate", "Apply inflate effect.", "threshold0", "set threshold for 1st plane", "threshold1", "set threshold for 2nd plane", "threshold2", "set threshold for 3rd plane", "threshold3", "set threshold for 4th plane", "Apply deflate effect.", "Apply dilation effect.", "coordinates", "set coordinates", "Apply erosion effect.", "(s->max_meaningful_diff - 1) * s->pdiff_lut_scale < (sizeof(s->weight_lut) / sizeof((s->weight_lut)[0]))", "libavfilter/vf_nlmeans.c", "Luma research window size must be odd, setting it to %d\n", "Luma patch size must be odd, setting it to %d\n", "Chroma research window size must be odd, setting it to %d\n", "Chroma patch size must be odd, setting it to %d\n", "Research window: %dx%d / %dx%d, patch size: %dx%d / %dx%d\n", "nlmeans", "Non-local means denoiser.", "denoising strength", "patch size", "patch size for chroma planes", "research window", "research window for chroma planes", "No weights file provided, aborting!\n", "Couldn't seek to the end of weights file.\n", "Couldn't get size of weights file.\n", "Unexpected weights file size.\n", "Couldn't seek to the start of weights file.\n", "Couldn't read weights file.\n", "nnedi", "Apply neural network edge directed interpolation intra-only deinterlacer.", "weights", "set weights file", "nnedi3_weights.bin", "set which frames to deinterlace", "set mode of operation", "use frame flags, both fields", "use frame flags, single field", "use top field only", "use bottom field only", "use both fields, top first", "use both fields, bottom first", "set which planes to process", "nsize", "set size of local neighborhood around each pixel, used by the predictor neural network", "s8x6", "s16x6", "s32x6", "s48x6", "s8x4", "s16x4", "s32x4", "set number of neurons in predictor neural network", "n128", "n256", "qual", "etype", "set which set of weights to use in the predictor", "weights trained to minimize absolute error", "weights trained to minimize squared error", "pscrn", "set prescreening", "fapprox", "Add noise.", "all_seed", "set component #0 noise seed", "all_strength", "set component #0 strength", "alls", "all_flags", "set component #0 flags", "allf", "averaged noise", "(semi)regular pattern", "temporal noise", "uniform noise", "c0_seed", "c0_strength", "c0_flags", "c1_seed", "set component #1 noise seed", "c1_strength", "set component #1 strength", "c1_flags", "set component #1 flags", "c2_seed", "set component #2 noise seed", "c2_strength", "set component #2 strength", "c2_flags", "set component #2 flags", "c3_seed", "set component #3 noise seed", "c3_strength", "set component #3 strength", "c3_flags", "set component #3 flags", "null", "The rgb option is deprecated and is overriding the format option, use format instead\n", "libavfilter/vf_overlay.c", "Incoming frame (time:%s) from link #%d\n", "x:%f xi:%d y:%f yi:%d\n", "main w:%d h:%d fmt:%s overlay w:%d h:%d fmt:%s eof_action:%s\n", "n:%f t:%f pos:%f x:%f xi:%d y:%f yi:%d\n", "Overlay a video source on top of the input.", "set the x expression", "set the y expression", "eof_action", "Action to take when encountering EOF from secondary input ", "repeat", "Repeat the previous frame.", "endall", "End both streams.", "pass", "Pass through the main input.", "force packed RGB in input and output (deprecated)", "set output format", "yuv420", "yuv422", "yuv444", "repeat overlay of the last overlay frame", "main_w", "main_h", "overlay_w", "overlay_h", "owdenoise", "Denoise using wavelets.", "set depth", "luma_strength", "set luma strength", "chroma_strength", "set chroma strength", "Negative values are not acceptable.\n", "w:%d h:%d -> w:%d h:%d x:%d y:%d color:0x%02X%02X%02X%02X\n", "Input area %d:%d:%d:%d not within the padded area 0:0:%d:%d or zero-sized\n", "Direct padding impossible allocating new frame\n", "Pad the input video.", "set the pad area width expression", "set the pad area height expression", "set the x offset expression for the input image position", "set the y offset expression for the input image position", "set the color of the padded area border", "(+1)", "box->len >= 1", "libavfilter/vf_palettegen.c", "new_box->len >= 1", "lavfi.color_quant_ratio", "%d%s colors generated out of %d colors; ratio=%f\n", "Dupped color: %08X\n", "s->nb_boxes < 256", "Unable to allocate references for %d different colors\n", "palettegen", "Find the optimal palette for a given stream.", "max_colors", "set the maximum number of colors to use in the palette", "reserve_transparent", "reserve a palette entry for transparency", "stats_mode", "set statistics mode", "compute full frame histograms", "diff", "compute histograms only for the part that differs from previous frame", "compute new histogram for each frame", "Palette input must contain exactly %d pixels. Specified input has %dx%d=%d pixels\n", "%*cnode%d [label=\"%c%02X%c%02X%c%02X%c\" fillcolor=\"#%02x%02x%02x\" fontcolor=\"#%06X\"]\n", "%*cnode%d -> node%d\n", "digraph {\n", "    node [style=filled fontsize=10 shape=box]\n", "/!\\ %02X%02X%02X: %d ! %d (%06X ! %06X) / dist: %d ! %d\n", "Accuracy check passed\n", "MEP:%.3f TotalMEP:%.3f\n", "paletteuse", "Use a palette to downsample an input video stream.", "palette", "select dithering mode", "dithering_mode", "bayer", "ordered 8x8 bayer dithering (deterministic)", "heckbert", "dithering as defined by Paul Heckbert in 1982 (simple error diffusion)", "floyd_steinberg", "Floyd and Steingberg dithering (error diffusion)", "sierra2", "Frankie Sierra dithering v2 (error diffusion)", "sierra2_4a", "Frankie Sierra dithering v2 \"Lite\" (error diffusion)", "bayer_scale", "set scale for bayer dithering", "diff_mode", "set frame difference mode", "rectangle", "process smallest different rectangle", "debug_kdtree", "save Graphviz graph of the kdtree in specified file", "color_search", "set reverse colormap color search method", "nns_iterative", "iterative search", "nns_recursive", "recursive search", "bruteforce", "brute-force into the palette", "mean_err", "compute and print mean error", "debug_accuracy", "test color search accuracy", "take new palette for each output frame", "libavfilter/vf_perspective.c", "perspective", "Correct the perspective of video.", "set top left x coordinate", "set top left y coordinate", "set top right x coordinate", "set top right y coordinate", "set bottom left x coordinate", "set bottom left y coordinate", "set bottom right x coordinate", "set bottom right y coordinate", "interpolation", "set interpolation", "sense", "specify the sense of the coordinates", "specify locations in source to send to corners in destination", "destination", "specify locations in destination to send corners of source", "libavfilter/vf_phase.c", "mode=%c tdiff=%f bdiff=%f pdiff=%f\n", "Phase shift fields.", "set phase mode", "top first", "bottom first", "top first analyze", "bottom first analyze", "analyze", "full analyze", "auto analyze", "pixdesctest", "Test pixel format definitions.", "libavfilter/vf_pp.c", "Filter video using libpostproc.", "subfilters", "set postprocess subfilters", "Apply Postprocessing 7 filter.", "set thresholding mode", "hard", "hard thresholding", "soft", "soft thresholding", "medium thresholding", " %c:%f", "PSNR%s average:%f min:%f max:%f\n", "stats_add_max was specified but stats_version < 2.\n", "Could not open stats file %s: %s\n", "%0.2f", "%s%c", "Width and height of input videos must be same.\n", "Inputs must be of same pixel format.\n", "lavfi.psnr.mse_avg", "lavfi.psnr.psnr_avg", "lavfi.psnr.mse.", "lavfi.psnr.psnr.", "psnr_log_version:2 fields:n", ",mse_avg", ",psnr_avg", ",mse_%c", ",psnr_%c", ",max_avg", ",max_%c", "n:%lld mse_avg:%0.2f ", "psnr_avg:%0.2f ", "mse_%c:%0.2f ", "psnr_%c:%0.2f ", "max_avg:%d ", "max_%c:%d ", "psnr", "Calculate the PSNR between two video streams.", "reference", "stats_file", "Set file where to store per-frame difference information", "stats_version", "Set the format version for the stats file.", "output_max", "Add raw stats (max values) to the output log.", "input format does not have such plane\n", "w: %d h: %d\n", "offset: %d length: %d\n", "Could not get buffer!\n", "pullup", "Pullup from field sequence to frames.", "set left junk size", "set right junk size", "set top junk size", "set bottom junk size", "set strict breaks", "set metric plane", "luma", "chroma blue", "chroma red", "known", "Change video quantization parameters.", "set qp expression", "Return random frames.", "frames", "set number of frames in cache", "set the seed", "Black color threshold is higher than white color threshold (%g > %g)\n", "threshold_black:%d threshold_white:%d threshold_gray:%d\n", "w:%d h:%d grp_width:%d scan_max:%d\n", "%02u:%02u:%02u%c%02u", "lavfi.readvitc.tc_str", "lavfi.readvitc.found", "readvitc", "Read vertical interval timecode and write it to frame metadata.", "scan_max", "maximum line numbers to scan for VITC data", "thr_b", "black color threshold", "thr_w", "white color threshold", "Second input link %s parameters (size %dx%d) do not match the corresponding third input link %s parameters (%dx%d)\n", "remap", "Remap pixels", "removegrain", "Remove grain.", "set mode for 1st plane", "set mode for 2nd plane", "set mode for 3rd plane", "set mode for 4th plane", "Mask image size %dx%d does not match with the input video size %dx%d\n", "The bitmap file name is mandatory\n", "full x1:%d x2:%d y1:%d y2:%d max_mask_size:%d\n", "half x1:%d x2:%d y1:%d y2:%d max_mask_size:%d\n", "removelogo", "Remove a TV logo based on a mask image.", "set bitmap filename", "Unexpected field flags: state=%d top_field_first=%d repeat_first_field=%d\n", "repeatfields", "Hard repeat fields based on MPEG repeat field flag.", "angle", "Error when parsing the expression '%s' for angle command\n", "Error occurred parsing angle expression '%s'\n", "Error parsing or evaluating expression for option %s: invalid expression '%s' or non-positive or indefinite value %f\n", "n:%f time:%f angle:%f/PI\n", "rotate", "Rotate the input image.", "rotw", "roth", "set angle (in radians)", "set output width expression", "set output height expression", "fillcolor", "set background fill color", "bilinear", "use bilinear interpolation", "luma_radius:%f luma_pre_filter_radius::%f luma_strength:%f chroma_radius:%f chroma_pre_filter_radius:%f chroma_strength:%f\n", "Apply shape adaptive blur.", "set luma radius", "luma_pre_filter_radius", "set luma pre-filter radius", "lpfr", "set chroma radius", "chroma_pre_filter_radius", "set chroma pre-filter radius", "cpfr", "Rescaled value for width or height is too big.\n", "srcw", "srch", "src_format", "dstw", "dsth", "dst_format", "sws_flags", "param0", "param1", "src_range", "dst_range", "src_h_chr_pos", "src_v_chr_pos", "dst_h_chr_pos", "dst_v_chr_pos", "w:%d h:%d fmt:%s sar:%d/%d -> w:%d h:%d fmt:%s sar:%d/%d flags:0x%0x\n", "Error when evaluating the expression '%s'.\nMaybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n", "Size and width/height expressions cannot be set at the same time.\n", "Invalid size '%s'\n", "w:%s h:%s flags:'%s' interl:%d\n", "Detected unsupported YCgCo colorspace.\n", "scale2ref", "Scale the input video size and/or convert the image format.", "Output video width", "Output video height", "Flags to pass to libswscale", "interl", "set interlacing", "in_color_matrix", "set input YCbCr type", "out_color_matrix", "set output YCbCr type", "in_range", "set input color range", "out_range", "set output color range", "in_v_chr_pos", "input vertical chroma position in luma grid/256", "in_h_chr_pos", "input horizontal chroma position in luma grid/256", "out_v_chr_pos", "output vertical chroma position in luma grid/256", "out_h_chr_pos", "output horizontal chroma position in luma grid/256", "force_original_aspect_ratio", "decrease or increase w/h if necessary to keep the original AR", "force_oar", "disable", "decrease", "increase", "Scaler param 0", "Scaler param 1", "nb_slices", "set the number of slices (debug purpose only)", "eval expressions during initialization and per-frame", "Scale the input video size and/or convert the image format to the given reference.", "ohsub", "ovsub", "Invalid %s adjustments (%g %g %g %g). Settings must be set in [-1;1] range\n", "libavfilter/vf_selectivecolor.c", " none", "Unsupported selective color file version %d, the settings might not be loaded properly\n", "%c value of first CMYK entry is not 0 but %d\n", "%f %f %f %f", "Adjustments:%s\n", "%8ss: C=%6g M=%6g Y=%6g K=%6g\n", "selectivecolor", "Apply CMYK adjustments to specific color ranges.", "correction_method", "select correction method", "reds", "adjust red regions", "yellows", "adjust yellow regions", "greens", "adjust green regions", "cyans", "adjust cyan regions", "blues", "adjust blue regions", "magentas", "adjust magenta regions", "whites", "adjust white regions", "neutrals", "adjust neutral regions", "blacks", "adjust black regions", "set Photoshop selectivecolor file name", "yellow", "cyan", "magenta", "neutral", "height must be even\n", "separatefields", "Split input video frames into fields.", "setfield", "Force field for the output video frame.", "select interlace mode", "keep the same input field", "mark as bottom-field-first", "mark as top-field-first", "prog", "mark as progressive", "config %s time_base: %d/%d, frame_rate: %d/%d\n", "n:%4lld pts:%7s pts_time:%-7s pos:%9lld fmt:%s sar:%d/%d s:%dx%d i:%c iskey:%d type:%c checksum:%08X plane_checksum:[%08X", " %08X", "] mean:[", "%lld ", "%3.1f ", "pan/scan", "A/53 closed captions (%d bytes)", "stereoscopic information: ", "type - ", "side by side", "top and bottom", "frame alternate", "checkerboard", "interleaved lines", "interleaved columns", "side by side (quincunx subsampling)", " (inverted)", "displaymatrix: rotation of %.2f degrees", "afd: value of %u", "unknown side data type %d (%d bytes)", "showinfo", "Show textual information for each video frame.", "showpalette", "Display frame palette.", "set pixel box size", "Index out of range.\n", "shuffleframes", "Shuffle video frames.", "set destination indexes of input frames", "Non-existing input plane #%d mapped to output plane #%d.\n", "Cannot map between a subsampled chroma plane and a luma or alpha plane.\n", "Cannot map between a palette plane and a data plane.\n", "shuffleplanes", "Shuffle video planes.", "map0", "Index of the input plane to be used as the first output plane ", "map1", "Index of the input plane to be used as the second output plane ", "map2", "Index of the input plane to be used as the third output plane ", "map3", "Index of the input plane to be used as the fourth output plane ", "lavfi.signalstats.YMIN", "lavfi.signalstats.YLOW", "lavfi.signalstats.YAVG", "lavfi.signalstats.YHIGH", "lavfi.signalstats.YMAX", "lavfi.signalstats.UMIN", "lavfi.signalstats.ULOW", "lavfi.signalstats.UAVG", "lavfi.signalstats.UHIGH", "lavfi.signalstats.UMAX", "lavfi.signalstats.VMIN", "lavfi.signalstats.VLOW", "lavfi.signalstats.VAVG", "lavfi.signalstats.VHIGH", "lavfi.signalstats.VMAX", "lavfi.signalstats.SATMIN", "lavfi.signalstats.SATLOW", "lavfi.signalstats.SATAVG", "lavfi.signalstats.SATHIGH", "lavfi.signalstats.SATMAX", "lavfi.signalstats.HUEMED", "lavfi.signalstats.HUEAVG", "lavfi.signalstats.YDIF", "lavfi.signalstats.UDIF", "lavfi.signalstats.VDIF", "lavfi.signalstats.YBITDEPTH", "lavfi.signalstats.UBITDEPTH", "lavfi.signalstats.VBITDEPTH", "lavfi.signalstats.%s", "TOUT", "VREP", "BRNG", "signalstats", "Generate statistics from video analysis.", "stat", "set statistics filters", "filters", "tout", "analyze pixels for temporal outliers", "vrep", "analyze video lines for vertical line repetition", "brng", "analyze for pixels outside of broadcast range", "set video filter", "highlight pixels that depict temporal outliers", "highlight video lines that depict vertical line repetition", "highlight pixels that are outside of broadcast range", "set highlight color", "luma_radius:%f luma_strength:%f luma_threshold:%d chroma_radius:%f chroma_strength:%f chroma_threshold:%d\n", "smartblur", "Blur the input video without impacting the outlines.", "luma_threshold", "set luma threshold", "chroma_threshold", "set chroma threshold", "Apply a simple post processing filter.", " %c:%f (%f)", "SSIM%s All:%f (%f)\n", "lavfi.ssim.", "lavfi.ssim.All", "lavfi.ssim.dB", "n:%lld ", "All:%f (%f)\n", "%c:%f ", "ssim", "Calculate the SSIM between two video streams.", "vstack", "Input %d width %d does not match input %d width %d.\n", "Input %d height %d does not match input %d height %d.\n", "Stack video inputs vertically.", "hstack", "Stack video inputs horizontally.", "width must be even\n", "input format %d is not supported\n", "Only 720 and 1080 height supported\n", "output format %d is not supported\n", "libavfilter/vf_stereo3d.c", "stereo3d", "Convert video stereoscopic 3D view.", "set input format", "ab2l", "above below half height left first", "ab2r", "above below half height right first", "above below left first", "above below right first", "alternating frames left first", "alternating frames right first", "sbs2l", "side by side half width left first", "sbs2r", "side by side half width right first", "sbsl", "side by side left first", "sbsr", "side by side right first", "interleave rows left first", "interleave rows right first", "interleave columns left first", "interleave columns right first", "agmc", "anaglyph green magenta color", "agmd", "anaglyph green magenta dubois", "agmg", "anaglyph green magenta gray", "agmh", "anaglyph green magenta half color", "arbg", "anaglyph red blue gray", "arcc", "anaglyph red cyan color", "arcd", "anaglyph red cyan dubois", "arcg", "anaglyph red cyan gray", "arch", "anaglyph red cyan half color", "argg", "anaglyph red green gray", "aybc", "anaglyph yellow blue color", "aybd", "anaglyph yellow blue dubois", "aybg", "anaglyph yellow blue gray", "aybh", "anaglyph yellow blue half color", "mono left", "mono right", "checkerboard left first", "checkerboard right first", "hdmi", "HDMI frame pack", "super2xsai", "Scale the input by 2x using the Super2xSaI pixel art algorithm.", "swaprect", "Swap 2 rectangular objects in video.", "set rect width", "set rect height", "set 1st rect x top left coordinate", "set 1st rect y top left coordinate", "set 2nd rect x top left coordinate", "set 2nd rect y top left coordinate", "swapuv", "Swap U and V components.", "Telecine pattern %s yields up to %d frames per frame, pts advance factor: %d/%d\n", "telecine", "Apply a telecine pattern.", "frame id #%d (pts_time=%f) selected from a set of %d images\n", "Allocation failure, try to lower the number of frames\n", "batch size: %d frames\n", "thumbnail", "Select the most representative frame in a given sequence of consecutive frames.", "set the frames batch size", "Tile size %ux%u is insane.\n", "nb_frames must be less than or equal to %dx%d=%d\n", "Total width %ux%u is too much.\n", "Total height %ux%u is too much.\n", "tile", "Tile several successive frames together.", "layout", "set grid size", "set maximum number of frame to render", "margin", "set outer border margin in pixels", "padding", "set inner border thickness in pixels", "set the color of the unused area", "low_pass_filter flag ignored with mode %d\n", "mode:%d filter:%s h:%d -> h:%d\n", "libavfilter/vf_tinterlace.c", "tinterlace", "Perform temporal field interlacing.", "merge", "merge fields", "drop_even", "drop even fields", "drop_odd", "drop odd fields", "pad alternate lines with black", "interleave_top", "interleave top and bottom fields", "interleave_bottom", "interleave bottom and top fields", "interlacex2", "interlace fields from two consecutive frames", "mergex2", "merge fields keeping same frame rate", "low_pass_filter", "enable vertical low-pass filter", "vlpf", "exact_tb", "force a timebase which can represent timestamps exactly", "clockwise", "counterclockwise", "dir values greater than 3 are deprecated, use the passthrough option instead\n", "w:%d h:%d -> w:%d h:%d (passthrough mode)\n", "w:%d h:%d dir:%d -> w:%d h:%d rotation:%s vflip:%d\n", "transpose", "Transpose input video.", "set transpose direction", "cclock_flip", "rotate counter-clockwise with vertical flip", "clock", "rotate clockwise", "cclock", "rotate counter-clockwise", "clock_flip", "rotate clockwise with vertical flip", "passthrough", "do not apply transposition if the input matches the specified geometry", "always apply transposition", "portrait", "preserve portrait geometry", "landscape", "preserve landscape geometry", "luma or chroma matrix size too big\n", "sharpen", "Invalid even size for %s matrix size %dx%d\n", "effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\n", "unsharp", "Sharpen or blur the input video.", "luma_msize_x", "set luma matrix horizontal size", "luma_msize_y", "set luma matrix vertical size", "luma_amount", "set luma effect strength", "chroma_msize_x", "set chroma matrix horizontal size", "chroma_msize_y", "set chroma matrix vertical size", "chroma_amount", "set chroma effect strength", "SNOW encoder not found.\n", "avctx_enc->codec", "libavfilter/vf_uspp.c", "Encoding failed\n", "uspp", "Apply Ultra Simple / Slow Post-processing filter.", "vaguedenoiser", "Apply a Wavelet based Denoiser.", "set filtering strength", "set filtering method", "garrote", "garotte thresholding", "nsteps", "percent", "set percent of full denoising", "low threshold should be less than high threshold\n", "libavfilter/vf_vectorscope.c", "vectorscope", "Video vectorscope.", "set vectorscope mode", "gray", "color3", "color4", "color5", "set color component on X axis", "set color component on Y axis", "envelope", "set envelope", "instant", "peak+instant", "graticule", "set graticule", "set graticule opacity", "set graticule flags", "draw white point", "draw black point", "name", "draw point name", "lthreshold", "hthreshold", "set colorspace", "vflip", "Flip the input video vertically.", "Unable to parse expression for 'angle'\n", "Unable to parse expression for 'x0'\n", "Unable to parse expression for 'y0'\n", "xscale=%f yscale=%f dmax=%f\n", "vignette", "Make or reverse a vignette effect.", "set lens angle", "PI/5", "set circle center position on x-axis", "set circle center position on y-axis", "set forward/backward mode", "forward", "backward", "eval expressions for each frame", "set dithering", "aspect", "set aspect ratio", "w3fdif", "Apply Martin Weston three field deinterlace.", "specify the filter", "simple", "complex", "waveform", "Video waveform monitor.", "1600", "2400", "3200", "4000", "2048", "3760", "3840", "4095", "1023", "column", "set mirroring", "display", "stack", "set components to display", "set envelope to display", "set filter", "flat", "aflat", "acolor", "numbers", "draw numbers", "dots", "draw dots instead of lines", "digital", "millivolts", "weave", "Weave input video fields into frames.", "set first field", "set top field first", "set bottom field first", "Scale the input using xBR algorithm.", "libavfilter/vf_yadif.c", "yadif", "send_frame_nospatial", "send one frame for each frame, but skip spatial interlacing check", "send_field_nospatial", "send one frame for each field, but skip spatial interlacing check", "s->in == ((void *)0)", "libavfilter/vf_zoompan.c", "zoompan", "Apply Zoom & Pan effect.", "set the zoom expression", "set the duration expression", "set the output image size", "set the output framerate", "pduration", "time", "pzoom", "nullsink", "Do absolutely nothing with the input video.", "w:%d\n", "The specified width is %d which cannot contain the provided string width of %d\n", "%d %c\n", "320x518", "Only one of the filename or pattern options can be used\n", "s:%dx%d r:%d/%d rule:%d stitch:%d scroll:%d full:%d seed:%u\n", "cellauto", "Create pattern generated by an elementary cellular automaton.", "read initial pattern from file", "set initial pattern", "rule", "set rule", "random_fill_ratio", "set fill ratio for filling initial grid randomly", "random_seed", "set the seed for filling the initial grid randomly", "scroll pattern downward", "start_full", "start filling the whole video", "stitch", "stitch boundaries", "320x240", "bBsS", "Invalid rule code '%s' provided\n", "Mold color is set while mold isn't, ignoring the color.\n", "h:%d max_w:%d\n", "The specified size is %dx%d which cannot contain the provided file size of %dx%d\n", "%d:%d %c\n", "s:%dx%d r:%d/%d rule:%s stay_rule:%d born_rule:%d stitch:%d seed:%u\n", "life", "Create life.", "set source file", "B3/S23", "mold", "set mold speed for dead cells", "life_color", "set life color", "death_color", "set death color", "mold_color", "set mold color", "Mandelbrot cache is too small!\n", "mandelbrot", "Render a Mandelbrot fractal.", "set frame size", "set frame rate", "maxiter", "set max iterations number", "start_x", "set the initial x position", "start_y", "set the initial y position", "start_scale", "set the initial scale value", "end_scale", "set the terminal scale value", "set the terminal pts value", "bailout", "set the bailout value", "morphxf", "set morph x frequency", "morphyf", "set morph y frequency", "morphamp", "set morph amplitude", "outer", "set outer coloring mode", "iteration_count", "set iteration count mode", "normalized_iteration_count", "set normalized iteration count mode", "set white mode", "outz", "set outz mode", "inner", "set inner coloring mode", "set black mode", "period", "set period mode", "convergence", "show time until convergence", "mincol", "color based on point closest to the origin of the iterations", "rate:%d/%d duration:%f\n", "mptestsrc", "Generate various test pattern.", "set video duration", "test", "set test to perform", "dc_luma", "dc_chroma", "freq_luma", "freq_chroma", "amp_luma", "amp_chroma", "ring1", "ring2", "size:%dx%d rate:%d/%d duration:%f sar:%d/%d\n", "w == h && w == level*level*level", "libavfilter/vsrc_testsrc.c", "x + w <= test->w", "y + h <= test->h", "ff_draw_init(&s->draw, inlink->format, 0) >= 0", "%02d:%02d:%02d.%03d\n%12lli", "allrgb", "Generate all RGB colors.", "set video sample aspect ratio", "allyuv", "Generate all yuv colors.", "smptehdbars", "Generate SMPTE HD color bars.", "smptebars", "Generate SMPTE color bars.", "yuvtestsrc", "Generate YUV test pattern.", "rgbtestsrc", "Generate RGB test pattern.", "testsrc2", "Generate another test pattern.", "testsrc", "Generate test pattern.", "decimals", "set number of decimals to show", "nullsrc", "Null video source, return unprocessed video frames.", "haldclutsrc", "Provide an identity Hald CLUT.", "set level", "Provide an uniformly colored input.", "libavfilter/window_func.c", "FFmpeg version 3.2.9"], "stringidentifiers": ["aeval", "same", "default", "exprs", "channel_layout", "aevalsrc", "nb_samples", "sample_rate", "duration", "nb_in_channels", "nb_out_channels", "acrusher", "level_in", "level_out", "bits", "mode", "linear", "logarithmic", "samples", "lforange", "lforate", "adelay", "delays", "aecho", "in_gain", "out_gain", "decays", "aemphasis", "reproduction", "production", "type", "Columbia", "riaa", "RIAA", "acrossfade", "crossfade0", "crossfade1", "overlap", "curve1", "curve", "qsin", "esin", "hsin", "ipar", "quadratic", "cubic", "parabola", "exponential", "iqsin", "ihsin", "dese", "desi", "curve2", "afade", "start_sample", "start_time", "afftfilt", "real", "imag", "win_size", "w128", "w256", "w512", "w1024", "w2048", "w4096", "w8192", "w16384", "w32768", "w65536", "w131072", "win_func", "rect", "Rectangular", "bartlett", "Bartlett", "hann", "Hann", "hanning", "Hanning", "hamming", "Hamming", "sine", "Sine", "aformat", "sample_fmts", "sample_rates", "channel_layouts", "sidechaingate", "main", "sidechain", "agate", "range", "threshold", "ratio", "attack", "release", "makeup", "knee", "detection", "peak", "link", "average", "maximum", "level_sc", "alimiter", "limit", "asc_level", "level", "amerge", "inputs", "info", "amix", "longest", "shortest", "first", "dropout_transition", "out0", "out1", "change", "anequalizer", "params", "curves", "size", "hd720", "mgain", "fscale", "colors", "anull", "apad", "packet_size", "pad_len", "whole_len", "aphaser", "delay", "decay", "speed", "triangular", "sinusoidal", "apulsator", "triangle", "square", "sawup", "sawdown", "amount", "offset_l", "offset_r", "width", "timing", "aresample", "asetnsamples", "nb_out_samples", "asetrate", "NOPTS", "none", "unknown", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "ashowinfo", "DC_offset", "Min_level", "Max_level", "Min_difference", "Max_difference", "Mean_difference", "Peak_level", "RMS_level", "RMS_peak", "RMS_trough", "Crest_factor", "Flat_factor", "Peak_count", "Bit_depth", "Bit_depth2", "astats", "length", "metadata", "reset", "tempo", "atempo", "biquad", "allpass", "frequency", "width_type", "octave", "slope", "highpass", "poles", "lowpass", "bandreject", "bandpass", "treble", "gain", "bass", "equalizer", "channelmap", "channelsplit", "stereo", "chorus", "speeds", "depths", "compand", "attacks", "points", "volume", "compensationdelay", "temp", "crystalizer", "dcshift", "shift", "limitergain", "dynaudnorm", "earwax", "extrastereo", "entry", "gain_entry", "gain_interpolate", "cubic_interpolate", "firequalizer", "chid", "chlayout", "accuracy", "wfunc", "rectangular", "blackman", "nuttall3", "mnuttall3", "nuttall", "bnuttall", "bharris", "tukey", "fixed", "multi", "zero_phase", "scale", "linlin", "linlog", "loglin", "loglog", "dumpfile", "dumpscale", "flanger", "depth", "regen", "shape", "phase", "interp", "itype", "detected", "disabled", "enabled", "hdcd", "disable_autoconvert", "process_stereo", "cdt_ms", "force_pe", "analyze_mode", "bits_per_sample", "join", "args", "replaygain", "acompressor", "sidechaincompress", "silencedetect", "noise", "silenceremove", "start_periods", "start_duration", "start_threshold", "stop_periods", "stop_duration", "stop_threshold", "leave_silence", "window", "stereotools", "balance_in", "balance_out", "softclip", "mutel", "muter", "phasel", "phaser", "slev", "sbal", "mlev", "mpan", "base", "sclevel", "stereowiden", "feedback", "crossfeed", "drymix", "tremolo", "vibrato", "precision", "float", "double", "eval", "once", "frame", "drop", "ignore", "track", "album", "replaygain_preamp", "replaygain_noclip", "nb_channels", "nb_consumed_samples", "startpts", "startt", "volumedetect", "anullsink", "anoisesrc", "amplitude", "color", "colour", "white", "pink", "brown", "seed", "anullsrc", "beep_factor", "samples_per_frame", "ahistogram", "dmode", "single", "separate", "rate", "sqrt", "cbrt", "rlog", "ascale", "acount", "rheight", "slide", "replace", "scroll", "aphasemeter", "avectorscope", "lissajous", "lissajous_xy", "polar", "zoom", "draw", "line", "concat", "unsafe", "sono_v", "bar_v", "tlength", "midi", "timeclamp", "freq", "a_weighting", "b_weighting", "c_weighting", "showcqt", "bar_h", "axis_h", "sono_h", "fullhd", "volume2", "sono_g", "gamma", "bar_g", "gamma2", "basefreq", "endfreq", "coeffclamp", "count", "fcount", "fontfile", "font", "fontcolor", "axisfile", "axis", "text", "unspecified", "bt709", "bt470bg", "smpte170m", "smpte240m", "bt2020ncl", "cscheme", "showfreqs", "Blackman", "welch", "Welch", "flattop", "bhann", "Nuttall", "lanczos", "Lanczos", "gauss", "Gauss", "Tukey", "dolph", "cauchy", "Cauchy", "parzen", "Parzen", "poisson", "Poisson", "averaging", "cmode", "combined", "minamp", "showspectrumpic", "TIME", "channel", "intensity", "rainbow", "moreland", "nebulae", "fire", "fiery", "fruit", "cool", "saturation", "orientation", "vertical", "horizontal", "legend", "rotation", "showspectrum", "fullframe", "rscroll", "data", "magnitude", "showvolume", "VOLUME", "CHANNEL", "PEAK", "showwavespic", "split_channels", "showwaves", "point", "cline", "ping", "enable", "format", "noformat", "frei0r", "frei0r_src", "AVFilter", "thread_type", "slice", "threads", "fifo", "afifo", "AVFilterGraph", "scale_sws_opts", "aresample_swr_opts", "pix_fmts", "channel_counts", "all_channel_counts", "buffersink", "ffbuffersink", "abuffersink", "abuffer", "buffer", "time_base", "sample_fmt", "channels", "video_size", "height", "pix_fmt", "time_base_num", "time_base_den", "sar_num", "sar_den", "pixel_aspect", "frame_rate", "sws_param", "pix_desc", "mainpic", "abench", "action", "start", "stop", "bench", "adrawgraph", "drawgraph", "picture", "in_channel_layout", "in_sample_rate", "in_sample_fmt", "out_channel_layout", "out_sample_rate", "out_sample_fmt", "ebur128", "video", "meter", "framelog", "verbose", "sample", "true", "dualmono", "panlaw", "ainterleave", "nb_inputs", "interleave", "loop", "aloop", "select", "modify", "delete", "print", "value", "function", "same_str", "starts_with", "less", "equal", "greater", "expr", "file", "ametadata", "VALUE1", "VALUE2", "perms", "aperms", "toggle", "random", "arealtime", "realtime", "areverse", "reverse", "scene", "outputs", "aselect", "start_pts", "prev_pts", "prev_selected_pts", "start_t", "prev_t", "prev_selected_t", "pict_type", "PICT_TYPE_I", "PICT_TYPE_P", "PICT_TYPE_B", "PICT_TYPE_S", "PICT_TYPE_SI", "PICT_TYPE_SP", "PICT_TYPE_BI", "interlace_type", "PROGRESSIVE", "TOPFIRST", "BOTTOMFIRST", "consumed_samples_n", "samples_n", "selected_n", "prev_selected_n", "concatdec_select", "enter", "leave", "asendcmd", "sendcmd", "commands", "filename", "sidedata", "PANSCAN", "A53_CC", "STEREO3D", "MATRIXENCODING", "DOWNMIX_INFO", "REPLAYGAIN", "DISPLAYMATRIX", "MOTION_VECTORS", "SKIP_SAMPLES", "AUDIO_SERVICE_TYPE", "MASTERING_DISPLAY_METADATA", "GOP_TIMECODE", "asidedata", "astreamselect", "streamselect", "framesync", "flags", "image2", "asetpts", "setpts", "FRAME_RATE", "INTERLACED", "NB_CONSUMED_SAMPLES", "NB_SAMPLES", "PREV_INPTS", "PREV_INT", "PREV_OUTPTS", "PREV_OUTT", "SAMPLE_RATE", "STARTPTS", "STARTT", "RTCTIME", "RTCSTART", "asettb", "intb", "settb", "AVTB", "asplit", "split", "seek", "get_duration", "amovie", "movie", "format_name", "stream_index", "seek_point", "streams", "discontinuity", "atrim", "starti", "endi", "end_pts", "durationi", "end_sample", "trim", "start_frame", "end_frame", "spectrumsynth", "alphamerge", "alpha", "setsar", "setdar", "dar_den", "hsub", "vsub", "atadenoise", "avgblur", "sizeX", "planes", "sizeY", "bbox", "min_val", "bitplanenoise", "bitplane", "filter", "blackdetect", "black_min_duration", "picture_black_ratio_th", "pic_th", "pixel_black_th", "pix_th", "blackframe", "thresh", "tblend", "c0_mode", "c1_mode", "c2_mode", "c3_mode", "all_mode", "addition", "addition128", "burn", "darken", "difference", "difference128", "divide", "dodge", "exclusion", "freeze", "glow", "hardlight", "hardmix", "heat", "lighten", "linearlight", "multiply", "multiply128", "negation", "normal", "overlay", "phoenix", "pinlight", "reflect", "screen", "softlight", "subtract", "vividlight", "c0_expr", "c1_expr", "c2_expr", "c3_expr", "all_expr", "c0_opacity", "c1_opacity", "c2_opacity", "c3_opacity", "all_opacity", "blend", "bottom", "repeatlast", "BOTTOM", "boxblur", "luma_radius", "luma_power", "chroma_radius", "chroma_power", "alpha_radius", "alpha_power", "bwdif", "send_frame", "send_field", "parity", "auto", "deint", "interlaced", "chromakey", "black", "similarity", "ciescope", "system", "ntsc", "smpte", "apple", "widergb", "cie1931", "hdtv", "rec709", "uhdtv", "rec2020", "gamuts", "contrast", "corrgamma", "showwhite", "codecview", "mv_type", "frame_type", "colorbalance", "colorchannelmixer", "colorkey", "colorlevels", "rimin", "gimin", "bimin", "aimin", "rimax", "gimax", "bimax", "aimax", "romin", "gomin", "bomin", "aomin", "romax", "gomax", "bomax", "aomax", "colormatrix", "bt601", "bt2020", "color_mode", "bt470", "colorspace", "bt470m", "space", "mpeg", "jpeg", "primaries", "gamma22", "gamma28", "srgb", "yuv420p", "yuv420p10", "yuv420p12", "yuv422p", "yuv422p10", "yuv422p12", "yuv444p", "yuv444p10", "yuv444p12", "fast", "dither", "wpadapt", "bradford", "vonkries", "identity", "iall", "ispace", "irange", "iprimaries", "itrc", "convolution", "prewitt", "sobel", "delta", "copy", "cover_rect", "cover", "blur", "out_w", "out_h", "crop", "keep_aspect", "exact", "in_w", "in_h", "cropdetect", "round", "reset_count", "max_outliers", "green", "blue", "preset", "preset_name", "color_negative", "cross_process", "darker", "increase_contrast", "lighter", "linear_contrast", "medium_contrast", "negative", "strong_contrast", "vintage", "master", "psfile", "plot", "datascope", "mono", "color2", "opacity", "dctdnoiz", "sigma", "deband", "direction", "clean_src", "decimate", "cycle", "dupthresh", "scthresh", "blockx", "blocky", "ppsrc", "chroma", "dejudder", "delogo", "band", "show", "deshake", "edge", "blank", "original", "clamp", "mirror", "blocksize", "search", "smode", "exhaustive", "opencl", "detelecine", "first_field", "field", "pattern", "displace", "source", "xmap", "ymap", "smear", "wrap", "invert", "drawgrid", "thickness", "drawbox", "edgedetect", "high", "wires", "colormix", "elbg", "codebook_length", "nb_steps", "pal8", "brightness", "gamma_r", "gamma_g", "gamma_b", "gamma_weight", "init", "alphaextract", "extractplanes", "fade", "nb_frames", "weight_Y", "weight_U", "weight_V", "fftfilt", "dc_Y", "dc_U", "dc_V", "field_type", "fieldhint", "hint", "absolute", "relative", "fieldmatch", "order", "pc_n", "pc_u", "pc_n_ub", "pcn_ub", "mchroma", "combmatch", "combmatching", "full", "combdbg", "dbglvl", "pcnub", "cthresh", "combpel", "down", "fieldorder", "find_rect", "object", "mipmaps", "xmin", "ymin", "xmax", "ymax", "zero", "near", "framepack", "packed", "left", "right", "frameseq", "lines", "columns", "framerate", "interp_start", "interp_end", "scene_change_detect", "framestep", "step", "fspp", "quality", "strength", "use_bframe_qp", "gblur", "steps", "sigmaV", "desc", "lum_expr", "cb_expr", "cr_expr", "alpha_expr", "red_expr", "green_expr", "blue_expr", "gradfun", "radius", "hflip", "histeq", "antibanding", "weak", "strong", "histogram", "level_height", "scale_height", "display_mode", "parade", "levels_mode", "components", "fgopacity", "bgopacity", "hqdn3d", "luma_spatial", "chroma_spatial", "luma_tmp", "chroma_tmp", "hwdownload", "hwupload", "hysteresis", "neither", "progressive", "undetermined", "idet", "intl_thres", "prog_thres", "rep_thres", "half_life", "analyze_interlaced_flag", "luma_mode", "deinterleave", "chroma_mode", "alpha_mode", "luma_swap", "chroma_swap", "alpha_swap", "with", "without", "interlace", "scan", "kerndeint", "sharp", "twoway", "lenscorrection", "negval", "negate", "negate_alpha", "lutrgb", "lutyuv", "clip", "gammaval", "gammaval709", "maxval", "minval", "clipval", "lut2", "srcx", "srcy", "DOMAIN_", "values", "cube", "haldclut", "clut", "interp_mode", "nearest", "trilinear", "tetrahedral", "lut3d", "maskedclamp", "dark", "bright", "undershoot", "overshoot", "maskedmerge", "mask", "memc_only", "no_bitstream", "mcdeint", "medium", "slow", "extra_slow", "mergeplanes", "mapping", "mestimate", "method", "tdls", "ntss", "hexbs", "epzs", "mb_size", "search_param", "minterpolate", "mi_mode", "mc_mode", "obmc", "aobmc", "me_mode", "bidir", "bilat", "vsbmc", "fdiff", "scd_threshold", "keep", "mpdecimate", "frac", "erosion", "dilation", "deflate", "inflate", "threshold0", "threshold1", "threshold2", "threshold3", "coordinates", "nlmeans", "nnedi", "weights", "nsize", "s8x6", "s16x6", "s32x6", "s48x6", "s8x4", "s16x4", "s32x4", "n128", "n256", "qual", "etype", "pscrn", "fapprox", "all_seed", "all_strength", "alls", "all_flags", "allf", "c0_seed", "c0_strength", "c0_flags", "c1_seed", "c1_strength", "c1_flags", "c2_seed", "c2_strength", "c2_flags", "c3_seed", "c3_strength", "c3_flags", "null", "eof_action", "repeat", "endall", "pass", "yuv420", "yuv422", "yuv444", "main_w", "main_h", "overlay_w", "overlay_h", "owdenoise", "luma_strength", "chroma_strength", "palettegen", "max_colors", "reserve_transparent", "stats_mode", "diff", "paletteuse", "palette", "dithering_mode", "bayer", "heckbert", "floyd_steinberg", "sierra2", "sierra2_4a", "bayer_scale", "diff_mode", "rectangle", "debug_kdtree", "color_search", "nns_iterative", "nns_recursive", "bruteforce", "mean_err", "debug_accuracy", "perspective", "interpolation", "sense", "destination", "analyze", "pixdesctest", "subfilters", "hard", "soft", "psnr", "reference", "stats_file", "stats_version", "output_max", "pullup", "luma", "known", "frames", "readvitc", "scan_max", "thr_b", "thr_w", "remap", "removegrain", "removelogo", "repeatfields", "angle", "rotate", "rotw", "roth", "fillcolor", "bilinear", "luma_pre_filter_radius", "lpfr", "chroma_pre_filter_radius", "cpfr", "srcw", "srch", "src_format", "dstw", "dsth", "dst_format", "sws_flags", "param0", "param1", "src_range", "dst_range", "src_h_chr_pos", "src_v_chr_pos", "dst_h_chr_pos", "dst_v_chr_pos", "scale2ref", "interl", "in_color_matrix", "out_color_matrix", "in_range", "out_range", "in_v_chr_pos", "in_h_chr_pos", "out_v_chr_pos", "out_h_chr_pos", "force_original_aspect_ratio", "force_oar", "disable", "decrease", "increase", "nb_slices", "ohsub", "ovsub", "selectivecolor", "correction_method", "reds", "yellows", "greens", "cyans", "blues", "magentas", "whites", "neutrals", "blacks", "yellow", "cyan", "magenta", "neutral", "separatefields", "setfield", "prog", "checkerboard", "showinfo", "showpalette", "shuffleframes", "shuffleplanes", "map0", "map1", "map2", "map3", "TOUT", "VREP", "BRNG", "signalstats", "stat", "filters", "tout", "vrep", "brng", "smartblur", "luma_threshold", "chroma_threshold", "ssim", "vstack", "hstack", "stereo3d", "ab2l", "ab2r", "sbs2l", "sbs2r", "sbsl", "sbsr", "agmc", "agmd", "agmg", "agmh", "arbg", "arcc", "arcd", "arcg", "arch", "argg", "aybc", "aybd", "aybg", "aybh", "hdmi", "super2xsai", "swaprect", "swapuv", "telecine", "thumbnail", "tile", "layout", "margin", "padding", "tinterlace", "merge", "drop_even", "drop_odd", "interleave_top", "interleave_bottom", "interlacex2", "mergex2", "low_pass_filter", "vlpf", "exact_tb", "clockwise", "counterclockwise", "transpose", "cclock_flip", "clock", "cclock", "clock_flip", "passthrough", "portrait", "landscape", "sharpen", "unsharp", "luma_msize_x", "luma_msize_y", "luma_amount", "chroma_msize_x", "chroma_msize_y", "chroma_amount", "uspp", "vaguedenoiser", "garrote", "nsteps", "percent", "vectorscope", "gray", "color3", "color4", "color5", "envelope", "instant", "graticule", "name", "lthreshold", "hthreshold", "vflip", "vignette", "forward", "backward", "aspect", "w3fdif", "simple", "complex", "waveform", "column", "display", "stack", "flat", "aflat", "acolor", "numbers", "dots", "digital", "millivolts", "weave", "yadif", "send_frame_nospatial", "send_field_nospatial", "zoompan", "pduration", "time", "pzoom", "nullsink", "cellauto", "rule", "random_fill_ratio", "random_seed", "start_full", "stitch", "bBsS", "life", "mold", "life_color", "death_color", "mold_color", "mandelbrot", "maxiter", "start_x", "start_y", "start_scale", "end_scale", "bailout", "morphxf", "morphyf", "morphamp", "outer", "iteration_count", "normalized_iteration_count", "outz", "inner", "period", "convergence", "mincol", "mptestsrc", "test", "dc_luma", "dc_chroma", "freq_luma", "freq_chroma", "amp_luma", "amp_chroma", "ring1", "ring2", "allrgb", "allyuv", "smptehdbars", "smptebars", "yuvtestsrc", "rgbtestsrc", "testsrc2", "testsrc", "decimals", "nullsrc", "haldclutsrc"], "debugstrings": ["Disabling automatic format conversion.\n", "Disable any format conversion or resampling in the filter graph.", "libavfilter license: GPL version 2 or later", "The filters '%s' and '%s' do not have a common format and automatic conversion is disabled.\n", "Color conversion not implemented for %s\n", "Impossible to create scale context for the conversion fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n", "error calculating conversion coefficients\n", "Timebase conversion is not exact\n", "Frame rate conversion using Motion Interpolation.", "stats_add_max was specified but stats_version < 2.\n", "psnr_log_version:2 fields:n", "stats_version", "Set the format version for the stats file.", "Unsupported selective color file version %d, the settings might not be loaded properly\n", "FFmpeg version 3.2.9", "GCC: (GNU) 4.9 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["libc.so", "libavcodec-57.so", "libavformat-57.so", "libpostproc-54.so", "libm.so", "libswresample-2.so", "libavutil-55.so", "libswscale-4.so"], "elfname": "libavfilter-6.so"}