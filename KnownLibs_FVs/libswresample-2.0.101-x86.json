{"globalvars": ["swr_ffversion"], "importedglobals": [], "importedfunctions": ["__stack_chk_fail", "exp", "av_malloc", "av_get_bytes_per_sample", "av_reduce", "ceil", "abort", "av_calloc", "av_get_channel_layout_string", "av_sample_fmt_is_planar", "sin", "av_get_channel_layout_nb_channels", "av_free", "cos", "av_mallocz", "av_rescale_rnd", "av_get_channel_name", "av_get_default_channel_layout", "av_get_packed_sample_fmt", "av_log", "av_rescale", "av_freep", "av_get_sample_fmt_name", "memset", "rint", "av_opt_set_defaults", "av_get_cpu_flags", "av_opt_set_int", "av_frame_get_buffer", "av_get_planar_sample_fmt", "av_channel_layout_extract_channel"], "exportedfunctions": ["swr_init", "swresample_license", "swr_get_delay", "swr_drop_output", "swr_free", "swr_get_class", "swr_set_channel_mapping", "swresample_version", "swr_convert_frame", "swr_close", "swr_next_pts", "swr_is_initialized", "swresample_configuration", "swr_get_out_samples", "swr_config_frame", "swr_convert", "swr_set_matrix", "swr_set_compensation", "swr_inject_silence", "swr_alloc_set_opts", "swr_alloc"], "allstrings": ["libswresample/audioconvert.c", "Assertion %s failed at %s:%d\n", "libswresample/dither.c", "!s->preout.count", "SWResampler", "set input channel count", "in_channel_count", "set output channel count", "out_channel_count", "set used channel count", "used_channel_count", "set input sample rate", "in_sample_rate", "set output sample rate", "out_sample_rate", "set input sample format", "in_sample_fmt", "set output sample format", "out_sample_fmt", "set internal sample format", "internal_sample_fmt", "set input channel layout", "channel_layout", "in_channel_layout", "set output channel layout", "out_channel_layout", "clev", "set center mix level", "center_mix_level", "slev", "set surround mix level", "surround_mix_level", "set surround mix Level", "lfe_mix_level", "set LFE mix level", "rmvol", "set rematrix volume", "rematrix_volume", "rematrix_maxval", "set rematrix maxval", "flags", "set flags", "swr_flags", "force resampling", "dither_scale", "set dither scale", "dither_method", "set dither method", "rectangular", "select rectangular dither", "triangular", "select triangular dither", "triangular_hp", "lipshitz", "shibata", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "filter_size", "phase_shift", "linear_interp", "enable linear interpolation", "cutoff", "set cutoff frequency ratio", "resample_cutoff", "resampler", "set resampling Engine", "select SW Resampler", "soxr", "select SoX Resampler", "precision", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "set matrixed stereo encoding", "none", "select none", "dolby", "select Dolby", "dplii", "select Dolby Pro Logic II", "filter_type", "select swr filter type", "cubic", "select cubic", "blackman_nuttall", "kaiser", "select Kaiser windowed sinc", "kaiser_beta", "set swr Kaiser window beta", "output_sample_bits", "Treating %s as mono\n", "libswresample/rematrix.c", "Matrix coefficients:\n", "%s: ", "%s:%f ", "libswresample/resample.c", "a->planar", "Unsupported sample format\n", "Filter length too large\n", "libswresample/swresample.c", "out->planar == in->planar", "out->bps == in->bps", "out->ch_count == in->ch_count", "Failed to set option\n", "!s->in_ch_layout", "s->used_ch_count", "s->out.ch_count", "a->bps", "a->ch_count", "s->in.planar", "s->drop_output", "!s->resample", "discarding %d audio samples\n", "ctx->channels == out->ch_count", "s->dither.method < SWR_DITHER_NB", "Requested noise shaping dither not available at this sampling rate, using triangular hp dither\n", "select triangular dither with high pass", "select Lipshitz noise shaping dither", "select Shibata noise shaping dither", "select low Shibata noise shaping dither", "select high Shibata noise shaping dither", "select f-weighted noise shaping dither", "select modified-e-weighted noise shaping dither", "select improved-e-weighted noise shaping dither", "set swr resampling filter size", "set swr resampling phase shift", "set soxr resampling precision (in bits)", "enable soxr Chebyshev passband & higher-precision irrational ratio approximation", "set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied", "set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data.", "set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps.", "set maximum factor by which data is stretched/squeezed to make it match the timestamps.", "simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), >1(maximum stretch/squeeze in samples per second)", "Assume the first pts should be this value (in samples).", "select Blackman Nuttall windowed sinc", "set swr number of output sample bits", "Input channel layout '%s' is not supported\n", "Output channel layout '%s' is not supported\n", "!s->out_ch_layout || out->ch_count == av_get_channel_layout_nb_channels(s->out_ch_layout)", "!s-> in_ch_layout || in ->ch_count == av_get_channel_layout_nb_channels(s-> in_ch_layout)", "phase_count == 1 || phase_count % 2 == 0", "--prefix=/home/duncan/AndroidStudioProjects/DownloadManager/app/src/main/jni/ffmpeg/android/x86 --disable-static --disable-gpl --enable-shared --disable-symver --disable-encoders --disable-protocols --enable-protocol=file --enable-protocol=pipe --disable-bsfs --enable-bsf=aac_adtstoasc --disable-indevs --disable-outdevs --disable-filters --disable-decoders --enable-filter=concat --enable-filter=copy --disable-doc --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-asm --disable-yasm --disable-zlib --disable-xlib --disable-demuxers --disable-parsers --disable-debug --disable-muxers --enable-decoder='aac,aac_fixed,aac_latm,aic,alac,amv,webp,wmalossless,amrnb,amrwb,libvorbis,vorbis,mpegts' --enable-decoder='flibopus,flac,libfdk_aac,h261,h263,h264,mp2,mp3,wmav1,wmav2,mpeg2video,mpeg4,mpegvideo,opus,rawvideo' --enable-demuxer='aac,ac3,acm,aiff,amrnb,amrwb,avi,codec2,codec2raw,mkvtimestamp_v2' --enable-demuxer='matroska_audio,mov,mp2,mp3,mp4,ogg,opus,mpegts,flac,flic,flv' --enable-demuxer='h261,h263,h264hevc,hls' --enable-demuxer='matroska,mgsts,mpegvideo,ogg,mov,mp3' --enable-demuxer='mpegps,mpegts,mpegtsraw,rawvideo' --enable-demuxer='pcm_alaw,pcm_f32be,pcm_f32le,pcm_f64be,pcm_f64le,pcm_mulaw,pcm_s16be,pcm_s16le' --enable-demuxer='pcm_s24be,pcm_s24le,pcm_s32be,null,pcm_s32le,xmv,wav,yuv4mpegpipe,concat' --enable-parser='aac,aac_latm,flac,h261,h263' --enable-parser='h264,mpeg4video,mpegaudio,mpegvideo,opus,vorbis' --enable-muxer='yuv4mpegpipe,wv,webm,smoothstreaming,rawvideo,opus,oga,ogg,null,mpegts,mpeg2vob' --enable-muxer='mov,mp2,mp3,mp4,matroska,matroska_audio,m4v,h261,h263,h264,hls,flv,flac,f4v,ffm' --enable-muxer='adts,adx,aiff,amr,asf,ass,ast,avi,dts,dash,a64,ac3' --target-os=android --enable-cross-compile --cross-prefix=/home/duncan/my_toolchains/x86/bin/i686-linux-android- --extra-cflags='-Os -fpic -march=i686 -mtune=intel -mssse3 -mfpmath=sse -m32' --extra-ldflags= --sysroot=/home/duncan/my_toolchains/x86/sysroot --arch=x86 --cpu=i686", "libswresample license: LGPL version 2.1 or later", "Requested input sample format %d is invalid\n", "Requested output sample format %d is invalid\n", "Input channel layout 0x%llx is invalid or unsupported.\n", "Output channel layout 0x%llx is invalid or unsupported.\n", "Requested resampling engine is unavailable\n", "Input channel layout has a different number of channels than the number of used channels, ignoring layout\n", "Using %s internally between filters\n", "Requested sample format %s is not supported internally, S16/S32/FLT/DBL is supported\n", "Failed to initialize resampler\n", "Resampling only supported with internal s16/s32/flt/dbl\n", "Input channel count and layout are unset\n", "Output channel layout %s mismatches specified channel count %d\n", "Input channel layout %s mismatches specified channel count %d\n", "Rematrix is needed between %s and %s but there is not enough information to do it\n", "s->midbuf.ch_count == s->used_ch_count", "s->midbuf.ch_count == s->out.ch_count", "s->dither.noise.ch_count == preout->ch_count", "Context has not been initialized\n", "adding %d audio samples of silence\n", "s->out_sample_rate == s->in_sample_rate", "Failed to compensate for timestamp delta of %f\n", "compensating audio timestamp drift:%f compensation:%d in:%d\n", "FFmpeg version 3.0.11"], "stringidentifiers": ["SWResampler", "in_channel_count", "out_channel_count", "used_channel_count", "in_sample_rate", "out_sample_rate", "in_sample_fmt", "out_sample_fmt", "internal_sample_fmt", "channel_layout", "in_channel_layout", "out_channel_layout", "clev", "center_mix_level", "slev", "surround_mix_level", "lfe_mix_level", "rmvol", "rematrix_volume", "rematrix_maxval", "flags", "swr_flags", "dither_scale", "dither_method", "rectangular", "triangular", "triangular_hp", "lipshitz", "shibata", "low_shibata", "high_shibata", "f_weighted", "modified_e_weighted", "improved_e_weighted", "filter_size", "phase_shift", "linear_interp", "cutoff", "resample_cutoff", "resampler", "soxr", "precision", "cheby", "min_comp", "min_hard_comp", "comp_duration", "max_soft_comp", "async", "first_pts", "matrix_encoding", "none", "dolby", "dplii", "filter_type", "cubic", "blackman_nuttall", "kaiser", "kaiser_beta", "output_sample_bits"], "debugstrings": ["libswresample license: LGPL version 2.1 or later", "FFmpeg version 3.0.11", "GCC: (GNU) 4.9.x 20150123 (prerelease)"], "localsymbols": [""], "dependencies": ["libm.so", "libavutil.so", "libc.so"], "elfname": "libswresample.so"}