{"globalvars": ["av_filter_ffversion", "avfilter_all_channel_layouts"], "importedglobals": ["avpriv_cga_font", "avpriv_vga16_font"], "importedfunctions": ["av_frame_unref", "av_dict_set", "floor", "sin", "av_stereo3d_create_side_data", "memset", "av_pix_fmt_desc_next", "swr_init", "swr_get_class", "av_fft_end", "av_frame_get_side_data", "pthread_mutex_destroy", "av_audio_fifo_drain", "pp_get_context", "pp_get_mode_by_name_and_quality", "sws_init_context", "isnanf", "sws_scaleVec", "fgets", "av_reduce", "pthread_cond_wait", "pow", "sqrtf", "av_pix_fmt_desc_get_id", "av_pixelutils_get_sad_fn", "av_rdft_end", "av_gcd", "av_seek_frame", "cosf", "cbrt", "swr_set_matrix", "av_opt_set_sample_fmt", "av_image_get_linesize", "sws_getGaussianVec", "avpriv_set_systematic_pal2", "av_strlcpy", "avcodec_decode_audio4", "av_frame_get_plane_buffer", "fprintf", "strchr", "pthread_cond_broadcast", "av_rdft_calc", "av_frame_get_metadata", "av_get_random_seed", "av_audio_fifo_peek", "av_free", "av_adler32_update", "av_buffer_create", "av_samples_set_silence", "pthread_create", "sws_getColorspaceDetails", "av_fft_calc", "avformat_open_input", "sws_getCachedContext", "raise", "floorf", "av_sample_fmt_is_planar", "av_frame_get_pkt_pos", "pp_free_mode", "memcpy", "av_image_copy", "qsort", "av_strcasecmp", "av_frame_copy_props", "av_free_packet", "av_frame_copy", "av_frame_set_channels", "pp_free_context", "sws_isSupportedOutput", "av_display_rotation_get", "strstr", "sws_getContext", "pthread_mutex_init", "fwrite", "av_audio_fifo_write", "swr_alloc_set_opts", "av_opt_set_int", "log", "av_expr_parse", "swr_alloc", "av_frame_get_channel_layout", "av_frame_set_channel_layout", "av_register_all", "avcodec_decode_video2", "av_expr_parse_and_eval", "vsnprintf", "av_lfg_init", "av_find_best_stream", "asin", "snprintf", "pp_postprocess", "av_fifo_freep", "av_frame_set_colorspace", "av_malloc", "avcodec_open2", "strncmp", "strrchr", "av_read_frame", "av_dict_free", "av_get_bytes_per_sample", "swr_free", "av_frame_get_buffer", "av_buffer_ref", "av_d2q", "avpriv_do_elbg", "av_log", "ceilf", "av_image_copy_plane", "av_frame_get_color_range", "sws_scale", "av_file_map", "av_get_token", "av_get_channel_layout_string", "av_frame_get_best_effort_timestamp", "swr_next_pts", "av_pix_fmt_count_planes", "av_frame_make_writable", "acos", "sws_alloc_context", "pthread_cond_init", "av_frame_get_colorspace", "avcodec_dct_alloc", "strcmp", "av_get_sample_fmt_name", "av_get_planar_sample_fmt", "av_channel_layout_extract_channel", "cbrtf", "av_dynarray2_add", "strcspn", "sinh", "av_opt_set_bin", "exp2", "av_opt_get_sample_fmt", "expf", "av_gettime", "round", "av_fft_permute", "strlen", "av_isdigit", "av_get_pix_fmt_name", "lrint", "av_frame_set_pkt_pos", "strtol", "av_fifo_realloc2", "av_audio_fifo_alloc", "av_opt_eval_flags", "av_bprint_chars", "av_fifo_alloc", "av_int_list_length_for_size", "av_strlcatf", "av_isspace", "av_parse_time", "avpriv_init_elbg", "sqrt", "av_strerror", "pthread_join", "av_log_get_level", "av_parse_video_size", "avcodec_dct_init", "av_rescale_q_rnd", "av_opt_get_key_value", "av_realloc", "av_find_best_pix_fmt_of_2", "av_bprintf", "av_freep", "av_opt_set", "avcodec_encode_video2", "sws_isSupportedEndiannessConversion", "av_frame_get_channels", "sws_freeVec", "atan2f", "av_image_alloc", "av_find_input_format", "av_bprint_channel_layout", "fclose", "av_audio_fifo_space", "av_pix_fmt_desc_get", "av_get_packed_sample_fmt", "av_cpu_count", "avformat_match_stream_specifier", "av_fft_init", "av_get_sample_fmt", "av_frame_move_ref", "__isinf", "av_expr_eval", "av_read_image_line", "av_frame_ref", "avformat_close_input", "av_mallocz", "av_frame_free", "av_calloc", "av_rdft_init", "av_get_picture_type_char", "lrintf", "av_fopen_utf8", "av_write_image_line", "av_get_pix_fmt", "av_bprint_init", "swr_set_channel_mapping", "ldexp", "av_opt_find", "sinf", "av_reallocp_array", "av_frame_set_qp_table", "av_audio_fifo_realloc", "avformat_find_stream_info", "av_expr_free", "atan2", "av_samples_copy", "av_fifo_space", "sws_isSupportedInput", "av_div_q", "av_fifo_alloc_array", "avcodec_flush_buffers", "av_frame_alloc", "av_bprint_finalize", "av_image_fill_linesizes", "av_fifo_generic_write", "av_realloc_f", "av_fifo_generic_read", "av_opt_set_defaults", "pthread_cond_destroy", "exp", "av_bprint_clear", "sws_get_class", "memcmp", "av_parse_ratio", "av_rescale_rnd", "av_init_packet", "av_default_item_name", "av_samples_alloc_array_and_samples", "av_get_channel_name", "erf", "av_get_default_channel_layout", "av_frame_is_writable", "av_opt_free", "llrint", "av_audio_fifo_free", "rint", "av_opt_set_dict", "av_file_unmap", "pthread_mutex_lock", "log10", "av_image_fill_max_pixsteps", "sws_getCoefficients", "av_isgraph", "av_fifo_size", "av_memdup", "memmove", "av_get_padded_bits_per_pixel", "av_get_channel_layout_nb_channels", "swr_get_delay", "logf", "__errno", "av_dict_copy", "hypot", "avcodec_dct_get_class", "av_audio_fifo_size", "swr_convert", "av_buffer_alloc", "av_get_channel_layout", "avpriv_float_dsp_alloc", "avpriv_frame_get_metadatap", "av_parse_color", "av_strdup", "av_rescale_q", "avcodec_close", "av_fast_realloc", "sscanf", "fopen", "avcodec_find_decoder", "pthread_mutex_unlock", "av_buffer_unref", "av_mul_q", "av_frame_clone", "av_frame_get_qp_table", "av_opt_get_int", "av_frame_set_sample_rate", "cos", "fputc", "av_rescale", "av_gettime_relative", "av_get_channel_layout_channel_index", "sws_freeContext", "av_strtok", "pthread_cond_signal", "av_image_check_size", "av_audio_fifo_read", "av_realloc_array", "modf", "av_get_media_type_string", "av_asprintf", "ceil", "avcodec_find_encoder", "avcodec_alloc_context3", "sws_setColorspaceDetails", "av_get_bits_per_pixel", "av_opt_next", "strspn", "av_strtod", "av_dict_get", "av_dict_set_int", "av_fast_malloc", "av_frame_remove_side_data", "abort"], "exportedfunctions": ["avfilter_get_by_name", "avfilter_graph_create_filter", "av_buffersink_poll_frame", "av_buffersrc_add_frame_flags", "av_buffersrc_add_frame", "avfilter_unref_buffer", "avfilter_graph_alloc_filter", "avfilter_add_matrix", "avfilter_mul_matrix", "avfilter_pad_count", "avfilter_next", "av_buffersrc_add_ref", "avfilter_copy_buf_props", "avfilter_link_get_channels", "av_buffersink_params_alloc", "avfilter_graph_parse_ptr", "av_buffersink_get_samples", "avfilter_configuration", "avfilter_insert_filter", "av_buffersink_get_frame", "avfilter_pad_get_type", "avfilter_get_audio_buffer_ref_from_arrays_channels", "avfilter_graph_alloc", "avfilter_graph_set_auto_convert", "avfilter_graph_add_filter", "av_buffersink_get_frame_rate", "av_buffersink_set_frame_size", "avfilter_link_set_closed", "avfilter_uninit", "av_buffersink_get_frame_flags", "av_filter_next", "avfilter_unref_bufferp", "avfilter_graph_config", "avfilter_init_dict", "avfilter_graph_get_filter", "avfilter_graph_request_oldest", "avfilter_link_free", "avfilter_graph_free", "av_abuffersink_params_alloc", "avfilter_init_str", "avfilter_get_class", "av_buffersink_get_buffer_ref", "avfilter_graph_dump", "avfilter_graph_parse2", "avfilter_get_audio_buffer_ref_from_frame", "avfilter_link", "av_buffersink_read_samples", "avfilter_graph_send_command", "avfilter_get_video_buffer_ref_from_frame", "avfilter_get_buffer_ref_from_frame", "avfilter_copy_frame_props", "av_buffersrc_buffer", "avfilter_sub_matrix", "avfilter_graph_parse", "av_buffersrc_write_frame", "avfilter_license", "avfilter_open", "avfilter_init_filter", "avfilter_graph_queue_command", "avfilter_get_matrix", "avfilter_ref_get_channels", "av_buffersrc_get_nb_failed_requests", "avfilter_pad_get_name", "avfilter_config_links", "avfilter_ref_buffer", "avfilter_register_all", "avfilter_process_command", "avfilter_copy_buffer_ref_props", "avfilter_inout_free", "avfilter_get_audio_buffer_ref_from_arrays", "avfilter_register", "avfilter_version", "avfilter_transform", "avfilter_get_video_buffer_ref_from_arrays", "avfilter_inout_alloc", "avfilter_free", "av_buffersink_read", "avfilter_make_format64_list"], "allstrings": ["aeval", "Mismatch between the specified number of channel expressions '%d' and the number of expected output channels '%d' for the specified channel layout\n", "same", "Invalid number of channels '%d' provided\n", "sample_rate:%d chlayout:%s duration:%lld\n", "Filter audio signal according to a specified expression.", "default", "exprs", "set the '|'-separated list of channels expressions", "channel_layout", "set channel layout", "aevalsrc", "Generate an audio signal generated by an expression.", "nb_samples", "set the number of samples per requested frame", "sample_rate", "set the sample rate", "44100", "duration", "set audio duration", "nb_in_channels", "nb_out_channels", "Delay must be non negative number.\n", "At least one delay >0 must be specified.\n", "adelay", "Delay one or more audio channels.", "delays", "set list of delays for each channel", "Missing delays and/or decays.\n", "Number of delays %d differs from number of decays %d.\n", "At least one decay & delay must be set.\n", "delay[%d]: %f is out of allowed range: (0, 90000]\n", "decay[%d]: %f is out of allowed range: (0, 1]\n", "nb_echoes:%d\n", "Nothing to echo - missing delay samples.\n", "out_gain %f can cause saturation of output\n", "aecho", "Add echoing to the audio.", "in_gain", "set signal input gain", "out_gain", "set signal output gain", "set list of signal delays", "1000", "decays", "set list of signal decays", "Inputs must have the same sample rate %d for in0 vs %d for in1\n", "acrossfade", "Cross fade two input audio streams.", "crossfade0", "crossfade1", "set number of samples for cross fade duration", "set cross fade duration", "overlap", "overlap 1st stream end with 2nd stream start", "curve1", "set fade curve type for 1st stream", "linear slope", "qsin", "quarter of sine wave", "esin", "exponential sine wave", "hsin", "half of sine wave", "logarithmic", "ipar", "inverted parabola", "quadratic", "cubic", "square root", "cubic root", "parabola", "exponential", "iqsin", "inverted quarter of sine wave", "ihsin", "inverted half of sine wave", "dese", "double-exponential seat", "desi", "double-exponential sigmoid", "curve2", "set fade curve type for 2nd stream", "afade", "Fade in/out input audio.", "type", "set the fade direction", "fade-in", "fade-out", "start_sample", "set number of first sample to start fading", "set number of samples for fade duration", "start_time", "set time to start fading", "set fade duration", "curve", "set fade curve type", "This syntax is deprecated, use '|' to separate %s.\n", "sample format", "Error parsing sample format: %s.\n", "sample rate", "Error parsing sample rate: %s.\n", "channel layout", "Error parsing channel layout: %s.\n", "aformat", "Convert the input audio to one of the specified formats.", "sample_fmts", "A comma-separated list of sample formats.", "sample_rates", "A comma-separated list of sample rates.", "channel_layouts", "A comma-separated list of channel layouts.", "No channel layout for input %d\n", "Using \"%s\" for input %d\n", "Too many channels (max %d)\n", "Input channel layouts overlap: output layout will be determined by the number of distinct input channels\n", "in%d", "Inputs must have the same sample rate %d for in%d vs %d\n", " -> out:", "%sin%d:", "Assertion %s failed at %s:%d\n", "queue->available", "libavfilter/bufferqueue.h", "Buffer queue overflow, dropping.\n", "amerge", "Merge two or more audio streams into a single multi-channel stream.", "inputs", "specify the number of inputs", "unknown input link\n", "frame_list->end", "libavfilter/af_amix.c", "input%d", "inputs:%d fmt:%s srate:%d cl:%s\n", "s->nb_inputs > 1", "s->frame_list->nb_frames > 0", "info", "amix", "Audio mixing.", "Number of inputs.", "How to determine the end-of-stream.", "longest", "Duration of longest input.", "shortest", "Duration of shortest input.", "first", "Duration of first input.", "dropout_transition", "Transition time, in seconds, for volume renormalization when an input stream ends.", "anull", "Pass the source unchanged to the output.", "padding n_out:%d pad_len_left:%lld\n", "outsamplesref->sample_rate == outlink->sample_rate", "libavfilter/af_apad.c", "outsamplesref->nb_samples == n_out", "n_out:%d whole_len_left:%lld\n", "Both whole and pad length are set, this is not possible\n", "apad", "Pad audio with silence.", "packet_size", "set silence packet size", "pad_len", "set number of samples of silence to add", "whole_len", "set minimum target number of samples in the audio stream", "channels > 0", "libavfilter/af_aphaser.c", "delay is too small\n", "in_gain may cause clipping\n", "out_gain may cause clipping\n", "aphaser", "Add a phasing effect to the audio.", "set input gain", "set output gain", "delay", "set delay in milliseconds", "decay", "set decay", "speed", "set modulation speed", "set modulation type", "triangular", "sinusoidal", "Cannot allocate output samplerates.\n", "outlink->sample_rate == out_rate", "libavfilter/af_aresample.c", "outlink->channel_layout == out_layout || !outlink->channel_layout", "outlink->format == out_format", "ch:%d chl:%s fmt:%s r:%dHz -> ch:%d chl:%s fmt:%s r:%dHz\n", "aresample", "Resample audio data.", "nb_out_samples:%d pad:%d\n", "No space for %d samples, stretching audio fifo\n", "Stretching audio fifo failed, discarded %d samples\n", "asetnsamples", "Set the number of samples for each output audio frames.", "nb_out_samples", "set the number of per-frame output samples", "pad last frame with zeros", "Time base is inaccurate\n", "asetrate", "Change the sample rate without altering the data.", "NOPTS", "%lld", "%.6g", "n:%lld pts:%s pts_time:%s pos:%lld fmt:%s channels:%d chlayout:%s rate:%d nb_samples:%d checksum:%08X ", "plane_checksums: [ ", "%08X ", "  side data - ", "matrix encoding: ", "invalid data", "none", "Dolby Surround", "Dolby Pro Logic II", "Dolby Pro Logic IIx", "Dolby Pro Logic IIz", "Dolby EX", "Dolby Headphone", "unknown", "downmix: ", "preferred downmix type - ", "Lo/Ro", "Lt/Rt", " Mix levels: center %f (%f ltrt) - surround %f (%f ltrt) - lfe %f", "replaygain: ", "%s - ", "track gain", "track peak", "album gain", "album peak", "audio service type: ", "Main Audio Service", "Effects", "Visually Impaired", "Hearing Impaired", "Dialogue", "Commentary", "Emergency", "Voice Over", "Karaoke", "unknown side data type: %d, size %d bytes", "ashowinfo", "Show textual information for each audio frame.", "Channel: %d\n", "DC offset: %f\n", "Min level: %f\n", "Max level: %f\n", "Min difference: %f\n", "Max difference: %f\n", "Mean difference: %f\n", "Peak level dB: %f\n", "RMS level dB: %f\n", "RMS peak dB: %f\n", "RMS trough dB: %f\n", "Crest factor: %f\n", "Flat factor: %f\n", "Peak count: %lld\n", "Bit depth: %u\n", "Overall\n", "Peak count: %f\n", "Number of samples: %lld\n", "lavfi.astats.%d.%s", "DC_offset", "Min_level", "Max_level", "Min_difference", "Max_difference", "Mean_difference", "Peak_level", "RMS_level", "RMS_peak", "RMS_trough", "Crest_factor", "Flat_factor", "Peak_count", "Bit_depth", "lavfi.astats.%s", "Overall.DC_offset", "Overall.Min_level", "Overall.Max_level", "Overall.Min_difference", "Overall.Max_difference", "Overall.Mean_difference", "Overall.Peak_level", "Overall.RMS_level", "Overall.RMS_peak", "Overall.RMS_trough", "Overall.Flat_factor", "Overall.Peak_count", "Overall.Bit_depth", "Overall.Number_of_samples", "astats", "Show time domain statistics about audio frames.", "length", "set the window length", "metadata", "inject metadata in the filtergraph", "reset", "recalculate stats after this many frames", "Error in expression \"%s\"\n", "astreamsync", "Copy two streams of audio data in a configurable order.", "out1", "out2", "expr", "set stream selection expression", "t1-t2", "tempo", "Invalid tempo value '%s'\n", "Tempo value %f exceeds [0.5, 2.0] range\n", "start_here <= stop_here && frag->position[1] <= start_here && overlap <= frag->nsamples", "libavfilter/af_atempo.c", "read_size <= atempo->ring", "atempo->position[0] <= stop_here", "zeros != nsamples", "nsamples <= zeros + na + nb", "pot <= atempo->window", "start_here <= stop_here && frag->position[1] <= start_here", "atempo", "Adjust audio tempo.", "set tempo scale factor", "Invalid frequency %f and/or width %f <= 0\n", "clipping\n", "Invalid frequency %f. Frequency must be less than half the sample-rate %d.\n", "libavfilter/af_biquads.c", "biquad", "Apply a biquad IIR filter with the given coefficients.", "allpass", "Apply a two-pole all-pass filter.", "frequency", "set central frequency", "width_type", "set filter-width type", "Q-Factor", "octave", "slope", "width", "set filter-width", "highpass", "Apply a high-pass filter with 3dB point frequency.", "set frequency", "set width", "poles", "set number of poles", "lowpass", "Apply a low-pass filter with 3dB point frequency.", "bandreject", "Apply a two-pole Butterworth band-reject filter.", "set band-width", "bandpass", "Apply a two-pole Butterworth band-pass filter.", "use constant skirt gain", "treble", "Boost or cut upper frequencies.", "set shelf transition steep", "gain", "set gain", "bass", "Boost or cut lower frequencies.", "equalizer", "Apply two-pole peaking equalization (EQ) filter.", "input channel '%s' not available from input layout '%s'\n", "input channel #%d not available from input layout '%s'\n", "%d%n", "This syntax is deprecated, use '|' to separate the mappings.\n", "Too many channels mapped: '%d'.\n", "Error parsing channel layout: '%s'.\n", "Output channel layout '%s' does not match the list of channel mapped: '%s'.\n", "Output channel layout %s does not match the number of channels mapped %d.\n", "Output channel layout is not set and cannot be guessed from the maps.\n", "channelmap", "Remap audio channels.", "A comma-separated list of input channel numbers in output order.", "Output channel layout.", "Error parsing channel layout '%s'.\n", "channelsplit", "Split audio into per-channel streams.", "Input channel layout.", "stereo", "Both delays & decays & speeds & depths must be set.\n", "Number of delays & decays & speeds & depths given must be same.\n", "At least one delay & decay & speed & depth must be set.\n", "output gain can cause saturation or clipping of output\n", "chorus", "Add a chorus effect to the audio.", "set delays", "set decays", "speeds", "set speeds", "depths", "set depths", "Invalid number of channels: %d\n", "Number of attacks/decays bigger than number of channels.\n", "Number of attacks %d differs from number of decays %d.\n", "%lf/%lf", "Invalid and/or missing input/output value.\n", "Transfer function input values must be increasing.\n", "%d: x=%f y=%f\n", "libavfilter/af_compand.c", "compand", "Compress or expand audio dynamic range.", "attacks", "set time over which increase of volume is determined", "set time over which decrease of volume is determined", "points", "set points of transfer function", "-70/-70|-60/-20", "soft-knee", "set soft-knee", "volume", "set initial volume", "set delay for samples before sending them to volume adjuster", "dcshift", "Apply a DC shift to the audio.", "shift", "set DC shift", "limitergain", "set limiter gain", "filter size %d is invalid. Must be an odd value.\n", "cqueue_size(s->gain_history_original[channel]) == s->filter_size", "libavfilter/af_dynaudnorm.c", "cqueue_size(s->gain_history_minimum[channel]) == s->filter_size", "./libavfilter/bufferqueue.h", "frame len %d\n", "dynaudnorm", "Dynamic Audio Normalizer.", "set the frame length in msec", "set the filter size", "set the peak value", "set the max amplification", "set the target RMS", "enable channel coupling", "enable DC correction", "enable alternative boundary mode", "set the compress factor", "earwax", "Widen the stereo image.", "flanger", "Apply a flanging effect to the audio.", "base delay in milliseconds", "depth", "added swept delay in milliseconds", "regen", "percentage regeneration (delayed signal feedback)", "percentage of delayed signal mixed with original", "sweeps per second (Hz)", "shape", "swept wave shape", "phase", "swept wave percentage phase-shift for multi-channel", "interp", "delay-line interpolation", "itype", "linear", "Missing separator '-' in channel map '%s'\n", "Invalid output channel: %s.\n", "Channel map describes more than one output channel.\n", "Output channel '%s' is not present in requested channel layout.\n", "Multiple maps for output channel '%s'.\n", "Invalid input stream index: %d.\n", "Invalid input channel: %s.\n", "Channel map describes more than one input channel.\n", "Requested channel %s is not present in input stream #%d.\n", "mappings: ", "Could not find input channel for output channel '%s'.\n", "%d.%s => %s ", "No channels are used from input stream %d.\n", "i < ctx->nb_inputs", "libavfilter/af_join.c", "!s->input_frames[i]", "join", "Join multiple audio streams into multi-channel output.", "Number of input streams.", "Channel layout of the output stream.", "A comma-separated list of channels maps in the format 'input_stream.input_channel-output_channel.", "%7[A-Z]%n", "c%d%n", "pan filter needs a channel layout and a set of channels definitions as parameter\n", "Expected out channel name, got \"%.8s\"\n", "Channel \"%.8s\" does not exist in the chosen layout\n", "Invalid out channel name \"%.8s\"\n", "Syntax error after channel name in \"%.8s\"\n", "%lf%n *%n", "Expected in channel name, got \"%.8s\"\n", "Can not mix named and numbered channels\n", "Syntax error near \"%.8s\"\n", "af_pan support a maximum of %d channels. Feel free to ask for a higher limit.\n", "Degenerate coefficients while renormalizing\n", "%s%.3g i%d", "o%d = %s\n", "Pure channel mapping detected:", "Remix channels with coefficients (panning).", "args", "track_gain = %+.2f dB\n", "track_peak = %.6f\n", "i < (sizeof(freqinfos) / sizeof((freqinfos)[0]))", "libavfilter/af_replaygain.c", "replaygain", "ReplayGain scanner.", "No channel layout for input 1\n", "i < 2 && !s->input_frame[i]", "libavfilter/af_sidechaincompress.c", "sidechaincompress", "Sidechain compressor.", "main", "sidechain", "threshold", "set threshold", "ratio", "set ratio", "attack", "set attack", "release", "set release", "makeup", "set make up gain", "knee", "set knee", "link", "set link type", "average", "maximum", "detection", "set detection", "peak", "lavfi.silence_start", "silence_start: %s\n", "lavfi.silence_end", "lavfi.silence_duration", "silence_end: %s | silence_duration: %s\n", "silencedetect", "Detect silence.", "set noise tolerance", "noise", "set minimum duration in seconds", "silenceremove", "Remove silence.", "start_periods", "start_duration", "start_threshold", "stop_periods", "stop_duration", "stop_threshold", "leave_silence", "Error when evaluating the volume expression '%s'\n", "Invalid value NaN for volume\n", "Invalid value NaN for volume, setting to 0\n", "n:%f t:%f pts:%f precision:%s ", "volume_i:%d/255 ", "volume:%f volume_dB:%f\n", "Both ReplayGain gain values are unknown.\n", "Using gain %f dB from replaygain side data.\n", "tb:%f sample_rate:%f nb_channels:%f\n", "Change input volume.", "set volume adjustment expression", "precision", "select mathematical precision", "fixed", "select 8-bit fixed-point", "float", "select 32-bit floating-point", "double", "select 64-bit floating-point", "eval", "specify when to evaluate expressions", "once", "eval volume expression once", "frame", "eval volume expression per-frame", "Apply replaygain side data when present", "drop", "replaygain side data is dropped", "ignore", "replaygain side data is ignored", "track", "track gain is preferred", "album", "album gain is preferred", "replaygain_preamp", "Apply replaygain pre-amplification", "replaygain_noclip", "Apply replaygain clipping prevention", "nb_channels", "nb_consumed_samples", "startpts", "startt", "n_samples: %lld\n", "power <= 0x8000 * 0x8000", "libavfilter/af_volumedetect.c", "mean_volume: %.1f dB\n", "max_volume: %.1f dB\n", "histogram_%ddb: %lld\n", "volumedetect", "Detect audio volume.", "anullsink", "Do absolutely nothing with the input audio.", "sample_rate:%d channel_layout:'%s' nb_samples:%d\n", "anullsrc", "Null audio source, return empty audio frames.", "set channel_layout", "set sample rate", "sine", "Generate sine wave audio signal.", "set the sine frequency", "beep_factor", "set the beep fequency factor", "set the audio duration", "samples_per_frame", "set the number of samples per frame", "channels == av_get_channel_layout_nb_channels(link->channel_layout) || !av_get_channel_layout_nb_channels(link->channel_layout)", "libavfilter/audio.c", "channels", "channel_layout == 0 || channels == av_get_channel_layout_nb_channels(channel_layout)", "Layout indicates a different number of channels than actually present\n", "libavfilter/avcodec.c", "src->video", "src->audio", "lavfi.aphasemeter.phase", "aphasemeter", "Convert input audio to phase meter video output.", "rate", "set video rate", "size", "set video size", "800x400", "set red contrast", "set green contrast", "set blue contrast", "set median phase color", "avectorscope", "Convert input audio to vectorscope video output.", "mode", "set mode", "lissajous", "lissajous_xy", "polar", "400x400", "set alpha contrast", "set red fade", "set green fade", "set blue fade", "set alpha fade", "zoom", "set zoom factor", "Input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding output link %s parameters (%dx%d, SAR %d:%d)\n", "in%d:%c%d", "out:%c%d", "EOF on %s, %d streams left in segment.\n", "Segment finished at pts=%lld\n", "Frame after EOF on input %s\n", "concat", "Concatenate audio and video streams.", "specify the number of segments", "specify the number of video streams", "specify the number of audio streams", "unsafe", "enable unsafe mode", "Rate (%u) is not divisible by fps*count (%u*%u)\n", "Freetype is not available, ignoring fontfile option\n", "Calculating spectral kernel, please wait\n", "at freq %g: tlength is nan, setting it to %g\n", "at freq %g: tlength is %g, setting it to %g\n", "at freq %g: volume is nan, setting it to 0\n", "at freq %g: volume is %g, setting it to %g\n", "Elapsed time %.6f s (fft_len=%u, num_coeffs=%u)\n", "midi", "a_weighting", "b_weighting", "c_weighting", "timeclamp", "freq", "showcqt", "Convert input audio to a CQT (Constant Q Transform) spectrum video output.", "set volume", "tlength", "set transform length", "384/f*tc/(384/f+tc)", "set timeclamp", "coeffclamp", "set coeffclamp", "gamma", "set gamma", "gamma2", "set gamma of bargraph", "fullhd", "set full HD resolution", "set video fps", "count", "set number of transform per frame", "fontfile", "set font file", "fontcolor", "set font color", "st(0, (midi(f)-59.5)/12);st(1, if(between(ld(0),0,1), 0.5-0.5*cos(2*PI*ld(0)), 0));r(1-ld(1)) + b(ld(1))", "Unable to create FFT context. The window size might be too high.\n", "libavfilter/avf_showfreqs.c", "overlap %f too big\n", "showfreqs", "Convert input audio to a frequencies video output.", "1024x512", "set display mode", "line", "show lines", "show bars", "show dots", "ascale", "set amplitude scale", "sqrt", "cbrt", "fscale", "set frequency scale", "rlog", "reverse logarithmic", "win_size", "set window size", "w128", "w256", "w512", "w1024", "w2048", "w4096", "w8192", "w16384", "w32768", "w65536", "win_func", "set window function", "rect", "Rectangular", "bartlett", "Bartlett", "hanning", "Hanning", "hamming", "Hamming", "blackman", "Blackman", "welch", "Welch", "flattop", "Flat-top", "bharris", "Blackman-Harris", "bnuttall", "Blackman-Nuttall", "bhann", "Bartlett-Hann", "Sine", "nuttall", "Nuttall", "set window overlap", "averaging", "set time averaging", "colors", "set channels colors", "red|green|blue|yellow|orange|lime|pink|magenta|brown", "Unable to create RDFT context. The window size might be too high.\n", "libavfilter/avf_showspectrum.c", "s:%dx%d RDFT window size:%d\n", "insamples->nb_samples <= win_size", "insamples->nb_samples == win_size", "showspectrum", "Convert input audio to a spectrum video output.", "640x512", "slide", "set sliding mode", "replace", "replace old columns with new", "scroll", "scroll from right to left", "fullframe", "return full frames", "set channel display mode", "combined", "combined mode", "separate", "separate mode", "color", "set channel coloring", "channel", "separate color for each channel", "intensity", "intensity based coloring", "scale", "set display scale", "saturation", "color saturation multiplier", "hann", "Hann window", "Hamming window", "Blackman window", "showvolume", "Convert input audio volume to video output.", "VOLUME", "CHANNEL", "set border width", "set channel width", "set channel height", "set fade", "set volume color expression", "if(gte(VOLUME,-2), if(gte(VOLUME,-1),0xff0000ff, 0xff00ffff),0xff00ff00)", "display channel names", "showwavespic", "Could not allocate showwaves buffer\n", "s:%dx%d r:%f n:%d\n", "Too few samples\n", "Create frame averaging %lld samples per column\n", "col < outlink->w", "libavfilter/avf_showwaves.c", "Convert input audio to a video output single picture.", "600x240", "split_channels", "draw channels separately", "showwaves", "Convert input audio to a video output.", "select display mode", "point", "draw a point for each sample", "draw a line for each sample", "draw a line between samples", "cline", "draw a centered line for each sample", "set how many samples to show in the same point", "Timeline ('enable' option) not supported with filter '%s'\n", "Error when evaluating the expression '%s' for enable\n", "No option name near '%s'\n", "Unable to parse '%s': %s\n", "Setting '%s' to value '%s'\n", "Option '%s' not found\n", "--prefix=/Users/E/Codes/_ffmpeg4android/ffmpeg-2.8.2/android/arm --enable-shared --disable-static --disable-doc --disable-ffmpeg --disable-ffplay --disable-ffprobe --disable-ffserver --disable-avdevice --disable-doc --disable-symver --cross-prefix=/Users/E/Library/Android/android-ndk-r10d/toolchains/arm-linux-androideabi-4.8/prebuilt/darwin-x86_64/bin/arm-linux-androideabi- --target-os=linux --arch=arm --disable-debug --disable-encoders --enable-gpl --enable-libx264 --enable-encoder=libx264 --enable-encoder=aac --enable-cross-compile --sysroot=/Users/E/Library/Android/android-ndk-r10d/platforms/android-9/arch-arm/ --extra-cflags='-Os -fpic -marm -I/Users/E/Codes/x264android/x264/android/arm/include/' --extra-ldflags=' -s -L/Users/E/Codes/x264android/x264/android/arm/lib/ -lx264'", "libavfilter license: GPL version 2 or later", "Media type mismatch between the '%s' filter output pad %d (%s) and the '%s' filter input pad %d (%s)\n", "auto-inserting filter '%s' between the filter '%s' and the filter '%s'\n", "Not all input and output are properly linked (%d).\n", "circular filter chain detected\n", "Source filters and filters with more than one input must set config_props() callbacks on all outputs\n", "Failed to configure output pad on %s\n", "Video source filters must set their output link's width and height\n", "Failed to configure input pad on %s\n", "ping", "enable", "pong from:%s %s\n", "Copying data in avfilter.\n", "Processing command time:%f command:%s arg:%s\n", "!link->frame_requested", "libavfilter/avfilter.c", "!link->frame_requested || link->flags & FF_LINK_FLAG_REQUEST_LOOP", "(filter->flags & ((1 << 16) | (1 << 17))) != ((1 << 16) | (1 << 17))", "!input->filter_frame || (!input->start_frame && !input->end_frame)", "Error applying generic filter options.\n", "Error applying options to the filter.\n", "This filter does not take any options, but options were provided: %s.\n", "format", "noformat", "frei0r", "frei0r_src", "This syntax is deprecated. Use '|' to separate the list items.\n", "compat: called with args=[%s]\n", "No such option: %s.\n", "Samples dropped due to memory allocation failure.\n", "AVFilter", "thread_type", "Allowed thread types", "slice", "set enable expression", "index >= 0", "libavfilter/avfiltergraph.c", "Query format failed for '%s': %s\n", "All layouts set on non-empty list\n", "All counts without all layouts\n", "Cannot select sample rate for the link between filters %s and %s.\n", "Cannot select channel layout for the link between filters %s and %s.\n", "Unknown channel layouts not supported, try specifying a channel layout using 'aformat=channel_layouts=something'.\n", "Error initializing threading.\n", "'scale' filter not present, cannot convert pixel formats.\n", "auto-inserted scaler %d", "'aresample' filter not present, cannot convert audio formats.\n", "auto-inserted resampler %d", "inlink-> in_formats->refcount > 0", "inlink->out_formats->refcount > 0", "outlink-> in_formats->refcount > 0", "outlink->out_formats->refcount > 0", "inlink-> in_samplerates->refcount > 0", "inlink->out_samplerates->refcount > 0", "outlink-> in_samplerates->refcount > 0", "outlink->out_samplerates->refcount > 0", "inlink-> in_channel_layouts->refcount > 0", "inlink->out_channel_layouts->refcount > 0", "outlink-> in_channel_layouts->refcount > 0", "outlink->out_channel_layouts->refcount > 0", "Impossible to convert between the formats supported by the filter '%s' and the filter '%s'\n", "query_formats: %d queried, %d merged, %d already done, %d delayed\n", "The following filters could not choose their formats: %s\nConsider inserting the (a)format filter near their input or output.\n", "%s%s", "Input pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any source\n", "Output pad \"%s\" with type %s of the filter instance \"%s\" of %s not connected to any destination\n", "fifo", "afifo", "auto-inserted fifo %d", "query_formats not finished\n", "best_idx >= 0", "picking %s out of %d ref:%s alpha:%d\n", "picking %s out of %d ref:%s\n", "n == sink_links_count", "EOF on sink link %s:%s.\n", "AVFilterGraph", "threads", "Maximum number of threads", "scale_sws_opts", "default scale filter options", "aresample_swr_opts", "default aresample filter options", "Failed to allocate qp_table\n", "ref->buf->refcount > 0", "libavfilter/buffer.c", "Invalid size for pixel_fmts: %d, should be multiple of %d\n", "Cannot buffer more frames. Consume some available frames before adding new ones.\n", "%d buffers queued in %s, something may be wrong.\n", "Invalid size for sample_fmts: %d, should be multiple of %d\n", "Invalid size for sample_rates: %d, should be multiple of %d\n", "Invalid size for channel_layouts: %d, should be multiple of %d\n", "Invalid size for channel_counts: %d, should be multiple of %d\n", "Conflicting all_channel_counts and list in options\n", "Failed to allocate fifo\n", "pix_fmts", "channel_counts", "all_channel_counts", "buffersink", "abuffersink", "ffbuffersink", "ffabuffersink", "!strcmp(ctx->filter->name, \"buffersink\") || !strcmp(ctx->filter->name, \"abuffersink\") || !strcmp(ctx->filter->name, \"ffbuffersink\") || !strcmp(ctx->filter->name, \"ffabuffersink\")", "libavfilter/buffersink.c", "!strcmp(ctx->filter->name, \"buffersink\") || !strcmp(ctx->filter->name, \"ffbuffersink\")", "Buffer audio frames, and make them available to the end of the filter graph.", "Buffer video frames, and make them available to the end of the filter graph.", "set the supported sample formats", "set the supported sample rates", "set the supported channel layouts", "set the supported channel counts", "accept all channel counts", "set the supported pixel formats", "Changing frame properties on the fly is not supported by all filters.\n", "Changing frame properties on the fly is not supported.\n", "Invalid parameters provided.\n", "w:%d h:%d pixfmt:%s tb:%d/%d fr:%d/%d sar:%d/%d sws_param:%s\n", "Sample format was not set or was invalid\n", "Invalid channel layout %s.\n", "Mismatching channel count %d and layout '%s' (%d channels)\n", "Neither number of channels nor channel layout specified\n", "tb:%d/%d samplefmt:%s samplerate:%d chlayout:%s\n", "abuffer", "Buffer audio frames, and make them accessible to the filterchain.", "buffer", "Buffer video frames, and make them accessible to the filterchain.", "time_base", "sample_fmt", "video_size", "height", "pix_fmt", "time_base_num", "deprecated, do not use", "time_base_den", "sar_num", "sar_den", "sample aspect ratio", "pixel_aspect", "frame_rate", "sws_param", "pix_desc", "libavfilter/drawutils.c", "Color conversion not implemented for %s\n", "mainpic", "libavfilter/dualinput.c", "max is same or lower than min\n", "adrawgraph", "Draw a graph using input audio metadata.", "drawgraph", "Draw a graph using input video metadata.", "set 1st metadata key", "set 1st foreground color expression", "0xffff0000", "set 2nd metadata key", "set 2nd foreground color expression", "0xff00ff00", "set 3rd metadata key", "set 3rd foreground color expression", "0xffff00ff", "set 4th metadata key", "set 4th foreground color expression", "0xffffff00", "set background color", "white", "set minimal value", "set maximal value", "set graph mode", "draw bars", "draw dots", "draw lines", "set slide mode", "draw new frames", "rscroll", "scroll from left to right", "set graph size", "900x256", "Summary:\n\n  Integrated loudness:\n    I:         %5.1f LUFS\n    Threshold: %5.1f LUFS\n\n  Loudness range:\n    LRA:       %5.1f LU\n    Threshold: %5.1f LUFS\n    LRA low:   %5.1f LUFS\n    LRA high:  %5.1f LUFS", "\n\n  Sample peak:\n    Peak:      %5.1f dBFS", "\n\n  True peak:\n    Peak:      %5.1f dBFS", "in_channel_layout", "in_sample_rate", "in_sample_fmt", "out_channel_layout", "out_sample_rate", "out_sample_fmt", "out0", "out%d", "EBU +%d scale\n", "Video size %dx%d is too small, minimum size is 640x480\n", "%c%d", "M:%6.1f S:%6.1f     I:%6.1f LUFS     LRA:%6.1f LU     ", "%.3f", "lavfi.r128.M", "lavfi.r128.S", "lavfi.r128.I", "lavfi.r128.LRA", "lavfi.r128.LRA.low", "lavfi.r128.LRA.high", "lavfi.r128.sample_peaks_ch%d", "lavfi.r128.true_peaks_ch%d", "t: %-10s M:%6.1f S:%6.1f     I:%6.1f LUFS     LRA:%6.1f LU", "  SPK:", " dBFS", " %5.1f", "  FTPK:", "  TPK:", "ebur128", "EBU R128 scanner.", "video", "set video output", "640x480", "meter", "set scale meter (+9 to +18)", "framelog", "force frame logging level", "level", "information logging level", "verbose", "verbose logging level", "set peak mode", "disable any peak mode", "sample", "enable peak-sample mode", "true", "enable true-peak mode", "Parameters for input link %s (size %dx%d, SAR %d:%d) do not match the corresponding output link parameters (%dx%d, SAR %d:%d)\n", "libavfilter/f_interleave.c", "queue:%d -> frame time:%f\n", "NOPTS value for input frame cannot be accepted, frame discarded\n", "frame pts:%f -> queue idx:%d available:%d\n", "ainterleave", "Temporally interleave audio inputs.", "nb_inputs", "set number of inputs", "interleave", "Temporally interleave video inputs.", "random seed: 0x%08x\n", " (no-op)", "%s -> %s%s\n", "perms", "Set permissions for the output video frame.", "aperms", "Set permissions for the output audio frame.", "select permissions mode", "do nothing", "set all output frames read-only", "set all output frames writable", "toggle", "switch permissions", "random", "set permissions randomly", "seed", "set the seed for the random mode", "areverse", "Reverse an audio clip.", "reverse", "Reverse a clip.", "Error while parsing expression '%s'\n", "scene", "output%d", "Scene detection is ignored in aselect filter\n", "lavfi.scene_score", "n:%f pts:%f t:%f key:%d", " interlace_type:%c pict_type:%c scene:%f", " samples_n:%d consumed_samples_n:%f", " -> select:%f select_out:%d\n", "select", "Select video frames to pass in output.", "set an expression to use for selecting frames", "outputs", "set the number of outputs", "aselect", "Select audio frames to pass in output.", "start_pts", "prev_pts", "prev_selected_pts", "start_t", "prev_t", "prev_selected_t", "pict_type", "PICT_TYPE_I", "PICT_TYPE_P", "PICT_TYPE_B", "PICT_TYPE_S", "PICT_TYPE_SI", "PICT_TYPE_SP", "PICT_TYPE_BI", "interlace_type", "PROGRESSIVE", "TOPFIRST", "BOTTOMFIRST", "consumed_samples_n", "samples_n", "selected_n", "prev_selected_n", "enter", "leave", "One and only one of the filename or commands options must be specified\n", " \f\t\n\r", " \f\t\n\r,;", "Invalid start time specification '%s' in interval #%d\n", "Invalid end time specification '%s' in interval #%d\n", "Invalid end time '%s' in interval #%d: cannot be lesser than start time '%s'\n", "Unknown flag '%s' in interval #%d, command #%d\n", "Invalid flags char '%c' in interval #%d, command #%d\n", "Missing flag terminator or extraneous data found at the end of flags in interval #%d, command #%d\n", "No target specified in interval #%d, command #%d\n", "No command specified in interval #%d, command #%d\n", "Could not (re)allocate command array\n", "Missing separator or extraneous data found at the end of interval #%d, in command #%d\n", "Command was parsed as: flags:[%s] target:%s command:%s arg:%s\n", "No interval specified for interval #%d\n", "Missing terminator or extraneous data found at the end of interval #%d\n", "Could not (re)allocate intervals array\n", "No commands were specified\n", "Parsed commands:\n", "start_time:%f end_time:%f index:%d\n", "    [%s] target:%s command:%s arg:%s index:%d\n", "[%s] interval #%d start_ts:%f end_ts:%f ts:%f\n", "Processing command #%d target:%s command:%s arg:%s\n", "Command reply for command #%d: ret:%s res:%s\n", "asendcmd", "Send commands to filters.", "sendcmd", "commands", "set commands", "filename", "set commands file", "frame->nb_samples > offset", "libavfilter/fifo.c", "request_samples changed before the buffer was returned.\n", "s->root.next", "fifo->root.next", "Buffer input frames and send them when they are requested.", "Buffer input images and send them when they are requested.", "Duplicate formats in avfilter_merge_formats() detected\n", "Invalid pixel format '%s'\n", "Invalid sample format '%s'\n", "Invalid time base '%s'\n", "Invalid sample rate '%s'\n", "Invalid channel layout '%s'\n", "framesync", "level <= fs->sync_level", "libavfilter/framesync.c", "Impossible to set time base\n", "Selected %d/%d time base\n", "Sync level %u\n", "!fs->frame_ready", "fs->on_event", "libavfilter/generate_wave_table.c", "[%dx%d %d:%d %s]", "[%dHz %s:%s]", "%s:%s", "%*s%-*s", "%*s(%s)%*s", "=,;[\n", "[],;\n", "Parsed_%s_%d", "No such filter: '%s'\n", "Error creating filter '%s'\n", "flags", "Error initializing filter '%s'", " with args '%s'", "Cannot create the link %s:%d -> %s:%d\n", "Too many inputs specified for the \"%s\" filter.\n", "Bad (empty?) label found in the following: \"%s\".\n", "Mismatched '[' found in the following: \"%s\".\n", "No output pad can be associated to link label '%s'.\n", "sws_flags=", "sws_flags not terminated with ';'.\n", "Unable to parse graph description substring: \"%s\"\n", "Not enough inputs specified for the \"%s\" filter.\n", "Invalid filterchain containing an unlabelled output pad: \"%s\"\n", "[in]", "[out]", "image2", "Failed to open input file '%s'\n", "Find stream info failed\n", "Failed to find codec\n", "Failed to open codec\n", "Failed to alloc frame\n", "Failed to read frame from file\n", "Failed to decode image from file\n", "Error loading image file '%s'\n", "Impossible to create scale context for the conversion fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n", "TB:%f FRAME_RATE:%f SAMPLE_RATE:%f\n", "N:%lld PTS:%s T:%f POS:%s", " INTERLACED:%lld", " NB_SAMPLES:%lld NB_CONSUMED_SAMPLES:%lld", " -> PTS:%s T:%f\n", "asetpts", "Set PTS for the output audio frame.", "setpts", "Set PTS for the output video frame.", "Expression determining the frame timestamp", "FRAME_RATE", "INTERLACED", "NB_CONSUMED_SAMPLES", "NB_SAMPLES", "PREV_INPTS", "PREV_INT", "PREV_OUTPTS", "PREV_OUTT", "SAMPLE_RATE", "STARTPTS", "STARTT", "RTCTIME", "RTCSTART", "Invalid expression '%s' for timebase.\n", "Invalid non-positive values for the timebase num:%d or den:%d.\n", "tb:%d/%d -> tb:%d/%d\n", "tb:%d/%d pts:%lld -> tb:%d/%d pts:%lld\n", "asettb", "Set timebase for the audio output link.", "set expression determining the output timebase", "intb", "settb", "Set timebase for the video output link.", "AVTB", "asplit", "Pass on the audio input to N audio outputs.", "split", "Pass on the input to N video outputs.", "set number of outputs", "Stream finished, looping.\n", "Unable to loop: %s\n", "Decode error: %s\n", "Format changed %s -> %s, discarding frame\n", "matched only already used streams", "did not match any stream", "No filename provided!\n", "amovie", "d%c%d", "Loop with several streams is currently unsupported\n", "Failed to avformat_open_input '%s'\n", "Failed to find stream info\n", "%s: seek value overflow with start_time:%lld seek_point:%lld\n", "%s: could not seek to position %lld\n", "d%1[av]%d%c", "No %s stream with index '%d' found\n", "Invalid stream specifier \"%s\"\n", "Ambiguous stream specifier \"%s\", using #%d\n", "Stream specifier \"%s\" %s\n", "Stream specifier \"%s\" matched a %s stream,currently unsupported by libavfilter\n", "Failed to find any codec\n", "Channel layout is not set in stream %d, and could not be guessed from the number of channels (%d)\n", "Channel layout is not set in output stream %d, guessed channel layout is '%s'\n", "seek_point:%lli format_name:%s file_name:%s stream_index:%d\n", "Read audio from a movie source.", "movie", "Read from a movie source.", "format_name", "set format name", "stream_index", "set stream index", "seek_point", "set seekpoint (seconds)", "streams", "set streams", "loop", "set loop count", "start_sample < end_sample || (start_sample == end_sample && !frame->nb_samples)", "libavfilter/trim.c", "atrim", "Pick one continuous section from the input, drop the rest.", "starti", "Timestamp of the first frame that should be passed", "endi", "Timestamp of the first frame that should be dropped again", "Timestamp of the first frame that should be  passed", "end_pts", "durationi", "Maximum duration of the output", "Number of the first audio sample that should be passed to the output", "end_sample", "Number of the first audio sample that should be dropped again", "start", "Timestamp in seconds of the first frame that should be passed", "Timestamp in seconds of the first frame that should be dropped again", "Maximum duration of the output in seconds", "trim", "start_frame", "Number of the first frame that should be passed to the output", "end_frame", "Number of the first frame that should be dropped again", "Input frame sizes do not match (%dx%d vs %dx%d).\n", "alphamerge", "Copy the luma value of the second input into the alpha channel of the first input.", "alpha", "num:den syntax is deprecated, please use num/den or named options instead\n", "Unable to parse ratio numerator \"%s\"\n", "Error when evaluating the expression '%s'\n", "Invalid string '%s' for aspect ratio\n", "w:%d h:%d dar:%d/%d sar:%d/%d -> dar:%d/%d sar:%d/%d\n", "w:%d h:%d sar:%d/%d dar:%d/%d -> sar:%d/%d dar:%d/%d\n", "setsar", "Set the pixel sample aspect ratio.", "set sample (pixel) aspect ratio", "set max value for nominator or denominator in the ratio", "setdar", "Set the frame display aspect ratio.", "set display aspect ratio", "dar_den", "hsub", "vsub", "size %d is invalid. Must be an odd value.\n", "atadenoise", "Apply an Adaptive Temporal Averaging Denoiser.", "set threshold A for 1st plane", "set threshold B for 1st plane", "set threshold A for 2nd plane", "set threshold B for 2nd plane", "set threshold A for 3rd plane", "set threshold B for 3rd plane", "set how many frames to use", "n:%lld pts:%s pts_time:%s", "lavfi.bbox.x1", "lavfi.bbox.x2", "lavfi.bbox.y1", "lavfi.bbox.y2", "lavfi.bbox.w", "lavfi.bbox.h", " x1:%d x2:%d y1:%d y2:%d w:%d h:%d crop=%d:%d:%d:%d drawbox=%d:%d:%d:%d", "bbox", "Compute bounding box for each frame.", "min_val", "set minimum luminance value for bounding box", "black_min_duration:%s pixel_black_th:%f pixel_black_th_i:%d picture_black_ratio_th:%f\n", "black_start:%s black_end:%s black_duration:%s\n", "frame:%lld picture_black_ratio:%f pts:%s t:%s type:%c\n", "lavfi.black_start", "lavfi.black_end", "blackdetect", "Detect video intervals that are (almost) black.", "set minimum detected black duration in seconds", "black_min_duration", "picture_black_ratio_th", "set the picture black ratio threshold", "pic_th", "pixel_black_th", "set the pixel black threshold", "pix_th", "frame:%u pblack:%u pts:%lld t:%f type:%c last_keyframe:%d\n", "lavfi.blackframe.pblack", "blackframe", "Detect frames that are (almost) black.", "amount", "Percentage of the pixels that have to be below the threshold for the frame to be considered black.", "threshold below which a pixel value is considered black", "thresh", "tblend", "inputs must be of same pixel format\n", "First input link %s parameters (size %dx%d, SAR %d:%d) do not match the corresponding second input link %s parameters (%dx%d, SAR %d:%d)\n", "Blend successive frames.", "c0_mode", "set component #0 blend mode", "c1_mode", "set component #1 blend mode", "c2_mode", "set component #2 blend mode", "c3_mode", "set component #3 blend mode", "all_mode", "set blend mode for all components", "addition", "burn", "darken", "difference", "difference128", "divide", "dodge", "exclusion", "glow", "hardlight", "hardmix", "lighten", "linearlight", "multiply", "negation", "normal", "overlay", "phoenix", "pinlight", "reflect", "screen", "softlight", "subtract", "vividlight", "c0_expr", "set color component #0 expression", "c1_expr", "set color component #1 expression", "c2_expr", "set color component #2 expression", "c3_expr", "set color component #3 expression", "all_expr", "set expression for all color components", "c0_opacity", "set color component #0 opacity", "c1_opacity", "set color component #1 opacity", "c2_opacity", "set color component #2 opacity", "c3_opacity", "set color component #3 opacity", "all_opacity", "set opacity for all color components", "blend", "Blend two video frames into each other.", "bottom", "force termination when the shortest input terminates", "repeatlast", "repeat last bottom frame", "BOTTOM", "Error when evaluating luma radius expression '%s'\n", "Error when evaluating chroma radius expression '%s'\n", "Error when evaluating alpha radius expression '%s'\n", "luma_radius:%d luma_power:%d chroma_radius:%d chroma_power:%d alpha_radius:%d alpha_power:%d w:%d chroma_w:%d h:%d chroma_h:%d\n", "Invalid luma radius value %d, must be >= 0 and <= %d\n", "Invalid chroma radius value %d, must be >= 0 and <= %d\n", "Invalid alpha radius value %d, must be >= 0 and <= %d\n", "Luma radius expression is not set.\n", "boxblur", "Blur the input.", "luma_radius", "Radius of the luma blurring box", "luma_power", "How many times should the boxblur be applied to luma", "chroma_radius", "Radius of the chroma blurring box", "chroma_power", "How many times should the boxblur be applied to chroma", "alpha_radius", "Radius of the alpha blurring box", "alpha_power", "How many times should the boxblur be applied to alpha", "codecview", "Visualize information about some codecs", "set motion vectors to visualize", "forward predicted MVs of P-frames", "forward predicted MVs of B-frames", "backward predicted MVs of B-frames", "colorbalance", "Adjust the color balance.", "set red shadows", "set green shadows", "set blue shadows", "set red midtones", "set green midtones", "set blue midtones", "set red highlights", "set green highlights", "set blue highlights", "colorchannelmixer", "Adjust colors by mixing color channels.", "set the red gain for the red channel", "set the green gain for the red channel", "set the blue gain for the red channel", "set the alpha gain for the red channel", "set the red gain for the green channel", "set the green gain for the green channel", "set the blue gain for the green channel", "set the alpha gain for the green channel", "set the red gain for the blue channel", "set the green gain for the blue channel", "set the blue gain for the blue channel", "set the alpha gain for the blue channel", "set the red gain for the alpha channel", "set the green gain for the alpha channel", "set the blue gain for the alpha channel", "set the alpha gain for the alpha channel", "colorkey", "colorkey filter", "set the colorkey key color", "black", "similarity", "set the colorkey similarity value", "set the colorkey key blend value", "colorlevels", "Adjust the color levels.", "rimin", "set input red black point", "gimin", "set input green black point", "bimin", "set input blue black point", "aimin", "set input alpha black point", "rimax", "set input red white point", "gimax", "set input green white point", "bimax", "set input blue white point", "aimax", "set input alpha white point", "romin", "set output red black point", "gomin", "set output green black point", "bomin", "set output blue black point", "aomin", "set output alpha black point", "romax", "set output red white point", "gomax", "set output green white point", "bomax", "set output blue white point", "aomax", "set output alpha white point", "error calculating conversion coefficients\n", "%s -> %s\n", "Input frame does not specify a supported colorspace, and none has been specified as source either\n", "Unspecified destination color space\n", "Source and destination color space must not be identical\n", "colormatrix", "Convert color matrix.", "bt709", "bt601", "smpte240m", "set source color matrix", "color_mode", "set destination color matrix", "set BT.709 colorspace", "set FCC colorspace   ", "set BT.601 colorspace", "bt470", "set BT.470 colorspace", "bt470bg", "smpte170m", "set SMTPE-170M colorspace", "set SMPTE-240M colorspace", "copy", "Copy the input video unchanged to the output.", "cover filename not set\n", "cover image is not a YUV420 image\n", "lavfi.rect.x", "lavfi.rect.y", "lavfi.rect.w", "lavfi.rect.h", "cover_rect", "Find and cover a user specified object", "cover", "cover bitmap filename", "set removal mode", "cover area with bitmap", "blur", "blur area", "n:%d t:%f pos:%f x:%d y:%d x+w:%d y+h:%d\n", "w:%d h:%d sar:%d/%d -> w:%d h:%d sar:%d/%d\n", "Invalid too big or non positive size for width '%d' or height '%d'\n", "Too big value or invalid expression for out_w/ow or out_h/oh. Maybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n", "out_w", "out_h", "crop", "Crop the input video.", "set the width crop area expression", "set the height crop area expression", "set the x crop area expression", "(in_w-out_w)/2", "set the y crop area expression", "(in_h-out_h)/2", "keep_aspect", "keep aspect ratio", "in_w", "in_h", "limit:%f round:%d reset_count:%d\n", "total:%d\n", "lavfi.cropdetect.x1", "lavfi.cropdetect.x2", "lavfi.cropdetect.y1", "lavfi.cropdetect.y2", "lavfi.cropdetect.w", "lavfi.cropdetect.h", "lavfi.cropdetect.x", "lavfi.cropdetect.y", "x1:%d x2:%d y1:%d y2:%d w:%d h:%d x:%d y:%d pts:%lld t:%f crop=%d:%d:%d:%d\n", "cropdetect", "Auto-detect crop size.", "limit", "Threshold below which the pixel is considered black", "round", "Value by which the width/height should be divisible", "Recalculate the crop area after this many frames", "reset_count", "max_outliers", "Threshold count of outliers", "%f/%f ", "curves %d (intid=%d) [%d points]: [%s]\n", "Invalid key point coordinates (%f;%f), x and y must be in the [0;1] range.\n", "Key point coordinates (%f;%f) and (%f;%f) are too close from each other or not strictly increasing on the x-axis\n", "last", "libavfilter/vf_curves.c", "point->next", "x_start >= 0 && x_start <= 255 && x_end >= 0 && x_end <= 255", "f(%f)=%f -> y[%d]=%d\n", "#%d points:", " (%f;%f)", "#%d values:", " %02X", "curves", "Adjust components curves.", "0/1 0.129/1 0.466/0.498 0.725/0 1/0", "0/1 0.109/1 0.301/0.498 0.517/0 1/0", "0/1 0.098/1 0.235/0.498 0.423/0 1/0", "0.25/0.156 0.501/0.501 0.686/0.745", "0.25/0.188 0.38/0.501 0.745/0.815 1/0.815", "0.231/0.094 0.709/0.874", "0.5/0.4", "0.149/0.066 0.831/0.905 0.905/0.98", "0.4/0.5", "0.305/0.286 0.694/0.713", "0.286/0.219 0.639/0.643", "0/1 1/0", "0.301/0.196 0.592/0.6 0.686/0.737", "0/0.11 0.42/0.51 1/0.95", "0.50/0.48", "0/0.22 0.49/0.44 1/0.8", "preset", "select a color curves preset", "preset_name", "color_negative", "cross_process", "darker", "increase_contrast", "lighter", "linear_contrast", "medium_contrast", "negative", "strong_contrast", "vintage", "master", "set master points coordinates", "set red points coordinates", "green", "set green points coordinates", "blue", "set blue points coordinates", "set points coordinates for all components", "psfile", "set Photoshop curves file name", "Overlap value can not except %d with a block size of %dx%d\n", "libavfilter/vf_dctdnoiz.c", "The last %d horizontal pixels won't be denoised\n", "The last %d vertical pixels won't be denoised\n", "threads: [max=%d hmax=%d user=%d] => %d\n", "dctdnoiz", "Denoise frames using 2D DCT.", "sigma", "set noise sigma constant", "set number of block overlapping pixels", "set coefficient factor expression", "set the block size, expressed in bits", "deband", "Debands video.", "1thr", "set 1st plane threshold", "2thr", "set 2nd plane threshold", "3thr", "set 3rd plane threshold", "4thr", "set 4th plane threshold", "range", "set range", "direction", "set direction", "enable blur", "clean_src", "blockx and blocky settings must be power of two\n", "The input needs a constant frame rate; current rate of %d/%d is invalid\n", "FPS: %d/%d -> %d/%d\n", " dup", " lowest", " [DROP]", "1/%d frame drop:\n", "  #%d: totdiff=%08llx maxbdiff=%08llx%s%s%s%s\n", "decimate", "Decimate frames (post field matching filter).", "cycle", "set the number of frame from which one will be dropped", "dupthresh", "set duplicate threshold", "scthresh", "set scene change threshold", "blockx", "set the size of the x-axis blocks used during metric calculations", "blocky", "set the size of the y-axis blocks used during metric calculations", "ppsrc", "mark main input as a pre-processed input and activate clean source input stream", "chroma", "set whether or not chroma is considered in the metric calculations", "cycle:%d\n", "%lld\t", "next=%lld, new=%lld\n", "dejudder", "Remove judder produced by pullup.", "set the length of the cycle to use for dejuddering", "Option %s was not set.\n", "x:%d y:%d, w:%d h:%d band:%d show:%d\n", "delogo", "Remove logo from input video.", "set logo x position", "set logo y position", "set logo width", "set logo height", "band", "set delogo area band size", "show", "show delogo area", "rx must be a multiple of 16\n", "Ori x, Avg x, Fin x, Ori y, Avg y, Fin y, Ori angle, Avg angle, Fin angle, Ori zoom, Avg zoom, Fin zoom\n", "OpenCL support was not enabled in this build, cannot be selected\n", "cx: %d, cy: %d, cw: %d, ch: %d, rx: %d, ry: %d, edge: %d blocksize: %d contrast: %d search: %d\n", "%f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f\n", "deshake", "Stabilize shaky video.", "set x for the rectangular search area", "set y for the rectangular search area", "set width for the rectangular search area", "set height for the rectangular search area", "edge", "set edge mode", "blank", "fill zeroes at blank locations", "original", "original image at blank locations", "clamp", "extruded edge value at blank locations", "mirror", "mirrored edge at blank locations", "blocksize", "set motion search blocksize", "contrast", "set contrast threshold for blocks", "search", "set search strategy", "smode", "exhaustive", "exhaustive search", "less", "less exhaustive search", "set motion search detailed log file name", "opencl", "use OpenCL filtering capabilities", "No pattern provided.\n", "Provided pattern includes non-numeric characters.\n", "Detelecine pattern %s removes up to %d frames per frame, pts advance factor: %d/%d\n", "TB: %d/%d -> %d/%d\n", "detelecine", "Apply an inverse telecine pattern.", "first_field", "select first field", "field", "select top field first", "select bottom field first", "pattern", "pattern that describe for how many fields a frame is to be displayed", "position of first frame with respect to the pattern if stream is cut", "invert", "Size values less than 0 are not acceptable.\n", "x:%d y:%d w:%d h:%d color:0x%02X%02X%02X%02X\n", "Error when evaluating the expression '%s'.\n", "drawgrid", "Draw a colored grid on the input video.", "set horizontal offset", "set vertical offset", "set width of grid cell", "set height of grid cell", "set color of the grid", "thickness", "set grid line thickness", "drawbox", "Draw a colored box on the input video.", "set horizontal position of the left box edge", "set vertical position of the top box edge", "set width of the box", "set height of the box", "set color of the box", "set the box thickness", "libavfilter/vf_edgedetect.c", "edgedetect", "Detect and draw edge.", "high", "set high threshold", "set low threshold", "wires", "white/gray wires on black", "colormix", "mix colors", "pal8 output allows max 256 codebook length.\n", "elbg", "Apply posterize effect, using the ELBG algorithm.", "codebook_length", "set codebook length", "nb_steps", "set max number of steps used to compute the mapping", "set the random seed", "pal8", "set the pal8 output", "Error when parsing the expression '%s' for %s\n", "brightness", "gamma_r", "gamma_g", "gamma_b", "gamma_weight", "Adjust brightness, contrast, gamma, and saturation.", "set the contrast adjustment, negative values give a negative image", "set the brightness adjustment", "set the saturation adjustment", "set the initial gamma value", "gamma value for red", "gamma value for green", "gamma value for blue", "set the gamma weight which reduces the effect of gamma on bright areas", "init", "eval expressions once during initialization", "eval expressions per-frame", "Requested planes not available.\n", "alphaextract", "Extract an alpha channel as a grayscale image component.", "extractplanes", "Extract planes as grayscale frames.", "planes", "set planes", "set luma plane", "set u plane", "set v plane", "set red plane", "set green plane", "set blue plane", "set alpha plane", "type:%s start_frame:%d nb_frames:%d alpha:%d\n", "type:%s start_time:%f duration:%f alpha:%d\n", "libavfilter/vf_fade.c", "fade", "Fade in/out input video.", "'in' or 'out' for fade-in/fade-out", "Number of the first frame to which to apply the effect.", "nb_frames", "Number of frames to which the effect should be applied.", "fade alpha if it is available on the input", "Number of seconds of the beginning of the effect.", "Duration of the effect in seconds.", "set color", "weight_Y", "weight_U", "weight_V", "fftfilt", "Apply arbitrary expressions to samples in frequency domain", "dc_Y", "adjust gain in Y plane", "dc_U", "adjust gain in U plane", "dc_V", "adjust gain in V plane", "set luminance expression in Y plane", "set chrominance expression in U plane", "set chrominance expression in V plane", "w:%d h:%d type:%s -> w:%d h:%d\n", "Extract a field from the input video.", "set field type (top or bottom)", "field_type", "select top field", "select bottom field", "Combed pixel should not be larger than blockx x blocky\n", "libavfilter/vf_fieldmatch.c", "fm->prv && fm->src && fm->nxt", "fm->prv2 && fm->src2 && fm->nxt2", "order == 0 || order == 1 || field == 0 || field == 1", "COMBS: %3d %3d %3d %3d %3d\n", "Frame #%lld at %s is still interlaced\n", "SC:%d | COMBS: %3d %3d %3d %3d %3d (combpel=%d) match=%d combed=%s\n", "fieldmatch", "Field matching for inverse telecine.", "order", "specify the assumed field order", "auto", "auto detect parity", "assume bottom field first", "assume top field first", "set the matching mode or strategy to use", "2-way match (p/c)", "pc_n", "2-way match + 3rd match on combed (p/c + u)", "pc_u", "2-way match + 3rd match (same order) on combed (p/c + u)", "pc_n_ub", "2-way match + 3rd match on combed + 4th/5th matches if still combed (p/c + u + u/b)", "3-way match (p/c/n)", "pcn_ub", "3-way match + 4th/5th matches on combed (p/c/n + u/b)", "set the field to match from", "automatic (same value as 'order')", "bottom field", "top field", "mchroma", "set whether or not chroma is included during the match comparisons", "define an exclusion band which excludes the lines between y0 and y1 from the field matching decision", "set scene change detection threshold", "combmatch", "set combmatching mode", "combmatching", "disable combmatching", "enable combmatching only on scene change", "full", "enable combmatching all the time", "combdbg", "enable comb debug", "dbglvl", "no forced calculation", "calculate p/c/n", "pcnub", "calculate p/c/n/u/b", "cthresh", "set the area combing threshold used for combed frame detection", "set whether or not chroma is considered in the combed frame decision", "set the x-axis size of the window used during combed frame detection", "set the y-axis size of the window used during combed frame detection", "combpel", "set the number of combed pixels inside any of the blocky by blockx size blocks on the frame for the frame to be detected as combed", "frame with same field order", "progressive frame", "down", "Skipping %s.\n", "picture will move %s one line\n", "fieldorder", "Set the field order.", "output field order", "bottom field first", "top field first", "object filename not set\n", "object image is not a grayscale image\n", "score != 0", "libavfilter/vf_find_rect.c", "Found at %d %d score %f\n", "find_rect", "Find a user specified object", "object", "object bitmap filename", "mipmaps", "set mipmaps", "xmin", "ymin", "xmax", "ymax", "Empty output format string.\n", "Force libavfilter not to use any of the specified pixel formats for the input to the next filter.", "Convert the input video to one of the specified pixel formats.", "A '|'-separated list of pixel formats", "%d frames in, %d frames out; %d frames dropped, %d frames duplicated.\n", "fps=%d/%d\n", "Set first pts to (in:%lld out:%lld)\n", "Discarding initial frame(s) with no timestamp.\n", "Dropping %d frame(s).\n", "Duplicating frame.\n", "Force constant framerate.", "A string describing desired output framerate", "Assume the first PTS should be this value.", "set rounding method for timestamps", "zero", "round towards 0", "round away from 0", "round towards -infty", "round towards +infty", "near", "round to nearest", "Left and right sizes differ (%dx%d vs %dx%d).\n", "Left and right time bases differ (%d/%d vs %d/%d).\n", "Left and right framerates differ (%d/%d vs %d/%d).\n", "Unknown packing mode.", "framepack", "Generate a frame packed stereoscopic video.", "packed", "left", "right", "Frame pack output format", "Views are packed next to each other", "Views are packed on top of each other", "frameseq", "Views are one after the other", "lines", "Views are interleaved by lines", "columns", "Views are interleaved by columns", "config_output()\n", "config_output() input time base:%u/%u (%f)\n", "time base:%u/%u -> %u/%u exact:%d\n", "Timebase conversion is not exact\n", "config_output() output time base:%u/%u (%f) w:%d h:%d\n", "fps -> fps:%u/%u scene score:%f interpolate start:%d end:%d\n", "set_srce_frame_output_pts()\n", "set_work_frame_pts()\n", "s->srce[s->next]", "libavfilter/vf_framerate.c", "s->srce[s->crnt]", "set_work_frame_pts() srce crnt pts:%lld\n", "set_work_frame_pts() srce next pts:%lld\n", "set_work_frame_pts() srce prev pts:%lld\n", "set_work_frame_pts() initial average srce pts:%lld\n", "set_work_frame_pts() average srce pts:%lld\n", "set_work_frame_pts() average srce pts:%lld at dest time base:%u/%u\n", "Buggy path reached, use settb filter before this filter!\n", "set_frame_pts() average output pts from input timebase\n", "set_work_frame_pts() average dest pts delta:%lld\n", "set_work_frame_pts() calculated pts:%lld at dest time base:%u/%u\n", "process_work_frame()\n", "process_work_frame() pending_input_frames %d\n", "process_work_frame() srce prev pts:%lld\n", "process_work_frame() srce crnt pts:%lld\n", "process_work_frame() srce next pts:%lld\n", "process_work_frame() no current frame cached: move on to next frame, do not output a frame\n", "next_source()\n", "next_source() unlink %d\n", "next_source() copy %d to %d\n", "next_source() make %d null\n", "process_work_frame() work crnt pts:%lld\n", "process_work_frame() work next pts:%lld\n", "process_work_frame() srce prev pts:%lld at dest time base:%u/%u\n", "process_work_frame() srce crnt pts:%lld at dest time base:%u/%u\n", "process_work_frame() srce next pts:%lld at dest time base:%u/%u\n", "process_work_frame() work crnt pts >= srce next pts: SKIP FRAME, move on to next frame, do not output a frame\n", "process_work_frame() interpolate:%d/256\n", "process_work_frame() source is:NEXT\n", "process_work_frame() source is:PREV\n", "process_work_frame() interpolate source is:NEXT\n", "process_work_frame() interpolate source is:PREV\n", "get_scene_score()\n", "get_scene_score() process\n", "get_scene_score() result is:%f\n", "process_work_frame() interpolate scene score:%f\n", "process_work_frame() INTERPOLATE to create work frame\n", "process_work_frame() CUT - DON'T INTERPOLATE\n", "process_work_frame() COPY to the work frame\n", "process_work_frame() REPEAT FRAME\n", "process_work_frame() CONSUME FRAME, move to next frame\n", "process_work_frame() output a frame\n", "request_frame()\n", "request_frame() call source's request_frame()\n", "request_frame() source's request_frame() returned error:%d\n", "request_frame() source's request_frame() returned:%d\n", "request_frame() REPEAT or FLUSH\n", "request_frame() nothing else to do, return:EOF\n", "request_frame() FLUSH\n", "request_frame() copy:%d to:%d\n", "Interlaced frame found - the output will not be correct.\n", "framerate", "Upsamples or downsamples progressive source between specified frame rates.", "required output frames per second rate", "interp_start", "point to start linear interpolation", "interp_end", "point to end linear interpolation", "scene change level", "set flags", "scene_change_detect", "enable scene change detection", "step:%d frame_rate:%d/%d(%f) -> frame_rate:%d/%d(%f)\n", "framestep", "Select one frame every N frames.", "step", "set frame step", "fspp", "Apply Fast Simple Post-processing filter.", "quality", "set quality", "force a constant quantizer parameter", "strength", "set filter strength", "use_bframe_qp", "use B-frames' QP", "A luminance or RGB expression is mandatory\n", "Either YCbCr or RGB but not both must be specified\n", "g(X,Y)", "b(X,Y)", "r(X,Y)", "desc", "libavfilter/vf_geq.c", "Apply generic equation to each pixel.", "lum_expr", "set luminance expression", "cb_expr", "set chroma blue expression", "cr_expr", "set chroma red expression", "alpha_expr", "set alpha expression", "red_expr", "set red expression", "green_expr", "set green expression", "blue_expr", "set blue expression", "threshold:%.2f radius:%d\n", "gradfun", "Debands video quickly using gradients.", "The maximum amount by which the filter will change any one pixel.", "radius", "The neighborhood to fit the gradient to.", "hflip", "Horizontally flip the input video.", "strength:%0.3f intensity:%0.3f antibanding:%d\n", "histeq", "Apply global color histogram equalization.", "set the strength", "set the intensity", "antibanding", "set the antibanding level", "apply no antibanding", "weak", "apply weak antibanding", "strong", "apply strong antibanding", "This mode is deprecated, please use waveform filter instead.\n", "This mode is deprecated, use vectorscope filter instead.", "libavfilter/vf_histogram.c", "histogram", "Compute and draw a histogram.", "set histogram mode", "levels", "standard histogram", "waveform", "per row/column luminance graph", "chroma values in vectorscope", "color2", "level_height", "set level height", "scale_height", "set scale height", "set waveform step value", "waveform_mode", "set waveform mode", "column", "waveform_mirror", "set waveform mirroring", "display_mode", "parade", "levels_mode", "set levels mode", "components", "set color components to display", "ls:%f cs:%f lt:%f ct:%f\n", "hqdn3d", "Apply a High Quality 3D Denoiser.", "luma_spatial", "spatial luma strength", "chroma_spatial", "spatial chroma strength", "luma_tmp", "temporal luma strength", "chroma_tmp", "temporal chroma strength", "fmt:%s size:%dx%d -> size:%dx%d\n", "Scale the input by 2, 3 or 4 using the hq*x magnification algorithm.", "set scale factor", "Error when evaluating the expression '%s' for %s\n", "H and h options are incompatible and cannot be specified at the same time\n", "H_expr:%s h_deg_expr:%s s_expr:%s b_expr:%s\n", "Saturation value not in range [%d,%d]: clipping value to %0.1f\n", "Brightness value not in range [%d,%d]: clipping value to %0.1f\n", "H:%0.1f*PI h:%0.1f s:%0.1f b:%0.f t:%0.1f n:%d\n", "Adjust the hue and saturation of the input video.", "set the hue angle degrees expression", "set the saturation expression", "set the hue angle radians expression", "set the brightness expression", "auto-inserted", "Repeated Fields: Neither:%6lld Top:%6lld Bottom:%6lld\n", "Single frame detection: TFF:%6lld BFF:%6lld Progressive:%6lld Undetermined:%6lld\n", "Multi frame detection: TFF:%6lld BFF:%6lld Progressive:%6lld Undetermined:%6lld\n", "neither", "progressive", "undetermined", "Repeated Field:%12s, Single frame:%12s, Multi frame:%12s\n", "lavfi.idet.repeated.current_frame", "%lld.%0*lld", "lavfi.idet.repeated.neither", "lavfi.idet.repeated.top", "lavfi.idet.repeated.bottom", "lavfi.idet.single.current_frame", "lavfi.idet.single.tff", "lavfi.idet.single.bff", "lavfi.idet.single.progressive", "lavfi.idet.single.undetermined", "lavfi.idet.multiple.current_frame", "lavfi.idet.multiple.tff", "lavfi.idet.multiple.bff", "lavfi.idet.multiple.progressive", "lavfi.idet.multiple.undetermined", "Final flag accuracy %d\n", "idet", "Interlace detect Filter.", "intl_thres", "set interlacing threshold", "prog_thres", "set progressive threshold", "rep_thres", "set repeat threshold", "half_life", "half life of cumulative statistics", "analyze_interlaced_flag", "set number of frames to use to determine if the interlace flag is accurate", "Deinterleave or interleave fields.", "luma_mode", "select luma mode", "deinterleave", "chroma_mode", "select chroma mode", "alpha_mode", "select alpha mode", "luma_swap", "swap luma fields", "chroma_swap", "swap chroma fields", "alpha_swap", "swap alpha fields", "with", "without", "input video height is too small\n", "Lowpass filter is disabled, the resulting video will be aliased rather than interlaced.\n", "%s interlacing %s lowpass filter\n", "cols >= 0 || lines >= 0", "libavfilter/vf_interlace.c", "video is already interlaced, adjusting framerate only\n", "interlace", "Convert progressive video into interlaced.", "scan", "scanning mode", "enable vertical low-pass filter", "kerndeint", "Apply kernel deinterlacing to the input.", "set the threshold", "set the map", "set the order", "sharp", "enable sharpening", "twoway", "enable twoway", "lenscorrection", "Rectify the image by correcting for lens distortion.", "set relative center x", "set relative center y", "set quadratic distortion factor", "set double quadratic distortion factor", "Error when parsing the expression '%s' for the component %d and color %d.\n", "Error when evaluating the expression '%s' for the value %d for the component %d.\n", "val[%d][%d] = %d\n", "negval", "negate_alpha:%d\n", "negate", "Negate input video.", "negate_alpha", "lutrgb", "Compute and apply a lookup table to the RGB input video.", "lutyuv", "Compute and apply a lookup table to the YUV input video.", "Compute and apply a lookup table to the RGB/YUV input video.", "clip", "gammaval", "gammaval709", "set component #0 expression", "set component #1 expression", "set component #2 expression", "set component #3 expression", "set Y expression", "set U expression", "set V expression", "set R expression", "set G expression", "set B expression", "set A expression", "maxval", "minval", "clipval", "libavfilter/vf_lut3d.c", "Padding on the right (%dpx) of the Hald CLUT will be ignored\n", "Padding at the bottom (%dpx) of the Hald CLUT will be ignored\n", "The Hald CLUT width does not match the level\n", "Too large Hald CLUT (maximum level is %d, or %dx%d CLUT)\n", "%s: %s\n", "Unable to guess the format from the extension\n", "Unexpected EOF\n", "3DLUTSIZE ", "Too large or invalid 3D LUT size\n", "%f %f %f", "%d %d %d", "cube", "LUT_3D_SIZE ", "DOMAIN_", "MIN ", "MAX ", "values", "in and out must be defined\n", "invalid in (%d) or out (%d)\n", "Unrecognized '.%s' file type\n", "3D LUT is empty\n", "min: %f %f %f | max: %f %f %f\n", "haldclut", "Adjust colors using a Hald CLUT.", "clut", "continue applying the last clut after eos", "select interpolation mode", "interp_mode", "nearest", "use values from the nearest defined points", "trilinear", "interpolate values using the 8 points defining a cube", "tetrahedral", "interpolate values using a tetrahedron", "lut3d", "Adjust colors using a 3D LUT.", "file", "set 3D LUT file name", "Snow encoder is not enabled in libavcodec\n", "memc_only", "no_bitstream", "mcdeint", "Apply motion compensating deinterlacing.", "fast", "medium", "slow", "extra_slow", "parity", "set the assumed picture field parity", "set qp", "Only planar formats with more than one component are supported.\n", "Mapping with out of range input and/or plane number.\n", "s->nb_inputs && s->nb_inputs <= 4", "libavfilter/vf_mergeplanes.c", "input #%d link %s SAR %d:%d does not match output link %s SAR %d:%d\n", "input %d does not have %d plane\n", "output plane %d depth %d does not match input %d plane %d depth %d\n", "output plane %d width %d does not match input %d plane %d width %d\n", "output plane %d height %d does not match input %d plane %d height %d\n", "mergeplanes", "Merge planes.", "mapping", "set input to output plane mapping", "set output pixel format", "max_drop_count:%d hi:%d lo:%d frac:%f\n", "keep", "%d>=hi ", "lo:%d>=%d ", "lo:%d<%d ", "%s pts:%s pts_time:%s drop_count:%d\n", "mpdecimate", "Remove near-duplicate frames.", "set the maximum number of consecutive dropped frames (positive), or the minimum interval between dropped frames (negative)", "set high dropping threshold", "set low dropping threshold", "frac", "set fraction dropping threshold", "erosion", "dilation", "deflate", "inflate", "Apply inflate effect", "threshold0", "set threshold for 1st plane", "threshold1", "set threshold for 2nd plane", "threshold2", "set threshold for 3rd plane", "threshold3", "set threshold for 4th plane", "Apply deflate effect", "Apply dilation effect", "coordinates", "set coordinates", "Apply erosion effect", "Add noise.", "all_seed", "set component #0 noise seed", "all_strength", "set component #0 strength", "alls", "all_flags", "set component #0 flags", "allf", "averaged noise", "(semi)regular pattern", "temporal noise", "uniform noise", "c0_seed", "c0_strength", "c0_flags", "c1_seed", "set component #1 noise seed", "c1_strength", "set component #1 strength", "c1_flags", "set component #1 flags", "c2_seed", "set component #2 noise seed", "c2_strength", "set component #2 strength", "c2_flags", "set component #2 flags", "c3_seed", "set component #3 noise seed", "c3_strength", "set component #3 strength", "c3_flags", "set component #3 flags", "null", "The rgb option is deprecated and is overriding the format option, use format instead\n", "libavfilter/vf_overlay.c", "Incoming frame (time:%s) from link #%d\n", "x:%f xi:%d y:%f yi:%d\n", "main w:%d h:%d fmt:%s overlay w:%d h:%d fmt:%s eof_action:%s\n", "n:%f t:%f pos:%f x:%f xi:%d y:%f yi:%d\n", "Overlay a video source on top of the input.", "set the x expression", "set the y expression", "eof_action", "Action to take when encountering EOF from secondary input ", "repeat", "Repeat the previous frame.", "endall", "End both streams.", "pass", "Pass through the main input.", "force packed RGB in input and output (deprecated)", "set output format", "yuv420", "yuv422", "yuv444", "repeat overlay of the last overlay frame", "main_w", "main_h", "overlay_w", "overlay_h", "owdenoise", "Denoise using wavelets.", "set depth", "luma_strength", "set luma strength", "chroma_strength", "set chroma strength", "Negative values are not acceptable.\n", "w:%d h:%d -> w:%d h:%d x:%d y:%d color:0x%02X%02X%02X%02X\n", "Input area %d:%d:%d:%d not within the padded area 0:0:%d:%d or zero-sized\n", "Direct padding impossible allocating new frame\n", "Pad the input video.", "set the pad area width expression", "set the pad area height expression", "set the x offset expression for the input image position", "set the y offset expression for the input image position", "set the color of the padded area border", "(+1)", "box->len >= 1", "libavfilter/vf_palettegen.c", "new_box->len >= 1", "lavfi.color_quant_ratio", "%d%s colors generated out of %d colors; ratio=%f\n", "Dupped color: %08X\n", "s->nb_boxes < 256", "Unable to allocate references for %d different colors\n", "palettegen", "Find the optimal palette for a given stream.", "max_colors", "set the maximum number of colors to use in the palette", "reserve_transparent", "reserve a palette entry for transparency", "stats_mode", "set statistics mode", "compute full frame histograms", "diff", "compute histograms only for the part that differs from previous frame", "Palette input must contain exactly %d pixels. Specified input has %dx%d=%d pixels\n", "%*cnode%d [label=\"%c%02X%c%02X%c%02X%c\" fillcolor=\"#%02x%02x%02x\" fontcolor=\"#%06X\"]\n", "%*cnode%d -> node%d\n", "Cannot open file '%s' for writing: %s\n", "digraph {\n", "    node [style=filled fontsize=10 shape=box]\n", "/!\\ %02X%02X%02X: %d ! %d (%06X ! %06X) / dist: %d ! %d\n", "Accuracy check passed\n", "MEP:%.3f TotalMEP:%.3f\n", "paletteuse", "Use a palette to downsample an input video stream.", "palette", "dither", "select dithering mode", "dithering_mode", "bayer", "ordered 8x8 bayer dithering (deterministic)", "heckbert", "dithering as defined by Paul Heckbert in 1982 (simple error diffusion)", "floyd_steinberg", "Floyd and Steingberg dithering (error diffusion)", "sierra2", "Frankie Sierra dithering v2 (error diffusion)", "sierra2_4a", "Frankie Sierra dithering v2 \"Lite\" (error diffusion)", "bayer_scale", "set scale for bayer dithering", "diff_mode", "set frame difference mode", "rectangle", "process smallest different rectangle", "debug_kdtree", "save Graphviz graph of the kdtree in specified file", "color_search", "set reverse colormap color search method", "nns_iterative", "iterative search", "nns_recursive", "recursive search", "bruteforce", "brute-force into the palette", "mean_err", "compute and print mean error", "debug_accuracy", "test color search accuracy", "libavfilter/vf_perspective.c", "perspective", "Correct the perspective of video.", "set top left x coordinate", "set top left y coordinate", "set top right x coordinate", "set top right y coordinate", "set bottom left x coordinate", "set bottom left y coordinate", "set bottom right x coordinate", "set bottom right y coordinate", "interpolation", "set interpolation", "sense", "specify the sense of the coordinates", "source", "specify locations in source to send to corners in destination", "destination", "specify locations in destination to send corners of source", "libavfilter/vf_phase.c", "mode=%c tdiff=%f bdiff=%f pdiff=%f\n", "Phase shift fields.", "set phase mode", "top first", "bottom first", "top first analyze", "bottom first analyze", "analyze", "full analyze", "auto analyze", "pixdesctest", "Test pixel format definitions.", "libavfilter/vf_pp.c", "Filter video using libpostproc.", "subfilters", "set postprocess subfilters", "Apply Postprocessing 7 filter.", "set thresholding mode", "hard", "hard thresholding", "soft", "soft thresholding", "medium thresholding", " %c:%0.2f", "PSNR%s average:%0.2f min:%0.2f max:%0.2f\n", "Could not open stats file %s: %s\n", "Width and height of input videos must be same.\n", "Inputs must be of same pixel format.\n", "%0.2f", "lavfi.psnr.mse_avg", "lavfi.psnr.psnr_avg", "%s%c", "lavfi.psnr.mse.", "lavfi.psnr.psnr.", "n:%lld mse_avg:%0.2f ", "psnr_avg:%0.2f ", "mse_%c:%0.2f ", "psnr_%c:%0.2f ", "psnr", "Calculate the PSNR between two video streams.", "reference", "stats_file", "Set file where to store per-frame difference information", "input format does not have such plane\n", "w: %d h: %d\n", "offset: %d length: %d\n", "Could not get buffer!\n", "pullup", "Pullup from field sequence to frames.", "set left junk size", "set right junk size", "set top junk size", "set bottom junk size", "set strict breaks", "set metric plane", "luma", "chroma blue", "chroma red", "known", "Change video quantization parameters.", "set qp expression", "Return random frames.", "frames", "set number of frames in cache", "set the seed", "removegrain", "Remove grain.", "set mode for 1st plane", "set mode for 2nd plane", "set mode for 3rd plane", "set mode for 4th plane", "Mask image size %dx%d does not match with the input video size %dx%d\n", "The bitmap file name is mandatory\n", "full x1:%d x2:%d y1:%d y2:%d max_mask_size:%d\n", "half x1:%d x2:%d y1:%d y2:%d max_mask_size:%d\n", "removelogo", "Remove a TV logo based on a mask image.", "set bitmap filename", "Unexpected field flags: state=%d top_field_first=%d repeat_first_field=%d\n", "repeatfields", "Hard repeat fields based on MPEG repeat field flag.", "angle", "Error when parsing the expression '%s' for angle command\n", "Error occurred parsing angle expression '%s'\n", "Error parsing or evaluating expression for option %s: invalid expression '%s' or non-positive or indefinite value %f\n", "n:%f time:%f angle:%f/PI\n", "rotate", "Rotate the input image.", "rotw", "roth", "set angle (in radians)", "set output width expression", "set output height expression", "fillcolor", "set background fill color", "bilinear", "use bilinear interpolation", "luma_radius:%f luma_pre_filter_radius::%f luma_strength:%f chroma_radius:%f chroma_pre_filter_radius:%f chroma_strength:%f\n", "Apply shape adaptive blur.", "set luma radius", "luma_pre_filter_radius", "set luma pre-filter radius", "lpfr", "set chroma radius", "chroma_pre_filter_radius", "set chroma pre-filter radius", "cpfr", "Rescaled value for width or height is too big.\n", "srcw", "srch", "src_format", "dstw", "dsth", "dst_format", "sws_flags", "param0", "param1", "src_range", "dst_range", "src_h_chr_pos", "src_v_chr_pos", "dst_h_chr_pos", "dst_v_chr_pos", "w:%d h:%d fmt:%s sar:%d/%d -> w:%d h:%d fmt:%s sar:%d/%d flags:0x%0x\n", "Error when evaluating the expression '%s'.\nMaybe the expression for out_w:'%s' or for out_h:'%s' is self-referencing.\n", "Size and width/height expressions cannot be set at the same time.\n", "Invalid size '%s'\n", "w:%s h:%s flags:'%s' interl:%d\n", "Detected unsupported YCgCo colorspace.\n", "scale2ref", "Scale the input video size and/or convert the image format.", "Output video width", "Output video height", "Flags to pass to libswscale", "interl", "set interlacing", "in_color_matrix", "set input YCbCr type", "out_color_matrix", "set output YCbCr type", "in_range", "set input color range", "out_range", "set output color range", "jpeg", "mpeg", "in_v_chr_pos", "input vertical chroma position in luma grid/256", "in_h_chr_pos", "input horizontal chroma position in luma grid/256", "out_v_chr_pos", "output vertical chroma position in luma grid/256", "out_h_chr_pos", "output horizontal chroma position in luma grid/256", "force_original_aspect_ratio", "decrease or increase w/h if necessary to keep the original AR", "force_oar", "disable", "decrease", "increase", "Scaler param 0", "Scaler param 1", "Scale the input video size and/or convert the image format to the given reference.", "ohsub", "ovsub", "height must be even\n", "separatefields", "Split input video frames into fields.", "setfield", "Force field for the output video frame.", "select interlace mode", "keep the same input field", "mark as bottom-field-first", "mark as top-field-first", "prog", "mark as progressive", "config %s time_base: %d/%d, frame_rate: %d/%d\n", "n:%4lld pts:%7s pts_time:%-7s pos:%9lld fmt:%s sar:%d/%d s:%dx%d i:%c iskey:%d type:%c checksum:%08X plane_checksum:[%08X", " %08X", "] mean:[", "%lld ", "%3.1f ", "pan/scan", "A/53 closed captions (%d bytes)", "stereoscopic information: ", "type - ", "side by side", "top and bottom", "frame alternate", "checkerboard", "interleaved lines", "interleaved columns", "side by side (quincunx subsampling)", " (inverted)", "displaymatrix: rotation of %.2f degrees", "afd: value of %u", "unknown side data type %d (%d bytes)", "showinfo", "Show textual information for each video frame.", "showpalette", "Display frame palette", "set pixel box size", "Non-existing input plane #%d mapped to output plane #%d.\n", "Cannot map between a subsampled chroma plane and a luma or alpha plane.\n", "Cannot map between a palette plane and a data plane.\n", "shuffleplanes", "Shuffle video planes", "map0", "Index of the input plane to be used as the first output plane ", "map1", "Index of the input plane to be used as the second output plane ", "map2", "Index of the input plane to be used as the third output plane ", "map3", "Index of the input plane to be used as the fourth output plane ", "lavfi.signalstats.YMIN", "lavfi.signalstats.YLOW", "lavfi.signalstats.YAVG", "lavfi.signalstats.YHIGH", "lavfi.signalstats.YMAX", "lavfi.signalstats.UMIN", "lavfi.signalstats.ULOW", "lavfi.signalstats.UAVG", "lavfi.signalstats.UHIGH", "lavfi.signalstats.UMAX", "lavfi.signalstats.VMIN", "lavfi.signalstats.VLOW", "lavfi.signalstats.VAVG", "lavfi.signalstats.VHIGH", "lavfi.signalstats.VMAX", "lavfi.signalstats.SATMIN", "lavfi.signalstats.SATLOW", "lavfi.signalstats.SATAVG", "lavfi.signalstats.SATHIGH", "lavfi.signalstats.SATMAX", "lavfi.signalstats.HUEMED", "lavfi.signalstats.HUEAVG", "lavfi.signalstats.YDIF", "lavfi.signalstats.UDIF", "lavfi.signalstats.VDIF", "lavfi.signalstats.%s", "TOUT", "VREP", "BRNG", "signalstats", "Generate statistics from video analysis.", "stat", "set statistics filters", "filters", "tout", "analyze pixels for temporal outliers", "vrep", "analyze video lines for vertical line repetition", "brng", "analyze for pixels outside of broadcast range", "set video filter", "highlight pixels that depict temporal outliers", "highlight video lines that depict vertical line repetition", "highlight pixels that are outside of broadcast range", "set highlight color", "yellow", "luma_radius:%f luma_strength:%f luma_threshold:%d chroma_radius:%f chroma_strength:%f chroma_threshold:%d\n", "smartblur", "Blur the input video without impacting the outlines.", "luma_threshold", "set luma threshold", "chroma_threshold", "set chroma threshold", "bits_per_sample", "Apply a simple post processing filter.", "lavfi.ssim.", "lavfi.ssim.All", "lavfi.ssim.dB", "n:%lld ", "All:%f (%f)\n", "%c:%f ", " %c:%f", "SSIM%s All:%f (%f)\n", "ssim", "Calculate the SSIM between two video streams.", "vstack", "Input %d width %d does not match input %d width %d.\n", "Input %d height %d does not match input %d height %d.\n", "Stack video inputs vertically.", "hstack", "Stack video inputs horizontally.", "width must be even\n", "height must be multiple of 4\n", "input format %d is not supported\n", "output format %d is not supported\n", "libavfilter/vf_stereo3d.c", "stereo3d", "Convert video stereoscopic 3D view.", "set input format", "ab2l", "above below half height left first", "ab2r", "above below half height right first", "above below left first", "above below right first", "alternating frames left first", "alternating frames right first", "sbs2l", "side by side half width left first", "sbs2r", "side by side half width right first", "sbsl", "side by side left first", "sbsr", "side by side right first", "agmc", "anaglyph green magenta color", "agmd", "anaglyph green magenta dubois", "agmg", "anaglyph green magenta gray", "agmh", "anaglyph green magenta half color", "arbg", "anaglyph red blue gray", "arcc", "anaglyph red cyan color", "arcd", "anaglyph red cyan dubois", "arcg", "anaglyph red cyan gray", "arch", "anaglyph red cyan half color", "argg", "anaglyph red green gray", "aybc", "anaglyph yellow blue color", "aybd", "anaglyph yellow blue dubois", "aybg", "anaglyph yellow blue gray", "aybh", "anaglyph yellow blue half color", "interleave rows left first", "interleave rows right first", "mono left", "mono right", "super2xsai", "Scale the input by 2x using the Super2xSaI pixel art algorithm.", "swapuv", "Swap U and V components.", "Telecine pattern %s yields up to %d frames per frame, pts advance factor: %d/%d\n", "telecine", "Apply a telecine pattern.", "frame id #%d (pts_time=%f) selected from a set of %d images\n", "Allocation failure, try to lower the number of frames\n", "batch size: %d frames\n", "thumbnail", "Select the most representative frame in a given sequence of consecutive frames.", "set the frames batch size", "Tile size %ux%u is insane.\n", "nb_frames must be less than or equal to %dx%d=%d\n", "Total width %ux%u is too much.\n", "Total height %ux%u is too much.\n", "tile", "Tile several successive frames together.", "layout", "set grid size", "set maximum number of frame to render", "margin", "set outer border margin in pixels", "padding", "set inner border thickness in pixels", "set the color of the unused area", "low_pass_filter flag ignored with mode %d\n", "mode:%d filter:%s h:%d -> h:%d\n", "libavfilter/vf_tinterlace.c", "tinterlace", "Perform temporal field interlacing.", "merge", "merge fields", "drop_even", "drop even fields", "drop_odd", "drop odd fields", "pad alternate lines with black", "interleave_top", "interleave top and bottom fields", "interleave_bottom", "interleave bottom and top fields", "interlacex2", "interlace fields from two consecutive frames", "low_pass_filter", "vlpf", "exact_tb", "force a timebase which can represent timestamps exactly", "clockwise", "counterclockwise", "dir values greater than 3 are deprecated, use the passthrough option instead\n", "w:%d h:%d -> w:%d h:%d (passthrough mode)\n", "w:%d h:%d dir:%d -> w:%d h:%d rotation:%s vflip:%d\n", "transpose", "Transpose input video.", "set transpose direction", "cclock_flip", "rotate counter-clockwise with vertical flip", "clock", "rotate clockwise", "cclock", "rotate counter-clockwise", "clock_flip", "rotate clockwise with vertical flip", "passthrough", "do not apply transposition if the input matches the specified geometry", "always apply transposition", "portrait", "preserve portrait geometry", "landscape", "preserve landscape geometry", "sharpen", "Invalid even size for %s matrix size %dx%d\n", "effect:%s type:%s msize_x:%d msize_y:%d amount:%0.2f\n", "unsharp", "Sharpen or blur the input video.", "luma_msize_x", "set luma matrix horizontal size", "luma_msize_y", "set luma matrix vertical size", "luma_amount", "set luma effect strength", "chroma_msize_x", "set chroma matrix horizontal size", "chroma_msize_y", "set chroma matrix vertical size", "chroma_amount", "set chroma effect strength", "SNOW encoder not found.\n", "avctx_enc->codec", "libavfilter/vf_uspp.c", "uspp", "Apply Ultra Simple / Slow Post-processing filter.", "libavfilter/vf_vectorscope.c", "vectorscope", "Video vectorscope.", "set vectorscope mode", "gray", "color3", "color4", "set color component on X axis", "set color component on Y axis", "set intensity", "envelope", "set envelope", "instant", "peak+instant", "vflip", "Flip the input video vertically.", "Unable to parse expression for 'angle'\n", "Unable to parse expression for 'x0'\n", "Unable to parse expression for 'y0'\n", "xscale=%f yscale=%f dmax=%f\n", "vignette", "Make or reverse a vignette effect.", "set lens angle", "PI/5", "set circle center position on x-axis", "set circle center position on y-axis", "set forward/backward mode", "forward", "backward", "eval expressions for each frame", "set dithering", "aspect", "set aspect ratio", "w3fdif", "Apply Martin Weston three field deinterlace.", "filter", "specify the filter", "simple", "complex", "deint", "specify which frames to deinterlace", "deinterlace all frames", "interlaced", "only deinterlace frames marked as interlaced", "Video waveform monitor.", "set mirroring", "display", "set components to display", "set envelope to display", "set filter", "flat", "aflat", "achroma", "Scale the input using xBR algorithm.", "Video of less than 3 columns or lines is not supported\n", "libavfilter/vf_yadif.c", "Failed to reallocate frame\n", "Reallocating frame due to differing stride\n", "yadif", "Deinterlace the input image.", "specify the interlacing mode", "send_frame", "send one frame for each frame", "send_field", "send one frame for each field", "send_frame_nospatial", "send one frame for each frame, but skip spatial interlacing check", "send_field_nospatial", "send one frame for each field, but skip spatial interlacing check", "specify the assumed picture field parity", "zoompan", "Apply Zoom & Pan effect.", "set the zoom expression", "set the duration expression", "set the output image size", "hd720", "pduration", "time", "pzoom", "nullsink", "Do absolutely nothing with the input video.", "w:%d\n", "The specified width is %d which cannot contain the provided string width of %d\n", "%d %c\n", "320x518", "Only one of the filename or pattern options can be used\n", "s:%dx%d r:%d/%d rule:%d stitch:%d scroll:%d full:%d seed:%u\n", "cellauto", "Create pattern generated by an elementary cellular automaton.", "read initial pattern from file", "set initial pattern", "rule", "set rule", "random_fill_ratio", "set fill ratio for filling initial grid randomly", "random_seed", "set the seed for filling the initial grid randomly", "scroll pattern downward", "start_full", "start filling the whole video", "stitch", "stitch boundaries", "320x240", "bBsS", "Invalid rule code '%s' provided\n", "Mold color is set while mold isn't, ignoring the color.\n", "h:%d max_w:%d\n", "The specified size is %dx%d which cannot contain the provided file size of %dx%d\n", "%d:%d %c\n", "s:%dx%d r:%d/%d rule:%s stay_rule:%d born_rule:%d stitch:%d seed:%u\n", "life", "Create life.", "set source file", "B3/S23", "mold", "set mold speed for dead cells", "life_color", "set life color", "death_color", "set death color", "mold_color", "set mold color", "Mandelbrot cache is too small!\n", "mandelbrot", "Render a Mandelbrot fractal.", "set frame size", "set frame rate", "maxiter", "set max iterations number", "start_x", "set the initial x position", "start_y", "set the initial y position", "start_scale", "set the initial scale value", "end_scale", "set the terminal scale value", "set the terminal pts value", "bailout", "set the bailout value", "morphxf", "set morph x frequency", "morphyf", "set morph y frequency", "morphamp", "set morph amplitude", "outer", "set outer coloring mode", "iteration_count", "set iteration count mode", "normalized_iteration_count", "set normalized iteration count mode", "set white mode", "outz", "set outz mode", "inner", "set inner coloring mode", "set black mode", "period", "set period mode", "convergence", "show time until convergence", "mincol", "color based on point closest to the origin of the iterations", "rate:%d/%d duration:%f\n", "mptestsrc", "Generate various test pattern.", "set video duration", "test", "set test to perform", "dc_luma", "dc_chroma", "freq_luma", "freq_chroma", "amp_luma", "amp_chroma", "ring1", "ring2", "size:%dx%d rate:%d/%d duration:%f sar:%d/%d\n", "w == h && w == level*level*level", "libavfilter/vsrc_testsrc.c", "x + w <= test->w", "y + h <= test->h", "allrgb", "Generate all RGB colors.", "set video sample aspect ratio", "allyuv", "Generate all yuv colors.", "smptehdbars", "Generate SMPTE HD color bars.", "smptebars", "Generate SMPTE color bars.", "rgbtestsrc", "Generate RGB test pattern.", "testsrc", "Generate test pattern.", "decimals", "set number of decimals to show", "nullsrc", "Null video source, return unprocessed video frames.", "haldclutsrc", "Provide an identity Hald CLUT.", "set level", "Provide an uniformly colored input.", "FFmpeg version 2.8.2"], "stringidentifiers": ["aeval", "same", "default", "exprs", "channel_layout", "aevalsrc", "nb_samples", "sample_rate", "duration", "nb_in_channels", "nb_out_channels", "adelay", "delays", "aecho", "in_gain", "out_gain", "decays", "acrossfade", "crossfade0", "crossfade1", "overlap", "curve1", "qsin", "esin", "hsin", "logarithmic", "ipar", "quadratic", "cubic", "parabola", "exponential", "iqsin", "ihsin", "dese", "desi", "curve2", "afade", "type", "start_sample", "start_time", "curve", "aformat", "sample_fmts", "sample_rates", "channel_layouts", "amerge", "inputs", "info", "amix", "longest", "shortest", "first", "dropout_transition", "anull", "apad", "packet_size", "pad_len", "whole_len", "aphaser", "delay", "decay", "speed", "triangular", "sinusoidal", "aresample", "asetnsamples", "nb_out_samples", "asetrate", "NOPTS", "none", "unknown", "Effects", "Dialogue", "Commentary", "Emergency", "Karaoke", "ashowinfo", "DC_offset", "Min_level", "Max_level", "Min_difference", "Max_difference", "Mean_difference", "Peak_level", "RMS_level", "RMS_peak", "RMS_trough", "Crest_factor", "Flat_factor", "Peak_count", "Bit_depth", "astats", "length", "metadata", "reset", "astreamsync", "out1", "out2", "expr", "tempo", "atempo", "biquad", "allpass", "frequency", "width_type", "octave", "slope", "width", "highpass", "poles", "lowpass", "bandreject", "bandpass", "treble", "gain", "bass", "equalizer", "channelmap", "channelsplit", "stereo", "chorus", "speeds", "depths", "compand", "attacks", "points", "volume", "dcshift", "shift", "limitergain", "dynaudnorm", "earwax", "flanger", "depth", "regen", "shape", "phase", "interp", "itype", "linear", "join", "args", "replaygain", "sidechaincompress", "main", "sidechain", "threshold", "ratio", "attack", "release", "makeup", "knee", "link", "average", "maximum", "detection", "peak", "silencedetect", "noise", "silenceremove", "start_periods", "start_duration", "start_threshold", "stop_periods", "stop_duration", "stop_threshold", "leave_silence", "precision", "fixed", "float", "double", "eval", "once", "frame", "drop", "ignore", "track", "album", "replaygain_preamp", "replaygain_noclip", "nb_channels", "nb_consumed_samples", "startpts", "startt", "volumedetect", "anullsink", "anullsrc", "sine", "beep_factor", "samples_per_frame", "channels", "aphasemeter", "rate", "size", "avectorscope", "mode", "lissajous", "lissajous_xy", "polar", "zoom", "concat", "unsafe", "midi", "a_weighting", "b_weighting", "c_weighting", "timeclamp", "freq", "showcqt", "tlength", "coeffclamp", "gamma", "gamma2", "fullhd", "count", "fontfile", "fontcolor", "showfreqs", "line", "ascale", "sqrt", "cbrt", "fscale", "rlog", "win_size", "w128", "w256", "w512", "w1024", "w2048", "w4096", "w8192", "w16384", "w32768", "w65536", "win_func", "rect", "Rectangular", "bartlett", "Bartlett", "hanning", "Hanning", "hamming", "Hamming", "blackman", "Blackman", "welch", "Welch", "flattop", "bharris", "bnuttall", "bhann", "Sine", "nuttall", "Nuttall", "averaging", "colors", "showspectrum", "slide", "replace", "scroll", "fullframe", "combined", "separate", "color", "channel", "intensity", "scale", "saturation", "hann", "showvolume", "VOLUME", "CHANNEL", "showwavespic", "split_channels", "showwaves", "point", "cline", "ping", "enable", "format", "noformat", "frei0r", "frei0r_src", "AVFilter", "thread_type", "slice", "fifo", "afifo", "AVFilterGraph", "threads", "scale_sws_opts", "aresample_swr_opts", "pix_fmts", "channel_counts", "all_channel_counts", "buffersink", "abuffersink", "ffbuffersink", "ffabuffersink", "abuffer", "buffer", "time_base", "sample_fmt", "video_size", "height", "pix_fmt", "time_base_num", "time_base_den", "sar_num", "sar_den", "pixel_aspect", "frame_rate", "sws_param", "pix_desc", "mainpic", "adrawgraph", "drawgraph", "white", "rscroll", "in_channel_layout", "in_sample_rate", "in_sample_fmt", "out_channel_layout", "out_sample_rate", "out_sample_fmt", "out0", "ebur128", "video", "meter", "framelog", "level", "verbose", "sample", "true", "ainterleave", "nb_inputs", "interleave", "perms", "aperms", "toggle", "random", "seed", "areverse", "reverse", "scene", "select", "outputs", "aselect", "start_pts", "prev_pts", "prev_selected_pts", "start_t", "prev_t", "prev_selected_t", "pict_type", "PICT_TYPE_I", "PICT_TYPE_P", "PICT_TYPE_B", "PICT_TYPE_S", "PICT_TYPE_SI", "PICT_TYPE_SP", "PICT_TYPE_BI", "interlace_type", "PROGRESSIVE", "TOPFIRST", "BOTTOMFIRST", "consumed_samples_n", "samples_n", "selected_n", "prev_selected_n", "enter", "leave", "asendcmd", "sendcmd", "commands", "filename", "framesync", "flags", "image2", "asetpts", "setpts", "FRAME_RATE", "INTERLACED", "NB_CONSUMED_SAMPLES", "NB_SAMPLES", "PREV_INPTS", "PREV_INT", "PREV_OUTPTS", "PREV_OUTT", "SAMPLE_RATE", "STARTPTS", "STARTT", "RTCTIME", "RTCSTART", "asettb", "intb", "settb", "AVTB", "asplit", "split", "amovie", "movie", "format_name", "stream_index", "seek_point", "streams", "loop", "atrim", "starti", "endi", "end_pts", "durationi", "end_sample", "start", "trim", "start_frame", "end_frame", "alphamerge", "alpha", "setsar", "setdar", "dar_den", "hsub", "vsub", "atadenoise", "bbox", "min_val", "blackdetect", "black_min_duration", "picture_black_ratio_th", "pic_th", "pixel_black_th", "pix_th", "blackframe", "amount", "thresh", "tblend", "c0_mode", "c1_mode", "c2_mode", "c3_mode", "all_mode", "addition", "burn", "darken", "difference", "difference128", "divide", "dodge", "exclusion", "glow", "hardlight", "hardmix", "lighten", "linearlight", "multiply", "negation", "normal", "overlay", "phoenix", "pinlight", "reflect", "screen", "softlight", "subtract", "vividlight", "c0_expr", "c1_expr", "c2_expr", "c3_expr", "all_expr", "c0_opacity", "c1_opacity", "c2_opacity", "c3_opacity", "all_opacity", "blend", "bottom", "repeatlast", "BOTTOM", "boxblur", "luma_radius", "luma_power", "chroma_radius", "chroma_power", "alpha_radius", "alpha_power", "codecview", "colorbalance", "colorchannelmixer", "colorkey", "black", "similarity", "colorlevels", "rimin", "gimin", "bimin", "aimin", "rimax", "gimax", "bimax", "aimax", "romin", "gomin", "bomin", "aomin", "romax", "gomax", "bomax", "aomax", "colormatrix", "bt709", "bt601", "smpte240m", "color_mode", "bt470", "bt470bg", "smpte170m", "copy", "cover_rect", "cover", "blur", "out_w", "out_h", "crop", "keep_aspect", "in_w", "in_h", "cropdetect", "limit", "round", "reset_count", "max_outliers", "last", "curves", "preset", "preset_name", "color_negative", "cross_process", "darker", "increase_contrast", "lighter", "linear_contrast", "medium_contrast", "negative", "strong_contrast", "vintage", "master", "green", "blue", "psfile", "dctdnoiz", "sigma", "deband", "range", "direction", "clean_src", "decimate", "cycle", "dupthresh", "scthresh", "blockx", "blocky", "ppsrc", "chroma", "dejudder", "delogo", "band", "show", "deshake", "edge", "blank", "original", "clamp", "mirror", "blocksize", "contrast", "search", "smode", "exhaustive", "less", "opencl", "detelecine", "first_field", "field", "pattern", "invert", "drawgrid", "thickness", "drawbox", "edgedetect", "high", "wires", "colormix", "elbg", "codebook_length", "nb_steps", "pal8", "brightness", "gamma_r", "gamma_g", "gamma_b", "gamma_weight", "init", "alphaextract", "extractplanes", "planes", "fade", "nb_frames", "weight_Y", "weight_U", "weight_V", "fftfilt", "dc_Y", "dc_U", "dc_V", "field_type", "fieldmatch", "order", "auto", "pc_n", "pc_u", "pc_n_ub", "pcn_ub", "mchroma", "combmatch", "combmatching", "full", "combdbg", "dbglvl", "pcnub", "cthresh", "combpel", "down", "fieldorder", "find_rect", "object", "mipmaps", "xmin", "ymin", "xmax", "ymax", "zero", "near", "framepack", "packed", "left", "right", "frameseq", "lines", "columns", "framerate", "interp_start", "interp_end", "scene_change_detect", "framestep", "step", "fspp", "quality", "strength", "use_bframe_qp", "desc", "lum_expr", "cb_expr", "cr_expr", "alpha_expr", "red_expr", "green_expr", "blue_expr", "gradfun", "radius", "hflip", "histeq", "antibanding", "weak", "strong", "histogram", "levels", "waveform", "color2", "level_height", "scale_height", "waveform_mode", "column", "waveform_mirror", "display_mode", "parade", "levels_mode", "components", "hqdn3d", "luma_spatial", "chroma_spatial", "luma_tmp", "chroma_tmp", "neither", "progressive", "undetermined", "idet", "intl_thres", "prog_thres", "rep_thres", "half_life", "analyze_interlaced_flag", "luma_mode", "deinterleave", "chroma_mode", "alpha_mode", "luma_swap", "chroma_swap", "alpha_swap", "with", "without", "interlace", "scan", "kerndeint", "sharp", "twoway", "lenscorrection", "negval", "negate", "negate_alpha", "lutrgb", "lutyuv", "clip", "gammaval", "gammaval709", "maxval", "minval", "clipval", "cube", "DOMAIN_", "values", "haldclut", "clut", "interp_mode", "nearest", "trilinear", "tetrahedral", "lut3d", "file", "memc_only", "no_bitstream", "mcdeint", "fast", "medium", "slow", "extra_slow", "parity", "mergeplanes", "mapping", "keep", "mpdecimate", "frac", "erosion", "dilation", "deflate", "inflate", "threshold0", "threshold1", "threshold2", "threshold3", "coordinates", "all_seed", "all_strength", "alls", "all_flags", "allf", "c0_seed", "c0_strength", "c0_flags", "c1_seed", "c1_strength", "c1_flags", "c2_seed", "c2_strength", "c2_flags", "c3_seed", "c3_strength", "c3_flags", "null", "eof_action", "repeat", "endall", "pass", "yuv420", "yuv422", "yuv444", "main_w", "main_h", "overlay_w", "overlay_h", "owdenoise", "luma_strength", "chroma_strength", "palettegen", "max_colors", "reserve_transparent", "stats_mode", "diff", "paletteuse", "palette", "dither", "dithering_mode", "bayer", "heckbert", "floyd_steinberg", "sierra2", "sierra2_4a", "bayer_scale", "diff_mode", "rectangle", "debug_kdtree", "color_search", "nns_iterative", "nns_recursive", "bruteforce", "mean_err", "debug_accuracy", "perspective", "interpolation", "sense", "source", "destination", "analyze", "pixdesctest", "subfilters", "hard", "soft", "psnr", "reference", "stats_file", "pullup", "luma", "known", "frames", "removegrain", "removelogo", "repeatfields", "angle", "rotate", "rotw", "roth", "fillcolor", "bilinear", "luma_pre_filter_radius", "lpfr", "chroma_pre_filter_radius", "cpfr", "srcw", "srch", "src_format", "dstw", "dsth", "dst_format", "sws_flags", "param0", "param1", "src_range", "dst_range", "src_h_chr_pos", "src_v_chr_pos", "dst_h_chr_pos", "dst_v_chr_pos", "scale2ref", "interl", "in_color_matrix", "out_color_matrix", "in_range", "out_range", "jpeg", "mpeg", "in_v_chr_pos", "in_h_chr_pos", "out_v_chr_pos", "out_h_chr_pos", "force_original_aspect_ratio", "force_oar", "disable", "decrease", "increase", "ohsub", "ovsub", "separatefields", "setfield", "prog", "checkerboard", "showinfo", "showpalette", "shuffleplanes", "map0", "map1", "map2", "map3", "TOUT", "VREP", "BRNG", "signalstats", "stat", "filters", "tout", "vrep", "brng", "yellow", "smartblur", "luma_threshold", "chroma_threshold", "bits_per_sample", "ssim", "vstack", "hstack", "stereo3d", "ab2l", "ab2r", "sbs2l", "sbs2r", "sbsl", "sbsr", "agmc", "agmd", "agmg", "agmh", "arbg", "arcc", "arcd", "arcg", "arch", "argg", "aybc", "aybd", "aybg", "aybh", "super2xsai", "swapuv", "telecine", "thumbnail", "tile", "layout", "margin", "padding", "tinterlace", "merge", "drop_even", "drop_odd", "interleave_top", "interleave_bottom", "interlacex2", "low_pass_filter", "vlpf", "exact_tb", "clockwise", "counterclockwise", "transpose", "cclock_flip", "clock", "cclock", "clock_flip", "passthrough", "portrait", "landscape", "sharpen", "unsharp", "luma_msize_x", "luma_msize_y", "luma_amount", "chroma_msize_x", "chroma_msize_y", "chroma_amount", "uspp", "vectorscope", "gray", "color3", "color4", "envelope", "instant", "vflip", "vignette", "forward", "backward", "aspect", "w3fdif", "filter", "simple", "complex", "deint", "interlaced", "display", "flat", "aflat", "achroma", "yadif", "send_frame", "send_field", "send_frame_nospatial", "send_field_nospatial", "zoompan", "hd720", "pduration", "time", "pzoom", "nullsink", "cellauto", "rule", "random_fill_ratio", "random_seed", "start_full", "stitch", "bBsS", "life", "mold", "life_color", "death_color", "mold_color", "mandelbrot", "maxiter", "start_x", "start_y", "start_scale", "end_scale", "bailout", "morphxf", "morphyf", "morphamp", "outer", "iteration_count", "normalized_iteration_count", "outz", "inner", "period", "convergence", "mincol", "mptestsrc", "test", "dc_luma", "dc_chroma", "freq_luma", "freq_chroma", "amp_luma", "amp_chroma", "ring1", "ring2", "allrgb", "allyuv", "smptehdbars", "smptebars", "rgbtestsrc", "testsrc", "decimals", "nullsrc", "haldclutsrc"], "debugstrings": ["libavfilter license: GPL version 2 or later", "Color conversion not implemented for %s\n", "Impossible to create scale context for the conversion fmt:%s s:%dx%d -> fmt:%s s:%dx%d\n", "error calculating conversion coefficients\n", "Timebase conversion is not exact\n", "FFmpeg version 2.8.2", "GCC: (GNU) 4.6 20120106 (prerelease)", "GCC: (GNU) 4.8"], "localsymbols": [""], "dependencies": ["libswresample-1.so", "libm.so", "libavutil-54.so", "libc.so", "libpostproc-53.so", "libswscale-3.so", "libavformat-56.so", "libavcodec-56.so"], "elfname": "libavfilter-5.so"}